1
00:00:10,370 --> 00:00:13,690
hi I'm<font color="#E5E5E5"> Cara</font>

2
00:00:14,680 --> 00:00:21,430
and good afternoon everybody many thanks

3
00:00:18,310 --> 00:00:25,360
<font color="#E5E5E5">for joining</font><font color="#CCCCCC"> and everybody who</font><font color="#E5E5E5"> is also on</font>

4
00:00:21,430 --> 00:00:26,619
the remote<font color="#CCCCCC"> excited to be</font><font color="#E5E5E5"> here and for</font>

5
00:00:25,360 --> 00:00:29,590
the<font color="#CCCCCC"> first time talking about the</font>

6
00:00:26,619 --> 00:00:31,810
<font color="#CCCCCC">segmenting v6 technology</font><font color="#E5E5E5"> we have</font>

7
00:00:29,590 --> 00:00:35,050
<font color="#E5E5E5">developed this</font><font color="#CCCCCC"> technology for for some</font>

8
00:00:31,810 --> 00:00:37,780
time<font color="#CCCCCC"> now so very happy and excited to</font>

9
00:00:35,050 --> 00:00:41,500
share<font color="#E5E5E5"> what</font><font color="#CCCCCC"> we have developed</font><font color="#E5E5E5"> and take</font>

10
00:00:37,780 --> 00:00:44,320
your opinions<font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can see my</font>

11
00:00:41,500 --> 00:00:47,140
co-authors<font color="#E5E5E5"> Comcast was supposed to join</font>

12
00:00:44,320 --> 00:00:49,230
this this talk<font color="#E5E5E5"> but due to last-minute</font>

13
00:00:47,140 --> 00:00:51,850
changes they are not able<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> it</font>

14
00:00:49,230 --> 00:00:54,059
<font color="#CCCCCC">this content has</font><font color="#E5E5E5"> been reviewed by them</font>

15
00:00:51,850 --> 00:00:59,860
<font color="#E5E5E5">so we'll be</font><font color="#CCCCCC"> covering the content</font>

16
00:00:54,059 --> 00:01:00,280
including the use cases of<font color="#E5E5E5"> Comcast all</font>

17
00:00:59,860 --> 00:01:08,680
<font color="#E5E5E5">right</font>

18
00:01:00,280 --> 00:01:10,690
let's dive straight<font color="#E5E5E5"> into it as you</font><font color="#CCCCCC"> can</font>

19
00:01:08,680 --> 00:01:12,700
<font color="#CCCCCC">see there's</font><font color="#E5E5E5"> a big agenda</font><font color="#CCCCCC"> we'll be</font>

20
00:01:10,690 --> 00:01:15,670
covering a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> use cases</font><font color="#CCCCCC"> we'll be</font>

21
00:01:12,700 --> 00:01:18,700
starting<font color="#CCCCCC"> with the concept of segment</font>

22
00:01:15,670 --> 00:01:20,819
routing<font color="#E5E5E5"> what is segment routing why we</font>

23
00:01:18,700 --> 00:01:23,590
have developed<font color="#CCCCCC"> it will be touching</font><font color="#E5E5E5"> into</font>

24
00:01:20,819 --> 00:01:25,509
<font color="#E5E5E5">segment routing v6 why we have developed</font>

25
00:01:23,590 --> 00:01:28,600
segment routing v6 and the<font color="#CCCCCC"> most</font>

26
00:01:25,509 --> 00:01:31,179
interesting<font color="#CCCCCC"> part is the use cases</font><font color="#E5E5E5"> which</font>

27
00:01:28,600 --> 00:01:33,669
impact how how do we deploy this these

28
00:01:31,179 --> 00:01:36,099
segments<font color="#E5E5E5"> auditing v6 in the network so</font>

29
00:01:33,670 --> 00:01:37,360
as you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> there is a lot of use</font>

30
00:01:36,099 --> 00:01:40,090
<font color="#CCCCCC">cases which</font><font color="#E5E5E5"> I have listed over here</font>

31
00:01:37,360 --> 00:01:42,250
<font color="#CCCCCC">they're more off it</font><font color="#E5E5E5"> so obviously if you</font>

32
00:01:40,090 --> 00:01:44,110
have any questions if you'd like to

33
00:01:42,250 --> 00:01:45,789
partner<font color="#E5E5E5"> please reach out</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> after the</font>

34
00:01:44,110 --> 00:01:49,959
talk<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> can discuss</font><font color="#CCCCCC"> some more</font><font color="#E5E5E5"> and I</font>

35
00:01:45,789 --> 00:01:52,360
can explain<font color="#CCCCCC"> some more</font><font color="#E5E5E5"> technically so</font>

36
00:01:49,959 --> 00:01:55,179
what is segment routing segment routing

37
00:01:52,360 --> 00:01:58,450
is source routing<font color="#CCCCCC"> we have developed</font>

38
00:01:55,179 --> 00:02:02,890
segment routing for for about<font color="#E5E5E5"> four or</font>

39
00:01:58,450 --> 00:02:05,440
<font color="#E5E5E5">five years we started in late 2012</font><font color="#CCCCCC"> it's</font>

40
00:02:02,890 --> 00:02:07,780
a source routing where you can where the

41
00:02:05,440 --> 00:02:10,538
source<font color="#E5E5E5"> can select a path over the</font>

42
00:02:07,780 --> 00:02:12,760
<font color="#CCCCCC">network and it's a topological path</font><font color="#E5E5E5"> if</font>

43
00:02:10,538 --> 00:02:15,488
you have<font color="#CCCCCC"> nfe nodes in the network</font><font color="#E5E5E5"> it can</font>

44
00:02:12,760 --> 00:02:17,560
<font color="#CCCCCC">even select NFV nodes</font><font color="#E5E5E5"> as part of the as</font>

45
00:02:15,489 --> 00:02:21,069
part<font color="#E5E5E5"> of the path from source to the</font>

46
00:02:17,560 --> 00:02:24,189
destination<font color="#CCCCCC"> and on top of it it also</font>

47
00:02:21,069 --> 00:02:26,319
serves and serves the application which

48
00:02:24,189 --> 00:02:27,510
has some<font color="#CCCCCC"> SLA requires like latency</font>

49
00:02:26,319 --> 00:02:30,970
bandwidth

50
00:02:27,510 --> 00:02:34,390
we do not<font color="#E5E5E5"> maintain</font><font color="#CCCCCC"> any state in the</font>

51
00:02:30,970 --> 00:02:36,790
network<font color="#CCCCCC"> and that's a beauty of it</font>

52
00:02:34,390 --> 00:02:39,159
because<font color="#CCCCCC"> that way it can scale</font><font color="#E5E5E5"> it's a</font>

53
00:02:36,790 --> 00:02:40,390
<font color="#E5E5E5">scalable</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> proven in the last four</font>

54
00:02:39,159 --> 00:02:42,069
or five<font color="#CCCCCC"> years that it can scale very</font>

55
00:02:40,390 --> 00:02:45,760
well<font color="#E5E5E5"> in the service provider networks in</font>

56
00:02:42,069 --> 00:02:48,339
<font color="#E5E5E5">DC in van and it also on top of it</font>

57
00:02:45,760 --> 00:02:52,120
provides the automation<font color="#E5E5E5"> we have built a</font>

58
00:02:48,340 --> 00:02:54,250
technology<font color="#E5E5E5"> PIL FA it's it's done</font>

59
00:02:52,120 --> 00:02:55,959
everything is done automatically the IGP

60
00:02:54,250 --> 00:02:58,060
does the backup path calculations are

61
00:02:55,959 --> 00:03:02,280
you covering more into<font color="#CCCCCC"> a details of</font><font color="#E5E5E5"> that</font>

62
00:02:58,060 --> 00:03:06,250
and and just the mantra<font color="#CCCCCC"> of creating the</font>

63
00:03:02,280 --> 00:03:08,319
<font color="#CCCCCC">technology we have tried to simplify</font><font color="#E5E5E5"> the</font>

64
00:03:06,250 --> 00:03:10,780
deployment of it we try to simplify<font color="#E5E5E5"> the</font>

65
00:03:08,319 --> 00:03:13,629
<font color="#E5E5E5">automation of it and in the in the in</font>

66
00:03:10,780 --> 00:03:15,819
<font color="#CCCCCC">the in the need of</font><font color="#E5E5E5"> that we also try</font><font color="#CCCCCC"> to</font>

67
00:03:13,629 --> 00:03:20,439
<font color="#CCCCCC">eliminate the unnecessary protocols</font>

68
00:03:15,819 --> 00:03:23,560
which we don't need we developed the<font color="#CCCCCC"> pif</font>

69
00:03:20,439 --> 00:03:25,480
<font color="#E5E5E5">LF a technology for about three</font><font color="#CCCCCC"> four</font>

70
00:03:23,560 --> 00:03:26,739
years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> it has been shipping in the</font>

71
00:03:25,480 --> 00:03:28,358
products it has been very widely

72
00:03:26,739 --> 00:03:31,049
deployed and it's one<font color="#E5E5E5"> of the most</font>

73
00:03:28,359 --> 00:03:34,989
prevalent<font color="#E5E5E5"> use cases which is out there</font>

74
00:03:31,049 --> 00:03:37,480
<font color="#CCCCCC">what happens is</font><font color="#E5E5E5"> that once we have</font>

75
00:03:34,989 --> 00:03:39,579
<font color="#CCCCCC">determined that</font><font color="#E5E5E5"> a source wants to go</font>

76
00:03:37,480 --> 00:03:42,909
from<font color="#E5E5E5"> one point to another point</font>

77
00:03:39,579 --> 00:03:45,669
<font color="#E5E5E5">it uses an SR policy and that s our</font>

78
00:03:42,909 --> 00:03:46,870
policy is what is steered steering the

79
00:03:45,669 --> 00:03:50,019
traffic from the source<font color="#E5E5E5"> to the</font>

80
00:03:46,870 --> 00:03:53,560
<font color="#E5E5E5">destination</font><font color="#CCCCCC"> this technology</font><font color="#E5E5E5"> has been</font>

81
00:03:50,019 --> 00:03:56,079
<font color="#E5E5E5">deployed</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> SP</font><font color="#CCCCCC"> 4 data center and</font>

82
00:03:53,560 --> 00:03:58,150
for van so the use case is<font color="#E5E5E5"> very</font>

83
00:03:56,079 --> 00:04:01,750
prevalent<font color="#E5E5E5"> it's not constrained to one</font>

84
00:03:58,150 --> 00:04:03,729
domain<font color="#E5E5E5"> so it enables more usefulness for</font>

85
00:04:01,750 --> 00:04:05,919
<font color="#CCCCCC">the</font><font color="#E5E5E5"> technology the more significance of</font>

86
00:04:03,729 --> 00:04:14,560
the technology<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'll be going into</font>

87
00:04:05,919 --> 00:04:17,530
<font color="#E5E5E5">the details</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we started as I said</font>

88
00:04:14,560 --> 00:04:22,539
about 2012<font color="#E5E5E5"> about</font><font color="#CCCCCC"> four late-2012 four</font>

89
00:04:17,529 --> 00:04:25,000
years ago<font color="#CCCCCC"> and we have developed a good</font>

90
00:04:22,539 --> 00:04:28,090
strong adoption in in customer<font color="#E5E5E5"> network</font>

91
00:04:25,000 --> 00:04:30,810
<font color="#CCCCCC">with the scalability we have done a lot</font>

92
00:04:28,090 --> 00:04:33,489
<font color="#CCCCCC">of</font><font color="#E5E5E5"> standardization</font><font color="#CCCCCC"> segment routing team</font>

93
00:04:30,810 --> 00:04:35,590
have published over 30 drops<font color="#E5E5E5"> and</font>

94
00:04:33,490 --> 00:04:37,330
everything<font color="#CCCCCC"> which we do not a single</font>

95
00:04:35,590 --> 00:04:39,340
piece<font color="#CCCCCC"> of technology is not standardized</font>

96
00:04:37,330 --> 00:04:40,370
everything which we have written is in

97
00:04:39,340 --> 00:04:43,239
the IETF<font color="#CCCCCC"> you</font>

98
00:04:40,370 --> 00:04:45,650
<font color="#E5E5E5">can go read it and and it's about 30</font>

99
00:04:43,240 --> 00:04:50,840
documents which we have published for a

100
00:04:45,650 --> 00:04:54,739
<font color="#E5E5E5">segment routing</font><font color="#CCCCCC"> MPLS it's also a</font><font color="#E5E5E5"> de</font>

101
00:04:50,840 --> 00:04:58,369
<font color="#E5E5E5">facto Sdn we when we started on</font><font color="#CCCCCC"> segment</font>

102
00:04:54,740 --> 00:05:00,229
routing we we thought<font color="#E5E5E5"> about Sdn and how</font>

103
00:04:58,370 --> 00:05:01,880
the segment routing will impact Sdn

104
00:05:00,229 --> 00:05:04,849
<font color="#E5E5E5">whether</font><font color="#CCCCCC"> it's programmability the</font>

105
00:05:01,880 --> 00:05:07,790
automation<font color="#E5E5E5"> the overall framework of it</font>

106
00:05:04,850 --> 00:05:11,240
<font color="#E5E5E5">we have developed it with Sdn and mind</font>

107
00:05:07,790 --> 00:05:13,070
we have also<font color="#E5E5E5"> automated everything</font><font color="#CCCCCC"> so you</font>

108
00:05:11,240 --> 00:05:14,660
can have a centralized control<font color="#E5E5E5"> or you</font>

109
00:05:13,070 --> 00:05:17,930
can have a distributed<font color="#E5E5E5"> control it's</font>

110
00:05:14,660 --> 00:05:20,840
completely up to you<font color="#CCCCCC"> and of</font><font color="#E5E5E5"> course we</font>

111
00:05:17,930 --> 00:05:24,199
have a big commitment<font color="#E5E5E5"> for from the</font><font color="#CCCCCC"> fro</font>

112
00:05:20,840 --> 00:05:27,229
<font color="#E5E5E5">for our lead operators so we have</font>

113
00:05:24,199 --> 00:05:29,510
<font color="#E5E5E5">developed the technology with multi</font>

114
00:05:27,229 --> 00:05:36,740
vendor consensus<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we work very hard</font>

115
00:05:29,510 --> 00:05:39,080
<font color="#E5E5E5">to build that consensus over time now</font><font color="#CCCCCC"> I</font>

116
00:05:36,740 --> 00:05:42,530
gave<font color="#CCCCCC"> you a brief history about segment</font>

117
00:05:39,080 --> 00:05:48,909
routing let's dive into the objectives

118
00:05:42,530 --> 00:05:48,909
of segment routing v6<font color="#E5E5E5"> why it's needed</font><font color="#CCCCCC"> so</font>

119
00:05:51,789 --> 00:05:59,030
<font color="#CCCCCC">obviously with the IOT services and 5g</font>

120
00:05:55,849 --> 00:06:01,729
<font color="#E5E5E5">we are seeing a drastic evolution on the</font>

121
00:05:59,030 --> 00:06:06,770
edge<font color="#E5E5E5"> we are seeing if you look at the</font>

122
00:06:01,729 --> 00:06:09,080
data center<font color="#E5E5E5"> we are seeing a lot of micro</font>

123
00:06:06,770 --> 00:06:11,510
services clear migration towards micro

124
00:06:09,080 --> 00:06:14,570
services<font color="#E5E5E5"> container</font><font color="#CCCCCC"> based networking and</font>

125
00:06:11,510 --> 00:06:17,510
a drastic increase<font color="#CCCCCC"> in the services where</font>

126
00:06:14,570 --> 00:06:20,389
the<font color="#E5E5E5"> appliance would be requiring an ipv6</font>

127
00:06:17,510 --> 00:06:24,620
<font color="#E5E5E5">or IP reach ability it's clear to us</font>

128
00:06:20,389 --> 00:06:27,110
<font color="#CCCCCC">that the ipv6</font><font color="#E5E5E5"> will prevail and in the</font>

129
00:06:24,620 --> 00:06:30,830
modern IP architecture and the bigger

130
00:06:27,110 --> 00:06:34,789
space<font color="#CCCCCC"> a bigger space for the</font><font color="#E5E5E5"> ipv6 is an</font>

131
00:06:30,830 --> 00:06:38,000
obvious choice<font color="#E5E5E5"> so once you have laid</font>

132
00:06:34,789 --> 00:06:40,330
<font color="#CCCCCC">down the ipv6 reach ability question now</font>

133
00:06:38,000 --> 00:06:44,720
is that whether this will<font color="#CCCCCC"> happen or not</font>

134
00:06:40,330 --> 00:06:48,820
<font color="#E5E5E5">question is how do we address this ipv6</font>

135
00:06:44,720 --> 00:06:51,950
support<font color="#E5E5E5"> to to serve the applications and</font>

136
00:06:48,820 --> 00:06:54,020
let me give you one example where we

137
00:06:51,950 --> 00:07:00,139
have segment routing

138
00:06:54,020 --> 00:07:02,299
<font color="#CCCCCC">six</font><font color="#E5E5E5"> being used for</font><font color="#CCCCCC"> 5g where the 5g have</font>

139
00:07:00,139 --> 00:07:04,340
<font color="#E5E5E5">requirements like scalability it has</font>

140
00:07:02,300 --> 00:07:07,220
service requirements it has slicing

141
00:07:04,340 --> 00:07:10,039
traffic engineering and for all of that

142
00:07:07,220 --> 00:07:12,379
<font color="#E5E5E5">one one one would say one obvious choice</font>

143
00:07:10,039 --> 00:07:16,789
<font color="#CCCCCC">is to use RSVP</font><font color="#E5E5E5"> but we have seen some</font>

144
00:07:12,379 --> 00:07:19,639
scaling issues with RSVP<font color="#E5E5E5"> so what we are</font>

145
00:07:16,789 --> 00:07:21,560
proposing or<font color="#E5E5E5"> segment routing</font><font color="#CCCCCC"> v6 is is</font>

146
00:07:19,639 --> 00:07:23,659
going<font color="#CCCCCC"> to happen it's obvious than hand</font>

147
00:07:21,560 --> 00:07:26,930
<font color="#E5E5E5">it obvious to us</font><font color="#CCCCCC"> that segment routing e6</font>

148
00:07:23,659 --> 00:07:29,120
will prevail<font color="#CCCCCC"> and it will deliver the</font>

149
00:07:26,930 --> 00:07:33,020
same level<font color="#CCCCCC"> of services which we have</font>

150
00:07:29,120 --> 00:07:36,139
done for<font color="#CCCCCC"> SR MPLS</font><font color="#E5E5E5"> which is simplicity</font><font color="#CCCCCC"> FRR</font>

151
00:07:33,020 --> 00:07:37,698
traffic engineering and couple

152
00:07:36,139 --> 00:07:45,259
everything<font color="#CCCCCC"> together with Sdn</font>

153
00:07:37,699 --> 00:07:49,940
architecture we also see that<font color="#E5E5E5"> in order</font>

154
00:07:45,259 --> 00:07:53,150
for some of these services on top<font color="#E5E5E5"> of the</font>

155
00:07:49,940 --> 00:07:56,509
underlay you have an overlay the overlay

156
00:07:53,150 --> 00:08:00,739
is right now you can have<font color="#E5E5E5"> UDP you can</font>

157
00:07:56,509 --> 00:08:02,509
have the<font color="#CCCCCC"> VX land</font><font color="#E5E5E5"> overlay and the reason</font>

158
00:08:00,740 --> 00:08:05,960
we are<font color="#CCCCCC"> doing these two</font><font color="#E5E5E5"> additional</font>

159
00:08:02,509 --> 00:08:08,090
protocols<font color="#E5E5E5"> is to signal the tenant ID no</font>

160
00:08:05,960 --> 00:08:10,698
we do not need these<font color="#E5E5E5"> protocols if they</font>

161
00:08:08,090 --> 00:08:13,489
are not<font color="#E5E5E5"> really required we can encode</font>

162
00:08:10,699 --> 00:08:17,930
this information in<font color="#CCCCCC"> SR policy which can</font>

163
00:08:13,490 --> 00:08:22,069
be carried in the SR header and what is

164
00:08:17,930 --> 00:08:23,740
the layer after overlay is<font color="#CCCCCC"> nfe there is</font>

165
00:08:22,069 --> 00:08:27,650
a protocol and<font color="#E5E5E5"> a search which has been</font>

166
00:08:23,740 --> 00:08:29,810
designed and that particular protocol is

167
00:08:27,650 --> 00:08:32,140
yet another protocol<font color="#CCCCCC"> adding</font><font color="#E5E5E5"> another</font>

168
00:08:29,810 --> 00:08:34,578
layer of overlay complexity and

169
00:08:32,140 --> 00:08:37,490
maintaining the state in the in the

170
00:08:34,578 --> 00:08:39,799
fabric itself we want scalability<font color="#E5E5E5"> we</font>

171
00:08:37,490 --> 00:08:42,770
want the flexibility<font color="#CCCCCC"> and we want the</font>

172
00:08:39,799 --> 00:08:45,529
simplicity<font color="#E5E5E5"> so we want to remove these</font>

173
00:08:42,770 --> 00:08:48,069
<font color="#CCCCCC">protocols and try to encode all this</font>

174
00:08:45,529 --> 00:08:51,230
information in<font color="#E5E5E5"> segment routing v6</font>

175
00:08:48,070 --> 00:08:53,180
obviously if you<font color="#E5E5E5"> are interested in</font>

176
00:08:51,230 --> 00:08:56,260
learning more details<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> please</font>

177
00:08:53,180 --> 00:09:00,140
contact me and we can<font color="#E5E5E5"> go and have</font><font color="#CCCCCC"> more</font>

178
00:08:56,260 --> 00:09:02,120
data to<font color="#E5E5E5"> prove that</font><font color="#CCCCCC"> this will happen we</font>

179
00:09:00,140 --> 00:09:06,730
have also built some proof of concepts

180
00:09:02,120 --> 00:09:06,730
<font color="#E5E5E5">so we can we can show that</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> you also</font>

181
00:09:07,470 --> 00:09:13,839
economics<font color="#E5E5E5"> of free market evolves and at</font>

182
00:09:11,380 --> 00:09:15,850
and it tries to eliminate the redundancy

183
00:09:13,839 --> 00:09:19,269
<font color="#CCCCCC">it tries to</font><font color="#E5E5E5"> eliminate the inefficiency</font>

184
00:09:15,850 --> 00:09:21,009
<font color="#E5E5E5">and we believe</font><font color="#CCCCCC"> that the layering</font><font color="#E5E5E5"> of</font>

185
00:09:19,269 --> 00:09:23,110
these protocols<font color="#E5E5E5"> may not be the right</font>

186
00:09:21,009 --> 00:09:26,500
<font color="#E5E5E5">approach</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> order to solve the problems</font>

187
00:09:23,110 --> 00:09:28,209
of next generation ipv6<font color="#E5E5E5"> or IP network</font><font color="#CCCCCC"> we</font>

188
00:09:26,500 --> 00:09:30,220
believe there is<font color="#CCCCCC"> a possibility to</font>

189
00:09:28,209 --> 00:09:37,810
<font color="#E5E5E5">eliminate some of these protocols</font><font color="#CCCCCC"> and</font>

190
00:09:30,220 --> 00:09:42,579
simplify the<font color="#CCCCCC"> solution so now I have</font>

191
00:09:37,810 --> 00:09:44,829
talked<font color="#E5E5E5"> about why we need it</font><font color="#CCCCCC"> let's dive</font>

192
00:09:42,579 --> 00:09:48,670
into<font color="#E5E5E5"> it how we will evolve and build</font>

193
00:09:44,829 --> 00:09:52,420
this<font color="#CCCCCC"> next generation IP network so</font><font color="#E5E5E5"> we</font>

194
00:09:48,670 --> 00:10:01,750
are introducing a new<font color="#CCCCCC"> concept of network</font>

195
00:09:52,420 --> 00:10:03,459
as a computer now in order<font color="#E5E5E5"> to do that we</font>

196
00:10:01,750 --> 00:10:05,860
have these ipv6 addresses which are

197
00:10:03,459 --> 00:10:08,290
<font color="#CCCCCC">available</font><font color="#E5E5E5"> we will not use all the ipv6</font>

198
00:10:05,860 --> 00:10:10,300
addresses<font color="#E5E5E5"> most of the ipv6 addresses</font>

199
00:10:08,290 --> 00:10:14,709
will be<font color="#E5E5E5"> available in the classical way</font>

200
00:10:10,300 --> 00:10:17,380
we will only use<font color="#E5E5E5"> some ipv6 address 128</font>

201
00:10:14,709 --> 00:10:20,649
bit space which is available<font color="#E5E5E5"> we call it</font>

202
00:10:17,380 --> 00:10:23,019
<font color="#CCCCCC">CID or segment identifier now if we</font>

203
00:10:20,649 --> 00:10:26,110
split<font color="#CCCCCC"> the segment identifier in the</font>

204
00:10:23,019 --> 00:10:29,019
middle where you have<font color="#E5E5E5"> 64 bits</font><font color="#CCCCCC"> available</font>

205
00:10:26,110 --> 00:10:33,699
for the locator<font color="#E5E5E5"> you have 64 bits</font>

206
00:10:29,019 --> 00:10:36,639
available<font color="#CCCCCC"> for the function then then you</font>

207
00:10:33,699 --> 00:10:39,639
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> possibility where you can encode</font>

208
00:10:36,639 --> 00:10:42,730
more information in those 128 bits which

209
00:10:39,639 --> 00:10:45,490
are available<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the hunt</font><font color="#E5E5E5"> ipv6 address</font>

210
00:10:42,730 --> 00:10:49,089
however<font color="#CCCCCC"> I am taking an example over here</font>

211
00:10:45,490 --> 00:10:50,800
<font color="#CCCCCC">of 64 bits</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> network in 64 bits</font><font color="#E5E5E5"> as as</font>

212
00:10:49,089 --> 00:10:54,370
function there<font color="#CCCCCC"> are no way constrained</font>

213
00:10:50,800 --> 00:10:55,870
<font color="#E5E5E5">you can do the way you want to I am</font><font color="#CCCCCC"> just</font>

214
00:10:54,370 --> 00:10:58,839
<font color="#CCCCCC">using this example so that I can</font>

215
00:10:55,870 --> 00:11:00,040
showcase<font color="#E5E5E5"> and try to walk</font><font color="#CCCCCC"> through the</font>

216
00:10:58,839 --> 00:11:02,709
different<font color="#CCCCCC"> things which we have build</font>

217
00:11:00,040 --> 00:11:07,509
<font color="#E5E5E5">with segment routing v6 now let's say</font>

218
00:11:02,709 --> 00:11:12,040
the first 64 bits<font color="#E5E5E5"> is is available</font><font color="#CCCCCC"> and</font>

219
00:11:07,509 --> 00:11:15,490
those funds first 64 bits can<font color="#CCCCCC"> be used as</font>

220
00:11:12,040 --> 00:11:17,889
a<font color="#E5E5E5"> as a network reach ability</font><font color="#CCCCCC"> so how do</font>

221
00:11:15,490 --> 00:11:19,480
you get<font color="#CCCCCC"> from or to a</font><font color="#E5E5E5"> particular node</font><font color="#CCCCCC"> you</font>

222
00:11:17,889 --> 00:11:21,699
can<font color="#CCCCCC"> do that information</font><font color="#E5E5E5"> using</font>

223
00:11:19,480 --> 00:11:23,949
the first<font color="#CCCCCC"> 64-bits</font><font color="#E5E5E5"> the next rest of the</font>

224
00:11:21,699 --> 00:11:26,199
64<font color="#E5E5E5"> bits can</font><font color="#CCCCCC"> be used as a function which</font>

225
00:11:23,949 --> 00:11:28,599
<font color="#E5E5E5">is locally to that particular node that</font>

226
00:11:26,199 --> 00:11:31,870
<font color="#E5E5E5">hey</font><font color="#CCCCCC"> whence</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> receive</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> packet it</font><font color="#E5E5E5"> says</font>

227
00:11:28,600 --> 00:11:35,160
<font color="#CCCCCC">ok this</font><font color="#E5E5E5"> function belongs to me and then</font>

228
00:11:31,870 --> 00:11:38,050
I should<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> with it</font>

229
00:11:35,160 --> 00:11:41,260
again we<font color="#E5E5E5"> are trying to keep a simplicity</font>

230
00:11:38,050 --> 00:11:43,060
and we are trying to<font color="#E5E5E5"> there is also a</font>

231
00:11:41,260 --> 00:11:44,860
<font color="#E5E5E5">concept of arguments but for the</font>

232
00:11:43,060 --> 00:11:49,380
simplicity<font color="#E5E5E5"> I am just trying to you</font><font color="#CCCCCC"> know</font>

233
00:11:44,860 --> 00:11:49,380
talk<font color="#E5E5E5"> about locator and function for now</font>

234
00:11:49,800 --> 00:11:58,300
<font color="#CCCCCC">ok so now once we have this</font><font color="#E5E5E5"> network</font>

235
00:11:55,329 --> 00:12:02,319
instruction<font color="#E5E5E5"> we need to put this in a</font>

236
00:11:58,300 --> 00:12:04,120
packet first we have an<font color="#E5E5E5"> ipv6 header ipv6</font>

237
00:12:02,320 --> 00:12:06,399
header obviously has a source address

238
00:12:04,120 --> 00:12:10,120
<font color="#E5E5E5">and a destination address the source</font>

239
00:12:06,399 --> 00:12:12,250
<font color="#CCCCCC">address</font><font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to stay constant after</font>

240
00:12:10,120 --> 00:12:14,320
<font color="#CCCCCC">that we have a segment routing header</font>

241
00:12:12,250 --> 00:12:18,040
and this<font color="#E5E5E5"> segment routing header is</font>

242
00:12:14,320 --> 00:12:21,760
nothing new<font color="#CCCCCC"> this</font><font color="#E5E5E5"> was developed by RFC</font><font color="#CCCCCC"> 24</font>

243
00:12:18,040 --> 00:12:24,040
<font color="#CCCCCC">60 20 years</font><font color="#E5E5E5"> ago we are using the same</font>

244
00:12:21,760 --> 00:12:25,779
constructs<font color="#E5E5E5"> which were built at</font><font color="#CCCCCC"> that time</font>

245
00:12:24,040 --> 00:12:28,420
we<font color="#E5E5E5"> are just</font><font color="#CCCCCC"> using them</font><font color="#E5E5E5"> little</font>

246
00:12:25,779 --> 00:12:31,689
differently<font color="#E5E5E5"> here we are going</font><font color="#CCCCCC"> to encode</font>

247
00:12:28,420 --> 00:12:33,969
a network instruction which<font color="#CCCCCC"> is really a</font>

248
00:12:31,690 --> 00:12:35,800
network<font color="#E5E5E5"> program on how the package</font>

249
00:12:33,970 --> 00:12:38,380
should traverse the network<font color="#E5E5E5"> from point A</font>

250
00:12:35,800 --> 00:12:41,859
<font color="#CCCCCC">to point B</font><font color="#E5E5E5"> it's a sequence of</font>

251
00:12:38,380 --> 00:12:44,170
<font color="#CCCCCC">instructions</font><font color="#E5E5E5"> on tell what to do next</font>

252
00:12:41,860 --> 00:12:46,120
<font color="#E5E5E5">so for example</font><font color="#CCCCCC"> in this particular</font><font color="#E5E5E5"> case</font>

253
00:12:44,170 --> 00:12:48,010
you<font color="#CCCCCC"> have a next segment with a locator</font>

254
00:12:46,120 --> 00:12:50,290
<font color="#E5E5E5">which takes you to</font><font color="#CCCCCC"> that particular node</font>

255
00:12:48,010 --> 00:12:52,540
and<font color="#CCCCCC"> you have a function on what to do on</font>

256
00:12:50,290 --> 00:12:55,180
<font color="#CCCCCC">that particular node we copy</font><font color="#E5E5E5"> that</font>

257
00:12:52,540 --> 00:12:58,810
information<font color="#CCCCCC"> into</font><font color="#E5E5E5"> the destination address</font>

258
00:12:55,180 --> 00:13:00,670
field of the outer ipv6 header once that

259
00:12:58,810 --> 00:13:02,859
information<font color="#E5E5E5"> is there then the package</font>

260
00:13:00,670 --> 00:13:05,699
<font color="#E5E5E5">just traverses the network</font><font color="#CCCCCC"> using normal</font>

261
00:13:02,860 --> 00:13:05,699
ipv6 routing

262
00:13:07,110 --> 00:13:12,540
and as we move as a packet<font color="#E5E5E5"> moves through</font>

263
00:13:10,830 --> 00:13:14,970
the network<font color="#E5E5E5"> it just reads that</font>

264
00:13:12,540 --> 00:13:16,319
instructions and start<font color="#E5E5E5"> copying the</font>

265
00:13:14,970 --> 00:13:18,090
<font color="#CCCCCC">information into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> destination address</font>

266
00:13:16,320 --> 00:13:20,850
<font color="#CCCCCC">and that's</font><font color="#E5E5E5"> how the packet moves through</font>

267
00:13:18,090 --> 00:13:22,530
the network so let's visualize it and

268
00:13:20,850 --> 00:13:25,380
then by the<font color="#E5E5E5"> way</font><font color="#CCCCCC"> before I</font><font color="#E5E5E5"> get there the</font>

269
00:13:22,530 --> 00:13:27,689
last<font color="#E5E5E5"> part of it is the is the ipv6</font>

270
00:13:25,380 --> 00:13:31,680
payload which could be TCP UDP<font color="#E5E5E5"> or</font>

271
00:13:27,690 --> 00:13:34,170
anything<font color="#E5E5E5"> else now at a high level</font><font color="#CCCCCC"> let's</font>

272
00:13:31,680 --> 00:13:36,569
illustrate how this network<font color="#E5E5E5"> program and</font>

273
00:13:34,170 --> 00:13:38,280
these<font color="#E5E5E5"> instructions are executed through</font>

274
00:13:36,570 --> 00:13:40,620
the program<font color="#E5E5E5"> so you have a destination</font>

275
00:13:38,280 --> 00:13:43,770
address which is<font color="#CCCCCC"> located</font><font color="#E5E5E5"> with the</font>

276
00:13:40,620 --> 00:13:46,710
location<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> and function</font><font color="#CCCCCC"> 1 which means</font><font color="#E5E5E5"> on</font>

277
00:13:43,770 --> 00:13:49,020
a node<font color="#E5E5E5"> 1 once the packet receives where</font>

278
00:13:46,710 --> 00:13:51,300
this<font color="#CCCCCC"> location 1</font><font color="#E5E5E5"> function 1 belongs the</font>

279
00:13:49,020 --> 00:13:53,400
node 1 says<font color="#CCCCCC"> AHA this is</font><font color="#E5E5E5"> something which</font>

280
00:13:51,300 --> 00:13:54,810
I know and I can I can execute<font color="#CCCCCC"> that</font>

281
00:13:53,400 --> 00:13:57,810
<font color="#CCCCCC">function and</font><font color="#E5E5E5"> that function could be</font>

282
00:13:54,810 --> 00:14:00,000
<font color="#E5E5E5">anything then then the packet</font><font color="#CCCCCC"> moves</font>

283
00:13:57,810 --> 00:14:01,739
forward we copy the<font color="#E5E5E5"> next location to</font>

284
00:14:00,000 --> 00:14:04,680
function<font color="#E5E5E5"> 2 into the destination</font><font color="#CCCCCC"> address</font>

285
00:14:01,740 --> 00:14:06,990
<font color="#E5E5E5">and and the packet</font><font color="#CCCCCC"> just goes through</font><font color="#E5E5E5"> the</font>

286
00:14:04,680 --> 00:14:09,540
ipv6<font color="#CCCCCC"> Network it reaches the node 2 and</font>

287
00:14:06,990 --> 00:14:12,060
node 2 recognizes it<font color="#E5E5E5"> and then executes</font>

288
00:14:09,540 --> 00:14:15,540
the function similarly<font color="#E5E5E5"> for the location</font>

289
00:14:12,060 --> 00:14:19,280
locator 3<font color="#E5E5E5"> and function 3 one of the key</font>

290
00:14:15,540 --> 00:14:23,130
point<font color="#E5E5E5"> to underline over here is is that</font>

291
00:14:19,280 --> 00:14:24,839
the only<font color="#CCCCCC"> nodes node 1 node 2 or node</font>

292
00:14:23,130 --> 00:14:27,750
three other ones<font color="#E5E5E5"> which needs to</font><font color="#CCCCCC"> be</font>

293
00:14:24,840 --> 00:14:29,880
<font color="#E5E5E5">upgraded</font><font color="#CCCCCC"> so it really</font><font color="#E5E5E5"> helps with with</font>

294
00:14:27,750 --> 00:14:32,640
the migration<font color="#CCCCCC"> and towards the segment</font>

295
00:14:29,880 --> 00:14:34,920
routing<font color="#E5E5E5"> any node between the node 1 and</font>

296
00:14:32,640 --> 00:14:37,530
node 2<font color="#E5E5E5"> doesn't need to be upgraded</font><font color="#CCCCCC"> it is</font>

297
00:14:34,920 --> 00:14:48,089
just doing<font color="#E5E5E5"> an ipv6 routing</font><font color="#CCCCCC"> in the</font>

298
00:14:37,530 --> 00:14:50,610
network what one of<font color="#E5E5E5"> the one other thing</font>

299
00:14:48,090 --> 00:14:53,400
<font color="#CCCCCC">which</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> forgot to</font><font color="#E5E5E5"> mention actually is if</font>

300
00:14:50,610 --> 00:14:55,920
you<font color="#CCCCCC"> think about</font><font color="#E5E5E5"> it we are now encoding</font>

301
00:14:53,400 --> 00:14:59,100
<font color="#E5E5E5">the instructions to go through the</font>

302
00:14:55,920 --> 00:15:01,079
network<font color="#E5E5E5"> so we are really encoding we are</font>

303
00:14:59,100 --> 00:15:03,090
treating the entire<font color="#CCCCCC"> network as a big</font>

304
00:15:01,080 --> 00:15:04,920
computer<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> executing</font><font color="#CCCCCC"> a network</font>

305
00:15:03,090 --> 00:15:08,150
program to walk through the network

306
00:15:04,920 --> 00:15:08,150
<font color="#E5E5E5">using these instructions</font>

307
00:15:11,540 --> 00:15:17,550
if<font color="#CCCCCC"> you cordon</font><font color="#E5E5E5"> C C++ Python or any other</font>

308
00:15:15,480 --> 00:15:19,320
<font color="#CCCCCC">language which you like you want to</font>

309
00:15:17,550 --> 00:15:21,990
execute<font color="#E5E5E5"> these functions which I talked</font>

310
00:15:19,320 --> 00:15:24,300
<font color="#CCCCCC">about but you also want to</font><font color="#E5E5E5"> pass some of</font>

311
00:15:21,990 --> 00:15:27,180
<font color="#E5E5E5">the global arguments between these</font>

312
00:15:24,300 --> 00:15:30,420
functions and that global argument is

313
00:15:27,180 --> 00:15:33,269
the metadata<font color="#CCCCCC"> TLV we put that metadata</font>

314
00:15:30,420 --> 00:15:35,729
<font color="#CCCCCC">TLV</font><font color="#E5E5E5"> in the SRH header and</font><font color="#CCCCCC"> that</font>

315
00:15:33,269 --> 00:15:38,880
information<font color="#CCCCCC"> can be shared across</font><font color="#E5E5E5"> the</font>

316
00:15:35,730 --> 00:15:42,000
<font color="#E5E5E5">multiple nodes through the network so</font>

317
00:15:38,880 --> 00:15:44,370
let's say you have an<font color="#CCCCCC"> NFV node which is</font>

318
00:15:42,000 --> 00:15:47,730
encoding this information of network<font color="#CCCCCC"> 1</font>

319
00:15:44,370 --> 00:15:50,220
<font color="#E5E5E5">locator one function 1 and these nodes</font>

320
00:15:47,730 --> 00:15:52,589
really need to have maybe a performance

321
00:15:50,220 --> 00:15:53,910
information<font color="#CCCCCC"> some crypto information or</font>

322
00:15:52,589 --> 00:15:56,760
some<font color="#E5E5E5"> other authentication information</font>

323
00:15:53,910 --> 00:15:58,709
<font color="#E5E5E5">which needs to be shared across these</font>

324
00:15:56,760 --> 00:16:01,620
appliances<font color="#E5E5E5"> you can encode that</font>

325
00:15:58,709 --> 00:16:04,260
information in the metadata<font color="#CCCCCC"> TLV this is</font>

326
00:16:01,620 --> 00:16:06,360
the paradigm which<font color="#E5E5E5"> is mentioned in one</font>

327
00:16:04,260 --> 00:16:08,579
<font color="#CCCCCC">of the NS h documents and this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> I</font>

328
00:16:06,360 --> 00:16:11,339
<font color="#CCCCCC">think is a is is we also try to</font>

329
00:16:08,579 --> 00:16:13,229
<font color="#CCCCCC">incorporate into</font><font color="#E5E5E5"> the SRH and try to</font>

330
00:16:11,339 --> 00:16:17,699
encode<font color="#CCCCCC"> that information in the packet</font>

331
00:16:13,230 --> 00:16:20,940
<font color="#CCCCCC">header itself the other thing which we</font>

332
00:16:17,699 --> 00:16:23,310
<font color="#E5E5E5">have done is is a tag field so if you</font>

333
00:16:20,940 --> 00:16:25,680
want to<font color="#CCCCCC"> classify a packet based on a</font>

334
00:16:23,310 --> 00:16:27,839
group based a group based policy where

335
00:16:25,680 --> 00:16:30,420
you<font color="#E5E5E5"> can you want to give access to</font><font color="#CCCCCC"> a</font>

336
00:16:27,839 --> 00:16:33,029
<font color="#E5E5E5">certain appliances for maybe</font><font color="#CCCCCC"> a char</font>

337
00:16:30,420 --> 00:16:35,130
system some<font color="#E5E5E5"> appliances for other normal</font>

338
00:16:33,029 --> 00:16:37,529
company users you can encode that

339
00:16:35,130 --> 00:16:40,529
information using<font color="#E5E5E5"> this class using this</font>

340
00:16:37,529 --> 00:16:42,959
tag in the packet header itself<font color="#E5E5E5"> and once</font>

341
00:16:40,529 --> 00:16:44,519
the<font color="#CCCCCC"> PAC once the once</font><font color="#E5E5E5"> once the packet</font>

342
00:16:42,959 --> 00:16:46,709
reaches a<font color="#E5E5E5"> particular node that node</font>

343
00:16:44,519 --> 00:16:52,680
knows what to do or which policy to

344
00:16:46,709 --> 00:16:55,050
apply based on<font color="#E5E5E5"> this tag information now</font>

345
00:16:52,680 --> 00:16:59,370
<font color="#E5E5E5">to summarize what I have talked so far</font>

346
00:16:55,050 --> 00:17:01,589
<font color="#E5E5E5">is if you look at the top we</font><font color="#CCCCCC"> have a tag</font>

347
00:16:59,370 --> 00:17:04,589
which is<font color="#E5E5E5"> in that on the right</font><font color="#CCCCCC"> side on</font>

348
00:17:01,589 --> 00:17:07,709
<font color="#CCCCCC">that on the SRH header we also have a</font>

349
00:17:04,589 --> 00:17:09,750
segment<font color="#E5E5E5"> left which tells us in which</font>

350
00:17:07,709 --> 00:17:13,439
part of<font color="#CCCCCC"> that network program</font><font color="#E5E5E5"> which</font>

351
00:17:09,750 --> 00:17:15,510
instruction<font color="#CCCCCC"> I am following we also have</font>

352
00:17:13,439 --> 00:17:17,459
the metadata<font color="#E5E5E5"> which I talked</font><font color="#CCCCCC"> about that</font>

353
00:17:15,510 --> 00:17:20,520
if you want<font color="#E5E5E5"> to exchange some</font><font color="#CCCCCC"> information</font>

354
00:17:17,459 --> 00:17:21,720
with<font color="#CCCCCC"> the with the different nfe nodes in</font>

355
00:17:20,520 --> 00:17:24,270
the network<font color="#CCCCCC"> you can do</font>

356
00:17:21,720 --> 00:17:27,179
that and this is on the<font color="#CCCCCC"> right</font><font color="#E5E5E5"> side is a</font>

357
00:17:24,270 --> 00:17:29,639
picture<font color="#CCCCCC"> which we proposed in IDF it's</font>

358
00:17:27,179 --> 00:17:31,830
all standardized<font color="#E5E5E5"> so there is nothing new</font>

359
00:17:29,640 --> 00:17:37,020
here<font color="#E5E5E5"> we have done this it's it's it's a</font>

360
00:17:31,830 --> 00:17:40,320
<font color="#E5E5E5">draft which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> out there in the IDF so</font>

361
00:17:37,020 --> 00:17:42,450
at this<font color="#E5E5E5"> time of the talk you might be</font>

362
00:17:40,320 --> 00:17:45,139
wondering<font color="#E5E5E5"> this is all good but what</font>

363
00:17:42,450 --> 00:17:47,730
<font color="#CCCCCC">about performance how does this perform</font>

364
00:17:45,140 --> 00:17:50,340
we did the first<font color="#CCCCCC"> implementation of</font>

365
00:17:47,730 --> 00:17:53,370
segment routing v6<font color="#E5E5E5"> about three years ago</font>

366
00:17:50,340 --> 00:17:56,129
<font color="#CCCCCC">we have</font><font color="#E5E5E5"> learned a lot we have optimized</font>

367
00:17:53,370 --> 00:17:58,110
the<font color="#E5E5E5"> upper part of the header for the</font>

368
00:17:56,130 --> 00:18:01,650
hardware processing that part of the

369
00:17:58,110 --> 00:18:05,010
header is<font color="#CCCCCC"> used for underlay for talent</font>

370
00:18:01,650 --> 00:18:06,750
for<font color="#CCCCCC"> NFV for the VP and use</font><font color="#E5E5E5"> cases where</font>

371
00:18:05,010 --> 00:18:08,460
you<font color="#CCCCCC"> are encoding the information with</font>

372
00:18:06,750 --> 00:18:09,929
<font color="#E5E5E5">segment left</font><font color="#CCCCCC"> you are encoding the</font>

373
00:18:08,460 --> 00:18:11,480
information<font color="#CCCCCC"> in the in the network</font>

374
00:18:09,929 --> 00:18:14,460
program with the network instructions

375
00:18:11,480 --> 00:18:16,740
the lower part<font color="#E5E5E5"> of the header and the</font>

376
00:18:14,460 --> 00:18:18,929
entire header is<font color="#E5E5E5"> ops optimized with F</font>

377
00:18:16,740 --> 00:18:21,330
for the<font color="#CCCCCC"> NFV for the container use cases</font>

378
00:18:18,929 --> 00:18:23,789
for software<font color="#E5E5E5"> use cases we have already</font>

379
00:18:21,330 --> 00:18:28,860
done three<font color="#CCCCCC"> hardware implementation</font>

380
00:18:23,789 --> 00:18:31,950
inside<font color="#CCCCCC"> Cisco</font><font color="#E5E5E5"> we have done the two open</font>

381
00:18:28,860 --> 00:18:34,740
source<font color="#CCCCCC"> implementation with VPP</font><font color="#E5E5E5"> FD</font><font color="#CCCCCC"> IO</font><font color="#E5E5E5"> and</font>

382
00:18:31,950 --> 00:18:37,559
with Linux kernel and we have also done

383
00:18:34,740 --> 00:18:41,370
an interoperability with the with the

384
00:18:37,559 --> 00:18:44,520
<font color="#E5E5E5">other vendor barefoot and it's it's it's</font>

385
00:18:41,370 --> 00:18:46,918
been<font color="#E5E5E5"> posted outside we have funded the</font>

386
00:18:44,520 --> 00:18:50,070
<font color="#CCCCCC">SR v6 implementation in</font><font color="#E5E5E5"> the Linux kernel</font>

387
00:18:46,919 --> 00:18:52,770
<font color="#CCCCCC">and that implementation</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> also done and</font>

388
00:18:50,070 --> 00:18:54,299
<font color="#E5E5E5">is</font><font color="#CCCCCC"> available and more more</font><font color="#E5E5E5"> of that</font>

389
00:18:52,770 --> 00:18:58,080
<font color="#CCCCCC">implementation</font><font color="#E5E5E5"> will be available in new</font>

390
00:18:54,299 --> 00:18:59,970
versions of Linux kernel so with

391
00:18:58,080 --> 00:19:01,949
<font color="#E5E5E5">barefoot we have also done the sixth</font>

392
00:18:59,970 --> 00:19:05,159
sixth overall implementation and fourth

393
00:19:01,950 --> 00:19:06,929
<font color="#CCCCCC">Hardware implementation to prove that we</font>

394
00:19:05,159 --> 00:19:08,909
<font color="#CCCCCC">have been able to do and optimize</font><font color="#E5E5E5"> for</font>

395
00:19:06,929 --> 00:19:15,780
the<font color="#E5E5E5"> hardware processing everything about</font>

396
00:19:08,909 --> 00:19:18,780
segment routing v6 we started on this

397
00:19:15,780 --> 00:19:22,260
journey of segment routing v6<font color="#E5E5E5"> in early</font>

398
00:19:18,780 --> 00:19:24,690
2017<font color="#E5E5E5"> where we we shared the</font><font color="#CCCCCC"> idea we</font>

399
00:19:22,260 --> 00:19:27,270
<font color="#CCCCCC">published the drafts in IETF</font><font color="#E5E5E5"> since then</font>

400
00:19:24,690 --> 00:19:29,070
we have multiple lead operators who can

401
00:19:27,270 --> 00:19:31,950
who joined us as you<font color="#CCCCCC"> can see in this</font>

402
00:19:29,070 --> 00:19:34,230
list<font color="#CCCCCC"> we also have University and a</font>

403
00:19:31,950 --> 00:19:35,230
commit academia which which we have

404
00:19:34,230 --> 00:19:38,070
partnered with<font color="#E5E5E5"> them</font>

405
00:19:35,230 --> 00:19:40,870
<font color="#E5E5E5">to try to do this implementation and</font>

406
00:19:38,070 --> 00:19:43,809
this<font color="#E5E5E5"> particular document is first and</font>

407
00:19:40,870 --> 00:19:46,000
one<font color="#E5E5E5"> of the most important document you</font>

408
00:19:43,809 --> 00:19:47,860
would read<font color="#E5E5E5"> about segment routing we call</font>

409
00:19:46,000 --> 00:19:49,240
it network programming<font color="#E5E5E5"> and there are a</font>

410
00:19:47,860 --> 00:19:51,969
lot<font color="#CCCCCC"> of different functions</font><font color="#E5E5E5"> which I will</font>

411
00:19:49,240 --> 00:19:54,040
be talking<font color="#CCCCCC"> on some of them today are</font>

412
00:19:51,970 --> 00:19:57,730
covered in this particular<font color="#CCCCCC"> document</font><font color="#E5E5E5"> we</font>

413
00:19:54,040 --> 00:19:59,500
<font color="#E5E5E5">have also worked with Professor Sal Sano</font>

414
00:19:57,730 --> 00:20:02,200
<font color="#CCCCCC">and his team who have</font><font color="#E5E5E5"> done the Linux</font>

415
00:19:59,500 --> 00:20:07,350
implementation of segment routing v6 and

416
00:20:02,200 --> 00:20:09,730
it's available<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> also as as our</font>

417
00:20:07,350 --> 00:20:13,209
commitment<font color="#CCCCCC"> to the lead operators we have</font>

418
00:20:09,730 --> 00:20:14,860
<font color="#CCCCCC">also issued multiple</font><font color="#E5E5E5"> drafts</font><font color="#CCCCCC"> arm</font><font color="#E5E5E5"> on the</font>

419
00:20:13,210 --> 00:20:16,299
left side<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> top you will see</font><font color="#E5E5E5"> the</font>

420
00:20:14,860 --> 00:20:19,870
<font color="#CCCCCC">document which I have published about</font>

421
00:20:16,299 --> 00:20:22,299
<font color="#E5E5E5">BGP s our v6 VPN the bottom one is the</font>

422
00:20:19,870 --> 00:20:24,790
<font color="#E5E5E5">is is draft it's very easy to read it's</font>

423
00:20:22,299 --> 00:20:26,200
very simple<font color="#E5E5E5"> please go through these</font>

424
00:20:24,790 --> 00:20:29,520
<font color="#CCCCCC">documents</font><font color="#E5E5E5"> and let us know if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have</font>

425
00:20:26,200 --> 00:20:29,520
anything<font color="#E5E5E5"> which we can discuss further</font>

426
00:20:29,940 --> 00:20:35,740
<font color="#E5E5E5">one of the latest document which we have</font>

427
00:20:32,950 --> 00:20:38,049
published is<font color="#E5E5E5"> the applicability</font><font color="#CCCCCC"> of</font>

428
00:20:35,740 --> 00:20:40,690
segment routing for the<font color="#CCCCCC"> mobile network</font>

429
00:20:38,049 --> 00:20:42,520
<font color="#CCCCCC">we</font><font color="#E5E5E5"> have done this with</font><font color="#CCCCCC"> satoru from</font>

430
00:20:40,690 --> 00:20:46,860
<font color="#E5E5E5">Softbank and we have published this</font>

431
00:20:42,520 --> 00:20:49,480
document<font color="#CCCCCC"> only recently in june in in</font><font color="#E5E5E5"> ITF</font>

432
00:20:46,860 --> 00:20:51,850
this is a<font color="#E5E5E5"> fifth document for segment</font>

433
00:20:49,480 --> 00:20:53,470
routing v6<font color="#E5E5E5"> to our commitment to</font>

434
00:20:51,850 --> 00:20:55,780
standardize everything<font color="#E5E5E5"> which we are</font>

435
00:20:53,470 --> 00:20:58,150
developing internally and we are trying

436
00:20:55,780 --> 00:21:00,428
<font color="#E5E5E5">to you</font><font color="#CCCCCC"> know share that knowledge with</font>

437
00:20:58,150 --> 00:21:12,850
<font color="#CCCCCC">the with a large community</font><font color="#E5E5E5"> and build the</font>

438
00:21:00,429 --> 00:21:15,370
multi vendor consensus so so far so<font color="#CCCCCC"> far</font>

439
00:21:12,850 --> 00:21:16,840
what<font color="#CCCCCC"> we have explained is what we have</font>

440
00:21:15,370 --> 00:21:20,290
<font color="#CCCCCC">developed in segment routing in the last</font>

441
00:21:16,840 --> 00:21:22,570
four or five<font color="#CCCCCC"> years</font><font color="#E5E5E5"> we went</font><font color="#CCCCCC"> over segment</font>

442
00:21:20,290 --> 00:21:26,740
routing as a first introduction<font color="#E5E5E5"> we try</font>

443
00:21:22,570 --> 00:21:30,600
to explain why it<font color="#CCCCCC"> is needed</font><font color="#E5E5E5"> and we try</font>

444
00:21:26,740 --> 00:21:33,460
to<font color="#E5E5E5"> explain the the applicability of it</font>

445
00:21:30,600 --> 00:21:35,199
what we<font color="#E5E5E5"> will do is we</font><font color="#CCCCCC"> will cover some</font><font color="#E5E5E5"> of</font>

446
00:21:33,460 --> 00:21:36,970
the network<font color="#E5E5E5"> programming constructs in</font>

447
00:21:35,200 --> 00:21:39,580
the rest of the slides<font color="#E5E5E5"> and then we will</font>

448
00:21:36,970 --> 00:21:42,750
finish<font color="#E5E5E5"> it off with the use cases which</font>

449
00:21:39,580 --> 00:21:42,750
is one of<font color="#CCCCCC"> the most important thing</font>

450
00:21:45,300 --> 00:21:51,460
in order to<font color="#E5E5E5"> walk you through with ease</font>

451
00:21:48,040 --> 00:21:53,710
with some of these use cases<font color="#E5E5E5"> we try to</font>

452
00:21:51,460 --> 00:21:55,990
build some convention and that

453
00:21:53,710 --> 00:21:58,240
<font color="#E5E5E5">convention is</font><font color="#CCCCCC"> we'll make it easy to</font>

454
00:21:55,990 --> 00:22:01,990
explain<font color="#E5E5E5"> it will make it intuitive and</font>

455
00:21:58,240 --> 00:22:04,120
and and more human<font color="#CCCCCC"> readable</font><font color="#E5E5E5"> please do</font>

456
00:22:01,990 --> 00:22:05,740
<font color="#CCCCCC">not</font><font color="#E5E5E5"> think that there</font><font color="#CCCCCC"> is any constraints</font>

457
00:22:04,120 --> 00:22:07,629
in the architecture the architecture is

458
00:22:05,740 --> 00:22:10,840
completely flexible<font color="#E5E5E5"> but for the ease of</font>

459
00:22:07,630 --> 00:22:13,000
explaining<font color="#E5E5E5"> it to to everybody we are</font>

460
00:22:10,840 --> 00:22:15,550
<font color="#CCCCCC">we're trying to take so in this</font>

461
00:22:13,000 --> 00:22:20,290
particular<font color="#E5E5E5"> case we have</font><font color="#CCCCCC"> a neck node K</font>

462
00:22:15,550 --> 00:22:22,330
which advertises a prefix a<font color="#E5E5E5"> K so</font><font color="#CCCCCC"> you</font>

463
00:22:20,290 --> 00:22:25,870
have a you have a<font color="#CCCCCC"> Sid block which is a</font>

464
00:22:22,330 --> 00:22:28,629
<font color="#CCCCCC">located which is a</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> colon colon 64 from</font>

465
00:22:25,870 --> 00:22:33,428
this set block<font color="#CCCCCC"> this particular node can</font>

466
00:22:28,630 --> 00:22:35,860
<font color="#E5E5E5">allocate the allocate this said this set</font>

467
00:22:33,429 --> 00:22:40,090
block is is is in the underlay has been

468
00:22:35,860 --> 00:22:43,059
advertised to<font color="#CCCCCC"> the other node and it will</font>

469
00:22:40,090 --> 00:22:45,178
it will try to be a normal ipv6 routing

470
00:22:43,059 --> 00:22:48,550
to this to reach<font color="#E5E5E5"> to this particular node</font>

471
00:22:45,179 --> 00:22:53,050
<font color="#E5E5E5">so the first simple function which we</font>

472
00:22:48,550 --> 00:22:56,290
<font color="#CCCCCC">have is endpoint in the endpoint you</font>

473
00:22:53,050 --> 00:22:58,480
have a node which<font color="#CCCCCC"> is a 1 colon colon</font><font color="#E5E5E5"> 0</font>

474
00:22:56,290 --> 00:23:02,559
<font color="#E5E5E5">this is the most basic function in</font>

475
00:22:58,480 --> 00:23:04,990
segment routing these<font color="#E5E5E5"> 6 where first go</font>

476
00:23:02,559 --> 00:23:07,270
to<font color="#E5E5E5"> that</font><font color="#CCCCCC"> destination address a 1 colon</font>

477
00:23:04,990 --> 00:23:09,550
colon 0 and then execute a function

478
00:23:07,270 --> 00:23:11,470
<font color="#E5E5E5">where</font><font color="#CCCCCC"> you copy the</font><font color="#E5E5E5"> next segment from the</font>

479
00:23:09,550 --> 00:23:14,200
<font color="#E5E5E5">program instruction to the destination</font>

480
00:23:11,470 --> 00:23:16,300
address<font color="#E5E5E5"> it's as simple as that and we</font>

481
00:23:14,200 --> 00:23:18,850
call it<font color="#E5E5E5"> an end</font><font color="#CCCCCC"> function</font><font color="#E5E5E5"> and that's why</font>

482
00:23:16,300 --> 00:23:21,639
I'm just<font color="#E5E5E5"> allocating a value 0 to it so</font>

483
00:23:18,850 --> 00:23:26,919
in this particular<font color="#E5E5E5"> example go to node a1</font>

484
00:23:21,640 --> 00:23:28,929
and then execute<font color="#CCCCCC"> the instruction 0 0 in</font>

485
00:23:26,920 --> 00:23:32,410
the<font color="#E5E5E5"> next example you have another node</font>

486
00:23:28,929 --> 00:23:34,960
<font color="#E5E5E5">a5</font><font color="#CCCCCC"> you go to that node a5 just using the</font>

487
00:23:32,410 --> 00:23:39,340
normal ipv6 routing<font color="#E5E5E5"> and then execute a</font>

488
00:23:34,960 --> 00:23:41,710
function<font color="#E5E5E5"> and function 0 0 on it which is</font>

489
00:23:39,340 --> 00:23:43,000
<font color="#CCCCCC">just nothing</font><font color="#E5E5E5"> but copying</font><font color="#CCCCCC"> the next</font>

490
00:23:41,710 --> 00:23:46,420
segment in the instruction<font color="#E5E5E5"> to the</font>

491
00:23:43,000 --> 00:23:49,600
destination address<font color="#E5E5E5"> now let's put it</font>

492
00:23:46,420 --> 00:23:52,810
<font color="#E5E5E5">together if we have</font><font color="#CCCCCC"> a segment routing</font>

493
00:23:49,600 --> 00:23:56,110
header which has a<font color="#CCCCCC"> 1 colon colon</font><font color="#E5E5E5"> 0 and a</font>

494
00:23:52,810 --> 00:23:56,830
5 colon colon 0<font color="#E5E5E5"> it means go to node</font><font color="#CCCCCC"> a1</font>

495
00:23:56,110 --> 00:23:58,779
the

496
00:23:56,830 --> 00:24:00,580
even<font color="#CCCCCC"> we'll be like oh I have to execute</font>

497
00:23:58,779 --> 00:24:03,490
and function the end function<font color="#E5E5E5"> will be</font>

498
00:24:00,580 --> 00:24:05,649
like just copying the a500<font color="#CCCCCC"> into the</font>

499
00:24:03,490 --> 00:24:08,860
<font color="#E5E5E5">destination address the packet then goes</font>

500
00:24:05,649 --> 00:24:11,979
over<font color="#CCCCCC"> the</font><font color="#E5E5E5"> normal ipv6 routing to the node</font>

501
00:24:08,860 --> 00:24:13,870
<font color="#CCCCCC">a5</font><font color="#E5E5E5"> and once it reaches a</font><font color="#CCCCCC"> 5 it again</font>

502
00:24:11,980 --> 00:24:16,299
executes the end<font color="#CCCCCC"> function</font><font color="#E5E5E5"> if there is no</font>

503
00:24:13,870 --> 00:24:19,658
other<font color="#E5E5E5"> segments left</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> just pops the SRH</font>

504
00:24:16,299 --> 00:24:24,519
and then sends a packet<font color="#E5E5E5"> on the the other</font>

505
00:24:19,659 --> 00:24:27,210
IP packet<font color="#CCCCCC"> to to the node</font><font color="#E5E5E5"> 1 let me</font>

506
00:24:24,519 --> 00:24:30,070
<font color="#E5E5E5">introduce a new construct which is</font>

507
00:24:27,210 --> 00:24:31,960
<font color="#E5E5E5">endpoint with then cross connect to a</font>

508
00:24:30,070 --> 00:24:36,460
particular neighbor<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> particular</font>

509
00:24:31,960 --> 00:24:38,529
case we call<font color="#E5E5E5"> it n dot X here we have go</font>

510
00:24:36,460 --> 00:24:42,130
<font color="#CCCCCC">to a node if you look at the seed block</font>

511
00:24:38,529 --> 00:24:44,919
here the city<font color="#E5E5E5"> block is a 1 : :</font><font color="#CCCCCC"> c2</font><font color="#E5E5E5"> so go</font>

512
00:24:42,130 --> 00:24:47,049
to a node a 1 and then<font color="#E5E5E5"> the even</font>

513
00:24:44,919 --> 00:24:49,090
recognizes that it's actually a function

514
00:24:47,049 --> 00:24:51,490
which<font color="#E5E5E5"> is locally configured that</font>

515
00:24:49,090 --> 00:24:55,120
function will be C<font color="#E5E5E5"> 2 which means cross</font>

516
00:24:51,490 --> 00:24:57,250
connect to the neighbor<font color="#CCCCCC"> 2 instead</font><font color="#E5E5E5"> of</font>

517
00:24:55,120 --> 00:24:59,260
taking a shortest path<font color="#CCCCCC"> it will</font><font color="#E5E5E5"> actually</font>

518
00:24:57,250 --> 00:25:00,549
cross connect to it so there is no IP

519
00:24:59,260 --> 00:25:03,419
routing happening anymore

520
00:25:00,549 --> 00:25:07,389
it's just cross connecting<font color="#E5E5E5"> from 1 to 2</font>

521
00:25:03,419 --> 00:25:11,080
similarly<font color="#E5E5E5"> if you have a 5 colon colon c7</font>

522
00:25:07,389 --> 00:25:13,750
<font color="#E5E5E5">which means route to</font><font color="#CCCCCC"> a 5</font><font color="#E5E5E5"> which is just</font>

523
00:25:11,080 --> 00:25:15,850
the underlay and normal ipv6 routing<font color="#E5E5E5"> and</font>

524
00:25:13,750 --> 00:25:19,360
then you will cross<font color="#E5E5E5"> connect to the</font>

525
00:25:15,850 --> 00:25:23,769
neighbor<font color="#E5E5E5"> c7 so from 5 it will just cross</font>

526
00:25:19,360 --> 00:25:28,479
connect to<font color="#CCCCCC"> cell putting this all</font>

527
00:25:23,769 --> 00:25:32,440
together<font color="#CCCCCC"> what</font><font color="#E5E5E5"> here you have a 1 colon</font>

528
00:25:28,480 --> 00:25:35,679
colon 0<font color="#E5E5E5"> and</font><font color="#CCCCCC"> E 5 colon colon 7</font><font color="#E5E5E5"> so this is</font>

529
00:25:32,440 --> 00:25:38,740
the network<font color="#E5E5E5"> instruction we we go to node</font>

530
00:25:35,679 --> 00:25:41,260
a 1 colon colon 0 just a normal ipv6

531
00:25:38,740 --> 00:25:43,929
routing<font color="#E5E5E5"> then we steer the packet towards</font>

532
00:25:41,260 --> 00:25:45,669
a 5 colon colon c7 because that address

533
00:25:43,929 --> 00:25:48,309
has<font color="#CCCCCC"> been</font><font color="#E5E5E5"> copied over to the destination</font>

534
00:25:45,669 --> 00:25:50,529
address<font color="#E5E5E5"> and once it reaches a 5 it</font>

535
00:25:48,309 --> 00:25:53,110
realizes it's a local function and it

536
00:25:50,529 --> 00:25:56,110
just does a cross connect<font color="#E5E5E5"> from 5 to 7 if</font>

537
00:25:53,110 --> 00:25:58,120
you see here what we<font color="#CCCCCC"> have done the</font>

538
00:25:56,110 --> 00:26:00,969
simplicity<font color="#E5E5E5"> of this is that we have</font>

539
00:25:58,120 --> 00:26:04,360
actually<font color="#E5E5E5"> crossed three domains DC van</font>

540
00:26:00,970 --> 00:26:06,669
and did egress<font color="#CCCCCC"> peer engendering</font><font color="#E5E5E5"> with two</font>

541
00:26:04,360 --> 00:26:09,139
segments<font color="#E5E5E5"> there is nothing complicated</font>

542
00:26:06,669 --> 00:26:12,170
<font color="#E5E5E5">here and all of this</font>

543
00:26:09,140 --> 00:26:14,330
is automated<font color="#E5E5E5"> using either a distributed</font>

544
00:26:12,170 --> 00:26:18,770
controller or distributed approach<font color="#E5E5E5"> or a</font>

545
00:26:14,330 --> 00:26:20,929
centralized controller this this is the

546
00:26:18,770 --> 00:26:23,900
same use case<font color="#E5E5E5"> which has been</font><font color="#CCCCCC"> showcased</font>

547
00:26:20,930 --> 00:26:27,710
by Google and Facebook and<font color="#E5E5E5"> with the edge</font>

548
00:26:23,900 --> 00:26:34,450
fabric at sitcom and and with the

549
00:26:27,710 --> 00:26:37,700
expresso use case which they have di LFA

550
00:26:34,450 --> 00:26:40,370
<font color="#E5E5E5">is this is our first use case the DLF a</font>

551
00:26:37,700 --> 00:26:44,750
or we call<font color="#E5E5E5"> it</font><font color="#CCCCCC"> a topology</font><font color="#E5E5E5"> independent LFA</font>

552
00:26:40,370 --> 00:26:46,280
<font color="#E5E5E5">as</font><font color="#CCCCCC"> I this</font><font color="#E5E5E5"> particular in this particular</font>

553
00:26:44,750 --> 00:26:48,380
<font color="#E5E5E5">case we have</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> shipping this</font>

554
00:26:46,280 --> 00:26:50,330
technology for about three years<font color="#CCCCCC"> it has</font>

555
00:26:48,380 --> 00:26:52,400
been<font color="#CCCCCC"> very widely deployed</font><font color="#E5E5E5"> we are able to</font>

556
00:26:50,330 --> 00:26:56,050
<font color="#E5E5E5">do sub-sect sub-millisecond convergence</font>

557
00:26:52,400 --> 00:27:00,170
with<font color="#CCCCCC"> TI LFA</font><font color="#E5E5E5"> it's it's easy to understand</font>

558
00:26:56,050 --> 00:27:03,169
<font color="#CCCCCC">the IGP</font><font color="#E5E5E5"> does the the post convergence</font>

559
00:27:00,170 --> 00:27:05,210
path calculation and is fully<font color="#E5E5E5"> automated</font>

560
00:27:03,170 --> 00:27:08,690
<font color="#E5E5E5">it's predictable because it's a post</font>

561
00:27:05,210 --> 00:27:11,630
convergence path and it can be<font color="#E5E5E5"> deployed</font>

562
00:27:08,690 --> 00:27:13,940
<font color="#E5E5E5">incrementally</font><font color="#CCCCCC"> so one of the key benefits</font>

563
00:27:11,630 --> 00:27:17,120
<font color="#E5E5E5">of it is that whatever we have</font><font color="#CCCCCC"> been able</font>

564
00:27:13,940 --> 00:27:21,380
to do<font color="#CCCCCC"> sa with SRM pls we can do the same</font>

565
00:27:17,120 --> 00:27:23,540
<font color="#E5E5E5">thing without much change with</font><font color="#CCCCCC"> sr</font><font color="#E5E5E5"> v6 so</font>

566
00:27:21,380 --> 00:27:27,560
in this particular case<font color="#E5E5E5"> you have a node</font>

567
00:27:23,540 --> 00:27:29,930
<font color="#CCCCCC">6 and node 6 has an instruction do to</font>

568
00:27:27,560 --> 00:27:32,929
send the packet<font color="#CCCCCC"> over to</font><font color="#E5E5E5"> 5 which is</font>

569
00:27:29,930 --> 00:27:34,460
<font color="#E5E5E5">normal ipv6 routing and at</font><font color="#CCCCCC"> five at</font><font color="#E5E5E5"> five</font>

570
00:27:32,930 --> 00:27:38,030
we'll just do an end<font color="#CCCCCC"> function which are</font>

571
00:27:34,460 --> 00:27:41,030
<font color="#E5E5E5">described earlier</font><font color="#CCCCCC"> Phi at six</font>

572
00:27:38,030 --> 00:27:43,010
it will also<font color="#E5E5E5"> calculate using</font><font color="#CCCCCC"> igb fully</font>

573
00:27:41,030 --> 00:27:45,200
automatic<font color="#E5E5E5"> automatically it will</font>

574
00:27:43,010 --> 00:27:49,129
<font color="#E5E5E5">calculate the backup path which will</font>

575
00:27:45,200 --> 00:27:52,760
insert a new a<font color="#E5E5E5"> to sequel</font><font color="#CCCCCC"> conical and see</font>

576
00:27:49,130 --> 00:27:57,170
<font color="#CCCCCC">four</font><font color="#E5E5E5"> segments in the list so the link</font>

577
00:27:52,760 --> 00:27:59,920
between 6<font color="#E5E5E5"> and 5 fails</font><font color="#CCCCCC"> syncs the packet</font>

578
00:27:57,170 --> 00:28:05,030
comes to<font color="#CCCCCC"> 6 6</font><font color="#E5E5E5"> immediately discovers that</font>

579
00:27:59,920 --> 00:28:07,070
it inserts a a 2 : :<font color="#CCCCCC"> C 4 and the package</font>

580
00:28:05,030 --> 00:28:10,639
<font color="#CCCCCC">just traverses through the network</font><font color="#E5E5E5"> using</font>

581
00:28:07,070 --> 00:28:13,879
normal ipv6 routing to node 2<font color="#E5E5E5"> at node 2</font>

582
00:28:10,640 --> 00:28:16,160
it says<font color="#E5E5E5"> AHA it's an it's it's an N dot X</font>

583
00:28:13,880 --> 00:28:18,650
function<font color="#E5E5E5"> so it will just cross connect</font>

584
00:28:16,160 --> 00:28:20,480
from 2 to 4<font color="#E5E5E5"> it will not try</font><font color="#CCCCCC"> to do</font>

585
00:28:18,650 --> 00:28:22,580
routing<font color="#CCCCCC"> because that will cause</font><font color="#E5E5E5"> the loop</font>

586
00:28:20,480 --> 00:28:25,340
so it just cross connects<font color="#E5E5E5"> from 2 to 4</font>

587
00:28:22,580 --> 00:28:28,730
once the packet reaches for<font color="#E5E5E5"> it we'll</font>

588
00:28:25,340 --> 00:28:31,100
send<font color="#E5E5E5"> the packet down to five because the</font>

589
00:28:28,730 --> 00:28:43,370
link between<font color="#CCCCCC"> two</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> has a larger</font>

590
00:28:31,100 --> 00:28:45,469
matrix one of the main point<font color="#CCCCCC"> about this</font>

591
00:28:43,370 --> 00:28:48,080
is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> this particular solution</font><font color="#E5E5E5"> is</font>

592
00:28:45,470 --> 00:28:50,720
completely topology independent<font color="#E5E5E5"> it can</font>

593
00:28:48,080 --> 00:28:53,480
be built<font color="#E5E5E5"> incrementally and we use s our</font>

594
00:28:50,720 --> 00:28:56,630
policy on the node<font color="#E5E5E5"> six to encode the</font>

595
00:28:53,480 --> 00:28:59,210
information<font color="#E5E5E5"> it's it's it's about the</font>

596
00:28:56,630 --> 00:29:02,030
<font color="#E5E5E5">it's it's just encoding and inserting a</font>

597
00:28:59,210 --> 00:29:03,490
new segment in the<font color="#E5E5E5"> SRS header and we are</font>

598
00:29:02,030 --> 00:29:05,420
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> uh</font><font color="#E5E5E5"> see achieve the</font>

599
00:29:03,490 --> 00:29:11,570
<font color="#E5E5E5">sub-millisecond convergence with</font>

600
00:29:05,420 --> 00:29:14,660
geography let's talk about our<font color="#CCCCCC"> next use</font>

601
00:29:11,570 --> 00:29:17,780
case which is how do we do overlay with

602
00:29:14,660 --> 00:29:19,580
<font color="#CCCCCC">SR</font><font color="#E5E5E5"> v6 you will see it will</font><font color="#CCCCCC"> be intuitive</font>

603
00:29:17,780 --> 00:29:22,910
it's simple<font color="#E5E5E5"> there is nothing complicated</font>

604
00:29:19,580 --> 00:29:25,730
here<font color="#E5E5E5"> let's imagine you have two tenants</font>

605
00:29:22,910 --> 00:29:30,890
<font color="#E5E5E5">tenant</font><font color="#CCCCCC"> green which is connected from 1</font>

606
00:29:25,730 --> 00:29:32,840
<font color="#CCCCCC">to 3 and from 4 to 2 to 4 so BGP</font><font color="#E5E5E5"> you can</font>

607
00:29:30,890 --> 00:29:35,330
use any overlay protocol where this<font color="#CCCCCC"> bgp</font>

608
00:29:32,840 --> 00:29:37,220
less Sdn controller doesn't really

609
00:29:35,330 --> 00:29:40,780
matter but<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the simplicity I am just</font>

610
00:29:37,220 --> 00:29:43,940
showing showing the BGP use case here<font color="#CCCCCC"> so</font>

611
00:29:40,780 --> 00:29:47,510
<font color="#E5E5E5">PGP signals the information from</font><font color="#CCCCCC"> 2 to 1</font>

612
00:29:43,940 --> 00:29:51,920
<font color="#CCCCCC">and it</font><font color="#E5E5E5"> will signal with for the for the</font>

613
00:29:47,510 --> 00:29:56,780
prefix<font color="#CCCCCC"> V 64 with the next hop as a 2 : :</font>

614
00:29:51,920 --> 00:29:59,180
<font color="#CCCCCC">C for once the route reaches</font><font color="#E5E5E5"> the node 1</font>

615
00:29:56,780 --> 00:30:02,660
and the packet comes down from<font color="#E5E5E5"> node</font><font color="#CCCCCC"> 3 to</font>

616
00:29:59,180 --> 00:30:05,330
node 1 the node 1 will encapsulate<font color="#E5E5E5"> with</font>

617
00:30:02,660 --> 00:30:08,330
the outer IP header<font color="#E5E5E5"> and put the</font><font color="#CCCCCC"> a 2 C 4</font>

618
00:30:05,330 --> 00:30:10,850
<font color="#CCCCCC">in the destination address</font><font color="#E5E5E5"> and that's it</font>

619
00:30:08,330 --> 00:30:13,340
<font color="#E5E5E5">now</font><font color="#CCCCCC"> you're just routing normally to the</font>

620
00:30:10,850 --> 00:30:16,100
<font color="#CCCCCC">node</font><font color="#E5E5E5"> 2 once the packet reaches node 2</font>

621
00:30:13,340 --> 00:30:18,560
node 2 will be like<font color="#E5E5E5"> oh</font><font color="#CCCCCC"> ho this is again</font>

622
00:30:16,100 --> 00:30:20,990
n dot X so it<font color="#E5E5E5"> will just cross connect</font>

623
00:30:18,560 --> 00:30:23,690
from<font color="#E5E5E5"> 2 to 4 it's that simple</font>

624
00:30:20,990 --> 00:30:25,820
see in this particular<font color="#E5E5E5"> case we only had</font>

625
00:30:23,690 --> 00:30:28,940
a need<font color="#E5E5E5"> for one segment ID</font><font color="#CCCCCC"> we didn't have</font>

626
00:30:25,820 --> 00:30:32,330
to put<font color="#CCCCCC"> any</font><font color="#E5E5E5"> SRH so we didn't actually put</font>

627
00:30:28,940 --> 00:30:34,340
any SRH into the into the packet<font color="#E5E5E5"> we can</font>

628
00:30:32,330 --> 00:30:36,269
<font color="#CCCCCC">achieve the same</font><font color="#E5E5E5"> functionality with 1 ID</font>

629
00:30:34,340 --> 00:30:38,009
so<font color="#CCCCCC"> we just encapsulating</font>

630
00:30:36,269 --> 00:30:40,889
we address with an IP<font color="#CCCCCC"> packet with the</font>

631
00:30:38,009 --> 00:30:43,979
<font color="#E5E5E5">outer of IP packet in this particular</font>

632
00:30:40,889 --> 00:30:46,738
case what we have<font color="#E5E5E5"> showcased that we have</font>

633
00:30:43,979 --> 00:30:48,119
eliminated the need for UDP<font color="#E5E5E5"> we have</font>

634
00:30:46,739 --> 00:30:50,639
eliminated the need for any<font color="#E5E5E5"> other</font>

635
00:30:48,119 --> 00:30:53,820
encapsulation protocols like VX LAN<font color="#CCCCCC"> or</font>

636
00:30:50,639 --> 00:30:55,708
GRE and try to achieve the same<font color="#CCCCCC"> thing</font>

637
00:30:53,820 --> 00:31:01,859
<font color="#CCCCCC">with the</font><font color="#E5E5E5"> simplicity of segment routing</font>

638
00:30:55,709 --> 00:31:07,919
v6 let's try to touch on another<font color="#CCCCCC"> use</font>

639
00:31:01,859 --> 00:31:09,899
<font color="#CCCCCC">case which is overlay with underlay SLA</font>

640
00:31:07,919 --> 00:31:13,079
<font color="#CCCCCC">so in this particular</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> now you have</font>

641
00:31:09,899 --> 00:31:14,879
an SLA<font color="#E5E5E5"> where a route needs to be reached</font>

642
00:31:13,079 --> 00:31:17,609
the green<font color="#E5E5E5"> tenant needs to be reached</font>

643
00:31:14,879 --> 00:31:20,189
with a low latency<font color="#CCCCCC"> so what do we do</font><font color="#E5E5E5"> in</font>

644
00:31:17,609 --> 00:31:21,928
this case<font color="#E5E5E5"> if you follow the segment</font>

645
00:31:20,190 --> 00:31:23,999
routing this is nothing different than<font color="#CCCCCC"> a</font>

646
00:31:21,929 --> 00:31:27,089
<font color="#CCCCCC">tea solution an audience solution which</font>

647
00:31:23,999 --> 00:31:30,409
we have shipped with<font color="#CCCCCC"> SR MPLS we</font>

648
00:31:27,089 --> 00:31:33,029
advertise the BGP<font color="#E5E5E5"> route with the SLA and</font>

649
00:31:30,409 --> 00:31:35,309
when the route comes to me<font color="#E5E5E5"> and the</font>

650
00:31:33,029 --> 00:31:37,259
packet comes to the to the node<font color="#CCCCCC"> 1 the</font>

651
00:31:35,309 --> 00:31:39,839
node<font color="#CCCCCC"> 1 knows how to encapsulate that</font>

652
00:31:37,259 --> 00:31:42,839
data into into a particular<font color="#E5E5E5"> SRH header</font>

653
00:31:39,839 --> 00:31:45,469
<font color="#E5E5E5">so let me show case that once the packet</font>

654
00:31:42,839 --> 00:31:48,928
arrives<font color="#E5E5E5"> a particular tenant over here</font>

655
00:31:45,469 --> 00:31:52,769
node 1 will now put an<font color="#E5E5E5"> SRH header and</font>

656
00:31:48,929 --> 00:31:54,570
that<font color="#CCCCCC"> sr h header is</font><font color="#E5E5E5"> the the segments of</font>

657
00:31:52,769 --> 00:31:56,249
it is fully automated through a

658
00:31:54,570 --> 00:31:59,189
controller<font color="#E5E5E5"> or through distributed</font>

659
00:31:56,249 --> 00:32:02,070
<font color="#E5E5E5">approach and you and the segments are a</font>

660
00:31:59,190 --> 00:32:04,979
<font color="#CCCCCC">2 : : c4</font><font color="#E5E5E5"> which is the segment</font><font color="#CCCCCC"> which is</font>

661
00:32:02,070 --> 00:32:07,859
sent through<font color="#CCCCCC"> BGP from node 2 to node 1</font>

662
00:32:04,979 --> 00:32:11,219
and a 3 : : 0 which is an intermediate

663
00:32:07,859 --> 00:32:13,139
<font color="#E5E5E5">segment which has been computed to take</font>

664
00:32:11,219 --> 00:32:16,440
the low latency<font color="#CCCCCC"> path from node 1 to node</font>

665
00:32:13,139 --> 00:32:18,899
2 so in this particular case node 1 does

666
00:32:16,440 --> 00:32:21,719
a<font color="#E5E5E5"> simple function where it copies over a</font>

667
00:32:18,899 --> 00:32:23,579
3 : : 0 which is the<font color="#E5E5E5"> first segment</font><font color="#CCCCCC"> into</font>

668
00:32:21,719 --> 00:32:25,499
the destination<font color="#CCCCCC"> address</font><font color="#E5E5E5"> and sends</font><font color="#CCCCCC"> the</font>

669
00:32:23,579 --> 00:32:28,469
packet<font color="#CCCCCC"> over</font><font color="#E5E5E5"> to the over to the network</font>

670
00:32:25,499 --> 00:32:31,019
<font color="#E5E5E5">the network just takes the packet</font><font color="#CCCCCC"> to the</font>

671
00:32:28,469 --> 00:32:33,539
node 3 node 3 looks at the next

672
00:32:31,019 --> 00:32:35,789
instructions<font color="#E5E5E5"> and that based on the</font>

673
00:32:33,539 --> 00:32:38,549
<font color="#E5E5E5">segment left</font><font color="#CCCCCC"> the segment left</font><font color="#E5E5E5"> and it</font>

674
00:32:35,789 --> 00:32:41,459
<font color="#CCCCCC">copies over that information over to the</font>

675
00:32:38,549 --> 00:32:43,908
destination address again and sends a

676
00:32:41,459 --> 00:32:46,679
packet down once the packet reaches a<font color="#E5E5E5"> 2</font>

677
00:32:43,909 --> 00:32:49,480
again a 2 will just recognize<font color="#CCCCCC"> that this</font>

678
00:32:46,679 --> 00:32:51,760
this network segment belongs to me

679
00:32:49,480 --> 00:32:56,309
but<font color="#CCCCCC"> c4 means</font><font color="#E5E5E5"> which c4 is a function</font>

680
00:32:51,760 --> 00:32:59,350
<font color="#E5E5E5">where c4 means cross-connect from 2 to 4</font>

681
00:32:56,309 --> 00:33:02,830
in<font color="#E5E5E5"> this particular case what we</font><font color="#CCCCCC"> have</font>

682
00:32:59,350 --> 00:33:05,709
done is we<font color="#E5E5E5"> have not only eliminated the</font>

683
00:33:02,830 --> 00:33:08,379
need for any encapsulations<font color="#CCCCCC"> we have not</font>

684
00:33:05,710 --> 00:33:10,840
only<font color="#E5E5E5"> eliminated the excellent GRE and a</font>

685
00:33:08,380 --> 00:33:12,940
bunch of other conversations<font color="#CCCCCC"> what we</font>

686
00:33:10,840 --> 00:33:15,070
have done is we<font color="#E5E5E5"> have solved a problem</font>

687
00:33:12,940 --> 00:33:17,410
which these protocols<font color="#CCCCCC"> cannot also</font><font color="#E5E5E5"> solve</font>

688
00:33:15,070 --> 00:33:19,178
<font color="#E5E5E5">which is the traffic engineering and we</font>

689
00:33:17,410 --> 00:33:21,549
have been a we are I'm showcasing right

690
00:33:19,179 --> 00:33:24,100
now an<font color="#E5E5E5"> example for ipv6</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> this will</font>

691
00:33:21,549 --> 00:33:30,520
work<font color="#CCCCCC"> seamlessly for</font><font color="#E5E5E5"> ipv4 as well or even</font>

692
00:33:24,100 --> 00:33:32,830
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the global</font><font color="#CCCCCC"> internet cases in this</font>

693
00:33:30,520 --> 00:33:35,080
example I'm gonna show<font color="#E5E5E5"> this is another</font>

694
00:33:32,830 --> 00:33:40,990
use case with the with the integrator

695
00:33:35,080 --> 00:33:43,449
with<font color="#CCCCCC"> NFV the same green tenant</font><font color="#E5E5E5"> you we</font>

696
00:33:40,990 --> 00:33:47,830
have a<font color="#E5E5E5"> two green tenants which is server</font>

697
00:33:43,450 --> 00:33:50,320
3 with app 32<font color="#E5E5E5"> is in a container</font><font color="#CCCCCC"> you have</font>

698
00:33:47,830 --> 00:33:55,809
<font color="#E5E5E5">another tenant green tenant where the</font>

699
00:33:50,320 --> 00:33:58,418
app 76 is in a VM<font color="#E5E5E5"> and on top</font><font color="#CCCCCC"> of it there</font>

700
00:33:55,809 --> 00:34:00,790
is<font color="#E5E5E5"> an SLA requirement for the packet</font><font color="#CCCCCC"> to</font>

701
00:33:58,419 --> 00:34:04,929
<font color="#E5E5E5">be steered with the low</font><font color="#CCCCCC"> latency</font><font color="#E5E5E5"> from the</font>

702
00:34:00,790 --> 00:34:06,549
node 1 to node 4<font color="#CCCCCC"> and again</font><font color="#E5E5E5"> you will see</font>

703
00:34:04,929 --> 00:34:08,320
<font color="#E5E5E5">it's very simple</font><font color="#CCCCCC"> it's the same</font>

704
00:34:06,549 --> 00:34:10,659
constructs which I have<font color="#E5E5E5"> showcased so far</font>

705
00:34:08,320 --> 00:34:13,510
<font color="#E5E5E5">the packet comes to one one has</font>

706
00:34:10,659 --> 00:34:15,600
<font color="#CCCCCC">precomputed</font><font color="#E5E5E5"> a path using against a</font>

707
00:34:13,510 --> 00:34:20,020
centralized or distributed approach and

708
00:34:15,600 --> 00:34:22,118
and inserted into<font color="#CCCCCC"> the into the one which</font>

709
00:34:20,020 --> 00:34:24,580
<font color="#E5E5E5">is really</font><font color="#CCCCCC"> mapping</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> anis</font><font color="#E5E5E5"> our policy so</font>

710
00:34:22,119 --> 00:34:26,530
when the packet comes to one and<font color="#E5E5E5"> it's we</font>

711
00:34:24,580 --> 00:34:28,889
steer the packet<font color="#CCCCCC"> into a</font><font color="#E5E5E5"> particular s our</font>

712
00:34:26,530 --> 00:34:31,869
policy<font color="#E5E5E5"> that s our policy will do a</font>

713
00:34:28,889 --> 00:34:35,649
<font color="#E5E5E5">behavior to</font><font color="#CCCCCC"> encap the packet with s rh</font>

714
00:34:31,869 --> 00:34:37,840
<font color="#E5E5E5">and an outer ipv6 address and copy over</font>

715
00:34:35,649 --> 00:34:39,750
<font color="#E5E5E5">the first segment in the network program</font>

716
00:34:37,840 --> 00:34:44,590
instructions to the destination address

717
00:34:39,750 --> 00:34:47,619
back<font color="#E5E5E5"> it goes to 2 node 3 based on a 3 :</font>

718
00:34:44,590 --> 00:34:52,030
:<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 32 once it reaches that particular</font>

719
00:34:47,619 --> 00:34:54,609
node<font color="#CCCCCC"> it's it's it's</font><font color="#E5E5E5"> an app we the app</font>

720
00:34:52,030 --> 00:34:56,919
will will we will send the node 3<font color="#CCCCCC"> will</font>

721
00:34:54,609 --> 00:34:59,290
send the packet<font color="#E5E5E5"> over to the app app does</font>

722
00:34:56,918 --> 00:35:02,410
<font color="#E5E5E5">like for example if it's a firewall it</font>

723
00:34:59,290 --> 00:35:02,950
does<font color="#E5E5E5"> its its job packet comes back to</font>

724
00:35:02,410 --> 00:35:04,839
node 3

725
00:35:02,950 --> 00:35:08,799
and we will reincarnate the packet

726
00:35:04,839 --> 00:35:12,009
copying<font color="#CCCCCC"> over the next</font><font color="#E5E5E5"> segment</font><font color="#CCCCCC"> a for</font><font color="#E5E5E5"> : :</font>

727
00:35:08,799 --> 00:35:13,930
<font color="#E5E5E5">0 into the instruction if you see in</font>

728
00:35:12,010 --> 00:35:18,160
this particular<font color="#CCCCCC"> example what we have</font>

729
00:35:13,930 --> 00:35:20,440
done is we have<font color="#E5E5E5"> the node 3 has no state</font>

730
00:35:18,160 --> 00:35:22,930
information<font color="#E5E5E5"> on where the packet has to</font>

731
00:35:20,440 --> 00:35:25,480
<font color="#CCCCCC">go and</font><font color="#E5E5E5"> there is no state maintained at</font>

732
00:35:22,930 --> 00:35:27,910
all with<font color="#CCCCCC"> vs.</font><font color="#E5E5E5"> in an SH we kind of try to</font>

733
00:35:25,480 --> 00:35:30,520
<font color="#CCCCCC">maintain that state so this</font><font color="#E5E5E5"> solution</font>

734
00:35:27,910 --> 00:35:33,759
<font color="#E5E5E5">makes it more scalable</font><font color="#CCCCCC"> it makes it more</font>

735
00:35:30,520 --> 00:35:36,579
<font color="#E5E5E5">flexible and if any of these servers or</font>

736
00:35:33,760 --> 00:35:38,440
apps goes down controller knows how to

737
00:35:36,579 --> 00:35:40,480
recalculate<font color="#E5E5E5"> it or you can calculate it</font>

738
00:35:38,440 --> 00:35:44,440
distribute Li so there is no flow<font color="#E5E5E5"> which</font>

739
00:35:40,480 --> 00:35:46,420
<font color="#CCCCCC">is maintained</font><font color="#E5E5E5"> also the</font><font color="#CCCCCC"> application can</font>

740
00:35:44,440 --> 00:35:47,980
be<font color="#E5E5E5"> segmented</font><font color="#CCCCCC"> Outing aware or may not be</font>

741
00:35:46,420 --> 00:35:49,599
segmented<font color="#E5E5E5"> auditing aware we have built</font>

742
00:35:47,980 --> 00:35:51,900
proxy functions which<font color="#CCCCCC"> you will see in</font>

743
00:35:49,599 --> 00:35:54,460
<font color="#CCCCCC">that network programming document that</font>

744
00:35:51,900 --> 00:35:58,390
these proxy functions will take care<font color="#CCCCCC"> of</font>

745
00:35:54,460 --> 00:36:02,440
it seamlessly<font color="#E5E5E5"> and and the app the app</font>

746
00:35:58,390 --> 00:36:05,308
can be ipv4 ipv6<font color="#CCCCCC"> or even</font><font color="#E5E5E5"> Ethernet and</font>

747
00:36:02,440 --> 00:36:09,190
the inner payload can be any of that

748
00:36:05,309 --> 00:36:14,109
now once the<font color="#CCCCCC"> node 3</font><font color="#E5E5E5"> has done is thing</font>

749
00:36:09,190 --> 00:36:16,329
<font color="#E5E5E5">node 3 will copy over</font><font color="#CCCCCC"> f4 : : 0 into the</font>

750
00:36:14,109 --> 00:36:18,940
<font color="#E5E5E5">destination address this particular</font><font color="#CCCCCC"> node</font>

751
00:36:16,329 --> 00:36:22,510
is<font color="#E5E5E5"> pre computed again for the low</font>

752
00:36:18,940 --> 00:36:25,030
latency<font color="#CCCCCC"> path and the packet is sent</font><font color="#E5E5E5"> over</font>

753
00:36:22,510 --> 00:36:29,260
the<font color="#E5E5E5"> ipv6</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> once the packet reaches</font>

754
00:36:25,030 --> 00:36:30,940
the node for the the node 4 will does

755
00:36:29,260 --> 00:36:33,250
its normal function which is end

756
00:36:30,940 --> 00:36:36,579
function<font color="#CCCCCC"> and then copy over the next</font>

757
00:36:33,250 --> 00:36:41,950
<font color="#CCCCCC">destination address which is a 5 : : a</font>

758
00:36:36,579 --> 00:36:43,720
76<font color="#CCCCCC"> into the</font><font color="#E5E5E5"> destination address and once</font>

759
00:36:41,950 --> 00:36:47,890
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> done the packet is again shipped</font>

760
00:36:43,720 --> 00:36:51,700
out to<font color="#CCCCCC"> the to the node 5 node 5 once it</font>

761
00:36:47,890 --> 00:36:54,098
<font color="#CCCCCC">receives the particular packet it it it</font>

762
00:36:51,700 --> 00:36:56,439
knows that<font color="#E5E5E5"> it's again an app which</font><font color="#CCCCCC"> is</font>

763
00:36:54,099 --> 00:36:59,079
running<font color="#E5E5E5"> in a particular VM it can it can</font>

764
00:36:56,440 --> 00:37:02,170
do<font color="#E5E5E5"> it can</font><font color="#CCCCCC"> be a proxy or it can be SR</font>

765
00:36:59,079 --> 00:37:04,299
<font color="#CCCCCC">aver node 5 will then strip off the</font>

766
00:37:02,170 --> 00:37:06,880
outer headers<font color="#E5E5E5"> send the inner header to</font>

767
00:37:04,299 --> 00:37:09,339
<font color="#CCCCCC">the or the payload</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the app app can be</font>

768
00:37:06,880 --> 00:37:11,920
IDs or firewall and any other app app

769
00:37:09,339 --> 00:37:13,779
returns the packet<font color="#E5E5E5"> the packet comes in</font>

770
00:37:11,920 --> 00:37:16,720
<font color="#CCCCCC">weari encapsulate the packet into the</font>

771
00:37:13,780 --> 00:37:19,690
SRS header<font color="#E5E5E5"> does a normal processing</font>

772
00:37:16,720 --> 00:37:23,290
copies over<font color="#E5E5E5"> a</font><font color="#CCCCCC"> - which is the next</font>

773
00:37:19,690 --> 00:37:25,420
instruction<font color="#CCCCCC"> a - : : C 4 into the</font>

774
00:37:23,290 --> 00:37:27,850
<font color="#E5E5E5">destination address</font><font color="#CCCCCC"> and we push it on</font>

775
00:37:25,420 --> 00:37:32,800
the interface<font color="#E5E5E5"> the packet traverses from</font>

776
00:37:27,850 --> 00:37:35,560
node 5 to node 2<font color="#CCCCCC"> without with just</font>

777
00:37:32,800 --> 00:37:39,160
normal ipv6 routing<font color="#E5E5E5"> once it reaches node</font>

778
00:37:35,560 --> 00:37:42,070
2 that's light anything<font color="#E5E5E5"> once it reaches</font>

779
00:37:39,160 --> 00:37:44,560
node 2<font color="#E5E5E5"> it just we strip off we call it a</font>

780
00:37:42,070 --> 00:37:48,070
PSP behavior but we strip off the entire

781
00:37:44,560 --> 00:37:52,210
outer ipv6<font color="#CCCCCC"> in SRS header and since the</font>

782
00:37:48,070 --> 00:37:53,860
<font color="#CCCCCC">plain ipv6 address - 2 - 4 in this</font>

783
00:37:52,210 --> 00:37:56,560
<font color="#E5E5E5">particular example again as you have</font>

784
00:37:53,860 --> 00:37:58,420
seen<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> showcased multiple aspects</font>

785
00:37:56,560 --> 00:38:00,250
we<font color="#CCCCCC"> have trying to</font><font color="#E5E5E5"> showcase</font><font color="#CCCCCC"> that we have</font>

786
00:37:58,420 --> 00:38:03,700
<font color="#E5E5E5">integrated with overlay which could be</font>

787
00:38:00,250 --> 00:38:07,390
any control plane we have<font color="#E5E5E5"> included the</font>

788
00:38:03,700 --> 00:38:09,310
<font color="#CCCCCC">NFV apps into the SRH header itself so</font>

789
00:38:07,390 --> 00:38:11,440
it becomes an intermediate hops in<font color="#CCCCCC"> the</font>

790
00:38:09,310 --> 00:38:14,710
in the network instruction we have<font color="#CCCCCC"> also</font>

791
00:38:11,440 --> 00:38:17,410
<font color="#E5E5E5">included the SLA requirements which the</font>

792
00:38:14,710 --> 00:38:20,140
app may have all of<font color="#E5E5E5"> that into the same</font>

793
00:38:17,410 --> 00:38:22,029
<font color="#CCCCCC">SRS header and and we have been able to</font>

794
00:38:20,140 --> 00:38:25,710
achieve<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of that without</font><font color="#E5E5E5"> any other</font>

795
00:38:22,030 --> 00:38:25,710
end<font color="#CCCCCC"> capsulation</font><font color="#E5E5E5"> which might be required</font>

796
00:38:26,820 --> 00:38:34,600
as<font color="#CCCCCC"> i said earlier</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> developed we</font>

797
00:38:32,020 --> 00:38:36,430
<font color="#CCCCCC">have partnered with</font><font color="#E5E5E5"> FD i/o we have</font>

798
00:38:34,600 --> 00:38:39,520
developed these functions which<font color="#CCCCCC"> I've</font>

799
00:38:36,430 --> 00:38:42,669
<font color="#E5E5E5">showcased so far</font><font color="#CCCCCC"> including</font><font color="#E5E5E5"> the proxy</font>

800
00:38:39,520 --> 00:38:46,270
functions for the<font color="#CCCCCC"> NFV into the FTIR</font>

801
00:38:42,670 --> 00:38:48,130
project and this code<font color="#E5E5E5"> is we we have we</font>

802
00:38:46,270 --> 00:38:50,259
are<font color="#E5E5E5"> committed</font><font color="#CCCCCC"> to not only do it for VP</font>

803
00:38:48,130 --> 00:38:52,660
<font color="#E5E5E5">peak use cases but</font><font color="#CCCCCC"> we are also</font><font color="#E5E5E5"> doing it</font>

804
00:38:50,260 --> 00:38:54,910
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the Linux kernel so this called me</font>

805
00:38:52,660 --> 00:38:56,950
is I encourage you to<font color="#CCCCCC"> go to segment</font>

806
00:38:54,910 --> 00:38:58,779
<font color="#E5E5E5">routing dotnet and all this there is a</font>

807
00:38:56,950 --> 00:39:01,740
there's a tab for<font color="#E5E5E5"> the open source code</font>

808
00:38:58,780 --> 00:39:01,740
so you can<font color="#E5E5E5"> go and review that</font>

809
00:39:06,990 --> 00:39:13,810
so spray is is another use case for

810
00:39:11,470 --> 00:39:16,359
segment routing<font color="#E5E5E5"> v6 this is the use case</font>

811
00:39:13,810 --> 00:39:19,779
which<font color="#E5E5E5"> Comcast is doing in field trials</font>

812
00:39:16,360 --> 00:39:23,080
<font color="#CCCCCC">right now and and this</font><font color="#E5E5E5"> is what they are</font>

813
00:39:19,780 --> 00:39:27,010
<font color="#E5E5E5">deploying in their network so with a</font>

814
00:39:23,080 --> 00:39:30,100
spray use case one of<font color="#E5E5E5"> the things</font><font color="#CCCCCC"> which</font>

815
00:39:27,010 --> 00:39:33,970
they are trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> achieve is to</font><font color="#CCCCCC"> have a</font>

816
00:39:30,100 --> 00:39:36,759
multicast freak or multicast has been

817
00:39:33,970 --> 00:39:39,459
deployed in<font color="#E5E5E5"> the core for for a very good</font>

818
00:39:36,760 --> 00:39:41,560
<font color="#E5E5E5">reasons but the we believe there is</font>

819
00:39:39,460 --> 00:39:44,560
<font color="#E5E5E5">another way we can reduce the</font><font color="#CCCCCC"> overall</font>

820
00:39:41,560 --> 00:39:47,170
complexity<font color="#E5E5E5"> for the multicast using this</font>

821
00:39:44,560 --> 00:39:48,279
<font color="#CCCCCC">particular</font><font color="#E5E5E5"> case so what happens here</font><font color="#CCCCCC"> a</font>

822
00:39:47,170 --> 00:39:50,260
content provider

823
00:39:48,280 --> 00:39:52,450
it could be<font color="#E5E5E5"> VPP it could be any node</font>

824
00:39:50,260 --> 00:39:56,080
which understands that<font color="#CCCCCC"> your</font><font color="#E5E5E5"> appearing to</font>

825
00:39:52,450 --> 00:39:59,350
a content provider the content provider

826
00:39:56,080 --> 00:40:01,330
will replicate the information to the

827
00:39:59,350 --> 00:40:04,240
cmts<font color="#E5E5E5"> which will then do the multicast</font>

828
00:40:01,330 --> 00:40:06,069
function but in the core it will just be

829
00:40:04,240 --> 00:40:08,049
a unicast<font color="#CCCCCC"> so it has a network</font>

830
00:40:06,070 --> 00:40:12,670
instruction which<font color="#CCCCCC"> is a spray policy on</font>

831
00:40:08,050 --> 00:40:16,020
top the spray policy is<font color="#E5E5E5"> B to : : and B</font>

832
00:40:12,670 --> 00:40:19,750
<font color="#CCCCCC">for : : which</font><font color="#E5E5E5"> means take my packet from</font>

833
00:40:16,020 --> 00:40:24,160
VPP<font color="#E5E5E5"> which which is the edge node unicast</font>

834
00:40:19,750 --> 00:40:26,800
<font color="#E5E5E5">over to node 2</font><font color="#CCCCCC"> and then to the cmts</font><font color="#E5E5E5"> once</font>

835
00:40:24,160 --> 00:40:28,779
it reaches a particular CMT is then the

836
00:40:26,800 --> 00:40:31,090
packet can<font color="#CCCCCC"> be multicast</font><font color="#E5E5E5"> to the gateways</font>

837
00:40:28,780 --> 00:40:33,720
<font color="#CCCCCC">to provide to</font><font color="#E5E5E5"> the to a particular</font>

838
00:40:31,090 --> 00:40:37,119
<font color="#E5E5E5">channel which customer is subscribed to</font>

839
00:40:33,720 --> 00:40:38,799
similarly we<font color="#E5E5E5"> have another policy which</font>

840
00:40:37,119 --> 00:40:41,730
will take your to a different<font color="#CCCCCC"> geo</font>

841
00:40:38,800 --> 00:40:44,140
<font color="#CCCCCC">location and this is again very</font><font color="#E5E5E5"> simple</font>

842
00:40:41,730 --> 00:40:47,230
<font color="#CCCCCC">precomputed policies which can be</font>

843
00:40:44,140 --> 00:40:51,040
automatically computed your unicasting

844
00:40:47,230 --> 00:40:54,520
from the VPP node again<font color="#CCCCCC"> to be 3 : :</font><font color="#E5E5E5"> to</font>

845
00:40:51,040 --> 00:40:58,060
<font color="#E5E5E5">be 5 : : and once the packet reaches</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> 5</font>

846
00:40:54,520 --> 00:40:59,920
: :<font color="#E5E5E5"> to a particular CMT s5 you just</font>

847
00:40:58,060 --> 00:41:02,560
multicast a unicast<font color="#CCCCCC"> the packet after</font>

848
00:40:59,920 --> 00:41:05,260
<font color="#E5E5E5">that so you see</font><font color="#CCCCCC"> in this particular</font><font color="#E5E5E5"> case</font>

849
00:41:02,560 --> 00:41:07,210
<font color="#E5E5E5">we</font><font color="#CCCCCC"> have been able to do SLA</font>

850
00:41:05,260 --> 00:41:10,900
because you can have<font color="#E5E5E5"> these policies</font>

851
00:41:07,210 --> 00:41:14,560
which are dependent<font color="#E5E5E5"> on some</font><font color="#CCCCCC"> essays you</font>

852
00:41:10,900 --> 00:41:17,050
also<font color="#E5E5E5"> we have also got got rid of the the</font>

853
00:41:14,560 --> 00:41:20,140
multicast<font color="#CCCCCC"> in the core</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we have been</font>

854
00:41:17,050 --> 00:41:20,530
<font color="#E5E5E5">able to do</font><font color="#CCCCCC"> a flexible approach because</font>

855
00:41:20,140 --> 00:41:22,779
if the

856
00:41:20,530 --> 00:41:28,080
topology<font color="#E5E5E5"> changes and controllers in</font><font color="#CCCCCC"> the</font>

857
00:41:22,780 --> 00:41:30,460
picture<font color="#CCCCCC"> it can recompute the</font><font color="#E5E5E5"> path and</font>

858
00:41:28,080 --> 00:41:33,040
one<font color="#E5E5E5"> of the key point to highlight again</font>

859
00:41:30,460 --> 00:41:36,130
here just<font color="#CCCCCC"> to emphasize what I have said</font>

860
00:41:33,040 --> 00:41:38,500
earlier is<font color="#E5E5E5"> that not all net worth</font><font color="#CCCCCC"> not</font>

861
00:41:36,130 --> 00:41:41,740
the entire network<font color="#E5E5E5"> needs to be</font><font color="#CCCCCC"> SR</font><font color="#E5E5E5"> v6</font>

862
00:41:38,500 --> 00:41:43,960
aware<font color="#E5E5E5"> only the nodes which are useful or</font>

863
00:41:41,740 --> 00:41:47,259
are needed<font color="#E5E5E5"> needs to be a savvy six aware</font>

864
00:41:43,960 --> 00:41:49,660
so we have been able to we have<font color="#CCCCCC"> been</font>

865
00:41:47,260 --> 00:41:51,250
<font color="#E5E5E5">able to</font><font color="#CCCCCC"> only do this with with only</font>

866
00:41:49,660 --> 00:41:54,190
<font color="#E5E5E5">three you know or four nodes which are</font>

867
00:41:51,250 --> 00:41:56,230
which are upgraded to be<font color="#E5E5E5"> SR v6 rest of</font>

868
00:41:54,190 --> 00:42:02,170
the network<font color="#CCCCCC"> just</font><font color="#E5E5E5"> continue to be a legacy</font>

869
00:41:56,230 --> 00:42:04,870
ipv6<font color="#CCCCCC"> network this</font><font color="#E5E5E5"> is one of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> newest</font>

870
00:42:02,170 --> 00:42:06,820
use case which we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> built we talked</font>

871
00:42:04,870 --> 00:42:10,089
about it recently<font color="#CCCCCC"> I'm gonna switch a</font>

872
00:42:06,820 --> 00:42:13,210
gear a little<font color="#E5E5E5"> bit an instant off talking</font>

873
00:42:10,090 --> 00:42:16,030
about<font color="#CCCCCC"> SR v6</font><font color="#E5E5E5"> I'm gonna cover this use</font>

874
00:42:13,210 --> 00:42:17,740
case with SR MPLS but please in<font color="#CCCCCC"> no way</font>

875
00:42:16,030 --> 00:42:20,230
think<font color="#CCCCCC"> that this cannot be</font><font color="#E5E5E5"> done with SR</font>

876
00:42:17,740 --> 00:42:23,529
v6<font color="#E5E5E5"> in fact it's as intuitive</font><font color="#CCCCCC"> as it</font><font color="#E5E5E5"> can</font>

877
00:42:20,230 --> 00:42:26,080
be done with with<font color="#E5E5E5"> SR MPLS so in this</font>

878
00:42:23,530 --> 00:42:27,460
case you on the right<font color="#E5E5E5"> side you have</font><font color="#CCCCCC"> a</font>

879
00:42:26,080 --> 00:42:30,160
service<font color="#E5E5E5"> provider network which has</font>

880
00:42:27,460 --> 00:42:32,980
presence<font color="#E5E5E5"> all over</font><font color="#CCCCCC"> Europe</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> a node</font>

881
00:42:30,160 --> 00:42:36,490
1 which is<font color="#E5E5E5"> Lisbon you have a node 7</font>

882
00:42:32,980 --> 00:42:41,380
which is<font color="#E5E5E5"> Athens so in this particular</font>

883
00:42:36,490 --> 00:42:44,709
<font color="#E5E5E5">case we have</font><font color="#CCCCCC"> a label stack using SR MPLS</font>

884
00:42:41,380 --> 00:42:48,370
which has been pre computed and that one

885
00:42:44,710 --> 00:42:50,350
<font color="#CCCCCC">of the label stack is</font><font color="#E5E5E5"> 60 is 1600</font><font color="#CCCCCC"> 7 which</font>

886
00:42:48,370 --> 00:42:53,140
is<font color="#E5E5E5"> default routing the BGP</font><font color="#CCCCCC"> best-effort</font>

887
00:42:50,350 --> 00:42:55,299
<font color="#CCCCCC">just taking the packet</font><font color="#E5E5E5"> from one point to</font>

888
00:42:53,140 --> 00:42:57,460
another point and that's the LSP label

889
00:42:55,300 --> 00:43:00,970
you<font color="#CCCCCC"> have another label</font><font color="#E5E5E5"> another label</font>

890
00:42:57,460 --> 00:43:03,640
<font color="#E5E5E5">stack which is which</font><font color="#CCCCCC"> is providing you</font>

891
00:43:00,970 --> 00:43:07,600
the bandwidth<font color="#E5E5E5"> Karen thing now this label</font>

892
00:43:03,640 --> 00:43:12,879
stack is on is<font color="#E5E5E5"> actually tying to an SR</font>

893
00:43:07,600 --> 00:43:15,400
policy on node 1 and that tying to s our

894
00:43:12,880 --> 00:43:17,980
policy is mapped to a particular another

895
00:43:15,400 --> 00:43:21,070
label<font color="#E5E5E5"> we call it a</font><font color="#CCCCCC"> CID</font><font color="#E5E5E5"> or an identifier</font>

896
00:43:17,980 --> 00:43:24,880
you can call it a binding<font color="#E5E5E5"> set and here</font>

897
00:43:21,070 --> 00:43:28,180
the binding said is 2400 - we have

898
00:43:24,880 --> 00:43:30,700
another SR policy where somebody<font color="#E5E5E5"> wants</font>

899
00:43:28,180 --> 00:43:33,069
to<font color="#E5E5E5"> go from node 1 to node 7 but wants</font><font color="#CCCCCC"> to</font>

900
00:43:30,700 --> 00:43:33,910
take a low latency<font color="#CCCCCC"> path</font><font color="#E5E5E5"> so it can go</font>

901
00:43:33,070 --> 00:43:37,390
<font color="#E5E5E5">from node a</font>

902
00:43:33,910 --> 00:43:39,038
<font color="#CCCCCC">to node</font><font color="#E5E5E5"> 9 to node 7 and that label stack</font>

903
00:43:37,390 --> 00:43:41,859
is sixteen thousand nine and<font color="#E5E5E5"> sixteen</font>

904
00:43:39,039 --> 00:43:44,589
thousand seven again this is only on

905
00:43:41,859 --> 00:43:47,740
node one<font color="#CCCCCC"> its anis our policy</font><font color="#E5E5E5"> mapping to</font>

906
00:43:44,589 --> 00:43:49,180
a low latency<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> it's mapping</font><font color="#E5E5E5"> to a</font>

907
00:43:47,740 --> 00:43:54,220
particular identifier we call it a

908
00:43:49,180 --> 00:43:57,549
binding set now let's look at how<font color="#CCCCCC"> this</font>

909
00:43:54,220 --> 00:44:02,049
helps<font color="#E5E5E5"> we have with the service provider</font>

910
00:43:57,549 --> 00:44:04,030
<font color="#E5E5E5">now let's say we put two more blocks in</font>

911
00:44:02,049 --> 00:44:07,240
the in the picture<font color="#E5E5E5"> we have on the left</font>

912
00:44:04,030 --> 00:44:08,619
side an enterprise network<font color="#CCCCCC"> even</font><font color="#E5E5E5"> we have</font>

913
00:44:07,240 --> 00:44:10,569
on the right<font color="#CCCCCC"> side of another</font><font color="#E5E5E5"> enterprise</font>

914
00:44:08,619 --> 00:44:14,500
with the same site with a different side

915
00:44:10,569 --> 00:44:17,950
side to an app one wants<font color="#CCCCCC"> to just do</font>

916
00:44:14,500 --> 00:44:21,190
normal default<font color="#E5E5E5"> routing so what it does</font>

917
00:44:17,950 --> 00:44:25,299
is the<font color="#E5E5E5"> e one encrypts</font><font color="#CCCCCC"> the packet which</font>

918
00:44:21,190 --> 00:44:27,490
<font color="#CCCCCC">is coming</font><font color="#E5E5E5"> in and it encapsulate with the</font>

919
00:44:25,299 --> 00:44:29,740
with the outer packet and sends the

920
00:44:27,490 --> 00:44:33,879
packet to<font color="#CCCCCC"> the service provider node</font><font color="#E5E5E5"> one</font>

921
00:44:29,740 --> 00:44:36,339
<font color="#E5E5E5">once the node receives it</font><font color="#CCCCCC"> it will just</font>

922
00:44:33,880 --> 00:44:38,680
do the best<font color="#E5E5E5"> best path routing using the</font>

923
00:44:36,339 --> 00:44:41,109
LSP label and the node reaches node

924
00:44:38,680 --> 00:44:43,450
seven<font color="#E5E5E5"> in this particular case the</font>

925
00:44:41,109 --> 00:44:47,470
appliance or application did not have

926
00:44:43,450 --> 00:44:50,558
any any traffic<font color="#E5E5E5"> engineering requirements</font>

927
00:44:47,470 --> 00:44:54,250
<font color="#CCCCCC">so</font><font color="#E5E5E5"> we did not do anything different</font><font color="#CCCCCC"> we</font>

928
00:44:50,559 --> 00:44:56,920
<font color="#E5E5E5">just use the normal I P normal MPLS</font>

929
00:44:54,250 --> 00:45:04,059
routing MPLS label switching<font color="#E5E5E5"> to take the</font>

930
00:44:56,920 --> 00:45:05,500
packet from<font color="#E5E5E5"> node 1 to node</font><font color="#CCCCCC"> 7 let's talk</font>

931
00:45:04,059 --> 00:45:07,029
about a<font color="#E5E5E5"> different application</font><font color="#CCCCCC"> in this</font>

932
00:45:05,500 --> 00:45:08,980
<font color="#E5E5E5">particular case you have</font><font color="#CCCCCC"> an application</font>

933
00:45:07,029 --> 00:45:12,039
<font color="#E5E5E5">it's a normal world use case where the</font>

934
00:45:08,980 --> 00:45:14,440
application wants to guarantee<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 10 Mbps</font>

935
00:45:12,039 --> 00:45:17,470
bandwidth to<font color="#CCCCCC"> be available from node 1</font><font color="#E5E5E5"> to</font>

936
00:45:14,440 --> 00:45:18,849
node 7<font color="#CCCCCC"> in this particular case</font><font color="#E5E5E5"> even</font>

937
00:45:17,470 --> 00:45:21,098
which is<font color="#CCCCCC"> the enterprise</font><font color="#E5E5E5"> network</font>

938
00:45:18,849 --> 00:45:23,289
recognizes that because it's in the best

939
00:45:21,099 --> 00:45:25,359
position for<font color="#E5E5E5"> that particular node in the</font>

940
00:45:23,289 --> 00:45:28,029
enterprise<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be able to realize what</font>

941
00:45:25,359 --> 00:45:31,720
the app needs once it realizes that it

942
00:45:28,029 --> 00:45:34,150
<font color="#CCCCCC">pushes a label</font><font color="#E5E5E5"> 2400</font><font color="#CCCCCC"> - which was that</font>

943
00:45:31,720 --> 00:45:36,819
binding<font color="#CCCCCC"> said</font><font color="#E5E5E5"> or in an identifier which I</font>

944
00:45:34,150 --> 00:45:40,329
mentioned earlier<font color="#E5E5E5"> and and</font><font color="#CCCCCC"> ships the</font>

945
00:45:36,819 --> 00:45:43,480
packet<font color="#CCCCCC"> over to node 1</font><font color="#E5E5E5"> once the packet</font>

946
00:45:40,329 --> 00:45:47,049
reaches node 1 node<font color="#E5E5E5"> one realizes that oh</font>

947
00:45:43,480 --> 00:45:47,800
this packet came with 2400<font color="#E5E5E5"> - we steer</font>

948
00:45:47,049 --> 00:45:50,830
the packet

949
00:45:47,800 --> 00:45:54,760
<font color="#E5E5E5">- - our policy the SR policy derives</font>

950
00:45:50,830 --> 00:45:58,080
that label stack which was to take the

951
00:45:54,760 --> 00:46:01,360
packet from<font color="#CCCCCC"> ten to eleven to twelve</font><font color="#E5E5E5"> and</font>

952
00:45:58,080 --> 00:46:03,069
this is done again automatically<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if</font>

953
00:46:01,360 --> 00:46:05,320
there is something<font color="#E5E5E5"> with changes in the</font>

954
00:46:03,070 --> 00:46:07,570
topology<font color="#E5E5E5"> of the service provider network</font>

955
00:46:05,320 --> 00:46:09,880
it<font color="#E5E5E5"> can pre-compute the path but the</font>

956
00:46:07,570 --> 00:46:11,740
binding<font color="#CCCCCC"> said or the identifier does not</font>

957
00:46:09,880 --> 00:46:15,220
change<font color="#E5E5E5"> it continues to remain the same</font>

958
00:46:11,740 --> 00:46:17,379
<font color="#E5E5E5">so so now in this particular case we</font>

959
00:46:15,220 --> 00:46:20,439
<font color="#CCCCCC">have been able to do for app - a</font>

960
00:46:17,380 --> 00:46:23,560
bandwidth guarantee - from node 1<font color="#E5E5E5"> to</font>

961
00:46:20,440 --> 00:46:26,320
node 7 and and the packet goes to node 7

962
00:46:23,560 --> 00:46:29,980
and then we<font color="#CCCCCC"> take out the outer LSP and</font>

963
00:46:26,320 --> 00:46:32,050
sends a packet<font color="#CCCCCC"> over to eat</font><font color="#E5E5E5"> similarly you</font>

964
00:46:29,980 --> 00:46:35,080
have another app which needs low latency

965
00:46:32,050 --> 00:46:39,510
<font color="#CCCCCC">in this</font><font color="#E5E5E5"> particular case we have</font><font color="#CCCCCC"> been</font>

966
00:46:35,080 --> 00:46:42,580
able to just push another header<font color="#E5E5E5"> another</font>

967
00:46:39,510 --> 00:46:45,190
<font color="#E5E5E5">2400 3 label once the packet reaches</font>

968
00:46:42,580 --> 00:46:47,590
node 1<font color="#E5E5E5"> we steer the packet into a</font>

969
00:46:45,190 --> 00:46:50,380
particular<font color="#E5E5E5"> SR policy which is only on</font>

970
00:46:47,590 --> 00:46:52,960
node 1 and then that that<font color="#E5E5E5"> has a pre</font>

971
00:46:50,380 --> 00:46:55,900
computed path and that path<font color="#E5E5E5"> has node a</font>

972
00:46:52,960 --> 00:46:59,680
to node 9 and finally to node 7 and

973
00:46:55,900 --> 00:47:04,060
eventually to eat<font color="#E5E5E5"> so you see in this</font>

974
00:46:59,680 --> 00:47:07,419
<font color="#E5E5E5">case</font><font color="#CCCCCC"> we have been able to steer the</font>

975
00:47:04,060 --> 00:47:09,610
packets over<font color="#CCCCCC"> the the SP network</font><font color="#E5E5E5"> but on</font>

976
00:47:07,420 --> 00:47:11,740
<font color="#E5E5E5">top</font><font color="#CCCCCC"> of it</font><font color="#E5E5E5"> we have been able to realize</font>

977
00:47:09,610 --> 00:47:17,410
<font color="#CCCCCC">the SLA requirements for the</font>

978
00:47:11,740 --> 00:47:19,689
applications to summarize the binding

979
00:47:17,410 --> 00:47:21,250
<font color="#CCCCCC">set which I was mentioning earlier is is</font>

980
00:47:19,690 --> 00:47:24,130
completely<font color="#CCCCCC"> crucial for the enterprise</font>

981
00:47:21,250 --> 00:47:26,140
<font color="#E5E5E5">it's secured</font><font color="#CCCCCC"> I have not tried to</font><font color="#E5E5E5"> explain</font>

982
00:47:24,130 --> 00:47:28,060
that<font color="#E5E5E5"> over here but if</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> interested</font>

983
00:47:26,140 --> 00:47:31,060
please come to me and I can explain<font color="#E5E5E5"> some</font>

984
00:47:28,060 --> 00:47:35,200
more<font color="#E5E5E5"> in a more technical depth we also</font>

985
00:47:31,060 --> 00:47:38,170
have a<font color="#CCCCCC"> can we also have a counter</font><font color="#E5E5E5"> /</font>

986
00:47:35,200 --> 00:47:41,100
binding<font color="#E5E5E5"> said that counter computes which</font>

987
00:47:38,170 --> 00:47:46,300
allows for for the usage based billing

988
00:47:41,100 --> 00:47:49,509
<font color="#E5E5E5">we also have the the delegation of</font><font color="#CCCCCC"> the</font>

989
00:47:46,300 --> 00:47:51,820
application recognition the policy

990
00:47:49,510 --> 00:47:54,490
decisions<font color="#CCCCCC"> we leave it to the enterprise</font>

991
00:47:51,820 --> 00:47:57,790
<font color="#E5E5E5">we we do not want to create that</font>

992
00:47:54,490 --> 00:48:00,160
paradigm and who knows it better<font color="#E5E5E5"> that</font>

993
00:47:57,790 --> 00:48:01,210
when an<font color="#E5E5E5"> application needs a</font><font color="#CCCCCC"> non</font><font color="#E5E5E5"> default</font>

994
00:48:00,160 --> 00:48:03,009
path

995
00:48:01,210 --> 00:48:04,990
and which<font color="#E5E5E5"> non-default path has</font><font color="#CCCCCC"> needed</font>

996
00:48:03,010 --> 00:48:07,420
based on<font color="#E5E5E5"> the application needs it can</font>

997
00:48:04,990 --> 00:48:11,109
<font color="#E5E5E5">just attach those right labels and send</font>

998
00:48:07,420 --> 00:48:13,480
it forward bindings it has other

999
00:48:11,110 --> 00:48:15,880
applicability we can even stitch

1000
00:48:13,480 --> 00:48:19,900
<font color="#E5E5E5">together with the</font><font color="#CCCCCC"> nfe applications and</font>

1001
00:48:15,880 --> 00:48:22,990
other other parameters<font color="#CCCCCC"> one of the key</font>

1002
00:48:19,900 --> 00:48:25,540
point<font color="#E5E5E5"> to mention over here is the edge</font>

1003
00:48:22,990 --> 00:48:27,490
devices<font color="#CCCCCC"> in the normal</font><font color="#E5E5E5"> Estevan scenario</font>

1004
00:48:25,540 --> 00:48:30,310
<font color="#E5E5E5">are the ones using some Estevan</font>

1005
00:48:27,490 --> 00:48:31,930
controller and probing<font color="#CCCCCC"> the network</font><font color="#E5E5E5"> but</font>

1006
00:48:30,310 --> 00:48:34,990
that probing still goes over some

1007
00:48:31,930 --> 00:48:38,100
default path using<font color="#CCCCCC"> this binding said in</font>

1008
00:48:34,990 --> 00:48:41,049
the<font color="#E5E5E5"> Estevan controller you can actually</font>

1009
00:48:38,100 --> 00:48:44,319
you the<font color="#CCCCCC"> Estevan controller can actually</font>

1010
00:48:41,050 --> 00:48:47,890
<font color="#E5E5E5">check the applicability of</font><font color="#CCCCCC"> a path</font><font color="#E5E5E5"> in a</font>

1011
00:48:44,320 --> 00:48:50,860
particular location<font color="#E5E5E5"> of a network so it's</font>

1012
00:48:47,890 --> 00:48:53,859
more granular and it also<font color="#E5E5E5"> opens up more</font>

1013
00:48:50,860 --> 00:48:55,930
services where it can<font color="#E5E5E5"> make</font><font color="#CCCCCC"> about better</font>

1014
00:48:53,860 --> 00:48:59,230
decisions<font color="#E5E5E5"> for instance if</font><font color="#CCCCCC"> you're</font>

1015
00:48:55,930 --> 00:49:01,390
steering<font color="#E5E5E5"> into</font><font color="#CCCCCC"> a non-default</font><font color="#E5E5E5"> path and you</font>

1016
00:48:59,230 --> 00:49:03,940
have<font color="#CCCCCC"> an st man controller which is using</font>

1017
00:49:01,390 --> 00:49:06,549
a binding set for high bandwidth<font color="#CCCCCC"> but</font>

1018
00:49:03,940 --> 00:49:09,040
<font color="#E5E5E5">it's also and</font><font color="#CCCCCC"> use using no</font><font color="#E5E5E5"> binding set</font>

1019
00:49:06,550 --> 00:49:11,980
for the load for the the<font color="#E5E5E5"> normal default</font>

1020
00:49:09,040 --> 00:49:14,890
path if the normal<font color="#CCCCCC"> default path is as</font>

1021
00:49:11,980 --> 00:49:16,540
good as<font color="#E5E5E5"> that path which is which</font><font color="#CCCCCC"> you are</font>

1022
00:49:14,890 --> 00:49:18,100
using<font color="#E5E5E5"> for the high bandwidth you</font><font color="#CCCCCC"> can</font>

1023
00:49:16,540 --> 00:49:20,410
switch over<font color="#E5E5E5"> the traffic now to the</font>

1024
00:49:18,100 --> 00:49:23,740
default path<font color="#E5E5E5"> because it's less</font><font color="#CCCCCC"> expensive</font>

1025
00:49:20,410 --> 00:49:26,319
so you<font color="#E5E5E5"> see now you have</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> ability to</font>

1026
00:49:23,740 --> 00:49:31,799
<font color="#E5E5E5">be able</font><font color="#CCCCCC"> to make these decisions based on</font>

1027
00:49:26,320 --> 00:49:37,450
much<font color="#CCCCCC"> more finer requirements we also</font>

1028
00:49:31,800 --> 00:49:39,550
have for<font color="#E5E5E5"> the SP this also enables cases</font>

1029
00:49:37,450 --> 00:49:42,790
where the service<font color="#E5E5E5"> provider can actually</font>

1030
00:49:39,550 --> 00:49:45,040
now do monitoring<font color="#E5E5E5"> in their own network</font>

1031
00:49:42,790 --> 00:49:47,620
for their own use on based on the low

1032
00:49:45,040 --> 00:49:51,220
latency<font color="#CCCCCC"> and loss</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that they can tune</font>

1033
00:49:47,620 --> 00:49:54,400
the network better<font color="#CCCCCC"> and it opens up the</font>

1034
00:49:51,220 --> 00:49:56,890
possibility<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the richness the</font><font color="#CCCCCC"> service</font>

1035
00:49:54,400 --> 00:49:59,350
providers have in the<font color="#E5E5E5"> network to offer</font>

1036
00:49:56,890 --> 00:50:01,990
new services so if there are enterprises

1037
00:49:59,350 --> 00:50:03,880
which are<font color="#E5E5E5"> serving the applications which</font>

1038
00:50:01,990 --> 00:50:06,450
are<font color="#E5E5E5"> very time critical</font><font color="#CCCCCC"> we should be able</font>

1039
00:50:03,880 --> 00:50:06,450
to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> that</font>

1040
00:50:06,880 --> 00:50:12,580
<font color="#E5E5E5">all right so I'll quickly run</font><font color="#CCCCCC"> into this</font>

1041
00:50:09,640 --> 00:50:15,819
<font color="#E5E5E5">into the significance of second routing</font>

1042
00:50:12,580 --> 00:50:17,410
into the mobile network<font color="#CCCCCC"> but there is a</font>

1043
00:50:15,820 --> 00:50:19,750
lot<font color="#CCCCCC"> more details which we have</font><font color="#E5E5E5"> mentioned</font>

1044
00:50:17,410 --> 00:50:21,250
in<font color="#CCCCCC"> the draft so please feel free to look</font>

1045
00:50:19,750 --> 00:50:23,020
into that as well and if<font color="#E5E5E5"> you have</font>

1046
00:50:21,250 --> 00:50:24,730
specific<font color="#E5E5E5"> requirements</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> talk to me</font>

1047
00:50:23,020 --> 00:50:27,130
but in this particular case<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a</font>

1048
00:50:24,730 --> 00:50:28,720
classical mobile network<font color="#E5E5E5"> it's completely</font>

1049
00:50:27,130 --> 00:50:30,730
fragmented you have a<font color="#CCCCCC"> ran network you</font>

1050
00:50:28,720 --> 00:50:33,220
have<font color="#CCCCCC"> EPC</font><font color="#E5E5E5"> and you have a SGI</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> network</font>

1051
00:50:30,730 --> 00:50:36,220
with the<font color="#CCCCCC"> L</font><font color="#E5E5E5"> 10</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> anchor point and</font><font color="#CCCCCC"> l3</font>

1052
00:50:33,220 --> 00:50:38,709
anchor point<font color="#E5E5E5"> and we are doing the gtp</font>

1053
00:50:36,220 --> 00:50:41,169
you tunnel encapsulation<font color="#E5E5E5"> it's a non</font>

1054
00:50:38,710 --> 00:50:42,820
optimal path there is no SLA

1055
00:50:41,170 --> 00:50:44,920
requirements which<font color="#E5E5E5"> are there so we</font>

1056
00:50:42,820 --> 00:50:48,940
cannot achieve any SLA using this

1057
00:50:44,920 --> 00:50:52,320
<font color="#E5E5E5">network</font><font color="#CCCCCC"> however with</font><font color="#E5E5E5"> segment routing and</font>

1058
00:50:48,940 --> 00:50:55,510
<font color="#CCCCCC">5g you</font><font color="#E5E5E5"> can do it by using some</font><font color="#CCCCCC"> of these</font>

1059
00:50:52,320 --> 00:50:57,280
some of these functions which<font color="#CCCCCC"> have been</font>

1060
00:50:55,510 --> 00:50:58,540
described<font color="#CCCCCC"> in network programming and</font>

1061
00:50:57,280 --> 00:51:00,790
some of the functions that<font color="#CCCCCC"> you might</font>

1062
00:50:58,540 --> 00:51:02,950
<font color="#E5E5E5">know like for example</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> function for</font>

1063
00:51:00,790 --> 00:51:04,750
the<font color="#CCCCCC"> L 2 anchor</font><font color="#E5E5E5"> node would mean that once</font>

1064
00:51:02,950 --> 00:51:07,509
the packet comes to that particular<font color="#E5E5E5"> L 2</font>

1065
00:51:04,750 --> 00:51:09,580
anchor node<font color="#E5E5E5"> it just needs to send it</font>

1066
00:51:07,510 --> 00:51:12,730
just<font color="#CCCCCC"> needs</font><font color="#E5E5E5"> to send it to to the next</font>

1067
00:51:09,580 --> 00:51:14,860
node<font color="#E5E5E5"> or n dot</font><font color="#CCCCCC"> b6</font><font color="#E5E5E5"> we call it a binding</font>

1068
00:51:12,730 --> 00:51:17,500
set<font color="#E5E5E5"> which means that if the</font><font color="#CCCCCC"> L 2</font><font color="#E5E5E5"> anchor</font>

1069
00:51:14,860 --> 00:51:19,690
node is using the classical routing on

1070
00:51:17,500 --> 00:51:22,150
this side and ipv6<font color="#E5E5E5"> on the other side we</font>

1071
00:51:19,690 --> 00:51:25,180
<font color="#E5E5E5">can actually create a policy which is n</font>

1072
00:51:22,150 --> 00:51:27,940
dot<font color="#CCCCCC"> b6 and you can steer based on an SLA</font>

1073
00:51:25,180 --> 00:51:32,379
requirements into that into<font color="#E5E5E5"> the uplink</font>

1074
00:51:27,940 --> 00:51:36,970
or downlink from<font color="#E5E5E5"> the L 2 anchor node now</font>

1075
00:51:32,380 --> 00:51:40,090
with that<font color="#E5E5E5"> there are of course more use</font>

1076
00:51:36,970 --> 00:51:42,459
<font color="#CCCCCC">cases service pipelining microservices</font>

1077
00:51:40,090 --> 00:51:45,550
<font color="#E5E5E5">load balancing if I have more</font><font color="#CCCCCC"> time we</font>

1078
00:51:42,460 --> 00:51:47,410
<font color="#E5E5E5">can we can go over that but as I</font><font color="#CCCCCC"> said if</font>

1079
00:51:45,550 --> 00:51:50,380
you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> any questions or applicability</font>

1080
00:51:47,410 --> 00:51:52,660
of this please come talk to me<font color="#CCCCCC"> and we</font>

1081
00:51:50,380 --> 00:51:54,400
<font color="#E5E5E5">can you</font><font color="#CCCCCC"> can we can</font><font color="#E5E5E5"> partner and and try</font>

1082
00:51:52,660 --> 00:51:59,080
to explain more technically these these

1083
00:51:54,400 --> 00:52:02,370
<font color="#E5E5E5">things so in the end I think what we</font>

1084
00:51:59,080 --> 00:52:04,840
<font color="#E5E5E5">have described is the</font><font color="#CCCCCC"> segment routing v6</font>

1085
00:52:02,370 --> 00:52:08,830
<font color="#E5E5E5">we started with what is segment routing</font>

1086
00:52:04,840 --> 00:52:12,670
we try to explain<font color="#E5E5E5"> the applicability and</font>

1087
00:52:08,830 --> 00:52:15,640
the need for ipv6<font color="#CCCCCC"> network and a need for</font>

1088
00:52:12,670 --> 00:52:18,670
applications to<font color="#E5E5E5"> have the SLA</font>

1089
00:52:15,640 --> 00:52:20,558
requirements and we try<font color="#E5E5E5"> to explain</font><font color="#CCCCCC"> the</font>

1090
00:52:18,670 --> 00:52:21,910
simplicity of segment routing these

1091
00:52:20,559 --> 00:52:23,529
and try to eliminate<font color="#E5E5E5"> some of the</font>

1092
00:52:21,910 --> 00:52:26,558
<font color="#CCCCCC">protocols which have been developed over</font>

1093
00:52:23,529 --> 00:52:28,689
time<font color="#E5E5E5"> and and in the end covered with</font>

1094
00:52:26,559 --> 00:52:32,430
some of the use cases<font color="#E5E5E5"> so with that I</font>

1095
00:52:28,689 --> 00:52:32,430
opened up<font color="#E5E5E5"> for any</font><font color="#CCCCCC"> questions if you have</font>

1096
00:52:35,519 --> 00:52:39,788
hello John O'Brien from<font color="#E5E5E5"> the University</font>

1097
00:52:38,109 --> 00:52:41,619
of Pennsylvania<font color="#CCCCCC"> thank you</font><font color="#E5E5E5"> for this talk</font>

1098
00:52:39,789 --> 00:52:43,809
<font color="#CCCCCC">I appreciate that you</font><font color="#E5E5E5"> found an</font>

1099
00:52:41,619 --> 00:52:49,779
<font color="#CCCCCC">opportunity</font><font color="#E5E5E5"> to use the phrase legacy</font>

1100
00:52:43,809 --> 00:52:53,430
ipv6<font color="#E5E5E5"> and ironically I was wondering if</font>

1101
00:52:49,779 --> 00:52:57,549
you could comment<font color="#E5E5E5"> on some challenges of</font>

1102
00:52:53,430 --> 00:52:59,649
using<font color="#E5E5E5"> SR v6 in an inter domain scenario</font>

1103
00:52:57,549 --> 00:53:02,949
<font color="#CCCCCC">in light of some of the</font><font color="#E5E5E5"> challenges we've</font>

1104
00:52:59,650 --> 00:53:06,069
heard about<font color="#E5E5E5"> recently so we have deployed</font>

1105
00:53:02,949 --> 00:53:08,199
SR MPLS<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> inter domain scenario</font>

1106
00:53:06,069 --> 00:53:10,719
<font color="#E5E5E5">using distributed or centralized</font>

1107
00:53:08,199 --> 00:53:12,819
approach<font color="#E5E5E5"> and it works seamlessly we have</font>

1108
00:53:10,719 --> 00:53:14,739
created<font color="#E5E5E5"> these concepts of like binding</font>

1109
00:53:12,819 --> 00:53:17,288
<font color="#E5E5E5">set which I was described which is</font>

1110
00:53:14,739 --> 00:53:19,089
acting as the<font color="#E5E5E5"> bridge</font><font color="#CCCCCC"> between one domain</font>

1111
00:53:17,289 --> 00:53:21,189
<font color="#E5E5E5">and another domain so you send the</font>

1112
00:53:19,089 --> 00:53:23,078
packet<font color="#CCCCCC"> using that binding set and that's</font>

1113
00:53:21,189 --> 00:53:23,499
now<font color="#CCCCCC"> the next domain knows what to do</font>

1114
00:53:23,079 --> 00:53:25,509
<font color="#E5E5E5">with it</font>

1115
00:53:23,499 --> 00:53:27,038
till it reaches<font color="#CCCCCC"> the other side</font><font color="#E5E5E5"> and then</font>

1116
00:53:25,509 --> 00:53:29,439
there is another binding set which<font color="#E5E5E5"> maps</font>

1117
00:53:27,039 --> 00:53:32,019
it to<font color="#E5E5E5"> the next to me and it will work</font>

1118
00:53:29,439 --> 00:53:34,890
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> way for segment ordering v6 the</font>

1119
00:53:32,019 --> 00:53:38,618
I guess my<font color="#CCCCCC"> concern is that the</font>

1120
00:53:34,890 --> 00:53:41,379
dependency on extension headers and is

1121
00:53:38,619 --> 00:53:42,130
gonna limit the limit the adoption in

1122
00:53:41,380 --> 00:53:43,929
the<font color="#E5E5E5"> same way that we're seeing</font>

1123
00:53:42,130 --> 00:53:48,339
<font color="#E5E5E5">challenges with extension headers in</font>

1124
00:53:43,929 --> 00:53:50,319
other ways so we have already<font color="#E5E5E5"> seen</font><font color="#CCCCCC"> the</font>

1125
00:53:48,339 --> 00:53:52,689
some<font color="#E5E5E5"> of the adoptions</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> with the</font>

1126
00:53:50,319 --> 00:53:55,959
extension headers in some of some of the

1127
00:53:52,689 --> 00:54:00,399
other service providers the the

1128
00:53:55,959 --> 00:54:02,469
limitation<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> I'm not so sure</font><font color="#E5E5E5"> about</font>

1129
00:54:00,400 --> 00:54:04,269
like specifically<font color="#E5E5E5"> which particular</font>

1130
00:54:02,469 --> 00:54:05,920
<font color="#E5E5E5">limitation but we can talk more and see</font>

1131
00:54:04,269 --> 00:54:10,058
the specific limitation you're referring

1132
00:54:05,920 --> 00:54:12,249
to Austin<font color="#CCCCCC"> Brower with FairPoint</font>

1133
00:54:10,059 --> 00:54:18,880
<font color="#CCCCCC">communications I'm</font><font color="#E5E5E5"> over here hi to your</font>

1134
00:54:12,249 --> 00:54:20,379
right to your right<font color="#CCCCCC"> back on this slide</font>

1135
00:54:18,880 --> 00:54:23,529
where<font color="#CCCCCC"> you</font><font color="#E5E5E5"> describe the use case for</font>

1136
00:54:20,380 --> 00:54:27,939
integrated<font color="#CCCCCC"> nfe could you describe how</font>

1137
00:54:23,529 --> 00:54:31,749
<font color="#E5E5E5">the SRH information is maintained when</font>

1138
00:54:27,939 --> 00:54:33,328
you're<font color="#E5E5E5"> passing an</font><font color="#CCCCCC"> ssh application that's</font>

1139
00:54:31,749 --> 00:54:35,368
unaware of the<font color="#CCCCCC"> as</font>

1140
00:54:33,329 --> 00:54:41,400
as<font color="#CCCCCC"> Rachel</font><font color="#E5E5E5"> sure I'll just go to that</font>

1141
00:54:35,369 --> 00:54:43,559
slide<font color="#CCCCCC"> so we have created give me one</font>

1142
00:54:41,400 --> 00:54:46,469
second<font color="#E5E5E5"> yeah</font>

1143
00:54:43,559 --> 00:54:49,019
in this<font color="#E5E5E5"> case let's assume that five is</font>

1144
00:54:46,469 --> 00:54:52,410
<font color="#E5E5E5">the application</font><font color="#CCCCCC"> seventy six which</font><font color="#E5E5E5"> is</font>

1145
00:54:49,019 --> 00:54:54,209
running<font color="#E5E5E5"> in a VM is not s are aware we</font>

1146
00:54:52,410 --> 00:54:56,930
have created a<font color="#E5E5E5"> function called proxy</font>

1147
00:54:54,209 --> 00:54:59,069
functions those proxy functions<font color="#E5E5E5"> will</font>

1148
00:54:56,930 --> 00:55:00,779
<font color="#E5E5E5">there can be multiple there can be an</font>

1149
00:54:59,069 --> 00:55:03,630
explicit proxy function or a dynamic

1150
00:55:00,779 --> 00:55:05,640
proxy function the dynamic proxy

1151
00:55:03,630 --> 00:55:07,440
function will cache the information once

1152
00:55:05,640 --> 00:55:10,140
the packet comes from<font color="#E5E5E5"> four to</font><font color="#CCCCCC"> five it</font>

1153
00:55:07,440 --> 00:55:12,479
caches<font color="#CCCCCC"> the SRH and the IP outer ipv6</font>

1154
00:55:10,140 --> 00:55:15,509
header<font color="#E5E5E5"> it strips that header saves it in</font>

1155
00:55:12,479 --> 00:55:17,848
a cache sends the<font color="#CCCCCC"> bare minimum packet to</font>

1156
00:55:15,509 --> 00:55:20,219
the app once the app does<font color="#CCCCCC"> is processing</font>

1157
00:55:17,849 --> 00:55:21,809
<font color="#E5E5E5">the packet comes back there is a policy</font>

1158
00:55:20,219 --> 00:55:24,479
which is applied on that that particular

1159
00:55:21,809 --> 00:55:25,920
<font color="#CCCCCC">interface and that will reincarnate the</font>

1160
00:55:24,479 --> 00:55:27,930
packet and send it forward<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are</font>

1161
00:55:25,920 --> 00:55:30,059
different flavors<font color="#E5E5E5"> of it we have we call</font>

1162
00:55:27,930 --> 00:55:31,919
it and<font color="#CCCCCC"> it's is listed</font><font color="#E5E5E5"> in one of our in</font>

1163
00:55:30,059 --> 00:55:35,069
the network programming graph but<font color="#CCCCCC"> its</font>

1164
00:55:31,920 --> 00:55:36,450
end<font color="#CCCCCC"> a.m. or end</font><font color="#E5E5E5"> s or and a ASM</font><font color="#CCCCCC"> there</font>

1165
00:55:35,069 --> 00:55:40,440
different flavors<font color="#CCCCCC"> of it which we have</font>

1166
00:55:36,450 --> 00:55:42,448
created<font color="#CCCCCC"> so it will work seamlessly but</font>

1167
00:55:40,440 --> 00:55:47,219
we are also building some apps which are

1168
00:55:42,449 --> 00:55:49,079
going<font color="#E5E5E5"> to be as having success we leave</font>

1169
00:55:47,219 --> 00:55:51,180
us with<font color="#E5E5E5"> United</font><font color="#CCCCCC"> Private Networks a couple</font>

1170
00:55:49,079 --> 00:55:52,769
of questions<font color="#CCCCCC"> actually so for a service</font>

1171
00:55:51,180 --> 00:55:55,319
provider what what why should<font color="#E5E5E5"> they</font>

1172
00:55:52,769 --> 00:55:57,419
<font color="#CCCCCC">choose</font><font color="#E5E5E5"> s or</font><font color="#CCCCCC"> v6 or SR MPLS what should be</font>

1173
00:55:55,319 --> 00:56:02,609
the<font color="#E5E5E5"> criteria from a from a core</font>

1174
00:55:57,420 --> 00:56:05,130
perspective you don't have to but it's

1175
00:56:02,609 --> 00:56:07,078
really<font color="#E5E5E5"> options no I mean no it's it's</font>

1176
00:56:05,130 --> 00:56:09,359
it's<font color="#E5E5E5"> really depends on if you if you're</font>

1177
00:56:07,079 --> 00:56:11,160
<font color="#CCCCCC">running out of the address space and if</font>

1178
00:56:09,359 --> 00:56:14,369
you are<font color="#CCCCCC"> moving towards an ipv6 Network</font>

1179
00:56:11,160 --> 00:56:16,890
how do you extract<font color="#E5E5E5"> more out</font><font color="#CCCCCC"> of it</font><font color="#E5E5E5"> how do</font>

1180
00:56:14,369 --> 00:56:18,930
you<font color="#E5E5E5"> extract more value</font><font color="#CCCCCC"> with all</font><font color="#E5E5E5"> these</font>

1181
00:56:16,890 --> 00:56:20,759
<font color="#E5E5E5">different use cases and be able to</font>

1182
00:56:18,930 --> 00:56:23,578
<font color="#E5E5E5">provide more services to your customers</font>

1183
00:56:20,759 --> 00:56:25,709
<font color="#E5E5E5">who are really in need for this for the</font>

1184
00:56:23,579 --> 00:56:27,719
for<font color="#E5E5E5"> the traffic engineering because we</font>

1185
00:56:25,709 --> 00:56:30,930
have heard<font color="#CCCCCC"> that the customers sitting on</font>

1186
00:56:27,719 --> 00:56:32,579
the edge<font color="#E5E5E5"> of it can also discover that</font>

1187
00:56:30,930 --> 00:56:34,319
<font color="#E5E5E5">there is something wrong</font><font color="#CCCCCC"> in the network</font>

1188
00:56:32,579 --> 00:56:36,180
but there<font color="#E5E5E5"> is no way for them</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go to</font>

1189
00:56:34,319 --> 00:56:38,489
the service<font color="#CCCCCC"> Rider</font><font color="#E5E5E5"> and say hey service</font>

1190
00:56:36,180 --> 00:56:40,348
provider will give you more money can

1191
00:56:38,489 --> 00:56:42,380
you<font color="#CCCCCC"> offer these</font><font color="#E5E5E5"> services</font><font color="#CCCCCC"> on top of it</font>

1192
00:56:40,349 --> 00:56:44,789
<font color="#CCCCCC">right so it does enable those</font>

1193
00:56:42,380 --> 00:56:45,090
applications<font color="#E5E5E5"> in the second one on one of</font>

1194
00:56:44,789 --> 00:56:47,040
these

1195
00:56:45,090 --> 00:56:49,200
<font color="#E5E5E5">you showed you have reserved a bandwidth</font>

1196
00:56:47,040 --> 00:56:55,580
<font color="#E5E5E5">of 10 Meg yeah what mechanism</font><font color="#CCCCCC"> did you</font>

1197
00:56:49,200 --> 00:57:00,689
used to<font color="#E5E5E5"> is a bandwidth it so so we have</font>

1198
00:56:55,580 --> 00:57:02,400
<font color="#E5E5E5">within the</font><font color="#CCCCCC"> SP core we have</font><font color="#E5E5E5"> we have a lot</font>

1199
00:57:00,690 --> 00:57:03,900
<font color="#CCCCCC">of computations which</font><font color="#E5E5E5"> is being done and</font>

1200
00:57:02,400 --> 00:57:05,940
signaled all that information to the

1201
00:57:03,900 --> 00:57:08,130
controller<font color="#CCCCCC"> so it's all</font><font color="#E5E5E5"> dynamic</font><font color="#CCCCCC"> so if the</font>

1202
00:57:05,940 --> 00:57:09,690
bandwidth actually changes then the

1203
00:57:08,130 --> 00:57:11,280
controller can recompute the<font color="#CCCCCC"> path to a</font>

1204
00:57:09,690 --> 00:57:14,700
different part<font color="#CCCCCC"> of the network right but</font>

1205
00:57:11,280 --> 00:57:17,100
<font color="#CCCCCC">actually reserved 10 Meg on there is no</font>

1206
00:57:14,700 --> 00:57:19,290
reservation<font color="#CCCCCC"> it's it's</font><font color="#E5E5E5"> basically based on</font>

1207
00:57:17,100 --> 00:57:21,029
how the traffic is flowing we<font color="#E5E5E5"> we</font>

1208
00:57:19,290 --> 00:57:22,470
couldn't get that yeah we get the

1209
00:57:21,030 --> 00:57:24,240
information<font color="#E5E5E5"> we send it to the controller</font>

1210
00:57:22,470 --> 00:57:27,180
<font color="#E5E5E5">again</font><font color="#CCCCCC"> we are</font><font color="#E5E5E5"> not maintaining any state</font>

1211
00:57:24,240 --> 00:57:28,669
in<font color="#CCCCCC"> the in the service</font><font color="#E5E5E5"> part at all thank</font>

1212
00:57:27,180 --> 00:57:31,770
you yeah

1213
00:57:28,670 --> 00:57:34,020
<font color="#CCCCCC">Stephen work two questions one how do</font>

1214
00:57:31,770 --> 00:57:36,660
you ensure<font color="#E5E5E5"> a truly loop free topology in</font>

1215
00:57:34,020 --> 00:57:39,810
<font color="#CCCCCC">CIL FA if not all nodes are capable</font><font color="#E5E5E5"> of</font>

1216
00:57:36,660 --> 00:57:41,430
processing the extension<font color="#E5E5E5"> headers the the</font>

1217
00:57:39,810 --> 00:57:43,380
<font color="#CCCCCC">Nords which are not capable</font>

1218
00:57:41,430 --> 00:57:47,370
<font color="#E5E5E5">again this is computed by the controller</font>

1219
00:57:43,380 --> 00:57:49,770
and all the IGP locally so we can if the

1220
00:57:47,370 --> 00:57:51,660
nodes are not as<font color="#E5E5E5"> well</font><font color="#CCCCCC"> v6 aware</font><font color="#E5E5E5"> it's just</font>

1221
00:57:49,770 --> 00:57:56,000
going<font color="#E5E5E5"> to forward it to that particular</font>

1222
00:57:51,660 --> 00:57:59,520
<font color="#CCCCCC">node just using ipv6 basic ipv6 routing</font>

1223
00:57:56,000 --> 00:58:02,430
<font color="#CCCCCC">and we have mechanisms</font><font color="#E5E5E5"> where if you're</font>

1224
00:57:59,520 --> 00:58:05,130
using the<font color="#E5E5E5"> SRH and we decrement the the</font>

1225
00:58:02,430 --> 00:58:08,580
segment routing segment left counter if

1226
00:58:05,130 --> 00:58:10,260
that changes to<font color="#E5E5E5"> zero then then and comes</font>

1227
00:58:08,580 --> 00:58:13,529
back then it's a loop<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> we detect</font>

1228
00:58:10,260 --> 00:58:16,020
<font color="#E5E5E5">that and the second question is how</font><font color="#CCCCCC"> is</font>

1229
00:58:13,530 --> 00:58:19,380
the spray use case different<font color="#E5E5E5"> from a</font><font color="#CCCCCC"> mt</font>

1230
00:58:16,020 --> 00:58:21,330
other than explicit path selection<font color="#E5E5E5"> I'm</font>

1231
00:58:19,380 --> 00:58:24,960
not so sure<font color="#CCCCCC"> about the MT so maybe we can</font>

1232
00:58:21,330 --> 00:58:27,299
talk<font color="#E5E5E5"> offline and discuss oh the ingress</font>

1233
00:58:24,960 --> 00:58:33,360
application<font color="#E5E5E5"> so in the in in the ingress</font>

1234
00:58:27,300 --> 00:58:41,190
replication on the in the core itself

1235
00:58:33,360 --> 00:58:42,360
you're not doing any kind<font color="#E5E5E5"> of we so so in</font>

1236
00:58:41,190 --> 00:58:44,250
the core<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are not doing any kind</font><font color="#E5E5E5"> of</font>

1237
00:58:42,360 --> 00:58:45,900
multicast<font color="#CCCCCC"> you're just</font><font color="#E5E5E5"> sending the packet</font>

1238
00:58:44,250 --> 00:58:47,700
over<font color="#E5E5E5"> to the edge which is doing their</font>

1239
00:58:45,900 --> 00:58:49,740
application<font color="#CCCCCC"> for you in the ingress on</font>

1240
00:58:47,700 --> 00:58:52,290
the ink on<font color="#E5E5E5"> the ingress itself you're</font>

1241
00:58:49,740 --> 00:58:54,859
<font color="#CCCCCC">going to just do that application and</font>

1242
00:58:52,290 --> 00:58:54,860
send it<font color="#E5E5E5"> forward</font>

1243
00:58:57,609 --> 00:59:11,660
any other questions<font color="#CCCCCC"> let me</font><font color="#E5E5E5"> go to that</font>

1244
00:59:03,439 --> 00:59:14,989
<font color="#E5E5E5">case go ahead just in benefit of</font>

1245
00:59:11,660 --> 00:59:17,149
<font color="#E5E5E5">everybody to hear me</font><font color="#CCCCCC"> the spray</font>

1246
00:59:14,989 --> 00:59:19,039
effectively do the ingress<font color="#E5E5E5"> replication</font>

1247
00:59:17,150 --> 00:59:21,519
on a small scale because it's

1248
00:59:19,039 --> 00:59:23,359
replicating the data carried over<font color="#E5E5E5"> the</font>

1249
00:59:21,519 --> 00:59:25,999
<font color="#CCCCCC">core</font><font color="#E5E5E5"> right</font>

1250
00:59:23,359 --> 00:59:27,979
it's a unicast replication<font color="#CCCCCC"> all the way</font>

1251
00:59:25,999 --> 00:59:31,788
to the CMT<font color="#E5E5E5"> is all the way to the</font><font color="#CCCCCC"> CMT a</font>

1252
00:59:27,979 --> 00:59:36,019
<font color="#CCCCCC">solid bond wave is consumed</font><font color="#E5E5E5"> and n times</font>

1253
00:59:31,789 --> 00:59:38,390
okay that's it could be good enough<font color="#CCCCCC"> just</font>

1254
00:59:36,019 --> 00:59:40,819
<font color="#E5E5E5">making the dead at that point</font><font color="#CCCCCC"> I have</font>

1255
00:59:38,390 --> 00:59:44,029
other<font color="#E5E5E5"> question to the</font><font color="#CCCCCC"> nav</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> proxy</font>

1256
00:59:40,819 --> 00:59:45,650
action just<font color="#E5E5E5"> to confirm</font><font color="#CCCCCC"> that the corner</font>

1257
00:59:44,029 --> 00:59:48,739
case is that we will<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> keep the</font>

1258
00:59:45,650 --> 00:59:50,839
<font color="#CCCCCC">per</font><font color="#E5E5E5"> flow</font><font color="#CCCCCC"> states in the in the proxy</font>

1259
00:59:48,739 --> 00:59:53,900
<font color="#E5E5E5">because the packet from the same</font>

1260
00:59:50,839 --> 00:59:57,019
destination to<font color="#CCCCCC"> the same from the same</font>

1261
00:59:53,900 --> 01:00:00,579
destination to<font color="#CCCCCC"> the same source</font><font color="#E5E5E5"> may</font>

1262
00:59:57,019 --> 01:00:04,399
requires different<font color="#CCCCCC"> pal service paths</font><font color="#E5E5E5"> so</font>

1263
01:00:00,579 --> 01:00:06,049
how what is<font color="#CCCCCC"> the worst is</font><font color="#E5E5E5"> granularity of</font>

1264
01:00:04,400 --> 01:00:08,420
<font color="#CCCCCC">dosing</font><font color="#E5E5E5"> let me come talk to you about</font>

1265
01:00:06,049 --> 01:00:11,029
<font color="#E5E5E5">that okay yeah I'll come right now I'm</font>

1266
01:00:08,420 --> 01:00:12,519
out<font color="#CCCCCC"> of time</font><font color="#E5E5E5"> but yeah there is a way we</font>

1267
01:00:11,029 --> 01:00:15,120
we<font color="#E5E5E5"> don't have to</font><font color="#CCCCCC"> maintain those</font><font color="#E5E5E5"> states</font>

1268
01:00:12,519 --> 01:00:20,919
all right thank you<font color="#E5E5E5"> everyone</font>

1269
01:00:15,120 --> 01:00:20,920
[Applause]

