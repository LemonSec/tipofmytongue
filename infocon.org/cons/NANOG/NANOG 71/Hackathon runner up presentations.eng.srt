1
00:00:09,760 --> 00:00:15,700
so shortly we're gonna have the board

2
00:00:11,920 --> 00:00:17,800
candidate panel come up here<font color="#CCCCCC"> but before</font>

3
00:00:15,700 --> 00:00:20,080
<font color="#E5E5E5">we do we're gonna let the runners-up of</font>

4
00:00:17,800 --> 00:00:22,660
the hackathon give you an overview of

5
00:00:20,080 --> 00:00:25,570
their<font color="#E5E5E5"> work and the first team that's</font>

6
00:00:22,660 --> 00:00:27,700
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> come up is the called</font><font color="#CCCCCC"> Fae</font><font color="#E5E5E5"> Kafka</font>

7
00:00:25,570 --> 00:00:37,360
<font color="#E5E5E5">I'm having to practice</font><font color="#CCCCCC"> that name so</font>

8
00:00:27,700 --> 00:00:41,739
thank you hello<font color="#CCCCCC"> I will not try to</font>

9
00:00:37,360 --> 00:00:46,080
pronounce our<font color="#E5E5E5"> name for</font><font color="#CCCCCC"> a team and let's</font>

10
00:00:41,740 --> 00:00:48,940
talk<font color="#CCCCCC"> about our solution so it's a</font>

11
00:00:46,080 --> 00:00:50,710
traffic<font color="#E5E5E5"> controller architecture we were</font>

12
00:00:48,940 --> 00:00:54,040
trying<font color="#E5E5E5"> to regress regular controller</font>

13
00:00:50,710 --> 00:00:57,970
<font color="#E5E5E5">we've</font><font color="#CCCCCC"> koepcke</font><font color="#E5E5E5"> messaging bus and we set</font>

14
00:00:54,040 --> 00:01:00,100
up<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> Google quote infrastructure our</font>

15
00:00:57,970 --> 00:01:04,089
environment<font color="#E5E5E5"> it was one I was sick sorry</font>

16
00:01:00,100 --> 00:01:06,850
router and few<font color="#E5E5E5"> Linux quagga instances</font>

17
00:01:04,089 --> 00:01:11,950
<font color="#CCCCCC">just to</font><font color="#E5E5E5"> reduce the memory footprint and</font>

18
00:01:06,850 --> 00:01:14,408
<font color="#CCCCCC">we start to echo</font><font color="#E5E5E5"> around so my colleague</font>

19
00:01:11,950 --> 00:01:17,619
Nick<font color="#CCCCCC"> will talk about it in</font><font color="#E5E5E5"> the moment</font>

20
00:01:14,409 --> 00:01:19,240
so how everyone so when we look at the

21
00:01:17,619 --> 00:01:21,490
kinetic goals for the hackathon

22
00:01:19,240 --> 00:01:24,039
basically was to collect<font color="#E5E5E5"> data from</font><font color="#CCCCCC"> the</font>

23
00:01:21,490 --> 00:01:26,798
network<font color="#CCCCCC"> so we had a</font><font color="#E5E5E5"> network running BGP</font>

24
00:01:24,039 --> 00:01:28,960
<font color="#E5E5E5">do something with the data apply some</font>

25
00:01:26,799 --> 00:01:31,630
business logic<font color="#CCCCCC"> and then inject some</font>

26
00:01:28,960 --> 00:01:33,548
changes into<font color="#E5E5E5"> the network so for that</font>

27
00:01:31,630 --> 00:01:37,600
purpose we<font color="#E5E5E5"> set up like</font><font color="#CCCCCC"> a micro services</font>

28
00:01:33,549 --> 00:01:41,049
architecture<font color="#E5E5E5"> so we try to kind of set</font>

29
00:01:37,600 --> 00:01:43,990
different micro<font color="#E5E5E5"> services so</font><font color="#CCCCCC"> each one of</font>

30
00:01:41,049 --> 00:01:46,179
<font color="#E5E5E5">the members of this team could</font><font color="#CCCCCC"> write on</font>

31
00:01:43,990 --> 00:01:48,999
their own programming language so the

32
00:01:46,179 --> 00:01:52,049
first step was to collect data<font color="#E5E5E5"> so what</font>

33
00:01:48,999 --> 00:01:56,020
we did was<font color="#E5E5E5"> basically to subscribe to a</font>

34
00:01:52,049 --> 00:01:57,990
telemetry<font color="#E5E5E5"> stream using open config so we</font>

35
00:01:56,020 --> 00:02:00,939
will get the data and<font color="#E5E5E5"> we will have a</font>

36
00:01:57,990 --> 00:02:03,458
processing engine that will<font color="#E5E5E5"> basically do</font>

37
00:02:00,939 --> 00:02:06,880
some parsing and then create a<font color="#E5E5E5"> new</font>

38
00:02:03,459 --> 00:02:09,340
<font color="#CCCCCC">message</font><font color="#E5E5E5"> with some counters that will be</font>

39
00:02:06,880 --> 00:02:11,950
interested for<font color="#E5E5E5"> someone else and in this</font>

40
00:02:09,340 --> 00:02:15,250
case we will<font color="#CCCCCC"> just publish back to a</font><font color="#E5E5E5"> cask</font>

41
00:02:11,950 --> 00:02:18,369
<font color="#CCCCCC">abbas let's say the day</font><font color="#E5E5E5"> rates and</font>

42
00:02:15,250 --> 00:02:21,400
interface counters<font color="#E5E5E5"> so we can agreed on</font>

43
00:02:18,370 --> 00:02:22,340
the<font color="#CCCCCC"> message it was just a</font><font color="#E5E5E5"> JSON file with</font>

44
00:02:21,400 --> 00:02:25,190
those counters so

45
00:02:22,340 --> 00:02:27,200
was a much simpler method and then we

46
00:02:25,190 --> 00:02:29,510
<font color="#CCCCCC">will have</font><font color="#E5E5E5"> someone another</font><font color="#CCCCCC"> micro-service</font>

47
00:02:27,200 --> 00:02:33,440
<font color="#CCCCCC">applying the business rules</font><font color="#E5E5E5"> basically</font>

48
00:02:29,510 --> 00:02:36,170
looking for<font color="#E5E5E5"> like I give a</font><font color="#CCCCCC"> number of</font>

49
00:02:33,440 --> 00:02:38,269
<font color="#CCCCCC">thread holes that was crossed so he can</font>

50
00:02:36,170 --> 00:02:41,780
then<font color="#CCCCCC"> create an alarm</font>

51
00:02:38,269 --> 00:02:44,330
which was another method pushed back to

52
00:02:41,780 --> 00:02:46,790
the<font color="#CCCCCC"> caster</font><font color="#E5E5E5"> bus and then we will then</font>

53
00:02:44,330 --> 00:02:49,970
have another<font color="#CCCCCC"> microservice that was</font>

54
00:02:46,790 --> 00:02:52,190
listening<font color="#CCCCCC"> to this specific topic</font><font color="#E5E5E5"> then</font>

55
00:02:49,970 --> 00:02:55,190
then<font color="#E5E5E5"> will trigger changes based on the</font>

56
00:02:52,190 --> 00:02:58,010
nature<font color="#E5E5E5"> of this event in this</font><font color="#CCCCCC"> case we</font>

57
00:02:55,190 --> 00:03:01,340
wanted to not only<font color="#E5E5E5"> use the Cisco surface</font>

58
00:02:58,010 --> 00:03:04,489
layer API<font color="#E5E5E5"> to</font><font color="#CCCCCC"> index or program</font><font color="#E5E5E5"> v on the</font>

59
00:03:01,340 --> 00:03:07,190
router<font color="#E5E5E5"> but also do</font><font color="#CCCCCC"> it through</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> BEP so</font>

60
00:03:04,489 --> 00:03:10,400
you can either<font color="#E5E5E5"> use either one of those</font>

61
00:03:07,190 --> 00:03:16,129
<font color="#CCCCCC">our</font><font color="#E5E5E5"> method to program the routing table</font>

62
00:03:10,400 --> 00:03:19,040
so yep<font color="#E5E5E5"> so our structure was quite quite</font>

63
00:03:16,129 --> 00:03:22,129
weird<font color="#E5E5E5"> and at the bottom where we</font><font color="#CCCCCC"> have</font>

64
00:03:19,040 --> 00:03:25,970
our services and<font color="#E5E5E5"> our service is</font>

65
00:03:22,129 --> 00:03:28,638
communicating to<font color="#E5E5E5"> capcom the beauty of</font>

66
00:03:25,970 --> 00:03:31,010
<font color="#E5E5E5">this</font><font color="#CCCCCC"> approach but any type of data can</font>

67
00:03:28,639 --> 00:03:35,959
<font color="#E5E5E5">be published and you just use telemetry</font>

68
00:03:31,010 --> 00:03:38,540
<font color="#E5E5E5">one to trigger all</font><font color="#CCCCCC"> the actions we are we</font>

69
00:03:35,959 --> 00:03:42,680
separate and abstract<font color="#CCCCCC"> our business logic</font>

70
00:03:38,540 --> 00:03:45,620
it was<font color="#CCCCCC"> llamó based files kind we can</font>

71
00:03:42,680 --> 00:03:49,340
call them rules<font color="#CCCCCC"> and based on the current</font>

72
00:03:45,620 --> 00:03:52,370
<font color="#E5E5E5">rules we can try a try some actions and</font>

73
00:03:49,340 --> 00:03:55,819
for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> if we jitter thresholds some</font>

74
00:03:52,370 --> 00:03:57,769
value<font color="#E5E5E5"> we just</font><font color="#CCCCCC"> reprogram</font><font color="#E5E5E5"> we're out to</font>

75
00:03:55,819 --> 00:04:04,578
reprogram<font color="#E5E5E5"> the route or to update it we</font>

76
00:03:57,769 --> 00:04:07,549
use<font color="#E5E5E5"> service</font><font color="#CCCCCC"> where API it's iOS 6</font><font color="#E5E5E5"> our API</font>

77
00:04:04,579 --> 00:04:10,669
to program your reap and not not only

78
00:04:07,549 --> 00:04:13,639
<font color="#CCCCCC">rib and my colleague</font><font color="#E5E5E5"> oxide Sharma will</font>

79
00:04:10,669 --> 00:04:17,389
be covering<font color="#CCCCCC"> a full session on Wednesday</font>

80
00:04:13,639 --> 00:04:20,620
<font color="#CCCCCC">so you can check</font><font color="#E5E5E5"> it in details later</font>

81
00:04:17,389 --> 00:04:25,310
<font color="#E5E5E5">this week and let's talk more</font><font color="#CCCCCC"> about</font>

82
00:04:20,620 --> 00:04:27,830
benefits for this solution<font color="#CCCCCC"> as I said</font>

83
00:04:25,310 --> 00:04:30,320
<font color="#CCCCCC">préval step</font><font color="#E5E5E5"> any type of data could</font><font color="#CCCCCC"> be</font>

84
00:04:27,830 --> 00:04:33,140
published to a message bus<font color="#CCCCCC"> so we don't</font>

85
00:04:30,320 --> 00:04:35,400
<font color="#E5E5E5">care if</font><font color="#CCCCCC"> it's telemetry SNP or just</font>

86
00:04:33,140 --> 00:04:39,400
syslog messages we we can

87
00:04:35,400 --> 00:04:42,609
<font color="#E5E5E5">whatever they want to talk</font><font color="#CCCCCC"> up covers our</font>

88
00:04:39,400 --> 00:04:45,489
logic<font color="#E5E5E5"> doesn't depend on</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> our layers</font>

89
00:04:42,610 --> 00:04:48,999
<font color="#E5E5E5">and we use performance which we</font><font color="#CCCCCC"> have</font>

90
00:04:45,490 --> 00:04:51,520
<font color="#E5E5E5">wanted in our case it was</font><font color="#CCCCCC"> CMO we can</font>

91
00:04:48,999 --> 00:04:55,180
<font color="#CCCCCC">easily replace</font><font color="#E5E5E5"> you to JSON format we</font><font color="#CCCCCC"> can</font>

92
00:04:51,520 --> 00:04:57,938
do some API<font color="#E5E5E5"> for</font><font color="#CCCCCC"> weight</font><font color="#E5E5E5"> and we are not</font>

93
00:04:55,180 --> 00:05:01,150
limited to<font color="#E5E5E5"> any solution so we can</font><font color="#CCCCCC"> easily</font>

94
00:04:57,939 --> 00:05:05,289
replace<font color="#E5E5E5"> it and publishing subscribe</font>

95
00:05:01,150 --> 00:05:08,830
mechanism it's one of the typical<font color="#E5E5E5"> one we</font>

96
00:05:05,289 --> 00:05:13,029
which<font color="#CCCCCC"> is language agnostic so some of</font>

97
00:05:08,830 --> 00:05:17,710
some<font color="#E5E5E5"> of the Hawks which we did was in in</font>

98
00:05:13,029 --> 00:05:21,900
<font color="#CCCCCC">Golan some pieces are in Python and we</font>

99
00:05:17,710 --> 00:05:21,900
are<font color="#E5E5E5"> later language</font><font color="#CCCCCC"> agnostic</font><font color="#E5E5E5"> in this case</font>

100
00:05:22,020 --> 00:05:27,068
yep

101
00:05:23,229 --> 00:05:30,068
so thanks<font color="#E5E5E5"> for attention if you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> any</font>

102
00:05:27,069 --> 00:05:31,979
question for<font color="#CCCCCC"> us you can</font><font color="#E5E5E5"> find us</font><font color="#CCCCCC"> in the</font>

103
00:05:30,069 --> 00:05:35,169
<font color="#E5E5E5">lobby at any time</font>

104
00:05:31,979 --> 00:05:37,270
that's fine basically the code<font color="#E5E5E5"> is</font>

105
00:05:35,169 --> 00:05:39,789
available<font color="#E5E5E5"> and that github repo the</font>

106
00:05:37,270 --> 00:05:40,299
technologies we use<font color="#E5E5E5"> he said basically</font>

107
00:05:39,789 --> 00:05:43,839
<font color="#CCCCCC">it's</font>

108
00:05:40,300 --> 00:05:44,770
<font color="#CCCCCC">golang</font><font color="#E5E5E5"> Python gr PC open config and the</font>

109
00:05:43,839 --> 00:05:47,139
service<font color="#E5E5E5"> layer API</font>

110
00:05:44,770 --> 00:05:49,589
aside from go<font color="#E5E5E5"> BTB so if anyone is</font>

111
00:05:47,139 --> 00:05:55,659
interested<font color="#CCCCCC"> just</font><font color="#E5E5E5"> take a look at the gift</font>

112
00:05:49,589 --> 00:06:04,659
<font color="#E5E5E5">repo oh just come and talk to us thank</font>

113
00:05:55,659 --> 00:06:06,310
you thank you<font color="#CCCCCC"> coughs FA Kafka and I'm</font>

114
00:06:04,659 --> 00:06:08,879
gonna<font color="#E5E5E5"> invite the other team hack</font>

115
00:06:06,310 --> 00:06:08,879
overflow

116
00:06:18,780 --> 00:06:22,989
good afternoon everyone<font color="#E5E5E5"> we are graduate</font>

117
00:06:21,700 --> 00:06:23,770
students from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> University of Colorado</font>

118
00:06:22,990 --> 00:06:28,150
<font color="#CCCCCC">Boulder</font>

119
00:06:23,770 --> 00:06:30,760
my name is<font color="#CCCCCC"> Rishikesh his pratik</font><font color="#E5E5E5"> Ashutosh</font>

120
00:06:28,150 --> 00:06:33,310
<font color="#CCCCCC">anton we we are a mixture of network</font>

121
00:06:30,760 --> 00:06:35,980
security<font color="#CCCCCC"> and</font><font color="#E5E5E5"> network engineering so</font>

122
00:06:33,310 --> 00:06:38,770
<font color="#E5E5E5">yesterday during</font><font color="#CCCCCC"> the hackathon</font><font color="#E5E5E5"> what we</font>

123
00:06:35,980 --> 00:06:41,460
did was a trial version<font color="#E5E5E5"> of self-healing</font>

124
00:06:38,770 --> 00:06:44,320
<font color="#E5E5E5">networks so what basically we did was in</font>

125
00:06:41,460 --> 00:06:47,530
<font color="#CCCCCC">a scenario where you have multiple ISPs</font>

126
00:06:44,320 --> 00:06:50,890
you would have you<font color="#E5E5E5"> would want to achieve</font>

127
00:06:47,530 --> 00:06:51,909
redundancy<font color="#E5E5E5"> for example if you could see</font>

128
00:06:50,890 --> 00:06:53,979
the diagram over there

129
00:06:51,910 --> 00:06:56,560
that's a draft<font color="#E5E5E5"> model we made</font><font color="#CCCCCC"> before</font>

130
00:06:53,980 --> 00:06:57,820
starting the hackathon<font color="#E5E5E5"> you could see 3</font>

131
00:06:56,560 --> 00:07:00,610
ISPs over there

132
00:06:57,820 --> 00:07:03,880
where is p1 is a main SP and then you

133
00:07:00,610 --> 00:07:05,470
have is p2 and is p3<font color="#E5E5E5"> but there is just a</font>

134
00:07:03,880 --> 00:07:08,800
single<font color="#E5E5E5"> path which</font><font color="#CCCCCC"> is talking</font><font color="#E5E5E5"> between the</font>

135
00:07:05,470 --> 00:07:11,770
ISPs and you have a redundancy<font color="#E5E5E5"> path like</font>

136
00:07:08,800 --> 00:07:13,720
at a single<font color="#CCCCCC"> point of time either</font><font color="#E5E5E5"> is p1</font>

137
00:07:11,770 --> 00:07:16,210
is connected to is<font color="#E5E5E5"> p2 or is p1 is</font>

138
00:07:13,720 --> 00:07:18,940
connected to ice p3 you know I do

139
00:07:16,210 --> 00:07:21,130
<font color="#CCCCCC">achieve this we have select or we've</font>

140
00:07:18,940 --> 00:07:24,969
selected an open approach where we used

141
00:07:21,130 --> 00:07:27,520
controllers and we've also<font color="#E5E5E5"> used model of</font>

142
00:07:24,970 --> 00:07:29,560
router which<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> quarter or previous</font>

143
00:07:27,520 --> 00:07:31,450
quagga you know<font color="#CCCCCC"> because it is easy</font><font color="#E5E5E5"> to</font>

144
00:07:29,560 --> 00:07:35,440
configure<font color="#E5E5E5"> and at the same time it's easy</font>

145
00:07:31,450 --> 00:07:38,050
to automate so in in a single<font color="#CCCCCC"> isp the</font>

146
00:07:35,440 --> 00:07:40,330
model we used was the isp would have a

147
00:07:38,050 --> 00:07:43,180
<font color="#CCCCCC">rio controller and then</font><font color="#E5E5E5"> it would have a</font>

148
00:07:40,330 --> 00:07:45,219
<font color="#CCCCCC">mininet topology</font><font color="#E5E5E5"> instead of using a life</font>

149
00:07:43,180 --> 00:07:47,470
topology model we've used<font color="#CCCCCC"> mini net</font><font color="#E5E5E5"> in</font>

150
00:07:45,220 --> 00:07:51,240
order to simulate a topology which would

151
00:07:47,470 --> 00:07:53,920
be an open<font color="#CCCCCC"> virtual switch and then host</font>

152
00:07:51,240 --> 00:07:55,930
you can<font color="#CCCCCC"> see that the Riu</font><font color="#E5E5E5"> is connected to</font>

153
00:07:53,920 --> 00:07:57,820
the kaga quagga routers and<font color="#E5E5E5"> the quagga</font>

154
00:07:55,930 --> 00:08:00,010
is connected to<font color="#E5E5E5"> the other</font><font color="#CCCCCC"> kaga in the</font><font color="#E5E5E5"> in</font>

155
00:07:57,820 --> 00:08:02,830
<font color="#E5E5E5">the next</font><font color="#CCCCCC"> Internet service provider</font><font color="#E5E5E5"> so</font>

156
00:08:00,010 --> 00:08:05,200
what we did<font color="#E5E5E5"> was</font><font color="#CCCCCC"> we ran ibgp within the</font>

157
00:08:02,830 --> 00:08:07,330
quagga and the controller and then we've

158
00:08:05,200 --> 00:08:12,670
run external<font color="#CCCCCC"> bgp between the different</font>

159
00:08:07,330 --> 00:08:13,780
cause of the different ISPs so what you

160
00:08:12,670 --> 00:08:15,370
might wonder what's different between

161
00:08:13,780 --> 00:08:17,349
this and<font color="#CCCCCC"> what is happening in the real</font>

162
00:08:15,370 --> 00:08:19,510
world<font color="#E5E5E5"> the major thing we try</font><font color="#CCCCCC"> to achieve</font>

163
00:08:17,350 --> 00:08:22,360
in the<font color="#CCCCCC"> 6 hours</font><font color="#E5E5E5"> of duration during</font><font color="#CCCCCC"> the</font>

164
00:08:19,510 --> 00:08:24,430
hackathon was<font color="#E5E5E5"> we try to automate</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> renin</font>

165
00:08:22,360 --> 00:08:28,720
and scenario and how would<font color="#E5E5E5"> it be</font>

166
00:08:24,430 --> 00:08:29,919
self-healing<font color="#E5E5E5"> we have a Python</font><font color="#CCCCCC"> script we</font>

167
00:08:28,720 --> 00:08:31,990
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> Python script which would</font>

168
00:08:29,919 --> 00:08:34,689
<font color="#CCCCCC">actually pull the different</font>

169
00:08:31,990 --> 00:08:36,729
<font color="#CCCCCC">Kroger routers to Stacy the packet loss</font>

170
00:08:34,690 --> 00:08:39,370
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> RTT and</font><font color="#E5E5E5"> depending upon the</font>

171
00:08:36,729 --> 00:08:42,760
values depending upon<font color="#CCCCCC"> the values it will</font>

172
00:08:39,370 --> 00:08:43,839
select<font color="#E5E5E5"> the best path so my team member</font>

173
00:08:42,760 --> 00:08:48,130
would go with the rest of<font color="#E5E5E5"> the</font>

174
00:08:43,839 --> 00:08:50,290
<font color="#E5E5E5">presentation so the intention was not to</font>

175
00:08:48,130 --> 00:08:52,149
<font color="#E5E5E5">reinvent the wheel</font><font color="#CCCCCC"> so something like</font>

176
00:08:50,290 --> 00:08:54,699
<font color="#E5E5E5">this you might</font><font color="#CCCCCC"> have seen where now you</font>

177
00:08:52,149 --> 00:08:56,380
do a polling of the pre particular

178
00:08:54,700 --> 00:08:59,320
prefix and<font color="#E5E5E5"> then you might change the</font>

179
00:08:56,380 --> 00:09:01,899
local preference for the BGP route<font color="#E5E5E5"> but</font>

180
00:08:59,320 --> 00:09:07,209
what we tried to<font color="#CCCCCC"> achieve was that what</font>

181
00:09:01,899 --> 00:09:09,160
we wanted<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> have a like had a Ryu</font>

182
00:09:07,209 --> 00:09:11,619
topology which is like an actual Sdn

183
00:09:09,160 --> 00:09:14,709
topology using<font color="#E5E5E5"> OpenFlow protocol and</font>

184
00:09:11,620 --> 00:09:18,040
that's<font color="#E5E5E5"> what what we were trying</font><font color="#CCCCCC"> to</font>

185
00:09:14,709 --> 00:09:20,380
configure so what the script does is it

186
00:09:18,040 --> 00:09:22,480
<font color="#E5E5E5">will</font><font color="#CCCCCC"> continue sleep all</font><font color="#E5E5E5"> the prefixes get</font>

187
00:09:20,380 --> 00:09:24,850
<font color="#CCCCCC">a round-trip time or some sort of</font>

188
00:09:22,480 --> 00:09:27,040
<font color="#E5E5E5">latency so it will have a particular</font>

189
00:09:24,850 --> 00:09:30,279
threshold value so if the threshold

190
00:09:27,040 --> 00:09:32,920
<font color="#CCCCCC">exceeds it exceeds a particular</font><font color="#E5E5E5"> value</font>

191
00:09:30,279 --> 00:09:35,290
then<font color="#E5E5E5"> the route is directly change which</font>

192
00:09:32,920 --> 00:09:37,360
we are using the Python script<font color="#CCCCCC"> but the</font>

193
00:09:35,290 --> 00:09:41,140
local preference is directly changed so

194
00:09:37,360 --> 00:09:43,270
as<font color="#CCCCCC"> you can see</font><font color="#E5E5E5"> in the last diagram there</font>

195
00:09:41,140 --> 00:09:45,880
<font color="#CCCCCC">are like two parts for</font><font color="#E5E5E5"> the same prefix</font>

196
00:09:43,270 --> 00:09:51,880
<font color="#E5E5E5">but one path is chosen</font><font color="#CCCCCC"> over the other</font>

197
00:09:45,880 --> 00:09:54,580
<font color="#E5E5E5">because it</font><font color="#CCCCCC"> has a lower latency so this</font>

198
00:09:51,880 --> 00:09:57,370
is the quagga of the<font color="#CCCCCC"> isp - and quagga of</font>

199
00:09:54,580 --> 00:10:01,120
the<font color="#E5E5E5"> isp 3 so there also we</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> that</font>

200
00:09:57,370 --> 00:10:03,430
for a particular prefix<font color="#E5E5E5"> due to the late</font>

201
00:10:01,120 --> 00:10:06,790
change in latency we are changing the

202
00:10:03,430 --> 00:10:11,170
<font color="#E5E5E5">route also</font><font color="#CCCCCC"> we didn't want</font><font color="#E5E5E5"> to ignore</font>

203
00:10:06,790 --> 00:10:14,469
security so<font color="#E5E5E5"> we had a prototype of it's</font>

204
00:10:11,170 --> 00:10:15,969
not<font color="#E5E5E5"> IDs so</font><font color="#CCCCCC"> what it</font><font color="#E5E5E5"> does is basically we</font>

205
00:10:14,470 --> 00:10:19,120
have the edge router<font color="#E5E5E5"> or quagga router</font>

206
00:10:15,970 --> 00:10:22,120
<font color="#E5E5E5">and if an unrecognized pure is trying to</font>

207
00:10:19,120 --> 00:10:24,970
establish neighbor ship<font color="#E5E5E5"> on port 179 or</font>

208
00:10:22,120 --> 00:10:27,040
any type of malicious traffic is trying

209
00:10:24,970 --> 00:10:29,140
to reach on the edge router<font color="#E5E5E5"> that can be</font>

210
00:10:27,040 --> 00:10:32,319
like directly<font color="#E5E5E5"> mapped and tracked by the</font>

211
00:10:29,140 --> 00:10:34,930
<font color="#E5E5E5">snot IDs and thus not talks by a rest</font>

212
00:10:32,320 --> 00:10:37,660
<font color="#E5E5E5">api to the</font><font color="#CCCCCC"> Rieu controller so</font><font color="#E5E5E5"> that will</font>

213
00:10:34,930 --> 00:10:40,060
automatically<font color="#E5E5E5"> dynamically apply ACL</font>

214
00:10:37,660 --> 00:10:42,579
rules<font color="#E5E5E5"> to the edge router directly block</font>

215
00:10:40,060 --> 00:10:44,770
them<font color="#E5E5E5"> and we will also have</font><font color="#CCCCCC"> a levee we</font>

216
00:10:42,579 --> 00:10:45,649
also had an email<font color="#E5E5E5"> notification system so</font>

217
00:10:44,770 --> 00:10:47,389
any change in the

218
00:10:45,649 --> 00:10:50,470
local preference for<font color="#CCCCCC"> any type of</font>

219
00:10:47,389 --> 00:10:53,449
malicious activity we did directly get a

220
00:10:50,470 --> 00:10:56,420
email<font color="#E5E5E5"> notification to</font><font color="#CCCCCC"> the operator</font><font color="#E5E5E5"> so</font>

221
00:10:53,449 --> 00:11:01,099
what the intention<font color="#E5E5E5"> was that we can have</font>

222
00:10:56,420 --> 00:11:04,699
a prototype<font color="#E5E5E5"> of snort changing the</font>

223
00:11:01,100 --> 00:11:07,100
preference for<font color="#E5E5E5"> routing where the Sdn</font>

224
00:11:04,699 --> 00:11:09,160
<font color="#E5E5E5">topology exists so the migration from a</font>

225
00:11:07,100 --> 00:11:11,629
traditional<font color="#E5E5E5"> to a hybrid</font><font color="#CCCCCC"> network is</font>

226
00:11:09,160 --> 00:11:14,929
possible and<font color="#E5E5E5"> that's what we wanted to</font>

227
00:11:11,629 --> 00:11:17,540
<font color="#E5E5E5">demonstrate and along</font><font color="#CCCCCC"> with it we were we</font>

228
00:11:14,929 --> 00:11:19,339
also had the plan of<font color="#E5E5E5"> having a GUI</font><font color="#CCCCCC"> where</font>

229
00:11:17,540 --> 00:11:21,769
the operations team can continue

230
00:11:19,339 --> 00:11:23,720
<font color="#E5E5E5">continuously see how is the congestion</font>

231
00:11:21,769 --> 00:11:26,029
<font color="#E5E5E5">and a particular network generate</font>

232
00:11:23,720 --> 00:11:27,920
<font color="#E5E5E5">database reports so basically having</font><font color="#CCCCCC"> an</font>

233
00:11:26,029 --> 00:11:31,699
audit trail<font color="#CCCCCC"> but that's what we tried to</font>

234
00:11:27,920 --> 00:11:33,290
<font color="#E5E5E5">do I'll hand</font><font color="#CCCCCC"> over the mic to</font><font color="#E5E5E5"> Russia so</font>

235
00:11:31,699 --> 00:11:34,910
this is the current<font color="#E5E5E5"> perspective</font><font color="#CCCCCC"> of our</font>

236
00:11:33,290 --> 00:11:36,829
prototype in the future what we're

237
00:11:34,910 --> 00:11:39,019
planning was we would have a load load

238
00:11:36,829 --> 00:11:40,429
balancing scenario where instead<font color="#CCCCCC"> of</font>

239
00:11:39,019 --> 00:11:42,350
<font color="#CCCCCC">using just</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> single link in order</font><font color="#E5E5E5"> to</font>

240
00:11:40,429 --> 00:11:44,720
connect to an<font color="#CCCCCC"> isp</font><font color="#E5E5E5"> we would have multiple</font>

241
00:11:42,350 --> 00:11:46,850
<font color="#CCCCCC">links connecting the espys so one would</font>

242
00:11:44,720 --> 00:11:48,350
one<font color="#E5E5E5"> route would</font><font color="#CCCCCC"> be a primary door for</font>

243
00:11:46,850 --> 00:11:50,029
this particular<font color="#E5E5E5"> isp let's say</font><font color="#CCCCCC"> we're</font>

244
00:11:48,350 --> 00:11:51,230
connecting India and Germany<font color="#CCCCCC"> one Road</font>

245
00:11:50,029 --> 00:11:53,360
<font color="#E5E5E5">would just go for India and the other</font>

246
00:11:51,230 --> 00:11:55,970
<font color="#CCCCCC">road would just go for Germany</font><font color="#E5E5E5"> at the</font>

247
00:11:53,360 --> 00:11:58,730
<font color="#E5E5E5">same time the other Road would be the</font>

248
00:11:55,970 --> 00:12:00,740
back of the primary route<font color="#E5E5E5"> so instead of</font>

249
00:11:58,730 --> 00:12:02,029
using just<font color="#E5E5E5"> one</font><font color="#CCCCCC"> route and just</font><font color="#E5E5E5"> disabling</font>

250
00:12:00,740 --> 00:12:03,529
the other<font color="#CCCCCC"> Road</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a future scenario</font>

251
00:12:02,029 --> 00:12:05,660
<font color="#CCCCCC">where</font><font color="#E5E5E5"> here we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> thinking of</font>

252
00:12:03,529 --> 00:12:07,699
<font color="#E5E5E5">implementing a load balancing effort and</font>

253
00:12:05,660 --> 00:12:10,009
right now due to<font color="#E5E5E5"> constant time</font>

254
00:12:07,699 --> 00:12:11,839
constraint we have not automated<font color="#E5E5E5"> the</font>

255
00:12:10,009 --> 00:12:14,029
configuration generation so<font color="#E5E5E5"> we just</font>

256
00:12:11,839 --> 00:12:15,920
<font color="#E5E5E5">manually entered the we just manually</font>

257
00:12:14,029 --> 00:12:17,420
<font color="#E5E5E5">created two different</font><font color="#CCCCCC"> bgp configurations</font>

258
00:12:15,920 --> 00:12:18,529
and use them but<font color="#E5E5E5"> in the future we are</font>

259
00:12:17,420 --> 00:12:20,599
<font color="#CCCCCC">planning to do the automation</font>

260
00:12:18,529 --> 00:12:24,050
configuration using ginger<font color="#CCCCCC"> two templates</font>

261
00:12:20,600 --> 00:12:27,740
<font color="#E5E5E5">and ansible</font><font color="#CCCCCC"> and we will be doing it</font><font color="#E5E5E5"> in</font>

262
00:12:24,050 --> 00:12:29,839
<font color="#E5E5E5">the next coming coming months</font><font color="#CCCCCC"> so thank</font>

263
00:12:27,740 --> 00:12:31,040
you<font color="#E5E5E5"> so much for the opportunity</font><font color="#CCCCCC"> we got a</font>

264
00:12:29,839 --> 00:12:31,579
great<font color="#CCCCCC"> opportunity</font><font color="#E5E5E5"> to learn during this</font>

265
00:12:31,040 --> 00:12:34,480
hackathon

266
00:12:31,579 --> 00:12:34,479
thank you so much

267
00:12:35,840 --> 00:12:40,980
<font color="#E5E5E5">you</font>

268
00:12:36,880 --> 00:12:40,980
[Applause]

