1
00:00:00,469 --> 00:00:06,270
<font color="#E5E5E5">okay good morning my name is Thomas fees</font>

2
00:00:04,230 --> 00:00:09,269
fees i'm going to give you an<font color="#E5E5E5"> update on</font>

3
00:00:06,270 --> 00:00:11,460
fast<font color="#CCCCCC"> IGP conversions so let's first</font>

4
00:00:09,269 --> 00:00:13,610
define conversions we have a traffic

5
00:00:11,460 --> 00:00:17,490
stream<font color="#E5E5E5"> going from source to destination</font>

6
00:00:13,610 --> 00:00:20,250
via the green path so there at a certain

7
00:00:17,490 --> 00:00:23,549
time t1<font color="#CCCCCC"> there going to be a link failure</font>

8
00:00:20,250 --> 00:00:26,400
along the green path so at time t1 the

9
00:00:23,550 --> 00:00:29,820
loss of connectivity starts at time t2

10
00:00:26,400 --> 00:00:32,759
an alternate<font color="#E5E5E5"> end-to-end path exists from</font>

11
00:00:29,820 --> 00:00:36,059
source to destination at time T to the

12
00:00:32,759 --> 00:00:40,800
<font color="#E5E5E5">loss of connectivity stops we define</font>

13
00:00:36,059 --> 00:00:43,320
<font color="#CCCCCC">convergence as t2 minus t1 this as the</font>

14
00:00:40,800 --> 00:00:46,589
loss of connectivity duration we're

15
00:00:43,320 --> 00:00:48,930
<font color="#E5E5E5">going to analyze convergence for</font><font color="#CCCCCC"> IGP</font>

16
00:00:46,590 --> 00:00:51,840
learn it prefixes and we are going also

17
00:00:48,930 --> 00:00:56,789
to analyze the impact of igp convergence

18
00:00:51,840 --> 00:00:59,160
on bgp learn it prefixes common sense

19
00:00:56,789 --> 00:01:02,430
typically says that I GP conversions

20
00:00:59,160 --> 00:01:04,738
takes from 10 to 30 seconds the

21
00:01:02,430 --> 00:01:06,689
objective we set for ourselves with this

22
00:01:04,739 --> 00:01:09,659
project<font color="#CCCCCC"> was to achieve sub-second</font>

23
00:01:06,689 --> 00:01:12,298
convergence for the first 500<font color="#CCCCCC"> IGP</font>

24
00:01:09,659 --> 00:01:15,119
prefixes and for the<font color="#CCCCCC"> BGP prefixes that</font>

25
00:01:12,299 --> 00:01:18,869
recurs on them assuming obviously no bgp

26
00:01:15,119 --> 00:01:22,110
flaps this presentation is given with is

27
00:01:18,869 --> 00:01:26,729
is we have work on<font color="#CCCCCC"> Isis and ospf and the</font>

28
00:01:22,110 --> 00:01:30,600
principle applies for both<font color="#E5E5E5"> I GPS here is</font>

29
00:01:26,729 --> 00:01:33,030
our black box lab set up the unit on the

30
00:01:30,600 --> 00:01:36,509
test is the Dorado with the yellow dots

31
00:01:33,030 --> 00:01:38,369
it's a<font color="#E5E5E5"> 12,400 router which will be</font>

32
00:01:36,509 --> 00:01:41,939
equipped with two types of processors

33
00:01:38,369 --> 00:01:44,729
either<font color="#E5E5E5"> a grp or PRP one and the line</font>

34
00:01:41,939 --> 00:01:47,460
cards I<font color="#CCCCCC"> Engine 2 engine 3 or engine folk</font>

35
00:01:44,729 --> 00:01:50,399
blues the router is running running a

36
00:01:47,460 --> 00:01:53,548
pre-release version of 12 dot or 27 s

37
00:01:50,399 --> 00:01:56,969
we're going<font color="#CCCCCC"> to test convergence in the</font>

38
00:01:53,549 --> 00:01:59,009
bottom in in the top to bottom direction

39
00:01:56,969 --> 00:02:03,210
it mean so what<font color="#E5E5E5"> I'm going to do is to</font>

40
00:01:59,009 --> 00:02:05,759
send traffic from A to B and I'm going

41
00:02:03,210 --> 00:02:10,228
to<font color="#E5E5E5"> cause a link failure so triggering</font>

42
00:02:05,759 --> 00:02:12,870
convergence I send 10,000 packets per

43
00:02:10,229 --> 00:02:13,230
second on each stream so if i count a

44
00:02:12,870 --> 00:02:15,450
number

45
00:02:13,230 --> 00:02:17,609
bucket drops I can derive the loss of

46
00:02:15,450 --> 00:02:19,230
connectivity duration / stream the

47
00:02:17,610 --> 00:02:21,780
granularity is<font color="#E5E5E5"> zero that one</font>

48
00:02:19,230 --> 00:02:25,518
milliseconds<font color="#E5E5E5"> so I'm sending</font><font color="#CCCCCC"> my traffic</font>

49
00:02:21,780 --> 00:02:29,760
from A to B the cloud that is faking a

50
00:02:25,519 --> 00:02:32,160
realistic<font color="#E5E5E5"> ASA's topology is situated at</font>

51
00:02:29,760 --> 00:02:36,540
the bottom<font color="#E5E5E5"> of the picture it's a cloud</font>

52
00:02:32,160 --> 00:02:38,609
worth<font color="#CCCCCC"> 1000 is is node and 2500 is is</font>

53
00:02:36,540 --> 00:02:41,609
prefixes as you can see it's a

54
00:02:38,610 --> 00:02:44,519
worst-case scenario because when<font color="#CCCCCC"> I'm</font>

55
00:02:41,610 --> 00:02:47,640
<font color="#E5E5E5">going to fail the link from the unit</font>

56
00:02:44,519 --> 00:02:50,579
under test a few points all the cloud is

57
00:02:47,640 --> 00:02:55,379
impacted so it means a full<font color="#E5E5E5"> SPT will be</font>

58
00:02:50,579 --> 00:03:01,049
required also I inject 160,000 bgp

59
00:02:55,379 --> 00:03:04,429
prefixes in the in the lab<font color="#CCCCCC"> setup</font><font color="#E5E5E5"> i'm</font>

60
00:03:01,049 --> 00:03:07,799
actually sending 15 streams from<font color="#E5E5E5"> A to B</font>

61
00:03:04,430 --> 00:03:11,760
12 streams going to<font color="#CCCCCC"> IGP destination and</font>

62
00:03:07,799 --> 00:03:15,030
then three streams for bgp analyzes the

63
00:03:11,760 --> 00:03:18,000
12th<font color="#CCCCCC"> creams ygp destination are going to</font>

64
00:03:15,030 --> 00:03:21,989
prefix number one prefix number 250

65
00:03:18,000 --> 00:03:24,419
prefix number 500 and so on up<font color="#E5E5E5"> to 2500</font>

66
00:03:21,989 --> 00:03:26,870
this allows to monitor the convergence

67
00:03:24,419 --> 00:03:30,989
as a function of where you are in the

68
00:03:26,870 --> 00:03:33,720
modification list the prefix<font color="#CCCCCC"> treat the</font>

69
00:03:30,989 --> 00:03:37,560
stream number<font color="#E5E5E5"> 13 is going to build a BGP</font>

70
00:03:33,720 --> 00:03:40,859
next up the streams number 14 and 15 are

71
00:03:37,560 --> 00:03:44,099
going to<font color="#CCCCCC"> two bgp destination so prefixes</font>

72
00:03:40,859 --> 00:03:47,010
learn as bgp destination that recurs on

73
00:03:44,099 --> 00:03:49,349
the<font color="#E5E5E5"> bgp next up in stream number 13 for</font>

74
00:03:47,010 --> 00:03:55,500
each of the streams we sending 10,000

75
00:03:49,349 --> 00:03:57,959
packets per second the lab setup is

76
00:03:55,500 --> 00:04:01,230
convenient because<font color="#E5E5E5"> I can test for four</font>

77
00:03:57,959 --> 00:04:03,359
scenarios if I fail this link or if I

78
00:04:01,230 --> 00:04:06,060
fail this link I have<font color="#E5E5E5"> respectively a</font>

79
00:04:03,359 --> 00:04:09,269
local or remote failure and then

80
00:04:06,060 --> 00:04:11,849
depending if I set this to 200 or 300

81
00:04:09,269 --> 00:04:14,400
before the the conversions

82
00:04:11,849 --> 00:04:16,440
experimentation I have load balancing or

83
00:04:14,400 --> 00:04:20,760
notes so i will always analyze those

84
00:04:16,440 --> 00:04:24,599
four scenarios for each scenarios we

85
00:04:20,760 --> 00:04:27,150
will repeat the test 100 times so let us

86
00:04:24,599 --> 00:04:29,219
look at the results for<font color="#E5E5E5"> the</font>

87
00:04:27,150 --> 00:04:32,388
<font color="#CCCCCC">on the desk being equipped</font><font color="#E5E5E5"> with a grp</font>

88
00:04:29,220 --> 00:04:35,910
processor and an engine<font color="#E5E5E5"> to line card</font>

89
00:04:32,389 --> 00:04:38,880
yeah all the interface applause applause

90
00:04:35,910 --> 00:04:42,630
so let us look at the results for<font color="#CCCCCC"> a</font>

91
00:04:38,880 --> 00:04:44,820
remote failure no load balancing the

92
00:04:42,630 --> 00:04:49,380
processor is a grp and the<font color="#E5E5E5"> language</font><font color="#CCCCCC"> is</font>

93
00:04:44,820 --> 00:04:51,349
an engine<font color="#E5E5E5"> 2 plus the x axis gives you</font>

94
00:04:49,380 --> 00:04:55,259
the prefix position in the update list

95
00:04:51,350 --> 00:04:58,169
you see the 12 is is streams and then

96
00:04:55,259 --> 00:05:00,600
the<font color="#E5E5E5"> three bgp streams just forget about</font>

97
00:04:58,169 --> 00:05:03,479
the three last points that for for the

98
00:05:00,600 --> 00:05:06,210
beginning so the x axis is the prefix

99
00:05:03,479 --> 00:05:08,699
position the<font color="#CCCCCC"> y axis</font><font color="#E5E5E5"> is the loss of</font>

100
00:05:06,210 --> 00:05:11,729
connectivity that was<font color="#E5E5E5"> measured for each</font>

101
00:05:08,699 --> 00:05:14,729
test we repeat<font color="#CCCCCC"> it 100 times so I'm</font>

102
00:05:11,729 --> 00:05:17,099
plotting<font color="#E5E5E5"> three curve in dark blue it's</font>

103
00:05:14,729 --> 00:05:21,030
the minimum across 100 iteration for

104
00:05:17,100 --> 00:05:24,120
each stream in ping it's the median and

105
00:05:21,030 --> 00:05:28,109
in yellow it's the percentile 100 or the

106
00:05:24,120 --> 00:05:32,580
other maximum<font color="#E5E5E5"> so what you are seeing</font>

107
00:05:28,110 --> 00:05:35,669
<font color="#E5E5E5">here is that first the system is linear</font>

108
00:05:32,580 --> 00:05:38,130
the convergence process is linear the

109
00:05:35,669 --> 00:05:44,880
<font color="#E5E5E5">initial delay is short on</font><font color="#CCCCCC"> the order of</font>

110
00:05:38,130 --> 00:05:48,570
150 to 200 80 milliseconds the slope

111
00:05:44,880 --> 00:05:50,610
which is coming<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> prefix</font>

112
00:05:48,570 --> 00:05:53,310
dependent update<font color="#E5E5E5"> it's much more</font>

113
00:05:50,610 --> 00:05:55,590
important than the initial delay the

114
00:05:53,310 --> 00:05:57,990
initial delay is made of the link

115
00:05:55,590 --> 00:06:00,510
failure detection the LSP origination

116
00:05:57,990 --> 00:06:03,960
<font color="#E5E5E5">the LSP flooding and the shortest path</font>

117
00:06:00,510 --> 00:06:07,469
tree computation this represents 150 to

118
00:06:03,960 --> 00:06:09,989
200 80 milliseconds here then the prefix

119
00:06:07,470 --> 00:06:12,449
dependent process is<font color="#E5E5E5"> going on that</font>

120
00:06:09,990 --> 00:06:14,340
updates the ribbon<font color="#E5E5E5"> fifth tables and you</font>

121
00:06:12,449 --> 00:06:15,930
see that it's more<font color="#E5E5E5"> expensive much more</font>

122
00:06:14,340 --> 00:06:19,948
expensive than actually all the other

123
00:06:15,930 --> 00:06:22,820
components<font color="#CCCCCC"> of convergence even that's</font>

124
00:06:19,949 --> 00:06:25,620
why we<font color="#CCCCCC"> have introduced a prioritization</font>

125
00:06:22,820 --> 00:06:28,500
capability that allows the designer<font color="#E5E5E5"> to</font>

126
00:06:25,620 --> 00:06:29,990
flag prefixes in the<font color="#CCCCCC"> igp as being either</font>

127
00:06:28,500 --> 00:06:32,840
important on

128
00:06:29,990 --> 00:06:35,960
important for<font color="#E5E5E5"> the convergence and so the</font>

129
00:06:32,840 --> 00:06:38,719
important prefixes always converge first

130
00:06:35,960 --> 00:06:41,570
that's why you see the red fig bar on

131
00:06:38,720 --> 00:06:45,140
the bottom between zero and five hundred

132
00:06:41,570 --> 00:06:47,719
because it it just<font color="#E5E5E5"> to highlight that the</font>

133
00:06:45,140 --> 00:06:50,210
500 important prefixes always always

134
00:06:47,720 --> 00:06:53,990
<font color="#E5E5E5">converged first it's important because</font>

135
00:06:50,210 --> 00:06:56,080
if you design and normally you design on

136
00:06:53,990 --> 00:06:58,130
the basis of worst-case analyzes if

137
00:06:56,080 --> 00:06:59,780
you're looking at<font color="#E5E5E5"> the worst gas</font>

138
00:06:58,130 --> 00:07:03,290
conversions for your most important

139
00:06:59,780 --> 00:07:06,200
prefixes you need to look at the yellow

140
00:07:03,290 --> 00:07:08,600
dots for<font color="#CCCCCC"> the for the point number 500</font>

141
00:07:06,200 --> 00:07:10,849
and this is much different to what you

142
00:07:08,600 --> 00:07:13,340
should do if you would net would have

143
00:07:10,850 --> 00:07:15,410
nope prioritization in which case you

144
00:07:13,340 --> 00:07:17,270
would need to<font color="#CCCCCC"> look here and you see that</font>

145
00:07:15,410 --> 00:07:23,050
the difference between<font color="#CCCCCC"> the two is quite</font>

146
00:07:17,270 --> 00:07:26,750
important the next thing we learn from

147
00:07:23,050 --> 00:07:29,240
<font color="#E5E5E5">this experiment is that the spread is</font>

148
00:07:26,750 --> 00:07:31,280
small so the spread is the difference

149
00:07:29,240 --> 00:07:33,890
<font color="#E5E5E5">between the minimum and the maximum and</font>

150
00:07:31,280 --> 00:07:36,169
we try<font color="#E5E5E5"> to work a lot on this to increase</font>

151
00:07:33,890 --> 00:07:39,560
the determinism of the convergence

152
00:07:36,170 --> 00:07:43,490
behavior so finally<font color="#CCCCCC"> we can look at the</font>

153
00:07:39,560 --> 00:07:46,340
BGP results the free last points the

154
00:07:43,490 --> 00:07:49,340
first one to<font color="#CCCCCC"> the left is the BGP next of</font>

155
00:07:46,340 --> 00:07:51,710
<font color="#E5E5E5">the two other points bgp are the loss of</font>

156
00:07:49,340 --> 00:07:54,440
connectivity measured to bgp destination

157
00:07:51,710 --> 00:07:57,049
and what you<font color="#E5E5E5"> see from here is that the</font>

158
00:07:54,440 --> 00:07:59,810
loss of connectivity for a<font color="#E5E5E5"> bgp learn</font>

159
00:07:57,050 --> 00:08:03,020
prefix is actually the same as the loss

160
00:07:59,810 --> 00:08:06,590
of connectivity to its bgp next up which

161
00:08:03,020 --> 00:08:10,430
is learning<font color="#CCCCCC"> the igp which means that the</font>

162
00:08:06,590 --> 00:08:12,650
<font color="#E5E5E5">bgp learned prefixes also leverage all</font>

163
00:08:10,430 --> 00:08:17,200
the optimization for the<font color="#CCCCCC"> igp it's an</font>

164
00:08:12,650 --> 00:08:21,280
important result so here we summarize

165
00:08:17,200 --> 00:08:24,680
all the test scenarios for the remote

166
00:08:21,280 --> 00:08:26,750
versus local load balancing versus no

167
00:08:24,680 --> 00:08:32,180
load balancing scenario so we have four

168
00:08:26,750 --> 00:08:35,179
scenarios what we plot is the<font color="#E5E5E5"> worst-case</font>

169
00:08:32,179 --> 00:08:37,699
across the 100 iteration the<font color="#E5E5E5"> worst-case</font>

170
00:08:35,179 --> 00:08:40,789
loss of connectivity for prefix number

171
00:08:37,700 --> 00:08:42,599
500 so it's the last important prefix

172
00:08:40,789 --> 00:08:46,469
it's the worst case convert

173
00:08:42,599 --> 00:08:50,550
measured for our important prefixes the

174
00:08:46,470 --> 00:08:52,920
first three groups in in blue red and I

175
00:08:50,550 --> 00:08:55,859
think yellow from here yeah basically

176
00:08:52,920 --> 00:08:59,040
engine<font color="#E5E5E5"> to engine 3 engine for place with</font>

177
00:08:55,860 --> 00:09:02,310
the grp processor you see that first

178
00:08:59,040 --> 00:09:04,829
it's it's consistent whether you have a

179
00:09:02,310 --> 00:09:07,199
remote or local failure whether you are

180
00:09:04,829 --> 00:09:09,420
load balancing or not the convergence in

181
00:09:07,199 --> 00:09:12,029
the worst case is measured at<font color="#E5E5E5"> a run 400</font>

182
00:09:09,420 --> 00:09:14,939
milliseconds and then the second thing

183
00:09:12,029 --> 00:09:17,339
we<font color="#CCCCCC"> learned from from this short is that</font>

184
00:09:14,940 --> 00:09:21,120
the<font color="#E5E5E5"> results if you take the PRP one with</font>

185
00:09:17,339 --> 00:09:24,660
<font color="#E5E5E5">engine</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> it's actually much smaller</font>

186
00:09:21,120 --> 00:09:27,180
on the<font color="#CCCCCC"> order of 250 milliseconds so what</font>

187
00:09:24,660 --> 00:09:29,730
we<font color="#CCCCCC"> derive from this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that cpu power is</font>

188
00:09:27,180 --> 00:09:32,489
very important the PRP one is twice

189
00:09:29,730 --> 00:09:36,240
faster than the grp and you see the

190
00:09:32,490 --> 00:09:37,740
consequence it's also an indication for

191
00:09:36,240 --> 00:09:40,319
this for the future<font color="#CCCCCC"> and what could</font>

192
00:09:37,740 --> 00:09:45,360
happen if the<font color="#E5E5E5"> CPU power keeps on</font>

193
00:09:40,319 --> 00:09:48,689
increasing so as I said earlier it's

194
00:09:45,360 --> 00:09:51,180
when you design you typically<font color="#E5E5E5"> test and</font>

195
00:09:48,689 --> 00:09:52,889
look only<font color="#CCCCCC"> on the worst case and it's</font>

196
00:09:51,180 --> 00:09:55,469
important to do it like this but it's

197
00:09:52,889 --> 00:09:56,970
also important<font color="#CCCCCC"> to look at the difference</font>

198
00:09:55,470 --> 00:09:59,730
<font color="#CCCCCC">between the average behavior in the</font>

199
00:09:56,970 --> 00:10:02,850
worst case so here it's for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> engine</font>

200
00:09:59,730 --> 00:10:05,730
<font color="#CCCCCC">three combination with the PRP</font><font color="#E5E5E5"> 1 100</font>

201
00:10:02,850 --> 00:10:08,069
iteration and you compare the blue curve

202
00:10:05,730 --> 00:10:10,620
the blue results come with the yellow

203
00:10:08,069 --> 00:10:13,410
results the blue one of the worst worst

204
00:10:10,620 --> 00:10:17,459
case loss of<font color="#E5E5E5"> connectivity measured for</font>

205
00:10:13,410 --> 00:10:20,310
the 500 important prefixes while the

206
00:10:17,459 --> 00:10:23,849
yellow whistles give you the average

207
00:10:20,310 --> 00:10:27,239
Convergence measured for the 500

208
00:10:23,850 --> 00:10:31,980
prefixes and so it's it simply gives you

209
00:10:27,240 --> 00:10:38,160
a an annex margin of safety margin when

210
00:10:31,980 --> 00:10:40,860
compared to the sub second target so if

211
00:10:38,160 --> 00:10:44,579
<font color="#CCCCCC">we come to that point the result seems</font>

212
00:10:40,860 --> 00:10:47,490
pretty pretty good and confirming the

213
00:10:44,579 --> 00:10:49,529
sub seconds convergence behavior there

214
00:10:47,490 --> 00:10:52,620
could be two questions that<font color="#E5E5E5"> would arise</font>

215
00:10:49,529 --> 00:10:55,680
first it's basically to say

216
00:10:52,620 --> 00:10:58,740
in your<font color="#E5E5E5"> lab</font><font color="#CCCCCC"> set up you you look at</font>

217
00:10:55,680 --> 00:11:02,189
different scenarios you you have bgp and

218
00:10:58,740 --> 00:11:03,690
so on but you do<font color="#E5E5E5"> not consider the</font>

219
00:11:02,190 --> 00:11:06,420
flooding impact because you don't have

220
00:11:03,690 --> 00:11:08,460
many hubs also you do not consider the

221
00:11:06,420 --> 00:11:10,939
fact that the routers could be spread

222
00:11:08,460 --> 00:11:13,680
over a continent or multiple continents

223
00:11:10,940 --> 00:11:15,450
actually those two points are negligible

224
00:11:13,680 --> 00:11:18,000
and that's the purpose of the remaining

225
00:11:15,450 --> 00:11:21,000
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the next slides</font><font color="#E5E5E5"> first let us look at</font>

226
00:11:18,000 --> 00:11:23,070
the flooding impact we we take our unit

227
00:11:21,000 --> 00:11:26,970
on the test define it as previously and

228
00:11:23,070 --> 00:11:30,200
we add<font color="#CCCCCC"> a load to it we add SNMP probe</font>

229
00:11:26,970 --> 00:11:33,710
and we add eight bgp flaps per second

230
00:11:30,200 --> 00:11:36,810
the<font color="#CCCCCC"> cpu on average is at</font><font color="#E5E5E5"> 35</font><font color="#CCCCCC"> persons</font>

231
00:11:33,710 --> 00:11:39,900
utilization we connect the unit on the

232
00:11:36,810 --> 00:11:42,000
test<font color="#CCCCCC"> to to aging and device the first</font>

233
00:11:39,900 --> 00:11:44,400
one is standing on LSP and we measure

234
00:11:42,000 --> 00:11:47,220
how long it takes for this LSP to be

235
00:11:44,400 --> 00:11:49,439
flooded to the second<font color="#E5E5E5"> agilent device we</font>

236
00:11:47,220 --> 00:11:52,140
repeat the test<font color="#CCCCCC"> one one</font><font color="#E5E5E5"> thousand times</font>

237
00:11:49,440 --> 00:11:55,740
and we plot the flooding time to hop on

238
00:11:52,140 --> 00:11:58,620
the<font color="#CCCCCC"> y-axis so we see that for ninety</font>

239
00:11:55,740 --> 00:12:01,620
percent of the measurements the flooding

240
00:11:58,620 --> 00:12:04,080
time /<font color="#E5E5E5"> hut is smaller or equal to 2</font>

241
00:12:01,620 --> 00:12:06,330
milliseconds the reason<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is that</font>

242
00:12:04,080 --> 00:12:08,370
it's important in the implementation<font color="#E5E5E5"> of</font>

243
00:12:06,330 --> 00:12:10,470
the<font color="#CCCCCC"> igp to make sure that</font><font color="#E5E5E5"> you're going</font>

244
00:12:08,370 --> 00:12:17,100
<font color="#E5E5E5">to flood the important LSP before going</font>

245
00:12:10,470 --> 00:12:19,490
into<font color="#E5E5E5"> SBT computation the other question</font>

246
00:12:17,100 --> 00:12:22,310
was<font color="#E5E5E5"> related to the propagation distance</font>

247
00:12:19,490 --> 00:12:24,720
so intuitively it's<font color="#E5E5E5"> quite a</font>

248
00:12:22,310 --> 00:12:27,060
straightforward to compute that this is

249
00:12:24,720 --> 00:12:28,620
negligible but we<font color="#E5E5E5"> still wanted to</font>

250
00:12:27,060 --> 00:12:31,979
analyze it in a more formal way to

251
00:12:28,620 --> 00:12:35,010
<font color="#E5E5E5">confirm it so let's first define the</font>

252
00:12:31,980 --> 00:12:37,230
propagation distance so again there<font color="#CCCCCC"> was</font>

253
00:12:35,010 --> 00:12:40,170
some animation but let's see what<font color="#E5E5E5"> we</font>

254
00:12:37,230 --> 00:12:42,240
wanted to do we have initially a<font color="#E5E5E5"> green a</font>

255
00:12:40,170 --> 00:12:45,000
strain going from left to right that

256
00:12:42,240 --> 00:12:47,220
initially goes by at<font color="#E5E5E5"> the green path at a</font>

257
00:12:45,000 --> 00:12:51,900
certain point<font color="#E5E5E5"> of time the link between f</font>

258
00:12:47,220 --> 00:12:53,670
and<font color="#E5E5E5"> z is going to fail so we will have</font><font color="#CCCCCC"> a</font>

259
00:12:51,900 --> 00:12:56,220
convergence events and the traffic

260
00:12:53,670 --> 00:13:00,449
stream will eventually be routed

261
00:12:56,220 --> 00:13:03,660
according<font color="#CCCCCC"> to the red path we define f as</font>

262
00:13:00,450 --> 00:13:05,250
the failing the<font color="#E5E5E5"> failure node where it's</font>

263
00:13:03,660 --> 00:13:07,469
<font color="#E5E5E5">the note that is locally connected</font>

264
00:13:05,250 --> 00:13:10,770
the link that that is<font color="#CCCCCC"> going down we</font>

265
00:13:07,470 --> 00:13:13,140
define the rerouting node as intuitively

266
00:13:10,770 --> 00:13:15,090
it's easy to think<font color="#E5E5E5"> that the rewriting</font>

267
00:13:13,140 --> 00:13:17,069
node is the point where<font color="#E5E5E5"> the two paths</font>

268
00:13:15,090 --> 00:13:19,590
<font color="#E5E5E5">diverge it's the point where the</font>

269
00:13:17,070 --> 00:13:22,620
rewriting of yours and so let's see if

270
00:13:19,590 --> 00:13:25,170
we define it like this we can define the

271
00:13:22,620 --> 00:13:28,260
distance between<font color="#E5E5E5"> the failure and the</font>

272
00:13:25,170 --> 00:13:31,500
<font color="#CCCCCC">rewriting point as here being one up</font><font color="#E5E5E5"> and</font>

273
00:13:28,260 --> 00:13:33,600
being in terms of propagation between

274
00:13:31,500 --> 00:13:35,370
the propagation through that link<font color="#E5E5E5"> the</font>

275
00:13:33,600 --> 00:13:37,440
propagation is more or less 5

276
00:13:35,370 --> 00:13:41,070
millisecond per thousand kilometer of

277
00:13:37,440 --> 00:13:42,840
fiber actually if we<font color="#E5E5E5"> would</font><font color="#CCCCCC"> have time we</font>

278
00:13:41,070 --> 00:13:45,510
could show show that this intuitive

279
00:13:42,840 --> 00:13:48,030
definition of our is actually a<font color="#E5E5E5"> worse</font>

280
00:13:45,510 --> 00:13:50,160
<font color="#E5E5E5">case they exist better case for</font>

281
00:13:48,030 --> 00:13:52,230
<font color="#E5E5E5">rerouting</font><font color="#CCCCCC"> no than this one so the</font>

282
00:13:50,160 --> 00:13:55,199
results that you will see our worst case

283
00:13:52,230 --> 00:13:58,680
and we are recomputing them to have a

284
00:13:55,200 --> 00:14:02,610
better analysis still the results

285
00:13:58,680 --> 00:14:05,160
confirm the intuition so one of<font color="#E5E5E5"> the lead</font>

286
00:14:02,610 --> 00:14:07,950
customers that work with us gave us the

287
00:14:05,160 --> 00:14:11,420
<font color="#E5E5E5">topology it's a worldwide</font><font color="#CCCCCC"> Tier one isp</font>

288
00:14:07,950 --> 00:14:16,140
<font color="#E5E5E5">they gave us the full well why topology</font>

289
00:14:11,420 --> 00:14:18,089
<font color="#CCCCCC">the full traffic metrics and we knew the</font>

290
00:14:16,140 --> 00:14:24,420
propagation distance between any two

291
00:14:18,089 --> 00:14:27,210
rather so we fail we have failed the 340

292
00:14:24,420 --> 00:14:29,640
most loaded links on the network and for

293
00:14:27,210 --> 00:14:32,910
each failure scenario we have computed

294
00:14:29,640 --> 00:14:35,640
the distance as previously define it we

295
00:14:32,910 --> 00:14:37,829
have<font color="#E5E5E5"> waited each of the distance as such</font>

296
00:14:35,640 --> 00:14:40,530
computed by the<font color="#E5E5E5"> amount of traffic on</font>

297
00:14:37,830 --> 00:14:42,870
each flow as we knew the traffic metrics

298
00:14:40,530 --> 00:14:45,569
and what you see be included here is

299
00:14:42,870 --> 00:14:48,660
<font color="#E5E5E5">basically the results of all these</font>

300
00:14:45,570 --> 00:14:51,839
<font color="#E5E5E5">computation what did what it says is</font>

301
00:14:48,660 --> 00:14:56,310
<font color="#CCCCCC">that if</font><font color="#E5E5E5"> I remember</font><font color="#CCCCCC"> we're fifty persons</font>

302
00:14:51,839 --> 00:14:59,100
for fifty percent of the cases we have a

303
00:14:56,310 --> 00:15:01,770
distance<font color="#E5E5E5"> of zero up counts so it means</font>

304
00:14:59,100 --> 00:15:03,540
that when we have a<font color="#E5E5E5"> failure we it's the</font>

305
00:15:01,770 --> 00:15:06,750
local note that will locally rear out

306
00:15:03,540 --> 00:15:09,599
and we have four ninety-five percent of

307
00:15:06,750 --> 00:15:12,330
the cases the hub count is smaller or

308
00:15:09,600 --> 00:15:14,490
equal to 3 so it means that<font color="#E5E5E5"> you really</font>

309
00:15:12,330 --> 00:15:16,740
don't<font color="#E5E5E5"> need to flood very far and so the</font>

310
00:15:14,490 --> 00:15:18,160
hub count that<font color="#CCCCCC"> influenced the flooding</font>

311
00:15:16,740 --> 00:15:20,589
time is very

312
00:15:18,160 --> 00:15:24,519
more bounded by three four ninety-five

313
00:15:20,589 --> 00:15:27,300
<font color="#E5E5E5">thousand of the cases we take the same</font>

314
00:15:24,519 --> 00:15:29,889
analyzes and we look at the propagation

315
00:15:27,300 --> 00:15:33,758
distribution what we find out is that

316
00:15:29,889 --> 00:15:35,620
<font color="#E5E5E5">seventy eight percent of the cases the</font>

317
00:15:33,759 --> 00:15:38,399
propagation distance is<font color="#E5E5E5"> zero</font>

318
00:15:35,620 --> 00:15:42,069
milliseconds why because it's either

319
00:15:38,399 --> 00:15:46,110
<font color="#CCCCCC">rewriting in the same note</font><font color="#E5E5E5"> itself or its</font>

320
00:15:42,069 --> 00:15:50,560
a rewriting that occurs in the<font color="#E5E5E5"> pub and</font>

321
00:15:46,110 --> 00:15:54,220
we find that many<font color="#CCCCCC"> two persons of the</font>

322
00:15:50,560 --> 00:15:56,199
cases are going to have a distance<font color="#E5E5E5"> to</font>

323
00:15:54,220 --> 00:16:00,009
<font color="#E5E5E5">the rewriting node which is smaller or</font>

324
00:15:56,199 --> 00:16:02,829
equal to 35 milliseconds so this

325
00:16:00,009 --> 00:16:05,920
confirms that the flooding time if you

326
00:16:02,829 --> 00:16:08,410
indeed flood well before you run SPF and

327
00:16:05,920 --> 00:16:10,870
the propagation distance are negligible

328
00:16:08,410 --> 00:16:15,790
and and so that the results that we

329
00:16:10,870 --> 00:16:18,310
present<font color="#CCCCCC"> it actually relevant so the</font>

330
00:16:15,790 --> 00:16:21,819
conclusion is that sub second

331
00:16:18,310 --> 00:16:24,790
conversions for is is is realistic<font color="#E5E5E5"> and</font>

332
00:16:21,819 --> 00:16:28,029
it's actually conservative and that the

333
00:16:24,790 --> 00:16:30,399
technology<font color="#CCCCCC"> has significantly improved so</font>

334
00:16:28,029 --> 00:16:35,680
the question<font color="#CCCCCC"> that would arise now I</font>

335
00:16:30,399 --> 00:16:38,470
guess is why is it possible so the way

336
00:16:35,680 --> 00:16:41,229
<font color="#CCCCCC">we work in our project</font><font color="#E5E5E5"> is basically we</font>

337
00:16:38,470 --> 00:16:43,300
have optimized other all the components

338
00:16:41,230 --> 00:16:45,910
<font color="#E5E5E5">that in that I involved in the</font>

339
00:16:43,300 --> 00:16:48,099
convergence behavior we<font color="#E5E5E5"> don't have the</font>

340
00:16:45,910 --> 00:16:51,490
time here to explain all of this it

341
00:16:48,100 --> 00:16:54,639
<font color="#E5E5E5">takes so typically one day but I'm going</font>

342
00:16:51,490 --> 00:16:58,029
to<font color="#E5E5E5"> highlight a few key points that put</font>

343
00:16:54,639 --> 00:17:00,250
come to mine most frequently the first

344
00:16:58,029 --> 00:17:04,480
one is dee dee is the link failure

345
00:17:00,250 --> 00:17:07,480
detection time we<font color="#CCCCCC"> leverage bus passes</font>

346
00:17:04,480 --> 00:17:09,849
but based on SONET and SDH which will

347
00:17:07,480 --> 00:17:12,640
discover the failure in less than 10

348
00:17:09,849 --> 00:17:15,369
milliseconds<font color="#E5E5E5"> so it's a very fast failure</font>

349
00:17:12,640 --> 00:17:18,309
detection system and we leverage it the

350
00:17:15,369 --> 00:17:21,479
only questions that that still is<font color="#E5E5E5"> prison</font>

351
00:17:18,309 --> 00:17:23,829
is how long does it take<font color="#CCCCCC"> for the</font>

352
00:17:21,480 --> 00:17:25,809
<font color="#E5E5E5">discovery of the failure to be</font>

353
00:17:23,829 --> 00:17:27,970
communicated<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> adware that is</font>

354
00:17:25,809 --> 00:17:30,780
going to detect it very fast to actually

355
00:17:27,970 --> 00:17:32,610
to the<font color="#E5E5E5"> CPU where</font>

356
00:17:30,780 --> 00:17:35,220
is is is going to be<font color="#E5E5E5"> triggered for its</font>

357
00:17:32,610 --> 00:17:38,850
conversions so we<font color="#CCCCCC"> actually did this test</font>

358
00:17:35,220 --> 00:17:41,340
and this is her unit under test equipped

359
00:17:38,850 --> 00:17:43,679
with an engine to pass line card again

360
00:17:41,340 --> 00:17:46,500
it's the same configuration with SNMP

361
00:17:43,680 --> 00:17:50,100
load and a bgp flaps per seconds the

362
00:17:46,500 --> 00:17:52,470
average<font color="#CCCCCC"> CPU time was 35 persons we</font>

363
00:17:50,100 --> 00:17:55,590
repeat the test<font color="#CCCCCC"> 1,000 times and we have</font>

364
00:17:52,470 --> 00:17:58,110
we measured the time the time between

365
00:17:55,590 --> 00:18:01,230
when the other way on the LAN card finds

366
00:17:58,110 --> 00:18:05,189
the failure and when on the<font color="#E5E5E5"> processor</font>

367
00:18:01,230 --> 00:18:07,290
the ISS<font color="#E5E5E5"> conversions is triggered we find</font>

368
00:18:05,190 --> 00:18:09,720
that<font color="#E5E5E5"> in ninety percent of the case the</font>

369
00:18:07,290 --> 00:18:12,060
time between the two events is smaller

370
00:18:09,720 --> 00:18:15,240
than eight milliseconds model or equal

371
00:18:12,060 --> 00:18:17,550
to 8 milliseconds<font color="#E5E5E5"> so overall you would</font>

372
00:18:15,240 --> 00:18:19,730
have up to 10 milliseconds to discover

373
00:18:17,550 --> 00:18:23,460
<font color="#CCCCCC">the failure in the Senate as the edge</font>

374
00:18:19,730 --> 00:18:25,740
layer<font color="#CCCCCC"> plus on the order of eight</font>

375
00:18:23,460 --> 00:18:29,070
milliseconds to communicate it to the

376
00:18:25,740 --> 00:18:31,950
processor now a question<font color="#E5E5E5"> that could</font>

377
00:18:29,070 --> 00:18:33,870
arise here but also for the flooding

378
00:18:31,950 --> 00:18:38,070
time / hobbies what is the reason for

379
00:18:33,870 --> 00:18:40,860
the rare points or the rare measurements

380
00:18:38,070 --> 00:18:43,700
we're actually the detection time or the

381
00:18:40,860 --> 00:18:46,409
flooding time is<font color="#CCCCCC"> actually larger so why</font>

382
00:18:43,700 --> 00:18:49,920
what is the reason for this and is it

383
00:18:46,410 --> 00:18:53,010
important so the first the<font color="#E5E5E5"> first</font>

384
00:18:49,920 --> 00:18:56,010
question the reason for<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that the</font>

385
00:18:53,010 --> 00:18:58,710
worst case is going to<font color="#E5E5E5"> be on the order</font>

386
00:18:56,010 --> 00:19:00,360
of 50<font color="#E5E5E5"> milliseconds why the worst case</font>

387
00:18:58,710 --> 00:19:02,760
would happen if you would have a<font color="#E5E5E5"> process</font>

388
00:19:00,360 --> 00:19:05,040
of the same priority as is is that is

389
00:19:02,760 --> 00:19:07,920
scheduled on the cpu just before the

390
00:19:05,040 --> 00:19:09,420
convergence even occur and then on top

391
00:19:07,920 --> 00:19:10,950
of that condition you would need that

392
00:19:09,420 --> 00:19:13,500
the process that<font color="#E5E5E5"> be scheduled is</font>

393
00:19:10,950 --> 00:19:15,780
actually a very busy process that would

394
00:19:13,500 --> 00:19:19,200
have to keep<font color="#E5E5E5"> the cpu for 50 milliseconds</font>

395
00:19:15,780 --> 00:19:22,230
for its allocated<font color="#CCCCCC"> time start so it's</font>

396
00:19:19,200 --> 00:19:24,090
rare by itself and this is you can<font color="#CCCCCC"> see</font>

397
00:19:22,230 --> 00:19:27,510
it in the distribution here the worst

398
00:19:24,090 --> 00:19:30,659
cases is very rare but the<font color="#E5E5E5"> next question</font>

399
00:19:27,510 --> 00:19:33,660
that could the next<font color="#E5E5E5"> question it thanks</font>

400
00:19:30,660 --> 00:19:38,430
the next question is is it<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is it</font>

401
00:19:33,660 --> 00:19:40,680
important and the answer is no for from

402
00:19:38,430 --> 00:19:42,930
for multiple reasons the first reason is

403
00:19:40,680 --> 00:19:46,350
that first it does not occur free

404
00:19:42,930 --> 00:19:48,900
only seconds<font color="#CCCCCC"> 50 milliseconds is 20 times</font>

405
00:19:46,350 --> 00:19:52,230
smaller than the objective that<font color="#E5E5E5"> is one</font>

406
00:19:48,900 --> 00:19:55,530
second third in<font color="#E5E5E5"> reality in an IP network</font>

407
00:19:52,230 --> 00:19:58,950
it<font color="#CCCCCC"> will happen even</font><font color="#E5E5E5"> less likely</font><font color="#CCCCCC"> than in</font>

408
00:19:55,530 --> 00:20:03,050
these measurements reason is that for a

409
00:19:58,950 --> 00:20:06,270
failure detection to actually show this

410
00:20:03,050 --> 00:20:08,280
a detection time larger than eight

411
00:20:06,270 --> 00:20:10,050
milliseconds it would need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> occur at</font>

412
00:20:08,280 --> 00:20:12,750
the same time on<font color="#E5E5E5"> the two routers</font>

413
00:20:10,050 --> 00:20:15,360
connected to the link failure and for

414
00:20:12,750 --> 00:20:17,340
the flooding it's seven worse because of

415
00:20:15,360 --> 00:20:19,620
the meshing of an IP network you have

416
00:20:17,340 --> 00:20:21,899
<font color="#E5E5E5">many flooding path between the failure</font>

417
00:20:19,620 --> 00:20:24,060
node and the rerouting node so for the

418
00:20:21,900 --> 00:20:25,770
worst case to occur you would need to<font color="#E5E5E5"> be</font>

419
00:20:24,060 --> 00:20:28,290
extremely unlikely because it would need

420
00:20:25,770 --> 00:20:30,090
<font color="#E5E5E5">to appear for</font><font color="#CCCCCC"> the same LSB on all the</font>

421
00:20:28,290 --> 00:20:33,750
notes across all the possible flooding

422
00:20:30,090 --> 00:20:38,480
path so for for these three reasons I

423
00:20:33,750 --> 00:20:41,040
<font color="#E5E5E5">think that these rare points</font><font color="#CCCCCC"> are not so</font>

424
00:20:38,480 --> 00:20:43,830
important and anyway it's 20 times

425
00:20:41,040 --> 00:20:49,190
smaller than the target which is the

426
00:20:43,830 --> 00:20:51,840
second the next topic that would be

427
00:20:49,190 --> 00:20:53,790
discus most<font color="#E5E5E5"> likely if we</font><font color="#CCCCCC"> talked</font><font color="#E5E5E5"> about</font>

428
00:20:51,840 --> 00:20:56,250
convergence is shortest path tree

429
00:20:53,790 --> 00:20:58,980
computation how long does it take to to

430
00:20:56,250 --> 00:21:02,010
compute<font color="#CCCCCC"> the extra the deck</font><font color="#E5E5E5"> for</font>

431
00:20:58,980 --> 00:21:03,840
implementation normally is in n log n we

432
00:21:02,010 --> 00:21:06,860
we connect<font color="#E5E5E5"> our unit and the test to a</font>

433
00:21:03,840 --> 00:21:10,139
cloud where we control the size and we

434
00:21:06,860 --> 00:21:11,760
measure<font color="#E5E5E5"> the time it takes to to compute</font>

435
00:21:10,140 --> 00:21:14,610
<font color="#CCCCCC">the shortest path tree for the full</font>

436
00:21:11,760 --> 00:21:18,480
cloud we find out<font color="#CCCCCC"> that actually the</font>

437
00:21:14,610 --> 00:21:20,219
relationship between the the SPT

438
00:21:18,480 --> 00:21:22,860
duration and the number of nodes is

439
00:21:20,220 --> 00:21:25,980
pretty linear for the PRP one it's on

440
00:21:22,860 --> 00:21:28,679
<font color="#E5E5E5">the order of 59 microsecond per node it</font>

441
00:21:25,980 --> 00:21:33,230
means<font color="#E5E5E5"> that if you have a topology of 600</font>

442
00:21:28,680 --> 00:21:37,440
notes you will compute your full SBT in

443
00:21:33,230 --> 00:21:40,410
35 milliseconds so this is with a PRP

444
00:21:37,440 --> 00:21:43,140
one if you remember one of the first

445
00:21:40,410 --> 00:21:45,990
slide where we had an initial delay on

446
00:21:43,140 --> 00:21:48,630
the order of 150 to 200<font color="#CCCCCC"> 18-minute second</font>

447
00:21:45,990 --> 00:21:52,340
it was with the grp and with a cloud of

448
00:21:48,630 --> 00:21:54,990
<font color="#CCCCCC">1000 notes so the grp is twice lower and</font>

449
00:21:52,340 --> 00:21:56,010
<font color="#CCCCCC">1,000 not it means that the</font><font color="#E5E5E5"> SPT</font>

450
00:21:54,990 --> 00:21:58,920
computation in

451
00:21:56,010 --> 00:22:01,860
case was 100 milliseconds<font color="#E5E5E5"> and and so it</font>

452
00:21:58,920 --> 00:22:07,440
confirms the reason why you have such a

453
00:22:01,860 --> 00:22:10,560
small<font color="#E5E5E5"> initial delay now again if you</font>

454
00:22:07,440 --> 00:22:13,470
<font color="#CCCCCC">have a topology of 600 nodes running on</font>

455
00:22:10,560 --> 00:22:15,780
PRP one and you do a full SPT it's 35

456
00:22:13,470 --> 00:22:19,080
milliseconds but actually<font color="#CCCCCC"> in reality it</font>

457
00:22:15,780 --> 00:22:21,000
will be lower than this why because we

458
00:22:19,080 --> 00:22:24,840
don't do a full SPT we will do an

459
00:22:21,000 --> 00:22:26,790
incremental SPT so we will compute the

460
00:22:24,840 --> 00:22:29,159
graph only for the notes that have been

461
00:22:26,790 --> 00:22:31,200
impacted by<font color="#E5E5E5"> the failure so the 35</font>

462
00:22:29,160 --> 00:22:33,300
milliseconds by itself is also a

463
00:22:31,200 --> 00:22:38,040
worst-case and the relative will be

464
00:22:33,300 --> 00:22:40,220
<font color="#E5E5E5">better than this conclusion we have</font>

465
00:22:38,040 --> 00:22:43,080
presented test results that show that

466
00:22:40,220 --> 00:22:46,110
subseconds is is convergence is

467
00:22:43,080 --> 00:22:48,590
realistic as an is conservative and the

468
00:22:46,110 --> 00:22:51,929
<font color="#CCCCCC">technology has significantly improved</font>

469
00:22:48,590 --> 00:22:59,909
thanks<font color="#CCCCCC"> for</font><font color="#E5E5E5"> your attention any questions</font>

470
00:22:51,930 --> 00:23:02,570
welcome I have you done any lab testing

471
00:22:59,910 --> 00:23:05,060
looking at health us would work or

472
00:23:02,570 --> 00:23:08,010
benefit in cases of route redistribution

473
00:23:05,060 --> 00:23:11,580
so does incremental SPF provide a

474
00:23:08,010 --> 00:23:14,280
benefit if you dump 10,000 20,000

475
00:23:11,580 --> 00:23:16,350
100,000 routes into<font color="#E5E5E5"> the router to</font>

476
00:23:14,280 --> 00:23:18,360
letting it deal<font color="#E5E5E5"> with that gracefully you</font>

477
00:23:16,350 --> 00:23:20,909
know do some computation pass on the

478
00:23:18,360 --> 00:23:22,740
updates not get bogged down just doing

479
00:23:20,910 --> 00:23:27,510
you know an entire network recomputation

480
00:23:22,740 --> 00:23:32,850
for every update or so no<font color="#CCCCCC"> other reason</font>

481
00:23:27,510 --> 00:23:34,740
is that we have I would say 556 lead

482
00:23:32,850 --> 00:23:37,020
customers and so we focusing on the

483
00:23:34,740 --> 00:23:39,150
testing for for these customers also

484
00:23:37,020 --> 00:23:41,370
with the experience<font color="#E5E5E5"> of the type of</font>

485
00:23:39,150 --> 00:23:45,630
designs the design that you mentioned is

486
00:23:41,370 --> 00:23:48,840
very<font color="#E5E5E5"> rare to almost unknown for me so I</font>

487
00:23:45,630 --> 00:23:51,180
mean I<font color="#E5E5E5"> would be</font><font color="#CCCCCC"> interested to test it if</font>

488
00:23:48,840 --> 00:23:53,220
it becomes real but at this time i have

489
00:23:51,180 --> 00:23:54,840
not yet tested it<font color="#CCCCCC"> okay it doesn't happen</font>

490
00:23:53,220 --> 00:23:57,440
very often but<font color="#CCCCCC"> when</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> happens it's very</font>

491
00:23:54,840 --> 00:24:01,560
bad so yeah I'll pop you some email

492
00:23:57,440 --> 00:24:03,480
excellence yeah but it's also very good

493
00:24:01,560 --> 00:24:05,820
<font color="#E5E5E5">to have suggestion like this because we</font>

494
00:24:03,480 --> 00:24:08,480
learn a lot from any feedback so it's

495
00:24:05,820 --> 00:24:08,480
welcome I

496
00:24:09,370 --> 00:24:14,139
just had a kind of a related question I

497
00:24:10,720 --> 00:24:18,030
was<font color="#E5E5E5"> wondering if you had in your in your</font>

498
00:24:14,140 --> 00:24:21,610
in your study of the problem kind<font color="#E5E5E5"> of</font>

499
00:24:18,030 --> 00:24:24,639
built up any design guidelines for I I

500
00:24:21,610 --> 00:24:28,149
GPS kept if you want to build fast

501
00:24:24,640 --> 00:24:29,380
converging networks um I know<font color="#E5E5E5"> that the</font>

502
00:24:28,150 --> 00:24:30,580
reason I'm asking is because when I was

503
00:24:29,380 --> 00:24:31,750
when we were at sprint<font color="#CCCCCC"> and we were</font>

504
00:24:30,580 --> 00:24:34,679
driving a lot of this work<font color="#CCCCCC"> because</font><font color="#E5E5E5"> you</font>

505
00:24:31,750 --> 00:24:37,000
know well<font color="#CCCCCC"> now we found that some of the</font>

506
00:24:34,680 --> 00:24:40,030
<font color="#E5E5E5">Seraph fast convergence features weren't</font>

507
00:24:37,000 --> 00:24:41,950
really operative in our network like

508
00:24:40,030 --> 00:24:43,870
incremental SPF really didn't help

509
00:24:41,950 --> 00:24:46,679
sprint<font color="#CCCCCC"> like that much because of the</font>

510
00:24:43,870 --> 00:24:49,149
topology the<font color="#E5E5E5"> network and so forth so</font>

511
00:24:46,679 --> 00:24:52,420
have you have you<font color="#E5E5E5"> been able to distill</font>

512
00:24:49,150 --> 00:24:55,809
guidelines from that work yes actually

513
00:24:52,420 --> 00:24:59,910
so it's in two points there is a design

514
00:24:55,809 --> 00:25:02,800
guide that comes with this presentation

515
00:24:59,910 --> 00:25:05,220
it's based on all the work we have done

516
00:25:02,800 --> 00:25:08,200
and<font color="#E5E5E5"> the interaction on the different</font>

517
00:25:05,220 --> 00:25:09,940
design so that there is some mileage<font color="#E5E5E5"> or</font>

518
00:25:08,200 --> 00:25:11,920
experience behind the design guide and

519
00:25:09,940 --> 00:25:14,140
then the second point is that<font color="#CCCCCC"> an</font>

520
00:25:11,920 --> 00:25:15,940
incremental<font color="#E5E5E5"> SPF the benefit itself</font>

521
00:25:14,140 --> 00:25:18,880
indeed it's unknown it depends on the

522
00:25:15,940 --> 00:25:21,700
topology but in all the tests<font color="#E5E5E5"> that I</font>

523
00:25:18,880 --> 00:25:23,410
showed I never capitalized any benefit

524
00:25:21,700 --> 00:25:26,290
from incremental SPF I was always

525
00:25:23,410 --> 00:25:28,150
<font color="#E5E5E5">running a full SPF so if they would be</font>

526
00:25:26,290 --> 00:25:31,678
benefited with becoming on top of

527
00:25:28,150 --> 00:25:31,679
<font color="#CCCCCC">everything but it's not included</font>

528
00:25:34,080 --> 00:25:38,240
thank you<font color="#CCCCCC"> thank you</font>

