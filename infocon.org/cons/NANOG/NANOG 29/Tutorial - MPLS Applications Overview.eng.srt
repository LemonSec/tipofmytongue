1
00:00:00,000 --> 00:00:04,650
<font color="#CCCCCC">he is a uni-directional point-to-point</font>

2
00:00:01,920 --> 00:00:06,660
link in the link state database so that

3
00:00:04,650 --> 00:00:09,240
all<font color="#CCCCCC"> the routers can compute parts using</font>

4
00:00:06,660 --> 00:00:11,759
these LSP so that even a router such as

5
00:00:09,240 --> 00:00:19,230
a can take advantage<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the existence of</font>

6
00:00:11,759 --> 00:00:21,720
this LSP<font color="#E5E5E5"> in a network so let's take a</font>

7
00:00:19,230 --> 00:00:23,939
look at<font color="#E5E5E5"> the summary so far while have</font>

8
00:00:21,720 --> 00:00:26,580
<font color="#CCCCCC">you seen so far we've seen</font><font color="#E5E5E5"> that we can</font>

9
00:00:23,939 --> 00:00:29,250
load share traffic across paths with an

10
00:00:26,580 --> 00:00:32,640
equal cost this was the fish diagram

11
00:00:29,250 --> 00:00:34,680
where we established that the to LSPs

12
00:00:32,640 --> 00:00:36,989
<font color="#E5E5E5">one over the upper path and one over the</font>

13
00:00:34,680 --> 00:00:39,510
lowest lower path where<font color="#E5E5E5"> see SPF</font>

14
00:00:36,989 --> 00:00:41,610
naturally placed the two paths on

15
00:00:39,510 --> 00:00:43,680
distinct links because there was not

16
00:00:41,610 --> 00:00:46,320
enough bandwidth to satisfy both

17
00:00:43,680 --> 00:00:48,930
constraints we've seen<font color="#E5E5E5"> that we can</font>

18
00:00:46,320 --> 00:00:51,750
enable definition of flexible forwarding

19
00:00:48,930 --> 00:00:54,780
policies we saw<font color="#E5E5E5"> that if we wanted to we</font>

20
00:00:51,750 --> 00:00:56,519
could force the traffic from a to<font color="#E5E5E5"> take a</font>

21
00:00:54,780 --> 00:00:58,520
<font color="#CCCCCC">particular set of links and we could</font>

22
00:00:56,520 --> 00:01:01,620
force it to<font color="#CCCCCC"> always take the shortest the</font>

23
00:00:58,520 --> 00:01:03,930
<font color="#E5E5E5">shortest path in the network we've seen</font>

24
00:01:01,620 --> 00:01:07,110
<font color="#E5E5E5">that we can route primary pass away from</font>

25
00:01:03,930 --> 00:01:09,960
non bottlenecks or points of congestion

26
00:01:07,110 --> 00:01:12,090
this is the example with the bottle link

27
00:01:09,960 --> 00:01:14,639
where we saw that we move the traffic

28
00:01:12,090 --> 00:01:17,490
away from the bottleneck link<font color="#CCCCCC"> onto</font><font color="#E5E5E5"> links</font>

29
00:01:14,640 --> 00:01:19,200
where there was enough bandwidth finally

30
00:01:17,490 --> 00:01:21,990
we've seen how we can control<font color="#E5E5E5"> the path</font>

31
00:01:19,200 --> 00:01:25,080
that bgp traffic<font color="#CCCCCC"> transit traffic is</font>

32
00:01:21,990 --> 00:01:28,020
taking inside the domain and and in the

33
00:01:25,080 --> 00:01:29,970
end<font color="#E5E5E5"> we've seen that we can that we can</font>

34
00:01:28,020 --> 00:01:33,479
traffic engineer just<font color="#CCCCCC"> a portion</font><font color="#E5E5E5"> of our</font>

35
00:01:29,970 --> 00:01:35,658
<font color="#E5E5E5">network and</font><font color="#CCCCCC"> mix a</font><font color="#E5E5E5"> pass determined by IP</font>

36
00:01:33,479 --> 00:01:39,179
routing with past determined by

37
00:01:35,659 --> 00:01:41,939
constraint based routing so let's take a

38
00:01:39,180 --> 00:01:46,079
look at<font color="#CCCCCC"> a few other useful properties</font>

39
00:01:41,939 --> 00:01:47,789
for traffic engineering these are LSP

40
00:01:46,079 --> 00:01:50,880
priorities automatic bandwidth

41
00:01:47,790 --> 00:01:52,560
adjustment that path protection so let's

42
00:01:50,880 --> 00:01:56,039
<font color="#E5E5E5">take a look at the LSP priority and</font>

43
00:01:52,560 --> 00:01:58,320
preemption the idea is very simple some

44
00:01:56,040 --> 00:02:01,290
LSPs are more important<font color="#CCCCCC"> than others</font><font color="#E5E5E5"> and</font>

45
00:01:58,320 --> 00:02:04,048
can kick out the less important ones if

46
00:02:01,290 --> 00:02:07,259
there is<font color="#CCCCCC"> a resource contention well what</font>

47
00:02:04,049 --> 00:02:09,629
does it<font color="#E5E5E5"> mean it means two things first</font>

48
00:02:07,259 --> 00:02:11,879
of all if<font color="#CCCCCC"> there is a failure in my</font>

49
00:02:09,628 --> 00:02:13,170
<font color="#CCCCCC">network and now all of a sudden I have a</font>

50
00:02:11,879 --> 00:02:16,920
bunch of LSPs

51
00:02:13,170 --> 00:02:19,890
<font color="#CCCCCC">rowdy</font><font color="#E5E5E5"> and there's not enough resources</font>

52
00:02:16,920 --> 00:02:22,649
for all of them I can be sure that<font color="#CCCCCC"> the</font>

53
00:02:19,890 --> 00:02:25,200
important LSPs the LSPs that carry the

54
00:02:22,650 --> 00:02:27,690
important traffic are going to get<font color="#E5E5E5"> these</font>

55
00:02:25,200 --> 00:02:30,839
resources and who cares<font color="#E5E5E5"> what happens to</font>

56
00:02:27,690 --> 00:02:35,220
the other ones secondly what this

57
00:02:30,840 --> 00:02:37,890
ensures me is that my important LSPs are

58
00:02:35,220 --> 00:02:40,680
always going to<font color="#CCCCCC"> establish along the most</font>

59
00:02:37,890 --> 00:02:43,290
optimal paths in the network regardless

60
00:02:40,680 --> 00:02:45,930
in the order in which the LSPs come up

61
00:02:43,290 --> 00:02:49,530
the important ones are always going to

62
00:02:45,930 --> 00:02:53,120
take the shortest path so one thing to

63
00:02:49,530 --> 00:02:56,489
bear in mind about is<font color="#CCCCCC"> this</font><font color="#E5E5E5"> that all this</font>

64
00:02:53,120 --> 00:02:58,440
preemption thing happens at the time

65
00:02:56,489 --> 00:03:00,030
that the past is computed and set up

66
00:02:58,440 --> 00:03:03,120
it's not something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> happens at</font>

67
00:03:00,030 --> 00:03:06,239
forward in time now what does it<font color="#E5E5E5"> mean an</font>

68
00:03:03,120 --> 00:03:08,400
important LSP kicks out a less important

69
00:03:06,239 --> 00:03:11,010
one well it<font color="#CCCCCC"> means</font><font color="#E5E5E5"> exactly that it means</font>

70
00:03:08,400 --> 00:03:14,220
like<font color="#E5E5E5"> a very brutal thing I have an</font>

71
00:03:11,010 --> 00:03:17,209
important LSP coming along<font color="#CCCCCC"> that resource</font>

72
00:03:14,220 --> 00:03:19,739
contention with some<font color="#E5E5E5"> non important I</font>

73
00:03:17,209 --> 00:03:22,640
then<font color="#CCCCCC"> the non important guy is going</font><font color="#E5E5E5"> to</font>

74
00:03:19,739 --> 00:03:27,870
be kicked out of those links without any

75
00:03:22,640 --> 00:03:29,940
any kind<font color="#E5E5E5"> of advertisement towards the</font>

76
00:03:27,870 --> 00:03:32,940
head<font color="#CCCCCC"> end so there</font><font color="#E5E5E5"> is going to be traffic</font>

77
00:03:29,940 --> 00:03:36,390
<font color="#E5E5E5">laws on the less important LSP so</font>

78
00:03:32,940 --> 00:03:39,480
there's a<font color="#E5E5E5"> proposal in the ITF today to</font>

79
00:03:36,390 --> 00:03:41,548
do some kind of gentler approach to this

80
00:03:39,480 --> 00:03:44,429
preemption which is called soft

81
00:03:41,549 --> 00:03:47,250
preemption and at least allow the less

82
00:03:44,430 --> 00:03:51,560
important guy to rear out before it's

83
00:03:47,250 --> 00:03:55,470
being kicked out in such a nasty way

84
00:03:51,560 --> 00:04:00,239
second nice feature is auto bandwidth

85
00:03:55,470 --> 00:04:02,100
I've been talking<font color="#E5E5E5"> about bandwidth</font>

86
00:04:00,239 --> 00:04:04,109
constraints I need to establish a less

87
00:04:02,100 --> 00:04:05,400
<font color="#E5E5E5">peace with bandwidth constraints well</font>

88
00:04:04,109 --> 00:04:07,410
what if I have no<font color="#E5E5E5"> idea what the</font>

89
00:04:05,400 --> 00:04:09,840
bandwidth constraints are what if the

90
00:04:07,410 --> 00:04:12,359
bandwidth constraints change during<font color="#E5E5E5"> the</font>

91
00:04:09,840 --> 00:04:14,579
time of day so the<font color="#E5E5E5"> idea with auto</font>

92
00:04:12,359 --> 00:04:17,280
bandwidth is I'm going to<font color="#E5E5E5"> monitor the</font>

93
00:04:14,579 --> 00:04:19,320
traffic right on the LSP and I'm going

94
00:04:17,279 --> 00:04:23,099
to<font color="#E5E5E5"> resize the bandwidth on the LSP to</font>

95
00:04:19,320 --> 00:04:24,500
match what is actually going on so<font color="#E5E5E5"> this</font>

96
00:04:23,099 --> 00:04:26,539
may result in<font color="#CCCCCC"> the ls</font>

97
00:04:24,500 --> 00:04:29,090
rerouting but no one is the traffic

98
00:04:26,540 --> 00:04:35,060
flowing down the LSP we're not<font color="#E5E5E5"> going to</font>

99
00:04:29,090 --> 00:04:36,890
be<font color="#E5E5E5"> affected finally we'll talk about</font>

100
00:04:35,060 --> 00:04:41,570
pass<font color="#E5E5E5"> protection so there's a lot of</font>

101
00:04:36,890 --> 00:04:44,840
noise in mpls about traffic protection

102
00:04:41,570 --> 00:04:47,060
and one of the simplest mechanism for

103
00:04:44,840 --> 00:04:49,789
traffic protection is path protection

104
00:04:47,060 --> 00:04:52,490
the idea is we're going to protect an

105
00:04:49,790 --> 00:04:55,970
LSP by having an additional LSP set up

106
00:04:52,490 --> 00:04:58,190
in parallel to it is the second LSP is a

107
00:04:55,970 --> 00:05:02,270
secondary standby and it's going<font color="#E5E5E5"> to be</font>

108
00:04:58,190 --> 00:05:03,770
set up<font color="#CCCCCC"> and ready all the time to take</font>

109
00:05:02,270 --> 00:05:07,010
over the traffic in the case of a

110
00:05:03,770 --> 00:05:09,919
failure so the secondary standby is only

111
00:05:07,010 --> 00:05:11,960
used in the case of a failure and the

112
00:05:09,919 --> 00:05:16,099
picture looks something like this let's

113
00:05:11,960 --> 00:05:18,680
say<font color="#E5E5E5"> that I have a primary LSP between a</font>

114
00:05:16,100 --> 00:05:21,770
and C taking the path ABC and I have a

115
00:05:18,680 --> 00:05:24,430
secondary LSP taking some other distinct

116
00:05:21,770 --> 00:05:27,799
paths in the<font color="#E5E5E5"> network with the same</font>

117
00:05:24,430 --> 00:05:30,050
bandwidth reservation as the primary so

118
00:05:27,800 --> 00:05:32,150
the advantage is quite clear I have

119
00:05:30,050 --> 00:05:34,340
precise control over where<font color="#CCCCCC"> the traffic</font>

120
00:05:32,150 --> 00:05:36,950
goes in the case of a failure I know

121
00:05:34,340 --> 00:05:39,940
exactly<font color="#E5E5E5"> where it</font><font color="#CCCCCC"> go more than that I</font>

122
00:05:36,950 --> 00:05:42,680
have reserved enough bandwidth on the

123
00:05:39,940 --> 00:05:44,650
secondary standby path so I can be

124
00:05:42,680 --> 00:05:49,850
really sure that there's going<font color="#E5E5E5"> to be no</font>

125
00:05:44,650 --> 00:05:51,890
problems when my primary fails the

126
00:05:49,850 --> 00:05:53,840
second advantage is that<font color="#CCCCCC"> the secondary</font>

127
00:05:51,890 --> 00:05:58,300
standbys taking a diverse pass in the

128
00:05:53,840 --> 00:06:00,710
network that means I have very<font color="#E5E5E5"> little</font>

129
00:05:58,300 --> 00:06:03,050
<font color="#CCCCCC">chance that both the primary and the</font>

130
00:06:00,710 --> 00:06:05,390
secondary are going to fail the

131
00:06:03,050 --> 00:06:08,450
disadvantage that are also quite obvious

132
00:06:05,390 --> 00:06:12,520
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a quite wasteful approach to</font>

133
00:06:08,450 --> 00:06:15,440
doing to doing a backup because I'm I'm

134
00:06:12,520 --> 00:06:17,299
reserving resources for the backup but

135
00:06:15,440 --> 00:06:20,000
most of<font color="#E5E5E5"> the time these resources are not</font>

136
00:06:17,300 --> 00:06:22,910
used the second thing<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> we're</font>

137
00:06:20,000 --> 00:06:24,860
going<font color="#E5E5E5"> to build this secondary we're</font>

138
00:06:22,910 --> 00:06:27,680
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> build one secondary for every</font>

139
00:06:24,860 --> 00:06:30,229
pass that we protect so from the point

140
00:06:27,680 --> 00:06:33,110
of view of scaling this doesn't still

141
00:06:30,229 --> 00:06:36,050
very nicely and<font color="#E5E5E5"> thirdly and most</font>

142
00:06:33,110 --> 00:06:38,060
importantly the secondary standby is

143
00:06:36,050 --> 00:06:40,700
only going to kick in

144
00:06:38,060 --> 00:06:43,280
when the head and finds out<font color="#E5E5E5"> about the</font>

145
00:06:40,700 --> 00:06:45,560
failure now if the feeling happened

146
00:06:43,280 --> 00:06:47,450
somewhere in the middle of the LSP it

147
00:06:45,560 --> 00:06:49,100
may take<font color="#CCCCCC"> a while</font><font color="#E5E5E5"> until</font><font color="#CCCCCC"> the head and</font>

148
00:06:47,450 --> 00:06:55,430
figures out there was a failure in the

149
00:06:49,100 --> 00:06:58,700
path so the to take a step back let's

150
00:06:55,430 --> 00:07:01,220
see the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> applications that we've</font>

151
00:06:58,700 --> 00:07:03,860
seen so<font color="#CCCCCC"> far we've seen that</font><font color="#E5E5E5"> we can use</font>

152
00:07:01,220 --> 00:07:06,470
priority and preemption to ensure<font color="#CCCCCC"> that</font>

153
00:07:03,860 --> 00:07:08,930
the important traffic<font color="#E5E5E5"> always get the</font>

154
00:07:06,470 --> 00:07:11,720
optimal paths and always gets resources

155
00:07:08,930 --> 00:07:14,570
we've seen the feature of automatic

156
00:07:11,720 --> 00:07:17,600
bandwidth which allows bandwidth

157
00:07:14,570 --> 00:07:20,479
adjustment regardless of what<font color="#E5E5E5"> the rate</font>

158
00:07:17,600 --> 00:07:23,360
of the traffic actually is and finally

159
00:07:20,479 --> 00:07:26,479
we've seen pass protection which gives

160
00:07:23,360 --> 00:07:30,470
us precise control over how<font color="#E5E5E5"> a path is</font>

161
00:07:26,479 --> 00:07:37,669
rerouted in a case of failure other

162
00:07:30,470 --> 00:07:43,910
questions so far<font color="#E5E5E5"> okay so let's talk</font>

163
00:07:37,669 --> 00:07:46,609
<font color="#CCCCCC">about fast three realm so when I say</font>

164
00:07:43,910 --> 00:07:50,870
fast rear out what I'm<font color="#E5E5E5"> going to talk</font>

165
00:07:46,610 --> 00:07:52,729
about is<font color="#CCCCCC"> the general concept of fast</font>

166
00:07:50,870 --> 00:07:56,560
rear out and not the Juniper feature

167
00:07:52,729 --> 00:07:56,560
with that same name<font color="#CCCCCC"> okay</font>

168
00:08:00,470 --> 00:08:05,729
so as with traffic engineering the

169
00:08:03,060 --> 00:08:08,639
problem of fast realities is not not a

170
00:08:05,729 --> 00:08:12,060
new problem what happens is that<font color="#E5E5E5"> if</font>

171
00:08:08,639 --> 00:08:14,520
there is a<font color="#E5E5E5"> failure in a network it will</font>

172
00:08:12,060 --> 00:08:18,389
take<font color="#E5E5E5"> a while until the failure will be</font>

173
00:08:14,520 --> 00:08:21,030
<font color="#CCCCCC">detected and until everybody else will</font>

174
00:08:18,389 --> 00:08:23,310
find out about the failure<font color="#CCCCCC"> and recompute</font>

175
00:08:21,030 --> 00:08:25,280
their forwarding paths so in the

176
00:08:23,310 --> 00:08:29,120
meantime<font color="#E5E5E5"> the traffic is going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font>

177
00:08:25,280 --> 00:08:34,588
lost so the goal is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> minimize the time</font>

178
00:08:29,120 --> 00:08:35,940
that it that it takes the time during

179
00:08:34,589 --> 00:08:37,919
which there is packet loss during

180
00:08:35,940 --> 00:08:40,469
routing transients and there are two

181
00:08:37,919 --> 00:08:42,689
factors at play here first is<font color="#CCCCCC"> the time</font>

182
00:08:40,469 --> 00:08:44,880
to detect the failure<font color="#E5E5E5"> and it's going to</font>

183
00:08:42,690 --> 00:08:47,610
<font color="#E5E5E5">be the time it takes to detect</font><font color="#CCCCCC"> the link</font>

184
00:08:44,880 --> 00:08:50,520
down event all the times it takes to

185
00:08:47,610 --> 00:08:52,260
detect a link node event and second is

186
00:08:50,520 --> 00:08:53,819
<font color="#CCCCCC">the time that it</font><font color="#E5E5E5"> takes to distribute the</font>

187
00:08:52,260 --> 00:08:57,930
information about<font color="#E5E5E5"> the failure and</font>

188
00:08:53,820 --> 00:08:59,880
recompute forwarding tables so the

189
00:08:57,930 --> 00:09:03,380
<font color="#E5E5E5">problem with IP routing protocols is</font>

190
00:08:59,880 --> 00:09:06,990
that they are<font color="#E5E5E5"> distributed in nature so</font>

191
00:09:03,380 --> 00:09:09,630
it requires that all the routers in the

192
00:09:06,990 --> 00:09:12,470
network converge to a consistent view of

193
00:09:09,630 --> 00:09:14,730
the routing information before they can

194
00:09:12,470 --> 00:09:17,070
<font color="#CCCCCC">insure me that that there will be no</font>

195
00:09:14,730 --> 00:09:19,350
black<font color="#E5E5E5"> holding of traffic and no looping</font>

196
00:09:17,070 --> 00:09:21,420
of traffic so in a large network there

197
00:09:19,350 --> 00:09:25,040
may be convergence time on the order of

198
00:09:21,420 --> 00:09:29,130
a few seconds so what's the idea behind

199
00:09:25,040 --> 00:09:32,240
fast reader the idea is very simple the

200
00:09:29,130 --> 00:09:36,779
idea is well let's forget about

201
00:09:32,240 --> 00:09:39,690
convergence let's<font color="#E5E5E5"> just let let's just</font>

202
00:09:36,779 --> 00:09:42,240
have like a small goal in mind a very

203
00:09:39,690 --> 00:09:45,180
very modest<font color="#E5E5E5"> though all that I want to do</font>

204
00:09:42,240 --> 00:09:48,630
is take the traffic from one end of the

205
00:09:45,180 --> 00:09:50,609
failed link and Shepherd it around it on

206
00:09:48,630 --> 00:09:53,310
some alternate path to the other end of

207
00:09:50,610 --> 00:09:55,740
the failed link and I will patch in this

208
00:09:53,310 --> 00:09:59,729
way I will<font color="#E5E5E5"> patch the traffic on an honor</font>

209
00:09:55,740 --> 00:10:02,339
an alternate path and and prevent packet

210
00:09:59,730 --> 00:10:06,089
loss so this approach is a very very

211
00:10:02,339 --> 00:10:10,410
very local approach it protects a link

212
00:10:06,089 --> 00:10:12,329
or a node<font color="#CCCCCC"> in the network if you think</font>

213
00:10:10,410 --> 00:10:15,959
back of<font color="#CCCCCC"> the path protection</font>

214
00:10:12,329 --> 00:10:18,359
pass protection has big aspirations it

215
00:10:15,959 --> 00:10:20,309
wants to protect the entire path what

216
00:10:18,360 --> 00:10:22,499
<font color="#CCCCCC">first you notice it's like I want</font><font color="#E5E5E5"> to</font>

217
00:10:20,309 --> 00:10:24,809
protect<font color="#E5E5E5"> just a particular resource in in</font>

218
00:10:22,499 --> 00:10:27,480
the network a link or a known and let's

219
00:10:24,809 --> 00:10:31,488
talk about link protection only because

220
00:10:27,480 --> 00:10:31,489
it's conceptually easier to understand

221
00:10:31,579 --> 00:10:38,459
so what does<font color="#E5E5E5"> it look like it looks</font><font color="#CCCCCC"> like</font>

222
00:10:34,860 --> 00:10:41,129
this we have a link a B and we<font color="#CCCCCC"> have a</font>

223
00:10:38,459 --> 00:10:44,969
protection passed around the link a be

224
00:10:41,129 --> 00:10:47,429
let's taking some some other path in the

225
00:10:44,970 --> 00:10:51,559
network is going through a see through

226
00:10:47,429 --> 00:10:54,360
the path ACB so when the link a B fails

227
00:10:51,559 --> 00:10:56,399
what we're going to do is we're going to

228
00:10:54,360 --> 00:11:00,029
take<font color="#E5E5E5"> the traffic and forward it along</font>

229
00:10:56,399 --> 00:11:01,649
the<font color="#E5E5E5"> path ACB around the phase link we</font>

230
00:11:00,029 --> 00:11:04,649
will still have some traffic laws

231
00:11:01,649 --> 00:11:06,299
because we need to detect the failure

232
00:11:04,649 --> 00:11:08,819
and<font color="#CCCCCC"> then we</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> switch the traffic</font>

233
00:11:06,299 --> 00:11:10,709
over but we will have<font color="#E5E5E5"> much less traffic</font>

234
00:11:08,819 --> 00:11:14,248
laws than if we waited for<font color="#CCCCCC"> the whole</font>

235
00:11:10,709 --> 00:11:17,099
network to converge well so hey can we

236
00:11:14,249 --> 00:11:19,850
take this approach with IP let's take<font color="#CCCCCC"> a</font>

237
00:11:17,100 --> 00:11:22,889
look at the following example we have

238
00:11:19,850 --> 00:11:25,799
the link a B is the link that we want<font color="#E5E5E5"> to</font>

239
00:11:22,889 --> 00:11:31,019
protect<font color="#E5E5E5"> and we have traffic traversing</font>

240
00:11:25,799 --> 00:11:33,660
this link and<font color="#E5E5E5"> note a nose that traffic</font>

241
00:11:31,019 --> 00:11:36,779
<font color="#E5E5E5">destined to be should go over the link a</font>

242
00:11:33,660 --> 00:11:41,660
be and n<font color="#CCCCCC"> no they also knows that there</font>

243
00:11:36,779 --> 00:11:45,089
is<font color="#E5E5E5"> a protection path going along acdb</font>

244
00:11:41,660 --> 00:11:47,910
from<font color="#E5E5E5"> C's point of view however because</font>

245
00:11:45,089 --> 00:11:51,299
of the<font color="#E5E5E5"> way the matrix are set up in this</font>

246
00:11:47,910 --> 00:11:54,719
example<font color="#CCCCCC"> he thinks okay the best path to</font>

247
00:11:51,299 --> 00:11:58,249
forward traffic towards B is along the

248
00:11:54,720 --> 00:12:01,139
<font color="#CCCCCC">not Thrun all day along the</font><font color="#E5E5E5"> the link CA</font>

249
00:11:58,249 --> 00:12:03,689
so let's see what<font color="#E5E5E5"> happens now when the</font>

250
00:12:01,139 --> 00:12:06,720
link breaks when the link breaks ad text

251
00:12:03,689 --> 00:12:09,419
the link going down and start sending

252
00:12:06,720 --> 00:12:12,389
traffic to be traffic<font color="#E5E5E5"> destined to be</font>

253
00:12:09,419 --> 00:12:15,179
along the protection path so it sends

254
00:12:12,389 --> 00:12:17,220
the traffic to see see gets this traffic

255
00:12:15,179 --> 00:12:19,709
and starts making his own forwarding

256
00:12:17,220 --> 00:12:21,749
decision she<font color="#CCCCCC"> say oh</font><font color="#E5E5E5"> ok this is traffic</font>

257
00:12:19,709 --> 00:12:24,419
for<font color="#E5E5E5"> B let me forward it along the best</font>

258
00:12:21,749 --> 00:12:25,059
path to be and forward it right back to

259
00:12:24,419 --> 00:12:26,739
a

260
00:12:25,059 --> 00:12:29,409
so the traffic is<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> look between</font>

261
00:12:26,739 --> 00:12:31,359
these two guys until such time as he is

262
00:12:29,409 --> 00:12:35,709
going to<font color="#CCCCCC"> realize that all the link AV</font>

263
00:12:31,359 --> 00:12:37,439
went down and<font color="#E5E5E5"> takes a mother measure so</font>

264
00:12:35,709 --> 00:12:41,228
what's the problem<font color="#E5E5E5"> the</font><font color="#CCCCCC"> problem is that</font>

265
00:12:37,439 --> 00:12:43,839
that<font color="#E5E5E5"> C was making a an independent</font>

266
00:12:41,229 --> 00:12:46,569
decision on how<font color="#CCCCCC"> to do the forwarding on</font>

267
00:12:43,839 --> 00:12:49,449
the protection path so if<font color="#E5E5E5"> this is what</font>

268
00:12:46,569 --> 00:12:52,299
is foiling our scheme then we can

269
00:12:49,449 --> 00:12:55,179
remember<font color="#CCCCCC"> that in mpls we have the</font>

270
00:12:52,299 --> 00:12:57,939
coupling of<font color="#E5E5E5"> the forwarding decision from</font>

271
00:12:55,179 --> 00:13:01,779
the destination of the packet so let's

272
00:12:57,939 --> 00:13:04,299
try<font color="#E5E5E5"> to do the</font><font color="#CCCCCC"> same scheme with mpls so</font>

273
00:13:01,779 --> 00:13:06,759
the idea<font color="#E5E5E5"> with mpls is we're going to</font>

274
00:13:04,299 --> 00:13:10,509
protect to construct these protection

275
00:13:06,759 --> 00:13:13,109
LSPs along around the<font color="#E5E5E5"> point of failure</font>

276
00:13:10,509 --> 00:13:16,569
and then we're going to push the traffic

277
00:13:13,109 --> 00:13:18,399
that<font color="#CCCCCC"> was passing along the failed link</font>

278
00:13:16,569 --> 00:13:23,049
we're<font color="#E5E5E5"> going to push it on the protection</font>

279
00:13:18,399 --> 00:13:29,079
LSP so let's<font color="#E5E5E5"> look at the following the</font>

280
00:13:23,049 --> 00:13:31,509
example we have the LSP X Y and this LSP

281
00:13:29,079 --> 00:13:34,089
is crossing the link a be the link a B

282
00:13:31,509 --> 00:13:36,129
is the weakest link and we want to

283
00:13:34,089 --> 00:13:38,409
<font color="#CCCCCC">protect against failure of the link ap</font>

284
00:13:36,129 --> 00:13:42,069
so what we're going to do we're going to

285
00:13:38,409 --> 00:13:45,609
construct<font color="#E5E5E5"> the protection LSP a pink LSP</font>

286
00:13:42,069 --> 00:13:50,679
going around the link a be through the

287
00:13:45,609 --> 00:13:53,589
notes acdb so let's see what<font color="#CCCCCC"> the label</font>

288
00:13:50,679 --> 00:13:57,249
distribution looks like so we have the

289
00:13:53,589 --> 00:14:00,369
blue LSP the upper LSPs the original LSP

290
00:13:57,249 --> 00:14:03,639
<font color="#E5E5E5">des travaux sister Ling label</font>

291
00:14:00,369 --> 00:14:07,479
distribution happens as follows from the

292
00:14:03,639 --> 00:14:11,589
tail end why is advertising a pop Leibel

293
00:14:07,479 --> 00:14:14,909
to be<font color="#CCCCCC"> B's advertising label 100 and</font>

294
00:14:11,589 --> 00:14:19,739
installing forwarding state of pop 100

295
00:14:14,909 --> 00:14:23,889
is advertising a label 101 and

296
00:14:19,739 --> 00:14:27,369
installing forwarding state of swap 101

297
00:14:23,889 --> 00:14:31,539
to 100 and finally<font color="#E5E5E5"> X is going to install</font>

298
00:14:27,369 --> 00:14:34,209
forwarding state of push 101 similarly

299
00:14:31,539 --> 00:14:38,030
we are going to have similarly label

300
00:14:34,209 --> 00:14:41,540
distribution on the<font color="#E5E5E5"> pink LSP the</font>

301
00:14:38,030 --> 00:14:43,550
protection LSP below and i'm going<font color="#E5E5E5"> to</font>

302
00:14:41,540 --> 00:14:49,540
use labels in the range of 200 there

303
00:14:43,550 --> 00:14:53,240
just for the example so let's see how

304
00:14:49,540 --> 00:14:56,599
traffic is forwarding along the blue LSP

305
00:14:53,240 --> 00:15:01,190
when there is<font color="#CCCCCC"> no failure so traffic</font>

306
00:14:56,600 --> 00:15:04,940
arise at x axis pushing label 101<font color="#CCCCCC"> onto</font>

307
00:15:01,190 --> 00:15:08,810
the packet a labeled packet with label

308
00:15:04,940 --> 00:15:12,820
101 arrives at a a swaps label<font color="#CCCCCC"> 10 12</font>

309
00:15:08,810 --> 00:15:16,369
label 100 and sends it over to be

310
00:15:12,820 --> 00:15:19,280
finally be receives a packet with label

311
00:15:16,370 --> 00:15:25,550
100 pops that label and sends the packet

312
00:15:19,280 --> 00:15:30,110
to<font color="#E5E5E5"> Y so what needs to happen if I want</font>

313
00:15:25,550 --> 00:15:32,810
to<font color="#CCCCCC"> use this</font><font color="#E5E5E5"> same scheme and push the</font>

314
00:15:30,110 --> 00:15:35,690
traffic on the protection LSP if I could

315
00:15:32,810 --> 00:15:38,209
<font color="#CCCCCC">just trick this traffic to take the</font>

316
00:15:35,690 --> 00:15:41,570
protection LSP and there<font color="#E5E5E5"> I would not be</font>

317
00:15:38,210 --> 00:15:44,090
with the same label as if it was coming

318
00:15:41,570 --> 00:15:46,070
on the link I be then you wouldn't know

319
00:15:44,090 --> 00:15:49,880
<font color="#E5E5E5">the difference and I would just forward</font>

320
00:15:46,070 --> 00:15:53,420
as normally so what do i need to to<font color="#E5E5E5"> make</font>

321
00:15:49,880 --> 00:15:55,760
happen<font color="#E5E5E5"> in order to trick be and make</font>

322
00:15:53,420 --> 00:15:57,920
<font color="#CCCCCC">sure that the trafficker arrives to be</font>

323
00:15:55,760 --> 00:16:01,330
on the protection LSP with the same

324
00:15:57,920 --> 00:16:07,099
level what<font color="#E5E5E5"> I need to do is at node a I</font>

325
00:16:01,330 --> 00:16:09,470
will swap the label 1012 label 100 as I

326
00:16:07,100 --> 00:16:12,680
was doing before because I want labeled

327
00:16:09,470 --> 00:16:15,200
100 to show up on my packet so at some

328
00:16:12,680 --> 00:16:19,280
point later in the path but I will<font color="#E5E5E5"> also</font>

329
00:16:15,200 --> 00:16:22,040
push another label the label 201 that

330
00:16:19,280 --> 00:16:24,589
belongs to the protection LSP and then

331
00:16:22,040 --> 00:16:28,699
I'm going<font color="#CCCCCC"> to push the packet out of the</font>

332
00:16:24,590 --> 00:16:32,420
interface AC so let's see what<font color="#CCCCCC"> happens</font>

333
00:16:28,700 --> 00:16:35,210
in<font color="#CCCCCC"> the case of a link failure traffic</font>

334
00:16:32,420 --> 00:16:38,150
arrives from node X with label 101 as

335
00:16:35,210 --> 00:16:41,420
before now ain't knows that the link a<font color="#CCCCCC"> B</font>

336
00:16:38,150 --> 00:16:44,660
failed so what is going<font color="#E5E5E5"> to do is going</font>

337
00:16:41,420 --> 00:16:49,490
to swap level 10 12 labor 100 and push

338
00:16:44,660 --> 00:16:49,769
labor 201 and send it on the link AC now

339
00:16:49,490 --> 00:16:52,529
the

340
00:16:49,769 --> 00:16:54,989
<font color="#E5E5E5">a packet has a to label stack the</font>

341
00:16:52,529 --> 00:16:57,839
forwarding on the pink LSP on the

342
00:16:54,989 --> 00:17:01,470
protection path is going to happen based

343
00:16:57,839 --> 00:17:04,049
on the top label only so the label 201

344
00:17:01,470 --> 00:17:07,110
is going to be swapped to label 200 at

345
00:17:04,049 --> 00:17:09,779
node<font color="#E5E5E5"> D label 200 is going to be popped</font>

346
00:17:07,109 --> 00:17:11,969
and here<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> the packet arriving at</font>

347
00:17:09,779 --> 00:17:14,309
me with the same label as if it had

348
00:17:11,970 --> 00:17:17,990
arrived over the failing so b is going

349
00:17:14,309 --> 00:17:21,980
to take this traffic pop the label and

350
00:17:17,990 --> 00:17:26,390
pop the label and<font color="#E5E5E5"> send it to</font><font color="#CCCCCC"> why</font><font color="#E5E5E5"> so</font>

351
00:17:21,980 --> 00:17:30,270
<font color="#E5E5E5">what's so what's the difference</font><font color="#CCCCCC"> between</font>

352
00:17:26,390 --> 00:17:34,289
this example and the IP example that we

353
00:17:30,270 --> 00:17:35,940
saw before why is this working in this

354
00:17:34,289 --> 00:17:38,190
case and it wasn't<font color="#CCCCCC"> working then the</font>

355
00:17:35,940 --> 00:17:41,340
difference is that once I put the

356
00:17:38,190 --> 00:17:44,760
traffic on the protection LSP in this

357
00:17:41,340 --> 00:17:47,730
case the traffic of this the fate of

358
00:17:44,760 --> 00:17:51,090
this<font color="#E5E5E5"> traffic is sealed the packet is</font>

359
00:17:47,730 --> 00:17:53,700
going to have to come<font color="#CCCCCC"> out at to pop out</font>

360
00:17:51,090 --> 00:17:55,529
at the end<font color="#E5E5E5"> of the protection LSP and</font>

361
00:17:53,700 --> 00:17:57,720
there is nobody<font color="#E5E5E5"> in the path who's going</font>

362
00:17:55,529 --> 00:18:01,409
to<font color="#CCCCCC"> make any</font><font color="#E5E5E5"> kind of independent decision</font>

363
00:17:57,720 --> 00:18:03,480
of what to do with<font color="#CCCCCC"> it so let's take</font><font color="#E5E5E5"> a</font>

364
00:18:01,409 --> 00:18:05,179
step back<font color="#CCCCCC"> and look at</font><font color="#E5E5E5"> the same example</font>

365
00:18:03,480 --> 00:18:09,630
and see well what<font color="#E5E5E5"> if there was another</font>

366
00:18:05,179 --> 00:18:13,350
<font color="#E5E5E5">LSP a green LSP let's say again between</font>

367
00:18:09,630 --> 00:18:16,200
x and y that was also crossing the link

368
00:18:13,350 --> 00:18:19,918
a be good i'll use the same protection

369
00:18:16,200 --> 00:18:22,889
LSP to protect the traffic from the

370
00:18:19,919 --> 00:18:25,169
<font color="#E5E5E5">green LSP the answer is</font><font color="#CCCCCC"> yes there is not</font>

371
00:18:22,889 --> 00:18:28,110
nothing in this model to prevent me<font color="#CCCCCC"> from</font>

372
00:18:25,169 --> 00:18:30,000
doing so all that<font color="#CCCCCC"> i need to do is to</font>

373
00:18:28,110 --> 00:18:34,740
install the appropriate forward instead

374
00:18:30,000 --> 00:18:39,870
at a from the pink LSPs point of view he

375
00:18:34,740 --> 00:18:42,720
doesn't care how many<font color="#E5E5E5"> different LSPs are</font>

376
00:18:39,870 --> 00:18:47,070
encapsulated all that he does is it as

377
00:18:42,720 --> 00:18:50,279
forwarding based on the top labels so

378
00:18:47,070 --> 00:18:53,970
let's see what<font color="#E5E5E5"> we've seen so</font><font color="#CCCCCC"> far so far</font>

379
00:18:50,279 --> 00:18:56,130
we've seen<font color="#E5E5E5"> the example</font><font color="#CCCCCC"> of a of a link</font>

380
00:18:53,970 --> 00:19:00,350
protection we were<font color="#E5E5E5"> protecting the link a</font>

381
00:18:56,130 --> 00:19:03,049
be so first of all

382
00:19:00,350 --> 00:19:05,299
please note that the protection LSP was

383
00:19:03,049 --> 00:19:08,090
set up ahead<font color="#CCCCCC"> of time in our example we</font>

384
00:19:05,299 --> 00:19:10,520
showed that<font color="#CCCCCC"> the distribution of labels</font>

385
00:19:08,090 --> 00:19:12,289
for the protection LSP was happening at

386
00:19:10,520 --> 00:19:15,710
<font color="#CCCCCC">the same time that the</font><font color="#E5E5E5"> distribution of</font>

387
00:19:12,289 --> 00:19:17,690
label for the<font color="#E5E5E5"> primary LSP for the for a</font>

388
00:19:15,710 --> 00:19:19,549
blue LSP and this is pretty much what

389
00:19:17,690 --> 00:19:22,340
<font color="#E5E5E5">needs to be happen in order for this to</font>

390
00:19:19,549 --> 00:19:25,039
be meaningful because<font color="#E5E5E5"> if</font><font color="#CCCCCC"> I was to wait</font>

391
00:19:22,340 --> 00:19:27,530
until the failure was happening in order

392
00:19:25,039 --> 00:19:29,450
to start calculating the protection<font color="#CCCCCC"> path</font>

393
00:19:27,530 --> 00:19:32,139
<font color="#CCCCCC">and signaling the protection past all</font>

394
00:19:29,450 --> 00:19:35,450
this scheme would be quite meaningless

395
00:19:32,140 --> 00:19:37,880
second profit loss is still going<font color="#E5E5E5"> to</font>

396
00:19:35,450 --> 00:19:41,720
occur traffic laws it still occurs

397
00:19:37,880 --> 00:19:45,049
because there is a delay until a figures

398
00:19:41,720 --> 00:19:46,669
out that the link went down and then

399
00:19:45,049 --> 00:19:49,010
switches the traffic to the protection

400
00:19:46,669 --> 00:19:52,340
LSP now the question<font color="#E5E5E5"> is ourselves</font><font color="#CCCCCC"> so</font>

401
00:19:49,010 --> 00:19:55,158
what is the what is<font color="#E5E5E5"> the amount of time</font>

402
00:19:52,340 --> 00:19:57,110
that that we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> lose traffic so</font>

403
00:19:55,159 --> 00:19:59,510
for example in the Juniper

404
00:19:57,110 --> 00:20:02,449
implementation of<font color="#CCCCCC"> phosphorus rear out in</font>

405
00:19:59,510 --> 00:20:05,059
the normal day-to-day cases it can be

406
00:20:02,450 --> 00:20:07,400
<font color="#E5E5E5">done in 50 milliseconds including the</font>

407
00:20:05,059 --> 00:20:09,740
detection time so what you can see is

408
00:20:07,400 --> 00:20:13,630
that with this kind of scheme you can

409
00:20:09,740 --> 00:20:18,530
<font color="#E5E5E5">really achieve very very very short</font>

410
00:20:13,630 --> 00:20:20,600
amounts<font color="#CCCCCC"> of traffic laws thirdly the</font>

411
00:20:18,530 --> 00:20:22,970
intention<font color="#E5E5E5"> is to use</font><font color="#CCCCCC"> the protection LSP</font>

412
00:20:20,600 --> 00:20:25,340
for a short time until a new path will

413
00:20:22,970 --> 00:20:27,590
be recomputed clearly this protection

414
00:20:25,340 --> 00:20:32,360
path is not an optimal path in the

415
00:20:27,590 --> 00:20:34,070
network more than<font color="#E5E5E5"> that I also did I say</font>

416
00:20:32,360 --> 00:20:36,020
anything<font color="#CCCCCC"> about bandwidth protection</font>

417
00:20:34,070 --> 00:20:38,120
along that path I didn't<font color="#E5E5E5"> say anything</font><font color="#CCCCCC"> I</font>

418
00:20:36,020 --> 00:20:40,220
hammered for half an hour about<font color="#E5E5E5"> this</font>

419
00:20:38,120 --> 00:20:41,809
bandwidth constraints before but now I

420
00:20:40,220 --> 00:20:43,400
<font color="#CCCCCC">have the protection</font><font color="#E5E5E5"> pass I didn't say</font>

421
00:20:41,809 --> 00:20:45,678
anything<font color="#CCCCCC"> about one with protection on</font>

422
00:20:43,400 --> 00:20:48,289
that<font color="#E5E5E5"> but worse than that I said several</font>

423
00:20:45,679 --> 00:20:53,059
LSPs can use it if they're crossing the

424
00:20:48,289 --> 00:20:56,059
same link so clearly I can't be relying

425
00:20:53,059 --> 00:20:57,770
on this protection path for too long so

426
00:20:56,059 --> 00:20:59,899
the printer in the<font color="#CCCCCC"> case of link</font>

427
00:20:57,770 --> 00:21:03,080
protection the protection LSP protects a

428
00:20:59,900 --> 00:21:04,760
link the protection LSB signals around

429
00:21:03,080 --> 00:21:06,799
the protected link from the node

430
00:21:04,760 --> 00:21:09,408
upstream to the no doubt stream and it's

431
00:21:06,799 --> 00:21:12,470
done so ahead of time and traffic from

432
00:21:09,409 --> 00:21:13,610
one LSP or from many LSPs can be carried

433
00:21:12,470 --> 00:21:15,679
over

434
00:21:13,610 --> 00:21:19,520
this is different scaling<font color="#E5E5E5"> properties and</font>

435
00:21:15,679 --> 00:21:22,600
different trade-offs so in the example

436
00:21:19,520 --> 00:21:25,460
that we've seen several LSPs could share

437
00:21:22,600 --> 00:21:27,409
could share the protection path so this

438
00:21:25,460 --> 00:21:30,170
<font color="#E5E5E5">is very nice from a scaling point of</font>

439
00:21:27,410 --> 00:21:34,190
view on the other<font color="#E5E5E5"> hand I can't</font><font color="#CCCCCC"> guarantee</font>

440
00:21:30,170 --> 00:21:37,700
the bandwidth on that there is also<font color="#E5E5E5"> a</font>

441
00:21:34,190 --> 00:21:40,730
one-to-one scheme where the protection

442
00:21:37,700 --> 00:21:43,820
LSP only permits protecting one

443
00:21:40,730 --> 00:21:46,280
particular path so the<font color="#CCCCCC"> June the feature</font>

444
00:21:43,820 --> 00:21:49,389
that is called juniper ferry route is a

445
00:21:46,280 --> 00:21:52,340
one-to-one protection which also

446
00:21:49,390 --> 00:21:55,160
optionally offers bandwidth protection

447
00:21:52,340 --> 00:21:56,629
as well on the protection path well the

448
00:21:55,160 --> 00:21:59,600
feature that is called link node

449
00:21:56,630 --> 00:22:02,059
protection is a one-to-many scheme which

450
00:21:59,600 --> 00:22:04,879
gives you the advantages of scaling but

451
00:22:02,059 --> 00:22:09,110
does not offer any kind of bandwidth

452
00:22:04,880 --> 00:22:11,929
protection finally when we're talking

453
00:22:09,110 --> 00:22:16,219
<font color="#CCCCCC">about link protection and above pass</font>

454
00:22:11,929 --> 00:22:20,000
<font color="#CCCCCC">rira we're talking about RSVP really</font>

455
00:22:16,220 --> 00:22:22,040
<font color="#CCCCCC">it's RSVP LSPs all the standards</font><font color="#E5E5E5"> that</font>

456
00:22:20,000 --> 00:22:24,470
are defined today are defined for RSVP

457
00:22:22,040 --> 00:22:26,600
but if you take<font color="#E5E5E5"> a step back and</font><font color="#CCCCCC"> think of</font>

458
00:22:24,470 --> 00:22:28,669
<font color="#E5E5E5">the concept of taking the traffic and</font>

459
00:22:26,600 --> 00:22:30,889
<font color="#E5E5E5">putting it on the protection but you can</font>

460
00:22:28,669 --> 00:22:32,990
see<font color="#CCCCCC"> that this concept can be extended to</font>

461
00:22:30,890 --> 00:22:38,090
all kinds<font color="#CCCCCC"> of other things and there is</font>

462
00:22:32,990 --> 00:22:42,679
all kind of work in that direction so

463
00:22:38,090 --> 00:22:46,370
let's<font color="#E5E5E5"> take them summary of us</font><font color="#CCCCCC"> reira so</font>

464
00:22:42,679 --> 00:22:48,740
what we got now is the traffic laws has

465
00:22:46,370 --> 00:22:51,168
become a function of the link failure

466
00:22:48,740 --> 00:22:54,350
detection time rather than<font color="#E5E5E5"> being a</font>

467
00:22:51,169 --> 00:22:56,870
function of the head and rerouting or of

468
00:22:54,350 --> 00:22:59,360
the network converging secondly the

469
00:22:56,870 --> 00:23:01,668
protection LSP is intended for a very

470
00:22:59,360 --> 00:23:05,110
<font color="#CCCCCC">short amount of time</font><font color="#E5E5E5"> after the failure</font>

471
00:23:01,669 --> 00:23:08,030
so it's only intended<font color="#CCCCCC"> to be some kind of</font>

472
00:23:05,110 --> 00:23:10,699
temporary patching until the head and

473
00:23:08,030 --> 00:23:13,910
can recompute the path along some

474
00:23:10,700 --> 00:23:16,220
optimal path in the network and finally

475
00:23:13,910 --> 00:23:18,650
<font color="#E5E5E5">you can choose to protect just a few of</font>

476
00:23:16,220 --> 00:23:21,350
your<font color="#E5E5E5"> resources in the network so you can</font>

477
00:23:18,650 --> 00:23:23,480
choose to protect as many or as few of

478
00:23:21,350 --> 00:23:24,870
the resources<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you want now the</font>

479
00:23:23,480 --> 00:23:28,350
<font color="#E5E5E5">question that you will</font>

480
00:23:24,870 --> 00:23:31,649
may<font color="#E5E5E5"> ask is well can I use this kind of</font>

481
00:23:28,350 --> 00:23:33,840
scheme in conjunction with pass

482
00:23:31,650 --> 00:23:36,600
protection and the answer is yes of

483
00:23:33,840 --> 00:23:38,699
course there is in fact<font color="#E5E5E5"> when you do so</font>

484
00:23:36,600 --> 00:23:42,570
you achieve the best of both worlds

485
00:23:38,700 --> 00:23:44,430
because you can use the past<font color="#CCCCCC"> three route</font>

486
00:23:42,570 --> 00:23:47,639
scheme in order to patch the traffic

487
00:23:44,430 --> 00:23:50,100
quickly until the head and finds out

488
00:23:47,640 --> 00:23:52,559
<font color="#CCCCCC">about the failure</font><font color="#E5E5E5"> and then switch to the</font>

489
00:23:50,100 --> 00:23:55,409
secondary standby which gives you

490
00:23:52,559 --> 00:24:00,750
precise control over where your traffic

491
00:23:55,410 --> 00:24:10,440
<font color="#E5E5E5">is flowing other questions so far yes</font>

492
00:24:00,750 --> 00:24:13,230
please yeah<font color="#E5E5E5"> it's generated so so the</font>

493
00:24:10,440 --> 00:24:15,390
thing<font color="#CCCCCC"> is you you need to configure in</font>

494
00:24:13,230 --> 00:24:17,640
several places in<font color="#E5E5E5"> your config but it</font>

495
00:24:15,390 --> 00:24:20,820
will happen dynamically it's going to be

496
00:24:17,640 --> 00:24:22,590
<font color="#E5E5E5">generated dynamically so you have to</font>

497
00:24:20,820 --> 00:24:24,600
specify which link you want to protect

498
00:24:22,590 --> 00:24:26,428
or which resource you want to protect

499
00:24:24,600 --> 00:24:32,928
but from<font color="#CCCCCC"> that point on it's</font><font color="#E5E5E5"> going to</font>

500
00:24:26,429 --> 00:24:32,929
happen magically yeah

501
00:24:41,480 --> 00:24:49,500
yes of course<font color="#CCCCCC"> of course so the</font><font color="#E5E5E5"> question</font>

502
00:24:45,660 --> 00:24:52,110
was well the times that<font color="#E5E5E5"> I quoted is also</font>

503
00:24:49,500 --> 00:24:55,650
the 50 millisecond or so is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

504
00:24:52,110 --> 00:24:58,679
also the dependent on the detection time

505
00:24:55,650 --> 00:25:02,040
of the failure<font color="#E5E5E5"> detection time so of</font>

506
00:24:58,680 --> 00:25:04,650
course if the transport doesn't support

507
00:25:02,040 --> 00:25:11,540
some kind<font color="#E5E5E5"> of quick detection and I'm</font>

508
00:25:04,650 --> 00:25:11,540
<font color="#CCCCCC">hold pretty much any</font><font color="#E5E5E5"> other questions</font>

509
00:25:11,690 --> 00:25:20,240
<font color="#CCCCCC">okay then we</font><font color="#E5E5E5"> can carry</font><font color="#CCCCCC"> on to the next</font>

510
00:25:14,730 --> 00:25:24,360
<font color="#E5E5E5">section which is VPNs so VPNs is also</font>

511
00:25:20,240 --> 00:25:28,290
not a new concept VPNs existed long

512
00:25:24,360 --> 00:25:33,780
before mpls ever was around so what

513
00:25:28,290 --> 00:25:36,210
we're going to see now<font color="#CCCCCC"> is how how we can</font>

514
00:25:33,780 --> 00:25:41,700
use mpls to to improve the scalability

515
00:25:36,210 --> 00:25:44,790
of VPN so the reason<font color="#E5E5E5"> why VPNs existed</font>

516
00:25:41,700 --> 00:25:47,130
long before mpls ever came about is that

517
00:25:44,790 --> 00:25:50,159
the problem<font color="#E5E5E5"> that VPNs ours are solving</font>

518
00:25:47,130 --> 00:25:52,740
is a very old problem<font color="#E5E5E5"> basically what we</font>

519
00:25:50,160 --> 00:25:56,700
have is a company that has several sites

520
00:25:52,740 --> 00:25:58,830
in several separate geographic locations

521
00:25:56,700 --> 00:26:00,570
and it wants to achieve connectivity

522
00:25:58,830 --> 00:26:03,000
between them but it doesn't want to

523
00:26:00,570 --> 00:26:05,399
actually buy the links to connect<font color="#E5E5E5"> the</font>

524
00:26:03,000 --> 00:26:07,200
side so it wants to do so over some kind

525
00:26:05,400 --> 00:26:09,780
<font color="#E5E5E5">of shared infrastructure some kind of a</font>

526
00:26:07,200 --> 00:26:11,360
<font color="#E5E5E5">providers infrastructure on the other</font>

527
00:26:09,780 --> 00:26:14,250
<font color="#E5E5E5">hand it wants to achieve the same</font>

528
00:26:11,360 --> 00:26:16,919
guarantees as if it was a<font color="#CCCCCC"> private</font>

529
00:26:14,250 --> 00:26:18,990
network first I don't want to see

530
00:26:16,920 --> 00:26:21,990
anybody else's traffic in my<font color="#E5E5E5"> network and</font>

531
00:26:18,990 --> 00:26:25,410
I don't want my traffic god forbid to go

532
00:26:21,990 --> 00:26:27,660
into somebody else's network and second

533
00:26:25,410 --> 00:26:31,170
I want<font color="#E5E5E5"> to be able to use any kind of</font>

534
00:26:27,660 --> 00:26:32,850
addressing scheme I want internally so

535
00:26:31,170 --> 00:26:35,660
what does<font color="#CCCCCC"> it</font><font color="#E5E5E5"> look like the picture looks</font>

536
00:26:32,850 --> 00:26:38,219
like<font color="#E5E5E5"> this we have a few</font><font color="#CCCCCC"> different sides</font>

537
00:26:35,660 --> 00:26:40,080
and they're not interconnected between

538
00:26:38,220 --> 00:26:42,650
them and what we want<font color="#E5E5E5"> to do is we</font><font color="#CCCCCC"> want</font>

539
00:26:40,080 --> 00:26:45,928
to<font color="#E5E5E5"> achieve connectivity between them</font>

540
00:26:42,650 --> 00:26:47,910
across the providers networks so the

541
00:26:45,929 --> 00:26:51,690
first models of VPNs both

542
00:26:47,910 --> 00:26:54,950
early models where we<font color="#E5E5E5"> would actually do</font>

543
00:26:51,690 --> 00:26:57,840
physically what i just showed

544
00:26:54,950 --> 00:26:59,820
conceptually in the picture before so

545
00:26:57,840 --> 00:27:02,580
what we would<font color="#E5E5E5"> do is connect all these</font>

546
00:26:59,820 --> 00:27:06,090
sites with point-to-point links<font color="#CCCCCC"> frame</font>

547
00:27:02,580 --> 00:27:07,830
<font color="#CCCCCC">relay seconds ATM circuits whatever so</font>

548
00:27:06,090 --> 00:27:09,600
the customer routers would peer with

549
00:27:07,830 --> 00:27:12,149
other customer<font color="#E5E5E5"> enters at the end of</font>

550
00:27:09,600 --> 00:27:14,850
these<font color="#E5E5E5"> links</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> customer would run</font>

551
00:27:12,150 --> 00:27:16,830
its own routing and from the providers

552
00:27:14,850 --> 00:27:20,939
point of view he only provides the links

553
00:27:16,830 --> 00:27:23,879
but the provider needs to<font color="#E5E5E5"> give these</font>

554
00:27:20,940 --> 00:27:26,520
virtual backbones for all the customers

555
00:27:23,880 --> 00:27:29,280
at some point it becomes cumbersome to

556
00:27:26,520 --> 00:27:31,680
start<font color="#CCCCCC"> managing like all these virtual</font>

557
00:27:29,280 --> 00:27:37,560
networks on top of the providers

558
00:27:31,680 --> 00:27:41,130
<font color="#E5E5E5">networks so the goal of em of</font><font color="#CCCCCC"> BGP mpls</font>

559
00:27:37,560 --> 00:27:43,409
VPN is to solve the scaling issues with

560
00:27:41,130 --> 00:27:46,560
the previous model the goal is to

561
00:27:43,410 --> 00:27:49,590
support thousands of VPNs and VPNs with

562
00:27:46,560 --> 00:27:52,950
hundreds of sites / VPN and with

563
00:27:49,590 --> 00:27:56,220
overlapping address space so that there

564
00:27:52,950 --> 00:27:59,460
is no<font color="#E5E5E5"> requirement on the customer to use</font>

565
00:27:56,220 --> 00:28:01,650
any particular addressing this model is

566
00:27:59,460 --> 00:28:04,380
<font color="#E5E5E5">a peer model the customer routers pier</font>

567
00:28:01,650 --> 00:28:07,230
with with<font color="#E5E5E5"> the providers routers so let's</font>

568
00:28:04,380 --> 00:28:10,440
take<font color="#E5E5E5"> a look at the terminology for this</font>

569
00:28:07,230 --> 00:28:14,390
model so we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> three customer sites</font>

570
00:28:10,440 --> 00:28:19,070
and on each customer side there<font color="#E5E5E5"> is a</font>

571
00:28:14,390 --> 00:28:22,800
customer edge router which connects to a

572
00:28:19,070 --> 00:28:24,990
router on the provider side the customer

573
00:28:22,800 --> 00:28:27,990
edge router is called the<font color="#E5E5E5"> sea router and</font>

574
00:28:24,990 --> 00:28:30,450
the router on the provider edge is

575
00:28:27,990 --> 00:28:32,460
<font color="#E5E5E5">called the PE router now all the other</font>

576
00:28:30,450 --> 00:28:35,820
routers in the providers network are

577
00:28:32,460 --> 00:28:39,510
called the<font color="#CCCCCC"> P routers so what we have is</font>

578
00:28:35,820 --> 00:28:42,600
we<font color="#CCCCCC"> have C routers peering with PE</font>

579
00:28:39,510 --> 00:28:45,210
routers and they don't peel with other

580
00:28:42,600 --> 00:28:47,639
sea routers so the properties of<font color="#E5E5E5"> the</font>

581
00:28:45,210 --> 00:28:50,010
model are that we have C routers

582
00:28:47,640 --> 00:28:52,830
appearing with other<font color="#E5E5E5"> peer routers but</font>

583
00:28:50,010 --> 00:28:56,820
not with other sea routers and when

584
00:28:52,830 --> 00:28:59,340
adding or deleting a new side all that

585
00:28:56,820 --> 00:29:02,510
it means is we need<font color="#E5E5E5"> to configure the P</font>

586
00:28:59,340 --> 00:29:02,510
router connected to the

587
00:29:02,720 --> 00:29:07,399
finally we're<font color="#E5E5E5"> going to see at the end of</font>

588
00:29:05,039 --> 00:29:10,259
this section today that the P router

589
00:29:07,399 --> 00:29:14,908
only needs to maintain routes for VPNs

590
00:29:10,259 --> 00:29:18,090
whose<font color="#E5E5E5"> sites are directly connected so</font>

591
00:29:14,909 --> 00:29:20,519
rather<font color="#E5E5E5"> than presenting the entire</font>

592
00:29:18,090 --> 00:29:22,949
solution I'm<font color="#E5E5E5"> going to try to build it</font>

593
00:29:20,519 --> 00:29:24,509
here<font color="#E5E5E5"> step-by-step logically and then the</font>

594
00:29:22,950 --> 00:29:27,450
requirements are going to<font color="#E5E5E5"> become quite</font>

595
00:29:24,509 --> 00:29:32,220
apparent so let's take<font color="#E5E5E5"> a step back and</font>

596
00:29:27,450 --> 00:29:34,559
<font color="#E5E5E5">see what</font><font color="#CCCCCC"> were our goals our goals were</font>

597
00:29:32,220 --> 00:29:37,499
to have the same privacy guarantees as a

598
00:29:34,559 --> 00:29:39,330
private network that means I don't<font color="#E5E5E5"> want</font>

599
00:29:37,499 --> 00:29:41,639
the traffic from my VPN to go in

600
00:29:39,330 --> 00:29:42,809
somebody else's network and similarly I

601
00:29:41,639 --> 00:29:45,240
don't want to see somebody else's

602
00:29:42,809 --> 00:29:46,649
traffic in<font color="#CCCCCC"> my network so we're going</font><font color="#E5E5E5"> to</font>

603
00:29:45,240 --> 00:29:50,279
see how<font color="#CCCCCC"> this can be achieved with</font>

604
00:29:46,649 --> 00:29:52,768
separation of forwarding secondly what

605
00:29:50,279 --> 00:29:54,659
was the<font color="#E5E5E5"> the driver for all this I wanted</font>

606
00:29:52,769 --> 00:29:57,869
<font color="#E5E5E5">to achieve connectivity between my</font><font color="#CCCCCC"> sites</font>

607
00:29:54,659 --> 00:29:59,840
so we're going to see<font color="#E5E5E5"> how we we have we</font>

608
00:29:57,869 --> 00:30:02,299
achieved connectivity by doing

609
00:29:59,840 --> 00:30:07,408
<font color="#CCCCCC">distribution of routing information</font>

610
00:30:02,299 --> 00:30:09,929
thirdly we wanted to<font color="#E5E5E5"> have overlapping to</font>

611
00:30:07,409 --> 00:30:12,179
allow private address spaces for each

612
00:30:09,929 --> 00:30:14,039
one of<font color="#E5E5E5"> the VPNs and we're going to see</font>

613
00:30:12,179 --> 00:30:17,220
<font color="#E5E5E5">how this</font><font color="#CCCCCC"> is achieved with a new address</font>

614
00:30:14,039 --> 00:30:19,769
<font color="#E5E5E5">type and finally we want it to forward</font>

615
00:30:17,220 --> 00:30:21,299
traffic among these different sides so

616
00:30:19,769 --> 00:30:25,799
we're going<font color="#E5E5E5"> to see how this is achieved</font>

617
00:30:21,299 --> 00:30:28,918
with mpls so let's start with our first

618
00:30:25,799 --> 00:30:31,950
of all the<font color="#E5E5E5"> first goal was to achieve the</font>

619
00:30:28,919 --> 00:30:35,309
privacy of the traffic so we don't want

620
00:30:31,950 --> 00:30:37,830
to mix traffic from one VPN with traffic

621
00:30:35,309 --> 00:30:39,869
from another VPN so what we want to<font color="#E5E5E5"> do</font>

622
00:30:37,830 --> 00:30:42,110
is want to split the forwarding

623
00:30:39,869 --> 00:30:45,418
information if I had a PE router

624
00:30:42,110 --> 00:30:47,939
connected to seize from several VPNs if

625
00:30:45,419 --> 00:30:50,009
we put all the forwarding state in a

626
00:30:47,940 --> 00:30:52,200
single table then it would<font color="#CCCCCC"> be possible</font>

627
00:30:50,009 --> 00:30:55,440
to forward packets from one VPN to

628
00:30:52,200 --> 00:30:57,659
another so this is off by having

629
00:30:55,440 --> 00:31:00,929
multiple forwarding table and each table

630
00:30:57,659 --> 00:31:05,749
is associated with a particular site so

631
00:31:00,929 --> 00:31:08,460
packets from a customer are associated

632
00:31:05,749 --> 00:31:10,769
are associated<font color="#CCCCCC"> with the particular table</font>

633
00:31:08,460 --> 00:31:11,650
based on the<font color="#E5E5E5"> interfaces on which they</font>

634
00:31:10,769 --> 00:31:14,530
<font color="#CCCCCC">arrived</font>

635
00:31:11,650 --> 00:31:17,590
and the contents of these forwarding

636
00:31:14,530 --> 00:31:20,440
tables<font color="#CCCCCC"> are routes receives from the</font><font color="#E5E5E5"> sea</font>

637
00:31:17,590 --> 00:31:25,230
and also<font color="#E5E5E5"> out receive from the peak from</font>

638
00:31:20,440 --> 00:31:27,850
the remote Pease so let's see how

639
00:31:25,230 --> 00:31:31,960
routing information is distributed in

640
00:31:27,850 --> 00:31:34,990
this model so what's the idea we have

641
00:31:31,960 --> 00:31:38,350
the sea advertising routes who is local

642
00:31:34,990 --> 00:31:41,890
PE with some routing protocol or even

643
00:31:38,350 --> 00:31:44,740
with static routing so now the local p

644
00:31:41,890 --> 00:31:47,650
is going to take these routes mark them

645
00:31:44,740 --> 00:31:49,570
with some extended community and that

646
00:31:47,650 --> 00:31:51,160
ver ties them in BGP this extended

647
00:31:49,570 --> 00:31:56,560
community is actually what is called the

648
00:31:51,160 --> 00:31:59,350
<font color="#E5E5E5">route target in VPNs so now bgp is going</font>

649
00:31:56,560 --> 00:32:02,020
to take and advertise these routes with

650
00:31:59,350 --> 00:32:04,929
<font color="#CCCCCC">the route target to all the remote Pease</font>

651
00:32:02,020 --> 00:32:07,060
and the remote piece which receive these

652
00:32:04,930 --> 00:32:09,610
routes they filter them out based on the

653
00:32:07,060 --> 00:32:13,780
community<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> Verizon back to the</font>

654
00:32:09,610 --> 00:32:16,659
<font color="#CCCCCC">Seas so let's see an example of what's</font>

655
00:32:13,780 --> 00:32:19,629
<font color="#E5E5E5">going on let's say that we have to</font>

656
00:32:16,660 --> 00:32:23,080
customer sites so it one inside to and

657
00:32:19,630 --> 00:32:26,130
site one has roots in<font color="#CCCCCC"> the 10 1 / 16</font>

658
00:32:23,080 --> 00:32:31,149
range and side two has routes in the 10

659
00:32:26,130 --> 00:32:36,460
2 / 16 range so now see one is going<font color="#E5E5E5"> to</font>

660
00:32:31,150 --> 00:32:39,130
advertise route 10 10 1 / 16 to the<font color="#CCCCCC"> P</font>

661
00:32:36,460 --> 00:32:41,890
that's connected to it the P is going to

662
00:32:39,130 --> 00:32:44,800
attach a community let's say community

663
00:32:41,890 --> 00:32:48,940
green to it and<font color="#CCCCCC"> that will tells it to</font>

664
00:32:44,800 --> 00:32:51,909
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the other piece so now in in the BGP</font>

665
00:32:48,940 --> 00:32:54,460
advertisements we have 10 1 / 16

666
00:32:51,910 --> 00:32:56,470
community green thing to / 16 community

667
00:32:54,460 --> 00:32:59,800
green which would seem to<font color="#CCCCCC"> be all right</font>

668
00:32:56,470 --> 00:33:02,260
except if we had two more sites from a

669
00:32:59,800 --> 00:33:04,480
different customer from customer<font color="#CCCCCC"> gray</font>

670
00:33:02,260 --> 00:33:07,120
which was using the same<font color="#E5E5E5"> address space</font>

671
00:33:04,480 --> 00:33:09,310
the overlapping address space we will

672
00:33:07,120 --> 00:33:13,300
have a problem because<font color="#CCCCCC"> we would attempt</font>

673
00:33:09,310 --> 00:33:16,780
to advertise the same prefixes with

674
00:33:13,300 --> 00:33:21,220
different communities so the model so

675
00:33:16,780 --> 00:33:23,090
far that we've seen so<font color="#CCCCCC"> far we cannot we</font>

676
00:33:21,220 --> 00:33:25,740
have a problem we have to

677
00:33:23,090 --> 00:33:29,129
we have to have distinct address spaces

678
00:33:25,740 --> 00:33:37,500
for each for each one<font color="#CCCCCC"> of the customers</font>

679
00:33:29,130 --> 00:33:39,720
so in order to solve this we use a new

680
00:33:37,500 --> 00:33:42,510
address<font color="#E5E5E5"> type so the goal is</font><font color="#CCCCCC"> to turn</font>

681
00:33:39,720 --> 00:33:45,180
these non unique addresses into unique

682
00:33:42,510 --> 00:33:48,450
addresses and we do this by

683
00:33:45,180 --> 00:33:51,450
concatenating an IP address with an

684
00:33:48,450 --> 00:33:55,530
8-byte a unique identifier<font color="#CCCCCC"> which is</font>

685
00:33:51,450 --> 00:33:58,110
called<font color="#E5E5E5"> the route distinguisher so there</font>

686
00:33:55,530 --> 00:34:01,139
this new address type which is<font color="#E5E5E5"> called</font>

687
00:33:58,110 --> 00:34:03,629
<font color="#E5E5E5">the VPN IP address he's advertising a</font>

688
00:34:01,140 --> 00:34:05,730
special address family by<font color="#CCCCCC"> bgp and is</font>

689
00:34:03,630 --> 00:34:07,950
used only inside the providers network

690
00:34:05,730 --> 00:34:09,960
and used only in the control plane there

691
00:34:07,950 --> 00:34:12,510
is no forwarding based on these special

692
00:34:09,960 --> 00:34:14,909
addresses the translation between a

693
00:34:12,510 --> 00:34:17,700
normal IP address and the VPN IP address

694
00:34:14,909 --> 00:34:19,350
happens on the PE the see the customer

695
00:34:17,699 --> 00:34:21,270
doesn't<font color="#E5E5E5"> know anything about</font><font color="#CCCCCC"> these</font>

696
00:34:19,350 --> 00:34:24,239
addresses and never cares about them

697
00:34:21,270 --> 00:34:25,860
then the most important thing that<font color="#E5E5E5"> one</font>

698
00:34:24,239 --> 00:34:28,529
needs to<font color="#E5E5E5"> keep in mind</font><font color="#CCCCCC"> is that these are</font>

699
00:34:25,860 --> 00:34:31,020
all distinguishes are not used at all

700
00:34:28,530 --> 00:34:33,660
for out filtering we use the communities

701
00:34:31,020 --> 00:34:36,060
that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> target's to do that the route</font>

702
00:34:33,659 --> 00:34:38,790
distinguishes are only used in order<font color="#CCCCCC"> to</font>

703
00:34:36,060 --> 00:34:41,130
enable use of overlapping address space

704
00:34:38,790 --> 00:34:44,759
so let's<font color="#E5E5E5"> look at the same example as</font>

705
00:34:41,130 --> 00:34:47,850
before and let's see how the use of<font color="#CCCCCC"> brow</font>

706
00:34:44,760 --> 00:34:50,460
distinguishes fix the problem so we have

707
00:34:47,850 --> 00:34:53,029
the<font color="#E5E5E5"> green customer</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the gray customer</font>

708
00:34:50,460 --> 00:34:55,650
and they're using<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same address space</font>

709
00:34:53,030 --> 00:34:57,870
except now we attaching the route

710
00:34:55,650 --> 00:35:00,510
distinguisher to the address so inside

711
00:34:57,870 --> 00:35:04,020
<font color="#E5E5E5">the</font><font color="#CCCCCC"> BGP advertisements we have distinct</font>

712
00:35:00,510 --> 00:35:06,480
addresses being advertised<font color="#CCCCCC"> with the</font>

713
00:35:04,020 --> 00:35:09,930
respective communities and there is no

714
00:35:06,480 --> 00:35:12,990
problem<font color="#E5E5E5"> so now we can use overlapping</font>

715
00:35:09,930 --> 00:35:14,940
address spaces but we switch we

716
00:35:12,990 --> 00:35:17,879
exchanged<font color="#E5E5E5"> one problem for another</font>

717
00:35:14,940 --> 00:35:22,250
because now have no idea how to forward

718
00:35:17,880 --> 00:35:22,250
based on these kind<font color="#E5E5E5"> of weird addresses</font>

719
00:35:23,810 --> 00:35:32,060
so as we've seen<font color="#CCCCCC"> before what mpls does</font>

720
00:35:28,560 --> 00:35:35,009
it decouples the forwarding decision

721
00:35:32,060 --> 00:35:37,230
from the destination address so let's

722
00:35:35,010 --> 00:35:42,390
see how we can use mpls in order to do

723
00:35:37,230 --> 00:35:44,970
forwarding in this case so let's take a

724
00:35:42,390 --> 00:35:50,879
look<font color="#E5E5E5"> at the example here so we have a</font>

725
00:35:44,970 --> 00:35:54,140
<font color="#E5E5E5">customer in VPN green at site one who</font>

726
00:35:50,880 --> 00:35:57,300
wants to<font color="#E5E5E5"> send traffic to some</font>

727
00:35:54,140 --> 00:36:00,240
destination inside too so let's<font color="#E5E5E5"> say he</font>

728
00:35:57,300 --> 00:36:04,050
wants to send traffic to 10 to 11 inside

729
00:36:00,240 --> 00:36:06,930
too so the traffic arrives from c1 to p1

730
00:36:04,050 --> 00:36:09,570
and based on the interface over which

731
00:36:06,930 --> 00:36:13,080
this traffic arrives p one knows that

732
00:36:09,570 --> 00:36:15,150
this traffic belongs to VPN green so<font color="#CCCCCC"> it</font>

733
00:36:13,080 --> 00:36:18,180
goes ahead and looks inside the

734
00:36:15,150 --> 00:36:22,430
forwarding table for VPN green<font color="#CCCCCC"> and says</font>

735
00:36:18,180 --> 00:36:26,069
<font color="#E5E5E5">okay this is an an address in the 10th</font>

736
00:36:22,430 --> 00:36:28,649
to / 16 range<font color="#CCCCCC"> I know that that</font>

737
00:36:26,070 --> 00:36:31,680
advertisement came from P to let me

738
00:36:28,650 --> 00:36:34,940
forward this traffic to p2 now if there

739
00:36:31,680 --> 00:36:37,350
<font color="#CCCCCC">is a label switch path between p1 and p2</font>

740
00:36:34,940 --> 00:36:40,380
i'm going to just take the packet

741
00:36:37,350 --> 00:36:42,330
encapsulate it into mpls put the

742
00:36:40,380 --> 00:36:45,270
appropriate label of this label switch

743
00:36:42,330 --> 00:36:47,690
path and send it to be too and then p 2

744
00:36:45,270 --> 00:36:50,460
should<font color="#CCCCCC"> be able to figure out that this</font>

745
00:36:47,690 --> 00:36:54,390
traffic belongs to VPN green and send it

746
00:36:50,460 --> 00:36:56,970
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> right side</font><font color="#E5E5E5"> and this seems really</font>

747
00:36:54,390 --> 00:37:00,299
nice except if the picture was a little

748
00:36:56,970 --> 00:37:03,930
bit different what would<font color="#E5E5E5"> happen if now I</font>

749
00:37:00,300 --> 00:37:06,480
had two other sides from some other

750
00:37:03,930 --> 00:37:08,640
customer customer<font color="#CCCCCC"> gray connected to the</font>

751
00:37:06,480 --> 00:37:12,810
same piece let's see what will happen

752
00:37:08,640 --> 00:37:16,710
<font color="#CCCCCC">now</font><font color="#E5E5E5"> I would take the packet packet would</font>

753
00:37:12,810 --> 00:37:20,730
arrive from c1 2 p 1 over the interface

754
00:37:16,710 --> 00:37:22,380
that's connected to VPN green p one

755
00:37:20,730 --> 00:37:25,710
would know that it needs to look in the

756
00:37:22,380 --> 00:37:27,900
green in the green forwarding table to

757
00:37:25,710 --> 00:37:30,540
forward this packet and it would

758
00:37:27,900 --> 00:37:33,930
correctly decided needs to send it to<font color="#E5E5E5"> p2</font>

759
00:37:30,540 --> 00:37:35,720
<font color="#E5E5E5">the packet would travel across the label</font>

760
00:37:33,930 --> 00:37:40,279
switch path to<font color="#CCCCCC"> p2</font>

761
00:37:35,720 --> 00:37:42,379
and<font color="#E5E5E5"> arrive</font><font color="#CCCCCC"> at p 2 and p 2 what does it</font>

762
00:37:40,280 --> 00:37:45,560
do with it<font color="#CCCCCC"> now he has no idea does the</font>

763
00:37:42,380 --> 00:37:47,660
traffic belong to VPN green or to<font color="#E5E5E5"> VP and</font>

764
00:37:45,560 --> 00:37:52,430
<font color="#CCCCCC">gray the problem is that the traffic is</font>

765
00:37:47,660 --> 00:37:54,470
not marked<font color="#E5E5E5"> in any way we the traffic is</font>

766
00:37:52,430 --> 00:37:57,560
not identified in any way as belonging

767
00:37:54,470 --> 00:37:59,299
to a particular VPN in the<font color="#CCCCCC"> routing plane</font>

768
00:37:57,560 --> 00:38:02,540
we had these communities that would

769
00:37:59,300 --> 00:38:04,550
identify which VPN the router

770
00:38:02,540 --> 00:38:06,230
advertisements belong to in the

771
00:38:04,550 --> 00:38:09,619
forwarding plane we don't have<font color="#E5E5E5"> the</font>

772
00:38:06,230 --> 00:38:11,930
equivalent so the<font color="#E5E5E5"> idea is like</font><font color="#CCCCCC"> okay why</font>

773
00:38:09,619 --> 00:38:16,220
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> we use a label in order</font><font color="#CCCCCC"> to</font>

774
00:38:11,930 --> 00:38:18,348
identify the VPN let's see what would

775
00:38:16,220 --> 00:38:20,689
happen<font color="#CCCCCC"> if we had which could</font><font color="#E5E5E5"> have the</font>

776
00:38:18,349 --> 00:38:24,890
label<font color="#E5E5E5"> but first let's say let's say how</font>

777
00:38:20,690 --> 00:38:28,099
the label is advertised so the VPN label

778
00:38:24,890 --> 00:38:30,410
is going to be<font color="#E5E5E5"> distributed by BGP along</font>

779
00:38:28,099 --> 00:38:33,260
with a VPN IP address at the same time

780
00:38:30,410 --> 00:38:35,629
that the VPN IP address is advertised a

781
00:38:33,260 --> 00:38:37,670
label is going to be advertised<font color="#E5E5E5"> with it</font>

782
00:38:35,630 --> 00:38:40,640
and now the traffic<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to carry</font>

783
00:38:37,670 --> 00:38:44,210
two labels the VPN label and the LSP

784
00:38:40,640 --> 00:38:46,580
labor and the remote p is going to make

785
00:38:44,210 --> 00:38:51,260
<font color="#E5E5E5">the forwarding decision based on the VPN</font>

786
00:38:46,580 --> 00:38:56,630
<font color="#CCCCCC">labor so let's take</font><font color="#E5E5E5"> a look at the same</font>

787
00:38:51,260 --> 00:39:01,250
example using VPN labels so customer

788
00:38:56,630 --> 00:39:03,670
green is sending traffic to 10 to 11 p

789
00:39:01,250 --> 00:39:05,720
<font color="#CCCCCC">one already knows to look in the</font>

790
00:39:03,670 --> 00:39:08,510
forwarding table and he knows it needs

791
00:39:05,720 --> 00:39:11,270
to send<font color="#CCCCCC"> a traffic to p2 but it also</font>

792
00:39:08,510 --> 00:39:14,480
knows<font color="#CCCCCC"> that it needs to attach a VPN</font>

793
00:39:11,270 --> 00:39:17,540
green label to this trophy so now the

794
00:39:14,480 --> 00:39:19,880
traffic<font color="#CCCCCC"> is going to travel</font><font color="#E5E5E5"> along in the</font>

795
00:39:17,540 --> 00:39:22,880
network with a to label stack the inner

796
00:39:19,880 --> 00:39:25,310
level the bottom label is the VPN green

797
00:39:22,880 --> 00:39:27,950
label that identifies this traffic as

798
00:39:25,310 --> 00:39:30,290
belonging to VPN green the outermost

799
00:39:27,950 --> 00:39:34,730
label is the label<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the label switch</font>

800
00:39:30,290 --> 00:39:39,650
path between p1 and p2 so when it packet

801
00:39:34,730 --> 00:39:41,690
is is going along<font color="#E5E5E5"> the path this way the</font>

802
00:39:39,650 --> 00:39:43,880
forwarding is going to happen based on

803
00:39:41,690 --> 00:39:47,960
me along only<font color="#CCCCCC"> based on the uppermost</font>

804
00:39:43,880 --> 00:39:48,620
label so finally the packet is going to

805
00:39:47,960 --> 00:39:51,920
arrive<font color="#E5E5E5"> at</font>

806
00:39:48,620 --> 00:39:55,339
two with a VPN green label on the top

807
00:39:51,920 --> 00:39:58,040
and p2 has no trouble identifying that

808
00:39:55,340 --> 00:40:00,200
this is a packet testing for VPN green

809
00:39:58,040 --> 00:40:03,320
and send it out on the correct interface

810
00:40:00,200 --> 00:40:09,200
now what if we were receiving a packet

811
00:40:03,320 --> 00:40:12,230
on VPN<font color="#E5E5E5"> gray p1 would figure out that</font>

812
00:40:09,200 --> 00:40:13,669
this packet belongs to VPN<font color="#E5E5E5"> gray based on</font>

813
00:40:12,230 --> 00:40:16,460
the interface on which the packet

814
00:40:13,670 --> 00:40:19,490
arrived would put the<font color="#CCCCCC"> to</font><font color="#E5E5E5"> label stack on</font>

815
00:40:16,460 --> 00:40:21,680
<font color="#CCCCCC">the packet a VPN</font><font color="#E5E5E5"> gray label and then the</font>

816
00:40:19,490 --> 00:40:24,950
label<font color="#E5E5E5"> that's appropriate for the label</font>

817
00:40:21,680 --> 00:40:27,770
switch path between p1 and p2 the packet

818
00:40:24,950 --> 00:40:30,470
would arrive at p2 with a VPN<font color="#E5E5E5"> gray</font><font color="#CCCCCC"> label</font>

819
00:40:27,770 --> 00:40:37,840
and<font color="#CCCCCC"> Pete would have no trouble sending</font>

820
00:40:30,470 --> 00:40:41,959
it to<font color="#E5E5E5"> the correct c3 in VPN</font><font color="#CCCCCC"> gray so</font>

821
00:40:37,840 --> 00:40:46,220
another interesting thing that<font color="#CCCCCC"> we note</font>

822
00:40:41,960 --> 00:40:48,260
in this picture is that look at the 2p

823
00:40:46,220 --> 00:40:52,220
routers in the middle of the network

824
00:40:48,260 --> 00:40:55,730
here what is it these two<font color="#CCCCCC"> P routers need</font>

825
00:40:52,220 --> 00:40:58,069
to do they only need to do they only

826
00:40:55,730 --> 00:41:00,140
need to be<font color="#CCCCCC"> able to switch packets based</font>

827
00:40:58,070 --> 00:41:04,730
on labels they don't need to<font color="#E5E5E5"> know</font>

828
00:41:00,140 --> 00:41:07,100
anything<font color="#CCCCCC"> about VPN IP addresses they</font>

829
00:41:04,730 --> 00:41:12,650
don't need to<font color="#E5E5E5"> know anything about any of</font>

830
00:41:07,100 --> 00:41:14,540
the VPN routes in this network so this

831
00:41:12,650 --> 00:41:16,880
<font color="#CCCCCC">is a very important scaling property of</font>

832
00:41:14,540 --> 00:41:19,400
this<font color="#CCCCCC"> model the P routers don't have to</font>

833
00:41:16,880 --> 00:41:21,740
carry<font color="#E5E5E5"> all the VPN routes in the network</font>

834
00:41:19,400 --> 00:41:23,480
think about it if we had a single

835
00:41:21,740 --> 00:41:26,509
element in the network that would have

836
00:41:23,480 --> 00:41:28,550
to carry<font color="#E5E5E5"> all the VPN routes from all the</font>

837
00:41:26,510 --> 00:41:30,770
VPNs in the network this would<font color="#E5E5E5"> be the</font>

838
00:41:28,550 --> 00:41:32,290
scaling bottleneck of the system but the

839
00:41:30,770 --> 00:41:35,090
periodic don't have to know anything

840
00:41:32,290 --> 00:41:37,759
we're going<font color="#CCCCCC"> to see later that the PE</font>

841
00:41:35,090 --> 00:41:40,970
routers need to carry some VPN rods

842
00:41:37,760 --> 00:41:43,310
naturally but only for those VPNs for

843
00:41:40,970 --> 00:41:45,470
which they have sites attached so what

844
00:41:43,310 --> 00:41:47,630
we are going<font color="#CCCCCC"> to see is that no single</font>

845
00:41:45,470 --> 00:41:51,819
element in the network needs to carry

846
00:41:47,630 --> 00:41:51,820
all the VPN routes in the system

847
00:41:52,049 --> 00:41:58,349
so let's take<font color="#E5E5E5"> this</font><font color="#CCCCCC"> somebody so far the</font>

848
00:41:55,829 --> 00:42:00,949
bureau<font color="#CCCCCC"> tests don't need to maintain VPN</font>

849
00:41:58,349 --> 00:42:05,160
rels at all they only need to maintain

850
00:42:00,949 --> 00:42:07,769
routes to other<font color="#E5E5E5"> P&P routers the PE</font>

851
00:42:05,160 --> 00:42:09,719
routers need to maintain VPN routes but

852
00:42:07,769 --> 00:42:12,808
<font color="#E5E5E5">only for those VPNs that have sites</font>

853
00:42:09,719 --> 00:42:17,509
attached to them and finally VPNs can

854
00:42:12,809 --> 00:42:17,509
have overlapping address spaces yes

855
00:42:21,980 --> 00:42:27,900
throughout reflect<font color="#CCCCCC"> oh yes so the</font>

856
00:42:24,809 --> 00:42:30,930
<font color="#CCCCCC">question was well you have to have a</font>

857
00:42:27,900 --> 00:42:33,059
full mesh of<font color="#CCCCCC"> bgp connections between the</font>

858
00:42:30,930 --> 00:42:35,190
PE routers and that is correct but you

859
00:42:33,059 --> 00:42:44,030
can use the route reflectors to do that

860
00:42:35,190 --> 00:42:47,270
any other questions<font color="#E5E5E5"> ok so now let's take</font>

861
00:42:44,030 --> 00:42:52,319
so can I take this same concept and

862
00:42:47,270 --> 00:42:54,630
expand it from layer<font color="#CCCCCC"> 32 layer 2 there's</font>

863
00:42:52,319 --> 00:42:58,849
<font color="#E5E5E5">nothing in the model that I showed so</font>

864
00:42:54,630 --> 00:43:03,630
far that would prevent me from doing it

865
00:42:58,849 --> 00:43:08,790
so in the in the l3 VPN model what I had

866
00:43:03,630 --> 00:43:12,540
was that I had a remote piece advertised

867
00:43:08,790 --> 00:43:15,359
IP addresses and<font color="#E5E5E5"> VPN level what I can</font>

868
00:43:12,540 --> 00:43:18,470
have now happen is I can have the remote

869
00:43:15,359 --> 00:43:21,779
piece advertise later to information and

870
00:43:18,470 --> 00:43:23,819
VPN labels and what is going<font color="#E5E5E5"> to be the</font>

871
00:43:21,780 --> 00:43:27,079
end result of this is is that<font color="#E5E5E5"> I can</font>

872
00:43:23,819 --> 00:43:30,540
emulate a layer<font color="#CCCCCC"> to point-to-point</font>

873
00:43:27,079 --> 00:43:33,210
connection of MPLS Network and I can

874
00:43:30,540 --> 00:43:37,460
carry<font color="#CCCCCC"> PD use of layer two protocols over</font>

875
00:43:33,210 --> 00:43:41,460
mpls so let's see<font color="#CCCCCC"> what this looks like</font>

876
00:43:37,460 --> 00:43:44,579
let's take<font color="#E5E5E5"> a look at at an example with</font>

877
00:43:41,460 --> 00:43:47,010
with frame relay so let's<font color="#E5E5E5"> say that</font><font color="#CCCCCC"> I</font>

878
00:43:44,579 --> 00:43:49,140
have to cite cite one inside<font color="#CCCCCC"> to and</font>

879
00:43:47,010 --> 00:43:54,210
there's two frame relay connections a

880
00:43:49,140 --> 00:43:56,879
black one and the red one so what what p

881
00:43:54,210 --> 00:43:59,069
2 is going<font color="#E5E5E5"> to advertise is going to</font>

882
00:43:56,880 --> 00:44:04,020
advertise for each one of these two

883
00:43:59,069 --> 00:44:09,089
connections a VPN label and information

884
00:44:04,020 --> 00:44:13,079
l2 information that will allow p12 to

885
00:44:09,089 --> 00:44:16,920
map the traffic correctly to p2 so let's

886
00:44:13,079 --> 00:44:22,170
see<font color="#CCCCCC"> what happens when an l2 pdu is sent</font>

887
00:44:16,920 --> 00:44:26,690
from c1 2 p 1 so p1 is going to based on

888
00:44:22,170 --> 00:44:30,510
the dlci and interface p 1 is<font color="#E5E5E5"> going to</font>

889
00:44:26,690 --> 00:44:33,000
find out which<font color="#CCCCCC"> one is the VPN label and</font>

890
00:44:30,510 --> 00:44:35,160
which one is the p2 which we<font color="#E5E5E5"> need to</font>

891
00:44:33,000 --> 00:44:35,520
send this traffic and<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to put</font>

892
00:44:35,160 --> 00:44:37,440
the two

893
00:44:35,520 --> 00:44:39,930
label stock just like in<font color="#CCCCCC"> the layer three</font>

894
00:44:37,440 --> 00:44:42,120
example that we've seen before<font color="#E5E5E5"> so we're</font>

895
00:44:39,930 --> 00:44:45,299
going to<font color="#E5E5E5"> put a VPN label a black</font><font color="#CCCCCC"> v p.m.</font>

896
00:44:42,120 --> 00:44:48,509
neighbor and put it on<font color="#CCCCCC"> the LSP between</font>

897
00:44:45,300 --> 00:44:52,260
p1 and p2 the packet is going to<font color="#CCCCCC"> arrive</font>

898
00:44:48,510 --> 00:44:53,670
at p2 the VPN based on the VPN<font color="#E5E5E5"> label the</font>

899
00:44:52,260 --> 00:44:55,890
correct connection is going to be

900
00:44:53,670 --> 00:44:59,070
<font color="#CCCCCC">identified the packet is going to be</font>

901
00:44:55,890 --> 00:45:02,400
followed it again as<font color="#E5E5E5"> that l2 pdu to the</font>

902
00:44:59,070 --> 00:45:07,860
other side similarly<font color="#E5E5E5"> if we were sending</font>

903
00:45:02,400 --> 00:45:10,380
<font color="#E5E5E5">traffic on the on the red connection the</font>

904
00:45:07,860 --> 00:45:13,770
traffic would arrive at p1 p1 would

905
00:45:10,380 --> 00:45:16,080
identify<font color="#E5E5E5"> the correct VPN label to put</font>

906
00:45:13,770 --> 00:45:20,040
<font color="#E5E5E5">onto on top of this traffic and then</font>

907
00:45:16,080 --> 00:45:23,160
would send it on the LSP towards p 2

908
00:45:20,040 --> 00:45:27,480
with a to label style the traffic would

909
00:45:23,160 --> 00:45:30,600
arrive at p2 with a VPN label and based

910
00:45:27,480 --> 00:45:32,970
on the<font color="#CCCCCC"> VPN level it would be sending the</font>

911
00:45:30,600 --> 00:45:36,900
correct connection so what I haven't

912
00:45:32,970 --> 00:45:40,830
said is how is this layer to information

913
00:45:36,900 --> 00:45:45,210
<font color="#E5E5E5">advertised so there are two main the two</font>

914
00:45:40,830 --> 00:45:52,200
protocols available today one is the

915
00:45:45,210 --> 00:45:54,180
l2vpn compel a draft which uses<font color="#CCCCCC"> BGP in</font>

916
00:45:52,200 --> 00:45:57,210
order to advertise this layer to

917
00:45:54,180 --> 00:45:59,129
information in the network so similarly

918
00:45:57,210 --> 00:46:01,650
to what we've seen in the<font color="#E5E5E5"> layer 3</font>

919
00:45:59,130 --> 00:46:04,440
example we use a new address<font color="#E5E5E5"> family and</font>

920
00:46:01,650 --> 00:46:06,780
<font color="#CCCCCC">put in then all the information that we</font>

921
00:46:04,440 --> 00:46:09,930
need in order to do this the second

922
00:46:06,780 --> 00:46:11,970
draft is the martini draft that use

923
00:46:09,930 --> 00:46:15,299
extensions to<font color="#CCCCCC"> ldp in order to achieve</font>

924
00:46:11,970 --> 00:46:17,450
the same thing so the<font color="#CCCCCC"> LDP protocol is</font>

925
00:46:15,300 --> 00:46:19,940
extended and rather<font color="#E5E5E5"> than just</font>

926
00:46:17,450 --> 00:46:23,189
advertising labels for IP addresses

927
00:46:19,940 --> 00:46:24,980
<font color="#CCCCCC">advertise labels for for connection so</font>

928
00:46:23,190 --> 00:46:30,840
the martini drafts are now called the

929
00:46:24,980 --> 00:46:38,010
<font color="#CCCCCC">pee-wee drafts it's the pw</font><font color="#E5E5E5"> 3 working</font>

930
00:46:30,840 --> 00:46:40,040
<font color="#E5E5E5">group in the IDF so other questions so</font>

931
00:46:38,010 --> 00:46:40,040
far

932
00:46:41,160 --> 00:46:48,819
ok so we've reached the last part of<font color="#E5E5E5"> the</font>

933
00:46:45,130 --> 00:46:54,100
presentation which is a protocol

934
00:46:48,820 --> 00:46:57,010
comparison between<font color="#CCCCCC"> ldp and RSVP</font><font color="#E5E5E5"> so this</font>

935
00:46:54,100 --> 00:46:59,110
<font color="#E5E5E5">is like not</font><font color="#CCCCCC"> a discussion</font><font color="#E5E5E5"> on which</font>

936
00:46:57,010 --> 00:47:02,470
protocol is better it's rather

937
00:46:59,110 --> 00:47:06,100
discussion of well which protocol is

938
00:47:02,470 --> 00:47:10,390
applicable<font color="#CCCCCC"> to which kind of environment</font>

939
00:47:06,100 --> 00:47:12,490
so before we we start<font color="#E5E5E5"> doing that let's</font>

940
00:47:10,390 --> 00:47:16,470
make a shorter vision of the two

941
00:47:12,490 --> 00:47:18,970
protocols let's take<font color="#CCCCCC"> a look at</font><font color="#E5E5E5"> LEP first</font>

942
00:47:16,470 --> 00:47:22,480
so the most important thing that<font color="#E5E5E5"> one</font>

943
00:47:18,970 --> 00:47:25,470
needs<font color="#E5E5E5"> to remember about LEP is that</font><font color="#CCCCCC"> ldp</font>

944
00:47:22,480 --> 00:47:29,380
is not a routing protocol<font color="#CCCCCC"> ldp relies on</font>

945
00:47:25,470 --> 00:47:31,299
other routing protocols to make the

946
00:47:29,380 --> 00:47:34,720
forwarding decisions and to do the loop

947
00:47:31,300 --> 00:47:38,020
prevention and everything else<font color="#CCCCCC"> ldp</font>

948
00:47:34,720 --> 00:47:41,759
itself cannot do anything without

949
00:47:38,020 --> 00:47:46,660
relying on on another routing protocol

950
00:47:41,760 --> 00:47:48,970
the one thing that that derives from

951
00:47:46,660 --> 00:47:51,670
this is that<font color="#E5E5E5"> the LSPs that are</font>

952
00:47:48,970 --> 00:47:55,240
established<font color="#CCCCCC"> with ldp usually follow the</font>

953
00:47:51,670 --> 00:47:58,600
<font color="#CCCCCC">IGP shortest</font><font color="#E5E5E5"> path in the network the</font>

954
00:47:55,240 --> 00:48:00,459
label distribution is initiated from the

955
00:47:58,600 --> 00:48:03,040
<font color="#E5E5E5">endpoint and there is no concept of</font>

956
00:48:00,460 --> 00:48:06,610
<font color="#CCCCCC">ahead and requesting the establishment</font>

957
00:48:03,040 --> 00:48:11,259
of an LSP to the endpoint<font color="#E5E5E5"> and finally</font>

958
00:48:06,610 --> 00:48:16,080
all our label exchanges<font color="#E5E5E5"> our label</font>

959
00:48:11,260 --> 00:48:19,090
exchanges between<font color="#CCCCCC"> ldp</font><font color="#E5E5E5"> neighbors the</font>

960
00:48:16,080 --> 00:48:21,009
label exchanges are done with<font color="#CCCCCC"> TCP so</font>

961
00:48:19,090 --> 00:48:28,590
they are reliable and their incremental

962
00:48:21,010 --> 00:48:31,000
updates RSVP on the other hand is is<font color="#E5E5E5"> a</font>

963
00:48:28,590 --> 00:48:34,540
an<font color="#E5E5E5"> extension of the resource reservation</font>

964
00:48:31,000 --> 00:48:37,330
protocol it's got soft states it

965
00:48:34,540 --> 00:48:39,000
requires periodic refreshes and it

966
00:48:37,330 --> 00:48:42,430
creates points to point tunnels

967
00:48:39,000 --> 00:48:46,830
initiated at the head end so labels<font color="#E5E5E5"> are</font>

968
00:48:42,430 --> 00:48:50,410
only distributed along along these paths

969
00:48:46,830 --> 00:48:51,589
it supports explicit<font color="#E5E5E5"> pass so</font><font color="#CCCCCC"> we can set</font>

970
00:48:50,410 --> 00:48:54,140
<font color="#CCCCCC">up LSPs along</font>

971
00:48:51,589 --> 00:48:56,058
computed with<font color="#CCCCCC"> see SPF so we can take</font>

972
00:48:54,140 --> 00:48:58,190
into account bandwidth allocation and we

973
00:48:56,059 --> 00:49:02,109
can do constrained by routing traffic

974
00:48:58,190 --> 00:49:06,589
engineering stuff and very<font color="#E5E5E5"> very powerful</font>

975
00:49:02,109 --> 00:49:09,619
for RSVP RSVP supports fast restoration

976
00:49:06,589 --> 00:49:12,799
in case of failures so let's compare

977
00:49:09,619 --> 00:49:15,130
<font color="#E5E5E5">that</font><font color="#CCCCCC"> to so there</font><font color="#E5E5E5"> are three main fields</font>

978
00:49:12,799 --> 00:49:22,700
of comparison what's the ease of

979
00:49:15,130 --> 00:49:25,549
configuration so for for RSVP we need to

980
00:49:22,700 --> 00:49:27,769
configure the head end and we needed

981
00:49:25,549 --> 00:49:29,989
ahead and to say well who's the tail end

982
00:49:27,769 --> 00:49:32,660
of the LSP now if<font color="#E5E5E5"> I want to maintain a</font>

983
00:49:29,989 --> 00:49:34,759
full mesh of LSPs when I want to add a

984
00:49:32,660 --> 00:49:38,839
<font color="#E5E5E5">new other spit on the network I need to</font>

985
00:49:34,759 --> 00:49:42,289
know go and configure all the reverse

986
00:49:38,839 --> 00:49:44,989
path LSPs from all the other nodes so

987
00:49:42,289 --> 00:49:47,359
it's quite a considerable configuration

988
00:49:44,989 --> 00:49:50,200
button<font color="#CCCCCC"> ldp on the other hand if i wanna</font>

989
00:49:47,359 --> 00:49:53,538
add a new node in the network all<font color="#CCCCCC"> I do</font><font color="#E5E5E5"> I</font>

990
00:49:50,200 --> 00:49:55,460
put<font color="#CCCCCC"> it in I enable the protocol it will</font>

991
00:49:53,539 --> 00:49:57,650
automatically discover the neighbors it

992
00:49:55,460 --> 00:50:02,599
will automatically distribute labels and

993
00:49:57,650 --> 00:50:04,249
it will just work but hopefully secondly

994
00:50:02,599 --> 00:50:06,499
<font color="#E5E5E5">from the point of view of state</font>

995
00:50:04,249 --> 00:50:08,839
maintenance I don't want to get into the

996
00:50:06,499 --> 00:50:11,749
discussion<font color="#E5E5E5"> of soft state versus non-self</font>

997
00:50:08,839 --> 00:50:14,808
state but just<font color="#CCCCCC"> think about it this way</font><font color="#E5E5E5"> I</font>

998
00:50:11,749 --> 00:50:17,118
have to maintain either relationship

999
00:50:14,809 --> 00:50:20,960
with a<font color="#E5E5E5"> constant number of neighbors or I</font>

1000
00:50:17,119 --> 00:50:23,989
have to maintain state for some number

1001
00:50:20,960 --> 00:50:26,989
of tunnels and number<font color="#E5E5E5"> of tunnels where n</font>

1002
00:50:23,989 --> 00:50:30,559
is going<font color="#CCCCCC"> to grow every time I add a new</font>

1003
00:50:26,989 --> 00:50:36,640
node in the network so there is<font color="#CCCCCC"> a cost</font>

1004
00:50:30,559 --> 00:50:39,200
there too finally there is the issue of

1005
00:50:36,640 --> 00:50:42,200
<font color="#CCCCCC">ldp tracking the IGP state to determine</font>

1006
00:50:39,200 --> 00:50:45,859
forwarding state what this means<font color="#E5E5E5"> is that</font>

1007
00:50:42,200 --> 00:50:49,038
we have now two protocols going in

1008
00:50:45,859 --> 00:50:51,890
tandem so when you have two protocols

1009
00:50:49,039 --> 00:50:53,660
that need to go hand in hand that was

1010
00:50:51,890 --> 00:50:55,578
<font color="#E5E5E5">always going to be raised conditions and</font>

1011
00:50:53,660 --> 00:50:57,440
what is important<font color="#E5E5E5"> to understand here is</font>

1012
00:50:55,579 --> 00:50:59,930
that this is<font color="#E5E5E5"> not an implementation issue</font>

1013
00:50:57,440 --> 00:51:02,749
it's a protocol issue whenever you have

1014
00:50:59,930 --> 00:51:03,529
like a protocol defining a waiver where

1015
00:51:02,749 --> 00:51:05,839
he has to

1016
00:51:03,530 --> 00:51:07,340
and and and<font color="#E5E5E5"> work in conjunction with</font>

1017
00:51:05,840 --> 00:51:11,060
another protocol there's going to be

1018
00:51:07,340 --> 00:51:14,380
some some racing going<font color="#E5E5E5"> on so finally</font>

1019
00:51:11,060 --> 00:51:17,570
let's look at the applicability table

1020
00:51:14,380 --> 00:51:20,440
both of the P and RSVP<font color="#E5E5E5"> do label</font>

1021
00:51:17,570 --> 00:51:23,900
distribution and we can use both<font color="#CCCCCC"> of them</font>

1022
00:51:20,440 --> 00:51:27,710
in a VPN environment to establish the

1023
00:51:23,900 --> 00:51:30,080
path between the<font color="#CCCCCC"> peas now only RSVP has</font>

1024
00:51:27,710 --> 00:51:35,000
traffic engineering capabilities and

1025
00:51:30,080 --> 00:51:39,110
only RSVP has traffic protection and yes

1026
00:51:35,000 --> 00:51:41,720
crl DP was defined with traffic

1027
00:51:39,110 --> 00:51:43,880
engineering capabilities in mind but I'm

1028
00:51:41,720 --> 00:51:47,299
completely<font color="#E5E5E5"> ignoring</font><font color="#CCCCCC"> CR</font><font color="#E5E5E5"> LEP in these</font>

1029
00:51:43,880 --> 00:51:52,880
discussions in CR<font color="#CCCCCC"> ldp was abandoned that</font>

1030
00:51:47,300 --> 00:52:03,020
in the ITF as a standard so questions so

1031
00:51:52,880 --> 00:52:06,620
far so finally to conclude<font color="#E5E5E5"> is there are</font>

1032
00:52:03,020 --> 00:52:09,680
many more topics in mpls that we<font color="#E5E5E5"> haven't</font>

1033
00:52:06,620 --> 00:52:12,470
touched on<font color="#E5E5E5"> that's RSVP soft preemption</font>

1034
00:52:09,680 --> 00:52:14,330
does<font color="#E5E5E5"> leave serve tea which is a new</font>

1035
00:52:12,470 --> 00:52:17,029
topic on which there's now a lot of

1036
00:52:14,330 --> 00:52:19,490
<font color="#E5E5E5">activity in the ITF going on in the tea</font>

1037
00:52:17,030 --> 00:52:21,800
working group there's the question of

1038
00:52:19,490 --> 00:52:24,410
node protection which<font color="#E5E5E5"> I avoided</font>

1039
00:52:21,800 --> 00:52:28,010
completely doing the discussion of fast

1040
00:52:24,410 --> 00:52:31,609
reader very important there's a bunch of

1041
00:52:28,010 --> 00:52:35,540
drafts on graceful<font color="#CCCCCC"> restart which allows</font>

1042
00:52:31,610 --> 00:52:39,380
you to<font color="#CCCCCC"> to</font><font color="#E5E5E5"> quickly recover after a</font>

1043
00:52:35,540 --> 00:52:43,779
failure of<font color="#E5E5E5"> the control plane there is a</font>

1044
00:52:39,380 --> 00:52:47,810
<font color="#E5E5E5">very</font><font color="#CCCCCC"> large amount of work going</font><font color="#E5E5E5"> on for a</font>

1045
00:52:43,780 --> 00:52:50,600
ways to<font color="#E5E5E5"> detect failures of LSPs LSP ping</font>

1046
00:52:47,810 --> 00:52:55,460
is one of those mechanism there's a VC<font color="#E5E5E5"> C</font>

1047
00:52:50,600 --> 00:53:00,049
<font color="#E5E5E5">V in the</font><font color="#CCCCCC"> P working group and and other</font>

1048
00:52:55,460 --> 00:53:05,330
<font color="#E5E5E5">initiatives</font><font color="#CCCCCC"> BFD for mpls and so on VPNs</font>

1049
00:53:00,050 --> 00:53:09,980
we barely scratched the surface and the

1050
00:53:05,330 --> 00:53:13,310
vpls which is the same concept of which

1051
00:53:09,980 --> 00:53:15,240
allows you to establish<font color="#CCCCCC"> a virtual</font>

1052
00:53:13,310 --> 00:53:17,820
private land service

1053
00:53:15,240 --> 00:53:22,200
is a<font color="#E5E5E5"> very new thing and very exciting</font>

1054
00:53:17,820 --> 00:53:26,340
that's only now taking getting

1055
00:53:22,200 --> 00:53:29,100
acceleration so this<font color="#E5E5E5"> is all I had for</font>

1056
00:53:26,340 --> 00:53:32,540
today thank<font color="#E5E5E5"> you very</font><font color="#CCCCCC"> much if there are</font>

1057
00:53:29,100 --> 00:53:32,540
<font color="#E5E5E5">any questions I'll be happy to answer</font>

1058
00:53:32,660 --> 00:53:35,660
thank

