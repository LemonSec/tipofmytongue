1
00:00:00,110 --> 00:00:06,230
<font color="#E5E5E5">I'm jumping up a few layers probably</font>

2
00:00:03,030 --> 00:00:09,510
both compared<font color="#CCCCCC"> to</font><font color="#E5E5E5"> what you usually see</font>

3
00:00:06,230 --> 00:00:12,840
here at nanog and certainly compared to

4
00:00:09,510 --> 00:00:15,629
the other presentations today I what we

5
00:00:12,840 --> 00:00:19,500
were trying to<font color="#CCCCCC"> look at is mechanisms to</font>

6
00:00:15,630 --> 00:00:23,130
protect large scale your scale voice of

7
00:00:19,500 --> 00:00:25,519
IP systems I which can support hundreds

8
00:00:23,130 --> 00:00:28,890
of thousands to millions of subscribers

9
00:00:25,519 --> 00:00:30,929
primarily firm denial of service attacks

10
00:00:28,890 --> 00:00:33,450
but also from<font color="#E5E5E5"> other attacks like</font>

11
00:00:30,929 --> 00:00:36,420
flooding flooding and spoofing and other

12
00:00:33,450 --> 00:00:38,879
things the basic motivation is that most

13
00:00:36,420 --> 00:00:41,040
of the infrastructure<font color="#CCCCCC"> that we use today</font>

14
00:00:38,879 --> 00:00:44,940
particularly for voice of IP gateways

15
00:00:41,040 --> 00:00:48,200
into the PSTN how to secure because they

16
00:00:44,940 --> 00:00:51,390
don't<font color="#E5E5E5"> really have</font><font color="#CCCCCC"> a right knowledge to</font>

17
00:00:48,200 --> 00:00:54,449
distinguish a legitimate RTP packet for

18
00:00:51,390 --> 00:00:56,610
example from one which<font color="#CCCCCC"> is trying</font><font color="#E5E5E5"> to say</font>

19
00:00:54,449 --> 00:00:58,559
interrupt in existing conversations they

20
00:00:56,610 --> 00:01:01,590
all pretty much look the same and<font color="#E5E5E5"> since</font>

21
00:00:58,559 --> 00:01:03,449
we don't<font color="#E5E5E5"> have srtp we need to have other</font>

22
00:01:01,590 --> 00:01:07,439
entities in the<font color="#E5E5E5"> network to deal with</font>

23
00:01:03,449 --> 00:01:09,899
that so we're dealing<font color="#E5E5E5"> with</font><font color="#CCCCCC"> to denial of</font>

24
00:01:07,439 --> 00:01:12,270
service<font color="#CCCCCC"> sites we started out by looking</font>

25
00:01:09,900 --> 00:01:14,750
at RTP level denial of service plates

26
00:01:12,270 --> 00:01:18,119
and then we are currently<font color="#E5E5E5"> looking</font>

27
00:01:14,750 --> 00:01:21,840
specifically at sip level denial of

28
00:01:18,119 --> 00:01:24,119
service plates for the<font color="#CCCCCC"> RTP fight we are</font>

29
00:01:21,840 --> 00:01:27,470
primarily<font color="#E5E5E5"> concerned to make sure that</font>

30
00:01:24,119 --> 00:01:31,290
this large infrastructure so typically a

31
00:01:27,470 --> 00:01:33,780
large number of gateways way by tens

32
00:01:31,290 --> 00:01:36,990
hundreds possibly thousands of trunk

33
00:01:33,780 --> 00:01:39,720
circuits I which typically just<font color="#E5E5E5"> fairly</font>

34
00:01:36,990 --> 00:01:42,780
dumb mgcp type gateways<font color="#CCCCCC"> and does not</font>

35
00:01:39,720 --> 00:01:46,020
receive RTP traffic which does not have

36
00:01:42,780 --> 00:01:48,659
a corresponding session state again the

37
00:01:46,020 --> 00:01:51,479
primary concern<font color="#CCCCCC"> nia is that somebody</font>

38
00:01:48,659 --> 00:01:54,840
could essentially session hijack in some

39
00:01:51,479 --> 00:01:58,920
way what session<font color="#E5E5E5"> destroy by injecting</font>

40
00:01:54,840 --> 00:02:02,659
bogus RTP packets or other malformed or

41
00:01:58,920 --> 00:02:05,610
any packets into that cloud itself and

42
00:02:02,659 --> 00:02:08,580
traditional port level filtering<font color="#E5E5E5"> clearly</font>

43
00:02:05,610 --> 00:02:10,539
does not<font color="#E5E5E5"> work since RTP can appear on</font>

44
00:02:08,580 --> 00:02:13,790
<font color="#E5E5E5">any port I</font>

45
00:02:10,539 --> 00:02:15,350
across the UDP spectrum so we need to do

46
00:02:13,790 --> 00:02:18,049
<font color="#CCCCCC">something which is essentially a</font>

47
00:02:15,350 --> 00:02:21,019
stateful firewall just at a much much

48
00:02:18,050 --> 00:02:23,600
larger scale we have used a network

49
00:02:21,020 --> 00:02:25,760
processor to do that implementation

50
00:02:23,600 --> 00:02:29,090
which raises its own set of challenges

51
00:02:25,760 --> 00:02:32,690
and we'll<font color="#E5E5E5"> get</font><font color="#CCCCCC"> back to that one</font><font color="#E5E5E5"> of the</font>

52
00:02:29,090 --> 00:02:34,970
core issues I that goes along with this

53
00:02:32,690 --> 00:02:38,120
type of approach<font color="#E5E5E5"> is to make sure that</font>

54
00:02:34,970 --> 00:02:40,730
there are no voice cut offs in

55
00:02:38,120 --> 00:02:43,250
particular<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> a concern if you</font>

56
00:02:40,730 --> 00:02:46,429
have systems which are not fast enough

57
00:02:43,250 --> 00:02:49,400
<font color="#CCCCCC">you might actually do in get and gender</font>

58
00:02:46,430 --> 00:02:52,010
clipping we are the first parts of the

59
00:02:49,400 --> 00:02:54,020
hello when somebody answers is clipped

60
00:02:52,010 --> 00:02:55,880
simply because the firewall hasn't quite

61
00:02:54,020 --> 00:02:57,530
caught up with a new session yet and

62
00:02:55,880 --> 00:03:00,430
indeed we found in preliminary

63
00:02:57,530 --> 00:03:02,989
experiments that that was a real concern

64
00:03:00,430 --> 00:03:05,450
at the other level we also want to make

65
00:03:02,989 --> 00:03:08,060
sure<font color="#CCCCCC"> that infrastructure is protected</font>

66
00:03:05,450 --> 00:03:10,609
immediately<font color="#E5E5E5"> after the termination of a</font>

67
00:03:08,060 --> 00:03:13,220
session after a sip by so<font color="#CCCCCC"> that you do</font>

68
00:03:10,610 --> 00:03:17,840
not have bogus packets kind of having an

69
00:03:13,220 --> 00:03:21,230
avenue to do after that so we need to

70
00:03:17,840 --> 00:03:23,510
<font color="#E5E5E5">reduce attack traffic we can relatively</font>

71
00:03:21,230 --> 00:03:27,109
easily in this case erector perimeter

72
00:03:23,510 --> 00:03:29,480
fence because<font color="#E5E5E5"> I these are specialized</font>

73
00:03:27,110 --> 00:03:33,980
services<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> not a generic internet</font>

74
00:03:29,480 --> 00:03:36,340
internet style service we only expect

75
00:03:33,980 --> 00:03:38,798
certain services to be on<font color="#E5E5E5"> that network</font>

76
00:03:36,340 --> 00:03:41,209
you know and they're really I

77
00:03:38,799 --> 00:03:43,400
essentially three types of services that

78
00:03:41,209 --> 00:03:46,280
<font color="#CCCCCC">we have on that all of which</font><font color="#E5E5E5"> are attack</font>

79
00:03:43,400 --> 00:03:48,769
targets so reserva sip infrastructure

80
00:03:46,280 --> 00:03:50,630
elements themselves so epoxy sauce which

81
00:03:48,769 --> 00:03:52,940
is searching border control is all we

82
00:03:50,630 --> 00:03:55,489
have<font color="#CCCCCC"> a myriad of</font><font color="#E5E5E5"> SIP boxes that people</font>

83
00:03:52,940 --> 00:03:57,680
sell these days end points to some

84
00:03:55,489 --> 00:03:59,840
extent that's primarily true in a

85
00:03:57,680 --> 00:04:02,299
corporate environment for sip phones but

86
00:03:59,840 --> 00:04:04,730
for us<font color="#E5E5E5"> primarily gateways of a major</font>

87
00:04:02,299 --> 00:04:06,730
concern in terms of volume and clearly

88
00:04:04,730 --> 00:04:08,840
supporting services dns and<font color="#E5E5E5"> all that I</font>

89
00:04:06,730 --> 00:04:10,700
the<font color="#CCCCCC"> last one we don't worry too much</font>

90
00:04:08,840 --> 00:04:13,400
about the existing mechanisms protect

91
00:04:10,700 --> 00:04:17,659
<font color="#E5E5E5">bars so we need to solve a perimeter</font>

92
00:04:13,400 --> 00:04:19,640
protection problem I<font color="#E5E5E5"> primarily I for</font><font color="#CCCCCC"> v's</font>

93
00:04:17,660 --> 00:04:21,289
specialized services and we need<font color="#E5E5E5"> to be</font>

94
00:04:19,640 --> 00:04:23,440
protocol a way out at a fairly high

95
00:04:21,289 --> 00:04:23,440
level

96
00:04:23,550 --> 00:04:28,289
we need to verify that these systems a

97
00:04:25,710 --> 00:04:33,989
work and be fast enough not to induce

98
00:04:28,289 --> 00:04:36,509
clipping we want to also venues at<font color="#E5E5E5"> Ivy</font>

99
00:04:33,990 --> 00:04:38,129
Pacific<font color="#E5E5E5"> feds for that how do we detect</font>

100
00:04:36,509 --> 00:04:40,979
such an attack how do we mitigate

101
00:04:38,129 --> 00:04:45,090
attacks<font color="#E5E5E5"> and and how do can we validate</font>

102
00:04:40,979 --> 00:04:47,219
our strategy<font color="#E5E5E5"> or not and we also</font>

103
00:04:45,090 --> 00:04:50,159
hopefully can generate some requirements

104
00:04:47,220 --> 00:04:52,860
for future security elements one of the

105
00:04:50,159 --> 00:04:54,270
<font color="#E5E5E5">problems as a side note is I'm if you're</font>

106
00:04:52,860 --> 00:04:56,190
<font color="#E5E5E5">in this business you know there's a lot</font>

107
00:04:54,270 --> 00:04:58,409
<font color="#CCCCCC">of snake oil</font><font color="#E5E5E5"> being peddled in this</font>

108
00:04:56,190 --> 00:05:00,629
<font color="#E5E5E5">particular space there's a whole</font>

109
00:04:58,409 --> 00:05:03,449
industry that seems to<font color="#CCCCCC"> Quito to security</font>

110
00:05:00,629 --> 00:05:07,259
fears not all of<font color="#CCCCCC"> which is grounded in</font>

111
00:05:03,449 --> 00:05:12,509
either reality or<font color="#E5E5E5"> actually providing two</font>

112
00:05:07,259 --> 00:05:15,300
defenses so the basic problem overview

113
00:05:12,509 --> 00:05:18,270
here is that we have voice of IP traffic

114
00:05:15,300 --> 00:05:20,039
which is coming gold largely

115
00:05:18,270 --> 00:05:22,229
indistinguishable by looking at the

116
00:05:20,039 --> 00:05:24,539
packets they all look like<font color="#E5E5E5"> RTP packets</font>

117
00:05:22,229 --> 00:05:26,310
they all come<font color="#CCCCCC"> from sources</font><font color="#E5E5E5"> which you</font>

118
00:05:24,539 --> 00:05:28,560
could be potentially talking to since

119
00:05:26,310 --> 00:05:31,349
any IP phone on the planet could<font color="#CCCCCC"> be a</font>

120
00:05:28,560 --> 00:05:34,800
<font color="#E5E5E5">legitimate source and we now need to</font>

121
00:05:31,349 --> 00:05:39,449
<font color="#E5E5E5">have a I packet level filter mechanism</font>

122
00:05:34,800 --> 00:05:42,000
which uses a sip level of awareness to a

123
00:05:39,449 --> 00:05:44,610
steer and filter the good ones from the

124
00:05:42,000 --> 00:05:48,569
bad ones in<font color="#CCCCCC"> our architecture we use a</font>

125
00:05:44,610 --> 00:05:51,419
combination of two systems namely a deep

126
00:05:48,569 --> 00:05:53,039
packet inspection device which will be

127
00:05:51,419 --> 00:05:56,310
about<font color="#CCCCCC"> Oh bit more and little in a few</font>

128
00:05:53,039 --> 00:05:57,419
<font color="#CCCCCC">minutes and a standard sip proxy which</font>

129
00:05:56,310 --> 00:06:00,599
happens to be<font color="#CCCCCC"> in this particular</font>

130
00:05:57,419 --> 00:06:02,758
<font color="#E5E5E5">experiment sip tea which is a Columbia</font>

131
00:06:00,599 --> 00:06:04,590
University programmable sip proxy it's

132
00:06:02,759 --> 00:06:06,659
not anything that<font color="#E5E5E5"> special too bad it</font>

133
00:06:04,590 --> 00:06:08,878
just happens to<font color="#E5E5E5"> be more programmable</font>

134
00:06:06,659 --> 00:06:14,039
than Davos<font color="#E5E5E5"> and so it was relatively well</font>

135
00:06:08,879 --> 00:06:16,199
suited into that particular task we are

136
00:06:14,039 --> 00:06:19,940
in looking at a variety of sip I've

137
00:06:16,199 --> 00:06:22,229
level of threads and RTP level thirds I

138
00:06:19,940 --> 00:06:23,849
initially<font color="#E5E5E5"> asset we primarily look at RTP</font>

139
00:06:22,229 --> 00:06:28,169
we're currently looking at the sub level

140
00:06:23,849 --> 00:06:30,120
ones namely call hijacking so we call

141
00:06:28,169 --> 00:06:32,430
hijacking threads are typically

142
00:06:30,120 --> 00:06:35,050
registration hijacking somebody sends a

143
00:06:32,430 --> 00:06:38,110
bogus registration redirecting media

144
00:06:35,050 --> 00:06:40,690
some wells media session hijacking say

145
00:06:38,110 --> 00:06:43,569
bye we direction of existing session and

146
00:06:40,690 --> 00:06:45,940
serve emasculating<font color="#CCCCCC"> I'd i've</font><font color="#E5E5E5"> used by</font>

147
00:06:43,569 --> 00:06:50,319
somebody interposes<font color="#CCCCCC"> their server and</font>

148
00:06:45,940 --> 00:06:53,379
it's<font color="#CCCCCC"> AV a</font><font color="#E5E5E5"> gateway into the path of the</font>

149
00:06:50,319 --> 00:06:56,979
messages<font color="#CCCCCC"> alright then</font><font color="#E5E5E5"> we have a spoof</font>

150
00:06:53,379 --> 00:06:59,680
message problem in<font color="#E5E5E5"> particular one big</font>

151
00:06:56,979 --> 00:07:02,500
problem is fake call<font color="#CCCCCC"> tear down if you do</font>

152
00:06:59,680 --> 00:07:04,120
not have a sip level security mechanism

153
00:07:02,500 --> 00:07:06,520
which unfortunately most systems do not

154
00:07:04,120 --> 00:07:08,979
implement today it<font color="#E5E5E5"> is relatively easy</font>

155
00:07:06,520 --> 00:07:11,859
for an attacker to send a fake by

156
00:07:08,979 --> 00:07:14,560
request to your device and with a bit of

157
00:07:11,860 --> 00:07:16,000
guessing you again depending on how good

158
00:07:14,560 --> 00:07:19,479
be implementation is you can probably

159
00:07:16,000 --> 00:07:21,610
<font color="#E5E5E5">chat down an existing session and what</font>

160
00:07:19,479 --> 00:07:24,400
effect<font color="#E5E5E5"> response so for example you can</font>

161
00:07:21,610 --> 00:07:26,949
pretend that somebody is evil somewhere

162
00:07:24,400 --> 00:07:28,960
else<font color="#E5E5E5"> with a redirect response word</font><font color="#CCCCCC"> at</font>

163
00:07:26,949 --> 00:07:32,919
they are not<font color="#CCCCCC"> available at that</font>

164
00:07:28,960 --> 00:07:34,539
<font color="#E5E5E5">particular location at all I to some</font>

165
00:07:32,919 --> 00:07:37,479
extent we could also be concerned about

166
00:07:34,539 --> 00:07:40,029
malformed<font color="#CCCCCC"> requests that has not been our</font>

167
00:07:37,479 --> 00:07:42,490
focus right now about<font color="#E5E5E5"> falls ouch to some</font>

168
00:07:40,029 --> 00:07:44,590
extent as almost a natural thing in<font color="#E5E5E5"> the</font>

169
00:07:42,490 --> 00:07:48,490
sense that malformed requests will most

170
00:07:44,590 --> 00:07:50,739
likely not<font color="#E5E5E5"> set up a</font><font color="#CCCCCC"> pinhole at all so</font>

171
00:07:48,490 --> 00:07:53,319
<font color="#E5E5E5">that will be implicitly filtered and</font>

172
00:07:50,740 --> 00:07:56,289
clearly denial of service<font color="#CCCCCC"> request</font>

173
00:07:53,319 --> 00:07:58,240
flooding I can be both on users as well

174
00:07:56,289 --> 00:08:03,009
as from other end points as well<font color="#E5E5E5"> as</font>

175
00:07:58,240 --> 00:08:04,810
flooding the<font color="#E5E5E5"> core controller we believe</font>

176
00:08:03,009 --> 00:08:07,180
about implementation flaws of ultra be

177
00:08:04,810 --> 00:08:09,580
easier to<font color="#E5E5E5"> deal with</font><font color="#CCCCCC"> just putting a value</font>

178
00:08:07,180 --> 00:08:12,789
<font color="#E5E5E5">bus but fairly damp Rock seeing the path</font>

179
00:08:09,580 --> 00:08:14,529
will generally do<font color="#CCCCCC"> bad I put a</font><font color="#E5E5E5"> call and</font>

180
00:08:12,789 --> 00:08:16,029
flooding attacks are much harder to

181
00:08:14,529 --> 00:08:18,190
defend against because they're legit

182
00:08:16,029 --> 00:08:23,800
image you can't<font color="#E5E5E5"> just look at the syntax</font>

183
00:08:18,190 --> 00:08:25,599
and decider we have UDP flooding and<font color="#E5E5E5"> TCP</font>

184
00:08:23,800 --> 00:08:27,879
send type of flooding but we are<font color="#E5E5E5"> unaware</font>

185
00:08:25,599 --> 00:08:33,189
that is anything<font color="#E5E5E5"> which allows us to deal</font>

186
00:08:27,879 --> 00:08:36,279
with safe level flooding as I mentioned

187
00:08:33,190 --> 00:08:38,979
<font color="#E5E5E5">there variety of vulnerabilities here</font>

188
00:08:36,279 --> 00:08:41,380
that we need to deal with some<font color="#CCCCCC"> of you</font>

189
00:08:38,979 --> 00:08:43,690
simply<font color="#E5E5E5"> ditional ones for example is our</font>

190
00:08:41,380 --> 00:08:46,000
massive flooding where we<font color="#CCCCCC"> chinle send</font>

191
00:08:43,690 --> 00:08:47,480
hundreds of our messages to a particular

192
00:08:46,000 --> 00:08:49,970
destination

193
00:08:47,480 --> 00:08:51,949
or method vulnerabilities that I inject

194
00:08:49,970 --> 00:08:54,110
particular set methods which may not be

195
00:08:51,949 --> 00:08:56,599
recognized or may have harmful effect

196
00:08:54,110 --> 00:09:00,709
refers a particular example about where

197
00:08:56,600 --> 00:09:03,500
can redirect kind of sessions from where

198
00:09:00,709 --> 00:09:05,479
they're<font color="#E5E5E5"> supposed to be so we have new to</font>

199
00:09:03,500 --> 00:09:08,180
mitigation strategies a media where

200
00:09:05,480 --> 00:09:10,490
<font color="#CCCCCC">strategy which basically does dynamic</font>

201
00:09:08,180 --> 00:09:13,880
<font color="#CCCCCC">panel faltering based on a sip requests</font>

202
00:09:10,490 --> 00:09:17,810
and a wool based on detection mitigation

203
00:09:13,880 --> 00:09:20,959
<font color="#CCCCCC">force F itself so what should we do with</font>

204
00:09:17,810 --> 00:09:23,180
us I we implemented a large-scale

205
00:09:20,959 --> 00:09:25,550
separate where firewall I<font color="#CCCCCC"> where only</font>

206
00:09:23,180 --> 00:09:29,660
<font color="#E5E5E5">signal media channels controversy out in</font>

207
00:09:25,550 --> 00:09:33,349
<font color="#CCCCCC">a protective en system we also need to</font>

208
00:09:29,660 --> 00:09:35,240
protect the sip level I from asset level

209
00:09:33,350 --> 00:09:37,490
<font color="#E5E5E5">one we are currently implementing a</font>

210
00:09:35,240 --> 00:09:38,899
variety of tests about this ongoing work

211
00:09:37,490 --> 00:09:40,880
so we don't have measurements for that

212
00:09:38,899 --> 00:09:43,070
yet we have just an initial code I

213
00:09:40,880 --> 00:09:45,290
primarily<font color="#E5E5E5"> the one which we are looking</font>

214
00:09:43,070 --> 00:09:48,709
at is<font color="#E5E5E5"> we turn watch ability checks to</font>

215
00:09:45,290 --> 00:09:50,889
prevent spoofing I using but you built

216
00:09:48,709 --> 00:09:53,810
in sep digest mechanisms it has a

217
00:09:50,889 --> 00:09:55,910
rehabilitator a digest authentication

218
00:09:53,810 --> 00:09:57,920
even if you don't<font color="#E5E5E5"> have credentials can</font>

219
00:09:55,910 --> 00:09:59,810
turn an authentication which gives you

220
00:09:57,920 --> 00:10:02,589
even<font color="#E5E5E5"> for UDP which one what ability</font>

221
00:09:59,810 --> 00:10:04,699
check and a variety of weight limiting

222
00:10:02,589 --> 00:10:07,399
mechanisms which allows you to weight

223
00:10:04,699 --> 00:10:09,949
limit based on transactions on state

224
00:10:07,399 --> 00:10:12,440
machines and dialogues so we have an

225
00:10:09,949 --> 00:10:15,469
encoding mechanisms for these measured

226
00:10:12,440 --> 00:10:17,720
messages based on statistical historical

227
00:10:15,470 --> 00:10:20,029
information what is what a legitimate it

228
00:10:17,720 --> 00:10:22,399
is<font color="#E5E5E5"> unclear to us since there is not</font>

229
00:10:20,029 --> 00:10:24,829
fortunately a whole lot of statistical

230
00:10:22,399 --> 00:10:27,529
evidence yet as to what actual attacks

231
00:10:24,829 --> 00:10:29,479
look like in<font color="#E5E5E5"> that particular space as to</font>

232
00:10:27,529 --> 00:10:32,209
whether we will be seeing basically an

233
00:10:29,480 --> 00:10:34,339
army of baths which sent one request<font color="#CCCCCC"> a</font>

234
00:10:32,209 --> 00:10:36,199
<font color="#CCCCCC">day which</font><font color="#E5E5E5"> is very hard to detect over</font>

235
00:10:34,339 --> 00:10:39,769
classical massive denial of service

236
00:10:36,199 --> 00:10:41,329
attacks from a single source I we are

237
00:10:39,769 --> 00:10:42,279
currently focusing simply because that's

238
00:10:41,329 --> 00:10:48,199
the one which is<font color="#E5E5E5"> statistically</font>

239
00:10:42,279 --> 00:10:50,620
detectable on the ladder and then<font color="#E5E5E5"> I'll</font>

240
00:10:48,199 --> 00:10:54,229
switch over just briefly for we offer a

241
00:10:50,620 --> 00:10:56,000
system who's been doing the network

242
00:10:54,230 --> 00:11:03,980
processor module you understand

243
00:10:56,000 --> 00:11:06,880
I good<font color="#CCCCCC"> morning my name is</font><font color="#E5E5E5"> David Helms</font>

244
00:11:03,980 --> 00:11:09,020
part of the aspects of this project

245
00:11:06,880 --> 00:11:10,310
funded by Verizon was also using

246
00:11:09,020 --> 00:11:12,020
emerging deep packet inspection

247
00:11:10,310 --> 00:11:14,270
technologies for these types of

248
00:11:12,020 --> 00:11:15,920
applications and I was the consulting

249
00:11:14,270 --> 00:11:18,680
engineer from cloud<font color="#CCCCCC"> cell technologies to</font>

250
00:11:15,920 --> 00:11:21,290
implement the concepts and design as

251
00:11:18,680 --> 00:11:22,910
outlined by<font color="#E5E5E5"> Columbia so our</font>

252
00:11:21,290 --> 00:11:24,650
implementation actually utilizes a

253
00:11:22,910 --> 00:11:27,920
combination of deep packet inspection

254
00:11:24,650 --> 00:11:30,470
technologies as well<font color="#CCCCCC"> as application</font>

255
00:11:27,920 --> 00:11:36,939
level technologies based on the sip tea

256
00:11:30,470 --> 00:11:39,880
proxy<font color="#E5E5E5"> from</font><font color="#CCCCCC"> Columbia we</font><font color="#E5E5E5"> implement a</font>

257
00:11:36,940 --> 00:11:42,290
series of filters for a pinhole firewall

258
00:11:39,880 --> 00:11:43,730
where we can do<font color="#CCCCCC"> some static filtering</font>

259
00:11:42,290 --> 00:11:47,060
and some simple standard firewall

260
00:11:43,730 --> 00:11:50,780
filtering of<font color="#E5E5E5"> standard protocols but the</font>

261
00:11:47,060 --> 00:11:53,839
major design goal here was to<font color="#E5E5E5"> also</font>

262
00:11:50,780 --> 00:11:56,089
implement the ability for a standard sip

263
00:11:53,840 --> 00:11:58,790
proxy to signal to<font color="#CCCCCC"> a very high speed</font>

264
00:11:56,090 --> 00:12:00,950
firewall so that pin holes can be opened

265
00:11:58,790 --> 00:12:04,040
up dynamically and closed dynamically

266
00:12:00,950 --> 00:12:06,290
for RTP<font color="#E5E5E5"> and our TCP connections so that</font>

267
00:12:04,040 --> 00:12:14,510
<font color="#CCCCCC">we can respond dynamically to media</font>

268
00:12:06,290 --> 00:12:16,849
connections and allow them through the

269
00:12:14,510 --> 00:12:20,480
devices<font color="#E5E5E5"> uses the platform for this</font>

270
00:12:16,850 --> 00:12:22,310
particular activity was a casualty s2000

271
00:12:20,480 --> 00:12:26,240
and what it allows us<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> is actually</font>

272
00:12:22,310 --> 00:12:27,619
combine application technologies as<font color="#CCCCCC"> well</font>

273
00:12:26,240 --> 00:12:30,290
as our deep packet inspection

274
00:12:27,620 --> 00:12:31,850
technologies the application server

275
00:12:30,290 --> 00:12:34,189
module listed here essentially<font color="#E5E5E5"> think of</font>

276
00:12:31,850 --> 00:12:37,220
as a control plane in which the<font color="#CCCCCC"> sip tea</font>

277
00:12:34,190 --> 00:12:40,550
proxy is operating and interacting with

278
00:12:37,220 --> 00:12:42,290
<font color="#E5E5E5">sip sessions and then using a customized</font>

279
00:12:40,550 --> 00:12:44,540
protocol that was developed<font color="#CCCCCC"> at</font><font color="#E5E5E5"> Columbia</font>

280
00:12:42,290 --> 00:12:46,849
and an<font color="#E5E5E5"> API to our deep packet inspection</font>

281
00:12:44,540 --> 00:12:48,680
engines which<font color="#E5E5E5"> are listed as the</font><font color="#CCCCCC"> DP pm's</font>

282
00:12:46,850 --> 00:12:51,380
here we have two DP<font color="#CCCCCC"> PMS allow us to</font>

283
00:12:48,680 --> 00:12:54,099
<font color="#CCCCCC">actually do the the real time filtering</font>

284
00:12:51,380 --> 00:12:56,600
of traffic at very high data rates

285
00:12:54,100 --> 00:12:59,450
looking<font color="#E5E5E5"> inside the DP p.m. at its</font>

286
00:12:56,600 --> 00:13:01,820
architecture we use specific facilities

287
00:12:59,450 --> 00:13:04,760
that that we're<font color="#E5E5E5"> finding are optimized</font>

288
00:13:01,820 --> 00:13:07,100
<font color="#E5E5E5">for the deep packet inspection job first</font>

289
00:13:04,760 --> 00:13:09,740
of<font color="#E5E5E5"> all in the data plane what we have is</font>

290
00:13:07,100 --> 00:13:11,770
a multi-threaded parallel

291
00:13:09,740 --> 00:13:13,700
processor that allows<font color="#CCCCCC"> us to do</font>

292
00:13:11,770 --> 00:13:15,980
<font color="#E5E5E5">multi-threaded parallel processing of</font>

293
00:13:13,700 --> 00:13:17,720
the<font color="#E5E5E5"> packets themselves and along with</font>

294
00:13:15,980 --> 00:13:20,360
<font color="#CCCCCC">other facilities one including the</font>

295
00:13:17,720 --> 00:13:23,900
protocol engines which allows us to do

296
00:13:20,360 --> 00:13:26,420
very rapid packet classification the

297
00:13:23,900 --> 00:13:28,520
silicon database which allows us to if

298
00:13:26,420 --> 00:13:31,550
you think of it in a metaphor as a very

299
00:13:28,520 --> 00:13:34,010
high speed hardware-based SQL database

300
00:13:31,550 --> 00:13:35,870
<font color="#CCCCCC">it very</font><font color="#E5E5E5"> very close based upon camp</font>

301
00:13:34,010 --> 00:13:37,819
technology so the lookups are very quick

302
00:13:35,870 --> 00:13:39,170
which we're dealing the with the

303
00:13:37,820 --> 00:13:40,280
hundreds of thousands<font color="#CCCCCC"> of flows that</font>

304
00:13:39,170 --> 00:13:43,099
we're talking<font color="#E5E5E5"> about in this type of</font>

305
00:13:40,280 --> 00:13:45,920
implementation is very important we also

306
00:13:43,100 --> 00:13:47,810
<font color="#E5E5E5">utilized a regular</font><font color="#CCCCCC"> expression pattern</font>

307
00:13:45,920 --> 00:13:50,630
matching engine which<font color="#CCCCCC"> was critical for</font>

308
00:13:47,810 --> 00:13:52,640
us to be<font color="#E5E5E5"> able to actually scan the SIP</font>

309
00:13:50,630 --> 00:13:55,460
application payloads and<font color="#E5E5E5"> find the tokens</font>

310
00:13:52,640 --> 00:13:57,980
of interest as such as things as the

311
00:13:55,460 --> 00:14:00,800
call ID and various other tags inside

312
00:13:57,980 --> 00:14:02,960
the<font color="#CCCCCC"> SIP application payload we use that</font>

313
00:14:00,800 --> 00:14:05,540
in conjunction with the silicon database

314
00:14:02,960 --> 00:14:07,840
to build an ongoing session state

315
00:14:05,540 --> 00:14:10,400
machine for all the<font color="#CCCCCC"> sip conversations</font>

316
00:14:07,840 --> 00:14:12,620
which we use them to identify whether we

317
00:14:10,400 --> 00:14:17,180
have any state violations for a session

318
00:14:12,620 --> 00:14:19,030
and to do any identification of various

319
00:14:17,180 --> 00:14:21,650
call<font color="#CCCCCC"> states for</font><font color="#E5E5E5"> rate-limiting as well</font>

320
00:14:19,030 --> 00:14:24,800
and then stream reassembly we use on a

321
00:14:21,650 --> 00:14:27,020
sporadic basis basically to use and to

322
00:14:24,800 --> 00:14:29,900
do fragment reassembly when warranted in

323
00:14:27,020 --> 00:14:32,930
order to support<font color="#CCCCCC"> this application what</font>

324
00:14:29,900 --> 00:14:37,490
we did<font color="#E5E5E5"> was we also built and designed a</font>

325
00:14:32,930 --> 00:14:39,199
custom protocol for the<font color="#E5E5E5"> sip</font><font color="#CCCCCC"> tea proxy to</font>

326
00:14:37,490 --> 00:14:41,750
communicate with<font color="#E5E5E5"> the deep packet</font>

327
00:14:39,200 --> 00:14:44,180
inspection directly and so we built a

328
00:14:41,750 --> 00:14:45,980
custom<font color="#E5E5E5"> API that integrates the sip tea</font>

329
00:14:44,180 --> 00:14:47,660
proxy with the deep packet inspection

330
00:14:45,980 --> 00:14:52,550
engine and that was the<font color="#E5E5E5"> actual</font>

331
00:14:47,660 --> 00:14:54,170
implementation of this solution thank

332
00:14:52,550 --> 00:14:58,519
you

333
00:14:54,170 --> 00:15:02,240
so I I think we covered most of that I

334
00:14:58,519 --> 00:15:04,910
so the pinhole components static

335
00:15:02,240 --> 00:15:08,389
filtering dynamic filtering I when<font color="#CCCCCC"> it is</font>

336
00:15:04,910 --> 00:15:11,779
<font color="#E5E5E5">a necessary and then switching between</font>

337
00:15:08,389 --> 00:15:14,089
really reports as necessary so<font color="#CCCCCC"> that's</font>

338
00:15:11,779 --> 00:15:17,120
done the data plane and in reliable

339
00:15:14,089 --> 00:15:19,519
control module intercept<font color="#CCCCCC"> setup messages</font>

340
00:15:17,120 --> 00:15:22,339
and then needs to do with<font color="#CCCCCC"> in a microwave</font>

341
00:15:19,519 --> 00:15:26,029
in a few milliseconds to modify the

342
00:15:22,339 --> 00:15:29,300
configuration of<font color="#CCCCCC"> a firewall</font><font color="#E5E5E5"> and both on</font>

343
00:15:26,029 --> 00:15:31,370
me<font color="#CCCCCC"> set up pod and booty don't plug so we</font>

344
00:15:29,300 --> 00:15:33,439
have to essentially have a highly agile

345
00:15:31,370 --> 00:15:39,529
a firewall mechanism which most existing

346
00:15:33,440 --> 00:15:42,139
systems do not offer so we then had a

347
00:15:39,529 --> 00:15:44,959
test mechanism I to make sure that<font color="#CCCCCC"> it</font>

348
00:15:42,139 --> 00:15:48,350
<font color="#E5E5E5">actually all works I we needed to</font>

349
00:15:44,959 --> 00:15:51,199
generate on the order of a gigabit<font color="#CCCCCC"> or so</font>

350
00:15:48,350 --> 00:15:52,820
of data traffic to make sure that we can

351
00:15:51,199 --> 00:15:57,170
<font color="#E5E5E5">handle the type of load that we wanted</font>

352
00:15:52,820 --> 00:16:00,110
<font color="#CCCCCC">to support I we use our custom sip user</font>

353
00:15:57,170 --> 00:16:01,610
agent test suite to do that which just

354
00:16:00,110 --> 00:16:05,029
established as thousands of calls a

355
00:16:01,610 --> 00:16:07,339
second<font color="#E5E5E5"> to that system does scanning pubs</font>

356
00:16:05,029 --> 00:16:10,790
and then to<font color="#E5E5E5"> make sure that that</font><font color="#CCCCCC"> actually</font>

357
00:16:07,339 --> 00:16:13,040
the<font color="#CCCCCC"> pinhole is open just as long as it</font>

358
00:16:10,790 --> 00:16:15,349
needs to<font color="#E5E5E5"> be open and then add a timing</font>

359
00:16:13,040 --> 00:16:19,310
analysis to make sure that the data<font color="#E5E5E5"> is</font>

360
00:16:15,350 --> 00:16:21,980
indeed correct that's VI device

361
00:16:19,310 --> 00:16:25,930
mechanism here in addition we use snort

362
00:16:21,980 --> 00:16:25,930
as a traffic analyzer on<font color="#E5E5E5"> Android device</font>

363
00:16:28,480 --> 00:16:34,519
test bed I we used about a dozen or so

364
00:16:32,240 --> 00:16:41,750
machines on both sides<font color="#E5E5E5"> to generate that</font>

365
00:16:34,519 --> 00:16:44,449
type of code I needed to modify the call

366
00:16:41,750 --> 00:16:48,230
load and generate the external load and

367
00:16:44,449 --> 00:16:50,029
<font color="#CCCCCC">in one the analysis on that using the</font>

368
00:16:48,230 --> 00:16:52,670
closing and open delays as the primary

369
00:16:50,029 --> 00:16:55,310
metric again we're talking<font color="#E5E5E5"> about not</font>

370
00:16:52,670 --> 00:16:57,290
<font color="#E5E5E5">wanting to lose not mourn in one packet</font>

371
00:16:55,310 --> 00:16:59,869
preferably<font color="#E5E5E5"> zero that means we probably</font>

372
00:16:57,290 --> 00:17:04,819
have between 10 and 20<font color="#E5E5E5"> milliseconds and</font>

373
00:16:59,870 --> 00:17:07,150
to do that<font color="#E5E5E5"> you know in</font><font color="#CCCCCC"> the results that</font>

374
00:17:04,819 --> 00:17:10,990
we are<font color="#E5E5E5"> looking at currently are</font>

375
00:17:07,150 --> 00:17:14,230
where we have a concurrent calls on the

376
00:17:10,990 --> 00:17:16,660
order of about I've up to 30,000

377
00:17:14,230 --> 00:17:18,700
concurrent calls that we support<font color="#CCCCCC"> prove a</font>

378
00:17:16,660 --> 00:17:20,830
single<font color="#E5E5E5"> device with about two to three</font>

379
00:17:18,700 --> 00:17:24,460
hundred simultaneous calls per second

380
00:17:20,829 --> 00:17:26,949
and we have and then an open delay in a

381
00:17:24,460 --> 00:17:29,320
closed delay oh and the order<font color="#CCCCCC"> of point</font>

382
00:17:26,950 --> 00:17:31,600
each cell packets that we're looking<font color="#E5E5E5"> at</font>

383
00:17:29,320 --> 00:17:35,770
in<font color="#CCCCCC"> this particular</font><font color="#E5E5E5"> environment so we're</font>

384
00:17:31,600 --> 00:17:39,040
barely but still within our goals to to

385
00:17:35,770 --> 00:17:41,889
make that goal so we can 40,000

386
00:17:39,040 --> 00:17:46,810
concurrent calls is roughly what a large

387
00:17:41,890 --> 00:17:50,020
carrier would need to support so we've

388
00:17:46,810 --> 00:17:51,610
demonstrated that they are indeed needs

389
00:17:50,020 --> 00:17:53,560
for protecting against SIPP

390
00:17:51,610 --> 00:17:56,260
vulnerabilities in both media and

391
00:17:53,560 --> 00:17:57,820
signaling we need to have is at a much

392
00:17:56,260 --> 00:17:59,440
larger scale than we can currently

393
00:17:57,820 --> 00:18:01,870
support with existing firewall

394
00:17:59,440 --> 00:18:04,660
technologies and particularly to do this

395
00:18:01,870 --> 00:18:07,000
highly<font color="#E5E5E5"> dynamically I because it has to</font>

396
00:18:04,660 --> 00:18:09,790
be state-based we need to validate at

397
00:18:07,000 --> 00:18:11,440
performance<font color="#E5E5E5"> I cannot assume that it</font>

398
00:18:09,790 --> 00:18:13,210
simply works and we<font color="#E5E5E5"> found in other</font>

399
00:18:11,440 --> 00:18:16,330
systems<font color="#E5E5E5"> that when we did the same</font><font color="#CCCCCC"> test</font>

400
00:18:13,210 --> 00:18:18,520
<font color="#E5E5E5">which I would mean unnamed dad this was</font>

401
00:18:16,330 --> 00:18:21,550
indeed not the case<font color="#E5E5E5"> that we had problems</font>

402
00:18:18,520 --> 00:18:24,610
<font color="#E5E5E5">dad openings and closings were delayed</font>

403
00:18:21,550 --> 00:18:27,220
significantly and we need<font color="#CCCCCC"> to at this</font>

404
00:18:24,610 --> 00:18:29,379
point we<font color="#E5E5E5"> are looking at using the same</font>

405
00:18:27,220 --> 00:18:31,540
type of methodology to do weight

406
00:18:29,380 --> 00:18:34,630
limiting in particular for potentially

407
00:18:31,540 --> 00:18:41,340
malicious signaling in fact<font color="#E5E5E5"> I'll gladly</font>

408
00:18:34,630 --> 00:18:41,340
<font color="#E5E5E5">take questions any questions</font>

