1
00:00:09,320 --> 00:00:15,150
<font color="#E5E5E5">thank you Michael as Michael said I am</font>

2
00:00:13,170 --> 00:00:16,619
<font color="#CCCCCC">David's Wofford</font><font color="#E5E5E5"> and joining me a little</font>

3
00:00:15,150 --> 00:00:17,430
<font color="#E5E5E5">bit later in this presentation will</font><font color="#CCCCCC"> be</font>

4
00:00:16,619 --> 00:00:19,290
<font color="#CCCCCC">Brennan</font><font color="#E5E5E5"> Bennett</font>

5
00:00:17,430 --> 00:00:21,270
both of us<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> Facebook network</font>

6
00:00:19,290 --> 00:00:22,830
<font color="#E5E5E5">team and today we're going to be taking</font>

7
00:00:21,270 --> 00:00:24,689
a look at how we've been<font color="#E5E5E5"> scaling the</font>

8
00:00:22,830 --> 00:00:28,470
<font color="#E5E5E5">Facebook backbone and our data centers</font>

9
00:00:24,689 --> 00:00:29,939
through<font color="#E5E5E5"> Xero touch provisioning before</font>

10
00:00:28,470 --> 00:00:31,590
we dive into provisioning though<font color="#E5E5E5"> let me</font>

11
00:00:29,939 --> 00:00:34,500
<font color="#E5E5E5">show you a quick view of one of our data</font>

12
00:00:31,590 --> 00:00:36,660
<font color="#CCCCCC">centers</font><font color="#E5E5E5"> this is just one row of our</font>

13
00:00:34,500 --> 00:00:38,489
<font color="#E5E5E5">network of our of one view</font><font color="#CCCCCC"> of our</font>

14
00:00:36,660 --> 00:00:40,620
network row and one of the many data

15
00:00:38,489 --> 00:00:42,629
centers<font color="#CCCCCC"> and throughout the</font><font color="#E5E5E5"> world we have</font>

16
00:00:40,620 --> 00:00:45,059
<font color="#E5E5E5">12 data centers announced and</font><font color="#CCCCCC"> 7</font>

17
00:00:42,629 --> 00:00:46,769
currently live in addition to these<font color="#E5E5E5"> data</font>

18
00:00:45,059 --> 00:00:48,718
<font color="#E5E5E5">centers we</font><font color="#CCCCCC"> have a number of small data</font>

19
00:00:46,769 --> 00:00:50,280
centers called<font color="#E5E5E5"> pops or point presences</font>

20
00:00:48,719 --> 00:00:51,480
throughout the<font color="#E5E5E5"> world as well which</font>

21
00:00:50,280 --> 00:00:52,859
you're probably<font color="#E5E5E5"> most familiar with</font>

22
00:00:51,480 --> 00:00:55,980
<font color="#E5E5E5">because that's where we connect to you</font>

23
00:00:52,859 --> 00:00:57,600
guys<font color="#E5E5E5"> in the outside world we operate two</font>

24
00:00:55,980 --> 00:00:59,998
distinct backbone networks to connect

25
00:00:57,600 --> 00:01:01,710
these one<font color="#CCCCCC"> for internal traffic that we</font>

26
00:00:59,999 --> 00:01:04,410
cross connect all data centers together

27
00:01:01,710 --> 00:01:05,970
<font color="#CCCCCC">within a full mesh and another for the</font>

28
00:01:04,410 --> 00:01:09,300
external traffic<font color="#E5E5E5"> to cross connect the</font>

29
00:01:05,970 --> 00:01:11,340
data centers<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> Pops together these</font>

30
00:01:09,300 --> 00:01:14,039
operate over our own private<font color="#CCCCCC"> optical</font>

31
00:01:11,340 --> 00:01:15,300
optical<font color="#E5E5E5"> network as well so as we thought</font>

32
00:01:14,040 --> 00:01:17,070
about<font color="#CCCCCC"> different</font><font color="#E5E5E5"> problems that we could</font>

33
00:01:15,300 --> 00:01:19,050
<font color="#E5E5E5">solve for and things worth kind of</font>

34
00:01:17,070 --> 00:01:22,050
attacking<font color="#E5E5E5"> one thing became painfully</font>

35
00:01:19,050 --> 00:01:23,399
clear<font color="#E5E5E5"> over the last few years we were</font>

36
00:01:22,050 --> 00:01:25,560
<font color="#E5E5E5">turning up data centers left and right</font>

37
00:01:23,400 --> 00:01:27,390
and we had grown we had matured<font color="#E5E5E5"> quite a</font>

38
00:01:25,560 --> 00:01:29,250
bit on the data center side it was very

39
00:01:27,390 --> 00:01:31,110
cookie cutter everything looked<font color="#E5E5E5"> alike</font>

40
00:01:29,250 --> 00:01:34,500
<font color="#E5E5E5">and so we were able to turn</font><font color="#CCCCCC"> up things</font>

41
00:01:31,110 --> 00:01:36,270
with minimal pain in fact once the data

42
00:01:34,500 --> 00:01:37,440
center shell was up we were turning up

43
00:01:36,270 --> 00:01:41,759
<font color="#E5E5E5">the network</font><font color="#CCCCCC"> staff within</font><font color="#E5E5E5"> just a matter</font>

44
00:01:37,440 --> 00:01:43,920
<font color="#CCCCCC">of weeks</font><font color="#E5E5E5"> for entire fabrics but more</font>

45
00:01:41,760 --> 00:01:45,360
related to<font color="#E5E5E5"> this crowd what we saw</font><font color="#CCCCCC"> that</font>

46
00:01:43,920 --> 00:01:47,460
was a<font color="#E5E5E5"> little bit more almost</font>

47
00:01:45,360 --> 00:01:50,039
embarrassing<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that it was taking</font>

48
00:01:47,460 --> 00:01:51,720
forever<font color="#E5E5E5"> to turn up each pop often</font><font color="#CCCCCC"> 2 to 3</font>

49
00:01:50,040 --> 00:01:53,970
months once we figure out a<font color="#CCCCCC"> location and</font>

50
00:01:51,720 --> 00:01:56,280
so on<font color="#E5E5E5"> the reason being is that we build</font>

51
00:01:53,970 --> 00:01:58,260
our pops<font color="#E5E5E5"> in couple of facilities</font><font color="#CCCCCC"> with</font>

52
00:01:56,280 --> 00:01:59,220
many of you<font color="#E5E5E5"> guys as well and all of</font>

53
00:01:58,260 --> 00:02:01,080
those<font color="#E5E5E5"> facilities are</font><font color="#CCCCCC"> a little bit</font>

54
00:01:59,220 --> 00:02:02,970
different<font color="#CCCCCC"> different power availability</font>

55
00:02:01,080 --> 00:02:05,789
different physical layouts<font color="#E5E5E5"> different</font>

56
00:02:02,970 --> 00:02:08,250
<font color="#CCCCCC">fiber and so on and so we picked</font><font color="#E5E5E5"> that</font>

57
00:02:05,790 --> 00:02:09,599
problem to kind of narrow in<font color="#E5E5E5"> on from the</font>

58
00:02:08,250 --> 00:02:11,540
provisioning side to see<font color="#E5E5E5"> if we could</font>

59
00:02:09,598 --> 00:02:13,518
<font color="#E5E5E5">kind of fix the more complicated</font>

60
00:02:11,540 --> 00:02:17,459
situation<font color="#E5E5E5"> and make it better</font><font color="#CCCCCC"> for</font>

61
00:02:13,519 --> 00:02:18,840
<font color="#CCCCCC">everything so a small team of us about</font>

62
00:02:17,460 --> 00:02:21,060
<font color="#E5E5E5">four</font><font color="#CCCCCC"> of us about a year</font><font color="#E5E5E5"> and a half ago</font>

63
00:02:18,840 --> 00:02:23,010
<font color="#E5E5E5">said hey let's let's go build a pop</font>

64
00:02:21,060 --> 00:02:25,560
and see how<font color="#E5E5E5"> hard this is and figure</font><font color="#CCCCCC"> out</font>

65
00:02:23,010 --> 00:02:27,299
why exactly<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> taking a while because</font>

66
00:02:25,560 --> 00:02:29,520
<font color="#E5E5E5">over time we had grown and been a little</font>

67
00:02:27,300 --> 00:02:30,840
bit<font color="#E5E5E5"> disconnected from our</font><font color="#CCCCCC"> actual</font>

68
00:02:29,520 --> 00:02:33,270
deployment engineers who were doing<font color="#E5E5E5"> the</font>

69
00:02:30,840 --> 00:02:35,340
real work<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and so we went</font><font color="#E5E5E5"> out to</font>

70
00:02:33,270 --> 00:02:36,750
<font color="#CCCCCC">dublin ireland and hung out in one</font><font color="#E5E5E5"> of</font>

71
00:02:35,340 --> 00:02:38,940
the<font color="#CCCCCC"> brand-new cage that's being built</font>

72
00:02:36,750 --> 00:02:41,700
<font color="#E5E5E5">and we're just kind of tediously taking</font>

73
00:02:38,940 --> 00:02:43,680
notes<font color="#CCCCCC"> with our deployment guy</font><font color="#E5E5E5"> and it</font>

74
00:02:41,700 --> 00:02:46,859
breaks out<font color="#CCCCCC"> two four four common groups</font>

75
00:02:43,680 --> 00:02:49,530
of work<font color="#E5E5E5"> we had to build an outer band</font>

76
00:02:46,860 --> 00:02:51,060
<font color="#CCCCCC">Network an</font><font color="#E5E5E5"> optical network</font><font color="#CCCCCC"> and IP</font>

77
00:02:49,530 --> 00:02:53,910
<font color="#E5E5E5">network and then finally</font><font color="#CCCCCC"> provisioned</font>

78
00:02:51,060 --> 00:02:56,100
compute capacity<font color="#E5E5E5"> so what's the first</font>

79
00:02:53,910 --> 00:02:58,079
<font color="#E5E5E5">thing you might build or bring in when</font>

80
00:02:56,100 --> 00:03:00,420
<font color="#E5E5E5">you go to a pop a new data center even a</font>

81
00:02:58,080 --> 00:03:02,370
new office building<font color="#E5E5E5"> potentially some</font>

82
00:03:00,420 --> 00:03:04,140
sort of internet<font color="#CCCCCC"> connection and that was</font>

83
00:03:02,370 --> 00:03:06,450
true for<font color="#CCCCCC"> us as well we would</font><font color="#E5E5E5"> turn up a</font>

84
00:03:04,140 --> 00:03:08,910
<font color="#E5E5E5">firewall an internet circuit console</font>

85
00:03:06,450 --> 00:03:11,670
server and switch<font color="#E5E5E5"> to both provision the</font>

86
00:03:08,910 --> 00:03:13,370
<font color="#E5E5E5">devices</font><font color="#CCCCCC"> over and manage ones</font><font color="#E5E5E5"> live</font><font color="#CCCCCC"> to to</font>

87
00:03:11,670 --> 00:03:15,958
avoid<font color="#E5E5E5"> any complicated build</font><font color="#CCCCCC"> ordering</font>

88
00:03:13,370 --> 00:03:18,720
this was all<font color="#E5E5E5"> being done by hand as we</font>

89
00:03:15,959 --> 00:03:20,370
watched<font color="#E5E5E5"> USB keys to upgrade and then a</font>

90
00:03:18,720 --> 00:03:23,750
<font color="#E5E5E5">literally copy and paste for the configs</font>

91
00:03:20,370 --> 00:03:26,400
<font color="#E5E5E5">just like</font><font color="#CCCCCC"> old school</font><font color="#E5E5E5"> with no real common</font>

92
00:03:23,750 --> 00:03:28,739
<font color="#E5E5E5">template or anything like that</font><font color="#CCCCCC"> for one</font>

93
00:03:26,400 --> 00:03:30,660
<font color="#E5E5E5">device</font><font color="#CCCCCC"> one site not</font><font color="#E5E5E5"> a big problem as we</font>

94
00:03:28,739 --> 00:03:34,620
grew it was a little<font color="#E5E5E5"> bit tedious in an</font>

95
00:03:30,660 --> 00:03:37,109
error prone in the<font color="#CCCCCC"> more extreme case we</font>

96
00:03:34,620 --> 00:03:38,670
might bring a pop or data center<font color="#E5E5E5"> or a</font>

97
00:03:37,109 --> 00:03:40,890
place of pop or data center<font color="#CCCCCC"> in the</font>

98
00:03:38,670 --> 00:03:42,899
middle of nowhere<font color="#E5E5E5"> and have to bring in</font>

99
00:03:40,890 --> 00:03:44,339
optical connectivity I mentioned earlier

100
00:03:42,900 --> 00:03:45,750
we<font color="#CCCCCC"> operated our</font><font color="#E5E5E5"> own private optical</font>

101
00:03:44,340 --> 00:03:47,850
network<font color="#E5E5E5"> so in</font><font color="#CCCCCC"> that case we</font><font color="#E5E5E5"> would</font>

102
00:03:45,750 --> 00:03:49,829
actually<font color="#E5E5E5"> have to build out fibre and</font>

103
00:03:47,850 --> 00:03:51,269
build an optical line system<font color="#E5E5E5"> which is</font>

104
00:03:49,829 --> 00:03:53,180
<font color="#CCCCCC">very much</font><font color="#E5E5E5"> like the network world where</font>

105
00:03:51,269 --> 00:03:55,500
we<font color="#CCCCCC"> have devices such as amplifiers</font>

106
00:03:53,180 --> 00:03:57,269
multiplexers and<font color="#E5E5E5"> so on that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> also</font>

107
00:03:55,500 --> 00:03:58,920
programmed<font color="#CCCCCC"> just like network devices</font>

108
00:03:57,269 --> 00:04:01,880
with the CLI interface or some

109
00:03:58,920 --> 00:04:04,108
proprietary<font color="#E5E5E5"> interface though as well</font>

110
00:04:01,880 --> 00:04:05,880
this<font color="#CCCCCC"> light here just shows you a quick</font>

111
00:04:04,109 --> 00:04:08,100
<font color="#E5E5E5">view of what a typical pop of ours looks</font>

112
00:04:05,880 --> 00:04:10,889
like<font color="#E5E5E5"> simplified a little</font><font color="#CCCCCC"> bit but there's</font>

113
00:04:08,100 --> 00:04:12,690
a number<font color="#E5E5E5"> of layers involved</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> routing</font>

114
00:04:10,889 --> 00:04:15,090
and switching<font color="#E5E5E5"> that must all be</font><font color="#CCCCCC"> turned up</font>

115
00:04:12,690 --> 00:04:19,680
before the first<font color="#E5E5E5"> peering circuit or rack</font>

116
00:04:15,090 --> 00:04:21,298
<font color="#E5E5E5">of servers so as we as we started to</font>

117
00:04:19,680 --> 00:04:22,770
<font color="#CCCCCC">look</font><font color="#E5E5E5"> at this problem we wanted to pick</font>

118
00:04:21,298 --> 00:04:25,138
one of the<font color="#E5E5E5"> harder devices to provision</font>

119
00:04:22,770 --> 00:04:27,659
and see what what what was going on and

120
00:04:25,139 --> 00:04:30,060
<font color="#E5E5E5">why it was</font><font color="#CCCCCC"> taking so long</font><font color="#E5E5E5"> as I mentioned</font>

121
00:04:27,660 --> 00:04:32,340
earlier we had a deployment<font color="#E5E5E5"> team and so</font>

122
00:04:30,060 --> 00:04:34,380
over<font color="#E5E5E5"> the years we had built these</font><font color="#CCCCCC"> large</font>

123
00:04:32,340 --> 00:04:34,789
documents that they would follow called

124
00:04:34,380 --> 00:04:36,560
method

125
00:04:34,790 --> 00:04:38,120
<font color="#CCCCCC">of procedures which was simply a</font>

126
00:04:36,560 --> 00:04:40,250
<font color="#CCCCCC">checklist of all the items they had to</font>

127
00:04:38,120 --> 00:04:41,660
do so<font color="#CCCCCC"> over time we became a little</font>

128
00:04:40,250 --> 00:04:44,450
<font color="#E5E5E5">disconnected on what they were actually</font>

129
00:04:41,660 --> 00:04:45,860
<font color="#CCCCCC">having to do to turn</font><font color="#E5E5E5"> up this site</font><font color="#CCCCCC"> and so</font>

130
00:04:44,450 --> 00:04:47,710
for one<font color="#CCCCCC"> of our peering routers the</font>

131
00:04:45,860 --> 00:04:50,600
routers that<font color="#E5E5E5"> you guys connect to us with</font>

132
00:04:47,710 --> 00:04:53,120
that breaks out<font color="#CCCCCC"> to a list like</font><font color="#E5E5E5"> this in</font>

133
00:04:50,600 --> 00:04:55,700
the case of a new deployment<font color="#E5E5E5"> we have to</font>

134
00:04:53,120 --> 00:04:56,990
let some<font color="#CCCCCC"> people know internally</font><font color="#E5E5E5"> but in</font>

135
00:04:55,700 --> 00:04:59,030
the case<font color="#E5E5E5"> of an upgrade we have to let</font>

136
00:04:56,990 --> 00:05:01,310
you<font color="#E5E5E5"> guys</font><font color="#CCCCCC"> know so with some emails</font><font color="#E5E5E5"> and so</font>

137
00:04:59,030 --> 00:05:03,260
on then<font color="#E5E5E5"> we have to do some cabling some</font>

138
00:05:01,310 --> 00:05:06,140
physical work<font color="#E5E5E5"> assigning IP addresses</font>

139
00:05:03,260 --> 00:05:08,300
<font color="#CCCCCC">generating</font><font color="#E5E5E5"> config and so on now being</font>

140
00:05:06,140 --> 00:05:09,950
<font color="#E5E5E5">Facebook some were very software centric</font>

141
00:05:08,300 --> 00:05:12,170
so some of<font color="#CCCCCC"> this was</font><font color="#E5E5E5"> already automated</font>

142
00:05:09,950 --> 00:05:14,180
<font color="#E5E5E5">things like letting</font><font color="#CCCCCC"> people know</font><font color="#E5E5E5"> that was</font>

143
00:05:12,170 --> 00:05:15,860
a CLI tool that a user would run<font color="#E5E5E5"> or a</font>

144
00:05:14,180 --> 00:05:17,360
deployment<font color="#CCCCCC"> engineer</font><font color="#E5E5E5"> would run and it</font>

145
00:05:15,860 --> 00:05:17,900
would post in a Facebook group<font color="#E5E5E5"> or send</font>

146
00:05:17,360 --> 00:05:20,150
an email

147
00:05:17,900 --> 00:05:22,429
things like config generation were also

148
00:05:20,150 --> 00:05:25,159
automated<font color="#E5E5E5"> now by one tool but by three</font>

149
00:05:22,430 --> 00:05:27,710
but<font color="#E5E5E5"> still automated in a nonetheless</font>

150
00:05:25,160 --> 00:05:30,350
<font color="#E5E5E5">even</font><font color="#CCCCCC"> the act of placing production</font>

151
00:05:27,710 --> 00:05:32,270
traffic<font color="#CCCCCC"> onto a device which is generally</font>

152
00:05:30,350 --> 00:05:35,240
<font color="#CCCCCC">just changing</font><font color="#E5E5E5"> BGP policy that was</font>

153
00:05:32,270 --> 00:05:37,820
automated<font color="#E5E5E5"> by another tool as well now</font>

154
00:05:35,240 --> 00:05:39,590
you might<font color="#CCCCCC"> ask why why is this a problem</font>

155
00:05:37,820 --> 00:05:41,120
<font color="#E5E5E5">right now we have this large document</font>

156
00:05:39,590 --> 00:05:43,270
it's very structured<font color="#E5E5E5"> tells the</font>

157
00:05:41,120 --> 00:05:45,410
deployment engineer exactly what to do

158
00:05:43,270 --> 00:05:47,030
the problem is that we had become a

159
00:05:45,410 --> 00:05:49,340
little<font color="#E5E5E5"> bit disconnected from the pain</font>

160
00:05:47,030 --> 00:05:51,049
and<font color="#CCCCCC"> the the the</font><font color="#E5E5E5"> amount of</font><font color="#CCCCCC"> effort it was</font>

161
00:05:49,340 --> 00:05:52,849
taking them<font color="#E5E5E5"> and so what we saw is that</font>

162
00:05:51,050 --> 00:05:56,380
<font color="#E5E5E5">just for a peering router it was 30</font>

163
00:05:52,850 --> 00:05:58,190
<font color="#E5E5E5">steps 10 different COI or UI tools and</font>

164
00:05:56,380 --> 00:05:59,450
unfortunately those tools were written

165
00:05:58,190 --> 00:06:01,730
<font color="#E5E5E5">by different people over different</font>

166
00:05:59,450 --> 00:06:04,310
<font color="#E5E5E5">periods</font><font color="#CCCCCC"> of time and they all acted and</font>

167
00:06:01,730 --> 00:06:06,110
felt different<font color="#E5E5E5"> now it wasn't</font><font color="#CCCCCC"> just 10</font>

168
00:06:04,310 --> 00:06:07,730
tools for the entire site though<font color="#E5E5E5"> we had</font>

169
00:06:06,110 --> 00:06:10,340
a number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different roles of routers</font>

170
00:06:07,730 --> 00:06:12,890
and switches<font color="#CCCCCC"> and so we saw a 100 to 200</font>

171
00:06:10,340 --> 00:06:16,700
steps on any given<font color="#E5E5E5"> build with maybe 15</font>

172
00:06:12,890 --> 00:06:19,190
to 20 tools now this picture<font color="#CCCCCC"> here</font><font color="#E5E5E5"> is</font>

173
00:06:16,700 --> 00:06:21,440
also<font color="#E5E5E5"> another visualization of things</font>

174
00:06:19,190 --> 00:06:24,080
that the<font color="#CCCCCC"> map was not</font><font color="#E5E5E5"> helping fix for us</font>

175
00:06:21,440 --> 00:06:26,180
so we had an outage<font color="#CCCCCC"> where a new guy had</font>

176
00:06:24,080 --> 00:06:27,950
joined the team<font color="#E5E5E5"> and there was a step</font>

177
00:06:26,180 --> 00:06:29,210
that<font color="#E5E5E5"> was not written down</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> map</font>

178
00:06:27,950 --> 00:06:31,310
<font color="#CCCCCC">that everybody just kind of knew and had</font>

179
00:06:29,210 --> 00:06:32,890
<font color="#E5E5E5">in the back their head and so he didn't</font>

180
00:06:31,310 --> 00:06:34,880
know about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and he skipped it</font>

181
00:06:32,890 --> 00:06:36,740
unfortunately<font color="#E5E5E5"> that</font><font color="#CCCCCC"> hour</font><font color="#E5E5E5"> just caused a</font>

182
00:06:34,880 --> 00:06:40,430
bit<font color="#CCCCCC"> of a traffic impact to those</font><font color="#E5E5E5"> users</font>

183
00:06:36,740 --> 00:06:41,870
in<font color="#CCCCCC"> that pop and</font><font color="#E5E5E5"> when we looked at the</font>

184
00:06:40,430 --> 00:06:43,640
outage and something called sever view

185
00:06:41,870 --> 00:06:45,020
where we<font color="#E5E5E5"> were like hey what happened</font>

186
00:06:43,640 --> 00:06:47,840
trying to dig<font color="#E5E5E5"> into the root cause or</font>

187
00:06:45,020 --> 00:06:48,620
<font color="#E5E5E5">like oh you skipped the</font><font color="#CCCCCC"> step that was</font>

188
00:06:47,840 --> 00:06:50,150
not written<font color="#CCCCCC"> down</font>

189
00:06:48,620 --> 00:06:51,410
well we can't<font color="#E5E5E5"> really blame a guy for</font>

190
00:06:50,150 --> 00:06:53,270
skipping a step that's<font color="#E5E5E5"> not written down</font>

191
00:06:51,410 --> 00:06:56,120
<font color="#E5E5E5">so our takeaway was to write down the</font>

192
00:06:53,270 --> 00:06:57,830
step<font color="#E5E5E5"> unfortunately two days later in the</font>

193
00:06:56,120 --> 00:07:00,080
same pop another maintenance on another

194
00:06:57,830 --> 00:07:01,820
router<font color="#E5E5E5"> caused the same outage this guy</font>

195
00:07:00,080 --> 00:07:03,979
this time<font color="#E5E5E5"> by somebody more experienced</font>

196
00:07:01,820 --> 00:07:05,900
who knew<font color="#E5E5E5"> exactly about that step and</font>

197
00:07:03,980 --> 00:07:07,070
<font color="#CCCCCC">everything but</font><font color="#E5E5E5"> it was 2</font><font color="#CCCCCC"> a.m.</font><font color="#E5E5E5"> and he</font>

198
00:07:05,900 --> 00:07:09,590
<font color="#CCCCCC">wasn't reading them off</font><font color="#E5E5E5"> because he had</font>

199
00:07:07,070 --> 00:07:11,780
<font color="#E5E5E5">had it memorized that's an example of</font>

200
00:07:09,590 --> 00:07:13,880
why writing<font color="#E5E5E5"> things down in giant mops</font>

201
00:07:11,780 --> 00:07:16,669
were not really<font color="#CCCCCC"> a</font><font color="#E5E5E5"> solution that we</font>

202
00:07:13,880 --> 00:07:19,010
wanted<font color="#E5E5E5"> to keep around so as we thought</font>

203
00:07:16,670 --> 00:07:21,020
about<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> solve this we we had</font>

204
00:07:19,010 --> 00:07:22,820
some software we had some processes<font color="#E5E5E5"> but</font>

205
00:07:21,020 --> 00:07:25,430
<font color="#CCCCCC">we wanted</font><font color="#E5E5E5"> to kind of think what if we</font>

206
00:07:22,820 --> 00:07:27,560
started<font color="#E5E5E5"> over</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> the way we wanted to</font>

207
00:07:25,430 --> 00:07:29,630
<font color="#E5E5E5">build a solution that would let us</font>

208
00:07:27,560 --> 00:07:32,390
automate this entire<font color="#E5E5E5"> process of building</font>

209
00:07:29,630 --> 00:07:34,400
<font color="#E5E5E5">both a pop or a router or</font><font color="#CCCCCC"> switch with a</font>

210
00:07:32,390 --> 00:07:37,010
<font color="#CCCCCC">push-button experience</font><font color="#E5E5E5"> imagine walking</font>

211
00:07:34,400 --> 00:07:39,349
<font color="#E5E5E5">up to either an arcade game or a vending</font>

212
00:07:37,010 --> 00:07:41,030
machine<font color="#CCCCCC"> and typing</font><font color="#E5E5E5"> in a couple button</font>

213
00:07:39,350 --> 00:07:44,060
presses and<font color="#E5E5E5"> out comes a provisioned</font>

214
00:07:41,030 --> 00:07:46,400
router or switch<font color="#E5E5E5"> eventually a provision</font>

215
00:07:44,060 --> 00:07:48,140
pop so while that<font color="#E5E5E5"> might</font><font color="#CCCCCC"> sound</font><font color="#E5E5E5"> like made</font>

216
00:07:46,400 --> 00:07:50,330
<font color="#E5E5E5">up and fit</font><font color="#CCCCCC"> in like magical and all that</font>

217
00:07:48,140 --> 00:07:51,919
that<font color="#E5E5E5"> is in fact what we built and what</font>

218
00:07:50,330 --> 00:07:55,789
the<font color="#E5E5E5"> rest of this talk</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to focus</font>

219
00:07:51,920 --> 00:07:57,020
on so as a small team<font color="#E5E5E5"> of for about a</font>

220
00:07:55,790 --> 00:07:59,450
year and<font color="#E5E5E5"> a half ago we were trying to</font>

221
00:07:57,020 --> 00:08:01,370
<font color="#E5E5E5">look at this problem and we huddled up</font>

222
00:07:59,450 --> 00:08:02,450
in<font color="#CCCCCC"> a room with</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> whiteboard and we're</font>

223
00:08:01,370 --> 00:08:05,600
like let's let's<font color="#CCCCCC"> start breaking this</font>

224
00:08:02,450 --> 00:08:08,120
into<font color="#E5E5E5"> pieces one major piece that we</font>

225
00:08:05,600 --> 00:08:11,150
needed is<font color="#E5E5E5"> that we wanted to</font><font color="#CCCCCC"> needed a way</font>

226
00:08:08,120 --> 00:08:13,790
<font color="#E5E5E5">to reliably apply configuration and code</font>

227
00:08:11,150 --> 00:08:16,340
to a device<font color="#E5E5E5"> we had a console</font><font color="#CCCCCC"> base system</font>

228
00:08:13,790 --> 00:08:18,380
but it wasn't working<font color="#CCCCCC"> very well we also</font>

229
00:08:16,340 --> 00:08:20,030
had some<font color="#CCCCCC"> software already for notifying</font>

230
00:08:18,380 --> 00:08:21,800
<font color="#E5E5E5">people and checking</font><font color="#CCCCCC"> Hardware and</font><font color="#E5E5E5"> so on</font>

231
00:08:20,030 --> 00:08:24,409
<font color="#E5E5E5">but we needed to</font><font color="#CCCCCC"> finish a rethink and</font>

232
00:08:21,800 --> 00:08:26,090
<font color="#E5E5E5">start over and just throw away and start</font>

233
00:08:24,410 --> 00:08:30,200
fresh<font color="#E5E5E5"> with more integrated and better</font>

234
00:08:26,090 --> 00:08:32,480
software but one final<font color="#E5E5E5"> point that</font><font color="#CCCCCC"> we</font>

235
00:08:30,200 --> 00:08:35,569
kept<font color="#CCCCCC"> close all along that made this</font>

236
00:08:32,480 --> 00:08:37,220
project<font color="#E5E5E5"> successful</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> we wanted to</font>

237
00:08:35,570 --> 00:08:38,750
empower and enable our peer network

238
00:08:37,220 --> 00:08:41,210
engineers and our deployment engineers

239
00:08:38,750 --> 00:08:42,830
from<font color="#E5E5E5"> the beginning so we were on a team</font>

240
00:08:41,210 --> 00:08:45,560
of<font color="#E5E5E5"> four we were network engineers</font>

241
00:08:42,830 --> 00:08:47,420
<font color="#E5E5E5">working mostly</font><font color="#CCCCCC"> on software but on the</font>

242
00:08:45,560 --> 00:08:49,219
network team trying to solve this

243
00:08:47,420 --> 00:08:51,380
<font color="#CCCCCC">problem but we did not</font><font color="#E5E5E5"> want to solve it</font>

244
00:08:49,220 --> 00:08:53,330
in<font color="#CCCCCC"> isolation</font><font color="#E5E5E5"> and be like hey six months</font>

245
00:08:51,380 --> 00:08:55,070
to a year later<font color="#E5E5E5"> here you go it's all</font>

246
00:08:53,330 --> 00:08:57,290
<font color="#E5E5E5">done hope this is what you wanted</font>

247
00:08:55,070 --> 00:08:59,240
instead<font color="#CCCCCC"> we recruited people</font><font color="#E5E5E5"> from both</font>

248
00:08:57,290 --> 00:09:00,800
the backbone teams the network the<font color="#CCCCCC"> data</font>

249
00:08:59,240 --> 00:09:01,329
center teams<font color="#E5E5E5"> even</font><font color="#CCCCCC"> the guys that were in</font>

250
00:09:00,800 --> 00:09:03,819
<font color="#E5E5E5">the</font><font color="#CCCCCC"> field</font>

251
00:09:01,329 --> 00:09:05,769
to help us along<font color="#CCCCCC"> the way</font><font color="#E5E5E5"> so that we</font><font color="#CCCCCC"> knew</font>

252
00:09:03,819 --> 00:09:08,079
<font color="#E5E5E5">so that we would know what we were</font>

253
00:09:05,769 --> 00:09:10,239
building was what was actually needed

254
00:09:08,079 --> 00:09:13,299
<font color="#CCCCCC">and supposedly to have them help us</font>

255
00:09:10,239 --> 00:09:14,799
build it<font color="#E5E5E5"> so that as we got further in we</font>

256
00:09:13,299 --> 00:09:16,779
wouldn't miss things and we could keep

257
00:09:14,799 --> 00:09:21,579
the problem<font color="#CCCCCC"> in the pain close to us as</font>

258
00:09:16,779 --> 00:09:23,529
we try<font color="#CCCCCC"> to fix that</font><font color="#E5E5E5"> so as we step back a</font>

259
00:09:21,579 --> 00:09:25,660
<font color="#E5E5E5">minute though</font><font color="#CCCCCC"> there so looking</font><font color="#E5E5E5"> at the</font>

260
00:09:23,529 --> 00:09:27,489
first first puzzle piece<font color="#E5E5E5"> we needed an</font>

261
00:09:25,660 --> 00:09:30,759
option to apply configuration reliably

262
00:09:27,489 --> 00:09:34,779
<font color="#E5E5E5">so one</font><font color="#CCCCCC"> option is shown here who here</font><font color="#E5E5E5"> is</font>

263
00:09:30,759 --> 00:09:38,290
familiar with<font color="#E5E5E5"> us on this slide yes</font>

264
00:09:34,779 --> 00:09:40,899
expect<font color="#E5E5E5"> or P expect based scripting where</font>

265
00:09:38,290 --> 00:09:43,238
you pretend to be a human<font color="#CCCCCC"> with scripts</font>

266
00:09:40,899 --> 00:09:44,889
and<font color="#E5E5E5"> you type over the prompt and you do</font>

267
00:09:43,239 --> 00:09:46,389
a lot of regular expression matching and

268
00:09:44,889 --> 00:09:48,459
try to<font color="#E5E5E5"> craft things like the inner key</font>

269
00:09:46,389 --> 00:09:51,850
and so on<font color="#E5E5E5"> now what comes to mind when</font>

270
00:09:48,459 --> 00:09:55,359
you<font color="#CCCCCC"> think of</font><font color="#E5E5E5"> this is it joy</font><font color="#CCCCCC"> or is</font><font color="#E5E5E5"> it</font>

271
00:09:51,850 --> 00:09:57,369
tears<font color="#E5E5E5"> okay cool</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> depending on your</font>

272
00:09:55,360 --> 00:09:59,049
evolution in the<font color="#E5E5E5"> programming like life</font>

273
00:09:57,369 --> 00:10:01,019
<font color="#E5E5E5">cycle</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is generally the first thing</font>

274
00:09:59,049 --> 00:10:03,100
you step towards as you automate<font color="#E5E5E5"> things</font>

275
00:10:01,019 --> 00:10:04,509
in a way it's really<font color="#E5E5E5"> cool because you</font>

276
00:10:03,100 --> 00:10:06,579
<font color="#CCCCCC">can suddenly be a little bit lazy</font><font color="#E5E5E5"> which</font>

277
00:10:04,509 --> 00:10:08,679
is what we all<font color="#E5E5E5"> really want and that is a</font>

278
00:10:06,579 --> 00:10:11,258
great goal to<font color="#E5E5E5"> have because now you have</font>

279
00:10:08,679 --> 00:10:13,629
<font color="#E5E5E5">software typing for you interacting with</font>

280
00:10:11,259 --> 00:10:14,970
these prompts the downfall to<font color="#E5E5E5"> this</font>

281
00:10:13,629 --> 00:10:17,139
though is<font color="#CCCCCC"> that you're not really writing</font>

282
00:10:14,970 --> 00:10:18,220
<font color="#E5E5E5">software so much to write</font><font color="#CCCCCC"> software</font><font color="#E5E5E5"> and</font>

283
00:10:17,139 --> 00:10:19,720
you're not<font color="#E5E5E5"> really a building networks to</font>

284
00:10:18,220 --> 00:10:22,089
build<font color="#CCCCCC"> networks but now you're</font><font color="#E5E5E5"> building</font>

285
00:10:19,720 --> 00:10:23,679
software<font color="#E5E5E5"> to pretend to be a human so you</font>

286
00:10:22,089 --> 00:10:26,110
have to<font color="#CCCCCC"> build a lot of</font><font color="#E5E5E5"> intelligence and</font>

287
00:10:23,679 --> 00:10:31,149
error handling<font color="#E5E5E5"> about these prompts and</font>

288
00:10:26,110 --> 00:10:32,470
you<font color="#CCCCCC"> have to like always be able to be at</font>

289
00:10:31,149 --> 00:10:34,360
the<font color="#CCCCCC"> right prompt</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> craft</font>

290
00:10:32,470 --> 00:10:35,949
<font color="#E5E5E5">things like the in</font><font color="#CCCCCC"> Turkey one problem we</font>

291
00:10:34,360 --> 00:10:37,839
and we had a<font color="#E5E5E5"> system based</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> this for a</font>

292
00:10:35,949 --> 00:10:40,389
<font color="#E5E5E5">while that was causing a lot of</font>

293
00:10:37,839 --> 00:10:42,519
heartache<font color="#CCCCCC"> specifically the</font><font color="#E5E5E5"> heartache we</font>

294
00:10:40,389 --> 00:10:44,230
were having is that<font color="#E5E5E5"> our workflows</font><font color="#CCCCCC"> have</font>

295
00:10:42,519 --> 00:10:46,149
become so long in the data center side

296
00:10:44,230 --> 00:10:47,799
with these console systems that we would

297
00:10:46,149 --> 00:10:49,799
have two<font color="#CCCCCC"> or three</font><font color="#E5E5E5"> reboots involved and</font>

298
00:10:47,799 --> 00:10:52,029
we might<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use firmware upgrades</font>

299
00:10:49,799 --> 00:10:53,799
<font color="#E5E5E5">multiple times depending on like the</font>

300
00:10:52,029 --> 00:10:55,989
steps involved<font color="#CCCCCC"> and so if you wanted to</font>

301
00:10:53,799 --> 00:10:58,239
<font color="#CCCCCC">change something</font><font color="#E5E5E5"> after the first or</font>

302
00:10:55,989 --> 00:11:00,519
second reboot<font color="#E5E5E5"> well you had to go a race'</font>

303
00:10:58,239 --> 00:11:02,199
device run your like workflow reboot the

304
00:11:00,519 --> 00:11:03,850
device twice<font color="#E5E5E5"> get it to that point</font><font color="#CCCCCC"> where</font>

305
00:11:02,199 --> 00:11:05,079
it's ready<font color="#CCCCCC"> and then now</font><font color="#E5E5E5"> hope that you</font>

306
00:11:03,850 --> 00:11:07,299
don't crash while you're testing your

307
00:11:05,079 --> 00:11:09,519
<font color="#E5E5E5">change it led to a lot</font><font color="#CCCCCC"> of time wasted</font>

308
00:11:07,299 --> 00:11:10,990
<font color="#CCCCCC">and so we</font><font color="#E5E5E5"> wanted to think what if what</font>

309
00:11:09,519 --> 00:11:14,079
<font color="#E5E5E5">if there's another way</font><font color="#CCCCCC"> that could</font><font color="#E5E5E5"> be</font>

310
00:11:10,990 --> 00:11:15,040
<font color="#E5E5E5">better so another way we can look at is</font>

311
00:11:14,079 --> 00:11:17,469
what the server world

312
00:11:15,040 --> 00:11:21,219
has been<font color="#E5E5E5"> using for decades</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> pixie</font>

313
00:11:17,470 --> 00:11:23,019
boot which<font color="#CCCCCC"> is or</font><font color="#E5E5E5"> supposedly DHCP so in</font>

314
00:11:21,220 --> 00:11:24,940
the server world pixie boot<font color="#E5E5E5"> even the</font>

315
00:11:23,019 --> 00:11:26,410
network world<font color="#E5E5E5"> has this more recently</font>

316
00:11:24,940 --> 00:11:29,350
<font color="#E5E5E5">through zero touch</font><font color="#CCCCCC"> provisioning but even</font>

317
00:11:26,410 --> 00:11:31,480
back in 2000's we had a<font color="#E5E5E5"> method with</font><font color="#CCCCCC"> DHCP</font>

318
00:11:29,350 --> 00:11:32,829
<font color="#E5E5E5">and broadcast</font><font color="#CCCCCC"> space and so that's</font>

319
00:11:31,480 --> 00:11:36,360
actually<font color="#E5E5E5"> what we adopted we're gonna go</font>

320
00:11:32,829 --> 00:11:40,089
into<font color="#CCCCCC"> this in more detail</font><font color="#E5E5E5"> in just a bit</font>

321
00:11:36,360 --> 00:11:42,130
<font color="#E5E5E5">so this picture here</font><font color="#CCCCCC"> is a just a visual</font>

322
00:11:40,089 --> 00:11:43,810
of our mission early on we wanted<font color="#E5E5E5"> to</font>

323
00:11:42,130 --> 00:11:46,060
automate this experience of building<font color="#CCCCCC"> the</font>

324
00:11:43,810 --> 00:11:48,699
more complicated<font color="#E5E5E5"> devices with that of</font>

325
00:11:46,060 --> 00:11:49,930
walking up<font color="#E5E5E5"> to of any machine this is one</font>

326
00:11:48,699 --> 00:11:51,699
<font color="#CCCCCC">of</font><font color="#E5E5E5"> our fighting machines from</font><font color="#CCCCCC"> Facebook</font>

327
00:11:49,930 --> 00:11:53,469
where we can walk walk up to it swipe a

328
00:11:51,699 --> 00:11:57,219
badge and get IT supplies such<font color="#CCCCCC"> as</font>

329
00:11:53,470 --> 00:11:58,959
batteries or a charger so as we<font color="#E5E5E5"> think</font>

330
00:11:57,220 --> 00:12:01,870
<font color="#E5E5E5">about the picture I mentioned earlier</font>

331
00:11:58,959 --> 00:12:03,880
that<font color="#E5E5E5"> one part of it was configuration</font><font color="#CCCCCC"> so</font>

332
00:12:01,870 --> 00:12:06,190
potentially console or<font color="#CCCCCC"> zero touch</font>

333
00:12:03,880 --> 00:12:08,019
provisioning but there's a lot<font color="#E5E5E5"> of other</font>

334
00:12:06,190 --> 00:12:10,600
<font color="#E5E5E5">pieces needed to fully provision a</font>

335
00:12:08,019 --> 00:12:12,459
device for<font color="#CCCCCC"> example who here has</font>

336
00:12:10,600 --> 00:12:14,529
documents like I<font color="#E5E5E5"> showed earlier</font><font color="#CCCCCC"> we're</font>

337
00:12:12,459 --> 00:12:17,410
it's a large checklist or a method<font color="#E5E5E5"> of</font>

338
00:12:14,529 --> 00:12:20,439
procedure<font color="#E5E5E5"> in your environment do you</font>

339
00:12:17,410 --> 00:12:22,060
like those<font color="#CCCCCC"> okay cool</font><font color="#E5E5E5"> this guy up and</font>

340
00:12:20,440 --> 00:12:23,860
<font color="#CCCCCC">gentlemen up here</font><font color="#E5E5E5"> shaking</font><font color="#CCCCCC"> his head no</font><font color="#E5E5E5"> so</font>

341
00:12:22,060 --> 00:12:26,439
we wanted<font color="#E5E5E5"> to get rid</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those so is</font>

342
00:12:23,860 --> 00:12:28,389
looking at<font color="#CCCCCC"> that part of</font><font color="#E5E5E5"> the puzzle</font><font color="#CCCCCC"> we</font>

343
00:12:26,440 --> 00:12:31,959
needed to write<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of code to</font>

344
00:12:28,389 --> 00:12:34,029
automate<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> those checklist items we</font>

345
00:12:31,959 --> 00:12:35,888
also needed<font color="#E5E5E5"> a way to organize that code</font>

346
00:12:34,029 --> 00:12:37,810
and build workflows that<font color="#E5E5E5"> were specific</font>

347
00:12:35,889 --> 00:12:40,510
to<font color="#E5E5E5"> each role or device that</font><font color="#CCCCCC"> we were</font>

348
00:12:37,810 --> 00:12:41,829
building<font color="#CCCCCC"> and finally we wanted</font><font color="#E5E5E5"> to</font>

349
00:12:40,510 --> 00:12:43,480
<font color="#CCCCCC">specifically build</font><font color="#E5E5E5"> it in such a way that</font>

350
00:12:41,829 --> 00:12:47,560
<font color="#E5E5E5">we could replace these mops with a</font>

351
00:12:43,480 --> 00:12:49,810
button or a command so that<font color="#CCCCCC"> is what we</font>

352
00:12:47,560 --> 00:12:53,500
did<font color="#E5E5E5"> and how we did</font><font color="#CCCCCC"> that is by</font><font color="#E5E5E5"> choosing</font>

353
00:12:49,810 --> 00:12:55,660
<font color="#CCCCCC">to divide and</font><font color="#E5E5E5"> conquer we realized</font><font color="#CCCCCC"> early</font>

354
00:12:53,500 --> 00:12:57,370
on<font color="#CCCCCC"> that as a team of four</font><font color="#E5E5E5"> working on the</font>

355
00:12:55,660 --> 00:12:59,170
network side trying to focus<font color="#CCCCCC"> imprisoning</font>

356
00:12:57,370 --> 00:13:03,310
<font color="#E5E5E5">that we were not large enough to fix</font>

357
00:12:59,170 --> 00:13:04,839
everything<font color="#CCCCCC"> for all</font><font color="#E5E5E5"> Facebook but</font><font color="#CCCCCC"> we also</font>

358
00:13:03,310 --> 00:13:07,239
wanted to keep the problem<font color="#CCCCCC"> really close</font>

359
00:13:04,839 --> 00:13:08,980
to the guys that had<font color="#E5E5E5"> the pain so what we</font>

360
00:13:07,240 --> 00:13:11,709
did is recruit we recruited<font color="#CCCCCC"> people</font><font color="#E5E5E5"> and</font>

361
00:13:08,980 --> 00:13:14,050
<font color="#E5E5E5">supposedly to do that though we built</font>

362
00:13:11,709 --> 00:13:15,609
the system with them in mind<font color="#E5E5E5"> so we</font>

363
00:13:14,050 --> 00:13:17,800
focused on<font color="#CCCCCC"> our deployment in network</font>

364
00:13:15,610 --> 00:13:19,810
engineers and made the system<font color="#E5E5E5"> structure</font>

365
00:13:17,800 --> 00:13:21,550
in<font color="#E5E5E5"> such a way</font><font color="#CCCCCC"> that they could</font><font color="#E5E5E5"> be</font>

366
00:13:19,810 --> 00:13:23,800
<font color="#E5E5E5">on-boarded very easily without much</font>

367
00:13:21,550 --> 00:13:25,870
<font color="#E5E5E5">overhead</font><font color="#CCCCCC"> solutely</font><font color="#E5E5E5"> we wanted to remove</font>

368
00:13:23,800 --> 00:13:27,219
<font color="#E5E5E5">the</font><font color="#CCCCCC"> barriers no longer did somebody</font><font color="#E5E5E5"> need</font>

369
00:13:25,870 --> 00:13:28,380
a computer science background<font color="#CCCCCC"> to</font>

370
00:13:27,220 --> 00:13:30,120
understand how to<font color="#E5E5E5"> change</font>

371
00:13:28,380 --> 00:13:33,030
a few lines of code<font color="#CCCCCC"> or</font><font color="#E5E5E5"> to change parts</font>

372
00:13:30,120 --> 00:13:34,740
of<font color="#E5E5E5"> these provisioning systems and in</font>

373
00:13:33,030 --> 00:13:37,020
doing<font color="#E5E5E5"> so we wanted to empower them</font><font color="#CCCCCC"> so</font>

374
00:13:34,740 --> 00:13:38,910
that<font color="#CCCCCC"> no</font><font color="#E5E5E5"> longer would they have to put in</font>

375
00:13:37,020 --> 00:13:40,590
a feature request or a file a bug<font color="#E5E5E5"> and</font>

376
00:13:38,910 --> 00:13:42,900
<font color="#E5E5E5">and ask and hope it could</font><font color="#CCCCCC"> get on</font>

377
00:13:40,590 --> 00:13:44,850
somebody's roadmap or get some software

378
00:13:42,900 --> 00:13:46,170
engineer to work<font color="#CCCCCC"> on it</font><font color="#E5E5E5"> which no offense</font>

379
00:13:44,850 --> 00:13:48,480
<font color="#E5E5E5">the sufferings yours they're great as</font>

380
00:13:46,170 --> 00:13:50,250
well<font color="#CCCCCC"> but they need</font><font color="#E5E5E5"> this like in our</font>

381
00:13:48,480 --> 00:13:51,930
environment<font color="#E5E5E5"> we wanted the peer network</font>

382
00:13:50,250 --> 00:13:54,600
engineers the deployment guys to be

383
00:13:51,930 --> 00:13:57,599
welcomed<font color="#E5E5E5"> and have the freedom to</font><font color="#CCCCCC"> make</font>

384
00:13:54,600 --> 00:13:58,800
changes in<font color="#E5E5E5"> the system so as we talk</font>

385
00:13:57,600 --> 00:14:00,870
about<font color="#E5E5E5"> building</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the net the network</font>

386
00:13:58,800 --> 00:14:02,550
engineer the way we did that as<font color="#E5E5E5"> we</font>

387
00:14:00,870 --> 00:14:05,100
structured it<font color="#E5E5E5"> so that we had small</font>

388
00:14:02,550 --> 00:14:08,010
independent<font color="#E5E5E5"> pieces of code</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> were</font>

389
00:14:05,100 --> 00:14:09,840
could be written<font color="#E5E5E5"> in any language</font><font color="#CCCCCC"> so if a</font>

390
00:14:08,010 --> 00:14:11,490
guy had a<font color="#E5E5E5"> great bash script already we</font>

391
00:14:09,840 --> 00:14:14,880
wanted to allow him<font color="#E5E5E5"> to</font><font color="#CCCCCC"> continue using</font>

392
00:14:11,490 --> 00:14:16,830
that<font color="#E5E5E5"> in this system we if they knew Perl</font>

393
00:14:14,880 --> 00:14:18,780
or Python we wanted to allow that<font color="#CCCCCC"> was as</font>

394
00:14:16,830 --> 00:14:19,950
well we didn't<font color="#E5E5E5"> want to add the overhead</font>

395
00:14:18,780 --> 00:14:21,990
<font color="#CCCCCC">of forcing learning of another</font>

396
00:14:19,950 --> 00:14:25,380
<font color="#E5E5E5">programming language</font><font color="#CCCCCC"> whatever we chose</font>

397
00:14:21,990 --> 00:14:26,760
to get into this we also wanted to<font color="#E5E5E5"> make</font>

398
00:14:25,380 --> 00:14:28,380
sure<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we kind of enforced the UNIX</font>

399
00:14:26,760 --> 00:14:30,150
and Linux philosophy of doing<font color="#CCCCCC"> one thing</font>

400
00:14:28,380 --> 00:14:33,840
<font color="#E5E5E5">and</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> one thing well from the</font>

401
00:14:30,150 --> 00:14:34,910
original<font color="#E5E5E5"> proportion</font><font color="#CCCCCC"> of the workflow but</font>

402
00:14:33,840 --> 00:14:37,200
finally<font color="#E5E5E5"> we wanted to make sure that</font>

403
00:14:34,910 --> 00:14:38,430
<font color="#E5E5E5">those working on this problem the</font>

404
00:14:37,200 --> 00:14:40,770
deployment and network engineers that

405
00:14:38,430 --> 00:14:42,689
<font color="#CCCCCC">know</font><font color="#E5E5E5"> MPLS and</font><font color="#CCCCCC"> bgp really well but maybe</font>

406
00:14:40,770 --> 00:14:43,829
not<font color="#CCCCCC"> so much software</font><font color="#E5E5E5"> we wanted to make</font>

407
00:14:42,690 --> 00:14:45,660
sure<font color="#E5E5E5"> that they didn't have to understand</font>

408
00:14:43,830 --> 00:14:47,370
the entire system to<font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> help us</font>

409
00:14:45,660 --> 00:14:49,530
<font color="#E5E5E5">with this problem</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> right there for</font>

410
00:14:47,370 --> 00:14:55,410
example<font color="#CCCCCC"> their BGP check or their step</font>

411
00:14:49,530 --> 00:14:57,270
that does<font color="#CCCCCC"> under a</font><font color="#E5E5E5"> mean of traffic so in</font>

412
00:14:55,410 --> 00:14:59,280
the<font color="#E5E5E5"> system or</font><font color="#CCCCCC"> in when I</font><font color="#E5E5E5"> talked</font><font color="#CCCCCC"> about</font>

413
00:14:57,270 --> 00:15:01,079
isolating the system or keeping the

414
00:14:59,280 --> 00:15:03,000
knowledge separate<font color="#E5E5E5"> the way we did that</font>

415
00:15:01,080 --> 00:15:05,340
<font color="#E5E5E5">is we we called units of work steps and</font>

416
00:15:03,000 --> 00:15:07,950
a step is<font color="#E5E5E5"> simply a compiled piece of</font>

417
00:15:05,340 --> 00:15:10,650
code<font color="#CCCCCC"> that is executed as a binary</font><font color="#E5E5E5"> in</font>

418
00:15:07,950 --> 00:15:14,430
doing so now we only<font color="#E5E5E5"> have to test and</font>

419
00:15:10,650 --> 00:15:15,390
develop<font color="#E5E5E5"> that specific step no longer</font>

420
00:15:14,430 --> 00:15:19,170
just<font color="#CCCCCC"> want to have to</font><font color="#E5E5E5"> run the entire</font>

421
00:15:15,390 --> 00:15:20,640
<font color="#E5E5E5">workflow or get a device back</font><font color="#CCCCCC"> to the</font>

422
00:15:19,170 --> 00:15:24,479
console prompts that<font color="#E5E5E5"> one at the</font>

423
00:15:20,640 --> 00:15:26,400
<font color="#E5E5E5">beginning you might expect so the system</font>

424
00:15:24,480 --> 00:15:27,990
<font color="#CCCCCC">supposably</font><font color="#E5E5E5"> is named</font><font color="#CCCCCC"> vending machine</font><font color="#E5E5E5"> it</font>

425
00:15:26,400 --> 00:15:29,760
was a perfect built workflow automation

426
00:15:27,990 --> 00:15:32,190
system that we<font color="#E5E5E5"> created on the network</font>

427
00:15:29,760 --> 00:15:34,560
team creates<font color="#E5E5E5"> physically around zero</font>

428
00:15:32,190 --> 00:15:36,720
touch provisioning and around is a very

429
00:15:34,560 --> 00:15:39,050
key point<font color="#CCCCCC"> here so as we started looking</font>

430
00:15:36,720 --> 00:15:41,130
<font color="#E5E5E5">at the zero touch provisioning solution</font>

431
00:15:39,050 --> 00:15:41,969
one thing we noticed<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that it was</font>

432
00:15:41,130 --> 00:15:44,519
<font color="#E5E5E5">great for a</font><font color="#CCCCCC"> part</font>

433
00:15:41,970 --> 00:15:45,989
<font color="#CCCCCC">in configuration</font><font color="#E5E5E5"> and code and the</font>

434
00:15:44,519 --> 00:15:47,579
devices<font color="#E5E5E5"> would self provision themselves</font>

435
00:15:45,989 --> 00:15:49,139
but then we lost<font color="#E5E5E5"> some visibility and</font>

436
00:15:47,579 --> 00:15:50,939
<font color="#CCCCCC">were like well what devices are</font>

437
00:15:49,139 --> 00:15:52,889
provision what devices are provisioning

438
00:15:50,939 --> 00:15:54,419
right now what devices<font color="#E5E5E5"> didn't really</font>

439
00:15:52,889 --> 00:15:58,939
<font color="#CCCCCC">even start because</font><font color="#E5E5E5"> something got wasn't</font>

440
00:15:54,419 --> 00:16:01,109
<font color="#E5E5E5">plugged in so this is</font><font color="#CCCCCC"> where we got</font><font color="#E5E5E5"> to</font>

441
00:15:58,939 --> 00:16:03,868
<font color="#E5E5E5">with those mops on the peering router</font>

442
00:16:01,109 --> 00:16:05,849
for example the things everything<font color="#E5E5E5"> except</font>

443
00:16:03,869 --> 00:16:08,069
for<font color="#E5E5E5"> a rack and second cabling has been</font>

444
00:16:05,849 --> 00:16:10,859
<font color="#E5E5E5">automated for those we're still waiting</font>

445
00:16:08,069 --> 00:16:12,209
for<font color="#E5E5E5"> some robots from Amazon but the</font>

446
00:16:10,859 --> 00:16:14,189
shipments<font color="#CCCCCC"> a bit late but</font><font color="#E5E5E5"> for right now</font>

447
00:16:12,209 --> 00:16:16,079
we have<font color="#E5E5E5"> VM configure as a command line</font>

448
00:16:14,189 --> 00:16:20,039
that<font color="#E5E5E5"> the deployment engineers run that</font>

449
00:16:16,079 --> 00:16:21,449
runs all of<font color="#E5E5E5"> this so enough about the</font>

450
00:16:20,039 --> 00:16:23,159
background let me go a bit<font color="#CCCCCC"> more</font>

451
00:16:21,449 --> 00:16:26,669
<font color="#CCCCCC">technical here</font><font color="#E5E5E5"> so is your touch</font>

452
00:16:23,159 --> 00:16:27,959
provisioning is a name that<font color="#CCCCCC"> is a quasi</font>

453
00:16:26,669 --> 00:16:30,629
standard<font color="#E5E5E5"> across a couple of the vendors</font>

454
00:16:27,959 --> 00:16:32,819
right now which<font color="#CCCCCC"> is just a method</font><font color="#E5E5E5"> of</font>

455
00:16:30,629 --> 00:16:35,879
<font color="#E5E5E5">provisioning device from a factory</font><font color="#CCCCCC"> in</font>

456
00:16:32,819 --> 00:16:37,679
blank state using DHCP<font color="#E5E5E5"> so a while</font>

457
00:16:35,879 --> 00:16:40,259
factory blank<font color="#E5E5E5"> a device that</font><font color="#CCCCCC"> supports</font>

458
00:16:37,679 --> 00:16:42,299
this will send a DSP message<font color="#CCCCCC"> over its</font>

459
00:16:40,259 --> 00:16:44,099
management port<font color="#E5E5E5"> or potentially over its</font>

460
00:16:42,299 --> 00:16:46,619
up links<font color="#E5E5E5"> to</font><font color="#CCCCCC"> depending</font><font color="#E5E5E5"> on the vendor and</font>

461
00:16:44,099 --> 00:16:49,649
it<font color="#E5E5E5"> encodes something the option of</font>

462
00:16:46,619 --> 00:16:52,049
option 64 vendor class with a string

463
00:16:49,649 --> 00:16:55,229
that contains<font color="#E5E5E5"> the better name the model</font>

464
00:16:52,049 --> 00:16:56,459
number and the<font color="#CCCCCC"> serial number the serial</font>

465
00:16:55,229 --> 00:16:59,059
<font color="#E5E5E5">number here is significant though</font>

466
00:16:56,459 --> 00:17:01,469
because<font color="#CCCCCC"> it allows you</font><font color="#E5E5E5"> to react</font>

467
00:16:59,059 --> 00:17:03,509
<font color="#CCCCCC">differently or uniquely</font><font color="#E5E5E5"> to this</font><font color="#CCCCCC"> request</font>

468
00:17:01,470 --> 00:17:06,899
on the<font color="#E5E5E5"> DHCP server based on who is</font>

469
00:17:03,509 --> 00:17:09,269
asking for for the<font color="#E5E5E5"> configuration so in</font>

470
00:17:06,898 --> 00:17:11,039
the case of<font color="#CCCCCC"> in our case we already</font><font color="#E5E5E5"> know</font>

471
00:17:09,269 --> 00:17:12,899
what serial number is what device

472
00:17:11,039 --> 00:17:14,490
<font color="#E5E5E5">specifically what name based on the</font>

473
00:17:12,898 --> 00:17:16,948
<font color="#E5E5E5">mapping of our inventory and receiving</font>

474
00:17:14,490 --> 00:17:18,269
system and in doing so you could respond

475
00:17:16,949 --> 00:17:20,490
differently from one device<font color="#E5E5E5"> to another</font>

476
00:17:18,269 --> 00:17:22,620
<font color="#E5E5E5">or choose not</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> respond if you want to</font>

477
00:17:20,490 --> 00:17:25,138
kind<font color="#E5E5E5"> of gate or control what devices are</font>

478
00:17:22,619 --> 00:17:26,758
<font color="#E5E5E5">allowed to provision so in the more</font>

479
00:17:25,138 --> 00:17:28,860
simple case<font color="#CCCCCC"> of zero</font><font color="#E5E5E5"> touch provision</font>

480
00:17:26,759 --> 00:17:30,389
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> across most of the vendors</font><font color="#CCCCCC"> that</font>

481
00:17:28,860 --> 00:17:33,139
<font color="#E5E5E5">supported today the simple case is</font>

482
00:17:30,389 --> 00:17:36,809
expects a response<font color="#E5E5E5"> of a config file</font>

483
00:17:33,139 --> 00:17:39,178
another option is a list of files<font color="#E5E5E5"> were</font>

484
00:17:36,809 --> 00:17:41,668
the config file<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> firmware image</font>

485
00:17:39,179 --> 00:17:42,929
are encoded in<font color="#CCCCCC"> in this response</font><font color="#E5E5E5"> a third</font>

486
00:17:41,669 --> 00:17:44,549
option<font color="#E5E5E5"> that several the vendors also</font>

487
00:17:42,929 --> 00:17:46,710
<font color="#E5E5E5">support is responding back with an</font>

488
00:17:44,549 --> 00:17:49,440
executable script<font color="#CCCCCC"> in one or more</font>

489
00:17:46,710 --> 00:17:51,480
<font color="#E5E5E5">languages so in our case we respond back</font>

490
00:17:49,440 --> 00:17:54,269
with<font color="#CCCCCC"> the script</font><font color="#E5E5E5"> which is simply an HP</font>

491
00:17:51,480 --> 00:17:55,350
path<font color="#CCCCCC"> to the device sees and then</font>

492
00:17:54,269 --> 00:17:57,300
downloads

493
00:17:55,350 --> 00:17:59,850
we provide<font color="#E5E5E5"> that HP web server that</font>

494
00:17:57,300 --> 00:18:03,810
<font color="#E5E5E5">responds back to the device and then</font><font color="#CCCCCC"> it</font>

495
00:17:59,850 --> 00:18:07,230
starts executing<font color="#CCCCCC"> that script so</font><font color="#E5E5E5"> you</font>

496
00:18:03,810 --> 00:18:08,730
might ask<font color="#E5E5E5"> the</font><font color="#CCCCCC"> question if zero-touch</font>

497
00:18:07,230 --> 00:18:11,850
<font color="#E5E5E5">provisioning can load both the</font>

498
00:18:08,730 --> 00:18:14,520
configuration file<font color="#E5E5E5"> and the firmware and</font>

499
00:18:11,850 --> 00:18:15,990
<font color="#CCCCCC">in generally and generally and also</font><font color="#E5E5E5"> that</font>

500
00:18:14,520 --> 00:18:18,480
triggers upgrading the device and the

501
00:18:15,990 --> 00:18:21,510
<font color="#E5E5E5">device self reboots why would we respond</font>

502
00:18:18,480 --> 00:18:23,040
back with<font color="#E5E5E5"> the script so in our case we</font>

503
00:18:21,510 --> 00:18:26,910
want<font color="#E5E5E5"> him to have better visibility and</font>

504
00:18:23,040 --> 00:18:28,379
connect and<font color="#E5E5E5"> build a feedback loop we</font>

505
00:18:26,910 --> 00:18:29,760
learned<font color="#E5E5E5"> of this problem actually</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> just</font>

506
00:18:28,380 --> 00:18:31,950
after going to one of our data<font color="#CCCCCC"> centers</font>

507
00:18:29,760 --> 00:18:35,310
<font color="#E5E5E5">also in Ireland about the same time and</font>

508
00:18:31,950 --> 00:18:37,860
we're like hey<font color="#CCCCCC"> let</font><font color="#E5E5E5"> me watch you build</font>

509
00:18:35,310 --> 00:18:39,120
this network using<font color="#CCCCCC"> zero touch</font><font color="#E5E5E5"> and our</font>

510
00:18:37,860 --> 00:18:41,490
deployment<font color="#E5E5E5"> guy is like cool</font>

511
00:18:39,120 --> 00:18:43,439
<font color="#E5E5E5">I have 62 for device 64 devices to turn</font>

512
00:18:41,490 --> 00:18:45,540
up today<font color="#E5E5E5"> we just got power</font><font color="#CCCCCC"> but they've</font>

513
00:18:43,440 --> 00:18:47,910
been<font color="#CCCCCC"> wracked for weeks he's like okay</font>

514
00:18:45,540 --> 00:18:50,040
this<font color="#E5E5E5"> is working how do I know it's</font>

515
00:18:47,910 --> 00:18:53,880
working what do I look at and we're like

516
00:18:50,040 --> 00:18:56,520
<font color="#E5E5E5">hmm build a strip ping them</font><font color="#CCCCCC"> I don't know</font>

517
00:18:53,880 --> 00:18:58,380
<font color="#CCCCCC">I</font><font color="#E5E5E5"> didn't have a very good response</font><font color="#CCCCCC"> and</font>

518
00:18:56,520 --> 00:19:00,750
the guy's like<font color="#CCCCCC"> well no I don't want to</font>

519
00:18:58,380 --> 00:19:02,010
do that<font color="#E5E5E5"> and so then we were like we</font><font color="#CCCCCC"> were</font>

520
00:19:00,750 --> 00:19:03,750
<font color="#CCCCCC">back to what drawing</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> the living</font>

521
00:19:02,010 --> 00:19:05,670
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> okay cool well let's</font><font color="#E5E5E5"> have the</font>

522
00:19:03,750 --> 00:19:07,590
device tell us when it started in when

523
00:19:05,670 --> 00:19:09,150
<font color="#CCCCCC">it finished so we built the script</font><font color="#E5E5E5"> and</font>

524
00:19:07,590 --> 00:19:11,250
the device basically downloads<font color="#E5E5E5"> the</font>

525
00:19:09,150 --> 00:19:13,230
script as part in<font color="#E5E5E5"> response</font><font color="#CCCCCC"> that DHCP</font>

526
00:19:11,250 --> 00:19:15,630
message and the first thing it<font color="#CCCCCC"> does is</font>

527
00:19:13,230 --> 00:19:17,400
<font color="#CCCCCC">it</font><font color="#E5E5E5"> makes an HP call to our service</font>

528
00:19:15,630 --> 00:19:19,860
vending<font color="#E5E5E5"> machine says hey I'm starting</font>

529
00:19:17,400 --> 00:19:21,330
<font color="#CCCCCC">and here's the serial number in our case</font>

530
00:19:19,860 --> 00:19:22,979
we already<font color="#E5E5E5"> have a job kind of pre stage</font>

531
00:19:21,330 --> 00:19:25,379
based on<font color="#CCCCCC"> devices coming</font><font color="#E5E5E5"> in and we're</font>

532
00:19:22,980 --> 00:19:27,600
like<font color="#E5E5E5"> okay cool this is job number five</font>

533
00:19:25,380 --> 00:19:30,570
and five<font color="#CCCCCC"> has now moved into</font><font color="#E5E5E5"> running or</font>

534
00:19:27,600 --> 00:19:32,790
active the<font color="#E5E5E5"> other part that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> did with</font>

535
00:19:30,570 --> 00:19:34,020
the script is<font color="#CCCCCC"> that as part of revision</font>

536
00:19:32,790 --> 00:19:36,620
we have to<font color="#E5E5E5"> download one or more files</font>

537
00:19:34,020 --> 00:19:38,460
for example<font color="#CCCCCC"> the firmware</font><font color="#E5E5E5"> the</font>

538
00:19:36,620 --> 00:19:40,379
configuration maybe some other scripts

539
00:19:38,460 --> 00:19:42,810
that we were on<font color="#E5E5E5"> the box and so we have</font>

540
00:19:40,380 --> 00:19:44,550
the<font color="#E5E5E5"> script log to us</font><font color="#CCCCCC"> remotely what</font><font color="#E5E5E5"> files</font>

541
00:19:42,810 --> 00:19:46,889
<font color="#E5E5E5">it's downloading and when they finish</font>

542
00:19:44,550 --> 00:19:49,590
which helps<font color="#E5E5E5"> us a lot in troubleshooting</font>

543
00:19:46,890 --> 00:19:51,150
<font color="#E5E5E5">because we have some</font><font color="#CCCCCC"> really overly</font>

544
00:19:49,590 --> 00:19:53,580
protective security<font color="#CCCCCC"> guys that change</font>

545
00:19:51,150 --> 00:19:54,870
<font color="#E5E5E5">firewall rules all</font><font color="#CCCCCC"> the time and so they</font>

546
00:19:53,580 --> 00:19:57,240
break provision<font color="#E5E5E5"> probably once a month</font>

547
00:19:54,870 --> 00:19:58,979
right<font color="#E5E5E5"> now with different fire rules but</font>

548
00:19:57,240 --> 00:20:00,960
now<font color="#E5E5E5"> because we have these log messages</font>

549
00:19:58,980 --> 00:20:02,580
we<font color="#CCCCCC"> can kind of see oh</font><font color="#E5E5E5"> this device tried</font>

550
00:20:00,960 --> 00:20:04,380
to<font color="#E5E5E5"> download from here</font><font color="#CCCCCC"> that didn't go</font>

551
00:20:02,580 --> 00:20:06,540
through let's go check firewall rules or

552
00:20:04,380 --> 00:20:07,860
let's check routing for<font color="#E5E5E5"> example and</font>

553
00:20:06,540 --> 00:20:08,909
finally<font color="#E5E5E5"> the</font><font color="#CCCCCC"> device tells us then when</font>

554
00:20:07,860 --> 00:20:10,500
it's<font color="#E5E5E5"> done</font>

555
00:20:08,910 --> 00:20:12,180
which now<font color="#E5E5E5"> lets a signal and start other</font>

556
00:20:10,500 --> 00:20:15,800
things in response<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> without anybody</font>

557
00:20:12,180 --> 00:20:18,330
kind of<font color="#CCCCCC"> end up to babysit</font><font color="#E5E5E5"> or watch it</font>

558
00:20:15,800 --> 00:20:20,610
<font color="#E5E5E5">now this is great at all at</font><font color="#CCCCCC"> first bought</font>

559
00:20:18,330 --> 00:20:24,030
<font color="#E5E5E5">it introduced some race conditions that</font>

560
00:20:20,610 --> 00:20:26,159
we saw in our case we do not

561
00:20:24,030 --> 00:20:27,629
predetermine the<font color="#E5E5E5"> management address or</font>

562
00:20:26,160 --> 00:20:30,900
that out of been a management address

563
00:20:27,630 --> 00:20:32,670
ahead in time<font color="#CCCCCC"> because it's well Suzy in</font>

564
00:20:30,900 --> 00:20:34,020
the<font color="#CCCCCC"> Pops because it's based on where</font>

565
00:20:32,670 --> 00:20:35,760
<font color="#E5E5E5">things are plugged in and the</font><font color="#CCCCCC"> layout is</font>

566
00:20:34,020 --> 00:20:37,020
different<font color="#E5E5E5"> for</font><font color="#CCCCCC"> each of our pops so we</font>

567
00:20:35,760 --> 00:20:38,310
kind of<font color="#E5E5E5"> let it go</font><font color="#CCCCCC"> free for him we're</font>

568
00:20:37,020 --> 00:20:40,350
like<font color="#CCCCCC"> just plug into any management</font>

569
00:20:38,310 --> 00:20:42,929
switch to any port<font color="#E5E5E5"> and then we'll assign</font>

570
00:20:40,350 --> 00:20:45,810
<font color="#CCCCCC">on-the-fly</font><font color="#E5E5E5"> so we did some</font><font color="#CCCCCC"> hooks on the</font>

571
00:20:42,930 --> 00:20:47,250
<font color="#CCCCCC">DSP process where we parse</font><font color="#E5E5E5"> option 82</font>

572
00:20:45,810 --> 00:20:49,169
<font color="#E5E5E5">which is in the</font><font color="#CCCCCC"> ISP world you're</font>

573
00:20:47,250 --> 00:20:51,090
probably<font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> with which passes on</font>

574
00:20:49,170 --> 00:20:53,130
things like<font color="#CCCCCC"> the physical port and the</font>

575
00:20:51,090 --> 00:20:55,230
feel<font color="#E5E5E5"> and the switch and we</font><font color="#CCCCCC"> assign</font><font color="#E5E5E5"> the</font>

576
00:20:53,130 --> 00:20:56,520
address in<font color="#E5E5E5"> real time but that means we</font>

577
00:20:55,230 --> 00:20:57,660
have to<font color="#CCCCCC"> generate configuration in real</font>

578
00:20:56,520 --> 00:21:00,540
time<font color="#CCCCCC"> before we try</font><font color="#E5E5E5"> to load the</font>

579
00:20:57,660 --> 00:21:02,910
configuration<font color="#E5E5E5"> so in doing in doing that</font>

580
00:21:00,540 --> 00:21:04,560
we<font color="#E5E5E5"> realized we</font><font color="#CCCCCC"> needed a way to delay</font>

581
00:21:02,910 --> 00:21:07,350
<font color="#CCCCCC">zero touch provisioning from running on</font>

582
00:21:04,560 --> 00:21:09,300
<font color="#E5E5E5">this device without breaking it</font><font color="#CCCCCC"> so the</font>

583
00:21:07,350 --> 00:21:11,669
way we do that is<font color="#E5E5E5"> that we shimmed into</font>

584
00:21:09,300 --> 00:21:13,290
this<font color="#CCCCCC"> HP web stack where the device tries</font>

585
00:21:11,670 --> 00:21:16,110
to<font color="#E5E5E5"> download the script and we're like</font>

586
00:21:13,290 --> 00:21:17,700
<font color="#E5E5E5">okay I see here your device X because it</font>

587
00:21:16,110 --> 00:21:19,080
<font color="#E5E5E5">passes the</font><font color="#CCCCCC"> chernomor in the</font><font color="#E5E5E5"> request</font><font color="#CCCCCC"> and</font>

588
00:21:17,700 --> 00:21:21,720
you're trying to<font color="#CCCCCC"> download this</font><font color="#E5E5E5"> trip are</font>

589
00:21:19,080 --> 00:21:23,699
you allowed to<font color="#CCCCCC"> downloaded script and so</font>

590
00:21:21,720 --> 00:21:25,230
we check and<font color="#E5E5E5"> look at the job and so in</font>

591
00:21:23,700 --> 00:21:28,110
this I'm<font color="#CCCCCC"> trying to visualize we have</font><font color="#E5E5E5"> two</font>

592
00:21:25,230 --> 00:21:30,290
three<font color="#E5E5E5"> steps that have</font><font color="#CCCCCC"> to run before</font><font color="#E5E5E5"> zero</font>

593
00:21:28,110 --> 00:21:34,469
touch<font color="#CCCCCC"> two</font><font color="#E5E5E5"> and green have completed and</font>

594
00:21:30,290 --> 00:21:36,060
one in white is<font color="#E5E5E5"> still running</font><font color="#CCCCCC"> so the one</font>

595
00:21:34,470 --> 00:21:37,710
in white<font color="#E5E5E5"> we want to guarantee that it</font>

596
00:21:36,060 --> 00:21:39,570
completes running<font color="#CCCCCC"> before we</font><font color="#E5E5E5"> start zero</font>

597
00:21:37,710 --> 00:21:41,550
touch so in this case we will raise a

598
00:21:39,570 --> 00:21:43,679
four floor not found message<font color="#E5E5E5"> or error</font>

599
00:21:41,550 --> 00:21:45,389
back to the<font color="#E5E5E5"> device and basically crash</font>

600
00:21:43,680 --> 00:21:47,880
its DHCP for<font color="#CCCCCC"> errors process here of</font>

601
00:21:45,390 --> 00:21:48,990
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> zero touch the vendors that</font>

602
00:21:47,880 --> 00:21:50,940
<font color="#E5E5E5">have implemented zero touch to see</font>

603
00:21:48,990 --> 00:21:52,440
<font color="#E5E5E5">basically do failure handling in an</font>

604
00:21:50,940 --> 00:21:54,450
infinite loop<font color="#CCCCCC"> or they're</font><font color="#E5E5E5"> like okay</font>

605
00:21:52,440 --> 00:21:56,400
something happened<font color="#CCCCCC"> let me try again</font>

606
00:21:54,450 --> 00:21:58,290
you indeed<font color="#E5E5E5"> you people request you</font>

607
00:21:56,400 --> 00:22:00,060
attempt to download this lets us by

608
00:21:58,290 --> 00:22:01,860
sometime<font color="#E5E5E5"> and then guarantee that other</font>

609
00:22:00,060 --> 00:22:05,220
steps have finished before we respond

610
00:22:01,860 --> 00:22:07,199
back with<font color="#E5E5E5"> the agent once we give the</font>

611
00:22:05,220 --> 00:22:08,550
agent<font color="#E5E5E5"> back this is just a view of kind</font>

612
00:22:07,200 --> 00:22:10,830
of<font color="#E5E5E5"> an actual</font><font color="#CCCCCC"> workflow where we have</font>

613
00:22:08,550 --> 00:22:13,620
different<font color="#E5E5E5"> groups that run one or</font><font color="#CCCCCC"> more</font>

614
00:22:10,830 --> 00:22:15,510
steps<font color="#E5E5E5"> either in serial or parallel and</font>

615
00:22:13,620 --> 00:22:16,979
in<font color="#E5E5E5"> this case a workflow showing where we</font>

616
00:22:15,510 --> 00:22:20,640
rebuild a device so we erase it before

617
00:22:16,980 --> 00:22:22,690
zero touch this is just another view

618
00:22:20,640 --> 00:22:26,110
here of<font color="#E5E5E5"> things that might run</font>

619
00:22:22,690 --> 00:22:28,180
after the device reboots and<font color="#E5E5E5"> we check on</font>

620
00:22:26,110 --> 00:22:30,399
things<font color="#E5E5E5"> like are you up yet with trying</font>

621
00:22:28,180 --> 00:22:32,590
<font color="#CCCCCC">to ssh in and run some commands or the</font>

622
00:22:30,400 --> 00:22:33,880
<font color="#CCCCCC">BGP</font><font color="#E5E5E5"> appears up yet as well because we're</font>

623
00:22:32,590 --> 00:22:35,679
doing<font color="#E5E5E5"> this over management so we don't</font>

624
00:22:33,880 --> 00:22:37,870
<font color="#E5E5E5">actually know</font><font color="#CCCCCC"> if the up links work until</font>

625
00:22:35,680 --> 00:22:39,700
<font color="#E5E5E5">we check on those and then finally you</font>

626
00:22:37,870 --> 00:22:41,409
just automated the active on draining or

627
00:22:39,700 --> 00:22:44,790
<font color="#E5E5E5">placing the device</font><font color="#CCCCCC"> into production</font><font color="#E5E5E5"> as</font>

628
00:22:41,410 --> 00:22:49,270
part of<font color="#CCCCCC"> this workflow</font><font color="#E5E5E5"> now that does take</font>

629
00:22:44,790 --> 00:22:50,980
some what's the word basically some

630
00:22:49,270 --> 00:22:52,420
confidence in<font color="#E5E5E5"> your tooling to know that</font>

631
00:22:50,980 --> 00:22:53,950
it<font color="#E5E5E5"> is safe</font><font color="#CCCCCC"> to put in production but once</font>

632
00:22:52,420 --> 00:22:57,430
you<font color="#E5E5E5"> get to the point of building enough</font>

633
00:22:53,950 --> 00:22:59,950
checks and enough<font color="#E5E5E5"> verification then it's</font>

634
00:22:57,430 --> 00:23:01,510
there's no no point of delaying<font color="#E5E5E5"> or</font>

635
00:22:59,950 --> 00:23:04,690
making that manual and so we just build

636
00:23:01,510 --> 00:23:06,070
<font color="#E5E5E5">that into it so stepping back</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> minute</font>

637
00:23:04,690 --> 00:23:08,740
when<font color="#E5E5E5"> I talked about simplifying and</font>

638
00:23:06,070 --> 00:23:10,240
building<font color="#E5E5E5"> for the network engineer what</font>

639
00:23:08,740 --> 00:23:12,610
we eventually got<font color="#CCCCCC"> to is a</font><font color="#E5E5E5"> point where</font>

640
00:23:10,240 --> 00:23:14,200
<font color="#CCCCCC">our team of four had</font><font color="#E5E5E5"> 30 more network</font>

641
00:23:12,610 --> 00:23:16,419
engineers working<font color="#E5E5E5"> on this problem across</font>

642
00:23:14,200 --> 00:23:19,390
backbone<font color="#CCCCCC"> data center and</font><font color="#E5E5E5"> deployment</font>

643
00:23:16,420 --> 00:23:21,010
teams helping us it was a<font color="#E5E5E5"> little bit</font>

644
00:23:19,390 --> 00:23:22,960
crazy to<font color="#E5E5E5"> think about it but we</font><font color="#CCCCCC"> actually</font>

645
00:23:21,010 --> 00:23:24,700
<font color="#E5E5E5">have provisioning now for optical</font>

646
00:23:22,960 --> 00:23:27,010
devices for<font color="#CCCCCC"> powerstrips</font>

647
00:23:24,700 --> 00:23:28,270
for all kinds of devices<font color="#E5E5E5"> and it was only</font>

648
00:23:27,010 --> 00:23:30,000
<font color="#E5E5E5">in response to all these people</font><font color="#CCCCCC"> that</font>

649
00:23:28,270 --> 00:23:33,010
<font color="#CCCCCC">just kind of</font><font color="#E5E5E5"> joined us and helped us</font>

650
00:23:30,000 --> 00:23:34,390
this is a quick view of<font color="#CCCCCC"> what</font><font color="#E5E5E5"> exactly</font>

651
00:23:33,010 --> 00:23:36,640
they're writing so<font color="#CCCCCC"> that you can kind of</font>

652
00:23:34,390 --> 00:23:38,170
see how we simplify<font color="#CCCCCC"> this so when</font><font color="#E5E5E5"> I</font>

653
00:23:36,640 --> 00:23:40,000
talked about<font color="#E5E5E5"> a step being a compiled</font>

654
00:23:38,170 --> 00:23:43,300
piece of code this is an example with

655
00:23:40,000 --> 00:23:45,190
Python<font color="#E5E5E5"> all of our steps have some basic</font>

656
00:23:43,300 --> 00:23:46,810
<font color="#CCCCCC">boilerplate that</font><font color="#E5E5E5"> they implement under</font>

657
00:23:45,190 --> 00:23:49,210
this function<font color="#E5E5E5"> of main these first three</font>

658
00:23:46,810 --> 00:23:52,060
lines where we parse input over

659
00:23:49,210 --> 00:23:53,980
<font color="#CCCCCC">standardin as json</font><font color="#E5E5E5"> and decode things</font>

660
00:23:52,060 --> 00:23:56,530
like the<font color="#E5E5E5"> host name</font><font color="#CCCCCC"> their serial number</font>

661
00:23:53,980 --> 00:23:59,170
the job number and provide that data in

662
00:23:56,530 --> 00:24:00,520
a simple interface<font color="#E5E5E5"> to the step and so</font>

663
00:23:59,170 --> 00:24:03,190
this is an example of<font color="#E5E5E5"> generating</font>

664
00:24:00,520 --> 00:24:06,510
configuration<font color="#E5E5E5"> which has two methods</font>

665
00:24:03,190 --> 00:24:08,830
build configs<font color="#E5E5E5"> and verify configs</font><font color="#CCCCCC"> and</font>

666
00:24:06,510 --> 00:24:10,720
this is just<font color="#E5E5E5"> an example of some Python</font>

667
00:24:08,830 --> 00:24:12,159
code making<font color="#E5E5E5"> a thrift request to a remote</font>

668
00:24:10,720 --> 00:24:13,870
server<font color="#E5E5E5"> and saying hey go build this</font>

669
00:24:12,160 --> 00:24:16,360
<font color="#CCCCCC">configuration for me and waiting for</font><font color="#E5E5E5"> the</font>

670
00:24:13,870 --> 00:24:18,929
response<font color="#E5E5E5"> and then finally just another</font>

671
00:24:16,360 --> 00:24:21,580
example of verifying the configurations

672
00:24:18,930 --> 00:24:23,290
<font color="#CCCCCC">just to make sure</font><font color="#E5E5E5"> that yes we are able</font>

673
00:24:21,580 --> 00:24:26,350
<font color="#E5E5E5">to download them the same way this the</font>

674
00:24:23,290 --> 00:24:28,510
agent might<font color="#E5E5E5"> download them this is</font>

675
00:24:26,350 --> 00:24:31,270
<font color="#E5E5E5">another view where we pass in again that</font>

676
00:24:28,510 --> 00:24:32,830
<font color="#E5E5E5">JSON string to the step so as we run the</font>

677
00:24:31,270 --> 00:24:34,970
step over<font color="#CCCCCC"> the command line we literally</font>

678
00:24:32,830 --> 00:24:37,490
echo in the string that<font color="#CCCCCC"> has the met</font>

679
00:24:34,970 --> 00:24:38,600
data that it needs<font color="#E5E5E5"> and then logging is</font>

680
00:24:37,490 --> 00:24:39,830
sent<font color="#E5E5E5"> to standard error and</font><font color="#CCCCCC"> we just</font>

681
00:24:38,600 --> 00:24:43,699
capture that and expose<font color="#E5E5E5"> that with the</font>

682
00:24:39,830 --> 00:24:45,379
job message or the job the result<font color="#E5E5E5"> of</font>

683
00:24:43,700 --> 00:24:47,059
<font color="#E5E5E5">this step is just law assent to vending</font>

684
00:24:45,380 --> 00:24:51,350
machine through links exit codes so we

685
00:24:47,059 --> 00:24:53,090
just<font color="#E5E5E5"> signal success or failure and with</font>

686
00:24:51,350 --> 00:24:54,949
that I'd like<font color="#CCCCCC"> to welcome Brendon Bennett</font>

687
00:24:53,090 --> 00:24:57,168
who's<font color="#CCCCCC"> going to dive into more</font><font color="#E5E5E5"> of the</font>

688
00:24:54,950 --> 00:25:02,299
details<font color="#CCCCCC"> of</font><font color="#E5E5E5"> how the</font><font color="#CCCCCC"> backend of vending</font>

689
00:24:57,169 --> 00:25:04,490
machine works excellent hello

690
00:25:02,299 --> 00:25:09,889
excellent well<font color="#E5E5E5"> thank you very much David</font>

691
00:25:04,490 --> 00:25:11,720
so I want<font color="#E5E5E5"> to talk a little bit about the</font>

692
00:25:09,890 --> 00:25:13,220
<font color="#E5E5E5">the backend details of vending machine</font>

693
00:25:11,720 --> 00:25:16,789
and some of the<font color="#E5E5E5"> decisions that we made</font>

694
00:25:13,220 --> 00:25:18,620
along<font color="#E5E5E5"> the</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> so to start off four of us</font>

695
00:25:16,789 --> 00:25:20,240
got<font color="#E5E5E5"> together and</font><font color="#CCCCCC"> we started looking at</font>

696
00:25:18,620 --> 00:25:22,370
you know if we had<font color="#E5E5E5"> to do things over</font>

697
00:25:20,240 --> 00:25:25,730
<font color="#CCCCCC">again</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> would we do things differently</font>

698
00:25:22,370 --> 00:25:28,428
<font color="#CCCCCC">so first of all the system had to</font><font color="#E5E5E5"> be</font>

699
00:25:25,730 --> 00:25:29,929
very flexible<font color="#CCCCCC"> and support</font><font color="#E5E5E5"> rapid</font>

700
00:25:28,429 --> 00:25:31,010
<font color="#E5E5E5">deployment so multiple engineers need to</font>

701
00:25:29,929 --> 00:25:33,350
be able to<font color="#E5E5E5"> work on the</font><font color="#CCCCCC"> system at one</font>

702
00:25:31,010 --> 00:25:35,510
time<font color="#CCCCCC"> so how do you organize you know one</font>

703
00:25:33,350 --> 00:25:37,969
piece of code that<font color="#E5E5E5"> everybody needs</font>

704
00:25:35,510 --> 00:25:42,620
access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the system also need to be</font>

705
00:25:37,970 --> 00:25:44,120
extremely<font color="#E5E5E5"> scalable and fast so Facebook</font>

706
00:25:42,620 --> 00:25:45,979
<font color="#E5E5E5">is building tons of data centers we're</font>

707
00:25:44,120 --> 00:25:48,530
building tons of pops were constantly

708
00:25:45,980 --> 00:25:51,440
<font color="#E5E5E5">refreshing the network so it needed to</font>

709
00:25:48,530 --> 00:25:53,299
<font color="#CCCCCC">be extremely</font><font color="#E5E5E5"> fast so</font><font color="#CCCCCC"> that engineers</font>

710
00:25:51,440 --> 00:25:54,830
<font color="#E5E5E5">weren't waiting on the data centers or</font>

711
00:25:53,299 --> 00:25:56,150
<font color="#E5E5E5">the</font><font color="#CCCCCC"> pops to</font><font color="#E5E5E5"> be built and</font><font color="#CCCCCC"> you'd be</font>

712
00:25:54,830 --> 00:25:58,549
scalable so that we can run multiple

713
00:25:56,150 --> 00:26:00,200
these jobs at the same time it also<font color="#E5E5E5"> need</font>

714
00:25:58,549 --> 00:26:01,820
to be very resilient<font color="#E5E5E5"> building any</font>

715
00:26:00,200 --> 00:26:04,220
distributed<font color="#E5E5E5"> system</font><font color="#CCCCCC"> or interacting</font><font color="#E5E5E5"> with a</font>

716
00:26:01,820 --> 00:26:06,350
distributed system<font color="#CCCCCC"> things go</font><font color="#E5E5E5"> wrong and</font>

717
00:26:04,220 --> 00:26:08,480
<font color="#E5E5E5">you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to be able to react</font><font color="#CCCCCC"> to that and</font>

718
00:26:06,350 --> 00:26:11,330
<font color="#CCCCCC">then finally need to be predictable</font><font color="#E5E5E5"> when</font>

719
00:26:08,480 --> 00:26:12,740
a deployment engineer<font color="#E5E5E5"> types in a command</font>

720
00:26:11,330 --> 00:26:14,480
on<font color="#E5E5E5"> the command line</font><font color="#CCCCCC"> they should know</font>

721
00:26:12,740 --> 00:26:17,179
exactly<font color="#E5E5E5"> what's going to happen</font><font color="#CCCCCC"> this kind</font>

722
00:26:14,480 --> 00:26:19,730
<font color="#E5E5E5">of gains</font><font color="#CCCCCC"> confidence into the system</font><font color="#E5E5E5"> so</font>

723
00:26:17,179 --> 00:26:21,020
here is a very high-level overview of

724
00:26:19,730 --> 00:26:23,809
<font color="#CCCCCC">the</font><font color="#E5E5E5"> system</font>

725
00:26:21,020 --> 00:26:25,908
we took the system we split it into two

726
00:26:23,809 --> 00:26:27,408
separate<font color="#E5E5E5"> parts we have</font><font color="#CCCCCC"> the controller</font>

727
00:26:25,909 --> 00:26:30,049
which<font color="#CCCCCC"> is kind of the hub of the system</font>

728
00:26:27,409 --> 00:26:33,650
and the executor is the executor czar

729
00:26:30,049 --> 00:26:35,000
nothing more than a<font color="#E5E5E5"> dumb worker queue</font>

730
00:26:33,650 --> 00:26:37,940
based system

731
00:26:35,000 --> 00:26:39,740
tying these two pieces<font color="#E5E5E5"> together</font><font color="#CCCCCC"> we have</font>

732
00:26:37,940 --> 00:26:42,169
a my sequel database which<font color="#E5E5E5"> you can see</font>

733
00:26:39,740 --> 00:26:44,390
here<font color="#E5E5E5"> on the left</font><font color="#CCCCCC"> the my sequel database</font>

734
00:26:42,169 --> 00:26:45,880
<font color="#E5E5E5">keep state about</font><font color="#CCCCCC"> the system</font><font color="#E5E5E5"> that allows</font>

735
00:26:44,390 --> 00:26:48,140
us<font color="#E5E5E5"> to you</font><font color="#CCCCCC"> know build this out</font>

736
00:26:45,880 --> 00:26:48,920
distributed<font color="#CCCCCC"> lis</font><font color="#E5E5E5"> and then we used a</font>

737
00:26:48,140 --> 00:26:52,010
zookeeper<font color="#CCCCCC"> Bay</font>

738
00:26:48,920 --> 00:26:56,720
<font color="#E5E5E5">q so this is a</font><font color="#CCCCCC"> patchy zookeeper and it</font>

739
00:26:52,010 --> 00:26:59,600
allows distributed<font color="#E5E5E5"> consistency across</font>

740
00:26:56,720 --> 00:27:01,310
multiple systems<font color="#CCCCCC"> to work</font><font color="#E5E5E5"> together and we</font>

741
00:26:59,600 --> 00:27:03,530
built a queue based<font color="#E5E5E5"> off of that and I'll</font>

742
00:27:01,310 --> 00:27:06,110
talk a<font color="#E5E5E5"> little bit about that in a second</font>

743
00:27:03,530 --> 00:27:07,910
so the controllers<font color="#CCCCCC"> the controllers are</font>

744
00:27:06,110 --> 00:27:10,909
responsible<font color="#E5E5E5"> for two things really</font><font color="#CCCCCC"> the</font>

745
00:27:07,910 --> 00:27:12,710
controllers are<font color="#E5E5E5"> our API into the system</font>

746
00:27:10,910 --> 00:27:14,930
<font color="#E5E5E5">so if any other systems need</font><font color="#CCCCCC"> to interact</font>

747
00:27:12,710 --> 00:27:20,240
with<font color="#E5E5E5"> this</font><font color="#CCCCCC"> it goes through that</font>

748
00:27:14,930 --> 00:27:23,120
<font color="#CCCCCC">controller it is also our</font><font color="#E5E5E5"> VM a CLI</font>

749
00:27:20,240 --> 00:27:25,310
client that the engineers work with are

750
00:27:23,120 --> 00:27:30,080
nothing more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> an API client into</font>

751
00:27:25,310 --> 00:27:32,000
that API server<font color="#CCCCCC"> the we use a path or</font>

752
00:27:30,080 --> 00:27:34,220
excuse me<font color="#E5E5E5"> we use thrift for this which</font>

753
00:27:32,000 --> 00:27:37,160
is<font color="#CCCCCC"> very similar</font><font color="#E5E5E5"> to Google protobufs or</font>

754
00:27:34,220 --> 00:27:38,330
gr<font color="#E5E5E5"> PC if you're familiar with that the</font>

755
00:27:37,160 --> 00:27:40,760
other part<font color="#CCCCCC"> that the controller actually</font>

756
00:27:38,330 --> 00:27:42,439
<font color="#E5E5E5">handles is</font><font color="#CCCCCC"> queuing actually taking the</font>

757
00:27:40,760 --> 00:27:46,310
steps finding out what steps<font color="#CCCCCC"> around</font><font color="#E5E5E5"> and</font>

758
00:27:42,440 --> 00:27:49,340
queuing them into into the zookeeper

759
00:27:46,310 --> 00:27:50,960
queue so this is an example of<font color="#E5E5E5"> what the</font>

760
00:27:49,340 --> 00:27:53,510
queue looks like<font color="#E5E5E5"> so once the controller</font>

761
00:27:50,960 --> 00:27:56,090
<font color="#CCCCCC">decides what steps need to be run</font><font color="#E5E5E5"> based</font>

762
00:27:53,510 --> 00:27:58,629
off of what device we're building<font color="#E5E5E5"> we</font>

763
00:27:56,090 --> 00:28:01,070
added into<font color="#CCCCCC"> this global</font><font color="#E5E5E5"> queue as</font>

764
00:27:58,630 --> 00:28:03,140
additional jobs are running<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> same</font>

765
00:28:01,070 --> 00:28:04,490
<font color="#E5E5E5">time or additional step seemed to be</font>

766
00:28:03,140 --> 00:28:06,740
<font color="#E5E5E5">queue at the same time they get added</font>

767
00:28:04,490 --> 00:28:08,330
down to the bottom<font color="#E5E5E5"> so we pop from</font><font color="#CCCCCC"> the</font>

768
00:28:06,740 --> 00:28:11,990
top of the queue so it's<font color="#CCCCCC"> very</font><font color="#E5E5E5"> simple</font>

769
00:28:08,330 --> 00:28:14,510
from<font color="#E5E5E5"> that point of view so an executor</font>

770
00:28:11,990 --> 00:28:18,410
<font color="#E5E5E5">when an executor is ready to handle some</font>

771
00:28:14,510 --> 00:28:20,660
work<font color="#E5E5E5"> it will first take a lock against</font>

772
00:28:18,410 --> 00:28:22,460
the item in<font color="#E5E5E5"> the queue</font><font color="#CCCCCC"> we take a lock</font>

773
00:28:20,660 --> 00:28:24,530
<font color="#CCCCCC">just in case something</font><font color="#E5E5E5"> happens that</font>

774
00:28:22,460 --> 00:28:26,240
executor<font color="#E5E5E5"> we don't actually delete it or</font>

775
00:28:24,530 --> 00:28:27,530
pop<font color="#CCCCCC"> it from the queue we are we wanted</font>

776
00:28:26,240 --> 00:28:29,330
<font color="#E5E5E5">to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that stays on the queue but</font>

777
00:28:27,530 --> 00:28:32,389
we lock it so that no other<font color="#E5E5E5"> executor can</font>

778
00:28:29,330 --> 00:28:34,610
touch it<font color="#CCCCCC"> the executor then at that point</font>

779
00:28:32,390 --> 00:28:36,830
<font color="#CCCCCC">will go out</font><font color="#E5E5E5"> to a repository and download</font>

780
00:28:34,610 --> 00:28:40,219
the<font color="#E5E5E5"> latest version</font><font color="#CCCCCC"> of whatever</font><font color="#E5E5E5"> step it's</font>

781
00:28:36,830 --> 00:28:44,090
running as<font color="#E5E5E5"> David</font><font color="#CCCCCC"> mentioned before each</font>

782
00:28:40,220 --> 00:28:46,970
step<font color="#E5E5E5"> is its own</font><font color="#CCCCCC"> contain contained binary</font>

783
00:28:44,090 --> 00:28:48,610
or<font color="#CCCCCC"> contained</font><font color="#E5E5E5"> script</font><font color="#CCCCCC"> and so this</font><font color="#E5E5E5"> allows</font>

784
00:28:46,970 --> 00:28:50,360
our engineers<font color="#E5E5E5"> to actually write</font>

785
00:28:48,610 --> 00:28:52,459
asynchronously if you want to think<font color="#E5E5E5"> of</font>

786
00:28:50,360 --> 00:28:54,649
it that<font color="#E5E5E5"> way</font><font color="#CCCCCC"> so our engineers</font><font color="#E5E5E5"> can write</font>

787
00:28:52,460 --> 00:28:56,510
their steps<font color="#CCCCCC"> publish them to this</font>

788
00:28:54,650 --> 00:28:58,130
repository<font color="#E5E5E5"> and we'll always fetch the</font>

789
00:28:56,510 --> 00:29:00,050
latest version<font color="#E5E5E5"> we don't have to redeploy</font>

790
00:28:58,130 --> 00:29:01,580
<font color="#E5E5E5">the backend and we can have multiple</font>

791
00:29:00,050 --> 00:29:03,710
engineers<font color="#E5E5E5"> work on different</font><font color="#CCCCCC"> parts of the</font>

792
00:29:01,580 --> 00:29:05,750
system<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> same time</font>

793
00:29:03,710 --> 00:29:08,750
so once<font color="#E5E5E5"> we've pulled down that latest</font>

794
00:29:05,750 --> 00:29:10,850
version<font color="#CCCCCC"> the executor will</font><font color="#E5E5E5"> then as David</font>

795
00:29:08,750 --> 00:29:12,799
<font color="#E5E5E5">mentioned before take</font><font color="#CCCCCC"> adjacent payload</font>

796
00:29:10,850 --> 00:29:16,879
about the metadata the job and pass it

797
00:29:12,799 --> 00:29:20,120
<font color="#CCCCCC">into</font><font color="#E5E5E5"> that into that step via standard in</font>

798
00:29:16,880 --> 00:29:21,889
and then<font color="#E5E5E5"> that step will report</font><font color="#CCCCCC"> logs and</font>

799
00:29:20,120 --> 00:29:26,090
other status<font color="#CCCCCC"> information across standard</font>

800
00:29:21,889 --> 00:29:28,370
air<font color="#E5E5E5"> finally</font><font color="#CCCCCC"> when it ends the executor</font>

801
00:29:26,090 --> 00:29:31,519
will<font color="#E5E5E5"> look at that</font><font color="#CCCCCC"> the exit</font><font color="#E5E5E5"> code of</font>

802
00:29:28,370 --> 00:29:33,199
whatever step it was running<font color="#CCCCCC"> and in</font><font color="#E5E5E5"> the</font>

803
00:29:31,519 --> 00:29:36,769
case<font color="#E5E5E5"> and report that</font><font color="#CCCCCC"> back to</font><font color="#E5E5E5"> the</font>

804
00:29:33,200 --> 00:29:38,389
controller<font color="#E5E5E5"> in the case</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> everything's</font>

805
00:29:36,769 --> 00:29:39,830
fine<font color="#CCCCCC"> the controller will then queue the</font>

806
00:29:38,389 --> 00:29:42,799
<font color="#E5E5E5">next group and the next steps</font><font color="#CCCCCC"> that are</font>

807
00:29:39,830 --> 00:29:44,658
available<font color="#CCCCCC"> if something went</font><font color="#E5E5E5"> wrong for</font>

808
00:29:42,799 --> 00:29:46,879
example<font color="#E5E5E5"> the controller will actually</font>

809
00:29:44,659 --> 00:29:49,549
<font color="#CCCCCC">riku the entry and you can actually see</font>

810
00:29:46,879 --> 00:29:51,529
here circled in purple<font color="#CCCCCC"> weary queued the</font>

811
00:29:49,549 --> 00:29:53,600
entry as a<font color="#CCCCCC"> brand-new</font><font color="#E5E5E5"> entry we</font><font color="#CCCCCC"> pop</font><font color="#E5E5E5"> the</font>

812
00:29:51,529 --> 00:29:59,059
original one and we do this<font color="#E5E5E5"> to</font><font color="#CCCCCC"> prevent</font>

813
00:29:53,600 --> 00:30:01,129
<font color="#E5E5E5">head of line blocking so that that</font>

814
00:29:59,059 --> 00:30:03,980
functionality<font color="#E5E5E5"> that we just talked about</font>

815
00:30:01,129 --> 00:30:05,480
it's called retries<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> very</font>

816
00:30:03,980 --> 00:30:06,679
important when working with a lot<font color="#CCCCCC"> of</font>

817
00:30:05,480 --> 00:30:08,629
<font color="#E5E5E5">different systems in a you know</font>

818
00:30:06,679 --> 00:30:12,100
distributed environment like<font color="#E5E5E5"> ice talked</font>

819
00:30:08,629 --> 00:30:15,408
<font color="#E5E5E5">about before</font><font color="#CCCCCC"> so it is very common for</font>

820
00:30:12,100 --> 00:30:16,759
something to go<font color="#E5E5E5"> wrong</font><font color="#CCCCCC"> especially when</font>

821
00:30:15,409 --> 00:30:19,190
you're doing many many many of these

822
00:30:16,759 --> 00:30:22,250
<font color="#E5E5E5">jobs</font><font color="#CCCCCC"> so if something goes wrong for</font>

823
00:30:19,190 --> 00:30:23,720
<font color="#CCCCCC">example a server that</font><font color="#E5E5E5"> crashes</font><font color="#CCCCCC"> usually</font>

824
00:30:22,250 --> 00:30:25,279
there's some system to<font color="#CCCCCC"> help</font><font color="#E5E5E5"> you redirect</font>

825
00:30:23,720 --> 00:30:29,059
<font color="#E5E5E5">to a different server and your next</font>

826
00:30:25,279 --> 00:30:30,529
request<font color="#E5E5E5"> Ward find here at Facebook</font><font color="#CCCCCC"> this</font>

827
00:30:29,059 --> 00:30:33,918
happens quite<font color="#E5E5E5"> a bit</font><font color="#CCCCCC"> and we got very used</font>

828
00:30:30,529 --> 00:30:36,470
<font color="#CCCCCC">to doing it so we have something that we</font>

829
00:30:33,919 --> 00:30:38,210
call retrials<font color="#E5E5E5"> retrials are nothing more</font>

830
00:30:36,470 --> 00:30:40,159
<font color="#E5E5E5">than</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> block of code that we put a</font>

831
00:30:38,210 --> 00:30:41,779
little decorator around or some sort<font color="#CCCCCC"> of</font>

832
00:30:40,159 --> 00:30:45,019
logic around<font color="#E5E5E5"> it to say go ahead</font><font color="#CCCCCC"> and</font>

833
00:30:41,779 --> 00:30:46,460
<font color="#E5E5E5">retry this X amount of times and wait X</font>

834
00:30:45,019 --> 00:30:49,250
<font color="#E5E5E5">amount of minutes or seconds in between</font>

835
00:30:46,460 --> 00:30:50,629
<font color="#CCCCCC">the tries to</font><font color="#E5E5E5"> to you know have some sort</font>

836
00:30:49,250 --> 00:30:54,110
of back off so we're not just<font color="#CCCCCC"> hammering</font>

837
00:30:50,629 --> 00:30:56,449
or making the problem worse<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is this</font>

838
00:30:54,110 --> 00:30:58,639
is<font color="#E5E5E5"> really great</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> what we found is</font>

839
00:30:56,450 --> 00:31:00,409
that because there's<font color="#E5E5E5"> so much different</font>

840
00:30:58,639 --> 00:31:02,330
<font color="#E5E5E5">code written by different people that</font>

841
00:31:00,409 --> 00:31:05,269
retry Buhl's sometimes aren't

842
00:31:02,330 --> 00:31:07,129
<font color="#CCCCCC">thought-out</font><font color="#E5E5E5"> throughout the system we had</font>

843
00:31:05,269 --> 00:31:09,769
an<font color="#E5E5E5"> example of a piece of</font><font color="#CCCCCC"> code and</font>

844
00:31:07,129 --> 00:31:11,990
network in in net inch<font color="#CCCCCC"> that</font><font color="#E5E5E5"> had a</font>

845
00:31:09,769 --> 00:31:13,970
retrial around it and inside<font color="#CCCCCC"> of that</font>

846
00:31:11,990 --> 00:31:15,720
block of code<font color="#E5E5E5"> it called another function</font>

847
00:31:13,970 --> 00:31:17,639
<font color="#E5E5E5">that had a</font><font color="#CCCCCC"> retrial</font><font color="#E5E5E5"> around it</font>

848
00:31:15,720 --> 00:31:20,639
and it inside of<font color="#E5E5E5"> its block of code</font>

849
00:31:17,639 --> 00:31:23,459
called<font color="#E5E5E5"> another area that had a retrial</font>

850
00:31:20,639 --> 00:31:23,820
around it<font color="#CCCCCC"> so if you actually think about</font>

851
00:31:23,460 --> 00:31:25,799
this

852
00:31:23,820 --> 00:31:29,610
there's retries happening on the most

853
00:31:25,799 --> 00:31:31,980
inner function<font color="#CCCCCC"> those will you know let's</font>

854
00:31:29,610 --> 00:31:35,399
say<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> five times so it will retry</font>

855
00:31:31,980 --> 00:31:37,169
that<font color="#E5E5E5"> five attempts</font><font color="#CCCCCC"> it will fail</font><font color="#E5E5E5"> it will</font>

856
00:31:35,399 --> 00:31:39,508
<font color="#E5E5E5">bubble up to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> next</font><font color="#CCCCCC"> retrial</font><font color="#E5E5E5"> block of</font>

857
00:31:37,169 --> 00:31:42,509
code<font color="#E5E5E5"> it will that that failure will</font>

858
00:31:39,509 --> 00:31:44,940
<font color="#E5E5E5">bubble up will fail there and it will</font>

859
00:31:42,509 --> 00:31:47,279
<font color="#E5E5E5">then retry that that inner loop again</font>

860
00:31:44,940 --> 00:31:49,019
<font color="#CCCCCC">five more times</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you repeat</font><font color="#E5E5E5"> this</font>

861
00:31:47,279 --> 00:31:51,720
up until<font color="#CCCCCC"> we have the three layers of</font>

862
00:31:49,019 --> 00:31:53,850
<font color="#E5E5E5">indirection</font><font color="#CCCCCC"> and it was taking four hours</font>

863
00:31:51,720 --> 00:31:56,460
for this piece of<font color="#CCCCCC"> code to</font><font color="#E5E5E5"> fail so we</font>

864
00:31:53,850 --> 00:31:59,459
wanted<font color="#E5E5E5"> to to fix this in vending machine</font>

865
00:31:56,460 --> 00:32:02,519
<font color="#E5E5E5">and we did it based off of this Riku ik</font>

866
00:31:59,460 --> 00:32:04,740
so by abstracting it outside of<font color="#CCCCCC"> the step</font>

867
00:32:02,519 --> 00:32:06,960
itself<font color="#CCCCCC"> engineers no longer had to</font><font color="#E5E5E5"> worry</font>

868
00:32:04,740 --> 00:32:09,210
<font color="#CCCCCC">about figuring out</font><font color="#E5E5E5"> this retry log at</font><font color="#CCCCCC"> the</font>

869
00:32:06,960 --> 00:32:11,759
retry logic<font color="#E5E5E5"> themselves and we can expose</font>

870
00:32:09,210 --> 00:32:13,110
actually what's happening<font color="#CCCCCC"> down</font><font color="#E5E5E5"> to the</font>

871
00:32:11,759 --> 00:32:18,120
<font color="#E5E5E5">end user so they know exactly what's</font>

872
00:32:13,110 --> 00:32:19,860
happening<font color="#CCCCCC"> what's going on</font><font color="#E5E5E5"> the other</font>

873
00:32:18,120 --> 00:32:22,080
thing<font color="#CCCCCC"> about this is we actually</font><font color="#E5E5E5"> abuse</font>

874
00:32:19,860 --> 00:32:23,879
<font color="#E5E5E5">this system</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> of the things that</font>

875
00:32:22,080 --> 00:32:26,189
happens<font color="#E5E5E5"> directly after we do the ztp</font>

876
00:32:23,879 --> 00:32:28,678
step is that<font color="#E5E5E5"> the router reboots with</font>

877
00:32:26,190 --> 00:32:30,750
brand new code<font color="#E5E5E5"> and brand new config</font><font color="#CCCCCC"> so</font>

878
00:32:28,679 --> 00:32:32,429
we have to pull to see when that<font color="#CCCCCC"> router</font>

879
00:32:30,750 --> 00:32:34,590
is actually up and reachable<font color="#CCCCCC"> so we do</font>

880
00:32:32,429 --> 00:32:37,529
that via a simple<font color="#CCCCCC"> ssh connection so</font>

881
00:32:34,590 --> 00:32:39,360
we'll<font color="#E5E5E5"> ssh into</font><font color="#CCCCCC"> the box and either the</font>

882
00:32:37,529 --> 00:32:40,710
socket will be down<font color="#E5E5E5"> or the system's just</font>

883
00:32:39,360 --> 00:32:43,320
not ready to<font color="#CCCCCC"> accept</font><font color="#E5E5E5"> the necessary</font>

884
00:32:40,710 --> 00:32:46,320
connection<font color="#CCCCCC"> instead of actually</font><font color="#E5E5E5"> building</font>

885
00:32:43,320 --> 00:32:46,889
the logic<font color="#E5E5E5"> on a loop</font><font color="#CCCCCC"> inside of the step</font>

886
00:32:46,320 --> 00:32:49,168
<font color="#E5E5E5">itself</font>

887
00:32:46,889 --> 00:32:50,969
we simply have the step failed so the

888
00:32:49,169 --> 00:32:53,519
<font color="#E5E5E5">step is a very simple code the step</font>

889
00:32:50,970 --> 00:32:56,250
fails the system recuse it and we try

890
00:32:53,519 --> 00:32:59,250
again<font color="#CCCCCC"> so it's very common for us</font><font color="#E5E5E5"> to</font>

891
00:32:56,250 --> 00:33:01,110
<font color="#E5E5E5">build steps that fail on</font><font color="#CCCCCC"> purpose</font><font color="#E5E5E5"> because</font>

892
00:32:59,250 --> 00:33:05,820
<font color="#CCCCCC">we</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> that we're waiting on</font><font color="#E5E5E5"> some sort</font>

893
00:33:01,110 --> 00:33:08,610
<font color="#E5E5E5">of external state</font><font color="#CCCCCC"> so we've talked about</font>

894
00:33:05,820 --> 00:33:10,470
steps a<font color="#E5E5E5"> little bit here</font><font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> talk a</font>

895
00:33:08,610 --> 00:33:12,360
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about how we know what steps</font>

896
00:33:10,470 --> 00:33:14,730
<font color="#E5E5E5">to run we have a lot of different</font>

897
00:33:12,360 --> 00:33:16,649
<font color="#E5E5E5">devices at Facebook we</font><font color="#CCCCCC"> have our</font><font color="#E5E5E5"> data</font>

898
00:33:14,730 --> 00:33:17,159
center equipment<font color="#CCCCCC"> we have routers and</font>

899
00:33:16,649 --> 00:33:19,500
pops

900
00:33:17,159 --> 00:33:23,220
we have<font color="#CCCCCC"> optical now and we're now just</font>

901
00:33:19,500 --> 00:33:24,869
onboarding<font color="#CCCCCC"> power gear</font><font color="#E5E5E5"> that's going to be</font>

902
00:33:23,220 --> 00:33:26,879
deployed via<font color="#E5E5E5"> vending machine so how do</font>

903
00:33:24,869 --> 00:33:27,959
we<font color="#E5E5E5"> know</font><font color="#CCCCCC"> each</font><font color="#E5E5E5"> one of those has different</font>

904
00:33:26,879 --> 00:33:28,439
steps<font color="#E5E5E5"> and each one of</font><font color="#CCCCCC"> those has</font>

905
00:33:27,960 --> 00:33:29,910
different

906
00:33:28,440 --> 00:33:31,050
requirements and<font color="#E5E5E5"> that's was designed as</font>

907
00:33:29,910 --> 00:33:34,140
part<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> system so how do we know</font>

908
00:33:31,050 --> 00:33:36,389
<font color="#E5E5E5">which steps to run so we call</font><font color="#CCCCCC"> that</font>

909
00:33:34,140 --> 00:33:39,510
target<font color="#E5E5E5"> selection so target selection is</font>

910
00:33:36,390 --> 00:33:42,300
actually a pretty simple<font color="#E5E5E5"> concept</font><font color="#CCCCCC"> we take</font>

911
00:33:39,510 --> 00:33:43,770
a device<font color="#E5E5E5"> that has attributes on it so we</font>

912
00:33:42,300 --> 00:33:46,530
look in our back back into inventory

913
00:33:43,770 --> 00:33:48,900
<font color="#E5E5E5">system</font><font color="#CCCCCC"> we look at that device and we</font>

914
00:33:46,530 --> 00:33:50,430
have a number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> targets</font><font color="#CCCCCC"> a target is</font>

915
00:33:48,900 --> 00:33:52,890
nothing more than having<font color="#CCCCCC"> those exact</font>

916
00:33:50,430 --> 00:33:54,330
<font color="#E5E5E5">same fields</font><font color="#CCCCCC"> and doing some sort</font><font color="#E5E5E5"> of</font>

917
00:33:52,890 --> 00:33:56,730
<font color="#E5E5E5">spring or regular expression matching</font>

918
00:33:54,330 --> 00:34:00,570
against<font color="#E5E5E5"> those fields so here we have a</font>

919
00:33:56,730 --> 00:34:02,370
simple<font color="#CCCCCC"> example of a</font><font color="#E5E5E5"> device</font><font color="#CCCCCC"> you know a</font>

920
00:34:00,570 --> 00:34:06,360
<font color="#E5E5E5">Wellfleet device you know actively used</font>

921
00:34:02,370 --> 00:34:08,219
<font color="#E5E5E5">in our in our in</font><font color="#CCCCCC"> our in</font><font color="#E5E5E5"> our network</font><font color="#CCCCCC"> and</font>

922
00:34:06,360 --> 00:34:10,650
<font color="#CCCCCC">we have a</font><font color="#E5E5E5"> bunch of targets off to the</font>

923
00:34:08,219 --> 00:34:12,060
side so<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> see the first target here</font>

924
00:34:10,650 --> 00:34:14,760
is actually matching one of our wedge

925
00:34:12,060 --> 00:34:18,719
based<font color="#E5E5E5"> devices one of our self built top</font>

926
00:34:14,760 --> 00:34:20,880
erect<font color="#E5E5E5"> devices so it's not</font><font color="#CCCCCC"> a match we we</font>

927
00:34:18,719 --> 00:34:24,899
step through<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> target</font><font color="#CCCCCC"> and this</font>

928
00:34:20,880 --> 00:34:27,510
<font color="#E5E5E5">one actually matches on any any serial</font>

929
00:34:24,900 --> 00:34:29,100
number<font color="#E5E5E5"> any model any location and</font>

930
00:34:27,510 --> 00:34:31,440
specifically<font color="#CCCCCC"> wilfully</font><font color="#E5E5E5"> so this is a match</font>

931
00:34:29,100 --> 00:34:32,339
<font color="#CCCCCC">but just like a routing table we look</font>

932
00:34:31,440 --> 00:34:34,110
for the<font color="#CCCCCC"> longest match</font>

933
00:34:32,340 --> 00:34:37,080
so<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> we'll continue</font><font color="#E5E5E5"> through all the</font>

934
00:34:34,110 --> 00:34:38,640
matches<font color="#E5E5E5"> and we'll actually</font><font color="#CCCCCC"> look to see</font>

935
00:34:37,080 --> 00:34:40,860
if there's anything more<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> if</font>

936
00:34:38,639 --> 00:34:43,500
this one is matching on the location of

937
00:34:40,860 --> 00:34:45,600
Denver<font color="#CCCCCC"> it</font><font color="#E5E5E5"> matches on two fields the</font>

938
00:34:43,500 --> 00:34:48,330
previous one<font color="#CCCCCC"> only</font><font color="#E5E5E5"> matched on one so it</font>

939
00:34:45,600 --> 00:34:51,719
is the<font color="#E5E5E5"> most specific</font><font color="#CCCCCC"> so once we do a</font>

940
00:34:48,330 --> 00:34:54,270
match<font color="#CCCCCC"> that target has associated with it</font>

941
00:34:51,719 --> 00:34:57,109
exactly<font color="#CCCCCC"> what needs to</font><font color="#E5E5E5"> happen we have</font>

942
00:34:54,270 --> 00:35:01,080
many different job types in the system

943
00:34:57,110 --> 00:35:03,810
<font color="#CCCCCC">here we have three that are most common</font>

944
00:35:01,080 --> 00:35:06,470
<font color="#E5E5E5">three it is configure reconfigure</font>

945
00:35:03,810 --> 00:35:09,570
unconfigured<font color="#CCCCCC"> so configure is simply</font>

946
00:35:06,470 --> 00:35:11,370
bringing<font color="#E5E5E5"> a fresh box into our network</font>

947
00:35:09,570 --> 00:35:13,200
<font color="#E5E5E5">kind of the traditional provisioning</font>

948
00:35:11,370 --> 00:35:15,930
sense reconfigure is taking<font color="#E5E5E5"> the existing</font>

949
00:35:13,200 --> 00:35:18,509
<font color="#E5E5E5">box</font><font color="#CCCCCC"> pretty much wiping it and treating</font>

950
00:35:15,930 --> 00:35:20,910
<font color="#CCCCCC">it like like we're going</font><font color="#E5E5E5"> to rebuild</font><font color="#CCCCCC"> it</font>

951
00:35:18,510 --> 00:35:22,830
and<font color="#E5E5E5"> get it back into a</font><font color="#CCCCCC"> well-known state</font>

952
00:35:20,910 --> 00:35:25,649
<font color="#CCCCCC">we actually do this quite a bit just</font><font color="#E5E5E5"> to</font>

953
00:35:22,830 --> 00:35:27,830
deploy<font color="#CCCCCC"> software in code and</font><font color="#E5E5E5"> changes and</font>

954
00:35:25,650 --> 00:35:29,970
then unconfigured our RMA's

955
00:35:27,830 --> 00:35:31,049
decommissions anything else along<font color="#E5E5E5"> those</font>

956
00:35:29,970 --> 00:35:33,870
lines<font color="#E5E5E5"> each one of those have different</font>

957
00:35:31,050 --> 00:35:36,900
<font color="#E5E5E5">steps and so the target itself defines</font>

958
00:35:33,870 --> 00:35:39,120
what steps need<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> ran</font><font color="#CCCCCC"> we also define</font>

959
00:35:36,900 --> 00:35:41,250
groups of steps<font color="#CCCCCC"> so if we have a group of</font>

960
00:35:39,120 --> 00:35:42,750
steps or for example<font color="#E5E5E5"> you know</font>

961
00:35:41,250 --> 00:35:44,490
those four<font color="#E5E5E5"> boxes next to each other</font>

962
00:35:42,750 --> 00:35:45,960
<font color="#E5E5E5">they're actually ran in parallel</font><font color="#CCCCCC"> so</font>

963
00:35:44,490 --> 00:35:47,609
that's how we get a little<font color="#E5E5E5"> extra</font><font color="#CCCCCC"> speed</font>

964
00:35:45,960 --> 00:35:49,950
out of<font color="#E5E5E5"> the system is there's certain</font>

965
00:35:47,609 --> 00:35:52,710
things<font color="#E5E5E5"> like updating some</font><font color="#CCCCCC"> back-end</font>

966
00:35:49,950 --> 00:35:54,029
database maybe updating DNS<font color="#E5E5E5"> these things</font>

967
00:35:52,710 --> 00:35:55,560
don't<font color="#E5E5E5"> rely on each other</font>

968
00:35:54,030 --> 00:35:58,140
so we can actually run these steps in

969
00:35:55,560 --> 00:36:02,490
parallel versus having one wait after

970
00:35:58,140 --> 00:36:04,410
<font color="#CCCCCC">the next</font><font color="#E5E5E5"> one serially</font><font color="#CCCCCC"> you can also see</font>

971
00:36:02,490 --> 00:36:06,180
here<font color="#CCCCCC"> that we're able to utilize steps in</font>

972
00:36:04,410 --> 00:36:07,890
multiple different locations<font color="#CCCCCC"> for</font>

973
00:36:06,180 --> 00:36:09,180
multiple<font color="#E5E5E5"> different devices we just</font>

974
00:36:07,890 --> 00:36:13,950
compose them differently<font color="#E5E5E5"> based off of</font>

975
00:36:09,180 --> 00:36:16,080
what the target<font color="#E5E5E5"> is telling us</font><font color="#CCCCCC"> so</font>

976
00:36:13,950 --> 00:36:19,080
everything we've talked about so<font color="#CCCCCC"> far has</font>

977
00:36:16,080 --> 00:36:20,279
been<font color="#E5E5E5"> focused on a single</font><font color="#CCCCCC"> device</font><font color="#E5E5E5"> and as</font>

978
00:36:19,080 --> 00:36:23,549
we are<font color="#CCCCCC"> building vending machine we</font>

979
00:36:20,280 --> 00:36:25,230
actually realized that<font color="#E5E5E5"> as network</font>

980
00:36:23,550 --> 00:36:27,630
engineers we don't work on<font color="#E5E5E5"> single</font>

981
00:36:25,230 --> 00:36:30,330
devices<font color="#CCCCCC"> we</font><font color="#E5E5E5"> usually build a pod of</font>

982
00:36:27,630 --> 00:36:34,410
networking<font color="#E5E5E5"> equipment we rebuild a data</font>

983
00:36:30,330 --> 00:36:37,430
hole<font color="#CCCCCC"> we decommission a pop or</font><font color="#E5E5E5"> you know a</font>

984
00:36:34,410 --> 00:36:40,319
rack or<font color="#CCCCCC"> something along those lines so</font>

985
00:36:37,430 --> 00:36:42,509
we needed to we looked at this and

986
00:36:40,320 --> 00:36:45,900
vending machine<font color="#E5E5E5"> could adapt itself to</font>

987
00:36:42,510 --> 00:36:49,650
<font color="#CCCCCC">actually work in</font><font color="#E5E5E5"> this same context so</font>

988
00:36:45,900 --> 00:36:52,619
the idea is<font color="#CCCCCC"> that we're able</font><font color="#E5E5E5"> to take a</font>

989
00:36:49,650 --> 00:36:55,589
job and run it as a step in<font color="#E5E5E5"> a parent job</font>

990
00:36:52,619 --> 00:36:59,369
<font color="#E5E5E5">so I'll talk about a quick quick example</font>

991
00:36:55,589 --> 00:37:01,950
of<font color="#E5E5E5"> this we have a network called Express</font>

992
00:36:59,369 --> 00:37:04,050
backbone<font color="#E5E5E5"> if anybody's familiar has</font>

993
00:37:01,950 --> 00:37:06,118
followed us<font color="#E5E5E5"> Express backbone is a</font>

994
00:37:04,050 --> 00:37:09,359
purpose-built<font color="#CCCCCC"> you know internal backbone</font>

995
00:37:06,119 --> 00:37:11,849
that we have but it's actually<font color="#CCCCCC"> not one</font>

996
00:37:09,359 --> 00:37:12,630
backbone<font color="#E5E5E5"> it's actually eight parallel</font>

997
00:37:11,849 --> 00:37:15,089
backbones

998
00:37:12,630 --> 00:37:16,890
we call those backbones planes and they

999
00:37:15,089 --> 00:37:18,270
they<font color="#E5E5E5"> they marry each other but they're</font>

1000
00:37:16,890 --> 00:37:20,819
actually not<font color="#E5E5E5"> connected</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> other so</font>

1001
00:37:18,270 --> 00:37:23,369
<font color="#CCCCCC">we have</font><font color="#E5E5E5"> eight planes that work in</font>

1002
00:37:20,820 --> 00:37:25,200
between<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> our data centers</font><font color="#CCCCCC"> a</font>

1003
00:37:23,369 --> 00:37:29,190
typical way that<font color="#E5E5E5"> a network</font><font color="#CCCCCC"> engineer</font>

1004
00:37:25,200 --> 00:37:32,009
would go about rebuilding<font color="#E5E5E5"> this area or</font>

1005
00:37:29,190 --> 00:37:33,599
<font color="#E5E5E5">this the you know</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> backbone is they</font>

1006
00:37:32,010 --> 00:37:34,800
would go and drain the entire<font color="#E5E5E5"> plane so</font>

1007
00:37:33,599 --> 00:37:37,530
<font color="#CCCCCC">we can take the traffic</font><font color="#E5E5E5"> off at one</font>

1008
00:37:34,800 --> 00:37:39,119
entire plane<font color="#E5E5E5"> the traffic sheds on to the</font>

1009
00:37:37,530 --> 00:37:41,700
other seven<font color="#E5E5E5"> planes and then we're able</font>

1010
00:37:39,119 --> 00:37:43,320
<font color="#CCCCCC">to work on</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> plane bending</font><font color="#E5E5E5"> machine</font>

1011
00:37:41,700 --> 00:37:45,779
would then be<font color="#CCCCCC"> used</font><font color="#E5E5E5"> to rebuild every</font>

1012
00:37:43,320 --> 00:37:47,550
single box inside<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that plane we would</font>

1013
00:37:45,780 --> 00:37:50,310
verify everything's fine and then we

1014
00:37:47,550 --> 00:37:52,680
would<font color="#E5E5E5"> run a command to re-advertise BGP</font>

1015
00:37:50,310 --> 00:37:54,200
and<font color="#E5E5E5"> undrained that plane we then repeat</font>

1016
00:37:52,680 --> 00:37:56,569
<font color="#CCCCCC">that seven more times</font>

1017
00:37:54,200 --> 00:37:59,629
the rest of the planes<font color="#E5E5E5"> and we do this on</font>

1018
00:37:56,570 --> 00:38:03,040
<font color="#CCCCCC">a weekly</font><font color="#E5E5E5"> basis now</font><font color="#CCCCCC"> so we looked at</font><font color="#E5E5E5"> this</font>

1019
00:37:59,630 --> 00:38:05,300
and said<font color="#CCCCCC"> well just</font><font color="#E5E5E5"> like how David</font>

1020
00:38:03,040 --> 00:38:08,060
<font color="#CCCCCC">destroyed</font><font color="#E5E5E5"> the mops for building one box</font>

1021
00:38:05,300 --> 00:38:10,089
we can also destroy mops for building

1022
00:38:08,060 --> 00:38:13,490
multiple<font color="#E5E5E5"> boxes so now a vending machine</font>

1023
00:38:10,089 --> 00:38:17,359
<font color="#CCCCCC">we can</font><font color="#E5E5E5"> run steps or excuse me run sub</font>

1024
00:38:13,490 --> 00:38:19,970
jobs as steps and those steps<font color="#CCCCCC"> Iran</font><font color="#E5E5E5"> is</font>

1025
00:38:17,359 --> 00:38:23,000
this regular<font color="#E5E5E5"> excuse me those jobs are</font>

1026
00:38:19,970 --> 00:38:26,319
<font color="#CCCCCC">just ran as regular</font><font color="#E5E5E5"> steps so we are able</font>

1027
00:38:23,000 --> 00:38:30,410
<font color="#E5E5E5">to automate this entire system together</font>

1028
00:38:26,320 --> 00:38:32,420
<font color="#CCCCCC">so here is a couple</font><font color="#E5E5E5"> CLI outputs of what</font>

1029
00:38:30,410 --> 00:38:34,040
the system<font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> or what the the</font>

1030
00:38:32,420 --> 00:38:38,119
deployment engineer actually<font color="#CCCCCC"> interacts</font>

1031
00:38:34,040 --> 00:38:40,609
<font color="#E5E5E5">with to start a</font><font color="#CCCCCC"> reek</font><font color="#E5E5E5"> excuse me to start</font>

1032
00:38:38,119 --> 00:38:43,250
a configure job<font color="#E5E5E5"> you simply issue the</font><font color="#CCCCCC"> vm</font>

1033
00:38:40,609 --> 00:38:47,990
configure router command<font color="#E5E5E5"> and you'll give</font>

1034
00:38:43,250 --> 00:38:50,270
back a job ID<font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> vm detail</font>

1035
00:38:47,990 --> 00:38:52,520
command you do<font color="#E5E5E5"> vm detail on the job ID</font>

1036
00:38:50,270 --> 00:38:56,060
<font color="#E5E5E5">and you get information about the job</font>

1037
00:38:52,520 --> 00:38:57,859
itself<font color="#E5E5E5"> here you can see we have a status</font>

1038
00:38:56,060 --> 00:39:00,470
<font color="#CCCCCC">bar that</font><font color="#E5E5E5"> shows how many steps have been</font>

1039
00:38:57,859 --> 00:39:02,299
<font color="#E5E5E5">done we have a status of the job</font><font color="#CCCCCC"> as well</font>

1040
00:39:00,470 --> 00:39:04,180
<font color="#CCCCCC">as when it</font><font color="#E5E5E5"> was started and then we have</font>

1041
00:39:02,300 --> 00:39:06,560
a list<font color="#CCCCCC"> of all the</font><font color="#E5E5E5"> steps</font><font color="#CCCCCC"> that get ran</font>

1042
00:39:04,180 --> 00:39:09,890
<font color="#E5E5E5">that are kind of blurry and hard to make</font>

1043
00:39:06,560 --> 00:39:12,349
out there<font color="#E5E5E5"> there's a couple columns</font><font color="#CCCCCC"> that</font>

1044
00:39:09,890 --> 00:39:14,299
<font color="#CCCCCC">i think are kind</font><font color="#E5E5E5"> of important that we</font>

1045
00:39:12,349 --> 00:39:17,020
expose back to the user<font color="#E5E5E5"> so one is the</font>

1046
00:39:14,300 --> 00:39:19,550
ATT column<font color="#E5E5E5"> that stands for attempts</font>

1047
00:39:17,020 --> 00:39:20,960
attempts<font color="#E5E5E5"> are how many</font><font color="#CCCCCC"> times we retried</font>

1048
00:39:19,550 --> 00:39:22,700
that job<font color="#E5E5E5"> so we can actually see like</font>

1049
00:39:20,960 --> 00:39:25,490
what what attempts are not working

1050
00:39:22,700 --> 00:39:27,950
<font color="#CCCCCC">correctly</font><font color="#E5E5E5"> we will fail the entire job if</font>

1051
00:39:25,490 --> 00:39:30,618
<font color="#CCCCCC">we hit</font><font color="#E5E5E5"> a max here all these attempts are</font>

1052
00:39:27,950 --> 00:39:32,839
set at 30<font color="#E5E5E5"> so a very high number</font><font color="#CCCCCC"> and you</font>

1053
00:39:30,619 --> 00:39:35,540
<font color="#E5E5E5">can actually see</font><font color="#CCCCCC"> fifth item</font><font color="#E5E5E5"> down I think</font>

1054
00:39:32,839 --> 00:39:38,230
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually had a step that took</font>

1055
00:39:35,540 --> 00:39:40,369
<font color="#E5E5E5">six attempts but finally passed</font><font color="#CCCCCC"> the</font>

1056
00:39:38,230 --> 00:39:42,589
<font color="#CCCCCC">other thing that you could see is the G</font>

1057
00:39:40,369 --> 00:39:43,130
on the<font color="#E5E5E5"> left hand side that G stands for</font>

1058
00:39:42,589 --> 00:39:44,900
groups

1059
00:39:43,130 --> 00:39:49,760
so anything<font color="#E5E5E5"> that shares the same group</font>

1060
00:39:44,900 --> 00:39:52,010
number runs<font color="#E5E5E5"> parallel so we can actually</font>

1061
00:39:49,760 --> 00:39:53,750
see there's a bunch<font color="#E5E5E5"> shows four steps</font>

1062
00:39:52,010 --> 00:39:55,730
there that start with<font color="#E5E5E5"> three and they</font>

1063
00:39:53,750 --> 00:39:57,050
have start times of around the exact

1064
00:39:55,730 --> 00:39:58,609
same time so<font color="#CCCCCC"> we're actually able to</font>

1065
00:39:57,050 --> 00:40:01,430
speed up<font color="#E5E5E5"> the development or</font><font color="#CCCCCC"> the</font>

1066
00:39:58,609 --> 00:40:04,609
deployment<font color="#E5E5E5"> based off of running those in</font>

1067
00:40:01,430 --> 00:40:07,310
parallel<font color="#CCCCCC"> to get more information</font><font color="#E5E5E5"> about</font>

1068
00:40:04,609 --> 00:40:07,890
<font color="#E5E5E5">what's happening we have the</font><font color="#CCCCCC"> VM log and</font>

1069
00:40:07,310 --> 00:40:11,009
VM<font color="#E5E5E5"> log</font>

1070
00:40:07,890 --> 00:40:12,839
<font color="#E5E5E5">tail commands</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> simply scrapes the</font>

1071
00:40:11,010 --> 00:40:15,750
database and looks for all all logs

1072
00:40:12,839 --> 00:40:19,049
coming from every single<font color="#E5E5E5"> step as well as</font>

1073
00:40:15,750 --> 00:40:21,990
the ztp process itself<font color="#E5E5E5"> so this gives us</font>

1074
00:40:19,049 --> 00:40:24,930
<font color="#E5E5E5">a debugging</font><font color="#CCCCCC"> point of</font><font color="#E5E5E5"> view and also gives</font>

1075
00:40:21,990 --> 00:40:29,209
the deployment engineer<font color="#CCCCCC"> ad1 exactly</font>

1076
00:40:24,930 --> 00:40:33,149
what's happening inside<font color="#E5E5E5"> the system so</font>

1077
00:40:29,210 --> 00:40:35,640
why why did we build<font color="#CCCCCC"> the</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> you may</font>

1078
00:40:33,150 --> 00:40:37,710
be asking yourselves<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you know it was</font>

1079
00:40:35,640 --> 00:40:42,509
for engineers that got together and we

1080
00:40:37,710 --> 00:40:44,369
<font color="#E5E5E5">decided to see what we could do to be</font>

1081
00:40:42,510 --> 00:40:45,930
honest<font color="#CCCCCC"> we didn't think we were gonna</font>

1082
00:40:44,369 --> 00:40:49,380
<font color="#E5E5E5">build a system we kind of just talked</font>

1083
00:40:45,930 --> 00:40:51,149
about<font color="#E5E5E5"> how we would do it differently</font><font color="#CCCCCC"> and</font>

1084
00:40:49,380 --> 00:40:53,160
<font color="#E5E5E5">we took that into doing a prototype at</font>

1085
00:40:51,150 --> 00:40:54,750
one of our hackathons<font color="#E5E5E5"> that</font><font color="#CCCCCC"> prototype</font>

1086
00:40:53,160 --> 00:40:56,519
kept growing and kept iterating on it

1087
00:40:54,750 --> 00:40:57,990
<font color="#E5E5E5">and that turned into</font><font color="#CCCCCC"> a system</font><font color="#E5E5E5"> and then</font>

1088
00:40:56,519 --> 00:41:00,509
eventually we call that system of

1089
00:40:57,990 --> 00:41:02,459
<font color="#CCCCCC">vending-machine there are features like</font>

1090
00:41:00,510 --> 00:41:03,809
job and a job<font color="#CCCCCC"> that we didn't even</font>

1091
00:41:02,460 --> 00:41:05,670
imagine<font color="#E5E5E5"> when we first started building</font>

1092
00:41:03,809 --> 00:41:06,690
<font color="#E5E5E5">the system but it came apparent through</font>

1093
00:41:05,670 --> 00:41:09,960
through actually building it<font color="#E5E5E5"> ourselves</font>

1094
00:41:06,690 --> 00:41:11,760
<font color="#CCCCCC">we also were</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to empower the</font>

1095
00:41:09,960 --> 00:41:12,930
engineer there<font color="#E5E5E5"> is no way</font><font color="#CCCCCC"> that the four</font>

1096
00:41:11,760 --> 00:41:14,789
<font color="#E5E5E5">of us could</font><font color="#CCCCCC"> have wrote every single</font>

1097
00:41:12,930 --> 00:41:17,069
script to build every single one<font color="#CCCCCC"> of</font>

1098
00:41:14,789 --> 00:41:19,680
these<font color="#E5E5E5"> devices in every single one of the</font>

1099
00:41:17,069 --> 00:41:21,029
<font color="#CCCCCC">iterations both role make and model</font>

1100
00:41:19,680 --> 00:41:23,069
there's a lot of things that<font color="#E5E5E5"> need to</font>

1101
00:41:21,029 --> 00:41:24,990
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> and we couldn't do that ourselves</font>

1102
00:41:23,069 --> 00:41:27,960
by<font color="#E5E5E5"> so by going</font><font color="#CCCCCC"> with a step</font><font color="#E5E5E5"> approach</font>

1103
00:41:24,990 --> 00:41:29,819
we're<font color="#CCCCCC"> able to empower engineers and</font>

1104
00:41:27,960 --> 00:41:30,990
finally we're able<font color="#E5E5E5"> to just control our</font>

1105
00:41:29,819 --> 00:41:33,000
own destiny

1106
00:41:30,990 --> 00:41:36,390
we were able<font color="#E5E5E5"> to build a system for us</font>

1107
00:41:33,000 --> 00:41:44,089
<font color="#CCCCCC">and it works great</font><font color="#E5E5E5"> because of that and</font>

1108
00:41:36,390 --> 00:41:44,089
with that<font color="#E5E5E5"> any</font><font color="#CCCCCC"> questions thank</font><font color="#E5E5E5"> you</font>

1109
00:41:52,080 --> 00:41:58,420
so I'm<font color="#CCCCCC"> on market key ah</font><font color="#E5E5E5"> see from Huawei</font>

1110
00:41:54,780 --> 00:41:59,770
<font color="#E5E5E5">okay so I've operated networks before</font><font color="#CCCCCC"> so</font>

1111
00:41:58,420 --> 00:42:01,570
first my first<font color="#CCCCCC"> question see if the</font>

1112
00:41:59,770 --> 00:42:03,160
second question makes sense is do you

1113
00:42:01,570 --> 00:42:05,830
have a<font color="#CCCCCC"> maintenance window</font><font color="#E5E5E5"> where this is</font>

1114
00:42:03,160 --> 00:42:08,740
<font color="#E5E5E5">time-bound we do have maintenance</font>

1115
00:42:05,830 --> 00:42:10,090
<font color="#E5E5E5">windows but we don't like it's up to</font><font color="#CCCCCC"> the</font>

1116
00:42:08,740 --> 00:42:12,069
engineers to<font color="#E5E5E5"> figure out what those</font>

1117
00:42:10,090 --> 00:42:13,690
<font color="#E5E5E5">maintenance windows should be so as your</font>

1118
00:42:12,070 --> 00:42:16,840
network<font color="#E5E5E5"> gets larger and larger do you</font>

1119
00:42:13,690 --> 00:42:19,420
have<font color="#E5E5E5"> an analysis that says I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

1120
00:42:16,840 --> 00:42:20,590
all these<font color="#E5E5E5"> upgrades or whatever</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> with</font>

1121
00:42:19,420 --> 00:42:22,900
certain windows would<font color="#E5E5E5"> you have an</font>

1122
00:42:20,590 --> 00:42:24,220
analysis<font color="#CCCCCC"> that says ok I can't</font><font color="#E5E5E5"> just</font>

1123
00:42:22,900 --> 00:42:26,020
similarly say yes I can fit in<font color="#CCCCCC"> that</font>

1124
00:42:24,220 --> 00:42:28,120
window or<font color="#E5E5E5"> no</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> means of course you</font>

1125
00:42:26,020 --> 00:42:31,259
can't fit in<font color="#CCCCCC"> that window</font><font color="#E5E5E5"> then of course</font>

1126
00:42:28,120 --> 00:42:34,029
got it like<font color="#E5E5E5"> modify or change or add more</font>

1127
00:42:31,260 --> 00:42:35,350
<font color="#E5E5E5">no not yet so that's something</font><font color="#CCCCCC"> that</font>

1128
00:42:34,030 --> 00:42:37,510
we're<font color="#E5E5E5"> definitely working on we're not</font>

1129
00:42:35,350 --> 00:42:39,880
we're<font color="#CCCCCC"> not too concerned about Windows</font><font color="#E5E5E5"> we</font>

1130
00:42:37,510 --> 00:42:42,790
really rely on our engineers to<font color="#E5E5E5"> figure</font>

1131
00:42:39,880 --> 00:42:45,070
out<font color="#E5E5E5"> hey just do the right thing right</font><font color="#CCCCCC"> so</font>

1132
00:42:42,790 --> 00:42:47,200
we're less worried<font color="#E5E5E5"> about the actual time</font>

1133
00:42:45,070 --> 00:42:48,430
<font color="#E5E5E5">when things get done but we are what we</font>

1134
00:42:47,200 --> 00:42:49,600
<font color="#CCCCCC">are worried about</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> two engineers</font>

1135
00:42:48,430 --> 00:42:51,490
trying to work on the same box at the

1136
00:42:49,600 --> 00:42:53,620
same time and we're trying to solve<font color="#E5E5E5"> that</font>

1137
00:42:51,490 --> 00:42:56,049
via locks but for the<font color="#E5E5E5"> most part we allow</font>

1138
00:42:53,620 --> 00:43:00,339
engineers to make<font color="#E5E5E5"> smart decisions and do</font>

1139
00:42:56,050 --> 00:43:03,010
the right thing<font color="#CCCCCC"> so so I never question</font>

1140
00:43:00,340 --> 00:43:05,410
more about security<font color="#CCCCCC"> do you allow any</font><font color="#E5E5E5"> box</font>

1141
00:43:03,010 --> 00:43:07,420
to get on your network is there<font color="#E5E5E5"> any kind</font>

1142
00:43:05,410 --> 00:43:09,399
<font color="#CCCCCC">of authorization</font><font color="#E5E5E5"> if I walk in and bring</font>

1143
00:43:07,420 --> 00:43:12,910
a box<font color="#E5E5E5"> put it in</font><font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> get for</font>

1144
00:43:09,400 --> 00:43:14,260
vision automatically yeah that's a

1145
00:43:12,910 --> 00:43:16,960
really<font color="#CCCCCC"> good question when we first</font>

1146
00:43:14,260 --> 00:43:18,580
started this it was self triggered<font color="#E5E5E5"> so</font>

1147
00:43:16,960 --> 00:43:20,440
originally we were like any box<font color="#CCCCCC"> turn to</font>

1148
00:43:18,580 --> 00:43:24,670
<font color="#CCCCCC">TV will automatically try to provision</font>

1149
00:43:20,440 --> 00:43:26,230
it that<font color="#E5E5E5"> at security was a thing</font><font color="#CCCCCC"> in mind</font>

1150
00:43:24,670 --> 00:43:27,610
but the bigger problem<font color="#CCCCCC"> was we</font><font color="#E5E5E5"> lost</font>

1151
00:43:26,230 --> 00:43:29,470
visibility with what was<font color="#CCCCCC"> being</font>

1152
00:43:27,610 --> 00:43:31,900
provisioned<font color="#E5E5E5"> devices randomly doing it on</font>

1153
00:43:29,470 --> 00:43:34,689
their<font color="#E5E5E5"> own so we did lock that down so</font>

1154
00:43:31,900 --> 00:43:36,010
similarly we have every device or every

1155
00:43:34,690 --> 00:43:37,570
serial number in an asset management

1156
00:43:36,010 --> 00:43:39,220
database that contains data about<font color="#E5E5E5"> the</font>

1157
00:43:37,570 --> 00:43:41,260
location and the serial number<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font>

1158
00:43:39,220 --> 00:43:43,419
name<font color="#E5E5E5"> and in that we have</font><font color="#CCCCCC"> like a status</font>

1159
00:43:41,260 --> 00:43:45,790
field that is either in use received

1160
00:43:43,420 --> 00:43:47,980
like in shipping<font color="#E5E5E5"> and so on and so it's</font>

1161
00:43:45,790 --> 00:43:51,420
<font color="#CCCCCC">physically on our DHCP server</font><font color="#E5E5E5"> which is</font>

1162
00:43:47,980 --> 00:43:53,800
just the open source ISE<font color="#E5E5E5"> DCP</font><font color="#CCCCCC"> kia service</font>

1163
00:43:51,420 --> 00:43:55,540
we have hooks in that where we write

1164
00:43:53,800 --> 00:43:56,859
some custom<font color="#CCCCCC"> code and it basically</font><font color="#E5E5E5"> parts</font>

1165
00:43:55,540 --> 00:43:58,569
<font color="#E5E5E5">of that request</font>

1166
00:43:56,859 --> 00:44:00,788
and now that's<font color="#E5E5E5"> actually part of why that</font>

1167
00:43:58,569 --> 00:44:02,829
serial<font color="#CCCCCC"> number is</font><font color="#E5E5E5"> very important some of</font>

1168
00:44:00,789 --> 00:44:04,180
<font color="#CCCCCC">the</font><font color="#E5E5E5"> vendors forgot at first to put</font>

1169
00:44:02,829 --> 00:44:05,619
serial numbers<font color="#E5E5E5"> and things in</font><font color="#CCCCCC"> that string</font>

1170
00:44:04,180 --> 00:44:07,660
<font color="#CCCCCC">so we'd asked and gotten</font><font color="#E5E5E5"> that added</font>

1171
00:44:05,619 --> 00:44:09,910
<font color="#CCCCCC">because we use</font><font color="#E5E5E5"> that serum or just to</font>

1172
00:44:07,660 --> 00:44:12,549
check that database<font color="#CCCCCC"> and say is it in the</font>

1173
00:44:09,910 --> 00:44:13,808
proper status<font color="#CCCCCC"> and if it's not we just</font>

1174
00:44:12,549 --> 00:44:16,809
ignore the<font color="#CCCCCC"> D Scoob message and just</font>

1175
00:44:13,809 --> 00:44:18,489
<font color="#E5E5E5">throw it away</font><font color="#CCCCCC"> into that in that status</font>

1176
00:44:16,809 --> 00:44:22,779
gets change is<font color="#E5E5E5"> part of starting the job</font>

1177
00:44:18,489 --> 00:44:25,390
from that<font color="#CCCCCC"> viel DM CLI</font><font color="#E5E5E5"> okay so there's no</font>

1178
00:44:22,779 --> 00:44:27,039
<font color="#E5E5E5">real key encryption</font><font color="#CCCCCC"> security or anything</font>

1179
00:44:25,390 --> 00:44:28,808
<font color="#E5E5E5">there's just a serial</font><font color="#CCCCCC"> now because</font><font color="#E5E5E5"> that's</font>

1180
00:44:27,039 --> 00:44:31,749
pretty<font color="#E5E5E5"> easy to</font><font color="#CCCCCC"> guess right right right</font>

1181
00:44:28,809 --> 00:44:34,509
<font color="#E5E5E5">but</font><font color="#CCCCCC"> it does</font><font color="#E5E5E5"> kind of enforce that someone</font>

1182
00:44:31,749 --> 00:44:36,129
has to<font color="#E5E5E5"> change that status which does</font>

1183
00:44:34,509 --> 00:44:37,480
have its own like restrictions<font color="#E5E5E5"> and who</font>

1184
00:44:36,130 --> 00:44:41,170
can run these commands and<font color="#E5E5E5"> run these two</font>

1185
00:44:37,480 --> 00:44:42,430
eyes<font color="#CCCCCC"> but yeah thanks</font><font color="#E5E5E5"> security security</font>

1186
00:44:41,170 --> 00:44:45,069
on<font color="#CCCCCC"> your management</font><font color="#E5E5E5"> network is</font><font color="#CCCCCC"> still very</font>

1187
00:44:42,430 --> 00:44:47,160
important<font color="#E5E5E5"> so that that kind of is you</font>

1188
00:44:45,069 --> 00:44:49,690
<font color="#CCCCCC">know</font><font color="#E5E5E5"> dynamic ARP inspection</font><font color="#CCCCCC"> DHCP</font>

1189
00:44:47,160 --> 00:44:56,190
inspection etc so<font color="#E5E5E5"> that still becomes</font>

1190
00:44:49,690 --> 00:45:00,820
very important<font color="#CCCCCC"> thanks thank you</font>

1191
00:44:56,190 --> 00:45:00,820
[Applause]

