1
00:00:09,200 --> 00:00:14,280
thank you<font color="#E5E5E5"> so we're gonna talk</font><font color="#CCCCCC"> hi I'm</font>

2
00:00:12,180 --> 00:00:16,349
<font color="#CCCCCC">Roger Shakir this is</font><font color="#E5E5E5"> Carl</font><font color="#CCCCCC"> live sach quit</font>

3
00:00:14,280 --> 00:00:18,210
<font color="#E5E5E5">both from Google we're going to talk a</font>

4
00:00:16,349 --> 00:00:20,730
<font color="#E5E5E5">little bit about some work that we've</font>

5
00:00:18,210 --> 00:00:24,119
been<font color="#CCCCCC"> doing in the wider industry</font><font color="#E5E5E5"> and</font>

6
00:00:20,730 --> 00:00:25,410
<font color="#E5E5E5">within Google on getting rid of of SNMP</font>

7
00:00:24,119 --> 00:00:27,840
<font color="#CCCCCC">and</font><font color="#E5E5E5"> replacing it with streaming</font>

8
00:00:25,410 --> 00:00:30,180
telemetry<font color="#CCCCCC"> and we try and go through a</font>

9
00:00:27,840 --> 00:00:32,130
few<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the problems that we've</font><font color="#CCCCCC"> had and</font>

10
00:00:30,180 --> 00:00:33,480
then Kyle will talk about<font color="#CCCCCC"> some</font><font color="#E5E5E5"> of the</font>

11
00:00:32,130 --> 00:00:34,890
actual<font color="#E5E5E5"> implementation that we've done</font>

12
00:00:33,480 --> 00:00:36,239
throughout we're going to try and use

13
00:00:34,890 --> 00:00:40,590
<font color="#E5E5E5">some data from our</font><font color="#CCCCCC"> actual network</font>

14
00:00:36,239 --> 00:00:42,599
deployments of the protocol so the

15
00:00:40,590 --> 00:00:44,460
problems we have<font color="#E5E5E5"> with SNMP are numerous</font>

16
00:00:42,600 --> 00:00:45,600
<font color="#E5E5E5">and I'm gonna I'm going to</font><font color="#CCCCCC"> catalog a few</font>

17
00:00:44,460 --> 00:00:47,280
of them<font color="#E5E5E5"> but this is</font><font color="#CCCCCC"> really one of the</font>

18
00:00:45,600 --> 00:00:49,350
key ones<font color="#E5E5E5"> we don't have any kind of</font>

19
00:00:47,280 --> 00:00:50,880
source<font color="#CCCCCC"> timestamping an SNMP so when</font>

20
00:00:49,350 --> 00:00:53,550
we're<font color="#CCCCCC"> doing things like</font><font color="#E5E5E5"> producing rate</font>

21
00:00:50,880 --> 00:00:54,840
calculations<font color="#E5E5E5"> then we don't</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> know</font>

22
00:00:53,550 --> 00:00:57,120
when<font color="#E5E5E5"> the data that we're calculating</font>

23
00:00:54,840 --> 00:00:58,710
<font color="#E5E5E5">based on comes from we know when we made</font>

24
00:00:57,120 --> 00:01:01,050
a client request<font color="#CCCCCC"> but we don't know when</font>

25
00:00:58,710 --> 00:01:04,379
the device cache collected that from the

26
00:01:01,050 --> 00:01:05,908
underlying data source now<font color="#CCCCCC"> in multiple</font>

27
00:01:04,379 --> 00:01:07,350
different devices<font color="#CCCCCC"> that we work with they</font>

28
00:01:05,909 --> 00:01:09,509
have there's multiple<font color="#CCCCCC"> levels</font><font color="#E5E5E5"> of caching</font>

29
00:01:07,350 --> 00:01:11,280
so really we end up calculating these

30
00:01:09,509 --> 00:01:13,289
rates based on some<font color="#CCCCCC"> unknown time</font><font color="#E5E5E5"> and</font>

31
00:01:11,280 --> 00:01:15,960
kind<font color="#E5E5E5"> of guessing now you this these</font>

32
00:01:13,289 --> 00:01:18,509
graphs show<font color="#CCCCCC"> the impact</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that so on the</font>

33
00:01:15,960 --> 00:01:20,729
left<font color="#E5E5E5"> hand side you have the</font><font color="#CCCCCC"> graph from</font>

34
00:01:18,509 --> 00:01:23,909
SNMP it shows you<font color="#E5E5E5"> know instantaneous</font>

35
00:01:20,729 --> 00:01:25,740
rate rises it shows great<font color="#E5E5E5"> spikes that</font>

36
00:01:23,909 --> 00:01:28,109
<font color="#CCCCCC">are</font><font color="#E5E5E5"> graph on the right doesn't show at</font>

37
00:01:25,740 --> 00:01:30,449
all<font color="#CCCCCC"> a graph on</font><font color="#E5E5E5"> the right</font><font color="#CCCCCC"> shows traffic</font>

38
00:01:28,109 --> 00:01:32,490
smoothly increasing and no spikes on the

39
00:01:30,450 --> 00:01:34,469
far side<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> one of the sets of</font>

40
00:01:32,490 --> 00:01:37,529
artifacts<font color="#CCCCCC"> that we get from having SNMP</font>

41
00:01:34,469 --> 00:01:39,089
as a data<font color="#E5E5E5"> source in our networks now</font>

42
00:01:37,529 --> 00:01:40,350
those<font color="#CCCCCC"> two graphs</font><font color="#E5E5E5"> you might look at them</font>

43
00:01:39,090 --> 00:01:42,209
<font color="#E5E5E5">and say oh you've been kind of picky</font>

44
00:01:40,350 --> 00:01:44,249
they look very similar<font color="#E5E5E5"> when we start to</font>

45
00:01:42,209 --> 00:01:46,469
<font color="#E5E5E5">look at what</font><font color="#CCCCCC"> really happens at kind</font><font color="#E5E5E5"> of</font>

46
00:01:44,249 --> 00:01:48,689
any kind of load in a real<font color="#CCCCCC"> system then</font>

47
00:01:46,469 --> 00:01:50,490
this<font color="#E5E5E5"> gets much much worse so the</font>

48
00:01:48,689 --> 00:01:53,458
<font color="#E5E5E5">left-hand side</font><font color="#CCCCCC"> of this graph shows the</font>

49
00:01:50,490 --> 00:01:55,199
<font color="#E5E5E5">SNMP data from an interface there's</font>

50
00:01:53,459 --> 00:01:56,609
multiple spikes<font color="#E5E5E5"> apparently we've worked</font>

51
00:01:55,200 --> 00:01:58,590
out how to put terabytes<font color="#E5E5E5"> of traffic</font>

52
00:01:56,609 --> 00:02:02,729
<font color="#E5E5E5">through a 10 gig interface but just not</font>

53
00:01:58,590 --> 00:02:04,950
<font color="#CCCCCC">that consistently and this shows</font><font color="#E5E5E5"> where</font>

54
00:02:02,729 --> 00:02:07,200
we're<font color="#E5E5E5"> unable</font><font color="#CCCCCC"> to rely on this</font><font color="#E5E5E5"> kind of</font>

55
00:02:04,950 --> 00:02:09,300
data for making real<font color="#CCCCCC"> controls decisions</font>

56
00:02:07,200 --> 00:02:11,280
based on the<font color="#E5E5E5"> network we're aiming to</font>

57
00:02:09,300 --> 00:02:13,290
guess what's what's right in terms of

58
00:02:11,280 --> 00:02:15,090
<font color="#CCCCCC">the data</font><font color="#E5E5E5"> because there's so many</font>

59
00:02:13,290 --> 00:02:17,548
artifacts in it and this<font color="#E5E5E5"> will lead you</font>

60
00:02:15,090 --> 00:02:19,409
<font color="#CCCCCC">to do things like moving</font><font color="#E5E5E5"> average windows</font>

61
00:02:17,549 --> 00:02:21,140
<font color="#E5E5E5">over</font><font color="#CCCCCC"> longer time</font><font color="#E5E5E5"> periods just</font><font color="#CCCCCC"> to be able</font>

62
00:02:19,409 --> 00:02:22,459
to<font color="#E5E5E5"> smooth out these artifacts</font>

63
00:02:21,140 --> 00:02:24,589
the<font color="#CCCCCC"> right-hand side of the graph shows</font>

64
00:02:22,460 --> 00:02:27,440
when we've turned a stream inflammatory

65
00:02:24,590 --> 00:02:29,390
on<font color="#E5E5E5"> and this is the same device the same</font>

66
00:02:27,440 --> 00:02:31,579
interface and this is the the<font color="#E5E5E5"> breakdown</font>

67
00:02:29,390 --> 00:02:33,489
of<font color="#E5E5E5"> traffic at the time you know we can</font>

68
00:02:31,580 --> 00:02:35,660
see that<font color="#CCCCCC"> it's smoothly evolving</font><font color="#E5E5E5"> it's</font>

69
00:02:33,490 --> 00:02:36,920
actually accurate to the underlying data

70
00:02:35,660 --> 00:02:40,640
source of what's happening in the

71
00:02:36,920 --> 00:02:42,859
<font color="#CCCCCC">network so the key problem SNMP just</font>

72
00:02:40,640 --> 00:02:44,660
doesn't scale<font color="#E5E5E5"> for systems that we've</font>

73
00:02:42,860 --> 00:02:48,920
seen during<font color="#E5E5E5"> you know built during</font>

74
00:02:44,660 --> 00:02:50,270
2017-2018<font color="#E5E5E5"> modern systems we still can't</font>

75
00:02:48,920 --> 00:02:52,339
scale them over a tenth of<font color="#CCCCCC"> therefore</font>

76
00:02:50,270 --> 00:02:55,340
<font color="#E5E5E5">indicate the interface counts and pull</font>

77
00:02:52,340 --> 00:02:56,990
data at 30-second<font color="#E5E5E5"> intervals</font><font color="#CCCCCC"> we get SNMP</font>

78
00:02:55,340 --> 00:02:58,660
<font color="#CCCCCC">timeouts so we're not</font><font color="#E5E5E5"> getting data back</font>

79
00:02:56,990 --> 00:03:01,130
within<font color="#CCCCCC"> the tolling</font><font color="#E5E5E5"> interval that we have</font>

80
00:02:58,660 --> 00:03:03,140
the problem is here we<font color="#E5E5E5"> want data on the</font>

81
00:03:01,130 --> 00:03:04,790
granularity<font color="#CCCCCC"> of seconds we want fidelity</font>

82
00:03:03,140 --> 00:03:06,160
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> underlying of the data to</font><font color="#E5E5E5"> show us</font>

83
00:03:04,790 --> 00:03:08,810
what's happening in you know

84
00:03:06,160 --> 00:03:10,340
<font color="#CCCCCC">single-digit seconds</font><font color="#E5E5E5"> and the reason you</font>

85
00:03:08,810 --> 00:03:11,990
might<font color="#CCCCCC"> want that</font><font color="#E5E5E5"> is if you look at a</font>

86
00:03:10,340 --> 00:03:13,610
graph<font color="#E5E5E5"> that's something</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> you've</font>

87
00:03:11,990 --> 00:03:16,040
got a<font color="#E5E5E5"> traffic source the traffic source</font>

88
00:03:13,610 --> 00:03:18,590
<font color="#CCCCCC">is spiking</font><font color="#E5E5E5"> the blue</font><font color="#CCCCCC"> dots show us</font>

89
00:03:16,040 --> 00:03:20,120
<font color="#E5E5E5">sampling if I are a via streaming the</font>

90
00:03:18,590 --> 00:03:22,220
red dots show what we can do virus and

91
00:03:20,120 --> 00:03:24,470
MP and essentially what we can see is

92
00:03:22,220 --> 00:03:26,150
<font color="#CCCCCC">that there's</font><font color="#E5E5E5"> these spikes that can be</font>

93
00:03:24,470 --> 00:03:27,920
<font color="#E5E5E5">picked up if we sample every two seconds</font>

94
00:03:26,150 --> 00:03:30,290
<font color="#E5E5E5">whereas the data that we're getting from</font>

95
00:03:27,920 --> 00:03:32,119
SNMP is two<font color="#E5E5E5"> orders of magnitude out so</font>

96
00:03:30,290 --> 00:03:33,470
this<font color="#E5E5E5"> gives us no way to be able</font><font color="#CCCCCC"> to route</font>

97
00:03:32,120 --> 00:03:35,180
cause this<font color="#E5E5E5"> kind of issue we might be</font>

98
00:03:33,470 --> 00:03:37,489
seeing loss on<font color="#E5E5E5"> this port</font><font color="#CCCCCC"> we might be</font>

99
00:03:35,180 --> 00:03:39,140
seeing<font color="#CCCCCC"> issues with</font><font color="#E5E5E5"> applications over it</font>

100
00:03:37,489 --> 00:03:43,670
but the data<font color="#E5E5E5"> we have with SNMP just</font>

101
00:03:39,140 --> 00:03:45,079
doesn't really give us<font color="#CCCCCC"> any insight so</font>

102
00:03:43,670 --> 00:03:46,820
<font color="#E5E5E5">that gives us a set of things where</font>

103
00:03:45,080 --> 00:03:48,650
we're<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at data sources</font><font color="#CCCCCC"> that are</font>

104
00:03:46,820 --> 00:03:51,170
sampled their counters underlying<font color="#E5E5E5"> on the</font>

105
00:03:48,650 --> 00:03:52,760
on the system but really<font color="#E5E5E5"> we also want to</font>

106
00:03:51,170 --> 00:03:53,869
be able<font color="#E5E5E5"> to get events for my network we</font>

107
00:03:52,760 --> 00:03:55,730
<font color="#E5E5E5">want to know what's happening in the</font>

108
00:03:53,870 --> 00:03:57,019
network<font color="#CCCCCC"> some of the</font><font color="#E5E5E5"> automated mitigation</font>

109
00:03:55,730 --> 00:03:59,750
that<font color="#E5E5E5"> we want to do we need to</font><font color="#CCCCCC"> know</font>

110
00:03:57,019 --> 00:04:01,250
what's really really<font color="#E5E5E5"> going on now we end</font>

111
00:03:59,750 --> 00:04:02,959
up with this<font color="#CCCCCC"> tension here we end up with</font>

112
00:04:01,250 --> 00:04:06,230
<font color="#CCCCCC">a</font><font color="#E5E5E5"> tension that says if someone wants to</font>

113
00:04:02,959 --> 00:04:07,850
<font color="#CCCCCC">know what's going</font><font color="#E5E5E5"> on in real time on a</font>

114
00:04:06,230 --> 00:04:09,619
device<font color="#E5E5E5"> then you</font><font color="#CCCCCC"> pull really</font><font color="#E5E5E5"> often</font><font color="#CCCCCC"> so</font>

115
00:04:07,850 --> 00:04:11,480
that<font color="#CCCCCC"> you don't miss any events now the</font>

116
00:04:09,620 --> 00:04:13,519
problem<font color="#CCCCCC"> for that is that devices</font><font color="#E5E5E5"> to be</font>

117
00:04:11,480 --> 00:04:15,709
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to scale really want less Polar's</font>

118
00:04:13,519 --> 00:04:17,690
they end up building caches if they have

119
00:04:15,709 --> 00:04:19,070
to go and pull<font color="#E5E5E5"> these data sources</font>

120
00:04:17,690 --> 00:04:21,890
<font color="#E5E5E5">asynchronously when they don't really</font>

121
00:04:19,070 --> 00:04:23,210
<font color="#E5E5E5">know when a request is coming in so we</font>

122
00:04:21,890 --> 00:04:26,479
want to do something<font color="#CCCCCC"> like design a</font>

123
00:04:23,210 --> 00:04:28,609
system<font color="#E5E5E5"> that</font><font color="#CCCCCC"> that gives us a update</font><font color="#E5E5E5"> and a</font>

124
00:04:26,479 --> 00:04:30,200
second after<font color="#CCCCCC"> an interface goes down and</font>

125
00:04:28,610 --> 00:04:31,940
we have three choices<font color="#E5E5E5"> today</font><font color="#CCCCCC"> we can poll</font>

126
00:04:30,200 --> 00:04:33,560
every interface every second but<font color="#CCCCCC"> we've</font>

127
00:04:31,940 --> 00:04:34,879
already<font color="#CCCCCC"> shown that really</font><font color="#E5E5E5"> even a polling</font>

128
00:04:33,560 --> 00:04:37,729
at 30-second<font color="#E5E5E5"> intervals</font>

129
00:04:34,879 --> 00:04:39,949
we we can't scale<font color="#E5E5E5"> we can run with SNMP</font>

130
00:04:37,729 --> 00:04:42,199
traps<font color="#E5E5E5"> the problem with that is they're</font>

131
00:04:39,949 --> 00:04:43,759
unreliable<font color="#CCCCCC"> so we end up</font><font color="#E5E5E5"> saying oh well</font>

132
00:04:42,199 --> 00:04:45,319
we<font color="#CCCCCC"> don't really</font><font color="#E5E5E5"> know if we got the</font>

133
00:04:43,759 --> 00:04:46,819
notification<font color="#E5E5E5"> to say that the interface</font>

134
00:04:45,319 --> 00:04:49,520
went down<font color="#E5E5E5"> so we'll have to go and pull</font>

135
00:04:46,819 --> 00:04:51,379
it<font color="#E5E5E5"> anyway which doesn't work so</font><font color="#CCCCCC"> you know</font>

136
00:04:49,520 --> 00:04:53,179
this work we've<font color="#CCCCCC"> been working on we've</font>

137
00:04:51,379 --> 00:04:55,399
also<font color="#E5E5E5"> focused on being able to push</font>

138
00:04:53,179 --> 00:04:57,080
events reliably through the system so

139
00:04:55,399 --> 00:04:58,639
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we know</font><font color="#CCCCCC"> that when something happens</font>

140
00:04:57,080 --> 00:05:00,289
in the network<font color="#E5E5E5"> we're able to get it</font>

141
00:04:58,639 --> 00:05:02,209
through a low latency<font color="#E5E5E5"> reliable channel</font>

142
00:05:00,289 --> 00:05:06,050
<font color="#E5E5E5">to know what's happening in the</font><font color="#CCCCCC"> network</font>

143
00:05:02,209 --> 00:05:07,939
so<font color="#CCCCCC"> that's the</font><font color="#E5E5E5"> existing data sets that we</font>

144
00:05:06,050 --> 00:05:09,589
<font color="#E5E5E5">poll if you look at what we're doing</font>

145
00:05:07,939 --> 00:05:11,240
<font color="#E5E5E5">with more more and more as</font><font color="#CCCCCC"> we build</font>

146
00:05:09,589 --> 00:05:12,769
systems<font color="#E5E5E5"> that are hybrid between things</font>

147
00:05:11,240 --> 00:05:15,289
that<font color="#E5E5E5"> are running on a device versus off</font>

148
00:05:12,769 --> 00:05:17,779
a device<font color="#CCCCCC"> well this we</font><font color="#E5E5E5"> designed whole new</font>

149
00:05:15,289 --> 00:05:19,878
protocols we designed BMP we put<font color="#CCCCCC"> IGP</font>

150
00:05:17,779 --> 00:05:21,409
data into<font color="#CCCCCC"> bgp because we want different</font>

151
00:05:19,879 --> 00:05:23,509
ways to be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take data off a</font>

152
00:05:21,409 --> 00:05:27,080
<font color="#E5E5E5">device and</font><font color="#CCCCCC"> that means that</font><font color="#E5E5E5"> we're pushing</font>

153
00:05:23,509 --> 00:05:28,580
a variety of different conclusion<font color="#E5E5E5"> soom</font>

154
00:05:27,080 --> 00:05:30,109
data from the<font color="#CCCCCC"> network</font><font color="#E5E5E5"> it's increasing</font>

155
00:05:28,580 --> 00:05:31,550
<font color="#E5E5E5">the complexity</font><font color="#CCCCCC"> of the overall system</font>

156
00:05:30,110 --> 00:05:33,050
because we've got this<font color="#E5E5E5"> protocol</font><font color="#CCCCCC"> that</font>

157
00:05:31,550 --> 00:05:34,879
doesn't scale if<font color="#E5E5E5"> we want to look at</font>

158
00:05:33,050 --> 00:05:36,649
things<font color="#E5E5E5"> like routing table</font><font color="#CCCCCC"> table data</font>

159
00:05:34,879 --> 00:05:39,319
there's orders of two or<font color="#E5E5E5"> three orders of</font>

160
00:05:36,649 --> 00:05:40,579
<font color="#CCCCCC">magnitude larger than</font><font color="#E5E5E5"> the other data</font>

161
00:05:39,319 --> 00:05:42,409
<font color="#E5E5E5">that we're pulling</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> devices today</font>

162
00:05:40,579 --> 00:05:43,819
<font color="#CCCCCC">we're already in a scale problem we</font>

163
00:05:42,409 --> 00:05:45,558
already<font color="#E5E5E5"> can't get the fidelity that we</font>

164
00:05:43,819 --> 00:05:48,069
would like and we're trying to introduce

165
00:05:45,559 --> 00:05:50,930
<font color="#E5E5E5">this kind</font><font color="#CCCCCC"> of data into into the protocol</font>

166
00:05:48,069 --> 00:05:52,969
so we've we've been working on this

167
00:05:50,930 --> 00:05:54,709
<font color="#E5E5E5">system with</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> it's been</font>

168
00:05:52,969 --> 00:05:58,490
with a collaboration between vendors<font color="#E5E5E5"> and</font>

169
00:05:54,709 --> 00:06:00,079
<font color="#E5E5E5">ourselves and the wider community</font><font color="#CCCCCC"> to to</font>

170
00:05:58,490 --> 00:06:02,869
<font color="#E5E5E5">develop a technology that's called</font>

171
00:06:00,079 --> 00:06:04,429
streaming telemetry<font color="#E5E5E5"> what it is is its</font>

172
00:06:02,869 --> 00:06:06,529
source<font color="#E5E5E5"> timestamp</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that we have that</font>

173
00:06:04,429 --> 00:06:07,909
<font color="#CCCCCC">accuracy its event supports being</font>

174
00:06:06,529 --> 00:06:09,439
<font color="#E5E5E5">event-driven so things that need</font><font color="#CCCCCC"> to be</font>

175
00:06:07,909 --> 00:06:10,639
<font color="#E5E5E5">pushed as events can be it's</font>

176
00:06:09,439 --> 00:06:12,979
<font color="#E5E5E5">subscription-based so it's a</font>

177
00:06:10,639 --> 00:06:15,169
publish/subscribe model and it gives you

178
00:06:12,979 --> 00:06:17,149
a way<font color="#CCCCCC"> to have a system that eventually</font>

179
00:06:15,169 --> 00:06:18,558
<font color="#E5E5E5">got an</font><font color="#CCCCCC"> essentially</font><font color="#E5E5E5"> consistent view of</font>

180
00:06:17,149 --> 00:06:21,079
the state of<font color="#E5E5E5"> the network</font><font color="#CCCCCC"> off of the</font>

181
00:06:18,559 --> 00:06:23,149
<font color="#CCCCCC">network</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is all developed together</font>

182
00:06:21,079 --> 00:06:26,749
<font color="#E5E5E5">in a set of open standards so there's</font>

183
00:06:23,149 --> 00:06:28,759
one the main one<font color="#CCCCCC"> of which is the GRDC</font>

184
00:06:26,749 --> 00:06:30,649
<font color="#E5E5E5">network management interface</font><font color="#CCCCCC"> CNMI</font><font color="#E5E5E5"> and</font>

185
00:06:28,759 --> 00:06:33,800
it's part of open config so not only<font color="#E5E5E5"> if</font>

186
00:06:30,649 --> 00:06:35,599
we thought<font color="#E5E5E5"> about the the interface to</font>

187
00:06:33,800 --> 00:06:37,099
the<font color="#E5E5E5"> devices we also thought about the</font>

188
00:06:35,599 --> 00:06:39,319
data model that<font color="#E5E5E5"> the device</font><font color="#CCCCCC"> is pushing</font>

189
00:06:37,099 --> 00:06:40,610
and how that has to<font color="#E5E5E5"> work with the</font>

190
00:06:39,319 --> 00:06:42,139
territory that<font color="#E5E5E5"> we want to push from the</font>

191
00:06:40,610 --> 00:06:43,279
<font color="#E5E5E5">network so I'm</font><font color="#CCCCCC"> going to hand over to</font>

192
00:06:42,139 --> 00:06:45,439
Carl who's going to talk<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit</font>

193
00:06:43,279 --> 00:06:48,320
about<font color="#E5E5E5"> our implementation and some of the</font>

194
00:06:45,439 --> 00:06:50,940
more technical details<font color="#CCCCCC"> Thanks</font>

195
00:06:48,320 --> 00:06:52,260
and so the<font color="#E5E5E5"> first and</font><font color="#CCCCCC"> biggest point we</font>

196
00:06:50,940 --> 00:06:53,790
want<font color="#E5E5E5"> to make is this isn't just a</font>

197
00:06:52,260 --> 00:06:55,500
science experiment this isn't something

198
00:06:53,790 --> 00:06:57,750
we're trying<font color="#E5E5E5"> to market and sell this is</font>

199
00:06:55,500 --> 00:07:00,210
not slide where we've actually started

200
00:06:57,750 --> 00:07:02,070
<font color="#CCCCCC">to deploy</font><font color="#E5E5E5"> this at Google</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> thirty</font>

201
00:07:00,210 --> 00:07:03,539
<font color="#E5E5E5">percent of our production vendor devices</font>

202
00:07:02,070 --> 00:07:05,640
have moved<font color="#E5E5E5"> over to streaming telemetry</font>

203
00:07:03,540 --> 00:07:08,370
<font color="#CCCCCC">and we're actively</font><font color="#E5E5E5"> displacing our SNMP</font>

204
00:07:05,640 --> 00:07:10,800
monitoring continuously<font color="#CCCCCC"> we're already at</font>

205
00:07:08,370 --> 00:07:12,090
millions of<font color="#E5E5E5"> updates per second and we're</font>

206
00:07:10,800 --> 00:07:14,100
gonna see this continue to increase

207
00:07:12,090 --> 00:07:15,179
<font color="#CCCCCC">we're also going to see that it decrease</font>

208
00:07:14,100 --> 00:07:17,700
and I'm going to talk a little bit<font color="#CCCCCC"> about</font>

209
00:07:15,180 --> 00:07:19,590
that<font color="#E5E5E5"> later but this</font><font color="#CCCCCC"> is something that we</font>

210
00:07:17,700 --> 00:07:20,909
<font color="#E5E5E5">are actively deploying and are trying to</font>

211
00:07:19,590 --> 00:07:25,320
work with<font color="#CCCCCC"> vendors to try to make this</font>

212
00:07:20,910 --> 00:07:26,700
more robust<font color="#CCCCCC"> and a good solid replacement</font>

213
00:07:25,320 --> 00:07:30,180
of<font color="#E5E5E5"> the legacy monitoring systems that</font>

214
00:07:26,700 --> 00:07:31,349
<font color="#E5E5E5">just are no longer</font><font color="#CCCCCC"> serving us I really</font>

215
00:07:30,180 --> 00:07:32,910
want to talk<font color="#E5E5E5"> about how streaming</font>

216
00:07:31,350 --> 00:07:34,170
telemetry is more efficient and Rob

217
00:07:32,910 --> 00:07:36,210
hinted at<font color="#E5E5E5"> this with the</font><font color="#CCCCCC"> event-driven</font>

218
00:07:34,170 --> 00:07:38,190
<font color="#E5E5E5">model</font><font color="#CCCCCC"> but we're kind of flipping</font>

219
00:07:36,210 --> 00:07:40,109
everything<font color="#E5E5E5"> on its head from SNMP being a</font>

220
00:07:38,190 --> 00:07:41,730
polled model to a push model<font color="#E5E5E5"> where the</font>

221
00:07:40,110 --> 00:07:43,620
device is<font color="#CCCCCC"> actually originating the data</font>

222
00:07:41,730 --> 00:07:45,420
<font color="#E5E5E5">because that's where the the changes is</font>

223
00:07:43,620 --> 00:07:47,070
actually occurring<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to</font>

224
00:07:45,420 --> 00:07:48,540
<font color="#E5E5E5">switch this so that the device</font><font color="#CCCCCC"> is</font>

225
00:07:47,070 --> 00:07:49,680
actually scheduling the delivery and

226
00:07:48,540 --> 00:07:52,410
this<font color="#E5E5E5"> is one of</font><font color="#CCCCCC"> the ways that we get</font><font color="#E5E5E5"> the</font>

227
00:07:49,680 --> 00:07:54,540
efficiency<font color="#E5E5E5"> first the device can since</font>

228
00:07:52,410 --> 00:07:56,430
<font color="#CCCCCC">its subscription-based it knows</font><font color="#E5E5E5"> upfront</font>

229
00:07:54,540 --> 00:07:58,230
what data is going<font color="#E5E5E5"> to be collected</font><font color="#CCCCCC"> and</font>

230
00:07:56,430 --> 00:08:00,240
therefore it can schedule the<font color="#E5E5E5"> most</font>

231
00:07:58,230 --> 00:08:01,830
<font color="#E5E5E5">opportunistic way to get that data</font><font color="#CCCCCC"> it</font>

232
00:08:00,240 --> 00:08:03,450
can batch collect it from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> sources</font>

233
00:08:01,830 --> 00:08:05,250
where<font color="#E5E5E5"> there are opportunities to do so</font>

234
00:08:03,450 --> 00:08:06,990
on the<font color="#E5E5E5"> hardware it doesn't have to worry</font>

235
00:08:05,250 --> 00:08:09,150
<font color="#E5E5E5">about being asynchronously pulled by</font>

236
00:08:06,990 --> 00:08:10,710
SNMP collectors and<font color="#E5E5E5"> not knowing what's</font>

237
00:08:09,150 --> 00:08:13,620
going<font color="#CCCCCC"> to be in that payload prior to its</font>

238
00:08:10,710 --> 00:08:15,950
arrival<font color="#E5E5E5"> in</font><font color="#CCCCCC"> addition to that it can</font><font color="#E5E5E5"> also</font>

239
00:08:13,620 --> 00:08:18,090
batch send to<font color="#CCCCCC"> multiple clients in a</font>

240
00:08:15,950 --> 00:08:19,830
deployed<font color="#CCCCCC"> network we actually have</font>

241
00:08:18,090 --> 00:08:21,390
multiple SNMP<font color="#E5E5E5"> pullers in our legacy</font>

242
00:08:19,830 --> 00:08:23,640
<font color="#CCCCCC">system just in case one of</font><font color="#E5E5E5"> the SNMP</font>

243
00:08:21,390 --> 00:08:25,349
<font color="#CCCCCC">Polar's goes down and therefore you have</font>

244
00:08:23,640 --> 00:08:27,690
<font color="#CCCCCC">to</font><font color="#E5E5E5"> asynchronous clients that are not</font>

245
00:08:25,350 --> 00:08:29,730
necessarily<font color="#E5E5E5"> in sync with one another and</font>

246
00:08:27,690 --> 00:08:31,110
therefore<font color="#E5E5E5"> the device has to employ those</font>

247
00:08:29,730 --> 00:08:33,719
<font color="#CCCCCC">caches to</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to handle those</font>

248
00:08:31,110 --> 00:08:35,580
requests in streaming telemetry if they

249
00:08:33,719 --> 00:08:36,990
both issue the same subscriptions the

250
00:08:35,580 --> 00:08:38,460
device is<font color="#CCCCCC"> going to know that</font><font color="#E5E5E5"> and it can</font>

251
00:08:36,990 --> 00:08:40,560
<font color="#CCCCCC">therefore when</font><font color="#E5E5E5"> it batch collects this</font>

252
00:08:38,460 --> 00:08:42,510
data<font color="#E5E5E5"> it can batch send the same data to</font>

253
00:08:40,559 --> 00:08:44,430
multiple<font color="#E5E5E5"> clients and so it's not having</font>

254
00:08:42,510 --> 00:08:46,830
<font color="#CCCCCC">to try to</font><font color="#E5E5E5"> fend itself off from a bunch</font>

255
00:08:44,430 --> 00:08:48,870
<font color="#E5E5E5">of asynchronous requests</font><font color="#CCCCCC"> from any number</font>

256
00:08:46,830 --> 00:08:51,270
<font color="#CCCCCC">of clients the other thing that we want</font>

257
00:08:48,870 --> 00:08:52,800
to<font color="#E5E5E5"> talk about is event-driven</font><font color="#CCCCCC"> we want to</font>

258
00:08:51,270 --> 00:08:54,630
push the<font color="#CCCCCC"> data as soon as the</font><font color="#E5E5E5"> data</font>

259
00:08:52,800 --> 00:08:56,250
changes<font color="#CCCCCC"> and so in that example before</font>

260
00:08:54,630 --> 00:08:57,839
<font color="#E5E5E5">where we talked about</font><font color="#CCCCCC"> the interface</font>

261
00:08:56,250 --> 00:08:59,330
state we'd like to know as<font color="#E5E5E5"> fast as</font>

262
00:08:57,839 --> 00:09:01,260
possible when an interface goes down

263
00:08:59,330 --> 00:09:03,120
however<font color="#E5E5E5"> if the</font>

264
00:09:01,260 --> 00:09:07,140
<font color="#E5E5E5">face is not going down we don't need to</font>

265
00:09:03,120 --> 00:09:09,150
know<font color="#E5E5E5"> that it's up up up on an every</font>

266
00:09:07,140 --> 00:09:10,680
second basis<font color="#E5E5E5"> and so what we'd like to</font><font color="#CCCCCC"> do</font>

267
00:09:09,150 --> 00:09:13,230
is we'd like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> eliminate all of that</font>

268
00:09:10,680 --> 00:09:14,579
unnecessary<font color="#CCCCCC"> traffic that we would get</font>

269
00:09:13,230 --> 00:09:16,890
with a<font color="#CCCCCC"> pole model where you have to</font>

270
00:09:14,580 --> 00:09:18,390
repeatedly<font color="#CCCCCC"> ask and so what we want</font><font color="#E5E5E5"> to do</font>

271
00:09:16,890 --> 00:09:20,040
is we want to<font color="#E5E5E5"> establish a persistent</font>

272
00:09:18,390 --> 00:09:21,150
<font color="#CCCCCC">connection to these</font><font color="#E5E5E5"> devices and use that</font>

273
00:09:20,040 --> 00:09:22,589
like a heartbeat<font color="#E5E5E5"> where we're getting</font>

274
00:09:21,150 --> 00:09:25,260
updates about<font color="#E5E5E5"> other things that are</font>

275
00:09:22,590 --> 00:09:26,700
<font color="#E5E5E5">changing and not having to send the</font><font color="#CCCCCC"> the</font>

276
00:09:25,260 --> 00:09:29,790
redundant<font color="#E5E5E5"> data for things that don't</font>

277
00:09:26,700 --> 00:09:31,530
change<font color="#E5E5E5"> the other thing is if we do this</font>

278
00:09:29,790 --> 00:09:33,209
and<font color="#CCCCCC"> we switch to push only</font><font color="#E5E5E5"> when the</font><font color="#CCCCCC"> data</font>

279
00:09:31,530 --> 00:09:34,560
<font color="#CCCCCC">changes we can</font><font color="#E5E5E5"> actually drastically drop</font>

280
00:09:33,210 --> 00:09:39,360
our<font color="#CCCCCC"> throughput and</font><font color="#E5E5E5"> still get this</font>

281
00:09:34,560 --> 00:09:40,469
extremely<font color="#E5E5E5"> low latency now I want to kind</font>

282
00:09:39,360 --> 00:09:43,080
of divert a little bit and<font color="#E5E5E5"> talk about</font>

283
00:09:40,470 --> 00:09:45,420
<font color="#E5E5E5">the</font><font color="#CCCCCC"> implementation and why we picked</font><font color="#E5E5E5"> G</font>

284
00:09:43,080 --> 00:09:48,420
<font color="#CCCCCC">our PC is the</font><font color="#E5E5E5"> transport one of the</font>

285
00:09:45,420 --> 00:09:50,939
things based on TCP this is a connection

286
00:09:48,420 --> 00:09:52,949
based protocol as opposed to SNMP which

287
00:09:50,940 --> 00:09:54,060
is UDP<font color="#CCCCCC"> which</font><font color="#E5E5E5"> we heard in the</font><font color="#CCCCCC"> last</font>

288
00:09:52,950 --> 00:09:56,460
presentation<font color="#E5E5E5"> that there are other</font>

289
00:09:54,060 --> 00:09:59,729
problems<font color="#E5E5E5"> with UDP SNMP was on that a</font>

290
00:09:56,460 --> 00:10:01,410
tack list vector that<font color="#E5E5E5"> you saw one of the</font>

291
00:09:59,730 --> 00:10:02,910
things that you get once<font color="#E5E5E5"> you move</font><font color="#CCCCCC"> to a</font>

292
00:10:01,410 --> 00:10:05,329
<font color="#CCCCCC">connection oriented protocol is this</font>

293
00:10:02,910 --> 00:10:08,280
ability to have the<font color="#CCCCCC"> event-driven</font>

294
00:10:05,330 --> 00:10:09,840
<font color="#E5E5E5">telemetry where only the changes are</font>

295
00:10:08,280 --> 00:10:11,400
necessary<font color="#E5E5E5"> to be pushed because you know</font>

296
00:10:09,840 --> 00:10:13,680
if the connection is up that you have<font color="#CCCCCC"> a</font>

297
00:10:11,400 --> 00:10:15,240
live connection<font color="#E5E5E5"> that device and you're</font>

298
00:10:13,680 --> 00:10:16,469
getting<font color="#E5E5E5"> an implicit heartbeat from the</font>

299
00:10:15,240 --> 00:10:17,670
things<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> changing and</font><font color="#E5E5E5"> there are</font>

300
00:10:16,470 --> 00:10:19,560
lots of things that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> changing</font><font color="#E5E5E5"> on the</font>

301
00:10:17,670 --> 00:10:21,209
device all the<font color="#E5E5E5"> time and so there's a</font>

302
00:10:19,560 --> 00:10:22,680
<font color="#E5E5E5">huge data set on there that doesn't</font>

303
00:10:21,210 --> 00:10:24,600
change very<font color="#CCCCCC"> often but you would</font><font color="#E5E5E5"> like to</font>

304
00:10:22,680 --> 00:10:27,420
know as<font color="#E5E5E5"> soon as it happens when it</font><font color="#CCCCCC"> does</font>

305
00:10:24,600 --> 00:10:30,300
change<font color="#CCCCCC"> the</font><font color="#E5E5E5"> other thing is G RPC offers</font>

306
00:10:27,420 --> 00:10:33,560
us the<font color="#CCCCCC"> ability to run</font><font color="#E5E5E5"> over TLS</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the</font>

307
00:10:30,300 --> 00:10:36,479
<font color="#E5E5E5">internet of plaintext is is no longer</font>

308
00:10:33,560 --> 00:10:39,150
table<font color="#E5E5E5"> stakes today is to have encryption</font>

309
00:10:36,480 --> 00:10:40,620
<font color="#CCCCCC">and so we're relying on a newer protocol</font>

310
00:10:39,150 --> 00:10:42,240
<font color="#E5E5E5">that allows</font><font color="#CCCCCC"> us to be able</font><font color="#E5E5E5"> to encrypt</font>

311
00:10:40,620 --> 00:10:44,400
from day one in this<font color="#E5E5E5"> particular</font>

312
00:10:42,240 --> 00:10:45,930
implementation<font color="#E5E5E5"> the other thing that</font>

313
00:10:44,400 --> 00:10:48,600
we've<font color="#E5E5E5"> decided</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> is use protocol</font>

314
00:10:45,930 --> 00:10:50,010
buffers which we are Google<font color="#E5E5E5"> we have used</font>

315
00:10:48,600 --> 00:10:51,570
protocol buffers for<font color="#E5E5E5"> a long time for</font>

316
00:10:50,010 --> 00:10:53,370
everything<font color="#CCCCCC"> but one of</font><font color="#E5E5E5"> the things that's</font>

317
00:10:51,570 --> 00:10:55,740
really really nice we don't have to go

318
00:10:53,370 --> 00:10:57,450
and invent<font color="#CCCCCC"> new serialization</font><font color="#E5E5E5"> protocols</font>

319
00:10:55,740 --> 00:11:00,540
to worry about cross-platform

320
00:10:57,450 --> 00:11:01,770
compatibility<font color="#CCCCCC"> G RPC also has a really</font>

321
00:11:00,540 --> 00:11:03,449
<font color="#E5E5E5">nice mechanism</font><font color="#CCCCCC"> for being forward</font>

322
00:11:01,770 --> 00:11:04,740
compatible<font color="#E5E5E5"> to add new</font><font color="#CCCCCC"> datasets if we</font>

323
00:11:03,450 --> 00:11:06,750
want<font color="#E5E5E5"> to change the protocol slightly</font>

324
00:11:04,740 --> 00:11:08,580
servers and clients don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to be on</font>

325
00:11:06,750 --> 00:11:12,710
exactly the same<font color="#CCCCCC"> version and it offers</font>

326
00:11:08,580 --> 00:11:12,710
that that kind<font color="#E5E5E5"> of use in transition</font>

327
00:11:13,270 --> 00:11:17,920
now one of<font color="#E5E5E5"> the things that's really</font>

328
00:11:14,830 --> 00:11:19,570
really nice about SNMP is being based<font color="#E5E5E5"> on</font>

329
00:11:17,920 --> 00:11:22,329
UDP if there is congestion<font color="#E5E5E5"> in your</font>

330
00:11:19,570 --> 00:11:24,850
network<font color="#E5E5E5"> the</font><font color="#CCCCCC"> traffic just gets dropped</font><font color="#E5E5E5"> a</font>

331
00:11:22,330 --> 00:11:26,529
no big deal<font color="#E5E5E5"> now for switching over to a</font>

332
00:11:24,850 --> 00:11:28,540
<font color="#CCCCCC">connection oriented protocol</font><font color="#E5E5E5"> the thing</font>

333
00:11:26,529 --> 00:11:30,339
that you might worry about is what if

334
00:11:28,540 --> 00:11:31,870
I'm<font color="#E5E5E5"> trying to push data to</font><font color="#CCCCCC"> a clients</font><font color="#E5E5E5"> and</font>

335
00:11:30,339 --> 00:11:33,160
I can't get it out there as fast as I'm

336
00:11:31,870 --> 00:11:35,230
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to push it because we've switched</font>

337
00:11:33,160 --> 00:11:36,939
<font color="#E5E5E5">to a push model we're gonna run into</font>

338
00:11:35,230 --> 00:11:38,230
congestion and<font color="#E5E5E5"> you can imagine that if</font>

339
00:11:36,940 --> 00:11:39,910
you're<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> queue up</font><font color="#CCCCCC"> all of the</font>

340
00:11:38,230 --> 00:11:41,740
<font color="#E5E5E5">data that has changed for a client and</font>

341
00:11:39,910 --> 00:11:43,029
it just can't receive it<font color="#E5E5E5"> fast enough</font><font color="#CCCCCC"> and</font>

342
00:11:41,740 --> 00:11:45,040
there could be a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different</font>

343
00:11:43,029 --> 00:11:47,050
reasons<font color="#E5E5E5"> for that either you</font><font color="#CCCCCC"> have some</font>

344
00:11:45,040 --> 00:11:49,779
network congestion<font color="#E5E5E5"> between the server</font>

345
00:11:47,050 --> 00:11:52,089
<font color="#CCCCCC">and the client</font><font color="#E5E5E5"> or somebody has written a</font>

346
00:11:49,779 --> 00:11:53,910
poorly performing<font color="#E5E5E5"> client and is just not</font>

347
00:11:52,089 --> 00:11:55,930
<font color="#E5E5E5">receiving data very fast your</font>

348
00:11:53,910 --> 00:11:57,569
catastrophic cases they establish a

349
00:11:55,930 --> 00:11:59,469
connection<font color="#E5E5E5"> and never receive anything</font>

350
00:11:57,570 --> 00:12:02,709
<font color="#CCCCCC">you really want to be able to</font><font color="#E5E5E5"> kind of</font>

351
00:11:59,470 --> 00:12:04,209
protect against<font color="#E5E5E5"> that and in TCP</font><font color="#CCCCCC"> if you</font>

352
00:12:02,709 --> 00:12:06,520
have<font color="#CCCCCC"> guaranteed</font><font color="#E5E5E5"> delivery it's like what</font>

353
00:12:04,209 --> 00:12:08,020
do you<font color="#E5E5E5"> do and so we need to figure</font><font color="#CCCCCC"> out</font>

354
00:12:06,520 --> 00:12:09,880
how<font color="#E5E5E5"> to handle this particular problem</font>

355
00:12:08,020 --> 00:12:12,970
<font color="#E5E5E5">now that</font><font color="#CCCCCC"> we didn't have to do with UDP</font>

356
00:12:09,880 --> 00:12:14,830
<font color="#E5E5E5">and so what we're proposing is to use an</font>

357
00:12:12,970 --> 00:12:16,990
<font color="#CCCCCC">application-level cue coalition</font>

358
00:12:14,830 --> 00:12:18,399
mechanism and I realize that this slide

359
00:12:16,990 --> 00:12:20,410
is a little<font color="#CCCCCC"> bit detailed</font><font color="#E5E5E5"> you don't have</font>

360
00:12:18,399 --> 00:12:22,120
to take notes<font color="#CCCCCC"> or snap a picture or</font>

361
00:12:20,410 --> 00:12:23,319
<font color="#CCCCCC">anything we have an open source</font>

362
00:12:22,120 --> 00:12:25,270
<font color="#E5E5E5">implementation which I'll be talking</font>

363
00:12:23,320 --> 00:12:26,920
<font color="#CCCCCC">about in the next</font><font color="#E5E5E5"> slide but</font><font color="#CCCCCC"> the key</font>

364
00:12:25,270 --> 00:12:30,010
points is we detect the<font color="#E5E5E5"> back pressure</font>

365
00:12:26,920 --> 00:12:32,620
from the server side<font color="#E5E5E5"> with blocking send</font>

366
00:12:30,010 --> 00:12:33,610
and<font color="#E5E5E5"> G RPC and so at</font><font color="#CCCCCC"> some points that</font>

367
00:12:32,620 --> 00:12:35,620
you're<font color="#E5E5E5"> you're not going to be able to</font>

368
00:12:33,610 --> 00:12:37,930
<font color="#E5E5E5">cue up</font><font color="#CCCCCC"> any more data you're gonna see a</font>

369
00:12:35,620 --> 00:12:39,670
little bit<font color="#E5E5E5"> more</font><font color="#CCCCCC"> pressure on the sent and</font>

370
00:12:37,930 --> 00:12:41,770
if you have incoming<font color="#E5E5E5"> data from whatever</font>

371
00:12:39,670 --> 00:12:43,240
your underlying sources are that

372
00:12:41,770 --> 00:12:45,279
throughput is not going to be able<font color="#E5E5E5"> to be</font>

373
00:12:43,240 --> 00:12:47,829
met on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> output and so what we want to</font>

374
00:12:45,279 --> 00:12:49,390
<font color="#E5E5E5">do in that case</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> queue up the</font><font color="#CCCCCC"> old</font>

375
00:12:47,829 --> 00:12:51,640
stale data<font color="#E5E5E5"> because</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> in telemetry</font>

376
00:12:49,390 --> 00:12:54,160
system ultimately<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> is a real-time</font>

377
00:12:51,640 --> 00:12:56,470
view<font color="#E5E5E5"> of what's happening and</font><font color="#CCCCCC"> so in those</font>

378
00:12:54,160 --> 00:12:59,199
cases we'd like to on a per data set

379
00:12:56,470 --> 00:13:00,430
basis keep track of the keys<font color="#CCCCCC"> that have</font>

380
00:12:59,200 --> 00:13:02,350
changed<font color="#E5E5E5"> that are destined for</font><font color="#CCCCCC"> that</font>

381
00:13:00,430 --> 00:13:04,209
<font color="#CCCCCC">client</font><font color="#E5E5E5"> and if you get an update for a</font>

382
00:13:02,350 --> 00:13:06,310
key that<font color="#E5E5E5"> is queued but</font><font color="#CCCCCC"> hasn't been</font><font color="#E5E5E5"> sent</font>

383
00:13:04,209 --> 00:13:08,380
you<font color="#E5E5E5"> actually want the newer data instead</font>

384
00:13:06,310 --> 00:13:11,589
<font color="#CCCCCC">and so what we want</font><font color="#E5E5E5"> to do is be able to</font>

385
00:13:08,380 --> 00:13:13,959
<font color="#E5E5E5">dump this this old stale data similar to</font>

386
00:13:11,589 --> 00:13:15,660
what would<font color="#E5E5E5"> have happened in SNMP but we</font>

387
00:13:13,959 --> 00:13:19,270
want to do it selectively such that

388
00:13:15,660 --> 00:13:21,250
eventually once the congestion clears or

389
00:13:19,270 --> 00:13:23,470
even if it<font color="#CCCCCC"> never clears you always have</font>

390
00:13:21,250 --> 00:13:25,760
a roughly<font color="#E5E5E5"> fresh view of what's happening</font>

391
00:13:23,470 --> 00:13:27,800
<font color="#CCCCCC">on your</font><font color="#E5E5E5"> devices and</font>

392
00:13:25,760 --> 00:13:31,420
critical events like an interface going

393
00:13:27,800 --> 00:13:33,500
down<font color="#E5E5E5"> as guaranteed to be delivered</font><font color="#CCCCCC"> sill</font>

394
00:13:31,420 --> 00:13:35,300
and I'm going<font color="#CCCCCC"> to talk a little bit about</font>

395
00:13:33,500 --> 00:13:38,080
<font color="#E5E5E5">the open source collection framework we</font>

396
00:13:35,300 --> 00:13:40,370
actually published<font color="#E5E5E5"> CLI for the GM I</font>

397
00:13:38,080 --> 00:13:41,779
<font color="#E5E5E5">probably about nine months</font><font color="#CCCCCC"> ago and we've</font>

398
00:13:40,370 --> 00:13:44,240
had several of our vendors<font color="#E5E5E5"> who</font><font color="#CCCCCC"> have been</font>

399
00:13:41,779 --> 00:13:45,980
testing with it<font color="#CCCCCC"> just this last week we</font>

400
00:13:44,240 --> 00:13:48,890
<font color="#CCCCCC">actually open sourced a caching</font>

401
00:13:45,980 --> 00:13:51,320
<font color="#E5E5E5">collector this is something that</font>

402
00:13:48,890 --> 00:13:53,660
<font color="#E5E5E5">supports GM</font><font color="#CCCCCC"> I on its</font><font color="#E5E5E5"> input from the</font>

403
00:13:51,320 --> 00:13:56,870
<font color="#E5E5E5">devices but also GM I on its output</font><font color="#CCCCCC"> and</font>

404
00:13:53,660 --> 00:13:58,550
so if you're<font color="#E5E5E5"> looking at how would</font><font color="#CCCCCC"> you do</font>

405
00:13:56,870 --> 00:14:00,110
a<font color="#E5E5E5"> Gina my</font><font color="#CCCCCC"> implementation as a server</font>

406
00:13:58,550 --> 00:14:01,880
this<font color="#CCCCCC"> is actually both a server and a</font>

407
00:14:00,110 --> 00:14:03,650
client<font color="#E5E5E5"> and so this is a reference</font>

408
00:14:01,880 --> 00:14:04,490
implementation that kind<font color="#CCCCCC"> of illustrates</font>

409
00:14:03,650 --> 00:14:06,860
some<font color="#E5E5E5"> of the things that</font><font color="#CCCCCC"> we're talking</font>

410
00:14:04,490 --> 00:14:08,870
about<font color="#E5E5E5"> today</font><font color="#CCCCCC"> it can collect from multiple</font>

411
00:14:06,860 --> 00:14:11,180
<font color="#CCCCCC">GMI</font><font color="#E5E5E5"> sources and aggregate</font><font color="#CCCCCC"> them together</font>

412
00:14:08,870 --> 00:14:12,770
so if you have<font color="#CCCCCC"> n devices and you want to</font>

413
00:14:11,180 --> 00:14:13,670
<font color="#E5E5E5">gather those statistics in one place you</font>

414
00:14:12,770 --> 00:14:16,220
can do that with this particular

415
00:14:13,670 --> 00:14:18,199
collector<font color="#CCCCCC"> it supports multiple Gina my</font>

416
00:14:16,220 --> 00:14:20,210
clients that<font color="#E5E5E5"> can actually get subsets of</font>

417
00:14:18,200 --> 00:14:22,040
the<font color="#CCCCCC"> data</font><font color="#E5E5E5"> it uses the same filtering</font>

418
00:14:20,210 --> 00:14:23,870
protocol that<font color="#CCCCCC"> Gina</font><font color="#E5E5E5"> my supports and</font>

419
00:14:22,040 --> 00:14:25,490
prescribes<font color="#E5E5E5"> and allows you to</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> things</font>

420
00:14:23,870 --> 00:14:27,230
<font color="#CCCCCC">just kind of once off polling if you</font>

421
00:14:25,490 --> 00:14:28,760
have some<font color="#E5E5E5"> legacy system that just isn't</font>

422
00:14:27,230 --> 00:14:30,710
<font color="#E5E5E5">designed for streaming which none of</font>

423
00:14:28,760 --> 00:14:33,710
<font color="#E5E5E5">them are because nobody thought</font><font color="#CCCCCC"> about</font>

424
00:14:30,710 --> 00:14:36,230
<font color="#E5E5E5">this previously apparently everything</font><font color="#CCCCCC"> is</font>

425
00:14:33,710 --> 00:14:37,940
based on SNMP<font color="#E5E5E5"> and so if you if you need</font>

426
00:14:36,230 --> 00:14:39,890
to be able<font color="#CCCCCC"> to plug</font><font color="#E5E5E5"> that in</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> the</font>

427
00:14:37,940 --> 00:14:42,290
<font color="#CCCCCC">ability to pull the</font><font color="#E5E5E5"> the front end of the</font>

428
00:14:39,890 --> 00:14:44,300
<font color="#CCCCCC">system</font><font color="#E5E5E5"> and get that data</font><font color="#CCCCCC"> it also allows</font>

429
00:14:42,290 --> 00:14:46,430
you to<font color="#CCCCCC"> actually separate</font><font color="#E5E5E5"> your client</font>

430
00:14:44,300 --> 00:14:47,780
directly<font color="#CCCCCC"> from your device</font><font color="#E5E5E5"> as Rob</font>

431
00:14:46,430 --> 00:14:50,569
mentioned<font color="#E5E5E5"> one of the previous problems</font>

432
00:14:47,780 --> 00:14:52,760
is in SNMP if if you try to<font color="#E5E5E5"> create some</font>

433
00:14:50,570 --> 00:14:54,140
<font color="#E5E5E5">sort of aggregation of SNMP data just</font>

434
00:14:52,760 --> 00:14:55,220
<font color="#E5E5E5">because you can't pull frequently now if</font>

435
00:14:54,140 --> 00:14:57,319
you get a lot of<font color="#CCCCCC"> clients that are just</font>

436
00:14:55,220 --> 00:14:59,750
<font color="#E5E5E5">upset</font><font color="#CCCCCC"> and they</font><font color="#E5E5E5"> would decide I'm</font><font color="#CCCCCC"> just</font>

437
00:14:57,320 --> 00:15:01,700
gonna go directly<font color="#E5E5E5"> to the device</font><font color="#CCCCCC"> I can't</font>

438
00:14:59,750 --> 00:15:03,560
rely on some caching infrastructure in

439
00:15:01,700 --> 00:15:05,780
this particular case<font color="#CCCCCC"> because the casting</font>

440
00:15:03,560 --> 00:15:08,119
infrastructure is streamed and is<font color="#E5E5E5"> almost</font>

441
00:15:05,780 --> 00:15:10,579
real-time<font color="#E5E5E5"> to what the the device has</font>

442
00:15:08,120 --> 00:15:11,930
itself<font color="#E5E5E5"> these clients can</font><font color="#CCCCCC"> actually rely</font>

443
00:15:10,580 --> 00:15:13,730
on it which<font color="#E5E5E5"> means you can restrict</font>

444
00:15:11,930 --> 00:15:19,099
accesses to<font color="#CCCCCC"> your device and not allow</font>

445
00:15:13,730 --> 00:15:22,640
any to them helps you more reasonably

446
00:15:19,100 --> 00:15:23,930
manage the load on<font color="#E5E5E5"> those devices now</font>

447
00:15:22,640 --> 00:15:25,839
there is a little bit<font color="#E5E5E5"> of a chicken and</font>

448
00:15:23,930 --> 00:15:28,310
egg<font color="#E5E5E5"> problem because</font><font color="#CCCCCC"> Gina my being new</font>

449
00:15:25,839 --> 00:15:30,140
<font color="#CCCCCC">day one</font><font color="#E5E5E5"> we didn't have ten</font>

450
00:15:28,310 --> 00:15:31,670
implementations to test because<font color="#E5E5E5"> nobody</font>

451
00:15:30,140 --> 00:15:33,890
had<font color="#CCCCCC"> implemented it before it was</font>

452
00:15:31,670 --> 00:15:35,839
designed<font color="#CCCCCC"> so what we've done</font><font color="#E5E5E5"> is we</font>

453
00:15:33,890 --> 00:15:37,750
engaged<font color="#CCCCCC"> with our vendors fairly early</font>

454
00:15:35,839 --> 00:15:40,060
and and tried to get<font color="#E5E5E5"> them</font><font color="#CCCCCC"> to</font>

455
00:15:37,750 --> 00:15:42,730
<font color="#E5E5E5">propose anything that they could stream</font>

456
00:15:40,060 --> 00:15:44,378
data off<font color="#CCCCCC"> the devices</font><font color="#E5E5E5"> to us and so we</font><font color="#CCCCCC"> had</font>

457
00:15:42,730 --> 00:15:46,000
several implementations<font color="#CCCCCC"> early on and</font>

458
00:15:44,379 --> 00:15:47,889
what we did is we iterated on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> GMI</font>

459
00:15:46,000 --> 00:15:50,439
protocol<font color="#E5E5E5"> and we built a layer of what we</font>

460
00:15:47,889 --> 00:15:52,060
call proxies<font color="#CCCCCC"> that translate that data</font>

461
00:15:50,439 --> 00:15:54,250
<font color="#E5E5E5">from whatever format they could give us</font>

462
00:15:52,060 --> 00:15:56,529
<font color="#E5E5E5">into what we</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> like it</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> in GMI</font>

463
00:15:54,250 --> 00:16:00,040
<font color="#E5E5E5">and so we've gone through a fairly</font>

464
00:15:56,529 --> 00:16:01,209
painful churn of<font color="#E5E5E5"> iterating on this to be</font>

465
00:16:00,040 --> 00:16:03,129
able<font color="#E5E5E5"> to come up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> something that we</font>

466
00:16:01,209 --> 00:16:05,500
<font color="#E5E5E5">think will will hopefully stand the test</font>

467
00:16:03,129 --> 00:16:07,300
of time<font color="#CCCCCC"> and allow us to migrate the</font>

468
00:16:05,500 --> 00:16:09,009
<font color="#CCCCCC">whole industry to a new model for being</font>

469
00:16:07,300 --> 00:16:11,620
<font color="#E5E5E5">able to have</font><font color="#CCCCCC"> a standard way of</font><font color="#E5E5E5"> getting</font>

470
00:16:09,009 --> 00:16:13,329
telemetry<font color="#E5E5E5"> off these boxes</font><font color="#CCCCCC"> but this is a</font>

471
00:16:11,620 --> 00:16:15,100
process<font color="#CCCCCC"> that we have gone</font><font color="#E5E5E5"> through and</font>

472
00:16:13,329 --> 00:16:16,660
this<font color="#E5E5E5"> is actually the</font><font color="#CCCCCC"> model that</font><font color="#E5E5E5"> we're in</font>

473
00:16:15,100 --> 00:16:18,250
the middle of deploying and we're

474
00:16:16,660 --> 00:16:20,379
<font color="#E5E5E5">gradually going to be peeling away these</font>

475
00:16:18,250 --> 00:16:23,110
proxies as we get full support<font color="#E5E5E5"> for the</font>

476
00:16:20,379 --> 00:16:27,910
open config<font color="#E5E5E5"> data model and the GMI</font>

477
00:16:23,110 --> 00:16:29,529
implementations and today there are<font color="#E5E5E5"> at</font>

478
00:16:27,910 --> 00:16:30,939
<font color="#CCCCCC">least these vendors these are the ones</font>

479
00:16:29,529 --> 00:16:33,279
that have given<font color="#E5E5E5"> us permission to mention</font>

480
00:16:30,939 --> 00:16:36,040
them<font color="#E5E5E5"> in the context of this</font><font color="#CCCCCC"> presentation</font>

481
00:16:33,279 --> 00:16:37,899
who have either<font color="#E5E5E5"> in released code or EFT</font>

482
00:16:36,040 --> 00:16:42,339
firmware images have an implementation

483
00:16:37,899 --> 00:16:43,660
<font color="#CCCCCC">of GMI and so not just the the early</font>

484
00:16:42,339 --> 00:16:45,069
versions that we were<font color="#CCCCCC"> working with to</font>

485
00:16:43,660 --> 00:16:50,879
iterate on<font color="#E5E5E5"> but actually</font><font color="#CCCCCC"> are trying</font><font color="#E5E5E5"> to</font>

486
00:16:45,069 --> 00:16:53,139
support<font color="#E5E5E5"> the</font><font color="#CCCCCC"> jean-mi</font><font color="#E5E5E5"> full protocol and</font>

487
00:16:50,879 --> 00:16:55,540
<font color="#E5E5E5">I'm gonna leave</font><font color="#CCCCCC"> it on this slide</font><font color="#E5E5E5"> this is</font>

488
00:16:53,139 --> 00:16:57,970
where I've got links<font color="#CCCCCC"> to the general open</font>

489
00:16:55,540 --> 00:16:59,709
config net projects which talks also

490
00:16:57,970 --> 00:17:03,250
about<font color="#E5E5E5"> the data modeling as</font><font color="#CCCCCC"> well as the</font>

491
00:16:59,709 --> 00:17:05,799
the protocols and<font color="#CCCCCC"> we also have the link</font>

492
00:17:03,250 --> 00:17:09,909
directly<font color="#CCCCCC"> to the GMI repository on</font><font color="#E5E5E5"> open</font>

493
00:17:05,799 --> 00:17:13,119
config<font color="#E5E5E5"> github</font><font color="#CCCCCC"> I'll turn it over to</font>

494
00:17:09,909 --> 00:17:15,699
<font color="#E5E5E5">questions</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> say we had one here Julian</font>

495
00:17:13,119 --> 00:17:17,678
<font color="#CCCCCC">luchek</font><font color="#E5E5E5"> from juniper</font><font color="#CCCCCC"> Robin your part of</font>

496
00:17:15,699 --> 00:17:20,919
<font color="#E5E5E5">the talk you alluded to the fact that</font>

497
00:17:17,679 --> 00:17:23,500
you're<font color="#E5E5E5"> using the streaming telemetry to</font>

498
00:17:20,919 --> 00:17:24,760
trigger<font color="#CCCCCC"> automated mitigation can you</font>

499
00:17:23,500 --> 00:17:30,240
elaborate<font color="#CCCCCC"> on some of</font><font color="#E5E5E5"> those automated</font>

500
00:17:24,760 --> 00:17:33,429
<font color="#E5E5E5">mitigation use cases probably not</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> I</font>

501
00:17:30,240 --> 00:17:36,280
can talk<font color="#E5E5E5"> to why that the general system</font>

502
00:17:33,429 --> 00:17:38,230
<font color="#CCCCCC">it so we have approaches whereby some of</font>

503
00:17:36,280 --> 00:17:40,780
some<font color="#E5E5E5"> and we talked about a bit about</font><font color="#CCCCCC"> it</font>

504
00:17:38,230 --> 00:17:42,640
<font color="#E5E5E5">in their Nespresso paper that we</font><font color="#CCCCCC"> we</font>

505
00:17:40,780 --> 00:17:44,289
<font color="#CCCCCC">published last</font><font color="#E5E5E5"> year where the subset of</font>

506
00:17:42,640 --> 00:17:46,030
<font color="#E5E5E5">the routing functionality runs on the</font>

507
00:17:44,289 --> 00:17:49,179
device and<font color="#CCCCCC"> subset runs off in our own</font>

508
00:17:46,030 --> 00:17:51,080
stack<font color="#CCCCCC"> and for that you</font><font color="#E5E5E5"> clearly now have</font>

509
00:17:49,179 --> 00:17:53,480
lost the ability to couple the

510
00:17:51,080 --> 00:17:54,949
routing elements into signals in the

511
00:17:53,480 --> 00:17:56,360
system you<font color="#CCCCCC"> know usually you'll have some</font>

512
00:17:54,950 --> 00:17:57,769
way to<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to get interfaces event</font>

513
00:17:56,360 --> 00:17:59,629
as a routing<font color="#E5E5E5"> protocol if you're not on</font>

514
00:17:57,769 --> 00:18:02,240
the<font color="#E5E5E5"> device then you don't have that so</font>

515
00:17:59,630 --> 00:18:03,740
that's<font color="#E5E5E5"> really the our primary cases</font>

516
00:18:02,240 --> 00:18:05,480
<font color="#E5E5E5">where we're</font><font color="#CCCCCC"> looking at things as well as</font>

517
00:18:03,740 --> 00:18:07,370
<font color="#E5E5E5">you know kind</font><font color="#CCCCCC"> of prepare automation and</font>

518
00:18:05,480 --> 00:18:08,630
<font color="#CCCCCC">the</font><font color="#E5E5E5"> same kind of things</font><font color="#CCCCCC"> that the first</font>

519
00:18:07,370 --> 00:18:11,090
<font color="#CCCCCC">public folks we're talking to earlier</font>

520
00:18:08,630 --> 00:18:12,830
<font color="#CCCCCC">where to be able</font><font color="#E5E5E5"> to hit the availability</font>

521
00:18:11,090 --> 00:18:14,928
<font color="#E5E5E5">that we need of networks today we just</font>

522
00:18:12,830 --> 00:18:17,178
can't involve humans<font color="#CCCCCC"> so this this</font>

523
00:18:14,929 --> 00:18:19,460
framework<font color="#E5E5E5"> for us</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really a way to push</font>

524
00:18:17,179 --> 00:18:21,500
towards both enabling those off box

525
00:18:19,460 --> 00:18:23,269
control things<font color="#E5E5E5"> control things as well as</font>

526
00:18:21,500 --> 00:18:25,760
management<font color="#CCCCCC"> playing operations those fits</font>

527
00:18:23,269 --> 00:18:27,230
in that<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> wider</font><font color="#CCCCCC"> framework on</font><font color="#E5E5E5"> the</font>

528
00:18:25,760 --> 00:18:29,658
alerting as well I'll just mention<font color="#E5E5E5"> that</font>

529
00:18:27,230 --> 00:18:32,450
Rob<font color="#CCCCCC"> mentioned if we have to have a very</font>

530
00:18:29,659 --> 00:18:34,039
long time window<font color="#CCCCCC"> of averages on SNMP to</font>

531
00:18:32,450 --> 00:18:35,870
kind of get<font color="#CCCCCC"> rid of</font><font color="#E5E5E5"> those artifacts you</font>

532
00:18:34,039 --> 00:18:37,669
can't trigger alerts on edge triggered

533
00:18:35,870 --> 00:18:39,678
<font color="#CCCCCC">events in SNMP because you can't</font>

534
00:18:37,669 --> 00:18:41,179
<font color="#CCCCCC">calculate rates accurately if you can</font>

535
00:18:39,679 --> 00:18:42,769
actually<font color="#E5E5E5"> get good rates out of your</font>

536
00:18:41,179 --> 00:18:45,559
system you<font color="#E5E5E5"> can actually fire your alerts</font>

537
00:18:42,769 --> 00:18:47,240
more<font color="#CCCCCC"> quickly and at least instigate</font>

538
00:18:45,559 --> 00:18:52,129
humans looking at the problem earlier as

539
00:18:47,240 --> 00:18:55,250
well hi<font color="#E5E5E5"> I plot anything to get rid of</font>

540
00:18:52,130 --> 00:18:57,580
SNMP<font color="#CCCCCC"> have you ever looked</font><font color="#E5E5E5"> at DDS which</font>

541
00:18:55,250 --> 00:18:59,990
is<font color="#E5E5E5"> also another</font><font color="#CCCCCC"> pub/sub which goes after</font>

542
00:18:57,580 --> 00:19:03,350
hundreds and thousands<font color="#E5E5E5"> of millions</font><font color="#CCCCCC"> of</font>

543
00:18:59,990 --> 00:19:04,789
<font color="#CCCCCC">devices I'm</font><font color="#E5E5E5"> familiar with</font><font color="#CCCCCC"> that I think</font>

544
00:19:03,350 --> 00:19:07,699
it stands for distributed data<font color="#CCCCCC"> it's</font>

545
00:19:04,789 --> 00:19:09,320
streaming<font color="#E5E5E5"> something like that but there</font>

546
00:19:07,700 --> 00:19:11,240
<font color="#CCCCCC">are several pub/sub mechanisms that</font><font color="#E5E5E5"> we</font>

547
00:19:09,320 --> 00:19:13,279
were<font color="#CCCCCC"> looking at early on one of the</font>

548
00:19:11,240 --> 00:19:14,990
<font color="#E5E5E5">things that that most of them do that we</font>

549
00:19:13,279 --> 00:19:16,460
don't do in this<font color="#CCCCCC"> system because we're so</font>

550
00:19:14,990 --> 00:19:19,700
low to the<font color="#E5E5E5"> network is worry</font><font color="#CCCCCC"> about</font>

551
00:19:16,460 --> 00:19:23,210
persistent storage<font color="#E5E5E5"> we're most worried</font>

552
00:19:19,700 --> 00:19:25,309
about efficient delivery<font color="#E5E5E5"> of data that is</font>

553
00:19:23,210 --> 00:19:26,659
extremely fresh and so<font color="#E5E5E5"> in this</font>

554
00:19:25,309 --> 00:19:28,610
particular collector that we've released

555
00:19:26,659 --> 00:19:30,590
<font color="#E5E5E5">there is no storage mechanism and the</font>

556
00:19:28,610 --> 00:19:33,080
way that we deploy<font color="#E5E5E5"> this internally is we</font>

557
00:19:30,590 --> 00:19:36,110
store it by<font color="#CCCCCC"> making a copy of that</font><font color="#E5E5E5"> stream</font>

558
00:19:33,080 --> 00:19:37,870
<font color="#E5E5E5">post this delivery mechanism and</font><font color="#CCCCCC"> so a</font>

559
00:19:36,110 --> 00:19:40,100
lot of the<font color="#CCCCCC"> pub/sub</font><font color="#E5E5E5"> systems have</font>

560
00:19:37,870 --> 00:19:41,779
guaranteed delivery of like every

561
00:19:40,100 --> 00:19:43,189
message and in this case where<font color="#E5E5E5"> we want</font>

562
00:19:41,779 --> 00:19:45,230
to<font color="#E5E5E5"> have that coalition where we want to</font>

563
00:19:43,190 --> 00:19:47,000
<font color="#CCCCCC">be able</font><font color="#E5E5E5"> to discard things</font><font color="#CCCCCC"> we want to</font>

564
00:19:45,230 --> 00:19:49,399
make sure<font color="#E5E5E5"> that the data that is arriving</font>

565
00:19:47,000 --> 00:19:50,630
at a client is as fresh as possible<font color="#E5E5E5"> and</font>

566
00:19:49,399 --> 00:19:52,489
not necessarily have a guaranteed

567
00:19:50,630 --> 00:19:54,470
delivery of every<font color="#E5E5E5"> single event</font><font color="#CCCCCC"> on a</font>

568
00:19:52,490 --> 00:19:56,960
particular data<font color="#CCCCCC"> so like if an interface</font>

569
00:19:54,470 --> 00:19:58,760
is<font color="#E5E5E5"> flapping really you</font><font color="#CCCCCC"> only want to know</font>

570
00:19:56,960 --> 00:20:01,730
once it stabilizes<font color="#E5E5E5"> make sure that you</font>

571
00:19:58,760 --> 00:20:03,500
have the<font color="#E5E5E5"> last state but if it's</font><font color="#CCCCCC"> flapping</font>

572
00:20:01,730 --> 00:20:04,340
so fast that<font color="#E5E5E5"> you can't deliver every</font>

573
00:20:03,500 --> 00:20:06,650
single

574
00:20:04,340 --> 00:20:08,178
change the the interim once the

575
00:20:06,650 --> 00:20:12,230
transitional ones are not<font color="#E5E5E5"> necessarily as</font>

576
00:20:08,179 --> 00:20:15,169
important<font color="#E5E5E5"> Oh</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> question</font>

577
00:20:12,230 --> 00:20:16,970
I need your Hoskins from<font color="#E5E5E5"> Sprint</font><font color="#CCCCCC"> if you</font>

578
00:20:15,169 --> 00:20:19,220
were building a Greenfield<font color="#E5E5E5"> Network today</font>

579
00:20:16,970 --> 00:20:23,029
<font color="#E5E5E5">would you</font><font color="#CCCCCC"> say it would be</font><font color="#E5E5E5"> feasible to do</font>

580
00:20:19,220 --> 00:20:25,400
it with streaming telemetry<font color="#E5E5E5"> exclusively</font>

581
00:20:23,029 --> 00:20:27,500
for the operational aspects of it or

582
00:20:25,400 --> 00:20:29,630
there's still some some gaps there there

583
00:20:27,500 --> 00:20:31,669
would have<font color="#CCCCCC"> to be filled</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> SMB</font><font color="#E5E5E5"> no I</font>

584
00:20:29,630 --> 00:20:33,500
think<font color="#E5E5E5"> that it's possible</font><font color="#CCCCCC"> to do deploy</font>

585
00:20:31,669 --> 00:20:37,250
entirely on<font color="#CCCCCC"> that home streaming so the</font>

586
00:20:33,500 --> 00:20:38,659
the general<font color="#E5E5E5"> rates of progress we went</font>

587
00:20:37,250 --> 00:20:40,309
through a<font color="#E5E5E5"> lot of iteration up front</font>

588
00:20:38,659 --> 00:20:41,690
<font color="#E5E5E5">we've gone</font><font color="#CCCCCC"> through a</font><font color="#E5E5E5"> lot of design with</font>

589
00:20:40,309 --> 00:20:43,010
vendors as to fitting things<font color="#E5E5E5"> together</font>

590
00:20:41,690 --> 00:20:45,159
<font color="#E5E5E5">and now I think there's fairly good</font>

591
00:20:43,010 --> 00:20:47,658
implementations everywhere<font color="#E5E5E5"> really</font><font color="#CCCCCC"> the</font>

592
00:20:45,159 --> 00:20:49,580
the problem<font color="#E5E5E5"> that you have is like what</font>

593
00:20:47,659 --> 00:20:51,500
data set do you want to take we've the

594
00:20:49,580 --> 00:20:53,299
input we kind of decoupled internally

595
00:20:51,500 --> 00:20:55,340
the implementation<font color="#E5E5E5"> of the protocols in</font>

596
00:20:53,299 --> 00:20:57,620
getting the data off<font color="#CCCCCC"> the device to the</font>

597
00:20:55,340 --> 00:20:58,939
<font color="#CCCCCC">the schema</font><font color="#E5E5E5"> that was being</font><font color="#CCCCCC"> used and that</font>

598
00:20:57,620 --> 00:21:00,590
that's meant that we've ended up<font color="#CCCCCC"> with</font>

599
00:20:58,940 --> 00:21:02,299
these proxies doing translations so

600
00:21:00,590 --> 00:21:03,730
there's to adopt it straight away<font color="#CCCCCC"> you</font>

601
00:21:02,299 --> 00:21:05,779
<font color="#E5E5E5">probably don't get a</font><font color="#CCCCCC"> vendor-neutral</font>

602
00:21:03,730 --> 00:21:08,210
<font color="#CCCCCC">dates model but</font><font color="#E5E5E5"> you do get a</font>

603
00:21:05,779 --> 00:21:10,220
<font color="#CCCCCC">vendor-neutral service the there's</font>

604
00:21:08,210 --> 00:21:11,899
partial<font color="#E5E5E5"> support</font><font color="#CCCCCC"> across different vendors</font>

605
00:21:10,220 --> 00:21:13,490
for the<font color="#E5E5E5"> vendor</font><font color="#CCCCCC"> neutral data model but</font>

606
00:21:11,899 --> 00:21:16,370
some you would probably<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> M fill</font>

607
00:21:13,490 --> 00:21:17,779
some gaps<font color="#E5E5E5"> and particularly when there's</font>

608
00:21:16,370 --> 00:21:19,309
been a lot of<font color="#E5E5E5"> work with vendors</font><font color="#CCCCCC"> to look</font>

609
00:21:17,779 --> 00:21:20,720
at how they sample their<font color="#E5E5E5"> underlying data</font>

610
00:21:19,309 --> 00:21:22,668
sources and<font color="#E5E5E5"> how they get it</font><font color="#CCCCCC"> onto the</font>

611
00:21:20,720 --> 00:21:24,020
wire efficiently<font color="#E5E5E5"> so lots of we've been</font>

612
00:21:22,669 --> 00:21:25,789
<font color="#E5E5E5">through</font><font color="#CCCCCC"> lots of iteration even with</font>

613
00:21:24,020 --> 00:21:27,559
vendors<font color="#CCCCCC"> and kind</font><font color="#E5E5E5"> of native schemas</font><font color="#CCCCCC"> that</font>

614
00:21:25,789 --> 00:21:29,960
<font color="#CCCCCC">when</font><font color="#E5E5E5"> we start to look about how do you</font>

615
00:21:27,559 --> 00:21:31,490
transmit<font color="#CCCCCC"> that</font><font color="#E5E5E5"> they just doesn't scale so</font>

616
00:21:29,960 --> 00:21:33,020
but I<font color="#E5E5E5"> think right now</font><font color="#CCCCCC"> it would be</font>

617
00:21:31,490 --> 00:21:34,370
possible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> build something with with</font>

618
00:21:33,020 --> 00:21:35,658
<font color="#CCCCCC">Greenfield and we've actually introduced</font>

619
00:21:34,370 --> 00:21:46,850
vendors like that into our<font color="#E5E5E5"> network</font>

620
00:21:35,659 --> 00:21:50,539
thanks though<font color="#CCCCCC"> Tony</font><font color="#E5E5E5"> tell</font><font color="#CCCCCC"> Pro Comcast</font><font color="#E5E5E5"> so</font>

621
00:21:46,850 --> 00:21:54,110
with old data you know<font color="#E5E5E5"> SNMP gather data</font>

622
00:21:50,539 --> 00:21:55,640
<font color="#E5E5E5">and the new data streaming gathered any</font>

623
00:21:54,110 --> 00:21:58,399
lessons<font color="#CCCCCC"> learned that</font><font color="#E5E5E5"> you could share</font>

624
00:21:55,640 --> 00:22:01,370
<font color="#CCCCCC">about you know</font><font color="#E5E5E5"> kind of viewing those</font>

625
00:21:58,399 --> 00:22:04,010
things together like<font color="#E5E5E5"> how to impedance</font>

626
00:22:01,370 --> 00:22:06,199
match them so that you<font color="#E5E5E5"> can sort of</font><font color="#CCCCCC"> make</font>

627
00:22:04,010 --> 00:22:07,760
sense<font color="#E5E5E5"> of something you know</font><font color="#CCCCCC"> gather the</font>

628
00:22:06,200 --> 00:22:09,919
two different ways<font color="#E5E5E5"> sure one of the</font>

629
00:22:07,760 --> 00:22:12,169
<font color="#E5E5E5">things that we've done is we've got a</font>

630
00:22:09,919 --> 00:22:13,870
<font color="#CCCCCC">bunch of clients</font><font color="#E5E5E5"> internally that are</font>

631
00:22:12,169 --> 00:22:16,630
relying on<font color="#CCCCCC"> data</font><font color="#E5E5E5"> that has been collected</font>

632
00:22:13,870 --> 00:22:18,129
from SNMP for a very long time<font color="#E5E5E5"> and</font>

633
00:22:16,630 --> 00:22:19,960
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> kind of a</font><font color="#E5E5E5"> persistent storage</font>

634
00:22:18,130 --> 00:22:21,850
layer that<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> earlier</font><font color="#E5E5E5"> and said</font>

635
00:22:19,960 --> 00:22:23,320
we were<font color="#E5E5E5"> replacing the delivery one of</font>

636
00:22:21,850 --> 00:22:25,389
the things that we've chosen to do is

637
00:22:23,320 --> 00:22:27,399
try to maintain a<font color="#CCCCCC"> backward-compatible</font>

638
00:22:25,390 --> 00:22:29,110
<font color="#E5E5E5">layer at that storage and so we're</font>

639
00:22:27,400 --> 00:22:33,159
basically turning<font color="#CCCCCC"> everything so it looks</font>

640
00:22:29,110 --> 00:22:34,510
<font color="#CCCCCC">like it were SNMP</font><font color="#E5E5E5"> IDs</font><font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to kind</font>

641
00:22:33,159 --> 00:22:35,860
of meet that equivalence bar and then

642
00:22:34,510 --> 00:22:39,879
we're gonna move everybody down once

643
00:22:35,860 --> 00:22:42,668
we've kind of got ubiquity<font color="#CCCCCC"> one of the</font>

644
00:22:39,880 --> 00:22:44,559
things that we we see is that<font color="#E5E5E5"> many</font><font color="#CCCCCC"> of</font>

645
00:22:42,669 --> 00:22:46,210
the data becomes cleaner when we switch

646
00:22:44,559 --> 00:22:48,520
it<font color="#E5E5E5"> over but we're still gathering that</font>

647
00:22:46,210 --> 00:22:50,830
data<font color="#E5E5E5"> at 30 seconds in those persistent</font>

648
00:22:48,520 --> 00:22:52,299
storage mechanisms just<font color="#E5E5E5"> because it makes</font>

649
00:22:50,830 --> 00:22:55,658
it easier for clients to<font color="#E5E5E5"> not have to</font>

650
00:22:52,299 --> 00:22:57,158
deal with<font color="#E5E5E5"> disparate</font><font color="#CCCCCC"> timescales and but</font>

651
00:22:55,659 --> 00:22:58,450
we're<font color="#CCCCCC"> looking to</font><font color="#E5E5E5"> continually improve</font>

652
00:22:57,159 --> 00:22:59,289
that<font color="#E5E5E5"> but that's one of</font><font color="#CCCCCC"> the things that</font>

653
00:22:58,450 --> 00:23:01,270
we've<font color="#E5E5E5"> done is trying to actually</font>

654
00:22:59,289 --> 00:23:02,890
<font color="#CCCCCC">maintain backward compatibility in the</font>

655
00:23:01,270 --> 00:23:06,879
way that we're presenting<font color="#E5E5E5"> the data if we</font>

656
00:23:02,890 --> 00:23:09,190
have a<font color="#E5E5E5"> legacy</font><font color="#CCCCCC"> system and right so</font><font color="#E5E5E5"> I mean</font>

657
00:23:06,880 --> 00:23:11,440
<font color="#E5E5E5">that was my thought</font><font color="#CCCCCC"> too but any gotchas</font>

658
00:23:09,190 --> 00:23:15,010
or caveats or lessons that you can

659
00:23:11,440 --> 00:23:16,510
<font color="#E5E5E5">relate</font><font color="#CCCCCC"> I think that</font><font color="#E5E5E5"> side of things has</font>

660
00:23:15,010 --> 00:23:18,429
<font color="#CCCCCC">been relatively</font><font color="#E5E5E5"> painless actually I</font>

661
00:23:16,510 --> 00:23:22,480
would say<font color="#CCCCCC"> that the it's actually been a</font>

662
00:23:18,429 --> 00:23:24,190
big advantage<font color="#CCCCCC"> to have that</font><font color="#E5E5E5"> norm a few</font>

663
00:23:22,480 --> 00:23:25,390
<font color="#E5E5E5">bugs accepted well no I was I was</font>

664
00:23:24,190 --> 00:23:26,919
actually<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> say that the biggest</font>

665
00:23:25,390 --> 00:23:28,779
the biggest<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> that we've had is</font>

666
00:23:26,919 --> 00:23:30,730
the poor<font color="#CCCCCC"> quality</font><font color="#E5E5E5"> of SNMP data to begin</font>

667
00:23:28,779 --> 00:23:32,350
with and actually<font color="#E5E5E5"> selling people on the</font>

668
00:23:30,730 --> 00:23:34,539
fact that<font color="#E5E5E5"> your data is now better and</font>

669
00:23:32,350 --> 00:23:36,428
actually qualifying it one of the things

670
00:23:34,539 --> 00:23:38,740
we've had<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> is run through</font><font color="#E5E5E5"> a bunch</font>

671
00:23:36,429 --> 00:23:41,080
of tests that<font color="#CCCCCC"> compare the</font><font color="#E5E5E5"> SNMP data to</font>

672
00:23:38,740 --> 00:23:42,580
the<font color="#E5E5E5"> esti data when you know the SNMP</font>

673
00:23:41,080 --> 00:23:43,990
data is wrong it's it's hard<font color="#E5E5E5"> to sell</font>

674
00:23:42,580 --> 00:23:45,158
somebody<font color="#E5E5E5"> on</font><font color="#CCCCCC"> it well the fact that</font>

675
00:23:43,990 --> 00:23:47,860
they're<font color="#E5E5E5"> different is</font><font color="#CCCCCC"> because it's now</font>

676
00:23:45,159 --> 00:23:49,990
right<font color="#CCCCCC"> and so we've had to put in a bunch</font>

677
00:23:47,860 --> 00:23:51,639
of<font color="#E5E5E5"> work</font><font color="#CCCCCC"> to add thresholds</font><font color="#E5E5E5"> in so like</font>

678
00:23:49,990 --> 00:23:53,559
<font color="#E5E5E5">rate calculations I mean you saw some</font><font color="#CCCCCC"> of</font>

679
00:23:51,640 --> 00:23:55,450
<font color="#E5E5E5">those graphs you say well if we're gonna</font>

680
00:23:53,559 --> 00:23:56,918
<font color="#E5E5E5">we're going to</font><font color="#CCCCCC"> only compare the the time</font>

681
00:23:55,450 --> 00:23:58,929
window<font color="#CCCCCC"> to average ha's of these which</font>

682
00:23:56,919 --> 00:24:00,640
then that starts to<font color="#CCCCCC"> look similar you</font>

683
00:23:58,929 --> 00:24:02,289
can't compare the the raw counters

684
00:24:00,640 --> 00:24:06,070
coming off the devices because you get

685
00:24:02,289 --> 00:24:07,899
strange blips and defects and so<font color="#CCCCCC"> I think</font>

686
00:24:06,070 --> 00:24:10,178
there<font color="#E5E5E5"> was at least early on there was</font><font color="#CCCCCC"> a</font>

687
00:24:07,899 --> 00:24:11,529
big sales pitch<font color="#E5E5E5"> to try to convince</font>

688
00:24:10,179 --> 00:24:17,130
people that the data they were relying

689
00:24:11,529 --> 00:24:17,130
on previously<font color="#E5E5E5"> is not accurate</font><font color="#CCCCCC"> Thanks</font>

690
00:24:18,700 --> 00:24:22,180
any other questions

691
00:24:32,340 --> 00:24:38,829
great thank you<font color="#E5E5E5"> very much thank you</font>

692
00:24:34,400 --> 00:24:38,829
[Applause]

