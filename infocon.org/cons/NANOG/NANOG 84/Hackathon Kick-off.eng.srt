1
00:00:00,000 --> 00:00:04,960
[Music]

2
00:00:04,960 --> 00:00:07,839
for the hackathon you can

3
00:00:07,839 --> 00:00:10,719
choose the project you want to work on

4
00:00:10,719 --> 00:00:12,320
or as i mentioned we have a few

5
00:00:12,320 --> 00:00:14,559
volunteers here

6
00:00:14,559 --> 00:00:17,520
who have uh

7
00:00:17,520 --> 00:00:19,840
graciously volunteered to

8
00:00:19,840 --> 00:00:22,640
to help form some teams uh the theme for

9
00:00:22,640 --> 00:00:24,160
this hackathon

10
00:00:24,160 --> 00:00:26,880
is giving back to open source

11
00:00:26,880 --> 00:00:29,199
um

12
00:00:29,199 --> 00:00:32,320
we'd like to encourage you to uh to give

13
00:00:32,320 --> 00:00:34,559
back to open source projects by uh

14
00:00:34,559 --> 00:00:37,680
helping fix issues with them or uh

15
00:00:37,680 --> 00:00:39,840
or contribute new features

16
00:00:39,840 --> 00:00:42,000
um but you really can choose any project

17
00:00:42,000 --> 00:00:43,600
that you want to work on at this

18
00:00:43,600 --> 00:00:46,160
hackathon

19
00:00:46,640 --> 00:00:48,640
in addition since we have a lab

20
00:00:48,640 --> 00:00:51,280
infrastructure available

21
00:00:51,280 --> 00:00:53,039
if you don't want to work on a software

22
00:00:53,039 --> 00:00:55,600
development project you can

23
00:00:55,600 --> 00:00:58,719
make use of our lab and just

24
00:00:58,719 --> 00:01:00,719
try to learn something new about uh

25
00:01:00,719 --> 00:01:03,199
about routing

26
00:01:03,199 --> 00:01:05,760
and uh we also this time have a

27
00:01:05,760 --> 00:01:08,240
scavenger hunt that i think aaron will

28
00:01:08,240 --> 00:01:12,039
be talking about later

29
00:01:12,080 --> 00:01:13,280
uh

30
00:01:13,280 --> 00:01:15,520
chris will be going into more detail on

31
00:01:15,520 --> 00:01:17,280
the infrastructure

32
00:01:17,280 --> 00:01:20,560
um but we are running it in uh

33
00:01:20,560 --> 00:01:22,240
container lab

34
00:01:22,240 --> 00:01:24,640
and we've set up a simple topology with

35
00:01:24,640 --> 00:01:27,759
a couple of uh nokia

36
00:01:27,759 --> 00:01:30,000
and

37
00:01:30,320 --> 00:01:33,680
arista routers and a couple of centos

38
00:01:33,680 --> 00:01:37,600
linux hosts to use for for testing

39
00:01:37,600 --> 00:01:38,720
you're welcome to use this

40
00:01:38,720 --> 00:01:41,040
infrastructure for your projects if that

41
00:01:41,040 --> 00:01:44,320
if it provides some value

42
00:01:44,320 --> 00:01:46,320
but you don't have to use this for the

43
00:01:46,320 --> 00:01:47,439
hackathon

44
00:01:47,439 --> 00:01:50,560
if you have an idea for a project

45
00:01:50,560 --> 00:01:53,280
we'd encourage you to

46
00:01:53,280 --> 00:01:55,439
to mention it here when we get to the

47
00:01:55,439 --> 00:01:58,079
project uh part of the presentation

48
00:01:58,079 --> 00:01:59,360
um

49
00:01:59,360 --> 00:02:00,719
if you're looking for additional team

50
00:02:00,719 --> 00:02:02,960
members that's an excellent time to

51
00:02:02,960 --> 00:02:05,520
to promote your idea and see if you can

52
00:02:05,520 --> 00:02:07,520
find anybody else who would like to

53
00:02:07,520 --> 00:02:10,399
collaborate with you

54
00:02:10,959 --> 00:02:13,599
if you don't have a project already in

55
00:02:13,599 --> 00:02:15,680
mind

56
00:02:15,680 --> 00:02:17,120
we can

57
00:02:17,120 --> 00:02:19,360
help you out and try and give some ideas

58
00:02:19,360 --> 00:02:22,080
so all of the times for the hackathon

59
00:02:22,080 --> 00:02:24,560
will be listed in central standard time

60
00:02:24,560 --> 00:02:26,800
since the physical event is being held

61
00:02:26,800 --> 00:02:29,840
in austin texas

62
00:02:30,640 --> 00:02:34,840
the official hackathon kicks off at 1 pm

63
00:02:34,840 --> 00:02:38,720
um saturday a week from the saturday

64
00:02:38,720 --> 00:02:40,000
[Music]

65
00:02:40,000 --> 00:02:43,280
and runs until 5 pm sunday the evening

66
00:02:43,280 --> 00:02:46,160
before the main nano conference starts

67
00:02:46,160 --> 00:02:48,000
i will have mentors available on

68
00:02:48,000 --> 00:02:50,959
saturday to help until 4 pm

69
00:02:50,959 --> 00:02:55,519
and on sunday from noon until the

70
00:02:55,519 --> 00:02:59,120
close of the hackathon at 5 pm

71
00:02:59,120 --> 00:03:00,000
and

72
00:03:00,000 --> 00:03:03,599
we'll be making use of zoom and slack

73
00:03:03,599 --> 00:03:05,760
to help teams communicate and

74
00:03:05,760 --> 00:03:07,040
collaborate

75
00:03:07,040 --> 00:03:09,040
slack will be our primary communication

76
00:03:09,040 --> 00:03:11,360
method

77
00:03:11,360 --> 00:03:13,280
you should have already received an

78
00:03:13,280 --> 00:03:14,400
invite

79
00:03:14,400 --> 00:03:16,560
if you haven't

80
00:03:16,560 --> 00:03:20,560
let us know and we'll get you added

81
00:03:21,280 --> 00:03:22,560
there is a

82
00:03:22,560 --> 00:03:25,040
nanog84 hackathon channel already

83
00:03:25,040 --> 00:03:27,680
created that you should be a member of

84
00:03:27,680 --> 00:03:29,200
that's where general discussion will

85
00:03:29,200 --> 00:03:30,560
happen

86
00:03:30,560 --> 00:03:32,799
but teams are welcome to create

87
00:03:32,799 --> 00:03:34,560
additional channels

88
00:03:34,560 --> 00:03:35,920
uh for their

89
00:03:35,920 --> 00:03:37,599
team to use

90
00:03:37,599 --> 00:03:38,050
um

91
00:03:38,050 --> 00:03:39,599
[Music]

92
00:03:39,599 --> 00:03:42,159
the mentors who will be helping out with

93
00:03:42,159 --> 00:03:44,159
the hackathon are all part of a mentor's

94
00:03:44,159 --> 00:03:45,920
group so if you want to get our

95
00:03:45,920 --> 00:03:48,640
attention you can use app mentors

96
00:03:48,640 --> 00:03:51,120
and that'll uh make sure that we get

97
00:03:51,120 --> 00:03:53,439
alerted to your message

98
00:03:53,439 --> 00:03:55,519
we'd like you to avoid though using at

99
00:03:55,519 --> 00:03:58,159
here and at channel

100
00:03:58,159 --> 00:04:01,120
as a way to get attention and as i said

101
00:04:01,120 --> 00:04:03,599
we're also using zoom uh it's good to

102
00:04:03,599 --> 00:04:05,280
have an up-to-date

103
00:04:05,280 --> 00:04:07,360
version of the zoom client so you have

104
00:04:07,360 --> 00:04:09,599
access to the latest features we'll be

105
00:04:09,599 --> 00:04:12,080
making use of breakout rooms

106
00:04:12,080 --> 00:04:14,319
and can create breakout rooms for each

107
00:04:14,319 --> 00:04:16,000
of the teams to use so that they have a

108
00:04:16,000 --> 00:04:18,079
private meeting space

109
00:04:18,079 --> 00:04:20,959
uh to collaborate together um at the end

110
00:04:20,959 --> 00:04:25,199
of the hackathon at 5 p.m on sunday

111
00:04:25,680 --> 00:04:27,199
we'll have an opportunity for each of

112
00:04:27,199 --> 00:04:30,560
the teams to present their work

113
00:04:32,400 --> 00:04:36,560
and both during the hackathon and

114
00:04:36,560 --> 00:04:37,919
after the

115
00:04:37,919 --> 00:04:39,919
closing presentations we'll also be

116
00:04:39,919 --> 00:04:41,919
doing some interviews

117
00:04:41,919 --> 00:04:43,600
with the participants

118
00:04:43,600 --> 00:04:46,160
we'll be putting together a short

119
00:04:46,160 --> 00:04:49,759
video presentation that will get played

120
00:04:49,759 --> 00:04:53,360
during the main nano conference

121
00:04:53,360 --> 00:04:56,160
to highlight what has been accomplished

122
00:04:56,160 --> 00:04:58,000
at this hackathon

123
00:04:58,000 --> 00:05:00,000
so the theme of this hackathon is giving

124
00:05:00,000 --> 00:05:01,840
back to open source

125
00:05:01,840 --> 00:05:04,960
so we've got a number of uh

126
00:05:04,960 --> 00:05:06,960
open source maintainers that have

127
00:05:06,960 --> 00:05:09,680
graciously volunteered to uh

128
00:05:09,680 --> 00:05:11,360
participate in the hackathon and help

129
00:05:11,360 --> 00:05:13,120
form teams

130
00:05:13,120 --> 00:05:15,600
and each of them

131
00:05:15,600 --> 00:05:18,960
represents a various open source

132
00:05:18,960 --> 00:05:20,240
project

133
00:05:20,240 --> 00:05:22,639
and they may have some additional

134
00:05:22,639 --> 00:05:25,600
details then about uh

135
00:05:25,600 --> 00:05:27,280
what type of challenges they're looking

136
00:05:27,280 --> 00:05:28,080
at

137
00:05:28,080 --> 00:05:30,479
accomplishing at this hackathon up first

138
00:05:30,479 --> 00:05:31,759
we have uh

139
00:05:31,759 --> 00:05:34,479
gnmic

140
00:05:34,479 --> 00:05:35,680
dream

141
00:05:35,680 --> 00:05:36,880
and roman

142
00:05:36,880 --> 00:05:39,759
so i have a few slides here showing

143
00:05:39,759 --> 00:05:43,440
or trying to explain what gmyc is and

144
00:05:43,440 --> 00:05:44,960
i'll

145
00:05:44,960 --> 00:05:46,080
list

146
00:05:46,080 --> 00:05:47,600
a few

147
00:05:47,600 --> 00:05:50,240
issues or a few future ideas that

148
00:05:50,240 --> 00:05:52,479
people can

149
00:05:52,479 --> 00:05:55,919
work on during the hackathon so uh

150
00:05:55,919 --> 00:05:57,360
gmyc

151
00:05:57,360 --> 00:05:58,720
what is it

152
00:05:58,720 --> 00:06:01,280
it it has three three aspects to it or

153
00:06:01,280 --> 00:06:02,720
there are basically three different ways

154
00:06:02,720 --> 00:06:06,160
you can use it it's a cli tool

155
00:06:06,160 --> 00:06:08,800
you can run commands there run the gmi

156
00:06:08,800 --> 00:06:11,039
rpcs or

157
00:06:11,039 --> 00:06:13,280
a few other commands that might may or

158
00:06:13,280 --> 00:06:15,919
might not be related to our pcs it's

159
00:06:15,919 --> 00:06:17,919
also a telemetry collector supporting

160
00:06:17,919 --> 00:06:20,560
multiple outputs clustering

161
00:06:20,560 --> 00:06:21,840
those kind of things

162
00:06:21,840 --> 00:06:23,600
and it's also a goallink package that

163
00:06:23,600 --> 00:06:25,759
you can import and

164
00:06:25,759 --> 00:06:27,039
write

165
00:06:27,039 --> 00:06:28,800
go programs with

166
00:06:28,800 --> 00:06:31,600
so the

167
00:06:33,120 --> 00:06:36,160
as a cli so like i said it supports

168
00:06:36,160 --> 00:06:39,600
all uh the gmai rpcs

169
00:06:39,600 --> 00:06:42,160
you can use templates to

170
00:06:42,160 --> 00:06:43,360
configure

171
00:06:43,360 --> 00:06:46,400
your routers using set requests it also

172
00:06:46,400 --> 00:06:48,720
has a few other commands like prompt

173
00:06:48,720 --> 00:06:49,919
generate

174
00:06:49,919 --> 00:06:52,639
get set if uh or listen

175
00:06:52,639 --> 00:06:56,319
uh there is a full command reference uh

176
00:06:56,319 --> 00:06:58,800
in the documentation page i'll not go

177
00:06:58,800 --> 00:07:01,680
through uh all of them one by one i'll

178
00:07:01,680 --> 00:07:03,440
in the interest of time i'll leave more

179
00:07:03,440 --> 00:07:06,479
time to the other maintainers

180
00:07:06,479 --> 00:07:08,400
as a telemetry collector supports

181
00:07:08,400 --> 00:07:11,120
multiple outputs clustering it supports

182
00:07:11,120 --> 00:07:13,360
a genomic server as well

183
00:07:13,360 --> 00:07:15,520
dynamic target discovery

184
00:07:15,520 --> 00:07:18,000
uh data manipulation and you can even

185
00:07:18,000 --> 00:07:21,120
run actions uh based on what kind of

186
00:07:21,120 --> 00:07:24,080
updates you get from uh routers or when

187
00:07:24,080 --> 00:07:25,199
a target

188
00:07:25,199 --> 00:07:26,800
is discovered

189
00:07:26,800 --> 00:07:30,000
and then as a go package it's basically

190
00:07:30,000 --> 00:07:32,960
a wrapper around the open config genomic

191
00:07:32,960 --> 00:07:35,120
generated or proto-generated package

192
00:07:35,120 --> 00:07:35,919
it's

193
00:07:35,919 --> 00:07:38,160
just there to make it easier

194
00:07:38,160 --> 00:07:39,440
for you to write

195
00:07:39,440 --> 00:07:41,039
code instead of

196
00:07:41,039 --> 00:07:44,319
crafting manually or structures you can

197
00:07:44,319 --> 00:07:47,520
use the helper functions there to create

198
00:07:47,520 --> 00:07:50,719
requests and responses

199
00:07:50,879 --> 00:07:51,680
so

200
00:07:51,680 --> 00:07:55,360
uh at the hackathon what can you do

201
00:07:55,360 --> 00:07:58,639
for gnyc or with gmyc is

202
00:07:58,639 --> 00:07:59,759
work on

203
00:07:59,759 --> 00:08:02,000
some of the open issues there so they're

204
00:08:02,000 --> 00:08:04,400
all tagged with a

205
00:08:04,400 --> 00:08:05,919
hackathon label

206
00:08:05,919 --> 00:08:07,919
there there are a few examples i put in

207
00:08:07,919 --> 00:08:10,639
the screenshot there so

208
00:08:10,639 --> 00:08:12,400
starting at the bottom

209
00:08:12,400 --> 00:08:14,080
it would be nice to have

210
00:08:14,080 --> 00:08:17,280
target discovery from netbox or from

211
00:08:17,280 --> 00:08:20,000
kubernetes

212
00:08:20,400 --> 00:08:21,199
or

213
00:08:21,199 --> 00:08:24,000
adding uh some kind of proxy translating

214
00:08:24,000 --> 00:08:27,280
between json rpc and gnmi

215
00:08:27,280 --> 00:08:28,400
or

216
00:08:28,400 --> 00:08:29,680
adding

217
00:08:29,680 --> 00:08:31,520
grpc

218
00:08:31,520 --> 00:08:33,760
authentication for the server that gmyc

219
00:08:33,760 --> 00:08:34,958
supports

220
00:08:34,958 --> 00:08:36,799
or add any

221
00:08:36,799 --> 00:08:39,760
flag to the existing commands to improve

222
00:08:39,760 --> 00:08:42,080
the functionality of any of the commands

223
00:08:42,080 --> 00:08:42,958
there

224
00:08:42,958 --> 00:08:46,160
or if you have your own idea

225
00:08:46,160 --> 00:08:47,920
you can

226
00:08:47,920 --> 00:08:49,440
try to implement it

227
00:08:49,440 --> 00:08:52,640
if you don't want to write go or

228
00:08:52,640 --> 00:08:54,240
it's not something interesting for you

229
00:08:54,240 --> 00:08:57,040
you can try to create some uh automation

230
00:08:57,040 --> 00:08:58,399
workflows using

231
00:08:58,399 --> 00:09:01,440
the actions gmyc supports

232
00:09:01,440 --> 00:09:02,320
uh

233
00:09:02,320 --> 00:09:04,320
as well as container

234
00:09:04,320 --> 00:09:08,160
or you can write configuration templates

235
00:09:08,160 --> 00:09:10,480
which are written in go template in the

236
00:09:10,480 --> 00:09:12,720
go templating language so you can write

237
00:09:12,720 --> 00:09:14,000
configuration templates for your

238
00:09:14,000 --> 00:09:15,680
favorite uh

239
00:09:15,680 --> 00:09:17,279
network operating

240
00:09:17,279 --> 00:09:18,160
system

241
00:09:18,160 --> 00:09:20,560
uh just to reiterate what

242
00:09:20,560 --> 00:09:22,560
jeff said and what chris will be talking

243
00:09:22,560 --> 00:09:24,480
about later on is that all the virtual

244
00:09:24,480 --> 00:09:26,080
infrastructure that we're providing for

245
00:09:26,080 --> 00:09:29,760
this uh is built using container lab so

246
00:09:29,760 --> 00:09:31,760
regardless of whether or not uh you

247
00:09:31,760 --> 00:09:35,360
choose to to work on a hackathon project

248
00:09:35,360 --> 00:09:37,279
uh really centered around it you're

249
00:09:37,279 --> 00:09:38,320
probably you're probably going to be

250
00:09:38,320 --> 00:09:40,720
using it anyway yeah okay yeah thank you

251
00:09:40,720 --> 00:09:44,080
very much for inviting us uh both me and

252
00:09:44,080 --> 00:09:46,880
karim to now hack it on i think

253
00:09:46,880 --> 00:09:49,600
most of the participants have been

254
00:09:49,600 --> 00:09:52,320
already familiar with the container lab

255
00:09:52,320 --> 00:09:54,720
but i will still spend some maybe two

256
00:09:54,720 --> 00:09:56,720
three minutes explaining what it is in a

257
00:09:56,720 --> 00:09:58,880
very broad strokes

258
00:09:58,880 --> 00:10:01,519
so container lab is basically a cli tool

259
00:10:01,519 --> 00:10:03,600
that is designed to make deployment

260
00:10:03,600 --> 00:10:06,720
networking labs easier and more fun

261
00:10:06,720 --> 00:10:09,279
you can deploy topologies

262
00:10:09,279 --> 00:10:11,360
as big as you want or i should rather

263
00:10:11,360 --> 00:10:13,200
say as big as your underlying

264
00:10:13,200 --> 00:10:15,920
infrastructure supports or allows you to

265
00:10:15,920 --> 00:10:18,399
but for example you can build like cloud

266
00:10:18,399 --> 00:10:20,560
apologies if you work in the data center

267
00:10:20,560 --> 00:10:22,959
space or you can build small topologies

268
00:10:22,959 --> 00:10:25,200
with just two or three nodes if you just

269
00:10:25,200 --> 00:10:27,279
want to interrogate some

270
00:10:27,279 --> 00:10:29,120
northbound interfaces for example or you

271
00:10:29,120 --> 00:10:30,800
want to play in the automation sphere

272
00:10:30,800 --> 00:10:32,640
and you don't really need huge

273
00:10:32,640 --> 00:10:36,000
topologies a few pointers which are kind

274
00:10:36,000 --> 00:10:38,720
of important on this uh stage is that

275
00:10:38,720 --> 00:10:40,560
there is a documentation portal for

276
00:10:40,560 --> 00:10:43,360
container lab it is container lab dot sr

277
00:10:43,360 --> 00:10:44,880
linux.dev

278
00:10:44,880 --> 00:10:46,480
so if you are not familiar with

279
00:10:46,480 --> 00:10:48,720
container lab please go and check this

280
00:10:48,720 --> 00:10:51,120
resource it has a lot of documentation

281
00:10:51,120 --> 00:10:54,480
around it and i think covers most of the

282
00:10:54,480 --> 00:10:55,760
you know uh

283
00:10:55,760 --> 00:10:57,519
first coming questions

284
00:10:57,519 --> 00:10:59,680
we also had a session for container app

285
00:10:59,680 --> 00:11:03,360
at previous nano app nano 83 so it was a

286
00:11:03,360 --> 00:11:05,200
one hour long session

287
00:11:05,200 --> 00:11:08,000
rather tutorial where we covered

288
00:11:08,000 --> 00:11:10,160
container lab from basics to its

289
00:11:10,160 --> 00:11:12,399
advanced use cases so if you want to

290
00:11:12,399 --> 00:11:14,640
know more click on this link and i think

291
00:11:14,640 --> 00:11:16,320
we'll share the slides on slack so

292
00:11:16,320 --> 00:11:18,480
everybody will have access to clickable

293
00:11:18,480 --> 00:11:20,320
links

294
00:11:20,320 --> 00:11:22,800
the basics of container lab or how does

295
00:11:22,800 --> 00:11:26,000
it work well it's actually rather simple

296
00:11:26,000 --> 00:11:28,079
in a way that you need to only create

297
00:11:28,079 --> 00:11:29,839
one topology file

298
00:11:29,839 --> 00:11:32,320
which defines your topology as a set of

299
00:11:32,320 --> 00:11:34,959
nodes and the links that

300
00:11:34,959 --> 00:11:37,360
that glue the nodes together

301
00:11:37,360 --> 00:11:39,279
and then when you have this yaml file

302
00:11:39,279 --> 00:11:42,160
you ask container lab cli to take it in

303
00:11:42,160 --> 00:11:44,160
and deploy your topology

304
00:11:44,160 --> 00:11:47,200
it is really all it takes and the the

305
00:11:47,200 --> 00:11:50,000
secret sauce is how we make different

306
00:11:50,000 --> 00:11:52,480
containerized noses and vm business to

307
00:11:52,480 --> 00:11:54,959
work in this kind of text manner or

308
00:11:54,959 --> 00:11:56,560
declarative fashion

309
00:11:56,560 --> 00:11:58,959
i posted here a link to the topology

310
00:11:58,959 --> 00:12:01,040
definition file that

311
00:12:01,040 --> 00:12:03,120
basically explains what can you put in

312
00:12:03,120 --> 00:12:05,519
your topology file and what what should

313
00:12:05,519 --> 00:12:08,000
be there as a bare minimum so you will

314
00:12:08,000 --> 00:12:10,720
see all the examples on our portal as

315
00:12:10,720 --> 00:12:12,240
well

316
00:12:12,240 --> 00:12:15,200
to make it more easier and to to have

317
00:12:15,200 --> 00:12:17,360
like a high level view of the topology

318
00:12:17,360 --> 00:12:20,160
definition here i show you what can be

319
00:12:20,160 --> 00:12:22,240
done with container lab if you want to

320
00:12:22,240 --> 00:12:24,720
create a topology with three nodes so on

321
00:12:24,720 --> 00:12:26,880
the left hand side you see the

322
00:12:26,880 --> 00:12:29,279
real working topology definition file

323
00:12:29,279 --> 00:12:32,160
which we also call clap file and on the

324
00:12:32,160 --> 00:12:34,000
right hand side you see the

325
00:12:34,000 --> 00:12:36,079
logical view or the the mop of your

326
00:12:36,079 --> 00:12:38,480
network that will be deployed once you

327
00:12:38,480 --> 00:12:41,279
use this topology definition file

328
00:12:41,279 --> 00:12:42,639
as you can see

329
00:12:42,639 --> 00:12:45,200
the major portion of the topology

330
00:12:45,200 --> 00:12:47,279
definition file is

331
00:12:47,279 --> 00:12:50,079
defining your nodes so the the amount of

332
00:12:50,079 --> 00:12:51,519
nodes that you will define in your

333
00:12:51,519 --> 00:12:53,600
topology will be actually deployed by

334
00:12:53,600 --> 00:12:54,880
container lab

335
00:12:54,880 --> 00:12:55,680
and

336
00:12:55,680 --> 00:12:58,240
whatever you use here must must have

337
00:12:58,240 --> 00:13:00,480
some few important parameters so you

338
00:13:00,480 --> 00:13:03,279
have your kinds to define which nodes

339
00:13:03,279 --> 00:13:05,279
you want to deploy with container lab

340
00:13:05,279 --> 00:13:07,360
and you have an image the image is the

341
00:13:07,360 --> 00:13:09,680
docker image that you would typically

342
00:13:09,680 --> 00:13:11,920
use with docker cli or any other

343
00:13:11,920 --> 00:13:13,519
container on time

344
00:13:13,519 --> 00:13:16,399
and that's basically it now you have

345
00:13:16,399 --> 00:13:18,880
links in the very bottom of the topology

346
00:13:18,880 --> 00:13:21,760
file that will glue these nodes together

347
00:13:21,760 --> 00:13:23,920
you say which node and which interface

348
00:13:23,920 --> 00:13:26,320
you want to connect as point a and on

349
00:13:26,320 --> 00:13:29,040
point b there will be a remote

350
00:13:29,040 --> 00:13:30,639
far end of the

351
00:13:30,639 --> 00:13:33,279
virtual ethernet pair

352
00:13:33,279 --> 00:13:35,519
i think it's rather straightforward but

353
00:13:35,519 --> 00:13:37,600
yeah don't hesitate to ask me on on

354
00:13:37,600 --> 00:13:39,519
slack i'm happily

355
00:13:39,519 --> 00:13:41,680
yeah i'm available so you can happily

356
00:13:41,680 --> 00:13:43,360
chat with me and we'll sort all the

357
00:13:43,360 --> 00:13:45,440
issues that you might have

358
00:13:45,440 --> 00:13:47,440
now when the topology is ready you just

359
00:13:47,440 --> 00:13:49,680
deploy it with a simple command

360
00:13:49,680 --> 00:13:51,519
container lab deploy

361
00:13:51,519 --> 00:13:53,920
t for topology and your topology file

362
00:13:53,920 --> 00:13:55,199
that you created

363
00:13:55,199 --> 00:13:57,839
a few seconds later you will be agreed

364
00:13:57,839 --> 00:13:58,720
with the

365
00:13:58,720 --> 00:14:00,800
summary table which will show you which

366
00:14:00,800 --> 00:14:02,399
nodes were deployed

367
00:14:02,399 --> 00:14:04,560
and how to access them

368
00:14:04,560 --> 00:14:07,360
you see ipv4 and ipvc addresses have

369
00:14:07,360 --> 00:14:09,839
been allocated

370
00:14:09,839 --> 00:14:10,720
and

371
00:14:10,720 --> 00:14:12,639
for the sake of the argument we do

372
00:14:12,639 --> 00:14:15,600
support many operating systems both

373
00:14:15,600 --> 00:14:18,639
containerized and vm based ones so it

374
00:14:18,639 --> 00:14:21,680
depends on what kind of flags you you

375
00:14:21,680 --> 00:14:24,959
wear and which vendors play uh

376
00:14:24,959 --> 00:14:26,880
which renders you like most you can

377
00:14:26,880 --> 00:14:28,880
select from this section from this

378
00:14:28,880 --> 00:14:30,480
selection of vendors that we currently

379
00:14:30,480 --> 00:14:33,600
support or maybe you will add one as we

380
00:14:33,600 --> 00:14:35,360
as we go through the hackathon it's also

381
00:14:35,360 --> 00:14:36,720
possible

382
00:14:36,720 --> 00:14:38,079
speaking of which

383
00:14:38,079 --> 00:14:38,959
as

384
00:14:38,959 --> 00:14:41,360
kareem just explained we we decided to

385
00:14:41,360 --> 00:14:43,600
use a hackathon label in the project of

386
00:14:43,600 --> 00:14:45,600
container lab to basically select a few

387
00:14:45,600 --> 00:14:46,720
issues

388
00:14:46,720 --> 00:14:49,040
that you can work on and of course you

389
00:14:49,040 --> 00:14:52,079
are free to create your own issue if you

390
00:14:52,079 --> 00:14:55,120
have a sound idea what can be improved

391
00:14:55,120 --> 00:14:55,839
but

392
00:14:55,839 --> 00:14:56,800
as

393
00:14:56,800 --> 00:14:58,560
just for the starters if you think that

394
00:14:58,560 --> 00:15:00,720
there are something that you can take

395
00:15:00,720 --> 00:15:02,959
from this extensive list i think it's

396
00:15:02,959 --> 00:15:03,760
now

397
00:15:03,760 --> 00:15:06,399
12 items that that we selected for the

398
00:15:06,399 --> 00:15:08,880
hackathon please feel free to

399
00:15:08,880 --> 00:15:10,839
assign your team to an issue and work on

400
00:15:10,839 --> 00:15:13,760
it and yeah with that

401
00:15:13,760 --> 00:15:16,399
i give the floor to whoever is next

402
00:15:16,399 --> 00:15:20,720
next we have uh gnmi gateway um colin do

403
00:15:20,720 --> 00:15:24,480
you want to talk a little bit about uh

404
00:15:24,480 --> 00:15:28,000
about gina my gateway hi everyone uh i'm

405
00:15:28,000 --> 00:15:29,519
colin uh

406
00:15:29,519 --> 00:15:31,839
i'm the maintainer or by primary

407
00:15:31,839 --> 00:15:35,199
maintainer of gmy gateway gmy gateway is

408
00:15:35,199 --> 00:15:37,439
a

409
00:15:38,800 --> 00:15:41,680
basically a service that's uh modular

410
00:15:41,680 --> 00:15:42,880
distributed

411
00:15:42,880 --> 00:15:45,360
uh and provides highly available uh

412
00:15:45,360 --> 00:15:48,000
streams of gmi data

413
00:15:48,000 --> 00:15:51,279
to interested consumers from uh multiple

414
00:15:51,279 --> 00:15:52,800
targets

415
00:15:52,800 --> 00:15:56,719
it allows um

416
00:15:56,800 --> 00:15:57,680
uh

417
00:15:57,680 --> 00:15:58,959
the

418
00:15:58,959 --> 00:16:02,160
uh gmi server or uh gmi gateway to

419
00:16:02,160 --> 00:16:04,160
basically dynamically load targets from

420
00:16:04,160 --> 00:16:06,639
various sources using uh components

421
00:16:06,639 --> 00:16:09,279
called target loaders um

422
00:16:09,279 --> 00:16:10,160
to

423
00:16:10,160 --> 00:16:12,720
basically load in uh

424
00:16:12,720 --> 00:16:15,680
network devices and uh their ip address

425
00:16:15,680 --> 00:16:18,000
and other important metadata from

426
00:16:18,000 --> 00:16:20,160
your nms or

427
00:16:20,160 --> 00:16:22,800
from a static file things like that uh

428
00:16:22,800 --> 00:16:25,120
and also provides the ability to uh

429
00:16:25,120 --> 00:16:26,480
forward data

430
00:16:26,480 --> 00:16:28,320
either via gmi

431
00:16:28,320 --> 00:16:31,199
uh through an exposed server or via

432
00:16:31,199 --> 00:16:32,639
exporters to

433
00:16:32,639 --> 00:16:34,880
downstream interested

434
00:16:34,880 --> 00:16:37,199
consumers so some examples of exporters

435
00:16:37,199 --> 00:16:39,199
that we have today are uh we have a

436
00:16:39,199 --> 00:16:41,440
prometheus exporter

437
00:16:41,440 --> 00:16:43,680
that

438
00:16:44,560 --> 00:16:47,120
basically exports stats or metrics to

439
00:16:47,120 --> 00:16:49,759
prometheus that are uh numerical from

440
00:16:49,759 --> 00:16:52,399
the uh gmi subscribe stream we have a

441
00:16:52,399 --> 00:16:54,320
kafka

442
00:16:54,320 --> 00:16:57,279
exporter that forwards gmi data to kafka

443
00:16:57,279 --> 00:16:58,800
for things that want to listen on kafka

444
00:16:58,800 --> 00:17:01,519
we have an influx db one

445
00:17:01,519 --> 00:17:04,959
and a couple others

446
00:17:04,959 --> 00:17:05,839
so

447
00:17:05,839 --> 00:17:07,919
um

448
00:17:07,919 --> 00:17:09,760
for uh

449
00:17:09,760 --> 00:17:11,439
basically things that you can work on

450
00:17:11,439 --> 00:17:12,880
for uh

451
00:17:12,880 --> 00:17:14,799
gmi gateway

452
00:17:14,799 --> 00:17:15,520
i

453
00:17:15,520 --> 00:17:17,280
went through and pulled out a couple

454
00:17:17,280 --> 00:17:18,799
issues that people had either raised on

455
00:17:18,799 --> 00:17:20,799
github or have spoken to me about either

456
00:17:20,799 --> 00:17:22,240
via email or

457
00:17:22,240 --> 00:17:23,839
in person

458
00:17:23,839 --> 00:17:26,480
and i also ranked them by like easy

459
00:17:26,480 --> 00:17:29,520
intermediate and difficult um just to

460
00:17:29,520 --> 00:17:31,280
give people an idea of like where i

461
00:17:31,280 --> 00:17:35,360
think the effort level lies for these um

462
00:17:35,360 --> 00:17:36,880
but you know depending on your

463
00:17:36,880 --> 00:17:39,039
experience some might be easier or more

464
00:17:39,039 --> 00:17:41,360
difficult for you so you might need to

465
00:17:41,360 --> 00:17:44,160
just kind of gauge uh

466
00:17:44,160 --> 00:17:46,080
where it is and you know adjust if you

467
00:17:46,080 --> 00:17:47,039
need to

468
00:17:47,039 --> 00:17:48,960
um but basically a couple things that

469
00:17:48,960 --> 00:17:51,280
have come up uh for g and my gateway

470
00:17:51,280 --> 00:17:53,919
that uh would be very practical and

471
00:17:53,919 --> 00:17:56,240
people have expressed interest in

472
00:17:56,240 --> 00:17:59,440
one is basically adding a prefix for

473
00:17:59,440 --> 00:18:01,919
metrics that we export to

474
00:18:01,919 --> 00:18:03,440
prometheus

475
00:18:03,440 --> 00:18:05,280
this is basically just adding a static

476
00:18:05,280 --> 00:18:07,039
prefix for

477
00:18:07,039 --> 00:18:08,559
metric names

478
00:18:08,559 --> 00:18:10,080
this would be useful in cases like where

479
00:18:10,080 --> 00:18:11,919
you have a multi-tenant

480
00:18:11,919 --> 00:18:12,640
or

481
00:18:12,640 --> 00:18:15,280
multi-user prometheus deployment and you

482
00:18:15,280 --> 00:18:16,720
want to

483
00:18:16,720 --> 00:18:18,480
kind of segregate

484
00:18:18,480 --> 00:18:20,720
metrics under a specific prefix so the

485
00:18:20,720 --> 00:18:22,880
example here i have is there's a path

486
00:18:22,880 --> 00:18:24,799
that we would export from ethious

487
00:18:24,799 --> 00:18:26,960
interfaces interface state counters out

488
00:18:26,960 --> 00:18:29,520
octets and basically just prefix it with

489
00:18:29,520 --> 00:18:32,080
a static prefix my prefix so

490
00:18:32,080 --> 00:18:33,200
uh basically just adding that

491
00:18:33,200 --> 00:18:35,760
configuration option into gmi gateway uh

492
00:18:35,760 --> 00:18:38,320
another thing that would be uh

493
00:18:38,320 --> 00:18:39,600
useful and people have expressed

494
00:18:39,600 --> 00:18:41,120
interest in are

495
00:18:41,120 --> 00:18:43,360
improvements to the mutual tls

496
00:18:43,360 --> 00:18:45,600
uh authentication that

497
00:18:45,600 --> 00:18:47,760
gmy gateway performs so

498
00:18:47,760 --> 00:18:48,960
right now

499
00:18:48,960 --> 00:18:52,400
we provide the ability to

500
00:18:52,799 --> 00:18:56,520
pass in a

501
00:18:56,960 --> 00:18:58,400
server uh

502
00:18:58,400 --> 00:19:00,320
server tls certificates by the command

503
00:19:00,320 --> 00:19:02,640
line to basically uh

504
00:19:02,640 --> 00:19:05,039
set the uh

505
00:19:05,039 --> 00:19:08,160
tls public and private keys and ca that

506
00:19:08,160 --> 00:19:10,320
the server side uses but we don't have

507
00:19:10,320 --> 00:19:13,679
that for the client side uh which is gmy

508
00:19:13,679 --> 00:19:16,080
gateway reaching out to targets

509
00:19:16,080 --> 00:19:16,799
so

510
00:19:16,799 --> 00:19:18,799
it would be useful to

511
00:19:18,799 --> 00:19:20,720
basically add configuration parameters

512
00:19:20,720 --> 00:19:23,600
to set the client tls config

513
00:19:23,600 --> 00:19:25,679
from the command line or from the

514
00:19:25,679 --> 00:19:27,600
configuration file

515
00:19:27,600 --> 00:19:29,039
and then as a bonus for that if somebody

516
00:19:29,039 --> 00:19:30,799
were interested in doing this we've

517
00:19:30,799 --> 00:19:32,400
talked about in the open config working

518
00:19:32,400 --> 00:19:33,360
group

519
00:19:33,360 --> 00:19:36,840
adding these tls configurations to the

520
00:19:36,840 --> 00:19:40,240
target.proto which is available in the

521
00:19:40,240 --> 00:19:41,919
gnmi repo

522
00:19:41,919 --> 00:19:43,600
so if you are interested in modifying

523
00:19:43,600 --> 00:19:45,679
this proto file to include tls

524
00:19:45,679 --> 00:19:47,440
configurations as well that would be

525
00:19:47,440 --> 00:19:48,799
incredibly useful and something that

526
00:19:48,799 --> 00:19:50,799
would not only benefit you my gateway

527
00:19:50,799 --> 00:19:52,480
but other

528
00:19:52,480 --> 00:19:55,200
users of gnmi and this target proto as

529
00:19:55,200 --> 00:19:57,440
well so uh this is something you could

530
00:19:57,440 --> 00:19:58,480
work on

531
00:19:58,480 --> 00:20:00,559
i would recommend doing this testing it

532
00:20:00,559 --> 00:20:02,000
out with gmi gateway and then you can

533
00:20:02,000 --> 00:20:05,520
submit a pr to

534
00:20:05,679 --> 00:20:07,679
um and then it'll get reviewed in our

535
00:20:07,679 --> 00:20:09,440
next open config work and group meeting

536
00:20:09,440 --> 00:20:12,240
and hopefully get accepted um

537
00:20:12,240 --> 00:20:14,799
so that's another option uh and then uh

538
00:20:14,799 --> 00:20:16,799
a more difficult option uh something

539
00:20:16,799 --> 00:20:18,640
that people have expressed interest in

540
00:20:18,640 --> 00:20:21,280
is being able to have uh basically more

541
00:20:21,280 --> 00:20:24,559
dynamic tags for the prometheus exporter

542
00:20:24,559 --> 00:20:27,039
right now you can set static tags on

543
00:20:27,039 --> 00:20:29,520
metrics that get sent to prometheus

544
00:20:29,520 --> 00:20:31,520
basically you know additional metadata

545
00:20:31,520 --> 00:20:32,799
that you can

546
00:20:32,799 --> 00:20:36,240
group by or filter by in prometheus

547
00:20:36,240 --> 00:20:37,679
something that would be really useful is

548
00:20:37,679 --> 00:20:39,200
being able to tag

549
00:20:39,200 --> 00:20:41,280
metrics that get sent to prometheus with

550
00:20:41,280 --> 00:20:43,200
data from other parts of the open config

551
00:20:43,200 --> 00:20:46,480
tree so an example that i have here is

552
00:20:46,480 --> 00:20:48,400
if you look at a path for like state

553
00:20:48,400 --> 00:20:50,880
counter out octets for an interface

554
00:20:50,880 --> 00:20:53,120
you'd want to specify a list of other

555
00:20:53,120 --> 00:20:55,360
paths in the open config tree that would

556
00:20:55,360 --> 00:20:57,760
be useful so here we're saying we want

557
00:20:57,760 --> 00:21:00,159
to tag it with the state description and

558
00:21:00,159 --> 00:21:03,039
state if index and things like that so

559
00:21:03,039 --> 00:21:04,400
that would require

560
00:21:04,400 --> 00:21:07,120
searching through the open config

561
00:21:07,120 --> 00:21:08,480
tree

562
00:21:08,480 --> 00:21:10,400
and the cache to basically extract that

563
00:21:10,400 --> 00:21:12,400
data and build a

564
00:21:12,400 --> 00:21:14,000
map of tags that then get sent to

565
00:21:14,000 --> 00:21:15,600
prometheus

566
00:21:15,600 --> 00:21:17,039
so those are kind of like the three like

567
00:21:17,039 --> 00:21:19,200
top items that uh i think would be

568
00:21:19,200 --> 00:21:21,840
really useful to gmi gateway that said

569
00:21:21,840 --> 00:21:23,760
it is the hackathon so you're welcome to

570
00:21:23,760 --> 00:21:26,159
kind of work on whatever you want

571
00:21:26,159 --> 00:21:28,000
i did include a couple of other options

572
00:21:28,000 --> 00:21:30,320
down here and i can also share this

573
00:21:30,320 --> 00:21:32,159
document if people are interested but

574
00:21:32,159 --> 00:21:33,440
basically a couple other things that

575
00:21:33,440 --> 00:21:34,559
have come up that i think would be

576
00:21:34,559 --> 00:21:37,039
useful or uh just generally like fun for

577
00:21:37,039 --> 00:21:39,120
people to work on uh if somebody's

578
00:21:39,120 --> 00:21:41,120
interested in doing like less golang

579
00:21:41,120 --> 00:21:42,640
code things and still interested working

580
00:21:42,640 --> 00:21:44,880
on gmail gateway you could create a

581
00:21:44,880 --> 00:21:47,039
docker file that automatically starts

582
00:21:47,039 --> 00:21:49,280
gmi gateway using a given configuration

583
00:21:49,280 --> 00:21:50,880
file that could either get passed into

584
00:21:50,880 --> 00:21:52,799
the docker file or set with like a

585
00:21:52,799 --> 00:21:54,080
configuration parameter or something

586
00:21:54,080 --> 00:21:55,440
like that

587
00:21:55,440 --> 00:21:57,039
and if that goes well we could also

588
00:21:57,039 --> 00:21:59,120
publish that to the docker hub under the

589
00:21:59,120 --> 00:22:01,200
open config organization uh so that

590
00:22:01,200 --> 00:22:03,280
could be used by other people uh if

591
00:22:03,280 --> 00:22:04,880
you'd like to you can add a new exporter

592
00:22:04,880 --> 00:22:06,240
component you can pick anything that

593
00:22:06,240 --> 00:22:08,080
you're familiar with or

594
00:22:08,080 --> 00:22:09,360
that you think fits well with open

595
00:22:09,360 --> 00:22:11,120
config model data that's kind of very

596
00:22:11,120 --> 00:22:13,600
open-ended same for target loaders if

597
00:22:13,600 --> 00:22:17,919
you have like some nms or

598
00:22:17,919 --> 00:22:20,159
system that you use to store your

599
00:22:20,159 --> 00:22:23,280
network device metadata you could write

600
00:22:23,280 --> 00:22:25,440
a new target loader to dynamically load

601
00:22:25,440 --> 00:22:27,919
gmi targets from that database uh

602
00:22:27,919 --> 00:22:30,400
currently the only like real nms that we

603
00:22:30,400 --> 00:22:32,799
integrate with is netbox uh

604
00:22:32,799 --> 00:22:33,840
um

605
00:22:33,840 --> 00:22:36,159
as far as the open source repo goes but

606
00:22:36,159 --> 00:22:38,640
uh there's some other options out there

607
00:22:38,640 --> 00:22:39,760
and then something else that's maybe a

608
00:22:39,760 --> 00:22:41,360
little more difficult but if someone is

609
00:22:41,360 --> 00:22:43,600
like really looking for a challenge uh

610
00:22:43,600 --> 00:22:45,520
we do support the ability to have

611
00:22:45,520 --> 00:22:47,600
additional clustering back ends uh

612
00:22:47,600 --> 00:22:49,120
currently we use zookeeper but if

613
00:22:49,120 --> 00:22:51,840
someone was interested in trying to make

614
00:22:51,840 --> 00:22:53,120
this support something other than

615
00:22:53,120 --> 00:22:55,039
zookeeper like fcd

616
00:22:55,039 --> 00:22:58,480
or um some other database uh that would

617
00:22:58,480 --> 00:23:00,080
be something that would be slightly more

618
00:23:00,080 --> 00:23:02,640
difficult and challenging uh but uh

619
00:23:02,640 --> 00:23:04,400
would be really cool to see and then

620
00:23:04,400 --> 00:23:05,760
anything else you'd like to work on

621
00:23:05,760 --> 00:23:07,760
would be you know cool no

622
00:23:07,760 --> 00:23:09,760
uh that's kind of like

623
00:23:09,760 --> 00:23:12,559
high level what things are so uh i'm in

624
00:23:12,559 --> 00:23:16,320
the uh nanog hackathon slack uh if

625
00:23:16,320 --> 00:23:18,080
people like want to ping me there on the

626
00:23:18,080 --> 00:23:20,400
side um in addition to you know the

627
00:23:20,400 --> 00:23:22,159
conversations that'll happen here i'm

628
00:23:22,159 --> 00:23:23,679
happy to answer any questions about gmy

629
00:23:23,679 --> 00:23:26,400
gateway or offer up other ideas or you

630
00:23:26,400 --> 00:23:27,679
know if you want to bounce your ideas

631
00:23:27,679 --> 00:23:29,280
off me i'm happy to give feedback on

632
00:23:29,280 --> 00:23:30,559
those so

633
00:23:30,559 --> 00:23:31,760
yeah i think that's all i have to talk

634
00:23:31,760 --> 00:23:34,799
about thanks colin um

635
00:23:34,799 --> 00:23:38,720
the uh the next project we have is uh

636
00:23:38,720 --> 00:23:41,039
nate palm um

637
00:23:41,039 --> 00:23:43,600
mircha are you you on the call

638
00:23:43,600 --> 00:23:45,760
uh yes i am hi

639
00:23:45,760 --> 00:23:46,880
hello

640
00:23:46,880 --> 00:23:48,840
hey thanks for inviting

641
00:23:48,840 --> 00:23:52,080
me it's a real pleasure to be here

642
00:23:52,080 --> 00:23:53,279
and

643
00:23:53,279 --> 00:23:54,000
yeah

644
00:23:54,000 --> 00:23:55,039
like

645
00:23:55,039 --> 00:23:57,520
jeff mentioned i'm uh

646
00:23:57,520 --> 00:24:00,240
we'll be helping out with napalm

647
00:24:00,240 --> 00:24:02,559
uh if you're not familiar with napalm is

648
00:24:02,559 --> 00:24:06,159
a library that provides an abstracted

649
00:24:06,159 --> 00:24:07,679
api to be

650
00:24:07,679 --> 00:24:09,039
able to interact with

651
00:24:09,039 --> 00:24:13,520
various devices and platforms

652
00:24:13,840 --> 00:24:16,559
some of the most common are of course

653
00:24:16,559 --> 00:24:20,240
juniper barista cisco sxr and

654
00:24:20,240 --> 00:24:23,600
classic ios plus nxs

655
00:24:23,600 --> 00:24:25,760
but there are many others uh many other

656
00:24:25,760 --> 00:24:28,159
community drivers

657
00:24:28,159 --> 00:24:29,200
which are

658
00:24:29,200 --> 00:24:31,600
entirely led by people from the

659
00:24:31,600 --> 00:24:32,400
community

660
00:24:32,400 --> 00:24:34,240
not nothing

661
00:24:34,240 --> 00:24:36,880
let's say official

662
00:24:36,880 --> 00:24:39,120
uh and uh in this hackathon i was

663
00:24:39,120 --> 00:24:42,320
thinking uh to tackle two

664
00:24:42,320 --> 00:24:45,120
big areas of interest one of those

665
00:24:45,120 --> 00:24:47,600
a type hinting

666
00:24:47,600 --> 00:24:49,850
we are long overdue doing that in

667
00:24:49,850 --> 00:24:51,440
[Music]

668
00:24:51,440 --> 00:24:52,240
like

669
00:24:52,240 --> 00:24:54,240
all the major uh fighting projects have

670
00:24:54,240 --> 00:24:55,600
that now

671
00:24:55,600 --> 00:24:58,000
and also we have a

672
00:24:58,000 --> 00:25:01,600
pretty huge backlog of issues

673
00:25:01,600 --> 00:25:04,640
and uh if anyone wants to give a hand

674
00:25:04,640 --> 00:25:07,679
with that just feel free to pick any of

675
00:25:07,679 --> 00:25:09,520
the issues just let me know to

676
00:25:09,520 --> 00:25:11,600
coordinate and uh

677
00:25:11,600 --> 00:25:14,400
so you know we don't have uh multiple

678
00:25:14,400 --> 00:25:16,720
people working on the same issue

679
00:25:16,720 --> 00:25:18,799
and i will make sure that we tag it

680
00:25:18,799 --> 00:25:20,240
accordingly and

681
00:25:20,240 --> 00:25:22,640
eventually assigned to your

682
00:25:22,640 --> 00:25:25,760
your username and on github and so on

683
00:25:25,760 --> 00:25:27,520
i will be around in the slack channel

684
00:25:27,520 --> 00:25:30,960
actually i have created uh another

685
00:25:30,960 --> 00:25:35,440
channel named napalm 84 name oh sorry

686
00:25:35,440 --> 00:25:37,039
the other way around

687
00:25:37,039 --> 00:25:39,200
nano 84 napalm

688
00:25:39,200 --> 00:25:42,480
i will mention it in the main method i

689
00:25:42,480 --> 00:25:43,919
don't know if it's necessarily required

690
00:25:43,919 --> 00:25:46,480
but i said

691
00:25:46,480 --> 00:25:49,360
let's say we don't uh overlap with other

692
00:25:49,360 --> 00:25:50,960
projects okay so there are multiple

693
00:25:50,960 --> 00:25:54,240
questions and to focus on maybe that one

694
00:25:54,240 --> 00:25:55,440
i don't know that

695
00:25:55,440 --> 00:25:56,720
um

696
00:25:56,720 --> 00:25:58,320
just let me know

697
00:25:58,320 --> 00:26:00,080
what you want to do

698
00:26:00,080 --> 00:26:03,440
and i'll be happy and i'll try to guide

699
00:26:03,440 --> 00:26:06,400
as much as i'm able to

700
00:26:06,400 --> 00:26:09,400
thanks

701
00:26:11,279 --> 00:26:14,320
thank you um the the next project we

702
00:26:14,320 --> 00:26:17,919
have is uh scrapply uh carl do you want

703
00:26:17,919 --> 00:26:19,200
to

704
00:26:19,200 --> 00:26:21,520
talk about your project yeah sure

705
00:26:21,520 --> 00:26:23,919
uh so scrapply and or boxing depending

706
00:26:23,919 --> 00:26:25,279
on what people want to

707
00:26:25,279 --> 00:26:27,200
work on i'll talk about both uh try to

708
00:26:27,200 --> 00:26:32,080
be brief here um scraply is a

709
00:26:32,159 --> 00:26:34,480
library intended to help folks interact

710
00:26:34,480 --> 00:26:37,039
with network devices uh overtelmed or

711
00:26:37,039 --> 00:26:39,760
ssh and there's also a net conf

712
00:26:39,760 --> 00:26:41,200
additional net conf library that kind of

713
00:26:41,200 --> 00:26:43,039
sits on top of that so if you're into

714
00:26:43,039 --> 00:26:45,039
netcomp you can also do that

715
00:26:45,039 --> 00:26:45,919
um

716
00:26:45,919 --> 00:26:47,279
it supports a couple different

717
00:26:47,279 --> 00:26:49,520
transports for the actual ssh connection

718
00:26:49,520 --> 00:26:51,679
itself parameco of course ssh2 and then

719
00:26:51,679 --> 00:26:53,200
there's like kind of a fancy wrapper

720
00:26:53,200 --> 00:26:55,120
it's not even that fancy around bin ssh

721
00:26:55,120 --> 00:26:57,440
so you get full open ssh support

722
00:26:57,440 --> 00:26:59,600
um so there's scrapply and python and

723
00:26:59,600 --> 00:27:02,000
scrapply and go so if you feel like

724
00:27:02,000 --> 00:27:03,679
using python you could do that or if you

725
00:27:03,679 --> 00:27:05,679
feel like there we go you could do that

726
00:27:05,679 --> 00:27:07,440
uh and then the the other project would

727
00:27:07,440 --> 00:27:11,440
be boxing um and boxing is sort of like

728
00:27:11,440 --> 00:27:13,520
similar to vrnet lab uh for anybody

729
00:27:13,520 --> 00:27:16,559
familiar with that but in go um with the

730
00:27:16,559 --> 00:27:20,000
kind of the intention to help package up

731
00:27:20,000 --> 00:27:21,200
network operating systems into

732
00:27:21,200 --> 00:27:23,279
containers for use with container lab

733
00:27:23,279 --> 00:27:26,159
but also boxing lets you run just native

734
00:27:26,159 --> 00:27:28,799
chem uvms on your machine that's like

735
00:27:28,799 --> 00:27:31,679
i've built a big hackintosh so so i like

736
00:27:31,679 --> 00:27:32,960
to just run stuff on that and i don't

737
00:27:32,960 --> 00:27:35,039
have kvm so it's useful for me

738
00:27:35,039 --> 00:27:37,039
um so i wrote down a couple things

739
00:27:37,039 --> 00:27:39,520
nothing uh formal everything always docs

740
00:27:39,520 --> 00:27:42,000
could always use uh some some tender

741
00:27:42,000 --> 00:27:43,120
loving care

742
00:27:43,120 --> 00:27:45,039
so if anybody feels like contributing to

743
00:27:45,039 --> 00:27:47,679
docs that would be super helpful uh to

744
00:27:47,679 --> 00:27:50,960
go projects uh scraply go is my first go

745
00:27:50,960 --> 00:27:52,640
project so there's probably a lot of

746
00:27:52,640 --> 00:27:53,919
room for improvement there for if

747
00:27:53,919 --> 00:27:55,360
anybody wants to kind of hack on some

748
00:27:55,360 --> 00:27:56,480
ghost stuff

749
00:27:56,480 --> 00:27:59,120
um and and tests uh in the ghost stuff

750
00:27:59,120 --> 00:28:01,279
as well the scrappy python is pretty

751
00:28:01,279 --> 00:28:02,399
good coverage

752
00:28:02,399 --> 00:28:04,159
um

753
00:28:04,159 --> 00:28:06,480
a couple other little things um scraply

754
00:28:06,480 --> 00:28:08,559
has a community library as well so

755
00:28:08,559 --> 00:28:09,520
there's

756
00:28:09,520 --> 00:28:12,000
uh core platforms for ios xc basically

757
00:28:12,000 --> 00:28:13,919
all the napon platforms i just say that

758
00:28:13,919 --> 00:28:17,679
to make it easy so sxe xr nx os arista

759
00:28:17,679 --> 00:28:19,760
uh and junos that's kind of baked into

760
00:28:19,760 --> 00:28:22,399
the the main scrapply library

761
00:28:22,399 --> 00:28:24,000
um but there's a scrapbook community

762
00:28:24,000 --> 00:28:25,600
where you can relatively easily add

763
00:28:25,600 --> 00:28:27,679
other platforms if you're into that sort

764
00:28:27,679 --> 00:28:28,720
of thing or if there's something that's

765
00:28:28,720 --> 00:28:30,399
not represented that's in your

766
00:28:30,399 --> 00:28:32,080
environment that would be a relatively

767
00:28:32,080 --> 00:28:34,080
easy thing to hack on

768
00:28:34,080 --> 00:28:36,399
um

769
00:28:36,559 --> 00:28:38,320
what something i'd really love to do is

770
00:28:38,320 --> 00:28:39,919
probably a bigger project than anything

771
00:28:39,919 --> 00:28:42,320
we could get done on the over a weekend

772
00:28:42,320 --> 00:28:44,399
but i'd really love to build a unified

773
00:28:44,399 --> 00:28:46,240
uh kind of community platform setup

774
00:28:46,240 --> 00:28:49,039
where their platforms are

775
00:28:49,039 --> 00:28:50,880
universal between scrappy python and

776
00:28:50,880 --> 00:28:52,640
scrapply go i think that would be pretty

777
00:28:52,640 --> 00:28:55,200
cool um so definitely be interested in

778
00:28:55,200 --> 00:28:56,799
working on that with anybody that was

779
00:28:56,799 --> 00:28:57,840
keen

780
00:28:57,840 --> 00:29:00,240
and then boxing uh there's

781
00:29:00,240 --> 00:29:01,840
again just the napalm platforms because

782
00:29:01,840 --> 00:29:03,200
those are the platforms i'm familiar

783
00:29:03,200 --> 00:29:05,360
with that are represented there

784
00:29:05,360 --> 00:29:07,919
so adding sros or

785
00:29:07,919 --> 00:29:11,440
other platforms would be a useful thing

786
00:29:11,440 --> 00:29:12,880
for there i think

787
00:29:12,880 --> 00:29:14,080
um

788
00:29:14,080 --> 00:29:15,440
yeah i think that's that's kind of the

789
00:29:15,440 --> 00:29:18,159
gist um so python or go pick your poison

790
00:29:18,159 --> 00:29:20,159
and i'm not in the slack room yet but i

791
00:29:20,159 --> 00:29:22,240
will get there and then anybody can hit

792
00:29:22,240 --> 00:29:24,640
me up and uh happy to kind of just chat

793
00:29:24,640 --> 00:29:27,840
about whatever

794
00:29:29,039 --> 00:29:30,399
thanks carl

795
00:29:30,399 --> 00:29:34,960
the next project we have on the list is

796
00:29:34,960 --> 00:29:36,559
vaping

797
00:29:36,559 --> 00:29:37,600
matt

798
00:29:37,600 --> 00:29:39,440
trying to give an update

799
00:29:39,440 --> 00:29:41,520
vaping is a python based latency

800
00:29:41,520 --> 00:29:43,440
monitoring tool and it can pretty much

801
00:29:43,440 --> 00:29:45,520
run any command

802
00:29:45,520 --> 00:29:47,070
that you want um

803
00:29:47,070 --> 00:29:49,919
[Music]

804
00:29:49,919 --> 00:29:52,960
i think there's a handful of issues

805
00:29:52,960 --> 00:29:55,120
in the the github repo for i know there

806
00:29:55,120 --> 00:29:56,640
is a handful of issues that would be

807
00:29:56,640 --> 00:29:58,480
quick and easy to work on if anybody is

808
00:29:58,480 --> 00:30:00,880
interested

809
00:30:00,880 --> 00:30:02,640
um you can just let me know i am in

810
00:30:02,640 --> 00:30:05,039
slack

811
00:30:05,200 --> 00:30:06,799
and i

812
00:30:06,799 --> 00:30:08,720
think that should about cover it

813
00:30:08,720 --> 00:30:11,360
and uh finally peering db

814
00:30:11,360 --> 00:30:12,559
uh leo

815
00:30:12,559 --> 00:30:14,880
i've got a couple of project proposals

816
00:30:14,880 --> 00:30:18,159
for people to think about and there is

817
00:30:18,159 --> 00:30:22,559
more so appearing db is a

818
00:30:22,559 --> 00:30:23,760
database

819
00:30:23,760 --> 00:30:26,240
for the interconnection community and it

820
00:30:26,240 --> 00:30:28,000
helps people in the internet

821
00:30:28,000 --> 00:30:30,240
interconnection community connect with

822
00:30:30,240 --> 00:30:32,480
each other um we

823
00:30:32,480 --> 00:30:33,440
um

824
00:30:33,440 --> 00:30:34,720
we're in the

825
00:30:34,720 --> 00:30:37,440
nano 83 hackathon and

826
00:30:37,440 --> 00:30:38,399
there was

827
00:30:38,399 --> 00:30:41,039
an improvement there to the simple

828
00:30:41,039 --> 00:30:43,679
search on peeringdb which has been

829
00:30:43,679 --> 00:30:45,200
deployed and

830
00:30:45,200 --> 00:30:46,880
is really great

831
00:30:46,880 --> 00:30:48,240
so

832
00:30:48,240 --> 00:30:52,320
we'd like to select something uh that

833
00:30:52,320 --> 00:30:55,120
can be worked on this hackathon and

834
00:30:55,120 --> 00:30:58,640
hopefully released in march um and then

835
00:30:58,640 --> 00:31:00,640
you know obviously celebrate

836
00:31:00,640 --> 00:31:01,440
uh

837
00:31:01,440 --> 00:31:03,679
the deployment of something useful one

838
00:31:03,679 --> 00:31:07,440
option would be to improve the api so

839
00:31:07,440 --> 00:31:08,720
that

840
00:31:08,720 --> 00:31:10,480
you can

841
00:31:10,480 --> 00:31:12,559
do a single api query and you can get

842
00:31:12,559 --> 00:31:16,480
the intersection of multiple elements in

843
00:31:16,480 --> 00:31:18,880
the database so for instance

844
00:31:18,880 --> 00:31:22,240
um every ixp where two different as

845
00:31:22,240 --> 00:31:26,000
numbers are present and so forth um

846
00:31:26,000 --> 00:31:28,640
if we did this on the api we would also

847
00:31:28,640 --> 00:31:32,480
replicate uh the feature on the website

848
00:31:32,480 --> 00:31:33,519
and

849
00:31:33,519 --> 00:31:34,480
make

850
00:31:34,480 --> 00:31:37,840
this available in both

851
00:31:38,000 --> 00:31:40,640
both interfaces because we try to keep

852
00:31:40,640 --> 00:31:43,279
them feature equivalent

853
00:31:43,279 --> 00:31:46,880
the other option that we picked out is

854
00:31:46,880 --> 00:31:49,039
notifications we asked about

855
00:31:49,039 --> 00:31:51,360
notifications in our most recent user

856
00:31:51,360 --> 00:31:54,399
survey and people would like them this

857
00:31:54,399 --> 00:31:56,960
would be the first step on the path

858
00:31:56,960 --> 00:31:59,120
towards notifications

859
00:31:59,120 --> 00:32:00,559
um

860
00:32:00,559 --> 00:32:02,640
the idea is that it would initially be

861
00:32:02,640 --> 00:32:05,440
for logged in users and

862
00:32:05,440 --> 00:32:07,440
it would essentially

863
00:32:07,440 --> 00:32:09,200
show them a notification give them a way

864
00:32:09,200 --> 00:32:11,760
to dismiss it show them a translation if

865
00:32:11,760 --> 00:32:14,559
there's a translation available and they

866
00:32:14,559 --> 00:32:15,440
have

867
00:32:15,440 --> 00:32:17,600
selected that language as their

868
00:32:17,600 --> 00:32:20,240
preferred language

869
00:32:20,240 --> 00:32:22,080
and then of course in the future we

870
00:32:22,080 --> 00:32:25,039
would be building off of that to improve

871
00:32:25,039 --> 00:32:27,679
the quality of notifications available

872
00:32:27,679 --> 00:32:30,559
so that you could get notifications

873
00:32:30,559 --> 00:32:33,440
specific to you as a user but this would

874
00:32:33,440 --> 00:32:35,679
be a place to start

875
00:32:35,679 --> 00:32:37,120
now

876
00:32:37,120 --> 00:32:37,490
while

877
00:32:37,490 --> 00:32:40,640
[Music]

878
00:32:40,640 --> 00:32:41,440
while

879
00:32:41,440 --> 00:32:43,360
these are two that i've picked out we

880
00:32:43,360 --> 00:32:45,840
have a whole bunch of issues that are

881
00:32:45,840 --> 00:32:48,960
marked as good first issues and anything

882
00:32:48,960 --> 00:32:50,799
here which is

883
00:32:50,799 --> 00:32:51,160
um

884
00:32:51,160 --> 00:32:52,240
[Music]

885
00:32:52,240 --> 00:32:53,279
uh

886
00:32:53,279 --> 00:32:56,960
has the uh milestone of ready for

887
00:32:56,960 --> 00:32:59,919
implementation is a good one to work on

888
00:32:59,919 --> 00:33:02,399
and if you have questions about that

889
00:33:02,399 --> 00:33:03,279
then

890
00:33:03,279 --> 00:33:05,120
uh and you'd like to work on one of

891
00:33:05,120 --> 00:33:07,039
those instead then you know that would

892
00:33:07,039 --> 00:33:09,519
be great and uh

893
00:33:09,519 --> 00:33:11,679
i would be happy to offer whatever

894
00:33:11,679 --> 00:33:14,720
support i can and matt

895
00:33:14,720 --> 00:33:17,519
can also uh offer some support

896
00:33:17,519 --> 00:33:19,360
um

897
00:33:19,360 --> 00:33:20,960
the key things to

898
00:33:20,960 --> 00:33:22,640
know about

899
00:33:22,640 --> 00:33:25,360
peering it's written in python

900
00:33:25,360 --> 00:33:28,159
it uses mysql uh there's a django web

901
00:33:28,159 --> 00:33:31,679
framework if you go for the um

902
00:33:31,679 --> 00:33:33,760
notifications project

903
00:33:33,760 --> 00:33:34,720
um

904
00:33:34,720 --> 00:33:36,080
and

905
00:33:36,080 --> 00:33:39,279
that's really it uh we would love to uh

906
00:33:39,279 --> 00:33:41,120
work with you and

907
00:33:41,120 --> 00:33:42,080
of course

908
00:33:42,080 --> 00:33:43,919
um there's

909
00:33:43,919 --> 00:33:46,399
uh sort of information i will put a link

910
00:33:46,399 --> 00:33:48,640
to these slides if that's okay in the

911
00:33:48,640 --> 00:33:50,480
slack so that

912
00:33:50,480 --> 00:33:52,799
people can go and uh see this and and

913
00:33:52,799 --> 00:33:55,440
take a look through uh at their leisure

914
00:33:55,440 --> 00:33:56,960
um

915
00:33:56,960 --> 00:33:59,200
and you know at the end of this we would

916
00:33:59,200 --> 00:34:01,440
love to go and deploy it and uh thank

917
00:34:01,440 --> 00:34:04,640
you uh with swag and other stuff

918
00:34:04,640 --> 00:34:07,120
thank you very much thanks leo i

919
00:34:07,120 --> 00:34:09,359
mentioned earlier that we have one other

920
00:34:09,359 --> 00:34:12,079
option for uh participants if they're

921
00:34:12,079 --> 00:34:13,760
not interested in

922
00:34:13,760 --> 00:34:15,199
in uh

923
00:34:15,199 --> 00:34:17,599
doing software development uh we do have

924
00:34:17,599 --> 00:34:20,239
a scavenger hunt um aaron are you still

925
00:34:20,239 --> 00:34:21,359
on the call

926
00:34:21,359 --> 00:34:24,480
yep hey guys um so somewhat still in the

927
00:34:24,480 --> 00:34:26,719
theme of open source but more so open

928
00:34:26,719 --> 00:34:28,560
source intelligence if you don't have a

929
00:34:28,560 --> 00:34:30,960
lot or any coding experience and you

930
00:34:30,960 --> 00:34:32,639
prefer a more classic puzzle like

931
00:34:32,639 --> 00:34:34,639
challenge we will be providing a

932
00:34:34,639 --> 00:34:36,000
scavenger hunt

933
00:34:36,000 --> 00:34:38,000
the format will be a list of questions

934
00:34:38,000 --> 00:34:39,679
about 20 or so

935
00:34:39,679 --> 00:34:41,520
related around network engineering some

936
00:34:41,520 --> 00:34:43,679
straightforward and others more brain

937
00:34:43,679 --> 00:34:46,239
teaser trick question like

938
00:34:46,239 --> 00:34:47,119
we'll be

939
00:34:47,119 --> 00:34:49,199
posting that in the slack channel the

940
00:34:49,199 --> 00:34:52,159
starting day of the hackathon um you can

941
00:34:52,159 --> 00:34:54,719
work on it independently or in teams you

942
00:34:54,719 --> 00:34:57,280
have the ultimate choice there and will

943
00:34:57,280 --> 00:35:00,079
be available for support if um

944
00:35:00,079 --> 00:35:02,160
you're kind of stumped or or anything

945
00:35:02,160 --> 00:35:04,240
like that on any of the questions

946
00:35:04,240 --> 00:35:06,000
um it's meant to be an educational

947
00:35:06,000 --> 00:35:08,720
activity up next uh chris is going to

948
00:35:08,720 --> 00:35:11,680
talk a bit about the container lab

949
00:35:11,680 --> 00:35:13,119
infrastructure that we have available

950
00:35:13,119 --> 00:35:16,079
for teams to use if they need it

951
00:35:16,079 --> 00:35:18,560
hey uh before we get into the the

952
00:35:18,560 --> 00:35:21,920
infrastructure um so this is a tutorial

953
00:35:21,920 --> 00:35:24,880
for anybody who who wants to to learn

954
00:35:24,880 --> 00:35:26,800
how to use it i was thinking that uh

955
00:35:26,800 --> 00:35:29,680
perhaps people who are already familiar

956
00:35:29,680 --> 00:35:31,440
with it um

957
00:35:31,440 --> 00:35:35,680
may want to uh start uh like start

958
00:35:35,680 --> 00:35:38,000
chatting with others about project ideas

959
00:35:38,000 --> 00:35:40,240
and maybe we can we can create a couple

960
00:35:40,240 --> 00:35:42,640
breakout rooms if anybody's interested

961
00:35:42,640 --> 00:35:43,599
um

962
00:35:43,599 --> 00:35:45,520
you can speak up now or mention

963
00:35:45,520 --> 00:35:49,119
something in the uh in the chat

964
00:35:50,320 --> 00:35:53,040
that's a good idea um also if anybody on

965
00:35:53,040 --> 00:35:55,119
the call has uh

966
00:35:55,119 --> 00:35:58,560
ideas for projects that uh

967
00:35:58,560 --> 00:36:00,160
uh different from what we just went

968
00:36:00,160 --> 00:36:02,480
through this would be a great time to if

969
00:36:02,480 --> 00:36:05,599
you're interested in speaking up and uh

970
00:36:05,599 --> 00:36:07,839
and introducing your idea i actually

971
00:36:07,839 --> 00:36:10,720
have a question uh this is barry cook

972
00:36:10,720 --> 00:36:13,200
and i had to join late today so i

973
00:36:13,200 --> 00:36:16,560
apologize about that um did

974
00:36:16,560 --> 00:36:18,800
did roman or anyone else talk about

975
00:36:18,800 --> 00:36:20,240
container lab

976
00:36:20,240 --> 00:36:23,359
um as a project

977
00:36:23,359 --> 00:36:25,119
yes

978
00:36:25,119 --> 00:36:27,119
yes that is one of the projects that was

979
00:36:27,119 --> 00:36:28,320
discussed

980
00:36:28,320 --> 00:36:29,920
okay um

981
00:36:29,920 --> 00:36:32,160
so something that came up for me like a

982
00:36:32,160 --> 00:36:34,560
couple months ago was um trying to

983
00:36:34,560 --> 00:36:36,400
install it on my mac

984
00:36:36,400 --> 00:36:38,800
and i have two macs and i could not

985
00:36:38,800 --> 00:36:41,760
install it on my m1 mac um

986
00:36:41,760 --> 00:36:43,440
so i was just wondering if that was

987
00:36:43,440 --> 00:36:45,200
something i don't think i have the

988
00:36:45,200 --> 00:36:47,920
skills to be able to create images for

989
00:36:47,920 --> 00:36:49,200
that but i don't know if that's still an

990
00:36:49,200 --> 00:36:50,480
issue or not

991
00:36:50,480 --> 00:36:53,119
um that the images don't

992
00:36:53,119 --> 00:36:57,040
run on the new m1 architecture so

993
00:36:57,040 --> 00:36:58,640
i did get it working on my old mac

994
00:36:58,640 --> 00:37:01,040
though yeah barry we we spent quite some

995
00:37:01,040 --> 00:37:03,040
time looking into it

996
00:37:03,040 --> 00:37:04,480
for specifically

997
00:37:04,480 --> 00:37:08,560
arm 64 architecture and it's tricky it's

998
00:37:08,560 --> 00:37:11,040
it's actually so tricky so we decided to

999
00:37:11,040 --> 00:37:14,000
to to just stop because it was

1000
00:37:14,000 --> 00:37:16,400
yeah it doesn't make sense but well most

1001
00:37:16,400 --> 00:37:18,640
mostly because even if you can run

1002
00:37:18,640 --> 00:37:20,960
container lab on m1 mac

1003
00:37:20,960 --> 00:37:22,400
there are

1004
00:37:22,400 --> 00:37:24,880
literally no images from vendors which

1005
00:37:24,880 --> 00:37:26,960
support this architecture so you could

1006
00:37:26,960 --> 00:37:28,079
still run

1007
00:37:28,079 --> 00:37:30,960
container lab but you wouldn't run cos

1008
00:37:30,960 --> 00:37:34,800
or you know ios xr or any of other vms

1009
00:37:34,800 --> 00:37:36,160
they need to be ported to this

1010
00:37:36,160 --> 00:37:38,480
architecture to be able to to be able to

1011
00:37:38,480 --> 00:37:39,680
run on it

1012
00:37:39,680 --> 00:37:42,000
so we just set it up set it aside for

1013
00:37:42,000 --> 00:37:43,119
the time being

1014
00:37:43,119 --> 00:37:45,440
okay okay got it

1015
00:37:45,440 --> 00:37:47,920
so at some point they may see fit to

1016
00:37:47,920 --> 00:37:50,560
create the images but until then

1017
00:37:50,560 --> 00:37:52,880
exactly exactly so far you can only play

1018
00:37:52,880 --> 00:37:54,560
with linux images that you can rebuild

1019
00:37:54,560 --> 00:37:56,880
for this architecture yourself but it is

1020
00:37:56,880 --> 00:37:59,359
too narrow use case to spend time on it

1021
00:37:59,359 --> 00:38:00,720
so yeah

1022
00:38:00,720 --> 00:38:04,000
okay and hence the aws architecture for

1023
00:38:04,000 --> 00:38:05,760
this hackathon right

1024
00:38:05,760 --> 00:38:08,480
exactly i guess

1025
00:38:08,720 --> 00:38:11,599
um this is charles and um

1026
00:38:11,599 --> 00:38:12,400
i

1027
00:38:12,400 --> 00:38:13,839
haven't figured out yet if i'm gonna

1028
00:38:13,839 --> 00:38:15,760
join one of the other projects or one

1029
00:38:15,760 --> 00:38:18,320
project i had in mind was

1030
00:38:18,320 --> 00:38:20,240
open daylight and

1031
00:38:20,240 --> 00:38:22,079
i've been doing work with some others on

1032
00:38:22,079 --> 00:38:24,480
the uni manager project within that

1033
00:38:24,480 --> 00:38:26,079
we've made some really good

1034
00:38:26,079 --> 00:38:28,320
improvements to the code but our

1035
00:38:28,320 --> 00:38:30,640
documentation is woefully out of date

1036
00:38:30,640 --> 00:38:32,160
and only those who've been working on it

1037
00:38:32,160 --> 00:38:34,560
for a while really know how to to use

1038
00:38:34,560 --> 00:38:36,880
the uni manager component

1039
00:38:36,880 --> 00:38:38,880
so i tried to get some people who are

1040
00:38:38,880 --> 00:38:42,240
really familiar with the docs to to join

1041
00:38:42,240 --> 00:38:45,040
because i'm certainly not an expert

1042
00:38:45,040 --> 00:38:47,040
but that's something i may spend some

1043
00:38:47,040 --> 00:38:49,440
time looking at just to figure out you

1044
00:38:49,440 --> 00:38:51,280
know if i can get the documentation

1045
00:38:51,280 --> 00:38:53,599
figured out and if i can add stuff if

1046
00:38:53,599 --> 00:38:55,440
there's anyone who's interested in that

1047
00:38:55,440 --> 00:38:57,599
or has expertise with

1048
00:38:57,599 --> 00:39:00,079
uh the recent documentation i'd be

1049
00:39:00,079 --> 00:39:01,680
interested in working with you

1050
00:39:01,680 --> 00:39:04,160
i think it's actually quite a good idea

1051
00:39:04,160 --> 00:39:06,160
because for i know that for content lab

1052
00:39:06,160 --> 00:39:09,359
for gmic and for boxing there is a

1053
00:39:09,359 --> 00:39:11,920
shortage of documentation as well so we

1054
00:39:11,920 --> 00:39:14,480
could if you are not you know

1055
00:39:14,480 --> 00:39:17,119
in programming as as a whole you may

1056
00:39:17,119 --> 00:39:19,440
want to contribute in a in a way of

1057
00:39:19,440 --> 00:39:22,000
documentation which will also help a lot

1058
00:39:22,000 --> 00:39:24,560
for the open source projects

1059
00:39:24,560 --> 00:39:26,400
yeah and in this case i am involved in

1060
00:39:26,400 --> 00:39:29,040
the programming as well but uh you know

1061
00:39:29,040 --> 00:39:31,359
that's that's often the case with with a

1062
00:39:31,359 --> 00:39:33,200
lot of open source projects uh the

1063
00:39:33,200 --> 00:39:35,119
documentation gets a little bit left

1064
00:39:35,119 --> 00:39:37,200
behind because a lot of it exactly or

1065
00:39:37,200 --> 00:39:38,960
focus more on the

1066
00:39:38,960 --> 00:39:40,560
yeah and if you want to grow the

1067
00:39:40,560 --> 00:39:44,000
community you really need good docs and

1068
00:39:44,000 --> 00:39:45,520
we certainly don't have those for this

1069
00:39:45,520 --> 00:39:46,640
project

1070
00:39:46,640 --> 00:39:48,480
at this time

1071
00:39:48,480 --> 00:39:50,720
i guess i want to chime in

1072
00:39:50,720 --> 00:39:51,680
so

1073
00:39:51,680 --> 00:39:53,680
there was a discussion a couple of

1074
00:39:53,680 --> 00:39:56,800
months back with roman about the

1075
00:39:56,800 --> 00:39:58,640
visualizing topologies from container

1076
00:39:58,640 --> 00:40:00,400
labs

1077
00:40:00,400 --> 00:40:02,000
and

1078
00:40:02,000 --> 00:40:04,400
we came to

1079
00:40:04,400 --> 00:40:06,720
some view that it would be helpful

1080
00:40:06,720 --> 00:40:08,839
to be able to

1081
00:40:08,839 --> 00:40:11,760
export like a running topology from the

1082
00:40:11,760 --> 00:40:13,440
container labs with all the aps and

1083
00:40:13,440 --> 00:40:15,760
stuff uh in adjacent formats so that it

1084
00:40:15,760 --> 00:40:17,520
could be used in different

1085
00:40:17,520 --> 00:40:19,760
visualization

1086
00:40:19,760 --> 00:40:21,359
frameworks

1087
00:40:21,359 --> 00:40:24,480
we had one in mind cisco next ui

1088
00:40:24,480 --> 00:40:25,760
um

1089
00:40:25,760 --> 00:40:27,760
so i i have a patch

1090
00:40:27,760 --> 00:40:30,160
sort of i put it together yesterday that

1091
00:40:30,160 --> 00:40:32,319
does this export

1092
00:40:32,319 --> 00:40:35,280
so um and maybe for the hackathon that

1093
00:40:35,280 --> 00:40:36,160
would be

1094
00:40:36,160 --> 00:40:40,000
an option just to finish it up with uh

1095
00:40:40,000 --> 00:40:42,400
with actually building a topology of the

1096
00:40:42,400 --> 00:40:44,480
network like a visualization of the

1097
00:40:44,480 --> 00:40:47,280
topology using that um

1098
00:40:47,280 --> 00:40:50,720
exported uh container lab topology

1099
00:40:50,720 --> 00:40:52,560
from jason so that's that's what i have

1100
00:40:52,560 --> 00:40:53,599
in mind

1101
00:40:53,599 --> 00:40:56,240
yeah that is awesome i can i can just

1102
00:40:56,240 --> 00:40:58,000
you know add on top of that that this is

1103
00:40:58,000 --> 00:41:00,560
one of the things that i've been asked a

1104
00:41:00,560 --> 00:41:03,359
lot from from container lab users they

1105
00:41:03,359 --> 00:41:04,960
still want to have the

1106
00:41:04,960 --> 00:41:07,040
graphical ui of the topology that that

1107
00:41:07,040 --> 00:41:09,200
has been deployed and what alex just

1108
00:41:09,200 --> 00:41:11,280
mentioned it is

1109
00:41:11,280 --> 00:41:13,040
already an issue in container lab so you

1110
00:41:13,040 --> 00:41:14,560
can have a look at the discussion that

1111
00:41:14,560 --> 00:41:16,400
we had with alex

1112
00:41:16,400 --> 00:41:18,400
so yeah if you want to join him that

1113
00:41:18,400 --> 00:41:19,920
would be great i think that would be one

1114
00:41:19,920 --> 00:41:21,760
of the best contributions to container

1115
00:41:21,760 --> 00:41:24,880
lab scenes since a while yeah awesome

1116
00:41:24,880 --> 00:41:27,680
i'd be interested in that let me post a

1117
00:41:27,680 --> 00:41:29,599
link to the issue we have in container

1118
00:41:29,599 --> 00:41:31,920
lab paper so you can read

1119
00:41:31,920 --> 00:41:34,880
okay thanks um anybody else have any

1120
00:41:34,880 --> 00:41:36,079
ideas

1121
00:41:36,079 --> 00:41:39,760
uh yes uh abdullah here from simcoe

1122
00:41:39,760 --> 00:41:41,920
uh crazy idea i'm not sure if this is

1123
00:41:41,920 --> 00:41:44,319
the right platform to throw in the crazy

1124
00:41:44,319 --> 00:41:45,359
ideas

1125
00:41:45,359 --> 00:41:48,400
if there is um any protocol enhancements

1126
00:41:48,400 --> 00:41:49,920
to be considered

1127
00:41:49,920 --> 00:41:51,520
like for example

1128
00:41:51,520 --> 00:41:53,040
uh the

1129
00:41:53,040 --> 00:41:56,240
the the routing protocol for any as is

1130
00:41:56,240 --> 00:41:58,480
ospf for example

1131
00:41:58,480 --> 00:42:01,280
and within the ospf everyone you know

1132
00:42:01,280 --> 00:42:03,760
the next hop ips already determined that

1133
00:42:03,760 --> 00:42:06,240
where we are learning the you know the

1134
00:42:06,240 --> 00:42:08,160
prefixes that will be eventually

1135
00:42:08,160 --> 00:42:10,079
advertised out

1136
00:42:10,079 --> 00:42:13,280
um one way of enhancement is what's

1137
00:42:13,280 --> 00:42:15,280
called

1138
00:42:15,280 --> 00:42:17,359
the igb the interior gateway protocol

1139
00:42:17,359 --> 00:42:19,200
whatever we are using

1140
00:42:19,200 --> 00:42:21,440
tracks the latency to the next hop and

1141
00:42:21,440 --> 00:42:22,240
then

1142
00:42:22,240 --> 00:42:26,079
advertise that latency out with bgp

1143
00:42:26,079 --> 00:42:28,960
and it will be propagated all over the

1144
00:42:28,960 --> 00:42:33,040
world and you can look at the latency

1145
00:42:33,040 --> 00:42:35,040
information with the parameter with the

1146
00:42:35,040 --> 00:42:37,040
bgp parameter which is learned from the

1147
00:42:37,040 --> 00:42:38,319
igp

1148
00:42:38,319 --> 00:42:41,040
uh individual igps or something like

1149
00:42:41,040 --> 00:42:43,359
that so it's a crazy idea it requires

1150
00:42:43,359 --> 00:42:45,920
enhancement to the you know bgp and

1151
00:42:45,920 --> 00:42:49,119
probably ospf adding additional

1152
00:42:49,119 --> 00:42:51,839
attributes or parameters that could be

1153
00:42:51,839 --> 00:42:53,200
transferred along

1154
00:42:53,200 --> 00:42:54,079
um

1155
00:42:54,079 --> 00:42:56,000
we have seen you know the

1156
00:42:56,000 --> 00:42:58,880
the the rise of mpls and then fall of

1157
00:42:58,880 --> 00:43:00,319
him fearless but

1158
00:43:00,319 --> 00:43:02,319
the internet is still here and internet

1159
00:43:02,319 --> 00:43:04,319
is going to stay whatever you call it

1160
00:43:04,319 --> 00:43:06,480
it's going to stay in the internet

1161
00:43:06,480 --> 00:43:09,760
um so i believe it's time to add more uh

1162
00:43:09,760 --> 00:43:11,760
parameters to existing route routing

1163
00:43:11,760 --> 00:43:14,000
protocols to carry additional data and

1164
00:43:14,000 --> 00:43:15,760
information

1165
00:43:15,760 --> 00:43:18,079
is there any is that the right platform

1166
00:43:18,079 --> 00:43:18,800
to

1167
00:43:18,800 --> 00:43:21,520
think about that

1168
00:43:22,640 --> 00:43:25,359
yeah thanks it you can call it live

1169
00:43:25,359 --> 00:43:27,280
latency telemetry

1170
00:43:27,280 --> 00:43:29,520
information sent with the protocol this

1171
00:43:29,520 --> 00:43:31,200
will allow to calculate a lot of things

1172
00:43:31,200 --> 00:43:34,480
for example if from point a to point b

1173
00:43:34,480 --> 00:43:37,359
the igb latency is 110 milliseconds but

1174
00:43:37,359 --> 00:43:39,040
your actual ping is showing 140

1175
00:43:39,040 --> 00:43:40,560
milliseconds it means there's a

1176
00:43:40,560 --> 00:43:42,400
congestion along the path

1177
00:43:42,400 --> 00:43:45,119
or it could be another way of managing

1178
00:43:45,119 --> 00:43:47,119
uh the latency i know that all that

1179
00:43:47,119 --> 00:43:49,040
software-defined things

1180
00:43:49,040 --> 00:43:50,960
protocols and mayors they are doing all

1181
00:43:50,960 --> 00:43:54,480
that stuff but why not uh the the

1182
00:43:54,480 --> 00:43:56,560
internet why not

1183
00:43:56,560 --> 00:43:59,119
thank you guys

1184
00:43:59,359 --> 00:44:01,920
yeah give it a try

1185
00:44:01,920 --> 00:44:04,880
wow okay let's talk about it man

1186
00:44:04,880 --> 00:44:07,119
you know just brainstorming is not going

1187
00:44:07,119 --> 00:44:09,040
to hurt that you know

1188
00:44:09,040 --> 00:44:10,640
just talk about what are the

1189
00:44:10,640 --> 00:44:12,560
possibilities and if it doesn't go

1190
00:44:12,560 --> 00:44:14,480
doesn't go but at least

1191
00:44:14,480 --> 00:44:16,400
we should give it a try thanks

1192
00:44:16,400 --> 00:44:17,920
so there's no software involved it's

1193
00:44:17,920 --> 00:44:19,520
pure discussion

1194
00:44:19,520 --> 00:44:20,880
at this stage

1195
00:44:20,880 --> 00:44:24,720
okay uh any other project ideas if not

1196
00:44:24,720 --> 00:44:26,079
uh

1197
00:44:26,079 --> 00:44:27,520
chris you want to start on the

1198
00:44:27,520 --> 00:44:28,720
infrastructure

1199
00:44:28,720 --> 00:44:31,119
so the past few hackathons we've uh

1200
00:44:31,119 --> 00:44:33,280
we've landed on we've experimented with

1201
00:44:33,280 --> 00:44:35,520
a number of different ways of providing

1202
00:44:35,520 --> 00:44:37,359
lab topologies

1203
00:44:37,359 --> 00:44:38,800
we've used

1204
00:44:38,800 --> 00:44:41,119
we've used commercial products for

1205
00:44:41,119 --> 00:44:43,599
for building labs in the past

1206
00:44:43,599 --> 00:44:46,319
we've used we've set up our own labs and

1207
00:44:46,319 --> 00:44:48,960
dedicated hardware using various

1208
00:44:48,960 --> 00:44:50,880
virtualization techniques like

1209
00:44:50,880 --> 00:44:53,200
virtualbox

1210
00:44:53,200 --> 00:44:55,520
was the last grand experiment with that

1211
00:44:55,520 --> 00:44:57,680
um the past few hackathons we landed on

1212
00:44:57,680 --> 00:44:59,680
container lab as our

1213
00:44:59,680 --> 00:45:00,800
as our

1214
00:45:00,800 --> 00:45:02,480
instrument of choice for setting up lab

1215
00:45:02,480 --> 00:45:04,319
topologies

1216
00:45:04,319 --> 00:45:06,960
and the the real advantage of container

1217
00:45:06,960 --> 00:45:08,960
lab is that it runs

1218
00:45:08,960 --> 00:45:11,280
it runs network os's in containers as

1219
00:45:11,280 --> 00:45:13,200
far as vms so it's a lot more

1220
00:45:13,200 --> 00:45:15,520
lightweight it's a lot more flexible and

1221
00:45:15,520 --> 00:45:18,480
most importantly you can run them

1222
00:45:18,480 --> 00:45:21,359
in aws instances

1223
00:45:21,359 --> 00:45:25,839
running vms inside of vm is never fun to

1224
00:45:25,839 --> 00:45:26,960
say the least

1225
00:45:26,960 --> 00:45:30,560
uh even when it's allowed so um

1226
00:45:30,560 --> 00:45:32,800
so what we've done what we've done is

1227
00:45:32,800 --> 00:45:36,079
that we've spun up a number of ec2

1228
00:45:36,079 --> 00:45:38,720
instances that has the same

1229
00:45:38,720 --> 00:45:41,119
they're built from the same template um

1230
00:45:41,119 --> 00:45:43,760
so if you want access or your team wants

1231
00:45:43,760 --> 00:45:45,440
access to one of these images just let

1232
00:45:45,440 --> 00:45:47,680
us know and

1233
00:45:47,680 --> 00:45:49,359
i'm not sure if we have

1234
00:45:49,359 --> 00:45:51,040
dns set up for them yet but at the very

1235
00:45:51,040 --> 00:45:52,880
least i can give you we can give you ip

1236
00:45:52,880 --> 00:45:55,520
addresses um and they

1237
00:45:55,520 --> 00:45:57,440
and the ssh key

1238
00:45:57,440 --> 00:45:58,720
that will allow you to access that

1239
00:45:58,720 --> 00:45:59,920
instance

1240
00:45:59,920 --> 00:46:02,319
and every team gets a dedicated instance

1241
00:46:02,319 --> 00:46:04,480
so there's no danger of stepping on any

1242
00:46:04,480 --> 00:46:07,040
of anyone else's work

1243
00:46:07,040 --> 00:46:09,280
so

1244
00:46:09,280 --> 00:46:10,240
we

1245
00:46:10,240 --> 00:46:11,200
the

1246
00:46:11,200 --> 00:46:13,280
topology itself is

1247
00:46:13,280 --> 00:46:16,160
is a fairly simple four node topology uh

1248
00:46:16,160 --> 00:46:18,319
there's a graph of it later in the uh

1249
00:46:18,319 --> 00:46:21,280
later in the slide deck um

1250
00:46:21,280 --> 00:46:24,560
but you know it's effectively two arista

1251
00:46:24,560 --> 00:46:29,200
ceos instances containers uh two nokia

1252
00:46:29,200 --> 00:46:33,119
sr linux instances and then two centos

1253
00:46:33,119 --> 00:46:34,960
hosts uh running writing container

1254
00:46:34,960 --> 00:46:37,200
running as containers so you can use the

1255
00:46:37,200 --> 00:46:39,119
centos hosts for

1256
00:46:39,119 --> 00:46:41,520
for testing interconnectivity make sure

1257
00:46:41,520 --> 00:46:42,800
that you can ping one centos to the

1258
00:46:42,800 --> 00:46:44,319
other centos

1259
00:46:44,319 --> 00:46:46,079
you can install your own tools on them

1260
00:46:46,079 --> 00:46:47,599
to run

1261
00:46:47,599 --> 00:46:48,640
to run

1262
00:46:48,640 --> 00:46:50,960
any sort of tool tooling you want to

1263
00:46:50,960 --> 00:46:52,240
test against

1264
00:46:52,240 --> 00:46:53,280
the uh

1265
00:46:53,280 --> 00:46:54,620
the oss

1266
00:46:54,620 --> 00:46:56,480
[Music]

1267
00:46:56,480 --> 00:46:57,839
you can also

1268
00:46:57,839 --> 00:47:00,079
you can also customize topology fairly

1269
00:47:00,079 --> 00:47:02,079
easily and uh

1270
00:47:02,079 --> 00:47:04,079
later on i'll i'll give you a quick

1271
00:47:04,079 --> 00:47:05,920
run-through of what of how you can do

1272
00:47:05,920 --> 00:47:07,920
that and what the file definition looks

1273
00:47:07,920 --> 00:47:10,960
like um it also helps that we have a

1274
00:47:10,960 --> 00:47:12,400
maintainer for

1275
00:47:12,400 --> 00:47:15,680
for container lab here as well so um so

1276
00:47:15,680 --> 00:47:17,119
hopefully some questions can be directed

1277
00:47:17,119 --> 00:47:19,200
that way as well so we will share the

1278
00:47:19,200 --> 00:47:20,319
private key it's gonna be the same

1279
00:47:20,319 --> 00:47:23,280
private key for every instance um

1280
00:47:23,280 --> 00:47:25,440
and you can either

1281
00:47:25,440 --> 00:47:28,319
you can create tunnels to them you can

1282
00:47:28,319 --> 00:47:30,800
develop locally and then push your code

1283
00:47:30,800 --> 00:47:34,160
via github repo or scp

1284
00:47:34,160 --> 00:47:36,000
you can do development directly on the

1285
00:47:36,000 --> 00:47:38,000
instances

1286
00:47:38,000 --> 00:47:40,880
so these are these are playgrounds uh

1287
00:47:40,880 --> 00:47:42,720
use them as you please

1288
00:47:42,720 --> 00:47:43,440
the

1289
00:47:43,440 --> 00:47:45,760
topology and the links

1290
00:47:45,760 --> 00:47:48,400
look like this

1291
00:47:48,400 --> 00:47:49,200
so

1292
00:47:49,200 --> 00:47:51,280
the routing between the four instances

1293
00:47:51,280 --> 00:47:53,040
is all ebgp

1294
00:47:53,040 --> 00:47:55,040
in this graph you'll see the as numbers

1295
00:47:55,040 --> 00:47:57,200
and the individual link addressing for

1296
00:47:57,200 --> 00:48:00,400
every device in the topology

1297
00:48:00,400 --> 00:48:05,119
and everything is dual stack v4 and v6

1298
00:48:05,119 --> 00:48:07,599
so yeah i did not call out next slide

1299
00:48:07,599 --> 00:48:10,880
sorry about that um

1300
00:48:11,200 --> 00:48:13,680
so uh yeah you can refer to this back to

1301
00:48:13,680 --> 00:48:15,680
the slide for

1302
00:48:15,680 --> 00:48:17,680
for topology information if you need it

1303
00:48:17,680 --> 00:48:20,240
um i also have a on the grapple file if

1304
00:48:20,240 --> 00:48:22,480
anyone wants that as well uh and have

1305
00:48:22,480 --> 00:48:25,359
you distribute it um if you want to make

1306
00:48:25,359 --> 00:48:26,559
changes you know if you want to change

1307
00:48:26,559 --> 00:48:29,119
topology and record those changes

1308
00:48:29,119 --> 00:48:31,359
i'm happy to share that file the short

1309
00:48:31,359 --> 00:48:34,000
and sweet instructions for accessing the

1310
00:48:34,000 --> 00:48:35,520
instance and at this point i'm going to

1311
00:48:35,520 --> 00:48:37,839
go ahead and share my screen

1312
00:48:37,839 --> 00:48:40,640
so here is the

1313
00:48:40,640 --> 00:48:43,760
here is the the hackathon key

1314
00:48:43,760 --> 00:48:45,920
so

1315
00:48:45,920 --> 00:48:48,079
command nothing my history so this is

1316
00:48:48,079 --> 00:48:50,000
one of the this is one of the instances

1317
00:48:50,000 --> 00:48:53,200
this is it's ipv6 address

1318
00:48:53,200 --> 00:48:56,000
so the username is always ubuntu

1319
00:48:56,000 --> 00:48:56,800
so

1320
00:48:56,800 --> 00:48:58,079
you know pretty much all you need to do

1321
00:48:58,079 --> 00:49:01,599
is use the dash i switch in ssh

1322
00:49:01,599 --> 00:49:04,000
to point to that private key

1323
00:49:04,000 --> 00:49:08,480
and then ssh to ubuntu at the address

1324
00:49:08,480 --> 00:49:11,200
that should get you

1325
00:49:11,200 --> 00:49:15,200
access to the instance itself

1326
00:49:20,319 --> 00:49:21,920
aws linux

1327
00:49:21,920 --> 00:49:23,280
um

1328
00:49:23,280 --> 00:49:26,160
so docker commands and docker commands

1329
00:49:26,160 --> 00:49:28,319
and cloud commands need to be run as

1330
00:49:28,319 --> 00:49:29,359
roots so

1331
00:49:29,359 --> 00:49:30,400
you can either

1332
00:49:30,400 --> 00:49:32,160
you know depending on your

1333
00:49:32,160 --> 00:49:34,640
depending on your appetite for risk uh

1334
00:49:34,640 --> 00:49:36,960
you can either sudo all the commands or

1335
00:49:36,960 --> 00:49:37,920
you can

1336
00:49:37,920 --> 00:49:39,359
sudo to

1337
00:49:39,359 --> 00:49:41,760
su-8 and just run everything from a root

1338
00:49:41,760 --> 00:49:42,800
shell

1339
00:49:42,800 --> 00:49:45,760
i prefer pseudo because i get paranoid

1340
00:49:45,760 --> 00:49:47,280
but the

1341
00:49:47,280 --> 00:49:49,599
all of the c lab files are going to be

1342
00:49:49,599 --> 00:49:53,520
in a directory called opt c lab

1343
00:49:53,839 --> 00:49:55,440
and then in this

1344
00:49:55,440 --> 00:49:58,640
directory you'll see the topology file

1345
00:49:58,640 --> 00:50:00,079
this is going to be some similar to the

1346
00:50:00,079 --> 00:50:04,160
same file that was shared earlier

1347
00:50:05,119 --> 00:50:08,319
so we have a topology that lists out

1348
00:50:08,319 --> 00:50:11,040
each of our nodes and

1349
00:50:11,040 --> 00:50:13,200
the one the one custom

1350
00:50:13,200 --> 00:50:15,359
the one custom optimization that we've

1351
00:50:15,359 --> 00:50:17,280
done here is that we've

1352
00:50:17,280 --> 00:50:20,319
we've declared the file names for all of

1353
00:50:20,319 --> 00:50:21,359
these

1354
00:50:21,359 --> 00:50:24,160
all these node startup intakes um

1355
00:50:24,160 --> 00:50:27,760
so in for ceos they are

1356
00:50:27,760 --> 00:50:30,240
they are very cisco like

1357
00:50:30,240 --> 00:50:34,880
ios like uh sr linux their json uh

1358
00:50:34,880 --> 00:50:37,640
kindness sort of juniper-like but

1359
00:50:37,640 --> 00:50:39,680
[Music]

1360
00:50:39,680 --> 00:50:42,800
but not really uh the centos machines uh

1361
00:50:42,800 --> 00:50:45,760
we we put a startup script to to

1362
00:50:45,760 --> 00:50:47,920
properly address them uh so they get the

1363
00:50:47,920 --> 00:50:50,160
right at right id addresses

1364
00:50:50,160 --> 00:50:51,520
when they come up

1365
00:50:51,520 --> 00:50:52,400
and

1366
00:50:52,400 --> 00:50:55,680
here we have all the endpoints declared

1367
00:50:55,680 --> 00:50:58,000
and this is cs1

1368
00:50:58,000 --> 00:51:00,720
eth2 connected to r1 e11

1369
00:51:00,720 --> 00:51:02,800
and and on down to the six links that

1370
00:51:02,800 --> 00:51:04,880
are in the topology graph here's some

1371
00:51:04,880 --> 00:51:07,280
screenshots showing

1372
00:51:07,280 --> 00:51:08,800
showing this

1373
00:51:08,800 --> 00:51:12,079
an easy shortcut here is to set up these

1374
00:51:12,079 --> 00:51:14,640
keys as environment variables

1375
00:51:14,640 --> 00:51:15,680
that way you don't have to worry about

1376
00:51:15,680 --> 00:51:17,520
remembering them every time

1377
00:51:17,520 --> 00:51:18,880
if you want to

1378
00:51:18,880 --> 00:51:21,280
if you want to look at the topology and

1379
00:51:21,280 --> 00:51:23,520
see all of the devices

1380
00:51:23,520 --> 00:51:25,760
you use this inspect

1381
00:51:25,760 --> 00:51:28,640
um inspect keyword command uh one thing

1382
00:51:28,640 --> 00:51:30,240
to notice with container live commands

1383
00:51:30,240 --> 00:51:31,280
is that

1384
00:51:31,280 --> 00:51:33,920
every command needs a pointer to the

1385
00:51:33,920 --> 00:51:36,319
topology file you're referencing

1386
00:51:36,319 --> 00:51:38,160
you can actually have multiple

1387
00:51:38,160 --> 00:51:39,920
topologies running on the same host with

1388
00:51:39,920 --> 00:51:41,920
container lab but each one is going to

1389
00:51:41,920 --> 00:51:43,040
have its own

1390
00:51:43,040 --> 00:51:44,720
its own

1391
00:51:44,720 --> 00:51:46,319
topology file so you always need to be

1392
00:51:46,319 --> 00:51:49,119
referencing that with a t-switch

1393
00:51:49,119 --> 00:51:51,520
whenever you are whenever you are

1394
00:51:51,520 --> 00:51:54,480
interrogating it or working with it um

1395
00:51:54,480 --> 00:51:56,319
actually a question is there any way to

1396
00:51:56,319 --> 00:51:58,319
set that as an environment variable

1397
00:51:58,319 --> 00:52:01,359
no no you still need to use it otherwise

1398
00:52:01,359 --> 00:52:03,119
you can create

1399
00:52:03,119 --> 00:52:05,520
a wrapper around clap

1400
00:52:05,520 --> 00:52:06,559
file

1401
00:52:06,559 --> 00:52:09,040
around celeb command so it will you know

1402
00:52:09,040 --> 00:52:11,599
have the topology file in the shell

1403
00:52:11,599 --> 00:52:12,720
script

1404
00:52:12,720 --> 00:52:14,079
and then

1405
00:52:14,079 --> 00:52:17,040
yeah or you can do c lab inspect all and

1406
00:52:17,040 --> 00:52:18,559
you will see all the

1407
00:52:18,559 --> 00:52:20,480
labs deployed on the node

1408
00:52:20,480 --> 00:52:22,079
okay okay great

1409
00:52:22,079 --> 00:52:23,520
um

1410
00:52:23,520 --> 00:52:25,440
that might be something i could work on

1411
00:52:25,440 --> 00:52:26,559
see if the

1412
00:52:26,559 --> 00:52:27,920
see if you can put an environment there

1413
00:52:27,920 --> 00:52:28,880
see if you can replace that with the

1414
00:52:28,880 --> 00:52:30,800
environment variable that sounds like

1415
00:52:30,800 --> 00:52:32,559
something i'd want to have at least

1416
00:52:32,559 --> 00:52:34,960
so this is a visualization feature that

1417
00:52:34,960 --> 00:52:37,440
taylor labs has um

1418
00:52:37,440 --> 00:52:39,040
what's what's involved besides i'll show

1419
00:52:39,040 --> 00:52:41,760
you this live um it effectively opens up

1420
00:52:41,760 --> 00:52:45,040
a small web server if you run the uh

1421
00:52:45,040 --> 00:52:46,800
this is the

1422
00:52:46,800 --> 00:52:48,800
generate command

1423
00:52:48,800 --> 00:52:50,880
you know it's graph command so c lab

1424
00:52:50,880 --> 00:52:52,960
graph will

1425
00:52:52,960 --> 00:52:55,119
will start a small web server and give

1426
00:52:55,119 --> 00:52:56,720
you its listening port and then we'll

1427
00:52:56,720 --> 00:52:58,480
show you the topology

1428
00:52:58,480 --> 00:52:59,520
like this

1429
00:52:59,520 --> 00:53:00,640
and

1430
00:53:00,640 --> 00:53:01,359
and

1431
00:53:01,359 --> 00:53:03,839
these are all you can move these nodes

1432
00:53:03,839 --> 00:53:06,559
around to arrange them as you want

1433
00:53:06,559 --> 00:53:07,839
and then gives you the same information

1434
00:53:07,839 --> 00:53:09,359
that you see in inspect

1435
00:53:09,359 --> 00:53:10,319
command

1436
00:53:10,319 --> 00:53:13,520
so when you're accessing an instance

1437
00:53:13,520 --> 00:53:14,960
if you're familiar with docker exec

1438
00:53:14,960 --> 00:53:16,240
commands

1439
00:53:16,240 --> 00:53:17,520
those are the commands that we use to

1440
00:53:17,520 --> 00:53:20,400
access an instance uh one thing to know

1441
00:53:20,400 --> 00:53:22,800
is that the operating environment

1442
00:53:22,800 --> 00:53:24,720
binaries need to be referenced when you

1443
00:53:24,720 --> 00:53:26,240
run this command

1444
00:53:26,240 --> 00:53:27,839
and they're different for each platform

1445
00:53:27,839 --> 00:53:31,440
so under cos it's uh the the login shell

1446
00:53:31,440 --> 00:53:33,520
is called cli and it's important to

1447
00:53:33,520 --> 00:53:34,960
capitalize the c

1448
00:53:34,960 --> 00:53:35,839
um

1449
00:53:35,839 --> 00:53:39,760
sr linux it is sr underscore cli um

1450
00:53:39,760 --> 00:53:41,599
centos is just bash

1451
00:53:41,599 --> 00:53:43,599
but you still need to actually say bash

1452
00:53:43,599 --> 00:53:45,520
at the end of your docker exec command

1453
00:53:45,520 --> 00:53:48,800
so if people are not familiar with ceos

1454
00:53:48,800 --> 00:53:51,040
or arista eos

1455
00:53:51,040 --> 00:53:54,079
it is very cisco-like so similar to

1456
00:53:54,079 --> 00:53:56,720
cisco that cisco actually sued them over

1457
00:53:56,720 --> 00:53:59,200
it at one point um

1458
00:53:59,200 --> 00:54:00,640
a lot of the commands if you're familiar

1459
00:54:00,640 --> 00:54:02,559
with ios a lot of the commands are going

1460
00:54:02,559 --> 00:54:04,480
to be almost exactly the same

1461
00:54:04,480 --> 00:54:06,160
um

1462
00:54:06,160 --> 00:54:06,880
the

1463
00:54:06,880 --> 00:54:09,119
the probably the most notable difference

1464
00:54:09,119 --> 00:54:10,640
is that it has a

1465
00:54:10,640 --> 00:54:12,880
it has a atomic commit mode called

1466
00:54:12,880 --> 00:54:15,280
configure session uh which works very

1467
00:54:15,280 --> 00:54:18,079
much like uh junos's commit where you

1468
00:54:18,079 --> 00:54:20,240
know instead of config commands taking

1469
00:54:20,240 --> 00:54:21,680
effect as soon as you type as soon as

1470
00:54:21,680 --> 00:54:24,400
you hit return

1471
00:54:24,400 --> 00:54:26,800
you enter your commands you can run

1472
00:54:26,800 --> 00:54:28,240
diffs

1473
00:54:28,240 --> 00:54:31,200
and then run a commit to

1474
00:54:31,200 --> 00:54:33,920
to commit your changes

1475
00:54:33,920 --> 00:54:36,720
here's a link to eos documentation so

1476
00:54:36,720 --> 00:54:38,880
feel free to reference that it's

1477
00:54:38,880 --> 00:54:41,040
i don't believe it requires a login but

1478
00:54:41,040 --> 00:54:43,680
if it does um you can set up a account

1479
00:54:43,680 --> 00:54:46,079
with the wrist at no cost

1480
00:54:46,079 --> 00:54:47,920
you don't have to be a customer to

1481
00:54:47,920 --> 00:54:49,119
access that

1482
00:54:49,119 --> 00:54:50,960
um

1483
00:54:50,960 --> 00:54:53,680
sr linux is

1484
00:54:53,680 --> 00:54:57,119
is its own beast um under the model it

1485
00:54:57,119 --> 00:54:59,280
uses yang models so if you're familiar

1486
00:54:59,280 --> 00:55:01,520
with yang trees you might have a head

1487
00:55:01,520 --> 00:55:03,680
start here um it has a different number

1488
00:55:03,680 --> 00:55:05,040
of modes

1489
00:55:05,040 --> 00:55:08,079
that you switch between

1490
00:55:08,079 --> 00:55:10,720
running is is

1491
00:55:10,720 --> 00:55:12,559
is a

1492
00:55:12,559 --> 00:55:14,640
is a mode that you use to view the

1493
00:55:14,640 --> 00:55:16,400
configuration

1494
00:55:16,400 --> 00:55:18,160
although there are ways to

1495
00:55:18,160 --> 00:55:20,400
do run commands from other modes

1496
00:55:20,400 --> 00:55:21,200
um

1497
00:55:21,200 --> 00:55:23,760
there is a show mode which is the mode

1498
00:55:23,760 --> 00:55:25,520
that you need to be in in order to

1499
00:55:25,520 --> 00:55:27,520
view the operational state so very

1500
00:55:27,520 --> 00:55:28,720
similar to

1501
00:55:28,720 --> 00:55:30,480
the default mode that you get into on

1502
00:55:30,480 --> 00:55:33,200
any other exec mode

1503
00:55:33,200 --> 00:55:35,040
and then candidate mode is where you

1504
00:55:35,040 --> 00:55:36,880
make configuration changes so that's the

1505
00:55:36,880 --> 00:55:39,440
equivalent of configure session or

1506
00:55:39,440 --> 00:55:42,160
configure term configure terminal

1507
00:55:42,160 --> 00:55:43,040
uh

1508
00:55:43,040 --> 00:55:44,880
config exclusive to juniper and those

1509
00:55:44,880 --> 00:55:46,640
like that um

1510
00:55:46,640 --> 00:55:48,640
there's a documentation link here note

1511
00:55:48,640 --> 00:55:51,760
it's a tiny url because the actual url

1512
00:55:51,760 --> 00:55:54,240
is way too long to put into a powerpoint

1513
00:55:54,240 --> 00:55:55,200
deck

1514
00:55:55,200 --> 00:55:56,720
um

1515
00:55:56,720 --> 00:55:58,559
but that's good that'll get you to the

1516
00:55:58,559 --> 00:56:00,880
document need

1517
00:56:00,880 --> 00:56:02,640
um

1518
00:56:02,640 --> 00:56:05,520
a couple things about sr linux is that

1519
00:56:05,520 --> 00:56:08,000
it's the the shell is rather interactive

1520
00:56:08,000 --> 00:56:10,480
so it gives you a lot of a lot of

1521
00:56:10,480 --> 00:56:12,640
options for tap completion uh and this

1522
00:56:12,640 --> 00:56:15,040
is an example of that um

1523
00:56:15,040 --> 00:56:17,920
you know if i tab if i tab after this

1524
00:56:17,920 --> 00:56:21,440
command it gives me a number it shows me

1525
00:56:21,440 --> 00:56:23,599
every downstream option

1526
00:56:23,599 --> 00:56:24,880
um

1527
00:56:24,880 --> 00:56:26,960
and i can just start typing one that

1528
00:56:26,960 --> 00:56:29,359
will autocomplete

1529
00:56:29,359 --> 00:56:31,760
so that's that's a that's a nice feature

1530
00:56:31,760 --> 00:56:34,400
um that i've noticed about it um notice

1531
00:56:34,400 --> 00:56:36,559
that everything starts with this network

1532
00:56:36,559 --> 00:56:38,559
instance default um

1533
00:56:38,559 --> 00:56:40,400
a lot of routing a lot of other devices

1534
00:56:40,400 --> 00:56:42,000
have their default

1535
00:56:42,000 --> 00:56:44,720
their default routing instance just be

1536
00:56:44,720 --> 00:56:47,680
the default um here you actually have to

1537
00:56:47,680 --> 00:56:48,960
specify

1538
00:56:48,960 --> 00:56:50,400
that you are making changes to the

1539
00:56:50,400 --> 00:56:52,799
default routing instance you have to

1540
00:56:52,799 --> 00:56:55,599
you have to name it uh for for any any

1541
00:56:55,599 --> 00:56:56,880
commands you do underneath routing

1542
00:56:56,880 --> 00:57:00,079
protocols or any other policy

1543
00:57:00,079 --> 00:57:02,000
so just be aware of that

1544
00:57:02,000 --> 00:57:04,640
so here's a here's another example of

1545
00:57:04,640 --> 00:57:06,079
the

1546
00:57:06,079 --> 00:57:07,760
of the way that it gives you positional

1547
00:57:07,760 --> 00:57:09,119
arguments and commands that you can

1548
00:57:09,119 --> 00:57:11,839
possibly run uh also i need to remember

1549
00:57:11,839 --> 00:57:14,799
show network it's just default

1550
00:57:14,799 --> 00:57:18,559
here is an example of another language

1551
00:57:19,270 --> 00:57:21,440
[Applause]

1552
00:57:21,440 --> 00:57:22,960
it's a bit more verbose than probably

1553
00:57:22,960 --> 00:57:25,440
what you're used to and has a bit more

1554
00:57:25,440 --> 00:57:28,079
has a bit more pretty ascii art and

1555
00:57:28,079 --> 00:57:30,319
purification of it

1556
00:57:30,319 --> 00:57:32,079
so just be aware of that and this is

1557
00:57:32,079 --> 00:57:33,680
this is the default output if i'm

1558
00:57:33,680 --> 00:57:35,200
looking at the state of a single bgp

1559
00:57:35,200 --> 00:57:36,640
neighbor

1560
00:57:36,640 --> 00:57:40,160
just as an example

1561
00:57:40,160 --> 00:57:42,000
and

1562
00:57:42,000 --> 00:57:44,079
this is an example of

1563
00:57:44,079 --> 00:57:46,319
the info command which is the command

1564
00:57:46,319 --> 00:57:48,400
that you notice i'm in the running mode

1565
00:57:48,400 --> 00:57:50,880
here the info command is the command

1566
00:57:50,880 --> 00:57:52,160
that you

1567
00:57:52,160 --> 00:57:54,319
run to actually dump sections we can

1568
00:57:54,319 --> 00:57:58,319
take out so in this example i am

1569
00:57:58,319 --> 00:58:01,119
i am displaying the bgp configuration

1570
00:58:01,119 --> 00:58:04,559
under protocols bgp um so you see all

1571
00:58:04,559 --> 00:58:06,960
those commands there most of these look

1572
00:58:06,960 --> 00:58:08,640
should look very similar to other

1573
00:58:08,640 --> 00:58:12,000
network operating systems but um

1574
00:58:12,000 --> 00:58:14,240
as you know be prepared for differences

1575
00:58:14,240 --> 00:58:17,119
um and and i've i've worked with this

1576
00:58:17,119 --> 00:58:18,960
enough that um if you have any questions

1577
00:58:18,960 --> 00:58:20,559
go here to reach out to me i'm sure

1578
00:58:20,559 --> 00:58:22,319
there are other other people here who

1579
00:58:22,319 --> 00:58:23,760
have worked with us on linux before as

1580
00:58:23,760 --> 00:58:24,880
well

1581
00:58:24,880 --> 00:58:26,400
yeah i think i think we have one or two

1582
00:58:26,400 --> 00:58:27,280
on the

1583
00:58:27,280 --> 00:58:30,400
uh in the hackathon

1584
00:58:30,400 --> 00:58:31,359
yeah

1585
00:58:31,359 --> 00:58:32,240
okay

1586
00:58:32,240 --> 00:58:33,599
so that is

1587
00:58:33,599 --> 00:58:36,799
that is the lab um any questions okay

1588
00:58:36,799 --> 00:58:39,920
here are no questions let's move on

1589
00:58:39,920 --> 00:58:42,640
thank you hi this is sean

1590
00:58:42,640 --> 00:58:44,079
so basically

1591
00:58:44,079 --> 00:58:46,240
the lab is open till

1592
00:58:46,240 --> 00:58:48,319
um all the way

1593
00:58:48,319 --> 00:58:51,280
be regrouped and then we can continue to

1594
00:58:51,280 --> 00:58:53,119
work quite a bit

1595
00:58:53,119 --> 00:58:54,559
yes yeah yeah so the instances are

1596
00:58:54,559 --> 00:58:56,079
running they will stay running through

1597
00:58:56,079 --> 00:58:58,799
the hackathon um at the end of the

1598
00:58:58,799 --> 00:59:00,559
hackathon i will stop them but i won't

1599
00:59:00,559 --> 00:59:02,880
terminate them um and i'll leave them in

1600
00:59:02,880 --> 00:59:06,000
that state for a week or two um so if if

1601
00:59:06,000 --> 00:59:07,119
anyone

1602
00:59:07,119 --> 00:59:08,880
wants to get something off of their

1603
00:59:08,880 --> 00:59:11,200
instance that they forgot to grab um if

1604
00:59:11,200 --> 00:59:12,319
they wanted to copy a file off or

1605
00:59:12,319 --> 00:59:14,240
anything just just reach out on the heck

1606
00:59:14,240 --> 00:59:15,760
of our channel and we can

1607
00:59:15,760 --> 00:59:18,000
and we can uh you know restore that

1608
00:59:18,000 --> 00:59:19,119
instance

1609
00:59:19,119 --> 00:59:20,400
if that comes up

1610
00:59:20,400 --> 00:59:22,079
if you don't have any questions now you

1611
00:59:22,079 --> 00:59:23,119
know feel free to reach out in the

1612
00:59:23,119 --> 00:59:25,520
channel if if you need any assistance or

1613
00:59:25,520 --> 00:59:27,599
any help and and to request a request a

1614
00:59:27,599 --> 00:59:29,920
lab instance so yeah ask ask one of the

1615
00:59:29,920 --> 00:59:31,280
moderators in the channel tell us that

1616
00:59:31,280 --> 00:59:33,359
you need this and we'll get you set up

1617
00:59:33,359 --> 00:59:36,000
thank you so i have a question uh if

1618
00:59:36,000 --> 00:59:38,079
something is going wrong with one of the

1619
00:59:38,079 --> 00:59:40,160
containers it's okay to restart the

1620
00:59:40,160 --> 00:59:41,599
whole thing right that's not a problem

1621
00:59:41,599 --> 00:59:42,400
right

1622
00:59:42,400 --> 00:59:44,720
we can yeah yes if you reboot

1623
00:59:44,720 --> 00:59:45,839
yeah if you rig with the container i

1624
00:59:45,839 --> 00:59:48,240
mean you can you can do a reboot in the

1625
00:59:48,240 --> 00:59:50,240
shell um

1626
00:59:50,240 --> 00:59:52,480
if you need the container to be stopped

1627
00:59:52,480 --> 00:59:55,040
and restarted from the at the instance

1628
00:59:55,040 --> 00:59:56,559
level that's something we're happy to do

1629
00:59:56,559 --> 00:59:58,240
for you um

1630
00:59:58,240 --> 01:00:00,400
and if it needs to be

1631
01:00:00,400 --> 01:00:03,280
restored to default um we can do that as

1632
01:00:03,280 --> 01:00:06,240
well but just note that if we if we do

1633
01:00:06,240 --> 01:00:07,760
you know we would delete it and give you

1634
01:00:07,760 --> 01:00:09,680
a new instance just note that the new

1635
01:00:09,680 --> 01:00:10,880
instance will have a different ip

1636
01:00:10,880 --> 01:00:13,040
address so we'll need to give you that

1637
01:00:13,040 --> 01:00:17,040
okay okay thanks

1638
01:00:17,680 --> 01:00:18,880
yeah i don't think we i don't think we

1639
01:00:18,880 --> 01:00:22,240
set up the elastic ips for these

1640
01:00:23,599 --> 01:00:26,480
so when when like how do we see each

1641
01:00:26,480 --> 01:00:28,319
other's work at the end of it so what's

1642
01:00:28,319 --> 01:00:29,119
the

1643
01:00:29,119 --> 01:00:31,440
when does that happen or is it something

1644
01:00:31,440 --> 01:00:33,440
like that

1645
01:00:33,440 --> 01:00:36,480
uh so the hackathon starts on saturday

1646
01:00:36,480 --> 01:00:37,599
the 12th

1647
01:00:37,599 --> 01:00:40,960
and uh completes on sunday the 13th at

1648
01:00:40,960 --> 01:00:43,920
00 5pm central time

1649
01:00:43,920 --> 01:00:46,559
and at that point we will ask each of

1650
01:00:46,559 --> 01:00:49,839
the teams to give a brief presentation

1651
01:00:49,839 --> 01:00:50,960
on

1652
01:00:50,960 --> 01:00:52,799
what they were able to accomplish at the

1653
01:00:52,799 --> 01:00:53,839
hackathon

1654
01:00:53,839 --> 01:00:55,920
the zoom bridge that you all are using

1655
01:00:55,920 --> 01:00:59,119
today is the same link through the whole

1656
01:00:59,119 --> 01:01:02,880
of the hackathon so on sunday if you're

1657
01:01:02,880 --> 01:01:06,400
not in austin with us

1658
01:01:06,400 --> 01:01:08,480
make sure you're on zoom because we'll

1659
01:01:08,480 --> 01:01:09,920
incorporate the room and the

1660
01:01:09,920 --> 01:01:12,079
presentations in the room

1661
01:01:12,079 --> 01:01:14,160
into the

1662
01:01:14,160 --> 01:01:16,880
zoom link as well so that regardless of

1663
01:01:16,880 --> 01:01:18,720
where you're at you can see and

1664
01:01:18,720 --> 01:01:21,599
participate see michael anything else

1665
01:01:21,599 --> 01:01:23,520
that we should share thanks a lot jeff

1666
01:01:23,520 --> 01:01:26,559
and uh and chris uh i

1667
01:01:26,559 --> 01:01:29,040
uh i think that people should feel free

1668
01:01:29,040 --> 01:01:31,440
to to uh even though the hackathon

1669
01:01:31,440 --> 01:01:33,839
officially starts next saturday if you

1670
01:01:33,839 --> 01:01:35,760
want to get work done ahead of that

1671
01:01:35,760 --> 01:01:38,000
please go for it please make use of our

1672
01:01:38,000 --> 01:01:41,280
slack channel to uh to pitch ideas to

1673
01:01:41,280 --> 01:01:43,119
form teams to collaborate with others to

1674
01:01:43,119 --> 01:01:45,119
ask questions if you have them

1675
01:01:45,119 --> 01:01:47,280
like chris said if you need

1676
01:01:47,280 --> 01:01:50,079
if you want one of those aws container

1677
01:01:50,079 --> 01:01:53,119
lab instances spun up for you

1678
01:01:53,119 --> 01:01:55,280
right now just let us know we'll get you

1679
01:01:55,280 --> 01:01:57,280
access ahead of time

1680
01:01:57,280 --> 01:01:59,760
and uh you know please invite people

1681
01:01:59,760 --> 01:02:01,359
along even if they didn't make it to

1682
01:02:01,359 --> 01:02:04,640
this one and uh have fun learn stuff

1683
01:02:04,640 --> 01:02:08,480
make friends and uh we'll uh see you on

1684
01:02:08,480 --> 01:02:11,280
on saturday and sunday next week so the

1685
01:02:11,280 --> 01:02:14,000
team formation is supposed to happen

1686
01:02:14,000 --> 01:02:14,880
on

1687
01:02:14,880 --> 01:02:19,119
the hackathon channel on slack right

1688
01:02:19,119 --> 01:02:22,319
yeah you can uh you can use that or any

1689
01:02:22,319 --> 01:02:24,640
other mechanism that you'd like

1690
01:02:24,640 --> 01:02:25,839
okay

1691
01:02:25,839 --> 01:02:28,799
thanks there's no other uh questions or

1692
01:02:28,799 --> 01:02:31,200
discussion um thanks for

1693
01:02:31,200 --> 01:02:32,960
for coming today

1694
01:02:32,960 --> 01:02:34,319
and look forward to seeing you on

1695
01:02:34,319 --> 01:02:37,880
saturday the 12th

1696
01:02:42,110 --> 01:02:46,429
[Music]

