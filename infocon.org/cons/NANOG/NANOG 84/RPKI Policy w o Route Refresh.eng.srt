1
00:00:00,000 --> 00:00:05,600
[Music]

2
00:00:05,600 --> 00:00:08,639
good morning afternoon evening this is a

3
00:00:08,639 --> 00:00:13,599
sad story about our pki policy

4
00:00:13,599 --> 00:00:16,720
in the wilds and on the net discovered

5
00:00:16,720 --> 00:00:19,760
by some of these folk

6
00:00:19,760 --> 00:00:21,520
due to

7
00:00:21,520 --> 00:00:23,840
messages from their knocks

8
00:00:23,840 --> 00:00:25,599
not the way you want to find out about

9
00:00:25,599 --> 00:00:26,800
things

10
00:00:26,800 --> 00:00:28,160
first

11
00:00:28,160 --> 00:00:29,199
let's

12
00:00:29,199 --> 00:00:30,800
discuss

13
00:00:30,800 --> 00:00:32,079
the problem

14
00:00:32,079 --> 00:00:34,079
are you running around origin validation

15
00:00:34,079 --> 00:00:36,160
and dropping in balance

16
00:00:36,160 --> 00:00:37,360
if so

17
00:00:37,360 --> 00:00:39,360
you don't know it but you are very

18
00:00:39,360 --> 00:00:43,120
likely to have some unhappy neighbors

19
00:00:43,120 --> 00:00:46,079
they may not know they're unhappy

20
00:00:46,079 --> 00:00:47,440
yet

21
00:00:47,440 --> 00:00:49,520
once they hear of this presentation they

22
00:00:49,520 --> 00:00:51,440
will know they're unhappy

23
00:00:51,440 --> 00:00:55,280
and then everybody will be unhappy

24
00:00:55,920 --> 00:00:58,800
let's start with an oversimplified story

25
00:00:58,800 --> 00:01:01,680
of bgp and this leaves out a massive

26
00:01:01,680 --> 00:01:05,119
amount bgp is far more complex than this

27
00:01:05,119 --> 00:01:06,479
there are people who making their

28
00:01:06,479 --> 00:01:08,560
careers in bgp

29
00:01:08,560 --> 00:01:09,760
so

30
00:01:09,760 --> 00:01:12,400
we don't want to see it all what's

31
00:01:12,400 --> 00:01:14,479
essential here is

32
00:01:14,479 --> 00:01:16,560
we tend to differentiate between the

33
00:01:16,560 --> 00:01:18,240
control plane

34
00:01:18,240 --> 00:01:21,520
where bgp isis and other routing

35
00:01:21,520 --> 00:01:23,840
protocols speak

36
00:01:23,840 --> 00:01:25,439
to each other

37
00:01:25,439 --> 00:01:27,600
and the data plane

38
00:01:27,600 --> 00:01:30,720
which is the decisions on forwarding

39
00:01:30,720 --> 00:01:33,200
using the fit the forward information

40
00:01:33,200 --> 00:01:34,400
database

41
00:01:34,400 --> 00:01:36,960
base which is populated

42
00:01:36,960 --> 00:01:38,880
by the best path

43
00:01:38,880 --> 00:01:41,840
from the routing decisions

44
00:01:41,840 --> 00:01:44,320
so the routing information comes in from

45
00:01:44,320 --> 00:01:46,880
one side

46
00:01:46,880 --> 00:01:52,079
the best path is chosen by policy

47
00:01:52,320 --> 00:01:55,360
it goes to the output and sent to the

48
00:01:55,360 --> 00:01:57,680
peers now the peers on the left and the

49
00:01:57,680 --> 00:02:00,000
right are really the same this is just a

50
00:02:00,000 --> 00:02:02,640
display convenience

51
00:02:02,640 --> 00:02:04,000
okay

52
00:02:04,000 --> 00:02:05,280
so

53
00:02:05,280 --> 00:02:06,240
it's

54
00:02:06,240 --> 00:02:10,560
the 1980s and ram and cpu

55
00:02:10,560 --> 00:02:12,319
are

56
00:02:12,319 --> 00:02:13,920
very small

57
00:02:13,920 --> 00:02:16,080
your watch has much more on it than

58
00:02:16,080 --> 00:02:17,680
those routers do

59
00:02:17,680 --> 00:02:20,720
cisco employee for the first engineer

60
00:02:20,720 --> 00:02:23,680
develops data structures and algorithms

61
00:02:23,680 --> 00:02:28,319
which get rid of the ad rib in and out

62
00:02:28,319 --> 00:02:31,200
which were large memory hogs

63
00:02:31,200 --> 00:02:33,680
and he trades them

64
00:02:33,680 --> 00:02:36,239
for some very subtle and clever internal

65
00:02:36,239 --> 00:02:37,920
data structures

66
00:02:37,920 --> 00:02:39,920
and traversals

67
00:02:39,920 --> 00:02:43,519
so let's pretend this is an adrian

68
00:02:43,519 --> 00:02:46,319
merged into the mechanism

69
00:02:46,319 --> 00:02:47,280
okay

70
00:02:47,280 --> 00:02:51,120
so policy runs against the merged data

71
00:02:51,120 --> 00:02:53,760
and produces the best span it produces

72
00:02:53,760 --> 00:02:56,400
an address out which goes to the peers

73
00:02:56,400 --> 00:02:59,120
and the same merging can be done for an

74
00:02:59,120 --> 00:03:00,800
ad or about

75
00:03:00,800 --> 00:03:03,280
if policy changes

76
00:03:03,280 --> 00:03:06,239
btp wants those best paths to rerun

77
00:03:06,239 --> 00:03:08,640
policy oops

78
00:03:08,640 --> 00:03:12,480
but those policy pads aren't there

79
00:03:12,480 --> 00:03:15,040
what to do

80
00:03:15,040 --> 00:03:17,280
anki ken

81
00:03:17,280 --> 00:03:18,800
says

82
00:03:18,800 --> 00:03:22,400
let's do something called route refresh

83
00:03:22,400 --> 00:03:26,000
which is a message sent to my peers

84
00:03:26,000 --> 00:03:27,120
that says

85
00:03:27,120 --> 00:03:31,440
please resend all the bb btp pads you

86
00:03:31,440 --> 00:03:32,879
sent me

87
00:03:32,879 --> 00:03:35,440
and i can re-run full policy against

88
00:03:35,440 --> 00:03:37,040
them

89
00:03:37,040 --> 00:03:39,200
and this gets around the problem of not

90
00:03:39,200 --> 00:03:41,840
having an ad ribbon

91
00:03:41,840 --> 00:03:44,879
and this is okay because policy changes

92
00:03:44,879 --> 00:03:46,799
very rarely

93
00:03:46,799 --> 00:03:48,159
like

94
00:03:48,159 --> 00:03:50,159
once a month

95
00:03:50,159 --> 00:03:52,319
once when the consultant drops in who

96
00:03:52,319 --> 00:03:53,680
knows

97
00:03:53,680 --> 00:03:55,680
so it looks like

98
00:03:55,680 --> 00:03:57,519
policy changes

99
00:03:57,519 --> 00:04:00,159
the route refresh request is sent to the

100
00:04:00,159 --> 00:04:01,280
peers

101
00:04:01,280 --> 00:04:04,480
and the peers send the data

102
00:04:04,480 --> 00:04:06,239
but

103
00:04:06,239 --> 00:04:08,799
looking a little more subtly

104
00:04:08,799 --> 00:04:13,040
if the ads rip out is merged

105
00:04:13,040 --> 00:04:15,519
the route refresh comes in from your

106
00:04:15,519 --> 00:04:18,639
peer who wants route refresh

107
00:04:18,639 --> 00:04:21,440
you have to traverse those internal data

108
00:04:21,440 --> 00:04:23,360
structures

109
00:04:23,360 --> 00:04:24,240
and

110
00:04:24,240 --> 00:04:25,919
produce the

111
00:04:25,919 --> 00:04:29,199
bgp paths again

112
00:04:29,199 --> 00:04:33,199
this can be expensive for the sender

113
00:04:33,199 --> 00:04:35,120
okay

114
00:04:35,120 --> 00:04:37,440
so

115
00:04:37,840 --> 00:04:40,639
this works with policy changes very

116
00:04:40,639 --> 00:04:43,199
rarely

117
00:04:43,199 --> 00:04:46,160
but rpki data

118
00:04:46,160 --> 00:04:49,600
for round origin validation

119
00:04:49,600 --> 00:04:52,639
are new policies

120
00:04:52,639 --> 00:04:55,040
they come in

121
00:04:55,040 --> 00:04:57,680
they want to reevaluate

122
00:04:57,680 --> 00:05:02,000
best path and push it to the fed

123
00:05:03,520 --> 00:05:05,520
the problem is they change very

124
00:05:05,520 --> 00:05:07,919
frequently

125
00:05:07,919 --> 00:05:11,280
on the order of minutes

126
00:05:11,280 --> 00:05:16,239
okay an hour at most according to spec

127
00:05:16,639 --> 00:05:19,039
and they must be done before the best

128
00:05:19,039 --> 00:05:22,400
passed in calculation

129
00:05:22,800 --> 00:05:23,600
so

130
00:05:23,600 --> 00:05:27,600
with merged ad rib in

131
00:05:27,600 --> 00:05:31,360
the rpa ki data comes in

132
00:05:31,360 --> 00:05:35,120
oops i need those pads the route refresh

133
00:05:35,120 --> 00:05:38,479
is issued the peers have to send all

134
00:05:38,479 --> 00:05:41,039
their paths all over again

135
00:05:41,039 --> 00:05:44,960
and this is very frequent

136
00:05:45,039 --> 00:05:46,160
okay

137
00:05:46,160 --> 00:05:49,120
if there are no data

138
00:05:49,120 --> 00:05:52,360
in adrian

139
00:05:52,960 --> 00:05:57,600
prefixes dropped by previous rpki policy

140
00:05:57,600 --> 00:05:58,880
i.e

141
00:05:58,880 --> 00:06:00,960
there were judged invalid by round

142
00:06:00,960 --> 00:06:02,960
origin validation

143
00:06:02,960 --> 00:06:04,720
they were dropped

144
00:06:04,720 --> 00:06:06,880
from the data structures

145
00:06:06,880 --> 00:06:09,520
so they're no longer available

146
00:06:09,520 --> 00:06:11,759
so for instance if the rpki data that

147
00:06:11,759 --> 00:06:12,800
came in

148
00:06:12,800 --> 00:06:15,840
made what was previously invalid valid

149
00:06:15,840 --> 00:06:18,720
you don't have that path

150
00:06:18,720 --> 00:06:21,840
so it has to issue a route refresh

151
00:06:21,840 --> 00:06:25,120
to all its peers

152
00:06:25,120 --> 00:06:28,800
and as i said our pki data come in quite

153
00:06:28,800 --> 00:06:31,520
frequently

154
00:06:31,759 --> 00:06:32,840
it's

155
00:06:32,840 --> 00:06:37,440
worse if you had the adrib in

156
00:06:37,440 --> 00:06:41,039
a new route origin authentication

157
00:06:41,039 --> 00:06:42,160
structure

158
00:06:42,160 --> 00:06:45,440
only affects a sub-tree

159
00:06:45,440 --> 00:06:47,199
of the paths

160
00:06:47,199 --> 00:06:48,800
an operation

161
00:06:48,800 --> 00:06:52,720
traversal which is cheap and small

162
00:06:52,720 --> 00:06:54,960
but if you issue a route refresh you're

163
00:06:54,960 --> 00:06:57,840
getting a full table

164
00:06:57,840 --> 00:07:00,840
and you must then re-evaluate the whole

165
00:07:00,840 --> 00:07:04,160
tree which is expensive

166
00:07:04,160 --> 00:07:07,199
and it has the side effect

167
00:07:07,199 --> 00:07:10,160
that processing causes head of line

168
00:07:10,160 --> 00:07:11,440
blocking

169
00:07:11,440 --> 00:07:14,800
for all best path calculation

170
00:07:14,800 --> 00:07:17,840
so new incremental normal updates coming

171
00:07:17,840 --> 00:07:19,520
in at the same time

172
00:07:19,520 --> 00:07:20,880
are sitting

173
00:07:20,880 --> 00:07:24,080
behind the head of line blocking

174
00:07:24,080 --> 00:07:27,758
and convergence goes to help

175
00:07:28,639 --> 00:07:33,680
john scutter points out a worse problem

176
00:07:33,680 --> 00:07:36,720
an import policy

177
00:07:36,720 --> 00:07:39,759
often changes only the relationship with

178
00:07:39,759 --> 00:07:42,080
a single peer

179
00:07:42,080 --> 00:07:43,680
and then

180
00:07:43,680 --> 00:07:46,479
you only route refresh towards that

181
00:07:46,479 --> 00:07:49,199
single period

182
00:07:49,199 --> 00:07:51,280
if a roller changes

183
00:07:51,280 --> 00:07:54,080
you don't know what piers of defense

184
00:07:54,080 --> 00:07:56,319
so you have to issue the route refresh

185
00:07:56,319 --> 00:07:59,840
towards all your peers

186
00:07:59,840 --> 00:08:03,198
this is a little ugly

187
00:08:03,280 --> 00:08:06,800
here's the result here's att

188
00:08:06,800 --> 00:08:09,440
telling ccom which is the

189
00:08:09,440 --> 00:08:10,840
cable

190
00:08:10,840 --> 00:08:13,360
provider going all the way from south

191
00:08:13,360 --> 00:08:15,759
africa up the east coast of africa

192
00:08:15,759 --> 00:08:17,840
through europe

193
00:08:17,840 --> 00:08:21,120
london marseille et cetera

194
00:08:21,120 --> 00:08:22,879
saying

195
00:08:22,879 --> 00:08:24,720
you are driving us crazy we're deep

196
00:08:24,720 --> 00:08:26,720
purity

197
00:08:26,720 --> 00:08:29,360
which is not really good for

198
00:08:29,360 --> 00:08:32,719
ccom or the internet

199
00:08:32,719 --> 00:08:34,880
it gets crazier

200
00:08:34,880 --> 00:08:37,839
think of an exchange point

201
00:08:37,839 --> 00:08:41,360
with all its members doing route origin

202
00:08:41,360 --> 00:08:43,360
validation

203
00:08:43,360 --> 00:08:45,680
and issuing route refresh to the route

204
00:08:45,680 --> 00:08:48,959
servers every few minutes

205
00:08:49,600 --> 00:08:51,839
or conversely

206
00:08:51,839 --> 00:08:55,040
the ixp route servers

207
00:08:55,040 --> 00:08:56,640
getting lots of

208
00:08:56,640 --> 00:08:58,080
new rows

209
00:08:58,080 --> 00:09:00,320
and issuing route refresh to hundreds of

210
00:09:00,320 --> 00:09:01,760
peers

211
00:09:01,760 --> 00:09:06,000
every time they get new rpki data

212
00:09:06,160 --> 00:09:09,200
so this is a real mess

213
00:09:09,200 --> 00:09:11,279
are there solutions

214
00:09:11,279 --> 00:09:13,360
the real solutions keep a philanthropy

215
00:09:13,360 --> 00:09:15,360
in an answer about

216
00:09:15,360 --> 00:09:17,839
and some vendors do this by default

217
00:09:17,839 --> 00:09:19,920
many do not

218
00:09:19,920 --> 00:09:21,040
or

219
00:09:21,040 --> 00:09:23,279
it gets worse but let's look into vendor

220
00:09:23,279 --> 00:09:25,680
details

221
00:09:25,680 --> 00:09:27,120
you probably can't do it on old's

222
00:09:27,120 --> 00:09:28,320
hardware

223
00:09:28,320 --> 00:09:30,800
on modern hardware there's no excuse not

224
00:09:30,800 --> 00:09:33,600
to keep the adrenaline madrid out you've

225
00:09:33,600 --> 00:09:34,880
got ram

226
00:09:34,880 --> 00:09:36,720
shut up

227
00:09:36,720 --> 00:09:41,200
we have a hack that we'd like to suggest

228
00:09:41,519 --> 00:09:44,399
if you can't keep that drive in

229
00:09:44,399 --> 00:09:48,000
when you drop it in valley

230
00:09:48,000 --> 00:09:51,680
keep that path and only that path

231
00:09:51,680 --> 00:09:54,160
but mark it in some way let's call that

232
00:09:54,160 --> 00:09:57,440
a minimal ad rib drop

233
00:09:57,440 --> 00:09:59,839
it's very small it's only the dropped

234
00:09:59,839 --> 00:10:02,320
pads

235
00:10:02,399 --> 00:10:05,120
well it's very small unless

236
00:10:05,120 --> 00:10:07,920
vinnie does another 7007

237
00:10:07,920 --> 00:10:13,040
or unit unit labs does another 128-9

238
00:10:13,040 --> 00:10:16,079
as those generate a massive number of

239
00:10:16,079 --> 00:10:17,600
invalid

240
00:10:17,600 --> 00:10:18,720
origins

241
00:10:18,720 --> 00:10:22,720
and therefore the addrein explodes

242
00:10:22,720 --> 00:10:24,800
it's a hack you can do that at least

243
00:10:24,800 --> 00:10:27,519
lets you do

244
00:10:27,519 --> 00:10:29,519
origin validation

245
00:10:29,519 --> 00:10:33,200
the third solution don't run rpki on any

246
00:10:33,200 --> 00:10:37,200
router which can't do the first thing

247
00:10:37,200 --> 00:10:38,560
yup

248
00:10:38,560 --> 00:10:40,959
turn off route origin validation

249
00:10:40,959 --> 00:10:44,079
dropping in balance if you can't

250
00:10:44,079 --> 00:10:47,640
have an address

251
00:10:47,680 --> 00:10:50,720
this is not happiness

252
00:10:50,720 --> 00:10:52,800
after these years of trying to

253
00:10:52,800 --> 00:10:55,600
promulgate this with the rpk origin

254
00:10:55,600 --> 00:10:58,320
validation now popular and now we have

255
00:10:58,320 --> 00:11:01,360
to back off how do you know if you have

256
00:11:01,360 --> 00:11:03,200
the problem

257
00:11:03,200 --> 00:11:04,160
well

258
00:11:04,160 --> 00:11:05,920
different vendors

259
00:11:05,920 --> 00:11:08,000
will let you see whether you're issuing

260
00:11:08,000 --> 00:11:09,680
a route refresh

261
00:11:09,680 --> 00:11:13,040
and when or they may not

262
00:11:13,040 --> 00:11:15,600
nk didn't give us a rib a mere

263
00:11:15,600 --> 00:11:17,600
department

264
00:11:17,600 --> 00:11:21,519
okay so you can't use snmp

265
00:11:21,519 --> 00:11:25,120
most vendors have cli and yang requests

266
00:11:25,120 --> 00:11:26,839
to get route refresh

267
00:11:26,839 --> 00:11:30,079
counts why did we have to find out from

268
00:11:30,079 --> 00:11:31,519
our knox

269
00:11:31,519 --> 00:11:34,720
why didn't we know this wasn't happening

270
00:11:34,720 --> 00:11:36,640
because we don't measure our networks

271
00:11:36,640 --> 00:11:37,600
well

272
00:11:37,600 --> 00:11:39,839
you need to make friends with some

273
00:11:39,839 --> 00:11:42,560
routing researchers so you measure your

274
00:11:42,560 --> 00:11:43,760
network

275
00:11:43,760 --> 00:11:46,880
you don't like these kinds of surprises

276
00:11:46,880 --> 00:11:49,760
and that's it

277
00:11:53,920 --> 00:11:55,120
tony

278
00:11:55,120 --> 00:11:57,760
just asked a question online yeah

279
00:11:57,760 --> 00:11:59,519
two is deficient

280
00:11:59,519 --> 00:12:01,680
and there's and we've got an internet

281
00:12:01,680 --> 00:12:03,279
draft out on

282
00:12:03,279 --> 00:12:06,240
the only problem is if a flood of

283
00:12:06,240 --> 00:12:09,680
invalid comes then that uh

284
00:12:09,680 --> 00:12:13,279
adrib suppressed will explode

285
00:12:13,279 --> 00:12:15,360
so the audience can hear the question

286
00:12:15,360 --> 00:12:17,839
your solution number two is sufficient

287
00:12:17,839 --> 00:12:20,079
and there shouldn't be an increase in

288
00:12:20,079 --> 00:12:22,800
memory if the roa changes

289
00:12:22,800 --> 00:12:27,040
as there are no new prefixes

290
00:12:27,279 --> 00:12:28,959
the next question comes from jonathan

291
00:12:28,959 --> 00:12:31,440
stewart how can i tell if my

292
00:12:31,440 --> 00:12:33,839
ebgp router is doing

293
00:12:33,839 --> 00:12:36,839
route refresh or keeping

294
00:12:36,839 --> 00:12:40,560
full adjacent ribs

295
00:12:40,560 --> 00:12:42,480
um

296
00:12:42,480 --> 00:12:44,639
i don't want to mention vendor names but

297
00:12:44,639 --> 00:12:47,120
there's a significant vendor by default

298
00:12:47,120 --> 00:12:50,000
does not keep android in or out

299
00:12:50,000 --> 00:12:53,519
um you would see soft

300
00:12:53,519 --> 00:12:55,760
refresh

301
00:12:55,760 --> 00:12:56,720
um

302
00:12:56,720 --> 00:12:59,440
is their verb i believe that's love

303
00:12:59,440 --> 00:13:02,079
memory um there's another significant

304
00:13:02,079 --> 00:13:04,800
vendor who does keep them because they

305
00:13:04,800 --> 00:13:08,000
were born when there was more ram

306
00:13:08,000 --> 00:13:09,839
um

307
00:13:09,839 --> 00:13:11,839
you can tell

308
00:13:11,839 --> 00:13:13,680
by

309
00:13:13,680 --> 00:13:16,320
going to the docks or asking online i

310
00:13:16,320 --> 00:13:17,600
guess

311
00:13:17,600 --> 00:13:20,600
um

312
00:13:20,959 --> 00:13:23,040
no love

313
00:13:23,040 --> 00:13:25,519
without refresh as i said there's no mid

314
00:13:25,519 --> 00:13:27,120
rib for it so

315
00:13:27,120 --> 00:13:28,880
look for a cli

316
00:13:28,880 --> 00:13:31,839
query or um

317
00:13:31,839 --> 00:13:35,560
a yang query

318
00:13:35,600 --> 00:13:36,800
okay

319
00:13:36,800 --> 00:13:39,680
any more questions from the audience or

320
00:13:39,680 --> 00:13:42,319
online

321
00:13:43,920 --> 00:13:46,480
going once

322
00:13:46,480 --> 00:13:48,079
please

323
00:13:48,079 --> 00:13:50,079
all right well i'd like to thank you

324
00:13:50,079 --> 00:13:52,240
randy for your presentation

325
00:13:52,240 --> 00:13:53,680
and if we get a round of applause for

326
00:13:53,680 --> 00:13:57,079
him that'd be great

327
00:13:58,280 --> 00:14:02,010
[Music]

