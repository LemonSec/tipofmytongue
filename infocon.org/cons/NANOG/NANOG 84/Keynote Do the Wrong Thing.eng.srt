1
00:00:00,000 --> 00:00:04,560
[Music]

2
00:00:04,560 --> 00:00:07,440
so at this time i would like to welcome

3
00:00:07,440 --> 00:00:08,720
to the stage

4
00:00:08,720 --> 00:00:10,800
radio pearlman um she's gonna be

5
00:00:10,800 --> 00:00:13,040
delivering our keynote do the wrong

6
00:00:13,040 --> 00:00:14,080
thing

7
00:00:14,080 --> 00:00:14,920
welcome

8
00:00:14,920 --> 00:00:17,490
radia as she walks it

9
00:00:17,490 --> 00:00:21,200
[Applause]

10
00:00:22,960 --> 00:00:25,199
sass radio joins me uh radia pearlman is

11
00:00:25,199 --> 00:00:27,599
a fellow at dell emc

12
00:00:27,599 --> 00:00:29,760
she is known for inventing fundamental

13
00:00:29,760 --> 00:00:31,920
technology enabling robust

14
00:00:31,920 --> 00:00:34,239
largely self-managing and scalable link

15
00:00:34,239 --> 00:00:36,480
state routing used in the specific

16
00:00:36,480 --> 00:00:38,879
protocol she designed isis and similar

17
00:00:38,879 --> 00:00:40,800
protocols ospf

18
00:00:40,800 --> 00:00:42,480
she also invented the spanning tree

19
00:00:42,480 --> 00:00:44,239
algorithm which transformed ethernet

20
00:00:44,239 --> 00:00:46,399
from a technology that supported a few

21
00:00:46,399 --> 00:00:48,719
hundred nodes within a single building

22
00:00:48,719 --> 00:00:50,160
to something that could support large

23
00:00:50,160 --> 00:00:52,640
networks radia has made contributions in

24
00:00:52,640 --> 00:00:54,879
network security including scalable data

25
00:00:54,879 --> 00:00:57,280
exploration distributed algorithms

26
00:00:57,280 --> 00:00:59,520
despite malicious participants and ddos

27
00:00:59,520 --> 00:01:01,039
prevention techniques

28
00:01:01,039 --> 00:01:02,640
she is the author of the textbook

29
00:01:02,640 --> 00:01:04,400
interconnections about network layers

30
00:01:04,400 --> 00:01:06,640
two and three and co-author of network

31
00:01:06,640 --> 00:01:08,000
security

32
00:01:08,000 --> 00:01:09,520
radio has been recognized with many

33
00:01:09,520 --> 00:01:11,280
industry honors including induction into

34
00:01:11,280 --> 00:01:13,680
the national academy of engineering the

35
00:01:13,680 --> 00:01:16,080
inventor hall of fame the internet hall

36
00:01:16,080 --> 00:01:17,040
of fame

37
00:01:17,040 --> 00:01:19,360
washington state academy of science and

38
00:01:19,360 --> 00:01:21,759
lifetime achievement awards from eusynix

39
00:01:21,759 --> 00:01:24,320
and sidcom she has a phd in computer

40
00:01:24,320 --> 00:01:26,880
science from mid mit

41
00:01:26,880 --> 00:01:28,240
welcome radio we are very excited to

42
00:01:28,240 --> 00:01:31,360
have you speaking with us today

43
00:01:35,520 --> 00:01:37,759
so as it turns out i

44
00:01:37,759 --> 00:01:39,119
um

45
00:01:39,119 --> 00:01:41,280
yeah i thought that i would have less

46
00:01:41,280 --> 00:01:43,360
time than i do so i have an extra slide

47
00:01:43,360 --> 00:01:44,960
with a whole bunch of random things i

48
00:01:44,960 --> 00:01:47,360
could rant about it if there will be

49
00:01:47,360 --> 00:01:49,600
time and there probably will be and it's

50
00:01:49,600 --> 00:01:53,360
great to hang out with you guys because

51
00:01:53,360 --> 00:01:56,799
i'm not hands on so i actually learn a

52
00:01:56,799 --> 00:01:58,640
lot from um

53
00:01:58,640 --> 00:02:00,000
yeah it's

54
00:02:00,000 --> 00:02:03,280
it's good to share ideas anyway so i'm

55
00:02:03,280 --> 00:02:06,000
going to be talking a lot about history

56
00:02:06,000 --> 00:02:08,160
in order to sort of frame things in a

57
00:02:08,160 --> 00:02:09,758
different way than you may have been

58
00:02:09,758 --> 00:02:12,319
thinking about um i'll talk about two

59
00:02:12,319 --> 00:02:14,200
decisions that i thought were

60
00:02:14,200 --> 00:02:16,319
disastrously bad

61
00:02:16,319 --> 00:02:19,200
one was assuming that ethernet was a

62
00:02:19,200 --> 00:02:21,680
network instead of a link in a network

63
00:02:21,680 --> 00:02:24,959
and not adopting clnp whatever that is

64
00:02:24,959 --> 00:02:27,920
i'll tell you in 1992.

65
00:02:27,920 --> 00:02:30,640
um and then surprisingly good things

66
00:02:30,640 --> 00:02:32,720
that i believe would not have been

67
00:02:32,720 --> 00:02:35,040
invented had we not made the wrong

68
00:02:35,040 --> 00:02:36,959
decisions back then

69
00:02:36,959 --> 00:02:40,239
so understanding network protocols um i

70
00:02:40,239 --> 00:02:42,319
just can't imagine what it's like to

71
00:02:42,319 --> 00:02:45,280
jump right in and um like some of these

72
00:02:45,280 --> 00:02:47,599
courses about things it's like well this

73
00:02:47,599 --> 00:02:50,400
is how you configure this obscure

74
00:02:50,400 --> 00:02:51,920
thing

75
00:02:51,920 --> 00:02:52,800
there's

76
00:02:52,800 --> 00:02:54,959
nobody would have designed what we have

77
00:02:54,959 --> 00:02:57,440
today so if you actually believe that it

78
00:02:57,440 --> 00:02:59,120
makes sense you'll just sort of drive

79
00:02:59,120 --> 00:03:01,200
yourself crazy

80
00:03:01,200 --> 00:03:02,239
so

81
00:03:02,239 --> 00:03:03,760
you have to

82
00:03:03,760 --> 00:03:05,840
kind of understand the history in order

83
00:03:05,840 --> 00:03:08,879
to understand how we how we got there

84
00:03:08,879 --> 00:03:10,560
so um

85
00:03:10,560 --> 00:03:13,360
how networking tends to be taught is as

86
00:03:13,360 --> 00:03:14,120
if

87
00:03:14,120 --> 00:03:17,840
tcpip arrived on tablets from the sky

88
00:03:17,840 --> 00:03:20,239
and it's awesome perfection you know

89
00:03:20,239 --> 00:03:21,280
there's

90
00:03:21,280 --> 00:03:24,959
nothing else could have existed

91
00:03:24,959 --> 00:03:27,120
you know there was no way to have made

92
00:03:27,120 --> 00:03:28,879
it better

93
00:03:28,879 --> 00:03:30,959
and the way you teach it is you have

94
00:03:30,959 --> 00:03:33,599
your students memorize the details of

95
00:03:33,599 --> 00:03:36,239
the current standards so that they can

96
00:03:36,239 --> 00:03:38,959
graduate and immediately be able to

97
00:03:38,959 --> 00:03:41,360
manage you know cisco routers or

98
00:03:41,360 --> 00:03:43,760
whatever

99
00:03:44,319 --> 00:03:46,480
and if you ever talk about any

100
00:03:46,480 --> 00:03:50,000
alternative technology it's always to

101
00:03:50,000 --> 00:03:53,280
just sneer at it about what idiots those

102
00:03:53,280 --> 00:03:54,560
people were

103
00:03:54,560 --> 00:03:55,519
so

104
00:03:55,519 --> 00:03:56,560
um

105
00:03:56,560 --> 00:03:59,200
things are always so confusing to me and

106
00:03:59,200 --> 00:04:01,519
whenever there's two similar things like

107
00:04:01,519 --> 00:04:04,080
ethernet and infiniband i get very

108
00:04:04,080 --> 00:04:06,239
curious it's like what are the intrinsic

109
00:04:06,239 --> 00:04:08,720
differences between these things

110
00:04:08,720 --> 00:04:10,560
and nobody does that

111
00:04:10,560 --> 00:04:12,000
um

112
00:04:12,000 --> 00:04:14,239
so you either have experts in a or

113
00:04:14,239 --> 00:04:16,000
experts in b

114
00:04:16,000 --> 00:04:19,918
and um so people hand me the two specs

115
00:04:19,918 --> 00:04:22,400
and they're two huge specs with their

116
00:04:22,400 --> 00:04:24,720
own jargon for no good reason

117
00:04:24,720 --> 00:04:26,880
and if i'm sort of having a headache

118
00:04:26,880 --> 00:04:29,360
reading these specs and i ask an expert

119
00:04:29,360 --> 00:04:32,160
in a how does it compare with b they'll

120
00:04:32,160 --> 00:04:33,280
say oh

121
00:04:33,280 --> 00:04:35,520
a is awesome and b sucks

122
00:04:35,520 --> 00:04:37,360
and you ask a b person you get the

123
00:04:37,360 --> 00:04:39,919
opposite answer but then if it turns out

124
00:04:39,919 --> 00:04:42,639
that as the industry is sort of debating

125
00:04:42,639 --> 00:04:45,440
uh these things that b has some features

126
00:04:45,440 --> 00:04:48,560
that a doesn't have no problem the a

127
00:04:48,560 --> 00:04:50,720
people steal the ideas

128
00:04:50,720 --> 00:04:51,600
and

129
00:04:51,600 --> 00:04:53,919
put it into their spec and it turns out

130
00:04:53,919 --> 00:04:56,320
nobody really cares about the details of

131
00:04:56,320 --> 00:04:58,320
their spec

132
00:04:58,320 --> 00:05:00,720
they just want credit for it so they're

133
00:05:00,720 --> 00:05:02,880
willing to take the other technology

134
00:05:02,880 --> 00:05:05,600
completely as long as it's claimed to be

135
00:05:05,600 --> 00:05:08,160
their thing

136
00:05:08,479 --> 00:05:11,199
standards bodies it's sort of natural to

137
00:05:11,199 --> 00:05:13,400
think of them as sort of

138
00:05:13,400 --> 00:05:15,759
well-educated technologists that are

139
00:05:15,759 --> 00:05:17,520
carefully weighing engineering

140
00:05:17,520 --> 00:05:20,080
trade-offs but a much more accurate way

141
00:05:20,080 --> 00:05:22,639
to think of them is as drunken sports

142
00:05:22,639 --> 00:05:25,840
fans you know

143
00:05:26,800 --> 00:05:29,039
i'm getting a feel for the audience here

144
00:05:29,039 --> 00:05:31,120
what i can get away with

145
00:05:31,120 --> 00:05:35,039
apparently i can get away with a lot

146
00:05:35,680 --> 00:05:36,560
so

147
00:05:36,560 --> 00:05:38,400
in order for me to sort of explain this

148
00:05:38,400 --> 00:05:40,639
stuff we have to review network layers

149
00:05:40,639 --> 00:05:43,520
so iso um happens to be a different

150
00:05:43,520 --> 00:05:46,240
sports team was credited with naming the

151
00:05:46,240 --> 00:05:48,960
layers and it's just a way of thinking

152
00:05:48,960 --> 00:05:52,479
about layers it's not like um

153
00:05:52,479 --> 00:05:53,759
you know you don't have to take it

154
00:05:53,759 --> 00:05:57,360
seriously in any sense so um this is

155
00:05:57,360 --> 00:06:00,400
kind of the way that i um

156
00:06:00,400 --> 00:06:02,400
i mean i call it pearlman's layers and

157
00:06:02,400 --> 00:06:05,360
you'll understand in a

158
00:06:05,360 --> 00:06:05,759
so minute

159
00:06:05,759 --> 00:06:07,680
bottom layer is the physical layer it's

160
00:06:07,680 --> 00:06:09,600
how i signal a bit

161
00:06:09,600 --> 00:06:12,400
um from me to somebody else who's on the

162
00:06:12,400 --> 00:06:15,039
same wire you know what does the cable

163
00:06:15,039 --> 00:06:17,039
look like and so forth

164
00:06:17,039 --> 00:06:20,080
layer two is how do you talk to somebody

165
00:06:20,080 --> 00:06:22,800
who's on the same wire as you are given

166
00:06:22,800 --> 00:06:24,960
that layer one lets you signal bits so

167
00:06:24,960 --> 00:06:27,280
it's like in the stream of bits how do i

168
00:06:27,280 --> 00:06:29,280
signal this is the beginning of a packet

169
00:06:29,280 --> 00:06:31,600
this is the end of a packet this is a

170
00:06:31,600 --> 00:06:32,880
checksum

171
00:06:32,880 --> 00:06:34,800
layer three is the thing that forwards

172
00:06:34,800 --> 00:06:37,440
from link to link to link

173
00:06:37,440 --> 00:06:40,080
and um because of that things can get

174
00:06:40,080 --> 00:06:43,199
out of order and so forth or lost so

175
00:06:43,199 --> 00:06:45,440
layer four is the thing that the source

176
00:06:45,440 --> 00:06:47,919
and destination number the things and

177
00:06:47,919 --> 00:06:49,680
put them back in order ask for

178
00:06:49,680 --> 00:06:52,319
acknowledgements and so forth and layers

179
00:06:52,319 --> 00:06:54,540
five and above are boring

180
00:06:54,540 --> 00:07:01,199
[Laughter]

181
00:07:01,199 --> 00:07:02,479
so

182
00:07:02,479 --> 00:07:06,240
ethernet and ip so ethernet is layer 2

183
00:07:06,240 --> 00:07:09,919
right and ip is layer 3.

184
00:07:09,919 --> 00:07:12,560
well if ethernet is layer 2

185
00:07:12,560 --> 00:07:15,680
why are we forwarding ethernet packets

186
00:07:15,680 --> 00:07:16,560
well

187
00:07:16,560 --> 00:07:19,039
oh but it's a switch that's forwarding

188
00:07:19,039 --> 00:07:23,360
it so that's different somehow

189
00:07:23,360 --> 00:07:26,160
so it's not really forwarding

190
00:07:26,160 --> 00:07:28,880
well as it turns out a switch a bridge a

191
00:07:28,880 --> 00:07:30,479
router whatever you want to call this

192
00:07:30,479 --> 00:07:33,039
box receives a packet looks at the

193
00:07:33,039 --> 00:07:35,840
header sees what the destination is has

194
00:07:35,840 --> 00:07:38,479
somehow acquired a forwarding table that

195
00:07:38,479 --> 00:07:41,120
says for each destination which port to

196
00:07:41,120 --> 00:07:42,319
send it out

197
00:07:42,319 --> 00:07:45,280
so there's no difference there

198
00:07:45,280 --> 00:07:48,720
so um how did we get to be forwarding

199
00:07:48,720 --> 00:07:50,879
ethernet packets

200
00:07:50,879 --> 00:07:53,919
so the original ethernet was a way for

201
00:07:53,919 --> 00:07:55,680
oh everyone knows that ethernet is

202
00:07:55,680 --> 00:07:59,199
wildly successful and no it's not it

203
00:07:59,199 --> 00:08:01,919
died many many years ago

204
00:08:01,919 --> 00:08:04,639
what ethernet is is um

205
00:08:04,639 --> 00:08:07,199
or the original invention was a way for

206
00:08:07,199 --> 00:08:10,400
a few hundred nodes to

207
00:08:10,400 --> 00:08:13,199
share the same wire and if two of them

208
00:08:13,199 --> 00:08:15,759
talk at the same time they'll interfere

209
00:08:15,759 --> 00:08:17,919
with each other so it's how do you

210
00:08:17,919 --> 00:08:21,039
manage without one main guy that calls

211
00:08:21,039 --> 00:08:22,479
on everybody else and gives them

212
00:08:22,479 --> 00:08:24,639
permission to talk how do you manage to

213
00:08:24,639 --> 00:08:27,280
do it and the protocol was called csma

214
00:08:27,280 --> 00:08:31,199
cd cs is carrier sense means be polite

215
00:08:31,199 --> 00:08:32,958
and listen and if someone else is

216
00:08:32,958 --> 00:08:35,519
talking don't talk multiple access just

217
00:08:35,519 --> 00:08:37,279
means there's lots of nodes and

218
00:08:37,279 --> 00:08:40,799
collision detect means um even while

219
00:08:40,799 --> 00:08:42,799
you're talking you listen to see if

220
00:08:42,799 --> 00:08:44,560
somebody else might talk at the same

221
00:08:44,560 --> 00:08:46,880
time in which case you both stop and you

222
00:08:46,880 --> 00:08:48,959
start again a random time later there

223
00:08:48,959 --> 00:08:51,519
were zillions of papers about

224
00:08:51,519 --> 00:08:53,839
minor modifications to this but

225
00:08:53,839 --> 00:08:55,680
basically you know if

226
00:08:55,680 --> 00:08:57,839
you try to load it with too much traffic

227
00:08:57,839 --> 00:08:59,519
there'll be so much collisions that

228
00:08:59,519 --> 00:09:00,480
you'll get

229
00:09:00,480 --> 00:09:03,200
less and less useful traffic through

230
00:09:03,200 --> 00:09:06,959
so i was at that point innocently doing

231
00:09:06,959 --> 00:09:08,880
layer 3

232
00:09:08,880 --> 00:09:12,399
at digital and my routing protocol

233
00:09:12,399 --> 00:09:16,560
unfortunately got named isis

234
00:09:16,560 --> 00:09:18,880
so a few years ago

235
00:09:18,880 --> 00:09:21,040
apparently trump said that hillary and

236
00:09:21,040 --> 00:09:24,000
obama invented isis and a bunch of my

237
00:09:24,000 --> 00:09:26,080
friends noticed this and forwarded it to

238
00:09:26,080 --> 00:09:27,920
me and said shouldn't you get some

239
00:09:27,920 --> 00:09:30,240
credit

240
00:09:32,000 --> 00:09:35,120
but at any rate um so

241
00:09:35,120 --> 00:09:37,360
the kind of protocol i was doing i call

242
00:09:37,360 --> 00:09:39,760
it a link state protocol uh here's a

243
00:09:39,760 --> 00:09:41,920
picture of a network there's like seven

244
00:09:41,920 --> 00:09:44,959
nodes the a line between a and b means

245
00:09:44,959 --> 00:09:46,640
they're neighbors and the cost of the

246
00:09:46,640 --> 00:09:49,279
link is six

247
00:09:49,279 --> 00:09:52,160
each one of the nodes creates what i

248
00:09:52,160 --> 00:09:54,720
call a link state packet which is talks

249
00:09:54,720 --> 00:09:57,519
about the state of your links so in this

250
00:09:57,519 --> 00:10:00,720
case that link state packet says i am c

251
00:10:00,720 --> 00:10:03,200
i have a neighbor b at a cost of 2 f at

252
00:10:03,200 --> 00:10:05,760
a cost of two and g at a cost of five

253
00:10:05,760 --> 00:10:07,839
and if you look at c there you'll see it

254
00:10:07,839 --> 00:10:09,519
has three neighbors

255
00:10:09,519 --> 00:10:10,880
and um

256
00:10:10,880 --> 00:10:13,200
that link state packet gets distributed

257
00:10:13,200 --> 00:10:15,600
to all the other nodes and so everyone

258
00:10:15,600 --> 00:10:18,000
has the same database which is the most

259
00:10:18,000 --> 00:10:20,079
recently generated link state packet

260
00:10:20,079 --> 00:10:22,320
from everybody else this gives you all

261
00:10:22,320 --> 00:10:24,320
the information you need to draw a

262
00:10:24,320 --> 00:10:26,399
picture of the network or calculate

263
00:10:26,399 --> 00:10:27,600
paths

264
00:10:27,600 --> 00:10:29,760
so

265
00:10:30,320 --> 00:10:32,720
then with great fanfare

266
00:10:32,720 --> 00:10:34,399
ethernet arrived

267
00:10:34,399 --> 00:10:38,320
and so um everybody was so excited this

268
00:10:38,320 --> 00:10:41,440
is the new way of doing networking

269
00:10:41,440 --> 00:10:44,000
and i looked at it and i said whoops

270
00:10:44,000 --> 00:10:46,160
this link has different properties than

271
00:10:46,160 --> 00:10:50,240
i was expecting so i modified isis a

272
00:10:50,240 --> 00:10:51,600
little bit

273
00:10:51,600 --> 00:10:53,519
to accommodate this type of link and in

274
00:10:53,519 --> 00:10:56,399
particular um

275
00:10:56,399 --> 00:10:59,200
the database associated with the link

276
00:10:59,200 --> 00:11:00,800
state protocol

277
00:11:00,800 --> 00:11:02,800
is proportional to the number of links

278
00:11:02,800 --> 00:11:05,600
in the network so if you had an ethernet

279
00:11:05,600 --> 00:11:09,360
with 500 nodes and everyone reported 499

280
00:11:09,360 --> 00:11:11,680
neighbors that would be a lot of the

281
00:11:11,680 --> 00:11:14,160
database would be big so i just did a

282
00:11:14,160 --> 00:11:16,720
little thing like i said oh instead of

283
00:11:16,720 --> 00:11:20,079
i'm considering an ethernet as n squared

284
00:11:20,079 --> 00:11:23,440
links instead create a fictitious link

285
00:11:23,440 --> 00:11:26,160
which is the ethernet itself everyone

286
00:11:26,160 --> 00:11:27,360
just

287
00:11:27,360 --> 00:11:29,200
reports that they're connected to that

288
00:11:29,200 --> 00:11:31,920
so you'll have n plus one nodes and n

289
00:11:31,920 --> 00:11:34,880
lengths rather than n squared links but

290
00:11:34,880 --> 00:11:36,720
you know i didn't think that was a big

291
00:11:36,720 --> 00:11:37,760
deal

292
00:11:37,760 --> 00:11:38,640
but

293
00:11:38,640 --> 00:11:40,959
unfortunately the world you know because

294
00:11:40,959 --> 00:11:43,360
they didn't call it ether link they

295
00:11:43,360 --> 00:11:46,000
called it ethernet people were building

296
00:11:46,000 --> 00:11:48,399
applications that worked directly on

297
00:11:48,399 --> 00:11:50,399
ethernet so in their network stack they

298
00:11:50,399 --> 00:11:52,240
didn't have layer 3.

299
00:11:52,240 --> 00:11:55,440
so i tried to argue with them and i said

300
00:11:55,440 --> 00:11:57,760
no no you still need layer three and

301
00:11:57,760 --> 00:12:00,399
they said oh radia you're just upset

302
00:12:00,399 --> 00:12:03,120
because no one needs your stuff anymore

303
00:12:03,120 --> 00:12:05,279
and i said oh but you may want to talk

304
00:12:05,279 --> 00:12:07,519
from one ethernet to another and they

305
00:12:07,519 --> 00:12:10,000
said our customers would never want to

306
00:12:10,000 --> 00:12:10,820
do that

307
00:12:10,820 --> 00:12:13,279
[Laughter]

308
00:12:13,279 --> 00:12:14,320
so

309
00:12:14,320 --> 00:12:16,480
um

310
00:12:16,480 --> 00:12:18,560
yeah

311
00:12:18,560 --> 00:12:21,279
a router can't forward unless the

312
00:12:21,279 --> 00:12:23,360
endnotes cooperate and put the right

313
00:12:23,360 --> 00:12:25,680
envelope on their packets

314
00:12:25,680 --> 00:12:27,120
so

315
00:12:27,120 --> 00:12:28,560
at any rate

316
00:12:28,560 --> 00:12:31,040
the people who were doing this made lots

317
00:12:31,040 --> 00:12:33,279
of money for the com company because

318
00:12:33,279 --> 00:12:35,360
their applications were good

319
00:12:35,360 --> 00:12:37,200
they would have made just as much money

320
00:12:37,200 --> 00:12:38,720
and their applications would have been

321
00:12:38,720 --> 00:12:41,040
just as good better even had they done

322
00:12:41,040 --> 00:12:43,200
it correctly which was on top of layer

323
00:12:43,200 --> 00:12:45,279
three but it's hard to explain that to

324
00:12:45,279 --> 00:12:46,560
management

325
00:12:46,560 --> 00:12:48,160
so um

326
00:12:48,160 --> 00:12:50,880
i was um you know kind of in a bad mood

327
00:12:50,880 --> 00:12:52,399
about the whole thing

328
00:12:52,399 --> 00:12:54,800
when my manager came to me one day and

329
00:12:54,800 --> 00:12:55,680
said

330
00:12:55,680 --> 00:12:58,639
radia we need to design a magic box that

331
00:12:58,639 --> 00:13:00,720
will sit between two ethernets and let

332
00:13:00,720 --> 00:13:02,800
somebody on one talk to somebody on the

333
00:13:02,800 --> 00:13:05,040
other which is what my entire career had

334
00:13:05,040 --> 00:13:06,639
been about

335
00:13:06,639 --> 00:13:10,000
but the constraint was without modifying

336
00:13:10,000 --> 00:13:12,240
the endnotes so we've deployed all these

337
00:13:12,240 --> 00:13:13,600
endnotes that just think they're

338
00:13:13,600 --> 00:13:16,880
speaking on a single csmacd link

339
00:13:16,880 --> 00:13:19,440
and there was no spare fields in the

340
00:13:19,440 --> 00:13:21,920
ethernet header and there was a hard

341
00:13:21,920 --> 00:13:23,600
size limit

342
00:13:23,600 --> 00:13:25,839
so

343
00:13:26,399 --> 00:13:28,800
basically they had the basic idea at

344
00:13:28,800 --> 00:13:30,800
that point which was just to build this

345
00:13:30,800 --> 00:13:33,600
box that listens promiscuously meaning

346
00:13:33,600 --> 00:13:36,240
listens to every single packet stores it

347
00:13:36,240 --> 00:13:39,040
up and when the ether is free on some

348
00:13:39,040 --> 00:13:41,360
other port or it gets the token if it

349
00:13:41,360 --> 00:13:43,440
were a token ring it

350
00:13:43,440 --> 00:13:46,079
it forwards the packet

351
00:13:46,079 --> 00:13:48,560
and you know when extra optimization is

352
00:13:48,560 --> 00:13:50,880
learning based on the source address so

353
00:13:50,880 --> 00:13:53,279
in this case the box has learned because

354
00:13:53,279 --> 00:13:55,760
a has transmitted a packet so it looks

355
00:13:55,760 --> 00:13:57,600
at the source address and the port and

356
00:13:57,600 --> 00:14:00,720
it says ah a is on that port and so then

357
00:14:00,720 --> 00:14:04,000
if j were to transmit a packet for a it

358
00:14:04,000 --> 00:14:07,040
would say oh um a is has already gotten

359
00:14:07,040 --> 00:14:09,120
it i don't need to forward it whereas if

360
00:14:09,120 --> 00:14:11,920
a were to transmit a packet for j

361
00:14:11,920 --> 00:14:13,279
then um

362
00:14:13,279 --> 00:14:16,000
it would it has no idea where j is so it

363
00:14:16,000 --> 00:14:18,480
forwards it on both ports so this is all

364
00:14:18,480 --> 00:14:21,600
fine except for if there's loops

365
00:14:21,600 --> 00:14:24,160
because the ethernet header doesn't have

366
00:14:24,160 --> 00:14:27,279
any hop count um so things will just go

367
00:14:27,279 --> 00:14:29,440
round and around and how can you learn

368
00:14:29,440 --> 00:14:31,360
the source address if it might come from

369
00:14:31,360 --> 00:14:33,440
multiple directions

370
00:14:33,440 --> 00:14:34,320
so

371
00:14:34,320 --> 00:14:36,160
what do you do about loops well one

372
00:14:36,160 --> 00:14:37,519
possibility is you just tell the

373
00:14:37,519 --> 00:14:39,440
customers well be careful when you plug

374
00:14:39,440 --> 00:14:43,120
it together not to put in loops

375
00:14:43,120 --> 00:14:46,959
um or but loops are not bad things it

376
00:14:46,959 --> 00:14:48,720
just means that there's an alternate

377
00:14:48,720 --> 00:14:51,519
path in case something uh dies

378
00:14:51,519 --> 00:14:54,880
so this was what my manager asked me

379
00:14:54,880 --> 00:14:57,279
late on a friday

380
00:14:57,279 --> 00:15:00,320
before he was going away for a week and

381
00:15:00,320 --> 00:15:02,880
this was uh before

382
00:15:02,880 --> 00:15:05,680
people read email or had cell phones or

383
00:15:05,680 --> 00:15:07,040
anything so he was going to be

384
00:15:07,040 --> 00:15:09,360
absolutely gone and he thought so he

385
00:15:09,360 --> 00:15:11,279
said oh radio you do

386
00:15:11,279 --> 00:15:14,000
this distributed algorithm stuff come up

387
00:15:14,000 --> 00:15:15,440
with something that with zero

388
00:15:15,440 --> 00:15:17,839
configuration you can plug together any

389
00:15:17,839 --> 00:15:19,839
topology and

390
00:15:19,839 --> 00:15:20,959
um

391
00:15:20,959 --> 00:15:23,040
these things will um

392
00:15:23,040 --> 00:15:25,279
figure out a loop free subset for

393
00:15:25,279 --> 00:15:28,160
actually forwarding data and then he

394
00:15:28,160 --> 00:15:29,600
thought it was going to be really hard

395
00:15:29,600 --> 00:15:31,199
you know because zero configuration

396
00:15:31,199 --> 00:15:34,079
break all the symmetries and so just as

397
00:15:34,079 --> 00:15:34,880
a

398
00:15:34,880 --> 00:15:37,199
um he thought he was being witty he said

399
00:15:37,199 --> 00:15:39,440
oh and furthermore make it scale as a

400
00:15:39,440 --> 00:15:41,519
constant so the amount of memory

401
00:15:41,519 --> 00:15:43,519
necessary to run this thing

402
00:15:43,519 --> 00:15:46,079
should be a constant no matter how many

403
00:15:46,079 --> 00:15:48,000
bridges and links there are in the world

404
00:15:48,000 --> 00:15:50,320
which is crazy nothing's a constant you

405
00:15:50,320 --> 00:15:52,480
know maybe linear if you're really lucky

406
00:15:52,480 --> 00:15:55,040
probably and squared so

407
00:15:55,040 --> 00:15:58,480
um he he went away and that night i

408
00:15:58,480 --> 00:16:01,360
realized oh my goodness it's trivial

409
00:16:01,360 --> 00:16:03,199
and i could prove that it worked i knew

410
00:16:03,199 --> 00:16:04,800
just how to do it

411
00:16:04,800 --> 00:16:07,759
and it was so trivial i wrote the spec

412
00:16:07,759 --> 00:16:09,360
on monday and tuesday and it was

413
00:16:09,360 --> 00:16:11,199
complete enough that the implementers

414
00:16:11,199 --> 00:16:13,279
got it working in just you know a few

415
00:16:13,279 --> 00:16:15,440
weeks without asking me a single

416
00:16:15,440 --> 00:16:16,720
question

417
00:16:16,720 --> 00:16:17,600
so

418
00:16:17,600 --> 00:16:19,600
but that was tuesday

419
00:16:19,600 --> 00:16:20,639
and

420
00:16:20,639 --> 00:16:23,040
i couldn't concentrate on anything else

421
00:16:23,040 --> 00:16:25,680
until i could show off to my manager who

422
00:16:25,680 --> 00:16:27,440
was not around

423
00:16:27,440 --> 00:16:29,360
but at any rate what does the spanning

424
00:16:29,360 --> 00:16:30,480
tree do

425
00:16:30,480 --> 00:16:32,880
the circles are bridges the green lines

426
00:16:32,880 --> 00:16:34,720
are ethernets and the black lines are

427
00:16:34,720 --> 00:16:37,040
ports from the bridge to the

428
00:16:37,040 --> 00:16:39,600
ethernet so you plug it together any

429
00:16:39,600 --> 00:16:42,399
which way spanning tree algorithm runs

430
00:16:42,399 --> 00:16:45,040
and so the bridges decide certain ports

431
00:16:45,040 --> 00:16:47,600
are redundant and they will not forward

432
00:16:47,600 --> 00:16:49,839
packets to or from those ports but

433
00:16:49,839 --> 00:16:51,759
they're still running the spanning tree

434
00:16:51,759 --> 00:16:54,000
algorithm just in case the topology

435
00:16:54,000 --> 00:16:55,120
changes

436
00:16:55,120 --> 00:16:58,320
so the path from a to x if a transmits a

437
00:16:58,320 --> 00:17:01,759
packet it'll go all that way to get to x

438
00:17:01,759 --> 00:17:03,199
and you might think well that's pretty

439
00:17:03,199 --> 00:17:06,319
silly if it were a smarter spinning tree

440
00:17:06,319 --> 00:17:07,919
algorithm you would have gotten better

441
00:17:07,919 --> 00:17:09,599
pass but no

442
00:17:09,599 --> 00:17:11,839
if you have a single shared loop-free

443
00:17:11,839 --> 00:17:14,319
topology you're not going to get optimal

444
00:17:14,319 --> 00:17:16,160
paths all the time because if you

445
00:17:16,160 --> 00:17:18,959
imagine the topology being a big circle

446
00:17:18,959 --> 00:17:20,480
then

447
00:17:20,480 --> 00:17:22,640
the spanning tree has to break it

448
00:17:22,640 --> 00:17:24,559
someplace and people on either side of

449
00:17:24,559 --> 00:17:27,839
the break have to go around the long way

450
00:17:27,839 --> 00:17:28,960
so

451
00:17:28,960 --> 00:17:30,799
shortly after that you know like a year

452
00:17:30,799 --> 00:17:33,760
or two after that csma cd kind of died

453
00:17:33,760 --> 00:17:36,880
out nobody does that anymore um there's

454
00:17:36,880 --> 00:17:38,799
you know variants of it on wireless

455
00:17:38,799 --> 00:17:40,880
links but on wired links it's all

456
00:17:40,880 --> 00:17:44,400
point-to-point links with um switches so

457
00:17:44,400 --> 00:17:46,880
ethernet today has nothing to do with

458
00:17:46,880 --> 00:17:50,720
the original csma cd um invention

459
00:17:50,720 --> 00:17:53,360
ah so as i said um i couldn't

460
00:17:53,360 --> 00:17:56,000
concentrate on anything else and so the

461
00:17:56,000 --> 00:17:59,280
remainder of the week i spent working on

462
00:17:59,280 --> 00:18:02,080
the poem that was the abstract of the

463
00:18:02,080 --> 00:18:04,160
paper in which i published this thing so

464
00:18:04,160 --> 00:18:06,880
i officially spent more time on the poem

465
00:18:06,880 --> 00:18:08,880
than i did on inventing the algorithm

466
00:18:08,880 --> 00:18:10,880
and writing this back

467
00:18:10,880 --> 00:18:13,140
so the poem and

468
00:18:13,140 --> 00:18:15,520
[Applause]

469
00:18:15,520 --> 00:18:17,679
and apologies if you've heard the poem

470
00:18:17,679 --> 00:18:19,840
already but um yeah

471
00:18:19,840 --> 00:18:21,360
when i mentioned i was doing this they

472
00:18:21,360 --> 00:18:24,160
said oh make sure to do the poem so okay

473
00:18:24,160 --> 00:18:26,480
um algorithm because every algorithm

474
00:18:26,480 --> 00:18:28,080
should have an i'll go run

475
00:18:28,080 --> 00:18:28,960
i

476
00:18:28,960 --> 00:18:31,039
i think that i shall never see a graph

477
00:18:31,039 --> 00:18:33,520
more lovely than a tree a tree whose

478
00:18:33,520 --> 00:18:35,360
crucial property is loop-free

479
00:18:35,360 --> 00:18:38,000
connectivity a tree which must be sure

480
00:18:38,000 --> 00:18:41,440
to span so packets can reach every land

481
00:18:41,440 --> 00:18:44,160
first the route must be selected by id

482
00:18:44,160 --> 00:18:47,360
it is elected least crossed paths from

483
00:18:47,360 --> 00:18:50,240
route are traced in the tree these paths

484
00:18:50,240 --> 00:18:53,120
are placed a mesh is made by folks like

485
00:18:53,120 --> 00:18:57,840
me then bridges find a spanning tree

486
00:19:00,820 --> 00:19:03,360
[Applause]

487
00:19:03,360 --> 00:19:06,480
so why was bridging so popular i mean it

488
00:19:06,480 --> 00:19:09,280
was really sort of a cluj

489
00:19:09,280 --> 00:19:11,919
just until people

490
00:19:11,919 --> 00:19:14,400
fix the end nodes to put layer 3 back or

491
00:19:14,400 --> 00:19:17,760
at least that's what i believed

492
00:19:17,760 --> 00:19:19,840
at the time there were lots of layer 3

493
00:19:19,840 --> 00:19:24,400
protocols ip ipx decnet apple talk and a

494
00:19:24,400 --> 00:19:26,320
bridge just worked

495
00:19:26,320 --> 00:19:28,720
there were multi-protocol routers but

496
00:19:28,720 --> 00:19:31,919
they were slow and expensive whereas

497
00:19:31,919 --> 00:19:34,160
and horrible to configure

498
00:19:34,160 --> 00:19:35,440
and

499
00:19:35,440 --> 00:19:37,120
bridges you just

500
00:19:37,120 --> 00:19:40,000
plug them in and they they work and

501
00:19:40,000 --> 00:19:42,640
somebody once told me hey you know some

502
00:19:42,640 --> 00:19:44,559
of our customers are complaining that

503
00:19:44,559 --> 00:19:46,480
bridges are the most boring thing that

504
00:19:46,480 --> 00:19:48,880
digital ever did you just plug them in

505
00:19:48,880 --> 00:19:50,640
and you can't do anything with it and i

506
00:19:50,640 --> 00:19:51,440
said

507
00:19:51,440 --> 00:19:54,240
fine if they want knobs i'll put in

508
00:19:54,240 --> 00:19:56,559
knobs but

509
00:19:56,559 --> 00:19:58,880
they don't have to touch the knobs and

510
00:19:58,880 --> 00:20:01,280
if they do touch the knobs any

511
00:20:01,280 --> 00:20:03,919
configuration will still work so that's

512
00:20:03,919 --> 00:20:06,320
sort of my philosophy of things that

513
00:20:06,320 --> 00:20:08,799
things should just work but for people

514
00:20:08,799 --> 00:20:10,880
who like to play with it and maybe tune

515
00:20:10,880 --> 00:20:12,880
in a little bit

516
00:20:12,880 --> 00:20:14,880
let them play but don't let them hurt

517
00:20:14,880 --> 00:20:17,200
themselves

518
00:20:17,200 --> 00:20:20,159
so spanning tree ethernet is a cluj you

519
00:20:20,159 --> 00:20:22,320
don't get optimal paths

520
00:20:22,320 --> 00:20:25,200
unused links don't get used you know

521
00:20:25,200 --> 00:20:26,880
things that are not in the spanning tree

522
00:20:26,880 --> 00:20:28,799
and the other links have more traffic

523
00:20:28,799 --> 00:20:31,039
than they would have otherwise temporary

524
00:20:31,039 --> 00:20:33,520
loops are incredibly dangerous

525
00:20:33,520 --> 00:20:36,799
because the header has no hop count now

526
00:20:36,799 --> 00:20:38,799
why isn't there a hop count in the

527
00:20:38,799 --> 00:20:40,640
ethernet header it wasn't like the

528
00:20:40,640 --> 00:20:42,960
inventors didn't know about hopkins it

529
00:20:42,960 --> 00:20:45,120
just it never occurred to them that

530
00:20:45,120 --> 00:20:47,200
anyone would be foolish enough to be

531
00:20:47,200 --> 00:20:50,240
forwarding these things so

532
00:20:50,240 --> 00:20:53,600
yeah it's just incredibly scary because

533
00:20:53,600 --> 00:20:54,960
you can't

534
00:20:54,960 --> 00:20:57,280
make everybody's forwarding tables

535
00:20:57,280 --> 00:21:00,000
immediately switch to a new topology if

536
00:21:00,000 --> 00:21:01,360
things change

537
00:21:01,360 --> 00:21:02,880
then there'll be a time when they'll be

538
00:21:02,880 --> 00:21:05,919
sort of out of sync and packets may

539
00:21:05,919 --> 00:21:09,200
loop around and worse than that with

540
00:21:09,200 --> 00:21:11,600
ethernet if you have a bridge with seven

541
00:21:11,600 --> 00:21:14,240
ports when it receives one packet

542
00:21:14,240 --> 00:21:17,760
it will make six more packets so you not

543
00:21:17,760 --> 00:21:19,360
only have a single packet sort of

544
00:21:19,360 --> 00:21:21,600
wandering around but you multiply the

545
00:21:21,600 --> 00:21:23,440
numbers of them

546
00:21:23,440 --> 00:21:25,919
which can starve out any attempt by the

547
00:21:25,919 --> 00:21:28,720
rooting algorithm to

548
00:21:28,720 --> 00:21:30,720
redo the forwarding tables for the new

549
00:21:30,720 --> 00:21:32,640
topology

550
00:21:32,640 --> 00:21:34,799
so why not get rid of ethernet these

551
00:21:34,799 --> 00:21:36,960
days and use just ip given that

552
00:21:36,960 --> 00:21:40,320
everything is just point to point links

553
00:21:40,320 --> 00:21:42,720
the world has converged to ip as the

554
00:21:42,720 --> 00:21:44,559
layer 3 protocol

555
00:21:44,559 --> 00:21:45,360
and

556
00:21:45,360 --> 00:21:47,840
all of the endnotes have ip in the stack

557
00:21:47,840 --> 00:21:50,559
so all the original reasons for needing

558
00:21:50,559 --> 00:21:54,320
bridges go away so why hasn't it gone

559
00:21:54,320 --> 00:21:56,159
away

560
00:21:56,159 --> 00:21:58,159
on a link with two nodes a

561
00:21:58,159 --> 00:22:00,400
point-to-point link why do you need a

562
00:22:00,400 --> 00:22:01,919
six-byte

563
00:22:01,919 --> 00:22:04,799
addresses to say who you are and who

564
00:22:04,799 --> 00:22:06,880
you're sending it to it's like if you're

565
00:22:06,880 --> 00:22:08,799
hearing this it's for you

566
00:22:08,799 --> 00:22:10,799
and you know if you're hearing it it's

567
00:22:10,799 --> 00:22:13,840
from me

568
00:22:13,840 --> 00:22:15,760
why can't you just forward things with

569
00:22:15,760 --> 00:22:18,000
layer three

570
00:22:18,000 --> 00:22:21,120
so if ip were designed differently we

571
00:22:21,120 --> 00:22:23,200
wouldn't need the ethernet header

572
00:22:23,200 --> 00:22:24,640
anymore

573
00:22:24,640 --> 00:22:25,520
so

574
00:22:25,520 --> 00:22:28,400
today there's two um headers the layer

575
00:22:28,400 --> 00:22:30,880
three header and the layer two header so

576
00:22:30,880 --> 00:22:34,240
when s talks to d the layer three header

577
00:22:34,240 --> 00:22:36,320
will say the source is s and the

578
00:22:36,320 --> 00:22:38,080
destination is d and that will never

579
00:22:38,080 --> 00:22:39,760
change

580
00:22:39,760 --> 00:22:43,280
but the layer 2 header gets replaced at

581
00:22:43,280 --> 00:22:44,320
each

582
00:22:44,320 --> 00:22:46,480
hop unless you have a point-to-point

583
00:22:46,480 --> 00:22:50,320
link and then you don't need the header

584
00:22:50,400 --> 00:22:52,000
if you have everything having

585
00:22:52,000 --> 00:22:54,799
point-to-point links you really don't

586
00:22:54,799 --> 00:22:56,880
need those addresses anymore you could

587
00:22:56,880 --> 00:22:59,600
just forward it with layer 3.

588
00:22:59,600 --> 00:23:02,320
so what's wrong with the ip

589
00:23:02,320 --> 00:23:05,840
ip is configuration intensive you can't

590
00:23:05,840 --> 00:23:08,000
have like a data center with a flat

591
00:23:08,000 --> 00:23:10,000
address space where you can move vms

592
00:23:10,000 --> 00:23:12,159
around without changing their address

593
00:23:12,159 --> 00:23:13,840
you wouldn't be able to do that if

594
00:23:13,840 --> 00:23:17,520
everything were connected with ip

595
00:23:17,520 --> 00:23:19,120
because

596
00:23:19,120 --> 00:23:22,159
every link in ip where a link is defined

597
00:23:22,159 --> 00:23:23,200
as

598
00:23:23,200 --> 00:23:26,159
a different port on a router

599
00:23:26,159 --> 00:23:29,200
has to have its own block of addresses

600
00:23:29,200 --> 00:23:31,039
and the routers have to be configured

601
00:23:31,039 --> 00:23:33,919
with which block is on each port

602
00:23:33,919 --> 00:23:35,760
and if something moves from one side of

603
00:23:35,760 --> 00:23:37,919
a router to another it has to change its

604
00:23:37,919 --> 00:23:40,000
layer 3 address

605
00:23:40,000 --> 00:23:40,960
so

606
00:23:40,960 --> 00:23:43,200
people would like to have a cloud with a

607
00:23:43,200 --> 00:23:45,520
flat address and that within there you

608
00:23:45,520 --> 00:23:47,919
can move around freely

609
00:23:47,919 --> 00:23:50,559
now layer 3 doesn't have to work that

610
00:23:50,559 --> 00:23:52,880
way that was that's how i p works but

611
00:23:52,880 --> 00:23:55,039
there are other layer three or there

612
00:23:55,039 --> 00:23:57,440
were other layer three protocols that

613
00:23:57,440 --> 00:23:59,679
acted differently in particular there

614
00:23:59,679 --> 00:24:02,720
was one done by um

615
00:24:02,720 --> 00:24:05,760
iso i guess um a different sports team

616
00:24:05,760 --> 00:24:07,919
called clnp

617
00:24:07,919 --> 00:24:10,480
which stands for connectionless network

618
00:24:10,480 --> 00:24:11,679
protocol

619
00:24:11,679 --> 00:24:12,640
um

620
00:24:12,640 --> 00:24:13,440
and

621
00:24:13,440 --> 00:24:16,480
at digital when i took over layer 3 we

622
00:24:16,480 --> 00:24:18,720
had two byte addresses and i said we

623
00:24:18,720 --> 00:24:21,360
need bigger addresses and i didn't say

624
00:24:21,360 --> 00:24:24,159
wow if i design my own

625
00:24:24,159 --> 00:24:25,279
header

626
00:24:25,279 --> 00:24:26,320
um

627
00:24:26,320 --> 00:24:28,480
my own packet format maybe i'll win a

628
00:24:28,480 --> 00:24:31,679
nobel prize you know it's like

629
00:24:31,679 --> 00:24:34,320
fine this this iso thing looks fine it

630
00:24:34,320 --> 00:24:36,640
has 20 bite addresses let's just use

631
00:24:36,640 --> 00:24:40,960
that so so decknet um also adopted that

632
00:24:40,960 --> 00:24:43,919
so um it was a 20 byte address where the

633
00:24:43,919 --> 00:24:46,960
top 14 bytes were

634
00:24:46,960 --> 00:24:49,440
a prefix just like ip

635
00:24:49,440 --> 00:24:52,559
that gets you to a cloud but once you

636
00:24:52,559 --> 00:24:54,799
get to the cloud all the nodes there

637
00:24:54,799 --> 00:24:56,960
share the same prefix

638
00:24:56,960 --> 00:24:59,600
but the cloud routes to the individual

639
00:24:59,600 --> 00:25:01,600
end node within the cloud

640
00:25:01,600 --> 00:25:03,840
and um so the endnote has to cooperate a

641
00:25:03,840 --> 00:25:05,840
little bit by telling the routers where

642
00:25:05,840 --> 00:25:07,919
it is and then you can have optimal

643
00:25:07,919 --> 00:25:11,279
paths inside of there and so forth

644
00:25:11,279 --> 00:25:14,320
so um

645
00:25:14,320 --> 00:25:18,159
clnp has this 14 byte prefix that has as

646
00:25:18,159 --> 00:25:20,720
many levels of hierarchy as you want but

647
00:25:20,720 --> 00:25:23,120
it terminates at

648
00:25:23,120 --> 00:25:26,240
the 14 byte prefix and then inside is a

649
00:25:26,240 --> 00:25:28,240
cloud with a flat address space where

650
00:25:28,240 --> 00:25:30,400
you can move around

651
00:25:30,400 --> 00:25:32,960
clone p also had other features it had

652
00:25:32,960 --> 00:25:35,120
auto configuration and the way that it

653
00:25:35,120 --> 00:25:37,200
did that it said stick your ethernet

654
00:25:37,200 --> 00:25:39,919
address your mac address into the bottom

655
00:25:39,919 --> 00:25:41,840
six bytes

656
00:25:41,840 --> 00:25:44,400
it also had plenty of addresses so it

657
00:25:44,400 --> 00:25:48,640
had 20 bytes versus ipv6 only has 16

658
00:25:48,640 --> 00:25:49,760
bytes

659
00:25:49,760 --> 00:25:52,960
and the high order part in clnp was 14

660
00:25:52,960 --> 00:25:53,919
bytes

661
00:25:53,919 --> 00:25:56,880
rather than an ipv6 where it's only 8

662
00:25:56,880 --> 00:25:58,240
bytes

663
00:25:58,240 --> 00:25:59,760
and the bigger the

664
00:25:59,760 --> 00:26:02,159
prefix the easier it is to kind of hand

665
00:26:02,159 --> 00:26:03,520
out addresses

666
00:26:03,520 --> 00:26:05,919
and it was widely deployed it supported

667
00:26:05,919 --> 00:26:09,039
large customer networks

668
00:26:09,039 --> 00:26:12,000
ip depends on something else creating a

669
00:26:12,000 --> 00:26:14,480
cloud with a flat address space

670
00:26:14,480 --> 00:26:16,240
so um

671
00:26:16,240 --> 00:26:18,640
there's arp

672
00:26:18,640 --> 00:26:21,200
called neighbor discovery and ipv6 sort

673
00:26:21,200 --> 00:26:24,799
of the same thing once um ip gets to

674
00:26:24,799 --> 00:26:27,440
what it thinks is a link

675
00:26:27,440 --> 00:26:30,720
um it then has to do arp to say hey who

676
00:26:30,720 --> 00:26:33,200
has this ip address and someone says i

677
00:26:33,200 --> 00:26:35,919
do i do and this is my layer 2 address

678
00:26:35,919 --> 00:26:39,840
and then the router can forward it

679
00:26:39,919 --> 00:26:42,799
so if you have iplus ethernet ip gets

680
00:26:42,799 --> 00:26:46,080
you to what ip thinks of as a link

681
00:26:46,080 --> 00:26:48,480
and then you have to do arp to get your

682
00:26:48,480 --> 00:26:51,600
address within that link and then

683
00:26:51,600 --> 00:26:54,120
some other magic technology whether it's

684
00:26:54,120 --> 00:26:57,520
csmacd or spanning tree or trill or

685
00:26:57,520 --> 00:26:59,520
vxlan

686
00:26:59,520 --> 00:27:02,880
makes a bunch of links look to ip like a

687
00:27:02,880 --> 00:27:04,320
single link

688
00:27:04,320 --> 00:27:07,840
whereas with clnp the top 14 bytes get

689
00:27:07,840 --> 00:27:09,360
you to the cloud

690
00:27:09,360 --> 00:27:12,240
and then um you don't need to do arp the

691
00:27:12,240 --> 00:27:13,919
rest of the address is right there in

692
00:27:13,919 --> 00:27:15,520
the layer 3

693
00:27:15,520 --> 00:27:18,320
address and you have true layer 3

694
00:27:18,320 --> 00:27:21,279
routing inside with a hop count and

695
00:27:21,279 --> 00:27:24,240
civilized protocols and stuff

696
00:27:24,240 --> 00:27:25,360
so

697
00:27:25,360 --> 00:27:27,200
and with hierarchy if you have one

698
00:27:27,200 --> 00:27:29,120
prefix per link there's a lot you have

699
00:27:29,120 --> 00:27:31,600
to carve up the address space and do a

700
00:27:31,600 --> 00:27:34,960
lot of configuration with clnp inside

701
00:27:34,960 --> 00:27:37,919
one of these clouds zero configuration

702
00:27:37,919 --> 00:27:38,960
um

703
00:27:38,960 --> 00:27:40,799
you just plug together the routers and

704
00:27:40,799 --> 00:27:43,200
the end nodes nobody has to know

705
00:27:43,200 --> 00:27:45,279
anything except

706
00:27:45,279 --> 00:27:47,919
one guy has to be told what the 14 byte

707
00:27:47,919 --> 00:27:49,760
prefix for the cloud is and it lets

708
00:27:49,760 --> 00:27:52,240
everybody else know but other than that

709
00:27:52,240 --> 00:27:53,760
you move around you know no

710
00:27:53,760 --> 00:27:55,360
configuration

711
00:27:55,360 --> 00:27:56,960
so

712
00:27:56,960 --> 00:27:59,200
what i used to say was the single worst

713
00:27:59,200 --> 00:28:00,240
decision

714
00:28:00,240 --> 00:28:02,960
in the history of mankind until you know

715
00:28:02,960 --> 00:28:06,480
we've made worse ones since i suppose

716
00:28:06,480 --> 00:28:09,279
not maybe not the uh this industry but

717
00:28:09,279 --> 00:28:12,240
at any rate um so

718
00:28:12,240 --> 00:28:15,039
in 1992 people said you know ip

719
00:28:15,039 --> 00:28:18,880
addresses are too small four bytes um

720
00:28:18,880 --> 00:28:23,200
how about if we adopt this clnp thing

721
00:28:23,200 --> 00:28:25,840
and so um the routing vendors were

722
00:28:25,840 --> 00:28:28,000
behind it because they already had it

723
00:28:28,000 --> 00:28:30,420
implemented and stuff

724
00:28:30,420 --> 00:28:31,520
[Music]

725
00:28:31,520 --> 00:28:34,720
somebody modified tcp to work on top of

726
00:28:34,720 --> 00:28:37,679
clnp in which case immediately all the

727
00:28:37,679 --> 00:28:39,919
internet applications worked because

728
00:28:39,919 --> 00:28:42,399
they worked on top of tcp and they

729
00:28:42,399 --> 00:28:44,399
didn't have to change to have bigger

730
00:28:44,399 --> 00:28:46,559
addresses underneath it

731
00:28:46,559 --> 00:28:50,399
um it was much easier in 1992 to migrate

732
00:28:50,399 --> 00:28:52,799
to a new address format because the

733
00:28:52,799 --> 00:28:55,039
internet was much smaller it wasn't so

734
00:28:55,039 --> 00:28:57,440
mission critical like it is today

735
00:28:57,440 --> 00:29:00,720
and ip hadn't yet out of necessity

736
00:29:00,720 --> 00:29:03,279
invented dhcp and now which we'll talk

737
00:29:03,279 --> 00:29:05,919
about in a minute so clnp gave

738
00:29:05,919 --> 00:29:08,559
understandable advantages

739
00:29:08,559 --> 00:29:10,799
so um um

740
00:29:10,799 --> 00:29:14,559
yeah the the whole idea of um yeah no

741
00:29:14,559 --> 00:29:17,399
arp um no um

742
00:29:17,399 --> 00:29:20,080
configuration inside the the flat

743
00:29:20,080 --> 00:29:22,000
address and all that

744
00:29:22,000 --> 00:29:24,559
um so the decision was let's invent

745
00:29:24,559 --> 00:29:28,159
something new and let's call it ipv6

746
00:29:28,159 --> 00:29:29,760
so

747
00:29:29,760 --> 00:29:33,120
ipv6 is just a 16 byte version of ip

748
00:29:33,120 --> 00:29:36,000
with 8 bytes for prefix and 8 bytes for

749
00:29:36,000 --> 00:29:39,120
node id on the last link

750
00:29:39,120 --> 00:29:41,760
eight bytes on the top is inconveniently

751
00:29:41,760 --> 00:29:44,640
small for administering addresses eight

752
00:29:44,640 --> 00:29:46,720
bytes on the bottom is way too much

753
00:29:46,720 --> 00:29:51,120
especially once dhcp got invented

754
00:29:51,120 --> 00:29:55,360
so it's technically inferior to clnp

755
00:29:55,360 --> 00:29:59,200
because ipv6 just like ipv4 needs to

756
00:29:59,200 --> 00:30:01,919
have a different block of addresses on

757
00:30:01,919 --> 00:30:05,200
every side of an ip router

758
00:30:05,200 --> 00:30:08,559
and so ipv6 still will depend on some

759
00:30:08,559 --> 00:30:10,880
other thing to magically create a cloud

760
00:30:10,880 --> 00:30:12,880
with a flat address space

761
00:30:12,880 --> 00:30:15,919
and it's no more compatible with ipv4

762
00:30:15,919 --> 00:30:18,720
than clnp is

763
00:30:18,720 --> 00:30:20,399
so um

764
00:30:20,399 --> 00:30:23,039
there was all sorts of silly hype like

765
00:30:23,039 --> 00:30:26,399
that it has two to the 128 addresses

766
00:30:26,399 --> 00:30:27,520
um

767
00:30:27,520 --> 00:30:30,799
so you can um number every molecule in

768
00:30:30,799 --> 00:30:33,520
the universe and things like that

769
00:30:33,520 --> 00:30:35,760
and in general when you have hierarchy

770
00:30:35,760 --> 00:30:38,799
you you waste addresses but there's only

771
00:30:38,799 --> 00:30:41,440
eight bytes to play with or that it has

772
00:30:41,440 --> 00:30:44,640
security built in versus ipv4 i decided

773
00:30:44,640 --> 00:30:45,679
that um

774
00:30:45,679 --> 00:30:47,760
that's deferred to the last slide if you

775
00:30:47,760 --> 00:30:48,880
want to hear me

776
00:30:48,880 --> 00:30:50,399
i rant about that

777
00:30:50,399 --> 00:30:53,600
um where that came from so is ipv6 just

778
00:30:53,600 --> 00:30:56,640
a new version of ipv4

779
00:30:56,640 --> 00:31:00,240
so let's look at what's a version well

780
00:31:00,240 --> 00:31:02,320
in the ip header there's a field called

781
00:31:02,320 --> 00:31:04,880
version number it's a four bit field and

782
00:31:04,880 --> 00:31:08,159
for ipv4 you put a four there for ipv6

783
00:31:08,159 --> 00:31:10,000
you put a six there

784
00:31:10,000 --> 00:31:10,799
so

785
00:31:10,799 --> 00:31:12,000
um

786
00:31:12,000 --> 00:31:14,320
what exactly is a version number what's

787
00:31:14,320 --> 00:31:15,600
the purpose

788
00:31:15,600 --> 00:31:17,679
is it decorative

789
00:31:17,679 --> 00:31:20,720
or does it serve some sort of purpose

790
00:31:20,720 --> 00:31:22,799
so there's a philosophical question

791
00:31:22,799 --> 00:31:24,880
about what's the difference between a

792
00:31:24,880 --> 00:31:27,200
new version of a protocol and a

793
00:31:27,200 --> 00:31:28,880
different protocol

794
00:31:28,880 --> 00:31:30,559
and the only thing that sends makes

795
00:31:30,559 --> 00:31:33,440
sense at least to me is that you have an

796
00:31:33,440 --> 00:31:35,840
envelope like an ip header or an

797
00:31:35,840 --> 00:31:38,720
ethernet header that

798
00:31:38,720 --> 00:31:41,039
basically says which process should

799
00:31:41,039 --> 00:31:42,799
receive the packet

800
00:31:42,799 --> 00:31:46,320
so um in ether it's called an ether type

801
00:31:46,320 --> 00:31:49,360
in ip it's called the protocol type in

802
00:31:49,360 --> 00:31:52,799
tcp and udp it's called a port

803
00:31:52,799 --> 00:31:54,080
so

804
00:31:54,080 --> 00:31:55,919
if you have

805
00:31:55,919 --> 00:31:58,080
the protocol type says which process to

806
00:31:58,080 --> 00:32:01,919
give the packet to if you have two

807
00:32:01,919 --> 00:32:05,039
different processes even if they

808
00:32:05,039 --> 00:32:08,720
are implementing the exact same protocol

809
00:32:08,720 --> 00:32:10,240
if they're using different protocol

810
00:32:10,240 --> 00:32:12,960
types then they're different protocols

811
00:32:12,960 --> 00:32:16,080
whereas if you want to

812
00:32:16,080 --> 00:32:19,279
share a protocol type

813
00:32:19,279 --> 00:32:21,120
and then differentiate based on the

814
00:32:21,120 --> 00:32:22,480
version number

815
00:32:22,480 --> 00:32:25,120
then no matter how different they are

816
00:32:25,120 --> 00:32:27,519
they're different versions of the same

817
00:32:27,519 --> 00:32:28,799
protocol

818
00:32:28,799 --> 00:32:30,960
so

819
00:32:31,039 --> 00:32:32,640
if you differentiate based on the

820
00:32:32,640 --> 00:32:34,480
version number so that you can share the

821
00:32:34,480 --> 00:32:36,080
same protocol type

822
00:32:36,080 --> 00:32:38,799
you can't just say write this value into

823
00:32:38,799 --> 00:32:40,080
this field

824
00:32:40,080 --> 00:32:42,880
you have to also say if you receive a

825
00:32:42,880 --> 00:32:45,120
packet look at the version number and if

826
00:32:45,120 --> 00:32:47,600
it's not something you understand

827
00:32:47,600 --> 00:32:49,919
then throw away the packet

828
00:32:49,919 --> 00:32:53,519
but they didn't say that in ipv4

829
00:32:53,519 --> 00:32:55,840
so they realize that if they share a

830
00:32:55,840 --> 00:32:57,440
protocol type and

831
00:32:57,440 --> 00:32:59,760
you send an ipv6 packet to an

832
00:32:59,760 --> 00:33:03,360
unsuspecting ipv4 node it will just

833
00:33:03,360 --> 00:33:05,600
happily assume that these four bytes are

834
00:33:05,600 --> 00:33:07,760
the destination address and this is the

835
00:33:07,760 --> 00:33:11,039
hop count and things like that so

836
00:33:11,039 --> 00:33:12,159
therefore

837
00:33:12,159 --> 00:33:13,440
um

838
00:33:13,440 --> 00:33:17,679
i ipv6 can't share a protocol type

839
00:33:17,679 --> 00:33:19,039
so um

840
00:33:19,039 --> 00:33:20,480
you know when

841
00:33:20,480 --> 00:33:24,080
an ether type so ipv6 is a new protocol

842
00:33:24,080 --> 00:33:29,039
rather than a new version of ip

843
00:33:29,600 --> 00:33:32,000
so what were the reasons not to adopt

844
00:33:32,000 --> 00:33:34,559
clnp at the time it seemed like the

845
00:33:34,559 --> 00:33:37,279
obvious thing that ought to be done

846
00:33:37,279 --> 00:33:39,840
so one was it would be ripping out the

847
00:33:39,840 --> 00:33:41,679
heart of the internet and putting in a

848
00:33:41,679 --> 00:33:43,919
foreign thing

849
00:33:43,919 --> 00:33:44,960
or

850
00:33:44,960 --> 00:33:48,399
we don't like iso layer 6

851
00:33:48,399 --> 00:33:49,440
which

852
00:33:49,440 --> 00:33:52,080
has nothing to do with replacing layer 3

853
00:33:52,080 --> 00:33:54,960
with 20 bite addresses

854
00:33:54,960 --> 00:33:57,279
we're not immediately out of ipv4

855
00:33:57,279 --> 00:33:59,840
addresses and those other people are

856
00:33:59,840 --> 00:34:02,080
total morons so i'm sure we will come up

857
00:34:02,080 --> 00:34:06,000
with something much more brilliant so um

858
00:34:06,000 --> 00:34:08,560
and the really the unsaid thing was but

859
00:34:08,560 --> 00:34:10,399
it's a different sports team we don't

860
00:34:10,399 --> 00:34:12,159
want to give them the satisfaction of

861
00:34:12,159 --> 00:34:15,280
saying anything they did was worthwhile

862
00:34:15,280 --> 00:34:18,639
so now alternate history um stuff that

863
00:34:18,639 --> 00:34:20,560
never would have been invented without

864
00:34:20,560 --> 00:34:23,280
these bad decisions so if we had treated

865
00:34:23,280 --> 00:34:25,280
ethernet like a link rather than a

866
00:34:25,280 --> 00:34:28,000
network endnotes would have used layer 3

867
00:34:28,000 --> 00:34:32,320
with isis to forward between lengths

868
00:34:32,320 --> 00:34:34,960
the ethernet header would have died out

869
00:34:34,960 --> 00:34:36,879
spanning tree ethernet wouldn't have

870
00:34:36,879 --> 00:34:39,040
been invented

871
00:34:39,040 --> 00:34:40,480
i've heard that the spanning tree

872
00:34:40,480 --> 00:34:42,639
algorithm is used in other contexts

873
00:34:42,639 --> 00:34:45,918
because it's sort of incredibly simple

874
00:34:45,918 --> 00:34:48,639
and the baked in mac address is actually

875
00:34:48,639 --> 00:34:51,440
useful for lots of things so even if we

876
00:34:51,440 --> 00:34:53,199
didn't have the ethernet header the fact

877
00:34:53,199 --> 00:34:55,040
that we're manufacturing all of our

878
00:34:55,040 --> 00:34:57,920
devices with a baked in unique six byte

879
00:34:57,920 --> 00:35:01,040
id people find uses for that

880
00:35:01,040 --> 00:35:01,760
um

881
00:35:01,760 --> 00:35:05,200
though privacy advocates get upset about

882
00:35:05,200 --> 00:35:08,480
a baked in unique id they think oh you

883
00:35:08,480 --> 00:35:10,320
know you're trying to track us or

884
00:35:10,320 --> 00:35:13,200
something so um

885
00:35:13,200 --> 00:35:15,359
you know like intel got

886
00:35:15,359 --> 00:35:17,920
completely undeserved bad press for

887
00:35:17,920 --> 00:35:20,240
having a processor id

888
00:35:20,240 --> 00:35:22,720
um even though there's lots of sort of

889
00:35:22,720 --> 00:35:24,560
unique ids there's there's the mac

890
00:35:24,560 --> 00:35:27,520
address for instance but um

891
00:35:27,520 --> 00:35:29,040
yes so

892
00:35:29,040 --> 00:35:30,400
people

893
00:35:30,400 --> 00:35:32,320
you know there's mixed feelings about

894
00:35:32,320 --> 00:35:35,280
having this unique id built into your

895
00:35:35,280 --> 00:35:36,560
machine

896
00:35:36,560 --> 00:35:40,079
so if ethernet had remained csma cd

897
00:35:40,079 --> 00:35:41,920
i don't see how we could have had fast

898
00:35:41,920 --> 00:35:43,200
ethernet

899
00:35:43,200 --> 00:35:46,720
csma cd requires detecting collisions

900
00:35:46,720 --> 00:35:48,880
within the time it takes to transmit a

901
00:35:48,880 --> 00:35:50,640
minimum packet

902
00:35:50,640 --> 00:35:51,359
so

903
00:35:51,359 --> 00:35:54,720
if the speed is x times faster the cable

904
00:35:54,720 --> 00:35:58,880
length has to be one x as much or you

905
00:35:58,880 --> 00:36:01,599
have to increase the minimum packet size

906
00:36:01,599 --> 00:36:03,920
so the original 10 megabit ethernet was

907
00:36:03,920 --> 00:36:06,880
about a half a kilometer so a 10 gig

908
00:36:06,880 --> 00:36:10,079
csma cd link would have a maximum length

909
00:36:10,079 --> 00:36:12,640
of a half a meter so

910
00:36:12,640 --> 00:36:14,400
it doesn't matter because we're not

911
00:36:14,400 --> 00:36:17,200
using csmacd

912
00:36:17,200 --> 00:36:20,240
so spinning to ethernet also allows ipv4

913
00:36:20,240 --> 00:36:22,560
a much longer life

914
00:36:22,560 --> 00:36:25,119
links in ip would have been limited to a

915
00:36:25,119 --> 00:36:29,200
single lan you know hundreds of nodes

916
00:36:29,200 --> 00:36:31,119
and there would have been no ability to

917
00:36:31,119 --> 00:36:32,480
have a flat

918
00:36:32,480 --> 00:36:35,280
a cloud with a flat address space

919
00:36:35,280 --> 00:36:36,720
and um

920
00:36:36,720 --> 00:36:38,560
spanning tree ethernet was widely

921
00:36:38,560 --> 00:36:40,800
deployed by 1992

922
00:36:40,800 --> 00:36:43,359
so maybe if

923
00:36:43,359 --> 00:36:45,119
it hadn't been

924
00:36:45,119 --> 00:36:46,880
they would have had the good sense to

925
00:36:46,880 --> 00:36:49,119
adopt clnp

926
00:36:49,119 --> 00:36:50,720
at the time

927
00:36:50,720 --> 00:36:53,599
so if we had adopted clnp

928
00:36:53,599 --> 00:36:56,240
what we think of as layer two

929
00:36:56,240 --> 00:36:58,560
um would have just been the level one

930
00:36:58,560 --> 00:37:02,079
routing in isis you know the cloud would

931
00:37:02,079 --> 00:37:04,400
have been just you know the bottom

932
00:37:04,400 --> 00:37:06,480
routing based on the bottom six bytes of

933
00:37:06,480 --> 00:37:08,240
the address

934
00:37:08,240 --> 00:37:09,200
with

935
00:37:09,200 --> 00:37:11,760
optimal paths and hop counts as opposed

936
00:37:11,760 --> 00:37:14,800
to like spanning tree

937
00:37:14,800 --> 00:37:16,720
and the ethernet header would have been

938
00:37:16,720 --> 00:37:19,920
unnecessary so extra 14 bytes or

939
00:37:19,920 --> 00:37:22,320
whatever it is

940
00:37:22,320 --> 00:37:24,320
but here's some good stuff we probably

941
00:37:24,320 --> 00:37:26,000
wouldn't have thought of

942
00:37:26,000 --> 00:37:28,320
so dhcp

943
00:37:28,320 --> 00:37:31,040
how do endnotes get their address well

944
00:37:31,040 --> 00:37:34,960
clnp and ipx said take your six byte

945
00:37:34,960 --> 00:37:37,680
baked in address and stick it into the

946
00:37:37,680 --> 00:37:40,480
layer three header

947
00:37:40,480 --> 00:37:43,520
apple talk had an incredibly cute

948
00:37:43,520 --> 00:37:45,680
hack for doing auto configuration with

949
00:37:45,680 --> 00:37:48,800
only three bytes but at any rate

950
00:37:48,800 --> 00:37:52,160
but um with ipv4 originally you had to

951
00:37:52,160 --> 00:37:54,880
do manual configuration and then they

952
00:37:54,880 --> 00:37:57,520
came up with dhcp dynamic host

953
00:37:57,520 --> 00:38:00,800
configuration protocol so what happens

954
00:38:00,800 --> 00:38:04,640
is that um if you plug into a

955
00:38:04,640 --> 00:38:06,640
what's supposed to look like a single

956
00:38:06,640 --> 00:38:08,800
link to ip

957
00:38:08,800 --> 00:38:12,000
you kind of shout and say hey i need an

958
00:38:12,000 --> 00:38:15,680
ip address that makes sense on this link

959
00:38:15,680 --> 00:38:16,720
and

960
00:38:16,720 --> 00:38:19,119
you know who's a dhcp server and the

961
00:38:19,119 --> 00:38:22,720
dhcp server has a pool of ip addresses

962
00:38:22,720 --> 00:38:25,119
that are for that link

963
00:38:25,119 --> 00:38:26,880
and

964
00:38:26,880 --> 00:38:29,680
it will say oh this is an ip address you

965
00:38:29,680 --> 00:38:32,079
can use that's on this link so you sort

966
00:38:32,079 --> 00:38:34,079
of get a temporary address for where you

967
00:38:34,079 --> 00:38:36,400
happen to be plugged in

968
00:38:36,400 --> 00:38:39,760
now would dhcp have been invented if we

969
00:38:39,760 --> 00:38:43,200
had adopted clnp we wouldn't have needed

970
00:38:43,200 --> 00:38:48,160
it as much but clnp is a wondrous thing

971
00:38:48,960 --> 00:38:51,680
you know clnp auto ha already had auto

972
00:38:51,680 --> 00:38:54,720
configuration but dhcp is a much better

973
00:38:54,720 --> 00:38:57,200
way of doing it

974
00:38:57,200 --> 00:38:59,280
because

975
00:38:59,280 --> 00:39:02,000
you don't need to have six bytes to have

976
00:39:02,000 --> 00:39:02,960
your

977
00:39:02,960 --> 00:39:05,599
link local address you know three bytes

978
00:39:05,599 --> 00:39:06,320
is

979
00:39:06,320 --> 00:39:08,400
enough four bytes is way more than you

980
00:39:08,400 --> 00:39:09,839
would ever need

981
00:39:09,839 --> 00:39:10,640
um

982
00:39:10,640 --> 00:39:12,960
so you could have bigger prefix within

983
00:39:12,960 --> 00:39:14,960
whatever the address is or you can have

984
00:39:14,960 --> 00:39:17,599
smaller addresses

985
00:39:17,599 --> 00:39:18,960
also

986
00:39:18,960 --> 00:39:21,520
this privacy thing if

987
00:39:21,520 --> 00:39:23,680
wherever i were if somebody knew what

988
00:39:23,680 --> 00:39:26,560
the mac address of my laptop was

989
00:39:26,560 --> 00:39:29,119
and they saw an ip packet going on and

990
00:39:29,119 --> 00:39:31,760
they saw that my um

991
00:39:31,760 --> 00:39:35,520
um matt well a clnp um if they saw my

992
00:39:35,520 --> 00:39:37,599
mac address in there they'd with the

993
00:39:37,599 --> 00:39:40,000
chinese prefix they could say aha radius

994
00:39:40,000 --> 00:39:42,560
visit visiting china right now but with

995
00:39:42,560 --> 00:39:45,359
dhcp you get sort of a temporary thing

996
00:39:45,359 --> 00:39:47,680
for where you happen to be

997
00:39:47,680 --> 00:39:50,560
so another cool thing is nats network

998
00:39:50,560 --> 00:39:54,640
address translation so there's this box

999
00:39:54,640 --> 00:39:56,480
your private network has a block of

1000
00:39:56,480 --> 00:39:59,520
addresses that have no meaning outside

1001
00:39:59,520 --> 00:40:02,320
of your network and lots of private

1002
00:40:02,320 --> 00:40:04,319
networks can have the same block of

1003
00:40:04,319 --> 00:40:06,880
addresses and you have this magic box

1004
00:40:06,880 --> 00:40:09,920
called a net which has a pool of

1005
00:40:09,920 --> 00:40:12,480
globally reachable addresses

1006
00:40:12,480 --> 00:40:15,119
and when somebody inside well somebody

1007
00:40:15,119 --> 00:40:17,280
outside just cannot actually talk to

1008
00:40:17,280 --> 00:40:19,680
anybody inside your network unless the

1009
00:40:19,680 --> 00:40:22,480
thing inside your network talks first so

1010
00:40:22,480 --> 00:40:23,760
if g

1011
00:40:23,760 --> 00:40:25,680
talks to z

1012
00:40:25,680 --> 00:40:28,880
um which is some server on the um

1013
00:40:28,880 --> 00:40:30,800
on the internet

1014
00:40:30,800 --> 00:40:34,240
it'll say the source is g my local

1015
00:40:34,240 --> 00:40:37,280
address and the destination is z and the

1016
00:40:37,280 --> 00:40:40,240
nat box says oh okay i have to give this

1017
00:40:40,240 --> 00:40:44,079
guy a um a globally reachable address

1018
00:40:44,079 --> 00:40:46,240
and so it makes a mapping saying that

1019
00:40:46,240 --> 00:40:48,079
the local address g

1020
00:40:48,079 --> 00:40:50,319
is the global address k

1021
00:40:50,319 --> 00:40:54,880
and it rewrites the um source address as

1022
00:40:54,880 --> 00:40:56,480
capital k

1023
00:40:56,480 --> 00:40:59,440
and then when z returns the packet it'll

1024
00:40:59,440 --> 00:41:00,480
say

1025
00:41:00,480 --> 00:41:02,800
i'm the source z and the destination is

1026
00:41:02,800 --> 00:41:05,440
k and the nat box will replace that with

1027
00:41:05,440 --> 00:41:07,280
the local thing

1028
00:41:07,280 --> 00:41:09,040
so

1029
00:41:09,040 --> 00:41:12,240
the properties of nat are that nodes

1030
00:41:12,240 --> 00:41:14,560
inside the private network can't be

1031
00:41:14,560 --> 00:41:17,280
contacted from outside unless the inner

1032
00:41:17,280 --> 00:41:18,160
guide

1033
00:41:18,160 --> 00:41:20,800
talks first which is a wonderful

1034
00:41:20,800 --> 00:41:23,040
security thing actually

1035
00:41:23,040 --> 00:41:26,240
it lets us live with ipv4 perhaps

1036
00:41:26,240 --> 00:41:29,440
indefinitely and a case can be made that

1037
00:41:29,440 --> 00:41:32,560
ipv6 with its 16 byte address doesn't

1038
00:41:32,560 --> 00:41:34,880
give you anything you can't get with

1039
00:41:34,880 --> 00:41:39,040
ipv4 plus nets and not only can a case

1040
00:41:39,040 --> 00:41:41,680
be made for it but a very eloquent case

1041
00:41:41,680 --> 00:41:45,200
was made by jeff houston in his talk in

1042
00:41:45,200 --> 00:41:48,079
defense of gnats which is both the audio

1043
00:41:48,079 --> 00:41:50,800
and the slides are on the on the net

1044
00:41:50,800 --> 00:41:53,280
but there was this amazing hatred of

1045
00:41:53,280 --> 00:41:54,400
gnats

1046
00:41:54,400 --> 00:41:57,119
um so um you know especially by the

1047
00:41:57,119 --> 00:41:59,599
people that really wanted to see ipv6

1048
00:41:59,599 --> 00:42:02,400
deployed they were seeing um ip you know

1049
00:42:02,400 --> 00:42:05,440
gnats were causing ipv6 not to get

1050
00:42:05,440 --> 00:42:06,560
deployed

1051
00:42:06,560 --> 00:42:08,880
so one thing they were saying was we

1052
00:42:08,880 --> 00:42:11,760
should not help gnats by documenting how

1053
00:42:11,760 --> 00:42:12,960
they work

1054
00:42:12,960 --> 00:42:14,400
now

1055
00:42:14,400 --> 00:42:16,400
i was helping to sort of design a

1056
00:42:16,400 --> 00:42:19,040
protocol and you know ip

1057
00:42:19,040 --> 00:42:22,560
sec that needed to work through nets and

1058
00:42:22,560 --> 00:42:24,240
there was no documentation and

1059
00:42:24,240 --> 00:42:26,400
furthermore the gnats worked slightly

1060
00:42:26,400 --> 00:42:28,400
differently so to try to design your

1061
00:42:28,400 --> 00:42:30,079
protocol so that it would work through

1062
00:42:30,079 --> 00:42:33,440
any of these nets was was painful

1063
00:42:33,440 --> 00:42:36,960
um another one was um with ipsec there

1064
00:42:36,960 --> 00:42:39,280
were two headers for

1065
00:42:39,280 --> 00:42:42,160
um a an encrypted data packet a

1066
00:42:42,160 --> 00:42:44,720
cryptographically protected data packet

1067
00:42:44,720 --> 00:42:46,720
one was ah

1068
00:42:46,720 --> 00:42:50,079
for authentication header which was

1069
00:42:50,079 --> 00:42:53,040
um just integrity protection

1070
00:42:53,040 --> 00:42:56,640
and esp was originally just encryption

1071
00:42:56,640 --> 00:42:58,960
and so if you wanted to have a packet

1072
00:42:58,960 --> 00:43:01,839
that was um ipsec

1073
00:43:01,839 --> 00:43:03,839
cryptographically protected with both

1074
00:43:03,839 --> 00:43:06,400
encryption and integrity protection you

1075
00:43:06,400 --> 00:43:08,640
would have two headers on it the ah and

1076
00:43:08,640 --> 00:43:09,920
the esp

1077
00:43:09,920 --> 00:43:10,800
um

1078
00:43:10,800 --> 00:43:13,440
but then and these two committees sort

1079
00:43:13,440 --> 00:43:15,200
of didn't really talk to each other they

1080
00:43:15,200 --> 00:43:17,119
weren't paying attention to each other

1081
00:43:17,119 --> 00:43:20,319
the ah people were really the ipv6

1082
00:43:20,319 --> 00:43:23,839
zealots and the esp people were security

1083
00:43:23,839 --> 00:43:28,000
geeks and um so at some point the esp

1084
00:43:28,000 --> 00:43:29,839
people said you know it's really

1085
00:43:29,839 --> 00:43:31,839
dangerous to have encryption without

1086
00:43:31,839 --> 00:43:34,000
integrity protection so we'll add

1087
00:43:34,000 --> 00:43:36,800
optional integrity protection so the ah

1088
00:43:36,800 --> 00:43:39,280
people weren't paying attention so um

1089
00:43:39,280 --> 00:43:41,440
they managed the esp people added

1090
00:43:41,440 --> 00:43:43,760
optional integrity protection and then

1091
00:43:43,760 --> 00:43:47,760
my my favorite rfc ever the esp people

1092
00:43:47,760 --> 00:43:48,880
said hey

1093
00:43:48,880 --> 00:43:49,920
um

1094
00:43:49,920 --> 00:43:50,960
um

1095
00:43:50,960 --> 00:43:53,119
sometimes you might only want integrity

1096
00:43:53,119 --> 00:43:56,000
protection so um you know for

1097
00:43:56,000 --> 00:43:58,079
performance or something you don't need

1098
00:43:58,079 --> 00:44:00,240
encryption so we should make encryption

1099
00:44:00,240 --> 00:44:02,160
optional at that point the ah people

1100
00:44:02,160 --> 00:44:04,240
were paying attention and they said hey

1101
00:44:04,240 --> 00:44:06,240
no you're not allowed to do that esp

1102
00:44:06,240 --> 00:44:08,319
means you must have encryption if you

1103
00:44:08,319 --> 00:44:11,280
want integrity only you have to use ah

1104
00:44:11,280 --> 00:44:13,599
so the esp people said

1105
00:44:13,599 --> 00:44:15,040
okay

1106
00:44:15,040 --> 00:44:17,280
and we can live with that encryption is

1107
00:44:17,280 --> 00:44:19,359
mandatory but we can invent any

1108
00:44:19,359 --> 00:44:21,920
encryption algorithm we want right and

1109
00:44:21,920 --> 00:44:24,960
so um the ah people said why certainly

1110
00:44:24,960 --> 00:44:27,920
you guys are cryptographers so um they

1111
00:44:27,920 --> 00:44:30,000
came out with my favorite rfc which i

1112
00:44:30,000 --> 00:44:32,800
think is 2401 or something

1113
00:44:32,800 --> 00:44:35,280
which is null encryption

1114
00:44:35,280 --> 00:44:38,400
and it's a fantastically written rfc it

1115
00:44:38,400 --> 00:44:40,319
talks about how

1116
00:44:40,319 --> 00:44:42,640
flexible this algorithm is it works with

1117
00:44:42,640 --> 00:44:44,400
any key size you don't even have to

1118
00:44:44,400 --> 00:44:46,880
agree on the key

1119
00:44:46,880 --> 00:44:49,280
it's very fast and it even has some test

1120
00:44:49,280 --> 00:44:51,599
data to test your implementation against

1121
00:44:51,599 --> 00:44:53,119
them

1122
00:44:53,119 --> 00:44:55,200
so um anyway

1123
00:44:55,200 --> 00:44:56,880
what's different about the integrity

1124
00:44:56,880 --> 00:45:01,119
protection of esp versus ah is that esp

1125
00:45:01,119 --> 00:45:03,520
protects the packet

1126
00:45:03,520 --> 00:45:07,760
um that's inside of the um ip header

1127
00:45:07,760 --> 00:45:09,760
whereas ah

1128
00:45:09,760 --> 00:45:12,720
one of the goals was let's break nets

1129
00:45:12,720 --> 00:45:15,119
and so they um

1130
00:45:15,119 --> 00:45:16,079
um

1131
00:45:16,079 --> 00:45:18,880
the ah integrity protection also

1132
00:45:18,880 --> 00:45:21,280
includes the ip header

1133
00:45:21,280 --> 00:45:24,880
so that if a nat were to replace the

1134
00:45:24,880 --> 00:45:27,280
source and destination address

1135
00:45:27,280 --> 00:45:30,079
the destination would receive the packet

1136
00:45:30,079 --> 00:45:31,920
but it would reject it because the

1137
00:45:31,920 --> 00:45:34,400
integrity check wouldn't work and the

1138
00:45:34,400 --> 00:45:37,839
vision was that once they deployed this

1139
00:45:37,839 --> 00:45:41,200
wondrous ah thing um people would say

1140
00:45:41,200 --> 00:45:43,520
hey but the it's not working with the

1141
00:45:43,520 --> 00:45:45,520
nets let's get rid of nets

1142
00:45:45,520 --> 00:45:48,560
but much more likely scenario is that

1143
00:45:48,560 --> 00:45:50,000
people would say

1144
00:45:50,000 --> 00:45:50,800
hey

1145
00:45:50,800 --> 00:45:52,560
everything was working and then you

1146
00:45:52,560 --> 00:45:54,079
deployed this thing and things are

1147
00:45:54,079 --> 00:45:56,560
breaking get rid of that thing

1148
00:45:56,560 --> 00:45:59,760
but it doesn't matter anyway because

1149
00:45:59,760 --> 00:46:03,920
esp just works so you you don't need ah

1150
00:46:03,920 --> 00:46:07,119
but um nats are actually good even if we

1151
00:46:07,119 --> 00:46:10,160
had infinite addresses not enhances

1152
00:46:10,160 --> 00:46:11,920
security

1153
00:46:11,920 --> 00:46:13,680
it also allows different types of

1154
00:46:13,680 --> 00:46:15,920
addresses in different portions of the

1155
00:46:15,920 --> 00:46:17,760
network

1156
00:46:17,760 --> 00:46:20,800
so in summary

1157
00:46:20,800 --> 00:46:22,400
there were all these arguments about

1158
00:46:22,400 --> 00:46:26,640
csma cd versus token ring versus token

1159
00:46:26,640 --> 00:46:28,560
bus and they're all irrelevant

1160
00:46:28,560 --> 00:46:30,960
um i mean even today i sometimes hang

1161
00:46:30,960 --> 00:46:33,200
out with old-timers that say oh boy the

1162
00:46:33,200 --> 00:46:35,520
industry dodged a bullet with

1163
00:46:35,520 --> 00:46:37,760
not you know had they inven

1164
00:46:37,760 --> 00:46:40,640
adopted token ring boy you know um it's

1165
00:46:40,640 --> 00:46:42,800
sort of like um

1166
00:46:42,800 --> 00:46:44,480
civilization could not have worked

1167
00:46:44,480 --> 00:46:47,040
without english you know

1168
00:46:47,040 --> 00:46:48,960
right but especially because we're not

1169
00:46:48,960 --> 00:46:52,000
using the csma cd thing it

1170
00:46:52,000 --> 00:46:54,240
you know that's kind of irrelevant

1171
00:46:54,240 --> 00:46:58,319
um both dhcp and net which i've you know

1172
00:46:58,319 --> 00:47:00,560
waxed rhapsodic about they would work

1173
00:47:00,560 --> 00:47:02,880
just fine with any layer 3 protocol

1174
00:47:02,880 --> 00:47:05,440
including clnp and the question is would

1175
00:47:05,440 --> 00:47:07,839
people have thought of inventing it

1176
00:47:07,839 --> 00:47:09,040
um

1177
00:47:09,040 --> 00:47:11,680
and let's see so closing thoughts

1178
00:47:11,680 --> 00:47:15,119
um tribalism is bad um

1179
00:47:15,119 --> 00:47:18,079
you know it i wish we didn't do that

1180
00:47:18,079 --> 00:47:19,520
um

1181
00:47:19,520 --> 00:47:21,440
the technology that wins isn't

1182
00:47:21,440 --> 00:47:25,119
necessarily the best technology

1183
00:47:25,119 --> 00:47:28,480
auto configuration is good

1184
00:47:28,480 --> 00:47:31,040
especially like i like it because i sort

1185
00:47:31,040 --> 00:47:34,079
of hate technology

1186
00:47:34,079 --> 00:47:36,000
and

1187
00:47:36,000 --> 00:47:37,520
you should know what problem you're

1188
00:47:37,520 --> 00:47:39,359
solving so in my book i have these

1189
00:47:39,359 --> 00:47:41,040
little boxes that

1190
00:47:41,040 --> 00:47:43,359
are real-world analogies to the point

1191
00:47:43,359 --> 00:47:45,680
i'm trying to make so for instance for

1192
00:47:45,680 --> 00:47:48,240
scalability i talk about the wine glass

1193
00:47:48,240 --> 00:47:51,040
clicking protocol which works fine if

1194
00:47:51,040 --> 00:47:53,119
you have six people but if you have 12

1195
00:47:53,119 --> 00:47:54,960
people everyone has to click that

1196
00:47:54,960 --> 00:47:57,119
doesn't make any sense so the one that's

1197
00:47:57,119 --> 00:47:59,760
absolutely everybody's favorite and it's

1198
00:47:59,760 --> 00:48:02,079
a hundred percent true is when i was

1199
00:48:02,079 --> 00:48:03,440
trying to

1200
00:48:03,440 --> 00:48:05,040
illustrate that you should know what

1201
00:48:05,040 --> 00:48:07,040
problem you're solving before you try to

1202
00:48:07,040 --> 00:48:09,440
solve it um this industry like people

1203
00:48:09,440 --> 00:48:11,040
sort of hear

1204
00:48:11,040 --> 00:48:13,440
a vague idea they start writing code and

1205
00:48:13,440 --> 00:48:15,440
it doesn't work in all cases they add

1206
00:48:15,440 --> 00:48:16,960
more stuff and they

1207
00:48:16,960 --> 00:48:18,720
wind up with this super complicated

1208
00:48:18,720 --> 00:48:20,160
thing

1209
00:48:20,160 --> 00:48:22,160
so the thing that will forever cement in

1210
00:48:22,160 --> 00:48:23,680
your mind that you should know what

1211
00:48:23,680 --> 00:48:25,440
problem you're solving before you try to

1212
00:48:25,440 --> 00:48:28,079
solve it is that when my son was three

1213
00:48:28,079 --> 00:48:30,559
he ran up to me crying holding up his

1214
00:48:30,559 --> 00:48:34,160
hand saying i need my hand my hand so i

1215
00:48:34,160 --> 00:48:37,359
took it and i kissed it a few times

1216
00:48:37,359 --> 00:48:39,599
what's the matter honey did you heard it

1217
00:48:39,599 --> 00:48:40,720
and he said

1218
00:48:40,720 --> 00:48:45,720
no i got pee on it

1219
00:48:50,470 --> 00:48:53,669
[Applause]

1220
00:48:54,559 --> 00:48:57,359
so um as i said i have another slide

1221
00:48:57,359 --> 00:48:59,359
full of things i could rant about but if

1222
00:48:59,359 --> 00:49:03,839
um we have questions that's fine too so

1223
00:49:04,000 --> 00:49:05,200
a rant

1224
00:49:05,200 --> 00:49:08,160
well okay

1225
00:49:08,319 --> 00:49:12,160
so let's see what kind of um

1226
00:49:12,160 --> 00:49:14,880
security is built into ibv6 but it's

1227
00:49:14,880 --> 00:49:17,520
just an add-on to ipv4 where did that

1228
00:49:17,520 --> 00:49:21,200
come from well the ipsec specs says that

1229
00:49:21,200 --> 00:49:24,319
it's mandatory to implement for ipv6 and

1230
00:49:24,319 --> 00:49:28,400
optional for ipv4 and it's not like ip

1231
00:49:28,400 --> 00:49:30,800
sec works better with one than the other

1232
00:49:30,800 --> 00:49:33,040
it's just words in the spec and just

1233
00:49:33,040 --> 00:49:34,880
because there's words in a spec it

1234
00:49:34,880 --> 00:49:36,960
turned out that you know at least

1235
00:49:36,960 --> 00:49:38,800
shortly when people were saying this all

1236
00:49:38,800 --> 00:49:41,119
the time there were more implementations

1237
00:49:41,119 --> 00:49:45,359
of ipv6 without ipsec than with ipsec

1238
00:49:45,359 --> 00:49:48,160
there were more implementations of ipsec

1239
00:49:48,160 --> 00:49:49,920
for ipv4

1240
00:49:49,920 --> 00:49:53,280
than for ipv6 and furthermore

1241
00:49:53,280 --> 00:49:56,880
ipsec is not equivalent to security

1242
00:49:56,880 --> 00:49:58,400
there's um

1243
00:49:58,400 --> 00:49:59,359
you know like

1244
00:49:59,359 --> 00:50:01,359
anything you can do with ipsec you can

1245
00:50:01,359 --> 00:50:06,800
do with tls so or ssl um so it's um you

1246
00:50:06,800 --> 00:50:08,720
know it's just kind of this nonsense

1247
00:50:08,720 --> 00:50:09,599
thing

1248
00:50:09,599 --> 00:50:11,760
so let's see what else can i talk about

1249
00:50:11,760 --> 00:50:13,760
quantum and post quantum

1250
00:50:13,760 --> 00:50:17,680
so um it's it's sort of funny these um

1251
00:50:17,680 --> 00:50:20,480
misconceptions that people have so they

1252
00:50:20,480 --> 00:50:23,680
know that quantum is um a quantum

1253
00:50:23,680 --> 00:50:26,319
computer is like a gazillion times

1254
00:50:26,319 --> 00:50:28,480
faster than a classical computer you run

1255
00:50:28,480 --> 00:50:30,319
the same program on the

1256
00:50:30,319 --> 00:50:32,319
quantum computer and it'll just be like

1257
00:50:32,319 --> 00:50:34,960
so much faster and this is you know

1258
00:50:34,960 --> 00:50:37,440
completely untrue but at any rate

1259
00:50:37,440 --> 00:50:39,280
quantum is like really hard to

1260
00:50:39,280 --> 00:50:40,800
understand so

1261
00:50:40,800 --> 00:50:43,680
um you know like eventually all our um

1262
00:50:43,680 --> 00:50:45,920
laptops will be too slow and so we'll

1263
00:50:45,920 --> 00:50:48,880
all be using uh quantum laptops

1264
00:50:48,880 --> 00:50:49,920
and then

1265
00:50:49,920 --> 00:50:52,720
this is all not true by the way and um

1266
00:50:52,720 --> 00:50:55,839
then they hear about post quantum and my

1267
00:50:55,839 --> 00:50:57,760
goodness you have to be like a genius to

1268
00:50:57,760 --> 00:50:59,760
understand quantum so you have to be

1269
00:50:59,760 --> 00:51:02,000
like a super super genius to understand

1270
00:51:02,000 --> 00:51:05,200
post quantum so post quantum is a term

1271
00:51:05,200 --> 00:51:08,400
that i really um i'm annoyed at nist for

1272
00:51:08,400 --> 00:51:09,680
calling

1273
00:51:09,680 --> 00:51:12,240
replacement algorithm replacement public

1274
00:51:12,240 --> 00:51:13,920
key algorithms they are calling them

1275
00:51:13,920 --> 00:51:16,240
post quantum

1276
00:51:16,240 --> 00:51:17,200
so

1277
00:51:17,200 --> 00:51:19,040
if we had a quantum computer that was

1278
00:51:19,040 --> 00:51:21,119
sufficiently large it would make the

1279
00:51:21,119 --> 00:51:23,599
currently deployed public key algorithms

1280
00:51:23,599 --> 00:51:26,319
rsa and elliptic curves insecure so we

1281
00:51:26,319 --> 00:51:28,559
have to replace them with something else

1282
00:51:28,559 --> 00:51:30,319
and so they're calling the something

1283
00:51:30,319 --> 00:51:31,920
else which are just normal old

1284
00:51:31,920 --> 00:51:34,480
algorithms running on a normal computer

1285
00:51:34,480 --> 00:51:36,400
but just based on different math and

1286
00:51:36,400 --> 00:51:39,119
factoring um they're calling them post

1287
00:51:39,119 --> 00:51:40,079
quantum

1288
00:51:40,079 --> 00:51:43,119
so anyway um oh and internet security i

1289
00:51:43,119 --> 00:51:46,880
love this thing so um

1290
00:51:47,280 --> 00:51:50,480
we know how to do security the theory is

1291
00:51:50,480 --> 00:51:51,520
beautiful

1292
00:51:51,520 --> 00:51:55,200
so if i want to talk to some website um

1293
00:51:55,200 --> 00:51:58,079
let's say bank of america

1294
00:51:58,079 --> 00:52:00,400
it gets a dns name

1295
00:52:00,400 --> 00:52:02,640
and it gets a certificate

1296
00:52:02,640 --> 00:52:03,440
and

1297
00:52:03,440 --> 00:52:06,240
um my laptop i say talk to bank of

1298
00:52:06,240 --> 00:52:10,640
america and um it sends the certificate

1299
00:52:10,640 --> 00:52:12,720
and wondrous protocols wonderful

1300
00:52:12,720 --> 00:52:16,319
cryptography and everything just works

1301
00:52:16,319 --> 00:52:17,119
well

1302
00:52:17,119 --> 00:52:18,559
that's in theory

1303
00:52:18,559 --> 00:52:20,400
in practice i wanted to renew my

1304
00:52:20,400 --> 00:52:22,800
washington state driver's license and i

1305
00:52:22,800 --> 00:52:25,359
knew you could do it online

1306
00:52:25,359 --> 00:52:26,240
so i

1307
00:52:26,240 --> 00:52:27,839
googled

1308
00:52:27,839 --> 00:52:29,520
renewed washington state driver's

1309
00:52:29,520 --> 00:52:32,880
license and the first search um

1310
00:52:32,880 --> 00:52:37,040
thing which is always the right one um

1311
00:52:37,040 --> 00:52:39,839
had i bothered to look at this huge url

1312
00:52:39,839 --> 00:52:42,240
um it had a perfectly reasonable dns

1313
00:52:42,240 --> 00:52:43,760
name in it which was something like

1314
00:52:43,760 --> 00:52:46,319
washingtonlicensing.org

1315
00:52:46,319 --> 00:52:48,640
so i clicked on it and it was this

1316
00:52:48,640 --> 00:52:50,880
wonderful website

1317
00:52:50,880 --> 00:52:52,480
with like

1318
00:52:52,480 --> 00:52:53,440
happy

1319
00:52:53,440 --> 00:52:56,000
pictures of really happy people

1320
00:52:56,000 --> 00:52:58,079
that you could click on for renew your

1321
00:52:58,079 --> 00:53:02,000
license replace a loss license you know

1322
00:53:02,000 --> 00:53:04,720
get a new license whatever and so i

1323
00:53:04,720 --> 00:53:06,720
clicked on renew license it asked me

1324
00:53:06,720 --> 00:53:08,800
everything i expected my address my

1325
00:53:08,800 --> 00:53:11,200
license number and my credit card number

1326
00:53:11,200 --> 00:53:13,359
and then a few days later the fraud

1327
00:53:13,359 --> 00:53:15,119
department of my bank called me up and

1328
00:53:15,119 --> 00:53:18,480
said ah there's all these charges

1329
00:53:18,480 --> 00:53:19,680
um

1330
00:53:19,680 --> 00:53:21,920
are these legitimate and i realized what

1331
00:53:21,920 --> 00:53:25,920
must have happened and they said oh um

1332
00:53:25,920 --> 00:53:27,680
they said we'll disallow all those

1333
00:53:27,680 --> 00:53:29,839
charges and give you a new credit card

1334
00:53:29,839 --> 00:53:31,040
so what's

1335
00:53:31,040 --> 00:53:33,280
really amazing is that

1336
00:53:33,280 --> 00:53:36,079
there's zero security there because

1337
00:53:36,079 --> 00:53:38,880
humans don't start out by typing a dns

1338
00:53:38,880 --> 00:53:40,000
name

1339
00:53:40,000 --> 00:53:42,640
so um you know what

1340
00:53:42,640 --> 00:53:46,240
the dns name was you know

1341
00:53:47,960 --> 00:53:50,400
wa.dmv.gov or something why was i as a

1342
00:53:50,400 --> 00:53:52,800
human supposed to know that so at any

1343
00:53:52,800 --> 00:53:54,400
rate i should let people ask some

1344
00:53:54,400 --> 00:53:56,880
questions and if there's any time i'll

1345
00:53:56,880 --> 00:53:58,559
i'll

1346
00:53:58,559 --> 00:54:00,640
rant about some of these things

1347
00:54:00,640 --> 00:54:02,559
so okay

1348
00:54:02,559 --> 00:54:04,079
excellent talk thank you very much alan

1349
00:54:04,079 --> 00:54:06,240
hannan i'm retired um

1350
00:54:06,240 --> 00:54:07,760
i worked at a network company called

1351
00:54:07,760 --> 00:54:09,680
unet back in 96

1352
00:54:09,680 --> 00:54:11,839
and my boss's boss was a gentleman named

1353
00:54:11,839 --> 00:54:13,280
heidi hayden

1354
00:54:13,280 --> 00:54:14,240
um

1355
00:54:14,240 --> 00:54:15,760
i think there's a quote that history has

1356
00:54:15,760 --> 00:54:17,599
written by the winners but i remember i

1357
00:54:17,599 --> 00:54:19,760
was told that heidi hayden was

1358
00:54:19,760 --> 00:54:21,599
instrumental in choosing

1359
00:54:21,599 --> 00:54:24,480
uh ip over clnp or

1360
00:54:24,480 --> 00:54:28,319
v6 i'm sorry tcp over clnv

1361
00:54:28,319 --> 00:54:31,839
no no tcp would have oh for choosing to

1362
00:54:31,839 --> 00:54:34,480
run tcp over clnp i think i butchered

1363
00:54:34,480 --> 00:54:36,480
the question entirely but that's right

1364
00:54:36,480 --> 00:54:38,960
okay because tcp is not a replacement

1365
00:54:38,960 --> 00:54:42,960
for clnp okay it's ipv6 and yeah

1366
00:54:42,960 --> 00:54:45,200
okay okay

1367
00:54:45,200 --> 00:54:47,200
but there was there was a choice to not

1368
00:54:47,200 --> 00:54:50,160
use clnp in lieu of something else right

1369
00:54:50,160 --> 00:54:51,119
um

1370
00:54:51,119 --> 00:54:53,920
in they didn't want to use clnp instead

1371
00:54:53,920 --> 00:54:55,359
they wanted to

1372
00:54:55,359 --> 00:54:57,440
design something new that was going to

1373
00:54:57,440 --> 00:55:01,440
be wondrously better okay yeah so

1374
00:55:01,440 --> 00:55:03,280
given that i've terribly butchered my

1375
00:55:03,280 --> 00:55:04,880
question i'll restate it

1376
00:55:04,880 --> 00:55:06,559
i was told that heidi hayden was the one

1377
00:55:06,559 --> 00:55:08,799
that caused the internet to use ip and

1378
00:55:08,799 --> 00:55:10,880
not to go down the the

1379
00:55:10,880 --> 00:55:12,799
that route is there any veracity of that

1380
00:55:12,799 --> 00:55:14,480
um there were lots of people there

1381
00:55:14,480 --> 00:55:16,240
weren't that many but they were very

1382
00:55:16,240 --> 00:55:19,040
vocal so i'm not sure there's any one

1383
00:55:19,040 --> 00:55:22,559
person that um should take the credit

1384
00:55:22,559 --> 00:55:24,400
for that decision

1385
00:55:24,400 --> 00:55:27,200
thanks yeah

1386
00:55:27,359 --> 00:55:30,880
hi lee howard from ipv4.global by hilco

1387
00:55:30,880 --> 00:55:32,480
stream bank which

1388
00:55:32,480 --> 00:55:34,559
ironically i'm the author of an internet

1389
00:55:34,559 --> 00:55:37,280
draft trying to declare ipv4 historic

1390
00:55:37,280 --> 00:55:38,480
um

1391
00:55:38,480 --> 00:55:41,359
it it seems so i you said nat is good it

1392
00:55:41,359 --> 00:55:44,160
provides security i've read many times

1393
00:55:44,160 --> 00:55:46,880
that most implementations of nat as has

1394
00:55:46,880 --> 00:55:49,200
implemented in the wild um open a full

1395
00:55:49,200 --> 00:55:50,240
cone net

1396
00:55:50,240 --> 00:55:51,920
meaning once you have a connection to

1397
00:55:51,920 --> 00:55:54,720
something anything else can come in

1398
00:55:54,720 --> 00:55:57,760
and my observation is that any device

1399
00:55:57,760 --> 00:56:00,160
that's on has a connection to something

1400
00:56:00,160 --> 00:56:01,599
i don't know if that's true but so i

1401
00:56:01,599 --> 00:56:03,599
wanted to ask do you know if that's true

1402
00:56:03,599 --> 00:56:05,839
and does that

1403
00:56:05,839 --> 00:56:07,440
and so therefore would we still argue

1404
00:56:07,440 --> 00:56:10,240
that that's provide enhanced security

1405
00:56:10,240 --> 00:56:13,440
right so um um i'm not sure whether it's

1406
00:56:13,440 --> 00:56:15,680
true i was actually wondering that

1407
00:56:15,680 --> 00:56:18,240
myself you can certainly implement it so

1408
00:56:18,240 --> 00:56:21,680
that when you have the entry for um

1409
00:56:21,680 --> 00:56:24,559
replacing g's address with it could be

1410
00:56:24,559 --> 00:56:27,599
um a four tuple or whatever that also

1411
00:56:27,599 --> 00:56:28,480
says

1412
00:56:28,480 --> 00:56:30,960
when this guy is talking to that guy i'm

1413
00:56:30,960 --> 00:56:33,760
going to have this entry um in which

1414
00:56:33,760 --> 00:56:36,079
case it would not be true that once you

1415
00:56:36,079 --> 00:56:38,960
talk to somebody anybody can talk to you

1416
00:56:38,960 --> 00:56:41,599
so um i don't know if the majority of

1417
00:56:41,599 --> 00:56:43,920
implementations do one thing versus the

1418
00:56:43,920 --> 00:56:46,400
other especially because

1419
00:56:46,400 --> 00:56:48,559
nobody wanted to help nats by writing

1420
00:56:48,559 --> 00:56:50,160
down what they do but it could work

1421
00:56:50,160 --> 00:56:52,640
either way and it's certainly preferable

1422
00:56:52,640 --> 00:56:55,680
it takes more table space if you

1423
00:56:55,680 --> 00:56:58,640
give a global address specifically for

1424
00:56:58,640 --> 00:57:02,720
two communicating pairs thank you yeah

1425
00:57:02,720 --> 00:57:03,920
i want to talk about other virtual

1426
00:57:03,920 --> 00:57:05,680
questions so we also have some virtual

1427
00:57:05,680 --> 00:57:06,960
questions i'm going to try and jump back

1428
00:57:06,960 --> 00:57:08,240
and forth between you guys in the mic

1429
00:57:08,240 --> 00:57:11,040
and virtual ones uh james harr wanted to

1430
00:57:11,040 --> 00:57:12,720
know what do you make of the networking

1431
00:57:12,720 --> 00:57:15,280
world's effect to use route ethernet by

1432
00:57:15,280 --> 00:57:18,319
tunneling it evpn and the like

1433
00:57:18,319 --> 00:57:19,440
um

1434
00:57:19,440 --> 00:57:21,040
okay

1435
00:57:21,040 --> 00:57:23,280
i'm not sure what to say about that it's

1436
00:57:23,280 --> 00:57:24,880
sort of very weird

1437
00:57:24,880 --> 00:57:28,319
these layering things so um

1438
00:57:28,319 --> 00:57:31,280
you know like run everything over http

1439
00:57:31,280 --> 00:57:34,079
because it's firewall friendly what does

1440
00:57:34,079 --> 00:57:35,680
that mean you know it's not like it's

1441
00:57:35,680 --> 00:57:39,119
easier for a firewall to forward http

1442
00:57:39,119 --> 00:57:42,640
but in general they allow uh http

1443
00:57:42,640 --> 00:57:46,319
traffic through so if you run ip on top

1444
00:57:46,319 --> 00:57:48,799
of http so you can do anything you know

1445
00:57:48,799 --> 00:57:51,280
what layer is what so indeed you could

1446
00:57:51,280 --> 00:57:53,359
tunnel ethernet so that you could have

1447
00:57:53,359 --> 00:57:57,680
two ethernets and connect them via an ip

1448
00:57:57,680 --> 00:58:00,319
tunnel you can do that i'm not sure why

1449
00:58:00,319 --> 00:58:02,400
anyone would do that but

1450
00:58:02,400 --> 00:58:03,760
um

1451
00:58:03,760 --> 00:58:04,720
yeah

1452
00:58:04,720 --> 00:58:06,400
anyway

1453
00:58:06,400 --> 00:58:09,040
so

1454
00:58:09,040 --> 00:58:11,760
anton capello uh five nines

1455
00:58:11,760 --> 00:58:13,520
uh thanks for the presentation radia uh

1456
00:58:13,520 --> 00:58:15,599
since i saw your video advertisement on

1457
00:58:15,599 --> 00:58:17,760
nanog's website weeks ago for this i was

1458
00:58:17,760 --> 00:58:19,040
really happy to see that you're gonna be

1459
00:58:19,040 --> 00:58:20,480
here so thanks for doing it making the

1460
00:58:20,480 --> 00:58:22,799
effort for it used to be on pc so taking

1461
00:58:22,799 --> 00:58:24,400
my pc head off

1462
00:58:24,400 --> 00:58:25,280
to you

1463
00:58:25,280 --> 00:58:26,079
uh

1464
00:58:26,079 --> 00:58:27,760
question for you you asked i think you

1465
00:58:27,760 --> 00:58:29,200
pointed out on your slide can you bring

1466
00:58:29,200 --> 00:58:31,359
it back up av is it too late for that

1467
00:58:31,359 --> 00:58:32,799
there was one slide you had a couple

1468
00:58:32,799 --> 00:58:34,240
principles or

1469
00:58:34,240 --> 00:58:35,839
things you wanted to wish us to do

1470
00:58:35,839 --> 00:58:37,200
asking questions i think about what

1471
00:58:37,200 --> 00:58:38,640
we're solving was number one is that

1472
00:58:38,640 --> 00:58:39,680
correct

1473
00:58:39,680 --> 00:58:42,559
um i i don't know

1474
00:58:42,559 --> 00:58:44,880
um maybe it's too late for that sorry

1475
00:58:44,880 --> 00:58:46,000
well if you could say sort of

1476
00:58:46,000 --> 00:58:48,400
specifically you'll uh remind me what

1477
00:58:48,400 --> 00:58:50,079
sure so it seems like there's been a

1478
00:58:50,079 --> 00:58:52,240
number of interesting junctions 92 mid

1479
00:58:52,240 --> 00:58:55,040
90s b4 v6 on ip

1480
00:58:55,040 --> 00:58:56,799
and we were asking questions like how to

1481
00:58:56,799 --> 00:58:58,799
run and how to number nodes essentially

1482
00:58:58,799 --> 00:59:01,200
on networks at that time it seems since

1483
00:59:01,200 --> 00:59:03,599
say 2000s this mobile thing i have one

1484
00:59:03,599 --> 00:59:05,680
in my hand here cell phone and so forth

1485
00:59:05,680 --> 00:59:07,760
has been a really i may be substantially

1486
00:59:07,760 --> 00:59:09,680
maybe the only dominant device that

1487
00:59:09,680 --> 00:59:11,280
we've seen grow and get in the hands of

1488
00:59:11,280 --> 00:59:12,720
more people in the world than any other

1489
00:59:12,720 --> 00:59:14,720
type of computer i would argue that

1490
00:59:14,720 --> 00:59:16,640
that's the case

1491
00:59:16,640 --> 00:59:20,000
why to you radio where do we think we

1492
00:59:20,000 --> 00:59:21,839
haven't asked the right questions about

1493
00:59:21,839 --> 00:59:24,000
network layers and how to make all stuff

1494
00:59:24,000 --> 00:59:26,079
talk i'm asking this because we had

1495
00:59:26,079 --> 00:59:28,240
things like mobile ip rfcs come and go

1496
00:59:28,240 --> 00:59:30,240
and no one figured it out and doing

1497
00:59:30,240 --> 00:59:32,480
things with dhcp were terrible shims and

1498
00:59:32,480 --> 00:59:35,119
it's not good with v6 either

1499
00:59:35,119 --> 00:59:36,559
what do you think about that are we

1500
00:59:36,559 --> 00:59:38,720
asking the right questions

1501
00:59:38,720 --> 00:59:41,119
anymore i feel like maybe not but i love

1502
00:59:41,119 --> 00:59:42,720
your perspective on that

1503
00:59:42,720 --> 00:59:43,920
yeah well

1504
00:59:43,920 --> 00:59:45,839
certainly if we were designing

1505
00:59:45,839 --> 00:59:47,839
everything from scratch we'd probably

1506
00:59:47,839 --> 00:59:49,599
come up with something cleaner i would

1507
00:59:49,599 --> 00:59:51,680
hope we would come up with something

1508
00:59:51,680 --> 00:59:52,960
cleaner

1509
00:59:52,960 --> 00:59:55,839
somebody who actually worked at nasa

1510
00:59:55,839 --> 00:59:58,240
said once at an ietf meeting after

1511
00:59:58,240 --> 00:59:59,599
someone was talking about all these

1512
00:59:59,599 --> 01:00:02,480
shims on top of whatever he said well

1513
01:00:02,480 --> 01:00:05,760
with enough thrust anything can fly

1514
01:00:05,760 --> 01:00:07,920
so

1515
01:00:08,160 --> 01:00:10,799
it's sort of like english is it's a

1516
01:00:10,799 --> 01:00:13,119
horrible language

1517
01:00:13,119 --> 01:00:16,400
but we can kind of make it work

1518
01:00:16,400 --> 01:00:18,559
we need extra words we'll have extra

1519
01:00:18,559 --> 01:00:20,400
words and whatever

1520
01:00:20,400 --> 01:00:21,760
um

1521
01:00:21,760 --> 01:00:22,880
so

1522
01:00:22,880 --> 01:00:25,280
i don't think we ever need to totally

1523
01:00:25,280 --> 01:00:27,760
rip everything apart um in order to make

1524
01:00:27,760 --> 01:00:30,400
the basic infrastructure work

1525
01:00:30,400 --> 01:00:32,079
but

1526
01:00:32,079 --> 01:00:34,960
that example that i gave of how i got

1527
01:00:34,960 --> 01:00:37,760
taken in by a scam

1528
01:00:37,760 --> 01:00:41,440
the fact that there's zero security in

1529
01:00:41,440 --> 01:00:43,359
practice

1530
01:00:43,359 --> 01:00:46,240
how there's it's the end of truth

1531
01:00:46,240 --> 01:00:48,160
because you can tune into whatever you

1532
01:00:48,160 --> 01:00:50,559
want you have all these bots that decide

1533
01:00:50,559 --> 01:00:52,960
what you think what they think you're

1534
01:00:52,960 --> 01:00:54,559
interested in and they'll give you more

1535
01:00:54,559 --> 01:00:56,960
and more extreme stuff

1536
01:00:56,960 --> 01:00:59,680
it sort of seems like it's the end of

1537
01:00:59,680 --> 01:01:01,359
civilization

1538
01:01:01,359 --> 01:01:03,920
but it's not due to the tiny little

1539
01:01:03,920 --> 01:01:06,319
tweaks of maybe we should have done this

1540
01:01:06,319 --> 01:01:08,400
in this this layer

1541
01:01:08,400 --> 01:01:12,720
so yeah got it later eight and nine

1542
01:01:12,720 --> 01:01:16,399
right thank you radio thank you

1543
01:01:16,799 --> 01:01:18,880
our next mobile question we had was from

1544
01:01:18,880 --> 01:01:20,720
blake willis thanks for the excellent

1545
01:01:20,720 --> 01:01:22,559
keynote we'd love to hear your opinions

1546
01:01:22,559 --> 01:01:23,760
on the

1547
01:01:23,760 --> 01:01:25,760
networking model of recursive transport

1548
01:01:25,760 --> 01:01:27,920
multiplex and airflow layers which is

1549
01:01:27,920 --> 01:01:29,200
the recursive internet network

1550
01:01:29,200 --> 01:01:31,119
architecture model for those of you not

1551
01:01:31,119 --> 01:01:34,640
familiar with it ah which includes me

1552
01:01:34,640 --> 01:01:37,359
i didn't know so i i don't know it's a

1553
01:01:37,359 --> 01:01:39,599
good acronym he gave us a link and i'll

1554
01:01:39,599 --> 01:01:42,240
send it to you later right right

1555
01:01:42,240 --> 01:01:44,319
yeah

1556
01:01:44,319 --> 01:01:46,480
hi jeff osborne isc

1557
01:01:46,480 --> 01:01:48,000
um

1558
01:01:48,000 --> 01:01:50,319
this was really enjoyable thank you so

1559
01:01:50,319 --> 01:01:52,319
much i had i was taking notes and

1560
01:01:52,319 --> 01:01:53,839
sending links off to people the whole

1561
01:01:53,839 --> 01:01:56,240
time and saying you wish you were here

1562
01:01:56,240 --> 01:01:58,559
i actually have a 35 year old question

1563
01:01:58,559 --> 01:02:00,240
that i realized you probably know the

1564
01:02:00,240 --> 01:02:02,559
answer to and i've never gotten one in

1565
01:02:02,559 --> 01:02:05,440
1987 we were putting a t1 link at tufts

1566
01:02:05,440 --> 01:02:07,440
university between medford and the

1567
01:02:07,440 --> 01:02:09,599
chinatown medical school

1568
01:02:09,599 --> 01:02:12,079
and t1 was a big deal at the time and

1569
01:02:12,079 --> 01:02:13,839
the ip guys were all excited about

1570
01:02:13,839 --> 01:02:16,079
putting a terminal server down there as

1571
01:02:16,079 --> 01:02:18,559
were the deck guys and we determined

1572
01:02:18,559 --> 01:02:21,359
that you couldn't

1573
01:02:21,359 --> 01:02:24,319
serve terminals on the ethernet segment

1574
01:02:24,319 --> 01:02:27,359
running decnet in boston without a vax

1575
01:02:27,359 --> 01:02:29,119
on it

1576
01:02:29,119 --> 01:02:30,160
and

1577
01:02:30,160 --> 01:02:31,760
i've just wondered ever since then you

1578
01:02:31,760 --> 01:02:33,119
didn't need

1579
01:02:33,119 --> 01:02:36,480
an ip you know unix machine anywhere

1580
01:02:36,480 --> 01:02:38,880
to serve terminals

1581
01:02:38,880 --> 01:02:41,520
why was that decision made

1582
01:02:41,520 --> 01:02:43,680
and does anybody else in the world even

1583
01:02:43,680 --> 01:02:44,960
remember this

1584
01:02:44,960 --> 01:02:48,799
yeah i don't i don't really remember it

1585
01:02:48,799 --> 01:02:51,039
but let me um quickly oh

1586
01:02:51,039 --> 01:02:52,480
yeah let me quickly rant about

1587
01:02:52,480 --> 01:02:53,839
blockchain

1588
01:02:53,839 --> 01:02:55,680
so

1589
01:02:55,680 --> 01:02:57,680
thank you very much given that i have

1590
01:02:57,680 --> 01:03:00,880
this chance to rant um so everyone knows

1591
01:03:00,880 --> 01:03:03,440
that blockchain gives you reliability

1592
01:03:03,440 --> 01:03:05,359
and security somehow

1593
01:03:05,359 --> 01:03:07,920
if you take any application and you add

1594
01:03:07,920 --> 01:03:10,000
blockchain to it it automatically

1595
01:03:10,000 --> 01:03:13,599
becomes secure and wonderful

1596
01:03:13,599 --> 01:03:16,559
and so i like to tell people no don't

1597
01:03:16,559 --> 01:03:18,960
say how can i use blockchain or what can

1598
01:03:18,960 --> 01:03:21,680
i do with blockchain um instead say what

1599
01:03:21,680 --> 01:03:24,079
problem am i solving look at various

1600
01:03:24,079 --> 01:03:26,880
types of ways of doing it and if

1601
01:03:26,880 --> 01:03:30,000
blockchain whatever that is um

1602
01:03:30,000 --> 01:03:32,000
is the best solution then

1603
01:03:32,000 --> 01:03:34,400
by all means use that though i have yet

1604
01:03:34,400 --> 01:03:35,359
to see

1605
01:03:35,359 --> 01:03:37,280
an application that really that makes

1606
01:03:37,280 --> 01:03:38,400
sense for

1607
01:03:38,400 --> 01:03:39,200
um

1608
01:03:39,200 --> 01:03:41,280
but then like um

1609
01:03:41,280 --> 01:03:44,720
i had an engineer say to me oh i agree

1610
01:03:44,720 --> 01:03:47,359
with you but my manager really wants me

1611
01:03:47,359 --> 01:03:49,839
to use blockchain so what should i do i

1612
01:03:49,839 --> 01:03:52,240
say well no do exactly what i said you

1613
01:03:52,240 --> 01:03:54,000
know consider the problem figure out the

1614
01:03:54,000 --> 01:03:56,319
best technical solution implement that

1615
01:03:56,319 --> 01:03:58,319
and then tell your manager you're using

1616
01:03:58,319 --> 01:04:00,240
blockchain

1617
01:04:00,240 --> 01:04:03,439
they'll never know the difference

1618
01:04:03,840 --> 01:04:06,720
[Applause]

1619
01:04:06,720 --> 01:04:08,880
so i guess yeah we have one or two more

1620
01:04:08,880 --> 01:04:10,000
and i think we have two minutes to

1621
01:04:10,000 --> 01:04:12,160
squeeze it in um john kristoff would

1622
01:04:12,160 --> 01:04:13,599
like to know if there's any plans for an

1623
01:04:13,599 --> 01:04:15,839
interconnections third edition

1624
01:04:15,839 --> 01:04:19,760
oh well for the last unbelievably huge

1625
01:04:19,760 --> 01:04:22,559
number of years embarrassingly i've been

1626
01:04:22,559 --> 01:04:25,039
working on the third edition of my

1627
01:04:25,039 --> 01:04:26,960
network security book which is why i

1628
01:04:26,960 --> 01:04:29,280
bothered to learn about quantum and it's

1629
01:04:29,280 --> 01:04:30,240
um

1630
01:04:30,240 --> 01:04:31,839
pitched at a different layer than

1631
01:04:31,839 --> 01:04:34,319
anything else i've leveled than anything

1632
01:04:34,319 --> 01:04:36,400
else i've seen everything on quantum is

1633
01:04:36,400 --> 01:04:38,319
either breathless hype

1634
01:04:38,319 --> 01:04:39,039
or

1635
01:04:39,039 --> 01:04:41,200
it's um

1636
01:04:41,200 --> 01:04:43,119
just throwing a bunch of equations at

1637
01:04:43,119 --> 01:04:44,880
you and going

1638
01:04:44,880 --> 01:04:47,680
um and you know i like to talk to actual

1639
01:04:47,680 --> 01:04:50,319
engineers so that um you know you can

1640
01:04:50,319 --> 01:04:52,480
actually get an intuition ah now i

1641
01:04:52,480 --> 01:04:54,880
understand what a program on a quantum

1642
01:04:54,880 --> 01:04:57,280
computer would look like and i actually

1643
01:04:57,280 --> 01:05:00,079
understand sure's algorithm um you know

1644
01:05:00,079 --> 01:05:02,079
explain how you can factor numbers with

1645
01:05:02,079 --> 01:05:04,640
it instead um so yeah it's been taking a

1646
01:05:04,640 --> 01:05:06,799
really long time

1647
01:05:06,799 --> 01:05:09,440
that should be done pretty soon

1648
01:05:09,440 --> 01:05:11,119
but maybe

1649
01:05:11,119 --> 01:05:14,319
um after that i might um

1650
01:05:14,319 --> 01:05:16,480
do a third edition of interconnections

1651
01:05:16,480 --> 01:05:18,880
if people would like that it would help

1652
01:05:18,880 --> 01:05:21,520
if they would like send me

1653
01:05:21,520 --> 01:05:23,280
um um

1654
01:05:23,280 --> 01:05:25,520
advice for what kinds of things are out

1655
01:05:25,520 --> 01:05:28,480
of date i try not to do things that are

1656
01:05:28,480 --> 01:05:31,839
like the current rfcs but instead the

1657
01:05:31,839 --> 01:05:35,119
the basic concepts so i think i um the

1658
01:05:35,119 --> 01:05:37,599
interconnections holds its own much more

1659
01:05:37,599 --> 01:05:39,839
than the second edition of um the

1660
01:05:39,839 --> 01:05:42,559
security book did but yeah you could

1661
01:05:42,559 --> 01:05:44,880
probably inspire me to do that after you

1662
01:05:44,880 --> 01:05:46,960
talked about things that you wish were

1663
01:05:46,960 --> 01:05:49,760
sort of written about

1664
01:05:49,760 --> 01:05:52,480
so okay well thank you so much i'll be

1665
01:05:52,480 --> 01:05:54,090
around all week

1666
01:05:54,090 --> 01:06:03,520
[Applause]

1667
01:06:03,520 --> 01:06:05,039
thank you so much radio for your time

1668
01:06:05,039 --> 01:06:06,400
and your presentation today it really

1669
01:06:06,400 --> 01:06:08,240
was wonderful let's give you one more

1670
01:06:08,240 --> 01:06:09,630
round of applause

1671
01:06:09,630 --> 01:06:17,560
[Applause]

1672
01:06:17,560 --> 01:06:21,119
[Music]

1673
01:06:21,119 --> 01:06:23,200
you

