1
00:00:00,000 --> 00:00:05,359
[Music]

2
00:00:05,359 --> 00:00:06,399
hi

3
00:00:06,399 --> 00:00:09,679
my name is tony tauber from comcast

4
00:00:09,679 --> 00:00:11,840
network engineering department and i'm

5
00:00:11,840 --> 00:00:13,759
here today to talk to you about our

6
00:00:13,759 --> 00:00:14,960
deployment

7
00:00:14,960 --> 00:00:18,800
of uh rpki broad origin validation

8
00:00:18,800 --> 00:00:21,439
so here's what we'll be going over today

9
00:00:21,439 --> 00:00:23,920
um spend quite a bit of time on the

10
00:00:23,920 --> 00:00:26,880
background of our decisions related to

11
00:00:26,880 --> 00:00:29,279
red origin validation and then dig into

12
00:00:29,279 --> 00:00:32,558
some more details about uh validating

13
00:00:32,558 --> 00:00:34,719
and uh publishing rawas

14
00:00:34,719 --> 00:00:38,320
so you know when thinking about um

15
00:00:38,320 --> 00:00:41,360
bgp security risks what are they uh it's

16
00:00:41,360 --> 00:00:43,280
been talked about quite a bit

17
00:00:43,280 --> 00:00:45,760
the biggest one is misconfiguration

18
00:00:45,760 --> 00:00:48,320
people fat fingering or uh you know

19
00:00:48,320 --> 00:00:51,039
doing typos in their configurations that

20
00:00:51,039 --> 00:00:53,199
are cause uh either

21
00:00:53,199 --> 00:00:56,960
misoriginations aka hijacks

22
00:00:56,960 --> 00:00:59,760
but uh if it's a uh just a naive mistake

23
00:00:59,760 --> 00:01:02,000
i wouldn't necessarily call it a hijack

24
00:01:02,000 --> 00:01:03,840
but then there are also malicious actors

25
00:01:03,840 --> 00:01:04,799
out there

26
00:01:04,799 --> 00:01:07,600
can't um discount that totally and uh

27
00:01:07,600 --> 00:01:09,439
what are the risks that traffic doesn't

28
00:01:09,439 --> 00:01:11,280
go to the wrong place or

29
00:01:11,280 --> 00:01:12,640
sorry it doesn't go to the right place

30
00:01:12,640 --> 00:01:15,040
or even actually goes to the wrong place

31
00:01:15,040 --> 00:01:18,159
enter uh rpki route origin validation or

32
00:01:18,159 --> 00:01:21,759
rov so what are these acronyms so rpki

33
00:01:21,759 --> 00:01:23,600
that stands for resource public key

34
00:01:23,600 --> 00:01:26,240
infrastructure that's the system uh that

35
00:01:26,240 --> 00:01:28,159
makes these things possible

36
00:01:28,159 --> 00:01:31,520
roa and we'll dig more into that um roas

37
00:01:31,520 --> 00:01:34,320
or roas are route origin

38
00:01:34,320 --> 00:01:36,320
authorization and they're the main

39
00:01:36,320 --> 00:01:38,320
things that we'll

40
00:01:38,320 --> 00:01:41,040
be talking about today and then route

41
00:01:41,040 --> 00:01:44,079
origin validation which is the process

42
00:01:44,079 --> 00:01:47,680
uh that uh having all this stuff enables

43
00:01:47,680 --> 00:01:48,880
in bgp

44
00:01:48,880 --> 00:01:51,280
what does it do it provides a method for

45
00:01:51,280 --> 00:01:53,200
the owner

46
00:01:53,200 --> 00:01:56,320
uh let's really call them the registered

47
00:01:56,320 --> 00:01:59,759
user of a prefix to assert which asn or

48
00:01:59,759 --> 00:02:01,040
asn's

49
00:02:01,040 --> 00:02:03,280
are the correct originators for that

50
00:02:03,280 --> 00:02:04,560
prefix

51
00:02:04,560 --> 00:02:05,759
and then

52
00:02:05,759 --> 00:02:08,318
implicitly that means that the other

53
00:02:08,318 --> 00:02:10,800
originators are not valid what is inside

54
00:02:10,800 --> 00:02:12,640
of roa it's a signed statement

55
00:02:12,640 --> 00:02:15,280
consisting of a prefix an ip prefix

56
00:02:15,280 --> 00:02:19,040
could be ipv4 ipv6 a maximum prefix

57
00:02:19,040 --> 00:02:22,239
length that we'd expect to see for that

58
00:02:22,239 --> 00:02:25,680
prefix and the originating asm that were

59
00:02:25,680 --> 00:02:26,879
expected

60
00:02:26,879 --> 00:02:29,120
rpki also has some other objects to make

61
00:02:29,120 --> 00:02:31,280
it work certificates manifests and so

62
00:02:31,280 --> 00:02:32,480
forth

63
00:02:32,480 --> 00:02:33,280
and

64
00:02:33,280 --> 00:02:35,360
certificate replication lists

65
00:02:35,360 --> 00:02:37,920
but uh we won't get too too into those

66
00:02:37,920 --> 00:02:39,840
they're out there though how does it

67
00:02:39,840 --> 00:02:41,440
work okay

68
00:02:41,440 --> 00:02:44,720
so the root assigner of all ip address

69
00:02:44,720 --> 00:02:48,560
space for both v4 and v6 is iana the

70
00:02:48,560 --> 00:02:51,360
internet assigned numbers authority

71
00:02:51,360 --> 00:02:54,879
uh from there they delegated to the five

72
00:02:54,879 --> 00:02:56,319
regional internet

73
00:02:56,319 --> 00:02:58,879
uh registries or rir's

74
00:02:58,879 --> 00:03:01,840
aaron here in north america right ncc

75
00:03:01,840 --> 00:03:04,239
covering europe ap neck in the asia

76
00:03:04,239 --> 00:03:07,280
pacific region lackneck for the latin

77
00:03:07,280 --> 00:03:09,840
american area and afrinic for the

78
00:03:09,840 --> 00:03:12,159
continent of africa

79
00:03:12,159 --> 00:03:15,040
those entities assign further to

80
00:03:15,040 --> 00:03:17,040
what we call local internet registries

81
00:03:17,040 --> 00:03:18,720
those could be at the country level like

82
00:03:18,720 --> 00:03:20,400
in china or brazil

83
00:03:20,400 --> 00:03:21,280
um

84
00:03:21,280 --> 00:03:23,440
they could be service providers they

85
00:03:23,440 --> 00:03:24,480
could also

86
00:03:24,480 --> 00:03:26,319
the rirs to sign also directly to

87
00:03:26,319 --> 00:03:28,560
service providers uh sometimes directly

88
00:03:28,560 --> 00:03:32,080
to enterprises and so forth

89
00:03:32,080 --> 00:03:35,519
rir portals um for address holders can

90
00:03:35,519 --> 00:03:37,440
be used to generate roas

91
00:03:37,440 --> 00:03:39,680
um and then roads are published by the

92
00:03:39,680 --> 00:03:41,519
rir so anyone can view them there's a

93
00:03:41,519 --> 00:03:43,840
couple of different um ways that can

94
00:03:43,840 --> 00:03:45,200
break down and we'll get into those

95
00:03:45,200 --> 00:03:48,159
details later but just sort of for a

96
00:03:48,159 --> 00:03:52,239
graphic orientation of what um how this

97
00:03:52,239 --> 00:03:54,239
works and what's necessary to get eroa

98
00:03:54,239 --> 00:03:55,280
issued

99
00:03:55,280 --> 00:03:56,560
um

100
00:03:56,560 --> 00:03:58,560
these are kind of the basic components

101
00:03:58,560 --> 00:03:59,360
the

102
00:03:59,360 --> 00:04:02,080
rir certificate authority or ca

103
00:04:02,080 --> 00:04:05,439
the rir's resource database the the

104
00:04:05,439 --> 00:04:07,040
database of all their

105
00:04:07,040 --> 00:04:10,400
resources ip addresses and as numbers

106
00:04:10,400 --> 00:04:12,159
and then the um

107
00:04:12,159 --> 00:04:12,840
the

108
00:04:12,840 --> 00:04:14,000
member uh

109
00:04:14,000 --> 00:04:16,238
authentication to their system by their

110
00:04:16,238 --> 00:04:17,279
ir

111
00:04:17,279 --> 00:04:20,320
the ir rir member

112
00:04:20,320 --> 00:04:22,639
um bringing those three things together

113
00:04:22,639 --> 00:04:24,320
kind of the basic building blocks of

114
00:04:24,320 --> 00:04:26,639
what's necessary to issue around

115
00:04:26,639 --> 00:04:29,199
if we look at um this graph that's

116
00:04:29,199 --> 00:04:32,320
produced by the u.s uh

117
00:04:32,320 --> 00:04:34,080
government national institute of

118
00:04:34,080 --> 00:04:36,479
standards and technologies or nist

119
00:04:36,479 --> 00:04:39,520
uh it gives an idea of this snapshot is

120
00:04:39,520 --> 00:04:42,720
a couple weeks old

121
00:04:42,720 --> 00:04:45,520
gives an idea of the coverage

122
00:04:45,520 --> 00:04:46,800
of the

123
00:04:46,800 --> 00:04:47,840
current

124
00:04:47,840 --> 00:04:50,000
ipv4 address space

125
00:04:50,000 --> 00:04:51,520
by um

126
00:04:51,520 --> 00:04:55,120
roas so we see approximately a third

127
00:04:55,120 --> 00:04:59,199
is considered valid has a matching rowa

128
00:04:59,199 --> 00:05:00,240
um

129
00:05:00,240 --> 00:05:02,800
to what's in the bgp table

130
00:05:02,800 --> 00:05:05,520
and about two-thirds is not found

131
00:05:05,520 --> 00:05:08,080
and then a tiny slice is is considered

132
00:05:08,080 --> 00:05:10,320
invalid

133
00:05:10,320 --> 00:05:12,320
so keep that in mind for

134
00:05:12,320 --> 00:05:13,840
what's coming up next

135
00:05:13,840 --> 00:05:16,800
so the backdrop to the um

136
00:05:16,800 --> 00:05:19,199
you know to to this deployment decision

137
00:05:19,199 --> 00:05:21,440
and journey that we're we're on is um

138
00:05:21,440 --> 00:05:23,759
that also there's the fail open model so

139
00:05:23,759 --> 00:05:24,960
that means

140
00:05:24,960 --> 00:05:27,199
that most of the prefixes are still as

141
00:05:27,199 --> 00:05:29,840
we show so on that graph still not

142
00:05:29,840 --> 00:05:32,080
covered i.e they're in the not found

143
00:05:32,080 --> 00:05:34,000
category

144
00:05:34,000 --> 00:05:36,720
hence the absence of a covering row will

145
00:05:36,720 --> 00:05:38,720
mean uh it will still allow for the

146
00:05:38,720 --> 00:05:40,320
route to propagate

147
00:05:40,320 --> 00:05:43,520
um and the same holds true for the

148
00:05:43,520 --> 00:05:45,919
complete loss of

149
00:05:45,919 --> 00:05:48,560
the data by the routers

150
00:05:48,560 --> 00:05:51,120
and i'll dig more into that later but

151
00:05:51,120 --> 00:05:53,600
keep that in mind so so

152
00:05:53,600 --> 00:05:56,319
again it's a fail open model if there's

153
00:05:56,319 --> 00:05:57,840
a um

154
00:05:57,840 --> 00:06:00,560
uh if there are failures packets still

155
00:06:00,560 --> 00:06:01,759
get

156
00:06:01,759 --> 00:06:02,880
forwarded

157
00:06:02,880 --> 00:06:05,280
and routing happens the internet still

158
00:06:05,280 --> 00:06:08,400
works which is uh important for us

159
00:06:08,400 --> 00:06:10,960
uh already some large isps

160
00:06:10,960 --> 00:06:13,919
have been doing um rov for a couple of

161
00:06:13,919 --> 00:06:17,039
years so that was kind of the

162
00:06:17,039 --> 00:06:19,600
part of the backdrop of our deployment

163
00:06:19,600 --> 00:06:22,080
decision so hence invalid announcements

164
00:06:22,080 --> 00:06:24,319
are already getting dropped so us doing

165
00:06:24,319 --> 00:06:25,919
it doesn't um

166
00:06:25,919 --> 00:06:28,240
uh in some ways dramatically change the

167
00:06:28,240 --> 00:06:30,240
world

168
00:06:30,240 --> 00:06:32,400
for our customers

169
00:06:32,400 --> 00:06:35,280
uh so what are the components of um

170
00:06:35,280 --> 00:06:39,360
of rov uh there's the repositories um

171
00:06:39,360 --> 00:06:41,600
the roas basically are

172
00:06:41,600 --> 00:06:44,400
published on servers that are operated

173
00:06:44,400 --> 00:06:46,800
by the regional internet registries

174
00:06:46,800 --> 00:06:48,720
and their delegates

175
00:06:48,720 --> 00:06:50,479
then there's the validating cache

176
00:06:50,479 --> 00:06:52,080
servers which are running relying

177
00:06:52,080 --> 00:06:55,840
parties software so-called rp software

178
00:06:55,840 --> 00:06:56,880
the

179
00:06:56,880 --> 00:06:58,800
validator software fetches the rows and

180
00:06:58,800 --> 00:07:00,960
other data using a couple of different

181
00:07:00,960 --> 00:07:02,479
methods

182
00:07:02,479 --> 00:07:04,960
rsync which is a tcp protocol for

183
00:07:04,960 --> 00:07:07,599
synchronizing files on servers that goes

184
00:07:07,599 --> 00:07:09,199
over tcp

185
00:07:09,199 --> 00:07:11,360
873

186
00:07:11,360 --> 00:07:13,520
or rrdp which is a slightly newer

187
00:07:13,520 --> 00:07:14,639
protocol

188
00:07:14,639 --> 00:07:17,280
that's uh specifically designed for

189
00:07:17,280 --> 00:07:20,160
use in rppki so it's the

190
00:07:20,160 --> 00:07:23,919
stands for rpki red repository delta

191
00:07:23,919 --> 00:07:26,560
protocol and it uses https as its

192
00:07:26,560 --> 00:07:28,479
transport

193
00:07:28,479 --> 00:07:32,000
so that's a newer protocol in some ways

194
00:07:32,000 --> 00:07:34,160
it could be considered preferable

195
00:07:34,160 --> 00:07:36,639
um then the validating caches take that

196
00:07:36,639 --> 00:07:39,599
data that they fetched and they run um

197
00:07:39,599 --> 00:07:41,680
cryptographic integrity checks to

198
00:07:41,680 --> 00:07:45,039
produce what are called vrps validated

199
00:07:45,039 --> 00:07:47,039
rate of road payloads and those are

200
00:07:47,039 --> 00:07:48,160
really those

201
00:07:48,160 --> 00:07:49,440
tuples

202
00:07:49,440 --> 00:07:50,639
of

203
00:07:50,639 --> 00:07:55,840
a prefix a max length and a an rgnas

204
00:07:56,639 --> 00:07:59,120
from there the servers take that data

205
00:07:59,120 --> 00:08:01,360
and they make it available using the

206
00:08:01,360 --> 00:08:04,000
rpki to router protocol

207
00:08:04,000 --> 00:08:05,599
which runs over a couple of different

208
00:08:05,599 --> 00:08:09,039
possible tcp ports and what that allows

209
00:08:09,039 --> 00:08:10,879
is that the

210
00:08:10,879 --> 00:08:13,039
routers out in the field will fetch the

211
00:08:13,039 --> 00:08:14,879
vrp data

212
00:08:14,879 --> 00:08:17,599
um and then the data those routers will

213
00:08:17,599 --> 00:08:20,800
cache the data locally and you know keep

214
00:08:20,800 --> 00:08:23,599
checking back for refresh data

215
00:08:23,599 --> 00:08:26,000
at configurable intervals you can also

216
00:08:26,000 --> 00:08:27,120
configure

217
00:08:27,120 --> 00:08:28,720
it to

218
00:08:28,720 --> 00:08:31,919
the routers to retain a copy of the data

219
00:08:31,919 --> 00:08:33,919
uh in case the connection to the cache

220
00:08:33,919 --> 00:08:35,440
is lost

221
00:08:35,440 --> 00:08:37,120
you know so they'll keep a lo they'll

222
00:08:37,120 --> 00:08:40,479
keep their local copy and uh for some

223
00:08:40,479 --> 00:08:43,919
amount of time before flushing it

224
00:08:43,919 --> 00:08:46,399
thinking again back to our um

225
00:08:46,399 --> 00:08:48,480
to our motivation for

226
00:08:48,480 --> 00:08:50,080
doing this you know taking on this new

227
00:08:50,080 --> 00:08:51,040
project

228
00:08:51,040 --> 00:08:52,959
okay there's a low barrier of entry

229
00:08:52,959 --> 00:08:54,480
that's kind of nice

230
00:08:54,480 --> 00:08:56,160
there's no new gear

231
00:08:56,160 --> 00:08:57,920
because it's just using

232
00:08:57,920 --> 00:09:00,000
features on existing routers

233
00:09:00,000 --> 00:09:02,240
and then just needing a few virtual

234
00:09:02,240 --> 00:09:04,240
machines running freely available open

235
00:09:04,240 --> 00:09:07,120
source software so it's you know pretty

236
00:09:07,120 --> 00:09:09,680
uh cheap to implement no uh no big

237
00:09:09,680 --> 00:09:11,040
expenditures

238
00:09:11,040 --> 00:09:13,440
uh there's a risk of doing nothing so if

239
00:09:13,440 --> 00:09:14,560
we don't

240
00:09:14,560 --> 00:09:17,519
embark on this whole journey um we could

241
00:09:17,519 --> 00:09:19,519
be vulnerable to misorigination by

242
00:09:19,519 --> 00:09:21,600
others of our prefect space that's not

243
00:09:21,600 --> 00:09:23,440
good for our customers

244
00:09:23,440 --> 00:09:25,360
there's risks of doing something

245
00:09:25,360 --> 00:09:27,200
we could do it wrong we could induce

246
00:09:27,200 --> 00:09:29,680
introduce some collateral damage

247
00:09:29,680 --> 00:09:31,920
there's increased complexity

248
00:09:31,920 --> 00:09:33,680
and there's new troubleshooting you know

249
00:09:33,680 --> 00:09:34,880
new things to consider when

250
00:09:34,880 --> 00:09:36,560
troubleshooting

251
00:09:36,560 --> 00:09:37,440
so

252
00:09:37,440 --> 00:09:38,480
those all

253
00:09:38,480 --> 00:09:39,839
figure in

254
00:09:39,839 --> 00:09:41,279
um

255
00:09:41,279 --> 00:09:42,720
given all these

256
00:09:42,720 --> 00:09:44,880
presenting it to management to get their

257
00:09:44,880 --> 00:09:47,120
buy-in is important can't make you know

258
00:09:47,120 --> 00:09:49,680
i can't just say well there's this new

259
00:09:49,680 --> 00:09:51,519
cool technology we should just do it

260
00:09:51,519 --> 00:09:54,959
because it's gonna be awesome and um

261
00:09:54,959 --> 00:09:56,080
you know

262
00:09:56,080 --> 00:09:57,920
just take my word for it because

263
00:09:57,920 --> 00:10:00,240
something goes wrong it's gonna you know

264
00:10:00,240 --> 00:10:02,320
end up being whose idea was it to

265
00:10:02,320 --> 00:10:04,720
implement this new thing and that's not

266
00:10:04,720 --> 00:10:08,079
uh that's not where i wanted to be so uh

267
00:10:08,079 --> 00:10:10,640
you gradually over time getting

268
00:10:10,640 --> 00:10:13,519
more awareness um and this you know took

269
00:10:13,519 --> 00:10:16,640
a couple of years uh generally to um you

270
00:10:16,640 --> 00:10:19,760
know kind of keep briefing them on this

271
00:10:19,760 --> 00:10:22,560
new technology things come up in the pri

272
00:10:22,560 --> 00:10:24,880
in the trade press about different um

273
00:10:24,880 --> 00:10:27,200
routing security incidents and uh that

274
00:10:27,200 --> 00:10:29,519
kind of helps make the case of of

275
00:10:29,519 --> 00:10:31,839
why this might be something to take on

276
00:10:31,839 --> 00:10:34,399
so when thinking about um

277
00:10:34,399 --> 00:10:37,680
rpki uh

278
00:10:37,680 --> 00:10:40,640
there's two parts that i call you know i

279
00:10:40,640 --> 00:10:42,240
like to break it into reading and

280
00:10:42,240 --> 00:10:44,640
writing um and the on the reading side

281
00:10:44,640 --> 00:10:47,279
there's validating um and then on the

282
00:10:47,279 --> 00:10:49,360
writing side there's publishing and so

283
00:10:49,360 --> 00:10:51,200
uh thinking about it there's the

284
00:10:51,200 --> 00:10:53,519
validation of roas and then the the

285
00:10:53,519 --> 00:10:56,560
publishing of of roas about our own um

286
00:10:56,560 --> 00:10:59,200
address space so

287
00:10:59,200 --> 00:11:01,200
when breaking down the problem and you

288
00:11:01,200 --> 00:11:03,920
know thinking through the um

289
00:11:03,920 --> 00:11:06,800
thinking through uh how we're gonna

290
00:11:06,800 --> 00:11:10,399
undertake this thing uh

291
00:11:10,399 --> 00:11:12,640
that helps me think about it and and you

292
00:11:12,640 --> 00:11:14,640
know can really do one without the other

293
00:11:14,640 --> 00:11:16,959
it's not necessary to do them together

294
00:11:16,959 --> 00:11:19,519
and you know you you can do one and not

295
00:11:19,519 --> 00:11:22,640
the other ever you could do them in um

296
00:11:22,640 --> 00:11:25,279
you know any order it's not uh

297
00:11:25,279 --> 00:11:27,519
they're not linked per se when you're

298
00:11:27,519 --> 00:11:30,160
thinking about rpki implementation for

299
00:11:30,160 --> 00:11:32,800
your uh organization

300
00:11:32,800 --> 00:11:34,000
uh

301
00:11:34,000 --> 00:11:35,600
but when

302
00:11:35,600 --> 00:11:36,480
um

303
00:11:36,480 --> 00:11:38,720
thinking it about it you know the whole

304
00:11:38,720 --> 00:11:41,360
plan needed to work incrementally

305
00:11:41,360 --> 00:11:43,760
as incrementally as possible can't sort

306
00:11:43,760 --> 00:11:46,640
of do it all at once turn it on globally

307
00:11:46,640 --> 00:11:46,880
um

308
00:11:46,880 --> 00:11:48,560
[Music]

309
00:11:48,560 --> 00:11:50,800
and uh we also need to have a back out

310
00:11:50,800 --> 00:11:53,839
plan of every step and sub step of the

311
00:11:53,839 --> 00:11:57,600
the overall project so um this kind of

312
00:11:57,600 --> 00:11:59,360
helped me think through

313
00:11:59,360 --> 00:12:00,480
the uh

314
00:12:00,480 --> 00:12:01,360
uh

315
00:12:01,360 --> 00:12:03,760
what what was uh needed

316
00:12:03,760 --> 00:12:06,959
so on the publishing side we decided to

317
00:12:06,959 --> 00:12:07,760
uh

318
00:12:07,760 --> 00:12:08,959
you know there's there's two different

319
00:12:08,959 --> 00:12:11,200
options uh which i'll go into more but

320
00:12:11,200 --> 00:12:12,000
um

321
00:12:12,000 --> 00:12:14,639
in one case the hosted model the rir

322
00:12:14,639 --> 00:12:16,959
publishes the data that members enter in

323
00:12:16,959 --> 00:12:19,519
the their portal for instance with aaron

324
00:12:19,519 --> 00:12:21,920
it's they call it aaron online and

325
00:12:21,920 --> 00:12:24,560
there's the delegated model which means

326
00:12:24,560 --> 00:12:26,880
that the rir delegates to a local

327
00:12:26,880 --> 00:12:30,399
internet registry or other entity um who

328
00:12:30,399 --> 00:12:32,560
then has to run their own certificate

329
00:12:32,560 --> 00:12:35,760
authority and publication point servers

330
00:12:35,760 --> 00:12:37,760
and then there's the validating side

331
00:12:37,760 --> 00:12:38,720
which is

332
00:12:38,720 --> 00:12:41,040
i'll get more deeply into

333
00:12:41,040 --> 00:12:42,560
subsequent slides

334
00:12:42,560 --> 00:12:44,560
breaking down a drop further when we

335
00:12:44,560 --> 00:12:46,160
want to think about route origin

336
00:12:46,160 --> 00:12:47,760
validation that's the high level plan

337
00:12:47,760 --> 00:12:49,279
okay we're going to use

338
00:12:49,279 --> 00:12:51,839
um we're going to do the reading

339
00:12:51,839 --> 00:12:54,079
using publish rowas

340
00:12:54,079 --> 00:12:55,120
and what

341
00:12:55,120 --> 00:12:57,760
you know that means on the ground is

342
00:12:57,760 --> 00:13:00,000
add an inbound route policy

343
00:13:00,000 --> 00:13:01,760
uh to

344
00:13:01,760 --> 00:13:02,720
drop

345
00:13:02,720 --> 00:13:05,040
you know what what we hear from bgp

346
00:13:05,040 --> 00:13:08,160
external bgp neighbors um

347
00:13:08,160 --> 00:13:11,279
in in our inbound policy we added it

348
00:13:11,279 --> 00:13:14,240
after dropping the so-called bogons um

349
00:13:14,240 --> 00:13:17,200
the reserved address space and so forth

350
00:13:17,200 --> 00:13:19,600
um we did a field trial with subset of

351
00:13:19,600 --> 00:13:21,360
interconnection partners starting in

352
00:13:21,360 --> 00:13:23,120
august 2020

353
00:13:23,120 --> 00:13:24,079
and

354
00:13:24,079 --> 00:13:25,839
kept rolling that out

355
00:13:25,839 --> 00:13:28,480
to the remainder of 2020 and into early

356
00:13:28,480 --> 00:13:30,240
2021.

357
00:13:30,240 --> 00:13:32,480
on the writing side publishing road is

358
00:13:32,480 --> 00:13:35,040
for our own address space we started

359
00:13:35,040 --> 00:13:36,240
with

360
00:13:36,240 --> 00:13:38,959
a small number of you know prefixes and

361
00:13:38,959 --> 00:13:42,160
gradually expanded um that was mostly

362
00:13:42,160 --> 00:13:45,360
done in uh early 2021.

363
00:13:45,360 --> 00:13:46,959
okay so what's our

364
00:13:46,959 --> 00:13:49,360
deployment environment

365
00:13:49,360 --> 00:13:50,720
we've got

366
00:13:50,720 --> 00:13:53,360
cisco and juniper edge routers so we

367
00:13:53,360 --> 00:13:55,440
could roll out incrementally

368
00:13:55,440 --> 00:13:56,880
and

369
00:13:56,880 --> 00:13:58,160
then for

370
00:13:58,160 --> 00:13:59,440
publication

371
00:13:59,440 --> 00:14:03,040
you know we've got 100 odd prefixes

372
00:14:03,040 --> 00:14:06,000
you know some something over 100 uh less

373
00:14:06,000 --> 00:14:07,120
than 200

374
00:14:07,120 --> 00:14:09,120
um and those are spread over two dozen

375
00:14:09,120 --> 00:14:12,160
internal asn's and you know really have

376
00:14:12,160 --> 00:14:15,519
thousands of more specifics

377
00:14:15,519 --> 00:14:17,920
uh um announcements when you get down to

378
00:14:17,920 --> 00:14:18,560
it

379
00:14:18,560 --> 00:14:20,880
so uh that was kind of the backdrop of

380
00:14:20,880 --> 00:14:23,120
the whole the whole project

381
00:14:23,120 --> 00:14:26,079
okay so talking a little bit more about

382
00:14:26,079 --> 00:14:28,560
the validating and what uh

383
00:14:28,560 --> 00:14:30,639
how we ended up doing it what went into

384
00:14:30,639 --> 00:14:31,360
it

385
00:14:31,360 --> 00:14:33,600
so again it's um

386
00:14:33,600 --> 00:14:35,920
easier to do with small risk

387
00:14:35,920 --> 00:14:39,120
because it fails open as i talked about

388
00:14:39,120 --> 00:14:41,760
if there's no roa the bgp route is

389
00:14:41,760 --> 00:14:44,399
accepted traffic keeps flowing

390
00:14:44,399 --> 00:14:46,639
and so forth um

391
00:14:46,639 --> 00:14:49,199
what we want to do is apply it only to

392
00:14:49,199 --> 00:14:51,680
external ebgp sessions

393
00:14:51,680 --> 00:14:53,760
not on sessions among our different

394
00:14:53,760 --> 00:14:55,760
regional as's for instance even though

395
00:14:55,760 --> 00:14:58,720
those running ebgp between them

396
00:14:58,720 --> 00:15:01,199
um we're not going to do it on ibgp

397
00:15:01,199 --> 00:15:03,360
because i can't think of a way that that

398
00:15:03,360 --> 00:15:05,519
would even make sense

399
00:15:05,519 --> 00:15:07,600
and something to think about is we carry

400
00:15:07,600 --> 00:15:09,600
many more specifics internally that's

401
00:15:09,600 --> 00:15:11,760
probably true with a lot of

402
00:15:11,760 --> 00:15:13,440
networks

403
00:15:13,440 --> 00:15:14,880
including ones

404
00:15:14,880 --> 00:15:17,440
that are originated from private asses

405
00:15:17,440 --> 00:15:18,240
which

406
00:15:18,240 --> 00:15:20,720
don't get seen by the outside world so

407
00:15:20,720 --> 00:15:21,839
um

408
00:15:21,839 --> 00:15:23,839
you know there are ways that maybe you

409
00:15:23,839 --> 00:15:25,839
could undertake to do this

410
00:15:25,839 --> 00:15:26,720
but

411
00:15:26,720 --> 00:15:29,199
for us it didn't make sense to to

412
00:15:29,199 --> 00:15:32,000
to bother with all that

413
00:15:32,000 --> 00:15:34,959
the configuration um ends up being per

414
00:15:34,959 --> 00:15:37,519
router and per neighbor so it you know

415
00:15:37,519 --> 00:15:39,360
as we were rolling out incrementally it

416
00:15:39,360 --> 00:15:41,120
was easier to see if something goes

417
00:15:41,120 --> 00:15:44,959
wrong and to back it out if necessary um

418
00:15:44,959 --> 00:15:46,639
so it was kind of like a one step at a

419
00:15:46,639 --> 00:15:47,440
time

420
00:15:47,440 --> 00:15:51,199
uh you know crawl walk run sometimes

421
00:15:51,199 --> 00:15:52,399
people

422
00:15:52,399 --> 00:15:55,040
describe it that way uh

423
00:15:55,040 --> 00:15:57,279
process for us

424
00:15:57,279 --> 00:15:58,639
now

425
00:15:58,639 --> 00:16:00,880
pairwise coordination with all the

426
00:16:00,880 --> 00:16:02,399
different neighbors that we have is not

427
00:16:02,399 --> 00:16:05,120
the goal but we want to to notify them

428
00:16:05,120 --> 00:16:06,560
so um

429
00:16:06,560 --> 00:16:08,480
right it's it's not necessarily like you

430
00:16:08,480 --> 00:16:11,120
have to tell somebody you know okay get

431
00:16:11,120 --> 00:16:14,000
your your bgp person on the phone not at

432
00:16:14,000 --> 00:16:14,800
you know

433
00:16:14,800 --> 00:16:17,040
such and such an hour and we'll get our

434
00:16:17,040 --> 00:16:19,519
people and we'll deploy the configs and

435
00:16:19,519 --> 00:16:21,759
you know doing that would um

436
00:16:21,759 --> 00:16:22,959
really

437
00:16:22,959 --> 00:16:25,759
be a very time consuming coordination

438
00:16:25,759 --> 00:16:28,240
process and and um really we

439
00:16:28,240 --> 00:16:30,399
didn't think of that as necessary

440
00:16:30,399 --> 00:16:32,399
especially given that a number of the

441
00:16:32,399 --> 00:16:34,800
other networks were already had already

442
00:16:34,800 --> 00:16:36,639
enabled it on their site

443
00:16:36,639 --> 00:16:38,639
an important

444
00:16:38,639 --> 00:16:41,120
key um component of all this is the

445
00:16:41,120 --> 00:16:43,839
validating cache relying party software

446
00:16:43,839 --> 00:16:46,480
or rp software

447
00:16:46,480 --> 00:16:48,959
so the way that it kind of thought about

448
00:16:48,959 --> 00:16:51,040
this was um

449
00:16:51,040 --> 00:16:52,480
you know after considering for a while

450
00:16:52,480 --> 00:16:54,240
okay you know what are the necessary

451
00:16:54,240 --> 00:16:55,920
properties we want to have geographic

452
00:16:55,920 --> 00:16:57,120
diversity

453
00:16:57,120 --> 00:16:59,680
um so we'll deploy it to two different

454
00:16:59,680 --> 00:17:00,720
data

455
00:17:00,720 --> 00:17:02,639
data centers in case one of those has an

456
00:17:02,639 --> 00:17:04,319
outage

457
00:17:04,319 --> 00:17:06,160
and then also software diversity we want

458
00:17:06,160 --> 00:17:08,079
to get two different code bases because

459
00:17:08,079 --> 00:17:09,839
there were a number of

460
00:17:09,839 --> 00:17:12,480
available open source options

461
00:17:12,480 --> 00:17:15,599
but we wanted to have more than just one

462
00:17:15,599 --> 00:17:16,640
because

463
00:17:16,640 --> 00:17:20,480
the software um was and maybe to a small

464
00:17:20,480 --> 00:17:22,240
extent still is

465
00:17:22,240 --> 00:17:23,359
um

466
00:17:23,359 --> 00:17:25,760
still maturing and so

467
00:17:25,760 --> 00:17:28,079
uh in case one of those code bases has

468
00:17:28,079 --> 00:17:30,080
had a problem with those packages we

469
00:17:30,080 --> 00:17:33,360
could just um disable it and um

470
00:17:33,360 --> 00:17:36,480
sort of keep moving with no um

471
00:17:36,480 --> 00:17:38,720
you know no interruption so our initial

472
00:17:38,720 --> 00:17:42,640
choices um for this were um

473
00:17:42,640 --> 00:17:43,840
for the

474
00:17:43,840 --> 00:17:45,679
software itself

475
00:17:45,679 --> 00:17:49,440
were the uh ripe rpk validator version

476
00:17:49,440 --> 00:17:51,679
three which was um written by

477
00:17:51,679 --> 00:17:54,320
rypncc in java

478
00:17:54,320 --> 00:17:56,000
um

479
00:17:56,000 --> 00:17:58,720
during the time that we were deploying i

480
00:17:58,720 --> 00:18:02,320
guess it was mid 20 20

481
00:18:02,320 --> 00:18:04,640
2021

482
00:18:04,640 --> 00:18:06,320
ripe uh

483
00:18:06,320 --> 00:18:08,559
declared their you know they were going

484
00:18:08,559 --> 00:18:11,360
to stop developing it and not um

485
00:18:11,360 --> 00:18:14,160
keep patching software problems or

486
00:18:14,160 --> 00:18:16,640
anything like that so

487
00:18:16,640 --> 00:18:18,050
we ended up

488
00:18:18,050 --> 00:18:20,160
[Music]

489
00:18:20,160 --> 00:18:22,240
switching over to um

490
00:18:22,240 --> 00:18:24,320
use a different package called rba ki

491
00:18:24,320 --> 00:18:26,400
client that has a web wrapper

492
00:18:26,400 --> 00:18:30,559
and then um another sort of

493
00:18:30,559 --> 00:18:33,919
separate component for the rtr servers

494
00:18:33,919 --> 00:18:35,120
um

495
00:18:35,120 --> 00:18:39,039
to uh that's called stay rtr so and then

496
00:18:39,039 --> 00:18:41,120
the other package we use is route nader

497
00:18:41,120 --> 00:18:43,600
which comes from nl metalabs and it's

498
00:18:43,600 --> 00:18:45,360
written in the rust programming language

499
00:18:45,360 --> 00:18:47,919
and that's kind of an all-in-one

500
00:18:47,919 --> 00:18:51,360
validator and rtr server so

501
00:18:51,360 --> 00:18:54,160
again rpki client does validation stay

502
00:18:54,160 --> 00:18:56,480
rtr does the

503
00:18:56,480 --> 00:18:58,799
rtr part

504
00:18:58,799 --> 00:18:59,520
but

505
00:18:59,520 --> 00:19:01,440
you know we have these two packages and

506
00:19:01,440 --> 00:19:03,200
hence each router would have four

507
00:19:03,200 --> 00:19:05,679
different rtr servers configured

508
00:19:05,679 --> 00:19:06,640
uh

509
00:19:06,640 --> 00:19:07,679
for our

510
00:19:07,679 --> 00:19:10,160
situation we

511
00:19:10,160 --> 00:19:12,320
were able to find a home for managing

512
00:19:12,320 --> 00:19:14,880
those servers in the software

513
00:19:14,880 --> 00:19:17,120
uh with our dns staff because

514
00:19:17,120 --> 00:19:18,960
organizationally that made sense for us

515
00:19:18,960 --> 00:19:21,280
they were in the same network uh

516
00:19:21,280 --> 00:19:23,360
engineering organization they had

517
00:19:23,360 --> 00:19:25,360
experience with managing servers and

518
00:19:25,360 --> 00:19:26,640
software

519
00:19:26,640 --> 00:19:29,280
um with high availability

520
00:19:29,280 --> 00:19:30,640
uh

521
00:19:30,640 --> 00:19:33,520
so it made sense for us um you know the

522
00:19:33,520 --> 00:19:35,600
networking department itself you know

523
00:19:35,600 --> 00:19:37,520
the the sort of classical you know

524
00:19:37,520 --> 00:19:39,840
router jockeys um

525
00:19:39,840 --> 00:19:40,720
you know

526
00:19:40,720 --> 00:19:44,480
we manage routers not so much servers

527
00:19:44,480 --> 00:19:45,840
um

528
00:19:45,840 --> 00:19:47,039
all these

529
00:19:47,039 --> 00:19:48,070
you know these um

530
00:19:48,070 --> 00:19:49,520
[Music]

531
00:19:49,520 --> 00:19:53,280
software uh packages we have now

532
00:19:53,280 --> 00:19:54,320
both

533
00:19:54,320 --> 00:19:57,679
um the rpk client web and route nader

534
00:19:57,679 --> 00:19:59,039
have um

535
00:19:59,039 --> 00:20:02,159
you know packages like uh

536
00:20:02,159 --> 00:20:04,480
you know for yum or

537
00:20:04,480 --> 00:20:06,720
other linux distributions

538
00:20:06,720 --> 00:20:09,120
did debian distributions so they're

539
00:20:09,120 --> 00:20:11,760
pretty easy to install and keep updated

540
00:20:11,760 --> 00:20:14,000
there you know it doesn't um

541
00:20:14,000 --> 00:20:16,960
it's not so onerous and um they can also

542
00:20:16,960 --> 00:20:19,600
produce metrics for consumption by

543
00:20:19,600 --> 00:20:22,240
telemetry systems to show pretty graphs

544
00:20:22,240 --> 00:20:24,559
and stuff here's a

545
00:20:24,559 --> 00:20:26,720
kind of notional picture to

546
00:20:26,720 --> 00:20:29,520
get oriented on how the system is set up

547
00:20:29,520 --> 00:20:31,840
on the left and right we've got

548
00:20:31,840 --> 00:20:33,600
you know pair of validators and call

549
00:20:33,600 --> 00:20:35,919
them the east and west

550
00:20:35,919 --> 00:20:38,000
data center

551
00:20:38,000 --> 00:20:39,679
at the top of the picture

552
00:20:39,679 --> 00:20:41,120
showing a bunch of different

553
00:20:41,120 --> 00:20:42,880
repositories that exist out on the

554
00:20:42,880 --> 00:20:45,760
internet so those validator

555
00:20:45,760 --> 00:20:48,960
validating cache servers fetch data from

556
00:20:48,960 --> 00:20:50,880
the repositories using

557
00:20:50,880 --> 00:20:53,520
rsync and or rdp

558
00:20:53,520 --> 00:20:55,679
um and then they do their processing and

559
00:20:55,679 --> 00:20:56,400
then

560
00:20:56,400 --> 00:20:58,320
at the bottom of the picture they make

561
00:20:58,320 --> 00:20:59,679
inside the um

562
00:20:59,679 --> 00:21:01,520
the backbone they make

563
00:21:01,520 --> 00:21:03,840
or the network they make the

564
00:21:03,840 --> 00:21:06,240
uh resulting data available to the

565
00:21:06,240 --> 00:21:10,240
routers the pe provider edge routers

566
00:21:10,240 --> 00:21:11,440
via the

567
00:21:11,440 --> 00:21:14,799
rpki type router protocol so that's just

568
00:21:14,799 --> 00:21:16,720
kind of gets you oriented on the data

569
00:21:16,720 --> 00:21:17,919
flow

570
00:21:17,919 --> 00:21:20,480
what about bugs okay rov has some bugs

571
00:21:20,480 --> 00:21:23,120
um junior francisco both had some just

572
00:21:23,120 --> 00:21:24,400
worked with our

573
00:21:24,400 --> 00:21:26,480
support folks to get the recommended

574
00:21:26,480 --> 00:21:29,520
versions rpk art the art piece

575
00:21:29,520 --> 00:21:31,919
party software also had some bugs uh

576
00:21:31,919 --> 00:21:34,960
mostly bound checking and so forth as as

577
00:21:34,960 --> 00:21:37,280
fixed packages were released we

578
00:21:37,280 --> 00:21:40,240
installed those so no big deal

579
00:21:40,240 --> 00:21:42,240
all right let's just get into the last

580
00:21:42,240 --> 00:21:44,320
part which is the publishing of the roas

581
00:21:44,320 --> 00:21:46,480
for our address space two different

582
00:21:46,480 --> 00:21:48,400
models right there's the hosted model i

583
00:21:48,400 --> 00:21:50,240
kind of alluded to before

584
00:21:50,240 --> 00:21:53,039
that's um via the the

585
00:21:53,039 --> 00:21:55,520
registry portals

586
00:21:55,520 --> 00:21:58,159
there's varying degrees of of ease and

587
00:21:58,159 --> 00:22:00,080
integration with using those

588
00:22:00,080 --> 00:22:03,039
um for example some of the rars make it

589
00:22:03,039 --> 00:22:05,520
easy to take

590
00:22:05,520 --> 00:22:08,799
take a look at the global bgp table

591
00:22:08,799 --> 00:22:10,559
look at the matching

592
00:22:10,559 --> 00:22:13,440
for your address space look at those bgp

593
00:22:13,440 --> 00:22:15,440
announcements and just say public

594
00:22:15,440 --> 00:22:17,440
publish rows that match that

595
00:22:17,440 --> 00:22:19,760
assuming that those are all correct

596
00:22:19,760 --> 00:22:22,480
um there's also apis available um for

597
00:22:22,480 --> 00:22:23,919
instance aaron had

598
00:22:23,919 --> 00:22:26,240
um rich compton from charter

599
00:22:26,240 --> 00:22:28,640
communications published a script called

600
00:22:28,640 --> 00:22:31,679
um uh that that makes use of the aaron r

601
00:22:31,679 --> 00:22:33,440
uh api and

602
00:22:33,440 --> 00:22:34,559
uh it's

603
00:22:34,559 --> 00:22:35,600
not really

604
00:22:35,600 --> 00:22:38,159
that polished but uh was very helpful

605
00:22:38,159 --> 00:22:39,440
for us and really wouldn't have been

606
00:22:39,440 --> 00:22:41,039
possible given that

607
00:22:41,039 --> 00:22:43,760
what we had to do um without that so

608
00:22:43,760 --> 00:22:46,720
much appreciation

609
00:22:47,520 --> 00:22:50,960
then there's the delegated model um

610
00:22:50,960 --> 00:22:54,400
the uh in this case in that case the um

611
00:22:54,400 --> 00:22:56,400
address issuing authority delegates to

612
00:22:56,400 --> 00:22:57,760
the users

613
00:22:57,760 --> 00:23:00,880
in our case our irs but you could be

614
00:23:00,880 --> 00:23:03,360
more layers down you know below say a

615
00:23:03,360 --> 00:23:05,600
country level um

616
00:23:05,600 --> 00:23:09,919
registry or so forth um and then that uh

617
00:23:09,919 --> 00:23:12,080
that authority issues you a certificate

618
00:23:12,080 --> 00:23:14,240
which is used to then sign rows and

619
00:23:14,240 --> 00:23:17,520
other things um and then that

620
00:23:17,520 --> 00:23:19,600
also hosts a record with the url to the

621
00:23:19,600 --> 00:23:21,360
publication point where to fetch all the

622
00:23:21,360 --> 00:23:22,400
stuff

623
00:23:22,400 --> 00:23:24,159
so there's two different software

624
00:23:24,159 --> 00:23:26,000
packages that

625
00:23:26,000 --> 00:23:28,400
can be used for running your ca in

626
00:23:28,400 --> 00:23:31,840
publishing uh krill from nlnet labs and

627
00:23:31,840 --> 00:23:35,120
then one called rpci.net from dragon

628
00:23:35,120 --> 00:23:37,520
labs um

629
00:23:37,520 --> 00:23:39,200
something to keep important in mind is

630
00:23:39,200 --> 00:23:41,120
that that publication point to fetch all

631
00:23:41,120 --> 00:23:43,200
those rows by all the validating caches

632
00:23:43,200 --> 00:23:44,720
out of the internet it needs to be

633
00:23:44,720 --> 00:23:46,400
globally reachable

634
00:23:46,400 --> 00:23:50,080
um and there are some slides here uh

635
00:23:50,080 --> 00:23:51,760
someone else made that

636
00:23:51,760 --> 00:23:53,279
might help one thing they're a couple of

637
00:23:53,279 --> 00:23:55,039
years old but they might help you think

638
00:23:55,039 --> 00:23:56,799
through whether or not you want to run

639
00:23:56,799 --> 00:23:59,840
your own certificate authority

640
00:23:59,840 --> 00:24:01,760
so when we thought about it okay hosted

641
00:24:01,760 --> 00:24:03,440
versus delegated

642
00:24:03,440 --> 00:24:07,039
delegated has extra servers and software

643
00:24:07,039 --> 00:24:08,400
availability

644
00:24:08,400 --> 00:24:10,799
is a little bit unknown and if we go

645
00:24:10,799 --> 00:24:12,320
with the hosted we have less of these

646
00:24:12,320 --> 00:24:14,240
risks so we share fate with all the

647
00:24:14,240 --> 00:24:17,279
other people say using aaron

648
00:24:17,279 --> 00:24:19,760
but we might consider it at a later date

649
00:24:19,760 --> 00:24:21,200
um there's

650
00:24:21,200 --> 00:24:24,400
also some irr is starting to offer

651
00:24:24,400 --> 00:24:26,159
that what's called a hybrid model where

652
00:24:26,159 --> 00:24:28,720
the ca is run by the delegated entity

653
00:24:28,720 --> 00:24:31,120
but the publication point is hosted

654
00:24:31,120 --> 00:24:33,039
elsewhere um

655
00:24:33,039 --> 00:24:35,440
and that might be an appealing way to go

656
00:24:35,440 --> 00:24:38,080
uh at some future point

657
00:24:38,080 --> 00:24:40,159
so when we think about publishing and

658
00:24:40,159 --> 00:24:41,840
creating our row as there's um

659
00:24:41,840 --> 00:24:44,080
potentially larger risks like you can

660
00:24:44,080 --> 00:24:46,159
create connectivity issues if we do

661
00:24:46,159 --> 00:24:47,760
something wrong and something goes

662
00:24:47,760 --> 00:24:49,679
unreachable temporarily

663
00:24:49,679 --> 00:24:52,320
uh it can take take time to back out or

664
00:24:52,320 --> 00:24:55,039
correct the situation because

665
00:24:55,039 --> 00:24:57,200
the row is if you want to issue a

666
00:24:57,200 --> 00:24:59,440
corrected row or um

667
00:24:59,440 --> 00:25:02,240
or remove aroha it takes minutes or

668
00:25:02,240 --> 00:25:04,559
hours so i wanted to make sure to do it

669
00:25:04,559 --> 00:25:07,760
carefully or um you know and our

670
00:25:07,760 --> 00:25:09,200
situation again

671
00:25:09,200 --> 00:25:12,400
was something about 100 plus address

672
00:25:12,400 --> 00:25:14,480
blocks almost all those were from aaron

673
00:25:14,480 --> 00:25:17,120
a few from other rars but they're all

674
00:25:17,120 --> 00:25:21,919
over these 20 odd um uh different asses

675
00:25:21,919 --> 00:25:24,799
you know our backbone our regional asses

676
00:25:24,799 --> 00:25:27,039
our data centers our enterprise

677
00:25:27,039 --> 00:25:28,960
networks

678
00:25:28,960 --> 00:25:31,440
so um

679
00:25:31,440 --> 00:25:33,440
issuing a row for the largest blocks

680
00:25:33,440 --> 00:25:35,919
makes all the rows underneath invalid so

681
00:25:35,919 --> 00:25:38,480
it's important to keep in mind um unless

682
00:25:38,480 --> 00:25:41,120
there's a more specific matching row

683
00:25:41,120 --> 00:25:42,400
already

684
00:25:42,400 --> 00:25:44,799
it's going to create a reachability

685
00:25:44,799 --> 00:25:46,880
problem for a whole bunch of your

686
00:25:46,880 --> 00:25:48,159
networks

687
00:25:48,159 --> 00:25:49,039
so

688
00:25:49,039 --> 00:25:50,720
what what

689
00:25:50,720 --> 00:25:52,960
you know our approach was to gradually

690
00:25:52,960 --> 00:25:55,440
roll out sign a few non-intrusive

691
00:25:55,440 --> 00:25:56,720
prefixes

692
00:25:56,720 --> 00:25:59,200
start at the bottom with the most more

693
00:25:59,200 --> 00:26:01,120
specific prefixes

694
00:26:01,120 --> 00:26:03,279
gradually fill those in

695
00:26:03,279 --> 00:26:06,240
before issuing rows for those top level

696
00:26:06,240 --> 00:26:08,400
largest blocks

697
00:26:08,400 --> 00:26:10,559
it ended up being several thousand rows

698
00:26:10,559 --> 00:26:14,000
mostly those were ipv6 um because even

699
00:26:14,000 --> 00:26:15,600
though there's fewer top level blocks

700
00:26:15,600 --> 00:26:18,080
there's so much more um

701
00:26:18,080 --> 00:26:20,400
fragmentation you could do potentially

702
00:26:20,400 --> 00:26:21,760
with those

703
00:26:21,760 --> 00:26:23,360
but uh

704
00:26:23,360 --> 00:26:26,480
luckily it ended up being a success with

705
00:26:26,480 --> 00:26:27,279
uh

706
00:26:27,279 --> 00:26:29,440
no real issues caused

707
00:26:29,440 --> 00:26:30,720
and

708
00:26:30,720 --> 00:26:33,039
that's all i have to say um so my name's

709
00:26:33,039 --> 00:26:34,559
tony tauber again if you want to reach

710
00:26:34,559 --> 00:26:36,320
me i'm not gonna put my

711
00:26:36,320 --> 00:26:38,559
email but it's my first name underscore

712
00:26:38,559 --> 00:26:41,760
my last name comcast.com so don't want

713
00:26:41,760 --> 00:26:44,720
to uh get more spam from robots

714
00:26:44,720 --> 00:26:47,120
and hopefully we've got time for a few

715
00:26:47,120 --> 00:26:51,559
questions thank you very much

716
00:26:54,799 --> 00:26:56,630
hi tony

717
00:26:56,630 --> 00:26:59,919
[Applause]

718
00:26:59,919 --> 00:27:02,799
hello tony is joining us from boston is

719
00:27:02,799 --> 00:27:04,159
that correct

720
00:27:04,159 --> 00:27:04,840
yeah

721
00:27:04,840 --> 00:27:07,279
excellent ah okay

722
00:27:07,279 --> 00:27:09,600
we have one online question right now oh

723
00:27:09,600 --> 00:27:11,919
got two and three first one is from

724
00:27:11,919 --> 00:27:14,640
dylan you mentioned you hit bugs in the

725
00:27:14,640 --> 00:27:17,600
validating software and the two

726
00:27:17,600 --> 00:27:18,640
noses

727
00:27:18,640 --> 00:27:21,440
you've deployed did any of those bugs

728
00:27:21,440 --> 00:27:22,480
result in

729
00:27:22,480 --> 00:27:25,520
making valid making a valid or unknown

730
00:27:25,520 --> 00:27:29,360
prefix invalid what was the impact

731
00:27:29,360 --> 00:27:30,159
right

732
00:27:30,159 --> 00:27:32,159
um the

733
00:27:32,159 --> 00:27:33,760
the bugs in the validator software

734
00:27:33,760 --> 00:27:35,279
actually weren't things that we saw it

735
00:27:35,279 --> 00:27:37,120
was more like um

736
00:27:37,120 --> 00:27:38,960
things that were reported or found by

737
00:27:38,960 --> 00:27:41,039
developers or um

738
00:27:41,039 --> 00:27:43,440
you know or other people so i didn't

739
00:27:43,440 --> 00:27:45,360
have any uh

740
00:27:45,360 --> 00:27:48,000
we didn't have any issues with uh things

741
00:27:48,000 --> 00:27:50,159
being improv becoming improperly valid

742
00:27:50,159 --> 00:27:52,000
and so forth

743
00:27:52,000 --> 00:27:53,679
that wasn't actually a problem that we

744
00:27:53,679 --> 00:27:56,480
had so luckily us

745
00:27:56,480 --> 00:27:58,880
lucky for us

746
00:27:58,880 --> 00:28:01,679
we have one from the four here

747
00:28:01,679 --> 00:28:04,480
hi chris woodfield with twitter

748
00:28:04,480 --> 00:28:06,960
this may have been covered in doug's

749
00:28:06,960 --> 00:28:10,000
talk but in case it wasn't um

750
00:28:10,000 --> 00:28:10,960
the

751
00:28:10,960 --> 00:28:13,679
invalid prefixes the ones that are being

752
00:28:13,679 --> 00:28:16,000
invalidated in your and you are dropping

753
00:28:16,000 --> 00:28:18,559
um have you had a chance to take a look

754
00:28:18,559 --> 00:28:20,320
at the nature of those and find out if

755
00:28:20,320 --> 00:28:23,440
those are simple misconfigurations or if

756
00:28:23,440 --> 00:28:25,679
there's actual malicious uh

757
00:28:25,679 --> 00:28:28,559
advertisements going on there

758
00:28:28,559 --> 00:28:31,120
um frankly now we haven't bothered to

759
00:28:31,120 --> 00:28:35,279
dig into it uh too deeply that way um

760
00:28:35,279 --> 00:28:36,880
just uh

761
00:28:36,880 --> 00:28:39,279
i guess you know that that stuff might

762
00:28:39,279 --> 00:28:42,000
come up but i mean in the realm of bgp

763
00:28:42,000 --> 00:28:44,559
you know bugging debugging um people's

764
00:28:44,559 --> 00:28:46,240
bgp announcements on the internet i

765
00:28:46,240 --> 00:28:47,840
found that uh

766
00:28:47,840 --> 00:28:49,200
you could really

767
00:28:49,200 --> 00:28:50,799
spend a lot of time shooting that if you

768
00:28:50,799 --> 00:28:52,320
want to try and debug everything that's

769
00:28:52,320 --> 00:28:54,240
going on in the world

770
00:28:54,240 --> 00:28:55,279
and you know

771
00:28:55,279 --> 00:28:57,440
why it's happening and and you know who

772
00:28:57,440 --> 00:28:58,720
to get in touch with about it

773
00:28:58,720 --> 00:29:00,720
unfortunately

774
00:29:00,720 --> 00:29:02,399
too many other things to do

775
00:29:02,399 --> 00:29:05,039
all right thank you

776
00:29:05,760 --> 00:29:07,679
all right we have some more online

777
00:29:07,679 --> 00:29:09,039
questions

778
00:29:09,039 --> 00:29:11,440
this comes from tony lee why would

779
00:29:11,440 --> 00:29:14,399
in otherwise rice responsible as

780
00:29:14,399 --> 00:29:16,640
intentionally inject a whole lot of

781
00:29:16,640 --> 00:29:19,760
invalid prefixes

782
00:29:20,000 --> 00:29:21,120
um

783
00:29:21,120 --> 00:29:23,760
why would why would they intentionally

784
00:29:23,760 --> 00:29:27,200
inject um yep well uh i i don't know if

785
00:29:27,200 --> 00:29:30,960
uh anybody is is seeing some invalids

786
00:29:30,960 --> 00:29:33,039
from us um i did find there are some

787
00:29:33,039 --> 00:29:34,720
places where

788
00:29:34,720 --> 00:29:36,399
you know some external

789
00:29:36,399 --> 00:29:38,799
vantage points like rockviews um are

790
00:29:38,799 --> 00:29:41,600
seeing some um they are

791
00:29:41,600 --> 00:29:42,480
um

792
00:29:42,480 --> 00:29:44,559
things that are covered by valid

793
00:29:44,559 --> 00:29:46,240
prefixes so i don't think there's an

794
00:29:46,240 --> 00:29:48,799
operational issue with them but uh

795
00:29:48,799 --> 00:29:51,440
um you know some people give route views

796
00:29:51,440 --> 00:29:54,080
some kind of uh unfiltered view and we

797
00:29:54,080 --> 00:29:57,200
may send some more specifics to a few

798
00:29:57,200 --> 00:29:59,520
places so i don't know if that's what's

799
00:29:59,520 --> 00:30:01,200
behind the question

800
00:30:01,200 --> 00:30:03,039
but

801
00:30:03,039 --> 00:30:04,720
i have one more from

802
00:30:04,720 --> 00:30:07,520
i have one more from the floor here

803
00:30:07,520 --> 00:30:10,480
doug midori kentick hey tony um hey i

804
00:30:10,480 --> 00:30:12,640
have a question i've forgive me a few if

805
00:30:12,640 --> 00:30:15,440
i missed it uh when you so arowa's got

806
00:30:15,440 --> 00:30:17,679
two parts it's got the origin but it's

807
00:30:17,679 --> 00:30:19,919
also got the max prefix length right so

808
00:30:19,919 --> 00:30:21,840
you have a strategy around max prefix

809
00:30:21,840 --> 00:30:24,000
length because i feel like um there's

810
00:30:24,000 --> 00:30:26,960
been a couple of instances in the past

811
00:30:26,960 --> 00:30:30,320
notably in my mind the verizon uh

812
00:30:30,320 --> 00:30:33,520
allegheny cloudflare you know leak

813
00:30:33,520 --> 00:30:35,679
june 2019

814
00:30:35,679 --> 00:30:37,039
where

815
00:30:37,039 --> 00:30:38,559
had uh

816
00:30:38,559 --> 00:30:41,520
had verizon filtering um based on max

817
00:30:41,520 --> 00:30:43,840
prefix length that would have saved

818
00:30:43,840 --> 00:30:45,520
cloudflare in that case

819
00:30:45,520 --> 00:30:47,679
but also the lesson learned is that your

820
00:30:47,679 --> 00:30:49,520
max prefix like needs to be an exact

821
00:30:49,520 --> 00:30:52,480
match otherwise the rad optimizer could

822
00:30:52,480 --> 00:30:54,720
uh inject some more specifics right do

823
00:30:54,720 --> 00:30:56,559
you guys do that do you guys exact match

824
00:30:56,559 --> 00:30:58,640
or how do you handle that

825
00:30:58,640 --> 00:31:00,799
yeah thanks for the question um yeah we

826
00:31:00,799 --> 00:31:01,919
take the

827
00:31:01,919 --> 00:31:06,000
um advice to just make our pre our row

828
00:31:06,000 --> 00:31:08,320
as an exact match for the prefix that we

829
00:31:08,320 --> 00:31:09,279
intend to

830
00:31:09,279 --> 00:31:10,480
advertise

831
00:31:10,480 --> 00:31:12,159
um the

832
00:31:12,159 --> 00:31:14,159
um

833
00:31:14,159 --> 00:31:15,760
right so people have talked about oh

834
00:31:15,760 --> 00:31:17,919
well what if i wanna you know send a

835
00:31:17,919 --> 00:31:19,279
bunch of

836
00:31:19,279 --> 00:31:21,760
more specifics at some later date

837
00:31:21,760 --> 00:31:24,320
but i'm not sure i mean luckily there's

838
00:31:24,320 --> 00:31:27,120
automation to take care of that uh so if

839
00:31:27,120 --> 00:31:30,159
you know if you are doing it in some

840
00:31:30,159 --> 00:31:32,159
as part of some plan it doesn't take too

841
00:31:32,159 --> 00:31:33,919
long to generate and inject the roads i

842
00:31:33,919 --> 00:31:35,279
mean it does take a little while for

843
00:31:35,279 --> 00:31:37,039
them to propagate like i said on the

844
00:31:37,039 --> 00:31:39,679
order of some minutes two hours

845
00:31:39,679 --> 00:31:40,960
um

846
00:31:40,960 --> 00:31:43,039
but uh it's not worth the risk as you

847
00:31:43,039 --> 00:31:44,640
suggest the um

848
00:31:44,640 --> 00:31:46,799
if uh if some

849
00:31:46,799 --> 00:31:48,559
malicious actor comes along or

850
00:31:48,559 --> 00:31:50,399
unintentional um

851
00:31:50,399 --> 00:31:52,159
thing with a route optimizer injects a

852
00:31:52,159 --> 00:31:54,799
bunch of more specifics underneath your

853
00:31:54,799 --> 00:31:58,159
um larger announcement you know those

854
00:31:58,159 --> 00:31:59,600
get um

855
00:31:59,600 --> 00:32:01,200
you know those show up as valid to

856
00:32:01,200 --> 00:32:03,200
people i mean obviously the origin ais

857
00:32:03,200 --> 00:32:04,799
has to match but

858
00:32:04,799 --> 00:32:07,440
um those show up as valid and people can

859
00:32:07,440 --> 00:32:09,519
um you know traffic will get misdirected

860
00:32:09,519 --> 00:32:11,440
to the wrong place and that's not what

861
00:32:11,440 --> 00:32:14,080
we want so that's what we um what our

862
00:32:14,080 --> 00:32:16,159
approach has been to do and exactly but

863
00:32:16,159 --> 00:32:18,240
ensure the uh the the engineering

864
00:32:18,240 --> 00:32:21,919
overhead or the the cost uh there it's

865
00:32:21,919 --> 00:32:23,360
you can solve it through automation

866
00:32:23,360 --> 00:32:24,640
because i think that's been a pushback

867
00:32:24,640 --> 00:32:26,559
i've kind of argued that that uh you

868
00:32:26,559 --> 00:32:27,919
really need to do exact match otherwise

869
00:32:27,919 --> 00:32:30,159
you're going to get a route optimizer uh

870
00:32:30,159 --> 00:32:31,840
mess with you then the pushback is all

871
00:32:31,840 --> 00:32:33,919
right well now you're you've

872
00:32:33,919 --> 00:32:35,760
uh limited your engineering ability

873
00:32:35,760 --> 00:32:37,679
because now you've got to keep keep not

874
00:32:37,679 --> 00:32:39,679
just routing and stay you got to update

875
00:32:39,679 --> 00:32:41,039
all the roads every time you change

876
00:32:41,039 --> 00:32:42,480
routing uh these things have to be

877
00:32:42,480 --> 00:32:43,679
identical

878
00:32:43,679 --> 00:32:45,279
but you're saying this is solvable

879
00:32:45,279 --> 00:32:47,120
through automation

880
00:32:47,120 --> 00:32:50,639
uh i think so yeah great

881
00:32:50,880 --> 00:32:53,600
thank you doug i got one more online or

882
00:32:53,600 --> 00:32:56,720
two more online questions matt pitock

883
00:32:56,720 --> 00:32:58,480
says thank you for the talk tony it

884
00:32:58,480 --> 00:32:59,840
sounds like you've been

885
00:32:59,840 --> 00:33:03,120
you began dropping invalids from peers

886
00:33:03,120 --> 00:33:05,440
before you generated your generated and

887
00:33:05,440 --> 00:33:08,399
signed roas for your own prefixes

888
00:33:08,399 --> 00:33:10,799
can you talk a moment about what drove

889
00:33:10,799 --> 00:33:12,799
the decision to start filtering others

890
00:33:12,799 --> 00:33:15,360
before first getting your own

891
00:33:15,360 --> 00:33:18,559
house parentheses prefixes in order with

892
00:33:18,559 --> 00:33:20,320
roas

893
00:33:20,320 --> 00:33:22,080
yeah good question i mean i definitely

894
00:33:22,080 --> 00:33:24,080
thought about this for a while and had

895
00:33:24,080 --> 00:33:25,279
that kind of

896
00:33:25,279 --> 00:33:26,880
uh you know

897
00:33:26,880 --> 00:33:29,279
thought about it in the sort of ethical

898
00:33:29,279 --> 00:33:30,720
um

899
00:33:30,720 --> 00:33:31,600
you know

900
00:33:31,600 --> 00:33:33,519
in those ethical terms that you

901
00:33:33,519 --> 00:33:36,399
are using similar type of terms and

902
00:33:36,399 --> 00:33:38,159
uh i don't think of it that way you know

903
00:33:38,159 --> 00:33:39,919
that i mean i think for me the real

904
00:33:39,919 --> 00:33:42,159
breakthrough a real breakthrough was as

905
00:33:42,159 --> 00:33:43,760
i kind of tried to

906
00:33:43,760 --> 00:33:45,519
um drive home in the talk is that the

907
00:33:45,519 --> 00:33:48,159
two things aren't related you know i

908
00:33:48,159 --> 00:33:49,519
mean

909
00:33:49,519 --> 00:33:51,279
you could people can

910
00:33:51,279 --> 00:33:53,679
say you know cast cast uh cast it that

911
00:33:53,679 --> 00:33:55,360
way but they they're

912
00:33:55,360 --> 00:33:57,760
it's not required i mean i know of at

913
00:33:57,760 --> 00:34:00,480
least one sizeable network that has you

914
00:34:00,480 --> 00:34:03,919
know rov no roas

915
00:34:03,919 --> 00:34:05,919
whatever life goes on i think it's it's

916
00:34:05,919 --> 00:34:08,639
useful for them and and it does create a

917
00:34:08,639 --> 00:34:11,440
level of protection for the internet um

918
00:34:11,440 --> 00:34:12,639
you know

919
00:34:12,639 --> 00:34:14,399
so that's the ultimate goal i don't

920
00:34:14,399 --> 00:34:16,320
think it's necessarily like

921
00:34:16,320 --> 00:34:18,480
making some kind of statement about your

922
00:34:18,480 --> 00:34:20,560
you know virtuous behavior necessarily

923
00:34:20,560 --> 00:34:23,599
but you know the ultimate goal is

924
00:34:23,599 --> 00:34:26,079
better more stable internet for

925
00:34:26,079 --> 00:34:27,440
all of us

926
00:34:27,440 --> 00:34:30,079
one last question here from andrew smith

927
00:34:30,079 --> 00:34:32,719
did you use aaron's otne environment for

928
00:34:32,719 --> 00:34:35,440
testing publishing roas or did you jump

929
00:34:35,440 --> 00:34:37,679
straight into production when publishing

930
00:34:37,679 --> 00:34:40,399
roasts did you employ any kind of sanity

931
00:34:40,399 --> 00:34:42,480
check to make sure that the roas you

932
00:34:42,480 --> 00:34:45,199
were creating didn't contradict your

933
00:34:45,199 --> 00:34:48,639
currently advertised routes

934
00:34:48,639 --> 00:34:51,280
um yeah so uh

935
00:34:51,280 --> 00:34:52,239
i

936
00:34:52,239 --> 00:34:54,320
did a tiny bit of experimentation with

937
00:34:54,320 --> 00:34:57,680
the ocna environment um

938
00:34:57,680 --> 00:34:59,280
didn't end up

939
00:34:59,280 --> 00:35:01,280
you know testing sort of everything with

940
00:35:01,280 --> 00:35:03,119
it but it did get it did help with

941
00:35:03,119 --> 00:35:06,320
getting a bit of comfort to um you know

942
00:35:06,320 --> 00:35:08,880
use use the script that i mentioned

943
00:35:08,880 --> 00:35:10,800
to publish a row make sure that i could

944
00:35:10,800 --> 00:35:13,200
see it in my validator also when you

945
00:35:13,200 --> 00:35:15,839
if you want to um use that environment

946
00:35:15,839 --> 00:35:17,119
you can

947
00:35:17,119 --> 00:35:19,680
add a trust anchor for it to your

948
00:35:19,680 --> 00:35:21,680
validator software so that you can pull

949
00:35:21,680 --> 00:35:23,440
in

950
00:35:23,440 --> 00:35:25,599
the information from the otna

951
00:35:25,599 --> 00:35:27,680
environment that's a testbed an iron

952
00:35:27,680 --> 00:35:29,680
testbed like associated with backed up

953
00:35:29,680 --> 00:35:33,520
to say aaron has a test bed uh otna uh i

954
00:35:33,520 --> 00:35:34,960
can't remember what it stands for but

955
00:35:34,960 --> 00:35:37,040
online testing and evaluation or

956
00:35:37,040 --> 00:35:39,920
something like that um and so yeah i did

957
00:35:39,920 --> 00:35:41,760
do a little bit with that to get a sort

958
00:35:41,760 --> 00:35:43,760
of sense of comfort with it and

959
00:35:43,760 --> 00:35:45,280
understanding what the different pieces

960
00:35:45,280 --> 00:35:46,560
were and that i could

961
00:35:46,560 --> 00:35:49,280
sort of control them

962
00:35:49,280 --> 00:35:51,839
and then as far as sanity checking to

963
00:35:51,839 --> 00:35:53,520
make sure i weren't contradicting my

964
00:35:53,520 --> 00:35:57,200
advertised routes yeah they

965
00:35:57,200 --> 00:35:59,119
did do that um

966
00:35:59,119 --> 00:36:01,119
but it wasn't it didn't involve i'm

967
00:36:01,119 --> 00:36:02,880
trying to think how did i do it i mean

968
00:36:02,880 --> 00:36:04,079
you know looking at

969
00:36:04,079 --> 00:36:06,960
different external vantage points um you

970
00:36:06,960 --> 00:36:11,280
know be it route views right

971
00:36:11,520 --> 00:36:13,839
hurricane electric's um

972
00:36:13,839 --> 00:36:14,960
bgp

973
00:36:14,960 --> 00:36:16,960
uh viewing infrastructure is pretty

974
00:36:16,960 --> 00:36:17,839
useful

975
00:36:17,839 --> 00:36:20,000
it's not foolproof but uh you know those

976
00:36:20,000 --> 00:36:22,480
kind of things um looking at those

977
00:36:22,480 --> 00:36:24,000
looking at outbound advertisements

978
00:36:24,000 --> 00:36:26,800
actually that was another thing taken um

979
00:36:26,800 --> 00:36:29,280
for different neighbors like looking

980
00:36:29,280 --> 00:36:32,400
dumping um using cli commands uh

981
00:36:32,400 --> 00:36:34,320
outbound um

982
00:36:34,320 --> 00:36:37,520
scripted cli um outbound announcements

983
00:36:37,520 --> 00:36:38,880
and making sure that we recovered our

984
00:36:38,880 --> 00:36:42,480
thoughts and i had some other internal

985
00:36:42,480 --> 00:36:44,240
scripts that i wrote so i'll kind of

986
00:36:44,240 --> 00:36:45,920
help compare those things

987
00:36:45,920 --> 00:36:47,920
here's our last question tony follow up

988
00:36:47,920 --> 00:36:50,720
from tony lee

989
00:36:51,119 --> 00:36:52,160
pardon me

990
00:36:52,160 --> 00:36:54,880
the nist rpki monitor shows that several

991
00:36:54,880 --> 00:36:57,760
as's are getting both valid not found in

992
00:36:57,760 --> 00:37:00,240
invalid prefixes have you investigated

993
00:37:00,240 --> 00:37:01,920
it at all at all

994
00:37:01,920 --> 00:37:04,960
uh yeah so thanks tommy um

995
00:37:04,960 --> 00:37:07,200
for that question on sudbury exactly

996
00:37:07,200 --> 00:37:08,480
that's the thing i was kind of referring

997
00:37:08,480 --> 00:37:10,720
to which i i thought maybe you

998
00:37:10,720 --> 00:37:12,079
were getting out with the earlier

999
00:37:12,079 --> 00:37:14,320
question so yeah i did follow up with

1000
00:37:14,320 --> 00:37:16,800
that and talk to um the folks at mist

1001
00:37:16,800 --> 00:37:18,880
and um they were able to

1002
00:37:18,880 --> 00:37:21,280
direct me to you know where some of that

1003
00:37:21,280 --> 00:37:22,800
where they were getting that and as i

1004
00:37:22,800 --> 00:37:25,359
said i think it's in um

1005
00:37:25,359 --> 00:37:28,480
it's coming from some route view

1006
00:37:28,480 --> 00:37:30,640
one of the route views monitors and one

1007
00:37:30,640 --> 00:37:32,560
feed that's going to it yeah so i did

1008
00:37:32,560 --> 00:37:34,640
look at it and i talked to them also i

1009
00:37:34,640 --> 00:37:37,119
mean they do have an indication in their

1010
00:37:37,119 --> 00:37:39,680
um excellent website of whether or not

1011
00:37:39,680 --> 00:37:42,240
it's covered by a you know whether an

1012
00:37:42,240 --> 00:37:44,240
invalid is covered by a valid so that

1013
00:37:44,240 --> 00:37:45,359
it's um

1014
00:37:45,359 --> 00:37:47,839
uh you can get a sense of um

1015
00:37:47,839 --> 00:37:50,240
whether uh you know it's going to have

1016
00:37:50,240 --> 00:37:52,720
an effect or not create electricity

1017
00:37:52,720 --> 00:37:54,400
problem

1018
00:37:54,400 --> 00:37:56,240
so i wouldn't necessarily call it a

1019
00:37:56,240 --> 00:37:58,480
totally cosmetic problem but i think i

1020
00:37:58,480 --> 00:38:00,960
have a good handle on you know what's

1021
00:38:00,960 --> 00:38:03,280
happening with it and that it is causing

1022
00:38:03,280 --> 00:38:05,520
you know a functional problem um as far

1023
00:38:05,520 --> 00:38:07,839
as not found yeah we advertise not found

1024
00:38:07,839 --> 00:38:09,359
prefixes

1025
00:38:09,359 --> 00:38:12,160
uh for ones where um there's address

1026
00:38:12,160 --> 00:38:14,960
space that is on behalf of our customers

1027
00:38:14,960 --> 00:38:17,680
um that's not our our own outer space i

1028
00:38:17,680 --> 00:38:20,079
mean we want to encourage them to um

1029
00:38:20,079 --> 00:38:21,920
to issue roads um

1030
00:38:21,920 --> 00:38:23,839
but we're not you know that's more of a

1031
00:38:23,839 --> 00:38:26,480
socialization thing and training so i'm

1032
00:38:26,480 --> 00:38:28,560
not totally there yet

1033
00:38:28,560 --> 00:38:30,720
excellent well tony thank you very much

1034
00:38:30,720 --> 00:38:32,240
for joining us live from boston

1035
00:38:32,240 --> 00:38:33,520
cambridge

1036
00:38:33,520 --> 00:38:37,960
and get a round of applause for tony

1037
00:38:40,320 --> 00:38:44,059
[Music]

