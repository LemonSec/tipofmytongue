1
00:00:00,000 --> 00:00:05,279
[Music]

2
00:00:05,279 --> 00:00:07,120
i would like to introduce avi friedman

3
00:00:07,120 --> 00:00:09,760
who will be presenting open edge network

4
00:00:09,760 --> 00:00:11,360
telemetry tools

5
00:00:11,360 --> 00:00:13,920
avi is the co-founder and ceo of network

6
00:00:13,920 --> 00:00:15,679
obsid

7
00:00:15,679 --> 00:00:18,160
servability company kentic

8
00:00:18,160 --> 00:00:21,520
avi started bgp's first isp known as net

9
00:00:21,520 --> 00:00:23,760
access and also worked at abovenet

10
00:00:23,760 --> 00:00:26,480
akamai and server central avi has been a

11
00:00:26,480 --> 00:00:28,160
regular attendee and contributors since

12
00:00:28,160 --> 00:00:31,199
he first attended nanak 5 in 1995.

13
00:00:31,199 --> 00:00:33,520
welcome back to non-hog pleasure to have

14
00:00:33,520 --> 00:00:35,280
you back

15
00:00:35,280 --> 00:00:37,760
thank you

16
00:00:39,360 --> 00:00:41,520
thank you alex i love your npr voice it

17
00:00:41,520 --> 00:00:45,200
was a very good

18
00:00:45,200 --> 00:00:47,120
i am wearing pants and shoes and closed

19
00:00:47,120 --> 00:00:48,320
toed shoes

20
00:00:48,320 --> 00:00:50,160
uh something about coat of conduct says

21
00:00:50,160 --> 00:00:52,719
you need to wear enough clothing so

22
00:00:52,719 --> 00:00:54,000
um

23
00:00:54,000 --> 00:00:56,879
i'm gonna talk today about some open

24
00:00:56,879 --> 00:00:59,520
source work that we're doing at kentic

25
00:00:59,520 --> 00:01:01,680
trying to solve some problems that we've

26
00:01:01,680 --> 00:01:03,120
heard from customers about taking

27
00:01:03,120 --> 00:01:04,559
telemetry

28
00:01:04,559 --> 00:01:06,560
from all over their network of lots of

29
00:01:06,560 --> 00:01:08,400
different types and sending it to the

30
00:01:08,400 --> 00:01:10,320
different systems that they have

31
00:01:10,320 --> 00:01:12,720
to do analytics operations planning

32
00:01:12,720 --> 00:01:15,200
security

33
00:01:15,200 --> 00:01:18,799
um to just frame the problem um network

34
00:01:18,799 --> 00:01:20,560
what does that mean is it my routers and

35
00:01:20,560 --> 00:01:22,240
switches is it the internet is it the

36
00:01:22,240 --> 00:01:23,840
cloud is it sas

37
00:01:23,840 --> 00:01:25,759
today it's sort of all of that and the

38
00:01:25,759 --> 00:01:27,920
kind of telemetry you get from it

39
00:01:27,920 --> 00:01:29,360
even if you just say i want to look at

40
00:01:29,360 --> 00:01:31,840
my traffic it could be from a server um

41
00:01:31,840 --> 00:01:33,920
sitting in someone else's facility it

42
00:01:33,920 --> 00:01:35,520
could be again routers and switches it

43
00:01:35,520 --> 00:01:36,720
could be

44
00:01:36,720 --> 00:01:39,119
vpc flow it could be something up at the

45
00:01:39,119 --> 00:01:41,920
higher level so there's a lot of hybrid

46
00:01:41,920 --> 00:01:43,439
kinds of networks

47
00:01:43,439 --> 00:01:46,960
um and we live in a world also where

48
00:01:46,960 --> 00:01:49,360
everything is orchestrated so

49
00:01:49,360 --> 00:01:51,759
um what was one ip address at one point

50
00:01:51,759 --> 00:01:53,840
might not have been another so in fact

51
00:01:53,840 --> 00:01:55,360
the metadata

52
00:01:55,360 --> 00:01:57,439
about what applications what users what

53
00:01:57,439 --> 00:01:59,920
groups are running on things is also a

54
00:01:59,920 --> 00:02:01,439
kind of telemetry that we need to make

55
00:02:01,439 --> 00:02:03,360
sense of things

56
00:02:03,360 --> 00:02:05,840
different vendors have different

57
00:02:05,840 --> 00:02:07,680
implementations but sometimes even the

58
00:02:07,680 --> 00:02:09,440
same box that you get

59
00:02:09,440 --> 00:02:10,878
may give you different

60
00:02:10,878 --> 00:02:13,920
meaning between snmp streaming telemetry

61
00:02:13,920 --> 00:02:15,760
cli api

62
00:02:15,760 --> 00:02:18,959
putting it all together is a challenge

63
00:02:18,959 --> 00:02:21,840
this is the world that we come from so

64
00:02:21,840 --> 00:02:24,160
we've seen a lot of this pain

65
00:02:24,160 --> 00:02:26,319
over time from our own customers and

66
00:02:26,319 --> 00:02:27,520
ultimately the goal that people are

67
00:02:27,520 --> 00:02:29,200
trying to get to is answering questions

68
00:02:29,200 --> 00:02:31,040
so to answer those questions they need

69
00:02:31,040 --> 00:02:32,800
to get data from lots of different types

70
00:02:32,800 --> 00:02:34,800
of networks and lots of different types

71
00:02:34,800 --> 00:02:39,200
of telemetry metrics traffic config

72
00:02:39,200 --> 00:02:41,200
and and really ultimately some of the

73
00:02:41,200 --> 00:02:44,080
other kind uh levels of the stack too

74
00:02:44,080 --> 00:02:46,000
so

75
00:02:46,000 --> 00:02:48,640
how do you put all that together um is

76
00:02:48,640 --> 00:02:51,120
an interesting challenge um

77
00:02:51,120 --> 00:02:52,400
uh

78
00:02:52,400 --> 00:02:54,959
we haven't seen any of the major vendors

79
00:02:54,959 --> 00:02:57,280
addressing um and there doesn't seem to

80
00:02:57,280 --> 00:02:59,920
be any single open source project that's

81
00:02:59,920 --> 00:03:01,840
that's worked to put all this together

82
00:03:01,840 --> 00:03:03,360
it's something that we looked at and

83
00:03:03,360 --> 00:03:05,120
said um

84
00:03:05,120 --> 00:03:06,480
that we thought it would make our life

85
00:03:06,480 --> 00:03:08,400
easier our customer's life easier if we

86
00:03:08,400 --> 00:03:09,920
actually took some of the technology we

87
00:03:09,920 --> 00:03:12,080
had developed between agents

88
00:03:12,080 --> 00:03:14,720
and moving network telemetry and develop

89
00:03:14,720 --> 00:03:16,879
it in the open with partners and with

90
00:03:16,879 --> 00:03:18,640
customers

91
00:03:18,640 --> 00:03:20,640
so we set up something called kintik

92
00:03:20,640 --> 00:03:23,280
labs and said as a strategy we're going

93
00:03:23,280 --> 00:03:25,280
to put all of the agents all the things

94
00:03:25,280 --> 00:03:27,599
that sort of do the ingest layer of

95
00:03:27,599 --> 00:03:28,959
taking

96
00:03:28,959 --> 00:03:31,599
telemetry from the network and put those

97
00:03:31,599 --> 00:03:33,599
as open projects there's also a

98
00:03:33,599 --> 00:03:35,040
secondary

99
00:03:35,040 --> 00:03:37,040
effort which is to give people

100
00:03:37,040 --> 00:03:40,319
especially on the maybe our peers who do

101
00:03:40,319 --> 00:03:42,560
observability for the application layer

102
00:03:42,560 --> 00:03:44,879
or in security basic tools that they can

103
00:03:44,879 --> 00:03:46,799
use to bring networking into their other

104
00:03:46,799 --> 00:03:48,239
platforms

105
00:03:48,239 --> 00:03:49,120
because

106
00:03:49,120 --> 00:03:51,519
if you look at querying by prefix or

107
00:03:51,519 --> 00:03:53,519
path these are things that don't really

108
00:03:53,519 --> 00:03:55,519
work so well in time series databases so

109
00:03:55,519 --> 00:03:57,439
how do you take the data

110
00:03:57,439 --> 00:03:59,599
reform it put it into other systems so

111
00:03:59,599 --> 00:04:01,439
that it could be correlated

112
00:04:01,439 --> 00:04:02,879
the things i'm going to focus on in this

113
00:04:02,879 --> 00:04:05,040
talk are something we built called k

114
00:04:05,040 --> 00:04:07,360
translate which actually takes network

115
00:04:07,360 --> 00:04:10,480
data translates it um replicates it

116
00:04:10,480 --> 00:04:12,319
enriches it does a bunch of things and

117
00:04:12,319 --> 00:04:14,560
also can take netflow and s flow

118
00:04:14,560 --> 00:04:17,600
itself and snmp

119
00:04:17,600 --> 00:04:19,040
some agents that we've built that are

120
00:04:19,040 --> 00:04:21,759
more for running on servers where

121
00:04:21,759 --> 00:04:22,639
you may

122
00:04:22,639 --> 00:04:24,560
not have access to the underlying

123
00:04:24,560 --> 00:04:26,400
network layer it may be in cloud it may

124
00:04:26,400 --> 00:04:27,199
be

125
00:04:27,199 --> 00:04:29,680
dedicated hosting so we have some pcap

126
00:04:29,680 --> 00:04:31,840
and ebpf options i'm not going to go

127
00:04:31,840 --> 00:04:33,919
deep into ebpf but

128
00:04:33,919 --> 00:04:36,000
it is a pretty lightweight way of

129
00:04:36,000 --> 00:04:37,360
getting data

130
00:04:37,360 --> 00:04:39,759
from many levels from the kernel

131
00:04:39,759 --> 00:04:42,560
that also can give you performance uh

132
00:04:42,560 --> 00:04:44,240
latent information you really can't get

133
00:04:44,240 --> 00:04:45,040
from

134
00:04:45,040 --> 00:04:45,919
most

135
00:04:45,919 --> 00:04:47,600
big routers and switches that folks in

136
00:04:47,600 --> 00:04:49,360
the monogamous community use there's

137
00:04:49,360 --> 00:04:51,199
some other um there's some other

138
00:04:51,199 --> 00:04:52,639
projects which you're welcome to take a

139
00:04:52,639 --> 00:04:53,759
look at

140
00:04:53,759 --> 00:04:55,919
ask questions about if you go to kentic

141
00:04:55,919 --> 00:04:57,919
labs some things around kubernetes

142
00:04:57,919 --> 00:04:59,520
performance with the synthetics agent

143
00:04:59,520 --> 00:05:01,680
which we open sourced

144
00:05:01,680 --> 00:05:03,520
pulling cloud metadata so you can make

145
00:05:03,520 --> 00:05:05,759
sense of what vpc and

146
00:05:05,759 --> 00:05:09,120
you know your ips are mapped to

147
00:05:09,120 --> 00:05:10,800
some flow visibility for people looking

148
00:05:10,800 --> 00:05:13,840
to have a low end solution there uh and

149
00:05:13,840 --> 00:05:17,120
uh again some performance uh testing

150
00:05:17,120 --> 00:05:19,919
so our our goal with the agents

151
00:05:19,919 --> 00:05:21,680
and the translator the reason why we see

152
00:05:21,680 --> 00:05:23,840
them together is to really be able to

153
00:05:23,840 --> 00:05:25,680
have one platform that you can send all

154
00:05:25,680 --> 00:05:27,840
your telemetry into and send it out to

155
00:05:27,840 --> 00:05:29,840
the multiple systems that you need again

156
00:05:29,840 --> 00:05:31,440
it was something we had to get into we

157
00:05:31,440 --> 00:05:33,759
didn't see any great solutions when we

158
00:05:33,759 --> 00:05:35,280
started and i'll cover this on a later

159
00:05:35,280 --> 00:05:38,240
slide there was samplicator for udp but

160
00:05:38,240 --> 00:05:40,000
that doesn't really handle encryption so

161
00:05:40,000 --> 00:05:41,840
we needed to go do do something that did

162
00:05:41,840 --> 00:05:44,160
encryption and you know by the time

163
00:05:44,160 --> 00:05:46,720
you're done uh you want a lot of you

164
00:05:46,720 --> 00:05:48,080
have a lot of people re-implementing a

165
00:05:48,080 --> 00:05:49,600
lot of the same things over and over

166
00:05:49,600 --> 00:05:51,360
again a lot of the streaming telemetry

167
00:05:51,360 --> 00:05:53,039
tools are pretty cool but

168
00:05:53,039 --> 00:05:56,160
often live in uh gnmi and open config

169
00:05:56,160 --> 00:05:58,160
land and then sort of leaves the snmp

170
00:05:58,160 --> 00:06:00,160
people behind and of course flow was

171
00:06:00,160 --> 00:06:02,639
never in the religion um of the

172
00:06:02,639 --> 00:06:04,880
streaming telemetry side so much less

173
00:06:04,880 --> 00:06:07,520
bgp and other things bmp and other

174
00:06:07,520 --> 00:06:10,160
things so it's really a broader set than

175
00:06:10,160 --> 00:06:12,800
a lot of single point solutions um have

176
00:06:12,800 --> 00:06:14,720
solved so our goal is to make it really

177
00:06:14,720 --> 00:06:17,039
work with everything and on the output

178
00:06:17,039 --> 00:06:19,600
side go not only to network tools but to

179
00:06:19,600 --> 00:06:21,520
other platforms as well

180
00:06:21,520 --> 00:06:23,039
so i'll quickly talk about some of the

181
00:06:23,039 --> 00:06:25,440
agents

182
00:06:25,440 --> 00:06:26,639
and where

183
00:06:26,639 --> 00:06:28,880
we do see some of this

184
00:06:28,880 --> 00:06:30,560
come back closer to the network

185
00:06:30,560 --> 00:06:33,520
infrastructure is actually dns servers

186
00:06:33,520 --> 00:06:35,520
um again this is one of the reasons why

187
00:06:35,520 --> 00:06:37,840
we got into agents was to be able to do

188
00:06:37,840 --> 00:06:41,039
decodes um and so our pcap agent

189
00:06:41,039 --> 00:06:44,880
that we've open sourced k-probe it's um

190
00:06:44,880 --> 00:06:47,039
k-probe is written in go it can do

191
00:06:47,039 --> 00:06:48,720
decoding

192
00:06:48,720 --> 00:06:50,560
or it can do kernel level packet

193
00:06:50,560 --> 00:06:52,160
sampling so if you have a server that's

194
00:06:52,160 --> 00:06:55,440
running 10 gigabits uh you wouldn't do

195
00:06:55,440 --> 00:06:57,840
decoding https and dns and things like

196
00:06:57,840 --> 00:06:59,840
that

197
00:06:59,840 --> 00:07:02,720
but google introduced some code

198
00:07:02,720 --> 00:07:04,639
five plus years ago to do kernel level

199
00:07:04,639 --> 00:07:06,000
packet sampling so you didn't have to

200
00:07:06,000 --> 00:07:09,120
consume all the pcapp and you can

201
00:07:09,120 --> 00:07:12,720
use pcapp to do 10 plus gig monitoring

202
00:07:12,720 --> 00:07:15,280
with kprobe or at a lower speed again

203
00:07:15,280 --> 00:07:16,720
typically dns server you can do the

204
00:07:16,720 --> 00:07:18,479
decodes get that out if that's

205
00:07:18,479 --> 00:07:20,080
operationally useful

206
00:07:20,080 --> 00:07:21,199
um

207
00:07:21,199 --> 00:07:22,880
we really are focusing more of our work

208
00:07:22,880 --> 00:07:24,960
on evpf this has been pretty stable run

209
00:07:24,960 --> 00:07:26,720
in production

210
00:07:26,720 --> 00:07:27,599
and

211
00:07:27,599 --> 00:07:29,919
right now it sends data in a cap and

212
00:07:29,919 --> 00:07:31,919
proto-based format that we use but

213
00:07:31,919 --> 00:07:33,759
paired with k-translate you can send it

214
00:07:33,759 --> 00:07:34,479
to

215
00:07:34,479 --> 00:07:37,360
um elastic prometheus influx kentic new

216
00:07:37,360 --> 00:07:38,400
relic

217
00:07:38,400 --> 00:07:39,520
datadog

218
00:07:39,520 --> 00:07:42,960
csv in s3 kafka wherever you wanted to

219
00:07:42,960 --> 00:07:44,479
send it

220
00:07:44,479 --> 00:07:45,840
evpf

221
00:07:45,840 --> 00:07:48,080
is the direction that most of the folks

222
00:07:48,080 --> 00:07:51,280
in the application world are going it's

223
00:07:51,280 --> 00:07:53,919
well how many people have written bppf

224
00:07:53,919 --> 00:07:56,720
bpf filters by hand yes

225
00:07:56,720 --> 00:07:58,479
so it's that but for the kernel so it's

226
00:07:58,479 --> 00:08:01,440
really a programmability layer um and

227
00:08:01,440 --> 00:08:03,759
you can attach to tcp events you can

228
00:08:03,759 --> 00:08:05,919
attach to packet events you can really

229
00:08:05,919 --> 00:08:08,319
go whatever layer you want

230
00:08:08,319 --> 00:08:11,039
doing decodes is you still have to use a

231
00:08:11,039 --> 00:08:12,400
lot of cpu but if you're really just

232
00:08:12,400 --> 00:08:14,400
looking at performance and and traffic

233
00:08:14,400 --> 00:08:18,319
or again in other areas disk or cpu or

234
00:08:18,319 --> 00:08:19,680
other activity

235
00:08:19,680 --> 00:08:21,280
it can be a great way to get data from

236
00:08:21,280 --> 00:08:22,720
the kernel

237
00:08:22,720 --> 00:08:24,479
we have two agents one of which is

238
00:08:24,479 --> 00:08:26,479
already open source called conviz this

239
00:08:26,479 --> 00:08:28,560
actually pretty minimalistic and

240
00:08:28,560 --> 00:08:29,919
designed for people that want to take a

241
00:08:29,919 --> 00:08:32,159
look at bpf and

242
00:08:32,159 --> 00:08:34,080
and how it works and then copper which

243
00:08:34,080 --> 00:08:35,519
has some more advanced functionality

244
00:08:35,519 --> 00:08:37,919
which we'll be open sourcing

245
00:08:37,919 --> 00:08:39,839
one of the things that i'll point out

246
00:08:39,839 --> 00:08:42,640
this lets you do again is with very low

247
00:08:42,640 --> 00:08:44,959
cpu overhead get

248
00:08:44,959 --> 00:08:46,000
traffic

249
00:08:46,000 --> 00:08:49,360
annotated with latency data that

250
00:08:49,360 --> 00:08:50,800
otherwise you have to do synthetic

251
00:08:50,800 --> 00:08:53,760
probes to do to get or use really

252
00:08:53,760 --> 00:08:56,560
specialized lower end enterprise routers

253
00:08:56,560 --> 00:08:57,839
and switches that can do that kind of

254
00:08:57,839 --> 00:09:00,720
decoding um

255
00:09:00,720 --> 00:09:03,120
again with k-translate you can

256
00:09:03,120 --> 00:09:04,880
go to your peers who may run that

257
00:09:04,880 --> 00:09:06,640
compute infrastructure and say hey if

258
00:09:06,640 --> 00:09:08,800
you install this agent not only do we

259
00:09:08,800 --> 00:09:10,160
get it from the network layer but we can

260
00:09:10,160 --> 00:09:11,920
also send it into the other

261
00:09:11,920 --> 00:09:14,720
observability systems

262
00:09:14,720 --> 00:09:15,839
so

263
00:09:15,839 --> 00:09:18,560
the main meat of what we've been

264
00:09:18,560 --> 00:09:20,720
developing towards and you heard me

265
00:09:20,720 --> 00:09:22,640
mention something that helps the agents

266
00:09:22,640 --> 00:09:25,040
become more useful outside of just the

267
00:09:25,040 --> 00:09:26,240
network layer is something that we

268
00:09:26,240 --> 00:09:28,320
started with called k translate and we

269
00:09:28,320 --> 00:09:31,040
started with this really because

270
00:09:31,040 --> 00:09:33,279
uh our customers said hey

271
00:09:33,279 --> 00:09:35,040
how can we take all the data that you're

272
00:09:35,040 --> 00:09:36,800
collecting and enriching and send it to

273
00:09:36,800 --> 00:09:38,560
other systems

274
00:09:38,560 --> 00:09:41,680
and so we built something that took data

275
00:09:41,680 --> 00:09:42,720
um

276
00:09:42,720 --> 00:09:44,560
from the network layer in

277
00:09:44,560 --> 00:09:45,440
and

278
00:09:45,440 --> 00:09:47,680
let's go back inside here

279
00:09:47,680 --> 00:09:49,760
took data from the network layer in and

280
00:09:49,760 --> 00:09:51,440
could send it

281
00:09:51,440 --> 00:09:54,480
to other data systems and then over time

282
00:09:54,480 --> 00:09:56,399
we evolved it by

283
00:09:56,399 --> 00:09:58,080
saying how can we take

284
00:09:58,080 --> 00:10:00,000
data not just from kentic how can we

285
00:10:00,000 --> 00:10:01,519
actually do transformations especially

286
00:10:01,519 --> 00:10:03,040
if we started partnering with

287
00:10:03,040 --> 00:10:05,040
observability players were where people

288
00:10:05,040 --> 00:10:06,800
wanted to put something in prometheus or

289
00:10:06,800 --> 00:10:09,760
influx where you really can't put full

290
00:10:09,760 --> 00:10:11,920
cardinality ip addresses and things like

291
00:10:11,920 --> 00:10:13,360
that in those time series databases

292
00:10:13,360 --> 00:10:16,079
where they have problems

293
00:10:16,079 --> 00:10:18,399
so just a little bit about the history

294
00:10:18,399 --> 00:10:20,640
and and more about the motivation

295
00:10:20,640 --> 00:10:21,519
um

296
00:10:21,519 --> 00:10:24,560
when we started in 2014 state of the art

297
00:10:24,560 --> 00:10:26,560
for about probably 10 years i don't know

298
00:10:26,560 --> 00:10:29,440
i think simplicator was early 2000s

299
00:10:29,440 --> 00:10:30,320
was

300
00:10:30,320 --> 00:10:32,480
for the flow side you could replicate

301
00:10:32,480 --> 00:10:33,920
udp

302
00:10:33,920 --> 00:10:35,600
so that if you had multiple tools

303
00:10:35,600 --> 00:10:37,440
looking at it you didn't have to have

304
00:10:37,440 --> 00:10:39,760
the router do that at the cpu or the

305
00:10:39,760 --> 00:10:42,720
line card if it could do that

306
00:10:42,720 --> 00:10:44,720
most of the other layers like snmp

307
00:10:44,720 --> 00:10:46,240
didn't really have anything streaming

308
00:10:46,240 --> 00:10:49,120
telemetry was sort of just emerging but

309
00:10:49,120 --> 00:10:50,640
still we see

310
00:10:50,640 --> 00:10:52,560
especially in the enterprise is not the

311
00:10:52,560 --> 00:10:54,079
the main way that people are doing

312
00:10:54,079 --> 00:10:58,480
network uh metrics bgp has bmp and bgp

313
00:10:58,480 --> 00:11:00,480
ad paths and different different ways of

314
00:11:00,480 --> 00:11:02,399
doing things and what we've seen

315
00:11:02,399 --> 00:11:03,760
recently is

316
00:11:03,760 --> 00:11:05,680
a trend as an intention that we're going

317
00:11:05,680 --> 00:11:07,920
to put all our telemetry on kafka

318
00:11:07,920 --> 00:11:10,720
usually across the enterprise and also

319
00:11:10,720 --> 00:11:13,519
within network operations but that still

320
00:11:13,519 --> 00:11:15,839
leaves you a bit of a problem because

321
00:11:15,839 --> 00:11:18,800
yes i could use from the influx suite i

322
00:11:18,800 --> 00:11:20,399
could use telegraph and write some

323
00:11:20,399 --> 00:11:22,399
adapters and then my adapters will be

324
00:11:22,399 --> 00:11:24,320
different than everyone else's adapters

325
00:11:24,320 --> 00:11:26,880
i might hard code logic about how

326
00:11:26,880 --> 00:11:28,959
this snmp or that streaming telemetry

327
00:11:28,959 --> 00:11:30,959
thing goes but the output side you still

328
00:11:30,959 --> 00:11:31,839
have

329
00:11:31,839 --> 00:11:33,760
to do your own development you still

330
00:11:33,760 --> 00:11:35,519
have to figure out how to connect that

331
00:11:35,519 --> 00:11:37,120
to the different tools and systems that

332
00:11:37,120 --> 00:11:39,040
you want

333
00:11:39,040 --> 00:11:41,760
so we really decided

334
00:11:41,760 --> 00:11:43,680
having looked at what we started with k

335
00:11:43,680 --> 00:11:45,680
translate and looked at what's

336
00:11:45,680 --> 00:11:47,279
also going on in the broader

337
00:11:47,279 --> 00:11:48,959
observability space

338
00:11:48,959 --> 00:11:51,040
let's actually build towards something

339
00:11:51,040 --> 00:11:53,839
which is a single platform open source

340
00:11:53,839 --> 00:11:54,880
that can

341
00:11:54,880 --> 00:11:56,399
take data in from

342
00:11:56,399 --> 00:11:57,680
you know many different types of network

343
00:11:57,680 --> 00:11:59,839
telemetry replicate it to the different

344
00:11:59,839 --> 00:12:02,639
systems enrich it by adding things like

345
00:12:02,639 --> 00:12:04,639
you know whether it's ipgo threat feeds

346
00:12:04,639 --> 00:12:06,000
bgp

347
00:12:06,000 --> 00:12:08,880
cmdb ipam netbox you know things like

348
00:12:08,880 --> 00:12:10,240
that

349
00:12:10,240 --> 00:12:11,920
filter it and this is where we see

350
00:12:11,920 --> 00:12:14,079
filtering and transforming

351
00:12:14,079 --> 00:12:16,399
is mostly been either to

352
00:12:16,399 --> 00:12:18,720
send summaries into very expensive

353
00:12:18,720 --> 00:12:20,480
systems where you wouldn't want to have

354
00:12:20,480 --> 00:12:22,959
full resolution like splunk or elk

355
00:12:22,959 --> 00:12:25,440
or systems like time series databases

356
00:12:25,440 --> 00:12:26,959
which again if you

357
00:12:26,959 --> 00:12:29,040
put ip and port combinations for the

358
00:12:29,040 --> 00:12:31,120
internet in they're not really designed

359
00:12:31,120 --> 00:12:33,440
for that level of granularity

360
00:12:33,440 --> 00:12:35,600
and then operable and scalable when we

361
00:12:35,600 --> 00:12:36,720
started building it we didn't have all

362
00:12:36,720 --> 00:12:38,240
the telemetry we didn't make it auto

363
00:12:38,240 --> 00:12:40,320
scale and in fact it's still not in this

364
00:12:40,320 --> 00:12:42,160
state with the project as i would still

365
00:12:42,160 --> 00:12:44,240
like to invite you to uh try and give us

366
00:12:44,240 --> 00:12:46,320
feedback but this is this is where we

367
00:12:46,320 --> 00:12:48,320
really want to go

368
00:12:48,320 --> 00:12:52,000
so again k translate we started

369
00:12:52,000 --> 00:12:54,480
working with with customers that we had

370
00:12:54,480 --> 00:12:57,040
really taking data from kentic and then

371
00:12:57,040 --> 00:12:59,360
we did partnership our main one is with

372
00:12:59,360 --> 00:13:01,839
new relic where we got into

373
00:13:01,839 --> 00:13:04,560
folks that are that are network teams

374
00:13:04,560 --> 00:13:07,519
looking to replace legacy systems or

375
00:13:07,519 --> 00:13:09,200
even folks that really weren't primarily

376
00:13:09,200 --> 00:13:10,480
network teams that were looking to take

377
00:13:10,480 --> 00:13:13,200
network data and put it back into new

378
00:13:13,200 --> 00:13:15,360
relic either as

379
00:13:15,360 --> 00:13:19,279
events which is more like logs or

380
00:13:19,279 --> 00:13:21,200
more commonly is time series data which

381
00:13:21,200 --> 00:13:23,200
again needs roll-ups sometimes needs

382
00:13:23,200 --> 00:13:24,800
filtering maybe you don't care about

383
00:13:24,800 --> 00:13:27,920
icmp um where it is today

384
00:13:27,920 --> 00:13:31,519
is it'll take um s flow net flow ipfix

385
00:13:31,519 --> 00:13:34,000
it'll take snmp

386
00:13:34,000 --> 00:13:36,800
pretty soon it'll take vpc flow logs we

387
00:13:36,800 --> 00:13:38,639
have a cap and proto based format called

388
00:13:38,639 --> 00:13:40,480
kflo

389
00:13:40,480 --> 00:13:42,079
and you know you could think of as the

390
00:13:42,079 --> 00:13:44,959
input side i'll show you in a roadmap

391
00:13:44,959 --> 00:13:46,399
we're going to continue to add different

392
00:13:46,399 --> 00:13:49,360
kinds of inputs both network types and

393
00:13:49,360 --> 00:13:51,600
even things like events and metrics more

394
00:13:51,600 --> 00:13:55,279
generally on the observability side

395
00:13:55,279 --> 00:13:57,120
once we get the data

396
00:13:57,120 --> 00:13:59,199
into k-translate

397
00:13:59,199 --> 00:14:01,199
you can say i don't want things that

398
00:14:01,199 --> 00:14:03,600
match these filters um

399
00:14:03,600 --> 00:14:05,519
you can chop columns off you can do roll

400
00:14:05,519 --> 00:14:06,320
ups

401
00:14:06,320 --> 00:14:07,920
think of it in if you're a database

402
00:14:07,920 --> 00:14:09,120
person as a

403
00:14:09,120 --> 00:14:10,079
you know

404
00:14:10,079 --> 00:14:11,519
as a streaming query that you're

405
00:14:11,519 --> 00:14:13,680
establishing over the data that has

406
00:14:13,680 --> 00:14:15,920
these characteristics i'm filtering um

407
00:14:15,920 --> 00:14:17,440
i'm chopping it every so often and

408
00:14:17,440 --> 00:14:20,240
sending it off um and put it and you

409
00:14:20,240 --> 00:14:21,680
could even put it in

410
00:14:21,680 --> 00:14:23,279
anyone still running mrtg in the

411
00:14:23,279 --> 00:14:24,639
audience

412
00:14:24,639 --> 00:14:27,839
cacti okay one mrt we got an mrtg here

413
00:14:27,839 --> 00:14:29,360
so

414
00:14:29,360 --> 00:14:31,199
hopefully the modified one that puts the

415
00:14:31,199 --> 00:14:33,040
new data at the at the end not the

416
00:14:33,040 --> 00:14:35,120
beginning but uh yes

417
00:14:35,120 --> 00:14:36,000
um

418
00:14:36,000 --> 00:14:38,320
and then output goes to it's cut off

419
00:14:38,320 --> 00:14:41,680
here but again lots of uh generic lots

420
00:14:41,680 --> 00:14:42,959
of open source

421
00:14:42,959 --> 00:14:46,320
options uh so influx and elastic and

422
00:14:46,320 --> 00:14:48,560
prometheus goes into commercial systems

423
00:14:48,560 --> 00:14:51,279
like kentic and new relic and dynatrace

424
00:14:51,279 --> 00:14:54,000
and we just into kafka

425
00:14:54,000 --> 00:14:56,240
and we also can transform it between

426
00:14:56,240 --> 00:14:58,399
some of these binary formats

427
00:14:58,399 --> 00:14:59,839
and

428
00:14:59,839 --> 00:15:01,680
json or csv

429
00:15:01,680 --> 00:15:03,199
now right now

430
00:15:03,199 --> 00:15:06,560
a lot of this config is more

431
00:15:06,560 --> 00:15:09,120
is more you know cli options

432
00:15:09,120 --> 00:15:11,120
we have some yamo

433
00:15:11,120 --> 00:15:13,120
it is a single binary that you can run

434
00:15:13,120 --> 00:15:15,040
in cluster where we're going with this

435
00:15:15,040 --> 00:15:17,839
is to extend the functionality

436
00:15:17,839 --> 00:15:20,560
and actually make it even more operable

437
00:15:20,560 --> 00:15:22,160
so that it can really be deployed at the

438
00:15:22,160 --> 00:15:24,480
edge it can roll up some things if you

439
00:15:24,480 --> 00:15:26,000
don't need the full level of detail it

440
00:15:26,000 --> 00:15:27,680
can copy things if you do want the full

441
00:15:27,680 --> 00:15:30,079
level of detail

442
00:15:30,079 --> 00:15:33,199
some examples um you know we distribute

443
00:15:33,199 --> 00:15:34,959
it you can get the source but we also

444
00:15:34,959 --> 00:15:36,399
have docker containers so that you can

445
00:15:36,399 --> 00:15:40,160
run so you can um you know send the data

446
00:15:40,160 --> 00:15:43,199
to prometheus uh just you know fully um

447
00:15:43,199 --> 00:15:45,199
down at the bottom you can actually

448
00:15:45,199 --> 00:15:47,040
do roll ups you can

449
00:15:47,040 --> 00:15:48,720
pick some dimensions to roll up on you

450
00:15:48,720 --> 00:15:50,800
could add a filter decide the output

451
00:15:50,800 --> 00:15:52,720
format so this is functionality that it

452
00:15:52,720 --> 00:15:54,959
already supports today and you can just

453
00:15:54,959 --> 00:15:57,199
docker get docker run this the agents

454
00:15:57,199 --> 00:15:59,680
themselves also are distributed

455
00:15:59,680 --> 00:16:00,800
dockerable

456
00:16:00,800 --> 00:16:02,720
and ultimately where we're going is the

457
00:16:02,720 --> 00:16:04,079
goal is to have

458
00:16:04,079 --> 00:16:06,560
lots of different sources

459
00:16:06,560 --> 00:16:08,800
both network and we're building it so

460
00:16:08,800 --> 00:16:10,959
that it can take non-network all the way

461
00:16:10,959 --> 00:16:12,720
up into you know think of it as more

462
00:16:12,720 --> 00:16:15,040
generically logs and traces

463
00:16:15,040 --> 00:16:17,199
but of course we want to see syslog from

464
00:16:17,199 --> 00:16:19,279
network layer devices and think of them

465
00:16:19,279 --> 00:16:21,839
as events and and try to correlate and

466
00:16:21,839 --> 00:16:23,759
all that all that fancy ops goodness

467
00:16:23,759 --> 00:16:26,320
that everyone is working towards um and

468
00:16:26,320 --> 00:16:27,680
then in the middle

469
00:16:27,680 --> 00:16:29,199
make it all the same

470
00:16:29,199 --> 00:16:32,320
so that's in the metrics world the

471
00:16:32,320 --> 00:16:34,959
why is it so hard to take snmp and

472
00:16:34,959 --> 00:16:38,240
streaming telemetry and clis and apis or

473
00:16:38,240 --> 00:16:40,240
you know and and reason about it make it

474
00:16:40,240 --> 00:16:41,519
the same

475
00:16:41,519 --> 00:16:45,600
ad context again netbox ipgo routing

476
00:16:45,600 --> 00:16:47,040
change it up and send it to multiple

477
00:16:47,040 --> 00:16:49,680
systems so our goal and our goal for

478
00:16:49,680 --> 00:16:52,000
this presentation is for people that are

479
00:16:52,000 --> 00:16:55,839
trying to do things in this etl pattern

480
00:16:55,839 --> 00:16:58,480
we'd love to engage and you know get

481
00:16:58,480 --> 00:17:01,120
your feedback

482
00:17:02,000 --> 00:17:03,040
with it

483
00:17:03,040 --> 00:17:04,799
just a couple examples

484
00:17:04,799 --> 00:17:06,640
same data in

485
00:17:06,640 --> 00:17:08,559
you can send it to grafana

486
00:17:08,559 --> 00:17:10,799
you can send it to new relic again

487
00:17:10,799 --> 00:17:13,679
usually more in time series format of

488
00:17:13,679 --> 00:17:15,760
course it works with kentic

489
00:17:15,760 --> 00:17:16,799
we're

490
00:17:16,799 --> 00:17:18,480
fully happy to make it work with really

491
00:17:18,480 --> 00:17:20,240
just about anything

492
00:17:20,240 --> 00:17:22,160
so the goal is uh not to have it be a

493
00:17:22,160 --> 00:17:23,679
walled garden but to have it work with

494
00:17:23,679 --> 00:17:26,319
uh you know pretty broadly

495
00:17:26,319 --> 00:17:27,760
it's on github

496
00:17:27,760 --> 00:17:30,160
we have the kentic knowledge base also

497
00:17:30,160 --> 00:17:32,559
shows how some of the the functionality

498
00:17:32,559 --> 00:17:33,440
works

499
00:17:33,440 --> 00:17:35,120
and we have a discord

500
00:17:35,120 --> 00:17:38,719
so we'd like to invite everyone in

501
00:17:39,039 --> 00:17:40,960
a little bit about the roadmap what we

502
00:17:40,960 --> 00:17:43,360
have on our plate for the next

503
00:17:43,360 --> 00:17:45,360
say six months

504
00:17:45,360 --> 00:17:47,360
is streaming telemetry which i think is

505
00:17:47,360 --> 00:17:49,200
technically in k translate but really

506
00:17:49,200 --> 00:17:52,640
doing some validation of that um

507
00:17:52,640 --> 00:17:54,799
i saw some interesting open source stuff

508
00:17:54,799 --> 00:17:56,240
that i hadn't actually

509
00:17:56,240 --> 00:17:57,919
heard of before from the hackathon that

510
00:17:57,919 --> 00:17:59,200
we need to check out in terms of

511
00:17:59,200 --> 00:18:01,679
scraping cli which

512
00:18:01,679 --> 00:18:02,960
is something that we still hear our

513
00:18:02,960 --> 00:18:05,200
customers needing to do to get optic

514
00:18:05,200 --> 00:18:08,480
information or other debug metrics

515
00:18:08,480 --> 00:18:12,880
even from relatively recent os's

516
00:18:12,880 --> 00:18:16,640
events logs um and um

517
00:18:16,640 --> 00:18:18,160
really building it generically so that

518
00:18:18,160 --> 00:18:19,440
it can handle

519
00:18:19,440 --> 00:18:21,360
more than just the network specific

520
00:18:21,360 --> 00:18:23,679
metrics um

521
00:18:23,679 --> 00:18:24,880
as well

522
00:18:24,880 --> 00:18:27,120
so in terms of destinations

523
00:18:27,120 --> 00:18:29,440
we're thinking a lot about um on the

524
00:18:29,440 --> 00:18:32,880
output side uh how do we send um

525
00:18:32,880 --> 00:18:35,840
reflected as a streaming telemetry you

526
00:18:35,840 --> 00:18:37,919
know gmi that might be something that we

527
00:18:37,919 --> 00:18:40,640
work with other projects on or build in

528
00:18:40,640 --> 00:18:41,840
natively

529
00:18:41,840 --> 00:18:44,640
and then a request that we've had that

530
00:18:44,640 --> 00:18:45,600
um

531
00:18:45,600 --> 00:18:48,000
we're really thinking hard about is um

532
00:18:48,000 --> 00:18:50,320
how could we do more like um what

533
00:18:50,320 --> 00:18:52,960
panoptis is what verizon built yahoo

534
00:18:52,960 --> 00:18:55,840
built at uh with panoptis which is

535
00:18:55,840 --> 00:18:58,160
putting snmp on a bus like we'll have it

536
00:18:58,160 --> 00:18:59,840
in the middle but how would you have

537
00:18:59,840 --> 00:19:01,520
tools that are used to looking at things

538
00:19:01,520 --> 00:19:03,039
as smp

539
00:19:03,039 --> 00:19:04,240
query something that's either a

540
00:19:04,240 --> 00:19:05,840
streaming database or something in the

541
00:19:05,840 --> 00:19:06,960
middle

542
00:19:06,960 --> 00:19:08,799
um enrichments right now we've hard

543
00:19:08,799 --> 00:19:10,559
coded things like bgp

544
00:19:10,559 --> 00:19:12,000
um

545
00:19:12,000 --> 00:19:14,960
you know arjun as or ipgo but really

546
00:19:14,960 --> 00:19:16,400
making that something that is more

547
00:19:16,400 --> 00:19:17,520
generic

548
00:19:17,520 --> 00:19:18,400
so

549
00:19:18,400 --> 00:19:20,400
um probably won't be

550
00:19:20,400 --> 00:19:23,360
at um at maximum scale up into the you

551
00:19:23,360 --> 00:19:24,559
know tens of millions or billions

552
00:19:24,559 --> 00:19:25,440
because this is going to be something

553
00:19:25,440 --> 00:19:26,720
that's designed to be run at the edge

554
00:19:26,720 --> 00:19:29,919
but at least flexible csc type mappings

555
00:19:29,919 --> 00:19:31,200
um

556
00:19:31,200 --> 00:19:33,280
uh in terms of the formats right now the

557
00:19:33,280 --> 00:19:35,520
output side has been a little bit more

558
00:19:35,520 --> 00:19:38,720
into other observability platforms so

559
00:19:38,720 --> 00:19:40,080
thinking about any missing network

560
00:19:40,080 --> 00:19:42,559
formats that we have

561
00:19:42,559 --> 00:19:44,320
operability

562
00:19:44,320 --> 00:19:45,919
building in more telemetry having a

563
00:19:45,919 --> 00:19:48,160
kubernetes native pattern

564
00:19:48,160 --> 00:19:49,840
looking at the ways that people actually

565
00:19:49,840 --> 00:19:52,400
want to run it to scale right now it is

566
00:19:52,400 --> 00:19:54,400
a single standalone binary and you know

567
00:19:54,400 --> 00:19:56,960
you would cluster it uh by itself depend

568
00:19:56,960 --> 00:20:00,640
we have some folks using it where um

569
00:20:00,640 --> 00:20:01,760
you know they're dealing with millions

570
00:20:01,760 --> 00:20:03,840
of events per second so you know more

571
00:20:03,840 --> 00:20:05,600
than um

572
00:20:05,600 --> 00:20:07,679
even a 64 core server can run so it is

573
00:20:07,679 --> 00:20:10,480
multi-threaded it is go makes that

574
00:20:10,480 --> 00:20:12,640
my personal religious advice i believe

575
00:20:12,640 --> 00:20:14,880
sometimes too easy to do

576
00:20:14,880 --> 00:20:16,640
but uh there's still a limit to what it

577
00:20:16,640 --> 00:20:18,559
can do so those are some of the areas

578
00:20:18,559 --> 00:20:20,960
that we're working on and then

579
00:20:20,960 --> 00:20:23,919
as a use case we want to emerge

580
00:20:23,919 --> 00:20:27,760
one subset that we've seen is really

581
00:20:27,760 --> 00:20:30,159
combining device metrics i've mentioned

582
00:20:30,159 --> 00:20:31,840
it a few times

583
00:20:31,840 --> 00:20:34,080
really there's the same data sitting

584
00:20:34,080 --> 00:20:35,360
underneath

585
00:20:35,360 --> 00:20:37,440
coming from the device via multiple

586
00:20:37,440 --> 00:20:40,880
methods snmp streaming telemetry

587
00:20:40,880 --> 00:20:42,480
cli api

588
00:20:42,480 --> 00:20:43,360
and

589
00:20:43,360 --> 00:20:46,799
the piece that's been missing here

590
00:20:46,799 --> 00:20:48,960
that we're looking to generalize is

591
00:20:48,960 --> 00:20:50,240
actually the translation of the

592
00:20:50,240 --> 00:20:52,159
semantics so

593
00:20:52,159 --> 00:20:54,159
um

594
00:20:54,159 --> 00:20:56,240
where you may have

595
00:20:56,240 --> 00:20:57,760
devices

596
00:20:57,760 --> 00:20:59,520
in an enterprise that

597
00:20:59,520 --> 00:21:01,679
think about things as the total

598
00:21:01,679 --> 00:21:03,520
size of the port and then the percent

599
00:21:03,520 --> 00:21:05,120
utilization and then from that you need

600
00:21:05,120 --> 00:21:07,760
to figure out bits per second

601
00:21:07,760 --> 00:21:09,760
how do you do that how do you do that

602
00:21:09,760 --> 00:21:11,840
kind of transformation again with

603
00:21:11,840 --> 00:21:13,840
panoptis that's in the code for the

604
00:21:13,840 --> 00:21:16,559
device which you can override as a class

605
00:21:16,559 --> 00:21:20,159
or with uh you know of an os version

606
00:21:20,159 --> 00:21:21,919
in telegraph you would write that by

607
00:21:21,919 --> 00:21:23,840
yourself so we're thinking what's what's

608
00:21:23,840 --> 00:21:26,240
the best way to encode that

609
00:21:26,240 --> 00:21:27,440
and in a way that lets us build a

610
00:21:27,440 --> 00:21:30,960
community up without us having to be

611
00:21:30,960 --> 00:21:33,280
the debuggers of everything right and

612
00:21:33,280 --> 00:21:35,919
figure out every os version for everyone

613
00:21:35,919 --> 00:21:39,600
because this is just one source of uh of

614
00:21:39,600 --> 00:21:42,840
key network telemetry um

615
00:21:42,840 --> 00:21:45,600
so for people that are looking at this

616
00:21:45,600 --> 00:21:47,360
problem and and some of the systems that

617
00:21:47,360 --> 00:21:49,360
we've looked at um

618
00:21:49,360 --> 00:21:50,559
there are

619
00:21:50,559 --> 00:21:52,720
um some other projects one of them i

620
00:21:52,720 --> 00:21:54,720
think was in the hackathon

621
00:21:54,720 --> 00:21:57,440
the gmi gateway panoptes i mentioned a

622
00:21:57,440 --> 00:21:59,760
few times which i'm not up on it i think

623
00:21:59,760 --> 00:22:00,880
it's still

624
00:22:00,880 --> 00:22:04,159
more snmp focused than it's snmp

625
00:22:04,159 --> 00:22:06,640
streaming it on a bus versus more

626
00:22:06,640 --> 00:22:08,080
streaming telemetry

627
00:22:08,080 --> 00:22:09,919
jeremy talked about something he did for

628
00:22:09,919 --> 00:22:11,520
optics

629
00:22:11,520 --> 00:22:13,440
where he was doing more transformation

630
00:22:13,440 --> 00:22:15,679
built into it

631
00:22:15,679 --> 00:22:17,280
cisco has something which i think was

632
00:22:17,280 --> 00:22:19,440
renamed from big money is just pipeline

633
00:22:19,440 --> 00:22:20,640
those are some of the things that we

634
00:22:20,640 --> 00:22:21,760
look at

635
00:22:21,760 --> 00:22:25,360
and our goal ultimately at the end is to

636
00:22:25,360 --> 00:22:27,679
make something that works for all these

637
00:22:27,679 --> 00:22:29,600
all your all your devices whether

638
00:22:29,600 --> 00:22:30,400
they're

639
00:22:30,400 --> 00:22:32,320
never going to change

640
00:22:32,320 --> 00:22:34,240
can i say never going to support ipv6 i

641
00:22:34,240 --> 00:22:37,360
don't think i'm allowed to say that

642
00:22:37,360 --> 00:22:38,480
you know

643
00:22:38,480 --> 00:22:40,559
legacy things that you can't run or

644
00:22:40,559 --> 00:22:41,760
whether you're running a greenfield

645
00:22:41,760 --> 00:22:43,760
network and you get to specify uh what

646
00:22:43,760 --> 00:22:45,520
you want so

647
00:22:45,520 --> 00:22:47,280
um those are some of the things that

648
00:22:47,280 --> 00:22:49,679
we're working on and uh would love to

649
00:22:49,679 --> 00:22:52,240
get some community engagement i will go

650
00:22:52,240 --> 00:22:55,360
back to the slide if i can maybe i can't

651
00:22:55,360 --> 00:22:57,440
but if you check out kentic labs

652
00:22:57,440 --> 00:22:59,679
and check us out on github and

653
00:22:59,679 --> 00:23:01,120
discord and if there are any questions

654
00:23:01,120 --> 00:23:04,159
right now or remotely

655
00:23:04,159 --> 00:23:06,000
remote

656
00:23:06,000 --> 00:23:06,960
and

657
00:23:06,960 --> 00:23:09,200
there are no remote questions yet okay

658
00:23:09,200 --> 00:23:10,880
is there anybody in the house with

659
00:23:10,880 --> 00:23:12,960
questions yes

660
00:23:12,960 --> 00:23:15,039
please approach the microphone please

661
00:23:15,039 --> 00:23:16,320
state your name and corporate

662
00:23:16,320 --> 00:23:18,480
affiliation hello avi this is michael

663
00:23:18,480 --> 00:23:20,559
costello from netflix i thought that was

664
00:23:20,559 --> 00:23:24,159
you hi uh i'm wondering why you are

665
00:23:24,159 --> 00:23:25,919
choosing uh

666
00:23:25,919 --> 00:23:29,440
a universal format um or recreating a

667
00:23:29,440 --> 00:23:31,200
universal format as opposed to using

668
00:23:31,200 --> 00:23:33,760
something like open config

669
00:23:33,760 --> 00:23:34,640
so

670
00:23:34,640 --> 00:23:37,200
we think broadly

671
00:23:37,200 --> 00:23:39,039
that about

672
00:23:39,039 --> 00:23:40,559
people that run in the legacy

673
00:23:40,559 --> 00:23:42,480
environment so i don't i don't have any

674
00:23:42,480 --> 00:23:44,720
problem with open config and gmi is in

675
00:23:44,720 --> 00:23:46,400
intermediate things

676
00:23:46,400 --> 00:23:48,640
but we also think about people outside

677
00:23:48,640 --> 00:23:51,279
the network world where i don't really

678
00:23:51,279 --> 00:23:52,159
see

679
00:23:52,159 --> 00:23:54,960
um those formats making into cncf and

680
00:23:54,960 --> 00:23:56,640
people thinking about observably

681
00:23:56,640 --> 00:23:58,640
observability more broadly so we're

682
00:23:58,640 --> 00:23:59,919
actually hoping

683
00:23:59,919 --> 00:24:01,679
that the translation layer we're

684
00:24:01,679 --> 00:24:03,600
building can

685
00:24:03,600 --> 00:24:06,480
help make a lingua franca to take that

686
00:24:06,480 --> 00:24:09,520
as input and send it to other systems

687
00:24:09,520 --> 00:24:10,880
this is something we've talked about in

688
00:24:10,880 --> 00:24:12,240
the past is

689
00:24:12,240 --> 00:24:15,360
the uh you know if your only output

690
00:24:15,360 --> 00:24:18,880
format is that then what are you um what

691
00:24:18,880 --> 00:24:21,039
are you missing and again for a lot of

692
00:24:21,039 --> 00:24:22,640
the folks that we're working with we'd

693
00:24:22,640 --> 00:24:24,799
love kentic to be the only platform that

694
00:24:24,799 --> 00:24:26,320
they have but that's not realistic

695
00:24:26,320 --> 00:24:29,200
either so they need to send this data to

696
00:24:29,200 --> 00:24:30,880
systems that either don't understand

697
00:24:30,880 --> 00:24:32,559
network or don't understand we'll just

698
00:24:32,559 --> 00:24:36,159
say modern uh standard network uh

699
00:24:36,159 --> 00:24:37,840
transport methods

700
00:24:37,840 --> 00:24:40,080
the the follow-up is if you're if you're

701
00:24:40,080 --> 00:24:42,000
building that lingua franca that's going

702
00:24:42,000 --> 00:24:43,679
to transform from

703
00:24:43,679 --> 00:24:47,360
from n inputs to m outputs if that

704
00:24:47,360 --> 00:24:48,880
translation layer

705
00:24:48,880 --> 00:24:50,880
uh why reinvent the wheel why not make

706
00:24:50,880 --> 00:24:53,440
that the the open config piece i i i

707
00:24:53,440 --> 00:24:55,120
definitely get that you want to i see so

708
00:24:55,120 --> 00:24:56,159
you're talking about just for the

709
00:24:56,159 --> 00:24:58,000
transformation layer yes that's a good

710
00:24:58,000 --> 00:24:59,200
question we're sitting down and

711
00:24:59,200 --> 00:25:01,120
designing it right now okay so that

712
00:25:01,120 --> 00:25:03,440
could be internally and in fact you know

713
00:25:03,440 --> 00:25:06,480
i don't see any reason for us to go

714
00:25:06,480 --> 00:25:08,720
rebuild gnmi gateway if we can link to

715
00:25:08,720 --> 00:25:10,799
that or again i i forget the name of it

716
00:25:10,799 --> 00:25:11,600
but it looked like there were some

717
00:25:11,600 --> 00:25:13,440
pretty cool scraping tools that i hadn't

718
00:25:13,440 --> 00:25:14,799
seen before they were at the hackathon

719
00:25:14,799 --> 00:25:15,679
it's like

720
00:25:15,679 --> 00:25:17,360
well i mean the good thing about

721
00:25:17,360 --> 00:25:18,640
community is you can work with other

722
00:25:18,640 --> 00:25:20,240
folks in the community so

723
00:25:20,240 --> 00:25:22,640
yeah the the the hackathon stuff uh we

724
00:25:22,640 --> 00:25:25,679
had carl uh who works on scrabbly and

725
00:25:25,679 --> 00:25:27,919
scrapply go yeah yeah that looks pretty

726
00:25:27,919 --> 00:25:29,679
cool so i look forward to taking a look

727
00:25:29,679 --> 00:25:30,480
at that

728
00:25:30,480 --> 00:25:33,520
but yeah just to summarize open config

729
00:25:33,520 --> 00:25:35,279
for doing transformations on network

730
00:25:35,279 --> 00:25:37,200
things may well be you know the the

731
00:25:37,200 --> 00:25:38,799
sensible thing to do

732
00:25:38,799 --> 00:25:41,039
um but it also needs some i'll say

733
00:25:41,039 --> 00:25:42,880
community uh

734
00:25:42,880 --> 00:25:45,760
you know check because a lot of the

735
00:25:45,760 --> 00:25:48,320
folks that we're targeting with this

736
00:25:48,320 --> 00:25:52,000
as an open but as an open effort are not

737
00:25:52,000 --> 00:25:54,880
you know in the open config world yet so

738
00:25:54,880 --> 00:25:56,799
but that doesn't mean you couldn't have

739
00:25:56,799 --> 00:25:59,120
yama rules that compile transcompile to

740
00:25:59,120 --> 00:26:02,960
to it so yeah great thank you avi thanks

741
00:26:02,960 --> 00:26:06,080
ah we do have one from the outside ether

742
00:26:06,080 --> 00:26:08,640
okay from blake willis

743
00:26:08,640 --> 00:26:11,600
i know him yeah excellent project dobby

744
00:26:11,600 --> 00:26:13,840
thanks so much for open sourcing it it

745
00:26:13,840 --> 00:26:16,000
seems that existing aggregators like

746
00:26:16,000 --> 00:26:18,559
fluentd were far enough from k-translate

747
00:26:18,559 --> 00:26:21,360
goals that was worth building your own

748
00:26:21,360 --> 00:26:23,360
if time allows could you please walk us

749
00:26:23,360 --> 00:26:27,279
through the decision process sure

750
00:26:27,279 --> 00:26:30,080
so we looked at

751
00:26:30,080 --> 00:26:32,400
i would say three main

752
00:26:32,400 --> 00:26:33,840
systems

753
00:26:33,840 --> 00:26:35,360
um

754
00:26:35,360 --> 00:26:36,640
probably a couple years ago when we're

755
00:26:36,640 --> 00:26:37,760
really starting to think about this

756
00:26:37,760 --> 00:26:39,520
there's fluency

757
00:26:39,520 --> 00:26:42,000
there's fluent bits which i am subtly

758
00:26:42,000 --> 00:26:43,679
confused on except one is faster than

759
00:26:43,679 --> 00:26:44,720
the other but there are different

760
00:26:44,720 --> 00:26:46,720
projects from the same company and then

761
00:26:46,720 --> 00:26:47,919
telegraph

762
00:26:47,919 --> 00:26:50,159
uh that a lot of people use

763
00:26:50,159 --> 00:26:51,679
and the biggest thing

764
00:26:51,679 --> 00:26:53,360
that was missing which is something

765
00:26:53,360 --> 00:26:55,120
which is mike points out that people are

766
00:26:55,120 --> 00:26:57,279
working on with open config is

767
00:26:57,279 --> 00:26:59,679
sort of some common sense of semantics

768
00:26:59,679 --> 00:27:01,200
so telegraph

769
00:27:01,200 --> 00:27:03,840
um so none of them you know all of them

770
00:27:03,840 --> 00:27:04,799
had

771
00:27:04,799 --> 00:27:06,799
some abilities people had done some

772
00:27:06,799 --> 00:27:09,039
network things with them but it wasn't

773
00:27:09,039 --> 00:27:11,520
the very well they weren't coming from a

774
00:27:11,520 --> 00:27:14,960
a rich set of network inputs already

775
00:27:14,960 --> 00:27:16,480
um

776
00:27:16,480 --> 00:27:18,720
they in some cases

777
00:27:18,720 --> 00:27:21,760
uh on the fluent d side i think there

778
00:27:21,760 --> 00:27:23,279
were performance issues when we looked

779
00:27:23,279 --> 00:27:25,360
at it but it was really this translation

780
00:27:25,360 --> 00:27:27,679
layer was usually

781
00:27:27,679 --> 00:27:29,440
leave it up to the customer and so the

782
00:27:29,440 --> 00:27:31,760
thing that we saw more of our customers

783
00:27:31,760 --> 00:27:34,000
using was telegraph typically for people

784
00:27:34,000 --> 00:27:36,000
looking to get uh to just try to build

785
00:27:36,000 --> 00:27:38,320
something on top of prometheus or influx

786
00:27:38,320 --> 00:27:41,760
for device metrics and with telegraph we

787
00:27:41,760 --> 00:27:44,399
talk with them about saying hey what

788
00:27:44,399 --> 00:27:46,480
about a generic layer for these

789
00:27:46,480 --> 00:27:48,000
transformations that you could make into

790
00:27:48,000 --> 00:27:50,080
a library and they just weren't

791
00:27:50,080 --> 00:27:53,120
interested in that their view was that

792
00:27:53,120 --> 00:27:55,120
their customers were happy to all build

793
00:27:55,120 --> 00:27:57,279
those transformations manually sort of

794
00:27:57,279 --> 00:27:58,240
like the

795
00:27:58,240 --> 00:28:00,480
the network world equivalent is we

796
00:28:00,480 --> 00:28:02,799
automate by writing a python program to

797
00:28:02,799 --> 00:28:04,640
do one cli thing and then every engineer

798
00:28:04,640 --> 00:28:06,720
writes the same thing that seems like a

799
00:28:06,720 --> 00:28:08,799
lot of wasted effort where there's a

800
00:28:08,799 --> 00:28:11,039
chance for abstraction so that was how

801
00:28:11,039 --> 00:28:12,960
we thought about it and then recently

802
00:28:12,960 --> 00:28:14,240
there's been

803
00:28:14,240 --> 00:28:17,279
people taking open source etl platforms

804
00:28:17,279 --> 00:28:19,840
like apache nifi or commercial companies

805
00:28:19,840 --> 00:28:22,159
like cribble or open source companies

806
00:28:22,159 --> 00:28:24,080
like airbyte that's copying parse's

807
00:28:24,080 --> 00:28:26,080
thing which i forgot what it was called

808
00:28:26,080 --> 00:28:27,039
um

809
00:28:27,039 --> 00:28:28,080
and

810
00:28:28,080 --> 00:28:29,520
they don't support a lot of the network

811
00:28:29,520 --> 00:28:31,440
primitives um

812
00:28:31,440 --> 00:28:33,679
or you know apaches in the open but it's

813
00:28:33,679 --> 00:28:35,679
java and not as performant for the

814
00:28:35,679 --> 00:28:37,840
levels of traffic that some of our you

815
00:28:37,840 --> 00:28:39,360
know some of the big network operators

816
00:28:39,360 --> 00:28:41,760
run so um if anyone's curious about the

817
00:28:41,760 --> 00:28:43,279
other projects out there or the decision

818
00:28:43,279 --> 00:28:45,120
tree feel free to ping me avi

819
00:28:45,120 --> 00:28:47,840
kentuck.com

820
00:28:48,480 --> 00:28:49,840
and i will introduce you to the labs

821
00:28:49,840 --> 00:28:50,880
team

822
00:28:50,880 --> 00:28:52,559
okay

823
00:28:52,559 --> 00:28:53,520
um

824
00:28:53,520 --> 00:28:56,240
is there anyone else either remotely

825
00:28:56,240 --> 00:28:58,640
that was the last remote or coming up to

826
00:28:58,640 --> 00:29:01,440
the microphone

827
00:29:02,000 --> 00:29:03,360
going once

828
00:29:03,360 --> 00:29:05,919
going twice

829
00:29:05,919 --> 00:29:09,600
so thank you avi thank you

830
00:29:09,600 --> 00:29:13,200
[Music]

831
00:29:13,200 --> 00:29:15,279
you

