1
00:00:01,640 --> 00:00:05,939
[Music]

2
00:00:06,480 --> 00:00:09,360
um

3
00:00:06,960 --> 00:00:11,599
good morning good afternoon whatever it

4
00:00:09,360 --> 00:00:12,639
is in this void that you're sharing with

5
00:00:11,599 --> 00:00:14,559
me today

6
00:00:12,639 --> 00:00:15,759
look it really is a pleasure to be with

7
00:00:14,559 --> 00:00:18,640
you today

8
00:00:15,759 --> 00:00:20,080
my name's jeff houston i'm with ap nick

9
00:00:18,640 --> 00:00:22,080
and

10
00:00:20,080 --> 00:00:24,720
today i'd like to talk about a very

11
00:00:22,080 --> 00:00:27,839
fashionable topic right now

12
00:00:24,720 --> 00:00:30,240
which is actually routing security i say

13
00:00:27,840 --> 00:00:32,159
fashionable because you know the old

14
00:00:30,240 --> 00:00:33,040
topics are always the best topics aren't

15
00:00:32,159 --> 00:00:34,879
they

16
00:00:33,040 --> 00:00:37,680
and this is a topic that has a good

17
00:00:34,880 --> 00:00:40,879
25-year pedigree

18
00:00:37,680 --> 00:00:42,480
some problems take a long time to solve

19
00:00:40,879 --> 00:00:44,000
because we just never got around to it

20
00:00:42,480 --> 00:00:46,640
we were distracted taking the dog

21
00:00:44,000 --> 00:00:48,239
for a walk who knows but some problems

22
00:00:46,640 --> 00:00:49,760
take a long time

23
00:00:48,239 --> 00:00:52,239
because they're actually really hard

24
00:00:49,760 --> 00:00:54,640
problems and it's not that we

25
00:00:52,239 --> 00:00:55,440
we sort of weren't smart enough before

26
00:00:54,640 --> 00:00:57,440
but

27
00:00:55,440 --> 00:00:58,640
they are just incredibly challenging

28
00:00:57,440 --> 00:01:00,079
problems

29
00:00:58,640 --> 00:01:02,079
and one of the biggest problems out

30
00:01:00,079 --> 00:01:03,199
there right now and it's been out there

31
00:01:02,079 --> 00:01:05,360
for a long time

32
00:01:03,199 --> 00:01:08,560
is actually trying to figure out how to

33
00:01:05,360 --> 00:01:10,159
make the security of the routing system

34
00:01:08,560 --> 00:01:11,760
the thing that holds the internet

35
00:01:10,159 --> 00:01:14,880
together

36
00:01:11,760 --> 00:01:18,000
actually resist

37
00:01:14,880 --> 00:01:19,679
attempts to subvert it or perhaps

38
00:01:18,000 --> 00:01:22,400
equally importantly

39
00:01:19,680 --> 00:01:23,680
the fat finger problem because you know

40
00:01:22,400 --> 00:01:26,640
in terms of making

41
00:01:23,680 --> 00:01:28,799
all kinds of mishaps we humans are just

42
00:01:26,640 --> 00:01:32,079
endlessly creative

43
00:01:28,799 --> 00:01:34,880
so what i'm looking at in in this talk

44
00:01:32,079 --> 00:01:35,600
is actually how well we're doing in

45
00:01:34,880 --> 00:01:38,720
deploying

46
00:01:35,600 --> 00:01:40,559
the latest technology offering in trying

47
00:01:38,720 --> 00:01:42,798
to secure bgp

48
00:01:40,560 --> 00:01:43,600
now the shorthand here which is in the

49
00:01:42,799 --> 00:01:46,799
title is

50
00:01:43,600 --> 00:01:49,919
this is measuring rpki effectiveness uh

51
00:01:46,799 --> 00:01:50,560
it's not it's actually measuring the

52
00:01:49,920 --> 00:01:53,680
degree

53
00:01:50,560 --> 00:01:56,479
to which routing objects

54
00:01:53,680 --> 00:01:58,799
that are invalid according to route

55
00:01:56,479 --> 00:02:00,799
object validation

56
00:01:58,799 --> 00:02:02,560
where the validation is performed using

57
00:02:00,799 --> 00:02:04,560
rpki

58
00:02:02,560 --> 00:02:07,119
the degree to which network service

59
00:02:04,560 --> 00:02:10,399
providers are performing

60
00:02:07,119 --> 00:02:12,640
that filtering um that's a great title

61
00:02:10,399 --> 00:02:14,239
but it wouldn't fit on the screen so

62
00:02:12,640 --> 00:02:16,399
this is the shorthand

63
00:02:14,239 --> 00:02:18,400
for an awfully longer title it's

64
00:02:16,400 --> 00:02:20,840
measuring how well we're doing

65
00:02:18,400 --> 00:02:22,640
in deploying the elements of routing

66
00:02:20,840 --> 00:02:25,200
security

67
00:02:22,640 --> 00:02:25,760
but it's worthwhile at least to start

68
00:02:25,200 --> 00:02:27,280
with

69
00:02:25,760 --> 00:02:30,079
actually thinking about what we're

70
00:02:27,280 --> 00:02:32,080
trying to do this time around

71
00:02:30,080 --> 00:02:34,239
because we've tried all kinds of things

72
00:02:32,080 --> 00:02:36,879
if anyone remembers rpsl

73
00:02:34,239 --> 00:02:38,879
the routing was it security or routing

74
00:02:36,879 --> 00:02:41,760
system policy language

75
00:02:38,879 --> 00:02:44,720
sure this though we're not quite sure

76
00:02:41,760 --> 00:02:48,160
what we're trying to do are we

77
00:02:44,720 --> 00:02:50,800
here's a list if we had to pick one

78
00:02:48,160 --> 00:02:52,720
what are we trying to do uh this list

79
00:02:50,800 --> 00:02:56,319
gives us a few alternatives

80
00:02:52,720 --> 00:02:58,319
um it would be really good if no matter

81
00:02:56,319 --> 00:03:00,640
what i type in as config

82
00:02:58,319 --> 00:03:02,799
no matter what my auto config system

83
00:03:00,640 --> 00:03:04,958
does it would be really good

84
00:03:02,800 --> 00:03:06,800
if the routing system doesn't have to

85
00:03:04,959 --> 00:03:09,760
suffer the consequences

86
00:03:06,800 --> 00:03:11,920
inadvertent route link mentioning no

87
00:03:09,760 --> 00:03:14,560
names telstra

88
00:03:11,920 --> 00:03:16,079
or various other kinds of operational

89
00:03:14,560 --> 00:03:19,440
mishaps that occurred

90
00:03:16,080 --> 00:03:22,400
over the decades or maybe

91
00:03:19,440 --> 00:03:24,159
this is armor plating for hostile attack

92
00:03:22,400 --> 00:03:26,799
maybe what we're trying to do

93
00:03:24,159 --> 00:03:29,040
is to detect where the routing protocol

94
00:03:26,799 --> 00:03:31,680
itself is being manipulated

95
00:03:29,040 --> 00:03:34,798
and false information is being injected

96
00:03:31,680 --> 00:03:37,440
can we do that for all possible cases

97
00:03:34,799 --> 00:03:38,239
maybe would we like to do it for some

98
00:03:37,440 --> 00:03:40,400
cases

99
00:03:38,239 --> 00:03:41,519
okay bad people just do this you're not

100
00:03:40,400 --> 00:03:43,680
allowed to do that because we can't

101
00:03:41,519 --> 00:03:45,840
defend against it

102
00:03:43,680 --> 00:03:47,760
are we trying to prevent the routing of

103
00:03:45,840 --> 00:03:50,879
bogus address prefixes

104
00:03:47,760 --> 00:03:52,879
sort of taking the 10-8 problem because

105
00:03:50,879 --> 00:03:54,480
a lot of bad addresses kept on getting

106
00:03:52,879 --> 00:03:56,798
keep on being announced

107
00:03:54,480 --> 00:03:58,959
whatever a bogus address might be and

108
00:03:56,799 --> 00:04:01,599
what about bogus asses

109
00:03:58,959 --> 00:04:02,959
there are still a large number of isps

110
00:04:01,599 --> 00:04:06,159
scattered around the world

111
00:04:02,959 --> 00:04:10,799
who think that they too want to be as1

112
00:04:06,159 --> 00:04:13,599
or 2 or 3 because you know

113
00:04:10,799 --> 00:04:14,080
what about synthetic routes routes that

114
00:04:13,599 --> 00:04:17,199
aren't

115
00:04:14,080 --> 00:04:20,478
manipulated they're just pure fiction

116
00:04:17,199 --> 00:04:22,880
um and and i suppose the hardest

117
00:04:20,478 --> 00:04:24,960
what about unauthorized route withdrawal

118
00:04:22,880 --> 00:04:28,000
i learned this route from you

119
00:04:24,960 --> 00:04:29,680
me um

120
00:04:28,000 --> 00:04:31,120
and the last one what about protecting

121
00:04:29,680 --> 00:04:32,800
users because

122
00:04:31,120 --> 00:04:35,360
all those first set of links are

123
00:04:32,800 --> 00:04:37,600
actually all about the routing system

124
00:04:35,360 --> 00:04:38,400
maybe maybe the whole object of this is

125
00:04:37,600 --> 00:04:41,040
to actually stop

126
00:04:38,400 --> 00:04:41,758
users being directed at wrong bogus

127
00:04:41,040 --> 00:04:44,720
paths to

128
00:04:41,759 --> 00:04:46,080
the bad place so if we're going to pick

129
00:04:44,720 --> 00:04:49,919
one

130
00:04:46,080 --> 00:04:52,639
just one before i get there though

131
00:04:49,919 --> 00:04:54,400
perhaps let's shatter the illusion that

132
00:04:52,639 --> 00:04:55,600
we can solve every problem on this

133
00:04:54,400 --> 00:04:57,758
planet we can't

134
00:04:55,600 --> 00:04:59,520
and certainly we can't even solve the

135
00:04:57,759 --> 00:05:02,880
problems in bgp

136
00:04:59,520 --> 00:05:04,719
because bgp actually has two sets of

137
00:05:02,880 --> 00:05:07,919
rules that it has to obey

138
00:05:04,720 --> 00:05:10,240
it's got to be protocol wise accurate i

139
00:05:07,919 --> 00:05:10,960
get these route objects from my bgp

140
00:05:10,240 --> 00:05:13,840
neighbors

141
00:05:10,960 --> 00:05:14,799
i do processing i send route objects to

142
00:05:13,840 --> 00:05:17,840
my neighbors

143
00:05:14,800 --> 00:05:20,320
we propagate protocol wise

144
00:05:17,840 --> 00:05:21,280
the relationship between what i get and

145
00:05:20,320 --> 00:05:24,320
what i send

146
00:05:21,280 --> 00:05:26,239
is tightly defined by bgp the protocol

147
00:05:24,320 --> 00:05:28,320
but equally there's another set of rules

148
00:05:26,240 --> 00:05:32,000
the policy rules

149
00:05:28,320 --> 00:05:34,080
i will not announce my transit learned

150
00:05:32,000 --> 00:05:36,800
routes to other transits

151
00:05:34,080 --> 00:05:38,159
now the protocol says that's fine the

152
00:05:36,800 --> 00:05:40,560
policy says

153
00:05:38,160 --> 00:05:41,199
jeff you're being an idiot don't go

154
00:05:40,560 --> 00:05:43,280
there

155
00:05:41,199 --> 00:05:45,759
so i've got to be both protocol wise

156
00:05:43,280 --> 00:05:48,159
accurate and policy-wise accurate

157
00:05:45,759 --> 00:05:49,360
and in some ways meeting both of those

158
00:05:48,160 --> 00:05:53,759
goals is actually

159
00:05:49,360 --> 00:05:55,520
really really hard side note

160
00:05:53,759 --> 00:05:57,280
the problem is actually in the protocol

161
00:05:55,520 --> 00:05:58,000
as much as in in the degree of

162
00:05:57,280 --> 00:06:00,880
difficulty of

163
00:05:58,000 --> 00:06:02,720
the problem itself because bgp isn't a a

164
00:06:00,880 --> 00:06:05,600
deterministic protocol

165
00:06:02,720 --> 00:06:06,319
it's a negotiation you have some expert

166
00:06:05,600 --> 00:06:08,800
policies

167
00:06:06,319 --> 00:06:10,080
i have some input policies when they

168
00:06:08,800 --> 00:06:12,720
differ

169
00:06:10,080 --> 00:06:14,800
we try and work out what an agreeable

170
00:06:12,720 --> 00:06:17,840
kind of compromise is

171
00:06:14,800 --> 00:06:20,000
and the solution that bgp works out

172
00:06:17,840 --> 00:06:20,960
is often different to the next time we

173
00:06:20,000 --> 00:06:24,160
try it

174
00:06:20,960 --> 00:06:25,599
so sometimes we get outcomes that aren't

175
00:06:24,160 --> 00:06:28,000
what we expect

176
00:06:25,600 --> 00:06:31,600
if you want to read some more about that

177
00:06:28,000 --> 00:06:35,199
rfc 4264 bgp wedgies

178
00:06:31,600 --> 00:06:36,880
an amusing read if nothing else

179
00:06:35,199 --> 00:06:39,120
back to where i was at the touch of

180
00:06:36,880 --> 00:06:40,880
realism so

181
00:06:39,120 --> 00:06:42,960
route object validation which is what

182
00:06:40,880 --> 00:06:45,199
we're going to talk about today

183
00:06:42,960 --> 00:06:46,080
is actually designed to prevent bgp

184
00:06:45,199 --> 00:06:48,720
speakers from

185
00:06:46,080 --> 00:06:51,039
learning and preferring routes that

186
00:06:48,720 --> 00:06:53,840
aren't authorized by

187
00:06:51,039 --> 00:06:55,039
the prefix holder not by your

188
00:06:53,840 --> 00:06:58,400
neighbouring network

189
00:06:55,039 --> 00:07:01,840
not by any other network by the holder

190
00:06:58,400 --> 00:07:05,520
of the prefix so this is actually

191
00:07:01,840 --> 00:07:08,400
address rules rather than topology rules

192
00:07:05,520 --> 00:07:10,159
so the intent of not preferring these

193
00:07:08,400 --> 00:07:11,758
unauthorized routes

194
00:07:10,160 --> 00:07:14,000
routes that aren't authorized by the

195
00:07:11,759 --> 00:07:15,280
prefix folder is actually all about the

196
00:07:14,000 --> 00:07:18,319
user

197
00:07:15,280 --> 00:07:21,919
not steering the user down

198
00:07:18,319 --> 00:07:24,960
bad paths to the bad place so

199
00:07:21,919 --> 00:07:27,120
if we had a choice well what's my choice

200
00:07:24,960 --> 00:07:28,000
protecting the users because all the

201
00:07:27,120 --> 00:07:31,039
re-arrest

202
00:07:28,000 --> 00:07:34,319
is steps to an end not the end

203
00:07:31,039 --> 00:07:34,880
the end is trying to make sure that your

204
00:07:34,319 --> 00:07:38,880
users

205
00:07:34,880 --> 00:07:41,199
my users well there's only me your users

206
00:07:38,880 --> 00:07:42,560
aren't directed to places that that are

207
00:07:41,199 --> 00:07:43,759
synthetic that are evil that are

208
00:07:42,560 --> 00:07:46,639
designed to

209
00:07:43,759 --> 00:07:48,479
you know leak information misdirect them

210
00:07:46,639 --> 00:07:49,599
steal their ether wallet whatever you

211
00:07:48,479 --> 00:07:52,878
want

212
00:07:49,599 --> 00:07:53,759
so if that's the aim it's all about

213
00:07:52,879 --> 00:07:56,240
users

214
00:07:53,759 --> 00:07:58,240
so my objective in measuring is all

215
00:07:56,240 --> 00:08:00,479
about users too

216
00:07:58,240 --> 00:08:02,800
what i want to do is actually measure

217
00:08:00,479 --> 00:08:04,080
the impact of invalid route filtering on

218
00:08:02,800 --> 00:08:06,639
users

219
00:08:04,080 --> 00:08:08,479
and the real question that i'm trying to

220
00:08:06,639 --> 00:08:11,520
answer here is

221
00:08:08,479 --> 00:08:14,400
if i create a bad route

222
00:08:11,520 --> 00:08:15,680
a destination that's only available only

223
00:08:14,400 --> 00:08:18,239
visible

224
00:08:15,680 --> 00:08:18,960
when the route origination validation

225
00:08:18,240 --> 00:08:22,080
rules say

226
00:08:18,960 --> 00:08:22,960
no that's the wrong as announcing that

227
00:08:22,080 --> 00:08:25,199
path

228
00:08:22,960 --> 00:08:26,000
when that's the only way to get there

229
00:08:25,199 --> 00:08:28,479
what proportion

230
00:08:26,000 --> 00:08:29,840
proportion of users are steered there

231
00:08:28,479 --> 00:08:32,399
anyway

232
00:08:29,840 --> 00:08:34,000
and if it's zero percent we've won no

233
00:08:32,399 --> 00:08:36,479
more point i'll shut up right now

234
00:08:34,000 --> 00:08:37,279
and we'll move on to questions but you

235
00:08:36,479 --> 00:08:39,839
know

236
00:08:37,279 --> 00:08:41,838
um spoiler alert it's certainly not zero

237
00:08:39,839 --> 00:08:43,200
percent there is a tangible proportion

238
00:08:41,839 --> 00:08:44,560
of users a lot

239
00:08:43,200 --> 00:08:47,040
who will still get directed to the

240
00:08:44,560 --> 00:08:48,719
destination when according to route

241
00:08:47,040 --> 00:08:52,160
origination validation rules

242
00:08:48,720 --> 00:08:55,839
rov rules it's not a good place to go

243
00:08:52,160 --> 00:08:56,480
now like the v6 measurement i think i'm

244
00:08:55,839 --> 00:08:59,279
i'm

245
00:08:56,480 --> 00:09:00,720
got job security here for years if not

246
00:08:59,279 --> 00:09:02,800
decades this will take

247
00:09:00,720 --> 00:09:03,760
some time to actually get to whole of

248
00:09:02,800 --> 00:09:06,240
internet i believe

249
00:09:03,760 --> 00:09:07,040
might be faster than v6 but it won't be

250
00:09:06,240 --> 00:09:08,800
instant

251
00:09:07,040 --> 00:09:10,399
so i'd like to actually position this as

252
00:09:08,800 --> 00:09:13,120
a long-term measurement

253
00:09:10,399 --> 00:09:16,160
to see how we're going over the coming

254
00:09:13,120 --> 00:09:16,160
months and years

255
00:09:16,480 --> 00:09:20,480
i think i've already mentioned it but

256
00:09:17,760 --> 00:09:23,040
let me say it as well rov filtering

257
00:09:20,480 --> 00:09:26,320
route origination validation filtering

258
00:09:23,040 --> 00:09:29,680
is actually shorthand to

259
00:09:26,320 --> 00:09:30,560
i've got time using our pki validation

260
00:09:29,680 --> 00:09:33,519
of published

261
00:09:30,560 --> 00:09:34,800
route origination attestations to detect

262
00:09:33,519 --> 00:09:36,560
and drop route objects

263
00:09:34,800 --> 00:09:39,279
that are invalid according to the

264
00:09:36,560 --> 00:09:41,359
conventional row interpretation

265
00:09:39,279 --> 00:09:43,120
which in practice means it's too

266
00:09:41,360 --> 00:09:45,120
specific max length

267
00:09:43,120 --> 00:09:46,959
or it's the wrong origin is so that's

268
00:09:45,120 --> 00:09:48,959
what i mean by rov filtering

269
00:09:46,959 --> 00:09:50,640
it's not that the cryptographic

270
00:09:48,959 --> 00:09:51,680
credentials are wrong they're perfectly

271
00:09:50,640 --> 00:09:54,480
valid

272
00:09:51,680 --> 00:09:56,079
but what they describe are an allowable

273
00:09:54,480 --> 00:09:59,040
set of routing objects

274
00:09:56,080 --> 00:10:00,800
and what i'm seeing is something else so

275
00:09:59,040 --> 00:10:02,480
that's what i mean by rov filtering and

276
00:10:00,800 --> 00:10:05,680
by filtering what i mean is

277
00:10:02,480 --> 00:10:09,279
drop it if you don't like what you see

278
00:10:05,680 --> 00:10:12,560
don't depress it drop it

279
00:10:09,279 --> 00:10:14,160
so the methodology um to do this

280
00:10:12,560 --> 00:10:17,119
then obviously i need to set up some

281
00:10:14,160 --> 00:10:18,800
bogus paths and set that up as the only

282
00:10:17,120 --> 00:10:22,079
route to a prefix

283
00:10:18,800 --> 00:10:23,760
to see who can go there secondly

284
00:10:22,079 --> 00:10:26,160
i need to get a large collection of

285
00:10:23,760 --> 00:10:28,160
users from all over the internet

286
00:10:26,160 --> 00:10:29,600
and try and get them to reach a server

287
00:10:28,160 --> 00:10:33,279
that sits behind

288
00:10:29,600 --> 00:10:35,680
that route object and to make sure

289
00:10:33,279 --> 00:10:37,519
that i understand what i'm seeing i

290
00:10:35,680 --> 00:10:39,920
should use a control

291
00:10:37,519 --> 00:10:42,240
of a valid routing path that goes to the

292
00:10:39,920 --> 00:10:44,240
same destination

293
00:10:42,240 --> 00:10:45,600
uh we'll see how i do that in a second

294
00:10:44,240 --> 00:10:46,640
and then i just need to measure and

295
00:10:45,600 --> 00:10:49,760
compare

296
00:10:46,640 --> 00:10:51,519
comparing good to bad to see how many

297
00:10:49,760 --> 00:10:54,240
folk drop off

298
00:10:51,519 --> 00:10:55,120
when they can no longer get to a path

299
00:10:54,240 --> 00:10:57,920
because

300
00:10:55,120 --> 00:11:00,079
it's got bad credentials measure and

301
00:10:57,920 --> 00:11:02,079
compare so the methodology

302
00:11:00,079 --> 00:11:04,319
um there are some amazingly good

303
00:11:02,079 --> 00:11:05,040
packages these days and you don't need

304
00:11:04,320 --> 00:11:07,760
to use

305
00:11:05,040 --> 00:11:08,880
an rir to set up your own rpki

306
00:11:07,760 --> 00:11:10,880
repository

307
00:11:08,880 --> 00:11:13,360
if you want to keep your secrets inside

308
00:11:10,880 --> 00:11:15,519
your domain

309
00:11:13,360 --> 00:11:17,440
krill is a really good package and

310
00:11:15,519 --> 00:11:20,079
that's what we used to set this up

311
00:11:17,440 --> 00:11:21,360
as a delegated repository uh it just

312
00:11:20,079 --> 00:11:25,120
worked

313
00:11:21,360 --> 00:11:28,880
so uh good work the folk at nl net labs

314
00:11:25,120 --> 00:11:30,480
nice piece of work um by the way

315
00:11:28,880 --> 00:11:32,880
as soon as you set one of these up it's

316
00:11:30,480 --> 00:11:35,600
a bit like actually watching bgp

317
00:11:32,880 --> 00:11:36,959
everyone who's playing the game has to

318
00:11:35,600 --> 00:11:39,680
come and visit you

319
00:11:36,959 --> 00:11:41,359
to collect your objects and they have to

320
00:11:39,680 --> 00:11:43,760
come all the time

321
00:11:41,360 --> 00:11:45,360
so here's a graph of the number of

322
00:11:43,760 --> 00:11:47,519
unique visitors per day

323
00:11:45,360 --> 00:11:48,399
since we set this up in march of this

324
00:11:47,519 --> 00:11:51,680
year

325
00:11:48,399 --> 00:11:54,720
and at the start there are 800 different

326
00:11:51,680 --> 00:11:57,120
distinct ip addresses now i can't tell

327
00:11:54,720 --> 00:11:57,839
with ipv4 and ipv6 who's won and who's

328
00:11:57,120 --> 00:12:01,040
two

329
00:11:57,839 --> 00:12:03,920
so there's at least 400 different folk

330
00:12:01,040 --> 00:12:05,519
there might be 600 there might even be

331
00:12:03,920 --> 00:12:09,760
800 but i doubt it

332
00:12:05,519 --> 00:12:12,639
um looking at this so today

333
00:12:09,760 --> 00:12:14,399
eighteen hundred unique addresses um

334
00:12:12,639 --> 00:12:16,399
we've also had an issue in the standards

335
00:12:14,399 --> 00:12:17,040
world as whether rsync is any good or

336
00:12:16,399 --> 00:12:20,160
not

337
00:12:17,040 --> 00:12:21,120
um steer or alert it's not um and so

338
00:12:20,160 --> 00:12:22,560
what we've done

339
00:12:21,120 --> 00:12:25,279
over the last few years is actually

340
00:12:22,560 --> 00:12:29,518
devise a new synchronization protocol

341
00:12:25,279 --> 00:12:31,839
that uses https us rrdp i think

342
00:12:29,519 --> 00:12:34,160
some will correct me in questions and

343
00:12:31,839 --> 00:12:35,920
the red tracks the rsync visitors

344
00:12:34,160 --> 00:12:37,519
the blue tracks the visitors that come

345
00:12:35,920 --> 00:12:39,360
over https

346
00:12:37,519 --> 00:12:40,880
and as you can see around about may

347
00:12:39,360 --> 00:12:41,760
there was a big flip in some of this

348
00:12:40,880 --> 00:12:43,439
software

349
00:12:41,760 --> 00:12:45,439
and all of a sudden most of the world

350
00:12:43,440 --> 00:12:48,160
actually uses http

351
00:12:45,440 --> 00:12:49,680
but you know this is the internet old

352
00:12:48,160 --> 00:12:52,560
protocols never die

353
00:12:49,680 --> 00:12:54,079
they just don't they just linger on the

354
00:12:52,560 --> 00:12:56,638
other thing i find about this which is

355
00:12:54,079 --> 00:12:58,800
actually really curious

356
00:12:56,639 --> 00:13:00,560
is that some folk only work weekdays in

357
00:12:58,800 --> 00:13:03,199
bgp security

358
00:13:00,560 --> 00:13:04,319
some folk only visit me monday through

359
00:13:03,200 --> 00:13:06,000
friday

360
00:13:04,320 --> 00:13:07,440
ah it's the weekend who cares what

361
00:13:06,000 --> 00:13:10,320
badness happens

362
00:13:07,440 --> 00:13:11,200
like i find that bizarre don't you i'm

363
00:13:10,320 --> 00:13:12,720
like

364
00:13:11,200 --> 00:13:14,480
we're meant to have automated systems

365
00:13:12,720 --> 00:13:15,440
you're not running these things by hand

366
00:13:14,480 --> 00:13:17,120
are you

367
00:13:15,440 --> 00:13:19,040
tell me you're not tell me you're not

368
00:13:17,120 --> 00:13:20,720
because that would be really bad

369
00:13:19,040 --> 00:13:23,040
so whatever you've got going in your

370
00:13:20,720 --> 00:13:26,240
chrome tab all i can say is

371
00:13:23,040 --> 00:13:27,279
don't forget saturday and sunday because

372
00:13:26,240 --> 00:13:30,480
that's a weird

373
00:13:27,279 --> 00:13:34,000
variation i have no explanation anyway

374
00:13:30,480 --> 00:13:37,600
i've set up my rpki repository great

375
00:13:34,000 --> 00:13:39,920
now i need to have good and bad

376
00:13:37,600 --> 00:13:40,959
and what i thought was the easiest way

377
00:13:39,920 --> 00:13:44,240
to do this

378
00:13:40,959 --> 00:13:47,279
is to actually use time and i flip

379
00:13:44,240 --> 00:13:49,360
between good and bad

380
00:13:47,279 --> 00:13:51,199
so i've got my cruel controller and this

381
00:13:49,360 --> 00:13:54,320
is the content extract

382
00:13:51,199 --> 00:13:56,880
and at these times

383
00:13:54,320 --> 00:13:58,320
monday friday monday thursday or monday

384
00:13:56,880 --> 00:14:02,160
thursday friday

385
00:13:58,320 --> 00:14:03,920
i flip the rower to the good state and

386
00:14:02,160 --> 00:14:06,639
at another set of times

387
00:14:03,920 --> 00:14:09,120
i change the currently valid row i

388
00:14:06,639 --> 00:14:11,440
revoke the old one and issue a new one

389
00:14:09,120 --> 00:14:13,360
that puts it to a bad state what does

390
00:14:11,440 --> 00:14:17,279
that crontab actually look like well

391
00:14:13,360 --> 00:14:20,160
we'll see in a second methodology again

392
00:14:17,279 --> 00:14:22,000
let me go a bit further sending a large

393
00:14:20,160 --> 00:14:25,199
number of users to one server

394
00:14:22,000 --> 00:14:28,720
is kind of silly these days it's fragile

395
00:14:25,199 --> 00:14:30,240
so anycast take that prefix and as path

396
00:14:28,720 --> 00:14:32,560
and don't forget i never change

397
00:14:30,240 --> 00:14:33,440
the advertisement i only change the

398
00:14:32,560 --> 00:14:36,399
rower

399
00:14:33,440 --> 00:14:38,240
but take that fixed prefix and as path

400
00:14:36,399 --> 00:14:39,920
and put it in a number of locations in

401
00:14:38,240 --> 00:14:41,680
the internet preferably with different

402
00:14:39,920 --> 00:14:44,719
transit providers

403
00:14:41,680 --> 00:14:46,959
the more the merrier uh but the folk

404
00:14:44,720 --> 00:14:48,079
over at ap nick who pay my bills go jeff

405
00:14:46,959 --> 00:14:50,160
don't be so crazy

406
00:14:48,079 --> 00:14:52,239
and i'm going but i need more don't be

407
00:14:50,160 --> 00:14:54,880
so crazy how about three

408
00:14:52,240 --> 00:14:57,360
yeah grumble um so i've got three at the

409
00:14:54,880 --> 00:14:59,519
moment i would certainly like more

410
00:14:57,360 --> 00:15:00,560
that actually offer this as part of an

411
00:14:59,519 --> 00:15:03,199
anycast cloud

412
00:15:00,560 --> 00:15:05,279
and all it does is just deliver a pixel

413
00:15:03,199 --> 00:15:07,359
block a one by one block

414
00:15:05,279 --> 00:15:08,959
it says if you can get this you've

415
00:15:07,360 --> 00:15:11,839
actually followed a route object

416
00:15:08,959 --> 00:15:13,199
good or bad uh the other thing too the

417
00:15:11,839 --> 00:15:16,959
state of

418
00:15:13,199 --> 00:15:19,279
uh low cost virtual servers out there

419
00:15:16,959 --> 00:15:20,319
uh there's many more of them in v4 than

420
00:15:19,279 --> 00:15:22,800
v6

421
00:15:20,320 --> 00:15:23,680
and so this is almost forced by the

422
00:15:22,800 --> 00:15:25,599
issue of

423
00:15:23,680 --> 00:15:27,359
getting any car servers out there that

424
00:15:25,600 --> 00:15:29,279
speak bgp

425
00:15:27,360 --> 00:15:32,320
of the four only transit at this point

426
00:15:29,279 --> 00:15:36,320
in time love to get it into v6

427
00:15:32,320 --> 00:15:37,440
um now the test point i've got my

428
00:15:36,320 --> 00:15:39,680
anycast network

429
00:15:37,440 --> 00:15:41,839
i've got my servers now i need to get a

430
00:15:39,680 --> 00:15:44,719
whole lot of people to try and go there

431
00:15:41,839 --> 00:15:46,480
well i load this unique url into a

432
00:15:44,720 --> 00:15:49,759
measurement script

433
00:15:46,480 --> 00:15:53,759
and that uses a unique dns component

434
00:15:49,759 --> 00:15:54,000
and https so however the user tries to

435
00:15:53,759 --> 00:15:57,839
get

436
00:15:54,000 --> 00:16:00,759
that object caching won't work

437
00:15:57,839 --> 00:16:02,160
that's the intent of this unique label

438
00:16:00,759 --> 00:16:05,360
https

439
00:16:02,160 --> 00:16:07,519
come to me hit me so i can see you

440
00:16:05,360 --> 00:16:08,720
i feed this script into an advertising

441
00:16:07,519 --> 00:16:10,320
campaign

442
00:16:08,720 --> 00:16:11,920
thank you for google for their support

443
00:16:10,320 --> 00:16:14,560
in paying some of those bills

444
00:16:11,920 --> 00:16:16,399
because it really is appreciated i feed

445
00:16:14,560 --> 00:16:18,000
that script into an advertising campaign

446
00:16:16,399 --> 00:16:21,120
and i perform this test

447
00:16:18,000 --> 00:16:23,440
at a massive scale now

448
00:16:21,120 --> 00:16:25,040
before i actually go and get we what we

449
00:16:23,440 --> 00:16:27,120
found in that test

450
00:16:25,040 --> 00:16:28,639
i should talk about this idea of good

451
00:16:27,120 --> 00:16:30,240
bad flipping

452
00:16:28,639 --> 00:16:32,240
because that's why i'm doing control

453
00:16:30,240 --> 00:16:35,920
it's good for a while

454
00:16:32,240 --> 00:16:37,120
it's bad for a while what does a while

455
00:16:35,920 --> 00:16:39,599
mean

456
00:16:37,120 --> 00:16:41,680
how long should i keep a good state for

457
00:16:39,600 --> 00:16:43,839
everyone to learn that it's good

458
00:16:41,680 --> 00:16:46,000
how long should i keep a bad state for

459
00:16:43,839 --> 00:16:49,440
everyone to now learn that what was good

460
00:16:46,000 --> 00:16:50,000
is now bad now how long does it take for

461
00:16:49,440 --> 00:16:53,279
the routing

462
00:16:50,000 --> 00:16:55,279
system to know that this previously

463
00:16:53,279 --> 00:16:56,639
valid route is now invalid

464
00:16:55,279 --> 00:16:58,560
and of course how long does it take for

465
00:16:56,639 --> 00:16:59,680
that inverse transition now

466
00:16:58,560 --> 00:17:02,719
interestingly

467
00:16:59,680 --> 00:17:03,839
this is not a bgp problem anymore

468
00:17:02,720 --> 00:17:07,120
because you've actually look at the

469
00:17:03,839 --> 00:17:08,959
propagation of bgp route objects and bgp

470
00:17:07,119 --> 00:17:11,918
withdrawals

471
00:17:08,959 --> 00:17:13,919
the network is surprisingly dense and

472
00:17:11,919 --> 00:17:17,199
the convergence times

473
00:17:13,919 --> 00:17:19,919
for state transitions in bgp tends to

474
00:17:17,199 --> 00:17:21,760
average around 70 seconds and if you add

475
00:17:19,919 --> 00:17:24,160
some degree of transit delay

476
00:17:21,760 --> 00:17:25,039
almost everyone knows what you're doing

477
00:17:24,160 --> 00:17:29,039
in bgp

478
00:17:25,039 --> 00:17:31,919
inside two minutes but this is not bgp

479
00:17:29,039 --> 00:17:34,400
this is determining what i do at my

480
00:17:31,919 --> 00:17:37,600
repository publication point

481
00:17:34,400 --> 00:17:39,679
so i take what was good it's got a

482
00:17:37,600 --> 00:17:40,639
certificate and it's got a published

483
00:17:39,679 --> 00:17:43,760
rower

484
00:17:40,640 --> 00:17:44,400
i revoke that certificate i revoke that

485
00:17:43,760 --> 00:17:46,480
rower

486
00:17:44,400 --> 00:17:48,320
i publish a new rower with a new

487
00:17:46,480 --> 00:17:51,520
certificate

488
00:17:48,320 --> 00:17:52,399
great but so what i'm like i'm in this

489
00:17:51,520 --> 00:17:55,280
dark room

490
00:17:52,400 --> 00:17:57,280
i publish some new objects gee i'm good

491
00:17:55,280 --> 00:18:00,000
why isn't everyone listening hey hey

492
00:17:57,280 --> 00:18:00,559
come down here so what i really need to

493
00:18:00,000 --> 00:18:04,799
look at

494
00:18:00,559 --> 00:18:08,799
is the re query intervals for you lot

495
00:18:04,799 --> 00:18:08,799
everyone else all

496
00:18:09,440 --> 00:18:15,760
1800 unique ip addresses need to come

497
00:18:12,640 --> 00:18:19,600
and see that i've changed something so

498
00:18:15,760 --> 00:18:23,760
how often do you come and visit me

499
00:18:19,600 --> 00:18:28,240
um programmers

500
00:18:23,760 --> 00:18:31,120
implementers should never be creative

501
00:18:28,240 --> 00:18:32,160
standards should be as comprehensive as

502
00:18:31,120 --> 00:18:35,199
possible

503
00:18:32,160 --> 00:18:38,160
because if you don't specify something

504
00:18:35,200 --> 00:18:39,200
if you leave it unspecified everyone

505
00:18:38,160 --> 00:18:41,440
gets creative

506
00:18:39,200 --> 00:18:42,559
creative just look at gnats if you

507
00:18:41,440 --> 00:18:44,799
really want to see

508
00:18:42,559 --> 00:18:47,120
how lousy the world can be when you

509
00:18:44,799 --> 00:18:49,679
don't standardize how they behave

510
00:18:47,120 --> 00:18:50,799
nats are as good an example as any uh

511
00:18:49,679 --> 00:18:53,919
udp and nats

512
00:18:50,799 --> 00:18:55,520
what a disaster and oddly enough we did

513
00:18:53,919 --> 00:18:59,120
it again here

514
00:18:55,520 --> 00:19:01,039
how often should you look at the primary

515
00:18:59,120 --> 00:19:03,120
publication point in rpki

516
00:19:01,039 --> 00:19:05,039
to see if things have changed what does

517
00:19:03,120 --> 00:19:09,039
the standard say

518
00:19:05,039 --> 00:19:12,160
nothing what should we do

519
00:19:09,039 --> 00:19:15,200
pick a number um

520
00:19:12,160 --> 00:19:16,400
some folk have picked two minutes some

521
00:19:15,200 --> 00:19:19,360
poke have picked

522
00:19:16,400 --> 00:19:21,039
10 minutes some folk have picked one

523
00:19:19,360 --> 00:19:23,520
hour

524
00:19:21,039 --> 00:19:25,360
and even though they're these two or

525
00:19:23,520 --> 00:19:26,720
three sorry three timers that are pretty

526
00:19:25,360 --> 00:19:29,199
clear in the data

527
00:19:26,720 --> 00:19:30,559
the same ip address comes to us in two

528
00:19:29,200 --> 00:19:32,960
minute intervals

529
00:19:30,559 --> 00:19:34,240
ten minute intervals one hour intervals

530
00:19:32,960 --> 00:19:37,360
there's also this sort of

531
00:19:34,240 --> 00:19:40,320
lag of a whole bunch of folk who come

532
00:19:37,360 --> 00:19:42,000
at all other times that's a sort of

533
00:19:40,320 --> 00:19:44,000
curious because that's not a timer

534
00:19:42,000 --> 00:19:47,120
that's something else

535
00:19:44,000 --> 00:19:49,679
so i'll come back to the

536
00:19:47,120 --> 00:19:50,879
weird sort of noise in between the three

537
00:19:49,679 --> 00:19:54,320
peaks

538
00:19:50,880 --> 00:19:56,640
but i've now i think got an answer about

539
00:19:54,320 --> 00:19:58,960
how long does it take for the world

540
00:19:56,640 --> 00:20:01,200
those 1800 folk who query me

541
00:19:58,960 --> 00:20:02,080
or ip addresses how long does it take

542
00:20:01,200 --> 00:20:03,679
for them

543
00:20:02,080 --> 00:20:05,360
to come back and see if anything's

544
00:20:03,679 --> 00:20:07,200
changed well

545
00:20:05,360 --> 00:20:09,760
here's the cumulative distribution of

546
00:20:07,200 --> 00:20:12,320
that data and what it says is within two

547
00:20:09,760 --> 00:20:14,720
hours about 75 percent of those clients

548
00:20:12,320 --> 00:20:16,080
have seen the change they've come back

549
00:20:14,720 --> 00:20:20,080
and visited me again

550
00:20:16,080 --> 00:20:23,760
within two hours of making a change

551
00:20:20,080 --> 00:20:26,320
two hours good enough why that lag

552
00:20:23,760 --> 00:20:28,000
why all the noise um i found this in

553
00:20:26,320 --> 00:20:31,039
wikimedia

554
00:20:28,000 --> 00:20:34,240
and what it says

555
00:20:31,039 --> 00:20:36,240
is it looks at the amount of time

556
00:20:34,240 --> 00:20:37,440
to complete a pass through the entire

557
00:20:36,240 --> 00:20:40,799
distributed rpk

558
00:20:37,440 --> 00:20:42,240
repository set for a wikimedia theme

559
00:20:40,799 --> 00:20:43,918
and what it's doing is counting the

560
00:20:42,240 --> 00:20:47,360
amount of time it spends

561
00:20:43,919 --> 00:20:48,880
on each rpki repository and as you might

562
00:20:47,360 --> 00:20:51,918
see over here

563
00:20:48,880 --> 00:20:53,440
there is a few folk that are really bad

564
00:20:51,919 --> 00:20:55,679
at publication

565
00:20:53,440 --> 00:20:57,360
that it takes an awful long time to

566
00:20:55,679 --> 00:20:59,760
actually enter their site

567
00:20:57,360 --> 00:21:01,199
and grab down some details and there are

568
00:20:59,760 --> 00:21:03,360
a number of changes too

569
00:21:01,200 --> 00:21:04,640
over time so have a look at that url at

570
00:21:03,360 --> 00:21:06,240
the bottom of the screen if you're all

571
00:21:04,640 --> 00:21:09,600
interested in this but

572
00:21:06,240 --> 00:21:11,679
the distributed system suffers

573
00:21:09,600 --> 00:21:13,760
from the performance of the individual

574
00:21:11,679 --> 00:21:16,640
repository publication points

575
00:21:13,760 --> 00:21:20,000
that introduces delays into that sweep

576
00:21:16,640 --> 00:21:22,640
so the system can't be arbitrarily fast

577
00:21:20,000 --> 00:21:23,679
so now i've got enough to actually

578
00:21:22,640 --> 00:21:26,400
compile

579
00:21:23,679 --> 00:21:28,720
a schedule of good to bad if i hold

580
00:21:26,400 --> 00:21:30,080
something good for at least 12 hours the

581
00:21:28,720 --> 00:21:31,840
world will know it

582
00:21:30,080 --> 00:21:34,480
the world will know it probably inside

583
00:21:31,840 --> 00:21:35,840
two 10 hours of doing a test that i know

584
00:21:34,480 --> 00:21:37,600
is good

585
00:21:35,840 --> 00:21:39,439
but just to be on the safe side i've

586
00:21:37,600 --> 00:21:42,399
also used 36 hours so

587
00:21:39,440 --> 00:21:45,280
the weekly schedule of good to bad is

588
00:21:42,400 --> 00:21:47,120
sunday is bad mondays are good

589
00:21:45,280 --> 00:21:48,399
tuesdays are half good and half bad

590
00:21:47,120 --> 00:21:51,039
wednesday's bad

591
00:21:48,400 --> 00:21:51,760
thursdays half good how bad friday's all

592
00:21:51,039 --> 00:21:54,720
good

593
00:21:51,760 --> 00:21:56,559
saturdays good to bad so that's the

594
00:21:54,720 --> 00:21:59,600
schedule of changes

595
00:21:56,559 --> 00:22:01,799
in my repository and when i look

596
00:21:59,600 --> 00:22:03,199
to see that and here's a view from

597
00:22:01,799 --> 00:22:06,240
stat.ripe.net

598
00:22:03,200 --> 00:22:07,440
i see a bunch of activity that matches

599
00:22:06,240 --> 00:22:09,679
the point

600
00:22:07,440 --> 00:22:11,200
where i'm doing the changes because when

601
00:22:09,679 --> 00:22:12,640
i change from good to bad

602
00:22:11,200 --> 00:22:14,559
the folk who are doing filtering

603
00:22:12,640 --> 00:22:16,720
withdraw it in bgp

604
00:22:14,559 --> 00:22:18,960
and that withdrawal ripples around the

605
00:22:16,720 --> 00:22:18,960
net

606
00:22:19,039 --> 00:22:21,760
here is

607
00:22:23,039 --> 00:22:27,200
a pretty picture done by the an amazing

608
00:22:26,159 --> 00:22:29,919
tool bgp

609
00:22:27,200 --> 00:22:31,280
play that shows that when i do that

610
00:22:29,919 --> 00:22:34,960
state transition

611
00:22:31,280 --> 00:22:36,879
everything goes it actually

612
00:22:34,960 --> 00:22:38,960
distorts a large amount of the routing

613
00:22:36,880 --> 00:22:42,720
mesh um

614
00:22:38,960 --> 00:22:44,000
wonderful i like eye candy um

615
00:22:42,720 --> 00:22:46,480
here's a different view which is

616
00:22:44,000 --> 00:22:48,799
probably more informative

617
00:22:46,480 --> 00:22:50,480
well what i'm doing is actually looking

618
00:22:48,799 --> 00:22:53,200
at the fetch rate

619
00:22:50,480 --> 00:22:55,679
from all of those any car servers and

620
00:22:53,200 --> 00:22:59,200
while it's a valid rower

621
00:22:55,679 --> 00:23:01,520
almost everyone 97 98

622
00:22:59,200 --> 00:23:03,440
of folk who when given this url

623
00:23:01,520 --> 00:23:06,240
successfully fetch it

624
00:23:03,440 --> 00:23:08,480
it's never 100 folk get bored the ad

625
00:23:06,240 --> 00:23:10,400
stops whatever

626
00:23:08,480 --> 00:23:12,000
but as you see when it's good almost

627
00:23:10,400 --> 00:23:14,320
everyone's there when i

628
00:23:12,000 --> 00:23:15,520
flip the row estate to bad and keep on

629
00:23:14,320 --> 00:23:18,720
measuring

630
00:23:15,520 --> 00:23:19,840
then a lot fewer folk actually get that

631
00:23:18,720 --> 00:23:22,400
url

632
00:23:19,840 --> 00:23:23,280
so when it's bad certainly there's some

633
00:23:22,400 --> 00:23:26,000
impact

634
00:23:23,280 --> 00:23:27,840
and this is the same seven day window

635
00:23:26,000 --> 00:23:28,640
that sort of shows what's going on in

636
00:23:27,840 --> 00:23:31,918
good to bad

637
00:23:28,640 --> 00:23:31,919
bad to good good to bad

638
00:23:32,000 --> 00:23:36,799
there's more because when i blow this

639
00:23:34,799 --> 00:23:40,158
right up and don't forget

640
00:23:36,799 --> 00:23:40,799
bgp can propagate a change inside of two

641
00:23:40,159 --> 00:23:44,080
minutes

642
00:23:40,799 --> 00:23:46,559
to everywhere but when i actually do the

643
00:23:44,080 --> 00:23:50,559
transition at my repository

644
00:23:46,559 --> 00:23:53,840
at second zero right here

645
00:23:50,559 --> 00:23:56,720
the fetch level remains about the same

646
00:23:53,840 --> 00:23:57,360
there's a slight decline but i'm still

647
00:23:56,720 --> 00:24:00,720
95

648
00:23:57,360 --> 00:24:04,879
96 for 10 minutes

649
00:24:00,720 --> 00:24:07,840
for 20 minutes and just on 30 minutes

650
00:24:04,880 --> 00:24:08,480
the last any cast point disappears from

651
00:24:07,840 --> 00:24:11,360
view

652
00:24:08,480 --> 00:24:13,679
and it seems that it's about 30 minutes

653
00:24:11,360 --> 00:24:16,719
to make a change in the repository

654
00:24:13,679 --> 00:24:19,679
to see the change reflected in bgp

655
00:24:16,720 --> 00:24:21,279
because in any car system when you turn

656
00:24:19,679 --> 00:24:23,840
off the lights

657
00:24:21,279 --> 00:24:25,360
the light is still on until the last

658
00:24:23,840 --> 00:24:29,678
light is turned off

659
00:24:25,360 --> 00:24:32,240
so oddly enough this rpki sensitivity

660
00:24:29,679 --> 00:24:34,480
is actually most dependent on the

661
00:24:32,240 --> 00:24:38,080
slowest people

662
00:24:34,480 --> 00:24:39,679
the folk who are doing the 10 minute

663
00:24:38,080 --> 00:24:42,480
and potentially even the one hour

664
00:24:39,679 --> 00:24:44,640
re-queries it's the slowest people

665
00:24:42,480 --> 00:24:46,000
that determine its dynamic property not

666
00:24:44,640 --> 00:24:49,840
the fastest

667
00:24:46,000 --> 00:24:53,679
being fast doesn't help

668
00:24:49,840 --> 00:24:54,240
um bad to good well interestingly bad to

669
00:24:53,679 --> 00:24:56,559
good

670
00:24:54,240 --> 00:24:57,919
the first light to pop up in any cast

671
00:24:56,559 --> 00:25:00,879
says we're good

672
00:24:57,919 --> 00:25:01,840
as further any cast lights pop up near

673
00:25:00,880 --> 00:25:03,600
it's up

674
00:25:01,840 --> 00:25:05,760
so what you actually find now is the

675
00:25:03,600 --> 00:25:08,639
transitions a lot faster

676
00:25:05,760 --> 00:25:09,919
but it's still not that quick it's still

677
00:25:08,640 --> 00:25:11,919
five minutes

678
00:25:09,919 --> 00:25:13,760
and this seems to be the average between

679
00:25:11,919 --> 00:25:16,159
the two minute polling times

680
00:25:13,760 --> 00:25:17,279
and the ten minute polling times that on

681
00:25:16,159 --> 00:25:18,960
the whole

682
00:25:17,279 --> 00:25:20,720
the transit folk with two minute

683
00:25:18,960 --> 00:25:21,279
re-transmit time is eventually you know

684
00:25:20,720 --> 00:25:23,360
see it

685
00:25:21,279 --> 00:25:24,400
and make their changes it propagates

686
00:25:23,360 --> 00:25:27,360
we're there

687
00:25:24,400 --> 00:25:28,480
so around five minutes for a bad to good

688
00:25:27,360 --> 00:25:32,639
to take effect but

689
00:25:28,480 --> 00:25:35,760
much much longer for good to bad

690
00:25:32,640 --> 00:25:36,159
if this is all about ddos if this is all

691
00:25:35,760 --> 00:25:38,720
about

692
00:25:36,159 --> 00:25:40,159
filtering bad if this is all about

693
00:25:38,720 --> 00:25:43,039
catching mistakes and

694
00:25:40,159 --> 00:25:44,000
fixing them this graph is not as

695
00:25:43,039 --> 00:25:46,960
important

696
00:25:44,000 --> 00:25:48,240
as this one because this is the

697
00:25:46,960 --> 00:25:52,159
sensitivity

698
00:25:48,240 --> 00:25:54,000
to remove a bad thing to actually impose

699
00:25:52,159 --> 00:25:57,360
a rule that says drop that filter

700
00:25:54,000 --> 00:25:59,520
drop that prefix drop something so

701
00:25:57,360 --> 00:26:02,320
30 minutes is perhaps a more important

702
00:25:59,520 --> 00:26:05,279
timer than the bad to good timer

703
00:26:02,320 --> 00:26:06,960
um so there's a mix of two 10 and 60

704
00:26:05,279 --> 00:26:08,720
minutes sweep timers being used out

705
00:26:06,960 --> 00:26:11,840
there

706
00:26:08,720 --> 00:26:14,080
but there are only 1800 clients what

707
00:26:11,840 --> 00:26:14,959
happens when every single network does

708
00:26:14,080 --> 00:26:17,520
this

709
00:26:14,960 --> 00:26:18,400
when the number of clients jumps from

710
00:26:17,520 --> 00:26:22,320
1800

711
00:26:18,400 --> 00:26:25,360
to oh 60 000 or in a couple of years

712
00:26:22,320 --> 00:26:26,559
a hundred thousand that's an awful lot

713
00:26:25,360 --> 00:26:28,719
of sweeping

714
00:26:26,559 --> 00:26:30,799
and for a hundred thousand folk to sweep

715
00:26:28,720 --> 00:26:31,679
across all these repositories all of the

716
00:26:30,799 --> 00:26:33,120
time

717
00:26:31,679 --> 00:26:35,600
two minutes seems like a lot of

718
00:26:33,120 --> 00:26:38,000
thrashing and i kind of wonder

719
00:26:35,600 --> 00:26:39,039
if this aggressive timer is too

720
00:26:38,000 --> 00:26:41,600
aggressive

721
00:26:39,039 --> 00:26:42,960
on the other hand one hour seems

722
00:26:41,600 --> 00:26:45,840
geological

723
00:26:42,960 --> 00:26:47,360
whatever mishap whatever fubar whatever

724
00:26:45,840 --> 00:26:50,559
you're trying to fix

725
00:26:47,360 --> 00:26:53,600
one hour is kind of well history

726
00:26:50,559 --> 00:26:54,639
so i kind of like the 10 minute folk

727
00:26:53,600 --> 00:26:56,799
myself

728
00:26:54,640 --> 00:26:59,520
i think it's a decent compromise i think

729
00:26:56,799 --> 00:27:01,600
two is unsustainably fast

730
00:26:59,520 --> 00:27:03,600
you know despite the modern advances in

731
00:27:01,600 --> 00:27:06,000
computers it still just seems

732
00:27:03,600 --> 00:27:07,760
to slightly too quick i'd go 10 minutes

733
00:27:06,000 --> 00:27:10,480
myself

734
00:27:07,760 --> 00:27:11,600
you might vary we might even have a

735
00:27:10,480 --> 00:27:13,200
standard one day

736
00:27:11,600 --> 00:27:15,918
that actually says what the time should

737
00:27:13,200 --> 00:27:20,399
be but until then it's up to you

738
00:27:15,919 --> 00:27:22,640
um how well are we doing because when i

739
00:27:20,399 --> 00:27:25,439
put all that together

740
00:27:22,640 --> 00:27:28,159
and i look at the number of folk who

741
00:27:25,440 --> 00:27:30,159
can't get to a bad thing

742
00:27:28,159 --> 00:27:32,880
since june of this year when we started

743
00:27:30,159 --> 00:27:35,039
doing this measurement in in earnest

744
00:27:32,880 --> 00:27:36,880
it's been pretty steady around 17

745
00:27:35,039 --> 00:27:41,120
percent of users

746
00:27:36,880 --> 00:27:44,720
can't get there now

747
00:27:41,120 --> 00:27:48,799
v6 took

748
00:27:44,720 --> 00:27:50,399
20 years to get to 17 percent uh rpki

749
00:27:48,799 --> 00:27:53,679
has taken

750
00:27:50,399 --> 00:27:55,520
months so it's surprising you know even

751
00:27:53,679 --> 00:27:57,840
dns sect took a long time

752
00:27:55,520 --> 00:27:59,679
it's surprisingly rapid uptake i was

753
00:27:57,840 --> 00:28:02,639
amazed when we turned this on

754
00:27:59,679 --> 00:28:03,600
that it was that prolific that that many

755
00:28:02,640 --> 00:28:08,159
users

756
00:28:03,600 --> 00:28:08,158
and where are they in july

757
00:28:08,480 --> 00:28:15,679
there's a lot in africa interesting

758
00:28:12,240 --> 00:28:19,760
um some of the the scandi's brilliant

759
00:28:15,679 --> 00:28:22,720
australia primordial

760
00:28:19,760 --> 00:28:24,240
america yeah bits and pieces canada

761
00:28:22,720 --> 00:28:27,360
frozen

762
00:28:24,240 --> 00:28:30,559
that was july this is october

763
00:28:27,360 --> 00:28:31,918
i love these australia seems to turn

764
00:28:30,559 --> 00:28:34,960
something on

765
00:28:31,919 --> 00:28:35,760
um south america a little bit more south

766
00:28:34,960 --> 00:28:38,320
africa has

767
00:28:35,760 --> 00:28:39,039
changed and you know the scandi's are

768
00:28:38,320 --> 00:28:42,799
doing better

769
00:28:39,039 --> 00:28:42,799
oh and switzerland turned something on

770
00:28:43,200 --> 00:28:48,320
why well it's not

771
00:28:46,320 --> 00:28:50,158
people turning on invalid route

772
00:28:48,320 --> 00:28:53,279
filtering everywhere

773
00:28:50,159 --> 00:28:55,760
some do and we certainly know c

774
00:28:53,279 --> 00:28:57,200
com in south africa when i look at ccom

775
00:28:55,760 --> 00:28:58,559
96

776
00:28:57,200 --> 00:29:00,720
perfect you know that's as good as you

777
00:28:58,559 --> 00:29:04,240
get att internet

778
00:29:00,720 --> 00:29:06,960
96 perfect it's as good as you get

779
00:29:04,240 --> 00:29:08,720
but what if i'm a customer of atm t i

780
00:29:06,960 --> 00:29:12,159
don't have to do anything

781
00:29:08,720 --> 00:29:15,600
if i learn all my routes from at7018

782
00:29:12,159 --> 00:29:16,240
then i'm covered i can't get to bad

783
00:29:15,600 --> 00:29:18,240
objects

784
00:29:16,240 --> 00:29:19,360
bad route objects because atmt is doing

785
00:29:18,240 --> 00:29:21,600
the work for me

786
00:29:19,360 --> 00:29:23,039
now in some ways i actually don't need

787
00:29:21,600 --> 00:29:25,199
to do anything

788
00:29:23,039 --> 00:29:27,840
because if the whole idea is to stop my

789
00:29:25,200 --> 00:29:31,760
users going to the bad place

790
00:29:27,840 --> 00:29:34,559
then if my transits do it for me me

791
00:29:31,760 --> 00:29:36,559
done where's my beer so in either case

792
00:29:34,559 --> 00:29:38,559
the objective is achieved

793
00:29:36,559 --> 00:29:40,158
but as long as a number of transits do

794
00:29:38,559 --> 00:29:42,559
this for you

795
00:29:40,159 --> 00:29:43,919
then most of the user outcomes are

796
00:29:42,559 --> 00:29:46,960
actually attained

797
00:29:43,919 --> 00:29:50,000
with very little effort at all

798
00:29:46,960 --> 00:29:52,320
so where do we go from this and how do

799
00:29:50,000 --> 00:29:54,720
we get an even better picture

800
00:29:52,320 --> 00:29:56,639
well the first thing is i'm using three

801
00:29:54,720 --> 00:29:57,919
points in the anycast cloud and three

802
00:29:56,640 --> 00:30:00,480
transits

803
00:29:57,919 --> 00:30:02,320
and i'm advertising basically a web

804
00:30:00,480 --> 00:30:04,159
server that serves one by one blocks

805
00:30:02,320 --> 00:30:07,039
it's about as minimal as we get

806
00:30:04,159 --> 00:30:09,200
um more any car servers with more

807
00:30:07,039 --> 00:30:10,720
transit diversity would certainly help a

808
00:30:09,200 --> 00:30:13,520
lot in this effort

809
00:30:10,720 --> 00:30:15,120
uh and if you can help me uh

810
00:30:13,520 --> 00:30:17,760
particularly in

811
00:30:15,120 --> 00:30:18,399
different transits uh drop me a line i'd

812
00:30:17,760 --> 00:30:20,720
appreciate

813
00:30:18,399 --> 00:30:22,479
uh learning about this because you know

814
00:30:20,720 --> 00:30:24,399
i do need more

815
00:30:22,480 --> 00:30:26,320
a thousand might be too many but you

816
00:30:24,399 --> 00:30:27,918
know a hundred would certainly be a lot

817
00:30:26,320 --> 00:30:30,559
better than three

818
00:30:27,919 --> 00:30:31,200
um i'd actually like to understand the

819
00:30:30,559 --> 00:30:33,600
distinction

820
00:30:31,200 --> 00:30:35,360
between the folks who are riding on the

821
00:30:33,600 --> 00:30:38,080
back of transits who do it

822
00:30:35,360 --> 00:30:39,039
and the folk who are doing it and one

823
00:30:38,080 --> 00:30:41,600
way of doing this

824
00:30:39,039 --> 00:30:43,200
is to actually do selective trace routes

825
00:30:41,600 --> 00:30:44,240
some kind of bombing trace route from

826
00:30:43,200 --> 00:30:47,120
the any car service

827
00:30:44,240 --> 00:30:49,440
to sort of thread in and find the point

828
00:30:47,120 --> 00:30:52,320
where the trace route stops

829
00:30:49,440 --> 00:30:53,679
now what we're doing now is user impact

830
00:30:52,320 --> 00:30:54,639
but i don't know who's actually doing

831
00:30:53,679 --> 00:30:57,600
the dropping

832
00:30:54,640 --> 00:31:00,399
selective traceroute might expose that

833
00:30:57,600 --> 00:31:02,320
but selective trace routes are messy

834
00:31:00,399 --> 00:31:04,000
there's a lot of data and a lot of

835
00:31:02,320 --> 00:31:06,720
analysis and has anyone has looked at

836
00:31:04,000 --> 00:31:06,720
traceroute

837
00:31:07,760 --> 00:31:11,919
it couldn't be worse it really is

838
00:31:10,480 --> 00:31:13,679
peering through the fog

839
00:31:11,919 --> 00:31:15,200
trying to understand where the you know

840
00:31:13,679 --> 00:31:18,559
obstacles are

841
00:31:15,200 --> 00:31:21,440
another way um a different fog

842
00:31:18,559 --> 00:31:22,559
but more interesting perhaps is looking

843
00:31:21,440 --> 00:31:24,880
at the point

844
00:31:22,559 --> 00:31:26,080
of valid to invalid and that route

845
00:31:24,880 --> 00:31:29,039
withdrawal

846
00:31:26,080 --> 00:31:31,039
because in rov invalids it's not a

847
00:31:29,039 --> 00:31:34,399
withdrawal of origin

848
00:31:31,039 --> 00:31:36,000
it's a withdrawal of transit and trying

849
00:31:34,399 --> 00:31:39,639
to find the propagation

850
00:31:36,000 --> 00:31:41,279
in terms of intermediate as parts as bgp

851
00:31:39,640 --> 00:31:44,399
reconverges

852
00:31:41,279 --> 00:31:45,360
you will find that in the new world some

853
00:31:44,399 --> 00:31:49,199
asses

854
00:31:45,360 --> 00:31:52,559
are no longer part of anybody's path

855
00:31:49,200 --> 00:31:54,000
and so with enough digging around inside

856
00:31:52,559 --> 00:31:56,320
wrists and route views

857
00:31:54,000 --> 00:31:57,200
which are both immaculately neat tools

858
00:31:56,320 --> 00:31:59,279
for this

859
00:31:57,200 --> 00:32:00,480
and looking at the updates that happen

860
00:31:59,279 --> 00:32:02,799
after withdrawal

861
00:32:00,480 --> 00:32:03,519
and the states of before and after and

862
00:32:02,799 --> 00:32:05,760
don't forget

863
00:32:03,519 --> 00:32:07,120
conveniently there are you know seven of

864
00:32:05,760 --> 00:32:09,120
these a week or eight a week

865
00:32:07,120 --> 00:32:11,600
uh it might be possible to actually find

866
00:32:09,120 --> 00:32:12,399
out the folks who are no longer there in

867
00:32:11,600 --> 00:32:15,120
transit

868
00:32:12,399 --> 00:32:16,239
by simply looking at bgp but i call this

869
00:32:15,120 --> 00:32:18,399
next steps because

870
00:32:16,240 --> 00:32:19,679
i haven't done it yet but it will be

871
00:32:18,399 --> 00:32:21,360
interesting

872
00:32:19,679 --> 00:32:22,960
um what else might we want to think

873
00:32:21,360 --> 00:32:25,120
about well

874
00:32:22,960 --> 00:32:26,559
this exposes the issue that the big

875
00:32:25,120 --> 00:32:26,959
numbers we're getting are actually all

876
00:32:26,559 --> 00:32:30,240
about

877
00:32:26,960 --> 00:32:30,960
deployment in transits not stubs does

878
00:32:30,240 --> 00:32:32,720
every stub

879
00:32:30,960 --> 00:32:34,640
need to deploy this are we really

880
00:32:32,720 --> 00:32:35,440
talking about the six thousand or so

881
00:32:34,640 --> 00:32:38,799
is's

882
00:32:35,440 --> 00:32:39,840
that are transits and the other 63 odd

883
00:32:38,799 --> 00:32:42,399
thousand or so

884
00:32:39,840 --> 00:32:44,080
who are merely stubs if all the transits

885
00:32:42,399 --> 00:32:45,760
are doing filtering

886
00:32:44,080 --> 00:32:47,199
why do the stubs need to do anything at

887
00:32:45,760 --> 00:32:50,879
all

888
00:32:47,200 --> 00:32:53,679
um if not what's the minimal set

889
00:32:50,880 --> 00:32:55,200
how could we protect most of the users

890
00:32:53,679 --> 00:32:56,080
with the sort of the minimal spanning

891
00:32:55,200 --> 00:32:59,279
set that stops

892
00:32:56,080 --> 00:33:02,240
bad actually propagating through bgp

893
00:32:59,279 --> 00:33:04,559
and on the conversely why should a stub

894
00:33:02,240 --> 00:33:06,880
network actually do this anyway

895
00:33:04,559 --> 00:33:09,200
what's the benefit to the stub network

896
00:33:06,880 --> 00:33:11,840
of doing this kind of filtering

897
00:33:09,200 --> 00:33:14,000
um i don't have an instant answer you

898
00:33:11,840 --> 00:33:17,918
might want to think about that

899
00:33:14,000 --> 00:33:19,919
while raratus telstra

900
00:33:17,919 --> 00:33:20,960
there was an unfortunate episode a few

901
00:33:19,919 --> 00:33:23,600
weeks back

902
00:33:20,960 --> 00:33:26,000
where telstra did a route leak it was

903
00:33:23,600 --> 00:33:28,639
looked to be some kind of ibgp to ebgp

904
00:33:26,000 --> 00:33:29,760
leak but what they'd leaked were not

905
00:33:28,640 --> 00:33:31,440
their own routes

906
00:33:29,760 --> 00:33:34,120
but they were tagged with their origin

907
00:33:31,440 --> 00:33:37,120
as but they were already

908
00:33:34,120 --> 00:33:39,199
described with rowers that positioned

909
00:33:37,120 --> 00:33:43,199
them somewhere else

910
00:33:39,200 --> 00:33:46,480
and although telstra as1221 performs

911
00:33:43,200 --> 00:33:49,519
ingress filtering it does not throw its

912
00:33:46,480 --> 00:33:52,960
announcements through the same filter

913
00:33:49,519 --> 00:33:55,200
should a stub asr or even a transit

914
00:33:52,960 --> 00:33:56,960
filter their own announcements through

915
00:33:55,200 --> 00:33:58,640
the same filtering mechanisms

916
00:33:56,960 --> 00:34:00,000
as they filter the incoming

917
00:33:58,640 --> 00:34:01,840
announcements

918
00:34:00,000 --> 00:34:03,840
and it sort of leads to this question

919
00:34:01,840 --> 00:34:06,000
what's more important

920
00:34:03,840 --> 00:34:07,439
protecting everyone else from my fat

921
00:34:06,000 --> 00:34:08,560
fingers well i think that's pretty

922
00:34:07,440 --> 00:34:11,599
important

923
00:34:08,560 --> 00:34:12,719
or protecting myself from your fat

924
00:34:11,599 --> 00:34:16,240
fingers

925
00:34:12,719 --> 00:34:18,839
ingress versus egress but maybe we

926
00:34:16,239 --> 00:34:21,918
should think about that a little more

927
00:34:18,839 --> 00:34:24,239
because the only routes

928
00:34:21,918 --> 00:34:25,520
and telstra leaked a lot a few not a lot

929
00:34:24,239 --> 00:34:28,799
but a few

930
00:34:25,520 --> 00:34:30,879
we only immediately saw the ones where

931
00:34:28,800 --> 00:34:33,200
there were rowers around

932
00:34:30,879 --> 00:34:34,319
where there was no roller it wasn't

933
00:34:33,199 --> 00:34:36,799
clear

934
00:34:34,320 --> 00:34:37,520
whether it was a leak or not and you

935
00:34:36,800 --> 00:34:41,119
sort of think but

936
00:34:37,520 --> 00:34:42,639
how can i improve this situation

937
00:34:41,119 --> 00:34:45,359
while we've still only got partial

938
00:34:42,639 --> 00:34:47,520
deployment and i think that leads to a

939
00:34:45,359 --> 00:34:50,480
line of thought about the prefix

940
00:34:47,520 --> 00:34:51,359
credentials we currently have and the as

941
00:34:50,480 --> 00:34:54,159
credentials

942
00:34:51,359 --> 00:34:55,359
we don't the ietf is still spending a

943
00:34:54,159 --> 00:34:58,240
lot of time thinking about

944
00:34:55,359 --> 00:34:59,839
into a s topology but there's one other

945
00:34:58,240 --> 00:35:00,399
thing to look at which if we take the

946
00:34:59,839 --> 00:35:02,480
example

947
00:35:00,400 --> 00:35:04,000
i'm sorry to pick on telstra but it just

948
00:35:02,480 --> 00:35:07,599
happened a few weeks ago so

949
00:35:04,000 --> 00:35:10,800
convenient point um were telstra

950
00:35:07,599 --> 00:35:11,599
able in a signed attestation that they

951
00:35:10,800 --> 00:35:14,480
can update

952
00:35:11,599 --> 00:35:15,200
geez every two hours every hour if they

953
00:35:14,480 --> 00:35:17,920
want

954
00:35:15,200 --> 00:35:18,640
every two minutes an attestation that

955
00:35:17,920 --> 00:35:21,920
says

956
00:35:18,640 --> 00:35:24,879
we originate these routes

957
00:35:21,920 --> 00:35:25,839
anything else we originate you shouldn't

958
00:35:24,880 --> 00:35:28,160
believe

959
00:35:25,839 --> 00:35:29,359
we are not that point and this is a

960
00:35:28,160 --> 00:35:33,279
prefix

961
00:35:29,359 --> 00:35:35,598
versus as attestation difference

962
00:35:33,280 --> 00:35:37,040
the prefix hold is saying i authorize

963
00:35:35,599 --> 00:35:39,839
this as

964
00:35:37,040 --> 00:35:42,400
but maybe the as might want to say this

965
00:35:39,839 --> 00:35:45,040
is everything i'm prepared to say

966
00:35:42,400 --> 00:35:47,359
if you see anything else either

967
00:35:45,040 --> 00:35:49,040
accidentally or deliberately

968
00:35:47,359 --> 00:35:51,759
because accidents seem to be the primary

969
00:35:49,040 --> 00:35:54,320
target here if i say anything else

970
00:35:51,760 --> 00:35:55,680
help me out here get rid of it it's not

971
00:35:54,320 --> 00:35:57,520
what i meant

972
00:35:55,680 --> 00:35:58,799
we might want to think about that and

973
00:35:57,520 --> 00:36:00,800
think about what as

974
00:35:58,800 --> 00:36:02,000
tools enumeration of all those

975
00:36:00,800 --> 00:36:03,920
originations

976
00:36:02,000 --> 00:36:06,320
might actually help in this kind of

977
00:36:03,920 --> 00:36:09,440
situation

978
00:36:06,320 --> 00:36:11,440
so big questions to wrap up and fuel

979
00:36:09,440 --> 00:36:15,040
your thoughts for questions

980
00:36:11,440 --> 00:36:16,720
um as always the question with security

981
00:36:15,040 --> 00:36:18,800
is once you get past the obsessive

982
00:36:16,720 --> 00:36:20,959
compulsion disorder of trying to secure

983
00:36:18,800 --> 00:36:23,040
everything and get to the point where

984
00:36:20,960 --> 00:36:26,480
you're trying to pragmatically

985
00:36:23,040 --> 00:36:30,560
spend some effort to make disruption

986
00:36:26,480 --> 00:36:32,480
difficult not prevented difficult then

987
00:36:30,560 --> 00:36:33,680
what are we trying to make difficult to

988
00:36:32,480 --> 00:36:36,160
whom why

989
00:36:33,680 --> 00:36:37,200
from what threat what are we trying to

990
00:36:36,160 --> 00:36:40,000
protect here

991
00:36:37,200 --> 00:36:41,839
is it users is it the routing system is

992
00:36:40,000 --> 00:36:42,720
it our own fat fingers that are more of

993
00:36:41,839 --> 00:36:45,759
the problem

994
00:36:42,720 --> 00:36:48,879
or is it deliberate well resourced

995
00:36:45,760 --> 00:36:51,440
and frankly hostile efforts to fool

996
00:36:48,880 --> 00:36:52,720
us via the routing system what's the

997
00:36:51,440 --> 00:36:54,720
threat model

998
00:36:52,720 --> 00:36:56,000
and unfortunately with routing we've got

999
00:36:54,720 --> 00:36:56,959
no clear answer

1000
00:36:56,000 --> 00:36:59,920
and a whole bunch of different

1001
00:36:56,960 --> 00:37:02,079
motivations you see if it's a user

1002
00:36:59,920 --> 00:37:04,880
protection issue

1003
00:37:02,079 --> 00:37:07,280
then route filtering is far more

1004
00:37:04,880 --> 00:37:10,160
important for transits and exchanges

1005
00:37:07,280 --> 00:37:10,160
for stubs

1006
00:37:11,599 --> 00:37:14,720
you know the collateral damage is

1007
00:37:13,440 --> 00:37:15,760
actually really quite low but for

1008
00:37:14,720 --> 00:37:17,520
transits

1009
00:37:15,760 --> 00:37:19,920
because all your customers get affected

1010
00:37:17,520 --> 00:37:22,320
as well then rov filtering is

1011
00:37:19,920 --> 00:37:24,240
way way more important for transits and

1012
00:37:22,320 --> 00:37:25,680
of course for exchanges

1013
00:37:24,240 --> 00:37:27,520
so if i was going to argue where the

1014
00:37:25,680 --> 00:37:29,279
major incentives were

1015
00:37:27,520 --> 00:37:31,280
if you're a stub sitting off a number of

1016
00:37:29,280 --> 00:37:34,400
transits and ixes

1017
00:37:31,280 --> 00:37:35,520
up to you don't forget it might be a

1018
00:37:34,400 --> 00:37:38,640
protection mechanism

1019
00:37:35,520 --> 00:37:42,160
but it's one more thing to go wrong okay

1020
00:37:38,640 --> 00:37:43,759
what about transits and exchanges no

1021
00:37:42,160 --> 00:37:45,359
lots of people are behind you at this

1022
00:37:43,760 --> 00:37:47,119
point

1023
00:37:45,359 --> 00:37:48,799
it becomes more of an important issue to

1024
00:37:47,119 --> 00:37:51,040
spend time and effort

1025
00:37:48,800 --> 00:37:52,880
and make sure spend the effort to make

1026
00:37:51,040 --> 00:37:55,359
sure things don't go wrong

1027
00:37:52,880 --> 00:37:56,320
so maybe this is a tool for transits and

1028
00:37:55,359 --> 00:37:59,598
exchanges

1029
00:37:56,320 --> 00:38:02,720
more for stubs with that i will

1030
00:37:59,599 --> 00:38:03,760
leave you to ponder those questions work

1031
00:38:02,720 --> 00:38:05,439
hard at them

1032
00:38:03,760 --> 00:38:07,440
and if you've got anyone to ask right

1033
00:38:05,440 --> 00:38:09,790
now i'd be pleased to try and

1034
00:38:07,440 --> 00:38:15,780
take them on thank you very much

1035
00:38:09,790 --> 00:38:15,779
[Music]

1036
00:38:16,079 --> 00:38:20,240
thank you jeff excellent talk we're now

1037
00:38:19,119 --> 00:38:22,720
a few minutes for uh

1038
00:38:20,240 --> 00:38:24,959
questions feel free to place them in the

1039
00:38:22,720 --> 00:38:24,959
chat

1040
00:38:25,440 --> 00:38:28,880
well you know it is a wonderful morning

1041
00:38:26,880 --> 00:38:32,560
over here in australia i can guarantee

1042
00:38:28,880 --> 00:38:36,320
that thursday is a good day okay

1043
00:38:32,560 --> 00:38:36,680
and no questions wow

1044
00:38:36,320 --> 00:38:39,520
right

1045
00:38:36,680 --> 00:38:42,319
[Music]

1046
00:38:39,520 --> 00:38:44,480
so here we are doing an awesomely

1047
00:38:42,320 --> 00:38:47,839
important job

1048
00:38:44,480 --> 00:38:47,839
badly and there are no questions

1049
00:38:48,960 --> 00:38:51,280
okay

1050
00:38:52,940 --> 00:38:59,359
[Music]

1051
00:38:55,920 --> 00:38:59,839
is arsenic bad let me let me say in one

1052
00:38:59,359 --> 00:39:03,759
word

1053
00:38:59,839 --> 00:39:05,279
yes um rsync was actually a pragmatic

1054
00:39:03,760 --> 00:39:07,680
protocol

1055
00:39:05,280 --> 00:39:09,200
that was just meant to do one thing but

1056
00:39:07,680 --> 00:39:11,680
oddly enough when you

1057
00:39:09,200 --> 00:39:13,598
uncover it and there's a really good

1058
00:39:11,680 --> 00:39:14,160
presentation i think george michaelson

1059
00:39:13,599 --> 00:39:17,200
may have done

1060
00:39:14,160 --> 00:39:20,399
an ietf about seven years ago

1061
00:39:17,200 --> 00:39:22,319
that looks at rsync the answer is you

1062
00:39:20,400 --> 00:39:23,920
didn't want to look there

1063
00:39:22,320 --> 00:39:26,400
and if you're looking at secure

1064
00:39:23,920 --> 00:39:28,560
infrastructure

1065
00:39:26,400 --> 00:39:29,680
that's not a protocol you want to use it

1066
00:39:28,560 --> 00:39:32,400
is

1067
00:39:29,680 --> 00:39:35,359
really bad it's bad on security it's

1068
00:39:32,400 --> 00:39:37,359
possible to actually fool the checksums

1069
00:39:35,359 --> 00:39:38,560
there's a whole bunch of ways that rsync

1070
00:39:37,359 --> 00:39:40,560
fails us

1071
00:39:38,560 --> 00:39:42,640
and if you are still running rsync

1072
00:39:40,560 --> 00:39:44,960
there's only one thing i can say

1073
00:39:42,640 --> 00:39:44,960
don't

1074
00:39:49,359 --> 00:39:52,319
any other questions

1075
00:39:54,400 --> 00:39:58,800
there is the q a tab don't forget uh

1076
00:39:56,320 --> 00:40:01,280
jason

1077
00:39:58,800 --> 00:40:01,280
not man

1078
00:40:04,010 --> 00:40:10,079
[Music]

1079
00:40:05,599 --> 00:40:13,280
go ahead

1080
00:40:10,079 --> 00:40:16,720
prognosis for path validation asks avi

1081
00:40:13,280 --> 00:40:19,440
and and the prognosis is incredibly bad

1082
00:40:16,720 --> 00:40:20,640
um the model that the ietf went and

1083
00:40:19,440 --> 00:40:23,440
standardized the full

1084
00:40:20,640 --> 00:40:24,000
aspart validation with routers having

1085
00:40:23,440 --> 00:40:28,880
keys

1086
00:40:24,000 --> 00:40:32,240
signing updates etc um it's just

1087
00:40:28,880 --> 00:40:34,319
only a security geek only an ocd

1088
00:40:32,240 --> 00:40:35,598
security geek would actually think this

1089
00:40:34,319 --> 00:40:38,079
was viable

1090
00:40:35,599 --> 00:40:39,760
um and more to the point too it only

1091
00:40:38,079 --> 00:40:41,040
solves the protocol problem not the

1092
00:40:39,760 --> 00:40:44,319
policy problem

1093
00:40:41,040 --> 00:40:44,720
so in some ways it never got deployed

1094
00:40:44,319 --> 00:40:47,040
because

1095
00:40:44,720 --> 00:40:48,078
it's never going to get deployed because

1096
00:40:47,040 --> 00:40:51,359
it's a massive

1097
00:40:48,079 --> 00:40:54,000
solution to an unknown problem

1098
00:40:51,359 --> 00:40:55,440
and is the problem with solution

1099
00:40:54,000 --> 00:40:57,119
probably not

1100
00:40:55,440 --> 00:40:59,359
there was a really nice idea that

1101
00:40:57,119 --> 00:41:01,119
originally sort of came to where and got

1102
00:40:59,359 --> 00:41:04,640
oxygen with a thing called sob

1103
00:41:01,119 --> 00:41:06,000
gp secure origin bgp around about maybe

1104
00:41:04,640 --> 00:41:08,240
20 years ago

1105
00:41:06,000 --> 00:41:09,839
uh brian vice and russ white at cisco at

1106
00:41:08,240 --> 00:41:11,359
the time were pushing it

1107
00:41:09,839 --> 00:41:13,040
it had a lot of good things and a lot of

1108
00:41:11,359 --> 00:41:13,598
bad things one of the good things was

1109
00:41:13,040 --> 00:41:17,839
a.s

1110
00:41:13,599 --> 00:41:18,960
pairing if i tell you all my partners my

1111
00:41:17,839 --> 00:41:22,078
peers

1112
00:41:18,960 --> 00:41:23,680
if you see a path that has me in it then

1113
00:41:22,079 --> 00:41:25,920
the adjacent asses

1114
00:41:23,680 --> 00:41:26,879
need to be in my attestations of

1115
00:41:25,920 --> 00:41:30,240
partners

1116
00:41:26,880 --> 00:41:32,400
or it's a fake nice idea

1117
00:41:30,240 --> 00:41:34,560
this was taken further in the ietf at

1118
00:41:32,400 --> 00:41:36,800
the cider working group in recent months

1119
00:41:34,560 --> 00:41:37,680
years actually things go slowly don't

1120
00:41:36,800 --> 00:41:40,720
they

1121
00:41:37,680 --> 00:41:41,839
with aspa path attestations but with a

1122
00:41:40,720 --> 00:41:43,598
twist

1123
00:41:41,839 --> 00:41:44,880
do you actually talk about your policy

1124
00:41:43,599 --> 00:41:47,680
relationship

1125
00:41:44,880 --> 00:41:48,000
this is my provider the beauty about

1126
00:41:47,680 --> 00:41:50,720
that

1127
00:41:48,000 --> 00:41:51,040
is that you now rely on what we call the

1128
00:41:50,720 --> 00:41:53,279
no

1129
00:41:51,040 --> 00:41:56,240
valley technique that if someone's

1130
00:41:53,280 --> 00:41:58,000
trying to synthesize a route

1131
00:41:56,240 --> 00:41:59,919
they've got to make sure that they

1132
00:41:58,000 --> 00:42:00,880
preserve the no valley property of a

1133
00:41:59,920 --> 00:42:03,760
route

1134
00:42:00,880 --> 00:42:05,680
all of this says yes you can lie in path

1135
00:42:03,760 --> 00:42:09,440
with these adjacency attitudes

1136
00:42:05,680 --> 00:42:11,440
of course you can but the degree of

1137
00:42:09,440 --> 00:42:13,680
freedom to which you can lie

1138
00:42:11,440 --> 00:42:15,280
gets more and more constrained and so

1139
00:42:13,680 --> 00:42:17,440
without the cost

1140
00:42:15,280 --> 00:42:18,560
of signing over signing over signing

1141
00:42:17,440 --> 00:42:21,599
over signing

1142
00:42:18,560 --> 00:42:23,759
as path pairing actually gives you a

1143
00:42:21,599 --> 00:42:24,880
decently efficient way of doing path

1144
00:42:23,760 --> 00:42:28,160
validation

1145
00:42:24,880 --> 00:42:29,200
without that overhead um are we going to

1146
00:42:28,160 --> 00:42:32,560
do it

1147
00:42:29,200 --> 00:42:35,919
oh god i always think you get one shot

1148
00:42:32,560 --> 00:42:38,799
there is no ipv7 we just had one shot

1149
00:42:35,920 --> 00:42:40,480
and i think rpki had one shot and it

1150
00:42:38,800 --> 00:42:43,359
didn't include path

1151
00:42:40,480 --> 00:42:44,800
and i think the effort to put path in is

1152
00:42:43,359 --> 00:42:46,400
even greater than all the effort we've

1153
00:42:44,800 --> 00:42:49,119
had so far

1154
00:42:46,400 --> 00:42:49,119
and that's sad

1155
00:42:49,599 --> 00:43:02,079
and question for gordon

1156
00:42:58,340 --> 00:43:04,079
[Music]

1157
00:43:02,079 --> 00:43:06,720
um are those rpki beacons still

1158
00:43:04,079 --> 00:43:06,720
operating

1159
00:43:08,880 --> 00:43:14,079
if you look at the noisiest prefixes

1160
00:43:12,000 --> 00:43:15,280
from the perspective of rov operators

1161
00:43:14,079 --> 00:43:17,040
you'll find me

1162
00:43:15,280 --> 00:43:20,240
um they're operating and they're

1163
00:43:17,040 --> 00:43:20,240
operating permanently

1164
00:43:20,400 --> 00:43:23,680
but but

1165
00:43:25,280 --> 00:43:29,440
i use them in a very particular way with

1166
00:43:26,960 --> 00:43:30,400
very particular um uris but if you just

1167
00:43:29,440 --> 00:43:33,599
want to see

1168
00:43:30,400 --> 00:43:36,400
whether you can see those prefixes um

1169
00:43:33,599 --> 00:43:37,760
any any bgp amateur can see them or if

1170
00:43:36,400 --> 00:43:38,079
you send me a mail i'll actually tell

1171
00:43:37,760 --> 00:43:40,319
you

1172
00:43:38,079 --> 00:43:43,280
the prefix and the as and you too can

1173
00:43:40,319 --> 00:43:45,759
watch them go up and down

1174
00:43:43,280 --> 00:43:46,640
a question from john karen um any ideas

1175
00:43:45,760 --> 00:43:51,599
on how to prove

1176
00:43:46,640 --> 00:43:54,640
the 30 minute um long lag valid chain

1177
00:43:51,599 --> 00:43:57,200
oh um i think

1178
00:43:54,640 --> 00:43:58,879
all of our sync with that one hour has

1179
00:43:57,200 --> 00:44:02,879
got to go

1180
00:43:58,880 --> 00:44:05,359
i think the two minute is too aggressive

1181
00:44:02,880 --> 00:44:06,640
i think the 10 minute sweeps are a

1182
00:44:05,359 --> 00:44:09,920
starting point

1183
00:44:06,640 --> 00:44:11,920
but that wiki media plot there

1184
00:44:09,920 --> 00:44:13,440
if you look hard and the slide doesn't

1185
00:44:11,920 --> 00:44:14,640
show you enough but i did give you the

1186
00:44:13,440 --> 00:44:18,079
url

1187
00:44:14,640 --> 00:44:20,640
there are a couple taiwan

1188
00:44:18,079 --> 00:44:22,160
taiwan there are a couple of rpki

1189
00:44:20,640 --> 00:44:24,560
repository points

1190
00:44:22,160 --> 00:44:25,200
that most clients including wikimedias

1191
00:44:24,560 --> 00:44:27,839
are taking an

1192
00:44:25,200 --> 00:44:29,919
awfully long time to sweep through up to

1193
00:44:27,839 --> 00:44:32,078
27 minutes

1194
00:44:29,920 --> 00:44:33,119
if we can make those distributed

1195
00:44:32,079 --> 00:44:36,079
repository points

1196
00:44:33,119 --> 00:44:37,520
faster and if you are making your own if

1197
00:44:36,079 --> 00:44:40,560
you are rolling krill

1198
00:44:37,520 --> 00:44:41,839
good idea don't use a raspberry pi use

1199
00:44:40,560 --> 00:44:45,040
something with grunt

1200
00:44:41,839 --> 00:44:48,000
real grunt put it in big infrastructure

1201
00:44:45,040 --> 00:44:50,400
allow it to go fast if you do that plus

1202
00:44:48,000 --> 00:44:52,319
get rid of the one hour sweep timers

1203
00:44:50,400 --> 00:44:54,480
we can get folk down to 10 minutes and

1204
00:44:52,319 --> 00:44:55,680
get the response time inside 15 rather

1205
00:44:54,480 --> 00:44:58,240
than 30.

1206
00:44:55,680 --> 00:44:59,919
faster than that i don't think it'll

1207
00:44:58,240 --> 00:45:01,680
scale john so

1208
00:44:59,920 --> 00:45:03,680
maybe 15 minutes is about as good as

1209
00:45:01,680 --> 00:45:04,160
we're going to get is 30 minutes good

1210
00:45:03,680 --> 00:45:06,240
enough

1211
00:45:04,160 --> 00:45:07,759
well i'm not sure i think so i think we

1212
00:45:06,240 --> 00:45:10,959
can do a bit better

1213
00:45:07,760 --> 00:45:14,240
but if you're looking for seconds

1214
00:45:10,960 --> 00:45:17,440
different universe this won't work

1215
00:45:14,240 --> 00:45:18,879
one quick question to know um trust me

1216
00:45:17,440 --> 00:45:21,359
there's a diversity risk of

1217
00:45:18,880 --> 00:45:22,319
delegated publication point is affected

1218
00:45:21,359 --> 00:45:24,240
by the aurora

1219
00:45:22,319 --> 00:45:26,079
and you make a mistake how to better

1220
00:45:24,240 --> 00:45:28,479
improve the diversity of publication

1221
00:45:26,079 --> 00:45:28,480
points

1222
00:45:28,640 --> 00:45:34,160
oh tony you've walked right into it

1223
00:45:32,319 --> 00:45:36,640
what's the best reliable flooding

1224
00:45:34,160 --> 00:45:40,640
algorithm we've ever invented

1225
00:45:36,640 --> 00:45:43,680
the answer is bgp the answer is not rrdp

1226
00:45:40,640 --> 00:45:46,480
if we really want to flood these

1227
00:45:43,680 --> 00:45:47,839
information objects all over the bgp

1228
00:45:46,480 --> 00:45:50,240
speaking world

1229
00:45:47,839 --> 00:45:51,359
then as everyone else has found bgp

1230
00:45:50,240 --> 00:45:54,640
kitchen sync

1231
00:45:51,359 --> 00:45:55,680
the one answer is bgp don't use route

1232
00:45:54,640 --> 00:45:58,799
objects

1233
00:45:55,680 --> 00:46:00,000
invent a new object and use the fact

1234
00:45:58,800 --> 00:46:03,200
these days that bgb

1235
00:46:00,000 --> 00:46:06,000
message sizes are now up to 65k long

1236
00:46:03,200 --> 00:46:06,879
and flood the network using the bgp

1237
00:46:06,000 --> 00:46:08,560
protocol

1238
00:46:06,880 --> 00:46:10,880
to sync up all the repository data

1239
00:46:08,560 --> 00:46:12,480
points this idea that we can make a

1240
00:46:10,880 --> 00:46:15,839
second flooding protocol called

1241
00:46:12,480 --> 00:46:18,160
rrdp and somehow

1242
00:46:15,839 --> 00:46:20,000
by wishful thinking rather than protocol

1243
00:46:18,160 --> 00:46:22,560
engineering perfectly frank

1244
00:46:20,000 --> 00:46:23,359
somehow we can make that distributed

1245
00:46:22,560 --> 00:46:25,440
system

1246
00:46:23,359 --> 00:46:28,720
become a reliable flooding system to all

1247
00:46:25,440 --> 00:46:32,000
the caches

1248
00:46:28,720 --> 00:46:33,839
no no there's no magic sorry

1249
00:46:32,000 --> 00:46:35,200
it ain't going to work so if we really

1250
00:46:33,839 --> 00:46:37,520
want to make it better

1251
00:46:35,200 --> 00:46:38,720
throw it inside of engineered flooding

1252
00:46:37,520 --> 00:46:41,359
protocol algorithm

1253
00:46:38,720 --> 00:46:43,359
like bgp and stop mucking around with

1254
00:46:41,359 --> 00:46:47,598
silly algorithms on the side

1255
00:46:43,359 --> 00:46:47,598
um was that an opinion yes it was

1256
00:46:47,839 --> 00:46:58,560
good thank you thank you

1257
00:46:56,480 --> 00:46:58,560
you

