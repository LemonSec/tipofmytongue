1
00:00:02,530 --> 00:00:08,680
he actually works thank you very<font color="#CCCCCC"> much</font>

2
00:00:05,529 --> 00:00:11,019
for<font color="#E5E5E5"> the introduction I'm Kevin I'm part</font>

3
00:00:08,680 --> 00:00:13,088
of the cyber<font color="#E5E5E5"> grand challenge part of</font>

4
00:00:11,019 --> 00:00:14,950
shellfish and I will be talking about

5
00:00:13,089 --> 00:00:17,020
the experience that we<font color="#CCCCCC"> had essentially</font>

6
00:00:14,950 --> 00:00:19,480
just starting with<font color="#E5E5E5"> a little bit where</font>

7
00:00:17,020 --> 00:00:21,850
shellfish is coming from which kind<font color="#E5E5E5"> of</font>

8
00:00:19,480 --> 00:00:24,670
spurs the entire why we participated in

9
00:00:21,850 --> 00:00:26,350
it Michelle Fifi was essentially born at

10
00:00:24,670 --> 00:00:28,870
the University of California Santa

11
00:00:26,350 --> 00:00:31,750
Barbara i am the SEC lab there which is

12
00:00:28,870 --> 00:00:33,670
<font color="#E5E5E5">led by two professors which is javonni</font>

13
00:00:31,750 --> 00:00:36,010
<font color="#CCCCCC">vinia and</font><font color="#E5E5E5"> christopher google some of you</font>

14
00:00:33,670 --> 00:00:39,399
might know both<font color="#CCCCCC"> of them some</font><font color="#E5E5E5"> of you</font>

15
00:00:36,010 --> 00:00:41,858
might either one of them and all of us

16
00:00:39,399 --> 00:00:44,019
there are<font color="#E5E5E5"> senseless academics at heart</font>

17
00:00:41,859 --> 00:00:46,120
so on the left side there you have

18
00:00:44,019 --> 00:00:48,010
<font color="#CCCCCC">Giovanni like 15 years</font><font color="#E5E5E5"> ago still with</font>

19
00:00:46,120 --> 00:00:52,269
long hair and then on the right height

20
00:00:48,010 --> 00:00:54,729
you have Chris and shellfish I mean only

21
00:00:52,269 --> 00:00:57,100
a few<font color="#E5E5E5"> of you might know as actually in</font>

22
00:00:54,729 --> 00:01:00,159
Santa Barbara which is a very<font color="#E5E5E5"> nice city</font>

23
00:00:57,100 --> 00:01:01,899
in southern california at the beach if

24
00:01:00,159 --> 00:01:04,019
you look very closely this is where

25
00:01:01,899 --> 00:01:06,520
shellfish was born and still is and

26
00:01:04,019 --> 00:01:08,820
which is also<font color="#E5E5E5"> why our tech line that's</font>

27
00:01:06,520 --> 00:01:12,219
essentially hex on the beach um

28
00:01:08,820 --> 00:01:14,679
shellfish started in 2004 with just

29
00:01:12,219 --> 00:01:17,289
<font color="#E5E5E5">javonni and it's a bunch of his grad</font>

30
00:01:14,680 --> 00:01:19,090
students<font color="#E5E5E5"> so a few of you might know</font>

31
00:01:17,290 --> 00:01:21,520
about<font color="#CCCCCC"> the Roth which is da vida buzz</font>

32
00:01:19,090 --> 00:01:23,469
Dorothy from eurocom and then you have

33
00:01:21,520 --> 00:01:25,689
William Robertson who is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> professor</font><font color="#CCCCCC"> in</font>

34
00:01:23,469 --> 00:01:28,750
northeastern both of them are also

35
00:01:25,689 --> 00:01:30,699
<font color="#CCCCCC">Hackett that makes it hard starting from</font>

36
00:01:28,750 --> 00:01:34,420
there essentially<font color="#CCCCCC"> Selfridges took its</font>

37
00:01:30,700 --> 00:01:37,750
life and went on to win DEFCON CTF in

38
00:01:34,420 --> 00:01:40,329
2005 which is also the<font color="#CCCCCC"> only since the</font>

39
00:01:37,750 --> 00:01:42,759
time at which point shelf is one we have

40
00:01:40,329 --> 00:01:45,729
qualified for DEFCON CTF every year

41
00:01:42,759 --> 00:01:47,530
since then I think but 2006 but we've

42
00:01:45,729 --> 00:01:49,479
never actually won after so we're really

43
00:01:47,530 --> 00:01:52,810
good at qualifying but we also really

44
00:01:49,479 --> 00:01:56,310
good at not winning which well the

45
00:01:52,810 --> 00:01:58,869
Cyberman challenge<font color="#E5E5E5"> also kind of showed</font>

46
00:01:56,310 --> 00:02:00,700
shellfish from denison<font color="#CCCCCC"> Slee evolved over</font>

47
00:01:58,869 --> 00:02:02,890
the years a<font color="#E5E5E5"> little bit longer so some</font>

48
00:02:00,700 --> 00:02:05,799
people moved to Vienna and then simply

49
00:02:02,890 --> 00:02:07,570
hired some grad students there and then

50
00:02:05,799 --> 00:02:09,610
they moved back to some slaves in a

51
00:02:07,570 --> 00:02:11,769
Barbara and then a<font color="#E5E5E5"> few more people</font>

52
00:02:09,610 --> 00:02:13,480
started to move<font color="#E5E5E5"> around and then at one</font>

53
00:02:11,769 --> 00:02:15,790
point a lot of students got interested

54
00:02:13,480 --> 00:02:16,390
<font color="#E5E5E5">in it when essentially Santa Barbara</font>

55
00:02:15,790 --> 00:02:18,370
started

56
00:02:16,390 --> 00:02:19,899
the<font color="#E5E5E5"> ice</font><font color="#CCCCCC"> ETF that some of you might be</font>

57
00:02:18,370 --> 00:02:21,700
familiar with especially the

58
00:02:19,900 --> 00:02:24,610
international capture the flag contest

59
00:02:21,700 --> 00:02:26,500
which we usually aim to organize once a

60
00:02:24,610 --> 00:02:28,540
year<font color="#E5E5E5"> but if you've actually paid</font>

61
00:02:26,500 --> 00:02:30,040
attention and the<font color="#E5E5E5"> most recent years</font>

62
00:02:28,540 --> 00:02:33,310
doesn't actually happen that often

63
00:02:30,040 --> 00:02:35,079
anymore going on from there since Lee

64
00:02:33,310 --> 00:02:37,510
just<font color="#E5E5E5"> have like more</font><font color="#CCCCCC"> people moving and</font>

65
00:02:35,080 --> 00:02:40,150
moving some people since we<font color="#E5E5E5"> going on and</font>

66
00:02:37,510 --> 00:02:42,970
getting<font color="#E5E5E5"> a real job and then essentially</font>

67
00:02:40,150 --> 00:02:46,540
more people just kind<font color="#E5E5E5"> of coming and</font>

68
00:02:42,970 --> 00:02:50,080
going and the core part now essentially

69
00:02:46,540 --> 00:02:52,090
is moving very much<font color="#E5E5E5"> to like less people</font>

70
00:02:50,080 --> 00:02:53,530
but more concentrated to send a Barbra

71
00:02:52,090 --> 00:02:55,510
you still have like a bunch<font color="#E5E5E5"> of people</font><font color="#CCCCCC"> at</font>

72
00:02:53,530 --> 00:02:58,870
Northeastern or Boston or in London or

73
00:02:55,510 --> 00:03:02,230
Arizona eurocom and essentially from

74
00:02:58,870 --> 00:03:04,900
their self is just essentially goes on

75
00:03:02,230 --> 00:03:06,100
and go on it on coming to the<font color="#CCCCCC"> cyber</font>

76
00:03:04,900 --> 00:03:07,840
cyber<font color="#CCCCCC"> grand</font><font color="#E5E5E5"> challenge which is the</font>

77
00:03:06,100 --> 00:03:09,040
<font color="#E5E5E5">actual topic but i just wanted to give</font>

78
00:03:07,840 --> 00:03:10,780
<font color="#CCCCCC">you a little bit of instance with</font>

79
00:03:09,040 --> 00:03:12,730
essential information<font color="#CCCCCC"> that shellfish is</font>

80
00:03:10,780 --> 00:03:15,910
at this point<font color="#CCCCCC"> to think the</font><font color="#E5E5E5"> longest</font>

81
00:03:12,730 --> 00:03:17,799
<font color="#E5E5E5">running CTF team that exists but also</font>

82
00:03:15,910 --> 00:03:19,420
that essentially there's a lot of

83
00:03:17,800 --> 00:03:21,549
fluctuating of people so it's not<font color="#E5E5E5"> that</font>

84
00:03:19,420 --> 00:03:23,170
<font color="#CCCCCC">the core people are still all there it's</font>

85
00:03:21,549 --> 00:03:26,290
just a bunch<font color="#E5E5E5"> of people</font><font color="#CCCCCC"> in them are still</font>

86
00:03:23,170 --> 00:03:28,420
there<font color="#E5E5E5"> um some of you might not be</font>

87
00:03:26,290 --> 00:03:31,090
<font color="#CCCCCC">familiar with essentially DARPA in</font>

88
00:03:28,420 --> 00:03:34,149
general so da Prez translate just the

89
00:03:31,090 --> 00:03:38,440
research part of the US military<font color="#CCCCCC"> it's a</font>

90
00:03:34,150 --> 00:03:40,030
defense research project agency so

91
00:03:38,440 --> 00:03:42,130
defense advancements research project

92
00:03:40,030 --> 00:03:44,440
agency essentially they aim to fund

93
00:03:42,130 --> 00:03:47,680
fundamental research in a variety of

94
00:03:44,440 --> 00:03:49,930
different<font color="#E5E5E5"> topics that touch military</font>

95
00:03:47,680 --> 00:03:51,459
application not necessarily right now or

96
00:03:49,930 --> 00:03:54,519
in the next five years but<font color="#E5E5E5"> essentially</font>

97
00:03:51,459 --> 00:03:56,290
down the line in like<font color="#CCCCCC"> 15 20 years that</font>

98
00:03:54,519 --> 00:03:59,200
all essentially started with DARPA Grand

99
00:03:56,290 --> 00:04:01,810
Challenges for self-driving cars which

100
00:03:59,200 --> 00:04:04,209
<font color="#E5E5E5">essentially we helped first in 2004 in</font>

101
00:04:01,810 --> 00:04:06,880
2005 and the first one actually no car

102
00:04:04,209 --> 00:04:08,530
actually finished and then only in the

103
00:04:06,880 --> 00:04:10,540
second time they<font color="#E5E5E5"> organized it i think a</font>

104
00:04:08,530 --> 00:04:12,459
year or two years later self-driving

105
00:04:10,540 --> 00:04:16,000
cars were able to simply make progress

106
00:04:12,459 --> 00:04:19,120
and finish some<font color="#CCCCCC"> slave from</font><font color="#E5E5E5"> start to</font>

107
00:04:16,000 --> 00:04:22,630
finish within<font color="#E5E5E5"> seven hours for 130 miles</font>

108
00:04:19,120 --> 00:04:24,700
or more almost like 200 kilometers which

109
00:04:22,630 --> 00:04:26,110
at that point yes like 30 kilometres an

110
00:04:24,700 --> 00:04:28,330
hour<font color="#CCCCCC"> i don't think you want to</font><font color="#E5E5E5"> actually</font>

111
00:04:26,110 --> 00:04:30,160
be sitting<font color="#E5E5E5"> in a self-driving car going</font>

112
00:04:28,330 --> 00:04:30,310
on the highway at like 30 kilometres and

113
00:04:30,160 --> 00:04:33,460
now

114
00:04:30,310 --> 00:04:34,810
horn but since then I<font color="#E5E5E5"> mean a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> you</font>

115
00:04:33,460 --> 00:04:37,359
<font color="#E5E5E5">probably have seen the news on like</font>

116
00:04:34,810 --> 00:04:39,160
Google uber all of them essentially have

117
00:04:37,360 --> 00:04:42,240
now filled its self-driving cars at

118
00:04:39,160 --> 00:04:44,590
least in California and in Pittsburgh

119
00:04:42,240 --> 00:04:46,720
similar to that<font color="#CCCCCC"> Justin Slade like the</font>

120
00:04:44,590 --> 00:04:49,510
robots<font color="#E5E5E5"> Grand Challenge which kind of</font>

121
00:04:46,720 --> 00:04:52,630
aimed to essentially fun fun robotic

122
00:04:49,510 --> 00:04:54,849
research that goes on to like of<font color="#CCCCCC"> course</font>

123
00:04:52,630 --> 00:04:56,590
into military applications results

124
00:04:54,850 --> 00:05:01,150
instantly household support these kind

125
00:04:56,590 --> 00:05:03,760
of things and businesses /<font color="#E5E5E5"> a similar</font>

126
00:05:01,150 --> 00:05:06,099
kind of research DARPA organized the

127
00:05:03,760 --> 00:05:08,469
cyber grand challenge and then there the

128
00:05:06,100 --> 00:05:11,290
goal<font color="#CCCCCC"> was not to simply build a robot</font>

129
00:05:08,470 --> 00:05:13,450
that helps you at your household chores

130
00:05:11,290 --> 00:05:16,000
or build a self-driving car so you can

131
00:05:13,450 --> 00:05:17,800
read the newspapers actually while

132
00:05:16,000 --> 00:05:22,510
you're sitting<font color="#E5E5E5"> in the car commuting to</font>

133
00:05:17,800 --> 00:05:25,330
work but<font color="#E5E5E5"> the idea was to have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> project</font>

134
00:05:22,510 --> 00:05:27,420
that works on software to find

135
00:05:25,330 --> 00:05:30,460
vulnerabilities in them automatically

136
00:05:27,420 --> 00:05:31,780
patch them and generate and exploit all

137
00:05:30,460 --> 00:05:34,599
automatically without any human

138
00:05:31,780 --> 00:05:38,109
involvement whatsoever so<font color="#E5E5E5"> essentially</font>

139
00:05:34,600 --> 00:05:40,480
you start by just getting a binary take

140
00:05:38,110 --> 00:05:43,720
that binary analyze find flaws and

141
00:05:40,480 --> 00:05:46,210
essentially generate a program that

142
00:05:43,720 --> 00:05:50,500
exercises those flaws to get full code

143
00:05:46,210 --> 00:05:51,760
execution and the<font color="#CCCCCC"> timeline for us</font><font color="#E5E5E5"> at</font>

144
00:05:50,500 --> 00:05:53,710
least for the diaper cyber grand

145
00:05:51,760 --> 00:05:57,909
challenge was essentially where you see

146
00:05:53,710 --> 00:05:59,590
the<font color="#E5E5E5"> very first CGC flag this is when the</font>

147
00:05:57,910 --> 00:06:02,320
application for the fund attract by door

148
00:05:59,590 --> 00:06:05,349
opens so<font color="#E5E5E5"> essentially Europe have the</font>

149
00:06:02,320 --> 00:06:07,630
option to write a grant proposal and to

150
00:06:05,350 --> 00:06:09,790
<font color="#E5E5E5">apply for funded track with DARPA and</font>

151
00:06:07,630 --> 00:06:13,630
then you simply get money essentially

152
00:06:09,790 --> 00:06:15,460
every quarter every year to fund the

153
00:06:13,630 --> 00:06:17,409
research that goes into the<font color="#E5E5E5"> Cyberman</font>

154
00:06:15,460 --> 00:06:19,719
challenge your participation in to the

155
00:06:17,410 --> 00:06:22,780
site<font color="#E5E5E5"> grand challenge we actually decided</font>

156
00:06:19,720 --> 00:06:25,210
not<font color="#E5E5E5"> to do that because we're just too</font>

157
00:06:22,780 --> 00:06:28,059
busy with<font color="#CCCCCC"> other research so none of us</font>

158
00:06:25,210 --> 00:06:31,180
<font color="#E5E5E5">wanted to do the commitment of now we</font>

159
00:06:28,060 --> 00:06:32,620
have<font color="#CCCCCC"> to participate in</font><font color="#E5E5E5"> this and then</font>

160
00:06:31,180 --> 00:06:35,110
there was later on there was with<font color="#E5E5E5"> the</font>

161
00:06:32,620 --> 00:06:38,140
registration deadline shortest distance

162
00:06:35,110 --> 00:06:40,210
lay then we signed up very<font color="#CCCCCC"> briefly like</font>

163
00:06:38,140 --> 00:06:41,560
two days before when there was the open

164
00:06:40,210 --> 00:06:44,138
<font color="#E5E5E5">track so</font><font color="#CCCCCC"> we're you're not actually</font>

165
00:06:41,560 --> 00:06:45,939
<font color="#E5E5E5">getting any money but you're only some</font>

166
00:06:44,139 --> 00:06:48,699
they are allowed to participate if you

167
00:06:45,939 --> 00:06:50,830
want to so essentially<font color="#E5E5E5"> it's all you have</font>

168
00:06:48,699 --> 00:06:53,529
to fund it and then you have to<font color="#E5E5E5"> figure</font>

169
00:06:50,830 --> 00:06:55,300
this out and from there we<font color="#CCCCCC"> essentially</font>

170
00:06:53,529 --> 00:06:57,580
started to take this<font color="#E5E5E5"> very much in</font>

171
00:06:55,300 --> 00:06:59,800
shellfish spirit by procrastinating as

172
00:06:57,580 --> 00:07:02,109
long as<font color="#CCCCCC"> possible and then trying</font><font color="#E5E5E5"> to rush</font>

173
00:06:59,800 --> 00:07:03,729
this on the last minute which for the

174
00:07:02,110 --> 00:07:06,129
first scored events didn't really work

175
00:07:03,729 --> 00:07:08,020
out luckily the two scored events in the

176
00:07:06,129 --> 00:07:10,689
very beginning didn't actually matter

177
00:07:08,020 --> 00:07:12,490
for qualification but they were<font color="#E5E5E5"> just</font>

178
00:07:10,689 --> 00:07:13,840
there so<font color="#CCCCCC"> that when you're</font><font color="#E5E5E5"> in the fund</font>

179
00:07:12,490 --> 00:07:15,999
attract you can verify<font color="#CCCCCC"> that the</font>

180
00:07:13,840 --> 00:07:17,888
assistant works so your net<font color="#E5E5E5"> actually</font>

181
00:07:15,999 --> 00:07:21,039
being kicked out of it and have to

182
00:07:17,889 --> 00:07:23,199
possibly give money back and then around

183
00:07:21,039 --> 00:07:25,539
before<font color="#E5E5E5"> the xpac walls showed up three</font>

184
00:07:23,199 --> 00:07:27,250
weeks<font color="#E5E5E5"> before we actually started yeah oh</font>

185
00:07:25,539 --> 00:07:30,460
shit<font color="#CCCCCC"> we should probably</font><font color="#E5E5E5"> start doing</font>

186
00:07:27,250 --> 00:07:31,960
something<font color="#E5E5E5"> um because we don't want to be</font>

187
00:07:30,460 --> 00:07:34,210
embarrassed in front of everyone I mean

188
00:07:31,960 --> 00:07:35,979
this somewhat of a name associated with

189
00:07:34,210 --> 00:07:37,719
shellfish so we didn't want<font color="#E5E5E5"> to</font>

190
00:07:35,979 --> 00:07:41,139
essentially embarrass the brand behind

191
00:07:37,719 --> 00:07:44,409
it so we just spent like<font color="#E5E5E5"> three weeks off</font>

192
00:07:41,139 --> 00:07:46,839
pretty much insanity in 14 hours a day

193
00:07:44,409 --> 00:07:49,270
<font color="#E5E5E5">working for like</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> people every day</font>

194
00:07:46,839 --> 00:07:51,580
just<font color="#E5E5E5"> to essentially get something to run</font>

195
00:07:49,270 --> 00:07:53,258
that works and<font color="#E5E5E5"> that we can at least feel</font>

196
00:07:51,580 --> 00:07:56,438
for the qualification to possibly make

197
00:07:53,259 --> 00:07:58,300
it and much to<font color="#CCCCCC"> our surprise we actually</font>

198
00:07:56,439 --> 00:08:00,430
made<font color="#CCCCCC"> it in the top seven teams that</font>

199
00:07:58,300 --> 00:08:02,379
qualified for us it was really just<font color="#E5E5E5"> okay</font>

200
00:08:00,430 --> 00:08:06,729
let's be sure that we're<font color="#CCCCCC"> not looking</font>

201
00:08:02,379 --> 00:08:08,500
like idiots but worked out fine<font color="#E5E5E5"> and the</font>

202
00:08:06,729 --> 00:08:10,539
same spirit<font color="#CCCCCC"> after we did didn't do</font>

203
00:08:08,500 --> 00:08:12,189
anything for<font color="#E5E5E5"> like nine more month even</font>

204
00:08:10,539 --> 00:08:15,159
though we got<font color="#E5E5E5"> seven and fifty thousand</font>

205
00:08:12,189 --> 00:08:17,259
to US dollars from the<font color="#E5E5E5"> front door /</font>

206
00:08:15,159 --> 00:08:20,349
there's some sleep a us to do it would

207
00:08:17,259 --> 00:08:22,870
be a sec we get we just wait a little

208
00:08:20,349 --> 00:08:25,438
<font color="#E5E5E5">bit and then</font><font color="#CCCCCC"> like three months before</font>

209
00:08:22,870 --> 00:08:27,759
that recently yeah okay maybe<font color="#E5E5E5"> it's time</font>

210
00:08:25,439 --> 00:08:29,800
we're not allowed to<font color="#E5E5E5"> touch any of the</font>

211
00:08:27,759 --> 00:08:32,260
<font color="#E5E5E5">software that we all do we're developing</font>

212
00:08:29,800 --> 00:08:34,419
at the final event everything has to be

213
00:08:32,260 --> 00:08:36,039
<font color="#E5E5E5">completely autonomous and machines might</font>

214
00:08:34,419 --> 00:08:38,289
fail I mean if you're getting 64

215
00:08:36,039 --> 00:08:39,880
machines with two<font color="#CCCCCC"> discs each the</font>

216
00:08:38,289 --> 00:08:42,218
likelihood that one of the machines fail

217
00:08:39,880 --> 00:08:43,779
in the 10 hour interval starts to get

218
00:08:42,219 --> 00:08:47,079
fairly high and you start to freak out

219
00:08:43,779 --> 00:08:49,149
<font color="#E5E5E5">like what is this is my database what am</font>

220
00:08:47,079 --> 00:08:51,370
I going<font color="#E5E5E5"> to do then so you're really</font>

221
00:08:49,149 --> 00:08:54,970
<font color="#E5E5E5">starting to think about resiliency and</font>

222
00:08:51,370 --> 00:08:56,860
cecily failover which is surprisingly

223
00:08:54,970 --> 00:08:57,590
difficult particular is never done this

224
00:08:56,860 --> 00:08:58,700
so

225
00:08:57,590 --> 00:09:00,230
so you start<font color="#E5E5E5"> reading a lot of</font>

226
00:08:58,700 --> 00:09:02,900
documentation and start to figure<font color="#E5E5E5"> out</font>

227
00:09:00,230 --> 00:09:06,050
that girl yeah this doesn't really work

228
00:09:02,900 --> 00:09:07,520
as much<font color="#CCCCCC"> as I thought</font><font color="#E5E5E5"> it would and then</font>

229
00:09:06,050 --> 00:09:10,219
yeah so we had three<font color="#E5E5E5"> months of insanity</font>

230
00:09:07,520 --> 00:09:12,530
with a bit<font color="#CCCCCC"> more people sometimes its</font>

231
00:09:10,220 --> 00:09:13,850
employees switching from like sleeping

232
00:09:12,530 --> 00:09:15,589
during<font color="#E5E5E5"> the night to sleeping during the</font>

233
00:09:13,850 --> 00:09:19,100
day because there was just too much<font color="#E5E5E5"> work</font>

234
00:09:15,590 --> 00:09:21,890
to do and then as usual<font color="#E5E5E5"> we essentially</font>

235
00:09:19,100 --> 00:09:24,110
committed the last change to our serious

236
00:09:21,890 --> 00:09:27,230
<font color="#E5E5E5">I think about two hours before we lost</font>

237
00:09:24,110 --> 00:09:30,740
access to it so why not live dangerously

238
00:09:27,230 --> 00:09:33,680
here this is<font color="#E5E5E5"> the team that actually</font>

239
00:09:30,740 --> 00:09:35,300
participated so these<font color="#CCCCCC"> are the</font><font color="#E5E5E5"> only</font>

240
00:09:33,680 --> 00:09:37,300
people that are involved now there's

241
00:09:35,300 --> 00:09:40,099
actually<font color="#CCCCCC"> linked to be billed missing</font>

242
00:09:37,300 --> 00:09:41,479
that are involved<font color="#E5E5E5"> with the CGC from</font>

243
00:09:40,100 --> 00:09:44,180
<font color="#E5E5E5">shellfish so shellfish in general has</font>

244
00:09:41,480 --> 00:09:46,190
like 35 ish people but these were the

245
00:09:44,180 --> 00:09:48,020
<font color="#CCCCCC">people that</font><font color="#E5E5E5"> were involved with the CGC</font>

246
00:09:46,190 --> 00:09:52,880
part of it which<font color="#E5E5E5"> are actually</font>

247
00:09:48,020 --> 00:09:55,540
interestingly not primarily American but

248
00:09:52,880 --> 00:10:00,080
it's a fairly even split between

249
00:09:55,540 --> 00:10:04,490
<font color="#E5E5E5">American and Italian and 10 min one</font>

250
00:10:00,080 --> 00:10:06,140
Indian at one Chinese um some of you

251
00:10:04,490 --> 00:10:07,940
might have<font color="#CCCCCC"> seen some of them actually</font>

252
00:10:06,140 --> 00:10:10,610
rounded other conferences in Europe for

253
00:10:07,940 --> 00:10:14,390
<font color="#CCCCCC">instance that ccc a bunch of those</font>

254
00:10:10,610 --> 00:10:17,450
people are usually show up going<font color="#E5E5E5"> from</font>

255
00:10:14,390 --> 00:10:18,980
there simply looking at what if you have

256
00:10:17,450 --> 00:10:20,570
to do<font color="#CCCCCC"> for the door / site / Grand</font>

257
00:10:18,980 --> 00:10:22,540
Challenge is like what does<font color="#E5E5E5"> your system</font>

258
00:10:20,570 --> 00:10:25,310
have to do that you're developing and

259
00:10:22,540 --> 00:10:26,689
there's there's only three things<font color="#E5E5E5"> first</font>

260
00:10:25,310 --> 00:10:28,400
you have to analyze the binary that

261
00:10:26,690 --> 00:10:29,810
you're getting of course you have to

262
00:10:28,400 --> 00:10:32,180
<font color="#CCCCCC">pawn the binary that you're getting</font>

263
00:10:29,810 --> 00:10:33,880
<font color="#E5E5E5">otherwise you're not generating being</font>

264
00:10:32,180 --> 00:10:36,979
able to generate an exploit for it and

265
00:10:33,880 --> 00:10:39,860
of course DARPA has also like the

266
00:10:36,980 --> 00:10:42,500
defense part as their goal because they

267
00:10:39,860 --> 00:10:44,210
probably want to defend against software

268
00:10:42,500 --> 00:10:46,100
that<font color="#CCCCCC"> they might</font><font color="#E5E5E5"> be running on their</font>

269
00:10:44,210 --> 00:10:49,210
network but for which they're not able

270
00:10:46,100 --> 00:10:52,250
<font color="#E5E5E5">to get essentially the source code and</font>

271
00:10:49,210 --> 00:10:54,350
looking at the analyzing part so DARPA

272
00:10:52,250 --> 00:10:56,090
made this a little bit easier<font color="#CCCCCC"> if they</font>

273
00:10:54,350 --> 00:10:57,620
would<font color="#CCCCCC"> have run this on</font><font color="#E5E5E5"> Windows or for</font>

274
00:10:56,090 --> 00:10:59,240
instance on linux this would have been

275
00:10:57,620 --> 00:11:01,400
essentially nightmare from<font color="#CCCCCC"> the</font>

276
00:10:59,240 --> 00:11:05,420
engineering effort simply<font color="#E5E5E5"> because if you</font>

277
00:11:01,400 --> 00:11:07,220
just think about what<font color="#CCCCCC"> you would need</font><font color="#E5E5E5"> to</font>

278
00:11:05,420 --> 00:11:09,860
implement the POSIX API almost

279
00:11:07,220 --> 00:11:11,750
truthfully<font color="#CCCCCC"> and in an also system I</font><font color="#E5E5E5"> think</font>

280
00:11:09,860 --> 00:11:13,730
every<font color="#E5E5E5"> one of us on the team</font>

281
00:11:11,750 --> 00:11:16,670
like<font color="#CCCCCC"> yep no we're not going to do</font><font color="#E5E5E5"> this</font>

282
00:11:13,730 --> 00:11:18,650
right it's there's a practical impact of

283
00:11:16,670 --> 00:11:20,630
course there but from<font color="#CCCCCC"> a research point</font>

284
00:11:18,650 --> 00:11:23,689
of view it's simply not as interesting

285
00:11:20,630 --> 00:11:26,750
and to essentially remove that power

286
00:11:23,690 --> 00:11:27,890
form the equation<font color="#E5E5E5"> DARS came up with</font>

287
00:11:26,750 --> 00:11:30,080
<font color="#E5E5E5">their own operating system which</font>

288
00:11:27,890 --> 00:11:32,270
essentially is only seven syscalls we

289
00:11:30,080 --> 00:11:34,670
just<font color="#CCCCCC"> transmit receive there's the FD</font>

290
00:11:32,270 --> 00:11:37,400
wait for select even allocating dl<font color="#E5E5E5"> okay</font>

291
00:11:34,670 --> 00:11:39,380
to member to essentially manage memory

292
00:11:37,400 --> 00:11:41,540
on the heap then you've random which is

293
00:11:39,380 --> 00:11:44,710
<font color="#E5E5E5">also your only source of randomness and</font>

294
00:11:41,540 --> 00:11:49,370
then you've terminate to exit gracefully

295
00:11:44,710 --> 00:11:51,920
on since the<font color="#E5E5E5"> pawning part you</font><font color="#CCCCCC"> have</font>

296
00:11:49,370 --> 00:11:53,600
noticed that there's no actually open or

297
00:11:51,920 --> 00:11:55,819
read your right for the file system

298
00:11:53,600 --> 00:11:57,500
because there's no access to the file

299
00:11:55,820 --> 00:12:01,190
system for the challenges that<font color="#E5E5E5"> they're</font>

300
00:11:57,500 --> 00:12:04,610
running and for the normal CDF you just

301
00:12:01,190 --> 00:12:06,050
read challenge for directory / flag that

302
00:12:04,610 --> 00:12:08,270
of course doesn't<font color="#E5E5E5"> work here so they</font>

303
00:12:06,050 --> 00:12:10,939
decided to<font color="#CCCCCC"> have different definitions of</font>

304
00:12:08,270 --> 00:12:12,920
what<font color="#CCCCCC"> actually exploiting means and for</font>

305
00:12:10,940 --> 00:12:14,600
the qualification that means so the

306
00:12:12,920 --> 00:12:16,579
qualification round which was about a

307
00:12:14,600 --> 00:12:19,850
<font color="#CCCCCC">year before the</font><font color="#E5E5E5"> final event that meant</font>

308
00:12:16,580 --> 00:12:21,980
<font color="#CCCCCC">that if you crash the program us also</font>

309
00:12:19,850 --> 00:12:23,450
<font color="#E5E5E5">show that you have control over it which</font>

310
00:12:21,980 --> 00:12:25,430
of course in practice is not<font color="#E5E5E5"> true right</font>

311
00:12:23,450 --> 00:12:26,780
I mean we<font color="#CCCCCC"> all know that just being able</font>

312
00:12:25,430 --> 00:12:28,819
<font color="#E5E5E5">to crash it doesn't mean that</font><font color="#CCCCCC"> you can</font>

313
00:12:26,780 --> 00:12:32,990
<font color="#E5E5E5">essentially get full control program</font>

314
00:12:28,820 --> 00:12:34,940
counter at control right and then

315
00:12:32,990 --> 00:12:36,200
essentially if you go on to the finals

316
00:12:34,940 --> 00:12:38,810
event they started to some so you have

317
00:12:36,200 --> 00:12:41,630
two different<font color="#E5E5E5"> types of exploits on this</font>

318
00:12:38,810 --> 00:12:44,089
time one which is<font color="#E5E5E5"> essentially you're</font>

319
00:12:41,630 --> 00:12:45,860
<font color="#E5E5E5">overriding the flag so the idea is that</font>

320
00:12:44,089 --> 00:12:48,200
you<font color="#E5E5E5"> just said register to a specific</font>

321
00:12:45,860 --> 00:12:50,510
value<font color="#E5E5E5"> and then you crash at another</font>

322
00:12:48,200 --> 00:12:51,920
address and then<font color="#E5E5E5"> you show</font><font color="#CCCCCC"> that with</font><font color="#E5E5E5"> this</font>

323
00:12:50,510 --> 00:12:54,640
you essentially<font color="#E5E5E5"> have control over the</font>

324
00:12:51,920 --> 00:12:56,680
program and as a second type of

325
00:12:54,640 --> 00:12:59,569
vulnerability that they wanted<font color="#E5E5E5"> to show</font>

326
00:12:56,680 --> 00:13:01,550
as<font color="#CCCCCC"> the distance they you leaked from a</font>

327
00:12:59,570 --> 00:13:03,350
specific<font color="#E5E5E5"> flag page in memory</font><font color="#CCCCCC"> so you have</font>

328
00:13:01,550 --> 00:13:05,990
a flag in memory that<font color="#CCCCCC"> is filled with</font>

329
00:13:03,350 --> 00:13:08,210
random data as soon as the program

330
00:13:05,990 --> 00:13:10,460
starts and then if you can be able to

331
00:13:08,210 --> 00:13:12,440
leak four consecutive<font color="#E5E5E5"> bytes of that you</font>

332
00:13:10,460 --> 00:13:14,480
since we show that you have proof of

333
00:13:12,440 --> 00:13:18,470
vulnerability for that specific<font color="#CCCCCC"> temple</font>

334
00:13:14,480 --> 00:13:20,930
<font color="#CCCCCC">for exploit and of course in addition</font><font color="#E5E5E5"> to</font>

335
00:13:18,470 --> 00:13:22,040
that you essentially<font color="#E5E5E5"> have patching of</font>

336
00:13:20,930 --> 00:13:23,420
course you could just step out

337
00:13:22,040 --> 00:13:25,640
everything right<font color="#CCCCCC"> you just remove</font>

338
00:13:23,420 --> 00:13:28,219
everything and<font color="#E5E5E5"> then stuff doesn't</font>

339
00:13:25,640 --> 00:13:30,740
<font color="#E5E5E5">necessarily work anymore so they have</font>

340
00:13:28,220 --> 00:13:32,840
functionality checks that fail similar

341
00:13:30,740 --> 00:13:35,000
to<font color="#E5E5E5"> that of course you could start adding</font>

342
00:13:32,840 --> 00:13:37,310
a signal handler that every time it

343
00:13:35,000 --> 00:13:38,960
crashes you just<font color="#E5E5E5"> have fine i'll</font><font color="#CCCCCC"> just</font>

344
00:13:37,310 --> 00:13:40,880
call exit then it does crash anymore

345
00:13:38,960 --> 00:13:43,610
which actually some teams did for the

346
00:13:40,880 --> 00:13:45,830
qualification event on so just register

347
00:13:43,610 --> 00:13:48,440
<font color="#E5E5E5">just essentially so they fly made it</font>

348
00:13:45,830 --> 00:13:49,910
slightly different by simply not

349
00:13:48,440 --> 00:13:52,460
registering signal handler because it

350
00:13:49,910 --> 00:13:54,230
doesn't work because they are actually

351
00:13:52,460 --> 00:13:56,540
no single<font color="#E5E5E5"> hand links on the decree</font>

352
00:13:54,230 --> 00:13:58,130
operating system but what they did

353
00:13:56,540 --> 00:14:00,560
essentially they added a detour before

354
00:13:58,130 --> 00:14:04,520
that essentially make sure is the memory

355
00:14:00,560 --> 00:14:06,979
allocated<font color="#CCCCCC"> bowl readable or not and this</font>

356
00:14:04,520 --> 00:14:09,020
a few tricks<font color="#E5E5E5"> that you can use by</font><font color="#CCCCCC"> the two</font>

357
00:14:06,980 --> 00:14:11,270
system calls that<font color="#E5E5E5"> exist so if the memory</font>

358
00:14:09,020 --> 00:14:13,370
is allocated you just essentially jump

359
00:14:11,270 --> 00:14:15,740
back<font color="#E5E5E5"> and if it's not allocated you sense</font>

360
00:14:13,370 --> 00:14:16,970
the exit<font color="#CCCCCC"> an instruction before so the</font>

361
00:14:15,740 --> 00:14:20,990
program counter is not actually<font color="#E5E5E5"> in the</font>

362
00:14:16,970 --> 00:14:23,600
control and of<font color="#E5E5E5"> course on top of that you</font>

363
00:14:20,990 --> 00:14:25,580
<font color="#E5E5E5">so you can do more fully fledged</font>

364
00:14:23,600 --> 00:14:27,920
solutions there's<font color="#E5E5E5"> an so you just do full</font>

365
00:14:25,580 --> 00:14:29,780
control flow integrity checks but<font color="#E5E5E5"> of</font>

366
00:14:27,920 --> 00:14:32,120
<font color="#CCCCCC">course they having performance</font><font color="#E5E5E5"> penalty</font>

367
00:14:29,780 --> 00:14:32,930
<font color="#CCCCCC">saying you cannot</font><font color="#E5E5E5"> just run something</font>

368
00:14:32,120 --> 00:14:36,020
that gives you a hundred percent

369
00:14:32,930 --> 00:14:37,459
overhead in practice you cannot and for

370
00:14:36,020 --> 00:14:41,240
the<font color="#E5E5E5"> tougher cyber grand challenge they</font>

371
00:14:37,460 --> 00:14:44,270
also decided not to have<font color="#E5E5E5"> and so for this</font>

372
00:14:41,240 --> 00:14:47,540
recently implemented the mechanical fish

373
00:14:44,270 --> 00:14:50,000
as a play on the<font color="#CCCCCC"> mechanical</font><font color="#E5E5E5"> turk and</font>

374
00:14:47,540 --> 00:14:54,230
fish which is the name of the chinese

375
00:14:50,000 --> 00:14:57,260
guy on our team and the the full system

376
00:14:54,230 --> 00:14:59,000
essentially needs to patch find crashes

377
00:14:57,260 --> 00:15:01,610
and exploit those crashes of every

378
00:14:59,000 --> 00:15:03,440
binary and just to<font color="#CCCCCC"> give you a</font><font color="#E5E5E5"> little bit</font>

379
00:15:01,610 --> 00:15:06,080
of more background with<font color="#CCCCCC"> debra cyber</font>

380
00:15:03,440 --> 00:15:08,120
grand challenge it was organized as a

381
00:15:06,080 --> 00:15:10,100
standard CTF<font color="#E5E5E5"> where since</font><font color="#CCCCCC"> Lou you have a</font>

382
00:15:08,120 --> 00:15:12,530
referee in<font color="#E5E5E5"> the middle and</font><font color="#CCCCCC"> you have four</font>

383
00:15:10,100 --> 00:15:14,060
different<font color="#E5E5E5"> teams around it and the DARPA</font>

384
00:15:12,530 --> 00:15:16,250
cybergun challenge just takes all the

385
00:15:14,060 --> 00:15:17,479
humans out<font color="#E5E5E5"> of that loop and replaces</font>

386
00:15:16,250 --> 00:15:20,120
them with machines is it a fully

387
00:15:17,480 --> 00:15:23,180
autonomous and<font color="#E5E5E5"> they</font><font color="#CCCCCC"> actually had the</font>

388
00:15:20,120 --> 00:15:28,400
certified air gap which was certified by

389
00:15:23,180 --> 00:15:30,380
it I think West Point Academy military

390
00:15:28,400 --> 00:15:34,100
personnel and then they<font color="#CCCCCC"> soon stay</font><font color="#E5E5E5"> on top</font>

391
00:15:30,380 --> 00:15:36,950
of<font color="#E5E5E5"> that to export data out of that air</font>

392
00:15:34,100 --> 00:15:39,030
gap that had two robots which one is

393
00:15:36,950 --> 00:15:41,570
back up<font color="#E5E5E5"> and one</font><font color="#CCCCCC"> assistants late jacks</font>

394
00:15:39,030 --> 00:15:43,920
<font color="#CCCCCC">berna bluray which is then transformed</font>

395
00:15:41,570 --> 00:15:46,950
transported with the robot<font color="#E5E5E5"> over the gap</font>

396
00:15:43,920 --> 00:15:49,229
and then being read in again wait this

397
00:15:46,950 --> 00:15:50,700
is this an interesting<font color="#E5E5E5"> video of that on</font>

398
00:15:49,230 --> 00:15:53,400
youtube if you want to check<font color="#CCCCCC"> it out and</font>

399
00:15:50,700 --> 00:15:56,010
in case both of the robots failed they

400
00:15:53,400 --> 00:15:58,079
actually<font color="#CCCCCC"> had a West Point cadet who</font>

401
00:15:56,010 --> 00:16:02,400
would have just had to<font color="#E5E5E5"> walk between and</font>

402
00:15:58,080 --> 00:16:04,830
<font color="#CCCCCC">transported blu-ray and looking at the</font>

403
00:16:02,400 --> 00:16:08,130
final<font color="#CCCCCC"> event the</font><font color="#E5E5E5"> cgc final event it was</font>

404
00:16:04,830 --> 00:16:10,410
divided into 96 rounds um each round was

405
00:16:08,130 --> 00:16:12,689
usually so round so essentially in which

406
00:16:10,410 --> 00:16:14,040
scoring happens and each round had<font color="#E5E5E5"> a</font>

407
00:16:12,690 --> 00:16:16,710
short break in between them<font color="#E5E5E5"> would was</font>

408
00:16:14,040 --> 00:16:21,719
used to essentially do all the scoring

409
00:16:16,710 --> 00:16:25,110
calculations and since there's no way

410
00:16:21,720 --> 00:16:27,960
<font color="#CCCCCC">that a human is involved</font><font color="#E5E5E5"> jason c had an</font>

411
00:16:25,110 --> 00:16:30,060
<font color="#E5E5E5">api access for your</font><font color="#CCCCCC"> CRS so you had to</font>

412
00:16:27,960 --> 00:16:32,400
<font color="#E5E5E5">write a component that automatically</font>

413
00:16:30,060 --> 00:16:33,750
talks to their<font color="#E5E5E5"> API expects the challenge</font>

414
00:16:32,400 --> 00:16:35,790
minories the challenge binaries and

415
00:16:33,750 --> 00:16:39,210
channel stats are the<font color="#E5E5E5"> services that</font>

416
00:16:35,790 --> 00:16:44,040
you're running<font color="#E5E5E5"> and then you send slay</font>

417
00:16:39,210 --> 00:16:47,070
have to analyze those and after every

418
00:16:44,040 --> 00:16:52,560
round they decided<font color="#CCCCCC"> to score for each</font>

419
00:16:47,070 --> 00:16:54,500
round for each team and servers and the

420
00:16:52,560 --> 00:16:56,699
score<font color="#CCCCCC"> was calculated by since Lee</font>

421
00:16:54,500 --> 00:16:59,400
<font color="#E5E5E5">availability time security times</font>

422
00:16:56,700 --> 00:17:03,180
evaluation where availability was since

423
00:16:59,400 --> 00:17:05,430
like performance so is your essentially

424
00:17:03,180 --> 00:17:07,800
your binary still working well just pass

425
00:17:05,430 --> 00:17:10,500
all the functionality tests if so what

426
00:17:07,800 --> 00:17:12,899
does<font color="#E5E5E5"> the performance overhead of it then</font>

427
00:17:10,500 --> 00:17:15,270
there's a question<font color="#E5E5E5"> did other teams</font><font color="#CCCCCC"> have</font>

428
00:17:12,900 --> 00:17:17,610
exploits if so was your binary

429
00:17:15,270 --> 00:17:19,470
successful and patching against them so

430
00:17:17,609 --> 00:17:22,109
since if you deployed a patch was it

431
00:17:19,470 --> 00:17:24,270
able to<font color="#E5E5E5"> actually withstand the exploits</font>

432
00:17:22,109 --> 00:17:26,689
of other teams all were you only able to

433
00:17:24,270 --> 00:17:29,129
<font color="#E5E5E5">essentially withstand</font><font color="#CCCCCC"> 5 exploits but</font>

434
00:17:26,690 --> 00:17:30,540
there<font color="#E5E5E5"> was another</font><font color="#CCCCCC"> one one team analyzed</font>

435
00:17:29,130 --> 00:17:32,070
your new binary and found another

436
00:17:30,540 --> 00:17:35,129
vulnerability that you might have not

437
00:17:32,070 --> 00:17:37,260
found yet and then on the third part you

438
00:17:35,130 --> 00:17:39,690
<font color="#E5E5E5">have the offensive score which is</font>

439
00:17:37,260 --> 00:17:42,180
essentially how many teams were you<font color="#E5E5E5"> able</font>

440
00:17:39,690 --> 00:17:45,420
<font color="#E5E5E5">to exploit with any exploits you might</font>

441
00:17:42,180 --> 00:17:47,610
have filled it against them and of

442
00:17:45,420 --> 00:17:50,160
course<font color="#E5E5E5"> designing such a system gets</font>

443
00:17:47,610 --> 00:17:52,229
really really complex so at some point<font color="#E5E5E5"> I</font>

444
00:17:50,160 --> 00:17:52,890
<font color="#E5E5E5">think none</font><font color="#CCCCCC"> of us</font><font color="#E5E5E5"> actually knew how the</font>

445
00:17:52,230 --> 00:17:55,200
database was

446
00:17:52,890 --> 00:17:57,630
anymore so we started to write

447
00:17:55,200 --> 00:18:00,210
everything down by hand to retrace our

448
00:17:57,630 --> 00:18:03,420
own steps because it was three weeks<font color="#E5E5E5"> of</font>

449
00:18:00,210 --> 00:18:06,800
insanity and their sins you<font color="#CCCCCC"> have like a</font>

450
00:18:03,420 --> 00:18:08,700
bunch<font color="#E5E5E5"> of challenges and which kind of</font>

451
00:18:06,800 --> 00:18:12,000
patches we were actually able<font color="#CCCCCC"> to</font>

452
00:18:08,700 --> 00:18:14,040
generate from them and of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> DARPA</font>

453
00:18:12,000 --> 00:18:16,380
wanted to encourage essentially really

454
00:18:14,040 --> 00:18:18,030
<font color="#E5E5E5">well engineering efforts to essentially</font>

455
00:18:16,380 --> 00:18:20,160
yes you should probably code freeze eat

456
00:18:18,030 --> 00:18:23,370
at your<font color="#E5E5E5"> code and you should probably</font>

457
00:18:20,160 --> 00:18:25,200
<font color="#E5E5E5">test is quite a bit and of</font><font color="#CCCCCC"> course that</font>

458
00:18:23,370 --> 00:18:27,629
didn't really work for<font color="#CCCCCC"> us because we</font>

459
00:18:25,200 --> 00:18:30,270
research is hard with not really taking

460
00:18:27,630 --> 00:18:33,090
this too seriously we really try<font color="#E5E5E5"> to but</font>

461
00:18:30,270 --> 00:18:36,270
it just didn't work so I<font color="#CCCCCC"> think after</font><font color="#E5E5E5"> our</font>

462
00:18:33,090 --> 00:18:38,730
code freeze we had like another 120

463
00:18:36,270 --> 00:18:43,710
commits roughly per component because

464
00:18:38,730 --> 00:18:45,540
saying why<font color="#CCCCCC"> not live dangerously so and</font>

465
00:18:43,710 --> 00:18:47,550
these kind of things happened which are

466
00:18:45,540 --> 00:18:51,750
very meaningful commits like yeah let's

467
00:18:47,550 --> 00:18:55,560
fix this and<font color="#CCCCCC"> francesco asked for some</font>

468
00:18:51,750 --> 00:18:57,210
forgiveness although<font color="#E5E5E5"> they passed the</font>

469
00:18:55,560 --> 00:19:01,020
test obviously<font color="#CCCCCC"> i mean if you look here</font>

470
00:18:57,210 --> 00:19:02,940
it actually passed the test and then if

471
00:19:01,020 --> 00:19:05,820
you look at step closer this is actually

472
00:19:02,940 --> 00:19:08,610
in vegas in the suite<font color="#CCCCCC"> that we had and</font>

473
00:19:05,820 --> 00:19:11,790
you still have like five people hacking

474
00:19:08,610 --> 00:19:14,550
on code like 15<font color="#CCCCCC"> hours before we lose all</font>

475
00:19:11,790 --> 00:19:16,020
access to the infrastructure and then

476
00:19:14,550 --> 00:19:20,850
there's some sleep just it has to work

477
00:19:16,020 --> 00:19:23,700
<font color="#CCCCCC">if the machines boot up and looking at</font>

478
00:19:20,850 --> 00:19:26,850
essentially the mechanical fish it has a

479
00:19:23,700 --> 00:19:28,410
bunch of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> components all of</font>

480
00:19:26,850 --> 00:19:31,050
them<font color="#CCCCCC"> but Farnsworth are actually</font>

481
00:19:28,410 --> 00:19:32,610
stateless insofar as that if you take

482
00:19:31,050 --> 00:19:34,980
down the machine that it's running on

483
00:19:32,610 --> 00:19:36,929
its migrated gracefully to new machine

484
00:19:34,980 --> 00:19:39,420
and takes over all the responsibilities

485
00:19:36,930 --> 00:19:42,300
<font color="#E5E5E5">I will go into a little bit of detail</font>

486
00:19:39,420 --> 00:19:44,400
into Meister and<font color="#E5E5E5"> defines within some of</font>

487
00:19:42,300 --> 00:19:46,740
the worker components just to give you

488
00:19:44,400 --> 00:19:49,440
an idea ambassadors<font color="#CCCCCC"> is essentially the</font>

489
00:19:46,740 --> 00:19:51,960
only component that is able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk to</font>

490
00:19:49,440 --> 00:19:53,160
the DA r / AP<font color="#CCCCCC"> i-- so it's the</font><font color="#E5E5E5"> ti API</font>

491
00:19:51,960 --> 00:19:55,590
which is where you're getting

492
00:19:53,160 --> 00:19:57,060
information about scores information

493
00:19:55,590 --> 00:20:00,149
about rounds information about other

494
00:19:57,060 --> 00:20:02,909
teams and then it passes that on to our

495
00:20:00,150 --> 00:20:04,260
database which is finds<font color="#E5E5E5"> worth scree bar</font>

496
00:20:02,910 --> 00:20:06,480
is the<font color="#E5E5E5"> component that makes our</font>

497
00:20:04,260 --> 00:20:09,780
decisions unlike the game theoretical

498
00:20:06,480 --> 00:20:12,690
part of the of the CGC essentially what

499
00:20:09,780 --> 00:20:14,790
patches to submit and what exploits to

500
00:20:12,690 --> 00:20:16,919
launch against which team depending on

501
00:20:14,790 --> 00:20:19,399
what they might have filled it so what

502
00:20:16,919 --> 00:20:22,470
services they might be running and

503
00:20:19,400 --> 00:20:24,720
specifically finds worth is essentially

504
00:20:22,470 --> 00:20:26,900
not only the database but it's more<font color="#E5E5E5"> in</font>

505
00:20:24,720 --> 00:20:29,250
<font color="#E5E5E5">the object relational model around it</font>

506
00:20:26,900 --> 00:20:31,350
which answers the questions like what

507
00:20:29,250 --> 00:20:34,440
challenge stats have been fielded so

508
00:20:31,350 --> 00:20:36,659
what services are in play<font color="#E5E5E5"> if services</font>

509
00:20:34,440 --> 00:20:39,450
aren't play at one point they're going

510
00:20:36,660 --> 00:20:40,710
<font color="#E5E5E5">to be they might be</font><font color="#CCCCCC"> d fielded at a later</font>

511
00:20:39,450 --> 00:20:42,780
point and then they're never coming back

512
00:20:40,710 --> 00:20:44,970
so at that point<font color="#E5E5E5"> you can stop analyzing</font>

513
00:20:42,780 --> 00:20:46,678
everything for that specific service

514
00:20:44,970 --> 00:20:48,570
that you can use the computational

515
00:20:46,679 --> 00:20:51,780
resource resources that you're given

516
00:20:48,570 --> 00:20:53,460
with the 64 notes cluster that<font color="#E5E5E5"> they were</font>

517
00:20:51,780 --> 00:20:57,990
giving you to simply work another

518
00:20:53,460 --> 00:20:59,820
challenges and of course<font color="#CCCCCC"> this is like</font>

519
00:20:57,990 --> 00:21:02,580
you<font color="#E5E5E5"> have to start coordinating this</font>

520
00:20:59,820 --> 00:21:04,889
these 64 machines that you have so that

521
00:21:02,580 --> 00:21:09,480
you're using them actually<font color="#E5E5E5"> to a really</font>

522
00:21:04,890 --> 00:21:11,580
<font color="#E5E5E5">large degree and this also takes a good</font>

523
00:21:09,480 --> 00:21:13,799
amount<font color="#E5E5E5"> of effort</font><font color="#CCCCCC"> for that we essentially</font>

524
00:21:11,580 --> 00:21:16,139
started to implement a component on top

525
00:21:13,799 --> 00:21:17,820
of<font color="#E5E5E5"> crew Venators which essentially</font>

526
00:21:16,140 --> 00:21:21,059
allows you to run containers which some

527
00:21:17,820 --> 00:21:24,240
of you might wear off which<font color="#E5E5E5"> is also just</font>

528
00:21:21,059 --> 00:21:26,760
looks at the game state and then it asks

529
00:21:24,240 --> 00:21:29,040
each creator for each different kind of

530
00:21:26,760 --> 00:21:31,379
worker so for<font color="#E5E5E5"> instance you have the poll</font>

531
00:21:29,040 --> 00:21:33,178
creator<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a tester if</font><font color="#CCCCCC"> petrol</font>

532
00:21:31,380 --> 00:21:35,250
racks which is there to generate patches

533
00:21:33,179 --> 00:21:36,929
you've racks the POV fuzzer and

534
00:21:35,250 --> 00:21:38,970
<font color="#E5E5E5">colorguard which are all offensive</font>

535
00:21:36,929 --> 00:21:42,480
components and each of them<font color="#CCCCCC"> has their</font>

536
00:21:38,970 --> 00:21:45,510
own creator which decides should this

537
00:21:42,480 --> 00:21:49,230
specific job of this specific task run

538
00:21:45,510 --> 00:21:51,120
at this specific point in time and this

539
00:21:49,230 --> 00:21:53,880
is exactly<font color="#E5E5E5"> what the</font><font color="#CCCCCC"> Meister's doing</font>

540
00:21:51,120 --> 00:21:55,830
every creator assigns a priority for

541
00:21:53,880 --> 00:21:58,740
instance if you had to have a lot of

542
00:21:55,830 --> 00:22:00,570
crashes for specific service you might

543
00:21:58,740 --> 00:22:02,580
want to<font color="#E5E5E5"> essentially work on this on</font>

544
00:22:00,570 --> 00:22:04,740
exploiting those crashes rather than

545
00:22:02,580 --> 00:22:06,689
finding new crashes<font color="#E5E5E5"> because you first</font>

546
00:22:04,740 --> 00:22:08,910
should triage them to figure<font color="#E5E5E5"> out if any</font>

547
00:22:06,690 --> 00:22:10,350
of them are exploitable or not and this

548
00:22:08,910 --> 00:22:13,140
is<font color="#CCCCCC"> exactly what my sister does it</font>

549
00:22:10,350 --> 00:22:15,178
decides should we find<font color="#CCCCCC"> a new crash for</font>

550
00:22:13,140 --> 00:22:17,130
this service should we create a patch

551
00:22:15,179 --> 00:22:19,230
for it or should<font color="#E5E5E5"> we try to find an</font>

552
00:22:17,130 --> 00:22:22,679
exploit<font color="#CCCCCC"> for it</font>

553
00:22:19,230 --> 00:22:24,480
and of course as usual this is the

554
00:22:22,679 --> 00:22:27,059
component that got the last minute

555
00:22:24,480 --> 00:22:29,190
changes around two hours before<font color="#E5E5E5"> we lost</font>

556
00:22:27,059 --> 00:22:31,410
access we started committing and adding

557
00:22:29,190 --> 00:22:33,870
new features and if that would have gone

558
00:22:31,410 --> 00:22:36,030
wrong I think<font color="#E5E5E5"> yeah the mechanical fish</font>

559
00:22:33,870 --> 00:22:41,189
would have just not lived on it would

560
00:22:36,030 --> 00:22:44,730
have just crashed and burned another

561
00:22:41,190 --> 00:22:46,919
thing I need to<font color="#E5E5E5"> mention is anger anger</font>

562
00:22:44,730 --> 00:22:49,440
is essentially the core<font color="#CCCCCC"> of all the</font>

563
00:22:46,919 --> 00:22:51,150
worker components that we have I'm not

564
00:22:49,440 --> 00:22:53,130
sure a bunch<font color="#E5E5E5"> of you might already be</font>

565
00:22:51,150 --> 00:22:54,720
familiar with anger is anger is

566
00:22:53,130 --> 00:22:57,990
essentially binary analysis framework

567
00:22:54,720 --> 00:23:02,640
which you can use for a variety<font color="#CCCCCC"> of</font>

568
00:22:57,990 --> 00:23:05,130
different tasks that you might want to

569
00:23:02,640 --> 00:23:07,710
perform on this<font color="#E5E5E5"> business of binary turn</font>

570
00:23:05,130 --> 00:23:08,910
I'll analyze it it's based on right<font color="#E5E5E5"> now</font>

571
00:23:07,710 --> 00:23:11,760
the intermediate representation

572
00:23:08,910 --> 00:23:14,340
assistance as used<font color="#E5E5E5"> is</font><font color="#CCCCCC"> vax so</font><font color="#E5E5E5"> I suppose</font>

573
00:23:11,760 --> 00:23:16,340
everything that supported<font color="#E5E5E5"> by live</font><font color="#CCCCCC"> X can</font>

574
00:23:14,340 --> 00:23:19,770
be<font color="#E5E5E5"> lifted into anger and analyze there</font>

575
00:23:16,340 --> 00:23:23,490
it's open source it's developed by a

576
00:23:19,770 --> 00:23:27,600
bunch of students most notably<font color="#CCCCCC"> yawn and</font>

577
00:23:23,490 --> 00:23:28,890
fish from UC Santa Barbara and they made

578
00:23:27,600 --> 00:23:31,290
it available under an open source

579
00:23:28,890 --> 00:23:34,770
license<font color="#CCCCCC"> BSD to be precise so you can</font>

580
00:23:31,290 --> 00:23:37,649
actually<font color="#E5E5E5"> use</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> for commercial use if</font>

581
00:23:34,770 --> 00:23:39,210
you desire so without running into the

582
00:23:37,650 --> 00:23:42,510
standard licensing issues that you

583
00:23:39,210 --> 00:23:44,549
otherwise might have<font color="#E5E5E5"> with GPL um the</font>

584
00:23:42,510 --> 00:23:46,620
core idea behind anger<font color="#E5E5E5"> is essentially</font>

585
00:23:44,549 --> 00:23:49,350
did you just take it and then you start

586
00:23:46,620 --> 00:23:51,629
replacing parts different components of

587
00:23:49,350 --> 00:23:53,280
it and then you simply get different

588
00:23:51,630 --> 00:23:55,020
<font color="#CCCCCC">kinds of analysis techniques so for</font>

589
00:23:53,280 --> 00:23:57,149
instance you might just<font color="#E5E5E5"> start out with</font>

590
00:23:55,020 --> 00:23:58,770
con colic execution is the one analysis

591
00:23:57,150 --> 00:24:00,660
technique that you have or you might

592
00:23:58,770 --> 00:24:02,059
<font color="#CCCCCC">want to go into combining different</font>

593
00:24:00,660 --> 00:24:04,470
parts of anger to do automatic

594
00:24:02,059 --> 00:24:07,110
<font color="#E5E5E5">exploitation or you might even want to</font>

595
00:24:04,470 --> 00:24:09,210
use it<font color="#CCCCCC"> for patching and this is</font>

596
00:24:07,110 --> 00:24:10,620
precisely what it<font color="#E5E5E5"> sounds like we used</font>

597
00:24:09,210 --> 00:24:12,929
anger for so we wrote different

598
00:24:10,620 --> 00:24:16,530
components that are all based on anger

599
00:24:12,929 --> 00:24:18,270
they use anger slightly differently to

600
00:24:16,530 --> 00:24:20,490
simply perform the goal<font color="#CCCCCC"> that we want</font><font color="#E5E5E5"> to</font>

601
00:24:18,270 --> 00:24:22,830
do automatic<font color="#E5E5E5"> exploitation patching</font>

602
00:24:20,490 --> 00:24:27,600
finding leaks all these kind of things

603
00:24:22,830 --> 00:24:29,158
and to<font color="#E5E5E5"> actually go to actually find</font>

604
00:24:27,600 --> 00:24:32,760
crashes that<font color="#E5E5E5"> you then might be able</font><font color="#CCCCCC"> to</font>

605
00:24:29,159 --> 00:24:34,110
<font color="#CCCCCC">use for it to generate an exploit</font>

606
00:24:32,760 --> 00:24:37,680
we<font color="#E5E5E5"> started to essentially depend on</font>

607
00:24:34,110 --> 00:24:39,570
fuzzing which if you're not aware what

608
00:24:37,680 --> 00:24:41,640
fuzzing is it's essentially just sending

609
00:24:39,570 --> 00:24:43,679
a bunch of in different kind<font color="#E5E5E5"> of input to</font>

610
00:24:41,640 --> 00:24:46,020
program and see whether it crashes and

611
00:24:43,680 --> 00:24:48,030
burns or not and there of course the

612
00:24:46,020 --> 00:24:49,410
different research questions that you

613
00:24:48,030 --> 00:24:51,360
need<font color="#E5E5E5"> to answer and the respect of</font>

614
00:24:49,410 --> 00:24:53,310
fuzzing what inputs get you should you

615
00:24:51,360 --> 00:24:54,750
use how do you<font color="#E5E5E5"> generate inputs that are</font>

616
00:24:53,310 --> 00:24:56,820
actually valid so for instance if you

617
00:24:54,750 --> 00:24:58,200
would like to<font color="#E5E5E5"> file</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> web browser there</font>

618
00:24:56,820 --> 00:25:01,830
are a lot of inputs that you could

619
00:24:58,200 --> 00:25:04,410
generate but probably 99.999% of them

620
00:25:01,830 --> 00:25:06,600
are not<font color="#E5E5E5"> even interesting because they</font>

621
00:25:04,410 --> 00:25:11,070
just plain text without any parts thing

622
00:25:06,600 --> 00:25:12,540
involved and we started to find the

623
00:25:11,070 --> 00:25:14,399
variety of different crashes a from

624
00:25:12,540 --> 00:25:17,190
network traffic that DARPA provided to

625
00:25:14,400 --> 00:25:19,050
us then we started to find crashes with

626
00:25:17,190 --> 00:25:21,330
a symbolic execution which is<font color="#E5E5E5"> really</font>

627
00:25:19,050 --> 00:25:22,950
heavy weight so<font color="#E5E5E5"> you have having a lot of</font>

628
00:25:21,330 --> 00:25:24,929
<font color="#E5E5E5">trouble</font><font color="#CCCCCC"> to essentially do this at scale</font>

629
00:25:22,950 --> 00:25:27,180
and then you essentially there's also

630
00:25:24,930 --> 00:25:28,950
fuzzing which is very easy<font color="#E5E5E5"> to do it</font>

631
00:25:27,180 --> 00:25:32,760
scale but where<font color="#E5E5E5"> you might run into</font>

632
00:25:28,950 --> 00:25:34,890
<font color="#E5E5E5">problems otherwise and we defend them</font>

633
00:25:32,760 --> 00:25:37,290
depend for fuzzing on<font color="#E5E5E5"> American fuzzy lab</font>

634
00:25:34,890 --> 00:25:39,570
which I'm sure<font color="#E5E5E5"> also a lot of you are</font>

635
00:25:37,290 --> 00:25:43,500
familiar with so I'm just going<font color="#E5E5E5"> to skip</font>

636
00:25:39,570 --> 00:25:45,750
over the this fuzzing part but here for

637
00:25:43,500 --> 00:25:48,300
instance you<font color="#CCCCCC"> have a problem where AFL in</font>

638
00:25:45,750 --> 00:25:49,950
general is not necessarily really

639
00:25:48,300 --> 00:25:51,980
efficient so as soon as you start to get

640
00:25:49,950 --> 00:25:54,600
magic values involved<font color="#E5E5E5"> for instance a</font>

641
00:25:51,980 --> 00:25:56,820
check that's in the beginning<font color="#E5E5E5"> or simply</font>

642
00:25:54,600 --> 00:25:58,320
<font color="#E5E5E5">the header that</font><font color="#CCCCCC"> might be there AFL is</font>

643
00:25:56,820 --> 00:26:00,149
not necessarily victim tricks that you

644
00:25:58,320 --> 00:26:02,070
can use<font color="#E5E5E5"> but AFL in general is not really</font>

645
00:26:00,150 --> 00:26:04,560
efficient there because simply the space

646
00:26:02,070 --> 00:26:07,470
of different kind of solution that<font color="#CCCCCC"> you</font>

647
00:26:04,560 --> 00:26:10,440
can put<font color="#E5E5E5"> in for X if it wins the 32-bit</font>

648
00:26:07,470 --> 00:26:15,810
or 64-bit value it's just<font color="#E5E5E5"> too large to</font>

649
00:26:10,440 --> 00:26:18,210
find the set random so<font color="#E5E5E5"> you might try a</font>

650
00:26:15,810 --> 00:26:19,350
<font color="#CCCCCC">bunch of them and then at some point you</font>

651
00:26:18,210 --> 00:26:22,890
still haven't actually found the

652
00:26:19,350 --> 00:26:24,870
<font color="#E5E5E5">Explorer pass to win and this is exactly</font>

653
00:26:22,890 --> 00:26:26,790
<font color="#E5E5E5">where anger comes in so the symbolic</font>

654
00:26:24,870 --> 00:26:29,699
execution part for instance for instance

655
00:26:26,790 --> 00:26:31,260
you might decide that this isn't

656
00:26:29,700 --> 00:26:33,660
slightly I you start adding constraints

657
00:26:31,260 --> 00:26:35,700
if you do symbolic execution so what

658
00:26:33,660 --> 00:26:37,590
symbolic execution is essentially for

659
00:26:35,700 --> 00:26:40,680
every whenever<font color="#CCCCCC"> these user introduced to</font>

660
00:26:37,590 --> 00:26:42,720
<font color="#CCCCCC">start adding constraints to the into the</font>

661
00:26:40,680 --> 00:26:45,060
<font color="#E5E5E5">state of the program</font><font color="#CCCCCC"> that you have so</font>

662
00:26:42,720 --> 00:26:45,960
that essentially the state depends on

663
00:26:45,060 --> 00:26:48,029
the user input

664
00:26:45,960 --> 00:26:50,580
the user input is actually symbolic and

665
00:26:48,029 --> 00:26:52,679
that's<font color="#CCCCCC"> actually not really any value</font>

666
00:26:50,580 --> 00:26:54,629
associated to it and then you

667
00:26:52,679 --> 00:26:57,029
essentially you get similar to you since

668
00:26:54,630 --> 00:26:59,159
we get this kind of the essentially

669
00:26:57,029 --> 00:27:01,289
these paths conditions that<font color="#E5E5E5"> essentially</font>

670
00:26:59,159 --> 00:27:03,299
you start essentially you want to go for

671
00:27:01,289 --> 00:27:05,730
instance to this put this the you win

672
00:27:03,299 --> 00:27:08,010
part then essentially you would have to

673
00:27:05,730 --> 00:27:09,899
look at this specific path this these

674
00:27:08,010 --> 00:27:12,919
are<font color="#E5E5E5"> the path conditions that</font><font color="#CCCCCC"> you came up</font>

675
00:27:09,899 --> 00:27:14,969
with when you traced print you win

676
00:27:12,919 --> 00:27:17,640
essentially first<font color="#CCCCCC"> at</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> condition that</font>

677
00:27:14,970 --> 00:27:20,880
you need to pass x is greater or equal

678
00:27:17,640 --> 00:27:24,480
than<font color="#CCCCCC"> 10 or</font><font color="#E5E5E5"> second uvex mobile 1337</font>

679
00:27:20,880 --> 00:27:27,450
equals 0 and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> exactly the kind</font>

680
00:27:24,480 --> 00:27:28,470
<font color="#E5E5E5">that anger starts to shine so</font>

681
00:27:27,450 --> 00:27:30,330
<font color="#E5E5E5">essentially you have these paths</font>

682
00:27:28,470 --> 00:27:32,279
conditions and then you start<font color="#CCCCCC"> asking</font>

683
00:27:30,330 --> 00:27:34,649
your solver in our case that's these

684
00:27:32,279 --> 00:27:36,179
<font color="#E5E5E5">three from Microsoft essentially what</font>

685
00:27:34,649 --> 00:27:37,949
are the<font color="#E5E5E5"> path condition what is a</font>

686
00:27:36,179 --> 00:27:40,020
solution<font color="#E5E5E5"> to the path conditions that I</font>

687
00:27:37,950 --> 00:27:42,539
have so<font color="#E5E5E5"> that every actually reach this</font>

688
00:27:40,020 --> 00:27:45,360
state of<font color="#E5E5E5"> the program in this case it</font>

689
00:27:42,539 --> 00:27:47,100
will tell you the<font color="#E5E5E5"> input that</font><font color="#CCCCCC"> you have to</font>

690
00:27:45,360 --> 00:27:49,799
provide<font color="#CCCCCC"> to actually reach the you win</font>

691
00:27:47,100 --> 00:27:54,270
state you<font color="#E5E5E5"> have to provide as input for x</font>

692
00:27:49,799 --> 00:27:56,668
equals 1337 and the combination of AFL

693
00:27:54,270 --> 00:28:01,470
and anger was published in a research

694
00:27:56,669 --> 00:28:03,419
paper at ndss 2016 so this year which is

695
00:28:01,470 --> 00:28:05,610
<font color="#E5E5E5">essentially combining those two in a</font>

696
00:28:03,419 --> 00:28:08,370
feedback<font color="#CCCCCC"> loop so you combine fuzzing</font>

697
00:28:05,610 --> 00:28:10,320
with symbolic execution and for instance

698
00:28:08,370 --> 00:28:12,750
<font color="#CCCCCC">if you look at</font><font color="#E5E5E5"> the following CFG and you</font>

699
00:28:10,320 --> 00:28:14,460
just start with like cheap fuzzing

700
00:28:12,750 --> 00:28:17,220
coverage<font color="#E5E5E5"> quenching the Winston's that</font>

701
00:28:14,460 --> 00:28:19,320
<font color="#E5E5E5">might AFL give you so you're on FL for</font>

702
00:28:17,220 --> 00:28:21,990
for a bunch of<font color="#E5E5E5"> times</font><font color="#CCCCCC"> and then you simply</font>

703
00:28:19,320 --> 00:28:23,309
get the two inputs<font color="#CCCCCC"> x and y that</font>

704
00:28:21,990 --> 00:28:26,510
essentially trigger the left and the

705
00:28:23,309 --> 00:28:28,918
right path at essentially<font color="#E5E5E5"> this branch</font>

706
00:28:26,510 --> 00:28:30,539
but you still<font color="#CCCCCC"> have this specific part of</font>

707
00:28:28,919 --> 00:28:32,039
<font color="#E5E5E5">the program that</font><font color="#CCCCCC"> is unexplored and where</font>

708
00:28:30,539 --> 00:28:35,580
there might be a crash or vulnerability

709
00:28:32,039 --> 00:28:37,169
so you want to go there and this is

710
00:28:35,580 --> 00:28:39,720
where the dynamic symbolic execution

711
00:28:37,169 --> 00:28:42,299
part comes in so<font color="#CCCCCC"> use until you try to</font>

712
00:28:39,720 --> 00:28:44,929
ask how do i get<font color="#E5E5E5"> the specific part and</font>

713
00:28:42,299 --> 00:28:48,510
then<font color="#CCCCCC"> you have the</font><font color="#E5E5E5"> cgc underscore magic</font>

714
00:28:44,929 --> 00:28:51,059
which is then being fed into essentially

715
00:28:48,510 --> 00:28:53,970
AFL as a new test case and then you

716
00:28:51,059 --> 00:28:56,460
sense the AFL might find new other cases

717
00:28:53,970 --> 00:28:58,649
for instance<font color="#E5E5E5"> see GCM underscore magic</font>

718
00:28:56,460 --> 00:28:59,820
why and with that<font color="#E5E5E5"> you essentially have a</font>

719
00:28:58,649 --> 00:29:02,310
<font color="#E5E5E5">feedback loop and</font>

720
00:28:59,820 --> 00:29:04,050
you start<font color="#E5E5E5"> looking into the symbolic</font>

721
00:29:02,310 --> 00:29:08,310
execution which is this really heavy

722
00:29:04,050 --> 00:29:10,830
weight solution to a similar problem

723
00:29:08,310 --> 00:29:13,379
that fuzzing<font color="#E5E5E5"> solved only as soon as the</font>

724
00:29:10,830 --> 00:29:17,149
fuzzing parties essence<font color="#CCCCCC"> league is stuck</font>

725
00:29:13,380 --> 00:29:20,760
and doesn't<font color="#E5E5E5"> get along anymore and</font>

726
00:29:17,150 --> 00:29:23,190
twisting see go from a specific crash to

727
00:29:20,760 --> 00:29:25,050
an exploit use all you have to do

728
00:29:23,190 --> 00:29:26,460
automatic<font color="#E5E5E5"> exploitation if you look at</font>

729
00:29:25,050 --> 00:29:30,419
for instance at this specific code

730
00:29:26,460 --> 00:29:32,940
fragment the vulnerability is a simple

731
00:29:30,420 --> 00:29:35,190
buffer overflow on the heap so

732
00:29:32,940 --> 00:29:37,970
<font color="#E5E5E5">essentially on the the while loop your</font>

733
00:29:35,190 --> 00:29:40,080
since the overriding possibly the

734
00:29:37,970 --> 00:29:43,440
function pointer in the structure

735
00:29:40,080 --> 00:29:45,510
component so first you essentially start

736
00:29:43,440 --> 00:29:49,200
by just getting<font color="#E5E5E5"> some kind of input and</font>

737
00:29:45,510 --> 00:29:51,360
then your salute the heap looks by it's

738
00:29:49,200 --> 00:29:55,440
just being filled<font color="#E5E5E5"> with symbolic bytes in</font>

739
00:29:51,360 --> 00:29:58,560
memory so just walk<font color="#E5E5E5"> over and then if you</font>

740
00:29:55,440 --> 00:30:01,320
look at how this looks for anger<font color="#CCCCCC"> it's</font>

741
00:29:58,560 --> 00:30:04,110
<font color="#CCCCCC">just going to</font><font color="#E5E5E5"> be the compare do</font>

742
00:30:01,320 --> 00:30:06,149
something with one essentially looks for

743
00:30:04,110 --> 00:30:08,790
anger as a call<font color="#CCCCCC"> to symbolic bite and</font>

744
00:30:06,150 --> 00:30:11,460
then at this<font color="#CCCCCC"> point you sin</font><font color="#E5E5E5"> oh you have</font>

745
00:30:08,790 --> 00:30:13,620
control<font color="#E5E5E5"> over this symbolic region so you</font>

746
00:30:11,460 --> 00:30:17,370
essentially can specify where you want

747
00:30:13,620 --> 00:30:20,370
to call so you have control<font color="#E5E5E5"> over the pc</font>

748
00:30:17,370 --> 00:30:22,800
at that point and starting from there

749
00:30:20,370 --> 00:30:25,590
you sense late if you have control<font color="#E5E5E5"> of</font>

750
00:30:22,800 --> 00:30:27,690
the<font color="#E5E5E5"> pc so so you have this distance lisa</font>

751
00:30:25,590 --> 00:30:30,209
symbolic<font color="#CCCCCC"> at search</font><font color="#E5E5E5"> december's the</font>

752
00:30:27,690 --> 00:30:32,850
assertion that the pc is actually

753
00:30:30,210 --> 00:30:34,860
symbolic then you can just go<font color="#CCCCCC"> on and</font>

754
00:30:32,850 --> 00:30:36,659
essentially make sure that your

755
00:30:34,860 --> 00:30:39,870
shellcode fits into memory then you

756
00:30:36,660 --> 00:30:43,260
constrain your the path that<font color="#CCCCCC"> your you</font>

757
00:30:39,870 --> 00:30:45,239
want<font color="#CCCCCC"> to go to um so that you have a</font>

758
00:30:43,260 --> 00:30:47,010
region of<font color="#E5E5E5"> memory that's large enough for</font>

759
00:30:45,240 --> 00:30:52,080
the shellcode that you want to execute

760
00:30:47,010 --> 00:30:54,180
certain number two in<font color="#CCCCCC"> the first line in</font>

761
00:30:52,080 --> 00:30:56,100
the first three lines and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> sense a</font>

762
00:30:54,180 --> 00:30:58,050
use that so the<font color="#CCCCCC"> BB v is just a bite</font>

763
00:30:56,100 --> 00:31:00,360
vector it's just an implementation

764
00:30:58,050 --> 00:31:02,790
detail but it just makes sure<font color="#CCCCCC"> that your</font>

765
00:31:00,360 --> 00:31:05,909
shellcode is a memory and that you know

766
00:31:02,790 --> 00:31:07,649
the address where it's on and going from

767
00:31:05,910 --> 00:31:11,070
that essentially you just add a

768
00:31:07,650 --> 00:31:12,930
constraint that the program counter at

769
00:31:11,070 --> 00:31:13,439
this point should point to the buffer

770
00:31:12,930 --> 00:31:15,779
address

771
00:31:13,440 --> 00:31:18,029
where your shellcode lives in and then

772
00:31:15,779 --> 00:31:20,009
you<font color="#E5E5E5"> just dump this entire thing and then</font>

773
00:31:18,029 --> 00:31:24,299
you have the input that<font color="#CCCCCC"> you can use to</font>

774
00:31:20,009 --> 00:31:27,090
<font color="#E5E5E5">simply get an exploit for crash this is</font>

775
00:31:24,299 --> 00:31:29,100
of course overly simplified and there's

776
00:31:27,090 --> 00:31:30,389
a<font color="#E5E5E5"> lot more research going on and it</font>

777
00:31:29,100 --> 00:31:35,459
doesn't necessarily<font color="#CCCCCC"> work in all cases</font>

778
00:31:30,389 --> 00:31:38,189
but<font color="#CCCCCC"> there's a lot of things that the</font><font color="#E5E5E5"> CGC</font>

779
00:31:35,460 --> 00:31:41,789
also made significantly easier with

780
00:31:38,190 --> 00:31:44,039
their operating choice and so in

781
00:31:41,789 --> 00:31:45,620
conclusion on the automatic exploitation

782
00:31:44,039 --> 00:31:48,029
priorities and so you just need three

783
00:31:45,620 --> 00:31:50,129
components which is essentially a

784
00:31:48,029 --> 00:31:53,070
symbolic state that's vulnerable where

785
00:31:50,129 --> 00:31:54,449
you have control over the pc and then

786
00:31:53,070 --> 00:31:58,980
you just need to be<font color="#CCCCCC"> able to add some</font>

787
00:31:54,450 --> 00:32:00,419
constraints to simply be able to put<font color="#CCCCCC"> the</font>

788
00:31:58,980 --> 00:32:02,490
shell code into the address space of

789
00:32:00,419 --> 00:32:04,559
course if you're<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> rob this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

790
00:32:02,490 --> 00:32:05,610
little<font color="#E5E5E5"> bit different and then you</font>

791
00:32:04,559 --> 00:32:08,370
essentially just need to able to

792
00:32:05,610 --> 00:32:12,389
constrain the<font color="#E5E5E5"> pc to point to</font><font color="#CCCCCC"> the shotgun</font>

793
00:32:08,370 --> 00:32:13,649
and<font color="#CCCCCC"> we used in the GGC a bunch of</font>

794
00:32:12,389 --> 00:32:16,049
different<font color="#CCCCCC"> components so we a had</font>

795
00:32:13,649 --> 00:32:19,320
circumstantial exploits which are

796
00:32:16,049 --> 00:32:21,269
targeting type 1 exploits so the type 1

797
00:32:19,320 --> 00:32:23,639
you since you<font color="#E5E5E5"> just have to crash</font>

798
00:32:21,269 --> 00:32:26,669
<font color="#CCCCCC">dispersor you since we have to crash at</font>

799
00:32:23,639 --> 00:32:28,620
a specific address and you before<font color="#CCCCCC"> that</font>

800
00:32:26,669 --> 00:32:31,019
you<font color="#E5E5E5"> have to set a specific register to</font><font color="#CCCCCC"> a</font>

801
00:32:28,620 --> 00:32:33,120
specific<font color="#CCCCCC"> value</font><font color="#E5E5E5"> both of those two things</font>

802
00:32:31,019 --> 00:32:35,549
you simply agreed on before hand with

803
00:32:33,120 --> 00:32:38,008
the challenge infrastructure but<font color="#E5E5E5"> if</font>

804
00:32:35,549 --> 00:32:40,769
<font color="#CCCCCC">you'll</font><font color="#E5E5E5"> note that this does not actually</font>

805
00:32:38,009 --> 00:32:43,100
require you to execute your code because

806
00:32:40,769 --> 00:32:46,159
if you you might have control over the

807
00:32:43,100 --> 00:32:51,289
specific register already for instance

808
00:32:46,159 --> 00:32:53,399
through some kind of residual residue

809
00:32:51,289 --> 00:32:54,870
data that you might have<font color="#E5E5E5"> put in or</font>

810
00:32:53,399 --> 00:32:56,549
something<font color="#E5E5E5"> that depends on a computation</font>

811
00:32:54,870 --> 00:32:58,979
that you have done so you might be<font color="#CCCCCC"> able</font>

812
00:32:56,549 --> 00:33:00,929
<font color="#E5E5E5">to deduce that computation for instant</font>

813
00:32:58,980 --> 00:33:03,539
through symbolic execution you might be

814
00:33:00,929 --> 00:33:05,730
able<font color="#E5E5E5"> to set that specific register</font>

815
00:33:03,539 --> 00:33:08,639
without actually having to have control

816
00:33:05,730 --> 00:33:10,799
<font color="#E5E5E5">over the pc and then you simply you need</font>

817
00:33:08,639 --> 00:33:13,139
the control over the pc to<font color="#E5E5E5"> essentially</font>

818
00:33:10,799 --> 00:33:15,240
jump there but you do<font color="#E5E5E5"> not need to do</font>

819
00:33:13,139 --> 00:33:18,178
something be able to leverage that<font color="#E5E5E5"> to go</font>

820
00:33:15,240 --> 00:33:20,730
<font color="#E5E5E5">on so it might be</font><font color="#CCCCCC"> enough that you can</font>

821
00:33:18,179 --> 00:33:23,100
set the few bits of<font color="#CCCCCC"> the pc to get a</font>

822
00:33:20,730 --> 00:33:24,960
circumstantial exploit then of<font color="#CCCCCC"> course</font>

823
00:33:23,100 --> 00:33:27,110
you have the standard shellcode exploit

824
00:33:24,960 --> 00:33:30,710
which primarily works because

825
00:33:27,110 --> 00:33:32,780
<font color="#CCCCCC">us on by default there's no stack</font>

826
00:33:30,710 --> 00:33:34,970
protections enabled which is of course

827
00:33:32,780 --> 00:33:37,790
<font color="#E5E5E5">in either use thing for every competitor</font>

828
00:33:34,970 --> 00:33:40,220
<font color="#E5E5E5">essentially</font><font color="#CCCCCC"> naval immediately make this</font>

829
00:33:37,790 --> 00:33:42,700
deck not executable because none of the

830
00:33:40,220 --> 00:33:45,530
challenge that's actually depend<font color="#E5E5E5"> on it</font>

831
00:33:42,700 --> 00:33:47,330
but still some teams did not do<font color="#E5E5E5"> it</font>

832
00:33:45,530 --> 00:33:49,129
immediately so you<font color="#E5E5E5"> still were able to</font>

833
00:33:47,330 --> 00:33:50,870
leverage a specific window to

834
00:33:49,130 --> 00:33:52,700
essentially use shellcode exploits and

835
00:33:50,870 --> 00:33:55,610
then of course<font color="#CCCCCC"> you have the standard raw</font>

836
00:33:52,700 --> 00:33:57,230
part which is also<font color="#E5E5E5"> just add getting</font>

837
00:33:55,610 --> 00:34:00,260
return oriented programming exploits

838
00:33:57,230 --> 00:34:03,860
which is<font color="#E5E5E5"> also open source at the rest I</font>

839
00:34:00,260 --> 00:34:05,720
will<font color="#CCCCCC"> talk on later</font><font color="#E5E5E5"> on top of</font><font color="#CCCCCC"> that you</font>

840
00:34:03,860 --> 00:34:07,159
have essentially goals that target type

841
00:34:05,720 --> 00:34:09,379
<font color="#E5E5E5">to exploits which is essentially an</font>

842
00:34:07,160 --> 00:34:11,629
<font color="#E5E5E5">arbitrary read for instance you might be</font>

843
00:34:09,379 --> 00:34:13,520
able to<font color="#E5E5E5"> read specific bites from the</font>

844
00:34:11,629 --> 00:34:17,810
flag page but you might<font color="#CCCCCC"> not actually be</font>

845
00:34:13,520 --> 00:34:19,820
<font color="#CCCCCC">able to get control</font><font color="#E5E5E5"> over the pc and then</font>

846
00:34:17,810 --> 00:34:22,460
<font color="#E5E5E5">you sense lay have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> other kinds</font><font color="#CCCCCC"> of</font>

847
00:34:19,820 --> 00:34:24,679
exploits which are more<font color="#E5E5E5"> complicated</font>

848
00:34:22,460 --> 00:34:26,750
since instance read read write

849
00:34:24,679 --> 00:34:29,270
acceleration you might essentially be

850
00:34:26,750 --> 00:34:31,879
able to deliver this in two<font color="#E5E5E5"> stage or you</font>

851
00:34:29,270 --> 00:34:34,969
might be able to<font color="#CCCCCC"> override a veto pointer</font>

852
00:34:31,879 --> 00:34:37,540
and look inference particularly at type

853
00:34:34,969 --> 00:34:39,739
2 exploits where you<font color="#E5E5E5"> just need to liek</font>

854
00:34:37,540 --> 00:34:41,899
specific information we there have

855
00:34:39,739 --> 00:34:46,729
<font color="#CCCCCC">colorguard</font><font color="#E5E5E5"> which essentially makes sure</font>

856
00:34:41,899 --> 00:34:50,029
which that you're looking<font color="#E5E5E5"> at flag page</font>

857
00:34:46,730 --> 00:34:52,668
leaks so the<font color="#E5E5E5"> way it works essentially</font>

858
00:34:50,030 --> 00:34:55,490
just runs everything in anger and the

859
00:34:52,668 --> 00:34:58,730
only thing that's treated as symbolic is

860
00:34:55,489 --> 00:35:00,439
the memory region where the flag pages

861
00:34:58,730 --> 00:35:02,480
everything else<font color="#CCCCCC"> is being taken from</font>

862
00:35:00,440 --> 00:35:05,060
different test cases and then at the

863
00:35:02,480 --> 00:35:07,630
<font color="#CCCCCC">very end is being checked is any of</font><font color="#E5E5E5"> the</font>

864
00:35:05,060 --> 00:35:10,640
output that was given on standard out

865
00:35:07,630 --> 00:35:15,500
symbolic and at that point if it's yes

866
00:35:10,640 --> 00:35:17,750
you know that this is actually<font color="#E5E5E5"> an input</font>

867
00:35:15,500 --> 00:35:20,630
that leaks part of the flag page and you

868
00:35:17,750 --> 00:35:22,970
can now control it or if it<font color="#E5E5E5"> doesn't you</font>

869
00:35:20,630 --> 00:35:25,670
know that this tat this specific input

870
00:35:22,970 --> 00:35:28,730
does not leak the flag pitch and cannot

871
00:35:25,670 --> 00:35:30,619
lick it at all and interestingly this

872
00:35:28,730 --> 00:35:34,100
actually solved one<font color="#CCCCCC"> of the challenges at</font>

873
00:35:30,619 --> 00:35:36,260
the DEFCON CTF I think within 30 seconds

874
00:35:34,100 --> 00:35:38,000
of it actually popping up so<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> Lee</font>

875
00:35:36,260 --> 00:35:41,030
within 30 seconds the challenge popped

876
00:35:38,000 --> 00:35:42,890
up the<font color="#CCCCCC"> crs essentially get got</font>

877
00:35:41,030 --> 00:35:48,140
it and then solve the challenge and

878
00:35:42,890 --> 00:35:52,190
submitted an exploit and of course<font color="#CCCCCC"> the</font>

879
00:35:48,140 --> 00:35:55,910
last<font color="#E5E5E5"> step next</font><font color="#CCCCCC"> to exploiting was</font>

880
00:35:52,190 --> 00:35:58,970
patching um which for which we had<font color="#CCCCCC"> patch</font>

881
00:35:55,910 --> 00:36:01,040
<font color="#CCCCCC">Iraq's which essentially starts by</font>

882
00:35:58,970 --> 00:36:02,839
having applying a bunch<font color="#E5E5E5"> of different</font>

883
00:36:01,040 --> 00:36:05,529
patching techniques for instance you

884
00:36:02,840 --> 00:36:08,870
have stack randomization you started

885
00:36:05,530 --> 00:36:10,550
encrypting the return pointer<font color="#E5E5E5"> you</font>

886
00:36:08,870 --> 00:36:12,350
senseless start checking what are you

887
00:36:10,550 --> 00:36:14,180
transmitting for<font color="#E5E5E5"> instance are you</font>

888
00:36:12,350 --> 00:36:17,540
sending out more than<font color="#E5E5E5"> four bytes of the</font>

889
00:36:14,180 --> 00:36:19,730
flag page that if yes do<font color="#CCCCCC"> not send out</font>

890
00:36:17,540 --> 00:36:21,590
more than three bites of it instead

891
00:36:19,730 --> 00:36:23,180
terminate immediately because the

892
00:36:21,590 --> 00:36:25,840
likelihood that this is going<font color="#CCCCCC"> to be a</font>

893
00:36:23,180 --> 00:36:28,250
type to exploit is really really<font color="#E5E5E5"> high or</font>

894
00:36:25,840 --> 00:36:30,620
other things we essentially looked into

895
00:36:28,250 --> 00:36:35,270
our versatile patches essentially use

896
00:36:30,620 --> 00:36:38,029
them to disrupt what a specific analysis

897
00:36:35,270 --> 00:36:39,800
to them software might be trying<font color="#E5E5E5"> to do</font>

898
00:36:38,030 --> 00:36:41,330
on your<font color="#E5E5E5"> kind of patch so for instance</font>

899
00:36:39,800 --> 00:36:43,220
another team is running something<font color="#E5E5E5"> in</font>

900
00:36:41,330 --> 00:36:45,350
<font color="#E5E5E5">queue</font><font color="#CCCCCC"> EMU you might want to essentially</font>

901
00:36:43,220 --> 00:36:47,419
<font color="#E5E5E5">just drop the functionality of QE meal</font>

902
00:36:45,350 --> 00:36:49,460
similarly if somebody is running at us

903
00:36:47,420 --> 00:36:52,220
in pin you might want to try essentially

904
00:36:49,460 --> 00:36:53,960
attack pin and with that<font color="#E5E5E5"> we essentially</font>

905
00:36:52,220 --> 00:36:56,419
the patches is until either inserted

906
00:36:53,960 --> 00:36:58,070
data or code so for instance code

907
00:36:56,420 --> 00:36:59,720
inserted that<font color="#E5E5E5"> we might was essentially</font>

908
00:36:58,070 --> 00:37:02,810
make sure that stack variables are

909
00:36:59,720 --> 00:37:04,910
zeroed out um as<font color="#E5E5E5"> soon as they're</font>

910
00:37:02,810 --> 00:37:06,830
allocated but before they're used so

911
00:37:04,910 --> 00:37:08,330
that<font color="#CCCCCC"> isn't Lisa but you're not leaking</font>

912
00:37:06,830 --> 00:37:10,700
anything that might have been put there

913
00:37:08,330 --> 00:37:14,029
into the same memory region by for

914
00:37:10,700 --> 00:37:15,379
instance the<font color="#E5E5E5"> previous call and to</font>

915
00:37:14,030 --> 00:37:18,350
actually<font color="#E5E5E5"> implement this we're too</font>

916
00:37:15,380 --> 00:37:21,410
different and hindsight actually three

917
00:37:18,350 --> 00:37:22,880
different techniques so one is the

918
00:37:21,410 --> 00:37:25,100
standard detour essentially that you

919
00:37:22,880 --> 00:37:26,480
jump out where the interesting<font color="#E5E5E5"> code part</font>

920
00:37:25,100 --> 00:37:29,600
is and then at a later point you just

921
00:37:26,480 --> 00:37:31,640
jump back but on<font color="#CCCCCC"> top of that we also</font>

922
00:37:29,600 --> 00:37:33,680
<font color="#CCCCCC">sense</font><font color="#E5E5E5"> a fish in particular implemented</font>

923
00:37:31,640 --> 00:37:35,480
reassembly that<font color="#E5E5E5"> essentially completely</font>

924
00:37:33,680 --> 00:37:38,240
disassembled the binary that you're

925
00:37:35,480 --> 00:37:40,910
getting<font color="#E5E5E5"> and starts to look into using</font>

926
00:37:38,240 --> 00:37:43,220
symbolic specific pointers that might

927
00:37:40,910 --> 00:37:45,879
usually be troublesome or being

928
00:37:43,220 --> 00:37:48,890
introduced through symbolic values and

929
00:37:45,880 --> 00:37:50,540
since we noticed that most of the

930
00:37:48,890 --> 00:37:53,870
binaries are actually compiled with dash

931
00:37:50,540 --> 00:37:56,540
0 0 fish<font color="#E5E5E5"> also implemented a bunch of</font>

932
00:37:53,870 --> 00:37:58,790
optimizations on the binary so for

933
00:37:56,540 --> 00:38:01,520
instance constant propagation or dead

934
00:37:58,790 --> 00:38:04,130
story elimination and also making<font color="#CCCCCC"> sure</font>

935
00:38:01,520 --> 00:38:06,680
that you're<font color="#CCCCCC"> not unnecessarily copying</font>

936
00:38:04,130 --> 00:38:08,750
variables from your current stack into

937
00:38:06,680 --> 00:38:11,480
<font color="#E5E5E5">possibly the local slack when you're</font>

938
00:38:08,750 --> 00:38:13,430
doing a call all of these kind of things

939
00:38:11,480 --> 00:38:15,770
you<font color="#E5E5E5"> optimize the way which actually led</font>

940
00:38:13,430 --> 00:38:20,060
to some binary is performing better with

941
00:38:15,770 --> 00:38:21,710
our patches than before some of the

942
00:38:20,060 --> 00:38:25,190
adverse rural patches we looked<font color="#E5E5E5"> into our</font>

943
00:38:21,710 --> 00:38:27,500
for instance to detect<font color="#CCCCCC"> QE mu so this one</font>

944
00:38:25,190 --> 00:38:31,280
isn't ligious if the mantissa of an 80

945
00:38:27,500 --> 00:38:33,140
bit float is set to<font color="#CCCCCC"> 0 in user mode as an</font>

946
00:38:31,280 --> 00:38:35,360
older<font color="#CCCCCC"> version in cumo it just</font><font color="#E5E5E5"> started to</font>

947
00:38:33,140 --> 00:38:37,819
crash which actually led to the

948
00:38:35,360 --> 00:38:39,530
visualization of the<font color="#CCCCCC"> cgc people because</font>

949
00:38:37,820 --> 00:38:42,890
they were running<font color="#E5E5E5"> this in user mode qmo</font>

950
00:38:39,530 --> 00:38:45,410
actually crash this the entire sense if

951
00:38:42,890 --> 00:38:47,779
they visualized every specific part like

952
00:38:45,410 --> 00:38:53,509
every instruction of it at this point

953
00:38:47,780 --> 00:38:55,040
<font color="#CCCCCC">that just stopped others</font><font color="#E5E5E5"> term adversity</font>

954
00:38:53,510 --> 00:38:57,680
<font color="#E5E5E5">or</font><font color="#CCCCCC"> patch assistance which is just</font>

955
00:38:55,040 --> 00:39:00,259
admitting the flag a button standard or

956
00:38:57,680 --> 00:39:02,060
instead<font color="#E5E5E5"> of standard out socially as soon</font>

957
00:39:00,260 --> 00:39:04,760
as the program loads you just dump the

958
00:39:02,060 --> 00:39:07,310
entire flag page to simply standard

959
00:39:04,760 --> 00:39:09,470
<font color="#CCCCCC">error which might trigger some analysis</font>

960
00:39:07,310 --> 00:39:13,100
techniques to income to consider this

961
00:39:09,470 --> 00:39:16,370
essentially as a binary<font color="#E5E5E5"> that might</font>

962
00:39:13,100 --> 00:39:17,720
possibly have a<font color="#CCCCCC"> backdoor or since we</font>

963
00:39:16,370 --> 00:39:20,330
might have a problem<font color="#E5E5E5"> these kind of</font>

964
00:39:17,720 --> 00:39:23,029
things<font color="#E5E5E5"> since</font><font color="#CCCCCC"> sliced throw off analysis</font>

965
00:39:20,330 --> 00:39:25,910
systems of your opponents to figure this

966
00:39:23,030 --> 00:39:28,370
out and<font color="#E5E5E5"> then we also</font><font color="#CCCCCC"> came up with a back</font>

967
00:39:25,910 --> 00:39:30,859
door in our patches or all our patches

968
00:39:28,370 --> 00:39:33,589
included the back door that we could use

969
00:39:30,860 --> 00:39:35,900
to since the execute code and as I get

970
00:39:33,590 --> 00:39:37,840
whatever we needed to do was a standard

971
00:39:35,900 --> 00:39:40,160
hash space<font color="#CCCCCC"> generous response back door</font>

972
00:39:37,840 --> 00:39:42,530
it was not cryptographically secure

973
00:39:40,160 --> 00:39:44,899
because you<font color="#E5E5E5"> also have</font><font color="#CCCCCC"> to be very careful</font>

974
00:39:42,530 --> 00:39:46,670
in the performance penalties<font color="#E5E5E5"> so we</font>

975
00:39:44,900 --> 00:39:49,430
looked<font color="#E5E5E5"> into some of them that would have</font>

976
00:39:46,670 --> 00:39:51,080
<font color="#E5E5E5">been cryptographically secure but it's</font>

977
00:39:49,430 --> 00:39:53,089
just simply not<font color="#E5E5E5"> practical for</font>

978
00:39:51,080 --> 00:39:55,190
essentially the<font color="#E5E5E5"> DARPA Cybermen challenge</font>

979
00:39:53,090 --> 00:39:57,500
when<font color="#E5E5E5"> you start having too much of an</font>

980
00:39:55,190 --> 00:39:59,240
overhead you're being had essentially

981
00:39:57,500 --> 00:40:01,280
hurt by the performance penalty that

982
00:39:59,240 --> 00:40:04,879
your<font color="#CCCCCC"> back door introduces even though</font>

983
00:40:01,280 --> 00:40:05,809
it's<font color="#CCCCCC"> really exploit being executed so we</font>

984
00:40:04,880 --> 00:40:08,689
came up something that

985
00:40:05,809 --> 00:40:10,999
you can easily<font color="#CCCCCC"> pre-compute offline but</font>

986
00:40:08,689 --> 00:40:13,069
if you haven't done<font color="#E5E5E5"> this</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> it's</font>

987
00:40:10,999 --> 00:40:14,988
just<font color="#E5E5E5"> too difficult you can derive the</font>

988
00:40:13,069 --> 00:40:17,029
symbolic formula that you need to and

989
00:40:14,989 --> 00:40:19,249
you could<font color="#CCCCCC"> theoretically embed this and</font>

990
00:40:17,029 --> 00:40:21,680
exploits but the time that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> need to</font>

991
00:40:19,249 --> 00:40:24,169
actually solve the symbolic formula is

992
00:40:21,680 --> 00:40:27,379
higher than<font color="#CCCCCC"> the execution time out that</font>

993
00:40:24,170 --> 00:40:28,999
you can use on the<font color="#E5E5E5"> DARPA cyber Grand</font>

994
00:40:27,380 --> 00:40:31,999
<font color="#E5E5E5">Challenge infrastructure because they</font>

995
00:40:28,999 --> 00:40:34,069
were running<font color="#E5E5E5"> the exploit for you um I</font>

996
00:40:31,999 --> 00:40:36,049
said we have some other generic patches

997
00:40:34,069 --> 00:40:38,558
like return pointer encryption we're

998
00:40:36,049 --> 00:40:41,630
protecting indirect calls and jumps

999
00:40:38,559 --> 00:40:43,640
we're<font color="#E5E5E5"> simply so they instead of crashing</font>

1000
00:40:41,630 --> 00:40:47,660
at a specific address as soon as we have

1001
00:40:43,640 --> 00:40:49,699
a call or jump whereas the value is not

1002
00:40:47,660 --> 00:40:52,098
<font color="#E5E5E5">a constant but possibly arrived from</font>

1003
00:40:49,699 --> 00:40:54,529
user input we gently insert a stop in

1004
00:40:52,099 --> 00:40:56,180
which we are first<font color="#E5E5E5"> trying to read from</font>

1005
00:40:54,529 --> 00:40:58,189
<font color="#CCCCCC">that address which means</font><font color="#E5E5E5"> if the</font>

1006
00:40:56,180 --> 00:41:00,558
addresses on allocate is not allocated

1007
00:40:58,189 --> 00:41:02,689
we<font color="#CCCCCC"> actually crash before at the current</font>

1008
00:41:00,559 --> 00:41:07,219
construction which means that<font color="#E5E5E5"> if the</font>

1009
00:41:02,689 --> 00:41:09,140
team throws an exploit at us that does

1010
00:41:07,219 --> 00:41:11,479
behave this will exhibit the specific

1011
00:41:09,140 --> 00:41:14,058
behavior the exploit is not counted as

1012
00:41:11,479 --> 00:41:19,160
successful because they're crashing one

1013
00:41:14,059 --> 00:41:21,229
instruction too early and<font color="#CCCCCC"> then we</font>

1014
00:41:19,160 --> 00:41:23,449
essentially we also extended allocations

1015
00:41:21,229 --> 00:41:25,698
on the heat but just a random amount of

1016
00:41:23,449 --> 00:41:27,109
bites every time so every time you

1017
00:41:25,699 --> 00:41:29,599
allocated something you just get a few

1018
00:41:27,109 --> 00:41:31,400
more bites of space which threw off some

1019
00:41:29,599 --> 00:41:34,099
of the patches that depend very heavily

1020
00:41:31,400 --> 00:41:36,619
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> amount of space that for instance</font>

1021
00:41:34,099 --> 00:41:39,019
<font color="#E5E5E5">in heap allocation takes up the same</font>

1022
00:41:36,619 --> 00:41:41,509
goes on for this deck and as<font color="#CCCCCC"> I said you</font>

1023
00:41:39,019 --> 00:41:43,160
might have variables on<font color="#CCCCCC"> the stack that</font>

1024
00:41:41,509 --> 00:41:50,719
might have<font color="#CCCCCC"> been set up from previous</font>

1025
00:41:43,160 --> 00:41:54,828
call and looking at the XL c of e so

1026
00:41:50,719 --> 00:41:57,319
mayhem one actual first<font color="#E5E5E5"> price</font><font color="#CCCCCC"> Xandra</font>

1027
00:41:54,829 --> 00:42:01,539
which was from tech<font color="#CCCCCC"> x won second prize</font>

1028
00:41:57,319 --> 00:42:05,269
<font color="#E5E5E5">both of them were funded teams so both</font>

1029
00:42:01,539 --> 00:42:07,400
mayhem and zandra is mostly applied to

1030
00:42:05,269 --> 00:42:09,589
get a grant from dar / in the beginning

1031
00:42:07,400 --> 00:42:14,029
to be funded<font color="#E5E5E5"> so being paid to actually</font>

1032
00:42:09,589 --> 00:42:15,979
do the research we<font color="#CCCCCC"> have not we ended up</font>

1033
00:42:14,029 --> 00:42:18,949
being stirred and if you actually see

1034
00:42:15,979 --> 00:42:20,879
the huge drops that we had and I think

1035
00:42:18,949 --> 00:42:23,470
availability

1036
00:42:20,880 --> 00:42:25,420
you notice<font color="#CCCCCC"> that some of our</font><font color="#E5E5E5"> games</font>

1037
00:42:23,470 --> 00:42:27,250
theoretical techniques we're not

1038
00:42:25,420 --> 00:42:31,300
actually the<font color="#E5E5E5"> best ones you could have</font>

1039
00:42:27,250 --> 00:42:34,720
chosen now interestingly there are only

1040
00:42:31,300 --> 00:42:39,520
two<font color="#E5E5E5"> academic teams in there</font><font color="#CCCCCC"> 303 I think</font>

1041
00:42:34,720 --> 00:42:42,819
three Makka fish<font color="#E5E5E5"> Galactica and Jima as</font>

1042
00:42:39,520 --> 00:42:45,730
far as I know and the Galactica is from

1043
00:42:42,820 --> 00:42:47,680
UC<font color="#CCCCCC"> Berkeley which is really great for us</font>

1044
00:42:45,730 --> 00:42:49,750
because we can essentially now point to

1045
00:42:47,680 --> 00:42:52,149
them yes but we want this one<font color="#E5E5E5"> because</font>

1046
00:42:49,750 --> 00:42:55,540
you<font color="#E5E5E5"> have like this rivalry</font><font color="#CCCCCC"> between UC</font>

1047
00:42:52,150 --> 00:42:58,420
Berkeley and UC Santa Barbara looking at

1048
00:42:55,540 --> 00:43:04,480
senseless strategies and techniques<font color="#CCCCCC"> that</font>

1049
00:42:58,420 --> 00:43:06,280
we did at used at the CFE was it sounds

1050
00:43:04,480 --> 00:43:09,010
<font color="#E5E5E5">like we decided to not evaluate our own</font>

1051
00:43:06,280 --> 00:43:11,050
patches even though performance<font color="#E5E5E5"> really</font>

1052
00:43:09,010 --> 00:43:14,140
could hurt us and that was primarily

1053
00:43:11,050 --> 00:43:16,270
because when we try to it was simply too

1054
00:43:14,140 --> 00:43:18,460
unreliable he essentially the

1055
00:43:16,270 --> 00:43:20,500
infrastructure that<font color="#E5E5E5"> DARPA used to</font>

1056
00:43:18,460 --> 00:43:23,350
evaluate your patches was so vastly

1057
00:43:20,500 --> 00:43:24,670
different<font color="#CCCCCC"> from anything else that almost</font>

1058
00:43:23,350 --> 00:43:28,839
all of the other teams could come up

1059
00:43:24,670 --> 00:43:32,440
with there was no point in trying to we

1060
00:43:28,840 --> 00:43:34,300
also decided to not deploy any network

1061
00:43:32,440 --> 00:43:37,330
rules so you<font color="#CCCCCC"> have the option to deploy</font>

1062
00:43:34,300 --> 00:43:39,100
<font color="#CCCCCC">network rules to insulate prevent</font>

1063
00:43:37,330 --> 00:43:41,259
specific traffic time actually<font color="#E5E5E5"> reaching</font>

1064
00:43:39,100 --> 00:43:43,750
the binary the problem there<font color="#CCCCCC"> is that</font>

1065
00:43:41,260 --> 00:43:46,780
every<font color="#CCCCCC"> network rule is being applied to</font>

1066
00:43:43,750 --> 00:43:49,030
<font color="#E5E5E5">all binaries so to all services so if</font>

1067
00:43:46,780 --> 00:43:51,310
you have one error in a single<font color="#CCCCCC"> network</font>

1068
00:43:49,030 --> 00:43:52,930
rule you're losing availability for all

1069
00:43:51,310 --> 00:43:55,960
services which means you're losing

1070
00:43:52,930 --> 00:43:58,419
points for all services and I<font color="#E5E5E5"> think all</font>

1071
00:43:55,960 --> 00:44:00,340
but one<font color="#CCCCCC"> or two teams notice that and</font>

1072
00:43:58,420 --> 00:44:02,290
essentially the<font color="#E5E5E5"> tests that are poor</font>

1073
00:44:00,340 --> 00:44:06,370
organized and all of them decided<font color="#E5E5E5"> to not</font>

1074
00:44:02,290 --> 00:44:08,140
deploy<font color="#E5E5E5"> network rules um also because we</font>

1075
00:44:06,370 --> 00:44:10,900
were deploying adversity<font color="#E5E5E5"> all patches we</font>

1076
00:44:08,140 --> 00:44:12,910
made<font color="#CCCCCC"> sure not to analyze other binaries</font>

1077
00:44:10,900 --> 00:44:15,730
in essentially our heavyweight solutions

1078
00:44:12,910 --> 00:44:17,680
because we were assuming that similar<font color="#CCCCCC"> to</font>

1079
00:44:15,730 --> 00:44:21,340
us they would<font color="#CCCCCC"> have adverse your patches</font>

1080
00:44:17,680 --> 00:44:23,410
and would try to aim to<font color="#E5E5E5"> get our analysis</font>

1081
00:44:21,340 --> 00:44:27,090
techniques to essentially fail stall or

1082
00:44:23,410 --> 00:44:27,089
take<font color="#CCCCCC"> up a huge amount</font><font color="#E5E5E5"> of resources</font>

1083
00:44:27,570 --> 00:44:32,560
unfortunately we decided to deploy our

1084
00:44:29,650 --> 00:44:33,700
patches immediately which actually hurts

1085
00:44:32,560 --> 00:44:35,920
you because you

1086
00:44:33,700 --> 00:44:38,830
getting one round of downtime for since

1087
00:44:35,920 --> 00:44:41,560
Lee for the<font color="#CCCCCC"> deployment of the patch and</font>

1088
00:44:38,830 --> 00:44:44,590
we started to<font color="#CCCCCC"> look a little</font><font color="#E5E5E5"> bit into how</font>

1089
00:44:41,560 --> 00:44:46,509
much points that actually cost us and

1090
00:44:44,590 --> 00:44:49,240
although we're not<font color="#E5E5E5"> one hundred percent</font>

1091
00:44:46,510 --> 00:44:52,900
<font color="#E5E5E5">sure we think that it</font><font color="#CCCCCC"> at least</font><font color="#E5E5E5"> cost us</font>

1092
00:44:49,240 --> 00:44:54,370
probably at least<font color="#E5E5E5"> 5,000 to up</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 17,000</font>

1093
00:44:52,900 --> 00:44:56,320
points which might have made the

1094
00:44:54,370 --> 00:44:59,350
difference<font color="#E5E5E5"> between second or possibly</font>

1095
00:44:56,320 --> 00:45:03,040
first but of<font color="#CCCCCC"> course mayhem also since</font>

1096
00:44:59,350 --> 00:45:04,480
Lee got stuck in round 49 so you have no

1097
00:45:03,040 --> 00:45:08,050
idea<font color="#E5E5E5"> how it actually would have ended up</font>

1098
00:45:04,480 --> 00:45:10,570
and the offense part we essentially

1099
00:45:08,050 --> 00:45:13,150
started to just<font color="#E5E5E5"> hone as much as possible</font>

1100
00:45:10,570 --> 00:45:14,890
as every other team also there's not was

1101
00:45:13,150 --> 00:45:17,260
<font color="#CCCCCC">not really any drawback in holding back</font>

1102
00:45:14,890 --> 00:45:19,750
your exploits which you might have<font color="#E5E5E5"> had</font>

1103
00:45:17,260 --> 00:45:21,400
if<font color="#CCCCCC"> you have lucky human CTF where</font>

1104
00:45:19,750 --> 00:45:23,290
sometimes you might only want to throw

1105
00:45:21,400 --> 00:45:25,150
<font color="#E5E5E5">that you exploit at specific teams</font>

1106
00:45:23,290 --> 00:45:28,480
because you know this other team is<font color="#E5E5E5"> just</font>

1107
00:45:25,150 --> 00:45:31,420
really quickly<font color="#E5E5E5"> going to look at this</font>

1108
00:45:28,480 --> 00:45:33,790
<font color="#CCCCCC">your exploit and is able to reproduce it</font>

1109
00:45:31,420 --> 00:45:35,830
<font color="#E5E5E5">and throw it against other teams patch</font>

1110
00:45:33,790 --> 00:45:37,810
their own binary so you might want to

1111
00:45:35,830 --> 00:45:39,759
selectively throw you exploit in a human

1112
00:45:37,810 --> 00:45:41,529
CTF for instance<font color="#E5E5E5"> you might not want to</font>

1113
00:45:39,760 --> 00:45:44,200
throw<font color="#CCCCCC"> it against the top two teams to</font>

1114
00:45:41,530 --> 00:45:45,850
throb top three teams but in the cyber

1115
00:45:44,200 --> 00:45:48,609
<font color="#E5E5E5">Grand Challenge that doesn't necessarily</font>

1116
00:45:45,850 --> 00:45:54,009
<font color="#CCCCCC">apply because every come essentially</font>

1117
00:45:48,610 --> 00:45:56,500
opponent was a machine overall we saw

1118
00:45:54,010 --> 00:45:59,320
3082 challenge sets were filled it so

1119
00:45:56,500 --> 00:46:01,380
different challenges most some of<font color="#E5E5E5"> them</font>

1120
00:45:59,320 --> 00:46:03,250
were they're all trying to<font color="#E5E5E5"> mimic</font>

1121
00:46:01,380 --> 00:46:06,070
applications that you would find<font color="#E5E5E5"> in the</font>

1122
00:46:03,250 --> 00:46:08,320
real world so for instance<font color="#E5E5E5"> some of them</font>

1123
00:46:06,070 --> 00:46:11,290
were full web servers that<font color="#E5E5E5"> essentially</font>

1124
00:46:08,320 --> 00:46:15,220
spoke HTTP one other<font color="#E5E5E5"> words full smtp</font>

1125
00:46:11,290 --> 00:46:16,779
servers some of them<font color="#CCCCCC"> wrkn we're running</font>

1126
00:46:15,220 --> 00:46:19,270
over multiple binary so you had

1127
00:46:16,780 --> 00:46:23,680
<font color="#CCCCCC">communicated procedural IPC calls</font>

1128
00:46:19,270 --> 00:46:27,130
between them and for these<font color="#CCCCCC"> 82 channel</font>

1129
00:46:23,680 --> 00:46:30,480
<font color="#E5E5E5">stats our sub reasoning system</font>

1130
00:46:27,130 --> 00:46:34,450
mechanical fish generated a total of

1131
00:46:30,480 --> 00:46:36,400
2442 exploits of which only a thousand

1132
00:46:34,450 --> 00:46:38,950
seven hundred and nine were actually

1133
00:46:36,400 --> 00:46:41,920
fully reliable so they worked every<font color="#CCCCCC"> time</font>

1134
00:46:38,950 --> 00:46:45,100
you actually tried them<font color="#CCCCCC"> and we generated</font>

1135
00:46:41,920 --> 00:46:47,790
exponents for 14 out<font color="#CCCCCC"> of 82 of the</font>

1136
00:46:45,100 --> 00:46:50,230
channel sets and the<font color="#E5E5E5"> longest one</font>

1137
00:46:47,790 --> 00:46:52,720
contains about four thousand lines of<font color="#CCCCCC"> C</font>

1138
00:46:50,230 --> 00:46:55,420
code which which most is essentially

1139
00:46:52,720 --> 00:46:57,040
setting up symbolic formulas that you

1140
00:46:55,420 --> 00:46:58,300
can then later solve when you're

1141
00:46:57,040 --> 00:47:00,279
actually for instance in the challenge

1142
00:46:58,300 --> 00:47:02,890
response for<font color="#E5E5E5"> instance you might</font>

1143
00:47:00,280 --> 00:47:05,620
<font color="#E5E5E5">essentially get value a back and the</font>

1144
00:47:02,890 --> 00:47:07,900
service requires you to respond<font color="#E5E5E5"> with two</font>

1145
00:47:05,620 --> 00:47:09,460
times a this is not something<font color="#E5E5E5"> that you</font>

1146
00:47:07,900 --> 00:47:10,690
can hide<font color="#E5E5E5"> code in your exploit but</font>

1147
00:47:09,460 --> 00:47:12,730
essentially you<font color="#CCCCCC"> have to have the</font>

1148
00:47:10,690 --> 00:47:15,370
<font color="#E5E5E5">symbolic formula that depends on</font>

1149
00:47:12,730 --> 00:47:17,110
whatever the<font color="#E5E5E5"> service sends you and these</font>

1150
00:47:15,370 --> 00:47:19,290
<font color="#E5E5E5">kind of things we include it as</font>

1151
00:47:17,110 --> 00:47:23,380
essentially will include including a

1152
00:47:19,290 --> 00:47:25,300
solving engine in our exploit and the

1153
00:47:23,380 --> 00:47:26,950
shortest exploit we<font color="#E5E5E5"> actually had more so</font>

1154
00:47:25,300 --> 00:47:29,410
since we're just making<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that one</font>

1155
00:47:26,950 --> 00:47:34,270
specific thing is set and it ended up<font color="#E5E5E5"> at</font>

1156
00:47:29,410 --> 00:47:35,770
only 226 lines of code and one more

1157
00:47:34,270 --> 00:47:39,250
thing is essentially the crack at or

1158
00:47:35,770 --> 00:47:41,230
exploit which essentially try to mimic a

1159
00:47:39,250 --> 00:47:43,690
specific<font color="#CCCCCC"> export essentially in this</font>

1160
00:47:41,230 --> 00:47:47,320
specific export from the past which<font color="#CCCCCC"> we</font>

1161
00:47:43,690 --> 00:47:49,690
ended up with 570 lines of<font color="#CCCCCC"> C code um if</font>

1162
00:47:47,320 --> 00:47:51,430
you have looked<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm not sure if you</font>

1163
00:47:49,690 --> 00:47:53,770
have but all of the challenges<font color="#E5E5E5"> are</font>

1164
00:47:51,430 --> 00:47:56,319
actually open source so diaper made all

1165
00:47:53,770 --> 00:47:58,240
of them open source after and we were

1166
00:47:56,320 --> 00:48:00,070
able to generate essentially a hundred

1167
00:47:58,240 --> 00:48:02,470
percent reliable exploits<font color="#CCCCCC"> for the</font>

1168
00:48:00,070 --> 00:48:05,110
<font color="#E5E5E5">following challenges and the rematch</font>

1169
00:48:02,470 --> 00:48:07,899
challenges with a rematch challenge was

1170
00:48:05,110 --> 00:48:10,510
essentially a service that existed in

1171
00:48:07,900 --> 00:48:13,720
<font color="#E5E5E5">the past in</font><font color="#CCCCCC"> the last 20 years for which</font>

1172
00:48:10,510 --> 00:48:15,730
there was an exploit that had somewhat

1173
00:48:13,720 --> 00:48:18,839
devastating impact for instance sequel

1174
00:48:15,730 --> 00:48:22,480
slammer essentially these kind of

1175
00:48:18,840 --> 00:48:24,190
exploits we also discovered to

1176
00:48:22,480 --> 00:48:27,730
automatically without any human

1177
00:48:24,190 --> 00:48:29,290
involvement the different kind of

1178
00:48:27,730 --> 00:48:31,270
vulnerabilities that essentially

1179
00:48:29,290 --> 00:48:33,370
mechanical fish was able to find include

1180
00:48:31,270 --> 00:48:37,300
primarily buffer overflows buffer over

1181
00:48:33,370 --> 00:48:39,130
reads all these kind of things but also

1182
00:48:37,300 --> 00:48:41,140
<font color="#E5E5E5">for instance out of bounds rights which</font>

1183
00:48:39,130 --> 00:48:42,490
it was able to then essentially use to

1184
00:48:41,140 --> 00:48:46,060
exploit for instance if he table

1185
00:48:42,490 --> 00:48:48,939
overflows looking specifically at like

1186
00:48:46,060 --> 00:48:50,650
essentially the statistics off the CV so

1187
00:48:48,940 --> 00:48:52,090
the polling statistics how many flags

1188
00:48:50,650 --> 00:48:54,730
have we captured how many teams have

1189
00:48:52,090 --> 00:48:57,880
electives capture how many challenges

1190
00:48:54,730 --> 00:49:01,120
<font color="#CCCCCC">has a specific team found an expert for</font>

1191
00:48:57,880 --> 00:49:01,509
and how many essentially both of that

1192
00:49:01,120 --> 00:49:03,388
for

1193
00:49:01,509 --> 00:49:06,399
or forty nine rounds and for all<font color="#E5E5E5"> round</font>

1194
00:49:03,389 --> 00:49:09,399
we included<font color="#CCCCCC"> the 49</font><font color="#E5E5E5"> rounds because that's</font>

1195
00:49:06,399 --> 00:49:11,589
the cutoff date of mayhem so mayhem ran

1196
00:49:09,399 --> 00:49:14,499
into a problem where it's essentially

1197
00:49:11,589 --> 00:49:16,119
stopped talking to<font color="#E5E5E5"> the API so it was</font>

1198
00:49:14,499 --> 00:49:19,479
running<font color="#CCCCCC"> on old and outdated information</font>

1199
00:49:16,119 --> 00:49:21,759
at that point and for instance<font color="#CCCCCC"> in the</font>

1200
00:49:19,479 --> 00:49:23,259
first forty nine rounds we simply

1201
00:49:21,759 --> 00:49:27,219
captured a total of two<font color="#CCCCCC"> hundred and six</font>

1202
00:49:23,259 --> 00:49:30,999
flags where mayhem way one at the end

1203
00:49:27,219 --> 00:49:34,839
captured 185 while the lowest team

1204
00:49:30,999 --> 00:49:36,749
captured 20 and interestingly so you can

1205
00:49:34,839 --> 00:49:40,149
see that mayhem with for all secure

1206
00:49:36,749 --> 00:49:42,399
pwned the most challenged stats by far

1207
00:49:40,149 --> 00:49:44,709
in the first forty nine rounds and

1208
00:49:42,399 --> 00:49:47,169
nobody knows what would have<font color="#CCCCCC"> happened if</font>

1209
00:49:44,709 --> 00:49:49,808
it would have run another essentially

1210
00:49:47,169 --> 00:49:51,638
<font color="#E5E5E5">forty six rounds which then might have</font>

1211
00:49:49,809 --> 00:49:53,649
given<font color="#E5E5E5"> essentially that it might have</font>

1212
00:49:51,639 --> 00:49:58,630
<font color="#E5E5E5">been able to pawn possibly 30 binders</font>

1213
00:49:53,649 --> 00:50:01,419
and on the patching<font color="#CCCCCC"> site CSD acid really</font>

1214
00:49:58,630 --> 00:50:03,339
well as<font color="#E5E5E5"> inside in defending</font><font color="#CCCCCC"> the</font>

1215
00:50:01,419 --> 00:50:04,929
challenge that's by rounds so how many

1216
00:50:03,339 --> 00:50:09,009
channel is<font color="#CCCCCC"> that it sounds like they</font>

1217
00:50:04,929 --> 00:50:11,769
defend it in each round but deep breath

1218
00:50:09,009 --> 00:50:15,189
and us essentially did the best in not

1219
00:50:11,769 --> 00:50:16,738
getting exploits<font color="#CCCCCC"> for most tenants that</font>

1220
00:50:15,189 --> 00:50:19,239
<font color="#E5E5E5">so we might have taken longer</font>

1221
00:50:16,739 --> 00:50:22,569
fortunately then<font color="#E5E5E5"> see SDS for instance</font>

1222
00:50:19,239 --> 00:50:25,389
csts was very quick<font color="#CCCCCC"> in applying general</font>

1223
00:50:22,569 --> 00:50:28,299
patches that prevented a lot of exploits

1224
00:50:25,389 --> 00:50:31,209
on but they will not be essentially able

1225
00:50:28,299 --> 00:50:34,059
to patch more<font color="#CCCCCC"> fine find more fine-grain</font>

1226
00:50:31,209 --> 00:50:36,098
bucks that required more<font color="#E5E5E5"> in-depth</font>

1227
00:50:34,059 --> 00:50:40,089
patches where generate a generic

1228
00:50:36,099 --> 00:50:41,649
patching strategy didn't work there's

1229
00:50:40,089 --> 00:50:45,429
some stupid box that we of course ran

1230
00:50:41,649 --> 00:50:48,699
into because while testing as that is

1231
00:50:45,429 --> 00:50:49,779
not our<font color="#CCCCCC"> strength there's one for</font>

1232
00:50:48,699 --> 00:50:52,389
instance which was network traffic

1233
00:50:49,779 --> 00:50:54,459
synchronizations to our one of all

1234
00:50:52,389 --> 00:50:56,499
components try to download all of the

1235
00:50:54,459 --> 00:50:59,019
network traffic for all previous rounds

1236
00:50:56,499 --> 00:51:00,698
every round instead of just downloading

1237
00:50:59,019 --> 00:51:03,698
the one from the<font color="#E5E5E5"> last</font><font color="#CCCCCC"> round that</font>

1238
00:51:00,699 --> 00:51:05,499
<font color="#CCCCCC">actually let ended up and kind of</font><font color="#E5E5E5"> a</font>

1239
00:51:03,699 --> 00:51:07,209
problem as soon as you start hitting

1240
00:51:05,499 --> 00:51:09,788
like 20 rounds because then you start to

1241
00:51:07,209 --> 00:51:12,819
try to download gigabytes of data within

1242
00:51:09,789 --> 00:51:14,350
like a 20 second interval<font color="#CCCCCC"> that doesn't</font>

1243
00:51:12,819 --> 00:51:16,330
<font color="#E5E5E5">really work as well</font>

1244
00:51:14,350 --> 00:51:18,279
then we also<font color="#CCCCCC"> had a race condition our</font>

1245
00:51:16,330 --> 00:51:21,490
submission logic<font color="#E5E5E5"> to</font><font color="#CCCCCC"> essentially which</font>

1246
00:51:18,280 --> 00:51:23,680
forced us to resubmit and add specific

1247
00:51:21,490 --> 00:51:26,439
boundaries of the round which then means

1248
00:51:23,680 --> 00:51:29,589
if you submit twice because of a race

1249
00:51:26,440 --> 00:51:33,220
condition you actually<font color="#CCCCCC"> are hit twice by</font>

1250
00:51:29,590 --> 00:51:34,450
downtime because your first deploying in

1251
00:51:33,220 --> 00:51:35,980
this round and you having down time<font color="#E5E5E5"> the</font>

1252
00:51:34,450 --> 00:51:38,049
<font color="#E5E5E5">next round then the next round you're</font>

1253
00:51:35,980 --> 00:51:41,280
deploying again and then you have

1254
00:51:38,050 --> 00:51:43,720
downtime and<font color="#CCCCCC"> they're the one after again</font>

1255
00:51:41,280 --> 00:51:45,580
another<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that we run into was</font>

1256
00:51:43,720 --> 00:51:48,549
really slow scheduling from Cuba natives

1257
00:51:45,580 --> 00:51:50,799
so my search sometimes try to schedule

1258
00:51:48,550 --> 00:51:53,350
two thousand to three thousand jobs

1259
00:51:50,800 --> 00:51:55,990
every minute or simply to at least

1260
00:51:53,350 --> 00:51:59,440
shuffle them around and coordinators was

1261
00:51:55,990 --> 00:52:01,660
sometimes as slow as<font color="#E5E5E5"> ten at most 20</font>

1262
00:51:59,440 --> 00:52:04,270
different containers with jobs per

1263
00:52:01,660 --> 00:52:06,009
second and if you try to do that the

1264
00:52:04,270 --> 00:52:08,259
math there that<font color="#E5E5E5"> doesn't necessarily work</font>

1265
00:52:06,010 --> 00:52:10,870
out so after the minute you since we

1266
00:52:08,260 --> 00:52:14,620
have like 800 jobs left that you want to

1267
00:52:10,870 --> 00:52:17,319
schedule these were some of the<font color="#E5E5E5"> things</font>

1268
00:52:14,620 --> 00:52:19,630
that<font color="#E5E5E5"> we simply really had problems with</font>

1269
00:52:17,320 --> 00:52:24,760
and none of them we have figured<font color="#E5E5E5"> out so</font>

1270
00:52:19,630 --> 00:52:26,620
far we think this is going<font color="#E5E5E5"> to walk</font><font color="#CCCCCC"> into</font>

1271
00:52:24,760 --> 00:52:29,320
<font color="#E5E5E5">a</font><font color="#CCCCCC"> specific direction and that's</font>

1272
00:52:26,620 --> 00:52:32,170
essentially human augmentation we think

1273
00:52:29,320 --> 00:52:34,720
that exploiting everything by machine is

1274
00:52:32,170 --> 00:52:37,450
not going to work but everything's

1275
00:52:34,720 --> 00:52:39,850
flooding by human is still very<font color="#E5E5E5"> labor</font>

1276
00:52:37,450 --> 00:52:41,710
<font color="#E5E5E5">intensive there are a lot of things that</font>

1277
00:52:39,850 --> 00:52:43,390
essentially if you start to<font color="#E5E5E5"> essentially</font>

1278
00:52:41,710 --> 00:52:46,090
exploit something a lot<font color="#E5E5E5"> of things that a</font>

1279
00:52:43,390 --> 00:52:48,129
machine can help you with and that's

1280
00:52:46,090 --> 00:52:50,470
essentially what exactly what we did for

1281
00:52:48,130 --> 00:52:53,260
<font color="#E5E5E5">the DEFCON CTF that followed the cyber</font>

1282
00:52:50,470 --> 00:52:55,830
grand challenge and I was really

1283
00:52:53,260 --> 00:52:58,030
<font color="#E5E5E5">interesting to see a the side with our</font>

1284
00:52:55,830 --> 00:53:00,220
cyber reasoning system helped and

1285
00:52:58,030 --> 00:53:02,440
<font color="#E5E5E5">essentially getting exploits so we did</font>

1286
00:53:00,220 --> 00:53:03,879
essentially<font color="#E5E5E5"> we pointed our cyber</font>

1287
00:53:02,440 --> 00:53:07,150
reasoning seems<font color="#E5E5E5"> as the mechanical fish</font>

1288
00:53:03,880 --> 00:53:09,550
to a specific point and cut in the code

1289
00:53:07,150 --> 00:53:12,790
so<font color="#E5E5E5"> we want to reach there we want to go</font>

1290
00:53:09,550 --> 00:53:14,440
there and then it's<font color="#E5E5E5"> also we came up with</font>

1291
00:53:12,790 --> 00:53:16,600
an input would essentially go there and

1292
00:53:14,440 --> 00:53:19,090
as soon as this happened<font color="#E5E5E5"> the crs took</font>

1293
00:53:16,600 --> 00:53:23,140
over<font color="#CCCCCC"> instantly generated Rob chain to</font>

1294
00:53:19,090 --> 00:53:25,750
get a fully fledged exploit and then

1295
00:53:23,140 --> 00:53:27,220
essentially also since we generated

1296
00:53:25,750 --> 00:53:28,300
adversity or patches including back

1297
00:53:27,220 --> 00:53:29,709
doors

1298
00:53:28,300 --> 00:53:32,170
really interesting to see that<font color="#CCCCCC"> some of</font>

1299
00:53:29,710 --> 00:53:34,450
<font color="#E5E5E5">the top teams actually took our patched</font>

1300
00:53:32,170 --> 00:53:35,860
binaries without understanding that

1301
00:53:34,450 --> 00:53:38,140
there was a back door and there or

1302
00:53:35,860 --> 00:53:40,180
ignoring it because it might still be a

1303
00:53:38,140 --> 00:53:42,490
patch for them because they're suddenly

1304
00:53:40,180 --> 00:53:44,410
<font color="#E5E5E5">only being hit by us and not possibly</font>

1305
00:53:42,490 --> 00:53:46,450
hit by the other teams was really

1306
00:53:44,410 --> 00:53:48,759
interesting<font color="#CCCCCC"> to see how they deployed our</font>

1307
00:53:46,450 --> 00:53:52,089
back door and then giving<font color="#E5E5E5"> us access to</font>

1308
00:53:48,760 --> 00:53:53,920
their flags one other thing is API

1309
00:53:52,090 --> 00:53:56,230
incompatibility compatibilities are

1310
00:53:53,920 --> 00:53:59,170
really brutal so since the diapers or

1311
00:53:56,230 --> 00:54:01,870
grin challenge people did<font color="#CCCCCC"> not open</font>

1312
00:53:59,170 --> 00:54:04,060
source their competition framework

1313
00:54:01,870 --> 00:54:05,560
before<font color="#E5E5E5"> obviously because</font><font color="#CCCCCC"> they didn't</font>

1314
00:54:04,060 --> 00:54:08,770
want<font color="#E5E5E5"> to get it</font><font color="#CCCCCC"> attacked during</font><font color="#E5E5E5"> the</font>

1315
00:54:05,560 --> 00:54:11,140
competition we ran and thinking to<font color="#E5E5E5"> like</font>

1316
00:54:08,770 --> 00:54:12,730
probably a day and a half of just trying

1317
00:54:11,140 --> 00:54:15,910
to fix<font color="#E5E5E5"> little</font><font color="#CCCCCC"> API coninck rabbit</font>

1318
00:54:12,730 --> 00:54:17,950
abilities<font color="#CCCCCC"> even though the DEFCON CTF and</font>

1319
00:54:15,910 --> 00:54:22,180
diaper cyber Grand Challenge are running

1320
00:54:17,950 --> 00:54:23,649
the same API we have<font color="#E5E5E5"> open sourced all of</font>

1321
00:54:22,180 --> 00:54:25,779
the code that<font color="#E5E5E5"> we wrote for the darpa</font>

1322
00:54:23,650 --> 00:54:28,740
grand challenge so all of the different

1323
00:54:25,780 --> 00:54:31,590
components that we have our open source

1324
00:54:28,740 --> 00:54:34,990
that includes<font color="#CCCCCC"> Meister ambassador</font>

1325
00:54:31,590 --> 00:54:36,970
<font color="#CCCCCC">on-screen</font><font color="#E5E5E5"> bar</font><font color="#CCCCCC"> farnsworth rags color Gert</font>

1326
00:54:34,990 --> 00:54:39,609
<font color="#CCCCCC">Network dude all</font><font color="#E5E5E5"> of them are open source</font>

1327
00:54:36,970 --> 00:54:42,730
and get up all of them<font color="#E5E5E5"> are licensed</font>

1328
00:54:39,610 --> 00:54:45,490
<font color="#E5E5E5">under bsd license so you can take them</font>

1329
00:54:42,730 --> 00:54:47,980
and play around<font color="#E5E5E5"> with it this ansible</font>

1330
00:54:45,490 --> 00:54:49,990
scripts to deploy everything some of

1331
00:54:47,980 --> 00:54:51,370
them might not<font color="#E5E5E5"> work on your</font>

1332
00:54:49,990 --> 00:54:54,100
infrastructure readily because<font color="#E5E5E5"> they</font>

1333
00:54:51,370 --> 00:54:56,410
really tailor to the CTF<font color="#CCCCCC"> any</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> cgc</font>

1334
00:54:54,100 --> 00:55:00,220
infrastructure that they gave us but if

1335
00:54:56,410 --> 00:55:02,410
you since the open and issue there we

1336
00:55:00,220 --> 00:55:07,600
can easily<font color="#E5E5E5"> essentially look into that it</font>

1337
00:55:02,410 --> 00:55:09,520
fix<font color="#E5E5E5"> it of course this is like a huge</font>

1338
00:55:07,600 --> 00:55:11,799
effort not only in our side but also

1339
00:55:09,520 --> 00:55:13,390
since<font color="#E5E5E5"> lay a huge effort from other open</font>

1340
00:55:11,800 --> 00:55:15,850
source components that we relied on and

1341
00:55:13,390 --> 00:55:19,420
we<font color="#E5E5E5"> just want to give them a huge shout</font>

1342
00:55:15,850 --> 00:55:21,210
<font color="#E5E5E5">out um these are both operating systems</font>

1343
00:55:19,420 --> 00:55:23,710
going down to essentially

1344
00:55:21,210 --> 00:55:26,350
<font color="#CCCCCC">containerization to senseless scheduling</font>

1345
00:55:23,710 --> 00:55:30,670
on large clusters and of course

1346
00:55:26,350 --> 00:55:33,970
obviously AFL with that I would<font color="#E5E5E5"> like to</font>

1347
00:55:30,670 --> 00:55:36,490
thank you for your<font color="#CCCCCC"> attention please stay</font>

1348
00:55:33,970 --> 00:55:39,160
in touch you can<font color="#E5E5E5"> follow us</font><font color="#CCCCCC"> on Twitter</font>

1349
00:55:36,490 --> 00:55:42,129
the full self esteem or everyone

1350
00:55:39,160 --> 00:55:44,140
individually if you are a student

1351
00:55:42,130 --> 00:55:45,819
and you're<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for an internship or</font>

1352
00:55:44,140 --> 00:55:48,339
<font color="#CCCCCC">master Cesar so you just want</font><font color="#E5E5E5"> to</font>

1353
00:55:45,819 --> 00:55:51,788
consider doing a PhD in the US feel free

1354
00:55:48,339 --> 00:55:53,740
<font color="#CCCCCC">to come</font><font color="#E5E5E5"> and talk to me our lab loves to</font>

1355
00:55:51,789 --> 00:55:55,990
take people therefore essentially come

1356
00:55:53,740 --> 00:55:58,240
for three to six months do a project and

1357
00:55:55,990 --> 00:56:10,118
<font color="#E5E5E5">then decide possibly move on with their</font>

1358
00:55:58,240 --> 00:56:15,038
life thank you we might have<font color="#E5E5E5"> time for</font>

1359
00:56:10,119 --> 00:56:21,130
one single question but I understand

1360
00:56:15,039 --> 00:56:22,779
<font color="#E5E5E5">it's late so maybe not you can always</font>

1361
00:56:21,130 --> 00:56:25,359
catch Kevin you're here the next few

1362
00:56:22,779 --> 00:56:28,029
days yeah<font color="#CCCCCC"> all right so catch you in the</font>

1363
00:56:25,359 --> 00:56:29,410
next few days<font color="#E5E5E5"> and go get ready to hop on</font>

1364
00:56:28,029 --> 00:56:30,789
your buses there's a bus for the

1365
00:56:29,410 --> 00:56:33,399
<font color="#E5E5E5">speakers there's a bus for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> non</font>

1366
00:56:30,789 --> 00:56:36,420
speakers so if you want<font color="#E5E5E5"> to go to the</font>

1367
00:56:33,400 --> 00:56:41,130
<font color="#CCCCCC">city feel free to</font><font color="#E5E5E5"> get on the bus and</font>

1368
00:56:36,420 --> 00:56:41,130
thank<font color="#E5E5E5"> you for today and thank you Kevin</font>

