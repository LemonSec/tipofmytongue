1
00:00:02,560 --> 00:00:06,310
<font color="#E5E5E5">okay so hi everyone</font><font color="#CCCCCC"> and thank you for</font>

2
00:00:05,260 --> 00:00:08,230
<font color="#E5E5E5">joining me</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this talk</font>

3
00:00:06,310 --> 00:00:10,750
my name is<font color="#E5E5E5"> Mathieu tall I'm real excited</font>

4
00:00:08,230 --> 00:00:12,910
to<font color="#E5E5E5"> be here today and I got you and I</font>

5
00:00:10,750 --> 00:00:16,149
both shrubs intention today<font color="#E5E5E5"> about how to</font>

6
00:00:12,910 --> 00:00:17,680
debug a process from the hypervisor<font color="#CCCCCC"> so</font>

7
00:00:16,149 --> 00:00:19,509
the agenda<font color="#CCCCCC"> for today is that</font><font color="#E5E5E5"> we are</font>

8
00:00:17,680 --> 00:00:21,340
<font color="#E5E5E5">going to review what are the concrete</font>

9
00:00:19,510 --> 00:00:23,350
benefits of having hypervisor level

10
00:00:21,340 --> 00:00:25,450
debuggers they're going<font color="#E5E5E5"> to quickly</font>

11
00:00:23,350 --> 00:00:27,550
review<font color="#CCCCCC"> the existing</font><font color="#E5E5E5"> projects and I'm</font>

12
00:00:25,450 --> 00:00:31,150
going to<font color="#E5E5E5"> explain why I decided</font><font color="#CCCCCC"> to start</font>

13
00:00:27,550 --> 00:00:33,760
my own implementation of<font color="#E5E5E5"> this tool first</font>

14
00:00:31,150 --> 00:00:36,429
<font color="#E5E5E5">Who am I</font><font color="#CCCCCC"> I'm currently a researcher at</font>

15
00:00:33,760 --> 00:00:39,608
f-secure well I'm focusing on building

16
00:00:36,429 --> 00:00:42,850
<font color="#CCCCCC">Sun box solutions and mainly stealth Sun</font>

17
00:00:39,609 --> 00:00:46,690
boxes so my main focus<font color="#E5E5E5"> is on the</font><font color="#CCCCCC"> other</font>

18
00:00:42,850 --> 00:00:48,819
machine introspection<font color="#CCCCCC"> VMI is let's say a</font>

19
00:00:46,690 --> 00:00:50,920
way to analyze<font color="#E5E5E5"> the contents of a virtual</font>

20
00:00:48,819 --> 00:00:53,350
machine<font color="#E5E5E5"> from the outside from</font><font color="#CCCCCC"> the</font>

21
00:00:50,920 --> 00:00:56,440
hypervisor level and I did that

22
00:00:53,350 --> 00:00:59,760
<font color="#CCCCCC">expression especially on on a VM so the</font>

23
00:00:56,440 --> 00:01:02,769
k vm<font color="#E5E5E5"> VMI project is what I've started</font><font color="#CCCCCC"> to</font>

24
00:00:59,760 --> 00:01:07,658
let's say<font color="#E5E5E5"> a common</font><font color="#CCCCCC"> effort to bring an</font>

25
00:01:02,769 --> 00:01:10,840
official<font color="#CCCCCC"> VMI API on KVM</font><font color="#E5E5E5"> that's me to my</font>

26
00:01:07,659 --> 00:01:13,740
<font color="#E5E5E5">background</font><font color="#CCCCCC"> so now it's not why</font><font color="#E5E5E5"> why</font>

27
00:01:10,840 --> 00:01:16,450
hypervisor level debuggers<font color="#E5E5E5"> are relevant</font>

28
00:01:13,740 --> 00:01:18,699
the first<font color="#E5E5E5"> problem I can think of is</font><font color="#CCCCCC"> my</font>

29
00:01:16,450 --> 00:01:21,820
<font color="#CCCCCC">own arises it's because the burgers</font><font color="#E5E5E5"> are</font>

30
00:01:18,700 --> 00:01:24,579
noisy<font color="#E5E5E5"> the debugger will always modify</font>

31
00:01:21,820 --> 00:01:27,250
let's say the<font color="#E5E5E5"> execution environments of</font>

32
00:01:24,579 --> 00:01:30,639
<font color="#E5E5E5">a debug</font><font color="#CCCCCC"> II it's kind of this observer</font>

33
00:01:27,250 --> 00:01:32,109
effect that you cannot avoid<font color="#E5E5E5"> and usually</font>

34
00:01:30,640 --> 00:01:36,159
it's not a<font color="#E5E5E5"> problem until</font><font color="#CCCCCC"> you have to</font>

35
00:01:32,109 --> 00:01:40,030
deal<font color="#E5E5E5"> with a malware but the core problem</font>

36
00:01:36,159 --> 00:01:41,710
of that is that our<font color="#CCCCCC"> debugging API our</font>

37
00:01:40,030 --> 00:01:44,289
operating<font color="#E5E5E5"> system debugging FBI</font><font color="#CCCCCC"> I've</font>

38
00:01:41,710 --> 00:01:46,119
never been designed<font color="#E5E5E5"> to deal with</font><font color="#CCCCCC"> my rels</font>

39
00:01:44,289 --> 00:01:49,090
<font color="#E5E5E5">in the first place</font><font color="#CCCCCC"> and we are</font><font color="#E5E5E5"> still</font>

40
00:01:46,119 --> 00:01:52,090
trying to<font color="#E5E5E5"> a nice memory of that so we</font>

41
00:01:49,090 --> 00:01:53,170
are building workarounds and and it's

42
00:01:52,090 --> 00:01:54,850
not really<font color="#CCCCCC"> working so and we need to</font>

43
00:01:53,170 --> 00:01:57,340
find more permanent<font color="#CCCCCC"> solution to</font><font color="#E5E5E5"> this</font>

44
00:01:54,850 --> 00:02:00,669
problem<font color="#E5E5E5"> the second</font><font color="#CCCCCC"> Primerica I can</font><font color="#E5E5E5"> think</font>

45
00:01:57,340 --> 00:02:03,520
of is<font color="#CCCCCC"> that sometime this</font><font color="#E5E5E5"> observer</font><font color="#CCCCCC"> effect</font>

46
00:02:00,670 --> 00:02:04,929
<font color="#E5E5E5">is intentional sometimes you have some</font>

47
00:02:03,520 --> 00:02:06,579
<font color="#E5E5E5">closed source operating systems out</font>

48
00:02:04,929 --> 00:02:09,780
<font color="#E5E5E5">there which are just trying to protect</font>

49
00:02:06,579 --> 00:02:12,730
their features if you<font color="#CCCCCC"> enable the debug</font>

50
00:02:09,780 --> 00:02:14,520
debugging on on<font color="#CCCCCC"> windows</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> will disable</font>

51
00:02:12,730 --> 00:02:16,109
<font color="#E5E5E5">first patch guard</font>

52
00:02:14,520 --> 00:02:18,630
and then<font color="#E5E5E5"> disable the protected media</font>

53
00:02:16,110 --> 00:02:22,530
pass the protect media<font color="#E5E5E5"> buff is a</font>

54
00:02:18,630 --> 00:02:24,570
<font color="#E5E5E5">requirement to</font><font color="#CCCCCC"> analyze - let's say it</font>

55
00:02:22,530 --> 00:02:27,180
<font color="#CCCCCC">starts with protected environment to</font>

56
00:02:24,570 --> 00:02:29,549
<font color="#E5E5E5">allow the execution of a</font><font color="#CCCCCC"> drm</font><font color="#E5E5E5"> so if you</font>

57
00:02:27,180 --> 00:02:31,920
want<font color="#E5E5E5"> to analyze drm execution you know</font>

58
00:02:29,550 --> 00:02:35,220
<font color="#E5E5E5">let's use a debugger for that because</font>

59
00:02:31,920 --> 00:02:38,010
it's protected<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> third</font><font color="#E5E5E5"> program</font><font color="#CCCCCC"> I</font>

60
00:02:35,220 --> 00:02:40,350
can<font color="#E5E5E5"> think of is that what you see here</font>

61
00:02:38,010 --> 00:02:43,799
is the virtualization based<font color="#CCCCCC"> modsecurity</font>

62
00:02:40,350 --> 00:02:45,750
<font color="#E5E5E5">model of Windows 10 you have the normal</font>

63
00:02:43,800 --> 00:02:48,360
kernel supported from the secure kernel

64
00:02:45,750 --> 00:02:50,790
<font color="#E5E5E5">and you have hyper-v managing all of</font>

65
00:02:48,360 --> 00:02:52,350
<font color="#E5E5E5">that you can analyze and debug the</font>

66
00:02:50,790 --> 00:02:54,510
normal cone on there is an extension to

67
00:02:52,350 --> 00:02:57,030
<font color="#E5E5E5">debug the hyper-v kernel</font><font color="#CCCCCC"> drop hyper-v</font>

68
00:02:54,510 --> 00:03:00,480
sorry but there is so<font color="#E5E5E5"> far not an easy</font>

69
00:02:57,030 --> 00:03:03,050
way to debug<font color="#E5E5E5"> the secure kernel so we may</font>

70
00:03:00,480 --> 00:03:05,579
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> find a solution</font><font color="#CCCCCC"> for that also</font>

71
00:03:03,050 --> 00:03:07,590
so the solution I<font color="#E5E5E5"> would like to use is</font>

72
00:03:05,580 --> 00:03:11,250
<font color="#E5E5E5">to stop hacking around in the kernel and</font>

73
00:03:07,590 --> 00:03:13,530
rebase<font color="#E5E5E5"> our entire debugging platforms on</font>

74
00:03:11,250 --> 00:03:16,050
<font color="#CCCCCC">the hypervisor itself</font><font color="#E5E5E5"> to gain more</font>

75
00:03:13,530 --> 00:03:16,680
privileges first what we're gain is

76
00:03:16,050 --> 00:03:19,280
<font color="#E5E5E5">stealth</font>

77
00:03:16,680 --> 00:03:21,540
the stealth we need to analyze<font color="#CCCCCC"> my rails</font>

78
00:03:19,280 --> 00:03:23,670
first<font color="#E5E5E5"> because we are not</font><font color="#CCCCCC"> using the</font>

79
00:03:21,540 --> 00:03:25,769
operating system debug<font color="#E5E5E5"> API of course so</font>

80
00:03:23,670 --> 00:03:28,410
we<font color="#CCCCCC"> don't leave</font><font color="#E5E5E5"> any traces and the second</font>

81
00:03:25,770 --> 00:03:30,840
<font color="#E5E5E5">thing is that we can use invisible debug</font>

82
00:03:28,410 --> 00:03:33,959
break points thanks to EPT violations

83
00:03:30,840 --> 00:03:36,060
and<font color="#E5E5E5"> the second advantage is</font><font color="#CCCCCC"> that we'll</font>

84
00:03:33,959 --> 00:03:38,370
<font color="#E5E5E5">have the full system analyzes the</font>

85
00:03:36,060 --> 00:03:43,410
hypervisor<font color="#E5E5E5"> has</font><font color="#CCCCCC"> a full view of a system</font>

86
00:03:38,370 --> 00:03:45,480
of the guest<font color="#CCCCCC"> state at any time so you</font>

87
00:03:43,410 --> 00:03:48,150
have the<font color="#E5E5E5"> entire control and on top</font><font color="#CCCCCC"> of</font>

88
00:03:45,480 --> 00:03:50,579
<font color="#E5E5E5">that you</font><font color="#CCCCCC"> can debug</font><font color="#E5E5E5"> good loaders because</font>

89
00:03:48,150 --> 00:03:54,990
your debugger is available from the<font color="#E5E5E5"> time</font>

90
00:03:50,580 --> 00:03:56,180
your protein system is booting but more

91
00:03:54,990 --> 00:03:58,410
<font color="#E5E5E5">than that you have some benefits</font>

92
00:03:56,180 --> 00:04:00,660
<font color="#CCCCCC">depending how you implement Sharper by</font>

93
00:03:58,410 --> 00:04:02,940
the liver debugger<font color="#CCCCCC"> you can have</font>

94
00:04:00,660 --> 00:04:04,910
unmodified<font color="#E5E5E5"> guest you can use your raw</font>

95
00:04:02,940 --> 00:04:07,920
veteran machine right<font color="#E5E5E5"> away</font>

96
00:04:04,910 --> 00:04:10,980
so no serial cable no specific hardware

97
00:04:07,920 --> 00:04:13,140
and the specific guest configuration to

98
00:04:10,980 --> 00:04:14,310
enable the<font color="#E5E5E5"> debugging and plus you have</font>

99
00:04:13,140 --> 00:04:16,140
<font color="#CCCCCC">this on the flight debugging so</font>

100
00:04:14,310 --> 00:04:18,540
debugging a virtual machine<font color="#E5E5E5"> without</font>

101
00:04:16,140 --> 00:04:21,209
<font color="#E5E5E5">having to reboot it I'll change the</font>

102
00:04:18,540 --> 00:04:23,669
configuration and<font color="#CCCCCC"> the last benefit I can</font>

103
00:04:21,209 --> 00:04:25,970
think<font color="#E5E5E5"> of is that</font><font color="#CCCCCC"> what we</font><font color="#E5E5E5"> want we can aim</font>

104
00:04:23,669 --> 00:04:27,510
<font color="#CCCCCC">for is the cross-platform debugging</font>

105
00:04:25,970 --> 00:04:29,910
<font color="#E5E5E5">infrastructure</font>

106
00:04:27,510 --> 00:04:32,969
where my hypervisor<font color="#E5E5E5"> is able to debug the</font>

107
00:04:29,910 --> 00:04:35,670
kernel of Windows Linux and<font color="#CCCCCC"> Mac OS</font><font color="#E5E5E5"> with</font>

108
00:04:32,970 --> 00:04:39,180
the same tool<font color="#E5E5E5"> think about it we can have</font>

109
00:04:35,670 --> 00:04:40,290
<font color="#CCCCCC">an ice agnostic debugger which on</font><font color="#E5E5E5"> top of</font>

110
00:04:39,180 --> 00:04:42,690
which<font color="#CCCCCC"> you are building</font><font color="#E5E5E5"> your knowledge</font>

111
00:04:40,290 --> 00:04:48,840
<font color="#E5E5E5">and your scripts so it's quite</font>

112
00:04:42,690 --> 00:04:51,690
convenient so now it's reviewed existing

113
00:04:48,840 --> 00:04:54,030
projects that we have and the video

114
00:04:51,690 --> 00:04:56,460
<font color="#CCCCCC">history</font><font color="#E5E5E5"> are they used are remain</font>

115
00:04:54,030 --> 00:04:58,320
contained<font color="#E5E5E5"> I</font><font color="#CCCCCC"> fitted this into two</font>

116
00:04:56,460 --> 00:05:01,620
categories the first<font color="#E5E5E5"> one is bare metal</font>

117
00:04:58,320 --> 00:05:03,990
debuggers<font color="#E5E5E5"> this kind of debuggers are in</font>

118
00:05:01,620 --> 00:05:05,850
<font color="#CCCCCC">are being used</font><font color="#E5E5E5"> to a debug real</font><font color="#CCCCCC"> hardware</font>

119
00:05:03,990 --> 00:05:08,580
<font color="#E5E5E5">so the first one I can</font><font color="#CCCCCC"> think of is</font>

120
00:05:05,850 --> 00:05:10,920
<font color="#CCCCCC">hybrid EBG</font><font color="#E5E5E5"> hybrid EBG what they wanted</font>

121
00:05:08,580 --> 00:05:12,900
<font color="#E5E5E5">to do is to see</font><font color="#CCCCCC"> if it was possible to</font>

122
00:05:10,920 --> 00:05:16,020
<font color="#E5E5E5">take the full control our production</font>

123
00:05:12,900 --> 00:05:17,729
system for forensic<font color="#CCCCCC"> purposes and how did</font>

124
00:05:16,020 --> 00:05:20,460
they do that is by using<font color="#E5E5E5"> a</font><font color="#CCCCCC"> term called</font>

125
00:05:17,730 --> 00:05:22,440
<font color="#E5E5E5">hyper</font><font color="#CCCCCC"> jackin hyper jackin is that</font><font color="#E5E5E5"> I'm</font>

126
00:05:20,460 --> 00:05:24,210
<font color="#E5E5E5">going to take my</font><font color="#CCCCCC"> hosts</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> viateur eyes</font>

127
00:05:22,440 --> 00:05:28,050
it on the fly so<font color="#E5E5E5"> dynamically I'm going</font>

128
00:05:24,210 --> 00:05:29,580
to insert a hypervisor<font color="#CCCCCC"> on the fly so</font>

129
00:05:28,050 --> 00:05:31,350
beforehand<font color="#E5E5E5"> they are they've been</font>

130
00:05:29,580 --> 00:05:34,890
<font color="#E5E5E5">building a driver and in studying it on</font>

131
00:05:31,350 --> 00:05:37,350
the on the<font color="#E5E5E5"> host and this is this rising</font>

132
00:05:34,890 --> 00:05:38,849
the<font color="#E5E5E5"> host using the driver so everything</font>

133
00:05:37,350 --> 00:05:41,070
<font color="#CCCCCC">happens</font><font color="#E5E5E5"> on the same machine</font><font color="#CCCCCC"> and if you</font>

134
00:05:38,850 --> 00:05:42,870
press the key f12<font color="#E5E5E5"> you have this</font>

135
00:05:41,070 --> 00:05:46,380
graphical interface which is<font color="#CCCCCC"> appearing</font>

136
00:05:42,870 --> 00:05:48,480
and which is the debugger itself<font color="#E5E5E5"> now the</font>

137
00:05:46,380 --> 00:05:51,450
problem<font color="#E5E5E5"> with that is that</font><font color="#CCCCCC"> hypervisor is</font>

138
00:05:48,480 --> 00:05:55,650
<font color="#E5E5E5">writing directly to the video card frame</font>

139
00:05:51,450 --> 00:05:57,510
buffer so it's hardly maintainable<font color="#E5E5E5"> let's</font>

140
00:05:55,650 --> 00:05:59,789
move to the next<font color="#CCCCCC"> project without DB g</font>

141
00:05:57,510 --> 00:06:01,650
VAR DB<font color="#E5E5E5"> g what</font><font color="#CCCCCC"> i wanted to do is to</font>

142
00:05:59,790 --> 00:06:03,510
analyze<font color="#CCCCCC"> password and patrick rod</font>

143
00:06:01,650 --> 00:06:06,929
specifically the obfuscation<font color="#E5E5E5"> behind</font>

144
00:06:03,510 --> 00:06:08,940
patch guard so the same idea<font color="#CCCCCC"> using hyper</font>

145
00:06:06,930 --> 00:06:12,000
<font color="#CCCCCC">jackin but this time it's a bit</font><font color="#E5E5E5"> better</font>

146
00:06:08,940 --> 00:06:14,250
because<font color="#E5E5E5"> well they used a DMA attack to</font>

147
00:06:12,000 --> 00:06:16,230
have<font color="#E5E5E5"> a read and write</font><font color="#CCCCCC"> access to</font><font color="#E5E5E5"> the</font>

148
00:06:14,250 --> 00:06:18,810
<font color="#CCCCCC">physical memory and inject their own</font>

149
00:06:16,230 --> 00:06:20,580
driver<font color="#E5E5E5"> into into Windows</font>

150
00:06:18,810 --> 00:06:22,050
so it's bit better because the guest

151
00:06:20,580 --> 00:06:23,520
doesn't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> that's what's happening and</font>

152
00:06:22,050 --> 00:06:24,390
<font color="#E5E5E5">you</font><font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> to install a driver</font>

153
00:06:23,520 --> 00:06:26,700
beforehand

154
00:06:24,390 --> 00:06:30,479
everything happens dynamically<font color="#E5E5E5"> and the</font>

155
00:06:26,700 --> 00:06:32,310
driver is injected into the guest so

156
00:06:30,480 --> 00:06:34,170
it's better than<font color="#CCCCCC"> hyper hyper</font><font color="#E5E5E5"> gene in</font>

157
00:06:32,310 --> 00:06:35,910
this way and<font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> DVD protocol</font>

158
00:06:34,170 --> 00:06:39,270
because<font color="#E5E5E5"> if there is a client and a</font>

159
00:06:35,910 --> 00:06:41,479
server<font color="#E5E5E5"> but you can do better and first</font>

160
00:06:39,270 --> 00:06:44,490
<font color="#CCCCCC">dbg is doing better than</font><font color="#E5E5E5"> that</font>

161
00:06:41,479 --> 00:06:47,159
<font color="#CCCCCC">what he wanted to do first was to</font><font color="#E5E5E5"> have a</font>

162
00:06:44,490 --> 00:06:49,650
better windbg UI<font color="#E5E5E5"> that's what's the main</font>

163
00:06:47,160 --> 00:06:51,569
<font color="#CCCCCC">reason why I started</font><font color="#E5E5E5"> this project so I</font>

164
00:06:49,650 --> 00:06:53,729
started reversing the windbg protocol

165
00:06:51,569 --> 00:06:55,680
and at the same time<font color="#E5E5E5"> he realized he was</font>

166
00:06:53,729 --> 00:06:57,539
also<font color="#E5E5E5"> writing a hypervisor</font><font color="#CCCCCC"> so he said</font>

167
00:06:55,680 --> 00:06:59,880
<font color="#CCCCCC">okay I can merge both of this project in</font>

168
00:06:57,539 --> 00:07:02,849
the same tool that's what he did and

169
00:06:59,880 --> 00:07:05,580
with<font color="#CCCCCC"> proxy BG you have to okay change</font>

170
00:07:02,849 --> 00:07:08,159
your boot sequence<font color="#E5E5E5"> because the</font>

171
00:07:05,580 --> 00:07:11,190
hypervisor<font color="#E5E5E5"> is written inside</font><font color="#CCCCCC"> an EFI</font>

172
00:07:08,160 --> 00:07:12,840
module so when you put your<font color="#E5E5E5"> pansy</font>

173
00:07:11,190 --> 00:07:15,509
protein system you're going<font color="#E5E5E5"> to boot on</font>

174
00:07:12,840 --> 00:07:17,549
either a USB key or<font color="#CCCCCC"> a TV FTP server</font>

175
00:07:15,509 --> 00:07:19,590
which is going<font color="#E5E5E5"> to provide you this EFI</font>

176
00:07:17,550 --> 00:07:20,729
audio and then<font color="#CCCCCC"> it's going</font><font color="#E5E5E5"> to be able to</font>

177
00:07:19,590 --> 00:07:23,460
<font color="#E5E5E5">get your eyes any operating system</font>

178
00:07:20,729 --> 00:07:24,990
behind<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so first DVD is better than</font>

179
00:07:23,460 --> 00:07:25,500
the<font color="#E5E5E5"> previous one because there's no</font>

180
00:07:24,990 --> 00:07:29,460
<font color="#E5E5E5">driver</font>

181
00:07:25,500 --> 00:07:30,930
it's an ef5 module and then there is

182
00:07:29,460 --> 00:07:33,239
another<font color="#E5E5E5"> category which I would call</font>

183
00:07:30,930 --> 00:07:34,860
<font color="#CCCCCC">theater</font><font color="#E5E5E5"> machine debuggers on this</font>

184
00:07:33,240 --> 00:07:37,199
category<font color="#CCCCCC"> Rob</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> we want to debug</font>

185
00:07:34,860 --> 00:07:39,270
virtual address and we take an existing

186
00:07:37,199 --> 00:07:43,680
hypervisor and we are trying<font color="#E5E5E5"> to build</font>

187
00:07:39,270 --> 00:07:45,659
<font color="#E5E5E5">our debugging API inside it the first</font>

188
00:07:43,680 --> 00:07:48,479
one<font color="#E5E5E5"> in particular can think of is pirate</font>

189
00:07:45,659 --> 00:07:50,419
<font color="#CCCCCC">box</font><font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> heard of it</font><font color="#CCCCCC"> what I wanted</font>

190
00:07:48,479 --> 00:07:53,250
to have is let's say a diamond<font color="#E5E5E5"> dynamic</font>

191
00:07:50,419 --> 00:07:55,159
instrumentation system a<font color="#CCCCCC"> high-level</font>

192
00:07:53,250 --> 00:07:58,740
<font color="#E5E5E5">we've a lot of callbacks</font>

193
00:07:55,159 --> 00:08:00,599
<font color="#E5E5E5">so instrumented the whole Kim Kim</font><font color="#CCCCCC"> you as</font>

194
00:07:58,740 --> 00:08:01,860
an emulator<font color="#E5E5E5"> they added plenty</font><font color="#CCCCCC"> of</font>

195
00:08:00,599 --> 00:08:04,199
callbacks<font color="#E5E5E5"> inside it and it's great</font>

196
00:08:01,860 --> 00:08:06,419
<font color="#E5E5E5">because you can have even callbacks on</font>

197
00:08:04,199 --> 00:08:08,699
instruction level or when a block starts

198
00:08:06,419 --> 00:08:10,948
of end<font color="#E5E5E5"> and on top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that you have</font>

199
00:08:08,699 --> 00:08:13,199
<font color="#CCCCCC">high-level</font><font color="#E5E5E5"> scripts in Python to</font>

200
00:08:10,949 --> 00:08:15,210
introspect the guest<font color="#E5E5E5"> so it's really</font>

201
00:08:13,199 --> 00:08:18,090
great<font color="#CCCCCC"> for my mind Maran arises</font><font color="#E5E5E5"> and it's</font>

202
00:08:15,210 --> 00:08:21,479
maintained at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same time and the</font>

203
00:08:18,090 --> 00:08:25,198
second project<font color="#E5E5E5"> I have is our</font><font color="#CCCCCC"> VM I so I</font>

204
00:08:21,479 --> 00:08:27,000
<font color="#CCCCCC">VMI what he wanted to do is to see why</font><font color="#E5E5E5"> a</font>

205
00:08:25,199 --> 00:08:29,759
<font color="#E5E5E5">marathon Paul didn't run in their</font>

206
00:08:27,000 --> 00:08:32,039
sandbox<font color="#E5E5E5"> and analyze it understand it</font>

207
00:08:29,759 --> 00:08:34,050
so they took free call as the eventual

208
00:08:32,039 --> 00:08:37,380
<font color="#CCCCCC">record</font><font color="#E5E5E5"> the memory forensic framework</font>

209
00:08:34,049 --> 00:08:39,718
<font color="#CCCCCC">throttle</font><font color="#E5E5E5"> volatility and the I did a</font>

210
00:08:37,380 --> 00:08:42,510
debugger on<font color="#CCCCCC"> top of it and at the added</font>

211
00:08:39,719 --> 00:08:44,760
<font color="#CCCCCC">the instrumented</font><font color="#E5E5E5"> KVM hypervisor to</font><font color="#CCCCCC"> add</font>

212
00:08:42,510 --> 00:08:46,760
breakpoints inside it so it's also

213
00:08:44,760 --> 00:08:49,380
<font color="#E5E5E5">maintained and it's really a great tool</font>

214
00:08:46,760 --> 00:08:51,360
so<font color="#E5E5E5"> that's a bit what what we have in</font>

215
00:08:49,380 --> 00:08:54,600
<font color="#E5E5E5">terms of hypervisor</font><font color="#CCCCCC"> level debuggers</font>

216
00:08:51,360 --> 00:08:57,209
<font color="#E5E5E5">project as of today but now we're</font>

217
00:08:54,600 --> 00:09:00,089
<font color="#E5E5E5">we move from here</font><font color="#CCCCCC"> should I use one of</font>

218
00:08:57,209 --> 00:09:02,599
these projects or no<font color="#E5E5E5"> well what I want to</font>

219
00:09:00,089 --> 00:09:04,980
do is<font color="#CCCCCC"> my analysis</font><font color="#E5E5E5"> that's my first goal</font>

220
00:09:02,600 --> 00:09:07,500
<font color="#E5E5E5">the premise that I don't want to</font><font color="#CCCCCC"> use</font>

221
00:09:04,980 --> 00:09:09,509
<font color="#CCCCCC">Pyrrha</font><font color="#E5E5E5"> box because it's emulation based</font>

222
00:09:07,500 --> 00:09:11,910
and I would like<font color="#E5E5E5"> to keep the speed of</font>

223
00:09:09,509 --> 00:09:13,800
hardware<font color="#E5E5E5"> virtualization</font><font color="#CCCCCC"> and I'm very</font>

224
00:09:11,910 --> 00:09:17,279
<font color="#E5E5E5">interested in our EMI</font><font color="#CCCCCC"> it looks really</font>

225
00:09:13,800 --> 00:09:19,889
<font color="#E5E5E5">great</font><font color="#CCCCCC"> and I'm going to have to let's say</font>

226
00:09:17,279 --> 00:09:20,880
<font color="#CCCCCC">some issue of the design</font><font color="#E5E5E5"> of our</font><font color="#CCCCCC"> VMI I'd</font>

227
00:09:19,889 --> 00:09:23,430
like to improve it

228
00:09:20,880 --> 00:09:25,920
<font color="#E5E5E5">so our keep our EMI as a focus and</font>

229
00:09:23,430 --> 00:09:27,899
<font color="#E5E5E5">improve improve it what we what you're</font>

230
00:09:25,920 --> 00:09:30,959
seeing is that<font color="#E5E5E5"> say a</font><font color="#CCCCCC"> somatic version of</font>

231
00:09:27,899 --> 00:09:33,240
the design<font color="#CCCCCC"> of our VMI</font><font color="#E5E5E5"> we take Rico as</font>

232
00:09:30,959 --> 00:09:38,069
the main tool<font color="#E5E5E5"> and then we are going to</font>

233
00:09:33,240 --> 00:09:39,810
<font color="#CCCCCC">add a debugger</font><font color="#E5E5E5"> on top of it which is</font>

234
00:09:38,069 --> 00:09:42,660
<font color="#CCCCCC">communicating with communicating with</font>

235
00:09:39,810 --> 00:09:45,630
<font color="#E5E5E5">Kim UK via on top of this what I would</font>

236
00:09:42,660 --> 00:09:48,800
<font color="#CCCCCC">like</font><font color="#E5E5E5"> to do is to first add vmi</font>

237
00:09:45,630 --> 00:09:51,779
introspection<font color="#CCCCCC"> that you're out</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> a</font>

238
00:09:48,800 --> 00:09:53,969
<font color="#E5E5E5">hypervisor via my</font><font color="#CCCCCC"> layer so I don't want</font>

239
00:09:51,779 --> 00:09:57,899
to be tied<font color="#CCCCCC"> to</font><font color="#E5E5E5"> one specific hypervisor</font>

240
00:09:53,970 --> 00:09:59,310
<font color="#E5E5E5">like the hypervisor independence and the</font>

241
00:09:57,899 --> 00:10:01,589
second modification<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I would like</font>

242
00:09:59,310 --> 00:10:03,899
<font color="#E5E5E5">to take a good reverse engineering tool</font>

243
00:10:01,589 --> 00:10:05,550
of the burger as my main tool and add

244
00:10:03,899 --> 00:10:07,560
the spore introspection<font color="#E5E5E5"> layer on top of</font>

245
00:10:05,550 --> 00:10:13,439
<font color="#CCCCCC">it the goal is to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> more maintainable</font>

246
00:10:07,560 --> 00:10:15,420
in the future that's my design how do

247
00:10:13,439 --> 00:10:17,519
you how<font color="#E5E5E5"> can you be hypervisor agnostic</font>

248
00:10:15,420 --> 00:10:20,459
where we have a<font color="#CCCCCC"> library for that it's go</font>

249
00:10:17,519 --> 00:10:23,040
<font color="#E5E5E5">live</font><font color="#CCCCCC"> VM I leave VMI is</font><font color="#E5E5E5"> a very VMI</font>

250
00:10:20,459 --> 00:10:24,779
abstraction layer it will take<font color="#E5E5E5"> care of</font>

251
00:10:23,040 --> 00:10:27,120
for<font color="#E5E5E5"> you of</font><font color="#CCCCCC"> low-level details like</font>

252
00:10:24,779 --> 00:10:31,050
parsing the page tables or intercepting

253
00:10:27,120 --> 00:10:33,060
<font color="#CCCCCC">hardware events and</font><font color="#E5E5E5"> if you also offer</font>

254
00:10:31,050 --> 00:10:34,920
you some basic introspection<font color="#CCCCCC"> like</font>

255
00:10:33,060 --> 00:10:37,680
translating<font color="#CCCCCC"> a kernel symbol to other</font>

256
00:10:34,920 --> 00:10:39,500
<font color="#E5E5E5">advice but the more important</font><font color="#CCCCCC"> thing to</font>

257
00:10:37,680 --> 00:10:43,709
remember<font color="#E5E5E5"> about the VMI in that</font><font color="#CCCCCC"> it</font>

258
00:10:39,500 --> 00:10:47,000
<font color="#E5E5E5">defines you and unified it's a VMI</font>

259
00:10:43,709 --> 00:10:49,109
interface across<font color="#E5E5E5"> all hypervisors</font>

260
00:10:47,000 --> 00:10:52,139
so if you want<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> live in my</font>

261
00:10:49,110 --> 00:10:54,959
application you use VMI as as the first

262
00:10:52,139 --> 00:10:57,269
library<font color="#E5E5E5"> so what does the hypervisor</font>

263
00:10:54,959 --> 00:11:00,000
support for<font color="#CCCCCC"> IBM I exam is fully</font>

264
00:10:57,269 --> 00:11:02,459
supported at this moment<font color="#CCCCCC"> they have a</font>

265
00:11:00,000 --> 00:11:04,410
registered memory<font color="#E5E5E5"> and hardware events</font>

266
00:11:02,459 --> 00:11:06,268
and KVM is on its way

267
00:11:04,410 --> 00:11:09,860
thanks to be defender<font color="#E5E5E5"> who have been</font>

268
00:11:06,269 --> 00:11:09,860
<font color="#E5E5E5">writing awesome patches for that</font>

269
00:11:10,240 --> 00:11:15,980
so this is my final architecture I will

270
00:11:13,519 --> 00:11:17,839
use<font color="#CCCCCC"> rod re</font><font color="#E5E5E5"> as well as the main tool</font><font color="#CCCCCC"> for</font>

271
00:11:15,980 --> 00:11:19,610
debugging<font color="#CCCCCC"> because it's really flexible</font>

272
00:11:17,839 --> 00:11:21,589
and<font color="#E5E5E5"> it allows me</font><font color="#CCCCCC"> to write</font><font color="#E5E5E5"> a debugger</font>

273
00:11:19,610 --> 00:11:24,500
back<font color="#E5E5E5"> back-end and implement my own</font>

274
00:11:21,589 --> 00:11:26,360
debugger<font color="#E5E5E5"> with plugins</font><font color="#CCCCCC"> I will I write an</font>

275
00:11:24,500 --> 00:11:27,920
<font color="#CCCCCC">i origin which will deal with English</font>

276
00:11:26,360 --> 00:11:30,589
<font color="#CCCCCC">icing leave Vienna in</font><font color="#E5E5E5"> accessing the</font>

277
00:11:27,920 --> 00:11:33,110
memory and a debug<font color="#CCCCCC"> plug-in which will</font>

278
00:11:30,589 --> 00:11:38,870
deal with all the hardware<font color="#E5E5E5"> events and</font>

279
00:11:33,110 --> 00:11:44,720
the<font color="#E5E5E5"> debugging events so as the status of</font>

280
00:11:38,870 --> 00:11:47,750
<font color="#E5E5E5">this project as of today well</font><font color="#CCCCCC"> what I</font><font color="#E5E5E5"> can</font>

281
00:11:44,720 --> 00:11:50,269
do today<font color="#E5E5E5"> is to intercept a process in</font>

282
00:11:47,750 --> 00:11:52,660
<font color="#E5E5E5">the guests using intercepting the CR</font>

283
00:11:50,269 --> 00:11:54,889
<font color="#E5E5E5">free single</font><font color="#CCCCCC"> step in the execution and</font>

284
00:11:52,660 --> 00:11:57,380
setting some memory breakpoints or

285
00:11:54,889 --> 00:12:00,980
software breakpoints<font color="#E5E5E5"> or so I can load</font>

286
00:11:57,380 --> 00:12:02,810
<font color="#E5E5E5">the symbols thanks to the recall profile</font>

287
00:12:00,980 --> 00:12:04,339
and have the whole rather to interface

288
00:12:02,810 --> 00:12:08,029
on top<font color="#E5E5E5"> of that so I've I've I've graphed</font>

289
00:12:04,339 --> 00:12:09,980
scripts structures and every and<font color="#E5E5E5"> it's or</font>

290
00:12:08,029 --> 00:12:15,430
everything<font color="#CCCCCC"> that rather to can basically</font>

291
00:12:09,980 --> 00:12:15,430
provide so now maybe let's have<font color="#CCCCCC"> a demo</font>

292
00:12:16,449 --> 00:12:29,630
<font color="#CCCCCC">DT yes okay can see</font><font color="#E5E5E5"> so I'm starting</font>

293
00:12:27,050 --> 00:12:32,719
here<font color="#E5E5E5"> my debugger</font><font color="#CCCCCC"> we've Rada this is my</font>

294
00:12:29,630 --> 00:12:34,790
VM and I'm starting by debugger and I

295
00:12:32,720 --> 00:12:38,990
would like to intercept<font color="#CCCCCC"> explore that</font><font color="#E5E5E5"> exe</font>

296
00:12:34,790 --> 00:12:41,750
as you can see<font color="#E5E5E5"> i intercepted</font><font color="#CCCCCC"> CR</font><font color="#E5E5E5"> three</font>

297
00:12:38,990 --> 00:12:43,640
loads until the<font color="#CCCCCC"> schedule of schedules</font>

298
00:12:41,750 --> 00:12:45,860
<font color="#E5E5E5">has been has been scheduling extra dot</font>

299
00:12:43,640 --> 00:12:47,959
exe<font color="#CCCCCC"> then after that I would like to load</font>

300
00:12:45,860 --> 00:12:49,910
my symbols<font color="#E5E5E5"> so that means command that</font>

301
00:12:47,959 --> 00:12:52,160
<font color="#CCCCCC">Baxter symbols to load the kernel</font>

302
00:12:49,910 --> 00:12:54,860
symbols<font color="#CCCCCC"> then I would like</font><font color="#E5E5E5"> to add</font><font color="#CCCCCC"> the</font>

303
00:12:52,160 --> 00:12:57,230
breakpoints so I have all the kernel

304
00:12:54,860 --> 00:12:59,720
symbols<font color="#CCCCCC"> loaded into</font><font color="#E5E5E5"> radar</font><font color="#CCCCCC"> too</font><font color="#E5E5E5"> and I</font>

305
00:12:57,230 --> 00:13:03,860
would<font color="#E5E5E5"> like to</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> the breakpoints on NT</font>

306
00:12:59,720 --> 00:13:08,000
<font color="#CCCCCC">Open File like this and then I'm</font><font color="#E5E5E5"> going</font>

307
00:13:03,860 --> 00:13:09,920
<font color="#CCCCCC">to</font><font color="#E5E5E5"> continue the execution</font><font color="#CCCCCC"> and I will</font>

308
00:13:08,000 --> 00:13:13,519
trigger<font color="#CCCCCC"> an T opens file by opening its</font>

309
00:13:09,920 --> 00:13:15,880
product<font color="#E5E5E5"> exe right like this and as</font><font color="#CCCCCC"> you</font>

310
00:13:13,519 --> 00:13:21,530
<font color="#E5E5E5">can see if i disassemble</font>

311
00:13:15,880 --> 00:13:25,970
we are at ng open<font color="#E5E5E5"> file the beginning of</font>

312
00:13:21,530 --> 00:13:33,589
the Cisco<font color="#CCCCCC"> also I can single step</font>

313
00:13:25,970 --> 00:13:36,080
<font color="#E5E5E5">execution like this yes and if I analyze</font>

314
00:13:33,590 --> 00:13:42,950
<font color="#E5E5E5">this Cisco I can have the graph view or</font>

315
00:13:36,080 --> 00:13:44,750
<font color="#CCCCCC">productive ok so now we have</font><font color="#E5E5E5"> to grab the</font>

316
00:13:42,950 --> 00:13:47,030
<font color="#E5E5E5">graph view a frittata</font><font color="#CCCCCC"> - I can single</font>

317
00:13:44,750 --> 00:13:50,980
step inside this graph view and you can

318
00:13:47,030 --> 00:14:00,829
have the<font color="#E5E5E5"> disassembly of</font><font color="#CCCCCC"> IOP create file</font>

319
00:13:50,980 --> 00:14:02,270
dynamically on<font color="#CCCCCC"> the fly in</font><font color="#E5E5E5"> the guest but</font>

320
00:14:00,830 --> 00:14:03,640
<font color="#CCCCCC">I would</font><font color="#E5E5E5"> like to go a bit</font><font color="#CCCCCC"> further than</font>

321
00:14:02,270 --> 00:14:06,140
<font color="#CCCCCC">that I would like</font><font color="#E5E5E5"> to have more</font>

322
00:14:03,640 --> 00:14:08,030
introspection so I developed on<font color="#E5E5E5"> top of</font>

323
00:14:06,140 --> 00:14:10,130
recall<font color="#E5E5E5"> a</font><font color="#CCCCCC"> plug-in that</font><font color="#E5E5E5"> allows me to</font>

324
00:14:08,030 --> 00:14:13,250
<font color="#E5E5E5">access live via my and access the</font>

325
00:14:10,130 --> 00:14:15,170
physical<font color="#E5E5E5"> memory of the</font><font color="#CCCCCC"> guest</font><font color="#E5E5E5"> immediately</font>

326
00:14:13,250 --> 00:14:17,360
I don't want to make<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> terms</font><font color="#E5E5E5"> I want</font>

327
00:14:15,170 --> 00:14:19,969
to<font color="#E5E5E5"> recall</font><font color="#CCCCCC"> to work on top of the physical</font>

328
00:14:17,360 --> 00:14:24,050
<font color="#CCCCCC">memory of the guest</font><font color="#E5E5E5"> that's what this</font>

329
00:14:19,970 --> 00:14:31,850
plug-in does so I can run PS<font color="#E5E5E5"> list</font>

330
00:14:24,050 --> 00:14:36,439
directly it's going to check<font color="#E5E5E5"> the</font>

331
00:14:31,850 --> 00:14:39,170
physical<font color="#CCCCCC"> memory and I can also run the</font>

332
00:14:36,440 --> 00:14:49,250
<font color="#E5E5E5">other list or</font><font color="#CCCCCC"> every any record plug-in</font>

333
00:14:39,170 --> 00:14:53,120
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you want and I can use this</font>

334
00:14:49,250 --> 00:14:55,370
introspection<font color="#E5E5E5"> to like</font><font color="#CCCCCC"> these addresses</font>

335
00:14:53,120 --> 00:14:57,440
inside<font color="#E5E5E5"> rather</font><font color="#CCCCCC"> - of course</font><font color="#E5E5E5"> here I'm going</font>

336
00:14:55,370 --> 00:14:59,420
<font color="#E5E5E5">to take the base address of a DLL</font><font color="#CCCCCC"> I'm</font>

337
00:14:57,440 --> 00:15:01,760
going to stick to<font color="#CCCCCC"> it</font><font color="#E5E5E5"> inside the physical</font>

338
00:14:59,420 --> 00:15:06,170
memory<font color="#E5E5E5"> and if I print I have the</font>

339
00:15:01,760 --> 00:15:10,400
beginning of a<font color="#CCCCCC"> PE either so now it's q2</font>

340
00:15:06,170 --> 00:15:13,250
<font color="#CCCCCC">the next demo you can script</font><font color="#E5E5E5"> with Radha</font>

341
00:15:10,400 --> 00:15:16,280
- you have read<font color="#E5E5E5"> - pipe first</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> using</font>

342
00:15:13,250 --> 00:15:18,500
here this<font color="#CCCCCC"> R I recall vmi address space</font>

343
00:15:16,280 --> 00:15:20,470
<font color="#CCCCCC">to get</font><font color="#E5E5E5"> the address of a Cisco and I</font>

344
00:15:18,500 --> 00:15:25,310
added or at<font color="#CCCCCC"> breakpoint</font><font color="#E5E5E5"> on top of it and</font>

345
00:15:20,470 --> 00:15:29,110
opening<font color="#CCCCCC"> Libra to pipe a python binding -</font>

346
00:15:25,310 --> 00:15:29,109
rather<font color="#CCCCCC"> - and continue execution</font>

347
00:15:34,870 --> 00:15:41,450
so here are<font color="#E5E5E5"> the Python script which</font>

348
00:15:37,370 --> 00:15:43,960
rerun the<font color="#E5E5E5"> SS DT</font><font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> retrieve recall</font>

349
00:15:41,450 --> 00:15:46,610
to extract the Cisco's<font color="#CCCCCC"> and/or of that</font><font color="#E5E5E5"> I</font>

350
00:15:43,960 --> 00:15:49,700
<font color="#E5E5E5">was going</font><font color="#CCCCCC"> to set a breakpoint</font><font color="#E5E5E5"> on ng</font><font color="#CCCCCC"> open</font>

351
00:15:46,610 --> 00:15:56,870
file everything happens in<font color="#E5E5E5"> Python here</font>

352
00:15:49,700 --> 00:15:58,610
so it's a<font color="#E5E5E5"> script</font><font color="#CCCCCC"> Python script</font><font color="#E5E5E5"> okay now</font>

353
00:15:56,870 --> 00:16:01,520
if I<font color="#E5E5E5"> love my prec</font><font color="#CCCCCC"> point which is set and</font>

354
00:15:58,610 --> 00:16:08,690
<font color="#E5E5E5">I can intercept</font><font color="#CCCCCC"> any open file and print</font>

355
00:16:01,520 --> 00:16:10,730
out<font color="#CCCCCC"> the object name</font><font color="#E5E5E5"> associated so now</font>

356
00:16:08,690 --> 00:16:13,250
what is the<font color="#CCCCCC"> future of</font><font color="#E5E5E5"> this project</font><font color="#CCCCCC"> I</font>

357
00:16:10,730 --> 00:16:14,420
have some challenges<font color="#E5E5E5"> of course because I</font>

358
00:16:13,250 --> 00:16:16,940
would like<font color="#E5E5E5"> not to intercept you see are</font>

359
00:16:14,420 --> 00:16:19,610
free but<font color="#CCCCCC"> to attach to a</font><font color="#E5E5E5"> fred's context</font>

360
00:16:16,940 --> 00:16:21,200
and<font color="#CCCCCC"> r.i.p i would like to break on be</font>

361
00:16:19,610 --> 00:16:22,820
able to break on<font color="#E5E5E5"> and map addresses by</font>

362
00:16:21,200 --> 00:16:24,230
injecting page<font color="#CCCCCC"> faults i would</font><font color="#E5E5E5"> like to</font>

363
00:16:22,820 --> 00:16:26,000
<font color="#E5E5E5">improve the introspection layer and</font>

364
00:16:24,230 --> 00:16:28,190
there's many challenges interesting

365
00:16:26,000 --> 00:16:30,350
<font color="#E5E5E5">challenges to be to resolved on top of</font>

366
00:16:28,190 --> 00:16:32,330
this but the important<font color="#E5E5E5"> thing is that my</font>

367
00:16:30,350 --> 00:16:34,700
<font color="#E5E5E5">goal is to do</font><font color="#CCCCCC"> more analysis</font><font color="#E5E5E5"> now like to</font>

368
00:16:32,330 --> 00:16:37,070
invent<font color="#E5E5E5"> is this kind of a framework while</font>

369
00:16:34,700 --> 00:16:39,140
<font color="#CCCCCC">you have</font><font color="#E5E5E5"> this via my</font><font color="#CCCCCC"> sandbox</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> Zelda</font>

370
00:16:37,070 --> 00:16:40,550
<font color="#CCCCCC">link this is dealing with extracting all</font>

371
00:16:39,140 --> 00:16:43,460
the<font color="#E5E5E5"> basic</font><font color="#CCCCCC"> information that</font><font color="#E5E5E5"> you can have</font>

372
00:16:40,550 --> 00:16:45,530
combined<font color="#E5E5E5"> with this</font><font color="#CCCCCC"> vmi</font><font color="#E5E5E5"> debugger which is</font>

373
00:16:43,460 --> 00:16:48,740
giving you a fine grain control over the

374
00:16:45,530 --> 00:16:50,839
malware execution<font color="#E5E5E5"> and you can also think</font>

375
00:16:48,740 --> 00:16:53,210
of use<font color="#E5E5E5"> over this case as</font><font color="#CCCCCC"> phasing or</font>

376
00:16:50,840 --> 00:16:55,700
maybe try<font color="#E5E5E5"> to debug the</font><font color="#CCCCCC"> Windows 10</font><font color="#E5E5E5"> secure</font>

377
00:16:53,210 --> 00:16:57,920
kernel the important thing to remember

378
00:16:55,700 --> 00:17:01,070
is<font color="#CCCCCC"> that right to VMI is a</font><font color="#E5E5E5"> multi-purpose</font>

379
00:16:57,920 --> 00:17:03,469
<font color="#E5E5E5">respect from</font><font color="#CCCCCC"> for system debugger</font><font color="#E5E5E5"> and by</font>

380
00:17:01,070 --> 00:17:06,020
<font color="#E5E5E5">design</font><font color="#CCCCCC"> its peel built for the long-term</font>

381
00:17:03,470 --> 00:17:11,720
<font color="#CCCCCC">reusing a maximum of components</font><font color="#E5E5E5"> and also</font>

382
00:17:06,020 --> 00:17:13,400
is hypervisor<font color="#E5E5E5"> agnostic</font><font color="#CCCCCC"> by design I would</font>

383
00:17:11,720 --> 00:17:15,800
<font color="#CCCCCC">like to thank all of these</font><font color="#E5E5E5"> people for</font>

384
00:17:13,400 --> 00:17:19,550
helping me especially<font color="#E5E5E5"> the</font><font color="#CCCCCC"> people from</font>

385
00:17:15,800 --> 00:17:22,310
<font color="#E5E5E5">radar - well me all a lot and ties for</font>

386
00:17:19,550 --> 00:17:25,810
<font color="#E5E5E5">pushing me to submit even</font><font color="#CCCCCC"> though I just</font>

387
00:17:22,310 --> 00:17:28,580
ideas in my mind<font color="#E5E5E5"> for this project and</font>

388
00:17:25,810 --> 00:17:30,110
I'm available for questions<font color="#CCCCCC"> thank you</font>

389
00:17:28,580 --> 00:17:33,439
<font color="#E5E5E5">for attention</font>

390
00:17:30,110 --> 00:17:33,439
[Applause]

391
00:17:35,100 --> 00:17:45,459
hey thank you<font color="#E5E5E5"> so any questions in</font><font color="#CCCCCC"> the in</font>

392
00:17:38,740 --> 00:17:46,690
the room<font color="#CCCCCC"> in questions okay as</font><font color="#E5E5E5"> we short</font>

393
00:17:45,460 --> 00:17:48,820
for time<font color="#E5E5E5"> we'll move on you're gonna be</font>

394
00:17:46,690 --> 00:17:50,770
<font color="#CCCCCC">around</font><font color="#E5E5E5"> so people have I'll be around</font>

395
00:17:48,820 --> 00:18:01,060
<font color="#E5E5E5">thank you oh there's a question</font><font color="#CCCCCC"> over</font>

396
00:17:50,770 --> 00:18:04,330
<font color="#E5E5E5">there just a quick one can you put the</font>

397
00:18:01,060 --> 00:18:06,250
github address back up<font color="#E5E5E5"> after that</font><font color="#CCCCCC"> all</font>

398
00:18:04,330 --> 00:18:10,139
right<font color="#CCCCCC"> maybe I was a bit quick because of</font>

399
00:18:06,250 --> 00:18:10,140
<font color="#E5E5E5">the time but here you go</font>

400
00:18:11,940 --> 00:18:20,130
sure any more questions or requests for

401
00:18:16,990 --> 00:18:22,330
<font color="#E5E5E5">other slides</font><font color="#CCCCCC"> am I getting</font><font color="#E5E5E5"> in the way</font>

402
00:18:20,130 --> 00:18:23,050
<font color="#E5E5E5">okay well thank</font><font color="#CCCCCC"> you again Matthew</font><font color="#E5E5E5"> thank</font>

403
00:18:22,330 --> 00:18:28,030
you everyone

404
00:18:23,050 --> 00:18:28,030
[Applause]

