1
00:00:03,790 --> 00:00:08,120
hello<font color="#E5E5E5"> everybody so it's really</font><font color="#CCCCCC"> great to</font>

2
00:00:07,399 --> 00:00:10,460
<font color="#E5E5E5">be back</font>

3
00:00:08,119 --> 00:00:13,370
I guess<font color="#E5E5E5"> hacking is one of my favorites</font>

4
00:00:10,460 --> 00:00:15,740
<font color="#CCCCCC">conference ever I will be talking about</font>

5
00:00:13,370 --> 00:00:18,410
rape exploitation but don't be really

6
00:00:15,740 --> 00:00:21,650
happy about<font color="#CCCCCC"> that</font><font color="#E5E5E5"> because it's not sort</font>

7
00:00:18,410 --> 00:00:24,320
of<font color="#E5E5E5"> proper</font><font color="#CCCCCC"> towards it I will be talking</font>

8
00:00:21,650 --> 00:00:28,849
mostly<font color="#E5E5E5"> about the things that</font><font color="#CCCCCC"> are not</font>

9
00:00:24,320 --> 00:00:31,160
<font color="#CCCCCC">working at all and that's why it makes</font>

10
00:00:28,850 --> 00:00:32,960
<font color="#CCCCCC">it really important to talk</font><font color="#E5E5E5"> to tell that</font>

11
00:00:31,160 --> 00:00:35,780
this is<font color="#CCCCCC"> thing something</font><font color="#E5E5E5"> that I'm doing</font>

12
00:00:32,960 --> 00:00:41,059
<font color="#E5E5E5">my free time and my free time I really</font>

13
00:00:35,780 --> 00:00:44,659
mean like<font color="#E5E5E5"> after work weekends as some</font><font color="#CCCCCC"> of</font>

14
00:00:41,059 --> 00:00:49,059
<font color="#E5E5E5">you know doing slides around the world</font>

15
00:00:44,659 --> 00:00:52,638
and um so don't be<font color="#E5E5E5"> into</font><font color="#CCCCCC"> Demento it's</font>

16
00:00:49,059 --> 00:00:54,799
really free time stuff<font color="#E5E5E5"> and another thing</font>

17
00:00:52,639 --> 00:00:55,909
is I'm<font color="#CCCCCC"> not</font><font color="#E5E5E5"> of an ability research that</font>

18
00:00:54,799 --> 00:00:59,600
means that everything that<font color="#E5E5E5"> I'm doing</font>

19
00:00:55,909 --> 00:01:02,629
<font color="#E5E5E5">here is like experimental and mostly</font>

20
00:00:59,600 --> 00:01:05,900
theoretical because<font color="#E5E5E5"> for those that know</font>

21
00:01:02,629 --> 00:01:06,890
me knows that I do a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of mess so</font>

22
00:01:05,900 --> 00:01:10,430
about me

23
00:01:06,890 --> 00:01:12,890
I like binaries so<font color="#E5E5E5"> it doesn't really</font>

24
00:01:10,430 --> 00:01:15,020
<font color="#E5E5E5">matter which kind of binaries as long as</font>

25
00:01:12,890 --> 00:01:21,620
they are<font color="#E5E5E5"> compiled and I really like</font>

26
00:01:15,020 --> 00:01:25,039
assembly I work mostly with x86<font color="#E5E5E5"> but I</font>

27
00:01:21,620 --> 00:01:26,870
also try to do<font color="#E5E5E5"> stuff in MIPS and other</font>

28
00:01:25,040 --> 00:01:29,690
kind of stuff

29
00:01:26,870 --> 00:01:32,090
I am also<font color="#CCCCCC"> korra member and board member</font>

30
00:01:29,690 --> 00:01:34,220
<font color="#CCCCCC">of black</font><font color="#E5E5E5"> hoodie that's a reverse</font>

31
00:01:32,090 --> 00:01:36,530
engineering boot camp<font color="#E5E5E5"> just for women</font>

32
00:01:34,220 --> 00:01:39,440
that we<font color="#CCCCCC"> organized it wants to</font><font color="#E5E5E5"> know in a</font>

33
00:01:36,530 --> 00:01:43,190
year<font color="#E5E5E5"> plus some spin-offs like we had</font>

34
00:01:39,440 --> 00:01:46,610
this Monday here<font color="#CCCCCC"> trakula I am also in</font>

35
00:01:43,190 --> 00:01:51,158
<font color="#CCCCCC">the program committee but I cannot vote</font>

36
00:01:46,610 --> 00:01:53,780
for<font color="#E5E5E5"> my talk</font><font color="#CCCCCC"> so don't worry</font><font color="#E5E5E5"> about it</font><font color="#CCCCCC"> I'm</font>

37
00:01:51,159 --> 00:01:58,520
also working<font color="#CCCCCC"> for disobey as a</font>

38
00:01:53,780 --> 00:02:00,590
technicality<font color="#E5E5E5"> of content there</font><font color="#CCCCCC"> I give</font>

39
00:01:58,520 --> 00:02:03,440
lots of<font color="#CCCCCC"> workshops on assembly reverse</font>

40
00:02:00,590 --> 00:02:06,350
engineering and<font color="#E5E5E5"> other stuff</font><font color="#CCCCCC"> and I'm</font>

41
00:02:03,440 --> 00:02:07,820
trying to<font color="#E5E5E5"> get really good at karaoke</font><font color="#CCCCCC"> so</font>

42
00:02:06,350 --> 00:02:09,449
that's the most important<font color="#CCCCCC"> thing that you</font>

43
00:02:07,820 --> 00:02:12,890
should<font color="#E5E5E5"> know about me</font>

44
00:02:09,449 --> 00:02:15,959
I'm terrible but I'm working on that<font color="#E5E5E5"> so</font>

45
00:02:12,890 --> 00:02:22,099
what<font color="#E5E5E5"> I'm going to talk about today here</font>

46
00:02:15,959 --> 00:02:26,250
is about constraint logic programming

47
00:02:22,099 --> 00:02:28,890
<font color="#CCCCCC">solvers static analysis and</font><font color="#E5E5E5"> all the</font>

48
00:02:26,250 --> 00:02:35,220
<font color="#E5E5E5">problems that you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> with that about</font>

49
00:02:28,890 --> 00:02:37,679
memory<font color="#E5E5E5"> of course and heap or kind of so</font>

50
00:02:35,220 --> 00:02:39,450
the first<font color="#E5E5E5"> question that I have is always</font>

51
00:02:37,680 --> 00:02:43,200
like such as empty what are you talking

52
00:02:39,450 --> 00:02:45,510
about so it's<font color="#E5E5E5"> just a sober</font><font color="#CCCCCC"> it's</font>

53
00:02:43,200 --> 00:02:48,209
something<font color="#CCCCCC"> that it's going to solve our</font>

54
00:02:45,510 --> 00:02:51,000
problems<font color="#E5E5E5"> sounds good right and the</font>

55
00:02:48,209 --> 00:02:53,250
problem is so<font color="#CCCCCC"> birds are</font><font color="#E5E5E5"> that like the</font>

56
00:02:51,000 --> 00:02:56,310
such problem is unknown at your ethical

57
00:02:53,250 --> 00:02:58,230
problem is np-complete problem that

58
00:02:56,310 --> 00:03:01,200
means you cannot solve it without

59
00:02:58,230 --> 00:03:04,738
<font color="#CCCCCC">Garifuna</font><font color="#E5E5E5"> it easily not in a way that</font><font color="#CCCCCC"> we</font>

60
00:03:01,200 --> 00:03:06,988
know how<font color="#E5E5E5"> to do it and everything needs</font>

61
00:03:04,739 --> 00:03:09,450
to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> written in boolean functions and</font>

62
00:03:06,989 --> 00:03:11,880
that's<font color="#E5E5E5"> pretty complex so you cannot</font>

63
00:03:09,450 --> 00:03:13,858
easily<font color="#E5E5E5"> describe the whole words just</font>

64
00:03:11,880 --> 00:03:16,140
with logic right<font color="#E5E5E5"> so that's the reason</font>

65
00:03:13,859 --> 00:03:18,510
<font color="#E5E5E5">people are working on SMT solvers that's</font>

66
00:03:16,140 --> 00:03:22,078
like a<font color="#CCCCCC"> front-end not like web</font>

67
00:03:18,510 --> 00:03:23,670
applications<font color="#CCCCCC"> fronting a bit dirtier</font><font color="#E5E5E5"> but</font>

68
00:03:22,079 --> 00:03:28,350
<font color="#CCCCCC">it's just you a front-end that</font><font color="#E5E5E5"> makes it</font>

69
00:03:23,670 --> 00:03:31,070
easier<font color="#CCCCCC"> to write</font><font color="#E5E5E5"> real</font><font color="#CCCCCC"> word problems</font><font color="#E5E5E5"> in a</font>

70
00:03:28,350 --> 00:03:38,608
<font color="#E5E5E5">way that it's translated to boolean</font>

71
00:03:31,070 --> 00:03:40,260
logic<font color="#E5E5E5"> so how</font><font color="#CCCCCC"> this day's work is mostly</font>

72
00:03:38,609 --> 00:03:42,390
like you have something<font color="#CCCCCC"> like this</font>

73
00:03:40,260 --> 00:03:44,850
<font color="#E5E5E5">picture</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> server's are going to</font>

74
00:03:42,390 --> 00:03:47,220
try<font color="#E5E5E5"> to reason about questions that you</font>

75
00:03:44,850 --> 00:03:50,820
make<font color="#E5E5E5"> about</font><font color="#CCCCCC"> it so you have the situation</font>

76
00:03:47,220 --> 00:03:52,560
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you are seeing here</font><font color="#CCCCCC"> and the</font>

77
00:03:50,820 --> 00:03:55,530
<font color="#E5E5E5">question is can</font><font color="#CCCCCC"> I go outside without</font>

78
00:03:52,560 --> 00:03:57,269
getting wet<font color="#CCCCCC"> so the server is going</font><font color="#E5E5E5"> to</font>

79
00:03:55,530 --> 00:03:59,400
<font color="#E5E5E5">look at it and you'll see</font><font color="#CCCCCC"> okay there is</font>

80
00:03:57,269 --> 00:04:03,690
a lot<font color="#CCCCCC"> of tough water on the street it</font>

81
00:03:59,400 --> 00:04:06,090
looks like rain so oh wait I<font color="#E5E5E5"> see people</font>

82
00:04:03,690 --> 00:04:08,329
<font color="#CCCCCC">with umbrellas</font><font color="#E5E5E5"> and they are not wet so</font>

83
00:04:06,090 --> 00:04:11,730
it<font color="#E5E5E5"> will give yes there is a possibility</font>

84
00:04:08,329 --> 00:04:14,310
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is getting an umbrella and then you</font>

85
00:04:11,730 --> 00:04:16,709
say<font color="#CCCCCC"> no that</font><font color="#E5E5E5"> is not going</font><font color="#CCCCCC"> to work with me</font>

86
00:04:14,310 --> 00:04:19,500
I<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have an umbrella</font><font color="#E5E5E5"> what else and</font>

87
00:04:16,709 --> 00:04:20,099
then it<font color="#E5E5E5"> will check again and say yeah so</font>

88
00:04:19,500 --> 00:04:21,810
nope

89
00:04:20,099 --> 00:04:23,360
you don't have a chance to get outside

90
00:04:21,810 --> 00:04:26,340
without<font color="#E5E5E5"> getting wet</font>

91
00:04:23,360 --> 00:04:29,880
and so I'm talking<font color="#CCCCCC"> about about call</font>

92
00:04:26,340 --> 00:04:31,950
<font color="#CCCCCC">strings</font><font color="#E5E5E5"> and I realized that the easiest</font>

93
00:04:29,880 --> 00:04:35,460
way<font color="#CCCCCC"> to explain</font><font color="#E5E5E5"> what constraints are is</font>

94
00:04:31,950 --> 00:04:37,469
like looking at<font color="#E5E5E5"> a maze</font><font color="#CCCCCC"> the constraints</font>

95
00:04:35,460 --> 00:04:39,960
would be like walls inside this maze so

96
00:04:37,470 --> 00:04:42,090
at<font color="#E5E5E5"> first you don't have so many walls so</font>

97
00:04:39,960 --> 00:04:43,799
you can<font color="#E5E5E5"> find more ways to</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> from the</font>

98
00:04:42,090 --> 00:04:45,690
<font color="#CCCCCC">beginning to the end and every time that</font>

99
00:04:43,800 --> 00:04:47,160
<font color="#CCCCCC">you wear</font><font color="#E5E5E5"> the constraint</font><font color="#CCCCCC"> yeah it's</font><font color="#E5E5E5"> like</font>

100
00:04:45,690 --> 00:04:49,680
you<font color="#CCCCCC"> are adding out whoa</font>

101
00:04:47,160 --> 00:04:51,480
<font color="#E5E5E5">India maze so it's getting harder and</font>

102
00:04:49,680 --> 00:04:53,700
<font color="#CCCCCC">harder and the paths towards the</font>

103
00:04:51,480 --> 00:04:58,020
beginning<font color="#E5E5E5"> to the end are less and less</font>

104
00:04:53,700 --> 00:05:00,360
<font color="#CCCCCC">ER and this is</font><font color="#E5E5E5"> the coat</font><font color="#CCCCCC"> that you were</font>

105
00:04:58,020 --> 00:05:02,640
always going<font color="#E5E5E5"> to see in my talks because</font>

106
00:05:00,360 --> 00:05:06,540
<font color="#CCCCCC">that's the guy that like mostly</font><font color="#E5E5E5"> inspired</font>

107
00:05:02,640 --> 00:05:11,039
<font color="#CCCCCC">me to change from other styles</font><font color="#E5E5E5"> so</font>

108
00:05:06,540 --> 00:05:13,050
computer science<font color="#CCCCCC"> and that's it he told</font>

109
00:05:11,040 --> 00:05:15,180
<font color="#E5E5E5">me that</font><font color="#CCCCCC"> tastes</font><font color="#E5E5E5"> something that can solve</font>

110
00:05:13,050 --> 00:05:20,610
my problems without<font color="#E5E5E5"> me having to do that</font>

111
00:05:15,180 --> 00:05:22,260
<font color="#E5E5E5">so why not</font><font color="#CCCCCC"> and what I use to solve my</font>

112
00:05:20,610 --> 00:05:27,000
<font color="#CCCCCC">problems is something that it's using</font>

113
00:05:22,260 --> 00:05:29,750
constraint programming and also<font color="#CCCCCC"> solvers</font>

114
00:05:27,000 --> 00:05:32,640
<font color="#E5E5E5">that's they automate Siri</font><font color="#CCCCCC"> improvement so</font>

115
00:05:29,750 --> 00:05:36,450
if you want to<font color="#CCCCCC"> know how the</font><font color="#E5E5E5"> essence of</font>

116
00:05:32,640 --> 00:05:38,460
is self work<font color="#E5E5E5"> or like internals of the</font>

117
00:05:36,450 --> 00:05:41,400
<font color="#E5E5E5">logic inside we can talk about that</font>

118
00:05:38,460 --> 00:05:44,880
<font color="#E5E5E5">later</font><font color="#CCCCCC"> offline because that's</font><font color="#E5E5E5"> just 45</font>

119
00:05:41,400 --> 00:05:47,640
minutes<font color="#E5E5E5"> but you can assume that's a</font>

120
00:05:44,880 --> 00:05:49,610
black box<font color="#E5E5E5"> you put a problem inside</font><font color="#CCCCCC"> our</font>

121
00:05:47,640 --> 00:05:53,280
<font color="#CCCCCC">feet like we did before which the ring</font>

122
00:05:49,610 --> 00:05:55,290
and if I can get outside<font color="#E5E5E5"> and everything</font>

123
00:05:53,280 --> 00:05:56,549
and<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is over</font><font color="#CCCCCC"> will analyze all the</font>

124
00:05:55,290 --> 00:05:59,160
constraints<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> have of the</font>

125
00:05:56,550 --> 00:06:01,380
situation and limitations<font color="#E5E5E5"> and then it's</font>

126
00:05:59,160 --> 00:06:04,320
a is it feasible or<font color="#CCCCCC"> not to do what you</font>

127
00:06:01,380 --> 00:06:06,930
want<font color="#E5E5E5"> and the good part of it is like</font>

128
00:06:04,320 --> 00:06:09,630
it's<font color="#CCCCCC"> not</font><font color="#E5E5E5"> just saying to you yeah you can</font>

129
00:06:06,930 --> 00:06:12,750
do<font color="#E5E5E5"> that but also how how you can achieve</font>

130
00:06:09,630 --> 00:06:15,990
<font color="#E5E5E5">with all your</font><font color="#CCCCCC"> constraints to solve your</font>

131
00:06:12,750 --> 00:06:18,870
problem the way you want<font color="#E5E5E5"> and</font><font color="#CCCCCC"> why is it</font>

132
00:06:15,990 --> 00:06:20,570
interesting<font color="#E5E5E5"> is like people were using it</font>

133
00:06:18,870 --> 00:06:24,320
before<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> mess</font>

134
00:06:20,570 --> 00:06:27,110
the mathematicians wanted to take small

135
00:06:24,320 --> 00:06:30,050
little pieces of problems<font color="#CCCCCC"> put them</font>

136
00:06:27,110 --> 00:06:32,240
<font color="#E5E5E5">together to solve bigger</font><font color="#CCCCCC"> ones so you had</font>

137
00:06:30,050 --> 00:06:36,050
<font color="#CCCCCC">like these problems that</font><font color="#E5E5E5"> are worth</font>

138
00:06:32,240 --> 00:06:38,990
<font color="#CCCCCC">millions on the list like big equals</font><font color="#E5E5E5"> NP</font>

139
00:06:36,050 --> 00:06:41,750
right so you can model small<font color="#E5E5E5"> parts of</font>

140
00:06:38,990 --> 00:06:43,760
this problem<font color="#CCCCCC"> put</font><font color="#E5E5E5"> inside</font><font color="#CCCCCC"> an SMT solver</font>

141
00:06:41,750 --> 00:06:48,470
and try to<font color="#CCCCCC"> solve</font><font color="#E5E5E5"> and infer that the</font>

142
00:06:43,760 --> 00:06:50,750
bigger one is also<font color="#E5E5E5"> feasible</font><font color="#CCCCCC"> why do we</font>

143
00:06:48,470 --> 00:06:52,340
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to do that in computer science you</font>

144
00:06:50,750 --> 00:06:54,350
can think<font color="#E5E5E5"> about code verification right</font>

145
00:06:52,340 --> 00:06:56,869
<font color="#E5E5E5">you have like hardware and software and</font>

146
00:06:54,350 --> 00:06:58,490
<font color="#E5E5E5">you want to</font><font color="#CCCCCC"> verify that</font><font color="#E5E5E5"> it's actually</font>

147
00:06:56,870 --> 00:07:00,610
working<font color="#E5E5E5"> the way it's supposed to do</font>

148
00:06:58,490 --> 00:07:03,350
so you<font color="#E5E5E5"> can have like little asserts</font>

149
00:07:00,610 --> 00:07:05,180
really small piece of<font color="#E5E5E5"> code asserting</font>

150
00:07:03,350 --> 00:07:06,830
that it's doing this right the<font color="#CCCCCC"> thing</font>

151
00:07:05,180 --> 00:07:09,650
<font color="#E5E5E5">that you want to do and then</font><font color="#CCCCCC"> you can</font>

152
00:07:06,830 --> 00:07:12,950
<font color="#CCCCCC">escape it and</font><font color="#E5E5E5"> then you have light</font><font color="#CCCCCC"> scalar</font>

153
00:07:09,650 --> 00:07:15,799
verification<font color="#CCCCCC"> people</font><font color="#E5E5E5"> that are also using</font>

154
00:07:12,950 --> 00:07:18,320
SMT solvers<font color="#CCCCCC"> in logic for computer</font>

155
00:07:15,800 --> 00:07:20,990
science at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> lung sack pickup they are</font>

156
00:07:18,320 --> 00:07:23,240
actually implementing<font color="#CCCCCC"> the logic inside</font>

157
00:07:20,990 --> 00:07:25,460
the<font color="#E5E5E5"> parses so that the language itself</font>

158
00:07:23,240 --> 00:07:29,450
is safe so you cannot do much wrong if

159
00:07:25,460 --> 00:07:32,989
you are using the right<font color="#CCCCCC"> parts and how I</font>

160
00:07:29,450 --> 00:07:35,060
use<font color="#CCCCCC"> it also</font><font color="#E5E5E5"> in other people it's for</font>

161
00:07:32,990 --> 00:07:37,460
symbolic<font color="#CCCCCC"> engines</font><font color="#E5E5E5"> symbolic</font><font color="#CCCCCC"> execution</font>

162
00:07:35,060 --> 00:07:39,440
<font color="#CCCCCC">engines so symbolically the question is</font>

163
00:07:37,460 --> 00:07:41,510
<font color="#E5E5E5">just like exploring</font><font color="#CCCCCC"> the code with</font>

164
00:07:39,440 --> 00:07:45,410
symbolic<font color="#CCCCCC"> values in that</font><font color="#E5E5E5"> so you don't</font>

165
00:07:41,510 --> 00:07:47,060
<font color="#E5E5E5">have like concrete input you have like</font>

166
00:07:45,410 --> 00:07:50,270
symbolic input and you go through<font color="#CCCCCC"> the</font>

167
00:07:47,060 --> 00:07:53,150
<font color="#E5E5E5">whole code like that and combine with</font>

168
00:07:50,270 --> 00:07:56,359
SMT solvers<font color="#CCCCCC"> like I am using and other</font>

169
00:07:53,150 --> 00:07:58,640
engines<font color="#E5E5E5"> to it will reason about if</font><font color="#CCCCCC"> if a</font>

170
00:07:56,360 --> 00:08:00,530
path is doable or not if you<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to</font>

171
00:07:58,640 --> 00:08:03,080
explore<font color="#E5E5E5"> the path or not if it makes</font>

172
00:08:00,530 --> 00:08:09,260
<font color="#E5E5E5">sense if it's unreachable anyway and so</font>

173
00:08:03,080 --> 00:08:10,969
on so it looks<font color="#CCCCCC"> like this one you know</font><font color="#E5E5E5"> if</font>

174
00:08:09,260 --> 00:08:13,060
you look at<font color="#E5E5E5"> the code</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> easier to</font>

175
00:08:10,970 --> 00:08:16,820
understand but<font color="#E5E5E5"> in a theoretical</font><font color="#CCCCCC"> approach</font>

176
00:08:13,060 --> 00:08:18,410
that I mostly talk about here is your

177
00:08:16,820 --> 00:08:20,630
<font color="#CCCCCC">extender language that you're having</font><font color="#E5E5E5"> are</font>

178
00:08:18,410 --> 00:08:22,820
turning machine with<font color="#E5E5E5"> symbolic values so</font>

179
00:08:20,630 --> 00:08:25,159
then you can explore<font color="#CCCCCC"> your whole code</font>

180
00:08:22,820 --> 00:08:27,170
without using like<font color="#E5E5E5"> concrete values and</font>

181
00:08:25,160 --> 00:08:29,150
then<font color="#E5E5E5"> you can find bugs in your code</font>

182
00:08:27,170 --> 00:08:31,340
without<font color="#E5E5E5"> even as accusing it without</font>

183
00:08:29,150 --> 00:08:32,718
<font color="#E5E5E5">needing to further you first-first it</font>

184
00:08:31,340 --> 00:08:34,520
because you have the domains that<font color="#CCCCCC"> are</font>

185
00:08:32,719 --> 00:08:35,800
possible<font color="#E5E5E5"> and you find something that</font>

186
00:08:34,520 --> 00:08:38,960
it's not

187
00:08:35,799 --> 00:08:41,209
<font color="#CCCCCC">I really is the algorithmic like just to</font>

188
00:08:38,960 --> 00:08:43,490
get<font color="#E5E5E5"> an idea how</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> like</font>

189
00:08:41,210 --> 00:08:45,680
this<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> create processes every time</font>

190
00:08:43,490 --> 00:08:47,410
that<font color="#E5E5E5"> you reach a</font><font color="#CCCCCC"> state and then you have</font>

191
00:08:45,680 --> 00:08:50,150
the process<font color="#E5E5E5"> known by United State and</font>

192
00:08:47,410 --> 00:08:51,980
you<font color="#CCCCCC"> edit</font><font color="#E5E5E5"> this process so for to the</font>

193
00:08:50,150 --> 00:08:55,540
domain<font color="#E5E5E5"> of your</font><font color="#CCCCCC"> whole system</font><font color="#E5E5E5"> or whole</font>

194
00:08:51,980 --> 00:08:57,740
program<font color="#E5E5E5"> and then you just iterate it</font>

195
00:08:55,540 --> 00:09:00,140
<font color="#CCCCCC">every time</font><font color="#E5E5E5"> that you reach a branching</font>

196
00:08:57,740 --> 00:09:02,540
point in your code<font color="#CCCCCC"> that it's visible you</font>

197
00:09:00,140 --> 00:09:05,920
<font color="#E5E5E5">had all both of</font><font color="#CCCCCC"> the paths inside your</font>

198
00:09:02,540 --> 00:09:08,000
domain<font color="#E5E5E5"> and if it's not then</font><font color="#CCCCCC"> you just</font>

199
00:09:05,920 --> 00:09:09,770
negate the one that it's not possible

200
00:09:08,000 --> 00:09:11,510
<font color="#CCCCCC">and put in your domain and then you</font>

201
00:09:09,770 --> 00:09:15,740
continue<font color="#E5E5E5"> exploring your content you</font>

202
00:09:11,510 --> 00:09:19,760
didn't you understand how I was<font color="#E5E5E5"> trying</font>

203
00:09:15,740 --> 00:09:21,800
<font color="#CCCCCC">to use this concept for automating the</font>

204
00:09:19,760 --> 00:09:23,270
exploitation of heaps

205
00:09:21,800 --> 00:09:24,890
you need to understand how the memory

206
00:09:23,270 --> 00:09:28,130
works because it's a bit different order

207
00:09:24,890 --> 00:09:30,680
<font color="#E5E5E5">other stuff so memory is</font><font color="#CCCCCC"> just that</font>

208
00:09:28,130 --> 00:09:32,420
you're storing information right and in

209
00:09:30,680 --> 00:09:34,819
a<font color="#E5E5E5"> hardware level it looks really simple</font>

210
00:09:32,420 --> 00:09:37,030
<font color="#CCCCCC">it's to select so if you have like and</font>

211
00:09:34,820 --> 00:09:39,770
or letters<font color="#E5E5E5"> everywhere</font>

212
00:09:37,030 --> 00:09:42,050
if you just look<font color="#CCCCCC"> like that</font><font color="#E5E5E5"> it's really</font>

213
00:09:39,770 --> 00:09:45,230
really<font color="#CCCCCC"> super me I'm not asking</font><font color="#E5E5E5"> artists</font>

214
00:09:42,050 --> 00:09:50,180
and I can even make<font color="#CCCCCC"> that so it's not</font>

215
00:09:45,230 --> 00:09:52,610
hard<font color="#CCCCCC"> but in your processors</font><font color="#E5E5E5"> it gets a</font>

216
00:09:50,180 --> 00:09:54,979
<font color="#E5E5E5">bit you bit harder because you have</font><font color="#CCCCCC"> more</font>

217
00:09:52,610 --> 00:09:56,930
complexity<font color="#CCCCCC"> so you need to imagine</font><font color="#E5E5E5"> that</font>

218
00:09:54,980 --> 00:09:59,420
you just<font color="#E5E5E5"> you don't have just one of</font><font color="#CCCCCC"> it</font>

219
00:09:56,930 --> 00:10:02,209
because<font color="#E5E5E5"> this one can you store just one</font>

220
00:09:59,420 --> 00:10:04,550
guy but one bit and if you<font color="#E5E5E5"> think about</font>

221
00:10:02,210 --> 00:10:06,620
how<font color="#CCCCCC"> many bits you have</font><font color="#E5E5E5"> in your rest room</font>

222
00:10:04,550 --> 00:10:09,380
right now it's a bit<font color="#E5E5E5"> more than</font><font color="#CCCCCC"> that and</font>

223
00:10:06,620 --> 00:10:11,300
this one is also<font color="#E5E5E5"> independent of the</font>

224
00:10:09,380 --> 00:10:13,930
whole context<font color="#E5E5E5"> right now you have like</font>

225
00:10:11,300 --> 00:10:16,640
metrics<font color="#E5E5E5"> of this kind of stuff inside</font><font color="#CCCCCC"> of</font>

226
00:10:13,930 --> 00:10:19,609
of your processor<font color="#E5E5E5"> communicating with</font>

227
00:10:16,640 --> 00:10:24,260
each<font color="#E5E5E5"> other to have like a bunch of</font>

228
00:10:19,610 --> 00:10:26,030
information<font color="#E5E5E5"> that belongs together</font><font color="#CCCCCC"> but if</font>

229
00:10:24,260 --> 00:10:27,410
the hardware<font color="#E5E5E5"> is the same what's the</font>

230
00:10:26,030 --> 00:10:29,630
difference in<font color="#E5E5E5"> the difference</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

231
00:10:27,410 --> 00:10:32,630
memory<font color="#CCCCCC"> and</font><font color="#E5E5E5"> any way that we know we have</font>

232
00:10:29,630 --> 00:10:35,450
<font color="#CCCCCC">more right yeah we don't have</font><font color="#E5E5E5"> 50 shades</font>

233
00:10:32,630 --> 00:10:39,050
we have<font color="#E5E5E5"> just like two or three depends</font>

234
00:10:35,450 --> 00:10:40,459
who you're talking with but we are going

235
00:10:39,050 --> 00:10:44,050
to talk about<font color="#E5E5E5"> the heap not about the</font>

236
00:10:40,459 --> 00:10:47,199
stack for<font color="#E5E5E5"> the stack we already have like</font>

237
00:10:44,050 --> 00:10:52,219
<font color="#E5E5E5">bunch of work</font><font color="#CCCCCC"> done</font>

238
00:10:47,200 --> 00:10:55,900
<font color="#E5E5E5">automated exploit for stack</font><font color="#CCCCCC"> but not for</font>

239
00:10:52,220 --> 00:10:59,420
the heap and the funny thing<font color="#CCCCCC"> is like why</font>

240
00:10:55,900 --> 00:11:02,270
<font color="#CCCCCC">I guess you know how this type looks</font>

241
00:10:59,420 --> 00:11:04,610
like it's mostly<font color="#E5E5E5"> like that it's easy to</font>

242
00:11:02,270 --> 00:11:07,280
understand it's just<font color="#E5E5E5"> put stuff together</font>

243
00:11:04,610 --> 00:11:09,830
<font color="#E5E5E5">and then you'll have the heap</font><font color="#CCCCCC"> that looks</font>

244
00:11:07,280 --> 00:11:11,540
<font color="#E5E5E5">like this so the thing is if you think</font>

245
00:11:09,830 --> 00:11:14,120
<font color="#E5E5E5">about you have a stack of books and you</font>

246
00:11:11,540 --> 00:11:16,819
<font color="#CCCCCC">are just</font><font color="#E5E5E5"> taking one from above</font><font color="#CCCCCC"> it's easy</font>

247
00:11:14,120 --> 00:11:19,250
<font color="#E5E5E5">you know which book to get the next with</font>

248
00:11:16,820 --> 00:11:21,260
the heap is completely<font color="#CCCCCC"> different</font><font color="#E5E5E5"> if I</font>

249
00:11:19,250 --> 00:11:25,480
want if I say to you yeah<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> that</font>

250
00:11:21,260 --> 00:11:28,730
book and you'll have this it's a mess<font color="#CCCCCC"> so</font>

251
00:11:25,480 --> 00:11:32,840
it's pretty<font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to find the right</font>

252
00:11:28,730 --> 00:11:34,580
position<font color="#E5E5E5"> on your memory to actually</font>

253
00:11:32,840 --> 00:11:36,050
exploit<font color="#E5E5E5"> a heap with under flows</font><font color="#CCCCCC"> or</font>

254
00:11:34,580 --> 00:11:39,860
overflows because you don't<font color="#CCCCCC"> even know</font>

255
00:11:36,050 --> 00:11:42,380
exactly<font color="#E5E5E5"> where it is and the heap is also</font>

256
00:11:39,860 --> 00:11:46,040
a managed memory so you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> regionals</font>

257
00:11:42,380 --> 00:11:50,120
<font color="#CCCCCC">for everything</font><font color="#E5E5E5"> somewhere and even in the</font>

258
00:11:46,040 --> 00:11:54,829
Intel<font color="#E5E5E5"> books they are defining like that</font>

259
00:11:50,120 --> 00:11:58,520
<font color="#E5E5E5">the heap is</font><font color="#CCCCCC"> in a specified</font><font color="#E5E5E5"> place so you</font>

260
00:11:54,830 --> 00:12:02,870
cannot<font color="#E5E5E5"> know anyway so how can I put</font><font color="#CCCCCC"> that</font>

261
00:11:58,520 --> 00:12:05,930
all together<font color="#E5E5E5"> before I use it</font><font color="#CCCCCC"> - oh sorry</font>

262
00:12:02,870 --> 00:12:07,970
<font color="#CCCCCC">before I was using</font><font color="#E5E5E5"> a some cheese over</font>

263
00:12:05,930 --> 00:12:09,650
symbolic execution all these things to

264
00:12:07,970 --> 00:12:11,870
make my<font color="#E5E5E5"> job easier</font>

265
00:12:09,650 --> 00:12:15,680
that was my<font color="#E5E5E5"> way on others but that work</font>

266
00:12:11,870 --> 00:12:17,540
is<font color="#CCCCCC"> done and I remember that before I use</font>

267
00:12:15,680 --> 00:12:19,250
<font color="#CCCCCC">it to say like I know that people</font><font color="#E5E5E5"> are</font>

268
00:12:17,540 --> 00:12:24,370
using it<font color="#CCCCCC"> for posing</font><font color="#E5E5E5"> code verification</font>

269
00:12:19,250 --> 00:12:26,900
binary analysis and also for<font color="#CCCCCC"> PLC's</font><font color="#E5E5E5"> and</font>

270
00:12:24,370 --> 00:12:29,660
exploit generation right and I was like

271
00:12:26,900 --> 00:12:31,880
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> people are doing it but why is not</font>

272
00:12:29,660 --> 00:12:35,060
going further what's the problem there

273
00:12:31,880 --> 00:12:37,820
<font color="#CCCCCC">what</font><font color="#E5E5E5"> are people doing wrong and the</font>

274
00:12:35,060 --> 00:12:39,890
thing is I started<font color="#E5E5E5"> to write some simple</font>

275
00:12:37,820 --> 00:12:41,690
proof of concepts<font color="#E5E5E5"> using all this</font>

276
00:12:39,890 --> 00:12:45,920
theoretical approach

277
00:12:41,690 --> 00:12:49,010
<font color="#E5E5E5">I like it because I see a lot of PLC's</font>

278
00:12:45,920 --> 00:12:52,310
out there from<font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> and most of the</font>

279
00:12:49,010 --> 00:12:54,740
people I<font color="#CCCCCC"> publish a</font><font color="#E5E5E5"> PLC for something and</font>

280
00:12:52,310 --> 00:12:57,229
<font color="#E5E5E5">then two</font><font color="#CCCCCC"> weeks later or maybe one week</font>

281
00:12:54,740 --> 00:13:00,080
later<font color="#E5E5E5"> I see a bunch of malware using</font>

282
00:12:57,230 --> 00:13:03,020
this same<font color="#E5E5E5"> really same code from github</font>

283
00:13:00,080 --> 00:13:06,080
and infecting a lot of machines and

284
00:13:03,020 --> 00:13:09,590
<font color="#E5E5E5">that's not fair right it makes</font><font color="#CCCCCC"> my job</font>

285
00:13:06,080 --> 00:13:12,980
<font color="#CCCCCC">harder so what I started to</font><font color="#E5E5E5"> do is like</font>

286
00:13:09,590 --> 00:13:15,530
okay<font color="#CCCCCC"> you can write PLC's using logic so</font>

287
00:13:12,980 --> 00:13:18,590
I can infer that<font color="#E5E5E5"> the code is broken</font>

288
00:13:15,530 --> 00:13:21,680
<font color="#E5E5E5">without actually giving a working code</font>

289
00:13:18,590 --> 00:13:25,520
for it<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> need to exploit it to</font>

290
00:13:21,680 --> 00:13:29,140
<font color="#E5E5E5">prove that it's buggy and then I</font><font color="#CCCCCC"> cited</font>

291
00:13:25,520 --> 00:13:33,670
<font color="#E5E5E5">okay so maybe</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> saw</font><font color="#CCCCCC"> something there</font><font color="#E5E5E5"> and</font>

292
00:13:29,140 --> 00:13:36,890
I started<font color="#CCCCCC"> looking for stuff</font><font color="#E5E5E5"> and I</font>

293
00:13:33,670 --> 00:13:40,969
decided<font color="#E5E5E5"> to start with code verification</font>

294
00:13:36,890 --> 00:13:43,850
<font color="#E5E5E5">and that's a really broad field and then</font>

295
00:13:40,970 --> 00:13:46,850
I look at like okay<font color="#E5E5E5"> if I'm</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for</font>

296
00:13:43,850 --> 00:13:50,180
all the bugs<font color="#E5E5E5"> it's nothing not really</font>

297
00:13:46,850 --> 00:13:52,790
<font color="#E5E5E5">going to work right because I mean it's</font>

298
00:13:50,180 --> 00:13:55,099
my free time I need<font color="#E5E5E5"> to do I also have a</font>

299
00:13:52,790 --> 00:14:01,270
life as a as you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> what I really</font><font color="#E5E5E5"> want</font>

300
00:13:55,100 --> 00:14:04,430
to be a<font color="#CCCCCC"> karaoke singer</font><font color="#E5E5E5"> so yeah so I</font>

301
00:14:01,270 --> 00:14:08,510
decided<font color="#E5E5E5"> to make the my problem is</font><font color="#CCCCCC"> Mahler</font>

302
00:14:04,430 --> 00:14:10,339
<font color="#E5E5E5">like the mathematicians</font><font color="#CCCCCC"> make so if I</font>

303
00:14:08,510 --> 00:14:12,710
cannot prove like everything at once

304
00:14:10,340 --> 00:14:16,070
maybe if I break a<font color="#E5E5E5"> tree to pieces</font><font color="#CCCCCC"> like</font>

305
00:14:12,710 --> 00:14:18,650
check the<font color="#E5E5E5"> deeper</font><font color="#CCCCCC"> it will work</font><font color="#E5E5E5"> so that's</font>

306
00:14:16,070 --> 00:14:20,330
<font color="#E5E5E5">what I did</font><font color="#CCCCCC"> I broke</font><font color="#E5E5E5"> my problems of code</font>

307
00:14:18,650 --> 00:14:23,390
verification into smaller pieces and

308
00:14:20,330 --> 00:14:27,020
<font color="#CCCCCC">then I decided</font><font color="#E5E5E5"> to do like</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> let's</font>

309
00:14:23,390 --> 00:14:29,780
<font color="#E5E5E5">just find bugs but</font><font color="#CCCCCC"> not all the bugs</font><font color="#E5E5E5"> but</font>

310
00:14:27,020 --> 00:14:32,569
exploit robots because they have

311
00:14:29,780 --> 00:14:34,520
something<font color="#E5E5E5"> else and maybe someone wants</font>

312
00:14:32,570 --> 00:14:37,370
to pay for<font color="#E5E5E5"> it</font><font color="#CCCCCC"> because if it's buggy but</font>

313
00:14:34,520 --> 00:14:39,770
no one can exploit this<font color="#E5E5E5"> it's just a red</font>

314
00:14:37,370 --> 00:14:41,780
code then it's just<font color="#E5E5E5"> bad code but if you</font>

315
00:14:39,770 --> 00:14:42,620
can exploit this then it you<font color="#E5E5E5"> have a</font>

316
00:14:41,780 --> 00:14:45,410
value of<font color="#CCCCCC"> it</font>

317
00:14:42,620 --> 00:14:47,840
<font color="#E5E5E5">and it makes more</font><font color="#CCCCCC"> sense to fix something</font>

318
00:14:45,410 --> 00:14:50,810
that<font color="#E5E5E5"> it's exploitable then she just fix</font>

319
00:14:47,840 --> 00:14:55,100
buggy code right so my<font color="#E5E5E5"> problem was a bit</font>

320
00:14:50,810 --> 00:14:57,819
smaller now<font color="#E5E5E5"> but it wasn't enough</font><font color="#CCCCCC"> because</font>

321
00:14:55,100 --> 00:15:02,540
decided to<font color="#CCCCCC"> check how</font><font color="#E5E5E5"> to crash a code and</font>

322
00:14:57,820 --> 00:15:05,030
it's easy you can<font color="#E5E5E5"> just write everywhere</font>

323
00:15:02,540 --> 00:15:07,520
and then<font color="#CCCCCC"> de marisco to</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> hooked I</font>

324
00:15:05,030 --> 00:15:12,199
<font color="#E5E5E5">didn't scratched right but what does</font>

325
00:15:07,520 --> 00:15:14,750
that mean and then I decided<font color="#E5E5E5"> okay that's</font>

326
00:15:12,200 --> 00:15:16,340
not enough<font color="#E5E5E5"> I'm I will make</font><font color="#CCCCCC"> even a</font>

327
00:15:14,750 --> 00:15:20,270
smaller<font color="#CCCCCC"> I don't want to just crash</font>

328
00:15:16,340 --> 00:15:24,740
something<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to have control</font><font color="#CCCCCC"> of the</font>

329
00:15:20,270 --> 00:15:26,810
code<font color="#E5E5E5"> and then I started to check all the</font>

330
00:15:24,740 --> 00:15:30,200
techniques that are already there

331
00:15:26,810 --> 00:15:31,939
the research<font color="#CCCCCC"> haven't been done so I saw</font>

332
00:15:30,200 --> 00:15:34,400
that<font color="#CCCCCC"> people were using exploratory</font>

333
00:15:31,940 --> 00:15:37,250
testing for finding the bugs<font color="#E5E5E5"> that's not</font>

334
00:15:34,400 --> 00:15:37,939
my field it's fun<font color="#E5E5E5"> tried</font><font color="#CCCCCC"> it once but not</font>

335
00:15:37,250 --> 00:15:41,270
<font color="#CCCCCC">mine</font>

336
00:15:37,940 --> 00:15:44,900
I saw people<font color="#CCCCCC"> using dynamic tainted</font>

337
00:15:41,270 --> 00:15:47,000
analysis<font color="#E5E5E5"> yeah more interesting still not</font>

338
00:15:44,900 --> 00:15:49,160
mines because I cannot really<font color="#E5E5E5"> do it good</font>

339
00:15:47,000 --> 00:15:52,220
with Prolog and that's my free time so I

340
00:15:49,160 --> 00:15:53,810
choose what I want to do right and then

341
00:15:52,220 --> 00:15:55,430
they<font color="#E5E5E5"> people have like abstract</font>

342
00:15:53,810 --> 00:15:57,530
interpretation and excited<font color="#CCCCCC"> to learn</font>

343
00:15:55,430 --> 00:15:59,329
about<font color="#E5E5E5"> it and read a lot of papers in it</font>

344
00:15:57,530 --> 00:16:03,650
sounds super interesting so I was like

345
00:15:59,330 --> 00:16:06,410
okay that<font color="#E5E5E5"> could be Wiccans and and then</font>

346
00:16:03,650 --> 00:16:09,860
I saw click that's open<font color="#CCCCCC"> source and</font>

347
00:16:06,410 --> 00:16:14,900
symbolic execution engine whatever it

348
00:16:09,860 --> 00:16:17,480
runs<font color="#E5E5E5"> on</font><font color="#CCCCCC"> top</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> LLL</font><font color="#E5E5E5"> VM super cool</font><font color="#CCCCCC"> the</font>

349
00:16:14,900 --> 00:16:19,850
problem is it's<font color="#CCCCCC"> not scalable you can use</font>

350
00:16:17,480 --> 00:16:22,700
like key for small pieces<font color="#E5E5E5"> of source code</font>

351
00:16:19,850 --> 00:16:25,940
but<font color="#CCCCCC"> not for</font><font color="#E5E5E5"> my binaries and lot of other</font>

352
00:16:22,700 --> 00:16:28,820
stuff<font color="#CCCCCC"> so I saw a Manticore it's working</font>

353
00:16:25,940 --> 00:16:31,580
on binary<font color="#E5E5E5"> it's also symbolic execution</font>

354
00:16:28,820 --> 00:16:34,220
engine it's also doing tainted analysis

355
00:16:31,580 --> 00:16:37,310
and it has binary instrumentation the

356
00:16:34,220 --> 00:16:39,830
problem is you can use<font color="#CCCCCC"> multi core for</font><font color="#E5E5E5"> a</font>

357
00:16:37,310 --> 00:16:43,400
<font color="#E5E5E5">crack</font><font color="#CCCCCC"> mix</font><font color="#E5E5E5"> and you can use a multi core</font>

358
00:16:39,830 --> 00:16:45,440
for small binaries but I don't want to

359
00:16:43,400 --> 00:16:47,329
<font color="#E5E5E5">start a bunch of binaries on my on my</font>

360
00:16:45,440 --> 00:16:50,240
<font color="#E5E5E5">computer just to play around</font><font color="#CCCCCC"> all the</font>

361
00:16:47,330 --> 00:16:52,910
weekends<font color="#E5E5E5"> so what I am doing</font><font color="#CCCCCC"> is I'm using</font>

362
00:16:50,240 --> 00:16:57,200
<font color="#E5E5E5">just the B folder of my of my computer</font>

363
00:16:52,910 --> 00:16:59,420
and like<font color="#E5E5E5"> pink poking everywhere and that</font>

364
00:16:57,200 --> 00:17:01,220
doesn't work with much core it crashes

365
00:16:59,420 --> 00:17:03,860
all the time there<font color="#E5E5E5"> is also another</font>

366
00:17:01,220 --> 00:17:06,680
<font color="#CCCCCC">engine that I found out like</font><font color="#E5E5E5"> last week</font>

367
00:17:03,860 --> 00:17:08,849
so I didn't have time to<font color="#E5E5E5"> put everything</font>

368
00:17:06,680 --> 00:17:11,610
here but the name<font color="#E5E5E5"> is man hi</font>

369
00:17:08,849 --> 00:17:12,719
and it's<font color="#E5E5E5"> pretty cool but I didn't test</font>

370
00:17:11,609 --> 00:17:16,049
<font color="#E5E5E5">it to the end</font>

371
00:17:12,720 --> 00:17:19,409
I cannot say<font color="#E5E5E5"> much about them but it</font>

372
00:17:16,049 --> 00:17:21,539
sounds<font color="#E5E5E5"> interesting what I choose to</font><font color="#CCCCCC"> do</font>

373
00:17:19,409 --> 00:17:23,970
is like always it's<font color="#E5E5E5"> three times so I</font>

374
00:17:21,539 --> 00:17:26,039
decided to<font color="#CCCCCC"> implement my own</font><font color="#E5E5E5"> and I'm</font>

375
00:17:23,970 --> 00:17:28,830
using forward symbolic execution that's

376
00:17:26,039 --> 00:17:30,360
<font color="#E5E5E5">a symbolic execution but I'm using the</font>

377
00:17:28,830 --> 00:17:33,149
same<font color="#CCCCCC"> key service in the branching points</font>

378
00:17:30,360 --> 00:17:36,899
to decide if it makes sense<font color="#E5E5E5"> or</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> to go</font>

379
00:17:33,149 --> 00:17:38,820
<font color="#E5E5E5">to the end and I try to not</font><font color="#CCCCCC"> have the</font>

380
00:17:36,899 --> 00:17:43,529
<font color="#CCCCCC">100% code coverage because my computer</font>

381
00:17:38,820 --> 00:17:46,830
cannot<font color="#E5E5E5"> do that so the first</font><font color="#CCCCCC"> thing was</font>

382
00:17:43,529 --> 00:17:48,419
<font color="#E5E5E5">find a</font><font color="#CCCCCC"> bug that was easy it was</font><font color="#E5E5E5"> really</font>

383
00:17:46,830 --> 00:17:50,009
easy<font color="#E5E5E5"> you</font><font color="#CCCCCC"> just need the symbolic</font>

384
00:17:48,419 --> 00:17:53,600
<font color="#E5E5E5">education there it's filtering the</font>

385
00:17:50,009 --> 00:17:56,399
domains and<font color="#E5E5E5"> then you have the bugs but</font>

386
00:17:53,600 --> 00:17:59,668
for<font color="#E5E5E5"> that I needed to define</font><font color="#CCCCCC"> because I</font>

387
00:17:56,399 --> 00:18:01,739
<font color="#CCCCCC">like definitions</font><font color="#E5E5E5"> and math so I defined</font>

388
00:17:59,669 --> 00:18:03,509
what<font color="#E5E5E5"> is that does that mean</font><font color="#CCCCCC"> that if</font>

389
00:18:01,740 --> 00:18:08,360
there<font color="#E5E5E5"> is a bug there so I defined this</font>

390
00:18:03,509 --> 00:18:11,850
when I hope<font color="#E5E5E5"> F is this you can</font><font color="#CCCCCC"> see and</font>

391
00:18:08,360 --> 00:18:14,129
then I had a plan but for that<font color="#CCCCCC"> I also</font>

392
00:18:11,850 --> 00:18:16,019
<font color="#E5E5E5">need a theorem right so I wanted</font><font color="#CCCCCC"> to</font>

393
00:18:14,129 --> 00:18:18,779
define what<font color="#E5E5E5"> kind of stuff I want</font><font color="#CCCCCC"> to</font>

394
00:18:16,019 --> 00:18:21,990
prove in the end of my research<font color="#E5E5E5"> so my</font>

395
00:18:18,779 --> 00:18:23,610
idea was<font color="#CCCCCC"> that</font><font color="#E5E5E5"> given a program</font><font color="#CCCCCC"> I can</font>

396
00:18:21,990 --> 00:18:26,990
<font color="#E5E5E5">automatically find the vulnerabilities</font>

397
00:18:23,610 --> 00:18:31,320
<font color="#E5E5E5">and generate exploits for them sounds</font>

398
00:18:26,990 --> 00:18:33,500
normal science sounds<font color="#CCCCCC"> ok yeah and then I</font>

399
00:18:31,320 --> 00:18:35,879
started to check which kind of

400
00:18:33,500 --> 00:18:39,840
vulnerabilities I'm looking for the

401
00:18:35,879 --> 00:18:43,289
thing is<font color="#E5E5E5"> I also</font><font color="#CCCCCC"> needed to define a</font>

402
00:18:39,840 --> 00:18:46,080
really small scope for it<font color="#E5E5E5"> because you</font>

403
00:18:43,289 --> 00:18:48,419
cannot check everything<font color="#E5E5E5"> the second</font>

404
00:18:46,080 --> 00:18:51,000
problem was that<font color="#E5E5E5"> you have a lot</font><font color="#CCCCCC"> of</font>

405
00:18:48,419 --> 00:18:52,909
techniques<font color="#CCCCCC"> to finding bugs</font><font color="#E5E5E5"> but not</font><font color="#CCCCCC"> for</font>

406
00:18:51,000 --> 00:18:55,440
the checking if they exploit the words

407
00:18:52,909 --> 00:18:58,019
<font color="#E5E5E5">so I started like</font><font color="#CCCCCC"> ok I will check for</font>

408
00:18:55,440 --> 00:19:01,110
<font color="#CCCCCC">directing friends</font><font color="#E5E5E5"> of the user every time</font>

409
00:18:58,019 --> 00:19:04,379
<font color="#E5E5E5">that user</font><font color="#CCCCCC"> has the power giving some</font><font color="#E5E5E5"> kind</font>

410
00:19:01,110 --> 00:19:06,059
<font color="#E5E5E5">of</font><font color="#CCCCCC"> important and</font><font color="#E5E5E5"> this input is change</font><font color="#CCCCCC"> in</font>

411
00:19:04,379 --> 00:19:09,090
<font color="#E5E5E5">control flow of the program that's</font>

412
00:19:06,059 --> 00:19:11,100
<font color="#CCCCCC">directing when so</font><font color="#E5E5E5"> it's like when you</font>

413
00:19:09,090 --> 00:19:13,740
define<font color="#E5E5E5"> my</font><font color="#CCCCCC"> lock with a size</font><font color="#E5E5E5"> you are</font>

414
00:19:11,100 --> 00:19:15,959
defined directly stopping in the<font color="#E5E5E5"> control</font>

415
00:19:13,740 --> 00:19:18,299
flow of your program right and then you

416
00:19:15,960 --> 00:19:21,159
<font color="#CCCCCC">have the indirect that it's</font><font color="#E5E5E5"> something</font>

417
00:19:18,299 --> 00:19:23,289
like<font color="#E5E5E5"> that where the</font>

418
00:19:21,159 --> 00:19:25,269
user has the power of<font color="#CCCCCC"> change selfie</font><font color="#E5E5E5"> but</font>

419
00:19:23,289 --> 00:19:27,940
not directly<font color="#E5E5E5"> so if you want to change</font>

420
00:19:25,269 --> 00:19:30,509
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you need to know how your</font>

421
00:19:27,940 --> 00:19:34,029
input is influencing<font color="#E5E5E5"> the whole hood in</font>

422
00:19:30,509 --> 00:19:40,599
in a way that it<font color="#E5E5E5"> makes sense to exploit</font>

423
00:19:34,029 --> 00:19:42,549
it so the second<font color="#E5E5E5"> step was to check if</font>

424
00:19:40,599 --> 00:19:44,889
the vulnerability<font color="#E5E5E5"> that we found in the</font>

425
00:19:42,549 --> 00:19:47,349
first one is exploitable<font color="#E5E5E5"> because I</font>

426
00:19:44,889 --> 00:19:49,658
didn't want<font color="#E5E5E5"> to find all of them just the</font>

427
00:19:47,349 --> 00:19:51,009
one that makes<font color="#CCCCCC"> sense</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> and for that</font>

428
00:19:49,659 --> 00:19:53,830
<font color="#CCCCCC">I</font><font color="#E5E5E5"> was thinking</font><font color="#CCCCCC"> okay let's use</font>

429
00:19:51,009 --> 00:19:56,470
concretization<font color="#E5E5E5"> but it wasn't that easy</font>

430
00:19:53,830 --> 00:19:59,228
<font color="#E5E5E5">anymore because then I had like this</font>

431
00:19:56,470 --> 00:20:01,659
huge amount of possible<font color="#E5E5E5"> inputs that</font><font color="#CCCCCC"> you</font>

432
00:19:59,229 --> 00:20:03,669
have in<font color="#E5E5E5"> your domain and if you put all</font>

433
00:20:01,659 --> 00:20:05,789
of them and test all of<font color="#E5E5E5"> them then it's</font>

434
00:20:03,669 --> 00:20:07,899
just fuzzing it that's not really

435
00:20:05,789 --> 00:20:13,450
automating the way I was thinking<font color="#CCCCCC"> about</font>

436
00:20:07,899 --> 00:20:16,059
and I need a definition<font color="#E5E5E5"> so</font><font color="#CCCCCC"> there is I</font>

437
00:20:13,450 --> 00:20:19,029
wanted<font color="#E5E5E5"> to find the paths that</font><font color="#CCCCCC"> are</font>

438
00:20:16,059 --> 00:20:20,619
vulnerable<font color="#E5E5E5"> and at the same time you with</font>

439
00:20:19,029 --> 00:20:22,840
the same input you need to find<font color="#E5E5E5"> a</font>

440
00:20:20,619 --> 00:20:26,289
function that<font color="#E5E5E5"> it makes it exploitable</font>

441
00:20:22,840 --> 00:20:27,639
<font color="#CCCCCC">and both of them needs to</font><font color="#E5E5E5"> be true if one</font>

442
00:20:26,289 --> 00:20:31,090
of them are<font color="#E5E5E5"> not true</font>

443
00:20:27,639 --> 00:20:33,840
that's<font color="#E5E5E5"> not what I'm looking for</font><font color="#CCCCCC"> I hope</font>

444
00:20:31,090 --> 00:20:33,840
that's clear

445
00:20:34,529 --> 00:20:42,879
the third step was implement the

446
00:20:38,950 --> 00:20:45,700
function<font color="#CCCCCC"> that makes both sides</font><font color="#E5E5E5"> true yeah</font>

447
00:20:42,879 --> 00:20:48,129
and then I implemented<font color="#E5E5E5"> something the</font>

448
00:20:45,700 --> 00:20:51,909
problem<font color="#CCCCCC"> was that it was</font><font color="#E5E5E5"> working just for</font>

449
00:20:48,129 --> 00:20:53,859
<font color="#E5E5E5">a video a special case</font><font color="#CCCCCC"> so for it was not</font>

450
00:20:51,909 --> 00:20:57,009
<font color="#E5E5E5">genetic or enough in my</font><font color="#CCCCCC"> opinion so it</font>

451
00:20:53,859 --> 00:21:01,710
was working for some kind of<font color="#CCCCCC"> malach like</font>

452
00:20:57,009 --> 00:21:04,629
I had a code for each kind<font color="#E5E5E5"> of a bug code</font>

453
00:21:01,710 --> 00:21:07,499
access so I had like<font color="#CCCCCC"> a piece of a</font>

454
00:21:04,629 --> 00:21:09,908
function<font color="#CCCCCC"> that was working just for free</font>

455
00:21:07,499 --> 00:21:14,169
<font color="#CCCCCC">right opposite of</font><font color="#E5E5E5"> free and then I had</font>

456
00:21:09,909 --> 00:21:16,020
one<font color="#CCCCCC"> that it was just working</font><font color="#E5E5E5"> for under</font>

457
00:21:14,169 --> 00:21:18,550
flows

458
00:21:16,020 --> 00:21:19,629
that's just<font color="#E5E5E5"> working for a special case</font>

459
00:21:18,550 --> 00:21:24,040
not always

460
00:21:19,630 --> 00:21:25,750
and then<font color="#E5E5E5"> I I noticed that it's just</font>

461
00:21:24,040 --> 00:21:28,870
<font color="#E5E5E5">working most of the time so every time</font>

462
00:21:25,750 --> 00:21:31,510
why<font color="#E5E5E5"> if it the bug is the same right and</font>

463
00:21:28,870 --> 00:21:34,419
I'm there<font color="#E5E5E5"> and even</font><font color="#CCCCCC"> doing it manually</font><font color="#E5E5E5"> is</font>

464
00:21:31,510 --> 00:21:37,629
was it still not working<font color="#E5E5E5"> all the time</font>

465
00:21:34,420 --> 00:21:40,030
<font color="#E5E5E5">and then I was</font><font color="#CCCCCC"> thinking</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> if it does</font>

466
00:21:37,630 --> 00:21:43,210
this is the case<font color="#E5E5E5"> is it</font><font color="#CCCCCC"> Nvidia automation</font>

467
00:21:40,030 --> 00:21:44,790
if not<font color="#E5E5E5"> even like doing</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> hand is</font>

468
00:21:43,210 --> 00:21:48,100
<font color="#CCCCCC">working anymore</font>

469
00:21:44,790 --> 00:21:51,010
<font color="#E5E5E5">so I added an extra step that was the</font>

470
00:21:48,100 --> 00:21:53,230
evaluation of the whole<font color="#CCCCCC"> project</font><font color="#E5E5E5"> and then</font>

471
00:21:51,010 --> 00:21:55,420
all the problems<font color="#CCCCCC"> that I had along</font><font color="#E5E5E5"> the</font>

472
00:21:53,230 --> 00:21:59,740
<font color="#E5E5E5">way the first one was like finding</font><font color="#CCCCCC"> the</font>

473
00:21:55,420 --> 00:22:02,050
hip<font color="#E5E5E5"> that was a challenge by</font><font color="#CCCCCC"> itself I am</font>

474
00:21:59,740 --> 00:22:03,790
really<font color="#E5E5E5"> happy that I had people talking</font>

475
00:22:02,050 --> 00:22:06,460
to me<font color="#E5E5E5"> and explained</font><font color="#CCCCCC"> to me and</font><font color="#E5E5E5"> writing</font>

476
00:22:03,790 --> 00:22:09,490
amazing papers I'm going to list them on

477
00:22:06,460 --> 00:22:11,320
the end that's<font color="#CCCCCC"> a real</font><font color="#E5E5E5"> complex problem</font>

478
00:22:09,490 --> 00:22:15,190
how to find the<font color="#CCCCCC"> hip in the memory itself</font>

479
00:22:11,320 --> 00:22:16,780
<font color="#CCCCCC">and then they expert verification and</font><font color="#E5E5E5"> I</font>

480
00:22:15,190 --> 00:22:20,250
<font color="#E5E5E5">thought before</font><font color="#CCCCCC"> you have like</font><font color="#E5E5E5"> this huge</font>

481
00:22:16,780 --> 00:22:23,590
<font color="#E5E5E5">amount of possible inputs that makes</font><font color="#CCCCCC"> the</font>

482
00:22:20,250 --> 00:22:26,950
more<font color="#CCCCCC"> files decoder than a video tomato</font>

483
00:22:23,590 --> 00:22:30,129
and exploit and then you had the 31<font color="#E5E5E5"> that</font>

484
00:22:26,950 --> 00:22:31,059
<font color="#E5E5E5">taste</font><font color="#CCCCCC"> tastes a little explosion</font><font color="#E5E5E5"> I don't</font>

485
00:22:30,130 --> 00:22:34,750
know if you know<font color="#CCCCCC"> but I'm doing</font>

486
00:22:31,059 --> 00:22:36,309
<font color="#E5E5E5">everything on this is</font><font color="#CCCCCC"> morphing here it</font>

487
00:22:34,750 --> 00:22:37,840
doesn't<font color="#CCCCCC"> work like that you</font><font color="#E5E5E5"> are doing</font>

488
00:22:36,309 --> 00:22:40,178
<font color="#CCCCCC">like a symbolic</font><font color="#E5E5E5"> education you have</font><font color="#CCCCCC"> like</font>

489
00:22:37,840 --> 00:22:43,689
a huge<font color="#E5E5E5"> amount of memory being used all</font>

490
00:22:40,179 --> 00:22:46,210
the time<font color="#CCCCCC"> and then I had the</font><font color="#E5E5E5"> problem</font><font color="#CCCCCC"> with</font>

491
00:22:43,690 --> 00:22:50,860
environmental definition and<font color="#CCCCCC"> that is</font>

492
00:22:46,210 --> 00:22:53,890
what I did not<font color="#E5E5E5"> expect</font><font color="#CCCCCC"> and I I guess it's</font>

493
00:22:50,860 --> 00:22:55,629
a flower<font color="#CCCCCC"> because I am not</font><font color="#E5E5E5"> having ability</font>

494
00:22:53,890 --> 00:22:57,700
research so I was not thinking<font color="#E5E5E5"> about</font>

495
00:22:55,630 --> 00:23:00,820
that but every time when I was checking

496
00:22:57,700 --> 00:23:03,160
<font color="#CCCCCC">my the first time my memory was clean</font>

497
00:23:00,820 --> 00:23:06,070
because<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> just booting my computer</font>

498
00:23:03,160 --> 00:23:07,870
the second time I was doing again and<font color="#E5E5E5"> I</font>

499
00:23:06,070 --> 00:23:10,178
had something<font color="#E5E5E5"> in my memory already</font><font color="#CCCCCC"> and</font>

500
00:23:07,870 --> 00:23:13,928
in the third time I<font color="#CCCCCC"> was</font><font color="#E5E5E5"> just over</font>

501
00:23:10,179 --> 00:23:15,130
writing<font color="#E5E5E5"> my memory and that's every time</font>

502
00:23:13,929 --> 00:23:19,840
<font color="#E5E5E5">that I was</font><font color="#CCCCCC"> running the code without</font>

503
00:23:15,130 --> 00:23:21,520
<font color="#E5E5E5">rebooting it</font><font color="#CCCCCC"> I had stuff there</font><font color="#E5E5E5"> so you</font>

504
00:23:19,840 --> 00:23:23,320
really<font color="#CCCCCC"> need to define</font><font color="#E5E5E5"> which kind of</font>

505
00:23:21,520 --> 00:23:27,400
environment who you are using<font color="#E5E5E5"> before</font>

506
00:23:23,320 --> 00:23:29,290
starting<font color="#E5E5E5"> the first place so the</font>

507
00:23:27,400 --> 00:23:31,900
limitations that I had

508
00:23:29,290 --> 00:23:33,520
at the first<font color="#E5E5E5"> one</font><font color="#CCCCCC"> they are always the</font>

509
00:23:31,900 --> 00:23:36,520
same<font color="#E5E5E5"> when talking about symbolic</font>

510
00:23:33,520 --> 00:23:41,280
execution and code verification<font color="#CCCCCC"> or any</font>

511
00:23:36,520 --> 00:23:45,220
kind<font color="#E5E5E5"> of binary analysis</font><font color="#CCCCCC"> it's basically</font>

512
00:23:41,280 --> 00:23:49,030
the<font color="#E5E5E5"> halting</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> because if you have</font>

513
00:23:45,220 --> 00:23:50,950
a code to<font color="#CCCCCC"> verify another code</font><font color="#E5E5E5"> it's</font>

514
00:23:49,030 --> 00:23:53,560
<font color="#E5E5E5">theoretically impossible to assume that</font>

515
00:23:50,950 --> 00:23:55,120
every time<font color="#CCCCCC"> that you are</font><font color="#E5E5E5"> verifying</font><font color="#CCCCCC"> a</font>

516
00:23:53,560 --> 00:23:56,740
program with another<font color="#E5E5E5"> program</font><font color="#CCCCCC"> that it</font>

517
00:23:55,120 --> 00:23:59,889
will be hold for the property that you

518
00:23:56,740 --> 00:24:01,540
<font color="#CCCCCC">are testing for so that means</font><font color="#E5E5E5"> that you</font>

519
00:23:59,890 --> 00:24:04,540
cannot<font color="#E5E5E5"> write a code to verify another</font>

520
00:24:01,540 --> 00:24:08,590
code and be sure that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do that</font>

521
00:24:04,540 --> 00:24:13,300
<font color="#CCCCCC">every single</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> and the second one is</font>

522
00:24:08,590 --> 00:24:16,689
that<font color="#E5E5E5"> if you define that your program</font>

523
00:24:13,300 --> 00:24:19,210
doesn't depend<font color="#E5E5E5"> of the user input you are</font>

524
00:24:16,690 --> 00:24:22,420
<font color="#E5E5E5">still inside to this decidable languages</font>

525
00:24:19,210 --> 00:24:24,190
<font color="#E5E5E5">the problem was that when I was a cuting</font>

526
00:24:22,420 --> 00:24:27,160
the code multiple<font color="#E5E5E5"> times in your memory</font>

527
00:24:24,190 --> 00:24:29,230
and had like garbage<font color="#CCCCCC"> is</font><font color="#E5E5E5"> still on my</font>

528
00:24:27,160 --> 00:24:32,530
memory<font color="#CCCCCC"> I run into the</font><font color="#E5E5E5"> underside</font>

529
00:24:29,230 --> 00:24:34,480
languages and if I<font color="#CCCCCC"> don't take</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> of it</font>

530
00:24:32,530 --> 00:24:35,889
I can even<font color="#E5E5E5"> go further to the</font>

531
00:24:34,480 --> 00:24:37,510
<font color="#CCCCCC">non-throwing asset where language</font><font color="#E5E5E5"> is</font>

532
00:24:35,890 --> 00:24:39,580
<font color="#E5E5E5">because there are</font><font color="#CCCCCC"> estates in my memory</font>

533
00:24:37,510 --> 00:24:41,440
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I don't want to</font><font color="#E5E5E5"> go there</font>

534
00:24:39,580 --> 00:24:45,129
but we<font color="#E5E5E5"> are talking about</font><font color="#CCCCCC"> quantum physics</font>

535
00:24:41,440 --> 00:24:47,460
I cannot know what<font color="#CCCCCC"> it's inside</font><font color="#E5E5E5"> every</font>

536
00:24:45,130 --> 00:24:50,940
<font color="#E5E5E5">single thing on my processor right it's</font>

537
00:24:47,460 --> 00:24:54,430
impossible<font color="#E5E5E5"> to know the state of</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and</font>

538
00:24:50,940 --> 00:24:57,040
then we have the practical<font color="#E5E5E5"> thing we are</font>

539
00:24:54,430 --> 00:25:01,540
still<font color="#E5E5E5"> running normal processors they are</font>

540
00:24:57,040 --> 00:25:03,460
not a quantum computers right now so the

541
00:25:01,540 --> 00:25:05,409
problem is that<font color="#CCCCCC"> the normal processes</font>

542
00:25:03,460 --> 00:25:08,080
that everyone has everywhere in the

543
00:25:05,410 --> 00:25:09,490
phones<font color="#E5E5E5"> in a computer or whatever they</font>

544
00:25:08,080 --> 00:25:10,960
have in each state machine<font color="#E5E5E5"> that means</font>

545
00:25:09,490 --> 00:25:13,720
they have<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> machines and they are</font>

546
00:25:10,960 --> 00:25:16,150
disabled<font color="#CCCCCC"> so I cannot write a code that</font>

547
00:25:13,720 --> 00:25:18,490
it's<font color="#E5E5E5"> running in the another bubble in</font>

548
00:25:16,150 --> 00:25:21,990
<font color="#E5E5E5">there under</font><font color="#CCCCCC"> desirable languages in a</font>

549
00:25:18,490 --> 00:25:27,310
desirable product because<font color="#E5E5E5"> that's</font>

550
00:25:21,990 --> 00:25:31,240
uncomfortable right so after oh this

551
00:25:27,310 --> 00:25:33,100
theoretical approach that I had my first

552
00:25:31,240 --> 00:25:35,110
<font color="#E5E5E5">idea was that I could do something</font><font color="#CCCCCC"> like</font>

553
00:25:33,100 --> 00:25:37,300
your case<font color="#E5E5E5"> symbolic execution</font><font color="#CCCCCC"> super</font><font color="#E5E5E5"> cool</font>

554
00:25:35,110 --> 00:25:39,810
<font color="#E5E5E5">for</font><font color="#CCCCCC"> when ability research right</font><font color="#E5E5E5"> but then</font>

555
00:25:37,300 --> 00:25:42,470
I<font color="#E5E5E5"> needed to change that can be</font>

556
00:25:39,810 --> 00:25:45,480
and I really believe that<font color="#E5E5E5"> it can</font><font color="#CCCCCC"> be</font>

557
00:25:42,470 --> 00:25:49,050
because<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mothers ico pretty hard to</font>

558
00:25:45,480 --> 00:25:52,140
write and define and everything so the

559
00:25:49,050 --> 00:25:54,690
main takeaway for<font color="#E5E5E5"> myself was</font><font color="#CCCCCC"> that I I</font>

560
00:25:52,140 --> 00:25:59,880
need<font color="#CCCCCC"> to understand better how can</font><font color="#E5E5E5"> I</font>

561
00:25:54,690 --> 00:26:02,550
build<font color="#CCCCCC"> she research work because what I</font>

562
00:25:59,880 --> 00:26:05,490
<font color="#E5E5E5">did before were mostly related to my job</font>

563
00:26:02,550 --> 00:26:07,470
<font color="#CCCCCC">so I knew how</font><font color="#E5E5E5"> things work manually so I</font>

564
00:26:05,490 --> 00:26:09,210
could automate it faster right if you

565
00:26:07,470 --> 00:26:11,070
know how to do it<font color="#CCCCCC"> yourself you</font><font color="#E5E5E5"> see the</font>

566
00:26:09,210 --> 00:26:13,560
<font color="#E5E5E5">patterns</font><font color="#CCCCCC"> you know how it works you can</font>

567
00:26:11,070 --> 00:26:15,600
automate and I'm probably<font color="#CCCCCC"> I'm pretty</font>

568
00:26:13,560 --> 00:26:17,280
<font color="#E5E5E5">sure that if I've one ability research</font>

569
00:26:15,600 --> 00:26:19,679
<font color="#E5E5E5">sit in front of the code and define the</font>

570
00:26:17,280 --> 00:26:22,820
models it will work way<font color="#CCCCCC"> better and way</font>

571
00:26:19,680 --> 00:26:24,870
<font color="#CCCCCC">faster</font><font color="#E5E5E5"> they need to work at it for me</font>

572
00:26:22,820 --> 00:26:29,250
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> reason that</font><font color="#E5E5E5"> right now I</font>

573
00:26:24,870 --> 00:26:31,800
decided to write<font color="#E5E5E5"> kind of assistant to</font>

574
00:26:29,250 --> 00:26:34,140
write these constraints for security

575
00:26:31,800 --> 00:26:38,220
problems that are going into<font color="#E5E5E5"> the SMGs</font>

576
00:26:34,140 --> 00:26:40,820
over so instead of modeling<font color="#E5E5E5"> just for</font>

577
00:26:38,220 --> 00:26:43,860
<font color="#E5E5E5">malware and then modeling</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> from</font>

578
00:26:40,820 --> 00:26:45,990
hip exploitation and then modeling it

579
00:26:43,860 --> 00:26:49,110
again for<font color="#CCCCCC"> its type of flows or whatever</font>

580
00:26:45,990 --> 00:26:51,600
what I can do is just<font color="#E5E5E5"> create a framework</font>

581
00:26:49,110 --> 00:26:54,419
that will<font color="#CCCCCC"> assist security researchers</font>

582
00:26:51,600 --> 00:26:57,120
that have<font color="#E5E5E5"> the knowledge already from the</font>

583
00:26:54,420 --> 00:27:00,060
other side<font color="#E5E5E5"> like I had from the malware</font>

584
00:26:57,120 --> 00:27:02,399
side to write these models by themselves

585
00:27:00,060 --> 00:27:04,770
<font color="#E5E5E5">and then just use it the engine in the</font>

586
00:27:02,400 --> 00:27:09,720
back<font color="#E5E5E5"> end because</font><font color="#CCCCCC"> they don't</font><font color="#E5E5E5"> need to know</font>

587
00:27:04,770 --> 00:27:11,550
how SMT solvers work but they know how

588
00:27:09,720 --> 00:27:15,960
to model things in a way<font color="#CCCCCC"> that it's</font>

589
00:27:11,550 --> 00:27:18,240
logical<font color="#CCCCCC"> to check and the people that I</font>

590
00:27:15,960 --> 00:27:20,700
wanted<font color="#E5E5E5"> to think about all this</font><font color="#CCCCCC"> viscera</font>

591
00:27:18,240 --> 00:27:26,100
<font color="#CCCCCC">today it's like my list</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> least</font><font color="#E5E5E5"> eight</font>

592
00:27:20,700 --> 00:27:30,390
<font color="#E5E5E5">months</font><font color="#CCCCCC"> are Jean and Mario Sheryl publish</font>

593
00:27:26,100 --> 00:27:34,500
a paper it's it's already published it's

594
00:27:30,390 --> 00:27:38,640
not<font color="#E5E5E5"> anywhere to appear about hippie</font>

595
00:27:34,500 --> 00:27:40,440
layout manipulation so he was kind of

596
00:27:38,640 --> 00:27:43,440
solving the problem<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I had about</font>

597
00:27:40,440 --> 00:27:46,410
finding the hip<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> really</font>

598
00:27:43,440 --> 00:27:48,890
<font color="#E5E5E5">inspiring</font><font color="#CCCCCC"> to talk with him like he</font><font color="#E5E5E5"> she</font>

599
00:27:46,410 --> 00:27:50,870
was helping<font color="#E5E5E5"> me</font><font color="#CCCCCC"> all the time</font>

600
00:27:48,890 --> 00:27:52,760
and every time that I thought<font color="#CCCCCC"> about like</font>

601
00:27:50,870 --> 00:27:55,489
giving up because<font color="#E5E5E5"> it wasn't working the</font>

602
00:27:52,760 --> 00:27:57,950
way<font color="#CCCCCC"> I I was thinking it was supposed to</font>

603
00:27:55,490 --> 00:28:01,340
<font color="#E5E5E5">work he would just say no</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> riding a</font>

604
00:27:57,950 --> 00:28:04,310
good path just keep doing it<font color="#CCCCCC"> and my own</font>

605
00:28:01,340 --> 00:28:08,330
because<font color="#E5E5E5"> she was the one</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> first show</font>

606
00:28:04,310 --> 00:28:10,929
me binaries<font color="#CCCCCC"> another paper that helped me</font>

607
00:28:08,330 --> 00:28:14,840
a lot was the<font color="#E5E5E5"> models</font><font color="#CCCCCC"> that vinegar</font>

608
00:28:10,930 --> 00:28:17,300
<font color="#E5E5E5">presented in the SEC conference he was</font>

609
00:28:14,840 --> 00:28:19,310
modeling the<font color="#E5E5E5"> the heap for the first time</font>

610
00:28:17,300 --> 00:28:24,740
in a theoretical<font color="#CCCCCC"> approach that I could</font>

611
00:28:19,310 --> 00:28:26,690
use to<font color="#CCCCCC"> model the exploits</font><font color="#E5E5E5"> after the</font>

612
00:28:24,740 --> 00:28:28,790
Intel documentation kind of<font color="#CCCCCC"> help</font>

613
00:28:26,690 --> 00:28:34,000
<font color="#CCCCCC">movement</font><font color="#E5E5E5"> not really it depends</font><font color="#CCCCCC"> the way</font>

614
00:28:28,790 --> 00:28:34,000
you look at it<font color="#E5E5E5"> and that's it</font>

615
00:28:35,060 --> 00:28:41,149
[Applause]

