1
00:00:00,030 --> 00:00:07,980
okay guys well thank you for being here

2
00:00:03,990 --> 00:00:09,780
so early and in such numbers and in the

3
00:00:07,980 --> 00:00:11,610
true nature of keeping offensive comma

4
00:00:09,780 --> 00:00:17,369
ffensive we're going to start out with a

5
00:00:11,610 --> 00:00:19,289
defensive talk so what are you signing

6
00:00:17,369 --> 00:00:20,970
up to today well we're going to do

7
00:00:19,289 --> 00:00:24,710
introductions without which are probably

8
00:00:20,970 --> 00:00:27,269
not needed for half of the speakers here

9
00:00:24,710 --> 00:00:28,769
then we're going to do some classic face

10
00:00:27,269 --> 00:00:31,830
palms and finger pointing because

11
00:00:28,769 --> 00:00:36,050
everyone likes that then we're asking

12
00:00:31,830 --> 00:00:40,440
with what if we do it right for once

13
00:00:36,050 --> 00:00:42,629
then someone has to hold my beer then

14
00:00:40,440 --> 00:00:45,420
I'm going to tell you who is actually

15
00:00:42,629 --> 00:00:51,480
using or going to use what we're talking

16
00:00:45,420 --> 00:00:57,030
about and then that's it basically Q&A

17
00:00:51,480 --> 00:01:00,629
probably so introductions there's FX

18
00:00:57,030 --> 00:01:03,480
who's somewhat known I think for doing

19
00:01:00,629 --> 00:01:06,030
offensive and defensive InfoSec and I'm

20
00:01:03,480 --> 00:01:10,890
here mostly being offended so don't mind

21
00:01:06,030 --> 00:01:13,170
me so the usual problem that we have or

22
00:01:10,890 --> 00:01:16,080
if you're going into the field looking

23
00:01:13,170 --> 00:01:18,299
at actual networks and companies is that

24
00:01:16,080 --> 00:01:21,270
what they think they have is a big

25
00:01:18,299 --> 00:01:22,799
fortress but if you take a closer look

26
00:01:21,270 --> 00:01:25,350
and once you're inside the network

27
00:01:22,799 --> 00:01:31,170
that's what you actually find so lateral

28
00:01:25,350 --> 00:01:33,839
movement is not that hard and setting up

29
00:01:31,170 --> 00:01:36,500
signs that say well please don't enter

30
00:01:33,840 --> 00:01:40,170
here that's just not working so

31
00:01:36,500 --> 00:01:42,450
basically with IOT we have the obvious

32
00:01:40,170 --> 00:01:47,759
thing happening that your internet is

33
00:01:42,450 --> 00:01:53,130
your extranet now for Felix part in the

34
00:01:47,759 --> 00:02:00,420
past we had certain tools that Felix did

35
00:01:53,130 --> 00:02:05,759
I have a mind fancy does it work yeah so

36
00:02:00,420 --> 00:02:07,380
I have a certain history of having

37
00:02:05,759 --> 00:02:12,620
written

38
00:02:07,380 --> 00:02:18,239
terrible coat that did a good job in

39
00:02:12,620 --> 00:02:20,610
penetrations generally so in one of the

40
00:02:18,239 --> 00:02:25,760
early tools was false

41
00:02:20,610 --> 00:02:29,069
our female it's own password sniffer

42
00:02:25,760 --> 00:02:34,209
which yeah supported all kinds of

43
00:02:29,069 --> 00:02:36,859
protocols some of them I still speak

44
00:02:34,210 --> 00:02:39,319
[Music]

45
00:02:36,860 --> 00:02:43,230
yeah

46
00:02:39,319 --> 00:02:47,040
then yeah people started employing

47
00:02:43,230 --> 00:02:53,450
switch networks and passwords happened

48
00:02:47,040 --> 00:02:53,450
to no longer fly past a certain system

49
00:02:54,050 --> 00:03:02,100
which I back in a day solved with with

50
00:02:59,340 --> 00:03:11,700
our POC which basically is an OP

51
00:03:02,100 --> 00:03:15,239
interceptor so yeah and then many things

52
00:03:11,700 --> 00:03:20,609
turned into TRS were back in the day was

53
00:03:15,239 --> 00:03:23,100
called SSL yeah so it the arms race has

54
00:03:20,610 --> 00:03:25,440
been going on for a while and now we

55
00:03:23,100 --> 00:03:29,459
also have TLS in Internet's and

56
00:03:25,440 --> 00:03:33,570
basically it's going somewhat down the

57
00:03:29,459 --> 00:03:37,170
right track but so how do we actually

58
00:03:33,570 --> 00:03:39,780
get trust back into our systems as in

59
00:03:37,170 --> 00:03:41,820
not I trust the system because I have to

60
00:03:39,780 --> 00:03:44,510
because otherwise I would be but

61
00:03:41,820 --> 00:03:47,640
actual how can I trust the system for

62
00:03:44,510 --> 00:03:50,220
certain thing what we do need of course

63
00:03:47,640 --> 00:03:52,440
is some kind of a symmetric crypto that

64
00:03:50,220 --> 00:03:54,329
usually helps but if you want to deploy

65
00:03:52,440 --> 00:03:56,549
that in any non-trivial setup you need

66
00:03:54,329 --> 00:04:00,680
PKI now comes the fun part

67
00:03:56,549 --> 00:04:04,650
PKI usually is designed for happy path

68
00:04:00,680 --> 00:04:07,739
who remembers that but it only takes one

69
00:04:04,650 --> 00:04:10,019
expired certificate to have all your

70
00:04:07,739 --> 00:04:12,769
plugins and firefox no longer work which

71
00:04:10,019 --> 00:04:16,108
is a bit of a bummer if you're using

72
00:04:12,769 --> 00:04:19,139
javascript blockers for instance or the

73
00:04:16,108 --> 00:04:19,899
tor browser but luckily they had a

74
00:04:19,139 --> 00:04:22,360
backboard

75
00:04:19,899 --> 00:04:24,880
so you could use the study's interface

76
00:04:22,360 --> 00:04:28,139
to roll out a new intermediate

77
00:04:24,880 --> 00:04:29,949
certificate to get it all working again

78
00:04:28,139 --> 00:04:33,639
nice I guess

79
00:04:29,949 --> 00:04:37,380
did they ever publish anything about who

80
00:04:33,639 --> 00:04:37,380
has access to those keys

81
00:04:38,850 --> 00:04:48,009
yeah if who your room has access to

82
00:04:42,639 --> 00:04:50,949
those keys no no one willing to say yeah

83
00:04:48,009 --> 00:04:53,919
the point is with what we're about to

84
00:04:50,949 --> 00:04:56,530
show you you would not have needed to

85
00:04:53,919 --> 00:05:00,240
use a backdoor to deploy and update to

86
00:04:56,530 --> 00:05:03,250
an intermediary then more recently our

87
00:05:00,240 --> 00:05:06,990
friends at Microsoft had a single

88
00:05:03,250 --> 00:05:12,160
certificate expired so teams didn't work

89
00:05:06,990 --> 00:05:15,010
so took a bit of a slack 20 million

90
00:05:12,160 --> 00:05:18,160
users affected that serious number but

91
00:05:15,010 --> 00:05:19,479
we have brought to you that a company

92
00:05:18,160 --> 00:05:23,530
that actually does monitoring from

93
00:05:19,479 --> 00:05:26,320
something like that so even if your PKI

94
00:05:23,530 --> 00:05:29,070
works you're using that x.509 thing

95
00:05:26,320 --> 00:05:31,150
usually and that is a bit coarse so you

96
00:05:29,070 --> 00:05:35,260
in the end it comes down to either

97
00:05:31,150 --> 00:05:38,530
having a valid certificate or not but

98
00:05:35,260 --> 00:05:40,539
the the levels of distinction between a

99
00:05:38,530 --> 00:05:45,909
valid certificate and not are a bit

100
00:05:40,539 --> 00:05:47,710
course it is a distributed system but as

101
00:05:45,909 --> 00:05:49,750
soon as you want to revoke anything it

102
00:05:47,710 --> 00:05:52,780
falls back to being centralized you need

103
00:05:49,750 --> 00:05:56,169
a no CSP or a crl and that is named in a

104
00:05:52,780 --> 00:05:58,270
certificate fixed and well what is the

105
00:05:56,169 --> 00:06:00,909
first thing you need us if you want to

106
00:05:58,270 --> 00:06:03,669
attack someone using certificates yeah

107
00:06:00,909 --> 00:06:06,909
that's it the other thing is the let's

108
00:06:03,669 --> 00:06:09,310
encrypt problem which you stumble over

109
00:06:06,909 --> 00:06:12,190
if you have a website that has a certain

110
00:06:09,310 --> 00:06:14,050
name that is similar to another third

111
00:06:12,190 --> 00:06:16,270
and certain name that is not yet

112
00:06:14,050 --> 00:06:17,830
registered and you're using let's

113
00:06:16,270 --> 00:06:20,680
encrypt certificates so someone else

114
00:06:17,830 --> 00:06:22,090
just signs up for the new domain that

115
00:06:20,680 --> 00:06:23,530
sounds somewhat like you closed your

116
00:06:22,090 --> 00:06:25,510
website and gets a certificate that

117
00:06:23,530 --> 00:06:27,750
looks basically for human exactly like

118
00:06:25,510 --> 00:06:32,070
what you have on the other website yeah

119
00:06:27,750 --> 00:06:35,740
then I think the terms porn and prawn

120
00:06:32,070 --> 00:06:38,320
so but if we do it right for once what

121
00:06:35,740 --> 00:06:41,500
do we need we need some kind of bouncer

122
00:06:38,320 --> 00:06:44,229
in our flat networks so there was that

123
00:06:41,500 --> 00:06:47,080
thing called ISO 28:28 which is a

124
00:06:44,229 --> 00:06:48,699
mouthful but I leave the short explainer

125
00:06:47,080 --> 00:06:55,060
what that is to Felix

126
00:06:48,699 --> 00:06:59,410
so 28:28 was developed by the automotive

127
00:06:55,060 --> 00:07:01,870
industry of the world they realized that

128
00:06:59,410 --> 00:07:06,610
having specific certificates in

129
00:07:01,870 --> 00:07:10,810
different parts of the car in order to

130
00:07:06,610 --> 00:07:13,720
verify who can control the engine or

131
00:07:10,810 --> 00:07:17,349
whatever is a pain in the butt because

132
00:07:13,720 --> 00:07:20,229
the car doesn't have permanent internet

133
00:07:17,349 --> 00:07:22,780
access and hence the certificate

134
00:07:20,229 --> 00:07:24,690
authority things you know the big

135
00:07:22,780 --> 00:07:30,809
service centres in the United States

136
00:07:24,690 --> 00:07:34,800
wouldn't be the right thing to ask and

137
00:07:30,810 --> 00:07:40,060
yeah then they came up with this idea of

138
00:07:34,800 --> 00:07:43,360
well how do we do that peer-to-peer yeah

139
00:07:40,060 --> 00:07:45,639
so we're by a peer-to-peer so there's

140
00:07:43,360 --> 00:07:47,500
only a very short step to making this a

141
00:07:45,639 --> 00:07:49,750
web of trust which every one of you

142
00:07:47,500 --> 00:07:51,250
should probably know from PGP though in

143
00:07:49,750 --> 00:07:55,870
our opinion they're doing it the wrong

144
00:07:51,250 --> 00:07:58,000
way around if you pair that again with a

145
00:07:55,870 --> 00:08:00,909
system that has very fine granular

146
00:07:58,000 --> 00:08:04,030
control to express what you want to do

147
00:08:00,909 --> 00:08:06,250
over a certain trust relationship say

148
00:08:04,030 --> 00:08:10,570
policy languages which have been around

149
00:08:06,250 --> 00:08:12,639
for a while and have the nice feature of

150
00:08:10,570 --> 00:08:14,889
allowing you to mathematically prove

151
00:08:12,639 --> 00:08:17,080
that they are doing the right thing no

152
00:08:14,889 --> 00:08:23,229
matter what web of trust relationship

153
00:08:17,080 --> 00:08:25,270
you're looking at and for actual proof

154
00:08:23,229 --> 00:08:27,580
of concept to make your network safer

155
00:08:25,270 --> 00:08:32,049
you need one more little thingy the

156
00:08:27,580 --> 00:08:34,360
concept of port mocking feelings before

157
00:08:32,049 --> 00:08:40,929
it was called port knocking by the

158
00:08:34,360 --> 00:08:42,370
copycats I actually invented that him it

159
00:08:40,929 --> 00:08:45,729
was

160
00:08:42,370 --> 00:08:48,730
basically the idea of certain traffic

161
00:08:45,730 --> 00:08:55,260
patterns you can observe on a receiving

162
00:08:48,730 --> 00:08:58,750
host and and that open support I won a

163
00:08:55,260 --> 00:09:01,839
packet storm shirt for that from the

164
00:08:58,750 --> 00:09:03,790
packet storm guys because that was the

165
00:09:01,839 --> 00:09:09,810
first code I ever submitted to packet

166
00:09:03,790 --> 00:09:12,939
storm and it works so basically the idea

167
00:09:09,810 --> 00:09:17,500
has been around for quite a while I

168
00:09:12,940 --> 00:09:21,700
think I've wrote it in 2001 something so

169
00:09:17,500 --> 00:09:23,350
that should date Felix quite well so now

170
00:09:21,700 --> 00:09:26,620
it's time for the part where you hold my

171
00:09:23,350 --> 00:09:29,589
beer because quite a while ago we came

172
00:09:26,620 --> 00:09:32,290
up with a thing that we simply duct

173
00:09:29,589 --> 00:09:38,080
trusted routing which is to the point

174
00:09:32,290 --> 00:09:40,380
but a bit simple so now I forgot my damn

175
00:09:38,080 --> 00:09:40,380
throw

176
00:09:57,640 --> 00:10:06,199
he's lying try it try it might be a bit

177
00:10:01,940 --> 00:10:09,860
spicy up the nose so look at your

178
00:10:06,200 --> 00:10:13,460
network your network is flat no comments

179
00:10:09,860 --> 00:10:15,710
we add some bumps on the wire nodes bump

180
00:10:13,460 --> 00:10:18,020
on the wire is simple you just have

181
00:10:15,710 --> 00:10:21,800
network in network out and it does

182
00:10:18,020 --> 00:10:24,079
something in between if you look at it I

183
00:10:21,800 --> 00:10:26,900
think I have a mouse here you have the

184
00:10:24,080 --> 00:10:30,940
bad untrusted side and the good internal

185
00:10:26,900 --> 00:10:34,819
trusted side and now stuff happens say

186
00:10:30,940 --> 00:10:37,430
node a wants to communicate with node C

187
00:10:34,820 --> 00:10:38,810
so they simply send a packet out not

188
00:10:37,430 --> 00:10:42,880
knowing that there's a bump on the wire

189
00:10:38,810 --> 00:10:47,510
in the network well the packet then gets

190
00:10:42,880 --> 00:10:48,980
queued on the trust route or a and that

191
00:10:47,510 --> 00:10:51,260
one simply looks at the packet and said

192
00:10:48,980 --> 00:10:56,060
well this packet was supposed to go to C

193
00:10:51,260 --> 00:11:00,439
I'll just send my own packet to C but I

194
00:10:56,060 --> 00:11:03,469
use my own address as the origin and

195
00:11:00,440 --> 00:11:05,120
that is the port knockin part so it's a

196
00:11:03,470 --> 00:11:07,760
special magic Patrick packet that you

197
00:11:05,120 --> 00:11:09,920
send around and you're sending it out in

198
00:11:07,760 --> 00:11:14,510
hopes of it reaching another trusted

199
00:11:09,920 --> 00:11:18,020
routing node if that happens that node

200
00:11:14,510 --> 00:11:20,839
captures the packet and directly answers

201
00:11:18,020 --> 00:11:22,670
to the origin address so now we have

202
00:11:20,839 --> 00:11:25,120
transparently found two nodes on a

203
00:11:22,670 --> 00:11:28,490
network or they have found each other

204
00:11:25,120 --> 00:11:31,820
and they can do a cryptographic

205
00:11:28,490 --> 00:11:36,350
handshake for the network engineering

206
00:11:31,820 --> 00:11:43,310
people among you that's basically how

207
00:11:36,350 --> 00:11:45,440
fast path routing works right so as part

208
00:11:43,310 --> 00:11:48,380
of that cryptographic handshake you can

209
00:11:45,440 --> 00:11:51,380
also pass along some trust information

210
00:11:48,380 --> 00:11:54,650
from your web of trust that says well

211
00:11:51,380 --> 00:11:57,560
technically I'm allowed to pass along

212
00:11:54,650 --> 00:11:59,720
information over the wire that I'm

213
00:11:57,560 --> 00:12:01,250
monitoring and I'm trusted with

214
00:11:59,720 --> 00:12:04,340
communication from a

215
00:12:01,250 --> 00:12:08,600
to see and if the partner on the other

216
00:12:04,340 --> 00:12:10,940
end trust router C agrees with that they

217
00:12:08,600 --> 00:12:14,180
can simply set up a firewall rule and

218
00:12:10,940 --> 00:12:18,160
let that pass then trust rota a gets an

219
00:12:14,180 --> 00:12:21,800
okay and they set up a firewall rule and

220
00:12:18,160 --> 00:12:23,000
release the cue packet so in here you

221
00:12:21,800 --> 00:12:26,060
have your Fast Pass

222
00:12:23,000 --> 00:12:28,520
yeah now how would you do that the quick

223
00:12:26,060 --> 00:12:32,390
recipe is the prop we implemented this

224
00:12:28,520 --> 00:12:34,040
on a Raspberry Pi it's stupid and we

225
00:12:32,390 --> 00:12:36,140
also learned that Raspberry Pi 2 at

226
00:12:34,040 --> 00:12:38,680
least is stupid if it comes to the

227
00:12:36,140 --> 00:12:41,780
network stack horrible horrible stuff

228
00:12:38,680 --> 00:12:43,930
firewalls use IP tables the queuing yeah

229
00:12:41,780 --> 00:12:47,660
use n of Q if you're using IP tables

230
00:12:43,930 --> 00:12:51,290
scouting some magic packets simple and

231
00:12:47,660 --> 00:12:53,569
then how to delegate trust you use what

232
00:12:51,290 --> 00:12:58,640
we're going to show you what pecky is

233
00:12:53,570 --> 00:13:00,950
developing for a few years now quick

234
00:12:58,640 --> 00:13:03,439
caveat you're paying with an initial

235
00:13:00,950 --> 00:13:05,450
delay here which should be obvious if

236
00:13:03,440 --> 00:13:08,450
you follow two slides the first packet

237
00:13:05,450 --> 00:13:11,930
is going to be slow on the probably

238
00:13:08,450 --> 00:13:16,520
order of a second or two but we can do

239
00:13:11,930 --> 00:13:21,380
better so we can do a quicker solution

240
00:13:16,520 --> 00:13:23,329
by being more trusting which is nice we

241
00:13:21,380 --> 00:13:26,780
let stuff through and then verify after

242
00:13:23,330 --> 00:13:30,680
the fact and deny what's untrusted which

243
00:13:26,780 --> 00:13:33,589
is okay for some cases but not think of

244
00:13:30,680 --> 00:13:36,050
sequel slammer right if you would do

245
00:13:33,589 --> 00:13:40,370
that and the exploit is in a single

246
00:13:36,050 --> 00:13:43,790
packet and yeah do you have been

247
00:13:40,370 --> 00:13:46,190
already yeah you can do it better in a

248
00:13:43,790 --> 00:13:48,110
different way because well it's usually

249
00:13:46,190 --> 00:13:49,910
a local network everyone knows each

250
00:13:48,110 --> 00:13:53,420
other there's a peer-to-peer network

251
00:13:49,910 --> 00:13:55,100
between the routing nodes you know the

252
00:13:53,420 --> 00:13:56,990
trust relationships so you can parse

253
00:13:55,100 --> 00:13:59,270
them upfront and create your dynamic

254
00:13:56,990 --> 00:14:03,940
firewall rules based on those and then

255
00:13:59,270 --> 00:14:06,350
proactively create rules so that's quick

256
00:14:03,940 --> 00:14:09,589
you could also set it up from a global

257
00:14:06,350 --> 00:14:13,760
view do on-demand inquiries to check

258
00:14:09,589 --> 00:14:15,150
whether you trust changed well even add

259
00:14:13,760 --> 00:14:17,100
in topology knowledge

260
00:14:15,150 --> 00:14:19,199
you have it the initial slides that I

261
00:14:17,100 --> 00:14:23,370
showed you where the stupid system that

262
00:14:19,200 --> 00:14:26,610
knows nothing but now you're asking okay

263
00:14:23,370 --> 00:14:29,160
that is stupid example it just Software

264
00:14:26,610 --> 00:14:31,500
Defined Networking and making firewalls

265
00:14:29,160 --> 00:14:35,250
more complicated but what is pecky

266
00:14:31,500 --> 00:14:36,810
actually bringing to the table here the

267
00:14:35,250 --> 00:14:41,010
thing called trust policies that I

268
00:14:36,810 --> 00:14:43,619
mentioned earlier here a truss policy is

269
00:14:41,010 --> 00:14:47,819
used to define allowed communication

270
00:14:43,620 --> 00:14:50,700
patterns which is a firewall rule if you

271
00:14:47,820 --> 00:14:53,250
look at it squint your eyes but we can

272
00:14:50,700 --> 00:14:56,130
express a lot more than that we can

273
00:14:53,250 --> 00:14:59,820
express values value ranges value

274
00:14:56,130 --> 00:15:03,060
structures we can delegate access to IP

275
00:14:59,820 --> 00:15:04,890
range blocks geo locations whatever you

276
00:15:03,060 --> 00:15:07,199
can express mathematically within the

277
00:15:04,890 --> 00:15:09,319
realm of the rules of the trust policy

278
00:15:07,200 --> 00:15:11,850
languages you can do and do so

279
00:15:09,320 --> 00:15:15,690
mathematically proven in a semantic free

280
00:15:11,850 --> 00:15:18,120
way which makes parsing less and makes

281
00:15:15,690 --> 00:15:20,010
it future compatible because you can

282
00:15:18,120 --> 00:15:22,860
have a policy language that allows you

283
00:15:20,010 --> 00:15:27,660
to add terms while it's deployed without

284
00:15:22,860 --> 00:15:30,690
having to change your software so how

285
00:15:27,660 --> 00:15:32,250
would such a policy look like this would

286
00:15:30,690 --> 00:15:34,680
be a long string so I broke it up into

287
00:15:32,250 --> 00:15:36,900
several rows we could say something like

288
00:15:34,680 --> 00:15:40,739
well the protocol this is effecting is

289
00:15:36,900 --> 00:15:45,150
UDP the destination ports should be

290
00:15:40,740 --> 00:15:47,940
somewhere in that range packets appear

291
00:15:45,150 --> 00:15:51,150
from this local IP range and they

292
00:15:47,940 --> 00:15:53,190
usually end up at one address you can

293
00:15:51,150 --> 00:15:56,220
then add more stuff make it protocol

294
00:15:53,190 --> 00:16:00,630
aware say well they're talking dnp3

295
00:15:56,220 --> 00:16:03,240
whatever you want to do and the nice

296
00:16:00,630 --> 00:16:06,360
part is that once you have such an

297
00:16:03,240 --> 00:16:10,260
expression you can do delegation in

298
00:16:06,360 --> 00:16:12,840
whole or in part say if your trusted

299
00:16:10,260 --> 00:16:14,970
with this IP block you can delegate

300
00:16:12,840 --> 00:16:18,810
subsets of it so you can say well I'm

301
00:16:14,970 --> 00:16:20,970
trusted with the slash 24 I can then

302
00:16:18,810 --> 00:16:24,869
tell someone else that they can actually

303
00:16:20,970 --> 00:16:28,839
handle on my behalf anything that is the

304
00:16:24,870 --> 00:16:31,750
same base but a slash 25 that will work

305
00:16:28,839 --> 00:16:34,690
actually I can delegate whatever I want

306
00:16:31,750 --> 00:16:37,459
but if I'm only trusted with the 24

307
00:16:34,690 --> 00:16:39,140
that's the only thing that would be

308
00:16:37,459 --> 00:16:40,880
effective because that's intrude by the

309
00:16:39,140 --> 00:16:44,029
mathematical principle of the policy

310
00:16:40,880 --> 00:16:47,890
language think of a CEO who delegates

311
00:16:44,029 --> 00:16:50,630
financial operations to the CFO yeah

312
00:16:47,890 --> 00:16:52,250
what we can now actually do is for the

313
00:16:50,630 --> 00:16:57,170
first time build a system that has

314
00:16:52,250 --> 00:16:59,200
proper federated trust it's easy you can

315
00:16:57,170 --> 00:17:02,750
do a distributed system and you can do a

316
00:16:59,200 --> 00:17:06,110
decentralized system because let's come

317
00:17:02,750 --> 00:17:06,949
to the key differences what the pecky

318
00:17:06,109 --> 00:17:10,329
web of trust

319
00:17:06,949 --> 00:17:13,459
authorization delegation system does is

320
00:17:10,329 --> 00:17:16,250
you're delegating at the edge instead of

321
00:17:13,459 --> 00:17:18,260
the center of your system so you can do

322
00:17:16,250 --> 00:17:19,819
that at an arbitrary precision you're no

323
00:17:18,260 --> 00:17:22,400
longer saying well you have a valid

324
00:17:19,819 --> 00:17:25,790
certificate from a certain CA you are a

325
00:17:22,400 --> 00:17:28,040
developer a user whatever no you get

326
00:17:25,790 --> 00:17:30,139
authorized for very specific operations

327
00:17:28,040 --> 00:17:33,559
in a very specific timeframe possibly

328
00:17:30,140 --> 00:17:36,169
limited to certain locations you can

329
00:17:33,559 --> 00:17:38,899
even do funky stuff like multiple

330
00:17:36,169 --> 00:17:42,020
parallel paths the thing is where you

331
00:17:38,900 --> 00:17:44,419
delegate half of what you need to one

332
00:17:42,020 --> 00:17:48,230
party the other half to another party

333
00:17:44,419 --> 00:17:50,809
and then do from he n of M trust where

334
00:17:48,230 --> 00:17:53,210
they have to come together create a new

335
00:17:50,809 --> 00:17:55,178
identity delegate all they have to that

336
00:17:53,210 --> 00:17:58,580
new identity and that identity can then

337
00:17:55,179 --> 00:18:01,000
launch nuclear missiles we got offensive

338
00:17:58,580 --> 00:18:03,799
[Music]

339
00:18:01,000 --> 00:18:06,950
what everyone is doing actually to prove

340
00:18:03,799 --> 00:18:10,520
that something is true is a synthetic

341
00:18:06,950 --> 00:18:13,010
quoted delegation proof what you would

342
00:18:10,520 --> 00:18:15,710
usually call a certificate but which is

343
00:18:13,010 --> 00:18:18,410
kind of not it's basically in the human

344
00:18:15,710 --> 00:18:20,600
terminology of trust saying well that

345
00:18:18,410 --> 00:18:23,059
guy said that this guy said that I'm

346
00:18:20,600 --> 00:18:23,360
allowed to do this year that's how it

347
00:18:23,059 --> 00:18:27,379
works

348
00:18:23,360 --> 00:18:30,709
and we are also no longer using stuff

349
00:18:27,380 --> 00:18:33,169
like explicit revocation because that's

350
00:18:30,710 --> 00:18:37,429
how we got a centralized system our of

351
00:18:33,169 --> 00:18:40,730
x.509 instead every node participating

352
00:18:37,429 --> 00:18:41,660
in this trust network has one single

353
00:18:40,730 --> 00:18:44,720
truth

354
00:18:41,660 --> 00:18:47,470
the latest thing they said and that is

355
00:18:44,720 --> 00:18:50,660
something everyone else can verify it

356
00:18:47,470 --> 00:18:54,740
because if I'm saying well I trust Felix

357
00:18:50,660 --> 00:18:56,870
for something and I change my mind and

358
00:18:54,740 --> 00:18:58,040
say well I'm trusting him for something

359
00:18:56,870 --> 00:19:00,830
else or not anymore

360
00:18:58,040 --> 00:19:04,639
and I published that and someone gets

361
00:19:00,830 --> 00:19:06,679
both my utterances and said well you

362
00:19:04,640 --> 00:19:10,550
said this at one time and this at the

363
00:19:06,680 --> 00:19:13,370
other they can still verify that one is

364
00:19:10,550 --> 00:19:17,510
newer than the other which think of

365
00:19:13,370 --> 00:19:20,600
politicians on the news which brings us

366
00:19:17,510 --> 00:19:23,750
back to the Firefox problem because if I

367
00:19:20,600 --> 00:19:26,300
can just change my mind and in that case

368
00:19:23,750 --> 00:19:30,050
the intermediary would change their mind

369
00:19:26,300 --> 00:19:33,129
and say well we extend the validity of

370
00:19:30,050 --> 00:19:36,200
this certificate all you need to do is

371
00:19:33,130 --> 00:19:39,590
transport that updated ground truth of

372
00:19:36,200 --> 00:19:42,080
that single node to everyone and the

373
00:19:39,590 --> 00:19:44,120
transport way of getting it to someone

374
00:19:42,080 --> 00:19:46,580
it can be fully untrusted we don't care

375
00:19:44,120 --> 00:19:48,679
because in the end when you get some

376
00:19:46,580 --> 00:19:50,830
information you can say well I've seen

377
00:19:48,680 --> 00:19:54,530
information from that source so

378
00:19:50,830 --> 00:19:56,419
signature seems right but I only have

379
00:19:54,530 --> 00:19:58,940
something that's older okay let's throw

380
00:19:56,420 --> 00:20:01,790
away the older one and integrate a new

381
00:19:58,940 --> 00:20:04,700
one so you do not need to use study

382
00:20:01,790 --> 00:20:06,379
systems back doors and that brings us to

383
00:20:04,700 --> 00:20:09,080
the last part we are fully transport

384
00:20:06,380 --> 00:20:12,470
agnostic so the way to exchange

385
00:20:09,080 --> 00:20:16,129
information we couldn't care less it

386
00:20:12,470 --> 00:20:18,320
could be stolen for networking where are

387
00:20:16,130 --> 00:20:20,870
we currently on a text stack so I've

388
00:20:18,320 --> 00:20:22,909
been talking about a solution so you can

389
00:20:20,870 --> 00:20:27,699
think of it as something that lives on

390
00:20:22,910 --> 00:20:30,680
the same level technology wise as x.509

391
00:20:27,700 --> 00:20:32,840
you can use it to build your own PKI you

392
00:20:30,680 --> 00:20:36,290
can directly build it into your iot

393
00:20:32,840 --> 00:20:38,600
systems because well we've been building

394
00:20:36,290 --> 00:20:41,060
that and rust and just recently got to

395
00:20:38,600 --> 00:20:44,209
the point where it compiles at with no

396
00:20:41,060 --> 00:20:49,100
STD so we can target ESP 32 which is

397
00:20:44,210 --> 00:20:52,700
nice but yeah the title said look what

398
00:20:49,100 --> 00:20:54,469
you will be up against soon the usual

399
00:20:52,700 --> 00:20:55,980
question I get at this point is well

400
00:20:54,470 --> 00:21:00,390
cool sorry bro but who

401
00:20:55,980 --> 00:21:02,510
using it so with one of our partners

402
00:21:00,390 --> 00:21:06,419
we're going to do a fly device bootstrap

403
00:21:02,510 --> 00:21:09,150
which means it's basically the proper

404
00:21:06,419 --> 00:21:12,030
way of onboarding your vacuum robot at

405
00:21:09,150 --> 00:21:13,770
home because usually you open a Wi-Fi

406
00:21:12,030 --> 00:21:17,460
hot spot and that device connect with

407
00:21:13,770 --> 00:21:19,500
your mobile phone and then the device

408
00:21:17,460 --> 00:21:23,100
will basically trust you because its

409
00:21:19,500 --> 00:21:25,770
principle of first use which is ok for a

410
00:21:23,100 --> 00:21:28,350
home vacuum robot but not if you're

411
00:21:25,770 --> 00:21:30,480
deploying thousands of IOT devices in a

412
00:21:28,350 --> 00:21:32,969
corporate environment because there you

413
00:21:30,480 --> 00:21:36,480
might want to verify that a from the

414
00:21:32,970 --> 00:21:38,340
point of view of the device the guy or

415
00:21:36,480 --> 00:21:41,880
gal currently configuring me is actually

416
00:21:38,340 --> 00:21:44,159
authorized to do that and from the point

417
00:21:41,880 --> 00:21:46,980
of the person doing a configuration you

418
00:21:44,160 --> 00:21:48,750
might want to verify that this is one of

419
00:21:46,980 --> 00:21:50,490
your thousand devices that you ordered

420
00:21:48,750 --> 00:21:55,290
and not the thousand and what first

421
00:21:50,490 --> 00:21:57,090
device that is a plant and you need to

422
00:21:55,290 --> 00:21:59,159
do that in a fully offline environment

423
00:21:57,090 --> 00:22:00,600
because well that device just opened a

424
00:21:59,160 --> 00:22:03,780
hot spot for you and you're connecting

425
00:22:00,600 --> 00:22:06,149
to it so you need to do all the proofing

426
00:22:03,780 --> 00:22:08,250
between each other to convince each

427
00:22:06,150 --> 00:22:11,940
other that what is happening right now

428
00:22:08,250 --> 00:22:15,030
is ok without being able to consult any

429
00:22:11,940 --> 00:22:17,010
third party at that point with another

430
00:22:15,030 --> 00:22:20,790
partner we're looking into bringing this

431
00:22:17,010 --> 00:22:22,980
into smart home building controls so you

432
00:22:20,790 --> 00:22:25,770
can actually delegate access to your

433
00:22:22,980 --> 00:22:28,679
front door without having to onboard

434
00:22:25,770 --> 00:22:32,100
people with your smart home system

435
00:22:28,679 --> 00:22:36,929
directly so imagine yourself on the

436
00:22:32,100 --> 00:22:38,909
beach in the Caribbean and friend calls

437
00:22:36,929 --> 00:22:40,710
you up and said well I'm in Berlin next

438
00:22:38,910 --> 00:22:44,220
week can I crash at your couch and

439
00:22:40,710 --> 00:22:47,370
you're like cool sorry but I'm in the

440
00:22:44,220 --> 00:22:49,620
Caribbean you can simply send them an

441
00:22:47,370 --> 00:22:51,989
email even if they don't have access to

442
00:22:49,620 --> 00:22:54,270
their smart home system because well

443
00:22:51,990 --> 00:22:56,190
clearly you have but so does everyone

444
00:22:54,270 --> 00:22:58,799
running your smart home system you don't

445
00:22:56,190 --> 00:23:00,750
want to do that you can delegate the

446
00:22:58,799 --> 00:23:03,418
permission to them and send them an

447
00:23:00,750 --> 00:23:06,450
email with the delegation and they can

448
00:23:03,419 --> 00:23:08,490
take this information to your door and

449
00:23:06,450 --> 00:23:09,880
present it basically tell door well

450
00:23:08,490 --> 00:23:12,580
we've never

451
00:23:09,880 --> 00:23:14,230
seeing each other but your owner told me

452
00:23:12,580 --> 00:23:17,350
it's okay to open this and the doors

453
00:23:14,230 --> 00:23:21,990
like cool okay that works if you have

454
00:23:17,350 --> 00:23:26,350
that deployed you have a smart ass home

455
00:23:21,990 --> 00:23:29,799
yeah we're also working with a payment

456
00:23:26,350 --> 00:23:32,709
processor doing user permissions and

457
00:23:29,799 --> 00:23:34,870
access control and midterm plan is to

458
00:23:32,710 --> 00:23:39,010
actually have a bank running running on

459
00:23:34,870 --> 00:23:41,469
delegated web of trust and long term my

460
00:23:39,010 --> 00:23:44,650
wish is fixing PSD with version 3

461
00:23:41,470 --> 00:23:47,470
because imagine you have a bank account

462
00:23:44,650 --> 00:23:49,809
and a text consultant and instead of

463
00:23:47,470 --> 00:23:51,700
having to go to your bank and onboarding

464
00:23:49,809 --> 00:23:54,908
your text consultant so they can look at

465
00:23:51,700 --> 00:23:56,970
whatever you booked on your bank account

466
00:23:54,909 --> 00:24:00,520
for the last year to do your tax returns

467
00:23:56,970 --> 00:24:04,690
you simply tell the text accountant well

468
00:24:00,520 --> 00:24:08,408
look at this account number for the

469
00:24:04,690 --> 00:24:12,340
duration of last year but please only

470
00:24:08,409 --> 00:24:14,470
read no executions no bookings whatever

471
00:24:12,340 --> 00:24:17,110
just read what's in there

472
00:24:14,470 --> 00:24:20,830
and you tell that to your tax consultant

473
00:24:17,110 --> 00:24:22,510
in a science structure and the text

474
00:24:20,830 --> 00:24:24,730
comes out and then goes to the bank and

475
00:24:22,510 --> 00:24:26,860
says well I don't have an account here

476
00:24:24,730 --> 00:24:29,740
but I have permission to access one and

477
00:24:26,860 --> 00:24:33,809
the bank can simply approve that without

478
00:24:29,740 --> 00:24:37,840
having to talk to me which is nice

479
00:24:33,809 --> 00:24:43,418
probably spell out PSD so people don't

480
00:24:37,840 --> 00:24:46,418
think of files from Adobe Photoshop it's

481
00:24:43,419 --> 00:24:48,340
the payment service directive and PSD to

482
00:24:46,419 --> 00:24:50,830
is that nice thing that I think

483
00:24:48,340 --> 00:24:53,439
legalized so for televisin which is a

484
00:24:50,830 --> 00:24:55,780
whole different thing anyway we're also

485
00:24:53,440 --> 00:24:58,419
a member of the MCC which is the

486
00:24:55,780 --> 00:25:01,360
maritime connectivity platform

487
00:24:58,419 --> 00:25:04,020
consortium which is a mouthful and we're

488
00:25:01,360 --> 00:25:07,510
currently looking into enabling

489
00:25:04,020 --> 00:25:10,929
decentralized PKI for international

490
00:25:07,510 --> 00:25:13,240
shipping we're also partnering with

491
00:25:10,929 --> 00:25:15,130
several companies on the SCARA and ICS

492
00:25:13,240 --> 00:25:17,940
front to finally get critical

493
00:25:15,130 --> 00:25:20,770
infrastructure a bit more trusting

494
00:25:17,940 --> 00:25:23,170
including legacy support which is not

495
00:25:20,770 --> 00:25:26,560
quite unlike what I present

496
00:25:23,170 --> 00:25:28,060
earlier with another partner we're

497
00:25:26,560 --> 00:25:30,190
currently developing a proof-of-concept

498
00:25:28,060 --> 00:25:33,310
for highly resilient field

499
00:25:30,190 --> 00:25:36,640
communications based on Laura Wong and

500
00:25:33,310 --> 00:25:39,220
classic RF communications and last but

501
00:25:36,640 --> 00:25:44,050
not least we're currently in the process

502
00:25:39,220 --> 00:25:46,240
of tying all that to Fido - which is

503
00:25:44,050 --> 00:25:50,020
interesting because if you're a German

504
00:25:46,240 --> 00:25:51,730
citizen or soon a European citizen the

505
00:25:50,020 --> 00:25:55,560
German ID card is actually a fight or

506
00:25:51,730 --> 00:25:58,330
two token so you would have a well

507
00:25:55,560 --> 00:26:02,399
system where you can do delegations and

508
00:25:58,330 --> 00:26:04,449
contracts based on the state ID which is

509
00:26:02,400 --> 00:26:09,070
actually what you want if you're

510
00:26:04,450 --> 00:26:13,690
digitizing your state no longer going to

511
00:26:09,070 --> 00:26:16,570
the officers are dreaming so that's it

512
00:26:13,690 --> 00:26:20,740
basically technology wise and we're very

513
00:26:16,570 --> 00:26:23,310
good on time what did you see you saw a

514
00:26:20,740 --> 00:26:25,690
system that allows fully offline

515
00:26:23,310 --> 00:26:28,600
authorization it's not authentication

516
00:26:25,690 --> 00:26:31,120
though that is a step of it it is a

517
00:26:28,600 --> 00:26:33,580
decentralized web of trust in the truest

518
00:26:31,120 --> 00:26:35,679
sense you don't need any central

519
00:26:33,580 --> 00:26:38,649
infrastructure you can use it if you

520
00:26:35,680 --> 00:26:43,300
want you can delegate and express

521
00:26:38,650 --> 00:26:45,640
delegations at arbitrary-precision which

522
00:26:43,300 --> 00:26:49,780
is a bit more than predefined levels in

523
00:26:45,640 --> 00:26:52,450
x.509 you can delegate these expressions

524
00:26:49,780 --> 00:26:53,889
in part or in full and it's fully

525
00:26:52,450 --> 00:26:55,150
transport agnostic so you can use the

526
00:26:53,890 --> 00:26:57,300
central database appear to be a

527
00:26:55,150 --> 00:26:59,290
networked store-and-forward networking

528
00:26:57,300 --> 00:27:04,540
opportunistic communication whatever you

529
00:26:59,290 --> 00:27:07,090
want we showed you that an example of

530
00:27:04,540 --> 00:27:09,570
the trusted routing retrofit and what

531
00:27:07,090 --> 00:27:15,429
you did not see was block chain

532
00:27:09,570 --> 00:27:17,500
so once that's in the field our idea is

533
00:27:15,430 --> 00:27:22,870
to make revocation they look more like

534
00:27:17,500 --> 00:27:28,990
that and not like Pearl Harbor so if you

535
00:27:22,870 --> 00:27:31,080
have any questions now's the time thank

536
00:27:28,990 --> 00:27:31,080
you

537
00:27:35,800 --> 00:27:42,780
maybe maybe to anticipate one question

538
00:27:39,040 --> 00:27:46,020
how is that relevant to people like you

539
00:27:42,780 --> 00:27:53,860
basically think of a network where

540
00:27:46,020 --> 00:27:57,809
you're breaking in and executing a input

541
00:27:53,860 --> 00:28:04,059
on one node right what we usually call

542
00:27:57,809 --> 00:28:10,149
exploitation now this one node can

543
00:28:04,059 --> 00:28:13,178
actually tell other nodes that look

544
00:28:10,150 --> 00:28:17,800
there's strings coming that contain a

545
00:28:13,179 --> 00:28:22,660
bunch of A's and then a bunch of Unicode

546
00:28:17,800 --> 00:28:27,370
characters if you see them don't eat

547
00:28:22,660 --> 00:28:29,910
them it's it's a bit like it's a bit

548
00:28:27,370 --> 00:28:34,540
like drug consumption on parties right

549
00:28:29,910 --> 00:28:38,679
so you get a pill and you walk to a

550
00:28:34,540 --> 00:28:43,840
friend and say did you try that is it

551
00:28:38,679 --> 00:28:46,650
good and if he looks like that to you

552
00:28:43,840 --> 00:28:50,320
then here you have your answer

553
00:28:46,650 --> 00:28:52,570
yeah the key point is that because you

554
00:28:50,320 --> 00:28:54,700
have arbitrary precision delegations

555
00:28:52,570 --> 00:28:58,270
between each node on your network if you

556
00:28:54,700 --> 00:29:03,580
use that they actually trust each other

557
00:28:58,270 --> 00:29:05,860
for exactly their job so usually if you

558
00:29:03,580 --> 00:29:07,870
have secondary core competence yes their

559
00:29:05,860 --> 00:29:09,550
core component if you have a shop floor

560
00:29:07,870 --> 00:29:12,760
where you have a big milling machine

561
00:29:09,550 --> 00:29:15,300
that is allowed to order replacements

562
00:29:12,760 --> 00:29:18,370
for broken mills from your SI p system

563
00:29:15,300 --> 00:29:20,020
which is the nice nice thing that you're

564
00:29:18,370 --> 00:29:23,800
supposed to do nowadays with all

565
00:29:20,020 --> 00:29:26,889
automated it looks a bit odd if that

566
00:29:23,800 --> 00:29:28,960
machine suddenly starts accessing Samba

567
00:29:26,890 --> 00:29:32,260
shares on your network because that's

568
00:29:28,960 --> 00:29:34,000
not what it's trusted for so that's

569
00:29:32,260 --> 00:29:36,610
exactly the point that we're trying to

570
00:29:34,000 --> 00:29:38,350
make if you're very precise in

571
00:29:36,610 --> 00:29:40,780
expressing what is allowed over a

572
00:29:38,350 --> 00:29:43,149
certain communication channel you have

573
00:29:40,780 --> 00:29:45,340
way more difficulty in doing lateral

574
00:29:43,150 --> 00:29:51,030
movement once you compromised one note

575
00:29:45,340 --> 00:29:51,030
so the problem stays local any question

576
00:29:52,410 --> 00:30:05,080
no don't be tempted everyone fall asleep

577
00:29:59,080 --> 00:30:10,030
there's no questions in the room I will

578
00:30:05,080 --> 00:30:11,860
also take offensive questions if their

579
00:30:10,030 --> 00:30:17,500
questions aren't offensive I can try to

580
00:30:11,860 --> 00:30:21,250
fill in you just walk past it be aware

581
00:30:17,500 --> 00:30:23,410
you might get an offensive answer just

582
00:30:21,250 --> 00:30:26,250
one question how powerful is this

583
00:30:23,410 --> 00:30:29,919
expression language for policies and how

584
00:30:26,250 --> 00:30:34,380
let's say how complex are the parsers

585
00:30:29,919 --> 00:30:36,700
for that the parses are susceptible

586
00:30:34,380 --> 00:30:40,470
which was the whole point it is a

587
00:30:36,700 --> 00:30:43,360
context-free language it is

588
00:30:40,470 --> 00:30:46,360
mathematically speaking it is a lattice

589
00:30:43,360 --> 00:30:48,520
language so you have very small elements

590
00:30:46,360 --> 00:30:50,918
for which you prove that the

591
00:30:48,520 --> 00:30:53,020
mathematical guarantee is hold and then

592
00:30:50,919 --> 00:30:54,700
you have structure elements for which

593
00:30:53,020 --> 00:30:56,500
you prove the same thing and then you

594
00:30:54,700 --> 00:30:58,780
can arbitrarily stack them together

595
00:30:56,500 --> 00:31:01,059
because we have a proof for the

596
00:30:58,780 --> 00:31:03,549
operation of stacking stuff together so

597
00:31:01,059 --> 00:31:05,889
even if you have a very complex policy

598
00:31:03,549 --> 00:31:07,150
by the looks of it the individual

599
00:31:05,890 --> 00:31:08,980
elements and the way you stack them

600
00:31:07,150 --> 00:31:12,360
together is fully mathematically proven

601
00:31:08,980 --> 00:31:15,820
so that works and on a parsing level

602
00:31:12,360 --> 00:31:18,699
you're actually just looking at strings

603
00:31:15,820 --> 00:31:21,120
and you're deciding well this expression

604
00:31:18,700 --> 00:31:23,980
is bigger than the other expression and

605
00:31:21,120 --> 00:31:25,750
you're not attaching any semantics on

606
00:31:23,980 --> 00:31:28,240
the library level the semantics is

607
00:31:25,750 --> 00:31:31,000
purely on application level by the

608
00:31:28,240 --> 00:31:33,549
programmer saying well if this operation

609
00:31:31,000 --> 00:31:37,150
is requested for me this policy needs to

610
00:31:33,549 --> 00:31:40,450
be fulfilled and this policy is nothing

611
00:31:37,150 --> 00:31:46,900
but a block of a string does that answer

612
00:31:40,450 --> 00:31:50,220
your question well we can delve in that

613
00:31:46,900 --> 00:31:50,220
later over a beer if you want

