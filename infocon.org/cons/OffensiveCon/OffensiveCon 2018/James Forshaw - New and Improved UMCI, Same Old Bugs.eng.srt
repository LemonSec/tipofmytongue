1
00:00:03,770 --> 00:00:07,740
<font color="#CCCCCC">good afternoon</font><font color="#E5E5E5"> offensive gun it's good</font>

2
00:00:06,629 --> 00:00:10,678
to be here<font color="#E5E5E5"> and</font><font color="#CCCCCC"> good to see so</font><font color="#E5E5E5"> many</font>

3
00:00:07,740 --> 00:00:12,690
people<font color="#E5E5E5"> here yeah I'm talking</font><font color="#CCCCCC"> about user</font>

4
00:00:10,679 --> 00:00:15,330
<font color="#CCCCCC">mode code integrity which is a</font>

5
00:00:12,690 --> 00:00:17,820
technology Microsoft added<font color="#E5E5E5"> originally in</font>

6
00:00:15,330 --> 00:00:20,279
Windows 8 and was deployed<font color="#E5E5E5"> on Windows RT</font>

7
00:00:17,820 --> 00:00:23,250
which was the ARM based surface laptops

8
00:00:20,279 --> 00:00:24,869
<font color="#E5E5E5">and what effectively is is sort of an</font>

9
00:00:23,250 --> 00:00:28,439
application whitelisting solution it

10
00:00:24,869 --> 00:00:29,970
allows you<font color="#E5E5E5"> to restrict</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> signed</font>

11
00:00:28,439 --> 00:00:31,920
applications are allowed to run in<font color="#E5E5E5"> your</font>

12
00:00:29,970 --> 00:00:33,210
system<font color="#E5E5E5"> if this application</font><font color="#CCCCCC"> is unsigned</font>

13
00:00:31,920 --> 00:00:35,840
or it's not signed by<font color="#E5E5E5"> a specific</font>

14
00:00:33,210 --> 00:00:38,940
certificate<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the Windows RT case</font>

15
00:00:35,840 --> 00:00:40,500
<font color="#E5E5E5">specific certificates from Microsoft it</font>

16
00:00:38,940 --> 00:00:42,930
would not actually<font color="#E5E5E5"> allow you to run</font><font color="#CCCCCC"> that</font>

17
00:00:40,500 --> 00:00:44,340
<font color="#E5E5E5">executable</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the idea being malware</font>

18
00:00:42,930 --> 00:00:48,239
can't get on your system and<font color="#CCCCCC"> all that</font>

19
00:00:44,340 --> 00:00:50,370
good<font color="#E5E5E5"> stuff now actually configuring use</font>

20
00:00:48,239 --> 00:00:52,199
<font color="#E5E5E5">my</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> integrity on Windows 8 was quite</font>

21
00:00:50,370 --> 00:00:54,390
difficult you needed to install secure

22
00:00:52,199 --> 00:00:57,180
boot policies and while you could turn

23
00:00:54,390 --> 00:01:00,390
<font color="#CCCCCC">it on for x86</font><font color="#E5E5E5"> it was not really</font>

24
00:00:57,180 --> 00:01:03,629
<font color="#CCCCCC">documented or supported now the big</font>

25
00:01:00,390 --> 00:01:05,670
change is<font color="#E5E5E5"> that very recently Microsoft</font>

26
00:01:03,629 --> 00:01:07,408
<font color="#E5E5E5">introduced Windows</font><font color="#CCCCCC"> 10s which was</font>

27
00:01:05,670 --> 00:01:09,060
<font color="#E5E5E5">originally asked you now apparently it's</font>

28
00:01:07,409 --> 00:01:11,310
just<font color="#CCCCCC"> the mode I</font><font color="#E5E5E5"> think that's probably</font>

29
00:01:09,060 --> 00:01:13,890
splitting hairs a<font color="#CCCCCC"> little bit but</font>

30
00:01:11,310 --> 00:01:16,110
effectively it's a new consumer version

31
00:01:13,890 --> 00:01:17,070
<font color="#E5E5E5">of Windows RT and it's streamlined for</font>

32
00:01:16,110 --> 00:01:19,439
security<font color="#CCCCCC"> and superior performance</font>

33
00:01:17,070 --> 00:01:21,210
<font color="#CCCCCC">apparently</font><font color="#E5E5E5"> I think this is a bit of PR</font>

34
00:01:19,439 --> 00:01:23,460
<font color="#E5E5E5">spin of course but it's sort of like</font>

35
00:01:21,210 --> 00:01:25,500
<font color="#E5E5E5">Microsoft's response to Chrome OS and</font>

36
00:01:23,460 --> 00:01:27,630
restricting everything to browser or

37
00:01:25,500 --> 00:01:29,700
only<font color="#CCCCCC"> store applications you</font><font color="#E5E5E5"> can download</font>

38
00:01:27,630 --> 00:01:34,589
stuff off the store because it's kind<font color="#E5E5E5"> of</font>

39
00:01:29,700 --> 00:01:36,570
signed by Microsoft so let's have a very

40
00:01:34,590 --> 00:01:39,000
quick<font color="#E5E5E5"> introduction to the architecture</font>

41
00:01:36,570 --> 00:01:41,880
<font color="#CCCCCC">and</font><font color="#E5E5E5"> how you NCI actually works under the</font>

42
00:01:39,000 --> 00:01:44,490
<font color="#E5E5E5">hood now there's actually two components</font>

43
00:01:41,880 --> 00:01:47,640
<font color="#E5E5E5">to</font><font color="#CCCCCC"> you mci</font><font color="#E5E5E5"> the first one is actually the</font>

44
00:01:44,490 --> 00:01:49,679
enforcement of executables and DLL

45
00:01:47,640 --> 00:01:51,210
loading so when you<font color="#CCCCCC"> actually load an</font>

46
00:01:49,680 --> 00:01:54,210
executable<font color="#E5E5E5"> or when you</font><font color="#CCCCCC"> actually load</font><font color="#E5E5E5"> a</font>

47
00:01:51,210 --> 00:01:55,259
<font color="#E5E5E5">DLL you actually ask the kernel</font><font color="#CCCCCC"> can you</font>

48
00:01:54,210 --> 00:01:58,199
create me something called an image

49
00:01:55,259 --> 00:02:01,439
section<font color="#E5E5E5"> and then can you pass</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> P</font>

50
00:01:58,200 --> 00:02:03,899
file<font color="#E5E5E5"> and map it</font><font color="#CCCCCC"> into memory</font><font color="#E5E5E5"> and what the</font>

51
00:02:01,439 --> 00:02:06,360
kernel<font color="#E5E5E5"> can do at this point is request</font>

52
00:02:03,899 --> 00:02:08,190
the services of the library in<font color="#CCCCCC"> the</font>

53
00:02:06,360 --> 00:02:11,250
kernel<font color="#CCCCCC"> mode the CID allow the code</font>

54
00:02:08,190 --> 00:02:12,790
integrity<font color="#E5E5E5"> DLL say could</font><font color="#CCCCCC"> you verify</font><font color="#E5E5E5"> that</font>

55
00:02:11,250 --> 00:02:14,440
<font color="#E5E5E5">PE file</font>

56
00:02:12,790 --> 00:02:17,340
the signature<font color="#E5E5E5"> of that P file against</font>

57
00:02:14,440 --> 00:02:19,480
<font color="#E5E5E5">some sort of system integrity policy and</font>

58
00:02:17,340 --> 00:02:21,340
<font color="#CCCCCC">system integrity policy used to be part</font>

59
00:02:19,480 --> 00:02:24,819
<font color="#E5E5E5">secure boot but is</font><font color="#CCCCCC"> actually now a file</font>

60
00:02:21,340 --> 00:02:26,650
on<font color="#CCCCCC"> disk and you also refer to heard this</font>

61
00:02:24,819 --> 00:02:28,629
referred<font color="#E5E5E5"> to as using device guard at the</font>

62
00:02:26,650 --> 00:02:30,099
vice squad policy<font color="#E5E5E5"> and this can be</font>

63
00:02:28,629 --> 00:02:32,129
provided by<font color="#E5E5E5"> the user but in terms of</font>

64
00:02:30,099 --> 00:02:34,959
Windows 10<font color="#CCCCCC"> S</font><font color="#E5E5E5"> is provided by Microsoft</font>

65
00:02:32,129 --> 00:02:37,480
<font color="#E5E5E5">and this effectually enforces signature</font>

66
00:02:34,959 --> 00:02:41,019
verification on executables and DLL so

67
00:02:37,480 --> 00:02:43,030
you can't load an untrusted binary but

68
00:02:41,019 --> 00:02:44,769
what about all those<font color="#E5E5E5"> applications which</font>

69
00:02:43,030 --> 00:02:46,690
run<font color="#CCCCCC"> in user</font><font color="#E5E5E5"> mode on a standard Windows</font>

70
00:02:44,769 --> 00:02:49,299
system which could act as<font color="#E5E5E5"> confused</font>

71
00:02:46,690 --> 00:02:51,310
deputies could load<font color="#E5E5E5"> our tree script code</font>

72
00:02:49,299 --> 00:02:54,250
and give you fall<font color="#E5E5E5"> in terms</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> purposes</font>

73
00:02:51,310 --> 00:02:56,590
arbitrary code execution<font color="#CCCCCC"> any way to do a</font>

74
00:02:54,250 --> 00:02:58,030
bit of mitigation<font color="#E5E5E5"> against that might</font>

75
00:02:56,590 --> 00:02:59,650
<font color="#E5E5E5">also</font><font color="#CCCCCC"> has something</font><font color="#E5E5E5"> called</font><font color="#CCCCCC"> a Windows</font>

76
00:02:58,030 --> 00:03:03,390
<font color="#E5E5E5">lockdown policy and the</font><font color="#CCCCCC"> Windows lockdown</font>

77
00:02:59,650 --> 00:03:06,609
<font color="#CCCCCC">policies implemented in</font><font color="#E5E5E5"> this wdp DLL and</font>

78
00:03:03,390 --> 00:03:08,619
it allows what could be referred to<font color="#E5E5E5"> as</font>

79
00:03:06,609 --> 00:03:10,060
enlightened script engines so most of

80
00:03:08,620 --> 00:03:11,879
the script engines on Windows such as

81
00:03:10,060 --> 00:03:14,170
<font color="#E5E5E5">PowerShell out</font><font color="#CCCCCC"> windows scripting hosts</font>

82
00:03:11,879 --> 00:03:16,358
are all considered to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> enlightened</font>

83
00:03:14,170 --> 00:03:18,250
they know about<font color="#E5E5E5"> you and CI and if you</font>

84
00:03:16,359 --> 00:03:20,889
have<font color="#E5E5E5"> C eyes on they will</font><font color="#CCCCCC"> actually</font>

85
00:03:18,250 --> 00:03:22,930
enforce additional restrictions on that

86
00:03:20,889 --> 00:03:24,400
scripting content whether<font color="#E5E5E5"> it be</font><font color="#CCCCCC"> on power</font>

87
00:03:22,930 --> 00:03:26,980
shells case turning on something called

88
00:03:24,400 --> 00:03:29,230
<font color="#E5E5E5">constrain language</font><font color="#CCCCCC"> modes or in the</font>

89
00:03:26,980 --> 00:03:30,668
script host case in<font color="#CCCCCC"> jscript it will</font>

90
00:03:29,230 --> 00:03:35,560
<font color="#CCCCCC">actually restrict what comm objects you</font>

91
00:03:30,669 --> 00:03:37,389
<font color="#E5E5E5">can access so actually if you want to</font>

92
00:03:35,560 --> 00:03:39,730
test<font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> 10 s you could by laptop</font>

93
00:03:37,389 --> 00:03:41,650
<font color="#E5E5E5">this is actually I'm using a surface</font>

94
00:03:39,730 --> 00:03:43,179
laptop which came<font color="#CCCCCC"> with Windows</font><font color="#E5E5E5"> 10 s and</font>

95
00:03:41,650 --> 00:03:45,190
it was obviously<font color="#E5E5E5"> after I'd</font><font color="#CCCCCC"> done some</font>

96
00:03:43,180 --> 00:03:47,919
testing<font color="#CCCCCC"> on it</font><font color="#E5E5E5"> was quickly upgraded to</font>

97
00:03:45,190 --> 00:03:50,319
win<font color="#CCCCCC"> the Windows</font><font color="#E5E5E5"> 10 Pro but you can</font>

98
00:03:47,919 --> 00:03:51,639
install versions will<font color="#E5E5E5"> be no sin s from</font>

99
00:03:50,319 --> 00:03:53,410
<font color="#E5E5E5">now so I'd highly</font><font color="#CCCCCC"> recommend if you're</font>

100
00:03:51,639 --> 00:03:54,370
<font color="#E5E5E5">going to do that using hyper-v because</font>

101
00:03:53,410 --> 00:03:58,030
then you<font color="#E5E5E5"> don't have to install</font>

102
00:03:54,370 --> 00:04:00,370
non-microsoft<font color="#E5E5E5"> virtualization guest</font>

103
00:03:58,030 --> 00:04:02,650
additions and so everything works and

104
00:04:00,370 --> 00:04:03,340
your screen<font color="#E5E5E5"> resolution all works and all</font>

105
00:04:02,650 --> 00:04:06,669
that sort of stuff

106
00:04:03,340 --> 00:04:08,590
so this is specifically version<font color="#E5E5E5"> 1703 of</font>

107
00:04:06,669 --> 00:04:11,319
Windows<font color="#CCCCCC"> 10s such as the one I researched</font>

108
00:04:08,590 --> 00:04:13,660
originally this is also<font color="#CCCCCC"> RS two and</font>

109
00:04:11,319 --> 00:04:14,918
there's also<font color="#E5E5E5"> build number as well</font><font color="#CCCCCC"> and so</font>

110
00:04:13,660 --> 00:04:18,010
all the bugs I'm going to present<font color="#CCCCCC"> in</font>

111
00:04:14,919 --> 00:04:23,370
this are all based<font color="#E5E5E5"> on</font><font color="#CCCCCC"> that research now</font>

112
00:04:18,010 --> 00:04:26,710
the actual policy<font color="#E5E5E5"> file itself is inside</font>

113
00:04:23,370 --> 00:04:28,030
<font color="#E5E5E5">the Windows boot</font><font color="#CCCCCC"> efi folder</font>

114
00:04:26,710 --> 00:04:31,750
is<font color="#E5E5E5"> actually also</font><font color="#CCCCCC"> on the boot partition</font>

115
00:04:28,030 --> 00:04:37,119
as well<font color="#E5E5E5"> and</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> the bomb</font><font color="#CCCCCC"> is this win</font>

116
00:04:31,750 --> 00:04:38,740
<font color="#E5E5E5">SI policy p7b which is a</font><font color="#CCCCCC"> PK 7</font><font color="#E5E5E5"> container</font>

117
00:04:37,120 --> 00:04:40,389
which<font color="#CCCCCC"> is a sign container containing a</font>

118
00:04:38,740 --> 00:04:43,060
<font color="#E5E5E5">binary blob which is our system</font>

119
00:04:40,389 --> 00:04:44,680
<font color="#E5E5E5">integrity policy now that system</font>

120
00:04:43,060 --> 00:04:48,520
integrity<font color="#E5E5E5"> policies kind of hard to read</font>

121
00:04:44,680 --> 00:04:49,990
<font color="#CCCCCC">I can read some binary</font><font color="#E5E5E5"> like hex dumps</font>

122
00:04:48,520 --> 00:04:52,448
but there's a limit to<font color="#E5E5E5"> how</font><font color="#CCCCCC"> much I'm</font>

123
00:04:49,990 --> 00:04:54,430
<font color="#CCCCCC">willing to go Mac Graber actually</font>

124
00:04:52,449 --> 00:04:58,030
released a tool to<font color="#E5E5E5"> convert the binary</font>

125
00:04:54,430 --> 00:04:59,380
blob back into an XML<font color="#E5E5E5"> file so this is</font>

126
00:04:58,030 --> 00:05:01,690
actually the policy<font color="#E5E5E5"> the XML file and</font>

127
00:04:59,380 --> 00:05:06,250
<font color="#CCCCCC">some may argue whether XML is more</font>

128
00:05:01,690 --> 00:05:08,800
<font color="#E5E5E5">readable than than binary</font><font color="#CCCCCC"> data but but</font>

129
00:05:06,250 --> 00:05:11,740
it's the<font color="#CCCCCC"> XML file contains a number of</font>

130
00:05:08,800 --> 00:05:14,169
<font color="#E5E5E5">components for example</font><font color="#CCCCCC"> it has a list</font><font color="#E5E5E5"> of</font>

131
00:05:11,740 --> 00:05:16,900
rules so in this particular<font color="#E5E5E5"> case</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

132
00:05:14,169 --> 00:05:18,758
<font color="#E5E5E5">actually turn device guard on without um</font>

133
00:05:16,900 --> 00:05:20,859
<font color="#E5E5E5">CI so it just enforces</font><font color="#CCCCCC"> Kermode code</font>

134
00:05:18,759 --> 00:05:23,560
integrity<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this particular case it</font>

135
00:05:20,860 --> 00:05:25,750
definitely has um see I turned<font color="#E5E5E5"> on you</font>

136
00:05:23,560 --> 00:05:28,690
have various signer<font color="#E5E5E5"> policies so in order</font>

137
00:05:25,750 --> 00:05:30,610
<font color="#E5E5E5">to have a file loaded</font><font color="#CCCCCC"> it must not only</font>

138
00:05:28,690 --> 00:05:32,199
be signed by a particular<font color="#E5E5E5"> certificate</font>

139
00:05:30,610 --> 00:05:34,419
which is<font color="#CCCCCC"> majeure most of the time</font>

140
00:05:32,199 --> 00:05:37,270
<font color="#CCCCCC">Microsoft certificates it also</font><font color="#E5E5E5"> must have</font>

141
00:05:34,419 --> 00:05:40,120
<font color="#E5E5E5">a special enhanced key usage</font><font color="#CCCCCC"> added to</font>

142
00:05:37,270 --> 00:05:42,719
the<font color="#E5E5E5"> the leaf certificate which says why</font>

143
00:05:40,120 --> 00:05:45,190
it was signed and for<font color="#E5E5E5"> example there is</font>

144
00:05:42,719 --> 00:05:47,380
the<font color="#CCCCCC"> Windows System component</font>

145
00:05:45,190 --> 00:05:50,710
verification and<font color="#E5E5E5"> this EKU indicates this</font>

146
00:05:47,380 --> 00:05:52,300
<font color="#E5E5E5">file is a signed windows binary so not</font>

147
00:05:50,710 --> 00:05:54,099
just the<font color="#E5E5E5"> Microsoft binary it was signed</font>

148
00:05:52,300 --> 00:05:58,930
for the purposes of distributing with

149
00:05:54,099 --> 00:06:00,789
<font color="#E5E5E5">Windows and then possibly of more</font>

150
00:05:58,930 --> 00:06:02,590
immediate<font color="#E5E5E5"> interest from actually finding</font>

151
00:06:00,789 --> 00:06:05,919
interesting<font color="#E5E5E5"> bugs is the list of banned</font>

152
00:06:02,590 --> 00:06:07,869
<font color="#CCCCCC">banned executables so this is based</font><font color="#E5E5E5"> on</font>

153
00:06:05,919 --> 00:06:09,580
file name but it's not actually<font color="#E5E5E5"> the file</font>

154
00:06:07,870 --> 00:06:11,830
name<font color="#CCCCCC"> in the file on disk</font><font color="#E5E5E5"> instead it's</font>

155
00:06:09,580 --> 00:06:14,500
<font color="#E5E5E5">the</font><font color="#CCCCCC"> original file name</font><font color="#E5E5E5"> in the resource</font>

156
00:06:11,830 --> 00:06:16,479
section<font color="#E5E5E5"> of the PE file and because this</font>

157
00:06:14,500 --> 00:06:19,000
resource section is part of<font color="#E5E5E5"> the signed</font>

158
00:06:16,479 --> 00:06:22,360
<font color="#E5E5E5">content</font><font color="#CCCCCC"> at the PE file</font><font color="#E5E5E5"> you can't modify</font>

159
00:06:19,000 --> 00:06:24,909
it without invalidating the<font color="#E5E5E5"> signature so</font>

160
00:06:22,360 --> 00:06:27,820
it allows the bicycle policy to ban

161
00:06:24,909 --> 00:06:31,630
specific types<font color="#E5E5E5"> of file so for example</font>

162
00:06:27,820 --> 00:06:32,139
we've they<font color="#CCCCCC"> ban cmd.exe dban w scripting</font>

163
00:06:31,630 --> 00:06:33,969
host

164
00:06:32,139 --> 00:06:36,039
window scripting<font color="#E5E5E5"> host OC</font><font color="#CCCCCC"> script</font><font color="#E5E5E5"> and w</font>

165
00:06:33,969 --> 00:06:38,199
<font color="#E5E5E5">script the bound powershell which is</font>

166
00:06:36,039 --> 00:06:39,490
unfortunate because when<font color="#E5E5E5"> i did similar</font>

167
00:06:38,199 --> 00:06:41,889
<font color="#E5E5E5">research</font><font color="#CCCCCC"> on Windows RT</font>

168
00:06:39,490 --> 00:06:45,039
i abused<font color="#E5E5E5"> powershell to get</font><font color="#CCCCCC"> object code</font>

169
00:06:41,889 --> 00:06:48,490
execution<font color="#E5E5E5"> they also ban simple tools</font>

170
00:06:45,039 --> 00:06:49,780
like tools to edit the registry<font color="#CCCCCC"> so in</font>

171
00:06:48,490 --> 00:06:52,990
theory<font color="#E5E5E5"> you can't</font><font color="#CCCCCC"> modify the registry</font>

172
00:06:49,780 --> 00:06:54,580
trivially without actually getting

173
00:06:52,990 --> 00:06:58,840
<font color="#CCCCCC">object code execution in the</font><font color="#E5E5E5"> first place</font>

174
00:06:54,580 --> 00:07:00,580
<font color="#E5E5E5">and obviously</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> I just demonstrate that</font>

175
00:06:58,840 --> 00:07:02,049
<font color="#E5E5E5">if I try</font><font color="#CCCCCC"> and run register XE which</font>

176
00:07:00,580 --> 00:07:04,389
should be<font color="#E5E5E5"> a banned executable</font>

177
00:07:02,050 --> 00:07:06,550
we get a big blue<font color="#E5E5E5"> dialog and it says</font>

178
00:07:04,389 --> 00:07:09,550
sorry that is<font color="#E5E5E5"> not allowed to run and</font>

179
00:07:06,550 --> 00:07:14,800
it's there<font color="#CCCCCC"> to for your</font><font color="#E5E5E5"> own protection so</font>

180
00:07:09,550 --> 00:07:16,180
just please ignore me<font color="#CCCCCC"> so as with most of</font>

181
00:07:14,800 --> 00:07:17,800
my research<font color="#E5E5E5"> I'll always try and come up</font>

182
00:07:16,180 --> 00:07:19,599
<font color="#E5E5E5">with some sort of goals because you kind</font>

183
00:07:17,800 --> 00:07:21,520
of want<font color="#CCCCCC"> to measure</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> you're sort of</font>

184
00:07:19,599 --> 00:07:23,889
<font color="#E5E5E5">whether you've succeeded in your</font>

185
00:07:21,520 --> 00:07:25,750
research<font color="#E5E5E5"> and what I kind of wanted to</font>

186
00:07:23,889 --> 00:07:28,630
build was something which you could kind

187
00:07:25,750 --> 00:07:30,970
of<font color="#CCCCCC"> just drop and</font><font color="#E5E5E5"> run on the system only</font>

188
00:07:28,630 --> 00:07:32,949
<font color="#E5E5E5">using built-in applications because for</font>

189
00:07:30,970 --> 00:07:34,930
all the the<font color="#CCCCCC"> PR puffs about Windows 10</font><font color="#E5E5E5"> s</font>

190
00:07:32,949 --> 00:07:36,880
<font color="#E5E5E5">being super secure</font><font color="#CCCCCC"> it was pointed out</font>

191
00:07:34,930 --> 00:07:38,650
<font color="#E5E5E5">like about four or five days</font><font color="#CCCCCC"> later that</font>

192
00:07:36,880 --> 00:07:40,900
<font color="#CCCCCC">if you install office office still</font>

193
00:07:38,650 --> 00:07:42,789
supports macros<font color="#E5E5E5"> whoops Y you can get out</font>

194
00:07:40,900 --> 00:07:43,989
of<font color="#CCCCCC"> Jakarta education</font><font color="#E5E5E5"> but I wanted</font><font color="#CCCCCC"> to</font>

195
00:07:42,789 --> 00:07:46,509
obviously<font color="#E5E5E5"> not use office because I'd</font>

196
00:07:43,990 --> 00:07:48,039
already<font color="#E5E5E5"> been done I'm not one</font><font color="#CCCCCC"> for memory</font>

197
00:07:46,509 --> 00:07:49,479
corruption as<font color="#E5E5E5"> probably people have seen</font>

198
00:07:48,039 --> 00:07:51,159
my presentations before<font color="#CCCCCC"> No</font>

199
00:07:49,479 --> 00:07:53,560
and I wanted sort<font color="#E5E5E5"> of arbitrary code</font>

200
00:07:51,159 --> 00:07:56,050
execution which gave<font color="#E5E5E5"> me the ability to</font>

201
00:07:53,560 --> 00:07:58,810
not<font color="#CCCCCC"> just pop calc</font><font color="#E5E5E5"> but pop notepad as</font>

202
00:07:56,050 --> 00:08:01,090
well maybe or something else<font color="#E5E5E5"> but like</font>

203
00:07:58,810 --> 00:08:03,310
complete control over<font color="#CCCCCC"> the system without</font>

204
00:08:01,090 --> 00:08:06,849
<font color="#E5E5E5">requiring admin privileges so those are</font>

205
00:08:03,310 --> 00:08:09,460
<font color="#E5E5E5">my ultimate goals so I first I thought</font>

206
00:08:06,849 --> 00:08:10,810
<font color="#E5E5E5">okay let's start with bypassing the user</font>

207
00:08:09,460 --> 00:08:12,729
mode<font color="#CCCCCC"> component because that's what I did</font>

208
00:08:10,810 --> 00:08:16,810
before I use PowerShell<font color="#E5E5E5"> to effectively</font>

209
00:08:12,729 --> 00:08:18,969
circumvent to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> on EP</font><font color="#E5E5E5"> now most of the</font>

210
00:08:16,810 --> 00:08:21,639
obvious scripting engines have been<font color="#E5E5E5"> been</font>

211
00:08:18,969 --> 00:08:24,969
ruled out<font color="#CCCCCC"> w script and PowerShell are</font>

212
00:08:21,639 --> 00:08:28,479
all gone but one things which you could

213
00:08:24,969 --> 00:08:30,969
do is abuse the fact<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the msh2</font><font color="#CCCCCC"> no</font>

214
00:08:28,479 --> 00:08:32,979
HTML renderer<font color="#CCCCCC"> runs something</font><font color="#E5E5E5"> called</font>

215
00:08:30,969 --> 00:08:34,779
<font color="#CCCCCC">local</font><font color="#E5E5E5"> machine zone and if you run a file</font>

216
00:08:32,979 --> 00:08:39,490
<font color="#E5E5E5">from the local hard drive it runs in</font>

217
00:08:34,779 --> 00:08:41,828
this local<font color="#CCCCCC"> machine zone which allows you</font>

218
00:08:39,490 --> 00:08:43,659
<font color="#E5E5E5">to run effectively arbitary script code</font>

219
00:08:41,828 --> 00:08:45,279
which can<font color="#E5E5E5"> instantiate arbitary comm</font>

220
00:08:43,659 --> 00:08:48,339
objects and manipulate system and do

221
00:08:45,279 --> 00:08:50,230
nasty<font color="#E5E5E5"> things</font><font color="#CCCCCC"> now you can run it in</font>

222
00:08:48,339 --> 00:08:51,769
Internet Explorer<font color="#E5E5E5"> but like the file</font>

223
00:08:50,230 --> 00:08:54,739
format dot HTML if

224
00:08:51,769 --> 00:08:56,569
double-click that<font color="#E5E5E5"> in a dropped file it's</font>

225
00:08:54,739 --> 00:08:58,220
going<font color="#CCCCCC"> to load an edge and that doesn't</font>

226
00:08:56,569 --> 00:09:00,889
help<font color="#E5E5E5"> us it has to</font><font color="#CCCCCC"> run inside internet</font>

227
00:08:58,220 --> 00:09:03,019
<font color="#CCCCCC">explorer</font><font color="#E5E5E5"> however another useful file</font>

228
00:09:00,889 --> 00:09:05,619
format the compressed HTML file format

229
00:09:03,019 --> 00:09:07,550
which<font color="#CCCCCC"> is part of the HTML help engine</font><font color="#E5E5E5"> is</font>

230
00:09:05,619 --> 00:09:10,069
<font color="#E5E5E5">just something you can</font><font color="#CCCCCC"> just double-click</font>

231
00:09:07,550 --> 00:09:12,349
<font color="#E5E5E5">it would automatically run and this also</font>

232
00:09:10,069 --> 00:09:14,269
runs in local<font color="#E5E5E5"> machine zone now there is</font>

233
00:09:12,350 --> 00:09:16,939
a slight caveat from a drop<font color="#E5E5E5"> and run</font>

234
00:09:14,269 --> 00:09:18,769
perspective<font color="#E5E5E5"> you do get this dialog if</font>

235
00:09:16,939 --> 00:09:20,929
it's got mark at a web which is<font color="#E5E5E5"> because</font>

236
00:09:18,769 --> 00:09:23,029
it's downloaded from the internet<font color="#CCCCCC"> the</font>

237
00:09:20,929 --> 00:09:25,819
user would have to<font color="#E5E5E5"> uncheck uncheck this</font>

238
00:09:23,029 --> 00:09:27,470
tick box and click open otherwise it

239
00:09:25,819 --> 00:09:32,118
won't actually<font color="#E5E5E5"> run in local machine zone</font>

240
00:09:27,470 --> 00:09:33,379
<font color="#E5E5E5">but maybe you</font><font color="#CCCCCC"> commence to do that so I</font>

241
00:09:32,119 --> 00:09:34,639
<font color="#E5E5E5">knocked</font><font color="#CCCCCC"> together a really really simple</font>

242
00:09:33,379 --> 00:09:37,339
script and I know I said<font color="#CCCCCC"> I wanted</font>

243
00:09:34,639 --> 00:09:39,079
<font color="#CCCCCC">arbitrary execution</font><font color="#E5E5E5"> but baby steps here</font>

244
00:09:37,339 --> 00:09:41,239
<font color="#E5E5E5">I'm just</font><font color="#CCCCCC"> gonna pop calc if I can pop</font>

245
00:09:39,079 --> 00:09:44,299
calc I can probably pop<font color="#CCCCCC"> something</font><font color="#E5E5E5"> else</font>

246
00:09:41,239 --> 00:09:46,790
<font color="#E5E5E5">right and I put</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> into compressed</font>

247
00:09:44,299 --> 00:09:47,269
HTML file<font color="#E5E5E5"> double clicked it and I get</font>

248
00:09:46,790 --> 00:09:49,790
this<font color="#E5E5E5"> error</font>

249
00:09:47,269 --> 00:09:52,009
I<font color="#CCCCCC"> get a basically an error saying</font><font color="#E5E5E5"> I</font>

250
00:09:49,790 --> 00:09:54,379
cannot create<font color="#CCCCCC"> the W</font><font color="#E5E5E5"> script</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> shell calm</font>

251
00:09:52,009 --> 00:09:57,199
object and that's<font color="#CCCCCC"> the problem</font><font color="#E5E5E5"> if I can't</font>

252
00:09:54,379 --> 00:09:59,029
<font color="#E5E5E5">create a calm object well J scripts is</font>

253
00:09:57,199 --> 00:10:00,649
virtually useless<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you can't create</font>

254
00:09:59,029 --> 00:10:01,670
calm objects because that's the only<font color="#CCCCCC"> way</font>

255
00:10:00,649 --> 00:10:04,879
you<font color="#E5E5E5"> can interact with the rest of</font><font color="#CCCCCC"> a</font>

256
00:10:01,670 --> 00:10:08,959
system<font color="#E5E5E5"> and it turns out</font><font color="#CCCCCC"> I was just late</font>

257
00:10:04,879 --> 00:10:11,600
to the party now<font color="#CCCCCC"> oddvar</font><font color="#E5E5E5"> and Matt Nelson</font>

258
00:10:08,959 --> 00:10:13,729
<font color="#E5E5E5">had already discovered</font><font color="#CCCCCC"> that some reason</font>

259
00:10:11,600 --> 00:10:15,350
<font color="#E5E5E5">Ms HTML was renderer in local machine</font>

260
00:10:13,730 --> 00:10:17,209
<font color="#E5E5E5">zone was not enforcing the</font><font color="#CCCCCC"> Windows</font>

261
00:10:15,350 --> 00:10:19,879
lockdown policy and it turns out

262
00:10:17,209 --> 00:10:22,040
Microsoft had fixed it<font color="#E5E5E5"> in 1703</font><font color="#CCCCCC"> the build</font>

263
00:10:19,879 --> 00:10:24,170
I was using<font color="#E5E5E5"> but</font><font color="#CCCCCC"> not actually</font><font color="#E5E5E5"> release</font>

264
00:10:22,040 --> 00:10:26,569
<font color="#CCCCCC">details that they'd fixed it it was</font><font color="#E5E5E5"> only</font>

265
00:10:24,170 --> 00:10:28,128
a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> months later that Microsoft</font>

266
00:10:26,569 --> 00:10:29,899
<font color="#CCCCCC">actually released an update on Patch</font>

267
00:10:28,129 --> 00:10:31,939
Tuesday which fixed the<font color="#E5E5E5"> downlevel</font>

268
00:10:29,899 --> 00:10:34,069
<font color="#E5E5E5">platforms and then everyone knew it was</font>

269
00:10:31,939 --> 00:10:35,509
actually fixed so that's kind of

270
00:10:34,069 --> 00:10:38,689
<font color="#CCCCCC">disappointing at that point but you</font>

271
00:10:35,509 --> 00:10:40,339
<font color="#CCCCCC">can't just stop there of course so I</font>

272
00:10:38,689 --> 00:10:44,660
thought<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> how is</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually being</font>

273
00:10:40,339 --> 00:10:47,720
enforced<font color="#E5E5E5"> and I stuck</font><font color="#CCCCCC"> MS HTML into either</font>

274
00:10:44,660 --> 00:10:49,759
and had a look<font color="#E5E5E5"> and what you'll find is</font>

275
00:10:47,720 --> 00:10:53,629
<font color="#E5E5E5">that it was checking of particular flag</font>

276
00:10:49,759 --> 00:10:55,939
when it was instigating a<font color="#E5E5E5"> calm object it</font>

277
00:10:53,629 --> 00:10:58,610
was being passed the class ID and the

278
00:10:55,939 --> 00:11:01,579
class ID is<font color="#E5E5E5"> the a gooood which refers to</font>

279
00:10:58,610 --> 00:11:04,880
a<font color="#CCCCCC"> specific type of comm object and it</font>

280
00:11:01,579 --> 00:11:07,130
was passing it<font color="#E5E5E5"> into this</font><font color="#CCCCCC"> WOD P is class</font>

281
00:11:04,880 --> 00:11:11,480
approved list<font color="#E5E5E5"> function which is</font><font color="#CCCCCC"> pilot</font>

282
00:11:07,130 --> 00:11:14,240
<font color="#CCCCCC">wvp so the question is what is that</font>

283
00:11:11,480 --> 00:11:17,260
function doing<font color="#CCCCCC"> what a function does</font><font color="#E5E5E5"> is</font>

284
00:11:14,240 --> 00:11:21,890
compare that<font color="#E5E5E5"> class ID to a list of eight</font>

285
00:11:17,260 --> 00:11:22,850
<font color="#E5E5E5">hard-coded class IDs for MS HTML you've</font>

286
00:11:21,890 --> 00:11:25,280
only got a if you're<font color="#E5E5E5"> in Windows</font>

287
00:11:22,850 --> 00:11:27,560
scripting<font color="#CCCCCC"> hosters the further</font><font color="#E5E5E5"> 58 that it</font>

288
00:11:25,280 --> 00:11:29,959
could be but<font color="#E5E5E5"> it turns out of those</font><font color="#CCCCCC"> eight</font>

289
00:11:27,560 --> 00:11:33,500
only<font color="#E5E5E5"> three of those classes</font><font color="#CCCCCC"> are actually</font>

290
00:11:29,960 --> 00:11:34,730
<font color="#CCCCCC">registered on the</font><font color="#E5E5E5"> system and while</font>

291
00:11:33,500 --> 00:11:36,800
<font color="#E5E5E5">fastest</font><font color="#CCCCCC"> moderate is kind of interesting</font>

292
00:11:34,730 --> 00:11:38,360
<font color="#CCCCCC">you can write</font><font color="#E5E5E5"> read</font><font color="#CCCCCC"> in my object files it</font>

293
00:11:36,800 --> 00:11:40,849
doesn't give you object<font color="#E5E5E5"> code execution</font>

294
00:11:38,360 --> 00:11:42,320
<font color="#E5E5E5">and yes there's been bugs in the VB</font>

295
00:11:40,850 --> 00:11:44,510
<font color="#E5E5E5">script regular expression when</font><font color="#CCCCCC"> comma</font>

296
00:11:42,320 --> 00:11:48,170
object before<font color="#E5E5E5"> but as I said I didn't</font>

297
00:11:44,510 --> 00:11:50,720
want to use memory corruptions but the

298
00:11:48,170 --> 00:11:53,599
interesting thing<font color="#CCCCCC"> is could</font><font color="#E5E5E5"> I what if I</font>

299
00:11:50,720 --> 00:11:56,840
registered a<font color="#E5E5E5"> comm object which happened</font>

300
00:11:53,600 --> 00:11:58,430
to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> using one of these allowed class</font>

301
00:11:56,840 --> 00:12:00,140
IDs but actually created a completely

302
00:11:58,430 --> 00:12:02,300
separate<font color="#E5E5E5"> comm object under the hood</font>

303
00:12:00,140 --> 00:12:06,590
could would that work would<font color="#CCCCCC"> I would that</font>

304
00:12:02,300 --> 00:12:08,359
bypass<font color="#CCCCCC"> the yet</font><font color="#E5E5E5"> the restrictions so it</font>

305
00:12:06,590 --> 00:12:11,060
then becomes a question of<font color="#CCCCCC"> how does MS</font>

306
00:12:08,360 --> 00:12:12,410
HTML and jscript<font color="#CCCCCC"> create</font><font color="#E5E5E5"> calm objects now</font>

307
00:12:11,060 --> 00:12:14,839
you would normally call new

308
00:12:12,410 --> 00:12:17,089
activexobject<font color="#E5E5E5"> passing in this string</font><font color="#CCCCCC"> W</font>

309
00:12:14,840 --> 00:12:18,530
script<font color="#CCCCCC"> that shell W script</font><font color="#E5E5E5"> that shell is</font>

310
00:12:17,090 --> 00:12:21,140
something<font color="#CCCCCC"> called</font><font color="#E5E5E5"> a programmatic ID and</font>

311
00:12:18,530 --> 00:12:23,600
it's basically just a moniker for

312
00:12:21,140 --> 00:12:25,699
referring<font color="#CCCCCC"> to a particular comm object--</font>

313
00:12:23,600 --> 00:12:27,560
so<font color="#E5E5E5"> underneath the hood jscript cause</font>

314
00:12:25,700 --> 00:12:30,890
class ID from prag ID which is<font color="#E5E5E5"> a system</font>

315
00:12:27,560 --> 00:12:33,530
<font color="#CCCCCC">api</font><font color="#E5E5E5"> and that looks up that string it</font>

316
00:12:30,890 --> 00:12:36,110
returns you a class ID about class IDs

317
00:12:33,530 --> 00:12:38,000
then<font color="#CCCCCC"> past it is class allowed which then</font>

318
00:12:36,110 --> 00:12:40,330
passes<font color="#E5E5E5"> it to</font><font color="#CCCCCC"> co-create instance assuming</font>

319
00:12:38,000 --> 00:12:42,950
that is allowed is actually set to true

320
00:12:40,330 --> 00:12:44,900
<font color="#E5E5E5">so there's probably some</font><font color="#CCCCCC"> sort of timer</font>

321
00:12:42,950 --> 00:12:46,940
check time use issue here in that

322
00:12:44,900 --> 00:12:49,730
<font color="#E5E5E5">obviously when we're we're checking the</font>

323
00:12:46,940 --> 00:12:51,800
class is allowed<font color="#E5E5E5"> and then creating the</font>

324
00:12:49,730 --> 00:12:53,120
<font color="#E5E5E5">class</font><font color="#CCCCCC"> book okay</font><font color="#E5E5E5"> instance there's a</font><font color="#CCCCCC"> lot</font>

325
00:12:51,800 --> 00:12:55,130
of things which could go wrong<font color="#E5E5E5"> in</font>

326
00:12:53,120 --> 00:12:58,460
between those two steps<font color="#E5E5E5"> and so if I</font>

327
00:12:55,130 --> 00:13:00,740
could<font color="#E5E5E5"> get the class ID to return a valid</font>

328
00:12:58,460 --> 00:13:02,720
allowed class ID<font color="#E5E5E5"> but when passed the</font>

329
00:13:00,740 --> 00:13:04,430
<font color="#CCCCCC">Kokura instance actually</font><font color="#E5E5E5"> created a</font>

330
00:13:02,720 --> 00:13:08,270
completely different<font color="#CCCCCC"> class our</font><font color="#E5E5E5"> comm</font>

331
00:13:04,430 --> 00:13:09,530
object<font color="#E5E5E5"> then I would win and one trick</font><font color="#CCCCCC"> to</font>

332
00:13:08,270 --> 00:13:10,970
doing that<font color="#E5E5E5"> is something called the treat</font>

333
00:13:09,530 --> 00:13:12,589
<font color="#E5E5E5">as key</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> treaters Keys kind of</font>

334
00:13:10,970 --> 00:13:14,480
like a symbolic<font color="#E5E5E5"> link for</font><font color="#CCCCCC"> comm objects</font>

335
00:13:12,590 --> 00:13:16,080
you can link one class ID to a

336
00:13:14,480 --> 00:13:18,630
completely<font color="#E5E5E5"> different</font><font color="#CCCCCC"> class</font>

337
00:13:16,080 --> 00:13:20,580
so this<font color="#E5E5E5"> sounds perfect I can just</font>

338
00:13:18,630 --> 00:13:22,230
register<font color="#E5E5E5"> interestingly I can register it</font>

339
00:13:20,580 --> 00:13:25,650
in current<font color="#CCCCCC"> users so I do not need admin</font>

340
00:13:22,230 --> 00:13:28,050
privileges<font color="#CCCCCC"> I can register</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> loudclass ID</font>

341
00:13:25,650 --> 00:13:31,050
but point it at an animal out<font color="#CCCCCC"> of class</font>

342
00:13:28,050 --> 00:13:33,150
ID and hopefully when it loads up he'll

343
00:13:31,050 --> 00:13:35,250
allow me to instantiate<font color="#CCCCCC"> that</font><font color="#E5E5E5"> come up yet</font>

344
00:13:33,150 --> 00:13:36,660
but<font color="#CCCCCC"> when Co</font><font color="#E5E5E5"> crazy since</font><font color="#CCCCCC"> it's called it</font>

345
00:13:35,250 --> 00:13:38,730
would actually<font color="#E5E5E5"> create the object I</font>

346
00:13:36,660 --> 00:13:42,780
really want not the one<font color="#E5E5E5"> I'm pretending</font>

347
00:13:38,730 --> 00:13:44,520
to<font color="#E5E5E5"> be using but then we hit a problem</font>

348
00:13:42,780 --> 00:13:46,680
<font color="#CCCCCC">we're on a standard</font><font color="#E5E5E5"> Windows 10</font><font color="#CCCCCC"> s system</font>

349
00:13:44,520 --> 00:13:48,480
how on earth did<font color="#E5E5E5"> we get anything in</font>

350
00:13:46,680 --> 00:13:49,920
<font color="#CCCCCC">there industry</font><font color="#E5E5E5"> because as I said the</font>

351
00:13:48,480 --> 00:13:52,470
<font color="#E5E5E5">most of the registry edit</font><font color="#CCCCCC"> says abandon</font>

352
00:13:49,920 --> 00:13:54,599
<font color="#E5E5E5">register access ban edit 32 de exeed</font>

353
00:13:52,470 --> 00:13:55,440
banned<font color="#E5E5E5"> if you run them it just says you</font>

354
00:13:54,600 --> 00:13:57,960
<font color="#CCCCCC">not allowed to do that</font>

355
00:13:55,440 --> 00:14:01,260
<font color="#E5E5E5">so I looked in system 32 and as you can</font>

356
00:13:57,960 --> 00:14:04,260
<font color="#E5E5E5">see</font><font color="#CCCCCC"> reg</font><font color="#E5E5E5"> taxi reg ended 32 directs</font><font color="#CCCCCC"> e orb</font>

357
00:14:01,260 --> 00:14:06,530
and what about reg any direct see the

358
00:14:04,260 --> 00:14:08,340
exact next one in that list of files

359
00:14:06,530 --> 00:14:10,319
<font color="#E5E5E5">turns out it's not banned</font>

360
00:14:08,340 --> 00:14:12,000
what the hell is<font color="#CCCCCC"> red you need a taxi or</font>

361
00:14:10,320 --> 00:14:14,340
virtually<font color="#CCCCCC"> die</font><font color="#E5E5E5"> actually takes</font><font color="#CCCCCC"> in any file</font>

362
00:14:12,000 --> 00:14:20,339
<font color="#CCCCCC">format which installs</font><font color="#E5E5E5"> arbitary registry</font>

363
00:14:14,340 --> 00:14:24,450
<font color="#E5E5E5">keys for you so obviously I can I can</font>

364
00:14:20,339 --> 00:14:27,360
install my registry keys from that but

365
00:14:24,450 --> 00:14:29,400
when I tried it<font color="#E5E5E5"> doesn't work</font><font color="#CCCCCC"> and the</font>

366
00:14:27,360 --> 00:14:32,900
reason it doesn't work is class<font color="#E5E5E5"> ID from</font>

367
00:14:29,400 --> 00:14:36,000
<font color="#E5E5E5">Prague Rd is cleverer than me</font><font color="#CCCCCC"> obviously</font>

368
00:14:32,900 --> 00:14:37,980
what it<font color="#E5E5E5"> actually does is when it's</font>

369
00:14:36,000 --> 00:14:40,290
looking<font color="#CCCCCC"> at</font><font color="#E5E5E5"> that string it's actually</font>

370
00:14:37,980 --> 00:14:42,180
following<font color="#E5E5E5"> all the links and it follows</font>

371
00:14:40,290 --> 00:14:44,520
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the treat as keys</font><font color="#E5E5E5"> and ends up</font>

372
00:14:42,180 --> 00:14:46,709
returning you the class ID which<font color="#CCCCCC"> is</font>

373
00:14:44,520 --> 00:14:48,870
banned and but the one you wanted<font color="#E5E5E5"> to</font>

374
00:14:46,710 --> 00:14:50,460
create so by the time it causes<font color="#E5E5E5"> class</font>

375
00:14:48,870 --> 00:14:51,960
allowed<font color="#E5E5E5"> it still says</font><font color="#CCCCCC"> you're banned</font>

376
00:14:50,460 --> 00:14:53,900
<font color="#E5E5E5">because you know allowed to do that so</font>

377
00:14:51,960 --> 00:14:57,450
we obviously get<font color="#E5E5E5"> the same error</font>

378
00:14:53,900 --> 00:14:59,579
<font color="#E5E5E5">fortunately</font><font color="#CCCCCC"> we're in HTML and HTML has</font>

379
00:14:57,450 --> 00:15:01,740
the object<font color="#CCCCCC"> tag and the object take takes</font>

380
00:14:59,580 --> 00:15:03,720
a<font color="#E5E5E5"> class ID</font><font color="#CCCCCC"> attribute which just</font><font color="#E5E5E5"> executed</font>

381
00:15:01,740 --> 00:15:06,060
and the sort of corresponding conversion

382
00:15:03,720 --> 00:15:08,400
function class ID from string just

383
00:15:06,060 --> 00:15:10,319
converts the gooood<font color="#E5E5E5"> to a gooood gooood</font>

384
00:15:08,400 --> 00:15:12,150
stream to a gooood<font color="#E5E5E5"> it doesn't verify</font>

385
00:15:10,320 --> 00:15:12,600
<font color="#E5E5E5">that I</font><font color="#CCCCCC"> goo it exists or anything like</font>

386
00:15:12,150 --> 00:15:15,420
<font color="#E5E5E5">that</font>

387
00:15:12,600 --> 00:15:17,910
so at<font color="#E5E5E5"> our point</font><font color="#CCCCCC"> I classify de caminha my</font>

388
00:15:15,420 --> 00:15:19,800
<font color="#E5E5E5">list but when Coco instance is called we</font>

389
00:15:17,910 --> 00:15:23,790
<font color="#CCCCCC">obviously create an object</font><font color="#E5E5E5"> we didn't</font>

390
00:15:19,800 --> 00:15:25,709
expect<font color="#CCCCCC"> but again</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is only</font>

391
00:15:23,790 --> 00:15:27,510
<font color="#E5E5E5">allows to pop cow because we got</font>

392
00:15:25,709 --> 00:15:29,250
something better<font color="#CCCCCC"> well</font><font color="#E5E5E5"> you can use my</font>

393
00:15:27,510 --> 00:15:31,050
<font color="#E5E5E5">Donuts</font><font color="#CCCCCC"> jscript tool</font>

394
00:15:29,250 --> 00:15:32,970
this allows you to bootstrap arbitrary

395
00:15:31,050 --> 00:15:34,699
dotnet code from memory which

396
00:15:32,970 --> 00:15:37,740
circumvents<font color="#E5E5E5"> the code integrity policy</font>

397
00:15:34,700 --> 00:15:41,070
from<font color="#CCCCCC"> jscript and you get obviously</font><font color="#E5E5E5"> code</font>

398
00:15:37,740 --> 00:15:45,390
execution that way so let's quickly

399
00:15:41,070 --> 00:15:47,850
demantoid<font color="#CCCCCC"> so i've got my</font><font color="#E5E5E5"> list of keys so</font>

400
00:15:45,390 --> 00:15:53,310
this is<font color="#E5E5E5"> just a set up dotnet to jscript</font>

401
00:15:47,850 --> 00:15:55,680
<font color="#CCCCCC">redirect</font><font color="#E5E5E5"> water</font><font color="#CCCCCC"> comp jokes i can just</font><font color="#E5E5E5"> run</font>

402
00:15:53,310 --> 00:15:57,510
a link and obviously you could use the

403
00:15:55,680 --> 00:15:59,609
file system object to drop this link

404
00:15:57,510 --> 00:16:01,350
into the<font color="#E5E5E5"> user startup folder so just</font>

405
00:15:59,610 --> 00:16:03,090
<font color="#E5E5E5">running it could drop these link files</font>

406
00:16:01,350 --> 00:16:04,830
and install<font color="#CCCCCC"> the</font><font color="#E5E5E5"> rest your keys for</font><font color="#CCCCCC"> you</font>

407
00:16:03,090 --> 00:16:06,450
<font color="#E5E5E5">so</font><font color="#CCCCCC"> just double</font><font color="#E5E5E5"> click that and</font><font color="#CCCCCC"> you see</font>

408
00:16:04,830 --> 00:16:08,550
<font color="#CCCCCC">nothing</font><font color="#E5E5E5"> because it the window pops up</font>

409
00:16:06,450 --> 00:16:11,310
and<font color="#E5E5E5"> then disappears but now if I run</font>

410
00:16:08,550 --> 00:16:21,900
<font color="#CCCCCC">this CHM file we should</font><font color="#E5E5E5"> get a copy of</font>

411
00:16:11,310 --> 00:16:23,130
<font color="#CCCCCC">PowerShell running so I reported that</font><font color="#E5E5E5"> to</font>

412
00:16:21,900 --> 00:16:25,829
Microsoft<font color="#CCCCCC"> because I probably I thought I</font>

413
00:16:23,130 --> 00:16:28,290
<font color="#E5E5E5">probably should do and Mike's off fixed</font>

414
00:16:25,830 --> 00:16:30,900
it although they didn't necessarily

415
00:16:28,290 --> 00:16:31,800
proofread the the report because

416
00:16:30,900 --> 00:16:34,020
obviously it's nothing to do<font color="#E5E5E5"> with</font>

417
00:16:31,800 --> 00:16:37,170
PowerShell<font color="#E5E5E5"> but you can you</font><font color="#CCCCCC"> can have a</font>

418
00:16:34,020 --> 00:16:39,750
look<font color="#E5E5E5"> more detail</font><font color="#CCCCCC"> of that if you like</font><font color="#E5E5E5"> so</font>

419
00:16:37,170 --> 00:16:42,300
that's<font color="#E5E5E5"> great</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> I can run I can now</font>

420
00:16:39,750 --> 00:16:44,550
run<font color="#E5E5E5"> ARP to.net code awesome but not</font>

421
00:16:42,300 --> 00:16:47,150
everything is<font color="#E5E5E5"> written in</font><font color="#CCCCCC"> dart net it</font>

422
00:16:44,550 --> 00:16:49,979
would be kind of nice if I<font color="#CCCCCC"> could run</font>

423
00:16:47,150 --> 00:16:51,510
arbitrary<font color="#E5E5E5"> execute was like completely</font>

424
00:16:49,980 --> 00:16:53,640
any<font color="#E5E5E5"> anything I liked</font>

425
00:16:51,510 --> 00:16:56,400
<font color="#E5E5E5">so like personal Explorer for example</font>

426
00:16:53,640 --> 00:16:59,250
can I do that<font color="#E5E5E5"> well when I was poking</font>

427
00:16:56,400 --> 00:17:01,589
<font color="#E5E5E5">around</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> query for like the mapped</font>

428
00:16:59,250 --> 00:17:03,210
images<font color="#E5E5E5"> so these images should all be</font>

429
00:17:01,589 --> 00:17:05,010
signed they should all be verified by

430
00:17:03,210 --> 00:17:07,650
<font color="#E5E5E5">the code integrity policy in the kernel</font>

431
00:17:05,010 --> 00:17:10,709
<font color="#E5E5E5">and I noticed that there was a lot of</font>

432
00:17:07,650 --> 00:17:13,410
<font color="#E5E5E5">native image executables loaded into my</font>

433
00:17:10,709 --> 00:17:15,390
process<font color="#E5E5E5"> as image files</font><font color="#CCCCCC"> now if you don't</font>

434
00:17:13,410 --> 00:17:17,970
<font color="#CCCCCC">know what these are</font><font color="#E5E5E5"> these are files</font>

435
00:17:15,390 --> 00:17:19,260
<font color="#CCCCCC">dll's generated by the engine process</font>

436
00:17:17,970 --> 00:17:22,350
and engine is that ahead of time

437
00:17:19,260 --> 00:17:23,760
compiler for dotnet<font color="#CCCCCC"> and it allows you to</font>

438
00:17:22,349 --> 00:17:27,540
obviously<font color="#CCCCCC"> increase performance because</font>

439
00:17:23,760 --> 00:17:30,540
<font color="#CCCCCC">it pre converts the CIL assemblies</font><font color="#E5E5E5"> into</font>

440
00:17:27,540 --> 00:17:32,850
<font color="#CCCCCC">a native binary but the funny thing</font>

441
00:17:30,540 --> 00:17:34,649
<font color="#CCCCCC">about this is engine usually</font><font color="#E5E5E5"> runs on</font>

442
00:17:32,850 --> 00:17:36,360
target<font color="#CCCCCC"> so it can't be</font><font color="#E5E5E5"> signed by</font>

443
00:17:34,650 --> 00:17:38,160
Microsoft they can't have been pre

444
00:17:36,360 --> 00:17:40,379
signed and deployed because<font color="#E5E5E5"> they would</font>

445
00:17:38,160 --> 00:17:40,990
be generated on on the target system

446
00:17:40,380 --> 00:17:43,450
<font color="#CCCCCC">it's</font>

447
00:17:40,990 --> 00:17:45,730
that's kind of interesting<font color="#E5E5E5"> so I had a</font>

448
00:17:43,450 --> 00:17:47,650
quick look<font color="#E5E5E5"> and yes that Nate that</font><font color="#CCCCCC"> DLL</font>

449
00:17:45,730 --> 00:17:50,350
file is not signed according to the

450
00:17:47,650 --> 00:17:52,030
standard rules of signing it has no

451
00:17:50,350 --> 00:17:54,040
embedded signature<font color="#E5E5E5"> it's not part of a</font>

452
00:17:52,030 --> 00:17:56,678
<font color="#E5E5E5">catalog</font><font color="#CCCCCC"> and if you</font><font color="#E5E5E5"> copy that</font><font color="#CCCCCC"> file</font>

453
00:17:54,040 --> 00:17:59,620
<font color="#E5E5E5">somewhere else</font><font color="#CCCCCC"> it no longer works as a</font>

454
00:17:56,679 --> 00:18:01,570
<font color="#E5E5E5">mapable image and that</font><font color="#CCCCCC"> kind of implies</font>

455
00:17:59,620 --> 00:18:03,309
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it's not some sort of hash stored</font>

456
00:18:01,570 --> 00:18:06,220
in memory<font color="#CCCCCC"> it's something to do</font><font color="#E5E5E5"> with the</font>

457
00:18:03,309 --> 00:18:09,129
file itself<font color="#E5E5E5"> and what I actually turned</font>

458
00:18:06,220 --> 00:18:10,750
<font color="#E5E5E5">out</font><font color="#CCCCCC"> to be is related to an extended</font>

459
00:18:09,130 --> 00:18:12,820
<font color="#E5E5E5">attribute so most</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> don't</font>

460
00:18:10,750 --> 00:18:15,190
necessarily<font color="#CCCCCC"> realize this that NTFS</font>

461
00:18:12,820 --> 00:18:18,309
supports the<font color="#CCCCCC"> ability to have name value</font>

462
00:18:15,190 --> 00:18:22,210
pairs<font color="#E5E5E5"> added to an arbitrary file and</font>

463
00:18:18,309 --> 00:18:24,730
this is extended attributes<font color="#CCCCCC"> and under</font>

464
00:18:22,210 --> 00:18:26,290
the hood<font color="#CCCCCC"> the name of this particular</font><font color="#E5E5E5"> X</font>

465
00:18:24,730 --> 00:18:29,250
and that's<font color="#E5E5E5"> me was dollar Colonel</font><font color="#CCCCCC"> Dodge</font>

466
00:18:26,290 --> 00:18:31,960
<font color="#CCCCCC">dot ASP cache</font><font color="#E5E5E5"> and if I remove that or</font>

467
00:18:29,250 --> 00:18:33,370
manipulated that<font color="#E5E5E5"> in some way then the</font>

468
00:18:31,960 --> 00:18:35,380
file would no longer be mapped as an

469
00:18:33,370 --> 00:18:37,689
image<font color="#E5E5E5"> section</font><font color="#CCCCCC"> so far ok</font><font color="#E5E5E5"> what does</font><font color="#CCCCCC"> that</font>

470
00:18:35,380 --> 00:18:39,820
<font color="#CCCCCC">actually do</font><font color="#E5E5E5"> well if you</font><font color="#CCCCCC"> actually look</font><font color="#E5E5E5"> on</font>

471
00:18:37,690 --> 00:18:42,010
<font color="#CCCCCC">MSDN there's actually an entire</font><font color="#E5E5E5"> article</font>

472
00:18:39,820 --> 00:18:44,649
about this and<font color="#E5E5E5"> how it's basically there</font>

473
00:18:42,010 --> 00:18:46,900
to<font color="#CCCCCC"> speed up the verification</font><font color="#E5E5E5"> of sort of</font>

474
00:18:44,650 --> 00:18:48,910
pre cache image verification<font color="#E5E5E5"> because</font>

475
00:18:46,900 --> 00:18:50,080
actually verifying an image can<font color="#CCCCCC"> be quite</font>

476
00:18:48,910 --> 00:18:53,490
an<font color="#CCCCCC"> expensive operation</font>

477
00:18:50,080 --> 00:18:56,830
so by pre validating<font color="#CCCCCC"> that image and</font>

478
00:18:53,490 --> 00:18:58,780
storing it as a cache<font color="#E5E5E5"> well we can then</font>

479
00:18:56,830 --> 00:19:00,780
<font color="#CCCCCC">just go is that</font><font color="#E5E5E5"> cache there if it is</font>

480
00:18:58,780 --> 00:19:03,940
awesome we already<font color="#CCCCCC"> assume it's signed</font>

481
00:19:00,780 --> 00:19:05,920
but it's all it is is what if the user

482
00:19:03,940 --> 00:19:08,590
application tries to spoof this

483
00:19:05,920 --> 00:19:11,950
information well fortunately the<font color="#CCCCCC"> design</font>

484
00:19:08,590 --> 00:19:14,260
<font color="#CCCCCC">is for</font><font color="#E5E5E5"> to this problem and</font><font color="#CCCCCC"> to tackle it</font>

485
00:19:11,950 --> 00:19:16,360
in two ways firstly the dollar Colonel

486
00:19:14,260 --> 00:19:18,520
extent the dollar<font color="#E5E5E5"> Colonel prefix</font><font color="#CCCCCC"> of the</font>

487
00:19:16,360 --> 00:19:20,350
name<font color="#E5E5E5"> in the case</font><font color="#CCCCCC"> that this extended</font>

488
00:19:18,520 --> 00:19:22,570
attribute can only be set from<font color="#CCCCCC"> Colonel</font>

489
00:19:20,350 --> 00:19:24,010
<font color="#E5E5E5">mode and more than</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> it can only be set</font>

490
00:19:22,570 --> 00:19:26,860
from Colonel mode using a special

491
00:19:24,010 --> 00:19:29,800
function<font color="#E5E5E5"> a special minor request</font><font color="#CCCCCC"> code as</font>

492
00:19:26,860 --> 00:19:31,540
part<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> herb and</font><font color="#E5E5E5"> if you don't do</font>

493
00:19:29,800 --> 00:19:33,309
that it won't<font color="#E5E5E5"> you just will not</font><font color="#CCCCCC"> let you</font>

494
00:19:31,540 --> 00:19:35,050
set that extended attribute<font color="#E5E5E5"> so that</font>

495
00:19:33,309 --> 00:19:39,010
stops<font color="#CCCCCC"> the user mode just adding an</font>

496
00:19:35,050 --> 00:19:40,450
arbitrary entry to<font color="#E5E5E5"> both to a file but</font>

497
00:19:39,010 --> 00:19:43,600
what about if I just modify an existing

498
00:19:40,450 --> 00:19:47,170
<font color="#E5E5E5">cash</font><font color="#CCCCCC"> sign file well at that point the</font>

499
00:19:43,600 --> 00:19:48,760
ntfs driver<font color="#CCCCCC"> notices that through it's</font>

500
00:19:47,170 --> 00:19:51,070
something called<font color="#E5E5E5"> the</font><font color="#CCCCCC"> USN change journal</font>

501
00:19:48,760 --> 00:19:52,720
and it sees<font color="#E5E5E5"> that you've tried to</font>

502
00:19:51,070 --> 00:19:54,050
overwrite<font color="#CCCCCC"> the file or truncate the file</font>

503
00:19:52,720 --> 00:19:56,450
or modify<font color="#E5E5E5"> it in some way</font>

504
00:19:54,050 --> 00:19:59,389
and then<font color="#E5E5E5"> automatically deletes it for</font>

505
00:19:56,450 --> 00:20:01,420
you so as<font color="#E5E5E5"> long</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> that thing exists and</font>

506
00:19:59,390 --> 00:20:05,690
you trust all the other operations<font color="#CCCCCC"> are</font>

507
00:20:01,420 --> 00:20:07,550
working correctly<font color="#CCCCCC"> then if</font><font color="#E5E5E5"> anyone tries</font>

508
00:20:05,690 --> 00:20:09,350
to<font color="#E5E5E5"> modify that file or spoof it</font><font color="#CCCCCC"> then it</font>

509
00:20:07,550 --> 00:20:09,830
will automatically be deleted<font color="#CCCCCC"> and your</font>

510
00:20:09,350 --> 00:20:14,659
<font color="#CCCCCC">cached</font>

511
00:20:09,830 --> 00:20:16,010
image signature will go away<font color="#CCCCCC"> okay but of</font>

512
00:20:14,660 --> 00:20:19,460
<font color="#E5E5E5">course there must be a way of doing</font><font color="#CCCCCC"> this</font>

513
00:20:16,010 --> 00:20:21,770
<font color="#CCCCCC">from user</font><font color="#E5E5E5"> mode and when Microsoft added</font>

514
00:20:19,460 --> 00:20:24,460
a system<font color="#E5E5E5"> call</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> Windows 8 the NT set</font>

515
00:20:21,770 --> 00:20:27,860
<font color="#E5E5E5">cache signing level system call really</font>

516
00:20:24,460 --> 00:20:30,170
<font color="#CCCCCC">complicated</font><font color="#E5E5E5"> and it takes</font><font color="#CCCCCC"> some flags</font>

517
00:20:27,860 --> 00:20:31,129
which indicates a couple of different

518
00:20:30,170 --> 00:20:32,750
operating<font color="#E5E5E5"> modes</font>

519
00:20:31,130 --> 00:20:35,480
it has mode 0 which is the one used by

520
00:20:32,750 --> 00:20:37,160
<font color="#E5E5E5">engine it</font><font color="#CCCCCC"> allows you</font><font color="#E5E5E5"> to sign unsigned</font>

521
00:20:35,480 --> 00:20:38,990
files by effectively applying a

522
00:20:37,160 --> 00:20:41,360
signature from<font color="#E5E5E5"> an existing signed file</font>

523
00:20:38,990 --> 00:20:42,350
<font color="#E5E5E5">but in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use that mode you need</font>

524
00:20:41,360 --> 00:20:44,629
<font color="#E5E5E5">to be inside something called a</font>

525
00:20:42,350 --> 00:20:46,850
protected<font color="#E5E5E5"> process</font><font color="#CCCCCC"> like process</font><font color="#E5E5E5"> which is</font>

526
00:20:44,630 --> 00:20:48,950
a special isolation process mechanism

527
00:20:46,850 --> 00:20:51,590
which you need to<font color="#CCCCCC"> be signed</font><font color="#E5E5E5"> by Microsoft</font>

528
00:20:48,950 --> 00:20:53,090
<font color="#E5E5E5">to get in in theory so if you need to be</font>

529
00:20:51,590 --> 00:20:54,679
signed<font color="#CCCCCC"> by</font><font color="#E5E5E5"> Microsoft's well you've</font>

530
00:20:53,090 --> 00:20:56,209
probably already got code running on<font color="#E5E5E5"> the</font>

531
00:20:54,680 --> 00:20:58,730
<font color="#E5E5E5">system so you don't really need to</font><font color="#CCCCCC"> do</font>

532
00:20:56,210 --> 00:21:00,260
this but what I found interesting there

533
00:20:58,730 --> 00:21:02,270
<font color="#CCCCCC">was a second mode this mode</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> which</font>

534
00:21:00,260 --> 00:21:05,360
allows you to<font color="#E5E5E5"> catch the signature on an</font>

535
00:21:02,270 --> 00:21:08,600
existing<font color="#E5E5E5"> signed file and to this no ppl</font>

536
00:21:05,360 --> 00:21:11,810
was required<font color="#CCCCCC"> so far</font><font color="#E5E5E5"> ok how does</font><font color="#CCCCCC"> that</font>

537
00:21:08,600 --> 00:21:14,000
actually work under the hood<font color="#CCCCCC"> and what</font>

538
00:21:11,810 --> 00:21:15,470
<font color="#CCCCCC">actually happens is first user mode has</font>

539
00:21:14,000 --> 00:21:17,570
<font color="#E5E5E5">to</font><font color="#CCCCCC"> open the file it wants to apply the</font>

540
00:21:15,470 --> 00:21:19,400
cash signature<font color="#CCCCCC"> to and obviously mode for</font>

541
00:21:17,570 --> 00:21:21,169
this<font color="#CCCCCC"> also</font><font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> the one which is</font>

542
00:21:19,400 --> 00:21:23,840
<font color="#E5E5E5">also already signed</font>

543
00:21:21,170 --> 00:21:25,190
now that signature can<font color="#CCCCCC"> be embedded</font><font color="#E5E5E5"> it</font>

544
00:21:23,840 --> 00:21:27,290
can be an embedded<font color="#E5E5E5"> or authenticated</font>

545
00:21:25,190 --> 00:21:29,330
signature<font color="#E5E5E5"> or it could also be something</font>

546
00:21:27,290 --> 00:21:33,110
<font color="#E5E5E5">called</font><font color="#CCCCCC"> catalogue signed and in catalog</font>

547
00:21:29,330 --> 00:21:35,870
signs what you have is you you hash do a

548
00:21:33,110 --> 00:21:37,820
cryptographic hash of<font color="#CCCCCC"> that file</font><font color="#E5E5E5"> and then</font>

549
00:21:35,870 --> 00:21:39,320
you go and search a load of<font color="#E5E5E5"> catalogue</font>

550
00:21:37,820 --> 00:21:41,689
files which are installed<font color="#CCCCCC"> as part of the</font>

551
00:21:39,320 --> 00:21:43,820
<font color="#E5E5E5">system and in these catalog files is</font>

552
00:21:41,690 --> 00:21:45,560
potentially your hash and then<font color="#E5E5E5"> that</font>

553
00:21:43,820 --> 00:21:47,240
entire catalog file is then signed and

554
00:21:45,560 --> 00:21:48,980
the majority of<font color="#CCCCCC"> Windows binaries are</font>

555
00:21:47,240 --> 00:21:52,100
<font color="#CCCCCC">catalog</font><font color="#E5E5E5"> signed as opposed to embedded</font>

556
00:21:48,980 --> 00:21:56,480
signed<font color="#E5E5E5"> so we call this</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> cache</font><font color="#CCCCCC"> line</font>

557
00:21:52,100 --> 00:21:58,250
level<font color="#E5E5E5"> that's requesting mode for we then</font>

558
00:21:56,480 --> 00:22:01,880
obviously the kernel has<font color="#CCCCCC"> to then hash</font>

559
00:21:58,250 --> 00:22:04,820
that target file<font color="#E5E5E5"> and produce a sha-1</font><font color="#CCCCCC"> or</font>

560
00:22:01,880 --> 00:22:06,470
sha-256 hash of it<font color="#CCCCCC"> it then</font><font color="#E5E5E5"> has to find</font>

561
00:22:04,820 --> 00:22:07,689
the<font color="#E5E5E5"> catalog which corresponds to that</font>

562
00:22:06,470 --> 00:22:09,940
hash and

563
00:22:07,690 --> 00:22:12,100
and then finally if the verification<font color="#E5E5E5"> is</font>

564
00:22:09,940 --> 00:22:13,720
successful<font color="#E5E5E5"> it makes sure</font><font color="#CCCCCC"> that there's no</font>

565
00:22:12,100 --> 00:22:16,270
pending<font color="#CCCCCC"> rights to the file it flushes</font>

566
00:22:13,720 --> 00:22:17,560
<font color="#E5E5E5">this</font><font color="#CCCCCC"> USN changed</font><font color="#E5E5E5"> journal and then writes</font>

567
00:22:16,270 --> 00:22:19,450
the extended attribute and<font color="#E5E5E5"> then from</font>

568
00:22:17,560 --> 00:22:22,990
then on<font color="#E5E5E5"> you cannot no longer modify the</font>

569
00:22:19,450 --> 00:22:25,510
file<font color="#E5E5E5"> but why I found interesting was the</font>

570
00:22:22,990 --> 00:22:27,550
<font color="#CCCCCC">fact that because we not passed the file</font>

571
00:22:25,510 --> 00:22:30,850
path we just passed<font color="#CCCCCC"> a handle</font><font color="#E5E5E5"> throughout</font>

572
00:22:27,550 --> 00:22:35,710
this entire process<font color="#CCCCCC"> user mode has access</font>

573
00:22:30,850 --> 00:22:38,709
to this target file however<font color="#E5E5E5"> only</font><font color="#CCCCCC"> the</font>

574
00:22:35,710 --> 00:22:40,540
first couple of<font color="#E5E5E5"> steps require that file</font>

575
00:22:38,710 --> 00:22:43,090
not to be modified<font color="#CCCCCC"> opens at a point</font>

576
00:22:40,540 --> 00:22:45,159
where the file is hashed<font color="#E5E5E5"> any time after</font>

577
00:22:43,090 --> 00:22:46,959
<font color="#E5E5E5">that opens at the point it tries to</font>

578
00:22:45,160 --> 00:22:49,900
write the kernel<font color="#CCCCCC"> is</font><font color="#E5E5E5"> being flushed to</font>

579
00:22:46,960 --> 00:22:52,840
change<font color="#E5E5E5"> journal in theory we can</font><font color="#CCCCCC"> actually</font>

580
00:22:49,900 --> 00:22:55,090
modify<font color="#E5E5E5"> the file so that is there a</font>

581
00:22:52,840 --> 00:22:57,270
window<font color="#E5E5E5"> of opportunity in</font><font color="#CCCCCC"> this little</font>

582
00:22:55,090 --> 00:23:00,100
space that<font color="#E5E5E5"> we can exploit and</font>

583
00:22:57,270 --> 00:23:02,440
effectively sort<font color="#E5E5E5"> of modify the file and</font>

584
00:23:00,100 --> 00:23:05,620
get<font color="#E5E5E5"> it to</font><font color="#CCCCCC"> cache</font><font color="#E5E5E5"> sign-off SDF file it</font>

585
00:23:02,440 --> 00:23:08,860
didn't expect so let's hope<font color="#E5E5E5"> this demo</font>

586
00:23:05,620 --> 00:23:10,449
works so I've got<font color="#CCCCCC"> process</font><font color="#E5E5E5"> Explorer and</font>

587
00:23:08,860 --> 00:23:11,919
<font color="#E5E5E5">red lights run pressing Explorer and</font>

588
00:23:10,450 --> 00:23:14,740
person Explorer is a Microsoft signed

589
00:23:11,920 --> 00:23:16,960
binary but it's not signed with the

590
00:23:14,740 --> 00:23:29,140
correct<font color="#E5E5E5"> ek use which allow you to run it</font>

591
00:23:16,960 --> 00:23:32,530
on<font color="#E5E5E5"> Windows 10 s so so I can run this so</font>

592
00:23:29,140 --> 00:23:37,950
if I copy press explorer.exe<font color="#CCCCCC"> and I want</font>

593
00:23:32,530 --> 00:23:37,950
to create<font color="#CCCCCC"> top X</font><font color="#E5E5E5"> working directory</font>

594
00:23:40,230 --> 00:23:48,970
<font color="#E5E5E5">okay so it seems</font><font color="#CCCCCC"> to do some funky stuff</font>

595
00:23:43,630 --> 00:23:51,070
and now if I run<font color="#CCCCCC"> I actually just just to</font>

596
00:23:48,970 --> 00:23:53,230
<font color="#E5E5E5">double check</font><font color="#CCCCCC"> if I do s Sita actually</font>

597
00:23:51,070 --> 00:23:55,750
which<font color="#CCCCCC"> is a file compare comparing the</font>

598
00:23:53,230 --> 00:23:58,240
two files<font color="#E5E5E5"> there's apparently no</font>

599
00:23:55,750 --> 00:24:01,630
difference between<font color="#E5E5E5"> the two but if I run</font>

600
00:23:58,240 --> 00:24:05,490
<font color="#CCCCCC">Presley Explorer working we get a copy</font>

601
00:24:01,630 --> 00:24:05,490
<font color="#E5E5E5">of process Explorer running and this is</font>

602
00:24:08,429 --> 00:24:12,279
and this is a completely<font color="#E5E5E5"> arbitrary</font>

603
00:24:10,330 --> 00:24:15,750
binary and you can apply<font color="#CCCCCC"> it</font><font color="#E5E5E5"> to Delos you</font>

604
00:24:12,279 --> 00:24:15,750
comply to<font color="#CCCCCC"> X's it</font><font color="#E5E5E5"> doesn't really matter</font>

605
00:24:16,289 --> 00:24:21,158
<font color="#CCCCCC">now</font><font color="#E5E5E5"> okay again I kind of thought I</font>

606
00:24:18,970 --> 00:24:25,510
<font color="#CCCCCC">probably should report this to</font><font color="#E5E5E5"> Microsoft</font>

607
00:24:21,159 --> 00:24:28,659
and Sony fixed it<font color="#CCCCCC"> so in terms of goals</font>

608
00:24:25,510 --> 00:24:30,370
<font color="#CCCCCC">did I meet my goals</font><font color="#E5E5E5"> I think I met pretty</font>

609
00:24:28,659 --> 00:24:31,750
<font color="#E5E5E5">much everything other than the drop and</font>

610
00:24:30,370 --> 00:24:33,850
<font color="#E5E5E5">run that was there was far too many</font>

611
00:24:31,750 --> 00:24:35,860
dialog boxes I had to click through and

612
00:24:33,850 --> 00:24:37,928
potentially get the<font color="#E5E5E5"> users to uncheck a</font>

613
00:24:35,860 --> 00:24:39,699
tick box<font color="#E5E5E5"> and lots of stuff but</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> theory</font>

614
00:24:37,929 --> 00:24:41,320
<font color="#E5E5E5">you could get with</font><font color="#CCCCCC"> a bit of social</font>

615
00:24:39,700 --> 00:24:43,419
engineering<font color="#E5E5E5"> getting get them to run a</font>

616
00:24:41,320 --> 00:24:46,389
binary which would then compromise the

617
00:24:43,419 --> 00:24:47,649
<font color="#CCCCCC">system</font><font color="#E5E5E5"> for you or user is a jailbreak</font>

618
00:24:46,389 --> 00:24:48,939
<font color="#E5E5E5">like you could get someone say if you</font>

619
00:24:47,649 --> 00:24:50,260
want to jailbreak your<font color="#E5E5E5"> Windows 10</font><font color="#CCCCCC"> s</font>

620
00:24:48,940 --> 00:24:53,830
device you<font color="#E5E5E5"> could just double click this</font>

621
00:24:50,260 --> 00:24:56,260
and<font color="#E5E5E5"> do some fun stuff</font><font color="#CCCCCC"> so it's all fixed</font>

622
00:24:53,830 --> 00:24:59,019
<font color="#E5E5E5">and Windows 10</font><font color="#CCCCCC"> s in</font><font color="#E5E5E5"> RS free which is</font>

623
00:24:56,260 --> 00:25:01,570
<font color="#E5E5E5">Bill 1709 is obviously completely secure</font>

624
00:24:59,019 --> 00:25:08,970
so let's demo some stuff on our Windows

625
00:25:01,570 --> 00:25:08,970
10 s on since you know<font color="#E5E5E5"> no that's</font>

626
00:25:14,230 --> 00:25:38,600
so obviously yeah the wonders of trying

627
00:25:18,440 --> 00:25:41,960
to so yeah<font color="#E5E5E5"> okay so this is 1709 I</font>

628
00:25:38,600 --> 00:25:45,919
updated<font color="#E5E5E5"> on Tuesday so it's completely up</font>

629
00:25:41,960 --> 00:25:48,110
to date<font color="#E5E5E5"> version of 1709 and there was a</font>

630
00:25:45,920 --> 00:25:52,820
few changes for<font color="#CCCCCC"> example if I run reg</font><font color="#E5E5E5"> any</font>

631
00:25:48,110 --> 00:25:55,520
<font color="#CCCCCC">direct</font><font color="#E5E5E5"> see it goes no and hey chase</font>

632
00:25:52,820 --> 00:25:57,409
<font color="#E5E5E5">which is the</font><font color="#CCCCCC"> hater</font><font color="#E5E5E5"> to my help goes</font><font color="#CCCCCC"> no so</font>

633
00:25:55,520 --> 00:25:59,030
<font color="#CCCCCC">they found this so clearly it's got to</font>

634
00:25:57,410 --> 00:26:00,710
be super secure<font color="#E5E5E5"> and obviously</font><font color="#CCCCCC"> parish</font>

635
00:25:59,030 --> 00:26:02,210
<font color="#E5E5E5">show is still banned but there just</font>

636
00:26:00,710 --> 00:26:03,980
happens to be<font color="#E5E5E5"> a PowerShell I come on my</font>

637
00:26:02,210 --> 00:26:07,130
<font color="#E5E5E5">desktop well I wonder what happens if</font><font color="#CCCCCC"> I</font>

638
00:26:03,980 --> 00:26:11,750
<font color="#E5E5E5">double click that we get a copy of</font>

639
00:26:07,130 --> 00:26:14,390
PowerShell right<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> but again they</font>

640
00:26:11,750 --> 00:26:16,970
fixed my arbitrary<font color="#E5E5E5"> code execution bug</font>

641
00:26:14,390 --> 00:26:19,070
<font color="#E5E5E5">and they</font><font color="#CCCCCC"> would I hate edge</font><font color="#E5E5E5"> obviously</font>

642
00:26:16,970 --> 00:26:20,750
because I must do so I really<font color="#CCCCCC"> want to</font>

643
00:26:19,070 --> 00:26:25,129
<font color="#CCCCCC">run Firefox right but Firefox it's not</font>

644
00:26:20,750 --> 00:26:30,770
allowed<font color="#E5E5E5"> so I'll just run this little</font>

645
00:26:25,130 --> 00:26:34,700
<font color="#E5E5E5">script goes off and does some</font><font color="#CCCCCC"> stuff and</font>

646
00:26:30,770 --> 00:26:37,180
<font color="#E5E5E5">then if I</font><font color="#CCCCCC"> double-click</font><font color="#E5E5E5"> Firefox now give</font>

647
00:26:34,700 --> 00:26:37,180
it<font color="#CCCCCC"> a second</font>

648
00:26:37,880 --> 00:26:40,999
[Applause]

649
00:26:44,549 --> 00:26:50,019
so it's fixed<font color="#CCCCCC"> right</font>

650
00:26:47,609 --> 00:26:51,339
so if you want some references there's

651
00:26:50,019 --> 00:26:54,369
some references<font color="#E5E5E5"> just think like my</font>

652
00:26:51,339 --> 00:26:56,619
<font color="#CCCCCC">Donuts</font><font color="#E5E5E5"> Jace good</font><font color="#CCCCCC"> to Matt greatest tool</font>

653
00:26:54,369 --> 00:26:59,168
to convert binary policy file<font color="#E5E5E5"> and I'm</font>

654
00:26:56,619 --> 00:27:03,099
not<font color="#E5E5E5"> gonna necessarily explain how I did</font>

655
00:26:59,169 --> 00:27:06,099
<font color="#CCCCCC">down 17o</font><font color="#E5E5E5"> 1709 but all that information</font>

656
00:27:03,099 --> 00:27:07,448
is<font color="#CCCCCC"> out</font><font color="#E5E5E5"> in public</font><font color="#CCCCCC"> I it's not fixed but</font>

657
00:27:06,099 --> 00:27:09,639
you can find out what it is<font color="#E5E5E5"> if you go</font>

658
00:27:07,449 --> 00:27:11,709
looking so thank you very<font color="#E5E5E5"> much for</font>

659
00:27:09,639 --> 00:27:13,119
listening<font color="#E5E5E5"> to me and I hope you have a</font>

660
00:27:11,709 --> 00:27:15,239
good rest<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the day but</font><font color="#E5E5E5"> thank you for</font>

661
00:27:13,119 --> 00:27:15,238
listening

