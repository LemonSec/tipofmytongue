1
00:00:02,960 --> 00:00:05,600
all right um hi everybody so it's super

2
00:00:05,600 --> 00:00:08,080
nice to be back in berlin for offensive

3
00:00:08,080 --> 00:00:09,280
con and

4
00:00:09,280 --> 00:00:11,200
we are very happy to present our first

5
00:00:11,200 --> 00:00:13,840
results with pedro unfortunately pedro

6
00:00:13,840 --> 00:00:15,920
couldn't travel to berlin so he's joined

7
00:00:15,920 --> 00:00:17,680
via zoom call so it's an interesting

8
00:00:17,680 --> 00:00:19,439
setup let's see how that's gonna work

9
00:00:19,439 --> 00:00:20,960
out

10
00:00:20,960 --> 00:00:22,000
all right

11
00:00:22,000 --> 00:00:25,199
so um today we'll show you how to pawn

12
00:00:25,199 --> 00:00:27,199
your router over the internet and we'll

13
00:00:27,199 --> 00:00:28,880
start with give you some impressions

14
00:00:28,880 --> 00:00:30,400
about the network

15
00:00:30,400 --> 00:00:32,320
devices types that we see

16
00:00:32,320 --> 00:00:34,399
and then we'll move on to lan versus one

17
00:00:34,399 --> 00:00:35,680
exploitation

18
00:00:35,680 --> 00:00:37,440
and then we'll give you some

19
00:00:37,440 --> 00:00:40,239
of our experience party participating

20
00:00:40,239 --> 00:00:41,600
and

21
00:00:41,600 --> 00:00:43,360
finding vulnerabilities for pawn one

22
00:00:43,360 --> 00:00:44,640
targets

23
00:00:44,640 --> 00:00:46,559
um eventually we'll

24
00:00:46,559 --> 00:00:48,879
show details for three one exploits that

25
00:00:48,879 --> 00:00:51,760
we use at the competition and then we'll

26
00:00:51,760 --> 00:00:54,000
close the presentation with some future

27
00:00:54,000 --> 00:00:55,120
outlook

28
00:00:55,120 --> 00:00:58,160
in this area

29
00:00:58,160 --> 00:01:00,480
about us my name is herrera dominsky i'm

30
00:01:00,480 --> 00:01:02,399
coming from system network engineering

31
00:01:02,399 --> 00:01:04,239
background i have been working security

32
00:01:04,239 --> 00:01:05,119
for

33
00:01:05,119 --> 00:01:06,799
over a decade now

34
00:01:06,799 --> 00:01:08,479
my research interest is in embedded

35
00:01:08,479 --> 00:01:11,920
devices iot devices automotive security

36
00:01:11,920 --> 00:01:14,159
uh yeah pedro gonna say a few words

37
00:01:14,159 --> 00:01:16,720
about yourself

38
00:01:17,200 --> 00:01:18,640
hi everyone

39
00:01:18,640 --> 00:01:21,119
my name is pedro

40
00:01:21,119 --> 00:01:24,080
i'm a founder of agile information

41
00:01:24,080 --> 00:01:25,920
security we're a small

42
00:01:25,920 --> 00:01:28,880
uk based security consultancy we focus

43
00:01:28,880 --> 00:01:29,759
on

44
00:01:29,759 --> 00:01:31,439
you know penetration testing reverse

45
00:01:31,439 --> 00:01:33,439
engineering this kind of stuff

46
00:01:33,439 --> 00:01:36,400
and i also like to break stuff uh you

47
00:01:36,400 --> 00:01:40,079
know focusing on also embedded devices

48
00:01:40,079 --> 00:01:42,720
scada enterprise apps a little bit of

49
00:01:42,720 --> 00:01:44,000
everything

50
00:01:44,000 --> 00:01:45,840
and you know i just want to say i'm

51
00:01:45,840 --> 00:01:47,680
really sorry for not being there believe

52
00:01:47,680 --> 00:01:49,840
me the loss is mine

53
00:01:49,840 --> 00:01:52,000
i am fully vaccinated but my vaccine is

54
00:01:52,000 --> 00:01:54,560
not accepted in germany it is what it is

55
00:01:54,560 --> 00:01:57,360
but i'd like to thank the offensive guys

56
00:01:57,360 --> 00:01:59,280
you know especially miguel

57
00:01:59,280 --> 00:02:01,280
lucas all the staff for making this

58
00:02:01,280 --> 00:02:02,560
happen

59
00:02:02,560 --> 00:02:05,439
uh and together we're the flashback team

60
00:02:05,439 --> 00:02:08,239
that's our war name what we use in pawn

61
00:02:08,239 --> 00:02:09,679
to own

62
00:02:09,679 --> 00:02:11,680
and we also have a nice youtube channel

63
00:02:11,680 --> 00:02:13,760
or at least we like to think it's nice

64
00:02:13,760 --> 00:02:15,920
we encourage you to check it out later

65
00:02:15,920 --> 00:02:18,160
and uh have a look and thank you very

66
00:02:18,160 --> 00:02:19,920
much

67
00:02:19,920 --> 00:02:24,160
okay let's get going so network routers

68
00:02:24,160 --> 00:02:25,440
when we

69
00:02:25,440 --> 00:02:27,520
talk about network devices we like to

70
00:02:27,520 --> 00:02:29,280
put them to categories so in the first

71
00:02:29,280 --> 00:02:31,360
category you will have consumer routers

72
00:02:31,360 --> 00:02:32,800
and these are the routers that when you

73
00:02:32,800 --> 00:02:35,680
go to amazon you select tp-link net gear

74
00:02:35,680 --> 00:02:38,319
you just buy them and put them in your

75
00:02:38,319 --> 00:02:40,879
whole network you connect all your home

76
00:02:40,879 --> 00:02:43,280
devices at home and the reason you would

77
00:02:43,280 --> 00:02:45,760
do that because the

78
00:02:45,760 --> 00:02:47,760
network router that you got from your

79
00:02:47,760 --> 00:02:49,840
isps maybe doesn't have enough

80
00:02:49,840 --> 00:02:51,519
performance you would like to have more

81
00:02:51,519 --> 00:02:54,000
features or maybe you'd like to run your

82
00:02:54,000 --> 00:02:56,319
own custom firmware on it

83
00:02:56,319 --> 00:02:58,400
and then you have a cable modem and

84
00:02:58,400 --> 00:03:00,159
cable modem is a very important device

85
00:03:00,159 --> 00:03:01,599
from the isp

86
00:03:01,599 --> 00:03:03,760
perspective because it terminates isp

87
00:03:03,760 --> 00:03:05,519
connection at your home

88
00:03:05,519 --> 00:03:06,720
it is

89
00:03:06,720 --> 00:03:08,560
transparent for the for the router that

90
00:03:08,560 --> 00:03:10,720
you have at home

91
00:03:10,720 --> 00:03:12,080
but

92
00:03:12,080 --> 00:03:14,480
for the isp it is fully controllable

93
00:03:14,480 --> 00:03:16,879
device so it means it can control its

94
00:03:16,879 --> 00:03:18,800
firmware it controls it its

95
00:03:18,800 --> 00:03:21,680
configuration which is signed or

96
00:03:21,680 --> 00:03:24,000
cryptographically signed so for instance

97
00:03:24,000 --> 00:03:26,319
the speed of your service is part of

98
00:03:26,319 --> 00:03:28,480
this configuration

99
00:03:28,480 --> 00:03:31,599
it is also being authenticated by the

100
00:03:31,599 --> 00:03:33,680
net devices on the isp network so that

101
00:03:33,680 --> 00:03:35,200
means you cannot take any device and

102
00:03:35,200 --> 00:03:38,239
plug into isp network and expect to have

103
00:03:38,239 --> 00:03:40,319
a working connection

104
00:03:40,319 --> 00:03:41,920
and on top of that all the traffic

105
00:03:41,920 --> 00:03:43,920
between cable modem and

106
00:03:43,920 --> 00:03:45,120
and the devices on the network are

107
00:03:45,120 --> 00:03:47,360
encrypted so if you're able even if

108
00:03:47,360 --> 00:03:49,840
you're able to intercept anything it's

109
00:03:49,840 --> 00:03:51,920
you can't make anything make any sense

110
00:03:51,920 --> 00:03:54,239
of the data that you see

111
00:03:54,239 --> 00:03:56,000
then we have enterprise routers and

112
00:03:56,000 --> 00:03:58,799
those are depending on the size of the

113
00:03:58,799 --> 00:04:00,400
business that is using that there may be

114
00:04:00,400 --> 00:04:03,439
quite small or really beefy devices

115
00:04:03,439 --> 00:04:05,439
and it can implement a lot of features

116
00:04:05,439 --> 00:04:07,920
which helps enterprise to be connected

117
00:04:07,920 --> 00:04:10,080
uh to the outside world and then

118
00:04:10,080 --> 00:04:13,200
eventually the core network routers and

119
00:04:13,200 --> 00:04:14,560
these are the routers which run the

120
00:04:14,560 --> 00:04:16,720
internet they are used in the backbone

121
00:04:16,720 --> 00:04:19,519
networks and used to connect isps to

122
00:04:19,519 --> 00:04:20,560
together

123
00:04:20,560 --> 00:04:22,400
they're usually very well isolated there

124
00:04:22,400 --> 00:04:24,320
is not much

125
00:04:24,320 --> 00:04:26,080
access to those

126
00:04:26,080 --> 00:04:27,680
probably not much security research on

127
00:04:27,680 --> 00:04:28,880
them as well

128
00:04:28,880 --> 00:04:31,840
and they will be not part of of this

129
00:04:31,840 --> 00:04:33,360
presentation

130
00:04:33,360 --> 00:04:35,440
but to give you a better idea again how

131
00:04:35,440 --> 00:04:37,280
the cable modem and router interacts

132
00:04:37,280 --> 00:04:38,720
together how they differ

133
00:04:38,720 --> 00:04:40,800
take a look at the first scenario so in

134
00:04:40,800 --> 00:04:43,600
i mentioned before they terminate that

135
00:04:43,600 --> 00:04:45,680
isps network at your home

136
00:04:45,680 --> 00:04:47,919
and so they do all the connections set

137
00:04:47,919 --> 00:04:49,440
up and everything and then if you have

138
00:04:49,440 --> 00:04:51,440
consumer router you can connect the one

139
00:04:51,440 --> 00:04:53,759
interface to that

140
00:04:53,759 --> 00:04:58,080
cable modem and that was this setup was

141
00:04:58,080 --> 00:04:59,919
maybe you've seen more in a in the past

142
00:04:59,919 --> 00:05:02,400
and nowadays if you order service from

143
00:05:02,400 --> 00:05:05,199
your rsp uh likely the second scenario

144
00:05:05,199 --> 00:05:06,479
will be

145
00:05:06,479 --> 00:05:08,400
available for you so so the isp will

146
00:05:08,400 --> 00:05:10,960
ship you a device a network device but

147
00:05:10,960 --> 00:05:13,280
logically the cable modem and the router

148
00:05:13,280 --> 00:05:15,919
will be integrated into that one device

149
00:05:15,919 --> 00:05:17,600
so you can see the cable modem is also

150
00:05:17,600 --> 00:05:20,960
quite interesting research area

151
00:05:20,960 --> 00:05:22,080
and

152
00:05:22,080 --> 00:05:23,440
what about the

153
00:05:23,440 --> 00:05:25,919
enterprise routers so

154
00:05:25,919 --> 00:05:27,680
when we speak with better about

155
00:05:27,680 --> 00:05:29,440
enterprise writers we like to call them

156
00:05:29,440 --> 00:05:32,720
like consumer routers on storage because

157
00:05:32,720 --> 00:05:35,520
actually by like if you look closer they

158
00:05:35,520 --> 00:05:37,840
are very similar they implement similar

159
00:05:37,840 --> 00:05:40,080
services maybe

160
00:05:40,080 --> 00:05:42,960
they have similar architectures uh maybe

161
00:05:42,960 --> 00:05:45,680
because they're targeted for business

162
00:05:45,680 --> 00:05:47,840
customers that maybe even have more

163
00:05:47,840 --> 00:05:50,400
uh service available on the on the one

164
00:05:50,400 --> 00:05:54,160
interface uh like the waves like proxies

165
00:05:54,160 --> 00:05:56,720
vpn endpoints and so on

166
00:05:56,720 --> 00:05:59,360
um but event like essentially they sit

167
00:05:59,360 --> 00:06:00,960
on the edge of the

168
00:06:00,960 --> 00:06:03,520
of the business and then connect them to

169
00:06:03,520 --> 00:06:05,919
the to the internet and then as you will

170
00:06:05,919 --> 00:06:07,120
see later in the present day

171
00:06:07,120 --> 00:06:08,720
presentation they have similar problems

172
00:06:08,720 --> 00:06:10,720
as consumer authors

173
00:06:10,720 --> 00:06:11,919
all right so

174
00:06:11,919 --> 00:06:13,440
pedro maybe you can give us some

175
00:06:13,440 --> 00:06:14,800
information about land versus one

176
00:06:14,800 --> 00:06:17,440
exploitation

177
00:06:19,039 --> 00:06:20,720
before we start

178
00:06:20,720 --> 00:06:24,400
uh let's uh understand some concepts

179
00:06:24,400 --> 00:06:26,080
uh one thing to understand is most

180
00:06:26,080 --> 00:06:28,639
network devices have two or more

181
00:06:28,639 --> 00:06:30,319
physically and logically separated

182
00:06:30,319 --> 00:06:31,440
domains

183
00:06:31,440 --> 00:06:33,360
what do we mean by domains so in an

184
00:06:33,360 --> 00:06:35,039
example that we have here on screen

185
00:06:35,039 --> 00:06:37,520
which is a consumer router uh we have

186
00:06:37,520 --> 00:06:40,000
the one why they're a network this is

187
00:06:40,000 --> 00:06:41,919
what connects you to the wider internet

188
00:06:41,919 --> 00:06:44,160
right to the outside world and then you

189
00:06:44,160 --> 00:06:46,240
have the lan which you know it's you can

190
00:06:46,240 --> 00:06:48,319
connect via ethernet or via wi-fi which

191
00:06:48,319 --> 00:06:50,560
is your internal network obviously the

192
00:06:50,560 --> 00:06:53,199
lan is a trusted domain or a more

193
00:06:53,199 --> 00:06:56,560
trusted domain than the one

194
00:06:57,199 --> 00:07:00,240
and you know most hacks that you see

195
00:07:00,240 --> 00:07:02,560
most exploits are for the lab

196
00:07:02,560 --> 00:07:04,479
as i said this is the internal trusted

197
00:07:04,479 --> 00:07:06,720
network so it has a lot of services

198
00:07:06,720 --> 00:07:10,240
listening right so stuff like uh upnp so

199
00:07:10,240 --> 00:07:12,560
there's a huge source of vulnerabilities

200
00:07:12,560 --> 00:07:15,840
uh there's the http configuration server

201
00:07:15,840 --> 00:07:17,759
there are custom vendor services you

202
00:07:17,759 --> 00:07:19,840
know of which we have an example here as

203
00:07:19,840 --> 00:07:22,080
you can see this is one of our videos we

204
00:07:22,080 --> 00:07:23,680
encourage you to check it out it's a

205
00:07:23,680 --> 00:07:26,639
command injection in a custom vendor

206
00:07:26,639 --> 00:07:28,000
service

207
00:07:28,000 --> 00:07:30,479
um and the thing is the you know

208
00:07:30,479 --> 00:07:32,160
the land you can call it an internal

209
00:07:32,160 --> 00:07:34,080
trusted network but in some cases it

210
00:07:34,080 --> 00:07:36,479
might not be trusted so obviously it is

211
00:07:36,479 --> 00:07:39,440
different to have uh a land in your home

212
00:07:39,440 --> 00:07:41,280
where you only have devices you trust or

213
00:07:41,280 --> 00:07:43,039
at least you think you do and it's

214
00:07:43,039 --> 00:07:44,879
another thing when it's a shared public

215
00:07:44,879 --> 00:07:47,599
space right so a coffee shop a museum a

216
00:07:47,599 --> 00:07:50,000
mall those are still ones you know but

217
00:07:50,000 --> 00:07:52,000
there might be run by different devices

218
00:07:52,000 --> 00:07:55,440
and have a different level of trust

219
00:07:56,479 --> 00:07:58,240
which is the enterprise line so

220
00:07:58,240 --> 00:08:00,560
enterprise routers also

221
00:08:00,560 --> 00:08:03,360
also manage several networks and domains

222
00:08:03,360 --> 00:08:05,520
uh they might have more than two domains

223
00:08:05,520 --> 00:08:06,879
you know they might have a management

224
00:08:06,879 --> 00:08:09,199
network they might have an office lan in

225
00:08:09,199 --> 00:08:11,759
the previous example in a mall or a

226
00:08:11,759 --> 00:08:13,599
museum that might have a separate like

227
00:08:13,599 --> 00:08:14,879
public land

228
00:08:14,879 --> 00:08:18,240
uh and they typically have uh

229
00:08:18,240 --> 00:08:20,720
multiple one interfaces so the external

230
00:08:20,720 --> 00:08:22,960
interface where you come in

231
00:08:22,960 --> 00:08:25,360
um so yeah you know the same concepts

232
00:08:25,360 --> 00:08:27,360
that we apply to the to the consumer

233
00:08:27,360 --> 00:08:28,879
routers we can really apply to the

234
00:08:28,879 --> 00:08:30,479
enterprise router it's just a question

235
00:08:30,479 --> 00:08:32,799
of having more of that stuff in the

236
00:08:32,799 --> 00:08:35,760
enterprise routers

237
00:08:35,839 --> 00:08:36,880
um

238
00:08:36,880 --> 00:08:38,719
okay so what about the one you know

239
00:08:38,719 --> 00:08:40,080
because that's really the purpose of

240
00:08:40,080 --> 00:08:41,760
this presentation he should show you

241
00:08:41,760 --> 00:08:43,599
examples of one and text

242
00:08:43,599 --> 00:08:45,920
uh the consumer routers they mostly have

243
00:08:45,920 --> 00:08:48,240
no services exposed to the one

244
00:08:48,240 --> 00:08:50,160
uh and we're talking about defaults here

245
00:08:50,160 --> 00:08:52,080
right we're not talking about stuff uh

246
00:08:52,080 --> 00:08:54,160
you know like enabling remote management

247
00:08:54,160 --> 00:08:56,560
which exposes your hd configuration

248
00:08:56,560 --> 00:08:58,240
server to the internet which is

249
00:08:58,240 --> 00:09:00,880
obviously a huge mistake as we all know

250
00:09:00,880 --> 00:09:03,680
uh you know or even port forwarding so

251
00:09:03,680 --> 00:09:05,600
you know someone from the internet can

252
00:09:05,600 --> 00:09:07,680
penetrate and access internal services

253
00:09:07,680 --> 00:09:09,440
we're talking about pure defaults like

254
00:09:09,440 --> 00:09:12,480
the router comes as is from the factory

255
00:09:12,480 --> 00:09:14,399
uh so they don't have a lot of stuff

256
00:09:14,399 --> 00:09:16,959
listening but on the enterprise side is

257
00:09:16,959 --> 00:09:18,720
it is a little bit different

258
00:09:18,720 --> 00:09:20,640
because enterprise

259
00:09:20,640 --> 00:09:21,839
routers

260
00:09:21,839 --> 00:09:24,160
or you know network devices let's call

261
00:09:24,160 --> 00:09:26,399
it not just routers they need to expose

262
00:09:26,399 --> 00:09:27,200
more

263
00:09:27,200 --> 00:09:30,000
uh you know they need to expose vpn uh

264
00:09:30,000 --> 00:09:31,600
they need they might need to perform

265
00:09:31,600 --> 00:09:33,680
some malware filtering you know they

266
00:09:33,680 --> 00:09:36,560
might need to do some email filtering uh

267
00:09:36,560 --> 00:09:38,240
tls stripping

268
00:09:38,240 --> 00:09:40,560
uh proxying this kind of stuff

269
00:09:40,560 --> 00:09:42,480
and as you know this opens up a lot of

270
00:09:42,480 --> 00:09:44,640
attack surface and we as hackers we love

271
00:09:44,640 --> 00:09:46,640
parsers

272
00:09:46,640 --> 00:09:48,880
and the thing is again just to drive on

273
00:09:48,880 --> 00:09:51,440
the point when we talk about routers we

274
00:09:51,440 --> 00:09:53,120
actually mean all kinds of network

275
00:09:53,120 --> 00:09:55,680
devices so most enterprise web

276
00:09:55,680 --> 00:09:58,640
application firewalls uh vpn terminators

277
00:09:58,640 --> 00:10:01,440
ssl accelerators it just really pimped

278
00:10:01,440 --> 00:10:03,120
up routers you know it just routers with

279
00:10:03,120 --> 00:10:05,839
more services

280
00:10:06,480 --> 00:10:08,959
um and just

281
00:10:08,959 --> 00:10:10,720
you know back in the old days the

282
00:10:10,720 --> 00:10:13,360
consumer router one security was really

283
00:10:13,360 --> 00:10:15,800
bad we have here two examples one in

284
00:10:15,800 --> 00:10:19,440
2011 12 by rapid seven vulnerability in

285
00:10:19,440 --> 00:10:21,680
a upnp server that was exposed to the

286
00:10:21,680 --> 00:10:24,160
one why we don't know

287
00:10:24,160 --> 00:10:26,480
millions of routers affected and another

288
00:10:26,480 --> 00:10:28,160
uh which was actually what got me

289
00:10:28,160 --> 00:10:30,720
interested in iot and router security in

290
00:10:30,720 --> 00:10:32,800
the first place which is by checkpoint

291
00:10:32,800 --> 00:10:34,640
it's called a misfortune cookie

292
00:10:34,640 --> 00:10:36,880
vulnerability it's an arbitrary memory

293
00:10:36,880 --> 00:10:39,360
override through an http cookie

294
00:10:39,360 --> 00:10:41,200
of a management web server that's also

295
00:10:41,200 --> 00:10:43,360
exposed to the one there's a very nice

296
00:10:43,360 --> 00:10:45,760
talk online you can look at it look it

297
00:10:45,760 --> 00:10:48,399
up highly recommend it

298
00:10:48,399 --> 00:10:49,760
but these days you know things have

299
00:10:49,760 --> 00:10:52,320
improved markedly when interfaces are

300
00:10:52,320 --> 00:10:53,920
fully firewalled and there are no

301
00:10:53,920 --> 00:10:55,600
surfaces that are exposed

302
00:10:55,600 --> 00:10:57,040
but we will see

303
00:10:57,040 --> 00:11:00,480
you know there's ways to get in

304
00:11:00,480 --> 00:11:02,959
and um okay let's now let's talk about

305
00:11:02,959 --> 00:11:05,279
pontoon as i said the flashback team is

306
00:11:05,279 --> 00:11:07,600
our war name uh that's where you know we

307
00:11:07,600 --> 00:11:10,000
like to participate in ponchon very nice

308
00:11:10,000 --> 00:11:11,200
competition

309
00:11:11,200 --> 00:11:13,120
uh great organization great people

310
00:11:13,120 --> 00:11:14,480
participating

311
00:11:14,480 --> 00:11:17,839
uh we started in tokyo 2019

312
00:11:17,839 --> 00:11:19,920
this was embedded devices then we did

313
00:11:19,920 --> 00:11:22,720
miami which is kada then more embedded

314
00:11:22,720 --> 00:11:25,760
devices and 0.2 on miami 2022 which we

315
00:11:25,760 --> 00:11:28,160
hope to participate if our bugs survive

316
00:11:28,160 --> 00:11:29,760
until then we'll see because it got

317
00:11:29,760 --> 00:11:31,279
postponed

318
00:11:31,279 --> 00:11:34,880
um and uh yeah and it was it's very nice

319
00:11:34,880 --> 00:11:38,800
we won both tokyo 2020 um yeah we like

320
00:11:38,800 --> 00:11:40,240
we really like participating in these

321
00:11:40,240 --> 00:11:42,079
competitions

322
00:11:42,079 --> 00:11:44,880
so far we have delivered 12 exploits

323
00:11:44,880 --> 00:11:46,079
three didn't survive until the

324
00:11:46,079 --> 00:11:47,360
competition because you know the

325
00:11:47,360 --> 00:11:49,279
manufacturers they like to drop the last

326
00:11:49,279 --> 00:11:50,639
minute updates

327
00:11:50,639 --> 00:11:53,519
uh and when exploit failed uh well it

328
00:11:53,519 --> 00:11:55,120
failed for them it worked for us

329
00:11:55,120 --> 00:11:56,399
unfortunately it was a remote

330
00:11:56,399 --> 00:11:58,079
competition so we didn't have full

331
00:11:58,079 --> 00:12:00,160
control when we had full through control

332
00:12:00,160 --> 00:12:02,560
of our exploits they never fail as in if

333
00:12:02,560 --> 00:12:04,399
we're there with our laptops

334
00:12:04,399 --> 00:12:06,240
and we want some nice cash prizes

335
00:12:06,240 --> 00:12:08,399
nothing might blowing but a good

336
00:12:08,399 --> 00:12:11,200
side income

337
00:12:11,200 --> 00:12:13,680
okay rado what about our workflow

338
00:12:13,680 --> 00:12:15,839
yeah okay so let's talk a little bit how

339
00:12:15,839 --> 00:12:18,240
we did we prepare and decide about the

340
00:12:18,240 --> 00:12:20,560
targets for for the competition so

341
00:12:20,560 --> 00:12:22,639
um together with pedro we live in a

342
00:12:22,639 --> 00:12:24,800
completely different part of the world

343
00:12:24,800 --> 00:12:27,839
so we decided to actually make it our

344
00:12:27,839 --> 00:12:29,120
advantage

345
00:12:29,120 --> 00:12:32,079
when we decided to

346
00:12:32,079 --> 00:12:33,600
work together we said we want we need to

347
00:12:33,600 --> 00:12:35,440
work on the same targets at the same

348
00:12:35,440 --> 00:12:37,519
time so we can validate our ideas our

349
00:12:37,519 --> 00:12:39,839
concepts and like cross-check the things

350
00:12:39,839 --> 00:12:41,760
that we're doing

351
00:12:41,760 --> 00:12:43,519
and then we also have we have our

352
00:12:43,519 --> 00:12:45,760
full-time job so we were all only

353
00:12:45,760 --> 00:12:47,920
working uh like in the evening so when

354
00:12:47,920 --> 00:12:50,639
one person was sleeping that was working

355
00:12:50,639 --> 00:12:52,240
then the person was leaving notes the

356
00:12:52,240 --> 00:12:54,000
other one was picking up afterwards we

357
00:12:54,000 --> 00:12:56,560
were kind of working around the clock

358
00:12:56,560 --> 00:12:59,040
but that means we really had to rely a

359
00:12:59,040 --> 00:13:02,160
lot on collaboration tools and

360
00:13:02,160 --> 00:13:04,480
for us the the hydra server was just

361
00:13:04,480 --> 00:13:06,880
fantastic you're just so amazed that you

362
00:13:06,880 --> 00:13:09,519
you can reverse engineer binaries like

363
00:13:09,519 --> 00:13:11,680
work together in a team you just do your

364
00:13:11,680 --> 00:13:14,639
changes uh commit uh those changes to

365
00:13:14,639 --> 00:13:17,040
the server the other person pulls the

366
00:13:17,040 --> 00:13:20,160
the changes it's like uh beautiful

367
00:13:20,160 --> 00:13:21,200
it

368
00:13:21,200 --> 00:13:23,040
works on the conflicts and everything

369
00:13:23,040 --> 00:13:24,639
just amazing

370
00:13:24,639 --> 00:13:26,560
um however that was very good for the

371
00:13:26,560 --> 00:13:29,360
preparation we noticed that very we have

372
00:13:29,360 --> 00:13:31,279
uh very good results when we dedicate

373
00:13:31,279 --> 00:13:34,240
weekends and for the research uh so we

374
00:13:34,240 --> 00:13:35,920
just the full

375
00:13:35,920 --> 00:13:38,399
uh two days saturday sunday connect on

376
00:13:38,399 --> 00:13:40,160
like uh zoom or something and just like

377
00:13:40,160 --> 00:13:44,079
uh uh push hard on those devices but you

378
00:13:44,079 --> 00:13:46,000
know even better if you can be

379
00:13:46,000 --> 00:13:47,519
physically at the same location so he

380
00:13:47,519 --> 00:13:49,680
said okay we are far away from each

381
00:13:49,680 --> 00:13:51,680
other let's pick a nice country to

382
00:13:51,680 --> 00:13:54,000
travel to that was in laos we we rented

383
00:13:54,000 --> 00:13:55,920
dirt bikes we took our targets for pawn

384
00:13:55,920 --> 00:13:56,880
to all

385
00:13:56,880 --> 00:13:58,240
during the day we were exploring the

386
00:13:58,240 --> 00:14:00,000
country in the in the afternoons we were

387
00:14:00,000 --> 00:14:01,519
just uh

388
00:14:01,519 --> 00:14:02,720
working on

389
00:14:02,720 --> 00:14:05,120
on devices and we found i think at least

390
00:14:05,120 --> 00:14:07,199
one or two exploits this way in like i

391
00:14:07,199 --> 00:14:10,560
think what was one week time

392
00:14:11,360 --> 00:14:14,399
and but pontoon is actually the

393
00:14:14,399 --> 00:14:16,000
competition which requires a lot of

394
00:14:16,000 --> 00:14:18,000
strategy if you want to win

395
00:14:18,000 --> 00:14:20,320
so ours as we had already a lot of

396
00:14:20,320 --> 00:14:22,240
experience targeting network devices

397
00:14:22,240 --> 00:14:24,720
that was just uh kind of natural to look

398
00:14:24,720 --> 00:14:26,160
at those

399
00:14:26,160 --> 00:14:28,160
and and then when we said we go for

400
00:14:28,160 --> 00:14:30,480
routers we wanted to focus on the one

401
00:14:30,480 --> 00:14:32,560
interface because

402
00:14:32,560 --> 00:14:35,199
in our opinion there is

403
00:14:35,199 --> 00:14:37,199
kind of a more difficult

404
00:14:37,199 --> 00:14:39,519
area to explore and maybe not too many

405
00:14:39,519 --> 00:14:41,920
people will be looking at them

406
00:14:41,920 --> 00:14:43,920
and they're also like rewarded better

407
00:14:43,920 --> 00:14:45,519
you have more points you have more cash

408
00:14:45,519 --> 00:14:47,040
and everything so it's better for you to

409
00:14:47,040 --> 00:14:47,920
win

410
00:14:47,920 --> 00:14:50,079
um and then if we have time we're going

411
00:14:50,079 --> 00:14:52,240
to look at plan um

412
00:14:52,240 --> 00:14:54,800
at the end of our research time

413
00:14:54,800 --> 00:14:56,880
and on top of that we said we we should

414
00:14:56,880 --> 00:15:00,240
always avoid uh common service like um

415
00:15:00,240 --> 00:15:04,240
http uh servers like upnp because we

416
00:15:04,240 --> 00:15:05,600
knew that there's gonna be a lot of

417
00:15:05,600 --> 00:15:07,519
people looking in those so we want to

418
00:15:07,519 --> 00:15:09,279
avoid collisions so

419
00:15:09,279 --> 00:15:11,920
it's our time is spent better on other

420
00:15:11,920 --> 00:15:14,800
parts of the target

421
00:15:14,800 --> 00:15:17,040
and then go deep so don't try to go for

422
00:15:17,040 --> 00:15:18,720
the very first bug that you find because

423
00:15:18,720 --> 00:15:20,959
it's it's most likely it's going to be

424
00:15:20,959 --> 00:15:22,399
collision or the vendor is going to find

425
00:15:22,399 --> 00:15:24,079
the same

426
00:15:24,079 --> 00:15:25,440
and pawn phone is not only their

427
00:15:25,440 --> 00:15:28,079
competition for researchers also for the

428
00:15:28,079 --> 00:15:29,680
vendors so when they see their name on

429
00:15:29,680 --> 00:15:30,959
the list they kind of feel triggered

430
00:15:30,959 --> 00:15:33,199
they want to say hey we also have a

431
00:15:33,199 --> 00:15:35,120
awesome research team is going to work

432
00:15:35,120 --> 00:15:36,639
on the same targets and they're going to

433
00:15:36,639 --> 00:15:37,920
push

434
00:15:37,920 --> 00:15:39,440
the patches like two days before the

435
00:15:39,440 --> 00:15:41,680
competition giving you no time to react

436
00:15:41,680 --> 00:15:42,639
on that

437
00:15:42,639 --> 00:15:45,279
uh so our like kind of solution to that

438
00:15:45,279 --> 00:15:47,279
was try to have multiple backs for the

439
00:15:47,279 --> 00:15:49,360
same target so you can uh you can

440
00:15:49,360 --> 00:15:52,160
quickly like uh get the other one

441
00:15:52,160 --> 00:15:54,880
and react to the situation that you have

442
00:15:54,880 --> 00:15:57,519
okay so once that that was uh

443
00:15:57,519 --> 00:15:59,600
set up the workflow we can start working

444
00:15:59,600 --> 00:16:01,680
on the on the target so for embedded

445
00:16:01,680 --> 00:16:03,680
devices you need to have humor because

446
00:16:03,680 --> 00:16:05,519
that's where all the binaries are

447
00:16:05,519 --> 00:16:08,240
located uh likely for consumer routers

448
00:16:08,240 --> 00:16:10,079
you can in many cases you can just go to

449
00:16:10,079 --> 00:16:11,920
the vendor's website download the

450
00:16:11,920 --> 00:16:13,120
firmware

451
00:16:13,120 --> 00:16:16,160
is most likely not even like

452
00:16:16,160 --> 00:16:18,240
encrypted so you directly you pass it to

453
00:16:18,240 --> 00:16:20,000
bin woken and there you go

454
00:16:20,000 --> 00:16:22,399
but if this is not the case you can dump

455
00:16:22,399 --> 00:16:24,079
the firmware from the device directly so

456
00:16:24,079 --> 00:16:26,160
like in here's an example so my camera

457
00:16:26,160 --> 00:16:28,880
where we had to desolder the nand

458
00:16:28,880 --> 00:16:31,839
chip and read the content of it or

459
00:16:31,839 --> 00:16:34,160
the other example just directly attach a

460
00:16:34,160 --> 00:16:36,160
microcontroller to the north flash chip

461
00:16:36,160 --> 00:16:38,320
and the read content of it

462
00:16:38,320 --> 00:16:40,160
the other example could be you can just

463
00:16:40,160 --> 00:16:42,240
sniff

464
00:16:42,240 --> 00:16:43,759
the communication on the network while

465
00:16:43,759 --> 00:16:46,160
the device is connecting to the vendor's

466
00:16:46,160 --> 00:16:48,160
server during during the update and you

467
00:16:48,160 --> 00:16:50,320
can maybe find the location of the

468
00:16:50,320 --> 00:16:52,000
firmware on the server and just download

469
00:16:52,000 --> 00:16:54,880
it or reconstruct the firmware uh from

470
00:16:54,880 --> 00:16:57,839
the wire dump

471
00:16:58,399 --> 00:16:59,440
and then

472
00:16:59,440 --> 00:17:01,839
we always try to get as many debug

473
00:17:01,839 --> 00:17:03,839
interfaces as possible on the target

474
00:17:03,839 --> 00:17:05,839
because eventually you want to test our

475
00:17:05,839 --> 00:17:08,480
exploits on the real target

476
00:17:08,480 --> 00:17:11,119
and usually what we'll do is just open

477
00:17:11,119 --> 00:17:13,599
the box and search for urpins because

478
00:17:13,599 --> 00:17:15,599
they might be the the easiest ones to

479
00:17:15,599 --> 00:17:17,679
work with at the very beginning at least

480
00:17:17,679 --> 00:17:20,480
and then you attach your to the uart and

481
00:17:20,480 --> 00:17:22,559
you see what you have so do you have

482
00:17:22,559 --> 00:17:24,480
read write access do you have access to

483
00:17:24,480 --> 00:17:26,720
bootloader do you maybe have access

484
00:17:26,720 --> 00:17:28,960
immediately to the uh to the shell is it

485
00:17:28,960 --> 00:17:30,960
password protected yes no so you kind of

486
00:17:30,960 --> 00:17:33,600
adjust um as you go

487
00:17:33,600 --> 00:17:35,600
um but what happens if you have read

488
00:17:35,600 --> 00:17:38,080
only access to uart then maybe you have

489
00:17:38,080 --> 00:17:40,640
to modify it so like in in this picture

490
00:17:40,640 --> 00:17:42,640
you can see that was one of our targets

491
00:17:42,640 --> 00:17:46,080
we connected uart interface to it we are

492
00:17:46,080 --> 00:17:47,760
able to see everything on the console

493
00:17:47,760 --> 00:17:50,559
but when we try to put any data it was

494
00:17:50,559 --> 00:17:53,039
just nothing was happening and then we

495
00:17:53,039 --> 00:17:54,799
realized that the

496
00:17:54,799 --> 00:17:57,440
rx line on the board is uh like

497
00:17:57,440 --> 00:18:00,000
physically cut from the from the pins

498
00:18:00,000 --> 00:18:02,000
and then we were in in laos traveling

499
00:18:02,000 --> 00:18:03,440
and we didn't have any soldering

500
00:18:03,440 --> 00:18:05,679
equipment with us so we just uh got some

501
00:18:05,679 --> 00:18:07,840
paper clip and and bridged the pad with

502
00:18:07,840 --> 00:18:09,360
the

503
00:18:09,360 --> 00:18:11,039
with the pin and then we had like

504
00:18:11,039 --> 00:18:14,400
perfectly working uh

505
00:18:14,400 --> 00:18:15,919
and then a part of you are you can try

506
00:18:15,919 --> 00:18:18,320
to find the j tags do some dma attacks

507
00:18:18,320 --> 00:18:19,919
glitching so anything that that gives

508
00:18:19,919 --> 00:18:22,160
you a like advantage uh

509
00:18:22,160 --> 00:18:25,360
for the research purposes of the target

510
00:18:25,360 --> 00:18:27,520
if nothing of that works just try to

511
00:18:27,520 --> 00:18:30,640
find zero day on the component which is

512
00:18:30,640 --> 00:18:32,640
not important for you so that's how we

513
00:18:32,640 --> 00:18:34,559
got access on cisco

514
00:18:34,559 --> 00:18:36,559
uh we attached ur there was nothing and

515
00:18:36,559 --> 00:18:38,320
then we found zero day on other

516
00:18:38,320 --> 00:18:40,640
component enabled telnet and we had full

517
00:18:40,640 --> 00:18:42,960
root access on device

518
00:18:42,960 --> 00:18:45,520
or you can always try to reflash the

519
00:18:45,520 --> 00:18:47,760
modded firmware via tftp if you have

520
00:18:47,760 --> 00:18:49,760
access to boot loader or like a physical

521
00:18:49,760 --> 00:18:51,679
cheaper flash

522
00:18:51,679 --> 00:18:53,919
okay so you you got that and then you

523
00:18:53,919 --> 00:18:56,000
start doing reconnaissance and you start

524
00:18:56,000 --> 00:18:57,520
like uh

525
00:18:57,520 --> 00:18:58,960
scanning your

526
00:18:58,960 --> 00:19:00,640
one interface and then you think okay

527
00:19:00,640 --> 00:19:02,320
everything is blocked right so like case

528
00:19:02,320 --> 00:19:04,160
closed nothing to work on so it's

529
00:19:04,160 --> 00:19:06,240
actually for the van interface you need

530
00:19:06,240 --> 00:19:08,160
a slightly different approach so it's

531
00:19:08,160 --> 00:19:10,160
not uncommon to see that every single

532
00:19:10,160 --> 00:19:12,000
like service is closed but there are

533
00:19:12,000 --> 00:19:14,400
still it's still possible to opponent

534
00:19:14,400 --> 00:19:16,240
so at this point i'd like to

535
00:19:16,240 --> 00:19:18,640
introduce our first van explorer to use

536
00:19:18,640 --> 00:19:21,200
the target was tp-link archer c7 on the

537
00:19:21,200 --> 00:19:24,480
meep cp architecture and we found the

538
00:19:24,480 --> 00:19:28,080
vulnerability in the dns packets parsing

539
00:19:28,080 --> 00:19:30,880
so there is a small binary called con

540
00:19:30,880 --> 00:19:33,120
indicator running on the device so what

541
00:19:33,120 --> 00:19:35,280
it does is just controlling the led

542
00:19:35,280 --> 00:19:38,080
light on the box and it's just shines

543
00:19:38,080 --> 00:19:39,280
like red

544
00:19:39,280 --> 00:19:40,640
green when it's connected to the

545
00:19:40,640 --> 00:19:42,320
internet and then red one is

546
00:19:42,320 --> 00:19:44,160
disconnected

547
00:19:44,160 --> 00:19:46,799
and it's doing that by continuously

548
00:19:46,799 --> 00:19:48,799
sending dns requests to the set of

549
00:19:48,799 --> 00:19:51,039
domains like google.com

550
00:19:51,039 --> 00:19:53,600
netflix deep link and so on and when you

551
00:19:53,600 --> 00:19:55,360
got the response it means okay i got the

552
00:19:55,360 --> 00:19:58,880
um i got the link so everything is okay

553
00:19:58,880 --> 00:20:01,600
um internet connection is working

554
00:20:01,600 --> 00:20:03,120
and it binds to

555
00:20:03,120 --> 00:20:05,840
ephemeral port

556
00:20:05,840 --> 00:20:08,640
on udp so that means on every boot of

557
00:20:08,640 --> 00:20:10,720
the device it will randomly pick a

558
00:20:10,720 --> 00:20:15,039
number from 32 000 upwards

559
00:20:15,440 --> 00:20:17,840
okay but to understand the vulnerability

560
00:20:17,840 --> 00:20:20,159
vulnerability to quickly give you a

561
00:20:20,159 --> 00:20:23,200
recap how the dns packet is structured

562
00:20:23,200 --> 00:20:24,559
so you have the

563
00:20:24,559 --> 00:20:27,360
our target it sends dns request and then

564
00:20:27,360 --> 00:20:29,039
you can see in the packet in the green

565
00:20:29,039 --> 00:20:30,480
box

566
00:20:30,480 --> 00:20:32,559
it's the dns packet and it starts with

567
00:20:32,559 --> 00:20:35,120
the transaction id the transaction id is

568
00:20:35,120 --> 00:20:37,280
just a random number which is used to

569
00:20:37,280 --> 00:20:40,559
match requests and responses together so

570
00:20:40,559 --> 00:20:42,720
by the spec if the request the response

571
00:20:42,720 --> 00:20:44,640
comes

572
00:20:44,640 --> 00:20:46,720
it has to match the transaction id of

573
00:20:46,720 --> 00:20:49,120
the of the request if not it's not the

574
00:20:49,120 --> 00:20:52,080
packet needs to be discarded

575
00:20:52,080 --> 00:20:54,640
and then we have information some flags

576
00:20:54,640 --> 00:20:56,240
information number of sections and then

577
00:20:56,240 --> 00:20:58,159
finally comes the request part

578
00:20:58,159 --> 00:21:00,840
and then the request part is of the

579
00:21:00,840 --> 00:21:02,960
length uh

580
00:21:02,960 --> 00:21:06,080
length uh value type so left so the

581
00:21:06,080 --> 00:21:07,600
first byte says

582
00:21:07,600 --> 00:21:09,600
uh what's the

583
00:21:09,600 --> 00:21:11,039
length of the string that follows so in

584
00:21:11,039 --> 00:21:13,760
this case it's seven bytes uh so we know

585
00:21:13,760 --> 00:21:15,919
the next seven bytes are the string so

586
00:21:15,919 --> 00:21:18,159
in in this case tp link then we have

587
00:21:18,159 --> 00:21:20,400
three bytes length again uh

588
00:21:20,400 --> 00:21:23,360
so dot com and then uh we have a

589
00:21:23,360 --> 00:21:24,240
null

590
00:21:24,240 --> 00:21:26,080
uh so which terminates this three the

591
00:21:26,080 --> 00:21:27,679
string so we know the request is for

592
00:21:27,679 --> 00:21:30,559
tipling.com

593
00:21:30,559 --> 00:21:32,880
and then comes their response and their

594
00:21:32,880 --> 00:21:35,200
response starts similarly you have the

595
00:21:35,200 --> 00:21:37,440
transaction id

596
00:21:37,440 --> 00:21:40,240
flags information the number of sections

597
00:21:40,240 --> 00:21:42,559
and here we have the exact copy of our

598
00:21:42,559 --> 00:21:45,520
original query and then finally comes

599
00:21:45,520 --> 00:21:47,280
the the

600
00:21:47,280 --> 00:21:49,600
section of the answer and here you see

601
00:21:49,600 --> 00:21:52,240
it starts with c so that means that the

602
00:21:52,240 --> 00:21:55,039
two most significant bits are set and

603
00:21:55,039 --> 00:21:57,679
that indicates that the special mode the

604
00:21:57,679 --> 00:22:00,880
compression mode is used so to save the

605
00:22:00,880 --> 00:22:03,120
space on the packet the size of the

606
00:22:03,120 --> 00:22:06,320
packet is just using the offset to that

607
00:22:06,320 --> 00:22:08,400
original query that we that we saw so

608
00:22:08,400 --> 00:22:09,679
that the

609
00:22:09,679 --> 00:22:11,840
processing part knows that the the

610
00:22:11,840 --> 00:22:15,120
resolved ip that comes comes afterwards

611
00:22:15,120 --> 00:22:19,678
is related to that tpling.com

612
00:22:20,480 --> 00:22:23,200
okay so as you know the

613
00:22:23,200 --> 00:22:25,120
as you can see the dns packet is quite

614
00:22:25,120 --> 00:22:26,640
structured

615
00:22:26,640 --> 00:22:29,039
protocol so it kind of makes sense to

616
00:22:29,039 --> 00:22:30,400
use

617
00:22:30,400 --> 00:22:33,440
fuzzing on it to find some vulnerability

618
00:22:33,440 --> 00:22:35,600
and then i'd like to introduce our

619
00:22:35,600 --> 00:22:37,600
amazing father our tweeting that we used

620
00:22:37,600 --> 00:22:39,120
to find vuln

621
00:22:39,120 --> 00:22:43,199
and this is a death random

622
00:22:43,679 --> 00:22:45,039
so

623
00:22:45,039 --> 00:22:47,520
why did why actually did we use that so

624
00:22:47,520 --> 00:22:49,600
when we start to work on a target we

625
00:22:49,600 --> 00:22:51,919
like to assess how it behaves under the

626
00:22:51,919 --> 00:22:53,919
stress situation we attach the console

627
00:22:53,919 --> 00:22:56,000
to it see like send some garbage data

628
00:22:56,000 --> 00:22:58,320
and maybe it will spit something to give

629
00:22:58,320 --> 00:23:00,720
you some indication where to look at so

630
00:23:00,720 --> 00:23:02,559
like a very first hint like

631
00:23:02,559 --> 00:23:04,880
where should we focus our like on which

632
00:23:04,880 --> 00:23:06,480
part should we focus

633
00:23:06,480 --> 00:23:08,720
in the first hand and then you know you

634
00:23:08,720 --> 00:23:10,400
send some random data to that and then

635
00:23:10,400 --> 00:23:14,480
you see the crash so that's beautiful

636
00:23:14,480 --> 00:23:15,760
um

637
00:23:15,760 --> 00:23:18,320
so what happens so com the dns replay

638
00:23:18,320 --> 00:23:21,679
comes to a con indicator

639
00:23:21,679 --> 00:23:23,440
and then there is a

640
00:23:23,440 --> 00:23:25,520
function called tp dns receive and

641
00:23:25,520 --> 00:23:27,840
resolve and it reads from the socket up

642
00:23:27,840 --> 00:23:32,320
to 2960 bytes puts that into dns answer

643
00:23:32,320 --> 00:23:33,600
buffer

644
00:23:33,600 --> 00:23:35,520
then comes the process resolved ip

645
00:23:35,520 --> 00:23:37,280
function which takes the pointer to that

646
00:23:37,280 --> 00:23:40,799
buffer and it sets up its own stack

647
00:23:40,799 --> 00:23:42,799
with two important variables resolved

648
00:23:42,799 --> 00:23:46,880
iep 256 bytes and dns query buffer 260

649
00:23:46,880 --> 00:23:48,000
bytes

650
00:23:48,000 --> 00:23:50,559
and that is all what it's doing then

651
00:23:50,559 --> 00:23:53,919
it's calling the dns answer parser with

652
00:23:53,919 --> 00:23:56,320
two arguments again the pointer to dns

653
00:23:56,320 --> 00:23:59,360
answer buffer and pointer to the dns

654
00:23:59,360 --> 00:24:01,279
query buffer which is located in that

655
00:24:01,279 --> 00:24:03,760
process resolve ip

656
00:24:03,760 --> 00:24:05,039
stack

657
00:24:05,039 --> 00:24:07,679
so what is happening in the dns answer

658
00:24:07,679 --> 00:24:09,039
parser

659
00:24:09,039 --> 00:24:11,840
so it is processing the answers that are

660
00:24:11,840 --> 00:24:14,720
incoming so in this case the two most

661
00:24:14,720 --> 00:24:16,799
significant bits are not set so that

662
00:24:16,799 --> 00:24:20,400
means we go to the default situation of

663
00:24:20,400 --> 00:24:22,000
length

664
00:24:22,000 --> 00:24:24,000
value type so we have then length and

665
00:24:24,000 --> 00:24:25,600
string format

666
00:24:25,600 --> 00:24:27,760
and then it initiates the loop and on

667
00:24:27,760 --> 00:24:29,919
every iteration it just copies the

668
00:24:29,919 --> 00:24:34,320
portion of of that answer into the

669
00:24:34,320 --> 00:24:37,679
dns query buffer and until it finds the

670
00:24:37,679 --> 00:24:38,880
null

671
00:24:38,880 --> 00:24:40,400
number

672
00:24:40,400 --> 00:24:42,559
but however there is no no checks if the

673
00:24:42,559 --> 00:24:44,320
buffer is large enough

674
00:24:44,320 --> 00:24:46,400
so we can send the sequence of

675
00:24:46,400 --> 00:24:48,080
uh

676
00:24:48,080 --> 00:24:51,039
length value length a large now that

677
00:24:51,039 --> 00:24:53,520
will overflow the buffer and eventually

678
00:24:53,520 --> 00:24:55,520
will give us control over the

679
00:24:55,520 --> 00:24:57,600
return address

680
00:24:57,600 --> 00:24:59,919
all right pedro gonna give us

681
00:24:59,919 --> 00:25:02,799
information how did we exploit it

682
00:25:02,799 --> 00:25:06,080
yeah let's move on to exploitation um

683
00:25:06,080 --> 00:25:08,240
so first of all let's talk about the

684
00:25:08,240 --> 00:25:10,720
good news uh system is imported into the

685
00:25:10,720 --> 00:25:13,760
binary so we can use that to achieve rc

686
00:25:13,760 --> 00:25:16,159
uh but from then onwards it's only

687
00:25:16,159 --> 00:25:18,320
really bad news

688
00:25:18,320 --> 00:25:21,279
the first one is that when we exit the

689
00:25:21,279 --> 00:25:22,240
function

690
00:25:22,240 --> 00:25:25,039
with our controlled return address the

691
00:25:25,039 --> 00:25:27,279
buffer address is in the wrong register

692
00:25:27,279 --> 00:25:29,200
so okay you can just use some rope for

693
00:25:29,200 --> 00:25:31,360
it right well not really this is a

694
00:25:31,360 --> 00:25:33,919
really small binary 61 kilobytes has

695
00:25:33,919 --> 00:25:35,520
very few gadgets

696
00:25:35,520 --> 00:25:37,840
and it is mips architecture so it means

697
00:25:37,840 --> 00:25:40,799
the instructions have to be bite aligned

698
00:25:40,799 --> 00:25:42,400
and you cannot just jump in the middle

699
00:25:42,400 --> 00:25:45,919
like you do with x86

700
00:25:46,400 --> 00:25:48,880
you got nx and slr on pretty much

701
00:25:48,880 --> 00:25:51,919
everything except in the binary itself

702
00:25:51,919 --> 00:25:55,840
which is only nx does not have a slr

703
00:25:55,840 --> 00:25:58,880
so again not easy to rope to lipsy or

704
00:25:58,880 --> 00:26:00,080
something like that

705
00:26:00,080 --> 00:26:02,559
without you know uh some kind of info

706
00:26:02,559 --> 00:26:04,000
leak

707
00:26:04,000 --> 00:26:06,480
uh and our command can only be six to

708
00:26:06,480 --> 00:26:08,559
three bytes in length but that's kind of

709
00:26:08,559 --> 00:26:10,240
okay we can still do a lot of stuff with

710
00:26:10,240 --> 00:26:12,240
that

711
00:26:12,240 --> 00:26:15,679
okay so uh the the first thing is uh the

712
00:26:15,679 --> 00:26:17,919
process resolves ip function actually

713
00:26:17,919 --> 00:26:20,320
calls mem copy twice if we carefully

714
00:26:20,320 --> 00:26:22,480
craft input

715
00:26:22,480 --> 00:26:25,039
and we can just abuse that and build a

716
00:26:25,039 --> 00:26:27,760
rope chain to uh you know jump the

717
00:26:27,760 --> 00:26:29,360
system

718
00:26:29,360 --> 00:26:31,600
um so

719
00:26:31,600 --> 00:26:34,159
let's try so what we do is when we first

720
00:26:34,159 --> 00:26:35,840
enter the vulnerability and call process

721
00:26:35,840 --> 00:26:37,120
resolved by p

722
00:26:37,120 --> 00:26:40,559
we kind of uh make sure that we go into

723
00:26:40,559 --> 00:26:41,840
the

724
00:26:41,840 --> 00:26:43,679
we it calls mem copy twice so the

725
00:26:43,679 --> 00:26:45,600
package fulfills those conditions and

726
00:26:45,600 --> 00:26:47,600
with that our command is in the resolved

727
00:26:47,600 --> 00:26:49,039
ip buffer

728
00:26:49,039 --> 00:26:52,080
and then our rope chain just comes in

729
00:26:52,080 --> 00:26:54,240
the first one we copy the address of

730
00:26:54,240 --> 00:26:56,480
resolve ip to a temporary register and

731
00:26:56,480 --> 00:27:00,240
we prepare arguments for gadget 2.

732
00:27:00,240 --> 00:27:02,080
then in gadget 2 we just jump into the

733
00:27:02,080 --> 00:27:03,760
middle of another function so we do a

734
00:27:03,760 --> 00:27:07,520
function reuse to copy uh mem copy to

735
00:27:07,520 --> 00:27:10,559
mam copy resolved ip to a known

736
00:27:10,559 --> 00:27:13,440
read and write data address

737
00:27:13,440 --> 00:27:15,520
and then we just jump into system with

738
00:27:15,520 --> 00:27:17,279
command pointing to this

739
00:27:17,279 --> 00:27:19,919
read write data address

740
00:27:19,919 --> 00:27:21,360
and then we opponent

741
00:27:21,360 --> 00:27:24,559
uh so you know this is a bit simplified

742
00:27:24,559 --> 00:27:26,480
it's not a mind-blowing rope chain by

743
00:27:26,480 --> 00:27:28,080
any means but it's just a little bit

744
00:27:28,080 --> 00:27:29,760
harder than normal

745
00:27:29,760 --> 00:27:31,440
and that's it we found the router very

746
00:27:31,440 --> 00:27:32,559
one right

747
00:27:32,559 --> 00:27:33,440
well

748
00:27:33,440 --> 00:27:34,799
there's something missing right we

749
00:27:34,799 --> 00:27:36,640
mentioned the firewall bypass this is

750
00:27:36,640 --> 00:27:39,200
just the normal you know stack overflow

751
00:27:39,200 --> 00:27:40,159
so

752
00:27:40,159 --> 00:27:43,200
where's the firewall bypass here

753
00:27:43,200 --> 00:27:45,360
and for that first let me introduce you

754
00:27:45,360 --> 00:27:48,399
to contract what is contract

755
00:27:48,399 --> 00:27:50,720
is the connection tracking table that

756
00:27:50,720 --> 00:27:52,399
exists in the linux

757
00:27:52,399 --> 00:27:54,799
operating system and i

758
00:27:54,799 --> 00:27:56,559
think similar ones might

759
00:27:56,559 --> 00:27:58,399
need to exist in the other operating

760
00:27:58,399 --> 00:28:00,159
systems

761
00:28:00,159 --> 00:28:02,000
and think of it this way so you have

762
00:28:02,000 --> 00:28:03,919
your laptop computer or whatever right

763
00:28:03,919 --> 00:28:05,919
and you don't have any uh services

764
00:28:05,919 --> 00:28:07,200
running on it you know you're not

765
00:28:07,200 --> 00:28:09,440
running http servers so everything's

766
00:28:09,440 --> 00:28:10,880
fully locked down

767
00:28:10,880 --> 00:28:13,679
uh there's no port listening that can be

768
00:28:13,679 --> 00:28:14,960
accessed to the outside you've got a

769
00:28:14,960 --> 00:28:16,799
firewall et cetera

770
00:28:16,799 --> 00:28:18,399
but then you want to ask the sage into a

771
00:28:18,399 --> 00:28:21,520
host so when you exercise into a host

772
00:28:21,520 --> 00:28:24,159
the host has to send packets back to you

773
00:28:24,159 --> 00:28:26,320
right and these packages they need to go

774
00:28:26,320 --> 00:28:28,320
through your firewall and this is where

775
00:28:28,320 --> 00:28:30,559
contract comes in when you make a

776
00:28:30,559 --> 00:28:32,480
connection to the outside to a certain

777
00:28:32,480 --> 00:28:33,520
ip

778
00:28:33,520 --> 00:28:36,000
then in the connection tracking table

779
00:28:36,000 --> 00:28:38,000
an entry a new entry is added that says

780
00:28:38,000 --> 00:28:40,720
this ip can contact you back on this

781
00:28:40,720 --> 00:28:42,720
port which is the client port you use to

782
00:28:42,720 --> 00:28:44,799
open the connection this effectively

783
00:28:44,799 --> 00:28:46,799
punches a hole in your firewall that

784
00:28:46,799 --> 00:28:50,000
only that ip can use to access back

785
00:28:50,000 --> 00:28:52,320
right so uh

786
00:28:52,320 --> 00:28:54,559
if you have a tcp connection

787
00:28:54,559 --> 00:28:55,600
you know

788
00:28:55,600 --> 00:28:58,799
there's a tcp handshake that establishes

789
00:28:58,799 --> 00:29:01,679
a sort of tcp tunnel right

790
00:29:01,679 --> 00:29:06,480
so you can't really spoof uh tcp um

791
00:29:06,480 --> 00:29:08,880
ip addresses right and you know it's

792
00:29:08,880 --> 00:29:10,840
it's just not doable

793
00:29:10,840 --> 00:29:14,480
uh but with udp it's a different story

794
00:29:14,480 --> 00:29:17,200
udp is a connectionless protocol

795
00:29:17,200 --> 00:29:19,600
so with udp you can easily spoof a

796
00:29:19,600 --> 00:29:22,320
source id

797
00:29:23,600 --> 00:29:24,559
so

798
00:29:24,559 --> 00:29:27,600
how do we do this then so how do we

799
00:29:27,600 --> 00:29:29,840
exploit this remotely over the one over

800
00:29:29,840 --> 00:29:30,960
the internet

801
00:29:30,960 --> 00:29:33,840
first according to the rfs rfc the dns

802
00:29:33,840 --> 00:29:36,080
requested response that radix showed

803
00:29:36,080 --> 00:29:38,159
needs to have a matching transaction id

804
00:29:38,159 --> 00:29:40,240
so if you recall he pointed that out in

805
00:29:40,240 --> 00:29:41,840
the slides

806
00:29:41,840 --> 00:29:44,159
but this binary coin indicator they

807
00:29:44,159 --> 00:29:47,039
failed to verify this transaction id

808
00:29:47,039 --> 00:29:48,159
so we

809
00:29:48,159 --> 00:29:50,640
what we need to do is brute force the

810
00:29:50,640 --> 00:29:52,320
udp port

811
00:29:52,320 --> 00:29:55,360
and then spoof the udp source ip

812
00:29:55,360 --> 00:29:57,279
and then that's it we can

813
00:29:57,279 --> 00:29:59,440
uh you know punch a hole through the

814
00:29:59,440 --> 00:30:01,600
firewall because we you know connection

815
00:30:01,600 --> 00:30:03,600
tracking in contract is expecting that

816
00:30:03,600 --> 00:30:07,520
ip at that port so we spoof the ip

817
00:30:07,520 --> 00:30:11,200
we find the tc the the source port

818
00:30:11,200 --> 00:30:12,480
and then that's it

819
00:30:12,480 --> 00:30:14,720
we go through a lockdown firewall

820
00:30:14,720 --> 00:30:16,880
and we open it

821
00:30:16,880 --> 00:30:19,200
okay

822
00:30:19,360 --> 00:30:20,480
and

823
00:30:20,480 --> 00:30:23,120
that's pretty much it for first exploit

824
00:30:23,120 --> 00:30:24,480
so you know

825
00:30:24,480 --> 00:30:26,720
maybe some of you got lost not that is

826
00:30:26,720 --> 00:30:28,559
extremely complex but you know in this

827
00:30:28,559 --> 00:30:30,240
presentation something very technical

828
00:30:30,240 --> 00:30:31,679
always gets lost

829
00:30:31,679 --> 00:30:34,320
now let's talk about another interesting

830
00:30:34,320 --> 00:30:36,640
but very different one exploit that we

831
00:30:36,640 --> 00:30:39,120
also used this is an insecure update

832
00:30:39,120 --> 00:30:41,840
that drops a permanent back door our

833
00:30:41,840 --> 00:30:45,520
first target was the netgear r 6700

834
00:30:45,520 --> 00:30:48,000
which has an arm cpu and we used it

835
00:30:48,000 --> 00:30:50,720
first in ponton tokyo 2019

836
00:30:50,720 --> 00:30:52,399
but we used variations of this

837
00:30:52,399 --> 00:30:54,559
vulnerability in pretty much every

838
00:30:54,559 --> 00:30:57,120
competition

839
00:30:58,000 --> 00:31:00,799
so imagine this we just arrived in tokyo

840
00:31:00,799 --> 00:31:03,039
first time ever fascinated by tokyo

841
00:31:03,039 --> 00:31:06,000
lights this is november 2019

842
00:31:06,000 --> 00:31:08,640
uh we're still hugely jet-lagged because

843
00:31:08,640 --> 00:31:10,399
we had to do you know at least 10 hours

844
00:31:10,399 --> 00:31:11,519
to get there

845
00:31:11,519 --> 00:31:13,440
and the day before the competition we

846
00:31:13,440 --> 00:31:15,279
meet with zia you know to arrange for

847
00:31:15,279 --> 00:31:16,640
the competition

848
00:31:16,640 --> 00:31:19,279
we come on with one one exploit so the

849
00:31:19,279 --> 00:31:21,440
the one we just described to you the dns

850
00:31:21,440 --> 00:31:23,600
and we got two lan exploits

851
00:31:23,600 --> 00:31:25,360
and then we have a meeting with zdi and

852
00:31:25,360 --> 00:31:26,960
they they just start to tease us they

853
00:31:26,960 --> 00:31:27,919
say

854
00:31:27,919 --> 00:31:29,519
you guys are like why don't you have a

855
00:31:29,519 --> 00:31:31,760
one exploit for the other router oh

856
00:31:31,760 --> 00:31:33,360
you're lying you're lying you need to do

857
00:31:33,360 --> 00:31:35,120
this and because no one had registered

858
00:31:35,120 --> 00:31:37,840
for that specific target

859
00:31:37,840 --> 00:31:39,679
so they pushed us and pushed us and we

860
00:31:39,679 --> 00:31:41,760
just said whatever and just we just went

861
00:31:41,760 --> 00:31:43,440
home and slept

862
00:31:43,440 --> 00:31:45,039
well not really

863
00:31:45,039 --> 00:31:48,080
so in a home we're uh you know a bit

864
00:31:48,080 --> 00:31:50,559
pissed off uh and

865
00:31:50,559 --> 00:31:53,679
we just decided to kind of uh look at it

866
00:31:53,679 --> 00:31:55,360
again because obviously you already had

867
00:31:55,360 --> 00:31:56,720
looked at it you can see here on the

868
00:31:56,720 --> 00:31:58,399
left hand side radik looking pretty

869
00:31:58,399 --> 00:32:01,039
desperate with lots of red bulls around

870
00:32:01,039 --> 00:32:02,000
him

871
00:32:02,000 --> 00:32:04,000
but in the end we pulled through

872
00:32:04,000 --> 00:32:06,240
we didn't sleep at all that night which

873
00:32:06,240 --> 00:32:07,679
was fine because where all the other

874
00:32:07,679 --> 00:32:10,000
exploits were tested to death

875
00:32:10,000 --> 00:32:12,640
but we were able to produce an exploit

876
00:32:12,640 --> 00:32:14,480
in about nine hours

877
00:32:14,480 --> 00:32:15,840
so

878
00:32:15,840 --> 00:32:18,080
how did we do it

879
00:32:18,080 --> 00:32:21,360
as i said before the competition we also

880
00:32:21,360 --> 00:32:23,200
hooked up the router's one interface and

881
00:32:23,200 --> 00:32:26,159
started unmapping it and nothing came up

882
00:32:26,159 --> 00:32:27,519
as before

883
00:32:27,519 --> 00:32:29,600
but then you know being honest here it

884
00:32:29,600 --> 00:32:32,240
was by pure luck uh we decided to reboot

885
00:32:32,240 --> 00:32:35,039
the router while looking at wireshark

886
00:32:35,039 --> 00:32:37,600
and then we noticed you connect to a url

887
00:32:37,600 --> 00:32:39,440
via https

888
00:32:39,440 --> 00:32:41,519
and it's actually a firmware in this

889
00:32:41,519 --> 00:32:44,240
case was a binary update mechanism okay

890
00:32:44,240 --> 00:32:45,600
this is interesting

891
00:32:45,600 --> 00:32:48,320
but it's connecting by https right

892
00:32:48,320 --> 00:32:49,760
what can we do

893
00:32:49,760 --> 00:32:52,720
luckily for us they screwed up big time

894
00:32:52,720 --> 00:32:55,679
what do they do they use w great with no

895
00:32:55,679 --> 00:32:57,200
check certificate

896
00:32:57,200 --> 00:32:58,960
so if you don't know what this means it

897
00:32:58,960 --> 00:33:01,200
means we can just present any https

898
00:33:01,200 --> 00:33:02,720
certificates you know the burp

899
00:33:02,720 --> 00:33:04,640
certificate anyone you can generate on

900
00:33:04,640 --> 00:33:07,600
your computer and it will be accepted

901
00:33:07,600 --> 00:33:08,640
uh

902
00:33:08,640 --> 00:33:11,200
and that's it so we like to think of

903
00:33:11,200 --> 00:33:14,080
this as a kind of forgotten bug class

904
00:33:14,080 --> 00:33:15,679
you know uh basically firmware and

905
00:33:15,679 --> 00:33:17,840
batteries are downloaded in security

906
00:33:17,840 --> 00:33:19,600
and securely in this case they're done

907
00:33:19,600 --> 00:33:21,679
over https but the certificate is not

908
00:33:21,679 --> 00:33:22,640
checked

909
00:33:22,640 --> 00:33:24,720
and we exploited this bug multiple times

910
00:33:24,720 --> 00:33:26,399
in other devices

911
00:33:26,399 --> 00:33:28,320
uh you know

912
00:33:28,320 --> 00:33:30,640
sometimes there's some crappy custom

913
00:33:30,640 --> 00:33:34,480
crypto or uh hard-coded yes key used for

914
00:33:34,480 --> 00:33:36,000
obfuscation

915
00:33:36,000 --> 00:33:38,399
uh sometimes they don't even bother hps

916
00:33:38,399 --> 00:33:41,279
they just use hpe or ftp

917
00:33:41,279 --> 00:33:43,120
and sometimes we can do crazy stuff like

918
00:33:43,120 --> 00:33:44,640
command injection in the file name you

919
00:33:44,640 --> 00:33:47,679
don't even need to deliver an exploit

920
00:33:47,679 --> 00:33:50,159
uh and like i said we use this multiple

921
00:33:50,159 --> 00:33:53,120
times uh you know until the last

922
00:33:53,120 --> 00:33:56,159
competition a few months ago where

923
00:33:56,159 --> 00:33:58,000
finally some smart people from other

924
00:33:58,000 --> 00:33:59,919
teams reverse engineered our exploits

925
00:33:59,919 --> 00:34:01,440
because we didn't publish anything until

926
00:34:01,440 --> 00:34:03,919
now and i found out how to pull this in

927
00:34:03,919 --> 00:34:05,279
this last competition there were a lot

928
00:34:05,279 --> 00:34:07,440
of exploits like this

929
00:34:07,440 --> 00:34:08,480
so

930
00:34:08,480 --> 00:34:10,239
what's our plan of attack

931
00:34:10,239 --> 00:34:12,079
we control dns

932
00:34:12,079 --> 00:34:13,918
we point the update server hostname to

933
00:34:13,918 --> 00:34:14,639
us

934
00:34:14,639 --> 00:34:16,639
we serve this malicious firmware binary

935
00:34:16,639 --> 00:34:19,520
updates with effect certificates and in

936
00:34:19,520 --> 00:34:22,000
the specific format that it expects and

937
00:34:22,000 --> 00:34:23,440
we just spawn the router with full

938
00:34:23,440 --> 00:34:24,960
persistence

939
00:34:24,960 --> 00:34:27,280
uh and in this specific case a firmware

940
00:34:27,280 --> 00:34:29,359
reset won't save you and the reason is

941
00:34:29,359 --> 00:34:31,918
simple so routers they typically have

942
00:34:31,918 --> 00:34:34,960
you know volatile memory so there's uh

943
00:34:34,960 --> 00:34:36,960
you know the the file system is unpacked

944
00:34:36,960 --> 00:34:39,520
at every boots and it resides in ram

945
00:34:39,520 --> 00:34:42,000
uh but they always have a small area

946
00:34:42,000 --> 00:34:44,480
which is a flash read only and in this

947
00:34:44,480 --> 00:34:46,800
case this specific binary was downloaded

948
00:34:46,800 --> 00:34:49,359
there and it just you could firmware

949
00:34:49,359 --> 00:34:51,280
reset order all you wanted the binary

950
00:34:51,280 --> 00:34:53,440
would stay there forever until we pawned

951
00:34:53,440 --> 00:34:55,599
it again so it was quite nice in that

952
00:34:55,599 --> 00:34:57,359
aspect

953
00:34:57,359 --> 00:34:58,640
um

954
00:34:58,640 --> 00:35:00,320
okay but i know what you're thinking

955
00:35:00,320 --> 00:35:02,800
right this is super lame uh we require

956
00:35:02,800 --> 00:35:04,720
control over dns this could never happen

957
00:35:04,720 --> 00:35:06,160
in real life

958
00:35:06,160 --> 00:35:08,320
well not really i mean there are many

959
00:35:08,320 --> 00:35:10,240
attack scenarios you can think starting

960
00:35:10,240 --> 00:35:13,440
from the most extreme bgp hijack so if

961
00:35:13,440 --> 00:35:15,599
you know about bgp here's an example of

962
00:35:15,599 --> 00:35:16,640
the tweet

963
00:35:16,640 --> 00:35:19,119
so brazil and telco that hijacked google

964
00:35:19,119 --> 00:35:21,520
dns so this is a good example but maybe

965
00:35:21,520 --> 00:35:23,920
the most extreme someone hijacks you

966
00:35:23,920 --> 00:35:27,280
know cloudflare dns google dns etc

967
00:35:27,280 --> 00:35:28,880
then we go down a bit

968
00:35:28,880 --> 00:35:31,200
in this probability list

969
00:35:31,200 --> 00:35:33,040
and we have the dns server provider

970
00:35:33,040 --> 00:35:35,839
hijack especially for smaller isps there

971
00:35:35,839 --> 00:35:36,640
are

972
00:35:36,640 --> 00:35:39,119
reports of certain isps in certain

973
00:35:39,119 --> 00:35:41,920
countries basically you know injecting

974
00:35:41,920 --> 00:35:42,720
uh

975
00:35:42,720 --> 00:35:45,520
you know uh dns entries that they

976
00:35:45,520 --> 00:35:47,920
control to provide ads or something like

977
00:35:47,920 --> 00:35:49,680
that

978
00:35:49,680 --> 00:35:52,400
then another which is even more probable

979
00:35:52,400 --> 00:35:54,880
is isp cooperation with law enforcement

980
00:35:54,880 --> 00:35:57,520
you know there have also been reports

981
00:35:57,520 --> 00:35:59,280
some of you might know better than me of

982
00:35:59,280 --> 00:36:01,839
isps and other entities cooperating with

983
00:36:01,839 --> 00:36:04,800
law enforcement and again hijacking dns

984
00:36:04,800 --> 00:36:05,920
for certain

985
00:36:05,920 --> 00:36:08,240
people or or sites

986
00:36:08,240 --> 00:36:10,079
but you know the most problem of all of

987
00:36:10,079 --> 00:36:12,960
these is just basic dns cache poisoning

988
00:36:12,960 --> 00:36:14,960
you know which is an attack that's uh

989
00:36:14,960 --> 00:36:16,000
you know

990
00:36:16,000 --> 00:36:17,839
getting more and more happening more and

991
00:36:17,839 --> 00:36:20,320
more often and becoming more relevant

992
00:36:20,320 --> 00:36:22,640
and this is you know it's

993
00:36:22,640 --> 00:36:24,839
the easiest to pull off of all of

994
00:36:24,839 --> 00:36:27,760
these and you know like this you can

995
00:36:27,760 --> 00:36:30,160
enjoy your shells

996
00:36:30,160 --> 00:36:32,480
but okay again i know what you're

997
00:36:32,480 --> 00:36:34,960
thinking the first exploit was nice the

998
00:36:34,960 --> 00:36:37,440
second one is nice too but they all have

999
00:36:37,440 --> 00:36:40,000
some kind of uh you know thing that you

1000
00:36:40,000 --> 00:36:42,079
need to do you need to brute force the

1001
00:36:42,079 --> 00:36:44,480
udp port in the other case or you need

1002
00:36:44,480 --> 00:36:46,720
to control dns in this case

1003
00:36:46,720 --> 00:36:49,040
so how about we show you an exploit that

1004
00:36:49,040 --> 00:36:51,839
works remotely over the internet

1005
00:36:51,839 --> 00:36:53,680
with default settings with no

1006
00:36:53,680 --> 00:36:55,440
constraints whatsoever

1007
00:36:55,440 --> 00:36:58,240
what do you think radic

1008
00:36:58,240 --> 00:36:59,440
yeah

1009
00:36:59,440 --> 00:37:01,280
let's go for it so

1010
00:37:01,280 --> 00:37:05,280
that's uh one exploit number three cisco

1011
00:37:05,280 --> 00:37:08,000
rv 340 evpn router running arm cpu

1012
00:37:08,000 --> 00:37:09,359
architecture

1013
00:37:09,359 --> 00:37:11,520
it's the latest exploit that we

1014
00:37:11,520 --> 00:37:13,599
presented it was actually patched last

1015
00:37:13,599 --> 00:37:15,920
week and i think on tuesday cisco

1016
00:37:15,920 --> 00:37:18,480
released advisories for for this bike

1017
00:37:18,480 --> 00:37:22,079
and it's rated with cvss core 10. so

1018
00:37:22,079 --> 00:37:23,760
here we

1019
00:37:23,760 --> 00:37:26,400
exploit the core functionality of the

1020
00:37:26,400 --> 00:37:29,359
router the vpn endpoint so i'd like to

1021
00:37:29,359 --> 00:37:31,839
ask anybody who's using any connect when

1022
00:37:31,839 --> 00:37:33,920
connecting working from home because i

1023
00:37:33,920 --> 00:37:35,760
was using my previous work and i know

1024
00:37:35,760 --> 00:37:37,359
it's pretty

1025
00:37:37,359 --> 00:37:39,119
uh

1026
00:37:39,119 --> 00:37:41,920
pretty popular so for anybody who is not

1027
00:37:41,920 --> 00:37:44,320
using or using so this is the

1028
00:37:44,320 --> 00:37:46,400
screenshot of the anyconnect clients

1029
00:37:46,400 --> 00:37:48,160
when you

1030
00:37:48,160 --> 00:37:51,599
connect to your organization you your

1031
00:37:51,599 --> 00:37:53,680
client is sending the any connect packet

1032
00:37:53,680 --> 00:37:55,839
is doing the uh initialization the

1033
00:37:55,839 --> 00:37:57,920
authentication and everything is fine

1034
00:37:57,920 --> 00:37:59,280
you just get granted access to your

1035
00:37:59,280 --> 00:38:00,640
internal network

1036
00:38:00,640 --> 00:38:04,160
uh so we found vulnerability in the any

1037
00:38:04,160 --> 00:38:06,079
connect packet

1038
00:38:06,079 --> 00:38:07,920
so it's a very very simple one it's

1039
00:38:07,920 --> 00:38:09,920
actually quite surprising

1040
00:38:09,920 --> 00:38:12,560
so when any connect part comes it is in

1041
00:38:12,560 --> 00:38:15,280
a form of http header and a body and

1042
00:38:15,280 --> 00:38:18,000
there is a function that reads the http

1043
00:38:18,000 --> 00:38:20,000
header into the packet in buffer which

1044
00:38:20,000 --> 00:38:23,599
is 4 000 hex size and then the http body

1045
00:38:23,599 --> 00:38:25,839
is read into the body buffer also 4 000

1046
00:38:25,839 --> 00:38:27,839
hex size but if you notice there is some

1047
00:38:27,839 --> 00:38:30,880
space between http header and the body

1048
00:38:30,880 --> 00:38:34,400
so there's a string and cut function

1049
00:38:34,400 --> 00:38:36,880
which tries to move those two data

1050
00:38:36,880 --> 00:38:39,440
together into one continuous space

1051
00:38:39,440 --> 00:38:41,040
uh with the string and colors as

1052
00:38:41,040 --> 00:38:43,200
mentioned so technically you can see

1053
00:38:43,200 --> 00:38:45,280
it's already overflow here so you have 4

1054
00:38:45,280 --> 00:38:46,079
000

1055
00:38:46,079 --> 00:38:47,359
hex byte

1056
00:38:47,359 --> 00:38:49,280
buffer on top and if you have your body

1057
00:38:49,280 --> 00:38:51,359
is 4 000 and you have data there it's

1058
00:38:51,359 --> 00:38:53,520
you you already overflow the

1059
00:38:53,520 --> 00:38:54,720
packet in

1060
00:38:54,720 --> 00:38:56,160
buffer but

1061
00:38:56,160 --> 00:38:58,960
this is not really like didn't give us

1062
00:38:58,960 --> 00:39:01,680
anything it was very useful

1063
00:39:01,680 --> 00:39:03,520
so let's move on so this packet like

1064
00:39:03,520 --> 00:39:04,880
this

1065
00:39:04,880 --> 00:39:08,240
was picked up by the ssl server

1066
00:39:08,240 --> 00:39:10,079
receive data notify message insert

1067
00:39:10,079 --> 00:39:12,800
function which takes two arguments the

1068
00:39:12,800 --> 00:39:15,040
pointer to the packet in buffer so where

1069
00:39:15,040 --> 00:39:17,200
our data is already prepared

1070
00:39:17,200 --> 00:39:19,599
and control data and the number of bytes

1071
00:39:19,599 --> 00:39:23,119
read and it set up his own stack the

1072
00:39:23,119 --> 00:39:25,200
stack variable buffer with 4 thousand

1073
00:39:25,200 --> 00:39:26,560
hex and

1074
00:39:26,560 --> 00:39:27,760
you can already probably see where it's

1075
00:39:27,760 --> 00:39:29,680
going there is a mem copy

1076
00:39:29,680 --> 00:39:32,320
you have much more data up to 8000 that

1077
00:39:32,320 --> 00:39:35,359
you try to fit into 4 000 buffer

1078
00:39:35,359 --> 00:39:37,850
you just overflow it and control

1079
00:39:37,850 --> 00:39:39,599
[Music]

1080
00:39:39,599 --> 00:39:42,160
return address so obviously what happens

1081
00:39:42,160 --> 00:39:43,520
you have beautiful

1082
00:39:43,520 --> 00:39:45,839
segmentation fault

1083
00:39:45,839 --> 00:39:49,920
and you move on to the exploitation part

1084
00:39:49,920 --> 00:39:51,440
so

1085
00:39:51,440 --> 00:39:53,920
we have mem copy function but we cannot

1086
00:39:53,920 --> 00:39:56,079
really use null bytes because the data

1087
00:39:56,079 --> 00:39:58,880
that we control is processed by

1088
00:39:58,880 --> 00:40:01,839
a string end card and the data and the

1089
00:40:01,839 --> 00:40:04,240
text segments were mapped into memory

1090
00:40:04,240 --> 00:40:06,560
where we needed the null byte

1091
00:40:06,560 --> 00:40:10,240
so rob might be quite challenging

1092
00:40:10,240 --> 00:40:12,160
then on top of that all the shirt

1093
00:40:12,160 --> 00:40:14,240
libraries are randomized

1094
00:40:14,240 --> 00:40:15,040
and

1095
00:40:15,040 --> 00:40:17,520
when we try to search for any like a

1096
00:40:17,520 --> 00:40:18,800
code which is already there in the

1097
00:40:18,800 --> 00:40:20,720
binary that we could immediately jump to

1098
00:40:20,720 --> 00:40:22,400
to get like some instant rc we didn't

1099
00:40:22,400 --> 00:40:25,200
find anything

1100
00:40:25,200 --> 00:40:28,480
but you know it's a 2022 everybody takes

1101
00:40:28,480 --> 00:40:31,280
security seriously right so

1102
00:40:31,280 --> 00:40:35,280
why don't we just have executable stack

1103
00:40:35,760 --> 00:40:37,920
so thank you very much cisco when you

1104
00:40:37,920 --> 00:40:40,720
see this is just basically a textbook so

1105
00:40:40,720 --> 00:40:42,480
called exploitation you plant your shell

1106
00:40:42,480 --> 00:40:45,760
code return address you jump and you

1107
00:40:45,760 --> 00:40:46,720
know

1108
00:40:46,720 --> 00:40:48,960
nothing more than that

1109
00:40:48,960 --> 00:40:51,680
so that's the entire exploit it's quite

1110
00:40:51,680 --> 00:40:53,200
short and quite simple

1111
00:40:53,200 --> 00:40:55,760
so we really wanted to make a live demo

1112
00:40:55,760 --> 00:40:56,560
but

1113
00:40:56,560 --> 00:40:58,960
because of the circumstances that you're

1114
00:40:58,960 --> 00:41:01,520
at we we couldn't but

1115
00:41:01,520 --> 00:41:03,839
good for you guys we have our own

1116
00:41:03,839 --> 00:41:05,280
youtube channel we like to send

1117
00:41:05,280 --> 00:41:07,119
technical videos

1118
00:41:07,119 --> 00:41:08,319
as well so we

1119
00:41:08,319 --> 00:41:10,480
gonna play a video that we recorded some

1120
00:41:10,480 --> 00:41:12,960
time ago

1121
00:41:16,319 --> 00:41:17,520
hi everyone

1122
00:41:17,520 --> 00:41:19,839
this is pedro from the flashback team

1123
00:41:19,839 --> 00:41:22,400
and today i'm coming to you from a

1124
00:41:22,400 --> 00:41:25,760
beautiful country of thailand

1125
00:41:25,760 --> 00:41:27,440
and why you ask

1126
00:41:27,440 --> 00:41:29,520
is it to make you jealous

1127
00:41:29,520 --> 00:41:30,640
a little bit

1128
00:41:30,640 --> 00:41:32,400
that's not the main reason

1129
00:41:32,400 --> 00:41:34,560
the main reason is today we're going to

1130
00:41:34,560 --> 00:41:36,960
hack product who is in munich germany

1131
00:41:36,960 --> 00:41:39,599
over 9000 kilometers away with an

1132
00:41:39,599 --> 00:41:42,480
exploit over the internet for the cisco

1133
00:41:42,480 --> 00:41:45,599
rv 340 router

1134
00:41:45,599 --> 00:41:46,480
okay

1135
00:41:46,480 --> 00:41:48,000
if you want more details check my

1136
00:41:48,000 --> 00:41:50,720
advisory but for now step right into my

1137
00:41:50,720 --> 00:41:53,030
office and let's get started

1138
00:41:53,030 --> 00:41:57,680
[Music]

1139
00:41:57,680 --> 00:41:59,520
hey guys and i'm studying munich

1140
00:41:59,520 --> 00:42:01,440
enjoying my bavarian breakfast

1141
00:42:01,440 --> 00:42:05,280
this is our target cisco rv 340 business

1142
00:42:05,280 --> 00:42:07,599
cluster router we use this exploit at

1143
00:42:07,599 --> 00:42:10,800
home to on 2021 in austin this is not

1144
00:42:10,800 --> 00:42:13,440
some lame web interface xposed exploit

1145
00:42:13,440 --> 00:42:16,720
is a real no zero click

1146
00:42:16,720 --> 00:42:19,359
or internet routable exploit

1147
00:42:19,359 --> 00:42:21,520
showdown says there are 75 000 victims

1148
00:42:21,520 --> 00:42:24,000
in the world right now i'm one of them

1149
00:42:24,000 --> 00:42:26,400
so let's pawn it

1150
00:42:26,400 --> 00:42:29,400
props

1151
00:42:35,440 --> 00:42:37,200
okay petrol i think you need my public

1152
00:42:37,200 --> 00:42:39,759
ideas

1153
00:42:40,720 --> 00:42:42,560
so here it is that's my public ip

1154
00:42:42,560 --> 00:42:43,440
address

1155
00:42:43,440 --> 00:42:45,520
but you know what i'm gonna quickly log

1156
00:42:45,520 --> 00:42:47,599
in to my

1157
00:42:47,599 --> 00:42:50,079
router

1158
00:42:50,319 --> 00:42:52,480
and i will show you my host name so

1159
00:42:52,480 --> 00:42:54,079
that's my host name so let's see if you

1160
00:42:54,079 --> 00:42:55,520
can get it

1161
00:42:55,520 --> 00:42:58,000
let's see rightly

1162
00:42:58,000 --> 00:43:00,560
okay so now we're showing my screen and

1163
00:43:00,560 --> 00:43:02,000
here

1164
00:43:02,000 --> 00:43:03,920
on the right hand on the left hand side

1165
00:43:03,920 --> 00:43:06,560
we have my ip address which is a tie ip

1166
00:43:06,560 --> 00:43:09,200
address and on the left hand side we

1167
00:43:09,200 --> 00:43:11,599
have my aws machine in the singapore

1168
00:43:11,599 --> 00:43:12,880
region

1169
00:43:12,880 --> 00:43:15,200
and the reason is we need to use an aws

1170
00:43:15,200 --> 00:43:16,880
machine to receive our reverse shell

1171
00:43:16,880 --> 00:43:18,640
because my thai ip address is not

1172
00:43:18,640 --> 00:43:21,520
internet routable meaning that if we're

1173
00:43:21,520 --> 00:43:23,920
able to exploit radic then i cannot

1174
00:43:23,920 --> 00:43:26,000
receive it as a reverse shell on my thai

1175
00:43:26,000 --> 00:43:28,000
computer it needs to be on an aws

1176
00:43:28,000 --> 00:43:29,760
machine in singapore

1177
00:43:29,760 --> 00:43:31,599
so let's start our

1178
00:43:31,599 --> 00:43:33,040
reverse shell

1179
00:43:33,040 --> 00:43:35,440
here in the singaporean machine

1180
00:43:35,440 --> 00:43:37,839
and let's go to the time machine

1181
00:43:37,839 --> 00:43:39,359
and let's connect

1182
00:43:39,359 --> 00:43:42,560
to rodx ip

1183
00:43:42,560 --> 00:43:43,839
i need two

1184
00:43:43,839 --> 00:43:46,160
dots

1185
00:43:47,440 --> 00:43:49,920
two three five okay so this is your ip

1186
00:43:49,920 --> 00:43:52,240
address right radik

1187
00:43:52,240 --> 00:43:53,760
yeah i believe so

1188
00:43:53,760 --> 00:43:56,000
are you ready to get owned

1189
00:43:56,000 --> 00:43:59,359
i think you can always try

1190
00:44:01,200 --> 00:44:03,839
oh what's that roddick

1191
00:44:03,839 --> 00:44:05,760
what is this thing you see here let's

1192
00:44:05,760 --> 00:44:08,760
see

1193
00:44:09,599 --> 00:44:11,520
what's this roddick

1194
00:44:11,520 --> 00:44:12,240
i

1195
00:44:12,240 --> 00:44:13,920
guess you know this hostname have you

1196
00:44:13,920 --> 00:44:16,079
seen it before

1197
00:44:16,079 --> 00:44:19,359
okay not better i challenge you um

1198
00:44:19,359 --> 00:44:21,520
if you're really having my router i

1199
00:44:21,520 --> 00:44:23,040
challenge you to

1200
00:44:23,040 --> 00:44:26,319
link led on my router

1201
00:44:26,319 --> 00:44:30,440
okay so let's do it

1202
00:44:38,240 --> 00:44:41,200
oh what's that roddick

1203
00:44:41,200 --> 00:44:43,520
looks like your router has been owned i

1204
00:44:43,520 --> 00:44:45,440
do you know what i can reboot it for you

1205
00:44:45,440 --> 00:44:47,440
are you do you want that

1206
00:44:47,440 --> 00:44:49,280
yeah please remember the hell out of my

1207
00:44:49,280 --> 00:44:52,079
network and cisco

1208
00:44:52,079 --> 00:44:56,079
please patch this asap

1209
00:44:57,359 --> 00:45:00,759
yeah so

1210
00:45:08,400 --> 00:45:12,240
thank you so so cisco patched it uh they

1211
00:45:12,240 --> 00:45:13,760
they yeah the stack is no longer

1212
00:45:13,760 --> 00:45:16,319
executable they added um

1213
00:45:16,319 --> 00:45:18,160
stack cookies on top of that they

1214
00:45:18,160 --> 00:45:19,920
changed all the

1215
00:45:19,920 --> 00:45:21,760
mem copies to save mem copies so they

1216
00:45:21,760 --> 00:45:23,040
did some work

1217
00:45:23,040 --> 00:45:25,440
um but still like the problem with those

1218
00:45:25,440 --> 00:45:28,319
devices that um the updates they come

1219
00:45:28,319 --> 00:45:29,920
they're not updated like immediately so

1220
00:45:29,920 --> 00:45:32,160
there's gonna be a lot of devices in the

1221
00:45:32,160 --> 00:45:33,359
in the world that is going to never

1222
00:45:33,359 --> 00:45:35,680
receive the update because the

1223
00:45:35,680 --> 00:45:38,480
people are not so so fast with those

1224
00:45:38,480 --> 00:45:40,000
uh so yeah i think we're going to give

1225
00:45:40,000 --> 00:45:41,520
some time

1226
00:45:41,520 --> 00:45:43,200
for people to patch and then we release

1227
00:45:43,200 --> 00:45:43,920
the

1228
00:45:43,920 --> 00:45:48,160
exploit at some point um yeah okay pedro

1229
00:45:48,160 --> 00:45:50,960
uh gonna give some conclusions

1230
00:45:50,960 --> 00:45:52,960
yeah okay

1231
00:45:52,960 --> 00:45:56,720
so let's talk about uh our conclusions

1232
00:45:56,720 --> 00:45:59,280
and uh

1233
00:45:59,280 --> 00:46:01,440
oh i think i lost remote control of the

1234
00:46:01,440 --> 00:46:03,920
slides are they changing i can do it for

1235
00:46:03,920 --> 00:46:04,880
you

1236
00:46:04,880 --> 00:46:07,760
but i've lost as well

1237
00:46:07,760 --> 00:46:09,040
okay

1238
00:46:09,040 --> 00:46:10,000
okay

1239
00:46:10,000 --> 00:46:11,280
let's see

1240
00:46:11,280 --> 00:46:13,760
can i control okay now i can control

1241
00:46:13,760 --> 00:46:15,520
okay now let's talk we have our

1242
00:46:15,520 --> 00:46:18,079
proprietary flashback over the internet

1243
00:46:18,079 --> 00:46:22,000
exploitability score and let's uh score

1244
00:46:22,000 --> 00:46:25,119
our exploits so tp-link dns what do you

1245
00:46:25,119 --> 00:46:28,480
think uh i'd say you know

1246
00:46:28,480 --> 00:46:31,520
uh it is remotely exploitable obviously

1247
00:46:31,520 --> 00:46:34,160
but it requires you to brute force the

1248
00:46:34,160 --> 00:46:37,839
udp source ports uh which is the hardest

1249
00:46:37,839 --> 00:46:39,680
uh i mean it's not hard you can do it in

1250
00:46:39,680 --> 00:46:41,280
a few seconds but you still need to do

1251
00:46:41,280 --> 00:46:44,160
it and you need to know which ip was

1252
00:46:44,160 --> 00:46:47,760
contacted but they're only like 20 or so

1253
00:46:47,760 --> 00:46:49,119
uh so

1254
00:46:49,119 --> 00:46:52,079
i'd say you gave it six out of ten right

1255
00:46:52,079 --> 00:46:54,160
and we got our insecure update this one

1256
00:46:54,160 --> 00:46:55,599
is a bit more tricky you need to have

1257
00:46:55,599 --> 00:46:59,040
control of dns or dns cache poisoning so

1258
00:46:59,040 --> 00:47:01,440
we give it a 4 out of 10.

1259
00:47:01,440 --> 00:47:04,640
and finally our ssl vpn which is a very

1260
00:47:04,640 --> 00:47:07,119
simple with very nice exploits and you

1261
00:47:07,119 --> 00:47:09,920
know no conditions so definitely a 10

1262
00:47:09,920 --> 00:47:12,319
out of 10 here

1263
00:47:12,319 --> 00:47:13,359
okay

1264
00:47:13,359 --> 00:47:14,140
and um

1265
00:47:14,140 --> 00:47:15,680
[Music]

1266
00:47:15,680 --> 00:47:16,960
look

1267
00:47:16,960 --> 00:47:18,720
maybe we just got lucky with the cisco

1268
00:47:18,720 --> 00:47:20,800
enterprise router right how can

1269
00:47:20,800 --> 00:47:22,319
enterprise gear

1270
00:47:22,319 --> 00:47:25,359
be so crappy and you know that one was

1271
00:47:25,359 --> 00:47:27,119
it was an enterprise router but it was

1272
00:47:27,119 --> 00:47:30,000
an smb a cheap one right so the high-end

1273
00:47:30,000 --> 00:47:33,440
stuff it's not that vulnerable right

1274
00:47:33,440 --> 00:47:36,880
no i mean uh plenty of examples here i

1275
00:47:36,880 --> 00:47:38,640
just picked these ones they're not the

1276
00:47:38,640 --> 00:47:40,240
most recent ones but they're the ones i

1277
00:47:40,240 --> 00:47:41,760
like

1278
00:47:41,760 --> 00:47:44,559
was for example uh by orange side

1279
00:47:44,559 --> 00:47:46,559
origins and meshang you know they're

1280
00:47:46,559 --> 00:47:48,480
well known probably most of you know

1281
00:47:48,480 --> 00:47:49,440
already

1282
00:47:49,440 --> 00:47:52,800
we got one in 2019 in the pan ssl

1283
00:47:52,800 --> 00:47:55,440
gateway which is quite an expensive

1284
00:47:55,440 --> 00:47:58,319
ssl appliance enterprise

1285
00:47:58,319 --> 00:48:00,240
and it's a format stream vulnerability i

1286
00:48:00,240 --> 00:48:00,960
mean

1287
00:48:00,960 --> 00:48:03,359
you know 2019 with format string

1288
00:48:03,359 --> 00:48:05,599
vulnerabilities in an enterprise very

1289
00:48:05,599 --> 00:48:08,000
expensive gear and here on the right

1290
00:48:08,000 --> 00:48:09,760
hand side you have the post request that

1291
00:48:09,760 --> 00:48:12,319
shows how to exploit it it is a joke in

1292
00:48:12,319 --> 00:48:14,240
fact it's quite similar to our cisco one

1293
00:48:14,240 --> 00:48:16,000
but it's a total joke

1294
00:48:16,000 --> 00:48:18,000
and then two other examples here just

1295
00:48:18,000 --> 00:48:20,559
examples i picked these are from 2021

1296
00:48:20,559 --> 00:48:23,599
which is f5 big-ip the one in the middle

1297
00:48:23,599 --> 00:48:26,160
i think also has a stack executable so

1298
00:48:26,160 --> 00:48:29,119
it's also a joke and the one on the left

1299
00:48:29,119 --> 00:48:31,680
is the command injection so you know

1300
00:48:31,680 --> 00:48:32,640
really

1301
00:48:32,640 --> 00:48:34,960
this enterprise class devices have

1302
00:48:34,960 --> 00:48:36,640
terrible security and that's one of the

1303
00:48:36,640 --> 00:48:38,800
things that we want to to share with you

1304
00:48:38,800 --> 00:48:40,160
you know

1305
00:48:40,160 --> 00:48:41,599
in our experience these enterprise

1306
00:48:41,599 --> 00:48:42,720
devices they might be much more

1307
00:48:42,720 --> 00:48:45,119
expensive but they are not

1308
00:48:45,119 --> 00:48:46,640
better

1309
00:48:46,640 --> 00:48:48,800
more secure than the consumer ones you

1310
00:48:48,800 --> 00:48:50,160
know they're just less people looking at

1311
00:48:50,160 --> 00:48:52,319
them right you know it's more expensive

1312
00:48:52,319 --> 00:48:54,640
hackers like us cannot access it which

1313
00:48:54,640 --> 00:48:56,720
also makes me think about those carriers

1314
00:48:56,720 --> 00:48:58,559
that uh you know radix showed at the

1315
00:48:58,559 --> 00:49:00,000
beginning of the presentation that go up

1316
00:49:00,000 --> 00:49:02,400
to 2 million you know no hackers touch

1317
00:49:02,400 --> 00:49:03,839
these you know

1318
00:49:03,839 --> 00:49:05,520
they might be even crappier than

1319
00:49:05,520 --> 00:49:08,640
consumer routers who knows

1320
00:49:08,640 --> 00:49:10,000
um

1321
00:49:10,000 --> 00:49:12,800
okay so but why do these exist right in

1322
00:49:12,800 --> 00:49:15,119
enterprise class devices well it's you

1323
00:49:15,119 --> 00:49:17,280
know the same story all over most

1324
00:49:17,280 --> 00:49:19,040
network device vendors they don't spend

1325
00:49:19,040 --> 00:49:21,520
enough money on security so hackers you

1326
00:49:21,520 --> 00:49:24,000
know like uh us and you we're very

1327
00:49:24,000 --> 00:49:26,720
expensive right we also all got nice fat

1328
00:49:26,720 --> 00:49:28,400
salaries as you know

1329
00:49:28,400 --> 00:49:31,440
uh and you know internal staff likely

1330
00:49:31,440 --> 00:49:32,880
doesn't have the full set of skills

1331
00:49:32,880 --> 00:49:34,960
required because people who typically

1332
00:49:34,960 --> 00:49:36,400
you know their exceptions typically

1333
00:49:36,400 --> 00:49:37,839
people who are

1334
00:49:37,839 --> 00:49:40,079
uh like to be on the offensive side they

1335
00:49:40,079 --> 00:49:42,000
don't like to you know to to be in

1336
00:49:42,000 --> 00:49:44,640
companies doing a lot of defensive work

1337
00:49:44,640 --> 00:49:45,599
um

1338
00:49:45,599 --> 00:49:47,760
and again vendors might have a lot of

1339
00:49:47,760 --> 00:49:50,240
devices for more versions and use a lot

1340
00:49:50,240 --> 00:49:52,000
of third-party components and codes

1341
00:49:52,000 --> 00:49:53,599
sometimes it's very hard to keep track

1342
00:49:53,599 --> 00:49:55,359
of it all you know imagine how much how

1343
00:49:55,359 --> 00:49:58,559
many devices cisco has to manage another

1344
00:49:58,559 --> 00:50:00,400
thing which is important i'm not really

1345
00:50:00,400 --> 00:50:02,240
sure it applies to the cisco one but i

1346
00:50:02,240 --> 00:50:04,640
wouldn't be surprised if it does is that

1347
00:50:04,640 --> 00:50:06,480
some devices are manufactured by third

1348
00:50:06,480 --> 00:50:07,520
parties

1349
00:50:07,520 --> 00:50:10,240
and these then they make like a platform

1350
00:50:10,240 --> 00:50:13,040
that is white label to a vendor this

1351
00:50:13,040 --> 00:50:15,040
happens in consumer routers again would

1352
00:50:15,040 --> 00:50:16,240
be surprised

1353
00:50:16,240 --> 00:50:18,400
if they happen in enterprise ones

1354
00:50:18,400 --> 00:50:20,559
uh and sometimes these third parties can

1355
00:50:20,559 --> 00:50:22,960
go bust and uh you know they have no

1356
00:50:22,960 --> 00:50:25,599
source code or the engineers that

1357
00:50:25,599 --> 00:50:27,040
you know from the main company that

1358
00:50:27,040 --> 00:50:29,680
hired the white label company they don't

1359
00:50:29,680 --> 00:50:31,839
know the code so it's very hard to fix a

1360
00:50:31,839 --> 00:50:32,960
bug there

1361
00:50:32,960 --> 00:50:35,119
and a lot you know sometimes these white

1362
00:50:35,119 --> 00:50:37,280
label devices they are shared across

1363
00:50:37,280 --> 00:50:39,599
many vendors so if there's a bug in the

1364
00:50:39,599 --> 00:50:42,640
base sdk or the base device that is then

1365
00:50:42,640 --> 00:50:45,040
white labeled by three or four vendors

1366
00:50:45,040 --> 00:50:49,040
you know all these devices are affected

1367
00:50:49,040 --> 00:50:50,559
um

1368
00:50:50,559 --> 00:50:52,800
the thing is on the one side uh what's

1369
00:50:52,800 --> 00:50:55,760
the future so on the consumer enterprise

1370
00:50:55,760 --> 00:50:59,200
routers one is being hardened somewhat

1371
00:50:59,200 --> 00:51:01,440
but they still make basic mistakes so

1372
00:51:01,440 --> 00:51:04,800
max max ployd he used a very nice ipv6

1373
00:51:04,800 --> 00:51:07,680
trick in pawn to on 2019

1374
00:51:07,680 --> 00:51:10,640
where the ipv4 file uh

1375
00:51:10,640 --> 00:51:12,800
you know interface was completely

1376
00:51:12,800 --> 00:51:15,599
firewalled but ipv6 was not so he was

1377
00:51:15,599 --> 00:51:17,440
able to use that to access an internal

1378
00:51:17,440 --> 00:51:19,920
service and as we know the line internal

1379
00:51:19,920 --> 00:51:21,599
services are you know they're not very

1380
00:51:21,599 --> 00:51:24,559
good in terms of security so that's it

1381
00:51:24,559 --> 00:51:25,599
um

1382
00:51:25,599 --> 00:51:26,880
but you know things are definitely

1383
00:51:26,880 --> 00:51:28,240
improving and

1384
00:51:28,240 --> 00:51:30,079
one thing is we like to think that we

1385
00:51:30,079 --> 00:51:32,559
contribute to that you know uh or we

1386
00:51:32,559 --> 00:51:33,680
hope so

1387
00:51:33,680 --> 00:51:36,480
uh by finding these walls you know uh

1388
00:51:36,480 --> 00:51:39,040
and but what can we do as hackers right

1389
00:51:39,040 --> 00:51:40,960
uh we need to go deeper

1390
00:51:40,960 --> 00:51:42,480
uh we need to start looking at the

1391
00:51:42,480 --> 00:51:45,839
kernel parsers for the ip tcp etc all

1392
00:51:45,839 --> 00:51:47,280
these protocols

1393
00:51:47,280 --> 00:51:49,599
uh wireless lan bluetooth you know

1394
00:51:49,599 --> 00:51:51,440
there's been some also really nice

1395
00:51:51,440 --> 00:51:53,680
attacks in the past few years on these

1396
00:51:53,680 --> 00:51:55,040
surfaces

1397
00:51:55,040 --> 00:51:56,880
uh another thing that's quite common in

1398
00:51:56,880 --> 00:51:58,800
these network devices are custom vendor

1399
00:51:58,800 --> 00:51:59,920
models

1400
00:51:59,920 --> 00:52:01,040
um

1401
00:52:01,040 --> 00:52:03,680
and sometimes you know there is the ones

1402
00:52:03,680 --> 00:52:05,839
that implement firewall uh they have

1403
00:52:05,839 --> 00:52:08,240
firewall kernel modules they implement

1404
00:52:08,240 --> 00:52:10,960
nut filter hooks net filter is the linux

1405
00:52:10,960 --> 00:52:12,160
firewall

1406
00:52:12,160 --> 00:52:14,079
which processes packets you know does

1407
00:52:14,079 --> 00:52:15,839
the filtering so a lot of interesting

1408
00:52:15,839 --> 00:52:18,160
stuff can happen there

1409
00:52:18,160 --> 00:52:19,920
but you know i think

1410
00:52:19,920 --> 00:52:21,520
one of the things

1411
00:52:21,520 --> 00:52:25,359
most important uh that we think

1412
00:52:25,359 --> 00:52:27,280
it's right now in the future are the

1413
00:52:27,280 --> 00:52:30,880
tunneling techniques so ssrf csrf

1414
00:52:30,880 --> 00:52:33,119
you know the dns uh

1415
00:52:33,119 --> 00:52:34,960
cache poisonings and even cross-site

1416
00:52:34,960 --> 00:52:37,280
scripting so again we got here another

1417
00:52:37,280 --> 00:52:39,599
very short video that we produced that

1418
00:52:39,599 --> 00:52:42,079
shows a cross-site scripting to root

1419
00:52:42,079 --> 00:52:45,280
attack you know

1420
00:52:45,280 --> 00:52:47,280
there's there are some mitigations in

1421
00:52:47,280 --> 00:52:49,680
the works for this there's w3c private

1422
00:52:49,680 --> 00:52:51,599
network access we don't know how it's

1423
00:52:51,599 --> 00:52:52,800
going to look

1424
00:52:52,800 --> 00:52:56,559
uh but you know we do expect

1425
00:52:56,559 --> 00:52:58,559
things in the one generally will get

1426
00:52:58,559 --> 00:53:00,559
harder they are getting harder we notice

1427
00:53:00,559 --> 00:53:02,480
that every competition and they will

1428
00:53:02,480 --> 00:53:05,119
continue to get harder so we just got to

1429
00:53:05,119 --> 00:53:07,520
try harder

1430
00:53:07,520 --> 00:53:08,880
um

1431
00:53:08,880 --> 00:53:10,880
and that's it i mean

1432
00:53:10,880 --> 00:53:14,079
uh we hope you had fun you know uh this

1433
00:53:14,079 --> 00:53:16,000
was more like a fun presentation just to

1434
00:53:16,000 --> 00:53:18,400
show what we did then also to explain

1435
00:53:18,400 --> 00:53:21,680
our methodology how we achieve things

1436
00:53:21,680 --> 00:53:22,480
uh

1437
00:53:22,480 --> 00:53:24,720
and uh you know

1438
00:53:24,720 --> 00:53:26,880
that's pretty much it radik

1439
00:53:26,880 --> 00:53:30,559
yes thank you very much for tuning in

1440
00:53:33,820 --> 00:53:36,989
[Applause]

1441
00:53:41,359 --> 00:53:43,839
any questions

1442
00:53:47,680 --> 00:53:51,040
um just a clever clarification for the

1443
00:53:51,040 --> 00:53:53,839
second phone number vulnerability in the

1444
00:53:53,839 --> 00:53:55,119
netgear

1445
00:53:55,119 --> 00:53:57,200
the update process happens only when you

1446
00:53:57,200 --> 00:53:58,319
turn it

1447
00:53:58,319 --> 00:53:59,760
up like

1448
00:53:59,760 --> 00:54:02,400
you reboot it or it happens

1449
00:54:02,400 --> 00:54:04,240
every now and then

1450
00:54:04,240 --> 00:54:06,000
so you mean if the communication towards

1451
00:54:06,000 --> 00:54:08,160
the server that happens every time the

1452
00:54:08,160 --> 00:54:10,559
router boots because it checks for uh if

1453
00:54:10,559 --> 00:54:12,319
there's any any updates ready for all

1454
00:54:12,319 --> 00:54:14,400
right so dns positioning is really an

1455
00:54:14,400 --> 00:54:17,680
option yes yes

1456
00:54:18,880 --> 00:54:19,920
i would

1457
00:54:19,920 --> 00:54:22,079
i would like to know

1458
00:54:22,079 --> 00:54:24,960
these three models were the

1459
00:54:24,960 --> 00:54:27,200
were these like three models and a large

1460
00:54:27,200 --> 00:54:29,680
haystack of routers that you tried to

1461
00:54:29,680 --> 00:54:31,280
hack and

1462
00:54:31,280 --> 00:54:33,839
like most are secure but just these

1463
00:54:33,839 --> 00:54:35,839
three you manage to hack or is it like

1464
00:54:35,839 --> 00:54:38,079
every device you look at you somehow get

1465
00:54:38,079 --> 00:54:40,319
into it so so it depends on the device

1466
00:54:40,319 --> 00:54:42,960
so i think the number of devices that we

1467
00:54:42,960 --> 00:54:45,119
together with pedro points i don't know

1468
00:54:45,119 --> 00:54:47,280
i think pedro has like over

1469
00:54:47,280 --> 00:54:48,319
50

1470
00:54:48,319 --> 00:54:50,880
rc's on network devices and like

1471
00:54:50,880 --> 00:54:52,559
he's one of the top contributors to

1472
00:54:52,559 --> 00:54:54,559
metasploit projects for that

1473
00:54:54,559 --> 00:54:57,520
um so you you always maybe find

1474
00:54:57,520 --> 00:54:58,559
something maybe not everything's

1475
00:54:58,559 --> 00:55:00,720
exploitable over the over the one so

1476
00:55:00,720 --> 00:55:02,160
definitely there are the

1477
00:55:02,160 --> 00:55:03,920
the routers which

1478
00:55:03,920 --> 00:55:06,240
uh you cannot we didn't like manage to

1479
00:55:06,240 --> 00:55:08,160
exploit 4.1 for instance because maybe

1480
00:55:08,160 --> 00:55:09,520
the attack service was not there or we

1481
00:55:09,520 --> 00:55:11,119
didn't have enough time or you have to

1482
00:55:11,119 --> 00:55:14,000
like find vulnerabilities like a

1483
00:55:14,000 --> 00:55:16,640
kernel modules or or anything so

1484
00:55:16,640 --> 00:55:17,920
something like that so depends really

1485
00:55:17,920 --> 00:55:20,319
what is your what is your goal and what

1486
00:55:20,319 --> 00:55:22,319
you want to achieve thank you very much

1487
00:55:22,319 --> 00:55:24,480
it also depends on the time you know uh

1488
00:55:24,480 --> 00:55:26,640
because uh you have to understand that

1489
00:55:26,640 --> 00:55:28,160
with point one we're under a lot of

1490
00:55:28,160 --> 00:55:29,920
pressure a lot of time pressure we want

1491
00:55:29,920 --> 00:55:32,319
to hit the maximum number of targets

1492
00:55:32,319 --> 00:55:34,720
so while as we said in the strategy we

1493
00:55:34,720 --> 00:55:37,680
also look for in places that we hope

1494
00:55:37,680 --> 00:55:39,280
most people don't look

1495
00:55:39,280 --> 00:55:41,440
uh we also try to get the easiest

1496
00:55:41,440 --> 00:55:43,200
vulnerabilities in those places because

1497
00:55:43,200 --> 00:55:45,200
you know if you start looking at like we

1498
00:55:45,200 --> 00:55:46,960
said in the go deeper parts at the

1499
00:55:46,960 --> 00:55:49,359
kernel parsers kind of models this kind

1500
00:55:49,359 --> 00:55:51,040
of stuff it's just going to consume a

1501
00:55:51,040 --> 00:55:52,799
lot of time

1502
00:55:52,799 --> 00:55:54,799
so i do expect

1503
00:55:54,799 --> 00:55:57,760
most routers to be vulnerable um you

1504
00:55:57,760 --> 00:55:59,920
know or network devices to be vulnerable

1505
00:55:59,920 --> 00:56:03,280
just some will be more than others

1506
00:56:03,280 --> 00:56:05,920
yeah especially can i add to that so

1507
00:56:05,920 --> 00:56:07,839
on the lan interface you will find a lot

1508
00:56:07,839 --> 00:56:10,240
of vulnerabilities if you like

1509
00:56:10,240 --> 00:56:12,319
authenticated it's not authenticated but

1510
00:56:12,319 --> 00:56:14,799
on that one it's much more harder to get

1511
00:56:14,799 --> 00:56:17,839
reliable exploit

1512
00:56:20,640 --> 00:56:23,279
anyone else

1513
00:56:23,599 --> 00:56:25,520
okay then let's thank the speakers and

1514
00:56:25,520 --> 00:56:27,119
we reconvene at four o'clock thank you

1515
00:56:27,119 --> 00:56:30,280
very much

1516
00:56:33,359 --> 00:56:35,440
you

