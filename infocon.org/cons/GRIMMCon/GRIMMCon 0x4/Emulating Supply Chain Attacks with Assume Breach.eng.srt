1
00:00:00,640 --> 00:00:02,879
uh so i would be honored to introduce

2
00:00:02,879 --> 00:00:03,919
kevin ott

3
00:00:03,919 --> 00:00:05,440
if i'm pronouncing your last name

4
00:00:05,440 --> 00:00:07,120
correctly yeah yeah

5
00:00:07,120 --> 00:00:09,679
okay uh kevin ott works as a penetration

6
00:00:09,679 --> 00:00:11,200
tester and a red teamer at

7
00:00:11,200 --> 00:00:14,320
exploit labs in germany um currently

8
00:00:14,320 --> 00:00:17,279
he's focused on developing the red

9
00:00:17,279 --> 00:00:19,520
team's capabilities with automation

10
00:00:19,520 --> 00:00:21,760
and countermeasures and other custom

11
00:00:21,760 --> 00:00:24,400
engagements

12
00:00:24,800 --> 00:00:26,640
before joining the offensive security

13
00:00:26,640 --> 00:00:28,400
community kevin had worked in a

14
00:00:28,400 --> 00:00:30,800
technical analyst position for network

15
00:00:30,800 --> 00:00:33,439
engineering

16
00:00:33,440 --> 00:00:37,280
for a global financial institution and

17
00:00:37,280 --> 00:00:39,520
when there is not a global pandemic

18
00:00:39,520 --> 00:00:40,719
kevin enjoys

19
00:00:40,719 --> 00:00:43,280
all sorts of outdoor sports including

20
00:00:43,280 --> 00:00:44,000
mountain biking

21
00:00:44,000 --> 00:00:45,680
and rock climbing which i am also an

22
00:00:45,680 --> 00:00:47,760
avid rock climber so

23
00:00:47,760 --> 00:00:51,360
it's nice to see a fellow climber in the

24
00:00:51,360 --> 00:00:54,079
security community and with that i think

25
00:00:54,079 --> 00:00:56,160
i'm gonna hand it off to you kevin

26
00:00:56,160 --> 00:00:58,800
okay so i just made you presenter kevin

27
00:00:58,800 --> 00:01:00,000
and uh once she

28
00:01:00,000 --> 00:01:01,600
slides up and you feel comfortable we'll

29
00:01:01,600 --> 00:01:04,879
drop off and i'll let you do your thing

30
00:01:04,879 --> 00:01:08,400
okay that looks like my screen is

31
00:01:08,400 --> 00:01:10,880
sharing yeah looks like we've got your

32
00:01:10,880 --> 00:01:12,240
uh speaker view right now

33
00:01:12,240 --> 00:01:13,360
i don't know if you want to do a

34
00:01:13,360 --> 00:01:15,040
presenter view for your slides or not if

35
00:01:15,040 --> 00:01:16,000
you're ready yeah

36
00:01:16,000 --> 00:01:19,280
ready quickly bring this up so

37
00:01:19,280 --> 00:01:21,680
it should be looking good now excellent

38
00:01:21,680 --> 00:01:23,360
i will drop out a video here and if you

39
00:01:23,360 --> 00:01:24,799
need us just yell all right

40
00:01:24,799 --> 00:01:26,640
thank you thank you so much for the

41
00:01:26,640 --> 00:01:28,479
introduction

42
00:01:28,479 --> 00:01:30,400
i'm looking forward so this is actually

43
00:01:30,400 --> 00:01:32,320
my first talk at uh

44
00:01:32,320 --> 00:01:34,720
like a bigger international conference

45
00:01:34,720 --> 00:01:35,759
so uh

46
00:01:35,759 --> 00:01:37,840
please be nice to me especially when it

47
00:01:37,840 --> 00:01:39,520
comes to questions

48
00:01:39,520 --> 00:01:43,040
um i want to start off with the

49
00:01:43,040 --> 00:01:44,479
i mean there was a quick introduction

50
00:01:44,479 --> 00:01:46,560
just want to complete it um

51
00:01:46,560 --> 00:01:49,360
yeah as i said i'm a penetration chester

52
00:01:49,360 --> 00:01:50,479
exploit labs in

53
00:01:50,479 --> 00:01:52,880
germany focusing mostly on red teaming

54
00:01:52,880 --> 00:01:53,759
and breach

55
00:01:53,759 --> 00:01:56,799
and uh classical penetration testing

56
00:01:56,799 --> 00:02:00,799
with um my kind of specialties this

57
00:02:00,799 --> 00:02:02,799
ttp development active directory

58
00:02:02,799 --> 00:02:06,079
penetration tests and also network text

59
00:02:06,079 --> 00:02:09,360
and um so i want to go into why i

60
00:02:09,360 --> 00:02:12,480
came up with this talk and my motivation

61
00:02:12,480 --> 00:02:13,440
behind it

62
00:02:13,440 --> 00:02:15,920
because we've over the last year last

63
00:02:15,920 --> 00:02:17,360
year's

64
00:02:17,360 --> 00:02:20,480
um we've seen um an increase in

65
00:02:20,480 --> 00:02:24,319
supply chain attacks so as red teamers

66
00:02:24,319 --> 00:02:27,200
we we need to adapt to this kind of new

67
00:02:27,200 --> 00:02:28,239
threat

68
00:02:28,239 --> 00:02:30,239
to to help the blue team on the other

69
00:02:30,239 --> 00:02:32,879
side to understand this kind of threat

70
00:02:32,879 --> 00:02:33,680
because

71
00:02:33,680 --> 00:02:35,599
in let's say traditional penetration

72
00:02:35,599 --> 00:02:36,879
testing we

73
00:02:36,879 --> 00:02:39,760
just go ahead and plug our laptop into

74
00:02:39,760 --> 00:02:41,680
the network and just go ahead scan

75
00:02:41,680 --> 00:02:44,720
and detect or if we are on the other

76
00:02:44,720 --> 00:02:46,560
hand have classic red teaming we do all

77
00:02:46,560 --> 00:02:47,840
this kind of phishing

78
00:02:47,840 --> 00:02:51,760
or physical attacks and

79
00:02:51,760 --> 00:02:55,040
use that to achieve initial compromise

80
00:02:55,040 --> 00:02:58,080
but with supply chain attacks we are in

81
00:02:58,080 --> 00:02:59,760
a bit of a struggle as red teamers

82
00:02:59,760 --> 00:03:00,400
because

83
00:03:00,400 --> 00:03:03,040
and this is more or less the main topic

84
00:03:03,040 --> 00:03:04,000
of my talk

85
00:03:04,000 --> 00:03:06,640
we cannot just go ahead and compromise

86
00:03:06,640 --> 00:03:08,000
the third party to

87
00:03:08,000 --> 00:03:11,040
to simulate or emulate the third supply

88
00:03:11,040 --> 00:03:12,959
chain attack

89
00:03:12,959 --> 00:03:16,080
so um with this talk i want to

90
00:03:16,080 --> 00:03:17,040
demonstrate

91
00:03:17,040 --> 00:03:20,159
methods on how to build a simulation

92
00:03:20,159 --> 00:03:21,840
for for this kind of supply chain

93
00:03:21,840 --> 00:03:23,280
attacks

94
00:03:23,280 --> 00:03:25,120
and i think the the most important part

95
00:03:25,120 --> 00:03:26,560
is to understand

96
00:03:26,560 --> 00:03:29,040
why we as red teamers need to simulate

97
00:03:29,040 --> 00:03:31,760
this attacks and that's why i want to

98
00:03:31,760 --> 00:03:34,080
go into a few of the recent supply chain

99
00:03:34,080 --> 00:03:36,799
attacks that we've seen in the wild

100
00:03:36,799 --> 00:03:40,400
the first being back in 2017

101
00:03:40,400 --> 00:03:44,319
medoc which is a ukrainian accounting

102
00:03:44,319 --> 00:03:45,280
software

103
00:03:45,280 --> 00:03:47,040
and it actually had to be used by any

104
00:03:47,040 --> 00:03:48,560
company

105
00:03:48,560 --> 00:03:52,000
that was doing business in uh in ukraine

106
00:03:52,000 --> 00:03:53,680
and when it was compromised they had

107
00:03:53,680 --> 00:03:56,400
their infrastructure compromised

108
00:03:56,400 --> 00:03:59,360
and their official software was used to

109
00:03:59,360 --> 00:04:00,560
distribute

110
00:04:00,560 --> 00:04:03,760
the not apache malware and i think it

111
00:04:03,760 --> 00:04:04,799
made the news

112
00:04:04,799 --> 00:04:08,480
pretty much especially because maersk

113
00:04:08,480 --> 00:04:11,439
the global shipping company was one of

114
00:04:11,439 --> 00:04:12,239
the biggest

115
00:04:12,239 --> 00:04:14,799
or was one of the companies that was hit

116
00:04:14,799 --> 00:04:16,000
the worst

117
00:04:16,000 --> 00:04:19,120
and they almost um they almost got their

118
00:04:19,120 --> 00:04:21,680
whole network encrypted like backups

119
00:04:21,680 --> 00:04:25,440
domain controllers everything and um

120
00:04:25,440 --> 00:04:27,040
i think pretty much the only reason why

121
00:04:27,040 --> 00:04:29,120
the company survived is they found

122
00:04:29,120 --> 00:04:31,759
a single backup domain controller

123
00:04:31,759 --> 00:04:33,040
somewhere in ghana

124
00:04:33,040 --> 00:04:36,240
in one of the offices in ghana that was

125
00:04:36,240 --> 00:04:37,759
offline during the attack because they

126
00:04:37,759 --> 00:04:39,680
had a blackout

127
00:04:39,680 --> 00:04:41,840
and that's the only reason they could

128
00:04:41,840 --> 00:04:43,199
restore their active directory and

129
00:04:43,199 --> 00:04:44,720
didn't go complete and didn't

130
00:04:44,720 --> 00:04:47,600
um have to start over from scratch i

131
00:04:47,600 --> 00:04:49,840
think in the end it came out to over uh

132
00:04:49,840 --> 00:04:52,479
300 million of damages just from this

133
00:04:52,479 --> 00:04:53,440
attack

134
00:04:53,440 --> 00:04:55,759
and there's a story from weiss that

135
00:04:55,759 --> 00:04:57,280
shines a light on all the different

136
00:04:57,280 --> 00:04:58,720
aspects of the

137
00:04:58,720 --> 00:05:02,160
attack of the attack on maersk and

138
00:05:02,160 --> 00:05:04,560
while it's entertaining to read i think

139
00:05:04,560 --> 00:05:06,479
it almost reads like a thriller

140
00:05:06,479 --> 00:05:10,240
it's a super horrifying story um so i

141
00:05:10,240 --> 00:05:12,960
can recommend just everyone reading it

142
00:05:12,960 --> 00:05:14,720
i've linked it in the sites and i hope

143
00:05:14,720 --> 00:05:16,560
that the slides will be available

144
00:05:16,560 --> 00:05:20,240
afterwards the second one

145
00:05:20,240 --> 00:05:23,520
is also in 2017

146
00:05:23,520 --> 00:05:27,039
was c cleaner c cleaner is actually

147
00:05:27,039 --> 00:05:28,800
owned by avast

148
00:05:28,800 --> 00:05:32,000
the antivirus company and it was also

149
00:05:32,000 --> 00:05:35,199
com so um ccleaner was also compromised

150
00:05:35,199 --> 00:05:37,120
in 2017

151
00:05:37,120 --> 00:05:39,360
and they used the official c cleaner

152
00:05:39,360 --> 00:05:41,199
installer to spread a multi-stage

153
00:05:41,199 --> 00:05:42,000
malware

154
00:05:42,000 --> 00:05:44,880
that was distributed to over uh or that

155
00:05:44,880 --> 00:05:45,840
was at least

156
00:05:45,840 --> 00:05:48,960
downloaded over 2 million times

157
00:05:48,960 --> 00:05:51,919
but in an investigation they said avast

158
00:05:51,919 --> 00:05:52,720
said that

159
00:05:52,720 --> 00:05:55,840
only about eight um about eight

160
00:05:55,840 --> 00:05:57,600
organizations got the second stage

161
00:05:57,600 --> 00:05:58,240
payload

162
00:05:58,240 --> 00:06:00,400
but in the end it's still pretty bad if

163
00:06:00,400 --> 00:06:01,919
your malware if the malware gets

164
00:06:01,919 --> 00:06:03,840
downloaded two million times

165
00:06:03,840 --> 00:06:05,280
and they can just choose where to

166
00:06:05,280 --> 00:06:08,880
distribute uh the second stage

167
00:06:08,880 --> 00:06:11,120
and the last uh that i want to go over

168
00:06:11,120 --> 00:06:12,560
is of course solarwinds

169
00:06:12,560 --> 00:06:14,560
uh started last year still going into

170
00:06:14,560 --> 00:06:16,800
this year uh the falls

171
00:06:16,800 --> 00:06:20,240
still being handled and um yeah there

172
00:06:20,240 --> 00:06:20,720
was

173
00:06:20,720 --> 00:06:24,400
the the trojanus solarwinds orion update

174
00:06:24,400 --> 00:06:26,560
that also distributed the multi-stage

175
00:06:26,560 --> 00:06:29,120
loader dot uh sunburst

176
00:06:29,120 --> 00:06:31,600
and uh as a second stage they deliver

177
00:06:31,600 --> 00:06:33,360
cobalt strike to

178
00:06:33,360 --> 00:06:36,880
actually go into the network and um

179
00:06:36,880 --> 00:06:40,080
and steal data um

180
00:06:40,080 --> 00:06:41,600
from from various higher profile

181
00:06:41,600 --> 00:06:44,160
companies such as microsoft

182
00:06:44,160 --> 00:06:46,960
fire eye but also government agencies i

183
00:06:46,960 --> 00:06:48,400
think just much stuff on fire are

184
00:06:48,400 --> 00:06:50,479
probably most prominent because they

185
00:06:50,479 --> 00:06:53,360
in the end managed to uh detect it with

186
00:06:53,360 --> 00:06:55,520
fire eye being the one that

187
00:06:55,520 --> 00:06:57,680
found some some suspicious activities

188
00:06:57,680 --> 00:06:58,880
and there's uh

189
00:06:58,880 --> 00:07:02,080
two-factor two-factor software um

190
00:07:02,080 --> 00:07:03,680
and the actor is currently tracked by

191
00:07:03,680 --> 00:07:09,280
fire as unc2524252

192
00:07:09,280 --> 00:07:13,039
and so we have three pretty big attacks

193
00:07:13,039 --> 00:07:15,360
um that leverage supply chain attacks so

194
00:07:15,360 --> 00:07:17,039
it would just make sense as the red team

195
00:07:17,039 --> 00:07:18,240
would say okay

196
00:07:18,240 --> 00:07:21,360
um for our clients uh to be prepared

197
00:07:21,360 --> 00:07:22,800
against this kind of attack and to

198
00:07:22,800 --> 00:07:23,360
practice

199
00:07:23,360 --> 00:07:24,880
this kind of attack in a real world

200
00:07:24,880 --> 00:07:26,479
environment we would

201
00:07:26,479 --> 00:07:28,800
we would need to simulate it but our

202
00:07:28,800 --> 00:07:30,319
struggle as a red teamer is

203
00:07:30,319 --> 00:07:32,240
that as i mentioned in the beginning we

204
00:07:32,240 --> 00:07:34,560
cannot just um

205
00:07:34,560 --> 00:07:37,520
we cannot just compromise uh something

206
00:07:37,520 --> 00:07:38,560
like ccleaner

207
00:07:38,560 --> 00:07:40,880
or or solarwinds to distribute our

208
00:07:40,880 --> 00:07:41,919
payload

209
00:07:41,919 --> 00:07:45,120
and they also wouldn't just give us

210
00:07:45,120 --> 00:07:48,479
um permission to to just

211
00:07:48,479 --> 00:07:50,160
use their network to distribute our

212
00:07:50,160 --> 00:07:51,759
payloads

213
00:07:51,759 --> 00:07:54,000
so in regards to the limitations of red

214
00:07:54,000 --> 00:07:55,759
teaming in this scenario

215
00:07:55,759 --> 00:07:58,639
um when we look at the adversary tools

216
00:07:58,639 --> 00:08:00,160
techniques and procedures

217
00:08:00,160 --> 00:08:02,720
we can see that most of them used either

218
00:08:02,720 --> 00:08:03,840
a stolen

219
00:08:03,840 --> 00:08:06,000
or abused a third body code signing

220
00:08:06,000 --> 00:08:07,199
certificate

221
00:08:07,199 --> 00:08:09,520
through the infrastructure and that's

222
00:08:09,520 --> 00:08:11,120
what i mentioned is that we cannot

223
00:08:11,120 --> 00:08:12,160
simulate this

224
00:08:12,160 --> 00:08:15,520
um if we go through if we as regular go

225
00:08:15,520 --> 00:08:16,720
to c cleaner and say hey

226
00:08:16,720 --> 00:08:18,319
can you give us your call sign a

227
00:08:18,319 --> 00:08:20,319
certificate for red team engagement

228
00:08:20,319 --> 00:08:22,800
uh they would probably show us the door

229
00:08:22,800 --> 00:08:24,800
and uh for the right reasons

230
00:08:24,800 --> 00:08:27,840
so um

231
00:08:27,840 --> 00:08:29,360
that's that's uh i think the biggest

232
00:08:29,360 --> 00:08:31,120
problem in this kind of scenario

233
00:08:31,120 --> 00:08:34,159
um the adversaries use uh software that

234
00:08:34,159 --> 00:08:35,679
is signed with a weather certificate

235
00:08:35,679 --> 00:08:37,360
which we can still uh which we can

236
00:08:37,360 --> 00:08:37,839
simply

237
00:08:37,839 --> 00:08:41,360
not do at least not with a certificate

238
00:08:41,360 --> 00:08:43,200
of the original software

239
00:08:43,200 --> 00:08:46,000
and the second thing is and the solution

240
00:08:46,000 --> 00:08:46,720
um

241
00:08:46,720 --> 00:08:49,279
for this kind of scenario in a red team

242
00:08:49,279 --> 00:08:51,200
engagement would be just to use

243
00:08:51,200 --> 00:08:53,360
cells like a self-signed code signing

244
00:08:53,360 --> 00:08:54,800
certificates

245
00:08:54,800 --> 00:08:57,600
um just buy uh the code signing

246
00:08:57,600 --> 00:08:59,839
certificates for your company

247
00:08:59,839 --> 00:09:01,920
but what we sometimes do is we have an

248
00:09:01,920 --> 00:09:03,519
internal ca running

249
00:09:03,519 --> 00:09:06,640
and we just distribute that ca

250
00:09:06,640 --> 00:09:08,560
certificate to decline to install it on

251
00:09:08,560 --> 00:09:09,760
the server

252
00:09:09,760 --> 00:09:14,480
um where we on our software and um

253
00:09:14,480 --> 00:09:16,480
the problem the second problem is

254
00:09:16,480 --> 00:09:17,680
distribution

255
00:09:17,680 --> 00:09:20,560
so the the adversary used um the

256
00:09:20,560 --> 00:09:21,519
official

257
00:09:21,519 --> 00:09:24,800
um the official infrastructure of the

258
00:09:24,800 --> 00:09:25,839
compromised

259
00:09:25,839 --> 00:09:27,920
companies to distribute the malware

260
00:09:27,920 --> 00:09:29,360
which is again something

261
00:09:29,360 --> 00:09:31,839
that we cannot do we cannot just go

262
00:09:31,839 --> 00:09:33,200
ahead and compromise their their

263
00:09:33,200 --> 00:09:35,200
infrastructure to spread out or to

264
00:09:35,200 --> 00:09:36,800
deliver our payload

265
00:09:36,800 --> 00:09:39,040
um i of course i'm not a lawyer but i'm

266
00:09:39,040 --> 00:09:40,720
pretty sure that would break several

267
00:09:40,720 --> 00:09:42,000
laws in

268
00:09:42,000 --> 00:09:44,160
uh independent of if you're in germany

269
00:09:44,160 --> 00:09:45,600
or in the us

270
00:09:45,600 --> 00:09:48,080
so the solution we've taken with this is

271
00:09:48,080 --> 00:09:50,240
the assumed reach approach and that's

272
00:09:50,240 --> 00:09:52,560
what i want to talk about more in depth

273
00:09:52,560 --> 00:09:55,760
now so i'm obviously not the first one

274
00:09:55,760 --> 00:09:56,800
to talk about this

275
00:09:56,800 --> 00:09:59,360
uh there are a lot of talks from um tim

276
00:09:59,360 --> 00:10:00,000
medine

277
00:10:00,000 --> 00:10:03,040
of red siege that i also recommend if

278
00:10:03,040 --> 00:10:03,440
you need

279
00:10:03,440 --> 00:10:05,040
or if you want more information about

280
00:10:05,040 --> 00:10:06,800
the zoom breach approach

281
00:10:06,800 --> 00:10:08,640
but i just want to give a quick overview

282
00:10:08,640 --> 00:10:10,240
of how as a red teamer

283
00:10:10,240 --> 00:10:12,399
you can also use the zoom bridge to

284
00:10:12,399 --> 00:10:13,680
simulate

285
00:10:13,680 --> 00:10:17,440
a successful supply chain attack

286
00:10:17,440 --> 00:10:20,480
um i think uh this is a

287
00:10:20,480 --> 00:10:23,760
pretty good um graphic that shows

288
00:10:23,760 --> 00:10:26,959
what the assumed breach um peripheral in

289
00:10:26,959 --> 00:10:28,079
the end means

290
00:10:28,079 --> 00:10:30,000
is that instead of trying to prevent

291
00:10:30,000 --> 00:10:32,800
breach you

292
00:10:32,800 --> 00:10:35,440
give the the red team access to your

293
00:10:35,440 --> 00:10:36,079
internal

294
00:10:36,079 --> 00:10:39,040
network and start the regime from there

295
00:10:39,040 --> 00:10:39,760
so

296
00:10:39,760 --> 00:10:42,800
um instead of trying to fish

297
00:10:42,800 --> 00:10:44,800
uh in a traditional more traditional

298
00:10:44,800 --> 00:10:46,640
setting instead of trying to fish

299
00:10:46,640 --> 00:10:49,120
uh several hundred employees or do spear

300
00:10:49,120 --> 00:10:49,760
fishing

301
00:10:49,760 --> 00:10:51,360
you just say okay client here's our

302
00:10:51,360 --> 00:10:53,120
payload you just run it and from there

303
00:10:53,120 --> 00:10:53,920
we start

304
00:10:53,920 --> 00:10:56,959
uh the red team engagement which has the

305
00:10:56,959 --> 00:11:00,480
big advantage of um not having to do all

306
00:11:00,480 --> 00:11:02,240
this fishing and spending a lot of time

307
00:11:02,240 --> 00:11:03,839
on building fishing campaigns

308
00:11:03,839 --> 00:11:05,760
but simulating what's what's also

309
00:11:05,760 --> 00:11:07,920
important which is lateral movement in

310
00:11:07,920 --> 00:11:10,399
the internal network

311
00:11:10,399 --> 00:11:13,360
and before i go more in depth on how to

312
00:11:13,360 --> 00:11:14,000
to do this

313
00:11:14,000 --> 00:11:16,720
and and how to uh or or how our

314
00:11:16,720 --> 00:11:18,640
methodology looks like

315
00:11:18,640 --> 00:11:21,519
um there's one more thing i want to go

316
00:11:21,519 --> 00:11:22,800
over which is the

317
00:11:22,800 --> 00:11:26,160
the um difference between simulation and

318
00:11:26,160 --> 00:11:27,519
emulation

319
00:11:27,519 --> 00:11:29,920
which is something that comes up a lot

320
00:11:29,920 --> 00:11:32,000
when we talk to our clients

321
00:11:32,000 --> 00:11:35,440
and the main difference is that when we

322
00:11:35,440 --> 00:11:38,720
emulate an adversary that we try to copy

323
00:11:38,720 --> 00:11:39,360
the the

324
00:11:39,360 --> 00:11:41,440
tools techniques and procedures that

325
00:11:41,440 --> 00:11:42,640
they used as

326
00:11:42,640 --> 00:11:46,240
close as possible and that's why we

327
00:11:46,240 --> 00:11:46,800
usually

328
00:11:46,800 --> 00:11:50,160
in a supply chain attack um scenario

329
00:11:50,160 --> 00:11:51,680
we don't do emulation because there

330
00:11:51,680 --> 00:11:53,600
would just be too

331
00:11:53,600 --> 00:11:57,600
many um ttps as i mentioned in the last

332
00:11:57,600 --> 00:11:58,160
slides

333
00:11:58,160 --> 00:12:00,399
that we just cannot copy so we do more

334
00:12:00,399 --> 00:12:02,639
of a simulation we say we choose

335
00:12:02,639 --> 00:12:05,839
some some software we back over it

336
00:12:05,839 --> 00:12:07,839
and um then we distribute it to the

337
00:12:07,839 --> 00:12:09,200
client and

338
00:12:09,200 --> 00:12:12,160
that's exactly our approach to to assume

339
00:12:12,160 --> 00:12:12,720
breach

340
00:12:12,720 --> 00:12:16,160
in a supply chain scenario um is that we

341
00:12:16,160 --> 00:12:18,800
start by gathering intelligence data so

342
00:12:18,800 --> 00:12:19,600
for example

343
00:12:19,600 --> 00:12:22,880
uh ccleaner uh compromise uh solarwinds

344
00:12:22,880 --> 00:12:24,800
compromise how did they do it

345
00:12:24,800 --> 00:12:28,320
what did they um how did they back over

346
00:12:28,320 --> 00:12:30,720
their their software was it single stage

347
00:12:30,720 --> 00:12:32,000
multi-stage

348
00:12:32,000 --> 00:12:34,560
and then based on the intelligent data

349
00:12:34,560 --> 00:12:35,600
we

350
00:12:35,600 --> 00:12:39,440
we collected we build a threat profile

351
00:12:39,440 --> 00:12:43,120
that matches as close as possible these

352
00:12:43,120 --> 00:12:45,519
intelligence data that we found build

353
00:12:45,519 --> 00:12:46,639
our backdoor

354
00:12:46,639 --> 00:12:49,440
software send that software to the

355
00:12:49,440 --> 00:12:50,240
client

356
00:12:50,240 --> 00:12:52,320
then the client runs the the background

357
00:12:52,320 --> 00:12:54,320
software like they would in

358
00:12:54,320 --> 00:12:56,880
a real supply chain attack and from

359
00:12:56,880 --> 00:12:58,639
there it's a scenario based penetration

360
00:12:58,639 --> 00:12:59,839
test or red teaming

361
00:12:59,839 --> 00:13:01,600
uh depending if they have a blue team or

362
00:13:01,600 --> 00:13:03,920
not so

363
00:13:03,920 --> 00:13:06,959
um i i like to call especially with some

364
00:13:06,959 --> 00:13:07,760
of our clients

365
00:13:07,760 --> 00:13:09,040
like the red team assessment with

366
00:13:09,040 --> 00:13:11,279
training wheels because it

367
00:13:11,279 --> 00:13:14,079
uh focuses on one part of the red team

368
00:13:14,079 --> 00:13:15,040
engagement

369
00:13:15,040 --> 00:13:16,959
which still leaves them the chance to

370
00:13:16,959 --> 00:13:18,639
run a full regime engagement somewhere

371
00:13:18,639 --> 00:13:20,959
along the line but this can also be like

372
00:13:20,959 --> 00:13:22,079
the first step

373
00:13:22,079 --> 00:13:26,160
um when trying to do a red team

374
00:13:26,160 --> 00:13:29,040
but you are but you as a company they

375
00:13:29,040 --> 00:13:30,959
feel that they're not completely ready

376
00:13:30,959 --> 00:13:34,240
to to run a full regime assessment and

377
00:13:34,240 --> 00:13:35,200
um

378
00:13:35,200 --> 00:13:38,639
depending on how close you want the ohio

379
00:13:38,639 --> 00:13:41,360
says emulation but depending on how

380
00:13:41,360 --> 00:13:43,519
close you want the simulation to be to

381
00:13:43,519 --> 00:13:44,240
the

382
00:13:44,240 --> 00:13:47,600
to the original ttps that involves

383
00:13:47,600 --> 00:13:49,360
uh it can involve a lot of development

384
00:13:49,360 --> 00:13:51,199
work in in preparation

385
00:13:51,199 --> 00:13:52,880
because you have to tailor the the

386
00:13:52,880 --> 00:13:54,880
software for a specific

387
00:13:54,880 --> 00:13:57,360
um engagement but again as i said it

388
00:13:57,360 --> 00:13:58,240
still

389
00:13:58,240 --> 00:14:01,440
saves us the the effort to

390
00:14:01,440 --> 00:14:03,440
uh to build complex fishing campaigns

391
00:14:03,440 --> 00:14:05,199
that in the end fail and then we need to

392
00:14:05,199 --> 00:14:06,720
do a zoom breach anyway

393
00:14:06,720 --> 00:14:08,959
so that's why we like this approach we

394
00:14:08,959 --> 00:14:10,639
just say assume breach from the start

395
00:14:10,639 --> 00:14:12,000
and just leave the fishing

396
00:14:12,000 --> 00:14:14,560
um for a different campaign and leave

397
00:14:14,560 --> 00:14:15,199
that to

398
00:14:15,199 --> 00:14:18,959
the awareness campaigns so in regards to

399
00:14:18,959 --> 00:14:20,639
the threat intelligence and threat

400
00:14:20,639 --> 00:14:22,560
profile um that's what i mentioned is

401
00:14:22,560 --> 00:14:25,199
that we collect iocs and ttps of

402
00:14:25,199 --> 00:14:28,560
of the actors that we want to simulate

403
00:14:28,560 --> 00:14:31,600
and um for example we we make the

404
00:14:31,600 --> 00:14:34,720
the um during the the intelligence

405
00:14:34,720 --> 00:14:36,320
gathering phase we also say do we want

406
00:14:36,320 --> 00:14:38,240
to overuse open source tools

407
00:14:38,240 --> 00:14:40,480
or do we want to commercial tools or do

408
00:14:40,480 --> 00:14:42,639
we do we go custom

409
00:14:42,639 --> 00:14:45,360
and um we use then we then use all these

410
00:14:45,360 --> 00:14:46,399
gathered information

411
00:14:46,399 --> 00:14:49,519
based on uh or from the ttps of for

412
00:14:49,519 --> 00:14:51,440
example the supply chain attacks

413
00:14:51,440 --> 00:14:55,120
to uh build a fair profile and there's a

414
00:14:55,120 --> 00:14:56,160
really good guide

415
00:14:56,160 --> 00:14:58,399
uh by the guys that wrote the uh the

416
00:14:58,399 --> 00:14:59,440
team

417
00:14:59,440 --> 00:15:02,959
um book um i think it's

418
00:15:02,959 --> 00:15:06,800
joe west uh i forgot the other name

419
00:15:06,800 --> 00:15:09,839
and um uh an example

420
00:15:09,839 --> 00:15:11,519
for for the intelligence they already

421
00:15:11,519 --> 00:15:13,760
the information that we use to build our

422
00:15:13,760 --> 00:15:15,760
third profile is the solarwinds

423
00:15:15,760 --> 00:15:18,800
and sanders numbers backdoor and here

424
00:15:18,800 --> 00:15:20,639
for example you can see the code

425
00:15:20,639 --> 00:15:23,120
and if the client wants to use if the

426
00:15:23,120 --> 00:15:24,560
client wants to simulate for example

427
00:15:24,560 --> 00:15:26,079
this we would download the

428
00:15:26,079 --> 00:15:29,199
um the orion software and then

429
00:15:29,199 --> 00:15:33,360
go through all the the um the reports

430
00:15:33,360 --> 00:15:35,440
that we can collect on the internet and

431
00:15:35,440 --> 00:15:37,120
try to build

432
00:15:37,120 --> 00:15:38,959
a backdoor that's as close to the

433
00:15:38,959 --> 00:15:42,160
original as possible

434
00:15:43,440 --> 00:15:45,600
and that's exactly the point where that

435
00:15:45,600 --> 00:15:47,279
i want to go over next is building the

436
00:15:47,279 --> 00:15:48,560
background software

437
00:15:48,560 --> 00:15:51,920
we usually look for popular c sharp

438
00:15:51,920 --> 00:15:54,079
based software just because it's

439
00:15:54,079 --> 00:15:57,680
quicker and more easy to modify

440
00:15:57,680 --> 00:15:59,440
there's also lots of knowledge and tools

441
00:15:59,440 --> 00:16:01,440
in the public domain when it comes to

442
00:16:01,440 --> 00:16:03,600
c-sharp that you can use for example to

443
00:16:03,600 --> 00:16:06,160
load your shell code and for us the

444
00:16:06,160 --> 00:16:07,360
important thing is that we always look

445
00:16:07,360 --> 00:16:08,000
for software

446
00:16:08,000 --> 00:16:11,120
that does not force integrity checks on

447
00:16:11,120 --> 00:16:14,160
the dlls that are loaded and that has no

448
00:16:14,160 --> 00:16:15,600
codification

449
00:16:15,600 --> 00:16:18,000
luckily there is plenty of this kind of

450
00:16:18,000 --> 00:16:19,279
software

451
00:16:19,279 --> 00:16:22,639
so i want to give a small demo uh

452
00:16:22,639 --> 00:16:25,839
how we usually uh go ahead when we

453
00:16:25,839 --> 00:16:29,360
try to backdoor the software

454
00:16:29,360 --> 00:16:32,399
to um and then before we send it to our

455
00:16:32,399 --> 00:16:33,199
client

456
00:16:33,199 --> 00:16:36,240
and for that we would use a keypass

457
00:16:36,240 --> 00:16:40,720
and uh quickly go into

458
00:16:40,720 --> 00:16:43,759
is it still sharing yeah okay

459
00:16:43,759 --> 00:16:47,759
quickly go into my windows vm

460
00:16:48,839 --> 00:16:51,839
oh

461
00:17:02,480 --> 00:17:05,839
uh okay

462
00:17:13,599 --> 00:17:19,839
take my dm broke that is

463
00:17:32,480 --> 00:17:34,720
uh

464
00:17:43,679 --> 00:17:47,840
okay there we go

465
00:17:48,720 --> 00:17:50,559
would be too easy if it will work the

466
00:17:50,559 --> 00:17:53,039
first time

467
00:17:55,760 --> 00:17:57,760
okay so maybe while the machine is

468
00:17:57,760 --> 00:18:00,000
restoring um quickly go over the

469
00:18:00,000 --> 00:18:03,600
tools that we usually use um i

470
00:18:03,600 --> 00:18:06,880
personally prefer uh dnspy although it

471
00:18:06,880 --> 00:18:08,000
has been

472
00:18:08,000 --> 00:18:09,600
i think and of life and it's not

473
00:18:09,600 --> 00:18:11,360
actively maintained anymore

474
00:18:11,360 --> 00:18:13,440
it's still a pretty nice piece of

475
00:18:13,440 --> 00:18:15,919
software because you can actually change

476
00:18:15,919 --> 00:18:19,039
things in the in the binary so

477
00:18:19,039 --> 00:18:23,840
i've already downloaded keepass let me

478
00:18:23,840 --> 00:18:25,840
put this in full screen mode i hope i

479
00:18:25,840 --> 00:18:28,080
only already downloaded keypass

480
00:18:28,080 --> 00:18:31,200
portable for this small demo so we have

481
00:18:31,200 --> 00:18:35,600
the normal keypass executable here

482
00:18:35,600 --> 00:18:38,799
okay and

483
00:18:38,799 --> 00:18:41,280
so now we would go ahead and load that

484
00:18:41,280 --> 00:18:44,399
into dns file

485
00:18:50,880 --> 00:18:56,240
and open tools

486
00:18:58,080 --> 00:19:00,720
so now the n-spy shows us all the

487
00:19:00,720 --> 00:19:01,360
different

488
00:19:01,360 --> 00:19:05,440
um uh dependency of keepass

489
00:19:05,440 --> 00:19:08,160
and we can go into the keypass code and

490
00:19:08,160 --> 00:19:09,039
as we open

491
00:19:09,039 --> 00:19:11,840
the main program we can after the

492
00:19:11,840 --> 00:19:13,520
compiling already see that

493
00:19:13,520 --> 00:19:15,520
there is no code application employed so

494
00:19:15,520 --> 00:19:16,880
we we we all

495
00:19:16,880 --> 00:19:20,000
we get the original code

496
00:19:20,000 --> 00:19:22,799
and so we can just here on the program

497
00:19:22,799 --> 00:19:23,600
class

498
00:19:23,600 --> 00:19:26,720
that's called upon program start

499
00:19:26,720 --> 00:19:30,320
go ahead and say edit class

500
00:19:31,280 --> 00:19:33,280
and then i already always like to just

501
00:19:33,280 --> 00:19:36,160
go to the bottom

502
00:19:36,960 --> 00:19:40,160
and add a different function let's say

503
00:19:40,160 --> 00:19:43,360
call that public we need to call it uh

504
00:19:43,360 --> 00:19:44,960
we need to do it static so we don't have

505
00:19:44,960 --> 00:19:47,440
to initialize the class

506
00:19:47,440 --> 00:19:50,799
we don't want it to return anything

507
00:19:50,799 --> 00:19:54,640
and then we call it not a backdoor

508
00:19:54,640 --> 00:19:58,559
because obviously not a backdoor

509
00:20:02,080 --> 00:20:07,840
and then for this demo

510
00:20:08,080 --> 00:20:12,559
let's just use

511
00:20:12,880 --> 00:20:16,000
small message box so the problem is with

512
00:20:16,000 --> 00:20:17,520
the message box that it

513
00:20:17,520 --> 00:20:20,080
wouldn't normally be able to call if

514
00:20:20,080 --> 00:20:22,400
there are dependencies that we do not

515
00:20:22,400 --> 00:20:22,880
load

516
00:20:22,880 --> 00:20:25,840
in the original binary so we can just go

517
00:20:25,840 --> 00:20:27,360
up here and we see that

518
00:20:27,360 --> 00:20:29,679
it already uses system windows forms

519
00:20:29,679 --> 00:20:31,360
where message box

520
00:20:31,360 --> 00:20:34,559
is is located but if we would use some

521
00:20:34,559 --> 00:20:35,039
kind of

522
00:20:35,039 --> 00:20:37,520
method or object that's not already in

523
00:20:37,520 --> 00:20:39,520
the dependencies for this kind of

524
00:20:39,520 --> 00:20:41,679
for this class we would need to add it

525
00:20:41,679 --> 00:20:43,760
in the uh to the import statements

526
00:20:43,760 --> 00:20:46,960
through using statements and now i don't

527
00:20:46,960 --> 00:20:49,840
find my class anymore

528
00:20:50,960 --> 00:20:54,000
so and the next thing that we need to do

529
00:20:54,000 --> 00:20:56,799
is uh for this we actually applied to

530
00:20:56,799 --> 00:20:58,640
compile it

531
00:20:58,640 --> 00:21:01,600
and um because we don't have the

532
00:21:01,600 --> 00:21:03,280
original source code but

533
00:21:03,280 --> 00:21:05,679
the decompile source code it can

534
00:21:05,679 --> 00:21:07,760
sometimes happen

535
00:21:07,760 --> 00:21:10,400
if you don't make mistakes that you get

536
00:21:10,400 --> 00:21:11,440
error messages

537
00:21:11,440 --> 00:21:13,520
from the original source code then you

538
00:21:13,520 --> 00:21:15,360
can just go through it and for example

539
00:21:15,360 --> 00:21:16,960
here there's an error message so we just

540
00:21:16,960 --> 00:21:17,760
commented out

541
00:21:17,760 --> 00:21:20,080
uh during testing there was no adverse

542
00:21:20,080 --> 00:21:21,600
effects when commenting goes out

543
00:21:21,600 --> 00:21:23,919
but in a real engagement we would

544
00:21:23,919 --> 00:21:25,440
probably be more careful

545
00:21:25,440 --> 00:21:31,520
um then this has to be with the out

546
00:21:31,520 --> 00:21:35,679
and we need to assign

547
00:21:35,679 --> 00:21:38,799
flag to false

548
00:21:38,799 --> 00:21:41,120
and now if we compile it there's no more

549
00:21:41,120 --> 00:21:43,280
errors we can see that our not a

550
00:21:43,280 --> 00:21:44,799
backdoor function

551
00:21:44,799 --> 00:21:48,559
is in the uh is in the function list

552
00:21:48,559 --> 00:21:50,880
and now we could go into the main

553
00:21:50,880 --> 00:21:54,000
function we see that main priv is called

554
00:21:54,000 --> 00:21:57,280
so we go into the main priv

555
00:21:57,280 --> 00:22:00,880
and oops then we go in the main pro we

556
00:22:00,880 --> 00:22:03,520
say edit method

557
00:22:03,520 --> 00:22:06,240
and in this method method we now would

558
00:22:06,240 --> 00:22:10,080
add our not a backdoor function

559
00:22:10,799 --> 00:22:13,840
compile it again

560
00:22:16,000 --> 00:22:18,080
close the end spy it asks us if we want

561
00:22:18,080 --> 00:22:20,080
to save the file we just override

562
00:22:20,080 --> 00:22:23,918
the the existing file

563
00:22:24,000 --> 00:22:28,640
and now our keepass binary

564
00:22:31,919 --> 00:22:33,919
you can see that it was originally

565
00:22:33,919 --> 00:22:35,679
signed uh now it's not

566
00:22:35,679 --> 00:22:37,280
signed anymore it still has all the

567
00:22:37,280 --> 00:22:39,440
parameters it has the icon

568
00:22:39,440 --> 00:22:41,679
it looks like a normal keypad binary but

569
00:22:41,679 --> 00:22:42,720
the problem

570
00:22:42,720 --> 00:22:45,679
is now that because we don't have uh

571
00:22:45,679 --> 00:22:47,679
because it's not signed or the signature

572
00:22:47,679 --> 00:22:49,120
doesn't match anymore

573
00:22:49,120 --> 00:22:51,039
then we will try to we will try to open

574
00:22:51,039 --> 00:22:53,039
it there would normally be a smart

575
00:22:53,039 --> 00:22:53,520
screen

576
00:22:53,520 --> 00:22:55,120
that i already clicked away during

577
00:22:55,120 --> 00:22:57,360
testing so there is no smart screen

578
00:22:57,360 --> 00:22:59,760
but we now have our backup keypass

579
00:22:59,760 --> 00:23:02,240
binary

580
00:23:02,640 --> 00:23:04,880
and it would load like it would normally

581
00:23:04,880 --> 00:23:05,760
do so

582
00:23:05,760 --> 00:23:07,840
normal software but with a small vector

583
00:23:07,840 --> 00:23:08,799
in it that

584
00:23:08,799 --> 00:23:10,720
in an assumed reach engagement we can

585
00:23:10,720 --> 00:23:13,280
use um

586
00:23:13,280 --> 00:23:16,400
we can use to to simulate this

587
00:23:16,400 --> 00:23:20,240
this kind of supply chain attack

588
00:23:20,240 --> 00:23:24,240
and if we have for example um our own

589
00:23:24,240 --> 00:23:28,000
um our own certificate authority

590
00:23:28,000 --> 00:23:31,120
and imported our uh

591
00:23:31,120 --> 00:23:34,480
our certificate into the the

592
00:23:34,480 --> 00:23:37,280
dvm we could just go ahead strip the

593
00:23:37,280 --> 00:23:39,840
original

594
00:23:40,240 --> 00:23:43,919
okay and then

595
00:23:44,480 --> 00:23:48,840
i let me create a self-signed

596
00:23:48,840 --> 00:23:51,440
certificate

597
00:23:51,440 --> 00:23:53,440
so this is the new powershell command

598
00:23:53,440 --> 00:23:56,080
that replaced the mixer

599
00:23:56,080 --> 00:24:00,240
if we now go into certificates

600
00:24:00,559 --> 00:24:03,760
and personal we can see that we have the

601
00:24:03,760 --> 00:24:05,279
totally not a backward keepass

602
00:24:05,279 --> 00:24:08,720
certificate and

603
00:24:08,720 --> 00:24:12,159
now we could go ahead and say okay

604
00:24:12,159 --> 00:24:18,720
we want our binary signed

605
00:24:18,720 --> 00:24:21,600
and now if we look at our keypad binary

606
00:24:21,600 --> 00:24:22,720
properties

607
00:24:22,720 --> 00:24:25,440
we can see that we have a valid or we

608
00:24:25,440 --> 00:24:26,720
have a big

609
00:24:26,720 --> 00:24:30,240
digital signature but um

610
00:24:30,240 --> 00:24:32,960
windows correctly says that hey the

611
00:24:32,960 --> 00:24:33,679
signature

612
00:24:33,679 --> 00:24:36,480
does not uh complete the uh chain of

613
00:24:36,480 --> 00:24:37,039
trust

614
00:24:37,039 --> 00:24:38,960
because it's from a provider that we

615
00:24:38,960 --> 00:24:40,240
don't know

616
00:24:40,240 --> 00:24:42,720
so in an assumed breach uh type

617
00:24:42,720 --> 00:24:44,240
engagement you could just um

618
00:24:44,240 --> 00:24:46,240
as i said tell the client just run it

619
00:24:46,240 --> 00:24:47,760
and it's fine or

620
00:24:47,760 --> 00:24:50,240
if you want to really simulate a valid

621
00:24:50,240 --> 00:24:51,440
certificate

622
00:24:51,440 --> 00:24:54,559
just build a small ca uh certificate

623
00:24:54,559 --> 00:24:56,720
use that to create a code signing

624
00:24:56,720 --> 00:24:58,000
certificate

625
00:24:58,000 --> 00:25:01,200
and then send the client your ca

626
00:25:01,200 --> 00:25:02,559
certificate so he can

627
00:25:02,559 --> 00:25:05,120
import that into the client or server

628
00:25:05,120 --> 00:25:06,559
where you run the software

629
00:25:06,559 --> 00:25:09,760
and then you can really simulate um

630
00:25:09,760 --> 00:25:12,000
an attacker that has a valid certificate

631
00:25:12,000 --> 00:25:15,840
of a code signing certificate

632
00:25:16,799 --> 00:25:20,159
all right then back to the

633
00:25:20,159 --> 00:25:22,960
presentation

634
00:25:26,400 --> 00:25:30,640
so in addition to what i've uh

635
00:25:30,640 --> 00:25:33,840
just uh showed and what i normally do

636
00:25:33,840 --> 00:25:36,320
um if we have a client engagement where

637
00:25:36,320 --> 00:25:38,000
the client wants to test all his

638
00:25:38,000 --> 00:25:39,679
uh network solutions as well like

639
00:25:39,679 --> 00:25:41,760
sandboxes to see if it gets called

640
00:25:41,760 --> 00:25:44,960
we usually put the backdoor function

641
00:25:44,960 --> 00:25:48,159
and some kind of ui element

642
00:25:48,159 --> 00:25:50,480
that would need interaction with the

643
00:25:50,480 --> 00:25:51,760
application for example

644
00:25:51,760 --> 00:25:54,159
in keepass you would use the the button

645
00:25:54,159 --> 00:25:56,720
to create a new new entry

646
00:25:56,720 --> 00:25:59,679
in in keepass

647
00:26:04,400 --> 00:26:07,120
you would use the new create a new entry

648
00:26:07,120 --> 00:26:09,120
and keypass

649
00:26:09,120 --> 00:26:10,559
because if you use something that

650
00:26:10,559 --> 00:26:12,720
requires interaction in the program

651
00:26:12,720 --> 00:26:15,039
then set box solutions wouldn't be able

652
00:26:15,039 --> 00:26:16,480
to trigger your payload

653
00:26:16,480 --> 00:26:18,320
if it's not triggered on loading the

654
00:26:18,320 --> 00:26:20,080
application because the

655
00:26:20,080 --> 00:26:22,400
uh the same box normally doesn't know

656
00:26:22,400 --> 00:26:23,120
how to put

657
00:26:23,120 --> 00:26:26,159
multiple menus to

658
00:26:26,159 --> 00:26:29,200
uh to to trigger the the payload

659
00:26:29,200 --> 00:26:31,440
and as i mentioned we do not have a

660
00:26:31,440 --> 00:26:33,440
codesign

661
00:26:33,440 --> 00:26:35,360
cosign certificate from the original

662
00:26:35,360 --> 00:26:36,880
vendor of the software

663
00:26:36,880 --> 00:26:39,279
so we need to help ourselves out and use

664
00:26:39,279 --> 00:26:40,880
a self-signed certificate

665
00:26:40,880 --> 00:26:43,200
or just go ahead and buy a code signing

666
00:26:43,200 --> 00:26:44,159
certificate

667
00:26:44,159 --> 00:26:45,919
then of course it's not the original

668
00:26:45,919 --> 00:26:47,360
certificate

669
00:26:47,360 --> 00:26:49,679
but it's still a valid code signing

670
00:26:49,679 --> 00:26:51,279
certificate so you can

671
00:26:51,279 --> 00:26:55,520
simulate that use case and of course

672
00:26:55,520 --> 00:26:57,360
uh one important factor when you build

673
00:26:57,360 --> 00:26:58,799
your backload software

674
00:26:58,799 --> 00:27:02,159
if you need antivirus or er evasion

675
00:27:02,159 --> 00:27:04,400
um that for us mostly depends on the

676
00:27:04,400 --> 00:27:06,480
kind of engagement we run

677
00:27:06,480 --> 00:27:08,159
we have clients that say we just turn it

678
00:27:08,159 --> 00:27:10,640
off for the initial compromise and then

679
00:27:10,640 --> 00:27:12,400
we see if you for example manage to

680
00:27:12,400 --> 00:27:13,760
bypass

681
00:27:13,760 --> 00:27:16,080
edrs on other servers but we also have

682
00:27:16,080 --> 00:27:16,960
clients that say

683
00:27:16,960 --> 00:27:19,440
we have vdr running and antivirus

684
00:27:19,440 --> 00:27:21,679
running and we want to

685
00:27:21,679 --> 00:27:24,559
um to see how they react and these are

686
00:27:24,559 --> 00:27:25,919
mostly the clients that say we

687
00:27:25,919 --> 00:27:29,120
also import the the certificate

688
00:27:29,120 --> 00:27:32,240
so we can see how our security solutions

689
00:27:32,240 --> 00:27:33,440
react

690
00:27:33,440 --> 00:27:36,559
when a validly signed executable

691
00:27:36,559 --> 00:27:38,480
runs code that is that it shouldn't be

692
00:27:38,480 --> 00:27:40,799
running

693
00:27:41,120 --> 00:27:43,360
okay

694
00:27:44,399 --> 00:27:46,320
so after we've built our background

695
00:27:46,320 --> 00:27:48,559
software the next step would always be

696
00:27:48,559 --> 00:27:52,399
how to would obviously

697
00:27:52,399 --> 00:27:55,360
obviously be how to um distribute our

698
00:27:55,360 --> 00:27:56,240
payload

699
00:27:56,240 --> 00:27:59,279
and for this it's easy for us if we just

700
00:27:59,279 --> 00:28:01,440
clone the target website register look

701
00:28:01,440 --> 00:28:03,279
like domain and host a tool there

702
00:28:03,279 --> 00:28:04,880
again this is one of the biggest

703
00:28:04,880 --> 00:28:06,640
limitations you have

704
00:28:06,640 --> 00:28:08,960
independently if you use a red team

705
00:28:08,960 --> 00:28:10,000
approach or or

706
00:28:10,000 --> 00:28:12,720
zoom breach approach for supply chain

707
00:28:12,720 --> 00:28:14,320
attack simulations

708
00:28:14,320 --> 00:28:17,360
we cannot just use the infrastructure

709
00:28:17,360 --> 00:28:17,760
that

710
00:28:17,760 --> 00:28:19,760
they the software window uses to

711
00:28:19,760 --> 00:28:20,880
distribute

712
00:28:20,880 --> 00:28:23,360
um the software like they did in the

713
00:28:23,360 --> 00:28:25,200
text that i mentioned before because we

714
00:28:25,200 --> 00:28:26,480
do not have access

715
00:28:26,480 --> 00:28:28,960
so we need just to try to stay as close

716
00:28:28,960 --> 00:28:30,159
as possible

717
00:28:30,159 --> 00:28:34,080
to the original domain and from there

718
00:28:34,080 --> 00:28:37,120
um but this is still enough to test

719
00:28:37,120 --> 00:28:39,279
proxy solutions sandboxing solutions to

720
00:28:39,279 --> 00:28:40,799
see how they would react

721
00:28:40,799 --> 00:28:44,080
to someone downloading on this kind of

722
00:28:44,080 --> 00:28:47,360
this kind of binary for example and for

723
00:28:47,360 --> 00:28:48,720
the assume breach

724
00:28:48,720 --> 00:28:49,919
assessment the client then just

725
00:28:49,919 --> 00:28:52,000
downloads the background binary runs it

726
00:28:52,000 --> 00:28:53,919
on the workstation or server dependent

727
00:28:53,919 --> 00:28:54,480
on the

728
00:28:54,480 --> 00:28:56,559
targeted scenario if you want to

729
00:28:56,559 --> 00:28:58,159
simulate cleaner you would run in a

730
00:28:58,159 --> 00:28:59,200
workstation

731
00:28:59,200 --> 00:29:01,600
if you want to simulate something like

732
00:29:01,600 --> 00:29:02,320
orion

733
00:29:02,320 --> 00:29:05,440
uh you would run on a server in a

734
00:29:05,440 --> 00:29:08,559
data center probably and

735
00:29:08,559 --> 00:29:10,080
after the client is run i mean this is

736
00:29:10,080 --> 00:29:12,080
probably for most uh red teammates in

737
00:29:12,080 --> 00:29:13,360
pentester

738
00:29:13,360 --> 00:29:16,720
the fun part because it's it's a full-on

739
00:29:16,720 --> 00:29:18,720
red team or scenario-based penetration

740
00:29:18,720 --> 00:29:20,799
test including everything that we

741
00:29:20,799 --> 00:29:21,440
usually do

742
00:29:21,440 --> 00:29:23,200
internal recon lateral movement

743
00:29:23,200 --> 00:29:25,200
privilege escalation action objectives

744
00:29:25,200 --> 00:29:26,799
stealing data

745
00:29:26,799 --> 00:29:30,000
and uh i won't go in depth on this here

746
00:29:30,000 --> 00:29:31,520
because they will probably fill another

747
00:29:31,520 --> 00:29:32,159
35

748
00:29:32,159 --> 00:29:35,440
30 or 45 minutes

749
00:29:36,080 --> 00:29:39,679
so the good thing is

750
00:29:39,679 --> 00:29:41,760
and that's what i mentioned before we

751
00:29:41,760 --> 00:29:43,919
don't need the initial compromise part

752
00:29:43,919 --> 00:29:45,360
um and the right thing means we've done

753
00:29:45,360 --> 00:29:46,960
we've seen that the initial compromise

754
00:29:46,960 --> 00:29:48,559
takes the most time

755
00:29:48,559 --> 00:29:50,640
with the assumed breach assessment style

756
00:29:50,640 --> 00:29:52,720
or with the assumed brief style red team

757
00:29:52,720 --> 00:29:54,000
or penetration test we

758
00:29:54,000 --> 00:29:57,600
can just shave this time off

759
00:29:57,600 --> 00:30:00,320
of the assessment or use it to build

760
00:30:00,320 --> 00:30:02,480
more sophisticated and more tailored

761
00:30:02,480 --> 00:30:03,440
tools

762
00:30:03,440 --> 00:30:06,840
for for the engagement at hand

763
00:30:06,840 --> 00:30:09,840
so to to summarize

764
00:30:09,840 --> 00:30:13,279
um to summarize

765
00:30:13,279 --> 00:30:16,399
with the supply chain attacks more and

766
00:30:16,399 --> 00:30:17,600
more on the rise i mean it's

767
00:30:17,600 --> 00:30:18,960
more or less in your hype especially

768
00:30:18,960 --> 00:30:20,960
with solarwinds um i think there are

769
00:30:20,960 --> 00:30:23,360
some more that i didn't even mention

770
00:30:23,360 --> 00:30:26,559
um at the right team as regulars or pen

771
00:30:26,559 --> 00:30:27,200
testers

772
00:30:27,200 --> 00:30:29,760
we must try to help our clients to

773
00:30:29,760 --> 00:30:31,840
simulate this kind of breach

774
00:30:31,840 --> 00:30:34,640
and help them prepare before it hits

775
00:30:34,640 --> 00:30:35,520
them

776
00:30:35,520 --> 00:30:38,720
and we cannot do this without breaking

777
00:30:38,720 --> 00:30:40,559
the law without breaking any laws

778
00:30:40,559 --> 00:30:42,240
because we cannot compromise any

779
00:30:42,240 --> 00:30:43,440
third-party

780
00:30:43,440 --> 00:30:46,640
software vendors so the solution to to

781
00:30:46,640 --> 00:30:47,840
the red teaming

782
00:30:47,840 --> 00:30:49,919
problem would be to use the assume

783
00:30:49,919 --> 00:30:51,520
breach approach and coordinate the

784
00:30:51,520 --> 00:30:52,880
effort with the client

785
00:30:52,880 --> 00:30:54,399
to to bring the software into the

786
00:30:54,399 --> 00:30:56,000
network and see

787
00:30:56,000 --> 00:30:57,519
how an attacker would move through a

788
00:30:57,519 --> 00:30:58,880
network when he would be able to

789
00:30:58,880 --> 00:30:59,919
compromise

790
00:30:59,919 --> 00:31:01,600
a server or a workstation through a

791
00:31:01,600 --> 00:31:05,120
supply chain attack and by using threat

792
00:31:05,120 --> 00:31:07,360
intelligence data after profiling we can

793
00:31:07,360 --> 00:31:07,919
help

794
00:31:07,919 --> 00:31:10,960
emulate or simulate an attacker as close

795
00:31:10,960 --> 00:31:14,080
to the original as possible

796
00:31:14,080 --> 00:31:18,240
so um that would be it for my talk i

797
00:31:18,240 --> 00:31:18,720
hope

798
00:31:18,720 --> 00:31:22,080
i'm good on time and i think so

799
00:31:22,080 --> 00:31:25,440
so um from

800
00:31:25,440 --> 00:31:28,640
what i understood and what i think

801
00:31:28,640 --> 00:31:31,679
i exactly i will be taking questions

802
00:31:31,679 --> 00:31:35,279
in discord uh

803
00:31:35,840 --> 00:31:39,519
that would be yeah please donate

804
00:31:39,519 --> 00:31:41,760
hi thank you for presenting for us today

805
00:31:41,760 --> 00:31:44,159
i was a live demo for your first talk no

806
00:31:44,159 --> 00:31:47,279
less that was

