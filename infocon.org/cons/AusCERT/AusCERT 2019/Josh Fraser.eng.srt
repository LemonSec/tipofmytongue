1
00:00:00,060 --> 00:00:05,729
so I'd like to introduce Josh Fraser

2
00:00:01,800 --> 00:00:07,740
who's from a state government agency

3
00:00:05,730 --> 00:00:11,250
those sounds very nefarious when you say

4
00:00:07,740 --> 00:00:12,690
like that so he is been working in a

5
00:00:11,250 --> 00:00:15,150
large government organizations in

6
00:00:12,690 --> 00:00:16,948
incident response he spends most of his

7
00:00:15,150 --> 00:00:19,320
time detecting and responding to threats

8
00:00:16,949 --> 00:00:22,199
and building out additional capabilities

9
00:00:19,320 --> 00:00:31,640
for his team so we could have a very

10
00:00:22,199 --> 00:00:31,640
warm welcome to Josh everyone welcome

11
00:00:32,719 --> 00:00:38,309
basically the main premise of this war

12
00:00:35,630 --> 00:00:41,100
is to I suppose understand edie our

13
00:00:38,309 --> 00:00:43,110
solutions a bit better but in context of

14
00:00:41,100 --> 00:00:44,820
that trying to look at what tools you

15
00:00:43,110 --> 00:00:47,190
have available in your environments and

16
00:00:44,820 --> 00:00:50,489
leveraging them to build our EDI our

17
00:00:47,190 --> 00:00:52,160
capabilities for free so let's let's

18
00:00:50,489 --> 00:00:54,180
jump into it so just a quick disclaimer

19
00:00:52,160 --> 00:00:56,370
conference talk represents my own

20
00:00:54,180 --> 00:00:57,120
opinions not that of the organization

21
00:00:56,370 --> 00:00:59,550
I'm employed by

22
00:00:57,120 --> 00:01:01,500
I think that basically means I can just

23
00:00:59,550 --> 00:01:04,199
say what I want without repercussions so

24
00:01:01,500 --> 00:01:06,840
it's good to have that in there so Who

25
00:01:04,199 --> 00:01:09,450
am I yeah really touched on that work in

26
00:01:06,840 --> 00:01:11,610
a large government agency pretty much

27
00:01:09,450 --> 00:01:14,460
just a random guy the lights detecting

28
00:01:11,610 --> 00:01:16,680
and responding cyber threats and yeah

29
00:01:14,460 --> 00:01:18,500
building out additional capabilities for

30
00:01:16,680 --> 00:01:21,890
the team and a more Incident Response

31
00:01:18,500 --> 00:01:24,990
perspectives on the blue side of things

32
00:01:21,890 --> 00:01:28,320
so what's the problem why am I doing

33
00:01:24,990 --> 00:01:30,089
this talk and you'll probably notice

34
00:01:28,320 --> 00:01:32,008
this isn't a new problem this has been

35
00:01:30,090 --> 00:01:34,290
something that's been an issue for yeah

36
00:01:32,009 --> 00:01:37,829
15 20 years is it signature-based

37
00:01:34,290 --> 00:01:39,840
technologies and detections yeah kind of

38
00:01:37,829 --> 00:01:42,329
suck they're very limited in their

39
00:01:39,840 --> 00:01:45,060
capabilities they're very limited in

40
00:01:42,329 --> 00:01:47,610
what they can detect and they're really

41
00:01:45,060 --> 00:01:50,100
kind of relying on that whole wall

42
00:01:47,610 --> 00:01:52,409
approach of blocking stuff before it can

43
00:01:50,100 --> 00:01:54,449
get into the organization just as the

44
00:01:52,409 --> 00:01:57,180
keynote presenter reminded us we can't

45
00:01:54,450 --> 00:02:00,450
rely on those big perimeter walls those

46
00:01:57,180 --> 00:02:02,369
big defenses we need to kind of assume

47
00:02:00,450 --> 00:02:04,820
that people are already in the network

48
00:02:02,369 --> 00:02:07,469
and have visibility of what's going on

49
00:02:04,820 --> 00:02:09,628
and it's yeah really frustrating having

50
00:02:07,469 --> 00:02:13,359
to rely on alert that says something's

51
00:02:09,628 --> 00:02:15,450
bad but luckily UAV has cleaned it up

52
00:02:13,360 --> 00:02:18,550
don't really know what to take in place

53
00:02:15,450 --> 00:02:20,470
and so without that visibility of what's

54
00:02:18,550 --> 00:02:23,320
actually taking a place from that alert

55
00:02:20,470 --> 00:02:25,540
it might just be easier to re image you

56
00:02:23,320 --> 00:02:28,709
might have more assurance just to re

57
00:02:25,540 --> 00:02:32,380
image your box once it's been infected

58
00:02:28,710 --> 00:02:34,090
as you've been walking around and if

59
00:02:32,380 --> 00:02:37,090
you're one of the people that maybe have

60
00:02:34,090 --> 00:02:38,680
a more traditional AV solution maybe

61
00:02:37,090 --> 00:02:40,270
this is you you've been walking around

62
00:02:38,680 --> 00:02:43,060
you've seen a lot of really new

63
00:02:40,270 --> 00:02:44,680
interesting solutions that are going to

64
00:02:43,060 --> 00:02:46,090
solve all your problems and you're

65
00:02:44,680 --> 00:02:48,430
probably checking them out

66
00:02:46,090 --> 00:02:50,670
and that's good there are a lot of

67
00:02:48,430 --> 00:02:56,680
really cool technologies out there that

68
00:02:50,670 --> 00:02:59,940
have really powerful capabilities but on

69
00:02:56,680 --> 00:03:02,230
that side of things sometimes vendors

70
00:02:59,940 --> 00:03:04,840
overestimate their capabilities in

71
00:03:02,230 --> 00:03:06,700
detecting and responding to threats this

72
00:03:04,840 --> 00:03:09,010
is obviously exaggerated I'm not

73
00:03:06,700 --> 00:03:11,380
actually this is not a literal thing

74
00:03:09,010 --> 00:03:13,870
just clarifying that but it's kind of

75
00:03:11,380 --> 00:03:15,880
just a it's to highlight how important

76
00:03:13,870 --> 00:03:18,489
independent testing is when you're

77
00:03:15,880 --> 00:03:20,500
looking at these solutions so there's a

78
00:03:18,489 --> 00:03:23,650
group called mitre in the United States

79
00:03:20,500 --> 00:03:26,560
and they do independent evaluations of

80
00:03:23,650 --> 00:03:29,170
EDR solutions so if you're in the the

81
00:03:26,560 --> 00:03:30,250
space for looking at buying one that's

82
00:03:29,170 --> 00:03:32,109
something I'd definitely recommend

83
00:03:30,250 --> 00:03:34,209
checking out they do some really good

84
00:03:32,110 --> 00:03:36,070
reports and the way they do their

85
00:03:34,209 --> 00:03:39,459
testing is is they look at a particular

86
00:03:36,070 --> 00:03:41,440
threat actor or an ADC and then they'll

87
00:03:39,459 --> 00:03:43,410
test those tools against the different

88
00:03:41,440 --> 00:03:45,850
TTP's that that's read act to use

89
00:03:43,410 --> 00:03:47,739
instead of just throwing a thousand

90
00:03:45,850 --> 00:03:50,200
malware samples at it and then seeing

91
00:03:47,739 --> 00:03:54,310
that it blocks 99% which doesn't really

92
00:03:50,200 --> 00:03:56,709
show anything and so what we're going to

93
00:03:54,310 --> 00:04:00,040
talk about in this talk finally enough

94
00:03:56,709 --> 00:04:02,590
is how we can I suppose leverage

95
00:04:00,040 --> 00:04:05,560
existing tools in the environment to

96
00:04:02,590 --> 00:04:07,810
build their additional capability in

97
00:04:05,560 --> 00:04:09,880
terms of detecting and responding to

98
00:04:07,810 --> 00:04:13,000
threats and it's something that's really

99
00:04:09,880 --> 00:04:16,540
easy central for all organizations of

100
00:04:13,000 --> 00:04:18,339
all sizes of all industries it's not

101
00:04:16,540 --> 00:04:19,660
just something the banks need to do it's

102
00:04:18,339 --> 00:04:22,900
not just something the government's need

103
00:04:19,660 --> 00:04:24,430
to do regardless of your size something

104
00:04:22,900 --> 00:04:28,010
you need to be looking out

105
00:04:24,430 --> 00:04:29,800
so what is EDR I've said that acronym

106
00:04:28,010 --> 00:04:33,230
heaps but I haven't said what it means

107
00:04:29,800 --> 00:04:36,850
and is it different is it different yeah

108
00:04:33,230 --> 00:04:39,110
your typical AV vendors or ng AV vendors

109
00:04:36,850 --> 00:04:40,730
so we'll rely on Google for the

110
00:04:39,110 --> 00:04:42,170
definition so this is just the first

111
00:04:40,730 --> 00:04:44,360
thing popped up and this is the

112
00:04:42,170 --> 00:04:45,860
definition I'll be working off because

113
00:04:44,360 --> 00:04:48,590
Google is very reliable

114
00:04:45,860 --> 00:04:50,750
so EDR stands for endpoint detection and

115
00:04:48,590 --> 00:04:53,450
response endpoint detection response

116
00:04:50,750 --> 00:04:57,320
solutions are designed to continuously

117
00:04:53,450 --> 00:04:59,270
monitor and respond to it Internet

118
00:04:57,320 --> 00:05:02,570
threats or cyber threats if you prefer

119
00:04:59,270 --> 00:05:04,520
that buzzword so it breaks it up into

120
00:05:02,570 --> 00:05:06,020
two components as with the acronym

121
00:05:04,520 --> 00:05:09,200
you've got on one side you've got the

122
00:05:06,020 --> 00:05:11,210
detection capabilities and the way this

123
00:05:09,200 --> 00:05:14,270
definition puts it is that continuous

124
00:05:11,210 --> 00:05:16,700
monitoring on the detection sides but

125
00:05:14,270 --> 00:05:18,560
then you've got the response side so not

126
00:05:16,700 --> 00:05:20,630
only are you able to detect these

127
00:05:18,560 --> 00:05:23,120
advanced threats you're able then to

128
00:05:20,630 --> 00:05:25,880
respond to them and again being able to

129
00:05:23,120 --> 00:05:28,070
respond to an advanced threat is not

130
00:05:25,880 --> 00:05:33,050
reimaging it it's not unplugging a blue

131
00:05:28,070 --> 00:05:35,090
cable it's using precision to understand

132
00:05:33,050 --> 00:05:38,530
what the actor is done and then being

133
00:05:35,090 --> 00:05:38,530
able to clean up those things

134
00:05:42,759 --> 00:05:48,340
and EDR is different because it takes a

135
00:05:45,789 --> 00:05:51,400
different approach it takes that assume

136
00:05:48,340 --> 00:05:53,438
breach mentality so the EDR solution

137
00:05:51,400 --> 00:05:56,349
it's it's not there to block all the

138
00:05:53,439 --> 00:05:58,300
things that are coming in and assume

139
00:05:56,349 --> 00:05:59,710
that it can stop them all takes a

140
00:05:58,300 --> 00:06:02,050
different approach in that it assumes

141
00:05:59,710 --> 00:06:03,729
that the host has maybe already been

142
00:06:02,050 --> 00:06:05,409
compromised or that it may be

143
00:06:03,729 --> 00:06:07,210
compromised in the future so what it

144
00:06:05,409 --> 00:06:09,969
does is it will collect all that kind of

145
00:06:07,210 --> 00:06:11,680
endpoint telemetry and then using that

146
00:06:09,969 --> 00:06:13,750
you'll be able to understand what has

147
00:06:11,680 --> 00:06:20,379
taken place if there is a breach that is

148
00:06:13,750 --> 00:06:22,509
identified so how can we use existing

149
00:06:20,379 --> 00:06:25,449
tools or free tools to build out this

150
00:06:22,509 --> 00:06:29,319
capability instead of giving a vendor

151
00:06:25,449 --> 00:06:31,330
quite a substantial amount of money so

152
00:06:29,319 --> 00:06:32,949
we'll focus on the detection

153
00:06:31,330 --> 00:06:36,008
capabilities and then we'll go into the

154
00:06:32,949 --> 00:06:39,610
response capabilities on the detection

155
00:06:36,009 --> 00:06:41,620
side it's something that's probably not

156
00:06:39,610 --> 00:06:44,199
very new this has kind of been covered

157
00:06:41,620 --> 00:06:46,270
quite a lot in security conferences over

158
00:06:44,199 --> 00:06:49,419
the past few years and it's the system

159
00:06:46,270 --> 00:06:50,979
on tool from the sysinternals suite and

160
00:06:49,419 --> 00:06:53,049
it's a tool that a guy called mark

161
00:06:50,979 --> 00:06:55,990
russinovich wrote a few years ago and

162
00:06:53,050 --> 00:06:59,169
it's just a very small windows binary

163
00:06:55,990 --> 00:07:01,719
that monitors activities on Windows

164
00:06:59,169 --> 00:07:03,758
operating systems and you're able to

165
00:07:01,719 --> 00:07:05,650
define the actual activities that it

166
00:07:03,759 --> 00:07:08,849
will log so it could be something like

167
00:07:05,650 --> 00:07:10,929
process creation or drivers being loaded

168
00:07:08,849 --> 00:07:13,539
we're going to look at how we can use

169
00:07:10,930 --> 00:07:16,270
then the Windows Event log and then

170
00:07:13,539 --> 00:07:18,520
we're going to use funk as well Splunk

171
00:07:16,270 --> 00:07:20,258
is obviously not free in the

172
00:07:18,520 --> 00:07:22,568
organization I work for that was a tool

173
00:07:20,259 --> 00:07:24,520
that was available but you can follow

174
00:07:22,569 --> 00:07:26,469
this same guide and just use like an elk

175
00:07:24,520 --> 00:07:31,150
stock or something like that you can

176
00:07:26,469 --> 00:07:32,830
yeah do the same thing without this is

177
00:07:31,150 --> 00:07:35,830
kind of just a slide to shamelessly

178
00:07:32,830 --> 00:07:38,139
stole off presentation mark did at RSA

179
00:07:35,830 --> 00:07:40,810
and it breaks down the different things

180
00:07:38,139 --> 00:07:43,270
it's this one is capable of detecting on

181
00:07:40,810 --> 00:07:45,729
a Windows endpoint so you can see there

182
00:07:43,270 --> 00:07:48,068
your process creation fly all creations

183
00:07:45,729 --> 00:07:51,068
network connections a whole bunch of

184
00:07:48,069 --> 00:07:52,599
different things there that's a really

185
00:07:51,069 --> 00:07:53,760
good presentation as well so if you're

186
00:07:52,599 --> 00:07:56,870
interested in looking at this

187
00:07:53,760 --> 00:07:56,870
further check that one out

188
00:07:57,960 --> 00:08:04,169
so miter attack framework is is a yeah

189
00:08:01,650 --> 00:08:08,039
been a very popular thing I suppose over

190
00:08:04,170 --> 00:08:10,680
the past year and a lot of industries a

191
00:08:08,040 --> 00:08:12,960
lot of organizations are trying to align

192
00:08:10,680 --> 00:08:15,860
themselves to it in terms of being able

193
00:08:12,960 --> 00:08:18,750
to detect what threat actors are doing

194
00:08:15,860 --> 00:08:22,050
and basically it's just a really helpful

195
00:08:18,750 --> 00:08:25,200
framework of mapping out the different

196
00:08:22,050 --> 00:08:27,420
kind of TTP's you're seeing when you're

197
00:08:25,200 --> 00:08:28,890
understanding a particular incident or a

198
00:08:27,420 --> 00:08:31,710
particular threat actor in your

199
00:08:28,890 --> 00:08:34,080
environment and so someone's actually

200
00:08:31,710 --> 00:08:35,669
mapped out sis Mons detection

201
00:08:34,080 --> 00:08:38,070
capabilities to the attack mitre

202
00:08:35,669 --> 00:08:41,130
framework and this is a common one

203
00:08:38,070 --> 00:08:42,720
you'll see that vendors will also do the

204
00:08:41,130 --> 00:08:45,600
same thing as they'll map out their

205
00:08:42,720 --> 00:08:47,640
capabilities and it's it's a way that

206
00:08:45,600 --> 00:08:49,370
you can kind of compare it's not it's

207
00:08:47,640 --> 00:08:52,410
not the best way of doing it because

208
00:08:49,370 --> 00:08:54,030
each of those little boxes is quite

209
00:08:52,410 --> 00:08:58,980
general and there's multiple different

210
00:08:54,030 --> 00:09:01,230
ways that you can detect those things so

211
00:08:58,980 --> 00:09:03,720
you can bypass it even if it comes up on

212
00:09:01,230 --> 00:09:05,850
here but nonetheless this is a free tool

213
00:09:03,720 --> 00:09:07,860
that someone's mapped out a really

214
00:09:05,850 --> 00:09:11,400
helpful config that maps to the attack

215
00:09:07,860 --> 00:09:13,800
might a framework and what that

216
00:09:11,400 --> 00:09:15,720
basically looks like looks like is

217
00:09:13,800 --> 00:09:18,900
there's just an XML config the loads

218
00:09:15,720 --> 00:09:21,090
into that system on binary and if we

219
00:09:18,900 --> 00:09:23,490
just look at the first line there where

220
00:09:21,090 --> 00:09:25,380
it says image condition you can see the

221
00:09:23,490 --> 00:09:27,810
name there which is the technique that's

222
00:09:25,380 --> 00:09:30,540
from the attack model and you can see

223
00:09:27,810 --> 00:09:32,670
what it's what it's looking for so it's

224
00:09:30,540 --> 00:09:33,500
looking for when W script is being

225
00:09:32,670 --> 00:09:37,140
spawned

226
00:09:33,500 --> 00:09:38,700
process creates so we can see that

227
00:09:37,140 --> 00:09:39,569
that's what we want to be logging and

228
00:09:38,700 --> 00:09:43,290
that could be something that's

229
00:09:39,570 --> 00:09:45,720
interesting so that's that's collecting

230
00:09:43,290 --> 00:09:48,030
a whole bunch of kind of rich telemetry

231
00:09:45,720 --> 00:09:50,700
from windows endpoints but that's stored

232
00:09:48,030 --> 00:09:53,490
locally so it's essentially like a local

233
00:09:50,700 --> 00:09:55,470
cache in your Windows Event log which is

234
00:09:53,490 --> 00:09:58,230
not really that great you want to be

235
00:09:55,470 --> 00:10:00,000
able to collect all that endpoint data

236
00:09:58,230 --> 00:10:01,710
from all your workstations all your

237
00:10:00,000 --> 00:10:03,930
servers you want to feed it into one

238
00:10:01,710 --> 00:10:06,529
location because that's when you start

239
00:10:03,930 --> 00:10:10,120
to do things like big data and

240
00:10:06,529 --> 00:10:12,889
and data leaks and buzzwords across that

241
00:10:10,120 --> 00:10:14,749
information and you can do some really

242
00:10:12,889 --> 00:10:17,389
interesting thing when you're pulling in

243
00:10:14,749 --> 00:10:19,189
all that information one of the ways you

244
00:10:17,389 --> 00:10:22,329
can do that is you can use a Windows

245
00:10:19,189 --> 00:10:25,998
service called windows event forwarding

246
00:10:22,329 --> 00:10:27,739
and basically it's just a native service

247
00:10:25,999 --> 00:10:29,749
that's built into Windows that allows

248
00:10:27,740 --> 00:10:32,420
you to forward logs from your Windows

249
00:10:29,749 --> 00:10:35,870
Event log to a Windows Event collector

250
00:10:32,420 --> 00:10:38,360
which can just be yeah any server that

251
00:10:35,870 --> 00:10:41,439
you want and it's it's a quite quite

252
00:10:38,360 --> 00:10:43,370
simple to set up if you've got an ad

253
00:10:41,439 --> 00:10:45,740
infrastructure kind of set up it's just

254
00:10:43,370 --> 00:10:47,720
yeah really easy to get going and to

255
00:10:45,740 --> 00:10:51,470
start passing logs it's just a matter of

256
00:10:47,720 --> 00:10:52,399
setting up some GPO and then what we're

257
00:10:51,470 --> 00:10:54,230
going to have is on that event

258
00:10:52,399 --> 00:10:57,139
collectors server that's kind of

259
00:10:54,230 --> 00:11:01,069
collecting all those logs will have will

260
00:10:57,139 --> 00:11:02,899
have Splunk and then Splunk will be able

261
00:11:01,069 --> 00:11:07,009
to ingest all the logs from the event

262
00:11:02,899 --> 00:11:09,079
collector so we are now collecting all

263
00:11:07,009 --> 00:11:11,779
those system on logs we're storing them

264
00:11:09,079 --> 00:11:14,540
in Splunk so now we can query those two

265
00:11:11,779 --> 00:11:16,850
our logs as much as we want and run

266
00:11:14,540 --> 00:11:17,750
real-time searches and get real-time

267
00:11:16,850 --> 00:11:20,269
alerting

268
00:11:17,750 --> 00:11:23,870
so the first search we have on the top

269
00:11:20,269 --> 00:11:25,910
there is using a DMA from Splunk because

270
00:11:23,870 --> 00:11:27,829
when you're ingesting lots of data it

271
00:11:25,910 --> 00:11:29,180
can be helpful to use the accelerated

272
00:11:27,829 --> 00:11:31,008
data models because it will make it go

273
00:11:29,180 --> 00:11:33,500
away quicker and you can run your

274
00:11:31,009 --> 00:11:35,180
searches more often and basically what

275
00:11:33,500 --> 00:11:38,720
you can see there is so your process

276
00:11:35,180 --> 00:11:40,519
stop process Eagles start PowerShell and

277
00:11:38,720 --> 00:11:44,990
it's looking for when the command line

278
00:11:40,519 --> 00:11:47,629
contains a - e - e NC so basically it's

279
00:11:44,990 --> 00:11:52,160
looking for when your users are using

280
00:11:47,629 --> 00:11:54,170
encoded PowerShell commands this can

281
00:11:52,160 --> 00:11:55,339
obviously bring up quite a lot of false

282
00:11:54,170 --> 00:11:57,649
positives if you're in a large

283
00:11:55,339 --> 00:12:01,250
organization you've got a lot of admins

284
00:11:57,649 --> 00:12:03,470
that like using PowerShell so below that

285
00:12:01,250 --> 00:12:06,499
we've got a bit of a lookup table where

286
00:12:03,470 --> 00:12:09,050
we can manage those exclusions yeah if

287
00:12:06,499 --> 00:12:11,870
you're not managing exclusions when

288
00:12:09,050 --> 00:12:15,859
you're using something like sis Mon it's

289
00:12:11,870 --> 00:12:18,589
gonna be yeah alert City so you've got

290
00:12:15,860 --> 00:12:20,630
to manage manage those false positives

291
00:12:18,589 --> 00:12:26,449
as well below that we've

292
00:12:20,630 --> 00:12:29,120
and I'll alert for where processes are

293
00:12:26,449 --> 00:12:30,769
interacting with sis Mon so this is kind

294
00:12:29,120 --> 00:12:33,529
of the typical thing security schools

295
00:12:30,769 --> 00:12:35,389
will do on endpoints is they want to

296
00:12:33,529 --> 00:12:37,459
actually monitor their own their own

297
00:12:35,389 --> 00:12:39,410
stuff so if you see an attack

298
00:12:37,459 --> 00:12:42,319
interacting with sis Mon or trying to

299
00:12:39,410 --> 00:12:44,949
dump the config that this one has you'll

300
00:12:42,319 --> 00:12:47,420
be able to reverse on that as well and

301
00:12:44,949 --> 00:12:49,639
then the one below that is kind of a

302
00:12:47,420 --> 00:12:52,430
very typical one you'll see for the

303
00:12:49,639 --> 00:12:56,170
spearfishing so it's just looking for

304
00:12:52,430 --> 00:13:01,489
macro office documents so where you have

305
00:12:56,170 --> 00:13:03,439
win word excel powerpoint spawning CMD

306
00:13:01,490 --> 00:13:05,600
or powershell it's going to create a lot

307
00:13:03,440 --> 00:13:08,269
for that again this is something that

308
00:13:05,600 --> 00:13:10,160
can create false positives I've seen a

309
00:13:08,269 --> 00:13:12,800
lot of really interesting things people

310
00:13:10,160 --> 00:13:14,449
are doing with Excel and macros and some

311
00:13:12,800 --> 00:13:16,459
really funky stuff where they're pinging

312
00:13:14,449 --> 00:13:19,459
servers and pulling down data from

313
00:13:16,459 --> 00:13:21,469
servers within an Excel spreadsheet so

314
00:13:19,459 --> 00:13:24,768
got to look out for that stuff and

315
00:13:21,470 --> 00:13:26,509
manage those exclusions as well and this

316
00:13:24,769 --> 00:13:29,209
is just looking at the process create

317
00:13:26,509 --> 00:13:31,670
event so this is one of those eighteen

318
00:13:29,209 --> 00:13:33,439
different things that system on logs so

319
00:13:31,670 --> 00:13:38,479
there's a whole bunch of stuff that you

320
00:13:33,439 --> 00:13:40,099
can be detecting with this this is quite

321
00:13:38,480 --> 00:13:42,079
an interesting one we were doing which

322
00:13:40,100 --> 00:13:44,720
actually kind of pushes into the realms

323
00:13:42,079 --> 00:13:46,310
of your traditional way these stuff and

324
00:13:44,720 --> 00:13:48,079
basically what this is doing is it's

325
00:13:46,310 --> 00:13:52,160
looking at all the processes that are

326
00:13:48,079 --> 00:13:54,380
running and are being detected by system

327
00:13:52,160 --> 00:13:56,269
on and being passed up to Splunk and

328
00:13:54,380 --> 00:13:58,250
then it's actually going out to virus

329
00:13:56,269 --> 00:14:00,920
total and checking those hashes of the

330
00:13:58,250 --> 00:14:03,319
processes and this is interesting for a

331
00:14:00,920 --> 00:14:05,689
few reasons because your traditional AV

332
00:14:03,319 --> 00:14:08,209
approach is scan everything on the hard

333
00:14:05,689 --> 00:14:10,550
drive whereas this is only looking at

334
00:14:08,209 --> 00:14:13,939
stuff that's actually running on the end

335
00:14:10,550 --> 00:14:16,250
point so this will create essentially a

336
00:14:13,939 --> 00:14:18,290
big database of all the software that's

337
00:14:16,250 --> 00:14:19,430
running on your computer and it's going

338
00:14:18,290 --> 00:14:22,009
to then be checking that against

339
00:14:19,430 --> 00:14:23,000
virustotal so instead of getting one AV

340
00:14:22,009 --> 00:14:27,110
vendor to check it you're actually

341
00:14:23,000 --> 00:14:30,740
getting 70 and so what that looks like

342
00:14:27,110 --> 00:14:32,449
is a dashboard that can be kind of

343
00:14:30,740 --> 00:14:34,270
pretty it's got dark theme which makes

344
00:14:32,449 --> 00:14:35,709
it even cooler

345
00:14:34,270 --> 00:14:37,540
but you'll see at the table at the

346
00:14:35,709 --> 00:14:40,420
bottom we've got some detections from

347
00:14:37,540 --> 00:14:42,279
virustotal and these particular files

348
00:14:40,420 --> 00:14:44,140
don't actually have the company

349
00:14:42,279 --> 00:14:46,779
description or file versions filled in

350
00:14:44,140 --> 00:14:51,220
which there is question marks so they

351
00:14:46,779 --> 00:14:54,070
could be interesting to look at you'll

352
00:14:51,220 --> 00:14:55,690
also see fields like what you can do is

353
00:14:54,070 --> 00:14:58,300
you can look at rare companies and rare

354
00:14:55,690 --> 00:14:59,649
products that this one is detecting so

355
00:14:58,300 --> 00:15:02,459
if you've got a lot of developers in

356
00:14:59,649 --> 00:15:05,020
your organization they can often put in

357
00:15:02,459 --> 00:15:08,829
strange fields for these when they're

358
00:15:05,020 --> 00:15:11,050
compiling their binaries but it can also

359
00:15:08,830 --> 00:15:14,020
be something too interesting to look at

360
00:15:11,050 --> 00:15:16,000
as well that viruses can often have

361
00:15:14,020 --> 00:15:17,800
different things another thing that's

362
00:15:16,000 --> 00:15:20,140
interesting with this is where there's a

363
00:15:17,800 --> 00:15:22,719
file that's not in virustotal

364
00:15:20,140 --> 00:15:23,920
that can also be a good thing to have a

365
00:15:22,720 --> 00:15:26,260
look at because if it's not in

366
00:15:23,920 --> 00:15:28,510
virustotal it might be a a non-standard

367
00:15:26,260 --> 00:15:32,680
file at someone's compiled or it could

368
00:15:28,510 --> 00:15:34,149
be malware as well yeah the amount of

369
00:15:32,680 --> 00:15:36,189
things that you can do with this data

370
00:15:34,149 --> 00:15:37,750
that's being collected is huge one of

371
00:15:36,190 --> 00:15:39,459
the things that I want to do in the

372
00:15:37,750 --> 00:15:42,190
coming month is look at how we can

373
00:15:39,459 --> 00:15:44,290
leverage the system on data to do

374
00:15:42,190 --> 00:15:45,910
vulnerability management because one of

375
00:15:44,290 --> 00:15:47,529
the things this actually captures is it

376
00:15:45,910 --> 00:15:50,350
captures is the file versions of

377
00:15:47,529 --> 00:15:52,630
binaries so if you have you know there's

378
00:15:50,350 --> 00:15:55,300
a vulnerability in a particular program

379
00:15:52,630 --> 00:15:57,760
like Adobe you can see Adobe running

380
00:15:55,300 --> 00:15:59,319
with a specific vial version and then

381
00:15:57,760 --> 00:16:01,510
you're able to sit cross-reference that

382
00:15:59,320 --> 00:16:04,149
with a database and you could see that

383
00:16:01,510 --> 00:16:06,160
it's potentially vulnerable so there's a

384
00:16:04,149 --> 00:16:11,470
lot of really interesting things you can

385
00:16:06,160 --> 00:16:16,209
do with this another thing you can do is

386
00:16:11,470 --> 00:16:18,640
do some kind of process trees my HTML

387
00:16:16,209 --> 00:16:21,219
and java scripts pretty sketchy so it's

388
00:16:18,640 --> 00:16:22,870
not the previous interface but basically

389
00:16:21,220 --> 00:16:26,410
what you can see there is you can see a

390
00:16:22,870 --> 00:16:28,149
windward at the top opening a macro doc

391
00:16:26,410 --> 00:16:30,370
spawning power show you get to see the

392
00:16:28,149 --> 00:16:33,100
command line parameters and then you get

393
00:16:30,370 --> 00:16:34,839
to see the persistence mechanisms being

394
00:16:33,100 --> 00:16:38,110
put in place and the different commands

395
00:16:34,839 --> 00:16:40,540
that an attacker is using so this can be

396
00:16:38,110 --> 00:16:43,209
helpful to kind of visually see what's

397
00:16:40,540 --> 00:16:45,959
going on when you're investigating for

398
00:16:43,209 --> 00:16:48,029
certain things instead of just seeing

399
00:16:45,959 --> 00:16:49,619
so that can be a good one to look at and

400
00:16:48,029 --> 00:16:52,079
that was all I did for that was just

401
00:16:49,620 --> 00:16:54,480
found like a an apple and spunk base and

402
00:16:52,079 --> 00:16:57,269
just modified it a bit to do what I

403
00:16:54,480 --> 00:16:58,920
wanted I mean like you'll notice a lot

404
00:16:57,269 --> 00:17:01,380
of these things I've kind of just copied

405
00:16:58,920 --> 00:17:03,630
lots of things of Splunk base or from

406
00:17:01,380 --> 00:17:05,459
other people and then just modified them

407
00:17:03,630 --> 00:17:08,309
slightly to do what I want and that's

408
00:17:05,459 --> 00:17:10,049
kind of the premise of this is a lot of

409
00:17:08,309 --> 00:17:11,939
these kind of different things is you

410
00:17:10,049 --> 00:17:13,069
can just spend a bit of time and look at

411
00:17:11,939 --> 00:17:15,569
building it yourself

412
00:17:13,069 --> 00:17:17,730
so that's on that's on the detection

413
00:17:15,569 --> 00:17:19,260
side of things so with with this one we

414
00:17:17,730 --> 00:17:21,179
were able to pull that rich stuff from

415
00:17:19,260 --> 00:17:22,919
endpoints we're able to run those

416
00:17:21,179 --> 00:17:25,049
analytics on it from Splunk

417
00:17:22,919 --> 00:17:27,329
and we're able to visualize and do

418
00:17:25,049 --> 00:17:31,408
different things once it's in there so

419
00:17:27,329 --> 00:17:33,720
what about the response capabilities so

420
00:17:31,409 --> 00:17:35,789
there's a few different free options

421
00:17:33,720 --> 00:17:37,650
there's not much so ger is a common one

422
00:17:35,789 --> 00:17:41,340
this is a tool that Google developed a

423
00:17:37,650 --> 00:17:43,350
number of years ago it's got some yeah

424
00:17:41,340 --> 00:17:47,820
some really good features however it can

425
00:17:43,350 --> 00:17:51,059
be a bit of a high maintenance one so

426
00:17:47,820 --> 00:17:55,379
there is that incident responders often

427
00:17:51,059 --> 00:17:57,210
use PowerShell PS exec if you realize

428
00:17:55,380 --> 00:17:59,880
the again you might just set up an

429
00:17:57,210 --> 00:18:02,039
automatic rebuild from SCCM so you can

430
00:17:59,880 --> 00:18:06,470
trigger that at will on endpoints that

431
00:18:02,039 --> 00:18:08,879
are infected but what do we want to do

432
00:18:06,470 --> 00:18:10,890
we want to be able to take a dump

433
00:18:08,880 --> 00:18:13,250
taking your dump shouldn't be difficult

434
00:18:10,890 --> 00:18:16,350
but it often is for incident responders

435
00:18:13,250 --> 00:18:18,270
how many yeah how many people here could

436
00:18:16,350 --> 00:18:20,219
probably say that they can remotely take

437
00:18:18,270 --> 00:18:23,370
a memory dump of any end point in their

438
00:18:20,220 --> 00:18:26,250
organization it's often a difficult

439
00:18:23,370 --> 00:18:30,299
thing it's often a hard thing but it

440
00:18:26,250 --> 00:18:32,460
shouldn't necessarily be and with some

441
00:18:30,299 --> 00:18:33,870
vendors yeah with some EDR vendors who

442
00:18:32,460 --> 00:18:36,090
are in the cloud there's there's

443
00:18:33,870 --> 00:18:38,699
significant issues with with trying to

444
00:18:36,090 --> 00:18:40,139
do things like this as well but you want

445
00:18:38,700 --> 00:18:42,659
to be able to do things like remotely

446
00:18:40,140 --> 00:18:47,960
contain endpoints kill processes copy

447
00:18:42,659 --> 00:18:47,960
files and run custom tools and scripts

448
00:18:48,110 --> 00:18:56,428
if you do use PowerShell and PS exec an

449
00:18:52,049 --> 00:18:58,139
RDP for responding to incidents as if a

450
00:18:56,429 --> 00:18:59,360
few things are supposed to be cautious

451
00:18:58,140 --> 00:19:01,460
of when you're doing that in

452
00:18:59,360 --> 00:19:04,250
is you maybe introducing privileged

453
00:19:01,460 --> 00:19:07,960
credentials onto endpoints that are

454
00:19:04,250 --> 00:19:10,220
potentially compromised so this is a

455
00:19:07,960 --> 00:19:12,070
table that sans put up in one of their

456
00:19:10,220 --> 00:19:15,050
courses and it's a really helpful

457
00:19:12,070 --> 00:19:18,379
visualization of when you might be

458
00:19:15,050 --> 00:19:20,629
storing your credentials on endpoints

459
00:19:18,380 --> 00:19:22,580
so if you're using RDP and there's no

460
00:19:20,630 --> 00:19:24,290
credential guard that's quite trivial

461
00:19:22,580 --> 00:19:27,020
for attackers to then pull your

462
00:19:24,290 --> 00:19:29,050
credentials even if you are using

463
00:19:27,020 --> 00:19:31,340
PowerShell remoting

464
00:19:29,050 --> 00:19:33,470
just be cautious that you're creating

465
00:19:31,340 --> 00:19:35,030
your user profile when you do remoting

466
00:19:33,470 --> 00:19:37,520
even if the credentials are not

467
00:19:35,030 --> 00:19:40,040
necessarily accessible and that may be

468
00:19:37,520 --> 00:19:42,260
something that could alert someone to to

469
00:19:40,040 --> 00:19:44,510
your presence in terms of investigating

470
00:19:42,260 --> 00:19:48,260
that system so that's something to be

471
00:19:44,510 --> 00:19:50,780
aware of as well so what are we going to

472
00:19:48,260 --> 00:19:55,640
use we're going to leverage a system

473
00:19:50,780 --> 00:19:59,750
process that is deployed on yeah most of

474
00:19:55,640 --> 00:20:02,420
the endpoints in the organization using

475
00:19:59,750 --> 00:20:05,720
yeah McAfee age and so McAfee agents not

476
00:20:02,420 --> 00:20:07,429
actually the AV component it's a it's

477
00:20:05,720 --> 00:20:10,420
just the agent bit which manages the

478
00:20:07,429 --> 00:20:14,240
installs of different McAfee products

479
00:20:10,420 --> 00:20:16,730
it's a really reliable really quick tool

480
00:20:14,240 --> 00:20:18,170
that they've they've set up and what

481
00:20:16,730 --> 00:20:21,350
we're going to do is we're going to use

482
00:20:18,170 --> 00:20:24,320
a package deploy a tool that some guy

483
00:20:21,350 --> 00:20:27,469
developed that allows us to put custom

484
00:20:24,320 --> 00:20:30,980
applications into our EPO and then

485
00:20:27,470 --> 00:20:35,030
deploy them via an API to endpoints in

486
00:20:30,980 --> 00:20:36,650
our organization and the other thing to

487
00:20:35,030 --> 00:20:38,330
know yeah and if you've got Splunk and

488
00:20:36,650 --> 00:20:39,950
you've got spunky Universal forwarders

489
00:20:38,330 --> 00:20:42,320
everywhere you can do exactly the same

490
00:20:39,950 --> 00:20:44,390
thing in there and a lot of other big

491
00:20:42,320 --> 00:20:47,928
a/v players will have a similar tool

492
00:20:44,390 --> 00:20:49,670
built into their agents so you can

493
00:20:47,929 --> 00:20:52,670
deploy custom apps as well but in this

494
00:20:49,670 --> 00:20:54,320
case we're just going to use McAfee so

495
00:20:52,670 --> 00:20:57,860
we've got a really beautiful interface

496
00:20:54,320 --> 00:21:00,169
here for the EE DK tool and this tool

497
00:20:57,860 --> 00:21:03,229
allows us to package up folders or files

498
00:21:00,170 --> 00:21:05,870
that we want to deploy onto endpoints in

499
00:21:03,230 --> 00:21:08,870
the organization when we require them to

500
00:21:05,870 --> 00:21:10,070
run certain tasks or interested in so in

501
00:21:08,870 --> 00:21:11,639
this case what we're going to do is

502
00:21:10,070 --> 00:21:13,020
we're going to package up a tool called

503
00:21:11,640 --> 00:21:15,360
autoruns which is from the system

504
00:21:13,020 --> 00:21:18,150
terminal sweet it's a tool that will

505
00:21:15,360 --> 00:21:22,560
look for common persistence mechanisms

506
00:21:18,150 --> 00:21:24,180
for four processes on Windows and then

507
00:21:22,560 --> 00:21:27,620
what we're going to do is we're somehow

508
00:21:24,180 --> 00:21:27,620
going to get that back into Splunk

509
00:21:30,470 --> 00:21:37,830
so the edk cool you have to point it at

510
00:21:34,650 --> 00:21:42,240
a particular file to run unfortunately

511
00:21:37,830 --> 00:21:43,860
you can only run CMD files or X's so

512
00:21:42,240 --> 00:21:45,870
that can be a bit frustrating so we've

513
00:21:43,860 --> 00:21:47,399
basically just got this is the CMD file

514
00:21:45,870 --> 00:21:48,510
here and it's pretty much just pointing

515
00:21:47,400 --> 00:21:51,180
to a PowerShell file

516
00:21:48,510 --> 00:21:52,860
there's a whole bunch of logging code in

517
00:21:51,180 --> 00:21:54,710
there which is kind of irrelevant but

518
00:21:52,860 --> 00:21:58,620
it's just calling in PowerShell file

519
00:21:54,710 --> 00:22:00,240
this is the PowerShell file again this

520
00:21:58,620 --> 00:22:04,320
is just something took off the internet

521
00:22:00,240 --> 00:22:07,740
it's just a like a syslog script so you

522
00:22:04,320 --> 00:22:09,419
can use this PowerShell to set up syslog

523
00:22:07,740 --> 00:22:10,860
and so what we're going to be doing is

524
00:22:09,420 --> 00:22:13,190
we're going to be running the order runs

525
00:22:10,860 --> 00:22:15,899
binary that which is just in line 15

526
00:22:13,190 --> 00:22:17,100
we're going to output it to a CSV and

527
00:22:15,900 --> 00:22:19,320
then what we're going to do is we're

528
00:22:17,100 --> 00:22:22,379
going to stream those results to our

529
00:22:19,320 --> 00:22:24,389
Splunk server and then we're going to be

530
00:22:22,380 --> 00:22:28,770
able to see those results being streamed

531
00:22:24,390 --> 00:22:30,870
into Splunk and the thing with this is

532
00:22:28,770 --> 00:22:33,389
once you've done this once you can

533
00:22:30,870 --> 00:22:36,030
pretty much just deploy any IR tool that

534
00:22:33,390 --> 00:22:38,190
you fancy any free tool that you find

535
00:22:36,030 --> 00:22:40,170
you can package it up if you can output

536
00:22:38,190 --> 00:22:42,420
it to a CSV you can throw it in this

537
00:22:40,170 --> 00:22:44,870
script and you can actually just be

538
00:22:42,420 --> 00:22:48,510
streaming logs straight into Splunk

539
00:22:44,870 --> 00:22:51,060
which is which is pretty cool so what

540
00:22:48,510 --> 00:22:54,960
that looks like an EPO is you set it up

541
00:22:51,060 --> 00:22:58,860
in EPO upload it you set up a client

542
00:22:54,960 --> 00:23:01,380
task which allows you to then use the

543
00:22:58,860 --> 00:23:04,350
API to deploy the application that

544
00:23:01,380 --> 00:23:05,250
you've packaged this is on the spunk

545
00:23:04,350 --> 00:23:07,260
side of things

546
00:23:05,250 --> 00:23:10,020
not sure how easy that's going to be to

547
00:23:07,260 --> 00:23:12,660
read but yeah it's just some Python

548
00:23:10,020 --> 00:23:16,560
stuff to actually hit that API and you

549
00:23:12,660 --> 00:23:18,930
can trigger that from a search what that

550
00:23:16,560 --> 00:23:20,879
looks like in Splunk is is just a kind

551
00:23:18,930 --> 00:23:23,850
of a simple interface where you type in

552
00:23:20,880 --> 00:23:25,380
the host name of the device and you ty

553
00:23:23,850 --> 00:23:27,060
you select a particular

554
00:23:25,380 --> 00:23:29,610
a tool that you want to run so this is

555
00:23:27,060 --> 00:23:31,590
just a subset of tools that we've done

556
00:23:29,610 --> 00:23:34,320
but it gives you an idea of some of the

557
00:23:31,590 --> 00:23:38,159
kind of capabilities you can package up

558
00:23:34,320 --> 00:23:41,700
into this tool and deploy this is it

559
00:23:38,160 --> 00:23:43,980
running on actual end point so this is

560
00:23:41,700 --> 00:23:46,140
just the the Mac of the agent log so you

561
00:23:43,980 --> 00:23:50,820
can see how it's kind of downloading the

562
00:23:46,140 --> 00:23:52,320
files and then executing them and then

563
00:23:50,820 --> 00:23:55,260
this is the results that are being

564
00:23:52,320 --> 00:23:57,419
streamed into Splunk so you've got kind

565
00:23:55,260 --> 00:23:59,160
of just a message status at the top

566
00:23:57,420 --> 00:24:01,020
you've got that middle panel there which

567
00:23:59,160 --> 00:24:04,110
is looking for suspicious the outputs of

568
00:24:01,020 --> 00:24:06,629
the results so you can see there that

569
00:24:04,110 --> 00:24:09,060
there's some sketchy VDS that's going to

570
00:24:06,630 --> 00:24:11,970
be running when that particular user

571
00:24:09,060 --> 00:24:17,639
logs on so that can be quite interesting

572
00:24:11,970 --> 00:24:20,940
to look at this is a POC icon I did yeah

573
00:24:17,640 --> 00:24:23,520
we don't use this in our environment but

574
00:24:20,940 --> 00:24:26,670
basically one of the things that kind of

575
00:24:23,520 --> 00:24:28,680
see flaunt it a bit with the EDR

576
00:24:26,670 --> 00:24:31,470
solutions is that the ability to

577
00:24:28,680 --> 00:24:34,200
essentially just get reversed shells on

578
00:24:31,470 --> 00:24:36,120
your endpoints in a secure fashion and

579
00:24:34,200 --> 00:24:38,940
be able to respond to the advanced

580
00:24:36,120 --> 00:24:40,919
threats in that way so basically I just

581
00:24:38,940 --> 00:24:45,420
did the same thing so I packaged up a

582
00:24:40,920 --> 00:24:47,310
reverse shell into EPO I then did some

583
00:24:45,420 --> 00:24:49,170
stuff on the Splunk server so it could

584
00:24:47,310 --> 00:24:51,990
accept the connections and then I've

585
00:24:49,170 --> 00:24:54,440
passed it through to the Splunk GUI so

586
00:24:51,990 --> 00:24:58,680
you've kind of got a nice HTML interface

587
00:24:54,440 --> 00:25:02,190
for managing endpoints and and cleaning

588
00:24:58,680 --> 00:25:04,830
up endpoints and again this was just an

589
00:25:02,190 --> 00:25:07,110
app that I took off Splunk base and just

590
00:25:04,830 --> 00:25:08,570
modify it a bit to get it to do what I

591
00:25:07,110 --> 00:25:13,379
want

592
00:25:08,570 --> 00:25:16,080
so let's um let's crack into a demo it's

593
00:25:13,380 --> 00:25:20,340
it's probably a bit of an unnecessarily

594
00:25:16,080 --> 00:25:21,750
complicated demo we've got four VMs so

595
00:25:20,340 --> 00:25:24,510
we're going to load those up and try and

596
00:25:21,750 --> 00:25:26,340
the reason why I did it this way is

597
00:25:24,510 --> 00:25:28,440
because I wanted to make it a bit more

598
00:25:26,340 --> 00:25:31,169
realistic for what this kind of

599
00:25:28,440 --> 00:25:33,060
architecture looks like in environments

600
00:25:31,170 --> 00:25:36,510
as opposed to just doing it on a single

601
00:25:33,060 --> 00:25:39,299
VM so basically what we've got here is

602
00:25:36,510 --> 00:25:40,529
we've got four VMs we've got a Kali

603
00:25:39,299 --> 00:25:43,230
which is just going to be your attacker

604
00:25:40,529 --> 00:25:46,499
we've got a McAfee EPO which is a 2016

605
00:25:43,230 --> 00:25:49,080
server CentOS which is just your spunk

606
00:25:46,499 --> 00:25:53,190
box and then we've just got a standard

607
00:25:49,080 --> 00:25:55,559
workstation so we'll just have to just

608
00:25:53,190 --> 00:25:59,460
have to wait for all those to load up we

609
00:25:55,559 --> 00:26:01,649
should just take a seconds so we got our

610
00:25:59,460 --> 00:26:05,970
Carley box here it's just going to be a

611
00:26:01,649 --> 00:26:09,119
typical kinder spearfishing scenario so

612
00:26:05,970 --> 00:26:11,070
we've just got a basic listen fer kind

613
00:26:09,119 --> 00:26:22,080
of ready to go so let's just get that

614
00:26:11,070 --> 00:26:26,639
listening and we'll just wait for the

615
00:26:22,080 --> 00:26:27,539
the wind 10 workstation to spin up but

616
00:26:26,639 --> 00:26:29,129
yeah we're just going to go through

617
00:26:27,539 --> 00:26:32,009
spearfishing so there's just going to be

618
00:26:29,129 --> 00:26:33,149
an email that it uses receives that's

619
00:26:32,009 --> 00:26:40,409
going to be a very sophisticated

620
00:26:33,149 --> 00:26:42,359
phishing email so the users going to see

621
00:26:40,409 --> 00:26:44,850
this and they're automatically going to

622
00:26:42,359 --> 00:26:50,039
want to open that invoicing and check

623
00:26:44,850 --> 00:26:52,619
what's inside so let's let's just go

624
00:26:50,039 --> 00:26:56,570
through this and we'll see if stuff

625
00:26:52,619 --> 00:27:01,070
works so yep just kind of a typical one

626
00:26:56,570 --> 00:27:01,070
I'll just go through and ignore all that

627
00:27:01,700 --> 00:27:06,840
so yep the user's seen nothing they

628
00:27:04,440 --> 00:27:09,830
probably don't think much of it and

629
00:27:06,840 --> 00:27:12,379
probably just close it off and ignore it

630
00:27:09,830 --> 00:27:16,259
but if we jump back to our meterpreter

631
00:27:12,379 --> 00:27:17,549
thing we've got a full session now and

632
00:27:16,259 --> 00:27:19,830
so one of the things the attack and

633
00:27:17,549 --> 00:27:21,629
might want to do is is set up some

634
00:27:19,830 --> 00:27:23,759
persistence so we can just use some

635
00:27:21,629 --> 00:27:26,340
scripts in meterpreter that make this

636
00:27:23,759 --> 00:27:28,139
really easy and basically what it's

637
00:27:26,340 --> 00:27:33,689
doing here is you can see that it's

638
00:27:28,139 --> 00:27:35,879
using C scripts to execute a VBS but

639
00:27:33,690 --> 00:27:39,119
it's also storing or creating a key in

640
00:27:35,879 --> 00:27:46,289
registry that's going to execute when

641
00:27:39,119 --> 00:27:48,269
the user logs on so maybe the other they

642
00:27:46,289 --> 00:27:51,869
want to run some commands maybe see what

643
00:27:48,269 --> 00:27:53,909
user context they're under or I don't

644
00:27:51,869 --> 00:27:56,129
know what their IP address is or

645
00:27:53,909 --> 00:28:02,429
something so you can just do all the

646
00:27:56,129 --> 00:28:06,330
normal kind of things in there so if we

647
00:28:02,429 --> 00:28:14,299
now go into going to Splunk we'll have a

648
00:28:06,330 --> 00:28:16,918
look and so it's going to custom edr up

649
00:28:14,299 --> 00:28:19,408
this is a free version of spunk so we

650
00:28:16,919 --> 00:28:21,600
can't do alerting so I've just created a

651
00:28:19,409 --> 00:28:23,279
dot dashboard but essentially you just

652
00:28:21,600 --> 00:28:25,289
have an alert that runs every five

653
00:28:23,279 --> 00:28:27,720
minutes or something like that

654
00:28:25,289 --> 00:28:31,169
and what we can see here is we can see

655
00:28:27,720 --> 00:28:32,789
firstly that technique that's being from

656
00:28:31,169 --> 00:28:34,470
the attack my framework so you get to

657
00:28:32,789 --> 00:28:37,649
see that you get to see windward

658
00:28:34,470 --> 00:28:39,299
spawning PowerShell XE and then you get

659
00:28:37,649 --> 00:28:41,489
to see the command-line parameters that

660
00:28:39,299 --> 00:28:44,730
are being used and this is I made this

661
00:28:41,490 --> 00:28:46,679
intentionally pretty easy to to see I

662
00:28:44,730 --> 00:28:48,929
didn't encode it or anything like that

663
00:28:46,679 --> 00:28:52,139
so you can see what's happening but yeah

664
00:28:48,929 --> 00:28:54,299
it's pulling down boring dot HTML saving

665
00:28:52,139 --> 00:28:57,809
it as payload XE and then proceeding to

666
00:28:54,299 --> 00:28:59,759
run payload XE so from here we'd have a

667
00:28:57,809 --> 00:29:02,039
Splunk alert something that we can act

668
00:28:59,759 --> 00:29:05,580
on but it's it's an alert at a point in

669
00:29:02,039 --> 00:29:07,049
time and yeah if it was a v-day they

670
00:29:05,580 --> 00:29:08,580
might have blocked part of it and you

671
00:29:07,049 --> 00:29:13,190
get a block message and that's about it

672
00:29:08,580 --> 00:29:16,019
so if we look at say process persistence

673
00:29:13,190 --> 00:29:18,659
we can see yeah kind of what I showed

674
00:29:16,019 --> 00:29:22,289
before on the slides but yeah the

675
00:29:18,659 --> 00:29:26,429
payload XE two minutes ago I wrote a key

676
00:29:22,289 --> 00:29:29,519
and registry and it's just pointing to a

677
00:29:26,429 --> 00:29:32,279
VBS file so when that yeah again that

678
00:29:29,519 --> 00:29:35,820
computer logs on is that user that

679
00:29:32,279 --> 00:29:39,299
persistence is going to be triggered so

680
00:29:35,820 --> 00:29:42,779
what we can do then is we can kind of

681
00:29:39,299 --> 00:29:44,460
visualize what's just take in place so

682
00:29:42,779 --> 00:29:46,980
we get a bit of a process tree of the

683
00:29:44,460 --> 00:29:50,309
commands that have been run so we can

684
00:29:46,980 --> 00:29:53,669
see from the top here Windward running

685
00:29:50,309 --> 00:29:56,190
the macro doc PowerShell code we can see

686
00:29:53,669 --> 00:29:57,659
on this side of things the persistence

687
00:29:56,190 --> 00:29:59,940
is being set up and running the

688
00:29:57,659 --> 00:30:02,159
executable and as what we'd start to do

689
00:29:59,940 --> 00:30:03,250
is and incident responders we're

690
00:30:02,159 --> 00:30:05,140
probably wanting to

691
00:30:03,250 --> 00:30:08,710
start to take some notes of what's

692
00:30:05,140 --> 00:30:11,620
happened on the endpoint so we know what

693
00:30:08,710 --> 00:30:14,320
we need to go through and clean up so we

694
00:30:11,620 --> 00:30:17,080
can see here we definitely want to kill

695
00:30:14,320 --> 00:30:23,080
this process and we'll want to delete

696
00:30:17,080 --> 00:30:24,550
that file so let's make note of that and

697
00:30:23,080 --> 00:30:27,250
you get to see some of the other stuff

698
00:30:24,550 --> 00:30:28,960
that's been going on as well so we're

699
00:30:27,250 --> 00:30:31,120
probably going to want to clean up that

700
00:30:28,960 --> 00:30:33,070
registry key you can also see those

701
00:30:31,120 --> 00:30:35,110
network connections

702
00:30:33,070 --> 00:30:37,179
I think the ports as well so the file

703
00:30:35,110 --> 00:30:43,120
was pulled down on port 80 and they're

704
00:30:37,180 --> 00:30:45,250
reversed shells on 443 go to that and

705
00:30:43,120 --> 00:30:50,199
then there's that VBS file we also want

706
00:30:45,250 --> 00:30:52,270
to clean up so we've got a bit of an

707
00:30:50,200 --> 00:30:56,140
understanding of what's taken place on

708
00:30:52,270 --> 00:30:59,080
the endpoint we can see quite reasonably

709
00:30:56,140 --> 00:31:01,180
that it's what's taken place we can also

710
00:30:59,080 --> 00:31:03,370
see the commands that have been answered

711
00:31:01,180 --> 00:31:06,160
and the interesting thing with this is

712
00:31:03,370 --> 00:31:08,439
when you start to see where there's like

713
00:31:06,160 --> 00:31:11,110
four second gaps three second gaps or

714
00:31:08,440 --> 00:31:12,850
random gaps between the commands that

715
00:31:11,110 --> 00:31:15,729
may indicate that there's someone on a

716
00:31:12,850 --> 00:31:18,370
keyboard as opposed to a script so that

717
00:31:15,730 --> 00:31:20,800
can be something interesting to do so

718
00:31:18,370 --> 00:31:24,189
we're going to also want to kill C

719
00:31:20,800 --> 00:31:29,889
script because that's currently running

720
00:31:24,190 --> 00:31:32,050
that VBS file you can see here cool so

721
00:31:29,890 --> 00:31:33,310
instead of going into response straight

722
00:31:32,050 --> 00:31:37,450
away what we're going to do is we're

723
00:31:33,310 --> 00:31:39,159
going to deploy that autoruns tool just

724
00:31:37,450 --> 00:31:44,220
to show you how that works I've just got

725
00:31:39,160 --> 00:31:44,220
to copy the name of the computer first

726
00:31:50,970 --> 00:31:54,600
to show you what that what that kinda

727
00:31:53,040 --> 00:31:58,350
actually looks like so if we go down

728
00:31:54,600 --> 00:32:00,270
onto the McAfee agent here it's starting

729
00:31:58,350 --> 00:32:03,270
to pull down a package so that it

730
00:32:00,270 --> 00:32:06,240
triggers it within like 15 30 seconds or

731
00:32:03,270 --> 00:32:07,800
something it's crazy quick it's going to

732
00:32:06,240 --> 00:32:09,900
pull down that and then that's going to

733
00:32:07,800 --> 00:32:13,020
run so to show you what that looks like

734
00:32:09,900 --> 00:32:14,490
let's go on task manager we can see the

735
00:32:13,020 --> 00:32:15,840
order runs process here has been

736
00:32:14,490 --> 00:32:17,610
triggered that's the command ball and

737
00:32:15,840 --> 00:32:19,320
that's where it's running from so that's

738
00:32:17,610 --> 00:32:22,080
how McAfee is deploying it and running

739
00:32:19,320 --> 00:32:23,490
it and then what it's going to do is

740
00:32:22,080 --> 00:32:26,280
it's going to string those results to

741
00:32:23,490 --> 00:32:28,350
Splunk so we can see PowerShell here is

742
00:32:26,280 --> 00:32:30,210
the one that's running in so if we jump

743
00:32:28,350 --> 00:32:32,010
back to Splunk we can see that a message

744
00:32:30,210 --> 00:32:34,260
has been sent saying that it started to

745
00:32:32,010 --> 00:32:36,210
run that it's running and if there's

746
00:32:34,260 --> 00:32:39,900
some results coming back so if we just

747
00:32:36,210 --> 00:32:41,550
refresh this dashboard we're going to

748
00:32:39,900 --> 00:32:46,920
start to see some interesting things

749
00:32:41,550 --> 00:32:48,690
that auto runs has been pulling so right

750
00:32:46,920 --> 00:32:51,960
up the top here you get to see the most

751
00:32:48,690 --> 00:32:54,030
interesting one which was from how we

752
00:32:51,960 --> 00:32:57,270
set up persistence so it happened six

753
00:32:54,030 --> 00:32:59,100
minutes ago and what we could do here is

754
00:32:57,270 --> 00:33:01,139
we could then check the what system on

755
00:32:59,100 --> 00:33:03,719
has captured is the same as what auto

756
00:33:01,140 --> 00:33:07,350
runs is capturing and you'll see that

757
00:33:03,720 --> 00:33:09,720
those files match up you can also use

758
00:33:07,350 --> 00:33:11,580
this just to run randomly on endpoints

759
00:33:09,720 --> 00:33:14,700
and collect data and just Splunk and

760
00:33:11,580 --> 00:33:16,350
then take response based on that so

761
00:33:14,700 --> 00:33:18,780
there can be some interesting things

762
00:33:16,350 --> 00:33:20,340
that auto runs do but again you can just

763
00:33:18,780 --> 00:33:23,280
pack up whatever tools you want or

764
00:33:20,340 --> 00:33:25,040
whatever you use in IR and stream those

765
00:33:23,280 --> 00:33:28,559
results into Splunk

766
00:33:25,040 --> 00:33:30,389
so we've got that information we feel

767
00:33:28,559 --> 00:33:33,420
comfortable we know what's taken place

768
00:33:30,390 --> 00:33:35,970
on the endpoint the attacker still has

769
00:33:33,420 --> 00:33:37,860
their session so what we're going to

770
00:33:35,970 --> 00:33:40,980
want to do is well want to go and clean

771
00:33:37,860 --> 00:33:44,100
that up now so let's use the reverse

772
00:33:40,980 --> 00:33:46,850
shell we're going to deploy it to the

773
00:33:44,100 --> 00:33:49,290
desktop the workstation that we're on

774
00:33:46,850 --> 00:33:53,000
we're going to see that McAfee is going

775
00:33:49,290 --> 00:33:55,350
to proceed to deploy that if it works or

776
00:33:53,000 --> 00:33:57,809
we're waiting we can have a look at some

777
00:33:55,350 --> 00:34:00,059
banners that I've put in there you need

778
00:33:57,809 --> 00:34:02,160
some ASCII art if any cybersecurity

779
00:34:00,059 --> 00:34:02,870
tools they don't have ASCII are not real

780
00:34:02,160 --> 00:34:05,690
tools

781
00:34:02,870 --> 00:34:07,610
so you got to include that in there so

782
00:34:05,690 --> 00:34:10,129
that tool has now been deployed and is

783
00:34:07,610 --> 00:34:11,418
running so we could do all the typical

784
00:34:10,129 --> 00:34:14,000
things that you could do from like a

785
00:34:11,418 --> 00:34:15,500
command prompt window so you could run

786
00:34:14,000 --> 00:34:17,780
task list you could see all the

787
00:34:15,500 --> 00:34:20,239
processes that are running so like

788
00:34:17,780 --> 00:34:22,340
payload and see scripts and so what

789
00:34:20,239 --> 00:34:26,689
we'll do is we'll put that side-by-side

790
00:34:22,340 --> 00:34:28,520
with the actual OS so we can see the

791
00:34:26,690 --> 00:34:32,149
payload there it's come up here it's the

792
00:34:28,520 --> 00:34:34,219
same pier it's the same thing maybe what

793
00:34:32,149 --> 00:34:40,129
we want to do as well is we want to look

794
00:34:34,219 --> 00:34:43,158
at why not typing maybe we want to look

795
00:34:40,129 --> 00:34:45,230
at the processes that are having network

796
00:34:43,159 --> 00:34:47,360
connections so you could do all the same

797
00:34:45,230 --> 00:34:50,360
stuff through there that you would the

798
00:34:47,360 --> 00:34:52,790
cool thing about this though is this is

799
00:34:50,360 --> 00:34:55,190
running as a system process so you're

800
00:34:52,790 --> 00:34:57,050
not using any credentials you don't have

801
00:34:55,190 --> 00:35:00,290
to have a domain admin account a very

802
00:34:57,050 --> 00:35:02,750
privileged account it's running a system

803
00:35:00,290 --> 00:35:04,400
which is kind of cool and you could

804
00:35:02,750 --> 00:35:07,640
obviously hide this instead of just

805
00:35:04,400 --> 00:35:09,380
having the standard default Python icon

806
00:35:07,640 --> 00:35:12,440
and and make it a bit inconspicuous

807
00:35:09,380 --> 00:35:13,970
instead of legit reverse show but that

808
00:35:12,440 --> 00:35:17,210
kind of shows you what that looks like

809
00:35:13,970 --> 00:35:18,799
so we've got that information so what we

810
00:35:17,210 --> 00:35:21,620
want to do is we want to start cleaning

811
00:35:18,800 --> 00:35:24,500
this endpoint off so let's start off

812
00:35:21,620 --> 00:35:26,540
let's start kicking out that kill that

813
00:35:24,500 --> 00:35:30,200
session so we're going to do that by

814
00:35:26,540 --> 00:35:35,350
just killing payload XE and then we're

815
00:35:30,200 --> 00:35:35,350
going to kill C scripts

816
00:35:38,840 --> 00:35:44,610
so if we jump back to meterpreter here

817
00:35:41,750 --> 00:35:45,390
sessions been killed they've been kicked

818
00:35:44,610 --> 00:35:48,210
you out

819
00:35:45,390 --> 00:35:52,200
so we killed the cscript which is what

820
00:35:48,210 --> 00:35:54,210
was running this persistence group here

821
00:35:52,200 --> 00:35:57,480
so that was the thing that was going to

822
00:35:54,210 --> 00:35:58,980
make a call home every 500 seconds so

823
00:35:57,480 --> 00:36:00,720
the only other thing then we need to do

824
00:35:58,980 --> 00:36:03,330
is we need to kill this one off

825
00:36:00,720 --> 00:36:05,910
so that when they use the logs off and

826
00:36:03,330 --> 00:36:09,000
on again it's it doesn't run that VBS

827
00:36:05,910 --> 00:36:11,690
file so what we'll do is I'll show you

828
00:36:09,000 --> 00:36:11,690
Explorer

829
00:36:18,840 --> 00:36:23,130
so we can see the payload file there so

830
00:36:21,150 --> 00:36:28,560
we're just going to kill a delete button

831
00:36:23,130 --> 00:36:32,330
and then we're going to go through and

832
00:36:28,560 --> 00:36:32,330
get rid of that VBS file as well

833
00:36:38,140 --> 00:36:41,819
should have given it a shorter name

834
00:37:03,849 --> 00:37:09,799
I'll see if that works

835
00:37:07,180 --> 00:37:12,140
now I've spelt it wrong doesn't matter

836
00:37:09,799 --> 00:37:14,630
you get the point and then what you do

837
00:37:12,140 --> 00:37:16,640
is you'd be able to then remove the

838
00:37:14,630 --> 00:37:18,230
registry key as well so in a similar

839
00:37:16,640 --> 00:37:20,960
fashion you can just run standard

840
00:37:18,230 --> 00:37:26,630
command prop lines to clear those things

841
00:37:20,960 --> 00:37:28,849
out so if we go into here you can have

842
00:37:26,630 --> 00:37:32,450
those commands saved in and then just go

843
00:37:28,849 --> 00:37:34,309
through and clean up so if we go oh

844
00:37:32,450 --> 00:37:37,220
that's another long one as well I'm not

845
00:37:34,309 --> 00:37:40,190
typing anyway so you could go through

846
00:37:37,220 --> 00:37:42,019
then and clean that up as well and then

847
00:37:40,190 --> 00:37:44,170
by the end of that essentially you can

848
00:37:42,019 --> 00:37:46,999
feel comfortable that you've cleaned up

849
00:37:44,170 --> 00:37:49,069
all the stuff on that end point and

850
00:37:46,999 --> 00:37:50,629
you've remotely responded to it you

851
00:37:49,069 --> 00:37:53,299
haven't had to call the user you haven't

852
00:37:50,630 --> 00:37:55,160
had to reimage you're all done and

853
00:37:53,299 --> 00:37:56,509
dusted and the cool thing with this is

854
00:37:55,160 --> 00:37:58,180
it gives you that assurance that you've

855
00:37:56,509 --> 00:38:00,880
actually cleaned up the end point

856
00:37:58,180 --> 00:38:04,730
instead of just seeing a blocks message

857
00:38:00,880 --> 00:38:07,329
and this is all yeah this is all free

858
00:38:04,730 --> 00:38:09,650
like you can just all build it yourself

859
00:38:07,329 --> 00:38:13,180
and we can just then kill that session

860
00:38:09,650 --> 00:38:15,440
off and then you're back to normal

861
00:38:13,180 --> 00:38:17,480
one of the other things you can do is I

862
00:38:15,440 --> 00:38:20,869
don't know if we'll have time to demo it

863
00:38:17,480 --> 00:38:23,720
but you can do memory dumps and the way

864
00:38:20,869 --> 00:38:27,049
that that works is is you're again just

865
00:38:23,720 --> 00:38:29,390
deploying a script that runs but because

866
00:38:27,049 --> 00:38:31,099
the memory dump can be quite huge you

867
00:38:29,390 --> 00:38:33,348
just set up like an SFTP server

868
00:38:31,099 --> 00:38:35,900
somewhere or on your swamp box or on the

869
00:38:33,349 --> 00:38:41,150
EPA server and then in that script you

870
00:38:35,900 --> 00:38:43,910
define the server to connect it to but I

871
00:38:41,150 --> 00:38:48,829
don't think we'll have time for that six

872
00:38:43,910 --> 00:38:50,089
minutes here's some references just some

873
00:38:48,829 --> 00:38:52,190
of the stuff that I've been reading

874
00:38:50,089 --> 00:38:53,509
through as I've been working on this so

875
00:38:52,190 --> 00:38:55,339
there's some really good links

876
00:38:53,509 --> 00:38:58,039
particularly on the SIS Mon side of

877
00:38:55,339 --> 00:38:59,690
things from bot Kampf

878
00:38:58,039 --> 00:39:02,239
there's a guy there who's done some

879
00:38:59,690 --> 00:39:05,839
really high-quality talk so check him

880
00:39:02,239 --> 00:39:07,880
out but yeah that brings us to an end to

881
00:39:05,839 --> 00:39:09,799
the talk and yeah I suppose just one

882
00:39:07,880 --> 00:39:11,660
quick thing is don't hear me saying you

883
00:39:09,799 --> 00:39:13,910
shouldn't buy an EDR solution that is

884
00:39:11,660 --> 00:39:14,870
not at all what I'm saying in the vast

885
00:39:13,910 --> 00:39:19,910
majority of

886
00:39:14,870 --> 00:39:22,310
cases there is some it is worthwhile to

887
00:39:19,910 --> 00:39:24,109
seriously consider looking at that tech

888
00:39:22,310 --> 00:39:27,200
because it does provide something that

889
00:39:24,110 --> 00:39:28,970
other solutions don't but yeah though

890
00:39:27,200 --> 00:39:32,049
you will evaluate what they actually

891
00:39:28,970 --> 00:39:34,970
provide to your incident response team

892
00:39:32,050 --> 00:39:36,500
and make yeah a good business decision I

893
00:39:34,970 --> 00:39:44,450
suppose but yeah that brings us to an

894
00:39:36,500 --> 00:39:46,090
end thanks guys that was a fantastic

895
00:39:44,450 --> 00:39:48,649
talk Josh thank you very much for that

896
00:39:46,090 --> 00:39:51,110
are there any questions from the

897
00:39:48,650 --> 00:39:52,190
audience we have we have about five

898
00:39:51,110 --> 00:39:54,650
minutes so we've got plenty of time for

899
00:39:52,190 --> 00:40:00,680
questions if there are any yep hey go

900
00:39:54,650 --> 00:40:03,170
get my steps up thanks Josh

901
00:40:00,680 --> 00:40:07,990
just a few thoughts if you wouldn't mind

902
00:40:03,170 --> 00:40:11,390
on this approach when you've got maybe a

903
00:40:07,990 --> 00:40:13,479
slightly less one way saying mayfleet oh

904
00:40:11,390 --> 00:40:17,230
you might have a mix of Mac or something

905
00:40:13,480 --> 00:40:19,430
as well as comparing some open-source

906
00:40:17,230 --> 00:40:19,850
ddr's likewise there and things like

907
00:40:19,430 --> 00:40:23,359
that

908
00:40:19,850 --> 00:40:25,100
just some thoughts on that please yeah

909
00:40:23,360 --> 00:40:27,050
so I suppose the experience I've had is

910
00:40:25,100 --> 00:40:31,790
in relation to the organisation I work

911
00:40:27,050 --> 00:40:34,850
up and so Windows is yeah 99% of what we

912
00:40:31,790 --> 00:40:38,930
have so I haven't spent time looking at

913
00:40:34,850 --> 00:40:41,060
how you could do it in Mac but I suppose

914
00:40:38,930 --> 00:40:43,399
in some regards yeah if there if there's

915
00:40:41,060 --> 00:40:45,380
ways that you can centralize security

916
00:40:43,400 --> 00:40:48,320
logs and events that are being generated

917
00:40:45,380 --> 00:40:51,320
on endpoints and pull it into something

918
00:40:48,320 --> 00:40:54,140
like a seam now you have that ability of

919
00:40:51,320 --> 00:40:55,790
being able to yeah do some interesting

920
00:40:54,140 --> 00:40:57,859
things when you're starting to pull in

921
00:40:55,790 --> 00:41:01,300
lots of data but yes I probably can't

922
00:40:57,860 --> 00:41:01,300
help much on the Mac side of things

923
00:41:01,510 --> 00:41:04,460
awesome

924
00:41:02,720 --> 00:41:07,009
are there other questions from the

925
00:41:04,460 --> 00:41:09,290
audience either one

926
00:41:07,010 --> 00:41:10,910
what's your browser history look like

927
00:41:09,290 --> 00:41:13,040
now after you had that dump slide up

928
00:41:10,910 --> 00:41:16,609
what's that you know he had that cartoon

929
00:41:13,040 --> 00:41:18,019
of the the guy taken on the toilet

930
00:41:16,609 --> 00:41:24,038
I love to see your browser history now

931
00:41:18,019 --> 00:41:24,038
yeah alrighty thank you very much right

