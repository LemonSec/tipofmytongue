1
00:00:00,030 --> 00:00:05,370
so this morning's<font color="#E5E5E5"> first speaker is</font>

2
00:00:02,399 --> 00:00:08,969
<font color="#CCCCCC">Hinault bach</font><font color="#E5E5E5"> speaking on the burden of</font>

3
00:00:05,370 --> 00:00:11,099
faulty TLS implementations<font color="#E5E5E5"> if you want</font>

4
00:00:08,970 --> 00:00:13,830
to read up<font color="#E5E5E5"> on</font><font color="#CCCCCC"> hello you can look</font><font color="#E5E5E5"> at the</font>

5
00:00:11,099 --> 00:00:15,389
app and I'll have his bio but I'll<font color="#CCCCCC"> just</font>

6
00:00:13,830 --> 00:00:21,090
leave it<font color="#E5E5E5"> there</font><font color="#CCCCCC"> and we'll hand</font><font color="#E5E5E5"> it over if</font>

7
00:00:15,389 --> 00:00:25,198
you<font color="#E5E5E5"> can welcome hello</font>

8
00:00:21,090 --> 00:00:31,439
<font color="#E5E5E5">okay you can hear me</font><font color="#CCCCCC"> can you</font><font color="#E5E5E5"> sit</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

9
00:00:25,199 --> 00:00:33,840
<font color="#CCCCCC">beam oh yeah</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> okay I'm going</font><font color="#E5E5E5"> to</font>

10
00:00:31,439 --> 00:00:36,090
<font color="#CCCCCC">talk about till yesterday</font><font color="#E5E5E5"> and about an</font>

11
00:00:33,840 --> 00:00:38,280
issue that<font color="#CCCCCC"> I think is not very well</font>

12
00:00:36,090 --> 00:00:41,100
<font color="#CCCCCC">known but</font><font color="#E5E5E5"> causes a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> trouble and</font>

13
00:00:38,280 --> 00:00:43,410
that<font color="#E5E5E5"> is that a lot of the TLS</font>

14
00:00:41,100 --> 00:00:47,640
implementations out<font color="#E5E5E5"> there are just bad</font>

15
00:00:43,410 --> 00:00:49,440
they have severe box that sometimes even

16
00:00:47,640 --> 00:00:52,980
<font color="#CCCCCC">caused</font><font color="#E5E5E5"> issues not only for themselves</font>

17
00:00:49,440 --> 00:00:55,260
but also<font color="#CCCCCC"> for the whole ecosystem</font><font color="#E5E5E5"> and I</font>

18
00:00:52,980 --> 00:00:58,980
have tried to<font color="#E5E5E5"> convince you in this talk</font>

19
00:00:55,260 --> 00:01:00,480
that<font color="#E5E5E5"> we have a problem there</font><font color="#CCCCCC"> and so a</font>

20
00:00:58,980 --> 00:01:02,489
quick introduction what<font color="#E5E5E5"> I do</font>

21
00:01:00,480 --> 00:01:05,610
<font color="#CCCCCC">I for one that I work as a freelance</font>

22
00:01:02,489 --> 00:01:07,710
journalist<font color="#E5E5E5"> unfortunately most of it is</font>

23
00:01:05,610 --> 00:01:10,530
<font color="#E5E5E5">in German so most of you probably can't</font>

24
00:01:07,710 --> 00:01:12,750
read it but<font color="#E5E5E5"> I regularly write for a</font>

25
00:01:10,530 --> 00:01:15,780
<font color="#E5E5E5">German webpage called</font><font color="#CCCCCC"> golem which is a</font>

26
00:01:12,750 --> 00:01:18,150
IT news web page<font color="#CCCCCC"> and also for some</font>

27
00:01:15,780 --> 00:01:20,040
newspapers and occasionally<font color="#E5E5E5"> for lwn</font>

28
00:01:18,150 --> 00:01:25,110
which is in<font color="#CCCCCC"> English</font><font color="#E5E5E5"> that's better for</font>

29
00:01:20,040 --> 00:01:26,909
<font color="#E5E5E5">you</font><font color="#CCCCCC"> and I also try to</font><font color="#E5E5E5"> find security</font>

30
00:01:25,110 --> 00:01:30,150
vulnerabilities<font color="#CCCCCC"> in parks in free</font>

31
00:01:26,909 --> 00:01:32,729
software applications<font color="#CCCCCC"> and do that</font><font color="#E5E5E5"> mostly</font>

32
00:01:30,150 --> 00:01:34,229
with fuzzing<font color="#E5E5E5"> and I get funded for</font><font color="#CCCCCC"> that</font>

33
00:01:32,729 --> 00:01:36,600
by the<font color="#E5E5E5"> Linux Foundation</font><font color="#CCCCCC"> school</font>

34
00:01:34,229 --> 00:01:39,270
infrastructure initiative<font color="#E5E5E5"> but that's not</font>

35
00:01:36,600 --> 00:01:41,339
what I'm<font color="#CCCCCC"> going to talk today and I write</font>

36
00:01:39,270 --> 00:01:43,200
a monthly<font color="#CCCCCC"> newsletter</font><font color="#E5E5E5"> about here S which</font>

37
00:01:41,340 --> 00:01:45,450
is the<font color="#CCCCCC"> bulletproof TRS newsletter which</font>

38
00:01:43,200 --> 00:01:47,189
you all should subscribe to<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font>

39
00:01:45,450 --> 00:01:53,310
today or tomorrow we<font color="#E5E5E5"> will send out the</font>

40
00:01:47,189 --> 00:01:55,589
<font color="#CCCCCC">next one yeah okay</font><font color="#E5E5E5"> TLS</font><font color="#CCCCCC"> a quick thing to</font>

41
00:01:53,310 --> 00:01:59,070
get out<font color="#E5E5E5"> of the way</font><font color="#CCCCCC"> there's this thing</font>

42
00:01:55,590 --> 00:02:01,649
with<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> it's SSL or TLS</font><font color="#E5E5E5"> and in the end</font>

43
00:01:59,070 --> 00:02:05,699
it's just SSL is the old name TLS is the

44
00:02:01,649 --> 00:02:08,098
new name that's it so SSL was developed

45
00:02:05,700 --> 00:02:10,420
by Netscape in the 1990s there was a

46
00:02:08,098 --> 00:02:13,000
<font color="#CCCCCC">version 2 and version 3 version 1 was</font>

47
00:02:10,419 --> 00:02:16,929
were published<font color="#E5E5E5"> so it doesn't exist</font><font color="#CCCCCC"> in</font>

48
00:02:13,000 --> 00:02:20,530
<font color="#E5E5E5">the</font><font color="#CCCCCC"> public record and then it was taken</font>

49
00:02:16,930 --> 00:02:21,970
<font color="#CCCCCC">over by</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ietf and renamed</font><font color="#E5E5E5"> and they</font>

50
00:02:20,530 --> 00:02:24,190
started<font color="#E5E5E5"> the versioning again which</font>

51
00:02:21,970 --> 00:02:27,970
causes a lot of<font color="#E5E5E5"> confusions</font><font color="#CCCCCC"> but that's</font>

52
00:02:24,190 --> 00:02:32,200
how it<font color="#E5E5E5"> is and</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> TLS 1.0 1.1 and</font>

53
00:02:27,970 --> 00:02:37,480
1.2<font color="#E5E5E5"> and 1.3 will come out sometime soon</font>

54
00:02:32,200 --> 00:02:40,540
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the colors here indicate so SSL</font><font color="#CCCCCC"> 2</font>

55
00:02:37,480 --> 00:02:42,850
and<font color="#CCCCCC"> SS a3 are really broken</font><font color="#E5E5E5"> like disable</font>

56
00:02:40,540 --> 00:02:46,390
them don't use them<font color="#CCCCCC"> for anything</font>

57
00:02:42,850 --> 00:02:49,450
<font color="#E5E5E5">TLS 1.00 and 1.1 are kind of problematic</font>

58
00:02:46,390 --> 00:02:50,980
<font color="#CCCCCC">so there</font><font color="#E5E5E5"> are attacks that can be</font>

59
00:02:49,450 --> 00:02:54,160
prevented<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> really hard to</font>

60
00:02:50,980 --> 00:02:55,869
prevent them<font color="#E5E5E5"> and</font><font color="#CCCCCC"> TLS 1.2 is really the</font>

61
00:02:54,160 --> 00:03:00,609
<font color="#CCCCCC">only version that's still reasonable to</font>

62
00:02:55,870 --> 00:03:04,900
use today<font color="#E5E5E5"> okay we had a number of</font>

63
00:03:00,610 --> 00:03:08,010
<font color="#E5E5E5">attacks in the past years and so it</font>

64
00:03:04,900 --> 00:03:12,730
started with<font color="#CCCCCC"> beast crime breach</font>

65
00:03:08,010 --> 00:03:16,358
<font color="#CCCCCC">many</font><font color="#E5E5E5"> more so the interesting</font><font color="#CCCCCC"> thing here</font>

66
00:03:12,730 --> 00:03:18,640
<font color="#CCCCCC">is that in the past that's a 5 years a</font>

67
00:03:16,359 --> 00:03:21,070
lot more research<font color="#CCCCCC"> has happened on TLS</font>

68
00:03:18,640 --> 00:03:23,078
which is generally a good<font color="#CCCCCC"> thing so I</font>

69
00:03:21,070 --> 00:03:25,329
would<font color="#E5E5E5"> argue that today we understand</font>

70
00:03:23,079 --> 00:03:27,609
<font color="#E5E5E5">much better what secure what's</font>

71
00:03:25,329 --> 00:03:30,100
problematic<font color="#CCCCCC"> how to design these</font>

72
00:03:27,609 --> 00:03:33,370
protocols<font color="#E5E5E5"> in a more robust</font><font color="#CCCCCC"> way and what</font>

73
00:03:30,100 --> 00:03:35,739
issues can happen<font color="#CCCCCC"> and of course also is</font>

74
00:03:33,370 --> 00:03:38,079
<font color="#E5E5E5">this the time where</font><font color="#CCCCCC"> ok a good one er</font>

75
00:03:35,739 --> 00:03:44,650
ability<font color="#CCCCCC"> today needs a name and ideally</font>

76
00:03:38,079 --> 00:03:47,019
<font color="#CCCCCC">also a logo else it's not</font><font color="#E5E5E5"> severe so if</font>

77
00:03:44,650 --> 00:03:48,340
we look at<font color="#E5E5E5"> these attacks</font><font color="#CCCCCC"> then something</font>

78
00:03:47,019 --> 00:03:52,180
interesting comes up and<font color="#E5E5E5"> that is that</font>

79
00:03:48,340 --> 00:03:54,760
<font color="#CCCCCC">many</font><font color="#E5E5E5"> of them have a history that many</font>

80
00:03:52,180 --> 00:03:59,140
years<font color="#CCCCCC"> before the attack was already kind</font>

81
00:03:54,760 --> 00:04:01,870
<font color="#E5E5E5">of described but it was like a</font>

82
00:03:59,140 --> 00:04:03,880
theoretical<font color="#E5E5E5"> attack and then five years</font>

83
00:04:01,870 --> 00:04:06,100
<font color="#E5E5E5">later</font><font color="#CCCCCC"> 10 years later someone comes</font><font color="#E5E5E5"> up</font>

84
00:04:03,880 --> 00:04:09,040
<font color="#CCCCCC">and</font><font color="#E5E5E5"> says ok we can attack this in</font>

85
00:04:06,100 --> 00:04:10,600
<font color="#CCCCCC">practice and I think this really</font><font color="#E5E5E5"> tells</font>

86
00:04:09,040 --> 00:04:11,679
us something<font color="#E5E5E5"> and that's that we're not</font>

87
00:04:10,600 --> 00:04:14,350
learning from<font color="#CCCCCC"> mistakes</font>

88
00:04:11,680 --> 00:04:16,358
<font color="#E5E5E5">so if a cryptographer comes and says</font>

89
00:04:14,350 --> 00:04:18,488
<font color="#E5E5E5">here's a weakness then we should listen</font>

90
00:04:16,358 --> 00:04:20,380
<font color="#CCCCCC">to them and we should probably not wait</font>

91
00:04:18,488 --> 00:04:22,510
until<font color="#CCCCCC"> another cryptographer comes and</font>

92
00:04:20,380 --> 00:04:23,650
says<font color="#CCCCCC"> i can really attack this we should</font>

93
00:04:22,510 --> 00:04:28,840
fix<font color="#E5E5E5"> it</font>

94
00:04:23,650 --> 00:04:32,049
the real attack happens<font color="#E5E5E5"> yeah so and I</font>

95
00:04:28,840 --> 00:04:33,789
was<font color="#CCCCCC"> really surprised like I stole kind</font>

96
00:04:32,050 --> 00:04:35,590
of this<font color="#E5E5E5"> idea for the slide from someone</font>

97
00:04:33,790 --> 00:04:37,570
else who had a<font color="#E5E5E5"> similar slide but he had</font>

98
00:04:35,590 --> 00:04:39,609
<font color="#E5E5E5">only three examples and I thought I can</font>

99
00:04:37,570 --> 00:04:41,320
come up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> examples and I was</font>

100
00:04:39,610 --> 00:04:44,440
surprised how<font color="#CCCCCC"> many examples there were</font>

101
00:04:41,320 --> 00:04:47,590
so a very typical<font color="#E5E5E5"> thing that we have a</font>

102
00:04:44,440 --> 00:04:50,469
research paper<font color="#E5E5E5"> from the 1990s or the</font>

103
00:04:47,590 --> 00:04:52,479
early 2000s and then someone comes<font color="#E5E5E5"> up</font>

104
00:04:50,470 --> 00:04:56,669
and says<font color="#E5E5E5"> okay I've</font><font color="#CCCCCC"> tried this attack on</font>

105
00:04:52,479 --> 00:04:56,669
TLS and I can<font color="#E5E5E5"> attacked us with it</font>

106
00:04:58,830 --> 00:05:04,870
deprecation so why do you<font color="#E5E5E5"> find out that</font>

107
00:05:01,630 --> 00:05:08,560
something<font color="#E5E5E5"> into</font><font color="#CCCCCC"> u.s. crypto algorithm is</font>

108
00:05:04,870 --> 00:05:11,380
no longer safe or<font color="#CCCCCC"> a version</font><font color="#E5E5E5"> then okay we</font>

109
00:05:08,560 --> 00:05:14,110
try to duplicate it<font color="#CCCCCC"> and that's hard</font>

110
00:05:11,380 --> 00:05:17,289
because<font color="#E5E5E5"> we have many people out there</font>

111
00:05:14,110 --> 00:05:21,820
<font color="#CCCCCC">that are using old</font><font color="#E5E5E5"> browsers or devices</font>

112
00:05:17,289 --> 00:05:24,729
<font color="#E5E5E5">or we have old servers that don't</font>

113
00:05:21,820 --> 00:05:28,060
support<font color="#E5E5E5"> these newer</font><font color="#CCCCCC"> technologies and I</font>

114
00:05:24,729 --> 00:05:30,070
want to give<font color="#E5E5E5"> you a few examples</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> drown</font>

115
00:05:28,060 --> 00:05:32,830
drown attack was earlier this year and

116
00:05:30,070 --> 00:05:36,250
it was against<font color="#CCCCCC"> SSI version</font><font color="#E5E5E5"> 2 now SSL</font>

117
00:05:32,830 --> 00:05:39,150
version 2 is from<font color="#E5E5E5"> the 90s</font><font color="#CCCCCC"> and we know</font>

118
00:05:36,250 --> 00:05:43,720
since<font color="#E5E5E5"> I think 1996 that it's insecure</font>

119
00:05:39,150 --> 00:05:46,330
<font color="#CCCCCC">and we have since 2011 we have a</font>

120
00:05:43,720 --> 00:05:50,560
standard<font color="#CCCCCC"> that saying you must</font><font color="#E5E5E5"> disable as</font>

121
00:05:46,330 --> 00:05:54,219
<font color="#E5E5E5">a version 2</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> it turned out still</font>

122
00:05:50,560 --> 00:05:56,770
drown<font color="#CCCCCC"> a third of the web servers in the</font>

123
00:05:54,220 --> 00:05:58,570
<font color="#CCCCCC">internet are vulnerable to drown</font><font color="#E5E5E5"> which</font>

124
00:05:56,770 --> 00:06:01,440
is a vulnerability in<font color="#E5E5E5"> a protocol from</font>

125
00:05:58,570 --> 00:06:05,020
<font color="#E5E5E5">the 1990s for which we knew like for</font>

126
00:06:01,440 --> 00:06:08,770
more<font color="#E5E5E5"> than 10 years that</font><font color="#CCCCCC"> it's insecure so</font>

127
00:06:05,020 --> 00:06:13,090
that's kind of the state we are in<font color="#E5E5E5"> when</font>

128
00:06:08,770 --> 00:06:14,729
it<font color="#E5E5E5"> comes to us</font><font color="#CCCCCC"> log jam log jam was an</font>

129
00:06:13,090 --> 00:06:18,489
issue in<font color="#E5E5E5"> the diffie-hellman key exchange</font>

130
00:06:14,729 --> 00:06:22,240
<font color="#E5E5E5">where they analyzed how if you have a</font><font color="#CCCCCC"> to</font>

131
00:06:18,490 --> 00:06:24,849
<font color="#E5E5E5">short diffie-hellman group that can</font>

132
00:06:22,240 --> 00:06:27,970
cause attacks and they provided some

133
00:06:24,849 --> 00:06:30,520
optimizations of attacks<font color="#E5E5E5"> and in</font><font color="#CCCCCC"> reaction</font>

134
00:06:27,970 --> 00:06:33,700
to that<font color="#E5E5E5"> chrome disabled these fraud</font>

135
00:06:30,520 --> 00:06:35,770
diffie-hellman key exchanges and<font color="#CCCCCC"> that</font>

136
00:06:33,700 --> 00:06:37,120
caused<font color="#E5E5E5"> a lot of uproar so if you look at</font>

137
00:06:35,770 --> 00:06:40,060
<font color="#E5E5E5">this threat in the</font><font color="#CCCCCC"> chrome</font>

138
00:06:37,120 --> 00:06:42,520
forum<font color="#E5E5E5"> online it has been 300 posts and</font>

139
00:06:40,060 --> 00:06:44,650
people were really<font color="#E5E5E5"> angry at Google that</font>

140
00:06:42,520 --> 00:06:47,799
<font color="#CCCCCC">they were disabling these insecure</font>

141
00:06:44,650 --> 00:06:49,448
encryption methods<font color="#CCCCCC"> so you have</font><font color="#E5E5E5"> here</font>

142
00:06:47,800 --> 00:06:50,919
someone saying<font color="#E5E5E5"> this error is preventing</font>

143
00:06:49,449 --> 00:06:58,060
<font color="#CCCCCC">me from opening</font><font color="#E5E5E5"> the login page on my</font>

144
00:06:50,919 --> 00:07:00,159
<font color="#CCCCCC">Cisco</font><font color="#E5E5E5"> are we 0 for 2 G Rooter</font><font color="#CCCCCC"> someone</font>

145
00:06:58,060 --> 00:07:02,440
else to have to<font color="#CCCCCC"> dump</font><font color="#E5E5E5"> Chrome I need to</font>

146
00:07:00,160 --> 00:07:05,110
get<font color="#E5E5E5"> to my router and</font><font color="#CCCCCC"> can't there's no</font>

147
00:07:02,440 --> 00:07:07,240
way<font color="#CCCCCC"> to update SSL on the routers okay</font>

148
00:07:05,110 --> 00:07:08,770
maybe that's a bad<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> and this is</font>

149
00:07:07,240 --> 00:07:11,889
<font color="#E5E5E5">ridiculous we had to use Internet</font>

150
00:07:08,770 --> 00:07:15,280
<font color="#E5E5E5">Explorer</font><font color="#CCCCCC"> that sounds</font><font color="#E5E5E5"> really bad and the</font>

151
00:07:11,889 --> 00:07:17,320
one below<font color="#E5E5E5"> I hope you can read that</font>

152
00:07:15,280 --> 00:07:20,320
<font color="#E5E5E5">that's interesting someone had trouble</font>

153
00:07:17,320 --> 00:07:22,630
surfing to Google with<font color="#E5E5E5"> Chrome so what's</font>

154
00:07:20,320 --> 00:07:24,550
going<font color="#E5E5E5"> on here that</font><font color="#CCCCCC"> looks strange what's</font>

155
00:07:22,630 --> 00:07:28,120
probably happening here is you know that

156
00:07:24,550 --> 00:07:30,400
there are these<font color="#E5E5E5"> security appliances and</font>

157
00:07:28,120 --> 00:07:32,830
security software that does<font color="#E5E5E5"> something</font>

158
00:07:30,400 --> 00:07:35,138
which i<font color="#E5E5E5"> think is a very bad idea but</font>

159
00:07:32,830 --> 00:07:37,419
it's<font color="#CCCCCC"> very common that they</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> do</font>

160
00:07:35,139 --> 00:07:41,139
a man-in-the-middle attack on<font color="#E5E5E5"> HTTPS</font>

161
00:07:37,419 --> 00:07:43,150
connections to analyze the traffic and

162
00:07:41,139 --> 00:07:45,669
install a local cert in the browser<font color="#E5E5E5"> and</font>

163
00:07:43,150 --> 00:07:51,820
it's especially<font color="#E5E5E5"> bad if they do it with a</font>

164
00:07:45,669 --> 00:07:55,650
<font color="#E5E5E5">really outdated TLS implementation so um</font>

165
00:07:51,820 --> 00:08:01,870
we could have known that like in 1999<font color="#CCCCCC"> a</font>

166
00:07:55,650 --> 00:08:03,340
412 bit RSA key was broken<font color="#E5E5E5"> now the you</font>

167
00:08:01,870 --> 00:08:06,010
have to know for<font color="#CCCCCC"> that the security of</font>

168
00:08:03,340 --> 00:08:09,940
diffie-hellman and RSA is more or less

169
00:08:06,010 --> 00:08:12,130
<font color="#E5E5E5">the same so if RSA with 512 bit is</font>

170
00:08:09,940 --> 00:08:17,680
broken<font color="#E5E5E5"> when diffie-hellman with 512 bit</font>

171
00:08:12,130 --> 00:08:21,039
is<font color="#E5E5E5"> also broken in 2010 768 bit was</font>

172
00:08:17,680 --> 00:08:24,039
broken and I think in 2001 there<font color="#E5E5E5"> was</font>

173
00:08:21,039 --> 00:08:26,949
already a warning that 1024 bit could be

174
00:08:24,039 --> 00:08:28,900
<font color="#E5E5E5">broken by a powerful attacker and this</font>

175
00:08:26,949 --> 00:08:32,650
Cisco<font color="#E5E5E5"> root of</font><font color="#CCCCCC"> II read about</font><font color="#E5E5E5"> two slides</font>

176
00:08:28,900 --> 00:08:35,829
earlier was released in 2012<font color="#CCCCCC"> so I think</font>

177
00:08:32,650 --> 00:08:38,199
this<font color="#CCCCCC"> is bad</font><font color="#E5E5E5"> so in 2012</font><font color="#CCCCCC"> device gets</font>

178
00:08:35,830 --> 00:08:39,700
released<font color="#E5E5E5"> which has crypto on it from</font>

179
00:08:38,200 --> 00:08:46,810
<font color="#E5E5E5">which we clearly know that it's not</font>

180
00:08:39,700 --> 00:08:49,480
secure<font color="#CCCCCC"> so more examples for this in 2010</font>

181
00:08:46,810 --> 00:08:51,939
Nokia which I think no longer exists by

182
00:08:49,480 --> 00:08:54,880
now I don't<font color="#CCCCCC"> know</font>

183
00:08:51,940 --> 00:08:57,070
<font color="#CCCCCC">released the</font><font color="#E5E5E5"> Lumia 800 phone which had</font>

184
00:08:54,880 --> 00:09:00,910
an email<font color="#E5E5E5"> client</font><font color="#CCCCCC"> only supporting SSL</font>

185
00:08:57,070 --> 00:09:04,600
version<font color="#E5E5E5"> 3 remember as</font><font color="#CCCCCC"> a version 3 from</font>

186
00:09:00,910 --> 00:09:08,319
the 90s<font color="#E5E5E5"> old Netscape thing and the</font>

187
00:09:04,600 --> 00:09:10,690
successor of it was released in 1999

188
00:09:08,320 --> 00:09:13,390
then poodle came along the poodle attack

189
00:09:10,690 --> 00:09:15,880
was against SSL version 3<font color="#E5E5E5"> and then many</font>

190
00:09:13,390 --> 00:09:18,819
email<font color="#CCCCCC"> providers said okay</font><font color="#E5E5E5"> we will</font>

191
00:09:15,880 --> 00:09:20,439
<font color="#E5E5E5">disable this old protocol and people</font>

192
00:09:18,820 --> 00:09:22,870
having this<font color="#E5E5E5"> phone which was a really</font>

193
00:09:20,440 --> 00:09:25,840
<font color="#E5E5E5">expensive phone no longer could access</font>

194
00:09:22,870 --> 00:09:27,550
their<font color="#CCCCCC"> email and Microsoft said oh this</font>

195
00:09:25,840 --> 00:09:30,390
windows mobile version is no longer

196
00:09:27,550 --> 00:09:33,459
supported<font color="#E5E5E5"> we won't do anything about it</font>

197
00:09:30,390 --> 00:09:35,830
<font color="#CCCCCC">there was a very similar case</font><font color="#E5E5E5"> with a</font><font color="#CCCCCC"> vm</font>

198
00:09:33,460 --> 00:09:38,710
<font color="#CCCCCC">Flitz box</font><font color="#E5E5E5"> cutter which had the option to</font>

199
00:09:35,830 --> 00:09:44,760
fetch emails for<font color="#E5E5E5"> you and had this</font>

200
00:09:38,710 --> 00:09:46,450
basically<font color="#E5E5E5"> the same issue and the</font>

201
00:09:44,760 --> 00:09:50,290
surprising thing<font color="#CCCCCC"> is</font><font color="#E5E5E5"> this is happening</font>

202
00:09:46,450 --> 00:09:53,320
<font color="#CCCCCC">again</font><font color="#E5E5E5"> so we already know</font><font color="#CCCCCC"> that TLS 1.0</font>

203
00:09:50,290 --> 00:09:55,180
and 1.1 are not really as secure as we

204
00:09:53,320 --> 00:09:57,280
would like<font color="#CCCCCC"> them to</font><font color="#E5E5E5"> be and we probably</font>

205
00:09:55,180 --> 00:10:00,310
want to<font color="#E5E5E5"> deprecated them at some</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> I</font>

206
00:09:57,280 --> 00:10:02,740
would<font color="#CCCCCC"> like to deprecated him today but</font>

207
00:10:00,310 --> 00:10:05,619
we still have software<font color="#E5E5E5"> like new software</font>

208
00:10:02,740 --> 00:10:09,100
that<font color="#E5E5E5"> only supports</font><font color="#CCCCCC"> tears 1.0 and one</font>

209
00:10:05,620 --> 00:10:13,330
prominent<font color="#CCCCCC"> example is Apple Mail so yeah</font>

210
00:10:09,100 --> 00:10:16,870
<font color="#E5E5E5">why</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> this happening so today</font><font color="#CCCCCC"> we are in</font>

211
00:10:13,330 --> 00:10:18,910
a situation<font color="#CCCCCC"> where vendors of devices of</font>

212
00:10:16,870 --> 00:10:20,850
<font color="#E5E5E5">sometimes really expensive devices seem</font>

213
00:10:18,910 --> 00:10:24,939
to think it's acceptable<font color="#CCCCCC"> to deliver</font>

214
00:10:20,850 --> 00:10:27,960
substandard<font color="#E5E5E5"> TLS crypto to you and I</font>

215
00:10:24,940 --> 00:10:27,960
think<font color="#CCCCCC"> this needs to</font><font color="#E5E5E5"> change</font>

216
00:10:28,510 --> 00:10:37,569
TLS implementation<font color="#CCCCCC"> works this</font><font color="#E5E5E5"> is a back</font>

217
00:10:33,220 --> 00:10:39,820
report<font color="#E5E5E5"> for Mozilla I opened in 2008 and</font>

218
00:10:37,570 --> 00:10:43,120
what was<font color="#E5E5E5"> happening there is sometimes</font>

219
00:10:39,820 --> 00:10:45,550
and<font color="#E5E5E5"> especially when I was using my</font>

220
00:10:43,120 --> 00:10:49,270
mobile internet connection I got a wrong

221
00:10:45,550 --> 00:10:51,819
<font color="#CCCCCC">certificate from</font><font color="#E5E5E5"> my own web page and why</font>

222
00:10:49,270 --> 00:10:55,660
is this<font color="#E5E5E5"> happening so you have to know</font>

223
00:10:51,820 --> 00:10:58,120
for<font color="#E5E5E5"> this if you have the original</font><font color="#CCCCCC"> SSL</font>

224
00:10:55,660 --> 00:11:02,060
protocol<font color="#E5E5E5"> had the idea</font><font color="#CCCCCC"> that you have one</font>

225
00:10:58,120 --> 00:11:03,770
<font color="#E5E5E5">certificate for one IP address</font><font color="#CCCCCC"> now</font>

226
00:11:02,060 --> 00:11:05,599
you have shared hosting where you have

227
00:11:03,770 --> 00:11:07,610
multiple hosts on one server<font color="#E5E5E5"> and you</font>

228
00:11:05,600 --> 00:11:11,840
don't have<font color="#CCCCCC"> that</font><font color="#E5E5E5"> many IP addresses</font>

229
00:11:07,610 --> 00:11:13,610
<font color="#E5E5E5">because IP</font><font color="#CCCCCC"> saskia these</font><font color="#E5E5E5"> days</font><font color="#CCCCCC"> this</font>

230
00:11:11,840 --> 00:11:15,440
doesn't<font color="#E5E5E5"> work and then an extension was</font>

231
00:11:13,610 --> 00:11:18,500
developed called<font color="#CCCCCC"> sni which allows</font>

232
00:11:15,440 --> 00:11:19,130
multiple certificates on one IP which is

233
00:11:18,500 --> 00:11:21,620
<font color="#CCCCCC">a</font><font color="#E5E5E5"> good thing</font>

234
00:11:19,130 --> 00:11:27,670
now<font color="#E5E5E5"> this extension only works until s</font>

235
00:11:21,620 --> 00:11:31,070
1.0 and that's where the problem was<font color="#E5E5E5"> so</font>

236
00:11:27,670 --> 00:11:35,479
<font color="#CCCCCC">a TLS handshake works roughly like</font><font color="#E5E5E5"> this</font>

237
00:11:31,070 --> 00:11:37,760
<font color="#E5E5E5">so a client may</font><font color="#CCCCCC"> be a browser</font><font color="#E5E5E5"> connects to</font>

238
00:11:35,480 --> 00:11:39,680
the server<font color="#E5E5E5"> and says dear Sarah I want to</font>

239
00:11:37,760 --> 00:11:42,380
connect with<font color="#CCCCCC"> the TLS version between</font>

240
00:11:39,680 --> 00:11:44,839
this and<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then the server</font>

241
00:11:42,380 --> 00:11:47,660
chooses the highest one it supports and

242
00:11:44,840 --> 00:11:49,520
says<font color="#CCCCCC"> ok let's</font><font color="#E5E5E5"> connect with this so if we</font>

243
00:11:47,660 --> 00:11:53,120
have a new TLS version like a browser

244
00:11:49,520 --> 00:11:55,610
implements TLS 1.2 which is the latest

245
00:11:53,120 --> 00:11:57,770
<font color="#E5E5E5">today then he can still connect through</font>

246
00:11:55,610 --> 00:11:59,420
service with which only support an older

247
00:11:57,770 --> 00:12:01,280
version<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> can signal to</font>

248
00:11:59,420 --> 00:12:03,469
<font color="#E5E5E5">the client</font><font color="#CCCCCC"> ok no I don't support this</font>

249
00:12:01,280 --> 00:12:07,610
new version<font color="#E5E5E5"> I want to do a connection</font>

250
00:12:03,470 --> 00:12:11,390
with<font color="#E5E5E5"> this older version but there are</font>

251
00:12:07,610 --> 00:12:14,330
<font color="#E5E5E5">servers that don't do this correctly</font><font color="#CCCCCC"> so</font>

252
00:12:11,390 --> 00:12:17,090
<font color="#CCCCCC">what quite often happens is the client</font>

253
00:12:14,330 --> 00:12:20,420
says yeah I support between<font color="#E5E5E5"> this and</font>

254
00:12:17,090 --> 00:12:24,380
that<font color="#CCCCCC"> version and then the server says ok</font>

255
00:12:20,420 --> 00:12:26,329
<font color="#CCCCCC">what that was I never heard of that</font><font color="#E5E5E5"> this</font>

256
00:12:24,380 --> 00:12:30,610
didn't even exist when<font color="#E5E5E5"> I was developed</font>

257
00:12:26,330 --> 00:12:34,040
so I don't answer or I send<font color="#E5E5E5"> an error</font>

258
00:12:30,610 --> 00:12:36,830
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> called version intolerance and</font>

259
00:12:34,040 --> 00:12:39,260
this is always<font color="#CCCCCC"> a bug so this</font><font color="#E5E5E5"> is not</font>

260
00:12:36,830 --> 00:12:41,590
standard<font color="#CCCCCC"> confirmed behavior if</font><font color="#E5E5E5"> you have</font>

261
00:12:39,260 --> 00:12:46,370
a server<font color="#E5E5E5"> like this the server is broken</font>

262
00:12:41,590 --> 00:12:49,010
but the browser<font color="#E5E5E5"> vendors</font><font color="#CCCCCC"> yeah and also</font>

263
00:12:46,370 --> 00:12:52,220
<font color="#E5E5E5">they there's a strange variation of this</font>

264
00:12:49,010 --> 00:12:53,960
where you try it with TLS 1.2 and<font color="#CCCCCC"> the</font>

265
00:12:52,220 --> 00:12:56,720
server then wants to<font color="#CCCCCC"> downgrade to</font><font color="#E5E5E5"> SS</font>

266
00:12:53,960 --> 00:12:58,730
<font color="#CCCCCC">every 1/3</font><font color="#E5E5E5"> and if you try it with TLS</font>

267
00:12:56,720 --> 00:13:01,610
1.00 the server will happily connect

268
00:12:58,730 --> 00:13:07,130
with here that's 1.0<font color="#E5E5E5"> which is kind of</font>

269
00:13:01,610 --> 00:13:08,990
weird<font color="#CCCCCC"> now</font><font color="#E5E5E5"> browsers learned about this</font>

270
00:13:07,130 --> 00:13:10,850
<font color="#E5E5E5">and</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> were just too many servers</font>

271
00:13:08,990 --> 00:13:13,320
with this broken behavior to fix them

272
00:13:10,850 --> 00:13:18,899
all and then they implemented a worker

273
00:13:13,320 --> 00:13:20,699
so what<font color="#E5E5E5"> browser does it first connects</font>

274
00:13:18,899 --> 00:13:22,949
with the highest version<font color="#E5E5E5"> it supports</font>

275
00:13:20,699 --> 00:13:24,569
<font color="#E5E5E5">then it tries again with one lower</font>

276
00:13:22,949 --> 00:13:27,810
version then it<font color="#CCCCCC"> tries again with one</font>

277
00:13:24,570 --> 00:13:30,420
<font color="#E5E5E5">dollar version</font><font color="#CCCCCC"> this has</font><font color="#E5E5E5"> been called a</font>

278
00:13:27,810 --> 00:13:36,839
protocol dance<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> voodoo paper I</font>

279
00:13:30,420 --> 00:13:39,209
think<font color="#CCCCCC"> ok then many</font><font color="#E5E5E5"> years later in</font><font color="#CCCCCC"> 2014</font>

280
00:13:36,839 --> 00:13:40,829
<font color="#E5E5E5">so this</font><font color="#CCCCCC"> pact was still open</font><font color="#E5E5E5"> and I still</font>

281
00:13:39,209 --> 00:13:43,050
had a problem with my server but the

282
00:13:40,829 --> 00:13:45,300
<font color="#CCCCCC">mozilla developers didn't want to fix it</font>

283
00:13:43,050 --> 00:13:50,310
<font color="#CCCCCC">because they said we need</font><font color="#E5E5E5"> this strange</font>

284
00:13:45,300 --> 00:13:52,979
<font color="#CCCCCC">behavior a blackhead 2014 aunt Wendy</font>

285
00:13:50,310 --> 00:13:55,920
Lynette la who presents the virtual<font color="#E5E5E5"> host</font>

286
00:13:52,980 --> 00:13:58,470
confusion<font color="#E5E5E5"> attack and now suddenly these</font>

287
00:13:55,920 --> 00:14:01,139
downgrades become a security<font color="#CCCCCC"> issue which</font>

288
00:13:58,470 --> 00:14:02,880
seems<font color="#CCCCCC"> kind of obvious because if you</font>

289
00:14:01,139 --> 00:14:05,790
retry<font color="#CCCCCC"> to connect with older and older</font>

290
00:14:02,880 --> 00:14:07,860
<font color="#CCCCCC">versions then</font><font color="#E5E5E5"> an attacker can trigger</font>

291
00:14:05,790 --> 00:14:09,599
<font color="#E5E5E5">that because an attacker can just say ok</font>

292
00:14:07,860 --> 00:14:12,029
if the first connection<font color="#CCCCCC"> attempt</font><font color="#E5E5E5"> block</font>

293
00:14:09,600 --> 00:14:15,449
second block<font color="#E5E5E5"> that block</font><font color="#CCCCCC"> and then here</font>

294
00:14:12,029 --> 00:14:17,189
this older SSL version that maybe

295
00:14:15,449 --> 00:14:19,769
there's a vulnerability<font color="#E5E5E5"> in it and</font><font color="#CCCCCC"> that's</font>

296
00:14:17,190 --> 00:14:22,470
<font color="#CCCCCC">exactly what happened there there was an</font>

297
00:14:19,769 --> 00:14:24,300
attack<font color="#CCCCCC"> that required as a version 3</font><font color="#E5E5E5"> and</font>

298
00:14:22,470 --> 00:14:29,639
you could downgrade as an attacker to

299
00:14:24,300 --> 00:14:31,319
<font color="#E5E5E5">this older version then poodle was</font>

300
00:14:29,639 --> 00:14:34,380
essentially the same poodle was<font color="#E5E5E5"> a</font>

301
00:14:31,319 --> 00:14:38,579
vulnerability in<font color="#CCCCCC"> SSL version 3</font><font color="#E5E5E5"> and you</font>

302
00:14:34,380 --> 00:14:41,160
would say<font color="#E5E5E5"> ok as a version 3 from 1996 we</font>

303
00:14:38,579 --> 00:14:43,079
don't care<font color="#E5E5E5"> if that's vulnerable</font><font color="#CCCCCC"> but if</font>

304
00:14:41,160 --> 00:14:44,910
you have<font color="#E5E5E5"> these downgrades</font><font color="#CCCCCC"> then an</font>

305
00:14:43,079 --> 00:14:47,849
attacker can force your browser to<font color="#E5E5E5"> use</font>

306
00:14:44,910 --> 00:14:57,600
this older version and the attack works

307
00:14:47,850 --> 00:15:00,449
again solution for<font color="#E5E5E5"> that was the some</font>

308
00:14:57,600 --> 00:15:02,550
people came<font color="#CCCCCC"> up with a new standard</font><font color="#E5E5E5"> where</font>

309
00:15:00,449 --> 00:15:05,639
a server<font color="#E5E5E5"> can tell a browser</font>

310
00:15:02,550 --> 00:15:07,979
hello browser<font color="#CCCCCC"> I'm not broken if you did</font>

311
00:15:05,639 --> 00:15:13,019
this strange<font color="#E5E5E5"> downgrade then don't</font>

312
00:15:07,980 --> 00:15:15,630
connect<font color="#E5E5E5"> to me it's called a CSV so we</font>

313
00:15:13,019 --> 00:15:18,870
have to<font color="#CCCCCC"> appreciate what happened here so</font>

314
00:15:15,630 --> 00:15:22,319
we have a working mechanism to negotiate

315
00:15:18,870 --> 00:15:24,650
TLS versions and<font color="#CCCCCC"> servers implemented</font>

316
00:15:22,319 --> 00:15:26,540
wrong<font color="#E5E5E5"> have broken TLS</font><font color="#CCCCCC"> implementation</font>

317
00:15:24,650 --> 00:15:29,750
and then the<font color="#E5E5E5"> browsers implemented</font>

318
00:15:26,540 --> 00:15:31,610
<font color="#E5E5E5">workaround then it turns around out this</font>

319
00:15:29,750 --> 00:15:33,860
<font color="#CCCCCC">workaround is a security problem and</font>

320
00:15:31,610 --> 00:15:35,360
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of disabling the workaround they</font>

321
00:15:33,860 --> 00:15:37,460
produce<font color="#E5E5E5"> another workaround for the</font>

322
00:15:35,360 --> 00:15:40,970
workaround<font color="#CCCCCC"> to make it not being a</font>

323
00:15:37,460 --> 00:15:42,830
security<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> I doubt</font><font color="#E5E5E5"> that that's the</font>

324
00:15:40,970 --> 00:15:47,900
right<font color="#E5E5E5"> approach but that's the world we</font>

325
00:15:42,830 --> 00:15:49,670
live<font color="#CCCCCC"> in but by now</font>

326
00:15:47,900 --> 00:15:52,100
browsers did something different<font color="#CCCCCC"> they</font>

327
00:15:49,670 --> 00:15:54,829
really<font color="#E5E5E5"> removed this insecure downgrades</font>

328
00:15:52,100 --> 00:15:58,340
and s<font color="#E5E5E5"> CSV is not that relevant</font><font color="#CCCCCC"> anymore</font>

329
00:15:54,830 --> 00:16:01,040
but we can be<font color="#E5E5E5"> pretty sure and this was</font>

330
00:15:58,340 --> 00:16:03,050
posted<font color="#E5E5E5"> by Adam Langley yesterday</font><font color="#CCCCCC"> like</font>

331
00:16:01,040 --> 00:16:07,400
<font color="#E5E5E5">almost like he knew what I want to talk</font>

332
00:16:03,050 --> 00:16:09,050
<font color="#E5E5E5">about where he said yeah</font><font color="#CCCCCC"> it's taken</font>

333
00:16:07,400 --> 00:16:10,370
about<font color="#CCCCCC"> 15 years to get</font><font color="#E5E5E5"> to the point where</font>

334
00:16:09,050 --> 00:16:13,880
web browsers don't<font color="#E5E5E5"> have to work around</font>

335
00:16:10,370 --> 00:16:16,640
<font color="#CCCCCC">protein version</font><font color="#E5E5E5"> negotiation</font><font color="#CCCCCC"> and when we</font>

336
00:16:13,880 --> 00:16:18,680
try to add<font color="#CCCCCC"> 1/4</font><font color="#E5E5E5"> TLS 1.3 in the next year</font>

337
00:16:16,640 --> 00:16:22,640
we'll have<font color="#E5E5E5"> to add</font><font color="#CCCCCC"> back the</font><font color="#E5E5E5"> workaround</font><font color="#CCCCCC"> no</font>

338
00:16:18,680 --> 00:16:24,469
doubt so although this other stuff

339
00:16:22,640 --> 00:16:26,990
happened we're still<font color="#CCCCCC"> in a situation</font>

340
00:16:24,470 --> 00:16:31,010
<font color="#CCCCCC">where developer of the major</font><font color="#E5E5E5"> browser</font>

341
00:16:26,990 --> 00:16:37,520
these<font color="#E5E5E5"> days says we will probably have</font><font color="#CCCCCC"> to</font>

342
00:16:31,010 --> 00:16:39,290
do this all over again now this is not

343
00:16:37,520 --> 00:16:43,250
<font color="#CCCCCC">the</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> example for something like this</font>

344
00:16:39,290 --> 00:16:45,829
<font color="#E5E5E5">something quite similar happened</font><font color="#CCCCCC"> it</font>

345
00:16:43,250 --> 00:16:49,010
turned out that load balancers from

346
00:16:45,830 --> 00:16:52,490
company f5<font color="#E5E5E5"> had a problem with if you did</font>

347
00:16:49,010 --> 00:16:55,610
a handshake bigger than 256 bytes<font color="#E5E5E5"> now</font>

348
00:16:52,490 --> 00:16:57,170
<font color="#E5E5E5">well new features were</font><font color="#CCCCCC"> added to</font><font color="#E5E5E5"> tier s</font>

349
00:16:55,610 --> 00:17:01,220
and at some point the handshake got

350
00:16:57,170 --> 00:17:03,860
bigger than<font color="#E5E5E5"> that and then on the TLS</font>

351
00:17:01,220 --> 00:17:06,530
mailing<font color="#E5E5E5"> list employee from a5 came</font><font color="#CCCCCC"> in</font>

352
00:17:03,860 --> 00:17:10,970
said yeah but if the handshake<font color="#E5E5E5"> is bigger</font>

353
00:17:06,530 --> 00:17:14,599
than 512<font color="#E5E5E5"> bytes then it works again</font><font color="#CCCCCC"> ok so</font>

354
00:17:10,970 --> 00:17:17,000
what we can<font color="#E5E5E5"> do we</font><font color="#CCCCCC"> can just blow up</font><font color="#E5E5E5"> our</font>

355
00:17:14,599 --> 00:17:19,250
handshake<font color="#E5E5E5"> which was done they introduced</font>

356
00:17:17,000 --> 00:17:20,930
an extension the padding extension which

357
00:17:19,250 --> 00:17:24,950
does<font color="#E5E5E5"> nothing else then just add</font>

358
00:17:20,930 --> 00:17:26,720
additional bytes to the<font color="#E5E5E5"> handshake</font><font color="#CCCCCC"> so we</font>

359
00:17:24,950 --> 00:17:31,610
have another<font color="#E5E5E5"> extension that's just there</font>

360
00:17:26,720 --> 00:17:33,960
to work around broken<font color="#E5E5E5"> service now maybe</font>

361
00:17:31,610 --> 00:17:36,719
you<font color="#CCCCCC"> can guess what happened</font><font color="#E5E5E5"> next</font>

362
00:17:33,960 --> 00:17:39,090
like what happened next was<font color="#CCCCCC"> Oh there are</font>

363
00:17:36,720 --> 00:17:42,170
also implementations<font color="#CCCCCC"> that don't work if</font>

364
00:17:39,090 --> 00:17:46,250
<font color="#E5E5E5">you have handshake bigger than 512 bytes</font>

365
00:17:42,170 --> 00:17:49,410
<font color="#E5E5E5">from Cisco</font><font color="#CCCCCC"> I don't want email devices</font>

366
00:17:46,250 --> 00:17:51,930
<font color="#CCCCCC">now the good thing about this is these</font>

367
00:17:49,410 --> 00:17:54,120
f5 devices are used<font color="#E5E5E5"> for web and these</font>

368
00:17:51,930 --> 00:17:56,670
<font color="#E5E5E5">devices are used for email so you can</font>

369
00:17:54,120 --> 00:17:58,800
<font color="#CCCCCC">kind of yeah if you do a</font><font color="#E5E5E5"> web connection</font>

370
00:17:56,670 --> 00:18:00,770
<font color="#E5E5E5">you use this extension if you do email</font>

371
00:17:58,800 --> 00:18:07,440
connection you don't use it and<font color="#E5E5E5"> then</font>

372
00:18:00,770 --> 00:18:10,620
things<font color="#E5E5E5"> may be mostly work there are</font>

373
00:18:07,440 --> 00:18:13,290
other implementation issues that are by

374
00:18:10,620 --> 00:18:15,090
itself security issues<font color="#E5E5E5"> and there are a</font>

375
00:18:13,290 --> 00:18:18,240
number<font color="#E5E5E5"> of things the TLS implementation</font>

376
00:18:15,090 --> 00:18:20,879
has to check so<font color="#CCCCCC"> that things are</font><font color="#E5E5E5"> secure</font>

377
00:18:18,240 --> 00:18:23,040
like the padding like the authentication

378
00:18:20,880 --> 00:18:25,470
<font color="#CCCCCC">and like the finished message</font><font color="#E5E5E5"> now you</font>

379
00:18:23,040 --> 00:18:27,420
could<font color="#E5E5E5"> create the TLS implementation that</font>

380
00:18:25,470 --> 00:18:30,510
<font color="#E5E5E5">emits all those checks it will still</font>

381
00:18:27,420 --> 00:18:32,370
connect because<font color="#E5E5E5"> you don't know if the</font>

382
00:18:30,510 --> 00:18:34,110
other<font color="#E5E5E5"> side of the</font><font color="#CCCCCC"> connection has really</font>

383
00:18:32,370 --> 00:18:38,310
checked the stuff you sent<font color="#CCCCCC"> that</font><font color="#E5E5E5"> all</font>

384
00:18:34,110 --> 00:18:41,280
correct<font color="#E5E5E5"> and I know you shouldn't be</font>

385
00:18:38,310 --> 00:18:44,909
surprised by that<font color="#E5E5E5"> there was</font><font color="#CCCCCC"> poodle here</font>

386
00:18:41,280 --> 00:18:47,129
is now poodle we had<font color="#CCCCCC"> pool earlier</font><font color="#E5E5E5"> poodle</font>

387
00:18:44,910 --> 00:18:49,980
attack reliance on the fact that SSL

388
00:18:47,130 --> 00:18:52,440
version 3 has padding where you can<font color="#E5E5E5"> add</font>

389
00:18:49,980 --> 00:18:54,960
whatever bytes you<font color="#E5E5E5"> want and that was</font>

390
00:18:52,440 --> 00:18:57,390
somehow exploited<font color="#CCCCCC"> for a padding</font><font color="#E5E5E5"> or actor</font>

391
00:18:54,960 --> 00:18:59,880
and this<font color="#E5E5E5"> attack was no longer possible</font>

392
00:18:57,390 --> 00:19:01,740
<font color="#E5E5E5">with</font><font color="#CCCCCC"> us 1.0 because there it's clearly</font>

393
00:18:59,880 --> 00:19:05,310
<font color="#CCCCCC">defined what</font><font color="#E5E5E5"> bytes need to be in the</font>

394
00:19:01,740 --> 00:19:07,740
padding but you have to check that<font color="#CCCCCC"> else</font>

395
00:19:05,310 --> 00:19:09,030
the attack is possible<font color="#E5E5E5"> again</font><font color="#CCCCCC"> and of</font>

396
00:19:07,740 --> 00:19:12,330
course there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> implementations out</font>

397
00:19:09,030 --> 00:19:14,520
there that don't check it<font color="#E5E5E5"> and so there</font>

398
00:19:12,330 --> 00:19:22,980
was<font color="#E5E5E5"> a variant of poodle that also works</font>

399
00:19:14,520 --> 00:19:25,139
on TLS<font color="#CCCCCC"> also</font><font color="#E5E5E5"> Adam Langley then a</font>

400
00:19:22,980 --> 00:19:27,570
developer<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> V Valley browser</font>

401
00:19:25,140 --> 00:19:30,570
<font color="#E5E5E5">found out that for some servers some</font>

402
00:19:27,570 --> 00:19:32,460
checks for this poor vulnerability<font color="#E5E5E5"> set</font>

403
00:19:30,570 --> 00:19:35,040
<font color="#CCCCCC">it's vulnerable and about checks that</font>

404
00:19:32,460 --> 00:19:37,650
it's not vulnerable<font color="#E5E5E5"> what is going on</font>

405
00:19:35,040 --> 00:19:39,060
here and what it turned out<font color="#E5E5E5"> that there</font>

406
00:19:37,650 --> 00:19:41,820
<font color="#CCCCCC">are implementations that check the</font>

407
00:19:39,060 --> 00:19:44,190
padding but maybe only half of the<font color="#E5E5E5"> bytes</font>

408
00:19:41,820 --> 00:19:46,800
or only<font color="#E5E5E5"> the first byte or only the last</font>

409
00:19:44,190 --> 00:19:49,260
byte<font color="#E5E5E5"> or if it's all 0 they are also</font><font color="#CCCCCC"> ok</font>

410
00:19:46,800 --> 00:19:50,879
<font color="#E5E5E5">although that's invalid so</font><font color="#CCCCCC"> there are one</font>

411
00:19:49,260 --> 00:19:53,010
where a number<font color="#E5E5E5"> of such implementations</font>

412
00:19:50,880 --> 00:19:55,250
and depending how<font color="#CCCCCC"> you do the check it</font>

413
00:19:53,010 --> 00:19:59,580
would turn out<font color="#CCCCCC"> to be vulnerable</font><font color="#E5E5E5"> or not</font>

414
00:19:55,250 --> 00:20:03,630
<font color="#E5E5E5">and the same thing was true in new TLS</font>

415
00:19:59,580 --> 00:20:04,379
that<font color="#E5E5E5"> I analyzed that and</font><font color="#CCCCCC"> actually that</font>

416
00:20:03,630 --> 00:20:07,890
was a bit funny

417
00:20:04,380 --> 00:20:10,200
<font color="#CCCCCC">i I found this</font><font color="#E5E5E5"> park and then I talked to</font>

418
00:20:07,890 --> 00:20:13,290
someone about<font color="#CCCCCC"> it who said I</font><font color="#E5E5E5"> I read about</font>

419
00:20:10,200 --> 00:20:15,090
this before in the lucky 13 paper and

420
00:20:13,290 --> 00:20:16,920
then I looked it up<font color="#E5E5E5"> in the lucky 13</font>

421
00:20:15,090 --> 00:20:20,129
paper and<font color="#E5E5E5"> actually really there was it</font>

422
00:20:16,920 --> 00:20:22,290
was described this back<font color="#E5E5E5"> but it said that</font>

423
00:20:20,130 --> 00:20:24,990
<font color="#CCCCCC">the</font><font color="#E5E5E5"> check is off by one where it</font>

424
00:20:22,290 --> 00:20:27,420
<font color="#CCCCCC">actually was off by</font><font color="#E5E5E5"> two so they fixed</font><font color="#CCCCCC"> it</font>

425
00:20:24,990 --> 00:20:29,990
from<font color="#E5E5E5"> being off</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> two to just being off</font>

426
00:20:27,420 --> 00:20:33,150
by<font color="#E5E5E5"> one so one</font><font color="#CCCCCC"> byte was still</font><font color="#E5E5E5"> not checked</font>

427
00:20:29,990 --> 00:20:34,980
and then the whole<font color="#E5E5E5"> thing was reworked so</font>

428
00:20:33,150 --> 00:20:37,560
it only<font color="#E5E5E5"> affects</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the versions</font><font color="#CCCCCC"> of</font>

429
00:20:34,980 --> 00:20:43,680
computers<font color="#CCCCCC"> but</font><font color="#E5E5E5"> that was interesting how</font>

430
00:20:37,560 --> 00:20:47,070
these works can happen<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they make now</font>

431
00:20:43,680 --> 00:20:50,570
<font color="#CCCCCC">the Mac is</font><font color="#E5E5E5"> a basic mechanism</font><font color="#CCCCCC"> to protect</font>

432
00:20:47,070 --> 00:20:53,280
<font color="#E5E5E5">the authenticity of Kiryas messages</font>

433
00:20:50,570 --> 00:20:55,200
<font color="#CCCCCC">which is an important</font><font color="#E5E5E5"> thing so TLS is</font>

434
00:20:53,280 --> 00:20:57,389
<font color="#E5E5E5">not only about encryption it's also</font>

435
00:20:55,200 --> 00:20:59,460
about authenticity which essentially

436
00:20:57,390 --> 00:21:02,760
means nobody can<font color="#CCCCCC"> change what you're</font>

437
00:20:59,460 --> 00:21:04,560
<font color="#E5E5E5">sending so this is important</font><font color="#CCCCCC"> because</font>

438
00:21:02,760 --> 00:21:07,050
even<font color="#E5E5E5"> if an attacker cannot read your</font>

439
00:21:04,560 --> 00:21:09,389
<font color="#E5E5E5">message if you</font><font color="#CCCCCC"> can modify it then he can</font>

440
00:21:07,050 --> 00:21:10,830
<font color="#CCCCCC">use it</font><font color="#E5E5E5"> for like cross-site scripting or</font>

441
00:21:09,390 --> 00:21:13,230
things like<font color="#E5E5E5"> that</font>

442
00:21:10,830 --> 00:21:15,629
and there were a<font color="#E5E5E5"> couple of server</font>

443
00:21:13,230 --> 00:21:19,170
implementations that<font color="#E5E5E5"> just didn't check</font>

444
00:21:15,630 --> 00:21:21,210
the Mac at all affected<font color="#CCCCCC"> a5 cisco 14 it</font>

445
00:21:19,170 --> 00:21:23,610
you may see a pattern<font color="#CCCCCC"> that some of these</font>

446
00:21:21,210 --> 00:21:26,490
companies<font color="#CCCCCC"> turn up quite often on these</font>

447
00:21:23,610 --> 00:21:29,370
<font color="#E5E5E5">slides and there's a thing</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> the</font>

448
00:21:26,490 --> 00:21:31,980
finished message which<font color="#E5E5E5"> is protecting the</font>

449
00:21:29,370 --> 00:21:34,889
whole handshake so after server and

450
00:21:31,980 --> 00:21:38,160
client have initiated<font color="#E5E5E5"> a connection they</font>

451
00:21:34,890 --> 00:21:40,140
do a check of a hash of all the previous

452
00:21:38,160 --> 00:21:42,480
handshake messages which prevents that

453
00:21:40,140 --> 00:21:44,730
an attacker can exchange messages in

454
00:21:42,480 --> 00:21:47,000
between and there were also

455
00:21:44,730 --> 00:21:49,650
implementations<font color="#CCCCCC"> that didn't check that</font>

456
00:21:47,000 --> 00:21:53,660
was the same guy who find<font color="#E5E5E5"> found this</font>

457
00:21:49,650 --> 00:21:53,660
poodle<font color="#E5E5E5"> only some bytes checking issue</font>

458
00:21:54,419 --> 00:22:02,140
ours<font color="#E5E5E5"> a CRT CRT stands for Chinese</font>

459
00:21:59,409 --> 00:22:06,220
remainder theorem<font color="#E5E5E5"> and is there's a way</font>

460
00:22:02,140 --> 00:22:08,409
to<font color="#E5E5E5"> use this theorem to speed up our</font>

461
00:22:06,220 --> 00:22:11,380
<font color="#CCCCCC">essay signatures and the way this</font><font color="#E5E5E5"> is</font>

462
00:22:08,409 --> 00:22:15,190
done is<font color="#CCCCCC"> that RSA so an RSA key is</font>

463
00:22:11,380 --> 00:22:16,990
basically<font color="#E5E5E5"> a product of two primes</font><font color="#CCCCCC"> and if</font>

464
00:22:15,190 --> 00:22:19,390
you have these two primes<font color="#CCCCCC"> which you have</font>

465
00:22:16,990 --> 00:22:23,169
if you<font color="#E5E5E5"> have the private key you</font><font color="#CCCCCC"> can use</font>

466
00:22:19,390 --> 00:22:24,789
them to<font color="#CCCCCC"> calculate to do two smaller</font>

467
00:22:23,169 --> 00:22:28,539
calculations instead<font color="#E5E5E5"> of one big</font>

468
00:22:24,789 --> 00:22:30,700
calculation<font color="#E5E5E5"> which is faster but it's</font>

469
00:22:28,539 --> 00:22:34,210
<font color="#CCCCCC">dangerous</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> if one of</font><font color="#E5E5E5"> these</font>

470
00:22:30,700 --> 00:22:36,580
calculations goes wrong and you produce

471
00:22:34,210 --> 00:22:39,940
<font color="#E5E5E5">a signature</font><font color="#CCCCCC"> the signatures of course</font>

472
00:22:36,580 --> 00:22:42,070
wrong<font color="#E5E5E5"> but it also means the attacker who</font>

473
00:22:39,940 --> 00:22:47,649
sees the signature can calculate your

474
00:22:42,070 --> 00:22:50,590
private key<font color="#E5E5E5"> which was described</font>

475
00:22:47,649 --> 00:22:55,570
somewhere I think<font color="#CCCCCC"> in 1996</font><font color="#E5E5E5"> biiian</font><font color="#CCCCCC"> Lenstra</font>

476
00:22:50,590 --> 00:22:58,840
<font color="#E5E5E5">and then last year</font><font color="#CCCCCC"> Florian Weimer from</font>

477
00:22:55,570 --> 00:23:01,480
<font color="#CCCCCC">bet</font><font color="#E5E5E5"> head said okay what happens if I</font>

478
00:22:58,840 --> 00:23:02,949
just<font color="#CCCCCC"> do many connections to service and</font>

479
00:23:01,480 --> 00:23:04,990
check their signatures and maybe

480
00:23:02,950 --> 00:23:06,909
sometimes there's a wrong signature with

481
00:23:04,990 --> 00:23:09,610
this error and<font color="#E5E5E5"> he actually</font><font color="#CCCCCC"> found quite</font><font color="#E5E5E5"> a</font>

482
00:23:06,909 --> 00:23:13,440
number of<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> that had this exact</font>

483
00:23:09,610 --> 00:23:16,418
<font color="#E5E5E5">bug which is another</font><font color="#CCCCCC"> example for like</font>

484
00:23:13,440 --> 00:23:17,950
<font color="#E5E5E5">1996 this back was described and it was</font>

485
00:23:16,419 --> 00:23:20,860
also<font color="#E5E5E5"> described how you can prevent it</font>

486
00:23:17,950 --> 00:23:29,980
<font color="#CCCCCC">from</font><font color="#E5E5E5"> happening in 2015 vulnerable</font>

487
00:23:20,860 --> 00:23:32,139
devices<font color="#E5E5E5"> were found</font><font color="#CCCCCC"> yeah and then one of</font>

488
00:23:29,980 --> 00:23:34,419
these<font color="#E5E5E5"> minor</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> pop</font><font color="#CCCCCC"> up every now</font>

489
00:23:32,140 --> 00:23:37,210
and then<font color="#E5E5E5"> was recently described on I</font>

490
00:23:34,419 --> 00:23:38,890
think<font color="#E5E5E5"> a Mozilla mailing list that</font><font color="#CCCCCC"> there</font>

491
00:23:37,210 --> 00:23:40,929
are service if you have<font color="#E5E5E5"> an extension</font>

492
00:23:38,890 --> 00:23:43,450
that has<font color="#E5E5E5"> no length so it's maybe just</font>

493
00:23:40,929 --> 00:23:46,539
<font color="#E5E5E5">enabling some feature and you put this</font>

494
00:23:43,450 --> 00:23:49,659
at the<font color="#CCCCCC"> end then the server doesn't</font><font color="#E5E5E5"> allow</font>

495
00:23:46,539 --> 00:23:54,270
a connection<font color="#E5E5E5"> what was mentioned was IBM</font>

496
00:23:49,659 --> 00:23:57,010
WebSphere application server<font color="#E5E5E5"> so now the</font>

497
00:23:54,270 --> 00:23:58,570
TLS implementations try to all of the

498
00:23:57,010 --> 00:24:02,190
extension in a way that the last

499
00:23:58,570 --> 00:24:02,189
extension<font color="#E5E5E5"> is never an empty one</font>

500
00:24:05,690 --> 00:24:11,120
<font color="#CCCCCC">she</font><font color="#E5E5E5"> announces this is a paper I</font>

501
00:24:08,480 --> 00:24:15,379
published with a couple of<font color="#CCCCCC"> people about</font>

502
00:24:11,120 --> 00:24:18,379
<font color="#E5E5E5">a week ago</font><font color="#CCCCCC"> so the GCM algorithm that's</font>

503
00:24:15,379 --> 00:24:21,139
basically the modern way<font color="#CCCCCC"> of doing TLS</font>

504
00:24:18,379 --> 00:24:23,629
because all the other crypto algorithms

505
00:24:21,139 --> 00:24:26,178
have turned out<font color="#E5E5E5"> to be insecure in some</font>

506
00:24:23,629 --> 00:24:28,070
way or another<font color="#E5E5E5"> so GCM</font><font color="#CCCCCC"> is the</font>

507
00:24:26,179 --> 00:24:30,169
<font color="#CCCCCC">state-of-the-art symmetric encryption we</font>

508
00:24:28,070 --> 00:24:31,879
use in<font color="#E5E5E5"> here yesterday and it needs a</font>

509
00:24:30,169 --> 00:24:35,990
nonce where you are<font color="#E5E5E5"> non stands for</font>

510
00:24:31,879 --> 00:24:38,029
<font color="#E5E5E5">number used once so yeah it needs to be</font>

511
00:24:35,990 --> 00:24:39,980
a number<font color="#E5E5E5"> it doesn't have to be secret it</font>

512
00:24:38,029 --> 00:24:41,870
just needs to be<font color="#E5E5E5"> unique</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you should</font>

513
00:24:39,980 --> 00:24:50,210
never use<font color="#E5E5E5"> the same nonce with the same</font>

514
00:24:41,870 --> 00:24:52,668
key<font color="#E5E5E5"> twice and till as the TLS</font><font color="#CCCCCC"> Nana</font><font color="#E5E5E5"> this</font>

515
00:24:50,210 --> 00:24:55,309
<font color="#E5E5E5">is an example for a bad specification</font>

516
00:24:52,669 --> 00:24:55,730
<font color="#E5E5E5">because it doesn't tell you</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> to do</font>

517
00:24:55,309 --> 00:24:59,000
this

518
00:24:55,730 --> 00:24:59,750
it just says here you have to do to

519
00:24:59,000 --> 00:25:04,490
choose<font color="#E5E5E5"> a nonce</font>

520
00:24:59,750 --> 00:25:06,769
eight bytes and<font color="#E5E5E5"> a perfectly sane way to</font>

521
00:25:04,490 --> 00:25:09,259
do this is to<font color="#CCCCCC"> use a counter</font><font color="#E5E5E5"> so first</font><font color="#CCCCCC"> use</font>

522
00:25:06,769 --> 00:25:11,960
zero<font color="#CCCCCC"> then use one then use two that's</font>

523
00:25:09,259 --> 00:25:14,600
all fine<font color="#E5E5E5"> but</font><font color="#CCCCCC"> nobody tells</font><font color="#E5E5E5"> you that you</font>

524
00:25:11,960 --> 00:25:18,440
have<font color="#CCCCCC"> to figure out yourself</font>

525
00:25:14,600 --> 00:25:20,570
and no surprise some implementations get

526
00:25:18,440 --> 00:25:25,220
it wrong we found a couple<font color="#CCCCCC"> of servers</font>

527
00:25:20,570 --> 00:25:28,580
<font color="#CCCCCC">that use directly duplicate nonces</font><font color="#E5E5E5"> which</font>

528
00:25:25,220 --> 00:25:32,870
is then totally broken<font color="#E5E5E5"> that then you can</font>

529
00:25:28,580 --> 00:25:34,908
inject code into<font color="#E5E5E5"> a web</font><font color="#CCCCCC"> page and we</font><font color="#E5E5E5"> found</font>

530
00:25:32,870 --> 00:25:37,549
devices<font color="#E5E5E5"> using a random nonce which is</font>

531
00:25:34,909 --> 00:25:39,649
you can argue<font color="#E5E5E5"> about how risky that</font><font color="#CCCCCC"> is</font>

532
00:25:37,549 --> 00:25:41,570
but if<font color="#CCCCCC"> you do a lot of encryptions with</font>

533
00:25:39,649 --> 00:25:43,789
that then you get to a point where

534
00:25:41,570 --> 00:25:48,620
there's a probability<font color="#CCCCCC"> that nonsense</font><font color="#E5E5E5"> will</font>

535
00:25:43,789 --> 00:25:53,210
be repeated<font color="#CCCCCC"> and I have a</font><font color="#E5E5E5"> little demo for</font>

536
00:25:48,620 --> 00:25:56,029
<font color="#CCCCCC">that because one of the affected</font><font color="#E5E5E5"> web</font>

537
00:25:53,210 --> 00:25:59,210
<font color="#E5E5E5">pages was from</font><font color="#CCCCCC"> Visa</font><font color="#E5E5E5"> the credit card</font>

538
00:25:56,029 --> 00:26:01,100
company<font color="#E5E5E5"> I wrote them in</font><font color="#CCCCCC"> January to their</font>

539
00:25:59,210 --> 00:26:03,590
security contact address I never got a

540
00:26:01,100 --> 00:26:05,629
reply<font color="#E5E5E5"> if anyone knows anyone at visa</font>

541
00:26:03,590 --> 00:26:08,019
<font color="#CCCCCC">they can contact</font><font color="#E5E5E5"> me I will explain the</font>

542
00:26:05,629 --> 00:26:10,908
issue to them

543
00:26:08,019 --> 00:26:13,789
so I'm<font color="#CCCCCC"> surfing to the webpage of</font><font color="#E5E5E5"> an</font>

544
00:26:10,909 --> 00:26:15,260
attacker<font color="#E5E5E5"> and so on the right</font><font color="#CCCCCC"> side is</font><font color="#E5E5E5"> our</font>

545
00:26:13,789 --> 00:26:27,230
victim on<font color="#CCCCCC"> the left side</font>

546
00:26:15,260 --> 00:26:47,930
the attacker<font color="#E5E5E5"> running some tool and it</font>

547
00:26:27,230 --> 00:26:49,730
<font color="#E5E5E5">doesn't work</font><font color="#CCCCCC"> 100%</font><font color="#E5E5E5"> real I have my okay</font>

548
00:26:47,930 --> 00:26:56,030
now we have the demo<font color="#E5E5E5"> effect it was</font>

549
00:26:49,730 --> 00:27:00,350
working earlier today<font color="#E5E5E5"> but I have a video</font>

550
00:26:56,030 --> 00:27:04,270
of<font color="#E5E5E5"> it which should</font><font color="#CCCCCC"> be just as good so</font>

551
00:27:00,350 --> 00:27:08,389
we're<font color="#CCCCCC"> surfing</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> an attacker</font><font color="#E5E5E5"> webpage</font><font color="#CCCCCC"> and</font>

552
00:27:04,270 --> 00:27:11,990
we get a message<font color="#CCCCCC"> from</font><font color="#E5E5E5"> visa</font><font color="#CCCCCC"> DK with our</font>

553
00:27:08,390 --> 00:27:20,480
JavaScript code<font color="#E5E5E5"> so we can successfully</font>

554
00:27:11,990 --> 00:27:22,670
inject<font color="#E5E5E5"> JavaScript into their</font><font color="#CCCCCC"> web page if</font>

555
00:27:20,480 --> 00:27:25,070
you look at the<font color="#E5E5E5"> open SSL documentation</font>

556
00:27:22,670 --> 00:27:26,990
you see that these workarounds<font color="#CCCCCC"> for</font><font color="#E5E5E5"> box</font>

557
00:27:25,070 --> 00:27:29,149
that has been a problem<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> long time</font>

558
00:27:26,990 --> 00:27:31,160
so there are<font color="#E5E5E5"> many options in open SSL</font>

559
00:27:29,150 --> 00:27:35,030
where you can<font color="#CCCCCC"> enable a workaround</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> a</font>

560
00:27:31,160 --> 00:27:37,580
back most of them are undocumented<font color="#CCCCCC"> so</font>

561
00:27:35,030 --> 00:27:40,940
yeah they are<font color="#E5E5E5"> there you can enable them</font>

562
00:27:37,580 --> 00:27:42,590
<font color="#E5E5E5">nobody tells why or why not</font><font color="#CCCCCC"> and there</font>

563
00:27:40,940 --> 00:27:44,990
are also many<font color="#CCCCCC"> in the code if you look</font>

564
00:27:42,590 --> 00:27:47,480
them up they<font color="#CCCCCC"> are now disabled so they</font>

565
00:27:44,990 --> 00:27:49,850
were having<font color="#CCCCCC"> this workaround</font><font color="#E5E5E5"> at some</font>

566
00:27:47,480 --> 00:27:51,110
point in the<font color="#E5E5E5"> past and then</font><font color="#CCCCCC"> figured okay</font>

567
00:27:49,850 --> 00:27:54,020
they are<font color="#E5E5E5"> probably no</font><font color="#CCCCCC"> more of these</font>

568
00:27:51,110 --> 00:27:59,979
problem devices but this has<font color="#E5E5E5"> been an</font>

569
00:27:54,020 --> 00:27:59,980
issue like since we have since<font color="#CCCCCC"> we use</font>

570
00:28:01,750 --> 00:28:08,150
mathematics<font color="#CCCCCC"> so cryptography is based on</font>

571
00:28:04,850 --> 00:28:10,250
<font color="#E5E5E5">mathematics</font><font color="#CCCCCC"> and now okay we usually</font>

572
00:28:08,150 --> 00:28:13,100
<font color="#E5E5E5">assume that we do something like</font>

573
00:28:10,250 --> 00:28:16,550
multiplication<font color="#E5E5E5"> that the result is</font>

574
00:28:13,100 --> 00:28:18,230
<font color="#E5E5E5">correct</font><font color="#CCCCCC"> and all our security assumptions</font>

575
00:28:16,550 --> 00:28:20,600
are based on the fact that the result is

576
00:28:18,230 --> 00:28:22,630
<font color="#E5E5E5">correct</font><font color="#CCCCCC"> like we heard earlier</font><font color="#E5E5E5"> there was</font>

577
00:28:20,600 --> 00:28:25,100
this earth a issue if you<font color="#E5E5E5"> have a</font>

578
00:28:22,630 --> 00:28:26,620
calculation<font color="#E5E5E5"> with the wrong result then</font>

579
00:28:25,100 --> 00:28:29,800
the attacker can<font color="#E5E5E5"> learn</font>

580
00:28:26,620 --> 00:28:32,139
so what happens if our math functions

581
00:28:29,800 --> 00:28:35,260
produce wrong results<font color="#E5E5E5"> and there was a</font>

582
00:28:32,140 --> 00:28:37,390
<font color="#E5E5E5">back-end</font><font color="#CCCCCC"> OpenSSL early last year which I</font>

583
00:28:35,260 --> 00:28:40,030
found quite<font color="#CCCCCC"> interesting that</font><font color="#E5E5E5"> it was that</font>

584
00:28:37,390 --> 00:28:41,950
<font color="#E5E5E5">oppa has a factory for squaring so you</font>

585
00:28:40,030 --> 00:28:45,370
just take a number<font color="#CCCCCC"> by the power of</font><font color="#E5E5E5"> two</font>

586
00:28:41,950 --> 00:28:47,860
<font color="#E5E5E5">and it produced wrong results in some</font>

587
00:28:45,370 --> 00:28:50,350
very<font color="#E5E5E5"> rare</font><font color="#CCCCCC"> cases and it only produced</font>

588
00:28:47,860 --> 00:28:55,540
wrong results in 1 out of 2 to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> power</font>

589
00:28:50,350 --> 00:28:58,179
of 128 so really rare and<font color="#E5E5E5"> there's no way</font>

590
00:28:55,540 --> 00:29:00,040
to hit these cases by chance<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you</font>

591
00:28:58,180 --> 00:29:07,210
either have<font color="#CCCCCC"> to analyze the source code</font>

592
00:29:00,040 --> 00:29:08,800
or do something<font color="#E5E5E5"> different</font><font color="#CCCCCC"> smart and it</font>

593
00:29:07,210 --> 00:29:11,530
turned out that fuzzing<font color="#E5E5E5"> is a very</font>

594
00:29:08,800 --> 00:29:13,450
effective<font color="#E5E5E5"> way to find these bugs</font><font color="#CCCCCC"> so it</font>

595
00:29:11,530 --> 00:29:16,570
was possible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> find this back with a</font>

596
00:29:13,450 --> 00:29:20,260
fuzzing tool and then I<font color="#CCCCCC"> looked deeper</font>

597
00:29:16,570 --> 00:29:23,889
<font color="#E5E5E5">into it and found various such bugs in</font>

598
00:29:20,260 --> 00:29:26,230
various TLS implementations<font color="#E5E5E5"> so there was</font>

599
00:29:23,890 --> 00:29:28,600
a back<font color="#CCCCCC"> end</font><font color="#E5E5E5"> open SSL in the mod X which</font>

600
00:29:26,230 --> 00:29:32,590
is essentially the function<font color="#E5E5E5"> for RSA and</font>

601
00:29:28,600 --> 00:29:34,449
diffie-hellman<font color="#CCCCCC"> and nobody has figured</font>

602
00:29:32,590 --> 00:29:36,909
out whether that's exploitable or not

603
00:29:34,450 --> 00:29:39,970
but it<font color="#E5E5E5"> is concerning if the RS a</font>

604
00:29:36,910 --> 00:29:42,760
function is producing wrong results<font color="#CCCCCC"> same</font>

605
00:29:39,970 --> 00:29:46,240
thing in NSS for other inputs<font color="#E5E5E5"> but same</font>

606
00:29:42,760 --> 00:29:48,670
function<font color="#E5E5E5"> that</font><font color="#CCCCCC"> ya produces wrong results</font>

607
00:29:46,240 --> 00:29:51,040
<font color="#E5E5E5">then in in the nettle library which is</font>

608
00:29:48,670 --> 00:29:54,179
used by<font color="#CCCCCC"> new TLS there</font><font color="#E5E5E5"> are some bugs in</font>

609
00:29:51,040 --> 00:29:57,129
the elliptic curve calculations and

610
00:29:54,179 --> 00:29:59,200
quite recently<font color="#E5E5E5"> in open SSL there are</font>

611
00:29:57,130 --> 00:30:00,420
several bugs in the poly<font color="#CCCCCC"> 1305</font>

612
00:29:59,200 --> 00:30:02,950
<font color="#E5E5E5">authenticator</font>

613
00:30:00,420 --> 00:30:05,260
usually these are carry propagation bugs

614
00:30:02,950 --> 00:30:07,330
<font color="#CCCCCC">so if you do a calculation in</font><font color="#E5E5E5"> a large</font>

615
00:30:05,260 --> 00:30:10,960
number you may know<font color="#CCCCCC"> that</font><font color="#E5E5E5"> from school</font>

616
00:30:07,330 --> 00:30:12,879
when you added<font color="#E5E5E5"> two numbers you if it's</font>

617
00:30:10,960 --> 00:30:17,200
bigger than<font color="#CCCCCC"> 10 you have to add in 1 to</font>

618
00:30:12,880 --> 00:30:19,809
the next column and the it turns out

619
00:30:17,200 --> 00:30:22,330
that these<font color="#E5E5E5"> situations quite often used</font>

620
00:30:19,809 --> 00:30:24,970
to get<font color="#E5E5E5"> that wrong and these bugs are</font>

621
00:30:22,330 --> 00:30:27,790
relatively common<font color="#E5E5E5"> and these were found</font>

622
00:30:24,970 --> 00:30:29,590
with<font color="#E5E5E5"> American fuzzy</font><font color="#CCCCCC"> lab and what I was</font>

623
00:30:27,790 --> 00:30:34,000
<font color="#E5E5E5">doing there</font><font color="#CCCCCC"> so all</font><font color="#E5E5E5"> of them were found by</font>

624
00:30:29,590 --> 00:30:35,649
me<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> used fuzzing to generate</font>

625
00:30:34,000 --> 00:30:37,440
inputs for these functions<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then I</font>

626
00:30:35,650 --> 00:30:40,440
compared<font color="#E5E5E5"> two different implementations</font>

627
00:30:37,440 --> 00:30:43,690
<font color="#CCCCCC">so if open messes</font>

628
00:30:40,440 --> 00:30:45,730
<font color="#E5E5E5">exponentiation and</font><font color="#CCCCCC"> lip decrypt as an</font>

629
00:30:43,690 --> 00:30:46,869
exponentiation<font color="#CCCCCC"> and the result is</font>

630
00:30:45,730 --> 00:30:48,879
different<font color="#E5E5E5"> then something is wrong</font>

631
00:30:46,869 --> 00:30:57,730
because an exponentiation has a<font color="#E5E5E5"> clear</font>

632
00:30:48,879 --> 00:30:59,830
unique<font color="#E5E5E5"> correct result yeah</font><font color="#CCCCCC"> a problem</font>

633
00:30:57,730 --> 00:31:04,360
<font color="#CCCCCC">with thisis</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> I don't see how you could</font>

634
00:30:59,830 --> 00:31:06,610
test this remotely<font color="#E5E5E5"> so there yeah so if I</font>

635
00:31:04,360 --> 00:31:09,059
only have access<font color="#CCCCCC"> to a device</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> a</font>

636
00:31:06,610 --> 00:31:11,740
<font color="#CCCCCC">network or even if I have</font><font color="#E5E5E5"> access to the</font>

637
00:31:09,059 --> 00:31:14,049
device itself<font color="#E5E5E5"> but I don't have the</font>

638
00:31:11,740 --> 00:31:21,190
source<font color="#CCCCCC"> code then</font><font color="#E5E5E5"> I don't see a way to</font>

639
00:31:14,049 --> 00:31:24,700
find these kinds<font color="#E5E5E5"> of</font><font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> easily yeah and</font>

640
00:31:21,190 --> 00:31:28,269
this<font color="#CCCCCC"> is a bit conclusion of</font><font color="#E5E5E5"> all these</font>

641
00:31:24,700 --> 00:31:30,549
things<font color="#E5E5E5"> I would say almost every</font>

642
00:31:28,269 --> 00:31:32,889
imaginable<font color="#E5E5E5"> TLS implementation flaw can</font>

643
00:31:30,549 --> 00:31:34,600
be found in the wild<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> also if you</font>

644
00:31:32,889 --> 00:31:36,219
<font color="#E5E5E5">are doing security research I would</font>

645
00:31:34,600 --> 00:31:39,850
<font color="#E5E5E5">recommend if you</font><font color="#CCCCCC"> want to write a cool</font>

646
00:31:36,220 --> 00:31:41,559
paper about TLS just look how TLS works

647
00:31:39,850 --> 00:31:43,449
<font color="#E5E5E5">and then think</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> can this go wrong</font>

648
00:31:41,559 --> 00:31:46,178
<font color="#CCCCCC">and how</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> it go wrong and</font><font color="#E5E5E5"> what happens</font>

649
00:31:43,450 --> 00:31:48,039
then<font color="#E5E5E5"> and can we check for</font><font color="#CCCCCC"> this then you</font>

650
00:31:46,179 --> 00:31:49,899
do an<font color="#E5E5E5"> internet wide scan for this and</font>

651
00:31:48,039 --> 00:31:55,629
then you will<font color="#E5E5E5"> probably find some</font>

652
00:31:49,899 --> 00:32:00,039
implementations that<font color="#E5E5E5"> get it wrong so</font>

653
00:31:55,629 --> 00:32:02,350
what can<font color="#CCCCCC"> we do about this testing and</font>

654
00:32:00,039 --> 00:32:04,269
what's a bit unfortunate is that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

655
00:32:02,350 --> 00:32:06,490
we don't have<font color="#E5E5E5"> good test tools for TLS</font>

656
00:32:04,269 --> 00:32:10,539
implementations<font color="#E5E5E5"> there are a</font><font color="#CCCCCC"> number of</font>

657
00:32:06,490 --> 00:32:12,279
<font color="#E5E5E5">tools</font><font color="#CCCCCC"> but all of them are not really</font>

658
00:32:10,539 --> 00:32:16,029
satisfying so what I would<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have</font>

659
00:32:12,279 --> 00:32:18,220
is that<font color="#CCCCCC"> I say here's my server</font><font color="#E5E5E5"> your test</font>

660
00:32:16,029 --> 00:32:21,879
tool just test the server for all these

661
00:32:18,220 --> 00:32:24,309
TLS issues<font color="#CCCCCC"> and then give me a</font><font color="#E5E5E5"> summary</font>

662
00:32:21,879 --> 00:32:26,230
and tell me if there's anything that's

663
00:32:24,309 --> 00:32:30,158
not<font color="#E5E5E5"> compliant</font><font color="#CCCCCC"> with the standard</font><font color="#E5E5E5"> that's</font>

664
00:32:26,230 --> 00:32:32,379
weird<font color="#CCCCCC"> and</font><font color="#E5E5E5"> unfortunately there's no tool</font>

665
00:32:30,159 --> 00:32:34,990
that's covering all the issues that I

666
00:32:32,379 --> 00:32:36,969
described here<font color="#E5E5E5"> and not even like some of</font>

667
00:32:34,990 --> 00:32:39,549
them you cannot test<font color="#CCCCCC"> remotely but most</font>

668
00:32:36,970 --> 00:32:42,220
of them can<font color="#E5E5E5"> be tested easily and there's</font>

669
00:32:39,549 --> 00:32:44,249
no conclusive<font color="#E5E5E5"> tool for that and that's</font>

670
00:32:42,220 --> 00:32:46,690
<font color="#E5E5E5">really something I would like to have</font>

671
00:32:44,249 --> 00:32:49,809
<font color="#E5E5E5">and some of them are going in the right</font>

672
00:32:46,690 --> 00:32:52,350
direction but like for example<font color="#E5E5E5"> escapee</font>

673
00:32:49,809 --> 00:32:55,500
SSL TLS until as<font color="#CCCCCC"> far though</font><font color="#E5E5E5"> they say</font>

674
00:32:52,350 --> 00:32:57,659
<font color="#E5E5E5">okay the</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> doing these tests</font>

675
00:32:55,500 --> 00:32:59,789
with the normal as<font color="#E5E5E5"> an implementation is</font>

676
00:32:57,660 --> 00:33:01,980
difficult for<font color="#CCCCCC"> example OpenSSL doesn't</font>

677
00:32:59,789 --> 00:33:03,900
support sending<font color="#E5E5E5"> invalid packages and</font>

678
00:33:01,980 --> 00:33:05,730
that's what you<font color="#E5E5E5"> want to do when you test</font>

679
00:33:03,900 --> 00:33:08,280
for<font color="#E5E5E5"> these</font><font color="#CCCCCC"> packs so they have their own</font>

680
00:33:05,730 --> 00:33:10,590
implementations but I think here as far

681
00:33:08,280 --> 00:33:12,230
<font color="#E5E5E5">as I doesn't support elliptic curves</font><font color="#CCCCCC"> so</font>

682
00:33:10,590 --> 00:33:15,570
it's lacking<font color="#E5E5E5"> a lot of features and</font>

683
00:33:12,230 --> 00:33:19,650
<font color="#CCCCCC">escape ssl/tls</font><font color="#E5E5E5"> didn't support GCM the</font>

684
00:33:15,570 --> 00:33:22,649
last time I<font color="#E5E5E5"> checked</font><font color="#CCCCCC"> yeah it's</font><font color="#E5E5E5"> getting</font>

685
00:33:19,650 --> 00:33:27,570
better but<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> we really</font>

686
00:33:22,650 --> 00:33:29,700
should have such a tool yeah

687
00:33:27,570 --> 00:33:32,370
so yeah<font color="#E5E5E5"> as I said we don't have a</font>

688
00:33:29,700 --> 00:33:35,520
thorough TLS test suite<font color="#E5E5E5"> and also</font>

689
00:33:32,370 --> 00:33:37,469
negative tests are important so we don't

690
00:33:35,520 --> 00:33:38,908
<font color="#E5E5E5">only want to know if we can connect but</font>

691
00:33:37,470 --> 00:33:41,039
we also want to<font color="#E5E5E5"> know if</font><font color="#CCCCCC"> we do something</font>

692
00:33:38,909 --> 00:33:43,740
<font color="#CCCCCC">wrong then it sends</font><font color="#E5E5E5"> the correct error</font>

693
00:33:41,039 --> 00:33:45,690
and things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> because it feels</font>

694
00:33:43,740 --> 00:33:49,530
<font color="#E5E5E5">like some people are</font><font color="#CCCCCC"> developing TLS in a</font>

695
00:33:45,690 --> 00:33:58,470
way<font color="#CCCCCC"> okay as soon</font><font color="#E5E5E5"> as it connects it we</font>

696
00:33:49,530 --> 00:34:00,870
are done identifying devices so when we

697
00:33:58,470 --> 00:34:03,440
wrote this GCM paper what was really a

698
00:34:00,870 --> 00:34:06,600
problem<font color="#E5E5E5"> was okay and you they</font><font color="#CCCCCC"> are these</font>

699
00:34:03,440 --> 00:34:09,300
180 servers that<font color="#CCCCCC"> are vulnerable to</font><font color="#E5E5E5"> this</font>

700
00:34:06,600 --> 00:34:11,190
issue but<font color="#E5E5E5"> which product is this like I</font>

701
00:34:09,300 --> 00:34:13,649
know<font color="#CCCCCC"> okay we start webpage but what are</font>

702
00:34:11,190 --> 00:34:17,970
they using<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know</font>

703
00:34:13,649 --> 00:34:20,699
and there I'd say<font color="#E5E5E5"> so there's a header in</font>

704
00:34:17,969 --> 00:34:24,330
the<font color="#E5E5E5"> HTTP standard for if you have a load</font>

705
00:34:20,699 --> 00:34:26,790
balancer<font color="#E5E5E5"> or some things that should add</font>

706
00:34:24,330 --> 00:34:28,409
this header so<font color="#CCCCCC"> that you can debug that</font>

707
00:34:26,790 --> 00:34:31,710
which device was<font color="#CCCCCC"> actually responsible</font>

708
00:34:28,409 --> 00:34:34,169
<font color="#E5E5E5">for doing this TLS connection but nobody</font>

709
00:34:31,710 --> 00:34:36,330
is<font color="#CCCCCC"> using it because</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> say ok we</font>

710
00:34:34,168 --> 00:34:38,549
don't<font color="#E5E5E5"> want to show an attacker what</font>

711
00:34:36,330 --> 00:34:40,679
device we<font color="#CCCCCC"> are using but you're also</font><font color="#E5E5E5"> not</font>

712
00:34:38,550 --> 00:34:42,570
showing it the security<font color="#E5E5E5"> researcher and I</font>

713
00:34:40,679 --> 00:34:44,280
think this is<font color="#E5E5E5"> bad</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think we should be</font>

714
00:34:42,570 --> 00:34:47,850
more transparent<font color="#CCCCCC"> about what we're using</font>

715
00:34:44,280 --> 00:34:49,859
there<font color="#CCCCCC"> I assume this is</font><font color="#E5E5E5"> a controversial</font>

716
00:34:47,850 --> 00:34:52,469
opinion but if you're a device

717
00:34:49,859 --> 00:34:54,540
manufacturer<font color="#CCCCCC"> and the security researcher</font>

718
00:34:52,469 --> 00:34:56,459
finds a back in your product you want

719
00:34:54,540 --> 00:34:59,090
that security<font color="#E5E5E5"> researcher to be able</font><font color="#CCCCCC"> to</font>

720
00:34:56,460 --> 00:34:59,090
contact<font color="#E5E5E5"> you</font>

721
00:35:00,420 --> 00:35:08,010
so conclusions<font color="#E5E5E5"> old attacks are coming</font>

722
00:35:05,200 --> 00:35:10,899
back and we don't learn<font color="#CCCCCC"> from mistakes</font>

723
00:35:08,010 --> 00:35:13,060
<font color="#E5E5E5">implementation</font><font color="#CCCCCC"> backs produce security</font>

724
00:35:10,900 --> 00:35:15,070
risks and they also produce security

725
00:35:13,060 --> 00:35:16,900
risks not only for the<font color="#CCCCCC"> people</font><font color="#E5E5E5"> using</font>

726
00:35:15,070 --> 00:35:21,190
these devices<font color="#CCCCCC"> but sometimes</font><font color="#E5E5E5"> also for the</font>

727
00:35:16,900 --> 00:35:23,050
ecosystem<font color="#E5E5E5"> at large please avoid we</font>

728
00:35:21,190 --> 00:35:25,750
implementing TLS<font color="#E5E5E5"> if you're not up to it</font>

729
00:35:23,050 --> 00:35:27,730
<font color="#CCCCCC">I don't</font><font color="#E5E5E5"> understand why so</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> people</font>

730
00:35:25,750 --> 00:35:30,280
<font color="#E5E5E5">put their own TLS taking their devices</font>

731
00:35:27,730 --> 00:35:32,650
just<font color="#E5E5E5"> I mean I know up methacel has</font>

732
00:35:30,280 --> 00:35:34,750
problems<font color="#E5E5E5"> but open SSL is much better</font>

733
00:35:32,650 --> 00:35:38,740
than most of<font color="#CCCCCC"> the implementations you</font>

734
00:35:34,750 --> 00:35:41,350
will come up yourself<font color="#CCCCCC"> and when does ship</font>

735
00:35:38,740 --> 00:35:42,569
<font color="#E5E5E5">substandard TLS tax and I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> think</font>

736
00:35:41,350 --> 00:35:46,509
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> acceptable</font>

737
00:35:42,570 --> 00:35:50,440
<font color="#CCCCCC">tell this to Apple and we need</font><font color="#E5E5E5"> better</font>

738
00:35:46,510 --> 00:35:53,860
testing<font color="#E5E5E5"> tools yeah thanks for</font><font color="#CCCCCC"> listening</font>

739
00:35:50,440 --> 00:35:57,310
<font color="#CCCCCC">and if you have questions</font><font color="#E5E5E5"> yeah yeah</font>

740
00:35:53,860 --> 00:36:01,150
we've got<font color="#E5E5E5"> four</font><font color="#CCCCCC"> questions up</font><font color="#E5E5E5"> on the</font>

741
00:35:57,310 --> 00:36:03,700
screen so when can we expect to<font color="#E5E5E5"> see TLS</font>

742
00:36:01,150 --> 00:36:09,670
1.3 become<font color="#E5E5E5"> widely available for use your</font>

743
00:36:03,700 --> 00:36:12,040
slide mentioned<font color="#CCCCCC"> sometime soon okay so I</font>

744
00:36:09,670 --> 00:36:14,140
don't<font color="#CCCCCC"> know what the exact plan</font><font color="#E5E5E5"> of the</font>

745
00:36:12,040 --> 00:36:16,690
IETF<font color="#E5E5E5"> is there's a lot of work going on</font>

746
00:36:14,140 --> 00:36:18,790
<font color="#E5E5E5">right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I expect once it's a</font>

747
00:36:16,690 --> 00:36:22,870
standard it will be pretty<font color="#E5E5E5"> fast</font><font color="#CCCCCC"> because</font>

748
00:36:18,790 --> 00:36:25,060
at least because the the<font color="#CCCCCC"> browsers are</font>

749
00:36:22,870 --> 00:36:26,740
really much faster<font color="#E5E5E5"> on this these</font><font color="#CCCCCC"> days</font>

750
00:36:25,060 --> 00:36:28,750
than they were earlier so Google is

751
00:36:26,740 --> 00:36:30,669
<font color="#E5E5E5">heavily involved in specifying the</font>

752
00:36:28,750 --> 00:36:32,890
standard and I expect that<font color="#E5E5E5"> chrome will</font>

753
00:36:30,670 --> 00:36:34,810
probably should<font color="#E5E5E5"> tell us</font><font color="#CCCCCC"> 1.3 a couple of</font>

754
00:36:32,890 --> 00:36:39,100
weeks<font color="#E5E5E5"> after</font><font color="#CCCCCC"> its standardized and I</font>

755
00:36:34,810 --> 00:36:41,259
expect it<font color="#CCCCCC"> to be sanitized this year how</font>

756
00:36:39,100 --> 00:36:43,390
<font color="#E5E5E5">can we encourage</font><font color="#CCCCCC"> browser</font><font color="#E5E5E5"> TLS client</font>

757
00:36:41,260 --> 00:36:45,730
vendors to stand their ground and<font color="#E5E5E5"> not</font>

758
00:36:43,390 --> 00:36:47,680
write workarounds forcing vendors<font color="#E5E5E5"> with</font>

759
00:36:45,730 --> 00:36:50,040
broken implementations to fix their

760
00:36:47,680 --> 00:36:50,040
product

761
00:36:51,000 --> 00:36:56,410
yeah that's a good<font color="#E5E5E5"> question</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know</font>

762
00:36:53,350 --> 00:36:59,589
<font color="#CCCCCC">I wrote angry blog posts about it but</font>

763
00:36:56,410 --> 00:37:02,620
that<font color="#E5E5E5"> doesn't I mean the problem is that</font>

764
00:36:59,590 --> 00:37:04,570
if browser if browsers<font color="#E5E5E5"> don't do these</font>

765
00:37:02,620 --> 00:37:07,270
workarounds<font color="#E5E5E5"> they get the</font><font color="#CCCCCC"> plain as you</font>

766
00:37:04,570 --> 00:37:10,420
say so<font color="#CCCCCC"> earlier the threat on</font><font color="#E5E5E5"> Chrome so I</font>

767
00:37:07,270 --> 00:37:12,550
mean one thing we<font color="#E5E5E5"> can do is if they</font><font color="#CCCCCC"> are</font>

768
00:37:10,420 --> 00:37:15,640
less broken implementations<font color="#E5E5E5"> then we need</font>

769
00:37:12,550 --> 00:37:18,580
fewer workarounds<font color="#E5E5E5"> so if you're buying a</font>

770
00:37:15,640 --> 00:37:20,680
device make<font color="#CCCCCC"> sure that you talk to</font><font color="#E5E5E5"> the</font>

771
00:37:18,580 --> 00:37:22,420
<font color="#E5E5E5">vendor</font><font color="#CCCCCC"> and say</font><font color="#E5E5E5"> is this really</font><font color="#CCCCCC"> sniper</font>

772
00:37:20,680 --> 00:37:26,290
<font color="#E5E5E5">confirmed and if it's not will you</font>

773
00:37:22,420 --> 00:37:28,270
<font color="#E5E5E5">provide an update</font><font color="#CCCCCC"> well I mean</font><font color="#E5E5E5"> if we had</font>

774
00:37:26,290 --> 00:37:30,850
such a test tool then we could say<font color="#E5E5E5"> okay</font>

775
00:37:28,270 --> 00:37:33,070
before<font color="#E5E5E5"> we were to buy a device</font><font color="#CCCCCC"> I run</font>

776
00:37:30,850 --> 00:37:38,020
this test<font color="#CCCCCC"> full on it</font><font color="#E5E5E5"> but it's a tricky</font>

777
00:37:33,070 --> 00:37:39,610
<font color="#CCCCCC">question and yeah I can kind of</font>

778
00:37:38,020 --> 00:37:44,350
understand the browser -<font color="#E5E5E5"> although I</font>

779
00:37:39,610 --> 00:37:46,450
disagree would you say the protocol

780
00:37:44,350 --> 00:37:48,970
implementation errors are an equal<font color="#E5E5E5"> risk</font>

781
00:37:46,450 --> 00:37:51,490
with weak cipher<font color="#CCCCCC"> suites the example</font>

782
00:37:48,970 --> 00:37:54,790
servers offering TLS 1.2<font color="#E5E5E5"> but still</font>

783
00:37:51,490 --> 00:37:56,950
accepting export sizes<font color="#CCCCCC"> um yeah that that</font>

784
00:37:54,790 --> 00:38:00,490
heavily depends on the exact situation

785
00:37:56,950 --> 00:38:03,399
<font color="#E5E5E5">so TLS 1.2 accepting export ciphers is a</font>

786
00:38:00,490 --> 00:38:06,069
<font color="#E5E5E5">back because the the specification says</font>

787
00:38:03,400 --> 00:38:08,290
you should not do<font color="#CCCCCC"> that how severe such</font>

788
00:38:06,070 --> 00:38:10,360
an implementation flaws depends on the

789
00:38:08,290 --> 00:38:18,279
circumstances so there's no<font color="#E5E5E5"> general</font>

790
00:38:10,360 --> 00:38:20,710
answer on this<font color="#E5E5E5"> I think lastly did you</font>

791
00:38:18,280 --> 00:38:23,050
instrument both<font color="#E5E5E5"> SSL implementations when</font>

792
00:38:20,710 --> 00:38:30,520
testing<font color="#CCCCCC"> for the carrier obligation focus</font>

793
00:38:23,050 --> 00:38:33,760
<font color="#CCCCCC">yes if you have more</font><font color="#E5E5E5"> questions I</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> be</font>

794
00:38:30,520 --> 00:38:36,850
at the<font color="#CCCCCC"> hasta</font><font color="#E5E5E5"> so booth</font><font color="#CCCCCC"> during the break</font>

795
00:38:33,760 --> 00:38:39,400
so yeah talk<font color="#E5E5E5"> to me and I'm also</font>

796
00:38:36,850 --> 00:38:42,390
available via<font color="#E5E5E5"> email and I will share the</font>

797
00:38:39,400 --> 00:38:42,390
<font color="#CCCCCC">slides later so</font>

798
00:38:45,990 --> 00:38:48,049
<font color="#E5E5E5">you</font>

