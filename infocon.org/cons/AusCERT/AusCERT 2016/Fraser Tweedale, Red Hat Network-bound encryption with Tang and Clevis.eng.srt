1
00:00:00,030 --> 00:00:06,450
but now I'll ask you<font color="#CCCCCC"> along</font><font color="#E5E5E5"> to Fraser</font>

2
00:00:04,080 --> 00:00:09,420
<font color="#E5E5E5">tweedell from Red Hat giving his</font>

3
00:00:06,450 --> 00:00:12,269
presentation<font color="#CCCCCC"> on</font><font color="#E5E5E5"> network bound encryption</font>

4
00:00:09,420 --> 00:00:14,879
with<font color="#E5E5E5"> tang and clevis</font><font color="#CCCCCC"> if you want to read</font>

5
00:00:12,269 --> 00:00:19,490
um<font color="#E5E5E5"> phrases bow you</font><font color="#CCCCCC"> can again use the app</font>

6
00:00:14,880 --> 00:00:19,490
<font color="#CCCCCC">to do so give him a warm welcome</font>

7
00:00:23,900 --> 00:00:30,538
so good<font color="#E5E5E5"> afternoon</font><font color="#CCCCCC"> I know this is</font><font color="#E5E5E5"> the</font>

8
00:00:27,180 --> 00:00:32,460
last session and probably half of you

9
00:00:30,539 --> 00:00:34,890
either have full brains and the other

10
00:00:32,460 --> 00:00:37,190
half<font color="#E5E5E5"> just want to go get beer so you</font>

11
00:00:34,890 --> 00:00:39,510
know thank<font color="#E5E5E5"> you</font><font color="#CCCCCC"> for coming to my session</font>

12
00:00:37,190 --> 00:00:41,519
yeah I am a software developer<font color="#CCCCCC"> at Red</font>

13
00:00:39,510 --> 00:00:43,649
Hat<font color="#E5E5E5"> so I'm definitely not on sort of the</font>

14
00:00:41,520 --> 00:00:45,000
business<font color="#E5E5E5"> and risk side of things that is</font>

15
00:00:43,649 --> 00:00:47,250
quite prominent here<font color="#E5E5E5"> at this conference</font>

16
00:00:45,000 --> 00:00:48,870
<font color="#CCCCCC">so I do feel almost</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> a fish out of</font>

17
00:00:47,250 --> 00:00:53,340
water<font color="#E5E5E5"> but it's good to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> here and get</font>

18
00:00:48,870 --> 00:00:55,680
<font color="#E5E5E5">these other perspectives on security</font>

19
00:00:53,340 --> 00:00:58,199
technology I'm going to talk to you

20
00:00:55,680 --> 00:00:59,609
about<font color="#E5E5E5"> network bound encryption and and</font>

21
00:00:58,199 --> 00:01:03,839
some<font color="#E5E5E5"> interesting tools we're building</font>

22
00:00:59,609 --> 00:01:05,760
around that at Red Hat<font color="#CCCCCC"> so let's</font><font color="#E5E5E5"> start</font>

23
00:01:03,840 --> 00:01:09,710
<font color="#E5E5E5">with a story and the story</font><font color="#CCCCCC"> is the story</font>

24
00:01:05,760 --> 00:01:13,140
<font color="#E5E5E5">of</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> hard disk</font><font color="#CCCCCC"> this hard disk lives in a</font>

25
00:01:09,710 --> 00:01:16,740
employees workstation or laptop computer

26
00:01:13,140 --> 00:01:19,020
<font color="#CCCCCC">or maybe in a data center and</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> disk</font>

27
00:01:16,740 --> 00:01:21,449
has full disk encryption so it has

28
00:01:19,020 --> 00:01:24,479
volume encryption keys on it<font color="#CCCCCC"> and when</font>

29
00:01:21,450 --> 00:01:27,330
the<font color="#E5E5E5"> machine boots up</font><font color="#CCCCCC"> a passphrase needs</font>

30
00:01:24,479 --> 00:01:29,369
to needs to be supplied<font color="#E5E5E5"> in order to</font>

31
00:01:27,330 --> 00:01:33,090
decrypt the<font color="#E5E5E5"> volume and continue with the</font>

32
00:01:29,369 --> 00:01:34,500
boot and so we have a we've got<font color="#CCCCCC"> a bit</font><font color="#E5E5E5"> of</font>

33
00:01:33,090 --> 00:01:36,390
a management problem here<font color="#E5E5E5"> because every</font>

34
00:01:34,500 --> 00:01:38,520
time the<font color="#E5E5E5"> user boots up their computer</font>

35
00:01:36,390 --> 00:01:41,939
they need to go and key in this

36
00:01:38,520 --> 00:01:43,590
passphrase this is obviously a step that

37
00:01:41,939 --> 00:01:46,250
<font color="#E5E5E5">must be</font><font color="#CCCCCC"> performed every time depending</font>

38
00:01:43,590 --> 00:01:49,710
on<font color="#E5E5E5"> how often they boot their computer</font>

39
00:01:46,250 --> 00:01:51,149
<font color="#CCCCCC">hopefully</font><font color="#E5E5E5"> not too often but</font><font color="#CCCCCC"> depending</font><font color="#E5E5E5"> on</font>

40
00:01:49,710 --> 00:01:53,399
<font color="#CCCCCC">the operating system you</font><font color="#E5E5E5"> might need to</font>

41
00:01:51,149 --> 00:01:56,340
reboot it<font color="#E5E5E5"> more or less frequently</font><font color="#CCCCCC"> to</font>

42
00:01:53,399 --> 00:01:57,899
apply<font color="#E5E5E5"> critical system updates</font><font color="#CCCCCC"> in a data</font>

43
00:01:56,340 --> 00:01:59,280
center<font color="#E5E5E5"> again you're not going to be</font>

44
00:01:57,899 --> 00:02:02,040
rebooting your systems particularly

45
00:01:59,280 --> 00:02:04,020
frequently but they might need<font color="#E5E5E5"> to come</font>

46
00:02:02,040 --> 00:02:07,140
up again<font color="#CCCCCC"> because you've had critical</font>

47
00:02:04,020 --> 00:02:10,799
system updates to apply or the kernels

48
00:02:07,140 --> 00:02:13,590
panicked or whatever so you need to get

49
00:02:10,800 --> 00:02:17,069
<font color="#E5E5E5">a decryption passphrase</font>

50
00:02:13,590 --> 00:02:18,840
<font color="#E5E5E5">to this system so you know</font><font color="#CCCCCC"> datacenter</font>

51
00:02:17,069 --> 00:02:22,379
<font color="#E5E5E5">this can be over a lights-out management</font>

52
00:02:18,840 --> 00:02:24,269
system or as a last<font color="#E5E5E5"> resort</font><font color="#CCCCCC"> someone</font>

53
00:02:22,379 --> 00:02:26,459
physically at a terminal<font color="#CCCCCC"> key</font><font color="#E5E5E5"> in a</font>

54
00:02:24,269 --> 00:02:27,810
passphrase<font color="#CCCCCC"> for your user it's something</font>

55
00:02:26,459 --> 00:02:31,739
they have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do every</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> you boot the</font>

56
00:02:27,810 --> 00:02:33,030
<font color="#CCCCCC">system the advantages of full disk</font>

57
00:02:31,739 --> 00:02:34,650
encryption of course is that<font color="#E5E5E5"> if the</font>

58
00:02:33,030 --> 00:02:37,440
<font color="#CCCCCC">machine</font><font color="#E5E5E5"> you know needs to</font><font color="#CCCCCC"> be sent off</font>

59
00:02:34,650 --> 00:02:39,450
for warranty<font color="#E5E5E5"> service or is</font>

60
00:02:37,440 --> 00:02:42,030
<font color="#E5E5E5">decommissioned you don't need to worry</font>

61
00:02:39,450 --> 00:02:44,190
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> security of</font><font color="#E5E5E5"> that data but most</font>

62
00:02:42,030 --> 00:02:46,709
<font color="#E5E5E5">of the time the machine is the disk is</font>

63
00:02:44,190 --> 00:02:49,530
going<font color="#E5E5E5"> to be used in</font><font color="#CCCCCC"> a secure context the</font>

64
00:02:46,709 --> 00:02:53,099
employee is at the<font color="#E5E5E5"> office or the</font><font color="#CCCCCC"> disk is</font>

65
00:02:49,530 --> 00:02:55,110
<font color="#E5E5E5">in its usual rack in the data center so</font>

66
00:02:53,099 --> 00:02:58,670
it would be nice if<font color="#CCCCCC"> there</font><font color="#E5E5E5"> were ways to</font>

67
00:02:55,110 --> 00:02:58,670
<font color="#CCCCCC">automate the unlocking of</font><font color="#E5E5E5"> disks</font><font color="#CCCCCC"> so</font>

68
00:02:59,450 --> 00:03:06,390
<font color="#CCCCCC">another common use</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> for decryption</font>

69
00:03:03,569 --> 00:03:09,119
<font color="#CCCCCC">of</font><font color="#E5E5E5"> Secrets is TLS private keys and other</font>

70
00:03:06,390 --> 00:03:12,690
<font color="#CCCCCC">secrets used in your network</font>

71
00:03:09,120 --> 00:03:15,030
applications and once<font color="#CCCCCC"> again these need</font>

72
00:03:12,690 --> 00:03:18,239
<font color="#CCCCCC">to be supplied</font><font color="#E5E5E5"> not a server boot up time</font>

73
00:03:15,030 --> 00:03:22,620
but the boot up of your server<font color="#CCCCCC"> software</font>

74
00:03:18,239 --> 00:03:24,450
so you know there's a basic example<font color="#CCCCCC"> you</font>

75
00:03:22,620 --> 00:03:25,829
bring up the Apache web server and<font color="#E5E5E5"> it</font>

76
00:03:24,450 --> 00:03:28,738
prompts you please enter the passphrase

77
00:03:25,829 --> 00:03:31,410
<font color="#CCCCCC">for your private keys</font><font color="#E5E5E5"> so again there's a</font>

78
00:03:28,739 --> 00:03:34,500
management overhead here<font color="#E5E5E5"> and ideally</font>

79
00:03:31,410 --> 00:03:38,400
we'd<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to automate that away but</font><font color="#CCCCCC"> also</font>

80
00:03:34,500 --> 00:03:40,470
have our<font color="#E5E5E5"> secrets encrypted at rest</font><font color="#CCCCCC"> it's</font>

81
00:03:38,400 --> 00:03:41,760
quite<font color="#E5E5E5"> common to see advice on the</font>

82
00:03:40,470 --> 00:03:43,799
internet you know<font color="#CCCCCC"> it's don't have to</font>

83
00:03:41,760 --> 00:03:45,450
look<font color="#E5E5E5"> far on</font><font color="#CCCCCC"> Stack Overflow to find</font>

84
00:03:43,799 --> 00:03:48,150
<font color="#E5E5E5">someone asking the question are</font><font color="#CCCCCC"> you know</font>

85
00:03:45,450 --> 00:03:52,018
every time<font color="#CCCCCC"> I start the server</font><font color="#E5E5E5"> it's it's</font>

86
00:03:48,150 --> 00:03:54,480
prompting<font color="#CCCCCC"> me to enter my password and</font>

87
00:03:52,019 --> 00:03:56,700
you know if my machine<font color="#E5E5E5"> gets rebooted or</font>

88
00:03:54,480 --> 00:03:59,099
<font color="#E5E5E5">something I don't</font><font color="#CCCCCC"> I just wanted to come</font>

89
00:03:56,700 --> 00:04:00,540
back up<font color="#E5E5E5"> and usually</font><font color="#CCCCCC"> the advice is</font>

90
00:03:59,099 --> 00:04:02,608
something like well just<font color="#E5E5E5"> run this open</font>

91
00:04:00,540 --> 00:04:03,989
<font color="#E5E5E5">SSL command and the result is that the</font>

92
00:04:02,609 --> 00:04:07,799
keys are<font color="#E5E5E5"> just sitting there on the disk</font>

93
00:04:03,989 --> 00:04:14,030
<font color="#CCCCCC">in the clear which</font><font color="#E5E5E5"> is poor security</font>

94
00:04:07,799 --> 00:04:16,829
hygiene<font color="#E5E5E5"> and then how</font><font color="#CCCCCC"> old friend USB so</font>

95
00:04:14,030 --> 00:04:19,889
<font color="#CCCCCC">USB drives</font><font color="#E5E5E5"> containing potentially</font>

96
00:04:16,829 --> 00:04:24,000
sensitive<font color="#E5E5E5"> corporate information being</font>

97
00:04:19,889 --> 00:04:25,270
taken home by<font color="#E5E5E5"> employees is an issue and</font>

98
00:04:24,000 --> 00:04:28,000
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> something that many</font><font color="#E5E5E5"> organized</font>

99
00:04:25,270 --> 00:04:30,758
have to be concerned about whether the

100
00:04:28,000 --> 00:04:33,550
exfiltration is<font color="#E5E5E5"> malicious or nearly</font>

101
00:04:30,759 --> 00:04:37,210
merely negligent<font color="#CCCCCC"> and of course the flip</font>

102
00:04:33,550 --> 00:04:40,120
<font color="#E5E5E5">side of of the USB scenario is people</font>

103
00:04:37,210 --> 00:04:42,250
bringing in<font color="#E5E5E5"> USB sticks from outside the</font>

104
00:04:40,120 --> 00:04:45,400
<font color="#E5E5E5">organization containing unauthorized</font>

105
00:04:42,250 --> 00:04:47,470
software<font color="#CCCCCC"> malware you know they've picked</font>

106
00:04:45,400 --> 00:04:50,380
it up off<font color="#CCCCCC"> the footpath</font><font color="#E5E5E5"> outside the</font>

107
00:04:47,470 --> 00:04:52,240
<font color="#E5E5E5">building and thought</font><font color="#CCCCCC"> oh this</font><font color="#E5E5E5"> this looks</font>

108
00:04:50,380 --> 00:04:54,069
interesting<font color="#CCCCCC"> let's take</font><font color="#E5E5E5"> it into the</font>

109
00:04:52,240 --> 00:04:57,130
<font color="#E5E5E5">building and plug it in and see what's</font>

110
00:04:54,069 --> 00:04:58,870
<font color="#E5E5E5">on</font><font color="#CCCCCC"> it and then you're hosed</font><font color="#E5E5E5"> so it would</font>

111
00:04:57,130 --> 00:05:01,750
<font color="#E5E5E5">be nice if</font><font color="#CCCCCC"> there were ways</font><font color="#E5E5E5"> to encrypt</font>

112
00:04:58,870 --> 00:05:03,550
the data on the USB<font color="#E5E5E5"> disks in a way where</font>

113
00:05:01,750 --> 00:05:05,789
they can<font color="#E5E5E5"> be used securely within an</font>

114
00:05:03,550 --> 00:05:08,860
<font color="#E5E5E5">organization transporting data around</font>

115
00:05:05,789 --> 00:05:11,380
<font color="#CCCCCC">you know something that many people are</font>

116
00:05:08,860 --> 00:05:14,440
quite<font color="#E5E5E5"> used to</font><font color="#CCCCCC"> doing I've got to get this</font>

117
00:05:11,380 --> 00:05:16,330
big file from<font color="#E5E5E5"> my system over to Bob</font>

118
00:05:14,440 --> 00:05:18,330
<font color="#E5E5E5">because Bob needs it just plug in the</font>

119
00:05:16,330 --> 00:05:21,130
<font color="#E5E5E5">USB stick and you know throw it</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> Bob</font>

120
00:05:18,330 --> 00:05:26,020
so we want to still enable<font color="#E5E5E5"> these use</font>

121
00:05:21,130 --> 00:05:27,849
<font color="#CCCCCC">cases</font><font color="#E5E5E5"> but ensure that the USB volumes</font>

122
00:05:26,020 --> 00:05:31,060
are useless when taken outside<font color="#CCCCCC"> the</font>

123
00:05:27,849 --> 00:05:33,520
<font color="#E5E5E5">organization and also to prevent</font>

124
00:05:31,060 --> 00:05:37,719
unauthorized volumes being used within

125
00:05:33,520 --> 00:05:39,758
<font color="#CCCCCC">your within</font><font color="#E5E5E5"> your organization</font><font color="#CCCCCC"> so these</font>

126
00:05:37,719 --> 00:05:41,680
are some use<font color="#CCCCCC"> cases that we're looking</font><font color="#E5E5E5"> at</font>

127
00:05:39,759 --> 00:05:43,630
<font color="#E5E5E5">developing solutions for in Red Hat</font><font color="#CCCCCC"> and</font>

128
00:05:41,680 --> 00:05:47,169
right now I'm going<font color="#E5E5E5"> to jump</font><font color="#CCCCCC"> into a demo</font>

129
00:05:43,630 --> 00:05:49,000
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> software that</font><font color="#E5E5E5"> we've been</font>

130
00:05:47,169 --> 00:05:52,000
<font color="#E5E5E5">developing</font><font color="#CCCCCC"> I've worked a little bit</font><font color="#E5E5E5"> on</font>

131
00:05:49,000 --> 00:05:54,250
it but I'm<font color="#E5E5E5"> not the main developer and</font>

132
00:05:52,000 --> 00:05:57,340
this<font color="#E5E5E5"> software what you're going to see</font>

133
00:05:54,250 --> 00:06:03,789
in this demo<font color="#E5E5E5"> specifically addresses the</font>

134
00:05:57,340 --> 00:06:08,380
full disk encryption use case<font color="#CCCCCC"> ok so on</font>

135
00:06:03,789 --> 00:06:10,000
the Left<font color="#CCCCCC"> we have a it's a virtual</font>

136
00:06:08,380 --> 00:06:10,569
<font color="#CCCCCC">machine but</font><font color="#E5E5E5"> it's it's got an encrypted</font>

137
00:06:10,000 --> 00:06:12,669
disk

138
00:06:10,569 --> 00:06:15,729
so<font color="#E5E5E5"> I've booted it up and it's currently</font>

139
00:06:12,669 --> 00:06:18,609
prompting me<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the passphrase to</font>

140
00:06:15,729 --> 00:06:21,460
unlock the volume keys and continue the

141
00:06:18,610 --> 00:06:21,940
boot so I'm just going<font color="#CCCCCC"> to enter</font><font color="#E5E5E5"> the</font>

142
00:06:21,460 --> 00:06:24,758
passphrase

143
00:06:21,940 --> 00:06:27,039
over on the right this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a server it's</font>

144
00:06:24,759 --> 00:06:29,500
on the same<font color="#E5E5E5"> network as the</font><font color="#CCCCCC"> client on the</font>

145
00:06:27,039 --> 00:06:33,130
left<font color="#E5E5E5"> and I'm going to set up some</font>

146
00:06:29,500 --> 00:06:36,699
<font color="#E5E5E5">software</font><font color="#CCCCCC"> on this system</font><font color="#E5E5E5"> so it's a server</font>

147
00:06:33,130 --> 00:06:38,969
the software is<font color="#E5E5E5"> called</font><font color="#CCCCCC"> Tang so the</font>

148
00:06:36,699 --> 00:06:42,040
software is<font color="#CCCCCC"> installed if we</font>

149
00:06:38,970 --> 00:06:44,350
just have a look<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> RPMs is this big</font>

150
00:06:42,040 --> 00:06:46,590
enough<font color="#CCCCCC"> for everyone by the way can</font>

151
00:06:44,350 --> 00:06:49,930
<font color="#CCCCCC">anyone not read this okay</font>

152
00:06:46,590 --> 00:06:51,969
so the<font color="#E5E5E5"> package is called</font><font color="#CCCCCC"> tanki d it</font>

153
00:06:49,930 --> 00:06:56,200
contains a number<font color="#E5E5E5"> of binaries one of</font>

154
00:06:51,970 --> 00:06:59,470
which<font color="#E5E5E5"> is</font><font color="#CCCCCC"> Tang ki gen which</font><font color="#E5E5E5"> we'll use</font><font color="#CCCCCC"> to</font>

155
00:06:56,200 --> 00:07:04,690
generate<font color="#E5E5E5"> a couple of keys</font><font color="#CCCCCC"> we need to</font>

156
00:06:59,470 --> 00:07:07,000
specify an elliptic curve group there's

157
00:07:04,690 --> 00:07:09,820
a few<font color="#E5E5E5"> supporting groups and don't worry</font>

158
00:07:07,000 --> 00:07:12,100
too much about these details<font color="#CCCCCC"> we're going</font>

159
00:07:09,820 --> 00:07:25,030
to advertise<font color="#E5E5E5"> the key and it's going to</font>

160
00:07:12,100 --> 00:07:33,820
be a signing key<font color="#E5E5E5"> okay hmm</font>

161
00:07:25,030 --> 00:07:36,159
demo gremlins<font color="#E5E5E5"> okay</font>

162
00:07:33,820 --> 00:07:38,469
I just<font color="#CCCCCC"> done a</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> way directory oh</font>

163
00:07:36,160 --> 00:07:39,970
yeah<font color="#E5E5E5"> okay so we've generated a signing</font>

164
00:07:38,470 --> 00:07:43,300
key we also need to generate what's

165
00:07:39,970 --> 00:07:45,760
called the<font color="#E5E5E5"> recovery key and then we can</font>

166
00:07:43,300 --> 00:07:53,250
start<font color="#E5E5E5"> the server so we'll say a system</font>

167
00:07:45,760 --> 00:07:53,250
control start<font color="#E5E5E5"> tang key</font><font color="#CCCCCC"> demon</font><font color="#E5E5E5"> dot socket</font>

168
00:07:55,410 --> 00:07:58,720
so we can see the socket for<font color="#CCCCCC"> the</font>

169
00:07:57,490 --> 00:08:02,940
<font color="#CCCCCC">server's</font><font color="#E5E5E5"> listening it's a socket</font>

170
00:07:58,720 --> 00:08:06,850
activated process<font color="#E5E5E5"> so the service itself</font>

171
00:08:02,940 --> 00:08:08,410
is not actually<font color="#CCCCCC"> running over on the</font>

172
00:08:06,850 --> 00:08:10,840
client<font color="#E5E5E5"> we can see that the boot is</font>

173
00:08:08,410 --> 00:08:13,229
completed so I'm now going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> login to</font>

174
00:08:10,840 --> 00:08:13,229
<font color="#E5E5E5">the system</font>

175
00:08:19,010 --> 00:08:30,330
it's<font color="#E5E5E5"> fire up a terminal okay and over on</font>

176
00:08:28,020 --> 00:08:32,400
this<font color="#CCCCCC"> system</font><font color="#E5E5E5"> if we have a look</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> lux</font>

177
00:08:30,330 --> 00:08:35,279
<font color="#E5E5E5">header so Lux is the Linux unified key</font>

178
00:08:32,400 --> 00:08:41,130
<font color="#CCCCCC">set up disk encryption system for for</font>

179
00:08:35,279 --> 00:08:46,910
<font color="#E5E5E5">Linux so if we do a</font><font color="#CCCCCC"> pseudo crypt setup</font>

180
00:08:41,130 --> 00:08:57,000
Lux dump and the name of<font color="#CCCCCC"> the disk and</font>

181
00:08:46,910 --> 00:09:01,140
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> just grab slot whoops</font><font color="#CCCCCC"> that should</font>

182
00:08:57,000 --> 00:09:03,540
<font color="#E5E5E5">be</font><font color="#CCCCCC"> Deb so we can see that there are</font>

183
00:09:01,140 --> 00:09:05,580
eight slots in the<font color="#E5E5E5"> locks header only one</font>

184
00:09:03,540 --> 00:09:08,670
of them is in use<font color="#CCCCCC"> and this is where the</font>

185
00:09:05,580 --> 00:09:10,890
<font color="#E5E5E5">encrypted pass phrases that so all the</font>

186
00:09:08,670 --> 00:09:14,010
yeah the metadata<font color="#E5E5E5"> that</font><font color="#CCCCCC"> can be unlocked</font>

187
00:09:10,890 --> 00:09:16,199
<font color="#CCCCCC">when</font><font color="#E5E5E5"> I type the passphrase containing</font>

188
00:09:14,010 --> 00:09:20,750
the volume keys<font color="#E5E5E5"> so what we will now</font><font color="#CCCCCC"> do</font>

189
00:09:16,200 --> 00:09:25,830
<font color="#E5E5E5">is we'll run the</font><font color="#CCCCCC"> Tang Lux</font><font color="#E5E5E5"> bind command I</font>

190
00:09:20,750 --> 00:09:29,820
need to do this as<font color="#CCCCCC"> route</font><font color="#E5E5E5"> again will</font>

191
00:09:25,830 --> 00:09:33,360
specify the device<font color="#E5E5E5"> and the host name of</font>

192
00:09:29,820 --> 00:09:35,960
the<font color="#E5E5E5"> Tang server which is F 2033 don't IP</font>

193
00:09:33,360 --> 00:09:35,960
a dot local

194
00:09:48,570 --> 00:09:54,550
<font color="#E5E5E5">hmm</font>

195
00:09:50,310 --> 00:09:59,619
always with<font color="#CCCCCC"> the demo gremlin say 10</font>

196
00:09:54,550 --> 00:10:01,689
<font color="#CCCCCC">bucks point</font><font color="#E5E5E5"> hmm</font>

197
00:09:59,620 --> 00:10:04,150
spare with me while I<font color="#CCCCCC"> should try</font><font color="#E5E5E5"> and</font>

198
00:10:01,690 --> 00:10:06,810
<font color="#CCCCCC">work out in approximately 10 seconds</font>

199
00:10:04,150 --> 00:10:19,689
what's happening here

200
00:10:06,810 --> 00:10:22,380
always with the<font color="#E5E5E5"> gremlins hmm well this</font>

201
00:10:19,690 --> 00:10:22,380
<font color="#E5E5E5">is a problem</font>

202
00:10:31,370 --> 00:10:42,080
is the server running<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> the service</font>

203
00:10:36,020 --> 00:10:43,550
failed to start that's a problem golly

204
00:10:42,080 --> 00:10:49,130
gosh<font color="#E5E5E5"> okay</font>

205
00:10:43,550 --> 00:10:51,529
well always<font color="#E5E5E5"> the demo gremlin say suffice</font>

206
00:10:49,130 --> 00:10:53,810
<font color="#E5E5E5">to say I'll talk you through</font><font color="#CCCCCC"> what what</font>

207
00:10:51,529 --> 00:10:57,230
will have happened<font color="#CCCCCC"> should the binding</font>

208
00:10:53,810 --> 00:10:58,969
program have run successfully<font color="#CCCCCC"> and should</font>

209
00:10:57,230 --> 00:11:01,580
the server have started successfully of

210
00:10:58,970 --> 00:11:04,279
course in the first instance<font color="#CCCCCC"> we</font><font color="#E5E5E5"> would</font>

211
00:11:01,580 --> 00:11:06,260
have been<font color="#E5E5E5"> prompted with the question so</font>

212
00:11:04,279 --> 00:11:10,640
it'll print out a key fingerprint of<font color="#CCCCCC"> the</font>

213
00:11:06,260 --> 00:11:12,350
service signing key<font color="#E5E5E5"> and it will ask</font><font color="#CCCCCC"> be</font>

214
00:11:10,640 --> 00:11:17,029
wish to trust<font color="#E5E5E5"> this key so it's a trust</font>

215
00:11:12,350 --> 00:11:20,089
<font color="#E5E5E5">on first use</font><font color="#CCCCCC"> scheme or tofu if if you're</font>

216
00:11:17,029 --> 00:11:23,320
familiar with that<font color="#E5E5E5"> abbreviation having</font>

217
00:11:20,089 --> 00:11:27,140
trusted<font color="#E5E5E5"> the key it will perform some</font>

218
00:11:23,320 --> 00:11:30,350
computations<font color="#E5E5E5"> using the clients private</font>

219
00:11:27,140 --> 00:11:32,360
key and the service public<font color="#E5E5E5"> key and then</font>

220
00:11:30,350 --> 00:11:36,529
use the result of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> to in cipher the</font>

221
00:11:32,360 --> 00:11:38,810
secret<font color="#CCCCCC"> then and store that data in the</font>

222
00:11:36,529 --> 00:11:42,320
lux header<font color="#E5E5E5"> then I would have rebooted</font>

223
00:11:38,810 --> 00:11:44,329
this system and presuming<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tain</font>

224
00:11:42,320 --> 00:11:49,250
server<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> right-hand</font><font color="#E5E5E5"> side was</font><font color="#CCCCCC"> still</font>

225
00:11:44,330 --> 00:11:51,589
running<font color="#CCCCCC"> the boot prompt to enter the</font>

226
00:11:49,250 --> 00:11:52,970
passphrase<font color="#E5E5E5"> will have come up but whilst</font>

227
00:11:51,589 --> 00:11:55,459
waiting<font color="#CCCCCC"> for me to enter the passphrase</font>

228
00:11:52,970 --> 00:11:57,589
<font color="#CCCCCC">in the background in</font><font color="#E5E5E5"> the boot</font>

229
00:11:55,459 --> 00:11:59,180
environment<font color="#E5E5E5"> the client will</font><font color="#CCCCCC"> be</font>

230
00:11:57,589 --> 00:12:02,029
communicating with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> and</font>

231
00:11:59,180 --> 00:12:04,670
executing the<font color="#E5E5E5"> Tang protocol and should</font>

232
00:12:02,029 --> 00:12:06,770
<font color="#CCCCCC">that execute successfully it will reveal</font>

233
00:12:04,670 --> 00:12:10,459
the<font color="#CCCCCC"> key encryption key</font><font color="#E5E5E5"> and then the boot</font>

234
00:12:06,770 --> 00:12:14,089
will complete without operator

235
00:12:10,459 --> 00:12:16,040
intervention<font color="#CCCCCC"> so the idea here</font><font color="#E5E5E5"> is simply</font>

236
00:12:14,089 --> 00:12:19,010
<font color="#CCCCCC">that we want the</font><font color="#E5E5E5"> systems to come up when</font>

237
00:12:16,040 --> 00:12:20,959
they're in a secure<font color="#CCCCCC"> network where</font><font color="#E5E5E5"> the</font>

238
00:12:19,010 --> 00:12:24,319
Tang server is<font color="#CCCCCC"> available</font><font color="#E5E5E5"> over the</font>

239
00:12:20,959 --> 00:12:28,040
network in that<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> the client</font>

240
00:12:24,320 --> 00:12:30,290
will will come up automatically<font color="#E5E5E5"> and I</font>

241
00:12:28,040 --> 00:12:33,260
really do apologize that this demo is

242
00:12:30,290 --> 00:12:36,800
not<font color="#E5E5E5"> working honestly it's it was all</font>

243
00:12:33,260 --> 00:12:42,079
going<font color="#E5E5E5"> fine you know this morning</font><font color="#CCCCCC"> and</font>

244
00:12:36,800 --> 00:12:43,640
<font color="#CCCCCC">yesterday and I I regret that it's not</font>

245
00:12:42,079 --> 00:12:44,880
working<font color="#CCCCCC"> but if you would</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to see the</font>

246
00:12:43,640 --> 00:12:46,260
demo working coming

247
00:12:44,880 --> 00:12:49,439
<font color="#CCCCCC">I am around for the</font><font color="#E5E5E5"> rest of the</font>

248
00:12:46,260 --> 00:12:51,230
<font color="#CCCCCC">conference and I promise to to get it</font>

249
00:12:49,440 --> 00:12:57,420
<font color="#E5E5E5">going again</font>

250
00:12:51,230 --> 00:13:01,410
okay so that<font color="#E5E5E5"> is the unsuccessful demo</font>

251
00:12:57,420 --> 00:13:03,060
concluded so let's<font color="#CCCCCC"> review what we would</font>

252
00:13:01,410 --> 00:13:04,500
<font color="#E5E5E5">have seen had the demo worked</font>

253
00:13:03,060 --> 00:13:06,150
<font color="#E5E5E5">successfully we would have seen simple</font>

254
00:13:04,500 --> 00:13:08,970
provisioning of encryption<font color="#E5E5E5"> for secrets</font>

255
00:13:06,150 --> 00:13:12,600
at rest<font color="#E5E5E5"> in this particular example for a</font>

256
00:13:08,970 --> 00:13:14,250
disk encryption key automated decryption

257
00:13:12,600 --> 00:13:16,320
when the tank server is available<font color="#CCCCCC"> when</font>

258
00:13:14,250 --> 00:13:17,970
<font color="#E5E5E5">the tank server is not available we just</font>

259
00:13:16,320 --> 00:13:21,030
fall back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the existing</font><font color="#E5E5E5"> method so a</font>

260
00:13:17,970 --> 00:13:22,410
user inputting a passphrase<font color="#CCCCCC"> the</font>

261
00:13:21,030 --> 00:13:24,329
<font color="#E5E5E5">terminology we use here is that the</font>

262
00:13:22,410 --> 00:13:27,750
secret<font color="#E5E5E5"> is bound to the network because</font>

263
00:13:24,330 --> 00:13:29,280
the<font color="#E5E5E5"> automated decryption capability is</font>

264
00:13:27,750 --> 00:13:32,100
<font color="#CCCCCC">only available when it can communicate</font>

265
00:13:29,280 --> 00:13:34,140
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> taint server</font><font color="#E5E5E5"> the final point</font>

266
00:13:32,100 --> 00:13:36,090
the<font color="#E5E5E5"> server never leaving the client is</font>

267
00:13:34,140 --> 00:13:39,180
not<font color="#E5E5E5"> something that is apparent from</font><font color="#CCCCCC"> the</font>

268
00:13:36,090 --> 00:13:42,060
<font color="#E5E5E5">demo but in this protocol the secret is</font>

269
00:13:39,180 --> 00:13:43,829
only ever learned<font color="#E5E5E5"> or known by the client</font>

270
00:13:42,060 --> 00:13:45,479
<font color="#E5E5E5">the server gets no information about it</font>

271
00:13:43,830 --> 00:13:47,370
whatsoever

272
00:13:45,480 --> 00:13:49,800
so in this sense<font color="#E5E5E5"> it's quite distinct</font>

273
00:13:47,370 --> 00:13:56,610
<font color="#CCCCCC">from</font><font color="#E5E5E5"> key escrow has a very good privacy</font>

274
00:13:49,800 --> 00:13:58,079
guarantees<font color="#E5E5E5"> around</font><font color="#CCCCCC"> it the</font><font color="#E5E5E5"> security</font>

275
00:13:56,610 --> 00:13:59,490
assumptions<font color="#E5E5E5"> here of course</font><font color="#CCCCCC"> the taint</font>

276
00:13:58,080 --> 00:14:01,080
server is only accessible from<font color="#CCCCCC"> the</font>

277
00:13:59,490 --> 00:14:05,010
<font color="#E5E5E5">secure</font><font color="#CCCCCC"> network if it's globally</font>

278
00:14:01,080 --> 00:14:06,870
accessible<font color="#CCCCCC"> then you lose</font><font color="#E5E5E5"> the ability</font><font color="#CCCCCC"> to</font>

279
00:14:05,010 --> 00:14:09,150
prevent the<font color="#CCCCCC"> disk from</font><font color="#E5E5E5"> being unlocked if</font>

280
00:14:06,870 --> 00:14:10,440
it's been taken<font color="#CCCCCC"> out of</font><font color="#E5E5E5"> the premises</font><font color="#CCCCCC"> or</font>

281
00:14:09,150 --> 00:14:12,780
<font color="#E5E5E5">you know you've decommissioned it</font>

282
00:14:10,440 --> 00:14:14,310
someone gets a hold<font color="#E5E5E5"> of it if they can</font>

283
00:14:12,780 --> 00:14:16,829
<font color="#CCCCCC">access the tank server then of course</font>

284
00:14:14,310 --> 00:14:19,469
they<font color="#E5E5E5"> can decrypt the disk so this is a</font>

285
00:14:16,830 --> 00:14:22,680
security assumption<font color="#E5E5E5"> with this software</font>

286
00:14:19,470 --> 00:14:25,710
<font color="#CCCCCC">and of course that</font><font color="#E5E5E5"> the secrets and the</font>

287
00:14:22,680 --> 00:14:27,120
keys are<font color="#E5E5E5"> safe in the clients memory but</font>

288
00:14:25,710 --> 00:14:29,480
if your client is compromised in that

289
00:14:27,120 --> 00:14:33,200
way you of course have big problems<font color="#E5E5E5"> and</font>

290
00:14:29,480 --> 00:14:33,200
<font color="#CCCCCC">Tang won't save you</font>

291
00:14:33,480 --> 00:14:37,350
so Tang<font color="#E5E5E5"> Tang is a protocol based on</font>

292
00:14:35,760 --> 00:14:38,760
diffie-hellman exchange and if I have a

293
00:14:37,350 --> 00:14:41,120
show of hands in the room<font color="#E5E5E5"> as anyone</font>

294
00:14:38,760 --> 00:14:43,410
familiar<font color="#E5E5E5"> or was once familiar in</font><font color="#CCCCCC"> a</font>

295
00:14:41,120 --> 00:14:46,440
university with diffie-hellman exchange

296
00:14:43,410 --> 00:14:48,990
and how it works<font color="#CCCCCC"> ok so</font><font color="#E5E5E5"> diffie-hellman</font>

297
00:14:46,440 --> 00:14:51,660
exchange is a key agreement protocol

298
00:14:48,990 --> 00:14:53,750
where two parties<font color="#CCCCCC"> with their public</font><font color="#E5E5E5"> and</font>

299
00:14:51,660 --> 00:14:58,339
private keys public keys can be

300
00:14:53,750 --> 00:15:00,019
<font color="#CCCCCC">public/private</font><font color="#E5E5E5"> are kept to oneself the</font>

301
00:14:58,339 --> 00:15:02,149
<font color="#CCCCCC">two parties can agree on</font><font color="#E5E5E5"> a shared secret</font>

302
00:15:00,019 --> 00:15:04,699
for<font color="#E5E5E5"> the establishment of a secure</font>

303
00:15:02,149 --> 00:15:08,689
communications<font color="#E5E5E5"> channel</font><font color="#CCCCCC"> but an</font>

304
00:15:04,699 --> 00:15:13,128
eavesdropper<font color="#CCCCCC"> Eve cannot learn the shared</font>

305
00:15:08,689 --> 00:15:15,110
secret<font color="#E5E5E5"> there's an encryption</font><font color="#CCCCCC"> school</font>

306
00:15:13,129 --> 00:15:16,910
<font color="#E5E5E5">there are a few encryption schemes based</font>

307
00:15:15,110 --> 00:15:19,399
<font color="#E5E5E5">on difficult and one is the integrated</font>

308
00:15:16,910 --> 00:15:22,399
encryption scheme where this<font color="#E5E5E5"> shared</font>

309
00:15:19,399 --> 00:15:24,050
secret is used as the<font color="#CCCCCC"> input to a key</font>

310
00:15:22,399 --> 00:15:26,930
derivation function<font color="#E5E5E5"> to derive a</font>

311
00:15:24,050 --> 00:15:29,089
symmetric key of a<font color="#E5E5E5"> particular desired</font>

312
00:15:26,930 --> 00:15:32,120
length<font color="#E5E5E5"> and that symmetric key is used to</font>

313
00:15:29,089 --> 00:15:33,110
<font color="#E5E5E5">in cipher a message so on the one side</font>

314
00:15:32,120 --> 00:15:35,480
Alice

315
00:15:33,110 --> 00:15:37,939
given Bob's public key<font color="#E5E5E5"> can encrypt the</font>

316
00:15:35,480 --> 00:15:42,970
message to Bob<font color="#E5E5E5"> and transmit the message</font>

317
00:15:37,939 --> 00:15:45,230
<font color="#E5E5E5">and then Bob is able</font><font color="#CCCCCC"> to compute</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font>

318
00:15:42,970 --> 00:15:47,660
shared secret and derive<font color="#CCCCCC"> the same</font>

319
00:15:45,230 --> 00:15:49,519
symmetric key<font color="#E5E5E5"> using</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> he</font>

320
00:15:47,660 --> 00:15:51,860
receives<font color="#E5E5E5"> from Alice and decrypt the</font>

321
00:15:49,519 --> 00:15:53,839
<font color="#CCCCCC">cipher text</font><font color="#E5E5E5"> but again an eavesdropper is</font>

322
00:15:51,860 --> 00:15:56,930
unable<font color="#CCCCCC"> to obtain enough information</font><font color="#E5E5E5"> to</font>

323
00:15:53,839 --> 00:15:58,790
decrypt<font color="#E5E5E5"> the message so the new</font>

324
00:15:56,930 --> 00:16:01,790
cryptography used in<font color="#CCCCCC"> tain is the</font>

325
00:15:58,790 --> 00:16:03,800
McCallum<font color="#E5E5E5"> Rayleigh exchange</font><font color="#CCCCCC"> so this is</font>

326
00:16:01,790 --> 00:16:06,410
due to<font color="#CCCCCC"> Nathanael</font><font color="#E5E5E5"> McCallum and Robert</font>

327
00:16:03,800 --> 00:16:10,758
<font color="#E5E5E5">Rowe you who are both employees of Red</font>

328
00:16:06,410 --> 00:16:12,860
<font color="#E5E5E5">Hat</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> URL there is the original</font>

329
00:16:10,759 --> 00:16:14,959
posting to<font color="#CCCCCC"> the cryptography mailing list</font>

330
00:16:12,860 --> 00:16:16,399
so<font color="#E5E5E5"> the algorithm is public and in a</font>

331
00:16:14,959 --> 00:16:17,809
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> slides I'm going to take you</font>

332
00:16:16,399 --> 00:16:20,029
through it

333
00:16:17,809 --> 00:16:21,920
the intuition of McAllen Rally exchange

334
00:16:20,029 --> 00:16:24,470
here is that Alice encrypts a message to

335
00:16:21,920 --> 00:16:27,969
Bob's public key<font color="#CCCCCC"> but does not</font><font color="#E5E5E5"> send it to</font>

336
00:16:24,470 --> 00:16:31,309
<font color="#E5E5E5">Bob</font><font color="#CCCCCC"> in order to decrypt</font><font color="#E5E5E5"> the message</font>

337
00:16:27,970 --> 00:16:34,639
<font color="#E5E5E5">Alice has to ask Bob</font><font color="#CCCCCC"> to encrypt</font><font color="#E5E5E5"> an</font>

338
00:16:31,309 --> 00:16:37,100
ephemeral key with Bob's private key<font color="#E5E5E5"> and</font>

339
00:16:34,639 --> 00:16:40,429
then the response<font color="#E5E5E5"> from Bob can be used</font>

340
00:16:37,100 --> 00:16:42,709
to recompute<font color="#E5E5E5"> the the original secret</font>

341
00:16:40,429 --> 00:16:44,829
<font color="#E5E5E5">read</font><font color="#CCCCCC"> arrive</font><font color="#E5E5E5"> the same symmetric key and</font>

342
00:16:42,709 --> 00:16:47,079
decrypt the message so it's about<font color="#CCCCCC"> Alice</font>

343
00:16:44,829 --> 00:16:50,239
encrypting a secret that only<font color="#E5E5E5"> Alice</font>

344
00:16:47,079 --> 00:16:52,489
knows and Alice in<font color="#CCCCCC"> the future can</font>

345
00:16:50,240 --> 00:16:54,199
decrypt<font color="#E5E5E5"> that but Alice requires the</font>

346
00:16:52,490 --> 00:16:56,870
assistance<font color="#CCCCCC"> of Bob to do so</font>

347
00:16:54,199 --> 00:16:59,420
Bob<font color="#E5E5E5"> cannot learn anything about the</font>

348
00:16:56,870 --> 00:17:05,419
secret<font color="#E5E5E5"> and also neither can an</font>

349
00:16:59,420 --> 00:17:08,750
eavesdropper<font color="#E5E5E5"> so caution math ahead</font><font color="#CCCCCC"> it's</font>

350
00:17:05,419 --> 00:17:11,220
only a couple<font color="#E5E5E5"> of slides</font><font color="#CCCCCC"> I promise if</font>

351
00:17:08,750 --> 00:17:17,430
this causes<font color="#E5E5E5"> you pain it won't last long</font>

352
00:17:11,220 --> 00:17:19,290
so the parameters for<font color="#CCCCCC"> McAllen Rally</font>

353
00:17:17,430 --> 00:17:21,810
exchange<font color="#CCCCCC"> much the</font><font color="#E5E5E5"> same as for</font>

354
00:17:19,290 --> 00:17:25,020
diffie-hellman<font color="#CCCCCC"> we need a cyclic group of</font>

355
00:17:21,810 --> 00:17:29,040
order<font color="#E5E5E5"> n with a hard problem such</font><font color="#CCCCCC"> as the</font>

356
00:17:25,020 --> 00:17:31,100
discrete log problem or the<font color="#E5E5E5"> analog</font><font color="#CCCCCC"> to</font>

357
00:17:29,040 --> 00:17:33,570
discrete log which<font color="#CCCCCC"> is a elliptic curve</font>

358
00:17:31,100 --> 00:17:36,810
<font color="#E5E5E5">point factorization in elliptic curve</font>

359
00:17:33,570 --> 00:17:40,169
groups there's a generator which is<font color="#E5E5E5"> just</font>

360
00:17:36,810 --> 00:17:43,950
an<font color="#E5E5E5"> element of the</font><font color="#CCCCCC"> group and is public</font><font color="#E5E5E5"> a</font>

361
00:17:40,170 --> 00:17:46,290
key derivation function<font color="#E5E5E5"> a symmetric</font>

362
00:17:43,950 --> 00:17:49,200
encryption algorithm<font color="#CCCCCC"> and by the</font><font color="#E5E5E5"> way for</font>

363
00:17:46,290 --> 00:17:53,490
<font color="#CCCCCC">these two in our implementation we use</font>

364
00:17:49,200 --> 00:17:57,540
pbkdf2<font color="#CCCCCC"> and AES GCM which is the Galois</font>

365
00:17:53,490 --> 00:18:00,480
counter mode<font color="#CCCCCC"> but again you can choose</font>

366
00:17:57,540 --> 00:18:03,330
any secure<font color="#CCCCCC"> KDF and</font><font color="#E5E5E5"> symmetric cipher and</font>

367
00:18:00,480 --> 00:18:05,910
the<font color="#CCCCCC"> message m to be encrypted which will</font>

368
00:18:03,330 --> 00:18:09,179
be a key encryption key

369
00:18:05,910 --> 00:18:11,340
TLS private key<font color="#E5E5E5"> these sorts of</font><font color="#CCCCCC"> things so</font>

370
00:18:09,180 --> 00:18:18,560
<font color="#CCCCCC">the secrets</font><font color="#E5E5E5"> you actually want protected</font>

371
00:18:11,340 --> 00:18:21,840
at rest so in the encryption<font color="#E5E5E5"> phase</font><font color="#CCCCCC"> Alice</font>

372
00:18:18,560 --> 00:18:24,750
generates<font color="#E5E5E5"> a private key which is an</font>

373
00:18:21,840 --> 00:18:26,730
<font color="#E5E5E5">element of the group</font><font color="#CCCCCC"> Bob also generates</font>

374
00:18:24,750 --> 00:18:29,010
a private key<font color="#E5E5E5"> Alice can generate a</font>

375
00:18:26,730 --> 00:18:31,710
private key<font color="#E5E5E5"> separately for every secret</font>

376
00:18:29,010 --> 00:18:34,410
<font color="#E5E5E5">that needs to</font><font color="#CCCCCC"> be encrypted the service</font>

377
00:18:31,710 --> 00:18:39,000
private<font color="#E5E5E5"> key is persistent so it doesn't</font>

378
00:18:34,410 --> 00:18:41,310
<font color="#E5E5E5">change over time in order to encrypt the</font>

379
00:18:39,000 --> 00:18:45,060
secret<font color="#E5E5E5"> all the client needs to know is</font>

380
00:18:41,310 --> 00:18:47,760
the server's public key<font color="#E5E5E5"> this can be</font>

381
00:18:45,060 --> 00:18:50,310
obtained in<font color="#CCCCCC"> a in what we call an</font>

382
00:18:47,760 --> 00:18:50,820
advertisement request so the client asks

383
00:18:50,310 --> 00:18:54,600
the server

384
00:18:50,820 --> 00:18:59,700
what are your public keys<font color="#CCCCCC"> or it could</font><font color="#E5E5E5"> be</font>

385
00:18:54,600 --> 00:19:02,250
<font color="#E5E5E5">distributed</font><font color="#CCCCCC"> you know in some sort of you</font>

386
00:18:59,700 --> 00:19:03,900
know base image or corporate<font color="#E5E5E5"> stand and</font>

387
00:19:02,250 --> 00:19:05,250
build image or<font color="#E5E5E5"> whatnot so it doesn't</font>

388
00:19:03,900 --> 00:19:09,950
necessarily<font color="#CCCCCC"> involve network</font>

389
00:19:05,250 --> 00:19:09,950
communications for<font color="#CCCCCC"> the provisioning base</font>

390
00:19:10,080 --> 00:19:17,340
so given the server's public key<font color="#CCCCCC"> B Alice</font>

391
00:19:14,370 --> 00:19:21,510
computes this secret<font color="#E5E5E5"> G to</font><font color="#CCCCCC"> the AV the</font>

392
00:19:17,340 --> 00:19:24,179
group generator<font color="#CCCCCC"> ^ a times B to private</font>

393
00:19:21,510 --> 00:19:24,750
keys<font color="#CCCCCC"> and then that is</font><font color="#E5E5E5"> the input to the</font>

394
00:19:24,180 --> 00:19:27,210
key<font color="#CCCCCC"> durable</font>

395
00:19:24,750 --> 00:19:29,730
function and then that is<font color="#E5E5E5"> used to key</font>

396
00:19:27,210 --> 00:19:30,650
the symmetric cipher and encrypt the

397
00:19:29,730 --> 00:19:35,640
message

398
00:19:30,650 --> 00:19:38,720
Alice stores<font color="#E5E5E5"> Bob's public key her own</font>

399
00:19:35,640 --> 00:19:43,380
<font color="#E5E5E5">private her own public key and the</font>

400
00:19:38,720 --> 00:19:47,160
<font color="#CCCCCC">ciphertext and crucially discards her</font>

401
00:19:43,380 --> 00:19:49,650
private<font color="#CCCCCC"> key and the symmetric key so</font>

402
00:19:47,160 --> 00:19:53,340
this<font color="#CCCCCC"> ensures that in the future without</font>

403
00:19:49,650 --> 00:19:55,320
<font color="#E5E5E5">the help of the</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> there's nothing</font>

404
00:19:53,340 --> 00:20:00,480
<font color="#E5E5E5">that can happen on the client in order</font>

405
00:19:55,320 --> 00:20:02,370
<font color="#CCCCCC">to decrypt that secret so for the</font>

406
00:20:00,480 --> 00:20:06,180
decryption phase or<font color="#CCCCCC"> the acquisition</font>

407
00:20:02,370 --> 00:20:09,199
phase the client generates a new private

408
00:20:06,180 --> 00:20:12,540
key X again just an<font color="#E5E5E5"> element of the group</font>

409
00:20:09,200 --> 00:20:15,990
<font color="#CCCCCC">and then calculates this</font><font color="#E5E5E5"> value X which</font>

410
00:20:12,540 --> 00:20:19,129
is<font color="#CCCCCC"> a public key</font><font color="#E5E5E5"> multiplied by the public</font>

411
00:20:15,990 --> 00:20:21,900
key corresponding<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the ephemeral key</font><font color="#E5E5E5"> X</font>

412
00:20:19,130 --> 00:20:24,810
transmits that to the server<font color="#E5E5E5"> in what we</font>

413
00:20:21,900 --> 00:20:27,120
call a recovery request the server in

414
00:20:24,810 --> 00:20:30,840
ciphers that<font color="#E5E5E5"> with be the server's public</font>

415
00:20:27,120 --> 00:20:33,570
key<font color="#E5E5E5"> which you'll recall this assistant</font>

416
00:20:30,840 --> 00:20:37,470
so the server remembers<font color="#E5E5E5"> its public key</font>

417
00:20:33,570 --> 00:20:40,919
and<font color="#CCCCCC"> private key and then this</font><font color="#E5E5E5"> value X</font>

418
00:20:37,470 --> 00:20:43,320
prime<font color="#CCCCCC"> is returned to the</font><font color="#E5E5E5"> client and then</font>

419
00:20:40,920 --> 00:20:46,950
X prime<font color="#CCCCCC"> is used in</font><font color="#E5E5E5"> this computation to</font>

420
00:20:43,320 --> 00:20:49,649
recover the original secret G to the a B

421
00:20:46,950 --> 00:20:51,150
<font color="#E5E5E5">and running math through the key</font>

422
00:20:49,650 --> 00:20:53,910
derivation function once again we get

423
00:20:51,150 --> 00:20:55,260
the<font color="#CCCCCC"> same K as was used to</font><font color="#E5E5E5"> in cipher the</font>

424
00:20:53,910 --> 00:20:58,620
message and then this can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> used to</font>

425
00:20:55,260 --> 00:21:00,750
<font color="#E5E5E5">decrypt the decrypt the original message</font>

426
00:20:58,620 --> 00:21:06,479
which is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> secret you</font><font color="#CCCCCC"> want protected</font>

427
00:21:00,750 --> 00:21:08,520
at rest<font color="#E5E5E5"> okay so that's how that's the</font>

428
00:21:06,480 --> 00:21:13,170
cryptography<font color="#E5E5E5"> that's in use in this</font>

429
00:21:08,520 --> 00:21:14,430
protocol<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so the implementation</font><font color="#E5E5E5"> it's</font>

430
00:21:13,170 --> 00:21:16,260
a server-side<font color="#E5E5E5"> daemon so that's the</font>

431
00:21:14,430 --> 00:21:19,260
detain key D that we saw in the demo

432
00:21:16,260 --> 00:21:22,320
<font color="#CCCCCC">that didn't come up because reasons I</font>

433
00:21:19,260 --> 00:21:24,330
need to<font color="#CCCCCC"> investigate and there's a clever</font>

434
00:21:22,320 --> 00:21:26,669
spin we'll get to what<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> in a few</font>

435
00:21:24,330 --> 00:21:28,770
slides<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> written in C has minimal</font>

436
00:21:26,670 --> 00:21:33,480
dependencies the only dependency is open

437
00:21:28,770 --> 00:21:36,840
SSL<font color="#CCCCCC"> which we use for the asn.1 which is</font>

438
00:21:33,480 --> 00:21:37,779
what the wire protocol uses<font color="#E5E5E5"> and for the</font>

439
00:21:36,840 --> 00:21:40,949
elliptic curve cryptography

440
00:21:37,779 --> 00:21:44,919
<font color="#E5E5E5">Rafi so we</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> use any TLS or anything</font>

441
00:21:40,950 --> 00:21:46,389
like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's small so the</font>

442
00:21:44,919 --> 00:21:50,409
<font color="#E5E5E5">implementation</font><font color="#CCCCCC"> is quite small</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's</font>

443
00:21:46,389 --> 00:21:54,879
very fast<font color="#E5E5E5"> the protocol as I mentioned</font>

444
00:21:50,409 --> 00:21:57,759
<font color="#CCCCCC">uses asn.1</font><font color="#E5E5E5"> objects serialized using the</font>

445
00:21:54,879 --> 00:22:00,158
distinguishing<font color="#E5E5E5"> coding rules</font><font color="#CCCCCC"> the packets</font>

446
00:21:57,759 --> 00:22:03,369
<font color="#CCCCCC">are</font><font color="#E5E5E5"> UDP there's no encryption in the</font>

447
00:22:00,159 --> 00:22:06,279
channel<font color="#E5E5E5"> because you don't need it</font><font color="#CCCCCC"> and in</font>

448
00:22:03,369 --> 00:22:08,259
<font color="#E5E5E5">its current in incantation</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> trust on</font>

449
00:22:06,279 --> 00:22:11,440
first use you<font color="#E5E5E5"> will you would have seen</font>

450
00:22:08,259 --> 00:22:12,999
<font color="#CCCCCC">how</font><font color="#E5E5E5"> the demo worked in the demo the</font>

451
00:22:11,440 --> 00:22:16,330
<font color="#CCCCCC">prompts do you wish to</font><font color="#E5E5E5"> trust these keys</font>

452
00:22:12,999 --> 00:22:19,899
however it's entirely possible<font color="#E5E5E5"> to</font>

453
00:22:16,330 --> 00:22:22,899
implement key pinning so you could for

454
00:22:19,899 --> 00:22:25,059
example<font color="#CCCCCC"> distribute the valid key</font>

455
00:22:22,899 --> 00:22:28,748
fingerprints in your corporate standard

456
00:22:25,059 --> 00:22:31,149
builds<font color="#E5E5E5"> you know or other offline</font>

457
00:22:28,749 --> 00:22:33,969
provisioning methods<font color="#CCCCCC"> or you could</font><font color="#E5E5E5"> store</font>

458
00:22:31,149 --> 00:22:37,119
them in DNS using DNS second and have

459
00:22:33,969 --> 00:22:38,799
records that<font color="#CCCCCC"> are the fingerprints of</font><font color="#E5E5E5"> the</font>

460
00:22:37,119 --> 00:22:41,349
official<font color="#CCCCCC"> taint servers in your</font>

461
00:22:38,799 --> 00:22:43,989
<font color="#E5E5E5">organization for</font><font color="#CCCCCC"> example so you</font><font color="#E5E5E5"> can in</font>

462
00:22:41,349 --> 00:22:46,658
this way potentially<font color="#CCCCCC"> avoid having to</font>

463
00:22:43,989 --> 00:22:48,099
prompt the user and<font color="#E5E5E5"> say you know do you</font>

464
00:22:46,659 --> 00:22:52,570
please check<font color="#E5E5E5"> this fingerprint is it</font>

465
00:22:48,099 --> 00:22:55,178
correct yes or no<font color="#CCCCCC"> why is</font><font color="#E5E5E5"> it important to</font>

466
00:22:52,570 --> 00:22:57,519
<font color="#CCCCCC">do the fingerprint checking is</font><font color="#E5E5E5"> because</font>

467
00:22:55,179 --> 00:22:58,889
if you get<font color="#CCCCCC"> man in the middle during the</font>

468
00:22:57,519 --> 00:23:01,779
provisioning phase or someone

469
00:22:58,889 --> 00:23:03,998
masquerades as the<font color="#CCCCCC"> tang server then it</font>

470
00:23:01,779 --> 00:23:06,519
could cause the client<font color="#E5E5E5"> to encrypt</font><font color="#CCCCCC"> to</font>

471
00:23:03,999 --> 00:23:08,739
bogus or<font color="#E5E5E5"> a non-existent recovery key</font>

472
00:23:06,519 --> 00:23:10,450
which essentially means<font color="#E5E5E5"> that that secret</font>

473
00:23:08,739 --> 00:23:11,830
will be<font color="#E5E5E5"> lost for all time and the client</font>

474
00:23:10,450 --> 00:23:16,149
if<font color="#E5E5E5"> you know if it's full disk encryption</font>

475
00:23:11,830 --> 00:23:19,869
is just ddosed itself<font color="#E5E5E5"> forever</font><font color="#CCCCCC"> unless you</font>

476
00:23:16,149 --> 00:23:22,830
<font color="#E5E5E5">remember the passphrase</font><font color="#CCCCCC"> a running Tang</font>

477
00:23:19,869 --> 00:23:25,330
server is<font color="#E5E5E5"> also a live</font><font color="#CCCCCC"> d OS</font><font color="#E5E5E5"> target and</font>

478
00:23:22,830 --> 00:23:27,070
importantly the security<font color="#CCCCCC"> of the protocol</font>

479
00:23:25,330 --> 00:23:32,109
depends on not<font color="#E5E5E5"> being able to guess the</font>

480
00:23:27,070 --> 00:23:33,549
<font color="#E5E5E5">ephemeral key X so if you are using tang</font>

481
00:23:32,109 --> 00:23:36,099
for full disk encryption you want to

482
00:23:33,549 --> 00:23:38,918
make sure<font color="#E5E5E5"> you have enough entropy</font><font color="#CCCCCC"> when</font>

483
00:23:36,099 --> 00:23:42,879
you go about initiating<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Tang</font>

484
00:23:38,919 --> 00:23:44,440
recovery stage of the protocol because

485
00:23:42,879 --> 00:23:47,408
if you can guess X then the security

486
00:23:44,440 --> 00:23:49,389
breaks down<font color="#CCCCCC"> also this is all the</font>

487
00:23:47,409 --> 00:23:51,520
algorithms<font color="#CCCCCC"> that we're using the</font><font color="#E5E5E5"> the</font>

488
00:23:49,389 --> 00:23:54,189
<font color="#E5E5E5">public key algorithms are vulnerable to</font>

489
00:23:51,520 --> 00:23:56,500
<font color="#CCCCCC">Shor's algorithm so</font><font color="#E5E5E5"> you know if we see</font>

490
00:23:54,190 --> 00:24:00,340
practical quantum computing in the<font color="#CCCCCC"> next</font>

491
00:23:56,500 --> 00:24:02,260
10 or<font color="#CCCCCC"> 20 years</font><font color="#E5E5E5"> then you know this</font>

492
00:24:00,340 --> 00:24:06,870
protocol<font color="#E5E5E5"> will be broken in polynomial</font>

493
00:24:02,260 --> 00:24:09,850
time<font color="#CCCCCC"> so hopefully we can</font><font color="#E5E5E5"> find quantum</font>

494
00:24:06,870 --> 00:24:12,939
computing resistant algorithms<font color="#E5E5E5"> to use</font>

495
00:24:09,850 --> 00:24:15,639
instead<font color="#E5E5E5"> by then so a mission</font>

496
00:24:12,940 --> 00:24:18,760
accomplished<font color="#CCCCCC"> right</font><font color="#E5E5E5"> we've we've succeeded</font>

497
00:24:15,640 --> 00:24:22,270
in<font color="#E5E5E5"> having our automated unlocking of of</font>

498
00:24:18,760 --> 00:24:25,330
secrets<font color="#CCCCCC"> when on a secure Network so when</font>

499
00:24:22,270 --> 00:24:28,300
they have<font color="#E5E5E5"> access</font><font color="#CCCCCC"> to the to the</font><font color="#E5E5E5"> Tang</font>

500
00:24:25,330 --> 00:24:30,309
server but you<font color="#CCCCCC"> know we're</font><font color="#E5E5E5"> not we're</font><font color="#CCCCCC"> not</font>

501
00:24:28,300 --> 00:24:32,700
<font color="#E5E5E5">really there yet because one Tang server</font>

502
00:24:30,309 --> 00:24:36,010
is not really<font color="#E5E5E5"> gonna be very resilient</font>

503
00:24:32,700 --> 00:24:38,650
<font color="#CCCCCC">it's it at the</font><font color="#E5E5E5"> end of the day one one</font>

504
00:24:36,010 --> 00:24:41,830
piece of a<font color="#CCCCCC"> larger puzzle and if we're</font>

505
00:24:38,650 --> 00:24:44,770
going<font color="#E5E5E5"> to bind secrets to detain servers</font>

506
00:24:41,830 --> 00:24:48,010
on a<font color="#E5E5E5"> network</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> other kinds of things</font>

507
00:24:44,770 --> 00:24:49,570
<font color="#E5E5E5">might we want to bind secrets to so the</font>

508
00:24:48,010 --> 00:24:52,270
<font color="#E5E5E5">first one obviously</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> not on the</font>

509
00:24:49,570 --> 00:24:53,740
list is users<font color="#E5E5E5"> pass phrases that they</font>

510
00:24:52,270 --> 00:24:56,920
remember so you use a key stretching

511
00:24:53,740 --> 00:24:59,980
<font color="#E5E5E5">function based on or applied to user</font>

512
00:24:56,920 --> 00:25:02,980
<font color="#E5E5E5">input to to get some sort of secure</font>

513
00:24:59,980 --> 00:25:05,260
secret assuming the<font color="#CCCCCC"> user has a good</font>

514
00:25:02,980 --> 00:25:07,240
passphrase which of course is as we<font color="#CCCCCC"> know</font>

515
00:25:05,260 --> 00:25:10,480
from many<font color="#E5E5E5"> talks today and generally</font>

516
00:25:07,240 --> 00:25:12,790
usually<font color="#E5E5E5"> not a valid assumption</font><font color="#CCCCCC"> we also</font>

517
00:25:10,480 --> 00:25:14,830
might like<font color="#CCCCCC"> to bind to trusted platform</font>

518
00:25:12,790 --> 00:25:18,970
module<font color="#CCCCCC"> chip so you see all secrets in</font>

519
00:25:14,830 --> 00:25:23,110
the TPM so that the so that you've<font color="#E5E5E5"> disk</font>

520
00:25:18,970 --> 00:25:28,240
is bound to some physical<font color="#CCCCCC"> machine or</font>

521
00:25:23,110 --> 00:25:30,250
some machine<font color="#CCCCCC"> State we might want to</font><font color="#E5E5E5"> bind</font>

522
00:25:28,240 --> 00:25:32,170
to smart cards with crypto<font color="#CCCCCC"> processors in</font>

523
00:25:30,250 --> 00:25:33,880
them so a user has to plug in their

524
00:25:32,170 --> 00:25:35,770
smart card in order<font color="#E5E5E5"> to get access to a</font>

525
00:25:33,880 --> 00:25:38,200
<font color="#E5E5E5">secret and then potentially</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font>

526
00:25:35,770 --> 00:25:40,330
derive secrets from biometric data<font color="#E5E5E5"> you</font>

527
00:25:38,200 --> 00:25:43,150
might want to have some master unlock

528
00:25:40,330 --> 00:25:44,678
key for a user<font color="#CCCCCC"> that gets</font><font color="#E5E5E5"> escrowed in</font>

529
00:25:43,150 --> 00:25:47,020
your<font color="#CCCCCC"> organisation so when they first</font>

530
00:25:44,679 --> 00:25:50,530
<font color="#E5E5E5">come</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> board and their equipment</font><font color="#CCCCCC"> gets</font>

531
00:25:47,020 --> 00:25:52,150
provisioned<font color="#CCCCCC"> we have a master unlock key</font>

532
00:25:50,530 --> 00:25:55,530
that gets escrowed and then if that

533
00:25:52,150 --> 00:25:58,809
<font color="#E5E5E5">person gets hit by a bus or leaves</font>

534
00:25:55,530 --> 00:26:01,418
leaves the<font color="#E5E5E5"> organisation and you're left</font>

535
00:25:58,809 --> 00:26:02,700
<font color="#E5E5E5">with a disk and you say well how do we</font>

536
00:26:01,419 --> 00:26:03,850
<font color="#E5E5E5">get back into it</font>

537
00:26:02,700 --> 00:26:06,610
you

538
00:26:03,850 --> 00:26:11,770
potentially<font color="#E5E5E5"> use a master key kept by</font>

539
00:26:06,610 --> 00:26:14,770
your<font color="#CCCCCC"> organization and so and so we</font><font color="#E5E5E5"> get</font>

540
00:26:11,770 --> 00:26:16,270
<font color="#E5E5E5">to the point where you know we make the</font>

541
00:26:14,770 --> 00:26:17,980
observation that security it's not a

542
00:26:16,270 --> 00:26:19,629
binary thing it's not<font color="#E5E5E5"> like you're secure</font>

543
00:26:17,980 --> 00:26:23,230
or you're<font color="#E5E5E5"> not secure but it's a sliding</font>

544
00:26:19,630 --> 00:26:25,929
<font color="#E5E5E5">scale</font><font color="#CCCCCC"> of risk risk</font><font color="#E5E5E5"> but convenience on</font>

545
00:26:23,230 --> 00:26:28,900
one end and security but less

546
00:26:25,929 --> 00:26:33,039
convenience<font color="#E5E5E5"> or outright inconvenience on</font>

547
00:26:28,900 --> 00:26:35,260
<font color="#E5E5E5">the other end and you</font><font color="#CCCCCC"> know where where</font>

548
00:26:33,039 --> 00:26:36,730
to<font color="#E5E5E5"> position yourself on that spectrum</font>

549
00:26:35,260 --> 00:26:38,890
<font color="#E5E5E5">that's going to be different in all</font>

550
00:26:36,730 --> 00:26:42,549
kinds of different<font color="#E5E5E5"> organizations or some</font>

551
00:26:38,890 --> 00:26:45,429
sub organizations and the policies for

552
00:26:42,549 --> 00:26:47,918
<font color="#CCCCCC">Disco mocking or secret unlocking</font><font color="#E5E5E5"> should</font>

553
00:26:45,429 --> 00:26:50,710
be driven by business requirements<font color="#E5E5E5"> and</font>

554
00:26:47,919 --> 00:26:55,179
not by the technical capabilities or

555
00:26:50,710 --> 00:26:56,799
limitations of the<font color="#CCCCCC"> technology as</font><font color="#E5E5E5"> as a</font>

556
00:26:55,179 --> 00:26:58,330
completely<font color="#CCCCCC"> made-up example of an</font>

557
00:26:56,799 --> 00:27:01,000
<font color="#E5E5E5">unlocked policy that you might want for</font>

558
00:26:58,330 --> 00:27:02,860
<font color="#CCCCCC">a</font><font color="#E5E5E5"> user's workstation</font><font color="#CCCCCC"> you could say okay</font>

559
00:27:01,000 --> 00:27:06,130
well I want<font color="#E5E5E5"> either their past their</font>

560
00:27:02,860 --> 00:27:08,289
passphrase or<font color="#E5E5E5"> a</font><font color="#CCCCCC"> Tang server on the</font>

561
00:27:06,130 --> 00:27:13,570
network<font color="#E5E5E5"> if they're you know physically</font>

562
00:27:08,289 --> 00:27:15,850
at an office<font color="#E5E5E5"> or</font><font color="#CCCCCC"> their smart card or some</font>

563
00:27:13,570 --> 00:27:17,918
<font color="#E5E5E5">a secret</font><font color="#CCCCCC"> derived from some biometric</font>

564
00:27:15,850 --> 00:27:20,168
data like a fingerprint<font color="#CCCCCC"> so you say any</font>

565
00:27:17,919 --> 00:27:22,600
two of<font color="#E5E5E5"> these is good enough so that's</font>

566
00:27:20,169 --> 00:27:25,090
<font color="#E5E5E5">stage</font><font color="#CCCCCC"> one and then at the next stage you</font>

567
00:27:22,600 --> 00:27:27,490
<font color="#CCCCCC">say well and we want to make sure</font><font color="#E5E5E5"> that</font>

568
00:27:25,090 --> 00:27:29,408
the disk is plugged into the<font color="#E5E5E5"> computer</font>

569
00:27:27,490 --> 00:27:30,669
that<font color="#E5E5E5"> we gave them to the physical</font>

570
00:27:29,409 --> 00:27:32,830
machine that we gave them so we're<font color="#CCCCCC"> gonna</font>

571
00:27:30,669 --> 00:27:36,280
<font color="#CCCCCC">bind</font><font color="#E5E5E5"> to the TPM</font><font color="#CCCCCC"> and in</font><font color="#E5E5E5"> this case we want</font>

572
00:27:32,830 --> 00:27:38,949
the<font color="#CCCCCC"> result from stage</font><font color="#E5E5E5"> one to</font><font color="#CCCCCC"> be true yes</font>

573
00:27:36,280 --> 00:27:41,408
it's good we'll let them<font color="#E5E5E5"> in but then</font>

574
00:27:38,950 --> 00:27:43,120
also the TPM so we need both of these

575
00:27:41,409 --> 00:27:45,880
threshold of two out of<font color="#E5E5E5"> two</font>

576
00:27:43,120 --> 00:27:47,709
possibilities<font color="#CCCCCC"> and then finally at the</font>

577
00:27:45,880 --> 00:27:51,870
lowest level<font color="#CCCCCC"> we say okay well we want</font>

578
00:27:47,710 --> 00:27:56,799
either<font color="#E5E5E5"> a yes from</font><font color="#CCCCCC"> stage two or some</font>

579
00:27:51,870 --> 00:27:58,539
master passphrase<font color="#E5E5E5"> that that we escrowed</font>

580
00:27:56,799 --> 00:28:01,289
when they came on<font color="#E5E5E5"> board and we'll pull</font>

581
00:27:58,539 --> 00:28:06,400
out as a last resort<font color="#E5E5E5"> if we need to</font><font color="#CCCCCC"> so</font>

582
00:28:01,289 --> 00:28:09,158
<font color="#CCCCCC">we've got sort</font><font color="#E5E5E5"> of this nested nested</font>

583
00:28:06,400 --> 00:28:11,919
<font color="#CCCCCC">unlock policy where we have thresholds</font>

584
00:28:09,159 --> 00:28:15,250
involved and this you<font color="#E5E5E5"> know it's a it's a</font>

585
00:28:11,919 --> 00:28:16,659
contrived example but<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see how</font>

586
00:28:15,250 --> 00:28:17,639
you<font color="#E5E5E5"> might want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> implement a policy</font>

587
00:28:16,659 --> 00:28:21,329
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this in your</font>

588
00:28:17,639 --> 00:28:23,458
organization so we want to make that

589
00:28:21,329 --> 00:28:25,408
<font color="#E5E5E5">possible</font><font color="#CCCCCC"> for people</font><font color="#E5E5E5"> to do so there's an</font>

590
00:28:23,459 --> 00:28:27,599
<font color="#CCCCCC">algorithm called Shamir's secret sharing</font>

591
00:28:25,409 --> 00:28:32,279
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is basically a secret</font><font color="#E5E5E5"> splitting</font>

592
00:28:27,599 --> 00:28:34,979
algorithm<font color="#E5E5E5"> where you</font><font color="#CCCCCC"> can distribute any</font>

593
00:28:32,279 --> 00:28:38,070
as many shares in the secret as you<font color="#E5E5E5"> like</font>

594
00:28:34,979 --> 00:28:40,259
and require a threshold<font color="#E5E5E5"> of K of n</font>

595
00:28:38,070 --> 00:28:43,678
<font color="#E5E5E5">secrets to come back to you in order</font><font color="#CCCCCC"> to</font>

596
00:28:40,259 --> 00:28:46,070
<font color="#E5E5E5">be able to get at the secret</font><font color="#CCCCCC"> the</font>

597
00:28:43,679 --> 00:28:49,529
intuition of Shamir's secret sharing

598
00:28:46,070 --> 00:28:52,799
<font color="#E5E5E5">again comes from math and the</font>

599
00:28:49,529 --> 00:28:56,039
<font color="#E5E5E5">observation that</font><font color="#CCCCCC"> K</font><font color="#E5E5E5"> points describe a</font>

600
00:28:52,799 --> 00:28:58,019
polynomial of degree<font color="#E5E5E5"> K minus 1 so to</font>

601
00:28:56,039 --> 00:28:59,700
describe<font color="#E5E5E5"> a linear function you need two</font>

602
00:28:58,019 --> 00:29:03,509
points<font color="#E5E5E5"> three points describes a</font>

603
00:28:59,700 --> 00:29:04,769
<font color="#E5E5E5">quadratic and so on so in Shamir's</font>

604
00:29:03,509 --> 00:29:08,849
secret showing you randomly<font color="#E5E5E5"> pick</font>

605
00:29:04,769 --> 00:29:11,820
coefficients<font color="#CCCCCC"> in your polynomial</font><font color="#E5E5E5"> of</font>

606
00:29:08,849 --> 00:29:14,939
degree K<font color="#CCCCCC"> minus</font><font color="#E5E5E5"> one where you want K to</font>

607
00:29:11,820 --> 00:29:19,589
<font color="#E5E5E5">be the threshold</font><font color="#CCCCCC"> you distribute points</font>

608
00:29:14,940 --> 00:29:24,029
<font color="#CCCCCC">to</font><font color="#E5E5E5"> on this line</font><font color="#CCCCCC"> to people</font><font color="#E5E5E5"> who are to</font>

609
00:29:19,589 --> 00:29:25,440
hold shares in the secret crucially you

610
00:29:24,029 --> 00:29:27,570
do not distribute the value of the

611
00:29:25,440 --> 00:29:29,339
function<font color="#E5E5E5"> at</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> because the free</font>

612
00:29:27,570 --> 00:29:32,639
coefficient is set to the<font color="#E5E5E5"> value</font><font color="#CCCCCC"> of the</font>

613
00:29:29,339 --> 00:29:34,289
secret and<font color="#CCCCCC"> then given K points you can</font>

614
00:29:32,639 --> 00:29:35,939
compute the Lagrange polynomial to

615
00:29:34,289 --> 00:29:38,399
recover the<font color="#CCCCCC"> secret so as an example this</font>

616
00:29:35,940 --> 00:29:40,589
<font color="#CCCCCC">is a cubic function degree three</font><font color="#E5E5E5"> so four</font>

617
00:29:38,399 --> 00:29:43,889
shares are required to recompute<font color="#CCCCCC"> the</font>

618
00:29:40,589 --> 00:29:45,269
secret the secret<font color="#E5E5E5"> is minus three here on</font>

619
00:29:43,889 --> 00:29:49,859
<font color="#E5E5E5">this black line so the value of the</font>

620
00:29:45,269 --> 00:29:51,479
black line<font color="#CCCCCC"> add zero</font><font color="#E5E5E5"> and there are four</font>

621
00:29:49,859 --> 00:29:54,928
<font color="#E5E5E5">points</font><font color="#CCCCCC"> distributed here these are the</font>

622
00:29:51,479 --> 00:29:56,759
colored circles<font color="#E5E5E5"> on the other lines</font><font color="#CCCCCC"> the</font>

623
00:29:54,929 --> 00:29:59,609
four colored lines are what's<font color="#E5E5E5"> called the</font>

624
00:29:56,759 --> 00:30:01,769
<font color="#CCCCCC">lagrange basis polynomials</font><font color="#E5E5E5"> and basically</font>

625
00:29:59,609 --> 00:30:03,658
you compute the four basis polynomials

626
00:30:01,769 --> 00:30:05,639
given the four shares in the secret and

627
00:30:03,659 --> 00:30:07,889
<font color="#CCCCCC">that allows you</font><font color="#E5E5E5"> to interpolate the</font>

628
00:30:05,639 --> 00:30:12,599
original<font color="#CCCCCC"> polynomial and then you just</font>

629
00:30:07,889 --> 00:30:14,279
get its<font color="#CCCCCC"> value add</font><font color="#E5E5E5"> zero practically in</font>

630
00:30:12,599 --> 00:30:18,269
practical implementations this is all

631
00:30:14,279 --> 00:30:22,049
<font color="#E5E5E5">done in modular arithmetic but this is</font>

632
00:30:18,269 --> 00:30:24,029
the<font color="#E5E5E5"> intuition behind it and so I also</font>

633
00:30:22,049 --> 00:30:28,559
have a demo of Shamir's secret sharing

634
00:30:24,029 --> 00:30:31,099
<font color="#E5E5E5">and hopefully this one does work so I</font>

635
00:30:28,559 --> 00:30:31,099
have a

636
00:30:31,899 --> 00:30:40,100
tanks<font color="#CCCCCC"> over running on this host</font><font color="#E5E5E5"> and this</font>

637
00:30:38,629 --> 00:30:43,149
is the<font color="#CCCCCC"> clevis</font><font color="#E5E5E5"> tool so this is</font><font color="#CCCCCC"> what</font>

638
00:30:40,100 --> 00:30:44,959
<font color="#E5E5E5">clevis comes into it so I do clevis</font>

639
00:30:43,149 --> 00:30:51,559
provision I'm going to provision a

640
00:30:44,960 --> 00:30:55,759
secret -<font color="#CCCCCC"> Oh for the output file over</font>

641
00:30:51,559 --> 00:30:58,580
<font color="#CCCCCC">stop JSON and</font><font color="#E5E5E5"> - P for a pin</font>

642
00:30:55,759 --> 00:31:03,409
specification<font color="#E5E5E5"> and we're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> specify a</font>

643
00:30:58,580 --> 00:31:05,750
password pin and it's going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> ask me</font>

644
00:31:03,409 --> 00:31:06,259
<font color="#CCCCCC">for a passphrase and I'm gonna type that</font>

645
00:31:05,750 --> 00:31:08,659
<font color="#E5E5E5">in</font>

646
00:31:06,259 --> 00:31:10,669
<font color="#CCCCCC">it's then giving us the secret so clevis</font>

647
00:31:08,659 --> 00:31:12,980
<font color="#CCCCCC">is actually generated the secret itself</font>

648
00:31:10,669 --> 00:31:14,929
<font color="#CCCCCC">and told us what it is the</font><font color="#E5E5E5"> secret is now</font>

649
00:31:12,980 --> 00:31:19,029
encrypted<font color="#E5E5E5"> but we go and we use this</font>

650
00:31:14,929 --> 00:31:24,730
<font color="#CCCCCC">secret to encrypt a TLS private key or a</font>

651
00:31:19,029 --> 00:31:24,730
disk encryption key<font color="#CCCCCC"> for the acquisition</font>

652
00:31:25,450 --> 00:31:30,669
we simply provide this same metadata

653
00:31:28,490 --> 00:31:35,690
file the metadata<font color="#E5E5E5"> or the clevis</font>

654
00:31:30,669 --> 00:31:38,000
configuration<font color="#CCCCCC"> I'll just show you that so</font>

655
00:31:35,690 --> 00:31:41,360
if<font color="#E5E5E5"> I pretty print there</font><font color="#CCCCCC"> clevis JSON you</font>

656
00:31:38,000 --> 00:31:43,490
<font color="#CCCCCC">can see it's got information</font><font color="#E5E5E5"> about which</font>

657
00:31:41,360 --> 00:31:46,100
KD FS and ciphers<font color="#CCCCCC"> are used the type of</font>

658
00:31:43,490 --> 00:31:52,309
the pin that<font color="#E5E5E5"> was used and the cipher</font>

659
00:31:46,100 --> 00:31:54,740
text containing the secret so if<font color="#E5E5E5"> I do an</font>

660
00:31:52,309 --> 00:31:56,750
acquire handing it back<font color="#E5E5E5"> that same</font>

661
00:31:54,740 --> 00:31:59,169
configuration<font color="#CCCCCC"> it's going to prompt</font><font color="#E5E5E5"> me</font>

662
00:31:56,750 --> 00:32:01,700
for the passphrase again and if<font color="#E5E5E5"> I</font>

663
00:31:59,169 --> 00:32:03,679
fat-finger that it's gonna not give me

664
00:32:01,700 --> 00:32:06,470
the<font color="#CCCCCC"> passphrase and</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> I type the right</font>

665
00:32:03,679 --> 00:32:08,629
thing it's<font color="#E5E5E5"> gonna give</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> the same secret</font>

666
00:32:06,470 --> 00:32:09,919
that was originally spat out<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> the</font>

667
00:32:08,629 --> 00:32:12,649
secret<font color="#CCCCCC"> that was provisioned is the</font>

668
00:32:09,919 --> 00:32:15,350
secret<font color="#E5E5E5"> that it yields</font><font color="#CCCCCC"> so this is a very</font>

669
00:32:12,649 --> 00:32:19,149
simple clevis policy but let's do

670
00:32:15,350 --> 00:32:19,149
<font color="#E5E5E5">something a bit</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> sophisticated if I</font>

671
00:32:19,480 --> 00:32:27,350
use the Shamir's secret sharing<font color="#E5E5E5"> type</font>

672
00:32:23,139 --> 00:32:30,049
that allows me<font color="#E5E5E5"> to specify an additional</font>

673
00:32:27,350 --> 00:32:34,240
layer of nesting so additional pins as

674
00:32:30,049 --> 00:32:38,529
an array of nested clevis pin

675
00:32:34,240 --> 00:32:42,050
specifications so here<font color="#E5E5E5"> I'll have a</font>

676
00:32:38,529 --> 00:32:47,570
another pass phrase pin

677
00:32:42,050 --> 00:32:53,450
and then<font color="#E5E5E5"> I will also</font><font color="#CCCCCC"> have a tame pin and</font>

678
00:32:47,570 --> 00:32:54,889
I need to give<font color="#E5E5E5"> it a host name and</font><font color="#CCCCCC"> I'll</font>

679
00:32:53,450 --> 00:33:01,300
just talk<font color="#CCCCCC"> to the tanks over</font><font color="#E5E5E5"> running on</font>

680
00:32:54,890 --> 00:33:03,530
<font color="#E5E5E5">this host and finally finally</font><font color="#CCCCCC"> I need to</font>

681
00:33:01,300 --> 00:33:10,490
tell it<font color="#E5E5E5"> what the threshold is I want a</font>

682
00:33:03,530 --> 00:33:13,190
<font color="#CCCCCC">threshold</font><font color="#E5E5E5"> of one and I am missing his</font>

683
00:33:10,490 --> 00:33:15,890
square bracket<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> okay</font>

684
00:33:13,190 --> 00:33:17,600
so it's going<font color="#CCCCCC"> to do two provisioning now</font>

685
00:33:15,890 --> 00:33:20,150
one is the<font color="#E5E5E5"> password provisioning that we</font>

686
00:33:17,600 --> 00:33:23,659
saw a moment<font color="#E5E5E5"> ago</font><font color="#CCCCCC"> and the next one is the</font>

687
00:33:20,150 --> 00:33:25,100
tank provisioning here is the<font color="#E5E5E5"> the trust</font>

688
00:33:23,660 --> 00:33:30,320
on first<font color="#E5E5E5"> used</font><font color="#CCCCCC"> here's the fingerprint do</font>

689
00:33:25,100 --> 00:33:34,100
you want to trust it<font color="#CCCCCC"> I say yes and</font><font color="#E5E5E5"> it's</font>

690
00:33:30,320 --> 00:33:38,960
provisioned the secret<font color="#E5E5E5"> now if I kill the</font>

691
00:33:34,100 --> 00:33:43,399
<font color="#CCCCCC">tame server and run clevis acquire</font>

692
00:33:38,960 --> 00:33:45,380
giving it the clevis<font color="#E5E5E5"> JSON it's prompting</font>

693
00:33:43,400 --> 00:33:47,030
me<font color="#CCCCCC"> for a</font><font color="#E5E5E5"> password</font><font color="#CCCCCC"> and it's also trying</font>

694
00:33:45,380 --> 00:33:49,670
<font color="#E5E5E5">to talk to the tain server but the tain</font>

695
00:33:47,030 --> 00:33:52,639
server is not running<font color="#E5E5E5"> so I need to put</font>

696
00:33:49,670 --> 00:33:55,010
in the passphrase<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> going to give</font>

697
00:33:52,640 --> 00:33:58,580
<font color="#E5E5E5">me the secret</font><font color="#CCCCCC"> if I fire up the tame</font>

698
00:33:55,010 --> 00:34:00,650
server once again and attempt<font color="#E5E5E5"> the</font>

699
00:33:58,580 --> 00:34:01,939
<font color="#E5E5E5">acquisition it's going to prompt</font><font color="#CCCCCC"> me for</font>

700
00:34:00,650 --> 00:34:03,650
the passphrase but also in the

701
00:34:01,940 --> 00:34:05,810
<font color="#E5E5E5">background it's talking to the</font><font color="#CCCCCC"> tame</font>

702
00:34:03,650 --> 00:34:07,790
server and<font color="#E5E5E5"> it's completed the Tang</font>

703
00:34:05,810 --> 00:34:10,870
recovery and<font color="#CCCCCC"> unlocked</font><font color="#E5E5E5"> the secret because</font>

704
00:34:07,790 --> 00:34:13,130
<font color="#CCCCCC">the threshold that we specified was</font><font color="#E5E5E5"> one</font>

705
00:34:10,870 --> 00:34:14,299
so this<font color="#E5E5E5"> is the sort of thing that you</font>

706
00:34:13,130 --> 00:34:20,679
would have<font color="#E5E5E5"> seen in the full disk</font>

707
00:34:14,300 --> 00:34:20,679
encryption example<font color="#E5E5E5"> if it was working</font><font color="#CCCCCC"> so</font>

708
00:34:20,969 --> 00:34:26,158
reviewing<font color="#E5E5E5"> what we just saw there clevis</font>

709
00:34:23,609 --> 00:34:29,460
<font color="#E5E5E5">is client-side pluggable key management</font>

710
00:34:26,159 --> 00:34:31,950
based on Shamir's secret sharing<font color="#CCCCCC"> plugins</font>

711
00:34:29,460 --> 00:34:34,740
are called pins we have<font color="#CCCCCC"> 10 and password</font>

712
00:34:31,949 --> 00:34:36,629
plugins<font color="#E5E5E5"> and the sky's the limit in</font><font color="#CCCCCC"> terms</font>

713
00:34:34,739 --> 00:34:38,399
<font color="#E5E5E5">of</font><font color="#CCCCCC"> what you could write JSON</font>

714
00:34:36,629 --> 00:34:41,129
configuration<font color="#CCCCCC"> name is written in</font><font color="#E5E5E5"> C with</font>

715
00:34:38,399 --> 00:34:43,529
minimal dependencies<font color="#E5E5E5"> the history of</font>

716
00:34:41,129 --> 00:34:46,799
<font color="#E5E5E5">these projects basically</font><font color="#CCCCCC"> early</font><font color="#E5E5E5"> last year</font>

717
00:34:43,530 --> 00:34:52,590
we<font color="#CCCCCC"> started</font><font color="#E5E5E5"> the diode project it was</font>

718
00:34:46,800 --> 00:34:54,510
using<font color="#CCCCCC"> x.509 for authentication</font><font color="#E5E5E5"> and also</font>

719
00:34:52,590 --> 00:34:57,300
the encryption certificates<font color="#CCCCCC"> were x.509</font>

720
00:34:54,510 --> 00:34:59,160
and in this protocol<font color="#E5E5E5"> the client sent a</font>

721
00:34:57,300 --> 00:35:00,720
blob to the server the<font color="#CCCCCC"> server decrypted</font>

722
00:34:59,160 --> 00:35:01,980
at thus learning the secret and sent

723
00:35:00,720 --> 00:35:04,399
that back so this didn't have the

724
00:35:01,980 --> 00:35:06,450
privacy<font color="#E5E5E5"> characteristics that we wanted</font>

725
00:35:04,400 --> 00:35:09,599
<font color="#E5E5E5">in around September</font>

726
00:35:06,450 --> 00:35:10,980
Nathaniel McCallum hadn't had an insight

727
00:35:09,599 --> 00:35:13,290
and<font color="#E5E5E5"> thought maybe we can use something</font>

728
00:35:10,980 --> 00:35:16,560
<font color="#E5E5E5">based on diffie-hellman he worked with</font>

729
00:35:13,290 --> 00:35:18,690
Bob<font color="#E5E5E5"> Rowley and the outcome of that was</font>

730
00:35:16,560 --> 00:35:20,700
the McAllen<font color="#E5E5E5"> Rally algorithm that</font><font color="#CCCCCC"> I</font>

731
00:35:18,690 --> 00:35:24,060
showed a slightly earlier in the

732
00:35:20,700 --> 00:35:25,560
presentation<font color="#E5E5E5"> and then in</font><font color="#CCCCCC"> December</font><font color="#E5E5E5"> we</font>

733
00:35:24,060 --> 00:35:27,240
realized that we were<font color="#CCCCCC"> actually trying</font><font color="#E5E5E5"> to</font>

734
00:35:25,560 --> 00:35:30,500
<font color="#E5E5E5">solve two different problems here</font><font color="#CCCCCC"> so we</font>

735
00:35:27,240 --> 00:35:33,419
split the project<font color="#CCCCCC"> in detain and clevis</font>

736
00:35:30,500 --> 00:35:34,859
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Luxe integration is currently</font><font color="#E5E5E5"> only</font>

737
00:35:33,420 --> 00:35:37,230
supporting teams so we<font color="#E5E5E5"> don't have</font>

738
00:35:34,859 --> 00:35:40,920
support<font color="#CCCCCC"> for arbitrary clevis policies</font>

739
00:35:37,230 --> 00:35:43,619
for<font color="#CCCCCC"> Lux integration yet we're</font><font color="#E5E5E5"> working</font>

740
00:35:40,920 --> 00:35:46,589
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> Lux developers</font><font color="#E5E5E5"> and we're hoping</font>

741
00:35:43,619 --> 00:35:48,570
that<font color="#E5E5E5"> Lux version 2 which is going to be</font>

742
00:35:46,589 --> 00:35:51,540
<font color="#E5E5E5">designed to be more extensible will have</font>

743
00:35:48,570 --> 00:35:53,970
support<font color="#CCCCCC"> for richer clevis policies but</font>

744
00:35:51,540 --> 00:35:57,420
that's only in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> very early</font><font color="#CCCCCC"> stages at</font>

745
00:35:53,970 --> 00:36:01,080
this time<font color="#CCCCCC"> integrating with USB</font><font color="#E5E5E5"> guard so</font>

746
00:35:57,420 --> 00:36:03,450
this is designed to satisfy the use

747
00:36:01,080 --> 00:36:05,098
cases<font color="#CCCCCC"> that come from that story at the</font>

748
00:36:03,450 --> 00:36:07,230
<font color="#CCCCCC">beginning of the talk with the</font><font color="#E5E5E5"> USB</font>

749
00:36:05,099 --> 00:36:10,710
<font color="#CCCCCC">sticks so using them securely in the</font>

750
00:36:07,230 --> 00:36:12,119
<font color="#E5E5E5">organization but taking them out of the</font>

751
00:36:10,710 --> 00:36:14,970
<font color="#CCCCCC">network means that you can't access</font>

752
00:36:12,119 --> 00:36:17,460
<font color="#E5E5E5">what's on the volume and also locking</font>

753
00:36:14,970 --> 00:36:20,848
down<font color="#CCCCCC"> the systems with policies that say</font>

754
00:36:17,460 --> 00:36:24,359
only<font color="#CCCCCC"> time provisioned USB storage</font>

755
00:36:20,849 --> 00:36:29,130
volumes<font color="#E5E5E5"> will be allowed to be mounted on</font>

756
00:36:24,359 --> 00:36:30,930
<font color="#CCCCCC">our systems so yes the USB guard</font>

757
00:36:29,130 --> 00:36:33,420
integration which is<font color="#CCCCCC"> in the early</font><font color="#E5E5E5"> stages</font>

758
00:36:30,930 --> 00:36:34,799
at the moment as well<font color="#E5E5E5"> for the Tang</font>

759
00:36:33,420 --> 00:36:36,960
server and product

760
00:36:34,800 --> 00:36:39,360
itself we're currently looking<font color="#E5E5E5"> at the</font>

761
00:36:36,960 --> 00:36:41,850
<font color="#CCCCCC">key rotation possibilities so the fact</font>

762
00:36:39,360 --> 00:36:44,160
that we have the<font color="#CCCCCC"> sign-in keys is what's</font>

763
00:36:41,850 --> 00:36:46,830
going<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> possible so you can</font>

764
00:36:44,160 --> 00:36:49,589
generate<font color="#CCCCCC"> new signing keys and new</font>

765
00:36:46,830 --> 00:36:52,140
recovery keys change<font color="#E5E5E5"> which ones are</font>

766
00:36:49,590 --> 00:36:55,230
advertised and over time<font color="#E5E5E5"> migrate away</font>

767
00:36:52,140 --> 00:36:58,980
<font color="#E5E5E5">from all the keys to newer keys</font><font color="#CCCCCC"> and also</font>

768
00:36:55,230 --> 00:37:00,780
<font color="#E5E5E5">looking at what people who are going to</font>

769
00:36:58,980 --> 00:37:03,540
hopefully<font color="#E5E5E5"> install and run this in the</font>

770
00:37:00,780 --> 00:37:05,940
organization expect of the<font color="#CCCCCC"> daemon and</font>

771
00:37:03,540 --> 00:37:08,009
the clients in<font color="#CCCCCC"> terms of logging so what</font>

772
00:37:05,940 --> 00:37:10,740
do they<font color="#E5E5E5"> actually want to</font><font color="#CCCCCC"> know for audit</font>

773
00:37:08,010 --> 00:37:13,980
<font color="#CCCCCC">purposes if I had time right now I'd be</font>

774
00:37:10,740 --> 00:37:15,390
<font color="#CCCCCC">working on a TPM clever spin and let's</font>

775
00:37:13,980 --> 00:37:17,700
encrypt integration<font color="#CCCCCC"> is I think let's</font>

776
00:37:15,390 --> 00:37:19,350
encrypt is an excellent initiative<font color="#E5E5E5"> but</font>

777
00:37:17,700 --> 00:37:21,810
currently just<font color="#E5E5E5"> splats all of the keys</font>

778
00:37:19,350 --> 00:37:24,779
<font color="#CCCCCC">onto the file system in the clear which</font>

779
00:37:21,810 --> 00:37:26,549
I<font color="#E5E5E5"> definitely don't like I've played</font>

780
00:37:24,780 --> 00:37:29,430
<font color="#E5E5E5">around with Apache integration for</font>

781
00:37:26,550 --> 00:37:32,220
<font color="#E5E5E5">clevis and I have a blog post</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> that</font>

782
00:37:29,430 --> 00:37:35,580
it's fairly<font color="#E5E5E5"> ad-hoc but I you know it</font>

783
00:37:32,220 --> 00:37:37,799
does<font color="#E5E5E5"> it does work</font><font color="#CCCCCC"> availability so</font>

784
00:37:35,580 --> 00:37:40,590
currently we<font color="#CCCCCC"> have some unofficial</font>

785
00:37:37,800 --> 00:37:42,390
<font color="#E5E5E5">package repos with</font><font color="#CCCCCC"> Batang software we</font>

786
00:37:40,590 --> 00:37:45,540
don't have any packages for clevis<font color="#E5E5E5"> the</font>

787
00:37:42,390 --> 00:37:49,470
source code<font color="#E5E5E5"> for both projects is</font><font color="#CCCCCC"> GPL</font><font color="#E5E5E5"> v3</font>

788
00:37:45,540 --> 00:37:51,720
<font color="#E5E5E5">up and it's available on github we're</font>

789
00:37:49,470 --> 00:37:56,939
hoping to<font color="#E5E5E5"> get the</font><font color="#CCCCCC"> tan bits into</font><font color="#E5E5E5"> Fedora</font>

790
00:37:51,720 --> 00:37:58,279
24<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can help by doing a review of the</font>

791
00:37:56,940 --> 00:38:01,620
<font color="#E5E5E5">crypto if you're a cryptographer</font>

792
00:37:58,280 --> 00:38:03,210
<font color="#E5E5E5">protocol</font><font color="#CCCCCC"> review and code review if</font><font color="#E5E5E5"> this</font>

793
00:38:01,620 --> 00:38:06,060
stuff interests you please<font color="#E5E5E5"> try it out</font>

794
00:38:03,210 --> 00:38:07,200
<font color="#E5E5E5">and talk</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> us about your use cases so</font>

795
00:38:06,060 --> 00:38:08,700
if you<font color="#E5E5E5"> think we might have an</font>

796
00:38:07,200 --> 00:38:10,919
<font color="#E5E5E5">application for this but maybe we</font>

797
00:38:08,700 --> 00:38:13,259
haven't<font color="#E5E5E5"> considered it or I didn't talk</font>

798
00:38:10,920 --> 00:38:15,840
<font color="#CCCCCC">about it today</font><font color="#E5E5E5"> please let's have that</font>

799
00:38:13,260 --> 00:38:17,730
<font color="#E5E5E5">conversation and contributing clever</font>

800
00:38:15,840 --> 00:38:19,740
spins<font color="#E5E5E5"> so if there are interesting</font>

801
00:38:17,730 --> 00:38:22,470
<font color="#E5E5E5">sources</font><font color="#CCCCCC"> of Secrets that you think would</font>

802
00:38:19,740 --> 00:38:25,979
be<font color="#E5E5E5"> worthwhile supporting in clevis</font><font color="#CCCCCC"> then</font>

803
00:38:22,470 --> 00:38:27,569
the the pen interface is fairly

804
00:38:25,980 --> 00:38:31,020
straightforward if you know<font color="#E5E5E5"> see you can</font>

805
00:38:27,570 --> 00:38:33,030
write one<font color="#CCCCCC"> so that's the end of my talk</font>

806
00:38:31,020 --> 00:38:35,610
but one final<font color="#E5E5E5"> point on the terminology</font>

807
00:38:33,030 --> 00:38:38,010
that<font color="#E5E5E5"> the terms come from</font><font color="#CCCCCC"> a kind</font><font color="#E5E5E5"> of</font>

808
00:38:35,610 --> 00:38:39,660
shackle called a<font color="#CCCCCC"> clevis shackle so the</font>

809
00:38:38,010 --> 00:38:41,370
clevis is the shackle<font color="#CCCCCC"> and this is the</font>

810
00:38:39,660 --> 00:38:43,230
<font color="#CCCCCC">Tang and pins are the bits that hold it</font>

811
00:38:41,370 --> 00:38:45,420
all together<font color="#CCCCCC"> so that's where the</font>

812
00:38:43,230 --> 00:38:47,520
<font color="#E5E5E5">project's</font><font color="#CCCCCC"> mo nology comes from</font><font color="#E5E5E5"> so</font>

813
00:38:45,420 --> 00:38:48,070
questions hopefully<font color="#E5E5E5"> we have time for one</font>

814
00:38:47,520 --> 00:38:50,730
or<font color="#E5E5E5"> two</font>

815
00:38:48,070 --> 00:38:53,980
yeah but ever got a couple<font color="#E5E5E5"> questions</font>

816
00:38:50,730 --> 00:38:57,280
<font color="#CCCCCC">firstly how would you deal with client</font>

817
00:38:53,980 --> 00:39:00,160
hardware failure right that's an

818
00:38:57,280 --> 00:39:02,140
excellent question<font color="#E5E5E5"> we don't have</font>

819
00:39:00,160 --> 00:39:04,480
anything<font color="#E5E5E5"> in</font><font color="#CCCCCC"> particular to deal with that</font>

820
00:39:02,140 --> 00:39:06,100
<font color="#E5E5E5">I mean if the</font><font color="#CCCCCC"> disk crashes and crash is</font>

821
00:39:04,480 --> 00:39:18,310
hard you're going<font color="#E5E5E5"> to lose</font><font color="#CCCCCC"> that data</font><font color="#E5E5E5"> no</font>

822
00:39:06,100 --> 00:39:19,810
<font color="#E5E5E5">matter what so yep</font><font color="#CCCCCC"> yeah for</font><font color="#E5E5E5"> sure then</font>

823
00:39:18,310 --> 00:39:21,910
<font color="#CCCCCC">you can mount it into it</font><font color="#E5E5E5"> into a separate</font>

824
00:39:19,810 --> 00:39:24,940
motherboard and<font color="#E5E5E5"> do it but then you know</font>

825
00:39:21,910 --> 00:39:26,319
in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> future if we have TPM support in</font>

826
00:39:24,940 --> 00:39:28,150
there and you're physically<font color="#CCCCCC"> bound to the</font>

827
00:39:26,320 --> 00:39:31,000
TPM well that's going<font color="#CCCCCC"> to be a bit</font><font color="#E5E5E5"> harder</font>

828
00:39:28,150 --> 00:39:34,180
<font color="#E5E5E5">so of course having having an</font>

829
00:39:31,000 --> 00:39:41,950
appropriate backup<font color="#E5E5E5"> regime is important</font>

830
00:39:34,180 --> 00:39:44,770
as well one more question<font color="#E5E5E5"> is 2016 the</font>

831
00:39:41,950 --> 00:39:46,270
year<font color="#E5E5E5"> of a limit from the desktop cuz are</font>

832
00:39:44,770 --> 00:39:49,240
<font color="#E5E5E5">they</font><font color="#CCCCCC"> Daren should probably know</font><font color="#E5E5E5"> better</font>

833
00:39:46,270 --> 00:39:55,660
<font color="#E5E5E5">because he knows that 2010 2011 2012</font>

834
00:39:49,240 --> 00:39:57,250
2013 14 15 well I'm gonna go I'm<font color="#E5E5E5"> gonna</font>

835
00:39:55,660 --> 00:39:58,060
<font color="#CCCCCC">go ahead</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> answer that question in</font><font color="#E5E5E5"> the</font>

836
00:39:57,250 --> 00:39:59,830
<font color="#CCCCCC">affirmative</font>

837
00:39:58,060 --> 00:40:03,160
because I plugged into<font color="#E5E5E5"> this projector</font>

838
00:39:59,830 --> 00:40:08,470
<font color="#E5E5E5">and things worked</font><font color="#CCCCCC"> so yeah I think</font><font color="#E5E5E5"> I</font>

839
00:40:03,160 --> 00:40:11,069
<font color="#E5E5E5">think it's arrived</font><font color="#CCCCCC"> ok thanks for</font>

840
00:40:08,470 --> 00:40:11,069
listening to<font color="#CCCCCC"> my</font><font color="#E5E5E5"> talk</font>

841
00:40:13,839 --> 00:40:15,900
you

