1
00:00:00,160 --> 00:00:03,280
so our next speaker we have mark krishna

2
00:00:02,720 --> 00:00:05,200
so

3
00:00:03,280 --> 00:00:07,359
mark has over 20 years experience across

4
00:00:05,200 --> 00:00:10,400
mobility and security technologies

5
00:00:07,359 --> 00:00:11,360
and joined cisco in 2001 through the

6
00:00:10,400 --> 00:00:14,240
radiata

7
00:00:11,360 --> 00:00:15,518
acquisition where he was the director of

8
00:00:14,240 --> 00:00:17,279
software engineering

9
00:00:15,519 --> 00:00:18,880
so as part of cisco's wireless

10
00:00:17,279 --> 00:00:21,119
networking business unit

11
00:00:18,880 --> 00:00:22,080
mark led the sydney software engineering

12
00:00:21,119 --> 00:00:25,279
department

13
00:00:22,080 --> 00:00:26,959
and was also responsible for the design

14
00:00:25,279 --> 00:00:30,320
and development of such technologies

15
00:00:26,960 --> 00:00:32,480
such as ape fast which is fantastic and

16
00:00:30,320 --> 00:00:34,239
protected management frames which is

17
00:00:32,479 --> 00:00:36,559
really really good work as well

18
00:00:34,239 --> 00:00:38,640
so prior to his involvement wireless

19
00:00:36,559 --> 00:00:40,640
mark focused on intrusion detection

20
00:00:38,640 --> 00:00:42,960
and the application of public key

21
00:00:40,640 --> 00:00:45,520
infrastructure or pki

22
00:00:42,960 --> 00:00:46,239
to secure networking protocols and

23
00:00:45,520 --> 00:00:48,719
services

24
00:00:46,239 --> 00:00:49,599
at bbn technologies through his

25
00:00:48,719 --> 00:00:52,559
engineering work

26
00:00:49,600 --> 00:00:54,239
mark holds 18 patents in wireless and

27
00:00:52,559 --> 00:00:56,239
security so i think we

28
00:00:54,239 --> 00:00:58,399
are very very fortunate to have someone

29
00:00:56,239 --> 00:00:59,199
of his experience and caliber joining us

30
00:00:58,399 --> 00:01:00,800
here today

31
00:00:59,199 --> 00:01:02,800
and he's going to be talking through the

32
00:01:00,800 --> 00:01:06,560
evolution of wireless security

33
00:01:02,800 --> 00:01:08,560
with wpa 3 and wi-fi 6.

34
00:01:06,560 --> 00:01:10,159
so i'm very very intrigued and very

35
00:01:08,560 --> 00:01:11,200
interested to see this presentation

36
00:01:10,159 --> 00:01:13,840
myself so

37
00:01:11,200 --> 00:01:14,960
i'm very very glad i'm here so without

38
00:01:13,840 --> 00:01:17,680
further ado

39
00:01:14,960 --> 00:01:18,479
um i'll pass it over to mark so mark if

40
00:01:17,680 --> 00:01:20,400
you want to

41
00:01:18,479 --> 00:01:21,759
share your slides there mate and i

42
00:01:20,400 --> 00:01:22,320
noticed you got a few little cisco

43
00:01:21,759 --> 00:01:25,200
devices

44
00:01:22,320 --> 00:01:26,479
behind you so there we go all right i'll

45
00:01:25,200 --> 00:01:28,560
kick it over to you mate and

46
00:01:26,479 --> 00:01:29,520
look forward to the presentation all

47
00:01:28,560 --> 00:01:35,360
right

48
00:01:29,520 --> 00:01:41,039
um let me let me get this started

49
00:01:35,360 --> 00:01:43,920
that's what i want sorry give me a sec

50
00:01:41,040 --> 00:01:43,920
over here

51
00:01:46,000 --> 00:01:48,479
come on

52
00:01:51,759 --> 00:01:55,600
sorry i had this all rehearsed and ready

53
00:01:53,759 --> 00:01:59,840
to go here we are

54
00:01:55,600 --> 00:02:03,119
all right share screen application

55
00:01:59,840 --> 00:02:06,320
there we are okay hello

56
00:02:03,119 --> 00:02:08,318
and welcome everybody um i

57
00:02:06,320 --> 00:02:10,239
obviously would have much preferred

58
00:02:08,318 --> 00:02:13,599
being up in the gold coast

59
00:02:10,239 --> 00:02:14,800
uh with you all um as i'm sure you guys

60
00:02:13,599 --> 00:02:17,280
would as well

61
00:02:14,800 --> 00:02:18,400
uh what i'd like to do today is kind of

62
00:02:17,280 --> 00:02:20,640
take you through

63
00:02:18,400 --> 00:02:22,000
where we're at uh from a wireless

64
00:02:20,640 --> 00:02:25,839
security perspective we'll look

65
00:02:22,000 --> 00:02:28,400
a little bit at um what we do today

66
00:02:25,840 --> 00:02:30,000
but also tie into it some of the things

67
00:02:28,400 --> 00:02:31,280
that we've been doing to improve

68
00:02:30,000 --> 00:02:34,319
wireless security

69
00:02:31,280 --> 00:02:37,440
uh specifically around wpa3 uh

70
00:02:34,319 --> 00:02:40,879
and how that ties into um

71
00:02:37,440 --> 00:02:41,599
a wi-fi six um i will try and keep an

72
00:02:40,879 --> 00:02:45,120
eye on the q

73
00:02:41,599 --> 00:02:47,119
a panel as i go through um but uh

74
00:02:45,120 --> 00:02:48,560
thankfully uh following this session is

75
00:02:47,120 --> 00:02:50,080
is the lunch break so i will stick

76
00:02:48,560 --> 00:02:52,560
around in the room

77
00:02:50,080 --> 00:02:54,080
as well if there's questions uh in the q

78
00:02:52,560 --> 00:02:56,160
a after that

79
00:02:54,080 --> 00:02:57,519
um so let's kick get things started and

80
00:02:56,160 --> 00:03:01,359
kick things off

81
00:02:57,519 --> 00:03:04,319
so um i like to kind of set the stage

82
00:03:01,360 --> 00:03:06,080
and and think about uh you know what is

83
00:03:04,319 --> 00:03:07,920
the wireless attack service what are we

84
00:03:06,080 --> 00:03:10,640
actually trying to protect against

85
00:03:07,920 --> 00:03:12,559
so the big issue that we have uh with

86
00:03:10,640 --> 00:03:15,119
wireless networking is recognize

87
00:03:12,560 --> 00:03:17,120
the wireless network propagates beyond

88
00:03:15,120 --> 00:03:18,000
the traditional physical boundaries of

89
00:03:17,120 --> 00:03:21,040
the wire network

90
00:03:18,000 --> 00:03:23,440
right we have the luxury of physical

91
00:03:21,040 --> 00:03:26,480
security to protect my wired

92
00:03:23,440 --> 00:03:28,400
uh network those ethernet ports uh but

93
00:03:26,480 --> 00:03:30,720
from a wireless perspective

94
00:03:28,400 --> 00:03:32,480
attacks can come from anywhere within

95
00:03:30,720 --> 00:03:35,680
the bounds of that rf

96
00:03:32,480 --> 00:03:36,079
domain and so i'm worried about things

97
00:03:35,680 --> 00:03:38,480
like

98
00:03:36,080 --> 00:03:40,480
passive scanning attacks uh active

99
00:03:38,480 --> 00:03:42,959
spoofing attacks and active jamming

100
00:03:40,480 --> 00:03:45,119
attacks so that's on the rf side

101
00:03:42,959 --> 00:03:46,560
people trying to attack layer one of my

102
00:03:45,120 --> 00:03:48,480
network

103
00:03:46,560 --> 00:03:50,959
so the wireless threats then that i'm

104
00:03:48,480 --> 00:03:53,200
looking at we typically focus on rogue

105
00:03:50,959 --> 00:03:54,319
aps as the sources of these different

106
00:03:53,200 --> 00:03:56,399
vulnerabilities

107
00:03:54,319 --> 00:03:57,760
uh we talk about honeypot aps and evil

108
00:03:56,400 --> 00:03:59,120
twin attacks

109
00:03:57,760 --> 00:04:01,120
but we're also worried that someone's

110
00:03:59,120 --> 00:04:03,360
going to take an access point

111
00:04:01,120 --> 00:04:06,000
put it in our physical network to

112
00:04:03,360 --> 00:04:07,840
provide unsecured backdoor access

113
00:04:06,000 --> 00:04:09,760
and then the clients themselves can

114
00:04:07,840 --> 00:04:11,599
introduce vulnerabilities

115
00:04:09,760 --> 00:04:13,280
they might be bridging the wired and the

116
00:04:11,599 --> 00:04:15,760
wireless networks

117
00:04:13,280 --> 00:04:17,600
my users might connect to unsecured

118
00:04:15,760 --> 00:04:19,519
wireless hotspots

119
00:04:17,600 --> 00:04:20,720
where they might get exposed to

120
00:04:19,519 --> 00:04:22,479
vulnerabilities

121
00:04:20,720 --> 00:04:25,120
which then they bring back into my

122
00:04:22,479 --> 00:04:28,240
network and then we worry about

123
00:04:25,120 --> 00:04:29,520
data seepage which is the clients just

124
00:04:28,240 --> 00:04:31,520
leaking information

125
00:04:29,520 --> 00:04:33,680
based on how the the protocols

126
00:04:31,520 --> 00:04:35,919
themselves work

127
00:04:33,680 --> 00:04:37,360
so kind of looking at where we would

128
00:04:35,919 --> 00:04:40,479
start here right let's get some

129
00:04:37,360 --> 00:04:43,600
fundamentals on on 82.11.

130
00:04:40,479 --> 00:04:45,440
everything begins with a beacon uh so

131
00:04:43,600 --> 00:04:47,919
the access points are going to send out

132
00:04:45,440 --> 00:04:51,280
a beacon for every ssid

133
00:04:47,919 --> 00:04:51,520
uh that they support um and that's sort

134
00:04:51,280 --> 00:04:54,400
of

135
00:04:51,520 --> 00:04:56,080
advertising what they have available so

136
00:04:54,400 --> 00:04:58,000
if we had been up on the gold coast

137
00:04:56,080 --> 00:05:00,080
for this event we'd all be looking to

138
00:04:58,000 --> 00:05:02,160
join the the the wi-fi for the event

139
00:05:00,080 --> 00:05:05,120
maybe we'd find an ssid

140
00:05:02,160 --> 00:05:06,000
uh for oscert 2020 uh and we wouldn't

141
00:05:05,120 --> 00:05:10,400
necessarily

142
00:05:06,000 --> 00:05:12,320
have any um support uh or credentials

143
00:05:10,400 --> 00:05:13,599
so maybe the security would be open of

144
00:05:12,320 --> 00:05:16,719
course this is uh

145
00:05:13,600 --> 00:05:19,280
oscert so we probably want to um

146
00:05:16,720 --> 00:05:20,960
you know at least use a pre-shared key

147
00:05:19,280 --> 00:05:22,719
and some passphrase

148
00:05:20,960 --> 00:05:24,960
which we'd have to advertise and somehow

149
00:05:22,720 --> 00:05:26,479
make available to everybody

150
00:05:24,960 --> 00:05:29,198
because that's going to be really secure

151
00:05:26,479 --> 00:05:32,400
to put signs up everywhere

152
00:05:29,199 --> 00:05:34,960
on the enterprise side we would use wpa

153
00:05:32,400 --> 00:05:35,440
enterprise and so again i'd have my

154
00:05:34,960 --> 00:05:39,359
different

155
00:05:35,440 --> 00:05:41,440
ssid we do talk about the idea of hidden

156
00:05:39,360 --> 00:05:42,720
ssids but recognize that's

157
00:05:41,440 --> 00:05:44,639
you know really security through

158
00:05:42,720 --> 00:05:47,199
obscurity all we're trying to do

159
00:05:44,639 --> 00:05:47,919
is prevent the ssid from coming up when

160
00:05:47,199 --> 00:05:51,039
you

161
00:05:47,919 --> 00:05:53,520
use your device but anyone listening is

162
00:05:51,039 --> 00:05:54,240
going to see those ssids because at the

163
00:05:53,520 --> 00:05:56,639
same time

164
00:05:54,240 --> 00:05:57,919
clients are looking for networks to join

165
00:05:56,639 --> 00:05:58,960
and they're going to send a probe

166
00:05:57,919 --> 00:06:02,479
request

167
00:05:58,960 --> 00:06:05,599
for every ssid that they have joined

168
00:06:02,479 --> 00:06:07,840
and the idea is that aps that support

169
00:06:05,600 --> 00:06:11,120
that will respond so even if

170
00:06:07,840 --> 00:06:12,080
the ap hadn't sent the ssid in a beacon

171
00:06:11,120 --> 00:06:15,360
it will still

172
00:06:12,080 --> 00:06:17,758
reply with a probe response so we can

173
00:06:15,360 --> 00:06:20,000
see what ssids are available

174
00:06:17,759 --> 00:06:21,840
i talked about data seepage at the start

175
00:06:20,000 --> 00:06:24,240
just as an example of this

176
00:06:21,840 --> 00:06:25,758
you know my device is going to send

177
00:06:24,240 --> 00:06:26,639
probes for everything that it's

178
00:06:25,759 --> 00:06:29,120
connected to

179
00:06:26,639 --> 00:06:32,080
ever so you know if you look at the

180
00:06:29,120 --> 00:06:33,840
probe request coming out of my device

181
00:06:32,080 --> 00:06:35,919
you'll know that back before covid i

182
00:06:33,840 --> 00:06:39,440
spent a lot of time in the qantas lounge

183
00:06:35,919 --> 00:06:42,080
and at various uh hotel chains

184
00:06:39,440 --> 00:06:43,919
now what we next need to happen is i've

185
00:06:42,080 --> 00:06:46,000
got to decide what to join

186
00:06:43,919 --> 00:06:48,159
uh and the important thing to recognize

187
00:06:46,000 --> 00:06:50,720
here is it's the client

188
00:06:48,160 --> 00:06:52,240
that makes the decision as to which ap

189
00:06:50,720 --> 00:06:54,400
it's going to join

190
00:06:52,240 --> 00:06:55,840
now my examples i'm going to use a

191
00:06:54,400 --> 00:06:57,679
controller-based architecture but

192
00:06:55,840 --> 00:06:58,560
recognize the same principles would

193
00:06:57,680 --> 00:07:01,360
apply

194
00:06:58,560 --> 00:07:02,400
uh from a cloud-based approach as well

195
00:07:01,360 --> 00:07:04,319
and so the

196
00:07:02,400 --> 00:07:05,919
access point sends an association

197
00:07:04,319 --> 00:07:09,039
request for a specific id

198
00:07:05,919 --> 00:07:11,599
to join we get the response uh the

199
00:07:09,039 --> 00:07:13,360
network might also send a disassociation

200
00:07:11,599 --> 00:07:14,479
request to a client basically saying

201
00:07:13,360 --> 00:07:16,639
would you please

202
00:07:14,479 --> 00:07:18,560
uh leave our network now the interesting

203
00:07:16,639 --> 00:07:19,919
thing about that management frame is

204
00:07:18,560 --> 00:07:22,560
it's bi-directional

205
00:07:19,919 --> 00:07:24,080
a client can send a disassociation

206
00:07:22,560 --> 00:07:25,840
request to the network

207
00:07:24,080 --> 00:07:27,758
you might say well why would i need to

208
00:07:25,840 --> 00:07:29,119
do that well that's for a roaming event

209
00:07:27,759 --> 00:07:32,080
i will disassociate

210
00:07:29,120 --> 00:07:32,560
from one and do a reassociation to the

211
00:07:32,080 --> 00:07:36,159
ap

212
00:07:32,560 --> 00:07:38,800
that i'm joining next so let's

213
00:07:36,160 --> 00:07:40,639
talk a little bit about the security

214
00:07:38,800 --> 00:07:42,720
framework that we have

215
00:07:40,639 --> 00:07:44,319
so we talk about wireless protected

216
00:07:42,720 --> 00:07:48,440
access wpa

217
00:07:44,319 --> 00:07:49,680
what is this um so we have the ieee

218
00:07:48,440 --> 00:07:51,919
802.11

219
00:07:49,680 --> 00:07:53,360
standards 8011 i is the wireless

220
00:07:51,919 --> 00:07:55,680
security standard

221
00:07:53,360 --> 00:07:56,879
the wi-fi alliance is an industry

222
00:07:55,680 --> 00:07:59,759
standards body

223
00:07:56,879 --> 00:08:00,080
that creates interoperability standards

224
00:07:59,759 --> 00:08:03,360
so

225
00:08:00,080 --> 00:08:05,359
the original wpa was based on the draft

226
00:08:03,360 --> 00:08:06,639
standard for 11i so we could get out the

227
00:08:05,360 --> 00:08:08,720
door quickly

228
00:08:06,639 --> 00:08:10,400
and then with the final version 11i we

229
00:08:08,720 --> 00:08:13,280
had wpa2

230
00:08:10,400 --> 00:08:14,878
you'll note the different tkip and aes

231
00:08:13,280 --> 00:08:16,878
encryption

232
00:08:14,879 --> 00:08:18,080
around the same time 11i was being

233
00:08:16,879 --> 00:08:20,400
developed that

234
00:08:18,080 --> 00:08:22,318
is when nist was selecting the advanced

235
00:08:20,400 --> 00:08:24,840
encryption standard as well

236
00:08:22,319 --> 00:08:26,720
um deciding ultimately on the rindahl

237
00:08:24,840 --> 00:08:28,159
algorithm and so

238
00:08:26,720 --> 00:08:30,160
we were waiting one for that to be

239
00:08:28,160 --> 00:08:32,560
finalized and two we then needed

240
00:08:30,160 --> 00:08:33,680
all the wi-fi chip manufacturers to

241
00:08:32,559 --> 00:08:36,718
implement aes

242
00:08:33,679 --> 00:08:38,559
in hardware so from an authentication

243
00:08:36,719 --> 00:08:40,159
perspective we we talked about the two

244
00:08:38,559 --> 00:08:42,559
methods personal which is

245
00:08:40,159 --> 00:08:44,480
pretty much for the the home network

246
00:08:42,559 --> 00:08:47,399
based on a pre-showed key

247
00:08:44,480 --> 00:08:49,680
and wpa enterprise which is based on

248
00:08:47,399 --> 00:08:52,320
802.1x

249
00:08:49,680 --> 00:08:53,599
now where we're at is the wi-fi alliance

250
00:08:52,320 --> 00:08:56,959
has introduced

251
00:08:53,600 --> 00:09:00,480
wpa3 this came out last year

252
00:08:56,959 --> 00:09:01,518
and you know wpa2 finalized in 2004 so

253
00:09:00,480 --> 00:09:04,560
that's over

254
00:09:01,519 --> 00:09:06,560
15 years we were using that

255
00:09:04,560 --> 00:09:07,760
and so it was really about time that we

256
00:09:06,560 --> 00:09:09,760
we refreshed

257
00:09:07,760 --> 00:09:11,040
the standard uh and we'll talk a little

258
00:09:09,760 --> 00:09:14,080
bit about what's uh

259
00:09:11,040 --> 00:09:16,880
what's come in with that

260
00:09:14,080 --> 00:09:18,720
so the first piece which in some ways i

261
00:09:16,880 --> 00:09:21,279
find to be the most important

262
00:09:18,720 --> 00:09:22,959
uh the wi-fi alliance really upped its

263
00:09:21,279 --> 00:09:26,160
game and took

264
00:09:22,959 --> 00:09:29,399
security uh to another level

265
00:09:26,160 --> 00:09:30,560
across the board when they decided that

266
00:09:29,399 --> 00:09:33,440
wpa3

267
00:09:30,560 --> 00:09:35,599
was going to be mandatory as part of

268
00:09:33,440 --> 00:09:37,279
wi-fi six certification

269
00:09:35,600 --> 00:09:40,320
as you'll see when we go through the

270
00:09:37,279 --> 00:09:42,320
advances that wpa3 brings

271
00:09:40,320 --> 00:09:44,000
what we basically did was raise the bar

272
00:09:42,320 --> 00:09:47,279
for wireless security

273
00:09:44,000 --> 00:09:50,160
for all wi-fi six networks

274
00:09:47,279 --> 00:09:51,600
and as of july of this year the wi-fi

275
00:09:50,160 --> 00:09:54,560
alliance took that one step

276
00:09:51,600 --> 00:09:55,360
further by making it mandatory for all

277
00:09:54,560 --> 00:09:57,518
wfa

278
00:09:55,360 --> 00:09:58,959
certifications so even if i come out

279
00:09:57,519 --> 00:10:01,600
with a brand new

280
00:09:58,959 --> 00:10:02,719
uh device that doesn't support wi-fi six

281
00:10:01,600 --> 00:10:06,240
it's legacy

282
00:10:02,720 --> 00:10:10,959
wi-fi five or eight to eleven ac

283
00:10:06,240 --> 00:10:13,200
that must still get wpa3 certification

284
00:10:10,959 --> 00:10:14,000
now to some extent one of the more

285
00:10:13,200 --> 00:10:16,240
interesting things

286
00:10:14,000 --> 00:10:18,240
is not what we've added to wpa3 but what

287
00:10:16,240 --> 00:10:21,200
we've taken away

288
00:10:18,240 --> 00:10:21,680
and so we've used this as an opportunity

289
00:10:21,200 --> 00:10:25,040
to

290
00:10:21,680 --> 00:10:27,599
deprecate and remove all the old legacy

291
00:10:25,040 --> 00:10:28,800
uh protocols uh that honestly should

292
00:10:27,600 --> 00:10:31,839
have been

293
00:10:28,800 --> 00:10:35,279
dead and buried years ago like wep tkip

294
00:10:31,839 --> 00:10:36,560
shaw one as as late as last year i still

295
00:10:35,279 --> 00:10:38,640
had customers

296
00:10:36,560 --> 00:10:40,560
saying they had legacy devices that you

297
00:10:38,640 --> 00:10:41,760
know needed wep and that they needed wep

298
00:10:40,560 --> 00:10:44,880
support

299
00:10:41,760 --> 00:10:47,040
well that now is is off the table

300
00:10:44,880 --> 00:10:48,800
we really need to refresh those legacy

301
00:10:47,040 --> 00:10:51,120
devices because they are introducing

302
00:10:48,800 --> 00:10:53,199
vulnerabilities into our network

303
00:10:51,120 --> 00:10:55,440
uh now when we talk about the wi-fi

304
00:10:53,200 --> 00:10:56,279
alliance as in as an industry standards

305
00:10:55,440 --> 00:10:58,079
body creating

306
00:10:56,279 --> 00:11:00,160
interoperability standards and

307
00:10:58,079 --> 00:11:01,439
interoperability tests

308
00:11:00,160 --> 00:11:02,959
one of the interesting things is

309
00:11:01,440 --> 00:11:03,600
predominantly they've been focused on

310
00:11:02,959 --> 00:11:06,399
just

311
00:11:03,600 --> 00:11:08,720
do things talk to each other with the

312
00:11:06,399 --> 00:11:10,160
introduction wpa3 though we've started

313
00:11:08,720 --> 00:11:12,959
negative testing

314
00:11:10,160 --> 00:11:14,079
really looking to see are these devices

315
00:11:12,959 --> 00:11:16,640
doing bad things

316
00:11:14,079 --> 00:11:18,239
do they have vulnerabilities that expose

317
00:11:16,640 --> 00:11:19,920
the network and so that's this idea of

318
00:11:18,240 --> 00:11:22,800
negative testing

319
00:11:19,920 --> 00:11:24,319
now a couple mandatory features um two

320
00:11:22,800 --> 00:11:26,160
of the key ones that we'll talk about

321
00:11:24,320 --> 00:11:30,240
protect management frames

322
00:11:26,160 --> 00:11:32,959
as 11w as well as a replacement for wpa

323
00:11:30,240 --> 00:11:34,160
psk which is simultaneous authentication

324
00:11:32,959 --> 00:11:35,680
of equals

325
00:11:34,160 --> 00:11:38,240
we'll talk a little bit about the crack

326
00:11:35,680 --> 00:11:40,160
attack that came up a couple years ago

327
00:11:38,240 --> 00:11:42,000
and that's an example of where we're now

328
00:11:40,160 --> 00:11:44,000
going to do this negative testing we do

329
00:11:42,000 --> 00:11:45,760
explicit testing for the crack

330
00:11:44,000 --> 00:11:48,240
vulnerabilities

331
00:11:45,760 --> 00:11:49,120
some optional features sweep the crypto

332
00:11:48,240 --> 00:11:52,240
which is really

333
00:11:49,120 --> 00:11:53,680
looking at resistance to quantum

334
00:11:52,240 --> 00:11:55,600
computing

335
00:11:53,680 --> 00:11:56,719
from an encryption perspective and then

336
00:11:55,600 --> 00:11:59,279
there's two

337
00:11:56,720 --> 00:12:01,680
um optional certifications which are not

338
00:11:59,279 --> 00:12:04,880
necessarily part of wpa3

339
00:12:01,680 --> 00:12:07,359
but separate certifications on their own

340
00:12:04,880 --> 00:12:09,279
that's wi-fi certified enhanced open

341
00:12:07,360 --> 00:12:11,279
which is looking at what we can do in

342
00:12:09,279 --> 00:12:13,439
the public wi-fi space

343
00:12:11,279 --> 00:12:15,519
and wi-fi certified easy connect which

344
00:12:13,440 --> 00:12:18,399
is looking at the iot space

345
00:12:15,519 --> 00:12:20,720
um all those in blue will talk on about

346
00:12:18,399 --> 00:12:22,320
as we go through here

347
00:12:20,720 --> 00:12:23,760
all right so let's get back to our

348
00:12:22,320 --> 00:12:26,000
client that's trying to connect to the

349
00:12:23,760 --> 00:12:28,160
network we've done the association

350
00:12:26,000 --> 00:12:29,440
uh now we need to authenticate into the

351
00:12:28,160 --> 00:12:31,839
network so i'm going to need to

352
00:12:29,440 --> 00:12:34,240
introduce now a triple a server

353
00:12:31,839 --> 00:12:35,839
to provide that authorization a little

354
00:12:34,240 --> 00:12:37,440
bit of nomenclature

355
00:12:35,839 --> 00:12:40,079
the client plays the role of the

356
00:12:37,440 --> 00:12:41,760
supplicant the wireless network

357
00:12:40,079 --> 00:12:43,519
infrastructure that's going to be the

358
00:12:41,760 --> 00:12:46,560
authenticator

359
00:12:43,519 --> 00:12:47,760
and the authentication server the aaa

360
00:12:46,560 --> 00:12:51,599
server that's what's going to

361
00:12:47,760 --> 00:12:53,279
actually do the authentication sequence

362
00:12:51,600 --> 00:12:55,120
uh obviously i need my credentials

363
00:12:53,279 --> 00:12:56,160
somewhere so i will have a credential

364
00:12:55,120 --> 00:12:58,079
server typically

365
00:12:56,160 --> 00:13:00,639
uh you know we see something like active

366
00:12:58,079 --> 00:13:02,719
directory for that

367
00:13:00,639 --> 00:13:04,800
so the the important thing to recognize

368
00:13:02,720 --> 00:13:06,880
here is 80.1x

369
00:13:04,800 --> 00:13:07,839
is between the supplicant and the

370
00:13:06,880 --> 00:13:10,639
authenticator

371
00:13:07,839 --> 00:13:11,680
the actual authentication sequence our

372
00:13:10,639 --> 00:13:13,519
eep type

373
00:13:11,680 --> 00:13:14,880
that is between the supplicant and the

374
00:13:13,519 --> 00:13:18,000
authenticator

375
00:13:14,880 --> 00:13:19,600
and so i do my association i come back

376
00:13:18,000 --> 00:13:22,000
with my identity we're going to use

377
00:13:19,600 --> 00:13:23,120
that to do some negotiation on what each

378
00:13:22,000 --> 00:13:25,600
type we're going to use

379
00:13:23,120 --> 00:13:27,200
and again that off sequence between the

380
00:13:25,600 --> 00:13:28,959
supplicant and the off server

381
00:13:27,200 --> 00:13:31,279
which means the authentication server

382
00:13:28,959 --> 00:13:33,439
needs to send the eep success message

383
00:13:31,279 --> 00:13:35,200
to the authenticator to say yep mark

384
00:13:33,440 --> 00:13:37,760
crusher is who he says he is

385
00:13:35,200 --> 00:13:40,800
you can let him on the network so let's

386
00:13:37,760 --> 00:13:43,360
talk briefly about these eep types

387
00:13:40,800 --> 00:13:45,680
with two that we see most often you've

388
00:13:43,360 --> 00:13:47,760
got microsoft peep you've got eat fast

389
00:13:45,680 --> 00:13:50,079
which was developed by cisco

390
00:13:47,760 --> 00:13:51,920
these are tunnel-based methods so that's

391
00:13:50,079 --> 00:13:53,439
the outer method then we've got a couple

392
00:13:51,920 --> 00:13:54,479
different ones that we use for the inner

393
00:13:53,440 --> 00:13:57,199
method

394
00:13:54,480 --> 00:13:59,760
most common is going to be ms chap v2

395
00:13:57,199 --> 00:14:01,120
this is your standard username password

396
00:13:59,760 --> 00:14:02,959
now you might ask the question well why

397
00:14:01,120 --> 00:14:04,320
am i doing that in an inner method why

398
00:14:02,959 --> 00:14:07,119
isn't that just the the

399
00:14:04,320 --> 00:14:08,880
type i use ms chap v2 has been around

400
00:14:07,120 --> 00:14:11,040
for a while it's pretty old as you can

401
00:14:08,880 --> 00:14:13,839
see it's uh based on des

402
00:14:11,040 --> 00:14:15,120
not even aes and there was a nice little

403
00:14:13,839 --> 00:14:17,519
vulnerability built

404
00:14:15,120 --> 00:14:18,800
into the protocol as you can see we got

405
00:14:17,519 --> 00:14:22,320
to pad out the uh

406
00:14:18,800 --> 00:14:22,880
the last block there which opens us up

407
00:14:22,320 --> 00:14:25,680
to a

408
00:14:22,880 --> 00:14:28,079
known plaintext attack the point is that

409
00:14:25,680 --> 00:14:28,800
vulnerability is only exposed if we are

410
00:14:28,079 --> 00:14:31,359
able to

411
00:14:28,800 --> 00:14:32,000
see the exchange because we're doing

412
00:14:31,360 --> 00:14:34,320
this

413
00:14:32,000 --> 00:14:36,160
over the air and an attacker can

414
00:14:34,320 --> 00:14:37,920
passively be listening

415
00:14:36,160 --> 00:14:40,000
that's why we need to do it as this

416
00:14:37,920 --> 00:14:42,800
tunnel based approach so no one can

417
00:14:40,000 --> 00:14:43,440
sniff that exchange some other methods

418
00:14:42,800 --> 00:14:45,760
we use

419
00:14:43,440 --> 00:14:47,519
a generic token card or we can use

420
00:14:45,760 --> 00:14:49,519
certificates with etls

421
00:14:47,519 --> 00:14:50,959
of course if i'm using certificates i

422
00:14:49,519 --> 00:14:53,920
don't need to do it in a tunnel i could

423
00:14:50,959 --> 00:14:57,359
just use that directly

424
00:14:53,920 --> 00:14:58,160
so as a result of this off sequence i

425
00:14:57,360 --> 00:15:01,120
end up with

426
00:14:58,160 --> 00:15:03,600
a 256 bit random string which i'm going

427
00:15:01,120 --> 00:15:06,240
to use as my keying material this is the

428
00:15:03,600 --> 00:15:08,480
pairwise master key again the

429
00:15:06,240 --> 00:15:12,079
authenticator wasn't part of this

430
00:15:08,480 --> 00:15:14,560
so my auth server will pass that pmk

431
00:15:12,079 --> 00:15:15,359
to the authenticator we can now start

432
00:15:14,560 --> 00:15:17,599
the

433
00:15:15,360 --> 00:15:18,800
encryption sequence the authenticator is

434
00:15:17,600 --> 00:15:21,040
going to create a

435
00:15:18,800 --> 00:15:23,120
another random value called the a-nots

436
00:15:21,040 --> 00:15:25,599
which it will send to the supplicant

437
00:15:23,120 --> 00:15:27,600
and we can now create a session key the

438
00:15:25,600 --> 00:15:30,959
pairwise transient key

439
00:15:27,600 --> 00:15:33,839
it is based on this five tuple the pmk

440
00:15:30,959 --> 00:15:35,518
the a nonce that it just received and s

441
00:15:33,839 --> 00:15:38,560
nots that the supplicant will

442
00:15:35,519 --> 00:15:40,720
will create and the two mac addresses

443
00:15:38,560 --> 00:15:42,800
so the supplicant creates the pairwise

444
00:15:40,720 --> 00:15:45,279
transient key we need to send the s

445
00:15:42,800 --> 00:15:47,439
naughts back to the authenticator so it

446
00:15:45,279 --> 00:15:48,720
can create the ptk

447
00:15:47,440 --> 00:15:50,720
and we're going to send a message

448
00:15:48,720 --> 00:15:51,920
integrity check this allows the

449
00:15:50,720 --> 00:15:55,360
authenticator to

450
00:15:51,920 --> 00:15:56,959
verify that it created the right ptk

451
00:15:55,360 --> 00:15:59,680
we also need a key that we're going to

452
00:15:56,959 --> 00:16:00,160
use for multicast and broadcast that's

453
00:15:59,680 --> 00:16:03,758
the group

454
00:16:00,160 --> 00:16:05,040
transient key so we'll send back the ans

455
00:16:03,759 --> 00:16:08,560
but this time with the

456
00:16:05,040 --> 00:16:11,040
message integrity check this allows the

457
00:16:08,560 --> 00:16:12,880
supplicant to validate that yes we we

458
00:16:11,040 --> 00:16:14,959
all have the right ptk

459
00:16:12,880 --> 00:16:16,320
we'll send the gtk encrypted with the

460
00:16:14,959 --> 00:16:19,359
ptk

461
00:16:16,320 --> 00:16:20,560
sequence number the subligand says yep

462
00:16:19,360 --> 00:16:22,480
it all looks good

463
00:16:20,560 --> 00:16:23,758
and we'll send an acknowledgement this

464
00:16:22,480 --> 00:16:26,399
is the four-way

465
00:16:23,759 --> 00:16:28,079
handshake and so we're what about 15

466
00:16:26,399 --> 00:16:30,800
minutes in and we finally have an

467
00:16:28,079 --> 00:16:33,839
encrypted link congratulations everyone

468
00:16:30,800 --> 00:16:37,040
um so this is getting us set

469
00:16:33,839 --> 00:16:39,600
up for um how i can now do uh

470
00:16:37,040 --> 00:16:40,399
my encryption that's the authentication

471
00:16:39,600 --> 00:16:42,800
piece

472
00:16:40,399 --> 00:16:44,959
but we need to look at this separately

473
00:16:42,800 --> 00:16:45,359
to authorization right so authentication

474
00:16:44,959 --> 00:16:47,839
is

475
00:16:45,360 --> 00:16:49,199
can i get on the network now what am i

476
00:16:47,839 --> 00:16:51,759
allowed to do once i'm

477
00:16:49,199 --> 00:16:53,758
on the network while normally we would

478
00:16:51,759 --> 00:16:55,680
view authorization as a broader network

479
00:16:53,759 --> 00:16:57,920
security perspective there are some

480
00:16:55,680 --> 00:17:00,239
implications for wireless network design

481
00:16:57,920 --> 00:17:02,319
that i want to highlight

482
00:17:00,240 --> 00:17:04,559
one of the simplest approaches we use is

483
00:17:02,320 --> 00:17:05,199
static vlan assignment so the idea here

484
00:17:04,559 --> 00:17:07,918
is

485
00:17:05,199 --> 00:17:09,360
um i have a vlan statically assigned to

486
00:17:07,919 --> 00:17:11,679
a given ssid

487
00:17:09,359 --> 00:17:13,520
so the simple example i would use

488
00:17:11,679 --> 00:17:15,600
university network

489
00:17:13,520 --> 00:17:19,359
i've got a staff in a student vlan i

490
00:17:15,599 --> 00:17:22,079
will create a staff and a student ssid

491
00:17:19,359 --> 00:17:22,799
and i join whichever one to get access

492
00:17:22,079 --> 00:17:25,520
to

493
00:17:22,799 --> 00:17:28,079
the network and be on the correct vlan

494
00:17:25,520 --> 00:17:31,039
the problem with this is i need an ssid

495
00:17:28,079 --> 00:17:32,879
for every vlan that i want to implement

496
00:17:31,039 --> 00:17:33,200
remember what we said at the start right

497
00:17:32,880 --> 00:17:36,160
for

498
00:17:33,200 --> 00:17:38,480
every ssid i need to send a beacon

499
00:17:36,160 --> 00:17:41,600
beacons are sent at the lowest

500
00:17:38,480 --> 00:17:43,760
transmit uh mandatory data rate the

501
00:17:41,600 --> 00:17:46,639
implication here is if i have a lot of

502
00:17:43,760 --> 00:17:49,200
ssids because of a lot of vlans

503
00:17:46,640 --> 00:17:49,840
my ap will spend all of its time sending

504
00:17:49,200 --> 00:17:52,000
beacons

505
00:17:49,840 --> 00:17:54,399
and very little time actually passing

506
00:17:52,000 --> 00:17:56,799
some useful traffic

507
00:17:54,400 --> 00:17:59,280
so the idea is i want to minimize the

508
00:17:56,799 --> 00:18:01,360
number of ssids that i have

509
00:17:59,280 --> 00:18:03,360
so instead of static vlan assignment we

510
00:18:01,360 --> 00:18:06,879
look at dynamic vlan assignment

511
00:18:03,360 --> 00:18:10,320
so using that same example the idea is i

512
00:18:06,880 --> 00:18:13,280
join a common ssid for the university

513
00:18:10,320 --> 00:18:14,080
uh based on my identity that will be

514
00:18:13,280 --> 00:18:16,000
tied to

515
00:18:14,080 --> 00:18:18,639
for example an active directory group

516
00:18:16,000 --> 00:18:21,679
that identifies me as staff or student

517
00:18:18,640 --> 00:18:24,000
and that puts me now on the correct vlan

518
00:18:21,679 --> 00:18:26,000
but we're actually moving beyond um you

519
00:18:24,000 --> 00:18:28,080
know that sort of approach

520
00:18:26,000 --> 00:18:30,080
and we're now starting to see some

521
00:18:28,080 --> 00:18:33,120
momentum behind scalable group

522
00:18:30,080 --> 00:18:36,320
tags scalable group tags

523
00:18:33,120 --> 00:18:38,320
basically moves away from an ip source

524
00:18:36,320 --> 00:18:40,480
and destination address

525
00:18:38,320 --> 00:18:41,600
and the reason why this is relevant in

526
00:18:40,480 --> 00:18:44,000
the wireless space

527
00:18:41,600 --> 00:18:46,399
is a mobile i'm moving around i could

528
00:18:44,000 --> 00:18:48,799
connect into the network from multiple

529
00:18:46,400 --> 00:18:49,760
places that might be actually on

530
00:18:48,799 --> 00:18:52,400
different network

531
00:18:49,760 --> 00:18:54,640
segments i'm using dhcp i'll be getting

532
00:18:52,400 --> 00:18:57,280
different ip addresses all the time

533
00:18:54,640 --> 00:18:58,960
and so what that leads to is an

534
00:18:57,280 --> 00:19:01,760
exponential growth

535
00:18:58,960 --> 00:19:03,760
of my access control list so scalable

536
00:19:01,760 --> 00:19:06,559
group tags by its very name

537
00:19:03,760 --> 00:19:07,280
allows us to be a bit more manageable in

538
00:19:06,559 --> 00:19:10,799
terms of

539
00:19:07,280 --> 00:19:12,639
uh the number of acls that i need

540
00:19:10,799 --> 00:19:14,639
all right so i've connected to the

541
00:19:12,640 --> 00:19:17,039
network i've authenticated

542
00:19:14,640 --> 00:19:18,320
i've got an encrypted link i'm

543
00:19:17,039 --> 00:19:19,520
authorized for where i'm going to

544
00:19:18,320 --> 00:19:21,678
connect to

545
00:19:19,520 --> 00:19:23,280
and now i'm actually starting to walk

546
00:19:21,679 --> 00:19:25,200
around i'm roaming

547
00:19:23,280 --> 00:19:26,559
and so i've got to go through the entire

548
00:19:25,200 --> 00:19:28,080
sequence again

549
00:19:26,559 --> 00:19:29,760
if i'm doing something like real time

550
00:19:28,080 --> 00:19:32,240
voice and video

551
00:19:29,760 --> 00:19:33,120
that's going to introduce delay my calls

552
00:19:32,240 --> 00:19:35,360
could drop

553
00:19:33,120 --> 00:19:36,639
and so we're looking at how can i

554
00:19:35,360 --> 00:19:38,879
improve

555
00:19:36,640 --> 00:19:40,720
the performance of my roaming there's

556
00:19:38,880 --> 00:19:41,520
really two problems that i'm looking to

557
00:19:40,720 --> 00:19:44,000
solve here

558
00:19:41,520 --> 00:19:44,559
the first is on the client side i've got

559
00:19:44,000 --> 00:19:46,640
to go

560
00:19:44,559 --> 00:19:48,559
and scan all the available channels

561
00:19:46,640 --> 00:19:51,600
across 2.4 and 5 gig

562
00:19:48,559 --> 00:19:54,080
and then pick an ap to join

563
00:19:51,600 --> 00:19:55,760
the other problem is that whole sequence

564
00:19:54,080 --> 00:19:58,879
of the authentication

565
00:19:55,760 --> 00:19:59,840
uh and the four-way handshake so three

566
00:19:58,880 --> 00:20:01,919
protocols

567
00:19:59,840 --> 00:20:03,600
actually come together to address secure

568
00:20:01,919 --> 00:20:07,039
fast roaming this is 11k

569
00:20:03,600 --> 00:20:07,360
v and r the wi-fi lines kind of wrap

570
00:20:07,039 --> 00:20:10,240
them

571
00:20:07,360 --> 00:20:10,879
up what they call wi-fi agile multi-bam

572
00:20:10,240 --> 00:20:14,320
and this is

573
00:20:10,880 --> 00:20:18,159
actually a mandatory requirement of

574
00:20:14,320 --> 00:20:19,600
wi-fi six so the idea here is

575
00:20:18,159 --> 00:20:21,600
uh to address the first problem of

576
00:20:19,600 --> 00:20:24,799
channel scanning and ap selection

577
00:20:21,600 --> 00:20:27,199
uh we've got two protocols 8011k

578
00:20:24,799 --> 00:20:29,440
which is neighborless so the wireless

579
00:20:27,200 --> 00:20:31,280
infrastructure the aps actually know who

580
00:20:29,440 --> 00:20:33,280
their neighbors are and i don't mean

581
00:20:31,280 --> 00:20:34,720
from a physical deployment perspective i

582
00:20:33,280 --> 00:20:38,320
mean an rf

583
00:20:34,720 --> 00:20:41,200
perspective what ap is can i hear in my

584
00:20:38,320 --> 00:20:43,039
environment and so i will pass that

585
00:20:41,200 --> 00:20:43,600
information to the client so you don't

586
00:20:43,039 --> 00:20:46,879
have to

587
00:20:43,600 --> 00:20:48,320
scan every channel here are the aps that

588
00:20:46,880 --> 00:20:49,440
are in your environment here's the

589
00:20:48,320 --> 00:20:51,280
channels they are

590
00:20:49,440 --> 00:20:54,240
gives you a much smaller subset of

591
00:20:51,280 --> 00:20:56,559
channels to scan for your ap selection

592
00:20:54,240 --> 00:20:58,720
we can also get a bit more prescriptive

593
00:20:56,559 --> 00:20:59,280
while we said that the client decides

594
00:20:58,720 --> 00:21:02,880
what ap

595
00:20:59,280 --> 00:21:05,280
to join 802.11v allows the

596
00:21:02,880 --> 00:21:07,679
ap to say hey i want you to go and join

597
00:21:05,280 --> 00:21:10,080
this access point

598
00:21:07,679 --> 00:21:11,120
to address the uh re-authentication the

599
00:21:10,080 --> 00:21:14,399
reking

600
00:21:11,120 --> 00:21:15,280
we have 802.11r what this is basically

601
00:21:14,400 --> 00:21:17,919
saying is i've

602
00:21:15,280 --> 00:21:18,720
already authenticated to the network

603
00:21:17,919 --> 00:21:20,799
infrastructure

604
00:21:18,720 --> 00:21:22,080
so when i move to a new access point i'm

605
00:21:20,799 --> 00:21:24,240
really just saying hey

606
00:21:22,080 --> 00:21:26,158
i'm still mark crusher you know let me

607
00:21:24,240 --> 00:21:29,039
on the network let's just get a new

608
00:21:26,159 --> 00:21:30,480
session key started there's two

609
00:21:29,039 --> 00:21:33,360
different ways uh

610
00:21:30,480 --> 00:21:34,799
that this is implemented um and so you

611
00:21:33,360 --> 00:21:37,678
may see it referred to as

612
00:21:34,799 --> 00:21:39,679
over the ds uh what's that over the ds

613
00:21:37,679 --> 00:21:42,400
is the distribution system

614
00:21:39,679 --> 00:21:43,280
the idea here is once i decide which ap

615
00:21:42,400 --> 00:21:46,320
to join

616
00:21:43,280 --> 00:21:49,280
i actually get my ap

617
00:21:46,320 --> 00:21:50,960
to communicate over the network to the

618
00:21:49,280 --> 00:21:53,520
new ap to negotiate

619
00:21:50,960 --> 00:21:55,120
on my behalf so once everything's set up

620
00:21:53,520 --> 00:21:57,520
and new keys are sorted

621
00:21:55,120 --> 00:21:58,639
i can then just go and do my room my

622
00:21:57,520 --> 00:22:01,120
roam sorry

623
00:21:58,640 --> 00:22:01,760
um now of course this is going to add a

624
00:22:01,120 --> 00:22:04,879
little bit

625
00:22:01,760 --> 00:22:06,720
of additional delay uh and so

626
00:22:04,880 --> 00:22:08,080
what we typically recommend is the

627
00:22:06,720 --> 00:22:10,960
second method which is

628
00:22:08,080 --> 00:22:11,439
over the air and so here i'm actually

629
00:22:10,960 --> 00:22:14,320
going to go

630
00:22:11,440 --> 00:22:15,600
off channel connect to the new ap get

631
00:22:14,320 --> 00:22:17,520
things set up there

632
00:22:15,600 --> 00:22:19,760
go back to my original ap to

633
00:22:17,520 --> 00:22:21,840
disassociate get any packets

634
00:22:19,760 --> 00:22:23,840
that were queued up for me and then

635
00:22:21,840 --> 00:22:25,918
proceed

636
00:22:23,840 --> 00:22:27,840
over the ds a bit more reliable but

637
00:22:25,919 --> 00:22:30,400
again can introduce the delay so

638
00:22:27,840 --> 00:22:32,720
again over the air is the the default

639
00:22:30,400 --> 00:22:34,320
recommendation

640
00:22:32,720 --> 00:22:36,159
again what i said the whole purpose of

641
00:22:34,320 --> 00:22:38,559
this is to keep the roaming times down

642
00:22:36,159 --> 00:22:40,400
as you can see here

643
00:22:38,559 --> 00:22:42,480
taking these three protocols into

644
00:22:40,400 --> 00:22:44,720
account plus quality of service really

645
00:22:42,480 --> 00:22:47,360
serve to do that the magic number

646
00:22:44,720 --> 00:22:48,080
100 milliseconds if i stay below that

647
00:22:47,360 --> 00:22:50,240
line

648
00:22:48,080 --> 00:22:53,678
uh that means i'm not going to impact

649
00:22:50,240 --> 00:22:56,320
any real-time voice and video traffic

650
00:22:53,679 --> 00:22:57,039
now uh one of the things that came up as

651
00:22:56,320 --> 00:22:59,039
we started

652
00:22:57,039 --> 00:23:00,960
going down the path particularly with 11

653
00:22:59,039 --> 00:23:02,640
r was there were some vulnerabilities

654
00:23:00,960 --> 00:23:04,000
discovered this was the crack attack

655
00:23:02,640 --> 00:23:05,600
from a number of years ago

656
00:23:04,000 --> 00:23:08,240
it was actually a collection of 10

657
00:23:05,600 --> 00:23:12,080
different vulnerabilities and

658
00:23:08,240 --> 00:23:15,520
what they ultimately ended up

659
00:23:12,080 --> 00:23:17,439
causing was that keys could be reused

660
00:23:15,520 --> 00:23:20,480
which would of course set me up for a

661
00:23:17,440 --> 00:23:22,640
known plain text attack

662
00:23:20,480 --> 00:23:24,480
one of the ten uh that was actually

663
00:23:22,640 --> 00:23:26,000
specific to the infrastructure the rest

664
00:23:24,480 --> 00:23:28,320
were all client based

665
00:23:26,000 --> 00:23:29,840
uh and the one for the aps that was

666
00:23:28,320 --> 00:23:31,360
specific to 11r

667
00:23:29,840 --> 00:23:33,280
which is why i bring it up in the

668
00:23:31,360 --> 00:23:35,120
context of fast roaming

669
00:23:33,280 --> 00:23:37,039
um important to recognize this was

670
00:23:35,120 --> 00:23:39,120
actually an industry-wide

671
00:23:37,039 --> 00:23:40,879
uh issue and what you know i found

672
00:23:39,120 --> 00:23:42,000
really impressive from an industry

673
00:23:40,880 --> 00:23:45,200
perspective was how

674
00:23:42,000 --> 00:23:46,480
quickly uh everybody kind of geared up

675
00:23:45,200 --> 00:23:48,240
to work to mitigate

676
00:23:46,480 --> 00:23:51,760
um the issue across the board both on

677
00:23:48,240 --> 00:23:54,799
the infrastructure and the client side

678
00:23:51,760 --> 00:23:56,879
so real uh real impressive to see

679
00:23:54,799 --> 00:23:58,240
you know the effort that that went in to

680
00:23:56,880 --> 00:24:00,720
make sure that

681
00:23:58,240 --> 00:24:02,080
uh this didn't create challenges uh and

682
00:24:00,720 --> 00:24:04,720
vulnerabilities for

683
00:24:02,080 --> 00:24:06,480
um for wireless networks as i said the

684
00:24:04,720 --> 00:24:09,679
flaw basically forces a

685
00:24:06,480 --> 00:24:10,400
um allows you to reuse the uh the key

686
00:24:09,679 --> 00:24:12,000
stream

687
00:24:10,400 --> 00:24:13,679
uh which you know creates this

688
00:24:12,000 --> 00:24:16,480
vulnerability uh

689
00:24:13,679 --> 00:24:17,600
and it would be done by a rogue ap

690
00:24:16,480 --> 00:24:20,720
effectively

691
00:24:17,600 --> 00:24:24,240
doing a man-in-the-middle attack

692
00:24:20,720 --> 00:24:26,159
and so typically rogue ap detection was

693
00:24:24,240 --> 00:24:28,240
what we used to mitigate it until the

694
00:24:26,159 --> 00:24:31,279
vulnerability was fixed and as noted

695
00:24:28,240 --> 00:24:34,240
before certification for wpa3

696
00:24:31,279 --> 00:24:35,840
introduces crack exploit testing now

697
00:24:34,240 --> 00:24:37,600
more recently there was another

698
00:24:35,840 --> 00:24:39,120
vulnerability discovered the crook

699
00:24:37,600 --> 00:24:42,879
vulnerability

700
00:24:39,120 --> 00:24:45,840
this was actually the result of a bug in

701
00:24:42,880 --> 00:24:46,559
some of the wireless chipsets the result

702
00:24:45,840 --> 00:24:49,039
of this was

703
00:24:46,559 --> 00:24:51,279
the the passive scanning attacker would

704
00:24:49,039 --> 00:24:54,960
actually be able to decrypt

705
00:24:51,279 --> 00:24:58,480
the wi-fi frames without knowing the

706
00:24:54,960 --> 00:24:58,480
the pairwise transient key

707
00:24:59,120 --> 00:25:02,320
in hindsight the bug is actually kind of

708
00:25:00,880 --> 00:25:05,600
funny um

709
00:25:02,320 --> 00:25:08,879
so i i disassociate from the network

710
00:25:05,600 --> 00:25:10,639
and so the chip says okay the client is

711
00:25:08,880 --> 00:25:13,200
not on the network anymore i don't need

712
00:25:10,640 --> 00:25:16,240
the pairwise transient key anymore

713
00:25:13,200 --> 00:25:17,919
therefore i will zero out the register

714
00:25:16,240 --> 00:25:20,480
that was storing the key

715
00:25:17,919 --> 00:25:21,440
only the chip then goes ooh i still have

716
00:25:20,480 --> 00:25:24,320
some packets

717
00:25:21,440 --> 00:25:25,360
that i need to send out so i better send

718
00:25:24,320 --> 00:25:28,240
those

719
00:25:25,360 --> 00:25:28,799
quickly now only we just zeroed out the

720
00:25:28,240 --> 00:25:31,360
key

721
00:25:28,799 --> 00:25:33,760
so those packets get sent with a

722
00:25:31,360 --> 00:25:34,399
pairwise transient key of all zeros

723
00:25:33,760 --> 00:25:36,640
which is

724
00:25:34,400 --> 00:25:39,039
why the attacker is able to decrypt

725
00:25:36,640 --> 00:25:39,679
those uh packets as i said it's kind of

726
00:25:39,039 --> 00:25:42,879
funny

727
00:25:39,679 --> 00:25:46,000
unless you're actually uh on the on the

728
00:25:42,880 --> 00:25:48,720
downside of the uh of the attack

729
00:25:46,000 --> 00:25:50,880
um now it does kind of beg the question

730
00:25:48,720 --> 00:25:52,720
right because the way that i'm gonna

731
00:25:50,880 --> 00:25:55,679
expose that vulnerability is i'm gonna

732
00:25:52,720 --> 00:25:57,679
send a disassociation request

733
00:25:55,679 --> 00:25:58,799
that's going to force the whole chain of

734
00:25:57,679 --> 00:26:01,760
events

735
00:25:58,799 --> 00:26:02,799
so why are these devices listening to

736
00:26:01,760 --> 00:26:05,360
these spoofed

737
00:26:02,799 --> 00:26:06,000
management frames well the answer is

738
00:26:05,360 --> 00:26:10,080
that

739
00:26:06,000 --> 00:26:11,760
there was no way to verify the integrity

740
00:26:10,080 --> 00:26:13,520
of management frames to know that they

741
00:26:11,760 --> 00:26:14,158
were coming from the legitimate client

742
00:26:13,520 --> 00:26:16,720
or ap

743
00:26:14,159 --> 00:26:18,240
or an attacker and so that is the

744
00:26:16,720 --> 00:26:20,720
problem that 11w

745
00:26:18,240 --> 00:26:21,279
uh aimed to solve it basically allowed

746
00:26:20,720 --> 00:26:24,720
us to

747
00:26:21,279 --> 00:26:27,520
um add a integrity check uh

748
00:26:24,720 --> 00:26:28,240
across both unicast and multicast and in

749
00:26:27,520 --> 00:26:30,400
fact uh

750
00:26:28,240 --> 00:26:31,520
add encryption or confidentiality onto

751
00:26:30,400 --> 00:26:34,320
the unicast

752
00:26:31,520 --> 00:26:34,720
uh management frames as i said this is

753
00:26:34,320 --> 00:26:38,240
now

754
00:26:34,720 --> 00:26:40,320
mandatory for wpa3 and wi-fi 6.

755
00:26:38,240 --> 00:26:42,240
and the reason this is so important is

756
00:26:40,320 --> 00:26:44,799
if we look at the vast majority of

757
00:26:42,240 --> 00:26:47,200
wireless attacks that we see today

758
00:26:44,799 --> 00:26:48,799
they typically start with a spoof

759
00:26:47,200 --> 00:26:51,200
management frame typically a spoof

760
00:26:48,799 --> 00:26:53,520
disassociation or d auth request

761
00:26:51,200 --> 00:26:55,279
and so this effectively immunizes us

762
00:26:53,520 --> 00:26:56,879
from the vast majority

763
00:26:55,279 --> 00:26:58,480
of attacks that we see on the network

764
00:26:56,880 --> 00:27:00,000
today now

765
00:26:58,480 --> 00:27:01,840
that was all kind of focused on the

766
00:27:00,000 --> 00:27:03,120
infrastructure side let me shift gears a

767
00:27:01,840 --> 00:27:05,439
little

768
00:27:03,120 --> 00:27:07,039
you know and look not at enterprise but

769
00:27:05,440 --> 00:27:08,880
now start to look at things

770
00:27:07,039 --> 00:27:10,080
in the consumer space or even what we

771
00:27:08,880 --> 00:27:13,279
use

772
00:27:10,080 --> 00:27:15,840
you know for for guest type access so

773
00:27:13,279 --> 00:27:18,480
this is wpa personal and of course

774
00:27:15,840 --> 00:27:20,158
with a home network we don't have all

775
00:27:18,480 --> 00:27:21,840
the infrastructure in place we don't

776
00:27:20,159 --> 00:27:24,159
have a triple a server

777
00:27:21,840 --> 00:27:26,000
well i guess this is an awesome talk so

778
00:27:24,159 --> 00:27:28,080
maybe some of you actually are running a

779
00:27:26,000 --> 00:27:31,200
triple a server at home but in general

780
00:27:28,080 --> 00:27:33,039
we don't have aaa servers at home and so

781
00:27:31,200 --> 00:27:35,919
that means there's no off sequence which

782
00:27:33,039 --> 00:27:38,399
means there's no pairwise master key

783
00:27:35,919 --> 00:27:41,200
so instead we have the passphrase which

784
00:27:38,399 --> 00:27:42,879
is used to generate the pre-shared key

785
00:27:41,200 --> 00:27:45,039
now we're going to do the the four-way

786
00:27:42,880 --> 00:27:47,279
handshake just like we did before

787
00:27:45,039 --> 00:27:50,080
but this time i want to actually take a

788
00:27:47,279 --> 00:27:51,919
look at what's in that five tuple

789
00:27:50,080 --> 00:27:53,918
so instead of the pmk we're going to use

790
00:27:51,919 --> 00:27:54,960
the psk and then we've got the two nonce

791
00:27:53,919 --> 00:27:58,080
values

792
00:27:54,960 --> 00:27:59,039
and the two mac addresses well out of

793
00:27:58,080 --> 00:28:02,240
those five

794
00:27:59,039 --> 00:28:04,000
only one is actually a secret the nonce

795
00:28:02,240 --> 00:28:05,919
and the mac addresses those are sent

796
00:28:04,000 --> 00:28:08,880
over the air in the clear

797
00:28:05,919 --> 00:28:10,799
so the entire security of the generation

798
00:28:08,880 --> 00:28:13,520
of the pairwise transient key

799
00:28:10,799 --> 00:28:15,120
is based on the security of the pmk or

800
00:28:13,520 --> 00:28:18,559
the pre-shared key

801
00:28:15,120 --> 00:28:19,678
so the pmk is this random 256-bit string

802
00:28:18,559 --> 00:28:22,158
so you know that's

803
00:28:19,679 --> 00:28:24,080
actually not too bad but the pre-shared

804
00:28:22,159 --> 00:28:27,200
key depends on the passphrase

805
00:28:24,080 --> 00:28:28,960
if my passphrase is off cert 2020

806
00:28:27,200 --> 00:28:30,960
you know basically we're opening the

807
00:28:28,960 --> 00:28:32,559
door for offline attacks

808
00:28:30,960 --> 00:28:34,559
and i certainly don't have to tell this

809
00:28:32,559 --> 00:28:37,039
audience strong passwords matter but

810
00:28:34,559 --> 00:28:39,440
this is this is actually why from a wpa

811
00:28:37,039 --> 00:28:42,600
psk perspective

812
00:28:39,440 --> 00:28:44,559
so to solve this uh vulnerability in

813
00:28:42,600 --> 00:28:47,120
wpa3 we're going to use

814
00:28:44,559 --> 00:28:48,879
a new protocol called simultaneous

815
00:28:47,120 --> 00:28:52,000
authentication of equals or

816
00:28:48,880 --> 00:28:54,640
sae it is based on the dragonfly

817
00:28:52,000 --> 00:28:56,720
key exchange and the real important

818
00:28:54,640 --> 00:29:00,320
thing to take away from how

819
00:28:56,720 --> 00:29:03,039
the dragonfly key exchange works is the

820
00:29:00,320 --> 00:29:05,200
security is not tied to the complexity

821
00:29:03,039 --> 00:29:07,440
of the shared secret

822
00:29:05,200 --> 00:29:10,000
so that eliminates that offline

823
00:29:07,440 --> 00:29:13,200
dictionary attack of vulnerability

824
00:29:10,000 --> 00:29:17,360
the result is going to be a 256 bit uh

825
00:29:13,200 --> 00:29:18,159
pmk i do my um my four-way handshake as

826
00:29:17,360 --> 00:29:21,918
normal

827
00:29:18,159 --> 00:29:24,559
uh and i support uh 8x11 w

828
00:29:21,919 --> 00:29:25,200
uh now on the downside recognize there's

829
00:29:24,559 --> 00:29:27,039
going to be

830
00:29:25,200 --> 00:29:28,559
you know a bit of of legacy that we're

831
00:29:27,039 --> 00:29:29,600
going to be dealing with for quite some

832
00:29:28,559 --> 00:29:32,240
time

833
00:29:29,600 --> 00:29:34,320
so we do introduce a transition mode

834
00:29:32,240 --> 00:29:38,240
supporting both wpa2

835
00:29:34,320 --> 00:29:40,399
psk and wpa3 sae at the same time

836
00:29:38,240 --> 00:29:41,919
of course that opens up the door for

837
00:29:40,399 --> 00:29:44,320
downgraded attacks

838
00:29:41,919 --> 00:29:45,039
uh and in fact there was uh some work

839
00:29:44,320 --> 00:29:48,240
done

840
00:29:45,039 --> 00:29:49,200
uh on the dragonfly handshake and there

841
00:29:48,240 --> 00:29:52,000
was a series of

842
00:29:49,200 --> 00:29:53,200
attacks identified that were coupled

843
00:29:52,000 --> 00:29:55,760
together

844
00:29:53,200 --> 00:29:57,360
under the name dragonblood one of the

845
00:29:55,760 --> 00:29:58,559
key ones being this backwards

846
00:29:57,360 --> 00:30:01,600
compatibility

847
00:29:58,559 --> 00:30:02,639
attack that we can trick clients into

848
00:30:01,600 --> 00:30:06,639
connecting

849
00:30:02,640 --> 00:30:10,159
using wpa2 personal which again exposes

850
00:30:06,640 --> 00:30:12,000
weak pass phrases there's also some

851
00:30:10,159 --> 00:30:14,320
vulnerabilities that we need to be aware

852
00:30:12,000 --> 00:30:16,360
of on the infrastructure side

853
00:30:14,320 --> 00:30:18,639
and there we're looking at using

854
00:30:16,360 --> 00:30:21,199
anti-exhaustion mechanisms

855
00:30:18,640 --> 00:30:22,000
and also the capability to blacklist

856
00:30:21,200 --> 00:30:24,960
misbehaving

857
00:30:22,000 --> 00:30:25,919
clients uh to prevent that from

858
00:30:24,960 --> 00:30:28,320
impacting things

859
00:30:25,919 --> 00:30:30,559
on the infrastructure side but the end

860
00:30:28,320 --> 00:30:32,080
result of this is as you start migrating

861
00:30:30,559 --> 00:30:34,399
wpa3

862
00:30:32,080 --> 00:30:36,240
you do just want to check with vendors

863
00:30:34,399 --> 00:30:38,239
both infrastructure and clients

864
00:30:36,240 --> 00:30:40,000
what they do to mitigate some of these

865
00:30:38,240 --> 00:30:42,240
attacks and you know

866
00:30:40,000 --> 00:30:43,279
we would expect to see these being built

867
00:30:42,240 --> 00:30:45,360
into

868
00:30:43,279 --> 00:30:47,760
uh the negative testing that we do in

869
00:30:45,360 --> 00:30:49,760
the wi-fi lines

870
00:30:47,760 --> 00:30:51,600
so that's where i'm going to use

871
00:30:49,760 --> 00:30:52,240
passphrase but you know now let's think

872
00:30:51,600 --> 00:30:53,840
about the

873
00:30:52,240 --> 00:30:55,520
the guest access perspective where i'm

874
00:30:53,840 --> 00:30:59,439
just doing open

875
00:30:55,520 --> 00:31:01,039
ssid so in the in this open environment

876
00:30:59,440 --> 00:31:04,399
i'm still going to have my

877
00:31:01,039 --> 00:31:06,320
aaa infrastructure but there's no real

878
00:31:04,399 --> 00:31:08,158
authentication happening at layer 2

879
00:31:06,320 --> 00:31:11,840
there's no 802.1x

880
00:31:08,159 --> 00:31:12,559
and so the idea is any packet that gets

881
00:31:11,840 --> 00:31:15,600
sent

882
00:31:12,559 --> 00:31:16,720
is going to trigger a radius event and

883
00:31:15,600 --> 00:31:20,000
that's going to

884
00:31:16,720 --> 00:31:23,600
result in a redirect acl

885
00:31:20,000 --> 00:31:26,880
and the idea behind this is now if i see

886
00:31:23,600 --> 00:31:29,519
an http packet i will redirect that

887
00:31:26,880 --> 00:31:31,360
to my web server to do a web

888
00:31:29,519 --> 00:31:33,600
authentication sequence

889
00:31:31,360 --> 00:31:35,678
and then as a result of this i'm going

890
00:31:33,600 --> 00:31:38,719
to capture that mac address

891
00:31:35,679 --> 00:31:41,600
in the aaa and i'm going to send a

892
00:31:38,720 --> 00:31:44,240
change of authorization request

893
00:31:41,600 --> 00:31:45,439
so now when i come in again with a new

894
00:31:44,240 --> 00:31:47,440
packet

895
00:31:45,440 --> 00:31:49,679
because we did the reauthorization

896
00:31:47,440 --> 00:31:52,559
request i now trigger again

897
00:31:49,679 --> 00:31:54,960
the radius access this time i'm going to

898
00:31:52,559 --> 00:31:57,200
see the mac address mac off bypass

899
00:31:54,960 --> 00:31:58,960
kicks in and i'm going to allow that

900
00:31:57,200 --> 00:32:02,559
device onto the network

901
00:31:58,960 --> 00:32:05,279
of course we know it's very trivial to

902
00:32:02,559 --> 00:32:06,480
spoof a mac address and so you know we

903
00:32:05,279 --> 00:32:09,440
have to recognize

904
00:32:06,480 --> 00:32:10,640
what um the limitations from a security

905
00:32:09,440 --> 00:32:13,279
perspective that does

906
00:32:10,640 --> 00:32:14,000
on the access side but the other piece

907
00:32:13,279 --> 00:32:15,760
again there was

908
00:32:14,000 --> 00:32:17,519
no dot one x which means there's no

909
00:32:15,760 --> 00:32:18,799
pairwise master key which means there's

910
00:32:17,519 --> 00:32:21,840
no encryption

911
00:32:18,799 --> 00:32:23,760
uh across that link now

912
00:32:21,840 --> 00:32:25,199
sometimes we use mac off bypass

913
00:32:23,760 --> 00:32:27,600
generically less so

914
00:32:25,200 --> 00:32:30,080
from a client normal client perspective

915
00:32:27,600 --> 00:32:32,240
but in the iot space if i've got legacy

916
00:32:30,080 --> 00:32:35,439
devices that don't really support

917
00:32:32,240 --> 00:32:38,720
uh modern uh capabilities

918
00:32:35,440 --> 00:32:39,679
i'll be using mac off bypass to secure

919
00:32:38,720 --> 00:32:41,200
it even if

920
00:32:39,679 --> 00:32:43,360
you know those old devices i mentioned

921
00:32:41,200 --> 00:32:45,519
before that only support wep

922
00:32:43,360 --> 00:32:47,439
will probably use a combination of wep

923
00:32:45,519 --> 00:32:49,519
and mac off bypass

924
00:32:47,440 --> 00:32:51,039
for that but at the end of the day again

925
00:32:49,519 --> 00:32:54,000
very very insecure

926
00:32:51,039 --> 00:32:55,679
and so what i typically recommend is

927
00:32:54,000 --> 00:32:57,760
those devices should be going on a

928
00:32:55,679 --> 00:32:59,039
dedicated vlan and we're locking down

929
00:32:57,760 --> 00:33:01,279
that vlan

930
00:32:59,039 --> 00:33:03,519
so the devices can only talk to the very

931
00:33:01,279 --> 00:33:06,080
specific applications

932
00:33:03,519 --> 00:33:07,600
uh that they require of course things

933
00:33:06,080 --> 00:33:09,840
are about to get a little bit more

934
00:33:07,600 --> 00:33:12,559
complicated when it comes to

935
00:33:09,840 --> 00:33:13,760
using the mac address for any sort of

936
00:33:12,559 --> 00:33:17,120
policy

937
00:33:13,760 --> 00:33:20,320
ios 14 dropped just yesterday

938
00:33:17,120 --> 00:33:22,799
and along with android 10 and windows 10

939
00:33:20,320 --> 00:33:25,039
we're now starting to see what we call a

940
00:33:22,799 --> 00:33:25,840
private address this is a random mac

941
00:33:25,039 --> 00:33:27,919
address

942
00:33:25,840 --> 00:33:29,360
now random mac addresses are not new

943
00:33:27,919 --> 00:33:31,120
right we've actually been seeing them

944
00:33:29,360 --> 00:33:34,158
for a bit

945
00:33:31,120 --> 00:33:37,199
and they were initially put in place

946
00:33:34,159 --> 00:33:38,159
to mask my identity and prevent things

947
00:33:37,200 --> 00:33:41,360
like location

948
00:33:38,159 --> 00:33:44,240
analytics what's new now with this

949
00:33:41,360 --> 00:33:46,000
private address approach is i'm going to

950
00:33:44,240 --> 00:33:49,039
use that random mac address

951
00:33:46,000 --> 00:33:51,360
even when i am associated now things

952
00:33:49,039 --> 00:33:53,760
aren't completely horrible

953
00:33:51,360 --> 00:33:54,879
in the sense that what ios android and

954
00:33:53,760 --> 00:33:59,039
windows are doing

955
00:33:54,880 --> 00:34:02,799
is i will use the same mac address

956
00:33:59,039 --> 00:34:04,640
consistently every time i join the ssid

957
00:34:02,799 --> 00:34:06,879
so it'll be different for each si

958
00:34:04,640 --> 00:34:08,399
ssid but it's not like i'm going to

959
00:34:06,880 --> 00:34:11,839
change every time i

960
00:34:08,399 --> 00:34:15,440
i joined the networks of uh subsequently

961
00:34:11,839 --> 00:34:16,639
so um you know it does give that privacy

962
00:34:15,440 --> 00:34:19,040
perspective

963
00:34:16,639 --> 00:34:21,280
but it is going to create implications

964
00:34:19,040 --> 00:34:22,960
beyond just location analytics

965
00:34:21,280 --> 00:34:24,720
anything that you're using mac address

966
00:34:22,960 --> 00:34:26,079
from a security perspective

967
00:34:24,719 --> 00:34:27,598
uh you know is something that you're

968
00:34:26,079 --> 00:34:29,760
gonna now need to take into

969
00:34:27,599 --> 00:34:32,720
consideration

970
00:34:29,760 --> 00:34:34,000
so on the on the guest access piece

971
00:34:32,719 --> 00:34:34,799
there's two other things that i want to

972
00:34:34,000 --> 00:34:38,320
look at

973
00:34:34,800 --> 00:34:41,280
first is what i talked about before

974
00:34:38,320 --> 00:34:42,960
wi-fi certified enhanced open which is a

975
00:34:41,280 --> 00:34:46,240
optional certification

976
00:34:42,960 --> 00:34:47,040
associated with wpa3 the problem it's

977
00:34:46,239 --> 00:34:50,479
trying to solve

978
00:34:47,040 --> 00:34:51,119
is the fact that i don't create a pmk i

979
00:34:50,480 --> 00:34:54,719
don't have

980
00:34:51,119 --> 00:34:56,879
any encryption of that link and so we

981
00:34:54,719 --> 00:34:58,799
use what's called opportunistic wireless

982
00:34:56,879 --> 00:35:01,118
encryption using diffie-hellman

983
00:34:58,800 --> 00:35:02,480
to do a key exchange so i can at least

984
00:35:01,119 --> 00:35:05,839
do a

985
00:35:02,480 --> 00:35:07,520
encryption on that open ssid the problem

986
00:35:05,839 --> 00:35:09,279
is diffie-hellman is susceptible to a

987
00:35:07,520 --> 00:35:11,119
man in the middle attack

988
00:35:09,280 --> 00:35:13,440
so the idea is i'd show up say you know

989
00:35:11,119 --> 00:35:15,920
at the airport um i think i'm connecting

990
00:35:13,440 --> 00:35:17,680
to airport wi-fi

991
00:35:15,920 --> 00:35:19,680
but instead i'm talking to the rogue

992
00:35:17,680 --> 00:35:22,720
access point i have a

993
00:35:19,680 --> 00:35:23,759
encrypted link to the road it sets up a

994
00:35:22,720 --> 00:35:26,560
link to the

995
00:35:23,760 --> 00:35:27,200
legitimate access point again encrypted

996
00:35:26,560 --> 00:35:29,119
um

997
00:35:27,200 --> 00:35:30,480
but the attacker now has visibility of

998
00:35:29,119 --> 00:35:32,960
all my traffic

999
00:35:30,480 --> 00:35:35,680
um the the attacker would have

1000
00:35:32,960 --> 00:35:37,839
visibility in a purely open network so

1001
00:35:35,680 --> 00:35:39,359
you know it's kind of a trade-up and

1002
00:35:37,839 --> 00:35:41,520
with covid none of us are going to

1003
00:35:39,359 --> 00:35:43,520
airports anymore anyway

1004
00:35:41,520 --> 00:35:45,040
but it is something um you know to look

1005
00:35:43,520 --> 00:35:47,839
at try to improve it

1006
00:35:45,040 --> 00:35:48,240
um we've taken that one step further

1007
00:35:47,839 --> 00:35:50,720
with

1008
00:35:48,240 --> 00:35:51,520
open roaming so open roaming has

1009
00:35:50,720 --> 00:35:55,040
developed uh

1010
00:35:51,520 --> 00:35:56,880
cisco built on 811u and the wi-fi

1011
00:35:55,040 --> 00:35:59,440
alliance passpoint

1012
00:35:56,880 --> 00:36:01,200
protocol and we've subsequently given

1013
00:35:59,440 --> 00:36:03,440
control over it over to the

1014
00:36:01,200 --> 00:36:04,240
wireless broadband alliance uh put

1015
00:36:03,440 --> 00:36:06,480
simply

1016
00:36:04,240 --> 00:36:08,000
we're looking to kind of decouple the

1017
00:36:06,480 --> 00:36:10,480
access provider from the

1018
00:36:08,000 --> 00:36:12,079
identity provider so going back to that

1019
00:36:10,480 --> 00:36:14,240
airport example

1020
00:36:12,079 --> 00:36:15,760
while i might not have an account with

1021
00:36:14,240 --> 00:36:18,479
the airport

1022
00:36:15,760 --> 00:36:20,079
i do have relationships with airlines

1023
00:36:18,480 --> 00:36:23,119
through my frequent flyers

1024
00:36:20,079 --> 00:36:26,320
so the airport could offer wi-fi

1025
00:36:23,119 --> 00:36:28,640
leveraging my freedom flyer credentials

1026
00:36:26,320 --> 00:36:29,680
as the way to authenticate me onto the

1027
00:36:28,640 --> 00:36:32,160
network

1028
00:36:29,680 --> 00:36:34,319
um the advantage here is that we can

1029
00:36:32,160 --> 00:36:36,480
actually do a proper eep exchange

1030
00:36:34,320 --> 00:36:38,000
which means that um i've got you know

1031
00:36:36,480 --> 00:36:40,880
effectively wpa

1032
00:36:38,000 --> 00:36:43,200
enterprise level security we actually

1033
00:36:40,880 --> 00:36:44,800
simplify the onboarding process as well

1034
00:36:43,200 --> 00:36:48,319
as part of open roaming

1035
00:36:44,800 --> 00:36:50,240
and so the wba is really driving this

1036
00:36:48,320 --> 00:36:52,000
forward at the moment and in fact they

1037
00:36:50,240 --> 00:36:54,160
view it not just from a pure

1038
00:36:52,000 --> 00:36:55,200
wi-fi access perspective but they're

1039
00:36:54,160 --> 00:36:57,520
looking at it as

1040
00:36:55,200 --> 00:37:00,240
how we can bridge the gap between wi-fi

1041
00:36:57,520 --> 00:37:03,599
6 and 5g networks

1042
00:37:00,240 --> 00:37:04,720
now on the iot side the problem that i'm

1043
00:37:03,599 --> 00:37:07,359
trying to solve is

1044
00:37:04,720 --> 00:37:08,000
i've got these iot devices and some of

1045
00:37:07,359 --> 00:37:10,000
them don't even

1046
00:37:08,000 --> 00:37:11,839
have a user interface for me to

1047
00:37:10,000 --> 00:37:13,599
configure them to get onto the network

1048
00:37:11,839 --> 00:37:15,599
so how can i make this work

1049
00:37:13,599 --> 00:37:17,520
more securely than just doing something

1050
00:37:15,599 --> 00:37:20,160
like mac off bypass

1051
00:37:17,520 --> 00:37:20,640
so the device provisioning protocol has

1052
00:37:20,160 --> 00:37:22,319
three

1053
00:37:20,640 --> 00:37:24,319
different stages and the first is the

1054
00:37:22,320 --> 00:37:25,359
bootstrapping i'll use something like a

1055
00:37:24,320 --> 00:37:28,320
qr code

1056
00:37:25,359 --> 00:37:29,279
nfc or bluetooth to get a public key off

1057
00:37:28,320 --> 00:37:31,760
the device

1058
00:37:29,280 --> 00:37:33,680
then i can use that public key to create

1059
00:37:31,760 --> 00:37:34,640
a secure tunnel to do my credential

1060
00:37:33,680 --> 00:37:36,879
exchange

1061
00:37:34,640 --> 00:37:38,799
and now i've got a pairwise master key i

1062
00:37:36,880 --> 00:37:40,880
do my four-way handshake i get to take

1063
00:37:38,800 --> 00:37:44,720
advantage of 11w

1064
00:37:40,880 --> 00:37:47,920
exactly as we've seen before

1065
00:37:44,720 --> 00:37:49,200
now all of that is really network

1066
00:37:47,920 --> 00:37:50,960
infrastructure focused

1067
00:37:49,200 --> 00:37:52,560
the last thing that i just want to touch

1068
00:37:50,960 --> 00:37:55,119
on briefly

1069
00:37:52,560 --> 00:37:56,000
is the attacker piece the rogue access

1070
00:37:55,119 --> 00:37:59,119
point

1071
00:37:56,000 --> 00:38:00,560
so we define a rogue ap as any access

1072
00:37:59,119 --> 00:38:01,680
point that's not part of our

1073
00:38:00,560 --> 00:38:02,880
infrastructure

1074
00:38:01,680 --> 00:38:05,200
now if you think about by that

1075
00:38:02,880 --> 00:38:07,280
definition most of these

1076
00:38:05,200 --> 00:38:09,680
rogue aps are actually going to be

1077
00:38:07,280 --> 00:38:12,320
legitimate

1078
00:38:09,680 --> 00:38:13,118
and what i need to do is understand

1079
00:38:12,320 --> 00:38:16,320
which ones

1080
00:38:13,119 --> 00:38:17,680
are malicious correctly differentiating

1081
00:38:16,320 --> 00:38:18,000
them is going to be really important in

1082
00:38:17,680 --> 00:38:21,279
terms

1083
00:38:18,000 --> 00:38:22,560
of what i do to secure my network i said

1084
00:38:21,280 --> 00:38:24,560
at the start you know we're worried

1085
00:38:22,560 --> 00:38:26,400
about rogue aps introduced onto my

1086
00:38:24,560 --> 00:38:28,560
physical network detecting that

1087
00:38:26,400 --> 00:38:30,720
is really hard because when i see a

1088
00:38:28,560 --> 00:38:32,960
rogue ap i'm looking at the

1089
00:38:30,720 --> 00:38:33,759
wireless interface the wireless mac

1090
00:38:32,960 --> 00:38:36,480
address

1091
00:38:33,760 --> 00:38:38,240
but on the wired side when i'm looking

1092
00:38:36,480 --> 00:38:38,960
for it looking in the cam tables of my

1093
00:38:38,240 --> 00:38:42,078
switch

1094
00:38:38,960 --> 00:38:45,040
i'm seeing the wired ethernet mac

1095
00:38:42,079 --> 00:38:47,280
now most devices they allocate those mac

1096
00:38:45,040 --> 00:38:49,359
addresses sequentially

1097
00:38:47,280 --> 00:38:51,119
so i can you know find the correlation

1098
00:38:49,359 --> 00:38:52,880
and try to identify that but if i'm a

1099
00:38:51,119 --> 00:38:54,640
malicious attacker

1100
00:38:52,880 --> 00:38:56,960
i'm going to pick completely different

1101
00:38:54,640 --> 00:38:57,279
random mac addresses that are unrelated

1102
00:38:56,960 --> 00:38:59,280
so

1103
00:38:57,280 --> 00:39:00,560
you're not going to be able to identify

1104
00:38:59,280 --> 00:39:03,920
me in that way

1105
00:39:00,560 --> 00:39:07,599
so at the end of the day wired 802.1x uh

1106
00:39:03,920 --> 00:39:09,280
really matters now the other side of

1107
00:39:07,599 --> 00:39:11,280
this is the rogue client

1108
00:39:09,280 --> 00:39:12,800
row client is any client which is

1109
00:39:11,280 --> 00:39:16,000
connected to a

1110
00:39:12,800 --> 00:39:18,400
rogue ap what i care about are

1111
00:39:16,000 --> 00:39:19,280
my clients that might be connected to a

1112
00:39:18,400 --> 00:39:21,040
malicious

1113
00:39:19,280 --> 00:39:23,119
rogue because remember my client could

1114
00:39:21,040 --> 00:39:26,480
be connected to the you know coffee shop

1115
00:39:23,119 --> 00:39:28,640
downstairs which is legitimate

1116
00:39:26,480 --> 00:39:30,480
uh the other thing clients can create ad

1117
00:39:28,640 --> 00:39:32,799
hoc networks um so that

1118
00:39:30,480 --> 00:39:34,000
looks a little bit different uh to a

1119
00:39:32,800 --> 00:39:37,040
normal um

1120
00:39:34,000 --> 00:39:39,599
client and ap based network uh but if i

1121
00:39:37,040 --> 00:39:41,200
am wired into the physical network and

1122
00:39:39,599 --> 00:39:42,160
having an ad hoc network does that

1123
00:39:41,200 --> 00:39:44,399
create a

1124
00:39:42,160 --> 00:39:46,160
back door for me um question let me just

1125
00:39:44,400 --> 00:39:48,400
take a quick look if an ap

1126
00:39:46,160 --> 00:39:50,000
returns a client with a list of other

1127
00:39:48,400 --> 00:39:52,240
nearby wi-fi networks

1128
00:39:50,000 --> 00:39:54,160
could that be spoofed by an attacker to

1129
00:39:52,240 --> 00:39:55,118
trick a user onto an illegitimate

1130
00:39:54,160 --> 00:39:57,200
network

1131
00:39:55,119 --> 00:39:58,240
percent that is exactly what we're

1132
00:39:57,200 --> 00:40:01,200
looking at

1133
00:39:58,240 --> 00:40:03,598
as as a as a malicious rogue i will send

1134
00:40:01,200 --> 00:40:06,560
a disassociation request

1135
00:40:03,599 --> 00:40:07,920
to my legitimate client to force it to

1136
00:40:06,560 --> 00:40:11,440
go off the network

1137
00:40:07,920 --> 00:40:13,359
and roam i'm as my this rogue ap

1138
00:40:11,440 --> 00:40:14,800
i'm going to use the same ssid so what

1139
00:40:13,359 --> 00:40:18,000
i'm trying to

1140
00:40:14,800 --> 00:40:19,119
cause is to knock the client off the

1141
00:40:18,000 --> 00:40:22,160
legitimate network

1142
00:40:19,119 --> 00:40:22,800
and have it roam to my uh illegitimate

1143
00:40:22,160 --> 00:40:25,680
network

1144
00:40:22,800 --> 00:40:27,200
as you put in that question so how do i

1145
00:40:25,680 --> 00:40:29,359
mitigate against that

1146
00:40:27,200 --> 00:40:30,240
uh well this is where rogue ap

1147
00:40:29,359 --> 00:40:32,960
containment

1148
00:40:30,240 --> 00:40:34,799
comes into play i'm going to try to

1149
00:40:32,960 --> 00:40:35,359
contain the rogue and i'm going to

1150
00:40:34,800 --> 00:40:38,599
attack

1151
00:40:35,359 --> 00:40:41,598
the attacker i'm going to send a spoofed

1152
00:40:38,599 --> 00:40:44,400
disassociation request to the client the

1153
00:40:41,599 --> 00:40:46,400
rogue client connected to that rogue

1154
00:40:44,400 --> 00:40:48,079
ap so just in the same way that the

1155
00:40:46,400 --> 00:40:50,000
rogue knocked me off

1156
00:40:48,079 --> 00:40:52,319
you know my legitimate network i roamed

1157
00:40:50,000 --> 00:40:53,520
to it my legitimate network's going to

1158
00:40:52,319 --> 00:40:57,759
knock me off to

1159
00:40:53,520 --> 00:40:59,759
to go back if i do this i do need to

1160
00:40:57,760 --> 00:41:01,280
you know again make sure that it really

1161
00:40:59,760 --> 00:41:03,599
is a a malicious

1162
00:41:01,280 --> 00:41:04,720
road um the coffee shop downstairs

1163
00:41:03,599 --> 00:41:07,760
doesn't like it when

1164
00:41:04,720 --> 00:41:09,439
i attack their their network marriott

1165
00:41:07,760 --> 00:41:11,760
actually got into trouble

1166
00:41:09,440 --> 00:41:14,079
um they wanted people not to use their

1167
00:41:11,760 --> 00:41:18,880
4g hot spots but to pay for

1168
00:41:14,079 --> 00:41:22,240
hotel wi-fi and they actually

1169
00:41:18,880 --> 00:41:24,720
got fined by the fcc for uh using

1170
00:41:22,240 --> 00:41:26,720
uh rogue containment to uh to force

1171
00:41:24,720 --> 00:41:28,640
people onto the hotel wi-fi

1172
00:41:26,720 --> 00:41:30,000
um but remember we talked about protect

1173
00:41:28,640 --> 00:41:32,560
management frames right

1174
00:41:30,000 --> 00:41:35,040
rogue ap containment is going away in a

1175
00:41:32,560 --> 00:41:36,799
wpa three world

1176
00:41:35,040 --> 00:41:38,079
so we we're going to need to think about

1177
00:41:36,800 --> 00:41:39,680
the implications there

1178
00:41:38,079 --> 00:41:41,359
we're going to be much more focused on

1179
00:41:39,680 --> 00:41:44,078
detection um

1180
00:41:41,359 --> 00:41:46,078
and i'm going to have to maybe rely on

1181
00:41:44,079 --> 00:41:48,160
wireless location technologies to

1182
00:41:46,079 --> 00:41:50,079
physically locate rogues and i'm going

1183
00:41:48,160 --> 00:41:53,279
to need to physically mitigate them

1184
00:41:50,079 --> 00:41:56,400
as opposed to using rogue ap

1185
00:41:53,280 --> 00:41:58,079
containment a question on multi-factor

1186
00:41:56,400 --> 00:42:01,359
authentication over

1187
00:41:58,079 --> 00:42:03,599
1x so

1188
00:42:01,359 --> 00:42:04,960
while you know multi-factor is is all

1189
00:42:03,599 --> 00:42:08,160
the rage at the moment

1190
00:42:04,960 --> 00:42:12,000
and um you know certainly we uh use it

1191
00:42:08,160 --> 00:42:15,680
uh ourselves with with duo um

1192
00:42:12,000 --> 00:42:18,960
we we don't see that it's useful um

1193
00:42:15,680 --> 00:42:21,118
for the access to the the wireless

1194
00:42:18,960 --> 00:42:22,560
uh network because if you think about

1195
00:42:21,119 --> 00:42:25,680
what we do from the roaming

1196
00:42:22,560 --> 00:42:28,000
uh perspective um you know

1197
00:42:25,680 --> 00:42:29,118
just adding that extra a bit of

1198
00:42:28,000 --> 00:42:31,520
complexity

1199
00:42:29,119 --> 00:42:32,640
actually inhibits what we're trying to

1200
00:42:31,520 --> 00:42:35,920
do so instead

1201
00:42:32,640 --> 00:42:38,160
it's about uh doing um

1202
00:42:35,920 --> 00:42:39,119
uh the standard uh eep types that we

1203
00:42:38,160 --> 00:42:42,319
talked about

1204
00:42:39,119 --> 00:42:42,880
and then i would use a duo or you know

1205
00:42:42,319 --> 00:42:46,319
whatever

1206
00:42:42,880 --> 00:42:48,640
multi-factor authentication for the uh

1207
00:42:46,319 --> 00:42:50,319
the applications that i'm connect to so

1208
00:42:48,640 --> 00:42:52,400
we use mfa for

1209
00:42:50,319 --> 00:42:53,520
the application security as opposed to

1210
00:42:52,400 --> 00:42:56,800
the network

1211
00:42:53,520 --> 00:42:58,640
uh access when i use mfa

1212
00:42:56,800 --> 00:43:00,720
for remote access that's a little

1213
00:42:58,640 --> 00:43:02,400
different for my vpn

1214
00:43:00,720 --> 00:43:04,160
because i'm stationary it's really the

1215
00:43:02,400 --> 00:43:06,400
mobile aspect

1216
00:43:04,160 --> 00:43:07,440
uh to wireless which is why we typically

1217
00:43:06,400 --> 00:43:10,240
don't use it

1218
00:43:07,440 --> 00:43:10,720
on the wireless network i will try to

1219
00:43:10,240 --> 00:43:12,399
get to

1220
00:43:10,720 --> 00:43:14,480
there's some other questions i'll answer

1221
00:43:12,400 --> 00:43:15,920
after finish but i do recognize i'm over

1222
00:43:14,480 --> 00:43:18,800
time

1223
00:43:15,920 --> 00:43:19,839
so i just want to thank you um all for

1224
00:43:18,800 --> 00:43:21,839
for your time

1225
00:43:19,839 --> 00:43:23,599
and just remember the wireless network

1226
00:43:21,839 --> 00:43:26,640
is just one link it's one piece

1227
00:43:23,599 --> 00:43:28,640
of the puzzle so it's got to be just one

1228
00:43:26,640 --> 00:43:31,118
part of your overall

1229
00:43:28,640 --> 00:43:32,960
network security strategy thank you very

1230
00:43:31,119 --> 00:43:34,880
much

1231
00:43:32,960 --> 00:43:36,240
thank you very much mark so i'll

1232
00:43:34,880 --> 00:43:40,640
probably

1233
00:43:36,240 --> 00:43:44,160
need to change my password now or not

1234
00:43:40,640 --> 00:43:44,799
um so the we have a maybe one or two

1235
00:43:44,160 --> 00:43:47,279
minutes for

1236
00:43:44,800 --> 00:43:48,880
a few questions one thing i did want to

1237
00:43:47,280 --> 00:43:49,839
the one the one thing i did want to go

1238
00:43:48,880 --> 00:43:52,000
through was the

1239
00:43:49,839 --> 00:43:53,440
you mentioned in the open roaming that

1240
00:43:52,000 --> 00:43:56,880
we're using some kind of

1241
00:43:53,440 --> 00:43:58,319
federation or identity uh to especially

1242
00:43:56,880 --> 00:43:58,720
in that airport example which is which

1243
00:43:58,319 --> 00:44:01,759
is a

1244
00:43:58,720 --> 00:44:04,000
great solution um what's the potential

1245
00:44:01,760 --> 00:44:05,839
for things like information leakage as

1246
00:44:04,000 --> 00:44:07,520
part of that if what

1247
00:44:05,839 --> 00:44:09,359
is there any protections in place for

1248
00:44:07,520 --> 00:44:12,160
someone creating their own

1249
00:44:09,359 --> 00:44:13,839
federation server or something like that

1250
00:44:12,160 --> 00:44:15,200
and maybe leaking frequent flyer numbers

1251
00:44:13,839 --> 00:44:16,960
or passport details

1252
00:44:15,200 --> 00:44:18,240
as we've seen recently in in the news

1253
00:44:16,960 --> 00:44:20,480
with tony abbott

1254
00:44:18,240 --> 00:44:22,399
uh no that's that's a great question and

1255
00:44:20,480 --> 00:44:24,400
um

1256
00:44:22,400 --> 00:44:26,720
while we're decoupling the access

1257
00:44:24,400 --> 00:44:29,520
provider from the identity provider

1258
00:44:26,720 --> 00:44:30,160
the access provider does have complete

1259
00:44:29,520 --> 00:44:33,040
control

1260
00:44:30,160 --> 00:44:34,000
over which identity providers it will

1261
00:44:33,040 --> 00:44:37,040
allow

1262
00:44:34,000 --> 00:44:38,960
um so the the wba the role that they're

1263
00:44:37,040 --> 00:44:40,480
uh taking is there they're acting as

1264
00:44:38,960 --> 00:44:43,200
that federation

1265
00:44:40,480 --> 00:44:44,319
um entity for all the different identity

1266
00:44:43,200 --> 00:44:47,359
providers

1267
00:44:44,319 --> 00:44:49,279
um and but as the access provider i can

1268
00:44:47,359 --> 00:44:52,560
say hey i'm not letting

1269
00:44:49,280 --> 00:44:54,720
you know everybody uh on um

1270
00:44:52,560 --> 00:44:55,759
so to use the the frequent flyer example

1271
00:44:54,720 --> 00:44:57,919
i'm only going to

1272
00:44:55,760 --> 00:44:59,920
allow federation of you know the

1273
00:44:57,920 --> 00:45:02,400
airlines that actually fly into this

1274
00:44:59,920 --> 00:45:03,200
airport and other things like maybe

1275
00:45:02,400 --> 00:45:06,000
eduroam

1276
00:45:03,200 --> 00:45:06,879
who could be another identity provider

1277
00:45:06,000 --> 00:45:09,520
i'm not going to

1278
00:45:06,880 --> 00:45:10,319
allow that or anything else so that the

1279
00:45:09,520 --> 00:45:12,319
security is

1280
00:45:10,319 --> 00:45:14,640
on how i implement it as an access

1281
00:45:12,319 --> 00:45:15,680
provider which identity providers i want

1282
00:45:14,640 --> 00:45:18,078
to allow

1283
00:45:15,680 --> 00:45:18,960
right fantastic and there was one more

1284
00:45:18,079 --> 00:45:22,240
question in

1285
00:45:18,960 --> 00:45:22,960
the q a if you can do you can do it in

1286
00:45:22,240 --> 00:45:25,040
rogue ap

1287
00:45:22,960 --> 00:45:26,160
what is preventing a rogue ap to do it

1288
00:45:25,040 --> 00:45:28,800
to you

1289
00:45:26,160 --> 00:45:31,279
if you can do it i think i think that

1290
00:45:28,800 --> 00:45:32,800
was doing the disassociation

1291
00:45:31,280 --> 00:45:34,880
uh request and that's that's a hundred

1292
00:45:32,800 --> 00:45:36,319
percent that that's the problem that we

1293
00:45:34,880 --> 00:45:40,079
were solving with

1294
00:45:36,319 --> 00:45:42,000
with 11 w so now the rogue ap

1295
00:45:40,079 --> 00:45:43,119
is not going to be able to knock my

1296
00:45:42,000 --> 00:45:45,359
clients

1297
00:45:43,119 --> 00:45:47,760
off the network remember that the client

1298
00:45:45,359 --> 00:45:49,359
may still just roam and they still roam

1299
00:45:47,760 --> 00:45:51,280
to that rogue

1300
00:45:49,359 --> 00:45:53,759
but it's not going to be able to try and

1301
00:45:51,280 --> 00:45:55,920
force it uh by sending the spoof

1302
00:45:53,760 --> 00:45:57,599
disassociation request

1303
00:45:55,920 --> 00:45:58,960
fantastic and there were a few more

1304
00:45:57,599 --> 00:46:00,000
questions that were kind of hovering

1305
00:45:58,960 --> 00:46:03,040
around but i'm

1306
00:46:00,000 --> 00:46:03,599
conscious of time um so with that i'm

1307
00:46:03,040 --> 00:46:04,480
going to

1308
00:46:03,599 --> 00:46:05,839
thank you very much for that

1309
00:46:04,480 --> 00:46:06,640
presentation because that was probably

1310
00:46:05,839 --> 00:46:09,200
one of the most

1311
00:46:06,640 --> 00:46:12,000
in-depth and technically complete

1312
00:46:09,200 --> 00:46:13,439
presentations of wp83 i've seen because

1313
00:46:12,000 --> 00:46:14,960
the information is all over the place

1314
00:46:13,440 --> 00:46:20,240
right so thank you very much for that

1315
00:46:14,960 --> 00:46:20,240
thank you

