1
00:00:09,130 --> 00:00:17,380
hi<font color="#E5E5E5"> everybody I'm very happy and super</font>

2
00:00:13,550 --> 00:00:21,020
excited to<font color="#E5E5E5"> present this top today to you</font>

3
00:00:17,380 --> 00:00:23,990
together<font color="#E5E5E5"> with my buddy ear hole on the</font>

4
00:00:21,020 --> 00:00:27,619
talk is titled with great power comes

5
00:00:23,990 --> 00:00:31,159
great pwnage we decided to choose this

6
00:00:27,619 --> 00:00:33,380
title obviously to attract as much

7
00:00:31,160 --> 00:00:35,960
audience as possible on the<font color="#E5E5E5"> other side</font>

8
00:00:33,380 --> 00:00:38,720
is also to reflect that that the topic

9
00:00:35,960 --> 00:00:41,960
we're talking<font color="#E5E5E5"> about so</font><font color="#CCCCCC"> it's sam'l okay</font>

10
00:00:38,720 --> 00:00:45,140
everybody<font color="#CCCCCC"> is still here good sam'l is a</font>

11
00:00:41,960 --> 00:00:47,420
great security framework that gives you

12
00:00:45,140 --> 00:00:52,879
a lot<font color="#CCCCCC"> of power but on the other</font><font color="#E5E5E5"> hand</font>

13
00:00:47,420 --> 00:00:55,399
it's also a very<font color="#E5E5E5"> dangerous thing if you</font>

14
00:00:52,879 --> 00:01:01,399
have security problems with it you can

15
00:00:55,399 --> 00:01:04,430
pone it pretty much so let us introduce

16
00:01:01,399 --> 00:01:06,890
my our selves<font color="#E5E5E5"> so Roland I both work for</font>

17
00:01:04,430 --> 00:01:08,990
campus security where a local pen tester

18
00:01:06,890 --> 00:01:11,090
company will actually<font color="#CCCCCC"> wear in lapis</font>

19
00:01:08,990 --> 00:01:15,710
<font color="#CCCCCC">ileana that sent the</font><font color="#E5E5E5"> other end of the</font>

20
00:01:11,090 --> 00:01:18,140
lake of<font color="#CCCCCC"> zurich and</font><font color="#E5E5E5"> actually the the main</font>

21
00:01:15,710 --> 00:01:21,679
<font color="#E5E5E5">topic of this talk is we want to present</font>

22
00:01:18,140 --> 00:01:23,780
the work that Rollo and<font color="#E5E5E5"> another</font>

23
00:01:21,680 --> 00:01:27,759
colleague of ours who's fortunately is

24
00:01:23,780 --> 00:01:32,509
not here today did as a bachelor thesis

25
00:01:27,759 --> 00:01:35,329
also with support from compass so the

26
00:01:32,509 --> 00:01:37,909
agenda<font color="#E5E5E5"> I'm going to cover the first part</font>

27
00:01:35,329 --> 00:01:40,429
of the talk and we'll do like the theory

28
00:01:37,909 --> 00:01:45,229
I'd like<font color="#E5E5E5"> to lay the foundations talk</font>

29
00:01:40,430 --> 00:01:47,119
about how samo is built up and i also

30
00:01:45,229 --> 00:01:49,789
want to<font color="#E5E5E5"> motivate it with two use cases</font>

31
00:01:47,119 --> 00:01:52,490
of swiss institutions who rely heavily

32
00:01:49,790 --> 00:01:55,100
on Sam 0 for their business<font color="#E5E5E5"> and then</font>

33
00:01:52,490 --> 00:01:57,589
we'll dive into the protocol details so

34
00:01:55,100 --> 00:02:00,259
if you've gone through the first 20 25

35
00:01:57,590 --> 00:02:04,850
minutes then comes<font color="#E5E5E5"> the interesting part</font>

36
00:02:00,259 --> 00:02:08,270
with Roland showing you previous attacks

37
00:02:04,850 --> 00:02:10,820
done on some oh and then a demo of this

38
00:02:08,270 --> 00:02:13,100
tool and how we found new implementation

39
00:02:10,820 --> 00:02:15,260
attack a well possible implementation

40
00:02:13,100 --> 00:02:19,400
for flaws or how you could attack them

41
00:02:15,260 --> 00:02:26,599
pretty automatically

42
00:02:19,400 --> 00:02:28,939
so<font color="#CCCCCC"> saml that's a new acronym for</font><font color="#E5E5E5"> you to</font>

43
00:02:26,599 --> 00:02:32,810
learn it stands<font color="#CCCCCC"> for security assertion</font>

44
00:02:28,939 --> 00:02:34,819
markup language its standard defined by

45
00:02:32,810 --> 00:02:38,030
an organization<font color="#E5E5E5"> called Oasis it was</font>

46
00:02:34,819 --> 00:02:42,048
specified in 2001 it comes in two

47
00:02:38,030 --> 00:02:47,450
<font color="#CCCCCC">versions one 1 & 2 point 0 we're</font><font color="#E5E5E5"> going</font>

48
00:02:42,049 --> 00:02:52,069
<font color="#E5E5E5">to talk about the latter one and as you</font>

49
00:02:47,450 --> 00:02:55,069
can think when you see markup language

50
00:02:52,069 --> 00:02:56,988
yes it's based on XML and on the<font color="#E5E5E5"> XML</font>

51
00:02:55,069 --> 00:03:01,268
standard and also on the<font color="#E5E5E5"> XML signature</font>

52
00:02:56,989 --> 00:03:04,579
standard it relies heavily on this so

53
00:03:01,269 --> 00:03:08,329
what is<font color="#CCCCCC"> it used for it's actually a</font>

54
00:03:04,579 --> 00:03:11,500
framework for cross domain web single

55
00:03:08,329 --> 00:03:14,480
sign-on so you want to allow<font color="#CCCCCC"> people to</font>

56
00:03:11,500 --> 00:03:16,930
sign on once and access different

57
00:03:14,480 --> 00:03:19,970
services but you want<font color="#E5E5E5"> to do it</font>

58
00:03:16,930 --> 00:03:23,169
throughout your organization boundaries

59
00:03:19,970 --> 00:03:27,829
and obviously also throughout different

60
00:03:23,169 --> 00:03:30,739
dns domains so here<font color="#E5E5E5"> are the basic</font>

61
00:03:27,829 --> 00:03:32,449
components<font color="#CCCCCC"> of a typical sam'l</font>

62
00:03:30,739 --> 00:03:34,699
implementation so you have the client

63
00:03:32,449 --> 00:03:38,209
that's<font color="#E5E5E5"> the person who wants to</font><font color="#CCCCCC"> access</font>

64
00:03:34,699 --> 00:03:41,810
services on<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> hand you</font><font color="#CCCCCC"> have your</font>

65
00:03:38,209 --> 00:03:45,980
services that provide applications

66
00:03:41,810 --> 00:03:48,049
resources and so on and what you

67
00:03:45,980 --> 00:03:50,929
typically have in a sam'l<font color="#CCCCCC"> setup is that</font>

68
00:03:48,049 --> 00:03:55,609
all those services share a common user

69
00:03:50,930 --> 00:03:58,159
base so instead of<font color="#CCCCCC"> having all those web</font>

70
00:03:55,609 --> 00:03:59,780
apps do their own login you're going to

71
00:03:58,159 --> 00:04:01,668
say now we're<font color="#E5E5E5"> going to rely on a</font>

72
00:03:59,780 --> 00:04:05,599
<font color="#E5E5E5">third-party</font><font color="#CCCCCC"> that's the identity provider</font>

73
00:04:01,669 --> 00:04:07,819
and you're typically going to do the

74
00:04:05,599 --> 00:04:10,429
login on the identity provided the

75
00:04:07,819 --> 00:04:12,560
identity provider is going to provide a

76
00:04:10,430 --> 00:04:16,909
proof of the identity<font color="#CCCCCC"> of the user and</font>

77
00:04:12,560 --> 00:04:19,608
and transfer it to the service providers

78
00:04:16,909 --> 00:04:21,339
will consume this this assertion so from

79
00:04:19,608 --> 00:04:24,049
now<font color="#CCCCCC"> on I'm going to use the</font>

80
00:04:21,339 --> 00:04:28,719
abbreviations IDP for identity provider

81
00:04:24,050 --> 00:04:32,120
and SP<font color="#E5E5E5"> for service providers so let's</font>

82
00:04:28,719 --> 00:04:32,870
talk<font color="#CCCCCC"> about those use cases so the first</font>

83
00:04:32,120 --> 00:04:35,420
one is an ass

84
00:04:32,870 --> 00:04:40,070
<font color="#E5E5E5">Association called igb to be it's a</font>

85
00:04:35,420 --> 00:04:43,190
zurich-based organization and their goal

86
00:04:40,070 --> 00:04:46,730
<font color="#CCCCCC">is to promote the electronic exchange of</font>

87
00:04:43,190 --> 00:04:49,190
data between businesses and in this case

88
00:04:46,730 --> 00:04:52,430
<font color="#E5E5E5">you have on the left side you have</font>

89
00:04:49,190 --> 00:04:57,310
insurance brokers and on the right side

90
00:04:52,430 --> 00:04:59,750
you<font color="#E5E5E5"> have big insurance companies those</font>

91
00:04:57,310 --> 00:05:02,290
brokers obviously those so they have a

92
00:04:59,750 --> 00:05:06,740
large user base and for their business

93
00:05:02,290 --> 00:05:09,230
<font color="#E5E5E5">they'd like to contact the insurances</font>

94
00:05:06,740 --> 00:05:13,190
and an access their their web<font color="#E5E5E5"> portal so</font>

95
00:05:09,230 --> 00:05:16,340
specifically broker portals and so they

96
00:05:13,190 --> 00:05:17,870
can<font color="#E5E5E5"> manage their offers for clients and</font>

97
00:05:16,340 --> 00:05:19,539
so on so<font color="#E5E5E5"> obviously if you're a broker</font>

98
00:05:17,870 --> 00:05:21,980
you would like to have as many

99
00:05:19,540 --> 00:05:24,740
connections to as many insurance

100
00:05:21,980 --> 00:05:27,920
companies as possible so what you will

101
00:05:24,740 --> 00:05:31,010
typically have<font color="#E5E5E5"> is one broker user will</font>

102
00:05:27,920 --> 00:05:32,750
have<font color="#E5E5E5"> up to 20 like in this</font><font color="#CCCCCC"> case it there</font>

103
00:05:31,010 --> 00:05:35,240
are 20 insurers major insurance

104
00:05:32,750 --> 00:05:38,300
companies in in Switzerland who are part

105
00:05:35,240 --> 00:05:41,030
of this project that<font color="#E5E5E5"> the world will have</font>

106
00:05:38,300 --> 00:05:44,980
up to 20 different logins per user to

107
00:05:41,030 --> 00:05:47,390
access those so this association

108
00:05:44,980 --> 00:05:49,190
recognize this as a problem also has a

109
00:05:47,390 --> 00:05:50,870
security<font color="#E5E5E5"> problem because broker uses</font>

110
00:05:49,190 --> 00:05:53,600
<font color="#CCCCCC">would typically</font><font color="#E5E5E5"> then start to share</font>

111
00:05:50,870 --> 00:05:56,320
their tokens or their credentials so

112
00:05:53,600 --> 00:06:03,530
that's not so optimal what they did is

113
00:05:56,320 --> 00:06:07,310
install an IDP it's it's a well operated

114
00:06:03,530 --> 00:06:08,900
by igbt and they need trust of both

115
00:06:07,310 --> 00:06:10,670
parties they need to trust from<font color="#E5E5E5"> the</font>

116
00:06:08,900 --> 00:06:14,150
broker side and from the insurance side

117
00:06:10,670 --> 00:06:15,950
and then you could typically<font color="#CCCCCC"> I'm going</font>

118
00:06:14,150 --> 00:06:19,270
to<font color="#E5E5E5"> switch back to the slide here</font><font color="#CCCCCC"> you</font>

119
00:06:15,950 --> 00:06:22,940
have so those roughly<font color="#E5E5E5"> 4,000 users need</font>

120
00:06:19,270 --> 00:06:26,240
per user 20 access or credentials so you

121
00:06:22,940 --> 00:06:29,180
end up<font color="#CCCCCC"> with 20 x 4000 equals eighty</font>

122
00:06:26,240 --> 00:06:31,820
thousand in this case<font color="#E5E5E5"> you're you're</font>

123
00:06:29,180 --> 00:06:35,350
being able to to scale it down to four

124
00:06:31,820 --> 00:06:38,090
thousand accounts because you're

125
00:06:35,350 --> 00:06:45,059
everybody logs in with one account and

126
00:06:38,090 --> 00:06:48,818
then he<font color="#E5E5E5"> gets access to all of the needed</font>

127
00:06:45,059 --> 00:06:52,089
insurance for<font color="#CCCCCC"> those so it's a way to</font>

128
00:06:48,819 --> 00:06:54,449
scale down and so to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> igbt also</font>

129
00:06:52,089 --> 00:06:58,509
manages all the identities it does a

130
00:06:54,449 --> 00:07:02,409
Identity and Access Management and it's

131
00:06:58,509 --> 00:07:05,559
a very successful story so you see over

132
00:07:02,409 --> 00:07:10,319
the last three years<font color="#CCCCCC"> the user base has</font>

133
00:07:05,559 --> 00:07:14,559
<font color="#CCCCCC">been constantly increasing and I think</font>

134
00:07:10,319 --> 00:07:18,879
they're a really large player in<font color="#E5E5E5"> the</font>

135
00:07:14,559 --> 00:07:25,899
<font color="#E5E5E5">Swiss market using this technology so a</font>

136
00:07:18,879 --> 00:07:31,319
second use case now it's in<font color="#CCCCCC"> the it'sit's</font>

137
00:07:25,899 --> 00:07:33,489
switch switch is an a foundation that

138
00:07:31,319 --> 00:07:36,639
actually switch brought the<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> to</font>

139
00:07:33,489 --> 00:07:40,209
Switzerland was<font color="#E5E5E5"> a operated first</font>

140
00:07:36,639 --> 00:07:42,699
backbone if i'm not mistaken and they

141
00:07:40,209 --> 00:07:44,949
are now typically in charge of

142
00:07:42,699 --> 00:07:47,919
institutions like university hospitals

143
00:07:44,949 --> 00:07:51,579
libraries and so on so<font color="#CCCCCC"> they're they're</font>

144
00:07:47,919 --> 00:07:53,829
very present in ND in education and now

145
00:07:51,579 --> 00:07:56,909
in this setup you have IDPs you have

146
00:07:53,829 --> 00:07:59,860
more than one IDP you have obviously<font color="#CCCCCC"> a</font>

147
00:07:56,909 --> 00:08:03,938
very large user base it's a time about

148
00:07:59,860 --> 00:08:07,050
ten times what we saw<font color="#E5E5E5"> just before so you</font>

149
00:08:03,939 --> 00:08:10,689
have students you have faculty staff

150
00:08:07,050 --> 00:08:14,229
hospitals and so on and every

151
00:08:10,689 --> 00:08:17,619
organization typically has his own IDP

152
00:08:14,229 --> 00:08:19,539
and now when somebody want<font color="#CCCCCC"> to log in so</font>

153
00:08:17,619 --> 00:08:22,769
say a student<font color="#E5E5E5"> wants to access Eternals</font>

154
00:08:19,539 --> 00:08:25,419
from the library the library will first

155
00:08:22,769 --> 00:08:27,699
need to know<font color="#E5E5E5"> okay which is your home</font>

156
00:08:25,419 --> 00:08:29,948
organization so there's one part of the

157
00:08:27,699 --> 00:08:34,870
protocol that's called where are you

158
00:08:29,949 --> 00:08:36,938
from that discovers the users IDP and

159
00:08:34,870 --> 00:08:38,769
then goes<font color="#E5E5E5"> in request does an</font>

160
00:08:36,938 --> 00:08:43,899
authentication request towards the

161
00:08:38,769 --> 00:08:46,870
<font color="#E5E5E5">university and once you're logged in you</font>

162
00:08:43,899 --> 00:08:49,860
can also go<font color="#E5E5E5"> and access your webmail or</font>

163
00:08:46,870 --> 00:08:53,579
some research DB that's not hosted

164
00:08:49,860 --> 00:08:53,579
that's not part of switch

165
00:08:53,620 --> 00:09:02,770
that's a<font color="#CCCCCC"> weight so here also some</font>

166
00:08:58,779 --> 00:09:04,720
numbers all those dots here and this on

167
00:09:02,770 --> 00:09:07,689
the<font color="#E5E5E5"> Swiss map or all the institutions</font>

168
00:09:04,720 --> 00:09:11,110
that are part of switch and we see that

169
00:09:07,690 --> 00:09:13,540
<font color="#CCCCCC">the number since 2004 have been also</font>

170
00:09:11,110 --> 00:09:16,930
increasing now we have about<font color="#E5E5E5"> 70 I've</font>

171
00:09:13,540 --> 00:09:19,599
dp's on the other side we also have the

172
00:09:16,930 --> 00:09:21,670
number of accounts as more<font color="#CCCCCC"> than 400,000</font>

173
00:09:19,600 --> 00:09:26,890
<font color="#E5E5E5">and the number of the SPS on the right</font>

174
00:09:21,670 --> 00:09:29,020
side is<font color="#E5E5E5"> roughly a thousand SPS and on</font>

175
00:09:26,890 --> 00:09:32,949
average we have about 52 Semel

176
00:09:29,020 --> 00:09:36,880
authentication requests per minute so a

177
00:09:32,950 --> 00:09:39,760
lot of people<font color="#E5E5E5"> rely on this technology so</font>

178
00:09:36,880 --> 00:09:43,029
let's go on<font color="#CCCCCC"> to the foundations of samo</font>

179
00:09:39,760 --> 00:09:44,830
samo as a framework is like an onion you

180
00:09:43,029 --> 00:09:48,040
have a lot of layers that innermost

181
00:09:44,830 --> 00:09:52,900
layer is<font color="#E5E5E5"> the security assertion it's a</font>

182
00:09:48,040 --> 00:09:56,949
piece of XML that states that make

183
00:09:52,900 --> 00:09:59,260
statements about something like an IDP

184
00:09:56,950 --> 00:10:03,640
would typically say this user just

185
00:09:59,260 --> 00:10:05,560
logged in and at<font color="#E5E5E5"> that time and I can</font>

186
00:10:03,640 --> 00:10:08,290
prove it to you because<font color="#E5E5E5"> I'm signing it</font>

187
00:10:05,560 --> 00:10:13,150
right now so if you trust me<font color="#E5E5E5"> if you</font>

188
00:10:08,290 --> 00:10:15,040
verify my signature you could base you

189
00:10:13,150 --> 00:10:18,100
could<font color="#E5E5E5"> make some assumptions based on</font>

190
00:10:15,040 --> 00:10:20,800
this so then this<font color="#CCCCCC"> this assertion needs</font>

191
00:10:18,100 --> 00:10:24,279
to get transported from the IDP to the

192
00:10:20,800 --> 00:10:27,040
to the SP and so you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> a protocol</font>

193
00:10:24,279 --> 00:10:28,870
that wraps around the the security

194
00:10:27,040 --> 00:10:31,360
assertion it's also an<font color="#E5E5E5"> XML so at the end</font>

195
00:10:28,870 --> 00:10:33,670
if you<font color="#CCCCCC"> have an authentication request it</font>

196
00:10:31,360 --> 00:10:35,500
will be an XML document and in the

197
00:10:33,670 --> 00:10:38,410
subtree of this XML document you will

198
00:10:35,500 --> 00:10:40,080
have the sam'l assertion so the protocol

199
00:10:38,410 --> 00:10:42,250
is rather simple you<font color="#CCCCCC"> have like</font>

200
00:10:40,080 --> 00:10:43,839
authentication<font color="#E5E5E5"> request and then on the</font>

201
00:10:42,250 --> 00:10:46,240
other side you have authentication

202
00:10:43,839 --> 00:10:49,000
response with the content with the

203
00:10:46,240 --> 00:10:52,270
assertion there are not too much too

204
00:10:49,000 --> 00:10:56,350
many protocol messages in this protocol

205
00:10:52,270 --> 00:10:58,360
but still it's it's only XML we need to

206
00:10:56,350 --> 00:11:02,829
have a transport layer and<font color="#E5E5E5"> this is the</font>

207
00:10:58,360 --> 00:11:05,680
binding the binding is a way<font color="#CCCCCC"> to carry</font>

208
00:11:02,829 --> 00:11:11,680
this this XML document

209
00:11:05,680 --> 00:11:13,060
via for instance<font color="#E5E5E5"> via http and HTTP you</font>

210
00:11:11,680 --> 00:11:16,170
have different<font color="#CCCCCC"> methods</font><font color="#E5E5E5"> you can do it as</font>

211
00:11:13,060 --> 00:11:18,609
a get request as a post request and

212
00:11:16,170 --> 00:11:20,319
depending on how much data you<font color="#E5E5E5"> want to</font>

213
00:11:18,610 --> 00:11:22,300
transmit or which kind<font color="#E5E5E5"> of security you</font>

214
00:11:20,320 --> 00:11:24,730
have you'll choose the one or<font color="#E5E5E5"> the other</font>

215
00:11:22,300 --> 00:11:28,420
well we'll get to this later and then

216
00:11:24,730 --> 00:11:30,670
the outermost layer is the<font color="#E5E5E5"> profile that</font>

217
00:11:28,420 --> 00:11:32,529
just is<font color="#CCCCCC"> okay what's the what are</font><font color="#E5E5E5"> we</font>

218
00:11:30,670 --> 00:11:35,550
<font color="#CCCCCC">using right now which kind</font><font color="#E5E5E5"> of binding</font>

219
00:11:32,529 --> 00:11:38,350
our using with for which protocol

220
00:11:35,550 --> 00:11:41,529
variant and which kind<font color="#E5E5E5"> of assertions we</font>

221
00:11:38,350 --> 00:11:44,020
have so in this talk we're only going to

222
00:11:41,529 --> 00:11:47,050
talk about<font color="#E5E5E5"> the web web browser single</font>

223
00:11:44,020 --> 00:11:49,600
sign-on profile<font color="#CCCCCC"> okay so let's have a</font>

224
00:11:47,050 --> 00:11:53,290
look<font color="#CCCCCC"> at it okay that's a picture taken</font>

225
00:11:49,600 --> 00:11:55,450
from the specification from<font color="#CCCCCC"> Oasis on the</font>

226
00:11:53,290 --> 00:11:57,699
bottom<font color="#CCCCCC"> you have the browser on the top</font>

227
00:11:55,450 --> 00:11:59,140
left you have<font color="#CCCCCC"> the service provider and</font>

228
00:11:57,700 --> 00:12:02,140
on the<font color="#CCCCCC"> right-hand side you have the</font>

229
00:11:59,140 --> 00:12:04,180
identity provider so the first step the

230
00:12:02,140 --> 00:12:06,160
client accesses the service provided the

231
00:12:04,180 --> 00:12:07,810
service provider doesn't know the user

232
00:12:06,160 --> 00:12:09,520
yet so he says I'm<font color="#CCCCCC"> not able</font><font color="#E5E5E5"> to</font>

233
00:12:07,810 --> 00:12:14,890
authenticate you i'm going to redirect

234
00:12:09,520 --> 00:12:17,680
you via HTTP redirect with<font color="#CCCCCC"> an</font>

235
00:12:14,890 --> 00:12:19,630
authentication request to the<font color="#E5E5E5"> identity</font>

236
00:12:17,680 --> 00:12:22,989
provider now in steps four and five

237
00:12:19,630 --> 00:12:26,290
three and four you'll typically have the

238
00:12:22,990 --> 00:12:29,560
normal login form a form-based well

239
00:12:26,290 --> 00:12:34,329
html-based<font color="#E5E5E5"> form on which you can log in</font>

240
00:12:29,560 --> 00:12:37,479
the specification doesn't tell you if

241
00:12:34,330 --> 00:12:40,029
you want how strong your going to

242
00:12:37,480 --> 00:12:43,839
authenticate people so you can have just

243
00:12:40,029 --> 00:12:47,260
one factor with a password<font color="#E5E5E5"> or seek more</font>

244
00:12:43,839 --> 00:12:51,450
secure authentication with a second

245
00:12:47,260 --> 00:12:55,569
<font color="#E5E5E5">factor but that's up to</font><font color="#CCCCCC"> the IDP and then</font>

246
00:12:51,450 --> 00:12:57,610
if login is successful the IDP is going

247
00:12:55,570 --> 00:12:59,370
to generate a security assertion it's

248
00:12:57,610 --> 00:13:02,829
going to wrap it in a sam'l response

249
00:12:59,370 --> 00:13:05,860
message and it's going to relay it over

250
00:13:02,829 --> 00:13:10,569
the browser in this one case<font color="#CCCCCC"> to the ESPY</font>

251
00:13:05,860 --> 00:13:13,209
this<font color="#E5E5E5"> means i i i did a red bubble this</font>

252
00:13:10,570 --> 00:13:16,060
time because at this point the security

253
00:13:13,209 --> 00:13:19,270
assertion is exposed it could be

254
00:13:16,060 --> 00:13:22,089
encrypted typically it is not encrypted

255
00:13:19,270 --> 00:13:23,740
has to<font color="#CCCCCC"> be signed because</font><font color="#E5E5E5"> otherwise you</font>

256
00:13:22,090 --> 00:13:28,780
could write anything you could be anyone

257
00:13:23,740 --> 00:13:31,960
you would like to be so there's another

258
00:13:28,780 --> 00:13:33,610
variant that's a bit the world that's

259
00:13:31,960 --> 00:13:37,240
more secure because your not exposing

260
00:13:33,610 --> 00:13:39,400
the the assertion so the first five

261
00:13:37,240 --> 00:13:41,830
steps are basically the same you login

262
00:13:39,400 --> 00:13:44,199
login and successful now the IDP

263
00:13:41,830 --> 00:13:46,750
generates the sam'l assertion but we'll

264
00:13:44,200 --> 00:13:49,090
keep it and instead<font color="#E5E5E5"> of this will</font>

265
00:13:46,750 --> 00:13:52,420
generate the nonce or and we call it<font color="#E5E5E5"> an</font>

266
00:13:49,090 --> 00:13:54,760
artifact it's just a reference to the

267
00:13:52,420 --> 00:13:57,610
sam'l assertion that the IDP is keeping

268
00:13:54,760 --> 00:14:01,180
on his side now you're only<font color="#E5E5E5"> only going</font>

269
00:13:57,610 --> 00:14:05,040
to transfer the the artifact and you're

270
00:14:01,180 --> 00:14:09,219
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to the SP will then use it to</font>

271
00:14:05,040 --> 00:14:11,170
resolve it via a new interface it's a

272
00:14:09,220 --> 00:14:13,960
soap interface which is called the

273
00:14:11,170 --> 00:14:16,390
<font color="#E5E5E5">artifact resolution service so it's</font>

274
00:14:13,960 --> 00:14:19,300
going to<font color="#E5E5E5"> take</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> artifact and get back</font>

275
00:14:16,390 --> 00:14:23,430
and the the disassembled assertion so

276
00:14:19,300 --> 00:14:27,430
the benefit here is you don't expose the

277
00:14:23,430 --> 00:14:30,010
dis assertion so you might<font color="#CCCCCC"> think well</font>

278
00:14:27,430 --> 00:14:32,770
it's equivalent right because<font color="#E5E5E5"> I mean the</font>

279
00:14:30,010 --> 00:14:37,870
in the other case in this case the

280
00:14:32,770 --> 00:14:40,449
assertion is signed you can't you<font color="#CCCCCC"> can't</font>

281
00:14:37,870 --> 00:14:45,480
tamper it because it's on right but

282
00:14:40,450 --> 00:14:48,540
we'll see that maybe<font color="#E5E5E5"> it's possible so</font>

283
00:14:45,480 --> 00:14:51,910
the contents<font color="#E5E5E5"> of a sam'l assertion</font>

284
00:14:48,540 --> 00:14:54,969
roughly summed up are you first have a

285
00:14:51,910 --> 00:14:57,400
<font color="#E5E5E5">little header with a version and unique</font>

286
00:14:54,970 --> 00:14:59,020
assertion ID and the issue instant a

287
00:14:57,400 --> 00:15:01,569
time stamp that says when has this

288
00:14:59,020 --> 00:15:04,840
assertion being issued then you have the

289
00:15:01,570 --> 00:15:07,210
issuer which IDP issued this assertion

290
00:15:04,840 --> 00:15:09,460
<font color="#E5E5E5">and then you have a subject who are we</font>

291
00:15:07,210 --> 00:15:12,100
talking about that's the user typically

292
00:15:09,460 --> 00:15:14,140
and he has a name ID the name ID could

293
00:15:12,100 --> 00:15:18,790
be anything from<font color="#CCCCCC"> a number to an email</font>

294
00:15:14,140 --> 00:15:24,069
<font color="#CCCCCC">address that's the decision</font><font color="#E5E5E5"> to be taken</font>

295
00:15:18,790 --> 00:15:26,770
by the the implementation and then you

296
00:15:24,070 --> 00:15:29,470
also have conditions these are kind of

297
00:15:26,770 --> 00:15:31,960
like guarantees<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the IDP sets he</font>

298
00:15:29,470 --> 00:15:32,390
says this assertion is only valid if

299
00:15:31,960 --> 00:15:35,570
<font color="#CCCCCC">you're</font>

300
00:15:32,390 --> 00:15:41,020
out using it before this date and<font color="#CCCCCC"> not</font>

301
00:15:35,570 --> 00:15:43,730
after another date and also who is

302
00:15:41,020 --> 00:15:47,180
intended to receive this assertion so if

303
00:15:43,730 --> 00:15:51,200
you it's up<font color="#E5E5E5"> to the SP to check all these</font>

304
00:15:47,180 --> 00:15:53,060
values because the SP is actually going

305
00:15:51,200 --> 00:15:55,670
to base assumptions on these on these

306
00:15:53,060 --> 00:15:58,270
values then you have the authentication

307
00:15:55,670 --> 00:16:00,560
statement that contains the again the

308
00:15:58,270 --> 00:16:03,380
authentication instant<font color="#E5E5E5"> that could be</font><font color="#CCCCCC"> a</font>

309
00:16:00,560 --> 00:16:06,469
different time than the issue instant

310
00:16:03,380 --> 00:16:10,670
because the authentication could have

311
00:16:06,470 --> 00:16:13,010
been this morning but then the user

312
00:16:10,670 --> 00:16:15,410
comes back on the<font color="#CCCCCC"> ID period still a</font>

313
00:16:13,010 --> 00:16:19,220
valid session and then the IDP issues a

314
00:16:15,410 --> 00:16:21,459
new assertion but the issue instant now

315
00:16:19,220 --> 00:16:23,450
is like this afternoon although the

316
00:16:21,460 --> 00:16:25,460
authentication instant was this morning

317
00:16:23,450 --> 00:16:28,550
so it could be<font color="#E5E5E5"> different and then you</font>

318
00:16:25,460 --> 00:16:30,710
have a set of freely definable

319
00:16:28,550 --> 00:16:33,199
attributes that<font color="#E5E5E5"> you could use</font><font color="#CCCCCC"> to put in</font>

320
00:16:30,710 --> 00:16:35,960
anything you<font color="#E5E5E5"> want that can be a source</font>

321
00:16:33,200 --> 00:16:38,620
of attack and then the most important

322
00:16:35,960 --> 00:16:41,420
part obviously<font color="#CCCCCC"> is</font><font color="#E5E5E5"> a digital signature so</font>

323
00:16:38,620 --> 00:16:45,740
the digital signature you're going to

324
00:16:41,420 --> 00:16:49,910
have optionally you can have the x.509

325
00:16:45,740 --> 00:16:51,680
certificate to say who signed it then

326
00:16:49,910 --> 00:16:54,350
you have a signature algorithm

327
00:16:51,680 --> 00:16:56,120
transforms<font color="#CCCCCC"> that will take we'll talk</font>

328
00:16:54,350 --> 00:16:58,520
<font color="#E5E5E5">about just in a minute</font><font color="#CCCCCC"> in the next slide</font>

329
00:16:56,120 --> 00:17:00,890
then you have to digest so that the hash

330
00:16:58,520 --> 00:17:04,940
of the whole<font color="#E5E5E5"> xml and the signature value</font>

331
00:17:00,890 --> 00:17:08,329
so why would we put the x.509

332
00:17:04,940 --> 00:17:12,760
certificate within why would we embed it

333
00:17:08,329 --> 00:17:16,609
in a setup like the one we saw at switch

334
00:17:12,760 --> 00:17:19,369
you have lots of IDPs and I mean every

335
00:17:16,609 --> 00:17:20,750
IDP could also have multiple signing

336
00:17:19,369 --> 00:17:23,300
certificates because maybe either

337
00:17:20,750 --> 00:17:26,690
migrating a certificate or maybe they

338
00:17:23,300 --> 00:17:29,149
have I don't<font color="#CCCCCC"> know just</font><font color="#E5E5E5"> different</font>

339
00:17:26,690 --> 00:17:31,160
certificates so the certificate you have

340
00:17:29,150 --> 00:17:34,490
here is<font color="#E5E5E5"> just to be used as a</font><font color="#CCCCCC"> reference</font>

341
00:17:31,160 --> 00:17:37,790
to<font color="#E5E5E5"> say this is a certificate that was</font>

342
00:17:34,490 --> 00:17:42,470
used but please don't use it to sign to

343
00:17:37,790 --> 00:17:45,800
verify<font color="#E5E5E5"> the signature use your own</font><font color="#CCCCCC"> okay</font>

344
00:17:42,470 --> 00:17:48,410
so let's get to<font color="#E5E5E5"> the signature part so</font>

345
00:17:45,800 --> 00:17:51,200
you have the assertion in<font color="#E5E5E5"> XML and as you</font>

346
00:17:48,410 --> 00:17:56,210
know XML is not equal to xml it could

347
00:17:51,200 --> 00:17:58,730
have a dynamic form I mean if I want if

348
00:17:56,210 --> 00:18:01,010
I wanted I could write an<font color="#E5E5E5"> XML all on one</font>

349
00:17:58,730 --> 00:18:03,740
line typically I would like to format it

350
00:18:01,010 --> 00:18:07,220
so it's easily readable but if we<font color="#CCCCCC"> are</font>

351
00:18:03,740 --> 00:18:11,260
going to<font color="#E5E5E5"> calculate a computer hash on it</font>

352
00:18:07,220 --> 00:18:13,790
we have to bring it into a form that's

353
00:18:11,260 --> 00:18:16,670
that you could<font color="#E5E5E5"> compare on bite level</font>

354
00:18:13,790 --> 00:18:19,670
<font color="#E5E5E5">that means where we're going to transfer</font>

355
00:18:16,670 --> 00:18:23,420
that<font color="#E5E5E5"> XML in a canonical form that's also</font>

356
00:18:19,670 --> 00:18:25,250
why we have this<font color="#E5E5E5"> c14 and that stands for</font>

357
00:18:23,420 --> 00:18:28,070
canonicalization but since it's such a

358
00:18:25,250 --> 00:18:31,220
long word and compress it and then

359
00:18:28,070 --> 00:18:33,439
you're going to compute<font color="#CCCCCC"> the sha-1 hash</font>

360
00:18:31,220 --> 00:18:37,250
on it to get<font color="#CCCCCC"> the digest so the digest is</font>

361
00:18:33,440 --> 00:18:39,800
like a short form that should map to the

362
00:18:37,250 --> 00:18:44,030
<font color="#E5E5E5">XML at the end you're going to compute</font>

363
00:18:39,800 --> 00:18:45,800
<font color="#E5E5E5">an RSA signature on this digest and and</font>

364
00:18:44,030 --> 00:18:49,850
then you can<font color="#E5E5E5"> include the signature in</font>

365
00:18:45,800 --> 00:18:53,230
the<font color="#E5E5E5"> XML document and the other side the</font>

366
00:18:49,850 --> 00:18:56,389
SP takes the his trusted certificate and

367
00:18:53,230 --> 00:19:00,020
validates the signature with RSA and he

368
00:18:56,390 --> 00:19:02,930
could say go or no go<font color="#CCCCCC"> okay so that's all</font>

369
00:19:00,020 --> 00:19:07,190
for<font color="#CCCCCC"> my part now</font><font color="#E5E5E5"> I'm going to pass</font><font color="#CCCCCC"> over</font>

370
00:19:02,930 --> 00:19:11,270
to Roland<font color="#E5E5E5"> thanks a lot now let's come to</font>

371
00:19:07,190 --> 00:19:16,610
the interesting part some latex I'm glad

372
00:19:11,270 --> 00:19:19,760
you are<font color="#E5E5E5"> all here still here what I will</font>

373
00:19:16,610 --> 00:19:24,110
give you is a list of possible<font color="#E5E5E5"> samolet</font>

374
00:19:19,760 --> 00:19:27,110
text after that we will give you show a

375
00:19:24,110 --> 00:19:30,040
cool demo with a tool we have developed

376
00:19:27,110 --> 00:19:33,379
and finally some mitigations

377
00:19:30,040 --> 00:19:38,210
remediations what you can do against

378
00:19:33,380 --> 00:19:42,650
this<font color="#CCCCCC"> similar text now</font><font color="#E5E5E5"> sam'l as we heard</font>

379
00:19:38,210 --> 00:19:46,580
is basically built of sam'l itself with

380
00:19:42,650 --> 00:19:50,170
the protocols the bindings and also XML

381
00:19:46,580 --> 00:19:54,560
and especially XML signatures and

382
00:19:50,170 --> 00:19:58,580
finally sums certificate stuff the

383
00:19:54,560 --> 00:19:59,379
question the pops in mind is what could

384
00:19:58,580 --> 00:20:05,050
possibly go

385
00:19:59,380 --> 00:20:10,630
wrong now this year in<font color="#E5E5E5"> April there was a</font>

386
00:20:05,050 --> 00:20:12,669
vulnerability at office 365 where there

387
00:20:10,630 --> 00:20:16,990
was a problem<font color="#E5E5E5"> with summer and the</font>

388
00:20:12,670 --> 00:20:20,620
<font color="#E5E5E5">problem was more a logical thing so the</font>

389
00:20:16,990 --> 00:20:23,560
setup was like this that office<font color="#E5E5E5"> 365 is a</font>

390
00:20:20,620 --> 00:20:26,560
<font color="#E5E5E5">service provider so it provides the</font>

391
00:20:23,560 --> 00:20:30,850
service like emails whatever you want

392
00:20:26,560 --> 00:20:36,429
and you with your company say let's say

393
00:20:30,850 --> 00:20:40,209
company a can have an IDP with all your

394
00:20:36,430 --> 00:20:43,540
users and so on and the company<font color="#E5E5E5"> b can</font>

395
00:20:40,210 --> 00:20:46,810
have its own IDP with all the users and

396
00:20:43,540 --> 00:20:51,670
the problem was you could create on the

397
00:20:46,810 --> 00:20:54,429
<font color="#E5E5E5">IDP of company a a user</font><font color="#CCCCCC"> of with the</font>

398
00:20:51,670 --> 00:20:58,540
email address of Company B and so you

399
00:20:54,430 --> 00:21:02,230
could<font color="#CCCCCC"> login with every company account</font>

400
00:20:58,540 --> 00:21:08,080
of another company<font color="#E5E5E5"> that is using office</font>

401
00:21:02,230 --> 00:21:13,840
365 so with great power<font color="#E5E5E5"> also comes great</font>

402
00:21:08,080 --> 00:21:18,669
pwnage now let's come to some some<font color="#E5E5E5"> latex</font>

403
00:21:13,840 --> 00:21:23,139
which are tortured it against<font color="#E5E5E5"> Tamil at</font>

404
00:21:18,670 --> 00:21:27,340
first<font color="#CCCCCC"> you could if you have guessable</font>

405
00:21:23,140 --> 00:21:29,890
IDs you could log out other users which

406
00:21:27,340 --> 00:21:35,649
does the really does affect the

407
00:21:29,890 --> 00:21:41,770
availability a little bit negative then

408
00:21:35,650 --> 00:21:44,530
if you<font color="#E5E5E5"> find such a sam'l assertion like</font>

409
00:21:41,770 --> 00:21:46,960
with google hacking or on stack overflow

410
00:21:44,530 --> 00:21:50,379
it is possible there are some sam'l

411
00:21:46,960 --> 00:21:54,430
assertion and it is well it and<font color="#E5E5E5"> it's</font>

412
00:21:50,380 --> 00:21:57,910
posted on its and it's posted as a whole

413
00:21:54,430 --> 00:22:00,550
sam'l assertion you could<font color="#E5E5E5"> try to replay</font>

414
00:21:57,910 --> 00:22:04,900
it and perhaps if the sam'l service

415
00:22:00,550 --> 00:22:08,800
provider doesn't provide any mitigations

416
00:22:04,900 --> 00:22:13,050
remediations against<font color="#E5E5E5"> message replay you</font>

417
00:22:08,800 --> 00:22:13,050
can<font color="#CCCCCC"> log on log in with the samel message</font>

418
00:22:13,450 --> 00:22:20,600
let's come to the<font color="#E5E5E5"> xml staff the xml</font>

419
00:22:17,510 --> 00:22:24,408
signatures and the simplest thing you

420
00:22:20,600 --> 00:22:27,918
could imagine with the<font color="#E5E5E5"> signature is you</font>

421
00:22:24,409 --> 00:22:29,899
<font color="#E5E5E5">simply delete the signature you remove</font>

422
00:22:27,919 --> 00:22:33,440
the signature and you hand in the

423
00:22:29,899 --> 00:22:36,260
assertion without the signature now<font color="#CCCCCC"> you</font>

424
00:22:33,440 --> 00:22:39,679
would say yeah that's that's a very

425
00:22:36,260 --> 00:22:42,559
cheap trick it wouldn't function but I

426
00:22:39,679 --> 00:22:45,679
spoke to a colleague of mine it was

427
00:22:42,559 --> 00:22:48,590
interesting<font color="#E5E5E5"> he was testing a thermal</font>

428
00:22:45,679 --> 00:22:51,110
environment and the environment<font color="#E5E5E5"> was</font>

429
00:22:48,590 --> 00:22:53,120
working well all signatures correctly

430
00:22:51,110 --> 00:22:55,490
checked the certificates correctly

431
00:22:53,120 --> 00:22:59,590
checked and then he finally thought why

432
00:22:55,490 --> 00:23:03,679
not deleting this signature and

433
00:22:59,590 --> 00:23:06,439
surprisingly he was locked in so he he

434
00:23:03,679 --> 00:23:08,840
could create assertions without a

435
00:23:06,440 --> 00:23:13,370
signature and login as an arbitrary user

436
00:23:08,840 --> 00:23:17,980
as administrator whatever so it's<font color="#CCCCCC"> not</font>

437
00:23:13,370 --> 00:23:21,979
just<font color="#E5E5E5"> my imagination now the next</font><font color="#CCCCCC"> one is</font>

438
00:23:17,980 --> 00:23:25,340
<font color="#E5E5E5">XML signature of wrapping you possibly</font>

439
00:23:21,980 --> 00:23:27,139
heard of it there is a cool paper called

440
00:23:25,340 --> 00:23:30,580
on breaking some will be whoever you

441
00:23:27,139 --> 00:23:33,168
want to be which describes this attack

442
00:23:30,580 --> 00:23:36,049
very good and they also did an

443
00:23:33,169 --> 00:23:39,980
evaluation of some sam'l implementations

444
00:23:36,049 --> 00:23:44,360
and it works<font color="#CCCCCC"> like you have in real life</font>

445
00:23:39,980 --> 00:23:47,960
a contract let's say of a Ferrari vendor

446
00:23:44,360 --> 00:23:50,510
and it's signed by the Ferrari vendor it

447
00:23:47,960 --> 00:23:54,139
will sell you a Ferrari and then you

448
00:23:50,510 --> 00:23:56,360
will go and add a second page to their

449
00:23:54,139 --> 00:24:00,469
contract in real life it wouldn't work

450
00:23:56,360 --> 00:24:03,860
but if you would add<font color="#CCCCCC"> this second page to</font>

451
00:24:00,470 --> 00:24:05,840
the contract now the<font color="#E5E5E5"> Ferrari vendor will</font>

452
00:24:03,860 --> 00:24:09,110
seed are the signature on the first page

453
00:24:05,840 --> 00:24:12,559
<font color="#CCCCCC">is valid and skip the</font><font color="#E5E5E5"> first page</font><font color="#CCCCCC"> and go</font>

454
00:24:09,110 --> 00:24:15,080
to the<font color="#E5E5E5"> next page and see it's to miss</font>

455
00:24:12,559 --> 00:24:18,710
the beach of burger and it's only<font color="#E5E5E5"> it's</font>

456
00:24:15,080 --> 00:24:21,610
<font color="#E5E5E5">sold for two dollars and so you come to</font>

457
00:24:18,710 --> 00:24:25,520
a Ferrari with<font color="#E5E5E5"> XML signature wrapping</font>

458
00:24:21,610 --> 00:24:29,719
now how does it work on XML basis

459
00:24:25,520 --> 00:24:32,810
in<font color="#CCCCCC"> detail you have a</font><font color="#E5E5E5"> valid assertion</font>

460
00:24:29,720 --> 00:24:35,650
here in green<font color="#E5E5E5"> and the according</font>

461
00:24:32,810 --> 00:24:40,129
signature in blue which is which is

462
00:24:35,650 --> 00:24:42,080
referencing the valid assertion now what

463
00:24:40,130 --> 00:24:44,690
an attacker would do with eczema

464
00:24:42,080 --> 00:24:49,179
signature wrapping is he would simply

465
00:24:44,690 --> 00:24:53,480
add a second assertion in this<font color="#CCCCCC"> XML tree</font>

466
00:24:49,180 --> 00:24:57,020
did this would like this would look<font color="#CCCCCC"> like</font>

467
00:24:53,480 --> 00:25:00,530
this and what happens on the service

468
00:24:57,020 --> 00:25:04,280
provider is the service provider would

469
00:25:00,530 --> 00:25:07,310
validate at first<font color="#E5E5E5"> the signature perhaps</font>

470
00:25:04,280 --> 00:25:09,649
and would see yes the signature is valid

471
00:25:07,310 --> 00:25:12,770
there's a valid assertion we didn't

472
00:25:09,650 --> 00:25:17,060
mangle with the assertion in any way and

473
00:25:12,770 --> 00:25:19,400
hand it over to the XML parser the XML

474
00:25:17,060 --> 00:25:23,510
parser is in this case perhaps

475
00:25:19,400 --> 00:25:28,850
configured to strip out or take a read

476
00:25:23,510 --> 00:25:32,270
out the first assertion<font color="#CCCCCC"> and you see it</font>

477
00:25:28,850 --> 00:25:34,100
would read out the subject<font color="#E5E5E5"> and assertion</font>

478
00:25:32,270 --> 00:25:39,520
that the attacker has inserted in the

479
00:25:34,100 --> 00:25:44,870
<font color="#E5E5E5">XML tree that happens a lot in a lot</font><font color="#CCCCCC"> of</font>

480
00:25:39,520 --> 00:25:48,860
implementations now let's<font color="#CCCCCC"> come to the</font>

481
00:25:44,870 --> 00:25:51,469
certificate stuff and as a precondition

482
00:25:48,860 --> 00:25:54,469
there is given that the certificate is

483
00:25:51,470 --> 00:25:58,490
embedded as a whole certificate in<font color="#CCCCCC"> the</font>

484
00:25:54,470 --> 00:26:02,470
sam'l assertion now at first what you

485
00:25:58,490 --> 00:26:06,050
<font color="#E5E5E5">can do is something we say is clone a</font>

486
00:26:02,470 --> 00:26:08,420
certificate<font color="#CCCCCC"> that means we copy all</font>

487
00:26:06,050 --> 00:26:11,480
properties of a certificate to a new

488
00:26:08,420 --> 00:26:14,720
certificate generate<font color="#CCCCCC"> a new public and</font>

489
00:26:11,480 --> 00:26:17,270
private key pair and finally self signed

490
00:26:14,720 --> 00:26:19,760
the certificate what you get is<font color="#CCCCCC"> a</font>

491
00:26:17,270 --> 00:26:23,240
<font color="#E5E5E5">certificate</font><font color="#CCCCCC"> that looks like the</font><font color="#E5E5E5"> other</font>

492
00:26:19,760 --> 00:26:27,770
one but isn't<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> on the first look</font>

493
00:26:23,240 --> 00:26:33,010
it's<font color="#E5E5E5"> the same damn what you</font><font color="#CCCCCC"> also can try</font>

494
00:26:27,770 --> 00:26:37,910
is take official a certificate of a

495
00:26:33,010 --> 00:26:38,750
official CA like verisign or let's say

496
00:26:37,910 --> 00:26:43,660
<font color="#CCCCCC">Turk</font>

497
00:26:38,750 --> 00:26:47,090
<font color="#E5E5E5">just and sign the assertion with this</font>

498
00:26:43,660 --> 00:26:49,490
official certificate so you can see if

499
00:26:47,090 --> 00:26:51,770
the service provider is validating the

500
00:26:49,490 --> 00:26:56,840
certificate against perhaps<font color="#E5E5E5"> that trusts</font>

501
00:26:51,770 --> 00:26:59,360
or of the operating<font color="#E5E5E5"> system and at last</font>

502
00:26:56,840 --> 00:27:02,330
you could use a revoked certificate if

503
00:26:59,360 --> 00:27:07,070
you have access<font color="#CCCCCC"> to it sometimes it's</font>

504
00:27:02,330 --> 00:27:12,520
<font color="#CCCCCC">easy to access them or they are already</font>

505
00:27:07,070 --> 00:27:16,909
leaked that's because they revoked um

506
00:27:12,520 --> 00:27:23,540
now let's come to the demo at first I

507
00:27:16,910 --> 00:27:27,640
will give you some facts around the demo

508
00:27:23,540 --> 00:27:32,629
it is based on exploit we found in jun

509
00:27:27,640 --> 00:27:36,590
2015 the problem was that the<font color="#E5E5E5"> service</font>

510
00:27:32,630 --> 00:27:41,660
provider when you were very using sam'l

511
00:27:36,590 --> 00:27:43,879
post binding as the that means the the

512
00:27:41,660 --> 00:27:48,560
content was flowing through the client

513
00:27:43,880 --> 00:27:54,050
you could mangle it then an embedded

514
00:27:48,560 --> 00:27:56,570
certificate you were<font color="#CCCCCC"> using was not</font>

515
00:27:54,050 --> 00:28:00,220
matched with all properties or all

516
00:27:56,570 --> 00:28:03,649
fields against the locally stored

517
00:28:00,220 --> 00:28:05,840
certificate on the service provider so

518
00:28:03,650 --> 00:28:10,220
what we did is simply clone a

519
00:28:05,840 --> 00:28:12,590
certificate and so trick the service

520
00:28:10,220 --> 00:28:16,120
provider into believing<font color="#CCCCCC"> that the</font>

521
00:28:12,590 --> 00:28:19,669
certificate is the real one and finally

522
00:28:16,120 --> 00:28:21,800
the service provider also validated the

523
00:28:19,670 --> 00:28:26,570
signature with the embedded certificate

524
00:28:21,800 --> 00:28:31,310
we provided so how does it work in

525
00:28:26,570 --> 00:28:34,760
detail at first you have to intercept

526
00:28:31,310 --> 00:28:38,840
the message stop it and decode it that

527
00:28:34,760 --> 00:28:42,650
was done with<font color="#E5E5E5"> the burp suite then we</font>

528
00:28:38,840 --> 00:28:44,620
extracted the certificate out of the

529
00:28:42,650 --> 00:28:47,650
samel message and stored<font color="#E5E5E5"> it so we can</font>

530
00:28:44,620 --> 00:28:47,649
alter it

531
00:28:48,590 --> 00:28:54,850
we had to copy it create as such a

532
00:28:51,039 --> 00:28:58,490
<font color="#E5E5E5">cloned a fake certificate of it and</font>

533
00:28:54,850 --> 00:29:03,230
finally alter the assertion change the

534
00:28:58,490 --> 00:29:08,090
username to administrator then sign the

535
00:29:03,230 --> 00:29:13,669
whole assertion again and then encode

536
00:29:08,090 --> 00:29:16,158
the assertion and forward it now you see

537
00:29:13,669 --> 00:29:20,390
the problem<font color="#CCCCCC"> is it's a complicated</font>

538
00:29:16,159 --> 00:29:24,080
workflow and it's time consuming and

539
00:29:20,390 --> 00:29:27,890
<font color="#CCCCCC">it's errors are really likely to a cure</font>

540
00:29:24,080 --> 00:29:31,629
and all also problem is if you pen test

541
00:29:27,890 --> 00:29:35,149
some environments sam'l assertions as

542
00:29:31,630 --> 00:29:40,309
Antoine said our only valid for a

543
00:29:35,149 --> 00:29:42,860
specific time frame so you have to do

544
00:29:40,309 --> 00:29:47,149
this<font color="#E5E5E5"> mangling this altering of this</font>

545
00:29:42,860 --> 00:29:52,399
assertion in a time<font color="#CCCCCC"> frame and time with</font>

546
00:29:47,149 --> 00:29:54,709
time pressure come man come errors now

547
00:29:52,399 --> 00:30:00,529
the solution<font color="#E5E5E5"> is what we did is we</font>

548
00:29:54,710 --> 00:30:02,600
created extension for burp burp suite is

549
00:30:00,529 --> 00:30:09,110
an interception proxy and there's a fun

550
00:30:02,600 --> 00:30:12,879
fact burp is not beef it's available<font color="#E5E5E5"> on</font>

551
00:30:09,110 --> 00:30:17,199
github it's really<font color="#E5E5E5"> available you can</font>

552
00:30:12,880 --> 00:30:21,470
submit your<font color="#CCCCCC"> Co patches your features</font>

553
00:30:17,200 --> 00:30:24,289
feel<font color="#E5E5E5"> free so what's possible with some</font>

554
00:30:21,470 --> 00:30:27,200
raider is you can sign assertions you

555
00:30:24,289 --> 00:30:29,809
can remove signatures you can extract<font color="#E5E5E5"> a</font>

556
00:30:27,200 --> 00:30:34,549
certificate with one click also you have

557
00:30:29,809 --> 00:30:37,250
<font color="#CCCCCC">the ability to apply some</font><font color="#E5E5E5"> xml signature</font>

558
00:30:34,549 --> 00:30:40,100
wrapping attacks on the sam'l assertion

559
00:30:37,250 --> 00:30:42,980
<font color="#CCCCCC">and there's also a sam'l Raider</font>

560
00:30:40,100 --> 00:30:47,439
certificate management interface where

561
00:30:42,980 --> 00:30:50,419
you can simply clone a certificate and

562
00:30:47,440 --> 00:30:55,730
also manage the certificates to sign

563
00:30:50,419 --> 00:30:58,880
assertions now let's come to the demo

564
00:30:55,730 --> 00:31:01,240
the cool demo aunt one will be the evil

565
00:30:58,880 --> 00:31:01,240
hacker

566
00:31:02,440 --> 00:31:10,580
now imagine we have<font color="#CCCCCC"> created a</font><font color="#E5E5E5"> platform</font>

567
00:31:07,600 --> 00:31:12,949
imagine yerby and you're traveling all

568
00:31:10,580 --> 00:31:15,020
day long you're<font color="#E5E5E5"> working all day long and</font>

569
00:31:12,950 --> 00:31:18,530
you never<font color="#CCCCCC"> get time to</font><font color="#E5E5E5"> get to know</font>

570
00:31:15,020 --> 00:31:23,210
another be and that's our solution it's

571
00:31:18,530 --> 00:31:25,280
called air B&B and you can meet other

572
00:31:23,210 --> 00:31:29,120
bees and find other bees while working

573
00:31:25,280 --> 00:31:33,260
and traveling interestingly you have a

574
00:31:29,120 --> 00:31:35,510
summer logging up there which takes you

575
00:31:33,260 --> 00:31:41,120
to the Swiss Federal Department for<font color="#E5E5E5"> log</font>

576
00:31:35,510 --> 00:31:47,140
<font color="#E5E5E5">in their own</font><font color="#CCCCCC"> one will log in as a normal</font>

577
00:31:41,120 --> 00:31:47,139
user<font color="#E5E5E5"> and with the redirection is</font>

578
00:31:48,370 --> 00:31:55,909
intercepting the traffic so with a

579
00:31:53,000 --> 00:32:00,190
redirection you get back to the Airbnb

580
00:31:55,910 --> 00:32:04,160
and you see you are<font color="#E5E5E5"> logged in as a</font>

581
00:32:00,190 --> 00:32:08,270
nameless be now what<font color="#E5E5E5"> you want what we</font>

582
00:32:04,160 --> 00:32:10,580
want<font color="#CCCCCC"> is we want</font><font color="#E5E5E5"> to get administrator now</font>

583
00:32:08,270 --> 00:32:16,240
let's have<font color="#E5E5E5"> a closer look at the sam'l</font>

584
00:32:10,580 --> 00:32:16,240
assertion for that we will log in again

585
00:32:18,730 --> 00:32:28,430
and intercept the summer assertion you

586
00:32:24,110 --> 00:32:31,360
see it's encoded in base64 not really

587
00:32:28,430 --> 00:32:35,990
human readable for the most of us I

588
00:32:31,360 --> 00:32:44,780
think now you can click on Samuel Raider

589
00:32:35,990 --> 00:32:50,020
<font color="#CCCCCC">and what it what it does is decode the</font>

590
00:32:44,780 --> 00:32:54,910
samel message and make it human readable

591
00:32:50,020 --> 00:33:00,920
now the second part<font color="#E5E5E5"> of the exploit is</font>

592
00:32:54,910 --> 00:33:04,210
extracting the certificate oh sorry so<font color="#E5E5E5"> I</font>

593
00:33:00,920 --> 00:33:08,360
just want<font color="#E5E5E5"> to show</font><font color="#CCCCCC"> that I can try to</font>

594
00:33:04,210 --> 00:33:11,150
modify the assertion like so I want to

595
00:33:08,360 --> 00:33:12,679
<font color="#CCCCCC">log in as a admin so every occurrence of</font>

596
00:33:11,150 --> 00:33:13,370
user i'm going to<font color="#E5E5E5"> change it with the</font>

597
00:33:12,680 --> 00:33:19,280
admin

598
00:33:13,370 --> 00:33:21,500
and try to<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> now okay I don't</font><font color="#E5E5E5"> know</font>

599
00:33:19,280 --> 00:33:23,780
how to get<font color="#CCCCCC"> back from this mode here okay</font>

600
00:33:21,500 --> 00:33:28,010
and try to forward the the assertion as

601
00:33:23,780 --> 00:33:29,930
is and now the back and tells<font color="#E5E5E5"> me okay</font>

602
00:33:28,010 --> 00:33:31,970
<font color="#E5E5E5">you can't do this because you change the</font>

603
00:33:29,930 --> 00:33:36,830
assertion and now the signature is not

604
00:33:31,970 --> 00:33:45,530
valid anymore okay so i'm going<font color="#E5E5E5"> to log</font>

605
00:33:36,830 --> 00:33:49,189
in again on<font color="#E5E5E5"> Airbnb okay so since I still</font>

606
00:33:45,530 --> 00:33:51,110
<font color="#E5E5E5">have a valid ID p session right now I</font>

607
00:33:49,190 --> 00:33:54,790
don't have to<font color="#CCCCCC"> login</font><font color="#E5E5E5"> again so for the</font>

608
00:33:51,110 --> 00:33:57,620
federal<font color="#E5E5E5"> login side I still have a valid</font>

609
00:33:54,790 --> 00:34:01,540
session and he just issues a new

610
00:33:57,620 --> 00:34:05,959
assertion which i intercepted here ok

611
00:34:01,540 --> 00:34:08,779
let's go on we now want<font color="#E5E5E5"> to extract the</font>

612
00:34:05,960 --> 00:34:12,290
certificate data set that can be done

613
00:34:08,780 --> 00:34:17,360
simply by clicking on<font color="#CCCCCC"> sent to summon</font>

614
00:34:12,290 --> 00:34:18,560
<font color="#E5E5E5">Raider certs and mount one is now</font>

615
00:34:17,360 --> 00:34:22,580
changing to the summer Rae the

616
00:34:18,560 --> 00:34:27,529
certificate management top where you see

617
00:34:22,580 --> 00:34:29,929
the certificate is already there and now

618
00:34:27,530 --> 00:34:32,990
what you want<font color="#CCCCCC"> what we want</font><font color="#E5E5E5"> is to clone</font>

619
00:34:29,929 --> 00:34:37,070
it he has<font color="#CCCCCC"> done it already and what you</font>

620
00:34:32,989 --> 00:34:40,129
get is<font color="#CCCCCC"> all properties are copied to a</font>

621
00:34:37,070 --> 00:34:42,230
new certificate as set a new private

622
00:34:40,129 --> 00:34:51,529
public key pair and a self-signed

623
00:34:42,230 --> 00:34:55,940
certificate finally yep yeah it's not

624
00:34:51,530 --> 00:34:59,230
finished yet<font color="#CCCCCC"> Hey yes now so let me</font><font color="#E5E5E5"> show</font>

625
00:34:55,940 --> 00:35:02,960
you the the properties again so just

626
00:34:59,230 --> 00:35:05,300
<font color="#CCCCCC">clone all those those properties the</font>

627
00:35:02,960 --> 00:35:08,210
serial number the signature algorithm

628
00:35:05,300 --> 00:35:12,500
the issuer the subject and so on and we

629
00:35:08,210 --> 00:35:15,140
just what we do is we now have a cloned

630
00:35:12,500 --> 00:35:17,420
version of it and the only thing that's

631
00:35:15,140 --> 00:35:20,150
changed is the public key obviously

632
00:35:17,420 --> 00:35:23,780
<font color="#CCCCCC">because we</font><font color="#E5E5E5"> need to have the public key</font>

633
00:35:20,150 --> 00:35:26,020
that belongs to our newly generated key

634
00:35:23,780 --> 00:35:26,020
pair

635
00:35:26,640 --> 00:35:33,069
okay okay now what you can<font color="#E5E5E5"> what we want</font>

636
00:35:30,970 --> 00:35:40,058
<font color="#E5E5E5">to do is change</font><font color="#CCCCCC"> the username in the</font>

637
00:35:33,069 --> 00:35:43,690
assertion like we did before and now

638
00:35:40,059 --> 00:35:46,089
sign the assertion with a certificate we

639
00:35:43,690 --> 00:35:48,460
can choose on the left side that's

640
00:35:46,089 --> 00:35:52,960
successful designed there is a mesh

641
00:35:48,460 --> 00:35:55,930
message small message and<font color="#CCCCCC"> striker yeah</font>

642
00:35:52,960 --> 00:35:58,989
and now we can<font color="#E5E5E5"> forward it and our</font>

643
00:35:55,930 --> 00:36:11,169
hopefully locked in as administrator and

644
00:35:58,989 --> 00:36:14,259
yes we<font color="#CCCCCC"> are the cream be now this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> how</font>

645
00:36:11,170 --> 00:36:17,309
it worked now what are the mitigations

646
00:36:14,259 --> 00:36:22,619
the remediations against these attacks

647
00:36:17,309 --> 00:36:29,950
at first if you're configuring a sam'l

648
00:36:22,619 --> 00:36:32,499
some environment you have you could use

649
00:36:29,950 --> 00:36:35,589
the artifact binding because then no

650
00:36:32,499 --> 00:36:37,689
client is passing<font color="#E5E5E5"> and no content is</font>

651
00:36:35,589 --> 00:36:41,380
passing<font color="#CCCCCC"> through the client</font><font color="#E5E5E5"> and that</font>

652
00:36:37,690 --> 00:36:43,359
means no mingling with the content of

653
00:36:41,380 --> 00:36:47,529
the assertion with no mingling with the

654
00:36:43,359 --> 00:36:51,069
certificates and so on after that if

655
00:36:47,529 --> 00:36:52,599
that is not possible perhaps<font color="#CCCCCC"> because the</font>

656
00:36:51,069 --> 00:36:55,869
service provided the identity provider

657
00:36:52,599 --> 00:36:58,180
couldn't connect or are not allowed to

658
00:36:55,869 --> 00:37:04,269
connect or communicate with<font color="#CCCCCC"> each other</font>

659
00:36:58,180 --> 00:37:08,200
then post binding is necessary and if

660
00:37:04,269 --> 00:37:10,988
you use encrypted messages it's a lot

661
00:37:08,200 --> 00:37:13,029
harder<font color="#E5E5E5"> for the bad guys for the evil</font>

662
00:37:10,989 --> 00:37:17,739
guys to mangle with your assertion

663
00:37:13,029 --> 00:37:21,730
because there's is an encryption now if

664
00:37:17,739 --> 00:37:26,739
you're implementing as armor service you

665
00:37:21,730 --> 00:37:30,549
could<font color="#E5E5E5"> only process the signed XML tree</font>

666
00:37:26,739 --> 00:37:33,880
that means delete other content or

667
00:37:30,549 --> 00:37:39,210
ignore it delete is the more secure way

668
00:37:33,880 --> 00:37:43,770
I<font color="#E5E5E5"> think so no xml signature wrapping</font>

669
00:37:39,210 --> 00:37:49,710
any more possible then please make sure

670
00:37:43,770 --> 00:37:51,509
that<font color="#E5E5E5"> you not verify the signature with</font>

671
00:37:49,710 --> 00:37:53,960
the included with the embedded

672
00:37:51,510 --> 00:37:57,930
certificate and embedded public key

673
00:37:53,960 --> 00:38:03,599
because this could be user provided and

674
00:37:57,930 --> 00:38:07,020
don't trust user input so that's it I

675
00:38:03,599 --> 00:38:09,450
want<font color="#E5E5E5"> to give credit</font><font color="#CCCCCC"> to a man weirdos who</font>

676
00:38:07,020 --> 00:38:12,210
has written the bachelor thesis and

677
00:38:09,450 --> 00:38:14,790
summer Rae the with me he is now in

678
00:38:12,210 --> 00:38:18,750
holidays somewhere in the Netherlands or

679
00:38:14,790 --> 00:38:21,990
Belgium don't know these are<font color="#E5E5E5"> some links</font>

680
00:38:18,750 --> 00:38:25,530
if you want to have a closer look at

681
00:38:21,990 --> 00:38:35,910
<font color="#CCCCCC">salmon Raider or the bachelor thesis so</font>

682
00:38:25,530 --> 00:38:38,359
far are there any questions oh there's

683
00:38:35,910 --> 00:38:38,359
one<font color="#E5E5E5"> over there</font>

684
00:38:39,480 --> 00:38:54,630
the<font color="#E5E5E5"> real microphone yellow so you you</font>

685
00:38:51,330 --> 00:38:58,200
you are mia fine<font color="#E5E5E5"> okay yeah so you just</font>

686
00:38:54,630 --> 00:38:59,820
<font color="#CCCCCC">go so Balsamo single sign-on two days</font>

687
00:38:58,200 --> 00:39:03,540
there is a another really popular

688
00:38:59,820 --> 00:39:07,940
protocol which is odd too are you aware

689
00:39:03,540 --> 00:39:14,369
of some attacks on<font color="#E5E5E5"> this other protocol</font>

690
00:39:07,940 --> 00:39:17,150
sorry yes<font color="#E5E5E5"> I think basically what we've</font>

691
00:39:14,369 --> 00:39:21,660
shown here you you can also apply to

692
00:39:17,150 --> 00:39:25,290
Roth to let's say maybe more open ID

693
00:39:21,660 --> 00:39:27,140
connect which is based on or off to the

694
00:39:25,290 --> 00:39:29,970
thing is when you when you exchange a

695
00:39:27,140 --> 00:39:32,160
ticket and ID token in the<font color="#E5E5E5"> open ID</font>

696
00:39:29,970 --> 00:39:34,950
connect you have basically are on a

697
00:39:32,160 --> 00:39:37,500
conceptual level at<font color="#CCCCCC"> the same things you</font>

698
00:39:34,950 --> 00:39:39,930
have an assertion and you have a

699
00:39:37,500 --> 00:39:44,330
reference<font color="#E5E5E5"> to a key and a signature and</font>

700
00:39:39,930 --> 00:39:48,000
so if you're able to trick the consumer

701
00:39:44,330 --> 00:39:51,090
and to saying well well<font color="#E5E5E5"> you could remove</font>

702
00:39:48,000 --> 00:39:53,940
the signature you could trick the

703
00:39:51,090 --> 00:39:56,190
consumer into validating the token with

704
00:39:53,940 --> 00:39:57,990
another key you provide yourself or go

705
00:39:56,190 --> 00:40:00,930
and reference it another key so

706
00:39:57,990 --> 00:40:04,200
basically a very similar<font color="#E5E5E5"> tax or are</font>

707
00:40:00,930 --> 00:40:08,000
possible in those settings with with

708
00:40:04,200 --> 00:40:08,000
open ID connect and<font color="#CCCCCC"> authors</font>

709
00:40:13,970 --> 00:40:20,870
any further<font color="#E5E5E5"> questions oh yes please</font>

710
00:40:22,730 --> 00:40:28,840
so so this vulnerability is actually

711
00:40:27,080 --> 00:40:33,799
related to the configuration and not

712
00:40:28,840 --> 00:40:36,560
with Simone it our<font color="#E5E5E5"> Semel works by</font>

713
00:40:33,800 --> 00:40:38,720
default or yes you're right it's<font color="#CCCCCC"> a it's</font>

714
00:40:36,560 --> 00:40:41,600
it's more than a configuration problem

715
00:40:38,720 --> 00:40:44,839
is an implementation<font color="#E5E5E5"> problems so we we</font>

716
00:40:41,600 --> 00:40:47,270
saw that a couple of<font color="#E5E5E5"> times after the the</font>

717
00:40:44,840 --> 00:40:51,310
<font color="#E5E5E5">advisory as well and typically those</font>

718
00:40:47,270 --> 00:40:53,930
were people that implemented some<font color="#E5E5E5"> o</font>

719
00:40:51,310 --> 00:40:59,390
themselves so they implement<font color="#CCCCCC"> they they</font>

720
00:40:53,930 --> 00:41:01,700
process the the summer thing themselves

721
00:40:59,390 --> 00:41:05,089
so it's<font color="#E5E5E5"> like in crypto maybe you</font><font color="#CCCCCC"> device</font>

722
00:41:01,700 --> 00:41:07,330
<font color="#E5E5E5">to tell you the</font><font color="#CCCCCC"> library don't do it</font>

723
00:41:05,090 --> 00:41:13,340
yourself because<font color="#E5E5E5"> there are some pitfalls</font>

724
00:41:07,330 --> 00:41:15,140
<font color="#CCCCCC">okay okay thanks so you mentioned XML</font>

725
00:41:13,340 --> 00:41:18,670
parser I'm just wondering if you've done

726
00:41:15,140 --> 00:41:22,129
some fuzzing as well there no not really

727
00:41:18,670 --> 00:41:29,660
<font color="#E5E5E5">there wasn't any time</font><font color="#CCCCCC"> to maybe idea or</font>

728
00:41:22,130 --> 00:41:34,040
the<font color="#E5E5E5"> next thesis yeah well I mean from</font>

729
00:41:29,660 --> 00:41:36,259
apart from<font color="#E5E5E5"> the the typical XML entity</font>

730
00:41:34,040 --> 00:41:39,320
external entity problems you always have

731
00:41:36,260 --> 00:41:41,300
so that's a one more pitfall you would

732
00:41:39,320 --> 00:41:45,470
have if you'd implement some on yourself

733
00:41:41,300 --> 00:41:48,160
but your work didn't include buzzing uh

734
00:41:45,470 --> 00:41:48,160
no

735
00:41:52,890 --> 00:42:01,650
no more question thanks a lot so thanks

736
00:41:59,380 --> 00:42:01,650
<font color="#CCCCCC">to him</font>

737
00:42:11,380 --> 00:42:13,440
you

