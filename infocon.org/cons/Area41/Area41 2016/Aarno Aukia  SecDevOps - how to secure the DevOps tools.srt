1
00:00:08,670 --> 00:00:13,410
the part<font color="#E5E5E5"> about managing expectations</font>

2
00:00:09,840 --> 00:00:17,970
right hi amar<font color="#CCCCCC"> no I have a software</font>

3
00:00:13,410 --> 00:00:20,580
problem<font color="#CCCCCC"> um let me</font><font color="#E5E5E5"> just shortly say a few</font>

4
00:00:17,970 --> 00:00:23,220
words about me I've I'm a local boy here

5
00:00:20,580 --> 00:00:25,139
I'm from Zurich I've been to eat eh do

6
00:00:23,220 --> 00:00:26,669
ghouls Erick and then I started founding

7
00:00:25,140 --> 00:00:30,990
companies and that's the second 1 i'm

8
00:00:26,670 --> 00:00:32,879
now at vision we do<font color="#E5E5E5"> devops and then in</font>

9
00:00:30,990 --> 00:00:35,430
my spare time I like<font color="#CCCCCC"> to do event</font>

10
00:00:32,879 --> 00:00:39,530
networks so for<font color="#E5E5E5"> example the Wi-Fi here I</font>

11
00:00:35,430 --> 00:00:42,089
built<font color="#E5E5E5"> it last night so I hope it works</font>

12
00:00:39,530 --> 00:00:44,370
anyway my twitter handle i'll probably

13
00:00:42,089 --> 00:00:46,350
put on the slides tweet about it and

14
00:00:44,370 --> 00:00:48,269
there probably will be online at some

15
00:00:46,350 --> 00:00:52,650
point so<font color="#E5E5E5"> you can have a look at them</font>

16
00:00:48,269 --> 00:00:54,360
<font color="#CCCCCC">later so what what</font><font color="#E5E5E5"> is this talk about</font>

17
00:00:52,650 --> 00:00:57,420
<font color="#E5E5E5">what</font><font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to talk about so first</font>

18
00:00:54,360 --> 00:01:00,930
what is this<font color="#E5E5E5"> devops thing right so it's</font>

19
00:00:57,420 --> 00:01:02,610
<font color="#E5E5E5">like cloud marketing buzzword bingo I</font>

20
00:01:00,930 --> 00:01:06,180
hope you<font color="#E5E5E5"> all will have your bingo sheets</font>

21
00:01:02,610 --> 00:01:08,460
with you um and the second thing is

22
00:01:06,180 --> 00:01:10,590
where where is<font color="#CCCCCC"> the security right I mean</font>

23
00:01:08,460 --> 00:01:13,229
how how is this going to work<font color="#E5E5E5"> and then I</font>

24
00:01:10,590 --> 00:01:14,880
brought to customer examples with me so

25
00:01:13,229 --> 00:01:18,179
you can have a<font color="#CCCCCC"> look how this all looks</font>

26
00:01:14,880 --> 00:01:20,310
like then there's room for questions<font color="#E5E5E5"> I</font>

27
00:01:18,180 --> 00:01:22,740
assume but<font color="#E5E5E5"> actually we</font><font color="#CCCCCC"> just talked to</font>

28
00:01:20,310 --> 00:01:25,439
Florian that if you have any questions

29
00:01:22,740 --> 00:01:27,960
or stuff you want to discuss when they

30
00:01:25,439 --> 00:01:30,570
pop up please raise your hand and wave

31
00:01:27,960 --> 00:01:32,908
and make yourself heard to Florian and

32
00:01:30,570 --> 00:01:35,850
you get a mic to ask them right away I

33
00:01:32,909 --> 00:01:40,979
think that's maybe more no<font color="#E5E5E5"> discussion</font>

34
00:01:35,850 --> 00:01:43,469
thing what is DevOps right apart from

35
00:01:40,979 --> 00:01:45,869
<font color="#CCCCCC">all the marketing and buzz word thingy</font>

36
00:01:43,469 --> 00:01:47,908
<font color="#E5E5E5">um let me introduce it to you and</font>

37
00:01:45,869 --> 00:01:50,850
<font color="#E5E5E5">discuss it a little bit so we all on are</font>

38
00:01:47,909 --> 00:01:53,729
on the same<font color="#CCCCCC"> page so</font><font color="#E5E5E5"> DevOps the word</font>

39
00:01:50,850 --> 00:01:58,199
comes from development and operations

40
00:01:53,729 --> 00:02:01,530
dev ops and there's two core things that

41
00:01:58,200 --> 00:02:03,479
that it entitles which is bring agile

42
00:02:01,530 --> 00:02:06,270
software engineering tools and processes

43
00:02:03,479 --> 00:02:09,149
to operations people so stuff that

44
00:02:06,270 --> 00:02:14,160
software developers have been doing for

45
00:02:09,149 --> 00:02:15,720
decades automation testing operation has

46
00:02:14,160 --> 00:02:17,909
been struggling with or has<font color="#CCCCCC"> been</font>

47
00:02:15,720 --> 00:02:19,590
adopting a last maybe five years<font color="#E5E5E5"> but</font>

48
00:02:17,909 --> 00:02:22,510
there's still much room for improvement

49
00:02:19,590 --> 00:02:26,590
so automation<font color="#E5E5E5"> infrastructure is co</font>

50
00:02:22,510 --> 00:02:28,629
versioning<font color="#CCCCCC"> rollback testing conine's</font>

51
00:02:26,590 --> 00:02:30,970
integration testing and deployment for

52
00:02:28,629 --> 00:02:33,069
code and for<font color="#CCCCCC"> especially for the</font>

53
00:02:30,970 --> 00:02:34,900
infrastructure as code and on the other

54
00:02:33,069 --> 00:02:38,379
hand there is a lot of operations

55
00:02:34,900 --> 00:02:40,989
experience and try to bring the back to

56
00:02:38,379 --> 00:02:42,790
developers so for<font color="#E5E5E5"> example for</font>

57
00:02:40,989 --> 00:02:44,860
scalability the independent

58
00:02:42,790 --> 00:02:46,599
<font color="#E5E5E5">microservices so if one part of an</font>

59
00:02:44,860 --> 00:02:49,510
<font color="#CCCCCC">application or application stack falls</font>

60
00:02:46,599 --> 00:02:52,679
over not everything should be down and

61
00:02:49,510 --> 00:02:54,870
at the<font color="#CCCCCC"> end for production inside</font>

62
00:02:52,680 --> 00:02:57,609
monitoring logging metrics that

63
00:02:54,870 --> 00:03:00,099
operations people<font color="#E5E5E5"> use for their daily</font>

64
00:02:57,609 --> 00:03:03,310
<font color="#E5E5E5">bread right make that available to</font>

65
00:03:00,099 --> 00:03:05,349
developers as well to make them to help

66
00:03:03,310 --> 00:03:07,900
them make informed decisions about the

67
00:03:05,349 --> 00:03:09,670
architecture but also on the<font color="#E5E5E5"> development</font>

68
00:03:07,900 --> 00:03:13,090
of their applications<font color="#CCCCCC"> they're doing and</font>

69
00:03:09,670 --> 00:03:14,619
of course together<font color="#CCCCCC"> it's make the</font><font color="#E5E5E5"> the</font>

70
00:03:13,090 --> 00:03:17,200
guys who pay the bill so the business

71
00:03:14,620 --> 00:03:20,739
<font color="#E5E5E5">owner application owner make them more</font>

72
00:03:17,200 --> 00:03:22,540
happy and let them decide<font color="#CCCCCC"> what to do let</font>

73
00:03:20,739 --> 00:03:25,720
me go<font color="#CCCCCC"> into do those things a bit more</font>

74
00:03:22,540 --> 00:03:28,030
<font color="#E5E5E5">with more deeper the collaboration thing</font>

75
00:03:25,720 --> 00:03:29,560
is<font color="#E5E5E5"> probably one of the the new things</font>

76
00:03:28,030 --> 00:03:33,090
right<font color="#E5E5E5"> I mean it's the whole culture</font>

77
00:03:29,560 --> 00:03:35,530
thing it's their spin this you know

78
00:03:33,090 --> 00:03:37,599
worked fine in deaf and it's<font color="#CCCCCC"> knobs</font>

79
00:03:35,530 --> 00:03:40,120
<font color="#E5E5E5">problem now mentalities that there was a</font>

80
00:03:37,599 --> 00:03:43,540
huge wall different teams of course also

81
00:03:40,120 --> 00:03:45,370
different know-how and different types

82
00:03:43,540 --> 00:03:49,418
of people right<font color="#CCCCCC"> I mean left the creative</font>

83
00:03:45,370 --> 00:03:51,430
calipers we have the<font color="#CCCCCC"> 21st 7 being up at</font>

84
00:03:49,419 --> 00:03:52,780
night operations people<font color="#CCCCCC"> and of course</font>

85
00:03:51,430 --> 00:03:55,690
there are different kinds<font color="#E5E5E5"> of</font><font color="#CCCCCC"> people and</font>

86
00:03:52,780 --> 00:03:58,840
different teams and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that has</font><font color="#E5E5E5"> been a</font>

87
00:03:55,690 --> 00:04:01,349
mostly communications problem right it's

88
00:03:58,840 --> 00:04:03,010
also been a delegation from<font color="#E5E5E5"> the</font>

89
00:04:01,349 --> 00:04:05,260
developers that they're not a

90
00:04:03,010 --> 00:04:06,668
responsible for<font color="#CCCCCC"> water</font><font color="#E5E5E5"> code right because</font>

91
00:04:05,260 --> 00:04:07,959
we<font color="#E5E5E5"> if it crashes at night it's your</font>

92
00:04:06,669 --> 00:04:10,959
operations people<font color="#CCCCCC"> that have to wake up</font>

93
00:04:07,959 --> 00:04:14,079
and that's been a problem that's painful

94
00:04:10,959 --> 00:04:15,430
I call it I say it's been escalating but

95
00:04:14,079 --> 00:04:17,789
it's been a problem that's been

96
00:04:15,430 --> 00:04:21,099
addressed by let the teams collaborate

97
00:04:17,789 --> 00:04:23,020
make common teams put operations people

98
00:04:21,099 --> 00:04:25,780
<font color="#E5E5E5">together with software engineers in</font>

99
00:04:23,020 --> 00:04:29,590
teams and let them together handle the

100
00:04:25,780 --> 00:04:33,429
problems that arise agile operations

101
00:04:29,590 --> 00:04:34,710
engineering<font color="#CCCCCC"> it's let</font><font color="#E5E5E5"> me come back</font><font color="#CCCCCC"> to</font>

102
00:04:33,430 --> 00:04:36,870
that later

103
00:04:34,710 --> 00:04:39,810
counter fear of change with automated

104
00:04:36,870 --> 00:04:42,390
testing that means there's always going

105
00:04:39,810 --> 00:04:45,780
to be changes right we heard it this

106
00:04:42,390 --> 00:04:48,270
morning in the opening talk you have to

107
00:04:45,780 --> 00:04:52,859
plan for<font color="#E5E5E5"> changes you</font><font color="#CCCCCC"> have to plan for</font>

108
00:04:48,270 --> 00:04:55,140
updates and if you you should feel

109
00:04:52,860 --> 00:04:58,200
comfortable<font color="#E5E5E5"> doing them because then the</font>

110
00:04:55,140 --> 00:05:00,300
barrier<font color="#CCCCCC"> of changing stuff gets lower and</font>

111
00:04:58,200 --> 00:05:02,840
lower you feel more<font color="#E5E5E5"> comfortable</font><font color="#CCCCCC"> to do it</font>

112
00:05:00,300 --> 00:05:05,670
more often<font color="#E5E5E5"> and that of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> means</font>

113
00:05:02,840 --> 00:05:09,929
smaller changes and that<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course means</font>

114
00:05:05,670 --> 00:05:13,530
less risk to break stuff and put the

115
00:05:09,930 --> 00:05:19,620
developers in control at least to some

116
00:05:13,530 --> 00:05:22,109
point give them self-service tools that

117
00:05:19,620 --> 00:05:25,050
<font color="#CCCCCC">they can use and interact with with the</font>

118
00:05:22,110 --> 00:05:27,120
<font color="#E5E5E5">application when it's running so also to</font>

119
00:05:25,050 --> 00:05:29,910
take the operations people<font color="#E5E5E5"> may be out of</font>

120
00:05:27,120 --> 00:05:32,340
the critical path and enable the

121
00:05:29,910 --> 00:05:37,950
developers to do their<font color="#CCCCCC"> jobs basically</font>

122
00:05:32,340 --> 00:05:41,130
right infrastructure as code that what I

123
00:05:37,950 --> 00:05:43,740
was starting to tell before change from

124
00:05:41,130 --> 00:05:46,740
hand grumster servers to operations

125
00:05:43,740 --> 00:05:49,200
engineering so basically instead<font color="#E5E5E5"> of</font>

126
00:05:46,740 --> 00:05:52,440
making service by hand and configuring

127
00:05:49,200 --> 00:05:55,050
by hand<font color="#CCCCCC"> or by short</font><font color="#E5E5E5"> sell scripts treated</font>

128
00:05:52,440 --> 00:05:57,719
as an engineering problem as a<font color="#E5E5E5"> software</font>

129
00:05:55,050 --> 00:06:01,020
engineering problem and make or use

130
00:05:57,720 --> 00:06:04,140
readily available solutions to fix that

131
00:06:01,020 --> 00:06:06,599
<font color="#E5E5E5">and of course if you have</font><font color="#CCCCCC"> that if your</font>

132
00:06:04,140 --> 00:06:10,169
servers are automatically set up like

133
00:06:06,600 --> 00:06:12,540
those or almost you gain speed and

134
00:06:10,170 --> 00:06:15,390
<font color="#E5E5E5">reliability you humans make errors</font>

135
00:06:12,540 --> 00:06:16,950
that's<font color="#E5E5E5"> normal if the servers are set up</font>

136
00:06:15,390 --> 00:06:20,400
automatically there's much less room for

137
00:06:16,950 --> 00:06:22,590
error you gain versioning and roll back

138
00:06:20,400 --> 00:06:26,039
so<font color="#E5E5E5"> basically you know standard software</font>

139
00:06:22,590 --> 00:06:27,750
engineering benefits and of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> you</font>

140
00:06:26,040 --> 00:06:31,260
need<font color="#CCCCCC"> to be automated so that the</font>

141
00:06:27,750 --> 00:06:34,230
developers can do themselves so for

142
00:06:31,260 --> 00:06:36,270
example give each developer a full stack

143
00:06:34,230 --> 00:06:38,190
<font color="#CCCCCC">of the application including databases</font>

144
00:06:36,270 --> 00:06:40,740
and back ends and caches and web servers

145
00:06:38,190 --> 00:06:42,780
and out of whatever it needs to run so

146
00:06:40,740 --> 00:06:46,320
they can try<font color="#CCCCCC"> out their code without</font>

147
00:06:42,780 --> 00:06:47,440
breaking it into production no money

148
00:06:46,320 --> 00:06:51,430
will change is in production

149
00:06:47,440 --> 00:06:54,460
da so if they wanted<font color="#E5E5E5"> to have something</font>

150
00:06:51,430 --> 00:06:57,280
changed in production they change it in

151
00:06:54,460 --> 00:07:00,070
a tool that does all the operations

152
00:06:57,280 --> 00:07:01,710
engineering you can test the change you

153
00:07:00,070 --> 00:07:04,630
can roll it out<font color="#E5E5E5"> to a testing environment</font>

154
00:07:01,710 --> 00:07:08,440
you<font color="#E5E5E5"> can then rolled out controlled in</font>

155
00:07:04,630 --> 00:07:10,030
production environment and it's a it's

156
00:07:08,440 --> 00:07:12,670
you know it's an<font color="#CCCCCC"> engineering solution</font>

157
00:07:10,030 --> 00:07:14,530
for that and of<font color="#CCCCCC"> course if you can</font><font color="#E5E5E5"> do it</font>

158
00:07:12,670 --> 00:07:17,110
once in<font color="#CCCCCC"> production you can do as many</font>

159
00:07:14,530 --> 00:07:19,719
<font color="#E5E5E5">times as you need for testing different</font>

160
00:07:17,110 --> 00:07:21,370
branches for testing different versions

161
00:07:19,720 --> 00:07:24,310
there's<font color="#E5E5E5"> there's different combinations</font>

162
00:07:21,370 --> 00:07:25,840
different migration<font color="#CCCCCC"> scenario that's</font><font color="#E5E5E5"> the</font>

163
00:07:24,310 --> 00:07:29,530
whole point of automating the

164
00:07:25,840 --> 00:07:32,320
infrastructure as well there's a<font color="#E5E5E5"> lot a</font>

165
00:07:29,530 --> 00:07:34,750
<font color="#CCCCCC">lot of tools and there's a whole</font>

166
00:07:32,320 --> 00:07:38,680
category of<font color="#E5E5E5"> DevOps tools and</font><font color="#CCCCCC"> sourceforge</font>

167
00:07:34,750 --> 00:07:43,960
and github and you name it and<font color="#E5E5E5"> DevOps</font>

168
00:07:38,680 --> 00:07:46,600
has been also reduced to the tools that

169
00:07:43,960 --> 00:07:48,190
it uses right there's more there's<font color="#E5E5E5"> the</font>

170
00:07:46,600 --> 00:07:50,200
whole trust thing there's the automation

171
00:07:48,190 --> 00:07:52,419
thing but of course<font color="#CCCCCC"> the tools enable you</font>

172
00:07:50,200 --> 00:07:54,219
to automate and you can<font color="#E5E5E5"> reuse them and</font>

173
00:07:52,419 --> 00:07:58,539
you don't have to do it all from scratch

174
00:07:54,220 --> 00:08:00,220
so<font color="#CCCCCC"> of course for atomic deployment and</font>

175
00:07:58,540 --> 00:08:02,110
rollback you need some sort of packaging

176
00:08:00,220 --> 00:08:03,910
right that includes all<font color="#CCCCCC"> the dependencies</font>

177
00:08:02,110 --> 00:08:07,540
for the application you want to deploy

178
00:08:03,910 --> 00:08:09,700
for example we we've been using Debian

179
00:08:07,540 --> 00:08:13,540
packages and RPM packages for attack

180
00:08:09,700 --> 00:08:16,210
packages and<font color="#CCCCCC"> now slowly moving into</font><font color="#E5E5E5"> a</font>

181
00:08:13,540 --> 00:08:18,580
<font color="#CCCCCC">ducker so basically to have a consistent</font>

182
00:08:16,210 --> 00:08:21,370
<font color="#CCCCCC">package of everything of</font><font color="#E5E5E5"> the application</font>

183
00:08:18,580 --> 00:08:23,620
all its dependencies or the libraries<font color="#CCCCCC"> or</font>

184
00:08:21,370 --> 00:08:27,280
the runt<font color="#E5E5E5"> an environment as far as</font>

185
00:08:23,620 --> 00:08:29,350
possible<font color="#CCCCCC"> in</font><font color="#E5E5E5"> one place so that you can so</font>

186
00:08:27,280 --> 00:08:30,729
what you see and what your test is

187
00:08:29,350 --> 00:08:33,550
actually what you're going to get in

188
00:08:30,730 --> 00:08:35,560
production as well infrastructure state

189
00:08:33,549 --> 00:08:37,598
management configuration management also

190
00:08:35,559 --> 00:08:39,909
called<font color="#CCCCCC"> there is different readily made</font>

191
00:08:37,599 --> 00:08:44,229
of tools available puppets all chef

192
00:08:39,909 --> 00:08:46,780
<font color="#E5E5E5">ansible you name it um</font><font color="#CCCCCC"> there do about</font>

193
00:08:44,229 --> 00:08:48,160
the same thing and<font color="#E5E5E5"> it's then again a</font>

194
00:08:46,780 --> 00:08:51,010
matter of taste which one you want<font color="#E5E5E5"> to</font>

195
00:08:48,160 --> 00:08:53,530
choose<font color="#CCCCCC"> continues integration testing</font>

196
00:08:51,010 --> 00:08:55,410
deployment the tools<font color="#CCCCCC"> you've probably</font>

197
00:08:53,530 --> 00:08:58,870
<font color="#E5E5E5">heard of Jenkins very popular</font>

198
00:08:55,410 --> 00:09:00,910
<font color="#CCCCCC">open-source to Travis CI is a hosted</font>

199
00:08:58,870 --> 00:09:04,240
solution very well known for their

200
00:09:00,910 --> 00:09:07,180
free<font color="#E5E5E5"> open-source work to do gitlab CI is</font>

201
00:09:04,240 --> 00:09:08,500
an to integrating to get management I'll

202
00:09:07,180 --> 00:09:10,599
come to<font color="#CCCCCC"> that later and of course</font>

203
00:09:08,500 --> 00:09:13,660
<font color="#CCCCCC">atlassian bamboo from that class Ian</font>

204
00:09:10,600 --> 00:09:16,330
suit of tools help you to do that all

205
00:09:13,660 --> 00:09:18,100
and then the<font color="#E5E5E5"> self-service part there's</font>

206
00:09:16,330 --> 00:09:21,130
tools you can use for<font color="#E5E5E5"> that for example</font>

207
00:09:18,100 --> 00:09:23,860
vagrant which is a virtual machine and

208
00:09:21,130 --> 00:09:25,990
provisioning tool that you can use to

209
00:09:23,860 --> 00:09:28,030
<font color="#E5E5E5">provision the testing environments for</font>

210
00:09:25,990 --> 00:09:30,100
example developers so that then they

211
00:09:28,030 --> 00:09:32,470
just get pull a repository with the

212
00:09:30,100 --> 00:09:34,720
<font color="#CCCCCC">discrete</font><font color="#E5E5E5"> declaration of the test machine</font>

213
00:09:32,470 --> 00:09:38,320
and then<font color="#E5E5E5"> they can instantiate as many of</font>

214
00:09:34,720 --> 00:09:41,020
them as needed or through continuous

215
00:09:38,320 --> 00:09:44,350
deployment so for example through the

216
00:09:41,020 --> 00:09:46,540
<font color="#CCCCCC">Jenkins tools you can use them to order</font>

217
00:09:44,350 --> 00:09:48,190
deploy stuff to an essential environment

218
00:09:46,540 --> 00:09:50,890
so you don't need<font color="#CCCCCC"> to keep track or</font>

219
00:09:48,190 --> 00:09:53,710
update or support basically the

220
00:09:50,890 --> 00:10:00,010
developers doing stuff from their own

221
00:09:53,710 --> 00:10:02,380
machines infrastructure testing so of

222
00:10:00,010 --> 00:10:04,689
<font color="#E5E5E5">course the instructure tools you would</font>

223
00:10:02,380 --> 00:10:07,420
use<font color="#CCCCCC"> to build it up infrastructure</font>

224
00:10:04,690 --> 00:10:10,810
testing is something as soon as you have

225
00:10:07,420 --> 00:10:14,319
it deployed or Britain in code you can

226
00:10:10,810 --> 00:10:16,719
use the code<font color="#E5E5E5"> qualities tools to run on</font>

227
00:10:14,320 --> 00:10:20,710
them and make your own infrastructure

228
00:10:16,720 --> 00:10:22,690
code better so that's<font color="#E5E5E5"> the bring soft</font>

229
00:10:20,710 --> 00:10:25,990
engineering best practices back to

230
00:10:22,690 --> 00:10:28,420
operations you have<font color="#CCCCCC"> a lot of moving</font>

231
00:10:25,990 --> 00:10:30,400
parts if you have a<font color="#E5E5E5"> normal web</font>

232
00:10:28,420 --> 00:10:33,550
application as we use it has at least

233
00:10:30,400 --> 00:10:35,590
one or two databases some cash some web

234
00:10:33,550 --> 00:10:37,209
servers or modification server and they

235
00:10:35,590 --> 00:10:40,240
all need to be configured<font color="#CCCCCC"> to talk to</font>

236
00:10:37,210 --> 00:10:43,810
<font color="#E5E5E5">each other with credentials and stuff so</font>

237
00:10:40,240 --> 00:10:47,380
that's why we<font color="#E5E5E5"> should be uni testing each</font>

238
00:10:43,810 --> 00:10:50,589
of those components separately plus then

239
00:10:47,380 --> 00:10:52,720
the instantiating one of those stacks so

240
00:10:50,590 --> 00:10:56,470
that they all know where the components

241
00:10:52,720 --> 00:10:58,840
are<font color="#CCCCCC"> a service discovery works so that</font><font color="#E5E5E5"> we</font>

242
00:10:56,470 --> 00:11:01,120
can be sure<font color="#CCCCCC"> that we don't do any</font>

243
00:10:58,840 --> 00:11:04,150
regressions from the infrastructure side

244
00:11:01,120 --> 00:11:08,820
when changing something based you<font color="#E5E5E5"> know</font>

245
00:11:04,150 --> 00:11:08,819
basic software engineering process

246
00:11:10,499 --> 00:11:18,459
feedback 14 for developers production is

247
00:11:16,749 --> 00:11:22,089
mostly a black box right they ship it

248
00:11:18,459 --> 00:11:24,849
and then it I don't know so<font color="#CCCCCC"> there to</font>

249
00:11:22,089 --> 00:11:26,709
also bring<font color="#CCCCCC"> self-service to bring them</font>

250
00:11:24,850 --> 00:11:28,569
the insight into what is actually

251
00:11:26,709 --> 00:11:33,429
happening in what they've been doing all

252
00:11:28,569 --> 00:11:35,679
day there's two things we we do actively

253
00:11:33,429 --> 00:11:38,980
want is them to collect all the locks

254
00:11:35,679 --> 00:11:42,399
especially application logs but also web

255
00:11:38,980 --> 00:11:44,290
server logs while flogs so that the

256
00:11:42,399 --> 00:11:46,230
developers can actually see what's

257
00:11:44,290 --> 00:11:49,480
happening and that of course helps them

258
00:11:46,230 --> 00:11:53,049
to search for a<font color="#E5E5E5"> production error root</font>

259
00:11:49,480 --> 00:11:55,149
causes and giving them in this<font color="#E5E5E5"> case a</font>

260
00:11:53,049 --> 00:11:57,189
web GUI where they can search for stuff

261
00:11:55,149 --> 00:12:00,790
and do their stuff they usually would do

262
00:11:57,189 --> 00:12:02,290
on some single server SS<font color="#CCCCCC"> Aging in and</font>

263
00:12:00,790 --> 00:12:05,769
then looking at<font color="#E5E5E5"> lock files or I</font><font color="#CCCCCC"> don't</font>

264
00:12:02,290 --> 00:12:08,679
<font color="#CCCCCC">know that's much easier and much</font><font color="#E5E5E5"> easy</font>

265
00:12:05,769 --> 00:12:12,399
and you can or we sell them that by the

266
00:12:08,679 --> 00:12:14,139
benefit of not needing to use go to the

267
00:12:12,399 --> 00:12:17,769
servers especially if multiple servers

268
00:12:14,139 --> 00:12:21,100
it's a pain and once they use it we can

269
00:12:17,769 --> 00:12:24,699
take away the the root access to the

270
00:12:21,100 --> 00:12:26,529
production so they<font color="#E5E5E5"> or any axis SSH</font>

271
00:12:24,699 --> 00:12:30,039
access to the production which again

272
00:12:26,529 --> 00:12:32,350
helps to the no changes<font color="#CCCCCC"> in production</font>

273
00:12:30,039 --> 00:12:34,779
policy right nor manual changes in

274
00:12:32,350 --> 00:12:37,480
production policy and the other value is

275
00:12:34,779 --> 00:12:38,889
it's all merge from<font color="#E5E5E5"> servers and indexed</font>

276
00:12:37,480 --> 00:12:42,039
and you can search and filter and stuff

277
00:12:38,889 --> 00:12:44,379
so<font color="#E5E5E5"> that's pretty pretty cool yo que les</font>

278
00:12:42,039 --> 00:12:47,529
fue la cubana is one product it's a open

279
00:12:44,379 --> 00:12:49,509
source product there is also<font color="#E5E5E5"> a Splunk</font>

280
00:12:47,529 --> 00:12:52,329
for example a commercial product it's

281
00:12:49,509 --> 00:12:57,339
very<font color="#CCCCCC"> similar so that's</font><font color="#E5E5E5"> like the the</font>

282
00:12:52,329 --> 00:12:59,469
output right and then for<font color="#CCCCCC"> the debugging</font>

283
00:12:57,339 --> 00:13:01,869
<font color="#E5E5E5">output maybe and then for the whole</font>

284
00:12:59,470 --> 00:13:05,049
what's happening in a more quantitative

285
00:13:01,869 --> 00:13:07,660
way you can either get from the logs or

286
00:13:05,049 --> 00:13:11,160
collect separately servant application

287
00:13:07,660 --> 00:13:13,600
metrics like New Relic does for example

288
00:13:11,160 --> 00:13:16,118
it's a software as a service that does

289
00:13:13,600 --> 00:13:18,970
that but you can also have it hosts

290
00:13:16,119 --> 00:13:20,559
yourself for some influx<font color="#CCCCCC"> TB time series</font>

291
00:13:18,970 --> 00:13:23,120
data base for example where<font color="#E5E5E5"> you can both</font>

292
00:13:20,559 --> 00:13:25,339
collect server metrics like CPU

293
00:13:23,120 --> 00:13:27,410
ramdisk and so on<font color="#E5E5E5"> and so forth but also</font>

294
00:13:25,339 --> 00:13:29,630
correlate them with application metrics

295
00:13:27,410 --> 00:13:31,880
number of<font color="#E5E5E5"> locking users number of</font>

296
00:13:29,630 --> 00:13:35,630
sessions number of hits and<font color="#E5E5E5"> that that</font>

297
00:13:31,880 --> 00:13:40,850
stuff<font color="#CCCCCC"> that can help you debug stuff when</font>

298
00:13:35,630 --> 00:13:43,520
when<font color="#E5E5E5"> you have problem right so in the</font>

299
00:13:40,850 --> 00:13:47,810
<font color="#E5E5E5">end we usually end up with a workflow</font>

300
00:13:43,520 --> 00:13:51,110
like this we have on the very left to

301
00:13:47,810 --> 00:13:53,750
developers application owners older the

302
00:13:51,110 --> 00:13:56,240
people that<font color="#E5E5E5"> the two stuff right they</font>

303
00:13:53,750 --> 00:13:58,460
work with version management standards

304
00:13:56,240 --> 00:13:59,720
of<font color="#CCCCCC"> the engineering in the same version</font>

305
00:13:58,460 --> 00:14:02,600
management we have configuration

306
00:13:59,720 --> 00:14:04,910
management configuration management then

307
00:14:02,600 --> 00:14:07,190
provides each developer feedback loop

308
00:14:04,910 --> 00:14:08,810
with a development environment where

309
00:14:07,190 --> 00:14:12,500
that's docker container or vagrant

310
00:14:08,810 --> 00:14:14,989
virtual machine doesn't matter from the

311
00:14:12,500 --> 00:14:16,160
version management for both the code and

312
00:14:14,990 --> 00:14:18,350
<font color="#E5E5E5">the Confederation management this</font>

313
00:14:16,160 --> 00:14:20,449
continuous integration contains

314
00:14:18,350 --> 00:14:21,440
integration basically if it's a lot of

315
00:14:20,450 --> 00:14:24,529
programming language<font color="#CCCCCC"> needs to be</font>

316
00:14:21,440 --> 00:14:28,520
compiled or built or somehow aggregated

317
00:14:24,529 --> 00:14:31,820
<font color="#E5E5E5">building packaging and then there's a</font>

318
00:14:28,520 --> 00:14:33,829
hopefully automated testing at least<font color="#E5E5E5"> we</font>

319
00:14:31,820 --> 00:14:35,420
can provide in the<font color="#E5E5E5"> infrastructure</font><font color="#CCCCCC"> to do</font>

320
00:14:33,830 --> 00:14:37,250
automated testing that<font color="#E5E5E5"> is still need to</font>

321
00:14:35,420 --> 00:14:39,319
write to test themselves and then of

322
00:14:37,250 --> 00:14:42,140
course given the feedback from the<font color="#CCCCCC"> cadiz</font>

323
00:14:39,320 --> 00:14:43,720
integration<font color="#E5E5E5"> by</font><font color="#CCCCCC"> a chat pod for example to</font>

324
00:14:42,140 --> 00:14:46,880
slack or<font color="#CCCCCC"> hip chat or whatever they use</font>

325
00:14:43,720 --> 00:14:49,220
or to a dashboard or whatever basically

326
00:14:46,880 --> 00:14:52,730
enabling them to to work faster right

327
00:14:49,220 --> 00:14:55,760
and then deploying all that to some

328
00:14:52,730 --> 00:14:58,339
testing production whatever servers they

329
00:14:55,760 --> 00:15:00,709
are built by confession management and

330
00:14:58,339 --> 00:15:03,550
then deployed the application from

331
00:15:00,709 --> 00:15:05,750
continuous integration and deployment

332
00:15:03,550 --> 00:15:07,910
that's<font color="#E5E5E5"> basically it and then of course</font>

333
00:15:05,750 --> 00:15:09,410
<font color="#E5E5E5">there's the whole operations thing right</font>

334
00:15:07,910 --> 00:15:10,910
it was the software engineering process

335
00:15:09,410 --> 00:15:12,949
and then there's whole operation stuff

336
00:15:10,910 --> 00:15:14,959
so once it runs there is need some

337
00:15:12,950 --> 00:15:17,959
databases and backends they need to be

338
00:15:14,959 --> 00:15:20,050
created and supported of course for

339
00:15:17,959 --> 00:15:23,000
disaster recovery you need some backups

340
00:15:20,050 --> 00:15:25,370
then once you provision<font color="#E5E5E5"> a service you</font>

341
00:15:23,000 --> 00:15:27,670
<font color="#CCCCCC">need to make sure it actually</font><font color="#E5E5E5"> runs so</font>

342
00:15:25,370 --> 00:15:29,810
the<font color="#E5E5E5"> service monitoring and alerting</font>

343
00:15:27,670 --> 00:15:32,449
logging a metrics were already talked

344
00:15:29,810 --> 00:15:34,699
about<font color="#E5E5E5"> it's all the it's all the standard</font>

345
00:15:32,450 --> 00:15:38,550
of operations stuff right

346
00:15:34,700 --> 00:15:42,680
so when discussing with my colleagues we

347
00:15:38,550 --> 00:15:46,339
were like okay so where's the security

348
00:15:42,680 --> 00:15:50,579
right there's no button called security

349
00:15:46,340 --> 00:15:53,310
right so that's<font color="#E5E5E5"> maybe because it's all</font>

350
00:15:50,580 --> 00:15:55,380
in there right I mean the security is an

351
00:15:53,310 --> 00:15:57,839
integral part of<font color="#E5E5E5"> the software</font>

352
00:15:55,380 --> 00:16:01,080
development deployment and operations

353
00:15:57,840 --> 00:16:04,230
processes and it's almost everywhere

354
00:16:01,080 --> 00:16:06,840
that<font color="#E5E5E5"> security is involved on different</font>

355
00:16:04,230 --> 00:16:09,690
layers and levels of course so let's go

356
00:16:06,840 --> 00:16:11,880
through<font color="#CCCCCC"> them and and discuss and if you</font>

357
00:16:09,690 --> 00:16:17,010
have input or<font color="#E5E5E5"> or opinions to share</font>

358
00:16:11,880 --> 00:16:20,400
<font color="#E5E5E5">please speak</font><font color="#CCCCCC"> developer stuff that's</font>

359
00:16:17,010 --> 00:16:22,110
<font color="#E5E5E5">probably the most white box testers do</font>

360
00:16:20,400 --> 00:16:23,730
right I talk to developers they look at

361
00:16:22,110 --> 00:16:26,040
code they look at what libraries they

362
00:16:23,730 --> 00:16:28,470
use where they're from what versions

363
00:16:26,040 --> 00:16:30,890
they're using did they think anything

364
00:16:28,470 --> 00:16:33,480
about<font color="#CCCCCC"> what they're doing do they use a</font>

365
00:16:30,890 --> 00:16:35,160
libraries or do they implement crypto or

366
00:16:33,480 --> 00:16:37,650
some<font color="#CCCCCC"> allure</font><font color="#E5E5E5"> you know something by</font>

367
00:16:35,160 --> 00:16:41,640
themselves which they shouldn't so

368
00:16:37,650 --> 00:16:45,060
that's a record education education

369
00:16:41,640 --> 00:16:47,520
education training help support that's

370
00:16:45,060 --> 00:16:49,199
what I need right because it<font color="#E5E5E5"> doesn't</font>

371
00:16:47,520 --> 00:16:51,090
matter<font color="#E5E5E5"> how secured a deployment and</font>

372
00:16:49,200 --> 00:16:54,480
operations process if the software shit

373
00:16:51,090 --> 00:16:58,740
it doesn't matter right and that's my

374
00:16:54,480 --> 00:17:00,750
you know were to you please do anyway to

375
00:16:58,740 --> 00:17:04,050
developers so that their software gets

376
00:17:00,750 --> 00:17:06,030
better and that it's a it's an

377
00:17:04,050 --> 00:17:09,869
incremental process that it gets better

378
00:17:06,030 --> 00:17:11,819
and<font color="#CCCCCC"> better</font><font color="#E5E5E5"> okay that was developers part</font>

379
00:17:09,869 --> 00:17:14,699
let's go to you no more technical and

380
00:17:11,819 --> 00:17:16,679
tools engineering stuff configuration

381
00:17:14,700 --> 00:17:18,360
management was one of the issues and<font color="#E5E5E5"> the</font>

382
00:17:16,680 --> 00:17:20,990
infrastructure<font color="#E5E5E5"> donation we discussed</font>

383
00:17:18,359 --> 00:17:24,209
<font color="#E5E5E5">earlier the conversion management is</font>

384
00:17:20,990 --> 00:17:28,440
pretty coolant in terms of the system

385
00:17:24,210 --> 00:17:30,870
security we any of the tools i mentioned

386
00:17:28,440 --> 00:17:34,770
earlier basically you have a declarative

387
00:17:30,870 --> 00:17:39,479
way of saying how<font color="#E5E5E5"> you want the system to</font>

388
00:17:34,770 --> 00:17:41,970
be and then the tool make<font color="#CCCCCC"> sure that</font><font color="#E5E5E5"> the</font>

389
00:17:39,480 --> 00:17:45,180
state is a is what you defined earlier

390
00:17:41,970 --> 00:17:47,680
so baseline system security is like a

391
00:17:45,180 --> 00:17:49,570
typical example um

392
00:17:47,680 --> 00:17:55,150
services system services to enable or

393
00:17:49,570 --> 00:17:59,889
disable telnet<font color="#E5E5E5"> Dolph SSH</font><font color="#CCCCCC"> da of course</font>

394
00:17:55,150 --> 00:18:03,250
the whole system users management users

395
00:17:59,890 --> 00:18:06,130
groups<font color="#CCCCCC"> Keys hashes sudoers can all make</font>

396
00:18:03,250 --> 00:18:08,200
sure that you declare what which users

397
00:18:06,130 --> 00:18:10,390
are supposed to be there then which

398
00:18:08,200 --> 00:18:12,790
users are supposed to be absent and this

399
00:18:10,390 --> 00:18:15,520
is to make<font color="#CCCCCC"> sure that in 50 minutes at</font>

400
00:18:12,790 --> 00:18:17,590
his latest the system will<font color="#E5E5E5"> converge to</font>

401
00:18:15,520 --> 00:18:20,200
that state and of course you should

402
00:18:17,590 --> 00:18:22,270
monitor what<font color="#E5E5E5"> it does and have its feet</font>

403
00:18:20,200 --> 00:18:24,760
to the logging system and when you

404
00:18:22,270 --> 00:18:26,110
detect that it does changes that you

405
00:18:24,760 --> 00:18:27,580
didn't you<font color="#E5E5E5"> know you didn't change</font>

406
00:18:26,110 --> 00:18:30,219
something in<font color="#E5E5E5"> the code but it does</font>

407
00:18:27,580 --> 00:18:31,870
changes maybe something happened on the

408
00:18:30,220 --> 00:18:35,100
server and<font color="#CCCCCC"> you should have a closer look</font>

409
00:18:31,870 --> 00:18:37,540
at it you can<font color="#CCCCCC"> sit up for example the</font>

410
00:18:35,100 --> 00:18:40,270
triple<font color="#CCCCCC"> A's or educational theorization</font>

411
00:18:37,540 --> 00:18:42,399
an accounting for example with a<font color="#CCCCCC"> cute</font>

412
00:18:40,270 --> 00:18:45,430
factory or LDAP or whatever the tool the

413
00:18:42,400 --> 00:18:47,500
customer uses for the rest of the users

414
00:18:45,430 --> 00:18:50,380
right it should have for example<font color="#CCCCCC"> SSH</font>

415
00:18:47,500 --> 00:18:52,720
access or some other access of course

416
00:18:50,380 --> 00:18:55,030
<font color="#E5E5E5">that axis doesn't work if the system is</font>

417
00:18:52,720 --> 00:18:58,300
offline and that's why<font color="#CCCCCC"> we still need to</font>

418
00:18:55,030 --> 00:19:01,629
have some system users to<font color="#CCCCCC"> do log in and</font>

419
00:18:58,300 --> 00:19:03,790
fix stuff if the<font color="#CCCCCC"> system is offline and</font>

420
00:19:01,630 --> 00:19:06,910
then there's you know host fireball for

421
00:19:03,790 --> 00:19:10,840
example iptables on<font color="#CCCCCC"> linux systems or PF</font>

422
00:19:06,910 --> 00:19:12,970
for<font color="#CCCCCC"> whatever your software choices you</font>

423
00:19:10,840 --> 00:19:15,610
can make sure that it's pretty tight and

424
00:19:12,970 --> 00:19:20,980
locked down and that<font color="#E5E5E5"> it will be and stay</font>

425
00:19:15,610 --> 00:19:25,090
like that another topic is logging<font color="#E5E5E5"> i</font>

426
00:19:20,980 --> 00:19:28,060
mentioned the e lk stack before audit

427
00:19:25,090 --> 00:19:31,270
logging is a is a big thing right i mean

428
00:19:28,060 --> 00:19:33,879
the<font color="#E5E5E5"> devops mentality of enabling the</font>

429
00:19:31,270 --> 00:19:36,010
developers to change stuff of course

430
00:19:33,880 --> 00:19:39,310
<font color="#E5E5E5">doesn't mean that they have like a free</font>

431
00:19:36,010 --> 00:19:40,900
game of doing anything right they have

432
00:19:39,310 --> 00:19:43,870
some certain processes they can do for

433
00:19:40,900 --> 00:19:45,880
<font color="#E5E5E5">example a deployment process or Quality</font>

434
00:19:43,870 --> 00:19:48,719
Assurance process or whatever they you

435
00:19:45,880 --> 00:19:51,160
know are allowed to<font color="#E5E5E5"> do and accounting</font>

436
00:19:48,720 --> 00:19:53,230
make sure<font color="#E5E5E5"> that it's it's a valid</font>

437
00:19:51,160 --> 00:19:55,060
developer and so on so<font color="#CCCCCC"> forth but</font><font color="#E5E5E5"> of</font>

438
00:19:53,230 --> 00:19:57,700
course needs to be locked it needs to be

439
00:19:55,060 --> 00:20:00,520
times them who did what when what was

440
00:19:57,700 --> 00:20:01,670
<font color="#CCCCCC">changed exactly so that it's a it's in</font>

441
00:20:00,520 --> 00:20:05,120
<font color="#CCCCCC">there Nordic trail</font>

442
00:20:01,670 --> 00:20:08,330
figure<font color="#CCCCCC"> out what</font><font color="#E5E5E5"> happened actually we</font>

443
00:20:05,120 --> 00:20:11,959
feed application<font color="#E5E5E5"> requests logs basically</font>

444
00:20:08,330 --> 00:20:14,750
the many logs as we can find or as the

445
00:20:11,960 --> 00:20:18,410
customer should have access<font color="#E5E5E5"> to and we</font>

446
00:20:14,750 --> 00:20:21,320
make it<font color="#CCCCCC"> as as right once read many as</font>

447
00:20:18,410 --> 00:20:23,780
possible or as feasible for the

448
00:20:21,320 --> 00:20:25,790
customers or basically<font color="#E5E5E5"> it's read only 44</font>

449
00:20:23,780 --> 00:20:29,000
normal users so that we have<font color="#E5E5E5"> some kind</font>

450
00:20:25,790 --> 00:20:31,310
<font color="#E5E5E5">of yeah and I'm not going to call it</font>

451
00:20:29,000 --> 00:20:33,380
tamper proof right but at least some

452
00:20:31,310 --> 00:20:35,570
sort of tamper evidence see here that

453
00:20:33,380 --> 00:20:37,370
it's<font color="#E5E5E5"> only for restricted admin access to</font>

454
00:20:35,570 --> 00:20:40,310
change the logs and of course we can

455
00:20:37,370 --> 00:20:43,330
also export them to some real right ones

456
00:20:40,310 --> 00:20:45,919
medium if the customer requires that

457
00:20:43,330 --> 00:20:49,629
ideal<font color="#E5E5E5"> case they introduced earlier</font>

458
00:20:45,920 --> 00:20:52,040
already here also just for reference

459
00:20:49,630 --> 00:20:54,650
service monitoring<font color="#E5E5E5"> I mean typical</font>

460
00:20:52,040 --> 00:20:57,200
operations problem also well there's a

461
00:20:54,650 --> 00:20:59,120
security aspect in that I mean older but

462
00:20:57,200 --> 00:21:01,640
the services<font color="#E5E5E5"> are available yeah</font><font color="#CCCCCC"> okay</font>

463
00:20:59,120 --> 00:21:03,560
availability it's a security thing but

464
00:21:01,640 --> 00:21:05,360
of course<font color="#CCCCCC"> there are so many layers to to</font>

465
00:21:03,560 --> 00:21:07,790
monitor on right<font color="#E5E5E5"> I started at the top</font>

466
00:21:05,360 --> 00:21:09,379
layer application layer but of<font color="#E5E5E5"> course</font>

467
00:21:07,790 --> 00:21:11,990
there's all the transport layer stuff

468
00:21:09,380 --> 00:21:15,790
that automated monitoring can can take

469
00:21:11,990 --> 00:21:18,230
care of like checking the ssl

470
00:21:15,790 --> 00:21:20,710
certificates and protocols and ciphers

471
00:21:18,230 --> 00:21:23,510
and poodle attacks and so and so forth

472
00:21:20,710 --> 00:21:25,550
so we can from a monitoring perspective

473
00:21:23,510 --> 00:21:28,270
make sure that the systems are up to

474
00:21:25,550 --> 00:21:30,770
date the system parameters like

475
00:21:28,270 --> 00:21:34,040
utilization or stuff isn't exceeding

476
00:21:30,770 --> 00:21:35,990
some limits<font color="#E5E5E5"> and we also do check for</font>

477
00:21:34,040 --> 00:21:37,639
updates and<font color="#E5E5E5"> backup in through the</font>

478
00:21:35,990 --> 00:21:40,370
monitoring you have a complete picture

479
00:21:37,640 --> 00:21:42,110
of<font color="#E5E5E5"> a system and also to give the</font>

480
00:21:40,370 --> 00:21:44,479
customer access to that<font color="#E5E5E5"> monitoring and</font>

481
00:21:42,110 --> 00:21:47,110
see what the state is actually of his

482
00:21:44,480 --> 00:21:47,110
application

483
00:21:49,450 --> 00:21:55,330
back up typical disaster recovery

484
00:21:51,370 --> 00:21:58,389
problem right again as right once read

485
00:21:55,330 --> 00:22:00,699
many as possible the that's also you

486
00:21:58,389 --> 00:22:02,199
know if<font color="#CCCCCC"> if there was a</font><font color="#E5E5E5"> compromise to of</font>

487
00:22:00,700 --> 00:22:04,179
<font color="#E5E5E5">course be able to roll back to a known</font>

488
00:22:02,200 --> 00:22:07,029
good state but<font color="#CCCCCC"> also to figure out what</font>

489
00:22:04,179 --> 00:22:09,220
actually was changed and have their some

490
00:22:07,029 --> 00:22:10,980
tamper evidence of the application or

491
00:22:09,220 --> 00:22:13,149
application server if something happens

492
00:22:10,980 --> 00:22:15,880
we don't<font color="#E5E5E5"> want to add the backup to be</font>

493
00:22:13,149 --> 00:22:18,489
changed later except of course it needs

494
00:22:15,880 --> 00:22:20,649
to be<font color="#E5E5E5"> perched or or something if the</font>

495
00:22:18,490 --> 00:22:24,279
customer decides to do that it doesn't

496
00:22:20,649 --> 00:22:25,678
<font color="#E5E5E5">need it anymore we do the back up so</font>

497
00:22:24,279 --> 00:22:27,850
that<font color="#CCCCCC"> the servers are enrolled</font>

498
00:22:25,679 --> 00:22:32,440
automatically by confirmation management

499
00:22:27,850 --> 00:22:34,418
that helps by<font color="#E5E5E5"> there they all the servers</font>

500
00:22:32,440 --> 00:22:36,490
are by default backed up there are no

501
00:22:34,419 --> 00:22:39,190
orphans servers that are oh I don't<font color="#E5E5E5"> know</font>

502
00:22:36,490 --> 00:22:40,840
<font color="#E5E5E5">where it went and of course we can when</font>

503
00:22:39,190 --> 00:22:42,970
it's automated we can make sure<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a</font>

504
00:22:40,840 --> 00:22:45,309
backup target is not in the same data

505
00:22:42,970 --> 00:22:47,980
center or cloud provider or

506
00:22:45,309 --> 00:22:50,620
infrastructure it needs to be so we can

507
00:22:47,980 --> 00:22:53,529
you know cross up to off-site backups

508
00:22:50,620 --> 00:22:56,529
automatically and then we want<font color="#E5E5E5"> to have</font>

509
00:22:53,529 --> 00:23:00,909
to data encrypted both that address that

510
00:22:56,529 --> 00:23:04,480
and at in motion and as<font color="#E5E5E5"> I</font><font color="#CCCCCC"> mentioned</font>

511
00:23:00,909 --> 00:23:06,519
before we monitor that as well version

512
00:23:04,480 --> 00:23:09,190
management we talked<font color="#E5E5E5"> about it</font><font color="#CCCCCC"> earlier</font>

513
00:23:06,519 --> 00:23:11,860
software engineering basic principles

514
00:23:09,190 --> 00:23:15,039
right we use get nowadays you'll

515
00:23:11,860 --> 00:23:18,370
probably know a subversion or CVS before

516
00:23:15,039 --> 00:23:20,679
that both<font color="#CCCCCC"> customer</font><font color="#E5E5E5"> code and fold con</font>

517
00:23:18,370 --> 00:23:23,830
fresh management code and config config

518
00:23:20,679 --> 00:23:26,049
is parameters like credentials stuff

519
00:23:23,830 --> 00:23:28,090
like that it's all<font color="#E5E5E5"> in a repository of</font>

520
00:23:26,049 --> 00:23:31,350
course<font color="#E5E5E5"> with probably with more tighter</font>

521
00:23:28,090 --> 00:23:35,350
restrictions on who can<font color="#E5E5E5"> access that</font>

522
00:23:31,350 --> 00:23:37,389
audit lock mentioned before<font color="#CCCCCC"> there's a</font>

523
00:23:35,350 --> 00:23:41,320
different services you can use for

524
00:23:37,389 --> 00:23:44,320
example for get their shared ones we can

525
00:23:41,320 --> 00:23:47,200
buy a software-as-a-service github is

526
00:23:44,320 --> 00:23:49,629
the most known<font color="#CCCCCC"> bit bucket and get laptop</font>

527
00:23:47,200 --> 00:23:51,519
<font color="#CCCCCC">calm or others there's a ton of services</font>

528
00:23:49,630 --> 00:23:54,899
for that and of course<font color="#E5E5E5"> if you want to</font>

529
00:23:51,519 --> 00:23:58,120
have it internal for either political

530
00:23:54,899 --> 00:23:59,350
company political reasons or if you

531
00:23:58,120 --> 00:24:02,018
don't<font color="#E5E5E5"> want to be down when get up is</font>

532
00:23:59,350 --> 00:24:02,889
down there's different products you can

533
00:24:02,019 --> 00:24:04,810
buy so

534
00:24:02,890 --> 00:24:07,230
and actually get love is free you don't

535
00:24:04,810 --> 00:24:10,210
<font color="#E5E5E5">have to buy</font><font color="#CCCCCC"> it that you can use yourself</font>

536
00:24:07,230 --> 00:24:14,380
<font color="#CCCCCC">on premise or wherever your replication</font>

537
00:24:10,210 --> 00:24:16,750
is is sitting again authentication

538
00:24:14,380 --> 00:24:19,540
authorization through some central

539
00:24:16,750 --> 00:24:21,580
database and since all the developers

540
00:24:19,540 --> 00:24:26,220
have<font color="#E5E5E5"> offline copies and no credentials</font>

541
00:24:21,580 --> 00:24:29,290
in code please or you<font color="#CCCCCC"> will show up in</font>

542
00:24:26,220 --> 00:24:33,940
heck my github com but what is it called

543
00:24:29,290 --> 00:24:39,790
the side anyway continuous integration

544
00:24:33,940 --> 00:24:42,520
um if you didn't know what that was<font color="#CCCCCC"> its</font>

545
00:24:39,790 --> 00:24:45,790
trigger build package doesn't deploy on

546
00:24:42,520 --> 00:24:48,100
each commit we usually<font color="#CCCCCC"> have to target</font>

547
00:24:45,790 --> 00:24:51,790
off the commit and as our target of to

548
00:24:48,100 --> 00:24:55,000
deploy selectable by branch repository

549
00:24:51,790 --> 00:24:57,580
and tag so you can say<font color="#E5E5E5"> okay everybody</font>

550
00:24:55,000 --> 00:24:59,260
can commit to<font color="#E5E5E5"> certain brunch but of</font>

551
00:24:57,580 --> 00:25:02,320
course<font color="#E5E5E5"> it's not a production branch that</font>

552
00:24:59,260 --> 00:25:04,930
only certain or<font color="#CCCCCC"> closed group of people</font>

553
00:25:02,320 --> 00:25:07,270
have access to manual protiv production

554
00:25:04,930 --> 00:25:10,090
releases is a standard continuous

555
00:25:07,270 --> 00:25:14,410
deployment feature like Jenkins has that

556
00:25:10,090 --> 00:25:15,850
all the other tools ever as well and the

557
00:25:14,410 --> 00:25:18,850
<font color="#E5E5E5">only thing that we may need to take care</font>

558
00:25:15,850 --> 00:25:20,740
of is where to put the completed<font color="#E5E5E5"> build</font>

559
00:25:18,850 --> 00:25:22,800
<font color="#E5E5E5">and package artifacts right because if</font>

560
00:25:20,740 --> 00:25:26,680
you can<font color="#E5E5E5"> if you can upload your own</font>

561
00:25:22,800 --> 00:25:30,010
ready-made code to the artifactory

562
00:25:26,680 --> 00:25:31,600
<font color="#CCCCCC">doctor registry or debian or RPM</font>

563
00:25:30,010 --> 00:25:33,879
registry<font color="#E5E5E5"> of course you can own the</font>

564
00:25:31,600 --> 00:25:37,600
application just<font color="#E5E5E5"> by uploading your own</font>

565
00:25:33,880 --> 00:25:40,480
valid looking package there so that<font color="#E5E5E5"> one</font>

566
00:25:37,600 --> 00:25:42,159
needs to<font color="#CCCCCC"> be pretty tight of course it's</font>

567
00:25:40,480 --> 00:25:45,490
much easier when<font color="#E5E5E5"> it's automated from the</font>

568
00:25:42,160 --> 00:25:48,670
from the<font color="#E5E5E5"> code part under assuming the</font>

569
00:25:45,490 --> 00:25:50,740
code<font color="#CCCCCC"> port is secure that one doesn't</font>

570
00:25:48,670 --> 00:25:54,040
<font color="#E5E5E5">need any manual access so it can be</font>

571
00:25:50,740 --> 00:25:55,990
<font color="#E5E5E5">pretty locked down feedback</font><font color="#CCCCCC"> to status</font>

572
00:25:54,040 --> 00:26:00,430
and authentication of course central

573
00:25:55,990 --> 00:26:02,680
again<font color="#E5E5E5"> okay so what kind of automated</font>

574
00:26:00,430 --> 00:26:07,590
testing and what is<font color="#E5E5E5"> the sector a</font>

575
00:26:02,680 --> 00:26:10,030
security relevant right it's both<font color="#CCCCCC"> a</font>

576
00:26:07,590 --> 00:26:12,639
security as in availability problem of

577
00:26:10,030 --> 00:26:16,240
<font color="#E5E5E5">course if developer uploads code that's</font>

578
00:26:12,640 --> 00:26:16,720
not syntax confirm conformant you gonna

579
00:26:16,240 --> 00:26:18,760
have a bad

580
00:26:16,720 --> 00:26:22,750
time especially for interpreted

581
00:26:18,760 --> 00:26:24,870
languages so of course<font color="#E5E5E5"> when you do that</font>

582
00:26:22,750 --> 00:26:28,120
you can also check for<font color="#E5E5E5"> a coding style</font>

583
00:26:24,870 --> 00:26:32,408
and do some static code analysis to<font color="#E5E5E5"> find</font>

584
00:26:28,120 --> 00:26:34,178
some obvious box that is pretty well<font color="#CCCCCC"> I</font>

585
00:26:32,409 --> 00:26:36,520
call<font color="#E5E5E5"> it low maintenance right because</font>

586
00:26:34,179 --> 00:26:39,400
it's it's you set it up once and you can

587
00:26:36,520 --> 00:26:42,700
you have some low-hanging fruit get from

588
00:26:39,400 --> 00:26:45,100
there but then of<font color="#E5E5E5"> course unit tests</font>

589
00:26:42,700 --> 00:26:47,980
assuming that<font color="#E5E5E5"> software developers are</font>

590
00:26:45,100 --> 00:26:50,379
good at that rate they have some unit

591
00:26:47,980 --> 00:26:52,720
tests that actually fire if and only if

592
00:26:50,380 --> 00:26:56,320
<font color="#CCCCCC">there's a problem with with changing the</font>

593
00:26:52,720 --> 00:26:58,539
code and then if available and if

594
00:26:56,320 --> 00:27:00,340
there's budget in time functional<font color="#E5E5E5"> tests</font>

595
00:26:58,539 --> 00:27:03,730
so basically do a test deployment of the

596
00:27:00,340 --> 00:27:07,470
<font color="#E5E5E5">whole application with each commit or at</font>

597
00:27:03,730 --> 00:27:10,030
least of each tax reliefs and check that

598
00:27:07,470 --> 00:27:13,230
and that can go just checking whether

599
00:27:10,030 --> 00:27:15,940
whether it runs or go deeper like make

600
00:27:13,230 --> 00:27:17,770
test requests and check that the answer

601
00:27:15,940 --> 00:27:21,880
actually<font color="#E5E5E5"> matches what you what you have</font>

602
00:27:17,770 --> 00:27:23,740
in your test data database there we were

603
00:27:21,880 --> 00:27:25,419
thinking<font color="#CCCCCC"> about maybe</font><font color="#E5E5E5"> also implementing</font>

604
00:27:23,740 --> 00:27:27,340
some security checks on the functional

605
00:27:25,419 --> 00:27:30,580
level so for<font color="#E5E5E5"> example for each tech</font>

606
00:27:27,340 --> 00:27:32,470
release automatically run common

607
00:27:30,580 --> 00:27:35,049
scanners nein ich to our SQL map against

608
00:27:32,470 --> 00:27:36,750
the deployed application and then of

609
00:27:35,049 --> 00:27:40,270
course<font color="#E5E5E5"> there's going to be huge you know</font>

610
00:27:36,750 --> 00:27:44,320
list of output but I mean what could be

611
00:27:40,270 --> 00:27:46,658
feasible there is to have a to have a of

612
00:27:44,320 --> 00:27:49,539
course when you do a regular pen test or

613
00:27:46,659 --> 00:27:52,120
at least inspection of the software<font color="#CCCCCC"> you</font>

614
00:27:49,539 --> 00:27:55,600
know declare an output of one of those

615
00:27:52,120 --> 00:27:57,969
tools as<font color="#E5E5E5"> ok or acceptable and then when</font>

616
00:27:55,600 --> 00:28:02,520
there's changes to that so if there's

617
00:27:57,970 --> 00:28:04,960
new stuff popping up then alert the

618
00:28:02,520 --> 00:28:07,240
developers that ok now you change

619
00:28:04,960 --> 00:28:09,580
something that actually is very visible

620
00:28:07,240 --> 00:28:11,770
to scanners outside maybe you should

621
00:28:09,580 --> 00:28:14,309
<font color="#CCCCCC">have a look at</font><font color="#E5E5E5"> that and ok if it's</font>

622
00:28:11,770 --> 00:28:14,309
really<font color="#E5E5E5"> ok</font>

623
00:28:16,970 --> 00:28:21,950
databases and back ends now we're going

624
00:28:19,100 --> 00:28:24,110
maybe a<font color="#E5E5E5"> little bit away from the from</font>

625
00:28:21,950 --> 00:28:29,210
<font color="#CCCCCC">the software engineering problems</font>

626
00:28:24,110 --> 00:28:32,510
there's a ton of different<font color="#E5E5E5"> backends and</font>

627
00:28:29,210 --> 00:28:34,730
and other ready-made software standard

628
00:28:32,510 --> 00:28:37,908
software that that the applications need

629
00:28:34,730 --> 00:28:41,539
and depend on there's a<font color="#E5E5E5"> lot a lot of</font>

630
00:28:37,909 --> 00:28:44,840
open unsecured unpatched versions of

631
00:28:41,539 --> 00:28:46,970
<font color="#E5E5E5">those up out in internet showdown is</font>

632
00:28:44,840 --> 00:28:49,309
your friend Brett is I think<font color="#E5E5E5"> was the</font>

633
00:28:46,970 --> 00:28:51,980
last one to be pretty wide open<font color="#CCCCCC"> and</font>

634
00:28:49,309 --> 00:28:53,539
honest<font color="#CCCCCC"> Takeda taxes and stuff</font><font color="#E5E5E5"> but of</font>

635
00:28:51,980 --> 00:28:56,870
course all the others<font color="#CCCCCC"> have had their had</font>

636
00:28:53,539 --> 00:28:59,470
their problems as well so it's really

637
00:28:56,870 --> 00:29:01,549
really important to have an up-to-date

638
00:28:59,470 --> 00:29:03,140
confirmation management template for

639
00:29:01,549 --> 00:29:06,679
them that<font color="#E5E5E5"> basically provides them with</font>

640
00:29:03,140 --> 00:29:09,380
the same config which usually is not a

641
00:29:06,679 --> 00:29:11,179
default config and then you can add all

642
00:29:09,380 --> 00:29:12,740
the clustering credential management

643
00:29:11,179 --> 00:29:14,600
fireable complete backup convict

644
00:29:12,740 --> 00:29:17,720
monitoring config to that template and

645
00:29:14,600 --> 00:29:19,699
so each time you need a<font color="#E5E5E5"> whatever mysql</font>

646
00:29:17,720 --> 00:29:21,530
service or whatever<font color="#E5E5E5"> it's set</font><font color="#CCCCCC"> up the</font>

647
00:29:19,700 --> 00:29:23,929
right way<font color="#CCCCCC"> and if you change the template</font>

648
00:29:21,530 --> 00:29:26,149
once you can actually update all the

649
00:29:23,929 --> 00:29:27,740
instances that you're using if there's a

650
00:29:26,150 --> 00:29:32,200
problem or you need to deactivate or

651
00:29:27,740 --> 00:29:37,580
activate some sort of attribute for them

652
00:29:32,200 --> 00:29:39,559
and moving up the sack from the back

653
00:29:37,580 --> 00:29:41,780
ends to the<font color="#E5E5E5"> theory application service</font>

654
00:29:39,559 --> 00:29:44,120
<font color="#E5E5E5">it's it's basically the</font><font color="#CCCCCC"> same thing</font><font color="#E5E5E5"> right</font>

655
00:29:41,780 --> 00:29:47,360
there's a ton of different environments

656
00:29:44,120 --> 00:29:49,280
of course we as a more service provider

657
00:29:47,360 --> 00:29:52,399
oriented people we have<font color="#E5E5E5"> a lot of</font>

658
00:29:49,280 --> 00:29:54,200
different<font color="#E5E5E5"> ones if you only have one</font>

659
00:29:52,400 --> 00:29:56,780
application and usually you only need to

660
00:29:54,200 --> 00:29:59,929
<font color="#E5E5E5">focus on one of those but then again</font>

661
00:29:56,780 --> 00:30:01,280
we've been seeing that when when

662
00:29:59,929 --> 00:30:03,140
companies moved to<font color="#CCCCCC"> micro servers</font>

663
00:30:01,280 --> 00:30:05,210
architectures that means that<font color="#E5E5E5"> each team</font>

664
00:30:03,140 --> 00:30:06,830
has their own small code base of

665
00:30:05,210 --> 00:30:09,140
whatever part<font color="#E5E5E5"> of the applications are</font>

666
00:30:06,830 --> 00:30:11,090
implementing some of them actually are

667
00:30:09,140 --> 00:30:12,860
allowed to<font color="#E5E5E5"> choose their own programming</font>

668
00:30:11,090 --> 00:30:15,230
language for<font color="#CCCCCC"> example or framework for</font>

669
00:30:12,860 --> 00:30:16,580
example and so then again yo where you

670
00:30:15,230 --> 00:30:19,820
start having multiple different

671
00:30:16,580 --> 00:30:22,010
environments<font color="#E5E5E5"> of whatever java and</font><font color="#CCCCCC"> bitin</font>

672
00:30:19,820 --> 00:30:24,770
and<font color="#E5E5E5"> Ruby and whatnot there's going to be</font>

673
00:30:22,010 --> 00:30:27,289
around so there again the templating can

674
00:30:24,770 --> 00:30:30,620
make sense to hide some of that

675
00:30:27,289 --> 00:30:34,400
complexity and security relevancy

676
00:30:30,620 --> 00:30:39,080
in there and also<font color="#E5E5E5"> for completeness the</font>

677
00:30:34,400 --> 00:30:43,700
<font color="#CCCCCC">12 fact rap manifesto who knows it who</font>

678
00:30:39,080 --> 00:30:47,780
has heard about it about fifteen percent

679
00:30:43,700 --> 00:30:50,270
twenty percent max so that's a that's

680
00:30:47,780 --> 00:30:52,940
the well microservice that's the

681
00:30:50,270 --> 00:30:58,460
operations<font color="#E5E5E5"> experience system</font>

682
00:30:52,940 --> 00:31:00,800
architecture manifesto that that's been

683
00:30:58,460 --> 00:31:03,110
very<font color="#CCCCCC"> popular please</font><font color="#E5E5E5"> have a look at it</font>

684
00:31:00,800 --> 00:31:04,520
<font color="#CCCCCC">it's it's very it's there's different</font>

685
00:31:03,110 --> 00:31:06,919
stuff you know make<font color="#CCCCCC"> sure that you don't</font>

686
00:31:04,520 --> 00:31:09,950
<font color="#E5E5E5">have side effects make sure that your</font>

687
00:31:06,920 --> 00:31:12,710
application is deployable atomically all

688
00:31:09,950 --> 00:31:15,250
that kind of stuff on one of the pretty

689
00:31:12,710 --> 00:31:17,900
cool things that<font color="#E5E5E5"> it proposes is that</font>

690
00:31:15,250 --> 00:31:20,150
instead of hard-coding credentials in

691
00:31:17,900 --> 00:31:21,830
code instead of providing them in a

692
00:31:20,150 --> 00:31:25,100
config file that you need to put

693
00:31:21,830 --> 00:31:26,689
somewhere or in application when you

694
00:31:25,100 --> 00:31:29,149
start<font color="#E5E5E5"> it from the command line in some</font>

695
00:31:26,690 --> 00:31:33,850
sort of argument where you can see it

696
00:31:29,150 --> 00:31:36,320
when<font color="#CCCCCC"> you</font><font color="#E5E5E5"> run PS forex provide them as</font>

697
00:31:33,850 --> 00:31:40,370
environment variables like for example

698
00:31:36,320 --> 00:31:42,770
docker does because then there you can

699
00:31:40,370 --> 00:31:44,600
start with each invocation of an

700
00:31:42,770 --> 00:31:47,330
application you can start it with

701
00:31:44,600 --> 00:31:49,129
different endpoints for the for the

702
00:31:47,330 --> 00:31:51,649
backhands and that of course helps you a

703
00:31:49,130 --> 00:31:53,510
lot if you have to deploy multiple times

704
00:31:51,650 --> 00:31:56,510
for testing and development and

705
00:31:53,510 --> 00:31:59,420
production and whatnot have a look at

706
00:31:56,510 --> 00:32:01,179
<font color="#E5E5E5">that if you haven't</font><font color="#CCCCCC"> already and then of</font>

707
00:31:59,420 --> 00:32:04,490
course in<font color="#E5E5E5"> addition to all the</font>

708
00:32:01,179 --> 00:32:08,510
application servers is a ton<font color="#CCCCCC"> of stuff</font>

709
00:32:04,490 --> 00:32:11,090
around that web servers cache servers

710
00:32:08,510 --> 00:32:16,250
<font color="#CCCCCC">not security</font><font color="#E5E5E5"> thanks Christian for talk</font>

711
00:32:11,090 --> 00:32:18,709
this morning<font color="#CCCCCC"> H a proxy then all kinds of</font>

712
00:32:16,250 --> 00:32:21,620
VPN stuff open<font color="#E5E5E5"> with them being maybe the</font>

713
00:32:18,710 --> 00:32:24,800
most popular I've mentioned iptables

714
00:32:21,620 --> 00:32:26,899
before and then all the failover stuff

715
00:32:24,800 --> 00:32:29,840
that's needed<font color="#CCCCCC"> to if something goes down</font>

716
00:32:26,900 --> 00:32:32,090
like pacemaker keep alive d that's<font color="#CCCCCC"> what</font>

717
00:32:29,840 --> 00:32:34,309
<font color="#CCCCCC">girls call our components that you</font>

718
00:32:32,090 --> 00:32:36,409
usually need<font color="#CCCCCC"> in</font><font color="#E5E5E5"> once or twice or thrice</font>

719
00:32:34,309 --> 00:32:40,280
somewhere and that's so much easier if

720
00:32:36,410 --> 00:32:41,810
it's automated so let<font color="#E5E5E5"> me make you</font><font color="#CCCCCC"> know I</font>

721
00:32:40,280 --> 00:32:44,950
have an example<font color="#E5E5E5"> for you so that's</font>

722
00:32:41,810 --> 00:32:44,950
<font color="#E5E5E5">something to look at</font>

723
00:32:46,570 --> 00:32:54,110
customer case one is a<font color="#CCCCCC"> me we call</font><font color="#E5E5E5"> it a</font>

724
00:32:50,510 --> 00:32:57,860
big hosting right it's basically PHP

725
00:32:54,110 --> 00:32:59,510
<font color="#E5E5E5">MySQL with multiple different PHP</font>

726
00:32:57,860 --> 00:33:01,580
version and they have cache server

727
00:32:59,510 --> 00:33:04,100
Barnidge and then they have a ton of

728
00:33:01,580 --> 00:33:06,139
backends that in in addition<font color="#CCCCCC"> to</font><font color="#E5E5E5"> mysql</font>

729
00:33:04,100 --> 00:33:09,560
memcache tea ready solar and elastic

730
00:33:06,140 --> 00:33:12,910
search for for all the indexing then

731
00:33:09,560 --> 00:33:17,419
they use<font color="#CCCCCC"> a application deployment with</font>

732
00:33:12,910 --> 00:33:20,720
<font color="#CCCCCC">ansible and actually they only use it at</font>

733
00:33:17,420 --> 00:33:24,020
does<font color="#E5E5E5"> that is the</font><font color="#CCCCCC"> Jenkins user that then</font>

734
00:33:20,720 --> 00:33:27,140
deploy uses ansible as a better cluster

735
00:33:24,020 --> 00:33:30,379
<font color="#E5E5E5">SSH to deploy into all the application</font>

736
00:33:27,140 --> 00:33:33,490
service the same<font color="#CCCCCC"> codebase the</font><font color="#E5E5E5"> the other</font>

737
00:33:30,380 --> 00:33:36,110
stuff is managed by pop but in that case

738
00:33:33,490 --> 00:33:39,560
basically so that puppet maintains the

739
00:33:36,110 --> 00:33:42,169
state and ansibles used to do updates or

740
00:33:39,560 --> 00:33:45,260
changes or anything that's an interrupt

741
00:33:42,170 --> 00:33:48,770
basically in addition<font color="#CCCCCC"> to all of that</font>

742
00:33:45,260 --> 00:33:52,040
then there's a<font color="#E5E5E5"> a docker image for local</font>

743
00:33:48,770 --> 00:33:53,629
testing probably at some point it's

744
00:33:52,040 --> 00:33:55,639
feasible that it might be<font color="#CCCCCC"> used for</font>

745
00:33:53,630 --> 00:33:57,770
production as well but<font color="#E5E5E5"> a docker image is</font>

746
00:33:55,640 --> 00:34:01,190
much more lightweight than to pull a

747
00:33:57,770 --> 00:34:04,490
whole image of<font color="#E5E5E5"> vagrant VirtualBox down</font>

748
00:34:01,190 --> 00:34:08,440
to each developers disk so they've opted

749
00:34:04,490 --> 00:34:11,060
to to use that and so let me show you a

750
00:34:08,440 --> 00:34:12,649
<font color="#E5E5E5">small system diagram I have no idea</font>

751
00:34:11,060 --> 00:34:14,840
<font color="#E5E5E5">whether you guys in the back you can</font>

752
00:34:12,649 --> 00:34:17,870
actually<font color="#E5E5E5"> read that but well there</font>

753
00:34:14,840 --> 00:34:20,750
there's empty seats in the front so that

754
00:34:17,870 --> 00:34:23,569
case is a multi<font color="#CCCCCC"> tory architecture we</font>

755
00:34:20,750 --> 00:34:27,409
have some front-end web server for<font color="#E5E5E5"> SSL</font>

756
00:34:23,570 --> 00:34:30,639
and<font color="#E5E5E5"> varnish for caching and then the</font>

757
00:34:27,409 --> 00:34:33,139
varnish just load balancing over some

758
00:34:30,639 --> 00:34:34,940
application servers<font color="#E5E5E5"> I think the biggest</font>

759
00:34:33,139 --> 00:34:38,179
<font color="#E5E5E5">cluster they have it's about five</font>

760
00:34:34,940 --> 00:34:39,830
application service at the time and then

761
00:34:38,179 --> 00:34:43,220
that each application server has an

762
00:34:39,830 --> 00:34:45,949
engine<font color="#CCCCCC"> X web server again which in feeds</font>

763
00:34:43,219 --> 00:34:47,689
their requests to the php-fpm which the

764
00:34:45,949 --> 00:34:50,178
customer then can choose themselves in a

765
00:34:47,690 --> 00:34:53,720
yellow file but<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> version five six or</font>

766
00:34:50,179 --> 00:34:56,570
<font color="#E5E5E5">seven they have some standard libraries</font>

767
00:34:53,719 --> 00:34:57,350
like<font color="#CCCCCC"> gip near a lake and stuff and then</font>

768
00:34:56,570 --> 00:34:59,750
feed both

769
00:34:57,350 --> 00:35:01,569
the web server logs from from<font color="#CCCCCC"> the</font>

770
00:34:59,750 --> 00:35:04,550
<font color="#CCCCCC">observer of course</font><font color="#E5E5E5"> from fronting as well</font>

771
00:35:01,570 --> 00:35:09,470
plus than the old application logs to a

772
00:35:04,550 --> 00:35:12,470
central lk is a log stash server so that

773
00:35:09,470 --> 00:35:14,600
they can give<font color="#CCCCCC"> Jeffers axis access to</font>

774
00:35:12,470 --> 00:35:18,560
that and then for all the back ends

775
00:35:14,600 --> 00:35:20,779
there's a<font color="#E5E5E5"> MySQL Maria DB cluster which</font>

776
00:35:18,560 --> 00:35:23,900
is low plans we are max scale DB proxy

777
00:35:20,780 --> 00:35:26,570
<font color="#CCCCCC">the nav some ready</font><font color="#E5E5E5"> is some solar and</font>

778
00:35:23,900 --> 00:35:30,320
then for files they use a redundant NFS

779
00:35:26,570 --> 00:35:33,800
set up basically so that they have at

780
00:35:30,320 --> 00:35:35,960
<font color="#CCCCCC">least a failover and so this this setup</font>

781
00:35:33,800 --> 00:35:37,580
is then<font color="#E5E5E5"> deployed all over the world in</font>

782
00:35:35,960 --> 00:35:42,920
that case they have stuff in<font color="#E5E5E5"> Switzerland</font>

783
00:35:37,580 --> 00:35:46,370
South Africa China and the US so that's

784
00:35:42,920 --> 00:35:48,290
a pretty pretty standard<font color="#CCCCCC"> setup that they</font>

785
00:35:46,370 --> 00:35:52,210
can now instantiate as many times as

786
00:35:48,290 --> 00:35:56,150
they<font color="#CCCCCC"> actually need another case that's</font>

787
00:35:52,210 --> 00:35:59,240
has been taking a lot of our time is an

788
00:35:56,150 --> 00:36:02,300
open shift<font color="#E5E5E5"> platform-as-a-service open</font>

789
00:35:59,240 --> 00:36:04,250
shift as<font color="#E5E5E5"> you might know is a open source</font>

790
00:36:02,300 --> 00:36:06,490
project from<font color="#CCCCCC"> brad head of course there's</font>

791
00:36:04,250 --> 00:36:10,550
an enterprise version of it that

792
00:36:06,490 --> 00:36:14,720
internally uses<font color="#CCCCCC"> kooban a days the</font><font color="#E5E5E5"> Google</font>

793
00:36:10,550 --> 00:36:19,460
open source to that again manages the

794
00:36:14,720 --> 00:36:20,720
different docker containers and it's on

795
00:36:19,460 --> 00:36:22,400
a present open source so you can

796
00:36:20,720 --> 00:36:24,200
download<font color="#E5E5E5"> it yourself and run it on your</font>

797
00:36:22,400 --> 00:36:26,720
laptop if you want to but<font color="#CCCCCC"> you can also</font>

798
00:36:24,200 --> 00:36:30,649
have a enterprise support if you<font color="#E5E5E5"> want to</font>

799
00:36:26,720 --> 00:36:33,560
have that as a production backup we do

800
00:36:30,650 --> 00:36:37,130
it<font color="#E5E5E5"> for a pool at CH that's a switch so</font>

801
00:36:33,560 --> 00:36:39,680
its platform as a service and<font color="#E5E5E5"> we're also</font>

802
00:36:37,130 --> 00:36:44,570
building it in the EU and the<font color="#CCCCCC"> u.s. on</font>

803
00:36:39,680 --> 00:36:46,460
AWS actually enterprising premise is

804
00:36:44,570 --> 00:36:50,000
probably something that's going to<font color="#E5E5E5"> be</font>

805
00:36:46,460 --> 00:36:51,350
happening as well so that's that's the

806
00:36:50,000 --> 00:36:56,150
whole point of automating this setup

807
00:36:51,350 --> 00:36:57,770
right just a short intro what is open

808
00:36:56,150 --> 00:37:01,870
shift in how does it work or what does

809
00:36:57,770 --> 00:37:04,220
he do open shift as<font color="#E5E5E5"> I mentioned is the</font>

810
00:37:01,870 --> 00:37:07,430
wrapper around two coordinators and

811
00:37:04,220 --> 00:37:09,890
darker thingy so basically it<font color="#CCCCCC"> Maps part</font>

812
00:37:07,430 --> 00:37:11,169
of the workflow that we saw earlier into

813
00:37:09,890 --> 00:37:13,839
<font color="#CCCCCC">whole into the whole</font>

814
00:37:11,170 --> 00:37:16,780
<font color="#E5E5E5">thing so basically</font><font color="#CCCCCC"> you have a git</font>

815
00:37:13,839 --> 00:37:20,140
repository with with your code the good

816
00:37:16,780 --> 00:37:23,049
news is<font color="#E5E5E5"> you can notify</font><font color="#CCCCCC"> openshift</font><font color="#E5E5E5"> API for</font>

817
00:37:20,140 --> 00:37:25,868
each commit and then<font color="#E5E5E5"> the open shift</font>

818
00:37:23,049 --> 00:37:29,650
basically takes the code takes an empty

819
00:37:25,869 --> 00:37:33,190
<font color="#E5E5E5">container and makes a release out of</font>

820
00:37:29,650 --> 00:37:35,109
that that put it in a maybe<font color="#E5E5E5"> you won't</font>

821
00:37:33,190 --> 00:37:38,170
able<font color="#E5E5E5"> it's a forklift there you can zoom</font>

822
00:37:35,109 --> 00:37:41,859
in and then you have<font color="#E5E5E5"> to PDF and then</font>

823
00:37:38,170 --> 00:37:43,660
chips the the container give sequent the

824
00:37:41,859 --> 00:37:45,069
container to coupon a days and then

825
00:37:43,660 --> 00:37:47,710
<font color="#CCCCCC">kubin a</font><font color="#E5E5E5"> days manages the docker</font>

826
00:37:45,069 --> 00:37:51,308
containers as in deploys a new version

827
00:37:47,710 --> 00:37:54,430
deploys the new version those rolling

828
00:37:51,309 --> 00:37:56,710
deployments so deploys a one new version

829
00:37:54,430 --> 00:37:58,390
kills one old version deploys the second

830
00:37:56,710 --> 00:38:00,250
new version kills another new version

831
00:37:58,390 --> 00:38:04,058
and so you can<font color="#E5E5E5"> have upgrades and updates</font>

832
00:38:00,250 --> 00:38:06,180
without without any downtime if it all

833
00:38:04,059 --> 00:38:09,250
works if it doesn't<font color="#CCCCCC"> then it rolls back</font>

834
00:38:06,180 --> 00:38:11,890
so that's<font color="#E5E5E5"> just a short intro what is</font>

835
00:38:09,250 --> 00:38:17,819
open shift and how it all fits together

836
00:38:11,890 --> 00:38:23,379
in this in this pipeline any questions

837
00:38:17,819 --> 00:38:27,160
that's the marketing slide that's

838
00:38:23,380 --> 00:38:29,400
<font color="#E5E5E5">basically it so I'm</font><font color="#CCCCCC"> very open to discuss</font>

839
00:38:27,160 --> 00:38:29,399
further

840
00:38:33,650 --> 00:38:39,510
testing yay so you brought up an

841
00:38:37,410 --> 00:38:41,609
interesting problem which is secrets

842
00:38:39,510 --> 00:38:44,339
management and one of the solutions

843
00:38:41,609 --> 00:38:47,160
being the environmental variables and

844
00:38:44,339 --> 00:38:49,529
wondering<font color="#E5E5E5"> you comment about some other</font>

845
00:38:47,160 --> 00:38:53,098
alternatives<font color="#CCCCCC"> such as secrets management</font>

846
00:38:49,530 --> 00:38:55,500
servers such as Walt yep etc for for

847
00:38:53,099 --> 00:38:57,900
DevOps yeah we were thinking<font color="#CCCCCC"> oh we were</font>

848
00:38:55,500 --> 00:39:00,480
thinking<font color="#CCCCCC"> about using bold as the</font><font color="#E5E5E5"> backend</font>

849
00:38:57,900 --> 00:39:02,010
to manage the secrets actually so Walt

850
00:39:00,480 --> 00:39:04,410
is a soft piece of software if you don't

851
00:39:02,010 --> 00:39:06,930
know it that basically is a very<font color="#E5E5E5"> locked</font>

852
00:39:04,410 --> 00:39:09,180
<font color="#E5E5E5">down small application there's a RESTful</font>

853
00:39:06,930 --> 00:39:11,578
API where you can request<font color="#E5E5E5"> a credential</font>

854
00:39:09,180 --> 00:39:13,049
and then if your certificate matches and

855
00:39:11,579 --> 00:39:15,390
<font color="#E5E5E5">if you're allowed to and so on so</font><font color="#CCCCCC"> forth</font>

856
00:39:13,049 --> 00:39:17,900
gives you back a credential and for

857
00:39:15,390 --> 00:39:20,520
certain<font color="#CCCCCC"> services you can even</font><font color="#E5E5E5"> generate</font>

858
00:39:17,900 --> 00:39:22,799
credentials on the fly<font color="#E5E5E5"> so that you have</font>

859
00:39:20,520 --> 00:39:25,380
you know key<font color="#E5E5E5"> roll over and all those</font>

860
00:39:22,799 --> 00:39:28,410
kind<font color="#CCCCCC"> of process integrated to that the</font>

861
00:39:25,380 --> 00:39:31,109
problem with with vault as an example or

862
00:39:28,410 --> 00:39:33,089
other existences it needs a changes in

863
00:39:31,109 --> 00:39:36,779
the applications<font color="#CCCCCC"> that application needs</font>

864
00:39:33,089 --> 00:39:39,029
<font color="#E5E5E5">to go and request a credential for the</font>

865
00:39:36,779 --> 00:39:40,740
mask you service or whatever so if you

866
00:39:39,029 --> 00:39:42,480
were able<font color="#E5E5E5"> to do that then it's no</font>

867
00:39:40,740 --> 00:39:44,459
problem that<font color="#E5E5E5"> involved it's just yet</font>

868
00:39:42,480 --> 00:39:47,609
another<font color="#CCCCCC"> back-end</font><font color="#E5E5E5"> basically for your</font>

869
00:39:44,460 --> 00:39:50,720
application and then<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> just as secure</font>

870
00:39:47,609 --> 00:39:53,460
as possible or as lockdown as possible

871
00:39:50,720 --> 00:39:56,910
another another back and basically if

872
00:39:53,460 --> 00:40:00,029
that doesn't work or two to do a service

873
00:39:56,910 --> 00:40:04,160
discovery where is the<font color="#E5E5E5"> walt service API</font>

874
00:40:00,029 --> 00:40:07,109
you need to input that by some<font color="#E5E5E5"> means</font>

875
00:40:04,160 --> 00:40:10,440
<font color="#E5E5E5">there the environment variable is</font><font color="#CCCCCC"> a very</font>

876
00:40:07,109 --> 00:40:17,339
very quick and painless way does it

877
00:40:10,440 --> 00:40:19,980
<font color="#E5E5E5">answer your question so you concern is</font>

878
00:40:17,339 --> 00:40:25,400
security you showed a lot of measures

879
00:40:19,980 --> 00:40:28,079
you've integrated in<font color="#E5E5E5"> the whole lifecycle</font>

880
00:40:25,400 --> 00:40:31,799
prevention measures other<font color="#E5E5E5"> measures like</font>

881
00:40:28,079 --> 00:40:34,200
backups logs for afterwards if something

882
00:40:31,799 --> 00:40:37,349
happens but<font color="#E5E5E5"> what kind of measures you</font>

883
00:40:34,200 --> 00:40:43,390
have to get alarmed of a security breach

884
00:40:37,349 --> 00:40:45,640
or something there's just

885
00:40:43,390 --> 00:40:49,359
well excellent<font color="#E5E5E5"> questions and I mean</font>

886
00:40:45,640 --> 00:40:52,420
that's the that's the pain of being in

887
00:40:49,359 --> 00:40:54,190
<font color="#CCCCCC">the in the defense side right I mean we</font>

888
00:40:52,420 --> 00:40:56,980
have lots of<font color="#E5E5E5"> logs we have lots of stuff</font>

889
00:40:54,190 --> 00:40:59,140
that<font color="#E5E5E5"> we try to filter out of the logs if</font>

890
00:40:56,980 --> 00:41:02,440
something changes but nobody committed

891
00:40:59,140 --> 00:41:06,848
something that's that's a sign there is

892
00:41:02,440 --> 00:41:09,789
a lot of<font color="#CCCCCC"> host</font><font color="#E5E5E5"> IPS tripwire all those</font>

893
00:41:06,849 --> 00:41:12,430
kind<font color="#E5E5E5"> of stuff there's stuff that we can</font>

894
00:41:09,789 --> 00:41:14,680
try to do like duty application code if

895
00:41:12,430 --> 00:41:17,859
it's in interpreted language<font color="#CCCCCC"> read-only</font>

896
00:41:14,680 --> 00:41:19,569
<font color="#E5E5E5">like darker does for example that again</font>

897
00:41:17,859 --> 00:41:21,578
if somebody<font color="#E5E5E5"> charged still tries to</font>

898
00:41:19,569 --> 00:41:24,730
access or<font color="#E5E5E5"> write stuff then we can be</font>

899
00:41:21,579 --> 00:41:26,200
alerted<font color="#E5E5E5"> there is there's all those kinds</font>

900
00:41:24,730 --> 00:41:28,450
of stuff<font color="#E5E5E5"> when</font><font color="#CCCCCC"> we try to feed them into</font>

901
00:41:26,200 --> 00:41:30,399
either the logging or the metric side

902
00:41:28,450 --> 00:41:36,848
and then configure your monitoring to

903
00:41:30,400 --> 00:41:39,670
alert alert stuff thank you have you had

904
00:41:36,849 --> 00:41:41,710
a look at tools that you can<font color="#E5E5E5"> plug into</font>

905
00:41:39,670 --> 00:41:43,269
the continuous integration cycle to make

906
00:41:41,710 --> 00:41:45,220
it easier<font color="#E5E5E5"> to test for security</font>

907
00:41:43,269 --> 00:41:48,490
vulnerabilities for example i'm thinking

908
00:41:45,220 --> 00:41:51,098
like most dependency check to check for

909
00:41:48,490 --> 00:41:53,379
library dependencies or<font color="#CCCCCC"> i'm thinking</font>

910
00:41:51,099 --> 00:41:55,779
<font color="#CCCCCC">about continuous security frameworks</font>

911
00:41:53,380 --> 00:41:58,420
like gauntlet or PDT security do you

912
00:41:55,779 --> 00:42:02,759
have any comments on these kinds of

913
00:41:58,420 --> 00:42:02,759
tools<font color="#E5E5E5"> I've personally not use them</font>

914
00:42:02,819 --> 00:42:08,308
thinking<font color="#E5E5E5"> about them I wouldn't remember</font>

915
00:42:05,589 --> 00:42:10,960
any of our customers requesting

916
00:42:08,309 --> 00:42:14,019
integration of such a tool into the

917
00:42:10,960 --> 00:42:15,250
continuous integration process where we

918
00:42:14,019 --> 00:42:16,808
manage the process for them if they

919
00:42:15,250 --> 00:42:20,619
mention themselves it might be that<font color="#CCCCCC"> I</font>

920
00:42:16,809 --> 00:42:23,589
<font color="#E5E5E5">don't know that's why I'm speaking here</font>

921
00:42:20,619 --> 00:42:25,900
to get to discussion rolling in what are

922
00:42:23,589 --> 00:42:28,690
<font color="#E5E5E5">their what tools and measures do you use</font>

923
00:42:25,900 --> 00:42:30,599
<font color="#CCCCCC">for both black box and white pocket</font>

924
00:42:28,690 --> 00:42:33,819
texting it would be suitable for

925
00:42:30,599 --> 00:42:36,849
continuously applying over and over

926
00:42:33,819 --> 00:42:39,299
again to detect changing stuff as early

927
00:42:36,849 --> 00:42:39,299
<font color="#CCCCCC">as</font><font color="#E5E5E5"> possible</font>

928
00:42:44,060 --> 00:42:48,900
what is your strategy for instant

929
00:42:47,130 --> 00:42:52,410
response assuming your machines were

930
00:42:48,900 --> 00:42:56,970
breached for forensics let's say that's

931
00:42:52,410 --> 00:43:00,720
an old whole<font color="#CCCCCC"> lotta talk I've got the 10</font>

932
00:42:56,970 --> 00:43:07,200
minute warning already let's discuss

933
00:43:00,720 --> 00:43:09,660
this ought to be<font color="#E5E5E5"> okay thank you are</font><font color="#CCCCCC"> know</font>

934
00:43:07,200 --> 00:43:12,960
for<font color="#CCCCCC"> a very comprehensive talk what I</font>

935
00:43:09,660 --> 00:43:15,990
like about your talk was not only

936
00:43:12,960 --> 00:43:17,730
mentioning modsecurity of course I think

937
00:43:15,990 --> 00:43:21,060
vision is a company which is<font color="#E5E5E5"> really</font>

938
00:43:17,730 --> 00:43:23,070
walking the talk so you're really<font color="#E5E5E5"> doing</font>

939
00:43:21,060 --> 00:43:25,500
<font color="#CCCCCC">DevOps and we've seen</font><font color="#E5E5E5"> this in a very</font>

940
00:43:23,070 --> 00:43:28,470
<font color="#E5E5E5">nice way in your talk all the different</font>

941
00:43:25,500 --> 00:43:31,110
aspects which you have covered the

942
00:43:28,470 --> 00:43:34,919
question I have<font color="#CCCCCC"> is being</font><font color="#E5E5E5"> a death of</font>

943
00:43:31,110 --> 00:43:38,760
company we've seen<font color="#E5E5E5"> your ELQ stack and we</font>

944
00:43:34,920 --> 00:43:41,490
know if I<font color="#E5E5E5"> manage to inject anything into</font>

945
00:43:38,760 --> 00:43:44,490
your system it<font color="#E5E5E5"> will certainly end up in</font>

946
00:43:41,490 --> 00:43:47,060
a lock<font color="#E5E5E5"> and if i</font><font color="#CCCCCC"> can make sure that the</font>

947
00:43:44,490 --> 00:43:50,279
value of your operation people or

948
00:43:47,060 --> 00:43:53,730
anybody do as everybody's a dev up guy

949
00:43:50,280 --> 00:43:57,960
at your company if<font color="#E5E5E5"> i get</font><font color="#CCCCCC"> you to look at</font>

950
00:43:53,730 --> 00:44:00,510
this request i have a perv a<font color="#E5E5E5"> perfect log</font>

951
00:43:57,960 --> 00:44:03,410
injection attack vector into your

952
00:44:00,510 --> 00:44:06,000
browser absolutely so if you access<font color="#E5E5E5"> s</font>

953
00:44:03,410 --> 00:44:08,970
you get if you get an XSS through the

954
00:44:06,000 --> 00:44:12,030
logging into into the<font color="#E5E5E5"> buff into the</font>

955
00:44:08,970 --> 00:44:15,180
logging to the logging framework front

956
00:44:12,030 --> 00:44:17,640
end and<font color="#E5E5E5"> it gets executed you're gonna</font>

957
00:44:15,180 --> 00:44:19,290
have a bad time that's why you cannot

958
00:44:17,640 --> 00:44:21,660
have a better yeah we all gonna have a

959
00:44:19,290 --> 00:44:23,940
bad time I'll have fun time well that's

960
00:44:21,660 --> 00:44:28,799
true yeah that's that's a real problem

961
00:44:23,940 --> 00:44:30,960
and that's why<font color="#CCCCCC"> kabana the he calls like</font>

962
00:44:28,800 --> 00:44:33,210
<font color="#E5E5E5">JavaScript application that that queries</font>

963
00:44:30,960 --> 00:44:37,109
the log stash I sorry the elastic search

964
00:44:33,210 --> 00:44:39,900
api was recently acquired by<font color="#E5E5E5"> elastic</font>

965
00:44:37,109 --> 00:44:42,060
<font color="#E5E5E5">search the company also to be able to</font>

966
00:44:39,900 --> 00:44:46,410
you know in source that kind of

967
00:44:42,060 --> 00:44:49,560
responsibility and knowing a few people

968
00:44:46,410 --> 00:44:52,500
from elasticsearch<font color="#CCCCCC"> accompany i hope they</font>

969
00:44:49,560 --> 00:44:54,000
have their application security in check

970
00:44:52,500 --> 00:44:55,330
and since it's open source you're all

971
00:44:54,000 --> 00:44:57,400
very<font color="#E5E5E5"> very well</font>

972
00:44:55,330 --> 00:44:59,950
come to have a<font color="#CCCCCC"> look</font><font color="#E5E5E5"> at the code and</font>

973
00:44:57,400 --> 00:45:05,530
proposed changes should they be

974
00:44:59,950 --> 00:45:08,500
necessary you mentioned automated unit

975
00:45:05,530 --> 00:45:10,240
tests do you didn't mention tools so

976
00:45:08,500 --> 00:45:13,900
you've mentioned several other tools<font color="#E5E5E5"> or</font>

977
00:45:10,240 --> 00:45:19,990
like orchestration on occasion do you

978
00:45:13,900 --> 00:45:22,680
use any and do prefer knee we as well as

979
00:45:19,990 --> 00:45:24,879
we mostly use a for example

980
00:45:22,680 --> 00:45:26,109
configuration management tools there is

981
00:45:24,880 --> 00:45:28,720
specific tools for the different

982
00:45:26,110 --> 00:45:33,430
languages there is for<font color="#CCCCCC"> example server</font>

983
00:45:28,720 --> 00:45:35,709
spec and respec respec below something

984
00:45:33,430 --> 00:45:37,720
spec but basically where you can test

985
00:45:35,710 --> 00:45:39,370
for<font color="#E5E5E5"> for is the file there does it</font>

986
00:45:37,720 --> 00:45:42,069
contain the string and that kind of<font color="#E5E5E5"> you</font>

987
00:45:39,370 --> 00:45:44,049
know service stuff is support open those

988
00:45:42,070 --> 00:45:46,030
kind<font color="#E5E5E5"> of stuff</font><font color="#CCCCCC"> to do continuation for the</font>

989
00:45:44,050 --> 00:45:47,680
configuration management and<font color="#CCCCCC"> systems</font>

990
00:45:46,030 --> 00:45:50,560
<font color="#CCCCCC">Stacy I marmont automated security</font>

991
00:45:47,680 --> 00:45:52,569
software honestly so there's two tools

992
00:45:50,560 --> 00:45:56,320
that we<font color="#E5E5E5"> recommend a lot one of them</font>

993
00:45:52,570 --> 00:45:59,950
<font color="#CCCCCC">they're they're</font><font color="#E5E5E5"> both free gauntlet is on</font>

994
00:45:56,320 --> 00:46:02,230
github<font color="#CCCCCC"> it's GA UN TLT it's a bevy of an</font>

995
00:45:59,950 --> 00:46:03,879
automated free open-source security

996
00:46:02,230 --> 00:46:05,350
tests yeah but but more importantly you

997
00:46:03,880 --> 00:46:08,260
can<font color="#E5E5E5"> call any tests that</font><font color="#CCCCCC"> you want for</font>

998
00:46:05,350 --> 00:46:10,180
unit<font color="#E5E5E5"> tests and number two is break man</font>

999
00:46:08,260 --> 00:46:13,330
that<font color="#CCCCCC"> twitter mate it's mostly for</font><font color="#E5E5E5"> Ruby</font>

1000
00:46:10,180 --> 00:46:16,629
environments but it's autumn testing in

1001
00:46:13,330 --> 00:46:18,040
third I guess is do you<font color="#E5E5E5"> know about</font>

1002
00:46:16,630 --> 00:46:19,750
rugged software and rugged<font color="#E5E5E5"> DevOps</font>

1003
00:46:18,040 --> 00:46:21,910
because we're growing a tribe of

1004
00:46:19,750 --> 00:46:24,280
speakers and your content would be very

1005
00:46:21,910 --> 00:46:26,290
good for<font color="#E5E5E5"> that about what soybeans called</font>

1006
00:46:24,280 --> 00:46:28,300
rugged so if we're<font color="#CCCCCC"> our rugged</font><font color="#E5E5E5"> DevOps</font>

1007
00:46:26,290 --> 00:46:30,190
there's basically one day tracks that

1008
00:46:28,300 --> 00:46:32,710
developer conferences<font color="#E5E5E5"> versus security</font>

1009
00:46:30,190 --> 00:46:35,080
conference where we're giving them good

1010
00:46:32,710 --> 00:46:37,770
tool chains like yours yep<font color="#CCCCCC"> ok cool</font>

1011
00:46:35,080 --> 00:46:37,770
thanks<font color="#E5E5E5"> for the input</font>

1012
00:46:39,500 --> 00:46:45,260
I think we have<font color="#E5E5E5"> time for one last</font>

1013
00:46:41,270 --> 00:46:48,070
question we don't apparently or there is

1014
00:46:45,260 --> 00:46:54,140
no no other question any other questions

1015
00:46:48,070 --> 00:46:56,230
time for one more well thank<font color="#E5E5E5"> you very</font>

1016
00:46:54,140 --> 00:46:56,230
much

1017
00:47:04,680 --> 00:47:06,740
you

