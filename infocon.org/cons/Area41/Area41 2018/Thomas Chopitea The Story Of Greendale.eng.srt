1
00:00:02,360 --> 00:00:08,970
hey everyone thanks for attending this

2
00:00:05,520 --> 00:00:10,410
talk after your high sugar lunch I hope

3
00:00:08,970 --> 00:00:12,780
their sugar crush is not gonna hit you

4
00:00:10,410 --> 00:00:17,730
too badly I'm gonna do my best to keep

5
00:00:12,780 --> 00:00:18,600
you awake for this next 4050 minutes why

6
00:00:17,730 --> 00:00:22,470
are you guys here

7
00:00:18,600 --> 00:00:25,130
so this talk will cover a big chunk of

8
00:00:22,470 --> 00:00:27,359
the forensics toolkit we use a at Google

9
00:00:25,130 --> 00:00:29,640
just so you know it's all free and open

10
00:00:27,359 --> 00:00:32,369
source software so my goal here for you

11
00:00:29,640 --> 00:00:35,399
guys is to learn that these tools exist

12
00:00:32,369 --> 00:00:39,540
and also be that see how maybe you could

13
00:00:35,399 --> 00:00:42,149
use them in your own ecosystem because

14
00:00:39,540 --> 00:00:45,570
showing a bunch of slides about tools is

15
00:00:42,149 --> 00:00:47,969
pretty boring I thought I would like can

16
00:00:45,570 --> 00:00:51,140
invent a scenario where these tools are

17
00:00:47,969 --> 00:00:54,030
being used to chase down bad guys and

18
00:00:51,140 --> 00:00:57,480
install the case so we're gonna talk

19
00:00:54,030 --> 00:00:58,129
about gir most of you know gir who knows

20
00:00:57,480 --> 00:01:01,890
gir

21
00:00:58,129 --> 00:01:05,309
awesome who knows about PLAs oh pretty

22
00:01:01,890 --> 00:01:08,820
good who knows about time sketch okay

23
00:01:05,309 --> 00:01:11,220
who knows about DF time wolf ah got you

24
00:01:08,820 --> 00:01:12,839
there that's normal I never talked about

25
00:01:11,220 --> 00:01:16,380
it this is the first talk I do about so

26
00:01:12,840 --> 00:01:18,960
who knows about terenia no one great it

27
00:01:16,380 --> 00:01:23,250
hasn't officially been released yet but

28
00:01:18,960 --> 00:01:25,559
it's there's a repo there so there's an

29
00:01:23,250 --> 00:01:26,729
open-source repo so if you guys have

30
00:01:25,560 --> 00:01:28,650
done your homework you could have maybe

31
00:01:26,729 --> 00:01:31,950
found it but anyways that's a lot of

32
00:01:28,650 --> 00:01:33,570
tools to cover I'm gonna go pretty fast

33
00:01:31,950 --> 00:01:35,400
I guess I don't know we'll see how that

34
00:01:33,570 --> 00:01:36,990
goes but in any case I hope you'll

35
00:01:35,400 --> 00:01:39,150
remember this they will come up

36
00:01:36,990 --> 00:01:43,350
throughout the presentation every word

37
00:01:39,150 --> 00:01:45,420
so why am I giving this talk to you well

38
00:01:43,350 --> 00:01:49,140
the main point is I'm one of the DF time

39
00:01:45,420 --> 00:01:52,799
wolf core developers all these are tools

40
00:01:49,140 --> 00:01:55,549
that are used with our team within our

41
00:01:52,799 --> 00:01:58,439
team and that have been written by us

42
00:01:55,549 --> 00:02:01,950
except for guru who has its own set of

43
00:01:58,439 --> 00:02:03,089
team but in any case I do digital

44
00:02:01,950 --> 00:02:05,130
forensics and Incident Response of

45
00:02:03,090 --> 00:02:08,848
Google and we're in this sweet spot

46
00:02:05,130 --> 00:02:10,829
where we can write our own tools and we

47
00:02:08,848 --> 00:02:13,530
get to use our own tools so we know

48
00:02:10,830 --> 00:02:16,200
exactly what kind of problems we have

49
00:02:13,530 --> 00:02:19,050
we know exactly when our tools don't

50
00:02:16,200 --> 00:02:22,709
work and we know exactly who to ping to

51
00:02:19,050 --> 00:02:24,810
fix bugs so that's pretty cool I love to

52
00:02:22,710 --> 00:02:27,360
write code I hate doing boring

53
00:02:24,810 --> 00:02:30,330
repetitive tasks I like to do forensics

54
00:02:27,360 --> 00:02:32,000
I like to hunt bad guys and if my

55
00:02:30,330 --> 00:02:35,490
mission is try to kind of automate

56
00:02:32,000 --> 00:02:37,620
myself out of a job so all the tools do

57
00:02:35,490 --> 00:02:41,220
the work for me and I can just hang out

58
00:02:37,620 --> 00:02:44,280
with my friends and drink beers so as I

59
00:02:41,220 --> 00:02:45,780
said my goal is not to bore you so let's

60
00:02:44,280 --> 00:02:49,200
start like kind of build your own

61
00:02:45,780 --> 00:02:52,590
adventure with this guy cyber hacker or

62
00:02:49,200 --> 00:02:55,440
whatever so the scenario I'm gonna

63
00:02:52,590 --> 00:02:56,220
showcase today and this is really

64
00:02:55,440 --> 00:02:59,010
important

65
00:02:56,220 --> 00:03:01,650
none of what I'm about to describe is

66
00:02:59,010 --> 00:03:03,959
true except for the demos that you'll

67
00:03:01,650 --> 00:03:08,070
see those are true but the scenario is

68
00:03:03,959 --> 00:03:10,650
completely invented so who's our victim

69
00:03:08,070 --> 00:03:14,130
today our victim today is Greendale

70
00:03:10,650 --> 00:03:16,860
Polytechnic so it's a very famous Swiss

71
00:03:14,130 --> 00:03:20,540
university they specialize in setting up

72
00:03:16,860 --> 00:03:22,890
air conditioning units in big companies

73
00:03:20,540 --> 00:03:25,140
it's a very complicated job so they have

74
00:03:22,890 --> 00:03:29,010
like a five-year five-year program to

75
00:03:25,140 --> 00:03:31,260
teach that and anyways so everyone else

76
00:03:29,010 --> 00:03:32,700
is a master break you know the heat is

77
00:03:31,260 --> 00:03:34,170
starting to come in everyone like it's

78
00:03:32,700 --> 00:03:37,709
like having Brad first in the street and

79
00:03:34,170 --> 00:03:40,500
then someone gets a tip about a domain

80
00:03:37,709 --> 00:03:45,420
that's being used in a phishing attack

81
00:03:40,500 --> 00:03:47,610
so Greendale XYZ so Greene doll is in

82
00:03:45,420 --> 00:03:49,380
university they have no proxies they

83
00:03:47,610 --> 00:03:51,989
have no logs they have nothing the only

84
00:03:49,380 --> 00:03:56,450
thing they have is gear and you'll guess

85
00:03:51,989 --> 00:04:00,420
a bunch of open-source forensics tools

86
00:03:56,450 --> 00:04:01,798
so quick word about your grease agent

87
00:04:00,420 --> 00:04:03,179
base I'm gonna go through this real

88
00:04:01,799 --> 00:04:05,250
quick because you guys know about this

89
00:04:03,180 --> 00:04:08,400
it works on almost any platform Windows

90
00:04:05,250 --> 00:04:10,709
Linux Mac OS it's basically something an

91
00:04:08,400 --> 00:04:11,549
agent you can query and tell it ok give

92
00:04:10,709 --> 00:04:12,959
me files

93
00:04:11,549 --> 00:04:15,450
give me these files give me these

94
00:04:12,959 --> 00:04:17,418
artifacts and you can query individual

95
00:04:15,450 --> 00:04:19,858
hosts in your network or you can query

96
00:04:17,418 --> 00:04:23,969
your whole fleet that's what we call

97
00:04:19,858 --> 00:04:26,909
hunks this becomes very relevant when

98
00:04:23,970 --> 00:04:29,670
your fleet has you know 200k machines

99
00:04:26,910 --> 00:04:32,010
you need to have some a lot of science

100
00:04:29,670 --> 00:04:35,250
to not kill your command and control

101
00:04:32,010 --> 00:04:36,420
server if I can call it that way so yeah

102
00:04:35,250 --> 00:04:39,950
it does file a collection it does

103
00:04:36,420 --> 00:04:42,120
artefact collections were artifacts

104
00:04:39,950 --> 00:04:45,469
artifacts are a very specific thing

105
00:04:42,120 --> 00:04:48,150
Inger so it's basically a collection of

106
00:04:45,470 --> 00:04:50,460
you see like for example this is a user

107
00:04:48,150 --> 00:04:53,039
shell history is one of the artifacts

108
00:04:50,460 --> 00:04:55,049
it's a file type and it has a few paths

109
00:04:53,040 --> 00:04:56,820
that it's kind of try to collect so if

110
00:04:55,050 --> 00:04:59,130
you tell an agent okay give me you know

111
00:04:56,820 --> 00:05:01,349
the users users shell history for this

112
00:04:59,130 --> 00:05:03,360
host then it's gonna fetch these files I

113
00:05:01,350 --> 00:05:05,190
thought if they don't exist you'll get

114
00:05:03,360 --> 00:05:07,830
nothing if they exist then you'll get

115
00:05:05,190 --> 00:05:12,210
those you can also combine artifacts

116
00:05:07,830 --> 00:05:14,280
like this using these names of artifacts

117
00:05:12,210 --> 00:05:17,489
so in that way you can build pretty

118
00:05:14,280 --> 00:05:19,229
complex structures of things that from a

119
00:05:17,490 --> 00:05:23,330
user's perspective are pretty easy to

120
00:05:19,230 --> 00:05:27,360
query I mentioned plus a while earlier

121
00:05:23,330 --> 00:05:29,460
so Plaza is basically a super time liner

122
00:05:27,360 --> 00:05:31,650
for your system it's gonna go through

123
00:05:29,460 --> 00:05:34,680
your file system and it's gonna parse

124
00:05:31,650 --> 00:05:38,400
every single file it knows how to parse

125
00:05:34,680 --> 00:05:41,100
and that is a lot of types of different

126
00:05:38,400 --> 00:05:42,840
types of files it's gonna if it finds a

127
00:05:41,100 --> 00:05:44,310
zip file it's gonna parse your zip file

128
00:05:42,840 --> 00:05:46,409
it's gonna open the zip file it's gonna

129
00:05:44,310 --> 00:05:47,850
see what kind of files you have in there

130
00:05:46,410 --> 00:05:49,350
if you have a zip file in a zip file is

131
00:05:47,850 --> 00:05:51,930
gonna do the same thing if you have a

132
00:05:49,350 --> 00:05:54,510
log file an Apache access log file in a

133
00:05:51,930 --> 00:05:56,460
zip file then it's gonna parse that file

134
00:05:54,510 --> 00:05:58,740
and it's gonna extract timestamp

135
00:05:56,460 --> 00:06:01,650
information and other kind of metadata

136
00:05:58,740 --> 00:06:03,300
that the file has and with all this what

137
00:06:01,650 --> 00:06:06,530
you will end up is with a system

138
00:06:03,300 --> 00:06:09,240
timeline some of you guys who have taken

139
00:06:06,530 --> 00:06:11,969
Sam's courses maybe know this as a super

140
00:06:09,240 --> 00:06:13,590
timeline versus a file system timeline

141
00:06:11,970 --> 00:06:15,690
which is a bit more simple because it's

142
00:06:13,590 --> 00:06:17,849
only concerns the file system this will

143
00:06:15,690 --> 00:06:20,400
do a timeline of everything that's on

144
00:06:17,850 --> 00:06:22,740
your system if your bash history for

145
00:06:20,400 --> 00:06:24,419
instance has timestamps it will parse

146
00:06:22,740 --> 00:06:29,160
those and it will know where to place

147
00:06:24,419 --> 00:06:30,000
them in your timeline so plazza uses

148
00:06:29,160 --> 00:06:34,140
plaza files

149
00:06:30,000 --> 00:06:37,650
it's a SQLite like format to store

150
00:06:34,140 --> 00:06:40,719
information you can also use P sort to

151
00:06:37,650 --> 00:06:43,359
get a CSV but who likes to use CSV I

152
00:06:40,720 --> 00:06:45,880
know that most forensics people only

153
00:06:43,360 --> 00:06:47,830
know about grep cuts an arc and that's

154
00:06:45,880 --> 00:06:50,740
all you need to do 80% of the cases

155
00:06:47,830 --> 00:06:52,240
that's why I use most of the time but if

156
00:06:50,740 --> 00:06:54,390
you're really fancy you can also use

157
00:06:52,240 --> 00:06:57,280
time sketch which is basically a

158
00:06:54,390 --> 00:07:00,550
forensic timeline visualization tool and

159
00:06:57,280 --> 00:07:02,020
you can issue nice queries here well you

160
00:07:00,550 --> 00:07:06,670
can see anything but you'll see them in

161
00:07:02,020 --> 00:07:08,200
the videos I have set for you and you

162
00:07:06,670 --> 00:07:09,940
can also see here you have different

163
00:07:08,200 --> 00:07:12,250
colors they each correspond to a

164
00:07:09,940 --> 00:07:13,900
different system that plasma has

165
00:07:12,250 --> 00:07:16,180
analyzed so that way you can really

166
00:07:13,900 --> 00:07:17,979
cross reference and cross correlate

167
00:07:16,180 --> 00:07:20,500
events that happen in different systems

168
00:07:17,980 --> 00:07:23,320
that have been collected into the same

169
00:07:20,500 --> 00:07:25,150
as we call it sketch so it plays really

170
00:07:23,320 --> 00:07:26,950
well with plazo it's made to ingest

171
00:07:25,150 --> 00:07:30,370
plasma files so you don't have to send a

172
00:07:26,950 --> 00:07:32,469
bulky csv file it's also a multi-user so

173
00:07:30,370 --> 00:07:35,470
you can set permissions on timelines and

174
00:07:32,470 --> 00:07:37,210
such it's multi case so you can have

175
00:07:35,470 --> 00:07:40,090
different cases on the same time sketch

176
00:07:37,210 --> 00:07:42,400
infrastructure and as I said here it's

177
00:07:40,090 --> 00:07:46,030
multi timelines so you can see where

178
00:07:42,400 --> 00:07:47,859
events in different systems coincide now

179
00:07:46,030 --> 00:07:50,049
the F time wolf this might be more

180
00:07:47,860 --> 00:07:53,860
interesting for you guys so DF time wolf

181
00:07:50,050 --> 00:07:57,160
is basically a CLI tool that acts as the

182
00:07:53,860 --> 00:07:58,960
glue between girp lasso and time sketch

183
00:07:57,160 --> 00:08:01,270
because otherwise what you would have to

184
00:07:58,960 --> 00:08:03,489
do is open your browser go to the ger

185
00:08:01,270 --> 00:08:05,859
interface select the kind of hunts you

186
00:08:03,490 --> 00:08:07,900
want to do selects which host you want

187
00:08:05,860 --> 00:08:09,850
to run them on select all the artifacts

188
00:08:07,900 --> 00:08:11,109
once you have that you have to wait on

189
00:08:09,850 --> 00:08:12,850
till it runs then you have to download

190
00:08:11,110 --> 00:08:14,500
the thing again you have to send the

191
00:08:12,850 --> 00:08:17,770
thing to plazo and then to time sketch

192
00:08:14,500 --> 00:08:19,390
and that's a bit annoying so DF time

193
00:08:17,770 --> 00:08:23,469
will does all of this with a single

194
00:08:19,390 --> 00:08:26,320
command and because it's not the only

195
00:08:23,470 --> 00:08:28,300
systems that we have we built it in a

196
00:08:26,320 --> 00:08:29,409
way that you know you can extend it

197
00:08:28,300 --> 00:08:32,950
pretty easily so that's what we have

198
00:08:29,410 --> 00:08:35,050
modules and each module is a way to

199
00:08:32,950 --> 00:08:36,909
interact with another system so you can

200
00:08:35,049 --> 00:08:39,699
have collectors for gear for example

201
00:08:36,909 --> 00:08:41,830
you'll have processor modules for plazo

202
00:08:39,700 --> 00:08:43,330
and you'll have exporter modules for a

203
00:08:41,830 --> 00:08:44,800
time sketch and you can have any kind of

204
00:08:43,330 --> 00:08:46,780
module you want you could have a

205
00:08:44,800 --> 00:08:49,359
reporting module I mean we can go on and

206
00:08:46,780 --> 00:08:52,839
on and I'll go back to this later how

207
00:08:49,360 --> 00:08:54,410
these modules are chained our define is

208
00:08:52,839 --> 00:08:57,260
defined in recipes

209
00:08:54,410 --> 00:08:59,360
so it's just basically a way to say well

210
00:08:57,260 --> 00:09:01,220
the output of the girl module just feed

211
00:08:59,360 --> 00:09:03,170
it into the plasma module and the output

212
00:09:01,220 --> 00:09:05,570
of the plasma module just feed it in to

213
00:09:03,170 --> 00:09:08,150
the time sketch module as we can see

214
00:09:05,570 --> 00:09:11,030
here so this is a regular invocation of

215
00:09:08,150 --> 00:09:13,430
how it works this is binary this is the

216
00:09:11,030 --> 00:09:16,069
recipe name this is the host you want to

217
00:09:13,430 --> 00:09:18,170
collect information from this is the

218
00:09:16,070 --> 00:09:19,940
comment because the recipe has a common

219
00:09:18,170 --> 00:09:21,709
argument that you can use and this is a

220
00:09:19,940 --> 00:09:25,070
cache the sketch ie all this is defined

221
00:09:21,710 --> 00:09:28,460
in a basically in the recipes and this

222
00:09:25,070 --> 00:09:29,930
is how every so ger the ger collector is

223
00:09:28,460 --> 00:09:31,310
going to get this information from the

224
00:09:29,930 --> 00:09:34,040
command line and it's going to generate

225
00:09:31,310 --> 00:09:37,640
this path which contains whatever

226
00:09:34,040 --> 00:09:39,349
information you're sent back this is

227
00:09:37,640 --> 00:09:41,449
going to be fed into the plateau module

228
00:09:39,350 --> 00:09:43,640
which is gonna feed back another path

229
00:09:41,450 --> 00:09:45,500
which is the plaza file that is

230
00:09:43,640 --> 00:09:47,569
generated by plateau and this is gonna

231
00:09:45,500 --> 00:09:49,400
be sent to the time sketch module which

232
00:09:47,570 --> 00:09:53,000
is gonna process it and the module is

233
00:09:49,400 --> 00:09:55,730
gonna send back a nice URL with a time

234
00:09:53,000 --> 00:09:57,950
line description so all these modules I

235
00:09:55,730 --> 00:09:59,660
mean you can build as many time sketch

236
00:09:57,950 --> 00:10:01,760
modules as you want and they will all do

237
00:09:59,660 --> 00:10:04,219
different things and I'll be great this

238
00:10:01,760 --> 00:10:08,120
is the one that we have that we use that

239
00:10:04,220 --> 00:10:11,420
is on github so this is a good example

240
00:10:08,120 --> 00:10:13,430
of how it works this is what a recipe

241
00:10:11,420 --> 00:10:15,500
looks like so in blue you have the

242
00:10:13,430 --> 00:10:17,900
recipe name in red you have the

243
00:10:15,500 --> 00:10:20,300
collectors with our just Python classes

244
00:10:17,900 --> 00:10:22,490
and in green you have the arguments that

245
00:10:20,300 --> 00:10:23,689
each one of those take so these are

246
00:10:22,490 --> 00:10:27,490
command line arguments that can be

247
00:10:23,690 --> 00:10:30,890
specified in in the command line

248
00:10:27,490 --> 00:10:33,920
invocation or in a config file I won't

249
00:10:30,890 --> 00:10:37,910
go into too much details in there anyway

250
00:10:33,920 --> 00:10:41,360
so back to our case we know about this

251
00:10:37,910 --> 00:10:44,089
Greendale domain Greendale dock XYZ

252
00:10:41,360 --> 00:10:46,940
which is actually grande oh because

253
00:10:44,090 --> 00:10:50,720
there's only one y so smart people that

254
00:10:46,940 --> 00:10:52,850
are maybe trying to target us so in this

255
00:10:50,720 --> 00:10:54,800
case since it's a fishing it's in that

256
00:10:52,850 --> 00:10:57,020
the tip came in saying oh you got a

257
00:10:54,800 --> 00:11:01,329
fishing domain there we're gonna ask to

258
00:10:57,020 --> 00:11:03,680
look for a browsing history artifacts so

259
00:11:01,330 --> 00:11:05,180
this is how it works so DF Tom Wolfe is

260
00:11:03,680 --> 00:11:07,160
gonna say here is gonna tell Gary like

261
00:11:05,180 --> 00:11:08,089
ok hunt for these browser history

262
00:11:07,160 --> 00:11:10,579
artifacts

263
00:11:08,089 --> 00:11:12,589
a fresh reminder browser history

264
00:11:10,579 --> 00:11:16,219
artifacts are just a collection of file

265
00:11:12,589 --> 00:11:18,110
paths for the history files of major

266
00:11:16,220 --> 00:11:21,499
browsers like Chrome Firefox Internet

267
00:11:18,110 --> 00:11:23,540
Explorer edge whatever Gert is gonna

268
00:11:21,499 --> 00:11:24,889
tell all its agents like okay do you

269
00:11:23,540 --> 00:11:27,290
know about browser artifacts can you

270
00:11:24,889 --> 00:11:29,689
send me any data and it's going to

271
00:11:27,290 --> 00:11:32,748
return a hunt ID directly to DF time

272
00:11:29,689 --> 00:11:37,480
wolf this is a synchronous of course

273
00:11:32,749 --> 00:11:40,970
because you don't want to wait for 200 K

274
00:11:37,480 --> 00:11:42,740
nodes to return before you can get an

275
00:11:40,970 --> 00:11:50,660
hunt ID and go on with your work so

276
00:11:42,740 --> 00:11:57,259
let's see if this works this is supposed

277
00:11:50,660 --> 00:12:01,579
to be higher quality there you go

278
00:11:57,259 --> 00:12:03,620
can you guys see okay great so this is

279
00:12:01,579 --> 00:12:07,040
the help menu you can see all the

280
00:12:03,620 --> 00:12:10,670
recipes are in here and there's a help

281
00:12:07,040 --> 00:12:12,170
text you see the arguments are here and

282
00:12:10,670 --> 00:12:17,329
they will be passed in the command line

283
00:12:12,170 --> 00:12:18,399
in here as soon as I paste it there you

284
00:12:17,329 --> 00:12:21,469
go

285
00:12:18,399 --> 00:12:23,059
so it starts the collection the hunt it

286
00:12:21,470 --> 00:12:24,679
says okay these are the artifacts you

287
00:12:23,059 --> 00:12:27,350
want me to collect those are the ones I

288
00:12:24,679 --> 00:12:29,480
pass on here and the hunt was created

289
00:12:27,350 --> 00:12:39,410
successfully here it is there you go you

290
00:12:29,480 --> 00:12:41,720
can move on with your life okay so we

291
00:12:39,410 --> 00:12:44,779
have this now we have our hunt ID we

292
00:12:41,720 --> 00:12:46,699
need to recover and get the results of

293
00:12:44,779 --> 00:12:49,660
that hunt we're gonna use another recipe

294
00:12:46,699 --> 00:12:52,490
for that which will basically ask her

295
00:12:49,660 --> 00:12:54,199
hey GERD you have the results of that

296
00:12:52,490 --> 00:12:56,149
hunts and girl will say yeah sure here's

297
00:12:54,199 --> 00:12:58,758
a zip file with all the things you asked

298
00:12:56,149 --> 00:13:01,699
for it we get the zip file we push it

299
00:12:58,759 --> 00:13:04,009
into plateau and then we send the plasma

300
00:13:01,699 --> 00:13:12,280
fowl to time sketch this is what it

301
00:13:04,009 --> 00:13:14,830
looks like so use the hunt ID here

302
00:13:12,280 --> 00:13:17,650
it's gonna run this command get the

303
00:13:14,830 --> 00:13:19,120
files from ger the zip file and then

304
00:13:17,650 --> 00:13:20,439
it's gonna run the external command like

305
00:13:19,120 --> 00:13:22,150
to town light book pi with these

306
00:13:20,440 --> 00:13:24,460
arguments or to love fellow their

307
00:13:22,150 --> 00:13:26,319
supplies FL is gonna generate and it's

308
00:13:24,460 --> 00:13:30,030
gonna send it's gonna give you this URL

309
00:13:26,320 --> 00:13:35,020
as we've seen in the first in the first

310
00:13:30,030 --> 00:13:37,600
command-line demo I showed you guys so

311
00:13:35,020 --> 00:13:39,699
once we had this then we go to time

312
00:13:37,600 --> 00:13:44,320
sketch and how do we use this for

313
00:13:39,700 --> 00:13:45,580
investigation so this is what the sketch

314
00:13:44,320 --> 00:13:47,350
investigation looks like so you have

315
00:13:45,580 --> 00:13:49,030
your hunt results here this is a time

316
00:13:47,350 --> 00:13:51,070
line that we're interested in it's the

317
00:13:49,030 --> 00:13:53,470
only one that we have also and now we

318
00:13:51,070 --> 00:13:55,390
can just look for our domain this is

319
00:13:53,470 --> 00:13:58,330
going to parse all the things that we

320
00:13:55,390 --> 00:14:01,590
saw here all the all the users are

321
00:13:58,330 --> 00:14:01,590
browsing artifacts

322
00:14:02,100 --> 00:14:07,690
this was demonstration so there's only

323
00:14:05,350 --> 00:14:09,730
one of course if we dig into the

324
00:14:07,690 --> 00:14:11,500
browsing history you'll also see me

325
00:14:09,730 --> 00:14:14,320
trying to figure out how to install your

326
00:14:11,500 --> 00:14:15,490
and such and such but this is this is

327
00:14:14,320 --> 00:14:17,160
basically the file that's been

328
00:14:15,490 --> 00:14:21,340
downloaded and that's interesting for us

329
00:14:17,160 --> 00:14:23,620
so we can star relevant events and we

330
00:14:21,340 --> 00:14:24,910
can do a bunch of stuff in in time

331
00:14:23,620 --> 00:14:27,250
sketch we can also search for academic

332
00:14:24,910 --> 00:14:30,670
calendar that's it and then we see that

333
00:14:27,250 --> 00:14:33,070
we have another bunch of things why

334
00:14:30,670 --> 00:14:36,010
isn't it posing there is we have a lot

335
00:14:33,070 --> 00:14:37,600
last visit time last check time if the

336
00:14:36,010 --> 00:14:39,420
timeline was more real then we would

337
00:14:37,600 --> 00:14:42,460
have a bunch of other websites in there

338
00:14:39,420 --> 00:14:46,949
but the thing is you can write comments

339
00:14:42,460 --> 00:14:49,540
on every event this is pretty bad right

340
00:14:46,950 --> 00:14:52,120
you can go on and you can also select

341
00:14:49,540 --> 00:14:55,360
events that will then go into what we

342
00:14:52,120 --> 00:15:00,430
call a save view which is basically a

343
00:14:55,360 --> 00:15:02,560
part of a tldr of your incident so if we

344
00:15:00,430 --> 00:15:04,209
scroll there so i'm saving this i'm

345
00:15:02,560 --> 00:15:07,630
selecting the events and i'm saving them

346
00:15:04,210 --> 00:15:09,340
as i save you and then and this is this

347
00:15:07,630 --> 00:15:11,950
is a pretty cool thing a pretty cool

348
00:15:09,340 --> 00:15:14,650
feature that the time sketch has is

349
00:15:11,950 --> 00:15:17,230
stories so stories are a way to just

350
00:15:14,650 --> 00:15:18,970
tell what happens in your incident so

351
00:15:17,230 --> 00:15:21,100
you can start saying oh hey well i dug

352
00:15:18,970 --> 00:15:25,240
into this tape we got something bad i

353
00:15:21,100 --> 00:15:26,110
did some searches and let me show you

354
00:15:25,240 --> 00:15:30,160
this

355
00:15:26,110 --> 00:15:32,380
so you can include in your report any

356
00:15:30,160 --> 00:15:34,630
saved view that you want so in that way

357
00:15:32,380 --> 00:15:37,600
you can like really have this riddim

358
00:15:34,630 --> 00:15:39,370
prose for anyone else who's gonna keep

359
00:15:37,600 --> 00:15:41,710
on digging into your incident later on

360
00:15:39,370 --> 00:15:44,050
or even yourself when you get back to it

361
00:15:41,710 --> 00:15:47,440
and the next day because this guy is

362
00:15:44,050 --> 00:15:50,589
head at home and you can really use this

363
00:15:47,440 --> 00:15:55,570
to make a clear message of whatever it

364
00:15:50,590 --> 00:15:59,080
is that you want to to convey so what do

365
00:15:55,570 --> 00:16:01,500
we know so far so in our case at least

366
00:15:59,080 --> 00:16:05,020
one person downloaded Green Delta X Y Z

367
00:16:01,500 --> 00:16:10,570
academic calendar that's it the zip file

368
00:16:05,020 --> 00:16:13,360
contains a calendar ojs fowl and is it

369
00:16:10,570 --> 00:16:15,640
really a calendar a JavaScript calendar

370
00:16:13,360 --> 00:16:18,700
I don't think so it's probably more like

371
00:16:15,640 --> 00:16:21,460
a stage one dropper so if we open the

372
00:16:18,700 --> 00:16:22,150
fouled and this is what we see and this

373
00:16:21,460 --> 00:16:24,460
looks pretty bad

374
00:16:22,150 --> 00:16:28,770
it kind of looks like a URL can anyone

375
00:16:24,460 --> 00:16:28,770
guess was what the encryption is on this

376
00:16:30,720 --> 00:16:41,080
almost it's what 14 ha yeah

377
00:16:37,540 --> 00:16:42,910
that was that was easy anyways so after

378
00:16:41,080 --> 00:16:45,730
some very you know advanced the

379
00:16:42,910 --> 00:16:49,089
obfuscation you come up with the student

380
00:16:45,730 --> 00:16:50,590
- Greendale ducks XYZ domain which kind

381
00:16:49,090 --> 00:16:52,870
of looks sketchy because it's not from

382
00:16:50,590 --> 00:16:55,900
Greendale you have like a app data

383
00:16:52,870 --> 00:17:00,850
roaming startup keep that bat path in

384
00:16:55,900 --> 00:17:04,270
here and more worrying is this which is

385
00:17:00,850 --> 00:17:06,819
basically checking if the domain the 80

386
00:17:04,270 --> 00:17:10,300
domain that the user is on has greendell

387
00:17:06,819 --> 00:17:14,909
in it or not so as far as targeting goes

388
00:17:10,300 --> 00:17:19,629
this is pretty targeted I would say so

389
00:17:14,910 --> 00:17:22,390
maybe we should take a bit deeper so we

390
00:17:19,630 --> 00:17:27,310
have our shadow script dropper the

391
00:17:22,390 --> 00:17:32,110
JavaScript dropper drops secret seek

392
00:17:27,310 --> 00:17:35,290
secure that script URL into keep top bad

393
00:17:32,110 --> 00:17:38,479
start out so now we want to know if

394
00:17:35,290 --> 00:17:40,700
anyone executed or downloaded this

395
00:17:38,480 --> 00:17:43,480
this fall so we're gonna use another set

396
00:17:40,700 --> 00:17:46,100
of artifacts these persistent mechanisms

397
00:17:43,480 --> 00:17:47,299
shell registry files and Windows system

398
00:17:46,100 --> 00:17:50,689
register files because we have a bunch

399
00:17:47,299 --> 00:17:56,240
of good things that can tell us if we're

400
00:17:50,690 --> 00:17:58,910
being owned or not so this this should

401
00:17:56,240 --> 00:18:01,669
look familiar at this point you have

402
00:17:58,910 --> 00:18:03,470
here the host that we're targeting

403
00:18:01,669 --> 00:18:06,980
because there's no point in searching

404
00:18:03,470 --> 00:18:09,230
for all these things everywhere else and

405
00:18:06,980 --> 00:18:11,480
you can see that we have our client is

406
00:18:09,230 --> 00:18:13,610
here oh there's a great clients we've

407
00:18:11,480 --> 00:18:17,270
last seen it on this day so 0 minutes

408
00:18:13,610 --> 00:18:18,830
ago that was when I ran the video these

409
00:18:17,270 --> 00:18:20,510
are the artifacts that we want so we're

410
00:18:18,830 --> 00:18:22,370
gonna schedule this and since it's a

411
00:18:20,510 --> 00:18:23,809
targeted collection so we're just asking

412
00:18:22,370 --> 00:18:24,290
for a specific host to return

413
00:18:23,809 --> 00:18:27,049
information

414
00:18:24,290 --> 00:18:29,330
d/f time will we'll wait until this is

415
00:18:27,049 --> 00:18:32,150
finished you guys probably don't want to

416
00:18:29,330 --> 00:18:36,889
wait so I'm just gonna fast forward here

417
00:18:32,150 --> 00:18:39,919
it's gonna go through plow so it's gonna

418
00:18:36,890 --> 00:18:41,929
process this so this goes a little long

419
00:18:39,919 --> 00:18:43,429
it takes a little longer than the simple

420
00:18:41,929 --> 00:18:45,410
browsing history artifacts because there

421
00:18:43,429 --> 00:18:47,480
was only one browsing history in the

422
00:18:45,410 --> 00:18:50,000
hunt you saw and it was fairly small

423
00:18:47,480 --> 00:18:52,460
this is a bunch of registry keys on the

424
00:18:50,000 --> 00:18:55,309
windows VM I have four I've had for a

425
00:18:52,460 --> 00:18:58,970
long time so it takes a bit longer and

426
00:18:55,309 --> 00:19:06,770
it ends up in the same sketch number 31

427
00:18:58,970 --> 00:19:10,580
and this is how the investigation in

428
00:19:06,770 --> 00:19:12,790
time sketch will look like so at this

429
00:19:10,580 --> 00:19:15,230
point in with just one command-line

430
00:19:12,790 --> 00:19:18,620
argument and invocation we ended up

431
00:19:15,230 --> 00:19:21,230
grabbing information from a remote host

432
00:19:18,620 --> 00:19:24,770
and it's waiting for us in time sketch

433
00:19:21,230 --> 00:19:27,320
to be analyzed so here I'm showcasing

434
00:19:24,770 --> 00:19:28,790
the search templates searched in place

435
00:19:27,320 --> 00:19:31,760
are a pretty cool feature of time sketch

436
00:19:28,790 --> 00:19:34,309
where you can use collective knowledge

437
00:19:31,760 --> 00:19:36,500
of your teammates who work in forensics

438
00:19:34,309 --> 00:19:38,840
as well and they can say oh well I know

439
00:19:36,500 --> 00:19:41,000
about start of items and I know where

440
00:19:38,840 --> 00:19:43,309
they are so instead of you having to

441
00:19:41,000 --> 00:19:47,780
look up in you know forensics wiki or

442
00:19:43,309 --> 00:19:49,070
whatever the file that you need to

443
00:19:47,780 --> 00:19:51,200
recover or that you need to search for

444
00:19:49,070 --> 00:19:52,220
it then you can only use just have to

445
00:19:51,200 --> 00:19:53,750
use this

446
00:19:52,220 --> 00:19:56,600
in here you can add it to one of the

447
00:19:53,750 --> 00:19:59,509
views of the sketch and well of course

448
00:19:56,600 --> 00:20:01,908
this is pre-made but this is the app

449
00:19:59,509 --> 00:20:04,399
compat cache cross-reference with

450
00:20:01,909 --> 00:20:09,559
startup so this is exactly where the

451
00:20:04,399 --> 00:20:12,289
keep dot bat file would um would say and

452
00:20:09,559 --> 00:20:16,879
here we see like oh there's a very

453
00:20:12,289 --> 00:20:20,299
interesting information so the file was

454
00:20:16,879 --> 00:20:21,799
indeed executed as you can see this is

455
00:20:20,299 --> 00:20:24,408
the full thing so this is the cached

456
00:20:21,799 --> 00:20:28,490
entry and this is the full path of was a

457
00:20:24,409 --> 00:20:32,299
o was executed so this is also pretty

458
00:20:28,490 --> 00:20:35,419
interesting information we can add it

459
00:20:32,299 --> 00:20:38,179
twists we can select it add it to a save

460
00:20:35,419 --> 00:20:40,730
view like okay this is keep that bat

461
00:20:38,179 --> 00:20:45,259
running so we should probably pay pay

462
00:20:40,730 --> 00:20:47,000
attention or keep act compat whatever if

463
00:20:45,259 --> 00:20:49,490
we go to the story then we see our

464
00:20:47,000 --> 00:20:56,240
previously saved work and then we can

465
00:20:49,490 --> 00:20:58,669
keep adding more stuff as we go on so

466
00:20:56,240 --> 00:21:03,649
this was installed I will add the app

467
00:20:58,669 --> 00:21:10,059
compat and I will switch to the next

468
00:21:03,649 --> 00:21:13,489
slides so what does keep the bat have

469
00:21:10,059 --> 00:21:17,840
this is a PowerShell script and this is

470
00:21:13,490 --> 00:21:22,759
likely very advanced encoding it's

471
00:21:17,840 --> 00:21:25,870
base64 it's not day 65 don't worry so

472
00:21:22,759 --> 00:21:28,879
where you see here is this is basically

473
00:21:25,870 --> 00:21:31,580
Empire partial Empire strips that grabs

474
00:21:28,879 --> 00:21:34,039
stuff from here and probably does very

475
00:21:31,580 --> 00:21:36,230
bad things with it and this is a key

476
00:21:34,039 --> 00:21:37,879
that it uses to authenticate so at this

477
00:21:36,230 --> 00:21:39,139
point we can determine that or attackers

478
00:21:37,879 --> 00:21:41,029
whoever's attacking us

479
00:21:39,139 --> 00:21:44,209
really wants something out of us but

480
00:21:41,029 --> 00:21:45,980
what anyways let's try to take a step

481
00:21:44,210 --> 00:21:47,539
back and summarize what we have for now

482
00:21:45,980 --> 00:21:52,009
we have some IOC s

483
00:21:47,539 --> 00:21:55,129
we have the two scripts in Greendale XYZ

484
00:21:52,009 --> 00:21:56,990
domain one of them is kept as a keep

485
00:21:55,129 --> 00:21:59,689
that bad script and start up as

486
00:21:56,990 --> 00:22:02,090
persistence and they all call back as a

487
00:21:59,690 --> 00:22:05,630
c2 to this legitimate businessman star

488
00:22:02,090 --> 00:22:07,459
club interesting

489
00:22:05,630 --> 00:22:11,090
everything is fine we're not getting

490
00:22:07,460 --> 00:22:14,059
owned at all very few students fell for

491
00:22:11,090 --> 00:22:19,129
the first the first scam but we have a

492
00:22:14,059 --> 00:22:21,710
hunch so we go there and we see oh wait

493
00:22:19,130 --> 00:22:22,940
look there's a bash that Sh script here

494
00:22:21,710 --> 00:22:25,370
that we haven't seen so far though

495
00:22:22,940 --> 00:22:28,940
that's pretty interesting so we put on

496
00:22:25,370 --> 00:22:31,760
our best VPN clients called ping and a

497
00:22:28,940 --> 00:22:33,770
hoodie and then we can grab the file

498
00:22:31,760 --> 00:22:37,760
from the server and again we have this

499
00:22:33,770 --> 00:22:42,230
very advanced Bayes 65 encoding that is

500
00:22:37,760 --> 00:22:43,640
this time pipes into Python and we do

501
00:22:42,230 --> 00:22:47,360
Fisk Aiden and we see that this is the

502
00:22:43,640 --> 00:22:51,559
same c2 URL with this time a different

503
00:22:47,360 --> 00:22:53,658
key that seems kind of generated the

504
00:22:51,559 --> 00:22:58,750
same way this is an encryption algorithm

505
00:22:53,659 --> 00:23:01,940
I would guess it's rc4 but I don't know

506
00:22:58,750 --> 00:23:04,039
so now we want to know does this bash

507
00:23:01,940 --> 00:23:07,010
that Sh thing has been executed anywhere

508
00:23:04,039 --> 00:23:09,020
and this is where I spoiled the fun a

509
00:23:07,010 --> 00:23:14,179
while ago we're gonna do a query with

510
00:23:09,020 --> 00:23:17,090
all users shell history the hunt was

511
00:23:14,179 --> 00:23:22,370
created now that was it

512
00:23:17,090 --> 00:23:27,049
ok small problem we're changing the

513
00:23:22,370 --> 00:23:28,489
videos so now we run the Gherkin

514
00:23:27,049 --> 00:23:30,799
downloader which is gonna download the

515
00:23:28,490 --> 00:23:32,890
results of the hunt that we specify here

516
00:23:30,799 --> 00:23:37,309
they're all gonna run full class oh and

517
00:23:32,890 --> 00:23:39,740
it's gonna output a very nice timeline I

518
00:23:37,309 --> 00:23:42,678
guess somewhere did I cut the video too

519
00:23:39,740 --> 00:23:44,570
early I didn't say oh yeah there is so

520
00:23:42,679 --> 00:23:49,460
we always download the same thing into

521
00:23:44,570 --> 00:23:54,740
the same sketch so if we go back to time

522
00:23:49,460 --> 00:23:56,380
sketch we see this is this is fairly

523
00:23:54,740 --> 00:23:58,280
interesting because you can see that in

524
00:23:56,380 --> 00:24:01,070
here now we have like three different

525
00:23:58,280 --> 00:24:04,120
timelines and they all correspond to the

526
00:24:01,070 --> 00:24:09,139
three hosts that had bash history

527
00:24:04,120 --> 00:24:11,928
included in them and we can query the

528
00:24:09,140 --> 00:24:13,250
whole the whole sketch so all of the

529
00:24:11,929 --> 00:24:15,230
timelines we can query them

530
00:24:13,250 --> 00:24:17,210
simultaneously and this is why you see

531
00:24:15,230 --> 00:24:19,370
different colors here they all

532
00:24:17,210 --> 00:24:27,470
correspond to a different timeline

533
00:24:19,370 --> 00:24:29,929
so if we look for four batch history

534
00:24:27,470 --> 00:24:32,210
command and bachelor status age then

535
00:24:29,930 --> 00:24:36,590
we'll see like oh well someone executed

536
00:24:32,210 --> 00:24:38,480
this this doesn't look good yeah this is

537
00:24:36,590 --> 00:24:42,919
too bad this is bad the script ran

538
00:24:38,480 --> 00:24:44,540
so we even have the client ID there we

539
00:24:42,920 --> 00:24:46,790
know the foul where the information came

540
00:24:44,540 --> 00:24:53,230
from and we're gonna save this you again

541
00:24:46,790 --> 00:24:56,270
so that we can keep it in our report we

542
00:24:53,230 --> 00:24:59,150
can also wait we can also check if other

543
00:24:56,270 --> 00:25:01,790
Curl things happen and well this is this

544
00:24:59,150 --> 00:25:04,370
is kind of hacky right this is just to

545
00:25:01,790 --> 00:25:06,200
show you guys that if you're sort for

546
00:25:04,370 --> 00:25:07,399
girl you'll see all the curl commands

547
00:25:06,200 --> 00:25:10,460
that have been chained in different

548
00:25:07,400 --> 00:25:14,570
hosts and here you can see all the

549
00:25:10,460 --> 00:25:18,320
commands that I use to install my my gir

550
00:25:14,570 --> 00:25:22,360
clients on my different instances so you

551
00:25:18,320 --> 00:25:27,200
can see I was working between 2:15 and

552
00:25:22,360 --> 00:25:32,360
2:20 a few days ago for this this is

553
00:25:27,200 --> 00:25:37,790
proof and you can add as I as I showed

554
00:25:32,360 --> 00:25:40,459
before the things to to the to the story

555
00:25:37,790 --> 00:25:42,530
and you can also have a very fancy thing

556
00:25:40,460 --> 00:25:44,210
with bold text and stuff this is

557
00:25:42,530 --> 00:25:53,330
markdown so you can edit things as you

558
00:25:44,210 --> 00:25:55,340
want so we have one hits but the thing

559
00:25:53,330 --> 00:25:57,409
is we'd like to dig deeper into this

560
00:25:55,340 --> 00:25:59,419
host to see what else happens the

561
00:25:57,410 --> 00:26:01,070
problem is well Greendale has been

562
00:25:59,420 --> 00:26:04,700
migrating all their infrastructure to

563
00:26:01,070 --> 00:26:08,419
the cloud right in the cloud everything

564
00:26:04,700 --> 00:26:10,370
is good and fluffy and fresh but

565
00:26:08,420 --> 00:26:14,330
sometimes bad things like this happen of

566
00:26:10,370 --> 00:26:17,179
course not any cloud but you know GC so

567
00:26:14,330 --> 00:26:20,270
that's Google's cloud of course candy

568
00:26:17,180 --> 00:26:22,430
f10 will help of course it can so this

569
00:26:20,270 --> 00:26:24,440
is a module that hasn't been open

570
00:26:22,430 --> 00:26:26,870
sourced yet but it will be as soon as

571
00:26:24,440 --> 00:26:30,440
the code is a bit cleaner and we intend

572
00:26:26,870 --> 00:26:32,080
to make it cleaner but what its gonna do

573
00:26:30,440 --> 00:26:35,260
it's it's gonna just

574
00:26:32,080 --> 00:26:38,439
query the cloud API and issue a snapshot

575
00:26:35,260 --> 00:26:40,720
of the disk that you want data from and

576
00:26:38,440 --> 00:26:43,899
it's gonna make a copy of that disk so

577
00:26:40,720 --> 00:26:45,429
then you can analyze it you can either

578
00:26:43,899 --> 00:26:48,719
download it back to your computer and

579
00:26:45,429 --> 00:26:52,029
analyze it using you know mounted using

580
00:26:48,720 --> 00:26:53,830
mounts or if you want to go run it

581
00:26:52,029 --> 00:26:57,760
through log to Timeline or grab or

582
00:26:53,830 --> 00:27:00,928
whatever you can do it so this is this

583
00:26:57,760 --> 00:27:03,820
being copied this is fantastic very

584
00:27:00,929 --> 00:27:08,200
thrilling things and there you go the

585
00:27:03,820 --> 00:27:10,840
end result is well you have a VM in your

586
00:27:08,200 --> 00:27:12,820
clock project so here you say oh I want

587
00:27:10,840 --> 00:27:15,730
to use this recipe I want to use this

588
00:27:12,820 --> 00:27:18,490
cloud project and I want to spin up this

589
00:27:15,730 --> 00:27:21,490
VM so you have a Greendale analysis VM

590
00:27:18,490 --> 00:27:23,980
which is GCP forensics and then you have

591
00:27:21,490 --> 00:27:27,580
this which is the name of the disk that

592
00:27:23,980 --> 00:27:30,100
has been created for your analysis this

593
00:27:27,580 --> 00:27:32,769
particular recipe spins up a vm attaches

594
00:27:30,100 --> 00:27:35,168
the disk to it and lets you SSH into it

595
00:27:32,769 --> 00:27:38,080
and carry out all the forensics that you

596
00:27:35,169 --> 00:27:39,880
want but in this case we're gonna go a

597
00:27:38,080 --> 00:27:43,750
bit further and we're gonna talk about

598
00:27:39,880 --> 00:27:46,809
turbine Yasur terenia is a new system

599
00:27:43,750 --> 00:27:48,690
that we're building that is it's just

600
00:27:46,809 --> 00:27:51,399
about to be released

601
00:27:48,690 --> 00:27:54,789
it's basically automation of forensics

602
00:27:51,399 --> 00:27:57,539
tasks but in the cloud so it lives in

603
00:27:54,789 --> 00:28:00,970
the cloud and you can ask a questions

604
00:27:57,539 --> 00:28:02,769
you can tell it hey I have a GCP disk

605
00:28:00,970 --> 00:28:05,950
somewhere and I want you to process it

606
00:28:02,769 --> 00:28:07,990
with whatever modules you have like

607
00:28:05,950 --> 00:28:11,559
plateau and then please dump the results

608
00:28:07,990 --> 00:28:13,029
into time sketch so you've seen a couple

609
00:28:11,559 --> 00:28:16,120
of diagrams before this one is a bit

610
00:28:13,029 --> 00:28:17,529
hairier this is the computer that we

611
00:28:16,120 --> 00:28:20,080
want to forensic aid it's in the cloud

612
00:28:17,529 --> 00:28:23,260
it does not exist where we don't know

613
00:28:20,080 --> 00:28:25,330
where it is this is its disk this is

614
00:28:23,260 --> 00:28:27,549
Serbia this is true being a storage and

615
00:28:25,330 --> 00:28:29,230
this is a disk is gonna create so the

616
00:28:27,549 --> 00:28:32,679
first thing DF Tom wolf is gonna do is

617
00:28:29,230 --> 00:28:36,130
gonna ask the cloud whoever that is

618
00:28:32,679 --> 00:28:38,049
please copy Greendale admins disk the

619
00:28:36,130 --> 00:28:41,770
cloud is gonna say sure here's a disk ID

620
00:28:38,049 --> 00:28:43,658
that you need and then DFM wolf is gonna

621
00:28:41,770 --> 00:28:45,639
go ask the cloud again or in this case

622
00:28:43,659 --> 00:28:45,940
more like ask Kirby Nia please forensic

623
00:28:45,639 --> 00:28:50,199
8

624
00:28:45,940 --> 00:28:52,600
this claw this disk that is here travina

625
00:28:50,200 --> 00:28:55,149
will run and it will return after some

626
00:28:52,600 --> 00:28:57,158
time saying okay now the plasma files

627
00:28:55,149 --> 00:29:00,039
ready for you it's in this blood bucket

628
00:28:57,159 --> 00:29:03,009
so feel free to grab it and then the f10

629
00:29:00,039 --> 00:29:06,039
will continue its run through plazo and

630
00:29:03,009 --> 00:29:07,389
to time sketch well in this case yes you

631
00:29:06,039 --> 00:29:12,879
don't need plasma you can go directly to

632
00:29:07,389 --> 00:29:15,070
time sketch eventually we want tribuna

633
00:29:12,879 --> 00:29:17,019
to be able to send results to time

634
00:29:15,070 --> 00:29:21,908
sketch directly but for the purposes of

635
00:29:17,019 --> 00:29:23,649
this demo i wanted to showcase this you

636
00:29:21,909 --> 00:29:26,409
can also use the f time wolf as a very

637
00:29:23,649 --> 00:29:29,080
simple script to just upload arbitrary

638
00:29:26,409 --> 00:29:30,789
files to time sketch and when I mean

639
00:29:29,080 --> 00:29:32,500
arbitrary files I mean you can upload

640
00:29:30,789 --> 00:29:36,419
anything but all that time sketch will

641
00:29:32,500 --> 00:29:38,769
understand is CSV files and plasma files

642
00:29:36,419 --> 00:29:40,389
so you use the time sketch upload recipe

643
00:29:38,769 --> 00:29:42,250
which is very simple it just reads a

644
00:29:40,389 --> 00:29:44,139
file from the disk and sends it to time

645
00:29:42,250 --> 00:29:45,190
sketch but it's also pretty easy when

646
00:29:44,139 --> 00:29:48,490
you don't want to spin up a new browser

647
00:29:45,190 --> 00:29:50,200
tab and send the things yourself so you

648
00:29:48,490 --> 00:29:51,789
create a new sketch or if you had passed

649
00:29:50,200 --> 00:29:53,169
the sketch ID parameter it would have

650
00:29:51,789 --> 00:29:55,629
added the things to an already existing

651
00:29:53,169 --> 00:29:58,450
sketch and now it's just gonna export

652
00:29:55,629 --> 00:30:01,500
things to that sketch and whenever time

653
00:29:58,450 --> 00:30:03,730
sketch is done it's gonna reply with a

654
00:30:01,500 --> 00:30:08,559
with the ID of the sketch that was

655
00:30:03,730 --> 00:30:12,190
generated so so far we're being pretty

656
00:30:08,559 --> 00:30:15,039
agile the disaster was averted yes

657
00:30:12,190 --> 00:30:17,259
because of course when once you do the

658
00:30:15,039 --> 00:30:18,580
forensics on that disk you realize that

659
00:30:17,259 --> 00:30:21,039
there wasn't any trace of lateral

660
00:30:18,580 --> 00:30:23,949
movement and also Greendale users all

661
00:30:21,039 --> 00:30:26,230
used to FA tokens so that's pretty good

662
00:30:23,950 --> 00:30:28,000
and that kind of thoughts fishing in a

663
00:30:26,230 --> 00:30:31,240
way so I would recommend you guys use it

664
00:30:28,000 --> 00:30:32,710
if you don't it's really good so after

665
00:30:31,240 --> 00:30:34,990
some analysis it was determined that the

666
00:30:32,710 --> 00:30:37,389
attackers objective was likely to

667
00:30:34,990 --> 00:30:40,360
disrupt the launch of Greendale's new

668
00:30:37,389 --> 00:30:42,939
ph.d program in AC flow study which is

669
00:30:40,360 --> 00:30:47,080
very secret and we wouldn't want other

670
00:30:42,940 --> 00:30:49,269
universities to copy on us so this is

671
00:30:47,080 --> 00:30:54,668
about all I have for you guys today I

672
00:30:49,269 --> 00:30:56,470
was maybe a bit quick but if if I want

673
00:30:54,669 --> 00:30:58,269
you guys to remember something is all

674
00:30:56,470 --> 00:30:59,920
these are tools that we are working on

675
00:30:58,269 --> 00:31:04,840
all these are tools

676
00:30:59,920 --> 00:31:06,930
our team is using daily so I really hope

677
00:31:04,840 --> 00:31:10,240
that you may find use in them and

678
00:31:06,930 --> 00:31:11,980
they're all open source you can you can

679
00:31:10,240 --> 00:31:13,840
grab them you can play with them we

680
00:31:11,980 --> 00:31:17,530
accept full requests we encourage

681
00:31:13,840 --> 00:31:19,120
contributions maybe Google has a

682
00:31:17,530 --> 00:31:23,290
reputation to be very strict with code

683
00:31:19,120 --> 00:31:25,419
it's true we don't like bad code but we

684
00:31:23,290 --> 00:31:27,760
won't shame you and we really encourage

685
00:31:25,420 --> 00:31:29,920
contributions even if it's something

686
00:31:27,760 --> 00:31:31,780
you've you fork the projects you've

687
00:31:29,920 --> 00:31:33,820
worked on something it's not great

688
00:31:31,780 --> 00:31:35,770
quality just send it to us and we'll see

689
00:31:33,820 --> 00:31:38,409
if we can make it work and integrate it

690
00:31:35,770 --> 00:31:40,570
into our master branch because I think

691
00:31:38,410 --> 00:31:42,610
this is something that is very for now

692
00:31:40,570 --> 00:31:45,070
Google centric but we've made it so that

693
00:31:42,610 --> 00:31:47,560
other ecosystems can also benefit from

694
00:31:45,070 --> 00:31:51,149
it and as I said yes it's all Apache 2

695
00:31:47,560 --> 00:31:54,760
license so this is usable by anyone and

696
00:31:51,150 --> 00:31:56,200
stuff I haven't covered today so other

697
00:31:54,760 --> 00:31:59,440
things that these tools can use and that

698
00:31:56,200 --> 00:32:01,990
maybe you can use as well is memory

699
00:31:59,440 --> 00:32:03,280
analysis for gear it does also some host

700
00:32:01,990 --> 00:32:06,670
time lining so if you don't want to

701
00:32:03,280 --> 00:32:08,200
recover all the things all the artifacts

702
00:32:06,670 --> 00:32:10,330
were all the disk then you can probably

703
00:32:08,200 --> 00:32:12,220
you can tell it ok just show me a

704
00:32:10,330 --> 00:32:14,050
timeline of this directory and it's 5

705
00:32:12,220 --> 00:32:16,900
sub directories or something you can

706
00:32:14,050 --> 00:32:19,300
also run custom Python scripts plazo

707
00:32:16,900 --> 00:32:22,270
well i've showed you what it can do but

708
00:32:19,300 --> 00:32:24,669
it can parse a lot of formats lots of

709
00:32:22,270 --> 00:32:27,940
them there's there's a lot of people

710
00:32:24,670 --> 00:32:30,070
working on you know labial and trying to

711
00:32:27,940 --> 00:32:32,290
figure out how to parse things there are

712
00:32:30,070 --> 00:32:35,169
new parses integrated I would say every

713
00:32:32,290 --> 00:32:37,480
month or maybe every two weeks or so in

714
00:32:35,170 --> 00:32:40,390
average DF time wolf

715
00:32:37,480 --> 00:32:42,610
well I've showcased a few of the systems

716
00:32:40,390 --> 00:32:44,320
it interacts with but it can pretty much

717
00:32:42,610 --> 00:32:48,070
interact with anything that has an API

718
00:32:44,320 --> 00:32:50,770
you could imagine TF time wolf asking

719
00:32:48,070 --> 00:32:52,960
for a plasma file from plateau and then

720
00:32:50,770 --> 00:32:55,270
maybe cross-referencing that with a

721
00:32:52,960 --> 00:32:59,020
threat intelligence database so that you

722
00:32:55,270 --> 00:33:00,610
don't even have to click on unsafe views

723
00:32:59,020 --> 00:33:02,230
in time sketch anymore and you can just

724
00:33:00,610 --> 00:33:05,439
have automatically things that are being

725
00:33:02,230 --> 00:33:08,350
tagged that would be cool and that might

726
00:33:05,440 --> 00:33:10,270
come later this year who knows time

727
00:33:08,350 --> 00:33:13,810
sketch time sketch has a few things and

728
00:33:10,270 --> 00:33:18,070
this is something I can show

729
00:33:13,810 --> 00:33:20,440
it has a heat map view of a so this is

730
00:33:18,070 --> 00:33:22,389
demo dot time sketch dot org you can all

731
00:33:20,440 --> 00:33:28,330
play with it there's a very secure

732
00:33:22,390 --> 00:33:30,160
interface as we can see but it has a few

733
00:33:28,330 --> 00:33:32,649
cool things and it's a good way to play

734
00:33:30,160 --> 00:33:35,620
with a version of time sketch that has

735
00:33:32,650 --> 00:33:38,530
data in it so if I go to charts I can

736
00:33:35,620 --> 00:33:40,929
see like it okay so this is e V TX

737
00:33:38,530 --> 00:33:42,730
records identifier so this is probably

738
00:33:40,930 --> 00:33:45,520
login and login type interactive and the

739
00:33:42,730 --> 00:33:46,810
kind of stuff so what you get from this

740
00:33:45,520 --> 00:33:49,270
is we're basically trying to understand

741
00:33:46,810 --> 00:33:51,550
who's logged into our systems and you

742
00:33:49,270 --> 00:33:52,030
can see this timeline maybe if i zoom

743
00:33:51,550 --> 00:33:57,580
out of it

744
00:33:52,030 --> 00:33:58,930
oh this okay great this is reactive so

745
00:33:57,580 --> 00:34:02,020
anyway so you can see this view that

746
00:33:58,930 --> 00:34:03,700
tells you hey you've been hacked here so

747
00:34:02,020 --> 00:34:04,690
there's a huge volume of logins here so

748
00:34:03,700 --> 00:34:06,940
this is probably where you want to

749
00:34:04,690 --> 00:34:09,070
investigate and you also have some

750
00:34:06,940 --> 00:34:14,290
graphs and these are a pretty cool

751
00:34:09,070 --> 00:34:19,180
feature so if you want to see all

752
00:34:14,290 --> 00:34:21,300
Network logins 20 minutes within earth

753
00:34:19,179 --> 00:34:26,080
yeah 20 minutes form from each other

754
00:34:21,300 --> 00:34:39,430
this is what you'd get can you can you

755
00:34:26,080 --> 00:34:42,400
see anything oh there so you can see

756
00:34:39,429 --> 00:34:47,080
that this beach young user logged into

757
00:34:42,400 --> 00:34:49,600
the registrar computer and also into the

758
00:34:47,080 --> 00:34:52,420
DC one and then student PC one network

759
00:34:49,600 --> 00:34:54,909
and all this is from the same session or

760
00:34:52,420 --> 00:34:57,250
at least they're all these login events

761
00:34:54,909 --> 00:35:00,160
are twenty minutes apart so this is also

762
00:34:57,250 --> 00:35:01,750
a nice view of all your logs that you

763
00:35:00,160 --> 00:35:04,210
probably didn't have before with a

764
00:35:01,750 --> 00:35:06,460
linear log analysis like you could do

765
00:35:04,210 --> 00:35:15,850
with time scale where with a plazo CSV

766
00:35:06,460 --> 00:35:20,610
files and grep I'm zooming out how do I

767
00:35:15,850 --> 00:35:20,610
present here okay

768
00:35:30,790 --> 00:35:38,529
I'm gonna zoom out until it's big enough

769
00:35:34,320 --> 00:35:41,650
so this is my last night anyways I think

770
00:35:38,530 --> 00:35:43,660
yeah so this is where to find us we're

771
00:35:41,650 --> 00:35:46,450
mostly all on github some of the

772
00:35:43,660 --> 00:35:49,509
projects are under the Google main repo

773
00:35:46,450 --> 00:35:53,109
Liger you also have locked to timeline

774
00:35:49,510 --> 00:35:55,450
and plazo love to Talam is it's has its

775
00:35:53,110 --> 00:35:57,970
own repo of things it is where you will

776
00:35:55,450 --> 00:35:59,799
find documentation about the tools it is

777
00:35:57,970 --> 00:36:02,109
also where you will find the f time wolf

778
00:35:59,800 --> 00:36:03,700
which has a pretty cool logo just like

779
00:36:02,110 --> 00:36:05,920
derby nia which looks kind of like a

780
00:36:03,700 --> 00:36:07,950
flying ham we're really not good at

781
00:36:05,920 --> 00:36:09,730
logos this is really bad

782
00:36:07,950 --> 00:36:11,859
plazo i don't know if you can see from

783
00:36:09,730 --> 00:36:15,370
here but it's like literally a super log

784
00:36:11,860 --> 00:36:17,560
so you also have time sketch is under

785
00:36:15,370 --> 00:36:20,710
Google and all these projects are for

786
00:36:17,560 --> 00:36:23,230
you guys to hack on contribute and use

787
00:36:20,710 --> 00:36:26,440
and you know hopefully you'll get

788
00:36:23,230 --> 00:36:27,790
something out of those and yep that's it

789
00:36:26,440 --> 00:36:31,440
for me so if you guys have any questions

790
00:36:27,790 --> 00:36:31,440
I'll take them now thanks

791
00:36:35,619 --> 00:36:39,950
awesome thank you very much time with

792
00:36:37,609 --> 00:36:42,019
really great interesting presentation

793
00:36:39,950 --> 00:36:43,490
again does anyone have any questions at

794
00:36:42,019 --> 00:36:46,399
all please raise your hand and I'll come

795
00:36:43,490 --> 00:36:49,629
to you so let's grab something come on

796
00:36:46,400 --> 00:36:49,630
forensic is good

797
00:36:51,940 --> 00:36:57,049
thanks for her to talk I'm sure it's a

798
00:36:55,460 --> 00:36:58,369
thing you've thought about but there

799
00:36:57,049 --> 00:36:59,960
have been a couple of stories recently

800
00:36:58,369 --> 00:37:02,480
in the news about parsers having

801
00:36:59,960 --> 00:37:04,579
exploitable bugs and when you say and

802
00:37:02,480 --> 00:37:07,910
repeatedly said plausible parses

803
00:37:04,579 --> 00:37:11,420
everything yeah isn't that is there an

804
00:37:07,910 --> 00:37:13,788
issue there how do you deal with that so

805
00:37:11,420 --> 00:37:16,190
it is an issue the the most the easiest

806
00:37:13,789 --> 00:37:18,309
the most straightforward way to to patch

807
00:37:16,190 --> 00:37:21,460
this or to circumvent this issue is

808
00:37:18,309 --> 00:37:24,529
running plaza in like secure containers

809
00:37:21,460 --> 00:37:27,170
or at least a sandbox of some kind so

810
00:37:24,529 --> 00:37:30,650
even if you get maybe code execution

811
00:37:27,170 --> 00:37:31,880
somewhere if you run it in a container

812
00:37:30,650 --> 00:37:33,980
that doesn't have internet connectivity

813
00:37:31,880 --> 00:37:35,809
then you limit the risks a lot that your

814
00:37:33,980 --> 00:37:37,910
evidence leaks and of course we don't

815
00:37:35,809 --> 00:37:40,730
want the attackers to hop on to the rest

816
00:37:37,910 --> 00:37:43,519
of the networks so yeah running plazo as

817
00:37:40,730 --> 00:37:46,700
routes on your production machines is

818
00:37:43,519 --> 00:37:49,899
probably not a good idea but uh you can

819
00:37:46,700 --> 00:37:49,899
probably work around that pretty easily

820
00:37:50,799 --> 00:38:03,049
hi Tom thanks for the talk is girl able

821
00:37:57,349 --> 00:38:04,700
to parse our rules on files or memory or

822
00:38:03,049 --> 00:38:07,970
anything can you can you deal with the

823
00:38:04,700 --> 00:38:09,950
our rules for scanning yes girl can

824
00:38:07,970 --> 00:38:15,828
ingest your rules and it can scan

825
00:38:09,950 --> 00:38:18,669
process memory with those arrows cool

826
00:38:15,829 --> 00:38:18,670
any other questions

827
00:38:19,240 --> 00:38:24,520
thanks for Naz

828
00:38:20,680 --> 00:38:26,589
talk the last time Daniel white

829
00:38:24,520 --> 00:38:28,450
presented plasma on time sketches with

830
00:38:26,589 --> 00:38:31,058
Cyrus from two years ago he lured me

831
00:38:28,450 --> 00:38:33,129
into installing this and I spent like

832
00:38:31,059 --> 00:38:36,670
one day trying to get plow sometimes

833
00:38:33,130 --> 00:38:38,290
catch up and running I gave up did you

834
00:38:36,670 --> 00:38:41,950
say anything about your maturity of the

835
00:38:38,290 --> 00:38:45,069
co within the products so alright I have

836
00:38:41,950 --> 00:38:47,680
a comment on that when I started at

837
00:38:45,069 --> 00:38:49,690
Google I was just like you I was like oh

838
00:38:47,680 --> 00:38:51,399
yes placer looks awesome

839
00:38:49,690 --> 00:38:54,250
but I don't want to spend half a day

840
00:38:51,400 --> 00:38:57,250
installing it same goes with time sketch

841
00:38:54,250 --> 00:39:00,030
and honestly so maybe it's because now

842
00:38:57,250 --> 00:39:03,369
I'm using these tools much more often

843
00:39:00,030 --> 00:39:04,480
but for this demo I got you're up and

844
00:39:03,369 --> 00:39:06,490
running in five minutes

845
00:39:04,480 --> 00:39:12,730
I got plasma up and running really

846
00:39:06,490 --> 00:39:14,950
quickly more than five minutes but still

847
00:39:12,730 --> 00:39:16,839
pretty quickly and time sketch is way

848
00:39:14,950 --> 00:39:18,700
easier to use now there has like docker

849
00:39:16,839 --> 00:39:20,680
containers and bagger and files and like

850
00:39:18,700 --> 00:39:23,290
kind of stuff so all of these projects

851
00:39:20,680 --> 00:39:25,058
you know we I guess we like to push code

852
00:39:23,290 --> 00:39:27,130
early but they're all gaining in

853
00:39:25,059 --> 00:39:28,780
maturity and I know that my teammates

854
00:39:27,130 --> 00:39:30,309
have been working you know Daniel has

855
00:39:28,780 --> 00:39:32,470
been working a lot on you know

856
00:39:30,309 --> 00:39:34,780
end-to-end testing of everything to make

857
00:39:32,470 --> 00:39:37,868
sure that we root out a maximum of bugs

858
00:39:34,780 --> 00:39:45,040
but yeah I would say that they have

859
00:39:37,869 --> 00:39:48,640
definitely matured anyone else any more

860
00:39:45,040 --> 00:39:50,200
questions last opportunity looks like

861
00:39:48,640 --> 00:39:51,700
they're being nice to you all right cool

862
00:39:50,200 --> 00:39:52,720
all right thank you very much Tom once

863
00:39:51,700 --> 00:39:55,439
again round of applause please

864
00:39:52,720 --> 00:39:55,439
thank you

