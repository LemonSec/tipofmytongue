1
00:00:04,560 --> 00:01:48,840
I mean<font color="#E5E5E5"> we'd like to see one this is the</font>

2
00:01:44,389 --> 00:01:52,408
<font color="#E5E5E5">TSN tutorial we have put together with</font>

3
00:01:48,840 --> 00:01:56,009
norm<font color="#CCCCCC"> Finn and Pat Taylor I'm Janos</font>

4
00:01:52,409 --> 00:01:59,689
<font color="#CCCCCC"> so Erikson I am the chair of the</font>

5
00:01:56,009 --> 00:01:59,689
time says it is<font color="#E5E5E5"> not working at a zoo</font>

6
00:02:00,529 --> 00:02:05,880
<font color="#CCCCCC">before we start we need to highlight</font>

7
00:02:03,179 --> 00:02:08,190
<font color="#E5E5E5">that what you see here is a personal</font>

8
00:02:05,880 --> 00:02:10,889
private<font color="#E5E5E5"> you of the presenters not an</font>

9
00:02:08,190 --> 00:02:14,390
official review of IT<font color="#E5E5E5"> Plato to</font><font color="#CCCCCC"> rato 2.1</font>

10
00:02:10,889 --> 00:02:14,390
<font color="#E5E5E5">or anything</font><font color="#CCCCCC"> like</font>

11
00:02:14,640 --> 00:02:21,000
so what we have today is after some

12
00:02:18,240 --> 00:02:24,210
introduction we dive into the details of

13
00:02:21,000 --> 00:02:26,420
TSN TSN<font color="#CCCCCC"> twos TSN features like</font>

14
00:02:24,210 --> 00:02:30,330
reliability deterministic latency

15
00:02:26,420 --> 00:02:32,250
<font color="#E5E5E5">resource management and after the</font>

16
00:02:30,330 --> 00:02:36,180
<font color="#CCCCCC">tutorial after the summary and questions</font>

17
00:02:32,250 --> 00:02:39,150
and answers<font color="#CCCCCC"> we have a brief</font>

18
00:02:36,180 --> 00:02:43,950
<font color="#E5E5E5">demonstration of the reliability feature</font>

19
00:02:39,150 --> 00:02:46,710
<font color="#E5E5E5">recently published or finished almost</font>

20
00:02:43,950 --> 00:02:52,589
almost published in<font color="#CCCCCC"> anatomy which is</font>

21
00:02:46,710 --> 00:02:56,510
also one of the major work items in

22
00:02:52,590 --> 00:02:59,700
<font color="#E5E5E5">the.net data plane on how to provide</font>

23
00:02:56,510 --> 00:03:03,450
this reliability<font color="#E5E5E5"> so this proof of</font>

24
00:02:59,700 --> 00:03:08,959
concept includes<font color="#E5E5E5"> both</font><font color="#CCCCCC"> so let's get</font>

25
00:03:03,450 --> 00:03:15,329
started actually there is quite wide use

26
00:03:08,959 --> 00:03:18,270
case interest or many areas see TSN

27
00:03:15,330 --> 00:03:21,209
interesting<font color="#E5E5E5"> so there are a number of</font>

28
00:03:18,270 --> 00:03:24,150
potential markets that can use leverage

29
00:03:21,209 --> 00:03:27,450
<font color="#E5E5E5">TSN so this is not</font><font color="#CCCCCC"> another full list</font><font color="#E5E5E5"> of</font>

30
00:03:24,150 --> 00:03:31,550
course<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the the key</font><font color="#E5E5E5"> ones is</font>

31
00:03:27,450 --> 00:03:35,488
industrial automation<font color="#E5E5E5"> so in industry 4.0</font>

32
00:03:31,550 --> 00:03:37,560
<font color="#E5E5E5">TSN is kind of the new networking</font>

33
00:03:35,489 --> 00:03:41,130
technology that is planned to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> used</font>

34
00:03:37,560 --> 00:03:45,480
and automotive<font color="#CCCCCC"> for vehicular</font><font color="#E5E5E5"> networking</font>

35
00:03:41,130 --> 00:03:50,280
is very keen on having eaten at in the

36
00:03:45,480 --> 00:03:53,429
car<font color="#E5E5E5"> we controlled by TSN tools and you</font>

37
00:03:50,280 --> 00:03:56,730
see many others including<font color="#E5E5E5"> 5g that can</font>

38
00:03:53,430 --> 00:04:00,180
also leverage TSN that is very boring

39
00:03:56,730 --> 00:04:02,760
going on how to provide transport<font color="#CCCCCC"> Eterna</font>

40
00:04:00,180 --> 00:04:08,760
transport for the<font color="#CCCCCC"> frontal</font><font color="#E5E5E5"> interface</font>

41
00:04:02,760 --> 00:04:11,370
which is part of 5g so TSN or<font color="#E5E5E5"> this TSN</font>

42
00:04:08,760 --> 00:04:14,850
TSN is in actually one of<font color="#E5E5E5"> the task</font>

43
00:04:11,370 --> 00:04:17,790
groups in the IT<font color="#CCCCCC"> plato 2.1 working group</font>

44
00:04:14,850 --> 00:04:20,399
which is part of the 802<font color="#CCCCCC"> Landman</font>

45
00:04:17,790 --> 00:04:23,130
standards committee that develops

46
00:04:20,399 --> 00:04:26,989
<font color="#E5E5E5">language standards and mainly focuses on</font>

47
00:04:23,130 --> 00:04:28,590
on the data link and physical layers

48
00:04:26,990 --> 00:04:31,320
<font color="#CCCCCC">into 2.5</font>

49
00:04:28,590 --> 00:04:37,260
as illustrated<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the figure</font><font color="#CCCCCC"> sits</font><font color="#E5E5E5"> on on</font>

50
00:04:31,320 --> 00:04:44,909
top of the 802<font color="#E5E5E5"> scope this</font><font color="#CCCCCC"> Greenfield</font><font color="#E5E5E5"> do</font>

51
00:04:37,260 --> 00:04:49,500
I have a laser<font color="#E5E5E5"> pointer here so II 22.1</font>

52
00:04:44,910 --> 00:04:52,710
<font color="#E5E5E5">sits here and TSN is one of the</font><font color="#CCCCCC"> test</font>

53
00:04:49,500 --> 00:04:55,440
groups there<font color="#E5E5E5"> so 802 dot one is the one</font>

54
00:04:52,710 --> 00:04:57,989
<font color="#E5E5E5">that is responsible for the 802</font>

55
00:04:55,440 --> 00:05:01,310
architecture<font color="#E5E5E5"> and for the interworking</font>

56
00:04:57,990 --> 00:05:05,850
among the different among the 802<font color="#E5E5E5"> Lance</font>

57
00:05:01,310 --> 00:05:07,710
provides also<font color="#CCCCCC"> security and also</font>

58
00:05:05,850 --> 00:05:10,230
responsible for<font color="#CCCCCC"> the overall management</font>

59
00:05:07,710 --> 00:05:15,330
and protocol layers above the<font color="#E5E5E5"> Mac and</font>

60
00:05:10,230 --> 00:05:18,060
there are C layers<font color="#CCCCCC"> the SN was actually</font>

61
00:05:15,330 --> 00:05:20,909
started as<font color="#E5E5E5"> audio/video bridging so you</font>

62
00:05:18,060 --> 00:05:24,380
may hear the<font color="#CCCCCC"> a VB abbreviation it</font><font color="#E5E5E5"> was</font>

63
00:05:20,910 --> 00:05:26,690
started in<font color="#CCCCCC"> to 2005</font><font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to address</font>

64
00:05:24,380 --> 00:05:28,969
professional audio and video market has

65
00:05:26,690 --> 00:05:31,530
reflected reflected by the name

66
00:05:28,970 --> 00:05:33,630
including consumer electronics and and

67
00:05:31,530 --> 00:05:36,080
actually automotive infotainment so it

68
00:05:33,630 --> 00:05:39,750
is already a<font color="#CCCCCC"> VBS used in automotive</font>

69
00:05:36,080 --> 00:05:42,120
<font color="#CCCCCC">there's a new alliance</font><font color="#E5E5E5"> which is an</font>

70
00:05:39,750 --> 00:05:48,140
<font color="#CCCCCC">associated group to provide conformance</font>

71
00:05:42,120 --> 00:05:52,250
and<font color="#E5E5E5"> and marketing for a VB and it got</font>

72
00:05:48,140 --> 00:05:55,620
<font color="#E5E5E5">very interesting for other use cases and</font>

73
00:05:52,250 --> 00:05:58,170
the scope<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the work has been extended</font>

74
00:05:55,620 --> 00:06:00,540
in a task<font color="#E5E5E5"> group and the name maybe we</font>

75
00:05:58,170 --> 00:06:04,050
did not<font color="#CCCCCC"> reflect the extended</font><font color="#E5E5E5"> score so we</font>

76
00:06:00,540 --> 00:06:07,260
decided<font color="#CCCCCC"> to change to cover the scope</font>

77
00:06:04,050 --> 00:06:11,070
<font color="#E5E5E5">that's why it is corner TSN today which</font>

78
00:06:07,260 --> 00:06:12,870
includes industrial<font color="#E5E5E5"> and automotive and</font>

79
00:06:11,070 --> 00:06:18,719
many other use cases as I mentioned

80
00:06:12,870 --> 00:06:21,320
before<font color="#CCCCCC"> ok so what is TSN what we are</font>

81
00:06:18,720 --> 00:06:24,120
after we are<font color="#E5E5E5"> after to provide ground</font>

82
00:06:21,320 --> 00:06:26,610
<font color="#CCCCCC">guranteed data transport with bounded</font>

83
00:06:24,120 --> 00:06:29,850
low latency low delay variation and

84
00:06:26,610 --> 00:06:32,520
extremely<font color="#E5E5E5"> low lows so</font><font color="#CCCCCC"> TSN is in fact</font>

85
00:06:29,850 --> 00:06:34,740
<font color="#E5E5E5">includes</font><font color="#CCCCCC"> 4 add-ons to generate</font>

86
00:06:32,520 --> 00:06:37,530
networking or they can call them four

87
00:06:34,740 --> 00:06:40,740
pillars<font color="#E5E5E5"> synchronization is one of them</font>

88
00:06:37,530 --> 00:06:42,388
<font color="#E5E5E5">it's very important and provides grounds</font>

89
00:06:40,740 --> 00:06:46,620
<font color="#E5E5E5">for many other tools</font>

90
00:06:42,389 --> 00:06:48,409
<font color="#CCCCCC">queueing tools reliability</font><font color="#E5E5E5"> is crucial</font>

91
00:06:46,620 --> 00:06:53,939
for<font color="#E5E5E5"> the mission-critical applications</font>

92
00:06:48,409 --> 00:06:55,639
and<font color="#E5E5E5"> we have dedicated standards tools</font>

93
00:06:53,939 --> 00:07:00,000
for reliability like the<font color="#E5E5E5"> film</font>

94
00:06:55,639 --> 00:07:02,009
application and<font color="#E5E5E5"> illumination and well we</font>

95
00:07:00,000 --> 00:07:05,789
will see<font color="#CCCCCC"> details on</font><font color="#E5E5E5"> this shortly this is</font>

96
00:07:02,009 --> 00:07:08,610
<font color="#E5E5E5">the</font><font color="#CCCCCC"> high-level overview and as even the</font>

97
00:07:05,789 --> 00:07:12,930
name of the group such<font color="#CCCCCC"> as we are</font><font color="#E5E5E5"> after</font>

98
00:07:08,610 --> 00:07:15,120
low literacy<font color="#E5E5E5"> for which multiple shapers</font>

99
00:07:12,930 --> 00:07:17,789
and<font color="#CCCCCC"> cueing mechanisms have been already</font>

100
00:07:15,120 --> 00:07:20,370
developed and work is still ongoing<font color="#CCCCCC"> and</font>

101
00:07:17,789 --> 00:07:23,279
together with the<font color="#E5E5E5"> resource management</font>

102
00:07:20,370 --> 00:07:26,009
which is<font color="#E5E5E5"> essential in</font><font color="#CCCCCC"> order to provide</font>

103
00:07:23,279 --> 00:07:26,729
<font color="#CCCCCC">zero conscious shadows that's</font><font color="#E5E5E5"> what we</font>

104
00:07:26,009 --> 00:07:33,330
<font color="#CCCCCC">are after</font>

105
00:07:26,729 --> 00:07:37,318
so the this oops<font color="#E5E5E5"> these two are to</font>

106
00:07:33,330 --> 00:07:40,520
provide the zero congestion loss and for

107
00:07:37,319 --> 00:07:45,360
the reliabilities is against loss<font color="#CCCCCC"> due</font><font color="#E5E5E5"> to</font>

108
00:07:40,520 --> 00:07:48,960
device failure<font color="#CCCCCC"> then</font><font color="#E5E5E5"> I would give the</font>

109
00:07:45,360 --> 00:07:55,740
word<font color="#E5E5E5"> to norm to elaborate why are we</font>

110
00:07:48,960 --> 00:08:07,109
<font color="#E5E5E5">doing this and what is in scope thanks</font>

111
00:07:55,740 --> 00:08:09,930
norm<font color="#CCCCCC"> in what way we're targeting</font>

112
00:08:07,110 --> 00:08:12,900
<font color="#E5E5E5">real-time applications and by real-time</font>

113
00:08:09,930 --> 00:08:15,960
<font color="#CCCCCC">I mean something happens and you have to</font>

114
00:08:12,900 --> 00:08:17,849
respond to<font color="#E5E5E5"> it or something horrible will</font>

115
00:08:15,960 --> 00:08:19,378
<font color="#E5E5E5">happen like two parts of the machine</font>

116
00:08:17,849 --> 00:08:23,159
will bang into each<font color="#E5E5E5"> other the plane</font>

117
00:08:19,379 --> 00:08:27,839
crashes so that means what<font color="#E5E5E5"> we care about</font>

118
00:08:23,159 --> 00:08:29,490
is worst case<font color="#CCCCCC"> latency</font><font color="#E5E5E5"> most of the</font>

119
00:08:27,839 --> 00:08:31,560
<font color="#E5E5E5">applications not all of them by any</font>

120
00:08:29,490 --> 00:08:33,959
<font color="#CCCCCC">means but many of the applications</font><font color="#E5E5E5"> are</font>

121
00:08:31,560 --> 00:08:35,880
control loops<font color="#E5E5E5"> I measure something</font><font color="#CCCCCC"> I</font>

122
00:08:33,958 --> 00:08:38,390
respond<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it I measure something</font><font color="#E5E5E5"> I</font>

123
00:08:35,880 --> 00:08:41,159
respond to<font color="#CCCCCC"> it and cause an action</font>

124
00:08:38,390 --> 00:08:42,718
<font color="#CCCCCC">control theory depends</font><font color="#E5E5E5"> very strongly and</font>

125
00:08:41,159 --> 00:08:46,560
what's the period<font color="#CCCCCC"> of</font><font color="#E5E5E5"> your control loop</font>

126
00:08:42,719 --> 00:08:48,870
and so getting the<font color="#CCCCCC"> information there</font>

127
00:08:46,560 --> 00:08:50,729
before you need<font color="#CCCCCC"> it doesn't help anything</font>

128
00:08:48,870 --> 00:08:54,329
because I have to do the thing at<font color="#CCCCCC"> the</font>

129
00:08:50,730 --> 00:08:54,860
time that's scheduled to do it so all

130
00:08:54,329 --> 00:08:58,120
<font color="#E5E5E5">that matter</font>

131
00:08:54,860 --> 00:09:01,700
is that you get<font color="#E5E5E5"> there soon enough</font>

132
00:08:58,120 --> 00:09:04,550
<font color="#E5E5E5">average mean best-case latencies are</font>

133
00:09:01,700 --> 00:09:07,790
completely irrelevant<font color="#CCCCCC"> so that's not</font><font color="#E5E5E5"> what</font>

134
00:09:04,550 --> 00:09:10,279
you're commonly what<font color="#CCCCCC"> we commonly think</font>

135
00:09:07,790 --> 00:09:14,019
of<font color="#E5E5E5"> as optimizing because I'm not</font>

136
00:09:10,279 --> 00:09:16,730
optimizing<font color="#E5E5E5"> for example buffer occupancy</font>

137
00:09:14,019 --> 00:09:20,260
<font color="#E5E5E5">two fundamental ways to</font><font color="#CCCCCC"> balance your</font>

138
00:09:16,730 --> 00:09:22,760
latency throw away anything that's<font color="#E5E5E5"> late</font>

139
00:09:20,260 --> 00:09:24,680
<font color="#CCCCCC">grossly over provision the network lots</font>

140
00:09:22,760 --> 00:09:27,170
of intensive engineering<font color="#CCCCCC"> you're testing</font>

141
00:09:24,680 --> 00:09:31,040
<font color="#E5E5E5">or provide zero</font><font color="#CCCCCC"> congestion loss we chose</font>

142
00:09:27,170 --> 00:09:33,979
the latter<font color="#CCCCCC"> solution so what am I talking</font>

143
00:09:31,040 --> 00:09:36,260
<font color="#CCCCCC">about</font><font color="#E5E5E5"> I've</font><font color="#CCCCCC"> got several hops at each</font><font color="#E5E5E5"> hop</font>

144
00:09:33,980 --> 00:09:39,410
there are some<font color="#CCCCCC"> queues now if the given</font>

145
00:09:36,260 --> 00:09:43,339
<font color="#E5E5E5">is constant input rate and I should flag</font>

146
00:09:39,410 --> 00:09:46,130
you here<font color="#E5E5E5"> we can't solve all everybody's</font>

147
00:09:43,339 --> 00:09:47,630
problems<font color="#CCCCCC"> there's one</font><font color="#E5E5E5"> kind of problem</font>

148
00:09:46,130 --> 00:09:50,689
that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are interested in</font><font color="#E5E5E5"> solving and</font>

149
00:09:47,630 --> 00:09:53,689
that's constant bitrate streams<font color="#E5E5E5"> if you</font>

150
00:09:50,690 --> 00:09:54,560
have a widely varying bitrate stream we

151
00:09:53,690 --> 00:09:56,660
can't help<font color="#E5E5E5"> you</font>

152
00:09:54,560 --> 00:09:59,029
it's got to be relatively constant<font color="#E5E5E5"> and</font>

153
00:09:56,660 --> 00:10:00,350
<font color="#CCCCCC">it has to</font><font color="#E5E5E5"> be last last long enough that</font>

154
00:09:59,029 --> 00:10:03,439
it's worth<font color="#E5E5E5"> your effort to</font><font color="#CCCCCC"> make a</font>

155
00:10:00,350 --> 00:10:05,870
reservation<font color="#E5E5E5"> for resources</font><font color="#CCCCCC"> before you</font>

156
00:10:03,440 --> 00:10:08,240
start using it<font color="#E5E5E5"> so assuming you've</font>

157
00:10:05,870 --> 00:10:10,430
satisfied<font color="#E5E5E5"> that given that</font><font color="#CCCCCC"> you have a</font>

158
00:10:08,240 --> 00:10:12,230
<font color="#E5E5E5">constant</font><font color="#CCCCCC"> input rate you want</font><font color="#E5E5E5"> a constant</font>

159
00:10:10,430 --> 00:10:14,359
output<font color="#E5E5E5"> rate otherwise you're filling up</font>

160
00:10:12,230 --> 00:10:16,850
<font color="#E5E5E5">or you're draining so in the long term</font>

161
00:10:14,360 --> 00:10:20,360
<font color="#E5E5E5">the output has</font><font color="#CCCCCC"> to equal</font><font color="#E5E5E5"> the input we</font>

162
00:10:16,850 --> 00:10:23,029
find that then the latency is

163
00:10:20,360 --> 00:10:26,690
<font color="#E5E5E5">necessarily bounded if you're not</font>

164
00:10:23,029 --> 00:10:28,519
throwing<font color="#E5E5E5"> anything away</font><font color="#CCCCCC"> so how do we get</font>

165
00:10:26,690 --> 00:10:30,949
zero congestion loss what we do is at

166
00:10:28,519 --> 00:10:33,860
every<font color="#CCCCCC"> hop the packets per interval</font><font color="#E5E5E5"> n</font>

167
00:10:30,949 --> 00:10:36,579
equals the packets per interval out the

168
00:10:33,860 --> 00:10:39,140
data rate<font color="#E5E5E5"> n equals the data rate out now</font>

169
00:10:36,579 --> 00:10:42,079
packetized data is not<font color="#CCCCCC"> a constant</font>

170
00:10:39,140 --> 00:10:44,420
<font color="#CCCCCC">bitrate stream and i'm typically have a</font>

171
00:10:42,079 --> 00:10:47,449
bunch of streams<font color="#E5E5E5"> that</font><font color="#CCCCCC"> i want to do this</font>

172
00:10:44,420 --> 00:10:50,209
with all going out the same port<font color="#E5E5E5"> they</font>

173
00:10:47,449 --> 00:10:54,349
have different data rates<font color="#E5E5E5"> so I can't</font>

174
00:10:50,209 --> 00:10:57,229
perfectly<font color="#CCCCCC"> spaced everything so there</font><font color="#E5E5E5"> are</font>

175
00:10:54,350 --> 00:11:01,760
so<font color="#CCCCCC"> it going to be gaps and bursts</font><font color="#E5E5E5"> in</font>

176
00:10:57,230 --> 00:11:04,399
each individual<font color="#E5E5E5"> flow so what we do in</font>

177
00:11:01,760 --> 00:11:06,500
<font color="#CCCCCC">TSN</font><font color="#E5E5E5"> is we were observe enough buffer</font>

178
00:11:04,399 --> 00:11:08,300
space we've reserved<font color="#CCCCCC"> the buffer space</font>

179
00:11:06,500 --> 00:11:11,170
before the<font color="#E5E5E5"> flow starts</font>

180
00:11:08,300 --> 00:11:17,329
we use a<font color="#E5E5E5"> cueing and</font><font color="#CCCCCC"> reserve we use a</font>

181
00:11:11,170 --> 00:11:20,209
cueing and shaping<font color="#E5E5E5"> discipline that</font>

182
00:11:17,330 --> 00:11:26,650
<font color="#E5E5E5">minimizes the interference between flows</font>

183
00:11:20,210 --> 00:11:31,190
and also<font color="#E5E5E5"> provides a predictable</font><font color="#CCCCCC"> gap and</font>

184
00:11:26,650 --> 00:11:33,949
<font color="#E5E5E5">burst behavior so</font><font color="#CCCCCC"> that we can figure out</font>

185
00:11:31,190 --> 00:11:38,090
what is the worst<font color="#E5E5E5"> case of the bursts</font>

186
00:11:33,950 --> 00:11:40,580
versus gaps in two adjacent<font color="#CCCCCC"> hops</font><font color="#E5E5E5"> that</font>

187
00:11:38,090 --> 00:11:44,390
tells us how many packets we have to

188
00:11:40,580 --> 00:11:47,510
<font color="#E5E5E5">buffer in each node to ensure</font><font color="#CCCCCC"> that we</font>

189
00:11:44,390 --> 00:11:50,060
never miss an<font color="#CCCCCC"> opportunity to transmit so</font>

190
00:11:47,510 --> 00:11:52,040
that it went when it's my flows<font color="#CCCCCC"> turn to</font>

191
00:11:50,060 --> 00:11:54,800
transmit I have to have a packet there

192
00:11:52,040 --> 00:12:00,430
<font color="#E5E5E5">that means I have to have</font><font color="#CCCCCC"> a buffer</font><font color="#E5E5E5"> of a</font>

193
00:11:54,800 --> 00:12:03,199
few<font color="#E5E5E5"> packets so we want queuing</font>

194
00:12:00,430 --> 00:12:05,030
algorithms<font color="#E5E5E5"> that will give</font><font color="#CCCCCC"> us a small</font>

195
00:12:03,200 --> 00:12:09,190
number<font color="#E5E5E5"> of the smallest number of packets</font>

196
00:12:05,030 --> 00:12:11,540
<font color="#E5E5E5">as that gives us the best</font><font color="#CCCCCC"> latency</font><font color="#E5E5E5"> but</font>

197
00:12:09,190 --> 00:12:14,390
it's got<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be predictable its number</font>

198
00:12:11,540 --> 00:12:17,030
one<font color="#E5E5E5"> thing and then for certain known</font>

199
00:12:14,390 --> 00:12:19,010
delay variations for example<font color="#CCCCCC"> it may take</font>

200
00:12:17,030 --> 00:12:22,699
a varying amount<font color="#CCCCCC"> of time to</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> from the</font>

201
00:12:19,010 --> 00:12:24,530
<font color="#CCCCCC">input port to the output queue it may</font>

202
00:12:22,700 --> 00:12:26,690
take a slightly varying amount of time

203
00:12:24,530 --> 00:12:28,220
to get<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the output queue having</font>

204
00:12:26,690 --> 00:12:30,650
selected<font color="#E5E5E5"> for output until it actually</font>

205
00:12:28,220 --> 00:12:32,690
<font color="#CCCCCC">hits the</font><font color="#E5E5E5"> wire there are lots of</font>

206
00:12:30,650 --> 00:12:33,980
variations<font color="#E5E5E5"> in there you have to have</font><font color="#CCCCCC"> a</font>

207
00:12:32,690 --> 00:12:36,740
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of extra buffer for the</font>

208
00:12:33,980 --> 00:12:38,750
variations<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the variation in</font>

209
00:12:36,740 --> 00:12:40,340
delivery time means you're storing data

210
00:12:38,750 --> 00:12:42,020
that's the only way you can<font color="#E5E5E5"> have a</font>

211
00:12:40,340 --> 00:12:45,020
variation<font color="#E5E5E5"> in delivery time is</font><font color="#CCCCCC"> that</font>

212
00:12:42,020 --> 00:12:47,060
you're storing data<font color="#E5E5E5"> and when that time</font>

213
00:12:45,020 --> 00:12:48,530
varies<font color="#E5E5E5"> you wind up dumping the data</font>

214
00:12:47,060 --> 00:12:51,560
there has to be a place<font color="#CCCCCC"> for it</font>

215
00:12:48,530 --> 00:12:54,620
so having<font color="#E5E5E5"> computed the buffer space we</font>

216
00:12:51,560 --> 00:12:58,209
can get the latency now to give you an

217
00:12:54,620 --> 00:13:04,130
<font color="#E5E5E5">idea of why what we're doing</font><font color="#CCCCCC"> the usual</font>

218
00:12:58,210 --> 00:13:06,560
<font color="#E5E5E5">best different kinds of service</font><font color="#CCCCCC"> this</font>

219
00:13:04,130 --> 00:13:09,620
doesn't have a<font color="#E5E5E5"> okay the usual best</font>

220
00:13:06,560 --> 00:13:13,869
<font color="#E5E5E5">different kinds of service the more</font>

221
00:13:09,620 --> 00:13:18,880
buffers you<font color="#E5E5E5"> allocate the</font><font color="#CCCCCC"> fewer you draw</font>

222
00:13:13,870 --> 00:13:20,530
where is it that one thank<font color="#CCCCCC"> you</font><font color="#E5E5E5"> okay</font>

223
00:13:18,880 --> 00:13:24,910
more buffers you<font color="#CCCCCC"> allocate</font><font color="#E5E5E5"> the fewer</font>

224
00:13:20,530 --> 00:13:27,670
packets you drop<font color="#CCCCCC"> if you look at what is</font>

225
00:13:24,910 --> 00:13:29,500
the latency<font color="#CCCCCC"> for an average packet you</font>

226
00:13:27,670 --> 00:13:31,689
find there's a minimum it's got to get

227
00:13:29,500 --> 00:13:34,030
to where it's<font color="#E5E5E5"> going so</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> minimum</font>

228
00:13:31,690 --> 00:13:37,060
latency<font color="#CCCCCC"> most packets don't</font><font color="#E5E5E5"> take too long</font>

229
00:13:34,030 --> 00:13:39,579
<font color="#CCCCCC">because the network is not</font><font color="#E5E5E5"> is typically</font>

230
00:13:37,060 --> 00:13:41,229
<font color="#E5E5E5">not congestion but if it networks a bit</font>

231
00:13:39,580 --> 00:13:42,880
<font color="#CCCCCC">congestion some packets</font><font color="#E5E5E5"> can take a</font>

232
00:13:41,230 --> 00:13:46,540
longer<font color="#CCCCCC"> time some packets</font><font color="#E5E5E5"> can take a</font>

233
00:13:42,880 --> 00:13:49,930
really<font color="#CCCCCC"> long</font><font color="#E5E5E5"> time if there's a topology</font>

234
00:13:46,540 --> 00:13:53,069
change it gets ridiculously<font color="#E5E5E5"> long and the</font>

235
00:13:49,930 --> 00:13:57,579
variation in latency sorry

236
00:13:53,070 --> 00:14:02,200
most packets occur at<font color="#E5E5E5"> roughly the</font><font color="#CCCCCC"> same</font>

237
00:13:57,580 --> 00:14:07,870
<font color="#CCCCCC">time near that peak</font><font color="#E5E5E5"> but you can have</font>

238
00:14:02,200 --> 00:14:10,840
very long latency<font color="#E5E5E5"> so if I'm trying to</font>

239
00:14:07,870 --> 00:14:13,750
engineer<font color="#E5E5E5"> my network and I say this is</font>

240
00:14:10,840 --> 00:14:16,480
<font color="#E5E5E5">pretty good but this is my this is</font><font color="#CCCCCC"> my</font>

241
00:14:13,750 --> 00:14:18,160
cutoff<font color="#CCCCCC"> if I want to if I want this to be</font>

242
00:14:16,480 --> 00:14:20,560
<font color="#E5E5E5">my cutoff and I say</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> want</font>

243
00:14:18,160 --> 00:14:22,209
anything to<font color="#E5E5E5"> be take any longer than</font><font color="#CCCCCC"> that</font>

244
00:14:20,560 --> 00:14:25,420
to get<font color="#CCCCCC"> into n</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the worst</font>

245
00:14:22,210 --> 00:14:27,910
<font color="#E5E5E5">end-to-end latency I can accept if I</font>

246
00:14:25,420 --> 00:14:31,089
push that<font color="#CCCCCC"> in from a higher number</font><font color="#E5E5E5"> that</font>

247
00:14:27,910 --> 00:14:34,650
<font color="#E5E5E5">means I have to drop packets that's the</font>

248
00:14:31,090 --> 00:14:37,780
way and that's<font color="#E5E5E5"> what we don't want to do</font>

249
00:14:34,650 --> 00:14:41,410
so what we do instead<font color="#E5E5E5"> is</font><font color="#CCCCCC"> we try</font><font color="#E5E5E5"> to come</font>

250
00:14:37,780 --> 00:14:43,480
up<font color="#CCCCCC"> with the scheme such that we know how</font>

251
00:14:41,410 --> 00:14:45,640
many<font color="#E5E5E5"> buffers it takes so that</font><font color="#CCCCCC"> I'll never</font>

252
00:14:43,480 --> 00:14:48,760
lose one<font color="#E5E5E5"> if I exceed that number of</font>

253
00:14:45,640 --> 00:14:51,310
<font color="#CCCCCC">buffers doesn't matter I've still</font><font color="#E5E5E5"> got</font>

254
00:14:48,760 --> 00:14:55,710
some religion residual packet loss

255
00:14:51,310 --> 00:15:01,089
because foxes can<font color="#E5E5E5"> fail wires can fail</font>

256
00:14:55,710 --> 00:15:04,330
<font color="#CCCCCC">cosmic</font><font color="#E5E5E5"> rays can hit the packet my</font>

257
00:15:01,090 --> 00:15:05,680
latency is now a curve that<font color="#CCCCCC"> has a</font>

258
00:15:04,330 --> 00:15:06,730
<font color="#E5E5E5">minimum because it takes a certain</font>

259
00:15:05,680 --> 00:15:09,069
<font color="#CCCCCC">amount</font><font color="#E5E5E5"> of time to get there no matter</font>

260
00:15:06,730 --> 00:15:11,590
<font color="#CCCCCC">what but I've got a maximum latency that</font>

261
00:15:09,070 --> 00:15:14,770
<font color="#CCCCCC">I do not exceed and there is no tail</font>

262
00:15:11,590 --> 00:15:17,560
<font color="#CCCCCC">past that</font><font color="#E5E5E5"> typically that maximum latency</font>

263
00:15:14,770 --> 00:15:19,660
there's my average latency<font color="#E5E5E5"> my average</font>

264
00:15:17,560 --> 00:15:21,430
<font color="#CCCCCC">latency is</font><font color="#E5E5E5"> typically somewhat higher</font>

265
00:15:19,660 --> 00:15:26,530
than<font color="#CCCCCC"> it would be if I simply gave the</font>

266
00:15:21,430 --> 00:15:28,349
packets higher priority that<font color="#E5E5E5"> diagram</font>

267
00:15:26,530 --> 00:15:32,870
right there is the difference between

268
00:15:28,350 --> 00:15:40,910
<font color="#E5E5E5">TSN and what we want to do with that net</font>

269
00:15:32,870 --> 00:15:45,590
and typical best<font color="#CCCCCC"> avert algorithms so</font><font color="#E5E5E5"> why</font>

270
00:15:40,910 --> 00:15:48,790
TSN without TSN you can do it you can

271
00:15:45,590 --> 00:15:50,030
<font color="#E5E5E5">over provision</font><font color="#CCCCCC"> the network you can use</font>

272
00:15:48,790 --> 00:15:56,540
priorities

273
00:15:50,030 --> 00:15:58,010
you can try to set the timing on<font color="#E5E5E5"> your</font>

274
00:15:56,540 --> 00:16:00,980
<font color="#E5E5E5">transmitter so that</font><font color="#CCCCCC"> they don't</font><font color="#E5E5E5"> interfere</font>

275
00:15:58,010 --> 00:16:04,490
<font color="#E5E5E5">too much there's lots of things you can</font>

276
00:16:00,980 --> 00:16:06,950
<font color="#E5E5E5">do and it winds up being people do this</font>

277
00:16:04,490 --> 00:16:09,880
<font color="#E5E5E5">today</font><font color="#CCCCCC"> a lot and they wind up</font><font color="#E5E5E5"> having</font><font color="#CCCCCC"> to</font>

278
00:16:06,950 --> 00:16:12,340
spend<font color="#E5E5E5"> a very</font><font color="#CCCCCC"> long time testing</font>

279
00:16:09,880 --> 00:16:14,930
<font color="#E5E5E5">especially the corner cases especially</font>

280
00:16:12,340 --> 00:16:16,550
<font color="#E5E5E5">what happens when I stop these three</font>

281
00:16:14,930 --> 00:16:19,430
<font color="#E5E5E5">machines and the other two machines are</font>

282
00:16:16,550 --> 00:16:22,780
<font color="#CCCCCC">still running you can make it work</font><font color="#E5E5E5"> but</font>

283
00:16:19,430 --> 00:16:25,930
with TSN it's trivial<font color="#E5E5E5"> to engineer</font>

284
00:16:22,780 --> 00:16:28,640
because you ask it<font color="#E5E5E5"> will that work yes</font>

285
00:16:25,930 --> 00:16:31,270
because<font color="#CCCCCC"> the algorithms we</font><font color="#E5E5E5"> use give you a</font>

286
00:16:28,640 --> 00:16:34,340
yes or no answer can<font color="#CCCCCC"> you add</font><font color="#E5E5E5"> this stream</font>

287
00:16:31,270 --> 00:16:37,819
<font color="#CCCCCC">it works even when</font><font color="#E5E5E5"> you have the</font><font color="#CCCCCC"> hard to</font>

288
00:16:34,340 --> 00:16:39,740
test corner cases<font color="#E5E5E5"> shutting off all but</font>

289
00:16:37,820 --> 00:16:42,170
one stream does not cause the<font color="#CCCCCC"> one stream</font>

290
00:16:39,740 --> 00:16:44,360
to suddenly<font color="#E5E5E5"> burst or change change the</font>

291
00:16:42,170 --> 00:16:46,490
way it works<font color="#E5E5E5"> which makes it cheaper</font>

292
00:16:44,360 --> 00:16:49,100
<font color="#CCCCCC">because your</font><font color="#E5E5E5"> costs your people</font><font color="#CCCCCC"> costs go</font>

293
00:16:46,490 --> 00:16:51,830
way down<font color="#E5E5E5"> and because you can use the</font>

294
00:16:49,100 --> 00:17:00,500
same<font color="#E5E5E5"> network for the TSN and for</font>

295
00:16:51,830 --> 00:17:04,069
ordinary traffic<font color="#CCCCCC"> I mentioned</font><font color="#E5E5E5"> the only</font>

296
00:17:00,500 --> 00:17:05,630
<font color="#CCCCCC">thing that makes that</font><font color="#E5E5E5"> tail</font><font color="#CCCCCC"> that keeps</font>

297
00:17:04,069 --> 00:17:09,649
the curve on the tail no matter how many

298
00:17:05,630 --> 00:17:11,690
buffers<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have is failures failures of</font>

299
00:17:09,650 --> 00:17:16,100
links failures of packets failures of

300
00:17:11,690 --> 00:17:21,080
devices<font color="#E5E5E5"> so there is one other big</font>

301
00:17:16,099 --> 00:17:25,550
technique that we use which<font color="#E5E5E5"> is per</font>

302
00:17:21,079 --> 00:17:28,610
packet redundancy<font color="#E5E5E5"> now the normal way</font><font color="#CCCCCC"> you</font>

303
00:17:25,550 --> 00:17:30,440
do<font color="#E5E5E5"> redundancy is you have two paths from</font>

304
00:17:28,610 --> 00:17:33,350
A to B<font color="#E5E5E5"> taking different routes through</font>

305
00:17:30,440 --> 00:17:35,120
the<font color="#E5E5E5"> network and you use one path and if</font>

306
00:17:33,350 --> 00:17:38,719
you discover it fails<font color="#E5E5E5"> you switch over to</font>

307
00:17:35,120 --> 00:17:40,429
the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> paths sometimes you send the</font>

308
00:17:38,720 --> 00:17:42,170
packets on both paths sometimes you

309
00:17:40,430 --> 00:17:44,660
don't<font color="#CCCCCC"> but you notice that it failed</font><font color="#E5E5E5"> and</font>

310
00:17:42,170 --> 00:17:46,190
you switch over this is kind of like

311
00:17:44,660 --> 00:17:49,460
<font color="#CCCCCC">that except what we do</font>

312
00:17:46,190 --> 00:17:52,220
<font color="#CCCCCC">is we serial</font><font color="#E5E5E5"> number every packet and</font><font color="#CCCCCC"> we</font>

313
00:17:49,460 --> 00:17:54,230
receive both packets from<font color="#E5E5E5"> both streams</font>

314
00:17:52,220 --> 00:17:56,750
or all three streams or however many<font color="#E5E5E5"> you</font>

315
00:17:54,230 --> 00:18:00,380
have and by looking at<font color="#CCCCCC"> the serial number</font>

316
00:17:56,750 --> 00:18:03,620
<font color="#CCCCCC">we throw</font><font color="#E5E5E5"> away the ones we don't want so</font>

317
00:18:00,380 --> 00:18:06,410
there is no<font color="#E5E5E5"> detect failure cycle and</font>

318
00:18:03,620 --> 00:18:09,979
respond to<font color="#E5E5E5"> the failure with some kind of</font>

319
00:18:06,410 --> 00:18:15,650
action<font color="#CCCCCC"> that doesn't</font><font color="#E5E5E5"> happen we're always</font>

320
00:18:09,980 --> 00:18:18,470
taking<font color="#E5E5E5"> both paths and that means that it</font>

321
00:18:15,650 --> 00:18:21,110
<font color="#E5E5E5">would be unusual</font><font color="#CCCCCC"> to lose even one</font><font color="#E5E5E5"> packet</font>

322
00:18:18,470 --> 00:18:25,610
<font color="#E5E5E5">even if something goes down even if</font>

323
00:18:21,110 --> 00:18:27,740
<font color="#E5E5E5">something goes intermittent</font><font color="#CCCCCC"> we've all</font>

324
00:18:25,610 --> 00:18:30,560
had the<font color="#CCCCCC"> experience of a link</font><font color="#E5E5E5"> starts to</font>

325
00:18:27,740 --> 00:18:32,900
degrade<font color="#CCCCCC"> you start to</font><font color="#E5E5E5"> lose more and more</font>

326
00:18:30,560 --> 00:18:34,580
packets<font color="#E5E5E5"> from it at some point</font><font color="#CCCCCC"> after</font>

327
00:18:32,900 --> 00:18:38,000
losing a bunch<font color="#E5E5E5"> of packets you decide</font>

328
00:18:34,580 --> 00:18:39,530
it's out of its<font color="#E5E5E5"> service parameters</font><font color="#CCCCCC"> it's</font>

329
00:18:38,000 --> 00:18:42,200
giving you too<font color="#E5E5E5"> many</font><font color="#CCCCCC"> errors now you</font>

330
00:18:39,530 --> 00:18:43,910
switch over<font color="#E5E5E5"> in the whole process you</font>

331
00:18:42,200 --> 00:18:46,040
lose a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> packets the idea is here</font>

332
00:18:43,910 --> 00:18:49,340
<font color="#E5E5E5">you don't lose any packets so that you</font>

333
00:18:46,040 --> 00:18:53,860
can<font color="#E5E5E5"> get extremely high extremely low</font>

334
00:18:49,340 --> 00:18:53,860
packet loss rates<font color="#E5E5E5"> even</font><font color="#CCCCCC"> on the long term</font>

335
00:18:56,080 --> 00:19:01,490
we have another important thing<font color="#CCCCCC"> which is</font>

336
00:18:59,210 --> 00:19:03,380
<font color="#E5E5E5">the packets come in we have filtering</font>

337
00:19:01,490 --> 00:19:06,890
<font color="#E5E5E5">and policing</font><font color="#CCCCCC"> and then the</font><font color="#E5E5E5"> queueing</font>

338
00:19:03,380 --> 00:19:07,970
shaping and output this doesn't show the

339
00:19:06,890 --> 00:19:12,200
forwarding but of course there's a

340
00:19:07,970 --> 00:19:17,630
<font color="#E5E5E5">forwarding choice in here</font><font color="#CCCCCC"> too an</font>

341
00:19:12,200 --> 00:19:20,960
important part of this is<font color="#CCCCCC"> that you can't</font>

342
00:19:17,630 --> 00:19:26,960
<font color="#CCCCCC">have misbehaving streams</font><font color="#E5E5E5"> mess up</font>

343
00:19:20,960 --> 00:19:29,510
<font color="#CCCCCC">well-behaved streams if you look at a</font>

344
00:19:26,960 --> 00:19:31,580
system with lots of parts<font color="#E5E5E5"> especially a</font>

345
00:19:29,510 --> 00:19:34,720
real-time system<font color="#E5E5E5"> packets flying</font>

346
00:19:31,580 --> 00:19:41,330
everywhere<font color="#CCCCCC"> it's extremely extremely</font><font color="#E5E5E5"> hard</font>

347
00:19:34,720 --> 00:19:47,150
to analyze<font color="#E5E5E5"> all failure modes</font><font color="#CCCCCC"> okay</font>

348
00:19:41,330 --> 00:19:49,580
and these<font color="#E5E5E5"> things go into airplanes they</font>

349
00:19:47,150 --> 00:19:51,980
go into<font color="#E5E5E5"> automobiles where such analysis</font>

350
00:19:49,580 --> 00:19:53,480
<font color="#E5E5E5">is very very important because people</font>

351
00:19:51,980 --> 00:19:58,770
<font color="#E5E5E5">can die if you don't</font>

352
00:19:53,480 --> 00:20:00,740
so<font color="#CCCCCC"> it</font>

353
00:19:58,770 --> 00:20:03,570
to reduce the<font color="#E5E5E5"> number of failure cases</font>

354
00:20:00,740 --> 00:20:06,090
<font color="#E5E5E5">sometimes even at the expense</font><font color="#CCCCCC"> of perhaps</font>

355
00:20:03,570 --> 00:20:07,980
increasing<font color="#CCCCCC"> the chances of</font><font color="#E5E5E5"> a failure</font><font color="#CCCCCC"> as</font>

356
00:20:06,090 --> 00:20:10,260
long as you can analyze<font color="#CCCCCC"> what</font><font color="#E5E5E5"> will happen</font>

357
00:20:07,980 --> 00:20:17,250
and show that<font color="#E5E5E5"> it's okay that if it</font>

358
00:20:10,260 --> 00:20:19,650
happens so every frame<font color="#E5E5E5"> can we can</font>

359
00:20:17,250 --> 00:20:24,030
identify which flow it belongs<font color="#E5E5E5"> to we can</font>

360
00:20:19,650 --> 00:20:30,480
market the usual red green yellow<font color="#CCCCCC"> we can</font>

361
00:20:24,030 --> 00:20:33,629
also have timed gates<font color="#E5E5E5"> that say this port</font>

362
00:20:30,480 --> 00:20:39,270
is open for packets of this type<font color="#E5E5E5"> now</font>

363
00:20:33,630 --> 00:20:42,900
it's closed<font color="#CCCCCC"> so we can insist that the</font>

364
00:20:39,270 --> 00:20:44,370
<font color="#E5E5E5">break sensor not only transmit only the</font>

365
00:20:42,900 --> 00:20:46,470
brake sensor packets but it only

366
00:20:44,370 --> 00:20:48,600
transmits it at these times when it's

367
00:20:46,470 --> 00:20:54,480
supposed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that it only transmit</font>

368
00:20:48,600 --> 00:20:56,010
the<font color="#E5E5E5"> one okay now a breaks entered sensor</font>

369
00:20:54,480 --> 00:20:57,960
that runs off at the mouth and<font color="#E5E5E5"> starts</font>

370
00:20:56,010 --> 00:21:02,070
transmitting continuously can't screw up

371
00:20:57,960 --> 00:21:03,780
<font color="#E5E5E5">the rest of the car</font><font color="#CCCCCC"> various</font><font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to deal</font>

372
00:21:02,070 --> 00:21:05,340
with<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> may be you turn it up we</font>

373
00:21:03,780 --> 00:21:06,810
have in our standard we<font color="#CCCCCC"> have various</font>

374
00:21:05,340 --> 00:21:08,850
ways<font color="#CCCCCC"> to</font><font color="#E5E5E5"> view with that maybe you</font><font color="#CCCCCC"> drop</font>

375
00:21:06,810 --> 00:21:13,560
the offending packet<font color="#E5E5E5"> maybe you cut off</font>

376
00:21:08,850 --> 00:21:16,439
the offending port one bad thing<font color="#CCCCCC"> about</font>

377
00:21:13,560 --> 00:21:20,690
<font color="#E5E5E5">that is that might maybe you programmed</font>

378
00:21:16,440 --> 00:21:25,110
it wrong so<font color="#CCCCCC"> don't fix that in testing</font>

379
00:21:20,690 --> 00:21:26,670
<font color="#CCCCCC">but</font><font color="#E5E5E5"> on the other hand when</font><font color="#CCCCCC"> it comes to</font>

380
00:21:25,110 --> 00:21:29,010
running<font color="#E5E5E5"> off at the mouth so what what is</font>

381
00:21:26,670 --> 00:21:30,960
<font color="#CCCCCC">it transmitting</font><font color="#E5E5E5"> well that's a good</font>

382
00:21:29,010 --> 00:21:33,570
<font color="#E5E5E5">question</font><font color="#CCCCCC"> that's a lot of</font><font color="#E5E5E5"> failure modes</font>

383
00:21:30,960 --> 00:21:34,710
if it's transmitting<font color="#E5E5E5"> too many packets</font>

384
00:21:33,570 --> 00:21:37,350
when it shouldn't then you know

385
00:21:34,710 --> 00:21:39,870
something's wrong<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I guarantee your</font>

386
00:21:37,350 --> 00:21:43,860
failure analysis did include<font color="#CCCCCC"> the case</font>

387
00:21:39,870 --> 00:21:46,500
where that<font color="#E5E5E5"> thing dies so if it does</font>

388
00:21:43,860 --> 00:21:48,780
anything<font color="#E5E5E5"> weird</font><font color="#CCCCCC"> you shut it down</font><font color="#E5E5E5"> your</font>

389
00:21:46,500 --> 00:21:50,910
<font color="#E5E5E5">failure analysis has covered</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> that's</font>

390
00:21:48,780 --> 00:21:54,180
a good thing when you're trying<font color="#E5E5E5"> to</font>

391
00:21:50,910 --> 00:21:56,430
<font color="#E5E5E5">figure</font><font color="#CCCCCC"> out what's broken so we can</font>

392
00:21:54,180 --> 00:21:59,310
protect against<font color="#E5E5E5"> bandwidth violations</font>

393
00:21:56,430 --> 00:22:03,560
this decisions can be per stream per

394
00:21:59,310 --> 00:22:07,260
priority we have a the gate<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

395
00:22:03,560 --> 00:22:09,360
operated on<font color="#E5E5E5"> a time schedule all of</font><font color="#CCCCCC"> the</font>

396
00:22:07,260 --> 00:22:12,330
<font color="#CCCCCC">devices can be</font><font color="#E5E5E5"> synchronized so the time</font>

397
00:22:09,360 --> 00:22:14,820
schedules are running all the time

398
00:22:12,330 --> 00:22:22,649
so I can set my input gate to match the

399
00:22:14,820 --> 00:22:26,540
output gate at the<font color="#E5E5E5"> other side</font><font color="#CCCCCC"> and now we</font>

400
00:22:22,650 --> 00:22:29,600
have the next section for Janos to take

401
00:22:26,540 --> 00:22:34,230
<font color="#CCCCCC">ok so after the reliability aspects</font>

402
00:22:29,600 --> 00:22:36,780
which is the includes protection<font color="#E5E5E5"> in the</font>

403
00:22:34,230 --> 00:22:39,780
ingress let's see what happens on<font color="#E5E5E5"> the</font>

404
00:22:36,780 --> 00:22:42,620
other<font color="#E5E5E5"> box at the output port the</font>

405
00:22:39,780 --> 00:22:46,020
<font color="#CCCCCC">queueing man isms in order to provide</font>

406
00:22:42,620 --> 00:22:47,929
deterministic latency<font color="#CCCCCC"> I guess you are</font>

407
00:22:46,020 --> 00:22:51,540
all familiar with the stick by the

408
00:22:47,930 --> 00:22:54,480
<font color="#CCCCCC">queueing but it was started in 1998 so</font>

409
00:22:51,540 --> 00:22:58,710
that's that was<font color="#CCCCCC"> the basic queuing</font>

410
00:22:54,480 --> 00:23:02,550
mechanism we had and<font color="#CCCCCC"> - that waited for</font>

411
00:22:58,710 --> 00:23:05,760
<font color="#CCCCCC">awaited queues were added</font><font color="#E5E5E5"> with simple</font>

412
00:23:02,550 --> 00:23:10,909
hooks<font color="#E5E5E5"> in order to not</font><font color="#CCCCCC"> to over specifies</font>

413
00:23:05,760 --> 00:23:13,410
the details<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is the first</font>

414
00:23:10,910 --> 00:23:15,720
<font color="#E5E5E5">mechanism that was actually specified by</font>

415
00:23:13,410 --> 00:23:18,480
the<font color="#CCCCCC"> ABB test group for</font><font color="#E5E5E5"> audio/video</font>

416
00:23:15,720 --> 00:23:21,480
bridging streams at the<font color="#E5E5E5"> time it is</font>

417
00:23:18,480 --> 00:23:23,700
called<font color="#E5E5E5"> credit based shaper</font><font color="#CCCCCC"> I will</font>

418
00:23:21,480 --> 00:23:29,340
explain in<font color="#CCCCCC"> the next slide why</font><font color="#E5E5E5"> why the</font>

419
00:23:23,700 --> 00:23:33,330
name<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is she so the shape</font><font color="#CCCCCC"> queues</font>

420
00:23:29,340 --> 00:23:36,600
<font color="#E5E5E5">oops the shape</font><font color="#CCCCCC"> queues are these so this</font>

421
00:23:33,330 --> 00:23:38,490
is the in these diagrams<font color="#CCCCCC"> not mark</font>

422
00:23:36,600 --> 00:23:41,429
marking for the shapes shapes<font color="#CCCCCC"> cues</font><font color="#E5E5E5"> a</font>

423
00:23:38,490 --> 00:23:46,430
have higher priority than<font color="#CCCCCC"> any other</font>

424
00:23:41,430 --> 00:23:49,440
<font color="#E5E5E5">queues and this man is</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> still</font>

425
00:23:46,430 --> 00:23:51,390
guarantees bandwidth<font color="#CCCCCC"> - the highest</font>

426
00:23:49,440 --> 00:23:55,110
<font color="#E5E5E5">priority that is not shaped</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> a</font>

427
00:23:51,390 --> 00:23:57,540
priority<font color="#CCCCCC"> 7 in this</font><font color="#E5E5E5"> example the credit</font>

428
00:23:55,110 --> 00:24:00,719
base shaper is similar to a<font color="#CCCCCC"> typical run</font>

429
00:23:57,540 --> 00:24:04,860
<font color="#E5E5E5">late birthday at the shaper but very</font>

430
00:24:00,720 --> 00:24:08,280
nice<font color="#E5E5E5"> with very nice properties it has</font>

431
00:24:04,860 --> 00:24:10,320
only one parameter to set up and as I

432
00:24:08,280 --> 00:24:14,129
mentioned already the<font color="#E5E5E5"> impact on other</font>

433
00:24:10,320 --> 00:24:17,159
queues or<font color="#CCCCCC"> the number of registers papers</font>

434
00:24:14,130 --> 00:24:19,680
is<font color="#E5E5E5"> extractable and it doesn't depends</font>

435
00:24:17,160 --> 00:24:22,960
the impact to<font color="#E5E5E5"> the other queues on how</font>

436
00:24:19,680 --> 00:24:24,820
many shapers you use

437
00:24:22,960 --> 00:24:29,110
let's see what it<font color="#CCCCCC"> is so why why it is</font>

438
00:24:24,820 --> 00:24:33,549
guided by<font color="#E5E5E5"> shaper so in in the</font><font color="#CCCCCC"> Idol</font>

439
00:24:29,110 --> 00:24:37,709
<font color="#CCCCCC">periode</font><font color="#E5E5E5"> here in the</font><font color="#CCCCCC"> idol slope</font><font color="#E5E5E5"> you each</font>

440
00:24:33,549 --> 00:24:40,809
<font color="#E5E5E5">queue or the queues collect credit which</font>

441
00:24:37,710 --> 00:24:43,990
are used actually when a<font color="#E5E5E5"> frame is</font>

442
00:24:40,809 --> 00:24:48,879
transmitted<font color="#E5E5E5"> so the credit</font><font color="#CCCCCC"> gate</font><font color="#E5E5E5"> goes down</font>

443
00:24:43,990 --> 00:24:52,779
<font color="#E5E5E5">when frame gets transmitted so if you go</font>

444
00:24:48,880 --> 00:24:56,789
<font color="#CCCCCC">negative with your credits</font><font color="#E5E5E5"> then the</font><font color="#CCCCCC"> note</font>

445
00:24:52,779 --> 00:24:59,919
transmission is possible<font color="#E5E5E5"> from that queue</font>

446
00:24:56,789 --> 00:25:02,710
<font color="#CCCCCC">so that's actually a key difference</font>

447
00:24:59,919 --> 00:25:06,789
compared<font color="#CCCCCC"> to token</font><font color="#E5E5E5"> bucket that the credit</font>

448
00:25:02,710 --> 00:25:08,049
can go negative<font color="#E5E5E5"> this credit accumulation</font>

449
00:25:06,789 --> 00:25:10,240
can be awaited

450
00:25:08,049 --> 00:25:12,129
so you can add the weighted aspects if

451
00:25:10,240 --> 00:25:18,519
you want to the credit<font color="#CCCCCC"> by</font><font color="#E5E5E5"> shape or</font>

452
00:25:12,129 --> 00:25:21,370
operation so<font color="#E5E5E5"> that was that's the</font><font color="#CCCCCC"> avb</font>

453
00:25:18,519 --> 00:25:24,700
<font color="#E5E5E5">queueing if you heard that term and what</font>

454
00:25:21,370 --> 00:25:28,479
I'm explaining from now on was specified

455
00:25:24,700 --> 00:25:31,570
<font color="#E5E5E5">as TSN well it's all one package</font>

456
00:25:28,480 --> 00:25:36,429
together<font color="#E5E5E5"> today so</font><font color="#CCCCCC"> this was</font><font color="#E5E5E5"> this is</font>

457
00:25:31,570 --> 00:25:40,120
called<font color="#E5E5E5"> schedule traffic which introduces</font>

458
00:25:36,429 --> 00:25:42,519
time based scheduling<font color="#E5E5E5"> to the queues it</font>

459
00:25:40,120 --> 00:25:46,479
is for it<font color="#E5E5E5"> is to reduce the variation</font>

460
00:25:42,519 --> 00:25:50,019
<font color="#E5E5E5">delay variation for CBR streams which</font>

461
00:25:46,480 --> 00:25:52,149
are periodic with<font color="#E5E5E5"> known timing</font><font color="#CCCCCC"> actually</font>

462
00:25:50,019 --> 00:25:55,980
<font color="#CCCCCC">it is time based programming of the</font>

463
00:25:52,149 --> 00:25:59,590
bridging qs8 queues in and the tool is

464
00:25:55,980 --> 00:26:03,070
these time gates up front of each queue

465
00:25:59,590 --> 00:26:05,320
so there is a gate before<font color="#E5E5E5"> the</font>

466
00:26:03,070 --> 00:26:07,330
transmission selection<font color="#E5E5E5"> a front of each</font>

467
00:26:05,320 --> 00:26:11,889
queue which can be open<font color="#E5E5E5"> and closed and</font>

468
00:26:07,330 --> 00:26:14,850
these gates are programmed according to

469
00:26:11,889 --> 00:26:17,830
the time so it gives a time schedule<font color="#CCCCCC"> and</font>

470
00:26:14,850 --> 00:26:20,019
of course you need<font color="#CCCCCC"> to know the time so</font>

471
00:26:17,830 --> 00:26:24,460
time synchronization is needed so you

472
00:26:20,019 --> 00:26:28,659
can establish times thoughts or or<font color="#E5E5E5"> can</font>

473
00:26:24,460 --> 00:26:33,220
do quite fancy things<font color="#CCCCCC"> with this with</font>

474
00:26:28,659 --> 00:26:35,890
this tool<font color="#CCCCCC"> the time gated</font><font color="#E5E5E5"> queues for</font>

475
00:26:33,220 --> 00:26:39,320
example the time gated

476
00:26:35,890 --> 00:26:44,059
basic tool we<font color="#CCCCCC"> use for the cyclic queuing</font>

477
00:26:39,320 --> 00:26:48,168
and forwarding which is in essence<font color="#E5E5E5"> uses</font>

478
00:26:44,059 --> 00:26:50,120
double buffers<font color="#E5E5E5"> to</font><font color="#CCCCCC"> establish cyclists in</font>

479
00:26:48,169 --> 00:26:52,760
the network and and the goal is<font color="#E5E5E5"> that</font>

480
00:26:50,120 --> 00:26:57,168
each packet<font color="#E5E5E5"> spends exactly</font><font color="#CCCCCC"> one cycle at</font>

481
00:26:52,760 --> 00:26:59,780
each<font color="#CCCCCC"> hop this example</font><font color="#E5E5E5"> shows two pairs so</font>

482
00:26:57,169 --> 00:27:02,900
<font color="#CCCCCC">four and five</font><font color="#E5E5E5"> are one pair this green</font>

483
00:26:59,780 --> 00:27:05,418
and blue and two and<font color="#CCCCCC"> three are as well</font>

484
00:27:02,900 --> 00:27:11,659
one pair but<font color="#CCCCCC"> let's focus on</font><font color="#E5E5E5"> a pair of</font>

485
00:27:05,419 --> 00:27:16,250
<font color="#CCCCCC">cues</font><font color="#E5E5E5"> so what happens is that the frames</font>

486
00:27:11,659 --> 00:27:20,299
<font color="#CCCCCC">that you receive are collected for a</font>

487
00:27:16,250 --> 00:27:22,909
certain time<font color="#E5E5E5"> period and then with one of</font>

488
00:27:20,299 --> 00:27:24,350
the<font color="#CCCCCC"> queues and then they are transmitted</font>

489
00:27:22,909 --> 00:27:27,289
<font color="#E5E5E5">and the collection happens in the other</font>

490
00:27:24,350 --> 00:27:29,600
queue so that<font color="#CCCCCC"> the two queues are served</font>

491
00:27:27,289 --> 00:27:34,220
in<font color="#E5E5E5"> an alternate fashion and that's what</font>

492
00:27:29,600 --> 00:27:36,168
provides<font color="#CCCCCC"> the DC click</font><font color="#E5E5E5"> queuing and in</font>

493
00:27:34,220 --> 00:27:40,100
order<font color="#E5E5E5"> to achieve this alternate</font>

494
00:27:36,169 --> 00:27:43,039
operation oops<font color="#E5E5E5"> we use we</font><font color="#CCCCCC"> use the time</font>

495
00:27:40,100 --> 00:27:45,469
gates up front of the<font color="#CCCCCC"> queue so actually</font>

496
00:27:43,039 --> 00:27:50,600
we program the time gates<font color="#E5E5E5"> according</font><font color="#CCCCCC"> to</font>

497
00:27:45,470 --> 00:27:54,049
the cycle time<font color="#E5E5E5"> we want to achieve what I</font>

498
00:27:50,600 --> 00:27:56,719
described<font color="#E5E5E5"> up or actually all of us this</font>

499
00:27:54,049 --> 00:27:59,000
<font color="#E5E5E5">kind of up to</font><font color="#CCCCCC"> this point</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> all done</font>

500
00:27:56,720 --> 00:28:01,960
work published or close to memory

501
00:27:59,000 --> 00:28:04,520
standards<font color="#E5E5E5"> the next slide is ongoing work</font>

502
00:28:01,960 --> 00:28:07,010
it is called a synchronous<font color="#E5E5E5"> traffic</font>

503
00:28:04,520 --> 00:28:08,900
shaping which aims to<font color="#E5E5E5"> provide</font><font color="#CCCCCC"> zero</font>

504
00:28:07,010 --> 00:28:13,789
<font color="#E5E5E5">congestion loss without time</font>

505
00:28:08,900 --> 00:28:16,700
synchronization<font color="#E5E5E5"> so it what happens is</font>

506
00:28:13,789 --> 00:28:19,700
<font color="#CCCCCC">that we aim to smooth a smooth</font><font color="#E5E5E5"> traffic</font>

507
00:28:16,700 --> 00:28:22,909
<font color="#E5E5E5">pattern by shaping</font><font color="#CCCCCC"> / hope and give</font>

508
00:28:19,700 --> 00:28:25,280
priority to urgent traffic<font color="#E5E5E5"> over more</font>

509
00:28:22,909 --> 00:28:29,960
relaxed traffic<font color="#CCCCCC"> this figure illustrates</font>

510
00:28:25,280 --> 00:28:33,918
<font color="#CCCCCC">it so what you see these are the</font><font color="#E5E5E5"> classic</font>

511
00:28:29,960 --> 00:28:37,720
use so<font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> kind of you can see it</font>

512
00:28:33,919 --> 00:28:40,909
as a<font color="#E5E5E5"> kind of hierarchical queuing that</font>

513
00:28:37,720 --> 00:28:44,149
<font color="#CCCCCC">up</font><font color="#E5E5E5"> front before that using the ingress</font>

514
00:28:40,909 --> 00:28:46,330
filtering and policing<font color="#E5E5E5"> tools we have</font>

515
00:28:44,149 --> 00:28:49,280
specified<font color="#E5E5E5"> and provides a lots of</font>

516
00:28:46,330 --> 00:28:49,610
<font color="#E5E5E5">possibilities to David one of them is to</font>

517
00:28:49,280 --> 00:28:51,799
<font color="#E5E5E5">imply</font>

518
00:28:49,610 --> 00:28:56,090
and a synchronous traffic<font color="#E5E5E5"> shaping so</font>

519
00:28:51,799 --> 00:28:58,460
that's where the<font color="#E5E5E5"> decision is made</font><font color="#CCCCCC"> which</font>

520
00:28:56,090 --> 00:29:00,559
flow or which packet is more urgent<font color="#CCCCCC"> than</font>

521
00:28:58,460 --> 00:29:03,020
the other and then after making<font color="#CCCCCC"> that</font>

522
00:29:00,559 --> 00:29:08,210
decision they get into the regular<font color="#E5E5E5"> it</font>

523
00:29:03,020 --> 00:29:13,129
<font color="#E5E5E5">accused so that's how the shaping from</font>

524
00:29:08,210 --> 00:29:16,100
<font color="#E5E5E5">one hope to another is implemented and</font><font color="#CCCCCC"> I</font>

525
00:29:13,130 --> 00:29:21,190
give the word<font color="#CCCCCC"> two paths who was the</font>

526
00:29:16,100 --> 00:29:21,189
<font color="#E5E5E5">editor of</font><font color="#CCCCCC"> the same preemption standard</font>

527
00:29:21,490 --> 00:29:26,330
right so I was the editor for the frame

528
00:29:24,350 --> 00:29:30,020
<font color="#CCCCCC">preemption</font><font color="#E5E5E5"> the part of preemption</font><font color="#CCCCCC"> that</font>

529
00:29:26,330 --> 00:29:33,139
went in 802<font color="#E5E5E5"> dot three</font><font color="#CCCCCC"> because in this</font>

530
00:29:30,020 --> 00:29:37,220
<font color="#E5E5E5">case this</font><font color="#CCCCCC"> is a facility that</font><font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> be</font>

531
00:29:33,140 --> 00:29:40,540
<font color="#E5E5E5">supported</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> the Mac and</font><font color="#CCCCCC"> as well as by</font>

532
00:29:37,220 --> 00:29:47,030
the part of the link layer above the<font color="#E5E5E5"> Mac</font>

533
00:29:40,540 --> 00:29:49,159
so when we have when<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have the</font>

534
00:29:47,030 --> 00:29:51,710
scheduled traffic that scheduled traffic

535
00:29:49,160 --> 00:29:54,440
is like rocks during<font color="#E5E5E5"> the the</font>

536
00:29:51,710 --> 00:29:57,890
transmission time<font color="#E5E5E5"> that those rocks can't</font>

537
00:29:54,440 --> 00:30:00,020
move<font color="#E5E5E5"> they always happen in that spot now</font>

538
00:29:57,890 --> 00:30:02,179
we would<font color="#E5E5E5"> like to handle the non</font>

539
00:30:00,020 --> 00:30:04,639
scheduled traffic the the traditional

540
00:30:02,179 --> 00:30:07,220
network traffic<font color="#E5E5E5"> as efficiently and as</font>

541
00:30:04,640 --> 00:30:10,790
possible and use the bandwidth between

542
00:30:07,220 --> 00:30:15,650
<font color="#E5E5E5">the rocks to to send as much of that</font>

543
00:30:10,790 --> 00:30:18,409
<font color="#CCCCCC">traffic as we can now if we just leave</font>

544
00:30:15,650 --> 00:30:32,390
things<font color="#E5E5E5"> as they are and send them we'll</font>

545
00:30:18,410 --> 00:30:34,190
<font color="#CCCCCC">have a situation shown here where that's</font>

546
00:30:32,390 --> 00:30:37,100
void<font color="#E5E5E5"> okay</font>

547
00:30:34,190 --> 00:30:39,530
so you know here<font color="#E5E5E5"> you we've sent packet</font>

548
00:30:37,100 --> 00:30:42,110
<font color="#E5E5E5">one in this gap and then we have packet</font>

549
00:30:39,530 --> 00:30:44,600
two to sit sent but it's a<font color="#E5E5E5"> little to fit</font>

550
00:30:42,110 --> 00:30:47,389
<font color="#CCCCCC">largely for the remaining gap</font><font color="#E5E5E5"> so this</font>

551
00:30:44,600 --> 00:30:49,100
bandwidth is wasted<font color="#E5E5E5"> and then it doesn't</font>

552
00:30:47,390 --> 00:30:50,840
fit in<font color="#E5E5E5"> this gap either and so the</font>

553
00:30:49,100 --> 00:30:52,760
bandwidth is again wasted and finally

554
00:30:50,840 --> 00:30:56,260
here<font color="#E5E5E5"> we get a gap big enough to send</font>

555
00:30:52,760 --> 00:30:59,480
packet<font color="#CCCCCC"> two that's without preemption</font>

556
00:30:56,260 --> 00:31:01,429
when we add preemption we let the

557
00:30:59,480 --> 00:31:02,990
traditional traffic act like sand

558
00:31:01,429 --> 00:31:07,370
between<font color="#E5E5E5"> the rocks</font>

559
00:31:02,990 --> 00:31:09,140
so in this case it's okay<font color="#CCCCCC"> that there's</font>

560
00:31:07,370 --> 00:31:11,539
<font color="#E5E5E5">not enough room to finish sending packet</font>

561
00:31:09,140 --> 00:31:13,820
<font color="#CCCCCC">to we can start it here and use the</font>

562
00:31:11,539 --> 00:31:16,279
bandwidth and<font color="#E5E5E5"> then when the scheduled</font>

563
00:31:13,820 --> 00:31:19,090
<font color="#CCCCCC">Rock finishes then we can finish sending</font>

564
00:31:16,279 --> 00:31:22,190
packet to and start<font color="#E5E5E5"> sending three and</font>

565
00:31:19,090 --> 00:31:27,230
again<font color="#E5E5E5"> continue</font><font color="#CCCCCC"> it after the</font><font color="#E5E5E5"> next</font>

566
00:31:22,190 --> 00:31:30,740
scheduled<font color="#CCCCCC"> Rock so that's why we did it</font>

567
00:31:27,230 --> 00:31:32,450
so we could<font color="#E5E5E5"> efficiently use the</font>

568
00:31:30,740 --> 00:31:34,909
bandwidth while having the scheduled

569
00:31:32,450 --> 00:31:40,130
traffic in there and the traditional

570
00:31:34,909 --> 00:31:41,960
traffic sharing the<font color="#E5E5E5"> same links so</font><font color="#CCCCCC"> we</font>

571
00:31:40,130 --> 00:31:44,690
also put in something<font color="#E5E5E5"> called hold and</font>

572
00:31:41,960 --> 00:31:48,200
release<font color="#E5E5E5"> now it's not needed all the time</font>

573
00:31:44,690 --> 00:31:50,179
<font color="#CCCCCC">preemption</font><font color="#E5E5E5"> doesn't happen the minute you</font>

574
00:31:48,200 --> 00:31:52,340
say I want to preempt the packet that's

575
00:31:50,179 --> 00:31:54,380
going for one thing in<font color="#E5E5E5"> order to be</font>

576
00:31:52,340 --> 00:31:56,029
compatible with<font color="#E5E5E5"> all the physical layers</font>

577
00:31:54,380 --> 00:31:58,880
out there and have them<font color="#CCCCCC"> not have to know</font>

578
00:31:56,029 --> 00:32:01,399
that preemption<font color="#E5E5E5"> was going on we wanted</font>

579
00:31:58,880 --> 00:32:03,770
the fragments that<font color="#E5E5E5"> we create to look as</font>

580
00:32:01,399 --> 00:32:06,549
<font color="#E5E5E5">much like regular packets to the</font>

581
00:32:03,770 --> 00:32:11,120
<font color="#E5E5E5">physical</font><font color="#CCCCCC"> layer as possible so that</font>

582
00:32:06,549 --> 00:32:14,690
<font color="#E5E5E5">included keeping the minimum size of 64</font>

583
00:32:11,120 --> 00:32:16,639
<font color="#E5E5E5">bytes so if the packet has less</font><font color="#CCCCCC"> than 64</font>

584
00:32:14,690 --> 00:32:19,100
bytes<font color="#E5E5E5"> to left to transmit we can't</font>

585
00:32:16,640 --> 00:32:24,649
preempt it<font color="#CCCCCC"> if the whole packet was less</font>

586
00:32:19,100 --> 00:32:28,879
than 124 octet Stan we can't preempt it

587
00:32:24,649 --> 00:32:32,239
<font color="#E5E5E5">because we have to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to divide it</font>

588
00:32:28,880 --> 00:32:34,520
into two groups<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> if it's one has</font>

589
00:32:32,240 --> 00:32:37,840
to be 128 in order<font color="#CCCCCC"> to preempt it because</font>

590
00:32:34,520 --> 00:32:40,510
we have to be able<font color="#CCCCCC"> to get to 64 huh</font><font color="#E5E5E5"> then</font>

591
00:32:37,840 --> 00:32:44,770
the extra<font color="#CCCCCC"> CRC we add counts</font><font color="#E5E5E5"> on that</font>

592
00:32:40,510 --> 00:32:50,179
which<font color="#E5E5E5"> is why it comes out to being 124</font>

593
00:32:44,770 --> 00:32:52,029
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> in many use cases we can we can</font>

594
00:32:50,179 --> 00:32:55,850
stand<font color="#E5E5E5"> that amount of delay we don't need</font>

595
00:32:52,029 --> 00:32:58,490
to do anything special<font color="#E5E5E5"> and we just when</font>

596
00:32:55,850 --> 00:33:00,139
we want<font color="#E5E5E5"> to send a an</font><font color="#CCCCCC"> Express packet a</font>

597
00:32:58,490 --> 00:33:02,409
packet<font color="#CCCCCC"> that can preamp the preemptable</font>

598
00:33:00,140 --> 00:33:04,220
traffic<font color="#E5E5E5"> we just send it and go ahead and</font>

599
00:33:02,409 --> 00:33:06,830
live with<font color="#E5E5E5"> the fact that that</font><font color="#CCCCCC"> doesn't</font>

600
00:33:04,220 --> 00:33:08,840
<font color="#E5E5E5">happen instantaneously that that we have</font>

601
00:33:06,830 --> 00:33:11,270
<font color="#E5E5E5">to get to the end of the current packet</font>

602
00:33:08,840 --> 00:33:15,559
or gets the point where we preempt and

603
00:33:11,270 --> 00:33:16,820
have an<font color="#CCCCCC"> inter frame gap but in the for</font>

604
00:33:15,559 --> 00:33:20,420
the<font color="#E5E5E5"> most tight timing for</font>

605
00:33:16,820 --> 00:33:22,070
we want to have really minimize the

606
00:33:20,420 --> 00:33:27,620
amount of jitter<font color="#CCCCCC"> on the scheduled</font>

607
00:33:22,070 --> 00:33:30,429
traffic<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> the hold and release so</font>

608
00:33:27,620 --> 00:33:33,439
<font color="#E5E5E5">we know the scheduled rock is coming</font><font color="#CCCCCC"> up</font>

609
00:33:30,430 --> 00:33:36,500
basically we have a guard band<font color="#E5E5E5"> of time</font>

610
00:33:33,440 --> 00:33:40,430
<font color="#E5E5E5">before that</font><font color="#CCCCCC"> happens</font><font color="#E5E5E5"> that we send a</font>

611
00:33:36,500 --> 00:33:43,130
primitive called hold to the Mac<font color="#E5E5E5"> and the</font>

612
00:33:40,430 --> 00:33:45,350
Mac then we'll go ahead and preempt even

613
00:33:43,130 --> 00:33:47,450
though we aren't<font color="#E5E5E5"> giving it the scheduled</font>

614
00:33:45,350 --> 00:33:50,860
packet yet it will go ahead and preempt

615
00:33:47,450 --> 00:33:53,840
<font color="#E5E5E5">and so that then when the scheduled</font>

616
00:33:50,860 --> 00:33:55,280
packet arrives we will transmit<font color="#E5E5E5"> that</font>

617
00:33:53,840 --> 00:33:58,459
right away<font color="#E5E5E5"> we will already</font><font color="#CCCCCC"> have</font>

618
00:33:55,280 --> 00:34:00,649
completed<font color="#E5E5E5"> preemption and there can be a</font>

619
00:33:58,460 --> 00:34:03,920
number<font color="#E5E5E5"> of packets that go and then we'll</font>

620
00:34:00,650 --> 00:34:08,090
<font color="#CCCCCC">release it when we get</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the end of</font><font color="#E5E5E5"> the</font>

621
00:34:03,920 --> 00:34:14,210
scheduled time<font color="#CCCCCC"> and we're ready to</font><font color="#E5E5E5"> let</font>

622
00:34:08,090 --> 00:34:16,220
the other<font color="#E5E5E5"> traffic flow again so this is</font>

623
00:34:14,210 --> 00:34:18,650
<font color="#E5E5E5">just a</font><font color="#CCCCCC"> picture of kind</font><font color="#E5E5E5"> of how this all</font>

624
00:34:16,219 --> 00:34:22,029
<font color="#E5E5E5">fits in with the queues so the queues</font>

625
00:34:18,650 --> 00:34:25,340
are up here<font color="#E5E5E5"> and in order to support</font>

626
00:34:22,030 --> 00:34:29,510
<font color="#E5E5E5">preemption we basically have have two</font>

627
00:34:25,340 --> 00:34:30,919
<font color="#E5E5E5">Macs one Mac</font><font color="#CCCCCC"> that's handling</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Express</font>

628
00:34:29,510 --> 00:34:33,710
traffic and one<font color="#E5E5E5"> that's handling the</font>

629
00:34:30,918 --> 00:34:36,918
<font color="#CCCCCC">preemptable traffic so that this one can</font>

630
00:34:33,710 --> 00:34:40,940
pause<font color="#E5E5E5"> its transmission and then resume</font>

631
00:34:36,918 --> 00:34:45,620
it<font color="#E5E5E5"> when when the Express frames are done</font>

632
00:34:40,940 --> 00:34:47,810
and so the queues<font color="#E5E5E5"> for the Express</font>

633
00:34:45,620 --> 00:34:52,370
traffic go to the transmission selection

634
00:34:47,810 --> 00:34:55,940
for the end to the<font color="#E5E5E5"> Mac control for the</font>

635
00:34:52,370 --> 00:34:59,270
<font color="#E5E5E5">Express Mac and the other queues go to</font>

636
00:34:55,940 --> 00:35:01,520
the<font color="#E5E5E5"> preemptable</font><font color="#CCCCCC"> Mac</font><font color="#E5E5E5"> and then below the</font>

637
00:34:59,270 --> 00:35:04,820
<font color="#E5E5E5">Mac's we have the</font><font color="#CCCCCC"> Mac merge sub layer</font>

638
00:35:01,520 --> 00:35:06,710
which<font color="#CCCCCC"> is a shim sub layer that that</font>

639
00:35:04,820 --> 00:35:11,990
basically<font color="#E5E5E5"> takes the output</font><font color="#CCCCCC"> of these two</font>

640
00:35:06,710 --> 00:35:13,880
and<font color="#E5E5E5"> does the actual preemption when</font>

641
00:35:11,990 --> 00:35:16,129
necessary and then we have<font color="#CCCCCC"> below that</font>

642
00:35:13,880 --> 00:35:18,020
the Phi which<font color="#CCCCCC"> is a regular find doesn't</font>

643
00:35:16,130 --> 00:35:22,580
have to know anything<font color="#CCCCCC"> about preemption</font>

644
00:35:18,020 --> 00:35:25,580
going on<font color="#CCCCCC"> I'm not going</font><font color="#E5E5E5"> to go into the</font>

645
00:35:22,580 --> 00:35:30,259
details<font color="#E5E5E5"> of this this is the structures</font>

646
00:35:25,580 --> 00:35:33,200
we made for handling the

647
00:35:30,260 --> 00:35:36,020
<font color="#E5E5E5">and formats and basically the principles</font>

648
00:35:33,200 --> 00:35:40,129
here were to make the fragments look

649
00:35:36,020 --> 00:35:42,320
again<font color="#E5E5E5"> as much like a regular packet as</font>

650
00:35:40,130 --> 00:35:44,690
possible so the physical layer doesn't

651
00:35:42,320 --> 00:35:48,920
<font color="#CCCCCC">see</font><font color="#E5E5E5"> anything other than what it expects</font>

652
00:35:44,690 --> 00:35:52,700
<font color="#E5E5E5">to see and also</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> minimize the amount</font>

653
00:35:48,920 --> 00:35:55,850
of bandwidth<font color="#CCCCCC"> taken when you fragment a</font>

654
00:35:52,700 --> 00:35:58,129
packet<font color="#CCCCCC"> so to the</font><font color="#E5E5E5"> extent possible</font>

655
00:35:55,850 --> 00:36:02,810
consistent<font color="#E5E5E5"> with the first one so</font>

656
00:35:58,130 --> 00:36:04,400
basically the encapsulations designs so

657
00:36:02,810 --> 00:36:06,890
that<font color="#CCCCCC"> if you're not fragmenting there's</font>

658
00:36:04,400 --> 00:36:10,970
no extra bandwidth needed so<font color="#CCCCCC"> anytime you</font>

659
00:36:06,890 --> 00:36:12,790
don't preempt a packet<font color="#E5E5E5"> it takes the same</font>

660
00:36:10,970 --> 00:36:17,509
amount<font color="#E5E5E5"> of time on the wire as it would</font>

661
00:36:12,790 --> 00:36:20,930
if it was if there was no preemption<font color="#CCCCCC"> on</font>

662
00:36:17,510 --> 00:36:25,570
the link at<font color="#E5E5E5"> all</font><font color="#CCCCCC"> and then when we do</font>

663
00:36:20,930 --> 00:36:29,299
preempt we have some extra bytes we need

664
00:36:25,570 --> 00:36:31,340
for protecting the<font color="#E5E5E5"> data integrity but we</font>

665
00:36:29,300 --> 00:36:35,060
keep those down to a minimum<font color="#E5E5E5"> so</font>

666
00:36:31,340 --> 00:36:39,110
basically in the<font color="#E5E5E5"> the data integrity goal</font>

667
00:36:35,060 --> 00:36:42,049
is to keep the same data integrity<font color="#E5E5E5"> that</font>

668
00:36:39,110 --> 00:36:44,810
we have without preemption operating so

669
00:36:42,050 --> 00:36:49,420
we make<font color="#CCCCCC"> sure that there's</font><font color="#E5E5E5"> some bytes in</font>

670
00:36:44,810 --> 00:36:52,549
there that keep us from<font color="#E5E5E5"> reassembling</font>

671
00:36:49,420 --> 00:36:56,330
fragments incorrectly to make a<font color="#E5E5E5"> Franken</font>

672
00:36:52,550 --> 00:36:58,940
packet a packet<font color="#CCCCCC"> that had a</font><font color="#E5E5E5"> missing</font>

673
00:36:56,330 --> 00:37:01,520
fragment or was had fragments from parts

674
00:36:58,940 --> 00:37:04,340
of two packets so that we keep<font color="#E5E5E5"> the same</font>

675
00:37:01,520 --> 00:37:18,200
<font color="#CCCCCC">level of protection as the Ethernet CRC</font>

676
00:37:04,340 --> 00:37:20,450
gives us in unprompted traffic and<font color="#CCCCCC"> okay</font>

677
00:37:18,200 --> 00:37:23,359
so<font color="#E5E5E5"> after these let's take a look on the</font>

678
00:37:20,450 --> 00:37:27,319
<font color="#E5E5E5">fourth pillar the resources so what do</font>

679
00:37:23,360 --> 00:37:31,010
we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> that front in TSN we have a</font>

680
00:37:27,320 --> 00:37:34,280
document describes that<font color="#CCCCCC"> in qcc that</font>

681
00:37:31,010 --> 00:37:37,400
describes the<font color="#CCCCCC"> DSN configuration and</font><font color="#E5E5E5"> the</font>

682
00:37:34,280 --> 00:37:39,740
three approaches we can<font color="#E5E5E5"> have in TS on</font>

683
00:37:37,400 --> 00:37:44,090
one<font color="#CCCCCC"> of them is the fully distributed</font>

684
00:37:39,740 --> 00:37:47,000
model that<font color="#E5E5E5"> actually means you use the</font>

685
00:37:44,090 --> 00:37:51,200
<font color="#CCCCCC">rebooted protocols for</font><font color="#E5E5E5"> resource protocol</font>

686
00:37:47,000 --> 00:37:53,030
for resource reservation<font color="#CCCCCC"> we have next</font>

687
00:37:51,200 --> 00:37:55,250
slide explains<font color="#E5E5E5"> a bit on on the already</font>

688
00:37:53,030 --> 00:37:57,620
<font color="#E5E5E5">existing distributed protocol</font><font color="#CCCCCC"> and we</font>

689
00:37:55,250 --> 00:38:00,290
have recently<font color="#CCCCCC"> started the development of</font>

690
00:37:57,620 --> 00:38:04,000
a new one<font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to provide</font><font color="#CCCCCC"> better</font>

691
00:38:00,290 --> 00:38:08,480
scalability<font color="#E5E5E5"> the fully centralized model</font>

692
00:38:04,000 --> 00:38:11,150
is when<font color="#E5E5E5"> both</font><font color="#CCCCCC"> an equipment and network</font>

693
00:38:08,480 --> 00:38:13,670
equipment<font color="#E5E5E5"> like the bridges and</font><font color="#CCCCCC"> the end</font>

694
00:38:11,150 --> 00:38:17,810
<font color="#E5E5E5">stations hosts are under control of a</font>

695
00:38:13,670 --> 00:38:19,850
central entity which can happen<font color="#CCCCCC"> for</font>

696
00:38:17,810 --> 00:38:22,520
<font color="#E5E5E5">example in a factory that</font><font color="#CCCCCC"> all the end</font>

697
00:38:19,850 --> 00:38:25,700
stations and<font color="#E5E5E5"> and the bridges are under</font>

698
00:38:22,520 --> 00:38:28,970
<font color="#CCCCCC">desired to be under the control of the</font>

699
00:38:25,700 --> 00:38:30,609
same entity<font color="#CCCCCC"> and the one that</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> also</font>

700
00:38:28,970 --> 00:38:32,930
illustrated<font color="#CCCCCC"> in the bottom is the</font>

701
00:38:30,610 --> 00:38:36,680
centralized<font color="#E5E5E5"> network distributed</font><font color="#CCCCCC"> user</font>

702
00:38:32,930 --> 00:38:39,259
model where the bridges the network

703
00:38:36,680 --> 00:38:41,540
nodes are under the control<font color="#CCCCCC"> of a central</font>

704
00:38:39,260 --> 00:38:43,640
entity which is<font color="#E5E5E5"> called in this documents</font>

705
00:38:41,540 --> 00:38:48,050
at<font color="#E5E5E5"> a central network configuration</font>

706
00:38:43,640 --> 00:38:50,359
entity and but the end stations

707
00:38:48,050 --> 00:38:54,350
<font color="#E5E5E5">listeners and talkers are not under</font><font color="#CCCCCC"> the</font>

708
00:38:50,360 --> 00:38:58,340
<font color="#E5E5E5">control there is some protocol</font><font color="#CCCCCC"> exchange</font>

709
00:38:54,350 --> 00:39:00,470
or some<font color="#E5E5E5"> information</font><font color="#CCCCCC"> exchange between the</font>

710
00:38:58,340 --> 00:39:03,710
institutions and the network actually<font color="#E5E5E5"> in</font>

711
00:39:00,470 --> 00:39:06,259
a wire user<font color="#E5E5E5"> network interface</font><font color="#CCCCCC"> this</font>

712
00:39:03,710 --> 00:39:14,480
document<font color="#CCCCCC"> provides information model and</font>

713
00:39:06,260 --> 00:39:16,850
yang for<font color="#E5E5E5"> TSN configuration it is</font><font color="#CCCCCC"> on</font>

714
00:39:14,480 --> 00:39:19,400
still an ongoing project<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> yeah I</font>

715
00:39:16,850 --> 00:39:22,069
guess<font color="#E5E5E5"> maybe it's good it's good point so</font>

716
00:39:19,400 --> 00:39:24,590
what you see<font color="#CCCCCC"> here when it when you see P</font>

717
00:39:22,070 --> 00:39:26,810
<font color="#CCCCCC">up front of an abbreviation</font><font color="#E5E5E5"> that means</font>

718
00:39:24,590 --> 00:39:32,960
that still an ongoing project<font color="#E5E5E5"> if P is</font>

719
00:39:26,810 --> 00:39:35,650
not<font color="#E5E5E5"> there then the work is done sorry</font>

720
00:39:32,960 --> 00:39:35,650
which one<font color="#CCCCCC"> is</font>

721
00:39:38,360 --> 00:39:47,790
well for this<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not for data</font>

722
00:39:43,920 --> 00:39:50,930
centers<font color="#CCCCCC"> but we switch seats in so that</font>

723
00:39:47,790 --> 00:39:54,120
<font color="#E5E5E5">there are data center bridging standards</font>

724
00:39:50,930 --> 00:39:59,730
<font color="#CCCCCC">the question was if whether a V switch</font>

725
00:39:54,120 --> 00:40:03,870
is a bridge or a nun station and in<font color="#E5E5E5"> DC</font>

726
00:39:59,730 --> 00:40:06,900
standards we<font color="#E5E5E5"> have protocol exchange and</font>

727
00:40:03,870 --> 00:40:11,640
so on<font color="#CCCCCC"> when it sits in so it's treated as</font>

728
00:40:06,900 --> 00:40:15,420
sitting in<font color="#CCCCCC"> a</font><font color="#E5E5E5"> LAN station but this is</font>

729
00:40:11,640 --> 00:40:19,670
more for<font color="#CCCCCC"> TSN so we don't have V switch</font>

730
00:40:15,420 --> 00:40:23,910
in this<font color="#E5E5E5"> in this figure so these these</font>

731
00:40:19,670 --> 00:40:27,600
these end stations here are sources and

732
00:40:23,910 --> 00:40:30,660
sinks of CBR streams<font color="#E5E5E5"> and what we are</font>

733
00:40:27,600 --> 00:40:33,779
after is how to<font color="#E5E5E5"> provide the</font><font color="#CCCCCC"> resources</font>

734
00:40:30,660 --> 00:40:39,270
for<font color="#CCCCCC"> those streams in order to provide</font>

735
00:40:33,780 --> 00:40:43,530
the<font color="#CCCCCC"> bound in</font><font color="#E5E5E5"> low latency as I mentioned</font>

736
00:40:39,270 --> 00:40:48,660
we we have protocol a standard protocol

737
00:40:43,530 --> 00:40:50,820
<font color="#E5E5E5">SRP for the reservation</font><font color="#CCCCCC"> of resources so</font>

738
00:40:48,660 --> 00:40:53,460
this is a distributed protocol that

739
00:40:50,820 --> 00:40:56,340
advertises the streams registers the

740
00:40:53,460 --> 00:41:00,380
<font color="#E5E5E5">paths for the streams even calculates</font>

741
00:40:56,340 --> 00:41:05,100
the worst case latency<font color="#CCCCCC"> and trend and</font>

742
00:41:00,380 --> 00:41:09,840
<font color="#E5E5E5">establishes the domain for a VB domain</font>

743
00:41:05,100 --> 00:41:11,779
what is it called<font color="#CCCCCC"> that can be used by</font>

744
00:41:09,840 --> 00:41:14,400
<font color="#E5E5E5">the stream so have the same</font>

745
00:41:11,780 --> 00:41:16,890
characteristics or<font color="#E5E5E5"> setups in the bridge</font>

746
00:41:14,400 --> 00:41:20,820
<font color="#E5E5E5">and ultimately of course reserves the</font>

747
00:41:16,890 --> 00:41:24,230
bandwidth for<font color="#E5E5E5"> streams the</font><font color="#CCCCCC"> qcc project</font>

748
00:41:20,820 --> 00:41:28,140
also provides<font color="#E5E5E5"> enhancements to the SRP</font>

749
00:41:24,230 --> 00:41:30,060
<font color="#E5E5E5">stream reservation protocol and we have</font>

750
00:41:28,140 --> 00:41:32,640
a new work that<font color="#E5E5E5"> has been recently</font>

751
00:41:30,060 --> 00:41:37,440
started called<font color="#E5E5E5"> link local registration</font>

752
00:41:32,640 --> 00:41:40,950
protocol<font color="#CCCCCC"> it is the</font><font color="#E5E5E5"> foundation of a new</font>

753
00:41:37,440 --> 00:41:43,920
<font color="#E5E5E5">reservation protocol with to replicate</font>

754
00:41:40,950 --> 00:41:48,149
and register<font color="#CCCCCC"> the data that is needed</font>

755
00:41:43,920 --> 00:41:50,160
<font color="#CCCCCC">including the changes and what you are</font>

756
00:41:48,150 --> 00:41:52,980
after<font color="#E5E5E5"> is better scalability</font>

757
00:41:50,160 --> 00:41:54,720
so we want to<font color="#CCCCCC"> optimize it</font><font color="#E5E5E5"> in the order</font>

758
00:41:52,980 --> 00:41:57,569
<font color="#CCCCCC">of the database in the order of 1</font>

759
00:41:54,720 --> 00:42:00,390
megabyte<font color="#CCCCCC"> I need to highlight</font><font color="#E5E5E5"> here that</font>

760
00:41:57,569 --> 00:42:03,359
<font color="#E5E5E5">this work is</font><font color="#CCCCCC"> not tied to bridges</font><font color="#E5E5E5"> so can</font>

761
00:42:00,390 --> 00:42:08,700
be applied<font color="#E5E5E5"> on other network nodes as</font>

762
00:42:03,359 --> 00:42:11,240
<font color="#E5E5E5">well</font><font color="#CCCCCC"> so this is what we planned to talk</font>

763
00:42:08,700 --> 00:42:13,770
about and we<font color="#CCCCCC"> have some stuff</font><font color="#E5E5E5"> going on</font>

764
00:42:11,240 --> 00:42:16,890
<font color="#CCCCCC">and</font><font color="#E5E5E5"> available we have no time to</font><font color="#CCCCCC"> talk</font>

765
00:42:13,770 --> 00:42:18,329
<font color="#CCCCCC">about just just to flash time</font>

766
00:42:16,890 --> 00:42:21,779
synchronization I mentioned in the

767
00:42:18,329 --> 00:42:23,819
beginning<font color="#E5E5E5"> it is very important</font><font color="#CCCCCC"> like for</font>

768
00:42:21,780 --> 00:42:26,160
<font color="#CCCCCC">example that</font><font color="#E5E5E5"> for the time gated queues</font>

769
00:42:23,819 --> 00:42:28,079
<font color="#CCCCCC">you have to know the time</font><font color="#E5E5E5"> to program</font>

770
00:42:26,160 --> 00:42:33,720
<font color="#CCCCCC">your</font><font color="#E5E5E5"> schedule</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> for the cyclic</font><font color="#CCCCCC"> queueing</font>

771
00:42:28,079 --> 00:42:35,480
and we have standard for<font color="#CCCCCC"> that the 802</font>

772
00:42:33,720 --> 00:42:40,078
dot<font color="#CCCCCC"> 1 is timing</font><font color="#E5E5E5"> and synchronization</font>

773
00:42:35,480 --> 00:42:42,660
<font color="#E5E5E5">which is a profile of the</font><font color="#CCCCCC"> ITP 1588</font>

774
00:42:40,079 --> 00:42:45,569
precision time<font color="#E5E5E5"> protocol for layer to it</font>

775
00:42:42,660 --> 00:42:51,410
and bridges and there's an ongoing

776
00:42:45,569 --> 00:42:54,390
revision of this standard that<font color="#E5E5E5"> includes</font>

777
00:42:51,410 --> 00:42:57,890
all addressing all these aspects for

778
00:42:54,390 --> 00:43:02,490
<font color="#CCCCCC">example providing</font><font color="#E5E5E5"> better reliability</font>

779
00:42:57,890 --> 00:43:05,098
<font color="#E5E5E5">security is very important in of</font><font color="#CCCCCC"> course</font>

780
00:43:02,490 --> 00:43:07,459
<font color="#E5E5E5">in all</font><font color="#CCCCCC"> applications but there</font><font color="#E5E5E5"> are</font>

781
00:43:05,099 --> 00:43:10,680
<font color="#E5E5E5">upcoming use cases</font><font color="#CCCCCC"> I mentioned</font>

782
00:43:07,460 --> 00:43:14,309
automotive networking where it is a hot

783
00:43:10,680 --> 00:43:16,710
topic<font color="#CCCCCC"> how to how to</font><font color="#E5E5E5"> make it secure</font><font color="#CCCCCC"> so</font>

784
00:43:14,309 --> 00:43:20,130
this is a just a set what we have in 802

785
00:43:16,710 --> 00:43:26,240
dot<font color="#E5E5E5"> 1 again no time to talk dive into</font>

786
00:43:20,130 --> 00:43:31,410
the details<font color="#CCCCCC"> so to summarise TSN has</font>

787
00:43:26,240 --> 00:43:33,569
these four<font color="#E5E5E5"> pillars</font><font color="#CCCCCC"> synchronization for</font>

788
00:43:31,410 --> 00:43:37,020
which we have<font color="#E5E5E5"> the 802 dot when a</font>

789
00:43:33,569 --> 00:43:40,288
specification<font color="#E5E5E5"> reliability which covers</font>

790
00:43:37,020 --> 00:43:44,880
<font color="#CCCCCC">multiple aspects as we heard the</font>

791
00:43:40,289 --> 00:43:47,490
<font color="#E5E5E5">replication and elimination for against</font>

792
00:43:44,880 --> 00:43:49,650
protection for providing extremely

793
00:43:47,490 --> 00:43:52,979
robust protection for device failures

794
00:43:49,650 --> 00:43:57,599
<font color="#E5E5E5">and</font><font color="#CCCCCC"> other asked for protection</font><font color="#E5E5E5"> against</font>

795
00:43:52,980 --> 00:44:00,210
misbehaving<font color="#E5E5E5"> streams and at the shapers</font>

796
00:43:57,599 --> 00:44:02,670
<font color="#CCCCCC">queuing mechanisms to provide the</font>

797
00:44:00,210 --> 00:44:03,599
latency<font color="#E5E5E5"> together with the resource</font>

798
00:44:02,670 --> 00:44:07,190
management in order

799
00:44:03,599 --> 00:44:07,190
to achieve the zero congestion<font color="#E5E5E5"> loss</font>

800
00:44:07,519 --> 00:44:12,149
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> a survey for each tutorial</font><font color="#CCCCCC"> this</font>

801
00:44:10,380 --> 00:44:16,380
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the link</font><font color="#CCCCCC"> for this particular one</font>

802
00:44:12,150 --> 00:44:36,920
please fill in the survey<font color="#E5E5E5"> and there's</font>

803
00:44:16,380 --> 00:44:40,019
time for questions hi thanks for

804
00:44:36,920 --> 00:44:42,239
<font color="#CCCCCC">information you mentioned there were</font>

805
00:44:40,019 --> 00:44:45,988
different<font color="#CCCCCC"> types of scheduling algorithms</font>

806
00:44:42,239 --> 00:44:49,049
you're looking at and it sounded<font color="#E5E5E5"> like at</font>

807
00:44:45,989 --> 00:44:52,019
least one<font color="#E5E5E5"> of them would</font><font color="#CCCCCC"> not deliver</font>

808
00:44:49,049 --> 00:44:53,940
<font color="#E5E5E5">early as well as</font><font color="#CCCCCC"> not deliver late</font><font color="#E5E5E5"> right</font>

809
00:44:52,019 --> 00:44:56,218
so it was<font color="#E5E5E5"> just as worried about early</font>

810
00:44:53,940 --> 00:44:59,009
delivery is<font color="#E5E5E5"> late delivery</font><font color="#CCCCCC"> yes</font><font color="#E5E5E5"> but the</font>

811
00:44:56,219 --> 00:45:00,809
other<font color="#CCCCCC"> one I</font><font color="#E5E5E5"> wasn't clear about and you</font>

812
00:44:59,009 --> 00:45:03,119
<font color="#E5E5E5">may have said it and</font><font color="#CCCCCC"> then you know a be</font>

813
00:45:00,809 --> 00:45:04,769
jet-lagged and<font color="#E5E5E5"> just missed it</font><font color="#CCCCCC"> but the</font>

814
00:45:03,119 --> 00:45:10,589
<font color="#CCCCCC">one</font><font color="#E5E5E5"> that's under</font><font color="#CCCCCC"> development does that</font>

815
00:45:04,769 --> 00:45:13,589
also<font color="#CCCCCC"> worry about early delivery</font><font color="#E5E5E5"> so that</font>

816
00:45:10,589 --> 00:45:20,940
will<font color="#E5E5E5"> not deliver early either so there</font>

817
00:45:13,589 --> 00:45:24,390
is a there is<font color="#CCCCCC"> timing</font><font color="#E5E5E5"> you give for each</font>

818
00:45:20,940 --> 00:45:26,640
each for when when it can go<font color="#CCCCCC"> out</font><font color="#E5E5E5"> so</font>

819
00:45:24,390 --> 00:45:29,239
that's<font color="#E5E5E5"> what happens in the higher in the</font>

820
00:45:26,640 --> 00:45:31,469
if you<font color="#CCCCCC"> if you think of it as higher</font>

821
00:45:29,239 --> 00:45:32,449
<font color="#CCCCCC">hirako queueing that happens at the</font>

822
00:45:31,469 --> 00:45:36,509
first

823
00:45:32,449 --> 00:45:39,630
<font color="#CCCCCC">expeditious time yeah I</font><font color="#E5E5E5"> wasn't sure</font>

824
00:45:36,509 --> 00:45:41,930
<font color="#E5E5E5">about because since it was almost you</font>

825
00:45:39,630 --> 00:45:46,410
<font color="#E5E5E5">could look at</font><font color="#CCCCCC"> as strict priority</font><font color="#E5E5E5"> hewing</font>

826
00:45:41,930 --> 00:45:48,118
it meant that<font color="#E5E5E5"> if something was if you</font>

827
00:45:46,410 --> 00:45:51,269
had a packet there but you weren't quite

828
00:45:48,119 --> 00:45:54,059
ready<font color="#E5E5E5"> to send it does that does it block</font>

829
00:45:51,269 --> 00:45:58,019
completely<font color="#E5E5E5"> or would have no send a</font>

830
00:45:54,059 --> 00:46:00,839
<font color="#E5E5E5">little priority and in we have two basic</font>

831
00:45:58,019 --> 00:46:04,948
we have two kinds<font color="#E5E5E5"> of queueing mechanisms</font>

832
00:46:00,839 --> 00:46:10,160
and one kind is synchronized<font color="#CCCCCC"> time-based</font>

833
00:46:04,949 --> 00:46:14,359
<font color="#CCCCCC">and the other is</font><font color="#E5E5E5"> very much like intserv</font>

834
00:46:10,160 --> 00:46:17,160
for those of you who are very old<font color="#CCCCCC"> and</font>

835
00:46:14,359 --> 00:46:24,420
the ones<font color="#E5E5E5"> that are like in</font><font color="#CCCCCC"> served candle</font>

836
00:46:17,160 --> 00:46:26,490
liver<font color="#E5E5E5"> early if the source varies its</font>

837
00:46:24,420 --> 00:46:28,020
speed<font color="#E5E5E5"> and there's a certain amount of</font>

838
00:46:26,490 --> 00:46:29,879
jitter<font color="#CCCCCC"> on the output it takes it a while</font>

839
00:46:28,020 --> 00:46:32,369
<font color="#E5E5E5">for all the</font><font color="#CCCCCC"> buffers to</font><font color="#E5E5E5"> fill up</font><font color="#CCCCCC"> before it</font>

840
00:46:29,880 --> 00:46:35,880
becomes stable<font color="#CCCCCC"> and and so the jitter</font>

841
00:46:32,369 --> 00:46:37,530
decreases with time but you start all

842
00:46:35,880 --> 00:46:40,319
over again if<font color="#E5E5E5"> you shut up and start over</font>

843
00:46:37,530 --> 00:46:42,809
<font color="#CCCCCC">again just like very much like</font><font color="#E5E5E5"> answer</font>

844
00:46:40,319 --> 00:46:45,599
<font color="#E5E5E5">the other is time based and the time</font>

845
00:46:42,809 --> 00:46:48,690
based ones with<font color="#E5E5E5"> synchronized clocks can</font>

846
00:46:45,599 --> 00:46:50,670
deliver the packet within a fixed time

847
00:46:48,690 --> 00:46:52,619
window that's the same for<font color="#E5E5E5"> all flows</font>

848
00:46:50,670 --> 00:46:55,289
that<font color="#E5E5E5"> are coming out of that port or it</font>

849
00:46:52,619 --> 00:46:57,359
can be down to a nanosecond if you want

850
00:46:55,289 --> 00:46:59,400
to do that<font color="#E5E5E5"> that gets a little tricky</font>

851
00:46:57,359 --> 00:47:01,828
because of how<font color="#E5E5E5"> many</font><font color="#CCCCCC"> queues it will take</font>

852
00:46:59,400 --> 00:47:04,079
and<font color="#E5E5E5"> how many timers you have to handle a</font>

853
00:47:01,829 --> 00:47:06,869
lot of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> flows</font><font color="#E5E5E5"> but it can be</font>

854
00:47:04,079 --> 00:47:08,910
very<font color="#CCCCCC"> accurate yeah I was asking it</font><font color="#E5E5E5"> I got</font>

855
00:47:06,869 --> 00:47:10,470
on the<font color="#E5E5E5"> very accurate one that you</font>

856
00:47:08,910 --> 00:47:13,170
wouldn't deliver<font color="#CCCCCC"> early it was really on</font>

857
00:47:10,470 --> 00:47:17,118
this one or it wasn't clear<font color="#CCCCCC"> and I</font><font color="#E5E5E5"> think</font>

858
00:47:13,170 --> 00:47:21,890
I heard<font color="#E5E5E5"> Jana say it won't delivery early</font>

859
00:47:17,119 --> 00:47:25,430
<font color="#E5E5E5">can deliver a can deliver early yes</font><font color="#CCCCCC"> ok</font>

860
00:47:21,890 --> 00:47:27,690
if if the flow is running and<font color="#CCCCCC"> you stop</font>

861
00:47:25,430 --> 00:47:32,098
for a while<font color="#CCCCCC"> and then send one packet</font>

862
00:47:27,690 --> 00:47:43,020
<font color="#CCCCCC">it'll go</font><font color="#E5E5E5"> through real quick yeah what's</font>

863
00:47:32,099 --> 00:47:46,589
a while right and two questions<font color="#CCCCCC"> so the</font>

864
00:47:43,020 --> 00:47:49,410
first one has to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> with the source and</font>

865
00:47:46,589 --> 00:47:52,288
the destination which looks like<font color="#CCCCCC"> if I</font>

866
00:47:49,410 --> 00:47:55,049
got it right<font color="#E5E5E5"> there</font><font color="#CCCCCC"> or excluded and many</font>

867
00:47:52,289 --> 00:47:58,950
times<font color="#CCCCCC"> I don't know what the</font><font color="#E5E5E5"> assumption</font>

868
00:47:55,049 --> 00:48:01,829
is for what type<font color="#CCCCCC"> of devices</font><font color="#E5E5E5"> those are</font>

869
00:47:58,950 --> 00:48:03,899
but many times<font color="#E5E5E5"> significant amount of</font>

870
00:48:01,829 --> 00:48:07,619
<font color="#E5E5E5">jitter and latency can occur at both</font>

871
00:48:03,900 --> 00:48:12,630
ends<font color="#CCCCCC"> so how is</font><font color="#E5E5E5"> that actually addressed</font>

872
00:48:07,619 --> 00:48:14,250
here in the overall<font color="#E5E5E5"> scheme so so the one</font>

873
00:48:12,630 --> 00:48:17,609
<font color="#E5E5E5">of the use</font><font color="#CCCCCC"> cases is industrial</font>

874
00:48:14,250 --> 00:48:20,190
automation<font color="#E5E5E5"> and in those cases the</font>

875
00:48:17,609 --> 00:48:25,319
sources<font color="#CCCCCC"> and destinations are controllers</font>

876
00:48:20,190 --> 00:48:28,799
and and actuators<font color="#E5E5E5"> and the the control</font>

877
00:48:25,319 --> 00:48:30,190
<font color="#E5E5E5">flow is a CBR flow for them for</font><font color="#CCCCCC"> the</font>

878
00:48:28,799 --> 00:48:35,380
control loop

879
00:48:30,190 --> 00:48:37,870
between<font color="#E5E5E5"> those so</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> very periodic</font>

880
00:48:35,380 --> 00:48:42,730
and that's why we can have<font color="#E5E5E5"> this time</font>

881
00:48:37,870 --> 00:48:47,850
based<font color="#CCCCCC"> man isms in in the queues okay and</font>

882
00:48:42,730 --> 00:48:52,960
the<font color="#E5E5E5"> other one</font><font color="#CCCCCC"> so obviously</font><font color="#E5E5E5"> i</font><font color="#CCCCCC"> Tripoli's</font>

883
00:48:47,850 --> 00:48:56,140
<font color="#CCCCCC">eight eight queues but you may have many</font>

884
00:48:52,960 --> 00:49:00,280
<font color="#E5E5E5">flow so what is the in each priority</font>

885
00:48:56,140 --> 00:49:03,370
<font color="#E5E5E5">level so what what is the mechanism by</font>

886
00:49:00,280 --> 00:49:10,990
<font color="#CCCCCC">which you are dealing</font><font color="#E5E5E5"> with competing</font>

887
00:49:03,370 --> 00:49:14,700
flows<font color="#CCCCCC"> so yes it's eight queues and it's</font>

888
00:49:10,990 --> 00:49:18,160
a it's up to you I mean<font color="#CCCCCC"> you can you can</font>

889
00:49:14,700 --> 00:49:20,319
allocate<font color="#E5E5E5"> for</font><font color="#CCCCCC"> competing or I mean put</font>

890
00:49:18,160 --> 00:49:23,620
competing flows<font color="#CCCCCC"> in two different</font><font color="#E5E5E5"> queues</font>

891
00:49:20,320 --> 00:49:26,740
<font color="#E5E5E5">and then you can have some</font><font color="#CCCCCC"> control on</font>

892
00:49:23,620 --> 00:49:28,990
<font color="#E5E5E5">those or what you can do is this in</font>

893
00:49:26,740 --> 00:49:33,939
these green box<font color="#CCCCCC"> that the person</font><font color="#E5E5E5"> is</font>

894
00:49:28,990 --> 00:49:37,330
filtering<font color="#E5E5E5"> and policing</font><font color="#CCCCCC"> that can make you</font>

895
00:49:33,940 --> 00:49:39,670
can<font color="#E5E5E5"> do</font><font color="#CCCCCC"> it very</font><font color="#E5E5E5"> fancy things</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> they</font>

896
00:49:37,330 --> 00:49:42,250
end actually<font color="#CCCCCC"> in the queue before</font><font color="#E5E5E5"> the</font>

897
00:49:39,670 --> 00:49:44,170
packets are put in the queue and this is

898
00:49:42,250 --> 00:49:46,870
what the<font color="#CCCCCC"> our synchronous traffic shaping</font>

899
00:49:44,170 --> 00:49:56,170
uses like internal priority value for

900
00:49:46,870 --> 00:49:58,089
example<font color="#E5E5E5"> or</font><font color="#CCCCCC"> yeah if I were building a</font>

901
00:49:56,170 --> 00:49:59,590
strictly standard box I'd be limited to

902
00:49:58,090 --> 00:50:00,370
<font color="#CCCCCC">eight</font><font color="#E5E5E5"> queues if I were building</font>

903
00:49:59,590 --> 00:50:01,690
<font color="#E5E5E5">something</font>

904
00:50:00,370 --> 00:50:03,160
if<font color="#CCCCCC"> I were building</font><font color="#E5E5E5"> a product for</font>

905
00:50:01,690 --> 00:50:07,270
somebody I'd very likely have a lot more

906
00:50:03,160 --> 00:50:09,430
<font color="#E5E5E5">than eight queues</font><font color="#CCCCCC"> so still still at the</font>

907
00:50:07,270 --> 00:50:11,940
wire level I'm gonna have that

908
00:50:09,430 --> 00:50:13,210
interference no matter what<font color="#E5E5E5"> and and so</font>

909
00:50:11,940 --> 00:50:17,080
are we

910
00:50:13,210 --> 00:50:19,840
so so is that<font color="#CCCCCC"> something that you guys</font>

911
00:50:17,080 --> 00:50:23,680
<font color="#CCCCCC">are</font><font color="#E5E5E5"> interested in the IDF to work with</font>

912
00:50:19,840 --> 00:50:26,020
you on or what is what is<font color="#E5E5E5"> the areas that</font>

913
00:50:23,680 --> 00:50:28,450
you're looking for because<font color="#E5E5E5"> I Triple E</font>

914
00:50:26,020 --> 00:50:31,390
obviously is limited at some point and

915
00:50:28,450 --> 00:50:33,370
<font color="#E5E5E5">the</font><font color="#CCCCCC"> question is exactly as</font><font color="#E5E5E5"> you said if I</font>

916
00:50:31,390 --> 00:50:35,950
would<font color="#CCCCCC"> build a</font><font color="#E5E5E5"> product that has</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> head</font>

917
00:50:33,370 --> 00:50:38,410
<font color="#CCCCCC">I obviously am NOT</font><font color="#E5E5E5"> going to be satisfied</font>

918
00:50:35,950 --> 00:50:40,270
<font color="#CCCCCC">with the number eight so how are</font><font color="#E5E5E5"> we</font>

919
00:50:38,410 --> 00:50:43,520
dealing<font color="#E5E5E5"> with that to create an</font>

920
00:50:40,270 --> 00:50:46,100
end-to-end story right<font color="#E5E5E5"> so</font>

921
00:50:43,520 --> 00:50:48,490
realize<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> the per stream part the</font>

922
00:50:46,100 --> 00:50:50,990
per stream filtering and<font color="#CCCCCC"> Kirk Ewing that</font>

923
00:50:48,490 --> 00:50:53,959
that can be operating

924
00:50:50,990 --> 00:50:56,930
that's not limited to the<font color="#CCCCCC"> eight cues</font>

925
00:50:53,960 --> 00:51:00,020
that that's looking at the stream

926
00:50:56,930 --> 00:51:03,109
characteristics to figure out what

927
00:51:00,020 --> 00:51:08,000
stream the flow is in so so yeah the

928
00:51:03,110 --> 00:51:11,000
<font color="#E5E5E5">final getting</font><font color="#CCCCCC"> onto the</font><font color="#E5E5E5"> network is is in</font>

929
00:51:08,000 --> 00:51:14,120
the priority queues<font color="#E5E5E5"> but there's there's</font>

930
00:51:11,000 --> 00:51:17,480
also the this the filtering<font color="#E5E5E5"> and killing</font>

931
00:51:14,120 --> 00:51:27,859
and<font color="#CCCCCC"> a stream is</font><font color="#E5E5E5"> loosely defined as</font><font color="#CCCCCC"> five</font>

932
00:51:17,480 --> 00:51:30,770
<font color="#CCCCCC">tuple that's</font><font color="#E5E5E5"> wrong way you can we have a</font>

933
00:51:27,860 --> 00:51:34,310
standard<font color="#CCCCCC"> 802 that one CB that allows you</font>

934
00:51:30,770 --> 00:51:38,140
<font color="#CCCCCC">to identify</font><font color="#E5E5E5"> the flow right now it's by</font>

935
00:51:34,310 --> 00:51:43,009
MAC addresses VLANs<font color="#E5E5E5"> and IP</font><font color="#CCCCCC"> five tuples</font>

936
00:51:38,140 --> 00:51:45,170
<font color="#E5E5E5">okay okay right now and a casual reader</font>

937
00:51:43,010 --> 00:51:49,640
of the standard will see that it's

938
00:51:45,170 --> 00:51:51,350
really<font color="#CCCCCC"> easy to add a you know if you can</font>

939
00:51:49,640 --> 00:51:56,000
do those flow it's obviously<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to it's</font>

940
00:51:51,350 --> 00:52:02,740
obvious how to<font color="#E5E5E5"> do the others and stay</font>

941
00:51:56,000 --> 00:52:05,780
even stay within the standard yes so I

942
00:52:02,740 --> 00:52:09,950
think that<font color="#CCCCCC"> answers okay thank you</font><font color="#E5E5E5"> a good</font>

943
00:52:05,780 --> 00:52:12,970
this was very educational thank you one

944
00:52:09,950 --> 00:52:20,240
of the<font color="#CCCCCC"> things yes this is packet based</font>

945
00:52:12,970 --> 00:52:24,140
it's not a bitwise CDR<font color="#E5E5E5"> okay so yes there</font>

946
00:52:20,240 --> 00:52:32,689
will always be stagger on the output

947
00:52:24,140 --> 00:52:37,480
because we're outputting packets<font color="#E5E5E5"> okay</font>

948
00:52:32,690 --> 00:52:41,330
and in a slide<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can find some</font>

949
00:52:37,480 --> 00:52:48,290
references to further reading and as I

950
00:52:41,330 --> 00:52:51,650
<font color="#E5E5E5">mentioned as I mentioned we have a brief</font>

951
00:52:48,290 --> 00:52:56,430
demo<font color="#CCCCCC"> of one of the feature</font><font color="#E5E5E5"> yes one more</font>

952
00:52:51,650 --> 00:52:58,810
<font color="#E5E5E5">question yes</font>

953
00:52:56,430 --> 00:53:12,549
definitely this<font color="#CCCCCC"> is very related to</font><font color="#E5E5E5"> that</font>

954
00:52:58,810 --> 00:53:15,220
<font color="#CCCCCC">nut okay</font><font color="#E5E5E5"> so maybe so so new and I</font><font color="#CCCCCC"> coach</font>

955
00:53:12,550 --> 00:53:17,020
<font color="#CCCCCC">Odette net and the purpose of</font><font color="#E5E5E5"> debt net</font>

956
00:53:15,220 --> 00:53:19,959
is is<font color="#E5E5E5"> obviously there's a lot of</font>

957
00:53:17,020 --> 00:53:22,180
networks<font color="#E5E5E5"> that are purely or</font><font color="#CCCCCC"> two networks</font>

958
00:53:19,960 --> 00:53:24,880
<font color="#CCCCCC">and we still</font><font color="#E5E5E5"> want to provide these kinds</font>

959
00:53:22,180 --> 00:53:26,529
<font color="#CCCCCC">of capabilities</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> layer</font><font color="#E5E5E5"> three</font>

960
00:53:24,880 --> 00:53:28,690
networks as well as overlay or two

961
00:53:26,530 --> 00:53:34,060
networks and so the purpose<font color="#CCCCCC"> of debt net</font>

962
00:53:28,690 --> 00:53:37,000
<font color="#E5E5E5">is to is to provide the capabilities</font><font color="#CCCCCC"> to</font>

963
00:53:34,060 --> 00:53:39,160
handle<font color="#E5E5E5"> this kind of traffic and and set</font>

964
00:53:37,000 --> 00:53:41,410
up the the<font color="#E5E5E5"> reservations and</font><font color="#CCCCCC"> the flows</font>

965
00:53:39,160 --> 00:53:43,600
and such so that<font color="#E5E5E5"> this we get these</font>

966
00:53:41,410 --> 00:53:46,930
behaviors over<font color="#E5E5E5"> layer three networks and</font>

967
00:53:43,600 --> 00:53:51,130
<font color="#E5E5E5">not just over layer two so extending</font>

968
00:53:46,930 --> 00:53:52,839
this up to the<font color="#CCCCCC"> IETF domain and we meet</font>

969
00:53:51,130 --> 00:54:02,410
<font color="#E5E5E5">Thursday yes we're meeting Thursday</font>

970
00:53:52,840 --> 00:54:04,420
morning this week yeah thank you<font color="#CCCCCC"> for and</font>

971
00:54:02,410 --> 00:54:08,589
I think<font color="#CCCCCC"> they</font><font color="#E5E5E5"> tend what is coming is</font>

972
00:54:04,420 --> 00:54:11,650
actually that<font color="#CCCCCC"> net as well</font><font color="#E5E5E5"> so as I</font>

973
00:54:08,590 --> 00:54:15,490
<font color="#CCCCCC">already mentioned</font><font color="#E5E5E5"> in the data plane that</font>

974
00:54:11,650 --> 00:54:18,010
was one<font color="#E5E5E5"> of the hot</font><font color="#CCCCCC"> topics</font><font color="#E5E5E5"> on how</font><font color="#CCCCCC"> to</font>

975
00:54:15,490 --> 00:54:20,500
provide<font color="#E5E5E5"> this</font><font color="#CCCCCC"> film or packet replication</font>

976
00:54:18,010 --> 00:54:24,160
<font color="#E5E5E5">and elimination for</font><font color="#CCCCCC"> the reliability in</font>

977
00:54:20,500 --> 00:54:26,260
<font color="#CCCCCC">linear to data plane so what we have</font>

978
00:54:24,160 --> 00:54:28,420
<font color="#CCCCCC">here is a is a proof-of-concept demo</font>

979
00:54:26,260 --> 00:54:31,300
<font color="#E5E5E5">both showing the layer 2 and layer 3</font>

980
00:54:28,420 --> 00:54:33,390
data pane and the packet or or frame

981
00:54:31,300 --> 00:54:36,580
replication<font color="#E5E5E5"> and elimination feature for</font>

982
00:54:33,390 --> 00:54:41,609
<font color="#E5E5E5">reliability so we focus on on the</font>

983
00:54:36,580 --> 00:54:44,290
reliability aspect<font color="#E5E5E5"> in this case and at</font>

984
00:54:41,609 --> 00:54:46,960
layer<font color="#E5E5E5"> 2 it</font><font color="#CCCCCC"> is frame replication and</font>

985
00:54:44,290 --> 00:54:49,930
<font color="#E5E5E5">elimination for reliability so the 802</font>

986
00:54:46,960 --> 00:54:52,510
dot 1 CB specification provides<font color="#E5E5E5"> you the</font>

987
00:54:49,930 --> 00:54:56,350
mechanism<font color="#E5E5E5"> actually includes a pseudo</font>

988
00:54:52,510 --> 00:55:00,880
code and provided the layer 2 data plane

989
00:54:56,350 --> 00:55:04,200
details and in<font color="#CCCCCC"> the.net</font><font color="#E5E5E5"> document called</font>

990
00:55:00,880 --> 00:55:08,560
<font color="#E5E5E5">the data data plane solution linked</font>

991
00:55:04,200 --> 00:55:09,700
linked here<font color="#CCCCCC"> that provides the layer 3</font>

992
00:55:08,560 --> 00:55:12,340
data plane aspect

993
00:55:09,700 --> 00:55:14,230
and in that document it is called the

994
00:55:12,340 --> 00:55:16,860
packet replication and elimination

995
00:55:14,230 --> 00:55:21,850
<font color="#E5E5E5">faction so that's why the two</font>

996
00:55:16,860 --> 00:55:23,320
<font color="#E5E5E5">abbreviations</font><font color="#CCCCCC"> Bota</font><font color="#E5E5E5"> as explained below as</font>

997
00:55:21,850 --> 00:55:25,270
<font color="#E5E5E5">it was explained</font><font color="#CCCCCC"> during the tutorial</font>

998
00:55:23,320 --> 00:55:28,120
both of them based on<font color="#E5E5E5"> having disjoint</font>

999
00:55:25,270 --> 00:55:31,800
paths and<font color="#E5E5E5"> and sending the relative</font>

1000
00:55:28,120 --> 00:55:34,779
identical copies<font color="#CCCCCC"> with a sequence number</font>

1001
00:55:31,800 --> 00:55:39,370
<font color="#E5E5E5">to the elimination point which which</font>

1002
00:55:34,780 --> 00:55:44,290
gets rid<font color="#E5E5E5"> of the surplus</font><font color="#CCCCCC"> so what you can</font>

1003
00:55:39,370 --> 00:55:46,720
see here<font color="#E5E5E5"> is a remote</font><font color="#CCCCCC"> control of a</font>

1004
00:55:44,290 --> 00:55:50,500
balancing robot so there is a lagoon

1005
00:55:46,720 --> 00:55:52,779
robot<font color="#E5E5E5"> down there and the control logic</font>

1006
00:55:50,500 --> 00:55:58,240
of the balancing logic has been moved

1007
00:55:52,780 --> 00:56:00,970
<font color="#E5E5E5">away</font><font color="#CCCCCC"> actually to that laptop computer</font><font color="#E5E5E5"> we</font>

1008
00:55:58,240 --> 00:56:04,060
have<font color="#E5E5E5"> implemented the replication</font>

1009
00:56:00,970 --> 00:56:08,680
elimination function on<font color="#E5E5E5"> PCs actually</font>

1010
00:56:04,060 --> 00:56:12,820
they are in the<font color="#E5E5E5"> two tower</font><font color="#CCCCCC"> pcs these are</font>

1011
00:56:08,680 --> 00:56:15,790
the these<font color="#E5E5E5"> are the pink ones here in</font><font color="#CCCCCC"> the</font>

1012
00:56:12,820 --> 00:56:17,500
<font color="#E5E5E5">figure and as a reference</font>

1013
00:56:15,790 --> 00:56:19,830
comparing the<font color="#E5E5E5"> replication and</font>

1014
00:56:17,500 --> 00:56:23,980
elimination we<font color="#E5E5E5"> compare it with 50</font>

1015
00:56:19,830 --> 00:56:27,190
<font color="#E5E5E5">millisecond switching so as I mentioned</font>

1016
00:56:23,980 --> 00:56:28,870
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> setup that</font><font color="#E5E5E5"> the two towers</font>

1017
00:56:27,190 --> 00:56:31,900
are the replication<font color="#E5E5E5"> and elimination</font>

1018
00:56:28,870 --> 00:56:34,299
functions and the this<font color="#CCCCCC"> is a ring</font>

1019
00:56:31,900 --> 00:56:39,430
topology<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the two</font><font color="#E5E5E5"> pieces in the</font>

1020
00:56:34,300 --> 00:56:42,310
<font color="#CCCCCC">middle that are the simple switches when</font>

1021
00:56:39,430 --> 00:56:46,169
we take a look on<font color="#E5E5E5"> the layer 2 data plane</font>

1022
00:56:42,310 --> 00:56:52,570
the the controller sends<font color="#E5E5E5"> VLAN tag the</font>

1023
00:56:46,170 --> 00:56:56,650
traffic to<font color="#E5E5E5"> the edge node and this CB</font>

1024
00:56:52,570 --> 00:56:58,660
mechanism<font color="#E5E5E5"> adds so called our tag which</font>

1025
00:56:56,650 --> 00:57:03,630
includes the sequence number for the

1026
00:56:58,660 --> 00:57:06,730
replication<font color="#E5E5E5"> and elimination at layer 3</font>

1027
00:57:03,630 --> 00:57:09,400
if the layer 2 network is used to

1028
00:57:06,730 --> 00:57:14,530
provide a<font color="#CCCCCC"> TSN service so we have the</font>

1029
00:57:09,400 --> 00:57:19,390
same and<font color="#E5E5E5"> host then at the Uni we have</font>

1030
00:57:14,530 --> 00:57:22,660
the same format in case<font color="#CCCCCC"> of an MPLS data</font>

1031
00:57:19,390 --> 00:57:26,288
plane<font color="#E5E5E5"> we have the</font>

1032
00:57:22,660 --> 00:57:29,950
the<font color="#E5E5E5"> mpls transport</font><font color="#CCCCCC"> level and then which</font>

1033
00:57:26,289 --> 00:57:33,309
was we need a pseudo higher labor<font color="#E5E5E5"> and in</font>

1034
00:57:29,950 --> 00:57:35,680
case<font color="#CCCCCC"> of the feature</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> controvert is</font>

1035
00:57:33,309 --> 00:57:38,650
mandatory<font color="#CCCCCC"> so we will have a</font><font color="#E5E5E5"> death net</font>

1036
00:57:35,680 --> 00:57:41,859
controvert which includes the sequence

1037
00:57:38,650 --> 00:57:48,430
number<font color="#E5E5E5"> and all the rest become payload</font>

1038
00:57:41,859 --> 00:57:50,680
with respect to<font color="#CCCCCC"> death net this</font><font color="#E5E5E5"> is just a</font>

1039
00:57:48,430 --> 00:57:54,848
virus<font color="#CCCCCC"> charka capture on</font><font color="#E5E5E5"> one on the wire</font>

1040
00:57:50,680 --> 00:57:58,029
and so let's see the demo part<font color="#E5E5E5"> so the</font>

1041
00:57:54,849 --> 00:58:01,269
first scenario is<font color="#E5E5E5"> when we have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> link</font>

1042
00:57:58,029 --> 00:58:03,460
failure and if we use the protection

1043
00:58:01,269 --> 00:58:06,308
switching<font color="#E5E5E5"> mechanism with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> work</font>

1044
00:58:03,460 --> 00:58:08,920
working working tunnel<font color="#E5E5E5"> protection tunnel</font>

1045
00:58:06,309 --> 00:58:11,430
scheme then we can get<font color="#E5E5E5"> 50 million SEK</font>

1046
00:58:08,920 --> 00:58:15,670
<font color="#E5E5E5">failover</font><font color="#CCCCCC"> there are many many mechanisms</font>

1047
00:58:11,430 --> 00:58:18,578
<font color="#E5E5E5">for</font><font color="#CCCCCC"> that and and the application</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> be</font>

1048
00:58:15,670 --> 00:58:21,640
impacted when we turn on the<font color="#E5E5E5"> application</font>

1049
00:58:18,579 --> 00:58:24,549
and<font color="#E5E5E5"> illumination that then actually the</font>

1050
00:58:21,640 --> 00:58:31,598
packet loss<font color="#CCCCCC"> is eliminated so let's see</font>

1051
00:58:24,549 --> 00:58:34,599
so<font color="#CCCCCC"> the first is when the protection</font>

1052
00:58:31,599 --> 00:58:40,200
switching it's on the replication

1053
00:58:34,599 --> 00:58:40,200
<font color="#CCCCCC">illumination is not yes you can come yes</font>

1054
00:58:40,770 --> 00:58:43,880
[Music]

1055
00:58:44,190 --> 00:58:52,779
so what happens is you have to start<font color="#E5E5E5"> the</font>

1056
00:58:48,099 --> 00:58:56,829
robot<font color="#E5E5E5"> in a vertical</font><font color="#CCCCCC"> position</font><font color="#E5E5E5"> and then</font>

1057
00:58:52,779 --> 00:59:07,859
the balancing learns and<font color="#E5E5E5"> and so the</font>

1058
00:58:56,829 --> 00:59:10,719
balancing runs on the on the laptop so

1059
00:59:07,859 --> 00:59:12,308
it is a<font color="#E5E5E5"> software link failure for now at</font>

1060
00:59:10,719 --> 00:59:15,160
the end we<font color="#E5E5E5"> will</font><font color="#CCCCCC"> see the physical link</font>

1061
00:59:12,309 --> 00:59:17,920
<font color="#E5E5E5">unplugging it's easier for the demo for</font>

1062
00:59:15,160 --> 00:59:25,598
now to have a<font color="#E5E5E5"> software link at as</font>

1063
00:59:17,920 --> 00:59:27,930
illustrated in<font color="#E5E5E5"> the figure and this was</font>

1064
00:59:25,599 --> 00:59:31,450
the<font color="#E5E5E5"> 15 minutes I feel over time so that</font>

1065
00:59:27,930 --> 00:59:33,578
that<font color="#E5E5E5"> amount of I guess it was three</font><font color="#CCCCCC"> four</font>

1066
00:59:31,450 --> 00:59:35,828
<font color="#E5E5E5">packets that have been lost</font><font color="#CCCCCC"> typically it</font>

1067
00:59:33,579 --> 00:59:36,380
is<font color="#E5E5E5"> that was too much for the balancing</font>

1068
00:59:35,829 --> 00:59:38,809
logic

1069
00:59:36,380 --> 01:00:06,200
and now we do<font color="#E5E5E5"> it with the replication</font>

1070
00:59:38,809 --> 01:00:09,440
elimination<font color="#E5E5E5"> feature so you despite of</font>

1071
01:00:06,200 --> 01:00:15,578
the link failure<font color="#E5E5E5"> nothing survives</font><font color="#CCCCCC"> one of</font>

1072
01:00:09,440 --> 01:00:18,859
the flows<font color="#CCCCCC"> that was something else that</font>

1073
01:00:15,579 --> 01:00:26,559
<font color="#CCCCCC">was the demo doing one let's see it</font>

1074
01:00:18,859 --> 01:00:26,558
again yes<font color="#CCCCCC"> yes it's you see it's really</font>

1075
01:00:41,680 --> 01:00:46,460
so it survives<font color="#CCCCCC"> we have one of</font><font color="#E5E5E5"> the flows</font>

1076
01:00:44,329 --> 01:00:49,940
<font color="#E5E5E5">in the redundant</font><font color="#CCCCCC"> path</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> have</font>

1077
01:00:46,460 --> 01:00:55,700
<font color="#E5E5E5">actually with the replication it's on</font>

1078
01:00:49,940 --> 01:00:58,309
both flows actually<font color="#CCCCCC"> this is very</font>

1079
01:00:55,700 --> 01:01:01,359
<font color="#E5E5E5">sensitive this guy so if you touch it</font>

1080
01:00:58,309 --> 01:01:18,559
<font color="#E5E5E5">when it tries to</font><font color="#CCCCCC"> burn out</font><font color="#E5E5E5"> that's over or</font>

1081
01:01:01,359 --> 01:01:20,719
maybe it may be<font color="#CCCCCC"> unusual to the ATF but</font>

1082
01:01:18,559 --> 01:01:22,479
it's a very<font color="#E5E5E5"> classical metric for the</font>

1083
01:01:20,719 --> 01:01:24,950
applications<font color="#CCCCCC"> in industrial</font><font color="#E5E5E5"> control oops</font>

1084
01:01:22,479 --> 01:01:27,618
<font color="#CCCCCC">the number of loss in a row is very</font>

1085
01:01:24,950 --> 01:01:29,419
critical<font color="#E5E5E5"> like usual</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> they would always</font>

1086
01:01:27,619 --> 01:01:30,950
let you lose a packet but if you lose

1087
01:01:29,420 --> 01:01:32,930
<font color="#CCCCCC">three four packets in a row they will</font>

1088
01:01:30,950 --> 01:01:34,430
stop the<font color="#CCCCCC"> production line if they have to</font>

1089
01:01:32,930 --> 01:01:37,779
stop<font color="#E5E5E5"> the production line like twice in</font><font color="#CCCCCC"> a</font>

1090
01:01:34,430 --> 01:01:37,779
<font color="#CCCCCC">year on your hardware is</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> curve</font>

1091
01:01:49,280 --> 01:01:55,920
yes so let's<font color="#CCCCCC"> see the other failure</font>

1092
01:01:52,920 --> 01:01:59,880
scenario which we could link flapping

1093
01:01:55,920 --> 01:02:01,950
<font color="#E5E5E5">when</font><font color="#CCCCCC"> thing goes up goes down and if it</font>

1094
01:01:59,880 --> 01:02:04,680
<font color="#E5E5E5">is as illustrated in the figure</font><font color="#CCCCCC"> twenty</font>

1095
01:02:01,950 --> 01:02:06,480
<font color="#E5E5E5">milliseconds then the monitoring</font><font color="#CCCCCC"> Mahon</font>

1096
01:02:04,680 --> 01:02:08,850
<font color="#E5E5E5">ISM you use for the classic protection</font>

1097
01:02:06,480 --> 01:02:10,590
switching doesn't even<font color="#E5E5E5"> detect but</font><font color="#CCCCCC"> that's</font>

1098
01:02:08,850 --> 01:02:17,339
just<font color="#CCCCCC"> passed Pascale explained that can</font>

1099
01:02:10,590 --> 01:02:19,410
be critical<font color="#E5E5E5"> for for a control loop it's</font>

1100
01:02:17,340 --> 01:03:11,430
very sensitive<font color="#E5E5E5"> so even not that easy to</font>

1101
01:02:19,410 --> 01:03:13,529
<font color="#CCCCCC">stop started so this</font><font color="#E5E5E5"> is the link</font>

1102
01:03:11,430 --> 01:03:19,710
<font color="#E5E5E5">flapping without the replication</font>

1103
01:03:13,530 --> 01:03:22,230
<font color="#CCCCCC">illumination so that's like not any</font>

1104
01:03:19,710 --> 01:03:24,120
<font color="#E5E5E5">better than the simpler failure was so</font>

1105
01:03:22,230 --> 01:03:26,340
let's see it with the<font color="#E5E5E5"> frame application</font>

1106
01:03:24,120 --> 01:03:29,339
and<font color="#E5E5E5"> elimination so multiple failures or</font>

1107
01:03:26,340 --> 01:03:31,580
multiple<font color="#E5E5E5"> link downs as illustrated in</font>

1108
01:03:29,340 --> 01:03:31,580
the figure

1109
01:03:54,580 --> 01:04:01,160
<font color="#CCCCCC">yeah well whenever</font><font color="#E5E5E5"> the demo is done yeah</font>

1110
01:03:57,320 --> 01:04:33,500
yeah I should<font color="#E5E5E5"> be</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> minutes on this</font>

1111
01:04:01,160 --> 01:05:34,850
<font color="#E5E5E5">level doing and of course it works with</font>

1112
01:04:33,500 --> 01:05:36,380
physical I will unplug<font color="#E5E5E5"> the link so</font>

1113
01:05:34,850 --> 01:05:38,120
thank you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much for your attention</font>

1114
01:05:36,380 --> 01:05:41,300
if you are interested in the wireshark

1115
01:05:38,120 --> 01:05:42,279
capture please come to the screen<font color="#CCCCCC"> thank</font>

1116
01:05:41,300 --> 01:05:44,260
you

1117
01:05:42,280 --> 01:05:48,710
[Music]

1118
01:05:44,260 --> 01:05:48,710
[Applause]

