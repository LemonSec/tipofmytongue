1
00:00:00,500 --> 00:00:07,410
<font color="#CCCCCC">beyond you</font><font color="#E5E5E5"> you want to know how to</font>

2
00:00:03,060 --> 00:00:16,470
compile correctly your<font color="#CCCCCC"> yang models</font><font color="#E5E5E5"> thank</font>

3
00:00:07,410 --> 00:00:19,560
you hi good afternoon my name<font color="#CCCCCC"> is Raja</font>

4
00:00:16,470 --> 00:00:21,750
<font color="#E5E5E5">vodka and in this part of</font><font color="#CCCCCC"> the tutorial I</font>

5
00:00:19,560 --> 00:00:25,259
would like to talk<font color="#E5E5E5"> more</font><font color="#CCCCCC"> about practical</font>

6
00:00:21,750 --> 00:00:29,789
<font color="#CCCCCC">things</font><font color="#E5E5E5"> about the steps that you probably</font>

7
00:00:25,260 --> 00:00:31,500
<font color="#E5E5E5">want to do with your yang modules and</font>

8
00:00:29,789 --> 00:00:34,290
especially<font color="#E5E5E5"> if you are preparing these</font>

9
00:00:31,500 --> 00:00:37,920
modules for<font color="#E5E5E5"> publication in idea of</font>

10
00:00:34,290 --> 00:00:41,100
standards<font color="#E5E5E5"> so if you do all the steps and</font>

11
00:00:37,920 --> 00:00:43,710
<font color="#E5E5E5">the</font><font color="#CCCCCC"> compilation will be okay then</font><font color="#E5E5E5"> I know</font>

12
00:00:41,100 --> 00:00:45,030
<font color="#E5E5E5">I will be happy I guess otherwise you</font>

13
00:00:43,710 --> 00:00:50,039
<font color="#CCCCCC">will you know</font>

14
00:00:45,030 --> 00:00:52,910
Harris you to make it<font color="#E5E5E5"> compile properly</font>

15
00:00:50,039 --> 00:00:58,910
because<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> quite important of course</font>

16
00:00:52,910 --> 00:01:01,468
if people<font color="#E5E5E5"> publish in</font><font color="#CCCCCC"> Internet drafts and</font>

17
00:00:58,910 --> 00:01:05,729
modules that don't compile<font color="#E5E5E5"> it</font><font color="#CCCCCC"> very</font>

18
00:01:01,469 --> 00:01:08,220
<font color="#CCCCCC">helpful anyway as before if you have any</font>

19
00:01:05,729 --> 00:01:14,400
questions or comments<font color="#E5E5E5"> please</font><font color="#CCCCCC"> feel free</font>

20
00:01:08,220 --> 00:01:16,320
to interrupt<font color="#CCCCCC"> me</font><font color="#E5E5E5"> anytime and ask</font><font color="#CCCCCC"> good so</font>

21
00:01:14,400 --> 00:01:21,750
these are the<font color="#E5E5E5"> steps I would like to</font>

22
00:01:16,320 --> 00:01:24,298
cover<font color="#CCCCCC"> this is actually an abridged</font>

23
00:01:21,750 --> 00:01:33,030
version of a tutorial that's<font color="#E5E5E5"> available</font>

24
00:01:24,299 --> 00:01:35,520
<font color="#E5E5E5">at the</font><font color="#CCCCCC"> end wiki and that web version has</font>

25
00:01:33,030 --> 00:01:40,700
some some some<font color="#E5E5E5"> more information</font><font color="#CCCCCC"> more</font>

26
00:01:35,520 --> 00:01:44,100
details and also covers other steps so

27
00:01:40,700 --> 00:01:47,250
maybe you really want to go<font color="#E5E5E5"> to that page</font>

28
00:01:44,100 --> 00:01:49,169
<font color="#E5E5E5">and try some things yourself</font><font color="#CCCCCC"> and if you</font>

29
00:01:47,250 --> 00:01:52,079
want to really try something you need

30
00:01:49,170 --> 00:01:54,270
some<font color="#E5E5E5"> software</font><font color="#CCCCCC"> to be installed</font><font color="#E5E5E5"> so</font>

31
00:01:52,079 --> 00:01:56,100
primarily<font color="#CCCCCC"> it's it's being that's all</font>

32
00:01:54,270 --> 00:01:59,880
it's about and then there<font color="#E5E5E5"> are other</font>

33
00:01:56,100 --> 00:02:02,298
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> tools that you probably want</font>

34
00:01:59,880 --> 00:02:07,500
to<font color="#E5E5E5"> make things happen</font>

35
00:02:02,299 --> 00:02:09,130
primarily it is<font color="#CCCCCC"> with</font><font color="#E5E5E5"> XML</font><font color="#CCCCCC"> to library</font><font color="#E5E5E5"> with</font>

36
00:02:07,500 --> 00:02:13,610
its tools

37
00:02:09,130 --> 00:02:17,750
this package<font color="#E5E5E5"> is mostly part of base</font>

38
00:02:13,610 --> 00:02:21,170
operating systems<font color="#E5E5E5"> or it can be</font><font color="#CCCCCC"> easily</font>

39
00:02:17,750 --> 00:02:26,960
<font color="#E5E5E5">installed and then there are some</font>

40
00:02:21,170 --> 00:02:30,170
optional parts<font color="#CCCCCC"> I recommend to</font><font color="#E5E5E5"> use Java</font>

41
00:02:26,960 --> 00:02:33,530
based<font color="#E5E5E5"> tools Jing and Trang written by</font>

42
00:02:30,170 --> 00:02:37,850
James Clark<font color="#E5E5E5"> and you can download them</font>

43
00:02:33,530 --> 00:02:40,280
from that<font color="#E5E5E5"> URL and of course you need a</font>

44
00:02:37,850 --> 00:02:45,079
<font color="#CCCCCC">good editor too especially if you</font><font color="#E5E5E5"> want</font>

45
00:02:40,280 --> 00:02:48,440
to edit<font color="#CCCCCC"> xml then I would although I must</font>

46
00:02:45,080 --> 00:02:52,220
admit<font color="#E5E5E5"> I</font><font color="#CCCCCC"> am biased</font><font color="#E5E5E5"> being an MX user for</font>

47
00:02:48,440 --> 00:02:55,040
the last 25 years<font color="#E5E5E5"> maybe but really</font>

48
00:02:52,220 --> 00:02:58,400
believe me<font color="#CCCCCC"> I think that</font><font color="#E5E5E5"> at least in the</font>

49
00:02:55,040 --> 00:03:02,709
<font color="#E5E5E5">open source area and especially for</font>

50
00:02:58,400 --> 00:03:05,150
editing<font color="#E5E5E5"> XML</font><font color="#CCCCCC"> Emacs is by far the best</font>

51
00:03:02,710 --> 00:03:07,550
tool you<font color="#E5E5E5"> can get there are other</font>

52
00:03:05,150 --> 00:03:12,560
commercial editors like<font color="#E5E5E5"> oxygen that</font>

53
00:03:07,550 --> 00:03:15,470
might be<font color="#CCCCCC"> helpful as well but I have not</font>

54
00:03:12,560 --> 00:03:18,950
used<font color="#CCCCCC"> them so I can only</font><font color="#E5E5E5"> talk about in X</font>

55
00:03:15,470 --> 00:03:24,850
essentially<font color="#E5E5E5"> and because I am a Mac user</font>

56
00:03:18,950 --> 00:03:24,850
I use<font color="#CCCCCC"> comics on OS X</font><font color="#E5E5E5"> which works fine</font>

57
00:03:25,180 --> 00:03:29,390
<font color="#CCCCCC">alright</font>

58
00:03:26,450 --> 00:03:30,980
yes<font color="#E5E5E5"> just a quick comment</font><font color="#CCCCCC"> there's a</font>

59
00:03:29,390 --> 00:03:34,369
number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> projects coming on</font>

60
00:03:30,980 --> 00:03:37,190
to do WYSIWYG sort of young editors<font color="#CCCCCC"> web</font>

61
00:03:34,370 --> 00:03:39,320
<font color="#E5E5E5">based and also Eclipse plugins and</font>

62
00:03:37,190 --> 00:03:41,209
things<font color="#CCCCCC"> like that</font><font color="#E5E5E5"> we should</font><font color="#CCCCCC"> collect these</font>

63
00:03:39,320 --> 00:03:44,450
together and<font color="#E5E5E5"> have them posted I may be</font>

64
00:03:41,209 --> 00:03:49,000
young again<font color="#CCCCCC"> central or something yes of</font>

65
00:03:44,450 --> 00:03:53,560
<font color="#E5E5E5">course about I'm sort of hardcore</font>

66
00:03:49,000 --> 00:03:56,390
<font color="#E5E5E5">old-fashioned UNIX users so we</font><font color="#CCCCCC"> prefer</font><font color="#E5E5E5"> to</font>

67
00:03:53,560 --> 00:03:57,560
<font color="#CCCCCC">know tools</font><font color="#E5E5E5"> so that's a good point I've</font>

68
00:03:56,390 --> 00:04:01,220
been trying we've been on a couple<font color="#CCCCCC"> of</font>

69
00:03:57,560 --> 00:04:02,750
tools to yangsun trouble<font color="#E5E5E5"> so we really</font>

70
00:04:01,220 --> 00:04:05,060
want<font color="#CCCCCC"> to collect all</font><font color="#E5E5E5"> of these</font><font color="#CCCCCC"> you've got</font>

71
00:04:02,750 --> 00:04:06,830
the question<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> time so there are</font>

72
00:04:05,060 --> 00:04:10,310
tools<font color="#CCCCCC"> to</font><font color="#E5E5E5"> produce young mothers but also</font>

73
00:04:06,830 --> 00:04:13,690
<font color="#CCCCCC">libraries so if you know of of any that</font>

74
00:04:10,310 --> 00:04:17,800
are not on<font color="#E5E5E5"> the yang central let us know</font>

75
00:04:13,690 --> 00:04:17,800
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> a right for</font><font color="#E5E5E5"> everybody right</font>

76
00:04:19,190 --> 00:04:25,410
now a few works about her<font color="#CCCCCC"> peeing peeing</font>

77
00:04:22,350 --> 00:04:29,580
<font color="#CCCCCC">is an</font><font color="#E5E5E5"> open source to working in in</font>

78
00:04:25,410 --> 00:04:32,340
peyten<font color="#E5E5E5"> most of it was written by Martin</font>

79
00:04:29,580 --> 00:04:37,770
<font color="#CCCCCC">miracle with contributions from</font><font color="#E5E5E5"> myself</font>

80
00:04:32,340 --> 00:04:44,669
<font color="#E5E5E5">and a few other people and for</font><font color="#CCCCCC"> some for</font>

81
00:04:37,770 --> 00:04:46,680
some<font color="#E5E5E5"> steps</font><font color="#CCCCCC"> and it's some accessibility</font>

82
00:04:44,670 --> 00:04:50,490
<font color="#CCCCCC">stylesheets</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example are part of</font>

83
00:04:46,680 --> 00:04:54,900
being<font color="#CCCCCC"> p.m. distribution</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> but you also</font>

84
00:04:50,490 --> 00:04:58,830
want to<font color="#E5E5E5"> use this XSLT processor and some</font>

85
00:04:54,900 --> 00:05:03,890
some tools are also written in<font color="#CCCCCC"> shell</font>

86
00:04:58,830 --> 00:05:07,680
<font color="#CCCCCC">scripts so Pyong is written in in</font><font color="#E5E5E5"> Titan</font>

87
00:05:03,890 --> 00:05:11,909
<font color="#E5E5E5">we have been trying</font><font color="#CCCCCC"> to support</font><font color="#E5E5E5"> both</font>

88
00:05:07,680 --> 00:05:16,050
Titan<font color="#E5E5E5"> 2 and Titan 3 versions and</font><font color="#CCCCCC"> it's</font>

89
00:05:11,910 --> 00:05:20,180
really painful<font color="#CCCCCC"> I can tell you especially</font>

90
00:05:16,050 --> 00:05:24,419
<font color="#CCCCCC">because we also</font><font color="#E5E5E5"> want to support older</font>

91
00:05:20,180 --> 00:05:26,520
<font color="#CCCCCC">python 2</font><font color="#E5E5E5"> versions and it's becoming more</font>

92
00:05:24,419 --> 00:05:29,150
and<font color="#CCCCCC"> more complicated</font><font color="#E5E5E5"> and I</font><font color="#CCCCCC"> don't like</font>

93
00:05:26,520 --> 00:05:32,180
this part<font color="#E5E5E5"> actually very much anyway</font>

94
00:05:29,150 --> 00:05:37,280
<font color="#E5E5E5">theoretically you should be able to use</font>

95
00:05:32,180 --> 00:05:41,450
<font color="#E5E5E5">paying with both fighting</font><font color="#CCCCCC"> - and Python 3</font>

96
00:05:37,280 --> 00:05:44,159
peeing is extensible via plugins<font color="#CCCCCC"> a</font>

97
00:05:41,450 --> 00:05:46,409
number of plugins is already available

98
00:05:44,160 --> 00:05:49,740
and you can<font color="#E5E5E5"> write</font><font color="#CCCCCC"> your own</font><font color="#E5E5E5"> plugins if</font>

99
00:05:46,410 --> 00:05:52,380
you want and I think<font color="#E5E5E5"> as a part of the</font>

100
00:05:49,740 --> 00:05:56,310
hackathon maybe some new plugins have

101
00:05:52,380 --> 00:05:59,130
been written<font color="#E5E5E5"> I don't know and so this is</font>

102
00:05:56,310 --> 00:06:01,620
quite<font color="#E5E5E5"> useful and I will show you a</font>

103
00:05:59,130 --> 00:06:05,640
selection of the plugins<font color="#E5E5E5"> that are</font>

104
00:06:01,620 --> 00:06:08,400
<font color="#E5E5E5">available now and that are</font><font color="#CCCCCC"> part of PM</font>

105
00:06:05,640 --> 00:06:11,000
distribution being<font color="#E5E5E5"> is under active</font>

106
00:06:08,400 --> 00:06:11,000
<font color="#E5E5E5">development</font>

107
00:06:11,660 --> 00:06:18,450
<font color="#CCCCCC">fortunately the last</font><font color="#E5E5E5"> stable version is</font>

108
00:06:14,460 --> 00:06:21,780
<font color="#E5E5E5">quite recent so most plugins are already</font>

109
00:06:18,450 --> 00:06:24,479
in<font color="#CCCCCC"> that stable</font><font color="#E5E5E5"> version otherwise usually</font>

110
00:06:21,780 --> 00:06:30,229
you can get the most recent plugins<font color="#E5E5E5"> bug</font>

111
00:06:24,480 --> 00:06:34,230
fixes<font color="#CCCCCC"> and so on from the github page</font>

112
00:06:30,230 --> 00:06:40,350
can question is<font color="#E5E5E5"> that stable version</font>

113
00:06:34,230 --> 00:06:43,560
using a<font color="#CCCCCC"> gang 1.1</font><font color="#E5E5E5"> yet no we have we have</font>

114
00:06:40,350 --> 00:06:48,110
a branch on github which<font color="#E5E5E5"> is which is</font>

115
00:06:43,560 --> 00:06:51,510
<font color="#E5E5E5">supposed to contain</font><font color="#CCCCCC"> yang</font><font color="#E5E5E5"> 1.1 changes but</font>

116
00:06:48,110 --> 00:06:54,450
it's it's<font color="#E5E5E5"> not very comprehensive so far</font>

117
00:06:51,510 --> 00:06:58,469
so you<font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> expect really to validate</font>

118
00:06:54,450 --> 00:07:00,180
<font color="#E5E5E5">in one I think</font><font color="#CCCCCC"> that again</font><font color="#E5E5E5"> I want that</font>

119
00:06:58,470 --> 00:07:02,520
one<font color="#E5E5E5"> branch already and I was so the</font>

120
00:07:00,180 --> 00:07:04,590
follow-up<font color="#CCCCCC"> question is to</font><font color="#E5E5E5"> know when that</font>

121
00:07:02,520 --> 00:07:06,620
<font color="#E5E5E5">branch might more like when would it</font>

122
00:07:04,590 --> 00:07:09,320
<font color="#E5E5E5">become comprehensive enough because as a</font>

123
00:07:06,620 --> 00:07:12,690
draft<font color="#E5E5E5"> author I'm having issues</font>

124
00:07:09,320 --> 00:07:15,060
<font color="#E5E5E5">validating my documents and Benoit is</font>

125
00:07:12,690 --> 00:07:18,140
<font color="#CCCCCC">you know a place runs you know</font>

126
00:07:15,060 --> 00:07:20,730
evaluation<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> all mine are failing</font>

127
00:07:18,140 --> 00:07:23,370
<font color="#E5E5E5">but only because that</font><font color="#CCCCCC"> are using yang</font>

128
00:07:20,730 --> 00:07:25,470
<font color="#E5E5E5">window</font><font color="#CCCCCC"> on yes I know that's a</font>

129
00:07:23,370 --> 00:07:28,380
shortcoming but<font color="#E5E5E5"> we have to discuss this</font>

130
00:07:25,470 --> 00:07:31,170
with<font color="#CCCCCC"> Martin</font><font color="#E5E5E5"> and of course it's it's open</font>

131
00:07:28,380 --> 00:07:34,140
source<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> just have</font><font color="#E5E5E5"> other things to</font>

132
00:07:31,170 --> 00:07:36,750
do and<font color="#E5E5E5"> but of course we're going to do</font>

133
00:07:34,140 --> 00:07:43,760
that<font color="#CCCCCC"> part as well as soon as possible</font>

134
00:07:36,750 --> 00:07:46,770
but depends on many things<font color="#E5E5E5"> actually</font>

135
00:07:43,760 --> 00:07:51,659
<font color="#E5E5E5">anyway</font><font color="#CCCCCC"> the last table version is one</font>

136
00:07:46,770 --> 00:07:55,650
<font color="#CCCCCC">point six you have</font><font color="#E5E5E5"> discovered a buck</font><font color="#CCCCCC"> so</font>

137
00:07:51,660 --> 00:08:00,710
that you cannot use<font color="#CCCCCC"> unicode as</font><font color="#E5E5E5"> part of</font>

138
00:07:55,650 --> 00:08:03,390
all this I mean non ASCII characters

139
00:08:00,710 --> 00:08:09,960
currently so probably there will soon be

140
00:08:03,390 --> 00:08:15,260
a 1.6 1.1 version<font color="#E5E5E5"> but anyway this new</font>

141
00:08:09,960 --> 00:08:23,760
<font color="#E5E5E5">version is installable via the standard</font>

142
00:08:15,260 --> 00:08:25,650
<font color="#CCCCCC">titan packaging tool tip and if you if</font>

143
00:08:23,760 --> 00:08:28,380
you have an older version<font color="#CCCCCC"> I would</font>

144
00:08:25,650 --> 00:08:30,719
<font color="#E5E5E5">recommend you</font><font color="#CCCCCC"> to install that this</font><font color="#E5E5E5"> new</font>

145
00:08:28,380 --> 00:08:36,710
version<font color="#E5E5E5"> because it has other nice</font>

146
00:08:30,720 --> 00:08:40,440
features like bash completion and so on

147
00:08:36,710 --> 00:08:42,510
<font color="#E5E5E5">UNIX manual pages are part of</font><font color="#CCCCCC"> PM</font>

148
00:08:40,440 --> 00:08:47,220
distribution so<font color="#E5E5E5"> you can find</font>

149
00:08:42,510 --> 00:08:49,589
most information<font color="#E5E5E5"> about command line or</font>

150
00:08:47,220 --> 00:08:52,260
<font color="#E5E5E5">all information about command line</font>

151
00:08:49,589 --> 00:08:55,949
parameters from those<font color="#CCCCCC"> men you</font><font color="#E5E5E5"> apply</font>

152
00:08:52,260 --> 00:08:59,010
pages<font color="#CCCCCC"> so in particular those tool tools</font>

153
00:08:55,949 --> 00:09:06,139
<font color="#E5E5E5">that I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> cover are described</font><font color="#CCCCCC"> in</font>

154
00:08:59,010 --> 00:09:09,630
manual pages so here is a selection of

155
00:09:06,139 --> 00:09:13,199
interesting plugins that are part of

156
00:09:09,630 --> 00:09:17,610
<font color="#CCCCCC">Penn distribution most of them</font><font color="#E5E5E5"> just</font>

157
00:09:13,199 --> 00:09:20,189
<font color="#CCCCCC">produce a specific</font><font color="#E5E5E5"> output and these</font>

158
00:09:17,610 --> 00:09:25,949
plugins<font color="#E5E5E5"> these output plugins are</font>

159
00:09:20,190 --> 00:09:29,850
selected<font color="#CCCCCC"> via the dash F command line</font>

160
00:09:25,949 --> 00:09:35,880
switch and each of the plugins usually

161
00:09:29,850 --> 00:09:42,209
has a number of<font color="#E5E5E5"> its specific command</font>

162
00:09:35,880 --> 00:09:44,160
line parameters and options<font color="#E5E5E5"> so idea of</font>

163
00:09:42,209 --> 00:09:47,849
draft points point of view let's say<font color="#E5E5E5"> fan</font>

164
00:09:44,160 --> 00:09:50,100
you know new to writing<font color="#E5E5E5"> a draft which</font>

165
00:09:47,850 --> 00:09:52,199
<font color="#CCCCCC">are all the tools that</font><font color="#E5E5E5"> too much too much</font>

166
00:09:50,100 --> 00:09:55,230
<font color="#CCCCCC">of information I'm trying to see what</font><font color="#E5E5E5"> is</font>

167
00:09:52,199 --> 00:09:57,269
the most<font color="#E5E5E5"> learned information</font><font color="#CCCCCC"> what I am</font>

168
00:09:55,230 --> 00:10:00,260
going<font color="#CCCCCC"> to cover really</font><font color="#E5E5E5"> the basic steps</font>

169
00:09:57,269 --> 00:10:04,139
you you want<font color="#E5E5E5"> to do with such such</font>

170
00:10:00,260 --> 00:10:06,510
internet or with such a<font color="#E5E5E5"> yang</font><font color="#CCCCCC"> module</font>

171
00:10:04,139 --> 00:10:09,990
this is just for for information for you

172
00:10:06,510 --> 00:10:12,540
to see what you can do with the angle

173
00:10:09,990 --> 00:10:15,510
<font color="#CCCCCC">route kind of different outputs you can</font>

174
00:10:12,540 --> 00:10:17,730
<font color="#E5E5E5">generate so I'm not going</font><font color="#CCCCCC"> to I'm not</font>

175
00:10:15,510 --> 00:10:20,490
complaining<font color="#E5E5E5"> about this I'm trying</font><font color="#CCCCCC"> to you</font>

176
00:10:17,730 --> 00:10:22,260
know see which is<font color="#E5E5E5"> more alluring for me</font>

177
00:10:20,490 --> 00:10:23,880
from<font color="#E5E5E5"> my point of view I think that you</font>

178
00:10:22,260 --> 00:10:25,439
will be<font color="#CCCCCC"> I go to see it in</font><font color="#E5E5E5"> in the</font>

179
00:10:23,880 --> 00:10:28,949
<font color="#E5E5E5">following slides probably what you</font>

180
00:10:25,440 --> 00:10:31,500
really wants to do<font color="#E5E5E5"> but anyway</font><font color="#CCCCCC"> so I don't</font>

181
00:10:28,949 --> 00:10:34,709
know whether<font color="#CCCCCC"> Carl</font><font color="#E5E5E5"> covered the fact</font><font color="#CCCCCC"> that</font>

182
00:10:31,500 --> 00:10:38,819
we also have an xml-based syntax for for

183
00:10:34,709 --> 00:10:42,989
yang modules<font color="#CCCCCC"> no you didn't so I'm going</font>

184
00:10:38,819 --> 00:10:45,389
to<font color="#E5E5E5"> tell you that what all those curly</font>

185
00:10:42,990 --> 00:10:50,630
braces<font color="#E5E5E5"> and so on they are</font><font color="#CCCCCC"> they so called</font>

186
00:10:45,389 --> 00:10:54,750
<font color="#CCCCCC">the yang syntax but you can also</font><font color="#E5E5E5"> use an</font>

187
00:10:50,630 --> 00:10:55,889
alternative and equivalent<font color="#CCCCCC"> XML based</font>

188
00:10:54,750 --> 00:10:59,850
syntax which is

189
00:10:55,889 --> 00:11:05,899
in and so<font color="#E5E5E5"> two plugins to output begins</font>

190
00:10:59,850 --> 00:11:10,829
<font color="#CCCCCC">NPN just convert between each other</font><font color="#E5E5E5"> then</font>

191
00:11:05,899 --> 00:11:13,009
<font color="#E5E5E5">you can generate this dog schemas</font><font color="#CCCCCC"> and I</font>

192
00:11:10,829 --> 00:11:17,128
will talk<font color="#CCCCCC"> about that</font><font color="#E5E5E5"> later</font>

193
00:11:13,009 --> 00:11:19,679
actually this is now not current

194
00:11:17,129 --> 00:11:26,040
information<font color="#CCCCCC"> and the access</font><font color="#E5E5E5"> debugging has</font>

195
00:11:19,679 --> 00:11:28,529
been<font color="#E5E5E5"> removed from version 1.6 because it</font>

196
00:11:26,040 --> 00:11:30,629
was it has been incomplete<font color="#CCCCCC"> and</font>

197
00:11:28,529 --> 00:11:33,149
deprecated for a long time and<font color="#E5E5E5"> people</font>

198
00:11:30,629 --> 00:11:35,699
<font color="#CCCCCC">just got confused although they asked</font>

199
00:11:33,149 --> 00:11:38,790
<font color="#E5E5E5">users that want to use access</font><font color="#CCCCCC"> D for some</font>

200
00:11:35,699 --> 00:11:43,079
strange reason but it's not available<font color="#E5E5E5"> in</font>

201
00:11:38,790 --> 00:11:45,868
<font color="#CCCCCC">NPN anymore tree</font><font color="#E5E5E5"> plug-in is very useful</font>

202
00:11:43,079 --> 00:11:49,439
I will talk<font color="#CCCCCC"> about that</font><font color="#E5E5E5"> later then there</font>

203
00:11:45,869 --> 00:11:52,739
are some plugins for producing UML stuff

204
00:11:49,439 --> 00:11:56,519
and there is another even<font color="#CCCCCC"> more special</font>

205
00:11:52,739 --> 00:12:00,179
plug-in that can used<font color="#CCCCCC"> B output then can</font>

206
00:11:56,519 --> 00:12:03,509
be used<font color="#CCCCCC"> as</font><font color="#E5E5E5"> input</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> a software which is</font>

207
00:12:00,179 --> 00:12:09,689
<font color="#CCCCCC">called</font><font color="#E5E5E5"> OmniGraffle for it's only for for</font>

208
00:12:03,509 --> 00:12:11,850
Mac and iPad<font color="#CCCCCC"> users what apparently</font><font color="#E5E5E5"> it</font>

209
00:12:09,689 --> 00:12:14,419
produces<font color="#CCCCCC"> very nice picture so it might</font>

210
00:12:11,850 --> 00:12:18,509
<font color="#E5E5E5">be interesting</font><font color="#CCCCCC"> to know about</font><font color="#E5E5E5"> that and</font>

211
00:12:14,419 --> 00:12:30,439
then there<font color="#E5E5E5"> are some other plugins for</font>

212
00:12:18,509 --> 00:12:34,679
producing HTML input for browsers

213
00:12:30,439 --> 00:12:38,730
different<font color="#CCCCCC"> thought J's</font><font color="#E5E5E5"> tree and height of</font>

214
00:12:34,679 --> 00:12:41,939
<font color="#CCCCCC">tree and then there are plugins that</font>

215
00:12:38,730 --> 00:12:46,649
<font color="#CCCCCC">allow for converting between XML and</font>

216
00:12:41,939 --> 00:12:49,439
JSON encoding of instance documents<font color="#CCCCCC"> I</font>

217
00:12:46,649 --> 00:12:52,199
will also<font color="#CCCCCC"> briefly mentioned Alice's done</font>

218
00:12:49,439 --> 00:12:58,099
<font color="#CCCCCC">and then there is also another</font>

219
00:12:52,199 --> 00:12:58,099
relatively new plug-in<font color="#E5E5E5"> that enables</font>

220
00:12:58,160 --> 00:13:09,029
<font color="#CCCCCC">German generation of sample instance</font>

221
00:13:02,269 --> 00:13:09,810
<font color="#E5E5E5">documents in XML so much stuff maybe</font>

222
00:13:09,029 --> 00:13:13,620
<font color="#E5E5E5">some more</font>

223
00:13:09,810 --> 00:13:17,779
bodies are those<font color="#CCCCCC"> data</font><font color="#E5E5E5"> in my opinion the</font>

224
00:13:13,620 --> 00:13:17,779
<font color="#E5E5E5">most interesting and important</font>

225
00:13:18,290 --> 00:13:24,779
well<font color="#E5E5E5"> ITF is just command lines which</font>

226
00:13:21,509 --> 00:13:31,499
isn't<font color="#E5E5E5"> it so it depends yeah I I will I</font>

227
00:13:24,779 --> 00:13:34,110
will actually mention that so first<font color="#CCCCCC"> of</font>

228
00:13:31,499 --> 00:13:39,660
all<font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to have some editor</font><font color="#E5E5E5"> to</font>

229
00:13:34,110 --> 00:13:43,499
produce<font color="#E5E5E5"> yang module as I told you I'm a</font>

230
00:13:39,660 --> 00:13:46,680
<font color="#CCCCCC">Mac user</font><font color="#E5E5E5"> I don't want to get into some</font>

231
00:13:43,499 --> 00:13:51,240
religious wars<font color="#E5E5E5"> but</font><font color="#CCCCCC"> let me just mention</font>

232
00:13:46,680 --> 00:13:54,839
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> you can also use VI or win</font>

233
00:13:51,240 --> 00:14:04,350
<font color="#E5E5E5">using syntax file that's available from</font>

234
00:13:54,839 --> 00:14:07,889
<font color="#E5E5E5">that URL but as I said Emacs has very</font>

235
00:14:04,350 --> 00:14:11,910
advanced<font color="#E5E5E5"> and XML mode that enables</font>

236
00:14:07,889 --> 00:14:16,290
editing<font color="#E5E5E5"> XML in in a</font><font color="#CCCCCC"> very efficient and</font>

237
00:14:11,910 --> 00:14:20,519
<font color="#E5E5E5">user-friendly way so in fact all my yang</font>

238
00:14:16,290 --> 00:14:25,459
mode use I have<font color="#CCCCCC"> written so far almost</font><font color="#E5E5E5"> I</font>

239
00:14:20,519 --> 00:14:30,629
write them as XML in the in syntax and

240
00:14:25,459 --> 00:14:33,329
then I convert them<font color="#CCCCCC"> to the yang syntax</font>

241
00:14:30,629 --> 00:14:33,930
for publishing internet draft<font color="#E5E5E5"> of</font>

242
00:14:33,329 --> 00:14:35,969
<font color="#CCCCCC">Costco's</font>

243
00:14:33,930 --> 00:14:40,258
that's more readable but the source

244
00:14:35,970 --> 00:14:42,990
format<font color="#E5E5E5"> for me is XML some people think</font>

245
00:14:40,259 --> 00:14:45,779
<font color="#E5E5E5">that this is a bit</font><font color="#CCCCCC"> weird so I'm</font><font color="#E5E5E5"> not</font>

246
00:14:42,990 --> 00:14:48,120
<font color="#CCCCCC">going to recommend</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> to you in any</font><font color="#E5E5E5"> way</font>

247
00:14:45,779 --> 00:14:51,870
<font color="#CCCCCC">but if you are</font><font color="#E5E5E5"> interested in that</font><font color="#CCCCCC"> there</font>

248
00:14:48,120 --> 00:14:55,199
<font color="#CCCCCC">is some H wiki page I</font><font color="#E5E5E5"> wrote that gives</font>

249
00:14:51,870 --> 00:15:01,500
you some background<font color="#CCCCCC"> and some reasons why</font>

250
00:14:55,199 --> 00:15:04,139
I'm doing this<font color="#CCCCCC"> strength</font><font color="#E5E5E5"> thing and of</font>

251
00:15:01,500 --> 00:15:09,569
course we need a<font color="#CCCCCC"> real-life example as</font>

252
00:15:04,139 --> 00:15:13,079
<font color="#E5E5E5">Skaro hat mpls so I chose and this is</font>

253
00:15:09,569 --> 00:15:16,290
also<font color="#E5E5E5"> in the web version of this tutorial</font>

254
00:15:13,079 --> 00:15:22,138
I chose Turing machine that we all know

255
00:15:16,290 --> 00:15:23,189
and love<font color="#CCCCCC"> and these young modules are</font>

256
00:15:22,139 --> 00:15:26,670
<font color="#E5E5E5">also</font>

257
00:15:23,190 --> 00:15:32,360
in<font color="#E5E5E5"> PNG distribution in</font><font color="#CCCCCC"> that directory</font>

258
00:15:26,670 --> 00:15:35,099
<font color="#CCCCCC">and for those who are really into fun</font>

259
00:15:32,360 --> 00:15:38,040
<font color="#CCCCCC">there are the crate he wrote Turing</font>

260
00:15:35,100 --> 00:15:42,089
machines<font color="#E5E5E5"> simulator</font><font color="#CCCCCC"> that can be managed</font>

261
00:15:38,040 --> 00:15:44,399
by a net confusing<font color="#E5E5E5"> these this beta model</font>

262
00:15:42,089 --> 00:15:48,300
<font color="#E5E5E5">I think</font><font color="#CCCCCC"> it's quite interestingly we used</font>

263
00:15:44,399 --> 00:15:52,860
it<font color="#CCCCCC"> in another tutorials</font><font color="#E5E5E5"> somewhere and I</font>

264
00:15:48,300 --> 00:15:57,899
<font color="#E5E5E5">think it was really quite useful</font><font color="#CCCCCC"> so this</font>

265
00:15:52,860 --> 00:16:00,629
is<font color="#E5E5E5"> an URL where</font><font color="#CCCCCC"> you can find that</font><font color="#E5E5E5"> Turing</font>

266
00:15:57,899 --> 00:16:06,060
machine simulator<font color="#CCCCCC"> written in</font><font color="#E5E5E5"> C</font><font color="#CCCCCC"> and using</font>

267
00:16:00,629 --> 00:16:12,000
some net conf libraries that you also

268
00:16:06,060 --> 00:16:13,859
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> install anyway so here are the</font>

269
00:16:12,000 --> 00:16:19,339
very essential steps that probably

270
00:16:13,860 --> 00:16:19,339
everybody has to do before publishing

271
00:16:19,639 --> 00:16:27,060
<font color="#CCCCCC">yang module in an</font><font color="#E5E5E5"> internal draft</font><font color="#CCCCCC"> so</font>

272
00:16:23,250 --> 00:16:29,100
first of all you have<font color="#CCCCCC"> to check the yang</font>

273
00:16:27,060 --> 00:16:33,619
module for for correctly<font color="#E5E5E5"> this is done</font>

274
00:16:29,100 --> 00:16:37,160
easily by<font color="#CCCCCC"> using PN without any other</font>

275
00:16:33,620 --> 00:16:43,139
command-line options just<font color="#E5E5E5"> like that and</font>

276
00:16:37,160 --> 00:16:45,180
if this<font color="#E5E5E5"> check reveals any any errors</font>

277
00:16:43,139 --> 00:16:47,180
problem then you have to go back to the

278
00:16:45,180 --> 00:16:50,638
editor<font color="#CCCCCC"> and correct them of course</font>

279
00:16:47,180 --> 00:16:53,160
<font color="#E5E5E5">otherwise then you can move further and</font>

280
00:16:50,639 --> 00:16:55,199
then use that<font color="#E5E5E5"> so I don't</font><font color="#CCCCCC"> know if you</font>

281
00:16:53,160 --> 00:17:01,639
want to<font color="#E5E5E5"> call it a plug-in or something</font>

282
00:16:55,199 --> 00:17:08,149
but it it<font color="#CCCCCC"> you meant like producing the</font>

283
00:17:01,639 --> 00:17:08,150
the canonical<font color="#E5E5E5"> ordering of as the plugin</font>

284
00:17:08,809 --> 00:17:17,089
<font color="#CCCCCC">okay alright so anyway just terminology</font>

285
00:17:22,619 --> 00:17:28,419
right yes<font color="#E5E5E5"> my point</font><font color="#CCCCCC"> was that plugins</font><font color="#E5E5E5"> can</font>

286
00:17:26,410 --> 00:17:29,710
do more<font color="#E5E5E5"> than just output translation</font>

287
00:17:28,420 --> 00:17:34,540
they can add<font color="#CCCCCC"> command line parameters</font>

288
00:17:29,710 --> 00:17:39,060
they can do<font color="#CCCCCC"> validation and so on okay so</font>

289
00:17:34,540 --> 00:17:44,409
in any case<font color="#E5E5E5"> if you use that - -</font><font color="#CCCCCC"> IETF</font>

290
00:17:39,060 --> 00:17:46,659
option stricter<font color="#E5E5E5"> strict rules will be</font>

291
00:17:44,410 --> 00:17:49,780
used<font color="#E5E5E5"> for checking your module so in</font>

292
00:17:46,660 --> 00:17:52,000
particular<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to have your your</font>

293
00:17:49,780 --> 00:17:56,980
yang statements<font color="#E5E5E5"> in a very particular</font>

294
00:17:52,000 --> 00:17:59,770
order that's<font color="#E5E5E5"> defined in RFC 6020 and in</font>

295
00:17:56,980 --> 00:18:04,510
the internet<font color="#CCCCCC"> graph that defines the Eng</font>

296
00:17:59,770 --> 00:18:10,660
1.1 and other things<font color="#E5E5E5"> that are not needed</font>

297
00:18:04,510 --> 00:18:15,430
<font color="#E5E5E5">in general but it is</font><font color="#CCCCCC"> required because of</font>

298
00:18:10,660 --> 00:18:19,920
<font color="#CCCCCC">the rules from RFC 687 that essentially</font>

299
00:18:15,430 --> 00:18:23,950
this check with that<font color="#CCCCCC"> does dies - ITF</font>

300
00:18:19,920 --> 00:18:26,380
<font color="#E5E5E5">will not show any errors and so please</font>

301
00:18:23,950 --> 00:18:34,710
do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> you publish your draft</font>

302
00:18:26,380 --> 00:18:39,700
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then of course</font><font color="#E5E5E5"> if you want to</font><font color="#CCCCCC"> see</font>

303
00:18:34,710 --> 00:18:41,920
what the beta model looks like<font color="#E5E5E5"> and also</font>

304
00:18:39,700 --> 00:18:44,560
<font color="#E5E5E5">this is an information that should be</font>

305
00:18:41,920 --> 00:18:48,070
<font color="#E5E5E5">included in in an internet draft because</font>

306
00:18:44,560 --> 00:18:51,760
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> very useful</font><font color="#E5E5E5"> as an overview of a</font>

307
00:18:48,070 --> 00:18:55,780
beta model content it's very useful<font color="#CCCCCC"> to</font>

308
00:18:51,760 --> 00:18:59,290
you that<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> output again that gives you</font>

309
00:18:55,780 --> 00:19:01,060
some<font color="#CCCCCC"> tree based representation</font><font color="#E5E5E5"> of the</font>

310
00:18:59,290 --> 00:19:03,190
<font color="#E5E5E5">data model</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will show you how it looks</font>

311
00:19:01,060 --> 00:19:07,840
<font color="#E5E5E5">like</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the next slide and</font><font color="#CCCCCC"> Carlo already</font>

312
00:19:03,190 --> 00:19:11,050
had some examples there<font color="#CCCCCC"> are some</font><font color="#E5E5E5"> symbols</font>

313
00:19:07,840 --> 00:19:14,169
used in<font color="#CCCCCC"> that tree view that may need</font>

314
00:19:11,050 --> 00:19:17,710
some<font color="#E5E5E5"> explanation so you can get this by</font>

315
00:19:14,170 --> 00:19:21,930
using that tree help option and if you

316
00:19:17,710 --> 00:19:28,750
if we use it<font color="#CCCCCC"> on that</font><font color="#E5E5E5"> Turing machine</font>

317
00:19:21,930 --> 00:19:31,270
<font color="#E5E5E5">module it will show this output so as</font>

318
00:19:28,750 --> 00:19:33,320
you can<font color="#CCCCCC"> see in the Turing machine data</font>

319
00:19:31,270 --> 00:19:38,340
model we have some

320
00:19:33,320 --> 00:19:42,750
some state<font color="#E5E5E5"> they</font><font color="#CCCCCC"> tell that</font><font color="#E5E5E5"> are marked</font>

321
00:19:38,340 --> 00:19:44,580
with our<font color="#CCCCCC"> oh and it falls essentially the</font>

322
00:19:42,750 --> 00:19:47,670
Turing machine<font color="#E5E5E5"> definition</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we have</font>

323
00:19:44,580 --> 00:19:49,820
state and<font color="#E5E5E5"> the state of the Turing</font>

324
00:19:47,670 --> 00:19:53,280
machine<font color="#CCCCCC"> head position and then</font>

325
00:19:49,820 --> 00:19:57,050
representation of the tape<font color="#CCCCCC"> then we also</font>

326
00:19:53,280 --> 00:20:00,120
have a configuration<font color="#E5E5E5"> that basically</font>

327
00:19:57,050 --> 00:20:04,070
<font color="#E5E5E5">describes the transition function for</font>

328
00:20:00,120 --> 00:20:08,780
the Turing<font color="#CCCCCC"> machine and then we also have</font>

329
00:20:04,070 --> 00:20:12,389
an RPC<font color="#E5E5E5"> for a Turing</font><font color="#CCCCCC"> machine which</font>

330
00:20:08,780 --> 00:20:16,760
enables you to initialize and start the

331
00:20:12,390 --> 00:20:21,120
computation<font color="#E5E5E5"> and the parameter there is</font>

332
00:20:16,760 --> 00:20:24,900
the input<font color="#E5E5E5"> of it means the</font><font color="#CCCCCC"> initial</font>

333
00:20:21,120 --> 00:20:27,929
content of<font color="#CCCCCC"> the tape and there is also</font>

334
00:20:24,900 --> 00:20:31,110
<font color="#E5E5E5">one</font><font color="#CCCCCC"> notification the Turing machine is</font>

335
00:20:27,930 --> 00:20:35,370
supposed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> send this notification as</font>

336
00:20:31,110 --> 00:20:37,919
soon as the computation<font color="#E5E5E5"> holds and if it</font>

337
00:20:35,370 --> 00:20:42,300
also<font color="#E5E5E5"> sends as a</font><font color="#CCCCCC"> parameter the state in</font>

338
00:20:37,920 --> 00:20:46,260
<font color="#E5E5E5">which the Turing machine has ended up</font>

339
00:20:42,300 --> 00:20:50,610
right so the main point of doing this<font color="#E5E5E5"> is</font>

340
00:20:46,260 --> 00:20:53,930
to<font color="#CCCCCC"> have all errors</font><font color="#E5E5E5"> that a young</font><font color="#CCCCCC"> beta</font>

341
00:20:50,610 --> 00:20:58,469
model can cover that<font color="#E5E5E5"> means read only</font>

342
00:20:53,930 --> 00:21:08,520
<font color="#E5E5E5">state data read</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> configuration data</font>

343
00:20:58,470 --> 00:21:10,890
<font color="#CCCCCC">are pcs and notifications if I'm not</font>

344
00:21:08,520 --> 00:21:13,680
<font color="#E5E5E5">mistaken we</font><font color="#CCCCCC"> advised the people who</font>

345
00:21:10,890 --> 00:21:15,810
produce draft to put the<font color="#E5E5E5"> three in the</font>

346
00:21:13,680 --> 00:21:18,270
draft<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> correct yes</font><font color="#CCCCCC"> that's what I</font>

347
00:21:15,810 --> 00:21:23,190
<font color="#E5E5E5">said yeah it's really it's really useful</font>

348
00:21:18,270 --> 00:21:26,910
and if you<font color="#E5E5E5"> that please also include some</font>

349
00:21:23,190 --> 00:21:29,600
explanation of the<font color="#CCCCCC"> tree symbols because</font>

350
00:21:26,910 --> 00:21:33,420
that's useful<font color="#CCCCCC"> you can find some template</font>

351
00:21:29,600 --> 00:21:38,060
for such a section in the existing graph

352
00:21:33,420 --> 00:21:41,780
so just copy and paste this into<font color="#E5E5E5"> your</font>

353
00:21:38,060 --> 00:21:45,350
draft and<font color="#CCCCCC"> tau about</font>

354
00:21:41,780 --> 00:21:47,420
<font color="#E5E5E5">validation so it's also useful if you</font>

355
00:21:45,350 --> 00:21:50,840
include some some example of<font color="#E5E5E5"> a</font>

356
00:21:47,420 --> 00:21:54,020
<font color="#E5E5E5">configuration in</font><font color="#CCCCCC"> your draft</font><font color="#E5E5E5"> and again</font>

357
00:21:50,840 --> 00:21:57,830
it's very<font color="#E5E5E5"> useful if you do include this</font>

358
00:21:54,020 --> 00:21:59,800
<font color="#E5E5E5">this information to have an information</font>

359
00:21:57,830 --> 00:22:02,510
that's correct and<font color="#E5E5E5"> that's valid</font>

360
00:21:59,800 --> 00:22:05,810
unfortunately it happens every once<font color="#E5E5E5"> in a</font>

361
00:22:02,510 --> 00:22:09,350
<font color="#CCCCCC">while that</font><font color="#E5E5E5"> if I try to validate those</font>

362
00:22:05,810 --> 00:22:12,860
<font color="#E5E5E5">examples they just do not are invalid so</font>

363
00:22:09,350 --> 00:22:14,870
this can just confuse people<font color="#E5E5E5"> so again</font>

364
00:22:12,860 --> 00:22:18,530
it's important if you include such

365
00:22:14,870 --> 00:22:23,709
examples to perform validation in

366
00:22:18,530 --> 00:22:28,430
pairing this<font color="#E5E5E5"> validation of instance</font><font color="#CCCCCC"> data</font>

367
00:22:23,710 --> 00:22:31,040
can<font color="#CCCCCC"> be done using or in xml but</font><font color="#E5E5E5"> I will</font>

368
00:22:28,430 --> 00:22:34,130
<font color="#E5E5E5">tell</font><font color="#CCCCCC"> you how to</font><font color="#E5E5E5"> do it Jason</font><font color="#CCCCCC"> as well</font>

369
00:22:31,040 --> 00:22:38,480
later<font color="#CCCCCC"> so it's done</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> so-called</font>

370
00:22:34,130 --> 00:22:41,570
<font color="#CCCCCC">distal schemas</font><font color="#E5E5E5"> and I don't want to go</font>

371
00:22:38,480 --> 00:22:44,960
into<font color="#E5E5E5"> details about this</font><font color="#CCCCCC"> digital</font><font color="#E5E5E5"> family</font>

372
00:22:41,570 --> 00:22:48,320
of schemas<font color="#E5E5E5"> because it requires some</font><font color="#CCCCCC"> XML</font>

373
00:22:44,960 --> 00:22:50,870
<font color="#E5E5E5">background but it's an international</font>

374
00:22:48,320 --> 00:22:59,530
standard<font color="#E5E5E5"> and it's a</font><font color="#CCCCCC"> coordinated set of</font>

375
00:22:50,870 --> 00:23:04,449
schemas<font color="#E5E5E5"> that</font><font color="#CCCCCC"> essentially replace w3c</font>

376
00:22:59,530 --> 00:23:04,450
schema language<font color="#CCCCCC"> and add some more</font>

377
00:23:05,380 --> 00:23:10,610
possibilities<font color="#CCCCCC"> for validating semantics</font>

378
00:23:08,360 --> 00:23:16,000
rules and so on so<font color="#E5E5E5"> we decided</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font>

379
00:23:10,610 --> 00:23:20,389
these schemas<font color="#CCCCCC"> for validating</font><font color="#E5E5E5"> XML</font><font color="#CCCCCC"> and</font>

380
00:23:16,000 --> 00:23:23,690
<font color="#CCCCCC">various</font><font color="#E5E5E5"> standard mapping of young data</font>

381
00:23:20,390 --> 00:23:27,740
models<font color="#E5E5E5"> to business</font><font color="#CCCCCC"> chemos these are</font>

382
00:23:23,690 --> 00:23:30,710
described<font color="#CCCCCC"> in RFC 6110 and the point of</font>

383
00:23:27,740 --> 00:23:36,860
and it's implemented<font color="#CCCCCC"> at</font><font color="#E5E5E5"> peeing peeing in</font>

384
00:23:30,710 --> 00:23:39,800
that<font color="#CCCCCC"> bsdl plugging and this plugin</font>

385
00:23:36,860 --> 00:23:44,300
<font color="#E5E5E5">actually produces</font><font color="#CCCCCC"> free schemas that are</font>

386
00:23:39,800 --> 00:23:48,580
part of the digital<font color="#E5E5E5"> standard it's relax</font>

387
00:23:44,300 --> 00:23:53,120
ng schema<font color="#E5E5E5"> that's used for</font><font color="#CCCCCC"> checking</font>

388
00:23:48,580 --> 00:23:55,120
grammar<font color="#E5E5E5"> the schema</font><font color="#CCCCCC"> itself and data types</font>

389
00:23:53,120 --> 00:23:58,149
that<font color="#CCCCCC"> Carl talks both</font>

390
00:23:55,120 --> 00:24:01,209
and then another schema is about

391
00:23:58,150 --> 00:24:04,000
semantic constraints<font color="#E5E5E5"> which is schema</font>

392
00:24:01,210 --> 00:24:07,120
<font color="#E5E5E5">Tron another well-known XML schema</font>

393
00:24:04,000 --> 00:24:10,150
language<font color="#CCCCCC"> and then third part</font><font color="#E5E5E5"> that not</font>

394
00:24:07,120 --> 00:24:13,659
<font color="#E5E5E5">that's not very common so far</font><font color="#CCCCCC"> is used</font>

395
00:24:10,150 --> 00:24:16,180
<font color="#E5E5E5">for adding defaults to the instant</font>

396
00:24:13,660 --> 00:24:18,820
document I will<font color="#E5E5E5"> again explain why this</font>

397
00:24:16,180 --> 00:24:23,620
is<font color="#CCCCCC"> necessary and</font><font color="#E5E5E5"> how it works on on the</font>

398
00:24:18,820 --> 00:24:27,389
<font color="#E5E5E5">next slide you</font><font color="#CCCCCC"> can produce</font><font color="#E5E5E5"> all three</font>

399
00:24:23,620 --> 00:24:32,919
schemas<font color="#E5E5E5"> by using that yang to digital</font>

400
00:24:27,390 --> 00:24:36,850
tool this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually a UNIX shell</font>

401
00:24:32,920 --> 00:24:39,040
script and<font color="#E5E5E5"> I wrote it in order to</font>

402
00:24:36,850 --> 00:24:47,949
provide an<font color="#E5E5E5"> example how to use these dis</font>

403
00:24:39,040 --> 00:24:50,470
<font color="#E5E5E5">da schemas in in validating tool in fact</font>

404
00:24:47,950 --> 00:24:52,750
it turns out<font color="#E5E5E5"> that it's useful in and by</font>

405
00:24:50,470 --> 00:24:55,690
itself<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> okay to use</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> for</font>

406
00:24:52,750 --> 00:24:58,870
<font color="#E5E5E5">validating but if you want to write a</font>

407
00:24:55,690 --> 00:25:02,290
tool that also<font color="#E5E5E5"> does some validation</font>

408
00:24:58,870 --> 00:25:05,709
<font color="#E5E5E5">please don't put any execs and calling</font>

409
00:25:02,290 --> 00:25:07,780
shells and and using<font color="#CCCCCC"> this shell</font><font color="#E5E5E5"> script</font>

410
00:25:05,710 --> 00:25:13,660
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not not very good just</font><font color="#E5E5E5"> look into</font>

411
00:25:07,780 --> 00:25:17,350
<font color="#E5E5E5">the shell</font><font color="#CCCCCC"> script and replicate</font><font color="#E5E5E5"> all those</font>

412
00:25:13,660 --> 00:25:19,960
steps<font color="#E5E5E5"> using some library function calls</font>

413
00:25:17,350 --> 00:25:25,120
and and so on<font color="#E5E5E5"> this is for example</font><font color="#CCCCCC"> what's</font>

414
00:25:19,960 --> 00:25:28,480
done in<font color="#CCCCCC"> lipid conf</font><font color="#E5E5E5"> library so this shell</font>

415
00:25:25,120 --> 00:25:33,760
script tool can<font color="#CCCCCC"> be really effectively</font>

416
00:25:28,480 --> 00:25:37,480
used from<font color="#CCCCCC"> a command line like this so we</font>

417
00:25:33,760 --> 00:25:41,410
<font color="#E5E5E5">can produce these</font><font color="#CCCCCC"> free schemas like this</font>

418
00:25:37,480 --> 00:25:43,000
so you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to specify the</font><font color="#CCCCCC"> target</font><font color="#E5E5E5"> but</font>

419
00:25:41,410 --> 00:25:46,120
<font color="#CCCCCC">you</font><font color="#E5E5E5"> want to generate the schemas for</font>

420
00:25:43,000 --> 00:25:49,230
<font color="#E5E5E5">that means in our case we want to</font>

421
00:25:46,120 --> 00:25:52,689
generate<font color="#E5E5E5"> the schema</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> configuration</font>

422
00:25:49,230 --> 00:25:57,040
right<font color="#E5E5E5"> and here you can see the</font><font color="#CCCCCC"> three</font>

423
00:25:52,690 --> 00:26:01,470
schemas are stored<font color="#E5E5E5"> are saved in files</font>

424
00:25:57,040 --> 00:26:01,470
and then I names are here on the right

425
00:26:02,400 --> 00:26:07,390
and so if we generate these schemas we

426
00:26:05,800 --> 00:26:12,470
can use

427
00:26:07,390 --> 00:26:15,200
<font color="#E5E5E5">then for for editing a configuration for</font>

428
00:26:12,470 --> 00:26:19,550
<font color="#E5E5E5">sample example of configuration let's</font>

429
00:26:15,200 --> 00:26:24,230
say but in order<font color="#CCCCCC"> to save some typing we</font>

430
00:26:19,550 --> 00:26:27,470
can<font color="#CCCCCC"> also use another a yang</font><font color="#E5E5E5"> plug-in</font>

431
00:26:24,230 --> 00:26:32,200
which is called sample XML skeleton for

432
00:26:27,470 --> 00:26:35,590
producing a skeleton instance document

433
00:26:32,200 --> 00:26:41,750
which takes the<font color="#E5E5E5"> data model and then puts</font>

434
00:26:35,590 --> 00:26:44,990
an instance instance of every<font color="#E5E5E5"> node</font>

435
00:26:41,750 --> 00:26:49,100
<font color="#E5E5E5">that's found in that data model into the</font>

436
00:26:44,990 --> 00:26:51,170
the XML document<font color="#E5E5E5"> but then</font><font color="#CCCCCC"> this skeleton</font>

437
00:26:49,100 --> 00:26:54,139
the human has to be<font color="#CCCCCC"> edited usually it's</font>

438
00:26:51,170 --> 00:26:59,150
<font color="#E5E5E5">not valid because for</font><font color="#CCCCCC"> example for every</font>

439
00:26:54,140 --> 00:27:01,880
<font color="#E5E5E5">choice that's in the data model</font><font color="#CCCCCC"> you will</font>

440
00:26:59,150 --> 00:27:04,070
have all cases<font color="#CCCCCC"> that are part of the</font>

441
00:27:01,880 --> 00:27:07,450
choice<font color="#E5E5E5"> included in that instance</font>

442
00:27:04,070 --> 00:27:11,210
document<font color="#E5E5E5"> so usually in to remove all</font>

443
00:27:07,450 --> 00:27:13,850
<font color="#E5E5E5">cases but one from the instance document</font>

444
00:27:11,210 --> 00:27:17,300
in<font color="#E5E5E5"> order to make it</font><font color="#CCCCCC"> Valley but anyway</font>

445
00:27:13,850 --> 00:27:22,100
it's just<font color="#E5E5E5"> a technical point if you edit</font>

446
00:27:17,300 --> 00:27:26,090
this sample skeleton you can also use

447
00:27:22,100 --> 00:27:30,230
<font color="#CCCCCC">emacs for example for on the file</font>

448
00:27:26,090 --> 00:27:33,699
validation of this for the an external

449
00:27:30,230 --> 00:27:36,260
mode by the way you need to<font color="#E5E5E5"> convert be</font>

450
00:27:33,700 --> 00:27:38,900
the<font color="#CCCCCC"> relax and G schema to</font><font color="#E5E5E5"> so-called</font>

451
00:27:36,260 --> 00:27:41,300
<font color="#CCCCCC">compact syntax if you want to do that</font>

452
00:27:38,900 --> 00:27:44,330
and then if you load that<font color="#E5E5E5"> into the MX it</font>

453
00:27:41,300 --> 00:27:48,800
will validate the instance document on

454
00:27:44,330 --> 00:27:55,760
the fly using that relax ng schema<font color="#E5E5E5"> and</font>

455
00:27:48,800 --> 00:27:59,840
now we can do all<font color="#E5E5E5"> steps of validating</font>

456
00:27:55,760 --> 00:28:03,950
the instance document using yang<font color="#E5E5E5"> to this</font>

457
00:27:59,840 --> 00:28:10,490
<font color="#E5E5E5">dual script this can be done for our</font>

458
00:28:03,950 --> 00:28:12,440
<font color="#CCCCCC">Turing machine model as follows</font>

459
00:28:10,490 --> 00:28:14,960
so here are<font color="#CCCCCC"> the arrows and</font><font color="#E5E5E5"> the</font>

460
00:28:12,440 --> 00:28:19,400
annotations explain what the

461
00:28:14,960 --> 00:28:23,100
<font color="#E5E5E5">command-line parameters are about so</font>

462
00:28:19,400 --> 00:28:25,920
- as tells the tool to<font color="#E5E5E5"> use the</font><font color="#CCCCCC"> pre</font>

463
00:28:23,100 --> 00:28:29,879
<font color="#CCCCCC">generated schemas</font><font color="#E5E5E5"> rather than generate</font>

464
00:28:25,920 --> 00:28:38,700
them<font color="#E5E5E5"> anew which takes</font><font color="#CCCCCC"> some time then</font>

465
00:28:29,880 --> 00:28:43,050
-<font color="#CCCCCC"> J tells the tool to use that Jing Java</font>

466
00:28:38,700 --> 00:28:48,450
<font color="#CCCCCC">based validator if you don't use this</font><font color="#E5E5E5"> -</font>

467
00:28:43,050 --> 00:28:53,450
<font color="#E5E5E5">J the script uses the usual XML</font><font color="#CCCCCC"> lint</font>

468
00:28:48,450 --> 00:28:57,420
<font color="#CCCCCC">that's part of the</font><font color="#E5E5E5"> lip XML suite</font>

469
00:28:53,450 --> 00:28:59,790
but in my experience<font color="#CCCCCC"> this</font><font color="#E5E5E5"> XML lint it</font>

470
00:28:57,420 --> 00:29:03,210
works<font color="#E5E5E5"> fine but the problem</font><font color="#CCCCCC"> with it</font><font color="#E5E5E5"> is</font>

471
00:28:59,790 --> 00:29:05,340
<font color="#CCCCCC">that it it's error messages are really</font>

472
00:29:03,210 --> 00:29:07,440
<font color="#E5E5E5">horrible</font><font color="#CCCCCC"> and they don't tell you</font>

473
00:29:05,340 --> 00:29:10,139
<font color="#CCCCCC">anything about what's really</font><font color="#E5E5E5"> happening</font>

474
00:29:07,440 --> 00:29:13,320
what's wrong<font color="#E5E5E5"> with the document whereas</font>

475
00:29:10,140 --> 00:29:16,170
<font color="#E5E5E5">Jing is really very</font><font color="#CCCCCC"> very much focused</font>

476
00:29:13,320 --> 00:29:18,659
and tells you exactly what you need<font color="#CCCCCC"> to</font>

477
00:29:16,170 --> 00:29:21,510
<font color="#CCCCCC">change in order to make</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> document</font>

478
00:29:18,660 --> 00:29:26,790
well it's<font color="#CCCCCC"> rare</font><font color="#E5E5E5"> comment</font><font color="#CCCCCC"> using this every</font>

479
00:29:21,510 --> 00:29:29,760
time and then you have to provide<font color="#E5E5E5"> the</font>

480
00:29:26,790 --> 00:29:35,940
base name like the tool needs to<font color="#E5E5E5"> find</font>

481
00:29:29,760 --> 00:29:39,660
<font color="#CCCCCC">beef</font><font color="#E5E5E5"> 3 schema files so you need to give</font>

482
00:29:35,940 --> 00:29:42,780
some some information about the name of

483
00:29:39,660 --> 00:29:47,190
these schema files and then<font color="#E5E5E5"> you provide</font>

484
00:29:42,780 --> 00:29:50,760
<font color="#E5E5E5">an instance XML document that you want</font>

485
00:29:47,190 --> 00:29:53,640
<font color="#E5E5E5">to validate and that's all and you can</font>

486
00:29:50,760 --> 00:29:54,150
<font color="#CCCCCC">see that the</font><font color="#E5E5E5"> validation is</font><font color="#CCCCCC"> done in</font><font color="#E5E5E5"> three</font>

487
00:29:53,640 --> 00:29:57,030
steps

488
00:29:54,150 --> 00:30:03,600
it essentially<font color="#E5E5E5"> means in every step one</font>

489
00:29:57,030 --> 00:30:07,379
<font color="#E5E5E5">of the schemas relax ng</font><font color="#CCCCCC"> DSR L and schema</font>

490
00:30:03,600 --> 00:30:10,050
<font color="#CCCCCC">Tron is used and in this case</font><font color="#E5E5E5"> no errors</font>

491
00:30:07,380 --> 00:30:13,470
are found<font color="#E5E5E5"> if there are some errors in</font>

492
00:30:10,050 --> 00:30:20,940
<font color="#E5E5E5">the document you will</font><font color="#CCCCCC"> see some error</font>

493
00:30:13,470 --> 00:30:25,110
<font color="#CCCCCC">messages that may</font><font color="#E5E5E5"> help you to locate the</font>

494
00:30:20,940 --> 00:30:27,750
source<font color="#E5E5E5"> of the problem</font><font color="#CCCCCC"> ok so here</font><font color="#E5E5E5"> is a</font>

495
00:30:25,110 --> 00:30:31,240
<font color="#CCCCCC">picture which explains what's really</font>

496
00:30:27,750 --> 00:30:34,840
going on<font color="#E5E5E5"> so</font><font color="#CCCCCC"> and this</font>

497
00:30:31,240 --> 00:30:39,020
exactly follows the<font color="#CCCCCC"> procedure how young</font>

498
00:30:34,840 --> 00:30:42,830
<font color="#E5E5E5">when instance document is supposed to be</font>

499
00:30:39,020 --> 00:30:46,700
<font color="#CCCCCC">validated against young data model</font><font color="#E5E5E5"> so in</font>

500
00:30:42,830 --> 00:30:49,370
this case we first have to check the

501
00:30:46,700 --> 00:30:52,940
structure<font color="#E5E5E5"> the schema itself</font><font color="#CCCCCC"> the grammar</font>

502
00:30:49,370 --> 00:30:57,408
of<font color="#E5E5E5"> the document and data types and this</font>

503
00:30:52,940 --> 00:31:00,890
is<font color="#E5E5E5"> water relax ng schema does really</font>

504
00:30:57,409 --> 00:31:02,990
<font color="#E5E5E5">well so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the first step and then</font>

505
00:31:00,890 --> 00:31:06,649
<font color="#CCCCCC">before we can check the semantic</font>

506
00:31:02,990 --> 00:31:09,140
constraints we have<font color="#CCCCCC"> to fill</font><font color="#E5E5E5"> in all</font>

507
00:31:06,649 --> 00:31:11,500
<font color="#CCCCCC">defaults</font><font color="#E5E5E5"> that may be missing in the</font>

508
00:31:09,140 --> 00:31:16,820
instance document because that the rule

509
00:31:11,500 --> 00:31:20,960
of of yang<font color="#E5E5E5"> that all the default have to</font>

510
00:31:16,820 --> 00:31:24,080
be provided<font color="#CCCCCC"> before</font><font color="#E5E5E5"> the semantic</font>

511
00:31:20,960 --> 00:31:26,120
constraints are checked and<font color="#CCCCCC"> that cement</font>

512
00:31:24,080 --> 00:31:29,510
so this is what the DSR<font color="#CCCCCC"> L schema</font>

513
00:31:26,120 --> 00:31:33,110
provides<font color="#E5E5E5"> so this step is done and the</font>

514
00:31:29,510 --> 00:31:35,299
initial XML document is changed<font color="#E5E5E5"> so that</font>

515
00:31:33,110 --> 00:31:38,209
all defaults are present in the new

516
00:31:35,299 --> 00:31:41,779
<font color="#E5E5E5">document and this new document is then</font>

517
00:31:38,210 --> 00:31:43,549
checked for<font color="#E5E5E5"> all the semantic rules that</font>

518
00:31:41,779 --> 00:31:47,659
are written<font color="#E5E5E5"> in the data model are then</font>

519
00:31:43,549 --> 00:31:54,250
checked using the schema from schema so

520
00:31:47,659 --> 00:31:54,250
in in<font color="#E5E5E5"> effect this covers all all</font>

521
00:31:54,549 --> 00:32:01,549
validity<font color="#E5E5E5"> constraints that</font><font color="#CCCCCC"> can be</font>

522
00:31:57,289 --> 00:32:05,450
expressed<font color="#E5E5E5"> in yang with some very minor</font>

523
00:32:01,549 --> 00:32:07,850
exception that<font color="#E5E5E5"> I do not discuss here</font><font color="#CCCCCC"> so</font>

524
00:32:05,450 --> 00:32:11,870
that's also the<font color="#CCCCCC"> reason</font><font color="#E5E5E5"> why it was not</font>

525
00:32:07,850 --> 00:32:17,990
very<font color="#CCCCCC"> avoid it</font><font color="#E5E5E5"> was not actually</font><font color="#CCCCCC"> possible</font>

526
00:32:11,870 --> 00:32:20,239
to<font color="#E5E5E5"> use XML schema because XML schema</font>

527
00:32:17,990 --> 00:32:23,450
only would could only cover<font color="#CCCCCC"> the first</font>

528
00:32:20,240 --> 00:32:25,760
part on the left and there is no

529
00:32:23,450 --> 00:32:29,029
<font color="#E5E5E5">official way you can</font><font color="#CCCCCC"> actually use</font><font color="#E5E5E5"> also</font>

530
00:32:25,760 --> 00:32:31,399
schema<font color="#CCCCCC"> to run with XML schema</font><font color="#E5E5E5"> but that's</font>

531
00:32:29,029 --> 00:32:35,240
not that's not official that just some

532
00:32:31,399 --> 00:32:37,969
<font color="#E5E5E5">in official extension of XML schema and</font>

533
00:32:35,240 --> 00:32:43,730
so that's why we<font color="#CCCCCC"> decided</font><font color="#E5E5E5"> to use that</font><font color="#CCCCCC"> as</font>

534
00:32:37,970 --> 00:32:46,100
<font color="#CCCCCC">deal and schema languages any</font><font color="#E5E5E5"> questions</font>

535
00:32:43,730 --> 00:32:48,800
<font color="#CCCCCC">all this validation I know it's a bit</font>

536
00:32:46,100 --> 00:32:52,850
technical so you may want to look<font color="#E5E5E5"> into</font>

537
00:32:48,800 --> 00:32:57,490
<font color="#E5E5E5">the web version</font><font color="#CCCCCC"> of this tutorial but</font>

538
00:32:52,850 --> 00:32:57,490
this is how it<font color="#E5E5E5"> is supposed</font><font color="#CCCCCC"> to work and</font>

539
00:32:58,390 --> 00:33:05,090
we can also<font color="#E5E5E5"> then use the same procedure</font>

540
00:33:01,670 --> 00:33:14,480
for<font color="#E5E5E5"> validating what we did previously</font>

541
00:33:05,090 --> 00:33:16,480
was validation of<font color="#CCCCCC"> configuration here the</font>

542
00:33:14,480 --> 00:33:21,670
config target but<font color="#E5E5E5"> we can use it</font><font color="#CCCCCC"> for</font>

543
00:33:16,480 --> 00:33:24,170
other document types other instance

544
00:33:21,670 --> 00:33:27,250
<font color="#E5E5E5">documents for example</font><font color="#CCCCCC"> on a</font><font color="#E5E5E5"> notification</font>

545
00:33:24,170 --> 00:33:30,170
for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Turing machine we have one</font>

546
00:33:27,250 --> 00:33:34,880
<font color="#E5E5E5">notification and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> notification can</font>

547
00:33:30,170 --> 00:33:38,000
look like this<font color="#E5E5E5"> for example and we can</font>

548
00:33:34,880 --> 00:33:41,920
<font color="#E5E5E5">validate this XML instance document in</font>

549
00:33:38,000 --> 00:33:45,560
the same way<font color="#E5E5E5"> just using another target</font>

550
00:33:41,920 --> 00:33:50,140
<font color="#CCCCCC">but that's indicated with that</font><font color="#E5E5E5"> - T</font>

551
00:33:45,560 --> 00:33:53,600
parameter<font color="#CCCCCC"> and it says that the schema</font>

552
00:33:50,140 --> 00:33:56,870
should be for notification this time and

553
00:33:53,600 --> 00:34:02,050
so as you<font color="#CCCCCC"> can see the yang to</font><font color="#E5E5E5"> this</font>

554
00:33:56,870 --> 00:34:05,750
<font color="#CCCCCC">discret produces</font><font color="#E5E5E5"> three new schemas that</font>

555
00:34:02,050 --> 00:34:12,889
<font color="#CCCCCC">can be used for validating notifications</font>

556
00:34:05,750 --> 00:34:16,429
<font color="#E5E5E5">and this time it does the validation at</font>

557
00:34:12,889 --> 00:34:18,859
the same time<font color="#E5E5E5"> so again no errors are</font>

558
00:34:16,429 --> 00:34:24,889
<font color="#E5E5E5">found and the validation procedure is</font>

559
00:34:18,860 --> 00:34:27,730
<font color="#CCCCCC">exactly the same as before and now the</font>

560
00:34:24,889 --> 00:34:31,929
last<font color="#E5E5E5"> part I want to talk about is</font>

561
00:34:27,730 --> 00:34:35,449
converting<font color="#E5E5E5"> XML instances to Jason and</font>

562
00:34:31,929 --> 00:34:39,169
<font color="#CCCCCC">vice-versa Carl</font><font color="#E5E5E5"> told you and maybe this</font>

563
00:34:35,449 --> 00:34:43,509
will<font color="#E5E5E5"> be part of the next edition of this</font>

564
00:34:39,170 --> 00:34:46,730
<font color="#E5E5E5">tutorial that there is a new protocol</font>

565
00:34:43,510 --> 00:34:49,340
that's an alternative to<font color="#CCCCCC"> net conf it's</font>

566
00:34:46,730 --> 00:34:53,690
called rest conf and apart from<font color="#E5E5E5"> other</font>

567
00:34:49,340 --> 00:34:57,430
changes it also allows for using<font color="#CCCCCC"> Jason</font>

568
00:34:53,690 --> 00:35:00,220
<font color="#E5E5E5">instead or along with XML</font>

569
00:34:57,430 --> 00:35:04,868
for sending data<font color="#CCCCCC"> back and</font><font color="#E5E5E5"> forth</font><font color="#CCCCCC"> between</font>

570
00:35:00,220 --> 00:35:08,430
the client and server<font color="#E5E5E5"> so Jason is an</font>

571
00:35:04,869 --> 00:35:12,010
optional media typing in<font color="#CCCCCC"> Raskin</font><font color="#E5E5E5"> and</font>

572
00:35:08,430 --> 00:35:16,509
<font color="#CCCCCC">tieng also provides some means</font><font color="#E5E5E5"> for</font>

573
00:35:12,010 --> 00:35:20,140
converting for actually<font color="#CCCCCC"> doing a schema</font>

574
00:35:16,510 --> 00:35:22,540
based conversion between<font color="#E5E5E5"> XML and Jason</font>

575
00:35:20,140 --> 00:35:26,558
that's<font color="#E5E5E5"> quite important</font><font color="#CCCCCC"> you cannot use</font>

576
00:35:22,540 --> 00:35:30,130
any<font color="#E5E5E5"> of the shelf XML to JSON object</font>

577
00:35:26,559 --> 00:35:33,160
<font color="#E5E5E5">Jason to XML converter because</font><font color="#CCCCCC"> there is</font>

578
00:35:30,130 --> 00:35:35,140
<font color="#CCCCCC">quite a lot of information in the yang</font>

579
00:35:33,160 --> 00:35:40,960
data model<font color="#CCCCCC"> that has to be taken into</font>

580
00:35:35,140 --> 00:35:45,520
<font color="#CCCCCC">account</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> order to really produce valid</font>

581
00:35:40,960 --> 00:35:50,740
results so for example it's important

582
00:35:45,520 --> 00:35:53,470
that numbers from<font color="#E5E5E5"> XML are converted to</font>

583
00:35:50,740 --> 00:35:58,439
<font color="#CCCCCC">Jason numbers and not to Jason strings</font>

584
00:35:53,470 --> 00:36:01,899
<font color="#E5E5E5">and so on so peeing helps with this and</font>

585
00:35:58,440 --> 00:36:08,559
the way how this is implemented is that

586
00:36:01,900 --> 00:36:11,260
<font color="#CCCCCC">peeing can or Jason</font><font color="#E5E5E5"> Jason XSL</font><font color="#CCCCCC"> plugin can</font>

587
00:36:08,559 --> 00:36:15,069
use can be<font color="#E5E5E5"> used for</font><font color="#CCCCCC"> producing an</font>

588
00:36:11,260 --> 00:36:16,839
accessibility<font color="#CCCCCC"> stylesheet and as soon as</font>

589
00:36:15,069 --> 00:36:20,369
<font color="#E5E5E5">you have this accessibility</font><font color="#CCCCCC"> stylesheet</font>

590
00:36:16,839 --> 00:36:23,078
<font color="#E5E5E5">you can use it for converting any</font>

591
00:36:20,369 --> 00:36:26,069
external<font color="#E5E5E5"> instance it means</font>

592
00:36:23,079 --> 00:36:30,640
configurations<font color="#CCCCCC"> the data notifications</font>

593
00:36:26,069 --> 00:36:34,720
<font color="#E5E5E5">our PC contents you can convert them</font>

594
00:36:30,640 --> 00:36:38,589
from<font color="#E5E5E5"> XML to Jason and I think this is</font>

595
00:36:34,720 --> 00:36:40,930
quite useful<font color="#E5E5E5"> for them for example if you</font>

596
00:36:38,589 --> 00:36:44,859
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> perform this conversion in the</font>

597
00:36:40,930 --> 00:36:47,020
<font color="#E5E5E5">device it's not necessary</font><font color="#CCCCCC"> to have Python</font>

598
00:36:44,859 --> 00:36:50,259
installed installed on the device<font color="#E5E5E5"> so you</font>

599
00:36:47,020 --> 00:36:53,920
<font color="#E5E5E5">can just produce this accessibility</font>

600
00:36:50,260 --> 00:36:58,150
<font color="#CCCCCC">stylesheet offline then install it</font><font color="#E5E5E5"> and</font>

601
00:36:53,920 --> 00:37:01,210
this<font color="#E5E5E5"> XSLT</font><font color="#CCCCCC"> stylesheet</font><font color="#E5E5E5"> only changes if the</font>

602
00:36:58,150 --> 00:37:03,250
data model is changed<font color="#E5E5E5"> so as soon as as</font>

603
00:37:01,210 --> 00:37:05,290
long as your<font color="#E5E5E5"> device uses the same data</font>

604
00:37:03,250 --> 00:37:07,960
model you can use<font color="#E5E5E5"> this accessibility</font>

605
00:37:05,290 --> 00:37:10,370
style sheet for Corvette converting

606
00:37:07,960 --> 00:37:15,190
<font color="#E5E5E5">external to Jason</font>

607
00:37:10,370 --> 00:37:22,150
just by using any available<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> shelf</font>

608
00:37:15,190 --> 00:37:25,460
XSLT processor so then of course the

609
00:37:22,150 --> 00:37:29,360
accessibility processor is applied to

610
00:37:25,460 --> 00:37:31,880
and the<font color="#E5E5E5"> stylesheet</font><font color="#CCCCCC"> is applied to an XML</font>

611
00:37:29,360 --> 00:37:35,170
instance document in the usual way so

612
00:37:31,880 --> 00:37:39,560
for<font color="#E5E5E5"> example if you</font><font color="#CCCCCC"> use that ubiquitous</font>

613
00:37:35,170 --> 00:37:43,670
<font color="#CCCCCC">XSLT proc processor it's done</font><font color="#E5E5E5"> like this</font>

614
00:37:39,560 --> 00:37:47,830
<font color="#E5E5E5">and as I said the same</font><font color="#CCCCCC"> things stylesheet</font>

615
00:37:43,670 --> 00:37:51,530
covers all document types and by the way

616
00:37:47,830 --> 00:37:55,460
<font color="#CCCCCC">PN also as</font><font color="#E5E5E5"> J talks plugging that does</font>

617
00:37:51,530 --> 00:37:58,220
the opposite conversion and for<font color="#CCCCCC"> example</font>

618
00:37:55,460 --> 00:38:00,160
<font color="#E5E5E5">this can be</font><font color="#CCCCCC"> useful for</font><font color="#E5E5E5"> validating JSON</font>

619
00:37:58,220 --> 00:38:06,910
data<font color="#E5E5E5"> I have been using it quite</font>

620
00:38:00,160 --> 00:38:09,740
regularly<font color="#CCCCCC"> for validating</font><font color="#E5E5E5"> JSON data</font><font color="#CCCCCC"> it's</font>

621
00:38:06,910 --> 00:38:13,399
seems a bit complicated<font color="#E5E5E5"> so you need to</font>

622
00:38:09,740 --> 00:38:15,830
convert Jason first to XML in order to

623
00:38:13,400 --> 00:38:20,660
be<font color="#E5E5E5"> very</font><font color="#CCCCCC"> able to validate that XML using</font>

624
00:38:15,830 --> 00:38:23,600
that<font color="#CCCCCC"> bsdl procedure that</font><font color="#E5E5E5"> I explained but</font>

625
00:38:20,660 --> 00:38:27,020
it's<font color="#E5E5E5"> - in my experience</font><font color="#CCCCCC"> it works quite</font>

626
00:38:23,600 --> 00:38:30,589
<font color="#E5E5E5">finite and it is doable so unless we</font>

627
00:38:27,020 --> 00:38:34,610
have<font color="#E5E5E5"> some JSON schema implemented this</font>

628
00:38:30,590 --> 00:38:38,480
is what<font color="#CCCCCC"> Cal wants to do this is as far</font>

629
00:38:34,610 --> 00:38:41,200
<font color="#CCCCCC">as I know the only</font><font color="#E5E5E5"> way available in</font>

630
00:38:38,480 --> 00:38:46,330
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> tools how we can validate</font>

631
00:38:41,200 --> 00:38:50,210
<font color="#CCCCCC">jason documented</font><font color="#E5E5E5"> against</font><font color="#CCCCCC"> en data model</font>

632
00:38:46,330 --> 00:38:53,870
and to conclude<font color="#E5E5E5"> this is just a list of</font>

633
00:38:50,210 --> 00:38:56,450
other<font color="#E5E5E5"> resources that you might want</font><font color="#CCCCCC"> to</font>

634
00:38:53,870 --> 00:38:58,040
comes out so<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> working group</font>

635
00:38:56,450 --> 00:39:01,939
pages where you<font color="#E5E5E5"> can find</font>

636
00:38:58,040 --> 00:39:07,250
yes<font color="#E5E5E5"> questions link away from University</font>

637
00:39:01,940 --> 00:39:10,430
and I used<font color="#E5E5E5"> to have P warnings</font><font color="#CCCCCC"> when I</font>

638
00:39:07,250 --> 00:39:14,030
used validations is that my models is

639
00:39:10,430 --> 00:39:15,230
too large<font color="#E5E5E5"> lots of definitions</font><font color="#CCCCCC"> just</font>

640
00:39:14,030 --> 00:39:17,030
<font color="#CCCCCC">wondering is that</font><font color="#E5E5E5"> some kind of</font>

641
00:39:15,230 --> 00:39:19,340
suggestions from the ITF that I<font color="#E5E5E5"> should</font>

642
00:39:17,030 --> 00:39:21,560
not to make the module<font color="#E5E5E5"> very large</font>

643
00:39:19,340 --> 00:39:23,810
because<font color="#E5E5E5"> actually I'm doing the</font><font color="#CCCCCC"> yaw</font>

644
00:39:21,560 --> 00:39:26,870
<font color="#CCCCCC">models for dhcpv6</font>

645
00:39:23,810 --> 00:39:28,520
is lots of work<font color="#E5E5E5"> very large model so I</font>

646
00:39:26,870 --> 00:39:31,339
just considering whether I<font color="#E5E5E5"> have to</font>

647
00:39:28,520 --> 00:39:35,270
submit submit the model<font color="#E5E5E5"> into small sub</font>

648
00:39:31,340 --> 00:39:38,450
modules but actually I have never met

649
00:39:35,270 --> 00:39:43,420
this<font color="#E5E5E5"> wording like beta model</font><font color="#CCCCCC"> to large</font><font color="#E5E5E5"> I</font>

650
00:39:38,450 --> 00:39:43,419
<font color="#E5E5E5">can offend Martin Martin who should know</font>

651
00:39:44,470 --> 00:39:51,399
<font color="#E5E5E5">maybe if you can send us really what the</font>

652
00:39:48,020 --> 00:39:56,320
warning<font color="#E5E5E5"> where maybe it's just related</font><font color="#CCCCCC"> to</font>

653
00:39:51,400 --> 00:39:56,320
<font color="#CCCCCC">do long line so something like that but</font>

654
00:40:03,400 --> 00:40:10,340
<font color="#E5E5E5">it just</font><font color="#CCCCCC"> says</font><font color="#E5E5E5"> I have lots of definitions</font>

655
00:40:06,950 --> 00:40:12,680
<font color="#CCCCCC">those definitions</font><font color="#E5E5E5"> not the file size it's</font>

656
00:40:10,340 --> 00:40:14,510
the size not the sub size of the file

657
00:40:12,680 --> 00:40:16,759
that's real strange because<font color="#E5E5E5"> I'm not</font>

658
00:40:14,510 --> 00:40:18,770
aware<font color="#CCCCCC"> of any arbitrary limits that you</font>

659
00:40:16,760 --> 00:40:25,580
can have for the<font color="#CCCCCC"> depths of</font><font color="#E5E5E5"> the hierarchy</font>

660
00:40:18,770 --> 00:40:28,040
for example things<font color="#CCCCCC"> like that so you know</font>

661
00:40:25,580 --> 00:40:31,430
for issues<font color="#E5E5E5"> that are found and you should</font>

662
00:40:28,040 --> 00:40:33,670
post the issue to<font color="#E5E5E5"> the github tracker the</font>

663
00:40:31,430 --> 00:40:38,089
<font color="#CCCCCC">P and github trackers so that then it</font>

664
00:40:33,670 --> 00:40:41,270
would be great usually such<font color="#CCCCCC"> bucks that</font>

665
00:40:38,090 --> 00:40:43,810
are<font color="#E5E5E5"> reported on the github they are</font>

666
00:40:41,270 --> 00:40:43,810
dealt with

667
00:40:49,360 --> 00:40:54,500
<font color="#CCCCCC">yes dv6</font>

668
00:40:51,650 --> 00:40:57,500
yes I found that is there is no warnings

669
00:40:54,500 --> 00:41:00,890
<font color="#CCCCCC">just you know a</font><font color="#E5E5E5"> just but I don't know</font>

670
00:40:57,500 --> 00:41:03,680
it's a couple<font color="#E5E5E5"> of weeks ago</font><font color="#CCCCCC"> if you use</font>

671
00:41:00,890 --> 00:41:07,009
<font color="#CCCCCC">p.m. with really huge beta models and we</font>

672
00:41:03,680 --> 00:41:09,740
had some to test it<font color="#CCCCCC"> can take some time</font>

673
00:41:07,010 --> 00:41:12,410
that's<font color="#CCCCCC"> true it it's not terribly fast</font>

674
00:41:09,740 --> 00:41:14,359
<font color="#E5E5E5">but for</font><font color="#CCCCCC"> normal life</font><font color="#E5E5E5"> they come all that</font>

675
00:41:12,410 --> 00:41:17,600
<font color="#CCCCCC">should work just fine and</font><font color="#E5E5E5"> really there</font>

676
00:41:14,360 --> 00:41:19,790
are<font color="#CCCCCC"> no</font><font color="#E5E5E5"> limits concerning the number of</font>

677
00:41:17,600 --> 00:41:25,759
definitions<font color="#E5E5E5"> or the depths of the</font>

678
00:41:19,790 --> 00:41:29,180
hierarchy or<font color="#CCCCCC"> things like that so sorry</font>

679
00:41:25,760 --> 00:41:30,440
<font color="#E5E5E5">Jason here are you you might have</font><font color="#CCCCCC"> met it</font>

680
00:41:29,180 --> 00:41:31,970
mention<font color="#E5E5E5"> at the beginning I'm sorry if I</font>

681
00:41:30,440 --> 00:41:34,040
missed it but are your slides posted

682
00:41:31,970 --> 00:41:36,589
somewhere there's a lot of good links

683
00:41:34,040 --> 00:41:37,279
<font color="#E5E5E5">and games the same as the first part of</font>

684
00:41:36,590 --> 00:41:40,250
the<font color="#E5E5E5"> tutorial</font>

685
00:41:37,280 --> 00:41:43,130
they will be<font color="#E5E5E5"> available on the ITF I do</font>

686
00:41:40,250 --> 00:41:47,630
pages or<font color="#E5E5E5"> okay well there's me on</font><font color="#CCCCCC"> the</font>

687
00:41:43,130 --> 00:41:49,190
meeting materials pages just there's a

688
00:41:47,630 --> 00:41:51,200
link for meeting<font color="#CCCCCC"> materials people may</font><font color="#E5E5E5"> go</font>

689
00:41:49,190 --> 00:41:54,590
<font color="#CCCCCC">levain there so this might be</font><font color="#E5E5E5"> useful to</font>

690
00:41:51,200 --> 00:41:57,950
stick them on there right they will be

691
00:41:54,590 --> 00:42:01,270
on the edu<font color="#CCCCCC"> web</font><font color="#E5E5E5"> page</font><font color="#CCCCCC"> now there will be</font><font color="#E5E5E5"> in</font>

692
00:41:57,950 --> 00:42:04,129
multiple<font color="#CCCCCC"> places like yang central and</font>

693
00:42:01,270 --> 00:42:09,980
<font color="#CCCCCC">the yang doctors</font><font color="#E5E5E5"> home page was a</font>

694
00:42:04,130 --> 00:42:12,860
linguist yes a lot<font color="#CCCCCC"> of not confront yang</font>

695
00:42:09,980 --> 00:42:15,290
<font color="#E5E5E5">relative</font><font color="#CCCCCC"> information is in the on the</font>

696
00:42:12,860 --> 00:42:19,040
net consent route<font color="#E5E5E5"> pages that are</font>

697
00:42:15,290 --> 00:42:21,830
maintained<font color="#E5E5E5"> one by nd</font><font color="#CCCCCC"> Biermann then</font><font color="#E5E5E5"> PN</font>

698
00:42:19,040 --> 00:42:23,180
McKay apart from this<font color="#CCCCCC"> tutorial</font><font color="#E5E5E5"> the</font>

699
00:42:21,830 --> 00:42:25,250
extended version of<font color="#E5E5E5"> it</font>

700
00:42:23,180 --> 00:42:28,310
it also constant contains<font color="#E5E5E5"> other</font>

701
00:42:25,250 --> 00:42:31,070
tutorials and other materials and<font color="#CCCCCC"> more</font>

702
00:42:28,310 --> 00:42:35,330
<font color="#CCCCCC">stuff is</font><font color="#E5E5E5"> also available on the yang</font>

703
00:42:31,070 --> 00:42:38,380
central site where you can also<font color="#E5E5E5"> download</font>

704
00:42:35,330 --> 00:42:47,330
some other tools for working with<font color="#CCCCCC"> Yin</font>

705
00:42:38,380 --> 00:42:49,400
documents so any more<font color="#E5E5E5"> questions right</font>

706
00:42:47,330 --> 00:42:53,290
<font color="#E5E5E5">got a question do we have people here</font>

707
00:42:49,400 --> 00:42:53,290
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are working</font><font color="#E5E5E5"> with different</font><font color="#CCCCCC"> SDOs</font>

708
00:42:54,070 --> 00:42:59,300
<font color="#CCCCCC">okay there is something that I would</font>

709
00:42:57,200 --> 00:43:03,649
like<font color="#CCCCCC"> you to mention</font><font color="#E5E5E5"> Martin in the latest</font>

710
00:42:59,300 --> 00:43:06,560
version of<font color="#CCCCCC"> Pahang 1.6 there is like an</font>

711
00:43:03,650 --> 00:43:08,870
<font color="#E5E5E5">extra option that we could use because</font>

712
00:43:06,560 --> 00:43:12,950
normally is going to complain<font color="#E5E5E5"> that you</font>

713
00:43:08,870 --> 00:43:15,080
don't use like an ITF - prefix right so

714
00:43:12,950 --> 00:43:17,240
if you come from<font color="#E5E5E5"> I Triple E for example</font>

715
00:43:15,080 --> 00:43:22,040
you can<font color="#E5E5E5"> put like</font><font color="#CCCCCC"> a - a triple e it</font><font color="#E5E5E5"> won't</font>

716
00:43:17,240 --> 00:43:24,379
not campaign about that so I<font color="#E5E5E5"> just wanted</font>

717
00:43:22,040 --> 00:43:27,710
<font color="#E5E5E5">to change the ITF option into as do</font>

718
00:43:24,380 --> 00:43:34,040
something that well there is a new

719
00:43:27,710 --> 00:43:38,180
option<font color="#E5E5E5"> it's so I so we had this - - ITF</font>

720
00:43:34,040 --> 00:43:41,660
option<font color="#E5E5E5"> that checks the rules in the yang</font>

721
00:43:38,180 --> 00:43:45,799
guidelines document<font color="#CCCCCC"> 60</font><font color="#E5E5E5"> 87 and it also</font>

722
00:43:41,660 --> 00:43:49,190
checks that module name begins with<font color="#CCCCCC"> I</font>

723
00:43:45,800 --> 00:43:50,810
ITF<font color="#E5E5E5"> and it checks that the name</font><font color="#CCCCCC"> XML</font>

724
00:43:49,190 --> 00:43:54,190
<font color="#E5E5E5">namespace is one of the</font>

725
00:43:50,810 --> 00:43:57,170
by their<font color="#E5E5E5"> faces so I changed that</font><font color="#CCCCCC"> plug in</font>

726
00:43:54,190 --> 00:44:02,660
<font color="#CCCCCC">so that now there are two different</font>

727
00:43:57,170 --> 00:44:05,380
<font color="#CCCCCC">options</font><font color="#E5E5E5"> one is called -</font><font color="#CCCCCC"> does lint and it</font>

728
00:44:02,660 --> 00:44:08,089
just checks<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the generic</font>

729
00:44:05,380 --> 00:44:11,510
<font color="#E5E5E5">recommendations from RFC sixty eight</font>

730
00:44:08,090 --> 00:44:13,790
seven but it does<font color="#E5E5E5"> not check you know the</font>

731
00:44:11,510 --> 00:44:17,540
name<font color="#CCCCCC"> of the module must start with</font><font color="#E5E5E5"> IETF</font>

732
00:44:13,790 --> 00:44:20,180
and so on so if you if you want<font color="#E5E5E5"> to check</font>

733
00:44:17,540 --> 00:44:22,160
<font color="#CCCCCC">for the guidelines for a module that is</font>

734
00:44:20,180 --> 00:44:25,220
not an IDF module might be<font color="#CCCCCC"> vendor</font>

735
00:44:22,160 --> 00:44:28,490
<font color="#CCCCCC">specific also you can use the</font><font color="#E5E5E5"> limped</font>

736
00:44:25,220 --> 00:44:36,790
option<font color="#CCCCCC"> to behind it's gonna check all</font>

737
00:44:28,490 --> 00:44:36,790
the recommendations<font color="#CCCCCC"> and guidelines and</font>

738
00:44:48,100 --> 00:44:53,630
<font color="#CCCCCC">one last</font><font color="#E5E5E5"> thing as well on this</font><font color="#CCCCCC"> interest</font>

739
00:44:51,170 --> 00:44:56,090
do because I'm receiving<font color="#E5E5E5"> more and more</font>

740
00:44:53,630 --> 00:44:58,670
requests from different se owes who want

741
00:44:56,090 --> 00:45:02,030
to<font color="#E5E5E5"> do like</font><font color="#CCCCCC"> yang models and that's</font>

742
00:44:58,670 --> 00:45:04,550
perfectly<font color="#E5E5E5"> fine is good news</font><font color="#CCCCCC"> we have in</font>

743
00:45:02,030 --> 00:45:08,300
the latest<font color="#CCCCCC"> guidelines for writing yang</font>

744
00:45:04,550 --> 00:45:10,730
models<font color="#E5E5E5"> RFC sixty eighty seven bits we've</font>

745
00:45:08,300 --> 00:45:13,840
<font color="#E5E5E5">gots a couple of extra sections for</font>

746
00:45:10,730 --> 00:45:16,490
different<font color="#CCCCCC"> as dioz please review this</font>

747
00:45:13,840 --> 00:45:19,280
<font color="#E5E5E5">just to see if it makes sense</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> if</font>

748
00:45:16,490 --> 00:45:29,450
<font color="#CCCCCC">we're missing anything</font><font color="#E5E5E5"> that will be key</font>

749
00:45:19,280 --> 00:45:32,750
but<font color="#E5E5E5"> a triple e m EF</font><font color="#CCCCCC"> BB F</font><font color="#E5E5E5"> okay so if</font>

750
00:45:29,450 --> 00:45:36,529
there are<font color="#CCCCCC"> no more questions thank you</font>

751
00:45:32,750 --> 00:45:42,230
<font color="#CCCCCC">very much for attention</font><font color="#E5E5E5"> and I think</font><font color="#CCCCCC"> now</font>

752
00:45:36,530 --> 00:45:45,590
we will continue<font color="#CCCCCC"> thank</font><font color="#E5E5E5"> you thank you for</font>

753
00:45:42,230 --> 00:45:48,370
<font color="#E5E5E5">your help so now what we have is what's</font>

754
00:45:45,590 --> 00:45:51,080
<font color="#CCCCCC">called a yang editing device session</font>

755
00:45:48,370 --> 00:45:56,270
this<font color="#CCCCCC"> is for the people who</font><font color="#E5E5E5"> have like</font>

756
00:45:51,080 --> 00:45:59,810
yang models and we have<font color="#CCCCCC"> the available</font>

757
00:45:56,270 --> 00:46:02,330
some available yang doctors here so what

758
00:45:59,810 --> 00:46:04,279
I<font color="#CCCCCC"> plan to do is if you want to discuss</font>

759
00:46:02,330 --> 00:46:07,100
one<font color="#CCCCCC"> of your yang models</font>

760
00:46:04,280 --> 00:46:09,530
we just take<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> minutes here</font><font color="#CCCCCC"> to write</font>

761
00:46:07,100 --> 00:46:11,210
your model<font color="#E5E5E5"> and we're going to divide the</font>

762
00:46:09,530 --> 00:46:13,580
forces that<font color="#E5E5E5"> you've got and you can have</font>

763
00:46:11,210 --> 00:46:15,320
maybe 15 minutes<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> yang doctors</font>

764
00:46:13,580 --> 00:46:18,020
for<font color="#CCCCCC"> all the questions that were not</font>

765
00:46:15,320 --> 00:46:21,140
answered<font color="#E5E5E5"> either in the</font><font color="#CCCCCC"> peeing session</font><font color="#E5E5E5"> or</font>

766
00:46:18,020 --> 00:46:24,920
in the yang session before<font color="#CCCCCC"> so who has</font>

767
00:46:21,140 --> 00:46:30,529
<font color="#CCCCCC">got like yang data models that you won't</font>

768
00:46:24,920 --> 00:46:33,080
discuss<font color="#E5E5E5"> 1 2</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> 4 5</font><font color="#CCCCCC"> 6</font><font color="#E5E5E5"> 7</font><font color="#CCCCCC"> all right</font><font color="#E5E5E5"> you</font>

769
00:46:30,530 --> 00:46:36,080
please come here<font color="#E5E5E5"> we're going to write</font>

770
00:46:33,080 --> 00:46:37,730
them<font color="#CCCCCC"> down we want to get the best yang</font>

771
00:46:36,080 --> 00:46:42,410
doctor for you depending<font color="#CCCCCC"> on a technology</font>

772
00:46:37,730 --> 00:46:44,900
<font color="#E5E5E5">etc and then we're going</font><font color="#CCCCCC"> to assign one</font>

773
00:46:42,410 --> 00:46:46,879
<font color="#CCCCCC">to you and we'll just reshuffle the</font>

774
00:46:44,900 --> 00:46:49,330
chairs or whatever and you'll work<font color="#E5E5E5"> in</font>

775
00:46:46,880 --> 00:46:52,130
your corner on on that<font color="#CCCCCC"> yang model</font><font color="#E5E5E5"> and</font>

776
00:46:49,330 --> 00:46:56,950
for the mythical guys I mean this is

777
00:46:52,130 --> 00:46:56,950
where we could stop the recording<font color="#CCCCCC"> thanks</font>

