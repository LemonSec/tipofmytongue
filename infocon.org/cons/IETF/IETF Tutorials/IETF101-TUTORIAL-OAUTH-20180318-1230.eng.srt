1
00:00:04,910 --> 00:00:08,180
<font color="#E5E5E5">I'd like to welcome you</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> Karen</font>

2
00:00:06,680 --> 00:00:12,860
<font color="#CCCCCC">O'Donoghue I'm with the education team</font>

3
00:00:08,180 --> 00:00:14,450
here at the<font color="#E5E5E5"> IETF</font><font color="#CCCCCC"> and so I've</font><font color="#E5E5E5"> got two</font>

4
00:00:12,860 --> 00:00:16,279
purposes<font color="#E5E5E5"> here the first one is to</font>

5
00:00:14,450 --> 00:00:18,860
introduce<font color="#E5E5E5"> our topic and speaker today</font>

6
00:00:16,279 --> 00:00:21,019
<font color="#E5E5E5">and the second one is to solicit</font><font color="#CCCCCC"> your</font>

7
00:00:18,860 --> 00:00:23,330
input<font color="#E5E5E5"> and comments on tutorials that you</font>

8
00:00:21,019 --> 00:00:25,250
would find<font color="#E5E5E5"> useful in the future and even</font>

9
00:00:23,330 --> 00:00:28,429
<font color="#CCCCCC">better volunteers to provide those</font>

10
00:00:25,250 --> 00:00:30,380
tutorials<font color="#CCCCCC"> we're working to improve</font><font color="#E5E5E5"> our</font>

11
00:00:28,429 --> 00:00:32,750
education<font color="#CCCCCC"> program</font><font color="#E5E5E5"> and we're really</font>

12
00:00:30,380 --> 00:00:33,710
<font color="#CCCCCC">looking for</font><font color="#E5E5E5"> feedback on that and so we'd</font>

13
00:00:32,750 --> 00:00:35,930
really<font color="#CCCCCC"> appreciate that</font>

14
00:00:33,710 --> 00:00:38,600
<font color="#E5E5E5">so without any</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> oh and the other</font>

15
00:00:35,930 --> 00:00:40,700
<font color="#CCCCCC">thing is I'm not positive that</font><font color="#E5E5E5"> the</font>

16
00:00:38,600 --> 00:00:43,010
current<font color="#E5E5E5"> version of</font><font color="#CCCCCC"> the slides that</font><font color="#E5E5E5"> are</font>

17
00:00:40,700 --> 00:00:45,320
<font color="#E5E5E5">uploaded has the tutorial the survey</font>

18
00:00:43,010 --> 00:00:47,030
<font color="#CCCCCC">link in it but there will</font><font color="#E5E5E5"> be a version</font>

19
00:00:45,320 --> 00:00:48,530
uploaded<font color="#E5E5E5"> later today that</font><font color="#CCCCCC"> will have the</font>

20
00:00:47,030 --> 00:00:50,809
survey<font color="#CCCCCC"> link in it</font><font color="#E5E5E5"> and so you can look at</font>

21
00:00:48,530 --> 00:00:53,379
<font color="#E5E5E5">the slides and then click on the survey</font>

22
00:00:50,809 --> 00:00:55,399
<font color="#CCCCCC">link and provide brief survey feedback</font>

23
00:00:53,379 --> 00:00:57,410
<font color="#E5E5E5">alternatively you could also</font><font color="#CCCCCC"> email to</font>

24
00:00:55,399 --> 00:01:01,309
the edge of<font color="#E5E5E5"> team and that will do it as</font>

25
00:00:57,410 --> 00:01:03,108
well<font color="#CCCCCC"> so without</font><font color="#E5E5E5"> any further ado we</font><font color="#CCCCCC"> have</font>

26
00:01:01,309 --> 00:01:05,990
today<font color="#CCCCCC"> Justin Risher who's going to talk</font>

27
00:01:03,109 --> 00:01:08,240
<font color="#E5E5E5">about OAuth 2.0</font><font color="#CCCCCC"> I think he is</font><font color="#E5E5E5"> definitely</font>

28
00:01:05,990 --> 00:01:09,170
a long<font color="#E5E5E5"> history</font><font color="#CCCCCC"> in this space and</font><font color="#E5E5E5"> I'm not</font>

29
00:01:08,240 --> 00:01:10,429
sure<font color="#CCCCCC"> that he</font><font color="#E5E5E5"> really needs much</font>

30
00:01:09,170 --> 00:01:12,410
introduction

31
00:01:10,429 --> 00:01:14,420
he is also<font color="#E5E5E5"> has a long history</font><font color="#CCCCCC"> in the</font>

32
00:01:12,410 --> 00:01:16,780
IETF<font color="#CCCCCC"> and we deeply appreciate his</font>

33
00:01:14,420 --> 00:01:20,119
efforts<font color="#E5E5E5"> thank you</font>

34
00:01:16,780 --> 00:01:22,190
<font color="#E5E5E5">all right thanks Karen all right I'm a</font>

35
00:01:20,119 --> 00:01:25,009
little<font color="#CCCCCC"> bit taller than Karen so here we</font>

36
00:01:22,190 --> 00:01:26,390
go<font color="#CCCCCC"> hi</font><font color="#E5E5E5"> everybody and good afternoon my</font>

37
00:01:25,009 --> 00:01:29,000
name<font color="#CCCCCC"> is Justin</font><font color="#E5E5E5"> richer I'm an independent</font>

38
00:01:26,390 --> 00:01:30,470
<font color="#CCCCCC">consultant working</font><font color="#E5E5E5"> out of Boston you</font><font color="#CCCCCC"> are</font>

39
00:01:29,000 --> 00:01:33,860
looking at the entire<font color="#E5E5E5"> company of bespoke</font>

40
00:01:30,470 --> 00:01:35,690
<font color="#E5E5E5">engineering so hello everybody I've done</font>

41
00:01:33,860 --> 00:01:39,410
a<font color="#E5E5E5"> lot of work with OAuth over the last</font>

42
00:01:35,690 --> 00:01:41,149
bunch of years here<font color="#CCCCCC"> and this is you know</font>

43
00:01:39,410 --> 00:01:43,880
for<font color="#E5E5E5"> IETF 101 this is kind of an OAuth</font>

44
00:01:41,149 --> 00:01:46,039
101 class<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a math joke and there</font>

45
00:01:43,880 --> 00:01:47,690
somewhere but anyway I have done this

46
00:01:46,039 --> 00:01:49,819
course<font color="#CCCCCC"> a bunch of different</font><font color="#E5E5E5"> times this</font>

47
00:01:47,690 --> 00:01:51,709
is a distilled version<font color="#E5E5E5"> of a two-day</font>

48
00:01:49,819 --> 00:01:54,649
<font color="#E5E5E5">class that I</font><font color="#CCCCCC"> often come</font><font color="#E5E5E5"> in and give to</font>

49
00:01:51,709 --> 00:01:56,239
companies<font color="#CCCCCC"> so I'll basically sit down</font>

50
00:01:54,649 --> 00:01:57,830
with an engineering team for a<font color="#E5E5E5"> couple of</font>

51
00:01:56,239 --> 00:01:59,479
<font color="#E5E5E5">days there's a lot of hands-on exercises</font>

52
00:01:57,830 --> 00:02:02,270
and stuff like that<font color="#CCCCCC"> we obviously don't</font>

53
00:01:59,479 --> 00:02:05,649
have that much time<font color="#CCCCCC"> to get into a super</font>

54
00:02:02,270 --> 00:02:08,989
ton of depth here<font color="#E5E5E5"> in the next hour</font>

55
00:02:05,649 --> 00:02:12,379
<font color="#E5E5E5">because like I</font><font color="#CCCCCC"> said it's a</font><font color="#E5E5E5"> two-day like</font>

56
00:02:08,989 --> 00:02:14,600
a full<font color="#CCCCCC"> 2-day class but there's a lot</font>

57
00:02:12,379 --> 00:02:16,370
that<font color="#CCCCCC"> we can cover that'll hopefully give</font>

58
00:02:14,600 --> 00:02:18,470
you guys a<font color="#E5E5E5"> good grounding</font>

59
00:02:16,370 --> 00:02:19,700
<font color="#E5E5E5">you know in and around ooofff itself and</font>

60
00:02:18,470 --> 00:02:21,430
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of you</font><font color="#E5E5E5"> know what it is and how it</font>

61
00:02:19,700 --> 00:02:25,790
how it<font color="#E5E5E5"> works and all that kind of stuff</font>

62
00:02:21,430 --> 00:02:30,799
<font color="#CCCCCC">and</font><font color="#E5E5E5"> if you are interested in in going</font>

63
00:02:25,790 --> 00:02:32,209
really<font color="#CCCCCC"> in-depth</font><font color="#E5E5E5"> some some guy wrote a</font>

64
00:02:30,799 --> 00:02:35,810
book about this

65
00:02:32,209 --> 00:02:38,540
so<font color="#E5E5E5"> I Antonio</font><font color="#CCCCCC"> sansa and</font><font color="#E5E5E5"> myself published</font>

66
00:02:35,810 --> 00:02:40,220
this with Manning<font color="#E5E5E5"> press last year</font>

67
00:02:38,540 --> 00:02:42,260
<font color="#E5E5E5">the code for all of the exercises is</font>

68
00:02:40,220 --> 00:02:45,049
<font color="#CCCCCC">open source as is the case with all of</font>

69
00:02:42,260 --> 00:02:47,179
<font color="#CCCCCC">the</font><font color="#E5E5E5"> exercises for</font><font color="#CCCCCC"> that longer</font><font color="#E5E5E5"> version of</font>

70
00:02:45,049 --> 00:02:48,950
today's<font color="#E5E5E5"> class that I mentioned and if</font>

71
00:02:47,180 --> 00:02:50,780
you stick<font color="#CCCCCC"> around to the end of class</font><font color="#E5E5E5"> my</font>

72
00:02:48,950 --> 00:02:54,530
publisher<font color="#E5E5E5"> has given me a discount code</font>

73
00:02:50,780 --> 00:02:58,040
on this so you<font color="#E5E5E5"> can get</font><font color="#CCCCCC"> 39%</font><font color="#E5E5E5"> off</font><font color="#CCCCCC"> yeah it's</font>

74
00:02:54,530 --> 00:02:59,780
a weird arbitrary value<font color="#E5E5E5"> so you get 39%</font>

75
00:02:58,040 --> 00:03:02,209
off if you go through<font color="#E5E5E5"> the publisher</font>

76
00:02:59,780 --> 00:03:04,430
that's for both the<font color="#E5E5E5"> e-book and the the</font>

77
00:03:02,209 --> 00:03:06,140
printed book<font color="#E5E5E5"> so if you're</font><font color="#CCCCCC"> interested</font><font color="#E5E5E5"> in</font>

78
00:03:04,430 --> 00:03:10,040
<font color="#CCCCCC">that come grabbing after the class all</font>

79
00:03:06,140 --> 00:03:12,379
<font color="#E5E5E5">right so what is</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> oh off - I'm</font>

80
00:03:10,040 --> 00:03:14,690
<font color="#E5E5E5">assuming that a lot of</font><font color="#CCCCCC"> you guys have</font>

81
00:03:12,379 --> 00:03:15,980
<font color="#CCCCCC">probably heard of</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> I know it's gonna</font>

82
00:03:14,690 --> 00:03:17,930
<font color="#CCCCCC">be brand new</font><font color="#E5E5E5"> to some of you</font><font color="#CCCCCC"> guys like</font>

83
00:03:15,980 --> 00:03:21,828
<font color="#CCCCCC">Brian I know you're really</font><font color="#E5E5E5"> new to this</font>

84
00:03:17,930 --> 00:03:27,380
<font color="#E5E5E5">space so you know pay attention</font><font color="#CCCCCC"> so I</font>

85
00:03:21,829 --> 00:03:30,230
want to<font color="#E5E5E5"> get a couple</font><font color="#CCCCCC"> of answers of what</font>

86
00:03:27,380 --> 00:03:32,660
do<font color="#E5E5E5"> you think</font><font color="#CCCCCC"> Oh auth</font><font color="#E5E5E5"> - is and if we</font>

87
00:03:30,230 --> 00:03:34,840
could at<font color="#E5E5E5"> all possibly use the mic and</font>

88
00:03:32,660 --> 00:03:37,459
we're gonna try and do<font color="#E5E5E5"> this part quick</font>

89
00:03:34,840 --> 00:03:39,109
so who has who can give<font color="#CCCCCC"> me an idea</font><font color="#E5E5E5"> a</font>

90
00:03:37,459 --> 00:03:40,069
quick<font color="#CCCCCC"> definition of what OA - is</font><font color="#E5E5E5"> they're</font>

91
00:03:39,109 --> 00:03:44,540
actually<font color="#CCCCCC"> just shout it out and I'll</font>

92
00:03:40,069 --> 00:03:48,730
repeat it<font color="#E5E5E5"> nobody has</font><font color="#CCCCCC"> any idea what I</font>

93
00:03:44,540 --> 00:03:48,730
<font color="#E5E5E5">love too</font><font color="#CCCCCC"> is it's a great place to start</font>

94
00:03:51,819 --> 00:04:04,339
yes<font color="#CCCCCC"> a third-party</font><font color="#E5E5E5"> authentication</font>

95
00:03:57,500 --> 00:04:05,900
mechanism<font color="#CCCCCC"> alright anything</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> all</font>

96
00:04:04,340 --> 00:04:07,489
<font color="#CCCCCC">right so a lot of</font><font color="#E5E5E5"> people look at oo</font>

97
00:04:05,900 --> 00:04:09,199
<font color="#E5E5E5">often they'll say</font><font color="#CCCCCC"> ok it's you know it's</font>

98
00:04:07,489 --> 00:04:11,180
an<font color="#E5E5E5"> authentication protocol or it's an</font>

99
00:04:09,199 --> 00:04:12,949
authorization protocol or it's some

100
00:04:11,180 --> 00:04:14,599
security thing that lets me log<font color="#E5E5E5"> into</font>

101
00:04:12,949 --> 00:04:16,280
Facebook but I don't<font color="#E5E5E5"> really know what it</font>

102
00:04:14,599 --> 00:04:19,399
is I<font color="#E5E5E5"> just know that I see it all</font><font color="#CCCCCC"> over</font>

103
00:04:16,279 --> 00:04:21,320
<font color="#E5E5E5">the place and so from the specification</font>

104
00:04:19,399 --> 00:04:23,440
this is what<font color="#CCCCCC"> Oh auth - is everybody got</font>

105
00:04:21,320 --> 00:04:26,210
that<font color="#E5E5E5"> well these are the important parts</font>

106
00:04:23,440 --> 00:04:28,310
<font color="#CCCCCC">you know as we all</font><font color="#E5E5E5"> know this is the IETF</font>

107
00:04:26,210 --> 00:04:30,049
we take a lot of<font color="#E5E5E5"> words to</font><font color="#CCCCCC"> say something</font>

108
00:04:28,310 --> 00:04:33,560
very<font color="#CCCCCC"> simple but</font>

109
00:04:30,050 --> 00:04:35,360
<font color="#CCCCCC">do so very specifically so the real</font>

110
00:04:33,560 --> 00:04:37,849
important thing here<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> it's</font>

111
00:04:35,360 --> 00:04:40,789
something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> allows a third-party</font>

112
00:04:37,849 --> 00:04:43,639
<font color="#CCCCCC">application to get</font><font color="#E5E5E5"> limited access to</font>

113
00:04:40,789 --> 00:04:45,878
<font color="#E5E5E5">some kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> service on behalf of</font>

114
00:04:43,639 --> 00:04:48,139
somebody<font color="#E5E5E5"> who we call the resource owner</font>

115
00:04:45,879 --> 00:04:49,220
<font color="#E5E5E5">in other words</font><font color="#CCCCCC"> Oh aww</font><font color="#E5E5E5"> this'</font>

116
00:04:48,139 --> 00:04:51,349
fundamentally<font color="#E5E5E5"> not really an</font>

117
00:04:49,220 --> 00:04:54,110
authorization or authentication<font color="#E5E5E5"> protocol</font>

118
00:04:51,349 --> 00:04:56,530
it is<font color="#CCCCCC"> a delegation protocol Oh auth is</font>

119
00:04:54,110 --> 00:05:00,710
all about delegating<font color="#CCCCCC"> a right of access</font>

120
00:04:56,530 --> 00:05:04,729
<font color="#E5E5E5">that lets you allow a piece of software</font>

121
00:05:00,710 --> 00:05:08,599
<font color="#E5E5E5">allow an</font><font color="#CCCCCC"> application to access something</font>

122
00:05:04,729 --> 00:05:10,190
on your<font color="#E5E5E5"> behalf</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> fundamentally that is</font>

123
00:05:08,599 --> 00:05:11,690
the design and<font color="#CCCCCC"> goal of OAuth</font><font color="#E5E5E5"> it's not</font>

124
00:05:10,190 --> 00:05:12,500
about authentication it's not about

125
00:05:11,690 --> 00:05:14,509
authorization

126
00:05:12,500 --> 00:05:18,050
it's about delegating<font color="#E5E5E5"> a</font><font color="#CCCCCC"> right of</font>

127
00:05:14,509 --> 00:05:20,120
security<font color="#CCCCCC"> Authority and that fundamental</font>

128
00:05:18,050 --> 00:05:22,280
understanding will help<font color="#CCCCCC"> you see kind of</font>

129
00:05:20,120 --> 00:05:25,069
where<font color="#CCCCCC"> our fits in the entire sort of</font>

130
00:05:22,280 --> 00:05:27,799
large stack<font color="#CCCCCC"> of security protocols out</font>

131
00:05:25,069 --> 00:05:29,150
there in in kind of<font color="#E5E5E5"> the wider world so</font>

132
00:05:27,800 --> 00:05:31,370
these are the different players<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font>

133
00:05:29,150 --> 00:05:32,810
<font color="#CCCCCC">have involved and I</font><font color="#E5E5E5"> realize the text is</font>

134
00:05:31,370 --> 00:05:34,610
kind of<font color="#E5E5E5"> small</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> that slide</font>

135
00:05:32,810 --> 00:05:36,319
unfortunately it does get shrink down

136
00:05:34,610 --> 00:05:37,310
but you've got access<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> PDFs if you</font>

137
00:05:36,319 --> 00:05:40,069
want to see these<font color="#E5E5E5"> and I'll point these</font>

138
00:05:37,310 --> 00:05:41,750
out<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> we've got a resource owner</font>

139
00:05:40,069 --> 00:05:43,669
an authorization server a client and a

140
00:05:41,750 --> 00:05:46,279
protected<font color="#CCCCCC"> resource</font><font color="#E5E5E5"> now all of these</font>

141
00:05:43,669 --> 00:05:48,318
<font color="#E5E5E5">words mean things</font><font color="#CCCCCC"> in the real</font><font color="#E5E5E5"> world but</font>

142
00:05:46,279 --> 00:05:51,710
they mean something<font color="#CCCCCC"> very specific</font><font color="#E5E5E5"> in the</font>

143
00:05:48,319 --> 00:05:54,259
OAuth space so the resource owner<font color="#E5E5E5"> is an</font>

144
00:05:51,710 --> 00:05:55,940
entity<font color="#E5E5E5"> usually a person but not always a</font>

145
00:05:54,259 --> 00:05:58,130
person it could<font color="#E5E5E5"> be sort of a logical</font>

146
00:05:55,940 --> 00:06:00,740
<font color="#CCCCCC">entity</font><font color="#E5E5E5"> but usually we're gonna say it's</font>

147
00:05:58,130 --> 00:06:02,990
a person<font color="#CCCCCC"> that they</font><font color="#E5E5E5"> have access to some</font>

148
00:06:00,740 --> 00:06:05,120
resources<font color="#E5E5E5"> a P I now that</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font>

149
00:06:02,990 --> 00:06:06,949
resource<font color="#CCCCCC"> that's about them and often it</font>

150
00:06:05,120 --> 00:06:08,840
is so this is like my<font color="#E5E5E5"> account</font>

151
00:06:06,949 --> 00:06:10,729
information<font color="#E5E5E5"> my time line my photos</font>

152
00:06:08,840 --> 00:06:12,650
whatever kind of example<font color="#CCCCCC"> you want to do</font>

153
00:06:10,729 --> 00:06:15,378
or it could<font color="#CCCCCC"> just</font><font color="#E5E5E5"> be something that I</font>

154
00:06:12,650 --> 00:06:17,568
just<font color="#CCCCCC"> have</font><font color="#E5E5E5"> access to you know say I'm</font>

155
00:06:15,379 --> 00:06:20,330
<font color="#CCCCCC">working in HR and I have</font><font color="#E5E5E5"> access to</font>

156
00:06:17,569 --> 00:06:22,129
everybody's<font color="#CCCCCC"> time</font><font color="#E5E5E5"> card information</font><font color="#CCCCCC"> that's</font>

157
00:06:20,330 --> 00:06:23,930
a resource<font color="#E5E5E5"> that I have access to</font><font color="#CCCCCC"> even</font>

158
00:06:22,129 --> 00:06:26,150
<font color="#E5E5E5">though it's not necessarily</font><font color="#CCCCCC"> about me</font>

159
00:06:23,930 --> 00:06:27,800
specifically<font color="#E5E5E5"> but importantly what makes</font>

160
00:06:26,150 --> 00:06:29,060
this a resource owner in the OAuth world

161
00:06:27,800 --> 00:06:30,560
it's not<font color="#CCCCCC"> just that they have</font><font color="#E5E5E5"> access</font><font color="#CCCCCC"> to</font>

162
00:06:29,060 --> 00:06:34,219
it but<font color="#E5E5E5"> that they can delegate</font><font color="#CCCCCC"> that</font>

163
00:06:30,560 --> 00:06:36,169
access<font color="#CCCCCC"> so this is the entity who has</font><font color="#E5E5E5"> the</font>

164
00:06:34,219 --> 00:06:38,690
right<font color="#CCCCCC"> to say not only</font><font color="#E5E5E5"> this is something</font>

165
00:06:36,169 --> 00:06:40,698
that<font color="#CCCCCC"> I do</font><font color="#E5E5E5"> but this is something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I</font>

166
00:06:38,690 --> 00:06:43,039
am going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> allow somebody else to do as</font>

167
00:06:40,699 --> 00:06:43,580
well and in general like I said they're

168
00:06:43,039 --> 00:06:44,750
a person<font color="#CCCCCC"> with</font>

169
00:06:43,580 --> 00:06:46,340
access to<font color="#CCCCCC"> a web browser and</font><font color="#E5E5E5"> for</font>

170
00:06:44,750 --> 00:06:47,539
simplification<font color="#CCCCCC"> purposes to start out</font>

171
00:06:46,340 --> 00:06:49,609
we're going<font color="#E5E5E5"> to assume that</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

172
00:06:47,539 --> 00:06:50,990
always the case<font color="#CCCCCC"> we'll go into the</font>

173
00:06:49,610 --> 00:06:54,169
exceptions<font color="#E5E5E5"> for that later on</font>

174
00:06:50,990 --> 00:06:56,419
now the protected resource<font color="#E5E5E5"> is an API now</font>

175
00:06:54,169 --> 00:06:58,370
this can<font color="#E5E5E5"> be any flavor of API that you</font>

176
00:06:56,419 --> 00:07:00,799
want really<font color="#CCCCCC"> authors written around HTTP</font>

177
00:06:58,370 --> 00:07:01,909
but pretty much beyond<font color="#E5E5E5"> that it's kind of</font>

178
00:07:00,800 --> 00:07:03,740
<font color="#E5E5E5">it's kind of up to you</font>

179
00:07:01,909 --> 00:07:06,199
this can be restful this can be soapy

180
00:07:03,740 --> 00:07:07,729
this can be any new kind<font color="#E5E5E5"> of thing</font><font color="#CCCCCC"> that</font>

181
00:07:06,199 --> 00:07:10,219
hasn't<font color="#CCCCCC"> been invented</font><font color="#E5E5E5"> I guess the kids</font>

182
00:07:07,729 --> 00:07:13,068
are doing<font color="#CCCCCC"> Graff api's these days it</font>

183
00:07:10,219 --> 00:07:15,680
really<font color="#E5E5E5"> doesn't care as long as</font><font color="#CCCCCC"> it's an</font>

184
00:07:13,069 --> 00:07:18,139
HTTP kind of resource you can<font color="#E5E5E5"> throw off</font>

185
00:07:15,680 --> 00:07:19,580
at it and it works<font color="#E5E5E5"> pretty well</font><font color="#CCCCCC"> the</font>

186
00:07:18,139 --> 00:07:21,110
important thing<font color="#CCCCCC"> is not</font><font color="#E5E5E5"> only does this</font>

187
00:07:19,580 --> 00:07:23,359
protect things<font color="#E5E5E5"> for the resource owner</font>

188
00:07:21,110 --> 00:07:27,800
<font color="#E5E5E5">but it shares things when the resource</font>

189
00:07:23,360 --> 00:07:29,270
owner says to do so now the term that

190
00:07:27,800 --> 00:07:31,460
really trips a lot<font color="#CCCCCC"> of people up is</font>

191
00:07:29,270 --> 00:07:32,780
<font color="#E5E5E5">client because if you're coming</font><font color="#CCCCCC"> from any</font>

192
00:07:31,460 --> 00:07:34,609
type of<font color="#E5E5E5"> web programming</font><font color="#CCCCCC"> you're probably</font>

193
00:07:32,780 --> 00:07:36,888
thinking<font color="#E5E5E5"> the client is the browser it's</font>

194
00:07:34,610 --> 00:07:39,560
not<font color="#E5E5E5"> and you might also</font><font color="#CCCCCC"> be thinking that</font>

195
00:07:36,889 --> 00:07:41,509
<font color="#E5E5E5">the client is the HTTP client which kind</font>

196
00:07:39,560 --> 00:07:44,810
<font color="#E5E5E5">of is but it also kind of isn't because</font>

197
00:07:41,509 --> 00:07:46,789
an<font color="#E5E5E5"> OAuth HTTP client could actually be a</font>

198
00:07:44,810 --> 00:07:49,639
sorry an OAuth client could in fact be

199
00:07:46,789 --> 00:07:52,699
and canonically usually is an HTTP<font color="#E5E5E5"> web</font>

200
00:07:49,639 --> 00:07:55,190
<font color="#E5E5E5">server so in the OAuth world when we say</font>

201
00:07:52,699 --> 00:07:57,050
client<font color="#E5E5E5"> what we really mean is whatever</font>

202
00:07:55,190 --> 00:07:58,520
<font color="#E5E5E5">piece of software is calling that API</font>

203
00:07:57,050 --> 00:08:00,620
that protected resource that we were

204
00:07:58,520 --> 00:08:03,740
just<font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> the client is</font><font color="#CCCCCC"> whatever</font>

205
00:08:00,620 --> 00:08:04,969
application is consuming that<font color="#E5E5E5"> API now</font>

206
00:08:03,740 --> 00:08:06,620
that<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> necessarily mean that</font>

207
00:08:04,969 --> 00:08:08,779
<font color="#E5E5E5">they're like downloading information</font>

208
00:08:06,620 --> 00:08:11,270
<font color="#E5E5E5">they could be purely pushing information</font>

209
00:08:08,779 --> 00:08:13,580
<font color="#E5E5E5">into the API</font><font color="#CCCCCC"> but they are still the</font>

210
00:08:11,270 --> 00:08:15,799
client of the<font color="#E5E5E5"> API and for OAuth purposes</font>

211
00:08:13,580 --> 00:08:18,258
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> whatever piece of software</font><font color="#E5E5E5"> is</font>

212
00:08:15,800 --> 00:08:19,129
calling<font color="#E5E5E5"> that API that's what we call the</font>

213
00:08:18,259 --> 00:08:22,400
client<font color="#E5E5E5"> all right</font>

214
00:08:19,129 --> 00:08:23,719
so whenever<font color="#CCCCCC"> I say client here that's</font>

215
00:08:22,400 --> 00:08:26,810
what I'm referring<font color="#E5E5E5"> to not necessarily</font>

216
00:08:23,719 --> 00:08:29,750
web browsers not necessarily HTTP<font color="#E5E5E5"> you</font>

217
00:08:26,810 --> 00:08:33,140
know transaction clients<font color="#CCCCCC"> we're the</font>

218
00:08:29,750 --> 00:08:34,610
client of the API<font color="#CCCCCC"> alright this is</font>

219
00:08:33,140 --> 00:08:35,689
fundamentally the<font color="#CCCCCC"> problem that we're</font>

220
00:08:34,610 --> 00:08:38,180
<font color="#CCCCCC">trying to solve</font><font color="#E5E5E5"> like I said it's a</font>

221
00:08:35,690 --> 00:08:40,010
delegation protocol<font color="#CCCCCC"> I as a user want</font>

222
00:08:38,179 --> 00:08:42,348
this piece of<font color="#CCCCCC"> software to</font><font color="#E5E5E5"> go call an API</font>

223
00:08:40,010 --> 00:08:45,410
<font color="#CCCCCC">for me now this</font><font color="#E5E5E5"> is a really</font><font color="#CCCCCC"> old problem</font>

224
00:08:42,349 --> 00:08:47,480
we've<font color="#E5E5E5"> seen this a lot</font><font color="#CCCCCC"> over the last</font>

225
00:08:45,410 --> 00:08:49,430
twenty thirty something years<font color="#E5E5E5"> we've been</font>

226
00:08:47,480 --> 00:08:51,290
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> solve this for a very</font><font color="#CCCCCC"> long</font>

227
00:08:49,430 --> 00:08:53,390
time<font color="#E5E5E5"> there's a lot</font><font color="#CCCCCC"> of different ways</font><font color="#E5E5E5"> we</font>

228
00:08:51,290 --> 00:08:54,649
could<font color="#E5E5E5"> do that one</font><font color="#CCCCCC"> of the things that you</font>

229
00:08:53,390 --> 00:08:56,930
see a lot especially in enterprise

230
00:08:54,649 --> 00:08:57,500
<font color="#E5E5E5">spaces is that</font><font color="#CCCCCC"> okay I'm the</font><font color="#E5E5E5"> client</font>

231
00:08:56,930 --> 00:08:59,270
<font color="#CCCCCC">application</font>

232
00:08:57,500 --> 00:09:01,310
so I'm gonna have you<font color="#CCCCCC"> log in to</font><font color="#E5E5E5"> me and</font>

233
00:08:59,270 --> 00:09:02,780
then I'm gonna<font color="#E5E5E5"> take whatever you</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> to</font>

234
00:09:01,310 --> 00:09:05,510
<font color="#E5E5E5">log</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> to me your</font><font color="#CCCCCC"> username</font><font color="#E5E5E5"> and password</font>

235
00:09:02,780 --> 00:09:07,459
<font color="#CCCCCC">and I'm gonna</font><font color="#E5E5E5"> go replay those at some</font>

236
00:09:05,510 --> 00:09:09,590
API and pretend to<font color="#E5E5E5"> be you to go talk</font><font color="#CCCCCC"> to</font>

237
00:09:07,460 --> 00:09:11,630
the API<font color="#CCCCCC"> this works</font><font color="#E5E5E5"> really great in</font>

238
00:09:09,590 --> 00:09:12,890
enterprise spaces<font color="#E5E5E5"> obviously there's kind</font>

239
00:09:11,630 --> 00:09:15,850
of a big<font color="#CCCCCC"> problem here and there's a</font>

240
00:09:12,890 --> 00:09:17,990
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> big problems first off the</font>

241
00:09:15,850 --> 00:09:19,730
well you've got<font color="#E5E5E5"> somebody stealing your</font>

242
00:09:17,990 --> 00:09:21,890
keys<font color="#E5E5E5"> so you've got an</font><font color="#CCCCCC"> application that's</font>

243
00:09:19,730 --> 00:09:26,950
impersonating you going off<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> other</font>

244
00:09:21,890 --> 00:09:26,949
side and when that request

245
00:09:27,070 --> 00:09:32,120
yeah that's useless<font color="#CCCCCC"> so when that</font><font color="#E5E5E5"> request</font>

246
00:09:30,470 --> 00:09:34,610
comes<font color="#E5E5E5"> into the protected</font><font color="#CCCCCC"> resource in a</font>

247
00:09:32,120 --> 00:09:37,160
case<font color="#E5E5E5"> like this how does that</font><font color="#CCCCCC"> protect a</font>

248
00:09:34,610 --> 00:09:40,430
resource<font color="#E5E5E5"> know the difference between me</font>

249
00:09:37,160 --> 00:09:41,959
logging in<font color="#E5E5E5"> directly as a user or a piece</font>

250
00:09:40,430 --> 00:09:44,989
of<font color="#E5E5E5"> software logging in to do something</font>

251
00:09:41,960 --> 00:09:46,280
<font color="#CCCCCC">for me</font><font color="#E5E5E5"> it doesn't because the only thing</font>

252
00:09:44,990 --> 00:09:48,350
in<font color="#E5E5E5"> this model that</font><font color="#CCCCCC"> the protected</font>

253
00:09:46,280 --> 00:09:49,490
resource<font color="#CCCCCC"> can tell is that</font><font color="#E5E5E5"> somebody</font>

254
00:09:48,350 --> 00:09:51,470
showed up with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> username and password</font>

255
00:09:49,490 --> 00:09:53,900
<font color="#CCCCCC">and that maps to a particular account</font>

256
00:09:51,470 --> 00:09:56,030
<font color="#E5E5E5">this is fully impersonating me as a user</font>

257
00:09:53,900 --> 00:09:58,280
which means that this client application

258
00:09:56,030 --> 00:10:00,819
can do anything<font color="#CCCCCC"> that is possible</font><font color="#E5E5E5"> on that</font>

259
00:09:58,280 --> 00:10:03,500
API for me whether<font color="#E5E5E5"> I wanted it to</font><font color="#CCCCCC"> or not</font>

260
00:10:00,820 --> 00:10:06,140
<font color="#E5E5E5">there's nothing</font><font color="#CCCCCC"> that I can do as a user</font>

261
00:10:03,500 --> 00:10:08,300
<font color="#E5E5E5">as a resource owner to limit that access</font>

262
00:10:06,140 --> 00:10:10,850
<font color="#E5E5E5">and say I want to turn off access for</font>

263
00:10:08,300 --> 00:10:13,339
<font color="#CCCCCC">that</font><font color="#E5E5E5"> well pretty much my</font><font color="#CCCCCC"> only option is</font>

264
00:10:10,850 --> 00:10:14,980
to<font color="#CCCCCC"> change my</font><font color="#E5E5E5"> password</font><font color="#CCCCCC"> right that's</font><font color="#E5E5E5"> the</font>

265
00:10:13,340 --> 00:10:17,630
only<font color="#CCCCCC"> thing I can do to stop that</font>

266
00:10:14,980 --> 00:10:19,370
<font color="#E5E5E5">application and the thing is if I'm in</font>

267
00:10:17,630 --> 00:10:21,230
<font color="#E5E5E5">an enterprise space and using</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

268
00:10:19,370 --> 00:10:22,760
single passwords and you know you've<font color="#E5E5E5"> got</font>

269
00:10:21,230 --> 00:10:24,950
a big active directory that<font color="#E5E5E5"> everything's</font>

270
00:10:22,760 --> 00:10:26,300
going<font color="#E5E5E5"> through well what's gonna happen</font>

271
00:10:24,950 --> 00:10:27,710
is the<font color="#CCCCCC"> next time I log into that</font>

272
00:10:26,300 --> 00:10:29,240
<font color="#CCCCCC">application it's</font><font color="#E5E5E5"> gonna get my new</font>

273
00:10:27,710 --> 00:10:31,940
<font color="#CCCCCC">password and it can go call the api's</font>

274
00:10:29,240 --> 00:10:35,060
for me again even though I didn't ask it

275
00:10:31,940 --> 00:10:37,160
to so we're<font color="#E5E5E5"> really stuck</font><font color="#CCCCCC"> with a</font><font color="#E5E5E5"> lot of</font>

276
00:10:35,060 --> 00:10:39,410
<font color="#E5E5E5">problems</font><font color="#CCCCCC"> here but it's it's functional</font>

277
00:10:37,160 --> 00:10:40,640
<font color="#E5E5E5">and it works a lot of space one of the</font>

278
00:10:39,410 --> 00:10:43,730
biggest problems with this though<font color="#E5E5E5"> is</font>

279
00:10:40,640 --> 00:10:46,370
that it doesn't<font color="#CCCCCC"> work if that protected</font>

280
00:10:43,730 --> 00:10:49,280
resource and that<font color="#E5E5E5"> client don't speak to</font>

281
00:10:46,370 --> 00:10:51,050
the same<font color="#E5E5E5"> account so say I'm logging</font><font color="#CCCCCC"> into</font>

282
00:10:49,280 --> 00:10:54,050
<font color="#E5E5E5">something over in Google and they want</font>

283
00:10:51,050 --> 00:10:55,910
<font color="#E5E5E5">to call something over</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> Yahoo my</font>

284
00:10:54,050 --> 00:10:57,530
passwords<font color="#E5E5E5"> not necessarily gonna be the</font>

285
00:10:55,910 --> 00:11:00,319
same across those two<font color="#CCCCCC"> services you can't</font>

286
00:10:57,530 --> 00:11:02,589
assume<font color="#CCCCCC"> that they will be so when you</font>

287
00:11:00,320 --> 00:11:05,360
can't steal the keys just<font color="#E5E5E5"> ask for them</font>

288
00:11:02,590 --> 00:11:07,580
we see this<font color="#CCCCCC"> all the time</font><font color="#E5E5E5"> don't we you go</font>

289
00:11:05,360 --> 00:11:09,650
to even like LinkedIn<font color="#E5E5E5"> today it says give</font>

290
00:11:07,580 --> 00:11:11,040
me the<font color="#E5E5E5"> username and password for your</font>

291
00:11:09,650 --> 00:11:13,199
<font color="#CCCCCC">email account and I</font>

292
00:11:11,040 --> 00:11:14,699
I'll be really<font color="#E5E5E5"> good</font><font color="#CCCCCC"> and only download</font>

293
00:11:13,199 --> 00:11:16,589
your contacts and not do all of the

294
00:11:14,699 --> 00:11:19,410
other<font color="#E5E5E5"> wonderful things</font><font color="#CCCCCC"> that I can do</font>

295
00:11:16,589 --> 00:11:20,790
with that<font color="#CCCCCC"> username and password</font><font color="#E5E5E5"> so this</font>

296
00:11:19,410 --> 00:11:22,469
is<font color="#E5E5E5"> really has a lot of the same</font>

297
00:11:20,790 --> 00:11:24,209
drawbacks<font color="#E5E5E5"> as before but it does have the</font>

298
00:11:22,470 --> 00:11:26,160
benefit of this now works across domain

299
00:11:24,209 --> 00:11:29,130
<font color="#CCCCCC">the</font><font color="#E5E5E5"> biggest drawback to this though is</font>

300
00:11:26,160 --> 00:11:32,850
that<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> training users to give</font>

301
00:11:29,130 --> 00:11:36,720
somebody<font color="#E5E5E5"> the password to a service even</font>

302
00:11:32,850 --> 00:11:38,790
<font color="#CCCCCC">if</font><font color="#E5E5E5"> it's not directly</font><font color="#CCCCCC"> related</font><font color="#E5E5E5"> and this</font>

303
00:11:36,720 --> 00:11:42,509
can be a bit<font color="#CCCCCC"> of a problem you can say</font>

304
00:11:38,790 --> 00:11:44,459
right<font color="#E5E5E5"> so what this</font><font color="#CCCCCC"> means is that now</font>

305
00:11:42,509 --> 00:11:47,040
when a<font color="#CCCCCC"> user goes to an attackers</font><font color="#E5E5E5"> website</font>

306
00:11:44,459 --> 00:11:48,508
<font color="#E5E5E5">they say</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> give me</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> username and</font>

307
00:11:47,040 --> 00:11:50,730
<font color="#CCCCCC">password to your email account and I</font>

308
00:11:48,509 --> 00:11:52,500
promise I'll be<font color="#CCCCCC"> really nice</font><font color="#E5E5E5"> and only</font>

309
00:11:50,730 --> 00:11:54,360
download your address book<font color="#E5E5E5"> they're gonna</font>

310
00:11:52,500 --> 00:11:56,339
be like<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> LinkedIn did it and</font>

311
00:11:54,360 --> 00:11:58,440
nothing bad<font color="#CCCCCC"> happened and</font><font color="#E5E5E5"> Facebook did it</font>

312
00:11:56,339 --> 00:12:01,290
and nothing bad happened<font color="#CCCCCC"> so sure I'm</font>

313
00:11:58,440 --> 00:12:03,540
<font color="#E5E5E5">gonna go you know type it into here and</font>

314
00:12:01,290 --> 00:12:06,060
nothing bad will happen<font color="#E5E5E5"> because we're</font>

315
00:12:03,540 --> 00:12:08,130
training<font color="#E5E5E5"> users to do exactly the wrong</font>

316
00:12:06,060 --> 00:12:12,630
<font color="#E5E5E5">behavior</font><font color="#CCCCCC"> in treating their credentials</font>

317
00:12:08,130 --> 00:12:14,639
all<font color="#E5E5E5"> right so what if instead of</font><font color="#CCCCCC"> using</font>

318
00:12:12,630 --> 00:12:16,019
<font color="#E5E5E5">the</font><font color="#CCCCCC"> users</font><font color="#E5E5E5"> password you</font><font color="#CCCCCC"> have a key that's</font>

319
00:12:14,639 --> 00:12:19,529
good for opening<font color="#E5E5E5"> any door</font><font color="#CCCCCC"> that it comes</font>

320
00:12:16,019 --> 00:12:21,420
across<font color="#CCCCCC"> no matter who's knocking and</font><font color="#E5E5E5"> this</font>

321
00:12:19,529 --> 00:12:24,569
is a pattern<font color="#E5E5E5"> we've had for a</font><font color="#CCCCCC"> very long</font>

322
00:12:21,420 --> 00:12:25,920
time<font color="#CCCCCC"> we call</font><font color="#E5E5E5"> this an API key don't we so</font>

323
00:12:24,569 --> 00:12:27,569
the user shows up and they start using

324
00:12:25,920 --> 00:12:31,050
<font color="#E5E5E5">this</font><font color="#CCCCCC"> applications I need to go</font><font color="#E5E5E5"> call this</font>

325
00:12:27,569 --> 00:12:33,209
API on your behalf but instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> me</font>

326
00:12:31,050 --> 00:12:35,219
<font color="#E5E5E5">stealing your password I have a super</font>

327
00:12:33,209 --> 00:12:37,349
powerful password<font color="#E5E5E5"> that's just gonna show</font>

328
00:12:35,220 --> 00:12:39,500
<font color="#CCCCCC">up and it</font><font color="#E5E5E5"> doesn't matter which user I'm</font>

329
00:12:37,350 --> 00:12:41,610
asking for I can get their information

330
00:12:39,500 --> 00:12:42,959
<font color="#E5E5E5">now again this is really functional</font>

331
00:12:41,610 --> 00:12:44,399
within<font color="#E5E5E5"> a</font><font color="#CCCCCC"> single security</font><font color="#E5E5E5"> domain but</font>

332
00:12:42,959 --> 00:12:47,609
again one<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> big problems</font><font color="#CCCCCC"> here is</font>

333
00:12:44,399 --> 00:12:48,779
that it can go access my<font color="#CCCCCC"> information</font>

334
00:12:47,610 --> 00:12:50,339
this application<font color="#CCCCCC"> could</font><font color="#E5E5E5"> go access</font>

335
00:12:48,779 --> 00:12:52,079
<font color="#CCCCCC">information without any input for me</font>

336
00:12:50,339 --> 00:12:54,029
without any even action for me I don't

337
00:12:52,079 --> 00:12:55,620
<font color="#CCCCCC">even</font><font color="#E5E5E5"> have to log</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> application</font>

338
00:12:54,029 --> 00:12:57,300
for it to be able<font color="#E5E5E5"> to trigger</font><font color="#CCCCCC"> that it can</font>

339
00:12:55,620 --> 00:12:57,839
just<font color="#E5E5E5"> go pull all</font><font color="#CCCCCC"> of my stuff</font><font color="#E5E5E5"> whenever it</font>

340
00:12:57,300 --> 00:12:59,639
wants to

341
00:12:57,839 --> 00:13:01,019
whether I<font color="#E5E5E5"> did anything here</font><font color="#CCCCCC"> or not</font><font color="#E5E5E5"> and</font>

342
00:12:59,639 --> 00:13:04,170
<font color="#E5E5E5">again this doesn't really work across</font>

343
00:13:01,019 --> 00:13:06,839
security domains<font color="#E5E5E5"> so we use this all the</font>

344
00:13:04,170 --> 00:13:10,649
<font color="#E5E5E5">time in enterprise spaces even today</font><font color="#CCCCCC"> and</font>

345
00:13:06,839 --> 00:13:13,380
a lot<font color="#CCCCCC"> of web api's kind of</font><font color="#E5E5E5"> use this</font>

346
00:13:10,649 --> 00:13:14,939
pattern<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> but there's a lot</font><font color="#E5E5E5"> of</font>

347
00:13:13,380 --> 00:13:16,709
downsides<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it as well</font><font color="#E5E5E5"> it's also a bit</font>

348
00:13:14,939 --> 00:13:18,660
more<font color="#CCCCCC"> complicated because now I</font><font color="#E5E5E5"> have to</font>

349
00:13:16,709 --> 00:13:20,369
<font color="#E5E5E5">design my API so that</font><font color="#CCCCCC"> you tell me</font><font color="#E5E5E5"> what</font>

350
00:13:18,660 --> 00:13:22,199
user you're asking for and I need to be

351
00:13:20,370 --> 00:13:24,120
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to input</font><font color="#CCCCCC"> that and I have to fully</font>

352
00:13:22,199 --> 00:13:25,219
trust you to<font color="#E5E5E5"> always as the client always</font>

353
00:13:24,120 --> 00:13:28,380
<font color="#E5E5E5">do the right thing</font>

354
00:13:25,220 --> 00:13:30,960
so let's combine a couple<font color="#CCCCCC"> of different</font>

355
00:13:28,380 --> 00:13:32,490
aspects here and instead<font color="#CCCCCC"> of a</font><font color="#E5E5E5"> universal</font>

356
00:13:30,960 --> 00:13:34,830
key that's good for everything<font color="#CCCCCC"> let's</font>

357
00:13:32,490 --> 00:13:38,550
let's create a new<font color="#E5E5E5"> service specific</font>

358
00:13:34,830 --> 00:13:41,070
credential<font color="#E5E5E5"> call it a token and for my</font>

359
00:13:38,550 --> 00:13:45,180
<font color="#E5E5E5">account as the resource owner</font><font color="#CCCCCC"> I'm going</font>

360
00:13:41,070 --> 00:13:46,410
to get a special<font color="#CCCCCC"> password</font><font color="#E5E5E5"> made and I'm</font>

361
00:13:45,180 --> 00:13:48,060
gonna<font color="#E5E5E5"> hand</font><font color="#CCCCCC"> that to the client</font>

362
00:13:46,410 --> 00:13:50,010
application<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> can call the</font>

363
00:13:48,060 --> 00:13:52,140
protected resource<font color="#CCCCCC"> from my behalf so</font>

364
00:13:50,010 --> 00:13:54,330
this is no<font color="#CCCCCC"> longer my regular password</font>

365
00:13:52,140 --> 00:13:56,430
that I used to log in this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a special</font>

366
00:13:54,330 --> 00:13:58,620
<font color="#CCCCCC">password just for calling this API and</font>

367
00:13:56,430 --> 00:14:00,270
we've seen this all<font color="#CCCCCC"> over the</font><font color="#E5E5E5"> place and</font>

368
00:13:58,620 --> 00:14:05,400
this<font color="#CCCCCC"> is really starting to</font><font color="#E5E5E5"> get closer to</font>

369
00:14:00,270 --> 00:14:08,819
<font color="#CCCCCC">what we what</font><font color="#E5E5E5"> we want but it has this has</font>

370
00:14:05,400 --> 00:14:10,680
some drawbacks<font color="#CCCCCC"> too</font><font color="#E5E5E5"> so on the</font><font color="#CCCCCC"> up side</font><font color="#E5E5E5"> the</font>

371
00:14:08,820 --> 00:14:13,590
<font color="#E5E5E5">security model of this is great because</font>

372
00:14:10,680 --> 00:14:14,910
<font color="#CCCCCC">that token maybe I say this token</font><font color="#E5E5E5"> is</font>

373
00:14:13,590 --> 00:14:18,990
only good for read access maybe it's

374
00:14:14,910 --> 00:14:20,430
only<font color="#E5E5E5"> good for an hour but it's oh end</font>

375
00:14:18,990 --> 00:14:21,990
the<font color="#E5E5E5"> particular resource now knows the</font>

376
00:14:20,430 --> 00:14:23,520
<font color="#E5E5E5">difference between me logging in and</font>

377
00:14:21,990 --> 00:14:24,750
this client logging in<font color="#E5E5E5"> on my behalf</font>

378
00:14:23,520 --> 00:14:26,579
because<font color="#E5E5E5"> it's a different credential it</font>

379
00:14:24,750 --> 00:14:28,830
can map those two different security

380
00:14:26,580 --> 00:14:31,760
models<font color="#E5E5E5"> that's really great the biggest</font>

381
00:14:28,830 --> 00:14:33,900
problem here though the usability<font color="#CCCCCC"> sucks</font>

382
00:14:31,760 --> 00:14:35,370
<font color="#CCCCCC">it's really</font><font color="#E5E5E5"> awful</font>

383
00:14:33,900 --> 00:14:36,750
one of the biggest<font color="#CCCCCC"> examples that</font><font color="#E5E5E5"> we had</font>

384
00:14:35,370 --> 00:14:38,300
of<font color="#E5E5E5"> this in the real world was Google</font>

385
00:14:36,750 --> 00:14:40,590
<font color="#E5E5E5">Code anybody here</font><font color="#CCCCCC"> remember Google</font><font color="#E5E5E5"> Code</font>

386
00:14:38,300 --> 00:14:41,699
so Google Code and I'm<font color="#E5E5E5"> dating myself a</font>

387
00:14:40,590 --> 00:14:45,140
little<font color="#E5E5E5"> bit but there's a lot of great</font>

388
00:14:41,700 --> 00:14:47,670
<font color="#E5E5E5">beards in the room so I'm</font><font color="#CCCCCC"> okay and</font>

389
00:14:45,140 --> 00:14:50,699
Google<font color="#CCCCCC"> Code was a subversion hosting</font>

390
00:14:47,670 --> 00:14:53,370
service they later added get when that

391
00:14:50,700 --> 00:14:56,040
was<font color="#E5E5E5"> the cool thing but in order to</font>

392
00:14:53,370 --> 00:14:57,420
access<font color="#E5E5E5"> your subversion repository from</font>

393
00:14:56,040 --> 00:14:59,339
<font color="#E5E5E5">your subversion client instead of</font>

394
00:14:57,420 --> 00:15:02,790
entering<font color="#CCCCCC"> your Google account password</font>

395
00:14:59,340 --> 00:15:05,010
<font color="#E5E5E5">you had to go to a special page and it</font>

396
00:15:02,790 --> 00:15:08,310
was about<font color="#CCCCCC"> three menu layers deep and</font>

397
00:15:05,010 --> 00:15:10,260
generate a service specific password for

398
00:15:08,310 --> 00:15:12,510
your subversion access on Google code

399
00:15:10,260 --> 00:15:14,730
and then copy<font color="#CCCCCC"> and paste that</font><font color="#E5E5E5"> into your</font>

400
00:15:12,510 --> 00:15:17,400
subversion client instead of your normal

401
00:15:14,730 --> 00:15:18,930
<font color="#E5E5E5">Google password and again the security</font>

402
00:15:17,400 --> 00:15:20,280
<font color="#CCCCCC">model of this</font><font color="#E5E5E5"> is great because</font><font color="#CCCCCC"> you know</font>

403
00:15:18,930 --> 00:15:22,079
<font color="#E5E5E5">now you have something</font><font color="#CCCCCC"> that is very</font>

404
00:15:20,280 --> 00:15:23,699
specifically for subversion<font color="#CCCCCC"> you can</font>

405
00:15:22,080 --> 00:15:26,760
rotate<font color="#E5E5E5"> your Google password</font><font color="#CCCCCC"> in this one</font>

406
00:15:23,700 --> 00:15:28,170
then this<font color="#E5E5E5"> other one independently really</font>

407
00:15:26,760 --> 00:15:29,490
really<font color="#E5E5E5"> kind of good stuff this is only</font>

408
00:15:28,170 --> 00:15:30,900
good for subversion they can't go

409
00:15:29,490 --> 00:15:32,970
<font color="#E5E5E5">download your Gmail or anything else</font>

410
00:15:30,900 --> 00:15:35,970
<font color="#E5E5E5">like that really awesome security</font>

411
00:15:32,970 --> 00:15:38,250
profiles<font color="#E5E5E5"> but the problem is developers</font>

412
00:15:35,970 --> 00:15:40,170
still screwed this up<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> time now</font>

413
00:15:38,250 --> 00:15:43,260
our developers this is people like us

414
00:15:40,170 --> 00:15:45,120
like the<font color="#E5E5E5"> Nerds of the Nerds</font><font color="#CCCCCC"> are still</font>

415
00:15:43,260 --> 00:15:46,590
<font color="#E5E5E5">screwing up the usability of</font><font color="#CCCCCC"> this</font>

416
00:15:45,120 --> 00:15:48,210
because it's too<font color="#E5E5E5"> complicated and</font>

417
00:15:46,590 --> 00:15:51,690
<font color="#E5E5E5">technical that should tell you something</font>

418
00:15:48,210 --> 00:15:53,940
<font color="#E5E5E5">about how usable this is would</font><font color="#CCCCCC"> be for an</font>

419
00:15:51,690 --> 00:15:56,100
<font color="#CCCCCC">average user because I hate</font><font color="#E5E5E5"> to break it</font>

420
00:15:53,940 --> 00:15:57,450
<font color="#E5E5E5">to you but we are not average users</font><font color="#CCCCCC"> we</font>

421
00:15:56,100 --> 00:15:59,760
need to remember that when<font color="#E5E5E5"> we're</font>

422
00:15:57,450 --> 00:16:04,320
designing<font color="#E5E5E5"> these</font><font color="#CCCCCC"> systems</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> getting</font>

423
00:15:59,760 --> 00:16:06,660
closer here<font color="#E5E5E5"> and really what I</font><font color="#CCCCCC"> think the</font>

424
00:16:04,320 --> 00:16:09,000
answer<font color="#CCCCCC"> here</font><font color="#E5E5E5"> is that we take the thing</font>

425
00:16:06,660 --> 00:16:09,630
with the good security<font color="#E5E5E5"> practices and we</font>

426
00:16:09,000 --> 00:16:11,850
automate it

427
00:16:09,630 --> 00:16:16,350
we automate it we improve the usability

428
00:16:11,850 --> 00:16:18,720
<font color="#E5E5E5">and we sort of make</font><font color="#CCCCCC"> that part better</font><font color="#E5E5E5"> so</font>

429
00:16:16,350 --> 00:16:21,390
we're gonna do that with a little

430
00:16:18,720 --> 00:16:24,960
<font color="#E5E5E5">protocol called OAuth and in OAuth</font>

431
00:16:21,390 --> 00:16:27,750
<font color="#E5E5E5">you've got this</font><font color="#CCCCCC"> component called the</font>

432
00:16:24,960 --> 00:16:28,830
<font color="#E5E5E5">authorization server</font><font color="#CCCCCC"> now this is added</font>

433
00:16:27,750 --> 00:16:30,330
<font color="#E5E5E5">into the mix we've still got the</font>

434
00:16:28,830 --> 00:16:32,670
resource owner client and protected

435
00:16:30,330 --> 00:16:34,440
resource just<font color="#E5E5E5"> like</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> but we've now</font>

436
00:16:32,670 --> 00:16:36,180
got the<font color="#E5E5E5"> authorization</font><font color="#CCCCCC"> server to kind of</font>

437
00:16:34,440 --> 00:16:39,090
bridge the<font color="#E5E5E5"> gap between all of</font><font color="#CCCCCC"> those and</font>

438
00:16:36,180 --> 00:16:40,560
manage this connection this generates

439
00:16:39,090 --> 00:16:41,700
those<font color="#E5E5E5"> tokens those service specific</font>

440
00:16:40,560 --> 00:16:44,040
credentials that<font color="#E5E5E5"> I talked about before</font>

441
00:16:41,700 --> 00:16:46,070
<font color="#CCCCCC">like this is a special password</font><font color="#E5E5E5"> for this</font>

442
00:16:44,040 --> 00:16:49,530
piece<font color="#CCCCCC"> of</font><font color="#E5E5E5"> software to call this API</font>

443
00:16:46,070 --> 00:16:52,380
that's generated and managed by<font color="#CCCCCC"> the</font>

444
00:16:49,530 --> 00:16:54,390
authorization server<font color="#E5E5E5"> this is also where</font>

445
00:16:52,380 --> 00:16:56,400
the<font color="#E5E5E5"> user locks in where they say yes</font>

446
00:16:54,390 --> 00:16:58,410
this<font color="#E5E5E5"> software can go do this thing and</font>

447
00:16:56,400 --> 00:17:00,360
it manages all of<font color="#CCCCCC"> those authorizations</font>

448
00:16:58,410 --> 00:17:02,280
which means<font color="#E5E5E5"> this can also turn them off</font>

449
00:17:00,360 --> 00:17:03,750
or say this is only good for<font color="#E5E5E5"> reading and</font>

450
00:17:02,280 --> 00:17:07,260
<font color="#E5E5E5">this is good for reading and writing or</font>

451
00:17:03,750 --> 00:17:11,390
you<font color="#CCCCCC"> know whatever other</font><font color="#E5E5E5"> things you need</font>

452
00:17:07,260 --> 00:17:13,170
in<font color="#CCCCCC"> your API design all</font><font color="#E5E5E5"> of that is</font>

453
00:17:11,390 --> 00:17:14,520
represented all of<font color="#CCCCCC"> those</font><font color="#E5E5E5"> rights are</font>

454
00:17:13,170 --> 00:17:16,230
represented in<font color="#E5E5E5"> this thing called the</font>

455
00:17:14,520 --> 00:17:21,450
OAuth token specifically the OAuth

456
00:17:16,230 --> 00:17:24,810
access<font color="#E5E5E5"> token</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a representation of</font>

457
00:17:21,450 --> 00:17:27,330
<font color="#CCCCCC">that triangle</font><font color="#E5E5E5"> of entities so from the</font>

458
00:17:24,810 --> 00:17:29,490
resource owner to<font color="#E5E5E5"> the client</font><font color="#CCCCCC"> for the</font>

459
00:17:27,329 --> 00:17:32,220
protected resource<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> that gets</font>

460
00:17:29,490 --> 00:17:34,860
bundled<font color="#CCCCCC"> up</font><font color="#E5E5E5"> into the token and it's used</font>

461
00:17:32,220 --> 00:17:36,120
by the clients<font color="#E5E5E5"> and so it gets issued by</font>

462
00:17:34,860 --> 00:17:38,879
the clients but the<font color="#CCCCCC"> format's actually</font>

463
00:17:36,120 --> 00:17:41,370
opaque<font color="#E5E5E5"> to the clients so all of these</font>

464
00:17:38,880 --> 00:17:43,110
are<font color="#E5E5E5"> perfectly</font><font color="#CCCCCC"> valid</font><font color="#E5E5E5"> OAuth tokens I get a</font>

465
00:17:41,370 --> 00:17:44,629
lot<font color="#E5E5E5"> of questions from new developers</font>

466
00:17:43,110 --> 00:17:48,090
like what does<font color="#E5E5E5"> it</font><font color="#CCCCCC"> auto can</font><font color="#E5E5E5"> look like</font>

467
00:17:44,630 --> 00:17:50,430
it's kind of whatever you<font color="#E5E5E5"> want really so</font>

468
00:17:48,090 --> 00:17:51,570
I mean the first<font color="#CCCCCC"> one here is just a hex</font>

469
00:17:50,430 --> 00:17:53,399
blob

470
00:17:51,570 --> 00:17:55,500
second<font color="#E5E5E5"> one is a type</font><font color="#CCCCCC"> four UUID so that's</font>

471
00:17:53,399 --> 00:17:58,649
112 bits of entropy if you got a good

472
00:17:55,500 --> 00:18:00,659
random<font color="#E5E5E5"> number generator</font><font color="#CCCCCC"> third one</font><font color="#E5E5E5"> does</font>

473
00:17:58,649 --> 00:18:02,699
anybody recognize what<font color="#CCCCCC"> that third one</font><font color="#E5E5E5"> is</font>

474
00:18:00,659 --> 00:18:04,789
that is a<font color="#CCCCCC"> specific format</font><font color="#E5E5E5"> just yell it</font>

475
00:18:02,700 --> 00:18:04,789
out

476
00:18:05,570 --> 00:18:13,379
it is basics before<font color="#CCCCCC"> you're correct</font><font color="#E5E5E5"> but</font>

477
00:18:08,909 --> 00:18:16,649
beyond that it is<font color="#CCCCCC"> a JWT a JSON web token</font>

478
00:18:13,380 --> 00:18:18,690
will get<font color="#E5E5E5"> we might get more into that</font>

479
00:18:16,649 --> 00:18:20,758
later if we've got time<font color="#CCCCCC"> so what this is</font>

480
00:18:18,690 --> 00:18:23,309
is this is<font color="#CCCCCC"> a structured format that is</font>

481
00:18:20,759 --> 00:18:25,370
<font color="#CCCCCC">basic ste for URL encoded JSON with a</font>

482
00:18:23,309 --> 00:18:28,230
signature applied to it in a sort of

483
00:18:25,370 --> 00:18:30,418
<font color="#E5E5E5">semi-detached mechanism that's the</font><font color="#CCCCCC"> hos a</font>

484
00:18:28,230 --> 00:18:32,460
suite of specifications<font color="#E5E5E5"> and that's</font>

485
00:18:30,419 --> 00:18:34,350
another tutorial<font color="#CCCCCC"> and the last one here</font>

486
00:18:32,460 --> 00:18:37,080
<font color="#CCCCCC">is a high entropy wordless choice so</font>

487
00:18:34,350 --> 00:18:39,779
there's four random words<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> that's</font>

488
00:18:37,080 --> 00:18:44,399
like<font color="#E5E5E5"> 160 something bits of entropy</font>

489
00:18:39,779 --> 00:18:46,529
something on that<font color="#E5E5E5"> I'd forget the funny</font>

490
00:18:44,399 --> 00:18:49,529
thing about this is<font color="#CCCCCC"> that these are</font>

491
00:18:46,529 --> 00:18:51,659
generally secrets like this are

492
00:18:49,529 --> 00:18:53,730
generally meant to be human<font color="#CCCCCC"> memorise</font>

493
00:18:51,659 --> 00:18:55,649
<font color="#CCCCCC">Abul and in OAuth token really</font><font color="#E5E5E5"> isn't</font>

494
00:18:53,730 --> 00:18:57,350
<font color="#E5E5E5">people never really see the token so why</font>

495
00:18:55,649 --> 00:19:00,570
would you<font color="#CCCCCC"> ever use something like that</font>

496
00:18:57,350 --> 00:19:02,730
because you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> ooofff really doesn't</font>

497
00:19:00,570 --> 00:19:07,200
<font color="#CCCCCC">care how off does not care what</font><font color="#E5E5E5"> the</font>

498
00:19:02,730 --> 00:19:09,360
token looks like<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so whoops</font>

499
00:19:07,200 --> 00:19:11,789
forgot to check<font color="#CCCCCC"> ahead on my slides</font><font color="#E5E5E5"> now I</font>

500
00:19:09,360 --> 00:19:14,939
have a question<font color="#E5E5E5"> who here</font><font color="#CCCCCC"> has used</font><font color="#E5E5E5"> OAuth</font>

501
00:19:11,789 --> 00:19:17,549
<font color="#CCCCCC">raised just raise your</font><font color="#E5E5E5"> hand</font><font color="#CCCCCC"> all right</font>

502
00:19:14,940 --> 00:19:20,220
<font color="#E5E5E5">most of the hands</font><font color="#CCCCCC"> went</font><font color="#E5E5E5"> up so who here</font>

503
00:19:17,549 --> 00:19:22,710
has ever used a<font color="#E5E5E5"> facebook application</font><font color="#CCCCCC"> or</font>

504
00:19:20,220 --> 00:19:24,059
logged<font color="#CCCCCC"> into a site with Facebook who</font>

505
00:19:22,710 --> 00:19:27,830
here's ever logged into anything with

506
00:19:24,059 --> 00:19:30,539
Google who here<font color="#E5E5E5"> has ever used Spotify</font>

507
00:19:27,830 --> 00:19:33,960
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> Spotify applications who</font><font color="#E5E5E5"> here's</font>

508
00:19:30,539 --> 00:19:37,590
ever used steam for gaming<font color="#E5E5E5"> okay who here</font>

509
00:19:33,960 --> 00:19:40,200
has a<font color="#CCCCCC"> smartphone well guess what</font>

510
00:19:37,590 --> 00:19:42,658
you've used OAuth<font color="#E5E5E5"> it is literally</font>

511
00:19:40,200 --> 00:19:44,940
everywhere<font color="#CCCCCC"> Oh off to is everywhere</font><font color="#E5E5E5"> on</font>

512
00:19:42,659 --> 00:19:47,279
the web these days<font color="#CCCCCC"> and like a good</font>

513
00:19:44,940 --> 00:19:49,500
security protocol<font color="#E5E5E5"> you usually don't see</font>

514
00:19:47,279 --> 00:19:50,879
it because most<font color="#E5E5E5"> of the time it's just</font>

515
00:19:49,500 --> 00:19:54,240
<font color="#E5E5E5">sitting in the</font><font color="#CCCCCC"> background and doing its</font>

516
00:19:50,879 --> 00:19:56,850
job but if you've ever been<font color="#E5E5E5"> turning on a</font>

517
00:19:54,240 --> 00:19:59,309
new application<font color="#E5E5E5"> or connecting you know a</font>

518
00:19:56,850 --> 00:20:00,870
native app to a to an account or

519
00:19:59,309 --> 00:20:02,100
<font color="#CCCCCC">something like that</font><font color="#E5E5E5"> and you've seen</font>

520
00:20:00,870 --> 00:20:04,289
<font color="#E5E5E5">something like this this type of</font>

521
00:20:02,100 --> 00:20:05,070
approval<font color="#CCCCCC"> screen that says hey there's</font>

522
00:20:04,289 --> 00:20:08,908
the thing that

523
00:20:05,070 --> 00:20:10,678
to go do<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> chances are you're</font><font color="#CCCCCC"> using</font>

524
00:20:08,909 --> 00:20:12,570
OAuth and if you're not<font color="#E5E5E5"> using OAuth</font>

525
00:20:10,679 --> 00:20:14,190
you're probably using<font color="#CCCCCC"> something that</font>

526
00:20:12,570 --> 00:20:16,519
should<font color="#CCCCCC"> be running</font><font color="#E5E5E5"> OAuth but thinks</font>

527
00:20:14,190 --> 00:20:18,840
they're cleverer than the<font color="#CCCCCC"> ITF and</font>

528
00:20:16,519 --> 00:20:21,090
probably has some big<font color="#E5E5E5"> security holes</font>

529
00:20:18,840 --> 00:20:23,939
<font color="#E5E5E5">which has an independent</font><font color="#CCCCCC"> consultant if</font>

530
00:20:21,090 --> 00:20:29,189
you find<font color="#E5E5E5"> one of those call me because</font>

531
00:20:23,940 --> 00:20:33,110
that's fun work<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right now a brief</font>

532
00:20:29,190 --> 00:20:36,149
history of<font color="#CCCCCC"> OAuth 2</font><font color="#E5E5E5"> now back in 2006</font>

533
00:20:33,110 --> 00:20:39,000
<font color="#E5E5E5">everybody was using passwords to get to</font>

534
00:20:36,149 --> 00:20:40,049
API<font color="#E5E5E5"> HTTP basic right if anybody</font><font color="#CCCCCC"> hears</font>

535
00:20:39,000 --> 00:20:42,450
from<font color="#E5E5E5"> the HTTP auth</font>

536
00:20:40,049 --> 00:20:43,799
<font color="#E5E5E5">I'm sorry I'm gonna say how bad</font><font color="#CCCCCC"> eh to be</font>

537
00:20:42,450 --> 00:20:46,500
basic is<font color="#E5E5E5"> though you probably already</font>

538
00:20:43,799 --> 00:20:49,408
know that so the<font color="#CCCCCC"> whole idea behind h-2b</font>

539
00:20:46,500 --> 00:20:51,720
basic was that you know hey we've got

540
00:20:49,409 --> 00:20:53,399
<font color="#E5E5E5">this great web protocol we need some way</font>

541
00:20:51,720 --> 00:20:54,659
to<font color="#CCCCCC"> authenticate it</font><font color="#E5E5E5"> let's use usernames</font>

542
00:20:53,399 --> 00:20:57,570
and passwords because we use<font color="#E5E5E5"> that for</font>

543
00:20:54,659 --> 00:20:59,549
<font color="#E5E5E5">everything else awesome problem</font><font color="#CCCCCC"> here is</font>

544
00:20:57,570 --> 00:21:01,379
that that allows for and it<font color="#CCCCCC"> really kind</font>

545
00:20:59,549 --> 00:21:03,600
of encourages this kind of impersonation

546
00:21:01,379 --> 00:21:06,480
<font color="#E5E5E5">setup like we were talking</font><font color="#CCCCCC"> about before</font>

547
00:21:03,600 --> 00:21:08,759
<font color="#CCCCCC">and so it was really all about</font><font color="#E5E5E5"> the you</font>

548
00:21:06,480 --> 00:21:12,389
know<font color="#E5E5E5"> you give me your password</font><font color="#CCCCCC"> I promise</font>

549
00:21:08,759 --> 00:21:15,389
I'll be nice<font color="#E5E5E5"> and I will</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> call that API</font>

550
00:21:12,389 --> 00:21:16,709
for<font color="#E5E5E5"> you and a couple of</font><font color="#CCCCCC"> Internet</font>

551
00:21:15,389 --> 00:21:18,479
<font color="#E5E5E5">companies came up with proprietary</font>

552
00:21:16,710 --> 00:21:20,159
solutions for delegated access<font color="#E5E5E5"> we had</font>

553
00:21:18,480 --> 00:21:25,110
<font color="#CCCCCC">dbo thoughts of and a handful</font><font color="#E5E5E5"> of others</font>

554
00:21:20,159 --> 00:21:26,490
and and<font color="#CCCCCC"> also remember back</font><font color="#E5E5E5"> 2006 was 12</font>

555
00:21:25,110 --> 00:21:29,129
years<font color="#E5E5E5"> ago</font><font color="#CCCCCC"> but remember what the internet</font>

556
00:21:26,490 --> 00:21:33,419
looked like back then<font color="#E5E5E5"> myspace was the</font>

557
00:21:29,129 --> 00:21:35,340
top site the iPhone wasn't out yet<font color="#CCCCCC"> or</font><font color="#E5E5E5"> it</font>

558
00:21:33,419 --> 00:21:36,990
<font color="#E5E5E5">sort of came out but the</font><font color="#CCCCCC"> App Store</font>

559
00:21:35,340 --> 00:21:40,470
wasn't there yet so<font color="#E5E5E5"> imagine a</font><font color="#CCCCCC"> smartphone</font>

560
00:21:36,990 --> 00:21:42,480
<font color="#E5E5E5">with no apps it's really weird to</font><font color="#CCCCCC"> think</font>

561
00:21:40,470 --> 00:21:46,019
<font color="#E5E5E5">of that right</font><font color="#CCCCCC"> Android was still a couple</font>

562
00:21:42,480 --> 00:21:47,820
<font color="#E5E5E5">years off it was the internet was a</font>

563
00:21:46,019 --> 00:21:51,779
really kind<font color="#E5E5E5"> of different</font><font color="#CCCCCC"> place</font><font color="#E5E5E5"> 12 years</font>

564
00:21:47,820 --> 00:21:54,418
<font color="#CCCCCC">ago and so back then</font><font color="#E5E5E5"> we had a couple of</font>

565
00:21:51,779 --> 00:21:56,700
small<font color="#E5E5E5"> sites one was Magnolia</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> start-up</font>

566
00:21:54,419 --> 00:21:59,340
which has since<font color="#CCCCCC"> evaporated</font><font color="#E5E5E5"> the other was</font>

567
00:21:56,700 --> 00:22:01,169
this little<font color="#E5E5E5"> social messaging platform</font>

568
00:21:59,340 --> 00:22:02,340
called Twitter or something<font color="#CCCCCC"> like that I</font>

569
00:22:01,169 --> 00:22:04,110
<font color="#E5E5E5">think they're still</font><font color="#CCCCCC"> around</font>

570
00:22:02,340 --> 00:22:05,879
they got together<font color="#E5E5E5"> and they're like hey</font>

571
00:22:04,110 --> 00:22:07,889
we've got a cool<font color="#E5E5E5"> thing you've got a cool</font>

572
00:22:05,879 --> 00:22:10,019
<font color="#E5E5E5">thing we want to plug our cool things</font>

573
00:22:07,889 --> 00:22:12,149
together<font color="#E5E5E5"> problem is that they were both</font>

574
00:22:10,019 --> 00:22:14,850
looking<font color="#E5E5E5"> at using open ID for login</font><font color="#CCCCCC"> now</font>

575
00:22:12,149 --> 00:22:16,518
open ID is a federated identity protocol

576
00:22:14,850 --> 00:22:18,360
not the topic<font color="#CCCCCC"> of today's conversation</font>

577
00:22:16,519 --> 00:22:19,290
<font color="#E5E5E5">but</font>

578
00:22:18,360 --> 00:22:21,689
means that there<font color="#E5E5E5"> is no user</font>

579
00:22:19,290 --> 00:22:24,330
<font color="#CCCCCC">name/password so to get to the</font><font color="#E5E5E5"> Magnolia</font>

580
00:22:21,690 --> 00:22:26,340
<font color="#CCCCCC">API there was no</font><font color="#E5E5E5"> user name and password</font>

581
00:22:24,330 --> 00:22:28,260
that<font color="#E5E5E5"> you could</font><font color="#CCCCCC"> present and by their very</font>

582
00:22:26,340 --> 00:22:31,020
<font color="#E5E5E5">design federated identity protocols</font>

583
00:22:28,260 --> 00:22:34,620
<font color="#E5E5E5">don't allow you to replay them that's a</font>

584
00:22:31,020 --> 00:22:36,840
really good<font color="#E5E5E5"> security benefit so neither</font>

585
00:22:34,620 --> 00:22:40,020
<font color="#E5E5E5">of them wanted</font><font color="#CCCCCC"> to really build up their</font>

586
00:22:36,840 --> 00:22:41,100
<font color="#CCCCCC">own additional proprietary protocol so</font>

587
00:22:40,020 --> 00:22:42,480
they<font color="#E5E5E5"> thought you know what we're gonna</font>

588
00:22:41,100 --> 00:22:44,250
get<font color="#CCCCCC"> together we're gonna talk to a</font><font color="#E5E5E5"> bunch</font>

589
00:22:42,480 --> 00:22:46,860
of interested people<font color="#E5E5E5"> and we're going</font><font color="#CCCCCC"> to</font>

590
00:22:44,250 --> 00:22:50,280
create a standard that a bunch of us can

591
00:22:46,860 --> 00:22:51,750
<font color="#E5E5E5">use and that</font><font color="#CCCCCC"> was oauth 1.0 no formal</font>

592
00:22:50,280 --> 00:22:54,210
standards body just a bunch of smart

593
00:22:51,750 --> 00:22:55,590
nerds in a back room<font color="#CCCCCC"> a toss conn</font><font color="#E5E5E5"> came up</font>

594
00:22:54,210 --> 00:22:56,940
with<font color="#E5E5E5"> this document</font><font color="#CCCCCC"> published it out on</font>

595
00:22:55,590 --> 00:22:58,949
the web<font color="#E5E5E5"> and said hey here's</font><font color="#CCCCCC"> the thing</font>

596
00:22:56,940 --> 00:23:00,300
<font color="#E5E5E5">and that's what usually happens when a</font>

597
00:22:58,950 --> 00:23:02,220
bunch<font color="#E5E5E5"> of smart nerds get</font><font color="#CCCCCC"> together in a</font>

598
00:23:00,300 --> 00:23:03,750
back room<font color="#CCCCCC"> they publish it and almost</font>

599
00:23:02,220 --> 00:23:05,880
<font color="#E5E5E5">immediately a session fixation attack</font>

600
00:23:03,750 --> 00:23:09,630
was found in the baked<font color="#E5E5E5"> into</font><font color="#CCCCCC"> the protocol</font>

601
00:23:05,880 --> 00:23:12,840
<font color="#E5E5E5">and the inscrutably named</font><font color="#CCCCCC"> Olaf 100a was</font>

602
00:23:09,630 --> 00:23:15,090
released right after that thing is

603
00:23:12,840 --> 00:23:18,840
though<font color="#E5E5E5"> this actually worked</font><font color="#CCCCCC"> pretty well</font>

604
00:23:15,090 --> 00:23:21,270
and pretty<font color="#E5E5E5"> soon</font><font color="#CCCCCC"> a lot of people started</font>

605
00:23:18,840 --> 00:23:22,290
to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and people decided you know</font>

606
00:23:21,270 --> 00:23:24,060
what we're going<font color="#E5E5E5"> to kind of get this</font>

607
00:23:22,290 --> 00:23:25,620
together<font color="#E5E5E5"> clean up the language a little</font>

608
00:23:24,060 --> 00:23:30,780
<font color="#E5E5E5">bit and it did get published here in the</font>

609
00:23:25,620 --> 00:23:34,290
ITF as RFC 58 49<font color="#E5E5E5"> so people start using</font>

610
00:23:30,780 --> 00:23:37,530
this<font color="#E5E5E5"> thing it solves a</font><font color="#CCCCCC"> problem it solves</font>

611
00:23:34,290 --> 00:23:40,590
a very real problem back in 2006 2008

612
00:23:37,530 --> 00:23:42,840
<font color="#CCCCCC">this</font><font color="#E5E5E5"> time frame the sort of API economy</font>

613
00:23:40,590 --> 00:23:44,100
<font color="#CCCCCC">restful design of</font><font color="#E5E5E5"> API is all this other</font>

614
00:23:42,840 --> 00:23:46,800
stuff was really<font color="#E5E5E5"> starting to come online</font>

615
00:23:44,100 --> 00:23:49,379
<font color="#E5E5E5">mobile apps we're starting to maybe look</font>

616
00:23:46,800 --> 00:23:51,600
like they might be<font color="#E5E5E5"> a thing and so this</font>

617
00:23:49,380 --> 00:23:54,000
solved a<font color="#CCCCCC"> very real problem that</font><font color="#E5E5E5"> people</font>

618
00:23:51,600 --> 00:23:57,179
had in<font color="#CCCCCC"> a way that was you know elegant</font>

619
00:23:54,000 --> 00:24:00,240
and fairly<font color="#CCCCCC"> usable for most cases</font><font color="#E5E5E5"> so much</font>

620
00:23:57,180 --> 00:24:02,070
so that<font color="#E5E5E5"> in something</font><font color="#CCCCCC"> that usually</font>

621
00:24:00,240 --> 00:24:03,480
<font color="#E5E5E5">doesn't happen and as I'm now</font><font color="#CCCCCC"> I'm</font>

622
00:24:02,070 --> 00:24:07,230
speaking<font color="#E5E5E5"> to a standards group you guys</font>

623
00:24:03,480 --> 00:24:09,150
know this the big players who already

624
00:24:07,230 --> 00:24:11,070
had their proprietary<font color="#E5E5E5"> solutions said you</font>

625
00:24:09,150 --> 00:24:13,020
know what we don't<font color="#E5E5E5"> want to invest in our</font>

626
00:24:11,070 --> 00:24:14,760
proprietary solution anymore<font color="#E5E5E5"> we're just</font>

627
00:24:13,020 --> 00:24:17,460
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use this standard that</font><font color="#CCCCCC"> a bunch</font>

628
00:24:14,760 --> 00:24:18,990
of<font color="#E5E5E5"> smart nerds came up with instead so</font>

629
00:24:17,460 --> 00:24:21,470
Google and Yahoo and<font color="#CCCCCC"> all of these other</font>

630
00:24:18,990 --> 00:24:24,030
big players and eventually you know

631
00:24:21,470 --> 00:24:25,890
<font color="#E5E5E5">Facebook and all this</font><font color="#CCCCCC"> alongside Twitter</font>

632
00:24:24,030 --> 00:24:28,050
and others<font color="#E5E5E5"> decided you know what we are</font>

633
00:24:25,890 --> 00:24:30,570
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to use this ooofff standard</font>

634
00:24:28,050 --> 00:24:32,010
instead of our<font color="#E5E5E5"> own authorization and</font>

635
00:24:30,570 --> 00:24:34,110
<font color="#E5E5E5">delegation protocols</font>

636
00:24:32,010 --> 00:24:37,470
and that's actually<font color="#E5E5E5"> a really</font><font color="#CCCCCC"> cool</font><font color="#E5E5E5"> thing</font>

637
00:24:34,110 --> 00:24:39,629
<font color="#E5E5E5">and it's something</font><font color="#CCCCCC"> that I think</font><font color="#E5E5E5"> as a</font>

638
00:24:37,470 --> 00:24:42,630
<font color="#E5E5E5">community in the</font><font color="#CCCCCC"> IETF we need to study</font>

639
00:24:39,630 --> 00:24:44,100
<font color="#E5E5E5">more how that happened because that</font>

640
00:24:42,630 --> 00:24:46,110
doesn't<font color="#E5E5E5"> happen nearly often enough</font>

641
00:24:44,100 --> 00:24:47,370
<font color="#CCCCCC">usually the open standard gets put on</font>

642
00:24:46,110 --> 00:24:48,809
the<font color="#CCCCCC"> shelf right next to all of the</font>

643
00:24:47,370 --> 00:24:51,659
proprietary standards that<font color="#E5E5E5"> everybody</font>

644
00:24:48,809 --> 00:24:53,010
else needs<font color="#CCCCCC"> to support</font><font color="#E5E5E5"> so anyway people</font>

645
00:24:51,660 --> 00:24:55,020
start using it<font color="#E5E5E5"> and they start using it</font>

646
00:24:53,010 --> 00:24:56,910
for all kinds<font color="#CCCCCC"> of off-label fun stuff</font>

647
00:24:55,020 --> 00:24:58,410
<font color="#E5E5E5">like native applications that started to</font>

648
00:24:56,910 --> 00:25:00,210
become a<font color="#CCCCCC"> thing it didn't</font><font color="#E5E5E5"> start out as a</font>

649
00:24:58,410 --> 00:25:02,340
thing when a<font color="#E5E5E5"> auth was originally</font>

650
00:25:00,210 --> 00:25:05,100
invented suddenly people<font color="#CCCCCC"> had like</font>

651
00:25:02,340 --> 00:25:06,240
applications on<font color="#E5E5E5"> their phones and Google</font>

652
00:25:05,100 --> 00:25:08,100
came up with some<font color="#E5E5E5"> really</font><font color="#CCCCCC"> interesting</font>

653
00:25:06,240 --> 00:25:10,770
ways to<font color="#E5E5E5"> deal with</font><font color="#CCCCCC"> this in</font><font color="#E5E5E5"> the OAuth</font>

654
00:25:08,100 --> 00:25:12,389
<font color="#CCCCCC">wanto world don't have time to get</font><font color="#E5E5E5"> into</font>

655
00:25:10,770 --> 00:25:14,668
the details right<font color="#E5E5E5"> now ping me after if</font>

656
00:25:12,390 --> 00:25:17,220
<font color="#E5E5E5">you're if you want the</font><font color="#CCCCCC"> details people</font>

657
00:25:14,669 --> 00:25:18,480
<font color="#CCCCCC">started to</font><font color="#E5E5E5"> use this as delegation when</font>

658
00:25:17,220 --> 00:25:19,559
there was no user in the loop which

659
00:25:18,480 --> 00:25:21,150
doesn't make<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> because it's a</font>

660
00:25:19,559 --> 00:25:22,918
delegation protocol but people realize

661
00:25:21,150 --> 00:25:25,230
that<font color="#CCCCCC"> well I'm I can delegate rights to</font>

662
00:25:22,919 --> 00:25:26,850
non person users and<font color="#E5E5E5"> entities and stuff</font>

663
00:25:25,230 --> 00:25:29,250
like that<font color="#E5E5E5"> so I want to use this to be</font>

664
00:25:26,850 --> 00:25:30,959
able<font color="#CCCCCC"> to replace</font><font color="#E5E5E5"> API keys that way my</font>

665
00:25:29,250 --> 00:25:32,730
user facing API<font color="#E5E5E5"> is and mine on user</font>

666
00:25:30,960 --> 00:25:34,530
facing API<font color="#E5E5E5"> is</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> the same structure</font>

667
00:25:32,730 --> 00:25:37,049
<font color="#CCCCCC">it's a lot</font><font color="#E5E5E5"> of value to</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> from an</font>

668
00:25:34,530 --> 00:25:38,970
architecture perspective<font color="#E5E5E5"> so they started</font>

669
00:25:37,049 --> 00:25:41,820
to<font color="#CCCCCC"> use OAuth</font><font color="#E5E5E5"> in ways that it was never</font>

670
00:25:38,970 --> 00:25:43,500
<font color="#E5E5E5">intended and I</font><font color="#CCCCCC"> walk made a lot of</font>

671
00:25:41,820 --> 00:25:44,879
<font color="#E5E5E5">assumptions</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> you know key placement</font>

672
00:25:43,500 --> 00:25:47,040
and wealth one made a lot<font color="#E5E5E5"> of assumptions</font>

673
00:25:44,880 --> 00:25:49,590
<font color="#CCCCCC">about</font><font color="#E5E5E5"> key</font><font color="#CCCCCC"> placement</font><font color="#E5E5E5"> so you ended up with</font>

674
00:25:47,040 --> 00:25:51,928
people distributing it in ways that<font color="#CCCCCC"> it</font>

675
00:25:49,590 --> 00:25:54,330
was never meant to so that brings us<font color="#CCCCCC"> to</font>

676
00:25:51,929 --> 00:25:55,770
version<font color="#E5E5E5"> 2.0 and like with any second</font>

677
00:25:54,330 --> 00:25:57,540
version<font color="#E5E5E5"> of the system it's no longer a</font>

678
00:25:55,770 --> 00:26:00,450
protocol<font color="#E5E5E5"> it's now a framework because</font>

679
00:25:57,540 --> 00:26:02,490
<font color="#E5E5E5">that's what we do is nerds right</font><font color="#CCCCCC"> but in</font>

680
00:26:00,450 --> 00:26:05,100
all<font color="#E5E5E5"> honesty</font><font color="#CCCCCC"> it was chopped up in a very</font>

681
00:26:02,490 --> 00:26:07,169
<font color="#E5E5E5">deliberate way so</font><font color="#CCCCCC"> Olaf 1.0 tried to</font>

682
00:26:05,100 --> 00:26:09,600
solve all problems for all use cases<font color="#E5E5E5"> all</font>

683
00:26:07,169 --> 00:26:10,620
in one go<font color="#CCCCCC"> o auth 2.0 said you know what</font>

684
00:26:09,600 --> 00:26:12,750
we're gonna<font color="#E5E5E5"> look at how people are</font>

685
00:26:10,620 --> 00:26:14,850
really<font color="#E5E5E5"> using it and focus on those</font>

686
00:26:12,750 --> 00:26:16,799
specific<font color="#E5E5E5"> problems and we're gonna come</font>

687
00:26:14,850 --> 00:26:18,928
<font color="#CCCCCC">up with patterns that you reuse all of</font>

688
00:26:16,799 --> 00:26:20,850
these components<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> in you know</font>

689
00:26:18,929 --> 00:26:21,720
slightly<font color="#E5E5E5"> different ways so that we can</font>

690
00:26:20,850 --> 00:26:23,820
<font color="#CCCCCC">actually pull this stuff together</font>

691
00:26:21,720 --> 00:26:25,679
<font color="#E5E5E5">removed a lot</font><font color="#CCCCCC"> of the pain points like a</font>

692
00:26:23,820 --> 00:26:29,220
proprietary signing mechanism<font color="#CCCCCC"> whatnot</font>

693
00:26:25,679 --> 00:26:31,679
<font color="#E5E5E5">and that got standardized in RFC 67 49</font>

694
00:26:29,220 --> 00:26:32,760
and 67 50 already it's<font color="#E5E5E5"> two documents</font>

695
00:26:31,679 --> 00:26:35,610
instead of one you can see it's starting

696
00:26:32,760 --> 00:26:37,740
<font color="#CCCCCC">to be modularized more</font><font color="#E5E5E5"> so what this</font>

697
00:26:35,610 --> 00:26:39,149
means<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> ooofff</font><font color="#CCCCCC"> two is not really a</font>

698
00:26:37,740 --> 00:26:41,130
single<font color="#E5E5E5"> protocol you</font><font color="#CCCCCC"> can have two</font>

699
00:26:39,150 --> 00:26:43,169
implementations<font color="#CCCCCC"> of auth - that</font><font color="#E5E5E5"> don't</font>

700
00:26:41,130 --> 00:26:44,610
talk to each<font color="#E5E5E5"> other because they're using</font>

701
00:26:43,169 --> 00:26:45,570
different<font color="#CCCCCC"> parts of the protocol</font>

702
00:26:44,610 --> 00:26:48,600
framework

703
00:26:45,570 --> 00:26:50,399
but you get<font color="#CCCCCC"> a</font><font color="#E5E5E5"> ton of code reuse you get</font>

704
00:26:48,600 --> 00:26:51,959
a ton of pattern reuse so you get a ton

705
00:26:50,400 --> 00:26:53,190
of really<font color="#E5E5E5"> powerful stuff from an</font>

706
00:26:51,960 --> 00:26:55,470
architecture and engineering standpoint

707
00:26:53,190 --> 00:26:57,570
<font color="#CCCCCC">that when you go to solve your one</font>

708
00:26:55,470 --> 00:26:59,700
problem<font color="#CCCCCC"> that uses</font><font color="#E5E5E5"> one part of it well</font>

709
00:26:57,570 --> 00:27:01,169
now there's these other<font color="#E5E5E5"> use cases that</font>

710
00:26:59,700 --> 00:27:03,840
<font color="#E5E5E5">you might be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to pull in for very</font>

711
00:27:01,170 --> 00:27:05,580
small<font color="#CCCCCC"> Delta's and it's kind of a set of</font>

712
00:27:03,840 --> 00:27:06,990
standards that<font color="#E5E5E5"> works across all of these</font>

713
00:27:05,580 --> 00:27:08,610
different use cases instead<font color="#E5E5E5"> of one</font>

714
00:27:06,990 --> 00:27:12,780
standard<font color="#CCCCCC"> that doesn't really</font><font color="#E5E5E5"> fit</font>

715
00:27:08,610 --> 00:27:15,419
anything<font color="#E5E5E5"> quite</font><font color="#CCCCCC"> that well so very briefly</font>

716
00:27:12,780 --> 00:27:17,520
<font color="#CCCCCC">o auth is not</font><font color="#E5E5E5"> defined outside of HTTP</font>

717
00:27:15,420 --> 00:27:19,650
although the<font color="#CCCCCC"> Khitan working group came</font>

718
00:27:17,520 --> 00:27:23,190
<font color="#E5E5E5">up</font><font color="#CCCCCC"> with a gssapi extension that</font><font color="#E5E5E5"> allows</font>

719
00:27:19,650 --> 00:27:25,590
<font color="#CCCCCC">you to</font><font color="#E5E5E5"> do it over</font><font color="#CCCCCC"> lots of non HTTP</font>

720
00:27:23,190 --> 00:27:28,050
protocols the<font color="#E5E5E5"> ACE working group is</font>

721
00:27:25,590 --> 00:27:32,000
<font color="#E5E5E5">working on a way to do OAuth over co-op</font>

722
00:27:28,050 --> 00:27:34,379
<font color="#CCCCCC">it coop</font><font color="#E5E5E5"> rather it is not</font><font color="#CCCCCC"> both</font><font color="#E5E5E5"> it is</font>

723
00:27:32,000 --> 00:27:36,990
<font color="#CCCCCC">Oscar they renamed it do you guys</font>

724
00:27:34,380 --> 00:27:39,060
<font color="#E5E5E5">remember okay</font>

725
00:27:36,990 --> 00:27:40,830
I left a<font color="#CCCCCC"> bug Francesco about this but</font>

726
00:27:39,060 --> 00:27:44,550
there's a version<font color="#E5E5E5"> of OAuth that runs</font>

727
00:27:40,830 --> 00:27:47,280
over<font color="#E5E5E5"> co-op for co-op and core for sort</font>

728
00:27:44,550 --> 00:27:49,350
of<font color="#E5E5E5"> embedded devices kind of stuff and to</font>

729
00:27:47,280 --> 00:27:52,200
the previous<font color="#E5E5E5"> point about what Oh auth is</font>

730
00:27:49,350 --> 00:27:53,699
it is not an authentication<font color="#E5E5E5"> protocol it</font>

731
00:27:52,200 --> 00:27:55,800
is<font color="#CCCCCC"> very definitively not an</font>

732
00:27:53,700 --> 00:27:57,480
authentication protocol it relies on

733
00:27:55,800 --> 00:27:59,220
authentication so the user<font color="#CCCCCC"> has to</font>

734
00:27:57,480 --> 00:28:00,450
<font color="#E5E5E5">authenticate so that that</font><font color="#CCCCCC"> authorization</font>

735
00:27:59,220 --> 00:28:02,010
server knows who everybody<font color="#CCCCCC"> is and</font>

736
00:28:00,450 --> 00:28:03,150
<font color="#CCCCCC">whatnot the client authenticates so</font>

737
00:28:02,010 --> 00:28:04,860
there's<font color="#E5E5E5"> authentication all through it</font>

738
00:28:03,150 --> 00:28:07,170
but authentication is all about

739
00:28:04,860 --> 00:28:08,310
communicating<font color="#E5E5E5"> who the user is and why</font>

740
00:28:07,170 --> 00:28:09,870
they're<font color="#CCCCCC"> there and how sure are you of</font>

741
00:28:08,310 --> 00:28:11,129
all<font color="#E5E5E5"> of this kind of stuff well it</font>

742
00:28:09,870 --> 00:28:12,629
doesn't do any<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> doesn't</font>

743
00:28:11,130 --> 00:28:15,750
<font color="#E5E5E5">communicate any of that it very</font>

744
00:28:12,630 --> 00:28:18,960
explicitly stays out<font color="#CCCCCC"> of that however</font>

745
00:28:15,750 --> 00:28:21,810
<font color="#E5E5E5">ooofff gets used to build authentication</font>

746
00:28:18,960 --> 00:28:24,120
protocols such as<font color="#E5E5E5"> open ID</font><font color="#CCCCCC"> connect which</font>

747
00:28:21,810 --> 00:28:26,580
<font color="#E5E5E5">is built on</font><font color="#CCCCCC"> top of</font><font color="#E5E5E5"> OAuth and so people</font>

748
00:28:24,120 --> 00:28:28,409
<font color="#E5E5E5">using Open ID</font><font color="#CCCCCC"> Connect</font><font color="#E5E5E5"> think they're just</font>

749
00:28:26,580 --> 00:28:29,790
<font color="#CCCCCC">using OAuth where in fact</font><font color="#E5E5E5"> they're using</font>

750
00:28:28,410 --> 00:28:32,520
OAuth plus a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> key components</font>

751
00:28:29,790 --> 00:28:36,210
<font color="#CCCCCC">that makes it into an</font><font color="#E5E5E5"> authentication</font>

752
00:28:32,520 --> 00:28:38,190
protocol excuse me<font color="#E5E5E5"> our</font><font color="#CCCCCC"> authors about</font>

753
00:28:36,210 --> 00:28:39,720
<font color="#E5E5E5">user software delegation not user to</font>

754
00:28:38,190 --> 00:28:41,460
user delegation if you want that you

755
00:28:39,720 --> 00:28:44,400
<font color="#CCCCCC">need to add a few more components the</font>

756
00:28:41,460 --> 00:28:46,590
there's one<font color="#E5E5E5"> standard out there user</font>

757
00:28:44,400 --> 00:28:48,210
<font color="#CCCCCC">manage to</font><font color="#E5E5E5"> access or</font><font color="#CCCCCC"> uma that allows you</font>

758
00:28:46,590 --> 00:28:50,220
to<font color="#E5E5E5"> do that again built on top of OAuth</font>

759
00:28:48,210 --> 00:28:51,990
or auth doesn't give you<font color="#CCCCCC"> authorization</font>

760
00:28:50,220 --> 00:28:54,690
processing this really isn't like sam'l

761
00:28:51,990 --> 00:28:56,850
sorry<font color="#E5E5E5"> not</font><font color="#CCCCCC"> sandals a camel it's also not</font>

762
00:28:54,690 --> 00:28:58,830
<font color="#CCCCCC">like</font><font color="#E5E5E5"> sam'l in that there's not a way to</font>

763
00:28:56,850 --> 00:29:00,600
describe oh when you get this here's how

764
00:28:58,830 --> 00:29:02,460
you process it<font color="#E5E5E5"> and here's these rules to</font>

765
00:29:00,600 --> 00:29:03,899
apply<font color="#E5E5E5"> and stuff like that</font><font color="#CCCCCC"> no authors</font>

766
00:29:02,460 --> 00:29:05,580
<font color="#E5E5E5">really just about carrying that handle</font>

767
00:29:03,899 --> 00:29:07,229
from<font color="#E5E5E5"> one end to the other and what you</font>

768
00:29:05,580 --> 00:29:08,879
do with<font color="#CCCCCC"> that handle ooofff doesn't care</font>

769
00:29:07,230 --> 00:29:10,620
what you<font color="#E5E5E5"> do with that token in order to</font>

770
00:29:08,880 --> 00:29:12,690
<font color="#CCCCCC">interpret it ooofff really</font><font color="#E5E5E5"> doesn't care</font>

771
00:29:10,620 --> 00:29:15,239
<font color="#E5E5E5">there are lots of standard methods</font>

772
00:29:12,690 --> 00:29:16,769
defined and<font color="#E5E5E5"> how you do that but those</font>

773
00:29:15,240 --> 00:29:19,049
really<font color="#E5E5E5"> aren't a lot they're added on to</font>

774
00:29:16,769 --> 00:29:20,909
<font color="#CCCCCC">oauth</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> you said before o</font><font color="#E5E5E5"> auth</font>

775
00:29:19,049 --> 00:29:22,980
doesn't have a token<font color="#E5E5E5"> format but it needs</font>

776
00:29:20,909 --> 00:29:24,269
<font color="#E5E5E5">to have a format</font><font color="#CCCCCC"> that both the</font>

777
00:29:22,980 --> 00:29:26,940
authorization server<font color="#E5E5E5"> and protected</font>

778
00:29:24,269 --> 00:29:27,899
resources can make sense of<font color="#E5E5E5"> even if it's</font>

779
00:29:26,940 --> 00:29:29,279
opaque<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the client it's not</font>

780
00:29:27,899 --> 00:29:31,918
necessarily opaque to everybody in the

781
00:29:29,279 --> 00:29:33,929
system<font color="#E5E5E5"> so there are token formats JSON</font>

782
00:29:31,919 --> 00:29:35,909
web token or<font color="#E5E5E5"> John is one of the most</font>

783
00:29:33,929 --> 00:29:38,700
popular ones out there and it's a useful

784
00:29:35,909 --> 00:29:40,919
common format and OAuth doesn't define

785
00:29:38,700 --> 00:29:44,370
its own cryptographic methods

786
00:29:40,919 --> 00:29:46,830
ooofff 1.0 did there was<font color="#E5E5E5"> this fairly</font>

787
00:29:44,370 --> 00:29:48,330
<font color="#E5E5E5">complex custom</font><font color="#CCCCCC"> signature algorithm</font><font color="#E5E5E5"> that</font>

788
00:29:46,830 --> 00:29:50,279
got applied across all of the<font color="#E5E5E5"> different</font>

789
00:29:48,330 --> 00:29:50,699
<font color="#CCCCCC">HTTP query parameters</font><font color="#E5E5E5"> and stuff like</font>

790
00:29:50,279 --> 00:29:52,110
that

791
00:29:50,700 --> 00:29:53,429
<font color="#CCCCCC">Oh auth - you said you know what that's</font>

792
00:29:52,110 --> 00:29:55,379
<font color="#CCCCCC">the part that people are getting wrong</font>

793
00:29:53,429 --> 00:29:56,700
and<font color="#E5E5E5"> ignoring most of the time and it</font>

794
00:29:55,380 --> 00:29:58,830
also made people<font color="#CCCCCC"> believe that they</font>

795
00:29:56,700 --> 00:30:00,870
didn't need TLS across their HTTP

796
00:29:58,830 --> 00:30:05,129
connections which is of course<font color="#E5E5E5"> idiotic</font>

797
00:30:00,870 --> 00:30:07,018
<font color="#E5E5E5">so in order to avoid all</font><font color="#CCCCCC"> of that o auth</font>

798
00:30:05,130 --> 00:30:09,360
<font color="#E5E5E5">you said you know what we're not getting</font>

799
00:30:07,019 --> 00:30:12,269
<font color="#E5E5E5">into the signature game</font><font color="#CCCCCC"> at least in the</font>

800
00:30:09,360 --> 00:30:16,049
base protocol<font color="#E5E5E5"> so use TLS</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> everything</font>

801
00:30:12,269 --> 00:30:17,460
and go from<font color="#E5E5E5"> there and like we said</font>

802
00:30:16,049 --> 00:30:20,789
before<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not a single protocol</font><font color="#E5E5E5"> I'm</font>

803
00:30:17,460 --> 00:30:21,929
not<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> reiterate</font><font color="#CCCCCC"> that all right deep</font>

804
00:30:20,789 --> 00:30:24,629
breath we're<font color="#E5E5E5"> halfway through</font><font color="#CCCCCC"> how's</font>

805
00:30:21,929 --> 00:30:25,799
everybody doing good all right everybody

806
00:30:24,630 --> 00:30:28,440
checking your email<font color="#E5E5E5"> awesome</font>

807
00:30:25,799 --> 00:30:31,049
now I've<font color="#E5E5E5"> been to these</font><font color="#CCCCCC"> tutorials I know</font>

808
00:30:28,440 --> 00:30:34,320
how it<font color="#E5E5E5"> works and so we are now going to</font>

809
00:30:31,049 --> 00:30:36,809
dive deep<font color="#CCCCCC"> into the canonical</font><font color="#E5E5E5"> flow of</font>

810
00:30:34,320 --> 00:30:39,210
OAuth 2.0<font color="#E5E5E5"> this is the authorization</font><font color="#CCCCCC"> code</font>

811
00:30:36,809 --> 00:30:39,870
flow<font color="#E5E5E5"> these are all the pieces and this</font>

812
00:30:39,210 --> 00:30:43,880
is what it looks like

813
00:30:39,870 --> 00:30:46,049
<font color="#E5E5E5">alright everybody got that awesome</font>

814
00:30:43,880 --> 00:30:48,480
<font color="#CCCCCC">before we get</font><font color="#E5E5E5"> into the details of what</font>

815
00:30:46,049 --> 00:30:50,580
that diagram<font color="#E5E5E5"> looks</font><font color="#CCCCCC"> like you need to</font>

816
00:30:48,480 --> 00:30:51,929
understand that<font color="#E5E5E5"> makes use</font><font color="#CCCCCC"> of two</font>

817
00:30:50,580 --> 00:30:54,299
different<font color="#E5E5E5"> kinds of communication</font><font color="#CCCCCC"> it is</font>

818
00:30:51,929 --> 00:30:55,860
<font color="#CCCCCC">an HTTP based protocol so first off we</font>

819
00:30:54,299 --> 00:30:57,960
have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> back-channel</font><font color="#E5E5E5"> this is just</font>

820
00:30:55,860 --> 00:31:00,149
<font color="#CCCCCC">straight up HTTP calls</font><font color="#E5E5E5"> you make an HTTP</font>

821
00:30:57,960 --> 00:31:02,909
request getting HTTP response<font color="#E5E5E5"> that means</font>

822
00:31:00,149 --> 00:31:05,639
that we've got headers we've got the

823
00:31:02,909 --> 00:31:07,320
body<font color="#E5E5E5"> content we've got you know</font>

824
00:31:05,639 --> 00:31:09,418
different URI parameters<font color="#E5E5E5"> and stuff like</font>

825
00:31:07,320 --> 00:31:11,840
that<font color="#E5E5E5"> different HTTP verbs that we can</font>

826
00:31:09,419 --> 00:31:14,010
use really<font color="#CCCCCC"> really rich</font>

827
00:31:11,840 --> 00:31:16,080
messaging system and<font color="#E5E5E5"> it's directly</font>

828
00:31:14,010 --> 00:31:17,400
between<font color="#E5E5E5"> two components</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> between the</font>

829
00:31:16,080 --> 00:31:19,199
client and<font color="#E5E5E5"> the auth server the</font><font color="#CCCCCC"> client</font>

830
00:31:17,400 --> 00:31:21,420
and the protected<font color="#CCCCCC"> resource</font><font color="#E5E5E5"> this is where</font>

831
00:31:19,200 --> 00:31:23,220
we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of like the</font>

832
00:31:21,420 --> 00:31:25,140
really<font color="#CCCCCC"> secret things that we care about</font>

833
00:31:23,220 --> 00:31:26,940
<font color="#CCCCCC">like those tokens that we were</font><font color="#E5E5E5"> talking</font>

834
00:31:25,140 --> 00:31:28,530
<font color="#E5E5E5">about before</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is where they like to</font>

835
00:31:26,940 --> 00:31:31,200
live<font color="#CCCCCC"> in the back</font><font color="#E5E5E5"> channel talking</font>

836
00:31:28,530 --> 00:31:33,090
directly<font color="#E5E5E5"> between components the front</font>

837
00:31:31,200 --> 00:31:34,200
<font color="#E5E5E5">channel on the other hand is what we do</font>

838
00:31:33,090 --> 00:31:37,290
when<font color="#E5E5E5"> we get a user involved because</font>

839
00:31:34,200 --> 00:31:38,640
notice<font color="#E5E5E5"> in this back channel when the</font>

840
00:31:37,290 --> 00:31:40,649
client is talking to the<font color="#CCCCCC"> HB resource</font>

841
00:31:38,640 --> 00:31:44,790
<font color="#E5E5E5">sorry</font><font color="#CCCCCC"> - the authorization server</font><font color="#E5E5E5"> over</font>

842
00:31:40,650 --> 00:31:46,470
HTTP<font color="#CCCCCC"> the client</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> gonna say like</font><font color="#E5E5E5"> oh I'm</font>

843
00:31:44,790 --> 00:31:48,750
here on behalf of<font color="#E5E5E5"> this user</font><font color="#CCCCCC"> and the</font>

844
00:31:46,470 --> 00:31:50,280
authorization<font color="#CCCCCC"> server well how does</font><font color="#E5E5E5"> it</font>

845
00:31:48,750 --> 00:31:52,830
<font color="#E5E5E5">know that</font><font color="#CCCCCC"> the user is even</font><font color="#E5E5E5"> involved in</font>

846
00:31:50,280 --> 00:31:55,800
that process<font color="#E5E5E5"> used to be we knew because</font>

847
00:31:52,830 --> 00:31:58,710
<font color="#E5E5E5">the user gave their password to the</font>

848
00:31:55,800 --> 00:32:00,750
client<font color="#E5E5E5"> or presumably gave their password</font>

849
00:31:58,710 --> 00:32:02,309
<font color="#E5E5E5">to the call to the client those were</font>

850
00:32:00,750 --> 00:32:06,630
scare quotes<font color="#E5E5E5"> - anybody only listening to</font>

851
00:32:02,309 --> 00:32:08,399
<font color="#CCCCCC">the</font><font color="#E5E5E5"> audio audio stream and in that case</font>

852
00:32:06,630 --> 00:32:11,370
the<font color="#CCCCCC"> clients</font><font color="#E5E5E5"> really just impersonating</font>

853
00:32:08,400 --> 00:32:13,410
<font color="#E5E5E5">the user so you know off what we do is</font>

854
00:32:11,370 --> 00:32:15,809
we use the front<font color="#E5E5E5"> channel we use somebody</font>

855
00:32:13,410 --> 00:32:18,540
sitting<font color="#E5E5E5"> in a web browser</font><font color="#CCCCCC"> to interact</font>

856
00:32:15,809 --> 00:32:19,620
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> authorization server but the</font>

857
00:32:18,540 --> 00:32:21,420
<font color="#CCCCCC">thing is</font><font color="#E5E5E5"> we're no longer talking</font>

858
00:32:19,620 --> 00:32:24,449
directly<font color="#CCCCCC"> between components</font><font color="#E5E5E5"> so how can</font>

859
00:32:21,420 --> 00:32:26,130
<font color="#E5E5E5">we send messages here well a front</font>

860
00:32:24,450 --> 00:32:28,500
channel<font color="#E5E5E5"> requesting response is</font><font color="#CCCCCC"> actually</font>

861
00:32:26,130 --> 00:32:30,660
a stack<font color="#CCCCCC"> of HTTP</font><font color="#E5E5E5"> requests</font><font color="#CCCCCC"> and responses</font>

862
00:32:28,500 --> 00:32:31,890
<font color="#E5E5E5">what it means is that in order for the</font>

863
00:32:30,660 --> 00:32:33,450
client to<font color="#CCCCCC"> send</font><font color="#E5E5E5"> a message to the</font>

864
00:32:31,890 --> 00:32:36,780
authorization<font color="#CCCCCC"> server</font><font color="#E5E5E5"> through the front</font>

865
00:32:33,450 --> 00:32:40,620
<font color="#CCCCCC">channel</font><font color="#E5E5E5"> it sends a redirect</font><font color="#CCCCCC"> to the users</font>

866
00:32:36,780 --> 00:32:42,330
<font color="#E5E5E5">browser to a very specific URL that URL</font>

867
00:32:40,620 --> 00:32:44,760
<font color="#E5E5E5">is hosted at</font><font color="#CCCCCC"> the authorization server</font>

868
00:32:42,330 --> 00:32:46,620
<font color="#CCCCCC">and it's got a bunch of query parameters</font>

869
00:32:44,760 --> 00:32:48,690
on it that are<font color="#E5E5E5"> set</font><font color="#CCCCCC"> by the client</font>

870
00:32:46,620 --> 00:32:51,059
now that redirect goes to the browser

871
00:32:48,690 --> 00:32:53,100
and then<font color="#E5E5E5"> the browser not</font><font color="#CCCCCC"> the client</font>

872
00:32:51,059 --> 00:32:55,139
makes the HTTP<font color="#E5E5E5"> request back</font><font color="#CCCCCC"> to the</font>

873
00:32:53,100 --> 00:32:57,809
<font color="#E5E5E5">authorization server</font><font color="#CCCCCC"> that means we now</font>

874
00:32:55,140 --> 00:32:59,190
have<font color="#CCCCCC"> an HTTP channel between the</font>

875
00:32:57,809 --> 00:33:01,290
resource<font color="#E5E5E5"> owner and the</font><font color="#CCCCCC"> authorization</font>

876
00:32:59,190 --> 00:33:03,510
<font color="#CCCCCC">server the client is</font><font color="#E5E5E5"> not part of that</font>

877
00:33:01,290 --> 00:33:05,760
<font color="#E5E5E5">which means that the resource owner they</font>

878
00:33:03,510 --> 00:33:07,620
can now authenticate we can do<font color="#E5E5E5"> you know</font>

879
00:33:05,760 --> 00:33:10,260
all sorts<font color="#CCCCCC"> of session mapping and</font>

880
00:33:07,620 --> 00:33:11,639
heuristic evaluation of security<font color="#E5E5E5"> and all</font>

881
00:33:10,260 --> 00:33:15,750
of<font color="#CCCCCC"> that other good</font><font color="#E5E5E5"> stuff that we</font><font color="#CCCCCC"> like to</font>

882
00:33:11,640 --> 00:33:17,309
<font color="#E5E5E5">do on interactive HTTP sessions without</font>

883
00:33:15,750 --> 00:33:18,929
involving the<font color="#E5E5E5"> client directly so none of</font>

884
00:33:17,309 --> 00:33:21,809
<font color="#CCCCCC">that leads to the client that's all</font>

885
00:33:18,929 --> 00:33:23,059
really great<font color="#CCCCCC"> it also</font><font color="#E5E5E5"> means that now</font><font color="#CCCCCC"> that</font>

886
00:33:21,809 --> 00:33:25,049
we are between<font color="#E5E5E5"> the browser and the</font>

887
00:33:23,059 --> 00:33:26,309
<font color="#E5E5E5">authorization</font><font color="#CCCCCC"> server we can do multiple</font>

888
00:33:25,049 --> 00:33:27,749
requests you know we can redirect

889
00:33:26,309 --> 00:33:29,039
internally we can go to off<font color="#E5E5E5"> to other</font>

890
00:33:27,749 --> 00:33:31,289
sites<font color="#E5E5E5"> and then come</font><font color="#CCCCCC"> back and all this</font>

891
00:33:29,039 --> 00:33:32,879
other stuff<font color="#E5E5E5"> now how does the</font>

892
00:33:31,289 --> 00:33:34,049
authorization server<font color="#E5E5E5"> get any messages</font>

893
00:33:32,879 --> 00:33:34,980
from the client<font color="#CCCCCC"> in this if they're</font>

894
00:33:34,049 --> 00:33:37,860
coming<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the browser</font>

895
00:33:34,980 --> 00:33:39,809
well that<font color="#CCCCCC"> URL that the client redirected</font>

896
00:33:37,860 --> 00:33:41,850
us to has a bunch of query parameters on

897
00:33:39,809 --> 00:33:44,519
it that have values on those query

898
00:33:41,850 --> 00:33:46,139
parameters that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> then received and</font>

899
00:33:44,519 --> 00:33:48,450
interpreted<font color="#E5E5E5"> by the authorization</font><font color="#CCCCCC"> server</font>

900
00:33:46,139 --> 00:33:50,158
<font color="#E5E5E5">so you're</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> just going to</font><font color="#CCCCCC"> a fixed URL</font>

901
00:33:48,450 --> 00:33:51,929
<font color="#E5E5E5">you're going to a URL with a bunch of</font>

902
00:33:50,159 --> 00:33:53,309
<font color="#CCCCCC">parameters that say you know I am this</font>

903
00:33:51,929 --> 00:33:55,860
client this<font color="#CCCCCC"> is the kind of stuff that</font><font color="#E5E5E5"> I</font>

904
00:33:53,309 --> 00:33:58,139
<font color="#E5E5E5">max asking for then to get information</font>

905
00:33:55,860 --> 00:33:59,850
back<font color="#E5E5E5"> to the client</font><font color="#CCCCCC"> we do the</font><font color="#E5E5E5"> same</font>

906
00:33:58,139 --> 00:34:02,908
process<font color="#E5E5E5"> but only in</font><font color="#CCCCCC"> Reverse</font><font color="#E5E5E5"> the</font>

907
00:33:59,850 --> 00:34:06,168
<font color="#E5E5E5">authorization server sends a redirect to</font>

908
00:34:02,909 --> 00:34:09,149
the browser that<font color="#E5E5E5"> says go load this URL</font>

909
00:34:06,169 --> 00:34:10,440
<font color="#E5E5E5">what that you redirect looks like varies</font>

910
00:34:09,149 --> 00:34:11,759
depending<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the kind of client in the</font>

911
00:34:10,440 --> 00:34:13,589
canonical case<font color="#E5E5E5"> where we're</font><font color="#CCCCCC"> talking about</font>

912
00:34:11,760 --> 00:34:16,409
<font color="#E5E5E5">we've</font><font color="#CCCCCC"> got two websites</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> are talking</font>

913
00:34:13,589 --> 00:34:19,109
<font color="#E5E5E5">to</font><font color="#CCCCCC"> each other</font><font color="#E5E5E5"> well that's going to be</font>

914
00:34:16,409 --> 00:34:21,119
<font color="#E5E5E5">just an HTTP URL that has</font><font color="#CCCCCC"> a bunch</font><font color="#E5E5E5"> of</font>

915
00:34:19,109 --> 00:34:23,279
query parameters on it that are act as

916
00:34:21,119 --> 00:34:26,129
the response to<font color="#E5E5E5"> that front</font><font color="#CCCCCC"> channel</font>

917
00:34:23,280 --> 00:34:28,409
<font color="#E5E5E5">request</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right we do this</font><font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to</font>

918
00:34:26,129 --> 00:34:30,328
<font color="#E5E5E5">separate</font><font color="#CCCCCC"> the information we use the</font>

919
00:34:28,409 --> 00:34:32,520
front<font color="#CCCCCC"> channel</font><font color="#E5E5E5"> when the users</font><font color="#CCCCCC"> involved</font><font color="#E5E5E5"> in</font>

920
00:34:30,329 --> 00:34:34,799
the back<font color="#E5E5E5"> channel as much as</font><font color="#CCCCCC"> possible</font>

921
00:34:32,520 --> 00:34:36,750
wherever the users not directly<font color="#E5E5E5"> involved</font>

922
00:34:34,799 --> 00:34:37,918
the front channel is<font color="#E5E5E5"> going through a</font>

923
00:34:36,750 --> 00:34:40,559
third component<font color="#CCCCCC"> it's going</font><font color="#E5E5E5"> through the</font>

924
00:34:37,918 --> 00:34:42,658
browser we can't always trust it to do

925
00:34:40,559 --> 00:34:44,190
to make sure<font color="#CCCCCC"> that messages always get</font>

926
00:34:42,659 --> 00:34:46,409
through exactly<font color="#E5E5E5"> how we want to because</font>

927
00:34:44,190 --> 00:34:49,079
they<font color="#CCCCCC"> can be sort of you know</font><font color="#E5E5E5"> snooped and</font>

928
00:34:46,409 --> 00:34:50,700
modified that is assumed in the OAuth

929
00:34:49,079 --> 00:34:54,990
protocol and there are protections<font color="#E5E5E5"> in</font>

930
00:34:50,699 --> 00:34:58,020
the OAuth protocol<font color="#E5E5E5"> to mitigate that type</font>

931
00:34:54,989 --> 00:34:59,939
<font color="#CCCCCC">of stuff</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> we use the back channel for</font>

932
00:34:58,020 --> 00:35:03,299
all the<font color="#CCCCCC"> secret things as much</font><font color="#E5E5E5"> as we can</font>

933
00:34:59,940 --> 00:35:07,380
<font color="#E5E5E5">so now we're gonna go step by step</font>

934
00:35:03,299 --> 00:35:09,990
<font color="#CCCCCC">through that crazy diagram alright first</font>

935
00:35:07,380 --> 00:35:11,369
off<font color="#E5E5E5"> user shows up the client and says I</font>

936
00:35:09,990 --> 00:35:15,808
want you<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> that protected resource</font>

937
00:35:11,369 --> 00:35:18,569
and the client<font color="#E5E5E5"> says I can't do that</font><font color="#CCCCCC"> I</font>

938
00:35:15,809 --> 00:35:21,329
need you to go get<font color="#E5E5E5"> me</font><font color="#CCCCCC"> permission before</font>

939
00:35:18,569 --> 00:35:22,829
I can go do that<font color="#E5E5E5"> right whereas in the</font>

940
00:35:21,329 --> 00:35:24,660
<font color="#E5E5E5">past the client would just say great</font>

941
00:35:22,829 --> 00:35:26,940
give me your password<font color="#E5E5E5"> and I promise I'll</font>

942
00:35:24,660 --> 00:35:30,240
<font color="#CCCCCC">be nice now the client says</font><font color="#E5E5E5"> all right go</font>

943
00:35:26,940 --> 00:35:32,130
talk to this<font color="#E5E5E5"> other server and they'll</font>

944
00:35:30,240 --> 00:35:34,859
come up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> something that can that I</font>

945
00:35:32,130 --> 00:35:37,410
<font color="#E5E5E5">can use so just just go over there do</font>

946
00:35:34,859 --> 00:35:38,940
what<font color="#E5E5E5"> they say and</font><font color="#CCCCCC"> come</font><font color="#E5E5E5"> back so</font><font color="#CCCCCC"> we send</font>

947
00:35:37,410 --> 00:35:40,980
an HTTP front

948
00:35:38,940 --> 00:35:43,230
channel<font color="#CCCCCC"> responds we send a redirect to</font>

949
00:35:40,980 --> 00:35:46,079
<font color="#CCCCCC">the browser</font><font color="#E5E5E5"> and then the user goes and</font>

950
00:35:43,230 --> 00:35:47,760
<font color="#E5E5E5">talks to the auth server now at this</font>

951
00:35:46,079 --> 00:35:50,190
<font color="#E5E5E5">point the user can authenticate</font><font color="#CCCCCC"> to the</font>

952
00:35:47,760 --> 00:35:52,079
<font color="#E5E5E5">auth server whereas previously we were</font>

953
00:35:50,190 --> 00:35:54,480
stuck with<font color="#E5E5E5"> credentials that had to be</font>

954
00:35:52,079 --> 00:35:56,760
copyable<font color="#E5E5E5"> like passwords we can now do</font>

955
00:35:54,480 --> 00:35:58,800
multi-factor authentication we can do

956
00:35:56,760 --> 00:36:00,690
you know massive<font color="#CCCCCC"> risk based engines like</font>

957
00:35:58,800 --> 00:36:03,630
most of the large internet providers do

958
00:36:00,690 --> 00:36:06,030
today<font color="#CCCCCC"> you know you</font><font color="#E5E5E5"> can do pretty much</font>

959
00:36:03,630 --> 00:36:08,700
whatever you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> between the user and</font>

960
00:36:06,030 --> 00:36:10,230
<font color="#CCCCCC">the off server</font><font color="#E5E5E5"> and it's a very rich</font>

961
00:36:08,700 --> 00:36:13,770
channel of communication because<font color="#E5E5E5"> it's</font>

962
00:36:10,230 --> 00:36:15,300
the web right so the user authenticates

963
00:36:13,770 --> 00:36:17,579
so the all server now knows who the user

964
00:36:15,300 --> 00:36:18,869
is and they all server knows who the

965
00:36:17,579 --> 00:36:19,980
client claims to be because of those

966
00:36:18,869 --> 00:36:22,740
query parameters that were in that

967
00:36:19,980 --> 00:36:24,569
<font color="#CCCCCC">redirect so we can now say like ok so it</font>

968
00:36:22,740 --> 00:36:27,919
<font color="#E5E5E5">looks like</font><font color="#CCCCCC"> this client is asking to do</font>

969
00:36:24,569 --> 00:36:30,950
these things<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> ok with</font><font color="#E5E5E5"> you</font>

970
00:36:27,920 --> 00:36:33,569
now back when we were just<font color="#E5E5E5"> asking for</font>

971
00:36:30,950 --> 00:36:35,879
for somebody's password or just stealing

972
00:36:33,569 --> 00:36:38,430
<font color="#E5E5E5">their password on the way through we</font>

973
00:36:35,880 --> 00:36:41,400
didn't have any way<font color="#CCCCCC"> to ask the user if</font>

974
00:36:38,430 --> 00:36:44,368
this is what they are trying<font color="#E5E5E5"> to do we</font>

975
00:36:41,400 --> 00:36:46,980
now have a place where<font color="#E5E5E5"> we can ask the</font>

976
00:36:44,369 --> 00:36:48,750
user the resource owner<font color="#CCCCCC"> is this your</font>

977
00:36:46,980 --> 00:36:50,339
intent<font color="#E5E5E5"> are you actually trying to get</font>

978
00:36:48,750 --> 00:36:52,710
<font color="#E5E5E5">this client</font><font color="#CCCCCC"> to go talk to this</font><font color="#E5E5E5"> resource</font>

979
00:36:50,339 --> 00:36:54,420
server<font color="#E5E5E5"> you know do you</font><font color="#CCCCCC"> really want</font><font color="#E5E5E5"> to</font>

980
00:36:52,710 --> 00:36:56,099
log<font color="#CCCCCC"> into</font><font color="#E5E5E5"> farmville with your Facebook</font>

981
00:36:54,420 --> 00:36:59,280
account<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that what you meant to do</font>

982
00:36:56,099 --> 00:37:00,510
today<font color="#CCCCCC"> and it seems funny to give that</font>

983
00:36:59,280 --> 00:37:01,680
kind<font color="#E5E5E5"> of control to an end user</font>

984
00:37:00,510 --> 00:37:04,109
especially<font color="#CCCCCC"> to a lot of</font><font color="#E5E5E5"> security</font>

985
00:37:01,680 --> 00:37:07,290
architects but think about<font color="#E5E5E5"> it in terms</font>

986
00:37:04,109 --> 00:37:11,420
of<font color="#CCCCCC"> KU is in the best</font><font color="#E5E5E5"> position to know</font>

987
00:37:07,290 --> 00:37:13,170
<font color="#E5E5E5">what they are trying to do it's the user</font>

988
00:37:11,420 --> 00:37:14,700
they know what they're trying<font color="#CCCCCC"> to</font>

989
00:37:13,170 --> 00:37:16,380
accomplish<font color="#CCCCCC"> they may not know what</font>

990
00:37:14,700 --> 00:37:17,819
they're<font color="#CCCCCC"> really doing but they know what</font>

991
00:37:16,380 --> 00:37:19,470
<font color="#E5E5E5">they're trying to accomplish so this is</font>

992
00:37:17,819 --> 00:37:21,150
an area of<font color="#CCCCCC"> active research of how to</font>

993
00:37:19,470 --> 00:37:23,848
best communicate<font color="#E5E5E5"> this decision and</font>

994
00:37:21,150 --> 00:37:25,319
gather this consent and a lot<font color="#E5E5E5"> of work</font>

995
00:37:23,849 --> 00:37:27,119
<font color="#CCCCCC">that I do is</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of in</font><font color="#E5E5E5"> this space I</font>

996
00:37:25,319 --> 00:37:30,359
could rant about<font color="#E5E5E5"> that for several hours</font>

997
00:37:27,119 --> 00:37:33,780
<font color="#E5E5E5">I won't but ping me after if if you want</font>

998
00:37:30,359 --> 00:37:35,848
that point here is that<font color="#E5E5E5"> we can ask the</font>

999
00:37:33,780 --> 00:37:38,460
user<font color="#CCCCCC"> did you mean to do this</font>

1000
00:37:35,849 --> 00:37:39,660
do you approve<font color="#E5E5E5"> if you do approve you</font>

1001
00:37:38,460 --> 00:37:41,550
send<font color="#E5E5E5"> back this thing called the</font>

1002
00:37:39,660 --> 00:37:42,899
authorization code<font color="#CCCCCC"> now that</font>

1003
00:37:41,550 --> 00:37:44,430
authorization<font color="#E5E5E5"> code is a temporary</font>

1004
00:37:42,900 --> 00:37:46,619
retention drawn<font color="#CCCCCC"> here's a</font><font color="#E5E5E5"> little paper</font>

1005
00:37:44,430 --> 00:37:47,910
<font color="#CCCCCC">carnival ticket</font><font color="#E5E5E5"> that gets sent back to</font>

1006
00:37:46,619 --> 00:37:49,470
the client<font color="#CCCCCC"> how does it get sent back</font>

1007
00:37:47,910 --> 00:37:50,578
<font color="#E5E5E5">through a redirect through the front</font>

1008
00:37:49,470 --> 00:37:51,180
channel just<font color="#CCCCCC"> like we were talking</font><font color="#E5E5E5"> about</font>

1009
00:37:50,579 --> 00:37:52,740
before

1010
00:37:51,180 --> 00:37:53,970
<font color="#E5E5E5">it's query parameter</font>

1011
00:37:52,740 --> 00:37:56,160
through the browser the browser makes<font color="#E5E5E5"> a</font>

1012
00:37:53,970 --> 00:37:57,689
request to<font color="#CCCCCC"> the client</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that gets sent</font>

1013
00:37:56,160 --> 00:37:59,009
<font color="#CCCCCC">back there</font><font color="#E5E5E5"> so now the client has</font>

1014
00:37:57,690 --> 00:38:00,720
everything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it needs to go talk to</font>

1015
00:37:59,010 --> 00:38:03,990
the<font color="#CCCCCC"> authorization server and get the</font>

1016
00:38:00,720 --> 00:38:05,730
<font color="#E5E5E5">real credential that paper ticket really</font>

1017
00:38:03,990 --> 00:38:08,490
isn't<font color="#E5E5E5"> good for accessing the protected</font>

1018
00:38:05,730 --> 00:38:09,810
<font color="#CCCCCC">resource</font><font color="#E5E5E5"> it's not meant for that what</font>

1019
00:38:08,490 --> 00:38:11,669
it's meant for<font color="#E5E5E5"> is the client to then</font>

1020
00:38:09,810 --> 00:38:12,900
turn<font color="#E5E5E5"> around and then talk directly</font><font color="#CCCCCC"> to</font>

1021
00:38:11,670 --> 00:38:15,390
the<font color="#E5E5E5"> authorization</font><font color="#CCCCCC"> server in the back</font>

1022
00:38:12,900 --> 00:38:17,490
<font color="#E5E5E5">channel at this point though</font><font color="#CCCCCC"> the client</font>

1023
00:38:15,390 --> 00:38:19,560
can now authenticate<font color="#CCCCCC"> itself it can now</font>

1024
00:38:17,490 --> 00:38:21,180
prove that yes I am the piece of

1025
00:38:19,560 --> 00:38:22,470
software<font color="#CCCCCC"> that was</font><font color="#E5E5E5"> making that original</font>

1026
00:38:21,180 --> 00:38:26,040
request and there are a<font color="#E5E5E5"> few different</font>

1027
00:38:22,470 --> 00:38:27,540
ways<font color="#CCCCCC"> to pull this off</font><font color="#E5E5E5"> that way the</font>

1028
00:38:26,040 --> 00:38:30,270
authorization server<font color="#E5E5E5"> can say like oh</font>

1029
00:38:27,540 --> 00:38:33,779
yeah<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> who I told the user it was</font>

1030
00:38:30,270 --> 00:38:36,119
who<font color="#E5E5E5"> was trying to access their stuff</font><font color="#CCCCCC"> you</font>

1031
00:38:33,780 --> 00:38:38,460
prove that<font color="#E5E5E5"> you are you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font>

1032
00:38:36,119 --> 00:38:40,800
entity<font color="#E5E5E5"> that made that request</font><font color="#CCCCCC"> we're good</font>

1033
00:38:38,460 --> 00:38:43,470
to go<font color="#CCCCCC"> I'm going to give you a</font><font color="#E5E5E5"> token an</font>

1034
00:38:40,800 --> 00:38:45,030
access token<font color="#CCCCCC"> that access token can</font><font color="#E5E5E5"> then</font>

1035
00:38:43,470 --> 00:38:47,549
be used<font color="#E5E5E5"> to call the protected resource</font>

1036
00:38:45,030 --> 00:38:49,230
<font color="#E5E5E5">by the client and you notice</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

1037
00:38:47,550 --> 00:38:51,920
know once the user said everything<font color="#E5E5E5"> was</font>

1038
00:38:49,230 --> 00:38:54,090
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> they kind of got out</font><font color="#CCCCCC"> of the process</font>

1039
00:38:51,920 --> 00:38:56,280
because remember the<font color="#CCCCCC"> ultimate goal is</font>

1040
00:38:54,090 --> 00:38:58,320
<font color="#E5E5E5">getting the</font><font color="#CCCCCC"> client</font><font color="#E5E5E5"> some something so</font>

1041
00:38:56,280 --> 00:39:00,540
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it can do things on behalf of the</font>

1042
00:38:58,320 --> 00:39:02,010
user<font color="#E5E5E5"> the users no</font><font color="#CCCCCC"> longer on the HTTP</font>

1043
00:39:00,540 --> 00:39:03,960
transactions they're no longer<font color="#E5E5E5"> really</font>

1044
00:39:02,010 --> 00:39:08,460
directly involved<font color="#E5E5E5"> once the user says yes</font>

1045
00:39:03,960 --> 00:39:11,130
this is<font color="#CCCCCC"> OK we're good with them</font><font color="#E5E5E5"> in a</font>

1046
00:39:08,460 --> 00:39:12,930
nutshell that's how OAuth works

1047
00:39:11,130 --> 00:39:15,210
it's about<font color="#CCCCCC"> delegating that</font><font color="#E5E5E5"> access and</font>

1048
00:39:12,930 --> 00:39:16,799
<font color="#E5E5E5">going through this so</font><font color="#CCCCCC"> that you get that</font>

1049
00:39:15,210 --> 00:39:20,130
token to the client so<font color="#CCCCCC"> that it can call</font>

1050
00:39:16,800 --> 00:39:21,780
the protected resource<font color="#E5E5E5"> now there are a</font>

1051
00:39:20,130 --> 00:39:25,140
<font color="#CCCCCC">bunch of things that</font><font color="#E5E5E5"> have been added</font><font color="#CCCCCC"> to</font>

1052
00:39:21,780 --> 00:39:29,640
<font color="#CCCCCC">OAuth</font><font color="#E5E5E5"> or sort of built</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> OAuth that</font>

1053
00:39:25,140 --> 00:39:31,710
<font color="#E5E5E5">allow this to work in less than</font>

1054
00:39:29,640 --> 00:39:33,960
idealized situations that we call the

1055
00:39:31,710 --> 00:39:35,640
real<font color="#E5E5E5"> world and one of those is this</font>

1056
00:39:33,960 --> 00:39:36,630
concept<font color="#E5E5E5"> called a refresh token</font><font color="#CCCCCC"> so far</font>

1057
00:39:35,640 --> 00:39:39,930
we've been<font color="#CCCCCC"> talking about a thing called</font>

1058
00:39:36,630 --> 00:39:43,320
an access token<font color="#E5E5E5"> access tokens</font><font color="#CCCCCC"> once the</font>

1059
00:39:39,930 --> 00:39:45,180
users said<font color="#E5E5E5"> ok they keep working the user</font>

1060
00:39:43,320 --> 00:39:46,619
can log off<font color="#CCCCCC"> of the client they can</font>

1061
00:39:45,180 --> 00:39:48,419
wander<font color="#CCCCCC"> away they can get eaten by an</font>

1062
00:39:46,619 --> 00:39:51,270
alligator<font color="#CCCCCC"> doesn't matter</font>

1063
00:39:48,420 --> 00:39:52,890
ooofff doesn't care what<font color="#E5E5E5"> our cares about</font>

1064
00:39:51,270 --> 00:39:54,930
is that<font color="#E5E5E5"> that access token is still good</font>

1065
00:39:52,890 --> 00:39:56,549
so the<font color="#CCCCCC"> clients</font><font color="#E5E5E5"> going to keep using that</font>

1066
00:39:54,930 --> 00:39:59,790
<font color="#E5E5E5">access token as long as it's good and</font>

1067
00:39:56,550 --> 00:40:01,740
this<font color="#E5E5E5"> is a key design point</font><font color="#CCCCCC"> so auth is</font>

1068
00:39:59,790 --> 00:40:05,970
designed to work when the user isn't

1069
00:40:01,740 --> 00:40:06,370
<font color="#E5E5E5">there and it's also designed to deal</font>

1070
00:40:05,970 --> 00:40:07,629
with<font color="#CCCCCC"> the</font>

1071
00:40:06,370 --> 00:40:10,509
situation<font color="#CCCCCC"> like well when</font><font color="#E5E5E5"> does that</font>

1072
00:40:07,630 --> 00:40:12,940
access tokens tokens stop working maybe

1073
00:40:10,510 --> 00:40:15,130
it expires<font color="#E5E5E5"> maybe the user wasn't eaten</font>

1074
00:40:12,940 --> 00:40:16,330
by an alligator<font color="#E5E5E5"> but they logged into the</font>

1075
00:40:15,130 --> 00:40:19,570
authorization server<font color="#CCCCCC"> and said you know</font>

1076
00:40:16,330 --> 00:40:21,850
what I don't<font color="#CCCCCC"> like</font><font color="#E5E5E5"> that app accessing my</font>

1077
00:40:19,570 --> 00:40:24,310
stuff anymore<font color="#CCCCCC"> I want to revoke access to</font>

1078
00:40:21,850 --> 00:40:27,040
that so<font color="#CCCCCC"> that access tokens gonna stop</font>

1079
00:40:24,310 --> 00:40:30,790
<font color="#E5E5E5">working</font><font color="#CCCCCC"> so what</font><font color="#E5E5E5"> does the client do then</font>

1080
00:40:27,040 --> 00:40:32,620
well if you did<font color="#E5E5E5"> Oh</font><font color="#CCCCCC"> off to get a token in</font>

1081
00:40:30,790 --> 00:40:35,200
the first place you<font color="#CCCCCC"> can just do oo off</font>

1082
00:40:32,620 --> 00:40:36,970
again to get token again<font color="#CCCCCC"> you</font><font color="#E5E5E5"> always have</font>

1083
00:40:35,200 --> 00:40:41,049
<font color="#E5E5E5">that option so</font><font color="#CCCCCC"> the failure</font><font color="#E5E5E5"> mode of</font>

1084
00:40:36,970 --> 00:40:43,600
<font color="#E5E5E5">ooofff</font><font color="#CCCCCC"> is more</font><font color="#E5E5E5"> OAuth which is a</font>

1085
00:40:41,050 --> 00:40:45,820
deliberate<font color="#E5E5E5"> design decision because if</font>

1086
00:40:43,600 --> 00:40:49,420
you think<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> arity of different</font>

1087
00:40:45,820 --> 00:40:50,320
<font color="#E5E5E5">components in in an OAuth ecosystem</font>

1088
00:40:49,420 --> 00:40:52,330
<font color="#E5E5E5">you're probably gonna have one</font>

1089
00:40:50,320 --> 00:40:54,550
<font color="#CCCCCC">authorization server a handful of</font>

1090
00:40:52,330 --> 00:40:57,940
protected<font color="#CCCCCC"> resources and a whole</font><font color="#E5E5E5"> bunch of</font>

1091
00:40:54,550 --> 00:40:59,650
<font color="#CCCCCC">clients whose main job</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> to do</font>

1092
00:40:57,940 --> 00:41:01,750
security<font color="#E5E5E5"> security is the thing</font><font color="#CCCCCC"> that they</font>

1093
00:40:59,650 --> 00:41:02,920
have<font color="#E5E5E5"> to do in order to call the API</font><font color="#CCCCCC"> and</font>

1094
00:41:01,750 --> 00:41:05,380
do the stuff that<font color="#E5E5E5"> they really</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to do</font>

1095
00:41:02,920 --> 00:41:07,450
so with OAuth 2 we<font color="#E5E5E5"> made deliberate</font>

1096
00:41:05,380 --> 00:41:10,090
design<font color="#E5E5E5"> decisions to allow the clients to</font>

1097
00:41:07,450 --> 00:41:12,160
be as dumb as possible one of<font color="#CCCCCC"> the best</font>

1098
00:41:10,090 --> 00:41:14,110
ways to do this is to not<font color="#CCCCCC"> have complex</font>

1099
00:41:12,160 --> 00:41:16,569
<font color="#E5E5E5">if-then-else code paths for error</font>

1100
00:41:14,110 --> 00:41:18,190
handling<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> get into this</font><font color="#E5E5E5"> place like</font>

1101
00:41:16,570 --> 00:41:20,160
you<font color="#E5E5E5"> always assume</font><font color="#CCCCCC"> that your token might</font>

1102
00:41:18,190 --> 00:41:23,200
not work<font color="#E5E5E5"> and if your token doesn't work</font>

1103
00:41:20,160 --> 00:41:25,000
<font color="#CCCCCC">ok maybe go try to get a new token which</font>

1104
00:41:23,200 --> 00:41:26,819
is great if your users still there<font color="#E5E5E5"> but</font>

1105
00:41:25,000 --> 00:41:28,990
<font color="#E5E5E5">if you use your has in fact wandered off</font>

1106
00:41:26,820 --> 00:41:32,290
<font color="#E5E5E5">you can't ask them right away and</font><font color="#CCCCCC"> you</font>

1107
00:41:28,990 --> 00:41:36,189
can't call<font color="#CCCCCC"> that API</font><font color="#E5E5E5"> again what do you do</font>

1108
00:41:32,290 --> 00:41:38,890
then well there's a construct<font color="#CCCCCC"> called a</font>

1109
00:41:36,190 --> 00:41:40,810
refresh token<font color="#CCCCCC"> and what that means is</font>

1110
00:41:38,890 --> 00:41:43,210
that the<font color="#CCCCCC"> Refresh token is something that</font>

1111
00:41:40,810 --> 00:41:46,090
you get alongside the access token<font color="#CCCCCC"> it's</font>

1112
00:41:43,210 --> 00:41:48,670
not good<font color="#CCCCCC"> for calling api's</font><font color="#E5E5E5"> it's not good</font>

1113
00:41:46,090 --> 00:41:51,070
for<font color="#E5E5E5"> getting you know</font><font color="#CCCCCC"> getting the data to</font>

1114
00:41:48,670 --> 00:41:53,740
<font color="#E5E5E5">the</font><font color="#CCCCCC"> client what it is good for</font><font color="#E5E5E5"> is saying</font>

1115
00:41:51,070 --> 00:41:56,140
that I have proof<font color="#CCCCCC"> that the user said</font>

1116
00:41:53,740 --> 00:41:58,899
that it was<font color="#CCCCCC"> ok to</font><font color="#E5E5E5"> use this API</font><font color="#CCCCCC"> but my</font>

1117
00:41:56,140 --> 00:42:01,690
access token isn't good anymore<font color="#E5E5E5"> so give</font>

1118
00:41:58,900 --> 00:42:04,740
me a new access token<font color="#CCCCCC"> so that I can keep</font>

1119
00:42:01,690 --> 00:42:08,740
<font color="#E5E5E5">calling the API without bugging the user</font>

1120
00:42:04,740 --> 00:42:11,410
this way your access token can live for

1121
00:42:08,740 --> 00:42:12,580
<font color="#E5E5E5">maybe a couple minutes</font><font color="#CCCCCC"> so it's just</font><font color="#E5E5E5"> kind</font>

1122
00:42:11,410 --> 00:42:13,029
of sitting<font color="#CCCCCC"> out on the wire</font><font color="#E5E5E5"> for a few</font>

1123
00:42:12,580 --> 00:42:15,640
minutes

1124
00:42:13,030 --> 00:42:17,950
app goes to sleep<font color="#CCCCCC"> whatever it's not</font>

1125
00:42:15,640 --> 00:42:20,109
<font color="#E5E5E5">calling the API</font><font color="#CCCCCC"> anymore access token</font>

1126
00:42:17,950 --> 00:42:21,819
<font color="#E5E5E5">times out app</font>

1127
00:42:20,110 --> 00:42:23,640
wakes up you know<font color="#CCCCCC"> couple days</font><font color="#E5E5E5"> later and</font>

1128
00:42:21,820 --> 00:42:25,840
<font color="#E5E5E5">says I need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go refresh that API</font>

1129
00:42:23,640 --> 00:42:27,339
<font color="#E5E5E5">access token isn't good anymore but I</font>

1130
00:42:25,840 --> 00:42:29,980
have a refresh<font color="#CCCCCC"> token I have a</font><font color="#E5E5E5"> refresh</font>

1131
00:42:27,340 --> 00:42:31,890
token that<font color="#E5E5E5"> allows me to go and get</font><font color="#CCCCCC"> a new</font>

1132
00:42:29,980 --> 00:42:34,990
<font color="#CCCCCC">access token and</font><font color="#E5E5E5"> that refresh token</font>

1133
00:42:31,890 --> 00:42:37,049
<font color="#CCCCCC">basically says hey you know the user</font>

1134
00:42:34,990 --> 00:42:39,220
said this was<font color="#CCCCCC"> okay</font>

1135
00:42:37,050 --> 00:42:41,440
unlike the access<font color="#CCCCCC"> token which</font><font color="#E5E5E5"> is a</font>

1136
00:42:39,220 --> 00:42:43,680
bearer credential at least in its most

1137
00:42:41,440 --> 00:42:45,700
basic format<font color="#E5E5E5"> refresh token is not</font>

1138
00:42:43,680 --> 00:42:47,290
refresh token has<font color="#E5E5E5"> to be presented</font>

1139
00:42:45,700 --> 00:42:48,580
alongside the<font color="#CCCCCC"> clients credentials just</font>

1140
00:42:47,290 --> 00:42:50,500
like that authorization<font color="#E5E5E5"> code we saw</font>

1141
00:42:48,580 --> 00:42:52,360
<font color="#CCCCCC">before and it's</font><font color="#E5E5E5"> only presented in the</font>

1142
00:42:50,500 --> 00:42:53,590
<font color="#E5E5E5">back-channel it only ever lives between</font>

1143
00:42:52,360 --> 00:42:57,330
<font color="#E5E5E5">the client and the authorization</font><font color="#CCCCCC"> server</font>

1144
00:42:53,590 --> 00:42:58,570
<font color="#E5E5E5">so protected resources never see this</font>

1145
00:42:57,330 --> 00:43:02,220
<font color="#CCCCCC">alright</font>

1146
00:42:58,570 --> 00:43:05,140
refresh token is a really simple<font color="#E5E5E5"> concept</font>

1147
00:43:02,220 --> 00:43:09,569
<font color="#CCCCCC">but it's really</font><font color="#E5E5E5"> really powerful</font><font color="#CCCCCC"> because</font>

1148
00:43:05,140 --> 00:43:11,049
it allows<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to really dial in the risk</font>

1149
00:43:09,570 --> 00:43:16,830
<font color="#E5E5E5">between all of these different</font>

1150
00:43:11,050 --> 00:43:20,170
<font color="#E5E5E5">credentials getting stolen all right</font>

1151
00:43:16,830 --> 00:43:23,710
<font color="#E5E5E5">another concept that's built</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> OAuth</font>

1152
00:43:20,170 --> 00:43:26,400
is what I'm<font color="#E5E5E5"> calling the safety I maybe I</font>

1153
00:43:23,710 --> 00:43:28,690
don't want my API to be all or<font color="#CCCCCC"> nothing</font>

1154
00:43:26,400 --> 00:43:30,130
<font color="#E5E5E5">so back</font><font color="#CCCCCC"> in the day when</font><font color="#E5E5E5"> it was just</font>

1155
00:43:28,690 --> 00:43:31,780
<font color="#E5E5E5">username and password if I had the</font>

1156
00:43:30,130 --> 00:43:34,360
<font color="#CCCCCC">username and password I could do</font>

1157
00:43:31,780 --> 00:43:37,830
anything I wanted<font color="#CCCCCC"> to on the API</font><font color="#E5E5E5"> because</font>

1158
00:43:34,360 --> 00:43:40,150
it was the whole API<font color="#CCCCCC"> it was on or off</font>

1159
00:43:37,830 --> 00:43:43,120
but now that I've got this delegated

1160
00:43:40,150 --> 00:43:46,840
token I can probably do a<font color="#CCCCCC"> better job at</font>

1161
00:43:43,120 --> 00:43:50,740
splitting<font color="#CCCCCC"> that</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> so we use the concept</font>

1162
00:43:46,840 --> 00:43:52,420
in OAuth<font color="#E5E5E5"> of a scope</font><font color="#CCCCCC"> of that token now</font>

1163
00:43:50,740 --> 00:43:55,180
the scope<font color="#E5E5E5"> of the token is used to</font>

1164
00:43:52,420 --> 00:43:58,270
represent a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different concepts</font>

1165
00:43:55,180 --> 00:43:59,859
<font color="#E5E5E5">most commonly it's the type</font><font color="#CCCCCC"> of thing</font>

1166
00:43:58,270 --> 00:44:02,259
you're allowed to do am I allowed to

1167
00:43:59,860 --> 00:44:04,480
<font color="#E5E5E5">read this API am I allowed</font><font color="#CCCCCC"> to write to</font>

1168
00:44:02,260 --> 00:44:07,900
this API<font color="#CCCCCC"> you know what kinds of things</font>

1169
00:44:04,480 --> 00:44:11,370
<font color="#E5E5E5">also you often see the kind of thing</font>

1170
00:44:07,900 --> 00:44:13,900
that you're allowed to<font color="#CCCCCC"> make actions on</font>

1171
00:44:11,370 --> 00:44:16,960
so am<font color="#E5E5E5"> I allowed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get your timeline</font>

1172
00:44:13,900 --> 00:44:18,640
<font color="#E5E5E5">your profile</font><font color="#CCCCCC"> information the metadata</font><font color="#E5E5E5"> of</font>

1173
00:44:16,960 --> 00:44:21,250
<font color="#E5E5E5">your</font><font color="#CCCCCC"> attributes versus the attribute</font>

1174
00:44:18,640 --> 00:44:25,660
values themselves<font color="#E5E5E5"> what am I allowed</font><font color="#CCCCCC"> to</font>

1175
00:44:21,250 --> 00:44:28,420
do<font color="#E5E5E5"> and occasionally it also means when</font>

1176
00:44:25,660 --> 00:44:30,339
you can do this you know<font color="#E5E5E5"> can I do this</font>

1177
00:44:28,420 --> 00:44:33,040
<font color="#E5E5E5">when the users not logged into that main</font>

1178
00:44:30,340 --> 00:44:33,819
service anymore<font color="#E5E5E5"> can I do this</font><font color="#CCCCCC"> only when</font>

1179
00:44:33,040 --> 00:44:35,829
<font color="#E5E5E5">they're online</font>

1180
00:44:33,819 --> 00:44:38,859
can I do this<font color="#E5E5E5"> only</font><font color="#CCCCCC"> on Tuesdays at 2:00</font>

1181
00:44:35,829 --> 00:44:41,099
p.m.<font color="#CCCCCC"> right what</font><font color="#E5E5E5"> are my</font><font color="#CCCCCC"> different options</font>

1182
00:44:38,859 --> 00:44:43,390
<font color="#CCCCCC">Oh</font>

1183
00:44:41,099 --> 00:44:51,910
<font color="#CCCCCC">mideco</font><font color="#E5E5E5"> I think our camera fell asleep</font>

1184
00:44:43,390 --> 00:44:53,469
<font color="#CCCCCC">just FYI</font><font color="#E5E5E5"> so I think</font><font color="#CCCCCC"> Miyako fell over</font><font color="#E5E5E5"> but</font>

1185
00:44:51,910 --> 00:44:55,839
we're gonna<font color="#E5E5E5"> keep going here in the room</font>

1186
00:44:53,469 --> 00:44:58,739
<font color="#E5E5E5">until they do that if anybody's in the</font>

1187
00:44:55,839 --> 00:45:05,170
<font color="#E5E5E5">chat room can somebody</font><font color="#CCCCCC"> at meet Eko</font>

1188
00:44:58,739 --> 00:45:06,819
so<font color="#E5E5E5"> both scopes are strains they're just</font>

1189
00:45:05,170 --> 00:45:10,059
<font color="#E5E5E5">very simple strings that don't have</font>

1190
00:45:06,819 --> 00:45:13,569
<font color="#CCCCCC">spaces in them that's</font><font color="#E5E5E5"> really their base</font>

1191
00:45:10,059 --> 00:45:14,829
definition<font color="#E5E5E5"> what doesn't say which parts</font>

1192
00:45:13,569 --> 00:45:17,319
<font color="#E5E5E5">of this you're allowed to</font><font color="#CCCCCC"> use a scope</font>

1193
00:45:14,829 --> 00:45:19,420
<font color="#E5E5E5">for it just says it's a thing</font><font color="#CCCCCC"> that says</font>

1194
00:45:17,319 --> 00:45:22,479
what the tokens good for and it just

1195
00:45:19,420 --> 00:45:24,099
<font color="#CCCCCC">gets out</font><font color="#E5E5E5"> of the way which is</font><font color="#CCCCCC"> a good</font>

1196
00:45:22,479 --> 00:45:26,319
thing<font color="#CCCCCC"> because it allows</font><font color="#E5E5E5"> you to</font><font color="#CCCCCC"> design</font>

1197
00:45:24,099 --> 00:45:27,880
<font color="#CCCCCC">your API in sort of</font><font color="#E5E5E5"> very specific ways</font>

1198
00:45:26,319 --> 00:45:29,469
and it's a bad<font color="#CCCCCC"> thing because everybody</font>

1199
00:45:27,880 --> 00:45:31,630
<font color="#E5E5E5">uses scopes in slightly different</font>

1200
00:45:29,469 --> 00:45:33,549
incompatible ways<font color="#E5E5E5"> which can be really</font>

1201
00:45:31,630 --> 00:45:35,709
<font color="#E5E5E5">frustrating</font><font color="#CCCCCC"> to developers who of</font><font color="#E5E5E5"> course</font>

1202
00:45:33,549 --> 00:45:37,890
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> have to call just one API in their</font>

1203
00:45:35,709 --> 00:45:40,479
<font color="#E5E5E5">day-to-day lives</font>

1204
00:45:37,890 --> 00:45:42,819
now<font color="#E5E5E5"> the resource owner approves the</font>

1205
00:45:40,479 --> 00:45:44,169
<font color="#E5E5E5">scopes</font><font color="#CCCCCC"> and those get</font><font color="#E5E5E5"> bound into</font><font color="#CCCCCC"> the</font>

1206
00:45:42,819 --> 00:45:46,029
<font color="#E5E5E5">access token so when the access token</font>

1207
00:45:44,170 --> 00:45:47,259
shows up the protected<font color="#CCCCCC"> resource</font><font color="#E5E5E5"> it can</font>

1208
00:45:46,029 --> 00:45:48,579
figure out<font color="#E5E5E5"> these are the scopes that</font>

1209
00:45:47,259 --> 00:45:51,369
<font color="#E5E5E5">it's allowed for and it can make that</font>

1210
00:45:48,579 --> 00:45:56,109
decision of how to interpret the

1211
00:45:51,369 --> 00:46:00,130
incoming<font color="#E5E5E5"> response yeah I</font><font color="#CCCCCC"> think me that</font>

1212
00:45:56,109 --> 00:46:02,288
goes still down<font color="#E5E5E5"> all right all right so</font>

1213
00:46:00,130 --> 00:46:04,089
far we have looked<font color="#E5E5E5"> at the authorization</font>

1214
00:46:02,289 --> 00:46:06,430
<font color="#CCCCCC">code flow and kind</font><font color="#E5E5E5"> of the basics of how</font>

1215
00:46:04,089 --> 00:46:08,049
<font color="#E5E5E5">it works fundamentally it's the</font>

1216
00:46:06,430 --> 00:46:10,209
delegation protocol it's all about a

1217
00:46:08,049 --> 00:46:12,579
user saying<font color="#E5E5E5"> this software can do it in</font>

1218
00:46:10,209 --> 00:46:15,640
the world that oweth was originally

1219
00:46:12,579 --> 00:46:20,349
designed<font color="#CCCCCC"> for I think we're waking up</font><font color="#E5E5E5"> yay</font>

1220
00:46:15,640 --> 00:46:22,390
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> deco and in the world that</font>

1221
00:46:20,349 --> 00:46:26,259
<font color="#CCCCCC">Olaf was originally designed for</font><font color="#E5E5E5"> it was</font>

1222
00:46:22,390 --> 00:46:30,308
all about<font color="#CCCCCC"> you know a</font><font color="#E5E5E5"> web server talking</font>

1223
00:46:26,259 --> 00:46:32,949
to another<font color="#E5E5E5"> web server</font><font color="#CCCCCC"> alright that's not</font>

1224
00:46:30,309 --> 00:46:35,349
<font color="#CCCCCC">the world</font><font color="#E5E5E5"> we live in anymore we've got</font>

1225
00:46:32,949 --> 00:46:37,989
in browser applications we've got native

1226
00:46:35,349 --> 00:46:40,029
applications we've got apps that never

1227
00:46:37,989 --> 00:46:42,160
see a user<font color="#E5E5E5"> you know things that are just</font>

1228
00:46:40,029 --> 00:46:45,670
poking around data<font color="#E5E5E5"> centers talking to</font>

1229
00:46:42,160 --> 00:46:48,009
each<font color="#E5E5E5"> other it would be really nice to</font>

1230
00:46:45,670 --> 00:46:49,660
use this security layer that we

1231
00:46:48,010 --> 00:46:51,640
<font color="#E5E5E5">invented across all of those things and</font>

1232
00:46:49,660 --> 00:46:54,640
in fact<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> happened with OAuth</font>

1233
00:46:51,640 --> 00:46:57,609
1 which was never intended<font color="#E5E5E5"> to solve all</font>

1234
00:46:54,640 --> 00:47:00,879
<font color="#CCCCCC">of those cases but</font><font color="#E5E5E5"> it was kind of used</font>

1235
00:46:57,610 --> 00:47:02,290
for that anyway<font color="#E5E5E5"> because it almost solved</font>

1236
00:47:00,880 --> 00:47:05,230
people's problems and they<font color="#E5E5E5"> just kind of</font>

1237
00:47:02,290 --> 00:47:07,450
hammered it into<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> the square peg</font>

1238
00:47:05,230 --> 00:47:10,000
into<font color="#CCCCCC"> the round hole to</font><font color="#E5E5E5"> make it fit with</font>

1239
00:47:07,450 --> 00:47:13,000
OAuth<font color="#E5E5E5"> 2 instead</font><font color="#CCCCCC"> of giving</font><font color="#E5E5E5"> everybody a</font>

1240
00:47:10,000 --> 00:47:15,640
square peg<font color="#E5E5E5"> we gave you a way to make</font>

1241
00:47:13,000 --> 00:47:17,350
<font color="#CCCCCC">your</font><font color="#E5E5E5"> own custom shaped pegs with a</font>

1242
00:47:15,640 --> 00:47:21,720
couple of patterns<font color="#CCCCCC"> that are fairly</font>

1243
00:47:17,350 --> 00:47:26,080
common<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> way stretching this metaphor</font>

1244
00:47:21,720 --> 00:47:28,390
so this canonical use is all about

1245
00:47:26,080 --> 00:47:32,319
<font color="#E5E5E5">server talking to another server</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> web</font>

1246
00:47:28,390 --> 00:47:35,830
<font color="#E5E5E5">server talking to an API those types of</font>

1247
00:47:32,320 --> 00:47:38,200
systems<font color="#CCCCCC"> have particular aspects</font><font color="#E5E5E5"> for</font>

1248
00:47:35,830 --> 00:47:41,020
<font color="#CCCCCC">example a web server can</font><font color="#E5E5E5"> keep secrets</font>

1249
00:47:38,200 --> 00:47:43,029
from the<font color="#E5E5E5"> users that's not true with an</font>

1250
00:47:41,020 --> 00:47:44,710
<font color="#CCCCCC">in-browser application because anything</font>

1251
00:47:43,030 --> 00:47:48,130
that's running in your browser<font color="#CCCCCC"> you can</font>

1252
00:47:44,710 --> 00:47:50,020
inspect it it's not you can't do that

1253
00:47:48,130 --> 00:47:55,000
with a remote web server unless they

1254
00:47:50,020 --> 00:47:57,340
have other problems<font color="#CCCCCC"> for a native</font>

1255
00:47:55,000 --> 00:48:00,160
<font color="#E5E5E5">application similar thing it's running</font>

1256
00:47:57,340 --> 00:48:01,510
on<font color="#E5E5E5"> your device developers can think that</font>

1257
00:48:00,160 --> 00:48:03,759
they've<font color="#E5E5E5"> got it all nice</font><font color="#CCCCCC"> and locked down</font>

1258
00:48:01,510 --> 00:48:05,490
most of the time you can inspect and do

1259
00:48:03,760 --> 00:48:07,390
some fun<font color="#CCCCCC"> things</font><font color="#E5E5E5"> with that as well</font><font color="#CCCCCC"> and</font>

1260
00:48:05,490 --> 00:48:09,640
there's all these different<font color="#CCCCCC"> kinds of</font>

1261
00:48:07,390 --> 00:48:11,830
delegation that<font color="#E5E5E5"> we could do right</font><font color="#CCCCCC"> so</font>

1262
00:48:09,640 --> 00:48:14,290
<font color="#E5E5E5">we're gonna look at a few different</font><font color="#CCCCCC"> ways</font>

1263
00:48:11,830 --> 00:48:17,200
<font color="#CCCCCC">that you can use</font><font color="#E5E5E5"> oauth2 beyond the</font>

1264
00:48:14,290 --> 00:48:19,960
authorization<font color="#CCCCCC"> code flow I will say</font>

1265
00:48:17,200 --> 00:48:22,390
though<font color="#CCCCCC"> that</font><font color="#E5E5E5"> if you're learning if you're</font>

1266
00:48:19,960 --> 00:48:24,460
just learning<font color="#CCCCCC"> OAuth</font><font color="#E5E5E5"> to start with the</font>

1267
00:48:22,390 --> 00:48:28,839
authorization<font color="#CCCCCC"> code flow for two reasons</font>

1268
00:48:24,460 --> 00:48:32,680
one<font color="#CCCCCC"> it</font><font color="#E5E5E5"> really is the most robust and the</font>

1269
00:48:28,840 --> 00:48:34,780
most widely used<font color="#E5E5E5"> version of</font><font color="#CCCCCC"> OAuth 2 it</font>

1270
00:48:32,680 --> 00:48:38,710
solves<font color="#E5E5E5"> the widest set of different use</font>

1271
00:48:34,780 --> 00:48:40,180
cases and<font color="#CCCCCC"> two and</font><font color="#E5E5E5"> you know and it</font><font color="#CCCCCC"> really</font>

1272
00:48:38,710 --> 00:48:42,790
should be<font color="#CCCCCC"> your default based on that</font><font color="#E5E5E5"> and</font>

1273
00:48:40,180 --> 00:48:46,180
to everything else that<font color="#CCCCCC"> I'm about to</font>

1274
00:48:42,790 --> 00:48:48,850
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about here is an</font><font color="#E5E5E5"> optimization of</font>

1275
00:48:46,180 --> 00:48:51,549
<font color="#CCCCCC">the authorization code flow</font><font color="#E5E5E5"> for</font>

1276
00:48:48,850 --> 00:48:54,520
different specific purposes and every

1277
00:48:51,550 --> 00:48:56,350
time you<font color="#E5E5E5"> have an optimization you have</font>

1278
00:48:54,520 --> 00:48:59,710
to make assumptions<font color="#E5E5E5"> about what you're</font>

1279
00:48:56,350 --> 00:49:01,390
optimizing<font color="#E5E5E5"> for all right</font><font color="#CCCCCC"> means</font><font color="#E5E5E5"> you're</font>

1280
00:48:59,710 --> 00:49:01,940
making<font color="#CCCCCC"> assumptions about the environment</font>

1281
00:49:01,390 --> 00:49:03,650
that<font color="#CCCCCC"> you're in</font>

1282
00:49:01,940 --> 00:49:05,859
you're making assumptions<font color="#E5E5E5"> about the</font>

1283
00:49:03,650 --> 00:49:08,299
clients and<font color="#E5E5E5"> the users in the</font><font color="#CCCCCC"> api's</font>

1284
00:49:05,859 --> 00:49:10,670
everything<font color="#E5E5E5"> that I'm gonna talk about in</font>

1285
00:49:08,299 --> 00:49:14,559
the<font color="#CCCCCC"> next few slides here is gonna really</font>

1286
00:49:10,670 --> 00:49:20,510
be<font color="#CCCCCC"> for specific environments and</font>

1287
00:49:14,559 --> 00:49:23,150
circumstances and<font color="#E5E5E5"> one of the ones that</font>

1288
00:49:20,510 --> 00:49:27,250
gets misused<font color="#CCCCCC"> to the most and so I'm</font>

1289
00:49:23,150 --> 00:49:27,250
starting<font color="#CCCCCC"> with it is the implicit flow</font>

1290
00:49:27,789 --> 00:49:32,569
the implicit flow is what happens when

1291
00:49:30,319 --> 00:49:33,460
you shove the client<font color="#E5E5E5"> up inside the</font>

1292
00:49:32,569 --> 00:49:35,990
browser

1293
00:49:33,460 --> 00:49:39,200
<font color="#E5E5E5">now the authorization code</font><font color="#CCCCCC"> flow goes</font>

1294
00:49:35,990 --> 00:49:41,359
through a lot<font color="#CCCCCC"> of different</font><font color="#E5E5E5"> steps to</font><font color="#CCCCCC"> make</font>

1295
00:49:39,200 --> 00:49:43,009
<font color="#CCCCCC">sure that things like</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> client's</font>

1296
00:49:41,359 --> 00:49:45,288
credentials and the clients like

1297
00:49:43,010 --> 00:49:46,940
identity<font color="#E5E5E5"> and authorization never leaks</font>

1298
00:49:45,289 --> 00:49:48,650
to the<font color="#CCCCCC"> end-user</font><font color="#E5E5E5"> that the access tokens</font>

1299
00:49:46,940 --> 00:49:50,210
aren't<font color="#E5E5E5"> exposed to the browser and all of</font>

1300
00:49:48,650 --> 00:49:52,130
this other<font color="#CCCCCC"> stuff but what if your</font>

1301
00:49:50,210 --> 00:49:53,119
application<font color="#E5E5E5"> is</font><font color="#CCCCCC"> running</font><font color="#E5E5E5"> literally inside</font>

1302
00:49:52,130 --> 00:49:55,160
your browser it's a JavaScript

1303
00:49:53,119 --> 00:49:56,410
<font color="#CCCCCC">application that</font><font color="#E5E5E5"> is executing inside the</font>

1304
00:49:55,160 --> 00:49:58,910
browser<font color="#CCCCCC"> at runtime</font>

1305
00:49:56,410 --> 00:50:00,020
<font color="#E5E5E5">all of</font><font color="#CCCCCC"> that stuff that</font><font color="#E5E5E5"> you've</font><font color="#CCCCCC"> done all</font>

1306
00:49:58,910 --> 00:50:01,339
of<font color="#CCCCCC"> those hoops that</font><font color="#E5E5E5"> you've just jumped</font>

1307
00:50:00,020 --> 00:50:03,259
<font color="#E5E5E5">through to make sure</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> that stuff</font>

1308
00:50:01,339 --> 00:50:07,430
is secret from the browser<font color="#E5E5E5"> really</font>

1309
00:50:03,260 --> 00:50:09,680
<font color="#E5E5E5">doesn't apply anymore because it's all</font>

1310
00:50:07,430 --> 00:50:13,788
in the browser<font color="#CCCCCC"> it's all in there</font>

1311
00:50:09,680 --> 00:50:15,649
and so the implicit flow in order<font color="#E5E5E5"> to get</font>

1312
00:50:13,789 --> 00:50:19,700
the access<font color="#CCCCCC"> token is really a front</font>

1313
00:50:15,650 --> 00:50:21,920
channel<font color="#CCCCCC"> only flow so what you can do is</font>

1314
00:50:19,700 --> 00:50:23,270
you send<font color="#E5E5E5"> the user over and instead of</font>

1315
00:50:21,920 --> 00:50:25,309
<font color="#E5E5E5">coming back with an</font><font color="#CCCCCC"> authorization code</font>

1316
00:50:23,270 --> 00:50:27,470
that you then go<font color="#CCCCCC"> and repost</font><font color="#E5E5E5"> and then get</font>

1317
00:50:25,309 --> 00:50:29,059
the token you send the user<font color="#E5E5E5"> over and</font>

1318
00:50:27,470 --> 00:50:31,759
they come back directly<font color="#E5E5E5"> with an access</font>

1319
00:50:29,059 --> 00:50:33,770
token<font color="#E5E5E5"> and herein lies</font><font color="#CCCCCC"> the trouble</font>

1320
00:50:31,760 --> 00:50:36,170
because that's great for<font color="#E5E5E5"> an</font><font color="#CCCCCC"> in-browser</font>

1321
00:50:33,770 --> 00:50:39,500
<font color="#CCCCCC">web application because now now you're</font>

1322
00:50:36,170 --> 00:50:43,670
bound<font color="#E5E5E5"> by same origin policies and it</font>

1323
00:50:39,500 --> 00:50:46,760
comes<font color="#E5E5E5"> back as the HTTP URL</font><font color="#CCCCCC"> fragment</font><font color="#E5E5E5"> so</font>

1324
00:50:43,670 --> 00:50:49,579
<font color="#E5E5E5">you know it doesn't depending on your</font>

1325
00:50:46,760 --> 00:50:52,670
browser thank you google it usually

1326
00:50:49,579 --> 00:50:54,170
doesn't get sent across redirects or

1327
00:50:52,670 --> 00:50:56,420
posted back<font color="#CCCCCC"> to servers or things like</font>

1328
00:50:54,170 --> 00:50:59,630
<font color="#E5E5E5">that</font><font color="#CCCCCC"> so it supposed</font><font color="#E5E5E5"> to stay nice and</font>

1329
00:50:56,420 --> 00:51:06,170
<font color="#E5E5E5">inside the browser doesn't</font><font color="#CCCCCC"> always these</font>

1330
00:50:59,630 --> 00:51:09,380
days<font color="#E5E5E5"> which is fun but if you're using</font>

1331
00:51:06,170 --> 00:51:12,079
this the implicit flow in any other kind

1332
00:51:09,380 --> 00:51:14,299
<font color="#E5E5E5">of application you're breaking all</font><font color="#CCCCCC"> of</font>

1333
00:51:12,079 --> 00:51:18,049
<font color="#CCCCCC">the assumptions</font>

1334
00:51:14,299 --> 00:51:19,219
that that went into it so this is the

1335
00:51:18,049 --> 00:51:21,380
<font color="#E5E5E5">biggest problem I have with the implicit</font>

1336
00:51:19,219 --> 00:51:24,049
flow not that<font color="#E5E5E5"> not</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> design in and of</font>

1337
00:51:21,380 --> 00:51:26,239
itself because<font color="#E5E5E5"> for an in-browser app it</font>

1338
00:51:24,049 --> 00:51:28,849
works pretty well<font color="#E5E5E5"> we didn't have HTTP</font>

1339
00:51:26,239 --> 00:51:30,459
POST message<font color="#E5E5E5"> when this came out</font><font color="#CCCCCC"> these</font>

1340
00:51:28,849 --> 00:51:33,069
days we'd probably<font color="#E5E5E5"> use that instead</font>

1341
00:51:30,459 --> 00:51:36,709
<font color="#E5E5E5">right</font>

1342
00:51:33,069 --> 00:51:39,979
but a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people see this and they</font>

1343
00:51:36,709 --> 00:51:42,649
<font color="#CCCCCC">say</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> what this is simpler this</font>

1344
00:51:39,979 --> 00:51:44,928
<font color="#E5E5E5">is easier and I</font><font color="#CCCCCC"> don't know why I'm doing</font>

1345
00:51:42,650 --> 00:51:46,099
<font color="#CCCCCC">all these</font><font color="#E5E5E5"> redirects and HTTP calls on</font>

1346
00:51:44,929 --> 00:51:48,259
this off code and all this other stuff

1347
00:51:46,099 --> 00:51:51,789
like<font color="#E5E5E5"> that I'm just gonna do the implicit</font>

1348
00:51:48,259 --> 00:51:54,319
flow until something breaks<font color="#E5E5E5"> and then</font>

1349
00:51:51,789 --> 00:51:57,979
then I'll go<font color="#E5E5E5"> figure out what this</font><font color="#CCCCCC"> whole</font>

1350
00:51:54,319 --> 00:52:00,650
thing<font color="#E5E5E5"> is I see this time and</font><font color="#CCCCCC"> time again</font>

1351
00:51:57,979 --> 00:52:04,718
and<font color="#E5E5E5"> this mistake has</font><font color="#CCCCCC"> been at the</font><font color="#E5E5E5"> core of</font>

1352
00:52:00,650 --> 00:52:08,420
a number<font color="#CCCCCC"> of very large-scale</font><font color="#E5E5E5"> attacks</font>

1353
00:52:04,719 --> 00:52:12,170
<font color="#CCCCCC">including</font><font color="#E5E5E5"> one that that did a lot of</font>

1354
00:52:08,420 --> 00:52:13,459
damage<font color="#CCCCCC"> to</font><font color="#E5E5E5"> espn.com</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> more details</font><font color="#CCCCCC"> on</font>

1355
00:52:12,170 --> 00:52:16,369
that<font color="#E5E5E5"> after the talk if anybody wants</font><font color="#CCCCCC"> to</font>

1356
00:52:13,459 --> 00:52:18,229
ping me<font color="#E5E5E5"> about it the problem is</font><font color="#CCCCCC"> that</font>

1357
00:52:16,369 --> 00:52:21,259
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> the simplicity of the implicit</font>

1358
00:52:18,229 --> 00:52:22,819
flow comes at the<font color="#CCCCCC"> cost of assuming that</font>

1359
00:52:21,259 --> 00:52:24,349
everything<font color="#E5E5E5"> is going to stay</font><font color="#CCCCCC"> right inside</font>

1360
00:52:22,819 --> 00:52:27,049
this little box those<font color="#E5E5E5"> assumptions go</font>

1361
00:52:24,349 --> 00:52:28,759
completely<font color="#CCCCCC"> out the door</font><font color="#E5E5E5"> when you're</font>

1362
00:52:27,049 --> 00:52:32,538
using a native<font color="#E5E5E5"> application</font><font color="#CCCCCC"> when you're</font>

1363
00:52:28,759 --> 00:52:34,699
using a<font color="#E5E5E5"> web server based application or</font>

1364
00:52:32,539 --> 00:52:36,769
really anything else other than

1365
00:52:34,699 --> 00:52:40,579
<font color="#E5E5E5">something living directly and completely</font>

1366
00:52:36,769 --> 00:52:42,738
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> the browser and in order</font><font color="#E5E5E5"> to</font>

1367
00:52:40,579 --> 00:52:45,140
encourage<font color="#E5E5E5"> people to</font><font color="#CCCCCC"> use this correctly</font>

1368
00:52:42,739 --> 00:52:48,739
when we wrote<font color="#CCCCCC"> alt we made sure that you</font>

1369
00:52:45,140 --> 00:52:50,749
can't get a<font color="#E5E5E5"> refresh token here well why</font>

1370
00:52:48,739 --> 00:52:52,789
not because well<font color="#E5E5E5"> if the users there in</font>

1371
00:52:50,749 --> 00:52:53,959
the browser you<font color="#CCCCCC"> can just send the back</font>

1372
00:52:52,789 --> 00:52:58,189
and go get<font color="#E5E5E5"> a new access</font><font color="#CCCCCC"> token</font><font color="#E5E5E5"> because</font>

1373
00:52:53,959 --> 00:53:01,160
<font color="#E5E5E5">they're still there but you know a lot</font>

1374
00:52:58,189 --> 00:53:03,199
of<font color="#CCCCCC"> people</font><font color="#E5E5E5"> we're using will start using</font>

1375
00:53:01,160 --> 00:53:06,019
the implicit flow<font color="#E5E5E5"> in other types of</font>

1376
00:53:03,199 --> 00:53:07,400
client apps and say well<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> my user</font>

1377
00:53:06,019 --> 00:53:10,339
went away and<font color="#E5E5E5"> now I need</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> refresh token</font>

1378
00:53:07,400 --> 00:53:12,140
how do I<font color="#CCCCCC"> get that so even though we</font>

1379
00:53:10,339 --> 00:53:19,308
tried to<font color="#CCCCCC"> design that into the protocol</font>

1380
00:53:12,140 --> 00:53:22,009
people<font color="#E5E5E5"> it didn't quite sink in</font><font color="#CCCCCC"> and so I</font>

1381
00:53:19,309 --> 00:53:25,609
<font color="#E5E5E5">really can't</font><font color="#CCCCCC"> recommend the implicit flow</font>

1382
00:53:22,009 --> 00:53:28,000
unless<font color="#CCCCCC"> you are very much</font><font color="#E5E5E5"> in this very</font>

1383
00:53:25,609 --> 00:53:32,740
tight constraint

1384
00:53:28,000 --> 00:53:35,800
right now the<font color="#E5E5E5"> client credentials flow is</font>

1385
00:53:32,740 --> 00:53:37,598
another fun one because<font color="#E5E5E5"> you take the</font>

1386
00:53:35,800 --> 00:53:41,260
four parties of the author of<font color="#E5E5E5"> the</font>

1387
00:53:37,599 --> 00:53:43,690
<font color="#CCCCCC">authorization code flow</font><font color="#E5E5E5"> except that you</font>

1388
00:53:41,260 --> 00:53:45,910
kind<font color="#E5E5E5"> of take the resource</font><font color="#CCCCCC"> owner and</font>

1389
00:53:43,690 --> 00:53:49,330
conceptually<font color="#E5E5E5"> squish them</font><font color="#CCCCCC"> down into</font><font color="#E5E5E5"> the</font>

1390
00:53:45,910 --> 00:53:51,700
client the whole idea between<font color="#CCCCCC"> that for</font>

1391
00:53:49,330 --> 00:53:54,940
<font color="#E5E5E5">this is that well I'm really kind of</font>

1392
00:53:51,700 --> 00:53:56,759
solving the API key use case now at the

1393
00:53:54,940 --> 00:54:01,599
beginning<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the talk we talked about</font>

1394
00:53:56,760 --> 00:54:03,640
how<font color="#CCCCCC"> people use API keys to say like I am</font>

1395
00:54:01,599 --> 00:54:05,890
here on<font color="#CCCCCC"> behalf of</font><font color="#E5E5E5"> this one specific user</font>

1396
00:54:03,640 --> 00:54:09,848
well that's not the only way<font color="#E5E5E5"> we use API</font>

1397
00:54:05,890 --> 00:54:12,490
keys sometimes we say API keys are<font color="#CCCCCC"> hi I</font>

1398
00:54:09,849 --> 00:54:15,609
am this client<font color="#E5E5E5"> I'm not here on behalf of</font>

1399
00:54:12,490 --> 00:54:17,740
the user<font color="#E5E5E5"> I'm here on behalf of me and so</font>

1400
00:54:15,609 --> 00:54:22,029
API let me in and<font color="#CCCCCC"> let</font><font color="#E5E5E5"> me do my client</font>

1401
00:54:17,740 --> 00:54:23,709
things here previously<font color="#E5E5E5"> those API keys</font>

1402
00:54:22,030 --> 00:54:25,180
would have to be known by<font color="#E5E5E5"> all of the</font>

1403
00:54:23,710 --> 00:54:26,800
particular resources<font color="#CCCCCC"> who would then</font><font color="#E5E5E5"> need</font>

1404
00:54:25,180 --> 00:54:28,299
<font color="#CCCCCC">to go and validate that yes this is this</font>

1405
00:54:26,800 --> 00:54:30,220
specific<font color="#CCCCCC"> client talking</font><font color="#E5E5E5"> to me and</font>

1406
00:54:28,300 --> 00:54:33,480
they're allowed to<font color="#E5E5E5"> do this and managing</font>

1407
00:54:30,220 --> 00:54:35,879
all of<font color="#E5E5E5"> that was really</font><font color="#CCCCCC"> kind of complex</font>

1408
00:54:33,480 --> 00:54:38,859
the client credentials<font color="#CCCCCC"> flowing</font><font color="#E5E5E5"> ooofff</font>

1409
00:54:35,880 --> 00:54:41,080
simplifies that because now the client

1410
00:54:38,859 --> 00:54:43,450
<font color="#E5E5E5">takes its credential that represents</font>

1411
00:54:41,080 --> 00:54:45,098
itself<font color="#CCCCCC"> and it goes</font><font color="#E5E5E5"> and talks</font><font color="#CCCCCC"> to the</font>

1412
00:54:43,450 --> 00:54:48,609
<font color="#CCCCCC">authorization server</font><font color="#E5E5E5"> and gets back a</font>

1413
00:54:45,099 --> 00:54:50,320
plain old access token then he<font color="#CCCCCC"> uses that</font>

1414
00:54:48,609 --> 00:54:52,810
access<font color="#CCCCCC"> token</font><font color="#E5E5E5"> to call the protected</font>

1415
00:54:50,320 --> 00:54:54,700
<font color="#CCCCCC">resource now that client is not</font><font color="#E5E5E5"> going to</font>

1416
00:54:52,810 --> 00:54:56,440
get again it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> going to get a</font>

1417
00:54:54,700 --> 00:54:58,450
refresh<font color="#CCCCCC"> token</font><font color="#E5E5E5"> because it can just go get</font>

1418
00:54:56,440 --> 00:55:00,250
a<font color="#CCCCCC"> new token anytime it needs to because</font>

1419
00:54:58,450 --> 00:55:02,439
it has its own credentials<font color="#E5E5E5"> it's not on</font>

1420
00:55:00,250 --> 00:55:05,650
behalf<font color="#E5E5E5"> of</font><font color="#CCCCCC"> a user so there's no user to</font>

1421
00:55:02,440 --> 00:55:06,790
<font color="#E5E5E5">go bother and that access token</font><font color="#CCCCCC"> can then</font>

1422
00:55:05,650 --> 00:55:09,760
be<font color="#CCCCCC"> used for</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of these different</font>

1423
00:55:06,790 --> 00:55:11,320
protected resources but the protected

1424
00:55:09,760 --> 00:55:13,900
resource never needs to<font color="#CCCCCC"> know the</font><font color="#E5E5E5"> clients</font>

1425
00:55:11,320 --> 00:55:15,369
credentials right<font color="#CCCCCC"> I've only got</font><font color="#E5E5E5"> like</font>

1426
00:55:13,900 --> 00:55:18,010
five minutes<font color="#E5E5E5"> left so I'm gonna burn</font>

1427
00:55:15,369 --> 00:55:19,510
through<font color="#E5E5E5"> this next up one of my personal</font>

1428
00:55:18,010 --> 00:55:21,490
favorites the<font color="#E5E5E5"> resource owner password</font>

1429
00:55:19,510 --> 00:55:23,920
flow this<font color="#E5E5E5"> is all about stealing the</font>

1430
00:55:21,490 --> 00:55:25,540
password this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> client saying give</font>

1431
00:55:23,920 --> 00:55:27,220
me<font color="#E5E5E5"> your password and I'll go call an API</font>

1432
00:55:25,540 --> 00:55:29,380
<font color="#E5E5E5">and I promise I'll be nice</font><font color="#CCCCCC"> now hold on a</font>

1433
00:55:27,220 --> 00:55:32,680
sec<font color="#E5E5E5"> we said that this</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> really bad</font><font color="#CCCCCC"> and</font>

1434
00:55:29,380 --> 00:55:35,320
it is so don't use this one but I'm

1435
00:55:32,680 --> 00:55:37,359
still<font color="#E5E5E5"> gonna tell you how to do it so you</font>

1436
00:55:35,320 --> 00:55:40,109
<font color="#CCCCCC">know not</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use it</font><font color="#E5E5E5"> that makes sense</font>

1437
00:55:37,359 --> 00:55:41,590
which is why we specified it basically

1438
00:55:40,109 --> 00:55:43,240
when you<font color="#E5E5E5"> get the</font>

1439
00:55:41,590 --> 00:55:45,670
users password instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> calling all of</font>

1440
00:55:43,240 --> 00:55:47,830
<font color="#E5E5E5">the api's you call the authorization</font>

1441
00:55:45,670 --> 00:55:49,330
<font color="#CCCCCC">server and get an access</font><font color="#E5E5E5"> token</font><font color="#CCCCCC"> and then</font>

1442
00:55:47,830 --> 00:55:50,740
call the protected resources<font color="#E5E5E5"> now your</font>

1443
00:55:49,330 --> 00:55:53,590
protected resources<font color="#E5E5E5"> don't need to know</font>

1444
00:55:50,740 --> 00:55:55,390
the users password<font color="#CCCCCC"> they</font><font color="#E5E5E5"> just need to be</font>

1445
00:55:53,590 --> 00:55:59,410
able to understand<font color="#CCCCCC"> Oh auth access tokens</font>

1446
00:55:55,390 --> 00:56:01,060
<font color="#E5E5E5">this is really intended for was intended</font>

1447
00:55:59,410 --> 00:56:02,290
at the time for legacy<font color="#E5E5E5"> applications</font>

1448
00:56:01,060 --> 00:56:05,259
<font color="#E5E5E5">which would then move to the</font>

1449
00:56:02,290 --> 00:56:06,670
<font color="#CCCCCC">authorization code flow except that what</font>

1450
00:56:05,260 --> 00:56:08,260
happened is we put it in the standard

1451
00:56:06,670 --> 00:56:10,900
<font color="#E5E5E5">and everybody said hey that's easy and</font>

1452
00:56:08,260 --> 00:56:16,390
let just use<font color="#E5E5E5"> that instead forever</font><font color="#CCCCCC"> which</font>

1453
00:56:10,900 --> 00:56:18,400
was never our intent<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> so that's</font>

1454
00:56:16,390 --> 00:56:20,470
a<font color="#E5E5E5"> really bad thing the assertion flows</font>

1455
00:56:18,400 --> 00:56:23,680
if you're<font color="#E5E5E5"> talking to Microsoft you care</font>

1456
00:56:20,470 --> 00:56:28,180
about this<font color="#E5E5E5"> otherwise the device flow is</font>

1457
00:56:23,680 --> 00:56:29,649
all about<font color="#E5E5E5"> a limited access client we're</font>

1458
00:56:28,180 --> 00:56:32,109
seeing a lot more<font color="#E5E5E5"> of these days so this</font>

1459
00:56:29,650 --> 00:56:34,180
is not in<font color="#E5E5E5"> the core ooofff specifications</font>

1460
00:56:32,110 --> 00:56:35,740
<font color="#E5E5E5">this is in an extension that's working</font>

1461
00:56:34,180 --> 00:56:39,129
its<font color="#E5E5E5"> way through</font><font color="#CCCCCC"> the working</font><font color="#E5E5E5"> group right</font>

1462
00:56:35,740 --> 00:56:41,950
<font color="#CCCCCC">now the whole</font><font color="#E5E5E5"> idea here is that your</font>

1463
00:56:39,130 --> 00:56:44,080
device starts an OAuth process<font color="#E5E5E5"> and then</font>

1464
00:56:41,950 --> 00:56:45,850
<font color="#E5E5E5">it gives you</font><font color="#CCCCCC"> a random</font><font color="#E5E5E5"> a random code from</font>

1465
00:56:44,080 --> 00:56:47,770
the authorization server<font color="#E5E5E5"> that you then</font>

1466
00:56:45,850 --> 00:56:49,720
go and<font color="#E5E5E5"> plug in using another device if</font>

1467
00:56:47,770 --> 00:56:51,340
you've ever used<font color="#CCCCCC"> a set-top</font><font color="#E5E5E5"> box</font><font color="#CCCCCC"> to like</font>

1468
00:56:49,720 --> 00:56:53,350
connect to Yahoo or something<font color="#E5E5E5"> like that</font>

1469
00:56:51,340 --> 00:56:55,480
this<font color="#E5E5E5"> is what you're doing</font><font color="#CCCCCC"> you're</font>

1470
00:56:53,350 --> 00:56:59,470
actually participating<font color="#E5E5E5"> in an OAuth dance</font>

1471
00:56:55,480 --> 00:57:01,210
with multiple<font color="#E5E5E5"> devices so what happens is</font>

1472
00:56:59,470 --> 00:57:02,980
you type in that<font color="#CCCCCC"> code to the</font>

1473
00:57:01,210 --> 00:57:04,960
<font color="#CCCCCC">authorization server or you you know</font>

1474
00:57:02,980 --> 00:57:06,880
<font color="#CCCCCC">scan a generated barcode or</font><font color="#E5E5E5"> anything</font>

1475
00:57:04,960 --> 00:57:08,620
like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> authorization</font><font color="#CCCCCC"> server says</font>

1476
00:57:06,880 --> 00:57:10,210
hey I've got a request<font color="#E5E5E5"> that was waiting</font>

1477
00:57:08,620 --> 00:57:12,040
<font color="#E5E5E5">for this</font><font color="#CCCCCC"> I'm now</font><font color="#E5E5E5"> gonna bind it to your</font>

1478
00:57:10,210 --> 00:57:15,490
<font color="#CCCCCC">account and I'm gonna send you</font><font color="#E5E5E5"> across</font>

1479
00:57:12,040 --> 00:57:17,320
and give you an access<font color="#E5E5E5"> token</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the end</font>

1480
00:57:15,490 --> 00:57:18,879
of all of<font color="#E5E5E5"> those you get an access token</font>

1481
00:57:17,320 --> 00:57:21,910
<font color="#E5E5E5">and all of your protected resources</font>

1482
00:57:18,880 --> 00:57:23,290
speak those now native clients<font color="#E5E5E5"> very</font>

1483
00:57:21,910 --> 00:57:25,299
quickly are things that<font color="#CCCCCC"> are running</font><font color="#E5E5E5"> on</font>

1484
00:57:23,290 --> 00:57:26,560
<font color="#CCCCCC">your devices</font><font color="#E5E5E5"> stuff that's running on</font>

1485
00:57:25,300 --> 00:57:28,840
your<font color="#CCCCCC"> phone on</font><font color="#E5E5E5"> your laptop stuff like</font>

1486
00:57:26,560 --> 00:57:30,490
that they functionally live<font color="#CCCCCC"> outside the</font>

1487
00:57:28,840 --> 00:57:33,340
browser so this is a different world<font color="#E5E5E5"> so</font>

1488
00:57:30,490 --> 00:57:36,040
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of accessing</font><font color="#E5E5E5"> the content through</font>

1489
00:57:33,340 --> 00:57:38,190
your system browser<font color="#CCCCCC"> you're working</font>

1490
00:57:36,040 --> 00:57:40,840
directly<font color="#CCCCCC"> with an application alright</font>

1491
00:57:38,190 --> 00:57:43,150
that<font color="#E5E5E5"> means really two things one</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> got</font>

1492
00:57:40,840 --> 00:57:44,410
<font color="#E5E5E5">to deal</font><font color="#CCCCCC"> with secrets</font><font color="#E5E5E5"> and two you got to</font>

1493
00:57:43,150 --> 00:57:46,390
be able to<font color="#E5E5E5"> get information back in the</font>

1494
00:57:44,410 --> 00:57:49,170
front<font color="#CCCCCC"> Channel now dealing</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> Secrets</font>

1495
00:57:46,390 --> 00:57:51,549
<font color="#E5E5E5">is really kind of a problem</font><font color="#CCCCCC"> because a</font>

1496
00:57:49,170 --> 00:57:53,950
native application<font color="#CCCCCC"> isn't very good</font><font color="#E5E5E5"> at</font>

1497
00:57:51,550 --> 00:57:55,269
<font color="#CCCCCC">keeping a secret</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the user</font><font color="#E5E5E5"> his user</font>

1498
00:57:53,950 --> 00:57:57,098
can always poke in<font color="#E5E5E5"> any</font>

1499
00:57:55,269 --> 00:57:58,718
buddy in this room<font color="#E5E5E5"> could go and poke in</font>

1500
00:57:57,099 --> 00:58:00,339
and figure out<font color="#E5E5E5"> what secrets are there</font>

1501
00:57:58,719 --> 00:58:01,959
which means<font color="#E5E5E5"> that if</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> the same</font>

1502
00:58:00,339 --> 00:58:03,038
application<font color="#E5E5E5"> installed on a thousand</font>

1503
00:58:01,959 --> 00:58:04,569
<font color="#CCCCCC">different devices and</font><font color="#E5E5E5"> you've got the</font>

1504
00:58:03,039 --> 00:58:07,089
same secret it's not really a<font color="#E5E5E5"> secret</font>

1505
00:58:04,569 --> 00:58:09,369
anymore<font color="#E5E5E5"> o auth one assumed that it</font>

1506
00:58:07,089 --> 00:58:11,259
always<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be which was a mistake in</font>

1507
00:58:09,369 --> 00:58:14,169
OAuth 2 we said you know<font color="#CCCCCC"> what</font><font color="#E5E5E5"> don't</font>

1508
00:58:11,259 --> 00:58:15,880
<font color="#CCCCCC">pretend anymore</font><font color="#E5E5E5"> that that's a secret so</font>

1509
00:58:14,169 --> 00:58:17,558
<font color="#E5E5E5">you can either use dynamic client</font>

1510
00:58:15,880 --> 00:58:19,779
registration to give every instance a

1511
00:58:17,559 --> 00:58:22,599
new secret<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is an extension OAuth</font>

1512
00:58:19,779 --> 00:58:24,459
<font color="#E5E5E5">or you can use a public client which</font>

1513
00:58:22,599 --> 00:58:26,890
doesn't have a secret<font color="#CCCCCC"> now how do</font><font color="#E5E5E5"> we</font>

1514
00:58:24,459 --> 00:58:29,229
protect<font color="#E5E5E5"> those oops I put these in</font><font color="#CCCCCC"> a</font>

1515
00:58:26,890 --> 00:58:31,749
weird order<font color="#CCCCCC"> sorry when I trim down</font><font color="#E5E5E5"> the</font>

1516
00:58:29,229 --> 00:58:35,589
<font color="#E5E5E5">slides it's a lot of my transitions are</font>

1517
00:58:31,749 --> 00:58:36,819
what<font color="#CCCCCC"> got cut now to deal with</font><font color="#E5E5E5"> that</font>

1518
00:58:35,589 --> 00:58:40,779
secret<font color="#CCCCCC"> and said we can</font><font color="#E5E5E5"> use this thing</font>

1519
00:58:36,819 --> 00:58:43,659
<font color="#CCCCCC">called pixie now pixie</font><font color="#E5E5E5"> oh I remember</font><font color="#CCCCCC"> why</font>

1520
00:58:40,779 --> 00:58:45,789
I did this in<font color="#E5E5E5"> this order right so plot</font>

1521
00:58:43,659 --> 00:58:47,109
some Pixies in a moment how do you get

1522
00:58:45,789 --> 00:58:49,449
<font color="#E5E5E5">information back to the client in the</font>

1523
00:58:47,109 --> 00:58:50,799
<font color="#E5E5E5">first place well you</font><font color="#CCCCCC"> need a redirect URI</font>

1524
00:58:49,449 --> 00:58:52,809
if you're<font color="#E5E5E5"> running a web server that's</font>

1525
00:58:50,799 --> 00:58:54,339
<font color="#E5E5E5">awesome it's just HTTP</font><font color="#CCCCCC"> if you're running</font>

1526
00:58:52,809 --> 00:58:57,429
a native application you've got a few

1527
00:58:54,339 --> 00:58:58,779
different<font color="#CCCCCC"> options you can</font><font color="#E5E5E5"> do a custom</font>

1528
00:58:57,429 --> 00:59:01,479
URI scheme which<font color="#CCCCCC"> is far and</font><font color="#E5E5E5"> away the</font>

1529
00:58:58,779 --> 00:59:03,369
<font color="#E5E5E5">most common these days you can have some</font>

1530
00:59:01,479 --> 00:59:04,689
sort<font color="#CCCCCC"> of locally hosted random web server</font>

1531
00:59:03,369 --> 00:59:06,639
<font color="#E5E5E5">Google's starting to do this more on</font>

1532
00:59:04,689 --> 00:59:08,499
their apps<font color="#E5E5E5"> and you can have a remote</font>

1533
00:59:06,639 --> 00:59:11,649
host<font color="#E5E5E5"> with either push notification or</font>

1534
00:59:08,499 --> 00:59:12,999
remote URL capture on native device<font color="#E5E5E5"> not</font>

1535
00:59:11,649 --> 00:59:16,118
going to go<font color="#E5E5E5"> into detail how these work</font>

1536
00:59:12,999 --> 00:59:17,738
they're all<font color="#CCCCCC"> platforms</font><font color="#E5E5E5"> specific the TLDR</font>

1537
00:59:16,119 --> 00:59:20,429
version is that there are<font color="#E5E5E5"> ways to get</font>

1538
00:59:17,739 --> 00:59:25,239
<font color="#E5E5E5">information back</font><font color="#CCCCCC"> to a non HTTP server</font>

1539
00:59:20,429 --> 00:59:26,769
using using<font color="#E5E5E5"> OAuth today now the problem</font>

1540
00:59:25,239 --> 00:59:28,959
with<font color="#E5E5E5"> those custom schemes is that on</font>

1541
00:59:26,769 --> 00:59:31,808
today's platforms anybody can register

1542
00:59:28,959 --> 00:59:33,578
for<font color="#E5E5E5"> any scheme it's just you pop</font><font color="#CCCCCC"> up you</font>

1543
00:59:31,809 --> 00:59:38,229
say hi I'm an app I want<font color="#E5E5E5"> this one and</font>

1544
00:59:33,579 --> 00:59:39,819
system<font color="#E5E5E5"> says</font><font color="#CCCCCC"> okay so combine those two</font>

1545
00:59:38,229 --> 00:59:43,629
aspects the fact that<font color="#CCCCCC"> anybody can</font><font color="#E5E5E5"> get</font>

1546
00:59:39,819 --> 00:59:45,038
any scheme and the<font color="#CCCCCC"> and the client no</font>

1547
00:59:43,630 --> 00:59:47,199
longer<font color="#CCCCCC"> has a</font><font color="#E5E5E5"> secret to authenticate</font><font color="#CCCCCC"> the</font>

1548
00:59:45,039 --> 00:59:49,209
instance<font color="#CCCCCC"> you come</font><font color="#E5E5E5"> up with</font><font color="#CCCCCC"> the world</font>

1549
00:59:47,199 --> 00:59:52,839
where pixie starts to make<font color="#CCCCCC"> sense now</font>

1550
00:59:49,209 --> 00:59:54,428
pixie proof<font color="#E5E5E5"> key for code exchange</font><font color="#CCCCCC"> very</font>

1551
00:59:52,839 --> 00:59:56,078
shortly the<font color="#E5E5E5"> client generates a secret</font>

1552
00:59:54,429 --> 00:59:57,369
hashes it sends the hash to the

1553
00:59:56,079 --> 00:59:59,769
<font color="#CCCCCC">authorization server in the front</font>

1554
00:59:57,369 --> 01:00:01,630
<font color="#E5E5E5">channel authorization channel does its</font>

1555
00:59:59,769 --> 01:00:03,069
notarization server does<font color="#E5E5E5"> this normal</font>

1556
01:00:01,630 --> 01:00:04,749
dance sends you back<font color="#E5E5E5"> the authorization</font>

1557
01:00:03,069 --> 01:00:07,179
code<font color="#CCCCCC"> then when you send back</font><font color="#E5E5E5"> the</font>

1558
01:00:04,749 --> 01:00:08,839
authorization code<font color="#CCCCCC"> you send the</font><font color="#E5E5E5"> non</font><font color="#CCCCCC"> hash</font>

1559
01:00:07,179 --> 01:00:10,609
secret<font color="#CCCCCC"> along side of it</font>

1560
01:00:08,839 --> 01:00:13,219
to prove<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you were the one</font><font color="#CCCCCC"> that made</font>

1561
01:00:10,609 --> 01:00:14,598
that<font color="#CCCCCC"> initial request</font><font color="#E5E5E5"> this allows you to</font>

1562
01:00:13,219 --> 01:00:16,849
tie<font color="#E5E5E5"> in</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> that transaction</font><font color="#CCCCCC"> without</font>

1563
01:00:14,599 --> 01:00:19,190
<font color="#E5E5E5">having a unique identity for the client</font>

1564
01:00:16,849 --> 01:00:21,410
in other words you don't<font color="#E5E5E5"> need the client</font>

1565
01:00:19,190 --> 01:00:22,849
credentials to<font color="#E5E5E5"> get a similar level not</font>

1566
01:00:21,410 --> 01:00:25,819
quite the same<font color="#E5E5E5"> but a similar</font><font color="#CCCCCC"> level of</font>

1567
01:00:22,849 --> 01:00:27,319
security here<font color="#CCCCCC"> you can verify the</font>

1568
01:00:25,819 --> 01:00:28,940
challenge here because<font color="#E5E5E5"> you now</font><font color="#CCCCCC"> have the</font>

1569
01:00:27,319 --> 01:00:30,529
<font color="#E5E5E5">native you've saved the hash from before</font>

1570
01:00:28,940 --> 01:00:33,019
you<font color="#CCCCCC"> regenerate the hash and you're good</font>

1571
01:00:30,529 --> 01:00:34,249
<font color="#E5E5E5">to go all right there are lots of</font>

1572
01:00:33,019 --> 01:00:37,879
different use cases for all of these

1573
01:00:34,249 --> 01:00:39,169
different grant types<font color="#E5E5E5"> this is really how</font>

1574
01:00:37,880 --> 01:00:42,920
<font color="#E5E5E5">you should go</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> choosing them the</font>

1575
01:00:39,170 --> 01:00:44,509
first question that<font color="#E5E5E5"> you ask is not do I</font>

1576
01:00:42,920 --> 01:00:46,489
have a native application am i running

1577
01:00:44,509 --> 01:00:49,940
in a browser<font color="#CCCCCC"> am i doing its who am i</font>

1578
01:00:46,489 --> 01:00:52,069
delegating for OAuth is fundamentally a

1579
01:00:49,940 --> 01:00:54,170
delegation protocol<font color="#E5E5E5"> if the first</font>

1580
01:00:52,069 --> 01:00:56,660
<font color="#E5E5E5">question you</font><font color="#CCCCCC"> should be asking is who am</font>

1581
01:00:54,170 --> 01:00:59,150
<font color="#E5E5E5">i delegating for is it an end user is it</font>

1582
01:00:56,660 --> 01:01:03,259
<font color="#E5E5E5">some third party entity that's issuing</font>

1583
01:00:59,150 --> 01:01:04,910
assertions<font color="#CCCCCC"> or is it just</font><font color="#E5E5E5"> me once you</font>

1584
01:01:03,259 --> 01:01:07,969
know who you're delegating<font color="#CCCCCC"> for then</font><font color="#E5E5E5"> you</font>

1585
01:01:04,910 --> 01:01:09,499
can start to<font color="#E5E5E5"> determine which kind of</font>

1586
01:01:07,969 --> 01:01:11,150
clients<font color="#CCCCCC"> that you're</font><font color="#E5E5E5"> going to be using</font>

1587
01:01:09,499 --> 01:01:14,029
and therefore which flows you're going

1588
01:01:11,150 --> 01:01:15,259
to be using Open ID Connect is<font color="#E5E5E5"> identity</font>

1589
01:01:14,029 --> 01:01:16,819
on top of this we don't<font color="#E5E5E5"> have time to get</font>

1590
01:01:15,259 --> 01:01:19,759
into it dynamic registration<font color="#CCCCCC"> lets you</font>

1591
01:01:16,819 --> 01:01:21,619
get clients<font color="#CCCCCC"> blah blah blah token</font>

1592
01:01:19,759 --> 01:01:24,369
introspection we don't have time for all

1593
01:01:21,619 --> 01:01:27,219
this there's a lot of stuff with OAuth

1594
01:01:24,369 --> 01:01:30,400
this is why token binding is a bad<font color="#E5E5E5"> idea</font>

1595
01:01:27,219 --> 01:01:35,539
<font color="#CCCCCC">more</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> that on</font><font color="#E5E5E5"> Wednesday all right</font>

1596
01:01:30,400 --> 01:01:38,539
wrapping up there is a survey<font color="#CCCCCC"> if anybody</font>

1597
01:01:35,539 --> 01:01:40,729
<font color="#E5E5E5">wants you can write that down</font><font color="#CCCCCC"> say how</font>

1598
01:01:38,539 --> 01:01:43,819
<font color="#E5E5E5">good this tutorial was or how terrible</font>

1599
01:01:40,729 --> 01:01:45,109
it was<font color="#CCCCCC"> let eyestalk know either way and</font>

1600
01:01:43,819 --> 01:01:48,769
that link<font color="#CCCCCC"> should be getting passed</font>

1601
01:01:45,109 --> 01:01:50,569
around<font color="#E5E5E5"> as well and that's it</font>

1602
01:01:48,769 --> 01:01:52,218
unfortunately we're out<font color="#CCCCCC"> of time I can't</font>

1603
01:01:50,569 --> 01:01:53,839
go into detail<font color="#E5E5E5"> on the other stuff like</font><font color="#CCCCCC"> I</font>

1604
01:01:52,219 --> 01:01:55,489
said there<font color="#E5E5E5"> was a lot of content here</font><font color="#CCCCCC"> to</font>

1605
01:01:53,839 --> 01:01:57,380
cover<font color="#CCCCCC"> thank you all for your attention</font>

1606
01:01:55,489 --> 01:02:00,130
and I will<font color="#E5E5E5"> see you around this week</font>

1607
01:01:57,380 --> 01:02:00,130
thank<font color="#E5E5E5"> you</font>

1608
01:02:01,160 --> 01:02:06,649
and once again anybody<font color="#E5E5E5"> that wants the</font>

1609
01:02:04,299 --> 01:02:30,160
<font color="#E5E5E5">wants the discount code</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> OAuth in</font>

1610
01:02:06,650 --> 01:02:33,069
action book<font color="#E5E5E5"> come talk to me yeah it's</font>

1611
01:02:30,160 --> 01:02:35,480
it's it's<font color="#E5E5E5"> hard because sometimes things</font>

1612
01:02:33,069 --> 01:02:48,920
go a little long or a little short

1613
01:02:35,480 --> 01:02:50,660
different<font color="#E5E5E5"> parts okay sorry are you</font>

1614
01:02:48,920 --> 01:02:52,880
starting at<font color="#E5E5E5"> one thirty or</font><font color="#CCCCCC"> forty five</font>

1615
01:02:50,660 --> 01:02:54,710
<font color="#E5E5E5">okay good fifty minute break</font><font color="#CCCCCC"> in between</font>

1616
01:02:52,880 --> 01:02:58,539
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> good I was</font><font color="#CCCCCC"> hoping that they had</font>

1617
01:02:54,710 --> 01:02:58,539
done<font color="#E5E5E5"> something like that</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> yeah oh yeah</font>

1618
01:03:01,930 --> 01:03:08,720
<font color="#E5E5E5">all right so here's the clicker this is</font>

1619
01:03:05,299 --> 01:03:11,930
set up<font color="#CCCCCC"> for</font><font color="#E5E5E5"> HDMI output but VGA behind it</font>

1620
01:03:08,720 --> 01:03:14,868
so whatever<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do there</font><font color="#E5E5E5"> okay so</font>

1621
01:03:11,930 --> 01:03:16,460
<font color="#E5E5E5">that's we gen off of this no this is my</font>

1622
01:03:14,869 --> 01:03:18,500
<font color="#E5E5E5">elect</font><font color="#CCCCCC"> that's your laptop</font><font color="#E5E5E5"> so this is</font>

1623
01:03:16,460 --> 01:03:20,240
<font color="#E5E5E5">going away okay so this is a clicker and</font>

1624
01:03:18,500 --> 01:03:27,289
that's got the up arrow a USB stick

1625
01:03:20,240 --> 01:03:30,200
thank you and that will automatically

1626
01:03:27,289 --> 01:03:31,789
tie everything<font color="#CCCCCC"> into me</font><font color="#E5E5E5"> deco so because</font>

1627
01:03:30,200 --> 01:03:34,868
this this<font color="#E5E5E5"> goes into their splitter</font><font color="#CCCCCC"> so</font>

1628
01:03:31,789 --> 01:03:34,869
<font color="#CCCCCC">that's why you have to use this one</font>

1629
01:03:36,039 --> 01:03:40,730
little piece<font color="#CCCCCC"> of magic</font><font color="#E5E5E5"> to make that work</font>

1630
01:03:39,109 --> 01:03:43,190
like I<font color="#E5E5E5"> think I've got I think I have you</font>

1631
01:03:40,730 --> 01:03:44,720
<font color="#E5E5E5">that</font><font color="#CCCCCC"> time for some nail fantastic if not</font>

1632
01:03:43,190 --> 01:03:46,250
the<font color="#CCCCCC"> Secretariat it should be floating</font>

1633
01:03:44,720 --> 01:03:50,649
<font color="#E5E5E5">around and they've got a million</font>

1634
01:03:46,250 --> 01:03:50,650
<font color="#CCCCCC">adapters so alright alright</font><font color="#E5E5E5"> enjoy</font>

1635
01:03:58,309 --> 01:04:46,779
oh<font color="#CCCCCC"> it's back HDMI port all right</font>

1636
01:05:28,880 --> 01:05:31,929
[Music]

1637
01:05:49,020 --> 01:05:52,050
[Music]

1638
01:06:45,930 --> 01:06:48,969
[Music]

1639
01:07:05,999 --> 01:07:08,999
yeah

