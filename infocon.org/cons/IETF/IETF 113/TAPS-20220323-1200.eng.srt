1
00:00:08,639 --> 00:00:10,559
audio check

2
00:00:10,559 --> 00:00:12,880
yeah we can we can see your slides and

3
00:00:12,880 --> 00:00:14,320
we can see

4
00:00:14,320 --> 00:00:15,360
you

5
00:00:15,360 --> 00:00:17,840
that's great uh

6
00:00:17,840 --> 00:00:21,439
and we're also on the top of the hour so

7
00:00:21,439 --> 00:00:24,240
maybe let's get started already uh hi

8
00:00:24,240 --> 00:00:26,640
everybody uh welcome to the transport

9
00:00:26,640 --> 00:00:28,880
services working group it's good to see

10
00:00:28,880 --> 00:00:32,640
everybody on site or online

11
00:00:32,640 --> 00:00:35,600
those who are on site please remember to

12
00:00:35,600 --> 00:00:38,320
join me deco to sign the blue sheets and

13
00:00:38,320 --> 00:00:41,200
join the mic queue

14
00:00:41,200 --> 00:00:43,600
using the full version of mideko will

15
00:00:43,600 --> 00:00:46,879
give you access to the chat as well

16
00:00:46,879 --> 00:00:48,879
also i don't see anybody sitting towards

17
00:00:48,879 --> 00:00:50,160
the back of the room but i hear the

18
00:00:50,160 --> 00:00:52,239
acoustics are kind of better at the

19
00:00:52,239 --> 00:00:54,719
front if that's an issue um

20
00:00:54,719 --> 00:00:57,360
reminder that this meeting is being

21
00:00:57,360 --> 00:00:58,960
recorded

22
00:00:58,960 --> 00:01:01,120
and by the way my name is rhys engert i

23
00:01:01,120 --> 00:01:03,199
go by theresa in the data tracker and

24
00:01:03,199 --> 00:01:04,959
various systems

25
00:01:04,959 --> 00:01:07,600
my co-chair aaron fogg is joining us

26
00:01:07,600 --> 00:01:10,479
remotely and uh

27
00:01:10,479 --> 00:01:12,960
without further ado i will pass it to

28
00:01:12,960 --> 00:01:16,720
him for these chairs update

29
00:01:16,880 --> 00:01:20,960
hello everybody uh can you hear me

30
00:01:21,200 --> 00:01:23,600
you're a little bit quiet actually if

31
00:01:23,600 --> 00:01:24,479
you can

32
00:01:24,479 --> 00:01:27,439
turn it up a little bit i'll do what i

33
00:01:27,439 --> 00:01:30,320
can changing at least from

34
00:01:30,320 --> 00:01:31,680
here

35
00:01:31,680 --> 00:01:34,400
i'll i'll try to speak more forcefully

36
00:01:34,400 --> 00:01:35,759
um

37
00:01:35,759 --> 00:01:37,119
thanks

38
00:01:37,119 --> 00:01:41,600
okay so uh hi i'm aaron falk i recognize

39
00:01:41,600 --> 00:01:43,840
some of you in the very tiny window uh

40
00:01:43,840 --> 00:01:46,079
uh the president in vienna glad you guys

41
00:01:46,079 --> 00:01:48,000
were able to make it

42
00:01:48,000 --> 00:01:49,200
uh

43
00:01:49,200 --> 00:01:50,320
no well

44
00:01:50,320 --> 00:01:52,479
anything that you say here is considered

45
00:01:52,479 --> 00:01:54,560
an itf contribution you've probably seen

46
00:01:54,560 --> 00:01:57,600
this multiple times

47
00:01:57,680 --> 00:01:59,439
itf meeting tips hopefully you've seen

48
00:01:59,439 --> 00:02:01,520
this as well especially those folks who

49
00:02:01,520 --> 00:02:03,280
are on site

50
00:02:03,280 --> 00:02:06,560
please use the meat echo

51
00:02:06,560 --> 00:02:09,440
light client to

52
00:02:09,440 --> 00:02:12,879
get access to the mic queue

53
00:02:12,879 --> 00:02:15,840
and um turn off your audio and video if

54
00:02:15,840 --> 00:02:19,200
you are not on site

55
00:02:19,200 --> 00:02:20,560
and

56
00:02:20,560 --> 00:02:22,640
um i see i should be using a headset

57
00:02:22,640 --> 00:02:25,280
well i couldn't pair my headset so i'll

58
00:02:25,280 --> 00:02:26,400
have to muddle through with that but

59
00:02:26,400 --> 00:02:28,560
it's a short presentation and nothing

60
00:02:28,560 --> 00:02:30,720
too controversial here i think

61
00:02:30,720 --> 00:02:32,319
today's agenda

62
00:02:32,319 --> 00:02:33,120
so

63
00:02:33,120 --> 00:02:35,440
um we are almost halfway through the

64
00:02:35,440 --> 00:02:36,800
chairs update so we're already making

65
00:02:36,800 --> 00:02:38,480
progress on the agenda

66
00:02:38,480 --> 00:02:40,239
tommy's going to talk about

67
00:02:40,239 --> 00:02:42,959
the quick mapping document

68
00:02:42,959 --> 00:02:46,160
uh gorban's going to talk about a new

69
00:02:46,160 --> 00:02:47,760
quick implementation

70
00:02:47,760 --> 00:02:49,120
pan api

71
00:02:49,120 --> 00:02:51,360
we have some time for open mic

72
00:02:51,360 --> 00:02:54,640
and uh that's the plan for today and

73
00:02:54,640 --> 00:02:57,040
please note that there's video taken of

74
00:02:57,040 --> 00:02:58,480
this session it will be recorded and

75
00:02:58,480 --> 00:03:01,519
available for later viewing

76
00:03:01,519 --> 00:03:04,480
okay a few updates on what's been

77
00:03:04,480 --> 00:03:06,879
happening

78
00:03:07,280 --> 00:03:11,120
so uh since itf 111

79
00:03:11,120 --> 00:03:13,599
which was some time ago we've had six

80
00:03:13,599 --> 00:03:15,200
interim meetings we're trying to meet

81
00:03:15,200 --> 00:03:17,920
basically once a month

82
00:03:17,920 --> 00:03:20,400
two of our three main docs the

83
00:03:20,400 --> 00:03:23,440
architecture document and the

84
00:03:23,440 --> 00:03:26,720
api document have received reviews from

85
00:03:26,720 --> 00:03:27,440
the

86
00:03:27,440 --> 00:03:29,599
art reviews and sector

87
00:03:29,599 --> 00:03:32,959
as well as some internal deep reviews

88
00:03:32,959 --> 00:03:36,400
um working groups been focusing on

89
00:03:36,400 --> 00:03:39,920
uh resolving uh those review comments

90
00:03:39,920 --> 00:03:42,560
which were plentiful and we're grateful

91
00:03:42,560 --> 00:03:45,280
for getting that kind of external review

92
00:03:45,280 --> 00:03:46,879
and uh and

93
00:03:46,879 --> 00:03:49,120
we've been focusing naturally on getting

94
00:03:49,120 --> 00:03:50,560
the third document the implementation

95
00:03:50,560 --> 00:03:51,599
draft

96
00:03:51,599 --> 00:03:52,879
um

97
00:03:52,879 --> 00:03:57,120
ready for working group last call

98
00:03:57,840 --> 00:04:01,280
the last item to point out was

99
00:04:01,280 --> 00:04:04,720
the these documents had

100
00:04:05,280 --> 00:04:07,360
have many contributors and the author

101
00:04:07,360 --> 00:04:09,840
list had grown quite long

102
00:04:09,840 --> 00:04:13,280
it violated the recommendation of five

103
00:04:13,280 --> 00:04:15,599
authors for an rfc

104
00:04:15,599 --> 00:04:18,079
um the chairs and the authors

105
00:04:18,079 --> 00:04:21,199
uh discussed this at length um

106
00:04:21,199 --> 00:04:22,720
some of the

107
00:04:22,720 --> 00:04:24,800
contributors the smaller contributors

108
00:04:24,800 --> 00:04:26,240
elected to remove their name from the

109
00:04:26,240 --> 00:04:27,600
author list

110
00:04:27,600 --> 00:04:29,919
we're still i think at seven authors on

111
00:04:29,919 --> 00:04:33,199
one document and five for the other two

112
00:04:33,199 --> 00:04:34,639
these are all

113
00:04:34,639 --> 00:04:36,639
significant contributors

114
00:04:36,639 --> 00:04:38,639
we've got a justification written for

115
00:04:38,639 --> 00:04:39,759
that

116
00:04:39,759 --> 00:04:42,479
when we submit this to the iesg

117
00:04:42,479 --> 00:04:44,160
and i feel really good about where this

118
00:04:44,160 --> 00:04:46,720
is right now i'm hoping that

119
00:04:46,720 --> 00:04:48,479
it doesn't become a problem for

120
00:04:48,479 --> 00:04:51,440
publishing the docs

121
00:04:52,080 --> 00:04:54,800
and naturally our area director is up to

122
00:04:54,800 --> 00:04:57,840
date on

123
00:04:58,080 --> 00:05:00,000
some specifics on the documents

124
00:05:00,000 --> 00:05:02,560
themselves the architecture document has

125
00:05:02,560 --> 00:05:05,360
concluded a working group last call

126
00:05:05,360 --> 00:05:08,160
and that included a bunch of deep

127
00:05:08,160 --> 00:05:11,520
reviews and external reviews

128
00:05:11,520 --> 00:05:14,400
the interface document in the same state

129
00:05:14,400 --> 00:05:17,039
there's still

130
00:05:17,520 --> 00:05:19,120
not all the issues resolved but we're

131
00:05:19,120 --> 00:05:20,560
down to only two

132
00:05:20,560 --> 00:05:22,639
which is awesome

133
00:05:22,639 --> 00:05:26,000
and uh the implementation draft is uh i

134
00:05:26,000 --> 00:05:28,479
think not quite there yet there's uh

135
00:05:28,479 --> 00:05:30,639
still a handful of open issues

136
00:05:30,639 --> 00:05:32,479
um but um

137
00:05:32,479 --> 00:05:32,840
um

138
00:05:32,840 --> 00:05:34,560
[Music]

139
00:05:34,560 --> 00:05:36,960
uh they're

140
00:05:36,960 --> 00:05:38,880
my assertion and i i think the current

141
00:05:38,880 --> 00:05:40,880
plan is to take this document to working

142
00:05:40,880 --> 00:05:42,639
group last call after the ietf we'll see

143
00:05:42,639 --> 00:05:45,199
if there's any discussion in that um

144
00:05:45,199 --> 00:05:46,160
uh

145
00:05:46,160 --> 00:05:48,240
when i'm through with these slides or uh

146
00:05:48,240 --> 00:05:49,520
and during the

147
00:05:49,520 --> 00:05:50,560
um

148
00:05:50,560 --> 00:05:53,919
uh the open mic time at the end um one

149
00:05:53,919 --> 00:05:56,720
thing that we'd like to do is uh is see

150
00:05:56,720 --> 00:06:00,000
if we can get um some non-authors

151
00:06:00,000 --> 00:06:02,800
committed to doing a thorough review of

152
00:06:02,800 --> 00:06:04,400
the document during the working group

153
00:06:04,400 --> 00:06:05,600
last call

154
00:06:05,600 --> 00:06:07,759
and so i thought i guess i should pause

155
00:06:07,759 --> 00:06:10,240
here to see if anybody

156
00:06:10,240 --> 00:06:11,759
would like to

157
00:06:11,759 --> 00:06:15,160
sign up to uh take that on

158
00:06:15,160 --> 00:06:16,400
[Music]

159
00:06:16,400 --> 00:06:19,120
i think we've found that um

160
00:06:19,120 --> 00:06:22,240
it's been useful for sort of editorial

161
00:06:22,240 --> 00:06:24,000
continuity and consistency with the

162
00:06:24,000 --> 00:06:26,639
other documents and just general quality

163
00:06:26,639 --> 00:06:27,919
um

164
00:06:27,919 --> 00:06:30,799
so uh

165
00:06:31,600 --> 00:06:35,440
my view of the room maybe if anybody is

166
00:06:35,440 --> 00:06:37,199
interested in taking that on you could

167
00:06:37,199 --> 00:06:40,479
just join the queue

168
00:06:47,360 --> 00:06:51,039
it's fascinating reading i promise you

169
00:06:51,520 --> 00:06:53,599
besides

170
00:06:53,599 --> 00:06:54,960
uh let's see do i have to push something

171
00:06:54,960 --> 00:06:58,799
so zad can talk i think i do

172
00:06:58,960 --> 00:07:00,960
hello

173
00:07:00,960 --> 00:07:03,120
uh so first of two things first of all

174
00:07:03,120 --> 00:07:05,120
thanks for resolving the author list

175
00:07:05,120 --> 00:07:07,440
issue i mean we have we have really

176
00:07:07,440 --> 00:07:09,680
worked really well together as a as a

177
00:07:09,680 --> 00:07:10,479
team

178
00:07:10,479 --> 00:07:12,639
to resolve that so i really appreciate

179
00:07:12,639 --> 00:07:14,240
all the authors and the

180
00:07:14,240 --> 00:07:16,800
chairs to actually helping uh on that

181
00:07:16,800 --> 00:07:17,599
one

182
00:07:17,599 --> 00:07:21,440
um uh so on this this this uh jointly

183
00:07:21,440 --> 00:07:23,840
submit jointly together i mean we can do

184
00:07:23,840 --> 00:07:25,840
that um

185
00:07:25,840 --> 00:07:28,479
do we see any any point of

186
00:07:28,479 --> 00:07:30,400
those who completed working last call to

187
00:07:30,400 --> 00:07:32,960
go for iitf last call um

188
00:07:32,960 --> 00:07:34,400
write the shefford document and eddie

189
00:07:34,400 --> 00:07:35,840
reviews and everything

190
00:07:35,840 --> 00:07:38,240
done separately and then go for ige

191
00:07:38,240 --> 00:07:40,720
evolution together is there any point of

192
00:07:40,720 --> 00:07:42,240
doing that

193
00:07:42,240 --> 00:07:45,240
just

194
00:07:48,560 --> 00:07:51,440
the reason that we elected uh to hold

195
00:07:51,440 --> 00:07:55,039
the first document was that um um we

196
00:07:55,039 --> 00:07:56,800
were on there's a

197
00:07:56,800 --> 00:07:58,400
this these documents have a lot of

198
00:07:58,400 --> 00:08:01,440
abstraction in them and um and we wanted

199
00:08:01,440 --> 00:08:03,360
to get the wording consistent between

200
00:08:03,360 --> 00:08:05,520
them and in fact we've made a bunch of

201
00:08:05,520 --> 00:08:07,440
sort of you know search and replace

202
00:08:07,440 --> 00:08:09,919
changes to get the wording uh you know

203
00:08:09,919 --> 00:08:11,840
some of the term terminology to be

204
00:08:11,840 --> 00:08:13,520
consistent uh

205
00:08:13,520 --> 00:08:15,360
so uh

206
00:08:15,360 --> 00:08:17,680
i would uh

207
00:08:17,680 --> 00:08:19,759
um

208
00:08:19,759 --> 00:08:22,800
i would i guess uh uh once we get it

209
00:08:22,800 --> 00:08:23,759
through

210
00:08:23,759 --> 00:08:27,840
um a last uh uh maybe working group last

211
00:08:27,840 --> 00:08:29,599
call i guess we could probably release

212
00:08:29,599 --> 00:08:32,080
the first two to ietf

213
00:08:32,080 --> 00:08:33,200
i can't remember the ordering whether

214
00:08:33,200 --> 00:08:37,039
it's isg or itf so but um yes

215
00:08:37,039 --> 00:08:39,120
you know uh it takes you as long to

216
00:08:39,120 --> 00:08:41,279
review them as as it takes reviewing i

217
00:08:41,279 --> 00:08:42,080
mean we've been working on these

218
00:08:42,080 --> 00:08:44,399
documents for like seven years so um if

219
00:08:44,399 --> 00:08:45,680
you know

220
00:08:45,680 --> 00:08:47,040
uh

221
00:08:47,040 --> 00:08:48,480
you can spread out the workload in

222
00:08:48,480 --> 00:08:50,800
whatever way makes sense to you

223
00:08:50,800 --> 00:08:53,680
that's the burden of being an agent

224
00:08:53,680 --> 00:08:56,480
so it it makes sense to me just to if we

225
00:08:56,480 --> 00:08:58,000
are completing the working last call for

226
00:08:58,000 --> 00:08:59,920
taps arc and interface then let's put

227
00:08:59,920 --> 00:09:01,120
them forward

228
00:09:01,120 --> 00:09:03,519
and then we can also have another part

229
00:09:03,519 --> 00:09:05,279
of these issues when in the idea of law

230
00:09:05,279 --> 00:09:06,640
school we don't don't know what we're

231
00:09:06,640 --> 00:09:08,399
getting there so

232
00:09:08,399 --> 00:09:10,000
that might actually help implementation

233
00:09:10,000 --> 00:09:11,920
document actually to align with the

234
00:09:11,920 --> 00:09:13,279
terminologies and everything that

235
00:09:13,279 --> 00:09:15,680
anything we need to change so just just

236
00:09:15,680 --> 00:09:18,160
a thought i mean i'm not suggesting i

237
00:09:18,160 --> 00:09:19,600
don't have any extra opinion on that one

238
00:09:19,600 --> 00:09:21,279
but think about it

239
00:09:21,279 --> 00:09:23,040
yeah okay

240
00:09:23,040 --> 00:09:26,480
okay yep thank you

241
00:09:26,480 --> 00:09:28,480
all right so i'm actually curious who

242
00:09:28,480 --> 00:09:30,959
has read the implementation draft so i'm

243
00:09:30,959 --> 00:09:34,000
gonna see what a show of hands tool

244
00:09:34,000 --> 00:09:34,880
uh

245
00:09:34,880 --> 00:09:37,120
gives us in a

246
00:09:37,120 --> 00:09:39,680
hybrid setting

247
00:09:39,680 --> 00:09:41,440
so i guess people can also raise their

248
00:09:41,440 --> 00:09:44,080
hands physically but it's kind of

249
00:09:44,080 --> 00:09:45,680
interesting i think the presenter laptop

250
00:09:45,680 --> 00:09:47,880
can also raise its

251
00:09:47,880 --> 00:09:50,480
hand um

252
00:09:50,480 --> 00:09:53,040
say let's say within the past

253
00:09:53,040 --> 00:09:55,760
three versions

254
00:09:58,640 --> 00:10:00,399
so we have seven

255
00:10:00,399 --> 00:10:02,320
raised hands and nobody is raising their

256
00:10:02,320 --> 00:10:04,480
hand in the room physically

257
00:10:04,480 --> 00:10:06,399
okay eight

258
00:10:06,399 --> 00:10:07,920
okay that's um

259
00:10:07,920 --> 00:10:11,120
that's good um

260
00:10:11,120 --> 00:10:12,640
all right

261
00:10:12,640 --> 00:10:14,240
let's end that

262
00:10:14,240 --> 00:10:17,279
so do we have anybody

263
00:10:17,279 --> 00:10:18,959
who can

264
00:10:18,959 --> 00:10:20,720
do a sort of

265
00:10:20,720 --> 00:10:21,760
more

266
00:10:21,760 --> 00:10:24,880
extensive review of this document

267
00:10:24,880 --> 00:10:27,600
in working group last call who is not an

268
00:10:27,600 --> 00:10:30,000
author

269
00:10:31,200 --> 00:10:33,680
i just uh i think that the

270
00:10:33,680 --> 00:10:35,360
just the level said here that the

271
00:10:35,360 --> 00:10:36,640
criteria for this reviewer you don't

272
00:10:36,640 --> 00:10:38,399
need to be an expert right we're asking

273
00:10:38,399 --> 00:10:39,760
for people who are non-authors we're

274
00:10:39,760 --> 00:10:42,320
looking for readability consistency you

275
00:10:42,320 --> 00:10:43,920
know comprehension

276
00:10:43,920 --> 00:10:46,240
um stuff that people who are really

277
00:10:46,240 --> 00:10:48,079
familiar with the content are probably

278
00:10:48,079 --> 00:10:49,519
going to miss

279
00:10:49,519 --> 00:10:50,959
so um

280
00:10:50,959 --> 00:10:52,959
if you have not been deeply involved in

281
00:10:52,959 --> 00:10:55,120
the past don't that does not disqualify

282
00:10:55,120 --> 00:10:56,720
in fact that probably makes you a better

283
00:10:56,720 --> 00:11:00,360
candidate for a reviewer

284
00:11:07,920 --> 00:11:09,760
all right seeing no volunteers i will

285
00:11:09,760 --> 00:11:11,279
take this to the mailing list to see if

286
00:11:11,279 --> 00:11:12,880
we can uh

287
00:11:12,880 --> 00:11:15,839
beat up some

288
00:11:15,839 --> 00:11:18,000
uh volunteer cycles

289
00:11:18,000 --> 00:11:21,040
so there is one hi brian dremel uh there

290
00:11:21,040 --> 00:11:23,920
is a question from thorben kruger in the

291
00:11:23,920 --> 00:11:25,600
chat about when we need this review

292
00:11:25,600 --> 00:11:27,839
completed

293
00:11:27,839 --> 00:11:29,440
which i'm bringing to the mic because

294
00:11:29,440 --> 00:11:32,320
that might be input to whether or not

295
00:11:32,320 --> 00:11:35,040
yeah thank you um

296
00:11:35,040 --> 00:11:35,839
i

297
00:11:35,839 --> 00:11:37,120
would say

298
00:11:37,120 --> 00:11:39,600
um

299
00:11:41,120 --> 00:11:43,200
ideally uh

300
00:11:43,200 --> 00:11:44,399
four weeks

301
00:11:44,399 --> 00:11:47,839
after itf um probably roughly the time

302
00:11:47,839 --> 00:11:50,800
for our next interim but i think if it

303
00:11:50,800 --> 00:11:52,000
um

304
00:11:52,000 --> 00:11:55,200
it's uh if we have somebody who

305
00:11:55,200 --> 00:11:56,160
would be willing if they had a little

306
00:11:56,160 --> 00:11:58,719
more time

307
00:11:59,200 --> 00:12:00,880
i'd rather have a volunteer who needed

308
00:12:00,880 --> 00:12:02,880
more time than have to

309
00:12:02,880 --> 00:12:05,600
waste that potential review time

310
00:12:05,600 --> 00:12:09,880
finding another volunteer so

311
00:12:20,480 --> 00:12:23,120
okay well let's move on uh

312
00:12:23,120 --> 00:12:25,440
you don't need to uh if you think about

313
00:12:25,440 --> 00:12:26,399
it

314
00:12:26,399 --> 00:12:29,279
uh you can contact uh

315
00:12:29,279 --> 00:12:31,279
reese or myself

316
00:12:31,279 --> 00:12:32,079
okay

317
00:12:32,079 --> 00:12:34,160
dorban is thinking about it thank you

318
00:12:34,160 --> 00:12:35,279
norman

319
00:12:35,279 --> 00:12:36,320
um

320
00:12:36,320 --> 00:12:38,320
moving right along

321
00:12:38,320 --> 00:12:41,839
uh okay so a slightly revised schedule

322
00:12:41,839 --> 00:12:42,959
um

323
00:12:42,959 --> 00:12:45,680
you can see we are here on the left

324
00:12:45,680 --> 00:12:48,800
um the general plan uh

325
00:12:48,800 --> 00:12:50,399
for the working group our cadence has

326
00:12:50,399 --> 00:12:52,480
been to try to have an interim every

327
00:12:52,480 --> 00:12:53,680
month

328
00:12:53,680 --> 00:12:55,279
we usually meet for two hours and go

329
00:12:55,279 --> 00:12:56,160
over

330
00:12:56,160 --> 00:12:57,440
get

331
00:12:57,440 --> 00:13:00,399
issues and pull requests

332
00:13:00,399 --> 00:13:03,200
if we can get the review done

333
00:13:03,200 --> 00:13:04,880
by april

334
00:13:04,880 --> 00:13:06,880
uh we'll have a working group last call

335
00:13:06,880 --> 00:13:08,160
open then

336
00:13:08,160 --> 00:13:11,760
and then really the uh

337
00:13:11,760 --> 00:13:13,920
interims will continue until we resolve

338
00:13:13,920 --> 00:13:16,240
the working group last call comments

339
00:13:16,240 --> 00:13:17,440
our general

340
00:13:17,440 --> 00:13:20,160
cadence uh we actually i think uh got a

341
00:13:20,160 --> 00:13:21,680
consensus maybe it wasn't one of our

342
00:13:21,680 --> 00:13:23,040
interims

343
00:13:23,040 --> 00:13:25,200
that meeting every itf

344
00:13:25,200 --> 00:13:26,240
um

345
00:13:26,240 --> 00:13:29,200
uh didn't seem like it was going to be a

346
00:13:29,200 --> 00:13:30,560
great use of our time most of our

347
00:13:30,560 --> 00:13:32,880
working the interim meetings are quite

348
00:13:32,880 --> 00:13:34,560
detailed

349
00:13:34,560 --> 00:13:36,000
and um

350
00:13:36,000 --> 00:13:38,000
don't necessarily lend themselves to

351
00:13:38,000 --> 00:13:39,040
sort of the

352
00:13:39,040 --> 00:13:40,639
uh

353
00:13:40,639 --> 00:13:43,519
cross-participation uh and so

354
00:13:43,519 --> 00:13:44,560
we

355
00:13:44,560 --> 00:13:47,680
uh we are just meaning because we uh

356
00:13:47,680 --> 00:13:49,839
agreed to meet every other itf

357
00:13:49,839 --> 00:13:51,839
so if we continue on that then we would

358
00:13:51,839 --> 00:13:54,399
not meet at itf 114

359
00:13:54,399 --> 00:13:57,839
um continue on with our interims and

360
00:13:57,839 --> 00:14:02,000
and then meet at itf 115 um

361
00:14:02,000 --> 00:14:04,720
uh let me just pause here i people have

362
00:14:04,720 --> 00:14:06,959
not seen this before um so if anybody

363
00:14:06,959 --> 00:14:10,639
has any comments on it or questions

364
00:14:10,639 --> 00:14:14,600
we can talk about that now

365
00:14:16,959 --> 00:14:19,199
okay

366
00:14:20,079 --> 00:14:24,240
uh and then uh the final uh slide here

367
00:14:24,240 --> 00:14:25,120
is

368
00:14:25,120 --> 00:14:26,240
um

369
00:14:26,240 --> 00:14:28,240
you know we

370
00:14:28,240 --> 00:14:31,199
have talked about uh mappings which uh

371
00:14:31,199 --> 00:14:34,079
for those of you who uh who aren't

372
00:14:34,079 --> 00:14:35,920
closely involved in taps

373
00:14:35,920 --> 00:14:40,160
uh you know taps uh is a generic api for

374
00:14:40,160 --> 00:14:41,839
accessing uh

375
00:14:41,839 --> 00:14:44,240
services provided by transport protocols

376
00:14:44,240 --> 00:14:46,399
and we thought that it might be useful

377
00:14:46,399 --> 00:14:47,839
to

378
00:14:47,839 --> 00:14:51,519
produce some um documents that showed

379
00:14:51,519 --> 00:14:53,120
how a

380
00:14:53,120 --> 00:14:55,360
a protocol that's sat on top of taps

381
00:14:55,360 --> 00:14:57,600
whether it's a transport protocol or any

382
00:14:57,600 --> 00:14:58,720
other

383
00:14:58,720 --> 00:15:02,639
would make use of uh the api

384
00:15:02,639 --> 00:15:05,680
uh and um uh tommy's gonna talk in a few

385
00:15:05,680 --> 00:15:08,480
minutes about uh about quick for that

386
00:15:08,480 --> 00:15:09,600
uh

387
00:15:09,600 --> 00:15:13,040
the general feeling has been you know

388
00:15:13,040 --> 00:15:14,800
you shouldn't have to have a published

389
00:15:14,800 --> 00:15:17,360
mapping document uh to use taps but this

390
00:15:17,360 --> 00:15:18,880
is more of a matter to make it easier

391
00:15:18,880 --> 00:15:22,639
for folks to us understand how

392
00:15:22,639 --> 00:15:24,560
they would make use of taps if it was

393
00:15:24,560 --> 00:15:26,800
available for them

394
00:15:26,800 --> 00:15:31,199
and uh so the proposal here is to

395
00:15:31,199 --> 00:15:32,560
add a milestone

396
00:15:32,560 --> 00:15:36,240
for producing a protocol

397
00:15:36,240 --> 00:15:37,839
or one or more protocol mapping

398
00:15:37,839 --> 00:15:39,440
documents

399
00:15:39,440 --> 00:15:42,079
to our charter

400
00:15:42,079 --> 00:15:43,920
we need our area director's approval for

401
00:15:43,920 --> 00:15:45,680
this i'm raising it here in case anybody

402
00:15:45,680 --> 00:15:47,040
has any comments on it we're going to

403
00:15:47,040 --> 00:15:50,880
chat with zayed after the its on it

404
00:15:50,880 --> 00:15:52,480
certainly

405
00:15:52,480 --> 00:15:55,759
any comments on the value of

406
00:15:55,759 --> 00:15:57,680
the um

407
00:15:57,680 --> 00:15:59,279
the quick mapping that tommy's going to

408
00:15:59,279 --> 00:16:00,480
be talking about

409
00:16:00,480 --> 00:16:03,839
uh will inform that discussion um and

410
00:16:03,839 --> 00:16:05,680
also whether there are other

411
00:16:05,680 --> 00:16:06,800
um

412
00:16:06,800 --> 00:16:08,480
candidates and i think that you know a

413
00:16:08,480 --> 00:16:11,279
candidate in my mind would be a protocol

414
00:16:11,279 --> 00:16:14,399
where it's not obvious

415
00:16:14,560 --> 00:16:16,959
how you would use taps to get what you

416
00:16:16,959 --> 00:16:19,839
want or maybe there are

417
00:16:19,839 --> 00:16:21,600
benefits from using taps that would not

418
00:16:21,600 --> 00:16:23,360
be obvious to the

419
00:16:23,360 --> 00:16:25,519
you know the upper layer protocol

420
00:16:25,519 --> 00:16:28,720
um and um and so it would be sort of a

421
00:16:28,720 --> 00:16:30,720
collaborative activity between somebody

422
00:16:30,720 --> 00:16:32,639
who has some expertise in the upper

423
00:16:32,639 --> 00:16:34,639
layer protocol and folks in the taps

424
00:16:34,639 --> 00:16:36,000
working group otherwise why do it in the

425
00:16:36,000 --> 00:16:39,199
working group so um

426
00:16:39,199 --> 00:16:40,639
let me just

427
00:16:40,639 --> 00:16:42,240
pause here see if there's any questions

428
00:16:42,240 --> 00:16:45,680
or comments on this or any objections to

429
00:16:45,680 --> 00:16:49,079
to doing this

430
00:16:50,000 --> 00:16:51,279
there's a comment from martin on the

431
00:16:51,279 --> 00:16:53,680
chat that http

432
00:16:53,680 --> 00:16:56,240
uh is one where the mapping is pretty

433
00:16:56,240 --> 00:16:58,399
unclear

434
00:16:58,399 --> 00:17:00,079
and i saw a thumbs up

435
00:17:00,079 --> 00:17:02,639
to this slide which

436
00:17:02,639 --> 00:17:05,839
excellent thank you

437
00:17:07,439 --> 00:17:09,119
i think we can probably find some hp

438
00:17:09,119 --> 00:17:11,679
http expertise within the itf

439
00:17:11,679 --> 00:17:13,919
um

440
00:17:15,760 --> 00:17:18,000
okay so uh that's it for me uh thanks

441
00:17:18,000 --> 00:17:20,400
everybody sorry i can't be with you uh

442
00:17:20,400 --> 00:17:22,480
and uh let me um

443
00:17:22,480 --> 00:17:25,520
hand the baton back to reese

444
00:17:25,520 --> 00:17:29,360
if i can figure out how thanks aaron

445
00:17:29,360 --> 00:17:31,280
all right uh

446
00:17:31,280 --> 00:17:33,039
so i think next up we have our

447
00:17:33,039 --> 00:17:34,720
presentation on the

448
00:17:34,720 --> 00:17:37,360
quick mapping

449
00:17:37,360 --> 00:17:39,760
so if tommy could

450
00:17:39,760 --> 00:17:41,280
join

451
00:17:41,280 --> 00:17:46,678
and share the preloaded slides please

452
00:17:47,520 --> 00:17:49,280
i told me

453
00:17:49,280 --> 00:17:51,600
hello

454
00:17:51,600 --> 00:17:53,760
hey everyone so you

455
00:17:53,760 --> 00:17:56,640
plant the slides

456
00:17:57,120 --> 00:17:58,160
okay

457
00:17:58,160 --> 00:18:00,400
everyone can see this

458
00:18:00,400 --> 00:18:03,360
yes all right

459
00:18:04,320 --> 00:18:06,799
um so i'll be sharing

460
00:18:06,799 --> 00:18:10,320
a document which i only put out uh at

461
00:18:10,320 --> 00:18:12,320
the beginning of this week so after the

462
00:18:12,320 --> 00:18:13,760
deadline

463
00:18:13,760 --> 00:18:15,679
there was a previous document from a

464
00:18:15,679 --> 00:18:17,120
couple years ago

465
00:18:17,120 --> 00:18:19,520
where we talked about how you could

466
00:18:19,520 --> 00:18:20,640
use

467
00:18:20,640 --> 00:18:22,640
taps as an api for quick and it gave a

468
00:18:22,640 --> 00:18:24,400
couple different options

469
00:18:24,400 --> 00:18:26,400
that was before we had a lot of the

470
00:18:26,400 --> 00:18:27,520
formal

471
00:18:27,520 --> 00:18:28,799
mapping

472
00:18:28,799 --> 00:18:31,120
concepts within tabs implementation and

473
00:18:31,120 --> 00:18:32,880
it was also when quick was very much in

474
00:18:32,880 --> 00:18:34,160
flux

475
00:18:34,160 --> 00:18:36,559
so this is a

476
00:18:36,559 --> 00:18:39,440
simpler more direct

477
00:18:39,440 --> 00:18:40,640
document

478
00:18:40,640 --> 00:18:43,520
that hopefully will be useful as

479
00:18:43,520 --> 00:18:45,840
uh both an example of how we can do a

480
00:18:45,840 --> 00:18:47,520
mapping

481
00:18:47,520 --> 00:18:49,520
um as as well as just showing how we can

482
00:18:49,520 --> 00:18:52,400
use taps with quick

483
00:18:54,559 --> 00:18:56,799
all right so what

484
00:18:56,799 --> 00:18:58,799
is a taps mapping so if you if you have

485
00:18:58,799 --> 00:19:00,880
read the implementation document you

486
00:19:00,880 --> 00:19:03,039
should be familiar with this but as we

487
00:19:03,039 --> 00:19:04,480
see you know most people have not read

488
00:19:04,480 --> 00:19:05,919
that in detail

489
00:19:05,919 --> 00:19:07,039
there's a section at the end of the

490
00:19:07,039 --> 00:19:10,480
document with a bunch of mappings for

491
00:19:10,480 --> 00:19:12,160
the transport protocols that were

492
00:19:12,160 --> 00:19:14,880
originally analyzed within taps

493
00:19:14,880 --> 00:19:18,799
for tcp and udp and sctp

494
00:19:18,799 --> 00:19:21,039
but essentially what these are are just

495
00:19:21,039 --> 00:19:23,840
definitions of what happens when you use

496
00:19:23,840 --> 00:19:24,960
each

497
00:19:24,960 --> 00:19:28,400
one of the transport services api calls

498
00:19:28,400 --> 00:19:29,919
and a different transfer protocol is

499
00:19:29,919 --> 00:19:31,760
loaded underneath

500
00:19:31,760 --> 00:19:34,480
so it's very

501
00:19:34,480 --> 00:19:36,400
implementation focused

502
00:19:36,400 --> 00:19:38,160
as far as you know if you're building

503
00:19:38,160 --> 00:19:41,280
this api how do you actually wire it up

504
00:19:41,280 --> 00:19:42,240
into

505
00:19:42,240 --> 00:19:44,960
the individual protocol calls and it

506
00:19:44,960 --> 00:19:48,160
also tells you as an api adopter

507
00:19:48,160 --> 00:19:50,480
what the contract and guarantees are

508
00:19:50,480 --> 00:19:54,400
when you are using the tabs interface

509
00:19:54,400 --> 00:19:56,640
and this is really focused on

510
00:19:56,640 --> 00:19:58,799
kind of the establishment

511
00:19:58,799 --> 00:20:01,520
tear down and data transfer properties

512
00:20:01,520 --> 00:20:04,240
there are a lot of other

513
00:20:04,240 --> 00:20:07,120
knobs within the taps api that aren't

514
00:20:07,120 --> 00:20:08,000
really

515
00:20:08,000 --> 00:20:10,799
transport specific they may just be

516
00:20:10,799 --> 00:20:13,039
about path selection or something else

517
00:20:13,039 --> 00:20:13,760
so

518
00:20:13,760 --> 00:20:17,280
not every api surface

519
00:20:17,280 --> 00:20:21,000
shows up in the mapping

520
00:20:22,880 --> 00:20:25,520
and from the implementation document

521
00:20:25,520 --> 00:20:28,080
we have an appendix in there which says

522
00:20:28,080 --> 00:20:31,200
here are the things you need to add

523
00:20:31,200 --> 00:20:33,120
or need to define in

524
00:20:33,120 --> 00:20:35,360
a mapping document

525
00:20:35,360 --> 00:20:37,440
like this one and so it has a template

526
00:20:37,440 --> 00:20:40,320
and so this is essentially the first

527
00:20:40,320 --> 00:20:41,760
document that's trying to follow this

528
00:20:41,760 --> 00:20:43,200
template

529
00:20:43,200 --> 00:20:45,600
and show how we can extend it

530
00:20:45,600 --> 00:20:47,520
and as part of the exercise of doing

531
00:20:47,520 --> 00:20:49,840
this

532
00:20:49,919 --> 00:20:52,240
i realized that we needed to update the

533
00:20:52,240 --> 00:20:53,840
template a bit

534
00:20:53,840 --> 00:20:56,880
we have relatively recently added

535
00:20:56,880 --> 00:21:00,000
uh some close group and abort group

536
00:21:00,000 --> 00:21:01,520
functions

537
00:21:01,520 --> 00:21:04,480
to the overall api to handle

538
00:21:04,480 --> 00:21:08,720
tearing down multiplex connections or

539
00:21:08,720 --> 00:21:11,120
groups of connections in general

540
00:21:11,120 --> 00:21:12,720
and when we added that to the api it

541
00:21:12,720 --> 00:21:14,400
didn't make it into the implementation

542
00:21:14,400 --> 00:21:17,039
document and so um we actually already

543
00:21:17,039 --> 00:21:20,720
have uh merged in a pr to

544
00:21:20,720 --> 00:21:22,080
update that

545
00:21:22,080 --> 00:21:23,520
and so that was one thing you know

546
00:21:23,520 --> 00:21:25,760
that's good about actually using

547
00:21:25,760 --> 00:21:28,480
this template and exercising the mapping

548
00:21:28,480 --> 00:21:30,480
is that we learn

549
00:21:30,480 --> 00:21:32,080
any things we're missing so it's a good

550
00:21:32,080 --> 00:21:35,678
part of the review of the implementation

551
00:21:36,720 --> 00:21:38,960
all right

552
00:21:38,960 --> 00:21:43,600
so going into this particular document

553
00:21:43,600 --> 00:21:46,720
it's very short you could read it in

554
00:21:46,720 --> 00:21:48,559
you know a couple minutes

555
00:21:48,559 --> 00:21:50,480
um it's mainly trying to copy the style

556
00:21:50,480 --> 00:21:51,840
that we have in the implementation

557
00:21:51,840 --> 00:21:55,200
document for tcp udp and sctp

558
00:21:55,200 --> 00:21:57,360
the particular approach

559
00:21:57,360 --> 00:21:59,600
for what the mapping is is based on our

560
00:21:59,600 --> 00:22:00,799
experience

561
00:22:00,799 --> 00:22:03,120
within the network framework

562
00:22:03,120 --> 00:22:06,000
at apple since that is a taps like

563
00:22:06,000 --> 00:22:09,280
api and it supports quick

564
00:22:09,280 --> 00:22:10,320
and

565
00:22:10,320 --> 00:22:13,600
you know originally we had had

566
00:22:13,600 --> 00:22:15,679
uh various different approaches we were

567
00:22:15,679 --> 00:22:16,880
trying

568
00:22:16,880 --> 00:22:19,200
this reflects this this mapping reflects

569
00:22:19,200 --> 00:22:20,480
what we ended up

570
00:22:20,480 --> 00:22:22,559
uh shipping as our quick

571
00:22:22,559 --> 00:22:25,360
api and because it ended up being the

572
00:22:25,360 --> 00:22:26,400
most

573
00:22:26,400 --> 00:22:28,159
friendly for use

574
00:22:28,159 --> 00:22:30,159
on top of a taps type extract

575
00:22:30,159 --> 00:22:32,480
abstraction

576
00:22:32,480 --> 00:22:36,080
one thing i would point out is that

577
00:22:37,440 --> 00:22:39,919
there doesn't have to be just one

578
00:22:39,919 --> 00:22:40,880
mapping

579
00:22:40,880 --> 00:22:43,360
for a given transport protocol

580
00:22:43,360 --> 00:22:44,799
the one here

581
00:22:44,799 --> 00:22:46,080
that is defined in this document

582
00:22:46,080 --> 00:22:48,159
currently is just about

583
00:22:48,159 --> 00:22:51,120
quick streams and how to use

584
00:22:51,120 --> 00:22:53,440
unidirectional bi-directional streams

585
00:22:53,440 --> 00:22:55,440
within quick it doesn't currently

586
00:22:55,440 --> 00:22:58,080
address how you use datagrams

587
00:22:58,080 --> 00:22:59,280
and it's possible that you would

588
00:22:59,280 --> 00:23:01,440
essentially have a different

589
00:23:01,440 --> 00:23:03,039
mapping

590
00:23:03,039 --> 00:23:05,840
for accessing unreliable data

591
00:23:05,840 --> 00:23:07,679
on quick than you would

592
00:23:07,679 --> 00:23:10,480
for the reliable streams

593
00:23:10,480 --> 00:23:13,039
or you could have it as one so

594
00:23:13,039 --> 00:23:14,960
uh

595
00:23:14,960 --> 00:23:17,600
there could be you know a broader zoo of

596
00:23:17,600 --> 00:23:20,000
mappings that gets defined for different

597
00:23:20,000 --> 00:23:21,600
use cases

598
00:23:21,600 --> 00:23:23,760
and i think that is

599
00:23:23,760 --> 00:23:26,158
okay

600
00:23:26,240 --> 00:23:28,320
and as i mentioned before this is

601
00:23:28,320 --> 00:23:30,000
doing these building these mappings is a

602
00:23:30,000 --> 00:23:31,520
good way to

603
00:23:31,520 --> 00:23:33,679
exercise the api functions

604
00:23:33,679 --> 00:23:35,039
and make sure that we handle

605
00:23:35,039 --> 00:23:38,480
multiplexing protocols well

606
00:23:39,039 --> 00:23:41,360
all right

607
00:23:43,679 --> 00:23:45,919
so the first part of a mapping is just

608
00:23:45,919 --> 00:23:48,000
to define

609
00:23:48,000 --> 00:23:50,640
what kind of what are the objects at the

610
00:23:50,640 --> 00:23:53,360
high level what are they mapped to

611
00:23:53,360 --> 00:23:55,919
what is the overall contract

612
00:23:55,919 --> 00:23:57,440
of this and there are a couple different

613
00:23:57,440 --> 00:23:59,760
options so

614
00:23:59,760 --> 00:24:01,120
first we have to define what is your

615
00:24:01,120 --> 00:24:02,799
connectedness

616
00:24:02,799 --> 00:24:05,200
of like is this an unconnected

617
00:24:05,200 --> 00:24:07,760
like udp is it connected like

618
00:24:07,760 --> 00:24:09,840
tcp or is it an inherently multiplexing

619
00:24:09,840 --> 00:24:11,840
protocol so quick is inherently a

620
00:24:11,840 --> 00:24:13,919
multiplexing protocol so it gets that

621
00:24:13,919 --> 00:24:15,679
connectedness

622
00:24:15,679 --> 00:24:17,600
the mapping also wants you to find kind

623
00:24:17,600 --> 00:24:20,480
of what's your basic data unit offered

624
00:24:20,480 --> 00:24:22,960
by this transport and so in this case it

625
00:24:22,960 --> 00:24:24,559
is a byte stream

626
00:24:24,559 --> 00:24:26,320
and that's why this mapping is

627
00:24:26,320 --> 00:24:28,080
specifically applying to

628
00:24:28,080 --> 00:24:30,799
using quick streams and not

629
00:24:30,799 --> 00:24:32,480
quick datagrams that would need a

630
00:24:32,480 --> 00:24:35,200
different mapping

631
00:24:35,200 --> 00:24:37,200
and then the

632
00:24:37,200 --> 00:24:38,640
last thing here is what is the

633
00:24:38,640 --> 00:24:40,159
connection object

634
00:24:40,159 --> 00:24:43,120
and this is

635
00:24:43,120 --> 00:24:45,039
probably the most

636
00:24:45,039 --> 00:24:47,600
uh interesting confusing

637
00:24:47,600 --> 00:24:49,440
controversial choice here this is like

638
00:24:49,440 --> 00:24:51,200
the main thing to choose

639
00:24:51,200 --> 00:24:52,159
um

640
00:24:52,159 --> 00:24:52,960
and

641
00:24:52,960 --> 00:24:55,440
this mapping defines that a taps

642
00:24:55,440 --> 00:24:57,039
connection which is you know the thing

643
00:24:57,039 --> 00:25:00,960
that you're used to using as a um

644
00:25:00,960 --> 00:25:03,840
a tcp stream like the equivalent of that

645
00:25:03,840 --> 00:25:05,360
is a quick stream

646
00:25:05,360 --> 00:25:07,200
um which

647
00:25:07,200 --> 00:25:08,159
makes sense like when you're just

648
00:25:08,159 --> 00:25:09,760
calling like i need an object in which i

649
00:25:09,760 --> 00:25:10,640
can

650
00:25:10,640 --> 00:25:13,120
create one and send and receive

651
00:25:13,120 --> 00:25:15,520
a stream and get to the end of stream

652
00:25:15,520 --> 00:25:17,039
that's the semantics of a quick stream

653
00:25:17,039 --> 00:25:18,240
not a whole quick connection because a

654
00:25:18,240 --> 00:25:19,440
quick connection

655
00:25:19,440 --> 00:25:21,360
really maps to

656
00:25:21,360 --> 00:25:24,080
what in taps is a connection group it's

657
00:25:24,080 --> 00:25:26,000
a bundle of streams

658
00:25:26,000 --> 00:25:29,640
that all work together

659
00:25:32,480 --> 00:25:34,159
and then the rest of the mapping this is

660
00:25:34,159 --> 00:25:36,080
not literally what's in the text the

661
00:25:36,080 --> 00:25:38,720
text goes into more detail but just at a

662
00:25:38,720 --> 00:25:41,200
high level to summarize what you see

663
00:25:41,200 --> 00:25:44,400
these are some of the interesting bits

664
00:25:44,400 --> 00:25:48,960
so a um calling initiate on a connection

665
00:25:48,960 --> 00:25:49,760
will

666
00:25:49,760 --> 00:25:51,919
because this is a quick stream

667
00:25:51,919 --> 00:25:53,120
if there's not already a quick

668
00:25:53,120 --> 00:25:54,559
connection to the pier it will have to

669
00:25:54,559 --> 00:25:57,200
bring that up but if there already is

670
00:25:57,200 --> 00:25:59,440
initiate really just is allocating a new

671
00:25:59,440 --> 00:26:02,159
stream id on which to send

672
00:26:02,159 --> 00:26:03,360
um

673
00:26:03,360 --> 00:26:05,120
so it's either bring up quick connection

674
00:26:05,120 --> 00:26:07,600
and allocate stream id or just allocate

675
00:26:07,600 --> 00:26:11,360
a stream id on an existing connection

676
00:26:11,360 --> 00:26:14,240
cloning means you already had

677
00:26:14,240 --> 00:26:16,559
one existing stream so you by definition

678
00:26:16,559 --> 00:26:18,080
had a quick connection established to

679
00:26:18,080 --> 00:26:19,039
the peer

680
00:26:19,039 --> 00:26:21,279
so it is always by definition just

681
00:26:21,279 --> 00:26:24,720
allocating a new stream id

682
00:26:24,720 --> 00:26:27,039
an interesting thing here is that

683
00:26:27,039 --> 00:26:28,880
the connection becoming ready

684
00:26:28,880 --> 00:26:30,000
which means that you're able to actually

685
00:26:30,000 --> 00:26:33,039
send and receive on it

686
00:26:33,440 --> 00:26:35,360
is a function of both

687
00:26:35,360 --> 00:26:37,440
the actual underlying quick connections

688
00:26:37,440 --> 00:26:39,600
handshake completing

689
00:26:39,600 --> 00:26:42,799
as well as having enough

690
00:26:42,799 --> 00:26:44,640
stream ids available that you can

691
00:26:44,640 --> 00:26:46,640
allocate this new stream id

692
00:26:46,640 --> 00:26:48,640
so that could be delayed by streams

693
00:26:48,640 --> 00:26:52,240
being blocked due to stream flow control

694
00:26:52,240 --> 00:26:54,720
uh so ready tells you

695
00:26:54,720 --> 00:26:55,679
you know

696
00:26:55,679 --> 00:26:58,000
yes you you've if this is the 100th

697
00:26:58,000 --> 00:27:00,159
stream you've opened you are allowed to

698
00:27:00,159 --> 00:27:01,360
you're allowed to now open that

699
00:27:01,360 --> 00:27:04,158
hundredth stream

700
00:27:04,400 --> 00:27:05,200
um

701
00:27:05,200 --> 00:27:07,760
the listen and connection received

702
00:27:07,760 --> 00:27:09,520
calls mean that you have a new stream

703
00:27:09,520 --> 00:27:12,080
from the pier

704
00:27:12,559 --> 00:27:15,120
uh for sending receiving it's quite

705
00:27:15,120 --> 00:27:17,279
straightforward and simple the ascending

706
00:27:17,279 --> 00:27:19,919
just generates stream frames on the

707
00:27:19,919 --> 00:27:22,480
quick connection for that stream id

708
00:27:22,480 --> 00:27:24,960
receiving is handling the inbound stream

709
00:27:24,960 --> 00:27:28,159
frames that you get for your stream id

710
00:27:28,159 --> 00:27:29,840
closing the connection is equivalent to

711
00:27:29,840 --> 00:27:31,200
sending a fin

712
00:27:31,200 --> 00:27:34,640
on that stream just as it is with tcp

713
00:27:34,640 --> 00:27:38,320
aborting is sending a reset stream

714
00:27:38,320 --> 00:27:40,320
closing the group

715
00:27:40,320 --> 00:27:42,880
means that you close that stream and

716
00:27:42,880 --> 00:27:44,480
then you close the connection once all

717
00:27:44,480 --> 00:27:46,320
streams have closed and aborting a group

718
00:27:46,320 --> 00:27:47,600
means that you immediately close the

719
00:27:47,600 --> 00:27:49,039
connection and you just drop all

720
00:27:49,039 --> 00:27:51,520
outstanding streams

721
00:27:51,520 --> 00:27:53,840
so that's

722
00:27:53,840 --> 00:27:56,480
what is written in the document i think

723
00:27:56,480 --> 00:27:57,440
it's

724
00:27:57,440 --> 00:27:59,440
the most straightforward

725
00:27:59,440 --> 00:28:01,360
mapping too quick from what we have in

726
00:28:01,360 --> 00:28:03,120
the taps concepts

727
00:28:03,120 --> 00:28:04,880
but i'd love to hear your thoughts or

728
00:28:04,880 --> 00:28:07,120
reviews on that

729
00:28:07,120 --> 00:28:10,880
yeah so we have aaron in the queue

730
00:28:10,880 --> 00:28:14,000
oh sorry stay watching thecube

731
00:28:14,000 --> 00:28:18,320
uh tommy um uh your audio is uh gating a

732
00:28:18,320 --> 00:28:21,120
lot i don't know if there's uh

733
00:28:21,120 --> 00:28:23,039
me want to turn off your video or

734
00:28:23,039 --> 00:28:25,360
something because it was distorting uh a

735
00:28:25,360 --> 00:28:27,679
bit might be sorry i can drop the video

736
00:28:27,679 --> 00:28:29,840
yeah

737
00:28:29,840 --> 00:28:32,559
we'll see if that helps um so i

738
00:28:32,559 --> 00:28:34,720
was uh

739
00:28:34,720 --> 00:28:35,520
uh

740
00:28:35,520 --> 00:28:37,600
i was looking for i just scanned the

741
00:28:37,600 --> 00:28:39,520
document for the comments that you

742
00:28:39,520 --> 00:28:43,200
opened with about sort of the uh

743
00:28:43,200 --> 00:28:44,399
the

744
00:28:44,399 --> 00:28:47,440
sort of the use cases uh for quick

745
00:28:47,440 --> 00:28:50,320
that uh that this mapping addressed uh

746
00:28:50,320 --> 00:28:52,000
that might help distinguish it from

747
00:28:52,000 --> 00:28:53,840
other use cases that might go to another

748
00:28:53,840 --> 00:28:54,880
mapping

749
00:28:54,880 --> 00:28:56,799
and i didn't see that and i thought that

750
00:28:56,799 --> 00:28:58,799
maybe uh that would be a good addition

751
00:28:58,799 --> 00:29:00,159
to the document

752
00:29:00,159 --> 00:29:02,399
the um you know

753
00:29:02,399 --> 00:29:03,600
what

754
00:29:03,600 --> 00:29:05,200
just even maybe sort of a high level

755
00:29:05,200 --> 00:29:07,360
summary of what is this good for uh and

756
00:29:07,360 --> 00:29:09,039
what is it not good for

757
00:29:09,039 --> 00:29:10,840
um to

758
00:29:10,840 --> 00:29:12,720
uh

759
00:29:12,720 --> 00:29:15,120
help people sort of understand

760
00:29:15,120 --> 00:29:18,559
um you know where they are in the zoo

761
00:29:19,279 --> 00:29:21,679
yeah that's a good point and hopefully

762
00:29:21,679 --> 00:29:24,559
my audio is a little better now um

763
00:29:24,559 --> 00:29:27,600
yes it is thank you good what one of the

764
00:29:27,600 --> 00:29:29,360
things

765
00:29:29,360 --> 00:29:30,559
so

766
00:29:30,559 --> 00:29:32,799
yes it doesn't have a lot of descriptive

767
00:29:32,799 --> 00:29:33,760
text

768
00:29:33,760 --> 00:29:37,440
but an option is that we could also add

769
00:29:37,440 --> 00:29:39,679
the quick datagram mapping

770
00:29:39,679 --> 00:29:43,200
into this same document as well and then

771
00:29:43,200 --> 00:29:44,559
you know essentially say here here are

772
00:29:44,559 --> 00:29:45,679
two different mappings real quick and

773
00:29:45,679 --> 00:29:47,279
then have some text to couch them and

774
00:29:47,279 --> 00:29:48,640
like this is when you use one this is

775
00:29:48,640 --> 00:29:50,240
when you use the other

776
00:29:50,240 --> 00:29:51,679
so that's if people think that makes

777
00:29:51,679 --> 00:29:52,960
sense that's the direction this could

778
00:29:52,960 --> 00:29:55,840
take

779
00:29:56,559 --> 00:30:00,320
thanks uh next we have brian

780
00:30:02,399 --> 00:30:05,120
hi tommy thanks for being up so early

781
00:30:05,120 --> 00:30:06,559
to do this

782
00:30:06,559 --> 00:30:07,679
um

783
00:30:07,679 --> 00:30:10,640
so uh can we go back actually to the

784
00:30:10,640 --> 00:30:12,720
sort of the mapping bit

785
00:30:12,720 --> 00:30:13,760
um

786
00:30:13,760 --> 00:30:14,880
yes

787
00:30:14,880 --> 00:30:15,679
so

788
00:30:15,679 --> 00:30:16,640
i

789
00:30:16,640 --> 00:30:18,159
see sort of what happens if there's like

790
00:30:18,159 --> 00:30:20,480
create a new connection if needed so

791
00:30:20,480 --> 00:30:22,720
there's a quick connection right so i i

792
00:30:22,720 --> 00:30:24,080
get the mapping between connections and

793
00:30:24,080 --> 00:30:25,679
streams but there's one thing here that

794
00:30:25,679 --> 00:30:27,120
seems

795
00:30:27,120 --> 00:30:28,880
to be missing and i'm wondering if

796
00:30:28,880 --> 00:30:30,640
that's

797
00:30:30,640 --> 00:30:32,880
like at the at a lower level of

798
00:30:32,880 --> 00:30:34,320
abstraction that we want to expose

799
00:30:34,320 --> 00:30:36,159
through quick uh how does this interact

800
00:30:36,159 --> 00:30:39,679
with um zero rtt

801
00:30:40,640 --> 00:30:41,440
um

802
00:30:41,440 --> 00:30:42,640
is there anything that we need to say in

803
00:30:42,640 --> 00:30:44,799
the map

804
00:30:44,960 --> 00:30:47,360
yes it is mentioned so this is not

805
00:30:47,360 --> 00:30:49,919
exhaustive this is what fit on the slide

806
00:30:49,919 --> 00:30:51,600
and was interesting

807
00:30:51,600 --> 00:30:53,760
um there is an initiate with send that

808
00:30:53,760 --> 00:30:55,120
essentially says this is the same as

809
00:30:55,120 --> 00:30:56,799
initiate except

810
00:30:56,799 --> 00:30:58,240
right if you're bringing up a new

811
00:30:58,240 --> 00:31:00,640
connection and you have zero rtp keys

812
00:31:00,640 --> 00:31:02,799
use it

813
00:31:02,799 --> 00:31:05,039
okay good thanks

814
00:31:05,039 --> 00:31:08,640
thank you next lucas

815
00:31:10,159 --> 00:31:11,200
hello

816
00:31:11,200 --> 00:31:14,960
sorry hello lucas buddy cloud player um

817
00:31:14,960 --> 00:31:16,880
thanks for the draft tommy i had a quick

818
00:31:16,880 --> 00:31:19,679
read over lunch

819
00:31:19,679 --> 00:31:20,799
good the thing that struck me

820
00:31:20,799 --> 00:31:22,320
immediately was like the lack of

821
00:31:22,320 --> 00:31:24,720
datagram here i think given the progress

822
00:31:24,720 --> 00:31:26,399
that quick working group is making on

823
00:31:26,399 --> 00:31:28,559
datagram if you're going to do a mapping

824
00:31:28,559 --> 00:31:29,600
just

825
00:31:29,600 --> 00:31:31,919
consider datagrams and streams like

826
00:31:31,919 --> 00:31:33,519
those are the things that applications

827
00:31:33,519 --> 00:31:36,000
can use to just do it as well

828
00:31:36,000 --> 00:31:39,679
um contrary to aaron's suggestion i it

829
00:31:39,679 --> 00:31:41,279
doesn't seem like we need to say what

830
00:31:41,279 --> 00:31:43,360
you would use them for quick doesn't it

831
00:31:43,360 --> 00:31:45,679
just says this is what they this is the

832
00:31:45,679 --> 00:31:47,360
service that those

833
00:31:47,360 --> 00:31:50,799
um things provide and lose it up to

834
00:31:50,799 --> 00:31:53,120
other people that decide how to use them

835
00:31:53,120 --> 00:31:54,559
um we might be documenting that

836
00:31:54,559 --> 00:31:56,799
elsewhere and we could just point at

837
00:31:56,799 --> 00:31:59,279
that but i don't feel like taps needs to

838
00:31:59,279 --> 00:32:00,799
say anything

839
00:32:00,799 --> 00:32:03,440
in particular um and then one specific

840
00:32:03,440 --> 00:32:05,519
point on the draft i didn't see anything

841
00:32:05,519 --> 00:32:06,559
about

842
00:32:06,559 --> 00:32:09,360
stop sending frames before like how to

843
00:32:09,360 --> 00:32:11,039
cancel

844
00:32:11,039 --> 00:32:11,760
the

845
00:32:11,760 --> 00:32:14,159
one one end of a stream i don't know if

846
00:32:14,159 --> 00:32:16,080
that was in consideration

847
00:32:16,080 --> 00:32:18,960
um at all or just didn't make it into

848
00:32:18,960 --> 00:32:21,440
this cut

849
00:32:21,440 --> 00:32:24,399
yep um yeah thank you so

850
00:32:24,399 --> 00:32:27,679
yeah on the point of including datagram

851
00:32:27,679 --> 00:32:29,200
and the reasons

852
00:32:29,200 --> 00:32:31,679
so yes i think

853
00:32:31,679 --> 00:32:33,039
to be complete this needs to include

854
00:32:33,039 --> 00:32:34,559
datagram

855
00:32:34,559 --> 00:32:35,679
and

856
00:32:35,679 --> 00:32:37,519
i agree with you that we shouldn't go

857
00:32:37,519 --> 00:32:38,960
into

858
00:32:38,960 --> 00:32:40,559
too much detail about the applications

859
00:32:40,559 --> 00:32:43,120
but having a bit of text of

860
00:32:43,120 --> 00:32:44,640
you know hey if you're using taps to get

861
00:32:44,640 --> 00:32:46,000
a byte stream

862
00:32:46,000 --> 00:32:47,519
then you should use the stream mapping

863
00:32:47,519 --> 00:32:48,960
if you're doing it to kind of replace

864
00:32:48,960 --> 00:32:51,440
your udp usage use datagram we could

865
00:32:51,440 --> 00:32:55,120
have some high level bits like that

866
00:32:55,279 --> 00:32:58,159
as far as stop sending this is something

867
00:32:58,159 --> 00:32:59,840
we have

868
00:32:59,840 --> 00:33:01,279
talked about

869
00:33:01,279 --> 00:33:02,080
um

870
00:33:02,080 --> 00:33:04,000
previously in the group and i

871
00:33:04,000 --> 00:33:05,840
don't quite remember but i believe the

872
00:33:05,840 --> 00:33:08,080
consensus was

873
00:33:08,080 --> 00:33:10,640
it's not something that

874
00:33:10,640 --> 00:33:12,960
is included in the base

875
00:33:12,960 --> 00:33:16,799
api for taps because it is a feature

876
00:33:16,799 --> 00:33:18,480
that

877
00:33:18,480 --> 00:33:20,480
pretty much no other

878
00:33:20,480 --> 00:33:23,279
transport protocol offers

879
00:33:23,279 --> 00:33:25,919
on its stream um

880
00:33:25,919 --> 00:33:28,000
you know within network framework itself

881
00:33:28,000 --> 00:33:30,399
we don't have an api to do it

882
00:33:30,399 --> 00:33:31,760
um

883
00:33:31,760 --> 00:33:32,799
it's

884
00:33:32,799 --> 00:33:35,360
not something

885
00:33:35,360 --> 00:33:37,679
i i guess it'd be good to understand

886
00:33:37,679 --> 00:33:41,039
kind of at an application level

887
00:33:41,200 --> 00:33:42,880
when is it needed if we believe it's

888
00:33:42,880 --> 00:33:45,440
generic because the other option is that

889
00:33:45,440 --> 00:33:47,679
you know taps apis certainly do allow

890
00:33:47,679 --> 00:33:49,600
you to add

891
00:33:49,600 --> 00:33:52,399
protocol specific

892
00:33:52,399 --> 00:33:54,080
extra functions if you want to support

893
00:33:54,080 --> 00:33:55,760
that in in your implementation but it's

894
00:33:55,760 --> 00:33:57,200
not something that you can

895
00:33:57,200 --> 00:33:59,200
expect that every

896
00:33:59,200 --> 00:34:00,799
uh byte stream protocol would be able to

897
00:34:00,799 --> 00:34:02,640
support

898
00:34:02,640 --> 00:34:04,960
okay um i don't know enough about taps

899
00:34:04,960 --> 00:34:07,279
it just seems like a pretty critical

900
00:34:07,279 --> 00:34:09,599
thing for quick to be able to do that

901
00:34:09,599 --> 00:34:10,719
because

902
00:34:10,719 --> 00:34:13,280
you can't stop things otherwise um you

903
00:34:13,280 --> 00:34:16,239
can only close your side uh it's about

904
00:34:16,239 --> 00:34:17,839
we can you can always you can always

905
00:34:17,839 --> 00:34:19,199
reset the stream right like i mean

906
00:34:19,199 --> 00:34:21,918
resetting the stream will

907
00:34:21,918 --> 00:34:24,159
can be interpreted as well it can also

908
00:34:24,159 --> 00:34:26,000
like the underlying level can do a stop

909
00:34:26,000 --> 00:34:28,000
sending as part of that

910
00:34:28,000 --> 00:34:29,599
if it needs to

911
00:34:29,599 --> 00:34:32,239
okay um let's take it offline um but uh

912
00:34:32,239 --> 00:34:34,719
thanks for this work cheers

913
00:34:34,719 --> 00:34:36,320
thank you thanks lucas next we have

914
00:34:36,320 --> 00:34:38,800
jonathan

915
00:34:39,679 --> 00:34:42,079
hello jonathan lennox i guess my

916
00:34:42,079 --> 00:34:43,599
question having

917
00:34:43,599 --> 00:34:45,599
only briefly read this document and not

918
00:34:45,599 --> 00:34:48,879
thought about terribly hard is is this

919
00:34:48,879 --> 00:34:51,119
api sufficient to

920
00:34:51,119 --> 00:34:52,320
implement

921
00:34:52,320 --> 00:34:55,040
a fully fledged h3 client an h3 server

922
00:34:55,040 --> 00:34:56,320
or are there things that if you were

923
00:34:56,320 --> 00:34:58,720
actually doing that you would need to

924
00:34:58,720 --> 00:35:00,240
you know do something magic and maybe a

925
00:35:00,240 --> 00:35:01,200
network framework you've actually done

926
00:35:01,200 --> 00:35:03,839
this you know concretely or maybe

927
00:35:03,839 --> 00:35:05,040
you can just think about it but i guess

928
00:35:05,040 --> 00:35:06,560
my question is is this

929
00:35:06,560 --> 00:35:08,560
because i think that's the

930
00:35:08,560 --> 00:35:09,839
where the rubber meets the road for is

931
00:35:09,839 --> 00:35:11,440
this a complete

932
00:35:11,440 --> 00:35:13,119
api for quick or are there things that

933
00:35:13,119 --> 00:35:16,079
this doesn't cover

934
00:35:16,079 --> 00:35:18,880
uh yeah so we we definitely have

935
00:35:18,880 --> 00:35:23,520
built h3 on top of this there are

936
00:35:23,520 --> 00:35:25,520
i think the one thing that is

937
00:35:25,520 --> 00:35:27,440
used there that's not explicitly part of

938
00:35:27,440 --> 00:35:28,839
this mapping

939
00:35:28,839 --> 00:35:31,839
is what perhaps would consider like a

940
00:35:31,839 --> 00:35:34,400
protocol specific metadata to access the

941
00:35:34,400 --> 00:35:35,680
stream id

942
00:35:35,680 --> 00:35:38,320
numbers etc from within

943
00:35:38,320 --> 00:35:40,880
the transport um

944
00:35:40,880 --> 00:35:43,040
but

945
00:35:43,119 --> 00:35:44,400
so maybe that is something that would be

946
00:35:44,400 --> 00:35:45,520
good to

947
00:35:45,520 --> 00:35:47,440
add to the document of saying hey and

948
00:35:47,440 --> 00:35:50,240
you also probably want to expose

949
00:35:50,240 --> 00:35:53,440
a quick specific getter for your stream

950
00:35:53,440 --> 00:35:54,640
id

951
00:35:54,640 --> 00:35:56,880
but beyond that um this mapping for

952
00:35:56,880 --> 00:35:58,880
actually just using

953
00:35:58,880 --> 00:36:01,680
center receive create and close all work

954
00:36:01,680 --> 00:36:04,879
fine for h3

955
00:36:06,960 --> 00:36:11,320
thanks next we have martin

956
00:36:12,800 --> 00:36:15,520
uh martin duke google uh thanks for this

957
00:36:15,520 --> 00:36:16,400
um

958
00:36:16,400 --> 00:36:18,640
i've been waiting for it and i support

959
00:36:18,640 --> 00:36:20,480
adoption uh not that we're asking for

960
00:36:20,480 --> 00:36:22,000
adoption yet

961
00:36:22,000 --> 00:36:24,079
um but let me preemptively do that uh

962
00:36:24,079 --> 00:36:26,640
just a couple of nits like i mean on on

963
00:36:26,640 --> 00:36:28,480
the abort call

964
00:36:28,480 --> 00:36:30,880
uh it should be like reset stream and or

965
00:36:30,880 --> 00:36:33,119
stop sending depending on

966
00:36:33,119 --> 00:36:34,800
the direction directionality of the

967
00:36:34,800 --> 00:36:35,920
stream

968
00:36:35,920 --> 00:36:38,560
and like on the listen thing it seems to

969
00:36:38,560 --> 00:36:41,520
like say well open a socket but in fact

970
00:36:41,520 --> 00:36:43,680
listen is being used for

971
00:36:43,680 --> 00:36:45,599
receptiveness to new streams as well

972
00:36:45,599 --> 00:36:47,280
correct

973
00:36:47,280 --> 00:36:50,960
but conceptually is that accurate or

974
00:36:51,839 --> 00:36:53,440
um

975
00:36:53,440 --> 00:36:56,079
yes it is it is yeah so we can clarify

976
00:36:56,079 --> 00:36:57,200
that

977
00:36:57,200 --> 00:36:59,919
okay thanks

978
00:37:01,680 --> 00:37:03,200
thanks brian

979
00:37:03,200 --> 00:37:06,839
uh hi uh brian trammell google

980
00:37:06,839 --> 00:37:09,599
um i'll be brief because uh i think

981
00:37:09,599 --> 00:37:10,960
we're getting ready to go down a rabbit

982
00:37:10,960 --> 00:37:13,200
hole here uh i would point out on the

983
00:37:13,200 --> 00:37:15,520
quick datagram thing

984
00:37:15,520 --> 00:37:18,400
datagram looks kind of like sockseek

985
00:37:18,400 --> 00:37:19,920
packet which does exist in another

986
00:37:19,920 --> 00:37:21,599
protocol so i think that we can sort of

987
00:37:21,599 --> 00:37:23,200
like you know take some of how we've

988
00:37:23,200 --> 00:37:25,520
thought about sctp into that and i think

989
00:37:25,520 --> 00:37:26,880
it is probably important to do right

990
00:37:26,880 --> 00:37:28,240
like so we said we're going to do the

991
00:37:28,240 --> 00:37:30,079
quick base protocol but datagram is

992
00:37:30,079 --> 00:37:31,760
rapidly

993
00:37:31,760 --> 00:37:33,119
progressing through quick but i think

994
00:37:33,119 --> 00:37:34,560
these are things that we can do once it

995
00:37:34,560 --> 00:37:36,400
is you know

996
00:37:36,400 --> 00:37:38,320
a working group item uh look forward to

997
00:37:38,320 --> 00:37:39,839
working on it uh

998
00:37:39,839 --> 00:37:41,040
since we're not talking about supporting

999
00:37:41,040 --> 00:37:43,680
adoption yet i support adoption

1000
00:37:43,680 --> 00:37:45,920
cool i mean the last slide does say

1001
00:37:45,920 --> 00:37:48,720
should we adopt this so that is a useful

1002
00:37:48,720 --> 00:37:51,440
question to answer

1003
00:37:51,440 --> 00:37:54,720
okay next colin

1004
00:37:56,320 --> 00:37:59,119
hi uh can you hear me

1005
00:37:59,119 --> 00:37:59,839
yes

1006
00:37:59,839 --> 00:38:00,800
yes

1007
00:38:00,800 --> 00:38:03,599
okay good uh so i i guess i'm gonna take

1008
00:38:03,599 --> 00:38:05,440
something similar to what brian started

1009
00:38:05,440 --> 00:38:06,800
out with um

1010
00:38:06,800 --> 00:38:09,040
i can see how this can be a replacement

1011
00:38:09,040 --> 00:38:11,119
for a bunch of tcp connections very

1012
00:38:11,119 --> 00:38:12,480
easily

1013
00:38:12,480 --> 00:38:15,040
i can also see how

1014
00:38:15,040 --> 00:38:17,280
we can define this in a way that acts as

1015
00:38:17,280 --> 00:38:19,760
a replacement for udp and provides

1016
00:38:19,760 --> 00:38:21,839
security and all that on top of it

1017
00:38:21,839 --> 00:38:23,839
um

1018
00:38:23,839 --> 00:38:26,400
are we flexible enough in the way we've

1019
00:38:26,400 --> 00:38:28,720
defined taps that we can

1020
00:38:28,720 --> 00:38:30,480
ask for a connection which allows you to

1021
00:38:30,480 --> 00:38:32,880
do both reliable and unreliable data on

1022
00:38:32,880 --> 00:38:33,839
the same

1023
00:38:33,839 --> 00:38:36,079
connection

1024
00:38:36,079 --> 00:38:37,760
so you can have basic

1025
00:38:37,760 --> 00:38:39,280
streams

1026
00:38:39,280 --> 00:38:42,160
right i think that's

1027
00:38:42,160 --> 00:38:44,720
where kind of what the mapping

1028
00:38:44,720 --> 00:38:46,640
of connection objects

1029
00:38:46,640 --> 00:38:49,440
uh turns into under in quick is very

1030
00:38:49,440 --> 00:38:51,440
important

1031
00:38:51,440 --> 00:38:53,599
so

1032
00:38:53,839 --> 00:38:56,160
i think the answer to your question is

1033
00:38:56,160 --> 00:38:57,119
yes

1034
00:38:57,119 --> 00:39:00,960
a taps connection group which maps to a

1035
00:39:00,960 --> 00:39:02,880
actual quick connection association

1036
00:39:02,880 --> 00:39:05,760
between these two endpoints can include

1037
00:39:05,760 --> 00:39:06,800
both

1038
00:39:06,800 --> 00:39:08,400
bidirectional streams unidirectional

1039
00:39:08,400 --> 00:39:09,680
streams

1040
00:39:09,680 --> 00:39:10,480
and

1041
00:39:10,480 --> 00:39:11,920
datagrams

1042
00:39:11,920 --> 00:39:14,720
each of which would be a different

1043
00:39:14,720 --> 00:39:16,240
taps connection

1044
00:39:16,240 --> 00:39:18,400
object to represent that particular flow

1045
00:39:18,400 --> 00:39:20,000
in that particular

1046
00:39:20,000 --> 00:39:21,040
um

1047
00:39:21,040 --> 00:39:23,040
contract right so

1048
00:39:23,040 --> 00:39:25,680
it's a little unreliable connection to

1049
00:39:25,680 --> 00:39:29,119
this point yeah exactly

1050
00:39:29,119 --> 00:39:31,760
yeah okay

1051
00:39:31,920 --> 00:39:34,880
thanks uh and we have michael

1052
00:39:34,880 --> 00:39:38,640
and after that uh he was closed

1053
00:39:38,640 --> 00:39:40,480
michael herzl um

1054
00:39:40,480 --> 00:39:43,280
i wonder if these two things that were

1055
00:39:43,280 --> 00:39:45,680
brought up regarding the interface and

1056
00:39:45,680 --> 00:39:47,280
quick

1057
00:39:47,280 --> 00:39:49,040
if they i mean i don't want to make

1058
00:39:49,040 --> 00:39:50,640
things harder for the interface document

1059
00:39:50,640 --> 00:39:52,320
now for sure but if they maybe should

1060
00:39:52,320 --> 00:39:54,000
should be included there because i think

1061
00:39:54,000 --> 00:39:54,880
the

1062
00:39:54,880 --> 00:39:57,599
stop sending frame is probably

1063
00:39:57,599 --> 00:39:59,520
safe enough to ignore for transports

1064
00:39:59,520 --> 00:40:02,320
that that don't support that

1065
00:40:02,320 --> 00:40:04,640
and the stream id i remember we had a

1066
00:40:04,640 --> 00:40:06,319
conversation about that in the context

1067
00:40:06,319 --> 00:40:08,480
of sctp because that also offers it but

1068
00:40:08,480 --> 00:40:10,319
we didn't see that there's a need to

1069
00:40:10,319 --> 00:40:12,720
expose that if people are associating

1070
00:40:12,720 --> 00:40:15,040
semantics with the number of the stream

1071
00:40:15,040 --> 00:40:17,200
but i think that's also pretty easy to

1072
00:40:17,200 --> 00:40:19,119
include as saying you know it could be

1073
00:40:19,119 --> 00:40:21,040
metadata going on the connection if it's

1074
00:40:21,040 --> 00:40:23,520
a stream multiplexing transport

1075
00:40:23,520 --> 00:40:25,520
so i i think we should probably include

1076
00:40:25,520 --> 00:40:27,520
that in the interface draft but i'll i'm

1077
00:40:27,520 --> 00:40:30,400
asking that question

1078
00:40:30,640 --> 00:40:33,119
i i would lean towards saying that

1079
00:40:33,119 --> 00:40:34,640
you know for sure in the mapping

1080
00:40:34,640 --> 00:40:37,119
document we should call out

1081
00:40:37,119 --> 00:40:38,800
you should have a way

1082
00:40:38,800 --> 00:40:41,119
to access the stream id

1083
00:40:41,119 --> 00:40:42,640
and we should review

1084
00:40:42,640 --> 00:40:44,880
the interface document to make sure

1085
00:40:44,880 --> 00:40:47,119
that it's clear it sounds like you know

1086
00:40:47,119 --> 00:40:49,599
what function you use to say

1087
00:40:49,599 --> 00:40:51,520
you know get me the protocol specific

1088
00:40:51,520 --> 00:40:53,040
information for this

1089
00:40:53,040 --> 00:40:55,119
because you know the specific type of a

1090
00:40:55,119 --> 00:40:57,040
stream id or one of these things could

1091
00:40:57,040 --> 00:40:59,040
vary between different protocols so

1092
00:40:59,040 --> 00:41:00,560
there should just be a way to say like

1093
00:41:00,560 --> 00:41:04,400
for quick get me this property

1094
00:41:04,400 --> 00:41:06,480
and then you say oh the i want you know

1095
00:41:06,480 --> 00:41:08,319
quick property stream id and then it

1096
00:41:08,319 --> 00:41:10,960
returns me an object which happens to be

1097
00:41:10,960 --> 00:41:12,960
uh variant in this case

1098
00:41:12,960 --> 00:41:15,200
yeah

1099
00:41:15,680 --> 00:41:18,240
okay yes

1100
00:41:18,240 --> 00:41:21,839
okay and we have the head

1101
00:41:24,400 --> 00:41:26,720
uh

1102
00:41:26,800 --> 00:41:28,640
transport eddie hat off i have one

1103
00:41:28,640 --> 00:41:31,920
comment so we we used to have like those

1104
00:41:31,920 --> 00:41:33,839
are ourses now we have to survey

1105
00:41:33,839 --> 00:41:36,240
document and the feature document right

1106
00:41:36,240 --> 00:41:39,040
the documentary service couple of

1107
00:41:39,040 --> 00:41:40,960
transport protocols and also the

1108
00:41:40,960 --> 00:41:43,520
transport features and recorded them so

1109
00:41:43,520 --> 00:41:45,280
i think it would be good to have this

1110
00:41:45,280 --> 00:41:47,119
this kind of mapping document also to

1111
00:41:47,119 --> 00:41:49,440
actually have some sort of like

1112
00:41:49,440 --> 00:41:51,760
background information and a surveys

1113
00:41:51,760 --> 00:41:53,440
around it not just like

1114
00:41:53,440 --> 00:41:55,839
direct mapping uh i didn't find it this

1115
00:41:55,839 --> 00:41:58,400
time it would be good because

1116
00:41:58,400 --> 00:42:00,839
uh some of the topics that i

1117
00:42:00,839 --> 00:42:03,359
think lucas was mentioning would could

1118
00:42:03,359 --> 00:42:05,599
come up here and we could have a

1119
00:42:05,599 --> 00:42:07,200
resolution in this kind of mapping

1120
00:42:07,200 --> 00:42:09,200
document how to deal with those instead

1121
00:42:09,200 --> 00:42:13,440
of like uh filling around already like

1122
00:42:13,440 --> 00:42:16,480
long big documents so that's one comment

1123
00:42:16,480 --> 00:42:17,440
i have

1124
00:42:17,440 --> 00:42:21,280
think about it and that's the solution

1125
00:42:21,920 --> 00:42:24,800
with my eddie hat on i don't find this

1126
00:42:24,800 --> 00:42:27,760
uh as a related document in the data

1127
00:42:27,760 --> 00:42:30,720
tracker so something went wrong so maybe

1128
00:42:30,720 --> 00:42:34,560
uh we should we need to fix that

1129
00:42:34,720 --> 00:42:36,400
yeah you i think

1130
00:42:36,400 --> 00:42:38,240
i think the naming of the draft didn't

1131
00:42:38,240 --> 00:42:40,400
allow it to

1132
00:42:40,400 --> 00:42:42,560
record as a related document in the data

1133
00:42:42,560 --> 00:42:45,839
tracker so maybe resubmit it with drafts

1134
00:42:45,839 --> 00:42:48,560
tommy probably taps

1135
00:42:48,560 --> 00:42:50,480
something well

1136
00:42:50,480 --> 00:42:52,160
you should be able to the chair should

1137
00:42:52,160 --> 00:42:54,560
be able to relate it directly as well

1138
00:42:54,560 --> 00:42:56,400
yeah that's the truth okay i'll look

1139
00:42:56,400 --> 00:42:59,680
into that uh thank you zahid uh and at

1140
00:42:59,680 --> 00:43:02,640
this point i'm curious to just get a

1141
00:43:02,640 --> 00:43:06,400
sense of the room for uh

1142
00:43:06,400 --> 00:43:08,000
the first question on tommy's slide

1143
00:43:08,000 --> 00:43:10,720
which is support for adopting this

1144
00:43:10,720 --> 00:43:13,839
mapping document

1145
00:43:25,200 --> 00:43:28,960
okay we have 21 raised hands in medical

1146
00:43:28,960 --> 00:43:31,680
25 oh wow

1147
00:43:31,680 --> 00:43:33,920
and no physical raised hands i guess

1148
00:43:33,920 --> 00:43:36,720
midair coins uh

1149
00:43:36,720 --> 00:43:38,560
okay that's not bad

1150
00:43:38,560 --> 00:43:41,920
thank you um

1151
00:43:41,920 --> 00:43:43,920
so

1152
00:43:43,920 --> 00:43:46,400
tommy is there oh yeah should we start

1153
00:43:46,400 --> 00:43:48,319
others is actually the

1154
00:43:48,319 --> 00:43:51,040
second question on this uh slide we we

1155
00:43:51,040 --> 00:43:53,599
kind of have two minutes uh

1156
00:43:53,599 --> 00:43:55,440
and then we have another presentation

1157
00:43:55,440 --> 00:43:58,000
with 15 minutes allocated so maybe we

1158
00:43:58,000 --> 00:44:00,319
can take this offline unless

1159
00:44:00,319 --> 00:44:02,000
brian has something

1160
00:44:02,000 --> 00:44:03,920
urgent because we do have two minutes

1161
00:44:03,920 --> 00:44:06,480
brand travel google no not yet let's do

1162
00:44:06,480 --> 00:44:08,400
this one first

1163
00:44:08,400 --> 00:44:09,680
i agree

1164
00:44:09,680 --> 00:44:11,280
so cheers eddie interruption again i

1165
00:44:11,280 --> 00:44:13,520
mean two things one if if there is

1166
00:44:13,520 --> 00:44:15,280
anybody in this room who has not really

1167
00:44:15,280 --> 00:44:18,000
used this uh online site tool or some

1168
00:44:18,000 --> 00:44:20,079
way to log into this session they will

1169
00:44:20,079 --> 00:44:22,160
be not part of the blue sheet so please

1170
00:44:22,160 --> 00:44:24,400
do that and also like

1171
00:44:24,400 --> 00:44:26,480
i will not pro and use your hand raise

1172
00:44:26,480 --> 00:44:28,720
of hand virtually this time i think

1173
00:44:28,720 --> 00:44:30,880
that's the that's the what we want not

1174
00:44:30,880 --> 00:44:33,040
really raised in hand room so i think if

1175
00:44:33,040 --> 00:44:35,040
you if you log into the system net

1176
00:44:35,040 --> 00:44:37,520
ecosystem you will be able to register

1177
00:44:37,520 --> 00:44:39,119
in a blue sheet and also raise hand

1178
00:44:39,119 --> 00:44:40,640
there thanks

1179
00:44:40,640 --> 00:44:42,800
thank you for the reminder side

1180
00:44:42,800 --> 00:44:46,079
all right so i have associated uh the

1181
00:44:46,079 --> 00:44:48,240
mapping dock on the

1182
00:44:48,240 --> 00:44:50,640
data tracker

1183
00:44:50,640 --> 00:44:52,640
so thanks

1184
00:44:52,640 --> 00:44:55,680
all right and now

1185
00:44:55,680 --> 00:44:57,919
i

1186
00:44:58,079 --> 00:45:01,599
think we have slides up for torben if

1187
00:45:01,599 --> 00:45:04,480
you would like to unmute

1188
00:45:04,480 --> 00:45:06,560
and share audio

1189
00:45:06,560 --> 00:45:07,599
hi

1190
00:45:07,599 --> 00:45:09,280
am i audible

1191
00:45:09,280 --> 00:45:11,599
yes i can hear you

1192
00:45:11,599 --> 00:45:13,440
great

1193
00:45:13,440 --> 00:45:15,119
all right um

1194
00:45:15,119 --> 00:45:16,480
thanks for

1195
00:45:16,480 --> 00:45:19,359
having invited me i guess um

1196
00:45:19,359 --> 00:45:22,319
i'm going to talk about our panapi uh

1197
00:45:22,319 --> 00:45:24,319
system which is a taps like transport

1198
00:45:24,319 --> 00:45:26,560
system that we are developing

1199
00:45:26,560 --> 00:45:28,319
um and there's already been some

1200
00:45:28,319 --> 00:45:31,200
discussion about this on the mailing

1201
00:45:31,200 --> 00:45:32,560
list

1202
00:45:32,560 --> 00:45:33,680
and

1203
00:45:33,680 --> 00:45:35,760
yeah and reece was so kind to invite me

1204
00:45:35,760 --> 00:45:40,400
to give a talk um and here i am

1205
00:45:40,560 --> 00:45:42,000
uh we quick

1206
00:45:42,000 --> 00:45:44,319
although this is not exactly visible

1207
00:45:44,319 --> 00:45:47,200
this talk is split into two parts i'm

1208
00:45:47,200 --> 00:45:48,960
going to talk a bit about

1209
00:45:48,960 --> 00:45:50,880
the system that we are building and then

1210
00:45:50,880 --> 00:45:54,240
um i also have some feedback that might

1211
00:45:54,240 --> 00:45:56,720
be valuable or might not be

1212
00:45:56,720 --> 00:45:59,040
i'm not sure

1213
00:45:59,040 --> 00:46:02,880
so who are we um i'm a phd student um at

1214
00:46:02,880 --> 00:46:05,680
the nexus lab um network and distributed

1215
00:46:05,680 --> 00:46:08,720
resistance lab at the ottawa university

1216
00:46:08,720 --> 00:46:13,280
in magdeburg germany um and our research

1217
00:46:13,280 --> 00:46:16,480
group is mainly focusing on zion

1218
00:46:16,480 --> 00:46:18,880
um as a promising future internet

1219
00:46:18,880 --> 00:46:20,560
architecture um

1220
00:46:20,560 --> 00:46:23,520
i think many if not most people here

1221
00:46:23,520 --> 00:46:25,920
have uh at least heard about this but

1222
00:46:25,920 --> 00:46:27,839
just in case there's here's the really

1223
00:46:27,839 --> 00:46:30,480
quick repack recap

1224
00:46:30,480 --> 00:46:32,560
um simon is a proposed new dead

1225
00:46:32,560 --> 00:46:34,400
architecture designed to eventually

1226
00:46:34,400 --> 00:46:37,680
replace bgp it exposes path awareness

1227
00:46:37,680 --> 00:46:40,560
and multiple features to each end host

1228
00:46:40,560 --> 00:46:44,400
and it has already seen a

1229
00:46:44,400 --> 00:46:45,680
pretty

1230
00:46:45,680 --> 00:46:49,280
wide deployment at least among certain

1231
00:46:49,280 --> 00:46:51,440
industries so the financial industry in

1232
00:46:51,440 --> 00:46:53,440
switzerland seems pretty keen on it but

1233
00:46:53,440 --> 00:46:54,960
they are internationally there are more

1234
00:46:54,960 --> 00:46:56,560
deployments um

1235
00:46:56,560 --> 00:46:59,520
and the project is spearheaded by the

1236
00:46:59,520 --> 00:47:03,440
network security group of etheric

1237
00:47:03,440 --> 00:47:05,280
um

1238
00:47:05,280 --> 00:47:08,240
cyan has some interesting implications

1239
00:47:08,240 --> 00:47:11,280
and so we asked ourselves uh what

1240
00:47:11,280 --> 00:47:13,920
benefit can pathways actually have on

1241
00:47:13,920 --> 00:47:16,400
the end host so the actual user probably

1242
00:47:16,400 --> 00:47:17,839
doesn't really care

1243
00:47:17,839 --> 00:47:19,920
the internet usually works

1244
00:47:19,920 --> 00:47:22,960
just fine most of the time and the

1245
00:47:22,960 --> 00:47:25,040
average application developer

1246
00:47:25,040 --> 00:47:27,040
probably also doesn't

1247
00:47:27,040 --> 00:47:29,200
really care or rather simply wants to

1248
00:47:29,200 --> 00:47:31,040
use a high-level networking lab library

1249
00:47:31,040 --> 00:47:32,810
and not worry about the rest

1250
00:47:32,810 --> 00:47:34,319
[Music]

1251
00:47:34,319 --> 00:47:36,960
as networking nerds we

1252
00:47:36,960 --> 00:47:39,920
most likely are the only ones who care

1253
00:47:39,920 --> 00:47:43,040
uh and we would probably be the first to

1254
00:47:43,040 --> 00:47:45,440
point out that um interesting new

1255
00:47:45,440 --> 00:47:46,960
networking features

1256
00:47:46,960 --> 00:47:48,319
should not complicate the lives for

1257
00:47:48,319 --> 00:47:51,200
users because networking should be

1258
00:47:51,200 --> 00:47:53,520
a commodity like tap water right so it

1259
00:47:53,520 --> 00:47:55,119
should just work

1260
00:47:55,119 --> 00:47:56,079
um

1261
00:47:56,079 --> 00:47:58,559
so if we are interested in rolling out

1262
00:47:58,559 --> 00:48:00,640
any new features this has to happen sort

1263
00:48:00,640 --> 00:48:02,640
of behind the scenes uh and hidden

1264
00:48:02,640 --> 00:48:04,960
behind higher level abstractions

1265
00:48:04,960 --> 00:48:08,400
and we were very gratified to find that

1266
00:48:08,400 --> 00:48:09,200
the

1267
00:48:09,200 --> 00:48:12,000
tabs community at the itf seems to agree

1268
00:48:12,000 --> 00:48:15,119
and hold similar views

1269
00:48:16,559 --> 00:48:18,640
so we decided to

1270
00:48:18,640 --> 00:48:21,680
create a transport services system

1271
00:48:21,680 --> 00:48:24,000
for scion but not only for cyan

1272
00:48:24,000 --> 00:48:25,760
and we chose

1273
00:48:25,760 --> 00:48:27,359
the proposed

1274
00:48:27,359 --> 00:48:30,640
tabs api as our front end

1275
00:48:30,640 --> 00:48:32,400
in the back end we have some highly

1276
00:48:32,400 --> 00:48:34,400
scriptable environment that allows us to

1277
00:48:34,400 --> 00:48:36,240
experiment with

1278
00:48:36,240 --> 00:48:38,880
the interesting networking details

1279
00:48:38,880 --> 00:48:40,079
um

1280
00:48:40,079 --> 00:48:42,640
and to to that allows us to try out

1281
00:48:42,640 --> 00:48:45,280
certain things like different capacity

1282
00:48:45,280 --> 00:48:47,760
profile based path selection behaviors

1283
00:48:47,760 --> 00:48:49,200
and so on

1284
00:48:49,200 --> 00:48:50,079
um

1285
00:48:50,079 --> 00:48:52,240
we managed to get ngi pointer funding

1286
00:48:52,240 --> 00:48:55,359
for our system uh and we decided uh to

1287
00:48:55,359 --> 00:48:59,119
call it panel api or panapi

1288
00:48:59,119 --> 00:49:01,920
for a pathway networking api in case our

1289
00:49:01,920 --> 00:49:03,599
lack of creativity wasn't already

1290
00:49:03,599 --> 00:49:05,839
obvious

1291
00:49:05,839 --> 00:49:06,720
yeah

1292
00:49:06,720 --> 00:49:07,520
the

1293
00:49:07,520 --> 00:49:10,000
system is written in go

1294
00:49:10,000 --> 00:49:13,599
with a web-based scripting

1295
00:49:13,599 --> 00:49:14,720
back a

1296
00:49:14,720 --> 00:49:17,839
backend that supports lower scripts

1297
00:49:17,839 --> 00:49:20,960
it also supports tcp udp and quick as

1298
00:49:20,960 --> 00:49:22,720
well as

1299
00:49:22,720 --> 00:49:25,040
udp and quick over cyan

1300
00:49:25,040 --> 00:49:26,079
and

1301
00:49:26,079 --> 00:49:28,400
we have been trying to follow the tabs

1302
00:49:28,400 --> 00:49:31,839
architecture as much as possible

1303
00:49:32,400 --> 00:49:35,280
but we have made some design decisions

1304
00:49:35,280 --> 00:49:36,400
that are

1305
00:49:36,400 --> 00:49:38,480
somewhat departing from the way that

1306
00:49:38,480 --> 00:49:41,200
things are laid out in the drafts

1307
00:49:41,200 --> 00:49:45,760
first of all we are

1308
00:49:45,760 --> 00:49:47,200
obviously had to

1309
00:49:47,200 --> 00:49:50,079
add science support in a way that

1310
00:49:50,079 --> 00:49:52,079
is sort of in the spirit of the tab spec

1311
00:49:52,079 --> 00:49:53,920
although tabs is

1312
00:49:53,920 --> 00:49:56,839
very internet specific

1313
00:49:56,839 --> 00:50:00,319
um we do not use an event

1314
00:50:00,319 --> 00:50:03,280
system because a goal already comes with

1315
00:50:03,280 --> 00:50:04,319
different

1316
00:50:04,319 --> 00:50:06,480
native ways to do concurrency uh

1317
00:50:06,480 --> 00:50:07,920
properly

1318
00:50:07,920 --> 00:50:10,640
um we try to have an event system but

1319
00:50:10,640 --> 00:50:13,040
this turned out to be highly unintuitive

1320
00:50:13,040 --> 00:50:14,400
and since

1321
00:50:14,400 --> 00:50:17,440
we are in a sense developing an api

1322
00:50:17,440 --> 00:50:19,680
uh that is meant to be used for the

1323
00:50:19,680 --> 00:50:21,599
by the average goal programmer that

1324
00:50:21,599 --> 00:50:23,200
doesn't want to worry too much about

1325
00:50:23,200 --> 00:50:27,119
networking we decided to not uh like

1326
00:50:27,119 --> 00:50:30,000
force an event based system on them and

1327
00:50:30,000 --> 00:50:30,960
simply

1328
00:50:30,960 --> 00:50:32,960
allow them to

1329
00:50:32,960 --> 00:50:36,720
use idiomatic go as it's called um

1330
00:50:36,720 --> 00:50:39,200
so we avoid the

1331
00:50:39,200 --> 00:50:41,760
the old system of trying and failing by

1332
00:50:41,760 --> 00:50:45,359
having all calls uh block

1333
00:50:45,359 --> 00:50:47,598
and

1334
00:50:47,920 --> 00:50:50,000
until they can either return success or

1335
00:50:50,000 --> 00:50:52,160
an error

1336
00:50:52,160 --> 00:50:55,440
if we need asynchronicity uh

1337
00:50:55,440 --> 00:50:58,160
we can simply dispatch these walls in

1338
00:50:58,160 --> 00:50:59,920
the background as required um

1339
00:50:59,920 --> 00:51:01,440
[Music]

1340
00:51:01,440 --> 00:51:03,760
the go primitives are really uh well

1341
00:51:03,760 --> 00:51:06,079
suited for this

1342
00:51:06,079 --> 00:51:08,480
and we have already had some discussions

1343
00:51:08,480 --> 00:51:10,240
about the details of this and whether

1344
00:51:10,240 --> 00:51:12,000
this is in the spirit of taps or not on

1345
00:51:12,000 --> 00:51:13,760
the mailing list um

1346
00:51:13,760 --> 00:51:16,319
i forgot to link this here but um

1347
00:51:16,319 --> 00:51:19,440
yeah the the discussion is on record

1348
00:51:19,440 --> 00:51:22,000
uh the second major design decision

1349
00:51:22,000 --> 00:51:25,200
is that we have chosen to represent the

1350
00:51:25,200 --> 00:51:27,200
different properties

1351
00:51:27,200 --> 00:51:28,640
in form of

1352
00:51:28,640 --> 00:51:30,319
in a strongly typed

1353
00:51:30,319 --> 00:51:32,800
objects and this has turned out to be a

1354
00:51:32,800 --> 00:51:34,240
bit of a nightmare but more on that

1355
00:51:34,240 --> 00:51:35,920
later

1356
00:51:35,920 --> 00:51:38,319
the idea is that

1357
00:51:38,319 --> 00:51:40,720
we want to catch mistakes at compile

1358
00:51:40,720 --> 00:51:42,960
time and avoid errors at run time which

1359
00:51:42,960 --> 00:51:45,359
is in the spirit of the our chosen

1360
00:51:45,359 --> 00:51:48,720
programming environment and language

1361
00:51:48,880 --> 00:51:52,160
and uh yeah this is these are the the

1362
00:51:52,160 --> 00:51:53,920
core um

1363
00:51:53,920 --> 00:51:56,160
tenants of our design

1364
00:51:56,160 --> 00:51:56,460
um

1365
00:51:56,460 --> 00:51:57,920
[Music]

1366
00:51:57,920 --> 00:52:01,520
i'm happy to receive feedback on this

1367
00:52:01,520 --> 00:52:04,079
after this presentation but for now

1368
00:52:04,079 --> 00:52:06,720
maybe let's move on

1369
00:52:06,720 --> 00:52:11,760
this is an example of a code that

1370
00:52:11,760 --> 00:52:14,960
demonstrates how we how we are using

1371
00:52:14,960 --> 00:52:17,040
this or how we have decided to to

1372
00:52:17,040 --> 00:52:19,119
translate tabs concepts to

1373
00:52:19,119 --> 00:52:20,480
our system

1374
00:52:20,480 --> 00:52:24,559
you can see that we have

1375
00:52:24,559 --> 00:52:27,200
mapped some properties to

1376
00:52:27,200 --> 00:52:29,119
static types

1377
00:52:29,119 --> 00:52:32,880
we do ubiquitous error checking

1378
00:52:32,880 --> 00:52:34,000
and

1379
00:52:34,000 --> 00:52:35,280
we don't have

1380
00:52:35,280 --> 00:52:38,880
there's no event system in evidence

1381
00:52:39,119 --> 00:52:40,960
then

1382
00:52:40,960 --> 00:52:44,480
briefly we also have

1383
00:52:44,480 --> 00:52:47,680
a back end um that is

1384
00:52:47,680 --> 00:52:50,720
uh right now a science-specific back-end

1385
00:52:50,720 --> 00:52:53,599
daemon um so meaning that for regular

1386
00:52:53,599 --> 00:52:56,000
non-scion communication the ap api works

1387
00:52:56,000 --> 00:52:58,160
just fine as a standalone library and in

1388
00:52:58,160 --> 00:53:00,559
case there is a demon present and

1389
00:53:00,559 --> 00:53:03,280
we are communicating via scion there are

1390
00:53:03,280 --> 00:53:07,599
rpc calls happening between uh the api

1391
00:53:07,599 --> 00:53:10,559
library and the demon

1392
00:53:10,559 --> 00:53:14,319
we have uh

1393
00:53:14,319 --> 00:53:16,480
support for

1394
00:53:16,480 --> 00:53:18,400
path quality estimation and scriptable

1395
00:53:18,400 --> 00:53:20,319
path choice um

1396
00:53:20,319 --> 00:53:21,200
and

1397
00:53:21,200 --> 00:53:24,240
optionally our backend can also

1398
00:53:24,240 --> 00:53:26,720
perform active latency measurements um

1399
00:53:26,720 --> 00:53:29,359
over certain paths

1400
00:53:29,359 --> 00:53:30,880
and we found that

1401
00:53:30,880 --> 00:53:31,839
most

1402
00:53:31,839 --> 00:53:34,319
tabs concepts map map pretty directly to

1403
00:53:34,319 --> 00:53:36,079
scion at least in

1404
00:53:36,079 --> 00:53:38,480
in our opinion so we're quite confident

1405
00:53:38,480 --> 00:53:40,720
that we are not under mining top

1406
00:53:40,720 --> 00:53:42,559
semantics in any way

1407
00:53:42,559 --> 00:53:44,400
so in the in the scion world different

1408
00:53:44,400 --> 00:53:46,480
capacity profiles for instance can be

1409
00:53:46,480 --> 00:53:48,800
satisfied by selecting suitable paths

1410
00:53:48,800 --> 00:53:51,200
after considering cached path

1411
00:53:51,200 --> 00:53:53,920
performance information

1412
00:53:53,920 --> 00:53:55,599
similar to what

1413
00:53:55,599 --> 00:53:57,760
the standard semantics are

1414
00:53:57,760 --> 00:54:00,319
the same is trivially true for different

1415
00:54:00,319 --> 00:54:02,800
multipath policies which simply result

1416
00:54:02,800 --> 00:54:05,200
in message duplication or distribution

1417
00:54:05,200 --> 00:54:07,920
over different paths

1418
00:54:07,920 --> 00:54:10,319
and other properties like session

1419
00:54:10,319 --> 00:54:12,960
isolation are have have corresponding

1420
00:54:12,960 --> 00:54:14,400
semantics

1421
00:54:14,400 --> 00:54:15,760
um

1422
00:54:15,760 --> 00:54:18,079
there is at least one thing that we

1423
00:54:18,079 --> 00:54:19,520
sometimes

1424
00:54:19,520 --> 00:54:21,920
use in the site in scion that does not

1425
00:54:21,920 --> 00:54:24,480
appear to have a taps equivalent which

1426
00:54:24,480 --> 00:54:26,880
is active probing

1427
00:54:26,880 --> 00:54:28,350
namely something

1428
00:54:28,350 --> 00:54:29,599
[Music]

1429
00:54:29,599 --> 00:54:30,960
where

1430
00:54:30,960 --> 00:54:33,520
we perform active pings over alternative

1431
00:54:33,520 --> 00:54:35,839
paths to a destination and to just keep

1432
00:54:35,839 --> 00:54:38,480
track of which which are available or

1433
00:54:38,480 --> 00:54:40,480
promised to offer better latency than

1434
00:54:40,480 --> 00:54:43,520
the currently chosen path

1435
00:54:43,520 --> 00:54:45,920
and i would be interested if

1436
00:54:45,920 --> 00:54:49,359
this is something that could conceivably

1437
00:54:49,359 --> 00:54:51,599
be added or if this is

1438
00:54:51,599 --> 00:54:53,200
something that should stay

1439
00:54:53,200 --> 00:54:55,040
very much sign

1440
00:54:55,040 --> 00:54:56,480
central

1441
00:54:56,480 --> 00:54:58,240
so this continues the first part of my

1442
00:54:58,240 --> 00:55:00,160
talk

1443
00:55:00,160 --> 00:55:01,599
i hope

1444
00:55:01,599 --> 00:55:04,000
everything that i've presented sounded

1445
00:55:04,000 --> 00:55:06,720
reasonable enough to you i'd be happy to

1446
00:55:06,720 --> 00:55:09,040
receive your feedback

1447
00:55:09,040 --> 00:55:11,920
and opinions about pitfalls and both in

1448
00:55:11,920 --> 00:55:14,319
general and specific

1449
00:55:14,319 --> 00:55:16,400
maybe we can also talk about maybe

1450
00:55:16,400 --> 00:55:19,760
having a scion mapping as rn proposed

1451
00:55:19,760 --> 00:55:22,079
but i would propose to shift um the

1452
00:55:22,079 --> 00:55:24,160
actual discussion into this uh to a

1453
00:55:24,160 --> 00:55:25,839
later point since

1454
00:55:25,839 --> 00:55:27,760
um i have some

1455
00:55:27,760 --> 00:55:29,520
feedback of my own

1456
00:55:29,520 --> 00:55:31,760
yeah and you have five minutes until the

1457
00:55:31,760 --> 00:55:33,599
end of the session

1458
00:55:33,599 --> 00:55:34,559
yeah

1459
00:55:34,559 --> 00:55:37,359
so um

1460
00:55:38,640 --> 00:55:42,319
there's uh i i previously mentioned that

1461
00:55:42,319 --> 00:55:44,000
we have

1462
00:55:44,000 --> 00:55:46,720
had some pain with uh with supporting

1463
00:55:46,720 --> 00:55:48,400
the different property types

1464
00:55:48,400 --> 00:55:50,720
in a statically typed way

1465
00:55:50,720 --> 00:55:52,079
um

1466
00:55:52,079 --> 00:55:54,799
and so

1467
00:55:54,799 --> 00:55:56,720
and with their scope and their validity

1468
00:55:56,720 --> 00:55:58,640
so on the left you see a quote from the

1469
00:55:58,640 --> 00:56:00,880
api draft and here the properties are

1470
00:56:00,880 --> 00:56:02,720
meant as configurable parameters for

1471
00:56:02,720 --> 00:56:04,400
protocol selection

1472
00:56:04,400 --> 00:56:06,640
connections and messages and it's all

1473
00:56:06,640 --> 00:56:08,480
sort of semi lumped together but not

1474
00:56:08,480 --> 00:56:09,920
quite and sort of they're they're

1475
00:56:09,920 --> 00:56:11,200
distinguished

1476
00:56:11,200 --> 00:56:12,960
there's there are certain boundaries

1477
00:56:12,960 --> 00:56:14,559
which are

1478
00:56:14,559 --> 00:56:17,040
um

1479
00:56:17,040 --> 00:56:19,200
which could be more explicit let's say

1480
00:56:19,200 --> 00:56:21,359
um and on the other hand on the right

1481
00:56:21,359 --> 00:56:23,440
hand side um

1482
00:56:23,440 --> 00:56:26,319
you there's a quote where it says that

1483
00:56:26,319 --> 00:56:27,359
um

1484
00:56:27,359 --> 00:56:30,000
properties sometimes or at some point

1485
00:56:30,000 --> 00:56:32,400
have sort of converged and can be

1486
00:56:32,400 --> 00:56:34,480
queried so they have converged

1487
00:56:34,480 --> 00:56:35,359
from

1488
00:56:35,359 --> 00:56:37,359
um a preference

1489
00:56:37,359 --> 00:56:38,319
to

1490
00:56:38,319 --> 00:56:40,319
a boolean so from from an enumerated

1491
00:56:40,319 --> 00:56:42,319
preference to a boolean and

1492
00:56:42,319 --> 00:56:44,799
the documents do not disappear to

1493
00:56:44,799 --> 00:56:46,880
distinguish between these two stages

1494
00:56:46,880 --> 00:56:48,720
that the property can be in it can still

1495
00:56:48,720 --> 00:56:49,599
be

1496
00:56:49,599 --> 00:56:52,640
a setting that can be modified and this

1497
00:56:52,640 --> 00:56:55,279
is currently

1498
00:56:55,440 --> 00:56:58,480
still not not has not converged and it

1499
00:56:58,480 --> 00:57:01,040
can be a converged property that that

1500
00:57:01,040 --> 00:57:02,880
actually reflects the result of a

1501
00:57:02,880 --> 00:57:04,559
selection process and we found that this

1502
00:57:04,559 --> 00:57:05,440
is

1503
00:57:05,440 --> 00:57:07,359
um that when when trying to implement

1504
00:57:07,359 --> 00:57:10,319
this properly we sort of need to have

1505
00:57:10,319 --> 00:57:12,400
this clear distinction between the two

1506
00:57:12,400 --> 00:57:13,599
stages

1507
00:57:13,599 --> 00:57:16,079
um i think right now the drafts

1508
00:57:16,079 --> 00:57:20,240
are mentioning that um

1509
00:57:20,240 --> 00:57:21,359
the

1510
00:57:21,359 --> 00:57:23,599
preference can first be in this sort of

1511
00:57:23,599 --> 00:57:25,359
preference state or probably in the

1512
00:57:25,359 --> 00:57:26,799
preference stage

1513
00:57:26,799 --> 00:57:30,240
and then at a later point it congeals

1514
00:57:30,240 --> 00:57:32,240
let's say to a truth value

1515
00:57:32,240 --> 00:57:33,359
and this

1516
00:57:33,359 --> 00:57:36,480
is a very very let's say dynamic

1517
00:57:36,480 --> 00:57:38,799
way of looking at this so in dynamically

1518
00:57:38,799 --> 00:57:40,559
type programming languages this is easy

1519
00:57:40,559 --> 00:57:42,000
but in statically typed programming

1520
00:57:42,000 --> 00:57:44,079
languages this is really hard

1521
00:57:44,079 --> 00:57:45,119
and

1522
00:57:45,119 --> 00:57:48,640
maybe it's worth thinking about how to

1523
00:57:48,640 --> 00:57:50,640
maybe conceptually

1524
00:57:50,640 --> 00:57:53,520
distinguish these

1525
00:57:53,520 --> 00:57:55,760
the second piece of feedback is a small

1526
00:57:55,760 --> 00:57:59,599
nitpick so if you're remembering the

1527
00:57:59,599 --> 00:58:01,680
um

1528
00:58:01,680 --> 00:58:04,640
the discussion from the mating list um

1529
00:58:04,640 --> 00:58:06,079
i try to

1530
00:58:06,079 --> 00:58:07,760
justify why we

1531
00:58:07,760 --> 00:58:09,839
didn't use an event-based system and

1532
00:58:09,839 --> 00:58:11,920
people were quick to point out that it's

1533
00:58:11,920 --> 00:58:15,200
somewhere in an appendix it said that uh

1534
00:58:15,200 --> 00:58:16,960
it's valid to implement this in a

1535
00:58:16,960 --> 00:58:18,240
different way

1536
00:58:18,240 --> 00:58:19,520
uh also

1537
00:58:19,520 --> 00:58:21,440
and it would have been really nice if

1538
00:58:21,440 --> 00:58:23,839
this had been clarified way earlier and

1539
00:58:23,839 --> 00:58:26,400
this went more visibly so

1540
00:58:26,400 --> 00:58:28,160
we actually wasted quite some time

1541
00:58:28,160 --> 00:58:31,520
trying to get a shoehorn an event based

1542
00:58:31,520 --> 00:58:34,319
system into this

1543
00:58:34,319 --> 00:58:35,760
yeah

1544
00:58:35,760 --> 00:58:37,280
into a a

1545
00:58:37,280 --> 00:58:40,880
goal-centric uh way

1546
00:58:40,880 --> 00:58:43,440
um but in conclusion uh it has been a

1547
00:58:43,440 --> 00:58:46,640
pleasure to work with uh um taps and the

1548
00:58:46,640 --> 00:58:48,640
work that you guys have been doing here

1549
00:58:48,640 --> 00:58:50,400
um and

1550
00:58:50,400 --> 00:58:51,599
i hope

1551
00:58:51,599 --> 00:58:52,559
that

1552
00:58:52,559 --> 00:58:54,720
you guys have interesting comments to

1553
00:58:54,720 --> 00:58:56,880
what we have done so far and

1554
00:58:56,880 --> 00:58:58,640
thanks for listening

1555
00:58:58,640 --> 00:59:01,040
thank you jordan we have michael in the

1556
00:59:01,040 --> 00:59:04,040
queue

1557
00:59:05,280 --> 00:59:08,000
hello michael westley again um

1558
00:59:08,000 --> 00:59:09,599
we have been around

1559
00:59:09,599 --> 00:59:11,599
that block of selection properties

1560
00:59:11,599 --> 00:59:14,319
morphing into booleans

1561
00:59:14,319 --> 00:59:17,119
i believe that the reason they were

1562
00:59:17,119 --> 00:59:18,799
unchangeable afterwards is that we

1563
00:59:18,799 --> 00:59:20,720
didn't have a case of a selection

1564
00:59:20,720 --> 00:59:23,119
property that would make sense to change

1565
00:59:23,119 --> 00:59:25,680
afterwards

1566
00:59:25,760 --> 00:59:28,079
like for instance you require a reliable

1567
00:59:28,079 --> 00:59:30,000
transport you don't you

1568
00:59:30,000 --> 00:59:32,720
you can't change that afterwards

1569
00:59:32,720 --> 00:59:35,760
i i don't i i don't disagree uh that

1570
00:59:35,760 --> 00:59:37,440
properties at some point become

1571
00:59:37,440 --> 00:59:39,839
immutable it would just be nice if this

1572
00:59:39,839 --> 00:59:41,920
was actually sort of

1573
00:59:41,920 --> 00:59:43,040
uh

1574
00:59:43,040 --> 00:59:45,440
being if it was a clear distinction

1575
00:59:45,440 --> 00:59:47,040
between properties that are still

1576
00:59:47,040 --> 00:59:50,319
mutable and those that aren't

1577
00:59:50,319 --> 00:59:52,880
yeah but i i believe i believe it didn't

1578
00:59:52,880 --> 00:59:54,160
have any

1579
00:59:54,160 --> 00:59:55,520
i'd like to ask the remaining speakers

1580
00:59:55,520 --> 00:59:57,280
to confine your comments to 15 seconds

1581
00:59:57,280 --> 00:59:58,880
or at the end of our time let's just try

1582
00:59:58,880 --> 01:00:00,799
to go quickly

1583
01:00:00,799 --> 01:00:02,720
take it to the mailing list

1584
01:00:02,720 --> 01:00:04,480
so maybe you know if there's one

1585
01:00:04,480 --> 01:00:06,559
concrete case where you think it would

1586
01:00:06,559 --> 01:00:08,160
make sense to change it afterwards maybe

1587
01:00:08,160 --> 01:00:09,760
you can propose text or make a

1588
01:00:09,760 --> 01:00:12,160
suggestion but i believe we just didn't

1589
01:00:12,160 --> 01:00:16,160
have a case i see okay okay

1590
01:00:16,160 --> 01:00:18,559
okay let's uh drain the queue but we're

1591
01:00:18,559 --> 01:00:20,960
running into overtime

1592
01:00:20,960 --> 01:00:22,240
we have jake

1593
01:00:22,240 --> 01:00:24,640
could i just ask you to go back to slide

1594
01:00:24,640 --> 01:00:26,960
9 and explain the address passed into

1595
01:00:26,960 --> 01:00:29,839
the remote endpoint is

1596
01:00:29,839 --> 01:00:32,559
yeah so this is a cyan address um this

1597
01:00:32,559 --> 01:00:35,119
is the format of a sign address the 19

1598
01:00:35,119 --> 01:00:37,440
is the isolation domain

1599
01:00:37,440 --> 01:00:39,200
the thing that looks a bit like mac

1600
01:00:39,200 --> 01:00:40,839
address is

1601
01:00:40,839 --> 01:00:44,480
um the the and the as address and the

1602
01:00:44,480 --> 01:00:47,040
last part is the as internal ip address

1603
01:00:47,040 --> 01:00:50,319
and the very last part is support

1604
01:00:50,319 --> 01:00:52,960
okay thank you

1605
01:00:53,599 --> 01:00:55,280
okay and brian

1606
01:00:55,280 --> 01:00:58,000
uh yeah so uh thurman you asked a

1607
01:00:58,000 --> 01:00:59,839
question earlier does this make sense is

1608
01:00:59,839 --> 01:01:01,680
it in the tap spirit yes yes this stuff

1609
01:01:01,680 --> 01:01:03,520
is awesome totally okay to not do it

1610
01:01:03,520 --> 01:01:06,160
event base totally okay to do things

1611
01:01:06,160 --> 01:01:08,960
um go like we've actually seen another

1612
01:01:08,960 --> 01:01:11,440
um go implementation of this that was

1613
01:01:11,440 --> 01:01:12,799
i'm just going to throw away the all of

1614
01:01:12,799 --> 01:01:14,000
the naming because it should be called

1615
01:01:14,000 --> 01:01:15,680
dial because it's go right like so this

1616
01:01:15,680 --> 01:01:18,559
is i really like how you did this here

1617
01:01:18,559 --> 01:01:20,000
um

1618
01:01:20,000 --> 01:01:21,440
uh michael addressed your first bit of

1619
01:01:21,440 --> 01:01:23,200
feedback your second bit of feedback has

1620
01:01:23,200 --> 01:01:25,920
now been filed as issue 1009 uh and i

1621
01:01:25,920 --> 01:01:28,960
hope to have a um pr for that by the end

1622
01:01:28,960 --> 01:01:31,280
of the break so um yeah you're right

1623
01:01:31,280 --> 01:01:32,960
we'll fix it i'm sorry we wasted your

1624
01:01:32,960 --> 01:01:34,240
time

1625
01:01:34,240 --> 01:01:36,240
uh you were talking about this thing

1626
01:01:36,240 --> 01:01:38,720
yeah the event driven api stuff yeah

1627
01:01:38,720 --> 01:01:41,200
i'm going to fix that right now

1628
01:01:41,200 --> 01:01:42,799
thanks a lot

1629
01:01:42,799 --> 01:01:44,720
yeah and we can also discuss the other

1630
01:01:44,720 --> 01:01:47,119
one in an issue in a github

1631
01:01:47,119 --> 01:01:49,599
if we would like uh

1632
01:01:49,599 --> 01:01:52,400
yeah i hesitated i hesitated to open an

1633
01:01:52,400 --> 01:01:54,079
issue because um

1634
01:01:54,079 --> 01:01:56,960
it seems like this this uh draft is

1635
01:01:56,960 --> 01:01:59,680
pretty much mature now um and so i

1636
01:01:59,680 --> 01:02:02,559
wanted to discuss it first

1637
01:02:02,559 --> 01:02:05,280
for all an issue if it's if if like

1638
01:02:05,280 --> 01:02:07,039
if it's too late it's too late if these

1639
01:02:07,039 --> 01:02:09,280
are cheap and they're easy to close

1640
01:02:09,280 --> 01:02:13,039
okay thanks so we are out of time uh

1641
01:02:13,039 --> 01:02:15,920
aaron did you have any last words

1642
01:02:15,920 --> 01:02:18,319
last word is uh think about whether uh

1643
01:02:18,319 --> 01:02:20,160
what other tapping

1644
01:02:20,160 --> 01:02:23,039
mapping documents might be uh useful and

1645
01:02:23,039 --> 01:02:25,520
send suggestions to the list

1646
01:02:25,520 --> 01:02:27,359
so thanks everybody for coming

1647
01:02:27,359 --> 01:02:30,160
great discussion today

1648
01:02:30,160 --> 01:02:32,240
yeah thank you everybody and i think

1649
01:02:32,240 --> 01:02:35,119
we're gonna have an interim in

1650
01:02:35,119 --> 01:02:37,280
maybe early may

1651
01:02:37,280 --> 01:02:40,520
let's see

1652
01:03:08,160 --> 01:03:11,160
yes

1653
01:03:18,580 --> 01:03:21,719
[Music]

