1
00:00:15,920 --> 00:00:18,000
you

2
00:00:32,880 --> 00:00:36,079
jeff you want to get started

3
00:00:36,480 --> 00:00:38,399
we are within 30 seconds let's give

4
00:00:38,399 --> 00:00:40,399
everybody till just a little bit after

5
00:00:40,399 --> 00:00:45,239
the start of the hour or half hour

6
00:00:49,440 --> 00:00:50,800
even though we're fully virtual

7
00:00:50,800 --> 00:00:52,480
everybody's partaking of the usual ietf

8
00:00:52,480 --> 00:00:57,160
tradition of starting a few minutes late

9
00:01:15,680 --> 00:01:17,759
i see that ron chen has joined us ron

10
00:01:17,759 --> 00:01:19,040
you're going to be presenting i believe

11
00:01:19,040 --> 00:01:20,159
if so could you please test your

12
00:01:20,159 --> 00:01:23,159
microphone

13
00:01:44,799 --> 00:01:47,680
and i do not see den and jaya or swadesh

14
00:01:47,680 --> 00:01:50,000
who are the likely presenters for the

15
00:01:50,000 --> 00:01:51,680
card documents

16
00:01:51,680 --> 00:01:53,040
somebody may want to ping them to remind

17
00:01:53,040 --> 00:01:55,840
them of the meeting

18
00:02:09,679 --> 00:02:13,440
okay we've reached our starting time

19
00:02:13,840 --> 00:02:17,520
hello everyone and welcome to ietf 113

20
00:02:17,520 --> 00:02:19,440
for idr

21
00:02:19,440 --> 00:02:22,400
reminder this session is being recorded

22
00:02:22,400 --> 00:02:24,720
and among our other reminders

23
00:02:24,720 --> 00:02:27,040
we are under the ietf note well

24
00:02:27,040 --> 00:02:28,640
you have agreed to this you know as part

25
00:02:28,640 --> 00:02:30,800
of your conference registration and are

26
00:02:30,800 --> 00:02:32,239
going to be bound to it

27
00:02:32,239 --> 00:02:34,720
a point that is uh part of the notewell

28
00:02:34,720 --> 00:02:37,760
that we'd like to point out is that

29
00:02:37,760 --> 00:02:40,400
the ietf code of conduct applies here so

30
00:02:40,400 --> 00:02:41,599
you're

31
00:02:41,599 --> 00:02:44,239
requested to be respectful in your

32
00:02:44,239 --> 00:02:47,120
conversations with other people

33
00:02:47,120 --> 00:02:48,160
a

34
00:02:48,160 --> 00:02:49,760
point that is not made on here that has

35
00:02:49,760 --> 00:02:51,680
been called out through the meeting is

36
00:02:51,680 --> 00:02:52,720
uh

37
00:02:52,720 --> 00:02:54,720
due to the nature of this being a hybrid

38
00:02:54,720 --> 00:02:55,840
conference

39
00:02:55,840 --> 00:02:57,680
we'd like to request that anybody who

40
00:02:57,680 --> 00:02:59,760
speaks please identify yourself those

41
00:02:59,760 --> 00:03:01,680
who are on mikdelko your name will show

42
00:03:01,680 --> 00:03:03,440
up in the minutes as a side effect of

43
00:03:03,440 --> 00:03:06,480
that those of you who are in the room

44
00:03:06,480 --> 00:03:07,920
many of us can't necessarily see you

45
00:03:07,920 --> 00:03:09,519
from the small picture

46
00:03:09,519 --> 00:03:10,959
it will help us as part of doing the

47
00:03:10,959 --> 00:03:13,360
minutes

48
00:03:15,040 --> 00:03:17,120
those of you who are on site

49
00:03:17,120 --> 00:03:18,319
hopefully by this point of the

50
00:03:18,319 --> 00:03:20,000
conference you have downloaded the meet

51
00:03:20,000 --> 00:03:21,599
echo tool and are capable of putting

52
00:03:21,599 --> 00:03:23,360
yourself into the virtual queue

53
00:03:23,360 --> 00:03:24,720
apparently there's a qr code that you

54
00:03:24,720 --> 00:03:27,040
can scan as part of doing this

55
00:03:27,040 --> 00:03:28,400
please take advantage of that that will

56
00:03:28,400 --> 00:03:32,280
help us with cue management

57
00:03:35,599 --> 00:03:37,440
and there's a pointer to other random

58
00:03:37,440 --> 00:03:40,239
information as well

59
00:03:41,200 --> 00:03:44,000
so our agenda for the day is uh you know

60
00:03:44,000 --> 00:03:46,239
this is going to be our focus session i

61
00:03:46,239 --> 00:03:48,080
will go over some

62
00:03:48,080 --> 00:03:49,599
slides of what the current status of the

63
00:03:49,599 --> 00:03:51,680
working group is

64
00:03:51,680 --> 00:03:54,000
we'll have a track on bgp auto

65
00:03:54,000 --> 00:03:56,080
configuration as part of that we'll do a

66
00:03:56,080 --> 00:03:57,680
quick review of

67
00:03:57,680 --> 00:03:59,200
the stuff that's been going on as part

68
00:03:59,200 --> 00:04:01,519
of autocav and then we'll have a

69
00:04:01,519 --> 00:04:04,799
presentation from randy bush on l3nd

70
00:04:04,799 --> 00:04:07,120
we've then reserved about 15 minutes for

71
00:04:07,120 --> 00:04:08,720
discussion of auto configuration in

72
00:04:08,720 --> 00:04:10,239
general and how we're going to take

73
00:04:10,239 --> 00:04:12,319
things forward

74
00:04:12,319 --> 00:04:14,000
we'll have an update on the bgb yang

75
00:04:14,000 --> 00:04:16,160
model by mahesh

76
00:04:16,160 --> 00:04:18,478
and then we enter the bhp routes with

77
00:04:18,478 --> 00:04:19,839
color track

78
00:04:19,839 --> 00:04:21,918
and the first portion of that we'll be

79
00:04:21,918 --> 00:04:23,360
working through the

80
00:04:23,360 --> 00:04:25,919
questions summary that we've done as the

81
00:04:25,919 --> 00:04:27,520
chairs

82
00:04:27,520 --> 00:04:28,400
and

83
00:04:28,400 --> 00:04:30,160
then we'll have a

84
00:04:30,160 --> 00:04:32,479
revisit of the two main proposals to

85
00:04:32,479 --> 00:04:36,160
date which is the php colorware routing

86
00:04:36,160 --> 00:04:38,400
and then follow that by b3 classical

87
00:04:38,400 --> 00:04:39,520
transport

88
00:04:39,520 --> 00:04:41,680
we'll then be having a new presentation

89
00:04:41,680 --> 00:04:42,639
by

90
00:04:42,639 --> 00:04:45,600
ron chen on php

91
00:04:45,600 --> 00:04:47,360
lu

92
00:04:47,360 --> 00:04:48,639
in this case i think it's supposed to be

93
00:04:48,639 --> 00:04:51,280
labeled colored unicast

94
00:04:51,280 --> 00:04:53,759
and no finally we'll be reserving the

95
00:04:53,759 --> 00:04:55,520
last portion of the meeting for no

96
00:04:55,520 --> 00:04:57,520
discussion over these topics

97
00:04:57,520 --> 00:04:59,040
if for some reason we actually do have

98
00:04:59,040 --> 00:05:01,039
available time we have

99
00:05:01,039 --> 00:05:02,560
two requests for moving some of the

100
00:05:02,560 --> 00:05:05,120
presentations from our next time slot up

101
00:05:05,120 --> 00:05:07,039
into this meeting and we'll do so at

102
00:05:07,039 --> 00:05:10,199
that time

103
00:05:10,960 --> 00:05:13,360
since last iatf we've been relatively

104
00:05:13,360 --> 00:05:16,800
quiet on the rfc front rfc 9184 came out

105
00:05:16,800 --> 00:05:18,880
to update how we do the hp extended

106
00:05:18,880 --> 00:05:20,560
communities in terms of registration at

107
00:05:20,560 --> 00:05:22,639
iana

108
00:05:22,639 --> 00:05:25,120
we have auth 48 uh that's in progress

109
00:05:25,120 --> 00:05:28,400
for uh the bgp open policy stuff

110
00:05:28,400 --> 00:05:30,160
uh there is a lot of energetic back and

111
00:05:30,160 --> 00:05:31,520
forth on the mailing list you know

112
00:05:31,520 --> 00:05:33,120
dealing with the edge cases there and

113
00:05:33,120 --> 00:05:35,600
this may eventually be a motivation uh

114
00:05:35,600 --> 00:05:38,400
to revisit the rfc 7606 error handling

115
00:05:38,400 --> 00:05:40,240
procedures

116
00:05:40,240 --> 00:05:42,720
uh a issue that will be resolved at a

117
00:05:42,720 --> 00:05:44,400
later time as part of more general

118
00:05:44,400 --> 00:05:46,639
cleanup is that the original code point

119
00:05:46,639 --> 00:05:49,039
allocated for open policy

120
00:05:49,039 --> 00:05:51,360
apparently has conflicts with stuff

121
00:05:51,360 --> 00:05:52,400
uh

122
00:05:52,400 --> 00:05:54,720
you know from uh prior ietf documents

123
00:05:54,720 --> 00:05:56,240
that had not formally got them assigned

124
00:05:56,240 --> 00:05:57,840
from iana and we'll be dealing with that

125
00:05:57,840 --> 00:06:00,080
separately

126
00:06:00,080 --> 00:06:02,160
we do have two working group last calls

127
00:06:02,160 --> 00:06:03,680
that are in the process of being

128
00:06:03,680 --> 00:06:05,199
finished

129
00:06:05,199 --> 00:06:06,560
work is i think done we're just waiting

130
00:06:06,560 --> 00:06:08,400
for the shepherd to work to be completed

131
00:06:08,400 --> 00:06:11,280
and this is on the rpd draft for

132
00:06:11,280 --> 00:06:13,759
distributing policy into bgp

133
00:06:13,759 --> 00:06:16,080
and the related bhp wide community stuff

134
00:06:16,080 --> 00:06:20,319
which is actually being leveraged by rpd

135
00:06:20,319 --> 00:06:22,319
we've also completed some adoption calls

136
00:06:22,319 --> 00:06:26,000
and the srvtn document has been updated

137
00:06:26,000 --> 00:06:27,919
the slide here is slightly out of sync

138
00:06:27,919 --> 00:06:30,160
we do actually have a draft.etf idr for

139
00:06:30,160 --> 00:06:31,600
it

140
00:06:31,600 --> 00:06:33,759
we also adopted the bfd subcode thing

141
00:06:33,759 --> 00:06:35,360
and there's one implementation of that

142
00:06:35,360 --> 00:06:36,720
and are looking for a second one to

143
00:06:36,720 --> 00:06:40,160
close out this very minor sub code

144
00:06:41,280 --> 00:06:43,600
we also have several adoption calls in

145
00:06:43,600 --> 00:06:46,080
progress and now this is

146
00:06:46,080 --> 00:06:48,080
where idr certainly is a large group is

147
00:06:48,080 --> 00:06:50,160
a little distractible at the moment

148
00:06:50,160 --> 00:06:51,280
uh

149
00:06:51,280 --> 00:06:52,880
side effect of this is that we have a

150
00:06:52,880 --> 00:06:54,560
lot of things in flight not only in

151
00:06:54,560 --> 00:06:56,720
terms of our big pieces of work but also

152
00:06:56,720 --> 00:06:59,840
know some other ones flow spec v2 is one

153
00:06:59,840 --> 00:07:01,440
of those larger items and we'd like to

154
00:07:01,440 --> 00:07:03,759
get that adopted so we can start

155
00:07:03,759 --> 00:07:05,199
trying to move that down the pipeline a

156
00:07:05,199 --> 00:07:07,759
little bit more energy

157
00:07:07,759 --> 00:07:09,520
we have an adoption call and process for

158
00:07:09,520 --> 00:07:11,280
the bgpi fit capabilities and there's

159
00:07:11,280 --> 00:07:12,800
some interesting discussion around that

160
00:07:12,800 --> 00:07:15,039
and strongly recommend you

161
00:07:15,039 --> 00:07:16,319
take a look at the current threads in

162
00:07:16,319 --> 00:07:19,199
idr and also the related ifit

163
00:07:19,199 --> 00:07:22,319
discussions and other working groups

164
00:07:22,319 --> 00:07:23,919
we also have an adoption request and

165
00:07:23,919 --> 00:07:26,000
process partially motivated by some grow

166
00:07:26,000 --> 00:07:28,160
work for

167
00:07:28,160 --> 00:07:29,840
clarifying procedures for maximum

168
00:07:29,840 --> 00:07:31,360
prefixes and how it interacts with the

169
00:07:31,360 --> 00:07:33,440
bgp state machine

170
00:07:33,440 --> 00:07:35,759
and as part of a

171
00:07:35,759 --> 00:07:39,120
set of work related to

172
00:07:39,120 --> 00:07:41,120
the bgb control plane being used for

173
00:07:41,120 --> 00:07:42,880
multicast purposes

174
00:07:42,880 --> 00:07:46,879
we have this document for srp to mp

175
00:07:46,879 --> 00:07:48,560
please take a look at that and also the

176
00:07:48,560 --> 00:07:50,560
related work that is in other working

177
00:07:50,560 --> 00:07:52,400
groups including best you can see on the

178
00:07:52,400 --> 00:07:53,759
right hand side that there's a link to

179
00:07:53,759 --> 00:07:56,000
the idea wiki and it will help you find

180
00:07:56,000 --> 00:07:57,440
the current status of this sort of thing

181
00:07:57,440 --> 00:07:59,520
and we're also trying to keep documents

182
00:07:59,520 --> 00:08:01,759
that are clustered together with related

183
00:08:01,759 --> 00:08:03,919
work and other working groups in the

184
00:08:03,919 --> 00:08:06,000
mickey

185
00:08:06,000 --> 00:08:07,520
we have some adoption calls that will

186
00:08:07,520 --> 00:08:10,000
likely be getting kicked off as part of

187
00:08:10,000 --> 00:08:13,520
finishing up this ietf work uh the

188
00:08:13,520 --> 00:08:16,160
bhp class will transport and php car are

189
00:08:16,160 --> 00:08:17,680
two of the topics to be discussed today

190
00:08:17,680 --> 00:08:20,319
and you know as part of uh working

191
00:08:20,319 --> 00:08:21,680
through things today we'll hopefully be

192
00:08:21,680 --> 00:08:24,000
able to start a working group adoption

193
00:08:24,000 --> 00:08:25,520
calls once we figure out what that looks

194
00:08:25,520 --> 00:08:26,400
like

195
00:08:26,400 --> 00:08:28,800
and very similarly we have a set of

196
00:08:28,800 --> 00:08:31,120
adoption calls to be done on auto

197
00:08:31,120 --> 00:08:33,200
configuration and we'll discuss those as

198
00:08:33,200 --> 00:08:35,760
we move along

199
00:08:36,000 --> 00:08:37,599
we had one

200
00:08:37,599 --> 00:08:40,559
no consensus on you know the vpn prefix

201
00:08:40,559 --> 00:08:42,320
rf there is a lot of energetic

202
00:08:42,320 --> 00:08:44,080
discussion there and the authors are

203
00:08:44,080 --> 00:08:46,000
still very interested in continuing work

204
00:08:46,000 --> 00:08:47,200
on this

205
00:08:47,200 --> 00:08:48,640
as discussed on the mailing list they're

206
00:08:48,640 --> 00:08:49,839
encouraged to

207
00:08:49,839 --> 00:08:51,920
you know obtain a first come first serve

208
00:08:51,920 --> 00:08:54,240
code point and begin implementation and

209
00:08:54,240 --> 00:08:55,839
perhaps you know as

210
00:08:55,839 --> 00:08:58,000
their work actually bears fruit we can

211
00:08:58,000 --> 00:08:59,120
hopefully

212
00:08:59,120 --> 00:09:00,640
see if the working group's willing to

213
00:09:00,640 --> 00:09:02,880
reconsider this based on implementation

214
00:09:02,880 --> 00:09:05,439
experience

215
00:09:05,600 --> 00:09:07,279
not a specific working group adoption

216
00:09:07,279 --> 00:09:09,920
item but had generated a lot of energy

217
00:09:09,920 --> 00:09:11,519
we had a lot of

218
00:09:11,519 --> 00:09:13,839
uh discussion on link local desktop

219
00:09:13,839 --> 00:09:15,680
capability i think this one's just

220
00:09:15,680 --> 00:09:17,200
mostly a matter of finding you know a

221
00:09:17,200 --> 00:09:19,600
single editor to take point on this and

222
00:09:19,600 --> 00:09:21,680
move that forward and once the chairs

223
00:09:21,680 --> 00:09:24,080
have a little bit more bandwidth yeah we

224
00:09:24,080 --> 00:09:25,839
can drive this but uh this is a place

225
00:09:25,839 --> 00:09:27,680
where if you have the energy to drive

226
00:09:27,680 --> 00:09:29,920
this yourself you know maybe we can help

227
00:09:29,920 --> 00:09:32,719
schedule it that way

228
00:09:34,480 --> 00:09:37,120
we've also had a request for working

229
00:09:37,120 --> 00:09:38,720
group attention from several other

230
00:09:38,720 --> 00:09:41,040
working groups including best pce beer

231
00:09:41,040 --> 00:09:42,800
and cider ops

232
00:09:42,800 --> 00:09:43,839
um

233
00:09:43,839 --> 00:09:45,920
some of this is about uh

234
00:09:45,920 --> 00:09:48,399
working group last call comments uh it's

235
00:09:48,399 --> 00:09:50,399
part of a d follow-up so john scudder

236
00:09:50,399 --> 00:09:52,080
has asked us to help take a look at the

237
00:09:52,080 --> 00:09:54,560
color bits no as part of the segment

238
00:09:54,560 --> 00:09:56,720
routing te policy draft

239
00:09:56,720 --> 00:09:59,600
so please chime into that thread

240
00:09:59,600 --> 00:10:01,600
from best we also have

241
00:10:01,600 --> 00:10:03,839
three specific documents that need

242
00:10:03,839 --> 00:10:05,600
additional focused review

243
00:10:05,600 --> 00:10:08,480
the srv6 services document

244
00:10:08,480 --> 00:10:09,920
the evpn

245
00:10:09,920 --> 00:10:12,240
pvpn internet working draft

246
00:10:12,240 --> 00:10:14,640
and the unequal load balancing draft as

247
00:10:14,640 --> 00:10:16,160
well

248
00:10:16,160 --> 00:10:18,399
from cidrops randy bush has asked us to

249
00:10:18,399 --> 00:10:22,000
take a look at the rov no rr draft the

250
00:10:22,000 --> 00:10:24,560
short version of that is uh

251
00:10:24,560 --> 00:10:27,279
carefully main carefully managing how

252
00:10:27,279 --> 00:10:28,880
route refreshes are done when you're

253
00:10:28,880 --> 00:10:30,720
running the rpk router protocol for

254
00:10:30,720 --> 00:10:34,160
route origin validation

255
00:10:34,240 --> 00:10:36,959
and pce beer also has no feedback

256
00:10:36,959 --> 00:10:40,800
requested for some of their work as well

257
00:10:41,680 --> 00:10:44,240
trying to wrap up the status we

258
00:10:44,240 --> 00:10:46,079
attempted to schedule interim meetings

259
00:10:46,079 --> 00:10:48,640
and as we've discovered both partially

260
00:10:48,640 --> 00:10:50,560
from the usual end-of-year scheduling

261
00:10:50,560 --> 00:10:53,440
problems and also fun with the pandemic

262
00:10:53,440 --> 00:10:55,360
we made three attempts to schedule

263
00:10:55,360 --> 00:10:57,600
interims that failed

264
00:10:57,600 --> 00:10:58,959
we did finally manage to have a

265
00:10:58,959 --> 00:11:00,640
successful interim with a lot of

266
00:11:00,640 --> 00:11:02,880
energetic discussion on

267
00:11:02,880 --> 00:11:04,480
january 24th

268
00:11:04,480 --> 00:11:05,440
and

269
00:11:05,440 --> 00:11:07,839
the subjects there were largely bgp

270
00:11:07,839 --> 00:11:10,399
routes of color in terms of

271
00:11:10,399 --> 00:11:13,040
serious presentations on car nct and

272
00:11:13,040 --> 00:11:14,800
some other properties

273
00:11:14,800 --> 00:11:17,279
we also had

274
00:11:17,279 --> 00:11:19,040
relatively quiet presentations at that

275
00:11:19,040 --> 00:11:20,560
time on php auto

276
00:11:20,560 --> 00:11:22,399
configuration you know for the lodp

277
00:11:22,399 --> 00:11:25,440
proposal and an update on draftmento

278
00:11:25,440 --> 00:11:27,040
and unfortunately at that time we did

279
00:11:27,040 --> 00:11:31,040
not have any progress on flowspec b2

280
00:11:32,959 --> 00:11:34,640
and

281
00:11:34,640 --> 00:11:37,120
return to our agenda slide just a sign

282
00:11:37,120 --> 00:11:38,959
check where we're at

283
00:11:38,959 --> 00:11:40,320
so

284
00:11:40,320 --> 00:11:43,120
we've entered the uh discussion for

285
00:11:43,120 --> 00:11:45,920
introduction to auto configuration

286
00:11:45,920 --> 00:11:47,440
and then after that we'll turn it over

287
00:11:47,440 --> 00:11:51,839
to randy for his presentation l3nd

288
00:11:54,320 --> 00:11:56,800
so for auto configuration we have

289
00:11:56,800 --> 00:11:58,480
several drafts that have been in flight

290
00:11:58,480 --> 00:12:00,079
over the course of

291
00:12:00,079 --> 00:12:02,160
the work as you recall we had a design

292
00:12:02,160 --> 00:12:03,360
team that worked through the

293
00:12:03,360 --> 00:12:05,200
requirements and we have a draft that

294
00:12:05,200 --> 00:12:07,920
has been published for that

295
00:12:07,920 --> 00:12:10,079
you know after that work was done we had

296
00:12:10,079 --> 00:12:12,320
three proposals on the table

297
00:12:12,320 --> 00:12:14,079
in terms of

298
00:12:14,079 --> 00:12:15,440
different types of technologies that

299
00:12:15,440 --> 00:12:17,760
implement the requirements

300
00:12:17,760 --> 00:12:19,920
after those things had been presented

301
00:12:19,920 --> 00:12:21,040
we had

302
00:12:21,040 --> 00:12:22,959
a general plan to start adoption

303
00:12:22,959 --> 00:12:24,959
questions and calls after the january

304
00:12:24,959 --> 00:12:26,399
intro

305
00:12:26,399 --> 00:12:29,519
we had a last minute proposal for l3nd

306
00:12:29,519 --> 00:12:31,839
and as part of fairness to you know the

307
00:12:31,839 --> 00:12:34,079
authors i'm going to make sure that they

308
00:12:34,079 --> 00:12:37,120
got equal time for presenting their work

309
00:12:37,120 --> 00:12:39,519
and also to have equal level of scrutiny

310
00:12:39,519 --> 00:12:41,519
paid attention to it similar to what had

311
00:12:41,519 --> 00:12:43,440
been done over the last couple of years

312
00:12:43,440 --> 00:12:46,079
as part of the design team analysis

313
00:12:46,079 --> 00:12:48,000
so we delayed the adoption call until we

314
00:12:48,000 --> 00:12:51,040
can get it presented at this ietf

315
00:12:51,040 --> 00:12:53,200
and yeah we

316
00:12:53,200 --> 00:12:54,959
kicked off some discussion about the

317
00:12:54,959 --> 00:12:56,720
proposal and idea mailing list you're

318
00:12:56,720 --> 00:12:57,760
encouraged to take a look at those

319
00:12:57,760 --> 00:12:59,440
threads and you'll respond to any

320
00:12:59,440 --> 00:13:00,560
questions that may have been raised

321
00:13:00,560 --> 00:13:02,000
there

322
00:13:02,000 --> 00:13:03,760
and

323
00:13:03,760 --> 00:13:06,480
that was a critical point

324
00:13:06,480 --> 00:13:07,360
with

325
00:13:07,360 --> 00:13:10,160
l3nd being issued no we now have all of

326
00:13:10,160 --> 00:13:12,079
the idr chairs you know with an active

327
00:13:12,079 --> 00:13:14,160
hand in the solution space for these

328
00:13:14,160 --> 00:13:15,440
proposals

329
00:13:15,440 --> 00:13:17,600
this means that adoption and consensus

330
00:13:17,600 --> 00:13:19,519
calls are going to be very carefully

331
00:13:19,519 --> 00:13:22,480
monitored and given high level scrutiny

332
00:13:22,480 --> 00:13:24,480
if there's any circumstance where we

333
00:13:24,480 --> 00:13:26,639
find that the consensus is unclear we're

334
00:13:26,639 --> 00:13:28,959
going to be involving a third party

335
00:13:28,959 --> 00:13:32,800
that's delegated to make those calls

336
00:13:33,760 --> 00:13:35,360
so this is where i pause for a second to

337
00:13:35,360 --> 00:13:37,040
see if there's any questions before we

338
00:13:37,040 --> 00:13:40,160
begin randy's presentation on l3 and d

339
00:13:40,160 --> 00:13:41,360
um

340
00:13:41,360 --> 00:13:43,199
and this is the question that we'll be

341
00:13:43,199 --> 00:13:46,599
dealing with afterwards

342
00:13:55,600 --> 00:13:57,279
okay

343
00:13:57,279 --> 00:13:59,279
there being no questions we'll begin

344
00:13:59,279 --> 00:14:02,600
randy's presentation

345
00:14:09,199 --> 00:14:12,399
i seem unable to send videos so

346
00:14:12,399 --> 00:14:16,639
you will be saved from seeing my face

347
00:14:16,639 --> 00:14:18,800
but you will have to put up with magenta

348
00:14:18,800 --> 00:14:21,760
comic sans

349
00:14:21,760 --> 00:14:23,279
um

350
00:14:23,279 --> 00:14:26,480
note that this protocol proposal is a

351
00:14:26,480 --> 00:14:28,800
third generation

352
00:14:28,800 --> 00:14:31,839
um the other two generations were

353
00:14:31,839 --> 00:14:35,839
actually in the lsvr working group

354
00:14:35,839 --> 00:14:38,320
jeff i don't have controls on the slides

355
00:14:38,320 --> 00:14:39,519
yet

356
00:14:39,519 --> 00:14:40,959
okay i have not seen the incoming

357
00:14:40,959 --> 00:14:43,760
request as you did last time here it is

358
00:14:43,760 --> 00:14:46,880
you've been granted permission

359
00:14:47,440 --> 00:14:49,279
and

360
00:14:49,279 --> 00:14:50,959
but

361
00:14:50,959 --> 00:14:53,920
the other two were at layer two

362
00:14:53,920 --> 00:14:57,440
this is at layer three

363
00:14:57,440 --> 00:15:01,040
still waiting for me uh okay

364
00:15:01,040 --> 00:15:03,360
um

365
00:15:03,519 --> 00:15:04,639
okay

366
00:15:04,639 --> 00:15:07,760
lots of usual suspects

367
00:15:07,760 --> 00:15:10,959
um the attempt here is to come up with a

368
00:15:10,959 --> 00:15:14,079
stupid reliable boring

369
00:15:14,079 --> 00:15:16,560
measurable protocol

370
00:15:16,560 --> 00:15:17,440
not

371
00:15:17,440 --> 00:15:18,480
a

372
00:15:18,480 --> 00:15:21,040
stochastic

373
00:15:21,040 --> 00:15:23,680
exploration

374
00:15:23,680 --> 00:15:28,239
because when you've got ten 000 devices

375
00:15:28,320 --> 00:15:31,639
if you're playing with probabilities

376
00:15:31,639 --> 00:15:36,000
.001 still loses you a bunch of devices

377
00:15:36,000 --> 00:15:36,800
but

378
00:15:36,800 --> 00:15:40,240
um so the protocol is rather stiff and

379
00:15:40,240 --> 00:15:42,000
boring

380
00:15:42,000 --> 00:15:46,720
um it's like the l3dl

381
00:15:46,720 --> 00:15:50,160
um layer 2 protocol

382
00:15:50,160 --> 00:15:52,639
except this is layer 3.

383
00:15:52,639 --> 00:15:56,480
so if you were familiar with l3dl

384
00:15:56,480 --> 00:15:59,759
the payload pdus will look familiar to

385
00:15:59,759 --> 00:16:02,000
you

386
00:16:02,000 --> 00:16:06,079
they still handle very large data

387
00:16:06,079 --> 00:16:10,399
the purpose of that is more for be evpn

388
00:16:10,399 --> 00:16:13,199
than bgp discovery

389
00:16:13,199 --> 00:16:14,000
but

390
00:16:14,000 --> 00:16:16,880
note that if you don't

391
00:16:16,880 --> 00:16:19,199
shove a whole bunch of

392
00:16:19,199 --> 00:16:21,600
addresses into a pdu

393
00:16:21,600 --> 00:16:23,680
then it's still small

394
00:16:23,680 --> 00:16:26,639
the only thing with being able to handle

395
00:16:26,639 --> 00:16:30,560
very large pdus is the length fields of

396
00:16:30,560 --> 00:16:32,320
the pdus

397
00:16:32,320 --> 00:16:35,279
chew up some bits

398
00:16:35,360 --> 00:16:38,959
it's a multicast udp hello for initial

399
00:16:38,959 --> 00:16:41,279
discovery

400
00:16:41,279 --> 00:16:45,040
it is session oriented

401
00:16:45,040 --> 00:16:47,759
and resumable

402
00:16:47,759 --> 00:16:49,120
so

403
00:16:49,120 --> 00:16:51,040
the the peers

404
00:16:51,040 --> 00:16:53,279
actually have sessions

405
00:16:53,279 --> 00:16:54,320
that

406
00:16:54,320 --> 00:16:56,560
have a session identifier

407
00:16:56,560 --> 00:16:58,800
and can be resumed from checkpoints if

408
00:16:58,800 --> 00:17:02,079
things are broken etc

409
00:17:02,079 --> 00:17:04,959
there is no pre-transmission

410
00:17:04,959 --> 00:17:06,240
because

411
00:17:06,240 --> 00:17:07,599
it uses

412
00:17:07,599 --> 00:17:09,359
tcp

413
00:17:09,359 --> 00:17:12,400
tcp handles that

414
00:17:12,400 --> 00:17:14,480
the only state that's kept is the

415
00:17:14,480 --> 00:17:17,199
minimal state at the ends

416
00:17:17,199 --> 00:17:19,199
of what it is learned about the other

417
00:17:19,199 --> 00:17:20,640
end

418
00:17:20,640 --> 00:17:21,760
it is not

419
00:17:21,760 --> 00:17:24,480
the protocol itself

420
00:17:24,480 --> 00:17:28,880
contains restartability but not state

421
00:17:28,880 --> 00:17:32,000
thanks to tcp it's guaranteed reliable

422
00:17:32,000 --> 00:17:34,559
in order etc etc

423
00:17:34,559 --> 00:17:36,960
it also

424
00:17:36,960 --> 00:17:39,520
wants to use tls

425
00:17:39,520 --> 00:17:42,000
preferably

426
00:17:42,000 --> 00:17:44,480
okay l3dl by the way

427
00:17:44,480 --> 00:17:46,799
was over layer two

428
00:17:46,799 --> 00:17:49,919
so it had to provide its custom reliable

429
00:17:49,919 --> 00:17:52,559
transport

430
00:17:53,440 --> 00:17:56,640
the object is to find your neighbors

431
00:17:56,640 --> 00:17:59,760
learn their layer three i

432
00:17:59,760 --> 00:18:01,600
addressing

433
00:18:01,600 --> 00:18:05,440
and bootstrap bgp

434
00:18:05,440 --> 00:18:06,640
okay

435
00:18:06,640 --> 00:18:07,440
so

436
00:18:07,440 --> 00:18:09,520
we see at the bottom

437
00:18:09,520 --> 00:18:11,080
the

438
00:18:11,080 --> 00:18:17,360
l3md is exchanging pdus over tcp or tls

439
00:18:17,360 --> 00:18:19,280
it learns

440
00:18:19,280 --> 00:18:22,400
the information about affy safees of its

441
00:18:22,400 --> 00:18:24,400
neighbors

442
00:18:24,400 --> 00:18:28,240
and then communicates up to bgp

443
00:18:28,240 --> 00:18:30,320
we don't know how it communicates up to

444
00:18:30,320 --> 00:18:31,440
bgp

445
00:18:31,440 --> 00:18:33,840
i'll discuss this in the final slide if

446
00:18:33,840 --> 00:18:37,039
we survive that one

447
00:18:38,000 --> 00:18:40,960
this is not a routing protocol

448
00:18:40,960 --> 00:18:45,600
it just discovers layer 3 addressing

449
00:18:45,600 --> 00:18:47,679
okay

450
00:18:47,679 --> 00:18:50,640
basic pdu tlv

451
00:18:50,640 --> 00:18:52,799
101

452
00:18:52,799 --> 00:18:54,559
except we have a version number in front

453
00:18:54,559 --> 00:18:55,440
of it

454
00:18:55,440 --> 00:18:58,080
we have a pdu type for the t

455
00:18:58,080 --> 00:19:00,320
a payload length for the l

456
00:19:00,320 --> 00:19:05,039
and the payroll load itself for a value

457
00:19:06,080 --> 00:19:10,840
the multicast udp hello

458
00:19:10,960 --> 00:19:13,520
has a flags field

459
00:19:13,520 --> 00:19:15,760
which says hey

460
00:19:15,760 --> 00:19:18,960
i would like to do raw tcp

461
00:19:18,960 --> 00:19:23,360
or i would like to do tls please

462
00:19:23,360 --> 00:19:26,480
if it chooses tls

463
00:19:26,480 --> 00:19:27,760
then

464
00:19:27,760 --> 00:19:32,160
you can either use a self-signed cert

465
00:19:32,160 --> 00:19:34,160
or a

466
00:19:34,160 --> 00:19:36,720
certificate authority-based search so

467
00:19:36,720 --> 00:19:40,080
that a data center can have

468
00:19:40,080 --> 00:19:41,880
a

469
00:19:41,880 --> 00:19:43,520
x509

470
00:19:43,520 --> 00:19:45,760
certificate structure

471
00:19:45,760 --> 00:19:48,880
and things can be strongly

472
00:19:48,880 --> 00:19:50,880
authenticated

473
00:19:50,880 --> 00:19:52,720
the port number is thrown in there for a

474
00:19:52,720 --> 00:19:55,600
giggle because ian will have assigned

475
00:19:55,600 --> 00:19:57,039
the port

476
00:19:57,039 --> 00:19:59,120
but it's there so the operator can

477
00:19:59,120 --> 00:20:01,039
override and do custom ports in their

478
00:20:01,039 --> 00:20:03,760
data center

479
00:20:04,720 --> 00:20:08,080
the tls open

480
00:20:08,080 --> 00:20:10,159
we've seen this there

481
00:20:10,159 --> 00:20:13,600
the hello has come in

482
00:20:13,600 --> 00:20:16,480
the sender knew its ip address

483
00:20:16,480 --> 00:20:19,440
the receiver saw the source address on

484
00:20:19,440 --> 00:20:21,679
the hello

485
00:20:21,679 --> 00:20:25,039
so each knows the others

486
00:20:25,039 --> 00:20:27,120
address

487
00:20:27,120 --> 00:20:28,480
for

488
00:20:28,480 --> 00:20:30,640
the interface

489
00:20:30,640 --> 00:20:33,600
for the hello

490
00:20:33,600 --> 00:20:36,960
so they can choose who is going to be

491
00:20:36,960 --> 00:20:40,400
the tcp server and who's going to be the

492
00:20:40,400 --> 00:20:43,360
client by the classic method of the

493
00:20:43,360 --> 00:20:45,679
lowest i p address provides the server

494
00:20:45,679 --> 00:20:49,720
and the highest is the client

495
00:20:51,200 --> 00:20:54,240
if tls

496
00:20:55,360 --> 00:21:00,000
was it ca-based or self-signed

497
00:21:00,080 --> 00:21:02,480
if it's self-signed we call it tofu

498
00:21:02,480 --> 00:21:04,720
trust on first use

499
00:21:04,720 --> 00:21:07,120
i jokingly call that married on first

500
00:21:07,120 --> 00:21:08,159
date

501
00:21:08,159 --> 00:21:09,280
because

502
00:21:09,280 --> 00:21:11,760
what it is is you believe without trump

503
00:21:11,760 --> 00:21:12,880
question

504
00:21:12,880 --> 00:21:15,440
who the other is

505
00:21:15,440 --> 00:21:17,840
you do get of course integrity checking

506
00:21:17,840 --> 00:21:20,480
from tls

507
00:21:20,480 --> 00:21:22,240
and

508
00:21:22,240 --> 00:21:24,799
if you disconnect and reconnect or

509
00:21:24,799 --> 00:21:26,080
restart

510
00:21:26,080 --> 00:21:29,200
you know that you have the same peer or

511
00:21:29,200 --> 00:21:31,039
the same attacker

512
00:21:31,039 --> 00:21:32,559
so you know

513
00:21:32,559 --> 00:21:33,600
their

514
00:21:33,600 --> 00:21:36,320
identity is constant but you have no

515
00:21:36,320 --> 00:21:39,760
reason to trust their identity

516
00:21:39,760 --> 00:21:43,760
whereas if you use a ca

517
00:21:43,760 --> 00:21:47,600
the server certificate has been signed

518
00:21:47,600 --> 00:21:52,640
by the x509 structure of the environment

519
00:21:52,640 --> 00:21:56,000
the server used that cert and the client

520
00:21:56,000 --> 00:21:59,039
has the pro public key

521
00:21:59,039 --> 00:22:02,720
for that certificate and can verify it

522
00:22:02,720 --> 00:22:04,080
and therefore

523
00:22:04,080 --> 00:22:07,360
knows the identity of the server and

524
00:22:07,360 --> 00:22:08,480
trust it

525
00:22:08,480 --> 00:22:09,360
so

526
00:22:09,360 --> 00:22:13,399
we have authenticity

527
00:22:13,520 --> 00:22:15,360
classic tls

528
00:22:15,360 --> 00:22:17,440
the choices

529
00:22:17,440 --> 00:22:20,720
is up to the operator

530
00:22:21,679 --> 00:22:22,960
so

531
00:22:22,960 --> 00:22:27,039
we have an active tls or naked tcp

532
00:22:27,039 --> 00:22:29,200
session

533
00:22:29,200 --> 00:22:31,679
we now go to the

534
00:22:31,679 --> 00:22:33,360
l3nd

535
00:22:33,360 --> 00:22:34,880
pdus

536
00:22:34,880 --> 00:22:36,720
the first pdu

537
00:22:36,720 --> 00:22:39,200
is open

538
00:22:39,200 --> 00:22:44,240
open has a session id

539
00:22:44,240 --> 00:22:46,799
as i said this is a session oriented

540
00:22:46,799 --> 00:22:49,760
protocol and i didn't just mean the tls

541
00:22:49,760 --> 00:22:55,840
tcp but the idea of an l3nd session

542
00:22:56,000 --> 00:22:57,200
okay

543
00:22:57,200 --> 00:22:58,240
and

544
00:22:58,240 --> 00:23:00,400
there's a serial number you're going to

545
00:23:00,400 --> 00:23:01,200
see

546
00:23:01,200 --> 00:23:04,240
in the data pdus

547
00:23:04,240 --> 00:23:06,000
which allow

548
00:23:06,000 --> 00:23:08,880
that if things get broken

549
00:23:08,880 --> 00:23:12,000
they can reconnect

550
00:23:12,000 --> 00:23:13,600
they can

551
00:23:13,600 --> 00:23:17,919
reissue an open with the old session id

552
00:23:17,919 --> 00:23:20,000
and the serial number

553
00:23:20,000 --> 00:23:23,760
of the last good pdu

554
00:23:23,760 --> 00:23:26,960
and say hey if you're cool

555
00:23:26,960 --> 00:23:29,760
i'm cool with resuming the session from

556
00:23:29,760 --> 00:23:32,480
that point

557
00:23:32,480 --> 00:23:34,720
now this is designed

558
00:23:34,720 --> 00:23:37,760
much more for the

559
00:23:37,760 --> 00:23:39,840
large-scale

560
00:23:39,840 --> 00:23:43,840
addressing space of ebpn etc

561
00:23:43,840 --> 00:23:46,880
but it's certainly useful in the bgp

562
00:23:46,880 --> 00:23:48,320
says

563
00:23:48,320 --> 00:23:50,799
there's also a list of attributes in the

564
00:23:50,799 --> 00:23:51,760
open

565
00:23:51,760 --> 00:23:55,600
which says hey i'm a leaf i'm a spine

566
00:23:55,600 --> 00:23:59,039
i prefer coffee chip ice cream

567
00:23:59,039 --> 00:24:02,799
whatever they're user defined

568
00:24:02,799 --> 00:24:05,520
okay

569
00:24:05,520 --> 00:24:09,919
all pdus are act this is as i said a

570
00:24:09,919 --> 00:24:14,080
really dumb standard old style protocol

571
00:24:14,080 --> 00:24:16,559
the ack also acts

572
00:24:16,559 --> 00:24:18,880
as an error notice

573
00:24:18,880 --> 00:24:21,919
so if there is an e type greater than

574
00:24:21,919 --> 00:24:23,840
zero

575
00:24:23,840 --> 00:24:27,120
it tells you hey this is a warning

576
00:24:27,120 --> 00:24:29,600
um the session is broken

577
00:24:29,600 --> 00:24:30,720
or

578
00:24:30,720 --> 00:24:33,600
call the operator and there are room for

579
00:24:33,600 --> 00:24:35,760
error codes and hints and so on and so

580
00:24:35,760 --> 00:24:37,360
forth

581
00:24:37,360 --> 00:24:39,679
you will be reminded of

582
00:24:39,679 --> 00:24:45,120
smtp and other error codes like that

583
00:24:45,520 --> 00:24:46,640
okay

584
00:24:46,640 --> 00:24:49,600
as i said it's fully stateful

585
00:24:49,600 --> 00:24:52,080
there's a session prepared

586
00:24:52,080 --> 00:24:56,240
restartable and can be resumed

587
00:24:56,720 --> 00:24:57,760
so

588
00:24:57,760 --> 00:25:01,840
we now have a session established

589
00:25:02,240 --> 00:25:04,240
i want to tell you

590
00:25:04,240 --> 00:25:05,679
what

591
00:25:05,679 --> 00:25:09,440
ip in this case ipv4

592
00:25:09,440 --> 00:25:12,000
address space i have

593
00:25:12,000 --> 00:25:15,520
on my device

594
00:25:15,520 --> 00:25:16,559
so

595
00:25:16,559 --> 00:25:19,120
note there was the serial number

596
00:25:19,120 --> 00:25:22,240
and then i pass you a list of ipv4

597
00:25:22,240 --> 00:25:24,320
addresses

598
00:25:24,320 --> 00:25:26,000
or we call them for the moment

599
00:25:26,000 --> 00:25:28,240
encapsulations that word has been

600
00:25:28,240 --> 00:25:31,279
confusing we'll work on it

601
00:25:31,279 --> 00:25:33,919
but each one

602
00:25:33,919 --> 00:25:37,440
each ipv4 address has a flag

603
00:25:37,440 --> 00:25:40,640
field and then a prefix length of course

604
00:25:40,640 --> 00:25:42,720
the flags say whether i'm announcing it

605
00:25:42,720 --> 00:25:44,960
or withdrawing it

606
00:25:44,960 --> 00:25:48,559
is this a primary or secondary interface

607
00:25:48,559 --> 00:25:51,440
is it an underlayer overlay interface

608
00:25:51,440 --> 00:25:54,919
is it a loopback

609
00:25:56,559 --> 00:26:00,559
of course they're similar for ipv6

610
00:26:00,559 --> 00:26:02,880
and to give you some mpls

611
00:26:02,880 --> 00:26:05,200
clue

612
00:26:05,279 --> 00:26:06,480
okay

613
00:26:06,480 --> 00:26:07,279
so

614
00:26:07,279 --> 00:26:09,600
if we have that

615
00:26:09,600 --> 00:26:11,520
i now know

616
00:26:11,520 --> 00:26:16,158
what address space my peer has

617
00:26:16,480 --> 00:26:18,720
how do i set up

618
00:26:18,720 --> 00:26:21,360
bgp

619
00:26:22,640 --> 00:26:25,360
i want to con this this is for

620
00:26:25,360 --> 00:26:28,640
configuring arbitrary layer 3 protocols

621
00:26:28,640 --> 00:26:33,200
but so far we'll only discuss bgb

622
00:26:33,760 --> 00:26:37,440
there's what we call an upper layer

623
00:26:37,440 --> 00:26:39,600
protocol configuration

624
00:26:39,600 --> 00:26:42,880
pdu and l3nd

625
00:26:42,880 --> 00:26:44,880
there's only one active type we're going

626
00:26:44,880 --> 00:26:48,559
to talk about and that's bgp

627
00:26:48,880 --> 00:26:50,480
and it has

628
00:26:50,480 --> 00:26:54,159
a whole bunch of sub tlds

629
00:26:54,159 --> 00:26:55,440
for the moment we'll call them

630
00:26:55,440 --> 00:26:58,159
attributes

631
00:26:59,440 --> 00:27:02,080
the goal is to provide the absolute

632
00:27:02,080 --> 00:27:05,279
minimal set of configuration parameters

633
00:27:05,279 --> 00:27:07,600
for bgp open

634
00:27:07,600 --> 00:27:11,199
to take over and succeed

635
00:27:11,360 --> 00:27:14,640
we don't want to conflict with data that

636
00:27:14,640 --> 00:27:17,360
might be exchanged in the open

637
00:27:17,360 --> 00:27:21,120
because multiple sources of truth

638
00:27:21,120 --> 00:27:22,720
are a way

639
00:27:22,720 --> 00:27:25,360
for a real mess

640
00:27:25,360 --> 00:27:27,320
so we're not going to

641
00:27:27,320 --> 00:27:28,960
[Music]

642
00:27:28,960 --> 00:27:32,960
tell you things that the bgp open

643
00:27:32,960 --> 00:27:34,640
will discover

644
00:27:34,640 --> 00:27:39,200
or assert as capabilities etc

645
00:27:39,919 --> 00:27:43,679
i'm going to tell you my as

646
00:27:43,840 --> 00:27:45,440
i'm going to tell you

647
00:27:45,440 --> 00:27:47,440
what ipv4

648
00:27:47,440 --> 00:27:52,080
peering address i would like to use

649
00:27:52,240 --> 00:27:55,840
and remember that could be a loopback

650
00:27:55,840 --> 00:27:58,640
and when i told you my addressing i told

651
00:27:58,640 --> 00:28:01,200
you what would i have marked it as a

652
00:28:01,200 --> 00:28:03,760
loopback you'd have known my primary so

653
00:28:03,760 --> 00:28:07,120
you can set up forwarding

654
00:28:07,200 --> 00:28:08,960
okay

655
00:28:08,960 --> 00:28:11,760
blob for authentication data md5 or

656
00:28:11,760 --> 00:28:12,880
whatever

657
00:28:12,880 --> 00:28:17,240
and also a flag for gtsm

658
00:28:19,360 --> 00:28:24,159
and yes of course there is for ipv6

659
00:28:24,159 --> 00:28:25,679
and remember

660
00:28:25,679 --> 00:28:30,760
that loopbacks etc were marked

661
00:28:31,520 --> 00:28:33,760
so

662
00:28:34,159 --> 00:28:36,000
some people like some of these things

663
00:28:36,000 --> 00:28:38,399
some people don't

664
00:28:38,399 --> 00:28:40,559
that's why we have rdr to discuss things

665
00:28:40,559 --> 00:28:42,640
internally

666
00:28:42,640 --> 00:28:45,440
it's stateful and restartable

667
00:28:45,440 --> 00:28:47,760
it's got handshakes

668
00:28:47,760 --> 00:28:49,520
hair reporting

669
00:28:49,520 --> 00:28:52,320
all that stuff

670
00:28:52,320 --> 00:28:55,039
it runs over tcp

671
00:28:55,039 --> 00:28:58,080
if you have bgp on your device you have

672
00:28:58,080 --> 00:28:59,840
tcp

673
00:28:59,840 --> 00:29:02,159
if you want security

674
00:29:02,159 --> 00:29:04,080
do you roll your own

675
00:29:04,080 --> 00:29:06,880
or just shut up and use tls

676
00:29:06,880 --> 00:29:10,720
in the security world roll your own

677
00:29:10,720 --> 00:29:14,240
is a long form of you are extremely

678
00:29:14,240 --> 00:29:16,720
stupid

679
00:29:17,120 --> 00:29:19,120
l three and d provides

680
00:29:19,120 --> 00:29:24,639
large scale probably more than bgp needs

681
00:29:25,039 --> 00:29:26,960
we can argue that

682
00:29:26,960 --> 00:29:30,080
it really only costs a few bits in the

683
00:29:30,080 --> 00:29:31,760
length fields

684
00:29:31,760 --> 00:29:33,200
if you don't

685
00:29:33,200 --> 00:29:34,559
use

686
00:29:34,559 --> 00:29:37,200
the scaling and hand try to handle over

687
00:29:37,200 --> 00:29:39,279
a ton of addresses

688
00:29:39,279 --> 00:29:40,559
and i can

689
00:29:40,559 --> 00:29:43,760
go into now or some other time

690
00:29:43,760 --> 00:29:45,120
um

691
00:29:45,120 --> 00:29:47,520
how you can use it for highly scaled

692
00:29:47,520 --> 00:29:48,919
evpn

693
00:29:48,919 --> 00:29:50,640
multipod

694
00:29:50,640 --> 00:29:53,320
etc etc with the whole thing's

695
00:29:53,320 --> 00:29:54,880
multi-tenancy

696
00:29:54,880 --> 00:29:57,120
microservices

697
00:29:57,120 --> 00:29:59,039
that whole world

698
00:29:59,039 --> 00:30:01,039
this also serves as a discovery

699
00:30:01,039 --> 00:30:03,279
mechanism for that just because it

700
00:30:03,279 --> 00:30:05,200
scales

701
00:30:05,200 --> 00:30:06,840
so randy if i may

702
00:30:06,840 --> 00:30:10,158
interrupt no you may not

703
00:30:10,320 --> 00:30:11,919
that's it

704
00:30:11,919 --> 00:30:13,039
except

705
00:30:13,039 --> 00:30:15,840
one other thing

706
00:30:16,559 --> 00:30:19,679
i still do not understand

707
00:30:19,679 --> 00:30:24,480
how parameters are passed to bgp

708
00:30:25,600 --> 00:30:27,760
okay

709
00:30:27,760 --> 00:30:30,480
in l3dl

710
00:30:30,480 --> 00:30:33,360
we specify that bgpls is used to

711
00:30:33,360 --> 00:30:37,000
communicate with bgp

712
00:30:37,600 --> 00:30:40,960
how is bgp started how do you tell bgp

713
00:30:40,960 --> 00:30:43,200
okay here are your data

714
00:30:43,200 --> 00:30:46,000
you can start now oh data have changed

715
00:30:46,000 --> 00:30:48,880
you need to restart

716
00:30:48,880 --> 00:30:52,080
when is discovery finished

717
00:30:52,080 --> 00:30:54,880
should it be stopped or because new

718
00:30:54,880 --> 00:30:55,760
people

719
00:30:55,760 --> 00:30:57,840
will keep plugging in devices and old

720
00:30:57,840 --> 00:30:59,600
devices will leave do we keep running

721
00:30:59,600 --> 00:31:01,840
forever how's that done is there a

722
00:31:01,840 --> 00:31:04,240
full-scale orchestration system over

723
00:31:04,240 --> 00:31:05,120
there

724
00:31:05,120 --> 00:31:06,960
if so

725
00:31:06,960 --> 00:31:08,480
you know that we haven't really

726
00:31:08,480 --> 00:31:11,200
discussed this

727
00:31:11,200 --> 00:31:12,159
okay

728
00:31:12,159 --> 00:31:14,880
and i really question do we rather need

729
00:31:14,880 --> 00:31:18,880
the restartability it adds complexity

730
00:31:18,880 --> 00:31:21,919
and now i really am through

731
00:31:21,919 --> 00:31:26,480
and jeff if you wanted to ask questions

732
00:31:26,480 --> 00:31:28,960
so i had more questions but i wanted to

733
00:31:28,960 --> 00:31:30,960
take you up on your suggestion to

734
00:31:30,960 --> 00:31:33,200
briefly discuss the e-vpn scaling

735
00:31:33,200 --> 00:31:35,760
because i think that it ties into

736
00:31:35,760 --> 00:31:38,080
some of the motivations potentially for

737
00:31:38,080 --> 00:31:39,279
how you're specifying your

738
00:31:39,279 --> 00:31:42,480
encapsulations pdu

739
00:31:49,760 --> 00:31:51,440
did you want to discuss that or defer

740
00:31:51,440 --> 00:31:54,640
that for a different presentation

741
00:31:55,840 --> 00:32:00,080
i think deferring probably is wise

742
00:32:00,080 --> 00:32:02,080
okay

743
00:32:02,080 --> 00:32:03,679
so if that's the case we now have

744
00:32:03,679 --> 00:32:05,840
questions at the microphone

745
00:32:05,840 --> 00:32:08,799
ac or first

746
00:32:09,200 --> 00:32:11,600
ac landing cisco systems hey i was just

747
00:32:11,600 --> 00:32:13,120
going to say the last part about how

748
00:32:13,120 --> 00:32:16,320
this is communicated to be bgp

749
00:32:16,320 --> 00:32:18,480
uh i think this in that's an internal we

750
00:32:18,480 --> 00:32:20,480
don't have to specify those apis between

751
00:32:20,480 --> 00:32:22,399
the discovery protocols

752
00:32:22,399 --> 00:32:24,159
and um

753
00:32:24,159 --> 00:32:29,600
the nbgp or let's say any other uh

754
00:32:29,600 --> 00:32:31,919
any other entity that wants to learn

755
00:32:31,919 --> 00:32:34,480
these things uh

756
00:32:34,480 --> 00:32:35,840
i really i really think i really i

757
00:32:35,840 --> 00:32:38,000
really think that's out of scope for the

758
00:32:38,000 --> 00:32:42,039
ietf for the standard

759
00:32:42,159 --> 00:32:44,559
that's it

760
00:32:45,919 --> 00:32:49,120
martin yeah at the microphone

761
00:32:49,840 --> 00:32:52,880
uh hi martin huneck i would like to ask

762
00:32:52,880 --> 00:32:55,519
about the tls certificates

763
00:32:55,519 --> 00:32:57,360
do did you consider

764
00:32:57,360 --> 00:32:58,960
dane also to

765
00:32:58,960 --> 00:33:02,640
validate a tls certificate

766
00:33:05,200 --> 00:33:06,399
no

767
00:33:06,399 --> 00:33:08,399
um

768
00:33:08,399 --> 00:33:10,880
you'll notice there's no dns here

769
00:33:10,880 --> 00:33:14,720
putting dns and bgp in the same bucket

770
00:33:14,720 --> 00:33:17,679
sounds like uh

771
00:33:19,519 --> 00:33:21,600
possibly a little uh asking for

772
00:33:21,600 --> 00:33:24,880
complexity i'm trying to be polite

773
00:33:24,880 --> 00:33:27,519
i am i am a fan of dane

774
00:33:27,519 --> 00:33:29,760
i don't want to put dane down i just

775
00:33:29,760 --> 00:33:32,000
don't think we want to add

776
00:33:32,000 --> 00:33:35,360
dns at this layer

777
00:33:35,840 --> 00:33:38,799
okay thank you very much

778
00:33:38,799 --> 00:33:40,320
okay you're here next

779
00:33:40,320 --> 00:33:41,840
yeah i'm just going to speak as a

780
00:33:41,840 --> 00:33:43,840
working group member taking my working

781
00:33:43,840 --> 00:33:45,760
group chair hat off

782
00:33:45,760 --> 00:33:49,360
i do agree with uac this is going to be

783
00:33:49,360 --> 00:33:52,000
how you actually pass the data to bgp is

784
00:33:52,000 --> 00:33:53,600
going to be a matter of

785
00:33:53,600 --> 00:33:55,519
implementation details

786
00:33:55,519 --> 00:33:57,919
thank you

787
00:33:59,840 --> 00:34:05,840
i don't agree with that because i want

788
00:34:05,840 --> 00:34:08,639
between vendors

789
00:34:08,639 --> 00:34:10,800
and that is one of the core purposes of

790
00:34:10,800 --> 00:34:13,679
the ietf

791
00:34:15,520 --> 00:34:18,079
ben you have the microphone

792
00:34:18,079 --> 00:34:21,040
thanks um

793
00:34:21,040 --> 00:34:23,280
i'm not sure that i understand the

794
00:34:23,280 --> 00:34:25,760
purpose of signaling the choice of

795
00:34:25,760 --> 00:34:28,320
whether to use a self-signed certificate

796
00:34:28,320 --> 00:34:31,440
or a ca issued certificate on the wire i

797
00:34:31,440 --> 00:34:33,359
would have thought that simply a local

798
00:34:33,359 --> 00:34:35,040
configuration matter

799
00:34:35,040 --> 00:34:38,480
can you explain why that's in there

800
00:34:42,239 --> 00:34:44,399
because

801
00:34:44,399 --> 00:34:47,679
it's an assertion

802
00:34:47,679 --> 00:34:49,839
about

803
00:34:50,399 --> 00:34:54,638
the security being provided

804
00:34:55,280 --> 00:34:56,800
and

805
00:34:56,800 --> 00:34:59,520
since we do not have an orchestration

806
00:34:59,520 --> 00:35:01,440
system

807
00:35:01,440 --> 00:35:03,920
see this slide

808
00:35:03,920 --> 00:35:04,880
um

809
00:35:04,880 --> 00:35:07,760
i it's hard to flip slides by the way

810
00:35:07,760 --> 00:35:09,359
here

811
00:35:09,359 --> 00:35:10,400
um

812
00:35:10,400 --> 00:35:12,640
but

813
00:35:13,599 --> 00:35:16,599
the

814
00:35:19,680 --> 00:35:22,799
i want to know

815
00:35:25,680 --> 00:35:28,480
i want to know

816
00:35:28,480 --> 00:35:30,560
that you are

817
00:35:30,560 --> 00:35:31,520
you

818
00:35:31,520 --> 00:35:33,359
you are identified

819
00:35:33,359 --> 00:35:37,680
and you just give me a self-signed cert

820
00:35:38,320 --> 00:35:40,960
do i trust it

821
00:35:40,960 --> 00:35:44,000
if we've agreed

822
00:35:44,000 --> 00:35:46,560
that we're running

823
00:35:46,560 --> 00:35:49,200
self-signed that's fine

824
00:35:49,200 --> 00:35:51,200
but if i think

825
00:35:51,200 --> 00:35:54,078
there's a ca

826
00:35:54,160 --> 00:35:57,440
you could do a replay

827
00:35:57,440 --> 00:36:00,240
of somebody else's cert

828
00:36:00,240 --> 00:36:03,359
from that ca

829
00:36:03,359 --> 00:36:05,760
et cetera we're trying to deal with that

830
00:36:05,760 --> 00:36:08,160
but i see where you're going ben and i

831
00:36:08,160 --> 00:36:11,040
think that is what's more discussion

832
00:36:11,040 --> 00:36:13,520
yeah i i i understand of all the points

833
00:36:13,520 --> 00:36:15,520
you make i i'm just not sure that that

834
00:36:15,520 --> 00:36:17,200
needs to be

835
00:36:17,200 --> 00:36:19,280
on the wire at that point in the

836
00:36:19,280 --> 00:36:22,320
exchange i think that you know if i am

837
00:36:22,320 --> 00:36:25,760
configured to require a ca issued

838
00:36:25,760 --> 00:36:27,359
certificate and you send me a

839
00:36:27,359 --> 00:36:29,040
self-signed one then i drop it on the

840
00:36:29,040 --> 00:36:31,520
floor and walk away

841
00:36:31,520 --> 00:36:34,560
i don't see how that bit that flag helps

842
00:36:34,560 --> 00:36:36,160
but i think the rest of it's perfectly

843
00:36:36,160 --> 00:36:39,160
valid

844
00:36:40,160 --> 00:36:45,359
we can just discuss offline i i hear you

845
00:36:45,440 --> 00:36:47,200
but i think we we

846
00:36:47,200 --> 00:36:49,040
should have robin russian on that part

847
00:36:49,040 --> 00:36:51,520
of the discussion

848
00:36:51,520 --> 00:36:55,040
okay the microphone is bribe is typed in

849
00:36:55,040 --> 00:36:57,599
to you in chat by the way

850
00:36:57,599 --> 00:36:59,680
yes so microphone and queue is cut with

851
00:36:59,680 --> 00:37:00,720
me

852
00:37:00,720 --> 00:37:03,440
minto you have the microphone

853
00:37:03,440 --> 00:37:04,880
thanks

854
00:37:04,880 --> 00:37:07,680
so does the tlsca base certificate need

855
00:37:07,680 --> 00:37:09,119
a

856
00:37:09,119 --> 00:37:11,280
ipa transfer based configuration to

857
00:37:11,280 --> 00:37:16,000
identify to identify the identity

858
00:37:17,520 --> 00:37:21,200
i did not understand the question

859
00:37:21,200 --> 00:37:23,599
so the certificate uh identity

860
00:37:23,599 --> 00:37:26,240
verification right that is required that

861
00:37:26,240 --> 00:37:28,320
is need to be identified right

862
00:37:28,320 --> 00:37:30,160
so does it need a

863
00:37:30,160 --> 00:37:32,240
local libraries-based configuration or

864
00:37:32,240 --> 00:37:34,240
it rely on the management network all

865
00:37:34,240 --> 00:37:37,399
the time

866
00:37:38,320 --> 00:37:40,640
the certificate is presumably

867
00:37:40,640 --> 00:37:42,800
provisioned into the

868
00:37:42,800 --> 00:37:43,920
server

869
00:37:43,920 --> 00:37:47,200
side device

870
00:37:47,920 --> 00:37:48,880
by

871
00:37:48,880 --> 00:37:53,280
an out-of-band enrollment system

872
00:37:55,920 --> 00:37:58,240
okay the for instance

873
00:37:58,240 --> 00:38:00,000
you know when you bench the device

874
00:38:00,000 --> 00:38:02,079
before you rack it

875
00:38:02,079 --> 00:38:05,119
you blow in its uh

876
00:38:05,119 --> 00:38:07,440
management interface address et cetera

877
00:38:07,440 --> 00:38:10,079
et cetera and you blow in its server

878
00:38:10,079 --> 00:38:12,800
certificate

879
00:38:13,520 --> 00:38:15,359
appliance

880
00:38:15,359 --> 00:38:16,240
sorry

881
00:38:16,240 --> 00:38:18,800
the client to identify uh

882
00:38:18,800 --> 00:38:20,400
identify the

883
00:38:20,400 --> 00:38:23,520
set figure right does it verify with a a

884
00:38:23,520 --> 00:38:25,359
external server or it has to be

885
00:38:25,359 --> 00:38:27,200
configured internally or the circuit is

886
00:38:27,200 --> 00:38:30,000
a group certificate

887
00:38:30,320 --> 00:38:34,480
if it is ca based it is external

888
00:38:34,480 --> 00:38:37,599
there's a provisioning system

889
00:38:37,599 --> 00:38:39,599
the probably

890
00:38:39,599 --> 00:38:42,160
if if you're interested in

891
00:38:42,160 --> 00:38:44,800
how one might do this in detail go look

892
00:38:44,800 --> 00:38:46,960
at

893
00:38:47,040 --> 00:38:49,200
rpki

894
00:38:49,200 --> 00:38:51,920
router keys

895
00:38:51,920 --> 00:38:52,800
and

896
00:38:52,800 --> 00:38:57,119
the router when it's booted it could

897
00:38:57,119 --> 00:38:59,440
create its own keying

898
00:38:59,440 --> 00:39:01,839
and ask the ca

899
00:39:01,839 --> 00:39:04,079
to sign that certificate

900
00:39:04,079 --> 00:39:05,359
and then

901
00:39:05,359 --> 00:39:07,680
push that signed certificate back to the

902
00:39:07,680 --> 00:39:09,920
router

903
00:39:09,920 --> 00:39:10,960
or

904
00:39:10,960 --> 00:39:12,960
the ca could have created the cis

905
00:39:12,960 --> 00:39:17,119
certificate and pushed it to the router

906
00:39:17,119 --> 00:39:19,680
either way

907
00:39:20,720 --> 00:39:22,960
but now we're down into how does one

908
00:39:22,960 --> 00:39:24,800
provision certificates

909
00:39:24,800 --> 00:39:28,160
and that's pretty standard stuff

910
00:39:28,160 --> 00:39:29,680
yeah minto unfortunately we have to move

911
00:39:29,680 --> 00:39:31,599
forward uh randy i think to minto's

912
00:39:31,599 --> 00:39:33,440
point what is being requested is more

913
00:39:33,440 --> 00:39:34,960
details about the contents of the

914
00:39:34,960 --> 00:39:37,280
certificate since some tls certificates

915
00:39:37,280 --> 00:39:39,440
are bound to ip addresses so you want to

916
00:39:39,440 --> 00:39:40,880
go to more detail about the profile

917
00:39:40,880 --> 00:39:42,400
you're expecting

918
00:39:42,400 --> 00:39:44,800
bill yeah the microphone

919
00:39:44,800 --> 00:39:47,520
hi bill fenner arista networks um on the

920
00:39:47,520 --> 00:39:50,160
topic of how the configuration gets to

921
00:39:50,160 --> 00:39:51,200
bgp

922
00:39:51,200 --> 00:39:54,000
i think the the question of how is

923
00:39:54,000 --> 00:39:55,119
definitely a

924
00:39:55,119 --> 00:39:56,800
matter that's local to the router but

925
00:39:56,800 --> 00:39:57,760
when

926
00:39:57,760 --> 00:40:00,320
i think is more of a question for the

927
00:40:00,320 --> 00:40:02,800
protocol definition and i i suspect

928
00:40:02,800 --> 00:40:05,839
that's more of what randy meant by this

929
00:40:05,839 --> 00:40:08,319
slide with questions is

930
00:40:08,319 --> 00:40:11,599
once you've learned enough information

931
00:40:11,599 --> 00:40:13,119
how do you decide when you've learned

932
00:40:13,119 --> 00:40:14,640
enough information to push it over to

933
00:40:14,640 --> 00:40:17,520
bgp to get it to start this session

934
00:40:17,520 --> 00:40:20,079
how do you decide whether to reset an

935
00:40:20,079 --> 00:40:24,400
existing session without information

936
00:40:24,400 --> 00:40:26,960
yep yeah

937
00:40:29,599 --> 00:40:30,720
thank you bill

938
00:40:30,720 --> 00:40:31,920
so i'm the

939
00:40:31,920 --> 00:40:34,000
last one to supply comments randy i have

940
00:40:34,000 --> 00:40:36,480
a few comments for you i will not repeat

941
00:40:36,480 --> 00:40:37,839
the majority of my comments from the

942
00:40:37,839 --> 00:40:39,680
list hopefully we'll follow up for those

943
00:40:39,680 --> 00:40:41,359
there

944
00:40:41,359 --> 00:40:42,880
um

945
00:40:42,880 --> 00:40:45,599
one comment that was useful to make is

946
00:40:45,599 --> 00:40:47,440
you've pointed out you know you don't

947
00:40:47,440 --> 00:40:50,800
like stochastic protocols

948
00:40:50,800 --> 00:40:53,599
for this mechanism to take effect you're

949
00:40:53,599 --> 00:40:55,440
relying on a bootstrapping mechanism

950
00:40:55,440 --> 00:40:58,000
that has much the same properties

951
00:40:58,000 --> 00:41:01,200
for l3 and d to be able to start as dcp

952
00:41:01,200 --> 00:41:03,119
it has to hear the hello

953
00:41:03,119 --> 00:41:04,880
for all of the

954
00:41:04,880 --> 00:41:06,720
shout show the dark protocols

955
00:41:06,720 --> 00:41:08,400
they take action similarly because

956
00:41:08,400 --> 00:41:11,040
you've heard that

957
00:41:12,319 --> 00:41:14,079
a second comment

958
00:41:14,079 --> 00:41:18,160
is your attributes i wanted to ask

959
00:41:18,160 --> 00:41:20,319
why you chose to do those because the

960
00:41:20,319 --> 00:41:23,200
requirements uh portion of our work on

961
00:41:23,200 --> 00:41:25,040
this you had fought very hard to

962
00:41:25,040 --> 00:41:27,200
actually remove anything that resembled

963
00:41:27,200 --> 00:41:30,000
uh such things you know termed his role

964
00:41:30,000 --> 00:41:31,520
in some cases

965
00:41:31,520 --> 00:41:36,319
no to be specified a fixed set

966
00:41:36,640 --> 00:41:38,160
here it's open

967
00:41:38,160 --> 00:41:40,000
operator choice whatever attributes they

968
00:41:40,000 --> 00:41:42,240
want

969
00:41:42,560 --> 00:41:46,640
okay i think we're slicing at details um

970
00:41:46,640 --> 00:41:49,280
third comment that i had was about the

971
00:41:49,280 --> 00:41:50,800
lowest address for bringing up the

972
00:41:50,800 --> 00:41:53,200
session for determinism i understand why

973
00:41:53,200 --> 00:41:55,520
you did that in the sense of lmtp as an

974
00:41:55,520 --> 00:41:58,319
example uses something very similar

975
00:41:58,319 --> 00:41:59,920
i would suggest that you take a look at

976
00:41:59,920 --> 00:42:02,079
how this impacts using this mechanism on

977
00:42:02,079 --> 00:42:04,880
the network segment that's broadcast or

978
00:42:04,880 --> 00:42:06,640
that can be used for like a route server

979
00:42:06,640 --> 00:42:08,160
i believe

980
00:42:08,160 --> 00:42:10,319
this tie breaking will encourage full

981
00:42:10,319 --> 00:42:11,119
mesh

982
00:42:11,119 --> 00:42:15,800
connection rather than up and spoke

983
00:42:19,040 --> 00:42:20,480
and my last comment for your

984
00:42:20,480 --> 00:42:24,240
presentation is for your encapsulations

985
00:42:24,240 --> 00:42:26,240
you uh make a very strong point about

986
00:42:26,240 --> 00:42:27,839
not wanting to have conflicting multiple

987
00:42:27,839 --> 00:42:29,680
sources of truth

988
00:42:29,680 --> 00:42:31,839
bjp just simply needs to know what the

989
00:42:31,839 --> 00:42:34,720
addresses are on each side

990
00:42:34,720 --> 00:42:36,400
why exactly are you advertising

991
00:42:36,400 --> 00:42:39,760
redundant subnet information

992
00:42:40,720 --> 00:42:43,680
where is it redundant

993
00:42:43,680 --> 00:42:46,160
if you've established a tcp session with

994
00:42:46,160 --> 00:42:48,000
your

995
00:42:48,000 --> 00:42:50,960
l3 nd tcp port

996
00:42:50,960 --> 00:42:52,400
you had enough information to set up

997
00:42:52,400 --> 00:42:55,119
your bgp if it's the same encapsulation

998
00:42:55,119 --> 00:42:57,440
if it's a different encapsulation

999
00:42:57,440 --> 00:43:00,720
ulpc provides ipv6 address

1000
00:43:00,720 --> 00:43:02,880
you have that provisioned locally

1001
00:43:02,880 --> 00:43:04,079
you don't need to be told about it from

1002
00:43:04,079 --> 00:43:06,720
the remote side

1003
00:43:09,920 --> 00:43:11,440
the remotes

1004
00:43:11,440 --> 00:43:14,240
i'm in the encapsulations the other side

1005
00:43:14,240 --> 00:43:15,760
could have given me

1006
00:43:15,760 --> 00:43:18,160
multiple

1007
00:43:18,160 --> 00:43:21,280
ipv4 addresses for example

1008
00:43:21,280 --> 00:43:25,599
which one does it want me to use

1009
00:43:25,599 --> 00:43:29,680
that's part of your uopc for bjp

1010
00:43:32,319 --> 00:43:33,839
no

1011
00:43:33,839 --> 00:43:35,200
right it's it

1012
00:43:35,200 --> 00:43:37,040
in ulpc

1013
00:43:37,040 --> 00:43:39,599
the other side could have said

1014
00:43:39,599 --> 00:43:44,640
here are two ipv4 addresses on my side

1015
00:43:44,640 --> 00:43:47,280
a primary and a secondary

1016
00:43:47,280 --> 00:43:48,640
and then

1017
00:43:48,640 --> 00:43:52,160
at ulpc the other side can say hey

1018
00:43:52,160 --> 00:43:54,240
here's the one i want you to use and it

1019
00:43:54,240 --> 00:43:56,240
could have been the secondary

1020
00:43:56,240 --> 00:43:59,680
or it could have been a loopback

1021
00:44:00,079 --> 00:44:02,400
right your bgp state is the address you

1022
00:44:02,400 --> 00:44:03,920
want to use

1023
00:44:03,920 --> 00:44:07,200
why do you need to know the subnet

1024
00:44:07,200 --> 00:44:10,960
oh pardon me you're just saying

1025
00:44:10,960 --> 00:44:12,880
prefix len

1026
00:44:12,880 --> 00:44:14,480
no this is not about the prefix link

1027
00:44:14,480 --> 00:44:16,640
inside the old pc

1028
00:44:16,640 --> 00:44:18,640
if you receive a uopc message as you see

1029
00:44:18,640 --> 00:44:20,640
on the screen with your ipv4 peering

1030
00:44:20,640 --> 00:44:22,160
address

1031
00:44:22,160 --> 00:44:24,480
that's sufficient information for you as

1032
00:44:24,480 --> 00:44:26,079
the receiver of this

1033
00:44:26,079 --> 00:44:28,480
to look at your routing table

1034
00:44:28,480 --> 00:44:31,200
and to choose what outgoing interface

1035
00:44:31,200 --> 00:44:34,160
to use to reach this

1036
00:44:34,160 --> 00:44:36,079
if it's a different encapsulation let's

1037
00:44:36,079 --> 00:44:37,280
say it's a

1038
00:44:37,280 --> 00:44:40,880
discovered over v4

1039
00:44:40,880 --> 00:44:44,560
and you have a v6 uopc

1040
00:44:44,560 --> 00:44:46,640
if you don't have a local

1041
00:44:46,640 --> 00:44:48,880
v6 address you don't care what the

1042
00:44:48,880 --> 00:44:50,480
remote size address is going to be

1043
00:44:50,480 --> 00:44:52,720
you're going to make your choice locally

1044
00:44:52,720 --> 00:44:54,400
these considerations are exactly the

1045
00:44:54,400 --> 00:44:58,560
same as ipa address selection for v6

1046
00:45:02,000 --> 00:45:04,480
can we continue offline because we know

1047
00:45:04,480 --> 00:45:06,720
let's not waste people it's time with my

1048
00:45:06,720 --> 00:45:09,680
not understanding

1049
00:45:09,760 --> 00:45:11,599
okay in that case uh we're done with

1050
00:45:11,599 --> 00:45:13,680
your presentation and we're moving to

1051
00:45:13,680 --> 00:45:15,119
the uh

1052
00:45:15,119 --> 00:45:16,800
discussion about how we move forward i'm

1053
00:45:16,800 --> 00:45:20,319
gonna go back to the chair slides

1054
00:45:23,760 --> 00:45:26,160
we've scheduled some amount of time

1055
00:45:26,160 --> 00:45:28,319
you know beyond this but i think we only

1056
00:45:28,319 --> 00:45:31,560
need the moment

1057
00:45:33,680 --> 00:45:34,480
so

1058
00:45:34,480 --> 00:45:36,480
for bhp auto configuration this was our

1059
00:45:36,480 --> 00:45:38,720
intent on how to move forward

1060
00:45:38,720 --> 00:45:40,720
the original plan that we had

1061
00:45:40,720 --> 00:45:43,359
was to you know start uh the questions

1062
00:45:43,359 --> 00:45:45,839
after we had uh the january interim that

1063
00:45:45,839 --> 00:45:49,119
we've had our presentation now

1064
00:45:49,119 --> 00:45:52,400
so where does this move us

1065
00:45:52,400 --> 00:45:54,640
originally when we had only three uh

1066
00:45:54,640 --> 00:45:56,400
proposals on the table

1067
00:45:56,400 --> 00:45:57,760
the questions that we're going to be

1068
00:45:57,760 --> 00:45:59,839
going to the idr list about auto

1069
00:45:59,839 --> 00:46:03,200
configuration for adopting a solution

1070
00:46:03,200 --> 00:46:05,359
with question number one

1071
00:46:05,359 --> 00:46:07,520
what layer did we want to actually have

1072
00:46:07,520 --> 00:46:10,960
no our solution work at

1073
00:46:11,200 --> 00:46:13,599
and the option could be you know layer

1074
00:46:13,599 --> 00:46:16,000
two layer three or potentially a

1075
00:46:16,000 --> 00:46:18,640
solution for each

1076
00:46:18,640 --> 00:46:20,079
once uh the question has been answered

1077
00:46:20,079 --> 00:46:21,760
about which layer we wanted

1078
00:46:21,760 --> 00:46:25,680
what proposal we'd like to take for it

1079
00:46:25,680 --> 00:46:28,560
the l3nd discussions have motivated us

1080
00:46:28,560 --> 00:46:30,240
to ask additional questions a part of

1081
00:46:30,240 --> 00:46:33,200
the adoption call that we'll be issuing

1082
00:46:33,200 --> 00:46:34,960
and that's specifically what security

1083
00:46:34,960 --> 00:46:36,560
solution are we desiring for our

1084
00:46:36,560 --> 00:46:38,400
protocol

1085
00:46:38,400 --> 00:46:40,560
now a certificate's an important thing

1086
00:46:40,560 --> 00:46:42,000
or is a shared secret you know

1087
00:46:42,000 --> 00:46:44,560
sufficient

1088
00:46:45,040 --> 00:46:46,720
mostly motivated by

1089
00:46:46,720 --> 00:46:48,560
uh whether or not we're using security

1090
00:46:48,560 --> 00:46:51,200
and to some extent extensibility

1091
00:46:51,200 --> 00:46:54,640
do we require reliable transport or not

1092
00:46:54,640 --> 00:46:56,480
and it's important to note that as an

1093
00:46:56,480 --> 00:46:59,200
example l3dl does have its own transport

1094
00:46:59,200 --> 00:47:03,040
mechanism which is not tcp

1095
00:47:03,599 --> 00:47:04,960
so i'm going to pause here briefly to

1096
00:47:04,960 --> 00:47:06,400
see if there's any questions about how

1097
00:47:06,400 --> 00:47:08,000
we move forward on the adoption calls

1098
00:47:08,000 --> 00:47:09,680
and we'll be taking this up you know

1099
00:47:09,680 --> 00:47:12,560
after ietf

1100
00:47:23,760 --> 00:47:24,800
okay

1101
00:47:24,800 --> 00:47:26,880
if there are no further questions

1102
00:47:26,880 --> 00:47:29,200
now this ends our portion covering uh hp

1103
00:47:29,200 --> 00:47:31,440
auto configuration

1104
00:47:31,440 --> 00:47:33,119
actually i see that desi has entered the

1105
00:47:33,119 --> 00:47:35,359
queue

1106
00:47:37,280 --> 00:47:40,079
yes so uh

1107
00:47:40,079 --> 00:47:42,480
you're going to this is ac from cisco

1108
00:47:42,480 --> 00:47:44,240
systems you're going to

1109
00:47:44,240 --> 00:47:46,400
ask all these questions

1110
00:47:46,400 --> 00:47:49,359
like generically or for each

1111
00:47:49,359 --> 00:47:52,480
and i mean these questions and then take

1112
00:47:52,480 --> 00:47:55,520
the results of that

1113
00:47:55,520 --> 00:47:57,599
uh

1114
00:47:57,599 --> 00:48:00,240
and apply it to the

1115
00:48:00,240 --> 00:48:01,440
i guess there's

1116
00:48:01,440 --> 00:48:04,480
uh five odd mechanisms for bgp auto

1117
00:48:04,480 --> 00:48:07,480
discovery

1118
00:48:09,839 --> 00:48:11,359
i don't understand the move forward

1119
00:48:11,359 --> 00:48:14,319
exactly i mean

1120
00:48:15,680 --> 00:48:19,799
so did you care to respond to that

1121
00:48:20,079 --> 00:48:22,800
uh i'll let you go ahead and respond to

1122
00:48:22,800 --> 00:48:25,440
that i had a question

1123
00:48:25,440 --> 00:48:28,480
for the lsvr folks so

1124
00:48:28,480 --> 00:48:29,760
uh okay

1125
00:48:29,760 --> 00:48:31,280
if if you want to respond to it

1126
00:48:31,280 --> 00:48:32,839
otherwise i will

1127
00:48:32,839 --> 00:48:36,079
but yeah my brief response ac is that

1128
00:48:36,079 --> 00:48:37,680
this is the set of properties we want to

1129
00:48:37,680 --> 00:48:38,720
pull for

1130
00:48:38,720 --> 00:48:40,960
and this covers the full spectrum

1131
00:48:40,960 --> 00:48:42,480
there's currently four candidates that

1132
00:48:42,480 --> 00:48:43,359
are

1133
00:48:43,359 --> 00:48:44,960
requesting adoption

1134
00:48:44,960 --> 00:48:49,200
which is uh the lodp one l3dl

1135
00:48:49,200 --> 00:48:50,559
draftminto

1136
00:48:50,559 --> 00:48:53,800
and l3nd

1137
00:49:05,520 --> 00:49:06,960
so

1138
00:49:06,960 --> 00:49:10,960
i see i'll ask listen the question

1139
00:49:10,960 --> 00:49:12,240
we noted

1140
00:49:12,240 --> 00:49:13,839
um

1141
00:49:13,839 --> 00:49:17,680
that these are the questions the

1142
00:49:17,680 --> 00:49:18,800
the

1143
00:49:18,800 --> 00:49:20,960
adoption

1144
00:49:20,960 --> 00:49:22,480
would have but

1145
00:49:22,480 --> 00:49:24,800
normally as you know notice when i send

1146
00:49:24,800 --> 00:49:27,359
out adoption calls i send out a set of

1147
00:49:27,359 --> 00:49:29,280
questions specific

1148
00:49:29,280 --> 00:49:30,720
to the

1149
00:49:30,720 --> 00:49:33,280
particular draft but in these four

1150
00:49:33,280 --> 00:49:34,400
drafts

1151
00:49:34,400 --> 00:49:38,880
some of the questions are inherently

1152
00:49:39,760 --> 00:49:41,040
the same

1153
00:49:41,040 --> 00:49:43,280
so what's going to make more sense

1154
00:49:43,280 --> 00:49:46,400
sending out the questions and then the

1155
00:49:46,400 --> 00:49:48,800
adoption call or adding these as

1156
00:49:48,800 --> 00:49:52,160
questions on every adoption call

1157
00:49:52,160 --> 00:49:54,480
in the end the chairs are going to read

1158
00:49:54,480 --> 00:49:57,200
all of the adoption calls and figure out

1159
00:49:57,200 --> 00:49:59,440
what to do so it doesn't matter to us as

1160
00:49:59,440 --> 00:50:00,880
chairs

1161
00:50:00,880 --> 00:50:02,960
do you have any preference as a working

1162
00:50:02,960 --> 00:50:06,280
group member

1163
00:50:12,480 --> 00:50:15,359
i'm not seeing ac jump back in the queue

1164
00:50:15,359 --> 00:50:16,640
so

1165
00:50:16,640 --> 00:50:18,640
folks

1166
00:50:18,640 --> 00:50:20,720
do you have any preference

1167
00:50:20,720 --> 00:50:23,280
on how we do these calls and ask this

1168
00:50:23,280 --> 00:50:25,200
question because maybe you're saying we

1169
00:50:25,200 --> 00:50:26,559
should do

1170
00:50:26,559 --> 00:50:28,880
uh we should adopt all four

1171
00:50:28,880 --> 00:50:30,559
we like

1172
00:50:30,559 --> 00:50:33,599
the two of the layer two because they

1173
00:50:33,599 --> 00:50:36,000
have two different properties we like

1174
00:50:36,000 --> 00:50:38,640
two of the layer three because they have

1175
00:50:38,640 --> 00:50:41,640
properties

1176
00:50:42,800 --> 00:50:45,119
if not

1177
00:50:45,119 --> 00:50:46,960
we'll take our

1178
00:50:46,960 --> 00:50:48,319
dart and

1179
00:50:48,319 --> 00:50:50,079
discuss it as chairs and send out

1180
00:50:50,079 --> 00:50:53,640
adoption calls

1181
00:50:54,000 --> 00:50:56,800
any preference

1182
00:51:04,000 --> 00:51:05,280
if you have further

1183
00:51:05,280 --> 00:51:07,440
inputs please let's take those lists

1184
00:51:07,440 --> 00:51:09,280
otherwise we'll be sending out the

1185
00:51:09,280 --> 00:51:10,800
adoption

1186
00:51:10,800 --> 00:51:14,800
questions sometime after this iedf

1187
00:51:14,800 --> 00:51:16,559
our next item on the

1188
00:51:16,559 --> 00:51:19,040
presentations is an update on the php

1189
00:51:19,040 --> 00:51:23,000
yang model mahesh

1190
00:51:25,440 --> 00:51:26,960
gary did you want to share in room or

1191
00:51:26,960 --> 00:51:28,160
should i share

1192
00:51:28,160 --> 00:51:31,960
um do you want to share

1193
00:51:37,040 --> 00:51:39,200
perfect thank you

1194
00:51:39,200 --> 00:51:41,040
all right um

1195
00:51:41,040 --> 00:51:43,359
this is mahesh jeter nandani and i will

1196
00:51:43,359 --> 00:51:44,160
be

1197
00:51:44,160 --> 00:51:47,200
giving an update on the bgp yang model

1198
00:51:47,200 --> 00:51:49,680
we are at version 13.

1199
00:51:49,680 --> 00:51:52,400
next slide please

1200
00:51:52,400 --> 00:51:53,760
okay

1201
00:51:53,760 --> 00:51:54,880
so

1202
00:51:54,880 --> 00:51:56,800
we have been evaluating the structure of

1203
00:51:56,800 --> 00:51:59,280
the model and we believe at this time

1204
00:51:59,280 --> 00:52:01,359
that it's holding up

1205
00:52:01,359 --> 00:52:03,280
with respect to any

1206
00:52:03,280 --> 00:52:04,480
further

1207
00:52:04,480 --> 00:52:06,960
future extensions that we believe

1208
00:52:06,960 --> 00:52:08,800
are going to come

1209
00:52:08,800 --> 00:52:10,319
for all the changes that are coming to

1210
00:52:10,319 --> 00:52:12,319
bgp so

1211
00:52:12,319 --> 00:52:15,440
uh there is a uh update as far as the l3

1212
00:52:15,440 --> 00:52:17,680
vpn model that i'll cover in a later

1213
00:52:17,680 --> 00:52:19,359
slide

1214
00:52:19,359 --> 00:52:20,400
so

1215
00:52:20,400 --> 00:52:22,400
what are the other changes so the model

1216
00:52:22,400 --> 00:52:24,800
has been updated to match with the

1217
00:52:24,800 --> 00:52:26,800
change we had to make

1218
00:52:26,800 --> 00:52:29,119
for bft yang um

1219
00:52:29,119 --> 00:52:32,079
bft yang was had to be wrapped

1220
00:52:32,079 --> 00:52:35,280
with an rfc 9127 biz

1221
00:52:35,280 --> 00:52:37,359
and those changes have been incorporated

1222
00:52:37,359 --> 00:52:39,680
into the model

1223
00:52:39,680 --> 00:52:41,680
support for bgp med

1224
00:52:41,680 --> 00:52:44,800
considerations has been added

1225
00:52:44,800 --> 00:52:46,400
send community

1226
00:52:46,400 --> 00:52:49,040
which was previously an inum is now an

1227
00:52:49,040 --> 00:52:50,400
identity

1228
00:52:50,400 --> 00:52:52,319
and therefore will allow for

1229
00:52:52,319 --> 00:52:53,920
extensibility

1230
00:52:53,920 --> 00:52:56,160
as we add other types of communities

1231
00:52:56,160 --> 00:52:58,880
including white communities

1232
00:52:58,880 --> 00:53:02,319
um and the last major update in the

1233
00:53:02,319 --> 00:53:03,280
model

1234
00:53:03,280 --> 00:53:06,400
was the addition of large communities

1235
00:53:06,400 --> 00:53:09,280
next slide please

1236
00:53:09,599 --> 00:53:11,760
so that was the base model now as far as

1237
00:53:11,760 --> 00:53:14,240
the policy model itself is concerned we

1238
00:53:14,240 --> 00:53:16,640
have added support for the next hop

1239
00:53:16,640 --> 00:53:18,880
both for match and a set

1240
00:53:18,880 --> 00:53:19,760
so

1241
00:53:19,760 --> 00:53:20,800
um

1242
00:53:20,800 --> 00:53:23,680
same thing for large community set

1243
00:53:23,680 --> 00:53:26,160
and then we have gone ahead and also

1244
00:53:26,160 --> 00:53:29,440
added an example for what

1245
00:53:29,440 --> 00:53:31,680
that configuration might look like using

1246
00:53:31,680 --> 00:53:35,359
this particular bgp policy model

1247
00:53:35,359 --> 00:53:38,000
next slide please

1248
00:53:38,000 --> 00:53:40,960
okay so what are some of the outstanding

1249
00:53:40,960 --> 00:53:43,599
issues by the way we have a running list

1250
00:53:43,599 --> 00:53:45,040
of all the issues

1251
00:53:45,040 --> 00:53:47,280
at this particular github link if you

1252
00:53:47,280 --> 00:53:48,960
ever want to go there

1253
00:53:48,960 --> 00:53:49,920
and

1254
00:53:49,920 --> 00:53:51,839
you're free to add to those list of

1255
00:53:51,839 --> 00:53:53,440
issues if you feel

1256
00:53:53,440 --> 00:53:56,559
it's not being covered adequately here

1257
00:53:56,559 --> 00:53:58,880
on the list

1258
00:53:58,880 --> 00:54:01,280
some of the major issues and this by no

1259
00:54:01,280 --> 00:54:04,160
means is an exhaustive list

1260
00:54:04,160 --> 00:54:05,760
there is some discussion around the

1261
00:54:05,760 --> 00:54:08,720
maintenance of extended communities

1262
00:54:08,720 --> 00:54:10,880
as an eye on a module

1263
00:54:10,880 --> 00:54:13,680
um so that's going on

1264
00:54:13,680 --> 00:54:16,559
extended community type devs

1265
00:54:16,559 --> 00:54:17,599
it

1266
00:54:17,599 --> 00:54:19,920
somewhat overlaps with the definition in

1267
00:54:19,920 --> 00:54:22,319
rfc 8294

1268
00:54:22,319 --> 00:54:23,280
um

1269
00:54:23,280 --> 00:54:26,079
and the generic community types have the

1270
00:54:26,079 --> 00:54:27,440
formats

1271
00:54:27,440 --> 00:54:29,680
um as described

1272
00:54:29,680 --> 00:54:31,680
but our apps uh

1273
00:54:31,680 --> 00:54:34,800
what is missing is the types of type so

1274
00:54:34,800 --> 00:54:35,760
um

1275
00:54:35,760 --> 00:54:38,720
so that's one other issue

1276
00:54:38,720 --> 00:54:39,440
the

1277
00:54:39,440 --> 00:54:42,400
no s path regex issue

1278
00:54:42,400 --> 00:54:44,799
we tended to believe that at this time

1279
00:54:44,799 --> 00:54:46,799
it's vendor specific

1280
00:54:46,799 --> 00:54:47,839
and

1281
00:54:47,839 --> 00:54:50,079
we are inclined to leave it as a string

1282
00:54:50,079 --> 00:54:51,599
because it's hard to

1283
00:54:51,599 --> 00:54:54,880
come up with a regex for it

1284
00:54:54,880 --> 00:54:58,319
uh finally replace pre-s in the s-path

1285
00:54:58,319 --> 00:55:00,720
uh so again the semantics are different

1286
00:55:00,720 --> 00:55:02,640
between vendors

1287
00:55:02,640 --> 00:55:04,960
hard to program it or put it in the

1288
00:55:04,960 --> 00:55:06,640
model

1289
00:55:06,640 --> 00:55:07,520
um

1290
00:55:07,520 --> 00:55:10,000
next slide please

1291
00:55:10,000 --> 00:55:12,559
so what are the next steps um

1292
00:55:12,559 --> 00:55:14,480
we believe at this time at least the

1293
00:55:14,480 --> 00:55:16,400
structural issues have been addressed in

1294
00:55:16,400 --> 00:55:17,680
the model

1295
00:55:17,680 --> 00:55:18,839
um

1296
00:55:18,839 --> 00:55:22,160
as uh the other part is the

1297
00:55:22,160 --> 00:55:24,480
how it interfaces with the other

1298
00:55:24,480 --> 00:55:27,760
pertinent yang modules in particular bft

1299
00:55:27,760 --> 00:55:30,319
tcp and the keychain module

1300
00:55:30,319 --> 00:55:32,799
we have gone through and examined how we

1301
00:55:32,799 --> 00:55:35,440
interface with them

1302
00:55:35,440 --> 00:55:38,319
converted a reference to keychain as a

1303
00:55:38,319 --> 00:55:40,559
reference only so

1304
00:55:40,559 --> 00:55:43,280
that's all we need to do in the bgp is

1305
00:55:43,280 --> 00:55:45,040
provide a reference to the keychain that

1306
00:55:45,040 --> 00:55:47,839
is going to be used

1307
00:55:47,839 --> 00:55:49,440
the bfd interface

1308
00:55:49,440 --> 00:55:51,599
cleanup that we talked about with

1309
00:55:51,599 --> 00:55:55,040
respect to rfc manual 27 biz

1310
00:55:55,040 --> 00:55:56,880
and then the

1311
00:55:56,880 --> 00:55:59,760
uh open issue is with the tcpao

1312
00:55:59,760 --> 00:56:02,720
configuration and that's still something

1313
00:56:02,720 --> 00:56:04,640
that needs to be resolved but it needs

1314
00:56:04,640 --> 00:56:08,319
to be resolved between the tcp model

1315
00:56:08,319 --> 00:56:10,480
and the keychain model not something the

1316
00:56:10,480 --> 00:56:13,599
bgp model is directly impacted

1317
00:56:13,599 --> 00:56:15,599
as i said the only thing it needs to

1318
00:56:15,599 --> 00:56:18,559
provide is the keychain reference

1319
00:56:18,559 --> 00:56:19,760
and then

1320
00:56:19,760 --> 00:56:21,200
the final item

1321
00:56:21,200 --> 00:56:23,440
the l3 vpn yang model

1322
00:56:23,440 --> 00:56:25,280
so we did

1323
00:56:25,280 --> 00:56:27,440
look at the l3 vpn model

1324
00:56:27,440 --> 00:56:29,280
we have suggested some changes that

1325
00:56:29,280 --> 00:56:31,359
would be needed in that model

1326
00:56:31,359 --> 00:56:33,520
to if it's going to augment the bgp

1327
00:56:33,520 --> 00:56:34,640
model

1328
00:56:34,640 --> 00:56:37,119
and then also we'll

1329
00:56:37,119 --> 00:56:39,119
we have an example

1330
00:56:39,119 --> 00:56:40,880
that works with the

1331
00:56:40,880 --> 00:56:43,200
provided changes in the model

1332
00:56:43,200 --> 00:56:45,359
so that's an again again an example of

1333
00:56:45,359 --> 00:56:46,319
how

1334
00:56:46,319 --> 00:56:49,359
somebody could use the bgp model

1335
00:56:49,359 --> 00:56:51,040
for uh

1336
00:56:51,040 --> 00:56:53,920
and augment it for their purposes like

1337
00:56:53,920 --> 00:56:55,599
l3 vpn

1338
00:56:55,599 --> 00:56:56,839
right uh

1339
00:56:56,839 --> 00:56:59,760
so the only other thing that i would say

1340
00:56:59,760 --> 00:57:00,640
is

1341
00:57:00,640 --> 00:57:01,440
we

1342
00:57:01,440 --> 00:57:02,240
uh

1343
00:57:02,240 --> 00:57:04,160
have the set of issues that i have

1344
00:57:04,160 --> 00:57:05,599
identified

1345
00:57:05,599 --> 00:57:08,720
here um and the exhaustive list to go

1346
00:57:08,720 --> 00:57:10,880
through at which point i believe we

1347
00:57:10,880 --> 00:57:12,480
should be ready

1348
00:57:12,480 --> 00:57:13,440
for

1349
00:57:13,440 --> 00:57:16,319
getting the draft through law school

1350
00:57:16,319 --> 00:57:18,400
questions

1351
00:57:18,400 --> 00:57:21,280
jeff is in the queue

1352
00:57:22,160 --> 00:57:24,319
jeff

1353
00:57:24,319 --> 00:57:26,559
i should not be in the heel ben you have

1354
00:57:26,559 --> 00:57:29,040
the microphone

1355
00:57:32,240 --> 00:57:33,839
hi there um

1356
00:57:33,839 --> 00:57:36,799
on the question of the airs path rejects

1357
00:57:36,799 --> 00:57:38,319
us um

1358
00:57:38,319 --> 00:57:40,720
i'm currently working on a tool

1359
00:57:40,720 --> 00:57:44,240
to evaluate the reget syntax that

1360
00:57:44,240 --> 00:57:46,559
appears in rpsl

1361
00:57:46,559 --> 00:57:49,119
and as part of doing that i've got a an

1362
00:57:49,119 --> 00:57:51,680
astr passer and an ast and i'm in the

1363
00:57:51,680 --> 00:57:53,280
process of turning that into an

1364
00:57:53,280 --> 00:57:54,400
evaluation

1365
00:57:54,400 --> 00:57:56,720
implementation to kind of render it down

1366
00:57:56,720 --> 00:58:00,160
to the vendor-specific flavors okay um i

1367
00:58:00,160 --> 00:58:01,359
suspect there's probably a fair amount

1368
00:58:01,359 --> 00:58:03,119
of overlap in terms of what i'm doing

1369
00:58:03,119 --> 00:58:04,799
and what you would need to do to make

1370
00:58:04,799 --> 00:58:07,599
that something better than just a vendor

1371
00:58:07,599 --> 00:58:09,760
specific blob yeah so i'm i'm happy to

1372
00:58:09,760 --> 00:58:12,000
work on that with you if you'd like sure

1373
00:58:12,000 --> 00:58:14,559
definitely

1374
00:58:14,799 --> 00:58:17,760
you can bring it in the form of a get a

1375
00:58:17,760 --> 00:58:19,119
push up

1376
00:58:19,119 --> 00:58:22,680
request or

1377
00:58:25,119 --> 00:58:28,359
he had the microphone

1378
00:58:39,040 --> 00:58:42,319
so do you have a question

1379
00:58:42,799 --> 00:58:46,160
no i don't i have a problem with medical

1380
00:58:46,160 --> 00:58:48,280
i'm trying to fix thank

1381
00:58:48,280 --> 00:58:51,119
you thank you okay thanks thank you

1382
00:58:51,119 --> 00:58:52,400
mahesh

1383
00:58:52,400 --> 00:58:55,760
okay so with the yang update being done

1384
00:58:55,760 --> 00:58:58,559
our next portion of track is moving into

1385
00:58:58,559 --> 00:59:01,599
the php routes with color discussion

1386
00:59:01,599 --> 00:59:03,359
we have a brief item to

1387
00:59:03,359 --> 00:59:06,240
present from the slides for the chairs

1388
00:59:06,240 --> 00:59:07,839
and then after that we'll be moving into

1389
00:59:07,839 --> 00:59:11,440
the presentation for bhp car

1390
00:59:14,240 --> 00:59:16,399
so

1391
00:59:16,559 --> 00:59:18,480
as was mentioned earlier we had a very

1392
00:59:18,480 --> 00:59:21,359
energetic interim on january 24th that

1393
00:59:21,359 --> 00:59:23,040
generated a lot of discussion back and

1394
00:59:23,040 --> 00:59:25,920
forth and the discussion was as we were

1395
00:59:25,920 --> 00:59:27,920
hoping from the interim far more

1396
00:59:27,920 --> 00:59:29,520
interesting than the presentations were

1397
00:59:29,520 --> 00:59:31,200
in some respects

1398
00:59:31,200 --> 00:59:33,839
and part of the back and forth now led

1399
00:59:33,839 --> 00:59:35,839
to the observation that you know we're

1400
00:59:35,839 --> 00:59:37,599
not necessarily talking about the same

1401
00:59:37,599 --> 00:59:39,440
things in some respects between your car

1402
00:59:39,440 --> 00:59:41,280
and ct

1403
00:59:41,280 --> 00:59:44,400
i did a write up that is linked in the

1404
00:59:44,400 --> 00:59:45,839
top of the slides here on the idr

1405
00:59:45,839 --> 00:59:47,359
mailing list you're encouraged to go

1406
00:59:47,359 --> 00:59:50,319
read that and please respond

1407
00:59:50,319 --> 00:59:52,400
especially the authors to make sure that

1408
00:59:52,400 --> 00:59:54,079
the assessment is no fair to your

1409
00:59:54,079 --> 00:59:56,400
proposal

1410
00:59:56,400 --> 00:59:58,400
the motivations for the questions was to

1411
00:59:58,400 --> 01:00:00,720
understand what those points of dispute

1412
01:00:00,720 --> 01:00:02,720
were and try to clarify what they

1413
01:00:02,720 --> 01:00:04,240
actually mean

1414
01:00:04,240 --> 01:00:06,000
and the two questions that got

1415
01:00:06,000 --> 01:00:07,599
percolated to the mailing list

1416
01:00:07,599 --> 01:00:09,920
effectively were number one

1417
01:00:09,920 --> 01:00:11,520
how does route resolution work for your

1418
01:00:11,520 --> 01:00:12,720
feature

1419
01:00:12,720 --> 01:00:15,119
and number two you know how does route

1420
01:00:15,119 --> 01:00:17,599
origination and propagation it work

1421
01:00:17,599 --> 01:00:18,799
and

1422
01:00:18,799 --> 01:00:20,799
it's our assessment in the

1423
01:00:20,799 --> 01:00:23,119
response that you see at the top

1424
01:00:23,119 --> 01:00:25,920
that for each of these proposals

1425
01:00:25,920 --> 01:00:28,079
the functionality in terms of what can

1426
01:00:28,079 --> 01:00:30,400
be accomplished by the protocol format

1427
01:00:30,400 --> 01:00:31,760
and how it's actually carried through

1428
01:00:31,760 --> 01:00:33,040
bgv

1429
01:00:33,040 --> 01:00:35,200
are comparable they're doing roughly the

1430
01:00:35,200 --> 01:00:36,960
same things

1431
01:00:36,960 --> 01:00:39,040
the thing that is absolutely also no

1432
01:00:39,040 --> 01:00:42,000
clear from the discussions is that they

1433
01:00:42,000 --> 01:00:44,000
certainly know in terms of mri format

1434
01:00:44,000 --> 01:00:45,760
and how the information is carried

1435
01:00:45,760 --> 01:00:48,000
are not identical and even though they

1436
01:00:48,000 --> 01:00:51,040
have similar functional overlap

1437
01:00:51,040 --> 01:00:52,400
it's

1438
01:00:52,400 --> 01:00:54,559
clear that each proposal is trying to

1439
01:00:54,559 --> 01:00:56,720
bring a specific operational model to

1440
01:00:56,720 --> 01:00:59,280
how things work so that will i think be

1441
01:00:59,280 --> 01:01:01,040
part of our longer discussion about you

1442
01:01:01,040 --> 01:01:03,040
know adoption

1443
01:01:03,040 --> 01:01:04,240
and

1444
01:01:04,240 --> 01:01:06,160
one of the things that i encourage the

1445
01:01:06,160 --> 01:01:08,480
presenters for the next set of slots to

1446
01:01:08,480 --> 01:01:10,559
discuss is you know the operational

1447
01:01:10,559 --> 01:01:12,960
considerations for what your mechanism

1448
01:01:12,960 --> 01:01:15,040
looks like and you know what does your

1449
01:01:15,040 --> 01:01:19,200
format specifically bring the operators

1450
01:01:19,200 --> 01:01:21,359
aside from all these details the largest

1451
01:01:21,359 --> 01:01:23,119
you know remaining functional comparison

1452
01:01:23,119 --> 01:01:25,200
point that we have between

1453
01:01:25,200 --> 01:01:29,359
a car and ct this car

1454
01:01:29,359 --> 01:01:32,799
does add a idea to bgp of

1455
01:01:32,799 --> 01:01:35,119
carrying optional components as part of

1456
01:01:35,119 --> 01:01:36,160
lri

1457
01:01:36,160 --> 01:01:38,240
to try to decouple the formatting that

1458
01:01:38,240 --> 01:01:40,160
we have from bgblu where we carry a

1459
01:01:40,160 --> 01:01:42,240
label stack that is non-key

1460
01:01:42,240 --> 01:01:44,240
but isn't explicitly called out as part

1461
01:01:44,240 --> 01:01:46,720
of the structure in the format

1462
01:01:46,720 --> 01:01:48,559
so that will be i think one of more

1463
01:01:48,559 --> 01:01:50,839
interesting discussion points as we move

1464
01:01:50,839 --> 01:01:53,040
forward it's important to note that both

1465
01:01:53,040 --> 01:01:55,119
the current ct authors have adopted

1466
01:01:55,119 --> 01:01:57,200
requested working group adoption so

1467
01:01:57,200 --> 01:01:59,359
we'll be figuring out as part of this

1468
01:01:59,359 --> 01:02:01,760
presentation set and

1469
01:02:01,760 --> 01:02:03,839
group mailing list discussion

1470
01:02:03,839 --> 01:02:05,680
uh how do we want to actually proceed

1471
01:02:05,680 --> 01:02:07,440
with the adoption questions that has not

1472
01:02:07,440 --> 01:02:10,480
been settled at this point

1473
01:02:11,039 --> 01:02:14,720
sue uh did as part of uh her analysis

1474
01:02:14,720 --> 01:02:15,520
uh

1475
01:02:15,520 --> 01:02:18,079
effectively add on three point uh two

1476
01:02:18,079 --> 01:02:21,760
additional questions uh question three

1477
01:02:21,760 --> 01:02:23,520
sort of hits the

1478
01:02:23,520 --> 01:02:24,720
things that were motivated by our

1479
01:02:24,720 --> 01:02:27,200
discussion in terms of route

1480
01:02:27,200 --> 01:02:29,200
diversity and local convergence

1481
01:02:29,200 --> 01:02:30,880
properties

1482
01:02:30,880 --> 01:02:33,599
so a point that the car authors have

1483
01:02:33,599 --> 01:02:35,359
brought up repeatedly

1484
01:02:35,359 --> 01:02:37,039
is you know they believe that there's

1485
01:02:37,039 --> 01:02:39,839
local convergence issues um

1486
01:02:39,839 --> 01:02:42,079
the question sue has is is there really

1487
01:02:42,079 --> 01:02:44,160
a local convergent issue with ct when

1488
01:02:44,160 --> 01:02:46,720
the same rd is used care has raised

1489
01:02:46,720 --> 01:02:49,839
himself that the ct document is not

1490
01:02:49,839 --> 01:02:52,240
necessarily clear in some respects about

1491
01:02:52,240 --> 01:02:54,160
when you would want to use you know

1492
01:02:54,160 --> 01:02:57,680
distinct rds versus

1493
01:02:57,680 --> 01:03:00,160
ones that are shared in many places

1494
01:03:00,160 --> 01:03:01,920
and the text there could actually be

1495
01:03:01,920 --> 01:03:03,920
cleaned up a little bit

1496
01:03:03,920 --> 01:03:06,160
and the question to know towards uh

1497
01:03:06,160 --> 01:03:07,599
both these present

1498
01:03:07,599 --> 01:03:11,520
proposals is how integral to convergence

1499
01:03:11,520 --> 01:03:13,280
is aigp

1500
01:03:13,280 --> 01:03:14,559
so that would be a useful thing to

1501
01:03:14,559 --> 01:03:16,000
discuss as part of the main list it will

1502
01:03:16,000 --> 01:03:18,880
kick off a specific thread there

1503
01:03:18,880 --> 01:03:19,760
and

1504
01:03:19,760 --> 01:03:21,920
in terms of fallback uh

1505
01:03:21,920 --> 01:03:23,520
you know can the different proposals

1506
01:03:23,520 --> 01:03:25,280
actually handle specific sets of

1507
01:03:25,280 --> 01:03:27,760
fallback the car document calls out

1508
01:03:27,760 --> 01:03:29,520
explicitly what the fallback order

1509
01:03:29,520 --> 01:03:30,559
should be

1510
01:03:30,559 --> 01:03:33,200
ct does not and it may be worth the ct

1511
01:03:33,200 --> 01:03:34,559
authors you know adding that as part of

1512
01:03:34,559 --> 01:03:37,440
their discussion points

1513
01:03:37,440 --> 01:03:39,760
so at this point we will be moving into

1514
01:03:39,760 --> 01:03:40,880
the

1515
01:03:40,880 --> 01:03:44,119
car presentation

1516
01:03:50,720 --> 01:03:54,439
enjoy it you have the microphone

1517
01:04:33,839 --> 01:04:35,839
so we see that don jai is attempting to

1518
01:04:35,839 --> 01:04:37,680
share a microphone and it's not sticking

1519
01:04:37,680 --> 01:04:41,078
for some reason

1520
01:04:49,599 --> 01:04:51,200
incidentally this is why we ask people

1521
01:04:51,200 --> 01:04:52,400
to test their microphones at the start

1522
01:04:52,400 --> 01:04:55,640
of the session

1523
01:05:01,359 --> 01:05:03,760
i'll give him one moment to try again or

1524
01:05:03,760 --> 01:05:05,200
to respond and text us to what's going

1525
01:05:05,200 --> 01:05:06,480
on

1526
01:05:06,480 --> 01:05:08,000
the two options for moving forward if

1527
01:05:08,000 --> 01:05:09,599
there continue to be microphone issues

1528
01:05:09,599 --> 01:05:11,119
is alternate present

1529
01:05:11,119 --> 01:05:13,119
presenter you see that swadesh is on the

1530
01:05:13,119 --> 01:05:14,799
call as well

1531
01:05:14,799 --> 01:05:17,520
or we can try again after ct is given

1532
01:05:17,520 --> 01:05:20,160
their presentation

1533
01:05:21,520 --> 01:05:23,599
jeff have you handed

1534
01:05:23,599 --> 01:05:26,640
uh dj the the slides

1535
01:05:26,640 --> 01:05:28,559
control

1536
01:05:28,559 --> 01:05:30,640
i have not uh the microphone we can hear

1537
01:05:30,640 --> 01:05:31,680
you now

1538
01:05:31,680 --> 01:05:32,960
okay great i had to use a different

1539
01:05:32,960 --> 01:05:35,680
browser um i got your comment i thought

1540
01:05:35,680 --> 01:05:37,760
i had checked it but it looks like it

1541
01:05:37,760 --> 01:05:39,839
didn't work it didn't stick

1542
01:05:39,839 --> 01:05:41,839
okay you have the presentation

1543
01:05:41,839 --> 01:05:43,599
sure um thanks jeff

1544
01:05:43,599 --> 01:05:46,000
um hi everybody i'm daniel rao from

1545
01:05:46,000 --> 01:05:49,039
cisco and i'll be covering uh color bgp

1546
01:05:49,039 --> 01:05:50,960
color aware routing once more next slide

1547
01:05:50,960 --> 01:05:53,200
please

1548
01:05:53,920 --> 01:05:56,480
so bgp color routing extends bgp to

1549
01:05:56,480 --> 01:05:58,000
establish internet developer ads to a

1550
01:05:58,000 --> 01:06:00,400
destination um you know we

1551
01:06:00,400 --> 01:06:01,920
indicated before intent is signaled

1552
01:06:01,920 --> 01:06:03,680
using the color construct because it's

1553
01:06:03,680 --> 01:06:05,920
already established you know defined as

1554
01:06:05,920 --> 01:06:08,079
part of the sr policy architecture

1555
01:06:08,079 --> 01:06:09,839
what this means is on a bgp service

1556
01:06:09,839 --> 01:06:12,319
route that for example in l3 vpn route

1557
01:06:12,319 --> 01:06:14,559
that requests a particular intent it's

1558
01:06:14,559 --> 01:06:16,240
indicated by using the bgp color

1559
01:06:16,240 --> 01:06:20,240
external community next slide please

1560
01:06:20,400 --> 01:06:23,680
what bgp colorado routing does now is it

1561
01:06:23,680 --> 01:06:25,599
actually sets up the

1562
01:06:25,599 --> 01:06:28,480
transport you know path for a given

1563
01:06:28,480 --> 01:06:30,880
endpoint but for a given color this

1564
01:06:30,880 --> 01:06:34,559
allows multiple routers to be you know

1565
01:06:34,559 --> 01:06:37,200
used in the network uh for different

1566
01:06:37,200 --> 01:06:39,359
intents for the same destination as you

1567
01:06:39,359 --> 01:06:41,839
see here the endpoint for the endpoint

1568
01:06:41,839 --> 01:06:42,960
e3

1569
01:06:42,960 --> 01:06:45,920
then at an ingress point a service route

1570
01:06:45,920 --> 01:06:48,079
needs to be then steered or you know the

1571
01:06:48,079 --> 01:06:49,760
traffic for it needs to be smeared over

1572
01:06:49,760 --> 01:06:50,880
a particular

1573
01:06:50,880 --> 01:06:52,079
uh intent

1574
01:06:52,079 --> 01:06:54,079
you know aware path

1575
01:06:54,079 --> 01:06:56,720
the steering or the resolution uses not

1576
01:06:56,720 --> 01:06:58,640
just the bgp next top but also the color

1577
01:06:58,640 --> 01:06:59,920
that came in the color extended

1578
01:06:59,920 --> 01:07:02,400
community and then resolves over a bgp

1579
01:07:02,400 --> 01:07:04,559
color out for that color

1580
01:07:04,559 --> 01:07:08,240
um this works for you know any service

1581
01:07:08,240 --> 01:07:10,799
the next slide please

1582
01:07:10,799 --> 01:07:12,799
um the draft you know of course goes

1583
01:07:12,799 --> 01:07:14,559
into a bunch of you know details about

1584
01:07:14,559 --> 01:07:15,920
different aspects we have covered some

1585
01:07:15,920 --> 01:07:17,760
of them before we'll cover a few you

1586
01:07:17,760 --> 01:07:20,240
know again you know for in this call

1587
01:07:20,240 --> 01:07:22,959
next slide please

1588
01:07:23,520 --> 01:07:25,280
um so we are introducing a new

1589
01:07:25,280 --> 01:07:28,319
smartphone bgp because we needed to uh

1590
01:07:28,319 --> 01:07:30,400
signal multiple instances for the same

1591
01:07:30,400 --> 01:07:32,319
prefix it's an operational requirement

1592
01:07:32,319 --> 01:07:34,319
you don't want to burn different ip

1593
01:07:34,319 --> 01:07:35,440
addresses

1594
01:07:35,440 --> 01:07:37,760
you know so you you know have the same

1595
01:07:37,760 --> 01:07:40,000
ip address but you want to different

1596
01:07:40,000 --> 01:07:42,960
routes we use uh you know color

1597
01:07:42,960 --> 01:07:44,319
uh

1598
01:07:44,319 --> 01:07:47,200
now this is defined as a you know

1599
01:07:47,200 --> 01:07:48,079
uh

1600
01:07:48,079 --> 01:07:50,960
evolution of bgplusa which is you know

1601
01:07:50,960 --> 01:07:52,640
being used in the transport networks

1602
01:07:52,640 --> 01:07:53,599
today

1603
01:07:53,599 --> 01:07:57,400
um the

1604
01:07:57,599 --> 01:08:00,079
at the same time we are modernizing uh

1605
01:08:00,079 --> 01:08:02,559
this uh you know the use of this safety

1606
01:08:02,559 --> 01:08:04,799
by you know in bgp car addressing some

1607
01:08:04,799 --> 01:08:07,520
of the limitations that exist with bgp

1608
01:08:07,520 --> 01:08:08,960
at the same time we are maintaining the

1609
01:08:08,960 --> 01:08:10,640
functional and operational consistency

1610
01:08:10,640 --> 01:08:12,960
of bgp and you uh in terms of the route

1611
01:08:12,960 --> 01:08:15,440
processing you know the best path

1612
01:08:15,440 --> 01:08:18,080
um other things as we'll you know see uh

1613
01:08:18,080 --> 01:08:19,839
along the next slide and illustration

1614
01:08:19,839 --> 01:08:22,158
below kind of you know gives a sense of

1615
01:08:22,158 --> 01:08:24,238
how a car route looks with respect to a

1616
01:08:24,238 --> 01:08:26,960
bgplu route we find no reason to use any

1617
01:08:26,960 --> 01:08:29,040
complex vpn constructs or machinery at

1618
01:08:29,040 --> 01:08:30,560
every transport dock to achieve this

1619
01:08:30,560 --> 01:08:34,319
purpose uh next slide please

1620
01:08:35,040 --> 01:08:35,920
um

1621
01:08:35,920 --> 01:08:37,839
this is the proposal for the car llri

1622
01:08:37,839 --> 01:08:39,839
it's it's a simple extension to uh you

1623
01:08:39,839 --> 01:08:42,158
know existing uh vgp route which in

1624
01:08:42,158 --> 01:08:43,600
addition to the prefix you have the

1625
01:08:43,600 --> 01:08:45,759
color the color you know serves to

1626
01:08:45,759 --> 01:08:47,759
provide act as a distinguisher for the

1627
01:08:47,759 --> 01:08:49,759
route but it also provides the intent

1628
01:08:49,759 --> 01:08:52,799
you know provided by the route um this

1629
01:08:52,799 --> 01:08:54,319
is optimized for

1630
01:08:54,319 --> 01:08:56,238
the majority of you know

1631
01:08:56,238 --> 01:08:58,238
you know deployments where you have

1632
01:08:58,238 --> 01:09:00,238
network devices that operate within your

1633
01:09:00,238 --> 01:09:02,319
color domain that is you know they have

1634
01:09:02,319 --> 01:09:04,399
the same consistent color mapping we do

1635
01:09:04,399 --> 01:09:06,640
support the you know the exception cases

1636
01:09:06,640 --> 01:09:10,560
we'll cover it later next slide please

1637
01:09:11,198 --> 01:09:13,279
um we've gone through this before i mean

1638
01:09:13,279 --> 01:09:15,120
we you know we've defined it to be the

1639
01:09:15,120 --> 01:09:16,799
you know the simplest data model we can

1640
01:09:16,799 --> 01:09:19,040
use uh you know and it

1641
01:09:19,040 --> 01:09:21,120
enables the most efficient route

1642
01:09:21,120 --> 01:09:24,560
processing and storage uh you know

1643
01:09:24,560 --> 01:09:26,960
we are talking about an old you know inc

1644
01:09:26,960 --> 01:09:28,319
in a much increased scale than what

1645
01:09:28,319 --> 01:09:30,238
you've seen with bgplu today because now

1646
01:09:30,238 --> 01:09:31,839
it gets multiplied by the number of

1647
01:09:31,839 --> 01:09:33,520
intents that may be supported so we need

1648
01:09:33,520 --> 01:09:35,439
to focus on you know efficiency that's

1649
01:09:35,439 --> 01:09:36,640
what we've done

1650
01:09:36,640 --> 01:09:38,640
this model you know as it works very

1651
01:09:38,640 --> 01:09:41,679
similar to bgplu it inherently provides

1652
01:09:41,679 --> 01:09:44,080
ecmp awareness or backup paths at every

1653
01:09:44,080 --> 01:09:46,399
bgp hop we'll see details in the next in

1654
01:09:46,399 --> 01:09:48,640
a slide this provides faster you know

1655
01:09:48,640 --> 01:09:51,040
localized convergence we you know again

1656
01:09:51,040 --> 01:09:53,040
we don't have to deal with complex

1657
01:09:53,040 --> 01:09:54,800
workarounds to make things work because

1658
01:09:54,800 --> 01:09:57,440
we use an import or a mechanism we don't

1659
01:09:57,440 --> 01:09:58,320
need that

1660
01:09:58,320 --> 01:10:01,040
the next slide please

1661
01:10:01,040 --> 01:10:03,199
um so this is the illustration for that

1662
01:10:03,199 --> 01:10:06,080
in our case um as jeff said you know

1663
01:10:06,080 --> 01:10:08,480
described it before it's been debated um

1664
01:10:08,480 --> 01:10:11,360
you have uh two abrs here two three one

1665
01:10:11,360 --> 01:10:12,719
and two three two originating the route

1666
01:10:12,719 --> 01:10:16,159
for you know uh an endpoint e3 now that

1667
01:10:16,159 --> 01:10:18,159
naturally you know ends up being you

1668
01:10:18,159 --> 01:10:19,920
know treated as multipath at the ingress

1669
01:10:19,920 --> 01:10:21,679
nodes of the domain you get a common

1670
01:10:21,679 --> 01:10:23,600
label next top self

1671
01:10:23,600 --> 01:10:25,840
what gets propagated is just you know

1672
01:10:25,840 --> 01:10:28,640
the route from the those border nodes

1673
01:10:28,640 --> 01:10:31,360
any failure of the abr gets handled

1674
01:10:31,360 --> 01:10:32,960
locally within the domain there's no

1675
01:10:32,960 --> 01:10:35,120
churn uh you know outside

1676
01:10:35,120 --> 01:10:37,360
uh with ct you don't get this by default

1677
01:10:37,360 --> 01:10:39,440
you know you the the you know the user

1678
01:10:39,440 --> 01:10:41,679
unique rd those already

1679
01:10:41,679 --> 01:10:44,159
end up creating unique routes um the

1680
01:10:44,159 --> 01:10:46,000
routes in the lsp propagates all the way

1681
01:10:46,000 --> 01:10:47,440
to the ingress fees

1682
01:10:47,440 --> 01:10:49,760
um and you know any kind of convergence

1683
01:10:49,760 --> 01:10:52,159
uh has to happen at those ingress fees

1684
01:10:52,159 --> 01:10:53,600
and at the same time you know you have

1685
01:10:53,600 --> 01:10:55,280
all this you know failure propagation

1686
01:10:55,280 --> 01:10:57,600
the churn going across in outside the

1687
01:10:57,600 --> 01:10:58,480
domain

1688
01:10:58,480 --> 01:11:00,159
some workaround has been proposed and as

1689
01:11:00,159 --> 01:11:02,159
we not discussed it previously that you

1690
01:11:02,159 --> 01:11:04,080
know fails to address it uh because it

1691
01:11:04,080 --> 01:11:05,760
still you know propagates the churn

1692
01:11:05,760 --> 01:11:07,120
outside

1693
01:11:07,120 --> 01:11:09,120
to jeff's point and just to address it

1694
01:11:09,120 --> 01:11:11,520
there or i guess this question if same

1695
01:11:11,520 --> 01:11:14,159
rd was used i mean you know you you

1696
01:11:14,159 --> 01:11:15,760
could potentially use same rd that's

1697
01:11:15,760 --> 01:11:17,679
another in a way because it's an already

1698
01:11:17,679 --> 01:11:19,440
you have that option but it still

1699
01:11:19,440 --> 01:11:21,040
doesn't take away the the import

1700
01:11:21,040 --> 01:11:23,120
processing that's there and it seems

1701
01:11:23,120 --> 01:11:25,440
redundant you know

1702
01:11:25,440 --> 01:11:26,640
at that point

1703
01:11:26,640 --> 01:11:28,560
um same idea i don't know how we end up

1704
01:11:28,560 --> 01:11:30,640
doing automatic automatically because

1705
01:11:30,640 --> 01:11:33,120
there isn't enough space to put any an

1706
01:11:33,120 --> 01:11:35,199
id that says that multiple devices come

1707
01:11:35,199 --> 01:11:37,520
up with the same uh value uh you know i

1708
01:11:37,520 --> 01:11:38,800
don't think there's enough bits to put

1709
01:11:38,800 --> 01:11:41,199
the 32-bit color in there

1710
01:11:41,199 --> 01:11:43,440
um and then if at all that's the you

1711
01:11:43,440 --> 01:11:45,520
know solution then it kind of renders

1712
01:11:45,520 --> 01:11:48,960
the you know the rd mirrorless

1713
01:11:48,960 --> 01:11:50,080
i think

1714
01:11:50,080 --> 01:11:52,800
next slide please

1715
01:11:53,040 --> 01:11:55,920
now the other critical aspect is really

1716
01:11:55,920 --> 01:11:57,520
have we defined uh you know our

1717
01:11:57,520 --> 01:11:59,920
transport safety that is future proof

1718
01:11:59,920 --> 01:12:01,120
right i mean because we are trying to

1719
01:12:01,120 --> 01:12:04,880
move people from bgplu to a new safei we

1720
01:12:04,880 --> 01:12:06,239
have taken that into account when we

1721
01:12:06,239 --> 01:12:08,640
defined uh bgp car we put in

1722
01:12:08,640 --> 01:12:11,120
extensibility again leveraging a lot of

1723
01:12:11,120 --> 01:12:12,320
uh you know

1724
01:12:12,320 --> 01:12:13,440
experience

1725
01:12:13,440 --> 01:12:15,600
from other bjp selfies so we have a

1726
01:12:15,600 --> 01:12:18,400
route type we have a key line we have uh

1727
01:12:18,400 --> 01:12:19,600
we have

1728
01:12:19,600 --> 01:12:23,120
encoded non-ktlvs as jeff said um there

1729
01:12:23,120 --> 01:12:25,280
is monkey data even today in bgplu you

1730
01:12:25,280 --> 01:12:28,000
know l3 vp and other other safies we

1731
01:12:28,000 --> 01:12:29,760
have provided a structure you know made

1732
01:12:29,760 --> 01:12:31,760
it you know tlds

1733
01:12:31,760 --> 01:12:33,840
we enabled and you know that enables us

1734
01:12:33,840 --> 01:12:36,400
to you know add additional tlvs as

1735
01:12:36,400 --> 01:12:37,840
needed and

1736
01:12:37,840 --> 01:12:39,520
you know uh

1737
01:12:39,520 --> 01:12:41,040
that provides some benefits as we'll see

1738
01:12:41,040 --> 01:12:43,840
in the next uh slide at the same time we

1739
01:12:43,840 --> 01:12:45,760
ensured um you know we maintain the

1740
01:12:45,760 --> 01:12:47,520
packing efficiency again we'll see an

1741
01:12:47,520 --> 01:12:50,159
example of that in the in the next line

1742
01:12:50,159 --> 01:12:52,080
so we think these extensions actually

1743
01:12:52,080 --> 01:12:54,880
make uh you know this new safety uh you

1744
01:12:54,880 --> 01:12:56,400
know

1745
01:12:56,400 --> 01:12:59,120
as a good base for future extensions

1746
01:12:59,120 --> 01:13:00,880
virtual use cases which we don't even

1747
01:13:00,880 --> 01:13:02,400
you know

1748
01:13:02,400 --> 01:13:05,120
are aware of uh today one thing to point

1749
01:13:05,120 --> 01:13:07,120
out is even though you you know

1750
01:13:07,120 --> 01:13:09,840
introduced tlps they are for the non-key

1751
01:13:09,840 --> 01:13:12,239
data as pointed out here so from if you

1752
01:13:12,239 --> 01:13:14,320
look at the nlr the prefix the key

1753
01:13:14,320 --> 01:13:16,840
that's just like any other

1754
01:13:16,840 --> 01:13:20,640
existing next slide please

1755
01:13:20,640 --> 01:13:22,880
um coming to the encapsulations so

1756
01:13:22,880 --> 01:13:25,199
clearly this is a you know a critical uh

1757
01:13:25,199 --> 01:13:26,320
um

1758
01:13:26,320 --> 01:13:29,280
improvement uh with you know bgp car you

1759
01:13:29,280 --> 01:13:31,679
can signal uh of course the same you

1760
01:13:31,679 --> 01:13:33,520
know forwarding information labels you

1761
01:13:33,520 --> 01:13:35,120
know uh

1762
01:13:35,120 --> 01:13:38,320
sets etc but now you can signal them

1763
01:13:38,320 --> 01:13:40,560
uh without having to overload the label

1764
01:13:40,560 --> 01:13:42,800
fields uh of of the you know existing

1765
01:13:42,800 --> 01:13:45,440
safeties that have that that can only

1766
01:13:45,440 --> 01:13:46,800
signal labels

1767
01:13:46,800 --> 01:13:48,640
you can signal multiple encapsulations

1768
01:13:48,640 --> 01:13:50,400
and we can signal different values for

1769
01:13:50,400 --> 01:13:51,600
those encapsulations so you're not

1770
01:13:51,600 --> 01:13:53,360
constrained to ensuring it's the same

1771
01:13:53,360 --> 01:13:55,280
you know value that's used that may not

1772
01:13:55,280 --> 01:13:57,840
be appropriate for uh different

1773
01:13:57,840 --> 01:14:00,080
encapsulations as i said earlier it you

1774
01:14:00,080 --> 01:14:02,480
know we maintain a packing for example

1775
01:14:02,480 --> 01:14:04,800
the label index is a in a good example

1776
01:14:04,800 --> 01:14:06,159
it doesn't need to be you know carried

1777
01:14:06,159 --> 01:14:08,000
in an attribute which completely breaks

1778
01:14:08,000 --> 01:14:09,760
packing

1779
01:14:09,760 --> 01:14:11,520
this of course makes things efficient in

1780
01:14:11,520 --> 01:14:13,920
the steady state but it also provides a

1781
01:14:13,920 --> 01:14:16,640
benefit uh when you look at migration

1782
01:14:16,640 --> 01:14:18,000
when you when you have these different

1783
01:14:18,000 --> 01:14:19,760
encapsulations in the network and you're

1784
01:14:19,760 --> 01:14:22,400
moving from one to the other uh today

1785
01:14:22,400 --> 01:14:24,719
what you would be forced to do is set up

1786
01:14:24,719 --> 01:14:25,840
you know different control plane

1787
01:14:25,840 --> 01:14:28,560
distribution channels and

1788
01:14:28,560 --> 01:14:30,400
generate duplicate routes for the same

1789
01:14:30,400 --> 01:14:32,159
information with you know for different

1790
01:14:32,159 --> 01:14:33,760
end cap and make sure they you know

1791
01:14:33,760 --> 01:14:36,400
travel uh in a disjoint manner such that

1792
01:14:36,400 --> 01:14:38,400
uh you know the ingress nodes that need

1793
01:14:38,400 --> 01:14:40,080
it you know receive it

1794
01:14:40,080 --> 01:14:41,760
that's that's a lot of operational

1795
01:14:41,760 --> 01:14:44,239
complexity we've taken that care of that

1796
01:14:44,239 --> 01:14:45,520
here because now you don't you first of

1797
01:14:45,520 --> 01:14:47,199
all don't have duplicate routes you use

1798
01:14:47,199 --> 01:14:49,280
the same set of uh control plane you

1799
01:14:49,280 --> 01:14:50,480
know sessions

1800
01:14:50,480 --> 01:14:53,199
um it's you know more efficient it's the

1801
01:14:53,199 --> 01:14:55,520
protocol automatically handles uh you

1802
01:14:55,520 --> 01:14:58,000
know this scenario that you know really

1803
01:14:58,000 --> 01:14:59,520
provides through objects you know

1804
01:14:59,520 --> 01:15:01,199
operational simplicity and optics

1805
01:15:01,199 --> 01:15:03,759
reduction

1806
01:15:05,440 --> 01:15:07,199
interrupt for a moment uh sue do you

1807
01:15:07,199 --> 01:15:09,440
have a clarification question if not we

1808
01:15:09,440 --> 01:15:12,080
have a time slot for discussing things

1809
01:15:12,080 --> 01:15:16,679
at the end of this presentation sense

1810
01:15:28,800 --> 01:15:33,040
so we do not hear you so afterwards

1811
01:15:34,800 --> 01:15:36,560
repeat yourself please okay you've taken

1812
01:15:36,560 --> 01:15:39,440
yourself out of the queue

1813
01:15:39,440 --> 01:15:40,719
let's continue

1814
01:15:40,719 --> 01:15:42,800
okay uh thanks jeff um so one

1815
01:15:42,800 --> 01:15:44,320
observation and this was discussed

1816
01:15:44,320 --> 01:15:46,080
before one thing that did come up that

1817
01:15:46,080 --> 01:15:48,480
they have come out of the interim

1818
01:15:48,480 --> 01:15:50,320
discussion is yes there's an

1819
01:15:50,320 --> 01:15:51,679
acknowledgment that there are these

1820
01:15:51,679 --> 01:15:53,880
limitations with the you know the

1821
01:15:53,880 --> 01:15:56,800
rxc827 encoding and we would like to

1822
01:15:56,800 --> 01:15:59,600
address it this is a general you know i

1823
01:15:59,600 --> 01:16:02,640
think uh expression and including you

1824
01:16:02,640 --> 01:16:05,760
know from the bgpct co-authors so bgpct

1825
01:16:05,760 --> 01:16:07,280
unfortunately does inherits the same

1826
01:16:07,280 --> 01:16:09,600
limitations whereas with bgp card view

1827
01:16:09,600 --> 01:16:11,280
you know recognize those limitations and

1828
01:16:11,280 --> 01:16:12,880
address them from day one into the

1829
01:16:12,880 --> 01:16:16,480
design next slide please

1830
01:16:18,800 --> 01:16:22,560
okay um next stop resolution

1831
01:16:22,560 --> 01:16:24,000
nothing really new we've covered this

1832
01:16:24,000 --> 01:16:26,400
before um so we may could probably skip

1833
01:16:26,400 --> 01:16:29,040
it in the interest of time um

1834
01:16:29,040 --> 01:16:30,239
in general it works across both

1835
01:16:30,239 --> 01:16:32,320
traditional transport technologies as

1836
01:16:32,320 --> 01:16:34,640
well as the newer you know color aware

1837
01:16:34,640 --> 01:16:38,239
mechanisms um maybe one thing to

1838
01:16:38,239 --> 01:16:39,840
bring up here is

1839
01:16:39,840 --> 01:16:40,719
um

1840
01:16:40,719 --> 01:16:42,080
there's been some discussion about

1841
01:16:42,080 --> 01:16:44,719
longest prefix match and you know maybe

1842
01:16:44,719 --> 01:16:46,480
it's a good place to mention that of

1843
01:16:46,480 --> 01:16:48,080
course guard supports the longest prefix

1844
01:16:48,080 --> 01:16:49,280
match when it comes to next stop

1845
01:16:49,280 --> 01:16:51,920
resolution so if you hear anything to

1846
01:16:51,920 --> 01:16:54,159
the contrary that would be incorrect uh

1847
01:16:54,159 --> 01:16:57,040
next slide please

1848
01:16:58,000 --> 01:17:00,880
um again another key goal from the

1849
01:17:00,880 --> 01:17:03,760
beginning um and this again uh talks to

1850
01:17:03,760 --> 01:17:06,719
the operational you know simplicity and

1851
01:17:06,719 --> 01:17:09,360
the experience uh bgp car is you know

1852
01:17:09,360 --> 01:17:11,360
completely com you know compatible with

1853
01:17:11,360 --> 01:17:13,600
the sr policy architecture in terms of

1854
01:17:13,600 --> 01:17:15,280
using the color you know steering

1855
01:17:15,280 --> 01:17:18,159
mechanisms fall back etc and that is a

1856
01:17:18,159 --> 01:17:20,080
model which you know has multiple

1857
01:17:20,080 --> 01:17:22,560
implementations and is deployed so you

1858
01:17:22,560 --> 01:17:25,120
get that in a sort of leverage

1859
01:17:25,120 --> 01:17:26,719
um

1860
01:17:26,719 --> 01:17:30,280
next slide please

1861
01:17:33,920 --> 01:17:36,960
um as i said earlier um there can be

1862
01:17:36,960 --> 01:17:39,120
exceptions where you know networks come

1863
01:17:39,120 --> 01:17:41,040
together and they have different uh you

1864
01:17:41,040 --> 01:17:43,040
know color to intent mappings this is

1865
01:17:43,040 --> 01:17:45,040
not nobody starts with this you know

1866
01:17:45,040 --> 01:17:46,960
where day one but it can happen so we've

1867
01:17:46,960 --> 01:17:49,600
accommodated that you know by leveraging

1868
01:17:49,600 --> 01:17:51,520
uh you know an extended community called

1869
01:17:51,520 --> 01:17:53,520
the local color mapping community to

1870
01:17:53,520 --> 01:17:55,760
signal um the local color you know

1871
01:17:55,760 --> 01:17:58,560
within a domain when uh you know routes

1872
01:17:58,560 --> 01:18:00,159
come from you know other you know color

1873
01:18:00,159 --> 01:18:02,960
domains the nlri however you know is

1874
01:18:02,960 --> 01:18:05,120
immutable does not have to be rewritten

1875
01:18:05,120 --> 01:18:07,440
it just deserved end-to-end um

1876
01:18:07,440 --> 01:18:09,440
and then even if the color you know in

1877
01:18:09,440 --> 01:18:11,040
the nlra is

1878
01:18:11,040 --> 01:18:12,560
you know now you know from a different

1879
01:18:12,560 --> 01:18:15,679
domain the prefix is uh

1880
01:18:15,679 --> 01:18:16,880
you know unique in the inter domain

1881
01:18:16,880 --> 01:18:18,719
transport network for example it's a pe

1882
01:18:18,719 --> 01:18:21,280
address so that makes the the e-commerce

1883
01:18:21,280 --> 01:18:23,600
tuple in a unique

1884
01:18:23,600 --> 01:18:27,080
next slide please

1885
01:18:27,199 --> 01:18:28,640
um this is

1886
01:18:28,640 --> 01:18:30,480
essentially a iteration of some i mean

1887
01:18:30,480 --> 01:18:32,239
like more set of clarifications because

1888
01:18:32,239 --> 01:18:33,679
some points have been raised in the past

1889
01:18:33,679 --> 01:18:35,360
which we've addressed but you know

1890
01:18:35,360 --> 01:18:37,600
sometimes they you know come back i

1891
01:18:37,600 --> 01:18:39,280
don't think at this point we need to go

1892
01:18:39,280 --> 01:18:40,719
through it point by point but they're

1893
01:18:40,719 --> 01:18:44,000
there for you know reference the

1894
01:18:44,000 --> 01:18:47,040
if it's helpful

1895
01:18:47,040 --> 01:18:49,199
um next slide

1896
01:18:49,199 --> 01:18:50,159
please

1897
01:18:50,159 --> 01:18:52,000
uh again there are other aspects you

1898
01:18:52,000 --> 01:18:53,840
know described in the draft and you know

1899
01:18:53,840 --> 01:18:55,679
for example different scaling designs

1900
01:18:55,679 --> 01:18:57,199
again some of these are actually used

1901
01:18:57,199 --> 01:18:59,040
today so there's nothing new but we've

1902
01:18:59,040 --> 01:19:01,120
done an analysis of the trade-offs and

1903
01:19:01,120 --> 01:19:03,199
some optimizations that can help

1904
01:19:03,199 --> 01:19:05,840
uh again another car also you know even

1905
01:19:05,840 --> 01:19:08,000
though the focus is largely on transport

1906
01:19:08,000 --> 01:19:10,080
here but it's it's routing so it can

1907
01:19:10,080 --> 01:19:12,239
extend you know to the vpn domain you

1908
01:19:12,239 --> 01:19:14,400
know like between a b and c so you

1909
01:19:14,400 --> 01:19:16,800
define an extension there

1910
01:19:16,800 --> 01:19:19,840
next slide please

1911
01:19:19,840 --> 01:19:22,640
um again you know to summarize uh you

1912
01:19:22,640 --> 01:19:24,719
know car is designed as an evolution of

1913
01:19:24,719 --> 01:19:28,000
bgplu but with intent awareness um but

1914
01:19:28,000 --> 01:19:30,480
we have also taken care toward design in

1915
01:19:30,480 --> 01:19:32,400
order to be extensible to accommodate

1916
01:19:32,400 --> 01:19:34,159
new use cases

1917
01:19:34,159 --> 01:19:36,159
support multiple encapsulations with

1918
01:19:36,159 --> 01:19:37,360
efficiency

1919
01:19:37,360 --> 01:19:39,199
i we think it's a really good base

1920
01:19:39,199 --> 01:19:40,880
framework that can be extended with you

1921
01:19:40,880 --> 01:19:43,600
know lower at four different use cases

1922
01:19:43,600 --> 01:19:46,480
uh if there's a heavy focus on you know

1923
01:19:46,480 --> 01:19:49,199
better protocol performance and scaling

1924
01:19:49,199 --> 01:19:51,120
both in terms of processing and memory

1925
01:19:51,120 --> 01:19:54,480
storage this is you know important

1926
01:19:54,480 --> 01:19:56,239
um

1927
01:19:56,239 --> 01:19:58,480
again finally to restate it yeah it

1928
01:19:58,480 --> 01:20:00,159
works across both the traditional

1929
01:20:00,159 --> 01:20:02,880
networks as well as you know newer

1930
01:20:02,880 --> 01:20:06,000
technologies um

1931
01:20:06,000 --> 01:20:08,639
next slide please uh

1932
01:20:08,639 --> 01:20:10,080
yeah i think we can skip past this it's

1933
01:20:10,080 --> 01:20:12,880
just an output uh you know for reference

1934
01:20:12,880 --> 01:20:15,280
so uh i think bottom line the the base

1935
01:20:15,280 --> 01:20:16,880
functionality is stable we believe we

1936
01:20:16,880 --> 01:20:19,040
have two you know known implementations

1937
01:20:19,040 --> 01:20:20,960
that you know interrupt with each other

1938
01:20:20,960 --> 01:20:23,040
uh we believe the you know the draft is

1939
01:20:23,040 --> 01:20:24,400
ready for working group adoption

1940
01:20:24,400 --> 01:20:26,080
adoption and would like to you know

1941
01:20:26,080 --> 01:20:30,320
reiterate the request uh thank you

1942
01:20:30,320 --> 01:20:32,320
thanks ninja uh three points and then

1943
01:20:32,320 --> 01:20:35,040
i'll yield this to uh

1944
01:20:35,040 --> 01:20:37,120
stick with uh clarification questions we

1945
01:20:37,120 --> 01:20:38,639
have discussions scheduled after the

1946
01:20:38,639 --> 01:20:40,719
presentations are done

1947
01:20:40,719 --> 01:20:42,480
uh point number one here that i wish to

1948
01:20:42,480 --> 01:20:44,480
raise uh you have

1949
01:20:44,480 --> 01:20:45,440
two implementations with

1950
01:20:45,440 --> 01:20:47,120
interoperability as raised on the

1951
01:20:47,120 --> 01:20:49,120
mailing list that means you're squatting

1952
01:20:49,120 --> 01:20:51,760
at code points please address that asap

1953
01:20:51,760 --> 01:20:53,120
you should not be leaking that out into

1954
01:20:53,120 --> 01:20:56,000
the internet at large

1955
01:20:56,159 --> 01:20:58,560
point number two

1956
01:20:58,560 --> 01:21:00,719
based on how the discussion has evolved

1957
01:21:00,719 --> 01:21:03,120
across the mailing list i wish to

1958
01:21:03,120 --> 01:21:06,159
caution all of the participants about

1959
01:21:06,159 --> 01:21:07,520
making value judgments about other

1960
01:21:07,520 --> 01:21:10,560
people's implementations

1961
01:21:10,560 --> 01:21:12,560
giving a specific example you're raising

1962
01:21:12,560 --> 01:21:13,360
you know

1963
01:21:13,360 --> 01:21:15,360
what you think tables look like in terms

1964
01:21:15,360 --> 01:21:18,159
of import export behaviors for ct

1965
01:21:18,159 --> 01:21:20,239
you know you've similarly responded to

1966
01:21:20,239 --> 01:21:22,400
cali raj making assumptions about

1967
01:21:22,400 --> 01:21:24,080
longest prefix match behaviors and your

1968
01:21:24,080 --> 01:21:25,440
implementation

1969
01:21:25,440 --> 01:21:27,199
let's focus on what the

1970
01:21:27,199 --> 01:21:29,600
functional details look like and

1971
01:21:29,600 --> 01:21:31,520
if we finally need to clarify you're

1972
01:21:31,520 --> 01:21:33,040
welcome to do so but it should not be a

1973
01:21:33,040 --> 01:21:34,960
requirement here

1974
01:21:34,960 --> 01:21:36,480
sounds good

1975
01:21:36,480 --> 01:21:38,480
okay and uh

1976
01:21:38,480 --> 01:21:41,480
sue

1977
01:21:42,719 --> 01:21:44,400
thank you um

1978
01:21:44,400 --> 01:21:46,159
dj for your

1979
01:21:46,159 --> 01:21:48,719
uh presentation let me go back and ask

1980
01:21:48,719 --> 01:21:51,520
you a clarification question

1981
01:21:51,520 --> 01:21:54,320
um it had to do with when you were

1982
01:21:54,320 --> 01:21:58,320
trying to answer jeff's question

1983
01:21:58,320 --> 01:22:01,280
and i got a little confused

1984
01:22:01,280 --> 01:22:02,080
so

1985
01:22:02,080 --> 01:22:04,800
you were it was the question about the

1986
01:22:04,800 --> 01:22:08,000
unique rd and how that would work that

1987
01:22:08,000 --> 01:22:10,560
was actually my question

1988
01:22:10,560 --> 01:22:12,239
i admit

1989
01:22:12,239 --> 01:22:15,520
perhaps you could explain how it doesn't

1990
01:22:15,520 --> 01:22:18,400
work or how it doesn't do

1991
01:22:18,400 --> 01:22:21,120
local convergence

1992
01:22:21,120 --> 01:22:24,960
i do note that the ct document

1993
01:22:24,960 --> 01:22:28,159
uh needed to specify that it could be

1994
01:22:28,159 --> 01:22:31,760
run in multiple rds or one rd when i

1995
01:22:31,760 --> 01:22:35,199
pinged them they responded to that so

1996
01:22:35,199 --> 01:22:37,040
would you go back to that point in your

1997
01:22:37,040 --> 01:22:39,360
slide where you were discussing that

1998
01:22:39,360 --> 01:22:42,480
bring up the prison bring up the

1999
01:22:42,480 --> 01:22:45,440
slide and just sort of go through it i i

2000
01:22:45,440 --> 01:22:46,239
thought

2001
01:22:46,239 --> 01:22:48,239
it was a side point so i didn't want to

2002
01:22:48,239 --> 01:22:50,840
interrupt your flow

2003
01:22:50,840 --> 01:22:53,120
sure uh so um

2004
01:22:53,120 --> 01:22:54,480
so the

2005
01:22:54,480 --> 01:22:56,239
of course i mean and just to point out

2006
01:22:56,239 --> 01:22:59,520
what's illustrated here is a bgp car

2007
01:22:59,520 --> 01:23:01,679
you know uh and lara so you know we

2008
01:23:01,679 --> 01:23:03,760
would still be now talking about

2009
01:23:03,760 --> 01:23:05,679
you know um ct

2010
01:23:05,679 --> 01:23:07,520
the the difference the main difference

2011
01:23:07,520 --> 01:23:09,679
you know i was uh you know

2012
01:23:09,679 --> 01:23:11,679
was describing is

2013
01:23:11,679 --> 01:23:14,639
my default city would uh

2014
01:23:14,639 --> 01:23:17,520
originate routes with unique rd's so you

2015
01:23:17,520 --> 01:23:21,520
know the same route you know for e3 c1

2016
01:23:21,520 --> 01:23:23,520
as originated by two three one and two

2017
01:23:23,520 --> 01:23:25,520
three two nodes would go with different

2018
01:23:25,520 --> 01:23:28,639
rds and hence they would not by default

2019
01:23:28,639 --> 01:23:33,199
get merged you know in um

2020
01:23:39,520 --> 01:23:42,239
i i was looking for the case

2021
01:23:42,239 --> 01:23:44,560
if they had a single rd

2022
01:23:44,560 --> 01:23:46,560
for the comparison that i thought you

2023
01:23:46,560 --> 01:23:48,960
made and i i just

2024
01:23:48,960 --> 01:23:51,440
it may be the the line i didn't hear

2025
01:23:51,440 --> 01:23:54,639
clearly what what's your comment there

2026
01:23:54,639 --> 01:23:56,960
sure i think i was just pointing out

2027
01:23:56,960 --> 01:24:00,239
that yes with same rds some of the

2028
01:24:00,239 --> 01:24:01,520
issues could be

2029
01:24:01,520 --> 01:24:03,199
uh ameliorated

2030
01:24:03,199 --> 01:24:06,880
uh but it still you know has issues uh i

2031
01:24:06,880 --> 01:24:09,040
guess one comment you know i don't know

2032
01:24:09,040 --> 01:24:10,960
if i should restate it given jeff's

2033
01:24:10,960 --> 01:24:12,800
government but it still requires an

2034
01:24:12,800 --> 01:24:13,760
input

2035
01:24:13,760 --> 01:24:15,120
you know

2036
01:24:15,120 --> 01:24:18,239
process uh you know a procedure at um

2037
01:24:18,239 --> 01:24:20,320
you know at the nodes two one one and

2038
01:24:20,320 --> 01:24:22,480
you know two and two uh to get that

2039
01:24:22,480 --> 01:24:24,159
merge happening

2040
01:24:24,159 --> 01:24:25,120
um

2041
01:24:25,120 --> 01:24:26,239
the the

2042
01:24:26,239 --> 01:24:29,280
the actual comment i was making was

2043
01:24:29,280 --> 01:24:31,040
it is not automatic

2044
01:24:31,040 --> 01:24:32,719
right because now you have two nodes

2045
01:24:32,719 --> 01:24:35,040
that have to generate the same value to

2046
01:24:35,040 --> 01:24:36,800
get the same rd

2047
01:24:36,800 --> 01:24:38,080
and

2048
01:24:38,080 --> 01:24:39,840
uh

2049
01:24:39,840 --> 01:24:42,960
given how what the types of rd we have

2050
01:24:42,960 --> 01:24:45,120
there aren't enough bits when you know

2051
01:24:45,120 --> 01:24:48,320
in the rd to fit in a 32-bit color value

2052
01:24:48,320 --> 01:24:50,800
assuming you know color was a way to

2053
01:24:50,800 --> 01:24:54,560
uh you know generate that uh same rd uh

2054
01:24:54,560 --> 01:24:56,480
value perhaps there are others you know

2055
01:24:56,480 --> 01:24:58,719
but that was the comment i was uh you

2056
01:24:58,719 --> 01:25:00,000
know making okay

2057
01:25:00,000 --> 01:25:03,199
uh so your comment

2058
01:25:03,199 --> 01:25:04,239
we're going to get other people's

2059
01:25:04,239 --> 01:25:06,239
presentations and

2060
01:25:06,239 --> 01:25:07,920
say okay

2061
01:25:07,920 --> 01:25:09,520
okay i will

2062
01:25:09,520 --> 01:25:13,080
i didn't mean

2063
01:25:15,280 --> 01:25:19,040
yeah with the same rd imagine

2064
01:25:19,040 --> 01:25:21,040
if it's originated from the e3 because

2065
01:25:21,040 --> 01:25:23,360
that's what kali raj mentioned if it

2066
01:25:23,360 --> 01:25:25,920
origin from e3 we are carrying the same

2067
01:25:25,920 --> 01:25:28,719
value that means the prefix e3 as well

2068
01:25:28,719 --> 01:25:30,639
as rd is also carrying e3 it's a

2069
01:25:30,639 --> 01:25:32,400
repetition of information i'm not sure

2070
01:25:32,400 --> 01:25:34,719
for what reason but we are carrying the

2071
01:25:34,719 --> 01:25:36,639
same information twice in the nlri so i

2072
01:25:36,639 --> 01:25:38,080
don't know what's the point of this data

2073
01:25:38,080 --> 01:25:40,800
model if we if you say we will propose

2074
01:25:40,800 --> 01:25:43,520
same rd so this is a great point for the

2075
01:25:43,520 --> 01:25:44,320
author

2076
01:25:44,320 --> 01:25:45,679
discussion

2077
01:25:45,679 --> 01:25:46,400
so

2078
01:25:46,400 --> 01:25:48,159
we'll leave this to the discussion

2079
01:25:48,159 --> 01:25:50,960
you've clarified your comment i will

2080
01:25:50,960 --> 01:25:54,639
last more in the discussion point dj

2081
01:25:54,639 --> 01:25:58,400
thank you for uh going through that

2082
01:25:58,400 --> 01:26:00,560
um

2083
01:26:00,560 --> 01:26:02,800
i will i will we'll pick up the rest of

2084
01:26:02,800 --> 01:26:05,040
it during the discussion thank you

2085
01:26:05,040 --> 01:26:06,880
thank you okay so we're going to move to

2086
01:26:06,880 --> 01:26:09,120
the ct presentation we also do have an

2087
01:26:09,120 --> 01:26:11,199
lcu presentation afterwards the goal is

2088
01:26:11,199 --> 01:26:13,120
to leave as much time for discussion

2089
01:26:13,120 --> 01:26:15,040
about the sets of things

2090
01:26:15,040 --> 01:26:16,480
and i do want to point out there's

2091
01:26:16,480 --> 01:26:18,560
interesting stuff in chat please take

2092
01:26:18,560 --> 01:26:20,159
that to microphone once we're done with

2093
01:26:20,159 --> 01:26:22,320
the presentations

2094
01:26:22,320 --> 01:26:25,920
kylie raj you have the microphone

2095
01:26:26,400 --> 01:26:28,719
everyone

2096
01:26:28,719 --> 01:26:30,800
so um i'll

2097
01:26:30,800 --> 01:26:34,080
be presenting the city again and we will

2098
01:26:34,080 --> 01:26:35,920
be repeating a lot of stuff but i want

2099
01:26:35,920 --> 01:26:38,639
to focus on a few slides so that we save

2100
01:26:38,639 --> 01:26:40,400
time for everyone

2101
01:26:40,400 --> 01:26:43,120
next side please

2102
01:26:43,280 --> 01:26:45,760
so this is the quick agenda it's a recap

2103
01:26:45,760 --> 01:26:47,760
of the problem statement and i want to

2104
01:26:47,760 --> 01:26:50,159
touch base slightly on why we need a new

2105
01:26:50,159 --> 01:26:51,520
address family

2106
01:26:51,520 --> 01:26:53,520
and then what are the problems with

2107
01:26:53,520 --> 01:26:56,080
including color in the lpm key though

2108
01:26:56,080 --> 01:26:59,840
this is an implementation data but it uh

2109
01:26:59,840 --> 01:27:01,520
it drives how the protocol should be

2110
01:27:01,520 --> 01:27:02,639
designed that is why we are talking

2111
01:27:02,639 --> 01:27:04,400
about this and then there are some

2112
01:27:04,400 --> 01:27:06,320
repetition of explanation of how the

2113
01:27:06,320 --> 01:27:08,239
what are the construction with the pct

2114
01:27:08,239 --> 01:27:10,400
and how do you express your intent in

2115
01:27:10,400 --> 01:27:13,840
bdbct using mapping community so in the

2116
01:27:13,840 --> 01:27:17,679
uh shares summary slides jeff uh

2117
01:27:17,679 --> 01:27:19,520
presented the analysis that both the

2118
01:27:19,520 --> 01:27:23,360
solutions are identified almost uh equal

2119
01:27:23,360 --> 01:27:25,440
but i feel that how you express intent

2120
01:27:25,440 --> 01:27:28,000
in the gbcd is much more

2121
01:27:28,000 --> 01:27:31,520
signaled than what you can do in car

2122
01:27:31,520 --> 01:27:33,440
we see that this underspecified and car

2123
01:27:33,440 --> 01:27:35,040
so i just want to point that out and

2124
01:27:35,040 --> 01:27:37,280
then we will just uh go with the current

2125
01:27:37,280 --> 01:27:38,719
status and execute somebody next side

2126
01:27:38,719 --> 01:27:40,960
please

2127
01:27:40,960 --> 01:27:43,360
so problem statement is uh

2128
01:27:43,360 --> 01:27:45,199
it's just doing intern driven service

2129
01:27:45,199 --> 01:27:47,280
mapping so basically irrespective of

2130
01:27:47,280 --> 01:27:49,120
intra domain or inter domain you have

2131
01:27:49,120 --> 01:27:52,080
the same way of how you specify uh

2132
01:27:52,080 --> 01:27:54,080
classified transport classes transport

2133
01:27:54,080 --> 01:27:56,000
tunnels into transport classes

2134
01:27:56,000 --> 01:27:59,280
and how you do service routes resolving

2135
01:27:59,280 --> 01:28:02,480
over a set of transport tunnels in a

2136
01:28:02,480 --> 01:28:05,120
desired fallback and where each route

2137
01:28:05,120 --> 01:28:06,159
can have

2138
01:28:06,159 --> 01:28:08,719
a different uh fallback

2139
01:28:08,719 --> 01:28:11,360
and how it works with

2140
01:28:11,360 --> 01:28:13,679
how to extend pcp to carry the signaling

2141
01:28:13,679 --> 01:28:15,920
information across and

2142
01:28:15,920 --> 01:28:17,760
as domain

2143
01:28:17,760 --> 01:28:20,400
next slide please

2144
01:28:20,480 --> 01:28:22,400
yeah this is just a reference diagram it

2145
01:28:22,400 --> 01:28:26,559
just shows a bgplu network trick and

2146
01:28:26,800 --> 01:28:29,679
it shows the different uh

2147
01:28:29,679 --> 01:28:33,440
redundant asbs and abrs and the pe

2148
01:28:33,440 --> 01:28:37,840
hp having multiple color tunnels and how

2149
01:28:37,840 --> 01:28:39,920
the colors are not visible today when

2150
01:28:39,920 --> 01:28:42,400
you're using vg value to other domains

2151
01:28:42,400 --> 01:28:45,440
so for example p25 cannot

2152
01:28:45,440 --> 01:28:48,320
put a traffic on the gold tunnel uh

2153
01:28:48,320 --> 01:28:50,080
2pe11

2154
01:28:50,080 --> 01:28:52,800
yeah exactly

2155
01:28:54,560 --> 01:28:56,800
so why we do we need a new address

2156
01:28:56,800 --> 01:28:58,320
family so this is the first thing that

2157
01:28:58,320 --> 01:29:01,040
we explored so why not reuse or hack

2158
01:29:01,040 --> 01:29:03,520
existing address numbers like lu srt l3

2159
01:29:03,520 --> 01:29:04,800
vpn

2160
01:29:04,800 --> 01:29:07,360
so with extending lu approach the main

2161
01:29:07,360 --> 01:29:10,400
problem is that even if we do some

2162
01:29:10,400 --> 01:29:11,520
changes

2163
01:29:11,520 --> 01:29:13,040
um

2164
01:29:13,040 --> 01:29:16,000
agree on having it negotiated on a pearl

2165
01:29:16,000 --> 01:29:18,000
session scope capability

2166
01:29:18,000 --> 01:29:19,040
we cannot

2167
01:29:19,040 --> 01:29:21,360
guarantee end to endlessly because on

2168
01:29:21,360 --> 01:29:23,440
the path if there is an old alien node

2169
01:29:23,440 --> 01:29:24,560
which does not support the new

2170
01:29:24,560 --> 01:29:25,840
mechanisms

2171
01:29:25,840 --> 01:29:29,040
it will just re-advertise the route

2172
01:29:29,040 --> 01:29:31,280
the intent-based route without following

2173
01:29:31,280 --> 01:29:32,400
the intent

2174
01:29:32,400 --> 01:29:33,840
so the ingress

2175
01:29:33,840 --> 01:29:35,120
pe can

2176
01:29:35,120 --> 01:29:37,679
not be sure that the

2177
01:29:37,679 --> 01:29:40,320
sla has been guaranteed end-to-end

2178
01:29:40,320 --> 01:29:41,040
so

2179
01:29:41,040 --> 01:29:43,440
this is the main reason why we didn't go

2180
01:29:43,440 --> 01:29:45,360
without you because when you're going

2181
01:29:45,360 --> 01:29:47,199
for new extensions it's good to just

2182
01:29:47,199 --> 01:29:49,840
have a way which works always and if you

2183
01:29:49,840 --> 01:29:51,520
have a route for example if you have a

2184
01:29:51,520 --> 01:29:53,920
city route or a transport class gold and

2185
01:29:53,920 --> 01:29:56,320
the english pe we know that end to end

2186
01:29:56,320 --> 01:29:58,719
the gold tunnels are up so we want that

2187
01:29:58,719 --> 01:30:00,159
kind of a guarantee that's why we didn't

2188
01:30:00,159 --> 01:30:02,080
go with uh lu

2189
01:30:02,080 --> 01:30:04,719
and using ad path id as a per shuttle

2190
01:30:04,719 --> 01:30:07,120
scope

2191
01:30:07,280 --> 01:30:08,960
it doesn't work really well as an

2192
01:30:08,960 --> 01:30:11,199
originator of the route so rd is a

2193
01:30:11,199 --> 01:30:13,040
better end-to-end distribution that's

2194
01:30:13,040 --> 01:30:15,440
the reason for uh using rd other than

2195
01:30:15,440 --> 01:30:17,360
just relying on our path and that goes

2196
01:30:17,360 --> 01:30:18,960
with

2197
01:30:18,960 --> 01:30:21,120
lu or any other approaches like car

2198
01:30:21,120 --> 01:30:22,719
which are using

2199
01:30:22,719 --> 01:30:25,440
and uh overloading l3 vpn of course i

2200
01:30:25,440 --> 01:30:26,880
think everybody agrees that we don't

2201
01:30:26,880 --> 01:30:28,719
want to put more transport routes into

2202
01:30:28,719 --> 01:30:31,120
health vpn so we did not do that

2203
01:30:31,120 --> 01:30:33,840
and the carrying color in the

2204
01:30:33,840 --> 01:30:36,400
um basically color is an adjective it's

2205
01:30:36,400 --> 01:30:38,800
not a noun so it's

2206
01:30:38,800 --> 01:30:40,560
instead of carrying it and

2207
01:30:40,560 --> 01:30:42,639
carrying the attribute makes more sense

2208
01:30:42,639 --> 01:30:45,040
and uh more on this on the next slide it

2209
01:30:45,040 --> 01:30:47,280
also ties in into how the internal

2210
01:30:47,280 --> 01:30:50,159
resolution data structures are built

2211
01:30:50,159 --> 01:30:52,960
and use of rte target it allows for rtc

2212
01:30:52,960 --> 01:30:54,960
like mechanisms uh providing on-demand

2213
01:30:54,960 --> 01:30:56,320
next up so

2214
01:30:56,320 --> 01:30:58,239
if you use lu all those kind of things

2215
01:30:58,239 --> 01:31:00,320
then you don't get this get this also

2216
01:31:00,320 --> 01:31:02,320
this helps with scaling this also pops

2217
01:31:02,320 --> 01:31:05,040
up model and uh thus we have a new

2218
01:31:05,040 --> 01:31:07,360
practice

2219
01:31:07,840 --> 01:31:10,480
next slide please

2220
01:31:10,800 --> 01:31:13,440
yeah so in this slide we have tried to

2221
01:31:13,440 --> 01:31:14,400
uh

2222
01:31:14,400 --> 01:31:16,000
summarize between the different

2223
01:31:16,000 --> 01:31:19,120
proposals uh which use color in the key

2224
01:31:19,120 --> 01:31:21,280
either as ip column color or colorful

2225
01:31:21,280 --> 01:31:22,320
and ip

2226
01:31:22,320 --> 01:31:25,199
and another uh model that is ct users

2227
01:31:25,199 --> 01:31:26,400
where you have different transport

2228
01:31:26,400 --> 01:31:28,480
groups of different colors and each one

2229
01:31:28,480 --> 01:31:29,440
have

2230
01:31:29,440 --> 01:31:31,040
just ip presence

2231
01:31:31,040 --> 01:31:31,920
so

2232
01:31:31,920 --> 01:31:33,520
we have

2233
01:31:33,520 --> 01:31:35,199
seen the different functionalities that

2234
01:31:35,199 --> 01:31:37,199
may be required where for example you do

2235
01:31:37,199 --> 01:31:39,199
a longer longer specific match on

2236
01:31:39,199 --> 01:31:40,639
endpoint polar

2237
01:31:40,639 --> 01:31:43,120
one and do a best of a

2238
01:31:43,120 --> 01:31:45,280
fallback on the

2239
01:31:45,280 --> 01:31:47,360
on the best of her tunnels so this is

2240
01:31:47,360 --> 01:31:50,159
possible using car because it uses ipv6

2241
01:31:50,159 --> 01:31:52,000
column color and color is at the end of

2242
01:31:52,000 --> 01:31:53,520
the thing so

2243
01:31:53,520 --> 01:31:56,719
and if you're using a slash 64

2244
01:31:56,719 --> 01:31:59,600
kind of look up uh

2245
01:31:59,600 --> 01:32:02,000
then it will uh support the best effort

2246
01:32:02,000 --> 01:32:04,560
and but it's not possible using srt

2247
01:32:04,560 --> 01:32:07,199
which uses color colonie prefix and if

2248
01:32:07,199 --> 01:32:09,679
you if you want to fall back from e1 to

2249
01:32:09,679 --> 01:32:13,760
c2 that is also not possible with color

2250
01:32:13,760 --> 01:32:16,400
with the with the pure longest prefix

2251
01:32:16,400 --> 01:32:18,159
match there may be other arrangements

2252
01:32:18,159 --> 01:32:20,800
possible which are less uh efficient and

2253
01:32:20,800 --> 01:32:23,360
it's not possible with ipsrt also uh

2254
01:32:23,360 --> 01:32:25,120
colorful ip also

2255
01:32:25,120 --> 01:32:28,320
and uh look uh lpm look up on non-host

2256
01:32:28,320 --> 01:32:31,440
previously crowd so this is i think it's

2257
01:32:31,440 --> 01:32:33,280
one of the main things in the in the

2258
01:32:33,280 --> 01:32:36,560
responses uh car other said that this is

2259
01:32:36,560 --> 01:32:38,239
economic but i don't understand that

2260
01:32:38,239 --> 01:32:40,719
point because i hear that srs indicator

2261
01:32:40,719 --> 01:32:42,320
route is one such chart

2262
01:32:42,320 --> 01:32:43,520
so

2263
01:32:43,520 --> 01:32:45,679
if you have a perfect one host prefix

2264
01:32:45,679 --> 01:32:47,679
length basically think about how your

2265
01:32:47,679 --> 01:32:50,000
organize your uh data structure i mean

2266
01:32:50,000 --> 01:32:52,480
you may have a one one one one slash 32

2267
01:32:52,480 --> 01:32:54,880
with color two and then one one one one

2268
01:32:54,880 --> 01:32:56,800
zero one one one zero slash twenty four

2269
01:32:56,800 --> 01:32:58,960
with color c one and if you want to

2270
01:32:58,960 --> 01:33:01,040
match uh one one one one next stop with

2271
01:33:01,040 --> 01:33:04,639
color c one then it will do the longest

2272
01:33:04,639 --> 01:33:06,880
match and hit the more specific thing so

2273
01:33:06,880 --> 01:33:09,120
we need to do some jewelry here

2274
01:33:09,120 --> 01:33:10,639
and

2275
01:33:10,639 --> 01:33:12,800
it is of course supported in colorful ip

2276
01:33:12,800 --> 01:33:15,199
prefix

2277
01:33:15,440 --> 01:33:17,440
and uh

2278
01:33:17,440 --> 01:33:20,080
and carrying best effort tunnels it's

2279
01:33:20,080 --> 01:33:23,040
possible with the iphone color because

2280
01:33:23,040 --> 01:33:24,880
color is at the end but it's not

2281
01:33:24,880 --> 01:33:27,120
possible with srt that's a color column

2282
01:33:27,120 --> 01:33:27,920
ip

2283
01:33:27,920 --> 01:33:29,760
so we see that it's kind of evolution

2284
01:33:29,760 --> 01:33:32,880
and because cd does not include the

2285
01:33:32,880 --> 01:33:34,960
color in the mre at all all the things

2286
01:33:34,960 --> 01:33:36,639
are possible with

2287
01:33:36,639 --> 01:33:37,840
cd

2288
01:33:37,840 --> 01:33:40,400
next right please

2289
01:33:42,719 --> 01:33:44,800
so this is just uh restating the

2290
01:33:44,800 --> 01:33:46,719
solution constructs and the main things

2291
01:33:46,719 --> 01:33:48,639
here i want to point out is a transport

2292
01:33:48,639 --> 01:33:50,560
class that is the construct that

2293
01:33:50,560 --> 01:33:52,800
equalizes the different uh

2294
01:33:52,800 --> 01:33:55,280
transport protocols uh some of them have

2295
01:33:55,280 --> 01:33:57,040
energy know the colors some of them may

2296
01:33:57,040 --> 01:33:57,920
not

2297
01:33:57,920 --> 01:33:58,800
and

2298
01:33:58,800 --> 01:34:00,000
then

2299
01:34:00,000 --> 01:34:01,440
we have the resolution team and the

2300
01:34:01,440 --> 01:34:03,280
mapping community so these are the

2301
01:34:03,280 --> 01:34:05,120
important things the mapping community

2302
01:34:05,120 --> 01:34:06,560
is not

2303
01:34:06,560 --> 01:34:08,719
it's basically we define it as any vdp

2304
01:34:08,719 --> 01:34:10,880
community so it is not like a one-to-one

2305
01:34:10,880 --> 01:34:13,199
mapping with a color so most default

2306
01:34:13,199 --> 01:34:15,679
cases it will be a color that you want

2307
01:34:15,679 --> 01:34:17,440
to derive the mapping community but you

2308
01:34:17,440 --> 01:34:19,760
can have a mapping community that that

2309
01:34:19,760 --> 01:34:23,600
can uh describe the actual fallback

2310
01:34:23,600 --> 01:34:25,440
we will have an example of this and i

2311
01:34:25,440 --> 01:34:27,600
think this this is the missing piece

2312
01:34:27,600 --> 01:34:29,360
this is the difference i see that it is

2313
01:34:29,360 --> 01:34:32,080
not there in a car i mean i i don't know

2314
01:34:32,080 --> 01:34:34,080
how you do i have asked those questions

2315
01:34:34,080 --> 01:34:36,719
on the email uh alias and i'm expecting

2316
01:34:36,719 --> 01:34:38,159
a response from

2317
01:34:38,159 --> 01:34:41,920
others so if r1 wants to

2318
01:34:41,920 --> 01:34:44,719
use color c1 as a primary and c2 as

2319
01:34:44,719 --> 01:34:47,600
backer whereas a different route r2

2320
01:34:47,600 --> 01:34:49,440
wants to use uh

2321
01:34:49,440 --> 01:34:52,159
the reverse c2s primary and c1 as backup

2322
01:34:52,159 --> 01:34:53,840
how do you express this

2323
01:34:53,840 --> 01:34:55,520
if it needs config changes from the box

2324
01:34:55,520 --> 01:34:57,199
then basically you don't actually signal

2325
01:34:57,199 --> 01:35:01,040
it so but with ct we can signal it

2326
01:35:01,040 --> 01:35:03,760
next slide please

2327
01:35:05,679 --> 01:35:08,239
yeah so this is just uh

2328
01:35:08,239 --> 01:35:11,280
the same lu network is

2329
01:35:11,280 --> 01:35:13,280
converted to ct by

2330
01:35:13,280 --> 01:35:14,800
and you see all the color tunnels

2331
01:35:14,800 --> 01:35:17,600
extended up to the pe uh english speed

2332
01:35:17,600 --> 01:35:20,000
excited

2333
01:35:20,960 --> 01:35:23,840
yeah so this is uh just an example of

2334
01:35:23,840 --> 01:35:26,159
how you expect intent in bgbcd it just

2335
01:35:26,159 --> 01:35:28,400
gives a concrete example of how you do

2336
01:35:28,400 --> 01:35:30,320
the mapping and how can you how you can

2337
01:35:30,320 --> 01:35:32,639
signal using the mapping community what

2338
01:35:32,639 --> 01:35:35,600
uh fallback game the route wants and we

2339
01:35:35,600 --> 01:35:38,639
don't uh see these kind of details in uh

2340
01:35:38,639 --> 01:35:40,560
the car document it'll be good to add

2341
01:35:40,560 --> 01:35:43,360
how

2342
01:35:44,159 --> 01:35:46,960
okay next slide please

2343
01:35:47,840 --> 01:35:50,320
yeah so these are the advantages and uh

2344
01:35:50,320 --> 01:35:52,080
this is like a reputation from previous

2345
01:35:52,080 --> 01:35:53,040
sessions

2346
01:35:53,040 --> 01:35:55,199
i think instead of going through this i

2347
01:35:55,199 --> 01:35:57,040
like to uh

2348
01:35:57,040 --> 01:35:58,560
respond to some of the comments that

2349
01:35:58,560 --> 01:36:00,320
were made in cosmic sunday's

2350
01:36:00,320 --> 01:36:02,480
presentation one was about the

2351
01:36:02,480 --> 01:36:05,199
limitation of 8277 encoding

2352
01:36:05,199 --> 01:36:06,480
um

2353
01:36:06,480 --> 01:36:08,239
so our

2354
01:36:08,239 --> 01:36:10,800
point was to move non-key fields out of

2355
01:36:10,800 --> 01:36:13,280
the nlri not to add more of them to the

2356
01:36:13,280 --> 01:36:14,639
nlri

2357
01:36:14,639 --> 01:36:16,719
well if you have to add more of more to

2358
01:36:16,719 --> 01:36:20,080
them larry than what uh car is doing by

2359
01:36:20,080 --> 01:36:22,320
segregating them out of the key and

2360
01:36:22,320 --> 01:36:24,560
non-key that's all that's one way to

2361
01:36:24,560 --> 01:36:26,639
work around it but it will be better if

2362
01:36:26,639 --> 01:36:28,719
you have forwarding information uh

2363
01:36:28,719 --> 01:36:30,320
scoped on a floor

2364
01:36:30,320 --> 01:36:33,040
for next top basis and that next topic

2365
01:36:33,040 --> 01:36:34,239
in an attribute

2366
01:36:34,239 --> 01:36:37,119
so what our suggestion was to go with

2367
01:36:37,119 --> 01:36:39,199
that model where we take uh forwarding

2368
01:36:39,199 --> 01:36:41,199
information or non-key information out

2369
01:36:41,199 --> 01:36:42,239
of the environment you just want to

2370
01:36:42,239 --> 01:36:43,679
clarify that

2371
01:36:43,679 --> 01:36:45,840
and uh

2372
01:36:45,840 --> 01:36:47,600
yeah and the point on uh local

2373
01:36:47,600 --> 01:36:50,159
convergence so like uh was pointing out

2374
01:36:50,159 --> 01:36:53,679
i mean if you use a rd at the egress

2375
01:36:53,679 --> 01:36:56,239
i mean if you use cp route origination

2376
01:36:56,239 --> 01:36:58,239
at the us uh ee

2377
01:36:58,239 --> 01:37:00,400
then like jeff points out these two

2378
01:37:00,400 --> 01:37:02,320
proposals are identical you have the

2379
01:37:02,320 --> 01:37:04,239
same kind of

2380
01:37:04,239 --> 01:37:06,960
prefix you don't have any uh different

2381
01:37:06,960 --> 01:37:10,400
rd that the ingress pcs all the asps and

2382
01:37:10,400 --> 01:37:12,800
to the point where why do you need the

2383
01:37:12,800 --> 01:37:15,920
ip in both the rd and the prefix i mean

2384
01:37:15,920 --> 01:37:18,400
you should look at id as only the

2385
01:37:18,400 --> 01:37:21,199
identifier it's just a identifier and

2386
01:37:21,199 --> 01:37:24,239
you have flexibility to uh

2387
01:37:24,239 --> 01:37:26,080
what you say

2388
01:37:26,080 --> 01:37:28,719
configure the rd like you want and like

2389
01:37:28,719 --> 01:37:31,280
jeff has been pointing out it's okay if

2390
01:37:31,280 --> 01:37:34,159
we bring up a new rd which encodes color

2391
01:37:34,159 --> 01:37:37,600
or if we have some way to uh have

2392
01:37:37,600 --> 01:37:39,679
a wider rd

2393
01:37:39,679 --> 01:37:42,239
i don't know that's possible but uh we

2394
01:37:42,239 --> 01:37:44,719
can have adding that a model of rd that

2395
01:37:44,719 --> 01:37:47,280
can encode color and that's also will be

2396
01:37:47,280 --> 01:37:49,840
equivalent but in my opinion it's better

2397
01:37:49,840 --> 01:37:54,880
if uh the rd identifies the pe loopback

2398
01:37:54,880 --> 01:37:56,480
because that gives a really good

2399
01:37:56,480 --> 01:37:58,320
troubleshooting guide of okay looking at

2400
01:37:58,320 --> 01:37:59,840
the rda i can know whether it is

2401
01:37:59,840 --> 01:38:02,400
originated by pe one one or pe

2402
01:38:02,400 --> 01:38:04,400
and

2403
01:38:04,400 --> 01:38:06,400
when you have multiple colors relating

2404
01:38:06,400 --> 01:38:08,159
from the p then you will have different

2405
01:38:08,159 --> 01:38:10,320
uh rds and that is where you need rd

2406
01:38:10,320 --> 01:38:12,080
there in the first place so you can use

2407
01:38:12,080 --> 01:38:15,280
pe one one colon color one p one one

2408
01:38:15,280 --> 01:38:17,920
colon color two as the rd and that gives

2409
01:38:17,920 --> 01:38:19,440
you a easy way of identifying it

2410
01:38:19,440 --> 01:38:22,560
basically encodes both the

2411
01:38:22,560 --> 01:38:24,400
ip address and the color the color will

2412
01:38:24,400 --> 01:38:26,719
be two bytes but for most

2413
01:38:26,719 --> 01:38:30,560
practical use cases that will be good

2414
01:38:30,560 --> 01:38:33,199
and i just want to

2415
01:38:33,199 --> 01:38:35,199
bring up the point that uh whatever city

2416
01:38:35,199 --> 01:38:36,480
does it basically protects the

2417
01:38:36,480 --> 01:38:38,719
investment of operators i have made an

2418
01:38:38,719 --> 01:38:40,800
operational training tooling procedures

2419
01:38:40,800 --> 01:38:42,800
so there's like nothing new here it's

2420
01:38:42,800 --> 01:38:46,560
like using uh well oiled machinery of l3

2421
01:38:46,560 --> 01:38:49,600
vpn in a new transport layer

2422
01:38:49,600 --> 01:38:52,560
okay next please

2423
01:38:55,679 --> 01:38:57,360
yeah so

2424
01:38:57,360 --> 01:38:59,119
the current status is that we are having

2425
01:38:59,119 --> 01:39:00,880
energetic discussions comparing the

2426
01:39:00,880 --> 01:39:02,639
various proposals which is always good

2427
01:39:02,639 --> 01:39:05,679
for the community and uh we have

2428
01:39:05,679 --> 01:39:07,280
requested a working

2429
01:39:07,280 --> 01:39:09,600
option and we will continue to have

2430
01:39:09,600 --> 01:39:12,320
those discussions and see how it goes

2431
01:39:12,320 --> 01:39:14,639
thank you

2432
01:39:16,719 --> 01:39:19,520
thank you kylie raj

2433
01:39:19,760 --> 01:39:21,360
again request for clarification

2434
01:39:21,360 --> 01:39:26,040
questions only sue's got the queue

2435
01:39:35,040 --> 01:39:37,520
thank you sorry my bad

2436
01:39:37,520 --> 01:39:40,520
spanish

2437
01:39:44,159 --> 01:39:46,560
things that that was just now mentioned

2438
01:39:46,560 --> 01:39:48,800
uh one of the questions was regarding

2439
01:39:48,800 --> 01:39:52,080
the the same rd originating from the

2440
01:39:52,080 --> 01:39:54,880
originating pe as khalid just mentioned

2441
01:39:54,880 --> 01:39:56,800
i'm not sure why

2442
01:39:56,800 --> 01:39:58,800
we need to advertise again the republic

2443
01:39:58,800 --> 01:40:00,159
of the same question i already asked

2444
01:40:00,159 --> 01:40:02,239
that what's the point of sending pe

2445
01:40:02,239 --> 01:40:04,000
address is still a global it's in a

2446
01:40:04,000 --> 01:40:06,000
transport network it's global what's the

2447
01:40:06,000 --> 01:40:08,800
point of sending the p address in rd

2448
01:40:08,800 --> 01:40:10,159
because you yourself mentioned you're

2449
01:40:10,159 --> 01:40:12,080
sending a pu1

2450
01:40:12,080 --> 01:40:14,880
colon some value then a pu on address

2451
01:40:14,880 --> 01:40:16,320
and again you will do the same thing for

2452
01:40:16,320 --> 01:40:17,199
another

2453
01:40:17,199 --> 01:40:19,600
vgpct route sent from the ojtp to

2454
01:40:19,600 --> 01:40:21,760
achieve the conversion so i'm not sure

2455
01:40:21,760 --> 01:40:23,520
what is the point of putting a rd in

2456
01:40:23,520 --> 01:40:25,360
flutter if you're saying for any local

2457
01:40:25,360 --> 01:40:26,480
convergence

2458
01:40:26,480 --> 01:40:28,639
you need a same article i'm not sure

2459
01:40:28,639 --> 01:40:30,159
where you're getting with it

2460
01:40:30,159 --> 01:40:32,000
that's the first point second point is

2461
01:40:32,000 --> 01:40:34,960
for the multi uh you are proposing you

2462
01:40:34,960 --> 01:40:36,400
you agree there are limitations for

2463
01:40:36,400 --> 01:40:38,960
eight to seven seven rfc

2464
01:40:38,960 --> 01:40:41,199
but you are proposing another multi-next

2465
01:40:41,199 --> 01:40:43,040
stop attribute to carry it remember

2466
01:40:43,040 --> 01:40:46,159
multi-net attribute is also an attribute

2467
01:40:46,159 --> 01:40:47,760
we are talking about

2468
01:40:47,760 --> 01:40:50,000
transport network where the label

2469
01:40:50,000 --> 01:40:52,000
allocation is per prefix for each

2470
01:40:52,000 --> 01:40:53,760
transport

2471
01:40:53,760 --> 01:40:56,000
city route you have to have a unique

2472
01:40:56,000 --> 01:40:58,080
label now if you start moving that to a

2473
01:40:58,080 --> 01:41:01,040
next top attribute

2474
01:41:01,040 --> 01:41:02,880
it's carried in the attribute update

2475
01:41:02,880 --> 01:41:05,520
message it's not good with the nlri so

2476
01:41:05,520 --> 01:41:08,159
day one you are making each nri unique

2477
01:41:08,159 --> 01:41:10,320
and remember we cannot compare

2478
01:41:10,320 --> 01:41:13,600
the bgp cpr card to bgplu pgplu was just

2479
01:41:13,600 --> 01:41:15,199
carrying a best effort today with the

2480
01:41:15,199 --> 01:41:17,280
single ip address being carried for a

2481
01:41:17,280 --> 01:41:19,600
particular pe now we may be carrying

2482
01:41:19,600 --> 01:41:21,679
many intents for a pe address the scale

2483
01:41:21,679 --> 01:41:23,600
of bgp is going much higher so i don't

2484
01:41:23,600 --> 01:41:25,760
see a reason to break the packing right

2485
01:41:25,760 --> 01:41:27,679
from start there's no reason we should

2486
01:41:27,679 --> 01:41:29,840
try to optimize thing when possible and

2487
01:41:29,840 --> 01:41:32,480
it will help when you are going across

2488
01:41:32,480 --> 01:41:34,880
one bgp domain to another eager's domain

2489
01:41:34,880 --> 01:41:37,280
that time

2490
01:41:38,080 --> 01:41:41,119
i want to just ask a point i really want

2491
01:41:41,119 --> 01:41:44,000
to hear every word you're saying and if

2492
01:41:44,000 --> 01:41:45,760
you speak a little

2493
01:41:45,760 --> 01:41:47,040
slower the

2494
01:41:47,040 --> 01:41:48,400
echo will

2495
01:41:48,400 --> 01:41:51,199
cancel it out your words are incredibly

2496
01:41:51,199 --> 01:41:54,159
important to me right now

2497
01:41:54,159 --> 01:41:56,880
okay i i will be a little slower yeah my

2498
01:41:56,880 --> 01:41:59,199
my point was

2499
01:41:59,199 --> 01:42:01,040
one of the things that has been agreed

2500
01:42:01,040 --> 01:42:02,440
is that

2501
01:42:02,440 --> 01:42:05,199
8277 has the limitations because it

2502
01:42:05,199 --> 01:42:07,040
encodes the label

2503
01:42:07,040 --> 01:42:09,600
within the nlri in the hard coded

2504
01:42:09,600 --> 01:42:11,600
fashion which breaks which doesn't

2505
01:42:11,600 --> 01:42:13,920
support multiple end caps if required

2506
01:42:13,920 --> 01:42:14,960
during

2507
01:42:14,960 --> 01:42:19,199
migration and coexistence and as well as

2508
01:42:20,239 --> 01:42:22,159
it has a limitations for any future use

2509
01:42:22,159 --> 01:42:24,800
cases like other type of encapsulation

2510
01:42:24,800 --> 01:42:27,199
so and the proposal is that we should

2511
01:42:27,199 --> 01:42:29,600
move to multi-next stop attribute

2512
01:42:29,600 --> 01:42:32,159
remember it's an attribute in bgp update

2513
01:42:32,159 --> 01:42:34,080
message and we are talking about

2514
01:42:34,080 --> 01:42:36,960
encapsulation informations like label or

2515
01:42:36,960 --> 01:42:38,480
equivalent for other encapsulation in

2516
01:42:38,480 --> 01:42:40,960
the future so if we start carrying such

2517
01:42:40,960 --> 01:42:43,440
information in the attribute not in the

2518
01:42:43,440 --> 01:42:47,440
nlri as car has suggested we are day one

2519
01:42:47,440 --> 01:42:50,480
baking breaking the packing of pgp

2520
01:42:50,480 --> 01:42:52,320
and we're not talking about bgplu

2521
01:42:52,320 --> 01:42:54,480
anymore that was only a single address

2522
01:42:54,480 --> 01:42:56,800
for a particular global pe address now

2523
01:42:56,800 --> 01:42:58,400
we are talking about

2524
01:42:58,400 --> 01:43:00,560
multiple intents that mean multiple

2525
01:43:00,560 --> 01:43:02,639
routes carrying the same pe address for

2526
01:43:02,639 --> 01:43:04,960
each of the interns and if we disregard

2527
01:43:04,960 --> 01:43:06,159
the packing

2528
01:43:06,159 --> 01:43:07,520
i'm not sure where we are going with

2529
01:43:07,520 --> 01:43:09,840
that it's we should not do that at least

2530
01:43:09,840 --> 01:43:12,960
and that's what my point is

2531
01:43:12,960 --> 01:43:15,760
yeah so my response to that is that even

2532
01:43:15,760 --> 01:43:19,600
with bgplu doing per prefix label and

2533
01:43:19,600 --> 01:43:20,800
doing the

2534
01:43:20,800 --> 01:43:23,280
putting the label in the nri you do have

2535
01:43:23,280 --> 01:43:25,360
other attributes that are attached today

2536
01:43:25,360 --> 01:43:28,639
to each uh at each uh bgplu origination

2537
01:43:28,639 --> 01:43:30,480
point like

2538
01:43:30,480 --> 01:43:32,719
origin community or some other community

2539
01:43:32,719 --> 01:43:35,600
which is used for operational use so you

2540
01:43:35,600 --> 01:43:36,960
you're not getting that much packing

2541
01:43:36,960 --> 01:43:39,040
today even today

2542
01:43:39,040 --> 01:43:39,760
so

2543
01:43:39,760 --> 01:43:42,400
complicating the protocol uh to do this

2544
01:43:42,400 --> 01:43:44,159
kind of artificial packing so that is

2545
01:43:44,159 --> 01:43:45,360
what i think

2546
01:43:45,360 --> 01:43:46,960
is unnecessary

2547
01:43:46,960 --> 01:43:49,119
so

2548
01:43:49,520 --> 01:43:51,679
it's a debatable it's always put i'm not

2549
01:43:51,679 --> 01:43:53,440
sure it's always put when you go to ebg

2550
01:43:53,440 --> 01:43:55,440
domain all origination in at least

2551
01:43:55,440 --> 01:43:57,520
originator id is removed or the those

2552
01:43:57,520 --> 01:43:59,520
things are removed so we can take a i've

2553
01:43:59,520 --> 01:44:00,960
clearly said when i send it to remote

2554
01:44:00,960 --> 01:44:03,119
domain we can always take the advantage

2555
01:44:03,119 --> 01:44:06,159
of packing down this is a multi-domain

2556
01:44:06,159 --> 01:44:07,440
transport we're talking about it's not a

2557
01:44:07,440 --> 01:44:09,119
single domain we should not talk in that

2558
01:44:09,119 --> 01:44:10,800
so we should talk about scalable

2559
01:44:10,800 --> 01:44:11,760
solution

2560
01:44:11,760 --> 01:44:13,679
i am going to remind everybody we have

2561
01:44:13,679 --> 01:44:15,040
one more presentation to get through

2562
01:44:15,040 --> 01:44:16,960
before we actually have full no

2563
01:44:16,960 --> 01:44:18,320
discussion about the overall solution

2564
01:44:18,320 --> 01:44:21,040
set so please restrict your questions to

2565
01:44:21,040 --> 01:44:23,360
clarification questions for the moment

2566
01:44:23,360 --> 01:44:24,960
sure okay

2567
01:44:24,960 --> 01:44:26,239
do you want me to take your first

2568
01:44:26,239 --> 01:44:28,320
question right now or

2569
01:44:28,320 --> 01:44:30,320
no we have one more presentation to do

2570
01:44:30,320 --> 01:44:31,840
um okay

2571
01:44:31,840 --> 01:44:33,520
so harry do you have any clarification

2572
01:44:33,520 --> 01:44:35,840
questions

2573
01:44:45,119 --> 01:44:49,080
should we hurry we don't hear you

2574
01:44:51,440 --> 01:44:53,679
let me uh yes

2575
01:44:53,679 --> 01:44:55,760
can you hear me

2576
01:44:55,760 --> 01:44:57,760
hello can you hear me

2577
01:44:57,760 --> 01:44:59,199
i can hear you now

2578
01:44:59,199 --> 01:45:00,960
yeah this is not a clarification

2579
01:45:00,960 --> 01:45:02,560
question i wanted to bring up the color

2580
01:45:02,560 --> 01:45:04,400
mapping if you think this is a good

2581
01:45:04,400 --> 01:45:06,080
discussion for the open discussion i can

2582
01:45:06,080 --> 01:45:08,000
come back later let's come back to the

2583
01:45:08,000 --> 01:45:09,280
open discussion you'd like to give

2584
01:45:09,280 --> 01:45:11,040
everybody a fair shake ketan do you have

2585
01:45:11,040 --> 01:45:13,040
any clarification questions

2586
01:45:13,040 --> 01:45:14,320
yeah

2587
01:45:14,320 --> 01:45:16,239
here yes i had a clarification question

2588
01:45:16,239 --> 01:45:19,440
uh i heard uh i heard you mention uh

2589
01:45:19,440 --> 01:45:21,360
talk about uh multi

2590
01:45:21,360 --> 01:45:24,159
desktop attribute and how to carry and

2591
01:45:24,159 --> 01:45:26,639
calculations multi encapsulation

2592
01:45:26,639 --> 01:45:29,199
but i have not done any of that in uh

2593
01:45:29,199 --> 01:45:30,960
draft

2594
01:45:30,960 --> 01:45:32,719
so is that something

2595
01:45:32,719 --> 01:45:35,199
different new uh that's

2596
01:45:35,199 --> 01:45:36,719
yeah yeah

2597
01:45:36,719 --> 01:45:38,719
yeah that is a different draft and it is

2598
01:45:38,719 --> 01:45:40,960
not a prerequisite for ct but that is

2599
01:45:40,960 --> 01:45:43,360
basically uh just

2600
01:45:43,360 --> 01:45:45,840
forward direction

2601
01:45:45,840 --> 01:45:47,040
okay so

2602
01:45:47,040 --> 01:45:50,159
just again clarification then uh am i

2603
01:45:50,159 --> 01:45:52,560
right to assume that ct is focused only

2604
01:45:52,560 --> 01:45:55,840
on mpls like bgplu was currently

2605
01:45:55,840 --> 01:45:58,080
and then some more stuff would be added

2606
01:45:58,080 --> 01:46:01,280
later for other encapsulations

2607
01:46:01,280 --> 01:46:04,000
so ct has a section for other data types

2608
01:46:04,000 --> 01:46:08,080
like srv6 and for ip tunneling

2609
01:46:08,080 --> 01:46:10,239
that also it works

2610
01:46:10,239 --> 01:46:11,760
those things are already supported even

2611
01:46:11,760 --> 01:46:14,000
without martinez starbucks

2612
01:46:14,000 --> 01:46:15,520
okay so i think we can take it to the

2613
01:46:15,520 --> 01:46:17,920
list but i just a quick thing i think

2614
01:46:17,920 --> 01:46:20,320
that's grossly insufficiently specified

2615
01:46:20,320 --> 01:46:21,840
uh in my view

2616
01:46:21,840 --> 01:46:23,360
thanks

2617
01:46:23,360 --> 01:46:24,320
okay

2618
01:46:24,320 --> 01:46:25,920
so

2619
01:46:25,920 --> 01:46:29,679
run you have a presentation

2620
01:46:39,760 --> 01:46:41,600
can you hear me

2621
01:46:41,600 --> 01:46:43,760
we can hear you

2622
01:46:43,760 --> 01:46:47,040
okay thank you in fact uh hello i will

2623
01:46:47,040 --> 01:46:50,159
probably i'm the dte but i'm going to

2624
01:46:50,159 --> 01:46:51,199
introduce

2625
01:46:51,199 --> 01:46:55,119
my network selection via plu

2626
01:46:55,119 --> 01:46:57,839
next please

2627
01:46:59,440 --> 01:47:02,320
yes this document aims to

2628
01:47:02,320 --> 01:47:04,560
throw into domain network selection

2629
01:47:04,560 --> 01:47:08,080
problem using existing technologies it

2630
01:47:08,080 --> 01:47:12,639
attempts to establish a multiple gpr usp

2631
01:47:12,639 --> 01:47:16,080
of different colors for all all multiple

2632
01:47:16,080 --> 01:47:19,360
prefix whose teaching mathematical

2633
01:47:19,360 --> 01:47:21,280
network segments

2634
01:47:21,280 --> 01:47:24,239
this document this describes the colored

2635
01:47:24,239 --> 01:47:28,560
ptr usp which contains two options

2636
01:47:28,560 --> 01:47:31,679
one is to define dramatical paths for

2637
01:47:31,679 --> 01:47:34,639
the same destination prefix and

2638
01:47:34,639 --> 01:47:37,920
advertise the ubp update message and

2639
01:47:37,920 --> 01:47:40,480
each updated message can contain the

2640
01:47:40,480 --> 01:47:43,119
color extended communicate combinated

2641
01:47:43,119 --> 01:47:45,679
with different color value which helps

2642
01:47:45,679 --> 01:47:49,040
to select the land and the lighting

2643
01:47:49,040 --> 01:47:51,040
without resources

2644
01:47:51,040 --> 01:47:54,080
this code requires additional pass

2645
01:47:54,080 --> 01:47:57,119
function defined in rfc

2646
01:47:57,119 --> 01:47:58,880
7911

2647
01:47:58,880 --> 01:48:01,760
the other is that multiple prefix

2648
01:48:01,760 --> 01:48:04,880
and the metal colors are configured on

2649
01:48:04,880 --> 01:48:06,560
pe

2650
01:48:06,560 --> 01:48:10,000
when prefix corresponds to one color

2651
01:48:10,000 --> 01:48:11,199
this mode

2652
01:48:11,199 --> 01:48:13,520
doesn't require two additional paths

2653
01:48:13,520 --> 01:48:15,520
functions

2654
01:48:15,520 --> 01:48:18,920
next please

2655
01:48:21,119 --> 01:48:22,560
yes this is

2656
01:48:22,560 --> 01:48:25,280
the call of the bgplu capability

2657
01:48:25,280 --> 01:48:27,520
advertisement

2658
01:48:27,520 --> 01:48:30,159
we use the capability advertisement

2659
01:48:30,159 --> 01:48:33,119
procedures which is defined i've seen

2660
01:48:33,119 --> 01:48:35,280
3392

2661
01:48:35,280 --> 01:48:37,760
to to determine whether the speaker

2662
01:48:37,760 --> 01:48:40,639
could use current bgpr opticss with a

2663
01:48:40,639 --> 01:48:42,000
particular

2664
01:48:42,000 --> 01:48:43,760
appear

2665
01:48:43,760 --> 01:48:45,920
the fields in the capability obviously

2666
01:48:45,920 --> 01:48:48,719
no parameter asset as follows

2667
01:48:48,719 --> 01:48:52,080
for the capability code field

2668
01:48:52,080 --> 01:48:55,280
to be defined which indicates colored

2669
01:48:55,280 --> 01:48:57,920
dpru opticians capabilities

2670
01:48:57,920 --> 01:49:00,800
and therefore the capability why uh wire

2671
01:49:00,800 --> 01:49:05,520
fields it includes afi and safi

2672
01:49:05,520 --> 01:49:07,199
for the afi

2673
01:49:07,199 --> 01:49:08,880
value is one

2674
01:49:08,880 --> 01:49:10,480
r2

2675
01:49:10,480 --> 01:49:13,119
for safi

2676
01:49:13,119 --> 01:49:15,760
it's the value is y unicast all four

2677
01:49:15,760 --> 01:49:19,920
bgpro next please

2678
01:49:21,599 --> 01:49:24,320
this is the deploy considerations

2679
01:49:24,320 --> 01:49:28,320
considerations uh all routers authors

2680
01:49:28,320 --> 01:49:31,119
require the colored bdpr capability

2681
01:49:31,119 --> 01:49:32,560
advertisement

2682
01:49:32,560 --> 01:49:35,119
for transit network domains that don't

2683
01:49:35,119 --> 01:49:37,360
support colored bplu

2684
01:49:37,360 --> 01:49:39,679
process as follows

2685
01:49:39,679 --> 01:49:41,360
with the colored

2686
01:49:41,360 --> 01:49:44,639
label receives the bpr usually if it

2687
01:49:44,639 --> 01:49:47,360
continues to develop ties advertise the

2688
01:49:47,360 --> 01:49:49,920
bpl users to the app

2689
01:49:49,920 --> 01:49:52,800
stream labels that supports the colored

2690
01:49:52,800 --> 01:49:54,239
pdpro

2691
01:49:54,239 --> 01:49:57,199
the bpio loads shouldn't be changed to

2692
01:49:57,199 --> 01:49:59,520
the colored ppro routes

2693
01:49:59,520 --> 01:50:01,760
always receiving the color the bpru

2694
01:50:01,760 --> 01:50:04,239
advertisement from the neighbors that

2695
01:50:04,239 --> 01:50:07,280
don't that's supposed to color the bpio

2696
01:50:07,280 --> 01:50:10,080
if the uh the test may continue to be

2697
01:50:10,080 --> 01:50:13,520
advertised to the upstream uh enable as

2698
01:50:13,520 --> 01:50:16,400
a diagnostic board caller the bpio at

2699
01:50:16,400 --> 01:50:17,760
the uh the

2700
01:50:17,760 --> 01:50:20,719
advertisement advertisement should be

2701
01:50:20,719 --> 01:50:24,560
changed to be pro advertisement

2702
01:50:24,560 --> 01:50:27,760
that is advertised one out of multiple

2703
01:50:27,760 --> 01:50:29,360
paths um

2704
01:50:29,360 --> 01:50:31,360
the reason for this different definition

2705
01:50:31,360 --> 01:50:34,719
is that the within the increased node i

2706
01:50:34,719 --> 01:50:36,719
determine that

2707
01:50:36,719 --> 01:50:39,920
this color be which colors bpr us end to

2708
01:50:39,920 --> 01:50:40,800
end

2709
01:50:40,800 --> 01:50:43,520
next please

2710
01:50:46,719 --> 01:50:49,920
yes here are two topics initiated by

2711
01:50:49,920 --> 01:50:52,400
chair jeff the question one how does

2712
01:50:52,400 --> 01:50:54,080
root

2713
01:50:54,080 --> 01:50:57,440
resolution work with your feature

2714
01:50:57,440 --> 01:51:00,159
for for our color the ppl

2715
01:51:00,159 --> 01:51:01,599
is request

2716
01:51:01,599 --> 01:51:04,800
recursive and color of wired we use

2717
01:51:04,800 --> 01:51:08,080
color and next hope in the lookup king i

2718
01:51:08,080 --> 01:51:10,960
will choose and will choose only sla

2719
01:51:10,960 --> 01:51:15,119
paths they include sr police stp flag fa

2720
01:51:15,119 --> 01:51:17,599
and r3pte

2721
01:51:17,599 --> 01:51:20,320
rpm based on polis

2722
01:51:20,320 --> 01:51:23,040
next please

2723
01:51:25,040 --> 01:51:27,040
for question 2

2724
01:51:27,040 --> 01:51:27,920
root

2725
01:51:27,920 --> 01:51:31,599
original nation and propagation

2726
01:51:31,599 --> 01:51:33,599
because it configured

2727
01:51:33,599 --> 01:51:36,480
consider the following example of

2728
01:51:36,480 --> 01:51:39,920
established metaphor ptlu lcp for

2729
01:51:39,920 --> 01:51:42,800
different colors in cro across domain

2730
01:51:42,800 --> 01:51:44,400
scenarios

2731
01:51:44,400 --> 01:51:45,840
in this figure

2732
01:51:45,840 --> 01:51:49,840
p1 at the word type advertise to pass

2733
01:51:49,840 --> 01:51:52,000
one point one point one point one plus

2734
01:51:52,000 --> 01:51:54,639
id one calculates the color one

2735
01:51:54,639 --> 01:51:57,440
attribute and one point one point one

2736
01:51:57,440 --> 01:52:00,480
point r one plus i two carries the color

2737
01:52:00,480 --> 01:52:03,760
two attributes to espr1

2738
01:52:03,760 --> 01:52:06,239
p1 advertises the bounding between

2739
01:52:06,239 --> 01:52:08,199
prefix

2740
01:52:08,199 --> 01:52:13,040
1.1.1.1 and labeled 0 because of the end

2741
01:52:13,040 --> 01:52:17,119
note both paths has the same label value

2742
01:52:17,119 --> 01:52:21,599
to zero radial spry receive receives

2743
01:52:21,599 --> 01:52:24,400
these two parts from pcpu1 and when

2744
01:52:24,400 --> 01:52:28,159
sending to sbr2 it modifies the next

2745
01:52:28,159 --> 01:52:32,080
hope to itself and advertise

2746
01:52:32,080 --> 01:52:35,280
other allocate two new labels based on

2747
01:52:35,280 --> 01:52:38,800
prefix facility and color and so in the

2748
01:52:38,800 --> 01:52:43,599
fixture uh feature spr one since uh

2749
01:52:43,599 --> 01:52:46,119
to pass to spr2

2750
01:52:46,119 --> 01:52:50,400
1.1.1 plus id1 okay with color one plus

2751
01:52:50,400 --> 01:52:52,000
label uh

2752
01:52:52,000 --> 01:52:55,440
two zero one and one point one point one

2753
01:52:55,440 --> 01:52:59,840
plus id two calories color 2 plus label

2754
01:52:59,840 --> 01:53:04,560
2 0 2. similar sbr2 also generates two

2755
01:53:04,560 --> 01:53:07,599
different labels based on the prefix id

2756
01:53:07,599 --> 01:53:11,280
and color as shown in the feature

2757
01:53:11,280 --> 01:53:14,639
multiple end-to-end pgpr usp

2758
01:53:14,639 --> 01:53:16,480
are established

2759
01:53:16,480 --> 01:53:18,880
different bgplus

2760
01:53:18,880 --> 01:53:21,760
selects and like i say all eternals

2761
01:53:21,760 --> 01:53:24,239
according to zero colors

2762
01:53:24,239 --> 01:53:27,559
next please

2763
01:53:29,840 --> 01:53:32,960
yeah next stop uh comments are welcome

2764
01:53:32,960 --> 01:53:35,280
so we think this solution is very simple

2765
01:53:35,280 --> 01:53:37,280
and easy to implement

2766
01:53:37,280 --> 01:53:38,239
and the

2767
01:53:38,239 --> 01:53:40,480
talent don't need uh

2768
01:53:40,480 --> 01:53:44,560
to do a lot of protocol extensions so i

2769
01:53:44,560 --> 01:53:46,880
think we think it's all ready to cover

2770
01:53:46,880 --> 01:53:49,119
adopts

2771
01:53:49,119 --> 01:53:50,639
comments

2772
01:53:50,639 --> 01:53:54,440
that's all thank you

2773
01:54:05,280 --> 01:54:07,760
if there any clarification questions for

2774
01:54:07,760 --> 01:54:09,040
ron before we open up for general

2775
01:54:09,040 --> 01:54:11,519
discussion

2776
01:54:16,159 --> 01:54:18,719
clarification

2777
01:54:19,360 --> 01:54:22,719
just a clarification question uh uh

2778
01:54:22,719 --> 01:54:24,800
i mean isn't a label considered a

2779
01:54:24,800 --> 01:54:28,320
non-key fee of uh

2780
01:54:28,320 --> 01:54:30,320
for the bgplu

2781
01:54:30,320 --> 01:54:31,440
and uh

2782
01:54:31,440 --> 01:54:34,239
i mean how is uh how do the

2783
01:54:34,239 --> 01:54:37,520
how are the paths managed if uh

2784
01:54:37,520 --> 01:54:39,040
you know there are different labels

2785
01:54:39,040 --> 01:54:39,840
allow

2786
01:54:39,840 --> 01:54:41,840
signal with different paths uh maybe i

2787
01:54:41,840 --> 01:54:43,040
missed something

2788
01:54:43,040 --> 01:54:44,400
and

2789
01:54:44,400 --> 01:54:46,940
if you could clarify that part

2790
01:54:46,940 --> 01:54:50,129
[Music]

2791
01:55:00,159 --> 01:55:02,080
it's not specified clearly but isn't the

2792
01:55:02,080 --> 01:55:05,040
label considered as a non-key

2793
01:55:05,040 --> 01:55:05,760
uh

2794
01:55:05,760 --> 01:55:07,920
in the bgplu

2795
01:55:07,920 --> 01:55:10,800
in in most implementation

2796
01:55:10,800 --> 01:55:14,960
and if so then how how are uh you know

2797
01:55:14,960 --> 01:55:16,239
different

2798
01:55:16,239 --> 01:55:19,040
labels being signaled for different uh

2799
01:55:19,040 --> 01:55:20,320
colors uh

2800
01:55:20,320 --> 01:55:22,480
for the same prefix maybe i missed

2801
01:55:22,480 --> 01:55:24,880
something basic if you could clarify oh

2802
01:55:24,880 --> 01:55:26,000
okay

2803
01:55:26,000 --> 01:55:27,760
um

2804
01:55:27,760 --> 01:55:31,119
we we allocated uh the labels based on

2805
01:55:31,119 --> 01:55:34,000
prefix plus id and colors

2806
01:55:34,000 --> 01:55:36,960
so i think the color is the uh

2807
01:55:36,960 --> 01:55:40,080
so i i think the color allocated is late

2808
01:55:40,080 --> 01:55:41,119
so

2809
01:55:41,119 --> 01:55:42,560
i don't

2810
01:55:42,560 --> 01:55:43,360
if

2811
01:55:43,360 --> 01:55:47,400
if i answer your question

2812
01:55:47,760 --> 01:55:50,560
take it to the list or you know on the

2813
01:55:50,560 --> 01:55:53,760
chat just to save time

2814
01:55:53,760 --> 01:55:56,760
okay

2815
01:56:01,840 --> 01:56:04,320
you mentioned on the boundaries between

2816
01:56:04,320 --> 01:56:05,679
speakers that you understand the

2817
01:56:05,679 --> 01:56:07,679
capability and don't you'll just choose

2818
01:56:07,679 --> 01:56:09,679
one of the puzzles i think you really

2819
01:56:09,679 --> 01:56:11,679
need deterministic time breaking you

2820
01:56:11,679 --> 01:56:14,880
cannot have different bgp speakers

2821
01:56:14,880 --> 01:56:17,760
advertising different

2822
01:56:17,760 --> 01:56:19,599
paths

2823
01:56:19,599 --> 01:56:21,360
hey jeff quick note we've got five

2824
01:56:21,360 --> 01:56:24,320
minutes warning

2825
01:56:25,599 --> 01:56:27,679
yes unfortunately thankfully some of the

2826
01:56:27,679 --> 01:56:30,480
cross discussion did happen earlier

2827
01:56:30,480 --> 01:56:31,599
so

2828
01:56:31,599 --> 01:56:34,080
we are now open for resuming general

2829
01:56:34,080 --> 01:56:37,840
discussion please give yourself up

2830
01:56:39,280 --> 01:56:40,880
okay thank you

2831
01:56:40,880 --> 01:56:43,440
thank you man

2832
01:56:48,400 --> 01:56:51,400
hurry

2833
01:57:09,199 --> 01:57:12,239
uh you know you've mentioned in in the

2834
01:57:12,239 --> 01:57:14,080
in the recent today's chat as well as in

2835
01:57:14,080 --> 01:57:16,239
the last interview this discussion did

2836
01:57:16,239 --> 01:57:17,840
come up

2837
01:57:17,840 --> 01:57:19,840
about the color mapping between the

2838
01:57:19,840 --> 01:57:22,320
domains uh this is something that you

2839
01:57:22,320 --> 01:57:24,560
know i want to make sure that we all

2840
01:57:24,560 --> 01:57:26,239
have a common understanding

2841
01:57:26,239 --> 01:57:28,960
um specifically with respect to the car

2842
01:57:28,960 --> 01:57:32,000
they talk about bringing in the lc lcm

2843
01:57:32,000 --> 01:57:33,840
which brings in the community mapping

2844
01:57:33,840 --> 01:57:35,920
between the domains that have different

2845
01:57:35,920 --> 01:57:36,960
colors

2846
01:57:36,960 --> 01:57:39,119
now

2847
01:57:39,119 --> 01:57:41,440
clearly this brings in

2848
01:57:41,440 --> 01:57:43,119
complexity in terms of troubleshooting

2849
01:57:43,119 --> 01:57:45,280
because when we receive a prefix at a

2850
01:57:45,280 --> 01:57:46,960
particular remote domain

2851
01:57:46,960 --> 01:57:48,560
which has the color embedded in the

2852
01:57:48,560 --> 01:57:50,960
color nlr encoding which is the color

2853
01:57:50,960 --> 01:57:54,320
encoded in the nlri and it has the lcm

2854
01:57:54,320 --> 01:57:56,080
which has a different color so which

2855
01:57:56,080 --> 01:57:57,840
color to really look into and which

2856
01:57:57,840 --> 01:58:00,800
color to map to so that's something that

2857
01:58:00,800 --> 01:58:02,639
we'll have to go through on a node by

2858
01:58:02,639 --> 01:58:04,639
node basis to the originating node to

2859
01:58:04,639 --> 01:58:06,560
understand where the color and what's

2860
01:58:06,560 --> 01:58:07,280
the

2861
01:58:07,280 --> 01:58:09,280
real intent of this color is

2862
01:58:09,280 --> 01:58:11,280
now we've been hearing from swadeshi and

2863
01:58:11,280 --> 01:58:12,719
dj that

2864
01:58:12,719 --> 01:58:14,960
this is a remote case and this is a not

2865
01:58:14,960 --> 01:58:17,840
a common case but this is exactly what

2866
01:58:17,840 --> 01:58:20,320
we did not hear a couple years ago in

2867
01:58:20,320 --> 01:58:22,560
one of the idea meetings about

2868
01:58:22,560 --> 01:58:23,840
specifically the color mapping between

2869
01:58:23,840 --> 01:58:26,320
providers so i want to know what is the

2870
01:58:26,320 --> 01:58:29,199
real scenario here um i want to open up

2871
01:58:29,199 --> 01:58:31,679
the forum to see what others have to say

2872
01:58:31,679 --> 01:58:33,840
i know we've heard from both the ct

2873
01:58:33,840 --> 01:58:35,760
authors and the co-authors but anybody

2874
01:58:35,760 --> 01:58:38,239
else would want to comment on how easy

2875
01:58:38,239 --> 01:58:40,480
it is to color mapping between providers

2876
01:58:40,480 --> 01:58:42,719
and domains uh and is it a normal case

2877
01:58:42,719 --> 01:58:45,040
whereas a remote case

2878
01:58:45,040 --> 01:58:49,239
would appreciate any comment on that

2879
01:58:51,920 --> 01:58:53,599
did one of the current ct authors wanted

2880
01:58:53,599 --> 01:58:56,320
to come out of that

2881
01:59:11,520 --> 01:59:13,840
multiple times and replied on the list

2882
01:59:13,840 --> 01:59:15,920
as well as to the chef very clearly and

2883
01:59:15,920 --> 01:59:18,880
jeff has also summarized in his mail

2884
01:59:18,880 --> 01:59:20,800
it's clearly said that in the single

2885
01:59:20,800 --> 01:59:22,159
color domain

2886
01:59:22,159 --> 01:59:24,400
it's a color in the analog that

2887
01:59:24,400 --> 01:59:26,320
is the color i don't think there's any

2888
01:59:26,320 --> 01:59:28,080
confusion and

2889
01:59:28,080 --> 01:59:29,040
once it

2890
01:59:29,040 --> 01:59:30,880
crosses the boundary yeah you can

2891
01:59:30,880 --> 01:59:33,760
rewrite the l you can introduce lcm

2892
01:59:33,760 --> 01:59:35,520
which will carry the color

2893
01:59:35,520 --> 01:59:36,800
it's very clear i'm not sure where the

2894
01:59:36,800 --> 01:59:37,920
confusion is

2895
01:59:37,920 --> 01:59:39,679
uh also why you're trying to bring up a

2896
01:59:39,679 --> 01:59:41,440
confusion it's very for single color

2897
01:59:41,440 --> 01:59:42,880
domains very okay it's easy there's no

2898
01:59:42,880 --> 01:59:44,480
lcm present

2899
01:59:44,480 --> 01:59:46,880
your nlri carries the intent color uh

2900
01:59:46,880 --> 01:59:48,560
there's no present that's the one

2901
01:59:48,560 --> 01:59:50,880
there's no there's no confusion here at

2902
01:59:50,880 --> 01:59:53,760
all yes so so this if i comment i'm very

2903
01:59:53,760 --> 01:59:55,520
clear on this yes for a single color

2904
01:59:55,520 --> 01:59:58,000
domain yes i am completely with you and

2905
01:59:58,000 --> 01:59:59,679
remember the optimization we have done

2906
01:59:59,679 --> 02:00:00,719
and remember

2907
02:00:00,719 --> 02:00:02,320
and share remember the optimization we

2908
02:00:02,320 --> 02:00:05,280
have done we had make it work like bgp

2909
02:00:05,280 --> 02:00:07,760
lu with all the convergence all the

2910
02:00:07,760 --> 02:00:10,000
advantages no repetition of

2911
02:00:10,000 --> 02:00:13,119
ip addresses in different places

2912
02:00:13,119 --> 02:00:15,280
and

2913
02:00:15,360 --> 02:00:16,880
intent is right in front in the nri

2914
02:00:16,880 --> 02:00:18,880
that's the right data model opaque

2915
02:00:18,880 --> 02:00:20,000
putting a

2916
02:00:20,000 --> 02:00:23,520
global pe address putting a rd in front

2917
02:00:23,520 --> 02:00:26,639
of it and making it opaque

2918
02:00:26,639 --> 02:00:28,320
many things will fail in future not just

2919
02:00:28,320 --> 02:00:29,520
what we have brought up local

2920
02:00:29,520 --> 02:00:32,480
convergence or had to

2921
02:00:32,480 --> 02:00:34,000
remove the rd

2922
02:00:34,000 --> 02:00:34,800
and

2923
02:00:34,800 --> 02:00:36,639
try to bring him in the single table

2924
02:00:36,639 --> 02:00:38,800
then advertise the two routes out

2925
02:00:38,800 --> 02:00:41,119
because

2926
02:00:53,440 --> 02:00:55,760
please sure swadesh can you please

2927
02:00:55,760 --> 02:00:58,480
answer srihari's question where he feels

2928
02:00:58,480 --> 02:01:00,400
the debug ability amongst one of the

2929
02:01:00,400 --> 02:01:02,480
many things is concerned

2930
02:01:02,480 --> 02:01:03,440
no david

2931
02:01:03,440 --> 02:01:04,560
so

2932
02:01:04,560 --> 02:01:06,840
specifically in the multi-color case

2933
02:01:06,840 --> 02:01:09,520
yeah basically i explicitly answered

2934
02:01:09,520 --> 02:01:11,840
already that that once you cross the a

2935
02:01:11,840 --> 02:01:14,080
single colored domain

2936
02:01:14,080 --> 02:01:16,320
cross it's a lcm you see the lsim and

2937
02:01:16,320 --> 02:01:18,480
you know what is the color of the what

2938
02:01:18,480 --> 02:01:19,280
is the

2939
02:01:19,280 --> 02:01:20,960
effective color of the

2940
02:01:20,960 --> 02:01:23,040
transport thank you

2941
02:01:23,040 --> 02:01:26,480
there's nothing to be doubted

2942
02:01:26,880 --> 02:01:28,480
and you also make a point that this is a

2943
02:01:28,480 --> 02:01:30,000
remote case or a

2944
02:01:30,000 --> 02:01:31,440
rare case of

2945
02:01:31,440 --> 02:01:34,560
color mapping between providers uh so

2946
02:01:34,560 --> 02:01:36,880
it's really

2947
02:01:41,520 --> 02:01:43,280
right single administrator we all agree

2948
02:01:43,280 --> 02:01:44,880
on that it's the transport network we're

2949
02:01:44,880 --> 02:01:46,800
talking about at this moment and it's

2950
02:01:46,800 --> 02:01:48,960
operated by a single administrator so

2951
02:01:48,960 --> 02:01:51,199
single color domain would be the

2952
02:01:51,199 --> 02:01:53,840
most frequent case in the rare scenario

2953
02:01:53,840 --> 02:01:56,159
egb card takes care of it

2954
02:01:56,159 --> 02:01:58,159
so but we are going to address this i am

2955
02:01:58,159 --> 02:01:59,840
only questioning so i'm only questioning

2956
02:01:59,840 --> 02:02:01,119
you me you're making a statement that

2957
02:02:01,119 --> 02:02:02,719
this is a rare case

2958
02:02:02,719 --> 02:02:05,119
rather

2959
02:02:07,360 --> 02:02:09,440
why i highlight that point is

2960
02:02:09,440 --> 02:02:11,520
we don't want to penalize

2961
02:02:11,520 --> 02:02:13,920
the bgplu advantages

2962
02:02:13,920 --> 02:02:15,280
just for

2963
02:02:15,280 --> 02:02:16,239
some

2964
02:02:16,239 --> 02:02:17,199
percentage of cases where multiple uh

2965
02:02:17,199 --> 02:02:19,199
multiple color domains will come we

2966
02:02:19,199 --> 02:02:21,119
don't want to penalize that

2967
02:02:21,119 --> 02:02:22,320
and that's what

2968
02:02:22,320 --> 02:02:23,599
you guys have been approaching but we

2969
02:02:23,599 --> 02:02:26,080
don't want to approach that way okay

2970
02:02:26,080 --> 02:02:28,800
i must i must stop this question

2971
02:02:28,800 --> 02:02:30,560
uh we we have limited time left we are

2972
02:02:30,560 --> 02:02:32,080
going to be colliding with the room so

2973
02:02:32,080 --> 02:02:33,679
we're going to continue for another you

2974
02:02:33,679 --> 02:02:35,599
know six minutes at most

2975
02:02:35,599 --> 02:02:36,800
so

2976
02:02:36,800 --> 02:02:38,800
srihari please take your question to the

2977
02:02:38,800 --> 02:02:40,239
list in detail and let's actually

2978
02:02:40,239 --> 02:02:41,920
resolve this since we do continue coming

2979
02:02:41,920 --> 02:02:43,119
back to it

2980
02:02:43,119 --> 02:02:44,840
ketan you have the

2981
02:02:44,840 --> 02:02:48,960
mic uh thank you uh

2982
02:02:49,199 --> 02:02:51,199
i have put this in the chat but i wanted

2983
02:02:51,199 --> 02:02:53,840
to bring it on the mic as well uh

2984
02:02:53,840 --> 02:02:56,400
because there is debate on the you know

2985
02:02:56,400 --> 02:02:59,360
nlri design of the car and

2986
02:02:59,360 --> 02:03:01,520
you know why encapsulation information

2987
02:03:01,520 --> 02:03:02,960
is being put there

2988
02:03:02,960 --> 02:03:06,080
uh and this is done to support uh

2989
02:03:06,080 --> 02:03:08,800
signaling of multiple encapsulations

2990
02:03:08,800 --> 02:03:11,440
uh we have heard today from

2991
02:03:11,440 --> 02:03:14,400
the city authors uh uh

2992
02:03:14,400 --> 02:03:16,800
a similar or a different they have i

2993
02:03:16,800 --> 02:03:18,639
mean there is a proposal to how to do

2994
02:03:18,639 --> 02:03:22,239
that as well uh in that city proposal so

2995
02:03:22,239 --> 02:03:23,920
i would request if you know that

2996
02:03:23,920 --> 02:03:25,119
information

2997
02:03:25,119 --> 02:03:28,480
is added into the city proposal uh so

2998
02:03:28,480 --> 02:03:30,480
that now right now it just comes across

2999
02:03:30,480 --> 02:03:32,880
like an mpls only solution

3000
02:03:32,880 --> 02:03:34,800
if it is multi-encapsulation if that

3001
02:03:34,800 --> 02:03:37,280
detail is added then perhaps the working

3002
02:03:37,280 --> 02:03:39,679
group has a you know fair apple to apple

3003
02:03:39,679 --> 02:03:40,960
comparison

3004
02:03:40,960 --> 02:03:43,040
of you know what's the complexity and

3005
02:03:43,040 --> 02:03:46,639
what's uh you know uh going on there

3006
02:03:46,639 --> 02:03:49,040
that's all

3007
02:03:49,280 --> 02:03:50,719
thank you caitlyn

3008
02:03:50,719 --> 02:03:53,119
derek you have the microphone

3009
02:03:53,119 --> 02:03:57,599
assad with juniper um today the pce can

3010
02:03:57,599 --> 02:04:00,079
cater or service a

3011
02:04:00,079 --> 02:04:01,440
request

3012
02:04:01,440 --> 02:04:03,199
for a um

3013
02:04:03,199 --> 02:04:06,960
for an intent identified by color

3014
02:04:06,960 --> 02:04:10,159
and it can compute an inter domain path

3015
02:04:10,159 --> 02:04:13,280
across multiple igp domains for example

3016
02:04:13,280 --> 02:04:16,159
and each igp domain can have different

3017
02:04:16,159 --> 02:04:19,199
representation of what

3018
02:04:19,199 --> 02:04:21,599
algorithm id for example

3019
02:04:21,599 --> 02:04:24,480
they want to implement in their domain

3020
02:04:24,480 --> 02:04:27,599
but still the pce can do into domain

3021
02:04:27,599 --> 02:04:29,599
across different algorithm ids there is

3022
02:04:29,599 --> 02:04:30,960
no mandate

3023
02:04:30,960 --> 02:04:33,760
to have the same algorithm id across

3024
02:04:33,760 --> 02:04:35,679
multiple domains

3025
02:04:35,679 --> 02:04:37,920
if i understand correctly for car to

3026
02:04:37,920 --> 02:04:40,000
work correctly you have to have the same

3027
02:04:40,000 --> 02:04:42,400
color because it's part of the prefix

3028
02:04:42,400 --> 02:04:43,840
and a lara key

3029
02:04:43,840 --> 02:04:47,040
and that's a limitation

3030
02:04:49,760 --> 02:04:51,119
yes have a brief moment to make a

3031
02:04:51,119 --> 02:04:53,599
response yeah again the same uh

3032
02:04:53,599 --> 02:04:55,920
repetition what i already mentioned to

3033
02:04:55,920 --> 02:04:58,719
shreeri that for car to work there's no

3034
02:04:58,719 --> 02:05:00,560
requirement to have the same color we

3035
02:05:00,560 --> 02:05:01,520
support

3036
02:05:01,520 --> 02:05:02,960
multiple color

3037
02:05:02,960 --> 02:05:04,800
multiple ways to represent the color or

3038
02:05:04,800 --> 02:05:06,639
different values to represent the color

3039
02:05:06,639 --> 02:05:07,440
but

3040
02:05:07,440 --> 02:05:09,199
again i will repeat we are talking about

3041
02:05:09,199 --> 02:05:12,000
a single administrator managing it and

3042
02:05:12,000 --> 02:05:14,639
this is about inter-domain

3043
02:05:14,639 --> 02:05:17,040
bgp routing solution so

3044
02:05:17,040 --> 02:05:18,800
if you want to carry the intent you have

3045
02:05:18,800 --> 02:05:21,360
to carry intent somewhere in car we can

3046
02:05:21,360 --> 02:05:23,679
we we prefer to carry in the nlri for

3047
02:05:23,679 --> 02:05:26,239
the most useful cases or most optimized

3048
02:05:26,239 --> 02:05:28,560
cases otherwise it's in lcm for multiple

3049
02:05:28,560 --> 02:05:31,599
color domains and same way

3050
02:05:31,599 --> 02:05:33,840
ct can speak for it but that exactly

3051
02:05:33,840 --> 02:05:35,920
also carries in the tc i don't think

3052
02:05:35,920 --> 02:05:37,840
there's any confusion about this uh

3053
02:05:37,840 --> 02:05:39,440
assault

3054
02:05:39,440 --> 02:05:40,960
okay so we'll take this as one of our

3055
02:05:40,960 --> 02:05:43,040
questions a list there's obviously

3056
02:05:43,040 --> 02:05:45,040
differences in i think this is why we

3057
02:05:45,040 --> 02:05:46,800
keep seeing the conversation come back

3058
02:05:46,800 --> 02:05:48,960
about what the color domain is

3059
02:05:48,960 --> 02:05:50,800
um again let's take it to the list kylie

3060
02:05:50,800 --> 02:05:53,040
raj we don't have time ben you have the

3061
02:05:53,040 --> 02:05:54,320
last question

3062
02:05:54,320 --> 02:05:55,440
um

3063
02:05:55,440 --> 02:05:57,360
so speaking as an operator on this

3064
02:05:57,360 --> 02:06:00,239
question of the complexity of managing

3065
02:06:00,239 --> 02:06:02,800
color mappings this is this is a problem

3066
02:06:02,800 --> 02:06:07,119
that any kind of inter domain sla aware

3067
02:06:07,119 --> 02:06:08,400
service has

3068
02:06:08,400 --> 02:06:10,719
sometimes you're managing mappings of

3069
02:06:10,719 --> 02:06:12,719
traffic classes sometimes it's the scp

3070
02:06:12,719 --> 02:06:15,199
values sometimes it's communities you

3071
02:06:15,199 --> 02:06:17,760
know in this case it's it's it's colors

3072
02:06:17,760 --> 02:06:20,079
and the the nightmare part of that is

3073
02:06:20,079 --> 02:06:21,360
the coordination

3074
02:06:21,360 --> 02:06:22,639
once you've actually done the

3075
02:06:22,639 --> 02:06:25,280
coordination you've agreed on a mapping

3076
02:06:25,280 --> 02:06:27,679
scraping off the screen of a cli is not

3077
02:06:27,679 --> 02:06:29,840
the complexity it's not a it's a

3078
02:06:29,840 --> 02:06:32,560
complete red herring it's not a big deal

3079
02:06:32,560 --> 02:06:34,159
um

3080
02:06:34,159 --> 02:06:36,400
the the main thing i wanted to just

3081
02:06:36,400 --> 02:06:38,960
raise in case it hasn't kind of come out

3082
02:06:38,960 --> 02:06:40,639
come across the

3083
02:06:40,639 --> 02:06:43,119
either sets of authors as a use case for

3084
02:06:43,119 --> 02:06:45,280
this is fortunately i don't provide

3085
02:06:45,280 --> 02:06:47,840
inter-domain esl aware services but what

3086
02:06:47,840 --> 02:06:50,480
i do need is a solution to the problem

3087
02:06:50,480 --> 02:06:53,199
of providing local repair for egress

3088
02:06:53,199 --> 02:06:54,800
peer engineering

3089
02:06:54,800 --> 02:06:55,679
um

3090
02:06:55,679 --> 02:06:57,119
bgp routes

3091
02:06:57,119 --> 02:07:00,000
and i think that probably both

3092
02:07:00,000 --> 02:07:03,199
drafts can provide a solution to that

3093
02:07:03,199 --> 02:07:04,320
the idea

3094
02:07:04,320 --> 02:07:06,800
essentially being advertising

3095
02:07:06,800 --> 02:07:10,480
a unique lu label depending on what the

3096
02:07:10,480 --> 02:07:12,480
potential backup path is

3097
02:07:12,480 --> 02:07:13,920
so that you don't have to fall back to

3098
02:07:13,920 --> 02:07:15,920
ip forwarding in the event of a local

3099
02:07:15,920 --> 02:07:17,520
failure um

3100
02:07:17,520 --> 02:07:19,920
it would be nice to

3101
02:07:19,920 --> 02:07:22,400
see either in the draft or maybe when we

3102
02:07:22,400 --> 02:07:25,840
next speak about this at 114 to hear a

3103
02:07:25,840 --> 02:07:28,000
bit about whether

3104
02:07:28,000 --> 02:07:29,599
the authors think that that's a good use

3105
02:07:29,599 --> 02:07:31,920
case and how that might work in practice

3106
02:07:31,920 --> 02:07:33,360
bent may i suggest you something will

3107
02:07:33,360 --> 02:07:35,360
you please send those comments to the

3108
02:07:35,360 --> 02:07:37,679
list because i think i heard you said

3109
02:07:37,679 --> 02:07:39,760
um hey look debuggability is not a big

3110
02:07:39,760 --> 02:07:41,199
issue but

3111
02:07:41,199 --> 02:07:42,639
you really want to worry about fast

3112
02:07:42,639 --> 02:07:43,840
convergence

3113
02:07:43,840 --> 02:07:45,599
the fast convergence has too many

3114
02:07:45,599 --> 02:07:47,360
meaning egress peer engineering has to

3115
02:07:47,360 --> 02:07:50,000
be minimally taken care of yeah and well

3116
02:07:50,000 --> 02:07:51,920
it's it's it's a use it's clearly not

3117
02:07:51,920 --> 02:07:54,320
the primary use but it is a use case for

3118
02:07:54,320 --> 02:07:58,000
the ability to have multiple prefix to

3119
02:07:58,000 --> 02:07:59,760
label methods absolutely which is one of

3120
02:07:59,760 --> 02:08:01,360
the things that this provides i think

3121
02:08:01,360 --> 02:08:02,719
sending a note to mailing list would be

3122
02:08:02,719 --> 02:08:04,400
great thank you

3123
02:08:04,400 --> 02:08:06,400
over to you jeff

3124
02:08:06,400 --> 02:08:09,440
thank you uh this ends our session for

3125
02:08:09,440 --> 02:08:12,400
ietf 113. uh we've had again a good

3126
02:08:12,400 --> 02:08:14,320
discussion that unfortunately again got

3127
02:08:14,320 --> 02:08:15,760
compressed a little bit

3128
02:08:15,760 --> 02:08:16,960
what we'll be doing as part of

3129
02:08:16,960 --> 02:08:18,639
collecting the minutes is trying to

3130
02:08:18,639 --> 02:08:21,360
summarize the questions and points where

3131
02:08:21,360 --> 02:08:23,599
people seem to be in disagreement and

3132
02:08:23,599 --> 02:08:25,360
we'll be uh feeding those questions back

3133
02:08:25,360 --> 02:08:27,040
to the list you know in some form for

3134
02:08:27,040 --> 02:08:28,159
summary

3135
02:08:28,159 --> 02:08:30,079
uh as part of those questions the chairs

3136
02:08:30,079 --> 02:08:32,159
will discuss at our next gathering

3137
02:08:32,159 --> 02:08:33,840
whether we should

3138
02:08:33,840 --> 02:08:35,360
try to front load potentially another

3139
02:08:35,360 --> 02:08:38,400
intro meeting to do this or

3140
02:08:38,400 --> 02:08:40,320
do we just wait for 114

3141
02:08:40,320 --> 02:08:41,760
meanwhile since the room has to be

3142
02:08:41,760 --> 02:08:43,599
released to the next session thank you

3143
02:08:43,599 --> 02:08:44,800
for showing up and we will talk to you

3144
02:08:44,800 --> 02:08:46,320
all soon

3145
02:08:46,320 --> 02:08:48,480
yes we will also have a session on

3146
02:08:48,480 --> 02:08:50,639
friday we have the early session thank

3147
02:08:50,639 --> 02:08:51,679
you

3148
02:08:51,679 --> 02:08:54,400
thank you bye

3149
02:08:56,719 --> 02:08:59,719
oh

3150
02:09:05,679 --> 02:09:07,760
you

