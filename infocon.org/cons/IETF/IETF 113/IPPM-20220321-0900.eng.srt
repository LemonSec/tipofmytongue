1
00:00:05,040 --> 00:00:06,799
there is a fair amount of echo that we

2
00:00:06,799 --> 00:00:08,639
get from the room i'm not sure there's

3
00:00:08,639 --> 00:00:12,760
anything that you guys can fix

4
00:00:25,599 --> 00:00:28,599
so

5
00:00:46,160 --> 00:00:47,200
he did

6
00:00:47,200 --> 00:00:48,640
i'm not sure what to do i don't know

7
00:00:48,640 --> 00:00:52,200
what knights are on

8
00:01:28,400 --> 00:01:31,400
so

9
00:01:47,680 --> 00:01:49,759
all right good morning how is our echo

10
00:01:49,759 --> 00:01:52,479
sounding right now

11
00:01:53,439 --> 00:01:56,639
it sounds pretty good here

12
00:01:57,840 --> 00:01:59,360
okay there's a little bit of it but i

13
00:01:59,360 --> 00:02:01,600
think it's manageable

14
00:02:01,600 --> 00:02:03,680
it's still there but i think we can deal

15
00:02:03,680 --> 00:02:06,840
with it

16
00:02:08,959 --> 00:02:10,560
all right i think we'll just go ahead

17
00:02:10,560 --> 00:02:12,080
then um

18
00:02:12,080 --> 00:02:14,480
if there are people on site with meat

19
00:02:14,480 --> 00:02:15,840
echo who can

20
00:02:15,840 --> 00:02:17,520
help keep tuning things that would be

21
00:02:17,520 --> 00:02:19,040
wonderful

22
00:02:19,040 --> 00:02:22,080
but otherwise we'll forge ahead

23
00:02:22,080 --> 00:02:23,280
alright let me

24
00:02:23,280 --> 00:02:26,319
turn on my video a bit

25
00:02:28,640 --> 00:02:30,000
hello from

26
00:02:30,000 --> 00:02:33,200
2am in california

27
00:02:34,640 --> 00:02:37,839
all right um

28
00:02:38,000 --> 00:02:40,800
let's get started so welcome officially

29
00:02:40,800 --> 00:02:44,560
to ietf 113 in vienna and

30
00:02:44,560 --> 00:02:46,080
virtually um

31
00:02:46,080 --> 00:02:49,040
it's our first really hybrid meeting

32
00:02:49,040 --> 00:02:51,760
and so we'll all be

33
00:02:51,760 --> 00:02:53,840
learning how to do this

34
00:02:53,840 --> 00:02:56,480
so let's have a lot of patience and

35
00:02:56,480 --> 00:02:59,760
grace with each other in this

36
00:03:00,080 --> 00:03:02,879
you are in ippm ip performance

37
00:03:02,879 --> 00:03:04,800
measurement

38
00:03:04,800 --> 00:03:06,800
i am tommy paulie one of your chairs

39
00:03:06,800 --> 00:03:09,120
marcus also here

40
00:03:09,120 --> 00:03:12,239
probably more awake than me

41
00:03:13,360 --> 00:03:15,599
and

42
00:03:16,000 --> 00:03:18,959
we have a pretty packed agenda today

43
00:03:18,959 --> 00:03:21,840
let's get started

44
00:03:22,480 --> 00:03:25,200
first if this is um

45
00:03:25,200 --> 00:03:28,159
one of your first itf meetings

46
00:03:28,159 --> 00:03:29,360
or if it's

47
00:03:29,360 --> 00:03:30,480
your

48
00:03:30,480 --> 00:03:31,920
30th 30th

49
00:03:31,920 --> 00:03:34,480
we do ask you to note well

50
00:03:34,480 --> 00:03:36,959
all of the

51
00:03:37,280 --> 00:03:38,959
different policies for participation and

52
00:03:38,959 --> 00:03:41,840
contribution in the itf

53
00:03:41,840 --> 00:03:43,280
if you haven't seen this before please

54
00:03:43,280 --> 00:03:47,480
do take a moment to read through it

55
00:03:49,680 --> 00:03:52,879
for the meeting management um

56
00:03:52,879 --> 00:03:55,280
for people both on site and remote we

57
00:03:55,280 --> 00:03:57,680
are using meat echo

58
00:03:57,680 --> 00:03:59,760
and it's the same way it's been working

59
00:03:59,760 --> 00:04:01,040
virtually

60
00:04:01,040 --> 00:04:03,680
for the people who are remote and in

61
00:04:03,680 --> 00:04:07,200
person i believe there is a heat echo

62
00:04:07,200 --> 00:04:10,400
mobile app that you can use for queuing

63
00:04:10,400 --> 00:04:12,640
please do use that we can see

64
00:04:12,640 --> 00:04:14,400
the camera into the room

65
00:04:14,400 --> 00:04:15,760
but

66
00:04:15,760 --> 00:04:17,839
it will be useful um to manage

67
00:04:17,839 --> 00:04:20,320
everything from me tech over there

68
00:04:20,320 --> 00:04:23,359
if you are presenting

69
00:04:23,440 --> 00:04:25,759
you are able to share your own slides in

70
00:04:25,759 --> 00:04:28,000
the meat echo tool

71
00:04:28,000 --> 00:04:31,120
up at the top there is the

72
00:04:31,120 --> 00:04:33,440
document view with a slash through it

73
00:04:33,440 --> 00:04:34,720
and you click on that you should be able

74
00:04:34,720 --> 00:04:35,680
to

75
00:04:35,680 --> 00:04:37,360
ask to share slides there should be an

76
00:04:37,360 --> 00:04:40,840
equivalent button in the mobile

77
00:04:40,840 --> 00:04:43,280
experience if you need help sharing

78
00:04:43,280 --> 00:04:47,120
slides the chairs can also do it for you

79
00:04:47,120 --> 00:04:48,960
and then we do have notes going on thank

80
00:04:48,960 --> 00:04:50,880
you stuart for taking the notes for this

81
00:04:50,880 --> 00:04:52,720
meeting

82
00:04:52,720 --> 00:04:53,600
um

83
00:04:53,600 --> 00:04:57,320
for jabber scribing

84
00:04:57,520 --> 00:04:58,320
uh

85
00:04:58,320 --> 00:05:00,800
i i think the chairs right now can take

86
00:05:00,800 --> 00:05:02,880
care of forever and we can also ask

87
00:05:02,880 --> 00:05:04,639
these people in the room to release

88
00:05:04,639 --> 00:05:06,960
things

89
00:05:08,720 --> 00:05:10,639
all right looking at our agenda

90
00:05:10,639 --> 00:05:13,120
we are spending the first chunk

91
00:05:13,120 --> 00:05:14,880
on

92
00:05:14,880 --> 00:05:16,800
the primary working group documents that

93
00:05:16,800 --> 00:05:18,720
we have that are active we have a bunch

94
00:05:18,720 --> 00:05:20,880
of documents that are in later stages

95
00:05:20,880 --> 00:05:22,880
they're with the isg

96
00:05:22,880 --> 00:05:26,160
or they are in the rfc editor queue

97
00:05:26,160 --> 00:05:27,680
where we've been very productive so

98
00:05:27,680 --> 00:05:28,800
thank you to everyone in the working

99
00:05:28,800 --> 00:05:30,560
group for that

100
00:05:30,560 --> 00:05:32,320
but today we'll go through

101
00:05:32,320 --> 00:05:34,880
um some of the protocols starting with

102
00:05:34,880 --> 00:05:36,960
some of the more newly adopted protocol

103
00:05:36,960 --> 00:05:39,919
work and then getting some updates on

104
00:05:39,919 --> 00:05:42,400
iom

105
00:05:42,400 --> 00:05:44,720
as well as explicit flow measurements

106
00:05:44,720 --> 00:05:47,120
and srpf

107
00:05:47,120 --> 00:05:49,039
then after that we have some shorter

108
00:05:49,039 --> 00:05:50,479
talks

109
00:05:50,479 --> 00:05:52,720
about some new proposed work that has

110
00:05:52,720 --> 00:05:55,600
received either a lot of uh work on side

111
00:05:55,600 --> 00:05:56,639
meetings

112
00:05:56,639 --> 00:05:59,440
or uh discussion on the test

113
00:05:59,440 --> 00:06:01,360
and that's all we have for today any

114
00:06:01,360 --> 00:06:03,520
agenda bashing or should we launch right

115
00:06:03,520 --> 00:06:06,520
in

116
00:06:09,520 --> 00:06:10,960
okay

117
00:06:10,960 --> 00:06:13,680
i think first up then we have our

118
00:06:13,680 --> 00:06:16,639
capacity metric protocol with al

119
00:06:16,639 --> 00:06:18,800
and al do you want to share

120
00:06:18,800 --> 00:06:21,280
slides

121
00:06:22,319 --> 00:06:24,800
hi tommy if if if you guys can share the

122
00:06:24,800 --> 00:06:27,919
slides uh that would help i think

123
00:06:27,919 --> 00:06:29,840
okay i can do it

124
00:06:29,840 --> 00:06:32,000
again it is available in the pre-loaded

125
00:06:32,000 --> 00:06:33,919
slides here but

126
00:06:33,919 --> 00:06:36,479
yeah that's great

127
00:06:37,840 --> 00:06:39,680
all right

128
00:06:39,680 --> 00:06:42,080
and i'll

129
00:06:44,319 --> 00:06:47,120
i'll share my video briefly

130
00:06:47,120 --> 00:06:48,800
there i am

131
00:06:48,800 --> 00:06:50,880
in front of my quilt made of ietf

132
00:06:50,880 --> 00:06:53,360
t-shirts

133
00:06:55,039 --> 00:06:58,000
good morning everybody

134
00:06:58,160 --> 00:06:59,199
so

135
00:06:59,199 --> 00:07:00,319
um

136
00:07:00,319 --> 00:07:02,800
we've got the capacity

137
00:07:02,800 --> 00:07:03,599
uh

138
00:07:03,599 --> 00:07:05,919
measurement protocol uh

139
00:07:05,919 --> 00:07:08,080
to talk about this morning we've

140
00:07:08,080 --> 00:07:10,240
got a working group draft and one which

141
00:07:10,240 --> 00:07:13,680
we've updated uh lynn chaviton

142
00:07:13,680 --> 00:07:16,319
my long time colleague and i are working

143
00:07:16,319 --> 00:07:18,479
on this together

144
00:07:18,479 --> 00:07:20,639
we're looking for more help and review

145
00:07:20,639 --> 00:07:22,400
from the working group

146
00:07:22,400 --> 00:07:23,199
so

147
00:07:23,199 --> 00:07:26,080
next slide please

148
00:07:27,599 --> 00:07:29,280
so here's a little reminder about the

149
00:07:29,280 --> 00:07:30,880
protocol

150
00:07:30,880 --> 00:07:33,919
we've got a basically a simple setup

151
00:07:33,919 --> 00:07:36,080
exchange between the client and the

152
00:07:36,080 --> 00:07:37,120
server

153
00:07:37,120 --> 00:07:39,759
test activation exchange that follows

154
00:07:39,759 --> 00:07:41,199
that

155
00:07:41,199 --> 00:07:43,199
talks about the

156
00:07:43,199 --> 00:07:46,000
optional testing parameters

157
00:07:46,000 --> 00:07:48,560
in the in this first phase we've we've

158
00:07:48,560 --> 00:07:50,160
added a

159
00:07:50,160 --> 00:07:52,160
server admission control

160
00:07:52,160 --> 00:07:53,840
a um

161
00:07:53,840 --> 00:07:56,400
kind of a programmed bandwidth check

162
00:07:56,400 --> 00:07:59,840
and we think that'll help with

163
00:07:59,840 --> 00:08:02,319
managing the server capacity

164
00:08:02,319 --> 00:08:03,520
and um

165
00:08:03,520 --> 00:08:07,680
the rest of the after the test exchange

166
00:08:07,680 --> 00:08:09,520
setup exchange and test activation

167
00:08:09,520 --> 00:08:12,000
exchange takes place

168
00:08:12,000 --> 00:08:13,599
we have the

169
00:08:13,599 --> 00:08:14,800
test stream

170
00:08:14,800 --> 00:08:16,879
and

171
00:08:16,879 --> 00:08:19,039
that

172
00:08:19,120 --> 00:08:20,479
still has a

173
00:08:20,479 --> 00:08:22,879
feedback path with the uh

174
00:08:22,879 --> 00:08:26,879
either the measurements or the commanded

175
00:08:26,879 --> 00:08:30,000
test rates to use for the next

176
00:08:30,000 --> 00:08:32,080
50 milliseconds or so

177
00:08:32,080 --> 00:08:34,719
so we've got a continued

178
00:08:34,719 --> 00:08:35,839
round-trip

179
00:08:35,839 --> 00:08:37,440
relationship

180
00:08:37,440 --> 00:08:39,440
going on throughout the

181
00:08:39,440 --> 00:08:41,279
operation of the protocol

182
00:08:41,279 --> 00:08:42,399
and we actually

183
00:08:42,399 --> 00:08:45,120
set bits in the load pdus

184
00:08:45,120 --> 00:08:47,120
to stop the test

185
00:08:47,120 --> 00:08:49,760
stop one and stop two

186
00:08:49,760 --> 00:08:52,240
from the server and client respectively

187
00:08:52,240 --> 00:08:53,279
and

188
00:08:53,279 --> 00:08:55,440
so that's how we basically turn things

189
00:08:55,440 --> 00:08:56,480
down

190
00:08:56,480 --> 00:08:58,640
at the end of the test duration

191
00:08:58,640 --> 00:09:01,519
next slide please

192
00:09:03,279 --> 00:09:07,760
so uh thanks for working group adoption

193
00:09:07,760 --> 00:09:10,000
some new folks joined the working group

194
00:09:10,000 --> 00:09:12,480
based on the um

195
00:09:12,480 --> 00:09:15,040
the work in the open source project

196
00:09:15,040 --> 00:09:17,600
and uh it was good to have their input

197
00:09:17,600 --> 00:09:20,720
and review uh all along the way in fact

198
00:09:20,720 --> 00:09:22,880
they

199
00:09:24,000 --> 00:09:27,440
good suggestions like uh the

200
00:09:27,440 --> 00:09:29,680
suggestion to include a randomized

201
00:09:29,680 --> 00:09:31,200
payload option

202
00:09:31,200 --> 00:09:33,120
and also um

203
00:09:33,120 --> 00:09:35,040
how that might be implemented

204
00:09:35,040 --> 00:09:36,000
so

205
00:09:36,000 --> 00:09:37,760
we've tested the performance of that and

206
00:09:37,760 --> 00:09:38,480
the

207
00:09:38,480 --> 00:09:40,560
code suggests uh

208
00:09:40,560 --> 00:09:42,160
performance of the code

209
00:09:42,160 --> 00:09:44,560
um it suggests very little uh

210
00:09:44,560 --> 00:09:46,800
compressibility of

211
00:09:46,800 --> 00:09:50,240
packet payloads so uh so that's good in

212
00:09:50,240 --> 00:09:52,240
fact we got surprisingly low rates and

213
00:09:52,240 --> 00:09:54,080
in some of the tests where you know much

214
00:09:54,080 --> 00:09:55,360
higher rates were

215
00:09:55,360 --> 00:09:58,000
uh claimed

216
00:09:58,800 --> 00:10:00,880
and as i mentioned the server can set a

217
00:10:00,880 --> 00:10:03,519
bandwidth limit for admission control

218
00:10:03,519 --> 00:10:04,480
um

219
00:10:04,480 --> 00:10:06,480
that's great when you have uh you know

220
00:10:06,480 --> 00:10:09,360
some clients trying to test five gigabit

221
00:10:09,360 --> 00:10:11,760
per second services and some clients

222
00:10:11,760 --> 00:10:14,000
trying to test 25

223
00:10:14,000 --> 00:10:17,040
megabit per second services

224
00:10:17,040 --> 00:10:19,519
you don't have to allocate uh five

225
00:10:19,519 --> 00:10:21,519
gigabits to everybody

226
00:10:21,519 --> 00:10:24,480
uh big big savings there

227
00:10:24,480 --> 00:10:25,920
um

228
00:10:25,920 --> 00:10:27,920
we have an optional stop for start i'm

229
00:10:27,920 --> 00:10:29,600
sorry start rate

230
00:10:29,600 --> 00:10:33,600
in the load adjustment algorithm now the

231
00:10:33,600 --> 00:10:36,399
fixed rate option remains so that

232
00:10:36,399 --> 00:10:38,480
basically means that if you're trying to

233
00:10:38,480 --> 00:10:40,480
achieve gigabit rates you might start at

234
00:10:40,480 --> 00:10:43,120
500 megabits and

235
00:10:43,120 --> 00:10:44,560
test your

236
00:10:44,560 --> 00:10:47,440
search your way up from there

237
00:10:47,440 --> 00:10:50,959
also we've got backward compatibility uh

238
00:10:50,959 --> 00:10:52,959
the new version nine of the protocol

239
00:10:52,959 --> 00:10:55,600
which is in the draft is is backward

240
00:10:55,600 --> 00:10:58,000
compatible with version eight which was

241
00:10:58,000 --> 00:11:00,800
present up to up till the last

242
00:11:00,800 --> 00:11:03,920
version working group zero zero

243
00:11:03,920 --> 00:11:04,959
um

244
00:11:04,959 --> 00:11:07,200
and we got some good feedback from uh

245
00:11:07,200 --> 00:11:09,680
folks during working group adoption

246
00:11:09,680 --> 00:11:12,160
uh one of the points was consistent

247
00:11:12,160 --> 00:11:14,640
terms for test activation and

248
00:11:14,640 --> 00:11:16,800
question response that that came from

249
00:11:16,800 --> 00:11:18,079
your guy

250
00:11:18,079 --> 00:11:21,120
also the clarifications about test stop

251
00:11:21,120 --> 00:11:23,600
and um there are even more error codes

252
00:11:23,600 --> 00:11:25,839
now

253
00:11:26,160 --> 00:11:28,560
so we're keeping the field uh

254
00:11:28,560 --> 00:11:31,760
uh bite-sized and uh a bitmap would be

255
00:11:31,760 --> 00:11:33,680
much bigger i think if we tried to

256
00:11:33,680 --> 00:11:35,600
implement that

257
00:11:35,600 --> 00:11:37,120
um

258
00:11:37,120 --> 00:11:39,120
and in section four i took out all the

259
00:11:39,120 --> 00:11:41,200
parameters that were basically referred

260
00:11:41,200 --> 00:11:44,959
to or were redundant with uh rfc 1997

261
00:11:44,959 --> 00:11:47,680
the the metric and method

262
00:11:47,680 --> 00:11:50,560
and um

263
00:11:50,560 --> 00:11:52,720
trim down we've basically trimmed down

264
00:11:52,720 --> 00:11:55,519
our proposal to four security modes the

265
00:11:55,519 --> 00:11:57,399
two that we've got implemented

266
00:11:57,399 --> 00:11:59,839
unauthenticated and password

267
00:11:59,839 --> 00:12:01,040
and um

268
00:12:01,040 --> 00:12:02,079
we've got

269
00:12:02,079 --> 00:12:04,079
a secure setup exchange so that would

270
00:12:04,079 --> 00:12:06,560
just be the first part of the

271
00:12:06,560 --> 00:12:08,320
setup and then

272
00:12:08,320 --> 00:12:10,399
you know the classic secure all the

273
00:12:10,399 --> 00:12:12,959
things that's the last purpose

274
00:12:12,959 --> 00:12:14,720
so we'll talk about more about that in a

275
00:12:14,720 --> 00:12:17,760
moment next slide

276
00:12:19,600 --> 00:12:20,480
okay

277
00:12:20,480 --> 00:12:23,920
so the next steps authors uh the welcome

278
00:12:23,920 --> 00:12:26,000
proposals and revisions to the security

279
00:12:26,000 --> 00:12:26,880
modes

280
00:12:26,880 --> 00:12:29,040
uh with working group adoption we can

281
00:12:29,040 --> 00:12:30,240
now adopt

282
00:12:30,240 --> 00:12:33,120
uh or ask for a um

283
00:12:33,120 --> 00:12:36,399
an early sector review uh may help us

284
00:12:36,399 --> 00:12:37,600
solve that

285
00:12:37,600 --> 00:12:38,800
one go

286
00:12:38,800 --> 00:12:41,279
and uh that would be really cool

287
00:12:41,279 --> 00:12:43,279
um you know that as we've learned in

288
00:12:43,279 --> 00:12:45,040
past meetings there's no silver bullet

289
00:12:45,040 --> 00:12:47,760
but uh you know maybe if we make this

290
00:12:47,760 --> 00:12:50,079
simple we can get a good simple answer

291
00:12:50,079 --> 00:12:51,600
and we don't

292
00:12:51,600 --> 00:12:54,160
so um

293
00:12:54,160 --> 00:12:55,200
obviously

294
00:12:55,200 --> 00:12:56,480
one of the things i talked about last

295
00:12:56,480 --> 00:12:58,639
time back in november was

296
00:12:58,639 --> 00:13:00,320
that this protocol can do more than

297
00:13:00,320 --> 00:13:02,399
measure capacity

298
00:13:02,399 --> 00:13:04,880
we've got the ability to to have

299
00:13:04,880 --> 00:13:07,519
real-time feedbacks of measurements

300
00:13:07,519 --> 00:13:09,360
and

301
00:13:09,360 --> 00:13:11,120
you can actually do a lot with that

302
00:13:11,120 --> 00:13:12,320
change the

303
00:13:12,320 --> 00:13:14,880
sending rates as we do now but

304
00:13:14,880 --> 00:13:16,399
that could be as

305
00:13:16,399 --> 00:13:18,720
a result of other

306
00:13:18,720 --> 00:13:21,040
paradigms or heuristics that

307
00:13:21,040 --> 00:13:23,440
people want to use in order to model

308
00:13:23,440 --> 00:13:25,839
traffic

309
00:13:25,839 --> 00:13:28,079
uh i mentioned the four modes if you

310
00:13:28,079 --> 00:13:30,079
want more modes say so

311
00:13:30,079 --> 00:13:31,920
and um

312
00:13:31,920 --> 00:13:34,160
protocol 9 allows for a new load

313
00:13:34,160 --> 00:13:36,000
adjustment algorithm

314
00:13:36,000 --> 00:13:38,000
with more robustness to

315
00:13:38,000 --> 00:13:39,760
all sorts of problems

316
00:13:39,760 --> 00:13:42,160
because the feedback we got is is people

317
00:13:42,160 --> 00:13:44,399
said look you guys say you're measuring

318
00:13:44,399 --> 00:13:47,279
maximum capacity so please always do

319
00:13:47,279 --> 00:13:49,360
that you know even even if you have to

320
00:13:49,360 --> 00:13:51,120
put more uh

321
00:13:51,120 --> 00:13:53,120
load in the channel uh

322
00:13:53,120 --> 00:13:54,880
do it

323
00:13:54,880 --> 00:13:55,680
so

324
00:13:55,680 --> 00:13:57,760
uh so that's what we heard and that's

325
00:13:57,760 --> 00:13:59,680
what we're working on

326
00:13:59,680 --> 00:14:01,760
so i got three minutes to let people ask

327
00:14:01,760 --> 00:14:02,560
questions

328
00:14:02,560 --> 00:14:04,800
thanks

329
00:14:13,360 --> 00:14:17,040
all right um

330
00:14:17,040 --> 00:14:20,639
frank were you in the queue are you

331
00:14:20,639 --> 00:14:22,480
i'm trying to go and understand how to

332
00:14:22,480 --> 00:14:23,839
cue

333
00:14:23,839 --> 00:14:26,240
ah yeah you you are able to unmute

334
00:14:26,240 --> 00:14:28,240
yourself you can also click the hand but

335
00:14:28,240 --> 00:14:30,800
it's fine go ahead please okay i have a

336
00:14:30,800 --> 00:14:33,600
very simple question to uh al so al uh

337
00:14:33,600 --> 00:14:34,800
you mentioned that there is an open

338
00:14:34,800 --> 00:14:36,480
source implementation

339
00:14:36,480 --> 00:14:38,480
uh could you drop us a pointer to that

340
00:14:38,480 --> 00:14:39,920
one

341
00:14:39,920 --> 00:14:41,920
yeah yeah of course frank

342
00:14:41,920 --> 00:14:45,440
and maybe add a reference um so i'd be

343
00:14:45,440 --> 00:14:47,120
well i might have somebody that wants to

344
00:14:47,120 --> 00:14:48,800
go and use it

345
00:14:48,800 --> 00:14:51,440
yeah cool i i think it's i think it's in

346
00:14:51,440 --> 00:14:53,120
the draft

347
00:14:53,120 --> 00:14:55,199
and i didn't find it on the draft which

348
00:14:55,199 --> 00:14:57,199
is why i'm asking so but but maybe i

349
00:14:57,199 --> 00:14:59,519
just didn't read it carefully enough

350
00:14:59,519 --> 00:15:02,160
oh oh okay okay um

351
00:15:02,160 --> 00:15:04,560
all right i you know i'll i'll drop it

352
00:15:04,560 --> 00:15:05,839
in the

353
00:15:05,839 --> 00:15:09,040
meeting minutes and um so it'll be there

354
00:15:09,040 --> 00:15:10,880
but it's a it's an open broadband

355
00:15:10,880 --> 00:15:14,560
project on github

356
00:15:16,000 --> 00:15:19,680
uh so it's open broadband uh okay then

357
00:15:19,680 --> 00:15:21,199
it's the udp

358
00:15:21,199 --> 00:15:23,519
st reference okay got it thank you yeah

359
00:15:23,519 --> 00:15:26,560
yeah yeah good i'll i'll and i'll go

360
00:15:26,560 --> 00:15:29,760
back and put it in the notes

361
00:15:37,600 --> 00:15:39,199
all right uh

362
00:15:39,199 --> 00:15:41,120
will were you trying to

363
00:15:41,120 --> 00:15:44,240
get in queue or no okay cool thank you

364
00:15:44,240 --> 00:15:45,839
all right any other questions next

365
00:15:45,839 --> 00:15:48,399
presentation

366
00:15:48,560 --> 00:15:51,560
thanks

367
00:15:57,040 --> 00:15:58,720
okay i'm not seeing anyone else getting

368
00:15:58,720 --> 00:16:01,440
cute thank you al for this um

369
00:16:01,440 --> 00:16:03,120
so

370
00:16:03,120 --> 00:16:04,079
it sounds like there are a couple

371
00:16:04,079 --> 00:16:06,240
actions that the chairs have so if we

372
00:16:06,240 --> 00:16:09,600
could add that to the notes

373
00:16:09,600 --> 00:16:12,079
that we should be asking for the early

374
00:16:12,079 --> 00:16:14,240
sector review and we can kick that off

375
00:16:14,240 --> 00:16:15,759
soon

376
00:16:15,759 --> 00:16:18,480
and then also

377
00:16:18,480 --> 00:16:20,160
for the repository for the code we

378
00:16:20,160 --> 00:16:21,360
actually

379
00:16:21,360 --> 00:16:24,399
have a new tag and data tracker for

380
00:16:24,399 --> 00:16:26,160
related implementations so that you can

381
00:16:26,160 --> 00:16:27,759
find it more easily and we can make sure

382
00:16:27,759 --> 00:16:30,000
that can get added as well so that when

383
00:16:30,000 --> 00:16:31,360
people look at the document in data

384
00:16:31,360 --> 00:16:33,040
tracker they can just click on a link

385
00:16:33,040 --> 00:16:35,279
and see your implementation

386
00:16:35,279 --> 00:16:36,480
so

387
00:16:36,480 --> 00:16:39,279
thank you cool

388
00:16:41,680 --> 00:16:42,800
all right

389
00:16:42,800 --> 00:16:45,759
i think next up

390
00:16:45,759 --> 00:16:48,480
we have

391
00:16:48,480 --> 00:16:50,160
responsiveness

392
00:16:50,160 --> 00:16:51,759
and christoph did you want to be able to

393
00:16:51,759 --> 00:16:52,800
drive

394
00:16:52,800 --> 00:16:55,279
the slides for yourself there

395
00:16:55,279 --> 00:16:57,600
uh yes i can do that

396
00:16:57,600 --> 00:17:00,800
great thank you yeah

397
00:17:00,959 --> 00:17:05,079
let's show my screen

398
00:17:14,799 --> 00:17:18,520
i'm sorry about that

399
00:17:19,039 --> 00:17:20,319
okay

400
00:17:20,319 --> 00:17:23,119
hello everyone uh i hope you can see my

401
00:17:23,119 --> 00:17:24,799
slides

402
00:17:24,799 --> 00:17:27,760
being presented

403
00:17:29,760 --> 00:17:32,880
yes okay so um

404
00:17:32,880 --> 00:17:35,600
welcome um this is responsiveness under

405
00:17:35,600 --> 00:17:39,200
working conditions i am going to present

406
00:17:39,200 --> 00:17:41,039
uh

407
00:17:41,039 --> 00:17:42,080
the

408
00:17:42,080 --> 00:17:43,679
changes that have been happening in the

409
00:17:43,679 --> 00:17:47,120
draft and the main discussions points

410
00:17:47,120 --> 00:17:48,799
that were happening during the working

411
00:17:48,799 --> 00:17:50,720
group adoption

412
00:17:50,720 --> 00:17:53,520
but before i go into the draft i have

413
00:17:53,520 --> 00:17:55,760
two parts of the presentation

414
00:17:55,760 --> 00:17:58,559
uh one that is on the

415
00:17:58,559 --> 00:18:00,320
implementation experience the first one

416
00:18:00,320 --> 00:18:03,120
is on the server side

417
00:18:03,120 --> 00:18:05,760
we have open source implementations of

418
00:18:05,760 --> 00:18:07,200
the server side

419
00:18:07,200 --> 00:18:08,880
and the second one is

420
00:18:08,880 --> 00:18:11,360
we have a new open source

421
00:18:11,360 --> 00:18:12,960
client-side implementation that

422
00:18:12,960 --> 00:18:15,280
implements the methodology

423
00:18:15,280 --> 00:18:18,080
so first i'll hand over

424
00:18:18,080 --> 00:18:20,640
speaking to randall about

425
00:18:20,640 --> 00:18:25,400
from apple about the server side

426
00:18:31,679 --> 00:18:33,679
hello hi

427
00:18:33,679 --> 00:18:35,360
uh hopefully

428
00:18:35,360 --> 00:18:37,760
it can be heard it looks like it okay um

429
00:18:37,760 --> 00:18:42,080
hi at the network quality uh

430
00:18:42,080 --> 00:18:44,640
quality server repository we have a

431
00:18:44,640 --> 00:18:47,679
sample configurations for opacity

432
00:18:47,679 --> 00:18:51,679
traffic server apache httpd and nginx

433
00:18:51,679 --> 00:18:53,600
in this same repo

434
00:18:53,600 --> 00:18:55,440
there are two complete

435
00:18:55,440 --> 00:18:57,919
server implementations written in swift

436
00:18:57,919 --> 00:19:00,559
and go that can be used standalone from

437
00:19:00,559 --> 00:19:02,240
other

438
00:19:02,240 --> 00:19:04,880
web servers in front of them

439
00:19:04,880 --> 00:19:07,520
the apache traffic server configuration

440
00:19:07,520 --> 00:19:08,799
in

441
00:19:08,799 --> 00:19:10,880
that repo is the same implementation

442
00:19:10,880 --> 00:19:13,360
that apple cdn uses to serve

443
00:19:13,360 --> 00:19:15,039
traffic for

444
00:19:15,039 --> 00:19:17,919
the network quality tool from apple

445
00:19:17,919 --> 00:19:19,520
um

446
00:19:19,520 --> 00:19:21,679
next i'd like to introduce will hawkins

447
00:19:21,679 --> 00:19:24,400
of the university of cincinnati

448
00:19:24,400 --> 00:19:27,280
particularly will

449
00:19:28,799 --> 00:19:30,880
thanks that was uh that was quick and

450
00:19:30,880 --> 00:19:33,200
succinct i like that

451
00:19:33,200 --> 00:19:35,760
um well my name is will hawkins i'm from

452
00:19:35,760 --> 00:19:36,960
the university of cincinnati and i've

453
00:19:36,960 --> 00:19:39,200
been working with um both kristoff and

454
00:19:39,200 --> 00:19:41,440
randall quite some time now on

455
00:19:41,440 --> 00:19:42,559
implementing

456
00:19:42,559 --> 00:19:45,280
the protocol in go

457
00:19:45,280 --> 00:19:47,919
as a second um

458
00:19:47,919 --> 00:19:50,559
clean room implementation

459
00:19:50,559 --> 00:19:51,520
and

460
00:19:51,520 --> 00:19:53,679
um i just wanted to report a little bit

461
00:19:53,679 --> 00:19:55,039
on that today

462
00:19:55,039 --> 00:19:57,440
uh all of this code is out there right

463
00:19:57,440 --> 00:20:00,720
now on uh github at the following url

464
00:20:00,720 --> 00:20:02,400
url

465
00:20:02,400 --> 00:20:04,400
uh the license is under gpl version

466
00:20:04,400 --> 00:20:06,720
three 3

467
00:20:07,280 --> 00:20:09,039
we're having a little trouble in the in

468
00:20:09,039 --> 00:20:10,960
the room here with the the slides aren't

469
00:20:10,960 --> 00:20:12,880
showing for some reason on the screen

470
00:20:12,880 --> 00:20:15,840
and uh we're trying to diagnose that

471
00:20:15,840 --> 00:20:18,840
um

472
00:20:20,559 --> 00:20:22,240
kristoff yeah let's switch to the

473
00:20:22,240 --> 00:20:24,640
preload

474
00:20:24,960 --> 00:20:28,080
yeah take off your screen

475
00:20:31,440 --> 00:20:34,880
will you share it or should i go ahead

476
00:20:39,520 --> 00:20:41,360
you should be granted um you should be

477
00:20:41,360 --> 00:20:43,760
able to see a way to select which dick

478
00:20:43,760 --> 00:20:45,440
you want yeah

479
00:20:45,440 --> 00:20:47,360
there you go

480
00:20:47,360 --> 00:20:49,200
okay we're seeing it now on our screen

481
00:20:49,200 --> 00:20:50,559
here

482
00:20:50,559 --> 00:20:54,400
awesome okay great sorry about that

483
00:20:54,400 --> 00:20:56,559
yeah i'm sorry i hope i didn't uh nobody

484
00:20:56,559 --> 00:20:58,400
didn't screw anything up there um

485
00:20:58,400 --> 00:20:59,200
uh

486
00:20:59,200 --> 00:21:03,039
but uh the implementation is in go

487
00:21:03,039 --> 00:21:03,840
and

488
00:21:03,840 --> 00:21:06,080
it is has been tested as far back as

489
00:21:06,080 --> 00:21:09,200
government 1.16 uh presumably to work

490
00:21:09,200 --> 00:21:11,600
with earlier versions uh i just haven't

491
00:21:11,600 --> 00:21:12,799
tested with it

492
00:21:12,799 --> 00:21:15,120
so not that it won't work but this is

493
00:21:15,120 --> 00:21:17,840
sort of our backwards version

494
00:21:17,840 --> 00:21:19,360
so far i wanted to report on

495
00:21:19,360 --> 00:21:22,159
interoperability successes we have had

496
00:21:22,159 --> 00:21:24,080
uh successful interoperability with

497
00:21:24,080 --> 00:21:26,080
apple's um

498
00:21:26,080 --> 00:21:28,480
implementation as randall just talked

499
00:21:28,480 --> 00:21:31,039
about the one that they didn't go

500
00:21:31,039 --> 00:21:32,799
so we've had successful implementation

501
00:21:32,799 --> 00:21:35,120
interoperation with that one and also

502
00:21:35,120 --> 00:21:37,360
successful interoperation with apple's

503
00:21:37,360 --> 00:21:39,200
public measurement endpoints

504
00:21:39,200 --> 00:21:41,280
um that are out there and there are the

505
00:21:41,280 --> 00:21:43,360
same ones that

506
00:21:43,360 --> 00:21:46,720
are used by the mac os and ios

507
00:21:46,720 --> 00:21:48,080
clients

508
00:21:48,080 --> 00:21:50,159
the to do on the interoperability right

509
00:21:50,159 --> 00:21:52,720
now is to do calibration of the rpm

510
00:21:52,720 --> 00:21:53,679
measurement

511
00:21:53,679 --> 00:21:56,240
between the network quality

512
00:21:56,240 --> 00:21:59,840
client that's in mac os and ios and uh

513
00:21:59,840 --> 00:22:01,520
our version so we're currently working

514
00:22:01,520 --> 00:22:03,918
on that

515
00:22:04,400 --> 00:22:06,880
just a few lessons learned uh before i

516
00:22:06,880 --> 00:22:09,280
turn it back over to kristoff

517
00:22:09,280 --> 00:22:12,080
and one of the really important lessons

518
00:22:12,080 --> 00:22:15,840
that we learned was to ensure that go's

519
00:22:15,840 --> 00:22:20,559
http api opens http connections

520
00:22:20,559 --> 00:22:22,080
uh when we

521
00:22:22,080 --> 00:22:23,840
attempt to use some advanced

522
00:22:23,840 --> 00:22:27,360
configuration options on the http api it

523
00:22:27,360 --> 00:22:31,120
tends to default back to uh http 1.1

524
00:22:31,120 --> 00:22:32,880
connections and we really want to make

525
00:22:32,880 --> 00:22:35,200
sure that that's uh 2.0

526
00:22:35,200 --> 00:22:37,039
one of the other lessons that one of the

527
00:22:37,039 --> 00:22:38,400
other big lessons that we learned that

528
00:22:38,400 --> 00:22:40,400
took a long time to overcome

529
00:22:40,400 --> 00:22:44,320
is that uh those http api aggressively

530
00:22:44,320 --> 00:22:46,559
pools tcp connections

531
00:22:46,559 --> 00:22:48,400
so that prevents us from saturating the

532
00:22:48,400 --> 00:22:49,760
bandwidth

533
00:22:49,760 --> 00:22:51,520
in the way that we really want to to be

534
00:22:51,520 --> 00:22:54,000
able to do saturation

535
00:22:54,000 --> 00:22:55,679
finally one of the big lessons that we

536
00:22:55,679 --> 00:22:57,919
learned is to build in debugging support

537
00:22:57,919 --> 00:22:59,200
from the beginning

538
00:22:59,200 --> 00:23:00,799
one of the things that the

539
00:23:00,799 --> 00:23:03,200
implementation has now is the ability to

540
00:23:03,200 --> 00:23:05,679
log per session ssl keys

541
00:23:05,679 --> 00:23:07,120
which give you the option or the

542
00:23:07,120 --> 00:23:09,360
opportunity to use wireshark to do

543
00:23:09,360 --> 00:23:12,880
debugging of connections and um

544
00:23:12,880 --> 00:23:15,440
and at the saturation as it goes

545
00:23:15,440 --> 00:23:19,039
finally uh as usual with this with any

546
00:23:19,039 --> 00:23:21,200
implementation and interoperation test

547
00:23:21,200 --> 00:23:23,919
and work is to take advantage of this

548
00:23:23,919 --> 00:23:26,720
experience to clarify ambiguities in the

549
00:23:26,720 --> 00:23:29,440
protocol and to get those rounded out

550
00:23:29,440 --> 00:23:30,799
and that's one of the things that i

551
00:23:30,799 --> 00:23:32,480
think kristoff will talk about as he

552
00:23:32,480 --> 00:23:33,679
goes into

553
00:23:33,679 --> 00:23:35,280
talking about the protocol itself and

554
00:23:35,280 --> 00:23:36,960
the changes that we've made so i don't

555
00:23:36,960 --> 00:23:39,919
want to steal his thunder but um

556
00:23:39,919 --> 00:23:41,600
feel free as we go forward at the end of

557
00:23:41,600 --> 00:23:43,039
the talk if there's any questions i

558
00:23:43,039 --> 00:23:45,120
would love to have those and please feel

559
00:23:45,120 --> 00:23:47,760
free to reach out on github and send

560
00:23:47,760 --> 00:23:49,919
patches or submit issues if you if you

561
00:23:49,919 --> 00:23:53,520
try it out thank you very much

562
00:23:55,840 --> 00:23:58,400
thank you will

563
00:23:58,400 --> 00:24:00,640
that was great

564
00:24:00,640 --> 00:24:02,159
so

565
00:24:02,159 --> 00:24:04,799
over to the major changes in the itf

566
00:24:04,799 --> 00:24:06,240
draft um

567
00:24:06,240 --> 00:24:07,600
thank you very much for the working

568
00:24:07,600 --> 00:24:09,600
group group adoption

569
00:24:09,600 --> 00:24:12,559
um so during this presentation i want to

570
00:24:12,559 --> 00:24:14,640
address mostly the two biggest

571
00:24:14,640 --> 00:24:16,159
discussion points

572
00:24:16,159 --> 00:24:18,000
which were around what is working

573
00:24:18,000 --> 00:24:20,320
conditions and how can we interpret

574
00:24:20,320 --> 00:24:22,320
responsiveness results

575
00:24:22,320 --> 00:24:24,240
additionally they were in terms of the

576
00:24:24,240 --> 00:24:25,840
changes to the draft there were a lot of

577
00:24:25,840 --> 00:24:27,440
minor tweaks in the wording and

578
00:24:27,440 --> 00:24:29,919
clarifications

579
00:24:29,919 --> 00:24:32,400
thanks to many contributors particularly

580
00:24:32,400 --> 00:24:34,080
will also from his implementation

581
00:24:34,080 --> 00:24:35,279
experience

582
00:24:35,279 --> 00:24:37,679
on uh to make things more clear on how

583
00:24:37,679 --> 00:24:40,159
the protocol actually works

584
00:24:40,159 --> 00:24:41,279
so

585
00:24:41,279 --> 00:24:44,240
the first big discussion point was what

586
00:24:44,240 --> 00:24:48,240
does it actually mean working conditions

587
00:24:48,240 --> 00:24:50,159
so in that sense i

588
00:24:50,159 --> 00:24:52,240
clarified the definition of working

589
00:24:52,240 --> 00:24:55,360
conditions in the uh section in the

590
00:24:55,360 --> 00:24:57,360
working conditions section

591
00:24:57,360 --> 00:24:59,200
and so i want to

592
00:24:59,200 --> 00:25:01,440
revisit this here and open it up for any

593
00:25:01,440 --> 00:25:04,799
kind of discussions that may come up

594
00:25:04,799 --> 00:25:06,240
so

595
00:25:06,240 --> 00:25:08,400
the goal of the working conditions the

596
00:25:08,400 --> 00:25:10,799
way we define it is to create

597
00:25:10,799 --> 00:25:14,400
a realistic traffic pattern

598
00:25:14,400 --> 00:25:16,000
that is exploring the worst case

599
00:25:16,000 --> 00:25:17,760
scenario and that is an important

600
00:25:17,760 --> 00:25:20,400
definition in the sense that realistic

601
00:25:20,400 --> 00:25:22,000
means that

602
00:25:22,000 --> 00:25:23,760
we don't want to

603
00:25:23,760 --> 00:25:26,000
flood the network with

604
00:25:26,000 --> 00:25:29,120
i don't know udp traffic for example

605
00:25:29,120 --> 00:25:30,960
because we are not trying to

606
00:25:30,960 --> 00:25:34,159
measure the maximum capacity um like in

607
00:25:34,159 --> 00:25:36,400
the previous draft we are trying to

608
00:25:36,400 --> 00:25:39,200
explore how the network behaves

609
00:25:39,200 --> 00:25:41,360
when it is under

610
00:25:41,360 --> 00:25:44,080
traffic patterns that end users actually

611
00:25:44,080 --> 00:25:47,760
generate and so we use http 2 or http 3

612
00:25:47,760 --> 00:25:49,760
in the future with standard congestion

613
00:25:49,760 --> 00:25:52,480
controls that way we create the

614
00:25:52,480 --> 00:25:54,240
realistic part of the network

615
00:25:54,240 --> 00:25:57,600
responsiveness working condition

616
00:25:57,600 --> 00:25:59,520
and how can we push it to the worst case

617
00:25:59,520 --> 00:26:02,159
scenario is by creating multiple bulk

618
00:26:02,159 --> 00:26:04,400
http requests

619
00:26:04,400 --> 00:26:06,480
like now what we want to do is in the

620
00:26:06,480 --> 00:26:08,960
responsiveness test is we want to expose

621
00:26:08,960 --> 00:26:12,240
any kind of buffer bloat right and a

622
00:26:12,240 --> 00:26:15,279
single tcp connection already would

623
00:26:15,279 --> 00:26:16,960
create the kind of buffer load that we

624
00:26:16,960 --> 00:26:18,559
need

625
00:26:18,559 --> 00:26:20,880
to measure it however

626
00:26:20,880 --> 00:26:24,320
a single connection with tcps sawtooth

627
00:26:24,320 --> 00:26:26,720
would create only very temporary buffer

628
00:26:26,720 --> 00:26:28,240
bloat

629
00:26:28,240 --> 00:26:30,640
however we want to create what we call a

630
00:26:30,640 --> 00:26:32,720
stable

631
00:26:32,720 --> 00:26:34,559
buffer load situation so that we can

632
00:26:34,559 --> 00:26:36,400
actually measure it over a certain

633
00:26:36,400 --> 00:26:39,360
duration of time and so we create this

634
00:26:39,360 --> 00:26:40,400
kind of

635
00:26:40,400 --> 00:26:42,559
um

636
00:26:42,559 --> 00:26:44,799
stable buffer load situation by creating

637
00:26:44,799 --> 00:26:47,679
multiple http requests and so we really

638
00:26:47,679 --> 00:26:49,360
push the network into a worst case

639
00:26:49,360 --> 00:26:50,640
scenario

640
00:26:50,640 --> 00:26:52,880
but even by creating those multiple bulk

641
00:26:52,880 --> 00:26:57,279
http requests we remain as a realistic

642
00:26:57,279 --> 00:26:59,039
traffic pattern because

643
00:26:59,039 --> 00:27:01,440
um it's very similar to basically

644
00:27:01,440 --> 00:27:03,520
when you receive a

645
00:27:03,520 --> 00:27:06,240
message or send an email with multiple

646
00:27:06,240 --> 00:27:10,480
large attachments same scenario

647
00:27:11,200 --> 00:27:13,279
so

648
00:27:13,279 --> 00:27:15,520
there any questions or comments on the

649
00:27:15,520 --> 00:27:18,918
working conditions

650
00:27:27,120 --> 00:27:28,080
okay

651
00:27:28,080 --> 00:27:29,520
thanks then i

652
00:27:29,520 --> 00:27:31,760
move on to the next part

653
00:27:31,760 --> 00:27:34,080
another part of the discussions we had

654
00:27:34,080 --> 00:27:35,919
was about how to interpret

655
00:27:35,919 --> 00:27:38,399
responsiveness results

656
00:27:38,399 --> 00:27:41,919
and what are we actually measuring

657
00:27:41,919 --> 00:27:44,159
so

658
00:27:44,880 --> 00:27:46,559
i mentioned earlier that we are trying

659
00:27:46,559 --> 00:27:49,039
to expose buffer bloat and typically

660
00:27:49,039 --> 00:27:51,279
people look at buffer load as what is

661
00:27:51,279 --> 00:27:53,200
ever is happening inside the routers and

662
00:27:53,200 --> 00:27:54,640
switches

663
00:27:54,640 --> 00:27:56,080
now

664
00:27:56,080 --> 00:27:59,120
that is true definitely and each

665
00:27:59,120 --> 00:28:01,200
network point between your client and

666
00:28:01,200 --> 00:28:03,679
the server has the potential to expose

667
00:28:03,679 --> 00:28:05,520
buffer bloat

668
00:28:05,520 --> 00:28:06,640
and to

669
00:28:06,640 --> 00:28:09,200
to have buffer bloat however

670
00:28:09,200 --> 00:28:11,440
buffer blows can also happen in the end

671
00:28:11,440 --> 00:28:13,279
host sets

672
00:28:13,279 --> 00:28:14,480
the entire

673
00:28:14,480 --> 00:28:17,520
networking stack from ip all the way up

674
00:28:17,520 --> 00:28:20,799
to http can be subject to buffer load

675
00:28:20,799 --> 00:28:22,720
and so each of these

676
00:28:22,720 --> 00:28:24,720
points in the in the networking stack

677
00:28:24,720 --> 00:28:27,200
layer has the potential to create buffer

678
00:28:27,200 --> 00:28:30,720
bloat and so because our methodology

679
00:28:30,720 --> 00:28:33,200
is using http

680
00:28:33,200 --> 00:28:35,520
we um

681
00:28:35,520 --> 00:28:37,679
we may expose these kind of buffer

682
00:28:37,679 --> 00:28:40,080
blocks as well

683
00:28:40,080 --> 00:28:44,799
it can be argued whether that is um

684
00:28:44,799 --> 00:28:45,600
uh

685
00:28:45,600 --> 00:28:47,919
intentional or not and in our case it

686
00:28:47,919 --> 00:28:50,240
actually is intentional right we

687
00:28:50,240 --> 00:28:52,240
because we want to measure

688
00:28:52,240 --> 00:28:54,320
responsiveness the way the end users are

689
00:28:54,320 --> 00:28:57,360
experiencing we are intentionally using

690
00:28:57,360 --> 00:29:00,000
http so that we are able to expose these

691
00:29:00,000 --> 00:29:02,720
kind of buffer loads on the end endpoint

692
00:29:02,720 --> 00:29:04,960
networking stacks

693
00:29:04,960 --> 00:29:05,760
so

694
00:29:05,760 --> 00:29:07,520
one of the questions during the adoption

695
00:29:07,520 --> 00:29:10,480
call was well if i'm having let's say

696
00:29:10,480 --> 00:29:11,600
i'm

697
00:29:11,600 --> 00:29:12,640
measuring

698
00:29:12,640 --> 00:29:13,060
um

699
00:29:13,060 --> 00:29:14,720
[Music]

700
00:29:14,720 --> 00:29:17,679
responsiveness and i create this load

701
00:29:17,679 --> 00:29:19,840
generating connection between the client

702
00:29:19,840 --> 00:29:22,080
and the server here in red right and

703
00:29:22,080 --> 00:29:24,080
it's filling the pipe and it exposing it

704
00:29:24,080 --> 00:29:26,880
is exposing buffer bloat on the right

705
00:29:26,880 --> 00:29:28,799
side those blue

706
00:29:28,799 --> 00:29:31,039
boxes that i draw here let's say the

707
00:29:31,039 --> 00:29:32,559
buffer load is happening in this in

708
00:29:32,559 --> 00:29:35,200
these sections the http the tls and the

709
00:29:35,200 --> 00:29:37,120
tcp connection

710
00:29:37,120 --> 00:29:38,080
now

711
00:29:38,080 --> 00:29:40,799
as as a measurement

712
00:29:40,799 --> 00:29:41,600
uh

713
00:29:41,600 --> 00:29:44,159
user how would i be able to rootcast it

714
00:29:44,159 --> 00:29:45,919
and to identify that the buffer load is

715
00:29:45,919 --> 00:29:47,360
happening there

716
00:29:47,360 --> 00:29:48,799
well

717
00:29:48,799 --> 00:29:50,720
one way

718
00:29:50,720 --> 00:29:52,559
it is possible to do this is because we

719
00:29:52,559 --> 00:29:53,520
create

720
00:29:53,520 --> 00:29:55,679
not only responsiveness probes on the

721
00:29:55,679 --> 00:29:57,760
load generating connection

722
00:29:57,760 --> 00:30:00,559
we also create separate connections to

723
00:30:00,559 --> 00:30:02,480
propel responsiveness

724
00:30:02,480 --> 00:30:04,640
and by using these separate connections

725
00:30:04,640 --> 00:30:06,640
we are able to identify

726
00:30:06,640 --> 00:30:08,720
whether the buffer bloat is happening

727
00:30:08,720 --> 00:30:11,120
deep inside the network or it is

728
00:30:11,120 --> 00:30:13,039
happening on an end

729
00:30:13,039 --> 00:30:15,760
and or endpoint networking stack on the

730
00:30:15,760 --> 00:30:18,880
http or tls or tcp layout

731
00:30:18,880 --> 00:30:20,559
so that with this

732
00:30:20,559 --> 00:30:22,240
explanation in the new section

733
00:30:22,240 --> 00:30:24,880
interpreting responsiveness results

734
00:30:24,880 --> 00:30:26,080
i hope that i

735
00:30:26,080 --> 00:30:27,120
addressed

736
00:30:27,120 --> 00:30:30,000
all the comments around how we can

737
00:30:30,000 --> 00:30:32,000
root cause and understand the

738
00:30:32,000 --> 00:30:35,799
responsiveness results

739
00:30:36,159 --> 00:30:39,039
so are there does anybody has any

740
00:30:39,039 --> 00:30:42,080
questions or suggestions around uh

741
00:30:42,080 --> 00:30:43,760
these uh

742
00:30:43,760 --> 00:30:45,679
say replies to the comments during the

743
00:30:45,679 --> 00:30:49,159
adoption call

744
00:30:54,080 --> 00:30:57,039
um yeah so please get in the meat echo q

745
00:30:57,039 --> 00:30:58,960
if you have any questions

746
00:30:58,960 --> 00:30:59,919
uh

747
00:30:59,919 --> 00:31:03,679
ignacio i do see that you have

748
00:31:03,679 --> 00:31:04,880
uh some

749
00:31:04,880 --> 00:31:06,559
comments or questions on the chat be

750
00:31:06,559 --> 00:31:09,678
happy to hear those as well

751
00:31:09,760 --> 00:31:13,720
and stuart who's in the cube

752
00:31:21,519 --> 00:31:23,440
so i assume i'm doing this right i click

753
00:31:23,440 --> 00:31:25,120
the button on my laptop and i'm coming

754
00:31:25,120 --> 00:31:27,360
to the microphone

755
00:31:27,360 --> 00:31:28,799
yes okay that's

756
00:31:28,799 --> 00:31:30,240
you're good

757
00:31:30,240 --> 00:31:32,559
okay i just wanted to thank william for

758
00:31:32,559 --> 00:31:34,159
getting involved with this and doing the

759
00:31:34,159 --> 00:31:36,720
clients in go i think that's awesome so

760
00:31:36,720 --> 00:31:39,919
thank you for that contribution

761
00:31:50,320 --> 00:31:54,159
and see thanks stuart i also see there's

762
00:31:54,159 --> 00:31:55,519
a comment on

763
00:31:55,519 --> 00:31:57,039
the chat

764
00:31:57,039 --> 00:31:59,919
how do we intend to create real traffic

765
00:31:59,919 --> 00:32:02,159
um

766
00:32:03,120 --> 00:32:06,000
so the real traffic is by

767
00:32:06,000 --> 00:32:09,279
we create http bulk data transfers so we

768
00:32:09,279 --> 00:32:10,960
do an http get

769
00:32:10,960 --> 00:32:13,760
for a very large file and depending on

770
00:32:13,760 --> 00:32:15,279
the server implementation we actually

771
00:32:15,279 --> 00:32:16,960
recommend this large file to be

772
00:32:16,960 --> 00:32:20,080
basically an infinite uh response

773
00:32:20,080 --> 00:32:21,120
and so

774
00:32:21,120 --> 00:32:23,600
that is our way to create unreal traffic

775
00:32:23,600 --> 00:32:26,240
because http gets for large file is what

776
00:32:26,240 --> 00:32:28,640
happens when you are downloading a large

777
00:32:28,640 --> 00:32:31,679
attachment from an email

778
00:32:31,679 --> 00:32:33,200
and so this is

779
00:32:33,200 --> 00:32:36,000
as far as we see the closest we can get

780
00:32:36,000 --> 00:32:39,679
to a realistic traffic pattern

781
00:32:39,919 --> 00:32:41,360
all right

782
00:32:41,360 --> 00:32:42,640
and then

783
00:32:42,640 --> 00:32:44,480
listen also do you want to unmute

784
00:32:44,480 --> 00:32:45,600
yourself

785
00:32:45,600 --> 00:32:48,480
thank you thank you

786
00:32:50,080 --> 00:32:52,960
hi everybody

787
00:32:54,480 --> 00:32:59,039
okay um oh i am my question is related

788
00:32:59,039 --> 00:33:01,039
to

789
00:33:01,039 --> 00:33:03,519
because normally the the real traffic

790
00:33:03,519 --> 00:33:04,880
inside

791
00:33:04,880 --> 00:33:05,679
of

792
00:33:05,679 --> 00:33:08,399
of a network depends not just in one

793
00:33:08,399 --> 00:33:11,279
client dependent several clients

794
00:33:11,279 --> 00:33:14,000
multiple clients and this is the part

795
00:33:14,000 --> 00:33:17,519
which is really difficult to imitate

796
00:33:17,519 --> 00:33:20,880
imagine that you are behind a network

797
00:33:20,880 --> 00:33:22,159
and

798
00:33:22,159 --> 00:33:22,840
and

799
00:33:22,840 --> 00:33:26,240
then okay it's now so clear in the

800
00:33:26,240 --> 00:33:31,200
literature but normally it depends

801
00:33:36,840 --> 00:33:39,919
on on the

802
00:33:39,919 --> 00:33:44,480
on the loop of a tcp for instance when

803
00:33:44,480 --> 00:33:46,159
some packet is dropped something like

804
00:33:46,159 --> 00:33:47,519
that this is

805
00:33:47,519 --> 00:33:49,840
this is the

806
00:33:49,840 --> 00:33:51,039
the

807
00:33:51,039 --> 00:33:53,679
idea about the question how do you plan

808
00:33:53,679 --> 00:33:56,799
to imitate this large amount of clients

809
00:33:56,799 --> 00:33:59,039
doing traffic at the same time

810
00:33:59,039 --> 00:34:01,360
thank you

811
00:34:01,440 --> 00:34:03,039
thank you for this question

812
00:34:03,039 --> 00:34:04,960
um so

813
00:34:04,960 --> 00:34:08,159
i agree it's that's uh

814
00:34:08,159 --> 00:34:11,119
imitating multiple different clients and

815
00:34:11,119 --> 00:34:15,919
if i say clients i mean different um

816
00:34:16,239 --> 00:34:19,440
different devices is unfortunately not

817
00:34:19,440 --> 00:34:21,359
possible with this kind of a test we

818
00:34:21,359 --> 00:34:23,040
would need to have some

819
00:34:23,040 --> 00:34:24,960
inter-device

820
00:34:24,960 --> 00:34:27,679
synchronization and communication to

821
00:34:27,679 --> 00:34:29,520
start the test

822
00:34:29,520 --> 00:34:31,918
and then

823
00:34:32,560 --> 00:34:35,199
have them all create these kind of http

824
00:34:35,199 --> 00:34:37,679
bulk data transfers at the same time

825
00:34:37,679 --> 00:34:39,839
um and doing that is not possible

826
00:34:39,839 --> 00:34:42,879
without without a

827
00:34:42,879 --> 00:34:45,520
protocol to talk between the devices

828
00:34:45,520 --> 00:34:48,239
and it's from our perspective currently

829
00:34:48,239 --> 00:34:51,199
out of scope for this draft

830
00:34:51,199 --> 00:34:54,280
to do this for now we are targeting only

831
00:34:54,280 --> 00:34:57,040
[Music]

832
00:34:57,040 --> 00:34:59,040
load that is generated by the device

833
00:34:59,040 --> 00:35:02,040
itself

834
00:35:03,040 --> 00:35:05,920
um you had a second question around uh

835
00:35:05,920 --> 00:35:07,040
tcp

836
00:35:07,040 --> 00:35:10,800
uh and how it reacts to um how to

837
00:35:10,800 --> 00:35:13,280
react to the packet loss and so on

838
00:35:13,280 --> 00:35:15,119
that is the reason why we create

839
00:35:15,119 --> 00:35:18,960
multiple tcp connections so that we can

840
00:35:18,960 --> 00:35:21,280
when one tcp experiences a packet loss

841
00:35:21,280 --> 00:35:23,040
the other one

842
00:35:23,040 --> 00:35:25,280
is still going and sending it at full

843
00:35:25,280 --> 00:35:27,680
speed

844
00:35:27,839 --> 00:35:31,839
all right and we have al in the queue

845
00:35:33,760 --> 00:35:35,920
go ahead

846
00:35:35,920 --> 00:35:38,240
okay thanks

847
00:35:38,240 --> 00:35:40,720
uh thanks for your updated draft uh

848
00:35:40,720 --> 00:35:43,440
christopher and to everyone uh for your

849
00:35:43,440 --> 00:35:46,960
work and implementation um a a couple of

850
00:35:46,960 --> 00:35:49,200
questions to your uh

851
00:35:49,200 --> 00:35:51,200
your your summary trying to close the

852
00:35:51,200 --> 00:35:52,560
discussion on

853
00:35:52,560 --> 00:35:55,200
working load and responsiveness here the

854
00:35:55,200 --> 00:35:56,640
um

855
00:35:56,640 --> 00:35:59,119
i noted i read the draft again yesterday

856
00:35:59,119 --> 00:36:01,200
quickly and and i noted

857
00:36:01,200 --> 00:36:03,440
sort of the use of capacity

858
00:36:03,440 --> 00:36:04,320
uh

859
00:36:04,320 --> 00:36:05,839
alongside

860
00:36:05,839 --> 00:36:06,880
um

861
00:36:06,880 --> 00:36:08,400
you know the capacity of the link

862
00:36:08,400 --> 00:36:11,280
alongside words like saturation and

863
00:36:11,280 --> 00:36:14,240
and then you know the real test is based

864
00:36:14,240 --> 00:36:16,880
on uh tcp maximum

865
00:36:16,880 --> 00:36:18,560
or good put

866
00:36:18,560 --> 00:36:20,240
so

867
00:36:20,240 --> 00:36:23,280
i mean there's there's still

868
00:36:23,280 --> 00:36:25,440
um you know

869
00:36:25,440 --> 00:36:27,920
obviously some different terms and some

870
00:36:27,920 --> 00:36:30,000
different um

871
00:36:30,000 --> 00:36:31,119
uh

872
00:36:31,119 --> 00:36:33,680
ways to interpret what uh the working

873
00:36:33,680 --> 00:36:35,359
load conditions

874
00:36:35,359 --> 00:36:36,079
all

875
00:36:36,079 --> 00:36:37,200
could be

876
00:36:37,200 --> 00:36:38,160
um

877
00:36:38,160 --> 00:36:41,200
for example you know where in the in the

878
00:36:41,200 --> 00:36:43,760
metric and method that uh

879
00:36:43,760 --> 00:36:45,200
the protocol i just talked about

880
00:36:45,200 --> 00:36:47,920
supports uh that's a maximum iplayer

881
00:36:47,920 --> 00:36:50,160
capacity so there's

882
00:36:50,160 --> 00:36:52,480
still i think a little little ambiguity

883
00:36:52,480 --> 00:36:54,480
in the terminology that you might be

884
00:36:54,480 --> 00:36:56,079
able to root out

885
00:36:56,079 --> 00:37:00,640
um also i didn't notice in the draft

886
00:37:00,640 --> 00:37:01,760
any

887
00:37:01,760 --> 00:37:04,160
uh discussion of the effects of

888
00:37:04,160 --> 00:37:07,599
congestion control algorithms

889
00:37:07,599 --> 00:37:10,640
uh you know sort of the older ones are

890
00:37:10,640 --> 00:37:12,880
more likely to fill the buffers

891
00:37:12,880 --> 00:37:15,599
and some of the newer ones have the goal

892
00:37:15,599 --> 00:37:17,920
of of not doing that

893
00:37:17,920 --> 00:37:19,440
so um

894
00:37:19,440 --> 00:37:20,560
you know you're going to get different

895
00:37:20,560 --> 00:37:23,200
levels of working conditions from those

896
00:37:23,200 --> 00:37:24,720
and um

897
00:37:24,720 --> 00:37:27,920
and and as ignacio says uh with multiple

898
00:37:27,920 --> 00:37:29,680
clients you're going to get kind of a

899
00:37:29,680 --> 00:37:31,040
mixture of

900
00:37:31,040 --> 00:37:31,839
those

901
00:37:31,839 --> 00:37:33,920
congestion control algorithms

902
00:37:33,920 --> 00:37:35,119
potentially

903
00:37:35,119 --> 00:37:37,280
so there's you know there's some some

904
00:37:37,280 --> 00:37:40,480
things to talk about here and and um

905
00:37:40,480 --> 00:37:42,400
you know unfortunately i don't think

906
00:37:42,400 --> 00:37:44,240
we can shut the door on on all these

907
00:37:44,240 --> 00:37:46,800
discussions quite yet but thanks for uh

908
00:37:46,800 --> 00:37:51,560
putting your work together appreciate it

909
00:37:51,760 --> 00:37:54,480
thanks a lot for your feedback al um

910
00:37:54,480 --> 00:37:56,960
yeah we'll definitely try to clean up

911
00:37:56,960 --> 00:37:59,920
some parts of the capacity wording and

912
00:37:59,920 --> 00:38:02,000
uh i'll take your feedback and go

913
00:38:02,000 --> 00:38:03,359
another pass

914
00:38:03,359 --> 00:38:04,560
on

915
00:38:04,560 --> 00:38:06,720
capacity and the wording we're making

916
00:38:06,720 --> 00:38:09,200
sure that we use the right terminologies

917
00:38:09,200 --> 00:38:10,240
there

918
00:38:10,240 --> 00:38:12,320
and uh i like actually the suggestion

919
00:38:12,320 --> 00:38:13,599
aren't having a discussion about

920
00:38:13,599 --> 00:38:15,200
congestion controls

921
00:38:15,200 --> 00:38:17,119
um i'll add a subject

922
00:38:17,119 --> 00:38:18,320
section

923
00:38:18,320 --> 00:38:21,119
for that as well

924
00:38:27,920 --> 00:38:29,839
all right thank you

925
00:38:29,839 --> 00:38:32,720
and i think we are up on time

926
00:38:32,720 --> 00:38:34,079
christoph were you at the end of your

927
00:38:34,079 --> 00:38:36,480
slides

928
00:38:36,480 --> 00:38:37,599
yes

929
00:38:37,599 --> 00:38:39,839
okay

930
00:38:39,839 --> 00:38:41,440
well thank you very much

931
00:38:41,440 --> 00:38:42,320
um

932
00:38:42,320 --> 00:38:46,800
and i believe next we have

933
00:38:48,160 --> 00:38:48,960
and

934
00:38:48,960 --> 00:38:51,040
are you able to

935
00:38:51,040 --> 00:38:52,960
drive the slides yourself or do you want

936
00:38:52,960 --> 00:38:54,960
us to do that

937
00:38:54,960 --> 00:38:55,920
uh

938
00:38:55,920 --> 00:38:57,119
would you help

939
00:38:57,119 --> 00:38:59,200
to share the slide i can thank you i can

940
00:38:59,200 --> 00:39:00,480
do it

941
00:39:00,480 --> 00:39:03,520
let's let me find it

942
00:39:08,240 --> 00:39:09,680
there you go

943
00:39:09,680 --> 00:39:10,640
okay

944
00:39:10,640 --> 00:39:13,440
hello everyone uh it's xiaomi speaking

945
00:39:13,440 --> 00:39:15,760
this presentation is on echo request

946
00:39:15,760 --> 00:39:18,160
reply for enabled institute om

947
00:39:18,160 --> 00:39:20,240
capabilities

948
00:39:20,240 --> 00:39:23,200
the latest version is 0 3

949
00:39:23,200 --> 00:39:26,839
the last itf the 0 1 version has been

950
00:39:26,839 --> 00:39:30,799
presented next slide please

951
00:39:34,000 --> 00:39:37,119
after ietf112

952
00:39:37,119 --> 00:39:40,560
three discussion points were raised and

953
00:39:40,560 --> 00:39:43,760
fully discussed on the main list

954
00:39:43,760 --> 00:39:46,400
first one is this document

955
00:39:46,400 --> 00:39:47,760
still needed

956
00:39:47,760 --> 00:39:50,240
in a limited domain

957
00:39:50,240 --> 00:39:53,440
the quick answer is yes

958
00:39:53,440 --> 00:39:56,400
correspondingly updates have been made

959
00:39:56,400 --> 00:39:57,200
in the

960
00:39:57,200 --> 00:39:59,359
introduction section

961
00:39:59,359 --> 00:40:02,960
to clarify clarify its usage

962
00:40:02,960 --> 00:40:05,440
second discussion point is

963
00:40:05,440 --> 00:40:08,319
may this document be obsoleted by a

964
00:40:08,319 --> 00:40:10,319
young model

965
00:40:10,319 --> 00:40:12,880
the quick answer is no

966
00:40:12,880 --> 00:40:15,359
correspondingly a suggestion on using

967
00:40:15,359 --> 00:40:16,720
icmp

968
00:40:16,720 --> 00:40:18,720
to carry a model

969
00:40:18,720 --> 00:40:21,119
is not accepted

970
00:40:21,119 --> 00:40:24,319
the third discussion point is

971
00:40:24,319 --> 00:40:25,520
are more requirements than

972
00:40:25,520 --> 00:40:27,280
recommendations

973
00:40:27,280 --> 00:40:29,839
needed for security

974
00:40:29,839 --> 00:40:32,079
the quick answer is yes

975
00:40:32,079 --> 00:40:34,079
and the requirements are specific to

976
00:40:34,079 --> 00:40:35,680
icmp v6

977
00:40:35,680 --> 00:40:37,599
etc

978
00:40:37,599 --> 00:40:39,520
clarifications

979
00:40:39,520 --> 00:40:41,280
have been made

980
00:40:41,280 --> 00:40:43,839
in the security considerations section

981
00:40:43,839 --> 00:40:46,160
of this job

982
00:40:46,160 --> 00:40:49,799
next slide please

983
00:40:52,800 --> 00:40:56,480
uh this slide provides more details

984
00:40:56,480 --> 00:40:59,040
on discussion on point one

985
00:40:59,040 --> 00:41:04,839
uh in a limited domain as defined in rc

986
00:41:04,839 --> 00:41:08,319
8799 this document

987
00:41:08,319 --> 00:41:10,880
is not needed if

988
00:41:10,880 --> 00:41:13,920
both preconditions exist

989
00:41:13,920 --> 00:41:15,200
and the first one

990
00:41:15,200 --> 00:41:17,040
a control entity

991
00:41:17,040 --> 00:41:20,079
that has control over every iom device

992
00:41:20,079 --> 00:41:22,160
is deployed

993
00:41:22,160 --> 00:41:23,680
second one

994
00:41:23,680 --> 00:41:26,240
a strict explicit path

995
00:41:26,240 --> 00:41:28,720
for the iom package

996
00:41:28,720 --> 00:41:32,400
is provisioned by the control entity

997
00:41:32,400 --> 00:41:35,599
and the takeaway from the discussion

998
00:41:35,599 --> 00:41:36,960
is that

999
00:41:36,960 --> 00:41:39,680
if neither of the above preconditions

1000
00:41:39,680 --> 00:41:40,800
can be

1001
00:41:40,800 --> 00:41:42,480
confirmed

1002
00:41:42,480 --> 00:41:44,640
then this document is still needed in a

1003
00:41:44,640 --> 00:41:47,520
limited domain

1004
00:41:47,520 --> 00:41:50,400
next slide is

1005
00:41:54,800 --> 00:41:57,599
this slide provides more details on

1006
00:41:57,599 --> 00:42:00,640
discussion point two

1007
00:42:00,960 --> 00:42:03,040
during the first

1008
00:42:03,040 --> 00:42:04,800
working group adoption part of this

1009
00:42:04,800 --> 00:42:06,480
draft

1010
00:42:06,480 --> 00:42:09,520
there was an order suggestion to use

1011
00:42:09,520 --> 00:42:11,119
netconf

1012
00:42:11,119 --> 00:42:13,680
between irm encapsulating node

1013
00:42:13,680 --> 00:42:18,720
and iom transit encapsulating nodes

1014
00:42:18,720 --> 00:42:21,040
one paragraph was added

1015
00:42:21,040 --> 00:42:23,680
into the introduction section

1016
00:42:23,680 --> 00:42:26,319
to explain why it's not

1017
00:42:26,319 --> 00:42:29,280
a preferred approach

1018
00:42:29,280 --> 00:42:31,839
after that there was a later suggestion

1019
00:42:31,839 --> 00:42:33,119
to use

1020
00:42:33,119 --> 00:42:35,680
icmp to carry the

1021
00:42:35,680 --> 00:42:38,000
informational elements

1022
00:42:38,000 --> 00:42:41,440
derived from the yam model

1023
00:42:41,440 --> 00:42:43,280
however

1024
00:42:43,280 --> 00:42:45,280
i echo requested reply is not a

1025
00:42:45,280 --> 00:42:47,760
management protocol

1026
00:42:47,760 --> 00:42:50,960
like netconf or rest com

1027
00:42:50,960 --> 00:42:54,560
icmp doesn't seem suitable for

1028
00:42:54,560 --> 00:42:56,839
carrying informational elements

1029
00:42:56,839 --> 00:43:00,720
derived derived from the yam model

1030
00:43:00,720 --> 00:43:02,720
so

1031
00:43:02,720 --> 00:43:07,279
this latest suggestion is not accepted

1032
00:43:08,960 --> 00:43:12,520
next slide please

1033
00:43:15,520 --> 00:43:18,240
uh this slide provides

1034
00:43:18,240 --> 00:43:22,480
more details on discussion point three

1035
00:43:22,480 --> 00:43:24,640
a number of specific

1036
00:43:24,640 --> 00:43:26,880
security requirements

1037
00:43:26,880 --> 00:43:28,560
for

1038
00:43:28,560 --> 00:43:31,440
icmp v6

1039
00:43:31,440 --> 00:43:34,880
are defined in the icmp v6 extension

1040
00:43:34,880 --> 00:43:37,200
jobs

1041
00:43:37,839 --> 00:43:40,560
the enforcement of these security

1042
00:43:40,560 --> 00:43:42,640
methods

1043
00:43:42,640 --> 00:43:44,640
might be

1044
00:43:44,640 --> 00:43:46,480
discussed and

1045
00:43:46,480 --> 00:43:49,359
recorded in that jobs

1046
00:43:49,359 --> 00:43:50,960
so here

1047
00:43:50,960 --> 00:43:53,359
we list

1048
00:43:53,359 --> 00:43:56,319
other security methods

1049
00:43:56,319 --> 00:43:58,560
uh first one we can use

1050
00:43:58,560 --> 00:44:01,599
ipos and authentication header

1051
00:44:01,599 --> 00:44:04,000
or i'm encapsulating security parallel

1052
00:44:04,000 --> 00:44:05,520
header

1053
00:44:05,520 --> 00:44:08,880
to provide integrated protection

1054
00:44:08,880 --> 00:44:12,880
for the im capabilities information

1055
00:44:12,880 --> 00:44:15,760
we can also use ip encapsulating

1056
00:44:15,760 --> 00:44:18,960
security payload header to provide

1057
00:44:18,960 --> 00:44:20,400
privacy

1058
00:44:20,400 --> 00:44:23,359
protection

1059
00:44:23,359 --> 00:44:24,480
and

1060
00:44:24,480 --> 00:44:26,160
network operators

1061
00:44:26,160 --> 00:44:29,280
can establish policies

1062
00:44:29,280 --> 00:44:30,160
that

1063
00:44:30,160 --> 00:44:32,640
restrict access to the

1064
00:44:32,640 --> 00:44:37,560
smp v6 iom echo functionality

1065
00:44:38,400 --> 00:44:41,040
they can enable disable

1066
00:44:41,040 --> 00:44:43,359
icmpv6

1067
00:44:43,359 --> 00:44:46,640
iom echo functionality

1068
00:44:46,640 --> 00:44:48,560
they can define

1069
00:44:48,560 --> 00:44:51,839
enable the namespace ids

1070
00:44:51,839 --> 00:44:54,319
they can

1071
00:44:54,480 --> 00:44:57,440
do for each uh enable database namespace

1072
00:44:57,440 --> 00:44:59,520
id define the

1073
00:44:59,520 --> 00:45:01,040
prefix

1074
00:45:01,040 --> 00:45:03,599
from which is mpv6

1075
00:45:03,599 --> 00:45:08,480
iom echo request messages are acceptable

1076
00:45:08,480 --> 00:45:10,720
and last one

1077
00:45:10,720 --> 00:45:14,079
right limit incoming icmpv6

1078
00:45:14,079 --> 00:45:16,960
iomatica request messages

1079
00:45:16,960 --> 00:45:18,480
is also

1080
00:45:18,480 --> 00:45:20,160
a method

1081
00:45:20,160 --> 00:45:24,640
for the security education

1082
00:45:25,119 --> 00:45:29,400
next one slide please

1083
00:45:32,160 --> 00:45:36,240
a few other updates have been made

1084
00:45:36,240 --> 00:45:39,680
since i tf-112

1085
00:45:39,680 --> 00:45:42,480
first change is to

1086
00:45:42,480 --> 00:45:46,319
design tracing capabilities objects

1087
00:45:46,319 --> 00:45:49,280
including a pre-allocated tracing and

1088
00:45:49,280 --> 00:45:51,599
incremental tracing

1089
00:45:51,599 --> 00:45:53,839
egress mtu and

1090
00:45:53,839 --> 00:45:56,319
egress interface id

1091
00:45:56,319 --> 00:45:59,280
are substituted by ingress mtu and the

1092
00:45:59,280 --> 00:46:02,560
ingress interface id

1093
00:46:02,880 --> 00:46:06,079
because icmpv6 echo request

1094
00:46:06,079 --> 00:46:08,480
is testing the

1095
00:46:08,480 --> 00:46:12,480
for the responding node itself

1096
00:46:12,480 --> 00:46:16,000
the last two changes are on pot

1097
00:46:16,000 --> 00:46:18,880
proof of transit capabilities

1098
00:46:18,880 --> 00:46:23,040
object and h capabilities object

1099
00:46:23,040 --> 00:46:25,599
respectively

1100
00:46:25,599 --> 00:46:28,960
they are aimed to align with the latest

1101
00:46:28,960 --> 00:46:31,920
iom data draft

1102
00:46:31,920 --> 00:46:34,880
next slide please

1103
00:46:37,359 --> 00:46:40,319
the authors believe this chapter

1104
00:46:40,319 --> 00:46:43,520
is ready for our working group last call

1105
00:46:43,520 --> 00:46:46,240
so we kind of requested

1106
00:46:46,240 --> 00:46:48,319
working group chairs to

1107
00:46:48,319 --> 00:46:51,599
issue working of last call on its jobs

1108
00:46:51,599 --> 00:46:55,480
that's all thank you

1109
00:46:56,960 --> 00:46:58,720
all right thank you

1110
00:46:58,720 --> 00:47:01,359
do we have any um

1111
00:47:01,359 --> 00:47:03,040
comments

1112
00:47:03,040 --> 00:47:06,040
questions

1113
00:47:14,400 --> 00:47:16,000
does anyone in the room have any

1114
00:47:16,000 --> 00:47:18,800
concerns with going to

1115
00:47:18,800 --> 00:47:20,400
working group let's call on this

1116
00:47:20,400 --> 00:47:23,960
relatively soon

1117
00:47:37,760 --> 00:47:39,200
all right i'm not seeing anyone come

1118
00:47:39,200 --> 00:47:41,759
into the queue

1119
00:47:41,839 --> 00:47:44,640
so we can uh the chairs will discuss and

1120
00:47:44,640 --> 00:47:47,440
then get back to you on that

1121
00:47:47,440 --> 00:47:52,520
okay thank you thank you tommy thank you

1122
00:47:56,720 --> 00:47:58,960
all right

1123
00:47:58,960 --> 00:48:01,839
then next up i believe we have frank

1124
00:48:01,839 --> 00:48:04,400
covering a couple documents on iom as

1125
00:48:04,400 --> 00:48:07,400
well

1126
00:48:07,440 --> 00:48:10,960
or justin oh sorry my bad

1127
00:48:13,760 --> 00:48:16,400
can you hear me

1128
00:48:17,200 --> 00:48:18,800
yep

1129
00:48:18,800 --> 00:48:19,650
all right

1130
00:48:19,650 --> 00:48:22,760
[Music]

1131
00:48:24,640 --> 00:48:27,440
it's a little bit quiet for the remote

1132
00:48:27,440 --> 00:48:30,640
my mic is working actually

1133
00:48:32,079 --> 00:48:35,839
is this one working that one is better

1134
00:48:35,839 --> 00:48:38,240
yeah so let's use that one

1135
00:48:38,240 --> 00:48:40,479
yeah

1136
00:48:40,960 --> 00:48:42,640
so i'll go first and then frank will

1137
00:48:42,640 --> 00:48:46,160
provide the update on the deployment

1138
00:48:46,839 --> 00:48:51,200
draft so about the data integrity um

1139
00:48:51,200 --> 00:48:52,079
we have

1140
00:48:52,079 --> 00:48:53,920
clarified the scope of the document so

1141
00:48:53,920 --> 00:48:55,760
basically

1142
00:48:55,760 --> 00:48:58,880
now the integrity protection is on iom

1143
00:48:58,880 --> 00:49:02,079
data fields and not including headers

1144
00:49:02,079 --> 00:49:03,760
for obvious

1145
00:49:03,760 --> 00:49:06,160
reasons we have uh

1146
00:49:06,160 --> 00:49:08,800
shared on the mailing list

1147
00:49:08,800 --> 00:49:11,359
and as a consequence the algorithms were

1148
00:49:11,359 --> 00:49:13,680
returned to be more generic and so they

1149
00:49:13,680 --> 00:49:14,880
work for

1150
00:49:14,880 --> 00:49:17,200
currently defined iom

1151
00:49:17,200 --> 00:49:22,079
option types and so for future defining

1152
00:49:22,079 --> 00:49:24,720
and also as a direct consequence

1153
00:49:24,720 --> 00:49:27,920
the direct export option type is not

1154
00:49:27,920 --> 00:49:30,400
included anymore because it doesn't fit

1155
00:49:30,400 --> 00:49:33,040
because if you see the define the

1156
00:49:33,040 --> 00:49:35,520
defining of such option type

1157
00:49:35,520 --> 00:49:38,000
it doesn't contain any ion data field

1158
00:49:38,000 --> 00:49:39,760
per c okay

1159
00:49:39,760 --> 00:49:41,839
so if you really want to go that way and

1160
00:49:41,839 --> 00:49:45,680
have um protection i think

1161
00:49:45,680 --> 00:49:48,319
um we could have a per hub verification

1162
00:49:48,319 --> 00:49:50,079
but not sure if you want to go that way

1163
00:49:50,079 --> 00:49:52,480
so we can just discuss that later on the

1164
00:49:52,480 --> 00:49:54,000
mailing list

1165
00:49:54,000 --> 00:49:54,960
and so

1166
00:49:54,960 --> 00:49:56,960
the update also includes some editorial

1167
00:49:56,960 --> 00:49:59,920
changes we have used the irm data fields

1168
00:49:59,920 --> 00:50:02,000
notation that is defined in the iom data

1169
00:50:02,000 --> 00:50:04,640
draft to keep it consistent

1170
00:50:04,640 --> 00:50:06,640
and some structure or some section and

1171
00:50:06,640 --> 00:50:11,558
subsections were restricted also

1172
00:50:12,960 --> 00:50:14,240
so

1173
00:50:14,240 --> 00:50:16,160
if you can review it and provide some

1174
00:50:16,160 --> 00:50:18,720
feedback it would be greatly appreciated

1175
00:50:18,720 --> 00:50:20,480
and tommy i don't know if you want to

1176
00:50:20,480 --> 00:50:22,400
take questions now for this draft or if

1177
00:50:22,400 --> 00:50:27,160
we do it for post after frank

1178
00:50:27,760 --> 00:50:30,800
sure if there are any questions on

1179
00:50:30,800 --> 00:50:34,319
this document we can take them now

1180
00:50:34,319 --> 00:50:35,839
i don't know

1181
00:50:35,839 --> 00:50:39,160
has any

1182
00:50:43,920 --> 00:50:46,640
i guess just for myself um

1183
00:50:46,640 --> 00:50:48,880
forgetting further reviews do we want to

1184
00:50:48,880 --> 00:50:51,440
ask for

1185
00:50:51,440 --> 00:50:53,359
any particular external

1186
00:50:53,359 --> 00:50:57,680
reviews sector reviews etc

1187
00:51:03,839 --> 00:51:05,280
who are we asking are we asking people

1188
00:51:05,280 --> 00:51:06,559
inside the working group are we asking

1189
00:51:06,559 --> 00:51:09,839
people outside

1190
00:51:09,920 --> 00:51:13,760
yeah i think the main objective was that

1191
00:51:13,920 --> 00:51:16,079
given that this document is really a

1192
00:51:16,079 --> 00:51:17,760
document that was inspired by the

1193
00:51:17,760 --> 00:51:19,760
working group

1194
00:51:19,760 --> 00:51:21,760
originally right

1195
00:51:21,760 --> 00:51:24,480
where people said well yeah well

1196
00:51:24,480 --> 00:51:27,280
even though we're in a limited domain

1197
00:51:27,280 --> 00:51:28,319
we

1198
00:51:28,319 --> 00:51:32,000
do want to have a dedicated

1199
00:51:32,000 --> 00:51:35,040
way to go and ensure integrity

1200
00:51:35,040 --> 00:51:36,640
above and beyond what you can go and do

1201
00:51:36,640 --> 00:51:38,319
with the underlying transport if you're

1202
00:51:38,319 --> 00:51:41,040
riding on on top of say v6 and would be

1203
00:51:41,040 --> 00:51:42,400
able to use

1204
00:51:42,400 --> 00:51:44,720
authentication headers and the likes

1205
00:51:44,720 --> 00:51:46,640
and um so we would really appreciate

1206
00:51:46,640 --> 00:51:49,040
hearing back from people that

1207
00:51:49,040 --> 00:51:51,040
well originally driving the the

1208
00:51:51,040 --> 00:51:52,240
questions

1209
00:51:52,240 --> 00:51:54,640
uh whether the document in its current

1210
00:51:54,640 --> 00:51:56,559
shape actually meets what they had in

1211
00:51:56,559 --> 00:51:57,839
mind

1212
00:51:57,839 --> 00:51:59,680
i think that's more like what we were

1213
00:51:59,680 --> 00:52:02,559
asking this this review to be so that we

1214
00:52:02,559 --> 00:52:04,800
at some point can call the document done

1215
00:52:04,800 --> 00:52:07,680
and then progress

1216
00:52:08,720 --> 00:52:10,959
okay

1217
00:52:11,599 --> 00:52:13,280
i think it's not so much of a of a

1218
00:52:13,280 --> 00:52:15,040
security review because i think the

1219
00:52:15,040 --> 00:52:17,359
methods that we are using are

1220
00:52:17,359 --> 00:52:20,319
well well known and state of the art

1221
00:52:20,319 --> 00:52:22,480
uh there's nothing really new or

1222
00:52:22,480 --> 00:52:23,920
inventive here it's more like

1223
00:52:23,920 --> 00:52:25,680
application

1224
00:52:25,680 --> 00:52:29,839
appliance well donor to the problem

1225
00:52:29,839 --> 00:52:30,720
but

1226
00:52:30,720 --> 00:52:32,880
let's see whether

1227
00:52:32,880 --> 00:52:35,520
people consider that is well usable

1228
00:52:35,520 --> 00:52:36,960
useful

1229
00:52:36,960 --> 00:52:37,760
um

1230
00:52:37,760 --> 00:52:39,440
in the context of the the original

1231
00:52:39,440 --> 00:52:42,640
problem that people had in mind

1232
00:52:42,880 --> 00:52:45,440
got it all right sounds good and yeah

1233
00:52:45,440 --> 00:52:47,920
just let us know if you want help

1234
00:52:47,920 --> 00:52:51,200
soliciting feedback

1235
00:52:53,760 --> 00:52:55,119
all right

1236
00:52:55,119 --> 00:52:56,800
don't see anyone else in queue so let's

1237
00:52:56,800 --> 00:52:58,000
move forward

1238
00:52:58,000 --> 00:53:01,680
yeah the next one is even faster

1239
00:53:01,680 --> 00:53:03,520
the next one is

1240
00:53:03,520 --> 00:53:06,079
my bad right um so

1241
00:53:06,079 --> 00:53:08,160
the document's been pretty stable we've

1242
00:53:08,160 --> 00:53:10,640
not really heard anything back um

1243
00:53:10,640 --> 00:53:12,720
and sorry gentlemen i i

1244
00:53:12,720 --> 00:53:15,520
forgot to add the beer reference or not

1245
00:53:15,520 --> 00:53:17,520
i didn't forget that the beer reference

1246
00:53:17,520 --> 00:53:20,079
i forgot to publish the draft

1247
00:53:20,079 --> 00:53:24,000
um the the o1 version before the cut off

1248
00:53:24,000 --> 00:53:26,640
so which is why i added the github

1249
00:53:26,640 --> 00:53:28,960
reference uh i'll i'll push that out

1250
00:53:28,960 --> 00:53:31,760
today or well if we to get more feedback

1251
00:53:31,760 --> 00:53:33,760
uh during the week maybe towards the end

1252
00:53:33,760 --> 00:53:35,920
of the week early next week

1253
00:53:35,920 --> 00:53:36,960
um

1254
00:53:36,960 --> 00:53:38,720
if there is more

1255
00:53:38,720 --> 00:53:41,040
things that people want or have

1256
00:53:41,040 --> 00:53:43,599
experiences with from an iom deployment

1257
00:53:43,599 --> 00:53:45,200
perspective that they want to go and see

1258
00:53:45,200 --> 00:53:47,200
represented in the draft

1259
00:53:47,200 --> 00:53:49,920
um i want to go and keep it well

1260
00:53:49,920 --> 00:53:51,760
rolling for a while

1261
00:53:51,760 --> 00:53:54,319
we could go for last call but i do think

1262
00:53:54,319 --> 00:53:55,280
that

1263
00:53:55,280 --> 00:53:57,440
well if we mature it over the course of

1264
00:53:57,440 --> 00:53:59,760
another two or three itf meetings it

1265
00:53:59,760 --> 00:54:02,319
might help everybody given that

1266
00:54:02,319 --> 00:54:04,559
it should go and uh

1267
00:54:04,559 --> 00:54:06,400
aggregate all deployment experiences

1268
00:54:06,400 --> 00:54:08,720
that we have at iom and um thanks to

1269
00:54:08,720 --> 00:54:10,559
justin for

1270
00:54:10,559 --> 00:54:12,480
coming up with an even more mature

1271
00:54:12,480 --> 00:54:13,760
implementation

1272
00:54:13,760 --> 00:54:16,240
uh in the kernel

1273
00:54:16,240 --> 00:54:17,040
and

1274
00:54:17,040 --> 00:54:22,000
we also have an update on uh on vpp um

1275
00:54:22,000 --> 00:54:22,800
so

1276
00:54:22,800 --> 00:54:25,119
well maybe we we get more experience

1277
00:54:25,119 --> 00:54:26,559
with even the open source

1278
00:54:26,559 --> 00:54:28,240
implementations

1279
00:54:28,240 --> 00:54:31,359
and um we can go and fault that in

1280
00:54:31,359 --> 00:54:32,880
but for now i've not really heard

1281
00:54:32,880 --> 00:54:34,480
anything back

1282
00:54:34,480 --> 00:54:37,920
so keep feedback coming to the list or

1283
00:54:37,920 --> 00:54:42,000
well the implementers thank you

1284
00:54:43,520 --> 00:54:46,319
all right thank you

1285
00:54:46,400 --> 00:54:47,839
any questions on

1286
00:54:47,839 --> 00:54:50,160
nine minutes back

1287
00:54:50,160 --> 00:54:52,799
that's fantastic we will take it

1288
00:54:52,799 --> 00:54:55,280
any day

1289
00:54:56,240 --> 00:54:57,200
all right

1290
00:54:57,200 --> 00:54:59,040
thanks so much

1291
00:54:59,040 --> 00:55:01,440
thank you

1292
00:55:02,799 --> 00:55:06,319
all right and next we have iom yang i

1293
00:55:06,319 --> 00:55:08,720
believe

1294
00:55:11,440 --> 00:55:13,040
all right

1295
00:55:13,040 --> 00:55:14,559
china do you want to

1296
00:55:14,559 --> 00:55:16,319
share your slides or do you want help

1297
00:55:16,319 --> 00:55:17,440
with that

1298
00:55:17,440 --> 00:55:20,799
could you please help to share

1299
00:55:20,799 --> 00:55:22,720
okay

1300
00:55:22,720 --> 00:55:25,040
thanks

1301
00:55:26,640 --> 00:55:29,200
great and this presentation we will

1302
00:55:29,200 --> 00:55:30,960
report the

1303
00:55:30,960 --> 00:55:33,359
major changes since the last meeting

1304
00:55:33,359 --> 00:55:35,839
next

1305
00:55:38,319 --> 00:55:41,200
we address the comments from some patch

1306
00:55:41,200 --> 00:55:42,319
and the

1307
00:55:42,319 --> 00:55:44,720
requirements of the list

1308
00:55:44,720 --> 00:55:46,880
firstly we add some

1309
00:55:46,880 --> 00:55:50,559
detailed parameters like timestamps type

1310
00:55:50,559 --> 00:55:53,119
and available interface to

1311
00:55:53,119 --> 00:55:57,280
ion info iom info is a container for all

1312
00:55:57,280 --> 00:55:59,520
the readable read-only assistant

1313
00:55:59,520 --> 00:56:00,720
information

1314
00:56:00,720 --> 00:56:03,839
so so that's monitoring system can

1315
00:56:03,839 --> 00:56:06,160
interpret the iom data

1316
00:56:06,160 --> 00:56:10,240
and secondly we aligned with the latest

1317
00:56:10,240 --> 00:56:12,000
ion data chart

1318
00:56:12,000 --> 00:56:14,799
on port configuration

1319
00:56:14,799 --> 00:56:16,400
user needs to

1320
00:56:16,400 --> 00:56:19,280
augment this module for the

1321
00:56:19,280 --> 00:56:21,680
configuration of a specific

1322
00:56:21,680 --> 00:56:23,200
port type

1323
00:56:23,200 --> 00:56:26,960
and then some uh young module issues we

1324
00:56:26,960 --> 00:56:28,839
reduced all the

1325
00:56:28,839 --> 00:56:32,160
prefix yum identifiers

1326
00:56:32,160 --> 00:56:34,319
add more

1327
00:56:34,319 --> 00:56:37,200
descriptions and make the draft more

1328
00:56:37,200 --> 00:56:38,319
readable

1329
00:56:38,319 --> 00:56:39,119
and

1330
00:56:39,119 --> 00:56:42,079
updated the security considerations

1331
00:56:42,079 --> 00:56:44,960
and cleaned some knits

1332
00:56:44,960 --> 00:56:47,520
and next

1333
00:56:49,520 --> 00:56:52,720
um the iron with the plain drafts are

1334
00:56:52,720 --> 00:56:54,000
stable

1335
00:56:54,000 --> 00:56:55,520
and this

1336
00:56:55,520 --> 00:56:58,720
young module is already aligned stable

1337
00:56:58,720 --> 00:57:01,920
and mature so we would like to

1338
00:57:01,920 --> 00:57:04,319
ask for young doctor review

1339
00:57:04,319 --> 00:57:08,240
and also working group call

1340
00:57:09,359 --> 00:57:13,558
any questions comments

1341
00:57:22,559 --> 00:57:25,200
all right i'm not seeing anyone queue up

1342
00:57:25,200 --> 00:57:27,599
if we could get in the notes

1343
00:57:27,599 --> 00:57:29,760
of the request to do to kick off the

1344
00:57:29,760 --> 00:57:32,240
yang doctor review the chairs can

1345
00:57:32,240 --> 00:57:34,799
request that

1346
00:57:34,799 --> 00:57:37,680
yes thanks

1347
00:57:38,319 --> 00:57:41,319
okay

1348
00:57:42,960 --> 00:57:44,400
all right if there are no comments or

1349
00:57:44,400 --> 00:57:45,839
questions on this i think we have a

1350
00:57:45,839 --> 00:57:48,240
little bit of time back again

1351
00:57:48,240 --> 00:57:49,440
um

1352
00:57:49,440 --> 00:57:51,680
thank you and yeah it's good to see this

1353
00:57:51,680 --> 00:57:54,319
update and get this moving along thank

1354
00:57:54,319 --> 00:57:56,480
you

1355
00:58:00,799 --> 00:58:03,119
all right

1356
00:58:06,799 --> 00:58:09,359
and then next up

1357
00:58:09,359 --> 00:58:11,280
should have

1358
00:58:11,280 --> 00:58:15,440
the explicit flow measurements document

1359
00:58:21,520 --> 00:58:23,200
all right and will that be my

1360
00:58:23,200 --> 00:58:26,000
representing

1361
00:58:34,400 --> 00:58:37,400
great

1362
00:58:42,640 --> 00:58:43,920
okay

1363
00:58:43,920 --> 00:58:46,640
can you help me

1364
00:58:46,880 --> 00:58:48,480
yes we can

1365
00:58:48,480 --> 00:58:52,799
okay i can't see your slides yet

1366
00:58:52,960 --> 00:58:55,599
okay

1367
00:58:55,599 --> 00:58:57,280
you have to pick which which deck you

1368
00:58:57,280 --> 00:59:01,480
like which which deck you need

1369
00:59:12,960 --> 00:59:15,359
there you go

1370
00:59:15,760 --> 00:59:19,440
thank you to all start

1371
00:59:20,240 --> 00:59:21,839
okay

1372
00:59:21,839 --> 00:59:23,760
okay

1373
00:59:23,760 --> 00:59:27,119
okay can you resume briefly the topic of

1374
00:59:27,119 --> 00:59:29,680
this draft the species flow measurement

1375
00:59:29,680 --> 00:59:32,720
our measurement

1376
00:59:32,720 --> 00:59:34,400
made using

1377
00:59:34,400 --> 00:59:37,520
real traffic not artificial traffic

1378
00:59:37,520 --> 00:59:40,960
we can mark one or two bits

1379
00:59:40,960 --> 00:59:43,520
or three in some cases or different

1380
00:59:43,520 --> 00:59:45,200
measurements

1381
00:59:45,200 --> 00:59:48,000
the measurements that are in the draft

1382
00:59:48,000 --> 00:59:50,880
are the rounded time

1383
00:59:50,880 --> 00:59:53,200
a new version of the routing time

1384
00:59:53,200 --> 00:59:55,280
measurement is the delay beat with the

1385
00:59:55,280 --> 00:59:56,480
hidden

1386
00:59:56,480 --> 00:59:59,280
beat option that is an option that

1387
00:59:59,280 --> 01:00:00,640
permits to

1388
01:00:00,640 --> 01:00:03,920
save the privacy of the users

1389
01:00:03,920 --> 01:00:06,799
the round three packet loss one bit that

1390
01:00:06,799 --> 01:00:10,319
permit to have a new measurement that is

1391
01:00:10,319 --> 01:00:12,720
a strange because

1392
01:00:12,720 --> 01:00:15,119
we have a round three packet loss not a

1393
01:00:15,119 --> 01:00:17,599
unidirectional clause

1394
01:00:17,599 --> 01:00:20,319
this case we have the measurement of all

1395
01:00:20,319 --> 01:00:22,960
the packets from one side and

1396
01:00:22,960 --> 01:00:25,359
a percentage of the package from the

1397
01:00:25,359 --> 01:00:29,280
side with more packets and the one-way

1398
01:00:29,280 --> 01:00:31,839
particulars that are

1399
01:00:31,839 --> 01:00:35,440
made in the best options in our opinion

1400
01:00:35,440 --> 01:00:36,960
using it to be

1401
01:00:36,960 --> 01:00:38,400
the square beat

1402
01:00:38,400 --> 01:00:41,280
is common to the option that we can have

1403
01:00:41,280 --> 01:00:43,040
before this measurement

1404
01:00:43,040 --> 01:00:46,880
and two different bits for the second

1405
01:00:46,880 --> 01:00:48,720
part of the measurement the loss event

1406
01:00:48,720 --> 01:00:52,000
need the reflection square

1407
01:00:55,599 --> 01:00:59,520
okay uh the number of uh

1408
01:00:59,520 --> 01:01:01,680
groups and the companies that works

1409
01:01:01,680 --> 01:01:04,240
about this top is is incremented from

1410
01:01:04,240 --> 01:01:06,559
last time because

1411
01:01:06,559 --> 01:01:10,880
uh the university of technion

1412
01:01:10,880 --> 01:01:14,160
joined us in this kind of work and in

1413
01:01:14,160 --> 01:01:17,440
technology if your caller from huawei

1414
01:01:17,440 --> 01:01:19,359
manage the contact with his

1415
01:01:19,359 --> 01:01:22,240
institutional research so we are a free

1416
01:01:22,240 --> 01:01:24,079
university three different

1417
01:01:24,079 --> 01:01:26,799
research groups that explore this kind

1418
01:01:26,799 --> 01:01:27,760
of

1419
01:01:27,760 --> 01:01:29,920
methodology for measurement in the

1420
01:01:29,920 --> 01:01:32,480
network

1421
01:01:33,920 --> 01:01:36,559
so this is little bit that is the last

1422
01:01:36,559 --> 01:01:40,960
addition to the draft as a methodology

1423
01:01:42,880 --> 01:01:44,240
last update

1424
01:01:44,240 --> 01:01:46,079
so it is a

1425
01:01:46,079 --> 01:01:48,960
meeting we

1426
01:01:48,960 --> 01:01:51,599
don't present the draft updates because

1427
01:01:51,599 --> 01:01:54,079
we are waiting the very extensive

1428
01:01:54,079 --> 01:01:56,559
revision that the ike coons from akin

1429
01:01:56,559 --> 01:01:58,480
university

1430
01:01:58,480 --> 01:02:01,440
terminate only last thursday

1431
01:02:01,440 --> 01:02:03,119
and so

1432
01:02:03,119 --> 01:02:06,319
we are waiting is a revision i thanks

1433
01:02:06,319 --> 01:02:07,440
ike

1434
01:02:07,440 --> 01:02:10,400
for his work and the work of his

1435
01:02:10,400 --> 01:02:13,039
research group in the university because

1436
01:02:13,039 --> 01:02:15,760
he implemented all the algorithm

1437
01:02:15,760 --> 01:02:19,599
described in this draft so we have a new

1438
01:02:19,599 --> 01:02:22,480
implementation totally separate from the

1439
01:02:22,480 --> 01:02:24,079
others

1440
01:02:24,079 --> 01:02:27,039
so he tested also the

1441
01:02:27,039 --> 01:02:28,799
clarity of the description of the

1442
01:02:28,799 --> 01:02:32,319
algorithm and he suggested some

1443
01:02:32,319 --> 01:02:34,960
updated

1444
01:02:34,960 --> 01:02:36,960
uh the main tool is about the tv

1445
01:02:36,960 --> 01:02:40,160
description the routing packet loss

1446
01:02:40,160 --> 01:02:42,000
because uh

1447
01:02:42,000 --> 01:02:44,960
he asked to clarify better the token

1448
01:02:44,960 --> 01:02:48,720
mechanism that maintains the throughput

1449
01:02:48,720 --> 01:02:50,480
of the

1450
01:02:50,480 --> 01:02:53,920
measurement equal in the two directions

1451
01:02:53,920 --> 01:02:55,359
uh

1452
01:02:55,359 --> 01:02:58,400
the discussion about the trade-off

1453
01:02:58,400 --> 01:03:00,559
of the duration of the measurement

1454
01:03:00,559 --> 01:03:02,720
because if the measurement the period of

1455
01:03:02,720 --> 01:03:05,440
the measurement is uh longer we have

1456
01:03:05,440 --> 01:03:07,599
less measurement

1457
01:03:07,599 --> 01:03:09,520
and is is short

1458
01:03:09,520 --> 01:03:12,160
we measure less packets for the packet

1459
01:03:12,160 --> 01:03:14,240
loss so there is a trade-off there is a

1460
01:03:14,240 --> 01:03:17,280
little bit discussion that is better to

1461
01:03:17,280 --> 01:03:19,839
describe in the draft

1462
01:03:19,839 --> 01:03:22,640
there are other minor changes that he

1463
01:03:22,640 --> 01:03:24,960
requested one about

1464
01:03:24,960 --> 01:03:27,839
a corner case in the

1465
01:03:27,839 --> 01:03:29,839
reflection

1466
01:03:29,839 --> 01:03:32,960
and some editorial changes

1467
01:03:32,960 --> 01:03:35,359
we introduced this change in next days

1468
01:03:35,359 --> 01:03:37,119
and we

1469
01:03:37,119 --> 01:03:39,359
published the draft when

1470
01:03:39,359 --> 01:03:43,480
reopened the publication

1471
01:03:44,640 --> 01:03:46,799
this is the summary for the delay beat

1472
01:03:46,799 --> 01:03:48,240
the bit that

1473
01:03:48,240 --> 01:03:50,720
are used to measure the delay in the

1474
01:03:50,720 --> 01:03:53,279
route trip

1475
01:03:53,520 --> 01:03:56,079
it is the summary of the measurement

1476
01:03:56,079 --> 01:03:59,839
about the packet loss

1477
01:04:01,440 --> 01:04:04,240
there are many options it depends from

1478
01:04:04,240 --> 01:04:07,039
the protocol for example some protocol

1479
01:04:07,039 --> 01:04:10,400
have only two bits so only one bit can

1480
01:04:10,400 --> 01:04:12,400
be used for packet loss this is a little

1481
01:04:12,400 --> 01:04:14,400
bit the problem because with them one

1482
01:04:14,400 --> 01:04:16,319
bit the measurement are more less

1483
01:04:16,319 --> 01:04:17,680
precise

1484
01:04:17,680 --> 01:04:20,319
for the delay one bit is a sufficient

1485
01:04:20,319 --> 01:04:21,359
because

1486
01:04:21,359 --> 01:04:24,559
both spin bit and delay beat

1487
01:04:24,559 --> 01:04:27,440
also in the hidden version needs only

1488
01:04:27,440 --> 01:04:29,920
one beat

1489
01:04:31,440 --> 01:04:33,839
with a three bit it's possible to have

1490
01:04:33,839 --> 01:04:36,799
one bit for loss one bit for delay and

1491
01:04:36,799 --> 01:04:39,440
two bit for loss this is all the options

1492
01:04:39,440 --> 01:04:41,680
that we

1493
01:04:41,680 --> 01:04:44,000
think that are quite

1494
01:04:44,000 --> 01:04:46,640
interesting

1495
01:04:47,920 --> 01:04:51,119
so the conclusion is there are

1496
01:04:51,119 --> 01:04:54,160
quite a big work about this topic there

1497
01:04:54,160 --> 01:04:55,280
are

1498
01:04:55,280 --> 01:04:58,400
some sibling draft in the ppm working

1499
01:04:58,400 --> 01:05:00,319
group one in particular

1500
01:05:00,319 --> 01:05:03,359
that is about putting the probe not in

1501
01:05:03,359 --> 01:05:05,760
the network as we thought at the

1502
01:05:05,760 --> 01:05:08,720
beginning of the work but also in the

1503
01:05:08,720 --> 01:05:10,480
end user device

1504
01:05:10,480 --> 01:05:11,920
in order to

1505
01:05:11,920 --> 01:05:14,559
have an end-to-end measurement in a very

1506
01:05:14,559 --> 01:05:16,880
simple way also for

1507
01:05:16,880 --> 01:05:19,760
methodology like a kubit that is not an

1508
01:05:19,760 --> 01:05:23,039
end-to-end methodology

1509
01:05:23,039 --> 01:05:24,799
so it's very convenient and it's

1510
01:05:24,799 --> 01:05:26,640
possible to measure

1511
01:05:26,640 --> 01:05:29,440
end to end and combining this

1512
01:05:29,440 --> 01:05:31,920
measurement with probe in the network is

1513
01:05:31,920 --> 01:05:34,160
possible to split the measurement and to

1514
01:05:34,160 --> 01:05:37,839
locate the problem if there is

1515
01:05:37,839 --> 01:05:40,640
other sibling draft are presented in

1516
01:05:40,640 --> 01:05:42,720
other working group

1517
01:05:42,720 --> 01:05:45,200
in the co-op working group

1518
01:05:45,200 --> 01:05:47,680
in particular the last one in the past

1519
01:05:47,680 --> 01:05:50,400
was present in quick

1520
01:05:50,400 --> 01:05:52,240
working group and there are one draft

1521
01:05:52,240 --> 01:05:55,200
also in tcpa proposal

1522
01:05:55,200 --> 01:05:59,119
so we think that we are quite ready i

1523
01:05:59,119 --> 01:06:01,280
don't know if you are agree for the

1524
01:06:01,280 --> 01:06:04,240
working group last call

1525
01:06:04,240 --> 01:06:05,280
in the

1526
01:06:05,280 --> 01:06:06,640
end

1527
01:06:06,640 --> 01:06:08,400
of the presentation

1528
01:06:08,400 --> 01:06:11,200
there is a summary of uh

1529
01:06:11,200 --> 01:06:14,000
that is not a

1530
01:06:14,000 --> 01:06:15,920
summary of all the authors of the

1531
01:06:15,920 --> 01:06:18,720
working group excuse me of the draft but

1532
01:06:18,720 --> 01:06:20,720
only

1533
01:06:20,720 --> 01:06:23,759
our company

1534
01:06:24,160 --> 01:06:26,319
fabio bulgarella massimo neil and i

1535
01:06:26,319 --> 01:06:29,760
suggested some possibility in case of

1536
01:06:29,760 --> 01:06:33,760
the more common protocol for core aap

1537
01:06:33,760 --> 01:06:36,559
with two beats to use the sb

1538
01:06:36,559 --> 01:06:39,599
the spin beat for rtt er artifact loss

1539
01:06:39,599 --> 01:06:41,039
for could beat

1540
01:06:41,039 --> 01:06:43,520
they could beat

1541
01:06:45,119 --> 01:06:45,270
a foreign

1542
01:06:45,270 --> 01:06:47,039
[Music]

1543
01:06:47,039 --> 01:06:49,680
the preferred option was in our opinion

1544
01:06:49,680 --> 01:06:52,400
delay beat

1545
01:06:52,400 --> 01:06:53,720
also in the

1546
01:06:53,720 --> 01:06:55,760
[Music]

1547
01:06:55,760 --> 01:06:57,839
hidden beat

1548
01:06:57,839 --> 01:06:59,839
version but

1549
01:06:59,839 --> 01:07:02,079
naturally also the spin beat is quite

1550
01:07:02,079 --> 01:07:04,559
good the delay beat have some advantage

1551
01:07:04,559 --> 01:07:07,760
as we speak about in the draft

1552
01:07:07,760 --> 01:07:09,599
for the tcp

1553
01:07:09,599 --> 01:07:12,400
uh there is in our opinion a little bit

1554
01:07:12,400 --> 01:07:14,400
difference about the packet loss because

1555
01:07:14,400 --> 01:07:16,880
for quick we prefer

1556
01:07:16,880 --> 01:07:20,079
cubit and albeit

1557
01:07:20,079 --> 01:07:23,839
for tcp cubit and rbit because the

1558
01:07:23,839 --> 01:07:25,200
albeit

1559
01:07:25,200 --> 01:07:28,480
is a simple as a simple implementation

1560
01:07:28,480 --> 01:07:30,960
and there is a less measurement delay

1561
01:07:30,960 --> 01:07:33,839
their bit detector's losses also for all

1562
01:07:33,839 --> 01:07:36,640
accurate tcp packets it is a protocol

1563
01:07:36,640 --> 01:07:38,240
independent so

1564
01:07:38,240 --> 01:07:40,000
it not depends from the implementation

1565
01:07:40,000 --> 01:07:42,480
of the protocol so there are strengths

1566
01:07:42,480 --> 01:07:44,480
and the weakness in the bot

1567
01:07:44,480 --> 01:07:46,960
but in uh our opinion

1568
01:07:46,960 --> 01:07:49,359
for quick is better albeit as second was

1569
01:07:49,359 --> 01:07:52,640
beat 40 cp is better arbit but this is

1570
01:07:52,640 --> 01:07:55,440
only a personal opinion of a subset of

1571
01:07:55,440 --> 01:07:57,039
the working group

1572
01:07:57,039 --> 01:07:58,400
about

1573
01:07:58,400 --> 01:08:00,559
not working group draft group

1574
01:08:00,559 --> 01:08:04,160
about this draft thank you

1575
01:08:04,160 --> 01:08:09,480
there are some questions so we are

1576
01:08:10,160 --> 01:08:12,160
all right do we have any

1577
01:08:12,160 --> 01:08:15,280
questions thoughts on this

1578
01:08:15,280 --> 01:08:19,000
please join the queue

1579
01:08:24,080 --> 01:08:26,399
not seeing anything immediately um

1580
01:08:26,399 --> 01:08:28,719
one question i did have

1581
01:08:28,719 --> 01:08:30,960
on the uh

1582
01:08:30,960 --> 01:08:32,880
drafts in other working groups and the

1583
01:08:32,880 --> 01:08:36,560
discussion for how to apply this

1584
01:08:36,839 --> 01:08:39,520
um i think the one on quick was a while

1585
01:08:39,520 --> 01:08:42,000
ago and in

1586
01:08:42,000 --> 01:08:43,759
co-op that just happened is this

1587
01:08:43,759 --> 01:08:45,520
something that looks like it will get

1588
01:08:45,520 --> 01:08:47,679
adopted in any of these

1589
01:08:47,679 --> 01:08:49,279
working groups are we

1590
01:08:49,279 --> 01:08:51,198
going to see this progress

1591
01:08:51,198 --> 01:08:55,040
um for great views no no because we

1592
01:08:55,040 --> 01:08:58,880
decided to start from a ppm

1593
01:08:58,880 --> 01:09:01,759
also with some materials that are agree

1594
01:09:01,759 --> 01:09:03,920
with this approach

1595
01:09:03,920 --> 01:09:08,719
and after we put this idea inside the

1596
01:09:08,719 --> 01:09:11,198
specific protocol working group for

1597
01:09:11,198 --> 01:09:12,719
copper the

1598
01:09:12,719 --> 01:09:15,839
the draft is active we presented in the

1599
01:09:15,839 --> 01:09:17,839
last interim meeting where people

1600
01:09:17,839 --> 01:09:22,000
represented is a quite good

1601
01:09:22,000 --> 01:09:23,839
interest from the working group for

1602
01:09:23,839 --> 01:09:24,880
quick

1603
01:09:24,880 --> 01:09:28,080
in particular in past was presented some

1604
01:09:28,080 --> 01:09:30,080
technologies in particular for packet

1605
01:09:30,080 --> 01:09:31,439
loss

1606
01:09:31,439 --> 01:09:32,319
but

1607
01:09:32,319 --> 01:09:33,439
the

1608
01:09:33,439 --> 01:09:35,120
the draft

1609
01:09:35,120 --> 01:09:38,640
don't go didn't go ahead so we

1610
01:09:38,640 --> 01:09:42,000
start again from the beginning

1611
01:09:42,000 --> 01:09:44,719
in the methodology group that we think

1612
01:09:44,719 --> 01:09:46,839
that ppm is the right

1613
01:09:46,839 --> 01:09:50,000
one to refine the

1614
01:09:50,000 --> 01:09:52,640
methodologies

1615
01:09:52,640 --> 01:09:54,880
yeah i'm asking though as we are

1616
01:09:54,880 --> 01:09:58,239
maturing this and you know i think

1617
01:09:58,239 --> 01:10:00,640
we could look at doing a last call on it

1618
01:10:00,640 --> 01:10:03,640
um

1619
01:10:04,719 --> 01:10:06,400
do do we do we want to essentially

1620
01:10:06,400 --> 01:10:08,640
publish this without

1621
01:10:08,640 --> 01:10:12,080
any adopters necessarily um

1622
01:10:12,080 --> 01:10:16,000
or or if we had

1623
01:10:16,000 --> 01:10:18,560
some adopter lined up um that was that

1624
01:10:18,560 --> 01:10:20,800
we thought would come in relatively soon

1625
01:10:20,800 --> 01:10:23,120
then we could

1626
01:10:23,120 --> 01:10:24,800
um

1627
01:10:24,800 --> 01:10:26,560
see if there's any feedback from that

1628
01:10:26,560 --> 01:10:29,040
protocol or group before we

1629
01:10:29,040 --> 01:10:30,880
kind of finalize and publish this

1630
01:10:30,880 --> 01:10:32,719
document but

1631
01:10:32,719 --> 01:10:34,480
that's not necessary okay we have to

1632
01:10:34,480 --> 01:10:37,600
present something in other groups so

1633
01:10:37,600 --> 01:10:39,679
but now we are presenting only in the

1634
01:10:39,679 --> 01:10:41,600
co-op working group because

1635
01:10:41,600 --> 01:10:43,440
quick working group

1636
01:10:43,440 --> 01:10:46,159
i don't know if they are

1637
01:10:46,159 --> 01:10:48,560
so much interested in the topic till now

1638
01:10:48,560 --> 01:10:52,080
but we can retry it

1639
01:10:52,640 --> 01:10:55,040
well maybe what we can do is

1640
01:10:55,040 --> 01:10:57,120
you know do a last call get the feedback

1641
01:10:57,120 --> 01:11:02,239
here but then once that has wrapped up

1642
01:11:02,239 --> 01:11:03,840
at least send a note

1643
01:11:03,840 --> 01:11:05,760
too quick to say hey if you remember

1644
01:11:05,760 --> 01:11:08,640
this from before we have some updates

1645
01:11:08,640 --> 01:11:10,000
um

1646
01:11:10,000 --> 01:11:11,600
did we have someone in queue for a

1647
01:11:11,600 --> 01:11:13,840
moment

1648
01:11:19,600 --> 01:11:21,840
okay

1649
01:11:22,719 --> 01:11:23,600
all right

1650
01:11:23,600 --> 01:11:26,960
that sounds good thank you thank you to

1651
01:11:26,960 --> 01:11:29,120
all

1652
01:11:34,480 --> 01:11:37,600
right i believe we have one last

1653
01:11:37,600 --> 01:11:39,840
working group document presentation on

1654
01:11:39,840 --> 01:11:42,480
srpm

1655
01:11:48,080 --> 01:11:49,760
rawkish do you want to

1656
01:11:49,760 --> 01:11:52,000
share your slides

1657
01:11:52,000 --> 01:11:54,800
or do you want help doing that

1658
01:11:54,800 --> 01:11:58,320
let me see if i can do it um

1659
01:11:58,320 --> 01:12:01,639
there we go

1660
01:12:18,159 --> 01:12:22,199
you see slides i'm setting

1661
01:12:22,880 --> 01:12:24,560
we can see them

1662
01:12:24,560 --> 01:12:26,320
okay perfect

1663
01:12:26,320 --> 01:12:28,400
uh hi everyone uh my name is rakesh

1664
01:12:28,400 --> 01:12:30,719
gandhi and i'm presenting the

1665
01:12:30,719 --> 01:12:34,080
stem extensions for sr networks recent

1666
01:12:34,080 --> 01:12:37,760
updates to this drop on behalf of the

1667
01:12:37,760 --> 01:12:41,360
authors listed here

1668
01:12:46,159 --> 01:12:49,280
so the agenda just updates that we made

1669
01:12:49,280 --> 01:12:53,520
in the reason 003 recently

1670
01:12:53,520 --> 01:12:54,560
the

1671
01:12:54,560 --> 01:12:57,040
stamp based work that we're doing in

1672
01:12:57,040 --> 01:12:59,360
other working groups we just flash it

1673
01:12:59,360 --> 01:13:03,080
and the next steps

1674
01:13:04,320 --> 01:13:07,520
so uh in the recent revision um

1675
01:13:07,520 --> 01:13:10,320
we have updated the usage of deflect

1676
01:13:10,320 --> 01:13:12,320
around destination flag

1677
01:13:12,320 --> 01:13:15,679
uh the wrong the decision with a

1678
01:13:15,679 --> 01:13:18,080
reply required or not required so there

1679
01:13:18,080 --> 01:13:20,320
is either zero or one

1680
01:13:20,320 --> 01:13:24,560
uh we added a sub dlv for srv6 uh it's a

1681
01:13:24,560 --> 01:13:26,400
structure sub tlv

1682
01:13:26,400 --> 01:13:28,719
and some small minor editorial changes

1683
01:13:28,719 --> 01:13:33,600
and we have no open issues currently

1684
01:13:33,600 --> 01:13:38,320
so the structure srv6 uh um segments tlv

1685
01:13:38,320 --> 01:13:40,560
basically identifies the structure of

1686
01:13:40,560 --> 01:13:45,040
the 128-bit srv6 seat so

1687
01:13:45,040 --> 01:13:48,400
128 bits some bits can be for the node

1688
01:13:48,400 --> 01:13:50,640
uh some for the function length and some

1689
01:13:50,640 --> 01:13:52,719
uh for the uh

1690
01:13:52,719 --> 01:13:54,960
so it just identifies that

1691
01:13:54,960 --> 01:13:57,360
this is in line with uh other uh drops

1692
01:13:57,360 --> 01:14:01,320
and repsis for a srv6

1693
01:14:02,480 --> 01:14:03,760
so uh

1694
01:14:03,760 --> 01:14:05,520
there is some work going on as well

1695
01:14:05,520 --> 01:14:07,440
another working group uh

1696
01:14:07,440 --> 01:14:09,679
the ippm has done a great job with

1697
01:14:09,679 --> 01:14:12,000
coming up with stamp and

1698
01:14:12,000 --> 01:14:14,159
there are some extensions uh there's

1699
01:14:14,159 --> 01:14:15,920
some work in spring

1700
01:14:15,920 --> 01:14:18,719
uh there is also some enhanced srpm

1701
01:14:18,719 --> 01:14:21,199
draft as well in spring as well as for

1702
01:14:21,199 --> 01:14:24,560
the work for pseudowire extension in

1703
01:14:24,560 --> 01:14:26,239
mpls working group

1704
01:14:26,239 --> 01:14:28,719
so we'll uh appreciate your uh review

1705
01:14:28,719 --> 01:14:31,199
comments

1706
01:14:33,120 --> 01:14:35,520
so uh there is some inter

1707
01:14:35,520 --> 01:14:38,239
interest to do the interrupt testing for

1708
01:14:38,239 --> 01:14:40,320
the extension in this trap

1709
01:14:40,320 --> 01:14:43,360
so uh we are interested in uh early in

1710
01:14:43,360 --> 01:14:45,040
the components um

1711
01:14:45,040 --> 01:14:47,600
so we'd like to make a request for that

1712
01:14:47,600 --> 01:14:50,000
um welcome your comments and suggestion

1713
01:14:50,000 --> 01:14:52,480
on the drought

1714
01:14:52,480 --> 01:14:54,320
and that's all i have

1715
01:14:54,320 --> 01:14:57,840
any comments questions

1716
01:15:08,800 --> 01:15:11,840
uh jermaine go ahead

1717
01:15:16,800 --> 01:15:20,719
can you go to uh wi-fi

1718
01:15:22,400 --> 01:15:24,960
can we hear you

1719
01:15:24,960 --> 01:15:25,920
hi

1720
01:15:25,920 --> 01:15:27,360
do you hear me

1721
01:15:27,360 --> 01:15:28,880
yep

1722
01:15:28,880 --> 01:15:32,880
yes yes please go to slide 5.

1723
01:15:35,280 --> 01:15:38,800
i think the second document is not ietf

1724
01:15:38,800 --> 01:15:40,480
document it's a

1725
01:15:40,480 --> 01:15:43,120
individual document right

1726
01:15:43,120 --> 01:15:48,120
ah yes yeah there is a typo sorry

1727
01:15:59,840 --> 01:16:01,920
all right um

1728
01:16:01,920 --> 01:16:04,080
rockish for the

1729
01:16:04,080 --> 01:16:07,679
ayanna assignment can you send a

1730
01:16:07,679 --> 01:16:09,520
a note to the chairs an email to the

1731
01:16:09,520 --> 01:16:12,000
chairs about that or on the list

1732
01:16:12,000 --> 01:16:14,480
yeah i'll do that

1733
01:16:14,480 --> 01:16:16,718
great

1734
01:16:18,960 --> 01:16:20,960
okay seems like we don't have any more

1735
01:16:20,960 --> 01:16:24,640
comments or questions on this right now

1736
01:16:25,280 --> 01:16:27,679
thank you

1737
01:16:28,159 --> 01:16:29,440
okay

1738
01:16:29,440 --> 01:16:30,560
and at

1739
01:16:30,560 --> 01:16:32,400
that point i believe we are ready to

1740
01:16:32,400 --> 01:16:36,000
move on to some of our proposed work

1741
01:16:36,000 --> 01:16:37,280
we're a little bit ahead of time so

1742
01:16:37,280 --> 01:16:38,960
that's good

1743
01:16:38,960 --> 01:16:41,600
and first up i believe we should have

1744
01:16:41,600 --> 01:16:44,600
nalini

1745
01:17:01,440 --> 01:17:05,040
it's a it's a it's pretty quiet

1746
01:17:06,159 --> 01:17:09,120
oh grab the other mic

1747
01:17:12,400 --> 01:17:15,600
okay thank you uh yeah just speak up um

1748
01:17:15,600 --> 01:17:19,040
do you want me to share the slides

1749
01:17:19,280 --> 01:17:21,519
okay

1750
01:17:26,480 --> 01:17:28,000
okay

1751
01:17:28,000 --> 01:17:31,000
so

1752
01:17:32,480 --> 01:17:35,440
thank you okay so i'm talking about pdm

1753
01:17:35,440 --> 01:17:36,880
v2

1754
01:17:36,880 --> 01:17:42,800
so um we are on the o2 draft next slide

1755
01:17:42,840 --> 01:17:46,560
please so we first presented it in itf

1756
01:17:46,560 --> 01:17:49,040
111 had a side meeting

1757
01:17:49,040 --> 01:17:51,679
we explained the concept over there

1758
01:17:51,679 --> 01:17:54,320
then we presented it at

1759
01:17:54,320 --> 01:17:58,560
112 in the ippm working group and

1760
01:17:58,560 --> 01:18:00,480
had a side meeting where we explained

1761
01:18:00,480 --> 01:18:02,880
our linux implementation

1762
01:18:02,880 --> 01:18:05,440
and how it's working

1763
01:18:05,440 --> 01:18:09,280
recently we have been working on the

1764
01:18:09,280 --> 01:18:12,960
lightweight registration protocol which

1765
01:18:12,960 --> 01:18:15,760
um it is a sample protocol along with

1766
01:18:15,760 --> 01:18:17,520
pdmv2

1767
01:18:17,520 --> 01:18:20,159
where we try to authenticate authorize

1768
01:18:20,159 --> 01:18:20,880
and

1769
01:18:20,880 --> 01:18:23,199
generate a shared context

1770
01:18:23,199 --> 01:18:24,880
for

1771
01:18:24,880 --> 01:18:27,199
well with the

1772
01:18:27,199 --> 01:18:30,560
the primary secret basically

1773
01:18:30,560 --> 01:18:32,719
so uh that's what we have been working

1774
01:18:32,719 --> 01:18:35,440
on today morning we had another

1775
01:18:35,440 --> 01:18:38,159
side meeting where we showed the recent

1776
01:18:38,159 --> 01:18:41,600
progress in registration protocol

1777
01:18:41,600 --> 01:18:44,719
and yesterday we had we got a chance to

1778
01:18:44,719 --> 01:18:48,560
present it at the hackathon as well

1779
01:18:49,280 --> 01:18:52,920
next slide please

1780
01:18:54,640 --> 01:18:55,600
so

1781
01:18:55,600 --> 01:18:57,760
this is the summary of the registration

1782
01:18:57,760 --> 01:19:00,320
protocol

1783
01:19:00,320 --> 01:19:02,719
we have a

1784
01:19:02,719 --> 01:19:03,760
primary

1785
01:19:03,760 --> 01:19:06,080
client primary server secondary client

1786
01:19:06,080 --> 01:19:09,840
secondary server architecture

1787
01:19:10,000 --> 01:19:12,880
and yeah the draft mentions a rational

1788
01:19:12,880 --> 01:19:14,320
for it

1789
01:19:14,320 --> 01:19:17,520
this is a summary mentioned in our

1790
01:19:17,520 --> 01:19:18,880
appendix

1791
01:19:18,880 --> 01:19:20,880
we give one

1792
01:19:20,880 --> 01:19:23,840
possible way of registration protocol

1793
01:19:23,840 --> 01:19:25,520
and we

1794
01:19:25,520 --> 01:19:28,800
keep the option open to enterprises to

1795
01:19:28,800 --> 01:19:30,400
either use this or have their own

1796
01:19:30,400 --> 01:19:32,480
registration protocol

1797
01:19:32,480 --> 01:19:33,760
so

1798
01:19:33,760 --> 01:19:35,600
well um

1799
01:19:35,600 --> 01:19:39,199
there is a flow between primary client

1800
01:19:39,199 --> 01:19:42,239
and the primary server where well this

1801
01:19:42,239 --> 01:19:44,080
is this is the starting step where which

1802
01:19:44,080 --> 01:19:44,960
we

1803
01:19:44,960 --> 01:19:49,280
call it a setup step where we try to

1804
01:19:49,280 --> 01:19:51,440
negotiate the cipher suite a common

1805
01:19:51,440 --> 01:19:53,360
cipher suite and

1806
01:19:53,360 --> 01:19:55,199
in return the

1807
01:19:55,199 --> 01:19:57,840
primary server will respond with

1808
01:19:57,840 --> 01:19:59,840
the cipher suite and

1809
01:19:59,840 --> 01:20:02,480
also share its public key

1810
01:20:02,480 --> 01:20:03,840
then uh

1811
01:20:03,840 --> 01:20:04,960
this is the

1812
01:20:04,960 --> 01:20:06,639
hpk

1813
01:20:06,639 --> 01:20:09,040
chem key encapsulation mechanism where

1814
01:20:09,040 --> 01:20:10,320
we

1815
01:20:10,320 --> 01:20:12,400
do

1816
01:20:12,400 --> 01:20:15,520
the chem and share the encapsulation

1817
01:20:15,520 --> 01:20:18,800
and the primary server will

1818
01:20:18,800 --> 01:20:20,880
basically

1819
01:20:20,880 --> 01:20:23,600
do a decap and generate the same secret

1820
01:20:23,600 --> 01:20:25,040
on its side

1821
01:20:25,040 --> 01:20:27,360
after this step we have a common shared

1822
01:20:27,360 --> 01:20:28,560
context

1823
01:20:28,560 --> 01:20:30,880
on both the sites and the secret can be

1824
01:20:30,880 --> 01:20:34,000
used to encrypt the medium extension

1825
01:20:34,000 --> 01:20:36,400
header

1826
01:20:36,719 --> 01:20:38,320
well

1827
01:20:38,320 --> 01:20:39,600
this

1828
01:20:39,600 --> 01:20:43,280
secret is later shared with um

1829
01:20:43,280 --> 01:20:44,960
with the secondary server and the

1830
01:20:44,960 --> 01:20:46,719
secondary clients

1831
01:20:46,719 --> 01:20:48,880
we had received some comments in the

1832
01:20:48,880 --> 01:20:51,520
side meetings with sharing the secret

1833
01:20:51,520 --> 01:20:53,679
with the secondary clients

1834
01:20:53,679 --> 01:20:56,719
and we had taken care of it by

1835
01:20:56,719 --> 01:20:59,440
generating client specific keys

1836
01:20:59,440 --> 01:21:02,239
so what primary client does is it

1837
01:21:02,239 --> 01:21:03,679
generates generates the client

1838
01:21:03,679 --> 01:21:04,880
specifically

1839
01:21:04,880 --> 01:21:06,560
plea please please keep the mic up your

1840
01:21:06,560 --> 01:21:08,560
mouse

1841
01:21:08,560 --> 01:21:10,000
so um

1842
01:21:10,000 --> 01:21:11,840
what the primary client does is it

1843
01:21:11,840 --> 01:21:14,719
generates the client specific keys by

1844
01:21:14,719 --> 01:21:17,440
doing a kdf

1845
01:21:17,440 --> 01:21:20,960
with the info parameter as the client ip

1846
01:21:20,960 --> 01:21:21,679
and

1847
01:21:21,679 --> 01:21:25,280
generates a specific client uh

1848
01:21:25,280 --> 01:21:28,239
generate the specific secondary client

1849
01:21:28,239 --> 01:21:29,920
keys

1850
01:21:29,920 --> 01:21:31,120
and

1851
01:21:31,120 --> 01:21:34,400
for sharing all these keys we are

1852
01:21:34,400 --> 01:21:35,679
using

1853
01:21:35,679 --> 01:21:37,040
tls

1854
01:21:37,040 --> 01:21:39,840
uh as a means

1855
01:21:39,840 --> 01:21:41,120
so yeah

1856
01:21:41,120 --> 01:21:43,840
this is a registration protocol which we

1857
01:21:43,840 --> 01:21:47,520
have added in the draft as of now and

1858
01:21:47,520 --> 01:21:48,560
um

1859
01:21:48,560 --> 01:21:49,920
yesterday in the hackathon we were

1860
01:21:49,920 --> 01:21:52,480
discussing on how to add authentication

1861
01:21:52,480 --> 01:21:55,040
and authorization and we had a brief

1862
01:21:55,040 --> 01:21:57,199
implementation of that as well

1863
01:21:57,199 --> 01:21:59,040
uh today we'll be presenting it at the

1864
01:21:59,040 --> 01:22:01,120
hack demo

1865
01:22:01,120 --> 01:22:03,360
so yeah

1866
01:22:03,360 --> 01:22:05,920
next slide

1867
01:22:08,639 --> 01:22:11,840
yeah so

1868
01:22:13,600 --> 01:22:16,400
we would like to ask for working rook

1869
01:22:16,400 --> 01:22:19,360
adoption on this

1870
01:22:19,679 --> 01:22:22,920
any questions

1871
01:22:36,960 --> 01:22:38,960
all right thank you for the presentation

1872
01:22:38,960 --> 01:22:41,920
um just thank you for the

1873
01:22:41,920 --> 01:22:45,199
question on my end actually um

1874
01:22:45,679 --> 01:22:47,440
just

1875
01:22:47,440 --> 01:22:49,920
you know since we're not there in person

1876
01:22:49,920 --> 01:22:51,520
i'm other person right now for the side

1877
01:22:51,520 --> 01:22:53,120
meetings in the hackathon how many

1878
01:22:53,120 --> 01:22:54,880
people are you having at the side

1879
01:22:54,880 --> 01:22:56,880
meetings and

1880
01:22:56,880 --> 01:22:58,480
the hackathon projects how many people

1881
01:22:58,480 --> 01:23:01,599
are engaged on this right now

1882
01:23:03,679 --> 01:23:05,600
let me let me help you guys maybe we

1883
01:23:05,600 --> 01:23:09,520
have um our team here maybe you can you

1884
01:23:09,520 --> 01:23:11,120
guys can all

1885
01:23:11,120 --> 01:23:14,880
raise your hands we have we have um

1886
01:23:14,880 --> 01:23:18,639
tomaso who's a cryptographer from

1887
01:23:18,639 --> 01:23:20,880
university of florence and then we have

1888
01:23:20,880 --> 01:23:24,239
mike ackerman who is an enterprise who's

1889
01:23:24,239 --> 01:23:26,960
been involved with us all along

1890
01:23:26,960 --> 01:23:29,920
um and so uh i think at the at the

1891
01:23:29,920 --> 01:23:31,360
hackathon

1892
01:23:31,360 --> 01:23:33,360
um there were what maybe i think there

1893
01:23:33,360 --> 01:23:35,600
were 50 60 people

1894
01:23:35,600 --> 01:23:36,480
uh

1895
01:23:36,480 --> 01:23:39,600
at the at the hackathon itself that we

1896
01:23:39,600 --> 01:23:41,040
presented to

1897
01:23:41,040 --> 01:23:43,920
and i think at this side meeting it was

1898
01:23:43,920 --> 01:23:46,480
a little early in the morning so we we

1899
01:23:46,480 --> 01:23:49,520
had a little less attendance

1900
01:23:49,520 --> 01:23:51,440
than we would have wanted but the other

1901
01:23:51,440 --> 01:23:52,880
side meetings

1902
01:23:52,880 --> 01:23:56,080
i think in the first one we had at least

1903
01:23:56,080 --> 01:23:59,600
oh i will say 30 40 people second one

1904
01:23:59,600 --> 01:24:02,560
maybe i think 20 including some uh

1905
01:24:02,560 --> 01:24:04,560
very good cryptographers because that's

1906
01:24:04,560 --> 01:24:06,560
what we were concerned with

1907
01:24:06,560 --> 01:24:09,840
um is uh the the you know this is

1908
01:24:09,840 --> 01:24:12,400
sensitive information uh and mike i

1909
01:24:12,400 --> 01:24:13,679
don't know if you want to come up and

1910
01:24:13,679 --> 01:24:16,960
talk about the enterprise um

1911
01:24:16,960 --> 01:24:17,920
uh

1912
01:24:17,920 --> 01:24:19,920
use of this oh you're in the queue

1913
01:24:19,920 --> 01:24:22,239
already

1914
01:24:22,480 --> 01:24:24,320
using you all right

1915
01:24:24,320 --> 01:24:27,040
come on up mike

1916
01:24:37,440 --> 01:24:39,600
uh i'm mike ackerman i'm with a large

1917
01:24:39,600 --> 01:24:42,000
enterprise and we're excited about the

1918
01:24:42,000 --> 01:24:43,520
information that

1919
01:24:43,520 --> 01:24:47,040
i that pdm can provide for enterprises

1920
01:24:47,040 --> 01:24:48,320
and anybody else that are going to be

1921
01:24:48,320 --> 01:24:50,159
managing their ipv6 networks in the

1922
01:24:50,159 --> 01:24:51,360
future

1923
01:24:51,360 --> 01:24:52,800
um

1924
01:24:52,800 --> 01:24:54,000
we

1925
01:24:54,000 --> 01:24:55,600
also recognize that there'll be

1926
01:24:55,600 --> 01:24:57,040
situations

1927
01:24:57,040 --> 01:24:58,880
where this information needs to be

1928
01:24:58,880 --> 01:25:02,560
encrypted in the ehs that it's residing

1929
01:25:02,560 --> 01:25:03,360
in

1930
01:25:03,360 --> 01:25:05,920
so that's where pdmv2 comes into play so

1931
01:25:05,920 --> 01:25:07,280
we're excited about both these

1932
01:25:07,280 --> 01:25:09,440
developments and i'm going to add one

1933
01:25:09,440 --> 01:25:12,400
more thing this is a personal thought i

1934
01:25:12,400 --> 01:25:14,719
think that when we enterprises finally

1935
01:25:14,719 --> 01:25:17,120
do get ipv6 networks which we're

1936
01:25:17,120 --> 01:25:19,040
dragging our heels on terribly on right

1937
01:25:19,040 --> 01:25:19,840
now

1938
01:25:19,840 --> 01:25:21,920
that we will

1939
01:25:21,920 --> 01:25:24,159
have other pieces of information

1940
01:25:24,159 --> 01:25:26,480
in other extension headers and i would

1941
01:25:26,480 --> 01:25:28,960
not like to see a different solution for

1942
01:25:28,960 --> 01:25:30,320
each one of those that we're going to

1943
01:25:30,320 --> 01:25:32,239
deploy in the future so those are my

1944
01:25:32,239 --> 01:25:33,679
three points and we're excited about

1945
01:25:33,679 --> 01:25:36,320
this development i hope it can continue

1946
01:25:36,320 --> 01:25:37,840
yeah thank you so much mike and one

1947
01:25:37,840 --> 01:25:39,760
thing i know that i'm going to just put

1948
01:25:39,760 --> 01:25:42,159
a boost out mike and i have been working

1949
01:25:42,159 --> 01:25:45,040
with a lot of the federal government

1950
01:25:45,040 --> 01:25:47,360
in the united states to help them do

1951
01:25:47,360 --> 01:25:51,360
their ipv6 address planning because ipv6

1952
01:25:51,360 --> 01:25:53,760
planning at enterprises has lagged a

1953
01:25:53,760 --> 01:25:56,560
great deal and uh and we're hoping

1954
01:25:56,560 --> 01:25:58,080
actually to get some of these federal

1955
01:25:58,080 --> 01:26:00,639
agencies to talk next time but we're

1956
01:26:00,639 --> 01:26:03,920
working with at least uh three different

1957
01:26:03,920 --> 01:26:06,960
agencies uh these are like you know i

1958
01:26:06,960 --> 01:26:08,880
mean if i if i gave you the three letter

1959
01:26:08,880 --> 01:26:11,280
acronyms you would recognize all of them

1960
01:26:11,280 --> 01:26:13,199
some of them worldwide and i know they

1961
01:26:13,199 --> 01:26:16,719
will need this so yeah

1962
01:26:16,719 --> 01:26:17,679
great

1963
01:26:17,679 --> 01:26:20,880
al is in queue you wanna

1964
01:26:20,880 --> 01:26:24,800
join thank you tom uh thanks uh uh nelly

1965
01:26:24,800 --> 01:26:27,520
and mike and your team for this um

1966
01:26:27,520 --> 01:26:30,080
it it seems to me that you guys are

1967
01:26:30,080 --> 01:26:33,360
extremely lucky to get the original pdm

1968
01:26:33,360 --> 01:26:34,639
uh

1969
01:26:34,639 --> 01:26:35,600
through the

1970
01:26:35,600 --> 01:26:39,040
ietf and approval without encryption

1971
01:26:39,040 --> 01:26:41,760
uh just good timing i guess and and uh

1972
01:26:41,760 --> 01:26:44,320
you know in today's environment it makes

1973
01:26:44,320 --> 01:26:46,080
a lot more sense to have an encrypted

1974
01:26:46,080 --> 01:26:49,040
version of it so uh

1975
01:26:49,040 --> 01:26:51,520
just uh offering my um

1976
01:26:51,520 --> 01:26:54,320
support for this direction

1977
01:26:54,320 --> 01:26:58,480
draft a long time ago um you know i i i

1978
01:26:58,480 --> 01:26:59,760
appreciate that they've got a lot of

1979
01:26:59,760 --> 01:27:01,520
work to do here and it should be

1980
01:27:01,520 --> 01:27:04,960
interesting to see it complete thanks

1981
01:27:04,960 --> 01:27:07,920
thank you so much al

1982
01:27:10,159 --> 01:27:13,120
all right and martin

1983
01:27:14,000 --> 01:27:16,960
martin duke google no hats on um

1984
01:27:16,960 --> 01:27:19,199
yeah like encryption's good so

1985
01:27:19,199 --> 01:27:22,159
thank you um uh if we do adopt this i

1986
01:27:22,159 --> 01:27:23,920
think it'd be good to get really early

1987
01:27:23,920 --> 01:27:26,000
sec area review

1988
01:27:26,000 --> 01:27:28,000
of this um i don't know i mean you've

1989
01:27:28,000 --> 01:27:29,600
mentioned some cryptographers a bunch i

1990
01:27:29,600 --> 01:27:30,560
don't

1991
01:27:30,560 --> 01:27:31,840
know who those people are but we should

1992
01:27:31,840 --> 01:27:34,719
probably run this through suck area

1993
01:27:34,719 --> 01:27:36,960
sooner rather than later absolutely

1994
01:27:36,960 --> 01:27:38,159
absolutely

1995
01:27:38,159 --> 01:27:40,400
yeah

1996
01:27:42,400 --> 01:27:43,920
great um

1997
01:27:43,920 --> 01:27:45,040
that sounds good

1998
01:27:45,040 --> 01:27:46,880
i was thinking the same thing that it

1999
01:27:46,880 --> 01:27:48,239
would be something good to adopt and

2000
01:27:48,239 --> 01:27:51,679
then get a very early sector review

2001
01:27:51,679 --> 01:27:54,560
uh the the use of hpke

2002
01:27:54,560 --> 01:27:56,480
i think it's you know

2003
01:27:56,480 --> 01:27:59,040
the the right thing to do here um but

2004
01:27:59,040 --> 01:28:01,199
having more eyes on it it's always a

2005
01:28:01,199 --> 01:28:02,639
good idea

2006
01:28:02,639 --> 01:28:03,679
all right thank you so much for this

2007
01:28:03,679 --> 01:28:05,360
presentation

2008
01:28:05,360 --> 01:28:08,000
thank you so much

2009
01:28:12,080 --> 01:28:13,920
okay and next up we have greg with a

2010
01:28:13,920 --> 01:28:17,600
couple documents greg do you want to

2011
01:28:17,679 --> 01:28:18,960
oh if you

2012
01:28:18,960 --> 01:28:20,560
hear yourself

2013
01:28:20,560 --> 01:28:22,800
oh much appreciated

2014
01:28:22,800 --> 01:28:27,480
okay let me pull those up

2015
01:28:34,880 --> 01:28:36,880
all right so we have a 15-minute slot

2016
01:28:36,880 --> 01:28:38,000
but we're going to go through two

2017
01:28:38,000 --> 01:28:39,679
documents here

2018
01:28:39,679 --> 01:28:42,719
yes thank you so uh let's first start

2019
01:28:42,719 --> 01:28:45,120
with the hybrid two-step uh collection

2020
01:28:45,120 --> 01:28:48,000
and transport method and uh next slide

2021
01:28:48,000 --> 01:28:50,400
please

2022
01:28:50,639 --> 01:28:52,880
so uh what is

2023
01:28:52,880 --> 01:28:56,080
their goal of this protocol it's a

2024
01:28:56,080 --> 01:28:58,320
method to collect and transport on path

2025
01:28:58,320 --> 01:29:01,440
telemetry information it can equally be

2026
01:29:01,440 --> 01:29:03,960
used in a point-to-point or

2027
01:29:03,960 --> 01:29:06,320
point-to-multi-point cases and the point

2028
01:29:06,320 --> 01:29:10,080
of multi-point cases is a tricky one

2029
01:29:10,080 --> 01:29:12,159
because

2030
01:29:12,159 --> 01:29:14,639
as you understand

2031
01:29:14,639 --> 01:29:18,159
the replication of

2032
01:29:18,320 --> 01:29:19,520
packets

2033
01:29:19,520 --> 01:29:23,760
if packet includes telemetry information

2034
01:29:23,760 --> 01:29:26,560
inherently leads to replication of

2035
01:29:26,560 --> 01:29:29,440
upstream collected telemetry uh in some

2036
01:29:29,440 --> 01:29:32,400
environments that uh is not a big

2037
01:29:32,400 --> 01:29:33,520
concern

2038
01:29:33,520 --> 01:29:36,719
but some networks are

2039
01:29:36,719 --> 01:29:38,719
especially for the services that a

2040
01:29:38,719 --> 01:29:43,520
premium service and use um

2041
01:29:43,600 --> 01:29:46,639
guarantees uh

2042
01:29:46,639 --> 01:29:49,440
for like out reliable low latency

2043
01:29:49,440 --> 01:29:53,839
services that that becomes challenging

2044
01:29:54,320 --> 01:29:58,000
by separating uh the moment of

2045
01:29:58,000 --> 01:29:59,199
uh

2046
01:29:59,199 --> 01:30:01,679
originating on generating telemetry

2047
01:30:01,679 --> 01:30:02,880
information

2048
01:30:02,880 --> 01:30:06,800
from the collection in transport

2049
01:30:07,040 --> 01:30:08,480
we can

2050
01:30:08,480 --> 01:30:11,520
achieve more accurate measurements

2051
01:30:11,520 --> 01:30:13,840
it's a known fact that

2052
01:30:13,840 --> 01:30:16,800
getting the timestamp is recommended at

2053
01:30:16,800 --> 01:30:19,520
the moment of the physical start of the

2054
01:30:19,520 --> 01:30:21,280
transmitting packet

2055
01:30:21,280 --> 01:30:22,080
to

2056
01:30:22,080 --> 01:30:25,600
minimize the variable delay

2057
01:30:25,600 --> 01:30:27,040
but

2058
01:30:27,040 --> 01:30:29,920
especially in ap and ipv6

2059
01:30:29,920 --> 01:30:32,000
environment

2060
01:30:32,000 --> 01:30:33,120
the packet

2061
01:30:33,120 --> 01:30:35,360
checksum needs to be recalculated once

2062
01:30:35,360 --> 01:30:37,920
we change the content once we write the

2063
01:30:37,920 --> 01:30:40,320
time step time value

2064
01:30:40,320 --> 01:30:42,800
so the separation is a

2065
01:30:42,800 --> 01:30:45,920
good technique to improve the accuracy

2066
01:30:45,920 --> 01:30:48,480
of the measurement

2067
01:30:48,480 --> 01:30:49,440
also

2068
01:30:49,440 --> 01:30:52,960
uh with the hybrid two step uh we can uh

2069
01:30:52,960 --> 01:30:55,199
we are removing the limits of a mountain

2070
01:30:55,199 --> 01:30:57,600
information that can be collected

2071
01:30:57,600 --> 01:31:00,719
for the monitored flow

2072
01:31:00,719 --> 01:31:03,440
so we know that even if um the network

2073
01:31:03,440 --> 01:31:07,199
uses a jumper frames that still has put

2074
01:31:07,199 --> 01:31:09,600
some limits um on the amount of

2075
01:31:09,600 --> 01:31:12,320
information that can be carried uh

2076
01:31:12,320 --> 01:31:17,480
embedded into this uh trigger packet

2077
01:31:17,520 --> 01:31:20,480
and uh also because

2078
01:31:20,480 --> 01:31:22,560
this is a separate mechanism and the

2079
01:31:22,560 --> 01:31:24,000
packets are

2080
01:31:24,000 --> 01:31:26,719
not the data packets the integrity

2081
01:31:26,719 --> 01:31:28,960
protection can be

2082
01:31:28,960 --> 01:31:31,840
applied uh to this

2083
01:31:31,840 --> 01:31:34,719
information and without affecting the

2084
01:31:34,719 --> 01:31:36,639
accuracy of the measurement because

2085
01:31:36,639 --> 01:31:37,840
again

2086
01:31:37,840 --> 01:31:39,840
if we take a measurement and then we

2087
01:31:39,840 --> 01:31:42,880
apply integrity protection then it

2088
01:31:42,880 --> 01:31:46,159
reduces variable delay

2089
01:31:46,159 --> 01:31:49,040
next slide please

2090
01:31:50,080 --> 01:31:53,440
so we use specif especially constructed

2091
01:31:53,440 --> 01:31:54,560
messages

2092
01:31:54,560 --> 01:31:57,760
that follow their trigger packet

2093
01:31:57,760 --> 01:32:01,120
in a data flow

2094
01:32:01,280 --> 01:32:04,159
another advantage of

2095
01:32:04,159 --> 01:32:06,480
what can be seen as advantage of this

2096
01:32:06,480 --> 01:32:09,280
method is that

2097
01:32:09,280 --> 01:32:11,199
the collection can be done

2098
01:32:11,199 --> 01:32:14,239
out of band so which means that it

2099
01:32:14,239 --> 01:32:15,760
follows their

2100
01:32:15,760 --> 01:32:19,280
topological path but uses a different uh

2101
01:32:19,280 --> 01:32:22,639
class of service so not to use the same

2102
01:32:22,639 --> 01:32:25,440
bandwidth allocated for the data flow

2103
01:32:25,440 --> 01:32:28,000
that is monitored

2104
01:32:28,000 --> 01:32:30,400
and again in many uh

2105
01:32:30,400 --> 01:32:32,960
environments in many cases that would be

2106
01:32:32,960 --> 01:32:36,400
advantageous because uh it would not use

2107
01:32:36,400 --> 01:32:40,080
their premium bandwidth

2108
01:32:40,080 --> 01:32:42,320
next slide

2109
01:32:42,320 --> 01:32:44,000
please

2110
01:32:44,000 --> 01:32:47,440
so this is their outline of their uh

2111
01:32:47,440 --> 01:32:50,480
follow-up packet

2112
01:32:50,480 --> 01:32:53,040
we had discussions and we added some

2113
01:32:53,040 --> 01:32:55,840
fields for ease of parsing

2114
01:32:55,840 --> 01:32:59,520
and uh it's expected that it's processed

2115
01:32:59,520 --> 01:33:03,440
at their same notes that are generating

2116
01:33:03,440 --> 01:33:06,480
information and each node when it

2117
01:33:06,480 --> 01:33:09,120
receives the trigger packet originates

2118
01:33:09,120 --> 01:33:11,199
information and holds it

2119
01:33:11,199 --> 01:33:14,560
for uh according to the local policy for

2120
01:33:14,560 --> 01:33:16,400
the follow-up package

2121
01:33:16,400 --> 01:33:18,320
uh one of their

2122
01:33:18,320 --> 01:33:23,120
options that uh it gives us is that

2123
01:33:23,120 --> 01:33:24,560
we can

2124
01:33:24,560 --> 01:33:27,840
export raw measurements for each trigger

2125
01:33:27,840 --> 01:33:29,920
packet or

2126
01:33:29,920 --> 01:33:31,520
measurements can be

2127
01:33:31,520 --> 01:33:34,480
statistically processed locally and then

2128
01:33:34,480 --> 01:33:37,199
collected using their uh follow-up

2129
01:33:37,199 --> 01:33:38,639
packet

2130
01:33:38,639 --> 01:33:41,600
next slide please

2131
01:33:43,520 --> 01:33:46,639
uh as mentioned so uh we

2132
01:33:46,639 --> 01:33:47,679
can

2133
01:33:47,679 --> 01:33:50,239
authenticate uh their information

2134
01:33:50,239 --> 01:33:54,718
collected on each node individually

2135
01:33:56,000 --> 01:33:58,560
next slide

2136
01:34:02,400 --> 01:34:05,440
hybrid two step can be used as i uh with

2137
01:34:05,440 --> 01:34:09,440
iem as another um

2138
01:34:09,840 --> 01:34:12,400
trace option and so we are proposing to

2139
01:34:12,400 --> 01:34:15,520
allocate our appropriate uh flight

2140
01:34:15,520 --> 01:34:18,920
uh flag

2141
01:34:19,120 --> 01:34:21,760
so that uh intelligent data profile

2142
01:34:21,760 --> 01:34:24,080
field

2143
01:34:25,280 --> 01:34:28,080
next slide please

2144
01:34:28,159 --> 01:34:31,600
so this is a graphical representation of

2145
01:34:31,600 --> 01:34:33,520
the protocol

2146
01:34:33,520 --> 01:34:37,600
we identify the trigger packet

2147
01:34:37,840 --> 01:34:40,159
their

2148
01:34:41,040 --> 01:34:42,080
transit

2149
01:34:42,080 --> 01:34:45,440
ingress node originates the follow-up

2150
01:34:45,440 --> 01:34:46,400
packet

2151
01:34:46,400 --> 01:34:48,159
and then each

2152
01:34:48,159 --> 01:34:50,400
transit node

2153
01:34:50,400 --> 01:34:52,560
adds more information

2154
01:34:52,560 --> 01:34:53,440
if

2155
01:34:53,440 --> 01:34:56,960
the mtu is about to be exceeded then it

2156
01:34:56,960 --> 01:34:59,600
uses their encapsulation of

2157
01:34:59,600 --> 01:35:01,199
preceding

2158
01:35:01,199 --> 01:35:03,040
follow-up packet

2159
01:35:03,040 --> 01:35:04,080
and

2160
01:35:04,080 --> 01:35:05,600
starts uh

2161
01:35:05,600 --> 01:35:08,159
additional generates

2162
01:35:08,159 --> 01:35:10,639
additional packet so and then they

2163
01:35:10,639 --> 01:35:13,600
arrive at the egress node

2164
01:35:13,600 --> 01:35:16,080
next slide

2165
01:35:18,480 --> 01:35:22,080
so that was uh the case of

2166
01:35:22,080 --> 01:35:25,119
for point to point and this diagram

2167
01:35:25,119 --> 01:35:27,600
reflects the theory of operation for

2168
01:35:27,600 --> 01:35:30,719
point to multipoint

2169
01:35:30,719 --> 01:35:31,840
and

2170
01:35:31,840 --> 01:35:33,199
so

2171
01:35:33,199 --> 01:35:35,600
because uh

2172
01:35:35,600 --> 01:35:37,520
we identify the flow

2173
01:35:37,520 --> 01:35:40,719
we don't have to copy the packets and uh

2174
01:35:40,719 --> 01:35:43,679
they're replication node

2175
01:35:43,679 --> 01:35:46,320
only generates a new follow-up packet

2176
01:35:46,320 --> 01:35:49,040
that collects uh

2177
01:35:49,040 --> 01:35:51,360
telemetry information on

2178
01:35:51,360 --> 01:35:55,360
downstream of their uh multicast tree

2179
01:35:55,360 --> 01:35:58,000
slide please

2180
01:35:58,880 --> 01:36:02,000
and this is very interesting uh mode

2181
01:36:02,000 --> 01:36:05,040
that was suggested by pascal

2182
01:36:05,040 --> 01:36:08,159
so that it works upstream

2183
01:36:08,159 --> 01:36:10,719
and their follow-up packet is uh

2184
01:36:10,719 --> 01:36:12,639
generated by

2185
01:36:12,639 --> 01:36:14,000
egress node

2186
01:36:14,000 --> 01:36:16,000
of their um

2187
01:36:16,000 --> 01:36:21,280
for the flow and then as uh sent um

2188
01:36:21,600 --> 01:36:24,719
in return path tracing the same

2189
01:36:24,719 --> 01:36:27,360
path of the monitored flow to the

2190
01:36:27,360 --> 01:36:28,320
ingress

2191
01:36:28,320 --> 01:36:31,520
so which might be useful for cases when

2192
01:36:31,520 --> 01:36:33,760
the ingress node

2193
01:36:33,760 --> 01:36:36,960
needs to be aware of the performance and

2194
01:36:36,960 --> 01:36:38,159
uh

2195
01:36:38,159 --> 01:36:41,040
can influence uh the network by

2196
01:36:41,040 --> 01:36:43,760
selecting certain uh scenarios one of

2197
01:36:43,760 --> 01:36:46,560
the possible scenario was the wireless

2198
01:36:46,560 --> 01:36:50,400
um so it's a discussion in a real

2199
01:36:50,400 --> 01:36:54,320
reliable wireless communication

2200
01:36:55,119 --> 01:36:56,400
um

2201
01:36:56,400 --> 01:36:59,519
i think the next slide

2202
01:37:00,080 --> 01:37:03,760
so uh we welcome comments and uh will

2203
01:37:03,760 --> 01:37:05,440
appreciate the consideration of the

2204
01:37:05,440 --> 01:37:08,480
working group adoption

2205
01:37:14,560 --> 01:37:16,480
all right thank you

2206
01:37:16,480 --> 01:37:18,840
any questions comments

2207
01:37:18,840 --> 01:37:22,960
support for doing this

2208
01:37:26,320 --> 01:37:27,440
and

2209
01:37:27,440 --> 01:37:29,600
people can please also send feedback to

2210
01:37:29,600 --> 01:37:31,679
the list

2211
01:37:31,679 --> 01:37:36,400
okay so let's go next presentation

2212
01:37:40,719 --> 01:37:43,760
we find those

2213
01:37:46,800 --> 01:37:49,840
okay so precision availability metrics

2214
01:37:49,840 --> 01:37:54,960
for um slo govern end-to-end services or

2215
01:37:54,960 --> 01:37:57,760
services that have multiple slos next

2216
01:37:57,760 --> 01:38:00,480
slide please

2217
01:38:01,360 --> 01:38:04,719
this is not really a new document as you

2218
01:38:04,719 --> 01:38:07,520
see so this is a merge of two documents

2219
01:38:07,520 --> 01:38:08,960
that uh

2220
01:38:08,960 --> 01:38:10,639
we've discussed in

2221
01:38:10,639 --> 01:38:13,280
the course of several um

2222
01:38:13,280 --> 01:38:14,320
meetings

2223
01:38:14,320 --> 01:38:17,840
next slide please

2224
01:38:18,080 --> 01:38:21,040
and so what is the uh precision

2225
01:38:21,040 --> 01:38:24,159
availability metrics uh it expresses

2226
01:38:24,159 --> 01:38:27,440
availability of the service uh relative

2227
01:38:27,440 --> 01:38:30,800
to uh the requirements that are

2228
01:38:30,800 --> 01:38:33,199
expressed in slo

2229
01:38:33,199 --> 01:38:35,840
and as low as being the measurable

2230
01:38:35,840 --> 01:38:37,040
performance

2231
01:38:37,040 --> 01:38:39,119
that characterizes the service and

2232
01:38:39,119 --> 01:38:41,280
usually it might have

2233
01:38:41,280 --> 01:38:44,239
um as an optimum performance that is

2234
01:38:44,239 --> 01:38:48,080
requested and a critical level that um

2235
01:38:48,080 --> 01:38:51,280
needs to be maintained

2236
01:38:51,360 --> 01:38:54,239
so the um

2237
01:38:56,880 --> 01:38:59,520
pam or precision availability metrics

2238
01:38:59,520 --> 01:39:01,760
can be used to determine the degree of

2239
01:39:01,760 --> 01:39:04,560
compliance which is the service is

2240
01:39:04,560 --> 01:39:08,960
delivered um versus their uh contract

2241
01:39:08,960 --> 01:39:12,400
between their operator and the client it

2242
01:39:12,400 --> 01:39:14,639
also can provide the service according

2243
01:39:14,639 --> 01:39:18,560
to slo whether it's uh for accounting

2244
01:39:18,560 --> 01:39:19,520
and

2245
01:39:19,520 --> 01:39:21,920
of course it's a billing or continuously

2246
01:39:21,920 --> 01:39:24,080
monitor the quality with which the

2247
01:39:24,080 --> 01:39:28,000
service is delivered so what we include

2248
01:39:28,000 --> 01:39:30,400
what we propose to include in this

2249
01:39:30,400 --> 01:39:34,159
metrics next slide please

2250
01:39:38,080 --> 01:39:41,679
so uh their key element is their time

2251
01:39:41,679 --> 01:39:44,880
unit or pam interval

2252
01:39:44,880 --> 01:39:46,400
um

2253
01:39:46,400 --> 01:39:48,639
and then we differentiate the error

2254
01:39:48,639 --> 01:39:52,000
interval the interval uh when their

2255
01:39:52,000 --> 01:39:56,719
uh metrics um exceeds the optimal

2256
01:39:56,719 --> 01:39:58,960
thresholds predefined

2257
01:39:58,960 --> 01:40:02,400
and error-free interval uh when their

2258
01:40:02,400 --> 01:40:04,000
performance is

2259
01:40:04,000 --> 01:40:06,639
below optimal uh or

2260
01:40:06,639 --> 01:40:07,760
better

2261
01:40:07,760 --> 01:40:10,239
not below but below the threshold so not

2262
01:40:10,239 --> 01:40:12,480
exceeding their optimal uh thresholds

2263
01:40:12,480 --> 01:40:16,239
and there is no uh defect being detected

2264
01:40:16,239 --> 01:40:18,880
uh the time interval could be one second

2265
01:40:18,880 --> 01:40:21,040
or one millisecond

2266
01:40:21,040 --> 01:40:23,920
uh with uh

2267
01:40:23,920 --> 01:40:26,159
error um

2268
01:40:26,159 --> 01:40:30,239
error interval uh we can um identify the

2269
01:40:30,239 --> 01:40:33,440
severely errored interval so and define

2270
01:40:33,440 --> 01:40:37,839
it would be proposed to define it as

2271
01:40:38,080 --> 01:40:40,639
an interval uh where their uh

2272
01:40:40,639 --> 01:40:42,000
performance

2273
01:40:42,000 --> 01:40:43,520
uh net

2274
01:40:43,520 --> 01:40:45,600
metric exceeded

2275
01:40:45,600 --> 01:40:47,119
um

2276
01:40:47,119 --> 01:40:48,239
critical

2277
01:40:48,239 --> 01:40:49,360
level

2278
01:40:49,360 --> 01:40:52,719
previously predefined or uh defect was

2279
01:40:52,719 --> 01:40:56,400
detected you can notice that a severely

2280
01:40:56,400 --> 01:40:58,960
arrowed interval is a subset of error

2281
01:40:58,960 --> 01:41:01,199
interval

2282
01:41:01,199 --> 01:41:03,119
um

2283
01:41:03,119 --> 01:41:05,119
so um

2284
01:41:05,119 --> 01:41:08,480
then uh based on these definitions uh we

2285
01:41:08,480 --> 01:41:12,239
can introduce uh basic metrics such as

2286
01:41:12,239 --> 01:41:13,920
uh

2287
01:41:13,920 --> 01:41:16,800
error interval count error free interval

2288
01:41:16,800 --> 01:41:19,360
count and severely error count

2289
01:41:19,360 --> 01:41:22,000
so the violated packet can be counted by

2290
01:41:22,000 --> 01:41:24,800
intervals over more meaningful

2291
01:41:24,800 --> 01:41:25,920
and

2292
01:41:25,920 --> 01:41:26,800
that

2293
01:41:26,800 --> 01:41:28,800
leads us to

2294
01:41:28,800 --> 01:41:31,760
the definition of availability so if we

2295
01:41:31,760 --> 01:41:35,280
can go to the next slide please

2296
01:41:38,960 --> 01:41:41,679
based on

2297
01:41:41,679 --> 01:41:43,440
counts

2298
01:41:43,440 --> 01:41:46,400
we can go to the timing so the time

2299
01:41:46,400 --> 01:41:49,040
since the last errored interval

2300
01:41:49,040 --> 01:41:51,920
and uh mean

2301
01:41:51,920 --> 01:41:54,000
time between and the number of packet

2302
01:41:54,000 --> 01:41:56,719
since and mean number of packets and

2303
01:41:56,719 --> 01:42:00,800
analogous for the severe errant interval

2304
01:42:00,800 --> 01:42:03,679
next slide please

2305
01:42:07,040 --> 01:42:10,560
so uh lengthy disruption can give us the

2306
01:42:10,560 --> 01:42:14,239
state if we have consecutive uh severe

2307
01:42:14,239 --> 01:42:17,679
error interval we can define this uh

2308
01:42:17,679 --> 01:42:21,199
state as unavailability and then an

2309
01:42:21,199 --> 01:42:24,239
availability state uh begins with the

2310
01:42:24,239 --> 01:42:29,199
start of the first of uh 10 consecutive

2311
01:42:29,199 --> 01:42:31,199
states

2312
01:42:31,199 --> 01:42:33,840
uh similarly if we have 10 consecutive

2313
01:42:33,840 --> 01:42:36,960
states of non-ce so which is an

2314
01:42:36,960 --> 01:42:39,679
error-free or

2315
01:42:39,679 --> 01:42:41,520
error interval

2316
01:42:41,520 --> 01:42:44,159
and that qualify then we can say that we

2317
01:42:44,159 --> 01:42:46,320
have a service availability

2318
01:42:46,320 --> 01:42:48,080
state

2319
01:42:48,080 --> 01:42:52,560
also we can calculate the ratio ratio of

2320
01:42:52,560 --> 01:42:55,679
error availability intervals and severe

2321
01:42:55,679 --> 01:42:57,040
error

2322
01:42:57,040 --> 01:43:00,719
intervals next slide please

2323
01:43:01,840 --> 01:43:05,520
uh so we identified uh the items for

2324
01:43:05,520 --> 01:43:07,199
further discussion

2325
01:43:07,199 --> 01:43:10,800
and future work that will be outside of

2326
01:43:10,800 --> 01:43:14,239
the scope of this draft

2327
01:43:14,639 --> 01:43:17,280
and we welcome our inputs and

2328
01:43:17,280 --> 01:43:19,840
contributions and collaboration

2329
01:43:19,840 --> 01:43:22,639
next slide please

2330
01:43:23,119 --> 01:43:26,480
so welcome comments discussion and uh we

2331
01:43:26,480 --> 01:43:29,040
think that as a merge of the work that's

2332
01:43:29,040 --> 01:43:30,400
been discussed

2333
01:43:30,400 --> 01:43:32,719
uh we would like ask the chairs to

2334
01:43:32,719 --> 01:43:36,679
consider working group adoption

2335
01:43:43,280 --> 01:43:45,440
all right thank you um

2336
01:43:45,440 --> 01:43:47,440
and thank you for your work on merging

2337
01:43:47,440 --> 01:43:50,000
this i think that's

2338
01:43:50,000 --> 01:43:52,159
become more clear certainly as part of

2339
01:43:52,159 --> 01:43:53,360
that

2340
01:43:53,360 --> 01:43:54,639
do we have any

2341
01:43:54,639 --> 01:43:58,719
quick questions from this group

2342
01:43:58,719 --> 01:44:02,679
don't say anyone in the queue

2343
01:44:08,000 --> 01:44:10,080
all right thank you greg for both of

2344
01:44:10,080 --> 01:44:12,560
those presentations and thank you again

2345
01:44:12,560 --> 01:44:14,960
if you have comments or thoughts please

2346
01:44:14,960 --> 01:44:18,239
uh bring those to the mailing list

2347
01:44:18,239 --> 01:44:22,320
thank you all right

2348
01:44:23,280 --> 01:44:26,000
then next up we have

2349
01:44:26,000 --> 01:44:29,600
the uh ot ramp on lag

2350
01:44:29,600 --> 01:44:32,600
documents

2351
01:44:36,159 --> 01:44:38,960
and i will present this

2352
01:44:38,960 --> 01:44:41,040
okay thank you

2353
01:44:41,040 --> 01:44:42,400
okay

2354
01:44:42,400 --> 01:44:45,360
i will start this topic we talk about

2355
01:44:45,360 --> 01:44:48,360
performance

2356
01:44:49,520 --> 01:44:50,880
standard

2357
01:44:50,880 --> 01:44:53,679
extensions

2358
01:44:53,679 --> 01:44:54,520
and next

2359
01:44:54,520 --> 01:44:57,729
[Music]

2360
01:44:58,080 --> 01:45:01,040
lag provides

2361
01:45:01,440 --> 01:45:04,639
to pull physical links into a single

2362
01:45:04,639 --> 01:45:06,000
logical link

2363
01:45:06,000 --> 01:45:07,920
uh you should

2364
01:45:07,920 --> 01:45:10,080
sorry general your your microphone was

2365
01:45:10,080 --> 01:45:11,520
cutting out a little bit

2366
01:45:11,520 --> 01:45:14,080
if you could start again

2367
01:45:14,080 --> 01:45:17,080
usually

2368
01:45:22,639 --> 01:45:24,400
i'm not i'm not hearing your audio

2369
01:45:24,400 --> 01:45:26,320
coming through now

2370
01:45:26,320 --> 01:45:30,360
let's let's try that again

2371
01:45:47,040 --> 01:45:49,360
all right

2372
01:45:50,320 --> 01:45:52,560
china do you want to uh try to send

2373
01:45:52,560 --> 01:45:55,360
audio again

2374
01:45:55,760 --> 01:45:57,440
or if you're not able to if you could

2375
01:45:57,440 --> 01:45:59,840
drop a note in the chat

2376
01:45:59,840 --> 01:46:03,239
oh here we go

2377
01:46:12,000 --> 01:46:13,679
i'm not able to hear you currently i

2378
01:46:13,679 --> 01:46:16,719
don't know if anyone else is

2379
01:46:16,719 --> 01:46:19,040
you cannot hear it it's not only you

2380
01:46:19,040 --> 01:46:22,320
right so we can't hear genre okay great

2381
01:46:22,320 --> 01:46:24,330
great okay

2382
01:46:24,330 --> 01:46:26,960
[Music]

2383
01:46:26,960 --> 01:46:30,880
all right um maybe let's switch over to

2384
01:46:30,880 --> 01:46:34,239
oh yes now i can hear you

2385
01:46:34,239 --> 01:46:37,718
can i try again

2386
01:46:46,239 --> 01:46:47,840
okay

2387
01:46:47,840 --> 01:46:51,119
it sounds like we're having issues um

2388
01:46:51,119 --> 01:46:54,080
let frank let's switch over to your

2389
01:46:54,080 --> 01:46:57,440
documents if that's okay

2390
01:47:02,239 --> 01:47:06,599
let me approve that there you go

2391
01:47:09,199 --> 01:47:11,600
yeah so let me see when i can find the

2392
01:47:11,600 --> 01:47:13,920
deck

2393
01:47:17,520 --> 01:47:20,080
all right so this is not my document

2394
01:47:20,080 --> 01:47:22,080
this is about trying to understand

2395
01:47:22,080 --> 01:47:23,600
whether we want to go and progress that

2396
01:47:23,600 --> 01:47:25,840
work or not it's been

2397
01:47:25,840 --> 01:47:28,960
it had a it had its hype and then it

2398
01:47:28,960 --> 01:47:30,800
went a little stale because people were

2399
01:47:30,800 --> 01:47:33,440
waiting for the data graph to mature

2400
01:47:33,440 --> 01:47:35,360
uh we have the data draft and the rfc

2401
01:47:35,360 --> 01:47:37,600
editor queue right now and we have two

2402
01:47:37,600 --> 01:47:40,400
documents that people felt are important

2403
01:47:40,400 --> 01:47:42,159
prior and i want to go and understand

2404
01:47:42,159 --> 01:47:44,239
whether we want to go and progress them

2405
01:47:44,239 --> 01:47:47,040
or just kind of sunset them

2406
01:47:47,040 --> 01:47:51,119
the first one is on using either type

2407
01:47:51,119 --> 01:47:54,880
a protocol and identification to carry

2408
01:47:54,880 --> 01:47:57,440
iom data and that is largely for

2409
01:47:57,440 --> 01:47:59,119
protocols like

2410
01:47:59,119 --> 01:48:02,000
gre or we can use that for geneva as

2411
01:48:02,000 --> 01:48:05,600
well the second document is for

2412
01:48:05,600 --> 01:48:09,600
raw export of iom data take the the ium

2413
01:48:09,600 --> 01:48:12,960
data blob and export it using a fix very

2414
01:48:12,960 --> 01:48:15,520
simple method to go and at least have

2415
01:48:15,520 --> 01:48:16,960
one standard means to go and get the

2416
01:48:16,960 --> 01:48:21,199
data out um so the two drafts are old

2417
01:48:21,199 --> 01:48:22,239
mature

2418
01:48:22,239 --> 01:48:25,600
both of them started in in 2018

2419
01:48:25,600 --> 01:48:28,000
and they've been tagging along

2420
01:48:28,000 --> 01:48:29,440
um they

2421
01:48:29,440 --> 01:48:31,600
expired at some point and i kind of

2422
01:48:31,600 --> 01:48:34,080
refreshed them just recently um first

2423
01:48:34,080 --> 01:48:36,080
one is raw export

2424
01:48:36,080 --> 01:48:36,960
um

2425
01:48:36,960 --> 01:48:39,280
it as i said it just takes the the iom

2426
01:48:39,280 --> 01:48:40,159
blob

2427
01:48:40,159 --> 01:48:42,960
encapsulates that into ipfix and then

2428
01:48:42,960 --> 01:48:44,239
ships it off

2429
01:48:44,239 --> 01:48:45,600
um

2430
01:48:45,600 --> 01:48:47,679
there's a few nuances that are being

2431
01:48:47,679 --> 01:48:50,320
added a few new data fields um we would

2432
01:48:50,320 --> 01:48:52,800
not even need to go and uh do an rfc for

2433
01:48:52,800 --> 01:48:54,960
that in order to go and get

2434
01:48:54,960 --> 01:48:56,560
the additional code points but i think

2435
01:48:56,560 --> 01:48:58,239
it's better if we do it that way because

2436
01:48:58,239 --> 01:49:01,440
that means people are um aware of it and

2437
01:49:01,440 --> 01:49:02,880
it's it's well documented how they want

2438
01:49:02,880 --> 01:49:04,400
to go and be done

2439
01:49:04,400 --> 01:49:07,040
the second thing is

2440
01:49:07,040 --> 01:49:08,560
a

2441
01:49:08,560 --> 01:49:10,800
draft that brian weiss

2442
01:49:10,800 --> 01:49:12,400
wrote originally

2443
01:49:12,400 --> 01:49:14,960
a couple of protocols

2444
01:49:14,960 --> 01:49:17,040
use

2445
01:49:17,040 --> 01:49:21,280
an either type to identify a particular

2446
01:49:21,280 --> 01:49:23,199
header

2447
01:49:23,199 --> 01:49:26,320
geneva's one gre is another example

2448
01:49:26,320 --> 01:49:27,679
and

2449
01:49:27,679 --> 01:49:29,760
that can be used to carry iom data

2450
01:49:29,760 --> 01:49:31,520
fields and people felt like this is a

2451
01:49:31,520 --> 01:49:35,119
simple way at least to go and get um v4

2452
01:49:35,119 --> 01:49:39,599
support for for iom using a gre header

2453
01:49:39,599 --> 01:49:40,480
um

2454
01:49:40,480 --> 01:49:44,080
if we want to go and get um

2455
01:49:44,639 --> 01:49:47,199
the work progressed um on both ends i

2456
01:49:47,199 --> 01:49:48,800
think yeah well we can need to go and

2457
01:49:48,800 --> 01:49:50,480
decide on whether we want to have a

2458
01:49:50,480 --> 01:49:53,920
simple means to go and export iom data

2459
01:49:53,920 --> 01:49:55,360
um

2460
01:49:55,360 --> 01:49:58,639
using ipfix um

2461
01:49:58,639 --> 01:50:00,400
mickey spiegelstraf would be a green

2462
01:50:00,400 --> 01:50:02,080
option for that i've not really seen

2463
01:50:02,080 --> 01:50:04,000
anything else i know that there is a

2464
01:50:04,000 --> 01:50:06,000
load of proprietary versions coming up

2465
01:50:06,000 --> 01:50:07,280
right now

2466
01:50:07,280 --> 01:50:09,360
so having one standard version i would

2467
01:50:09,360 --> 01:50:11,520
see as beneficial but that would require

2468
01:50:11,520 --> 01:50:13,679
other people to be interested in it

2469
01:50:13,679 --> 01:50:15,840
and the same goes for brian's draft i've

2470
01:50:15,840 --> 01:50:19,599
seen people wanted to use iom with v4

2471
01:50:19,599 --> 01:50:22,320
and gre i think is the the only way to

2472
01:50:22,320 --> 01:50:24,239
go and do it in a standard conformant

2473
01:50:24,239 --> 01:50:26,320
way if we want jre we need an either

2474
01:50:26,320 --> 01:50:27,280
type

2475
01:50:27,280 --> 01:50:29,920
and if we want an either type we at

2476
01:50:29,920 --> 01:50:32,080
least need the document to be working

2477
01:50:32,080 --> 01:50:34,239
group adopted and matured

2478
01:50:34,239 --> 01:50:36,320
so that based on that the isg could

2479
01:50:36,320 --> 01:50:38,480
formally apply with ieee for an either

2480
01:50:38,480 --> 01:50:39,920
time

2481
01:50:39,920 --> 01:50:41,920
so i think the question is really here

2482
01:50:41,920 --> 01:50:44,800
adopt or sunset for both of them and i

2483
01:50:44,800 --> 01:50:48,000
would appreciate your feedback

2484
01:50:50,960 --> 01:50:53,119
all right we have

2485
01:50:53,119 --> 01:50:56,799
our area directory in the queue

2486
01:50:58,080 --> 01:51:01,280
martin duke google um

2487
01:51:01,280 --> 01:51:02,880
can you explain the

2488
01:51:02,880 --> 01:51:04,719
difference in the use case between rock

2489
01:51:04,719 --> 01:51:08,159
sport and direct export

2490
01:51:10,400 --> 01:51:12,719
so raw export just

2491
01:51:12,719 --> 01:51:16,239
tells or is a way to go and get the iom

2492
01:51:16,239 --> 01:51:18,560
data

2493
01:51:18,560 --> 01:51:21,280
shipped using ipfix so it's it's the

2494
01:51:21,280 --> 01:51:24,320
ipfix kind of wrapping or the additional

2495
01:51:24,320 --> 01:51:27,440
data fields that you need in ipfix

2496
01:51:27,440 --> 01:51:31,040
the code points to go and ship the data

2497
01:51:31,040 --> 01:51:34,719
direct export is iom information or

2498
01:51:34,719 --> 01:51:38,480
flags that tell a node to go and

2499
01:51:38,480 --> 01:51:40,400
extract the data and then eventually

2500
01:51:40,400 --> 01:51:42,639
ship it how it's been shipped

2501
01:51:42,639 --> 01:51:45,199
direct export doesn't tell you

2502
01:51:45,199 --> 01:51:47,679
right so direct export is about flags

2503
01:51:47,679 --> 01:51:50,400
and iuem on the wire that tell a node

2504
01:51:50,400 --> 01:51:51,760
what to do

2505
01:51:51,760 --> 01:51:54,880
um raw export is

2506
01:51:54,880 --> 01:51:56,960
what rapper you want to go well some

2507
01:51:56,960 --> 01:52:00,480
means in ipfix to go and get us a quote

2508
01:52:00,480 --> 01:52:02,320
standardized effort to go and get data

2509
01:52:02,320 --> 01:52:04,239
off the note

2510
01:52:04,239 --> 01:52:08,678
okay so they're complimentary thank you

2511
01:52:16,239 --> 01:52:17,440
all right so i can go and send the

2512
01:52:17,440 --> 01:52:19,840
question one more time to list and um we

2513
01:52:19,840 --> 01:52:20,560
can

2514
01:52:20,560 --> 01:52:22,560
go decide accordingly like as i said i'm

2515
01:52:22,560 --> 01:52:23,760
not

2516
01:52:23,760 --> 01:52:27,679
the the author of those two drafts

2517
01:52:27,679 --> 01:52:28,400
but

2518
01:52:28,400 --> 01:52:31,199
i do see value but i'm the only one that

2519
01:52:31,199 --> 01:52:33,040
doesn't make sense

2520
01:52:33,040 --> 01:52:36,159
right um i guess as a follow-on to that

2521
01:52:36,159 --> 01:52:39,599
frank do you know if those authors are

2522
01:52:39,599 --> 01:52:40,960
willing to

2523
01:52:40,960 --> 01:52:43,679
carry on their work are they still

2524
01:52:43,679 --> 01:52:46,400
willing to drive that yeah i think um at

2525
01:52:46,400 --> 01:52:47,199
least

2526
01:52:47,199 --> 01:52:49,199
from from brian i know that he retired

2527
01:52:49,199 --> 01:52:52,560
at some point i'm not sure

2528
01:52:52,560 --> 01:52:55,440
and uh well with mickey i picked him but

2529
01:52:55,440 --> 01:52:57,760
uh he probably moved on to other topics

2530
01:52:57,760 --> 01:52:59,760
of given that he switched companies and

2531
01:52:59,760 --> 01:53:01,199
the likes right

2532
01:53:01,199 --> 01:53:04,080
yeah okay

2533
01:53:04,159 --> 01:53:06,080
so yeah let's raise this on the list but

2534
01:53:06,080 --> 01:53:08,320
it does seem like we would

2535
01:53:08,320 --> 01:53:09,840
need both

2536
01:53:09,840 --> 01:53:12,400
interest in someone to yeah

2537
01:53:12,400 --> 01:53:15,119
and i heard feedback off off list uh

2538
01:53:15,119 --> 01:53:16,239
from from

2539
01:53:16,239 --> 01:53:18,400
a launch last large service provider in

2540
01:53:18,400 --> 01:53:20,159
the in in europe

2541
01:53:20,159 --> 01:53:22,560
that had its interest in the in at least

2542
01:53:22,560 --> 01:53:24,400
the raw export work

2543
01:53:24,400 --> 01:53:26,080
so maybe we can have other people speak

2544
01:53:26,080 --> 01:53:27,679
up there i'll i'll raise it on the list

2545
01:53:27,679 --> 01:53:28,880
thank you

2546
01:53:28,880 --> 01:53:30,960
all right thank you frank

2547
01:53:30,960 --> 01:53:33,199
all right uh chandran are we able to

2548
01:53:33,199 --> 01:53:35,119
hear your audio now you want to try

2549
01:53:35,119 --> 01:53:36,719
talking again

2550
01:53:36,719 --> 01:53:40,119
can you hear me

2551
01:53:40,719 --> 01:53:41,840
thank you

2552
01:53:41,840 --> 01:53:44,400
that's great

2553
01:53:44,400 --> 01:53:46,320
um that's too quick

2554
01:53:46,320 --> 01:53:49,040
this topic we talk about performance

2555
01:53:49,040 --> 01:53:51,760
management on a lab including two drops

2556
01:53:51,760 --> 01:53:55,040
for stamp at the tm extensions

2557
01:53:55,040 --> 01:53:57,440
lag provides multiples to combine

2558
01:53:57,440 --> 01:53:59,599
multiple physical links into a single

2559
01:53:59,599 --> 01:54:00,880
logical link

2560
01:54:00,880 --> 01:54:04,239
usually when forwarding traffic over lag

2561
01:54:04,239 --> 01:54:06,880
the hash based motion is used to load

2562
01:54:06,880 --> 01:54:09,599
balance the traffic across the

2563
01:54:09,599 --> 01:54:10,800
member links

2564
01:54:10,800 --> 01:54:13,119
link delay of each

2565
01:54:13,119 --> 01:54:16,239
member links varies because of

2566
01:54:16,239 --> 01:54:18,239
different transport paths

2567
01:54:18,239 --> 01:54:21,440
to provide low latency service for time

2568
01:54:21,440 --> 01:54:24,480
sensitive traffic we need to leastly

2569
01:54:24,480 --> 01:54:27,040
steer the traffic across the

2570
01:54:27,040 --> 01:54:29,760
lag member links based on the link delay

2571
01:54:29,760 --> 01:54:31,840
loss and so on

2572
01:54:31,840 --> 01:54:34,320
that requires a solution to measure the

2573
01:54:34,320 --> 01:54:36,480
performance metrics of

2574
01:54:36,480 --> 01:54:38,159
every member link of

2575
01:54:38,159 --> 01:54:39,440
lag

2576
01:54:39,440 --> 01:54:40,960
existing

2577
01:54:40,960 --> 01:54:42,480
active pm

2578
01:54:42,480 --> 01:54:44,960
methods around a single test session

2579
01:54:44,960 --> 01:54:47,840
over the aggregation without the

2580
01:54:47,840 --> 01:54:50,880
knowledge of each member link this will

2581
01:54:50,880 --> 01:54:53,520
make it impossible to measure the

2582
01:54:53,520 --> 01:54:55,920
performance of a given physical member

2583
01:54:55,920 --> 01:54:56,800
link

2584
01:54:56,800 --> 01:54:59,040
the measured traffic

2585
01:54:59,040 --> 01:55:02,320
management metrics can only reflect

2586
01:55:02,320 --> 01:55:05,280
the performance of one member link or an

2587
01:55:05,280 --> 01:55:08,000
average of all the member lengths of the

2588
01:55:08,000 --> 01:55:09,280
lag

2589
01:55:09,280 --> 01:55:12,400
to solve this we followed the similar

2590
01:55:12,400 --> 01:55:14,719
idea of rfc

2591
01:55:14,719 --> 01:55:16,719
71 and

2592
01:55:16,719 --> 01:55:17,760
30

2593
01:55:17,760 --> 01:55:21,199
the bfd on that

2594
01:55:21,199 --> 01:55:24,159
next please

2595
01:55:28,239 --> 01:55:31,920
and to measure the performance matrix

2596
01:55:31,920 --> 01:55:34,880
of every member link of a lag not

2597
01:55:34,880 --> 01:55:38,000
multiple sections need to be established

2598
01:55:38,000 --> 01:55:39,599
between the two

2599
01:55:39,599 --> 01:55:42,560
endpoints that are connected by the lab

2600
01:55:42,560 --> 01:55:44,639
these sessions are called

2601
01:55:44,639 --> 01:55:47,520
micro sessions the micro sessions need

2602
01:55:47,520 --> 01:55:50,480
to associate with the corresponding

2603
01:55:50,480 --> 01:55:53,040
member links for example when the

2604
01:55:53,040 --> 01:55:54,719
reflector

2605
01:55:54,719 --> 01:55:58,000
receives a test packet it needs to know

2606
01:55:58,000 --> 01:56:00,159
from which member link the packet is

2607
01:56:00,159 --> 01:56:03,280
received and

2608
01:56:03,280 --> 01:56:06,719
correlated with a micro session

2609
01:56:06,719 --> 01:56:08,880
so we extend

2610
01:56:08,880 --> 01:56:10,159
a new

2611
01:56:10,159 --> 01:56:11,440
new

2612
01:56:11,440 --> 01:56:13,119
command type

2613
01:56:13,119 --> 01:56:16,639
to indicate the set of

2614
01:56:16,639 --> 01:56:19,520
micro sections of a lag and use

2615
01:56:19,520 --> 01:56:22,960
identifiers to correlate the test packet

2616
01:56:22,960 --> 01:56:24,639
to a particular

2617
01:56:24,639 --> 01:56:27,679
micro session and carry the member link

2618
01:56:27,679 --> 01:56:31,520
information for a validity check

2619
01:56:31,520 --> 01:56:33,920
next

2620
01:56:35,599 --> 01:56:37,599
this shows the

2621
01:56:37,599 --> 01:56:40,639
omp and the tvamp extensions

2622
01:56:40,639 --> 01:56:44,400
including control message and the test

2623
01:56:44,400 --> 01:56:47,520
packet we add two new uh control

2624
01:56:47,520 --> 01:56:50,639
messages the request the om micro

2625
01:56:50,639 --> 01:56:53,679
sessions and the requested tv micro

2626
01:56:53,679 --> 01:56:54,960
sessions

2627
01:56:54,960 --> 01:56:58,560
and in the test packet we add

2628
01:56:58,560 --> 01:56:59,520
sender

2629
01:56:59,520 --> 01:57:02,639
micro session id and the reflector micro

2630
01:57:02,639 --> 01:57:03,920
section id

2631
01:57:03,920 --> 01:57:06,840
both ids are locally assigned

2632
01:57:06,840 --> 01:57:08,080
[Music]

2633
01:57:08,080 --> 01:57:11,080
next

2634
01:57:12,320 --> 01:57:16,159
and this shows the location of sender

2635
01:57:16,159 --> 01:57:19,440
micro session id and reflectors micro

2636
01:57:19,440 --> 01:57:20,800
session id

2637
01:57:20,800 --> 01:57:22,840
in the authenticated

2638
01:57:22,840 --> 01:57:26,480
mode and next

2639
01:57:27,119 --> 01:57:30,880
stamp do not have a control plan so only

2640
01:57:30,880 --> 01:57:34,480
need to extend the test packet

2641
01:57:34,480 --> 01:57:37,760
stamp trv mechanism extender stamp

2642
01:57:37,760 --> 01:57:40,719
tester packets with one or more

2643
01:57:40,719 --> 01:57:44,880
optional tlvs so we proposed a micro

2644
01:57:44,880 --> 01:57:46,880
session idtlv

2645
01:57:46,880 --> 01:57:48,320
like this

2646
01:57:48,320 --> 01:57:50,960
and next

2647
01:57:51,119 --> 01:57:53,360
there are many suggestions in the

2648
01:57:53,360 --> 01:57:57,280
mailing list we all adjusted them in the

2649
01:57:57,280 --> 01:57:59,840
latest version

2650
01:57:59,840 --> 01:58:02,480
and next

2651
01:58:04,159 --> 01:58:06,960
so more comments are welcome and we

2652
01:58:06,960 --> 01:58:10,080
believe both drafts are mature to be

2653
01:58:10,080 --> 01:58:11,760
adopted by the

2654
01:58:11,760 --> 01:58:13,679
working group

2655
01:58:13,679 --> 01:58:16,679
thanks

2656
01:58:21,199 --> 01:58:22,719
okay thank you

2657
01:58:22,719 --> 01:58:23,840
um

2658
01:58:23,840 --> 01:58:28,320
any questions comments support

2659
01:58:28,639 --> 01:58:30,400
please get in the queue if you have

2660
01:58:30,400 --> 01:58:33,799
thoughts on this

2661
01:58:40,960 --> 01:58:41,840
okay

2662
01:58:41,840 --> 01:58:44,159
sounds like we can probably take it

2663
01:58:44,159 --> 01:58:46,080
back to the list but uh thank you for

2664
01:58:46,080 --> 01:58:49,119
this update

2665
01:58:49,119 --> 01:58:51,440
thank you

2666
01:58:52,960 --> 01:58:54,480
all right and with that we are at the

2667
01:58:54,480 --> 01:58:57,919
end of our agenda

2668
01:59:00,480 --> 01:59:03,480
so

2669
01:59:04,239 --> 01:59:05,679
thank you all i think we got through a

2670
01:59:05,679 --> 01:59:07,040
lot of good

2671
01:59:07,040 --> 01:59:08,960
good progress on this um thanks to all

2672
01:59:08,960 --> 01:59:10,320
the authors

2673
01:59:10,320 --> 01:59:11,119
um

2674
01:59:11,119 --> 01:59:12,719
marcus anything

2675
01:59:12,719 --> 01:59:16,239
from your end comments

2676
01:59:16,239 --> 01:59:17,840
no thanks everyone

2677
01:59:17,840 --> 01:59:20,000
great oh and thank you to stewart for

2678
01:59:20,000 --> 01:59:22,000
taking the notes

2679
01:59:22,000 --> 01:59:24,719
much appreciated

2680
01:59:26,480 --> 01:59:28,239
all right

2681
01:59:28,239 --> 01:59:30,320
great well have a great itf week

2682
01:59:30,320 --> 01:59:31,599
everyone

2683
01:59:31,599 --> 01:59:33,840
whether you are in vienna or

2684
01:59:33,840 --> 01:59:35,920
virtual

2685
01:59:35,920 --> 01:59:39,080
take care

2686
02:00:08,159 --> 02:00:11,159
um

