1
00:00:28,640 --> 00:00:31,640
ah

2
00:00:39,120 --> 00:00:41,840
all right um i think we'll get started i

3
00:00:41,840 --> 00:00:42,960
don't know how many people are going to

4
00:00:42,960 --> 00:00:46,399
be in here and versus online

5
00:00:46,399 --> 00:00:47,680
um

6
00:00:47,680 --> 00:00:50,480
but uh this is emu at

7
00:00:50,480 --> 00:00:52,000
ietf

8
00:00:52,000 --> 00:00:53,760
113 here

9
00:00:53,760 --> 00:00:55,120
in

10
00:00:55,120 --> 00:00:56,960
vienna and online

11
00:00:56,960 --> 00:00:58,800
um

12
00:00:58,800 --> 00:01:02,000
uh next slide might

13
00:01:02,719 --> 00:01:04,400
you all should be familiar with the note

14
00:01:04,400 --> 00:01:05,199
well

15
00:01:05,199 --> 00:01:08,640
kind of a code of conduct for the ietf

16
00:01:08,640 --> 00:01:11,200
talks a little bit about ipr and keeping

17
00:01:11,200 --> 00:01:13,520
things uh professional here

18
00:01:13,520 --> 00:01:16,560
in the meeting with our discussions

19
00:01:16,560 --> 00:01:20,640
uh and thanks uh ian for uh

20
00:01:20,640 --> 00:01:21,840
offering to

21
00:01:21,840 --> 00:01:24,080
take notes and if somebody else

22
00:01:24,080 --> 00:01:25,759
you can easily get to the notes through

23
00:01:25,759 --> 00:01:28,479
the ether pad link on the or the code

24
00:01:28,479 --> 00:01:30,720
emd link on the

25
00:01:30,720 --> 00:01:33,680
agenda and if you can uh

26
00:01:33,680 --> 00:01:35,759
take notes while jan is presenting that

27
00:01:35,759 --> 00:01:38,240
would be wonderful thank you

28
00:01:38,240 --> 00:01:41,200
um

29
00:01:41,200 --> 00:01:44,479
next slide okay

30
00:01:44,479 --> 00:01:46,320
so

31
00:01:46,320 --> 00:01:49,680
um there are around the room little qr

32
00:01:49,680 --> 00:01:51,600
codes that you should scan

33
00:01:51,600 --> 00:01:53,759
so that that's the method for signing in

34
00:01:53,759 --> 00:01:56,079
with your blue sheets so please scan the

35
00:01:56,079 --> 00:01:58,880
qr code so that your attendance will be

36
00:01:58,880 --> 00:02:00,240
recorded

37
00:02:00,240 --> 00:02:01,759
um that's something you agreed to do

38
00:02:01,759 --> 00:02:03,280
when you signed in and for people who

39
00:02:03,280 --> 00:02:06,320
are online that's already taken care of

40
00:02:06,320 --> 00:02:09,320
um

41
00:02:09,840 --> 00:02:12,720
all right so

42
00:02:13,040 --> 00:02:15,440
let's go to the next slide just a quick

43
00:02:15,440 --> 00:02:17,360
overview of our agenda which is packed

44
00:02:17,360 --> 00:02:18,480
today

45
00:02:18,480 --> 00:02:20,400
um we have a couple of working group

46
00:02:20,400 --> 00:02:22,640
draft items so we'll have uh yari talk

47
00:02:22,640 --> 00:02:25,440
first about aka pfs

48
00:02:25,440 --> 00:02:29,440
then alan uh we'll talk about uh

49
00:02:29,440 --> 00:02:31,599
the eep types and then we have some

50
00:02:31,599 --> 00:02:32,959
other drafts

51
00:02:32,959 --> 00:02:35,120
uh that we will go into some of them

52
00:02:35,120 --> 00:02:38,720
we're gonna see if there's uh some

53
00:02:38,720 --> 00:02:39,680
uh

54
00:02:39,680 --> 00:02:41,360
desire to kind of take them on as

55
00:02:41,360 --> 00:02:43,840
working group items in in this meeting

56
00:02:43,840 --> 00:02:45,920
um and if we don't get enough

57
00:02:45,920 --> 00:02:47,440
information from this meeting we'll have

58
00:02:47,440 --> 00:02:49,440
to take that to the list

59
00:02:49,440 --> 00:02:51,280
the uh

60
00:02:51,280 --> 00:02:53,120
adoption call would be taken to the like

61
00:02:53,120 --> 00:02:54,720
list anyway

62
00:02:54,720 --> 00:02:56,640
um

63
00:02:56,640 --> 00:02:58,239
does anybody have anything to add to

64
00:02:58,239 --> 00:02:59,920
this agenda we don't really have time to

65
00:02:59,920 --> 00:03:02,399
add anything

66
00:03:02,640 --> 00:03:05,040
but

67
00:03:05,040 --> 00:03:08,080
all right next slide please

68
00:03:08,080 --> 00:03:11,040
up all right let's uh go to uh yari

69
00:03:11,040 --> 00:03:14,040
slides

70
00:03:22,239 --> 00:03:24,480
all right uh hi guys my name is yadi

71
00:03:24,480 --> 00:03:27,120
arco and uh together with a couple of my

72
00:03:27,120 --> 00:03:28,799
colleagues and many contributors from

73
00:03:28,799 --> 00:03:30,840
the working group we've been doing this

74
00:03:30,840 --> 00:03:33,680
uh forward secrecy or perfect forward

75
00:03:33,680 --> 00:03:37,519
secrecy uh draft um an extension of eap

76
00:03:37,519 --> 00:03:39,280
aka

77
00:03:39,280 --> 00:03:41,760
next slide

78
00:03:41,760 --> 00:03:43,760
and um what is the status of that it's

79
00:03:43,760 --> 00:03:46,319
been sort of hanging around uh i guess

80
00:03:46,319 --> 00:03:48,159
partially at least due to lack of cycles

81
00:03:48,159 --> 00:03:50,159
on the author's part my part in

82
00:03:50,159 --> 00:03:51,519
particular

83
00:03:51,519 --> 00:03:53,519
but also some final details we were sort

84
00:03:53,519 --> 00:03:56,480
of trying to nail down um not much but a

85
00:03:56,480 --> 00:03:57,680
little bit we'll talk about that in a

86
00:03:57,680 --> 00:03:58,640
bit

87
00:03:58,640 --> 00:04:00,799
and waiting for you know clear

88
00:04:00,799 --> 00:04:03,120
opportunity to put this into real world

89
00:04:03,120 --> 00:04:04,480
use but

90
00:04:04,480 --> 00:04:06,319
i at least i'm a little tired of waiting

91
00:04:06,319 --> 00:04:08,159
so i think it's better that we make this

92
00:04:08,159 --> 00:04:11,360
an rfc and nail those final details and

93
00:04:11,360 --> 00:04:13,439
and then it's ready to be used and i

94
00:04:13,439 --> 00:04:16,238
think it's important of course the

95
00:04:16,238 --> 00:04:18,160
forward secrecy

96
00:04:18,160 --> 00:04:20,320
property is important for security next

97
00:04:20,320 --> 00:04:22,639
slide

98
00:04:22,720 --> 00:04:26,080
so we submitted the new version 06

99
00:04:26,080 --> 00:04:29,280
has a couple of changes not much

100
00:04:29,280 --> 00:04:32,080
um at least not substantially much we

101
00:04:32,080 --> 00:04:33,680
updated some of the references because

102
00:04:33,680 --> 00:04:36,240
they've been made rfcs recently

103
00:04:36,240 --> 00:04:38,160
okay no biggie um

104
00:04:38,160 --> 00:04:40,800
there's also a discussion in itf in the

105
00:04:40,800 --> 00:04:43,199
sarc group about

106
00:04:43,199 --> 00:04:46,160
the use of pfs terminology and they came

107
00:04:46,160 --> 00:04:48,240
to the conclusion that one should use

108
00:04:48,240 --> 00:04:50,800
forward secrecy

109
00:04:50,800 --> 00:04:53,280
instead and so we're trying to comply

110
00:04:53,280 --> 00:04:55,759
with the conclusion of that discussion

111
00:04:55,759 --> 00:04:58,560
there's a link on the slide to

112
00:04:58,560 --> 00:05:02,240
mail that john sent to the list i think

113
00:05:02,240 --> 00:05:04,400
um so we made that change and so that

114
00:05:04,400 --> 00:05:05,680
that sort of

115
00:05:05,680 --> 00:05:07,680
editorially fairly big change because it

116
00:05:07,680 --> 00:05:09,440
shows up on many places in the document

117
00:05:09,440 --> 00:05:11,520
we change the name

118
00:05:11,520 --> 00:05:14,080
next slide

119
00:05:15,120 --> 00:05:18,000
there's not much open issues that i know

120
00:05:18,000 --> 00:05:20,320
of i think it's pretty straightforward

121
00:05:20,320 --> 00:05:23,199
there's one issue however that has been

122
00:05:23,199 --> 00:05:24,800
having some discussion on the mailing

123
00:05:24,800 --> 00:05:26,560
list and

124
00:05:26,560 --> 00:05:29,680
some people discussing

125
00:05:30,080 --> 00:05:32,479
occasionally at least and

126
00:05:32,479 --> 00:05:34,080
my interpretation of the discussion was

127
00:05:34,080 --> 00:05:36,400
that it did not result in in a

128
00:05:36,400 --> 00:05:38,479
conclusion that i i could easily

129
00:05:38,479 --> 00:05:40,479
implement in the draft so

130
00:05:40,479 --> 00:05:42,720
i asked the working to to take a look at

131
00:05:42,720 --> 00:05:45,360
this in particular the people who were

132
00:05:45,360 --> 00:05:47,919
participating this uh john and renee and

133
00:05:47,919 --> 00:05:51,039
mohit you as well and maybe others

134
00:05:51,039 --> 00:05:53,199
so the question is about the encoding of

135
00:05:53,199 --> 00:05:55,280
the public value and how long it is and

136
00:05:55,280 --> 00:05:56,800
so on

137
00:05:56,800 --> 00:05:58,800
and um you can

138
00:05:58,800 --> 00:06:00,720
you can look up the

139
00:06:00,720 --> 00:06:02,080
the discussion on the mailing list

140
00:06:02,080 --> 00:06:04,400
archive but

141
00:06:04,400 --> 00:06:05,360
um

142
00:06:05,360 --> 00:06:07,440
from my perspective i need some some

143
00:06:07,440 --> 00:06:09,120
input from the working group or from

144
00:06:09,120 --> 00:06:10,560
from the guys i'm not the expert on this

145
00:06:10,560 --> 00:06:12,639
encoding so i'm kind of looking to

146
00:06:12,639 --> 00:06:13,919
others

147
00:06:13,919 --> 00:06:15,919
maybe my person's you can say something

148
00:06:15,919 --> 00:06:17,840
but uh basically

149
00:06:17,840 --> 00:06:19,360
on the right side of the slide you can

150
00:06:19,360 --> 00:06:20,479
see

151
00:06:20,479 --> 00:06:23,199
the the the actual text that we have

152
00:06:23,199 --> 00:06:24,880
right now

153
00:06:24,880 --> 00:06:28,160
let's talk about two curves and

154
00:06:28,160 --> 00:06:30,720
how they are encoded um and then there's

155
00:06:30,720 --> 00:06:31,919
uh

156
00:06:31,919 --> 00:06:33,680
some discussion between john and renee

157
00:06:33,680 --> 00:06:35,600
for instance on

158
00:06:35,600 --> 00:06:38,400
whether it should be 32 or 33 and

159
00:06:38,400 --> 00:06:40,560
what the implications are

160
00:06:40,560 --> 00:06:42,639
um

161
00:06:42,639 --> 00:06:44,960
so that that that's the open issue

162
00:06:44,960 --> 00:06:47,600
i don't know if people have

163
00:06:47,600 --> 00:06:49,680
thoughts now or

164
00:06:49,680 --> 00:06:53,759
so uh i think uh john is in the queue

165
00:06:53,759 --> 00:06:56,160
and in in theory uh you should join the

166
00:06:56,160 --> 00:07:00,000
mike q through your uh mobile app but so

167
00:07:00,000 --> 00:07:04,160
john go ahead and then yeah so i

168
00:07:04,160 --> 00:07:08,080
i'm fine with this 33 i mostly had

169
00:07:08,080 --> 00:07:09,919
comments about

170
00:07:09,919 --> 00:07:12,479
the reasons and some of the motivations

171
00:07:12,479 --> 00:07:14,639
behind the change and some of the

172
00:07:14,639 --> 00:07:18,800
statements regarding 32 byte values

173
00:07:18,800 --> 00:07:23,520
otherwise i find this 33 byte encoding

174
00:07:23,520 --> 00:07:25,520
perfectly fine i don't have anything

175
00:07:25,520 --> 00:07:27,360
against that so i think we can more or

176
00:07:27,360 --> 00:07:29,680
less close this issue if there's

177
00:07:29,680 --> 00:07:31,440
anything to do i think it

178
00:07:31,440 --> 00:07:32,560
then it's

179
00:07:32,560 --> 00:07:35,120
small non-technical clarifications in

180
00:07:35,120 --> 00:07:37,919
the draft or something um

181
00:07:37,919 --> 00:07:40,000
3d people already use

182
00:07:40,000 --> 00:07:42,400
this 33 byte

183
00:07:42,400 --> 00:07:45,680
code compression in in suki for example

184
00:07:45,680 --> 00:07:46,639
so

185
00:07:46,639 --> 00:07:48,160
um

186
00:07:48,160 --> 00:07:49,840
i don't have any

187
00:07:49,840 --> 00:07:52,240
i'm i'm fine with the current 33 byte

188
00:07:52,240 --> 00:07:53,759
yeah

189
00:07:53,759 --> 00:07:55,919
so just to clarify i don't think we have

190
00:07:55,919 --> 00:07:58,000
much of the background rationale in the

191
00:07:58,000 --> 00:08:00,639
draft it's it's been on the mailing list

192
00:08:00,639 --> 00:08:02,960
maybe in the change notes but not in the

193
00:08:02,960 --> 00:08:05,280
actual so you're happy with the text as

194
00:08:05,280 --> 00:08:07,759
it is in the o6

195
00:08:07,759 --> 00:08:11,759
i can check that but i i i i'm fine with

196
00:08:11,759 --> 00:08:14,720
the technical solution to use this 33

197
00:08:14,720 --> 00:08:17,199
byte encoding yeah

198
00:08:17,199 --> 00:08:20,240
let's look through that section together

199
00:08:20,240 --> 00:08:23,680
later offline maybe yeah

200
00:08:23,680 --> 00:08:25,039
dan

201
00:08:25,039 --> 00:08:27,360
uh dan harkins so the only reason you'd

202
00:08:27,360 --> 00:08:29,680
need the extra byte is if you care about

203
00:08:29,680 --> 00:08:32,080
the sign of the point

204
00:08:32,080 --> 00:08:34,080
but if you're if your shared secret is

205
00:08:34,080 --> 00:08:36,159
just the x coordinate of the

206
00:08:36,159 --> 00:08:37,599
the divi helmet

207
00:08:37,599 --> 00:08:39,360
shared secret point and you throw away

208
00:08:39,360 --> 00:08:40,479
the y coordinate they don't care about

209
00:08:40,479 --> 00:08:42,320
the sign anyway so you don't need

210
00:08:42,320 --> 00:08:44,560
you don't need the extra bite you don't

211
00:08:44,560 --> 00:08:47,680
it's it's not helpful

212
00:08:48,880 --> 00:08:51,360
there was also discussion by renee about

213
00:08:51,360 --> 00:08:52,959
like uh you were seeing the same

214
00:08:52,959 --> 00:08:55,360
encoding exactly as others and what the

215
00:08:55,360 --> 00:08:56,800
libraries do and so forth so i don't

216
00:08:56,800 --> 00:08:58,399
know if that played the

217
00:08:58,399 --> 00:09:00,000
role in that

218
00:09:00,000 --> 00:09:02,560
discussion but yeah well uh

219
00:09:02,560 --> 00:09:04,399
it was encoded as 33 because they wanted

220
00:09:04,399 --> 00:09:06,320
to compress it but there's some use

221
00:09:06,320 --> 00:09:09,279
cases required uh both sides to have the

222
00:09:09,279 --> 00:09:10,959
exact same sign

223
00:09:10,959 --> 00:09:12,480
representation so that that's what the

224
00:09:12,480 --> 00:09:15,440
byte is for so you can

225
00:09:15,440 --> 00:09:17,839
whether it's you know plus y or minus y

226
00:09:17,839 --> 00:09:19,920
but if you're throwing away y anyway

227
00:09:19,920 --> 00:09:21,440
then you don't really care what the sign

228
00:09:21,440 --> 00:09:23,120
is

229
00:09:23,120 --> 00:09:24,959
and i think you're throwing away

230
00:09:24,959 --> 00:09:27,279
why in in this

231
00:09:27,279 --> 00:09:30,480
in pfs draft right

232
00:09:32,560 --> 00:09:34,399
joan do you have a comment on that

233
00:09:34,399 --> 00:09:36,720
i agree with everything

234
00:09:36,720 --> 00:09:40,560
dan says this this single bite is not

235
00:09:40,560 --> 00:09:42,800
really useful but it doesn't really

236
00:09:42,800 --> 00:09:45,760
matter so much either so i i personally

237
00:09:45,760 --> 00:09:49,279
don't have a strong opinion i think com

238
00:09:49,279 --> 00:09:51,519
clients most libraries doesn't support

239
00:09:51,519 --> 00:09:53,279
this 33

240
00:09:53,279 --> 00:09:56,480
byte either so to get compliance you

241
00:09:56,480 --> 00:09:59,360
need uh 64 byte

242
00:09:59,360 --> 00:10:00,720
encoding

243
00:10:00,720 --> 00:10:02,720
mostly but

244
00:10:02,720 --> 00:10:04,240
but

245
00:10:04,240 --> 00:10:06,560
yeah

246
00:10:06,720 --> 00:10:08,480
but it's a single bike we're talking

247
00:10:08,480 --> 00:10:10,880
about so it might not be such a big

248
00:10:10,880 --> 00:10:14,640
issue i can live with both personally

249
00:10:16,839 --> 00:10:20,720
mohan um so

250
00:10:20,720 --> 00:10:23,120
maybe just thinking of the bigger

251
00:10:23,120 --> 00:10:24,320
picture here

252
00:10:24,320 --> 00:10:28,240
uh ebay and then ebay bfs would most

253
00:10:28,240 --> 00:10:30,320
likely be used

254
00:10:30,320 --> 00:10:33,440
um let's say more in 3gpp deployments

255
00:10:33,440 --> 00:10:35,680
than in other deployments and if i

256
00:10:35,680 --> 00:10:37,839
understood john correctly

257
00:10:37,839 --> 00:10:40,399
the way 3gbp currently uses this curve

258
00:10:40,399 --> 00:10:41,440
is with

259
00:10:41,440 --> 00:10:43,920
33 bytes

260
00:10:43,920 --> 00:10:45,760
in that case we should just follow

261
00:10:45,760 --> 00:10:49,279
whatever 3gbps is using just just

262
00:10:49,279 --> 00:10:51,440
because uh

263
00:10:51,440 --> 00:10:52,959
it will be

264
00:10:52,959 --> 00:10:56,000
like lesser path of resistance for

265
00:10:56,000 --> 00:10:57,279
them to

266
00:10:57,279 --> 00:10:59,040
hopefully adopt

267
00:10:59,040 --> 00:11:02,560
once this becomes an rfc and

268
00:11:02,560 --> 00:11:06,240
i don't know if aka bfs is going to be

269
00:11:06,240 --> 00:11:08,880
used in super super constrained

270
00:11:08,880 --> 00:11:11,120
iot scenarios where the one byte would

271
00:11:11,120 --> 00:11:13,440
make a difference so

272
00:11:13,440 --> 00:11:17,040
yeah that's that's my feeling

273
00:11:19,120 --> 00:11:21,360
okay so um

274
00:11:21,360 --> 00:11:22,640
if i'm trying to summarize the

275
00:11:22,640 --> 00:11:25,279
discussion um just just my opinion of

276
00:11:25,279 --> 00:11:26,240
course but

277
00:11:26,240 --> 00:11:28,320
it sounds to be like nobody is objecting

278
00:11:28,320 --> 00:11:30,399
to what we actually have now

279
00:11:30,399 --> 00:11:32,240
it also sounds like it's useful maybe

280
00:11:32,240 --> 00:11:34,640
for me and john to go through um

281
00:11:34,640 --> 00:11:36,640
some of the stuff offline particularly

282
00:11:36,640 --> 00:11:38,320
like the references and and that there's

283
00:11:38,320 --> 00:11:40,000
no

284
00:11:40,000 --> 00:11:42,240
no other other language anywhere in the

285
00:11:42,240 --> 00:11:44,240
draft that would actually speak about

286
00:11:44,240 --> 00:11:45,440
some of these things that we were

287
00:11:45,440 --> 00:11:48,160
arguing a little bit but but uh

288
00:11:48,160 --> 00:11:50,639
substance seems to be acceptable unless

289
00:11:50,639 --> 00:11:52,480
somebody screams now

290
00:11:52,480 --> 00:11:54,800
yeah i think um if if you guys could go

291
00:11:54,800 --> 00:11:57,040
on and kind of make a final decision and

292
00:11:57,040 --> 00:11:59,279
and update the draft if necessary and

293
00:11:59,279 --> 00:12:01,519
then uh you know let us know and then we

294
00:12:01,519 --> 00:12:03,760
can start uh working group last call i

295
00:12:03,760 --> 00:12:04,560
think

296
00:12:04,560 --> 00:12:06,320
yeah we will report on the list that

297
00:12:06,320 --> 00:12:08,800
what the conclusion was so awesome

298
00:12:08,800 --> 00:12:10,399
thank you

299
00:12:10,399 --> 00:12:12,720
uh there's still one more person in

300
00:12:12,720 --> 00:12:15,360
there help you

301
00:12:16,320 --> 00:12:17,360
hi

302
00:12:17,360 --> 00:12:19,120
i just had a question about

303
00:12:19,120 --> 00:12:21,200
like using 33 bytes

304
00:12:21,200 --> 00:12:23,279
i guess this question is like

305
00:12:23,279 --> 00:12:24,959
with the libraries

306
00:12:24,959 --> 00:12:27,920
i guess they introduced some ambiguity

307
00:12:27,920 --> 00:12:30,240
because you don't know they might expect

308
00:12:30,240 --> 00:12:31,440
they might

309
00:12:31,440 --> 00:12:33,120
libraries might want to know which white

310
00:12:33,120 --> 00:12:34,880
coordinator they should take

311
00:12:34,880 --> 00:12:36,800
and so that could you know that could be

312
00:12:36,800 --> 00:12:41,120
an issue that's all i wanted to say

313
00:12:45,279 --> 00:12:46,240
um

314
00:12:46,240 --> 00:12:48,560
so i think the spec will say exactly

315
00:12:48,560 --> 00:12:51,920
what to do and whether that matches the

316
00:12:51,920 --> 00:12:53,839
library that you have easily available

317
00:12:53,839 --> 00:12:55,440
or not is another

318
00:12:55,440 --> 00:12:56,720
question i think we're discussing that

319
00:12:56,720 --> 00:12:59,279
like what is the right choice here in

320
00:12:59,279 --> 00:13:00,959
terms of making that

321
00:13:00,959 --> 00:13:02,320
that thing easy with with the

322
00:13:02,320 --> 00:13:04,480
implementations well that that's part of

323
00:13:04,480 --> 00:13:07,519
it at least but um but the spec will be

324
00:13:07,519 --> 00:13:09,040
clear that you have to do that like you

325
00:13:09,040 --> 00:13:10,880
know this many bytes and

326
00:13:10,880 --> 00:13:13,279
go read here what you know what the what

327
00:13:13,279 --> 00:13:15,360
the format is and

328
00:13:15,360 --> 00:13:18,000
and i don't think that's this ambiguity

329
00:13:18,000 --> 00:13:21,120
after that this only ambiguity here

330
00:13:21,120 --> 00:13:22,639
deciding that

331
00:13:22,639 --> 00:13:24,720
what should the spec say but after after

332
00:13:24,720 --> 00:13:27,279
it says something i think it should be

333
00:13:27,279 --> 00:13:28,880
should be clear and if it's not then

334
00:13:28,880 --> 00:13:30,079
then we have a problem but i don't think

335
00:13:30,079 --> 00:13:31,360
we do

336
00:13:31,360 --> 00:13:32,399
okay

337
00:13:32,399 --> 00:13:35,040
jonathan

338
00:13:35,040 --> 00:13:36,959
to build off what nick said so it's not

339
00:13:36,959 --> 00:13:38,720
an ambiguity it's just that when most

340
00:13:38,720 --> 00:13:40,639
cryptographic libraries as john pointed

341
00:13:40,639 --> 00:13:43,279
out requires 64 bytes

342
00:13:43,279 --> 00:13:46,399
um then you would have to with a 32 byte

343
00:13:46,399 --> 00:13:48,480
representation you would have to use the

344
00:13:48,480 --> 00:13:51,040
curve equation to determine what the y

345
00:13:51,040 --> 00:13:52,480
coordinate is which would require

346
00:13:52,480 --> 00:13:54,160
significant computation which the

347
00:13:54,160 --> 00:13:58,360
library may or may not have

348
00:14:07,920 --> 00:14:09,360
you have to do those computations with

349
00:14:09,360 --> 00:14:11,440
33 bytes anyway

350
00:14:11,440 --> 00:14:12,480
i mean

351
00:14:12,480 --> 00:14:13,920
the only thing that extra byte tells you

352
00:14:13,920 --> 00:14:15,519
is which y to use

353
00:14:15,519 --> 00:14:17,279
you still have to

354
00:14:17,279 --> 00:14:19,440
to do the equation of the curve to get y

355
00:14:19,440 --> 00:14:20,800
squared you take the square root and now

356
00:14:20,800 --> 00:14:22,639
you just decide whether it's plus y or

357
00:14:22,639 --> 00:14:25,120
minus y based upon the

358
00:14:25,120 --> 00:14:26,720
the third byte so you have to do the

359
00:14:26,720 --> 00:14:28,800
work anyway whether you have

360
00:14:28,800 --> 00:14:32,160
the 33rd bite or not

361
00:14:37,120 --> 00:14:39,760
okay so i i think we still have the same

362
00:14:39,760 --> 00:14:42,639
uh direction for for the author and

363
00:14:42,639 --> 00:14:44,959
authors to kind of go look at what's

364
00:14:44,959 --> 00:14:47,199
available in terms of libraries and

365
00:14:47,199 --> 00:14:49,680
other specs and come up with a proposal

366
00:14:49,680 --> 00:14:52,399
that we can then run by the group

367
00:14:52,399 --> 00:14:55,120
all right thanks

368
00:14:55,440 --> 00:14:58,959
all right next we have uh alan with tlse

369
00:14:58,959 --> 00:15:01,279
types

370
00:15:07,120 --> 00:15:08,639
okay

371
00:15:08,639 --> 00:15:10,560
my linkedin looks to be linked i think

372
00:15:10,560 --> 00:15:12,720
there's only one slide here

373
00:15:12,720 --> 00:15:15,839
um so if we go to the next one mo heat

374
00:15:15,839 --> 00:15:18,399
um multiples client server

375
00:15:18,399 --> 00:15:20,800
implementations it's allegedly good to

376
00:15:20,800 --> 00:15:21,680
go

377
00:15:21,680 --> 00:15:23,120
um one

378
00:15:23,120 --> 00:15:27,920
issue raised was um sort of a throwaway

379
00:15:27,920 --> 00:15:31,040
comment in the ttls rsc that it should

380
00:15:31,040 --> 00:15:33,120
be okay to do

381
00:15:33,120 --> 00:15:35,920
client authentication using only the

382
00:15:35,920 --> 00:15:39,120
client skirt cert and just a skip phase

383
00:15:39,120 --> 00:15:41,360
two um

384
00:15:41,360 --> 00:15:43,279
i don't know anyone that's implemented

385
00:15:43,279 --> 00:15:46,000
that it seems a little weird

386
00:15:46,000 --> 00:15:48,160
if you want to use client cert

387
00:15:48,160 --> 00:15:51,199
authentication you should just use tls

388
00:15:51,199 --> 00:15:54,320
um and the suggestion was to forbid that

389
00:15:54,320 --> 00:15:58,800
in tls 1-3 for both ttls and peep

390
00:15:58,800 --> 00:16:01,600
that doesn't seem controversial

391
00:16:01,600 --> 00:16:02,480
so

392
00:16:02,480 --> 00:16:04,320
i think it should be okay it's already

393
00:16:04,320 --> 00:16:05,839
in the

394
00:16:05,839 --> 00:16:07,839
the last issue last version of the draft

395
00:16:07,839 --> 00:16:09,120
i published and

396
00:16:09,120 --> 00:16:11,440
no one seemed to comment too much on the

397
00:16:11,440 --> 00:16:12,399
list

398
00:16:12,399 --> 00:16:14,000
um the other issue which showed up in

399
00:16:14,000 --> 00:16:15,920
the last week or two

400
00:16:15,920 --> 00:16:18,240
is um

401
00:16:18,240 --> 00:16:19,600
a client

402
00:16:19,600 --> 00:16:23,279
deciding to not do

403
00:16:23,279 --> 00:16:26,959
session resumption for ttls

404
00:16:26,959 --> 00:16:28,800
the issue with

405
00:16:28,800 --> 00:16:30,079
pap

406
00:16:30,079 --> 00:16:33,759
when you do ttls plus pap there's only

407
00:16:33,759 --> 00:16:35,040
one

408
00:16:35,040 --> 00:16:36,880
even half round

409
00:16:36,880 --> 00:16:39,120
of information being sent from the

410
00:16:39,120 --> 00:16:41,040
supplicant to the server here's my

411
00:16:41,040 --> 00:16:43,839
password and the answer is deep success

412
00:16:43,839 --> 00:16:45,920
or eep failure

413
00:16:45,920 --> 00:16:47,680
we had a bunch of discussion around this

414
00:16:47,680 --> 00:16:49,120
do we want

415
00:16:49,120 --> 00:16:50,959
more to go back so that we have a

416
00:16:50,959 --> 00:16:54,560
protected success or failure indicator

417
00:16:54,560 --> 00:16:56,399
the larger issue

418
00:16:56,399 --> 00:17:00,000
is that if we send

419
00:17:00,000 --> 00:17:02,000
a session ticket

420
00:17:02,000 --> 00:17:05,039
instead of eve success or failure this

421
00:17:05,039 --> 00:17:06,480
implementation

422
00:17:06,480 --> 00:17:07,919
decides

423
00:17:07,919 --> 00:17:10,720
it's unexpected and treats it as reject

424
00:17:10,720 --> 00:17:14,000
um so i would suggest updating the

425
00:17:14,000 --> 00:17:16,400
document to suggest that

426
00:17:16,400 --> 00:17:19,280
this is not the proper thing to do

427
00:17:19,280 --> 00:17:22,240
um and you should continue doing tls

428
00:17:22,240 --> 00:17:24,079
whatever that means

429
00:17:24,079 --> 00:17:26,480
until you get the deep success or eat

430
00:17:26,480 --> 00:17:28,799
failure and this is perhaps a side

431
00:17:28,799 --> 00:17:31,039
effect of not having that protected

432
00:17:31,039 --> 00:17:32,720
success

433
00:17:32,720 --> 00:17:35,039
protected failure indicator

434
00:17:35,039 --> 00:17:36,880
other than that

435
00:17:36,880 --> 00:17:38,400
everyone seems to be happy

436
00:17:38,400 --> 00:17:41,679
implementation seems to be mostly okay

437
00:17:41,679 --> 00:17:43,760
and i think we're

438
00:17:43,760 --> 00:17:45,360
good to publish

439
00:17:45,360 --> 00:17:47,520
but i'd like a little more discussion or

440
00:17:47,520 --> 00:17:49,280
comment or

441
00:17:49,280 --> 00:17:50,799
something around

442
00:17:50,799 --> 00:17:53,918
around that last issue

443
00:17:57,600 --> 00:17:59,440
all right does anybody in attendance

444
00:17:59,440 --> 00:18:02,000
have uh

445
00:18:02,160 --> 00:18:03,360
comments uh

446
00:18:03,360 --> 00:18:06,080
about that issue mohit

447
00:18:06,080 --> 00:18:08,240
um

448
00:18:08,240 --> 00:18:11,120
maybe uh not so much on on this second

449
00:18:11,120 --> 00:18:13,520
day issue i haven't

450
00:18:13,520 --> 00:18:16,000
had a closer look at it

451
00:18:16,000 --> 00:18:19,440
but uh this allowing clients are i think

452
00:18:19,440 --> 00:18:21,600
this should be acceptable i'm just

453
00:18:21,600 --> 00:18:22,720
worried

454
00:18:22,720 --> 00:18:24,799
are we not aware of some niche

455
00:18:24,799 --> 00:18:27,679
deployment and would it make sense to

456
00:18:27,679 --> 00:18:30,400
for us cheers to send like a

457
00:18:30,400 --> 00:18:31,760
heads up

458
00:18:31,760 --> 00:18:32,720
that

459
00:18:32,720 --> 00:18:34,160
this update of

460
00:18:34,160 --> 00:18:36,960
let's say ttls and peep

461
00:18:36,960 --> 00:18:39,360
specifically highlighting this rfc

462
00:18:39,360 --> 00:18:41,600
numbers 5281

463
00:18:41,600 --> 00:18:44,000
saying that uh

464
00:18:44,000 --> 00:18:46,320
we are basically going to forbid

465
00:18:46,320 --> 00:18:49,120
uh client or that client authentication

466
00:18:49,120 --> 00:18:49,919
with

467
00:18:49,919 --> 00:18:52,799
client certificates only uh in which

468
00:18:52,799 --> 00:18:55,200
case you're better off with using dls

469
00:18:55,200 --> 00:18:57,120
and if you

470
00:18:57,120 --> 00:18:59,679
have any implementation or use cases

471
00:18:59,679 --> 00:19:01,919
where you are doing that

472
00:19:01,919 --> 00:19:05,520
say now or then then

473
00:19:06,080 --> 00:19:09,879
don't complain later

474
00:19:10,640 --> 00:19:11,520
tim

475
00:19:11,520 --> 00:19:13,440
hey tim cabelly um

476
00:19:13,440 --> 00:19:16,320
mac os lets you configure it via profile

477
00:19:16,320 --> 00:19:20,520
whether it works or not i'm not sure

478
00:19:25,280 --> 00:19:27,520
yeah this is alan again um

479
00:19:27,520 --> 00:19:31,280
from what i can tell the peep specs are

480
00:19:31,280 --> 00:19:33,200
silent on this issue

481
00:19:33,200 --> 00:19:35,760
so implementations

482
00:19:35,760 --> 00:19:38,400
may or may not support this

483
00:19:38,400 --> 00:19:39,919
um

484
00:19:39,919 --> 00:19:41,919
i know with with

485
00:19:41,919 --> 00:19:44,320
my server implementation

486
00:19:44,320 --> 00:19:47,360
um you can configure this

487
00:19:47,360 --> 00:19:50,240
it's pretty rare so far as i know

488
00:19:50,240 --> 00:19:51,520
um

489
00:19:51,520 --> 00:19:52,880
for for me i mean it's one of these

490
00:19:52,880 --> 00:19:55,360
things of

491
00:19:55,360 --> 00:19:57,919
it doesn't really break anything to

492
00:19:57,919 --> 00:19:59,360
allow this

493
00:19:59,360 --> 00:20:01,760
but i tend to be a little conservative

494
00:20:01,760 --> 00:20:03,919
in the we already have a client

495
00:20:03,919 --> 00:20:06,880
certificate authentication method if you

496
00:20:06,880 --> 00:20:09,039
want to use client certificates only you

497
00:20:09,039 --> 00:20:10,880
should just use that

498
00:20:10,880 --> 00:20:12,240
um

499
00:20:12,240 --> 00:20:15,120
and so forbidding it in the document

500
00:20:15,120 --> 00:20:17,120
you know given our experience with

501
00:20:17,120 --> 00:20:18,240
various

502
00:20:18,240 --> 00:20:20,640
similar forbiddings doesn't really

503
00:20:20,640 --> 00:20:23,520
necessarily affect implementations but

504
00:20:23,520 --> 00:20:25,840
perhaps serves as a warning that this

505
00:20:25,840 --> 00:20:28,799
doesn't really make sense if you want

506
00:20:28,799 --> 00:20:30,880
something with a phase two

507
00:20:30,880 --> 00:20:33,120
authentication then you should be using

508
00:20:33,120 --> 00:20:35,200
the phase 2 authentication

509
00:20:35,200 --> 00:20:37,440
um and we really don't know

510
00:20:37,440 --> 00:20:40,480
why or what the benefits are use cases

511
00:20:40,480 --> 00:20:42,320
um therefore

512
00:20:42,320 --> 00:20:44,240
officially speaking

513
00:20:44,240 --> 00:20:46,000
it should be

514
00:20:46,000 --> 00:20:48,960
either forbidden or frowned upon

515
00:20:48,960 --> 00:20:51,840
um and that exact phrasing is up in the

516
00:20:51,840 --> 00:20:54,000
air

517
00:20:58,880 --> 00:21:01,280
all right are there any more comments in

518
00:21:01,280 --> 00:21:04,559
the room or on the

519
00:21:04,559 --> 00:21:08,480
meteco on this particular

520
00:21:09,200 --> 00:21:10,960
issue

521
00:21:10,960 --> 00:21:14,080
if not i think we want to try to

522
00:21:14,080 --> 00:21:16,960
resolve this discussion on the list

523
00:21:16,960 --> 00:21:18,400
and uh

524
00:21:18,400 --> 00:21:19,919
so we can

525
00:21:19,919 --> 00:21:22,799
get a new draft spun up and uh move it

526
00:21:22,799 --> 00:21:24,159
forward

527
00:21:24,159 --> 00:21:25,919
so i don't i think we're we're pretty

528
00:21:25,919 --> 00:21:27,600
close on this one

529
00:21:27,600 --> 00:21:30,799
yeah i'll get a new draft out um

530
00:21:30,799 --> 00:21:32,880
after ietf and i think we should be good

531
00:21:32,880 --> 00:21:35,200
to go

532
00:21:37,520 --> 00:21:38,400
okay

533
00:21:38,400 --> 00:21:40,480
yeah just alan if you could note what

534
00:21:40,480 --> 00:21:43,039
the changes are make sure that we have

535
00:21:43,039 --> 00:21:45,840
that so that we can run that by the

536
00:21:45,840 --> 00:21:47,600
the working group

537
00:21:47,600 --> 00:21:49,919
i'll do that yeah i'll uh i'll send

538
00:21:49,919 --> 00:21:51,760
summaries to the last

539
00:21:51,760 --> 00:21:54,000
great

540
00:21:55,520 --> 00:21:57,520
all right

541
00:21:57,520 --> 00:22:00,720
i believe next

542
00:22:00,880 --> 00:22:01,480
we have

543
00:22:01,480 --> 00:22:03,360
[Music]

544
00:22:03,360 --> 00:22:06,080
eep usability

545
00:22:06,080 --> 00:22:08,559
uh there's only one slide here again

546
00:22:08,559 --> 00:22:13,440
not a lot to discuss i did issue a um

547
00:22:13,440 --> 00:22:16,000
new update with some minor tweaks and

548
00:22:16,000 --> 00:22:17,280
all this

549
00:22:17,280 --> 00:22:18,240
um

550
00:22:18,240 --> 00:22:22,159
really what this is is

551
00:22:22,240 --> 00:22:24,400
this is this is a way not just to

552
00:22:24,400 --> 00:22:28,320
configure eve but it it's a trade-off in

553
00:22:28,320 --> 00:22:29,679
cost

554
00:22:29,679 --> 00:22:31,360
um

555
00:22:31,360 --> 00:22:33,440
there are

556
00:22:33,440 --> 00:22:35,280
possibilities like

557
00:22:35,280 --> 00:22:39,840
fast teep um and some other

558
00:22:39,840 --> 00:22:42,480
proposals later in this meeting

559
00:22:42,480 --> 00:22:44,720
where you use eep

560
00:22:44,720 --> 00:22:48,960
almost as a general transport protocol

561
00:22:48,960 --> 00:22:51,600
to transport all kinds of provisioning

562
00:22:51,600 --> 00:22:52,799
information

563
00:22:52,799 --> 00:22:55,520
and there's provisions for queries and

564
00:22:55,520 --> 00:22:58,640
teep has provisions for

565
00:22:58,640 --> 00:23:01,520
requesting client certificates and

566
00:23:01,520 --> 00:23:03,360
pushing all kinds of information back

567
00:23:03,360 --> 00:23:04,880
and forth

568
00:23:04,880 --> 00:23:07,440
and speaking as an ape implementer and

569
00:23:07,440 --> 00:23:09,120
someone deploying and supporting these

570
00:23:09,120 --> 00:23:10,320
things

571
00:23:10,320 --> 00:23:12,159
it gets complicated

572
00:23:12,159 --> 00:23:15,200
um it's certainly easy in some respects

573
00:23:15,200 --> 00:23:17,760
for administrators who support this just

574
00:23:17,760 --> 00:23:19,600
to click a button saying allow

575
00:23:19,600 --> 00:23:21,200
provisioning

576
00:23:21,200 --> 00:23:22,799
um

577
00:23:22,799 --> 00:23:25,440
but it makes the implementations more

578
00:23:25,440 --> 00:23:28,400
fragile the error messages that show up

579
00:23:28,400 --> 00:23:30,480
to the user tend to be

580
00:23:30,480 --> 00:23:32,320
opaque if

581
00:23:32,320 --> 00:23:34,320
they exist

582
00:23:34,320 --> 00:23:36,799
and this proposal pushes the eep

583
00:23:36,799 --> 00:23:39,120
configuration complexity

584
00:23:39,120 --> 00:23:42,880
off onto standard internet protocols

585
00:23:42,880 --> 00:23:44,640
followed by a

586
00:23:44,640 --> 00:23:46,559
os specific

587
00:23:46,559 --> 00:23:49,039
configuration tool which just

588
00:23:49,039 --> 00:23:51,520
does whatever it has to using private

589
00:23:51,520 --> 00:23:53,760
apis or whatever you want

590
00:23:53,760 --> 00:23:56,799
so there is a little bit more work for

591
00:23:56,799 --> 00:24:01,600
site administrators to set this up

592
00:24:01,600 --> 00:24:04,640
but the nice thing is once it's set up

593
00:24:04,640 --> 00:24:06,960
um you really don't care what else is

594
00:24:06,960 --> 00:24:08,240
going on in your network it's

595
00:24:08,240 --> 00:24:11,840
independent of eep type etc etc so we do

596
00:24:11,840 --> 00:24:14,240
have buy-in from a bunch of people

597
00:24:14,240 --> 00:24:16,960
um to move forward with this implement

598
00:24:16,960 --> 00:24:19,360
this so the question is what does the

599
00:24:19,360 --> 00:24:22,559
larger working group think

600
00:24:22,880 --> 00:24:25,360
elliott

601
00:24:27,679 --> 00:24:30,240
hey uh good afternoon to those in the

602
00:24:30,240 --> 00:24:32,640
room good morning to people

603
00:24:32,640 --> 00:24:34,559
who aren't in the room and elsewhere in

604
00:24:34,559 --> 00:24:35,679
the us

605
00:24:35,679 --> 00:24:38,559
um alan thanks for this draft um

606
00:24:38,559 --> 00:24:41,600
i looked this over a long time ago

607
00:24:41,600 --> 00:24:43,440
there were there were a couple of issues

608
00:24:43,440 --> 00:24:44,880
that

609
00:24:44,880 --> 00:24:47,840
i'd seen back then

610
00:24:48,000 --> 00:24:50,159
but i just wanted to address one point

611
00:24:50,159 --> 00:24:52,720
here first which is

612
00:24:52,720 --> 00:24:55,840
um my focus is really as you guys know

613
00:24:55,840 --> 00:24:57,679
on iot where you don't have user

614
00:24:57,679 --> 00:25:00,159
interfaces you need standard interfaces

615
00:25:00,159 --> 00:25:01,600
to run things

616
00:25:01,600 --> 00:25:03,760
and one of the standard interfaces we

617
00:25:03,760 --> 00:25:04,559
need

618
00:25:04,559 --> 00:25:07,360
is a way to get a certificate

619
00:25:07,360 --> 00:25:08,159
so

620
00:25:08,159 --> 00:25:10,320
um and not just a certificate but a

621
00:25:10,320 --> 00:25:13,360
trust anchor right so the exact things

622
00:25:13,360 --> 00:25:16,080
that you were talking about in teep

623
00:25:16,080 --> 00:25:18,480
are the exact things that an iot device

624
00:25:18,480 --> 00:25:21,120
needs and you are suggesting that these

625
00:25:21,120 --> 00:25:23,760
be taken using standard internet

626
00:25:23,760 --> 00:25:25,440
mechanisms i'm presuming you're

627
00:25:25,440 --> 00:25:27,840
referring out to stuff like est or acme

628
00:25:27,840 --> 00:25:30,240
or some such can you elaborate a little

629
00:25:30,240 --> 00:25:31,679
bit more on where you think you're going

630
00:25:31,679 --> 00:25:34,000
in there

631
00:25:34,799 --> 00:25:38,320
yeah um the

632
00:25:38,559 --> 00:25:40,480
the standard internet tools here really

633
00:25:40,480 --> 00:25:42,480
are

634
00:25:42,480 --> 00:25:43,440
not

635
00:25:43,440 --> 00:25:45,279
sorry the the intention here is not so

636
00:25:45,279 --> 00:25:47,520
much for iot where you have a device

637
00:25:47,520 --> 00:25:48,480
with

638
00:25:48,480 --> 00:25:51,279
no ui no network connection looking to

639
00:25:51,279 --> 00:25:52,480
bootstrap

640
00:25:52,480 --> 00:25:53,600
um

641
00:25:53,600 --> 00:25:55,120
that's a complicated thing you

642
00:25:55,120 --> 00:25:57,520
definitely need something specific there

643
00:25:57,520 --> 00:25:59,200
and yeah that really does have to look a

644
00:25:59,200 --> 00:26:01,520
lot like eep

645
00:26:01,520 --> 00:26:03,679
generally speaking

646
00:26:03,679 --> 00:26:06,799
for other devices um

647
00:26:06,799 --> 00:26:09,520
you know my phone for example pretty

648
00:26:09,520 --> 00:26:12,159
much always has two network connections

649
00:26:12,159 --> 00:26:13,279
wi-fi

650
00:26:13,279 --> 00:26:17,600
and a backhaul on 4g 5g whatever

651
00:26:17,600 --> 00:26:20,000
my laptop for example i can always walk

652
00:26:20,000 --> 00:26:22,000
down to starbucks and get a completely

653
00:26:22,000 --> 00:26:23,440
unauthenticated

654
00:26:23,440 --> 00:26:26,480
internet connection

655
00:26:26,480 --> 00:26:28,720
when you do that

656
00:26:28,720 --> 00:26:30,760
you have dns

657
00:26:30,760 --> 00:26:33,919
https acme est

658
00:26:33,919 --> 00:26:35,200
whatever

659
00:26:35,200 --> 00:26:36,159
that will

660
00:26:36,159 --> 00:26:39,679
almost always already be on the device

661
00:26:39,679 --> 00:26:40,720
and

662
00:26:40,720 --> 00:26:43,279
already have software there

663
00:26:43,279 --> 00:26:46,159
and so the use case i i really envision

664
00:26:46,159 --> 00:26:47,360
is

665
00:26:47,360 --> 00:26:48,960
you know someone starting at a new

666
00:26:48,960 --> 00:26:52,559
company and you get told yeah here's the

667
00:26:52,559 --> 00:26:55,039
standard dns

668
00:26:55,039 --> 00:26:57,679
names for all of our configuration

669
00:26:57,679 --> 00:26:59,760
um all the certificates etc are

670
00:26:59,760 --> 00:27:02,480
available on https

671
00:27:02,480 --> 00:27:05,039
go and do that

672
00:27:05,039 --> 00:27:08,000
the the issue for me is

673
00:27:08,000 --> 00:27:10,799
loading all of this into eep is very

674
00:27:10,799 --> 00:27:12,559
very complicated

675
00:27:12,559 --> 00:27:14,640
and when it works it's absolutely

676
00:27:14,640 --> 00:27:17,520
fantastic and when it doesn't work

677
00:27:17,520 --> 00:27:19,679
um the user and the administrator

678
00:27:19,679 --> 00:27:22,080
generally get messages like failed

679
00:27:22,080 --> 00:27:24,080
and it could be one of 16 different

680
00:27:24,080 --> 00:27:26,159
things which fails and they have

681
00:27:26,159 --> 00:27:30,360
absolutely no idea

682
00:27:38,720 --> 00:27:41,679
okay bernard

683
00:27:47,679 --> 00:27:50,720
hello um yeah so i generally agree with

684
00:27:50,720 --> 00:27:52,640
where alan is going with it with this

685
00:27:52,640 --> 00:27:55,279
you know absent some considerations for

686
00:27:55,279 --> 00:27:56,559
iot

687
00:27:56,559 --> 00:27:59,120
because as was said in the original

688
00:27:59,120 --> 00:28:01,120
applicability statement eap is not

689
00:28:01,120 --> 00:28:02,720
really good at transferring large

690
00:28:02,720 --> 00:28:04,080
amounts of data which would include the

691
00:28:04,080 --> 00:28:05,600
configuration

692
00:28:05,600 --> 00:28:06,880
um and

693
00:28:06,880 --> 00:28:08,880
that's why it's probably a better

694
00:28:08,880 --> 00:28:11,520
approach if you can do it to just get on

695
00:28:11,520 --> 00:28:13,360
the network and then download the stuff

696
00:28:13,360 --> 00:28:14,399
using

697
00:28:14,399 --> 00:28:18,080
you know a full tcp stack

698
00:28:18,080 --> 00:28:19,520
and the configuration i don't know how

699
00:28:19,520 --> 00:28:21,039
big it is alan

700
00:28:21,039 --> 00:28:22,799
but uh

701
00:28:22,799 --> 00:28:24,640
it can be complicated

702
00:28:24,640 --> 00:28:26,399
so

703
00:28:26,399 --> 00:28:28,559
as you said it's a lot less fragile to

704
00:28:28,559 --> 00:28:32,158
do with the way allen's recommending

705
00:28:32,399 --> 00:28:34,159
yeah just to respond to that i mean it's

706
00:28:34,159 --> 00:28:35,279
it's

707
00:28:35,279 --> 00:28:37,760
certificates certificate chains

708
00:28:37,760 --> 00:28:40,080
um in the worst case i've seen you know

709
00:28:40,080 --> 00:28:44,559
64k of data and then people complain

710
00:28:47,520 --> 00:28:49,919
right yeah in particular uh

711
00:28:49,919 --> 00:28:51,440
yeah those are those are where you get

712
00:28:51,440 --> 00:28:53,360
the failures because you're sending a

713
00:28:53,360 --> 00:28:55,360
lot of data you know you get into all

714
00:28:55,360 --> 00:28:57,919
the issues that we got into uh you know

715
00:28:57,919 --> 00:29:00,799
recently with etls trying to shorten

716
00:29:00,799 --> 00:29:03,360
uh the certificate uh sizes because of

717
00:29:03,360 --> 00:29:05,440
those exact same failures

718
00:29:05,440 --> 00:29:07,840
um so yeah you're right you're gonna

719
00:29:07,840 --> 00:29:09,760
dramatically improve the

720
00:29:09,760 --> 00:29:11,279
likelihood that configuration will

721
00:29:11,279 --> 00:29:13,840
succeed

722
00:29:24,559 --> 00:29:26,720
i think elliot is still in the q value

723
00:29:26,720 --> 00:29:29,520
please go ahead

724
00:29:30,960 --> 00:29:34,159
thanks um i mean

725
00:29:34,159 --> 00:29:36,640
my my thinking is

726
00:29:36,640 --> 00:29:38,480
we should

727
00:29:38,480 --> 00:29:41,039
i'm not i i understand ellen's use case

728
00:29:41,039 --> 00:29:42,399
we sort of have

729
00:29:42,399 --> 00:29:45,279
two directions we can take

730
00:29:45,279 --> 00:29:47,520
direction number one is alan you just

731
00:29:47,520 --> 00:29:49,039
scoped the document

732
00:29:49,039 --> 00:29:51,520
in terms of in terms of

733
00:29:51,520 --> 00:29:53,600
these are the use cases i'm trying to

734
00:29:53,600 --> 00:29:55,840
solve and these are the use cases

735
00:29:55,840 --> 00:29:58,000
that may not be applicable for this

736
00:29:58,000 --> 00:29:59,360
document

737
00:29:59,360 --> 00:30:01,679
that's one approach

738
00:30:01,679 --> 00:30:04,880
another approach would be that we

739
00:30:04,880 --> 00:30:06,960
see if we can ponder the model that we

740
00:30:06,960 --> 00:30:10,559
really want that covers them both

741
00:30:10,559 --> 00:30:11,919
and sometimes that's reasonable and

742
00:30:11,919 --> 00:30:13,919
sometimes it's not

743
00:30:13,919 --> 00:30:15,919
right the the issues that you're talking

744
00:30:15,919 --> 00:30:17,919
about in terms of

745
00:30:17,919 --> 00:30:19,360
um

746
00:30:19,360 --> 00:30:21,600
data transfer sizes there's probably

747
00:30:21,600 --> 00:30:23,440
timeouts involved

748
00:30:23,440 --> 00:30:25,360
as well that that come into play in some

749
00:30:25,360 --> 00:30:27,279
of these cases the

750
00:30:27,279 --> 00:30:28,880
link path

751
00:30:28,880 --> 00:30:31,679
issues relating to you know what's

752
00:30:31,679 --> 00:30:33,600
what's running underneath

753
00:30:33,600 --> 00:30:35,520
you know there are a myriad of problems

754
00:30:35,520 --> 00:30:38,159
that he can run into

755
00:30:38,159 --> 00:30:41,039
but and it's nice to keep it nice and

756
00:30:41,039 --> 00:30:43,760
thin on the other hand

757
00:30:43,760 --> 00:30:45,279
um when it

758
00:30:45,279 --> 00:30:46,720
when we push these things into other

759
00:30:46,720 --> 00:30:48,480
layers the complexity

760
00:30:48,480 --> 00:30:51,840
isn't just um

761
00:30:51,840 --> 00:30:53,600
in one place

762
00:30:53,600 --> 00:30:55,360
uh it spreads

763
00:30:55,360 --> 00:30:57,919
into l3 for instance

764
00:30:57,919 --> 00:31:00,799
where you have trusted untrusted

765
00:31:00,799 --> 00:31:03,120
uh mechanisms that that end up getting

766
00:31:03,120 --> 00:31:05,679
into place especially with the iot case

767
00:31:05,679 --> 00:31:07,679
we see this in some of the deployments

768
00:31:07,679 --> 00:31:09,360
we have

769
00:31:09,360 --> 00:31:11,360
and we'd like to get away from that you

770
00:31:11,360 --> 00:31:12,480
know because

771
00:31:12,480 --> 00:31:13,919
that complexity

772
00:31:13,919 --> 00:31:16,080
leads to other problems so

773
00:31:16,080 --> 00:31:18,960
one challenge i think we face

774
00:31:18,960 --> 00:31:21,600
then and it really to me all this pulls

775
00:31:21,600 --> 00:31:22,960
down to is

776
00:31:22,960 --> 00:31:24,880
you know what do you do with teep and

777
00:31:24,880 --> 00:31:26,720
and things like teep

778
00:31:26,720 --> 00:31:28,720
you know how do we make how do we make

779
00:31:28,720 --> 00:31:31,840
it what is the right approach to get

780
00:31:31,840 --> 00:31:34,399
trust anchors inserts and such into a

781
00:31:34,399 --> 00:31:35,600
device

782
00:31:35,600 --> 00:31:38,399
without having to apply a whole lot of

783
00:31:38,399 --> 00:31:40,880
layer 3 complexity

784
00:31:40,880 --> 00:31:42,960
because that that complexity hurts too

785
00:31:42,960 --> 00:31:47,440
it can also be um

786
00:31:47,440 --> 00:31:50,720
difficult for administrators to handle

787
00:31:50,720 --> 00:31:53,440
it adds its own fragility

788
00:31:53,440 --> 00:31:55,440
so i'm not saying let's not do this

789
00:31:55,440 --> 00:31:56,960
draft

790
00:31:56,960 --> 00:31:59,279
you know don't don't get me wrong

791
00:31:59,279 --> 00:32:01,120
i'm just saying that

792
00:32:01,120 --> 00:32:03,120
um we should you know we should think

793
00:32:03,120 --> 00:32:04,080
about

794
00:32:04,080 --> 00:32:07,279
you know how how we want to tackle

795
00:32:07,279 --> 00:32:08,559
whether we want to tackle these these

796
00:32:08,559 --> 00:32:10,960
problems together or apart

797
00:32:10,960 --> 00:32:12,480
and it may make sense to tackle them

798
00:32:12,480 --> 00:32:14,000
apart because you can you know at least

799
00:32:14,000 --> 00:32:16,480
reduce the pain for some group

800
00:32:16,480 --> 00:32:18,640
and you're right allen that there are a

801
00:32:18,640 --> 00:32:21,360
number of devices that already have

802
00:32:21,360 --> 00:32:23,519
some form of connectivity and maybe

803
00:32:23,519 --> 00:32:26,720
there's some relief here for them

804
00:32:26,720 --> 00:32:27,600
uh

805
00:32:27,600 --> 00:32:29,039
you know the the other thing that we

806
00:32:29,039 --> 00:32:30,320
have to think about in terms of that

807
00:32:30,320 --> 00:32:31,679
relief is

808
00:32:31,679 --> 00:32:33,200
um it also

809
00:32:33,200 --> 00:32:35,360
may open up attack surfaces

810
00:32:35,360 --> 00:32:37,600
that we want to think about too

811
00:32:37,600 --> 00:32:39,919
um specifically do you you know

812
00:32:39,919 --> 00:32:41,919
do we really want you know the moment

813
00:32:41,919 --> 00:32:44,080
you say okay let's have an est server or

814
00:32:44,080 --> 00:32:45,279
something like that to handle

815
00:32:45,279 --> 00:32:46,640
certificates

816
00:32:46,640 --> 00:32:47,919
um

817
00:32:47,919 --> 00:32:49,279
you end up thinking about how you have

818
00:32:49,279 --> 00:32:52,000
to harden the est server to client

819
00:32:52,000 --> 00:32:53,120
requests

820
00:32:53,120 --> 00:32:54,480
and if you can put something in between

821
00:32:54,480 --> 00:32:56,799
that that that that is already doing

822
00:32:56,799 --> 00:32:58,480
some sort of policing

823
00:32:58,480 --> 00:33:00,640
uh that has its own value

824
00:33:00,640 --> 00:33:02,320
so i'm just saying it's

825
00:33:02,320 --> 00:33:03,919
this is a

826
00:33:03,919 --> 00:33:05,760
it's a bit of a

827
00:33:05,760 --> 00:33:08,080
admire and i'm sure alan that you know

828
00:33:08,080 --> 00:33:09,679
in terms of you know what you're doing

829
00:33:09,679 --> 00:33:10,960
you're living this something that this

830
00:33:10,960 --> 00:33:12,240
this nightmare so i don't want to

831
00:33:12,240 --> 00:33:13,919
understate the problem that you're

832
00:33:13,919 --> 00:33:15,120
trying to address i think it's a

833
00:33:15,120 --> 00:33:17,039
legitimate problem anyway i'm sorry for

834
00:33:17,039 --> 00:33:19,039
talking so long

835
00:33:19,039 --> 00:33:20,640
yeah tim

836
00:33:20,640 --> 00:33:23,120
yeah um tim paulie microsoft i'm alan

837
00:33:23,120 --> 00:33:25,039
super in favor of this um it's

838
00:33:25,039 --> 00:33:27,120
frustrating even just to connect here it

839
00:33:27,120 --> 00:33:30,000
took me five minutes for a

840
00:33:30,000 --> 00:33:32,159
ietf i etf um

841
00:33:32,159 --> 00:33:34,480
it may make sense in my opinion to scope

842
00:33:34,480 --> 00:33:36,960
this to user-centric devices and flows

843
00:33:36,960 --> 00:33:38,799
right i think scoping it down to the

844
00:33:38,799 --> 00:33:41,760
non-iot use case makes it much easier

845
00:33:41,760 --> 00:33:42,880
for

846
00:33:42,880 --> 00:33:45,440
a consumer of the spec and i think

847
00:33:45,440 --> 00:33:47,519
in theory when some of the work dan's

848
00:33:47,519 --> 00:33:49,200
doing and others are doing on iot that

849
00:33:49,200 --> 00:33:51,279
could become a parallel

850
00:33:51,279 --> 00:33:52,880
document that covers iot i do think

851
00:33:52,880 --> 00:33:54,960
they're discreet they can share but i

852
00:33:54,960 --> 00:33:57,200
think ultimately it's 2022 and people

853
00:33:57,200 --> 00:33:58,399
still can't get on the network in under

854
00:33:58,399 --> 00:34:00,000
30 seconds with their phone or their

855
00:34:00,000 --> 00:34:02,159
laptop so to me that should be very i

856
00:34:02,159 --> 00:34:03,519
don't think you have to change much of

857
00:34:03,519 --> 00:34:04,960
the dock maybe it's just the scoping in

858
00:34:04,960 --> 00:34:07,760
the intro and even the name potentially

859
00:34:07,760 --> 00:34:10,000
what what i'd like to

860
00:34:10,000 --> 00:34:11,918
do with this uh

861
00:34:11,918 --> 00:34:13,440
particular thing is not go for an

862
00:34:13,440 --> 00:34:15,280
adoption call right now but have a

863
00:34:15,280 --> 00:34:17,040
little bit more discussion on the list

864
00:34:17,040 --> 00:34:18,879
on the scoping because i think that

865
00:34:18,879 --> 00:34:19,760
would be

866
00:34:19,760 --> 00:34:21,599
you know appropriate to make sure we

867
00:34:21,599 --> 00:34:23,119
have the right scope

868
00:34:23,119 --> 00:34:24,239
um

869
00:34:24,239 --> 00:34:25,918
so i i think

870
00:34:25,918 --> 00:34:29,520
uh that that's what we should do

871
00:34:29,520 --> 00:34:32,639
so take it to the list

872
00:34:32,719 --> 00:34:35,839
all right alan

873
00:34:37,760 --> 00:34:39,199
yes looks good

874
00:34:39,199 --> 00:34:40,239
yeah

875
00:34:40,239 --> 00:34:44,719
uh next i think we have dan and dpp

876
00:34:45,359 --> 00:34:48,679
is it yeah

877
00:34:54,639 --> 00:34:56,960
okay thank you uh next slide my name is

878
00:34:56,960 --> 00:34:58,560
dan harkins

879
00:34:58,560 --> 00:35:00,400
and uh owen friel and i've been working

880
00:35:00,400 --> 00:35:03,359
on this idea of using uh the device

881
00:35:03,359 --> 00:35:05,359
provisioning protocol which is

882
00:35:05,359 --> 00:35:07,680
it's a wi-fi protocol that solves the

883
00:35:07,680 --> 00:35:09,440
onboarding catch-22 where you you need

884
00:35:09,440 --> 00:35:10,720
it credentially on the network but you

885
00:35:10,720 --> 00:35:12,000
need to get on the network you get a

886
00:35:12,000 --> 00:35:13,520
credential it's basically the problem

887
00:35:13,520 --> 00:35:14,480
everyone's

888
00:35:14,480 --> 00:35:16,800
been talking about uh and it does this

889
00:35:16,800 --> 00:35:18,800
by gaining trust in what it calls a

890
00:35:18,800 --> 00:35:20,480
bootstrapping key and then it uses this

891
00:35:20,480 --> 00:35:22,079
trusted public key to authenticate the

892
00:35:22,079 --> 00:35:23,839
device and provision it so we want to

893
00:35:23,839 --> 00:35:25,839
leverage that same sort of uh dpp

894
00:35:25,839 --> 00:35:28,839
bootstrapping key uh but use it uh with

895
00:35:28,839 --> 00:35:32,560
eep so the way we do this is we we glom

896
00:35:32,560 --> 00:35:37,040
onto tls authentication uh using rc 8773

897
00:35:37,040 --> 00:35:38,480
uh that

898
00:35:38,480 --> 00:35:41,040
defines an external psk which we derive

899
00:35:41,040 --> 00:35:43,280
from the pub the trusted bootstrapping

900
00:35:43,280 --> 00:35:47,280
key and then we do uh 7250 uh tls

901
00:35:47,280 --> 00:35:48,800
authentication with raw public key so

902
00:35:48,800 --> 00:35:50,880
the client can prove possession of the

903
00:35:50,880 --> 00:35:52,720
corresponding uh

904
00:35:52,720 --> 00:35:54,720
private key the the corresponds to the

905
00:35:54,720 --> 00:35:56,480
public bootstrap key

906
00:35:56,480 --> 00:35:57,920
and then we we have to signal that we're

907
00:35:57,920 --> 00:36:00,640
doing this uh using the extensible psk's

908
00:36:00,640 --> 00:36:04,879
uh draft so uh next slide please

909
00:36:07,040 --> 00:36:09,599
so uh this is what this is the classic

910
00:36:09,599 --> 00:36:12,079
tls authentication exchange uh in the

911
00:36:12,079 --> 00:36:14,000
the normal font is just normal normal

912
00:36:14,000 --> 00:36:16,400
tls the boldface stuff is what's added

913
00:36:16,400 --> 00:36:17,680
for dpp

914
00:36:17,680 --> 00:36:19,760
and the red boldface is the new stuff so

915
00:36:19,760 --> 00:36:22,320
all we're adding that's new is signaling

916
00:36:22,320 --> 00:36:24,400
this uh bootstrapping key id other than

917
00:36:24,400 --> 00:36:28,160
that it's the same 8773 and 7250

918
00:36:28,160 --> 00:36:30,320
external psk and raw public key

919
00:36:30,320 --> 00:36:31,680
authentication

920
00:36:31,680 --> 00:36:33,760
uh so next slide please

921
00:36:33,760 --> 00:36:36,480
so how this all fits into

922
00:36:36,480 --> 00:36:38,800
eep then is uh we want to do this with

923
00:36:38,800 --> 00:36:41,839
teep so what what happens is uh identity

924
00:36:41,839 --> 00:36:43,520
response the supplicant just says you

925
00:36:43,520 --> 00:36:46,000
know tls poke or whatever uh to signal

926
00:36:46,000 --> 00:36:47,040
that it wants to do this sort of

927
00:36:47,040 --> 00:36:49,440
authentication and then uh the t

928
00:36:49,440 --> 00:36:51,839
exchange gets authenticated with with

929
00:36:51,839 --> 00:36:53,119
what i just showed you in the previous

930
00:36:53,119 --> 00:36:54,880
slide and once teep has been

931
00:36:54,880 --> 00:36:57,160
authenticated we can use the

932
00:36:57,160 --> 00:36:59,839
pkcs107 exchange that's already in teep

933
00:36:59,839 --> 00:37:01,200
to uh

934
00:37:01,200 --> 00:37:02,480
to provision a certificate on the

935
00:37:02,480 --> 00:37:06,480
supplicant and then the supplicants

936
00:37:06,480 --> 00:37:08,320
subsequent connection we'll be using

937
00:37:08,320 --> 00:37:10,400
classic tls with

938
00:37:10,400 --> 00:37:11,839
the cert

939
00:37:11,839 --> 00:37:14,400
so next slide please

940
00:37:14,400 --> 00:37:16,960
so uh the graphs in o4 uh it didn't

941
00:37:16,960 --> 00:37:18,400
really change much from o3 just some

942
00:37:18,400 --> 00:37:20,480
minor editorial changes we do have

943
00:37:20,480 --> 00:37:23,359
running code uh and we're looking to get

944
00:37:23,359 --> 00:37:26,078
rough consensus

945
00:37:27,040 --> 00:37:28,960
okay

946
00:37:28,960 --> 00:37:30,560
um

947
00:37:30,560 --> 00:37:32,000
if there are

948
00:37:32,000 --> 00:37:34,400
uh mohit and bernard

949
00:37:34,400 --> 00:37:35,599
mohit first

950
00:37:35,599 --> 00:37:38,079
just very quick uh

951
00:37:38,079 --> 00:37:41,760
comment about the a773 i think

952
00:37:41,760 --> 00:37:44,880
i like that uh rfc and thanks for us for

953
00:37:44,880 --> 00:37:46,000
the work

954
00:37:46,000 --> 00:37:48,880
uh but it was labor less experimental

955
00:37:48,880 --> 00:37:51,280
and at that time there were not many

956
00:37:51,280 --> 00:37:53,760
libraries supporting it so i wonder if

957
00:37:53,760 --> 00:37:58,160
that status has has changed now

958
00:37:59,760 --> 00:38:01,520
i i

959
00:38:01,520 --> 00:38:03,680
i'm unaware of

960
00:38:03,680 --> 00:38:05,119
the status of that

961
00:38:05,119 --> 00:38:08,880
well this is a little experimental

962
00:38:08,880 --> 00:38:10,560
but uh

963
00:38:10,560 --> 00:38:11,839
you've just heard about one

964
00:38:11,839 --> 00:38:13,760
implementation that may be enough to

965
00:38:13,760 --> 00:38:16,160
advance

966
00:38:17,280 --> 00:38:18,560
that was russ

967
00:38:18,560 --> 00:38:20,320
i'm sorry russ i didn't i didn't catch

968
00:38:20,320 --> 00:38:22,480
what you said

969
00:38:22,480 --> 00:38:24,960
but it's still experimental based on

970
00:38:24,960 --> 00:38:27,200
your implementation we may be able to

971
00:38:27,200 --> 00:38:28,640
move it

972
00:38:28,640 --> 00:38:33,078
ask the guys next year

973
00:38:34,320 --> 00:38:36,320
said it's still experimental but we may

974
00:38:36,320 --> 00:38:38,000
be able to okay it's

975
00:38:38,000 --> 00:38:40,160
i think uh russia broke up a little bit

976
00:38:40,160 --> 00:38:41,920
it's still experimental but we may be

977
00:38:41,920 --> 00:38:43,520
able to move it beyond experimental

978
00:38:43,520 --> 00:38:47,440
based on this case okay well you as the

979
00:38:47,440 --> 00:38:49,839
tls working group chair after you call

980
00:38:49,839 --> 00:38:52,160
that one

981
00:38:52,160 --> 00:38:54,000
yeah well

982
00:38:54,000 --> 00:38:56,079
put a lot of hatcho we'll have to

983
00:38:56,079 --> 00:39:01,520
discuss that in a tls context but yeah

984
00:39:01,520 --> 00:39:04,160
uh bernard

985
00:39:06,079 --> 00:39:08,480
one thing uh you mentioned dan is the

986
00:39:08,480 --> 00:39:12,720
use of uh an identity response

987
00:39:12,720 --> 00:39:14,560
in a way that's actually fairly common

988
00:39:14,560 --> 00:39:16,960
but it's never really been standardized

989
00:39:16,960 --> 00:39:19,200
so very often in these kind of initial

990
00:39:19,200 --> 00:39:21,520
context you want to get the

991
00:39:21,520 --> 00:39:23,359
server you want to tell a server you

992
00:39:23,359 --> 00:39:24,720
want it you want to do something like

993
00:39:24,720 --> 00:39:26,800
you use anonymous or use tls poke or

994
00:39:26,800 --> 00:39:28,480
something else

995
00:39:28,480 --> 00:39:30,160
with the intention of of getting

996
00:39:30,160 --> 00:39:31,680
eliciting a certain response from the

997
00:39:31,680 --> 00:39:33,760
server we've never really documented

998
00:39:33,760 --> 00:39:35,200
these things

999
00:39:35,200 --> 00:39:38,160
uh and it might be a good idea to do it

1000
00:39:38,160 --> 00:39:39,520
so that

1001
00:39:39,520 --> 00:39:40,839
at least we get some

1002
00:39:40,839 --> 00:39:42,400
standardization

1003
00:39:42,400 --> 00:39:44,720
but i've seen that one quite often i

1004
00:39:44,720 --> 00:39:47,919
don't know if allen commented

1005
00:39:49,440 --> 00:39:51,119
that is a

1006
00:39:51,119 --> 00:39:55,640
good suggestion thank you

1007
00:39:58,400 --> 00:40:00,800
oh yeah

1008
00:40:02,720 --> 00:40:04,079
yeah um

1009
00:40:04,079 --> 00:40:06,560
i'd like to see the strap move forward

1010
00:40:06,560 --> 00:40:08,319
um

1011
00:40:08,319 --> 00:40:11,839
it has the benefit of

1012
00:40:11,839 --> 00:40:14,720
essentially providing an analog function

1013
00:40:14,720 --> 00:40:15,760
to

1014
00:40:15,760 --> 00:40:18,160
uh what's what's already available in

1015
00:40:18,160 --> 00:40:19,839
the wi-fi alliance

1016
00:40:19,839 --> 00:40:21,760
um for the wired

1017
00:40:21,760 --> 00:40:24,480
system and

1018
00:40:24,480 --> 00:40:25,520
it looks

1019
00:40:25,520 --> 00:40:26,720
uh

1020
00:40:26,720 --> 00:40:29,680
like a pretty elegant solution actually

1021
00:40:29,680 --> 00:40:32,079
and um

1022
00:40:32,079 --> 00:40:33,839
i do think

1023
00:40:33,839 --> 00:40:36,319
one question that comes up

1024
00:40:36,319 --> 00:40:40,240
is once this work is well enough along

1025
00:40:40,240 --> 00:40:42,560
right we probably need to do

1026
00:40:42,560 --> 00:40:44,960
you know dust off the teep update

1027
00:40:44,960 --> 00:40:48,400
um and get that going again the only

1028
00:40:48,400 --> 00:40:50,240
we it can be a lot

1029
00:40:50,240 --> 00:40:52,079
more narrowly scoped than earlier

1030
00:40:52,079 --> 00:40:53,599
attempts though

1031
00:40:53,599 --> 00:40:55,119
um

1032
00:40:55,119 --> 00:40:57,440
the the good news there is that we've

1033
00:40:57,440 --> 00:40:59,839
seen a number of the errata

1034
00:40:59,839 --> 00:41:03,680
verified already uh thanks to um

1035
00:41:03,680 --> 00:41:05,760
a couple of people

1036
00:41:05,760 --> 00:41:08,720
working on that yoni and um

1037
00:41:08,720 --> 00:41:10,160
you know

1038
00:41:10,160 --> 00:41:12,880
roman who did the verification the last

1039
00:41:12,880 --> 00:41:14,079
time around and

1040
00:41:14,079 --> 00:41:16,240
oleg pakar

1041
00:41:16,240 --> 00:41:17,760
the um

1042
00:41:17,760 --> 00:41:19,359
the only reason i say we need to open up

1043
00:41:19,359 --> 00:41:20,560
teep is

1044
00:41:20,560 --> 00:41:24,000
i think probably we want teep to or or

1045
00:41:24,000 --> 00:41:27,280
maybe a rev of t to reference this work

1046
00:41:27,280 --> 00:41:29,839
if we um don't move this forward though

1047
00:41:29,839 --> 00:41:31,839
we end up with a chicken and egg problem

1048
00:41:31,839 --> 00:41:33,599
and so i'd really like this to move

1049
00:41:33,599 --> 00:41:35,599
forward

1050
00:41:35,599 --> 00:41:38,800
uh yeah one regarding teep uh and

1051
00:41:38,800 --> 00:41:40,400
referencing that uh can you go back one

1052
00:41:40,400 --> 00:41:43,119
slide mohit please

1053
00:41:43,119 --> 00:41:44,560
so one thing that

1054
00:41:44,560 --> 00:41:45,520
i'm

1055
00:41:45,520 --> 00:41:48,000
i kind of slyly avoided was the csr

1056
00:41:48,000 --> 00:41:49,760
attributes tlv doesn't really exist in

1057
00:41:49,760 --> 00:41:50,960
teep yet

1058
00:41:50,960 --> 00:41:52,880
and i think it really should

1059
00:41:52,880 --> 00:41:54,560
uh

1060
00:41:54,560 --> 00:41:56,720
so

1061
00:41:56,800 --> 00:41:59,040
yeah i think they're a deep update draft

1062
00:41:59,040 --> 00:42:01,280
needs to happen and and when we add csr

1063
00:42:01,280 --> 00:42:03,839
attributes then we can reference this

1064
00:42:03,839 --> 00:42:06,880
draft as well

1065
00:42:07,680 --> 00:42:11,200
okay i think um

1066
00:42:12,160 --> 00:42:14,079
i think there's uh maybe some things to

1067
00:42:14,079 --> 00:42:17,920
resolve with tls um i don't know if that

1068
00:42:17,920 --> 00:42:20,400
i'll have to talk with you and talk with

1069
00:42:20,400 --> 00:42:21,680
other chairs and see if there's if

1070
00:42:21,680 --> 00:42:23,680
that's a blocking thing for this or not

1071
00:42:23,680 --> 00:42:25,359
i don't think it is

1072
00:42:25,359 --> 00:42:26,880
if it's not

1073
00:42:26,880 --> 00:42:30,160
um i would like to do an adoption call i

1074
00:42:30,160 --> 00:42:31,520
think for this because it seems like

1075
00:42:31,520 --> 00:42:32,960
there's a couple people have gotten up

1076
00:42:32,960 --> 00:42:34,800
and expressed interest and

1077
00:42:34,800 --> 00:42:36,400
um

1078
00:42:36,400 --> 00:42:37,359
so

1079
00:42:37,359 --> 00:42:40,480
is that sound reasonable mohit

1080
00:42:40,480 --> 00:42:43,599
um yeah i joined the queue again so i am

1081
00:42:43,599 --> 00:42:45,119
for uh

1082
00:42:45,119 --> 00:42:46,480
adopting this

1083
00:42:46,480 --> 00:42:47,280
uh

1084
00:42:47,280 --> 00:42:48,800
the reason i joined the view was

1085
00:42:48,800 --> 00:42:51,520
basically as as you as the tls chair as

1086
00:42:51,520 --> 00:42:52,319
well

1087
00:42:52,319 --> 00:42:53,520
uh

1088
00:42:53,520 --> 00:42:55,599
it doesn't have to happen before

1089
00:42:55,599 --> 00:42:57,839
adoption it can be after adoption to get

1090
00:42:57,839 --> 00:43:02,400
some like tls eyeballs on this because

1091
00:43:02,400 --> 00:43:04,960
i okay it could be wrong since i haven't

1092
00:43:04,960 --> 00:43:07,280
read it in a while and

1093
00:43:07,280 --> 00:43:09,119
i couldn't follow the slide so closely

1094
00:43:09,119 --> 00:43:10,359
but

1095
00:43:10,359 --> 00:43:13,040
h777b is

1096
00:43:13,040 --> 00:43:15,599
basically combining certificate based

1097
00:43:15,599 --> 00:43:18,319
authentication with external psk

1098
00:43:18,319 --> 00:43:21,040
but what this draft is doing is

1099
00:43:21,040 --> 00:43:23,599
combining external psks with raw public

1100
00:43:23,599 --> 00:43:25,280
keys

1101
00:43:25,280 --> 00:43:26,960
there shouldn't be any issues with that

1102
00:43:26,960 --> 00:43:28,880
but it would be good to have like more

1103
00:43:28,880 --> 00:43:32,079
dls eyeballs on on this and and that

1104
00:43:32,079 --> 00:43:32,960
that

1105
00:43:32,960 --> 00:43:35,200
can happen after adoption there's no i

1106
00:43:35,200 --> 00:43:37,200
don't know if that would be a blocker

1107
00:43:37,200 --> 00:43:40,640
but as the co-chair of the lsjo

1108
00:43:40,640 --> 00:43:42,079
if you could like

1109
00:43:42,079 --> 00:43:44,480
uh i don't know reach out to the right

1110
00:43:44,480 --> 00:43:46,720
people to have a look at this so

1111
00:43:46,720 --> 00:43:47,760
actually the

1112
00:43:47,760 --> 00:43:49,680
what our previous

1113
00:43:49,680 --> 00:43:51,599
uh

1114
00:43:51,599 --> 00:43:54,640
way to do this didn't use uh 873 what we

1115
00:43:54,640 --> 00:43:58,319
did was we generated a

1116
00:43:58,400 --> 00:43:59,760
a new uh

1117
00:43:59,760 --> 00:44:01,280
elliptic curve point

1118
00:44:01,280 --> 00:44:02,800
using the bootstrapping key and injected

1119
00:44:02,800 --> 00:44:05,040
that into the tls key schedule and when

1120
00:44:05,040 --> 00:44:07,520
we brought that to tls uh

1121
00:44:07,520 --> 00:44:11,040
both uh watson ladd and eric scorla uh

1122
00:44:11,040 --> 00:44:12,319
said that it was

1123
00:44:12,319 --> 00:44:14,480
complicated and it required you know a

1124
00:44:14,480 --> 00:44:16,000
lot of heavy lifting

1125
00:44:16,000 --> 00:44:18,000
to pry that into

1126
00:44:18,000 --> 00:44:20,400
into tls and it was easier and better to

1127
00:44:20,400 --> 00:44:24,240
use 8773 and 7250 so

1128
00:44:24,240 --> 00:44:25,839
it was actually

1129
00:44:25,839 --> 00:44:27,599
the you know

1130
00:44:27,599 --> 00:44:28,640
the

1131
00:44:28,640 --> 00:44:30,640
mandarins and the tls working group that

1132
00:44:30,640 --> 00:44:33,119
suggested doing this in the first place

1133
00:44:33,119 --> 00:44:34,319
yeah

1134
00:44:34,319 --> 00:44:37,359
okay i think uh let's uh i think we need

1135
00:44:37,359 --> 00:44:39,760
to move to the next presentation so okay

1136
00:44:39,760 --> 00:44:42,960
um thank you yeah

1137
00:44:44,000 --> 00:44:46,400
okay next uh i think we have mailing and

1138
00:44:46,400 --> 00:44:49,720
eep ibs

1139
00:44:51,520 --> 00:44:53,520
hello

1140
00:44:53,520 --> 00:44:55,200
hello

1141
00:44:55,200 --> 00:44:56,079
okay

1142
00:44:56,079 --> 00:44:59,359
hi everyone on my linkedin from channel

1143
00:44:59,359 --> 00:45:01,920
bio i would like a quick introduction

1144
00:45:01,920 --> 00:45:05,520
for my draft fts ibs again

1145
00:45:05,520 --> 00:45:08,640
next slide 6

1146
00:45:09,599 --> 00:45:12,000
we should be most concerned about use

1147
00:45:12,000 --> 00:45:15,760
cases currently concise 2 y is used for

1148
00:45:15,760 --> 00:45:16,839
iot

1149
00:45:16,839 --> 00:45:19,599
authentication and the other is distance

1150
00:45:19,599 --> 00:45:22,880
that not support x

1151
00:45:22,880 --> 00:45:25,760
find their online certificate the goal

1152
00:45:25,760 --> 00:45:29,280
is to improve the authentication options

1153
00:45:29,280 --> 00:45:32,160
as for the code we have implemented the

1154
00:45:32,160 --> 00:45:35,280
prototype in 2020

1155
00:45:35,280 --> 00:45:38,560
for our internal internet of things

1156
00:45:38,560 --> 00:45:41,839
system so far we have received some

1157
00:45:41,839 --> 00:45:44,720
comments both online and offline as i

1158
00:45:44,720 --> 00:45:49,359
list on the site sister ross and c again

1159
00:45:49,359 --> 00:45:52,480
next slide six

1160
00:45:55,680 --> 00:45:59,920
this is a simple example eccs i used for

1161
00:45:59,920 --> 00:46:03,359
fts ibs the most important thing is the

1162
00:46:03,359 --> 00:46:06,640
use of extensions server certificate

1163
00:46:06,640 --> 00:46:09,359
type and the current certificate type

1164
00:46:09,359 --> 00:46:12,839
which first defined in

1165
00:46:12,839 --> 00:46:16,960
rfc7250 to support raw public king and

1166
00:46:16,960 --> 00:46:21,400
signature algorithm which defined in fc

1167
00:46:21,400 --> 00:46:25,359
8446 but new added in ef test

1168
00:46:25,359 --> 00:46:28,000
merged for signature selection in my

1169
00:46:28,000 --> 00:46:29,200
draft

1170
00:46:29,200 --> 00:46:31,280
and we wrote it

1171
00:46:31,280 --> 00:46:34,640
identify basic nature contents in the

1172
00:46:34,640 --> 00:46:37,520
certificate and certificate verify

1173
00:46:37,520 --> 00:46:39,280
fields

1174
00:46:39,280 --> 00:46:42,800
you'll see ibs based raw public key in

1175
00:46:42,800 --> 00:46:46,000
ipts does not change the message for

1176
00:46:46,000 --> 00:46:47,119
roles

1177
00:46:47,119 --> 00:46:50,160
next slide things

1178
00:46:53,680 --> 00:46:58,240
people who have not read

1179
00:46:58,520 --> 00:47:01,760
rfc6507 in detail may not exactly

1180
00:47:01,760 --> 00:47:03,920
understand how the verification is

1181
00:47:03,920 --> 00:47:06,720
completed in this example so

1182
00:47:06,720 --> 00:47:10,000
in on this page i outlined the whole

1183
00:47:10,000 --> 00:47:11,520
process

1184
00:47:11,520 --> 00:47:13,200
prerequisite

1185
00:47:13,200 --> 00:47:16,880
it parameters several sent to cried and

1186
00:47:16,880 --> 00:47:20,000
the current procedures for verification

1187
00:47:20,000 --> 00:47:22,880
is more detailed here

1188
00:47:22,880 --> 00:47:24,640
than

1189
00:47:24,640 --> 00:47:26,800
uh the draft

1190
00:47:26,800 --> 00:47:28,800
finally successful signature

1191
00:47:28,800 --> 00:47:31,680
verification means that this identity

1192
00:47:31,680 --> 00:47:36,359
has been verified nestlight

1193
00:47:38,720 --> 00:47:41,599
for this presentation i

1194
00:47:41,599 --> 00:47:43,760
took a picture

1195
00:47:43,760 --> 00:47:46,240
for the eccsi

1196
00:47:46,240 --> 00:47:48,119
the procedure of

1197
00:47:48,119 --> 00:47:49,680
initialization

1198
00:47:49,680 --> 00:47:53,200
signature and signature verification

1199
00:47:53,200 --> 00:47:54,480
is

1200
00:47:54,480 --> 00:47:58,880
very clear in this procedure

1201
00:47:58,880 --> 00:48:01,119
it is worth noting that

1202
00:48:01,119 --> 00:48:03,839
eccsi is only one

1203
00:48:03,839 --> 00:48:07,280
algorithm of ibs

1204
00:48:07,280 --> 00:48:12,040
makes the usage raw publications and x

1205
00:48:12,040 --> 00:48:15,680
509 certificates it can also be used

1206
00:48:15,680 --> 00:48:18,480
here you only need to specify the

1207
00:48:18,480 --> 00:48:20,880
corresponding

1208
00:48:20,880 --> 00:48:24,079
certificate type such as their

1209
00:48:24,079 --> 00:48:25,920
client user

1210
00:48:25,920 --> 00:48:27,359
accessing

1211
00:48:27,359 --> 00:48:31,119
k4 kite authentication and the server

1212
00:48:31,119 --> 00:48:33,520
pro ysn

1213
00:48:33,520 --> 00:48:36,559
5 8 0 9 certificate for server

1214
00:48:36,559 --> 00:48:39,520
authentication

1215
00:48:39,839 --> 00:48:43,040
we hope this will become a one group

1216
00:48:43,040 --> 00:48:45,040
item

1217
00:48:45,040 --> 00:48:48,040
thanks

1218
00:48:51,119 --> 00:48:53,280
any comments

1219
00:48:53,280 --> 00:48:56,400
just uh maybe for the benefit of those

1220
00:48:56,400 --> 00:48:58,319
who who haven't

1221
00:48:58,319 --> 00:49:01,040
read or followed this

1222
00:49:01,040 --> 00:49:03,440
if i'm not wrong at least this draft

1223
00:49:03,440 --> 00:49:05,200
requests

1224
00:49:05,200 --> 00:49:08,160
a separate method type and doesn't use

1225
00:49:08,160 --> 00:49:11,119
the same method type number for for

1226
00:49:11,119 --> 00:49:12,280
standard

1227
00:49:12,280 --> 00:49:14,240
etls1

1228
00:49:14,240 --> 00:49:17,359
1.3 so it would be a separative method

1229
00:49:17,359 --> 00:49:19,680
number

1230
00:49:22,800 --> 00:49:26,960
saying smoke it but i i think um

1231
00:49:26,960 --> 00:49:28,400
not get your

1232
00:49:28,400 --> 00:49:30,559
questions exactly

1233
00:49:30,559 --> 00:49:34,480
can you uh speak slowly for me again

1234
00:49:34,480 --> 00:49:36,800
things

1235
00:49:37,280 --> 00:49:39,440
i'm sure there was actually no question

1236
00:49:39,440 --> 00:49:42,480
i was just waiting for okay

1237
00:49:42,480 --> 00:49:44,720
benefit of the audience that this will

1238
00:49:44,720 --> 00:49:47,119
be a be a separate

1239
00:49:47,119 --> 00:49:48,319
um

1240
00:49:48,319 --> 00:49:50,480
method number but maybe now it's time

1241
00:49:50,480 --> 00:49:52,319
joe if you want to

1242
00:49:52,319 --> 00:49:54,319
get a sense of the room i'm going to use

1243
00:49:54,319 --> 00:49:57,200
the show of hands tool and so if you've

1244
00:49:57,200 --> 00:49:59,200
logged in like you should have into the

1245
00:49:59,200 --> 00:50:01,839
room thing you should be able to respond

1246
00:50:01,839 --> 00:50:03,280
to this

1247
00:50:03,280 --> 00:50:05,359
thing what i'd like to know is if people

1248
00:50:05,359 --> 00:50:10,598
have uh read this draft or not

1249
00:50:22,800 --> 00:50:26,000
okay so we have uh

1250
00:50:26,000 --> 00:50:28,319
i'm gonna end it in

1251
00:50:28,319 --> 00:50:33,440
five four three two one

1252
00:50:33,920 --> 00:50:37,280
so i think did it

1253
00:50:37,760 --> 00:50:39,440
does it show the

1254
00:50:39,440 --> 00:50:40,880
result

1255
00:50:40,880 --> 00:50:41,920
somewhere

1256
00:50:41,920 --> 00:50:43,280
it looked to me like there were about

1257
00:50:43,280 --> 00:50:45,040
eight people that had read the strap so

1258
00:50:45,040 --> 00:50:46,800
there are some at least some folks that

1259
00:50:46,800 --> 00:50:47,920
have read it

1260
00:50:47,920 --> 00:50:50,319
um

1261
00:50:53,119 --> 00:50:56,480
29 participants 21 did not raise hand

1262
00:50:56,480 --> 00:50:59,440
and eight raised hand so just for the

1263
00:50:59,440 --> 00:51:02,079
minute taker

1264
00:51:02,079 --> 00:51:05,760
okay and then um

1265
00:51:06,640 --> 00:51:08,480
what i'd like to do is maybe i think we

1266
00:51:08,480 --> 00:51:11,599
should have a a call on the list

1267
00:51:11,599 --> 00:51:13,680
um since we have people who have read it

1268
00:51:13,680 --> 00:51:16,000
i think there's

1269
00:51:16,000 --> 00:51:18,319
um

1270
00:51:20,800 --> 00:51:23,839
does that sound reasonable

1271
00:51:26,160 --> 00:51:28,400
to take this take this to the list

1272
00:51:28,400 --> 00:51:31,359
do an adoption call

1273
00:51:31,760 --> 00:51:34,400
i guess is there anyone who

1274
00:51:34,400 --> 00:51:35,840
in the room or online who

1275
00:51:35,840 --> 00:51:37,280
[Music]

1276
00:51:37,280 --> 00:51:40,640
who thinks that we should not adopt this

1277
00:51:40,640 --> 00:51:42,240
yeah would there be any objection to

1278
00:51:42,240 --> 00:51:44,000
adopting it that people would want to

1279
00:51:44,000 --> 00:51:46,559
raise now

1280
00:51:47,119 --> 00:51:51,839
yes i think i think so

1281
00:51:55,680 --> 00:51:57,200
um

1282
00:51:57,200 --> 00:51:58,640
maybe i

1283
00:51:58,640 --> 00:52:00,720
uh we can try

1284
00:52:00,720 --> 00:52:04,079
adoption for this draft because i think

1285
00:52:04,079 --> 00:52:04,960
this

1286
00:52:04,960 --> 00:52:07,200
way will push more people to pay

1287
00:52:07,200 --> 00:52:11,280
attention to this merced and ibs

1288
00:52:11,280 --> 00:52:12,400
i think

1289
00:52:12,400 --> 00:52:16,240
there are many people can help

1290
00:52:16,319 --> 00:52:18,319
yeah so i think we'll we'll take this to

1291
00:52:18,319 --> 00:52:20,720
the list

1292
00:52:22,079 --> 00:52:24,559
okay thank you

1293
00:52:24,559 --> 00:52:28,000
all right next we have i think yawn

1294
00:52:28,000 --> 00:52:32,520
with not much time i'm sorry

1295
00:52:35,119 --> 00:52:36,800
yeah it's okay i'll

1296
00:52:36,800 --> 00:52:38,480
try to rush through it

1297
00:52:38,480 --> 00:52:41,920
um yeah my name is jan i'm currently for

1298
00:52:41,920 --> 00:52:43,839
a masters project

1299
00:52:43,839 --> 00:52:46,640
looking into uh noob

1300
00:52:46,640 --> 00:52:49,520
and as part of my my work at the german

1301
00:52:49,520 --> 00:52:52,000
research and education network i'm also

1302
00:52:52,000 --> 00:52:54,880
in the eduroam team so i found this very

1303
00:52:54,880 --> 00:52:56,240
interesting

1304
00:52:56,240 --> 00:52:58,800
and i have read the draft and tried to

1305
00:52:58,800 --> 00:53:01,520
implement it and while implementing it i

1306
00:53:01,520 --> 00:53:02,800
have noticed

1307
00:53:02,800 --> 00:53:05,119
some things uh about

1308
00:53:05,119 --> 00:53:07,760
noob that i just written uh in this

1309
00:53:07,760 --> 00:53:10,160
observations draft you move to the next

1310
00:53:10,160 --> 00:53:12,400
slide please

1311
00:53:12,400 --> 00:53:14,800
so the the first observation that i made

1312
00:53:14,800 --> 00:53:17,200
that uh kind of puzzled me a little bit

1313
00:53:17,200 --> 00:53:19,920
is uh why use json as the payload

1314
00:53:19,920 --> 00:53:22,079
encoding i've seen uh some uh

1315
00:53:22,079 --> 00:53:24,880
communication on the mailing list um

1316
00:53:24,880 --> 00:53:28,000
uh why this was chosen

1317
00:53:28,000 --> 00:53:30,000
but i had some problems with

1318
00:53:30,000 --> 00:53:31,280
implementing it

1319
00:53:31,280 --> 00:53:33,520
because of the kind of canonicalization

1320
00:53:33,520 --> 00:53:36,400
problems with the json especially for

1321
00:53:36,400 --> 00:53:39,359
the for the mac and hoop calculation

1322
00:53:39,359 --> 00:53:41,680
the status of the server info and peer

1323
00:53:41,680 --> 00:53:45,280
info was kind of ambiguous for me um

1324
00:53:45,280 --> 00:53:47,760
because there are some different uh

1325
00:53:47,760 --> 00:53:50,319
specifications throughout the draft

1326
00:53:50,319 --> 00:53:54,400
um maybe i read the draft wrong maybe

1327
00:53:54,400 --> 00:53:57,280
not i'm not exactly sure next slide

1328
00:53:57,280 --> 00:53:58,800
please

1329
00:53:58,800 --> 00:53:59,920
um

1330
00:53:59,920 --> 00:54:02,960
and uh the number of messages exchanged

1331
00:54:02,960 --> 00:54:04,640
seemed to be a little bit on the high

1332
00:54:04,640 --> 00:54:06,480
side um so

1333
00:54:06,480 --> 00:54:09,040
especially the the initial communication

1334
00:54:09,040 --> 00:54:11,040
where the first message has no

1335
00:54:11,040 --> 00:54:13,599
information at all and the

1336
00:54:13,599 --> 00:54:16,480
second message is just for communicating

1337
00:54:16,480 --> 00:54:19,040
the the pr id and the peer state

1338
00:54:19,040 --> 00:54:21,440
um and one small editorial net i'm quite

1339
00:54:21,440 --> 00:54:23,680
new to to the itf so i don't know if

1340
00:54:23,680 --> 00:54:25,680
this uh justifies an

1341
00:54:25,680 --> 00:54:27,200
errata

1342
00:54:27,200 --> 00:54:29,920
the version is never explicitly set to

1343
00:54:29,920 --> 00:54:32,079
this is version one they're just example

1344
00:54:32,079 --> 00:54:33,520
values given

1345
00:54:33,520 --> 00:54:36,640
um coming from that but also noticing

1346
00:54:36,640 --> 00:54:39,599
that the method itself is

1347
00:54:39,599 --> 00:54:41,520
very good and

1348
00:54:41,520 --> 00:54:44,960
i actually like the the design principle

1349
00:54:44,960 --> 00:54:48,480
i've come up with a new specification

1350
00:54:48,480 --> 00:54:50,880
eep utter user assisted trust

1351
00:54:50,880 --> 00:54:52,480
establishment if you can move to the

1352
00:54:52,480 --> 00:54:54,480
next slide

1353
00:54:54,480 --> 00:54:57,359
which basically uses the exact same

1354
00:54:57,359 --> 00:54:58,799
design principles

1355
00:54:58,799 --> 00:55:01,839
as ibnook does because they are

1356
00:55:01,839 --> 00:55:03,440
actually quite good from my point of

1357
00:55:03,440 --> 00:55:06,480
view um but

1358
00:55:06,480 --> 00:55:09,520
uses sibo as payload encoding i've seen

1359
00:55:09,520 --> 00:55:12,000
that this was already a discussion item

1360
00:55:12,000 --> 00:55:13,119
on the lists

1361
00:55:13,119 --> 00:55:16,880
and um was on the agenda for possible

1362
00:55:16,880 --> 00:55:18,839
version two of eb noob

1363
00:55:18,839 --> 00:55:22,799
um c-bar has some advantages over json

1364
00:55:22,799 --> 00:55:24,559
for example i can

1365
00:55:24,559 --> 00:55:25,440
have

1366
00:55:25,440 --> 00:55:27,839
the exact byte strings and don't need to

1367
00:55:27,839 --> 00:55:30,400
encode them base with base64

1368
00:55:30,400 --> 00:55:31,839
and for using

1369
00:55:31,839 --> 00:55:34,319
integers instead of strings as map keys

1370
00:55:34,319 --> 00:55:36,559
i have shorter messages

1371
00:55:36,559 --> 00:55:39,200
and my current specification uses a mac

1372
00:55:39,200 --> 00:55:41,680
calculation over the whole message so

1373
00:55:41,680 --> 00:55:43,440
the communication partners do not really

1374
00:55:43,440 --> 00:55:46,720
need to understand the complete

1375
00:55:46,720 --> 00:55:49,040
message or all protocol fields because

1376
00:55:49,040 --> 00:55:51,599
um that would possibly break

1377
00:55:51,599 --> 00:55:53,040
extendability

1378
00:55:53,040 --> 00:55:56,000
you can move to the next slide

1379
00:55:56,000 --> 00:55:58,319
so for the zero zero version of this

1380
00:55:58,319 --> 00:56:00,480
draft this is a very early draft version

1381
00:56:00,480 --> 00:56:03,200
i don't know if anyone has

1382
00:56:03,200 --> 00:56:05,520
read it yet um this is part of my

1383
00:56:05,520 --> 00:56:07,440
masters project so i will develop it

1384
00:56:07,440 --> 00:56:10,000
further in the next month

1385
00:56:10,000 --> 00:56:11,839
i have already made some

1386
00:56:11,839 --> 00:56:14,400
modifications i'm not exactly sure if i

1387
00:56:14,400 --> 00:56:17,920
already pushed them to the github repo

1388
00:56:17,920 --> 00:56:20,000
and i have some completely open

1389
00:56:20,000 --> 00:56:22,799
questions for example how will i specify

1390
00:56:22,799 --> 00:56:25,280
the cypher suites my idea was to

1391
00:56:25,280 --> 00:56:26,640
piggyback on

1392
00:56:26,640 --> 00:56:28,000
an existing

1393
00:56:28,000 --> 00:56:30,160
registry for example the cosi elliptic

1394
00:56:30,160 --> 00:56:32,480
curves registry but then i have the

1395
00:56:32,480 --> 00:56:35,040
problem with what hash function will i

1396
00:56:35,040 --> 00:56:36,480
use so

1397
00:56:36,480 --> 00:56:39,680
these are some of the um open questions

1398
00:56:39,680 --> 00:56:44,480
right now and uh for now my question to

1399
00:56:44,480 --> 00:56:46,960
this working group would be is this

1400
00:56:46,960 --> 00:56:48,880
something that i should continue to work

1401
00:56:48,880 --> 00:56:52,000
on is there interest here

1402
00:56:52,000 --> 00:56:54,240
okay i don't think we we have time for

1403
00:56:54,240 --> 00:56:57,359
questions but certainly uh feel free to

1404
00:56:57,359 --> 00:56:59,839
contact yan and and there could also be

1405
00:56:59,839 --> 00:57:01,599
some discussion on the list on this as

1406
00:57:01,599 --> 00:57:03,119
well

1407
00:57:03,119 --> 00:57:04,319
um

1408
00:57:04,319 --> 00:57:07,040
so i'm gonna move to next

1409
00:57:07,040 --> 00:57:12,359
uh presentation which i think is max

1410
00:57:15,040 --> 00:57:17,920
uh while i opened the last presentation

1411
00:57:17,920 --> 00:57:19,280
just uh

1412
00:57:19,280 --> 00:57:21,280
young i'm obviously interested in the

1413
00:57:21,280 --> 00:57:22,720
work so

1414
00:57:22,720 --> 00:57:24,559
we can continue the discussion on the

1415
00:57:24,559 --> 00:57:26,079
list right

1416
00:57:26,079 --> 00:57:28,240
i don't think it's max presenting it's

1417
00:57:28,240 --> 00:57:30,880
uh if you want yeah okay

1418
00:57:30,880 --> 00:57:32,079
yes

1419
00:57:32,079 --> 00:57:33,760
so thank you guys and i'm glad that i

1420
00:57:33,760 --> 00:57:36,000
still have time to present my size and i

1421
00:57:36,000 --> 00:57:38,079
also saw max join in the chat so feel

1422
00:57:38,079 --> 00:57:39,440
free to check me max if you want to

1423
00:57:39,440 --> 00:57:40,960
leave any comments or answer other

1424
00:57:40,960 --> 00:57:42,400
people's questions

1425
00:57:42,400 --> 00:57:44,960
so uh today's my presentation is about

1426
00:57:44,960 --> 00:57:47,119
you know the eep class overview and this

1427
00:57:47,119 --> 00:57:49,680
is the method uh well a nip method that

1428
00:57:49,680 --> 00:57:51,359
that's used for

1429
00:57:51,359 --> 00:57:52,480
um you know

1430
00:57:52,480 --> 00:57:54,960
secured network's credential management

1431
00:57:54,960 --> 00:57:58,240
uh next slide please thank you

1432
00:57:58,240 --> 00:58:00,880
yeah so while we're working um and

1433
00:58:00,880 --> 00:58:03,119
defining the architecture and also um

1434
00:58:03,119 --> 00:58:04,880
you know the stack language

1435
00:58:04,880 --> 00:58:07,440
of you know the sas network and we find

1436
00:58:07,440 --> 00:58:09,280
that you know automated a credential

1437
00:58:09,280 --> 00:58:12,160
management is a very important issue as

1438
00:58:12,160 --> 00:58:15,520
um it may cause user data privacy risks

1439
00:58:15,520 --> 00:58:17,440
and also the steps of services if

1440
00:58:17,440 --> 00:58:20,079
misconfigured and meanwhile being a

1441
00:58:20,079 --> 00:58:21,440
typical sense network there are

1442
00:58:21,440 --> 00:58:23,520
different types of credentials that may

1443
00:58:23,520 --> 00:58:26,000
that that need to be uh provisioned and

1444
00:58:26,000 --> 00:58:27,839
also managed and that includes the user

1445
00:58:27,839 --> 00:58:30,160
level credentials network and also

1446
00:58:30,160 --> 00:58:32,480
device levels credentials and those

1447
00:58:32,480 --> 00:58:34,000
credentials tend to be

1448
00:58:34,000 --> 00:58:36,240
forgotten and remain to be managed for

1449
00:58:36,240 --> 00:58:38,960
quite a long time due to the possible

1450
00:58:38,960 --> 00:58:41,280
operational and also administrative

1451
00:58:41,280 --> 00:58:44,000
difficulties or the costs and uh

1452
00:58:44,000 --> 00:58:46,240
meanwhile today's credentials management

1453
00:58:46,240 --> 00:58:48,640
also requires active configuration such

1454
00:58:48,640 --> 00:58:50,960
as you know ipa provision fbo just

1455
00:58:50,960 --> 00:58:53,280
provisioning all the devices and also

1456
00:58:53,280 --> 00:58:55,359
the service endpoints

1457
00:58:55,359 --> 00:58:58,880
so uh so because we notice those um um

1458
00:58:58,880 --> 00:59:01,200
you know the features and challenges of

1459
00:59:01,200 --> 00:59:03,359
the automated credential management in

1460
00:59:03,359 --> 00:59:05,280
the sas network

1461
00:59:05,280 --> 00:59:08,079
we propose leap class as a method and

1462
00:59:08,079 --> 00:59:09,839
currently the euclid's

1463
00:59:09,839 --> 00:59:12,079
protocol supports different types of

1464
00:59:12,079 --> 00:59:14,240
assessed networks already and that

1465
00:59:14,240 --> 00:59:16,400
includes the world network which is you

1466
00:59:16,400 --> 00:59:18,720
know the taxes with repair plus and also

1467
00:59:18,720 --> 00:59:20,880
the wi-fi network and also the 3gbp

1468
00:59:20,880 --> 00:59:22,799
network and the meanwhile already

1469
00:59:22,799 --> 00:59:24,960
defined the eep class with the simple

1470
00:59:24,960 --> 00:59:28,000
provisioning protocol um for the cbrsa

1471
00:59:28,000 --> 00:59:30,319
network and the documentation number is

1472
00:59:30,319 --> 00:59:35,119
ts 1003. uh next slide please thank you

1473
00:59:35,119 --> 00:59:37,280
yeah and here you can see this is just

1474
00:59:37,280 --> 00:59:40,319
offer you an example uh of where uh the

1475
00:59:40,319 --> 00:59:43,040
security is provided so between the eep

1476
00:59:43,040 --> 00:59:45,040
client and also the authenticator we

1477
00:59:45,040 --> 00:59:47,200
will rely on the max security that could

1478
00:59:47,200 --> 00:59:50,160
be the nas in the gpp or the bpi plus in

1479
00:59:50,160 --> 00:59:52,000
dances and meanwhile between

1480
00:59:52,000 --> 00:59:54,400
authenticator and also the server we

1481
00:59:54,400 --> 00:59:56,000
will rely on the application layer

1482
00:59:56,000 --> 00:59:58,319
security and that could be the tls and

1483
00:59:58,319 --> 01:00:00,720
other types of vpn protocols

1484
01:00:00,720 --> 01:00:03,839
um next slide please

1485
01:00:04,480 --> 01:00:07,200
yeah and to just to just give a quick

1486
01:00:07,200 --> 01:00:09,440
overview of the upgrades so leave class

1487
01:00:09,440 --> 01:00:11,760
just provides a non-ip-based mechanism

1488
01:00:11,760 --> 01:00:13,359
to support mythical

1489
01:00:13,359 --> 01:00:15,680
protocols credential management and it

1490
01:00:15,680 --> 01:00:19,040
will offer offered the active

1491
01:00:19,040 --> 01:00:20,720
management and also calculation of the

1492
01:00:20,720 --> 01:00:23,599
device or the network layer credentials

1493
01:00:23,599 --> 01:00:25,680
and meanwhile we try to keep the ip

1494
01:00:25,680 --> 01:00:28,559
class message flow to be simple and

1495
01:00:28,559 --> 01:00:31,280
like i said if class will just rely on

1496
01:00:31,280 --> 01:00:33,040
the security of the external

1497
01:00:33,040 --> 01:00:34,400
communication channels for

1498
01:00:34,400 --> 01:00:36,000
confidentiality

1499
01:00:36,000 --> 01:00:38,720
and basically in the eve class protocol

1500
01:00:38,720 --> 01:00:41,680
we define three phases the first phases

1501
01:00:41,680 --> 01:00:43,920
is the initial addition phases where

1502
01:00:43,920 --> 01:00:45,680
both entities will exchange the

1503
01:00:45,680 --> 01:00:47,440
credential configuration also the

1504
01:00:47,440 --> 01:00:48,880
information

1505
01:00:48,880 --> 01:00:50,799
and also the supported version and the

1506
01:00:50,799 --> 01:00:53,599
protocols and in the provisioning phase

1507
01:00:53,599 --> 01:00:55,280
both the server and the client will

1508
01:00:55,280 --> 01:00:57,920
execute the encapsulated protocol such

1509
01:00:57,920 --> 01:00:58,720
as

1510
01:00:58,720 --> 01:01:00,400
the simple provisioning protocol for

1511
01:01:00,400 --> 01:01:02,960
example and the last phase is further

1512
01:01:02,960 --> 01:01:04,480
validation where the server well

1513
01:01:04,480 --> 01:01:07,599
validates the ability for the clients to

1514
01:01:07,599 --> 01:01:10,640
correctly use the uh credentials before

1515
01:01:10,640 --> 01:01:12,640
the server claims this is a success of

1516
01:01:12,640 --> 01:01:15,119
the yip class um next slide please thank

1517
01:01:15,119 --> 01:01:17,280
you

1518
01:01:18,079 --> 01:01:20,559
yeah and this one this the this diagram

1519
01:01:20,559 --> 01:01:22,799
just simply offers you how you know the

1520
01:01:22,799 --> 01:01:24,799
message flow uh

1521
01:01:24,799 --> 01:01:26,880
between uh you know uh well in

1522
01:01:26,880 --> 01:01:29,119
industrial network cases and also the

1523
01:01:29,119 --> 01:01:31,200
world um

1524
01:01:31,200 --> 01:01:33,680
and also the world network and at the

1525
01:01:33,680 --> 01:01:36,000
above of the if class that will be the

1526
01:01:36,000 --> 01:01:38,640
protocol that is encapsulated in the eep

1527
01:01:38,640 --> 01:01:41,760
class a payload so in the first cases

1528
01:01:41,760 --> 01:01:43,280
of the three-speed network that will be

1529
01:01:43,280 --> 01:01:44,000
the

1530
01:01:44,000 --> 01:01:47,040
spp messages for example and also in the

1531
01:01:47,040 --> 01:01:48,480
second case that will be the cmp

1532
01:01:48,480 --> 01:01:50,960
messages for example and next slide

1533
01:01:50,960 --> 01:01:52,960
these

1534
01:01:52,960 --> 01:01:54,640
so the next slide just tells you that

1535
01:01:54,640 --> 01:01:56,799
yeah so this slider just tells you that

1536
01:01:56,799 --> 01:01:58,640
how the class encapsulate and also

1537
01:01:58,640 --> 01:02:01,920
decalculate the messages so epcot is

1538
01:02:01,920 --> 01:02:04,000
leave base so which means that the

1539
01:02:04,000 --> 01:02:06,240
abstraction layer is the base of the

1540
01:02:06,240 --> 01:02:08,799
class and meanwhile um the effect server

1541
01:02:08,799 --> 01:02:11,039
will germinate the yip class messages

1542
01:02:11,039 --> 01:02:13,200
and it discalculates the payloads of the

1543
01:02:13,200 --> 01:02:16,319
ep class and then forward the content of

1544
01:02:16,319 --> 01:02:18,400
the encapsulated protocol to the

1545
01:02:18,400 --> 01:02:21,039
corresponding provisioning protocols and

1546
01:02:21,039 --> 01:02:22,240
points

1547
01:02:22,240 --> 01:02:25,118
and next slide please

1548
01:02:25,920 --> 01:02:26,880
thank you

1549
01:02:26,880 --> 01:02:29,359
so uh the current status of leap class

1550
01:02:29,359 --> 01:02:32,000
is that we already have the ipads core

1551
01:02:32,000 --> 01:02:33,280
internet draft

1552
01:02:33,280 --> 01:02:36,160
available at this link and our key focus

1553
01:02:36,160 --> 01:02:38,319
now is try to offer a separate and

1554
01:02:38,319 --> 01:02:40,640
independent id drop which is the eep

1555
01:02:40,640 --> 01:02:42,319
class spp

1556
01:02:42,319 --> 01:02:44,400
id drive and this new id will just

1557
01:02:44,400 --> 01:02:46,480
describe how the snpp

1558
01:02:46,480 --> 01:02:49,359
is is used with the ubclass protocol and

1559
01:02:49,359 --> 01:02:51,119
this can be used as a template for

1560
01:02:51,119 --> 01:02:53,520
supporting other protocols encapsulation

1561
01:02:53,520 --> 01:02:55,680
within class for example the certificate

1562
01:02:55,680 --> 01:02:57,119
management protocol

1563
01:02:57,119 --> 01:02:58,640
and um so

1564
01:02:58,640 --> 01:03:01,200
our goal is to have the initial drafts

1565
01:03:01,200 --> 01:03:03,760
ready for review and comments and then

1566
01:03:03,760 --> 01:03:05,359
we will plan to resume our activities

1567
01:03:05,359 --> 01:03:07,119
within the working group and hopefully

1568
01:03:07,119 --> 01:03:09,280
we can just you know continue our

1569
01:03:09,280 --> 01:03:11,359
discussion and and

1570
01:03:11,359 --> 01:03:13,839
and with uh you know working group

1571
01:03:13,839 --> 01:03:16,000
at the next coming meeting and we are

1572
01:03:16,000 --> 01:03:17,839
also currently looking for the

1573
01:03:17,839 --> 01:03:20,240
collaborations and contributions so if

1574
01:03:20,240 --> 01:03:22,000
you are interested or if you would like

1575
01:03:22,000 --> 01:03:24,799
to offer your um points or you know

1576
01:03:24,799 --> 01:03:27,119
comments or ask any questions please

1577
01:03:27,119 --> 01:03:29,680
feel free to reach out to us and thank

1578
01:03:29,680 --> 01:03:31,280
you and that's all for you know deep

1579
01:03:31,280 --> 01:03:34,960
class presentation thanks

1580
01:03:36,240 --> 01:03:39,039
okay um i think we're just a bit over

1581
01:03:39,039 --> 01:03:41,520
time so thank you all for uh attending

1582
01:03:41,520 --> 01:03:44,079
thanks uh for the presentations everyone

1583
01:03:44,079 --> 01:03:46,400
i'm sorry next time we'll uh

1584
01:03:46,400 --> 01:03:47,839
try to get our

1585
01:03:47,839 --> 01:03:50,160
meeting times a little bit uh more in

1586
01:03:50,160 --> 01:03:52,400
line with the number of presentations

1587
01:03:52,400 --> 01:03:54,960
um and we hope to see you either online

1588
01:03:54,960 --> 01:03:58,240
or in person at the next ietf

1589
01:03:58,240 --> 01:04:00,160
and we're looking forward to everybody's

1590
01:04:00,160 --> 01:04:03,759
participation on the list thanks

1591
01:04:05,200 --> 01:04:06,559
thanks you

1592
01:04:06,559 --> 01:04:10,599
thanks everyone bye

1593
01:04:22,960 --> 01:04:25,039
you

