1
00:00:09,840 --> 00:00:12,840
uh

2
00:00:19,439 --> 00:00:22,000
all right everybody welcome to the jmap

3
00:00:22,000 --> 00:00:25,119
and extra session at iatf in vienna and

4
00:00:25,119 --> 00:00:27,119
remotely uh thanks for joining us

5
00:00:27,119 --> 00:00:28,480
there's a few people here in the room

6
00:00:28,480 --> 00:00:30,960
probably a few more remotely i'm having

7
00:00:30,960 --> 00:00:32,960
to pop up here to this microphone to

8
00:00:32,960 --> 00:00:34,880
speak because the table microphone is

9
00:00:34,880 --> 00:00:38,000
dead so i'm just going to drag this back

10
00:00:38,000 --> 00:00:40,480
down to the desk while i read through

11
00:00:40,480 --> 00:00:42,000
these initial slides and then we'll get

12
00:00:42,000 --> 00:00:43,760
straight down to business

13
00:00:43,760 --> 00:00:45,840
so this is this is the slides we've been

14
00:00:45,840 --> 00:00:47,920
given here uh we're doing both chairman

15
00:00:47,920 --> 00:00:49,760
and extra the plan is to the gym at

16
00:00:49,760 --> 00:00:52,000
first there's about 75 minutes of that

17
00:00:52,000 --> 00:00:53,680
and then about 45 minutes of extra

18
00:00:53,680 --> 00:00:55,120
according to

19
00:00:55,120 --> 00:00:56,719
what we put into the agenda but of

20
00:00:56,719 --> 00:00:59,199
course that is things will change as we

21
00:00:59,199 --> 00:01:01,199
go

22
00:01:01,199 --> 00:01:02,640
the noteworld

23
00:01:02,640 --> 00:01:04,239
i think everyone in this room has been

24
00:01:04,239 --> 00:01:06,000
in additional sessions this morning so

25
00:01:06,000 --> 00:01:07,600
you've probably already seen this for

26
00:01:07,600 --> 00:01:10,000
everyone remote everything you do here

27
00:01:10,000 --> 00:01:12,080
is covered under the note well so you

28
00:01:12,080 --> 00:01:14,479
you have to follow the iotf's processes

29
00:01:14,479 --> 00:01:17,039
and policies

30
00:01:18,400 --> 00:01:20,479
little tips for people in the room uh

31
00:01:20,479 --> 00:01:21,920
there are qr codes all over the place

32
00:01:21,920 --> 00:01:23,439
that you can scan from your mobile

33
00:01:23,439 --> 00:01:25,200
device or you can use the little mobile

34
00:01:25,200 --> 00:01:27,119
device on-site tool thing

35
00:01:27,119 --> 00:01:28,479
otherwise you can log in with the full

36
00:01:28,479 --> 00:01:30,479
meet echo client if you would prefer

37
00:01:30,479 --> 00:01:32,720
either way logging into medieco is the

38
00:01:32,720 --> 00:01:34,400
way that you indicate you're present for

39
00:01:34,400 --> 00:01:36,079
blue sheets everyone remote obviously

40
00:01:36,079 --> 00:01:38,560
has already done that

41
00:01:38,560 --> 00:01:41,360
cool um links to resources you can find

42
00:01:41,360 --> 00:01:42,960
all of this directly from data tracker

43
00:01:42,960 --> 00:01:46,479
so i won't spend long on this page

44
00:01:46,479 --> 00:01:48,799
here's the agenda for the jmap session

45
00:01:48,799 --> 00:01:50,960
so planning to start with jmf s mime

46
00:01:50,960 --> 00:01:52,799
because that's with the editors already

47
00:01:52,799 --> 00:01:54,159
then work our way through the active

48
00:01:54,159 --> 00:01:56,799
drafts with each person speaking to

49
00:01:56,799 --> 00:01:58,719
what's happening with that and finally

50
00:01:58,719 --> 00:02:00,560
review our milestones and then we will

51
00:02:00,560 --> 00:02:02,079
do the same

52
00:02:02,079 --> 00:02:04,079
for extra starting with with things that

53
00:02:04,079 --> 00:02:05,600
are further along and going back to

54
00:02:05,600 --> 00:02:08,639
things that are less far along so with

55
00:02:08,639 --> 00:02:10,800
that said any agenda bashing before we

56
00:02:10,800 --> 00:02:13,360
get started

57
00:02:15,280 --> 00:02:19,120
all right my co-chair is remote here

58
00:02:19,120 --> 00:02:20,720
jim if you want to

59
00:02:20,720 --> 00:02:22,400
take notes or or

60
00:02:22,400 --> 00:02:24,239
put snarky comments whatever you want to

61
00:02:24,239 --> 00:02:26,160
do

62
00:02:26,160 --> 00:02:28,239
that's all good

63
00:02:28,239 --> 00:02:31,120
give us a wave nice to see you

64
00:02:31,120 --> 00:02:33,200
awesome all right so the first on our

65
00:02:33,200 --> 00:02:34,640
list here is

66
00:02:34,640 --> 00:02:37,839
the s mime

67
00:02:38,879 --> 00:02:41,519
do i have any slides for that i have s

68
00:02:41,519 --> 00:02:44,160
mime signing but not for jffs anything

69
00:02:44,160 --> 00:02:46,080
to say on that

70
00:02:46,080 --> 00:02:48,239
alexi if you want to pop up

71
00:02:48,239 --> 00:02:51,120
um yeah alexey melankov uh not much

72
00:02:51,120 --> 00:02:54,319
really i think all the

73
00:02:54,319 --> 00:02:58,400
uh feedback is addressed i think um

74
00:02:58,400 --> 00:03:01,840
i copied the old niels convention for

75
00:03:01,840 --> 00:03:04,000
underscores and stars around various

76
00:03:04,000 --> 00:03:05,599
elements and

77
00:03:05,599 --> 00:03:08,879
rfc editor is asking what is this

78
00:03:08,879 --> 00:03:11,599
so i i did my best to replace it with

79
00:03:11,599 --> 00:03:14,400
the xml v3

80
00:03:14,400 --> 00:03:15,770
emphasis and

81
00:03:15,770 --> 00:03:17,280
[Music]

82
00:03:17,280 --> 00:03:18,800
strong elements

83
00:03:18,800 --> 00:03:20,560
hopefully i did it correctly and so

84
00:03:20,560 --> 00:03:22,400
there is just a few minor formatting

85
00:03:22,400 --> 00:03:24,400
things and it should be done

86
00:03:24,400 --> 00:03:27,360
maybe even uh announced this week cool

87
00:03:27,360 --> 00:03:28,560
fantastic

88
00:03:28,560 --> 00:03:29,840
thank you

89
00:03:29,840 --> 00:03:33,280
next is actually me with gmat blob

90
00:03:33,280 --> 00:03:35,280
so i'm just going to stay seated in this

91
00:03:35,280 --> 00:03:37,519
chair since there's a camera pointed

92
00:03:37,519 --> 00:03:40,319
straight at me anyway

93
00:03:41,760 --> 00:03:44,159
i put in quite a few changes based

94
00:03:44,159 --> 00:03:46,799
mainly on jim's feedback and discussion

95
00:03:46,799 --> 00:03:48,720
with neil about

96
00:03:48,720 --> 00:03:51,360
the fact that blob set was not really

97
00:03:51,360 --> 00:03:52,799
quite the right thing for it because

98
00:03:52,799 --> 00:03:55,360
there's no state for blobs and there's

99
00:03:55,360 --> 00:03:58,000
no update or destroy this only create so

100
00:03:58,000 --> 00:04:00,480
blob upload is is basically a set that

101
00:04:00,480 --> 00:04:02,400
can only do creates

102
00:04:02,400 --> 00:04:04,080
it still

103
00:04:04,080 --> 00:04:06,000
creates creation ids because you need to

104
00:04:06,000 --> 00:04:07,120
have them

105
00:04:07,120 --> 00:04:08,560
to be able to back reference which is

106
00:04:08,560 --> 00:04:10,480
the large point of doing inline blob

107
00:04:10,480 --> 00:04:11,680
creates

108
00:04:11,680 --> 00:04:14,400
i also removed the catinate

109
00:04:14,400 --> 00:04:16,320
both because what even does that mean

110
00:04:16,320 --> 00:04:18,399
nobody knows and

111
00:04:18,399 --> 00:04:20,639
because it makes it much simpler if it's

112
00:04:20,639 --> 00:04:23,360
always just a list of of bite sources

113
00:04:23,360 --> 00:04:25,919
octet sources in order that you

114
00:04:25,919 --> 00:04:28,400
append together to create a final result

115
00:04:28,400 --> 00:04:30,639
which could be zero if you're uploading

116
00:04:30,639 --> 00:04:32,320
the nothing file or it could be one or

117
00:04:32,320 --> 00:04:33,680
more

118
00:04:33,680 --> 00:04:35,040
sources

119
00:04:35,040 --> 00:04:37,120
also made the capabilities simpler you

120
00:04:37,120 --> 00:04:38,720
used to be able to

121
00:04:38,720 --> 00:04:41,360
specify a maximum applied upload size

122
00:04:41,360 --> 00:04:42,880
for blob and if you didn't specify it

123
00:04:42,880 --> 00:04:44,160
there then it should get it from the

124
00:04:44,160 --> 00:04:45,759
upload endpoint if you didn't specify

125
00:04:45,759 --> 00:04:47,680
that like not either you specify it or

126
00:04:47,680 --> 00:04:49,120
the client can just assume it can send

127
00:04:49,120 --> 00:04:51,199
what it likes and the server will reject

128
00:04:51,199 --> 00:04:54,160
if it wants to anyway

129
00:04:54,880 --> 00:04:57,120
what is that

130
00:04:57,120 --> 00:04:58,960
this is the example as you can see it

131
00:04:58,960 --> 00:05:00,479
looks beautiful

132
00:05:00,479 --> 00:05:02,320
um

133
00:05:02,320 --> 00:05:05,440
it works on my computer

134
00:05:05,440 --> 00:05:09,560
interoperability is a thing

135
00:05:11,120 --> 00:05:13,039
ah

136
00:05:13,039 --> 00:05:13,759
no

137
00:05:13,759 --> 00:05:15,039
libreoffice

138
00:05:15,039 --> 00:05:17,120
breakfast of champions

139
00:05:17,120 --> 00:05:19,680
um all right so what you can see here is

140
00:05:19,680 --> 00:05:21,600
that instead of it saying create and

141
00:05:21,600 --> 00:05:23,120
then an id

142
00:05:23,120 --> 00:05:27,360
and then just text the data as text

143
00:05:27,360 --> 00:05:30,240
it's got a data and then an array and

144
00:05:30,240 --> 00:05:34,320
then the data is text item in it s1

145
00:05:34,320 --> 00:05:36,800
hash within an array

146
00:05:36,800 --> 00:05:39,120
it does um

147
00:05:39,120 --> 00:05:41,520
are we done it's this was in working

148
00:05:41,520 --> 00:05:42,720
group last call it's a fairly

149
00:05:42,720 --> 00:05:44,240
significant change

150
00:05:44,240 --> 00:05:45,680
um

151
00:05:45,680 --> 00:05:48,240
but it's been posted for two weeks now

152
00:05:48,240 --> 00:05:51,600
and i told everyone on the list so

153
00:05:51,600 --> 00:05:53,120
if you have feedback please send

154
00:05:53,120 --> 00:05:55,600
feedback if not i'll ask jim to push the

155
00:05:55,600 --> 00:05:58,880
button and send it off to the editors

156
00:05:58,880 --> 00:06:02,160
does anyone here have feedback

157
00:06:02,160 --> 00:06:04,400
yes

158
00:06:05,039 --> 00:06:07,199
yep um feel free to

159
00:06:07,199 --> 00:06:09,360
push the button pop up whatever you want

160
00:06:09,360 --> 00:06:11,440
um just just go talk to the microphone

161
00:06:11,440 --> 00:06:12,479
it's fine

162
00:06:12,479 --> 00:06:14,080
just tell people who you are

163
00:06:14,080 --> 00:06:16,720
you don't need to do this

164
00:06:16,720 --> 00:06:17,520
oh

165
00:06:17,520 --> 00:06:19,039
there you go you beat alexi by a

166
00:06:19,039 --> 00:06:22,080
millisecond so you're first hence

167
00:06:22,080 --> 00:06:23,440
okay

168
00:06:23,440 --> 00:06:27,280
um so yeah basically um

169
00:06:27,280 --> 00:06:29,120
sorry okay

170
00:06:29,120 --> 00:06:31,039
the basic things i

171
00:06:31,039 --> 00:06:32,400
looked at was a little bit also from a

172
00:06:32,400 --> 00:06:34,720
migration perspective so i wondered um

173
00:06:34,720 --> 00:06:37,199
there is this um the way i understood

174
00:06:37,199 --> 00:06:39,280
the blob gap thing is that i could

175
00:06:39,280 --> 00:06:41,120
specify which properties to get from the

176
00:06:41,120 --> 00:06:43,840
server right you can specify uh the

177
00:06:43,840 --> 00:06:46,000
range that you want from a blob

178
00:06:46,000 --> 00:06:48,319
exactly so my question would be because

179
00:06:48,319 --> 00:06:51,280
it was not explicitly written down if i

180
00:06:51,280 --> 00:06:53,199
i think in theory i could only include

181
00:06:53,199 --> 00:06:55,599
size and would just get the size of the

182
00:06:55,599 --> 00:06:58,639
block right yes you can get the size

183
00:06:58,639 --> 00:07:00,160
of the blob and you can get a range from

184
00:07:00,160 --> 00:07:01,440
within the blob

185
00:07:01,440 --> 00:07:03,759
okay because um it might be worthwhile

186
00:07:03,759 --> 00:07:05,440
in my opinion to point that explicitly

187
00:07:05,440 --> 00:07:06,880
out because this is the only single

188
00:07:06,880 --> 00:07:08,240
operation which will only give you

189
00:07:08,240 --> 00:07:10,240
metadata from the server without having

190
00:07:10,240 --> 00:07:12,000
the server to touch the actual files on

191
00:07:12,000 --> 00:07:14,479
disk okay this is an operation typically

192
00:07:14,479 --> 00:07:16,800
we do for instance during some scanning

193
00:07:16,800 --> 00:07:19,520
kind of operation

194
00:07:19,520 --> 00:07:20,560
exactly

195
00:07:20,560 --> 00:07:24,240
and this is a reason why i would say

196
00:07:24,639 --> 00:07:26,319
also for implementers to have that in

197
00:07:26,319 --> 00:07:27,680
mind

198
00:07:27,680 --> 00:07:29,440
cool

199
00:07:29,440 --> 00:07:31,199
second related thing is actually so the

200
00:07:31,199 --> 00:07:32,560
question is would there be a case

201
00:07:32,560 --> 00:07:35,599
actually for a list or blob thing

202
00:07:35,599 --> 00:07:37,840
um in case you know you want to have a

203
00:07:37,840 --> 00:07:39,840
full migration from one mailbox to the

204
00:07:39,840 --> 00:07:40,800
other one

205
00:07:40,800 --> 00:07:42,720
obviously you could get that from the

206
00:07:42,720 --> 00:07:44,639
actual items where you get the

207
00:07:44,639 --> 00:07:47,120
references from but sometimes it's more

208
00:07:47,120 --> 00:07:49,039
handy also for some reasons for

209
00:07:49,039 --> 00:07:50,639
polarization also

210
00:07:50,639 --> 00:07:52,000
if you

211
00:07:52,000 --> 00:07:54,240
oh

212
00:07:54,720 --> 00:07:56,319
let's

213
00:07:56,319 --> 00:07:59,599
check that

214
00:07:59,599 --> 00:08:01,440
while we're stopped who was uh who was

215
00:08:01,440 --> 00:08:05,280
speaking i didn't catch your name

216
00:08:07,759 --> 00:08:09,199
still didn't hear that

217
00:08:09,199 --> 00:08:11,120
all right uh let me bring you the

218
00:08:11,120 --> 00:08:13,199
microphone here you go

219
00:08:13,199 --> 00:08:14,160
okay so

220
00:08:14,160 --> 00:08:16,800
so so this is hubble hello should i

221
00:08:16,800 --> 00:08:19,840
repeat everything or yeah

222
00:08:19,840 --> 00:08:22,000
okay i give it short so i have basically

223
00:08:22,000 --> 00:08:24,800
two remarks so first remark is um on

224
00:08:24,800 --> 00:08:26,400
blob get

225
00:08:26,400 --> 00:08:28,479
as far as i interpret

226
00:08:28,479 --> 00:08:31,520
rc it's possible to explicitly mention

227
00:08:31,520 --> 00:08:33,039
the properties to retrieve from the

228
00:08:33,039 --> 00:08:34,958
server so it should be possible for

229
00:08:34,958 --> 00:08:37,760
instance also to only retrieve the size

230
00:08:37,760 --> 00:08:39,760
which is basically a metadata and

231
00:08:39,760 --> 00:08:41,919
sometimes it comes handy to only get set

232
00:08:41,919 --> 00:08:44,159
data before deciding maybe

233
00:08:44,159 --> 00:08:46,320
you know for forgetting uh knowledge

234
00:08:46,320 --> 00:08:48,399
about the size calculating some duration

235
00:08:48,399 --> 00:08:49,680
and so on

236
00:08:49,680 --> 00:08:52,000
without having the server read the file

237
00:08:52,000 --> 00:08:53,839
physically or something like that so it

238
00:08:53,839 --> 00:08:55,120
would be

239
00:08:55,120 --> 00:08:56,720
helpful i think to point out this

240
00:08:56,720 --> 00:08:58,640
possibility also for implementers to

241
00:08:58,640 --> 00:09:00,160
make that distinction in the

242
00:09:00,160 --> 00:09:02,399
implementation to make it more efficient

243
00:09:02,399 --> 00:09:05,040
to read size only

244
00:09:05,040 --> 00:09:07,440
that was my first remark

245
00:09:07,440 --> 00:09:09,120
and the second question was if it would

246
00:09:09,120 --> 00:09:10,560
make sense to have

247
00:09:10,560 --> 00:09:13,519
something like list all blobs

248
00:09:13,519 --> 00:09:15,360
in order to have the possibility to read

249
00:09:15,360 --> 00:09:17,600
all blobs from the server in order to

250
00:09:17,600 --> 00:09:18,800
transfer them somewhere else for

251
00:09:18,800 --> 00:09:21,800
instance

252
00:09:26,959 --> 00:09:28,399
i need to come and grab this i think

253
00:09:28,399 --> 00:09:31,519
this is the one that works

254
00:09:36,959 --> 00:09:39,120
was listed by meet echo as being remote

255
00:09:39,120 --> 00:09:40,320
so

256
00:09:40,320 --> 00:09:43,279
yes because he's on the full client

257
00:09:43,279 --> 00:09:44,320
um

258
00:09:44,320 --> 00:09:45,760
medicare doesn't know if you actually

259
00:09:45,760 --> 00:09:47,120
remote just knows which client you're

260
00:09:47,120 --> 00:09:48,240
using

261
00:09:48,240 --> 00:09:50,720
i understand so uh to respond to that

262
00:09:50,720 --> 00:09:52,959
second one yes it would be possible to

263
00:09:52,959 --> 00:09:53,920
add

264
00:09:53,920 --> 00:09:56,720
a blob query i imagine um service might

265
00:09:56,720 --> 00:09:59,120
reject it but they can reject anything

266
00:09:59,120 --> 00:10:01,440
um certainly the ability to look through

267
00:10:01,440 --> 00:10:02,839
everything

268
00:10:02,839 --> 00:10:06,160
um it could be quite a lot of data

269
00:10:06,160 --> 00:10:07,440
but

270
00:10:07,440 --> 00:10:10,160
yep um okay i think alexia is next let

271
00:10:10,160 --> 00:10:13,040
me give you back the microphone

272
00:10:13,040 --> 00:10:15,760
um i'm sorry can i be the naughty child

273
00:10:15,760 --> 00:10:17,519
in the room that i haven't read the

274
00:10:17,519 --> 00:10:19,680
latest draft

275
00:10:19,680 --> 00:10:22,959
i'm not always

276
00:10:23,040 --> 00:10:26,399
okay so um

277
00:10:26,880 --> 00:10:28,880
i think taking out catenate for

278
00:10:28,880 --> 00:10:32,480
simplicity is probably fine can you just

279
00:10:32,480 --> 00:10:35,040
remind me what the use case for it was

280
00:10:35,040 --> 00:10:38,959
was it like i'm a catenate kind of case

281
00:10:38,959 --> 00:10:40,880
right

282
00:10:40,880 --> 00:10:43,120
to answer that uh what i did by taking

283
00:10:43,120 --> 00:10:45,040
out cat mate was made everything a cat

284
00:10:45,040 --> 00:10:47,120
note so instead of having a type that

285
00:10:47,120 --> 00:10:49,040
was either a single item or a type that

286
00:10:49,040 --> 00:10:51,839
was a list of items it's always a list

287
00:10:51,839 --> 00:10:53,360
and so

288
00:10:53,360 --> 00:10:55,440
you list may have only one item in it

289
00:10:55,440 --> 00:10:57,519
but instead of having a key called

290
00:10:57,519 --> 00:10:59,519
catinate that meant concatenating

291
00:10:59,519 --> 00:11:01,519
multiple of these together everything's

292
00:11:01,519 --> 00:11:03,920
just a list we good now

293
00:11:03,920 --> 00:11:06,000
hello

294
00:11:06,000 --> 00:11:06,959
hello

295
00:11:06,959 --> 00:11:09,518
i don't know

296
00:11:09,680 --> 00:11:11,279
can you hear me

297
00:11:11,279 --> 00:11:15,120
yes yes oh good okay um

298
00:11:15,120 --> 00:11:17,920
fine i i think that that's the right way

299
00:11:17,920 --> 00:11:19,519
to do it then

300
00:11:19,519 --> 00:11:22,560
perfect cool

301
00:11:25,680 --> 00:11:29,839
next on the list was neil

302
00:11:34,560 --> 00:11:36,240
what

303
00:11:36,240 --> 00:11:37,120
um

304
00:11:37,120 --> 00:11:39,519
yeah i just wanted to say i'm not sure

305
00:11:39,519 --> 00:11:42,560
about having a blog slash query and i

306
00:11:42,560 --> 00:11:44,320
don't know that's a good idea

307
00:11:44,320 --> 00:11:46,800
um

308
00:11:47,120 --> 00:11:49,360
like the point of

309
00:11:49,360 --> 00:11:51,440
this draft was

310
00:11:51,440 --> 00:11:54,959
to be able to do kind of in band um you

311
00:11:54,959 --> 00:11:58,160
know upload and download of blobs so

312
00:11:58,160 --> 00:11:59,920
it's kind of the same functionality you

313
00:11:59,920 --> 00:12:01,360
already have but

314
00:12:01,360 --> 00:12:02,639
um just without having to have a

315
00:12:02,639 --> 00:12:04,959
separate connection for those if

316
00:12:04,959 --> 00:12:06,880
for some reason that's what you needed

317
00:12:06,880 --> 00:12:08,399
uh but

318
00:12:08,399 --> 00:12:10,000
knob slash query is quite a different

319
00:12:10,000 --> 00:12:11,279
functionality

320
00:12:11,279 --> 00:12:13,279
uh and also

321
00:12:13,279 --> 00:12:15,839
is a bit weird with you know blobs not a

322
00:12:15,839 --> 00:12:18,000
base type in the same way a normal

323
00:12:18,000 --> 00:12:19,839
managed object is you you don't have

324
00:12:19,839 --> 00:12:22,880
state strings to be able to do um change

325
00:12:22,880 --> 00:12:24,399
tracking and

326
00:12:24,399 --> 00:12:26,880
stuff i don't it just seems

327
00:12:26,880 --> 00:12:29,120
a lot of extra stuff to add

328
00:12:29,120 --> 00:12:32,320
without really thinking about it

329
00:12:33,839 --> 00:12:35,600
yeah i guess to respond to that a little

330
00:12:35,600 --> 00:12:36,320
bit

331
00:12:36,320 --> 00:12:38,480
it's it's not

332
00:12:38,480 --> 00:12:41,040
going to be that they can change blobs

333
00:12:41,040 --> 00:12:43,200
are immutable uh so it's more just a

334
00:12:43,200 --> 00:12:44,959
list of all the blocks on the server

335
00:12:44,959 --> 00:12:46,160
including ones that maybe aren't

336
00:12:46,160 --> 00:12:47,839
referenced by anything

337
00:12:47,839 --> 00:12:48,959
um

338
00:12:48,959 --> 00:12:51,440
if you if you're using this as a

339
00:12:51,440 --> 00:12:53,680
replication mechanism between a system

340
00:12:53,680 --> 00:12:56,720
and a hot standby type of thing then

341
00:12:56,720 --> 00:12:59,519
doing a an rsync type situation where

342
00:12:59,519 --> 00:13:01,200
you fetch the full list and then grab

343
00:13:01,200 --> 00:13:03,200
blobs that aren't copied across would

344
00:13:03,200 --> 00:13:06,480
allow you to do a failover safely so i

345
00:13:06,480 --> 00:13:07,839
imagine that's the kind of case that's

346
00:13:07,839 --> 00:13:09,440
being looked at here

347
00:13:09,440 --> 00:13:10,240
um

348
00:13:10,240 --> 00:13:12,000
the the main issue with it is it's a lot

349
00:13:12,000 --> 00:13:14,800
of data so you'd have to page it or

350
00:13:14,800 --> 00:13:16,240
something and because there's no state

351
00:13:16,240 --> 00:13:17,600
string

352
00:13:17,600 --> 00:13:20,240
pagination becomes quite difficult there

353
00:13:20,240 --> 00:13:21,600
yeah you wouldn't know they actually can

354
00:13:21,600 --> 00:13:23,519
always find the references from the

355
00:13:23,519 --> 00:13:26,399
objects themselves

356
00:13:26,399 --> 00:13:27,839
yeah i think that should be really the

357
00:13:27,839 --> 00:13:30,560
encouraged way

358
00:13:32,720 --> 00:13:34,720
all right thank you any other comments

359
00:13:34,720 --> 00:13:38,000
on blob or shall we move on

360
00:13:39,360 --> 00:13:42,320
all right thank you i will i guess

361
00:13:42,320 --> 00:13:44,240
post responses to what's happened here

362
00:13:44,240 --> 00:13:46,800
to the mailing list um possibly do an

363
00:13:46,800 --> 00:13:50,160
updated draft with the the advice around

364
00:13:50,160 --> 00:13:52,079
fetching size from blobs

365
00:13:52,079 --> 00:13:53,680
and then asked him to do a working group

366
00:13:53,680 --> 00:13:56,399
last call again

367
00:13:56,720 --> 00:14:00,120
uh yep

368
00:14:03,600 --> 00:14:06,399
hi i'm eures baum i just have a

369
00:14:06,399 --> 00:14:08,959
question about the

370
00:14:08,959 --> 00:14:10,320
is it still

371
00:14:10,320 --> 00:14:13,360
planned to to make a new document

372
00:14:13,360 --> 00:14:16,240
based on jmr blob management extension

373
00:14:16,240 --> 00:14:19,839
for files or jmf for files or something

374
00:14:19,839 --> 00:14:22,000
still in scope of the that's

375
00:14:22,000 --> 00:14:23,839
separate from blob but self blob is just

376
00:14:23,839 --> 00:14:25,600
for creating creating the blobs which

377
00:14:25,600 --> 00:14:28,639
you would then add to files so yes that

378
00:14:28,639 --> 00:14:31,040
files is still something that that's

379
00:14:31,040 --> 00:14:32,720
that's interesting

380
00:14:32,720 --> 00:14:34,800
okay but yeah it would it would use this

381
00:14:34,800 --> 00:14:37,760
as an upload mechanism rather than

382
00:14:37,760 --> 00:14:40,000
extending this document well it could

383
00:14:40,000 --> 00:14:42,160
maybe that could also be the place to

384
00:14:42,160 --> 00:14:45,199
have like a query functionality i don't

385
00:14:45,199 --> 00:14:48,000
know if it probably will have more

386
00:14:48,000 --> 00:14:50,880
metadata associated with all

387
00:14:50,880 --> 00:14:53,680
yeah the thing is you might not have

388
00:14:53,680 --> 00:14:55,680
your calendar events and your emails

389
00:14:55,680 --> 00:14:57,440
appear as files

390
00:14:57,440 --> 00:14:58,399
via the

391
00:14:58,399 --> 00:15:01,920
files or storage node api yeah

392
00:15:01,920 --> 00:15:04,240
so you still need to be able to get the

393
00:15:04,240 --> 00:15:05,360
look at all the things that you're

394
00:15:05,360 --> 00:15:06,800
interested in to find out which blobs

395
00:15:06,800 --> 00:15:08,560
they reference okay

396
00:15:08,560 --> 00:15:11,560
cool

397
00:15:14,320 --> 00:15:17,920
oh that's not what i meant

398
00:15:18,160 --> 00:15:21,839
chair slides so um

399
00:15:22,560 --> 00:15:27,000
back on the chair slides for a second

400
00:15:27,199 --> 00:15:32,000
next on our agenda is jmap quotas

401
00:15:36,560 --> 00:15:37,519
uh

402
00:15:37,519 --> 00:15:40,800
yes hello can you hear me hello yes

403
00:15:40,800 --> 00:15:44,240
yeah yeah hello i'm renee so yeah uh i'm

404
00:15:44,240 --> 00:15:45,920
gonna uh

405
00:15:45,920 --> 00:15:48,079
present quickly i mean what's new in

406
00:15:48,079 --> 00:15:51,199
gemma quota not so much to be honest

407
00:15:51,199 --> 00:15:52,230
um

408
00:15:52,230 --> 00:15:54,959
[Music]

409
00:15:54,959 --> 00:15:57,440
do i control the slides or not

410
00:15:57,440 --> 00:15:59,279
uh you can if you share them would you

411
00:15:59,279 --> 00:16:02,000
like me to do that

412
00:16:02,079 --> 00:16:03,120
uh

413
00:16:03,120 --> 00:16:04,800
i mean you can just push it's just one

414
00:16:04,800 --> 00:16:06,320
slide after this one

415
00:16:06,320 --> 00:16:08,959
if you

416
00:16:14,800 --> 00:16:17,199
thank you

417
00:16:17,600 --> 00:16:20,320
uh so i mean there's not much changes

418
00:16:20,320 --> 00:16:22,320
lately

419
00:16:22,320 --> 00:16:25,120
but i mean thanks to neil that did a few

420
00:16:25,120 --> 00:16:27,279
more feedback

421
00:16:27,279 --> 00:16:27,610
so

422
00:16:27,610 --> 00:16:28,880
[Music]

423
00:16:28,880 --> 00:16:31,120
i think it's pretty stable now also in

424
00:16:31,120 --> 00:16:33,440
kota capability i mean yeah it was

425
00:16:33,440 --> 00:16:35,440
useless to have kota ids

426
00:16:35,440 --> 00:16:37,759
we can just fetch them with a quota

427
00:16:37,759 --> 00:16:40,959
slash get method

428
00:16:41,040 --> 00:16:42,720
for the scope and resource type as well

429
00:16:42,720 --> 00:16:44,639
i mean we don't need

430
00:16:44,639 --> 00:16:47,440
to specify the

431
00:16:47,440 --> 00:16:50,959
some custom extension i mean we can just

432
00:16:50,959 --> 00:16:54,000
keep it simple with the standard and if

433
00:16:54,000 --> 00:16:54,959
people

434
00:16:54,959 --> 00:16:55,870
want to

435
00:16:55,870 --> 00:16:57,199
[Music]

436
00:16:57,199 --> 00:16:59,040
make extensions of it i mean they can

437
00:16:59,040 --> 00:17:02,000
they can do it themselves

438
00:17:02,560 --> 00:17:05,199
and then the resource type just uh

439
00:17:05,199 --> 00:17:08,079
renaming size to octet so it's uh it's

440
00:17:08,079 --> 00:17:10,880
more clear about what we want here

441
00:17:10,880 --> 00:17:12,079
and uh

442
00:17:12,079 --> 00:17:14,880
and limit as well a bit more generic

443
00:17:14,880 --> 00:17:17,520
definition

444
00:17:17,599 --> 00:17:18,720
and uh

445
00:17:18,720 --> 00:17:20,079
that's

446
00:17:20,079 --> 00:17:22,959
that's pretty much it

447
00:17:23,119 --> 00:17:25,919
so if people have questions or maybe

448
00:17:25,919 --> 00:17:29,520
feedbacks on kuta's uh i mean yeah

449
00:17:29,520 --> 00:17:32,640
you're free to ask questions here or to

450
00:17:32,640 --> 00:17:36,160
to answer the mailing list as well

451
00:17:42,400 --> 00:17:45,400
okay

452
00:17:46,240 --> 00:17:48,880
i guess i can uh give you the handbag uh

453
00:17:48,880 --> 00:17:50,160
bronn

454
00:17:50,160 --> 00:17:53,039
yeah cool

455
00:17:54,559 --> 00:17:57,280
go ahead alexis

456
00:17:58,080 --> 00:18:00,160
yeah just uh my apologies i haven't read

457
00:18:00,160 --> 00:18:01,840
the latest document but now that the

458
00:18:01,840 --> 00:18:04,480
quarter i'm up quarter rfc is about to

459
00:18:04,480 --> 00:18:06,400
be published i i can

460
00:18:06,400 --> 00:18:08,240
you i can give full attention to your

461
00:18:08,240 --> 00:18:10,880
document to make sure it's you know

462
00:18:10,880 --> 00:18:12,640
consistent uh

463
00:18:12,640 --> 00:18:15,120
with mine or at least

464
00:18:15,120 --> 00:18:17,039
if there are differences then we discuss

465
00:18:17,039 --> 00:18:19,039
and you know agree why they are good

466
00:18:19,039 --> 00:18:20,080
thing

467
00:18:20,080 --> 00:18:22,799
okay yes basically uh i thought i

468
00:18:22,799 --> 00:18:24,480
haven't read the recent version but i'll

469
00:18:24,480 --> 00:18:26,240
have a look

470
00:18:26,240 --> 00:18:29,840
okay thank you alexa

471
00:18:32,400 --> 00:18:35,360
all right anybody else

472
00:18:39,280 --> 00:18:40,880
all right right

473
00:18:40,880 --> 00:18:43,840
thank you guys

474
00:18:49,120 --> 00:18:52,280
all right

475
00:18:56,160 --> 00:19:00,480
uh probably after your review yes

476
00:19:02,799 --> 00:19:04,720
yeah i think okay i will do i'll do a

477
00:19:04,720 --> 00:19:08,000
working group last call on this document

478
00:19:08,000 --> 00:19:09,280
and that will that will lead us to

479
00:19:09,280 --> 00:19:14,240
reviews uh next up is jmap sharing

480
00:19:17,440 --> 00:19:18,880
so

481
00:19:18,880 --> 00:19:21,679
um i guess i can share it and then oh no

482
00:19:21,679 --> 00:19:23,520
sorry being shared fantastic i do not

483
00:19:23,520 --> 00:19:25,919
need to do that

484
00:19:25,919 --> 00:19:29,520
or is that me sharing it's hard to tell

485
00:19:29,520 --> 00:19:31,760
i think it's you sharing it's me sharing

486
00:19:31,760 --> 00:19:33,679
so i hit share and it says a new slide

487
00:19:33,679 --> 00:19:35,679
deck has been shared which is not true

488
00:19:35,679 --> 00:19:37,280
it's me trying to look in here to see if

489
00:19:37,280 --> 00:19:38,960
i have any slides for james sharing and

490
00:19:38,960 --> 00:19:42,160
i do not appear to have anything

491
00:19:42,160 --> 00:19:44,080
yes sorry about that i don't have any

492
00:19:44,080 --> 00:19:45,760
sharing i just had some calendars

493
00:19:45,760 --> 00:19:48,000
sharing though

494
00:19:48,000 --> 00:19:50,640
actually um

495
00:19:50,640 --> 00:19:52,080
it's pretty complete i was just somebody

496
00:19:52,080 --> 00:19:53,600
look at that again um before this

497
00:19:53,600 --> 00:19:56,080
meeting and i think uh it needs some a

498
00:19:56,080 --> 00:19:57,840
bit of wordsmithing just to make sure

499
00:19:57,840 --> 00:19:59,840
everything's as clear as possible but it

500
00:19:59,840 --> 00:20:01,600
it you know it's reasonably short it's

501
00:20:01,600 --> 00:20:04,400
only kind of 10 pages i think in rc

502
00:20:04,400 --> 00:20:08,240
format um and

503
00:20:08,480 --> 00:20:10,240
reasonably straightforward so

504
00:20:10,240 --> 00:20:12,799
that one could possibly progress pretty

505
00:20:12,799 --> 00:20:14,240
soon um

506
00:20:14,240 --> 00:20:15,919
i don't know whether we want to wait to

507
00:20:15,919 --> 00:20:17,919
do it at the same time as

508
00:20:17,919 --> 00:20:19,919
calendars and stuff but it's not exactly

509
00:20:19,919 --> 00:20:22,000
tied to it it's kind of

510
00:20:22,000 --> 00:20:23,600
it's related but

511
00:20:23,600 --> 00:20:25,679
i think just yeah go ahead in that case

512
00:20:25,679 --> 00:20:27,360
so one more update and then working

513
00:20:27,360 --> 00:20:29,039
group last call

514
00:20:29,039 --> 00:20:31,840
yeah i think that should be fine

515
00:20:31,840 --> 00:20:32,720
cool

516
00:20:32,720 --> 00:20:34,880
i don't have any open issues or no any

517
00:20:34,880 --> 00:20:37,919
concerns particularly about that one

518
00:20:37,919 --> 00:20:39,760
yeah anybody

519
00:20:39,760 --> 00:20:41,520
have anything

520
00:20:41,520 --> 00:20:44,080
for sharing

521
00:20:45,440 --> 00:20:46,880
guys let's move on to calendars where

522
00:20:46,880 --> 00:20:48,799
i've got a few things to

523
00:20:48,799 --> 00:20:50,000
discuss

524
00:20:50,000 --> 00:20:51,520
all right i will

525
00:20:51,520 --> 00:20:55,360
find the calendar slides

526
00:20:55,600 --> 00:20:57,760
and i think i can pass control over to

527
00:20:57,760 --> 00:21:00,080
you neil

528
00:21:00,799 --> 00:21:04,320
oh yes excellent okay

529
00:21:04,320 --> 00:21:05,120
cool

530
00:21:05,120 --> 00:21:06,300
okay so um

531
00:21:06,300 --> 00:21:07,600
[Music]

532
00:21:07,600 --> 00:21:10,240
since the last meeting been quite a few

533
00:21:10,240 --> 00:21:12,640
updates uh we've got quite a bit of

534
00:21:12,640 --> 00:21:14,080
implementation experience with this now

535
00:21:14,080 --> 00:21:16,559
which has been great uh mainly for

536
00:21:16,559 --> 00:21:19,440
servicing just little edge cases which

537
00:21:19,440 --> 00:21:22,559
needed to be properly documented um

538
00:21:22,559 --> 00:21:23,919
uh

539
00:21:23,919 --> 00:21:25,679
so that's obviously why we do that

540
00:21:25,679 --> 00:21:27,600
before we try and publish this

541
00:21:27,600 --> 00:21:28,400
uh

542
00:21:28,400 --> 00:21:30,080
there are still a few questions also

543
00:21:30,080 --> 00:21:32,720
that uh came up while

544
00:21:32,720 --> 00:21:34,320
from the implantation experience so i

545
00:21:34,320 --> 00:21:36,159
just want to talk through a few of those

546
00:21:36,159 --> 00:21:39,200
and see what people in the room um have

547
00:21:39,200 --> 00:21:41,840
to say about things any thoughts

548
00:21:41,840 --> 00:21:45,280
so i'll just step through that now

549
00:21:45,280 --> 00:21:46,640
uh now the first one of these is

550
00:21:46,640 --> 00:21:47,919
actually one of those ones where when i

551
00:21:47,919 --> 00:21:49,520
was writing it up i realized that the

552
00:21:49,520 --> 00:21:51,520
answer was kind of obvious but i'll just

553
00:21:51,520 --> 00:21:53,120
talk to it briefly anyway because it's

554
00:21:53,120 --> 00:21:54,559
kind of interesting

555
00:21:54,559 --> 00:21:56,720
um

556
00:21:56,720 --> 00:22:00,240
there's a concept that i've called uh

557
00:22:00,240 --> 00:22:01,760
whether

558
00:22:01,760 --> 00:22:04,880
the server is the source of an event um

559
00:22:04,880 --> 00:22:06,320
and i wonder whether that's actually the

560
00:22:06,320 --> 00:22:08,159
best way of naming this but essentially

561
00:22:08,159 --> 00:22:10,000
this comes down to whether

562
00:22:10,000 --> 00:22:11,919
it was created on that server or whether

563
00:22:11,919 --> 00:22:14,000
it was created say on completely

564
00:22:14,000 --> 00:22:15,039
different

565
00:22:15,039 --> 00:22:16,640
server run by different company but you

566
00:22:16,640 --> 00:22:19,520
received knight message that added it

567
00:22:19,520 --> 00:22:21,200
uh and the the

568
00:22:21,200 --> 00:22:23,200
that affects

569
00:22:23,200 --> 00:22:26,480
a few things in terms of how it behaves

570
00:22:26,480 --> 00:22:27,919
um

571
00:22:27,919 --> 00:22:29,679
for example whether when you update the

572
00:22:29,679 --> 00:22:32,240
event sending an rsvp or whether it's

573
00:22:32,240 --> 00:22:33,919
sending out the invitations to all the

574
00:22:33,919 --> 00:22:35,039
other people

575
00:22:35,039 --> 00:22:36,080
uh

576
00:22:36,080 --> 00:22:38,640
and you can't just look at the apples uh

577
00:22:38,640 --> 00:22:41,440
here um

578
00:22:41,440 --> 00:22:43,360
uh because you have full permission to

579
00:22:43,360 --> 00:22:45,600
edit it it's just that actually you

580
00:22:45,600 --> 00:22:47,440
shouldn't edit most of it because you're

581
00:22:47,440 --> 00:22:49,440
not really the one that controls it and

582
00:22:49,440 --> 00:22:51,120
another update may completely blatant

583
00:22:51,120 --> 00:22:52,240
your changes

584
00:22:52,240 --> 00:22:53,679
so generally

585
00:22:53,679 --> 00:22:55,919
clients already have this concept i

586
00:22:55,919 --> 00:22:57,919
don't know what other clients call it

587
00:22:57,919 --> 00:22:59,679
necessarily uh but they look at the

588
00:22:59,679 --> 00:23:01,919
organizer to know and see is that

589
00:23:01,919 --> 00:23:03,679
someone they know is you to determine

590
00:23:03,679 --> 00:23:06,240
whether they think this is the source or

591
00:23:06,240 --> 00:23:08,880
not but that won't necessarily work in

592
00:23:08,880 --> 00:23:10,720
all circumstances because you might have

593
00:23:10,720 --> 00:23:13,919
a per event or per account reply to

594
00:23:13,919 --> 00:23:16,400
address which lets you do some nice

595
00:23:16,400 --> 00:23:18,000
other things um

596
00:23:18,000 --> 00:23:19,360
but it means it's not necessarily easy

597
00:23:19,360 --> 00:23:21,440
to work out whether

598
00:23:21,440 --> 00:23:23,280
this event is uh the source of this

599
00:23:23,280 --> 00:23:25,440
event is this server that you're on or

600
00:23:25,440 --> 00:23:26,559
somewhere else

601
00:23:26,559 --> 00:23:27,679
so

602
00:23:27,679 --> 00:23:28,880
basically the episode of this is i think

603
00:23:28,880 --> 00:23:30,240
we probably do need to add a new

604
00:23:30,240 --> 00:23:31,600
property to the event that the server

605
00:23:31,600 --> 00:23:33,600
will set when you create it for the

606
00:23:33,600 --> 00:23:34,960
server to say does it think it's the

607
00:23:34,960 --> 00:23:36,799
source that's spent or not uh so the

608
00:23:36,799 --> 00:23:38,240
client can

609
00:23:38,240 --> 00:23:40,240
change his behavior based on this

610
00:23:40,240 --> 00:23:42,400
uh so i guess first of all just

611
00:23:42,400 --> 00:23:44,799
any objections to that and also does

612
00:23:44,799 --> 00:23:46,960
anyone know of a standard naming for

613
00:23:46,960 --> 00:23:48,799
this concept or other names or who

614
00:23:48,799 --> 00:23:51,279
should i stick with sauce that's kind of

615
00:23:51,279 --> 00:23:53,919
the name for that

616
00:23:54,880 --> 00:23:57,520
you go ahead barry

617
00:23:57,760 --> 00:23:59,760
this is barry lieber uh how about his

618
00:23:59,760 --> 00:24:03,360
controller i mean does that

619
00:24:03,360 --> 00:24:06,559
ring better than source

620
00:24:07,279 --> 00:24:09,360
certainly reasonable um

621
00:24:09,360 --> 00:24:10,960
it's what i was going to say and it's

622
00:24:10,960 --> 00:24:12,640
the word you were using to describe the

623
00:24:12,640 --> 00:24:15,360
concept as you were talking about it

624
00:24:15,360 --> 00:24:17,120
right one thing i did want to add to

625
00:24:17,120 --> 00:24:18,559
this is that

626
00:24:18,559 --> 00:24:19,760
um

627
00:24:19,760 --> 00:24:22,400
let's turn myself off

628
00:24:22,400 --> 00:24:23,600
all right the one thing i wanted to add

629
00:24:23,600 --> 00:24:24,799
to it is that

630
00:24:24,799 --> 00:24:27,120
for import export you will need a way to

631
00:24:27,120 --> 00:24:29,120
set controller on the server tell the

632
00:24:29,120 --> 00:24:30,799
server you're importing this data and by

633
00:24:30,799 --> 00:24:34,400
the way you're taking over control of it

634
00:24:35,919 --> 00:24:37,360
well

635
00:24:37,360 --> 00:24:40,960
i don't know about that because so so

636
00:24:40,960 --> 00:24:42,960
it's defined at the moment in the spec

637
00:24:42,960 --> 00:24:44,559
of um

638
00:24:44,559 --> 00:24:47,279
that the server is the source if

639
00:24:47,279 --> 00:24:49,039
it will receive messages sent to the

640
00:24:49,039 --> 00:24:51,120
reply to sent to the organizer

641
00:24:51,120 --> 00:24:53,200
essentially and so it will know that

642
00:24:53,200 --> 00:24:54,480
even when you import them you won't need

643
00:24:54,480 --> 00:24:56,960
to set it explicitly uh it's just the

644
00:24:56,960 --> 00:24:58,320
client can't necessarily know that it

645
00:24:58,320 --> 00:24:59,760
doesn't know all of the addresses that

646
00:24:59,760 --> 00:25:01,120
the server might receive stuff on but

647
00:25:01,120 --> 00:25:02,640
the server does so i don't know you do

648
00:25:02,640 --> 00:25:04,320
need that to import

649
00:25:04,320 --> 00:25:06,320
it's just a matter of saying that

650
00:25:06,320 --> 00:25:08,320
there has to be some way to set it on

651
00:25:08,320 --> 00:25:12,080
the server but not necessarily via jmap

652
00:25:12,080 --> 00:25:14,720
i guess yeah the server has to know

653
00:25:14,720 --> 00:25:17,600
what it can receive on but yeah i don't

654
00:25:17,600 --> 00:25:18,960
i don't think it needs anything to dream

655
00:25:18,960 --> 00:25:20,240
up particularly for that

656
00:25:20,240 --> 00:25:21,679
that's more about identity management

657
00:25:21,679 --> 00:25:22,960
really

658
00:25:22,960 --> 00:25:26,159
cool that's read-only but mutable

659
00:25:26,159 --> 00:25:28,159
it's it's read-only but yeah i guess

660
00:25:28,159 --> 00:25:29,760
potentially mutable by the survey if it

661
00:25:29,760 --> 00:25:32,000
changes yeah who what which stresses it

662
00:25:32,000 --> 00:25:33,440
receives from my suddenly inside

663
00:25:33,440 --> 00:25:34,559
actually i am now the source of this

664
00:25:34,559 --> 00:25:37,200
event i guess

665
00:25:37,200 --> 00:25:38,159
cool

666
00:25:38,159 --> 00:25:41,159
joris

667
00:25:47,039 --> 00:25:48,480
so i just wanted to

668
00:25:48,480 --> 00:25:51,279
um state that i also added a

669
00:25:51,279 --> 00:25:53,600
source property for jmf for tasks

670
00:25:53,600 --> 00:25:55,279
currently so

671
00:25:55,279 --> 00:25:58,000
this this is supposed to signal if a

672
00:25:58,000 --> 00:26:00,000
task comes from a

673
00:26:00,000 --> 00:26:02,880
was automatically created from a mail or

674
00:26:02,880 --> 00:26:05,039
originated from a web application or a

675
00:26:05,039 --> 00:26:06,720
mobile application

676
00:26:06,720 --> 00:26:09,919
so just to put that out there that it

677
00:26:09,919 --> 00:26:12,320
might be confusing to have is source and

678
00:26:12,320 --> 00:26:14,080
source at the same time

679
00:26:14,080 --> 00:26:16,000
with two semantic different semantic

680
00:26:16,000 --> 00:26:17,840
meanings i

681
00:26:17,840 --> 00:26:19,679
i've certainly thought i wonder if like

682
00:26:19,679 --> 00:26:21,760
his remote event or something is you

683
00:26:21,760 --> 00:26:23,039
know switched around the thing rather

684
00:26:23,039 --> 00:26:25,440
than use controller i don't know

685
00:26:25,440 --> 00:26:27,200
maybe people can think about it in email

686
00:26:27,200 --> 00:26:28,640
list if they have other thoughts but

687
00:26:28,640 --> 00:26:30,080
yeah it looks like source is not the

688
00:26:30,080 --> 00:26:32,000
best term to describe here so we should

689
00:26:32,000 --> 00:26:33,600
come up with

690
00:26:33,600 --> 00:26:35,360
something better because it turns out to

691
00:26:35,360 --> 00:26:37,360
be a reasonably important concept that's

692
00:26:37,360 --> 00:26:39,679
referenced a few times in respect for

693
00:26:39,679 --> 00:26:42,320
different behaviors

694
00:26:42,320 --> 00:26:43,440
here

695
00:26:43,440 --> 00:26:45,760
yep that seems fair okay let's move on

696
00:26:45,760 --> 00:26:47,760
call the property aquamarine and

697
00:26:47,760 --> 00:26:50,400
everyone more

698
00:26:50,840 --> 00:26:53,279
okay um

699
00:26:53,279 --> 00:26:55,360
so the next question is back about about

700
00:26:55,360 --> 00:26:57,840
default calendars uh and

701
00:26:57,840 --> 00:26:59,760
you know first of all

702
00:26:59,760 --> 00:27:01,279
does there have to be one for each

703
00:27:01,279 --> 00:27:02,559
account um

704
00:27:02,559 --> 00:27:03,440
or

705
00:27:03,440 --> 00:27:05,440
can there be none set which basically

706
00:27:05,440 --> 00:27:06,720
means at that point you can pick

707
00:27:06,720 --> 00:27:07,679
whichever

708
00:27:07,679 --> 00:27:09,840
calendar you want if you need one um

709
00:27:09,840 --> 00:27:11,919
like to add an incoming invitation to

710
00:27:11,919 --> 00:27:13,200
for example

711
00:27:13,200 --> 00:27:14,559
um

712
00:27:14,559 --> 00:27:15,679
we

713
00:27:15,679 --> 00:27:17,200
the expected company says no which is

714
00:27:17,200 --> 00:27:19,360
based on our previous discussion uh

715
00:27:19,360 --> 00:27:21,760
because as i recall

716
00:27:21,760 --> 00:27:22,799
just because

717
00:27:22,799 --> 00:27:24,159
it's like

718
00:27:24,159 --> 00:27:26,559
you're picking one at random anyway so

719
00:27:26,559 --> 00:27:28,480
you know why why bother just say

720
00:27:28,480 --> 00:27:29,840
explicitly i didn't pick what i don't

721
00:27:29,840 --> 00:27:32,399
know which one is default but it but cal

722
00:27:32,399 --> 00:27:34,720
dev mandates one it uh i think ken

723
00:27:34,720 --> 00:27:36,640
reminded me so

724
00:27:36,640 --> 00:27:39,120
perhaps we should match uh so anyone got

725
00:27:39,120 --> 00:27:41,200
thoughts on that and then also it is

726
00:27:41,200 --> 00:27:43,600
mandated like what happens if

727
00:27:43,600 --> 00:27:45,279
in various education i'm not sure

728
00:27:45,279 --> 00:27:46,640
whether it's for this or the previous

729
00:27:46,640 --> 00:27:49,840
thing but jim go ahead

730
00:27:54,559 --> 00:27:58,640
the end of the source discussion

731
00:27:58,640 --> 00:28:00,880
um i haven't had a chance to think about

732
00:28:00,880 --> 00:28:01,760
this

733
00:28:01,760 --> 00:28:05,360
very much but is there a

734
00:28:05,520 --> 00:28:07,440
by the way i've got a long echo that i'm

735
00:28:07,440 --> 00:28:09,279
hearing so that's why i'm

736
00:28:09,279 --> 00:28:11,200
uh talking a little bit in here i'll try

737
00:28:11,200 --> 00:28:13,760
to ignore it

738
00:28:14,000 --> 00:28:15,200
but is there

739
00:28:15,200 --> 00:28:18,320
any sort of a security aspect to who has

740
00:28:18,320 --> 00:28:20,000
the right to send

741
00:28:20,000 --> 00:28:21,200
um

742
00:28:21,200 --> 00:28:24,240
uh an update to an event

743
00:28:24,240 --> 00:28:26,399
and

744
00:28:26,399 --> 00:28:28,480
uh is there is there a question of

745
00:28:28,480 --> 00:28:31,919
whether the gmap server can be trusted

746
00:28:31,919 --> 00:28:34,960
to not uh change that that property

747
00:28:34,960 --> 00:28:37,760
inappropriately

748
00:28:37,760 --> 00:28:39,440
so this is talking about the source

749
00:28:39,440 --> 00:28:42,080
stuff again i presume um

750
00:28:42,080 --> 00:28:43,200
i think

751
00:28:43,200 --> 00:28:45,760
yeah you you

752
00:28:45,760 --> 00:28:47,840
we presume that you trust your own

753
00:28:47,840 --> 00:28:50,640
calendar server um to not do something

754
00:28:50,640 --> 00:28:52,880
deliberately malicious um because it has

755
00:28:52,880 --> 00:28:57,640
all of your data already anyway uh

756
00:28:58,799 --> 00:29:02,480
um and in terms of uh processing the

757
00:29:02,480 --> 00:29:04,080
updates and the security bits around

758
00:29:04,080 --> 00:29:05,360
that whether you should accept like a

759
00:29:05,360 --> 00:29:06,960
change of stuff that's kind of out of

760
00:29:06,960 --> 00:29:11,039
scope of jmap that's part of it really

761
00:29:11,039 --> 00:29:14,080
okay thanks

762
00:29:14,480 --> 00:29:15,679
barry

763
00:29:15,679 --> 00:29:18,159
that's barry lieber this this back to

764
00:29:18,159 --> 00:29:19,919
the default calendar thing this seems to

765
00:29:19,919 --> 00:29:23,039
be analogous to the imap inbox where

766
00:29:23,039 --> 00:29:25,679
imap specifies things that um you have

767
00:29:25,679 --> 00:29:27,440
you have to have an inbox

768
00:29:27,440 --> 00:29:30,720
if you delete it it gets recreated uh

769
00:29:30,720 --> 00:29:33,440
with inbox if you rename it

770
00:29:33,440 --> 00:29:35,760
then a new one is created with the name

771
00:29:35,760 --> 00:29:37,360
inbox you probably don't want that for

772
00:29:37,360 --> 00:29:38,399
this but

773
00:29:38,399 --> 00:29:40,159
maybe you want to do the same kind of

774
00:29:40,159 --> 00:29:44,399
thing with this as imap does with inbox

775
00:29:47,120 --> 00:29:48,880
so basically alexa just said so

776
00:29:48,880 --> 00:29:50,399
basically you're just say you're saying

777
00:29:50,399 --> 00:29:52,480
yes to default and i'm saying yeah

778
00:29:52,480 --> 00:29:54,720
probably especially if caldev

779
00:29:54,720 --> 00:29:57,039
requires it it would be useful to have

780
00:29:57,039 --> 00:29:58,320
that

781
00:29:58,320 --> 00:30:01,279
specified as some uh standard behavior

782
00:30:01,279 --> 00:30:05,039
in in jmap calendar

783
00:30:05,200 --> 00:30:06,399
okay

784
00:30:06,399 --> 00:30:09,120
uh ken richardson yeah um i'm

785
00:30:09,120 --> 00:30:11,039
clearly in favor of default calendar as

786
00:30:11,039 --> 00:30:13,600
it's made by caldev and if you've got a

787
00:30:13,600 --> 00:30:15,200
server that's automatically processing

788
00:30:15,200 --> 00:30:16,880
itip whether it's

789
00:30:16,880 --> 00:30:19,679
implicit scheduling or or via imep

790
00:30:19,679 --> 00:30:22,480
you need to put new invites someplace so

791
00:30:22,480 --> 00:30:24,559
if the user expects to receive invites

792
00:30:24,559 --> 00:30:26,320
they need a calendar and they need to

793
00:30:26,320 --> 00:30:28,080
tell us which one it's going to go to

794
00:30:28,080 --> 00:30:29,440
and if you've only got one calendar well

795
00:30:29,440 --> 00:30:30,960
then that's the default if you've got

796
00:30:30,960 --> 00:30:32,240
more then you tell us which one it's

797
00:30:32,240 --> 00:30:33,840
going to be but i think we need to have

798
00:30:33,840 --> 00:30:35,360
at least one calendar if they expect to

799
00:30:35,360 --> 00:30:38,240
have scheduling work

800
00:30:38,240 --> 00:30:39,600
so does that mean there must always be

801
00:30:39,600 --> 00:30:41,440
at least one calendar in the account i

802
00:30:41,440 --> 00:30:44,159
presume which is fine i guess and also

803
00:30:44,159 --> 00:30:46,559
yes i'd say yes so cause yes because if

804
00:30:46,559 --> 00:30:48,000
you don't have any calendars what's the

805
00:30:48,000 --> 00:30:50,399
point of

806
00:30:53,600 --> 00:30:54,720
so then what happens if you try and

807
00:30:54,720 --> 00:30:56,720
delete the default i think is the next

808
00:30:56,720 --> 00:30:58,559
question i'd say you'd have to create a

809
00:30:58,559 --> 00:31:00,640
new default before you delete the

810
00:31:00,640 --> 00:31:02,399
existing one you just can't if it's

811
00:31:02,399 --> 00:31:04,080
currently the default if it's the only

812
00:31:04,080 --> 00:31:06,240
calendar you have i'd say we we prohibit

813
00:31:06,240 --> 00:31:09,279
you from deleting it

814
00:31:09,760 --> 00:31:11,679
and barry gives me a thumbs up so he's

815
00:31:11,679 --> 00:31:13,120
in agreement with that

816
00:31:13,120 --> 00:31:14,799
and i guess well i if you look at the

817
00:31:14,799 --> 00:31:16,559
slide then you also get questions of are

818
00:31:16,559 --> 00:31:18,240
there other conditions like what if this

819
00:31:18,240 --> 00:31:19,760
is a read-only calendar so i can't

820
00:31:19,760 --> 00:31:21,360
actually add stuff to it so i have a

821
00:31:21,360 --> 00:31:23,440
calendar but it's not

822
00:31:23,440 --> 00:31:25,440
sufficient to be my default calendar if

823
00:31:25,440 --> 00:31:27,519
that makes sense do we have restrictions

824
00:31:27,519 --> 00:31:30,240
on what can be said

825
00:31:30,720 --> 00:31:32,480
that's why i said it's analogous to imap

826
00:31:32,480 --> 00:31:35,679
in imap the inbox can't be read only and

827
00:31:35,679 --> 00:31:37,360
um

828
00:31:37,360 --> 00:31:39,600
like i said

829
00:31:39,600 --> 00:31:42,559
you can't fail to have an inbox

830
00:31:42,559 --> 00:31:45,559
yeah

831
00:31:50,480 --> 00:31:52,880
yes

832
00:31:53,440 --> 00:31:55,279
so this is kind of again based on what

833
00:31:55,279 --> 00:31:57,679
pete and barry just discussed

834
00:31:57,679 --> 00:32:00,640
perhaps the what we do is you do not

835
00:32:00,640 --> 00:32:02,720
have to have a default calendar

836
00:32:02,720 --> 00:32:04,559
but in that case you aren't able to

837
00:32:04,559 --> 00:32:05,760
schedule

838
00:32:05,760 --> 00:32:07,760
yeah if all you want are read-only

839
00:32:07,760 --> 00:32:09,440
calendars because your subscriptions

840
00:32:09,440 --> 00:32:11,360
fine but don't expect invites to go

841
00:32:11,360 --> 00:32:12,559
anywhere because you've got no place to

842
00:32:12,559 --> 00:32:15,200
put them

843
00:32:15,200 --> 00:32:17,760
as pete said it's like the inbox right

844
00:32:17,760 --> 00:32:18,799
if you don't have an inbox you're not

845
00:32:18,799 --> 00:32:20,080
receiving email but you can certainly

846
00:32:20,080 --> 00:32:21,760
read mail on other mailboxes there are

847
00:32:21,760 --> 00:32:23,279
certainly servers where you cannot have

848
00:32:23,279 --> 00:32:25,039
an inbox and then when mail arrives it

849
00:32:25,039 --> 00:32:27,600
gets auto created and then the mail put

850
00:32:27,600 --> 00:32:29,918
in it

851
00:32:31,120 --> 00:32:34,080
this is robert speaking so um

852
00:32:34,080 --> 00:32:36,880
i have to say i don't care so much if a

853
00:32:36,880 --> 00:32:39,279
default calendar must be specified so i

854
00:32:39,279 --> 00:32:41,679
find it perfectly reasonable that the

855
00:32:41,679 --> 00:32:43,519
default calendar id and the preferences

856
00:32:43,519 --> 00:32:45,600
might be null but it of course must

857
00:32:45,600 --> 00:32:48,000
still be then we could still state that

858
00:32:48,000 --> 00:32:50,080
servers might then pick whatever

859
00:32:50,080 --> 00:32:51,679
calendar they want to

860
00:32:51,679 --> 00:32:52,640
put an

861
00:32:52,640 --> 00:32:54,880
invite into

862
00:32:54,880 --> 00:32:57,360
and if there is no calendar as we said

863
00:32:57,360 --> 00:32:59,200
has been said before while then

864
00:32:59,200 --> 00:33:01,600
there is no no invent can't be delivered

865
00:33:01,600 --> 00:33:03,279
at all anyway

866
00:33:03,279 --> 00:33:05,360
um but separate from the fact if you can

867
00:33:05,360 --> 00:33:07,360
set or cannot set the default calendar

868
00:33:07,360 --> 00:33:08,720
id to null

869
00:33:08,720 --> 00:33:10,320
um what we are doing in our current

870
00:33:10,320 --> 00:33:12,399
implementation currently we allow to

871
00:33:12,399 --> 00:33:15,360
delete the default calendar but we

872
00:33:15,360 --> 00:33:18,159
immediately pick a new one so um this

873
00:33:18,159 --> 00:33:19,840
might also be stated in this back then

874
00:33:19,840 --> 00:33:23,120
that the server might pick a new

875
00:33:23,120 --> 00:33:25,279
default calendar immediately after they

876
00:33:25,279 --> 00:33:27,200
destroy or implied not that depends on

877
00:33:27,200 --> 00:33:29,039
the implementation

878
00:33:29,039 --> 00:33:29,919
um

879
00:33:29,919 --> 00:33:31,760
yeah actually that sounds quite

880
00:33:31,760 --> 00:33:33,440
reasonable to me because that that's

881
00:33:33,440 --> 00:33:35,120
yeah let's deserve it to decide it

882
00:33:35,120 --> 00:33:36,240
doesn't actually have

883
00:33:36,240 --> 00:33:37,919
that's interoperable you know regardless

884
00:33:37,919 --> 00:33:39,200
or whatever does because it tells the

885
00:33:39,200 --> 00:33:40,399
client what it did

886
00:33:40,399 --> 00:33:42,240
yeah then i think it might make sense if

887
00:33:42,240 --> 00:33:43,919
we decide on that to put it also in the

888
00:33:43,919 --> 00:33:44,720
spec

889
00:33:44,720 --> 00:33:46,640
where it's currently saying that

890
00:33:46,640 --> 00:33:49,600
um it's possible to destroy default and

891
00:33:49,600 --> 00:33:51,200
then it's set to null

892
00:33:51,200 --> 00:33:53,600
still make clear that the server might

893
00:33:53,600 --> 00:33:56,480
choose what what it seems appropriate in

894
00:33:56,480 --> 00:33:58,799
that situation

895
00:33:58,799 --> 00:34:01,039
and that being said for participant

896
00:34:01,039 --> 00:34:03,440
identities um the

897
00:34:03,440 --> 00:34:06,000
which we which we mapped to the caldf uh

898
00:34:06,000 --> 00:34:09,679
calendar user user address set property

899
00:34:09,679 --> 00:34:11,119
i think these should these two

900
00:34:11,119 --> 00:34:13,440
properties in cal def and jmap should be

901
00:34:13,440 --> 00:34:14,480
aligned

902
00:34:14,480 --> 00:34:18,399
um but the califs back in 6638

903
00:34:18,399 --> 00:34:21,520
definitely says that if the if the

904
00:34:21,520 --> 00:34:24,079
property is destroyed in caldev

905
00:34:24,079 --> 00:34:26,399
then this disabled scheduling

906
00:34:26,399 --> 00:34:29,679
for that um account so

907
00:34:29,679 --> 00:34:31,918
uh in that regard it's in that regard it

908
00:34:31,918 --> 00:34:33,359
speaks to me that the participant

909
00:34:33,359 --> 00:34:37,119
identities in gmap

910
00:34:37,199 --> 00:34:39,280
must be non-empty

911
00:34:39,280 --> 00:34:41,760
as well

912
00:34:43,520 --> 00:34:45,760
i think it shouldn't implement the magic

913
00:34:45,760 --> 00:34:46,960
that if there are no participant

914
00:34:46,960 --> 00:34:49,679
identities then scheduling is off

915
00:34:49,679 --> 00:34:50,560
if

916
00:34:50,560 --> 00:34:52,719
i would have thought

917
00:34:52,719 --> 00:34:54,399
probably the server well the server

918
00:34:54,399 --> 00:34:55,918
obviously is allowed to reject anytime

919
00:34:55,918 --> 00:34:58,079
do you try and destroy stuff and like i

920
00:34:58,079 --> 00:34:59,520
would imagine it won't let you destroy

921
00:34:59,520 --> 00:35:01,280
whatever your you know your username

922
00:35:01,280 --> 00:35:03,040
identity for example you might let you

923
00:35:03,040 --> 00:35:05,520
destroy extra ones you've added but not

924
00:35:05,520 --> 00:35:08,400
yes um what i'm trying to say is also

925
00:35:08,400 --> 00:35:09,599
that

926
00:35:09,599 --> 00:35:11,680
it shouldn't be a magic by having or

927
00:35:11,680 --> 00:35:14,720
having not participant identities to

928
00:35:14,720 --> 00:35:18,079
allow scheduling for an account or not

929
00:35:18,079 --> 00:35:19,440
if if that's

930
00:35:19,440 --> 00:35:21,760
if we want to disable scheduling for an

931
00:35:21,760 --> 00:35:23,680
account there should be some

932
00:35:23,680 --> 00:35:27,040
appropriate flag yeah yeah whatever yeah

933
00:35:27,040 --> 00:35:30,599
yeah all right

934
00:35:31,599 --> 00:35:34,320
okay uh alexi uh very quick note maybe

935
00:35:34,320 --> 00:35:37,119
it was sort of overtaken by events but

936
00:35:37,119 --> 00:35:39,359
then the question i would ask is

937
00:35:39,359 --> 00:35:41,359
what are the benefits of not having a

938
00:35:41,359 --> 00:35:44,759
default calendar

939
00:35:45,200 --> 00:35:46,960
maybe answer to this question will help

940
00:35:46,960 --> 00:35:47,680
you

941
00:35:47,680 --> 00:35:50,640
decide i don't know

942
00:35:51,119 --> 00:35:53,760
yeah it's more kind of a

943
00:35:53,760 --> 00:35:57,440
data consistency thing it's hard to

944
00:35:57,440 --> 00:35:59,920
you know if if you say you have to you

945
00:35:59,920 --> 00:36:01,280
can't delete the default one so you have

946
00:36:01,280 --> 00:36:02,720
to you have to end up doing this dance

947
00:36:02,720 --> 00:36:04,640
where you create a new one assign a

948
00:36:04,640 --> 00:36:07,598
different default then

949
00:36:07,920 --> 00:36:10,640
it's it's easier i think if you can

950
00:36:10,640 --> 00:36:11,920
allow it to delete delete the default

951
00:36:11,920 --> 00:36:13,040
but then there's the question of what

952
00:36:13,040 --> 00:36:15,119
happens at that point basically and

953
00:36:15,119 --> 00:36:17,040
that's where i specify that and actually

954
00:36:17,040 --> 00:36:18,000
from

955
00:36:18,000 --> 00:36:20,000
my map experience there are certain

956
00:36:20,000 --> 00:36:22,480
operations that allows

957
00:36:22,480 --> 00:36:24,720
allow multiple outcomes and it's

958
00:36:24,720 --> 00:36:26,480
actually having multiple outcomes is

959
00:36:26,480 --> 00:36:28,880
more difficult to code for clients so

960
00:36:28,880 --> 00:36:31,280
if you can decide on one then

961
00:36:31,280 --> 00:36:33,760
you either don't allow deletion or

962
00:36:33,760 --> 00:36:35,440
if it's deleted it can always be

963
00:36:35,440 --> 00:36:37,599
recreated unless there are reasons not

964
00:36:37,599 --> 00:36:39,200
to um

965
00:36:39,200 --> 00:36:41,200
but if you can't you know the two

966
00:36:41,200 --> 00:36:43,520
choices might be okay

967
00:36:43,520 --> 00:36:45,760
okay yeah the cases like undo are

968
00:36:45,760 --> 00:36:47,359
particularly messy if the server starts

969
00:36:47,359 --> 00:36:48,640
doing magic

970
00:36:48,640 --> 00:36:51,040
under the hood and you have to

971
00:36:51,040 --> 00:36:51,920
work out

972
00:36:51,920 --> 00:36:53,359
that magic if you accidentally deleted

973
00:36:53,359 --> 00:36:54,800
your last calendar and then you've got a

974
00:36:54,800 --> 00:36:57,040
whole mess to clean up and the offline

975
00:36:57,040 --> 00:36:58,480
case where you've you've scheduled a

976
00:36:58,480 --> 00:37:00,079
bunch of operations

977
00:37:00,079 --> 00:37:01,359
you don't necessarily want all the

978
00:37:01,359 --> 00:37:02,960
default calendars changed meanwhile and

979
00:37:02,960 --> 00:37:06,400
so one of my operations failed

980
00:37:06,400 --> 00:37:09,119
anyway

981
00:37:09,119 --> 00:37:12,800
all right um this is santiago again um

982
00:37:12,800 --> 00:37:14,480
one more point so i think i'm also in

983
00:37:14,480 --> 00:37:15,920
favor of having definitely a default

984
00:37:15,920 --> 00:37:17,359
calendar because i'm not aware of a

985
00:37:17,359 --> 00:37:18,880
single other system

986
00:37:18,880 --> 00:37:20,800
that doesn't have that so some systems

987
00:37:20,800 --> 00:37:23,119
even only have the default calendar

988
00:37:23,119 --> 00:37:25,599
groupware systems and so on um i also

989
00:37:25,599 --> 00:37:28,000
wonder um you know from a ui perspective

990
00:37:28,000 --> 00:37:30,079
if there wouldn't be anyone what would

991
00:37:30,079 --> 00:37:32,720
the ui display would it you know need

992
00:37:32,720 --> 00:37:34,400
the user to create a calendar first i

993
00:37:34,400 --> 00:37:36,640
think that would be also very weird

994
00:37:36,640 --> 00:37:38,720
um and another point it was mentioned

995
00:37:38,720 --> 00:37:41,440
before if i delete the default calendar

996
00:37:41,440 --> 00:37:43,040
some other calendar might be promoted to

997
00:37:43,040 --> 00:37:45,200
be the default calendar i just want to

998
00:37:45,200 --> 00:37:48,160
raise a point that um typically the

999
00:37:48,160 --> 00:37:49,839
default calendar in most systems since

1000
00:37:49,839 --> 00:37:51,359
it pre-exist doesn't have a particular

1001
00:37:51,359 --> 00:37:52,240
name

1002
00:37:52,240 --> 00:37:54,400
so some systems give it a

1003
00:37:54,400 --> 00:37:55,680
you know

1004
00:37:55,680 --> 00:37:58,640
some weird name like default or the

1005
00:37:58,640 --> 00:38:00,240
identity of the user or something like

1006
00:38:00,240 --> 00:38:01,599
that

1007
00:38:01,599 --> 00:38:04,160
and so some systems might get confused

1008
00:38:04,160 --> 00:38:06,400
if the default calendar after such and

1009
00:38:06,400 --> 00:38:08,160
delete operation and another calendar is

1010
00:38:08,160 --> 00:38:10,480
promoted to be default has now a proper

1011
00:38:10,480 --> 00:38:11,599
name

1012
00:38:11,599 --> 00:38:13,440
so there might also be internet internet

1013
00:38:13,440 --> 00:38:15,520
generalization issues we set because uis

1014
00:38:15,520 --> 00:38:17,839
will have the default calendar displayed

1015
00:38:17,839 --> 00:38:19,839
typically with a predefined string in

1016
00:38:19,839 --> 00:38:22,079
the system and not with a user given

1017
00:38:22,079 --> 00:38:22,880
name

1018
00:38:22,880 --> 00:38:24,880
and that might be broken if you promote

1019
00:38:24,880 --> 00:38:25,920
another calendar this would be the

1020
00:38:25,920 --> 00:38:28,000
default calendar so the case i'm making

1021
00:38:28,000 --> 00:38:29,920
here is probably not being able to

1022
00:38:29,920 --> 00:38:32,000
delete the default calendar and make

1023
00:38:32,000 --> 00:38:35,119
another calendar as a default calendar

1024
00:38:35,119 --> 00:38:36,960
i

1025
00:38:36,960 --> 00:38:38,960
yeah i don't entirely agree with that

1026
00:38:38,960 --> 00:38:39,680
yeah

1027
00:38:39,680 --> 00:38:42,320
yeah yeah i i i think i understood that

1028
00:38:42,320 --> 00:38:43,920
um

1029
00:38:43,920 --> 00:38:44,720
like

1030
00:38:44,720 --> 00:38:47,359
you can choose

1031
00:38:47,359 --> 00:38:49,359
a different calendar to be your default

1032
00:38:49,359 --> 00:38:51,040
like in caldave and it can have a

1033
00:38:51,040 --> 00:38:52,880
arbitrary name we don't you know i don't

1034
00:38:52,880 --> 00:38:54,720
think any client just shows the word

1035
00:38:54,720 --> 00:38:57,200
default

1036
00:38:58,960 --> 00:39:01,119
server can always um if it has yeah

1037
00:39:01,119 --> 00:39:02,560
exactly i mean it's not a strong point

1038
00:39:02,560 --> 00:39:04,240
but certainly it's something from my

1039
00:39:04,240 --> 00:39:06,800
experience with clients that might

1040
00:39:06,800 --> 00:39:08,400
lead to weird results even if it's

1041
00:39:08,400 --> 00:39:10,240
specified

1042
00:39:10,240 --> 00:39:12,479
yeah

1043
00:39:13,119 --> 00:39:15,440
camera just said again um i can't speak

1044
00:39:15,440 --> 00:39:18,079
to the interrupt

1045
00:39:18,079 --> 00:39:19,599
potential problems that hans york just

1046
00:39:19,599 --> 00:39:21,920
brought up but to try to clarify my

1047
00:39:21,920 --> 00:39:23,599
previous thoughts on this and wrap

1048
00:39:23,599 --> 00:39:25,599
things up so

1049
00:39:25,599 --> 00:39:27,839
my opinion is if the user expects to

1050
00:39:27,839 --> 00:39:29,119
have scheduling they need at least one

1051
00:39:29,119 --> 00:39:30,720
read write calendar

1052
00:39:30,720 --> 00:39:32,960
the default calendar essentially is a

1053
00:39:32,960 --> 00:39:34,480
user

1054
00:39:34,480 --> 00:39:36,079
option that if they have multiple read

1055
00:39:36,079 --> 00:39:37,359
write calendars

1056
00:39:37,359 --> 00:39:38,720
they tell you which one they would like

1057
00:39:38,720 --> 00:39:40,800
new invites to go into

1058
00:39:40,800 --> 00:39:43,280
it's not a mandatory thing on the server

1059
00:39:43,280 --> 00:39:44,960
it's a user preferences this is where i

1060
00:39:44,960 --> 00:39:46,880
want to see all my new invites

1061
00:39:46,880 --> 00:39:49,119
that's really all it is in cal dev

1062
00:39:49,119 --> 00:39:51,040
um and i don't think we should make it

1063
00:39:51,040 --> 00:39:52,720
more than what that is

1064
00:39:52,720 --> 00:39:55,040
in gmat

1065
00:39:55,040 --> 00:39:56,960
so it's it's a user preference if they

1066
00:39:56,960 --> 00:39:58,480
want scheduling you have to have at

1067
00:39:58,480 --> 00:39:59,839
least one read write i don't care if you

1068
00:39:59,839 --> 00:40:01,440
call it default or not because it's only

1069
00:40:01,440 --> 00:40:04,640
one so it's the default by default

1070
00:40:04,640 --> 00:40:06,560
yeah you know it's it's really in the

1071
00:40:06,560 --> 00:40:08,480
concept if you have more than one read

1072
00:40:08,480 --> 00:40:11,720
write calendar

1073
00:40:11,839 --> 00:40:12,800
all right

1074
00:40:12,800 --> 00:40:14,560
should we move on

1075
00:40:14,560 --> 00:40:16,160
yep let's move on thanks for that

1076
00:40:16,160 --> 00:40:17,359
everyone

1077
00:40:17,359 --> 00:40:19,520
um

1078
00:40:19,520 --> 00:40:21,520
so this is

1079
00:40:21,520 --> 00:40:26,079
about um default alerts on calendars so

1080
00:40:26,079 --> 00:40:26,800
uh

1081
00:40:26,800 --> 00:40:28,240
we've discussed this bit before that you

1082
00:40:28,240 --> 00:40:29,839
can have specified default loads on

1083
00:40:29,839 --> 00:40:32,240
cameras and then you can specify on an

1084
00:40:32,240 --> 00:40:34,240
event to use default alerts and just get

1085
00:40:34,240 --> 00:40:35,839
whatever the ones are on the calendar

1086
00:40:35,839 --> 00:40:37,040
that's in

1087
00:40:37,040 --> 00:40:39,520
um

1088
00:40:39,520 --> 00:40:41,440
so the first question is about if i

1089
00:40:41,440 --> 00:40:44,319
create a new calendar

1090
00:40:44,319 --> 00:40:46,319
should i should the server

1091
00:40:46,319 --> 00:40:47,599
copy over

1092
00:40:47,599 --> 00:40:51,280
uh the default alerts

1093
00:40:51,280 --> 00:40:53,599
from your default calendar if you have a

1094
00:40:53,599 --> 00:40:55,359
default calendar i think from the

1095
00:40:55,359 --> 00:40:56,960
previous discussion

1096
00:40:56,960 --> 00:40:58,000
um

1097
00:40:58,000 --> 00:40:59,920
because at the moment the the spec just

1098
00:40:59,920 --> 00:41:02,079
says the default is null so if you

1099
00:41:02,079 --> 00:41:03,359
create a new calendar it doesn't have

1100
00:41:03,359 --> 00:41:05,280
any default alerts until you explicitly

1101
00:41:05,280 --> 00:41:06,880
add them um

1102
00:41:06,880 --> 00:41:08,880
i think again while i was writing up

1103
00:41:08,880 --> 00:41:11,440
this slide i came to the conclusion um

1104
00:41:11,440 --> 00:41:13,200
and so i'll just see if other people

1105
00:41:13,200 --> 00:41:15,119
disagree with it which was that this can

1106
00:41:15,119 --> 00:41:16,720
actually made vendor specific because

1107
00:41:16,720 --> 00:41:18,960
the way jmap works

1108
00:41:18,960 --> 00:41:22,480
the server will return if it created

1109
00:41:22,480 --> 00:41:24,400
if it said anything like copied over the

1110
00:41:24,400 --> 00:41:26,880
ones from your default calendar um

1111
00:41:26,880 --> 00:41:28,240
and

1112
00:41:28,240 --> 00:41:29,680
uh

1113
00:41:29,680 --> 00:41:31,280
if you if and the client can always

1114
00:41:31,280 --> 00:41:33,359
explicitly set null or whatever he wants

1115
00:41:33,359 --> 00:41:34,720
on create if he doesn't want the server

1116
00:41:34,720 --> 00:41:36,480
to pick something

1117
00:41:36,480 --> 00:41:37,440
so

1118
00:41:37,440 --> 00:41:39,119
does anyone disagree with that in the

1119
00:41:39,119 --> 00:41:40,400
queue

1120
00:41:40,400 --> 00:41:42,160
so let's just again so given what i had

1121
00:41:42,160 --> 00:41:43,920
just said about the default calendar

1122
00:41:43,920 --> 00:41:45,359
being a preference as opposed to an

1123
00:41:45,359 --> 00:41:46,960
actual entity

1124
00:41:46,960 --> 00:41:48,640
i would like to

1125
00:41:48,640 --> 00:41:50,880
see default alerts maybe be attached to

1126
00:41:50,880 --> 00:41:52,400
the principal or whatever whatever we're

1127
00:41:52,400 --> 00:41:55,359
calling that in jmap

1128
00:41:55,440 --> 00:41:57,040
since that's yeah

1129
00:41:57,040 --> 00:41:58,960
the trouble is thing on the server

1130
00:41:58,960 --> 00:42:01,520
regarding the user

1131
00:42:01,520 --> 00:42:02,720
well yeah

1132
00:42:02,720 --> 00:42:04,000
i was trying to avoid having yet another

1133
00:42:04,000 --> 00:42:05,839
level of hierarchy because does that

1134
00:42:05,839 --> 00:42:08,720
mean that they might inherit

1135
00:42:08,720 --> 00:42:09,599
from

1136
00:42:09,599 --> 00:42:11,280
so if you have to say you use default

1137
00:42:11,280 --> 00:42:12,480
alerts so they inherit from the calendar

1138
00:42:12,480 --> 00:42:13,920
but then the calendar might inherit from

1139
00:42:13,920 --> 00:42:17,000
the principle

1140
00:42:17,200 --> 00:42:18,960
up here to argue with whether we should

1141
00:42:18,960 --> 00:42:20,480
have should or should not have

1142
00:42:20,480 --> 00:42:22,240
inheritance i'm just saying

1143
00:42:22,240 --> 00:42:24,000
because of default

1144
00:42:24,000 --> 00:42:25,760
calendar being a preference and not an

1145
00:42:25,760 --> 00:42:26,880
entity

1146
00:42:26,880 --> 00:42:28,800
you really can't attach anything to it

1147
00:42:28,800 --> 00:42:31,680
right

1148
00:42:31,680 --> 00:42:33,280
yeah but i mean in this case it's not

1149
00:42:33,280 --> 00:42:34,800
attaching anything to it

1150
00:42:34,800 --> 00:42:36,240
in the spec as such it's just saying

1151
00:42:36,240 --> 00:42:37,280
that the

1152
00:42:37,280 --> 00:42:39,200
uh when you create a new calendar if you

1153
00:42:39,200 --> 00:42:41,119
don't explicitly accept if you have one

1154
00:42:41,119 --> 00:42:42,079
okay

1155
00:42:42,079 --> 00:42:44,240
all right that's yeah

1156
00:42:44,240 --> 00:42:45,599
what i'm saying really here is if you

1157
00:42:45,599 --> 00:42:47,280
create a new calendar and the client

1158
00:42:47,280 --> 00:42:48,960
doesn't explicitly say

1159
00:42:48,960 --> 00:42:50,880
use these default alerts including the

1160
00:42:50,880 --> 00:42:52,880
category of i don't want any then the

1161
00:42:52,880 --> 00:42:54,480
server is allowed to set

1162
00:42:54,480 --> 00:42:56,240
whatever default alerts it wants which

1163
00:42:56,240 --> 00:42:57,599
might be copying over from your default

1164
00:42:57,599 --> 00:42:59,040
calendar or might be something entirely

1165
00:42:59,040 --> 00:43:00,960
different whatever it's going to tell

1166
00:43:00,960 --> 00:43:02,079
the client so

1167
00:43:02,079 --> 00:43:04,880
it's up to the server

1168
00:43:05,119 --> 00:43:08,240
if it if the the server does inherit it

1169
00:43:08,240 --> 00:43:10,400
then they should probably be returned

1170
00:43:10,400 --> 00:43:11,839
as part of the create response so the

1171
00:43:11,839 --> 00:43:13,599
user knows what happened and can change

1172
00:43:13,599 --> 00:43:15,359
it exactly there would have to be

1173
00:43:15,359 --> 00:43:17,280
yeah because and that's already part of

1174
00:43:17,280 --> 00:43:19,200
the core spec of jmap if the server sets

1175
00:43:19,200 --> 00:43:20,720
it and it's not explicitly set by the

1176
00:43:20,720 --> 00:43:22,000
client so if i have to tell the client

1177
00:43:22,000 --> 00:43:22,960
what he did

1178
00:43:22,960 --> 00:43:25,760
um i'm comfortable with that

1179
00:43:25,760 --> 00:43:26,640
um

1180
00:43:26,640 --> 00:43:27,680
possibly the more interesting question

1181
00:43:27,680 --> 00:43:28,960
is the one on the bottom this slide here

1182
00:43:28,960 --> 00:43:30,079
which is

1183
00:43:30,079 --> 00:43:31,920
are you allowed to set default alerts on

1184
00:43:31,920 --> 00:43:34,000
a calendar if you don't have the

1185
00:43:34,000 --> 00:43:35,520
may update private apple which is the

1186
00:43:35,520 --> 00:43:38,000
app we need to be able to update alerts

1187
00:43:38,000 --> 00:43:41,839
on individual events in that calendar

1188
00:43:45,920 --> 00:43:47,359
anyone want to

1189
00:43:47,359 --> 00:43:49,839
pop in for that

1190
00:43:49,839 --> 00:43:53,560
does that require more

1191
00:43:55,359 --> 00:43:57,520
that does seem reasonable like yeah if i

1192
00:43:57,520 --> 00:44:00,560
can't set alerts on individual events

1193
00:44:00,560 --> 00:44:01,760
why should i be able to set default

1194
00:44:01,760 --> 00:44:04,079
alerts

1195
00:44:04,319 --> 00:44:06,240
robert

1196
00:44:06,240 --> 00:44:09,839
yeah so okay so probably i misunderstood

1197
00:44:09,839 --> 00:44:11,680
the question then um

1198
00:44:11,680 --> 00:44:12,960
yeah but

1199
00:44:12,960 --> 00:44:15,040
since i have the mic i agree

1200
00:44:15,040 --> 00:44:16,800
if you don't have to make update private

1201
00:44:16,800 --> 00:44:18,480
it it doesn't really make any sense to

1202
00:44:18,480 --> 00:44:20,720
set the default alerts you you can't

1203
00:44:20,720 --> 00:44:22,720
even then toggle if you want to use

1204
00:44:22,720 --> 00:44:25,599
default alerts on the event or not so

1205
00:44:25,599 --> 00:44:27,440
no but suppose that it was set to true

1206
00:44:27,440 --> 00:44:28,720
because you know

1207
00:44:28,720 --> 00:44:31,359
by whatever source set that

1208
00:44:31,359 --> 00:44:32,720
what does that mean that wouldn't be set

1209
00:44:32,720 --> 00:44:37,359
to true for you um it would be

1210
00:44:37,359 --> 00:44:39,520
it would be set well

1211
00:44:39,520 --> 00:44:41,040
that brings up the question that we

1212
00:44:41,040 --> 00:44:42,960
currently have around shared calendars

1213
00:44:42,960 --> 00:44:43,680
but

1214
00:44:43,680 --> 00:44:46,560
um by the default value of the js

1215
00:44:46,560 --> 00:44:48,400
calendar object it would default to

1216
00:44:48,400 --> 00:44:50,880
false so yeah

1217
00:44:50,880 --> 00:44:52,800
yeah in that case you would you wouldn't

1218
00:44:52,800 --> 00:44:54,880
need to be able to set them for this

1219
00:44:54,880 --> 00:44:56,560
calendar

1220
00:44:56,560 --> 00:44:57,920
um but

1221
00:44:57,920 --> 00:44:58,720
yeah

1222
00:44:58,720 --> 00:45:00,640
at the moment where sherry of a shared

1223
00:45:00,640 --> 00:45:03,440
calendar defaults to true with usd for

1224
00:45:03,440 --> 00:45:05,520
the alerts

1225
00:45:05,520 --> 00:45:06,800
then

1226
00:45:06,800 --> 00:45:08,800
i think it definitely

1227
00:45:08,800 --> 00:45:10,160
needs to be

1228
00:45:10,160 --> 00:45:12,000
possible for them to set the defaults on

1229
00:45:12,000 --> 00:45:13,680
the calendar otherwise they don't get

1230
00:45:13,680 --> 00:45:18,200
any alerts at all for the event

1231
00:45:20,000 --> 00:45:22,000
okay

1232
00:45:22,000 --> 00:45:24,640
but it yeah

1233
00:45:25,040 --> 00:45:26,240
there's a there's a few interactions

1234
00:45:26,240 --> 00:45:27,520
that i guess like whether it's a team

1235
00:45:27,520 --> 00:45:29,280
mode calendar or

1236
00:45:29,280 --> 00:45:32,079
kind of secondary mode and stuff yeah

1237
00:45:32,079 --> 00:45:33,760
it's okay but what i'm trying to say is

1238
00:45:33,760 --> 00:45:36,720
like if the default value for use

1239
00:45:36,720 --> 00:45:38,720
default alerts ever changes to true

1240
00:45:38,720 --> 00:45:39,599
under

1241
00:45:39,599 --> 00:45:42,240
which circumstances any then under these

1242
00:45:42,240 --> 00:45:44,400
circumstances might also be allowed to

1243
00:45:44,400 --> 00:45:47,760
set default alerts because otherwise

1244
00:45:47,760 --> 00:45:49,520
it's really

1245
00:45:49,520 --> 00:45:52,160
it isn't useful to default to true in

1246
00:45:52,160 --> 00:45:53,359
that

1247
00:45:53,359 --> 00:45:54,640
situation

1248
00:45:54,640 --> 00:45:56,240
because there will never ever be any

1249
00:45:56,240 --> 00:45:58,000
alerts there

1250
00:45:58,000 --> 00:46:01,760
yeah yeah i'll i'll go check the

1251
00:46:01,760 --> 00:46:03,520
cases and yeah try and come up with some

1252
00:46:03,520 --> 00:46:05,920
insane

1253
00:46:06,000 --> 00:46:08,480
cool all right um let's have something

1254
00:46:08,480 --> 00:46:10,640
on that i'll just move on

1255
00:46:10,640 --> 00:46:12,000
uh

1256
00:46:12,000 --> 00:46:13,920
this one's simply we've got this

1257
00:46:13,920 --> 00:46:16,079
calendar preferences object we've um

1258
00:46:16,079 --> 00:46:18,000
talked about last time and we've got to

1259
00:46:18,000 --> 00:46:19,680
store now what the default calendar is

1260
00:46:19,680 --> 00:46:21,359
and what your default participant is

1261
00:46:21,359 --> 00:46:24,079
your default identity is um do we want

1262
00:46:24,079 --> 00:46:25,440
to put anything else in there for now i

1263
00:46:25,440 --> 00:46:26,960
mean i'm sure at some point this will

1264
00:46:26,960 --> 00:46:28,720
get extended but there's anything else

1265
00:46:28,720 --> 00:46:30,319
you want in the initial version of it

1266
00:46:30,319 --> 00:46:31,839
the one thing that came to mind is the

1267
00:46:31,839 --> 00:46:33,760
user's first day of week preference

1268
00:46:33,760 --> 00:46:35,760
which is just a cultural thing if you

1269
00:46:35,760 --> 00:46:37,599
want monday or sunday as the first day

1270
00:46:37,599 --> 00:46:39,200
of your week or in a few cases saturday

1271
00:46:39,200 --> 00:46:40,640
and some other stuff but mostly one of

1272
00:46:40,640 --> 00:46:43,440
those two um

1273
00:46:43,440 --> 00:46:45,119
is that worth putting in here or do we

1274
00:46:45,119 --> 00:46:46,400
just keep it simple for now it's just

1275
00:46:46,400 --> 00:46:48,720
the default identity and calendar

1276
00:46:48,720 --> 00:46:50,079
or is there anything else people think

1277
00:46:50,079 --> 00:46:51,119
should

1278
00:46:51,119 --> 00:46:54,000
it's worth storing here as a kind of

1279
00:46:54,000 --> 00:46:56,160
at the data model layer so every every

1280
00:46:56,160 --> 00:46:58,160
client has access to it

1281
00:46:58,160 --> 00:47:00,960
default time zone

1282
00:47:00,960 --> 00:47:05,000
time zone is attached to the principles

1283
00:47:11,839 --> 00:47:14,720
this is ken again so if we expect

1284
00:47:14,720 --> 00:47:16,240
multiple

1285
00:47:16,240 --> 00:47:18,640
different clients to be speaking jmf for

1286
00:47:18,640 --> 00:47:20,319
calendars would the user might want to

1287
00:47:20,319 --> 00:47:22,480
have their preferred

1288
00:47:22,480 --> 00:47:24,079
date time format stored in this

1289
00:47:24,079 --> 00:47:26,559
preferences

1290
00:47:28,960 --> 00:47:30,640
certainly yeah if you were storing first

1291
00:47:30,640 --> 00:47:31,920
of a week that would make sense as well

1292
00:47:31,920 --> 00:47:33,920
like yeah or like day month year or

1293
00:47:33,920 --> 00:47:35,200
whatever but

1294
00:47:35,200 --> 00:47:36,240
yeah

1295
00:47:36,240 --> 00:47:37,520
yeah

1296
00:47:37,520 --> 00:47:39,599
that's good good point

1297
00:47:39,599 --> 00:47:43,200
cool thanks ken uh daniel

1298
00:47:44,400 --> 00:47:45,359
um

1299
00:47:45,359 --> 00:47:47,200
apologies for asking a question maybe

1300
00:47:47,200 --> 00:47:50,319
everybody else here already knows um

1301
00:47:50,319 --> 00:47:52,319
i'm not sure i understand why default

1302
00:47:52,319 --> 00:47:54,800
timezone would be a principal

1303
00:47:54,800 --> 00:47:56,319
uh level thing

1304
00:47:56,319 --> 00:47:59,119
as opposed to a per calendar thing if

1305
00:47:59,119 --> 00:48:00,960
i'm scheduling for a group that

1306
00:48:00,960 --> 00:48:03,280
regularly meets on east coast time i

1307
00:48:03,280 --> 00:48:05,119
want that calendar to default to east

1308
00:48:05,119 --> 00:48:06,480
coast time and if i'm scheduling for a

1309
00:48:06,480 --> 00:48:08,880
group that meets in utc i want that

1310
00:48:08,880 --> 00:48:10,640
group to meet in utc

1311
00:48:10,640 --> 00:48:13,599
so this seems calendars also

1312
00:48:13,599 --> 00:48:16,000
calendars also have a time zone um but

1313
00:48:16,000 --> 00:48:18,960
if if it's null then it inherits from

1314
00:48:18,960 --> 00:48:20,559
the particle from the principle there

1315
00:48:20,559 --> 00:48:22,000
into the calendar

1316
00:48:22,000 --> 00:48:24,319
i see so why not use that same mechanism

1317
00:48:24,319 --> 00:48:27,359
for first day of week

1318
00:48:28,800 --> 00:48:30,160
because it doesn't actually affect me

1319
00:48:30,160 --> 00:48:32,960
the scheduling um this is purely a kind

1320
00:48:32,960 --> 00:48:36,559
of display preference if you like

1321
00:48:38,960 --> 00:48:40,000
okay

1322
00:48:40,000 --> 00:48:42,000
should it be on the should it just go on

1323
00:48:42,000 --> 00:48:44,720
the principle as well

1324
00:48:48,480 --> 00:48:49,599
is

1325
00:48:49,599 --> 00:48:51,280
more stuff that's required for

1326
00:48:51,280 --> 00:48:53,119
scheduling and like if you were

1327
00:48:53,119 --> 00:48:55,119
looking up someone else in your company

1328
00:48:55,119 --> 00:48:59,040
to you know schedule something with um

1329
00:48:59,040 --> 00:49:00,400
whereas

1330
00:49:00,400 --> 00:49:02,880
this to me is just purely a yeah user

1331
00:49:02,880 --> 00:49:04,640
preference which is why it's in separate

1332
00:49:04,640 --> 00:49:05,520
place

1333
00:49:05,520 --> 00:49:07,760
but that sounds like

1334
00:49:07,760 --> 00:49:10,880
it belongs the same place that the um

1335
00:49:10,880 --> 00:49:12,800
uh

1336
00:49:12,800 --> 00:49:14,160
that the

1337
00:49:14,160 --> 00:49:16,400
i mean the the date format

1338
00:49:16,400 --> 00:49:18,000
belongs as well right like everybody

1339
00:49:18,000 --> 00:49:19,520
wants to see it in their own in their

1340
00:49:19,520 --> 00:49:20,880
own perspective exactly yeah that's

1341
00:49:20,880 --> 00:49:22,880
exactly what it changed

1342
00:49:22,880 --> 00:49:24,880
ken just said yeah um

1343
00:49:24,880 --> 00:49:26,240
i agree i think that's something worth

1344
00:49:26,240 --> 00:49:28,000
storing here as well if we do first ever

1345
00:49:28,000 --> 00:49:31,000
week

1346
00:49:34,480 --> 00:49:35,839
okay

1347
00:49:35,839 --> 00:49:37,200
um

1348
00:49:37,200 --> 00:49:41,280
final slide of question stuff i have is

1349
00:49:41,280 --> 00:49:43,359
just nyana one

1350
00:49:43,359 --> 00:49:45,440
so

1351
00:49:45,440 --> 00:49:48,000
the spec lists a set of properties which

1352
00:49:48,000 --> 00:49:50,160
are

1353
00:49:50,160 --> 00:49:52,000
treated as per user properties so this

1354
00:49:52,000 --> 00:49:54,880
means if you're in team mode then each

1355
00:49:54,880 --> 00:49:57,119
user that's accessing the calendar

1356
00:49:57,119 --> 00:49:59,599
they can write to the properties but

1357
00:49:59,599 --> 00:50:01,119
they would just get their own copy of

1358
00:50:01,119 --> 00:50:02,319
them it doesn't affect the other users

1359
00:50:02,319 --> 00:50:04,480
like your alerts for example so that if

1360
00:50:04,480 --> 00:50:06,640
you know we both have a shared calendar

1361
00:50:06,640 --> 00:50:08,640
with with the you know team meeting next

1362
00:50:08,640 --> 00:50:10,319
week i could have an alert two hours

1363
00:50:10,319 --> 00:50:11,760
before and bron could have an alert the

1364
00:50:11,760 --> 00:50:13,839
day before so at the moment the list of

1365
00:50:13,839 --> 00:50:15,599
properties that are considered per user

1366
00:50:15,599 --> 00:50:18,240
is hard coded inspect

1367
00:50:18,240 --> 00:50:20,880
do we want to have this in a registry

1368
00:50:20,880 --> 00:50:21,920
somewhere

1369
00:50:21,920 --> 00:50:23,839
probably like it seems possible that

1370
00:50:23,839 --> 00:50:25,359
there might be others in the future that

1371
00:50:25,359 --> 00:50:28,160
you want to treat in the same way um

1372
00:50:28,160 --> 00:50:31,040
and if so do we modify the js calendar

1373
00:50:31,040 --> 00:50:32,240
spec which already lists all the

1374
00:50:32,240 --> 00:50:34,000
properties but to add like an extra

1375
00:50:34,000 --> 00:50:35,440
column to say whether it should be

1376
00:50:35,440 --> 00:50:38,000
treated per using germap calendars or is

1377
00:50:38,000 --> 00:50:38,800
this

1378
00:50:38,800 --> 00:50:39,760
something we should create just a

1379
00:50:39,760 --> 00:50:44,000
separate jmap calendars registry for

1380
00:50:47,760 --> 00:50:49,119
just popping myself in the queue for

1381
00:50:49,119 --> 00:50:50,079
this one

1382
00:50:50,079 --> 00:50:52,880
i think we should modify the existing

1383
00:50:52,880 --> 00:50:55,200
registry it's going to be easy to update

1384
00:50:55,200 --> 00:50:57,440
both things in one place rather than

1385
00:50:57,440 --> 00:50:59,200
creating a separate registry which has

1386
00:50:59,200 --> 00:51:01,040
the same keys in it just a subset of

1387
00:51:01,040 --> 00:51:03,119
them

1388
00:51:03,280 --> 00:51:04,559
is that reasonably easy too i've never

1389
00:51:04,559 --> 00:51:06,079
tried to kind of update registry in that

1390
00:51:06,079 --> 00:51:09,800
way before i can't

1391
00:51:12,319 --> 00:51:13,520
yeah

1392
00:51:13,520 --> 00:51:14,960
yeah that does sound the most reasonable

1393
00:51:14,960 --> 00:51:17,839
event because yeah one place

1394
00:51:17,839 --> 00:51:18,640
yeah

1395
00:51:18,640 --> 00:51:20,800
okay that sounds good to me

1396
00:51:20,800 --> 00:51:22,960
great so just um

1397
00:51:22,960 --> 00:51:23,930
wrapping up uh

1398
00:51:23,930 --> 00:51:25,119
[Music]

1399
00:51:25,119 --> 00:51:26,960
i think we're almost there with this now

1400
00:51:26,960 --> 00:51:28,880
um implementation experience has been

1401
00:51:28,880 --> 00:51:31,280
great i need to

1402
00:51:31,280 --> 00:51:32,640
make changes based on the discussions

1403
00:51:32,640 --> 00:51:35,200
we've had here

1404
00:51:35,200 --> 00:51:38,319
and add some examples which um

1405
00:51:38,319 --> 00:51:40,960
i saw and yeah but hopefully that none

1406
00:51:40,960 --> 00:51:42,559
of that's going to take too long and i

1407
00:51:42,559 --> 00:51:44,720
hope to get this to last school before

1408
00:51:44,720 --> 00:51:49,319
the next itf meeting fingers crossed

1409
00:51:52,079 --> 00:51:53,040
cool

1410
00:51:53,040 --> 00:51:55,280
thanks neil

1411
00:51:55,280 --> 00:51:56,720
anything else before we move on to the

1412
00:51:56,720 --> 00:51:59,359
next topic

1413
00:52:03,200 --> 00:52:07,759
excellent uh next is gemma tasks

1414
00:52:15,920 --> 00:52:17,680
sorry neil i just turned off your audio

1415
00:52:17,680 --> 00:52:20,400
because this this system is very good at

1416
00:52:20,400 --> 00:52:21,680
moving things under you when you're

1417
00:52:21,680 --> 00:52:23,440
about to click

1418
00:52:23,440 --> 00:52:25,920
uh i will put gen up tasks up unless you

1419
00:52:25,920 --> 00:52:27,680
want to share it from your phone

1420
00:52:27,680 --> 00:52:30,559
and hand you the microphone thank you

1421
00:52:30,559 --> 00:52:31,359
hi

1422
00:52:31,359 --> 00:52:32,880
i'm jos baum

1423
00:52:32,880 --> 00:52:34,480
so um

1424
00:52:34,480 --> 00:52:36,960
yeah i'm just gonna present you what the

1425
00:52:36,960 --> 00:52:40,079
last changes are of general for tasks

1426
00:52:40,079 --> 00:52:41,839
and um

1427
00:52:41,839 --> 00:52:43,520
yeah

1428
00:52:43,520 --> 00:52:45,359
present you some of the

1429
00:52:45,359 --> 00:52:48,160
like most of the changes resulted

1430
00:52:48,160 --> 00:52:49,040
from the

1431
00:52:49,040 --> 00:52:52,000
the survey that i did last time

1432
00:52:52,000 --> 00:52:55,040
um and i also prepared some discussion

1433
00:52:55,040 --> 00:52:57,920
points that resulted from this survey

1434
00:52:57,920 --> 00:53:00,800
so if you can continue to the next slide

1435
00:53:00,800 --> 00:53:02,319
yes so here again is the link to the

1436
00:53:02,319 --> 00:53:05,280
survey uh i published on github

1437
00:53:05,280 --> 00:53:09,440
uh the goal of the survey was to make uh

1438
00:53:09,440 --> 00:53:11,200
you know to make jammer for tasks a more

1439
00:53:11,200 --> 00:53:13,760
common standard that's not only specific

1440
00:53:13,760 --> 00:53:15,520
to groupware systems

1441
00:53:15,520 --> 00:53:18,000
but also specific to kanban boards or

1442
00:53:18,000 --> 00:53:19,359
issue trackers

1443
00:53:19,359 --> 00:53:21,680
so we extend the idea is to extend the

1444
00:53:21,680 --> 00:53:22,640
spec

1445
00:53:22,640 --> 00:53:25,040
here and there to make it a more common

1446
00:53:25,040 --> 00:53:28,040
thing

1447
00:53:28,720 --> 00:53:31,119
yeah so i started with uh

1448
00:53:31,119 --> 00:53:32,880
yeah some more obvious

1449
00:53:32,880 --> 00:53:35,599
or for me at least obvious properties

1450
00:53:35,599 --> 00:53:38,960
um that i added to the spec

1451
00:53:38,960 --> 00:53:40,880
um and here's a

1452
00:53:40,880 --> 00:53:43,680
here's a list of the changes basically

1453
00:53:43,680 --> 00:53:46,640
so the first thing i i added is a

1454
00:53:46,640 --> 00:53:48,640
source property that i saw in several

1455
00:53:48,640 --> 00:53:49,920
systems so

1456
00:53:49,920 --> 00:53:52,480
this describes where

1457
00:53:52,480 --> 00:53:55,680
a task oh

1458
00:53:55,680 --> 00:53:58,160
also this is only these are only changes

1459
00:53:58,160 --> 00:54:00,400
to the task object for now they are not

1460
00:54:00,400 --> 00:54:03,119
not for the task list object

1461
00:54:03,119 --> 00:54:05,599
so the source property describes from

1462
00:54:05,599 --> 00:54:06,400
which

1463
00:54:06,400 --> 00:54:08,079
from where the

1464
00:54:08,079 --> 00:54:10,000
the task comes from there are some

1465
00:54:10,000 --> 00:54:11,440
systems that

1466
00:54:11,440 --> 00:54:14,880
can automatically create or can create a

1467
00:54:14,880 --> 00:54:17,040
task from an email or

1468
00:54:17,040 --> 00:54:19,599
they they tag a certain task as it was

1469
00:54:19,599 --> 00:54:22,839
created from a mobile app

1470
00:54:22,839 --> 00:54:26,240
yeah um that's just basically a simple

1471
00:54:26,240 --> 00:54:28,880
string value then there's also an next

1472
00:54:28,880 --> 00:54:31,359
value is estimated work which is similar

1473
00:54:31,359 --> 00:54:33,359
to estimated duration which was already

1474
00:54:33,359 --> 00:54:34,559
ready there

1475
00:54:34,559 --> 00:54:37,440
but it's more of an uh more

1476
00:54:37,440 --> 00:54:38,400
abstract

1477
00:54:38,400 --> 00:54:40,400
estimation of

1478
00:54:40,400 --> 00:54:42,160
the amount of work required for a

1479
00:54:42,160 --> 00:54:44,880
certain task which is a

1480
00:54:44,880 --> 00:54:48,079
more or less popular thing in kanban

1481
00:54:48,079 --> 00:54:50,160
so you don't

1482
00:54:50,160 --> 00:54:51,920
have a time estimate you have more like

1483
00:54:51,920 --> 00:54:54,319
a more abstract measure

1484
00:54:54,319 --> 00:54:55,280
um

1485
00:54:55,280 --> 00:54:57,280
then there's an impact property which is

1486
00:54:57,280 --> 00:54:59,280
also a simple string

1487
00:54:59,280 --> 00:55:02,240
um which

1488
00:55:02,319 --> 00:55:04,839
is more popular in issue tracking

1489
00:55:04,839 --> 00:55:08,640
which has some values like major or

1490
00:55:08,640 --> 00:55:10,160
block

1491
00:55:10,160 --> 00:55:11,359
for example

1492
00:55:11,359 --> 00:55:12,559
and

1493
00:55:12,559 --> 00:55:16,319
then there's a the progress property

1494
00:55:16,319 --> 00:55:17,119
was

1495
00:55:17,119 --> 00:55:18,880
i extended the progress property with

1496
00:55:18,880 --> 00:55:20,319
some more values which you will see in

1497
00:55:20,319 --> 00:55:23,119
the next slide and then i slipped in a

1498
00:55:23,119 --> 00:55:24,480
small mistake

1499
00:55:24,480 --> 00:55:26,240
that nobody noticed

1500
00:55:26,240 --> 00:55:28,400
and i just noticed it like a few days

1501
00:55:28,400 --> 00:55:30,240
after i published the spec

1502
00:55:30,240 --> 00:55:31,680
um i

1503
00:55:31,680 --> 00:55:33,520
added related to which was already in

1504
00:55:33,520 --> 00:55:35,040
j's calendar it's

1505
00:55:35,040 --> 00:55:37,200
what i wanted to do is like to extend

1506
00:55:37,200 --> 00:55:38,720
the relation object

1507
00:55:38,720 --> 00:55:40,640
with more values

1508
00:55:40,640 --> 00:55:41,520
so

1509
00:55:41,520 --> 00:55:44,720
related to can also contain

1510
00:55:44,720 --> 00:55:48,559
blocked by for example um currently it

1511
00:55:48,559 --> 00:55:50,240
contains

1512
00:55:50,240 --> 00:55:52,559
values like child

1513
00:55:52,559 --> 00:55:54,319
next

1514
00:55:54,319 --> 00:55:56,400
things like that okay if you can go on

1515
00:55:56,400 --> 00:55:58,720
to the next slide

1516
00:55:58,720 --> 00:56:01,599
yeah so the progress property is a bit

1517
00:56:01,599 --> 00:56:04,000
is a bit of a bigger change

1518
00:56:04,000 --> 00:56:05,359
um

1519
00:56:05,359 --> 00:56:08,720
there already were certain values for it

1520
00:56:08,720 --> 00:56:10,480
the the progress property basically

1521
00:56:10,480 --> 00:56:11,920
displays

1522
00:56:11,920 --> 00:56:15,839
yeah the progress of a cert task and uh

1523
00:56:15,839 --> 00:56:17,920
yeah there already was uh needs action

1524
00:56:17,920 --> 00:56:19,680
in process completed failed and

1525
00:56:19,680 --> 00:56:20,880
cancelled

1526
00:56:20,880 --> 00:56:24,319
and they're just a bunch of other values

1527
00:56:24,319 --> 00:56:25,760
that exist in

1528
00:56:25,760 --> 00:56:27,680
various systems

1529
00:56:27,680 --> 00:56:30,880
so what i tried to do i tried to

1530
00:56:30,880 --> 00:56:33,920
come up with a mapping from those

1531
00:56:33,920 --> 00:56:36,960
various values that i that i saw

1532
00:56:36,960 --> 00:56:38,640
and

1533
00:56:38,640 --> 00:56:40,799
added some more

1534
00:56:40,799 --> 00:56:42,319
values that i

1535
00:56:42,319 --> 00:56:44,640
i thought were necessary in order to

1536
00:56:44,640 --> 00:56:46,640
have a more complete mapping

1537
00:56:46,640 --> 00:56:48,240
so for example there are some simple

1538
00:56:48,240 --> 00:56:51,810
systems that have only done or not done

1539
00:56:51,810 --> 00:56:53,280
[Music]

1540
00:56:53,280 --> 00:56:55,440
which was not so obvious for me how to

1541
00:56:55,440 --> 00:56:58,640
map the simple done or not done

1542
00:56:58,640 --> 00:57:01,280
uh progress indicator

1543
00:57:01,280 --> 00:57:02,960
and also uh

1544
00:57:02,960 --> 00:57:04,559
yes there were some issue tracking

1545
00:57:04,559 --> 00:57:06,160
specific

1546
00:57:06,160 --> 00:57:07,119
um

1547
00:57:07,119 --> 00:57:09,359
values like deferred

1548
00:57:09,359 --> 00:57:10,839
or waiting or

1549
00:57:10,839 --> 00:57:14,559
resolved or feedback

1550
00:57:14,559 --> 00:57:16,400
yeah so basically this is uh this is the

1551
00:57:16,400 --> 00:57:17,359
mapping

1552
00:57:17,359 --> 00:57:20,079
here i came up with

1553
00:57:20,079 --> 00:57:23,440
i also mentioned that in the spec

1554
00:57:23,440 --> 00:57:26,880
so that other people implementing it

1555
00:57:26,880 --> 00:57:28,079
know

1556
00:57:28,079 --> 00:57:31,599
how to which which value to choose

1557
00:57:31,599 --> 00:57:34,640
for their own system that they

1558
00:57:34,640 --> 00:57:37,119
they want to implement it for

1559
00:57:37,119 --> 00:57:38,240
yeah so

1560
00:57:38,240 --> 00:57:40,160
i don't know maybe there are already

1561
00:57:40,160 --> 00:57:42,960
some thoughts on

1562
00:57:42,960 --> 00:57:43,760
this

1563
00:57:43,760 --> 00:57:46,720
i think the next slide is gonna be

1564
00:57:46,720 --> 00:57:48,799
what are gonna be other properties for

1565
00:57:48,799 --> 00:57:51,359
discussion

1566
00:57:55,440 --> 00:57:57,040
yeah i think it looks good and i think

1567
00:57:57,040 --> 00:57:59,440
it would be just simple to add these to

1568
00:57:59,440 --> 00:58:00,400
the

1569
00:58:00,400 --> 00:58:03,359
uh registry as sellout values for the

1570
00:58:03,359 --> 00:58:05,119
enums in

1571
00:58:05,119 --> 00:58:05,920
um

1572
00:58:05,920 --> 00:58:07,280
i'm not sure if

1573
00:58:07,280 --> 00:58:09,680
is it also for is is it for

1574
00:58:09,680 --> 00:58:12,240
i calendar v to do's um

1575
00:58:12,240 --> 00:58:14,319
i think we already have the needs action

1576
00:58:14,319 --> 00:58:15,839
process completed

1577
00:58:15,839 --> 00:58:18,480
already or not was the chest just in the

1578
00:58:18,480 --> 00:58:20,240
task draft

1579
00:58:20,240 --> 00:58:22,960
but nevertheless for for gs calendar

1580
00:58:22,960 --> 00:58:25,280
yeah i think it's just it should be just

1581
00:58:25,280 --> 00:58:26,400
a thing of

1582
00:58:26,400 --> 00:58:28,799
extending the existing registry with

1583
00:58:28,799 --> 00:58:30,720
these values

1584
00:58:30,720 --> 00:58:32,959
okay

1585
00:58:34,319 --> 00:58:36,400
all right then if you can move to the

1586
00:58:36,400 --> 00:58:37,680
next

1587
00:58:37,680 --> 00:58:40,160
be nice

1588
00:58:43,760 --> 00:58:45,280
yes so

1589
00:58:45,280 --> 00:58:47,599
one big thing

1590
00:58:47,599 --> 00:58:48,799
from the

1591
00:58:48,799 --> 00:58:52,480
survey was grouping the property somehow

1592
00:58:52,480 --> 00:58:54,079
so

1593
00:58:54,079 --> 00:58:55,920
right now there are quite a lot of

1594
00:58:55,920 --> 00:58:58,880
properties and the plan is to add a

1595
00:58:58,880 --> 00:59:02,319
bunch of more properties to the

1596
00:59:02,319 --> 00:59:05,119
mainly to the js

1597
00:59:05,119 --> 00:59:05,620
calendar

1598
00:59:05,620 --> 00:59:07,280
[Music]

1599
00:59:07,280 --> 00:59:08,880
object

1600
00:59:08,880 --> 00:59:12,960
or the js the js event object

1601
00:59:12,960 --> 00:59:14,960
so the idea here is to to group it

1602
00:59:14,960 --> 00:59:16,720
somehow because there are some systems

1603
00:59:16,720 --> 00:59:18,559
that just

1604
00:59:18,559 --> 00:59:21,680
don't need certain properties and

1605
00:59:21,680 --> 00:59:22,880
for example

1606
00:59:22,880 --> 00:59:25,040
issue trackers

1607
00:59:25,040 --> 00:59:27,280
they typically

1608
00:59:27,280 --> 00:59:28,480
don't want to

1609
00:59:28,480 --> 00:59:31,280
have some scheduling mechanism

1610
00:59:31,280 --> 00:59:32,559
built in or

1611
00:59:32,559 --> 00:59:35,119
recurrent issues in an issue tracker are

1612
00:59:35,119 --> 00:59:36,240
just

1613
00:59:36,240 --> 00:59:38,240
not really a thing

1614
00:59:38,240 --> 00:59:40,079
so

1615
00:59:40,079 --> 00:59:42,240
yeah so that's but that's like a big a

1616
00:59:42,240 --> 00:59:44,240
big one that i wanted to discuss first

1617
00:59:44,240 --> 00:59:45,520
because

1618
00:59:45,520 --> 00:59:47,920
uh yeah i think it's i don't know it's

1619
00:59:47,920 --> 00:59:50,160
kind of a big change

1620
00:59:50,160 --> 00:59:51,280
so

1621
00:59:51,280 --> 00:59:53,440
yeah so it contains a lot of group very

1622
00:59:53,440 --> 00:59:56,960
specific properties right now um

1623
00:59:56,960 --> 00:59:58,000
um

1624
00:59:58,000 --> 00:59:59,599
yeah that's why i tried to split it into

1625
00:59:59,599 --> 01:00:02,240
groups and the idea here was to split it

1626
01:00:02,240 --> 01:00:04,400
into certain feature sets

1627
01:00:04,400 --> 01:00:05,680
um

1628
01:00:05,680 --> 01:00:08,079
but keep it in line with jmap

1629
01:00:08,079 --> 01:00:10,880
so use the capability mechanism to to

1630
01:00:10,880 --> 01:00:12,240
display

1631
01:00:12,240 --> 01:00:13,200
what the

1632
01:00:13,200 --> 01:00:14,880
server understands what the client

1633
01:00:14,880 --> 01:00:16,720
understands

1634
01:00:16,720 --> 01:00:18,960
but also not make it all too

1635
01:00:18,960 --> 01:00:20,720
fine-grained

1636
01:00:20,720 --> 01:00:21,839
um

1637
01:00:21,839 --> 01:00:23,440
at the same time so we don't want to

1638
01:00:23,440 --> 01:00:26,359
have 20 different

1639
01:00:26,359 --> 01:00:28,799
capabilities um

1640
01:00:28,799 --> 01:00:31,200
yeah so and one thing i wanted to notice

1641
01:00:31,200 --> 01:00:32,799
that it's

1642
01:00:32,799 --> 01:00:34,799
if we go that road then systems will

1643
01:00:34,799 --> 01:00:37,280
need to implement a bit more than they

1644
01:00:37,280 --> 01:00:41,280
absolutely need but i think that's just

1645
01:00:41,280 --> 01:00:43,440
that's just uh i don't know

1646
01:00:43,440 --> 01:00:44,799
one

1647
01:00:44,799 --> 01:00:46,720
that's just necessary

1648
01:00:46,720 --> 01:00:48,240
um

1649
01:00:48,240 --> 01:00:50,400
and what we can do is we can make sure

1650
01:00:50,400 --> 01:00:53,359
the overhead is just small enough for

1651
01:00:53,359 --> 01:00:56,319
kanban boards or issue trackers to

1652
01:00:56,319 --> 01:00:58,480
spot to have some interest in the

1653
01:00:58,480 --> 01:01:01,040
current spec

1654
01:01:02,319 --> 01:01:04,880
yeah okay

1655
01:01:06,079 --> 01:01:08,079
thank you for this work um can we go one

1656
01:01:08,079 --> 01:01:11,119
slide prior i just had a comment on on

1657
01:01:11,119 --> 01:01:12,720
the chat that i was asked to take to the

1658
01:01:12,720 --> 01:01:13,599
mic

1659
01:01:13,599 --> 01:01:15,920
um confirmed seems orthogonal to the

1660
01:01:15,920 --> 01:01:17,359
other states here

1661
01:01:17,359 --> 01:01:19,599
and it sounds to me like each task has

1662
01:01:19,599 --> 01:01:21,440
uh exactly one

1663
01:01:21,440 --> 01:01:23,599
uh progress property

1664
01:01:23,599 --> 01:01:25,760
and so i don't know how you're expecting

1665
01:01:25,760 --> 01:01:28,240
like how do i indicate something is say

1666
01:01:28,240 --> 01:01:30,799
confirmed and deferred or

1667
01:01:30,799 --> 01:01:32,559
confirmed and

1668
01:01:32,559 --> 01:01:34,799
uh in process

1669
01:01:34,799 --> 01:01:36,240
uh that seems a little bit confusing i'm

1670
01:01:36,240 --> 01:01:38,400
also not sure why we have both resolved

1671
01:01:38,400 --> 01:01:39,760
and completed

1672
01:01:39,760 --> 01:01:40,640
um

1673
01:01:40,640 --> 01:01:42,079
i wouldn't know which one to pick in

1674
01:01:42,079 --> 01:01:44,960
most contexts

1675
01:01:45,599 --> 01:01:48,160
okay so

1676
01:01:48,160 --> 01:01:51,359
you wanna have deferred and

1677
01:01:51,359 --> 01:01:53,280
which one

1678
01:01:53,280 --> 01:01:56,000
confirmed confirmed seems orthogonal to

1679
01:01:56,000 --> 01:01:59,319
the other states

1680
01:02:07,359 --> 01:02:08,640
there's a separate property in jazz

1681
01:02:08,640 --> 01:02:10,799
counter let's jump in

1682
01:02:10,799 --> 01:02:14,079
what can you repeat that

1683
01:02:14,400 --> 01:02:16,960
where does the sound come from

1684
01:02:16,960 --> 01:02:18,880
um

1685
01:02:18,880 --> 01:02:23,039
i don't i'm not exactly sure where um

1686
01:02:23,039 --> 01:02:26,720
so what i what i did my my methodology

1687
01:02:26,720 --> 01:02:28,640
was that i looked at the issue tracking

1688
01:02:28,640 --> 01:02:29,839
systems

1689
01:02:29,839 --> 01:02:31,680
and

1690
01:02:31,680 --> 01:02:32,720
they have

1691
01:02:32,720 --> 01:02:35,039
not only a progress

1692
01:02:35,039 --> 01:02:37,440
like a status property but they have

1693
01:02:37,440 --> 01:02:39,680
several other properties like impact

1694
01:02:39,680 --> 01:02:41,039
that i already mentioned but there's

1695
01:02:41,039 --> 01:02:43,839
also another one

1696
01:02:44,799 --> 01:02:47,839
so i'm not sure if there is an issue

1697
01:02:47,839 --> 01:02:49,760
tracker out there where you can confirm

1698
01:02:49,760 --> 01:02:51,039
something

1699
01:02:51,039 --> 01:02:52,480
and have it

1700
01:02:52,480 --> 01:02:55,920
i don't know assigned at the same time

1701
01:02:55,920 --> 01:02:57,760
well i'm not i'm not suggesting this

1702
01:02:57,760 --> 01:03:00,799
problem is uh specific to your document

1703
01:03:00,799 --> 01:03:02,720
here i've certainly seen issue trackers

1704
01:03:02,720 --> 01:03:03,599
where

1705
01:03:03,599 --> 01:03:05,680
there is a separate state that is

1706
01:03:05,680 --> 01:03:09,599
confirmed but it is not assigned

1707
01:03:09,599 --> 01:03:11,599
but i know that

1708
01:03:11,599 --> 01:03:13,920
i use issue trackers where

1709
01:03:13,920 --> 01:03:15,920
whether something is confirmed or not is

1710
01:03:15,920 --> 01:03:17,680
independent of whether it is assigned

1711
01:03:17,680 --> 01:03:20,559
it's useful to know okay you know here's

1712
01:03:20,559 --> 01:03:21,760
a here's something that someone's

1713
01:03:21,760 --> 01:03:23,599
actually been able to replicate for

1714
01:03:23,599 --> 01:03:24,720
example

1715
01:03:24,720 --> 01:03:26,720
um so it's just it doesn't seem related

1716
01:03:26,720 --> 01:03:27,680
to this

1717
01:03:27,680 --> 01:03:29,119
i really don't understand the difference

1718
01:03:29,119 --> 01:03:31,039
between resolved and completed though

1719
01:03:31,039 --> 01:03:32,160
that would be another thing worth

1720
01:03:32,160 --> 01:03:33,280
clarifying if you're going to drop you

1721
01:03:33,280 --> 01:03:35,760
in this bag

1722
01:03:36,480 --> 01:03:37,599
yeah

1723
01:03:37,599 --> 01:03:38,680
so um

1724
01:03:38,680 --> 01:03:41,790
[Music]

1725
01:03:42,240 --> 01:03:43,520
okay

1726
01:03:43,520 --> 01:03:44,090
um

1727
01:03:44,090 --> 01:03:47,399
[Music]

1728
01:03:52,000 --> 01:03:54,400
yeah i think

1729
01:03:54,400 --> 01:03:56,559
if i remember correctly

1730
01:03:56,559 --> 01:04:00,319
if it's resolved then the it has been it

1731
01:04:00,319 --> 01:04:03,280
has been fixed actually

1732
01:04:03,280 --> 01:04:06,799
but if it has been completed it's it's

1733
01:04:06,799 --> 01:04:09,680
done basically so the issue might

1734
01:04:09,680 --> 01:04:11,520
it's like a won't fix

1735
01:04:11,520 --> 01:04:13,359
it could be a won't fix

1736
01:04:13,359 --> 01:04:16,000
you know it's the same as closed

1737
01:04:16,000 --> 01:04:18,160
uh you just don't work on it

1738
01:04:18,160 --> 01:04:19,440
any longer

1739
01:04:19,440 --> 01:04:22,640
but if it's resolved then it's actually

1740
01:04:22,640 --> 01:04:24,559
yeah you actually fixed something

1741
01:04:24,559 --> 01:04:26,160
that's

1742
01:04:26,160 --> 01:04:28,000
maybe i need to i mean to need to

1743
01:04:28,000 --> 01:04:30,799
specify that a little bit more

1744
01:04:30,799 --> 01:04:32,960
that's a that's a very good feedback

1745
01:04:32,960 --> 01:04:36,319
because uh yeah i me too i think the

1746
01:04:36,319 --> 01:04:38,960
the whole terminology is

1747
01:04:38,960 --> 01:04:42,720
not very obvious i agree

1748
01:04:43,200 --> 01:04:44,460
yeah but maybe also

1749
01:04:44,460 --> 01:04:45,680
[Music]

1750
01:04:45,680 --> 01:04:47,599
it would need some splitting up

1751
01:04:47,599 --> 01:04:49,039
it's a it's a good feedback that i need

1752
01:04:49,039 --> 01:04:52,400
to look into it a bit

1753
01:04:52,839 --> 01:04:54,880
deeper so this is this is kind of

1754
01:04:54,880 --> 01:04:56,640
against i stood up for the next slide

1755
01:04:56,640 --> 01:04:58,799
but just to chime in on the resolve

1756
01:04:58,799 --> 01:05:00,720
completed i tend to agree that they

1757
01:05:00,720 --> 01:05:02,160
probably are the same thing and the

1758
01:05:02,160 --> 01:05:03,920
language that's used in the ui is just a

1759
01:05:03,920 --> 01:05:05,599
ui thing

1760
01:05:05,599 --> 01:05:07,920
uh unless we can clarify those in the

1761
01:05:07,920 --> 01:05:10,160
spec as to what the actual difference

1762
01:05:10,160 --> 01:05:11,760
between the two are and where they

1763
01:05:11,760 --> 01:05:14,559
expect to be used

1764
01:05:17,920 --> 01:05:19,280
so i apologize i haven't read the

1765
01:05:19,280 --> 01:05:20,799
current spec but

1766
01:05:20,799 --> 01:05:22,799
regarding the grouping thing so just to

1767
01:05:22,799 --> 01:05:25,119
wrap my head around the issue

1768
01:05:25,119 --> 01:05:27,680
are there mandatory

1769
01:05:27,680 --> 01:05:30,720
properties in js event that the task

1770
01:05:30,720 --> 01:05:33,440
folks don't want to see

1771
01:05:33,440 --> 01:05:34,400
or

1772
01:05:34,400 --> 01:05:37,039
i'm trying to figure out why we need to

1773
01:05:37,039 --> 01:05:38,799
either remove

1774
01:05:38,799 --> 01:05:41,359
not show properties in the event

1775
01:05:41,359 --> 01:05:43,280
that's the intent that i'm i think i'm

1776
01:05:43,280 --> 01:05:46,559
getting from what's going on here

1777
01:05:46,559 --> 01:05:48,799
for my way off base

1778
01:05:48,799 --> 01:05:49,839
not

1779
01:05:49,839 --> 01:05:51,520
not show okay

1780
01:05:51,520 --> 01:05:52,960
and what's the reason for not showing

1781
01:05:52,960 --> 01:05:54,799
them because they're not a proponent of

1782
01:05:54,799 --> 01:05:56,720
tasks or

1783
01:05:56,720 --> 01:05:58,559
i just uh just wanted to understand

1784
01:05:58,559 --> 01:05:59,680
sorry

1785
01:05:59,680 --> 01:06:01,920
you said you if they're not show

1786
01:06:01,920 --> 01:06:04,559
properties or no i didn't i might get

1787
01:06:04,559 --> 01:06:06,400
that i'm trying to understand my head

1788
01:06:06,400 --> 01:06:08,799
around why we need the grouping

1789
01:06:08,799 --> 01:06:10,240
so

1790
01:06:10,240 --> 01:06:13,280
what's the the end goal with grouping

1791
01:06:13,280 --> 01:06:14,720
these

1792
01:06:14,720 --> 01:06:16,720
yeah is my question

1793
01:06:16,720 --> 01:06:17,760
um

1794
01:06:17,760 --> 01:06:21,920
so the way i understood it um

1795
01:06:21,920 --> 01:06:24,160
a server still needs

1796
01:06:24,160 --> 01:06:26,240
to understand

1797
01:06:26,240 --> 01:06:28,400
or you if you have a server

1798
01:06:28,400 --> 01:06:30,319
that implements the whole js calendar

1799
01:06:30,319 --> 01:06:31,280
spec

1800
01:06:31,280 --> 01:06:33,520
and it it tells you with its capability

1801
01:06:33,520 --> 01:06:35,359
that it's able to understand it then you

1802
01:06:35,359 --> 01:06:37,280
expect it to

1803
01:06:37,280 --> 01:06:39,039
understand all the properties even

1804
01:06:39,039 --> 01:06:41,520
though they're optional or not

1805
01:06:41,520 --> 01:06:44,119
you can just leave out the not optional

1806
01:06:44,119 --> 01:06:46,559
properties um

1807
01:06:46,559 --> 01:06:47,359
but

1808
01:06:47,359 --> 01:06:48,400
yeah

1809
01:06:48,400 --> 01:06:53,720
it's a basically capability thing yeah

1810
01:07:06,720 --> 01:07:08,000
a little bit i think the

1811
01:07:08,000 --> 01:07:09,839
reason or what we found out

1812
01:07:09,839 --> 01:07:11,599
in the survey i think that was presented

1813
01:07:11,599 --> 01:07:14,240
at the last itf is a little bit we found

1814
01:07:14,240 --> 01:07:16,319
that task systems in general are much

1815
01:07:16,319 --> 01:07:18,640
heterogeneous and the calendar systems

1816
01:07:18,640 --> 01:07:20,480
so for instance each calendar system

1817
01:07:20,480 --> 01:07:22,799
typically will include recurrences

1818
01:07:22,799 --> 01:07:24,880
whereas this is rather exceptional even

1819
01:07:24,880 --> 01:07:27,039
in groupware systems so some like google

1820
01:07:27,039 --> 01:07:28,720
tasks for instance there is no such no

1821
01:07:28,720 --> 01:07:31,039
such thing as such a recurrence

1822
01:07:31,039 --> 01:07:32,640
and so we argued somehow if you want to

1823
01:07:32,640 --> 01:07:35,680
use this also for an interoperability

1824
01:07:35,680 --> 01:07:39,359
issue like systems might adopt jmap for

1825
01:07:39,359 --> 01:07:40,960
you know interoperability as a standard

1826
01:07:40,960 --> 01:07:44,720
api tasks in indifference to calendars

1827
01:07:44,720 --> 01:07:46,160
will require some sort of a

1828
01:07:46,160 --> 01:07:47,440
differentiation

1829
01:07:47,440 --> 01:07:48,559
because

1830
01:07:48,559 --> 01:07:49,760
there are certainly a lot of task

1831
01:07:49,760 --> 01:07:51,440
systems around not having recurrences at

1832
01:07:51,440 --> 01:07:53,119
all and so we need some sort of a

1833
01:07:53,119 --> 01:07:56,920
mechanism in order to

1834
01:07:57,839 --> 01:07:59,280
can i maybe

1835
01:07:59,280 --> 01:08:01,200
just finish i have two more slides about

1836
01:08:01,200 --> 01:08:04,400
all three more about grouping actually

1837
01:08:04,400 --> 01:08:06,000
okay

1838
01:08:06,000 --> 01:08:09,000
okay

1839
01:08:11,200 --> 01:08:13,839
i think it was just that i i think the

1840
01:08:13,839 --> 01:08:15,920
grouping idea with like

1841
01:08:15,920 --> 01:08:19,198
a reasonably small set of capabilities

1842
01:08:19,198 --> 01:08:22,560
that can divide up um

1843
01:08:22,560 --> 01:08:23,679
kind of like you've said there seems

1844
01:08:23,679 --> 01:08:25,679
like a reasonable idea i will have to

1845
01:08:25,679 --> 01:08:27,120
see you know the

1846
01:08:27,120 --> 01:08:28,799
the the details and the specs but i i

1847
01:08:28,799 --> 01:08:30,158
think the virginia idea is kind of

1848
01:08:30,158 --> 01:08:32,479
changed

1849
01:08:33,839 --> 01:08:35,679
okay

1850
01:08:35,679 --> 01:08:38,158
yeah so the current idea here is i don't

1851
01:08:38,158 --> 01:08:40,399
know to to group

1852
01:08:40,399 --> 01:08:42,799
the the the way i tried to solve it is

1853
01:08:42,799 --> 01:08:44,799
that i i currently

1854
01:08:44,799 --> 01:08:47,359
um have a grouping of three different in

1855
01:08:47,359 --> 01:08:49,198
three different groups so the common

1856
01:08:49,198 --> 01:08:53,600
properties across all task systems um

1857
01:08:53,600 --> 01:08:56,158
and there's a time estimation features

1858
01:08:56,158 --> 01:08:57,759
that are

1859
01:08:57,759 --> 01:09:00,000
um

1860
01:09:00,399 --> 01:09:02,080
that are about

1861
01:09:02,080 --> 01:09:03,040
do

1862
01:09:03,040 --> 01:09:06,080
the do properties or the estimated work

1863
01:09:06,080 --> 01:09:07,279
for example

1864
01:09:07,279 --> 01:09:09,600
and there's also advanced scheduling

1865
01:09:09,600 --> 01:09:12,239
properties

1866
01:09:13,040 --> 01:09:15,939
like recurrences recurrent tasks or

1867
01:09:15,939 --> 01:09:17,279
[Music]

1868
01:09:17,279 --> 01:09:19,920
some automated scheduling features so if

1869
01:09:19,920 --> 01:09:21,600
you can go on to the next slide i have

1870
01:09:21,600 --> 01:09:22,560
them

1871
01:09:22,560 --> 01:09:24,479
i have them a bit uh

1872
01:09:24,479 --> 01:09:26,799
yes okay so there again the three the

1873
01:09:26,799 --> 01:09:28,560
three ones yes so and

1874
01:09:28,560 --> 01:09:30,479
here is a list of the

1875
01:09:30,479 --> 01:09:34,000
of the classes that would be inside the

1876
01:09:34,000 --> 01:09:35,920
common group uh i don't want to go

1877
01:09:35,920 --> 01:09:37,839
through all of them it's just to get you

1878
01:09:37,839 --> 01:09:39,920
like a glimpse what's

1879
01:09:39,920 --> 01:09:41,279
what

1880
01:09:41,279 --> 01:09:43,359
what's my first initial idea of having

1881
01:09:43,359 --> 01:09:44,640
in there

1882
01:09:44,640 --> 01:09:49,279
um yeah so for example i don't know

1883
01:09:49,279 --> 01:09:50,399
color

1884
01:09:50,399 --> 01:09:51,359
title

1885
01:09:51,359 --> 01:09:53,359
things that are just very

1886
01:09:53,359 --> 01:09:54,880
very common

1887
01:09:54,880 --> 01:09:58,640
or also a bit more outlandish but uh

1888
01:09:58,640 --> 01:09:59,760
yeah so

1889
01:09:59,760 --> 01:10:02,080
it makes sense to group them somehow if

1890
01:10:02,080 --> 01:10:04,000
you continue to the next one are the

1891
01:10:04,000 --> 01:10:06,239
time estimation properties

1892
01:10:06,239 --> 01:10:08,320
which basically would add

1893
01:10:08,320 --> 01:10:11,440
alerts and time zone classes

1894
01:10:11,440 --> 01:10:13,280
and um

1895
01:10:13,280 --> 01:10:15,280
yeah also add some some time estimation

1896
01:10:15,280 --> 01:10:17,920
properties as i said the estimated work

1897
01:10:17,920 --> 01:10:19,440
estimated duration

1898
01:10:19,440 --> 01:10:21,360
if you click to the next one there is

1899
01:10:21,360 --> 01:10:22,800
advanced scheduling

1900
01:10:22,800 --> 01:10:24,719
which would add recurrence rule class

1901
01:10:24,719 --> 01:10:26,719
and nd class

1902
01:10:26,719 --> 01:10:27,760
and

1903
01:10:27,760 --> 01:10:30,719
add a bunch of properties like free busy

1904
01:10:30,719 --> 01:10:32,640
status

1905
01:10:32,640 --> 01:10:35,920
recurrent specific properties as well

1906
01:10:35,920 --> 01:10:38,080
so yeah that's a the first idea of

1907
01:10:38,080 --> 01:10:40,080
grouping that and as you can see it's

1908
01:10:40,080 --> 01:10:42,960
quite a lot already and it

1909
01:10:42,960 --> 01:10:45,520
i just think to spark interest

1910
01:10:45,520 --> 01:10:47,840
uh for uh

1911
01:10:47,840 --> 01:10:50,080
issue tracking and and also kanban

1912
01:10:50,080 --> 01:10:50,960
boards

1913
01:10:50,960 --> 01:10:53,440
it makes sense to

1914
01:10:53,440 --> 01:10:54,560
yeah so

1915
01:10:54,560 --> 01:10:57,679
either we we say uh

1916
01:10:57,679 --> 01:10:59,360
it's not really required to implement

1917
01:10:59,360 --> 01:11:02,000
the whole thing in general or we say

1918
01:11:02,000 --> 01:11:04,320
it's uh

1919
01:11:04,320 --> 01:11:06,000
there are certain sets

1920
01:11:06,000 --> 01:11:08,000
that you can choose from

1921
01:11:08,000 --> 01:11:10,000
like yeah

1922
01:11:10,000 --> 01:11:11,920
yeah okay this is kind of again so i i

1923
01:11:11,920 --> 01:11:13,920
think i finally understand where we're

1924
01:11:13,920 --> 01:11:16,080
going here so okay um

1925
01:11:16,080 --> 01:11:16,800
i

1926
01:11:16,800 --> 01:11:19,040
i think what rather than specifying

1927
01:11:19,040 --> 01:11:21,520
which properties go in various groups i

1928
01:11:21,520 --> 01:11:23,520
think you should just

1929
01:11:23,520 --> 01:11:24,960
come up with

1930
01:11:24,960 --> 01:11:25,760
different

1931
01:11:25,760 --> 01:11:27,760
levels of capability so anything in

1932
01:11:27,760 --> 01:11:29,280
common which would you describe in the

1933
01:11:29,280 --> 01:11:31,360
text would essentially be mandatory to

1934
01:11:31,360 --> 01:11:34,159
to implement four tasks which we all we

1935
01:11:34,159 --> 01:11:36,480
need to be interoperable anyways and i'm

1936
01:11:36,480 --> 01:11:37,920
either very repeat probably said that

1937
01:11:37,920 --> 01:11:39,920
before i did

1938
01:11:39,920 --> 01:11:40,800
then

1939
01:11:40,800 --> 01:11:42,239
if you've got

1940
01:11:42,239 --> 01:11:44,800
other levels of feature sets

1941
01:11:44,800 --> 01:11:46,960
you describe in the text

1942
01:11:46,960 --> 01:11:48,719
what that feature set entails in terms

1943
01:11:48,719 --> 01:11:51,040
of properties and just make those

1944
01:11:51,040 --> 01:11:54,239
sub capabilities underneath the actual

1945
01:11:54,239 --> 01:11:56,239
js task capability so within the object

1946
01:11:56,239 --> 01:11:58,320
you say supports time estimation true

1947
01:11:58,320 --> 01:12:00,400
false advanced scheduling true false and

1948
01:12:00,400 --> 01:12:02,000
whatever else you might end up in there

1949
01:12:02,000 --> 01:12:03,840
i think that's probably the easiest way

1950
01:12:03,840 --> 01:12:05,760
to go about this

1951
01:12:05,760 --> 01:12:07,280
that makes sense

1952
01:12:07,280 --> 01:12:09,440
that's nice yeah okay

1953
01:12:09,440 --> 01:12:10,400
okay

1954
01:12:10,400 --> 01:12:11,600
good

1955
01:12:11,600 --> 01:12:12,960
um okay

1956
01:12:12,960 --> 01:12:15,120
so

1957
01:12:15,120 --> 01:12:18,159
so if that grouping comes then

1958
01:12:18,159 --> 01:12:20,800
i would suggest to also introduce a new

1959
01:12:20,800 --> 01:12:24,000
set error for a task set so that you

1960
01:12:24,000 --> 01:12:25,920
don't have necessarily

1961
01:12:25,920 --> 01:12:28,320
an invalid properties error might not be

1962
01:12:28,320 --> 01:12:30,719
appropriate because the system most

1963
01:12:30,719 --> 01:12:32,800
likely will know about the property but

1964
01:12:32,800 --> 01:12:34,960
decides not to implement it

1965
01:12:34,960 --> 01:12:38,000
so probably i don't know like a not

1966
01:12:38,000 --> 01:12:39,440
supported

1967
01:12:39,440 --> 01:12:41,840
set error that might even

1968
01:12:41,840 --> 01:12:42,880
give the

1969
01:12:42,880 --> 01:12:45,679
required capability uh might be a good

1970
01:12:45,679 --> 01:12:49,120
thing but um yeah i would just

1971
01:12:49,120 --> 01:12:51,120
as to use a set error that's that can be

1972
01:12:51,120 --> 01:12:52,880
discerned from a

1973
01:12:52,880 --> 01:12:57,400
from a regular invalid properties error

1974
01:13:15,360 --> 01:13:16,960
sorry about that yeah but on the other

1975
01:13:16,960 --> 01:13:19,280
hand it needs to know

1976
01:13:19,280 --> 01:13:22,080
that it um only advertises in its

1977
01:13:22,080 --> 01:13:24,719
capabilities a subset

1978
01:13:24,719 --> 01:13:28,640
of the js task properties so in a way

1979
01:13:28,640 --> 01:13:30,880
i would expect the implementation to be

1980
01:13:30,880 --> 01:13:32,880
able to at least know about properties

1981
01:13:32,880 --> 01:13:37,719
it doesn't support so but anyway

1982
01:13:48,000 --> 01:13:49,600
this is kind of again so agreeing with

1983
01:13:49,600 --> 01:13:50,640
robert that

1984
01:13:50,640 --> 01:13:51,440
um

1985
01:13:51,440 --> 01:13:53,360
for the the base draft yes an

1986
01:13:53,360 --> 01:13:54,800
implementation should know if it's

1987
01:13:54,800 --> 01:13:56,239
excluding certain features and

1988
01:13:56,239 --> 01:13:57,360
properties

1989
01:13:57,360 --> 01:13:58,239
but

1990
01:13:58,239 --> 01:13:59,679
if there's an extension to this draft

1991
01:13:59,679 --> 01:14:00,960
down the road you can't expect the

1992
01:14:00,960 --> 01:14:02,719
current implementation to know what

1993
01:14:02,719 --> 01:14:05,280
hasn't been implemented yet so i can see

1994
01:14:05,280 --> 01:14:07,760
there makes there's a case for

1995
01:14:07,760 --> 01:14:10,480
uh unsupported capability but then for

1996
01:14:10,480 --> 01:14:11,920
other things that it's totally unaware

1997
01:14:11,920 --> 01:14:14,800
of not supported still makes sense

1998
01:14:14,800 --> 01:14:16,719
okay i guess i'm in favor of both one's

1999
01:14:16,719 --> 01:14:18,320
more descriptive than the other one you

2000
01:14:18,320 --> 01:14:20,719
fall back to not supported if you have

2001
01:14:20,719 --> 01:14:22,960
no idea what's coming at you

2002
01:14:22,960 --> 01:14:25,199
okay

2003
01:14:25,199 --> 01:14:27,600
all right so if you could

2004
01:14:27,600 --> 01:14:29,760
the next how much time do i have left

2005
01:14:29,760 --> 01:14:32,159
roughly

2006
01:14:32,239 --> 01:14:33,920
is it fine okay

2007
01:14:33,920 --> 01:14:36,000
so here again i i

2008
01:14:36,000 --> 01:14:39,280
wrote down a mapping between

2009
01:14:39,280 --> 01:14:43,040
different task systems and the groups

2010
01:14:43,040 --> 01:14:45,440
that i currently am using uh just to

2011
01:14:45,440 --> 01:14:47,520
double check that the grouping kind of

2012
01:14:47,520 --> 01:14:50,560
makes sense so for grouper system

2013
01:14:50,560 --> 01:14:53,840
obviously we typically want to have

2014
01:14:53,840 --> 01:14:56,480
we typically want to have all of them so

2015
01:14:56,480 --> 01:14:58,719
common group time estimation scheduling

2016
01:14:58,719 --> 01:15:00,640
you just want that

2017
01:15:00,640 --> 01:15:04,719
then the simple is supposed to be a very

2018
01:15:04,719 --> 01:15:06,880
simple task application it's just do

2019
01:15:06,880 --> 01:15:08,560
done

2020
01:15:08,560 --> 01:15:10,159
i didn't write down a specific system

2021
01:15:10,159 --> 01:15:11,440
for that but

2022
01:15:11,440 --> 01:15:13,199
yeah you can imagine there is one out

2023
01:15:13,199 --> 01:15:16,320
there that doesn't need time estimation

2024
01:15:16,320 --> 01:15:18,960
or advanced scheduling for kanban

2025
01:15:18,960 --> 01:15:20,400
systems

2026
01:15:20,400 --> 01:15:21,600
um

2027
01:15:21,600 --> 01:15:23,360
yeah they would they would typically use

2028
01:15:23,360 --> 01:15:25,199
a time estimation thing but they could

2029
01:15:25,199 --> 01:15:26,159
do

2030
01:15:26,159 --> 01:15:27,600
without

2031
01:15:27,600 --> 01:15:29,520
recurrences and

2032
01:15:29,520 --> 01:15:32,080
and scheduling properties

2033
01:15:32,080 --> 01:15:33,440
for example microsoft planner and

2034
01:15:33,440 --> 01:15:35,360
extorted trello

2035
01:15:35,360 --> 01:15:38,239
and for issue tracking systems they

2036
01:15:38,239 --> 01:15:40,080
typically

2037
01:15:40,080 --> 01:15:42,640
make do with the common group

2038
01:15:42,640 --> 01:15:44,000
already

2039
01:15:44,000 --> 01:15:45,679
with

2040
01:15:45,679 --> 01:15:47,760
some slight exception for gyra and red

2041
01:15:47,760 --> 01:15:49,679
monday they have one

2042
01:15:49,679 --> 01:15:51,280
do

2043
01:15:51,280 --> 01:15:53,280
property

2044
01:15:53,280 --> 01:15:54,719
as i saw

2045
01:15:54,719 --> 01:15:56,000
um

2046
01:15:56,000 --> 01:15:57,520
yeah but

2047
01:15:57,520 --> 01:15:59,440
i think roughly the

2048
01:15:59,440 --> 01:16:02,480
it kind of looks like it makes sense

2049
01:16:02,480 --> 01:16:05,440
right now the groups that i chose

2050
01:16:05,440 --> 01:16:06,880
but yeah of course it's not the final

2051
01:16:06,880 --> 01:16:09,120
iteration so

2052
01:16:09,120 --> 01:16:10,000
okay

2053
01:16:10,000 --> 01:16:13,120
um if you could go to the next slide

2054
01:16:13,120 --> 01:16:15,360
yes blob created i already sent the mail

2055
01:16:15,360 --> 01:16:19,360
to the mailing list about that so

2056
01:16:19,679 --> 01:16:21,520
i saw that in several systems as well so

2057
01:16:21,520 --> 01:16:25,360
they they tag an attachment basically uh

2058
01:16:25,360 --> 01:16:27,280
with the time it was created it was

2059
01:16:27,280 --> 01:16:28,560
uploaded

2060
01:16:28,560 --> 01:16:29,760
um

2061
01:16:29,760 --> 01:16:32,159
the first question i i would have is do

2062
01:16:32,159 --> 01:16:33,760
we actually want to have this in this

2063
01:16:33,760 --> 01:16:34,960
back

2064
01:16:34,960 --> 01:16:37,199
it's not a very important thing i think

2065
01:16:37,199 --> 01:16:40,080
but it's it's a nice to have i would say

2066
01:16:40,080 --> 01:16:42,159
and

2067
01:16:42,159 --> 01:16:42,960
yeah

2068
01:16:42,960 --> 01:16:44,480
and um

2069
01:16:44,480 --> 01:16:46,719
if you want this yeah so

2070
01:16:46,719 --> 01:16:48,719
i think the the the mailing list

2071
01:16:48,719 --> 01:16:51,360
discussion ended with we could

2072
01:16:51,360 --> 01:16:53,520
use it as an extension add it as an

2073
01:16:53,520 --> 01:16:55,920
extension to the an object that

2074
01:16:55,920 --> 01:16:58,320
references a blob and not to the blob

2075
01:16:58,320 --> 01:17:00,239
itself

2076
01:17:00,239 --> 01:17:03,679
yeah so yeah maybe neil already has a

2077
01:17:03,679 --> 01:17:06,480
an opinion on that

2078
01:17:06,560 --> 01:17:08,719
yes i was just going to say it should

2079
01:17:08,719 --> 01:17:09,920
definitely be the

2080
01:17:09,920 --> 01:17:12,000
thing that references the blob that has

2081
01:17:12,000 --> 01:17:13,520
created that's the thing that has all

2082
01:17:13,520 --> 01:17:16,960
the metadata the blob itself is just

2083
01:17:16,960 --> 01:17:20,159
the bytes of data um like you can't

2084
01:17:20,159 --> 01:17:23,280
assume that you know it could reuse it

2085
01:17:23,280 --> 01:17:25,440
uh between users even if you know to

2086
01:17:25,440 --> 01:17:27,920
save space um and reference count it

2087
01:17:27,920 --> 01:17:29,920
like the metadata is all in the thing

2088
01:17:29,920 --> 01:17:31,360
that's referencing it so that's where

2089
01:17:31,360 --> 01:17:34,239
that should go if you have it

2090
01:17:34,320 --> 01:17:37,199
all right uh so and the the question

2091
01:17:37,199 --> 01:17:40,880
that i have is uh would that be the

2092
01:17:40,880 --> 01:17:42,880
for jay's calendar it would be the the

2093
01:17:42,880 --> 01:17:44,640
for this particular thing it would be

2094
01:17:44,640 --> 01:17:45,840
the links

2095
01:17:45,840 --> 01:17:47,360
um

2096
01:17:47,360 --> 01:17:51,120
uh the the link object

2097
01:17:51,120 --> 01:17:52,080
so

2098
01:17:52,080 --> 01:17:55,360
i'm not sure would we just extend

2099
01:17:55,360 --> 01:17:58,560
the link object with a single um

2100
01:17:58,560 --> 01:18:00,400
property or would that be sufficient i

2101
01:18:00,400 --> 01:18:02,239
don't know yeah you can you know

2102
01:18:02,239 --> 01:18:03,920
everything's in a registry so it's easy

2103
01:18:03,920 --> 01:18:04,800
to add

2104
01:18:04,800 --> 01:18:06,080
properties on it you can just say that

2105
01:18:06,080 --> 01:18:07,520
the creative property is allowed to be

2106
01:18:07,520 --> 01:18:09,679
there on the link object as well

2107
01:18:09,679 --> 01:18:10,960
when that's created

2108
01:18:10,960 --> 01:18:14,159
i think i'll be reading forward

2109
01:18:14,159 --> 01:18:15,679
okay

2110
01:18:15,679 --> 01:18:16,800
yeah

2111
01:18:16,800 --> 01:18:19,120
as i wrote on the mailing list already

2112
01:18:19,120 --> 01:18:21,760
um yeah we can add we could add the

2113
01:18:21,760 --> 01:18:24,560
created timestamp to the link object if

2114
01:18:24,560 --> 01:18:27,040
we do that i'd rather say we should add

2115
01:18:27,040 --> 01:18:30,239
it to any object because

2116
01:18:30,239 --> 01:18:32,239
why only for link then if you really

2117
01:18:32,239 --> 01:18:33,600
want to track the

2118
01:18:33,600 --> 01:18:37,360
timestamp when this object was added

2119
01:18:37,360 --> 01:18:39,920
and with that being said i promised two

2120
01:18:39,920 --> 01:18:43,920
itfs ago to come up with a spec um that

2121
01:18:43,920 --> 01:18:46,960
tracks property changes

2122
01:18:46,960 --> 01:18:49,120
in a

2123
01:18:49,120 --> 01:18:50,159
in a

2124
01:18:50,159 --> 01:18:53,040
that that fits all jmap object types

2125
01:18:53,040 --> 01:18:55,360
basically

2126
01:18:55,360 --> 01:18:57,120
so

2127
01:18:57,120 --> 01:18:59,600
we could also take this as a as an

2128
01:18:59,600 --> 01:19:01,520
initiative now to

2129
01:19:01,520 --> 01:19:04,560
where this might be already useful

2130
01:19:04,560 --> 01:19:06,159
so

2131
01:19:06,159 --> 01:19:08,800
yeah i would even prefer the last but it

2132
01:19:08,800 --> 01:19:11,600
means more work for me um but i might

2133
01:19:11,600 --> 01:19:15,120
find time to come up with a draft and

2134
01:19:15,120 --> 01:19:17,679
and and that it comes quite in time for

2135
01:19:17,679 --> 01:19:19,520
gmat tasks too

2136
01:19:19,520 --> 01:19:23,000
yeah it makes sense

2137
01:19:23,600 --> 01:19:25,440
i was going to say i think that's

2138
01:19:25,440 --> 01:19:27,920
somewhat orthogonal to this the created

2139
01:19:27,920 --> 01:19:30,159
time on a file is is when the file was

2140
01:19:30,159 --> 01:19:31,520
created which is not necessarily when

2141
01:19:31,520 --> 01:19:32,800
you added it to

2142
01:19:32,800 --> 01:19:35,440
the jmap store you want to say

2143
01:19:35,440 --> 01:19:36,960
here i'm uploading a file and this is

2144
01:19:36,960 --> 01:19:39,520
the creation time from the file system

2145
01:19:39,520 --> 01:19:41,280
um i want i want to say this file was

2146
01:19:41,280 --> 01:19:43,360
created six months ago and that you're

2147
01:19:43,360 --> 01:19:45,440
not going to be able to a gem up event

2148
01:19:45,440 --> 01:19:46,880
history is not going to give you that so

2149
01:19:46,880 --> 01:19:48,080
it would be a separate property yeah

2150
01:19:48,080 --> 01:19:49,360
this is what i wrote on the mailing list

2151
01:19:49,360 --> 01:19:52,159
so it very much depends on the semantics

2152
01:19:52,159 --> 01:19:53,920
of the created timestamp if it's to

2153
01:19:53,920 --> 01:19:56,000
create a timestamp for the link

2154
01:19:56,000 --> 01:19:58,239
then um i would assume that's when the

2155
01:19:58,239 --> 01:20:00,560
link object was created when it's the

2156
01:20:00,560 --> 01:20:04,159
created timestamp for the underlying

2157
01:20:04,159 --> 01:20:06,400
data on disk then that's something

2158
01:20:06,400 --> 01:20:08,719
different so i don't know what what's

2159
01:20:08,719 --> 01:20:11,040
the purpose of of the created timestamp

2160
01:20:11,040 --> 01:20:12,880
in this context

2161
01:20:12,880 --> 01:20:15,440
i would say there's no

2162
01:20:15,440 --> 01:20:17,760
big consensus on this like i would need

2163
01:20:17,760 --> 01:20:19,679
to look a bit deeper but i think it's

2164
01:20:19,679 --> 01:20:21,120
fine if we

2165
01:20:21,120 --> 01:20:23,360
come up with a solution that fits

2166
01:20:23,360 --> 01:20:25,679
for us

2167
01:20:27,920 --> 01:20:29,440
i think that this is somewhat related

2168
01:20:29,440 --> 01:20:30,800
you mentioned before

2169
01:20:30,800 --> 01:20:34,560
sorry i think that's a gmx jmf specific

2170
01:20:34,560 --> 01:20:36,080
topic here because you have that blob

2171
01:20:36,080 --> 01:20:37,679
storage which allows you to reference

2172
01:20:37,679 --> 01:20:39,840
objects from many

2173
01:20:39,840 --> 01:20:42,159
um you know potential items which is

2174
01:20:42,159 --> 01:20:43,840
something you typically can't do in most

2175
01:20:43,840 --> 01:20:45,760
other systems so i think what we are

2176
01:20:45,760 --> 01:20:47,360
talking about here is really like when

2177
01:20:47,360 --> 01:20:51,199
the user linked it to the actual item

2178
01:20:51,199 --> 01:20:53,280
irrespective of when the actual file was

2179
01:20:53,280 --> 01:20:55,360
already created which i understand which

2180
01:20:55,360 --> 01:20:57,760
i understand um

2181
01:20:57,760 --> 01:20:59,440
in the jmap system might even be from

2182
01:20:59,440 --> 01:21:02,639
another user probably i don't know

2183
01:21:02,639 --> 01:21:04,480
yeah so i think what we're talking about

2184
01:21:04,480 --> 01:21:06,719
here is really in the context of the

2185
01:21:06,719 --> 01:21:07,679
item

2186
01:21:07,679 --> 01:21:11,040
the link the time of link

2187
01:21:11,840 --> 01:21:12,719
yes

2188
01:21:12,719 --> 01:21:16,719
all right so there's not much left

2189
01:21:16,719 --> 01:21:18,880
so keywords was already discussed in the

2190
01:21:18,880 --> 01:21:20,480
mailing list already and i think that

2191
01:21:20,480 --> 01:21:22,800
makes a lot of sense to have a

2192
01:21:22,800 --> 01:21:25,520
what was that keyword color

2193
01:21:25,520 --> 01:21:29,280
property for the task list

2194
01:21:29,280 --> 01:21:30,080
with

2195
01:21:30,080 --> 01:21:31,199
the colors

2196
01:21:31,199 --> 01:21:35,360
that we have for each keyword and then

2197
01:21:35,520 --> 01:21:38,000
you have a separate keyword

2198
01:21:38,000 --> 01:21:39,360
property

2199
01:21:39,360 --> 01:21:42,080
or change the keyword property to be not

2200
01:21:42,080 --> 01:21:44,800
the same simple string but

2201
01:21:44,800 --> 01:21:48,560
uh yeah something a bit more complex um

2202
01:21:48,560 --> 01:21:50,239
yeah as already discussed on the mailing

2203
01:21:50,239 --> 01:21:51,199
list

2204
01:21:51,199 --> 01:21:52,159
um

2205
01:21:52,159 --> 01:21:54,639
it probably makes sense to keep that

2206
01:21:54,639 --> 01:21:57,360
in sync with the category categories

2207
01:21:57,360 --> 01:21:59,600
property so to be able to do that with

2208
01:21:59,600 --> 01:22:01,600
that as well

2209
01:22:01,600 --> 01:22:03,679
and it might also make sense to do that

2210
01:22:03,679 --> 01:22:06,480
in gmo for calendars as well to not

2211
01:22:06,480 --> 01:22:09,120
be able to do that for tasks only but

2212
01:22:09,120 --> 01:22:12,239
also for calendar events so is there an

2213
01:22:12,239 --> 01:22:14,959
opinion on that

2214
01:22:15,280 --> 01:22:18,159
it's not something i've

2215
01:22:18,159 --> 01:22:20,480
seen implanted in calendars at the

2216
01:22:20,480 --> 01:22:22,879
moment

2217
01:22:23,040 --> 01:22:24,239
once you start adding these extra

2218
01:22:24,239 --> 01:22:25,840
properties like this it makes me want to

2219
01:22:25,840 --> 01:22:27,280
wonder whether it should be a separate

2220
01:22:27,280 --> 01:22:30,239
data type like is this

2221
01:22:30,239 --> 01:22:31,440
you know

2222
01:22:31,440 --> 01:22:33,600
you should have a

2223
01:22:33,600 --> 01:22:36,560
like a taskless object because it's a

2224
01:22:36,560 --> 01:22:38,960
um

2225
01:22:38,960 --> 01:22:41,440
this is another way of uh it's like a

2226
01:22:41,440 --> 01:22:44,639
label essentially um and then you just

2227
01:22:44,639 --> 01:22:47,280
reference that

2228
01:22:49,040 --> 01:22:51,440
i very much like the proposal that braun

2229
01:22:51,440 --> 01:22:54,719
has written on the mailing list for that

2230
01:22:54,719 --> 01:22:56,960
okay

2231
01:22:56,960 --> 01:22:58,560
yeah

2232
01:22:58,560 --> 01:23:00,719
okay so we basically as i understood we

2233
01:23:00,719 --> 01:23:02,239
want to keep that out from

2234
01:23:02,239 --> 01:23:06,320
discussing calendars right now

2235
01:23:06,560 --> 01:23:07,600
but yeah

2236
01:23:07,600 --> 01:23:09,120
it might make sense to sync that with

2237
01:23:09,120 --> 01:23:12,080
categories as well so

2238
01:23:12,080 --> 01:23:13,360
okay

2239
01:23:13,360 --> 01:23:16,719
um yes future work is basically we still

2240
01:23:16,719 --> 01:23:18,239
have to

2241
01:23:18,239 --> 01:23:20,960
get some more feedback or yeah from from

2242
01:23:20,960 --> 01:23:22,800
the from the task system vendors we

2243
01:23:22,800 --> 01:23:25,040
already prepared something for that

2244
01:23:25,040 --> 01:23:27,760
still needs to happen and also there are

2245
01:23:27,760 --> 01:23:28,639
still

2246
01:23:28,639 --> 01:23:29,440
two

2247
01:23:29,440 --> 01:23:31,679
more or less complex properties like

2248
01:23:31,679 --> 01:23:33,360
comment

2249
01:23:33,360 --> 01:23:35,440
which we don't want to exclude because a

2250
01:23:35,440 --> 01:23:38,080
lot of systems

2251
01:23:38,080 --> 01:23:39,600
is very important for a lot of systems

2252
01:23:39,600 --> 01:23:40,800
as well

2253
01:23:40,800 --> 01:23:43,520
and the history property was already

2254
01:23:43,520 --> 01:23:45,280
teased in previous meetings we still

2255
01:23:45,280 --> 01:23:48,960
have yet to tackle that one

2256
01:23:51,199 --> 01:23:54,400
okay i just have uh com short commands

2257
01:23:54,400 --> 01:23:56,800
for the properties that were mentioned

2258
01:23:56,800 --> 01:23:59,280
at the beginning so okay for estimated

2259
01:23:59,280 --> 01:24:00,719
work

2260
01:24:00,719 --> 01:24:02,960
i think this property is useful i'm not

2261
01:24:02,960 --> 01:24:05,840
sure if it's useful if it has uh

2262
01:24:05,840 --> 01:24:08,400
an arbitrary number in it because i

2263
01:24:08,400 --> 01:24:10,480
would assume that the meaning of these

2264
01:24:10,480 --> 01:24:12,000
numbers will differ

2265
01:24:12,000 --> 01:24:16,800
by teams uh or by products so yeah

2266
01:24:16,800 --> 01:24:19,600
i'm not sure how much value is in

2267
01:24:19,600 --> 01:24:21,520
allowing just any number without giving

2268
01:24:21,520 --> 01:24:22,480
hints

2269
01:24:22,480 --> 01:24:25,199
what number range indicates what

2270
01:24:25,199 --> 01:24:26,480
um

2271
01:24:26,480 --> 01:24:30,400
for the impact property uh i wonder if

2272
01:24:30,400 --> 01:24:31,360
if that

2273
01:24:31,360 --> 01:24:33,840
can be if that if that is necessary if

2274
01:24:33,840 --> 01:24:35,360
the priority

2275
01:24:35,360 --> 01:24:36,639
property

2276
01:24:36,639 --> 01:24:39,199
um is enough

2277
01:24:39,199 --> 01:24:40,560
um

2278
01:24:40,560 --> 01:24:42,320
and uh what was the last year for the

2279
01:24:42,320 --> 01:24:45,840
source property i wonder

2280
01:24:45,840 --> 01:24:47,520
how

2281
01:24:47,520 --> 01:24:49,600
how much value it provides if it's just

2282
01:24:49,600 --> 01:24:51,199
a free text

2283
01:24:51,199 --> 01:24:52,400
if

2284
01:24:52,400 --> 01:24:54,239
with different implementations put the

2285
01:24:54,239 --> 01:24:56,560
same thing in or could there be an

2286
01:24:56,560 --> 01:24:58,560
enumeration of

2287
01:24:58,560 --> 01:24:59,520
of

2288
01:24:59,520 --> 01:25:02,000
of typical cases where source property

2289
01:25:02,000 --> 01:25:03,520
is set

2290
01:25:03,520 --> 01:25:05,760
or should that be the product id of

2291
01:25:05,760 --> 01:25:07,600
whatever

2292
01:25:07,600 --> 01:25:09,760
product generated

2293
01:25:09,760 --> 01:25:11,920
was the source of that

2294
01:25:11,920 --> 01:25:14,560
task yeah so i'm i'm not sure how a free

2295
01:25:14,560 --> 01:25:17,040
text video alone will be inter-available

2296
01:25:17,040 --> 01:25:20,560
between systems okay

2297
01:25:22,080 --> 01:25:23,760
yes

2298
01:25:23,760 --> 01:25:27,000
i'm sorry

2299
01:25:27,840 --> 01:25:30,080
sorry

2300
01:25:30,159 --> 01:25:32,000
i'll just present from here thanks yeah

2301
01:25:32,000 --> 01:25:34,719
thanks alexey

2302
01:25:36,960 --> 01:25:39,520
make it quick because the document

2303
01:25:39,520 --> 01:25:41,760
hasn't been updated

2304
01:25:41,760 --> 01:25:44,480
next slide

2305
01:25:45,360 --> 01:25:47,120
um

2306
01:25:47,120 --> 01:25:52,480
so yeah as a reminder this is to uh

2307
01:25:52,480 --> 01:25:54,400
gmap extension to allow

2308
01:25:54,400 --> 01:25:57,920
signing and or encrypting on send so

2309
01:25:57,920 --> 01:25:58,960
there are two

2310
01:25:58,960 --> 01:26:01,920
uh boolean attributes added

2311
01:26:01,920 --> 01:26:04,719
by default they are absent and you know

2312
01:26:04,719 --> 01:26:06,320
may the signing or no encryption would

2313
01:26:06,320 --> 01:26:08,320
happen

2314
01:26:08,320 --> 01:26:10,960
if both are specified then its first

2315
01:26:10,960 --> 01:26:14,159
message is first signed and encrypted

2316
01:26:14,159 --> 01:26:16,719
next slide

2317
01:26:18,560 --> 01:26:23,400
three ish open issues

2318
01:26:23,920 --> 01:26:26,719
one is to what extent we need to control

2319
01:26:26,719 --> 01:26:28,960
uh

2320
01:26:29,360 --> 01:26:31,360
how the sign message is generated there

2321
01:26:31,360 --> 01:26:32,560
are two

2322
01:26:32,560 --> 01:26:34,639
common ways of doing this using multiple

2323
01:26:34,639 --> 01:26:36,719
sign or

2324
01:26:36,719 --> 01:26:39,840
application pks7 mime

2325
01:26:39,840 --> 01:26:41,600
um

2326
01:26:41,600 --> 01:26:43,199
if i don't get any feedback learning

2327
01:26:43,199 --> 01:26:46,080
tentatively i'll probably suggest that

2328
01:26:46,080 --> 01:26:47,920
there is a boolean to control this with

2329
01:26:47,920 --> 01:26:49,760
application cases seven mind being the

2330
01:26:49,760 --> 01:26:52,000
default

2331
01:26:52,000 --> 01:26:53,840
um

2332
01:26:53,840 --> 01:26:56,000
as far as header protection is concerned

2333
01:26:56,000 --> 01:26:57,920
uh lamps working group is working on

2334
01:26:57,920 --> 01:27:01,280
this and actually uh

2335
01:27:01,360 --> 01:27:03,760
this atf will announce that we made some

2336
01:27:03,760 --> 01:27:05,760
progress on this so there is some hope

2337
01:27:05,760 --> 01:27:09,440
that this document will complete um

2338
01:27:09,440 --> 01:27:10,880
so i would say

2339
01:27:10,880 --> 01:27:13,440
yes we probably need to have another

2340
01:27:13,440 --> 01:27:15,199
boolean to control this for backward

2341
01:27:15,199 --> 01:27:17,360
compatibility

2342
01:27:17,360 --> 01:27:18,480
uh

2343
01:27:18,480 --> 01:27:21,040
with the default being probably no uh

2344
01:27:21,040 --> 01:27:23,640
don't protect headers

2345
01:27:23,640 --> 01:27:25,840
[Music]

2346
01:27:25,840 --> 01:27:29,679
and then the last question is

2347
01:27:29,679 --> 01:27:33,520
whether this needs to be extended for

2348
01:27:33,520 --> 01:27:37,040
a spam decryption um and

2349
01:27:37,040 --> 01:27:38,560
well there is one way of doing this

2350
01:27:38,560 --> 01:27:41,120
through decrypted blobs cool daniel's

2351
01:27:41,120 --> 01:27:42,480
just popped up in a queue do you want to

2352
01:27:42,480 --> 01:27:44,959
say something

2353
01:27:45,280 --> 01:27:47,600
yeah um i mean lexi may feel differently

2354
01:27:47,600 --> 01:27:49,520
about where we're landing on the header

2355
01:27:49,520 --> 01:27:52,880
protection draft but uh i believe we're

2356
01:27:52,880 --> 01:27:54,560
in the position where

2357
01:27:54,560 --> 01:27:56,800
the default should be able to be true

2358
01:27:56,800 --> 01:27:58,560
um because i think the generated

2359
01:27:58,560 --> 01:28:00,960
messages won't actually have problems

2360
01:28:00,960 --> 01:28:02,159
um

2361
01:28:02,159 --> 01:28:03,199
so i think it'd be a shame if the

2362
01:28:03,199 --> 01:28:05,120
default if we baked a default of false

2363
01:28:05,120 --> 01:28:07,519
in here

2364
01:28:08,560 --> 01:28:10,880
uh for header protection

2365
01:28:10,880 --> 01:28:12,800
um the second question is about how do

2366
01:28:12,800 --> 01:28:15,360
you think um

2367
01:28:15,360 --> 01:28:17,760
the s mime signing

2368
01:28:17,760 --> 01:28:19,280
we're talking about delegating here

2369
01:28:19,280 --> 01:28:21,600
secret keys to the jmap server

2370
01:28:21,600 --> 01:28:23,600
yes

2371
01:28:23,600 --> 01:28:25,760
okay

2372
01:28:25,760 --> 01:28:28,480
um that definitely changes the idea of

2373
01:28:28,480 --> 01:28:29,600
end to end

2374
01:28:29,600 --> 01:28:33,040
at some level uh yes and uh depending on

2375
01:28:33,040 --> 01:28:34,639
how exhibited the slightly different

2376
01:28:34,639 --> 01:28:36,560
trust model right yeah the theory here

2377
01:28:36,560 --> 01:28:38,560
is that maybe the gem app server and the

2378
01:28:38,560 --> 01:28:41,040
jmf client are within devices under your

2379
01:28:41,040 --> 01:28:44,080
control so that is still your end um for

2380
01:28:44,080 --> 01:28:46,560
that purpose gmap's not really designed

2381
01:28:46,560 --> 01:28:48,000
so much to

2382
01:28:48,000 --> 01:28:48,960
to

2383
01:28:48,960 --> 01:28:50,719
only pass encrypted blobs if you did

2384
01:28:50,719 --> 01:28:52,560
then there's no point having this at all

2385
01:28:52,560 --> 01:28:54,239
um so if you are using this it's because

2386
01:28:54,239 --> 01:28:56,159
you believe that you control the server

2387
01:28:56,159 --> 01:28:59,839
as well and so it's part of your end

2388
01:29:00,080 --> 01:29:02,320
okay

2389
01:29:07,120 --> 01:29:10,159
um so

2390
01:29:10,159 --> 01:29:12,000
yeah i will uh

2391
01:29:12,000 --> 01:29:14,480
at least implement the first two

2392
01:29:14,480 --> 01:29:16,400
changes next time and then we talk we

2393
01:29:16,400 --> 01:29:20,320
can talk about decryption which is uh

2394
01:29:20,320 --> 01:29:21,679
it's kind of

2395
01:29:21,679 --> 01:29:24,080
complementary feature but it will

2396
01:29:24,080 --> 01:29:26,880
require different approach

2397
01:29:26,880 --> 01:29:29,120
um

2398
01:29:31,280 --> 01:29:34,080
yeah that's the last slide yeah the um

2399
01:29:34,080 --> 01:29:36,080
so what i think i understood from that

2400
01:29:36,080 --> 01:29:39,040
was that we could make it be default to

2401
01:29:39,040 --> 01:29:41,440
was it signing true

2402
01:29:41,440 --> 01:29:44,239
if you request the capability for this

2403
01:29:44,239 --> 01:29:45,280
obviously if you don't request the

2404
01:29:45,280 --> 01:29:46,719
capability then then this property

2405
01:29:46,719 --> 01:29:48,560
doesn't exist but we could default it to

2406
01:29:48,560 --> 01:29:51,120
true everything i think uh gkg was

2407
01:29:51,120 --> 01:29:53,199
talking about header protection actually

2408
01:29:53,199 --> 01:29:55,840
okay if you want to do

2409
01:29:55,840 --> 01:29:57,920
if you do a design encryption by default

2410
01:29:57,920 --> 01:29:59,600
header protection will be true unless

2411
01:29:59,600 --> 01:30:01,840
you okay you disable it

2412
01:30:01,840 --> 01:30:04,320
yes alexa has it right

2413
01:30:04,320 --> 01:30:07,440
cool thank you awesome uh

2414
01:30:07,440 --> 01:30:10,320
with that we're basically done with the

2415
01:30:10,320 --> 01:30:12,400
jmap portion of this other than having a

2416
01:30:12,400 --> 01:30:14,960
quick glance at the milestones but we

2417
01:30:14,960 --> 01:30:16,560
might leave that just to the end and

2418
01:30:16,560 --> 01:30:18,320
move on to extra if that works for

2419
01:30:18,320 --> 01:30:19,920
people just because we're running over

2420
01:30:19,920 --> 01:30:21,440
time

2421
01:30:21,440 --> 01:30:24,400
so looking at the agenda for extra

2422
01:30:24,400 --> 01:30:27,600
the first item we had on here was

2423
01:30:27,600 --> 01:30:30,239
uh extra quota which is with the editors

2424
01:30:30,239 --> 01:30:34,080
is there anything to say on extra quota

2425
01:30:34,080 --> 01:30:34,880
um

2426
01:30:34,880 --> 01:30:37,600
no um i've said it i basically noticed

2427
01:30:37,600 --> 01:30:39,600
that some text to an eye on a website

2428
01:30:39,600 --> 01:30:41,360
was out of date

2429
01:30:41,360 --> 01:30:42,239
uh

2430
01:30:42,239 --> 01:30:43,920
i sent a separate ticket to anna to

2431
01:30:43,920 --> 01:30:46,320
update it it's sort of a procedural i

2432
01:30:46,320 --> 01:30:49,199
think they uh

2433
01:30:49,199 --> 01:30:51,120
they don't want to publish rfc unless

2434
01:30:51,120 --> 01:30:52,800
this is sorted

2435
01:30:52,800 --> 01:30:54,960
but uh even like the page saying you

2436
01:30:54,960 --> 01:30:56,960
know who approved the rfc publication

2437
01:30:56,960 --> 01:30:58,880
already disappeared so i assume that

2438
01:30:58,880 --> 01:31:00,239
it's sort of like

2439
01:31:00,239 --> 01:31:04,000
it's near imminent basically

2440
01:31:04,000 --> 01:31:06,000
awesome thank you all right so the next

2441
01:31:06,000 --> 01:31:08,159
thing on our agenda is

2442
01:31:08,159 --> 01:31:10,800
uh steve action registry

2443
01:31:10,800 --> 01:31:16,199
yes uh very quickly about this um

2444
01:31:17,360 --> 01:31:20,239
basically the registry itself

2445
01:31:20,239 --> 01:31:21,840
the template is relatively

2446
01:31:21,840 --> 01:31:23,760
straightforward and then the main part

2447
01:31:23,760 --> 01:31:25,280
of the job was

2448
01:31:25,280 --> 01:31:27,040
to actually populate it with initial

2449
01:31:27,040 --> 01:31:28,840
registrations

2450
01:31:28,840 --> 01:31:33,280
which hopefully can can just did

2451
01:31:33,280 --> 01:31:36,880
uh so he is now coeditor

2452
01:31:37,679 --> 01:31:39,840
i think we have one little pending

2453
01:31:39,840 --> 01:31:42,159
things about reject

2454
01:31:42,159 --> 01:31:44,080
uh we want to add a comment saying that

2455
01:31:44,080 --> 01:31:44,719
it

2456
01:31:44,719 --> 01:31:46,480
with which actions it conflicts which

2457
01:31:46,480 --> 01:31:48,239
might be useful information

2458
01:31:48,239 --> 01:31:49,760
uh

2459
01:31:49,760 --> 01:31:50,880
but

2460
01:31:50,880 --> 01:31:52,800
basically i think people need to check

2461
01:31:52,800 --> 01:31:54,320
what we've done

2462
01:31:54,320 --> 01:31:55,120
uh

2463
01:31:55,120 --> 01:31:56,560
and you might as well send it to working

2464
01:31:56,560 --> 01:31:59,840
group last call

2465
01:32:02,960 --> 01:32:04,560
all right next on the list is not

2466
01:32:04,560 --> 01:32:05,760
actually what the slides are up there

2467
01:32:05,760 --> 01:32:07,280
for

2468
01:32:07,280 --> 01:32:08,800
because i don't appear to have slides

2469
01:32:08,800 --> 01:32:11,360
for civ snooze

2470
01:32:11,360 --> 01:32:14,080
this is ken regarding sif's news

2471
01:32:14,080 --> 01:32:17,520
no updates to the draft um it's been

2472
01:32:17,520 --> 01:32:19,280
implemented in cyrus imap it's been

2473
01:32:19,280 --> 01:32:21,199
deployed at fast mail

2474
01:32:21,199 --> 01:32:24,800
it works as intended as expected

2475
01:32:24,800 --> 01:32:26,400
firing any other feedback

2476
01:32:26,400 --> 01:32:28,080
i'd like to ask for working group last

2477
01:32:28,080 --> 01:32:30,320
call

2478
01:32:31,679 --> 01:32:33,679
all right anybody have any feedback on

2479
01:32:33,679 --> 01:32:35,120
that before we go to working group last

2480
01:32:35,120 --> 01:32:38,120
call

2481
01:32:40,480 --> 01:32:42,560
okay i checked the diff and it was like

2482
01:32:42,560 --> 01:32:45,440
minimal qualification so i think it's

2483
01:32:45,440 --> 01:32:47,920
it hasn't changed recently so it's just

2484
01:32:47,920 --> 01:32:50,920
done

2485
01:32:54,159 --> 01:32:56,320
all right um we now since what's up

2486
01:32:56,320 --> 01:32:57,280
there we might as well talk about

2487
01:32:57,280 --> 01:32:59,360
process imap

2488
01:32:59,360 --> 01:33:02,239
sure so um this is an idea i sent an

2489
01:33:02,239 --> 01:33:04,320
email to the mailing list a few months

2490
01:33:04,320 --> 01:33:05,760
back um

2491
01:33:05,760 --> 01:33:07,920
sketching out what we intended to

2492
01:33:07,920 --> 01:33:11,040
implement in cyrus imap

2493
01:33:11,040 --> 01:33:12,639
went back and forth between an action to

2494
01:33:12,639 --> 01:33:14,480
a test back to an action

2495
01:33:14,480 --> 01:33:16,719
i finally documented what we have

2496
01:33:16,719 --> 01:33:19,600
implemented in cyrus imap which is on

2497
01:33:19,600 --> 01:33:23,080
the next slide

2498
01:33:25,280 --> 01:33:27,840
so this is what it looks like

2499
01:33:27,840 --> 01:33:30,080
we've got

2500
01:33:30,080 --> 01:33:31,520
five different options there first one

2501
01:33:31,520 --> 01:33:33,760
is a list of addresses if they are

2502
01:33:33,760 --> 01:33:35,040
outside of what the server would

2503
01:33:35,040 --> 01:33:36,719
normally know this is

2504
01:33:36,719 --> 01:33:39,120
analogous to the addresses parameter in

2505
01:33:39,120 --> 01:33:40,400
vacation

2506
01:33:40,400 --> 01:33:43,040
so that the user would tell the server

2507
01:33:43,040 --> 01:33:45,520
these are the identities that i have

2508
01:33:45,520 --> 01:33:48,480
normally email addresses so any invite

2509
01:33:48,480 --> 01:33:50,880
or reply that i get for one of these

2510
01:33:50,880 --> 01:33:51,920
addresses

2511
01:33:51,920 --> 01:33:54,560
you can go ahead and process for me

2512
01:33:54,560 --> 01:33:56,480
next set is a it's a

2513
01:33:56,480 --> 01:33:58,800
mutually exclusive pair

2514
01:33:58,800 --> 01:34:00,719
you can give it a calendar id onto which

2515
01:34:00,719 --> 01:34:02,960
you expect new invites to go on to which

2516
01:34:02,960 --> 01:34:04,560
goes back to our previous default

2517
01:34:04,560 --> 01:34:07,120
calendar discussion

2518
01:34:07,120 --> 01:34:09,679
ultimately if you do not want to get

2519
01:34:09,679 --> 01:34:11,760
spammed with invites from untrusted

2520
01:34:11,760 --> 01:34:13,120
users

2521
01:34:13,120 --> 01:34:15,199
you can tell the server only

2522
01:34:15,199 --> 01:34:17,760
process updates which would mean replies

2523
01:34:17,760 --> 01:34:20,480
from other users

2524
01:34:20,960 --> 01:34:23,840
or or i'm sorry it would mean updates

2525
01:34:23,840 --> 01:34:26,800
only meaning changes from an existing

2526
01:34:26,800 --> 01:34:28,880
event on your calendar or cancel or that

2527
01:34:28,880 --> 01:34:30,719
kind of thing

2528
01:34:30,719 --> 01:34:33,520
third option we tell the server if i do

2529
01:34:33,520 --> 01:34:35,280
receive a cancel please remove this from

2530
01:34:35,280 --> 01:34:36,960
my calendar

2531
01:34:36,960 --> 01:34:38,800
and then the other two are optional if

2532
01:34:38,800 --> 01:34:39,600
um

2533
01:34:39,600 --> 01:34:41,280
you've got the variables extension

2534
01:34:41,280 --> 01:34:42,480
enabled

2535
01:34:42,480 --> 01:34:44,800
um two different variable names one to

2536
01:34:44,800 --> 01:34:47,440
give you a set of thick strings what the

2537
01:34:47,440 --> 01:34:50,000
outcome of the action was

2538
01:34:50,000 --> 01:34:52,000
this could be anything from no action to

2539
01:34:52,000 --> 01:34:53,840
updated to added

2540
01:34:53,840 --> 01:34:55,119
and i think there's one other one in the

2541
01:34:55,119 --> 01:34:57,119
spec i forget what it is off top my head

2542
01:34:57,119 --> 01:34:59,280
and the last option is another optional

2543
01:34:59,280 --> 01:35:02,159
variable which would give you a human

2544
01:35:02,159 --> 01:35:04,639
readable string explaining the actual

2545
01:35:04,639 --> 01:35:07,199
outcome most notably if it's a an error

2546
01:35:07,199 --> 01:35:09,199
or a failure

2547
01:35:09,199 --> 01:35:10,960
so that's what we have

2548
01:35:10,960 --> 01:35:13,280
i'm here to see if there's interest from

2549
01:35:13,280 --> 01:35:15,360
anybody else and moving this forward and

2550
01:35:15,360 --> 01:35:16,800
formalizing this

2551
01:35:16,800 --> 01:35:18,639
as a spec this has been implemented

2552
01:35:18,639 --> 01:35:21,360
again as i said in cyrus imap we

2553
01:35:21,360 --> 01:35:23,600
deployed it to some of our users last

2554
01:35:23,600 --> 01:35:24,639
week

2555
01:35:24,639 --> 01:35:26,480
and it appears to be doing what we've

2556
01:35:26,480 --> 01:35:28,400
had previously done

2557
01:35:28,400 --> 01:35:30,400
in middleware as opposed to directly in

2558
01:35:30,400 --> 01:35:32,638
civ

2559
01:35:36,719 --> 01:35:40,560
um alexi melnikov so yeah i i've

2560
01:35:40,560 --> 01:35:43,360
scanned this today quickly

2561
01:35:43,360 --> 01:35:46,560
seems to make sense um

2562
01:35:46,560 --> 01:35:50,560
a couple of comments is one

2563
01:35:50,560 --> 01:35:52,880
um

2564
01:35:53,040 --> 01:35:55,040
versus pro it's probably the first case

2565
01:35:55,040 --> 01:35:56,960
when you have extra

2566
01:35:56,960 --> 01:35:58,960
output parameters in action but i

2567
01:35:58,960 --> 01:36:00,320
suppose you know when there are two

2568
01:36:00,320 --> 01:36:02,080
extensions but you know

2569
01:36:02,080 --> 01:36:03,040
it's not

2570
01:36:03,040 --> 01:36:05,679
in any obvious way wrong is just unusual

2571
01:36:05,679 --> 01:36:08,000
but i think that's a fine solution um as

2572
01:36:08,000 --> 01:36:09,760
far as the outcome

2573
01:36:09,760 --> 01:36:11,440
values

2574
01:36:11,440 --> 01:36:13,760
uh concerned

2575
01:36:13,760 --> 01:36:16,159
i think it would be better if you split

2576
01:36:16,159 --> 01:36:18,000
update and cancel

2577
01:36:18,000 --> 01:36:20,560
into two different values

2578
01:36:20,560 --> 01:36:21,920
it just

2579
01:36:21,920 --> 01:36:25,440
i don't know it seems

2580
01:36:25,440 --> 01:36:27,040
cancelling and possibly removing the

2581
01:36:27,040 --> 01:36:28,639
event might mean something different

2582
01:36:28,639 --> 01:36:30,560
from just updating it so i might want to

2583
01:36:30,560 --> 01:36:33,199
do something different based on that

2584
01:36:33,199 --> 01:36:34,880
um

2585
01:36:34,880 --> 01:36:37,199
the other comment is

2586
01:36:37,199 --> 01:36:39,679
now that cf action is going to be in

2587
01:36:39,679 --> 01:36:41,360
last call we need to add it to this to

2588
01:36:41,360 --> 01:36:43,199
the document

2589
01:36:43,199 --> 01:36:45,440
yeah this is kind of guy i realized that

2590
01:36:45,440 --> 01:36:47,199
last week and didn't get a chance to

2591
01:36:47,199 --> 01:36:49,679
push another update figuring that i was

2592
01:36:49,679 --> 01:36:51,760
i got added

2593
01:36:51,760 --> 01:36:54,080
unknowingly to the civ action

2594
01:36:54,080 --> 01:36:56,080
spec i should probably follow that spec

2595
01:36:56,080 --> 01:36:57,520
there actually is a

2596
01:36:57,520 --> 01:36:58,800
a uh

2597
01:36:58,800 --> 01:37:00,400
example of what this looks like on the

2598
01:37:00,400 --> 01:37:01,679
next slide

2599
01:37:01,679 --> 01:37:03,600
but it still doesn't change the

2600
01:37:03,600 --> 01:37:05,520
question out there is if anybody else

2601
01:37:05,520 --> 01:37:07,840
feels this is work worth

2602
01:37:07,840 --> 01:37:09,199
adopting in the working group and moving

2603
01:37:09,199 --> 01:37:11,519
forward

2604
01:37:12,880 --> 01:37:15,600
hi this is jerk um i have just a tiny

2605
01:37:15,600 --> 01:37:17,360
question and maybe i actually i have to

2606
01:37:17,360 --> 01:37:19,840
admit i didn't read the draft yet but my

2607
01:37:19,840 --> 01:37:21,920
question is from what i see

2608
01:37:21,920 --> 01:37:23,920
i'm asking myself you know is there a

2609
01:37:23,920 --> 01:37:25,679
standard way imap is currently

2610
01:37:25,679 --> 01:37:27,520
implemented in systems because it's i

2611
01:37:27,520 --> 01:37:29,679
guess not really standardized how it's

2612
01:37:29,679 --> 01:37:31,600
done architecturally

2613
01:37:31,600 --> 01:37:34,400
and this somehow hooks in

2614
01:37:34,400 --> 01:37:37,119
you know somehow of kind of a dependency

2615
01:37:37,119 --> 01:37:39,840
which in some systems might

2616
01:37:39,840 --> 01:37:42,400
you know create architectural issues in

2617
01:37:42,400 --> 01:37:45,199
some way which is not necessarily an

2618
01:37:45,199 --> 01:37:47,440
overall issue but i'm just wondering um

2619
01:37:47,440 --> 01:37:49,280
this is something one should maybe state

2620
01:37:49,280 --> 01:37:52,320
for potential implementers of this

2621
01:37:52,320 --> 01:37:54,159
that there might be wider ranging

2622
01:37:54,159 --> 01:37:56,800
consequences of implementing that so to

2623
01:37:56,800 --> 01:37:58,639
answer your first question the only two

2624
01:37:58,639 --> 01:37:59,920
ways that i'm aware of currently that

2625
01:37:59,920 --> 01:38:03,360
this is done is a the email clients do

2626
01:38:03,360 --> 01:38:04,639
the processing

2627
01:38:04,639 --> 01:38:06,639
or b the provider

2628
01:38:06,639 --> 01:38:08,239
has some other out-of-band facility for

2629
01:38:08,239 --> 01:38:10,239
doing so which is what we did

2630
01:38:10,239 --> 01:38:11,280
previously

2631
01:38:11,280 --> 01:38:13,360
so this is just a different way to have

2632
01:38:13,360 --> 01:38:14,800
the user be in control of what's going

2633
01:38:14,800 --> 01:38:18,400
to happen in a standardized way

2634
01:38:18,400 --> 01:38:21,119
i'm sorry your second question

2635
01:38:21,119 --> 01:38:22,159
maybe

2636
01:38:22,159 --> 01:38:24,400
maybe

2637
01:38:28,719 --> 01:38:30,400
just thinking about it

2638
01:38:30,400 --> 01:38:31,760
um

2639
01:38:31,760 --> 01:38:34,480
before probably the it was primary

2640
01:38:34,480 --> 01:38:36,480
processing might have been unconditional

2641
01:38:36,480 --> 01:38:38,239
on hard-coded how it's handled now you

2642
01:38:38,239 --> 01:38:39,440
can say

2643
01:38:39,440 --> 01:38:41,440
only accept invitations from this set of

2644
01:38:41,440 --> 01:38:42,840
people for

2645
01:38:42,840 --> 01:38:45,119
example you know

2646
01:38:45,119 --> 01:38:48,159
and do a few fancy things

2647
01:38:48,159 --> 01:38:48,880
yeah

2648
01:38:48,880 --> 01:38:51,280
to that point this

2649
01:38:51,280 --> 01:38:52,880
currently does not

2650
01:38:52,880 --> 01:38:53,840
give you

2651
01:38:53,840 --> 01:38:55,760
the ability to say i want to accept from

2652
01:38:55,760 --> 01:38:59,199
this set of users but i believe

2653
01:38:59,199 --> 01:39:00,800
yes i believe there's other facilities

2654
01:39:00,800 --> 01:39:02,560
within civ to do exactly that especially

2655
01:39:02,560 --> 01:39:05,119
using the list extension

2656
01:39:05,119 --> 01:39:06,719
so you could have it reach into your

2657
01:39:06,719 --> 01:39:09,040
your card dev

2658
01:39:09,040 --> 01:39:09,920
you know

2659
01:39:09,920 --> 01:39:13,840
address book you know whatever

2660
01:39:15,679 --> 01:39:17,440
this does not tell you when to do the

2661
01:39:17,440 --> 01:39:18,719
processing it tells you how to do the

2662
01:39:18,719 --> 01:39:23,320
processing if you choose to have it done

2663
01:39:27,520 --> 01:39:29,360
does this go to the list to adopt this

2664
01:39:29,360 --> 01:39:30,960
or just yeah i'll do a call for adoption

2665
01:39:30,960 --> 01:39:32,159
on the list

2666
01:39:32,159 --> 01:39:35,040
um it sounds like this there's nobody

2667
01:39:35,040 --> 01:39:37,440
violently objecting to the idea so we

2668
01:39:37,440 --> 01:39:38,639
may as well

2669
01:39:38,639 --> 01:39:41,520
go ahead if adopted i might wrote lexian

2670
01:39:41,520 --> 01:39:44,239
as a co-author

2671
01:39:45,040 --> 01:39:47,360
we cannot just credit everything ah yeah

2672
01:39:47,360 --> 01:39:49,199
i mean not everybody will implement it

2673
01:39:49,199 --> 01:39:51,840
but i think it's a sensible idea to

2674
01:39:51,840 --> 01:39:55,400
to doing this working

2675
01:39:58,480 --> 01:39:59,840
that's all i have thank you excellent

2676
01:39:59,840 --> 01:40:01,600
thank you there were more slides but

2677
01:40:01,600 --> 01:40:04,560
they're just examples here

2678
01:40:04,560 --> 01:40:05,520
beautiful

2679
01:40:05,520 --> 01:40:08,480
all right fantastic then all we have

2680
01:40:08,480 --> 01:40:09,920
left

2681
01:40:09,920 --> 01:40:14,960
in all of this is imap partial

2682
01:40:21,679 --> 01:40:24,960
right i i actually uh updated the title

2683
01:40:24,960 --> 01:40:26,719
of the document because it actually has

2684
01:40:26,719 --> 01:40:30,480
sort of two related extensions now

2685
01:40:31,360 --> 01:40:33,119
um

2686
01:40:33,119 --> 01:40:34,480
yeah

2687
01:40:34,480 --> 01:40:36,480
so uh

2688
01:40:36,480 --> 01:40:38,880
shall i do people remember what partial

2689
01:40:38,880 --> 01:40:41,119
is all about

2690
01:40:41,119 --> 01:40:43,759
do you want to know

2691
01:40:44,239 --> 01:40:45,600
so uh

2692
01:40:45,600 --> 01:40:48,560
basically in imap if you do search

2693
01:40:48,560 --> 01:40:50,000
typically search will do the full

2694
01:40:50,000 --> 01:40:51,840
mailbox search

2695
01:40:51,840 --> 01:40:54,000
you can say only return

2696
01:40:54,000 --> 01:40:55,600
and messages

2697
01:40:55,600 --> 01:40:59,600
and first or second page whatever

2698
01:40:59,600 --> 01:41:01,760
this helps

2699
01:41:01,760 --> 01:41:04,080
the client to receive less data as well

2700
01:41:04,080 --> 01:41:07,520
as servs saves server work

2701
01:41:07,520 --> 01:41:09,119
once it reaches the number of messages

2702
01:41:09,119 --> 01:41:11,679
it can stop doing it

2703
01:41:11,679 --> 01:41:14,080
somewhat similar example is with uig

2704
01:41:14,080 --> 01:41:15,280
fetch

2705
01:41:15,280 --> 01:41:18,320
you can have a uid range where you don't

2706
01:41:18,320 --> 01:41:20,239
actually necessarily know how many

2707
01:41:20,239 --> 01:41:23,360
messages in the range so again you say

2708
01:41:23,360 --> 01:41:26,800
if if my client can only show 10 000

2709
01:41:26,800 --> 01:41:28,080
messages

2710
01:41:28,080 --> 01:41:29,840
there is no reason

2711
01:41:29,840 --> 01:41:32,880
to return hundred thousand you know

2712
01:41:32,880 --> 01:41:34,719
if it's so many in the range so you can

2713
01:41:34,719 --> 01:41:36,719
say just just return me first or you

2714
01:41:36,719 --> 01:41:38,320
know

2715
01:41:38,320 --> 01:41:39,360
um

2716
01:41:39,360 --> 01:41:41,520
yeah next slide

2717
01:41:41,520 --> 01:41:43,840
and uh

2718
01:41:43,840 --> 01:41:46,719
i mean for smaller mailbox on mailboxes

2719
01:41:46,719 --> 01:41:48,000
it doesn't

2720
01:41:48,000 --> 01:41:50,080
matter that much but this is concerned

2721
01:41:50,080 --> 01:41:54,960
with large mailboxes say 50k and more

2722
01:41:55,600 --> 01:41:58,560
so as i said uh search return option for

2723
01:41:58,560 --> 01:42:03,040
returning page or mul it's a range of

2724
01:42:03,199 --> 01:42:06,559
messages in the response

2725
01:42:07,119 --> 01:42:10,159
and also so it's a search modifier and

2726
01:42:10,159 --> 01:42:12,480
uid fetch modifier

2727
01:42:12,480 --> 01:42:15,718
next slide

2728
01:42:18,480 --> 01:42:21,599
so this is how it looks

2729
01:42:22,480 --> 01:42:25,599
this example says

2730
01:42:25,840 --> 01:42:27,360
return

2731
01:42:27,360 --> 01:42:30,239
100 messages from the end of the mailbox

2732
01:42:30,239 --> 01:42:32,159
the most recent ones

2733
01:42:32,159 --> 01:42:34,080
if you don't use miner syntax then it's

2734
01:42:34,080 --> 01:42:35,760
the first one from the beginning of the

2735
01:42:35,760 --> 01:42:37,300
mailbox but

2736
01:42:37,300 --> 01:42:39,600
[Music]

2737
01:42:39,600 --> 01:42:41,119
so this was

2738
01:42:41,119 --> 01:42:43,440
motivate partially motivated by yahoo

2739
01:42:43,440 --> 01:42:45,679
people they they want to

2740
01:42:45,679 --> 01:42:47,119
do better

2741
01:42:47,119 --> 01:42:49,119
handling of very large mailboxes and

2742
01:42:49,119 --> 01:42:50,560
their

2743
01:42:50,560 --> 01:42:52,400
most common case is going to be the most

2744
01:42:52,400 --> 01:42:54,560
recent one

2745
01:42:54,560 --> 01:42:57,600
i have a question about this one yeah um

2746
01:42:57,600 --> 01:42:59,840
that's not only allowing negative

2747
01:42:59,840 --> 01:43:01,600
numbers it's also reversing the order

2748
01:43:01,600 --> 01:43:04,639
it's got the higher numbered one first

2749
01:43:04,639 --> 01:43:05,679
is that

2750
01:43:05,679 --> 01:43:07,119
deliberate and supposed to be allowed or

2751
01:43:07,119 --> 01:43:08,639
is that a

2752
01:43:08,639 --> 01:43:11,119
what uh minus one minus hundred or minus

2753
01:43:11,119 --> 01:43:12,480
hundred minus one this should be the

2754
01:43:12,480 --> 01:43:14,718
same

2755
01:43:19,280 --> 01:43:21,840
what happens if you make a minus and a

2756
01:43:21,840 --> 01:43:25,520
positive then i i i i negative and

2757
01:43:25,520 --> 01:43:27,119
positive you either both use both

2758
01:43:27,119 --> 01:43:29,760
negatives or both positives

2759
01:43:29,760 --> 01:43:31,040
oh okay

2760
01:43:31,040 --> 01:43:33,360
so a a the a the

2761
01:43:33,360 --> 01:43:35,280
range at the you know the most recent

2762
01:43:35,280 --> 01:43:36,719
one or

2763
01:43:36,719 --> 01:43:41,199
in the kind of the least recent one

2764
01:43:45,280 --> 01:43:47,440
so the partial

2765
01:43:47,440 --> 01:43:49,600
positive number colon positive number

2766
01:43:49,600 --> 01:43:52,080
was original part of 5267 so it's

2767
01:43:52,080 --> 01:43:55,440
backward compatible but this ends the

2768
01:43:55,440 --> 01:43:57,840
negative syntax to say from the most

2769
01:43:57,840 --> 01:44:00,080
recent messages so you don't

2770
01:44:00,080 --> 01:44:03,119
necessarily need to know

2771
01:44:04,320 --> 01:44:07,840
your ids for them for example

2772
01:44:11,600 --> 01:44:13,520
one positive and one negative for voice

2773
01:44:13,520 --> 01:44:16,400
versus an error

2774
01:44:16,800 --> 01:44:20,760
okay next slide

2775
01:44:21,840 --> 01:44:24,320
cool and this is how the fetch example

2776
01:44:24,320 --> 01:44:26,239
works

2777
01:44:26,239 --> 01:44:28,080
uh

2778
01:44:28,080 --> 01:44:30,159
again you know

2779
01:44:30,159 --> 01:44:32,560
some cl if you know how many messages in

2780
01:44:32,560 --> 01:44:35,360
the range or in the uid fetch range

2781
01:44:35,360 --> 01:44:36,560
that is not

2782
01:44:36,560 --> 01:44:38,480
as useful but if you don't or if you

2783
01:44:38,480 --> 01:44:40,799
want to

2784
01:44:41,040 --> 01:44:44,159
page through results

2785
01:44:44,159 --> 01:44:47,760
then it gives you more control over this

2786
01:44:47,760 --> 01:44:50,320
next slide

2787
01:44:52,800 --> 01:44:55,520
yeah so uh

2788
01:44:55,520 --> 01:44:57,360
we do have wonderful problem in imap

2789
01:44:57,360 --> 01:44:59,360
where we have so many extensions we

2790
01:44:59,360 --> 01:45:01,679
sometimes forget how they interact with

2791
01:45:01,679 --> 01:45:02,960
each other

2792
01:45:02,960 --> 01:45:05,520
so actually partial existed before save

2793
01:45:05,520 --> 01:45:08,140
existed before save is

2794
01:45:08,140 --> 01:45:10,320
[Music]

2795
01:45:10,320 --> 01:45:12,320
do the search and save the result in a

2796
01:45:12,320 --> 01:45:14,239
variable

2797
01:45:14,239 --> 01:45:17,360
right and um the interaction between the

2798
01:45:17,360 --> 01:45:20,480
two weren't actually specified so um

2799
01:45:20,480 --> 01:45:23,040
timothy ryan and from duff code asked

2800
01:45:23,040 --> 01:45:24,719
about interactions and now this is

2801
01:45:24,719 --> 01:45:26,560
clarified

2802
01:45:26,560 --> 01:45:29,800
next slide

2803
01:45:31,040 --> 01:45:32,639
so um

2804
01:45:32,639 --> 01:45:34,080
there were actually a fair amount of

2805
01:45:34,080 --> 01:45:36,400
changes since version zero but most of

2806
01:45:36,400 --> 01:45:39,119
them were not related to the partial

2807
01:45:39,119 --> 01:45:41,920
uh the main

2808
01:45:42,800 --> 01:45:45,520
clarification about partial is that if

2809
01:45:45,520 --> 01:45:48,080
it's used with constore

2810
01:45:48,080 --> 01:45:49,520
uh it

2811
01:45:49,520 --> 01:45:52,560
exp it is explicit how they use together

2812
01:45:52,560 --> 01:45:54,239
so you can say

2813
01:45:54,239 --> 01:45:56,400
send me flag changes for all messages

2814
01:45:56,400 --> 01:45:58,960
change this timestamp

2815
01:45:58,960 --> 01:46:02,560
and only return so many of them

2816
01:46:04,080 --> 01:46:04,960
so

2817
01:46:04,960 --> 01:46:07,360
the other extension is message limit

2818
01:46:07,360 --> 01:46:09,040
where

2819
01:46:09,040 --> 01:46:12,320
server basically insists that

2820
01:46:12,320 --> 01:46:15,760
you cannot request any operation on more

2821
01:46:15,760 --> 01:46:16,960
than

2822
01:46:16,960 --> 01:46:19,199
so many messages

2823
01:46:19,199 --> 01:46:21,040
i mean obviously if the limit is 10

2824
01:46:21,040 --> 01:46:22,480
messages it's not going to be very

2825
01:46:22,480 --> 01:46:24,080
useful but this is supposed to be like

2826
01:46:24,080 --> 01:46:26,000
10 000 or 100 thousand messages or

2827
01:46:26,000 --> 01:46:28,320
whatever

2828
01:46:32,239 --> 01:46:35,199
this is of more interest to yahoo people

2829
01:46:35,199 --> 01:46:37,650
because they try to avoid

2830
01:46:37,650 --> 01:46:39,280
[Music]

2831
01:46:39,280 --> 01:46:41,840
storing full maps of message numbers to

2832
01:46:41,840 --> 01:46:44,239
your ids

2833
01:46:44,239 --> 01:46:47,840
so it's kind of easier for them to page

2834
01:46:47,840 --> 01:46:50,000
page through numbers and resolve indexes

2835
01:46:50,000 --> 01:46:51,520
this way

2836
01:46:51,520 --> 01:46:52,719
so

2837
01:46:52,719 --> 01:46:54,960
various revisions clarified interaction

2838
01:46:54,960 --> 01:46:56,320
with sort

2839
01:46:56,320 --> 01:46:58,400
i think they a message limit and sort

2840
01:46:58,400 --> 01:47:00,639
can be used together

2841
01:47:00,639 --> 01:47:02,400
but you either need to have a special

2842
01:47:02,400 --> 01:47:04,159
index

2843
01:47:04,159 --> 01:47:05,360
uh

2844
01:47:05,360 --> 01:47:07,440
or you say well this mailbox is too big

2845
01:47:07,440 --> 01:47:09,040
so i cannot do it

2846
01:47:09,040 --> 01:47:10,960
thread and message limit cannot be used

2847
01:47:10,960 --> 01:47:12,880
together if the mailbox has more than

2848
01:47:12,880 --> 01:47:15,040
message delivered messages it's just not

2849
01:47:15,040 --> 01:47:16,320
going to work

2850
01:47:16,320 --> 01:47:17,920
because threading doesn't work with

2851
01:47:17,920 --> 01:47:21,119
partial sub data basically well

2852
01:47:21,119 --> 01:47:23,199
sort of gives you corrupted threats

2853
01:47:23,199 --> 01:47:25,840
which are not very useful

2854
01:47:25,840 --> 01:47:28,239
um

2855
01:47:28,400 --> 01:47:30,080
don't remember do i have a next slide

2856
01:47:30,080 --> 01:47:31,679
yep two more

2857
01:47:31,679 --> 01:47:33,119
okay

2858
01:47:33,119 --> 01:47:36,080
uh one of the main open issues is copy

2859
01:47:36,080 --> 01:47:37,400
and uid copy

2860
01:47:37,400 --> 01:47:40,469
[Music]

2861
01:47:43,520 --> 01:47:45,520
one of the things that this is trying to

2862
01:47:45,520 --> 01:47:49,199
address is the client can say well

2863
01:47:49,199 --> 01:47:51,360
i want to copy all messages from the

2864
01:47:51,360 --> 01:47:53,600
mailbox to another mailbox

2865
01:47:53,600 --> 01:47:55,360
you have hundred thousand messages

2866
01:47:55,360 --> 01:47:58,400
message limit is ten thousand

2867
01:47:58,400 --> 01:48:00,960
so do you just fail to do the operation

2868
01:48:00,960 --> 01:48:02,400
altogether

2869
01:48:02,400 --> 01:48:04,400
or do you copy uh

2870
01:48:04,400 --> 01:48:07,199
ten thousand messages and say well

2871
01:48:07,199 --> 01:48:09,040
i only partially completed you need to

2872
01:48:09,040 --> 01:48:11,040
retry with other

2873
01:48:11,040 --> 01:48:14,080
with the remainder of them if you care

2874
01:48:14,080 --> 01:48:15,600
um

2875
01:48:15,600 --> 01:48:19,600
this is kind of tricky because

2876
01:48:19,600 --> 01:48:21,679
we never had copy failed partially

2877
01:48:21,679 --> 01:48:23,040
before

2878
01:48:23,040 --> 01:48:26,159
but this is trying to

2879
01:48:26,560 --> 01:48:29,040
do we want to uh

2880
01:48:29,040 --> 01:48:30,880
all the clients that don't support this

2881
01:48:30,880 --> 01:48:33,840
become unusable

2882
01:48:33,840 --> 01:48:36,000
because they don't understand this

2883
01:48:36,000 --> 01:48:39,119
response code or

2884
01:48:39,440 --> 01:48:41,520
so that's kind of a tricky question i

2885
01:48:41,520 --> 01:48:43,920
have i have an opinion i think we should

2886
01:48:43,920 --> 01:48:46,159
reject it outright rather than allow it

2887
01:48:46,159 --> 01:48:47,840
to succeed because otherwise the clients

2888
01:48:47,840 --> 01:48:49,920
will just try again and again and they

2889
01:48:49,920 --> 01:48:51,360
will wind up copying the same ten

2890
01:48:51,360 --> 01:48:52,880
thousand messages again and again to the

2891
01:48:52,880 --> 01:48:55,440
destination holder no it's not how it

2892
01:48:55,440 --> 01:48:56,719
works

2893
01:48:56,719 --> 01:48:58,480
i mean yes it might be a valid reason

2894
01:48:58,480 --> 01:49:00,880
but the way it works at the moment is it

2895
01:49:00,880 --> 01:49:01,760
says

2896
01:49:01,760 --> 01:49:03,840
he says copy hundred thousand messages

2897
01:49:03,840 --> 01:49:06,560
it will copy ten thousand and return

2898
01:49:06,560 --> 01:49:08,320
okay

2899
01:49:08,320 --> 01:49:10,480
with message limit

2900
01:49:10,480 --> 01:49:12,800
so the naive client will say oh all the

2901
01:49:12,800 --> 01:49:14,560
hundred thousand messages got copied but

2902
01:49:14,560 --> 01:49:16,320
on actually only ten thousand for a

2903
01:49:16,320 --> 01:49:17,679
pocket uh and then it will try and

2904
01:49:17,679 --> 01:49:18,880
delete all of them and it will only

2905
01:49:18,880 --> 01:49:20,560
delete the same ten thousand assuming it

2906
01:49:20,560 --> 01:49:22,159
hits the same limit

2907
01:49:22,159 --> 01:49:24,560
yes yeah uh

2908
01:49:24,560 --> 01:49:25,679
so

2909
01:49:25,679 --> 01:49:27,119
well

2910
01:49:27,119 --> 01:49:29,360
the alternative is you know the client

2911
01:49:29,360 --> 01:49:31,280
just cannot do it and then it's like

2912
01:49:31,280 --> 01:49:33,280
well does it try to repeat itself or

2913
01:49:33,280 --> 01:49:35,119
just give up i don't know yeah or the

2914
01:49:35,119 --> 01:49:37,360
client has to do batch copies well

2915
01:49:37,360 --> 01:49:38,960
that's the thing the client basically

2916
01:49:38,960 --> 01:49:41,119
needs to be updated to know about about

2917
01:49:41,119 --> 01:49:43,679
the limit and doing batches

2918
01:49:43,679 --> 01:49:45,920
uh

2919
01:49:46,080 --> 01:49:48,159
i don't know i i keep flipping back and

2920
01:49:48,159 --> 01:49:52,480
forth about this this is kind of tricky

2921
01:49:52,719 --> 01:49:53,520
but

2922
01:49:53,520 --> 01:49:56,960
we can discuss yeah

2923
01:49:56,960 --> 01:49:58,560
i don't necessarily have an opinion on

2924
01:49:58,560 --> 01:50:00,560
this issue but just something else to

2925
01:50:00,560 --> 01:50:02,719
bring up which is probably painful does

2926
01:50:02,719 --> 01:50:05,360
this if any way shape or form affect

2927
01:50:05,360 --> 01:50:07,840
renaming of the inbox that abomination

2928
01:50:07,840 --> 01:50:11,360
where you're copying

2929
01:50:11,360 --> 01:50:14,239
barry has an opinion

2930
01:50:14,800 --> 01:50:16,480
sorry i didn't push the button but this

2931
01:50:16,480 --> 01:50:18,480
is barry

2932
01:50:18,480 --> 01:50:21,199
not on what ken just said but the other

2933
01:50:21,199 --> 01:50:22,159
bit

2934
01:50:22,159 --> 01:50:23,040
we

2935
01:50:23,040 --> 01:50:25,920
previously don't have any

2936
01:50:25,920 --> 01:50:28,159
stuff in imap where the server puts

2937
01:50:28,159 --> 01:50:31,440
limits on things that the client

2938
01:50:31,440 --> 01:50:33,360
may not know about that affects the

2939
01:50:33,360 --> 01:50:35,280
client's behavior and this is the first

2940
01:50:35,280 --> 01:50:37,679
that i'm aware of

2941
01:50:37,679 --> 01:50:39,679
i don't like that i don't i don't like

2942
01:50:39,679 --> 01:50:42,320
the idea that a client that tries to

2943
01:50:42,320 --> 01:50:43,840
copy

2944
01:50:43,840 --> 01:50:45,760
a hundred messages and only gets ten of

2945
01:50:45,760 --> 01:50:47,679
them copied

2946
01:50:47,679 --> 01:50:50,080
doesn't if they haven't been updated to

2947
01:50:50,080 --> 01:50:52,000
understand this they have no way of

2948
01:50:52,000 --> 01:50:54,560
dealing with that situation and i i

2949
01:50:54,560 --> 01:50:57,199
think that's bad so i think

2950
01:50:57,199 --> 01:50:58,960
that if the server has a limit and the

2951
01:50:58,960 --> 01:51:00,880
client tries to do something above that

2952
01:51:00,880 --> 01:51:02,719
limit it just gets no

2953
01:51:02,719 --> 01:51:04,560
and nothing happens

2954
01:51:04,560 --> 01:51:06,960
and then the client that a client that

2955
01:51:06,960 --> 01:51:09,040
understands message limit knows what to

2956
01:51:09,040 --> 01:51:10,800
do with that or shouldn't have done it

2957
01:51:10,800 --> 01:51:12,880
in the first place but a client that

2958
01:51:12,880 --> 01:51:14,880
doesn't know just has to throw up its

2959
01:51:14,880 --> 01:51:18,480
hands because it has no way to

2960
01:51:18,960 --> 01:51:19,480
be recover

2961
01:51:21,840 --> 01:51:23,520
arguably not a lot of service will

2962
01:51:23,520 --> 01:51:25,520
implement this because this is kind of a

2963
01:51:25,520 --> 01:51:27,119
little bit of more niche as opposed to

2964
01:51:27,119 --> 01:51:30,080
partial partially generic facility

2965
01:51:30,080 --> 01:51:31,920
so uh

2966
01:51:31,920 --> 01:51:34,719
what we are saying

2967
01:51:34,719 --> 01:51:36,960
users will try their clients with the

2968
01:51:36,960 --> 01:51:39,360
server like this will be unable to do it

2969
01:51:39,360 --> 01:51:41,520
we'll have to complain to their client

2970
01:51:41,520 --> 01:51:43,840
client says well

2971
01:51:43,840 --> 01:51:45,840
i didn't i i didn't implement this why

2972
01:51:45,840 --> 01:51:47,599
do i want to then there is a discussion

2973
01:51:47,599 --> 01:51:49,199
with the server vendor whether you know

2974
01:51:49,199 --> 01:51:51,599
whether they want to implement it

2975
01:51:51,599 --> 01:51:54,320
okay uh i'm okay with that yeah this is

2976
01:51:54,320 --> 01:51:56,159
basically what i said as well that it

2977
01:51:56,159 --> 01:51:58,159
should it should be rejected and then

2978
01:51:58,159 --> 01:52:00,400
you the client either you either do a

2979
01:52:00,400 --> 01:52:02,639
smaller copy of just a range of messages

2980
01:52:02,639 --> 01:52:04,239
which the user can do

2981
01:52:04,239 --> 01:52:05,280
or you

2982
01:52:05,280 --> 01:52:07,840
you fix the client

2983
01:52:07,840 --> 01:52:10,080
okay

2984
01:52:10,159 --> 01:52:11,840
yeah this is why i struggled there is

2985
01:52:11,840 --> 01:52:14,480
now like it's unfortunate situation and

2986
01:52:14,480 --> 01:52:16,480
there is no elegant solution that will

2987
01:52:16,480 --> 01:52:18,320
just sort of

2988
01:52:18,320 --> 01:52:21,519
it's kind of a yeah

2989
01:52:21,920 --> 01:52:23,760
and still barry the

2990
01:52:23,760 --> 01:52:24,639
uh

2991
01:52:24,639 --> 01:52:27,040
to go to what ken said with uh what do

2992
01:52:27,040 --> 01:52:28,719
you do if you uh

2993
01:52:28,719 --> 01:52:30,960
rename inbox

2994
01:52:30,960 --> 01:52:33,280
um i think that has to be an exception

2995
01:52:33,280 --> 01:52:34,960
to message limit i think the server just

2996
01:52:34,960 --> 01:52:37,920
has to do it even if if the server has a

2997
01:52:37,920 --> 01:52:39,760
message limit of 100 and there are 10

2998
01:52:39,760 --> 01:52:41,840
000 messages in the inbox and you rename

2999
01:52:41,840 --> 01:52:43,040
the inbox

3000
01:52:43,040 --> 01:52:45,040
while the server can say no

3001
01:52:45,040 --> 01:52:46,960
or the server just has to do it and move

3002
01:52:46,960 --> 01:52:48,239
all 10 000

3003
01:52:48,239 --> 01:52:49,920
right you know whatever and if the

3004
01:52:49,920 --> 01:52:53,040
server is distributed and have a client

3005
01:52:53,040 --> 01:52:54,800
part and server part well then they'll

3006
01:52:54,800 --> 01:52:56,080
have to update the client part to

3007
01:52:56,080 --> 01:52:58,159
actually support this and then it should

3008
01:52:58,159 --> 01:53:00,400
work

3009
01:53:00,800 --> 01:53:02,639
i mean

3010
01:53:02,639 --> 01:53:05,599
can you actually send this in uh uh

3011
01:53:05,599 --> 01:53:06,880
send the email to the mailing list

3012
01:53:06,880 --> 01:53:09,199
because i think it's probably worth just

3013
01:53:09,199 --> 01:53:11,599
saying this explicitly

3014
01:53:11,599 --> 01:53:13,520
no send the reminder to the mailing list

3015
01:53:13,520 --> 01:53:15,599
saying about what about renaming box

3016
01:53:15,599 --> 01:53:17,360
with more than message limit messages

3017
01:53:17,360 --> 01:53:19,360
what will happen and we'll just say

3018
01:53:19,360 --> 01:53:21,520
server just has to do this we can add an

3019
01:53:21,520 --> 01:53:23,599
explicit statement as a reminder for

3020
01:53:23,599 --> 01:53:27,800
server implementations to do this

3021
01:53:29,040 --> 01:53:31,840
great thanks alexi is that everything

3022
01:53:31,840 --> 01:53:33,760
uh you got one more slide next step

3023
01:53:33,760 --> 01:53:35,360
seems ready for last call with partial

3024
01:53:35,360 --> 01:53:37,199
message limit may need a bit more work

3025
01:53:37,199 --> 01:53:40,880
who needs who wants to implement yeah

3026
01:53:40,880 --> 01:53:42,239
this is kent so

3027
01:53:42,239 --> 01:53:44,719
i as a server dev i think partial is

3028
01:53:44,719 --> 01:53:46,400
pretty straightforward to implement

3029
01:53:46,400 --> 01:53:48,639
uh question for alexi is a as a client

3030
01:53:48,639 --> 01:53:50,719
of have you actually implemented on your

3031
01:53:50,719 --> 01:53:52,880
site so we know it operates the way you

3032
01:53:52,880 --> 01:53:55,840
expect expected to operate

3033
01:54:00,000 --> 01:54:01,920
because i'd like to see some running

3034
01:54:01,920 --> 01:54:05,199
code before you go to last call

3035
01:54:06,800 --> 01:54:07,840
okay

3036
01:54:07,840 --> 01:54:09,760
yeah i'm happy to do that so i actually

3037
01:54:09,760 --> 01:54:13,440
did implement it in the client side but

3038
01:54:13,440 --> 01:54:15,840
i didn't test it with my server yet so

3039
01:54:15,840 --> 01:54:17,440
that's why i was hesitating i did it but

3040
01:54:17,440 --> 01:54:18,320
i just

3041
01:54:18,320 --> 01:54:20,000
i think it worked it's fine

3042
01:54:20,000 --> 01:54:22,320
it actually makes uh handing off big

3043
01:54:22,320 --> 01:54:24,560
mailboxes um

3044
01:54:24,560 --> 01:54:26,639
like webmail clients you know if you can

3045
01:54:26,639 --> 01:54:29,520
only display you know 10 pages

3046
01:54:29,520 --> 01:54:32,400
or 15 messages it makes it much easier

3047
01:54:32,400 --> 01:54:34,080
to implement because you don't need to

3048
01:54:34,080 --> 01:54:37,440
download you know the whole map for 100

3049
01:54:37,440 --> 01:54:39,840
yeah i was mostly concerned with does

3050
01:54:39,840 --> 01:54:42,239
the spec do what you needed to do as a

3051
01:54:42,239 --> 01:54:43,199
more so that i was worried about

3052
01:54:43,199 --> 01:54:46,320
interoperability at this point

3053
01:54:49,520 --> 01:54:51,199
awesome we have five minutes left let's

3054
01:54:51,199 --> 01:54:52,639
let's run through our milestones quick

3055
01:54:52,639 --> 01:54:54,880
hey

3056
01:54:54,880 --> 01:54:57,520
thanks everybody uh

3057
01:54:57,520 --> 01:54:59,440
here we go yes i do want to share my

3058
01:54:59,440 --> 01:55:00,560
screen

3059
01:55:00,560 --> 01:55:03,800
this one

3060
01:55:04,480 --> 01:55:06,880
i mean i i put the message limit and

3061
01:55:06,880 --> 01:55:08,480
partial in the same document do you want

3062
01:55:08,480 --> 01:55:10,880
me to split them up or is it okay just

3063
01:55:10,880 --> 01:55:12,400
we'll just keep it first i think we just

3064
01:55:12,400 --> 01:55:13,760
don't that should be fine to stay in the

3065
01:55:13,760 --> 01:55:15,599
same document and we'll just do one if

3066
01:55:15,599 --> 01:55:16,800
it's going to

3067
01:55:16,800 --> 01:55:18,880
well it's also if

3068
01:55:18,880 --> 01:55:21,360
if we decide that one of them is more

3069
01:55:21,360 --> 01:55:23,199
experimental than the other

3070
01:55:23,199 --> 01:55:25,679
but until we get there that's fine yeah

3071
01:55:25,679 --> 01:55:26,800
um

3072
01:55:26,800 --> 01:55:29,599
i'm happy to to

3073
01:55:29,599 --> 01:55:31,440
have a working group last call on this

3074
01:55:31,440 --> 01:55:33,040
as one or two documents and i have to do

3075
01:55:33,040 --> 01:55:34,719
a separate working group adoption call

3076
01:55:34,719 --> 01:55:36,800
sorry on on one or two

3077
01:55:36,800 --> 01:55:38,239
all right here's what we've got uh

3078
01:55:38,239 --> 01:55:40,560
submit document for blobs via gmap to

3079
01:55:40,560 --> 01:55:44,239
asg is going to have to move forwards to

3080
01:55:44,239 --> 01:55:45,760
next months

3081
01:55:45,760 --> 01:55:47,199
basically

3082
01:55:47,199 --> 01:55:49,280
uh submit civ

3083
01:55:49,280 --> 01:55:51,920
document to isg that's also for april i

3084
01:55:51,920 --> 01:55:54,159
guess

3085
01:55:54,159 --> 01:55:55,440
we decided that

3086
01:55:55,440 --> 01:55:57,199
the

3087
01:55:57,199 --> 01:55:59,360
uh gem up sieve

3088
01:55:59,360 --> 01:56:02,639
is ready for last call

3089
01:56:03,280 --> 01:56:04,880
i was hanging on to this because i

3090
01:56:04,880 --> 01:56:06,080
wanted to get some implementation

3091
01:56:06,080 --> 01:56:08,639
experience with the civ test method okay

3092
01:56:08,639 --> 01:56:10,719
um but if we want i could break that out

3093
01:56:10,719 --> 01:56:13,040
and we could make it a an extension down

3094
01:56:13,040 --> 01:56:15,360
the road no i think

3095
01:56:15,360 --> 01:56:17,119
it should be fine just to

3096
01:56:17,119 --> 01:56:18,719
we can we can test that within a month

3097
01:56:18,719 --> 01:56:20,320
we'll send it to working group last call

3098
01:56:20,320 --> 01:56:22,000
and test it during that time

3099
01:56:22,000 --> 01:56:24,000
fine

3100
01:56:24,000 --> 01:56:25,199
uh

3101
01:56:25,199 --> 01:56:27,760
sender extensions

3102
01:56:27,760 --> 01:56:30,400
we're ready to

3103
01:56:30,400 --> 01:56:33,679
last call that now alexi

3104
01:56:33,760 --> 01:56:35,920
no

3105
01:56:36,480 --> 01:56:39,718
fair enough

3106
01:56:40,400 --> 01:56:43,400
when

3107
01:56:50,719 --> 01:56:53,599
cool uh

3108
01:56:53,920 --> 01:56:56,239
god's implementation of imp servers and

3109
01:56:56,239 --> 01:56:58,560
proxies

3110
01:56:58,560 --> 01:57:01,280
kick it down the road

3111
01:57:01,280 --> 01:57:03,360
cool

3112
01:57:03,360 --> 01:57:06,800
gamer access to address books

3113
01:57:06,800 --> 01:57:10,040
this is

3114
01:57:10,080 --> 01:57:12,960
what do you reckon robert

3115
01:57:21,679 --> 01:57:25,119
yeah we're back on j-map now

3116
01:57:35,440 --> 01:57:37,040
calendar as we said is nearly ready to

3117
01:57:37,040 --> 01:57:40,320
to go isn't it

3118
01:57:41,679 --> 01:57:45,040
i don't know it's pretty late for him

3119
01:57:46,239 --> 01:57:47,679
no i think he might have might have

3120
01:57:47,679 --> 01:57:51,320
headed off to bed already

3121
01:57:53,599 --> 01:57:55,679
yep

3122
01:57:55,679 --> 01:57:58,639
i'll say july we'll get it by next time

3123
01:57:58,639 --> 01:57:59,440
here

3124
01:57:59,440 --> 01:58:00,159
uh

3125
01:58:00,159 --> 01:58:02,639
jason contact document and i need to

3126
01:58:02,639 --> 01:58:04,480
move that because it belongs in the

3127
01:58:04,480 --> 01:58:07,839
other work group now

3128
01:58:09,599 --> 01:58:11,760
i'll just hit delete on that

3129
01:58:11,760 --> 01:58:14,159
murray

3130
01:58:15,360 --> 01:58:18,519
go ahead

3131
01:58:20,239 --> 01:58:22,320
what what did you have to say

3132
01:58:22,320 --> 01:58:24,000
oh the first the first one that you

3133
01:58:24,000 --> 01:58:25,599
edited um

3134
01:58:25,599 --> 01:58:28,320
you said it for april 2021

3135
01:58:28,320 --> 01:58:29,360
did i

3136
01:58:29,360 --> 01:58:31,119
yeah ridiculous well down there right

3137
01:58:31,119 --> 01:58:33,199
there thank you

3138
01:58:33,199 --> 01:58:35,839
okay

3139
01:58:36,239 --> 01:58:38,159
that's i mean it should have been done

3140
01:58:38,159 --> 01:58:40,560
by april 2021 but we're where we are

3141
01:58:40,560 --> 01:58:42,400
thank you for that

3142
01:58:42,400 --> 01:58:43,360
um

3143
01:58:43,360 --> 01:58:45,440
i've deleted the js contacts that's

3144
01:58:45,440 --> 01:58:48,239
being moved uh gmap we said was

3145
01:58:48,239 --> 01:58:51,280
basically ready to go

3146
01:58:51,679 --> 01:58:52,560
and that

3147
01:58:52,560 --> 01:58:55,840
that says june all right

3148
01:58:58,239 --> 01:58:59,679
i'll say august

3149
01:58:59,679 --> 01:59:03,719
be nice if we get some stuff done

3150
01:59:06,719 --> 01:59:08,880
yep

3151
01:59:08,880 --> 01:59:09,920
done

3152
01:59:09,920 --> 01:59:13,119
review changes all

3153
01:59:13,119 --> 01:59:14,159
done

3154
01:59:14,159 --> 01:59:16,639
okay and milestones for extra

3155
01:59:16,639 --> 01:59:17,840
we had

3156
01:59:17,840 --> 01:59:19,840
steve actions registry adopt that got

3157
01:59:19,840 --> 01:59:21,360
done

3158
01:59:21,360 --> 01:59:23,679
so just resolve that

3159
01:59:23,679 --> 01:59:27,400
ea with sieve

3160
01:59:36,960 --> 01:59:39,440
that was just for adopt so

3161
01:59:39,440 --> 01:59:41,599
um adopt i think we've adopted it

3162
01:59:41,599 --> 01:59:45,840
already i'm just gonna resolve that

3163
01:59:49,119 --> 01:59:52,119
um

3164
01:59:59,119 --> 02:00:00,880
okay

3165
02:00:00,880 --> 02:00:03,040
i might say adopt by june

3166
02:00:03,040 --> 02:00:04,719
submit by

3167
02:00:04,719 --> 02:00:06,159
december

3168
02:00:06,159 --> 02:00:10,239
and that leaves update charter which is

3169
02:00:10,320 --> 02:00:13,840
for extra not done

3170
02:00:14,480 --> 02:00:16,638
but

3171
02:00:18,239 --> 02:00:19,760
we were going to update the charter

3172
02:00:19,760 --> 02:00:22,719
given that we've done

3173
02:00:22,800 --> 02:00:24,800
stuff but we didn't we charted email

3174
02:00:24,800 --> 02:00:27,360
core instead murray do you want to

3175
02:00:27,360 --> 02:00:30,000
comment on this

3176
02:00:36,320 --> 02:00:38,000
what am i commenting on

3177
02:00:38,000 --> 02:00:41,199
uh whether we want to update the charter

3178
02:00:41,199 --> 02:00:42,719
for extra

3179
02:00:42,719 --> 02:00:43,920
um

3180
02:00:43,920 --> 02:00:47,920
given that it's currently whatever it is

3181
02:00:48,159 --> 02:00:52,040
ah not that

3182
02:01:00,560 --> 02:01:02,080
i was just looking at it what what do we

3183
02:01:02,080 --> 02:01:03,199
want to cover that's not in there

3184
02:01:03,199 --> 02:01:04,480
already

3185
02:01:04,480 --> 02:01:06,560
yep um this was more whether we were

3186
02:01:06,560 --> 02:01:09,199
going to this was going to take on the

3187
02:01:09,199 --> 02:01:11,440
other email related stuff

3188
02:01:11,440 --> 02:01:12,800
oh

3189
02:01:12,800 --> 02:01:14,159
but the stuff that was brought up in

3190
02:01:14,159 --> 02:01:16,159
this match this morning this is before

3191
02:01:16,159 --> 02:01:17,440
email call

3192
02:01:17,440 --> 02:01:19,760
started i think we decided to question

3193
02:01:19,760 --> 02:01:20,960
whether it was going to happen here or

3194
02:01:20,960 --> 02:01:22,719
not oh

3195
02:01:22,719 --> 02:01:24,400
um

3196
02:01:24,400 --> 02:01:25,679
yeah the discussion that happened in

3197
02:01:25,679 --> 02:01:27,199
dispatch this morning i think probably

3198
02:01:27,199 --> 02:01:28,719
that whole question will either just

3199
02:01:28,719 --> 02:01:33,440
close the update charter here delete it

3200
02:01:33,440 --> 02:01:37,040
and work out what we want to do later

3201
02:01:37,040 --> 02:01:38,480
yeah i don't think we have to include an

3202
02:01:38,480 --> 02:01:40,639
updated charter as a milestone so let's

3203
02:01:40,639 --> 02:01:41,840
find it

3204
02:01:41,840 --> 02:01:43,679
yep

3205
02:01:43,679 --> 02:01:44,880
awesome

3206
02:01:44,880 --> 02:01:46,880
we will

3207
02:01:46,880 --> 02:01:48,320
put those changes through then and we

3208
02:01:48,320 --> 02:01:49,679
are done which is good because we're one

3209
02:01:49,679 --> 02:01:51,760
minute over

3210
02:01:51,760 --> 02:01:54,000
thanks everybody

3211
02:01:54,000 --> 02:01:56,639
good work see you tomorrow

3212
02:01:56,639 --> 02:01:57,679
what

3213
02:01:57,679 --> 02:01:58,960
all right

3214
02:01:58,960 --> 02:02:02,760
barry's gonna do a thing

3215
02:02:08,800 --> 02:02:10,400
all right there we go well you got you

3216
02:02:10,400 --> 02:02:11,679
got the infinite thing i need to turn

3217
02:02:11,679 --> 02:02:15,000
off my screen

3218
02:02:19,280 --> 02:02:21,199
i say grant

3219
02:02:21,199 --> 02:02:24,400
and you now have permission

3220
02:02:26,719 --> 02:02:28,080
there you go

3221
02:02:28,080 --> 02:02:30,239
you are now sharing slides

3222
02:02:30,239 --> 02:02:33,400
go ahead

3223
02:02:34,159 --> 02:02:36,080
oh everyone everyone's gathered around

3224
02:02:36,080 --> 02:02:38,400
barry

3225
02:02:40,480 --> 02:02:42,480
all right thank you to both of my chairs

3226
02:02:42,480 --> 02:02:44,960
for helping out

3227
02:02:44,960 --> 02:02:47,280
in this weird combined session

3228
02:02:47,280 --> 02:02:49,360
and particular gym taking notes very

3229
02:02:49,360 --> 02:02:51,920
much appreciate it

3230
02:02:51,920 --> 02:02:53,840
have a have a great evening everybody or

3231
02:02:53,840 --> 02:02:55,520
morning or wherever you are

3232
02:02:55,520 --> 02:02:57,280
and thanks for joining us

3233
02:02:57,280 --> 02:02:58,800
sure thing the hybrid session worked

3234
02:02:58,800 --> 02:03:01,040
pretty well actually yeah we did all

3235
02:03:01,040 --> 02:03:02,719
right

3236
02:03:02,719 --> 02:03:06,920
see y'all next time

3237
02:03:27,040 --> 02:03:29,520
uh it was a little bit wild not having a

3238
02:03:29,520 --> 02:03:31,280
microphone at the table i had to hold

3239
02:03:31,280 --> 02:03:34,920
this thing the whole time

3240
02:03:44,159 --> 02:03:47,159
um

