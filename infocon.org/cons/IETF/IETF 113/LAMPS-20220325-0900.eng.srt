1
00:00:05,200 --> 00:00:08,200
uh

2
00:00:49,680 --> 00:00:52,680
hmm

3
00:01:11,280 --> 00:01:13,840
good morning

4
00:01:18,320 --> 00:01:20,080
all right i think you could go ahead and

5
00:01:20,080 --> 00:01:23,320
get started

6
00:01:28,320 --> 00:01:31,279
so the uh

7
00:01:31,520 --> 00:01:33,600
alexi thank you so much for running the

8
00:01:33,600 --> 00:01:34,960
slides

9
00:01:34,960 --> 00:01:38,158
there are a bunch of them

10
00:01:38,400 --> 00:01:42,640
we have a pretty full agenda today

11
00:01:43,600 --> 00:01:45,119
so um

12
00:01:45,119 --> 00:01:47,360
i guess without further delay let's go

13
00:01:47,360 --> 00:01:50,320
ahead and get started

14
00:01:50,399 --> 00:01:52,840
next slide

15
00:01:52,840 --> 00:01:55,439
please by this point in the week you

16
00:01:55,439 --> 00:01:57,280
should all be very familiar with the

17
00:01:57,280 --> 00:02:00,479
note well but please make sure you're

18
00:02:00,479 --> 00:02:02,079
aware of

19
00:02:02,079 --> 00:02:05,520
your obligations before you contribute

20
00:02:05,520 --> 00:02:08,758
next slide

21
00:02:08,878 --> 00:02:10,160
uh

22
00:02:10,160 --> 00:02:12,959
basically this is the agenda it's two

23
00:02:12,959 --> 00:02:15,760
pages full of stuff um

24
00:02:15,760 --> 00:02:18,560
the first part is stuff that needs the

25
00:02:18,560 --> 00:02:20,480
least discussion

26
00:02:20,480 --> 00:02:22,000
and then we move into the stuff that

27
00:02:22,000 --> 00:02:24,400
needs more discussion

28
00:02:24,400 --> 00:02:25,520
um

29
00:02:25,520 --> 00:02:28,080
and then we move into stuff that's under

30
00:02:28,080 --> 00:02:31,360
consideration for adoption

31
00:02:31,360 --> 00:02:33,519
um

32
00:02:33,519 --> 00:02:34,840
has anybody

33
00:02:34,840 --> 00:02:40,480
uh oh and there's uh one agenda bash

34
00:02:41,040 --> 00:02:42,160
the

35
00:02:42,160 --> 00:02:45,599
last presentation um

36
00:02:45,599 --> 00:02:47,920
renee reached out to me and said it was

37
00:02:47,920 --> 00:02:48,720
very

38
00:02:48,720 --> 00:02:51,200
unlikely that that is going to make it

39
00:02:51,200 --> 00:02:52,640
to

40
00:02:52,640 --> 00:02:53,920
that we're going to get through all of

41
00:02:53,920 --> 00:02:55,280
this so

42
00:02:55,280 --> 00:02:57,280
he has

43
00:02:57,280 --> 00:02:59,680
withdrawn the request to speak and he

44
00:02:59,680 --> 00:03:00,959
will bring his

45
00:03:00,959 --> 00:03:03,680
topic to the mail list

46
00:03:03,680 --> 00:03:07,840
are there any other agenda bashes

47
00:03:12,239 --> 00:03:14,640
is there a scribe

48
00:03:14,640 --> 00:03:17,599
oh thank you for keeping me

49
00:03:17,599 --> 00:03:19,280
straight

50
00:03:19,280 --> 00:03:21,519
um

51
00:03:22,959 --> 00:03:24,640
is somebody willing to take notes from

52
00:03:24,640 --> 00:03:26,400
the kodi md

53
00:03:26,400 --> 00:03:28,080
i see a very

54
00:03:28,080 --> 00:03:30,840
shy hand

55
00:03:30,840 --> 00:03:34,720
awesome thank you very much

56
00:03:38,799 --> 00:03:41,680
a shy hand

57
00:03:43,440 --> 00:03:45,680
so the uh

58
00:03:45,680 --> 00:03:48,480
first presentation is going to be from

59
00:03:48,480 --> 00:03:50,159
hendrick i believe he's the one going to

60
00:03:50,159 --> 00:03:52,798
be speaking

61
00:03:53,599 --> 00:03:57,439
hendrick would you come to the

62
00:03:59,519 --> 00:04:00,799
okay

63
00:04:00,799 --> 00:04:02,799
thanks for us

64
00:04:02,799 --> 00:04:04,879
that's right yep

65
00:04:04,879 --> 00:04:06,159
um it's

66
00:04:06,159 --> 00:04:09,120
on the materials

67
00:04:09,840 --> 00:04:12,840
um

68
00:04:16,959 --> 00:04:18,880
yeah it's all through the first three

69
00:04:18,880 --> 00:04:21,279
presentations

70
00:04:21,279 --> 00:04:24,400
okay next slide please

71
00:04:24,560 --> 00:04:27,560
next

72
00:04:28,639 --> 00:04:29,600
so

73
00:04:29,600 --> 00:04:32,160
um this is about the changes to cmp

74
00:04:32,160 --> 00:04:36,080
update since um itf 112.

75
00:04:36,080 --> 00:04:39,280
um i managed to reach out to the authors

76
00:04:39,280 --> 00:04:41,680
of 4210 to

77
00:04:41,680 --> 00:04:44,479
remove the pre-work disclaimer

78
00:04:44,479 --> 00:04:47,280
i did

79
00:04:48,240 --> 00:04:50,160
do some checks to

80
00:04:50,160 --> 00:04:52,720
address nits from the nit checking tool

81
00:04:52,720 --> 00:04:56,800
with regard to outdated historic rfcs

82
00:04:56,800 --> 00:04:58,960
we did clarify

83
00:04:58,960 --> 00:04:59,759
the

84
00:04:59,759 --> 00:05:03,840
reference to crl sources based on

85
00:05:03,840 --> 00:05:06,320
this thing a distributed name

86
00:05:06,320 --> 00:05:08,479
and issue a

87
00:05:08,479 --> 00:05:10,400
general name

88
00:05:10,400 --> 00:05:12,560
we

89
00:05:12,720 --> 00:05:15,039
referenced fur to further documents with

90
00:05:15,039 --> 00:05:17,520
regard to random number generation

91
00:05:17,520 --> 00:05:19,520
we did

92
00:05:19,520 --> 00:05:20,880
open the

93
00:05:20,880 --> 00:05:24,160
ca search support message to also

94
00:05:24,160 --> 00:05:25,600
transfer

95
00:05:25,600 --> 00:05:27,759
trusted root ca certificates and

96
00:05:27,759 --> 00:05:30,560
addressed and security consideration

97
00:05:30,560 --> 00:05:33,440
with that regard

98
00:05:33,440 --> 00:05:35,600
and we rolled back

99
00:05:35,600 --> 00:05:39,120
a change to the root ca updates

100
00:05:39,120 --> 00:05:41,520
support message to

101
00:05:41,520 --> 00:05:44,880
not to need to register new oids

102
00:05:44,880 --> 00:05:47,759
next slide please

103
00:05:48,560 --> 00:05:50,080
so we

104
00:05:50,080 --> 00:05:53,520
addressed all feedbacks from from roman

105
00:05:53,520 --> 00:05:56,479
from the area director review

106
00:05:56,479 --> 00:05:59,440
and um i guess there are two

107
00:05:59,440 --> 00:06:00,400
points

108
00:06:00,400 --> 00:06:02,479
for further discussion

109
00:06:02,479 --> 00:06:05,280
um i didn't get feedback yet from roman

110
00:06:05,280 --> 00:06:07,840
whether the rest was was sufficiently

111
00:06:07,840 --> 00:06:09,120
addressed

112
00:06:09,120 --> 00:06:12,319
but coming to the two open issues

113
00:06:12,319 --> 00:06:16,479
roman suggested to have a 42

114
00:06:16,479 --> 00:06:20,080
10 bis document though the cmp updates

115
00:06:20,080 --> 00:06:22,960
offers quite a number of changes

116
00:06:22,960 --> 00:06:26,720
so the authors are open to do so but

117
00:06:26,720 --> 00:06:28,720
the working group

118
00:06:28,720 --> 00:06:31,280
back then decided to go with this cmp

119
00:06:31,280 --> 00:06:33,360
updates approach and

120
00:06:33,360 --> 00:06:35,520
um finally if

121
00:06:35,520 --> 00:06:38,639
not having the cmp updates approach we

122
00:06:38,639 --> 00:06:41,520
would also probably need to do

123
00:06:41,520 --> 00:06:44,960
a 6712 bis because there are also some

124
00:06:44,960 --> 00:06:48,880
updates of 60 20 712 in the cmp updates

125
00:06:48,880 --> 00:06:50,319
document

126
00:06:50,319 --> 00:06:52,880
so the the question is

127
00:06:52,880 --> 00:06:55,440
how to move forward um

128
00:06:55,440 --> 00:06:57,360
with this point

129
00:06:57,360 --> 00:06:59,199
i would would like to to get some

130
00:06:59,199 --> 00:07:02,000
feedback and guidance on on what to do

131
00:07:02,000 --> 00:07:03,280
next

132
00:07:03,280 --> 00:07:04,560
so yet

133
00:07:04,560 --> 00:07:07,680
i didn't receive any concrete feedback

134
00:07:07,680 --> 00:07:08,880
from

135
00:07:08,880 --> 00:07:11,440
a roman or or us

136
00:07:11,440 --> 00:07:13,440
well roman's ready to speak so let's let

137
00:07:13,440 --> 00:07:16,000
him do that oh sorry roman you're

138
00:07:16,000 --> 00:07:18,319
welcome

139
00:07:18,560 --> 00:07:19,360
hey

140
00:07:19,360 --> 00:07:21,120
good morning thanks for all the work and

141
00:07:21,120 --> 00:07:23,199
and all the different updates so the one

142
00:07:23,199 --> 00:07:25,599
thing that would help me uh

143
00:07:25,599 --> 00:07:27,919
review all the changes that you made is

144
00:07:27,919 --> 00:07:29,599
if you could publish a new document that

145
00:07:29,599 --> 00:07:32,960
would be exceedingly helpful

146
00:07:33,440 --> 00:07:34,880
and

147
00:07:34,880 --> 00:07:37,599
as to the cnp updates versus kind of

148
00:07:37,599 --> 00:07:39,680
doing the best documents

149
00:07:39,680 --> 00:07:41,680
that's we don't need to make a change we

150
00:07:41,680 --> 00:07:44,319
just need to explain our rationale and i

151
00:07:44,319 --> 00:07:46,240
believe the rationale is exactly what

152
00:07:46,240 --> 00:07:47,759
what you said and what we talked about

153
00:07:47,759 --> 00:07:49,280
in the in the email which is

154
00:07:49,280 --> 00:07:51,360
historically that's not how lamps has

155
00:07:51,360 --> 00:07:53,680
done the updates and lamps is continuing

156
00:07:53,680 --> 00:07:55,039
to follow the

157
00:07:55,039 --> 00:07:57,840
the same path it's done before and i can

158
00:07:57,840 --> 00:08:00,479
use that to discuss that in the isg i

159
00:08:00,479 --> 00:08:02,080
had just anticipated that this would be

160
00:08:02,080 --> 00:08:04,479
a bit of feedback on how the document

161
00:08:04,479 --> 00:08:06,319
would be done and i wanted to make sure

162
00:08:06,319 --> 00:08:08,080
that we had appropriately kind of had

163
00:08:08,080 --> 00:08:11,360
that history documented

164
00:08:11,360 --> 00:08:12,400
uh

165
00:08:12,400 --> 00:08:15,120
roman the other thing is that we

166
00:08:15,120 --> 00:08:16,720
thought this was going to be much more

167
00:08:16,720 --> 00:08:20,240
modest when we started okay and it kind

168
00:08:20,240 --> 00:08:22,319
of grew um

169
00:08:22,319 --> 00:08:26,240
like we we took the opposite um approach

170
00:08:26,240 --> 00:08:27,759
with

171
00:08:27,759 --> 00:08:30,479
logo types where we actually decided to

172
00:08:30,479 --> 00:08:33,039
do the bis

173
00:08:33,039 --> 00:08:35,519
because we we wanted to merge

174
00:08:35,519 --> 00:08:37,919
two rfcs

175
00:08:37,919 --> 00:08:39,760
so i mean i

176
00:08:39,760 --> 00:08:42,479
i think this was um

177
00:08:42,479 --> 00:08:44,560
a reasonable decision at the time we

178
00:08:44,560 --> 00:08:45,600
made it

179
00:08:45,600 --> 00:08:48,080
right and i think it's just a lot of

180
00:08:48,080 --> 00:08:51,279
work to to get from here to abyss

181
00:08:51,279 --> 00:08:53,120
yeah i completely agree i mean again in

182
00:08:53,120 --> 00:08:54,959
an ideal world had we known this it

183
00:08:54,959 --> 00:08:56,880
would have been much cleaner and kind of

184
00:08:56,880 --> 00:08:58,480
easier to do this but that's not where

185
00:08:58,480 --> 00:09:00,800
we are now and so that's right i i you

186
00:09:00,800 --> 00:09:02,240
know just we're having the conversation

187
00:09:02,240 --> 00:09:03,760
with this good and for me you know the

188
00:09:03,760 --> 00:09:05,360
resolution of this let's just document

189
00:09:05,360 --> 00:09:07,440
it in the shepherd right up uh and i'll

190
00:09:07,440 --> 00:09:09,040
have this in my back pocket that we

191
00:09:09,040 --> 00:09:10,480
talked about this from the minutes and

192
00:09:10,480 --> 00:09:11,839
i'll use that when we ballot and i'll

193
00:09:11,839 --> 00:09:13,360
get the feedback of why didn't you do

194
00:09:13,360 --> 00:09:14,880
the best

195
00:09:14,880 --> 00:09:16,480
okay

196
00:09:16,480 --> 00:09:17,760
um

197
00:09:17,760 --> 00:09:19,760
so do you want me to update the shepard

198
00:09:19,760 --> 00:09:21,680
write-up could you do that that would be

199
00:09:21,680 --> 00:09:22,800
very helpful

200
00:09:22,800 --> 00:09:24,320
all right because that'll indicate that

201
00:09:24,320 --> 00:09:26,000
the working group discussed that versus

202
00:09:26,000 --> 00:09:27,360
me saying the working group discussed

203
00:09:27,360 --> 00:09:28,320
that

204
00:09:28,320 --> 00:09:30,560
okay

205
00:09:31,440 --> 00:09:33,519
and then on if i was being asked about

206
00:09:33,519 --> 00:09:36,399
feedback on the dot well known

207
00:09:36,399 --> 00:09:39,440
i need to dive into that i believe it

208
00:09:39,440 --> 00:09:42,320
was actually ben who brought that

209
00:09:42,320 --> 00:09:43,600
to the table

210
00:09:43,600 --> 00:09:45,600
it was ben he brought that

211
00:09:45,600 --> 00:09:48,560
in the review of cmp over co-op in the

212
00:09:48,560 --> 00:09:51,120
ace working group

213
00:09:51,120 --> 00:09:54,560
yeah he's probably right um so we took

214
00:09:54,560 --> 00:09:57,120
the same approach

215
00:09:57,120 --> 00:09:59,839
than um est took

216
00:09:59,839 --> 00:10:02,800
just for for for being aligned and then

217
00:10:02,800 --> 00:10:04,320
not having different approach for

218
00:10:04,320 --> 00:10:06,800
different enrollment protocols but i see

219
00:10:06,800 --> 00:10:08,160
his point

220
00:10:08,160 --> 00:10:11,839
having a locally defined path segment in

221
00:10:11,839 --> 00:10:14,640
between or some two well-known

222
00:10:14,640 --> 00:10:17,519
segments is not what

223
00:10:17,519 --> 00:10:20,480
yeah the well-known was was built for

224
00:10:20,480 --> 00:10:22,640
right i just found my sticky note on on

225
00:10:22,640 --> 00:10:26,560
my desk for when we talked about it

226
00:10:27,279 --> 00:10:29,680
yeah i have some proposals on the next

227
00:10:29,680 --> 00:10:33,279
slide but um yeah yeah

228
00:10:33,279 --> 00:10:34,560
you have yeah

229
00:10:34,560 --> 00:10:35,920
given it so

230
00:10:35,920 --> 00:10:37,200
coming back to the updates and these

231
00:10:37,200 --> 00:10:39,120
documents we ended up in similar

232
00:10:39,120 --> 00:10:40,959
situation right pc maybe we started

233
00:10:40,959 --> 00:10:43,600
doing dc encapsulation guidelines and

234
00:10:43,600 --> 00:10:44,959
implementation notes and so on and then

235
00:10:44,959 --> 00:10:46,399
we realized that you have to update and

236
00:10:46,399 --> 00:10:48,560
change things and then we decided it

237
00:10:48,560 --> 00:10:50,000
actually is easier to make a piece

238
00:10:50,000 --> 00:10:52,959
document because it's actually

239
00:10:52,959 --> 00:10:54,720
it's much easier for implementation

240
00:10:54,720 --> 00:10:56,399
where everything is in one document you

241
00:10:56,399 --> 00:10:58,160
don't have to go oh

242
00:10:58,160 --> 00:10:58,959
yes

243
00:10:58,959 --> 00:11:01,440
implement this but you always

244
00:11:01,440 --> 00:11:03,519
have to implement everything in it here

245
00:11:03,519 --> 00:11:05,360
and and that's so it's very and also the

246
00:11:05,360 --> 00:11:07,360
other question is that

247
00:11:07,360 --> 00:11:09,360
my understanding cmp is already in use

248
00:11:09,360 --> 00:11:11,360
in lots of places where so should we

249
00:11:11,360 --> 00:11:12,800
actually start uh think about

250
00:11:12,800 --> 00:11:14,399
progressing it from proper i think it's

251
00:11:14,399 --> 00:11:16,560
proper standard now right

252
00:11:16,560 --> 00:11:18,640
so how about moving it to the internet

253
00:11:18,640 --> 00:11:20,240
standard

254
00:11:20,240 --> 00:11:21,839
should we actually start doing that at

255
00:11:21,839 --> 00:11:23,120
some point they're not doing that i

256
00:11:23,120 --> 00:11:24,640
think would be much better to do in this

257
00:11:24,640 --> 00:11:27,640
documentary

258
00:11:28,800 --> 00:11:29,839
yeah

259
00:11:29,839 --> 00:11:32,480
so i had a

260
00:11:32,480 --> 00:11:36,800
i had a look into the 4210 and 6712 and

261
00:11:36,800 --> 00:11:39,440
talked to the rfc editors

262
00:11:39,440 --> 00:11:40,320
and

263
00:11:40,320 --> 00:11:41,519
got some

264
00:11:41,519 --> 00:11:45,360
yeah some kind of xml version so

265
00:11:45,360 --> 00:11:47,600
what what the authors think we could

266
00:11:47,600 --> 00:11:49,440
could offer is just

267
00:11:49,440 --> 00:11:51,360
providing an xml

268
00:11:51,360 --> 00:11:53,760
having all the changes done as discussed

269
00:11:53,760 --> 00:11:55,680
in cmp updates

270
00:11:55,680 --> 00:11:58,079
and that's it so that would be

271
00:11:58,079 --> 00:12:00,320
kind of a reasonable update

272
00:12:00,320 --> 00:12:01,440
or

273
00:12:01,440 --> 00:12:03,519
a reasonable effort

274
00:12:03,519 --> 00:12:06,320
going through all of the sections in cmp

275
00:12:06,320 --> 00:12:08,639
updates is probably more that what we

276
00:12:08,639 --> 00:12:11,519
plan to do so i want to make tyro say

277
00:12:11,519 --> 00:12:13,120
that more slowly what do you want to

278
00:12:13,120 --> 00:12:15,519
change the document to

279
00:12:15,519 --> 00:12:16,880
the internet

280
00:12:16,880 --> 00:12:18,720
internet standard okay i just couldn't

281
00:12:18,720 --> 00:12:20,880
like

282
00:12:21,279 --> 00:12:24,480
i mean this is very brave of you suggest

283
00:12:24,480 --> 00:12:27,279
this i mean

284
00:12:27,279 --> 00:12:30,320
not saying you know it's a bad thing but

285
00:12:30,320 --> 00:12:32,639
go ahead michael

286
00:12:32,639 --> 00:12:34,959
sorry

287
00:12:36,160 --> 00:12:38,160
michael richardson so um i think that's

288
00:12:38,160 --> 00:12:40,320
a great idea the problem i think i i

289
00:12:40,320 --> 00:12:41,600
understand is that i don't think that

290
00:12:41,600 --> 00:12:43,519
the work that we're doing here is

291
00:12:43,519 --> 00:12:46,240
simply uh um

292
00:12:46,240 --> 00:12:48,720
is simply removing things that we didn't

293
00:12:48,720 --> 00:12:50,720
implement before

294
00:12:50,720 --> 00:12:53,279
and the stuff that i think you are doing

295
00:12:53,279 --> 00:12:55,600
is new work that we won't have a we

296
00:12:55,600 --> 00:12:57,200
won't be able to point to two years of

297
00:12:57,200 --> 00:12:58,800
interoperation or something like that to

298
00:12:58,800 --> 00:13:00,800
be able to get to that so it would be

299
00:13:00,800 --> 00:13:02,800
nice to go that direction

300
00:13:02,800 --> 00:13:05,519
um but unless we want the document to

301
00:13:05,519 --> 00:13:06,880
sit around for two years while people

302
00:13:06,880 --> 00:13:07,920
deploy it

303
00:13:07,920 --> 00:13:10,240
um i i think it's probably gonna be

304
00:13:10,240 --> 00:13:13,200
don't think it's two years it i think it

305
00:13:13,200 --> 00:13:14,720
if i remember correctly it's like six

306
00:13:14,720 --> 00:13:16,000
months

307
00:13:16,000 --> 00:13:19,720
well okay but

308
00:13:21,440 --> 00:13:23,040
do we wait and

309
00:13:23,040 --> 00:13:25,120
and i don't see a reason we can advance

310
00:13:25,120 --> 00:13:26,240
later

311
00:13:26,240 --> 00:13:27,600
yeah

312
00:13:27,600 --> 00:13:29,440
so that that's all i mean we we could

313
00:13:29,440 --> 00:13:31,680
well anyway i i think that that as you

314
00:13:31,680 --> 00:13:33,839
said we we thought this was a smaller

315
00:13:33,839 --> 00:13:36,000
effort when we started

316
00:13:36,000 --> 00:13:38,240
um i think i agree with tarot that it

317
00:13:38,240 --> 00:13:41,440
may be is that easier to write this as a

318
00:13:41,440 --> 00:13:43,360
redo this as abyss

319
00:13:43,360 --> 00:13:45,600
um but i i don't

320
00:13:45,600 --> 00:13:47,839
i don't think you know i it would also

321
00:13:47,839 --> 00:13:49,360
be good that we could rip out stuff that

322
00:13:49,360 --> 00:13:51,519
we never used when we go to internet

323
00:13:51,519 --> 00:13:53,360
standard and that would also be a good

324
00:13:53,360 --> 00:13:55,760
best thing if we can get rid of 20 of

325
00:13:55,760 --> 00:13:57,760
the document that's stuff people don't

326
00:13:57,760 --> 00:13:59,040
have to review

327
00:13:59,040 --> 00:14:01,440
um so but i don't think that we can do

328
00:14:01,440 --> 00:14:03,600
that i just would be a lot nice i just

329
00:14:03,600 --> 00:14:06,560
don't think we can get there

330
00:14:07,279 --> 00:14:09,839
okay roman go tarot says going to the

331
00:14:09,839 --> 00:14:11,360
abyss they're going to the internet and

332
00:14:11,360 --> 00:14:12,720
and i meant going to the internet

333
00:14:12,720 --> 00:14:14,079
standard yeah

334
00:14:14,079 --> 00:14:15,440
right that was exactly what i was going

335
00:14:15,440 --> 00:14:17,040
to ask about we're not talking about

336
00:14:17,040 --> 00:14:19,040
trying to do is for the cmp updates

337
00:14:19,040 --> 00:14:21,040
because that's a no-go uh if we want to

338
00:14:21,040 --> 00:14:23,199
make abyss we which would be the only

339
00:14:23,199 --> 00:14:25,680
way we could do the is that's that's a

340
00:14:25,680 --> 00:14:27,120
whole new body of work all right good

341
00:14:27,120 --> 00:14:28,800
thanks i was just wondering whether we

342
00:14:28,800 --> 00:14:32,160
were trying to do something a lot harder

343
00:14:32,160 --> 00:14:33,760
i think churro was trying to get us to

344
00:14:33,760 --> 00:14:36,800
do something a lot harder

345
00:14:39,199 --> 00:14:41,519
so so one more comment also if i

346
00:14:41,519 --> 00:14:42,880
understand correctly we can go to the

347
00:14:42,880 --> 00:14:45,040
enter standard later if we have a beast

348
00:14:45,040 --> 00:14:46,320
document if you actually do this

349
00:14:46,320 --> 00:14:47,440
document

350
00:14:47,440 --> 00:14:50,000
and then we have implementations and

351
00:14:50,000 --> 00:14:52,000
after two years we when we are ready and

352
00:14:52,000 --> 00:14:53,519
we notice that nothing has to be changed

353
00:14:53,519 --> 00:14:55,680
we can then go to data standard without

354
00:14:55,680 --> 00:14:57,120
making a new

355
00:14:57,120 --> 00:14:58,959
rfc at all

356
00:14:58,959 --> 00:15:01,040
yeah you can upgrade it to internet

357
00:15:01,040 --> 00:15:02,959
standard without

358
00:15:02,959 --> 00:15:06,000
changing the document

359
00:15:08,800 --> 00:15:11,920
yeah so with regard to readability for

360
00:15:11,920 --> 00:15:13,600
implementers

361
00:15:13,600 --> 00:15:16,320
with all the erratas and the changes

362
00:15:16,320 --> 00:15:19,120
implemented or proposed in cmp updates

363
00:15:19,120 --> 00:15:21,440
it would definitely be much easier to

364
00:15:21,440 --> 00:15:23,360
have a best document

365
00:15:23,360 --> 00:15:24,079
but

366
00:15:24,079 --> 00:15:27,279
yeah as i said my approach would be to

367
00:15:27,279 --> 00:15:28,959
really just

368
00:15:28,959 --> 00:15:32,000
just do the changes as discussed in cmp

369
00:15:32,000 --> 00:15:34,160
updates and and not like

370
00:15:34,160 --> 00:15:36,480
uh michael also said um

371
00:15:36,480 --> 00:15:39,600
stripping off 20 of the text that would

372
00:15:39,600 --> 00:15:40,480
be

373
00:15:40,480 --> 00:15:43,120
just resetting the effort and and kind

374
00:15:43,120 --> 00:15:47,199
of starting over again and i yeah

375
00:15:47,199 --> 00:15:50,480
don't think that this is what is um

376
00:15:50,480 --> 00:15:52,160
yeah planned

377
00:15:52,160 --> 00:15:54,720
yeah i think yeah basically uh moving to

378
00:15:54,720 --> 00:15:56,720
internet standards it's a lot of extra

379
00:15:56,720 --> 00:15:59,839
work for you so understandably

380
00:15:59,839 --> 00:16:02,000
okay so at this point uh i think the

381
00:16:02,000 --> 00:16:05,199
plan is to proceed with the document uh

382
00:16:05,199 --> 00:16:07,199
as an update and

383
00:16:07,199 --> 00:16:09,920
if we want to advance we will

384
00:16:09,920 --> 00:16:12,320
do the viss at that time

385
00:16:12,320 --> 00:16:14,560
does that make sense

386
00:16:14,560 --> 00:16:19,079
does anyone object to that way forward

387
00:16:22,560 --> 00:16:25,680
okay thanks russ

388
00:16:27,440 --> 00:16:29,680
okay just checking the the

389
00:16:29,680 --> 00:16:33,758
chat to make sure no one's objecting

390
00:16:34,079 --> 00:16:38,160
okay go ahead so the second point um as

391
00:16:38,160 --> 00:16:41,839
i said it came up was brought up by ben

392
00:16:41,839 --> 00:16:44,560
during the cmp over co-op

393
00:16:44,560 --> 00:16:45,920
review

394
00:16:45,920 --> 00:16:49,440
and as as pointed out the

395
00:16:49,440 --> 00:16:51,920
the past segment that is implementation

396
00:16:51,920 --> 00:16:53,120
specific

397
00:16:53,120 --> 00:16:55,360
pointing at a c

398
00:16:55,360 --> 00:16:57,519
certificate profile to be used for the

399
00:16:57,519 --> 00:17:00,800
enrollment or a ca to be addressed

400
00:17:00,800 --> 00:17:03,600
in the past in between of

401
00:17:03,600 --> 00:17:05,439
the protocol

402
00:17:05,439 --> 00:17:08,640
portion and the operations portion

403
00:17:08,640 --> 00:17:10,559
like like here we see the arbitrary

404
00:17:10,559 --> 00:17:13,199
label in between est and simple enroll

405
00:17:13,199 --> 00:17:16,880
or in the cmp example between cmp and

406
00:17:16,880 --> 00:17:18,959
the initialization

407
00:17:18,959 --> 00:17:22,400
operation portion that was kind of

408
00:17:22,400 --> 00:17:24,959
addressed or criticized that this is not

409
00:17:24,959 --> 00:17:25,839
in

410
00:17:25,839 --> 00:17:28,440
alignment with the dot well-known

411
00:17:28,440 --> 00:17:30,160
specification

412
00:17:30,160 --> 00:17:32,400
and um yeah

413
00:17:32,400 --> 00:17:34,720
ben clearly pointed out that this

414
00:17:34,720 --> 00:17:37,520
wouldn't work out but then you're on the

415
00:17:37,520 --> 00:17:40,080
the cue please

416
00:17:40,080 --> 00:17:42,640
go ahead yeah uh i guess the the short

417
00:17:42,640 --> 00:17:44,880
explanation here is that the well-known

418
00:17:44,880 --> 00:17:47,360
path is designed so that there's parts

419
00:17:47,360 --> 00:17:49,280
of the uri namespace that are under the

420
00:17:49,280 --> 00:17:51,280
control of the protocol

421
00:17:51,280 --> 00:17:53,280
because by default the ui paths are in

422
00:17:53,280 --> 00:17:56,480
the control of the site operator

423
00:17:56,480 --> 00:17:58,880
and it's perfectly reasonable for us to

424
00:17:58,880 --> 00:18:00,640
say okay we've got this well-known stuff

425
00:18:00,640 --> 00:18:02,480
that's part of the protocol but we want

426
00:18:02,480 --> 00:18:04,320
to redelegate some of that back to the

427
00:18:04,320 --> 00:18:06,640
operator but my concern here is that we

428
00:18:06,640 --> 00:18:07,600
should not

429
00:18:07,600 --> 00:18:09,760
re-delegate all of it back to the

430
00:18:09,760 --> 00:18:12,400
operator leaving us stuck without any

431
00:18:12,400 --> 00:18:14,400
path for expansion if we need to make

432
00:18:14,400 --> 00:18:16,480
new parts of the protocol

433
00:18:16,480 --> 00:18:18,000
and so

434
00:18:18,000 --> 00:18:19,600
i don't object to having this sort of

435
00:18:19,600 --> 00:18:22,160
arbitrary label or profile label present

436
00:18:22,160 --> 00:18:23,760
i just think we need to make sure we do

437
00:18:23,760 --> 00:18:26,880
it in a way that we retain a scope for

438
00:18:26,880 --> 00:18:29,120
expansion in terms of parts of the path

439
00:18:29,120 --> 00:18:30,480
that are under the control of the

440
00:18:30,480 --> 00:18:32,000
protocol still

441
00:18:32,000 --> 00:18:34,160
so the easiest way to do that would just

442
00:18:34,160 --> 00:18:36,720
be to add another sort of sub component

443
00:18:36,720 --> 00:18:37,679
that

444
00:18:37,679 --> 00:18:39,039
prefixes

445
00:18:39,039 --> 00:18:40,640
what these arbitrary labels will be and

446
00:18:40,640 --> 00:18:42,480
we were sort of only delegating that

447
00:18:42,480 --> 00:18:43,679
subtree

448
00:18:43,679 --> 00:18:45,919
back to the site operator but there's a

449
00:18:45,919 --> 00:18:48,080
bunch of other ways we could imagine

450
00:18:48,080 --> 00:18:50,240
leaving us room for future protocol

451
00:18:50,240 --> 00:18:52,720
expansion

452
00:18:52,880 --> 00:18:54,799
maybe next slide

453
00:18:54,799 --> 00:18:55,679
so

454
00:18:55,679 --> 00:18:59,600
we discussed um with also some some

455
00:18:59,600 --> 00:19:02,080
ways to move forward here so

456
00:19:02,080 --> 00:19:03,600
number one is

457
00:19:03,600 --> 00:19:07,120
um as we specified it today number two

458
00:19:07,120 --> 00:19:08,320
is

459
00:19:08,320 --> 00:19:10,720
kind of if we move have to move away

460
00:19:10,720 --> 00:19:11,840
from that

461
00:19:11,840 --> 00:19:13,200
um

462
00:19:13,200 --> 00:19:15,679
to do it in the in the query um

463
00:19:15,679 --> 00:19:16,799
component

464
00:19:16,799 --> 00:19:19,840
of the uri to specify the certificate

465
00:19:19,840 --> 00:19:22,240
profile here this example shows

466
00:19:22,240 --> 00:19:25,360
if you want to enroll to a local domain

467
00:19:25,360 --> 00:19:27,600
and you want to specify that you want to

468
00:19:27,600 --> 00:19:31,120
enroll the ldf id certificate profile

469
00:19:31,120 --> 00:19:33,120
then you could could do it

470
00:19:33,120 --> 00:19:35,919
yeah could use this label to to indicate

471
00:19:35,919 --> 00:19:37,360
that

472
00:19:37,360 --> 00:19:39,440
to differentiate to some application

473
00:19:39,440 --> 00:19:41,919
specific certificates they may need to

474
00:19:41,919 --> 00:19:44,400
be enrolled later on

475
00:19:44,400 --> 00:19:46,960
so this is the second approach doing it

476
00:19:46,960 --> 00:19:49,679
with a with a query component

477
00:19:49,679 --> 00:19:52,720
the third approach is to switch

478
00:19:52,720 --> 00:19:55,840
the operations label and the

479
00:19:55,840 --> 00:19:57,360
profile label

480
00:19:57,360 --> 00:19:58,080
but

481
00:19:58,080 --> 00:19:59,360
yeah that

482
00:19:59,360 --> 00:20:04,399
seems not to be that the logical order

483
00:20:04,880 --> 00:20:07,200
and the fourth option is to to move away

484
00:20:07,200 --> 00:20:09,200
from that well known at all

485
00:20:09,200 --> 00:20:11,679
but that is also something the authors

486
00:20:11,679 --> 00:20:13,280
would yeah

487
00:20:13,280 --> 00:20:15,600
did wouldn't like to do

488
00:20:15,600 --> 00:20:16,799
so

489
00:20:16,799 --> 00:20:20,159
yeah ben you proposed additional options

490
00:20:20,159 --> 00:20:24,000
i didn't fully get them

491
00:20:27,360 --> 00:20:28,960
michael richardson i also didn't

492
00:20:28,960 --> 00:20:30,720
understand ben what you proposed which

493
00:20:30,720 --> 00:20:32,840
is why i put my my hand

494
00:20:32,840 --> 00:20:34,480
up

495
00:20:34,480 --> 00:20:36,159
uh so i guess my

496
00:20:36,159 --> 00:20:37,280
if you go

497
00:20:37,280 --> 00:20:39,120
back one side

498
00:20:39,120 --> 00:20:40,799
yeah

499
00:20:40,799 --> 00:20:43,919
one slide back much like that

500
00:20:43,919 --> 00:20:46,400
so my proposal like currently we've got

501
00:20:46,400 --> 00:20:48,240
done the bottom line is the well-known

502
00:20:48,240 --> 00:20:50,799
cmp profile label initialization

503
00:20:50,799 --> 00:20:53,520
and i was saying that uh we could do

504
00:20:53,520 --> 00:20:55,840
like that well known slash dmp and then

505
00:20:55,840 --> 00:20:58,400
add a new path component but call it p

506
00:20:58,400 --> 00:21:01,200
so we would do well known cmp slash p

507
00:21:01,200 --> 00:21:04,159
slash profile label slash initialization

508
00:21:04,159 --> 00:21:06,080
and adding that extra like p path

509
00:21:06,080 --> 00:21:08,240
component or whatever we want to call it

510
00:21:08,240 --> 00:21:10,880
is a signal that the stuff after it is a

511
00:21:10,880 --> 00:21:13,200
protocol or is a profile label

512
00:21:13,200 --> 00:21:14,480
followed by

513
00:21:14,480 --> 00:21:16,799
the rest of the stuff so so i think to

514
00:21:16,799 --> 00:21:19,039
be clear heinrich on this slide the word

515
00:21:19,039 --> 00:21:22,880
profile label is a label not a prefix

516
00:21:22,880 --> 00:21:26,320
okay so so so just the the profile in

517
00:21:26,320 --> 00:21:28,880
this case is called profile label

518
00:21:28,880 --> 00:21:30,799
right just so everyone knows that's not

519
00:21:30,799 --> 00:21:32,000
a literal

520
00:21:32,000 --> 00:21:35,440
and and ben is suggesting that it's a

521
00:21:35,440 --> 00:21:38,400
cnp slash p slash

522
00:21:38,400 --> 00:21:40,799
you know profile label and then

523
00:21:40,799 --> 00:21:43,039
uh i don't understand how initialization

524
00:21:43,039 --> 00:21:45,360
is not the label myself but i guess it's

525
00:21:45,360 --> 00:21:47,200
initialization oh that's that's the

526
00:21:47,200 --> 00:21:49,520
label that's the verb yeah okay yeah the

527
00:21:49,520 --> 00:21:51,679
operation specified in the light by

528
00:21:51,679 --> 00:21:53,440
profile in this case

529
00:21:53,440 --> 00:21:54,640
so i don't object to what he's

530
00:21:54,640 --> 00:21:57,120
suggesting i i i

531
00:21:57,120 --> 00:21:58,960
and and it kind of is interesting to me

532
00:21:58,960 --> 00:21:59,760
that

533
00:21:59,760 --> 00:22:01,039
um

534
00:22:01,039 --> 00:22:03,280
that particularly when it comes around

535
00:22:03,280 --> 00:22:04,799
to renewing

536
00:22:04,799 --> 00:22:06,000
things

537
00:22:06,000 --> 00:22:07,840
that it would be nice to say which thing

538
00:22:07,840 --> 00:22:10,720
you're trying to renew um ldev id versus

539
00:22:10,720 --> 00:22:12,880
some application uh thing it would be

540
00:22:12,880 --> 00:22:14,400
good to be able to say that so there's

541
00:22:14,400 --> 00:22:16,240
no no confusion

542
00:22:16,240 --> 00:22:18,480
uh i think we have a we have we've

543
00:22:18,480 --> 00:22:20,159
discussed this a lot we know we have a

544
00:22:20,159 --> 00:22:22,000
discovery problem here

545
00:22:22,000 --> 00:22:23,120
um

546
00:22:23,120 --> 00:22:24,320
um

547
00:22:24,320 --> 00:22:26,880
but but we but i think that in many

548
00:22:26,880 --> 00:22:28,480
cases that essentially someone else is

549
00:22:28,480 --> 00:22:30,720
going to say you know for for light bulb

550
00:22:30,720 --> 00:22:32,960
systems that that the following profiles

551
00:22:32,960 --> 00:22:35,679
are in process and that there's no

552
00:22:35,679 --> 00:22:37,760
no discovery you can go forward one

553
00:22:37,760 --> 00:22:41,080
slide again

554
00:22:41,440 --> 00:22:43,200
so i don't like number two i don't like

555
00:22:43,200 --> 00:22:44,320
queries

556
00:22:44,320 --> 00:22:46,640
but other than that i have no particular

557
00:22:46,640 --> 00:22:48,159
choice i just wanted to say that i think

558
00:22:48,159 --> 00:22:50,080
the query makes it more difficult than

559
00:22:50,080 --> 00:22:51,360
anything else

560
00:22:51,360 --> 00:22:53,120
and we can put the slash p or whatever

561
00:22:53,120 --> 00:22:55,440
it is we want to put in in their bin i

562
00:22:55,440 --> 00:22:58,000
think that i think that's reasonable

563
00:22:58,000 --> 00:23:00,320
you know

564
00:23:01,200 --> 00:23:02,559
well taken

565
00:23:02,559 --> 00:23:04,799
uh

566
00:23:06,840 --> 00:23:09,760
suggestion okay thanks i think the

567
00:23:09,760 --> 00:23:12,559
decision is one with additional with a

568
00:23:12,559 --> 00:23:16,400
additional uh label yep a well-known

569
00:23:16,400 --> 00:23:17,360
label

570
00:23:17,360 --> 00:23:19,840
um that indicates the next label is or

571
00:23:19,840 --> 00:23:23,120
the next segment is a the profile name

572
00:23:23,120 --> 00:23:24,559
yep

573
00:23:24,559 --> 00:23:27,039
right okay understood thanks thanks for

574
00:23:27,039 --> 00:23:29,360
the guidance

575
00:23:29,360 --> 00:23:32,240
next slide please

576
00:23:33,760 --> 00:23:37,520
so coming to cmp algorithms the authors

577
00:23:37,520 --> 00:23:40,240
addressed i guess all of the feedback

578
00:23:40,240 --> 00:23:44,640
coming from the working group after um

579
00:23:44,640 --> 00:23:48,840
112 and from the area director review we

580
00:23:48,840 --> 00:23:52,799
mainly added um in section seven a table

581
00:23:52,799 --> 00:23:53,760
um

582
00:23:53,760 --> 00:23:56,000
showing all the algorithms

583
00:23:56,000 --> 00:23:59,120
um and sorted by by their cryptographic

584
00:23:59,120 --> 00:24:00,320
strength

585
00:24:00,320 --> 00:24:04,000
and we got a very valuable feedback from

586
00:24:04,000 --> 00:24:06,159
quinn and

587
00:24:06,159 --> 00:24:09,919
his colleagues on the shake and kmac

588
00:24:09,919 --> 00:24:11,279
and

589
00:24:11,279 --> 00:24:13,679
yeah also on the table itself we added

590
00:24:13,679 --> 00:24:16,320
some security considerations

591
00:24:16,320 --> 00:24:20,559
and i yeah and we managed to also remove

592
00:24:20,559 --> 00:24:22,640
the pre-work disclaimer

593
00:24:22,640 --> 00:24:24,720
so i i guess

594
00:24:24,720 --> 00:24:27,279
the cmp algorithms is

595
00:24:27,279 --> 00:24:29,760
is fine now from from the editor's

596
00:24:29,760 --> 00:24:32,960
perspective so just needing feedback

597
00:24:32,960 --> 00:24:35,840
from roman on

598
00:24:35,840 --> 00:24:40,000
yeah on the on the status of the changes

599
00:24:40,000 --> 00:24:41,840
absolutely that's totally fair action

600
00:24:41,840 --> 00:24:43,679
caught i've been a little behind i will

601
00:24:43,679 --> 00:24:45,600
re-review that's re-review it and get it

602
00:24:45,600 --> 00:24:46,559
moving

603
00:24:46,559 --> 00:24:48,559
i think from all the conversation we had

604
00:24:48,559 --> 00:24:50,240
we had a resolution actually take a look

605
00:24:50,240 --> 00:24:52,240
at the actual text thanks

606
00:24:52,240 --> 00:24:56,080
okay thanks so next slide please

607
00:24:57,440 --> 00:24:59,120
next slide is on the status of the

608
00:24:59,120 --> 00:25:01,360
lightweight cmp profile so

609
00:25:01,360 --> 00:25:04,799
this was not yet reviewed by roman

610
00:25:04,799 --> 00:25:07,760
as we were still discussing on cmp

611
00:25:07,760 --> 00:25:09,600
updates so that is

612
00:25:09,600 --> 00:25:10,480
great

613
00:25:10,480 --> 00:25:11,840
we will

614
00:25:11,840 --> 00:25:13,279
we did

615
00:25:13,279 --> 00:25:16,159
some changes um to

616
00:25:16,159 --> 00:25:18,080
the lightweight profile since one one

617
00:25:18,080 --> 00:25:19,120
two

618
00:25:19,120 --> 00:25:22,240
we did change to recommend it for

619
00:25:22,240 --> 00:25:24,000
implicit confirm

620
00:25:24,000 --> 00:25:27,279
um with enrollment um

621
00:25:27,279 --> 00:25:30,559
we did a section on on conformance

622
00:25:30,559 --> 00:25:34,080
requirements in section 7.

623
00:25:34,080 --> 00:25:36,720
we added some clarifications and we

624
00:25:36,720 --> 00:25:38,159
aligned with

625
00:25:38,159 --> 00:25:41,679
the changes done in cmp updates

626
00:25:41,679 --> 00:25:42,960
so this is

627
00:25:42,960 --> 00:25:45,440
mainly it on lightweight profile next

628
00:25:45,440 --> 00:25:48,080
slide please

629
00:25:48,320 --> 00:25:51,440
so next so open points would be also to

630
00:25:51,440 --> 00:25:55,840
to address and implement the changes

631
00:25:55,840 --> 00:25:57,919
on the dot well known as discussed

632
00:25:57,919 --> 00:25:59,120
before

633
00:25:59,120 --> 00:26:02,159
and from um discussions with with

634
00:26:02,159 --> 00:26:04,080
implementers we got some

635
00:26:04,080 --> 00:26:06,880
some feedbacks that clarification on

636
00:26:06,880 --> 00:26:09,679
error message protection and

637
00:26:09,679 --> 00:26:13,840
the section 7 the um

638
00:26:13,840 --> 00:26:16,640
the the pki management operations

639
00:26:16,640 --> 00:26:18,559
support level

640
00:26:18,559 --> 00:26:20,720
would be required so we would like to do

641
00:26:20,720 --> 00:26:21,600
that

642
00:26:21,600 --> 00:26:22,720
and

643
00:26:22,720 --> 00:26:25,679
yeah afterwards start into the the area

644
00:26:25,679 --> 00:26:28,559
directory view

645
00:26:29,200 --> 00:26:30,559
so

646
00:26:30,559 --> 00:26:33,600
next i think that's that's it

647
00:26:33,600 --> 00:26:36,080
okay so um with these

648
00:26:36,080 --> 00:26:40,080
it looks like we'll be able to return uh

649
00:26:40,080 --> 00:26:41,919
once you make the changes that we just

650
00:26:41,919 --> 00:26:43,679
talked about with the label

651
00:26:43,679 --> 00:26:46,400
uh it will the next actions will be with

652
00:26:46,400 --> 00:26:49,120
the isg and i will update the shepard

653
00:26:49,120 --> 00:26:52,320
write up for that

654
00:26:52,480 --> 00:26:54,720
the

655
00:26:54,799 --> 00:26:58,320
i think that puts these three documents

656
00:26:58,320 --> 00:27:00,880
back in the in the pile for the isg as

657
00:27:00,880 --> 00:27:03,600
soon as you have that done

658
00:27:03,600 --> 00:27:07,039
any last comments on these

659
00:27:07,039 --> 00:27:08,720
all right thank you for for this work

660
00:27:08,720 --> 00:27:10,080
hendrick

661
00:27:10,080 --> 00:27:10,960
yeah

662
00:27:10,960 --> 00:27:13,600
thank you for supporting

663
00:27:13,600 --> 00:27:17,120
and uh the next document is

664
00:27:17,120 --> 00:27:20,720
uh lamps samples there are no slides for

665
00:27:20,720 --> 00:27:21,760
this

666
00:27:21,760 --> 00:27:25,760
it is in auth 48

667
00:27:26,240 --> 00:27:28,240
is dkg in the room is there anything

668
00:27:28,240 --> 00:27:29,919
that you need to share with the group or

669
00:27:29,919 --> 00:27:32,320
are we just waiting for the rfc editor

670
00:27:32,320 --> 00:27:35,679
to finish uh your room i don't know if

671
00:27:35,679 --> 00:27:37,200
you can hear me properly i'm gonna be a

672
00:27:37,200 --> 00:27:38,399
little quiet

673
00:27:38,399 --> 00:27:38,870
um

674
00:27:38,870 --> 00:27:40,000
[Music]

675
00:27:40,000 --> 00:27:42,000
hopefully that's better

676
00:27:42,000 --> 00:27:43,200
um

677
00:27:43,200 --> 00:27:46,159
yeah so it's in auth48 um there are a

678
00:27:46,159 --> 00:27:49,360
few minor editorial cleanups that uh

679
00:27:49,360 --> 00:27:52,320
auth40 has requested and i've i'm a

680
00:27:52,320 --> 00:27:54,399
couple of cycles into that

681
00:27:54,399 --> 00:27:55,200
um

682
00:27:55,200 --> 00:27:58,080
i suspect that it will be able to be

683
00:27:58,080 --> 00:27:59,679
published shortly

684
00:27:59,679 --> 00:28:01,520
the main changes that they're asking for

685
00:28:01,520 --> 00:28:02,960
are

686
00:28:02,960 --> 00:28:04,720
asking about rather

687
00:28:04,720 --> 00:28:06,559
are

688
00:28:06,559 --> 00:28:10,399
fairly small just textual edits

689
00:28:10,399 --> 00:28:12,080
but they also

690
00:28:12,080 --> 00:28:14,480
there were some errors introduced by the

691
00:28:14,480 --> 00:28:16,080
textual edits as well so i'm just

692
00:28:16,080 --> 00:28:18,799
clarifying them right now

693
00:28:18,799 --> 00:28:21,600
okay thank you

694
00:28:21,679 --> 00:28:23,520
the next uh

695
00:28:23,520 --> 00:28:25,520
that ends the first batch those things

696
00:28:25,520 --> 00:28:28,159
that are with the isg or the rc editor

697
00:28:28,159 --> 00:28:30,640
the next ones are the certificate

698
00:28:30,640 --> 00:28:32,480
related documents

699
00:28:32,480 --> 00:28:35,360
and sean turner's up with the document

700
00:28:35,360 --> 00:28:38,479
signing eku

701
00:28:42,480 --> 00:28:44,399
one two three four all right i think

702
00:28:44,399 --> 00:28:46,240
we're good um russ are you gonna share

703
00:28:46,240 --> 00:28:49,360
the slides or do you want me to

704
00:28:51,520 --> 00:28:54,880
yeah i i'm happy i don't like mine

705
00:28:54,880 --> 00:28:56,880
alexa's gotta sort it out

706
00:28:56,880 --> 00:28:59,039
all right i'll let you do it

707
00:28:59,039 --> 00:29:00,960
it's one slide or two slides i guess

708
00:29:00,960 --> 00:29:03,600
that'll be pretty quick

709
00:29:04,000 --> 00:29:05,520
no keep going there's only two slides so

710
00:29:05,520 --> 00:29:08,000
it's really good

711
00:29:08,960 --> 00:29:12,240
yep hi this is uh

712
00:29:12,240 --> 00:29:14,000
i guess i can need to update the the

713
00:29:14,000 --> 00:29:15,440
link there but this is a working group

714
00:29:15,440 --> 00:29:17,360
draft for um

715
00:29:17,360 --> 00:29:19,039
a new extended key so just for uh

716
00:29:19,039 --> 00:29:21,200
document signing

717
00:29:21,200 --> 00:29:23,520
next

718
00:29:23,520 --> 00:29:25,679
the draft is in uh

719
00:29:25,679 --> 00:29:28,559
the o2 version was published i think at

720
00:29:28,559 --> 00:29:29,760
the beginning of the month then it's

721
00:29:29,760 --> 00:29:31,760
currently in working group last call

722
00:29:31,760 --> 00:29:33,760
we've received some comments and we're

723
00:29:33,760 --> 00:29:36,240
going to address those before uh being

724
00:29:36,240 --> 00:29:38,320
done what we need to do

725
00:29:38,320 --> 00:29:40,080
shocking that we defined an extension

726
00:29:40,080 --> 00:29:42,399
and didn't indicate the criticality um

727
00:29:42,399 --> 00:29:44,159
obviously we need to do that um we're

728
00:29:44,159 --> 00:29:46,159
going to make it optionally critical

729
00:29:46,159 --> 00:29:48,559
um there are some minor editorial issues

730
00:29:48,559 --> 00:29:49,840
that we need to fix which we've got

731
00:29:49,840 --> 00:29:51,679
queued up and we need to add some

732
00:29:51,679 --> 00:29:53,520
acknowledgements and that's it at this

733
00:29:53,520 --> 00:29:55,760
point with respect to changes that we

734
00:29:55,760 --> 00:29:58,080
have uh lined up to make for the next

735
00:29:58,080 --> 00:30:00,159
version which i hope will go to our

736
00:30:00,159 --> 00:30:02,159
responsible area director

737
00:30:02,159 --> 00:30:04,480
um it's in working group last call now

738
00:30:04,480 --> 00:30:06,960
it does not end until i think next week

739
00:30:06,960 --> 00:30:08,799
so if you have comments send them on in

740
00:30:08,799 --> 00:30:10,720
but otherwise let's yield some time back

741
00:30:10,720 --> 00:30:13,039
to the rest of the agenda

742
00:30:13,039 --> 00:30:15,360
uh sean actually you're not defining a

743
00:30:15,360 --> 00:30:17,600
new extension you're defining a new void

744
00:30:17,600 --> 00:30:20,480
to be carried in extension yes so the

745
00:30:20,480 --> 00:30:22,240
definition of the extension i believe

746
00:30:22,240 --> 00:30:24,480
already says optionally critical

747
00:30:24,480 --> 00:30:26,960
you could restate that but

748
00:30:26,960 --> 00:30:28,320
it's not like you're defining a new

749
00:30:28,320 --> 00:30:29,360
extension

750
00:30:29,360 --> 00:30:31,120
fair enough we can do that we'll just

751
00:30:31,120 --> 00:30:32,080
make sure we'll just make sure to

752
00:30:32,080 --> 00:30:33,760
reiterate that you know as this is in

753
00:30:33,760 --> 00:30:35,919
the eku it is therefore by definition

754
00:30:35,919 --> 00:30:38,240
optionally critical all right

755
00:30:38,240 --> 00:30:40,880
thanks for that clarification

756
00:30:40,880 --> 00:30:42,240
yes

757
00:30:42,240 --> 00:30:45,600
he said it's almost like well

758
00:30:45,600 --> 00:30:50,000
so then the next one has no slides

759
00:30:50,000 --> 00:30:53,120
and it's me

760
00:30:53,440 --> 00:30:55,039
um

761
00:30:55,039 --> 00:30:58,000
we're in working group last call on

762
00:30:58,000 --> 00:31:02,320
rfc 3709 fists

763
00:31:02,320 --> 00:31:04,559
the big change in this document was to

764
00:31:04,559 --> 00:31:08,080
get rid of sha-1 and say

765
00:31:08,080 --> 00:31:10,240
where a hash is needed use the same one

766
00:31:10,240 --> 00:31:12,159
that was used to

767
00:31:12,159 --> 00:31:14,159
sign the certificate that way we won't

768
00:31:14,159 --> 00:31:16,840
have to do this again for an algorithm

769
00:31:16,840 --> 00:31:20,000
change um it is also in working group

770
00:31:20,000 --> 00:31:22,480
last call we have no comments at this

771
00:31:22,480 --> 00:31:24,799
point plus no slide

772
00:31:24,799 --> 00:31:26,640
um so

773
00:31:26,640 --> 00:31:29,519
please uh take a look at it otherwise

774
00:31:29,519 --> 00:31:31,200
we're going to advance it to the isg

775
00:31:31,200 --> 00:31:33,840
next week

776
00:31:34,240 --> 00:31:38,559
and the next one is sean again for the

777
00:31:38,559 --> 00:31:39,919
uh

778
00:31:39,919 --> 00:31:42,159
clarifications on the

779
00:31:42,159 --> 00:31:43,600
missed curves

780
00:31:43,600 --> 00:31:46,159
hey russ on the 3709

781
00:31:46,159 --> 00:31:48,720
on the 3709 i did send in something but

782
00:31:48,720 --> 00:31:50,880
did that get addressed

783
00:31:50,880 --> 00:31:53,840
before it went on to work last call

784
00:31:53,840 --> 00:31:54,880
um

785
00:31:54,880 --> 00:31:56,320
i'd have to take a minute to go through

786
00:31:56,320 --> 00:31:58,559
my mail and look but if yes i'll make

787
00:31:58,559 --> 00:31:59,360
sure

788
00:31:59,360 --> 00:32:01,279
so it's minor i think i think the only

789
00:32:01,279 --> 00:32:04,159
thing is uh i think there was some no um

790
00:32:04,159 --> 00:32:06,320
the big one was about which asn 1

791
00:32:06,320 --> 00:32:08,320
attacks to refer to in the title of one

792
00:32:08,320 --> 00:32:09,760
of the appendices

793
00:32:09,760 --> 00:32:12,000
oh no that got fixed

794
00:32:12,000 --> 00:32:13,679
that got fixed okay so if if you fix

795
00:32:13,679 --> 00:32:16,240
those in great

796
00:32:21,360 --> 00:32:24,880
uh russ sorry i got a bit confused uh

797
00:32:24,880 --> 00:32:28,320
on agenda is header protection

798
00:32:28,320 --> 00:32:30,320
next i think

799
00:32:30,320 --> 00:32:32,559
no i think it's uh

800
00:32:32,559 --> 00:32:34,320
84 10

801
00:32:34,320 --> 00:32:37,960
key usage clarifications

802
00:32:52,559 --> 00:32:55,200
oh yeah what happened uh

803
00:32:55,200 --> 00:32:57,600
was

804
00:32:57,600 --> 00:33:00,080
it was originally down in the

805
00:33:00,080 --> 00:33:02,640
under considerations section

806
00:33:02,640 --> 00:33:04,799
but the working group adoption completed

807
00:33:04,799 --> 00:33:07,679
so i moved it up here

808
00:33:07,679 --> 00:33:11,519
did i not repost the agenda

809
00:33:11,519 --> 00:33:13,679
no

810
00:33:13,760 --> 00:33:15,200
uh

811
00:33:15,200 --> 00:33:17,519
sorry i'm struggling to find the slides

812
00:33:17,519 --> 00:33:19,279
let me tell you what the name of the

813
00:33:19,279 --> 00:33:21,919
slides are

814
00:33:31,760 --> 00:33:36,000
it's lamps clarifications for ed255

815
00:33:36,000 --> 00:33:37,519
okay fine

816
00:33:37,519 --> 00:33:39,360
okay can i ask you before you start that

817
00:33:39,360 --> 00:33:42,720
is did the draft change yes there it is

818
00:33:42,720 --> 00:33:44,640
because you still haven't

819
00:33:44,640 --> 00:33:47,760
yes i um sneakily submitted i sneakily i

820
00:33:47,760 --> 00:33:49,919
submitted a working group draft uh last

821
00:33:49,919 --> 00:33:51,120
night at like three o'clock in the

822
00:33:51,120 --> 00:33:53,200
morning

823
00:33:53,200 --> 00:33:54,000
or

824
00:33:54,000 --> 00:33:55,279
i don't know what time zone that was but

825
00:33:55,279 --> 00:33:57,440
yeah

826
00:33:57,440 --> 00:34:00,080
so hey thanks for adopting this draft um

827
00:34:00,080 --> 00:34:02,320
this basically uh you just go to the

828
00:34:02,320 --> 00:34:05,559
next slide

829
00:34:06,159 --> 00:34:08,560
so what's in this id right so this um

830
00:34:08,560 --> 00:34:10,079
text that i'll look really really

831
00:34:10,079 --> 00:34:12,960
familiar to you um it's basically uh

832
00:34:12,960 --> 00:34:15,199
another version of

833
00:34:15,199 --> 00:34:18,399
um the 5480 clarifications that was

834
00:34:18,399 --> 00:34:21,760
published in rc 8813 but this time it's

835
00:34:21,760 --> 00:34:24,719
for the edie um star

836
00:34:24,719 --> 00:34:27,520
uh algorithms the other draft or the

837
00:34:27,520 --> 00:34:30,560
other rfc that had um these define these

838
00:34:30,560 --> 00:34:32,399
key that the keys which is defined for

839
00:34:32,399 --> 00:34:33,599
this particular

840
00:34:33,599 --> 00:34:36,960
set of algorithms was to find an 8410 uh

841
00:34:36,960 --> 00:34:39,839
they only specified um key agreement in

842
00:34:39,839 --> 00:34:41,918
cipher only in decipher only so

843
00:34:41,918 --> 00:34:43,440
basically the only thing this does is

844
00:34:43,440 --> 00:34:45,440
basically said you know all the other

845
00:34:45,440 --> 00:34:47,520
things that it's not supposed to include

846
00:34:47,520 --> 00:34:49,599
and i think there might be one more

847
00:34:49,599 --> 00:34:52,000
slide

848
00:34:52,000 --> 00:34:54,320
or there are six slides

849
00:34:54,320 --> 00:34:57,359
oh there are so go to the next one

850
00:34:57,359 --> 00:35:00,000
so there's there's this this draft is so

851
00:35:00,000 --> 00:35:01,359
short that i think i put the whole thing

852
00:35:01,359 --> 00:35:03,200
in these slides so basically all we're

853
00:35:03,200 --> 00:35:05,760
saying is we added some text you know

854
00:35:05,760 --> 00:35:07,440
the first two were already there so

855
00:35:07,440 --> 00:35:08,800
basically what we're adding is the block

856
00:35:08,800 --> 00:35:10,400
at the bottom which basically says don't

857
00:35:10,400 --> 00:35:12,160
use any of the digital signature related

858
00:35:12,160 --> 00:35:12,960
ones

859
00:35:12,960 --> 00:35:14,800
um so we just made those must not kind

860
00:35:14,800 --> 00:35:16,560
of slam the door on those

861
00:35:16,560 --> 00:35:17,520
um

862
00:35:17,520 --> 00:35:19,040
and that's really it because if we're

863
00:35:19,040 --> 00:35:20,960
using key agreement you don't use in you

864
00:35:20,960 --> 00:35:22,720
don't use key and ciphermen or data and

865
00:35:22,720 --> 00:35:24,160
cipherman so it's kind of just

866
00:35:24,160 --> 00:35:26,000
straightforward now

867
00:35:26,000 --> 00:35:27,359
if you remember at the beginning i asked

868
00:35:27,359 --> 00:35:28,960
simon why they did this and basically he

869
00:35:28,960 --> 00:35:30,960
said nobody asked for it so this is just

870
00:35:30,960 --> 00:35:33,200
kind of like fully enumerating all of

871
00:35:33,200 --> 00:35:35,599
the possible options to make it clear to

872
00:35:35,599 --> 00:35:37,599
people the things they shouldn't do so

873
00:35:37,599 --> 00:35:40,880
it's basically removing ambiguity

874
00:35:40,880 --> 00:35:43,200
next

875
00:35:43,520 --> 00:35:47,040
and you have to do that both for uh the

876
00:35:47,040 --> 00:35:48,079
the um

877
00:35:48,079 --> 00:35:49,680
the encryption algorithms as well as the

878
00:35:49,680 --> 00:35:52,320
signature algorithms so it's the 255 uh

879
00:35:52,320 --> 00:35:55,119
ones and the x448 or above and then you

880
00:35:55,119 --> 00:35:56,720
have to do it for the signature ones as

881
00:35:56,720 --> 00:35:59,280
well so you have to do it for the ed255

882
00:35:59,280 --> 00:36:01,440
and the ev448 and so then the only

883
00:36:01,440 --> 00:36:02,400
difference is you have to do it for the

884
00:36:02,400 --> 00:36:04,079
e certificates which is what this says

885
00:36:04,079 --> 00:36:07,040
so um for e certificates obviously you

886
00:36:07,040 --> 00:36:09,119
can only do

887
00:36:09,119 --> 00:36:10,640
not repudiate your digital signature and

888
00:36:10,640 --> 00:36:13,280
you do may do a crl sign

889
00:36:13,280 --> 00:36:14,800
and then must not for all the other ones

890
00:36:14,800 --> 00:36:17,520
and then the next one

891
00:36:17,599 --> 00:36:19,680
is for the ca and the only difference is

892
00:36:19,680 --> 00:36:21,599
that for a ca you can also put ca

893
00:36:21,599 --> 00:36:24,240
keysearch sign

894
00:36:25,280 --> 00:36:27,280
next

895
00:36:27,280 --> 00:36:28,480
wait a minute

896
00:36:28,480 --> 00:36:31,680
go back i think i think the um

897
00:36:31,680 --> 00:36:35,319
you back up one more

898
00:36:42,160 --> 00:36:44,720
okay when are you using a crl sign if

899
00:36:44,720 --> 00:36:47,119
you're not a ca

900
00:36:47,119 --> 00:36:49,680
when you're when you're on uh like an

901
00:36:49,680 --> 00:36:51,599
ocsp responder

902
00:36:51,599 --> 00:36:55,839
this mimics exactly what's in 5480

903
00:36:56,800 --> 00:36:59,040
or was a union in 5480 and now in the in

904
00:36:59,040 --> 00:37:02,480
the 8813 update

905
00:37:02,480 --> 00:37:08,200
so an ee is allowed to set crl sign

906
00:37:08,320 --> 00:37:10,560
oh it's for the indirect cro that's what

907
00:37:10,560 --> 00:37:12,640
yeah okay thank you

908
00:37:12,640 --> 00:37:14,640
i was having a hard time with ocs

909
00:37:14,640 --> 00:37:15,520
because

910
00:37:15,520 --> 00:37:18,720
it's uh it's um 5 30 our time so

911
00:37:18,720 --> 00:37:22,759
yeah no kidding thanks

912
00:37:23,200 --> 00:37:25,680
all right so

913
00:37:26,640 --> 00:37:27,760
uh

914
00:37:27,760 --> 00:37:30,880
sean just uh out of curiosity have you

915
00:37:30,880 --> 00:37:33,040
reviewed these changes against the lamp

916
00:37:33,040 --> 00:37:35,680
sample draft which has uh certificate

917
00:37:35,680 --> 00:37:37,119
authorities and

918
00:37:37,119 --> 00:37:38,960
and nc certificates in it

919
00:37:38,960 --> 00:37:41,200
i have not but i will i will definitely

920
00:37:41,200 --> 00:37:43,200
i haven't tried to compare them

921
00:37:43,200 --> 00:37:45,440
i i'll look usually i mean to be honest

922
00:37:45,440 --> 00:37:47,119
i think most people that are sane

923
00:37:47,119 --> 00:37:48,560
usually don't blow this but there are

924
00:37:48,560 --> 00:37:50,480
people i think that uh

925
00:37:50,480 --> 00:37:52,400
sometimes willfully try to misunderstand

926
00:37:52,400 --> 00:37:54,000
and make things difficult so this is

927
00:37:54,000 --> 00:37:55,359
mostly just trying to slam the door on

928
00:37:55,359 --> 00:37:56,640
that but i'll definitely take an action

929
00:37:56,640 --> 00:37:58,560
to review the examples draft

930
00:37:58,560 --> 00:38:00,320
i i think i i think i got it right but

931
00:38:00,320 --> 00:38:02,079
it that that one is enough 48 and it

932
00:38:02,079 --> 00:38:03,520
would be ashamed to publish that shortly

933
00:38:03,520 --> 00:38:05,200
before uh

934
00:38:05,200 --> 00:38:07,200
declaring that we got it wrong

935
00:38:07,200 --> 00:38:08,960
can you shoot me that link

936
00:38:08,960 --> 00:38:10,400
if you shoot me the link for the off 48

937
00:38:10,400 --> 00:38:12,160
thing i can look at it like before the

938
00:38:12,160 --> 00:38:13,359
end of today

939
00:38:13,359 --> 00:38:16,079
yep we'll do thanks awesome thanks

940
00:38:16,079 --> 00:38:17,520
all right so lexi i think we're moving

941
00:38:17,520 --> 00:38:18,960
to the last slide

942
00:38:18,960 --> 00:38:20,720
and so since you guys have seen all this

943
00:38:20,720 --> 00:38:22,960
stuff um and i know it's just an oo

944
00:38:22,960 --> 00:38:25,200
version um i'm actually asking for a

945
00:38:25,200 --> 00:38:28,000
working group last call now um i think

946
00:38:28,000 --> 00:38:29,839
that uh this shouldn't come as a

947
00:38:29,839 --> 00:38:31,839
surprise it's pretty non-controversial

948
00:38:31,839 --> 00:38:33,200
and basically we're just aligning with

949
00:38:33,200 --> 00:38:35,359
the previously published rfc so i think

950
00:38:35,359 --> 00:38:37,920
that that's not an unreasonable request

951
00:38:37,920 --> 00:38:39,119
thank you

952
00:38:39,119 --> 00:38:41,599
so what i would like to do is since we

953
00:38:41,599 --> 00:38:43,760
have two working group last calls that

954
00:38:43,760 --> 00:38:46,240
end next week is issue the working group

955
00:38:46,240 --> 00:38:49,598
last call when those end

956
00:38:50,079 --> 00:38:51,440
totally

957
00:38:51,440 --> 00:38:53,280
totally wonderful

958
00:38:53,280 --> 00:38:55,200
okay

959
00:38:55,200 --> 00:38:57,280
any objections or concerns with that

960
00:38:57,280 --> 00:39:00,280
approach

961
00:39:02,720 --> 00:39:05,359
okay thank you

962
00:39:05,359 --> 00:39:08,320
now up next is header protection alexi

963
00:39:08,320 --> 00:39:10,880
okay can i sneak in so we basically have

964
00:39:10,880 --> 00:39:12,960
a week to review this

965
00:39:12,960 --> 00:39:14,720
before you issue

966
00:39:14,720 --> 00:39:16,960
we will start working group last call in

967
00:39:16,960 --> 00:39:18,800
a week so you'll have two weeks after

968
00:39:18,800 --> 00:39:20,560
that to review it's three weeks to look

969
00:39:20,560 --> 00:39:21,359
at it

970
00:39:21,359 --> 00:39:24,359
yes

971
00:39:29,200 --> 00:39:33,040
hey folks uh daniel kahn gilmore here um

972
00:39:33,040 --> 00:39:34,800
presenting about the header protection

973
00:39:34,800 --> 00:39:38,240
draft um which is work with uh bernie

974
00:39:38,240 --> 00:39:40,240
and the lexi and myself

975
00:39:40,240 --> 00:39:42,560
um where the the

976
00:39:42,560 --> 00:39:45,200
editors on it um just wanted to

977
00:39:45,200 --> 00:39:47,119
uh report back to where we are um i'm

978
00:39:47,119 --> 00:39:49,359
gonna give a brief recap and then uh

979
00:39:49,359 --> 00:39:50,880
talk about some changes that have been

980
00:39:50,880 --> 00:39:52,800
made we've made good progress on it it's

981
00:39:52,800 --> 00:39:55,440
uh since the last weekend so that's good

982
00:39:55,440 --> 00:39:57,839
so to recap when we were defining this

983
00:39:57,839 --> 00:39:59,119
there were two

984
00:39:59,119 --> 00:40:00,720
different schemes for

985
00:40:00,720 --> 00:40:02,240
header protection that is

986
00:40:02,240 --> 00:40:04,160
cryptographically protecting the headers

987
00:40:04,160 --> 00:40:05,200
in

988
00:40:05,200 --> 00:40:06,000
either

989
00:40:06,000 --> 00:40:09,040
signed or encrypted and signed

990
00:40:09,040 --> 00:40:11,200
emails the type that was specified way

991
00:40:11,200 --> 00:40:14,160
back in sm3.1 uh has not seen much uh

992
00:40:14,160 --> 00:40:15,599
deployment that's the wrapped message

993
00:40:15,599 --> 00:40:18,000
that you see on the left there you take

994
00:40:18,000 --> 00:40:20,079
the these things are the cryptographic

995
00:40:20,079 --> 00:40:21,839
payloads these are the the data that is

996
00:40:21,839 --> 00:40:22,960
within

997
00:40:22,960 --> 00:40:24,640
the

998
00:40:24,640 --> 00:40:27,359
layers of encryption in the message

999
00:40:27,359 --> 00:40:30,160
and in s mime 3.1 we said well just wrap

1000
00:40:30,160 --> 00:40:32,480
it all in a message rc8222

1001
00:40:32,480 --> 00:40:34,240
object

1002
00:40:34,240 --> 00:40:35,440
and then we have this other scheme which

1003
00:40:35,440 --> 00:40:37,920
is injected headers which just stuffs

1004
00:40:37,920 --> 00:40:39,200
the headers that you're protecting

1005
00:40:39,200 --> 00:40:40,800
directly on the cryptographic payload

1006
00:40:40,800 --> 00:40:43,119
itself

1007
00:40:43,599 --> 00:40:44,480
so

1008
00:40:44,480 --> 00:40:46,640
next slide please

1009
00:40:46,640 --> 00:40:47,920
um

1010
00:40:47,920 --> 00:40:49,280
the reason that we weren't really

1011
00:40:49,280 --> 00:40:51,599
satisfied with the wrapped message is

1012
00:40:51,599 --> 00:40:53,760
that

1013
00:40:53,760 --> 00:40:55,040
for one thing it wasn't widely

1014
00:40:55,040 --> 00:40:58,160
implemented there were not a lot of

1015
00:40:58,400 --> 00:41:00,880
senders that actually did this and when

1016
00:41:00,880 --> 00:41:03,280
it did come out like this a lot of the

1017
00:41:03,280 --> 00:41:04,800
existing clients that were capable of

1018
00:41:04,800 --> 00:41:06,319
decryption

1019
00:41:06,319 --> 00:41:07,920
would present the message in a weird way

1020
00:41:07,920 --> 00:41:09,599
it might look like a forwarded message

1021
00:41:09,599 --> 00:41:10,960
it might have some strange user

1022
00:41:10,960 --> 00:41:12,480
interface elements you might have to

1023
00:41:12,480 --> 00:41:14,640
click it to save it and then reread it

1024
00:41:14,640 --> 00:41:16,400
or something like that or in some cases

1025
00:41:16,400 --> 00:41:17,839
somebody's radians couldn't actually

1026
00:41:17,839 --> 00:41:19,760
read it at all

1027
00:41:19,760 --> 00:41:21,280
the objective header the injected

1028
00:41:21,280 --> 00:41:24,160
headers variant

1029
00:41:26,640 --> 00:41:27,760
some of the

1030
00:41:27,760 --> 00:41:29,599
obscured message headers that is when

1031
00:41:29,599 --> 00:41:32,400
you have an encrypted message

1032
00:41:32,400 --> 00:41:34,319
they would be invisible to the legacy

1033
00:41:34,319 --> 00:41:35,440
clients

1034
00:41:35,440 --> 00:41:37,599
um and we had a fix for that in the

1035
00:41:37,599 --> 00:41:39,040
previous version that was called a

1036
00:41:39,040 --> 00:41:42,079
legacy display mime part that stuffed a

1037
00:41:42,079 --> 00:41:44,960
decorative representation of the message

1038
00:41:44,960 --> 00:41:47,119
headers that were obscured

1039
00:41:47,119 --> 00:41:48,720
into the message body so it changed

1040
00:41:48,720 --> 00:41:50,160
around the the

1041
00:41:50,160 --> 00:41:52,079
cryptographic payload

1042
00:41:52,079 --> 00:41:54,800
to add this decorative part to unobscure

1043
00:41:54,800 --> 00:41:56,720
to to to unhide

1044
00:41:56,720 --> 00:41:58,400
those header fields for clients that

1045
00:41:58,400 --> 00:42:01,200
don't know how to interpret this

1046
00:42:01,200 --> 00:42:03,359
the unfortunately what we found was that

1047
00:42:03,359 --> 00:42:05,119
the legacy display

1048
00:42:05,119 --> 00:42:07,040
decorative mime part made the entire

1049
00:42:07,040 --> 00:42:09,040
message unreadable in one significant

1050
00:42:09,040 --> 00:42:12,160
mail user agent which was outlook

1051
00:42:12,160 --> 00:42:13,760
so that's sort of where things stood as

1052
00:42:13,760 --> 00:42:17,800
of the last meeting next slide

1053
00:42:18,000 --> 00:42:20,079
and the update is that we have changed

1054
00:42:20,079 --> 00:42:21,599
the way the legacy display mechanism

1055
00:42:21,599 --> 00:42:23,599
works for injected headers

1056
00:42:23,599 --> 00:42:25,839
instead of inserting a mime part

1057
00:42:25,839 --> 00:42:28,839
what we do is we modify the

1058
00:42:28,839 --> 00:42:32,800
main main body part of the message

1059
00:42:32,800 --> 00:42:34,800
that is the text plain part or the text

1060
00:42:34,800 --> 00:42:37,760
html part that is sort of the first

1061
00:42:37,760 --> 00:42:38,640
leaf

1062
00:42:38,640 --> 00:42:41,200
of the message itself

1063
00:42:41,200 --> 00:42:43,119
and you can see here how the

1064
00:42:43,119 --> 00:42:45,280
this is a text plain example here

1065
00:42:45,280 --> 00:42:48,480
where you did we just uh dec we just add

1066
00:42:48,480 --> 00:42:50,720
this uh legacy display element directly

1067
00:42:50,720 --> 00:42:52,079
into the

1068
00:42:52,079 --> 00:42:53,839
text plane part

1069
00:42:53,839 --> 00:42:55,040
next slide

1070
00:42:55,040 --> 00:42:57,119
or if the main body part happens to be

1071
00:42:57,119 --> 00:42:58,400
html

1072
00:42:58,400 --> 00:43:00,720
you can see we add it in this particular

1073
00:43:00,720 --> 00:43:02,160
way

1074
00:43:02,160 --> 00:43:03,839
so

1075
00:43:03,839 --> 00:43:05,680
these are both legacy display elements a

1076
00:43:05,680 --> 00:43:07,119
message that is multiple part

1077
00:43:07,119 --> 00:43:08,800
alternative might have two different

1078
00:43:08,800 --> 00:43:10,880
main parts one text

1079
00:43:10,880 --> 00:43:13,359
text plane and one text html

1080
00:43:13,359 --> 00:43:14,720
in the situation where you have that

1081
00:43:14,720 --> 00:43:16,640
both of them get this legacy display

1082
00:43:16,640 --> 00:43:18,319
element added

1083
00:43:18,319 --> 00:43:20,000
and the rules for adding the legacy's

1084
00:43:20,000 --> 00:43:21,599
legacy display element are pretty

1085
00:43:21,599 --> 00:43:23,680
straightforward and they're designed so

1086
00:43:23,680 --> 00:43:25,440
that when the legacy display element is

1087
00:43:25,440 --> 00:43:26,880
present

1088
00:43:26,880 --> 00:43:28,800
you can tell that it's present

1089
00:43:28,800 --> 00:43:30,720
and you can

1090
00:43:30,720 --> 00:43:32,400
ensure that the legacy display element

1091
00:43:32,400 --> 00:43:34,960
can be omitted by a client that knows

1092
00:43:34,960 --> 00:43:36,079
about it

1093
00:43:36,079 --> 00:43:38,000
so it's really there specifically for

1094
00:43:38,000 --> 00:43:39,520
legacy

1095
00:43:39,520 --> 00:43:41,920
cryptographic decryption capable clients

1096
00:43:41,920 --> 00:43:43,599
to be able to render

1097
00:43:43,599 --> 00:43:47,359
the user facing headers that

1098
00:43:47,359 --> 00:43:50,000
that would otherwise be hidden

1099
00:43:50,000 --> 00:43:52,800
next slide please

1100
00:43:53,440 --> 00:43:56,240
um with that change the as the draft

1101
00:43:56,240 --> 00:43:58,400
authors uh we've made some decisions one

1102
00:43:58,400 --> 00:44:00,079
of the biggest issues with the draft was

1103
00:44:00,079 --> 00:44:01,440
that we still had these two schemes

1104
00:44:01,440 --> 00:44:03,680
lying around in it it wasn't clear what

1105
00:44:03,680 --> 00:44:05,200
implementers should do

1106
00:44:05,200 --> 00:44:06,800
and here we're saying we've made a

1107
00:44:06,800 --> 00:44:09,280
decision with the legacy display element

1108
00:44:09,280 --> 00:44:11,520
instead of legacy display mime part we

1109
00:44:11,520 --> 00:44:13,359
believe that injected headers is

1110
00:44:13,359 --> 00:44:15,119
something that is going to be

1111
00:44:15,119 --> 00:44:16,480
is going to work for pretty much all the

1112
00:44:16,480 --> 00:44:19,119
legacy clients so conformant muas must

1113
00:44:19,119 --> 00:44:21,680
be able to generate injected headers

1114
00:44:21,680 --> 00:44:23,520
we're also saying that conform and use

1115
00:44:23,520 --> 00:44:25,440
may generate the wrapped message

1116
00:44:25,440 --> 00:44:26,560
um

1117
00:44:26,560 --> 00:44:27,839
and that

1118
00:44:27,839 --> 00:44:30,400
all message you know the receiving

1119
00:44:30,400 --> 00:44:32,880
message user agents

1120
00:44:32,880 --> 00:44:34,560
or mail user agents must be able to

1121
00:44:34,560 --> 00:44:37,040
consume and render both schemes

1122
00:44:37,040 --> 00:44:38,960
in practice we have not seen much

1123
00:44:38,960 --> 00:44:41,599
adoption of rendering the wrap message

1124
00:44:41,599 --> 00:44:44,079
but we think with the legacy display

1125
00:44:44,079 --> 00:44:46,960
and injected headers that even male user

1126
00:44:46,960 --> 00:44:49,839
agents that don't adopt

1127
00:44:49,839 --> 00:44:51,119
know that don't that don't handle the

1128
00:44:51,119 --> 00:44:53,839
rendering uh in a

1129
00:44:53,839 --> 00:44:56,079
deliberate way we think the legacy ones

1130
00:44:56,079 --> 00:44:57,920
will be able to at least show the user

1131
00:44:57,920 --> 00:44:59,760
what they're looking at and this gives

1132
00:44:59,760 --> 00:45:02,400
them an incentive to step up their uh

1133
00:45:02,400 --> 00:45:03,839
rendering and parsing because they will

1134
00:45:03,839 --> 00:45:06,319
now get some security advantages

1135
00:45:06,319 --> 00:45:08,640
of the protected headers

1136
00:45:08,640 --> 00:45:11,359
so must generate injected

1137
00:45:11,359 --> 00:45:13,359
they generate rap message next slide

1138
00:45:13,359 --> 00:45:15,280
please alexa

1139
00:45:15,280 --> 00:45:16,160
thanks

1140
00:45:16,160 --> 00:45:18,480
so the way that we got here was a

1141
00:45:18,480 --> 00:45:20,800
meeting of the design team uh which is

1142
00:45:20,800 --> 00:45:22,079
the group of us who are listed as

1143
00:45:22,079 --> 00:45:24,880
editors plus uh hernani from the pep

1144
00:45:24,880 --> 00:45:25,839
group

1145
00:45:25,839 --> 00:45:28,000
we've been meeting about every two weeks

1146
00:45:28,000 --> 00:45:29,280
we've been working

1147
00:45:29,280 --> 00:45:31,680
with the git lab

1148
00:45:31,680 --> 00:45:33,440
so we've been doing issue tracking and

1149
00:45:33,440 --> 00:45:35,119
merge requests and things and that has

1150
00:45:35,119 --> 00:45:37,040
actually been pretty productive

1151
00:45:37,040 --> 00:45:39,040
uh we welcome anybody else who's

1152
00:45:39,040 --> 00:45:41,040
interested in participating to join

1153
00:45:41,040 --> 00:45:42,800
these meetings you can let us know

1154
00:45:42,800 --> 00:45:44,319
either directly on the lamps list and

1155
00:45:44,319 --> 00:45:45,680
say you're interested or you can mail

1156
00:45:45,680 --> 00:45:47,359
one of the authors directly

1157
00:45:47,359 --> 00:45:48,560
if there's anybody else who's interested

1158
00:45:48,560 --> 00:45:50,560
in joining we'd be happy to have you we

1159
00:45:50,560 --> 00:45:52,160
are particularly looking for an

1160
00:45:52,160 --> 00:45:54,640
implementer of a major mail user agent

1161
00:45:54,640 --> 00:45:57,119
in particular outlook or mail.app

1162
00:45:57,119 --> 00:45:58,480
who's interested in this because we

1163
00:45:58,480 --> 00:46:00,560
think we are getting pretty close and we

1164
00:46:00,560 --> 00:46:01,760
would love to have

1165
00:46:01,760 --> 00:46:04,720
one of the major male user agents um

1166
00:46:04,720 --> 00:46:06,240
uh you know an implementer from their

1167
00:46:06,240 --> 00:46:08,000
way in so if anybody

1168
00:46:08,000 --> 00:46:09,440
who is currently in the meeting right

1169
00:46:09,440 --> 00:46:10,880
now is an implementer of outlook or

1170
00:46:10,880 --> 00:46:12,160
mail.app

1171
00:46:12,160 --> 00:46:13,920
or knows somebody who is and wants to

1172
00:46:13,920 --> 00:46:16,400
get in touch with us um

1173
00:46:16,400 --> 00:46:18,720
you know we welcome your participation

1174
00:46:18,720 --> 00:46:21,279
next slide

1175
00:46:21,920 --> 00:46:24,240
um from the work group generally even if

1176
00:46:24,240 --> 00:46:26,000
you're not interested in uh joining us

1177
00:46:26,000 --> 00:46:28,000
as we sort of put the finishing touches

1178
00:46:28,000 --> 00:46:29,280
on this draft

1179
00:46:29,280 --> 00:46:32,400
we have updated the test vectors

1180
00:46:32,400 --> 00:46:33,760
this document has a bunch of test

1181
00:46:33,760 --> 00:46:35,920
vectors and there's a pretty clear

1182
00:46:35,920 --> 00:46:36,960
there are different ways you can get

1183
00:46:36,960 --> 00:46:38,720
access to them that are described at

1184
00:46:38,720 --> 00:46:40,400
this link at the bottom header dash

1185
00:46:40,400 --> 00:46:43,680
protection dot cmrg

1186
00:46:43,680 --> 00:46:44,960
if you

1187
00:46:44,960 --> 00:46:46,960
can we would love anybody in the lance

1188
00:46:46,960 --> 00:46:48,800
working group to help us take a look at

1189
00:46:48,800 --> 00:46:50,480
these again take a look at them with

1190
00:46:50,480 --> 00:46:52,400
your mail user agent

1191
00:46:52,400 --> 00:46:54,000
take the sample messages and route them

1192
00:46:54,000 --> 00:46:55,920
through various mail transport agents

1193
00:46:55,920 --> 00:46:58,160
see how they get

1194
00:46:58,160 --> 00:47:00,079
mangled what happens to them

1195
00:47:00,079 --> 00:47:02,720
test uh automated systems if you've got

1196
00:47:02,720 --> 00:47:04,880
things like mailing lists

1197
00:47:04,880 --> 00:47:07,040
or bug trackers or

1198
00:47:07,040 --> 00:47:09,040
other systems you know we'd love to try

1199
00:47:09,040 --> 00:47:11,280
to make sure that these mechanisms

1200
00:47:11,280 --> 00:47:13,599
um we want to understand exactly how

1201
00:47:13,599 --> 00:47:15,119
these mechanisms interact with those

1202
00:47:15,119 --> 00:47:16,400
systems obviously we can't do that

1203
00:47:16,400 --> 00:47:17,599
exhaustively

1204
00:47:17,599 --> 00:47:19,280
but we can be more exhausted with more

1205
00:47:19,280 --> 00:47:21,119
help from the work

1206
00:47:21,119 --> 00:47:24,520
next slide

1207
00:47:24,720 --> 00:47:26,480
um so a couple questions for the working

1208
00:47:26,480 --> 00:47:28,240
group um

1209
00:47:28,240 --> 00:47:29,680
a couple i think there's five in this

1210
00:47:29,680 --> 00:47:31,440
deck here um

1211
00:47:31,440 --> 00:47:33,119
you may recall that one of the

1212
00:47:33,119 --> 00:47:34,880
definitions in this draft is the header

1213
00:47:34,880 --> 00:47:37,359
confidentiality policy so

1214
00:47:37,359 --> 00:47:40,079
uh just a quick recap about what that is

1215
00:47:40,079 --> 00:47:42,400
when you um

1216
00:47:42,400 --> 00:47:45,280
are sending an encrypted

1217
00:47:45,280 --> 00:47:46,960
email message and you want to do header

1218
00:47:46,960 --> 00:47:48,079
protection

1219
00:47:48,079 --> 00:47:50,640
not every header is going to be uh

1220
00:47:50,640 --> 00:47:52,240
secret the way that the content of the

1221
00:47:52,240 --> 00:47:54,800
message is secret um and

1222
00:47:54,800 --> 00:47:57,760
uh we define an abstraction here uh

1223
00:47:57,760 --> 00:47:59,680
called the header confidentiality policy

1224
00:47:59,680 --> 00:48:01,119
or hcp

1225
00:48:01,119 --> 00:48:03,440
that describes how how the mail user

1226
00:48:03,440 --> 00:48:05,040
agent that is composing decides which

1227
00:48:05,040 --> 00:48:08,160
headers to protect

1228
00:48:08,319 --> 00:48:10,880
we had a couple variants in the draft

1229
00:48:10,880 --> 00:48:12,800
http minimal which basically just says

1230
00:48:12,800 --> 00:48:14,319
protect the subject line and here's how

1231
00:48:14,319 --> 00:48:15,440
you do it

1232
00:48:15,440 --> 00:48:17,119
and http strong which basically says

1233
00:48:17,119 --> 00:48:19,760
protect everything but

1234
00:48:19,760 --> 00:48:22,079
by stripping it out everything but the

1235
00:48:22,079 --> 00:48:24,160
from to cc date

1236
00:48:24,160 --> 00:48:26,640
we obscure the subject line with that

1237
00:48:26,640 --> 00:48:30,319
and we put in new message ids there um

1238
00:48:30,319 --> 00:48:32,240
uh the design team

1239
00:48:32,240 --> 00:48:34,480
we have sort of feeling like we need to

1240
00:48:34,480 --> 00:48:36,880
recommend one for initial implementers

1241
00:48:36,880 --> 00:48:38,240
to do we don't want people to have to

1242
00:48:38,240 --> 00:48:39,280
make hard decisions when they're

1243
00:48:39,280 --> 00:48:40,559
implementing this we want them to just

1244
00:48:40,559 --> 00:48:41,520
have a

1245
00:48:41,520 --> 00:48:43,920
a pretty straightforward roadmap

1246
00:48:43,920 --> 00:48:45,520
and we are leaning towards recommending

1247
00:48:45,520 --> 00:48:47,119
http minimal

1248
00:48:47,119 --> 00:48:49,200
as the um

1249
00:48:49,200 --> 00:48:51,920
as the initial implementation

1250
00:48:51,920 --> 00:48:53,280
you can see there's a link to a merge

1251
00:48:53,280 --> 00:48:57,040
request that describes that change

1252
00:48:57,040 --> 00:48:58,960
the reason we have this hdp

1253
00:48:58,960 --> 00:49:01,280
abstraction is so that

1254
00:49:01,280 --> 00:49:03,440
we hope in the future this will evolve

1255
00:49:03,440 --> 00:49:05,119
but we want people to have you know

1256
00:49:05,119 --> 00:49:06,400
something specific that they can do

1257
00:49:06,400 --> 00:49:08,559
going forward um if you're going to go

1258
00:49:08,559 --> 00:49:10,079
from no header protection at all to

1259
00:49:10,079 --> 00:49:12,319
predicting the subject we think is a win

1260
00:49:12,319 --> 00:49:14,559
in terms of confidentiality

1261
00:49:14,559 --> 00:49:16,640
next slide

1262
00:49:16,640 --> 00:49:18,079
uh by the way this is our these are

1263
00:49:18,079 --> 00:49:19,200
questions for the working group we're

1264
00:49:19,200 --> 00:49:21,839
just you know in some cases we have some

1265
00:49:21,839 --> 00:49:23,440
ideas about what we're going to do but

1266
00:49:23,440 --> 00:49:25,359
if you all have any particular comments

1267
00:49:25,359 --> 00:49:26,720
that you want to make on these you know

1268
00:49:26,720 --> 00:49:29,200
i welcome comments now

1269
00:49:29,200 --> 00:49:31,200
we could also have questions and

1270
00:49:31,200 --> 00:49:33,040
suggestions afterwards and of course

1271
00:49:33,040 --> 00:49:35,440
messages to the list would be great

1272
00:49:35,440 --> 00:49:36,400
um

1273
00:49:36,400 --> 00:49:37,920
when you are composing a message using

1274
00:49:37,920 --> 00:49:40,000
injected headers you need to decide

1275
00:49:40,000 --> 00:49:41,520
whether to put the legacy display

1276
00:49:41,520 --> 00:49:43,920
element in the main body parts as

1277
00:49:43,920 --> 00:49:45,760
described earlier or not

1278
00:49:45,760 --> 00:49:48,480
um we would love it in some future world

1279
00:49:48,480 --> 00:49:49,839
where all male user agents that are

1280
00:49:49,839 --> 00:49:51,680
decryption capable are capable of

1281
00:49:51,680 --> 00:49:53,680
actually dealing with protective headers

1282
00:49:53,680 --> 00:49:55,520
like this we would love to abandon the

1283
00:49:55,520 --> 00:49:56,960
injection of legacy display elements

1284
00:49:56,960 --> 00:49:58,640
that's the goal because it makes things

1285
00:49:58,640 --> 00:50:00,000
much simpler you have to think about

1286
00:50:00,000 --> 00:50:01,040
them

1287
00:50:01,040 --> 00:50:02,559
but the question is how how do we get

1288
00:50:02,559 --> 00:50:03,520
there

1289
00:50:03,520 --> 00:50:05,040
um

1290
00:50:05,040 --> 00:50:06,400
if i'm composing a message how do i

1291
00:50:06,400 --> 00:50:08,079
decide whether i need to put in a legacy

1292
00:50:08,079 --> 00:50:09,280
to play or not

1293
00:50:09,280 --> 00:50:10,319
um

1294
00:50:10,319 --> 00:50:12,640
the draft currently is silent on how you

1295
00:50:12,640 --> 00:50:14,480
make this decision it just says the mail

1296
00:50:14,480 --> 00:50:16,480
user agent you know sets a boolean flag

1297
00:50:16,480 --> 00:50:18,720
when it's doing message composition uh

1298
00:50:18,720 --> 00:50:20,880
do i include legacy or not

1299
00:50:20,880 --> 00:50:21,680
um

1300
00:50:21,680 --> 00:50:23,119
and the guidance in the draft i think

1301
00:50:23,119 --> 00:50:24,559
currently says you know if you don't

1302
00:50:24,559 --> 00:50:27,119
know just set it to true and carry on

1303
00:50:27,119 --> 00:50:28,160
um

1304
00:50:28,160 --> 00:50:29,200
so there's a couple different ways that

1305
00:50:29,200 --> 00:50:30,559
we could get rid of legacy display

1306
00:50:30,559 --> 00:50:32,319
elements one of them is that male user

1307
00:50:32,319 --> 00:50:34,720
agents could respond to a general

1308
00:50:34,720 --> 00:50:36,559
ecosystem survey that says hey every

1309
00:50:36,559 --> 00:50:38,400
client that's capable

1310
00:50:38,400 --> 00:50:40,079
you know

1311
00:50:40,079 --> 00:50:41,839
if we at some point in the future we

1312
00:50:41,839 --> 00:50:43,280
just do a survey of all the decryption

1313
00:50:43,280 --> 00:50:45,200
capable clients and we say

1314
00:50:45,200 --> 00:50:46,000
um

1315
00:50:46,000 --> 00:50:47,839
you know can they render injected

1316
00:50:47,839 --> 00:50:49,680
headers correctly without dealing with

1317
00:50:49,680 --> 00:50:50,960
legacy display

1318
00:50:50,960 --> 00:50:52,079
we don't need the legacy to play for

1319
00:50:52,079 --> 00:50:54,960
them and if enough of them say yes then

1320
00:50:54,960 --> 00:50:56,480
we update all the clients in one more

1321
00:50:56,480 --> 00:51:01,359
round and we set legacy display to false

1322
00:51:02,160 --> 00:51:04,400
alternately each recipient could try to

1323
00:51:04,400 --> 00:51:06,240
sort of somehow signal

1324
00:51:06,240 --> 00:51:08,240
uh that they can that their email user

1325
00:51:08,240 --> 00:51:10,240
agents can render obscured injected

1326
00:51:10,240 --> 00:51:12,640
headers and don't need the lexi display

1327
00:51:12,640 --> 00:51:13,680
um

1328
00:51:13,680 --> 00:51:15,119
in that case but

1329
00:51:15,119 --> 00:51:16,800
figuring out how to signal what

1330
00:51:16,800 --> 00:51:18,480
specifically the signal

1331
00:51:18,480 --> 00:51:21,040
is pretty tricky and

1332
00:51:21,040 --> 00:51:22,480
if you look at the link at the bottom of

1333
00:51:22,480 --> 00:51:23,680
the page here

1334
00:51:23,680 --> 00:51:26,079
that url uh points to some discussion

1335
00:51:26,079 --> 00:51:27,839
that we've had about what what would be

1336
00:51:27,839 --> 00:51:29,760
some of the drawbacks of signaling uh

1337
00:51:29,760 --> 00:51:30,960
what are some of the things we could try

1338
00:51:30,960 --> 00:51:33,040
to signal ways we could signal what the

1339
00:51:33,040 --> 00:51:34,480
semantics are

1340
00:51:34,480 --> 00:51:36,640
um so we don't know whether this draft

1341
00:51:36,640 --> 00:51:38,319
will contain signaling or not it will

1342
00:51:38,319 --> 00:51:40,880
certainly um it could mention that we

1343
00:51:40,880 --> 00:51:43,040
need signaling without defining it

1344
00:51:43,040 --> 00:51:44,559
um but we're

1345
00:51:44,559 --> 00:51:45,920
we haven't made a decision within design

1346
00:51:45,920 --> 00:51:48,720
team about how to do that

1347
00:51:48,720 --> 00:51:51,839
next slide

1348
00:51:53,359 --> 00:51:54,240
um

1349
00:51:54,240 --> 00:51:56,319
so one of our concerns about the legacy

1350
00:51:56,319 --> 00:51:59,040
display elements is that we're not sure

1351
00:51:59,040 --> 00:52:01,280
how they will interfere

1352
00:52:01,280 --> 00:52:03,359
if they would interfere with systems

1353
00:52:03,359 --> 00:52:05,280
that do command processing now remember

1354
00:52:05,280 --> 00:52:08,720
legacy display elements only show up in

1355
00:52:08,720 --> 00:52:09,920
encrypted

1356
00:52:09,920 --> 00:52:11,119
messages

1357
00:52:11,119 --> 00:52:12,880
so this might only be relevant for an

1358
00:52:12,880 --> 00:52:16,400
automated mail system that uses

1359
00:52:16,400 --> 00:52:18,559
encrypted messages

1360
00:52:18,559 --> 00:52:20,319
uh

1361
00:52:20,319 --> 00:52:22,480
for its control channel um that might

1362
00:52:22,480 --> 00:52:24,480
get confused if it sees a legacy display

1363
00:52:24,480 --> 00:52:25,920
element

1364
00:52:25,920 --> 00:52:27,520
uh present

1365
00:52:27,520 --> 00:52:28,640
um

1366
00:52:28,640 --> 00:52:30,079
there are not a lot of systems that

1367
00:52:30,079 --> 00:52:31,359
we're aware of that are out there that

1368
00:52:31,359 --> 00:52:33,520
do this that use email as a control

1369
00:52:33,520 --> 00:52:35,599
channel but if there are

1370
00:52:35,599 --> 00:52:37,760
you know we want to know

1371
00:52:37,760 --> 00:52:39,599
in particular the schloer mailing list

1372
00:52:39,599 --> 00:52:41,119
is an encrypted mailing list that uses

1373
00:52:41,119 --> 00:52:43,920
pgp mime not s mime

1374
00:52:43,920 --> 00:52:45,119
but the

1375
00:52:45,119 --> 00:52:46,960
systems that are described here are

1376
00:52:46,960 --> 00:52:48,960
probably relevant for both

1377
00:52:48,960 --> 00:52:51,119
um so we've done some outreach to the

1378
00:52:51,119 --> 00:52:53,359
folks who maintain uh mailing lists like

1379
00:52:53,359 --> 00:52:54,960
schleter and mailman

1380
00:52:54,960 --> 00:52:56,240
um

1381
00:52:56,240 --> 00:52:58,160
bug trackers and looking at if there's

1382
00:52:58,160 --> 00:53:00,160
anything else i looked at joker.com

1383
00:53:00,160 --> 00:53:02,240
which has an email interface control

1384
00:53:02,240 --> 00:53:04,240
channel for the dns but they don't

1385
00:53:04,240 --> 00:53:06,240
actually use um

1386
00:53:06,240 --> 00:53:08,640
any mime based encryption scheme they

1387
00:53:08,640 --> 00:53:10,559
just use

1388
00:53:10,559 --> 00:53:14,000
pgp signatures inside the message body

1389
00:53:14,000 --> 00:53:15,280
which has all kinds of other problems

1390
00:53:15,280 --> 00:53:18,960
but we can't really uh solve that here

1391
00:53:18,960 --> 00:53:20,559
anyway folks know of automated mail

1392
00:53:20,559 --> 00:53:22,800
systems it would be great as i mentioned

1393
00:53:22,800 --> 00:53:24,160
earlier with the test vectors to test

1394
00:53:24,160 --> 00:53:25,520
this stuff out we're particularly

1395
00:53:25,520 --> 00:53:27,119
concerned about legacy display elements

1396
00:53:27,119 --> 00:53:29,280
but we you know we'd also like to know

1397
00:53:29,280 --> 00:53:30,880
whether um

1398
00:53:30,880 --> 00:53:32,319
injected headers

1399
00:53:32,319 --> 00:53:34,480
would cause problems um

1400
00:53:34,480 --> 00:53:36,240
on their own with any of these automated

1401
00:53:36,240 --> 00:53:38,480
mail systems so something worth taking a

1402
00:53:38,480 --> 00:53:40,079
look at

1403
00:53:40,079 --> 00:53:43,319
next slide

1404
00:53:43,520 --> 00:53:44,559
um

1405
00:53:44,559 --> 00:53:46,960
so for a legacy display element in text

1406
00:53:46,960 --> 00:53:48,400
html

1407
00:53:48,400 --> 00:53:50,400
um

1408
00:53:50,400 --> 00:53:51,359
the

1409
00:53:51,359 --> 00:53:52,640
uh

1410
00:53:52,640 --> 00:53:54,480
the definition of the legacy display

1411
00:53:54,480 --> 00:53:56,079
element is basically that it's a div

1412
00:53:56,079 --> 00:53:58,319
with this special class header dash

1413
00:53:58,319 --> 00:54:01,040
protection dash legacy dash display

1414
00:54:01,040 --> 00:54:02,319
uh we think this is relatively

1415
00:54:02,319 --> 00:54:03,680
straightforward for

1416
00:54:03,680 --> 00:54:06,319
composing male user agent to insert uh

1417
00:54:06,319 --> 00:54:07,839
that is if you're making the message and

1418
00:54:07,839 --> 00:54:10,400
you recognize that you've got a main

1419
00:54:10,400 --> 00:54:12,160
body part that is of type

1420
00:54:12,160 --> 00:54:14,640
text html pretty straightforward to put

1421
00:54:14,640 --> 00:54:16,000
it in there

1422
00:54:16,000 --> 00:54:17,200
um

1423
00:54:17,200 --> 00:54:18,000
and

1424
00:54:18,000 --> 00:54:20,000
we think it's actually pretty easy for a

1425
00:54:20,000 --> 00:54:22,160
rendering male user agent to omit this

1426
00:54:22,160 --> 00:54:24,800
if it needs to we have an example of

1427
00:54:24,800 --> 00:54:28,000
some you know css snippet that you could

1428
00:54:28,000 --> 00:54:29,599
slap into your

1429
00:54:29,599 --> 00:54:33,440
local css file for rendering uh mine

1430
00:54:33,440 --> 00:54:35,040
parts if they

1431
00:54:35,040 --> 00:54:36,880
are tagged appropriately

1432
00:54:36,880 --> 00:54:39,680
but we also are aware that you know html

1433
00:54:39,680 --> 00:54:42,160
and emails may have some issues and if

1434
00:54:42,160 --> 00:54:45,040
you are concerned that this uh

1435
00:54:45,040 --> 00:54:47,280
this div being injected might cause a

1436
00:54:47,280 --> 00:54:49,119
problem we'd like to know about it

1437
00:54:49,119 --> 00:54:50,960
we haven't found any case where it does

1438
00:54:50,960 --> 00:54:51,760
but

1439
00:54:51,760 --> 00:54:53,760
it doesn't mean there isn't so we'd love

1440
00:54:53,760 --> 00:54:55,680
any feedback from your working group on

1441
00:54:55,680 --> 00:54:58,559
if they see this as an issue

1442
00:54:58,559 --> 00:55:01,280
next message

1443
00:55:01,520 --> 00:55:03,680
okay so this is uh i think this is the

1444
00:55:03,680 --> 00:55:05,040
final question that we have for the

1445
00:55:05,040 --> 00:55:08,079
working group that is pretty tricky

1446
00:55:08,079 --> 00:55:10,400
this is

1447
00:55:12,000 --> 00:55:15,760
part of this is an issue about

1448
00:55:16,240 --> 00:55:18,240
user interface and how we represent

1449
00:55:18,240 --> 00:55:20,559
message headers to the user

1450
00:55:20,559 --> 00:55:21,599
so

1451
00:55:21,599 --> 00:55:22,559
um

1452
00:55:22,559 --> 00:55:24,960
the mock-up you see in this slide is a

1453
00:55:24,960 --> 00:55:27,440
terrible user interface but it's uh an

1454
00:55:27,440 --> 00:55:29,599
attempt at representing some of the

1455
00:55:29,599 --> 00:55:31,040
information that we think value vehicles

1456
00:55:31,040 --> 00:55:32,799
will have

1457
00:55:32,799 --> 00:55:33,599
so

1458
00:55:33,599 --> 00:55:36,160
currently male user agents don't uh

1459
00:55:36,160 --> 00:55:37,839
mention any

1460
00:55:37,839 --> 00:55:39,520
um

1461
00:55:39,520 --> 00:55:41,359
any levels of cryptographic protection

1462
00:55:41,359 --> 00:55:43,119
for message headers because there are no

1463
00:55:43,119 --> 00:55:44,880
levels in quicker graphic protection for

1464
00:55:44,880 --> 00:55:47,040
message headers before this draft other

1465
00:55:47,040 --> 00:55:49,920
than the the s9 3.1 which was uh not

1466
00:55:49,920 --> 00:55:51,920
widely implemented

1467
00:55:51,920 --> 00:55:53,599
um

1468
00:55:53,599 --> 00:55:55,280
we think that

1469
00:55:55,280 --> 00:55:57,920
a male user agent may want to render and

1470
00:55:57,920 --> 00:55:59,359
they need to know even if it doesn't

1471
00:55:59,359 --> 00:56:01,839
render it the cryptographic status of

1472
00:56:01,839 --> 00:56:05,280
each particular header field that's used

1473
00:56:05,280 --> 00:56:07,599
um so in this message this is an example

1474
00:56:07,599 --> 00:56:09,520
here you could imagine that this message

1475
00:56:09,520 --> 00:56:11,920
was sent

1476
00:56:12,000 --> 00:56:14,079
and

1477
00:56:14,079 --> 00:56:16,319
the entire message all of the headers

1478
00:56:16,319 --> 00:56:17,839
are protected by the cryptographic

1479
00:56:17,839 --> 00:56:18,960
signature of the message that's

1480
00:56:18,960 --> 00:56:21,520
represented by the check mark at the top

1481
00:56:21,520 --> 00:56:23,520
but the subject field as with

1482
00:56:23,520 --> 00:56:25,040
hcp minimal

1483
00:56:25,040 --> 00:56:28,559
uh was obscured going forward

1484
00:56:28,559 --> 00:56:30,240
by you know so that the subject doesn't

1485
00:56:30,240 --> 00:56:32,480
appear on the outside of the message

1486
00:56:32,480 --> 00:56:34,880
um so you can see that in this mock-up

1487
00:56:34,880 --> 00:56:36,640
that's drawn with a little gold box

1488
00:56:36,640 --> 00:56:38,720
around it with the with the the lock

1489
00:56:38,720 --> 00:56:40,400
just like the message body itself has

1490
00:56:40,400 --> 00:56:44,079
the the gold box in the box

1491
00:56:44,079 --> 00:56:45,520
the question is how does the rendering

1492
00:56:45,520 --> 00:56:47,599
male user agent know

1493
00:56:47,599 --> 00:56:49,920
that the header field which header

1494
00:56:49,920 --> 00:56:51,280
fields were encrypted or which ones

1495
00:56:51,280 --> 00:56:52,640
weren't how does it

1496
00:56:52,640 --> 00:56:54,720
uh does it just compare them with the

1497
00:56:54,720 --> 00:56:57,440
outside uh message or

1498
00:56:57,440 --> 00:56:59,839
um or do we need something else the

1499
00:56:59,839 --> 00:57:01,839
current text in the draft says

1500
00:57:01,839 --> 00:57:02,880
that we

1501
00:57:02,880 --> 00:57:04,079
mark that header field where the

1502
00:57:04,079 --> 00:57:05,680
cryptographic status that includes

1503
00:57:05,680 --> 00:57:08,240
encrypted when the protected copy of the

1504
00:57:08,240 --> 00:57:11,440
field doesn't match the unprotected copy

1505
00:57:11,440 --> 00:57:13,359
but as we all know the unprotected copy

1506
00:57:13,359 --> 00:57:15,119
of these message header fields

1507
00:57:15,119 --> 00:57:17,359
um can change in transit that's why we

1508
00:57:17,359 --> 00:57:18,480
want these cryptographic header

1509
00:57:18,480 --> 00:57:20,079
protections and we haven't really

1510
00:57:20,079 --> 00:57:22,319
defined what counts as a match

1511
00:57:22,319 --> 00:57:24,240
so for instance if white space changes

1512
00:57:24,240 --> 00:57:26,079
does it count does it mean now they're

1513
00:57:26,079 --> 00:57:27,280
different and we should treat it as

1514
00:57:27,280 --> 00:57:29,280
encrypted uh michael i see you in the

1515
00:57:29,280 --> 00:57:31,599
queue

1516
00:57:34,559 --> 00:57:38,480
uh michael richardson so i i it's a your

1517
00:57:38,480 --> 00:57:40,640
ui is not terrible i was gonna say your

1518
00:57:40,640 --> 00:57:42,319
example would be actually good if alice

1519
00:57:42,319 --> 00:57:44,880
was emailing bob and frank and frank

1520
00:57:44,880 --> 00:57:47,359
wasn't someone who uh knew how to

1521
00:57:47,359 --> 00:57:48,880
validate the

1522
00:57:48,880 --> 00:57:50,400
um

1523
00:57:50,400 --> 00:57:51,520
the

1524
00:57:51,520 --> 00:57:53,440
do any of this stuff right

1525
00:57:53,440 --> 00:57:56,640
and so the subject is that frank sees is

1526
00:57:56,640 --> 00:57:59,440
of course friday's dinner plans

1527
00:57:59,440 --> 00:58:00,880
and thinks oh i won't go on thursday

1528
00:58:00,880 --> 00:58:04,319
i'll go on friday um and some you know

1529
00:58:04,319 --> 00:58:06,559
attack on him um

1530
00:58:06,559 --> 00:58:09,359
and so i think that's that that would be

1531
00:58:09,359 --> 00:58:11,359
that would be an attack on the on the

1532
00:58:11,359 --> 00:58:13,040
signature status right which is

1533
00:58:13,040 --> 00:58:14,000
different here we're talking

1534
00:58:14,000 --> 00:58:15,200
specifically about whether the header

1535
00:58:15,200 --> 00:58:17,680
field has been successfully obscured or

1536
00:58:17,680 --> 00:58:19,839
not but but but i agree with you that

1537
00:58:19,839 --> 00:58:21,040
there is a separate attack on the

1538
00:58:21,040 --> 00:58:22,400
message signature

1539
00:58:22,400 --> 00:58:24,640
and bob uh frank would need to update

1540
00:58:24,640 --> 00:58:26,079
his mail user agent to be able to get

1541
00:58:26,079 --> 00:58:28,480
the verification on the

1542
00:58:28,480 --> 00:58:30,880
headers

1543
00:58:31,839 --> 00:58:34,000
so so but the point is i'm trying to say

1544
00:58:34,000 --> 00:58:37,040
is that bob would get a a notice that

1545
00:58:37,040 --> 00:58:40,079
says that the subject does not match

1546
00:58:40,079 --> 00:58:42,480
right that's the goal here because bob's

1547
00:58:42,480 --> 00:58:43,599
actually done

1548
00:58:43,599 --> 00:58:44,480
um

1549
00:58:44,480 --> 00:58:47,040
bob's actually done done is validating

1550
00:58:47,040 --> 00:58:48,079
all of this

1551
00:58:48,079 --> 00:58:49,680
and realizes that there's something

1552
00:58:49,680 --> 00:58:51,440
going on frank of course is oblivious to

1553
00:58:51,440 --> 00:58:52,880
this because he's just using you know

1554
00:58:52,880 --> 00:58:54,000
his uh

1555
00:58:54,000 --> 00:58:56,720
some old web mail system you know from

1556
00:58:56,720 --> 00:58:58,319
1972

1557
00:58:58,319 --> 00:59:01,760
right um but um maybe not that early um

1558
00:59:01,760 --> 00:59:03,760
so but uh um

1559
00:59:03,760 --> 00:59:04,400
so

1560
00:59:04,400 --> 00:59:06,400
but i was just saying that that's that's

1561
00:59:06,400 --> 00:59:08,079
the kind of attack that you're talking

1562
00:59:08,079 --> 00:59:09,680
about right as you say the unprotected

1563
00:59:09,680 --> 00:59:11,280
copy can change the transit and so you

1564
00:59:11,280 --> 00:59:12,400
want to know

1565
00:59:12,400 --> 00:59:14,640
what kind of what kind you say what is a

1566
00:59:14,640 --> 00:59:16,160
match and what are you going to do with

1567
00:59:16,160 --> 00:59:18,400
that if it's if if it just differs by

1568
00:59:18,400 --> 00:59:20,160
some spaces which

1569
00:59:20,160 --> 00:59:22,160
i don't know someone some system put in

1570
00:59:22,160 --> 00:59:23,839
in the way right

1571
00:59:23,839 --> 00:59:26,000
well let me let me let me you're raising

1572
00:59:26,000 --> 00:59:28,079
i think a different concern okay it's a

1573
00:59:28,079 --> 00:59:29,440
different concern all right thank you

1574
00:59:29,440 --> 00:59:30,480
that's actually

1575
00:59:30,480 --> 00:59:32,319
understand yeah so the concern that

1576
00:59:32,319 --> 00:59:33,920
you're raising says

1577
00:59:33,920 --> 00:59:35,920
um we want to know whether the message

1578
00:59:35,920 --> 00:59:38,480
headers uh were tampered the outside

1579
00:59:38,480 --> 00:59:39,760
message headers were tampered with

1580
00:59:39,760 --> 00:59:41,760
because we want to make sure that we're

1581
00:59:41,760 --> 00:59:43,359
you know we've got the right ones but we

1582
00:59:43,359 --> 00:59:44,559
want to know if the one outside was

1583
00:59:44,559 --> 00:59:47,040
tampered with we currently don't have

1584
00:59:47,040 --> 00:59:49,440
any cryptographic status that indicates

1585
00:59:49,440 --> 00:59:50,400
that

1586
00:59:50,400 --> 00:59:53,839
and the reason we don't have it is um

1587
00:59:53,839 --> 00:59:56,079
because if your mail user agent can show

1588
00:59:56,079 --> 00:59:59,280
you the correctly signed message then it

1589
00:59:59,280 --> 01:00:00,720
including the correctly signed headers

1590
01:00:00,720 --> 01:00:02,079
then it will

1591
01:00:02,079 --> 01:00:04,559
and and and doing the kind of debugging

1592
01:00:04,559 --> 01:00:06,000
that says hey somebody filled with the

1593
01:00:06,000 --> 01:00:07,520
thing on the outside

1594
01:00:07,520 --> 01:00:10,319
is not i think for normal users to

1595
01:00:10,319 --> 01:00:13,680
to worry about right um

1596
01:00:13,680 --> 01:00:15,599
like if you if you say hey warning this

1597
01:00:15,599 --> 01:00:17,119
thing changed it makes the message look

1598
01:00:17,119 --> 01:00:18,799
even worse when in fact you have better

1599
01:00:18,799 --> 01:00:20,319
security properties

1600
01:00:20,319 --> 01:00:21,839
um and people

1601
01:00:21,839 --> 01:00:23,040
you don't want when you're sending a

1602
01:00:23,040 --> 01:00:24,640
message it just show up

1603
01:00:24,640 --> 01:00:26,319
flagged just because somebody filled

1604
01:00:26,319 --> 01:00:28,000
with it going through the issue that

1605
01:00:28,000 --> 01:00:29,200
this is trying to raise here is

1606
01:00:29,200 --> 01:00:31,359
specifically about obscured headers

1607
01:00:31,359 --> 01:00:33,200
during message description

1608
01:00:33,200 --> 01:00:34,640
so when your message is encrypted you

1609
01:00:34,640 --> 01:00:37,359
might not be obscuring out the the to

1610
01:00:37,359 --> 01:00:39,680
and the from or the date but you are

1611
01:00:39,680 --> 01:00:41,680
obscuring the subject so there is no

1612
01:00:41,680 --> 01:00:43,520
there is no there is no there is no

1613
01:00:43,520 --> 01:00:46,559
clear text version of of it that that

1614
01:00:46,559 --> 01:00:47,920
was going to see anyway because it's

1615
01:00:47,920 --> 01:00:50,559
obscured right i get it okay

1616
01:00:50,559 --> 01:00:53,040
right and in particular the

1617
01:00:53,040 --> 01:00:56,240
um the concern here is if the sender

1618
01:00:56,240 --> 01:00:57,920
obscures the subject by replacing it

1619
01:00:57,920 --> 01:00:59,680
with the square bracket dot dot square

1620
01:00:59,680 --> 01:01:01,359
bracket which is the recommended you

1621
01:01:01,359 --> 01:01:03,599
know http minimal mechanism

1622
01:01:03,599 --> 01:01:05,119
then obviously the subject has actually

1623
01:01:05,119 --> 01:01:06,640
been protected because the only thing on

1624
01:01:06,640 --> 01:01:08,000
the outside of the message is a dot dot

1625
01:01:08,000 --> 01:01:08,960
dot

1626
01:01:08,960 --> 01:01:12,559
but it could be that the sender did not

1627
01:01:12,559 --> 01:01:14,000
obscure the subject at all maybe they

1628
01:01:14,000 --> 01:01:15,839
used some sort of hcp null that's like

1629
01:01:15,839 --> 01:01:17,520
hey we're you know we're going to

1630
01:01:17,520 --> 01:01:19,119
protect everything from signature wise

1631
01:01:19,119 --> 01:01:20,400
but we're not going to bother obscuring

1632
01:01:20,400 --> 01:01:21,359
anything

1633
01:01:21,359 --> 01:01:23,200
but some outside male user agent

1634
01:01:23,200 --> 01:01:25,680
injected you know star star spam star

1635
01:01:25,680 --> 01:01:27,359
star in the subject line and now they

1636
01:01:27,359 --> 01:01:28,319
differ

1637
01:01:28,319 --> 01:01:30,160
right or it re-wrapped the subject line

1638
01:01:30,160 --> 01:01:31,440
now they differ

1639
01:01:31,440 --> 01:01:34,799
do we claim then that it changed um that

1640
01:01:34,799 --> 01:01:36,880
that because those things differ it must

1641
01:01:36,880 --> 01:01:38,559
be encrypted you know

1642
01:01:38,559 --> 01:01:40,480
technically it's not a match anymore deb

1643
01:01:40,480 --> 01:01:42,079
i see you in the land

1644
01:01:42,079 --> 01:01:43,440
yeah i know i'm in real life now because

1645
01:01:43,440 --> 01:01:44,960
i have to stand on my tiptoes to get to

1646
01:01:44,960 --> 01:01:47,920
the mic again anyway so can you

1647
01:01:47,920 --> 01:01:50,400
re-explain what protection is on which

1648
01:01:50,400 --> 01:01:52,319
part of the is like not not long and

1649
01:01:52,319 --> 01:01:54,640
drawn out but just little so the whole

1650
01:01:54,640 --> 01:01:57,359
header is integrity protected signed

1651
01:01:57,359 --> 01:01:59,119
that's correct the way this the way this

1652
01:01:59,119 --> 01:02:00,799
draft is specified basically every

1653
01:02:00,799 --> 01:02:03,039
single header will be wrapped by the

1654
01:02:03,039 --> 01:02:05,359
signature layer

1655
01:02:05,359 --> 01:02:06,960
and of course also wrapped by the

1656
01:02:06,960 --> 01:02:08,240
encryption layer

1657
01:02:08,240 --> 01:02:10,640
but some headers may have the same value

1658
01:02:10,640 --> 01:02:12,319
on the outside of the encryption layer

1659
01:02:12,319 --> 01:02:14,559
as they do on the inside but in this

1660
01:02:14,559 --> 01:02:16,799
case not the subject line

1661
01:02:16,799 --> 01:02:18,240
right and that's the that's the

1662
01:02:18,240 --> 01:02:19,839
recommended header confidentiality

1663
01:02:19,839 --> 01:02:21,440
policy right

1664
01:02:21,440 --> 01:02:22,799
we have this header configuration this

1665
01:02:22,799 --> 01:02:24,400
the http in the draft says when you're

1666
01:02:24,400 --> 01:02:26,319
composing a message you need to decide

1667
01:02:26,319 --> 01:02:28,000
what to do on the outside of the message

1668
01:02:28,000 --> 01:02:30,480
based on what what the original message

1669
01:02:30,480 --> 01:02:32,640
headers would have been

1670
01:02:32,640 --> 01:02:34,720
so your question is what happens when

1671
01:02:34,720 --> 01:02:36,240
the

1672
01:02:36,240 --> 01:02:38,799
unencrypted but previously obscured

1673
01:02:38,799 --> 01:02:41,599
subject line does not match the

1674
01:02:41,599 --> 01:02:43,119
original well

1675
01:02:43,119 --> 01:02:44,160
so

1676
01:02:44,160 --> 01:02:45,599
in particular we're saying look when

1677
01:02:45,599 --> 01:02:47,760
you're rendering

1678
01:02:47,760 --> 01:02:49,440
the male user agent probably wants to

1679
01:02:49,440 --> 01:02:51,680
know which message headers were

1680
01:02:51,680 --> 01:02:53,520
protected with what kinds of protection

1681
01:02:53,520 --> 01:02:55,760
they should all be signed and some of

1682
01:02:55,760 --> 01:02:58,640
them could be encrypted and signed

1683
01:02:58,640 --> 01:03:00,640
and how do you tell which ones were

1684
01:03:00,640 --> 01:03:02,400
encrypted and signed when

1685
01:03:02,400 --> 01:03:03,920
some of them have i mean obviously

1686
01:03:03,920 --> 01:03:05,520
they've all been encrypted but some of

1687
01:03:05,520 --> 01:03:06,720
them have also been copied to the

1688
01:03:06,720 --> 01:03:07,760
outside it doesn't have the same

1689
01:03:07,760 --> 01:03:09,520
confidentiality guarantees that people

1690
01:03:09,520 --> 01:03:10,640
expect

1691
01:03:10,640 --> 01:03:11,680
right so

1692
01:03:11,680 --> 01:03:13,280
yeah so i'm going to make a comment and

1693
01:03:13,280 --> 01:03:15,119
then i'm going to walk away um so

1694
01:03:15,119 --> 01:03:19,039
comment is that i'll tell you that

1695
01:03:19,039 --> 01:03:21,119
having dealt with smi messages on a

1696
01:03:21,119 --> 01:03:23,680
daily basis that most users aren't smart

1697
01:03:23,680 --> 01:03:24,960
enough to know the difference between

1698
01:03:24,960 --> 01:03:26,480
signed and signed and encrypted let

1699
01:03:26,480 --> 01:03:27,440
alone

1700
01:03:27,440 --> 01:03:29,440
with this sort of level of detail that

1701
01:03:29,440 --> 01:03:33,119
we're talking about i i agree

1702
01:03:33,200 --> 01:03:35,039
okay good so

1703
01:03:35,039 --> 01:03:36,720
so the re

1704
01:03:36,720 --> 01:03:39,039
yes uh so the reason that we want male

1705
01:03:39,039 --> 01:03:41,440
user agents to be able to reason about

1706
01:03:41,440 --> 01:03:43,599
these message headers this way

1707
01:03:43,599 --> 01:03:45,839
is that when so one of them is you could

1708
01:03:45,839 --> 01:03:48,480
imagine some you know expert mode thing

1709
01:03:48,480 --> 01:03:49,760
but we're not going to get into the

1710
01:03:49,760 --> 01:03:51,599
expert mode thing right where where you

1711
01:03:51,599 --> 01:03:53,200
really do want to show this a user wants

1712
01:03:53,200 --> 01:03:54,640
to inspect it right you could imagine

1713
01:03:54,640 --> 01:03:55,440
that

1714
01:03:55,440 --> 01:03:56,799
most people will never use it as you

1715
01:03:56,799 --> 01:03:58,160
described there's three of them by the

1716
01:03:58,160 --> 01:03:59,280
way

1717
01:03:59,280 --> 01:04:00,240
people

1718
01:04:00,240 --> 01:04:02,479
sorry

1719
01:04:02,640 --> 01:04:04,400
uh there might be four you know there

1720
01:04:04,400 --> 01:04:08,240
might even be five i don't know awesome

1721
01:04:08,480 --> 01:04:12,240
devil in this room and like

1722
01:04:12,710 --> 01:04:16,160
[Laughter]

1723
01:04:16,160 --> 01:04:18,000
but the mail user agent might want to

1724
01:04:18,000 --> 01:04:20,240
know which message headers uh had this

1725
01:04:20,240 --> 01:04:22,160
kind of protection because it might be

1726
01:04:22,160 --> 01:04:23,359
relevant for

1727
01:04:23,359 --> 01:04:25,039
uh for dealing with the message for

1728
01:04:25,039 --> 01:04:27,920
example when i reply

1729
01:04:27,920 --> 01:04:29,839
it might be worthwhile for somebody

1730
01:04:29,839 --> 01:04:31,440
who's implementing a message a male user

1731
01:04:31,440 --> 01:04:34,480
agent to know that when they're replying

1732
01:04:34,480 --> 01:04:36,160
these headers had been obscured

1733
01:04:36,160 --> 01:04:37,599
previously and we would like to keep

1734
01:04:37,599 --> 01:04:38,880
obscuring them

1735
01:04:38,880 --> 01:04:42,480
yeah i agree i just think this is

1736
01:04:42,480 --> 01:04:43,280
um

1737
01:04:43,280 --> 01:04:45,039
mostly ridiculously complicated for the

1738
01:04:45,039 --> 01:04:46,559
regular user

1739
01:04:46,559 --> 01:04:48,400
note i totally agree the only reason

1740
01:04:48,400 --> 01:04:50,079
that i i've presented this in the user

1741
01:04:50,079 --> 01:04:51,599
interface here

1742
01:04:51,599 --> 01:04:53,440
uh so people can see the kind of thing

1743
01:04:53,440 --> 01:04:55,039
that we're talking about but i generally

1744
01:04:55,039 --> 01:04:56,400
agree that we do not want to present

1745
01:04:56,400 --> 01:04:58,319
this to the to the regular user but we

1746
01:04:58,319 --> 01:04:59,760
do think that male user agents need to

1747
01:04:59,760 --> 01:05:01,520
be able to reason about which headers

1748
01:05:01,520 --> 01:05:03,599
had what level of protection

1749
01:05:03,599 --> 01:05:05,280
yeah and so this is

1750
01:05:05,280 --> 01:05:07,200
so the question here is when the mail

1751
01:05:07,200 --> 01:05:08,880
user agent is reasoning about the header

1752
01:05:08,880 --> 01:05:10,799
fields how does it determine that this

1753
01:05:10,799 --> 01:05:12,960
header field was encrypted that is

1754
01:05:12,960 --> 01:05:15,599
actually confidential or not

1755
01:05:15,599 --> 01:05:17,119
and the text currently says when it

1756
01:05:17,119 --> 01:05:19,119
doesn't match the unprotected copy but

1757
01:05:19,119 --> 01:05:20,559
the trouble is we know that the outside

1758
01:05:20,559 --> 01:05:22,559
copy can change in transit

1759
01:05:22,559 --> 01:05:23,920
go ahead

1760
01:05:23,920 --> 01:05:25,280
aaron

1761
01:05:25,280 --> 01:05:27,760
uh hi aaron um

1762
01:05:27,760 --> 01:05:30,480
why if if this is intended for machine

1763
01:05:30,480 --> 01:05:32,079
why don't we put it into the encrypted

1764
01:05:32,079 --> 01:05:34,160
header into like a signaling mechanism

1765
01:05:34,160 --> 01:05:35,280
or something

1766
01:05:35,280 --> 01:05:37,200
like why don't we just say

1767
01:05:37,200 --> 01:05:39,280
i don't know encrypted subject even just

1768
01:05:39,280 --> 01:05:42,400
true or one

1769
01:05:42,480 --> 01:05:45,280
actually to what uh is in the draft

1770
01:05:45,280 --> 01:05:47,520
there is a record of which header fields

1771
01:05:47,520 --> 01:05:50,640
were obscured and which one wore yeah

1772
01:05:50,640 --> 01:05:52,640
you know

1773
01:05:52,640 --> 01:05:55,119
preserve this is yeah so

1774
01:05:55,119 --> 01:05:57,039
i think part of the question is there is

1775
01:05:57,039 --> 01:05:59,520
this extra complexity that

1776
01:05:59,520 --> 01:06:02,000
goes into you know the

1777
01:06:02,000 --> 01:06:03,760
an extra side a couple of headers that

1778
01:06:03,760 --> 01:06:07,280
will go uh into the encrypted part and

1779
01:06:07,280 --> 01:06:08,880
you know will people implement i think

1780
01:06:08,880 --> 01:06:10,960
that's kind of where dkj was going with

1781
01:06:10,960 --> 01:06:13,039
this i mean yeah really the extra

1782
01:06:13,039 --> 01:06:14,880
complexity adds

1783
01:06:14,880 --> 01:06:17,280
adds complexity on the center side but

1784
01:06:17,280 --> 01:06:18,960
this makes it so much easier for like

1785
01:06:18,960 --> 01:06:21,839
machines to reason about it because

1786
01:06:21,839 --> 01:06:23,920
like the using untrusted data i'm not

1787
01:06:23,920 --> 01:06:26,480
the biggest fan of this idea yeah

1788
01:06:26,480 --> 01:06:28,319
right yep so if you take a look at the

1789
01:06:28,319 --> 01:06:30,160
git lab issues 25 and 26 there's

1790
01:06:30,160 --> 01:06:31,440
actually a proposal that's very much

1791
01:06:31,440 --> 01:06:32,400
along the lines of what you're

1792
01:06:32,400 --> 01:06:34,640
recommending aaron so i appreciate you

1793
01:06:34,640 --> 01:06:36,480
taking a look at that and see

1794
01:06:36,480 --> 01:06:38,160
um if you think it makes sense for you

1795
01:06:38,160 --> 01:06:39,520
that's sort of the conclusion i came to

1796
01:06:39,520 --> 01:06:40,720
as well but i wanted to raise it to the

1797
01:06:40,720 --> 01:06:43,359
group so we could hear your suggestions

1798
01:06:43,359 --> 01:06:45,520
jiro

1799
01:06:45,520 --> 01:06:46,400
so

1800
01:06:46,400 --> 01:06:47,440
one of the things we were actually

1801
01:06:47,440 --> 01:06:48,720
pointing out there saying that it's

1802
01:06:48,720 --> 01:06:51,039
actually for the many users email uh

1803
01:06:51,039 --> 01:06:52,880
application to know which headers are

1804
01:06:52,880 --> 01:06:53,839
you know

1805
01:06:53,839 --> 01:06:55,520
encrypted and so is that you were saying

1806
01:06:55,520 --> 01:06:58,000
okay if somebody something was like the

1807
01:06:58,000 --> 01:07:00,880
subject header was obscured with not

1808
01:07:00,880 --> 01:07:03,520
with the dot dot dot but

1809
01:07:03,520 --> 01:07:04,880
nothing here

1810
01:07:04,880 --> 01:07:06,319
and you are replying it do you actually

1811
01:07:06,319 --> 01:07:09,760
want to keep the you know the previous

1812
01:07:09,760 --> 01:07:12,240
unobscured version that that was clear

1813
01:07:12,240 --> 01:07:14,319
or do you actually want to you know uh

1814
01:07:14,319 --> 01:07:16,799
create a new one or do you want to and

1815
01:07:16,799 --> 01:07:18,640
you of course don't want to take the

1816
01:07:18,640 --> 01:07:20,720
real subject here or encrypted subject

1817
01:07:20,720 --> 01:07:22,720
here i put in outside

1818
01:07:22,720 --> 01:07:24,559
so so i think actually

1819
01:07:24,559 --> 01:07:25,680
and of course

1820
01:07:25,680 --> 01:07:27,119
we're talking about yes we don't not

1821
01:07:27,119 --> 01:07:28,640
talk about user interfaces but we

1822
01:07:28,640 --> 01:07:29,839
actually are talking about to the

1823
01:07:29,839 --> 01:07:31,760
implementers who are implementing these

1824
01:07:31,760 --> 01:07:33,680
things and

1825
01:07:33,680 --> 01:07:36,400
if we don't give a clear instructions to

1826
01:07:36,400 --> 01:07:38,400
the implementer saying that don't do

1827
01:07:38,400 --> 01:07:42,000
this do that and follow these rules they

1828
01:07:42,000 --> 01:07:43,039
are not going to be they're going to be

1829
01:07:43,039 --> 01:07:44,880
inventing their owns and which means

1830
01:07:44,880 --> 01:07:46,559
we're probably going to have a mixed

1831
01:07:46,559 --> 01:07:48,000
issues again

1832
01:07:48,000 --> 01:07:49,839
when somebody says something else and

1833
01:07:49,839 --> 01:07:51,119
somebody does some other male

1834
01:07:51,119 --> 01:07:52,319
implementation that then we have a

1835
01:07:52,319 --> 01:07:54,880
legacy legacy legacy display that shows

1836
01:07:54,880 --> 01:07:56,799
you that the subject that was in legacy

1837
01:07:56,799 --> 01:07:58,640
display because somebody did implemented

1838
01:07:58,640 --> 01:08:00,720
it wrong so i think we have to be very

1839
01:08:00,720 --> 01:08:02,559
you know strict on rules how do we

1840
01:08:02,559 --> 01:08:03,680
actually say

1841
01:08:03,680 --> 01:08:05,599
we are talking about now with everything

1842
01:08:05,599 --> 01:08:07,200
trying to get new implementations to

1843
01:08:07,200 --> 01:08:09,440
follow our rules so let's make them very

1844
01:08:09,440 --> 01:08:11,680
strict on what they say that do this

1845
01:08:11,680 --> 01:08:14,400
don't try to do anything else

1846
01:08:14,400 --> 01:08:16,319
i i think if i can interject this

1847
01:08:16,319 --> 01:08:18,960
discussion also makes me think that

1848
01:08:18,960 --> 01:08:20,479
yeah if we

1849
01:08:20,479 --> 01:08:22,479
we probably should just decide on rules

1850
01:08:22,479 --> 01:08:24,960
and make make them clear and

1851
01:08:24,960 --> 01:08:26,960
if we do clear rules then people will

1852
01:08:26,960 --> 01:08:29,359
implement them correctly if we'll allow

1853
01:08:29,359 --> 01:08:32,560
a lot of leeway then

1854
01:08:32,719 --> 01:08:35,120
they will be secondary interesting side

1855
01:08:35,120 --> 01:08:37,759
effects and bugs so actually i think dkg

1856
01:08:37,759 --> 01:08:39,359
this discussion just convinced me that

1857
01:08:39,359 --> 01:08:42,560
your proposal is right

1858
01:08:44,479 --> 01:08:46,399
and completely unrelated to this issue

1859
01:08:46,399 --> 01:08:48,319
but actually more generic on this area

1860
01:08:48,319 --> 01:08:51,520
there isn't this group of mob which is a

1861
01:08:51,520 --> 01:08:53,679
messaging multiverb or whatever it has a

1862
01:08:53,679 --> 01:08:55,839
joke of her fail wrecking and i think

1863
01:08:55,839 --> 01:08:57,600
this is something that would be

1864
01:08:57,600 --> 01:09:00,000
probably more you know in scope with

1865
01:09:00,000 --> 01:09:01,520
their stuff what they are doing there's

1866
01:09:01,520 --> 01:09:02,799
lots of you know

1867
01:09:02,799 --> 01:09:05,279
mail vendors there's there's you know

1868
01:09:05,279 --> 01:09:07,120
this kind of uh

1869
01:09:07,120 --> 01:09:08,479
people who actually write the mail

1870
01:09:08,479 --> 01:09:10,640
clients and actually write the

1871
01:09:10,640 --> 01:09:13,198
uh mass mail mailing software and

1872
01:09:13,198 --> 01:09:15,198
probably sending encrypted stuff banks

1873
01:09:15,198 --> 01:09:17,600
and so on so i would actually recommend

1874
01:09:17,600 --> 01:09:19,198
actually taking some of these things and

1875
01:09:19,198 --> 01:09:21,120
try to get it in present in the air or

1876
01:09:21,120 --> 01:09:22,719
something like that i think the next

1877
01:09:22,719 --> 01:09:24,799
meeting is in london in

1878
01:09:24,799 --> 01:09:26,640
june or something like that

1879
01:09:26,640 --> 01:09:29,040
well that's very convenient considering

1880
01:09:29,040 --> 01:09:31,359
that i'm local um

1881
01:09:31,359 --> 01:09:34,719
yeah that's a good point really

1882
01:09:44,799 --> 01:09:46,399
thank you for that suggestion

1883
01:09:46,399 --> 01:09:48,880
i think that's a good one that we should

1884
01:09:48,880 --> 01:09:50,799
definitely give the mog folks a heads up

1885
01:09:50,799 --> 01:09:52,238
at least that that something like this

1886
01:09:52,238 --> 01:09:54,560
might be coming um so that you know we

1887
01:09:54,560 --> 01:09:57,760
can see how to work with them

1888
01:09:59,360 --> 01:10:01,040
um

1889
01:10:01,040 --> 01:10:04,320
so yeah uh feedback on uh on the mailing

1890
01:10:04,320 --> 01:10:07,199
list feedback on the get lab issues uh

1891
01:10:07,199 --> 01:10:08,960
with these things would be would be

1892
01:10:08,960 --> 01:10:10,400
great i think there's one more slide but

1893
01:10:10,400 --> 01:10:12,719
i think it just says questions on it so

1894
01:10:12,719 --> 01:10:14,800
um

1895
01:10:14,800 --> 01:10:16,880
i appreciate the engagement and and

1896
01:10:16,880 --> 01:10:20,400
discussion from the group here

1897
01:10:20,880 --> 01:10:24,800
so thank you very much design team for

1898
01:10:24,800 --> 01:10:27,040
for really digging into this over the

1899
01:10:27,040 --> 01:10:29,679
last uh meeting cycle

1900
01:10:29,679 --> 01:10:31,760
looks like we have uh

1901
01:10:31,760 --> 01:10:36,080
the ask at itf 112 was

1902
01:10:36,080 --> 01:10:38,719
give the group a straw man to shoot at

1903
01:10:38,719 --> 01:10:41,199
you've done just that so

1904
01:10:41,199 --> 01:10:43,600
thank you very much and i'm looking

1905
01:10:43,600 --> 01:10:46,239
forward to a robust discussion on the

1906
01:10:46,239 --> 01:10:49,360
mail list at this point

1907
01:10:50,400 --> 01:10:52,320
is there any last questions before we

1908
01:10:52,320 --> 01:10:56,080
move to the next presentation

1909
01:10:56,640 --> 01:10:58,960
um

1910
01:10:58,960 --> 01:11:00,800
i believe you're not going to talk about

1911
01:11:00,800 --> 01:11:01,679
the

1912
01:11:01,679 --> 01:11:04,800
eda email guidance there so i i'll give

1913
01:11:04,800 --> 01:11:06,560
you just a brief overview i don't have

1914
01:11:06,560 --> 01:11:08,239
slides for the e2 email guidance there's

1915
01:11:08,239 --> 01:11:09,760
been one update since the last one which

1916
01:11:09,760 --> 01:11:12,159
was just uh defining a set of headers as

1917
01:11:12,159 --> 01:11:14,400
being user facing which just lists

1918
01:11:14,400 --> 01:11:17,360
things like subject from to date cc

1919
01:11:17,360 --> 01:11:18,719
which are typically presented to the

1920
01:11:18,719 --> 01:11:20,080
user as opposed to the other message

1921
01:11:20,080 --> 01:11:21,040
headers

1922
01:11:21,040 --> 01:11:22,080
um

1923
01:11:22,080 --> 01:11:25,679
that that definition of uh

1924
01:11:25,679 --> 01:11:27,040
you know what is presented to the users

1925
01:11:27,040 --> 01:11:28,560
directly is

1926
01:11:28,560 --> 01:11:30,560
useful turns out to be useful in the

1927
01:11:30,560 --> 01:11:32,480
cryptographic in the header protection

1928
01:11:32,480 --> 01:11:34,640
document we haven't done much else

1929
01:11:34,640 --> 01:11:37,440
um i am actively reaching out to mail

1930
01:11:37,440 --> 01:11:39,679
user agents and systems that are used to

1931
01:11:39,679 --> 01:11:41,920
doing uh you know cryptographic

1932
01:11:41,920 --> 01:11:45,440
end-to-end protection in particular um

1933
01:11:45,440 --> 01:11:47,520
well different values are different

1934
01:11:47,520 --> 01:11:49,040
implementers i'm reaching out to them

1935
01:11:49,040 --> 01:11:50,719
privately to ask them

1936
01:11:50,719 --> 01:11:53,040
for their feedback and thoughts on the

1937
01:11:53,040 --> 01:11:55,360
end-to-end male

1938
01:11:55,360 --> 01:11:56,719
guidance so

1939
01:11:56,719 --> 01:11:58,000
hopefully we'll see some more action on

1940
01:11:58,000 --> 01:12:00,159
that on the next cycle but that's it for

1941
01:12:00,159 --> 01:12:01,679
that draft unless anybody has any

1942
01:12:01,679 --> 01:12:04,320
comments on it

1943
01:12:06,239 --> 01:12:09,520
okay thank you um thanks

1944
01:12:09,520 --> 01:12:11,840
now we're moving to the uh under

1945
01:12:11,840 --> 01:12:14,080
consideration for adoption discussion

1946
01:12:14,080 --> 01:12:15,760
there's a lot here

1947
01:12:15,760 --> 01:12:18,400
um the first one is

1948
01:12:18,400 --> 01:12:23,199
uh michael richardson with the rfc uh 70

1949
01:12:23,199 --> 01:12:26,879
30 csr adders

1950
01:12:32,320 --> 01:12:34,960
this microphone is actually kind of

1951
01:12:34,960 --> 01:12:37,280
yeah we should switch them for you

1952
01:12:37,280 --> 01:12:38,480
you do you want to give me uh do you

1953
01:12:38,480 --> 01:12:40,159
want to give me that um you want to try

1954
01:12:40,159 --> 01:12:42,560
that see if it works this time

1955
01:12:42,560 --> 01:12:44,560
probably not

1956
01:12:44,560 --> 01:12:46,560
you okay

1957
01:12:46,560 --> 01:12:49,120
and you find my name and click on it and

1958
01:12:49,120 --> 01:12:50,960
hover and

1959
01:12:50,960 --> 01:12:52,560
whole hover you the whole hover

1960
01:12:52,560 --> 01:12:56,239
interface is really ridiculous

1961
01:12:56,560 --> 01:12:58,880
no there we go yeah

1962
01:12:58,880 --> 01:13:01,280
okay so um

1963
01:13:01,280 --> 01:13:02,880
yeah so it's a terrible name so please

1964
01:13:02,880 --> 01:13:04,400
suggest a better name

1965
01:13:04,400 --> 01:13:07,199
um and uh that would be that's the most

1966
01:13:07,199 --> 01:13:09,280
important ask right now

1967
01:13:09,280 --> 01:13:10,159
um

1968
01:13:10,159 --> 01:13:13,280
so uh story so far so uh we had a

1969
01:13:13,280 --> 01:13:14,719
conversation probably last summer

1970
01:13:14,719 --> 01:13:17,280
probably at the this meeting last uh

1971
01:13:17,280 --> 01:13:19,520
summer we wound up with a virtual

1972
01:13:19,520 --> 01:13:21,280
interim meeting at the end of august to

1973
01:13:21,280 --> 01:13:23,040
talk about this problem

1974
01:13:23,040 --> 01:13:24,159
um

1975
01:13:24,159 --> 01:13:26,239
and i put the links there if you don't

1976
01:13:26,239 --> 01:13:28,480
know about it they're recorded

1977
01:13:28,480 --> 01:13:31,040
um the uh and we formed a design team

1978
01:13:31,040 --> 01:13:32,000
we'll tell you a little bit what the

1979
01:13:32,000 --> 01:13:33,679
problem is there but that's the story so

1980
01:13:33,679 --> 01:13:35,679
far um and we don't have a lot of

1981
01:13:35,679 --> 01:13:37,440
progress in this but i'm going to talk

1982
01:13:37,440 --> 01:13:40,719
about what what we we have uh done

1983
01:13:40,719 --> 01:13:43,199
um so the fundamental problem

1984
01:13:43,199 --> 01:13:44,480
does that work

1985
01:13:44,480 --> 01:13:46,560
yeah okay so this is your

1986
01:13:46,560 --> 01:13:50,640
viewer viewer caution thing uh there um

1987
01:13:50,640 --> 01:13:52,560
the fundamental problem is that it turns

1988
01:13:52,560 --> 01:13:54,960
out that a number of us uh particularly

1989
01:13:54,960 --> 01:13:57,520
in the animal working group uh made a

1990
01:13:57,520 --> 01:14:01,360
red rfc 7030 we thought oh this is uh

1991
01:14:01,360 --> 01:14:03,360
some asn1 that we don't quite understand

1992
01:14:03,360 --> 01:14:04,960
so we'll just

1993
01:14:04,960 --> 01:14:06,560
we think it means this

1994
01:14:06,560 --> 01:14:09,360
and so we proceeded on that that uh

1995
01:14:09,360 --> 01:14:10,719
that basis

1996
01:14:10,719 --> 01:14:13,120
um max pritikin who is one of the

1997
01:14:13,120 --> 01:14:15,199
authors of rc8995

1998
01:14:15,199 --> 01:14:16,800
and of 70 30

1999
01:14:16,800 --> 01:14:19,040
um was among those who believed that we

2000
01:14:19,040 --> 01:14:21,920
were correct and and behold we were not

2001
01:14:21,920 --> 01:14:24,400
correct um the sn1 did not do what we

2002
01:14:24,400 --> 01:14:26,640
thought it did um and so now they're

2003
01:14:26,640 --> 01:14:29,360
having a conversation of what's going on

2004
01:14:29,360 --> 01:14:31,120
fundamentally what we need to be able to

2005
01:14:31,120 --> 01:14:35,440
do as a an est client in anima but in

2006
01:14:35,440 --> 01:14:37,040
other things as well

2007
01:14:37,040 --> 01:14:39,520
is we need to be have the the

2008
01:14:39,520 --> 01:14:42,080
registration authority say and this is

2009
01:14:42,080 --> 01:14:45,199
the subject alt name that you shall use

2010
01:14:45,199 --> 01:14:48,159
and any other name that you use will be

2011
01:14:48,159 --> 01:14:49,920
uh stricken from the record okay so

2012
01:14:49,920 --> 01:14:52,000
please request it please put it in the

2013
01:14:52,000 --> 01:14:55,280
in your csr request and that that's how

2014
01:14:55,280 --> 01:14:56,560
it's going to work

2015
01:14:56,560 --> 01:14:58,719
um and it turns out that we can't do

2016
01:14:58,719 --> 01:15:01,679
that we can say things things like um

2017
01:15:01,679 --> 01:15:04,880
please use uh curve123 without

2018
01:15:04,880 --> 01:15:06,719
specifying the actual value of the

2019
01:15:06,719 --> 01:15:08,640
public key and we can say a whole bunch

2020
01:15:08,640 --> 01:15:10,400
of things like that about that kind of

2021
01:15:10,400 --> 01:15:12,320
thing but we can't actually say and you

2022
01:15:12,320 --> 01:15:14,719
will put this value in the attribute you

2023
01:15:14,719 --> 01:15:16,239
request

2024
01:15:16,239 --> 01:15:17,360
so

2025
01:15:17,360 --> 01:15:19,600
how are we going to do that so one way

2026
01:15:19,600 --> 01:15:21,840
is the the kind of simplest way right

2027
01:15:21,840 --> 01:15:23,440
now we have a

2028
01:15:23,440 --> 01:15:25,520
a sequence of

2029
01:15:25,520 --> 01:15:27,679
attribute or oid

2030
01:15:27,679 --> 01:15:29,679
and you get this choice o id or

2031
01:15:29,679 --> 01:15:32,960
attribute and uh this part in the middle

2032
01:15:32,960 --> 01:15:34,960
here i don't want to use my hand because

2033
01:15:34,960 --> 01:15:36,480
people remotely won't see it but the

2034
01:15:36,480 --> 01:15:38,000
part in black in the middle that's

2035
01:15:38,000 --> 01:15:40,560
what's there right now i renamed that

2036
01:15:40,560 --> 01:15:43,520
x type and x attribute simply because uh

2037
01:15:43,520 --> 01:15:46,159
in this slide to to make it uh less

2038
01:15:46,159 --> 01:15:49,040
confusing to repeat the same words

2039
01:15:49,040 --> 01:15:51,280
um and that's what we have right now and

2040
01:15:51,280 --> 01:15:52,880
we seem to believe you see it's it's

2041
01:15:52,880 --> 01:15:55,679
it's non-trivial amount of asn 1. um and

2042
01:15:55,679 --> 01:15:57,760
we seem to believe that the x x

2043
01:15:57,760 --> 01:15:59,760
attribute actually would allow us to put

2044
01:15:59,760 --> 01:16:01,679
a value in there and we actually wrote

2045
01:16:01,679 --> 01:16:03,440
code that did that and well it

2046
01:16:03,440 --> 01:16:06,560
interoperated but it's wrong okay so

2047
01:16:06,560 --> 01:16:07,920
this is the simplest version the

2048
01:16:07,920 --> 01:16:10,080
simplest version i think is that we add

2049
01:16:10,080 --> 01:16:13,199
a new choice the top which has a value

2050
01:16:13,199 --> 01:16:14,719
and then we have this new structure at

2051
01:16:14,719 --> 01:16:16,719
the bottom which you see now has three

2052
01:16:16,719 --> 01:16:18,400
three elements in it

2053
01:16:18,400 --> 01:16:19,600
and uh

2054
01:16:19,600 --> 01:16:21,280
there's a thing in the bottom which is

2055
01:16:21,280 --> 01:16:22,960
put the value that you want and i think

2056
01:16:22,960 --> 01:16:25,840
that's an octet string in the end but uh

2057
01:16:25,840 --> 01:16:28,800
i am not qualified to say that for sure

2058
01:16:28,800 --> 01:16:30,560
um so that's one version okay and this

2059
01:16:30,560 --> 01:16:33,760
is this is essentially um

2060
01:16:33,760 --> 01:16:35,600
a conversation another mailing list is

2061
01:16:35,600 --> 01:16:37,120
whether it was upwards compatible or

2062
01:16:37,120 --> 01:16:39,760
backwards compatible but uh what i know

2063
01:16:39,760 --> 01:16:42,480
is that if you if you if you ask for if

2064
01:16:42,480 --> 01:16:44,640
someone comes along and asks for

2065
01:16:44,640 --> 01:16:48,800
uh the expects the old response

2066
01:16:48,800 --> 01:16:49,600
and

2067
01:16:49,600 --> 01:16:50,800
gets this

2068
01:16:50,800 --> 01:16:52,640
that they will be successfully able to

2069
01:16:52,640 --> 01:16:54,560
skip it and ignore it and not understand

2070
01:16:54,560 --> 01:16:56,080
it which may make them fail to

2071
01:16:56,080 --> 01:16:58,640
interoperate to accomplish their goals

2072
01:16:58,640 --> 01:17:00,480
but they shouldn't blow up

2073
01:17:00,480 --> 01:17:03,760
um so that's that's uh uh one part of it

2074
01:17:03,760 --> 01:17:06,560
so this is option a okay and this would

2075
01:17:06,560 --> 01:17:09,120
make this essentially uh is a superset

2076
01:17:09,120 --> 01:17:10,480
of what we do now

2077
01:17:10,480 --> 01:17:12,080
so everything that's out there deployed

2078
01:17:12,080 --> 01:17:14,719
right now would continue to be compliant

2079
01:17:14,719 --> 01:17:16,800
to this without having to do any other

2080
01:17:16,800 --> 01:17:18,480
other changes

2081
01:17:18,480 --> 01:17:20,800
for me

2082
01:17:20,800 --> 01:17:24,400
what oh sean go ahead yeah

2083
01:17:24,880 --> 01:17:26,880
the end i just i just want to say that i

2084
01:17:26,880 --> 01:17:28,800
think we're putting a lot of stock in

2085
01:17:28,800 --> 01:17:30,400
the rationale that you have

2086
01:17:30,400 --> 01:17:34,159
and the example in 70 30 did not include

2087
01:17:34,159 --> 01:17:36,640
a value in the attribute i think we

2088
01:17:36,640 --> 01:17:39,679
should i think we should just fix that

2089
01:17:39,679 --> 01:17:41,440
if you look at the

2090
01:17:41,440 --> 01:17:43,840
the thing where you can put a value in

2091
01:17:43,840 --> 01:17:46,000
where the x the uh attribute thing that

2092
01:17:46,000 --> 01:17:48,239
you have like there's csr adders adder

2093
01:17:48,239 --> 01:17:50,880
or oid or attribute what we didn't do to

2094
01:17:50,880 --> 01:17:53,360
the example was a value for the

2095
01:17:53,360 --> 01:17:55,440
for the attribute we should just fix

2096
01:17:55,440 --> 01:17:59,839
that example and call it a day

2097
01:18:00,159 --> 01:18:01,760
go back for a moment i think that what

2098
01:18:01,760 --> 01:18:04,320
you're saying is that our interpretation

2099
01:18:04,320 --> 01:18:07,280
of the asn1 was maybe correct and that

2100
01:18:07,280 --> 01:18:08,719
we just

2101
01:18:08,719 --> 01:18:10,560
is that that what you're saying i'm

2102
01:18:10,560 --> 01:18:12,320
thinking it's right we just the example

2103
01:18:12,320 --> 01:18:14,320
was just wrong because it's got an at so

2104
01:18:14,320 --> 01:18:16,080
you have for the oid obviously you just

2105
01:18:16,080 --> 01:18:17,760
include the oid for the attribute what

2106
01:18:17,760 --> 01:18:19,520
you're saying is you want to provide an

2107
01:18:19,520 --> 01:18:21,679
attribute value back to the client to

2108
01:18:21,679 --> 01:18:23,199
use right

2109
01:18:23,199 --> 01:18:26,080
the example of 70 30 for the attribute

2110
01:18:26,080 --> 01:18:28,320
just included in the light and not the

2111
01:18:28,320 --> 01:18:31,600
value which is incorrect asm1 so the

2112
01:18:31,600 --> 01:18:33,679
example is wrong

2113
01:18:33,679 --> 01:18:36,480
okay so you're saying that

2114
01:18:36,480 --> 01:18:39,840
okay uh this is also a good a good

2115
01:18:39,840 --> 01:18:41,840
result i'm perfectly happy with that

2116
01:18:41,840 --> 01:18:44,239
it's not right because because

2117
01:18:44,239 --> 01:18:45,600
because technically if you look at it

2118
01:18:45,600 --> 01:18:46,960
you set the type

2119
01:18:46,960 --> 01:18:49,040
the value if you define an attribute

2120
01:18:49,040 --> 01:18:51,920
that has no value you would just send an

2121
01:18:51,920 --> 01:18:54,320
oid but most attributes have some kind

2122
01:18:54,320 --> 01:18:56,640
of value so you would include the actual

2123
01:18:56,640 --> 01:18:58,640
value so um

2124
01:18:58,640 --> 01:19:00,719
here's here's the i believe the example

2125
01:19:00,719 --> 01:19:02,880
that may contradict what you're saying

2126
01:19:02,880 --> 01:19:06,080
um which is that you the type might be

2127
01:19:06,080 --> 01:19:07,760
the algorithm

2128
01:19:07,760 --> 01:19:10,239
yeah the value now is the name of the

2129
01:19:10,239 --> 01:19:13,280
algorithm like you know uh esd cdsa or

2130
01:19:13,280 --> 01:19:14,800
es256

2131
01:19:14,800 --> 01:19:16,719
right but at no point do you include the

2132
01:19:16,719 --> 01:19:19,199
public key which is the value of that

2133
01:19:19,199 --> 01:19:20,239
thing

2134
01:19:20,239 --> 01:19:22,159
right well if you need to do that then

2135
01:19:22,159 --> 01:19:24,560
if you needed if you need to include um

2136
01:19:24,560 --> 01:19:26,239
something that's not defined you define

2137
01:19:26,239 --> 01:19:28,080
a new attribute and use that

2138
01:19:28,080 --> 01:19:28,880
okay

2139
01:19:28,880 --> 01:19:30,880
so if you want to if you want to yeah if

2140
01:19:30,880 --> 01:19:32,400
you want to slam a subject public key in

2141
01:19:32,400 --> 01:19:33,360
there

2142
01:19:33,360 --> 01:19:34,800
define an attribute that is subject

2143
01:19:34,800 --> 01:19:36,400
public key and slam it in there and

2144
01:19:36,400 --> 01:19:38,400
there you go okay so that would be the

2145
01:19:38,400 --> 01:19:39,840
solution if you needed to do that that's

2146
01:19:39,840 --> 01:19:42,480
not what we need to do but but yeah yeah

2147
01:19:42,480 --> 01:19:45,520
yeah okay i guess yeah sorry

2148
01:19:45,520 --> 01:19:48,159
uh uh uh so i i'm gonna engage you on

2149
01:19:48,159 --> 01:19:50,719
the list with with the example that i

2150
01:19:50,719 --> 01:19:52,400
have for my code

2151
01:19:52,400 --> 01:19:54,960
okay and i i'd really appreciate it if

2152
01:19:54,960 --> 01:19:57,360
you could you could say that you in fact

2153
01:19:57,360 --> 01:19:59,679
believe it follows this the a i mean

2154
01:19:59,679 --> 01:20:00,719
it's there

2155
01:20:00,719 --> 01:20:03,040
it does because in fact there is another

2156
01:20:03,040 --> 01:20:05,040
rfc that is defined that is used this

2157
01:20:05,040 --> 01:20:05,840
way

2158
01:20:05,840 --> 01:20:09,760
um it which is you know rfc 8295

2159
01:20:09,760 --> 01:20:11,679
so it's it's i wanted to provide an

2160
01:20:11,679 --> 01:20:15,120
entire pki data back to the

2161
01:20:15,120 --> 01:20:17,280
um client using est

2162
01:20:17,280 --> 01:20:19,120
and i define it there's an attribute

2163
01:20:19,120 --> 01:20:21,679
that's defined for that and pkcs

2164
01:20:21,679 --> 01:20:23,440
whatever it is i can't remember the

2165
01:20:23,440 --> 01:20:26,400
value it's like a pks pdu so you can

2166
01:20:26,400 --> 01:20:27,920
slam the whole thing in there and you

2167
01:20:27,920 --> 01:20:30,000
can include whatever values you you want

2168
01:20:30,000 --> 01:20:32,560
you can actually give the whole csr you

2169
01:20:32,560 --> 01:20:35,280
want the client to fire back to you

2170
01:20:35,280 --> 01:20:36,960
okay dan did you want to add something

2171
01:20:36,960 --> 01:20:38,880
here at this point and i see i see that

2172
01:20:38,880 --> 01:20:40,480
dan is there so i just want to make sure

2173
01:20:40,480 --> 01:20:41,920
that you know because he was one of the

2174
01:20:41,920 --> 01:20:43,440
authors

2175
01:20:43,440 --> 01:20:44,480
yeah thanks

2176
01:20:44,480 --> 01:20:46,320
so sean you said that the example is

2177
01:20:46,320 --> 01:20:48,560
wrong so can you explain why they what's

2178
01:20:48,560 --> 01:20:50,960
what's wrong in the example

2179
01:20:50,960 --> 01:20:53,120
let me get the let me get to that draft

2180
01:20:53,120 --> 01:20:54,639
if you look at

2181
01:20:54,639 --> 01:20:56,400
the example has an order for challenge

2182
01:20:56,400 --> 01:20:58,480
password and then it has an attribute of

2183
01:20:58,480 --> 01:21:00,239
extension request and it's requesting

2184
01:21:00,239 --> 01:21:02,080
the mac address of the client and then

2185
01:21:02,080 --> 01:21:04,880
an attribute of of ec public key and it

2186
01:21:04,880 --> 01:21:07,840
says use p384

2187
01:21:07,840 --> 01:21:09,280
but at no point does it provide the

2188
01:21:09,280 --> 01:21:11,840
challenge password no right which is

2189
01:21:11,840 --> 01:21:13,920
which is which would be something that

2190
01:21:13,920 --> 01:21:17,440
maybe someone wants to do but s

2191
01:21:17,440 --> 01:21:19,040
tells you what the challenge password

2192
01:21:19,040 --> 01:21:21,360
should be it's the it's important

2193
01:21:21,360 --> 01:21:24,239
yeah it's the something else the tls so

2194
01:21:24,239 --> 01:21:26,000
what i'm saying is that in the examples

2195
01:21:26,000 --> 01:21:28,400
that are in section four whatever that

2196
01:21:28,400 --> 01:21:30,560
there's there's one for just an oid and

2197
01:21:30,560 --> 01:21:32,000
so you're right you just provide the

2198
01:21:32,000 --> 01:21:33,679
challenge password but that's the only

2199
01:21:33,679 --> 01:21:36,080
order you're just providing an oid which

2200
01:21:36,080 --> 01:21:37,920
is saying i'm not giving you the value

2201
01:21:37,920 --> 01:21:40,239
if you want to provide the the value you

2202
01:21:40,239 --> 01:21:42,719
would send the challenge password

2203
01:21:42,719 --> 01:21:45,040
attribute type where the value i think

2204
01:21:45,040 --> 01:21:47,199
that the examples in the draft and that

2205
01:21:47,199 --> 01:21:49,840
asn 1 sequence blob if you decode that i

2206
01:21:49,840 --> 01:21:51,440
think it doesn't actually include the

2207
01:21:51,440 --> 01:21:53,679
value for like mac address

2208
01:21:53,679 --> 01:21:56,239
that's correct

2209
01:22:01,760 --> 01:22:03,840
right so i think what that example needs

2210
01:22:03,840 --> 01:22:07,360
to have some value set for mac address

2211
01:22:07,360 --> 01:22:09,199
and whether it's a dummy value actually

2212
01:22:09,199 --> 01:22:11,040
included value for shipping it back i

2213
01:22:11,040 --> 01:22:12,960
think that's what should happen as

2214
01:22:12,960 --> 01:22:14,960
opposed to

2215
01:22:14,960 --> 01:22:18,719
going off and defining another choice

2216
01:22:18,800 --> 01:22:20,800
i think sean needs to join the design

2217
01:22:20,800 --> 01:22:25,040
team i i would agree okay all right i've

2218
01:22:25,040 --> 01:22:26,400
been volunteered and i'm willing to do

2219
01:22:26,400 --> 01:22:28,080
that all right so so i'm just going to

2220
01:22:28,080 --> 01:22:29,840
skip through the next slide to tell you

2221
01:22:29,840 --> 01:22:31,520
what i think we've just decided not to

2222
01:22:31,520 --> 01:22:32,320
do

2223
01:22:32,320 --> 01:22:33,840
okay

2224
01:22:33,840 --> 01:22:36,960
um so the other choice was to basically

2225
01:22:36,960 --> 01:22:39,760
make do something new maybe even put it

2226
01:22:39,760 --> 01:22:42,000
at a new end a new uh

2227
01:22:42,000 --> 01:22:44,159
uh end point so you wouldn't say slash

2228
01:22:44,159 --> 01:22:46,880
csr attributes but csr better attributes

2229
01:22:46,880 --> 01:22:48,080
or whatever

2230
01:22:48,080 --> 01:22:49,840
and we would return a completely

2231
01:22:49,840 --> 01:22:52,239
different thing and uh the suggestion we

2232
01:22:52,239 --> 01:22:54,400
had was actually that you know maybe

2233
01:22:54,400 --> 01:22:55,840
these are the three things that we care

2234
01:22:55,840 --> 01:22:58,320
about having values for and that if

2235
01:22:58,320 --> 01:22:59,679
there were more they would be added

2236
01:22:59,679 --> 01:23:01,199
later with a new document not

2237
01:23:01,199 --> 01:23:03,600
necessarily by uh by an ayanna or

2238
01:23:03,600 --> 01:23:05,520
anything so i think we've just decided

2239
01:23:05,520 --> 01:23:07,280
that we're not doing this

2240
01:23:07,280 --> 01:23:10,719
does anyone disagree with that

2241
01:23:10,800 --> 01:23:12,960
i'm very happy not to do this

2242
01:23:12,960 --> 01:23:13,679
so

2243
01:23:13,679 --> 01:23:16,560
that means less i think my code may

2244
01:23:16,560 --> 01:23:18,239
require no changes which is even makes

2245
01:23:18,239 --> 01:23:20,400
me even more happy

2246
01:23:20,400 --> 01:23:22,320
there

2247
01:23:22,320 --> 01:23:24,080
and that was it so that was the

2248
01:23:24,080 --> 01:23:25,920
discussion this is a squirrel i saw last

2249
01:23:25,920 --> 01:23:28,159
summer all running

2250
01:23:28,159 --> 01:23:31,040
any other comments

2251
01:23:32,320 --> 01:23:33,679
no

2252
01:23:33,679 --> 01:23:36,000
okay sean you will receive email about

2253
01:23:36,000 --> 01:23:37,520
this

2254
01:23:37,520 --> 01:23:40,800
so you gave him the bag

2255
01:23:40,800 --> 01:23:42,480
i'll i'll be there

2256
01:23:42,480 --> 01:23:44,080
i'm just saying if i get donuts from tim

2257
01:23:44,080 --> 01:23:46,159
hortons

2258
01:23:46,159 --> 01:23:48,639
i did not give this girl the bag the

2259
01:23:48,639 --> 01:23:50,880
squirrel in fact stood in the line and

2260
01:23:50,880 --> 01:23:53,679
got his own stuff

2261
01:23:53,679 --> 01:23:57,440
just just to clarify that you know

2262
01:23:58,639 --> 01:24:01,360
okay great uh i will i will bring i will

2263
01:24:01,360 --> 01:24:04,239
bring sean donuts in july there you go

2264
01:24:04,239 --> 01:24:05,840
i'm not in the queue sean did you throw

2265
01:24:05,840 --> 01:24:07,280
out

2266
01:24:07,280 --> 01:24:10,280
82.95

2267
01:24:10,400 --> 01:24:11,360
yes

2268
01:24:11,360 --> 01:24:15,320
good i know what that is

2269
01:24:16,000 --> 01:24:18,159
great uh glad to see we're making

2270
01:24:18,159 --> 01:24:19,760
progress uh

2271
01:24:19,760 --> 01:24:21,280
although it's uh

2272
01:24:21,280 --> 01:24:23,600
it seems like you might be changing

2273
01:24:23,600 --> 01:24:25,760
directions a little bit

2274
01:24:25,760 --> 01:24:29,679
the next uh presentation is about post

2275
01:24:29,679 --> 01:24:34,080
quantum keys or quantum safe keys

2276
01:24:34,159 --> 01:24:35,040
and

2277
01:24:35,040 --> 01:24:37,239
i'm not sure who's doing the

2278
01:24:37,239 --> 01:24:40,080
presentation of the of the people on the

2279
01:24:40,080 --> 01:24:42,559
draft

2280
01:24:43,440 --> 01:24:45,840
this is the right route this is the nist

2281
01:24:45,840 --> 01:24:47,679
one

2282
01:24:47,679 --> 01:24:48,960
the lamps nest

2283
01:24:48,960 --> 01:24:52,080
because oh okay it's mike osborne who's

2284
01:24:52,080 --> 01:24:55,880
gonna do it um

2285
01:25:10,239 --> 01:25:11,920
sorry i was just trying to get because

2286
01:25:11,920 --> 01:25:14,719
the the list of documents doesn't have

2287
01:25:14,719 --> 01:25:16,480
titles from the documents and them it

2288
01:25:16,480 --> 01:25:19,040
has file names which is this was is a

2289
01:25:19,040 --> 01:25:23,320
quantum safe keys

2290
01:25:33,040 --> 01:25:34,560
okay uh

2291
01:25:34,560 --> 01:25:38,239
i thought i saw there he is

2292
01:25:39,040 --> 01:25:40,719
so first hi everyone this is my first

2293
01:25:40,719 --> 01:25:43,120
ietf meeting so it's a pleasure to meet

2294
01:25:43,120 --> 01:25:45,199
everybody and um unless i understand a

2295
01:25:45,199 --> 01:25:48,400
bit how things work here

2296
01:25:48,480 --> 01:25:52,159
closer to the mic okay okay just uh

2297
01:25:52,159 --> 01:25:54,800
um just to say it was it's my first uh

2298
01:25:54,800 --> 01:25:56,880
my first meeting here so we um we've

2299
01:25:56,880 --> 01:25:59,120
been working in this area for a while um

2300
01:25:59,120 --> 01:26:00,960
it's going to go into

2301
01:26:00,960 --> 01:26:02,480
um

2302
01:26:02,480 --> 01:26:04,400
let's say maybe we go to the first slide

2303
01:26:04,400 --> 01:26:05,840
essentially so this is a piece of

2304
01:26:05,840 --> 01:26:08,400
collaborative work um around

2305
01:26:08,400 --> 01:26:09,920
post-quantum crypto we've been very

2306
01:26:09,920 --> 01:26:12,480
active in this domain uh with with some

2307
01:26:12,480 --> 01:26:13,679
uh

2308
01:26:13,679 --> 01:26:15,040
collaborators

2309
01:26:15,040 --> 01:26:17,440
um the challenge that we've seen is that

2310
01:26:17,440 --> 01:26:20,480
the um nist when they were looking at

2311
01:26:20,480 --> 01:26:23,199
standardizing this and the round three

2312
01:26:23,199 --> 01:26:24,719
or the fine this should be announced

2313
01:26:24,719 --> 01:26:27,280
this week is they really haven't looked

2314
01:26:27,280 --> 01:26:29,679
very much into how keys are serialized

2315
01:26:29,679 --> 01:26:31,040
for the

2316
01:26:31,040 --> 01:26:34,000
competition it was just required to have

2317
01:26:34,000 --> 01:26:36,400
a a single blob that was what the api

2318
01:26:36,400 --> 01:26:38,239
required and so there wasn't really much

2319
01:26:38,239 --> 01:26:39,679
thought put into

2320
01:26:39,679 --> 01:26:41,840
um managing

2321
01:26:41,840 --> 01:26:42,719
um

2322
01:26:42,719 --> 01:26:44,639
you know how keys are serialized and

2323
01:26:44,639 --> 01:26:46,880
identified and things like this

2324
01:26:46,880 --> 01:26:47,920
um

2325
01:26:47,920 --> 01:26:50,159
it's kind of

2326
01:26:50,159 --> 01:26:51,920
a lot of people have picked up on it to

2327
01:26:51,920 --> 01:26:55,360
say okay for example you can i um

2328
01:26:55,360 --> 01:26:56,800
not having to look at the keys and just

2329
01:26:56,800 --> 01:26:59,040
identify it with oit it's very nice you

2330
01:26:59,040 --> 01:27:00,719
know there's no more passing of keys

2331
01:27:00,719 --> 01:27:01,920
it's simple

2332
01:27:01,920 --> 01:27:02,880
um

2333
01:27:02,880 --> 01:27:04,719
however the there are problems with that

2334
01:27:04,719 --> 01:27:06,320
sound sounds really nice in theory but

2335
01:27:06,320 --> 01:27:07,920
i'll come on to why that's that's uh

2336
01:27:07,920 --> 01:27:10,400
that's not not a very good practice

2337
01:27:10,400 --> 01:27:13,280
um if we look at the structures of keys

2338
01:27:13,280 --> 01:27:15,199
so keys um

2339
01:27:15,199 --> 01:27:17,520
they're it's an implicit structure now

2340
01:27:17,520 --> 01:27:19,920
um that's going to depend on

2341
01:27:19,920 --> 01:27:22,320
whichever of the algorithm strengths is

2342
01:27:22,320 --> 01:27:23,679
selected

2343
01:27:23,679 --> 01:27:25,840
which uh version of their algorithm have

2344
01:27:25,840 --> 01:27:27,280
been lots of versions already going

2345
01:27:27,280 --> 01:27:28,880
through the different rounds

2346
01:27:28,880 --> 01:27:30,159
um

2347
01:27:30,159 --> 01:27:32,159
and there are a number of hardware

2348
01:27:32,159 --> 01:27:34,480
related um

2349
01:27:34,480 --> 01:27:36,719
alternatives proposed so you can as a

2350
01:27:36,719 --> 01:27:38,480
there's a lot of

2351
01:27:38,480 --> 01:27:39,840
um

2352
01:27:39,840 --> 01:27:41,840
just a lot of different algorithms that

2353
01:27:41,840 --> 01:27:43,679
you would have different ids that will

2354
01:27:43,679 --> 01:27:46,000
need to be tied to some form of keef key

2355
01:27:46,000 --> 01:27:47,199
format

2356
01:27:47,199 --> 01:27:49,520
um so lots of variants if you start

2357
01:27:49,520 --> 01:27:53,199
tying those variants to hybrid schemes

2358
01:27:53,199 --> 01:27:56,159
it's just a combinatorial explosion so

2359
01:27:56,159 --> 01:27:57,760
we also look at

2360
01:27:57,760 --> 01:27:59,679
open quantum safe we have a test server

2361
01:27:59,679 --> 01:28:02,639
up with over a thousand hybrid

2362
01:28:02,639 --> 01:28:05,360
uh quantum safe and and classical key

2363
01:28:05,360 --> 01:28:06,400
formats

2364
01:28:06,400 --> 01:28:08,000
and that's only a fraction of the ones

2365
01:28:08,000 --> 01:28:09,840
we could have implemented so

2366
01:28:09,840 --> 01:28:11,679
um and we have lots of problems with

2367
01:28:11,679 --> 01:28:14,239
interrupt testing just because these

2368
01:28:14,239 --> 01:28:16,400
things are evolving these things are in

2369
01:28:16,400 --> 01:28:18,320
the field and we just need to figure out

2370
01:28:18,320 --> 01:28:20,639
how to manage the complexity

2371
01:28:20,639 --> 01:28:24,159
you can go to the next slide please

2372
01:28:24,480 --> 01:28:26,880
as i mentioned it's nice in theory to

2373
01:28:26,880 --> 01:28:29,760
have uh an implicit key format tied to

2374
01:28:29,760 --> 01:28:31,040
an oid

2375
01:28:31,040 --> 01:28:33,679
um because um people who design

2376
01:28:33,679 --> 01:28:35,120
algorithms that they they're all

2377
01:28:35,120 --> 01:28:36,719
security then they say okay there's no

2378
01:28:36,719 --> 01:28:38,800
passing involved you remove all of the

2379
01:28:38,800 --> 01:28:41,360
passing um vulnerabilities that you can

2380
01:28:41,360 --> 01:28:42,480
build in

2381
01:28:42,480 --> 01:28:43,360
um

2382
01:28:43,360 --> 01:28:45,199
you know in practice as i mentioned

2383
01:28:45,199 --> 01:28:47,199
these algorithms are deployed we've been

2384
01:28:47,199 --> 01:28:49,199
deploying quantum safe algorithms for

2385
01:28:49,199 --> 01:28:52,080
over three four years now

2386
01:28:52,080 --> 01:28:53,360
we see

2387
01:28:53,360 --> 01:28:56,080
that legacy systems simply do not

2388
01:28:56,080 --> 01:28:58,560
support the size of the keys for many of

2389
01:28:58,560 --> 01:29:00,719
the new schemes this is for in our

2390
01:29:00,719 --> 01:29:03,040
example i work for a large um

2391
01:29:03,040 --> 01:29:05,360
ibm large machine manufacturer our

2392
01:29:05,360 --> 01:29:07,920
largest platform cannot support

2393
01:29:07,920 --> 01:29:10,639
this even the smaller sets of keys for

2394
01:29:10,639 --> 01:29:11,600
um

2395
01:29:11,600 --> 01:29:13,360
for a lot of the algorithms so there's a

2396
01:29:13,360 --> 01:29:15,199
lot a lot of legacy out there which is

2397
01:29:15,199 --> 01:29:18,080
just gonna struggle so um

2398
01:29:18,080 --> 01:29:20,560
so and it's this aspect of getting keys

2399
01:29:20,560 --> 01:29:22,400
safely to algorithm engines which is

2400
01:29:22,400 --> 01:29:24,239
kind of not really looked at from an

2401
01:29:24,239 --> 01:29:26,159
algorithm design perspective

2402
01:29:26,159 --> 01:29:27,600
but from a secure implementation

2403
01:29:27,600 --> 01:29:29,520
perspective is really important

2404
01:29:29,520 --> 01:29:30,880
and that's where most of the problems

2405
01:29:30,880 --> 01:29:31,920
are

2406
01:29:31,920 --> 01:29:33,280
so

2407
01:29:33,280 --> 01:29:35,679
actually most of the schemes proposed

2408
01:29:35,679 --> 01:29:36,960
and this they

2409
01:29:36,960 --> 01:29:39,520
they detail compression schemes so in a

2410
01:29:39,520 --> 01:29:41,280
very unstructured way

2411
01:29:41,280 --> 01:29:42,719
um

2412
01:29:42,719 --> 01:29:44,239
and we've just found in practice that

2413
01:29:44,239 --> 01:29:47,120
these schemes are required so um

2414
01:29:47,120 --> 01:29:48,480
so we're trying to avoid a bit the

2415
01:29:48,480 --> 01:29:50,159
mistakes in in the past i understand

2416
01:29:50,159 --> 01:29:53,280
it's very compelling oid key format very

2417
01:29:53,280 --> 01:29:55,199
simple but we know that we're going to

2418
01:29:55,199 --> 01:29:57,280
have to compress keys we know that

2419
01:29:57,280 --> 01:29:58,560
they're going to be evolutions of

2420
01:29:58,560 --> 01:30:00,159
algorithms

2421
01:30:00,159 --> 01:30:02,159
and so what we're trying to do is design

2422
01:30:02,159 --> 01:30:03,920
a format that that handles that

2423
01:30:03,920 --> 01:30:06,000
complexity in the future rather than

2424
01:30:06,000 --> 01:30:08,320
take the simple option and then just add

2425
01:30:08,320 --> 01:30:10,480
then these exceptions as and when they

2426
01:30:10,480 --> 01:30:12,159
come that's a bit the problem that's

2427
01:30:12,159 --> 01:30:14,320
happened in the past with with other

2428
01:30:14,320 --> 01:30:16,400
algorithms you can go to the next slide

2429
01:30:16,400 --> 01:30:17,520
please

2430
01:30:17,520 --> 01:30:19,199
yeah would you like to take questions

2431
01:30:19,199 --> 01:30:21,679
now or by the end well however however

2432
01:30:21,679 --> 01:30:23,280
it works process-wise this is my first

2433
01:30:23,280 --> 01:30:25,679
meeting so it's your choice basically

2434
01:30:25,679 --> 01:30:26,880
i'm not going to take you now there are

2435
01:30:26,880 --> 01:30:30,400
four people in the queue oh sure

2436
01:30:31,760 --> 01:30:34,400
michael richardson here so um so you're

2437
01:30:34,400 --> 01:30:37,040
telling me that basically um

2438
01:30:37,040 --> 01:30:41,199
you if i if i if i present a certificate

2439
01:30:41,199 --> 01:30:41,920
to

2440
01:30:41,920 --> 01:30:44,239
some systems that they just blow up

2441
01:30:44,239 --> 01:30:45,840
because it's just too big for them is

2442
01:30:45,840 --> 01:30:47,199
that what you said

2443
01:30:47,199 --> 01:30:48,719
actually more on the private key side so

2444
01:30:48,719 --> 01:30:49,760
probably

2445
01:30:49,760 --> 01:30:51,520
and so some there are some compression

2446
01:30:51,520 --> 01:30:53,040
schemes for the public key but

2447
01:30:53,040 --> 01:30:54,960
absolutely yeah okay i wonder if we

2448
01:30:54,960 --> 01:30:56,560
should just start issuing

2449
01:30:56,560 --> 01:30:58,400
certificates you know with

2450
01:30:58,400 --> 01:30:59,280
some

2451
01:30:59,280 --> 01:31:01,280
bogus extension that has a megabyte of

2452
01:31:01,280 --> 01:31:04,000
random data in it just just to kind of

2453
01:31:04,000 --> 01:31:05,199
you know

2454
01:31:05,199 --> 01:31:07,199
to test out something to grease out the

2455
01:31:07,199 --> 01:31:08,880
systems and see who's going to blow up

2456
01:31:08,880 --> 01:31:10,239
and kind of

2457
01:31:10,239 --> 01:31:12,639
present some stuff like that that would

2458
01:31:12,639 --> 01:31:13,920
that would break some things

2459
01:31:13,920 --> 01:31:16,080
intentionally that's exactly what some

2460
01:31:16,080 --> 01:31:17,440
experiments have been done by certain

2461
01:31:17,440 --> 01:31:19,120
companies they have actually you know

2462
01:31:19,120 --> 01:31:20,800
just put some junk in it exactly to see

2463
01:31:20,800 --> 01:31:22,480
where things in the internet break

2464
01:31:22,480 --> 01:31:23,760
exactly

2465
01:31:23,760 --> 01:31:25,120
but that you're talking about private

2466
01:31:25,120 --> 01:31:26,800
keys and i think that you're now as i

2467
01:31:26,800 --> 01:31:28,080
understand you're now really talking

2468
01:31:28,080 --> 01:31:29,679
about about

2469
01:31:29,679 --> 01:31:31,760
hosts or systems talking to their

2470
01:31:31,760 --> 01:31:33,440
cryptographic engines their physical

2471
01:31:33,440 --> 01:31:35,280
hardware engines they can't even get the

2472
01:31:35,280 --> 01:31:37,280
private key across that interface well

2473
01:31:37,280 --> 01:31:39,040
essentially if you want safe algorithms

2474
01:31:39,040 --> 01:31:40,800
you need to get the keys safely to them

2475
01:31:40,800 --> 01:31:42,159
right and essentially so there's no

2476
01:31:42,159 --> 01:31:43,520
point having very strong algorithms

2477
01:31:43,520 --> 01:31:45,920
unless you you manage the key and those

2478
01:31:45,920 --> 01:31:47,840
interfaces which i think are somewhat

2479
01:31:47,840 --> 01:31:50,000
hardware are breaking as well as what i

2480
01:31:50,000 --> 01:31:52,080
think you said absolutely okay

2481
01:31:52,080 --> 01:31:53,840
so also lots of protocols any any

2482
01:31:53,840 --> 01:31:55,120
protocol where you need to transport

2483
01:31:55,120 --> 01:31:56,960
keys any any kind of like internal

2484
01:31:56,960 --> 01:31:59,199
framing mechanisms for key movements

2485
01:31:59,199 --> 01:32:01,600
anytime you want to use uh okay whatever

2486
01:32:01,600 --> 01:32:03,280
this is just a whole just a whole lot of

2487
01:32:03,280 --> 01:32:05,040
legacy which is going to be very

2488
01:32:05,040 --> 01:32:07,760
challenged purely with quantum safety

2489
01:32:07,760 --> 01:32:10,159
let alone hybrid related things okay

2490
01:32:10,159 --> 01:32:13,159
sean

2491
01:32:14,960 --> 01:32:17,440
okay so one of the problems that uh

2492
01:32:17,440 --> 01:32:19,040
ended up happening with compressed keys

2493
01:32:19,040 --> 01:32:21,600
before was that there was ipr

2494
01:32:21,600 --> 01:32:23,679
i assume that there is no ipr with

2495
01:32:23,679 --> 01:32:25,040
respect to any of the schemes that

2496
01:32:25,040 --> 01:32:26,960
you're proposing

2497
01:32:26,960 --> 01:32:27,679
so

2498
01:32:27,679 --> 01:32:30,239
um let's say we we're contributing to

2499
01:32:30,239 --> 01:32:32,159
some of the candidates and most of the

2500
01:32:32,159 --> 01:32:34,320
candidates certainly the ones we propose

2501
01:32:34,320 --> 01:32:36,880
to are all ipr free so it's less about

2502
01:32:36,880 --> 01:32:39,600
the compression schemes it's more about

2503
01:32:39,600 --> 01:32:42,320
marking uh or let's say the the framing

2504
01:32:42,320 --> 01:32:44,480
of keys or let's say the

2505
01:32:44,480 --> 01:32:46,800
the um you know being able to identify

2506
01:32:46,800 --> 01:32:48,639
when you have a compressed key and

2507
01:32:48,639 --> 01:32:50,480
things like this it's not not how these

2508
01:32:50,480 --> 01:32:52,159
things are compressed more how they are

2509
01:32:52,159 --> 01:32:54,080
communicated that we're concentrated on

2510
01:32:54,080 --> 01:32:56,320
but certainly what the the the key

2511
01:32:56,320 --> 01:32:58,080
compression i think that's a that's a

2512
01:32:58,080 --> 01:32:59,600
decision for nist at the end of the day

2513
01:32:59,600 --> 01:33:01,760
which um in terms of life

2514
01:33:01,760 --> 01:33:04,159
yeah so i think i think i think nist is

2515
01:33:04,159 --> 01:33:05,520
i just want to say that the last time

2516
01:33:05,520 --> 01:33:07,120
that this came out was for elliptic

2517
01:33:07,120 --> 01:33:08,719
curve stuff and one of the reasons why

2518
01:33:08,719 --> 01:33:10,000
no one would touch it was because we

2519
01:33:10,000 --> 01:33:12,159
couldn't get good terms and so i think

2520
01:33:12,159 --> 01:33:13,600
if we're going to adopt a scheme we just

2521
01:33:13,600 --> 01:33:15,199
have to make sure that we understand

2522
01:33:15,199 --> 01:33:16,800
that there is there isn't and i think

2523
01:33:16,800 --> 01:33:18,159
what you're saying is it's not my

2524
01:33:18,159 --> 01:33:19,840
problem it's whatever

2525
01:33:19,840 --> 01:33:21,360
whatever agreement this comes up with

2526
01:33:21,360 --> 01:33:23,920
the competitors and that's great thanks

2527
01:33:23,920 --> 01:33:25,280
actually what i'm saying is important to

2528
01:33:25,280 --> 01:33:27,280
be able to manage compressed keys you

2529
01:33:27,280 --> 01:33:29,120
know whether or not um which which

2530
01:33:29,120 --> 01:33:30,560
schemes and which compression techniques

2531
01:33:30,560 --> 01:33:33,360
are used that's something else

2532
01:33:33,360 --> 01:33:35,440
yeah i'm not sure this is the right way

2533
01:33:35,440 --> 01:33:38,639
to go um the most of the schemes that

2534
01:33:38,639 --> 01:33:41,120
have some compressed alternative are

2535
01:33:41,120 --> 01:33:42,400
different schemes they are not

2536
01:33:42,400 --> 01:33:44,159
compatible with the uncompressed version

2537
01:33:44,159 --> 01:33:46,000
you can sometimes do all sorts of things

2538
01:33:46,000 --> 01:33:48,080
with secret keys where you pre-compute

2539
01:33:48,080 --> 01:33:49,760
some stuff you can expand the lithium's

2540
01:33:49,760 --> 01:33:51,920
matrix but that's all on the secret key

2541
01:33:51,920 --> 01:33:53,280
side

2542
01:33:53,280 --> 01:33:54,880
and i don't see why you would need that

2543
01:33:54,880 --> 01:33:57,280
for public key representation yes so

2544
01:33:57,280 --> 01:33:58,560
there's a couple of there are a couple

2545
01:33:58,560 --> 01:33:59,600
of schemes that have public

2546
01:33:59,600 --> 01:34:01,840
decompression but this is more

2547
01:34:01,840 --> 01:34:04,000
essentially about from uh

2548
01:34:04,000 --> 01:34:05,360
more related to the private key and

2549
01:34:05,360 --> 01:34:07,199
being able to identify

2550
01:34:07,199 --> 01:34:09,840
essentially what key um yeah so it's

2551
01:34:09,840 --> 01:34:11,199
more than about the management of the

2552
01:34:11,199 --> 01:34:14,480
private keys that this is uh

2553
01:34:14,480 --> 01:34:15,840
okay

2554
01:34:15,840 --> 01:34:16,719
then

2555
01:34:16,719 --> 01:34:18,560
you also still need to be careful that

2556
01:34:18,560 --> 01:34:20,320
like uh the compressed variants of

2557
01:34:20,320 --> 01:34:22,560
rainbow i mean rainbow's dead now but

2558
01:34:22,560 --> 01:34:24,239
the compressed variants are not the same

2559
01:34:24,239 --> 01:34:26,960
scheme as the yes of course

2560
01:34:26,960 --> 01:34:28,400
but the schemes which currently look and

2561
01:34:28,400 --> 01:34:30,480
this are looking at the compressed

2562
01:34:30,480 --> 01:34:32,560
alternatives to those

2563
01:34:32,560 --> 01:34:35,120
what exception of rainbow is they are

2564
01:34:35,120 --> 01:34:37,600
just artifacts of how you can compress

2565
01:34:37,600 --> 01:34:38,719
the keys

2566
01:34:38,719 --> 01:34:40,480
in in a way that is compatible with an

2567
01:34:40,480 --> 01:34:42,159
uncompressed one so you have a trade a

2568
01:34:42,159 --> 01:34:45,679
trade-off with key expansion versus um

2569
01:34:45,679 --> 01:34:47,360
key size uh

2570
01:34:47,360 --> 01:34:50,239
and then the other thing i expect all

2571
01:34:50,239 --> 01:34:52,560
the non-uh

2572
01:34:52,560 --> 01:34:54,880
sha-3 variants to

2573
01:34:54,880 --> 01:34:56,239
be murdered by

2574
01:34:56,239 --> 01:34:58,960
nist very soon i have the understanding

2575
01:34:58,960 --> 01:35:00,400
that none of the

2576
01:35:00,400 --> 01:35:02,960
um submitters intended for any of the

2577
01:35:02,960 --> 01:35:05,840
aes or shadow variants to actually

2578
01:35:05,840 --> 01:35:07,760
get standardized

2579
01:35:07,760 --> 01:35:09,280
um there's two things one's being

2580
01:35:09,280 --> 01:35:10,719
standardized ones being used so there

2581
01:35:10,719 --> 01:35:12,159
are a lot of schemes including rainbow

2582
01:35:12,159 --> 01:35:13,840
for example was already being used but

2583
01:35:13,840 --> 01:35:15,520
and also dilithium and kaiba they are

2584
01:35:15,520 --> 01:35:17,840
used already in a number of industries

2585
01:35:17,840 --> 01:35:19,760
things this is a bit the problem

2586
01:35:19,760 --> 01:35:21,760
that you have with anything that's about

2587
01:35:21,760 --> 01:35:22,960
to be standardized because

2588
01:35:22,960 --> 01:35:24,800
standardization takes a long time they

2589
01:35:24,800 --> 01:35:26,880
still they start to be used

2590
01:35:26,880 --> 01:35:28,800
you start creating legacy

2591
01:35:28,800 --> 01:35:30,800
then in order to manage complexity you

2592
01:35:30,800 --> 01:35:32,320
you end up with standards which are very

2593
01:35:32,320 --> 01:35:35,119
um very evolve very awkwardly so what

2594
01:35:35,119 --> 01:35:36,960
we're trying to do here is let's say for

2595
01:35:36,960 --> 01:35:38,960
this aspect

2596
01:35:38,960 --> 01:35:41,119
look at we know what's coming that we

2597
01:35:41,119 --> 01:35:44,080
will need to use these compressed keys

2598
01:35:44,080 --> 01:35:46,159
which take out of the equation it's

2599
01:35:46,159 --> 01:35:47,520
really about how to manage those

2600
01:35:47,520 --> 01:35:51,280
appropriately and and safely

2601
01:35:51,360 --> 01:35:53,920
okay the management yeah one last

2602
01:35:53,920 --> 01:35:54,960
question

2603
01:35:54,960 --> 01:35:57,760
with regards to if you the symmetric

2604
01:35:57,760 --> 01:35:59,840
primitive that use inside really makes

2605
01:35:59,840 --> 01:36:01,119
obviously all the test sectors

2606
01:36:01,119 --> 01:36:02,560
difference etc so that's a different

2607
01:36:02,560 --> 01:36:03,679
algorithm

2608
01:36:03,679 --> 01:36:05,679
what is the problem with just assigning

2609
01:36:05,679 --> 01:36:08,719
more oids

2610
01:36:08,880 --> 01:36:11,520
the size the size purely in size even

2611
01:36:11,520 --> 01:36:15,199
it's it's uh so one is managing the um

2612
01:36:15,199 --> 01:36:17,679
the uh

2613
01:36:17,679 --> 01:36:20,480
what the no id actually references to

2614
01:36:20,480 --> 01:36:22,880
um the other one is then how you handle

2615
01:36:22,880 --> 01:36:26,080
and manage um non-expanded key formats

2616
01:36:26,080 --> 01:36:28,400
how you actually manage and understand

2617
01:36:28,400 --> 01:36:30,159
what you have

2618
01:36:30,159 --> 01:36:32,080
okay by the way we just want to let's

2619
01:36:32,080 --> 01:36:34,560
say reduce complexity around passing of

2620
01:36:34,560 --> 01:36:36,239
um of

2621
01:36:36,239 --> 01:36:39,520
private keys

2622
01:36:39,520 --> 01:36:40,480
uh

2623
01:36:40,480 --> 01:36:41,840
so thanks for bringing us to the group

2624
01:36:41,840 --> 01:36:44,719
this is daniel gilmore um

2625
01:36:44,719 --> 01:36:46,480
so

2626
01:36:46,480 --> 01:36:48,080
it sounds to me like this is just about

2627
01:36:48,080 --> 01:36:50,080
private keys right we're you're in this

2628
01:36:50,080 --> 01:36:51,440
presentation you are not talking about

2629
01:36:51,440 --> 01:36:53,040
trying to represent public keys at all

2630
01:36:53,040 --> 01:36:55,280
here that the main concern you have here

2631
01:36:55,280 --> 01:36:56,960
is about private key representation is

2632
01:36:56,960 --> 01:36:58,639
that right

2633
01:36:58,639 --> 01:37:00,560
exactly it's more so the focus is really

2634
01:37:00,560 --> 01:37:03,119
on managing complexity and it's really

2635
01:37:03,119 --> 01:37:05,600
uh focus exactly more on the private key

2636
01:37:05,600 --> 01:37:07,920
side of things yeah right so so yeah

2637
01:37:07,920 --> 01:37:09,360
it's useful to have that clear because

2638
01:37:09,360 --> 01:37:10,480
otherwise we're going to have people

2639
01:37:10,480 --> 01:37:12,480
going off about public keys as well okay

2640
01:37:12,480 --> 01:37:14,000
maybe an issue but we can we can tackle

2641
01:37:14,000 --> 01:37:16,320
it separately so my question for you is

2642
01:37:16,320 --> 01:37:17,520
this

2643
01:37:17,520 --> 01:37:20,639
if an implementation is choking on

2644
01:37:20,639 --> 01:37:22,719
uh

2645
01:37:22,719 --> 01:37:25,840
seek private keys that are too large

2646
01:37:25,840 --> 01:37:27,119
presumably that implementation doesn't

2647
01:37:27,119 --> 01:37:28,800
even have an implementation

2648
01:37:28,800 --> 01:37:29,760
for

2649
01:37:29,760 --> 01:37:31,119
uh

2650
01:37:31,119 --> 01:37:33,520
private key for that algorithm because

2651
01:37:33,520 --> 01:37:36,320
it can't because the key is too large

2652
01:37:36,320 --> 01:37:37,199
so

2653
01:37:37,199 --> 01:37:38,880
where is the issue

2654
01:37:38,880 --> 01:37:41,199
with just saying when you know when

2655
01:37:41,199 --> 01:37:43,040
you're ready to handle

2656
01:37:43,040 --> 01:37:44,880
keys of algorithm x

2657
01:37:44,880 --> 01:37:46,239
make sure you can handle keys of the

2658
01:37:46,239 --> 01:37:50,159
appropriate size for algorithm x

2659
01:37:53,199 --> 01:37:54,480
as long as there's an upgrade to handle

2660
01:37:54,480 --> 01:37:56,320
algorithm x presumably that upgrade you

2661
01:37:56,320 --> 01:37:58,880
also tackle the parsing structures that

2662
01:37:58,880 --> 01:38:01,440
have hard-coded limits and extend those

2663
01:38:01,440 --> 01:38:02,880
hard-coded limits

2664
01:38:02,880 --> 01:38:05,280
what why is that

2665
01:38:05,280 --> 01:38:06,719
because there's a lot of legacy it won't

2666
01:38:06,719 --> 01:38:09,040
be able to handle the the uncompressed

2667
01:38:09,040 --> 01:38:11,280
keys

2668
01:38:11,280 --> 01:38:12,320
so you're saying that there's like a

2669
01:38:12,320 --> 01:38:14,080
part you're concerned about parsing

2670
01:38:14,080 --> 01:38:19,520
layers that are uh algorithm agnostic

2671
01:38:19,520 --> 01:38:21,840
um

2672
01:38:21,920 --> 01:38:24,080
the identification and management

2673
01:38:24,080 --> 01:38:25,760
thereof so at the end of the day one of

2674
01:38:25,760 --> 01:38:28,239
the goals is is essentially to provide

2675
01:38:28,239 --> 01:38:31,199
the smoothest path for a transition to a

2676
01:38:31,199 --> 01:38:34,159
quantum safe future and that essentially

2677
01:38:34,159 --> 01:38:36,320
means um in some ways it's also the

2678
01:38:36,320 --> 01:38:37,760
widest adoption

2679
01:38:37,760 --> 01:38:40,719
and if i look on the systems that we've

2680
01:38:40,719 --> 01:38:43,679
we that we have worked on is essentially

2681
01:38:43,679 --> 01:38:46,320
there are the there are limits which

2682
01:38:46,320 --> 01:38:48,719
make it very difficult to expand certain

2683
01:38:48,719 --> 01:38:51,600
system parameters to handle

2684
01:38:51,600 --> 01:38:53,920
private keys so it means if you can't do

2685
01:38:53,920 --> 01:38:55,119
that then

2686
01:38:55,119 --> 01:38:58,800
um you are you are was maybe one um of

2687
01:38:58,800 --> 01:39:00,639
the nist alternative

2688
01:39:00,639 --> 01:39:02,719
quantum safe algorithms will be used but

2689
01:39:02,719 --> 01:39:04,000
it will prevent a

2690
01:39:04,000 --> 01:39:06,560
a lot of systems from being able to use

2691
01:39:06,560 --> 01:39:10,080
um quantum safe crypto

2692
01:39:10,080 --> 01:39:12,480
can you identify the specific parsing

2693
01:39:12,480 --> 01:39:14,960
layer uh limits that you guys have run

2694
01:39:14,960 --> 01:39:16,639
into i mean it sounds like that you're

2695
01:39:16,639 --> 01:39:18,159
talking about a parsing layer that is

2696
01:39:18,159 --> 01:39:19,600
independent of the algorithm

2697
01:39:19,600 --> 01:39:21,040
implementation

2698
01:39:21,040 --> 01:39:22,960
yeah it's less the passing layer so

2699
01:39:22,960 --> 01:39:24,560
essentially if you need to transport a

2700
01:39:24,560 --> 01:39:26,880
key to to an algorithm engine somehow i

2701
01:39:26,880 --> 01:39:29,280
mean yeah at some point you have to it's

2702
01:39:29,280 --> 01:39:32,080
it's any framing any protocol where

2703
01:39:32,080 --> 01:39:33,280
you're actually

2704
01:39:33,280 --> 01:39:35,600
moving that key essentially wrapped or

2705
01:39:35,600 --> 01:39:37,679
unwrapped or whatever it's um

2706
01:39:37,679 --> 01:39:39,360
um

2707
01:39:39,360 --> 01:39:40,560
can you identify one of the

2708
01:39:40,560 --> 01:39:41,920
implementations that has these limits

2709
01:39:41,920 --> 01:39:43,600
just so i can get a better sense of the

2710
01:39:43,600 --> 01:39:45,199
kind of limit you're talking about like

2711
01:39:45,199 --> 01:39:48,159
is this like open ssl issue is it a

2712
01:39:48,159 --> 01:39:51,199
uh nss issue

2713
01:39:51,360 --> 01:39:53,280
um it's it's anywhere where you're kind

2714
01:39:53,280 --> 01:39:55,600
of using slightly slightly more secure

2715
01:39:55,600 --> 01:39:57,280
methods when you're not just using a

2716
01:39:57,280 --> 01:40:00,639
file to save the key somewhere so um

2717
01:40:00,639 --> 01:40:01,520
um

2718
01:40:01,520 --> 01:40:03,280
yeah it's any um

2719
01:40:03,280 --> 01:40:05,760
without going to

2720
01:40:05,760 --> 01:40:07,280
maybe we can respond with a list of

2721
01:40:07,280 --> 01:40:09,679
systems that we've come across

2722
01:40:09,679 --> 01:40:11,199
that would be great

2723
01:40:11,199 --> 01:40:12,880
i think i think having a concrete list

2724
01:40:12,880 --> 01:40:14,400
to look at would would help to

2725
01:40:14,400 --> 01:40:16,320
characterize this because i i don't

2726
01:40:16,320 --> 01:40:17,440
fully understand the problem without

2727
01:40:17,440 --> 01:40:19,040
looking at some examples i think thank

2728
01:40:19,040 --> 01:40:22,040
you

2729
01:40:23,440 --> 01:40:24,320
uh

2730
01:40:24,320 --> 01:40:25,440
you said that you were worried about

2731
01:40:25,440 --> 01:40:27,119
legacy systems not being able to handle

2732
01:40:27,119 --> 01:40:28,639
these keys but

2733
01:40:28,639 --> 01:40:30,239
legacy systems aren't going to be

2734
01:40:30,239 --> 01:40:33,520
speaking a pqc algorithm anyway so why

2735
01:40:33,520 --> 01:40:35,600
why do you care that they can't get well

2736
01:40:35,600 --> 01:40:38,320
legacy platforms i mean legacy platforms

2737
01:40:38,320 --> 01:40:40,719
not systems so so essentially any

2738
01:40:40,719 --> 01:40:43,440
uh if you build platforms or you build

2739
01:40:43,440 --> 01:40:45,280
you know systems that

2740
01:40:45,280 --> 01:40:48,239
actually you can't actually um

2741
01:40:48,239 --> 01:40:49,520
manage keys

2742
01:40:49,520 --> 01:40:51,360
just but just because

2743
01:40:51,360 --> 01:40:52,159
um

2744
01:40:52,159 --> 01:40:53,920
because they're too large for the

2745
01:40:53,920 --> 01:40:56,400
parameters of of the systems and

2746
01:40:56,400 --> 01:41:00,159
the protocols you've used um

2747
01:41:00,159 --> 01:41:01,199
i'll give you an example i've got a

2748
01:41:01,199 --> 01:41:03,040
mainframe platform yeah sounds like a

2749
01:41:03,040 --> 01:41:05,280
very large platform um

2750
01:41:05,280 --> 01:41:07,440
so um there's a lot of keys you just

2751
01:41:07,440 --> 01:41:08,719
can't use just

2752
01:41:08,719 --> 01:41:09,840
because you can't transport them

2753
01:41:09,840 --> 01:41:12,320
securely they're too large outside of

2754
01:41:12,320 --> 01:41:13,760
the design characteristics so if you

2755
01:41:13,760 --> 01:41:14,639
want

2756
01:41:14,639 --> 01:41:18,800
for an existing platform or or

2757
01:41:18,800 --> 01:41:20,800
or that's a um

2758
01:41:20,800 --> 01:41:22,639
edi system or something like this where

2759
01:41:22,639 --> 01:41:24,960
you do need to transport keys around and

2760
01:41:24,960 --> 01:41:26,800
um isn't that platform gonna have to be

2761
01:41:26,800 --> 01:41:28,320
changed to support

2762
01:41:28,320 --> 01:41:29,760
well that's the point no not if you use

2763
01:41:29,760 --> 01:41:31,760
compressed keys if you use compressed

2764
01:41:31,760 --> 01:41:33,520
keys then you trade off the size of the

2765
01:41:33,520 --> 01:41:35,520
key with

2766
01:41:35,520 --> 01:41:38,080
the ability to actually uh uncompress it

2767
01:41:38,080 --> 01:41:40,480
or regenerate it

2768
01:41:40,480 --> 01:41:42,159
so it just means that you're able to a

2769
01:41:42,159 --> 01:41:44,800
lot of legacy a lot of systems where you

2770
01:41:44,800 --> 01:41:45,679
where

2771
01:41:45,679 --> 01:41:47,280
the uncompressed keys you can't fit you

2772
01:41:47,280 --> 01:41:49,760
could then you can use quantum quantum

2773
01:41:49,760 --> 01:41:52,480
safe algorithms

2774
01:41:54,480 --> 01:41:56,960
all right we have any more questions oh

2775
01:41:56,960 --> 01:41:58,560
no nobody in the queue at the moment so

2776
01:41:58,560 --> 01:41:59,840
okay

2777
01:41:59,840 --> 01:42:02,639
yeah sure sure

2778
01:42:03,440 --> 01:42:05,119
yeah so that's the goal essentially i

2779
01:42:05,119 --> 01:42:07,360
mean we've seen how difficult it is in

2780
01:42:07,360 --> 01:42:10,880
in in applications and it's really about

2781
01:42:10,880 --> 01:42:13,360
making sure that um the

2782
01:42:13,360 --> 01:42:15,119
pqc or quantum safe algorithms can be

2783
01:42:15,119 --> 01:42:16,159
used by the largest number of

2784
01:42:16,159 --> 01:42:18,960
applications and um that's a very gonna

2785
01:42:18,960 --> 01:42:20,400
mean a lot of them are going to need to

2786
01:42:20,400 --> 01:42:21,600
use

2787
01:42:21,600 --> 01:42:23,440
either schemes with very small keys and

2788
01:42:23,440 --> 01:42:26,239
there's only really one and or

2789
01:42:26,239 --> 01:42:29,199
use compressed keys um

2790
01:42:29,199 --> 01:42:31,520
the other thing is a lot of this

2791
01:42:31,520 --> 01:42:32,719
or

2792
01:42:32,719 --> 01:42:35,440
as part of this nccoe effort to sort of

2793
01:42:35,440 --> 01:42:37,360
facilitate the migration to quantum safe

2794
01:42:37,360 --> 01:42:38,400
schemes

2795
01:42:38,400 --> 01:42:39,360
um

2796
01:42:39,360 --> 01:42:40,719
if we

2797
01:42:40,719 --> 01:42:43,040
if things tend to happen sequentially

2798
01:42:43,040 --> 01:42:45,600
and in an uncontrolled way so

2799
01:42:45,600 --> 01:42:47,600
um actually the more that we kind of

2800
01:42:47,600 --> 01:42:49,040
experience what we've been doing

2801
01:42:49,040 --> 01:42:50,000
essentially

2802
01:42:50,000 --> 01:42:51,920
experimenting with interoperability and

2803
01:42:51,920 --> 01:42:53,360
understanding how to use these things in

2804
01:42:53,360 --> 01:42:55,040
real systems

2805
01:42:55,040 --> 01:42:56,480
the more we can do in parallel which is

2806
01:42:56,480 --> 01:42:58,320
why we kind of it's a bit early a lot of

2807
01:42:58,320 --> 01:43:00,000
people said why don't you wait until the

2808
01:43:00,000 --> 01:43:01,679
to the final in this selection and then

2809
01:43:01,679 --> 01:43:03,920
and then work on this and that's because

2810
01:43:03,920 --> 01:43:07,119
actually there are some things um

2811
01:43:07,119 --> 01:43:09,199
that have fed back into the the

2812
01:43:09,199 --> 01:43:11,600
different schemes so for example uh in

2813
01:43:11,600 --> 01:43:13,360
in this piece of work

2814
01:43:13,360 --> 01:43:14,800
um

2815
01:43:14,800 --> 01:43:15,840
so

2816
01:43:15,840 --> 01:43:18,639
it's it's really just about make

2817
01:43:18,639 --> 01:43:20,719
widening the aperture for for four

2818
01:43:20,719 --> 01:43:23,040
systems to become quantum safe actually

2819
01:43:23,040 --> 01:43:24,480
um

2820
01:43:24,480 --> 01:43:26,639
the approach is really just to think

2821
01:43:26,639 --> 01:43:29,119
about the complexity ahead of time not

2822
01:43:29,119 --> 01:43:30,880
go for the easy case

2823
01:43:30,880 --> 01:43:33,360
and then add stuff on when when things

2824
01:43:33,360 --> 01:43:34,400
don't fit

2825
01:43:34,400 --> 01:43:35,760
um

2826
01:43:35,760 --> 01:43:36,880
the

2827
01:43:36,880 --> 01:43:38,880
um

2828
01:43:38,880 --> 01:43:41,199
so it's really about um

2829
01:43:41,199 --> 01:43:43,600
also there are various ways to actually

2830
01:43:43,600 --> 01:43:45,199
um

2831
01:43:45,199 --> 01:43:47,360
to come up with oids for

2832
01:43:47,360 --> 01:43:48,239
uh

2833
01:43:48,239 --> 01:43:51,679
so how you create oids so so in terms of

2834
01:43:51,679 --> 01:43:53,440
you know whether the whole parameter set

2835
01:43:53,440 --> 01:43:55,600
gets represented by a key or not i mean

2836
01:43:55,600 --> 01:43:56,639
with these

2837
01:43:56,639 --> 01:43:58,480
uh with with certain of the lattice

2838
01:43:58,480 --> 01:44:00,159
schemes they are that they are matrix so

2839
01:44:00,159 --> 01:44:01,920
you can actually put the matrix sizes in

2840
01:44:01,920 --> 01:44:05,440
the in the oids and things to simplify

2841
01:44:05,440 --> 01:44:06,800
um

2842
01:44:06,800 --> 01:44:09,600
essentially just to simplify stuff um

2843
01:44:09,600 --> 01:44:12,719
and then um the so this is the

2844
01:44:12,719 --> 01:44:15,600
identification algorithm approach

2845
01:44:15,600 --> 01:44:18,080
and then the high level um

2846
01:44:18,080 --> 01:44:20,320
just the high level api considerations

2847
01:44:20,320 --> 01:44:21,520
essentially

2848
01:44:21,520 --> 01:44:23,520
the optional choices recommendations for

2849
01:44:23,520 --> 01:44:25,280
when you would want to use a compressed

2850
01:44:25,280 --> 01:44:27,199
key format and when when when not what

2851
01:44:27,199 --> 01:44:29,360
the trade-offs are stuff like this so so

2852
01:44:29,360 --> 01:44:32,239
generally a kind of like a guideline for

2853
01:44:32,239 --> 01:44:33,280
um

2854
01:44:33,280 --> 01:44:35,920
the the usage of of of private keys in

2855
01:44:35,920 --> 01:44:38,239
um in

2856
01:44:38,239 --> 01:44:40,719
in in a kind of a future-proof way for

2857
01:44:40,719 --> 01:44:45,119
for for next generation um algorithms

2858
01:44:46,080 --> 01:44:49,840
go to the next slide please

2859
01:44:50,159 --> 01:44:52,480
i think this just kind of like says how

2860
01:44:52,480 --> 01:44:55,040
or suggests how we think we can arrive

2861
01:44:55,040 --> 01:44:56,880
at such a scheme so it's kind of whether

2862
01:44:56,880 --> 01:44:59,679
this is in informatory or whatever

2863
01:44:59,679 --> 01:45:01,280
just i think um

2864
01:45:01,280 --> 01:45:03,040
it's not something that that there's a

2865
01:45:03,040 --> 01:45:04,719
got a lot of wide

2866
01:45:04,719 --> 01:45:07,199
uh visibility just because

2867
01:45:07,199 --> 01:45:08,719
a lot of companies have been waiting for

2868
01:45:08,719 --> 01:45:10,639
some fine on this standards essentially

2869
01:45:10,639 --> 01:45:11,360
so

2870
01:45:11,360 --> 01:45:13,360
the problems around private keys

2871
01:45:13,360 --> 01:45:14,560
um

2872
01:45:14,560 --> 01:45:16,320
this thing with interoperability and

2873
01:45:16,320 --> 01:45:18,400
stuff so we've already had some new

2874
01:45:18,400 --> 01:45:20,159
numerous interoperability challenges

2875
01:45:20,159 --> 01:45:21,119
because

2876
01:45:21,119 --> 01:45:22,719
as algorithm evolves obviously the

2877
01:45:22,719 --> 01:45:24,239
private key formats evolve and if you

2878
01:45:24,239 --> 01:45:25,520
can't manage

2879
01:45:25,520 --> 01:45:27,840
the transition so so say we have to

2880
01:45:27,840 --> 01:45:29,840
tweak a parameter because of a security

2881
01:45:29,840 --> 01:45:32,400
breakthrough for example in rainbow

2882
01:45:32,400 --> 01:45:34,719
then we we have to sort of tweak the

2883
01:45:34,719 --> 01:45:36,960
keys uh the algorithm a bit which means

2884
01:45:36,960 --> 01:45:38,400
the keys change

2885
01:45:38,400 --> 01:45:39,199
so

2886
01:45:39,199 --> 01:45:41,280
yeah in some systems if you're using the

2887
01:45:41,280 --> 01:45:44,080
older keys you might want the ability to

2888
01:45:44,080 --> 01:45:46,639
migrate to the using the new algorithm

2889
01:45:46,639 --> 01:45:48,480
but with the old key that's that's very

2890
01:45:48,480 --> 01:45:49,920
difficult it's very messy and

2891
01:45:49,920 --> 01:45:51,199
complicated

2892
01:45:51,199 --> 01:45:53,119
if it's just an in

2893
01:45:53,119 --> 01:45:55,440
an implicit serialized blob

2894
01:45:55,440 --> 01:45:56,560
um

2895
01:45:56,560 --> 01:45:58,239
we have shared this with the

2896
01:45:58,239 --> 01:46:00,800
cryptographic community we have um

2897
01:46:00,800 --> 01:46:02,639
received feedback from a lot of the ski

2898
01:46:02,639 --> 01:46:05,520
mortars we are ourselves authors of some

2899
01:46:05,520 --> 01:46:06,719
schemes

2900
01:46:06,719 --> 01:46:07,679
um

2901
01:46:07,679 --> 01:46:09,679
and the approach has already um

2902
01:46:09,679 --> 01:46:12,080
identified a number of challenges or

2903
01:46:12,080 --> 01:46:13,360
caused actually some of the

2904
01:46:13,360 --> 01:46:14,800
specifications to be updated because

2905
01:46:14,800 --> 01:46:16,400
they weren't particularly clear

2906
01:46:16,400 --> 01:46:19,760
in um in in in the formats of private

2907
01:46:19,760 --> 01:46:21,280
keys so

2908
01:46:21,280 --> 01:46:22,880
it's it's already a couple of years old

2909
01:46:22,880 --> 01:46:24,960
this this work and

2910
01:46:24,960 --> 01:46:27,360
i think we're just looking for the best

2911
01:46:27,360 --> 01:46:28,239
uh

2912
01:46:28,239 --> 01:46:30,480
place to give it to to sort of help help

2913
01:46:30,480 --> 01:46:32,560
the community with awareness in this

2914
01:46:32,560 --> 01:46:34,880
area

2915
01:46:35,280 --> 01:46:39,040
um i think next slide please

2916
01:46:39,440 --> 01:46:41,760
and so um in terms of

2917
01:46:41,760 --> 01:46:43,840
what if you need a structure to be able

2918
01:46:43,840 --> 01:46:46,000
to manage things like uncompressed and

2919
01:46:46,000 --> 01:46:47,520
uncompressed it's

2920
01:46:47,520 --> 01:46:49,199
what does that structure look like what

2921
01:46:49,199 --> 01:46:52,239
what are the trade-offs when it comes to

2922
01:46:52,239 --> 01:46:54,400
complexity in passing obviously we want

2923
01:46:54,400 --> 01:46:56,159
anything that

2924
01:46:56,159 --> 01:46:58,239
needs to be specified needs to reduce

2925
01:46:58,239 --> 01:47:01,040
any uh potential vulnerabilities

2926
01:47:01,040 --> 01:47:02,159
um

2927
01:47:02,159 --> 01:47:03,920
so that's a debate because there's many

2928
01:47:03,920 --> 01:47:06,400
ways to do that um there is complexity

2929
01:47:06,400 --> 01:47:07,600
it's just a question at the end of the

2930
01:47:07,600 --> 01:47:09,679
day where you want to manage it

2931
01:47:09,679 --> 01:47:11,440
um

2932
01:47:11,440 --> 01:47:13,679
you can't ignore it

2933
01:47:13,679 --> 01:47:15,440
it's a lot of alignment with other

2934
01:47:15,440 --> 01:47:18,000
activities

2935
01:47:18,000 --> 01:47:19,280
the

2936
01:47:19,280 --> 01:47:21,040
whole set of separate questions around

2937
01:47:21,040 --> 01:47:23,360
hybrid which just amplifies the problem

2938
01:47:23,360 --> 01:47:24,560
essentially

2939
01:47:24,560 --> 01:47:26,000
um

2940
01:47:26,000 --> 01:47:27,760
um

2941
01:47:27,760 --> 01:47:29,840
yeah and then um

2942
01:47:29,840 --> 01:47:31,840
there's things like as i mentioned scope

2943
01:47:31,840 --> 01:47:34,159
adjustment as soon as we've we've

2944
01:47:34,159 --> 01:47:36,159
originally we created a document for all

2945
01:47:36,159 --> 01:47:38,000
of the nist round three finalists and

2946
01:47:38,000 --> 01:47:39,679
all the alternatives

2947
01:47:39,679 --> 01:47:41,040
and um

2948
01:47:41,040 --> 01:47:43,040
happy to debate what scope or what what

2949
01:47:43,040 --> 01:47:45,199
else should be in there in terms of

2950
01:47:45,199 --> 01:47:47,760
there will likely be um schemes which

2951
01:47:47,760 --> 01:47:49,600
drop out um

2952
01:47:49,600 --> 01:47:51,520
when things are announced next week

2953
01:47:51,520 --> 01:47:53,280
there will be alternate schemes brought

2954
01:47:53,280 --> 01:47:56,080
forward for round four so

2955
01:47:56,080 --> 01:47:57,040
um

2956
01:47:57,040 --> 01:47:59,119
all things are happy to discuss what

2957
01:47:59,119 --> 01:48:01,600
makes sense what what what best

2958
01:48:01,600 --> 01:48:03,760
serves industry in terms of

2959
01:48:03,760 --> 01:48:06,000
having some clarity going forward about

2960
01:48:06,000 --> 01:48:08,639
how how keys should be managed private

2961
01:48:08,639 --> 01:48:12,159
keys private keys should be managed

2962
01:48:12,400 --> 01:48:14,400
that was all i wanted to say i think

2963
01:48:14,400 --> 01:48:17,960
that was the last slide

2964
01:48:20,639 --> 01:48:23,920
and let's see as a question i guess

2965
01:48:23,920 --> 01:48:25,920
i think uh i'm in the key here this is

2966
01:48:25,920 --> 01:48:27,199
daniel

2967
01:48:27,199 --> 01:48:28,239
um

2968
01:48:28,239 --> 01:48:30,480
so uh i had one other question that i

2969
01:48:30,480 --> 01:48:32,159
think wasn't actually covered here which

2970
01:48:32,159 --> 01:48:34,000
is whether you are looking at

2971
01:48:34,000 --> 01:48:37,600
stateful signature schemes as well

2972
01:48:37,760 --> 01:48:39,280
it seems to me that stateful signature

2973
01:48:39,280 --> 01:48:42,080
schemes would require even more

2974
01:48:42,080 --> 01:48:44,480
infrastructural overhaul

2975
01:48:44,480 --> 01:48:47,280
than just expanding key fields uh key

2976
01:48:47,280 --> 01:48:48,960
sizes

2977
01:48:48,960 --> 01:48:50,719
right are are we excluding stateful

2978
01:48:50,719 --> 01:48:52,880
schemes from this because if staples are

2979
01:48:52,880 --> 01:48:53,920
included then it seems like there's

2980
01:48:53,920 --> 01:48:55,760
gonna whatever

2981
01:48:55,760 --> 01:48:58,000
transport uh

2982
01:48:58,000 --> 01:48:59,679
uh you know

2983
01:48:59,679 --> 01:49:01,440
plug-in mechanisms we're talking about

2984
01:49:01,440 --> 01:49:03,119
are going to need an overhaul anyway

2985
01:49:03,119 --> 01:49:04,639
right

2986
01:49:04,639 --> 01:49:06,400
that's correct that's a scope question

2987
01:49:06,400 --> 01:49:08,800
so again that's up for up for debate or

2988
01:49:08,800 --> 01:49:11,520
discussion uh it's um there are a lot of

2989
01:49:11,520 --> 01:49:13,760
complexities because of you know the

2990
01:49:13,760 --> 01:49:16,239
feedback mechanism when keys are used uh

2991
01:49:16,239 --> 01:49:18,880
you're absolutely right um it is another

2992
01:49:18,880 --> 01:49:21,199
layer of com complexity state we're

2993
01:49:21,199 --> 01:49:22,880
using stateful um

2994
01:49:22,880 --> 01:49:25,360
um hash based signatures but

2995
01:49:25,360 --> 01:49:27,440
really open to whether if they should be

2996
01:49:27,440 --> 01:49:29,760
in here or not it's kind of uh so so my

2997
01:49:29,760 --> 01:49:31,920
observation is just that if you're gonna

2998
01:49:31,920 --> 01:49:34,800
be dealing with a system overhaul for

2999
01:49:34,800 --> 01:49:36,560
stateful signatures

3000
01:49:36,560 --> 01:49:38,560
then surely that happens at the same

3001
01:49:38,560 --> 01:49:42,880
layer that widening the field for

3002
01:49:42,880 --> 01:49:44,880
secret keys or private keys would be

3003
01:49:44,880 --> 01:49:45,920
done

3004
01:49:45,920 --> 01:49:48,880
and this strikes me as injecting a fair

3005
01:49:48,880 --> 01:49:51,040
amount of complexity into the overall

3006
01:49:51,040 --> 01:49:53,520
interoperable ecosystem for the sake of

3007
01:49:53,520 --> 01:49:55,199
not touching a few

3008
01:49:55,199 --> 01:49:58,159
uh uh implementation layers

3009
01:49:58,159 --> 01:49:59,040
um

3010
01:49:59,040 --> 01:50:01,040
just to widen to widen the width of

3011
01:50:01,040 --> 01:50:02,880
whatever you know wherever those limits

3012
01:50:02,880 --> 01:50:04,480
happen to be and if you're going to have

3013
01:50:04,480 --> 01:50:06,000
to why you know tamper with those

3014
01:50:06,000 --> 01:50:07,599
infrastructure layers to handle stateful

3015
01:50:07,599 --> 01:50:08,800
keys as well

3016
01:50:08,800 --> 01:50:09,679
then

3017
01:50:09,679 --> 01:50:11,840
i i would prefer to have less

3018
01:50:11,840 --> 01:50:14,000
complexity in the interop part of the

3019
01:50:14,000 --> 01:50:16,320
systems that's just my observation

3020
01:50:16,320 --> 01:50:19,040
yeah yes yeah complexity will come like

3021
01:50:19,040 --> 01:50:20,960
i said the aim is is to manage it you

3022
01:50:20,960 --> 01:50:22,719
can't ignore it and it's a very good

3023
01:50:22,719 --> 01:50:24,639
point with the stateful hash

3024
01:50:24,639 --> 01:50:26,719
it because this is

3025
01:50:26,719 --> 01:50:27,840
um

3026
01:50:27,840 --> 01:50:30,000
this adds a really very different level

3027
01:50:30,000 --> 01:50:32,080
of complexity so this again is a scope

3028
01:50:32,080 --> 01:50:34,400
thing very very happy to sort of um have

3029
01:50:34,400 --> 01:50:36,320
that debate what what you think makes

3030
01:50:36,320 --> 01:50:37,520
sense but

3031
01:50:37,520 --> 01:50:39,599
you will not get away from complexity

3032
01:50:39,599 --> 01:50:42,239
because systems will need compressed

3033
01:50:42,239 --> 01:50:44,480
keys it's really that simple

3034
01:50:44,480 --> 01:50:45,920
question is when you when you when you

3035
01:50:45,920 --> 01:50:47,599
face the problem

3036
01:50:47,599 --> 01:50:49,199
whether you're trying to manage

3037
01:50:49,199 --> 01:50:51,520
um manage it up front how it should

3038
01:50:51,520 --> 01:50:54,400
evolve or or you kind of evolve as as

3039
01:50:54,400 --> 01:50:56,000
these things come up that's all it is

3040
01:50:56,000 --> 01:50:58,239
that discussion

3041
01:50:58,239 --> 01:51:00,639
okay julian

3042
01:51:00,639 --> 01:51:03,520
yes uh hello everybody so maybe that's

3043
01:51:03,520 --> 01:51:06,639
my first attendance to the meeting so

3044
01:51:06,639 --> 01:51:09,360
hello everybody i'm julian pratt i'm

3045
01:51:09,360 --> 01:51:11,040
working for

3046
01:51:11,040 --> 01:51:14,000
kryptonite security so dealing mainly

3047
01:51:14,000 --> 01:51:14,960
with

3048
01:51:14,960 --> 01:51:16,880
quantum safe

3049
01:51:16,880 --> 01:51:21,360
algorithms and my question is about um

3050
01:51:21,360 --> 01:51:23,119
the opportunity of

3051
01:51:23,119 --> 01:51:24,320
defining

3052
01:51:24,320 --> 01:51:25,840
all the

3053
01:51:25,840 --> 01:51:28,080
compression formats

3054
01:51:28,080 --> 01:51:30,639
because i get i think that

3055
01:51:30,639 --> 01:51:34,320
there are as many compression as there

3056
01:51:34,320 --> 01:51:35,199
are

3057
01:51:35,199 --> 01:51:36,880
implementations

3058
01:51:36,880 --> 01:51:37,920
so

3059
01:51:37,920 --> 01:51:39,920
isn't it a little bit

3060
01:51:39,920 --> 01:51:43,199
tricky to try to be exhaustive and to

3061
01:51:43,199 --> 01:51:45,920
define the parameters

3062
01:51:45,920 --> 01:51:47,199
well as you

3063
01:51:47,199 --> 01:51:49,840
made in your draft rfc i mean with many

3064
01:51:49,840 --> 01:51:51,360
details uh

3065
01:51:51,360 --> 01:51:53,440
because i think that there will be more

3066
01:51:53,440 --> 01:51:55,599
tricks that will come later

3067
01:51:55,599 --> 01:51:57,840
and i think it's more a kind of

3068
01:51:57,840 --> 01:51:59,920
the work of nice to define the key

3069
01:51:59,920 --> 01:52:03,440
format than our work i guess

3070
01:52:03,440 --> 01:52:05,119
no actually we spoke to this and they

3071
01:52:05,119 --> 01:52:08,559
suggested here um

3072
01:52:09,460 --> 01:52:12,080
[Laughter]

3073
01:52:12,080 --> 01:52:14,400
yeah but it's again a scope thing so we

3074
01:52:14,400 --> 01:52:16,480
also believe that

3075
01:52:16,480 --> 01:52:18,719
compression mechanisms parameters will

3076
01:52:18,719 --> 01:52:20,239
evolve so how are you going to manage

3077
01:52:20,239 --> 01:52:22,000
that you just

3078
01:52:22,000 --> 01:52:23,520
at the end of the day with that with a

3079
01:52:23,520 --> 01:52:25,840
million oids and and

3080
01:52:25,840 --> 01:52:28,719
sort of a million different um

3081
01:52:28,719 --> 01:52:30,480
specifications to go and look at that's

3082
01:52:30,480 --> 01:52:31,760
one way of doing it but if you don't

3083
01:52:31,760 --> 01:52:33,040
think it's a good way

3084
01:52:33,040 --> 01:52:34,400
yeah so you've got to start somewhere

3085
01:52:34,400 --> 01:52:36,320
it's just again so just how how you want

3086
01:52:36,320 --> 01:52:38,320
to manage the complexity going forward

3087
01:52:38,320 --> 01:52:39,920
for something that is complex just

3088
01:52:39,920 --> 01:52:43,199
because things are much larger things um

3089
01:52:43,199 --> 01:52:45,760
are evolving you know that's how it's

3090
01:52:45,760 --> 01:52:47,520
just an attempt to help

3091
01:52:47,520 --> 01:52:50,480
um manage that journey going forward and

3092
01:52:50,480 --> 01:52:52,000
what you're talking about is scope so in

3093
01:52:52,000 --> 01:52:54,080
terms of when things change what to do

3094
01:52:54,080 --> 01:52:56,000
when things change i mean the point is

3095
01:52:56,000 --> 01:52:57,520
that round two algorithms around three

3096
01:52:57,520 --> 01:52:58,400
algorithms

3097
01:52:58,400 --> 01:53:00,560
are already in the field and being used

3098
01:53:00,560 --> 01:53:02,960
so so it's kind of these things already

3099
01:53:02,960 --> 01:53:05,040
need to be managed by the organizations

3100
01:53:05,040 --> 01:53:07,599
that have rolled these out so

3101
01:53:07,599 --> 01:53:10,560
um then comes along a a kind of the nist

3102
01:53:10,560 --> 01:53:14,080
standard then they'll be probably uh

3103
01:53:14,080 --> 01:53:15,840
i suspect there'll be some changes in

3104
01:53:15,840 --> 01:53:17,520
the parameters so that'll be another one

3105
01:53:17,520 --> 01:53:19,599
and it's kind of and i suspect after

3106
01:53:19,599 --> 01:53:22,000
that all you need is a is something like

3107
01:53:22,000 --> 01:53:24,000
a breakthrough on rainbow where the

3108
01:53:24,000 --> 01:53:24,840
lower

3109
01:53:24,840 --> 01:53:26,560
parameter

3110
01:53:26,560 --> 01:53:28,639
lower strength algorithms get broken and

3111
01:53:28,639 --> 01:53:30,239
then you need to ratchet things up so

3112
01:53:30,239 --> 01:53:32,880
they'll change and that's kind of um

3113
01:53:32,880 --> 01:53:34,560
just gonna just gonna amp

3114
01:53:34,560 --> 01:53:36,239
unless you manage it it's gonna be

3115
01:53:36,239 --> 01:53:37,840
difficult that's all i think we're

3116
01:53:37,840 --> 01:53:41,159
trying to communicate

3117
01:53:41,599 --> 01:53:43,599
okay uh scott

3118
01:53:43,599 --> 01:53:46,400
uh okay okay uh about stateful this is

3119
01:53:46,400 --> 01:53:49,199
scott floor uh about stateful base uh uh

3120
01:53:49,199 --> 01:53:51,840
is a moving key uh private keys for

3121
01:53:51,840 --> 01:53:54,719
stateful based signatures uh that

3122
01:53:54,719 --> 01:53:57,119
requires a and a whole bunch of other

3123
01:53:57,119 --> 01:53:59,280
problems which need be addressed

3124
01:53:59,280 --> 01:54:01,840
i believe this is way out of scope for

3125
01:54:01,840 --> 01:54:04,400
this draft it would actually

3126
01:54:04,400 --> 01:54:06,080
somebody would have to sit down and work

3127
01:54:06,080 --> 01:54:09,760
out all those issues uh separately

3128
01:54:09,760 --> 01:54:11,920
totally independent work thank you

3129
01:54:11,920 --> 01:54:14,480
yeah i i believe you you need a protocol

3130
01:54:14,480 --> 01:54:16,159
you need to define protocols to manage

3131
01:54:16,159 --> 01:54:18,239
stateful have signatures properly and

3132
01:54:18,239 --> 01:54:20,719
securely and that is not really what

3133
01:54:20,719 --> 01:54:22,639
that is a different scope than that at

3134
01:54:22,639 --> 01:54:25,040
least the simple cases for the um for

3135
01:54:25,040 --> 01:54:26,400
for the stateless themes we're looking

3136
01:54:26,400 --> 01:54:30,799
at i i agree but um

3137
01:54:32,159 --> 01:54:35,199
okay i i'm closed the queue so

3138
01:54:35,199 --> 01:54:38,080
we're going to wrap up this

3139
01:54:38,080 --> 01:54:39,440
presentation

3140
01:54:39,440 --> 01:54:42,320
continue the discussion on the mail list

3141
01:54:42,320 --> 01:54:44,239
and

3142
01:54:44,239 --> 01:54:47,280
try and squeeze in one more

3143
01:54:47,280 --> 01:54:49,840
presentation in the remaining five

3144
01:54:49,840 --> 01:54:51,599
minutes

3145
01:54:51,599 --> 01:54:53,520
which is sean who's going to talk about

3146
01:54:53,520 --> 01:54:56,400
how to put post quantum

3147
01:54:56,400 --> 01:54:57,760
keys

3148
01:54:57,760 --> 01:54:58,960
into

3149
01:54:58,960 --> 01:55:00,320
certificates

3150
01:55:00,320 --> 01:55:02,000
the

3151
01:55:02,000 --> 01:55:04,719
it's very clear to me at this point that

3152
01:55:04,719 --> 01:55:06,639
uh we're not going to get any further in

3153
01:55:06,639 --> 01:55:09,760
the agenda and we'll have to schedule a

3154
01:55:09,760 --> 01:55:11,360
virtual interim

3155
01:55:11,360 --> 01:55:13,840
so tim and i will uh

3156
01:55:13,840 --> 01:55:16,080
put together some kind of a

3157
01:55:16,080 --> 01:55:19,119
a poll to figure out when to do that

3158
01:55:19,119 --> 01:55:21,760
and um

3159
01:55:21,760 --> 01:55:24,400
sean over to you so

3160
01:55:24,400 --> 01:55:25,599
all right so hey so this is an

3161
01:55:25,599 --> 01:55:27,119
individual draft that i'm requesting the

3162
01:55:27,119 --> 01:55:29,360
working group to adopt there may be one

3163
01:55:29,360 --> 01:55:30,719
or more of these because this is

3164
01:55:30,719 --> 01:55:34,000
specifying the algorithms for

3165
01:55:34,000 --> 01:55:37,520
our sorry the an rfc 5480 like our uh

3166
01:55:37,520 --> 01:55:39,040
internet draft that hopefully will move

3167
01:55:39,040 --> 01:55:39,840
to

3168
01:55:39,840 --> 01:55:43,280
rc status which specifies how to put um

3169
01:55:43,280 --> 01:55:46,400
post quantum uh chem certificates

3170
01:55:46,400 --> 01:55:47,280
uh

3171
01:55:47,280 --> 01:55:51,040
keys in certificates next

3172
01:55:55,679 --> 01:55:58,080
and so what's in this right basically

3173
01:55:58,080 --> 01:56:00,320
just it's actually pretty short um

3174
01:56:00,320 --> 01:56:01,599
there's not a whole lot in there because

3175
01:56:01,599 --> 01:56:04,080
basically all it's specifying for the pq

3176
01:56:04,080 --> 01:56:04,960
kim

3177
01:56:04,960 --> 01:56:07,280
stuff is the format for the subject

3178
01:56:07,280 --> 01:56:09,760
public key so it says you know what oids

3179
01:56:09,760 --> 01:56:10,719
are we're going to put in there we're

3180
01:56:10,719 --> 01:56:12,000
not defining any we're going to take

3181
01:56:12,000 --> 01:56:14,639
what this gives us parameters none we're

3182
01:56:14,639 --> 01:56:16,239
just going to use an oid to specify

3183
01:56:16,239 --> 01:56:18,159
whatever the two security levels are

3184
01:56:18,159 --> 01:56:20,080
leave it at that we're trying to learn

3185
01:56:20,080 --> 01:56:22,639
from the complexity that was um i think

3186
01:56:22,639 --> 01:56:23,920
hampered the deployment of elliptic

3187
01:56:23,920 --> 01:56:25,679
curve with all the options that we had

3188
01:56:25,679 --> 01:56:28,080
we're just trying to keep it simple um

3189
01:56:28,080 --> 01:56:30,400
the key format just a bit string again

3190
01:56:30,400 --> 01:56:32,639
if you remember the elliptic curve had

3191
01:56:32,639 --> 01:56:35,280
the first byte had some weird values to

3192
01:56:35,280 --> 01:56:36,800
tell whether it was compressed or hybrid

3193
01:56:36,800 --> 01:56:39,040
or whatever we're just gonna not expose

3194
01:56:39,040 --> 01:56:40,880
that let the crypto

3195
01:56:40,880 --> 01:56:42,560
let the crypto standard specify that and

3196
01:56:42,560 --> 01:56:45,440
let the crypto engine deal with it um

3197
01:56:45,440 --> 01:56:47,599
key usages just set one it's only one

3198
01:56:47,599 --> 01:56:48,880
that really applies

3199
01:56:48,880 --> 01:56:50,719
uh get rid of everything else and again

3200
01:56:50,719 --> 01:56:53,040
in this in this format this is uh this

3201
01:56:53,040 --> 01:56:56,400
is the one key one certificate option

3202
01:56:56,400 --> 01:56:58,719
next

3203
01:56:58,880 --> 01:57:00,880
uh we got a couple of questions whether

3204
01:57:00,880 --> 01:57:03,119
to do one or all when i was writing this

3205
01:57:03,119 --> 01:57:04,400
the idea was that we were going to put

3206
01:57:04,400 --> 01:57:06,080
all the pq chem candidates and then the

3207
01:57:06,080 --> 01:57:07,280
last time we talked it was like well

3208
01:57:07,280 --> 01:57:08,639
what about all the signature candidates

3209
01:57:08,639 --> 01:57:09,520
too

3210
01:57:09,520 --> 01:57:11,360
panos asked me he's now one of my

3211
01:57:11,360 --> 01:57:13,040
co-authors i guess that's something else

3212
01:57:13,040 --> 01:57:15,119
i should mention is that uh i got

3213
01:57:15,119 --> 01:57:16,639
co-authors that actually implement stuff

3214
01:57:16,639 --> 01:57:19,280
so it's not just me writing it so um

3215
01:57:19,280 --> 01:57:23,520
panos and uh jake from aws and baz from

3216
01:57:23,520 --> 01:57:26,239
cloudflare to uh look at this stuff um

3217
01:57:26,239 --> 01:57:27,520
so we i

3218
01:57:27,520 --> 01:57:28,800
we could put all of them in there we

3219
01:57:28,800 --> 01:57:30,719
could put one and panos is like why did

3220
01:57:30,719 --> 01:57:32,560
you do that and i said well that's kind

3221
01:57:32,560 --> 01:57:34,880
of what we did and like one stop shop is

3222
01:57:34,880 --> 01:57:36,800
really nice and but that's not really

3223
01:57:36,800 --> 01:57:39,040
the the strongest of recommendations so

3224
01:57:39,040 --> 01:57:40,239
i think we can kind of take it to the

3225
01:57:40,239 --> 01:57:41,679
list to decide whether we want to have

3226
01:57:41,679 --> 01:57:44,320
one draft with all of it or multiple

3227
01:57:44,320 --> 01:57:45,440
drafts that would allow things to

3228
01:57:45,440 --> 01:57:46,960
progress differently panos has a bunch

3229
01:57:46,960 --> 01:57:48,320
of reasons for why we might want to

3230
01:57:48,320 --> 01:57:50,639
split them so right now it just has one

3231
01:57:50,639 --> 01:57:52,000
and luckily missed hopefully he's going

3232
01:57:52,000 --> 01:57:53,520
to pick next week or by the end of next

3233
01:57:53,520 --> 01:57:54,960
week and we can just rev a version and

3234
01:57:54,960 --> 01:57:56,400
put put some

3235
01:57:56,400 --> 01:57:58,960
values quote unquote in there

3236
01:57:58,960 --> 01:58:01,679
and we want to prohibit some key usages

3237
01:58:01,679 --> 01:58:02,639
that's it

3238
01:58:02,639 --> 01:58:04,960
next

3239
01:58:05,679 --> 01:58:09,760
next i guess i double up the slides

3240
01:58:09,840 --> 01:58:12,159
what do we want working group adoption

3241
01:58:12,159 --> 01:58:14,400
thank you

3242
01:58:14,400 --> 01:58:16,639
i know that was super fast hopefully

3243
01:58:16,639 --> 01:58:18,800
deb got some of that

3244
01:58:18,800 --> 01:58:20,560
uh so um

3245
01:58:20,560 --> 01:58:24,000
i'm glad to to hear the use one away to

3246
01:58:24,000 --> 01:58:26,880
define the algorithm and parameter set

3247
01:58:26,880 --> 01:58:29,599
uh and then just put an octet string

3248
01:58:29,599 --> 01:58:31,520
with the key in it that

3249
01:58:31,520 --> 01:58:34,639
seems straightforward and

3250
01:58:34,639 --> 01:58:37,599
is going to eliminate a lot of the

3251
01:58:37,599 --> 01:58:40,320
silliness that we had um

3252
01:58:40,320 --> 01:58:42,239
with you know

3253
01:58:42,239 --> 01:58:46,800
signed bits for dsa and so on um

3254
01:58:46,800 --> 01:58:49,440
this this i think is a good good thing

3255
01:58:49,440 --> 01:58:51,040
um

3256
01:58:51,040 --> 01:58:54,800
mike you have uh some comments

3257
01:59:01,199 --> 01:59:03,839
mike

3258
01:59:16,719 --> 01:59:19,520
we're not hearing you

3259
01:59:28,840 --> 01:59:32,159
mike still not hearing you mike

3260
01:59:32,159 --> 01:59:33,840
all right so let's go to panos and see

3261
01:59:33,840 --> 01:59:35,599
if mike can figure out his microphone

3262
01:59:35,599 --> 01:59:37,199
problems

3263
01:59:37,199 --> 01:59:38,159
yeah

3264
01:59:38,159 --> 01:59:39,599
can you hear me okay

3265
01:59:39,599 --> 01:59:40,800
yep

3266
01:59:40,800 --> 01:59:43,199
i just wanted to make the the point that

3267
01:59:43,199 --> 01:59:44,560
you know for

3268
01:59:44,560 --> 01:59:47,360
for one scheme per draft

3269
01:59:47,360 --> 01:59:48,639
because i think you know it's easier for

3270
01:59:48,639 --> 01:59:50,639
an implementer to follow and

3271
01:59:50,639 --> 01:59:52,639
comply you know it's easier to review in

3272
01:59:52,639 --> 01:59:54,159
the in the list

3273
01:59:54,159 --> 01:59:56,159
and also you know camps and signatures

3274
01:59:56,159 --> 01:59:58,639
have different uses right so probably

3275
01:59:58,639 --> 02:00:00,560
it's cleaner to have them separate

3276
02:00:00,560 --> 02:00:04,159
that these were my basic arguments for

3277
02:00:04,159 --> 02:00:07,360
cleaner one one draft for cam one draft

3278
02:00:07,360 --> 02:00:09,440
for signatures

3279
02:00:09,440 --> 02:00:10,639
thanks

3280
02:00:10,639 --> 02:00:13,119
okay mike we're out of time is did your

3281
02:00:13,119 --> 02:00:15,920
does your mic work

3282
02:00:19,199 --> 02:00:22,000
not hearing you

3283
02:00:22,320 --> 02:00:24,400
i should say that i know that um mike's

3284
02:00:24,400 --> 02:00:26,000
got some other drafts in flight and

3285
02:00:26,000 --> 02:00:28,000
flight two we are working together to

3286
02:00:28,000 --> 02:00:30,080
make sure that we provide uh the same

3287
02:00:30,080 --> 02:00:31,920
answer so that what his draft specifies

3288
02:00:31,920 --> 02:00:34,000
and what this draft specifies at least

3289
02:00:34,000 --> 02:00:35,920
line up

3290
02:00:35,920 --> 02:00:38,320
from uh

3291
02:00:38,880 --> 02:00:41,520
we we are out of time like i said we'll

3292
02:00:41,520 --> 02:00:44,239
schedule virtual interim to uh hit the

3293
02:00:44,239 --> 02:00:46,159
rest of the agenda

3294
02:00:46,159 --> 02:00:49,199
thank you very much and uh clearly we

3295
02:00:49,199 --> 02:00:52,159
have a lot more to do coming and this is

3296
02:00:52,159 --> 02:00:54,480
expected to make their

3297
02:00:54,480 --> 02:00:58,000
announcements by the end of the month so

3298
02:00:58,000 --> 02:01:01,360
we should know in the next week or so

3299
02:01:01,599 --> 02:01:03,920
thank you very much and

3300
02:01:03,920 --> 02:01:05,920
for those of you in vienna safe journey

3301
02:01:05,920 --> 02:01:07,280
home

3302
02:01:07,280 --> 02:01:09,760
thank you alexi for punching the slide

3303
02:01:09,760 --> 02:01:12,159
buttons

3304
02:01:14,239 --> 02:01:17,718
thank you bye

3305
02:01:45,599 --> 02:01:48,599
good

3306
02:02:00,960 --> 02:02:04,440
i have no idea

3307
02:02:26,159 --> 02:02:29,719
i have no idea

