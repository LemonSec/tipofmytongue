1
00:00:12,320 --> 00:00:14,799
okay i pronounced hey sandy do you want

2
00:00:14,799 --> 00:00:17,680
to run with them with the minutes

3
00:00:17,680 --> 00:00:20,320
or jeffrey

4
00:00:21,760 --> 00:00:22,880
i have a

5
00:00:22,880 --> 00:00:24,320
presentation

6
00:00:24,320 --> 00:00:26,880
two presentations

7
00:00:26,880 --> 00:00:29,039
okay true

8
00:00:29,039 --> 00:00:31,679
i send it here

9
00:00:31,679 --> 00:00:33,760
yeah but you don't like maybe hard for

10
00:00:33,760 --> 00:00:36,000
her

11
00:00:40,600 --> 00:00:44,680
yeah okay

12
00:00:59,440 --> 00:01:02,079
yeah the problem if i open the minutes

13
00:01:02,079 --> 00:01:04,080
tool i don't see anything else so that

14
00:01:04,080 --> 00:01:07,360
doesn't work particularly well

15
00:01:09,920 --> 00:01:12,720
and i can get into this stuff twice

16
00:01:12,720 --> 00:01:14,720
it's any kind of a trick for the whole

17
00:01:14,720 --> 00:01:18,240
thing that is not very well thought out

18
00:01:18,240 --> 00:01:20,240
uh open a new tab okay yeah they have

19
00:01:20,240 --> 00:01:22,240
something all right

20
00:01:22,240 --> 00:01:24,159
good so i think it's time to start we

21
00:01:24,159 --> 00:01:26,720
are on time

22
00:01:26,720 --> 00:01:28,880
so

23
00:01:28,880 --> 00:01:31,280
topic is 112 so we need to change this

24
00:01:31,280 --> 00:01:34,560
topic which i'll do soon so welcome to

25
00:01:34,560 --> 00:01:37,840
beer session at ita 113

26
00:01:37,840 --> 00:01:41,040
tony p jr

27
00:01:41,040 --> 00:01:44,720
so i'm the delegate and

28
00:01:44,720 --> 00:01:46,079
let's start

29
00:01:46,079 --> 00:01:48,880
tony p is going to talk about what's

30
00:01:48,880 --> 00:01:52,399
going on and provide an update

31
00:01:52,640 --> 00:01:54,640
all right so you're sharing the slides

32
00:01:54,640 --> 00:01:56,240
jf right

33
00:01:56,240 --> 00:01:57,200
yep

34
00:01:57,200 --> 00:01:58,719
and you can show up your face as well so

35
00:01:58,719 --> 00:02:00,719
we remember how you look like nah my

36
00:02:00,719 --> 00:02:04,199
office too messy

37
00:02:08,160 --> 00:02:10,878
okay the usual note well i think we've

38
00:02:10,878 --> 00:02:12,959
seen that in every group about a million

39
00:02:12,959 --> 00:02:15,120
times so i won't you know chew through

40
00:02:15,120 --> 00:02:17,520
that stuff unless jeff wants to go once

41
00:02:17,520 --> 00:02:18,250
over in the game

42
00:02:18,250 --> 00:02:19,840
[Music]

43
00:02:19,840 --> 00:02:22,560
so please read not well it defines how

44
00:02:22,560 --> 00:02:25,120
your contribution to atf are treated and

45
00:02:25,120 --> 00:02:27,360
before you start contributing to atf you

46
00:02:27,360 --> 00:02:30,879
really should know but not well

47
00:02:31,280 --> 00:02:33,440
all right

48
00:02:33,440 --> 00:02:35,680
uh yeah

49
00:02:35,680 --> 00:02:38,160
yeah no the media echo is good yeah

50
00:02:38,160 --> 00:02:39,760
buttons are changing it's getting better

51
00:02:39,760 --> 00:02:41,760
and better

52
00:02:41,760 --> 00:02:43,040
so if you

53
00:02:43,040 --> 00:02:45,760
if you participate in

54
00:02:45,760 --> 00:02:48,959
person please check in so your name gets

55
00:02:48,959 --> 00:02:50,640
on blue shade

56
00:02:50,640 --> 00:02:53,440
if you want to talk at the mic please

57
00:02:53,440 --> 00:02:56,000
get in line draw the tool and then come

58
00:02:56,000 --> 00:02:57,599
to the mic and don't forget to state

59
00:02:57,599 --> 00:02:58,959
your name

60
00:02:58,959 --> 00:03:01,680
for remote participant don't forget to

61
00:03:01,680 --> 00:03:04,319
turn video and audio off unless you're

62
00:03:04,319 --> 00:03:05,920
going to speak

63
00:03:05,920 --> 00:03:07,120
and

64
00:03:07,120 --> 00:03:09,440
yeah

65
00:03:10,000 --> 00:03:12,080
so minutes are

66
00:03:12,080 --> 00:03:14,080
at the

67
00:03:14,080 --> 00:03:16,400
url provided please make sure that

68
00:03:16,400 --> 00:03:18,480
whatever you say is correct

69
00:03:18,480 --> 00:03:22,480
please pick stuff if you see it's wrong

70
00:03:23,599 --> 00:03:25,519
funny

71
00:03:25,519 --> 00:03:27,440
yes sorry since i have to take minutes

72
00:03:27,440 --> 00:03:30,799
out of the over typing all right so

73
00:03:30,799 --> 00:03:34,400
agenda simple we do the status then uh

74
00:03:34,400 --> 00:03:36,879
we have small prezzo

75
00:03:36,879 --> 00:03:39,040
jeffrey this is the stuff that was

76
00:03:39,040 --> 00:03:42,400
non-ether now the code's non-mpls um so

77
00:03:42,400 --> 00:03:44,879
this is all the stuff that we need to

78
00:03:44,879 --> 00:03:48,560
encode in non-mpls case then let's talk

79
00:03:48,560 --> 00:03:52,080
about the um io am stuff that was

80
00:03:52,080 --> 00:03:55,120
suggested in basically oem in general

81
00:03:55,120 --> 00:03:56,879
classes minuses because there's a couple

82
00:03:56,879 --> 00:03:58,840
of proposals

83
00:03:58,840 --> 00:04:02,560
um uh being tossed around um

84
00:04:02,560 --> 00:04:06,480
then uh the brfr stuff comes up again i

85
00:04:06,480 --> 00:04:07,200
see

86
00:04:07,200 --> 00:04:09,120
uh actually

87
00:04:09,120 --> 00:04:10,879
i'm i'm lost where i said on the agenda

88
00:04:10,879 --> 00:04:14,000
okay i'm kind of i lost it here then we

89
00:04:14,000 --> 00:04:16,959
talk about the brh beer stuff i guess

90
00:04:16,959 --> 00:04:18,399
again

91
00:04:18,399 --> 00:04:20,399
if there is anything to be talked about

92
00:04:20,399 --> 00:04:23,120
and then we do the general delivery

93
00:04:23,120 --> 00:04:25,440
function with staff is interesting

94
00:04:25,440 --> 00:04:27,919
especially with all the oem suggestions

95
00:04:27,919 --> 00:04:29,919
and fragmentation coming up with you

96
00:04:29,919 --> 00:04:32,560
know goes across multiple different

97
00:04:32,560 --> 00:04:35,840
technologies um all right

98
00:04:35,840 --> 00:04:38,320
so we fire off the status

99
00:04:38,320 --> 00:04:39,600
all right so there

100
00:04:39,600 --> 00:04:40,840
be a bar

101
00:04:40,840 --> 00:04:43,600
ipa i think jeffrey closed all the

102
00:04:43,600 --> 00:04:46,080
comments it's on alvaro

103
00:04:46,080 --> 00:04:47,840
um

104
00:04:47,840 --> 00:04:50,479
pim single is waiting for a document to

105
00:04:50,479 --> 00:04:52,639
be referenced the the architecture is

106
00:04:52,639 --> 00:04:55,360
kind of all sued up i saw everything has

107
00:04:55,360 --> 00:04:57,600
been addressed pretty much

108
00:04:57,600 --> 00:04:58,560
um

109
00:04:58,560 --> 00:04:59,280
the

110
00:04:59,280 --> 00:05:01,520
ospf b3 is hanging

111
00:05:01,520 --> 00:05:04,000
in publication

112
00:05:04,000 --> 00:05:06,080
next one please

113
00:05:06,080 --> 00:05:08,800
uh all right so yeah that is the

114
00:05:08,800 --> 00:05:11,919
ethernet goes into non-mpls jeffrey will

115
00:05:11,919 --> 00:05:15,520
be talking about the stuff next one

116
00:05:15,520 --> 00:05:16,479
uh

117
00:05:16,479 --> 00:05:19,520
right so the pattern q discovery is

118
00:05:19,520 --> 00:05:24,080
waiting for uh write up and ping is also

119
00:05:24,080 --> 00:05:26,160
waiting for the write up so i assume

120
00:05:26,160 --> 00:05:28,320
there'll be some kicking needed okay

121
00:05:28,320 --> 00:05:32,479
the uh bgpls vr is expired idr didn't

122
00:05:32,479 --> 00:05:34,479
react um

123
00:05:34,479 --> 00:05:37,840
the ibr extensions

124
00:05:37,840 --> 00:05:40,000
uh the draft has been expired so we you

125
00:05:40,000 --> 00:05:41,759
know we have to go and look for authors

126
00:05:41,759 --> 00:05:43,919
again or revive the stuff

127
00:05:43,919 --> 00:05:44,800
um

128
00:05:44,800 --> 00:05:47,360
and the multicast hp response yeah sorry

129
00:05:47,360 --> 00:05:49,759
also exactly so that the draft is being

130
00:05:49,759 --> 00:05:51,680
replaced replaced as a presentation

131
00:05:51,680 --> 00:05:53,600
today sorry that's where i got lost

132
00:05:53,600 --> 00:05:54,800
because i still have you know the

133
00:05:54,800 --> 00:05:57,680
multicast http response the

134
00:05:57,680 --> 00:05:59,919
brfr has been merged everything is kind

135
00:05:59,919 --> 00:06:03,520
of ready there is one um

136
00:06:03,520 --> 00:06:05,840
mailing list

137
00:06:05,840 --> 00:06:08,319
stuff uh oh yeah i should probably talk

138
00:06:08,319 --> 00:06:10,479
about the git quickly

139
00:06:10,479 --> 00:06:13,440
which would need to be addressed uh for

140
00:06:13,440 --> 00:06:15,840
the adoption i think it has been brought

141
00:06:15,840 --> 00:06:17,680
up during the adoption call

142
00:06:17,680 --> 00:06:19,680
and multicast as a service will be

143
00:06:19,680 --> 00:06:21,440
presented today

144
00:06:21,440 --> 00:06:23,360
uh we'll see what the author calls for

145
00:06:23,360 --> 00:06:24,800
adoption

146
00:06:24,800 --> 00:06:26,479
i'm i will work the queue over once

147
00:06:26,479 --> 00:06:30,318
withdraw the status next one please

148
00:06:30,720 --> 00:06:33,280
all right so that's kind of the status

149
00:06:33,280 --> 00:06:36,880
uh jeffrey you have the mic

150
00:06:37,600 --> 00:06:40,000
um yes the

151
00:06:40,000 --> 00:06:42,160
our ipa drafts um

152
00:06:42,160 --> 00:06:44,479
thanks for alvaro to review it and we

153
00:06:44,479 --> 00:06:47,120
had quite some uh rounds to discuss

154
00:06:47,120 --> 00:06:49,120
what's the best language there

155
00:06:49,120 --> 00:06:51,759
um and yet need to do it one more

156
00:06:51,759 --> 00:06:54,800
revision i haven't got that done yet

157
00:06:54,800 --> 00:06:57,199
should be simple change and then

158
00:06:57,199 --> 00:06:58,639
we should you should be

159
00:06:58,639 --> 00:07:01,120
able to move forward

160
00:07:01,120 --> 00:07:03,440
so about the

161
00:07:03,440 --> 00:07:06,000
um

162
00:07:06,240 --> 00:07:08,400
martingales as a service uh

163
00:07:08,400 --> 00:07:10,319
well i'm not presenting it today but

164
00:07:10,319 --> 00:07:12,479
indeed it was presented before and we

165
00:07:12,479 --> 00:07:15,919
call uh we wanted to do an adoption call

166
00:07:15,919 --> 00:07:18,240
by that time there were a lot of drafts

167
00:07:18,240 --> 00:07:20,560
to be to be called and so

168
00:07:20,560 --> 00:07:23,520
we were we uh i was so that we would uh

169
00:07:23,520 --> 00:07:26,400
pace out and i think now it's time to to

170
00:07:26,400 --> 00:07:28,840
to do it now but i'm not presenting

171
00:07:28,840 --> 00:07:31,919
today uh i think

172
00:07:31,919 --> 00:07:34,160
that's that's about it from me

173
00:07:34,160 --> 00:07:37,280
okay so i take that stuff uh as adoption

174
00:07:37,280 --> 00:07:40,319
call going to the list for the beers

175
00:07:40,319 --> 00:07:42,560
multicast as a service okay

176
00:07:42,560 --> 00:07:45,520
and thanks for the correction on the idr

177
00:07:45,520 --> 00:07:46,479
um

178
00:07:46,479 --> 00:07:49,360
okay please state uh

179
00:07:49,360 --> 00:07:50,879
name and affiliation we're coming up

180
00:07:50,879 --> 00:07:52,319
with the mic it will help the people

181
00:07:52,319 --> 00:07:55,039
online alvaro you have the mic

182
00:07:55,039 --> 00:07:56,879
hello

183
00:07:56,879 --> 00:07:57,759
um

184
00:07:57,759 --> 00:07:58,960
so i wanna

185
00:07:58,960 --> 00:08:00,319
the deck is not there anymore but i want

186
00:08:00,319 --> 00:08:02,879
to go back to the uh dear freshly route

187
00:08:02,879 --> 00:08:05,280
uh draft

188
00:08:05,280 --> 00:08:06,800
i notice there have been

189
00:08:06,800 --> 00:08:09,599
several requests from the authors on the

190
00:08:09,599 --> 00:08:11,120
list

191
00:08:11,120 --> 00:08:13,039
to adopt

192
00:08:13,039 --> 00:08:15,440
and i haven't seen maybe i missed in the

193
00:08:15,440 --> 00:08:17,199
last couple days i hadn't seen any reply

194
00:08:17,199 --> 00:08:19,840
on what are the open issues

195
00:08:19,840 --> 00:08:21,680
uh now i see here that there's a link to

196
00:08:21,680 --> 00:08:22,960
the github

197
00:08:22,960 --> 00:08:25,199
yes sorry so yes

198
00:08:25,199 --> 00:08:28,000
andrew actually uh suggested that we

199
00:08:28,000 --> 00:08:30,479
have some kind of a repository where we

200
00:08:30,479 --> 00:08:32,719
can have a history per draft of all the

201
00:08:32,719 --> 00:08:34,080
issues that have been addressed and what

202
00:08:34,080 --> 00:08:35,440
is outstanding

203
00:08:35,440 --> 00:08:38,240
and we went back with greg back and

204
00:08:38,240 --> 00:08:39,839
forth and with the secretary and we

205
00:08:39,839 --> 00:08:42,399
decided that uh the best approach will

206
00:08:42,399 --> 00:08:44,800
be basically to go on to github because

207
00:08:44,800 --> 00:08:46,480
of the history requirements right that

208
00:08:46,480 --> 00:08:48,880
the tracker doesn't allow us to really

209
00:08:48,880 --> 00:08:50,880
have a history of stuff that was going

210
00:08:50,880 --> 00:08:51,600
on

211
00:08:51,600 --> 00:08:52,640
so

212
00:08:52,640 --> 00:08:54,640
the best format seems to be go to get on

213
00:08:54,640 --> 00:08:58,000
the github and have a git per draft and

214
00:08:58,000 --> 00:09:00,560
on this draft we will keep basically

215
00:09:00,560 --> 00:09:02,880
running pokemon will be committing into

216
00:09:02,880 --> 00:09:03,920
git

217
00:09:03,920 --> 00:09:05,200
because that will give us a perfect

218
00:09:05,200 --> 00:09:08,560
history how the stuff is developing um

219
00:09:08,560 --> 00:09:10,160
sure so i don't have a problem with that

220
00:09:10,160 --> 00:09:12,000
so what i wanted to do is highlight two

221
00:09:12,000 --> 00:09:14,399
points one is

222
00:09:14,399 --> 00:09:15,279
the

223
00:09:15,279 --> 00:09:17,200
lack of response on the list

224
00:09:17,200 --> 00:09:18,959
that if you already replied then that's

225
00:09:18,959 --> 00:09:20,240
great

226
00:09:20,240 --> 00:09:22,320
so yes candy send your replied actually

227
00:09:22,320 --> 00:09:23,440
with that stuff because we were

228
00:09:23,440 --> 00:09:24,959
converging you think what should we do

229
00:09:24,959 --> 00:09:26,800
how should we reply and we decided to

230
00:09:26,800 --> 00:09:28,160
generation

231
00:09:28,160 --> 00:09:29,200
that's right

232
00:09:29,200 --> 00:09:33,680
the other thing that we need you to do

233
00:09:33,680 --> 00:09:36,720
is figure out as a working group

234
00:09:36,720 --> 00:09:38,959
how you're going to use github

235
00:09:38,959 --> 00:09:40,880
it's fine if you want to

236
00:09:40,880 --> 00:09:42,240
and there are many things you can do

237
00:09:42,240 --> 00:09:44,000
with github right you can do

238
00:09:44,000 --> 00:09:45,440
everything from the development of the

239
00:09:45,440 --> 00:09:48,160
draft you can just track issues

240
00:09:48,160 --> 00:09:49,440
how are the issues that are being

241
00:09:49,440 --> 00:09:51,120
discussed in github going to be

242
00:09:51,120 --> 00:09:52,880
reflected to the list

243
00:09:52,880 --> 00:09:54,000
or not

244
00:09:54,000 --> 00:09:56,720
is everyone expected to go get an

245
00:09:56,720 --> 00:09:58,640
account on github and follow the issues

246
00:09:58,640 --> 00:09:59,519
there

247
00:09:59,519 --> 00:10:01,200
yeah they're going to happen only for

248
00:10:01,200 --> 00:10:03,360
drafts that are adopted

249
00:10:03,360 --> 00:10:04,560
or not

250
00:10:04,560 --> 00:10:06,640
this one is not adopted of course yet

251
00:10:06,640 --> 00:10:08,399
so you know

252
00:10:08,399 --> 00:10:09,839
there needs to be a policy for the

253
00:10:09,839 --> 00:10:11,680
working group that is clear and everyone

254
00:10:11,680 --> 00:10:12,959
knows about it

255
00:10:12,959 --> 00:10:16,240
there's a couple of drafts that um

256
00:10:16,240 --> 00:10:20,720
the git working group produced last year

257
00:10:20,720 --> 00:10:23,920
on recommendations on how to

258
00:10:23,920 --> 00:10:25,200
um

259
00:10:25,200 --> 00:10:27,120
do all this right only how to set up the

260
00:10:27,120 --> 00:10:28,560
repository which you already did which

261
00:10:28,560 --> 00:10:31,040
is great but also on on the different

262
00:10:31,040 --> 00:10:33,519
decision points that need to be made

263
00:10:33,519 --> 00:10:35,120
that need to be made right

264
00:10:35,120 --> 00:10:36,399
because you know whatever issues are

265
00:10:36,399 --> 00:10:38,480
discussed on github are not

266
00:10:38,480 --> 00:10:40,480
automatically reflected on the list yeah

267
00:10:40,480 --> 00:10:42,800
unfortunately right okay there's a note

268
00:10:42,800 --> 00:10:44,320
well issue and you know all that other

269
00:10:44,320 --> 00:10:46,880
stuff so please take a look at the git

270
00:10:46,880 --> 00:10:49,200
um

271
00:10:49,440 --> 00:10:51,279
yes i forget the numbers

272
00:10:51,279 --> 00:10:53,519
um and it provides there a list of

273
00:10:53,519 --> 00:10:55,200
things to to consider

274
00:10:55,200 --> 00:10:57,600
yeah don't worry uh we'll find that

275
00:10:57,600 --> 00:10:59,680
stuff so i take it up a section item on

276
00:10:59,680 --> 00:11:01,440
the chairs yeah i think you pointed us

277
00:11:01,440 --> 00:11:03,360
already to this good working group and

278
00:11:03,360 --> 00:11:05,200
then we kind of went off and started to

279
00:11:05,200 --> 00:11:07,519
think how we deal with the stuff uh

280
00:11:07,519 --> 00:11:09,200
with the history issues it is

281
00:11:09,200 --> 00:11:10,720
unfortunate that the tracker does not

282
00:11:10,720 --> 00:11:12,480
allow you know to keep the issues per

283
00:11:12,480 --> 00:11:14,000
draft and the history that would be a

284
00:11:14,000 --> 00:11:16,399
good suggestion because that

285
00:11:16,399 --> 00:11:18,079
starts to become you know more and more

286
00:11:18,079 --> 00:11:19,600
of a pressing issue

287
00:11:19,600 --> 00:11:22,079
since mailing lists are just simply too

288
00:11:22,079 --> 00:11:23,120
you know

289
00:11:23,120 --> 00:11:24,000
um

290
00:11:24,000 --> 00:11:25,920
far-flung for

291
00:11:25,920 --> 00:11:27,120
to expect

292
00:11:27,120 --> 00:11:29,360
everyone to be up to date on you know

293
00:11:29,360 --> 00:11:30,800
all the threats and all the stuff that

294
00:11:30,800 --> 00:11:32,160
has been raised

295
00:11:32,160 --> 00:11:35,120
so okay uh action night with the chairs

296
00:11:35,120 --> 00:11:37,040
uh let us convert from the stove and

297
00:11:37,040 --> 00:11:38,560
fire up something to the list with kind

298
00:11:38,560 --> 00:11:41,120
of a official policy i mean we don't

299
00:11:41,120 --> 00:11:42,720
want to make it you know too much red

300
00:11:42,720 --> 00:11:44,399
tape but something that is based on the

301
00:11:44,399 --> 00:11:46,000
git working group recommendation how

302
00:11:46,000 --> 00:11:48,959
will we roll the stuff forward okay good

303
00:11:48,959 --> 00:11:51,200
um yes

304
00:11:51,200 --> 00:11:52,079
thanks

305
00:11:52,079 --> 00:11:53,040
uh

306
00:11:53,040 --> 00:11:54,639
why mo

307
00:11:54,639 --> 00:11:57,839
you have the mic

308
00:12:03,040 --> 00:12:05,599
why ammo

309
00:12:07,839 --> 00:12:08,839
i need to

310
00:12:08,839 --> 00:12:11,440
unmute i think

311
00:12:17,519 --> 00:12:22,000
yeah unfortunately i cannot unmute him

312
00:12:22,639 --> 00:12:25,200
i mean he needs to do it

313
00:12:25,200 --> 00:12:27,440
actually i don't see any like

314
00:12:27,440 --> 00:12:28,560
exactly

315
00:12:28,560 --> 00:12:30,639
so let's move to the next presentation

316
00:12:30,639 --> 00:12:33,200
and when he figures out

317
00:12:33,200 --> 00:12:36,200
jeffrey

318
00:12:38,240 --> 00:12:42,240
okay so this is um updates uh

319
00:12:42,240 --> 00:12:46,880
uh on this non-mpo extension um

320
00:12:46,880 --> 00:12:49,680
on behalf of the co-authors

321
00:12:49,680 --> 00:12:52,079
next step please

322
00:12:52,079 --> 00:12:54,959
it's got quite some history uh back in

323
00:12:54,959 --> 00:12:56,800
2018

324
00:12:56,800 --> 00:12:58,880
we have this initial version

325
00:12:58,880 --> 00:13:02,560
the name is non-mpos extensions

326
00:13:02,560 --> 00:13:04,959
you can notice the non-nps keyword there

327
00:13:04,959 --> 00:13:05,760
but

328
00:13:05,760 --> 00:13:07,279
at that time

329
00:13:07,279 --> 00:13:09,680
the scope was internet only

330
00:13:09,680 --> 00:13:12,000
and because of that um three months

331
00:13:12,000 --> 00:13:13,600
later we uh

332
00:13:13,600 --> 00:13:16,160
renamed it to ethernet

333
00:13:16,160 --> 00:13:18,800
extensions to reflect that scope of

334
00:13:18,800 --> 00:13:20,639
internet only

335
00:13:20,639 --> 00:13:23,360
and then later on i raised the question

336
00:13:23,360 --> 00:13:27,120
why should we limit to internet only um

337
00:13:27,120 --> 00:13:29,920
there is no reason to to to to limit

338
00:13:29,920 --> 00:13:33,440
that it should work for all situations

339
00:13:33,440 --> 00:13:36,399
but the work has thought since then

340
00:13:36,399 --> 00:13:38,560
besides the working group edition

341
00:13:38,560 --> 00:13:40,079
adoption

342
00:13:40,079 --> 00:13:42,480
uh finally um

343
00:13:42,480 --> 00:13:44,560
we recently confirmed that original

344
00:13:44,560 --> 00:13:47,680
editors could no longer work on this so

345
00:13:47,680 --> 00:13:49,839
i took the pen and then

346
00:13:49,839 --> 00:13:52,720
published this new version with the

347
00:13:52,720 --> 00:13:54,720
non-mpr extension

348
00:13:54,720 --> 00:13:56,959
because we have not heard

349
00:13:56,959 --> 00:13:58,480
a good uh

350
00:13:58,480 --> 00:14:01,519
reasons to not to do so

351
00:14:01,519 --> 00:14:03,760
but we can we can still discuss it uh

352
00:14:03,760 --> 00:14:06,399
whether this is a good thing so far i've

353
00:14:06,399 --> 00:14:11,360
only seen good reasons to to make it uh

354
00:14:11,360 --> 00:14:17,120
generically non-mpos next slide please

355
00:14:17,120 --> 00:14:20,000
since uh it's been there for quite a

356
00:14:20,000 --> 00:14:21,920
while so i thought i'll just go through

357
00:14:21,920 --> 00:14:23,040
the

358
00:14:23,040 --> 00:14:25,760
contents uh very quickly uh the first

359
00:14:25,760 --> 00:14:29,120
one the first big uh

360
00:14:29,199 --> 00:14:31,600
uh topic here is uh

361
00:14:31,600 --> 00:14:33,920
uh biff id uh

362
00:14:33,920 --> 00:14:37,440
in case of non-mpos encapsulation

363
00:14:37,440 --> 00:14:39,760
the encapsulation uh

364
00:14:39,760 --> 00:14:41,920
rfc says that uh

365
00:14:41,920 --> 00:14:42,839
for

366
00:14:42,839 --> 00:14:45,760
non-mpos the biff ids

367
00:14:45,760 --> 00:14:48,480
they are domain wide unique uh in case

368
00:14:48,480 --> 00:14:49,760
of mpos

369
00:14:49,760 --> 00:14:52,240
bifids are just labels so they are they

370
00:14:52,240 --> 00:14:54,160
are locally significant but when it

371
00:14:54,160 --> 00:14:55,920
comes to non-pos

372
00:14:55,920 --> 00:14:58,320
they are domain-wide unique according to

373
00:14:58,320 --> 00:14:59,839
the encapsulation

374
00:14:59,839 --> 00:15:00,959
rfc

375
00:15:00,959 --> 00:15:01,920
and

376
00:15:01,920 --> 00:15:05,199
there are two ways to uh to uh

377
00:15:05,199 --> 00:15:08,320
to specify the those gifts uh but the

378
00:15:08,320 --> 00:15:09,680
brief ideas

379
00:15:09,680 --> 00:15:13,680
um according to the draft i uh etf beer

380
00:15:13,680 --> 00:15:15,839
now mpl spift encoding

381
00:15:15,839 --> 00:15:17,760
the first one is basically just hard

382
00:15:17,760 --> 00:15:20,800
encoding uh big string lens sub domain

383
00:15:20,800 --> 00:15:23,600
id and set id sd5d

384
00:15:23,600 --> 00:15:26,000
and when you do that there's no need for

385
00:15:26,000 --> 00:15:28,560
provisioning or signaling

386
00:15:28,560 --> 00:15:30,079
but that does not give you any

387
00:15:30,079 --> 00:15:34,639
flexibility that mpos week that gives

388
00:15:34,639 --> 00:15:38,320
to retain some of the flexibility

389
00:15:38,320 --> 00:15:42,000
then a second way to do that is that

390
00:15:42,000 --> 00:15:45,600
instead of hardcore encoding the bsl and

391
00:15:45,600 --> 00:15:47,360
subdomain id

392
00:15:47,360 --> 00:15:49,440
we heart encodes uh

393
00:15:49,440 --> 00:15:51,360
a 16 bits

394
00:15:51,360 --> 00:15:53,920
ibu i forgot what ibu stands for but

395
00:15:53,920 --> 00:15:56,399
basically just an opaque number

396
00:15:56,399 --> 00:15:58,560
uh it can be anything

397
00:15:58,560 --> 00:15:59,759
to do that

398
00:15:59,759 --> 00:16:01,600
then we would need

399
00:16:01,600 --> 00:16:02,800
ibu

400
00:16:02,800 --> 00:16:06,000
to be provisioned on each router

401
00:16:06,000 --> 00:16:09,199
now notice that the beer architecture

402
00:16:09,199 --> 00:16:10,279
rfc

403
00:16:10,279 --> 00:16:12,079
8279

404
00:16:12,079 --> 00:16:13,680
actually does not

405
00:16:13,680 --> 00:16:18,000
mandate domain white unique beef ids

406
00:16:18,000 --> 00:16:21,279
so in another draft

407
00:16:21,279 --> 00:16:23,759
uh it was argued that uh even for

408
00:16:23,759 --> 00:16:25,360
non-mpos

409
00:16:25,360 --> 00:16:26,560
uh

410
00:16:26,560 --> 00:16:30,240
uh beef ids can be like mpls labels

411
00:16:30,240 --> 00:16:33,120
and if you do that you do not need to

412
00:16:33,120 --> 00:16:36,160
uh and to have any provisioning and you

413
00:16:36,160 --> 00:16:38,240
see you still have the flexibility that

414
00:16:38,240 --> 00:16:40,639
mtos way provides you

415
00:16:40,639 --> 00:16:42,720
so if you go that way

416
00:16:42,720 --> 00:16:43,920
then the

417
00:16:43,920 --> 00:16:47,600
beef ids even for non-mpos case

418
00:16:47,600 --> 00:16:49,360
they are just

419
00:16:49,360 --> 00:16:51,120
opec numbers

420
00:16:51,120 --> 00:16:53,839
except they are not called labors

421
00:16:53,839 --> 00:16:56,480
labels the like nps labels are not

422
00:16:56,480 --> 00:16:58,399
called the labels

423
00:16:58,399 --> 00:17:00,160
they can be locally assigned

424
00:17:00,160 --> 00:17:01,839
independently

425
00:17:01,839 --> 00:17:04,799
of course they can also be coordinated

426
00:17:04,799 --> 00:17:06,160
across all the

427
00:17:06,160 --> 00:17:07,359
routers

428
00:17:07,359 --> 00:17:09,760
and when you do do the coordination then

429
00:17:09,760 --> 00:17:12,400
the consistent values can be used

430
00:17:12,400 --> 00:17:14,079
just like in the

431
00:17:14,079 --> 00:17:15,919
segment routing

432
00:17:15,919 --> 00:17:21,919
sr srlb and srgb labels is very similar

433
00:17:21,919 --> 00:17:24,799
next slide please

434
00:17:25,599 --> 00:17:27,119
so in this

435
00:17:27,119 --> 00:17:28,960
documents

436
00:17:28,960 --> 00:17:30,880
we want to take a pro take the approach

437
00:17:30,880 --> 00:17:32,799
that

438
00:17:32,799 --> 00:17:35,520
you can either use the

439
00:17:35,520 --> 00:17:36,480
uh

440
00:17:36,480 --> 00:17:40,480
two approaches uh uh specified in that

441
00:17:40,480 --> 00:17:42,559
non-mps beef encoding

442
00:17:42,559 --> 00:17:43,679
spec

443
00:17:43,679 --> 00:17:47,120
or we can signal the beef ids

444
00:17:47,120 --> 00:17:48,400
that can be

445
00:17:48,400 --> 00:17:49,440
local

446
00:17:49,440 --> 00:17:51,760
or the main web unique just like how we

447
00:17:51,760 --> 00:17:53,679
do it with mpos

448
00:17:53,679 --> 00:17:56,320
so that's that's one main topic in this

449
00:17:56,320 --> 00:18:00,678
document next slide please

450
00:18:00,799 --> 00:18:03,760
um so next part is uh exactly how we do

451
00:18:03,760 --> 00:18:05,600
uh signaling

452
00:18:05,600 --> 00:18:11,000
uh isis ospv2 ospv3

453
00:18:11,039 --> 00:18:13,039
basically they will be extended to

454
00:18:13,039 --> 00:18:15,440
signal uh

455
00:18:15,440 --> 00:18:17,760
dynamic and local

456
00:18:17,760 --> 00:18:21,200
non-labeled beef ids and it mirrors the

457
00:18:21,200 --> 00:18:22,720
way

458
00:18:22,720 --> 00:18:26,160
we do it for mpos

459
00:18:26,160 --> 00:18:27,039
so

460
00:18:27,039 --> 00:18:29,440
in the in the bottom

461
00:18:29,440 --> 00:18:31,919
there are two uh figures there the first

462
00:18:31,919 --> 00:18:33,679
one is the beer

463
00:18:33,679 --> 00:18:35,679
information tlv

464
00:18:35,679 --> 00:18:38,640
that is already specified in the mpos

465
00:18:38,640 --> 00:18:39,760
signaling

466
00:18:39,760 --> 00:18:43,200
and that that remains um

467
00:18:43,200 --> 00:18:47,440
that trv has some sub trvs that

468
00:18:47,440 --> 00:18:49,840
in case mpos they will specified npr's

469
00:18:49,840 --> 00:18:51,760
encapsulation and

470
00:18:51,760 --> 00:18:52,559
it will

471
00:18:52,559 --> 00:18:54,960
signal the labor bases

472
00:18:54,960 --> 00:18:56,960
now we will just mirror that so we have

473
00:18:56,960 --> 00:18:59,760
a new sub glv to signal

474
00:18:59,760 --> 00:19:00,720
uh

475
00:19:00,720 --> 00:19:03,679
the the non-mplc encapsulation

476
00:19:03,679 --> 00:19:06,480
with the bf ids you can see that

477
00:19:06,480 --> 00:19:08,720
if you replace the b5d

478
00:19:08,720 --> 00:19:12,080
with label then it will be identical

479
00:19:12,080 --> 00:19:15,200
as the mpos case

480
00:19:15,200 --> 00:19:17,760
next slide

481
00:19:18,559 --> 00:19:20,160
so the

482
00:19:20,160 --> 00:19:22,000
we talked about the two main topics in

483
00:19:22,000 --> 00:19:25,120
the in the draft and now uh changes in

484
00:19:25,120 --> 00:19:27,280
the latest revision the first is the

485
00:19:27,280 --> 00:19:29,039
name and scope change

486
00:19:29,039 --> 00:19:31,840
we now it's called non-mpos

487
00:19:31,840 --> 00:19:34,159
beer

488
00:19:34,320 --> 00:19:35,520
extension

489
00:19:35,520 --> 00:19:36,880
it can work with

490
00:19:36,880 --> 00:19:39,760
any scenario whether it's a

491
00:19:39,760 --> 00:19:42,320
beer are following the ethernet header

492
00:19:42,320 --> 00:19:46,000
or follow any tunnel header or

493
00:19:46,000 --> 00:19:49,760
or ipv6 uh whatever

494
00:19:49,760 --> 00:19:52,000
editorial changes and finally there is

495
00:19:52,000 --> 00:19:54,960
one change it's about leaking between

496
00:19:54,960 --> 00:19:57,280
areas or levels

497
00:19:57,280 --> 00:20:00,000
next slide please

498
00:20:02,000 --> 00:20:05,200
so i have an example topology here uh

499
00:20:05,200 --> 00:20:06,400
i'm uh

500
00:20:06,400 --> 00:20:08,720
ospf example um

501
00:20:08,720 --> 00:20:10,880
one area on the left another area on the

502
00:20:10,880 --> 00:20:13,200
right

503
00:20:13,400 --> 00:20:17,039
bfer12 and bfbr34

504
00:20:17,039 --> 00:20:19,840
now if you look at the bfr4 and five in

505
00:20:19,840 --> 00:20:22,080
the right in the right

506
00:20:22,080 --> 00:20:23,919
now when it comes to

507
00:20:23,919 --> 00:20:25,520
for beer purposes

508
00:20:25,520 --> 00:20:27,760
the

509
00:20:27,760 --> 00:20:31,440
bfrs or bfer is on the

510
00:20:31,440 --> 00:20:34,080
on another area on the left side they

511
00:20:34,080 --> 00:20:37,440
don't care about bfr four or five at all

512
00:20:37,440 --> 00:20:40,640
they care about bf er three and four

513
00:20:40,640 --> 00:20:43,360
only to the extent that they care about

514
00:20:43,360 --> 00:20:46,080
those bfa r3 and force subdomain

515
00:20:46,080 --> 00:20:47,760
topology

516
00:20:47,760 --> 00:20:50,960
bar ipa value and the bfe are ids but

517
00:20:50,960 --> 00:20:52,720
they don't care

518
00:20:52,720 --> 00:20:54,720
what encapsulation

519
00:20:54,720 --> 00:21:00,400
that bfvr 3 and 4 uses because um

520
00:21:00,400 --> 00:21:02,400
routers in the left area

521
00:21:02,400 --> 00:21:04,559
only cares about that

522
00:21:04,559 --> 00:21:08,480
oh i can get to bfer3n4 through bfr3 so

523
00:21:08,480 --> 00:21:10,799
as long as i know that and then as long

524
00:21:10,799 --> 00:21:12,000
as i know

525
00:21:12,000 --> 00:21:13,840
what encapsulation i should use to get

526
00:21:13,840 --> 00:21:17,520
to bfr3 they should be all set

527
00:21:17,520 --> 00:21:20,000
so because of that

528
00:21:20,000 --> 00:21:21,760
when we leak

529
00:21:21,760 --> 00:21:23,600
the routes into

530
00:21:23,600 --> 00:21:25,919
across areas or across

531
00:21:25,919 --> 00:21:27,919
levels

532
00:21:27,919 --> 00:21:31,440
then for beer information tlv

533
00:21:31,440 --> 00:21:33,120
um

534
00:21:33,120 --> 00:21:36,240
if we if it does not have a

535
00:21:36,240 --> 00:21:39,039
bfr non-zero bfr id then

536
00:21:39,039 --> 00:21:40,880
then that the information does not need

537
00:21:40,880 --> 00:21:42,960
to be leaked at all

538
00:21:42,960 --> 00:21:45,679
of course you can lick it it's just it's

539
00:21:45,679 --> 00:21:48,480
not it's of no use so we can we say that

540
00:21:48,480 --> 00:21:49,360
uh

541
00:21:49,360 --> 00:21:50,480
you may

542
00:21:50,480 --> 00:21:51,440
skip

543
00:21:51,440 --> 00:21:53,120
you may omit

544
00:21:53,120 --> 00:21:56,640
the uh beer or info trv along with this

545
00:21:56,640 --> 00:22:01,520
subjects if the bfr isn't is zero

546
00:22:01,520 --> 00:22:02,640
and then

547
00:22:02,640 --> 00:22:07,280
um you may also in emits uh omits the

548
00:22:07,280 --> 00:22:09,679
increment encapsulation to the

549
00:22:09,679 --> 00:22:12,960
sub glb uh

550
00:22:12,960 --> 00:22:15,919
even if you do dig the

551
00:22:15,919 --> 00:22:18,799
beer in for trv

552
00:22:18,799 --> 00:22:21,520
next slide please

553
00:22:23,679 --> 00:22:24,880
so

554
00:22:24,880 --> 00:22:28,080
comments um i want to mention that uh

555
00:22:28,080 --> 00:22:30,559
we we had a working group last call uh

556
00:22:30,559 --> 00:22:33,280
before on the idr extension and also

557
00:22:33,280 --> 00:22:35,280
bgpls extension

558
00:22:35,280 --> 00:22:37,360
at that time i commented that we should

559
00:22:37,360 --> 00:22:38,240
wait

560
00:22:38,240 --> 00:22:39,360
until

561
00:22:39,360 --> 00:22:42,000
this draft settles because uh

562
00:22:42,000 --> 00:22:44,480
this drafts originally was talking about

563
00:22:44,480 --> 00:22:48,000
ethernet only and but idr and bgpls they

564
00:22:48,000 --> 00:22:48,799
were

565
00:22:48,799 --> 00:22:51,120
money they're talking about non-mpos so

566
00:22:51,120 --> 00:22:53,280
we should be consistent

567
00:22:53,280 --> 00:22:54,880
now if we

568
00:22:54,880 --> 00:22:56,720
if we agree that we're not settled on

569
00:22:56,720 --> 00:22:58,159
this one then

570
00:22:58,159 --> 00:22:59,600
at least uh

571
00:22:59,600 --> 00:23:01,840
my earlier comments on those two drafts

572
00:23:01,840 --> 00:23:05,840
and they are no longer there

573
00:23:06,720 --> 00:23:09,200
we believe uh is ready for working group

574
00:23:09,200 --> 00:23:10,480
last call

575
00:23:10,480 --> 00:23:13,520
uh we uh i did have some discussion with

576
00:23:13,520 --> 00:23:15,600
jin roon offline

577
00:23:15,600 --> 00:23:18,480
um on whether we are

578
00:23:18,480 --> 00:23:20,159
we we want to

579
00:23:20,159 --> 00:23:23,840
uh uh use the uh

580
00:23:23,840 --> 00:23:26,880
locally significant significance uh

581
00:23:26,880 --> 00:23:29,600
before these um

582
00:23:29,600 --> 00:23:32,159
so i added those slides for this

583
00:23:32,159 --> 00:23:35,440
today to call that out to show why we

584
00:23:35,440 --> 00:23:38,159
want to do that and i hope we

585
00:23:38,159 --> 00:23:41,200
we have reached that consensus but um

586
00:23:41,200 --> 00:23:43,440
we'll see

587
00:23:43,440 --> 00:23:44,480
so

588
00:23:44,480 --> 00:23:45,840
that's it

589
00:23:45,840 --> 00:23:48,000
thank you for any comments

590
00:23:48,000 --> 00:23:48,720
uh

591
00:23:48,720 --> 00:23:51,679
yeah tony so what's the consensus on the

592
00:23:51,679 --> 00:23:54,480
local uh significant beef beef ideas i

593
00:23:54,480 --> 00:23:56,720
didn't see this discussion going on

594
00:23:56,720 --> 00:23:58,400
you want to do translation between

595
00:23:58,400 --> 00:24:00,000
domain when you're leaking or what's the

596
00:24:00,000 --> 00:24:02,240
deal

597
00:24:02,559 --> 00:24:03,360
uh

598
00:24:03,360 --> 00:24:06,640
it's not translation it's uh

599
00:24:06,640 --> 00:24:08,159
you you don't need to you don't need

600
00:24:08,159 --> 00:24:10,880
that information basically

601
00:24:10,880 --> 00:24:12,240
okay

602
00:24:12,240 --> 00:24:14,159
because i mean that the the border

603
00:24:14,159 --> 00:24:16,159
gateway will do the decision anyway

604
00:24:16,159 --> 00:24:17,120
right

605
00:24:17,120 --> 00:24:18,559
stitch this stuff

606
00:24:18,559 --> 00:24:19,279
right

607
00:24:19,279 --> 00:24:20,880
yeah it was leaking yeah okay so that's

608
00:24:20,880 --> 00:24:22,400
why i was confused why you even had the

609
00:24:22,400 --> 00:24:24,880
discussion good thanks

610
00:24:24,880 --> 00:24:27,200
oh the discussion is actually not about

611
00:24:27,200 --> 00:24:30,000
discussion is about whether we want to

612
00:24:30,000 --> 00:24:31,440
signal

613
00:24:31,440 --> 00:24:34,240
the beef ids at all because there is

614
00:24:34,240 --> 00:24:36,400
already a organ group draft talking

615
00:24:36,400 --> 00:24:38,000
about

616
00:24:38,000 --> 00:24:41,840
domain-wide unique beef ids

617
00:24:41,840 --> 00:24:44,799
that does not need signaling at all yes

618
00:24:44,799 --> 00:24:47,840
of course

619
00:24:48,080 --> 00:24:49,279
um

620
00:24:49,279 --> 00:24:51,200
so the discussion was whether we need

621
00:24:51,200 --> 00:24:53,039
both variants or whether we keep the

622
00:24:53,039 --> 00:24:55,360
globally one that is pretty that is

623
00:24:55,360 --> 00:24:57,679
basically computed

624
00:24:57,679 --> 00:24:58,840
uh

625
00:24:58,840 --> 00:25:01,919
both they are all okay i mean they did

626
00:25:01,919 --> 00:25:05,200
the operator can choose which way to go

627
00:25:05,200 --> 00:25:07,520
right

628
00:25:07,760 --> 00:25:09,919
but if you don't compute them

629
00:25:09,919 --> 00:25:11,440
predictably

630
00:25:11,440 --> 00:25:13,919
then you need to signal them don't you

631
00:25:13,919 --> 00:25:15,279
within the domain

632
00:25:15,279 --> 00:25:18,159
uh correct if you don't get the unique

633
00:25:18,159 --> 00:25:20,480
one then you need a signal okay fine

634
00:25:20,480 --> 00:25:23,799
yeah thanks

635
00:25:29,919 --> 00:25:32,320
okay i see no more question we'll move

636
00:25:32,320 --> 00:25:33,840
to

637
00:25:33,840 --> 00:25:37,720
beer irm presentation

638
00:25:43,679 --> 00:25:45,440
hi everyone

639
00:25:45,440 --> 00:25:47,360
it's xiaomi speaking

640
00:25:47,360 --> 00:25:49,360
this presentation is on beer

641
00:25:49,360 --> 00:25:53,600
encapsulation for iom data

642
00:25:53,600 --> 00:25:57,120
this job was presented at ietf

643
00:25:57,120 --> 00:25:59,039
108

644
00:25:59,039 --> 00:26:02,240
this is the second time is presented

645
00:26:02,240 --> 00:26:05,200
next slide please

646
00:26:06,960 --> 00:26:09,919
firstly recap on the intention of this

647
00:26:09,919 --> 00:26:11,120
draft

648
00:26:11,120 --> 00:26:14,080
this job provides the encapsulation for

649
00:26:14,080 --> 00:26:16,799
iom over beer

650
00:26:16,799 --> 00:26:18,480
this chapter describes

651
00:26:18,480 --> 00:26:21,919
two options of encapsulation

652
00:26:21,919 --> 00:26:25,440
option one is beer header

653
00:26:25,440 --> 00:26:28,240
plus baom header plus

654
00:26:28,240 --> 00:26:31,279
iom header plus payload

655
00:26:31,279 --> 00:26:33,919
option two is beer header plus

656
00:26:33,919 --> 00:26:37,440
iom header plus payload

657
00:26:37,760 --> 00:26:40,000
among these two options option 2 is

658
00:26:40,000 --> 00:26:43,120
selected as the standardized one

659
00:26:43,120 --> 00:26:45,120
because it's a

660
00:26:45,120 --> 00:26:47,679
more concise and commonly used

661
00:26:47,679 --> 00:26:50,880
encapsulation method

662
00:26:51,200 --> 00:26:53,760
just last weekend

663
00:26:53,760 --> 00:26:57,440
we noticed there is a third option

664
00:26:57,440 --> 00:27:00,159
which i assume is a

665
00:27:00,159 --> 00:27:02,000
via header plus

666
00:27:02,000 --> 00:27:04,400
gdf header

667
00:27:04,400 --> 00:27:07,120
plus iom header plus

668
00:27:07,120 --> 00:27:09,600
payload

669
00:27:09,760 --> 00:27:12,720
that's the slide please

670
00:27:18,559 --> 00:27:21,120
here is the iom relevant to status

671
00:27:21,120 --> 00:27:22,960
update

672
00:27:22,960 --> 00:27:25,279
all iom options

673
00:27:25,279 --> 00:27:26,320
except

674
00:27:26,320 --> 00:27:28,960
direct exporting iom option

675
00:27:28,960 --> 00:27:31,360
are defined in

676
00:27:31,360 --> 00:27:35,200
java ietf ibpm iom data

677
00:27:35,200 --> 00:27:39,679
which is currently in rfc editor queue

678
00:27:39,679 --> 00:27:42,080
the direct exporting ion option is

679
00:27:42,080 --> 00:27:43,440
defined in

680
00:27:43,440 --> 00:27:48,240
java ietf ippm iom direct export

681
00:27:48,240 --> 00:27:50,000
which has passed the working group last

682
00:27:50,000 --> 00:27:53,760
call in ibpm working group

683
00:27:55,360 --> 00:27:58,799
iom over ipv6 encapsulation is defined

684
00:27:58,799 --> 00:27:59,679
in

685
00:27:59,679 --> 00:28:04,559
draft ietf ibpm iom ipv6 options

686
00:28:04,559 --> 00:28:06,399
which has also passed the working group

687
00:28:06,399 --> 00:28:09,679
last call in ippm working group

688
00:28:09,679 --> 00:28:13,320
next slide please

689
00:28:17,200 --> 00:28:20,960
this job outlines on requirements

690
00:28:20,960 --> 00:28:24,080
on iom over beer

691
00:28:24,080 --> 00:28:27,840
some multicast flows such as

692
00:28:27,840 --> 00:28:30,640
live video and real real-time meeting

693
00:28:30,640 --> 00:28:32,799
are positive to packet loss

694
00:28:32,799 --> 00:28:36,080
delay and other factors

695
00:28:36,080 --> 00:28:40,000
nicely a instituto oem provides a way to

696
00:28:40,000 --> 00:28:42,000
achieve on-pass telemetric information

697
00:28:42,000 --> 00:28:43,679
collection

698
00:28:43,679 --> 00:28:46,080
which is necessary for the beer

699
00:28:46,080 --> 00:28:50,080
multitasked network operator

700
00:28:50,559 --> 00:28:54,120
next slide please

701
00:29:02,240 --> 00:29:04,720
this slide illustrates the

702
00:29:04,720 --> 00:29:08,640
iom overview encapsulation

703
00:29:08,640 --> 00:29:11,200
the im data is

704
00:29:11,200 --> 00:29:15,440
immediately following the beer header

705
00:29:15,440 --> 00:29:17,600
it's indicated by

706
00:29:17,600 --> 00:29:20,159
a beer proto

707
00:29:20,159 --> 00:29:21,360
the iom

708
00:29:21,360 --> 00:29:24,880
data contains one or multiple iom

709
00:29:24,880 --> 00:29:26,960
options

710
00:29:26,960 --> 00:29:29,760
and each iom option contains

711
00:29:29,760 --> 00:29:31,440
iom type

712
00:29:31,440 --> 00:29:34,399
iom header lens

713
00:29:34,399 --> 00:29:36,720
next protocol and

714
00:29:36,720 --> 00:29:40,240
iom option data

715
00:29:40,240 --> 00:29:43,279
next protocol field in each

716
00:29:43,279 --> 00:29:44,799
iom option

717
00:29:44,799 --> 00:29:47,679
follows the definition of via proto

718
00:29:47,679 --> 00:29:50,000
field

719
00:29:50,159 --> 00:29:53,279
when multiple iom options are present

720
00:29:53,279 --> 00:29:55,440
the next protocol field

721
00:29:55,440 --> 00:29:58,640
in all iom options

722
00:29:58,640 --> 00:30:01,279
except the last one

723
00:30:01,279 --> 00:30:05,200
is set to indicate the next iom head iom

724
00:30:05,200 --> 00:30:06,799
option

725
00:30:06,799 --> 00:30:10,080
and the next protocol field in the last

726
00:30:10,080 --> 00:30:12,000
iom option

727
00:30:12,000 --> 00:30:16,799
is said to indicate the type of payload

728
00:30:17,919 --> 00:30:20,480
with this encapsulation

729
00:30:20,480 --> 00:30:23,760
ionize requested to assign a new beer

730
00:30:23,760 --> 00:30:25,200
proto

731
00:30:25,200 --> 00:30:28,720
type for iom

732
00:30:30,159 --> 00:30:33,799
next slide please

733
00:30:36,000 --> 00:30:38,799
uh the authors believe this chapter

734
00:30:38,799 --> 00:30:41,760
is really for working group adoption

735
00:30:41,760 --> 00:30:44,799
uh however there was a

736
00:30:44,799 --> 00:30:48,320
there was a big picture tdf

737
00:30:48,320 --> 00:30:52,960
brought up to our attention last weekend

738
00:30:55,520 --> 00:30:59,039
yeah please finish christmas

739
00:30:59,360 --> 00:31:02,480
i admit i didn't follow the evolution of

740
00:31:02,480 --> 00:31:03,679
gdf

741
00:31:03,679 --> 00:31:05,679
closely so

742
00:31:05,679 --> 00:31:08,960
i think i need more time to

743
00:31:08,960 --> 00:31:11,600
learn the advantages of

744
00:31:11,600 --> 00:31:12,720
gdf

745
00:31:12,720 --> 00:31:14,320
if there's any

746
00:31:14,320 --> 00:31:15,519
thank you

747
00:31:15,519 --> 00:31:18,000
okay so let's have a vivid discussion

748
00:31:18,000 --> 00:31:20,080
because i i thought that the mailing is

749
00:31:20,080 --> 00:31:22,799
fired up in a very productive way right

750
00:31:22,799 --> 00:31:25,039
and i think um

751
00:31:25,039 --> 00:31:28,799
i would like opinion on two axes

752
00:31:28,799 --> 00:31:31,360
here the first one is

753
00:31:31,360 --> 00:31:33,200
there is obviously an advantage if we

754
00:31:33,200 --> 00:31:37,919
stick iom on on the beer packet right

755
00:31:38,640 --> 00:31:41,200
because it kind of measures the data

756
00:31:41,200 --> 00:31:44,559
path as it goes and not some artificial

757
00:31:44,559 --> 00:31:45,440
you know

758
00:31:45,440 --> 00:31:48,640
oem stream going

759
00:31:48,640 --> 00:31:50,480
now the problem is however that the beer

760
00:31:50,480 --> 00:31:52,320
header will determine what is the

761
00:31:52,320 --> 00:31:54,799
destination of all this oam information

762
00:31:54,799 --> 00:31:56,159
and

763
00:31:56,159 --> 00:31:58,480
is it desirable that the oem ends up on

764
00:31:58,480 --> 00:32:01,039
all the receivers or do we want to send

765
00:32:01,039 --> 00:32:02,799
basically an oam

766
00:32:02,799 --> 00:32:05,679
operationally per receiver is that the

767
00:32:05,679 --> 00:32:07,600
more common case because it determines

768
00:32:07,600 --> 00:32:10,640
how useful the whole thing is and

769
00:32:10,640 --> 00:32:14,000
the second um discussion point is here

770
00:32:14,000 --> 00:32:16,799
uh the second axis is

771
00:32:16,799 --> 00:32:19,679
no that's the primary axis and as

772
00:32:19,679 --> 00:32:22,559
observation to the presentation uh i

773
00:32:22,559 --> 00:32:24,320
think the authors may have unders

774
00:32:24,320 --> 00:32:26,960
misunderstood how oem is encoded in beer

775
00:32:26,960 --> 00:32:30,080
today oam is its own beer protocol so

776
00:32:30,080 --> 00:32:32,559
the oam packet does not carry a payload

777
00:32:32,559 --> 00:32:34,720
behind it and greg mursky will correct

778
00:32:34,720 --> 00:32:36,559
me if i'm wrong but i think that was how

779
00:32:36,559 --> 00:32:39,200
all oem was intended so it's in fact a

780
00:32:39,200 --> 00:32:40,960
separate stream from the real data

781
00:32:40,960 --> 00:32:43,200
stream so uh

782
00:32:43,200 --> 00:32:45,600
i would encourage discussion along those

783
00:32:45,600 --> 00:32:47,039
lines i think the work is extremely

784
00:32:47,039 --> 00:32:49,039
interesting and then we can get to all

785
00:32:49,039 --> 00:32:50,720
the like you know greater detail like

786
00:32:50,720 --> 00:32:53,039
whether we should fragment and gdf and

787
00:32:53,039 --> 00:32:56,799
assignments and so on thanks

788
00:32:56,799 --> 00:32:59,679
okay all right jeffrey uh mike is yours

789
00:32:59,679 --> 00:33:01,519
so please state association and name

790
00:33:01,519 --> 00:33:02,880
every time

791
00:33:02,880 --> 00:33:06,559
okay jeffrey or darkway from juniper

792
00:33:06,559 --> 00:33:07,840
um so

793
00:33:07,840 --> 00:33:10,320
about inc uh how do you

794
00:33:10,320 --> 00:33:13,120
encapsulate the uh including the iom

795
00:33:13,120 --> 00:33:14,159
data

796
00:33:14,159 --> 00:33:16,559
of the two options uh

797
00:33:16,559 --> 00:33:19,519
one requires a beer extension header

798
00:33:19,519 --> 00:33:20,559
um

799
00:33:20,559 --> 00:33:24,320
i suggest that any discussion uh related

800
00:33:24,320 --> 00:33:26,000
to that

801
00:33:26,000 --> 00:33:28,960
extension header we defer that to to

802
00:33:28,960 --> 00:33:31,600
today to the uh presentation the last

803
00:33:31,600 --> 00:33:33,120
presentation today

804
00:33:33,120 --> 00:33:36,159
that talks about exactly that topic

805
00:33:36,159 --> 00:33:38,880
um i'll have more or more

806
00:33:38,880 --> 00:33:41,519
details and information

807
00:33:41,519 --> 00:33:43,679
available for as part of my presentation

808
00:33:43,679 --> 00:33:46,240
at the end

809
00:33:46,799 --> 00:33:47,840
uh

810
00:33:47,840 --> 00:33:51,080
can run

811
00:34:01,760 --> 00:34:03,840
and i have showed my concerns and

812
00:34:03,840 --> 00:34:06,640
objection in the middle list there are

813
00:34:06,640 --> 00:34:10,079
already several iom encapsulations

814
00:34:10,079 --> 00:34:13,918
and i cannot find any advantage from

815
00:34:13,918 --> 00:34:17,158
this draft

816
00:34:24,480 --> 00:34:27,280
okay so i think the main objection was

817
00:34:27,280 --> 00:34:28,639
that

818
00:34:28,639 --> 00:34:31,520
the payloads carried in the beer packets

819
00:34:31,520 --> 00:34:35,280
they have their own oan but now the

820
00:34:35,280 --> 00:34:36,879
question is

821
00:34:36,879 --> 00:34:39,040
should we rely on that that was not the

822
00:34:39,040 --> 00:34:41,119
beer architecture right based on the

823
00:34:41,119 --> 00:34:43,918
requirements by providers the they

824
00:34:43,918 --> 00:34:47,440
wanted oem directly on the

825
00:34:47,440 --> 00:34:50,079
layer 2.5 because it would start to

826
00:34:50,079 --> 00:34:52,800
stick ipv6 packets and

827
00:34:52,800 --> 00:34:55,918
into beer and then assume that the ipv6

828
00:34:55,918 --> 00:34:59,200
within beer does the oam

829
00:34:59,200 --> 00:35:01,440
that was something we didn't discuss out

830
00:35:01,440 --> 00:35:02,480
but

831
00:35:02,480 --> 00:35:05,920
yes that's also a thing that is a

832
00:35:05,920 --> 00:35:09,839
possible solution space data point so

833
00:35:09,839 --> 00:35:11,599
i would defer this discussion to the

834
00:35:11,599 --> 00:35:13,839
list

835
00:35:14,640 --> 00:35:17,640
greg

836
00:35:18,160 --> 00:35:21,359
i just want to point out that um

837
00:35:21,359 --> 00:35:24,079
let's not uh assume that

838
00:35:24,079 --> 00:35:27,680
um active oem does not follow uh the

839
00:35:27,680 --> 00:35:31,119
same path as as a

840
00:35:31,119 --> 00:35:35,839
data flow the beer flow that it monitors

841
00:35:35,839 --> 00:35:37,359
so um

842
00:35:37,359 --> 00:35:40,240
in terms of what is being monitored and

843
00:35:40,240 --> 00:35:41,359
measured

844
00:35:41,359 --> 00:35:43,760
uh i don't see a difference whether we

845
00:35:43,760 --> 00:35:47,920
use iom or active oam

846
00:35:47,920 --> 00:35:51,520
uh greg so i quickly jump in this is

847
00:35:51,520 --> 00:35:54,400
true to an extent you cannot guarantee

848
00:35:54,400 --> 00:35:56,480
that the oem is following the same

849
00:35:56,480 --> 00:35:58,400
queuing disciplines through the boxes

850
00:35:58,400 --> 00:36:00,720
and oem may have different packet sizes

851
00:36:00,720 --> 00:36:02,640
which all affect delay jitter and other

852
00:36:02,640 --> 00:36:03,839
stuff

853
00:36:03,839 --> 00:36:06,560
right but at the same at the same time

854
00:36:06,560 --> 00:36:11,280
uh then if uh we use iem trace options

855
00:36:11,280 --> 00:36:15,920
up by hub so uh the space for uh

856
00:36:15,920 --> 00:36:18,839
telemetry information either has to be

857
00:36:18,839 --> 00:36:21,920
pre-allocated by their

858
00:36:21,920 --> 00:36:24,079
ingress

859
00:36:24,079 --> 00:36:25,359
bfr

860
00:36:25,359 --> 00:36:28,960
or are incrementally added by their bfrs

861
00:36:28,960 --> 00:36:32,800
as it transits so right

862
00:36:33,119 --> 00:36:35,839
and that affects and skews the metric so

863
00:36:35,839 --> 00:36:38,720
right and the ioms causes fragmentation

864
00:36:38,720 --> 00:36:40,800
then the whole thing will go to pieces

865
00:36:40,800 --> 00:36:42,640
anyway right so those are interesting

866
00:36:42,640 --> 00:36:47,319
discussions uh yes thank you

867
00:36:49,780 --> 00:36:52,869
[Music]

868
00:36:54,000 --> 00:36:57,119
in this job the dear iom is defined as a

869
00:36:57,119 --> 00:37:00,400
upper layer of beer header i think it is

870
00:37:00,400 --> 00:37:02,720
the inner permit

871
00:37:02,720 --> 00:37:04,079
for beer

872
00:37:04,079 --> 00:37:07,280
for for bfr to handle the upper layer

873
00:37:07,280 --> 00:37:10,800
encapsulation of br

874
00:37:12,320 --> 00:37:15,440
okay thanks

875
00:37:18,320 --> 00:37:20,079
i have to admit i couldn't follow that

876
00:37:20,079 --> 00:37:23,079
really

877
00:37:28,079 --> 00:37:30,400
so i see now please send your question

878
00:37:30,400 --> 00:37:33,040
to the list probably it's

879
00:37:33,040 --> 00:37:37,560
difficult to understand ciao

880
00:37:39,599 --> 00:37:42,240
so the question from tony second

881
00:37:42,240 --> 00:37:46,880
question uh iom is in c2 so uh the iom

882
00:37:46,880 --> 00:37:48,640
header is

883
00:37:48,640 --> 00:37:49,760
with the

884
00:37:49,760 --> 00:37:53,520
packet the the data packet of the beer

885
00:37:53,520 --> 00:37:55,920
so it's not just

886
00:37:55,920 --> 00:37:57,440
uh

887
00:37:57,440 --> 00:38:01,359
active om so it's in situ om it's with a

888
00:38:01,359 --> 00:38:03,359
package data packet

889
00:38:03,359 --> 00:38:04,960
now second today i want to say uh

890
00:38:04,960 --> 00:38:06,640
currently we have

891
00:38:06,640 --> 00:38:08,400
already two adopted

892
00:38:08,400 --> 00:38:10,720
i am encapsulation jobs

893
00:38:10,720 --> 00:38:11,920
they are im

894
00:38:11,920 --> 00:38:14,240
over ipv6 im over

895
00:38:14,240 --> 00:38:16,720
sfc nsh

896
00:38:16,720 --> 00:38:20,720
so i think i over beer is similar to

897
00:38:20,720 --> 00:38:21,599
this

898
00:38:21,599 --> 00:38:26,960
to encapsulations especially iom or nsh

899
00:38:26,960 --> 00:38:30,480
i i would uh contradict that go look at

900
00:38:30,480 --> 00:38:32,480
all the supported beer protocol in the

901
00:38:32,480 --> 00:38:35,680
registry for example ethernet

902
00:38:35,680 --> 00:38:37,839
and uh

903
00:38:37,839 --> 00:38:40,079
all kind of mpls things

904
00:38:40,079 --> 00:38:42,800
so with you cannot rely on the fact that

905
00:38:42,800 --> 00:38:45,440
the payload will always have its own oem

906
00:38:45,440 --> 00:38:47,200
it's an interesting discussion of course

907
00:38:47,200 --> 00:38:48,800
right but uh

908
00:38:48,800 --> 00:38:51,599
your point is that the

909
00:38:51,599 --> 00:38:53,359
payload carried by beer will always have

910
00:38:53,359 --> 00:38:56,560
an aom is an assumption which will not

911
00:38:56,560 --> 00:38:57,760
hold up

912
00:38:57,760 --> 00:39:00,000
okay

913
00:39:11,440 --> 00:39:12,400
hello

914
00:39:12,400 --> 00:39:13,599
hello

915
00:39:13,599 --> 00:39:15,040
we can you hear me

916
00:39:15,040 --> 00:39:18,560
yeah okay uh i uh came in from hawaii uh

917
00:39:18,560 --> 00:39:20,880
i have this following comments

918
00:39:20,880 --> 00:39:24,240
uh first i i in fact i already explained

919
00:39:24,240 --> 00:39:27,359
my concern in the main list

920
00:39:27,359 --> 00:39:28,480
ever before

921
00:39:28,480 --> 00:39:29,440
first

922
00:39:29,440 --> 00:39:32,720
i mean that's the duplicate the iom

923
00:39:32,720 --> 00:39:35,520
functionality because the imprs has the

924
00:39:35,520 --> 00:39:39,599
iom ipv6 has iom and also this the beer

925
00:39:39,599 --> 00:39:42,960
is the independent layer it also has iom

926
00:39:42,960 --> 00:39:46,560
if the beer over mpr's appear over ipv6

927
00:39:46,560 --> 00:39:48,960
there's the duplicate rm this is the

928
00:39:48,960 --> 00:39:51,440
functionality and the encapsulation

929
00:39:51,440 --> 00:39:53,839
i think i don't know how to cope with

930
00:39:53,839 --> 00:39:56,400
this situation the first one

931
00:39:56,400 --> 00:39:58,640
the second one because here is the

932
00:39:58,640 --> 00:40:01,359
because discuss about this iom but you

933
00:40:01,359 --> 00:40:03,040
notice now this

934
00:40:03,040 --> 00:40:05,359
there's also the network slicing and

935
00:40:05,359 --> 00:40:07,839
there's maybe also some this the

936
00:40:07,839 --> 00:40:10,160
alternative alternative marking

937
00:40:10,160 --> 00:40:12,240
encapsulation

938
00:40:12,240 --> 00:40:14,800
functionality that's the ipv6 is

939
00:40:14,800 --> 00:40:17,920
supported i'm not sure if the

940
00:40:17,920 --> 00:40:19,040
slice

941
00:40:19,040 --> 00:40:21,280
for the beer or some this alternate

942
00:40:21,280 --> 00:40:23,920
marking for the for the beer do we need

943
00:40:23,920 --> 00:40:27,280
to go on to extend or define this the

944
00:40:27,280 --> 00:40:29,760
extension header for the br layer to

945
00:40:29,760 --> 00:40:32,319
support this functionality or not

946
00:40:32,319 --> 00:40:33,680
the second one

947
00:40:33,680 --> 00:40:36,480
the third one i think that's if this iom

948
00:40:36,480 --> 00:40:37,839
is

949
00:40:37,839 --> 00:40:39,119
is

950
00:40:39,119 --> 00:40:41,680
defined for the br layer i think this is

951
00:40:41,680 --> 00:40:44,480
for the ipv6 they also have this the

952
00:40:44,480 --> 00:40:45,680
ipsec

953
00:40:45,680 --> 00:40:48,960
and if the ipsec is used with the ipv6

954
00:40:48,960 --> 00:40:51,440
so that's the br header and also this

955
00:40:51,440 --> 00:40:55,520
the iom header will include encrypted so

956
00:40:55,520 --> 00:40:58,240
i don't think how to encapsulate this

957
00:40:58,240 --> 00:41:01,520
information in the br br header if over

958
00:41:01,520 --> 00:41:05,640
ipv6 data plane

959
00:41:08,480 --> 00:41:11,200
okay that's that's all my comments

960
00:41:11,200 --> 00:41:14,240
jeffrey you want to address the beer

961
00:41:14,240 --> 00:41:17,920
the beer over v6 ipsec

962
00:41:17,920 --> 00:41:19,920
comment because the rest was basically

963
00:41:19,920 --> 00:41:21,599
all the same thing excel

964
00:41:21,599 --> 00:41:24,000
that the payload was already over in

965
00:41:24,000 --> 00:41:26,800
um okay jeffrey from juniper

966
00:41:26,800 --> 00:41:29,119
um

967
00:41:29,280 --> 00:41:33,040
in the ipv6 environment

968
00:41:33,280 --> 00:41:36,480
the one option to do uh to the beer is

969
00:41:36,480 --> 00:41:37,359
uh

970
00:41:37,359 --> 00:41:38,560
that's uh

971
00:41:38,560 --> 00:41:41,599
you do not need the ipv6 uh

972
00:41:41,599 --> 00:41:44,720
at all always uh

973
00:41:44,720 --> 00:41:47,520
you can uh between the two adjacent uh

974
00:41:47,520 --> 00:41:50,079
bfrs you could just be the beer header

975
00:41:50,079 --> 00:41:51,599
following the

976
00:41:51,599 --> 00:41:55,520
ethernet header so their ipvx does not

977
00:41:55,520 --> 00:41:57,200
apply at all

978
00:41:57,200 --> 00:42:00,880
and even when we do need to

979
00:42:00,880 --> 00:42:03,200
use a

980
00:42:03,200 --> 00:42:06,960
ipv6 tunnel between two

981
00:42:06,960 --> 00:42:09,920
bfrs that are not directly connected

982
00:42:09,920 --> 00:42:12,000
at that time

983
00:42:12,000 --> 00:42:13,359
the

984
00:42:13,359 --> 00:42:17,119
the iom information um which is specific

985
00:42:17,119 --> 00:42:18,960
uh when if it's

986
00:42:18,960 --> 00:42:20,560
specific to beer

987
00:42:20,560 --> 00:42:23,119
then that should be it should go along

988
00:42:23,119 --> 00:42:25,520
with the beer header itself instead of

989
00:42:25,520 --> 00:42:27,359
at ipv6 level

990
00:42:27,359 --> 00:42:29,040
that's that's how i say it and i don't

991
00:42:29,040 --> 00:42:30,480
see how

992
00:42:30,480 --> 00:42:33,520
encapsulation plays

993
00:42:33,520 --> 00:42:36,160
plays a role here because let's say you

994
00:42:36,160 --> 00:42:38,000
have a

995
00:42:38,000 --> 00:42:39,280
encapsulation

996
00:42:39,280 --> 00:42:43,839
for the ipv6 tunnel but that's fine and

997
00:42:43,839 --> 00:42:46,319
beer had a beer processing does not

998
00:42:46,319 --> 00:42:47,280
happen

999
00:42:47,280 --> 00:42:50,319
until you exited ipv6 tunnel so even if

1000
00:42:50,319 --> 00:42:52,400
your ipv6 tunnel is inc

1001
00:42:52,400 --> 00:42:55,520
encrypted that's fine

1002
00:42:56,880 --> 00:42:58,480
yep pretty much

1003
00:42:58,480 --> 00:43:00,640
uh concurs with what i'm thinking thank

1004
00:43:00,640 --> 00:43:02,240
geoffrey

1005
00:43:02,240 --> 00:43:04,880
and more generically we've always had

1006
00:43:04,880 --> 00:43:06,560
different other mechanics different

1007
00:43:06,560 --> 00:43:08,319
players because they have different

1008
00:43:08,319 --> 00:43:10,240
semantics potentially different speeds

1009
00:43:10,240 --> 00:43:12,960
so i don't see how having i am in one

1010
00:43:12,960 --> 00:43:15,119
layer would substitute for beer

1011
00:43:15,119 --> 00:43:17,680
specifically

1012
00:43:17,680 --> 00:43:18,480
yeah

1013
00:43:18,480 --> 00:43:20,319
well that's why we have to appear less

1014
00:43:20,319 --> 00:43:22,240
pink and the other pink and overlay

1015
00:43:22,240 --> 00:43:23,760
pinks and everything going at the same

1016
00:43:23,760 --> 00:43:26,880
time yeah

1017
00:43:26,880 --> 00:43:29,280
i sorry i also had this the last

1018
00:43:29,280 --> 00:43:31,680
comments i want to know that you could

1019
00:43:31,680 --> 00:43:34,800
defend this the extension header such as

1020
00:43:34,800 --> 00:43:38,000
the iom and also the maybe later some

1021
00:43:38,000 --> 00:43:40,720
network slicing or maybe alternate

1022
00:43:40,720 --> 00:43:42,560
marking or apn

1023
00:43:42,560 --> 00:43:44,960
so if this is in the charter of the br

1024
00:43:44,960 --> 00:43:47,920
working group or not

1025
00:43:47,920 --> 00:43:49,440
because from my point of view there's

1026
00:43:49,440 --> 00:43:51,599
there's maybe more functionality to be

1027
00:43:51,599 --> 00:43:53,920
defined

1028
00:43:53,920 --> 00:43:57,520
you mean using basically kind of this uh

1029
00:43:57,520 --> 00:44:00,240
shim in between like iom is using yeah

1030
00:44:00,240 --> 00:44:02,640
it's a good discussion i have i have no

1031
00:44:02,640 --> 00:44:03,920
no enter i think it's all a very

1032
00:44:03,920 --> 00:44:05,680
interesting proposal to discuss through

1033
00:44:05,680 --> 00:44:07,599
whether that makes sense to put the shim

1034
00:44:07,599 --> 00:44:11,200
between the payload after the pr

1035
00:44:13,839 --> 00:44:16,079
i want to add jeffrey from junior i want

1036
00:44:16,079 --> 00:44:18,240
to add that

1037
00:44:18,240 --> 00:44:21,040
in case of beer over mpos

1038
00:44:21,040 --> 00:44:23,440
in most situation the

1039
00:44:23,440 --> 00:44:26,079
you uh there is no nps tunnel

1040
00:44:26,079 --> 00:44:29,280
um and then the label

1041
00:44:29,280 --> 00:44:31,599
uh is only to indicate that the beer

1042
00:44:31,599 --> 00:44:33,520
header follows and then

1043
00:44:33,520 --> 00:44:38,000
this gives you the bp5d so in that case

1044
00:44:38,000 --> 00:44:39,280
putting the

1045
00:44:39,280 --> 00:44:42,240
beer or iom information as an mqs

1046
00:44:42,240 --> 00:44:44,079
extension header does not

1047
00:44:44,079 --> 00:44:47,520
make sense either and that's one point

1048
00:44:47,520 --> 00:44:51,280
another thing is that if there is a a

1049
00:44:51,280 --> 00:44:53,440
reason to have a

1050
00:44:53,440 --> 00:44:55,920
beer extension header

1051
00:44:55,920 --> 00:44:58,240
for example for apm for whatever purpose

1052
00:44:58,240 --> 00:45:01,440
for slicing as long as you need a peer

1053
00:45:01,440 --> 00:45:04,240
extension header then let's defer that

1054
00:45:04,240 --> 00:45:09,040
discussion to the end of today's session

1055
00:45:09,040 --> 00:45:11,920
where i my my presentation talks about

1056
00:45:11,920 --> 00:45:15,800
that topic exactly

1057
00:45:22,240 --> 00:45:24,000
uh if there are no more comments i'll

1058
00:45:24,000 --> 00:45:25,520
propose to take this to the list it's a

1059
00:45:25,520 --> 00:45:28,680
good discussion

1060
00:45:37,520 --> 00:45:39,520
okay the new dark is being shared hi

1061
00:45:39,520 --> 00:45:42,079
this is dirk crosston from uh huawei i'm

1062
00:45:42,079 --> 00:45:44,000
talking about

1063
00:45:44,000 --> 00:45:46,960
frm i realize there is one letter more

1064
00:45:46,960 --> 00:45:49,680
than the fr i don't know presentation

1065
00:45:49,680 --> 00:45:51,280
that's weird

1066
00:45:51,280 --> 00:45:53,119
oh oh it's

1067
00:45:53,119 --> 00:45:53,839
it's

1068
00:45:53,839 --> 00:45:55,359
right

1069
00:45:55,359 --> 00:45:59,160
f r m

1070
00:46:10,640 --> 00:46:12,400
just look at it maybe this one the http

1071
00:46:12,400 --> 00:46:15,400
one

1072
00:46:16,000 --> 00:46:18,079
let me see how it looks that's the one

1073
00:46:18,079 --> 00:46:22,000
oh yeah sorry okay

1074
00:46:22,400 --> 00:46:24,880
still labeled http um so if you go to

1075
00:46:24,880 --> 00:46:26,880
the next one please

1076
00:46:26,880 --> 00:46:28,560
so this is a zero zero draft but there's

1077
00:46:28,560 --> 00:46:30,560
some legacy to this draft um i just

1078
00:46:30,560 --> 00:46:32,240
wanted to point out

1079
00:46:32,240 --> 00:46:34,480
the draft regionates from uh and now

1080
00:46:34,480 --> 00:46:36,319
expire traffic which was in uh version

1081
00:46:36,319 --> 00:46:37,119
six

1082
00:46:37,119 --> 00:46:40,079
on multicast http it was very focused on

1083
00:46:40,079 --> 00:46:41,359
there was an applicability oriented

1084
00:46:41,359 --> 00:46:43,200
traffic to realize http based scenarios

1085
00:46:43,200 --> 00:46:44,960
in a beer environment

1086
00:46:44,960 --> 00:46:46,160
uh

1087
00:46:46,160 --> 00:46:48,400
must have been the order of

1088
00:46:48,400 --> 00:46:50,400
three and a half years old i think i

1089
00:46:50,400 --> 00:46:52,720
still started that in my old company

1090
00:46:52,720 --> 00:46:55,200
uh before joining huawei it was in

1091
00:46:55,200 --> 00:46:57,200
be a working group last call it returned

1092
00:46:57,200 --> 00:46:59,200
very useful comments and feedbacks from

1093
00:46:59,200 --> 00:47:01,599
the application areas we had a couple of

1094
00:47:01,599 --> 00:47:04,640
discussions around january time etc but

1095
00:47:04,640 --> 00:47:06,720
we took this back to the original author

1096
00:47:06,720 --> 00:47:09,119
set to see if there is an interest to

1097
00:47:09,119 --> 00:47:11,119
continue on this and there's

1098
00:47:11,119 --> 00:47:11,839
the

1099
00:47:11,839 --> 00:47:13,680
organizational reasons why that didn't

1100
00:47:13,680 --> 00:47:16,319
happen so i was told by the author said

1101
00:47:16,319 --> 00:47:17,599
there wouldn't be any interest to

1102
00:47:17,599 --> 00:47:18,960
continue this

1103
00:47:18,960 --> 00:47:20,559
which is the reason for the zero zero

1104
00:47:20,559 --> 00:47:21,920
draft so i

1105
00:47:21,920 --> 00:47:23,280
restarted this

1106
00:47:23,280 --> 00:47:24,559
because of the interest in the original

1107
00:47:24,559 --> 00:47:27,119
trial so i i thought letting this trap

1108
00:47:27,119 --> 00:47:28,960
um would be a shame

1109
00:47:28,960 --> 00:47:30,640
so if you go to the next slide please so

1110
00:47:30,640 --> 00:47:33,839
what i've done in this version now is

1111
00:47:33,839 --> 00:47:37,040
to take the um to generalize the draft

1112
00:47:37,040 --> 00:47:38,400
so it's been generalized towards a new

1113
00:47:38,400 --> 00:47:40,319
communication semantic which in that's

1114
00:47:40,319 --> 00:47:42,160
done in section three

1115
00:47:42,160 --> 00:47:45,599
um which now is applicable to use cases

1116
00:47:45,599 --> 00:47:47,520
that are more than just http so we've

1117
00:47:47,520 --> 00:47:49,599
turned an http applicability draft into

1118
00:47:49,599 --> 00:47:52,640
one that is tackling a communication

1119
00:47:52,640 --> 00:47:54,800
semantic there so there are more use

1120
00:47:54,800 --> 00:47:56,240
cases being given

1121
00:47:56,240 --> 00:47:58,559
and then uh sections five six and seven

1122
00:47:58,559 --> 00:48:01,200
they are adapted from the original craft

1123
00:48:01,200 --> 00:48:03,440
uh uh in order to support the more

1124
00:48:03,440 --> 00:48:05,680
general semantics so it's kind of like

1125
00:48:05,680 --> 00:48:08,559
removing or replacing some of the http

1126
00:48:08,559 --> 00:48:10,240
um terminology

1127
00:48:10,240 --> 00:48:12,079
uh section eight is meant to be a

1128
00:48:12,079 --> 00:48:13,839
placeholder uh to incorporate the

1129
00:48:13,839 --> 00:48:15,520
comments and discussions that were

1130
00:48:15,520 --> 00:48:17,119
received from the app area that i

1131
00:48:17,119 --> 00:48:18,880
mentioned that we discussed in january

1132
00:48:18,880 --> 00:48:20,800
it's still a place where it's empty uh

1133
00:48:20,800 --> 00:48:22,880
i'm working currently on on on on on

1134
00:48:22,880 --> 00:48:24,640
putting the pieces in there

1135
00:48:24,640 --> 00:48:27,920
if you go to the next slide please

1136
00:48:28,480 --> 00:48:29,520
so

1137
00:48:29,520 --> 00:48:31,359
very briefly the court

1138
00:48:31,359 --> 00:48:33,040
change is really to introduce this new

1139
00:48:33,040 --> 00:48:34,960
semantic frm which stands for fault

1140
00:48:34,960 --> 00:48:37,599
request return multicast semantic which

1141
00:48:37,599 --> 00:48:39,760
defines a very which you could already

1142
00:48:39,760 --> 00:48:40,960
see in the original draft in the

1143
00:48:40,960 --> 00:48:43,280
original http draft um

1144
00:48:43,280 --> 00:48:44,480
a

1145
00:48:44,480 --> 00:48:46,000
multicast communication semantic is

1146
00:48:46,000 --> 00:48:47,920
extremely flexible so here a datagram

1147
00:48:47,920 --> 00:48:49,920
with the source address s is towards the

1148
00:48:49,920 --> 00:48:52,800
destination d1 to dn is formed as one or

1149
00:48:52,800 --> 00:48:55,440
more responses to adequate requests from

1150
00:48:55,440 --> 00:48:57,359
those destinations the mono requests

1151
00:48:57,359 --> 00:48:59,200
that come in the forward direction

1152
00:48:59,200 --> 00:49:02,079
2s but the ephemeral group address r is

1153
00:49:02,079 --> 00:49:03,359
defined through an identifying

1154
00:49:03,359 --> 00:49:04,720
characteristic

1155
00:49:04,720 --> 00:49:07,200
across all received uh requests the

1156
00:49:07,200 --> 00:49:08,640
identifying characteristic is an

1157
00:49:08,640 --> 00:49:11,200
implementation specific parameter that's

1158
00:49:11,200 --> 00:49:12,960
used to distinguish among different

1159
00:49:12,960 --> 00:49:14,559
requests

1160
00:49:14,559 --> 00:49:16,160
if you translate it back from the old

1161
00:49:16,160 --> 00:49:18,720
http case essentially the things like an

1162
00:49:18,720 --> 00:49:20,640
http uri was used in the http

1163
00:49:20,640 --> 00:49:22,800
applicability draft to differentiate

1164
00:49:22,800 --> 00:49:24,640
requests so if you have

1165
00:49:24,640 --> 00:49:27,440
one set of requests coming into a single

1166
00:49:27,440 --> 00:49:31,040
uri you you created a dynamic multicast

1167
00:49:31,040 --> 00:49:32,960
response if the uri was different it

1168
00:49:32,960 --> 00:49:34,480
created a different ephemeral group

1169
00:49:34,480 --> 00:49:36,480
address so this is the generalization of

1170
00:49:36,480 --> 00:49:38,319
that idea

1171
00:49:38,319 --> 00:49:39,760
the nature of that multicast is

1172
00:49:39,760 --> 00:49:41,599
inherently dynamic so the multicast

1173
00:49:41,599 --> 00:49:43,359
responses are formed in response to

1174
00:49:43,359 --> 00:49:45,760
incoming requests they may differ in

1175
00:49:45,760 --> 00:49:47,440
extremely short time frames and the

1176
00:49:47,440 --> 00:49:48,559
initial

1177
00:49:48,559 --> 00:49:51,359
example of the http case um was

1178
00:49:51,359 --> 00:49:53,920
showcasing that um with over-the-top

1179
00:49:53,920 --> 00:49:55,839
video people are viewing the same thing

1180
00:49:55,839 --> 00:49:57,359
and you're starting to deliver the

1181
00:49:57,359 --> 00:49:59,280
actual chunk request as

1182
00:49:59,280 --> 00:50:01,680
multicast responses back to the actual

1183
00:50:01,680 --> 00:50:04,240
clients that was the idea there

1184
00:50:04,240 --> 00:50:07,439
go to the next slide please

1185
00:50:08,160 --> 00:50:10,400
so the next steps really here are a to

1186
00:50:10,400 --> 00:50:12,160
firmware from the details section six

1187
00:50:12,160 --> 00:50:13,920
and seven um you know

1188
00:50:13,920 --> 00:50:15,119
based on the

1189
00:50:15,119 --> 00:50:17,680
frm generalization to incorporate the

1190
00:50:17,680 --> 00:50:19,200
comments from the list

1191
00:50:19,200 --> 00:50:22,480
that were received into section eight

1192
00:50:22,480 --> 00:50:24,079
and obviously to incorporate any

1193
00:50:24,079 --> 00:50:27,359
feedback comments from from the list you

1194
00:50:27,359 --> 00:50:29,520
know on this work and in particular if

1195
00:50:29,520 --> 00:50:31,040
you go to the last slide

1196
00:50:31,040 --> 00:50:32,480
it's the main question this is a short

1197
00:50:32,480 --> 00:50:34,800
presentation meant to be

1198
00:50:34,800 --> 00:50:36,559
um really answering the question or

1199
00:50:36,559 --> 00:50:37,760
getting an answer to the question from

1200
00:50:37,760 --> 00:50:39,040
our side if the work is still of

1201
00:50:39,040 --> 00:50:40,960
relevance to this group um is this

1202
00:50:40,960 --> 00:50:42,800
something the group feels uh worthwhile

1203
00:50:42,800 --> 00:50:44,079
to continue

1204
00:50:44,079 --> 00:50:45,920
um with a changed author set at the

1205
00:50:45,920 --> 00:50:48,720
moment for the reasons mentioned

1206
00:50:48,720 --> 00:50:51,280
i would also like to understand more if

1207
00:50:51,280 --> 00:50:53,040
if this work is more widely applicable

1208
00:50:53,040 --> 00:50:55,119
even though section

1209
00:50:55,119 --> 00:50:56,559
six and seven in particular are being

1210
00:50:56,559 --> 00:50:58,640
described but beer in mind is this uh

1211
00:50:58,640 --> 00:50:59,839
given that it's talking about the

1212
00:50:59,839 --> 00:51:00,880
general

1213
00:51:00,880 --> 00:51:02,880
communication semantic is are there are

1214
00:51:02,880 --> 00:51:05,119
there other underlay techniques that

1215
00:51:05,119 --> 00:51:06,960
could be utilized for that

1216
00:51:06,960 --> 00:51:08,960
any thoughts that anybody had i it would

1217
00:51:08,960 --> 00:51:10,800
be very welcome

1218
00:51:10,800 --> 00:51:12,800
and obviously this was being put out

1219
00:51:12,800 --> 00:51:14,800
rather quickly as a zero zero with

1220
00:51:14,800 --> 00:51:16,319
myself as the

1221
00:51:16,319 --> 00:51:17,920
single author at the moment i'm very

1222
00:51:17,920 --> 00:51:19,200
much looking for other contributors to

1223
00:51:19,200 --> 00:51:21,760
the work out there in particular

1224
00:51:21,760 --> 00:51:23,440
if the first question is positively

1225
00:51:23,440 --> 00:51:24,640
answered and maybe the second one as

1226
00:51:24,640 --> 00:51:26,400
well so willing to drive the draft

1227
00:51:26,400 --> 00:51:28,720
forward i would be

1228
00:51:28,720 --> 00:51:30,160
very happy to hear anything of that

1229
00:51:30,160 --> 00:51:33,319
thank you

1230
00:51:37,839 --> 00:51:40,160
okay so if no one else is on the queue i

1231
00:51:40,160 --> 00:51:44,800
jump in um tony juniper um

1232
00:51:44,800 --> 00:51:46,559
yes that looks interesting but it also

1233
00:51:46,559 --> 00:51:48,880
looks like reliable multicast

1234
00:51:48,880 --> 00:51:50,960
generic reliable multicast which is kind

1235
00:51:50,960 --> 00:51:52,800
of you know one of the famous red holes

1236
00:51:52,800 --> 00:51:55,200
it can be solved wonderful well it's not

1237
00:51:55,200 --> 00:51:57,920
the full reliable multicast but you know

1238
00:51:57,920 --> 00:52:00,160
from one source to multiple destinations

1239
00:52:00,160 --> 00:52:02,160
um

1240
00:52:02,160 --> 00:52:04,400
no opinion whether we should uh you know

1241
00:52:04,400 --> 00:52:07,599
take on anything like that um whether it

1242
00:52:07,599 --> 00:52:10,640
should be done some other uh context i

1243
00:52:10,640 --> 00:52:12,559
think it very much depends on the

1244
00:52:12,559 --> 00:52:14,800
interest within the group so comment

1245
00:52:14,800 --> 00:52:17,440
please if you're interested uh you know

1246
00:52:17,440 --> 00:52:19,200
uh in this kind of work or do you think

1247
00:52:19,200 --> 00:52:21,359
that would make sense

1248
00:52:21,359 --> 00:52:23,040
maybe one short feedback on the reliable

1249
00:52:23,040 --> 00:52:25,440
multicast on but isn't necessarily um as

1250
00:52:25,440 --> 00:52:26,559
you already mentioned it doesn't need to

1251
00:52:26,559 --> 00:52:28,559
be reliable multicast uh it really

1252
00:52:28,559 --> 00:52:29,680
depends on some of the service

1253
00:52:29,680 --> 00:52:31,119
implication protocols we've been looking

1254
00:52:31,119 --> 00:52:32,319
at there they're not necessarily

1255
00:52:32,319 --> 00:52:34,400
reliable they're relatively transmitted

1256
00:52:34,400 --> 00:52:36,480
that may may happen as well i'm sort of

1257
00:52:36,480 --> 00:52:38,960
stepping away because taller says i yeah

1258
00:52:38,960 --> 00:52:40,480
i'm trying to sneak through without the

1259
00:52:40,480 --> 00:52:42,960
stupid application and phone and so

1260
00:52:42,960 --> 00:52:44,800
consider myself the button to be clicked

1261
00:52:44,800 --> 00:52:47,280
sorry about that um no i mean the way i

1262
00:52:47,280 --> 00:52:49,599
was joining the original effort which

1263
00:52:49,599 --> 00:52:51,520
unfortunately due to the

1264
00:52:51,520 --> 00:52:54,559
you know main authors uh um

1265
00:52:54,559 --> 00:52:56,000
failed was um

1266
00:52:56,000 --> 00:52:59,760
that i i felt that um this this was back

1267
00:52:59,760 --> 00:53:02,480
then the best option to promote

1268
00:53:02,480 --> 00:53:03,680
the new

1269
00:53:03,680 --> 00:53:06,880
um multicast model that beer gives

1270
00:53:06,880 --> 00:53:10,319
by being able for the sender to indicate

1271
00:53:10,319 --> 00:53:12,800
the explicit set of receivers for every

1272
00:53:12,800 --> 00:53:15,119
individual packet and we haven't really

1273
00:53:15,119 --> 00:53:17,839
leveraged on on that opportunity yet and

1274
00:53:17,839 --> 00:53:20,640
so maybe it is a good thing that we can

1275
00:53:20,640 --> 00:53:22,640
try to broaden the scope of

1276
00:53:22,640 --> 00:53:25,599
explaining exactly that functionality um

1277
00:53:25,599 --> 00:53:28,559
to to find more interested beer and the

1278
00:53:28,559 --> 00:53:30,240
fact that we're forwarding through

1279
00:53:30,240 --> 00:53:33,040
sender defined um bits

1280
00:53:33,040 --> 00:53:35,040
to receivers right so

1281
00:53:35,040 --> 00:53:37,760
um that that that would be my very ad

1282
00:53:37,760 --> 00:53:40,960
hoc bad sales pitch and i'll try to join

1283
00:53:40,960 --> 00:53:43,359
the effort by some appropriate word on

1284
00:53:43,359 --> 00:53:45,680
on some other use cases so i'm not quite

1285
00:53:45,680 --> 00:53:47,040
sure how to structure the whole thing

1286
00:53:47,040 --> 00:53:49,520
but if you want to sell beer the beer

1287
00:53:49,520 --> 00:53:51,920
idea to more applications then maybe

1288
00:53:51,920 --> 00:53:53,520
join the effort and we'll try to figure

1289
00:53:53,520 --> 00:53:55,839
out how to structure

1290
00:53:55,839 --> 00:53:57,839
okay some input from my side will be

1291
00:53:57,839 --> 00:53:59,599
focused on basically requirements what

1292
00:53:59,599 --> 00:54:01,839
problem do you try to solve so we don't

1293
00:54:01,839 --> 00:54:04,480
end up in the generic uh reliable

1294
00:54:04,480 --> 00:54:06,240
multicast problem which is one of the

1295
00:54:06,240 --> 00:54:08,000
formulas you know totally not you're

1296
00:54:08,000 --> 00:54:09,599
completely agreed and that's exactly

1297
00:54:09,599 --> 00:54:11,680
what i mean with use cases in terms of

1298
00:54:11,680 --> 00:54:13,200
what is the stuff that we can do better

1299
00:54:13,200 --> 00:54:15,760
with beer than with the native multicast

1300
00:54:15,760 --> 00:54:19,200
yeah i mean the http could look simple

1301
00:54:19,200 --> 00:54:21,200
yeah

1302
00:54:21,200 --> 00:54:23,280
the http stuff looked excellent you know

1303
00:54:23,280 --> 00:54:26,480
as a use case yeah thanks

1304
00:54:30,000 --> 00:54:33,880
sandy you have the mic

1305
00:54:42,880 --> 00:54:44,640
hello

1306
00:54:44,640 --> 00:54:45,520
hello

1307
00:54:45,520 --> 00:54:48,079
we hear you

1308
00:54:48,079 --> 00:54:50,400
oh okay i just have comments for the

1309
00:54:50,400 --> 00:54:52,559
previous slides

1310
00:54:52,559 --> 00:54:56,079
i read the repair http draft

1311
00:54:56,079 --> 00:54:58,960
before and i think that this draft is

1312
00:54:58,960 --> 00:55:04,799
using brs multicast underlay so the

1313
00:55:04,799 --> 00:55:08,079
http service can be

1314
00:55:08,079 --> 00:55:11,280
distributed by multicast way and i think

1315
00:55:11,280 --> 00:55:13,760
it's very interesting and

1316
00:55:13,760 --> 00:55:14,960
and i will

1317
00:55:14,960 --> 00:55:16,799
follow the

1318
00:55:16,799 --> 00:55:19,520
processing of the structure okay thank

1319
00:55:19,520 --> 00:55:20,559
you

1320
00:55:20,559 --> 00:55:23,200
yeah so join the draft and uh work with

1321
00:55:23,200 --> 00:55:26,160
tolas and the author uh on specifying

1322
00:55:26,160 --> 00:55:28,079
what problem do you really try to

1323
00:55:28,079 --> 00:55:30,319
address because it seems you know to be

1324
00:55:30,319 --> 00:55:32,720
more generic than before i know and

1325
00:55:32,720 --> 00:55:35,359
before we can even go and start to maybe

1326
00:55:35,359 --> 00:55:37,839
280s or you know

1327
00:55:37,839 --> 00:55:40,160
talk about what will be scope of work

1328
00:55:40,160 --> 00:55:41,119
like that

1329
00:55:41,119 --> 00:55:43,599
we need a problem definition right

1330
00:55:43,599 --> 00:55:45,359
practical use case is fine but really

1331
00:55:45,359 --> 00:55:47,119
what is the scope of something like this

1332
00:55:47,119 --> 00:55:49,839
thank you

1333
00:55:53,119 --> 00:55:58,480
okay very next presentation the arrange

1334
00:55:58,480 --> 00:56:00,559
poet right

1335
00:56:00,559 --> 00:56:01,920
but

1336
00:56:01,920 --> 00:56:04,960
for now i see nothing

1337
00:56:04,960 --> 00:56:08,240
beer is not extended for it but it's

1338
00:56:08,240 --> 00:56:11,040
very interesting use case

1339
00:56:11,040 --> 00:56:12,960
yeah no it's it will be purely overload

1340
00:56:12,960 --> 00:56:14,839
overlay on top of beer yes

1341
00:56:14,839 --> 00:56:16,480
thanks

1342
00:56:16,480 --> 00:56:18,720
yeah

1343
00:56:20,640 --> 00:56:23,520
okay so we are done with commands

1344
00:56:23,520 --> 00:56:25,760
and we are moving to the next

1345
00:56:25,760 --> 00:56:29,760
presentation which is the routing header

1346
00:56:29,760 --> 00:56:33,920
seizer why or arjun presenting

1347
00:56:35,119 --> 00:56:37,119
hi everyone

1348
00:56:37,119 --> 00:56:39,520
i'm will from china telecom

1349
00:56:39,520 --> 00:56:41,760
and i would just try to talk a bit

1350
00:56:41,760 --> 00:56:43,520
louder

1351
00:56:43,520 --> 00:56:46,480
oh okay

1352
00:56:53,440 --> 00:56:54,480
hello

1353
00:56:54,480 --> 00:56:55,839
hello

1354
00:56:55,839 --> 00:56:56,880
hey

1355
00:56:56,880 --> 00:56:59,839
hello

1356
00:57:01,040 --> 00:57:02,000
so

1357
00:57:02,000 --> 00:57:04,240
i will give a

1358
00:57:04,240 --> 00:57:07,280
presentation for our draft a routine

1359
00:57:07,280 --> 00:57:08,640
header based

1360
00:57:08,640 --> 00:57:11,200
beer information encapsulation

1361
00:57:11,200 --> 00:57:12,480
uh

1362
00:57:12,480 --> 00:57:15,280
next slide please

1363
00:57:19,119 --> 00:57:20,160
uh

1364
00:57:20,160 --> 00:57:23,280
this presentation includes four parts uh

1365
00:57:23,280 --> 00:57:24,240
the

1366
00:57:24,240 --> 00:57:26,720
considerations for beer information

1367
00:57:26,720 --> 00:57:30,240
encapsulation in layer 3 header

1368
00:57:30,240 --> 00:57:33,760
the format of the beer routing header

1369
00:57:33,760 --> 00:57:36,160
the multicast package forwarding

1370
00:57:36,160 --> 00:57:39,440
procedures and the further actions of

1371
00:57:39,440 --> 00:57:41,200
this draft

1372
00:57:41,200 --> 00:57:44,078
next slide please

1373
00:57:51,680 --> 00:57:53,920
the msr design

1374
00:57:53,920 --> 00:57:56,400
consideration draft proposed the

1375
00:57:56,400 --> 00:58:00,480
following requirements for beer in ipv6

1376
00:58:00,480 --> 00:58:02,400
it should support the

1377
00:58:02,400 --> 00:58:04,559
basics multicast

1378
00:58:04,559 --> 00:58:07,760
functionalities and meet the needs of

1379
00:58:07,760 --> 00:58:10,480
high quality services with high

1380
00:58:10,480 --> 00:58:12,079
reliability

1381
00:58:12,079 --> 00:58:14,640
besides the above requirements

1382
00:58:14,640 --> 00:58:17,119
we have additional considerations

1383
00:58:17,119 --> 00:58:20,160
we hope the source and destination

1384
00:58:20,160 --> 00:58:23,440
addresses can be preserved along the

1385
00:58:23,440 --> 00:58:25,200
forwarding path

1386
00:58:25,200 --> 00:58:28,559
because the operators need to

1387
00:58:28,559 --> 00:58:30,400
count and monitor

1388
00:58:30,400 --> 00:58:33,359
the multicast traffic and the current

1389
00:58:33,359 --> 00:58:37,520
technologies are based on the source or

1390
00:58:37,520 --> 00:58:40,000
destination address

1391
00:58:40,000 --> 00:58:43,520
we also hope the identification of vpn

1392
00:58:43,520 --> 00:58:46,079
traffic should be based on the

1393
00:58:46,079 --> 00:58:47,520
destination

1394
00:58:47,520 --> 00:58:49,920
address

1395
00:58:50,079 --> 00:58:53,680
the existing beer encapsulations cannot

1396
00:58:53,680 --> 00:58:56,000
meet the above demands

1397
00:58:56,000 --> 00:58:58,480
so we think it is time to

1398
00:58:58,480 --> 00:59:00,160
define a new

1399
00:59:00,160 --> 00:59:02,480
beer encapsulation method

1400
00:59:02,480 --> 00:59:05,839
next slide please

1401
00:59:11,119 --> 00:59:14,319
considering the above requirements we

1402
00:59:14,319 --> 00:59:17,359
think use routing header to carry beer

1403
00:59:17,359 --> 00:59:20,960
information has the following advantages

1404
00:59:20,960 --> 00:59:25,040
it lied with the usage of rotting header

1405
00:59:25,040 --> 00:59:26,079
the

1406
00:59:26,079 --> 00:59:30,079
t and b can be realized in a unified way

1407
00:59:30,079 --> 00:59:33,440
and the previous requirements can be met

1408
00:59:33,440 --> 00:59:36,160
so we defined a new type of routing

1409
00:59:36,160 --> 00:59:39,599
header to carry beer information

1410
00:59:39,599 --> 00:59:43,160
next slide please

1411
00:59:52,960 --> 00:59:54,720
the format of

1412
00:59:54,720 --> 00:59:58,880
a newly defined routing header type is

1413
00:59:58,880 --> 01:00:00,960
showing the figure

1414
01:00:00,960 --> 01:00:04,640
we need to define a new routing type

1415
01:00:04,640 --> 01:00:07,599
the eight bits follow the routing type

1416
01:00:07,599 --> 01:00:08,720
field

1417
01:00:08,720 --> 01:00:13,200
indicates the brt algorithm used for the

1418
01:00:13,200 --> 01:00:14,640
rhb

1419
01:00:14,640 --> 01:00:15,839
beer

1420
01:00:15,839 --> 01:00:16,960
packet

1421
01:00:16,960 --> 01:00:20,240
and the encoding format of the following

1422
01:00:20,240 --> 01:00:21,359
brt

1423
01:00:21,359 --> 01:00:24,880
algorithm specific specified part

1424
01:00:24,880 --> 01:00:27,680
depends on the value of

1425
01:00:27,680 --> 01:00:28,720
vrt

1426
01:00:28,720 --> 01:00:29,760
algo

1427
01:00:29,760 --> 01:00:31,359
failed

1428
01:00:31,359 --> 01:00:34,240
next slide please

1429
01:00:39,680 --> 01:00:42,000
this scenario shows the forwarding

1430
01:00:42,000 --> 01:00:43,599
procedures

1431
01:00:43,599 --> 01:00:46,720
one all knows in beer domain support

1432
01:00:46,720 --> 01:00:48,880
beer routing header

1433
01:00:48,880 --> 01:00:51,520
node a is a bfir

1434
01:00:51,520 --> 01:00:54,960
when it receives a multicast packet it

1435
01:00:54,960 --> 01:00:59,280
will encapsulate an fpv6 header with

1436
01:00:59,280 --> 01:01:01,520
your routing header

1437
01:01:01,520 --> 01:01:04,480
then it checks whether there is fifth

1438
01:01:04,480 --> 01:01:07,920
correct corresponding to the fifth id

1439
01:01:07,920 --> 01:01:09,119
locally

1440
01:01:09,119 --> 01:01:12,480
if not discarding the packet

1441
01:01:12,480 --> 01:01:15,440
otherwise performing the normal beer

1442
01:01:15,440 --> 01:01:17,359
forwarding

1443
01:01:17,359 --> 01:01:20,240
the same forwarding procedures also

1444
01:01:20,240 --> 01:01:23,760
perform r node d to e to f

1445
01:01:23,760 --> 01:01:27,280
during the forwarding pass

1446
01:01:27,280 --> 01:01:29,920
the source and destination address in

1447
01:01:29,920 --> 01:01:32,000
the ipwa6 header

1448
01:01:32,000 --> 01:01:33,440
are not changed

1449
01:01:33,440 --> 01:01:34,640
only the

1450
01:01:34,640 --> 01:01:37,200
b string in beer routing header is

1451
01:01:37,200 --> 01:01:38,960
updated

1452
01:01:38,960 --> 01:01:41,839
next slide please

1453
01:01:46,720 --> 01:01:48,799
this scenario shows the forwarding

1454
01:01:48,799 --> 01:01:52,799
procedures one thumbnails in beer domain

1455
01:01:52,799 --> 01:01:56,799
do not support via routing header

1456
01:01:56,799 --> 01:01:59,839
node a encapsulates a

1457
01:01:59,839 --> 01:02:03,760
fpv6 header with spare routing header to

1458
01:02:03,760 --> 01:02:05,359
the package

1459
01:02:05,359 --> 01:02:08,160
and for words the package to not be

1460
01:02:08,160 --> 01:02:11,359
according to required

1461
01:02:12,799 --> 01:02:13,920
sorry

1462
01:02:13,920 --> 01:02:16,240
you are very quiet again something with

1463
01:02:16,240 --> 01:02:18,839
your microphone please

1464
01:02:18,839 --> 01:02:20,400
check

1465
01:02:20,400 --> 01:02:21,680
oh

1466
01:02:21,680 --> 01:02:23,839
can you hear me now yeah this is much

1467
01:02:23,839 --> 01:02:25,760
better thank you

1468
01:02:25,760 --> 01:02:26,960
oh okay

1469
01:02:26,960 --> 01:02:28,640
uh

1470
01:02:28,640 --> 01:02:29,599
and

1471
01:02:29,599 --> 01:02:31,760
uh

1472
01:02:32,799 --> 01:02:36,880
note a encapsulates an ip wei sex header

1473
01:02:36,880 --> 01:02:40,400
with spear rotting header to the packet

1474
01:02:40,400 --> 01:02:42,400
and forwards the

1475
01:02:42,400 --> 01:02:46,160
packet to not d according to the bift

1476
01:02:46,160 --> 01:02:48,960
because note c doesn't support vr

1477
01:02:48,960 --> 01:02:52,240
routing header so noddy should calculate

1478
01:02:52,240 --> 01:02:53,039
the

1479
01:02:53,039 --> 01:02:56,319
ipv6 address of e

1480
01:02:56,319 --> 01:02:59,599
uh and encapsulates uh out

1481
01:02:59,599 --> 01:03:03,359
outer ipsex header to the packet

1482
01:03:03,359 --> 01:03:06,799
the source ipwisk address is the

1483
01:03:06,799 --> 01:03:09,680
address of itself and the destination

1484
01:03:09,680 --> 01:03:11,599
fpsex address

1485
01:03:11,599 --> 01:03:15,280
is the ipv6 address of node e

1486
01:03:15,280 --> 01:03:17,359
then it sends the

1487
01:03:17,359 --> 01:03:20,000
uh packet to nazi

1488
01:03:20,000 --> 01:03:24,000
nazi performs normal fpv

1489
01:03:24,000 --> 01:03:27,520
ipv6 forwarding according to the outer

1490
01:03:27,520 --> 01:03:31,440
fpv6 header and sends the package to

1491
01:03:31,440 --> 01:03:32,960
noddy

1492
01:03:32,960 --> 01:03:34,160
noddy

1493
01:03:34,160 --> 01:03:38,079
decapsulates the outer ipv6 header and

1494
01:03:38,079 --> 01:03:40,400
forwards the packet according to the

1495
01:03:40,400 --> 01:03:42,720
bift

1496
01:03:43,839 --> 01:03:45,599
in this uh

1497
01:03:45,599 --> 01:03:48,319
procedures the source and destination

1498
01:03:48,319 --> 01:03:49,599
address

1499
01:03:49,599 --> 01:03:54,640
in the inner iqs header keep unchanged

1500
01:03:54,640 --> 01:03:58,200
next slide please

1501
01:04:05,440 --> 01:04:08,880
our next steps are listed here

1502
01:04:08,880 --> 01:04:12,880
we plan to extend the solution to carry

1503
01:04:12,880 --> 01:04:16,319
vpn related information in multicast

1504
01:04:16,319 --> 01:04:18,400
destination address

1505
01:04:18,400 --> 01:04:21,599
including the generation and

1506
01:04:21,599 --> 01:04:24,160
transmission of the address and the

1507
01:04:24,160 --> 01:04:27,920
behaviors on devices to handle it

1508
01:04:27,920 --> 01:04:30,319
that's all for the presentation

1509
01:04:30,319 --> 01:04:33,760
your comments and suggestions are always

1510
01:04:33,760 --> 01:04:37,640
welcome thanks

1511
01:04:45,200 --> 01:04:49,078
how long please go ahead

1512
01:04:54,559 --> 01:04:57,920
solutions to encode appear in ipv6

1513
01:04:57,920 --> 01:04:59,599
extensions header

1514
01:04:59,599 --> 01:05:02,240
so i don't know why this is listed in

1515
01:05:02,240 --> 01:05:04,000
the agenda

1516
01:05:04,000 --> 01:05:06,839
i think this question is to

1517
01:05:06,839 --> 01:05:10,720
cheers thank you

1518
01:05:10,960 --> 01:05:14,480
sorry what is the question to chairs

1519
01:05:15,359 --> 01:05:18,640
what is the specific question

1520
01:05:21,520 --> 01:05:23,119
well i think you got cut somewhere in

1521
01:05:23,119 --> 01:05:24,559
between could you please repeat your

1522
01:05:24,559 --> 01:05:27,559
question

1523
01:05:39,039 --> 01:05:40,960
we cannot hear you

1524
01:05:40,960 --> 01:05:42,400
okay let's move to the next person on

1525
01:05:42,400 --> 01:05:45,599
the mic please bring it on

1526
01:05:45,599 --> 01:05:47,839
hello

1527
01:05:47,920 --> 01:05:49,359
yeah

1528
01:05:49,359 --> 01:05:51,680
okay i think

1529
01:05:51,680 --> 01:05:54,240
i have the similar question with fun

1530
01:05:54,240 --> 01:05:55,440
hong kong

1531
01:05:55,440 --> 01:05:58,160
my question is to the chairs

1532
01:05:58,160 --> 01:06:00,880
the working group had concluded a lot to

1533
01:06:00,880 --> 01:06:02,880
work on solutions

1534
01:06:02,880 --> 01:06:07,359
to include encode beer in ipv6 extreme

1535
01:06:07,359 --> 01:06:08,720
header

1536
01:06:08,720 --> 01:06:11,920
after after i think

1537
01:06:11,920 --> 01:06:14,160
about more than more than three years of

1538
01:06:14,160 --> 01:06:16,880
discussions so i don't understand why

1539
01:06:16,880 --> 01:06:19,359
this routine had beer draft

1540
01:06:19,359 --> 01:06:21,599
is listed in the urgent for for

1541
01:06:21,599 --> 01:06:22,960
discussion

1542
01:06:22,960 --> 01:06:24,640
is the working group changing the

1543
01:06:24,640 --> 01:06:25,920
conclusion

1544
01:06:25,920 --> 01:06:28,240
uh no but i mean they ask for

1545
01:06:28,240 --> 01:06:30,240
presentation slot it's up to us to let

1546
01:06:30,240 --> 01:06:32,000
things present

1547
01:06:32,000 --> 01:06:33,680
frankly i'm lost as well there were no

1548
01:06:33,680 --> 01:06:35,680
updates to the draft i think the process

1549
01:06:35,680 --> 01:06:38,400
ran its course all the way to the

1550
01:06:38,400 --> 01:06:40,480
bitter end of formal complaint against

1551
01:06:40,480 --> 01:06:43,599
the chairs um but you know

1552
01:06:43,599 --> 01:06:47,839
if presentation slots are requested

1553
01:06:47,839 --> 01:06:49,440
we're perfectly fine to see something

1554
01:06:49,440 --> 01:06:51,119
especially if there's any new arc which

1555
01:06:51,119 --> 01:06:53,760
i didn't see here frankly

1556
01:06:53,760 --> 01:06:55,280
satisfactory

1557
01:06:55,280 --> 01:06:58,280
thanks

1558
01:07:06,000 --> 01:07:08,319
hello

1559
01:07:09,039 --> 01:07:11,200
yes please go ahead we can hear you

1560
01:07:11,200 --> 01:07:13,598
hello

1561
01:07:29,520 --> 01:07:32,640
we cannot hear you now

1562
01:07:38,799 --> 01:07:40,480
hello

1563
01:07:40,480 --> 01:07:43,480
hello

1564
01:07:49,200 --> 01:07:50,720
hello

1565
01:07:50,720 --> 01:07:54,439
yes please go ahead

1566
01:07:58,880 --> 01:08:02,880
don't go ahead please speak up

1567
01:08:05,200 --> 01:08:08,000
so i think i want to

1568
01:08:08,000 --> 01:08:11,200
answer the question on the list or on

1569
01:08:11,200 --> 01:08:13,680
the chat okay

1570
01:08:13,680 --> 01:08:15,919
okay

1571
01:08:19,920 --> 01:08:22,640
okay it's jeffrey again

1572
01:08:22,640 --> 01:08:25,839
on the

1573
01:08:40,719 --> 01:08:43,120
okay so this is basically to

1574
01:08:43,120 --> 01:08:45,679
the slides of uh to help the discussion

1575
01:08:45,679 --> 01:08:47,359
uh discussing the

1576
01:08:47,359 --> 01:08:49,120
beer extension headers

1577
01:08:49,120 --> 01:08:52,599
next slide please

1578
01:08:53,279 --> 01:08:55,279
some background um

1579
01:08:55,279 --> 01:08:58,000
there have been several drafts

1580
01:08:58,000 --> 01:09:00,000
already the beer that

1581
01:09:00,000 --> 01:09:01,600
start talking about

1582
01:09:01,600 --> 01:09:03,600
beer extension headers

1583
01:09:03,600 --> 01:09:06,560
the first one is this uh generic

1584
01:09:06,560 --> 01:09:09,679
literary functions that we call gdf

1585
01:09:09,679 --> 01:09:10,880
that

1586
01:09:10,880 --> 01:09:12,960
we put out a few years ago a couple of

1587
01:09:12,960 --> 01:09:16,640
years ago in the first in the mpos

1588
01:09:16,640 --> 01:09:17,920
area

1589
01:09:17,920 --> 01:09:21,198
an er growing group

1590
01:09:21,198 --> 01:09:24,479
basically we noticed that

1591
01:09:24,479 --> 01:09:27,439
there are several functions

1592
01:09:27,439 --> 01:09:30,080
that are currently defined for ip

1593
01:09:30,080 --> 01:09:32,238
but they are actually

1594
01:09:32,238 --> 01:09:35,040
applicable for other layers as well one

1595
01:09:35,040 --> 01:09:37,120
example is fragmentation

1596
01:09:37,120 --> 01:09:40,000
another one is uh security

1597
01:09:40,000 --> 01:09:41,439
and so

1598
01:09:41,439 --> 01:09:42,799
we thought that

1599
01:09:42,799 --> 01:09:44,719
it would be nice to be able to extract

1600
01:09:44,719 --> 01:09:45,839
that out

1601
01:09:45,839 --> 01:09:49,040
and apply it at different layers be it

1602
01:09:49,040 --> 01:09:52,880
mpos ipv6 beer or ethernet if they if

1603
01:09:52,880 --> 01:09:54,640
they want to do so

1604
01:09:54,640 --> 01:09:55,679
so

1605
01:09:55,679 --> 01:10:00,239
we um we we wrote that gdf draft and we

1606
01:10:00,239 --> 01:10:03,840
we discussed it in mqs uh working group

1607
01:10:03,840 --> 01:10:05,679
uh at that time i also noticed that the

1608
01:10:05,679 --> 01:10:09,840
io ioms work started there in the mpv60

1609
01:10:09,840 --> 01:10:12,400
this is actually also one of the

1610
01:10:12,400 --> 01:10:13,840
functions that can be considered as

1611
01:10:13,840 --> 01:10:16,239
generic

1612
01:10:16,239 --> 01:10:18,640
so later on

1613
01:10:18,640 --> 01:10:20,000
when i was

1614
01:10:20,000 --> 01:10:22,880
working on a draft about the beer

1615
01:10:22,880 --> 01:10:26,640
or solution support for network slicing

1616
01:10:26,640 --> 01:10:30,080
and in one case i i would need to increa

1617
01:10:30,080 --> 01:10:32,560
encapsulate some other information

1618
01:10:32,560 --> 01:10:36,239
about a slice or or even more uh

1619
01:10:36,239 --> 01:10:37,920
granular information

1620
01:10:37,920 --> 01:10:40,320
that that would need to be put into a

1621
01:10:40,320 --> 01:10:42,080
extension header

1622
01:10:42,080 --> 01:10:43,440
so

1623
01:10:43,440 --> 01:10:44,880
for that i

1624
01:10:44,880 --> 01:10:46,480
brought it to

1625
01:10:46,480 --> 01:10:49,120
beer working group as well um

1626
01:10:49,120 --> 01:10:52,080
in the last ietf meeting i refer to it

1627
01:10:52,080 --> 01:10:54,719
in a slide and talk about it briefly

1628
01:10:54,719 --> 01:10:57,920
but i have not got a chance to actively

1629
01:10:57,920 --> 01:10:59,920
drive the discussion in the beer working

1630
01:10:59,920 --> 01:11:03,440
group even though i said yes though

1631
01:11:03,440 --> 01:11:05,760
this when it comes to beer we need to

1632
01:11:05,760 --> 01:11:09,760
discuss in beer but i had not done so

1633
01:11:09,760 --> 01:11:12,400
then just last week i noticed this uh

1634
01:11:12,400 --> 01:11:14,640
beer iom drafts

1635
01:11:14,640 --> 01:11:17,360
where um we're talking about the beer

1636
01:11:17,360 --> 01:11:19,199
extension header as one of the options

1637
01:11:19,199 --> 01:11:21,840
to encode the iom information

1638
01:11:21,840 --> 01:11:23,280
so now

1639
01:11:23,280 --> 01:11:25,199
um it's clear that

1640
01:11:25,199 --> 01:11:27,679
it's time to actively

1641
01:11:27,679 --> 01:11:30,400
discuss the how we do the beer extension

1642
01:11:30,400 --> 01:11:32,640
headers

1643
01:11:32,640 --> 01:11:34,320
back to npos

1644
01:11:34,320 --> 01:11:37,520
it has a design team to look at

1645
01:11:37,520 --> 01:11:40,080
mqs extension headers and there is this

1646
01:11:40,080 --> 01:11:42,080
strapped draft song talking about

1647
01:11:42,080 --> 01:11:44,800
extension headers uh i think both taran

1648
01:11:44,800 --> 01:11:48,000
and i are co-authors of that draft

1649
01:11:48,000 --> 01:11:51,600
um so when it comes to our the gdf

1650
01:11:51,600 --> 01:11:54,719
we wanted to align the beer and mpos

1651
01:11:54,719 --> 01:11:56,480
extensions

1652
01:11:56,480 --> 01:11:59,520
basically we define one extension header

1653
01:11:59,520 --> 01:12:01,840
mechanism that will be applicable to

1654
01:12:01,840 --> 01:12:03,679
both

1655
01:12:03,679 --> 01:12:06,320
beer and npos

1656
01:12:06,320 --> 01:12:09,799
next slide please

1657
01:12:10,719 --> 01:12:14,159
so this is the npos extension header

1658
01:12:14,159 --> 01:12:17,199
format uh at the top is the regular mtx

1659
01:12:17,199 --> 01:12:18,960
label stack

1660
01:12:18,960 --> 01:12:21,040
there is some sort of indicator saying

1661
01:12:21,040 --> 01:12:23,440
that at the bottom of the label stack

1662
01:12:23,440 --> 01:12:26,320
there is an mpos extension header

1663
01:12:26,320 --> 01:12:28,640
um the first four objects of the

1664
01:12:28,640 --> 01:12:30,960
extension header is like a header of a

1665
01:12:30,960 --> 01:12:33,120
headers

1666
01:12:33,120 --> 01:12:34,880
including the number of extension

1667
01:12:34,880 --> 01:12:36,960
headers and total length of the

1668
01:12:36,960 --> 01:12:38,880
extension headers

1669
01:12:38,880 --> 01:12:42,080
original upper layer protocol

1670
01:12:42,080 --> 01:12:44,080
and then the next header that points to

1671
01:12:44,080 --> 01:12:45,280
the

1672
01:12:45,280 --> 01:12:46,560
next header

1673
01:12:46,560 --> 01:12:49,040
the real header

1674
01:12:49,040 --> 01:12:52,800
uh here we have example two examples uh

1675
01:12:52,800 --> 01:12:56,719
extension header or what h1 and hn

1676
01:12:56,719 --> 01:12:59,360
so the next header field

1677
01:12:59,360 --> 01:13:00,400
will

1678
01:13:00,400 --> 01:13:02,239
will allow you to traverse all those

1679
01:13:02,239 --> 01:13:05,718
extension headers

1680
01:13:06,320 --> 01:13:07,920
so now

1681
01:13:07,920 --> 01:13:10,719
currently the next header value is

1682
01:13:10,719 --> 01:13:13,199
actually taken from the ip protocol

1683
01:13:13,199 --> 01:13:16,239
numbers registry

1684
01:13:16,960 --> 01:13:20,880
so but to in order for

1685
01:13:20,880 --> 01:13:24,159
us not to use too many uh uh

1686
01:13:24,159 --> 01:13:27,360
values for npos purposes then

1687
01:13:27,360 --> 01:13:30,080
we say that uh one of the next header

1688
01:13:30,080 --> 01:13:32,960
value will allow us to say that

1689
01:13:32,960 --> 01:13:36,239
we'll have subtype uh

1690
01:13:36,239 --> 01:13:38,400
so that we can uh we can further

1691
01:13:38,400 --> 01:13:41,920
distinguish which are the mpos or

1692
01:13:41,920 --> 01:13:45,440
uh specific ones so that's the basic

1693
01:13:45,440 --> 01:13:46,640
idea

1694
01:13:46,640 --> 01:13:48,480
um

1695
01:13:48,480 --> 01:13:52,480
one thing i want to point out is that

1696
01:13:52,880 --> 01:13:56,239
you can see that if you exclude the

1697
01:13:56,239 --> 01:13:58,239
the header headers part

1698
01:13:58,239 --> 01:14:02,400
it's very similar to ipv6 with yx uh

1699
01:14:02,400 --> 01:14:05,199
one difference that the header lens

1700
01:14:05,199 --> 01:14:07,840
the mqs case is in the

1701
01:14:07,840 --> 01:14:11,199
four optic units but ipv6 header is

1702
01:14:11,199 --> 01:14:14,640
header lens is in the eight active units

1703
01:14:14,640 --> 01:14:16,159
that's one difference

1704
01:14:16,159 --> 01:14:18,960
next slide please

1705
01:14:21,679 --> 01:14:23,199
so now

1706
01:14:23,199 --> 01:14:25,760
we wanted to apply this to the same to

1707
01:14:25,760 --> 01:14:29,199
to beer so then the beer header would

1708
01:14:29,199 --> 01:14:30,080
have a

1709
01:14:30,080 --> 01:14:32,719
proto value to indicate that there is a

1710
01:14:32,719 --> 01:14:34,800
beer extension header follows

1711
01:14:34,800 --> 01:14:37,600
just like the nps label stack have an

1712
01:14:37,600 --> 01:14:39,679
indication

1713
01:14:39,679 --> 01:14:41,199
we talked about the

1714
01:14:41,199 --> 01:14:44,960
h value taken from the registry

1715
01:14:44,960 --> 01:14:46,880
so now

1716
01:14:46,880 --> 01:14:48,960
going back to the generic linear

1717
01:14:48,960 --> 01:14:50,320
function

1718
01:14:50,320 --> 01:14:53,519
the idea is that

1719
01:14:53,600 --> 01:14:55,199
some functions

1720
01:14:55,199 --> 01:14:57,440
that can be applied at many different

1721
01:14:57,440 --> 01:14:58,560
layers

1722
01:14:58,560 --> 01:15:00,880
we want to be able to to reuse the same

1723
01:15:00,880 --> 01:15:03,520
encoding and therefore we can do the

1724
01:15:03,520 --> 01:15:05,760
same hardware processing

1725
01:15:05,760 --> 01:15:08,480
so if you consider that

1726
01:15:08,480 --> 01:15:11,920
for real generic function

1727
01:15:11,920 --> 01:15:15,280
it will be applicable to ipv6 as well

1728
01:15:15,280 --> 01:15:17,199
so ideally

1729
01:15:17,199 --> 01:15:19,600
we would want to be able to just reuse

1730
01:15:19,600 --> 01:15:20,560
the

1731
01:15:20,560 --> 01:15:22,880
ipv6 extension

1732
01:15:22,880 --> 01:15:24,400
for particular

1733
01:15:24,400 --> 01:15:26,640
function if there is ipv6 extension

1734
01:15:26,640 --> 01:15:28,480
header defined

1735
01:15:28,480 --> 01:15:32,080
we would want to be able to use it as is

1736
01:15:32,080 --> 01:15:35,280
for mpos or for beer

1737
01:15:35,280 --> 01:15:36,239
but

1738
01:15:36,239 --> 01:15:39,199
the header lens uh in our four arctic

1739
01:15:39,199 --> 01:15:43,040
units prevents us from doing that

1740
01:15:43,040 --> 01:15:45,760
next time please

1741
01:15:47,440 --> 01:15:49,760
so um

1742
01:15:49,760 --> 01:15:51,440
for beer

1743
01:15:51,440 --> 01:15:54,400
here are the questions i want to uh

1744
01:15:54,400 --> 01:15:56,719
to discuss in the in in a working group

1745
01:15:56,719 --> 01:15:58,880
we don't have to have any conclusions

1746
01:15:58,880 --> 01:15:59,920
here

1747
01:15:59,920 --> 01:16:02,080
uh i just want to point this out we can

1748
01:16:02,080 --> 01:16:04,880
follow up on the muni list

1749
01:16:04,880 --> 01:16:06,960
so first of all does this make sense to

1750
01:16:06,960 --> 01:16:09,840
beard we want to align the extension

1751
01:16:09,840 --> 01:16:12,640
header formats including

1752
01:16:12,640 --> 01:16:14,960
between beer and mpos

1753
01:16:14,960 --> 01:16:17,679
and even with ipv6

1754
01:16:17,679 --> 01:16:18,880
and

1755
01:16:18,880 --> 01:16:21,679
in the iom case

1756
01:16:21,679 --> 01:16:25,280
do we want to use this format for br iom

1757
01:16:25,280 --> 01:16:26,159
if

1758
01:16:26,159 --> 01:16:29,199
the br iom goes ahead um

1759
01:16:29,199 --> 01:16:30,800
do you want to align with mpos or they

1760
01:16:30,800 --> 01:16:33,600
want to align with ipv6 as well

1761
01:16:33,600 --> 01:16:37,440
they're actually um so one simple way uh

1762
01:16:37,440 --> 01:16:41,040
well aligned with ipv6 is that

1763
01:16:41,040 --> 01:16:44,080
simply change that's uh header lens

1764
01:16:44,080 --> 01:16:47,120
uh from the four active units to uh to

1765
01:16:47,120 --> 01:16:47,920
eight

1766
01:16:47,920 --> 01:16:50,560
arctic units that would work out easily

1767
01:16:50,560 --> 01:16:51,520
easily

1768
01:16:51,520 --> 01:16:53,600
i guess the concern why they wanted to

1769
01:16:53,600 --> 01:16:56,159
do a four active units in npr's case is

1770
01:16:56,159 --> 01:16:57,280
because

1771
01:16:57,280 --> 01:16:59,360
it's more granular

1772
01:16:59,360 --> 01:17:01,519
so

1773
01:17:01,600 --> 01:17:02,640
for us

1774
01:17:02,640 --> 01:17:05,920
which why do we want to go um and also

1775
01:17:05,920 --> 01:17:07,760
actually just before this meeting i was

1776
01:17:07,760 --> 01:17:09,600
thinking of another way

1777
01:17:09,600 --> 01:17:12,960
to to allow that

1778
01:17:12,960 --> 01:17:14,640
for after units

1779
01:17:14,640 --> 01:17:17,120
normally but still we have another

1780
01:17:17,120 --> 01:17:19,199
container to

1781
01:17:19,199 --> 01:17:22,400
uh to to put all the ipv6 extension

1782
01:17:22,400 --> 01:17:23,840
headers in

1783
01:17:23,840 --> 01:17:26,719
um so i just want to throw out these

1784
01:17:26,719 --> 01:17:28,480
questions and then

1785
01:17:28,480 --> 01:17:29,360
we can

1786
01:17:29,360 --> 01:17:30,800
discuss

1787
01:17:30,800 --> 01:17:33,199
here and discussing in the mailing list

1788
01:17:33,199 --> 01:17:36,159
i want to point out that um

1789
01:17:36,159 --> 01:17:40,480
it seems that uh in the brlm draft uh

1790
01:17:40,480 --> 01:17:43,679
it also just seems to be uh putting the

1791
01:17:43,679 --> 01:17:45,520
ipv6 header

1792
01:17:45,520 --> 01:17:48,800
directly after beer header

1793
01:17:48,800 --> 01:17:51,040
so we may be already aligned

1794
01:17:51,040 --> 01:17:54,400
somewhat it's just that

1795
01:17:55,040 --> 01:17:57,679
if we want to do beer extension header

1796
01:17:57,679 --> 01:17:59,120
let's

1797
01:17:59,120 --> 01:18:01,520
look at it in a holistic way and make

1798
01:18:01,520 --> 01:18:03,760
sure that we consider all the use cases

1799
01:18:03,760 --> 01:18:05,920
and make sure that we

1800
01:18:05,920 --> 01:18:07,679
we are doing it

1801
01:18:07,679 --> 01:18:09,199
in a

1802
01:18:09,199 --> 01:18:11,679
good way and ideally generically and

1803
01:18:11,679 --> 01:18:14,080
lined up with other extension headers as

1804
01:18:14,080 --> 01:18:15,440
well

1805
01:18:15,440 --> 01:18:17,040
so

1806
01:18:17,040 --> 01:18:20,360
that's it

1807
01:18:26,320 --> 01:18:28,719
so jeffrey i mean frankly to be lost are

1808
01:18:28,719 --> 01:18:30,880
we talking about

1809
01:18:30,880 --> 01:18:34,560
gdf in beer or are we talking to extend

1810
01:18:34,560 --> 01:18:36,159
beer to have an

1811
01:18:36,159 --> 01:18:38,159
extension header

1812
01:18:38,159 --> 01:18:39,520
um

1813
01:18:39,520 --> 01:18:42,320
it's really uh to ex

1814
01:18:42,320 --> 01:18:45,280
to have beer extension headers uh well

1815
01:18:45,280 --> 01:18:48,719
gdf uh to do gdf we will need extension

1816
01:18:48,719 --> 01:18:52,880
headers right okay go to okay uh so

1817
01:18:52,880 --> 01:18:55,360
do you have you know some packet format

1818
01:18:55,360 --> 01:18:57,920
suggestion what we would need to do

1819
01:18:57,920 --> 01:19:01,520
um yes uh can you go back to

1820
01:19:01,520 --> 01:19:03,840
that sorry i was on the chat

1821
01:19:03,840 --> 01:19:05,520
yeah

1822
01:19:05,520 --> 01:19:06,480
okay yeah

1823
01:19:06,480 --> 01:19:08,880
sorry yeah so

1824
01:19:08,880 --> 01:19:10,719
um ideally

1825
01:19:10,719 --> 01:19:13,520
we would want to align beer mpos and

1826
01:19:13,520 --> 01:19:15,679
even ipv6 uh

1827
01:19:15,679 --> 01:19:18,400
uh extension headers uh same format that

1828
01:19:18,400 --> 01:19:19,280
way

1829
01:19:19,280 --> 01:19:23,120
uh any function that is

1830
01:19:23,120 --> 01:19:24,960
generic that can be

1831
01:19:24,960 --> 01:19:28,719
applied at ipv6 or npos or beer level

1832
01:19:28,719 --> 01:19:30,400
we just use the same

1833
01:19:30,400 --> 01:19:32,640
same encoding that way

1834
01:19:32,640 --> 01:19:34,640
the hardware

1835
01:19:34,640 --> 01:19:36,640
implementation can be

1836
01:19:36,640 --> 01:19:39,640
reusable

1837
01:19:53,840 --> 01:19:55,520
i pass i have to read the job you're

1838
01:19:55,520 --> 01:19:58,000
drafting in excruciating details i'm a

1839
01:19:58,000 --> 01:19:59,679
little bit lost what is coming afterward

1840
01:19:59,679 --> 01:20:01,360
here okay

1841
01:20:01,360 --> 01:20:03,679
questions

1842
01:20:03,760 --> 01:20:06,159
i follow precisely the original gdf but

1843
01:20:06,159 --> 01:20:08,719
that looks like another serious ref

1844
01:20:08,719 --> 01:20:11,760
thanks oh uh this is one way to do the g

1845
01:20:11,760 --> 01:20:14,719
uh to do the gdf yes this is the one way

1846
01:20:14,719 --> 01:20:17,600
to do the gdf proposed way to do the gdf

1847
01:20:17,600 --> 01:20:20,840
from me

1848
01:20:40,719 --> 01:20:42,719
so i don't see any

1849
01:20:42,719 --> 01:20:45,120
comments nor hands

1850
01:20:45,120 --> 01:20:46,800
wish we would have to take it to the

1851
01:20:46,800 --> 01:20:48,719
list

1852
01:20:48,719 --> 01:20:51,520
sure i mean you want to

1853
01:20:51,520 --> 01:20:55,360
stir up this discussion yeah

1854
01:20:55,360 --> 01:20:57,040
yeah so i think would be great if you

1855
01:20:57,040 --> 01:20:58,840
would send an email to the

1856
01:20:58,840 --> 01:21:01,760
list with the pointer to the

1857
01:21:01,760 --> 01:21:05,280
presentation and start the discussion

1858
01:21:05,280 --> 01:21:08,400
albert you were going to say something

1859
01:21:08,400 --> 01:21:10,879
ah okay

1860
01:21:11,040 --> 01:21:15,520
then i think we are done for a tf-113

1861
01:21:15,520 --> 01:21:19,679
hope to see all of you in philadelphia

1862
01:21:20,400 --> 01:21:23,199
great yep thanks everyone until next

1863
01:21:23,199 --> 01:21:25,440
time

1864
01:21:26,320 --> 01:21:29,559
bye everyone

1865
01:21:51,440 --> 01:21:55,080
what are you talking about

1866
01:22:21,120 --> 01:22:24,159
oh right

1867
01:23:18,880 --> 01:23:21,840
uh

1868
01:23:32,560 --> 01:23:35,560
oh

1869
01:23:40,320 --> 01:23:43,320
okay

1870
01:24:10,719 --> 01:24:11,920
sure

1871
01:24:11,920 --> 01:24:14,320
i really like that rbs

1872
01:24:14,320 --> 01:24:17,320
idea

