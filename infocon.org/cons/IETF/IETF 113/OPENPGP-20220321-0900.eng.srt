1
00:00:14,320 --> 00:00:16,480
okay i guess we're out time so good

2
00:00:16,480 --> 00:00:17,920
morning all

3
00:00:17,920 --> 00:00:19,760
this is the

4
00:00:19,760 --> 00:00:22,560
open pgp session of the first hybrid

5
00:00:22,560 --> 00:00:24,560
ietf meeting so

6
00:00:24,560 --> 00:00:27,599
we'll see how it goes um

7
00:00:27,599 --> 00:00:30,080
we have about 30 30 odd people in the

8
00:00:30,080 --> 00:00:32,000
session we have about

9
00:00:32,000 --> 00:00:33,840
a dozen in the room

10
00:00:33,840 --> 00:00:35,840
um so

11
00:00:35,840 --> 00:00:37,280
um

12
00:00:37,280 --> 00:00:40,320
tkg you want to say hi

13
00:00:42,160 --> 00:00:43,040
hello

14
00:00:43,040 --> 00:00:46,480
uh i'm daniel gilmour

15
00:00:47,840 --> 00:00:50,800
so tkg is remote

16
00:00:50,800 --> 00:00:52,000
uh

17
00:00:52,000 --> 00:00:54,160
given that this is the first

18
00:00:54,160 --> 00:00:55,600
session of the week in the first hybrid

19
00:00:55,600 --> 00:00:59,840
meeting we expect things to go weird but

20
00:01:00,320 --> 00:01:02,960
uh so just

21
00:01:02,960 --> 00:01:06,479
logistics and so on um

22
00:01:06,479 --> 00:01:07,920
there's a place to take notes there's

23
00:01:07,920 --> 00:01:09,920
jabber there's also a chat session in

24
00:01:09,920 --> 00:01:11,760
the the same chat session is in java and

25
00:01:11,760 --> 00:01:14,560
in my deco

26
00:01:17,920 --> 00:01:19,920
next one

27
00:01:19,920 --> 00:01:20,880
is

28
00:01:20,880 --> 00:01:23,880
yep

29
00:01:26,320 --> 00:01:28,159
oh oh yes sorry if you yeah if you're

30
00:01:28,159 --> 00:01:30,640
here um please do log into the data

31
00:01:30,640 --> 00:01:31,920
tracker

32
00:01:31,920 --> 00:01:33,520
because that signs the blue sheet is

33
00:01:33,520 --> 00:01:34,720
that correct

34
00:01:34,720 --> 00:01:36,079
thank you paul

35
00:01:36,079 --> 00:01:38,960
um so again yeah so if you're in person

36
00:01:38,960 --> 00:01:41,439
log in to the data tracker

37
00:01:41,439 --> 00:01:43,360
and in theory

38
00:01:43,360 --> 00:01:45,920
yes in theory you're supposed to

39
00:01:45,920 --> 00:01:48,320
join the message the mic line

40
00:01:48,320 --> 00:01:50,079
via the data tracker

41
00:01:50,079 --> 00:01:51,280
i'm not sure how well it's going to work

42
00:01:51,280 --> 00:01:53,360
in practice but we give it a try

43
00:01:53,360 --> 00:01:56,159
if it gets funny we can manage it

44
00:01:56,159 --> 00:01:58,320
so if you want to go to the mic

45
00:01:58,320 --> 00:01:59,920
the theory is if you're present in the

46
00:01:59,920 --> 00:02:01,840
room you should join the queue and then

47
00:02:01,840 --> 00:02:03,119
get to them go to the mic at the

48
00:02:03,119 --> 00:02:04,399
relevant time

49
00:02:04,399 --> 00:02:05,920
in practice

50
00:02:05,920 --> 00:02:08,959
as paul just did

51
00:02:08,959 --> 00:02:12,720
uh in practice we'll see how it works

52
00:02:12,720 --> 00:02:14,080
um

53
00:02:14,080 --> 00:02:16,160
and again if you're in person then again

54
00:02:16,160 --> 00:02:18,080
keep your audio video off for remote

55
00:02:18,080 --> 00:02:20,800
participants uh hello and i hope it's

56
00:02:20,800 --> 00:02:22,400
all working for you

57
00:02:22,400 --> 00:02:24,319
um

58
00:02:24,319 --> 00:02:26,480
headsets are recommended as it says and

59
00:02:26,480 --> 00:02:28,000
i guess everybody just be patient

60
00:02:28,000 --> 00:02:29,599
because we're all trying to figure out

61
00:02:29,599 --> 00:02:30,800
new stuff

62
00:02:30,800 --> 00:02:32,640
um and it's the first session of the

63
00:02:32,640 --> 00:02:34,319
week which is the traditional session

64
00:02:34,319 --> 00:02:37,799
when things go wrong

65
00:02:38,560 --> 00:02:42,160
the note well this is an itf meeting um

66
00:02:42,160 --> 00:02:43,599
there's a whole bunch of

67
00:02:43,599 --> 00:02:45,120
things you should note well they're all

68
00:02:45,120 --> 00:02:46,160
up there

69
00:02:46,160 --> 00:02:47,599
you'll get fed up seeing this during the

70
00:02:47,599 --> 00:02:49,360
week

71
00:02:49,360 --> 00:02:50,720
i guess the only thing i'd say is in

72
00:02:50,720 --> 00:02:52,239
addition to that you know please read

73
00:02:52,239 --> 00:02:54,160
that be familiar with us if you're not

74
00:02:54,160 --> 00:02:56,080
get familiar with us

75
00:02:56,080 --> 00:02:59,840
and again be nice to each other

76
00:03:01,599 --> 00:03:02,840
our

77
00:03:02,840 --> 00:03:05,599
agenda so we're on the first point just

78
00:03:05,599 --> 00:03:07,360
administrative and just to see if

79
00:03:07,360 --> 00:03:10,000
anybody has any agenda bash to suggest

80
00:03:10,000 --> 00:03:12,480
then we'll have about an hour

81
00:03:12,480 --> 00:03:15,519
to talk about the chartered work

82
00:03:15,519 --> 00:03:16,560
i have a couple of just a couple of

83
00:03:16,560 --> 00:03:17,760
things to say about the design team

84
00:03:17,760 --> 00:03:20,879
that's been running and then justice if

85
00:03:20,879 --> 00:03:22,879
he manages to get into

86
00:03:22,879 --> 00:03:25,360
meat echo fine i think we'll hopefully

87
00:03:25,360 --> 00:03:27,599
have him present the

88
00:03:27,599 --> 00:03:28,879
difference between the latest draft and

89
00:03:28,879 --> 00:03:30,959
the previous one

90
00:03:30,959 --> 00:03:32,319
and then there's a few issues that the

91
00:03:32,319 --> 00:03:34,720
design team

92
00:03:34,720 --> 00:03:36,400
felt would benefit from

93
00:03:36,400 --> 00:03:38,159
discussion with the working group

94
00:03:38,159 --> 00:03:40,159
participants more broadly

95
00:03:40,159 --> 00:03:40,959
and then we have a couple of

96
00:03:40,959 --> 00:03:42,640
presentations that again the time may

97
00:03:42,640 --> 00:03:44,640
kind of shift

98
00:03:44,640 --> 00:03:47,120
if those take longer um

99
00:03:47,120 --> 00:03:48,640
falco is going to present some work

100
00:03:48,640 --> 00:03:50,239
that's starting on a post-quantum

101
00:03:50,239 --> 00:03:52,239
approach to pgp

102
00:03:52,239 --> 00:03:53,280
uh

103
00:03:53,280 --> 00:03:54,879
is falco in the room i'm sorry i just

104
00:03:54,879 --> 00:03:56,239
forget right now for if that's a remote

105
00:03:56,239 --> 00:04:00,040
presentation or not

106
00:04:02,720 --> 00:04:05,840
okay when we get there we'll see

107
00:04:08,159 --> 00:04:09,599
falco

108
00:04:09,599 --> 00:04:11,599
i'm a remote

109
00:04:11,599 --> 00:04:13,439
you are remote okay

110
00:04:13,439 --> 00:04:15,920
um thanks for being here remote

111
00:04:15,920 --> 00:04:19,279
um mallory i'm pretty sure is remote um

112
00:04:19,279 --> 00:04:20,639
and it's an awful hour of the morning

113
00:04:20,639 --> 00:04:22,639
for her as it is for other people in her

114
00:04:22,639 --> 00:04:23,759
time zone

115
00:04:23,759 --> 00:04:26,080
um

116
00:04:26,960 --> 00:04:28,880
i don't see her in the room right now

117
00:04:28,880 --> 00:04:31,600
but it's it's a horrible time of the day

118
00:04:31,600 --> 00:04:34,240
uh and then aaron uh has a presentation

119
00:04:34,240 --> 00:04:36,479
who is his here and uh aaron hope

120
00:04:36,479 --> 00:04:38,479
hopefully has agreed to help us with

121
00:04:38,479 --> 00:04:39,840
taking notes

122
00:04:39,840 --> 00:04:41,360
i would like to get a second taker

123
00:04:41,360 --> 00:04:43,840
before we proceed

124
00:04:43,840 --> 00:04:46,639
the meat echo tool has

125
00:04:46,639 --> 00:04:48,320
a way of allowing you to take to

126
00:04:48,320 --> 00:04:50,160
collaborate taking notes

127
00:04:50,160 --> 00:04:53,440
in an ether pad like thing

128
00:04:55,440 --> 00:04:57,520
okay pete resnick is helping to take

129
00:04:57,520 --> 00:04:58,800
notes for the dispatch meeting but that

130
00:04:58,800 --> 00:05:01,199
just popped up on my screen

131
00:05:01,199 --> 00:05:02,639
so could we get somebody a second person

132
00:05:02,639 --> 00:05:05,039
to help with aaron take notes

133
00:05:05,039 --> 00:05:06,400
and if not we'll just stop here until we

134
00:05:06,400 --> 00:05:09,400
do

135
00:05:12,720 --> 00:05:14,960
okay

136
00:05:15,440 --> 00:05:16,720
no worries just as

137
00:05:16,720 --> 00:05:19,039
much

138
00:05:19,280 --> 00:05:20,880
okay

139
00:05:20,880 --> 00:05:24,000
so waiting for a notetaker

140
00:05:24,000 --> 00:05:25,360
get a second person in the room to help

141
00:05:25,360 --> 00:05:27,199
i guess that would do

142
00:05:27,199 --> 00:05:29,520
thank you

143
00:05:31,280 --> 00:05:32,880
so you know do you know how to

144
00:05:32,880 --> 00:05:34,960
click the button in the in if you if

145
00:05:34,960 --> 00:05:36,560
you're using lead echo

146
00:05:36,560 --> 00:05:39,360
not the site i think you have to use the

147
00:05:39,360 --> 00:05:40,720
click the video on to see the note

148
00:05:40,720 --> 00:05:42,720
taking button

149
00:05:42,720 --> 00:05:44,880
great thank you okay

150
00:05:44,880 --> 00:05:46,400
so that's our agenda i mean agenda

151
00:05:46,400 --> 00:05:49,400
bashing

152
00:05:52,320 --> 00:05:54,320
uh so in particular i guess we have on

153
00:05:54,320 --> 00:05:56,160
the on the agenda we have the latest id

154
00:05:56,160 --> 00:05:58,639
where uh i guess daniel will go through

155
00:05:58,639 --> 00:06:01,280
some of the changes that were made

156
00:06:01,280 --> 00:06:03,199
uh as he does that i guess

157
00:06:03,199 --> 00:06:05,120
it'll be just

158
00:06:05,120 --> 00:06:06,479
i hope if there's any clarifying

159
00:06:06,479 --> 00:06:07,600
questions you ask them if there are

160
00:06:07,600 --> 00:06:09,840
things we want to kind of put for longer

161
00:06:09,840 --> 00:06:11,919
discussion later that daniel mentions

162
00:06:11,919 --> 00:06:13,840
during that presentation then that's a

163
00:06:13,840 --> 00:06:15,360
that's a reasonable option to take

164
00:06:15,360 --> 00:06:17,039
rather than going into too much detail

165
00:06:17,039 --> 00:06:18,800
immediately

166
00:06:18,800 --> 00:06:20,880
so basically we can take some

167
00:06:20,880 --> 00:06:22,560
topics in the latest idea and push them

168
00:06:22,560 --> 00:06:24,639
into the

169
00:06:24,639 --> 00:06:28,240
issues for discussion as need be

170
00:06:28,720 --> 00:06:30,720
okay so don't anybody remote who wants

171
00:06:30,720 --> 00:06:32,639
to bash the agenda now is the time to

172
00:06:32,639 --> 00:06:35,840
jump in the queue for that

173
00:06:38,400 --> 00:06:40,560
observing that it looks like this

174
00:06:40,560 --> 00:06:42,160
has joined

175
00:06:42,160 --> 00:06:44,639
okay so

176
00:06:45,039 --> 00:06:46,160
uh

177
00:06:46,160 --> 00:06:48,960
yeah great okay so just as we we can try

178
00:06:48,960 --> 00:06:52,638
to move over to you in a minute

179
00:06:53,440 --> 00:06:54,960
okay so

180
00:06:54,960 --> 00:06:56,160
uh

181
00:06:56,160 --> 00:06:58,319
yes we have been running a design team

182
00:06:58,319 --> 00:06:59,520
basically

183
00:06:59,520 --> 00:07:01,120
to try and there was a whole bunch of

184
00:07:01,120 --> 00:07:03,360
work done in the past before the working

185
00:07:03,360 --> 00:07:05,280
group was recharted so we have it was

186
00:07:05,280 --> 00:07:06,560
quite a bit of work to do catch up on

187
00:07:06,560 --> 00:07:07,440
that

188
00:07:07,440 --> 00:07:10,400
um the design team has a mailing list

189
00:07:10,400 --> 00:07:12,560
that's there the archive is public

190
00:07:12,560 --> 00:07:13,759
you can actually subscribe to the

191
00:07:13,759 --> 00:07:16,479
mailing list and receive mail and but

192
00:07:16,479 --> 00:07:17,919
not post

193
00:07:17,919 --> 00:07:20,639
um or you can see the archive

194
00:07:20,639 --> 00:07:22,639
those are the members there we we have

195
00:07:22,639 --> 00:07:24,880
uh the kind of chairs paul vader's has

196
00:07:24,880 --> 00:07:26,880
been helping as an editor

197
00:07:26,880 --> 00:07:28,840
and then a bunch of people who have pgp

198
00:07:28,840 --> 00:07:30,639
implementations uh which has been really

199
00:07:30,639 --> 00:07:32,319
helpful to try and sanity check what

200
00:07:32,319 --> 00:07:33,440
we're doing

201
00:07:33,440 --> 00:07:36,240
um i guess werner was only

202
00:07:36,240 --> 00:07:38,240
actively taking part for earlier

203
00:07:38,240 --> 00:07:39,759
meetings he just had

204
00:07:39,759 --> 00:07:43,199
more conflict so couldn't uh continue

205
00:07:43,199 --> 00:07:44,400
um

206
00:07:44,400 --> 00:07:46,479
we met kind of most most weeks about 29

207
00:07:46,479 --> 00:07:48,080
times i think it worked well it's

208
00:07:48,080 --> 00:07:49,599
productive

209
00:07:49,599 --> 00:07:51,360
we're hoping to kind of declare victory

210
00:07:51,360 --> 00:07:54,479
on that process pretty soon um and

211
00:07:54,479 --> 00:07:56,240
ideally then have a draft that we can

212
00:07:56,240 --> 00:07:58,720
start a working last call on and by

213
00:07:58,720 --> 00:08:01,280
pretty soon i hope that's within

214
00:08:01,280 --> 00:08:03,759
like weeks not months

215
00:08:03,759 --> 00:08:06,000
um

216
00:08:06,000 --> 00:08:10,400
and if you know as as and if the the the

217
00:08:10,400 --> 00:08:12,000
working group has recharted to do more

218
00:08:12,000 --> 00:08:13,919
work i think that that process worked

219
00:08:13,919 --> 00:08:15,680
kind of well so the chairs would be

220
00:08:15,680 --> 00:08:17,680
probably adopted again

221
00:08:17,680 --> 00:08:18,720
um

222
00:08:18,720 --> 00:08:21,440
so if we do continue and continue to do

223
00:08:21,440 --> 00:08:22,960
more work

224
00:08:22,960 --> 00:08:24,240
there will be an opportunity for people

225
00:08:24,240 --> 00:08:27,599
to say they'd like to help out there too

226
00:08:27,599 --> 00:08:29,599
and with that

227
00:08:29,599 --> 00:08:31,919
we move on to the

228
00:08:31,919 --> 00:08:34,080
current drafts

229
00:08:34,080 --> 00:08:36,000
now justice do you want to

230
00:08:36,000 --> 00:08:37,760
take control of the

231
00:08:37,760 --> 00:08:40,399
slide movement or would you like me to

232
00:08:40,399 --> 00:08:43,919
do the next slide stuff for you

233
00:08:45,680 --> 00:08:47,360
i i don't know how that works maybe you

234
00:08:47,360 --> 00:08:49,839
can drive the slides

235
00:08:49,839 --> 00:08:52,640
okay so uh whenever you want me to go to

236
00:08:52,640 --> 00:08:55,680
the next slide just tell me

237
00:08:55,680 --> 00:08:57,120
right so

238
00:08:57,120 --> 00:08:59,600
this is a brief overview of what we

239
00:08:59,600 --> 00:09:01,440
changed or what we are proposing to

240
00:09:01,440 --> 00:09:03,760
change in openptp

241
00:09:03,760 --> 00:09:06,959
and next slide please

242
00:09:06,959 --> 00:09:08,959
first of all we'd like to

243
00:09:08,959 --> 00:09:11,440
oh you removed the slide

244
00:09:11,440 --> 00:09:14,320
uh did i maybe i skipped

245
00:09:14,320 --> 00:09:17,200
who who read actually draft

246
00:09:17,200 --> 00:09:18,560
so

247
00:09:18,560 --> 00:09:21,440
i don't know how i get a

248
00:09:21,440 --> 00:09:23,600
sense of that but maybe the room can get

249
00:09:23,600 --> 00:09:25,519
a sense of who read the graph

250
00:09:25,519 --> 00:09:30,000
yes uh so who's read the current drafts

251
00:09:30,399 --> 00:09:31,600
oh okay

252
00:09:31,600 --> 00:09:33,279
i don't know if your audio can be higher

253
00:09:33,279 --> 00:09:34,720
or

254
00:09:34,720 --> 00:09:37,839
a little bit low in the room

255
00:09:39,360 --> 00:09:41,920
uh so i guess we can use the show of

256
00:09:41,920 --> 00:09:44,160
hands tool

257
00:09:44,160 --> 00:09:46,800
where's the bloody show hands still

258
00:09:46,800 --> 00:09:49,760
oh thank you dkg

259
00:09:49,760 --> 00:09:51,680
so again there's a there's a poll

260
00:09:51,680 --> 00:09:52,959
happening at the moment if you've read

261
00:09:52,959 --> 00:09:54,080
the drafts

262
00:09:54,080 --> 00:09:57,480
indicate so

263
00:10:05,120 --> 00:10:06,800
okay so that seems to stabilize we have

264
00:10:06,800 --> 00:10:08,079
about eight people who are kind of up to

265
00:10:08,079 --> 00:10:10,000
speed in the draft and just in the room

266
00:10:10,000 --> 00:10:11,839
for my own sanity because i like that

267
00:10:11,839 --> 00:10:13,279
too how many people here i've kind of

268
00:10:13,279 --> 00:10:16,160
read the latest drafts

269
00:10:17,120 --> 00:10:19,040
four two of whom are on the designer

270
00:10:19,040 --> 00:10:21,279
okay

271
00:10:21,519 --> 00:10:23,680
okay

272
00:10:23,680 --> 00:10:26,240
all right so about eight uh up to speed

273
00:10:26,240 --> 00:10:27,360
justice

274
00:10:27,360 --> 00:10:28,959
next slide i guess all right

275
00:10:28,959 --> 00:10:32,320
yeah next slide

276
00:10:32,320 --> 00:10:35,040
so let's talk about the exciting changes

277
00:10:35,040 --> 00:10:36,560
and

278
00:10:36,560 --> 00:10:40,800
maybe the most important thing is aad

279
00:10:40,800 --> 00:10:44,640
we had aad support in the this draft

280
00:10:44,640 --> 00:10:46,959
but we changed that up a little and we

281
00:10:46,959 --> 00:10:49,279
decided to go with the version two of

282
00:10:49,279 --> 00:10:51,120
the side d packet

283
00:10:51,120 --> 00:10:53,680
rather than specifying version two of

284
00:10:53,680 --> 00:10:54,720
the

285
00:10:54,720 --> 00:10:57,279
this aad packet

286
00:10:57,279 --> 00:10:58,399
um

287
00:10:58,399 --> 00:11:00,240
because we thought it would be weird to

288
00:11:00,240 --> 00:11:02,560
come out with the version two

289
00:11:02,560 --> 00:11:06,319
packet as the first version

290
00:11:06,640 --> 00:11:08,399
i i get a little bit of echo from the

291
00:11:08,399 --> 00:11:10,880
room can you turn that down

292
00:11:10,880 --> 00:11:13,440
uh i i cannot sorry

293
00:11:13,440 --> 00:11:15,839
okay

294
00:11:16,320 --> 00:11:17,760
so

295
00:11:17,760 --> 00:11:19,680
compared to the first version of the

296
00:11:19,680 --> 00:11:22,480
site d packet we actually have fields on

297
00:11:22,480 --> 00:11:24,640
the packet that specified the cipher and

298
00:11:24,640 --> 00:11:26,079
aed mode

299
00:11:26,079 --> 00:11:28,880
and we also include a salt

300
00:11:28,880 --> 00:11:31,440
and then we introduced a key derivation

301
00:11:31,440 --> 00:11:34,160
step using hkdf

302
00:11:34,160 --> 00:11:35,120
and

303
00:11:35,120 --> 00:11:37,440
that gives us two things first

304
00:11:37,440 --> 00:11:40,160
it authenticates the context as in the

305
00:11:40,160 --> 00:11:42,640
cipher and ad mode

306
00:11:42,640 --> 00:11:45,200
so it provides key separation between

307
00:11:45,200 --> 00:11:46,160
different

308
00:11:46,160 --> 00:11:48,399
ciphers and aad modes to prevent

309
00:11:48,399 --> 00:11:51,040
downgrade attacks

310
00:11:51,040 --> 00:11:54,720
and the per message salt gives a simple

311
00:11:54,720 --> 00:11:58,240
message key so in the future if you have

312
00:11:58,240 --> 00:12:00,639
a open pgp message

313
00:12:00,639 --> 00:12:03,839
you can always reply to that message

314
00:12:03,839 --> 00:12:06,959
by reusing the

315
00:12:07,519 --> 00:12:09,519
isometric key material

316
00:12:09,519 --> 00:12:12,800
and using a different sort

317
00:12:12,959 --> 00:12:15,760
next slide please

318
00:12:18,720 --> 00:12:20,880
so i'm going to go into a bit of detail

319
00:12:20,880 --> 00:12:22,399
because

320
00:12:22,399 --> 00:12:24,399
if you want to look at anything that we

321
00:12:24,399 --> 00:12:26,160
changed please look at this yeah how do

322
00:12:26,160 --> 00:12:28,000
i get rid of that

323
00:12:28,000 --> 00:12:29,600
um

324
00:12:29,600 --> 00:12:32,560
so we start out with the session key

325
00:12:32,560 --> 00:12:35,040
and that comes either from the pk esk

326
00:12:35,040 --> 00:12:36,079
packet

327
00:12:36,079 --> 00:12:38,639
asymmetrically encrypted or from an ske

328
00:12:38,639 --> 00:12:42,000
sk packet symmetrically encrypted

329
00:12:42,000 --> 00:12:44,240
and then we used that as input keying

330
00:12:44,240 --> 00:12:47,519
material for hkdf

331
00:12:47,519 --> 00:12:50,399
we get the sword from the version two

332
00:12:50,399 --> 00:12:52,959
side d packet

333
00:12:52,959 --> 00:12:56,720
and as input parameter for hkdf we use

334
00:12:56,720 --> 00:12:58,800
the pack attack the packet version

335
00:12:58,800 --> 00:13:03,760
cipher and aed mode and the chunk size

336
00:13:03,760 --> 00:13:05,600
and out of that

337
00:13:05,600 --> 00:13:07,839
we get a message key

338
00:13:07,839 --> 00:13:09,760
for the cipher

339
00:13:09,760 --> 00:13:14,720
and part of the nonce for the aed mode

340
00:13:15,200 --> 00:13:18,680
next slide piece

341
00:13:24,079 --> 00:13:26,399
so

342
00:13:27,120 --> 00:13:28,720
let's look at the

343
00:13:28,720 --> 00:13:31,200
how we use aad

344
00:13:31,200 --> 00:13:33,279
first we derive the message key using

345
00:13:33,279 --> 00:13:35,440
hkdf

346
00:13:35,440 --> 00:13:36,399
then

347
00:13:36,399 --> 00:13:38,639
it derives the leftmost parts of the

348
00:13:38,639 --> 00:13:40,079
nons

349
00:13:40,079 --> 00:13:42,639
also using hkdf

350
00:13:42,639 --> 00:13:44,959
and then the lower or the rightmost

351
00:13:44,959 --> 00:13:46,560
eight octets

352
00:13:46,560 --> 00:13:48,720
are big nd encounter

353
00:13:48,720 --> 00:13:51,680
starting from zero

354
00:13:51,680 --> 00:13:54,240
as additional authenticated data we use

355
00:13:54,240 --> 00:13:58,079
the same data as we gave to hkdf as the

356
00:13:58,079 --> 00:14:01,319
input parameter

357
00:14:02,480 --> 00:14:05,279
then we do chunked aad

358
00:14:05,279 --> 00:14:07,920
our chunk sizes are powers of two

359
00:14:07,920 --> 00:14:11,760
ranging from 64 bytes to 4 megabytes

360
00:14:11,760 --> 00:14:13,519
a message contains

361
00:14:13,519 --> 00:14:15,680
at least one chunk

362
00:14:15,680 --> 00:14:19,519
and only the last chunk may be truncated

363
00:14:19,519 --> 00:14:21,600
every chunk is directly followed by an

364
00:14:21,600 --> 00:14:23,680
authentication tag

365
00:14:23,680 --> 00:14:26,639
and the last chunk

366
00:14:26,639 --> 00:14:29,120
is the final zero size chunk

367
00:14:29,120 --> 00:14:32,320
which also includes as the

368
00:14:32,320 --> 00:14:33,760
aad

369
00:14:33,760 --> 00:14:36,720
the plaintext length

370
00:14:38,560 --> 00:14:42,119
that's like these

371
00:14:45,760 --> 00:14:46,639
so

372
00:14:46,639 --> 00:14:48,079
here you see

373
00:14:48,079 --> 00:14:49,680
sample 4

374
00:14:49,680 --> 00:14:52,719
and 5 messages

375
00:14:52,800 --> 00:14:55,519
on the left you see a version 4 message

376
00:14:55,519 --> 00:14:58,560
within sksk packet

377
00:14:58,560 --> 00:14:59,440
and

378
00:14:59,440 --> 00:15:01,120
notably

379
00:15:01,120 --> 00:15:04,000
it contains the

380
00:15:04,000 --> 00:15:08,079
the cipher used for the site d packet

381
00:15:08,079 --> 00:15:10,880
as plain text in the

382
00:15:10,880 --> 00:15:13,600
encrypted session scheme

383
00:15:13,600 --> 00:15:16,320
so the version 1 side d packet

384
00:15:16,320 --> 00:15:19,360
has no fields besides the version

385
00:15:19,360 --> 00:15:22,480
and it only knows the cipher mode to use

386
00:15:22,480 --> 00:15:24,079
or the cipher to use

387
00:15:24,079 --> 00:15:25,360
from the

388
00:15:25,360 --> 00:15:28,160
esk packet

389
00:15:28,160 --> 00:15:29,600
and in that

390
00:15:29,600 --> 00:15:32,320
you find a literal data packet

391
00:15:32,320 --> 00:15:36,720
and an mdc packet mdc packet is opt's

392
00:15:36,720 --> 00:15:39,360
legacy way of authenticating cypher

393
00:15:39,360 --> 00:15:41,519
screens

394
00:15:41,519 --> 00:15:43,360
in contrast to that

395
00:15:43,360 --> 00:15:47,360
on the right you see a v5 message

396
00:15:47,360 --> 00:15:49,680
where

397
00:15:51,440 --> 00:15:54,480
you have the cipher mode and

398
00:15:54,480 --> 00:15:56,320
aad mode

399
00:15:56,320 --> 00:15:58,399
in the safety packet

400
00:15:58,399 --> 00:16:02,320
as well as the chunk size and the salt

401
00:16:02,639 --> 00:16:03,519
so

402
00:16:03,519 --> 00:16:05,360
the metadata is in the packet where it

403
00:16:05,360 --> 00:16:08,360
belongs

404
00:16:08,720 --> 00:16:11,199
in that you find the literal data packet

405
00:16:11,199 --> 00:16:13,519
and the padding packet

406
00:16:13,519 --> 00:16:16,959
which we will come to in a minute

407
00:16:19,040 --> 00:16:19,920
and

408
00:16:19,920 --> 00:16:22,959
previously we kind of relied on

409
00:16:22,959 --> 00:16:26,959
the non-malleability of the

410
00:16:28,720 --> 00:16:31,600
ske-sk or pksk packet

411
00:16:31,600 --> 00:16:34,480
to prevent cross-grade attacks

412
00:16:34,480 --> 00:16:37,360
in cypher or ad mode

413
00:16:37,360 --> 00:16:40,800
whereas in the new scheme we use

414
00:16:40,800 --> 00:16:44,000
hkdf products

415
00:16:45,199 --> 00:16:49,120
all right next next slide piece

416
00:16:49,680 --> 00:16:52,480
so what's the status

417
00:16:52,480 --> 00:16:55,279
nibir has implemented that in the branch

418
00:16:55,279 --> 00:16:57,360
called nupg

419
00:16:57,360 --> 00:17:00,079
and i've implemented that for sequoia

420
00:17:00,079 --> 00:17:02,959
and generated test vectors with that

421
00:17:02,959 --> 00:17:04,559
i can report that

422
00:17:04,559 --> 00:17:07,039
our support for eax is good

423
00:17:07,039 --> 00:17:09,760
gcm is a bit problematic

424
00:17:09,760 --> 00:17:11,919
and ocb

425
00:17:11,919 --> 00:17:14,720
is not as widely supported as we'd like

426
00:17:14,720 --> 00:17:16,640
because it used to be covered with

427
00:17:16,640 --> 00:17:19,640
patents

428
00:17:20,240 --> 00:17:23,199
when we look at the ecosystem

429
00:17:23,199 --> 00:17:25,280
we will start to think you need to start

430
00:17:25,280 --> 00:17:28,000
to think about a message api

431
00:17:28,000 --> 00:17:31,520
so if you have an open pgp message

432
00:17:31,520 --> 00:17:35,600
you want to be able to reply to that

433
00:17:35,919 --> 00:17:38,640
next slide please

434
00:17:40,480 --> 00:17:42,400
let's talk a little bit about

435
00:17:42,400 --> 00:17:44,320
packet versions and how they can be

436
00:17:44,320 --> 00:17:47,200
combined because we've seen that

437
00:17:47,200 --> 00:17:49,360
with the site d version 2 packet we

438
00:17:49,360 --> 00:17:51,039
moved

439
00:17:51,039 --> 00:17:52,320
cipher

440
00:17:52,320 --> 00:17:55,600
and ad mode to the

441
00:17:55,600 --> 00:17:58,160
to the site d packet so it no longer is

442
00:17:58,160 --> 00:18:00,720
in the session key

443
00:18:00,720 --> 00:18:04,160
so obviously you can no longer use the

444
00:18:04,160 --> 00:18:08,000
old kind of pke sk and sksk packets

445
00:18:08,000 --> 00:18:09,280
with the new

446
00:18:09,280 --> 00:18:10,960
sight d packet

447
00:18:10,960 --> 00:18:12,960
so

448
00:18:12,960 --> 00:18:15,280
um

449
00:18:15,280 --> 00:18:17,039
likewise

450
00:18:17,039 --> 00:18:19,919
we defined a new signature

451
00:18:19,919 --> 00:18:23,360
type and that can only be created with

452
00:18:23,360 --> 00:18:25,039
a new kind of

453
00:18:25,039 --> 00:18:28,039
keys

454
00:18:28,080 --> 00:18:30,000
and

455
00:18:30,000 --> 00:18:31,760
that leaves the question

456
00:18:31,760 --> 00:18:33,600
who can use what kind of packets are

457
00:18:33,600 --> 00:18:36,160
features and we use the same established

458
00:18:36,160 --> 00:18:38,160
signaling mechanism

459
00:18:38,160 --> 00:18:39,280
where

460
00:18:39,280 --> 00:18:41,440
optp certificates

461
00:18:41,440 --> 00:18:42,880
can have

462
00:18:42,880 --> 00:18:44,320
preferences

463
00:18:44,320 --> 00:18:46,080
and the feature sub packet and we can

464
00:18:46,080 --> 00:18:49,520
advertise feature or support for the new

465
00:18:49,520 --> 00:18:51,120
version in

466
00:18:51,120 --> 00:18:54,239
the feature subject

467
00:18:54,720 --> 00:18:57,840
next slide please

468
00:18:59,760 --> 00:19:01,360
yeah so just to note on the previous one

469
00:19:01,360 --> 00:19:03,600
there in uh

470
00:19:03,600 --> 00:19:05,440
in a jabber werner just points out that

471
00:19:05,440 --> 00:19:07,840
uh navy's loopy g implementation is is

472
00:19:07,840 --> 00:19:09,360
not a

473
00:19:09,360 --> 00:19:10,960
uh what do you think he said that what

474
00:19:10,960 --> 00:19:12,480
diva did our experiments to understand

475
00:19:12,480 --> 00:19:13,679
the new things it's you know it's not an

476
00:19:13,679 --> 00:19:15,520
official implementation he just wanted

477
00:19:15,520 --> 00:19:17,840
to point that out i guess right

478
00:19:17,840 --> 00:19:20,000
so

479
00:19:20,080 --> 00:19:23,200
that's true all of our support is

480
00:19:23,200 --> 00:19:25,520
not in the main line branches yet

481
00:19:25,520 --> 00:19:28,000
and when i say interoperable i mean

482
00:19:28,000 --> 00:19:31,919
we've demonstrated that it works once

483
00:19:32,720 --> 00:19:34,640
um

484
00:19:34,640 --> 00:19:36,320
because we start with symmetric

485
00:19:36,320 --> 00:19:37,840
encryption let's stay with symmetric

486
00:19:37,840 --> 00:19:39,840
encryption for a little while because we

487
00:19:39,840 --> 00:19:42,559
use the same mechanism

488
00:19:42,559 --> 00:19:45,520
the we've seen the ske sk packet which

489
00:19:45,520 --> 00:19:47,840
is a symmetrically encrypted session key

490
00:19:47,840 --> 00:19:50,159
packet

491
00:19:50,320 --> 00:19:53,600
in v5 we also use aed there and we use

492
00:19:53,600 --> 00:19:56,320
the same scheme using hkdf

493
00:19:56,320 --> 00:19:59,520
to provide key separation

494
00:19:59,520 --> 00:20:03,600
and we change the syntax a little bit

495
00:20:04,000 --> 00:20:07,280
and can now robustly parse this packet

496
00:20:07,280 --> 00:20:09,520
even if you don't understand

497
00:20:09,520 --> 00:20:12,799
for example an aad mode or

498
00:20:12,799 --> 00:20:15,760
string to key mode

499
00:20:16,080 --> 00:20:19,559
next slide piece

500
00:20:21,280 --> 00:20:23,600
and the same applies to secret key

501
00:20:23,600 --> 00:20:24,960
encryption

502
00:20:24,960 --> 00:20:28,000
so we use the same

503
00:20:28,720 --> 00:20:31,520
construction around hkdf

504
00:20:31,520 --> 00:20:34,720
and because we align the layout with the

505
00:20:34,720 --> 00:20:36,480
skesk

506
00:20:36,480 --> 00:20:38,480
metadata

507
00:20:38,480 --> 00:20:41,360
we can also robustly parse this packet

508
00:20:41,360 --> 00:20:42,320
now

509
00:20:42,320 --> 00:20:43,919
or secret

510
00:20:43,919 --> 00:20:45,760
encrypted secret keys

511
00:20:45,760 --> 00:20:49,158
next slide please

512
00:20:51,120 --> 00:20:53,600
when we look at the key material packets

513
00:20:53,600 --> 00:20:55,760
there is only a little change

514
00:20:55,760 --> 00:20:56,960
we added

515
00:20:56,960 --> 00:20:59,440
an octet count to the public key

516
00:20:59,440 --> 00:21:01,520
material

517
00:21:01,520 --> 00:21:03,120
and

518
00:21:03,120 --> 00:21:06,000
that has the advantage that

519
00:21:06,000 --> 00:21:07,679
given that we can

520
00:21:07,679 --> 00:21:09,200
that we have an

521
00:21:09,200 --> 00:21:11,120
e5

522
00:21:11,120 --> 00:21:12,559
secret key

523
00:21:12,559 --> 00:21:17,520
we can convert that into a v5 public key

524
00:21:17,520 --> 00:21:19,520
which is needed if you

525
00:21:19,520 --> 00:21:21,039
if you want to compute the fingerprint

526
00:21:21,039 --> 00:21:22,720
because the fingerprint is only about

527
00:21:22,720 --> 00:21:26,000
the public key parts

528
00:21:26,000 --> 00:21:29,120
so you need to know how much public key

529
00:21:29,120 --> 00:21:30,480
material is there

530
00:21:30,480 --> 00:21:34,080
so that you can skip the rest

531
00:21:34,159 --> 00:21:36,880
next slide piece

532
00:21:39,280 --> 00:21:41,039
we also introduced the new version of

533
00:21:41,039 --> 00:21:43,120
the pkesk packet

534
00:21:43,120 --> 00:21:45,039
not much changed there

535
00:21:45,039 --> 00:21:46,880
except now there is a recipient

536
00:21:46,880 --> 00:21:48,080
fingerprint

537
00:21:48,080 --> 00:21:51,039
instead of a recipient pid

538
00:21:51,039 --> 00:21:52,159
and

539
00:21:52,159 --> 00:21:55,200
as with the sksk version 5 packet

540
00:21:55,200 --> 00:21:56,640
we no longer

541
00:21:56,640 --> 00:21:59,280
include the cipher in the encrypted

542
00:21:59,280 --> 00:22:01,600
session

543
00:22:02,240 --> 00:22:04,960
next slide please

544
00:22:06,320 --> 00:22:09,120
we also added argon 2

545
00:22:09,120 --> 00:22:11,039
id

546
00:22:11,039 --> 00:22:14,880
um as the new method to derive a key

547
00:22:14,880 --> 00:22:18,400
from a password

548
00:22:21,280 --> 00:22:22,640
argon 2 is

549
00:22:22,640 --> 00:22:26,159
specified in rc9106

550
00:22:26,159 --> 00:22:29,440
it has three parameters

551
00:22:29,440 --> 00:22:31,360
the number of passes the degree of

552
00:22:31,360 --> 00:22:32,960
parallelism

553
00:22:32,960 --> 00:22:33,840
and

554
00:22:33,840 --> 00:22:36,720
the memory parameter and we expose all

555
00:22:36,720 --> 00:22:40,640
those parameters in opengdp

556
00:22:40,640 --> 00:22:42,400
and

557
00:22:42,400 --> 00:22:44,159
both nib and he have implemented that

558
00:22:44,159 --> 00:22:48,240
and who are able to exchange messages

559
00:22:49,679 --> 00:22:53,240
next slide please

560
00:22:56,320 --> 00:22:58,320
we did a bit of an update for the

561
00:22:58,320 --> 00:22:59,440
signature

562
00:22:59,440 --> 00:23:00,480
packet

563
00:23:00,480 --> 00:23:02,480
we notably

564
00:23:02,480 --> 00:23:05,840
we have a prefix salt so there is a salt

565
00:23:05,840 --> 00:23:07,600
parameter

566
00:23:07,600 --> 00:23:08,720
that is

567
00:23:08,720 --> 00:23:12,159
hashed as the very first thing

568
00:23:12,159 --> 00:23:14,159
and there are

569
00:23:14,159 --> 00:23:15,120
kind of

570
00:23:15,120 --> 00:23:17,760
three reasons for that

571
00:23:17,760 --> 00:23:20,480
first we defend against attacks on the

572
00:23:20,480 --> 00:23:23,440
hash functions collision resistance

573
00:23:23,440 --> 00:23:26,559
we used sha-1 for too long

574
00:23:26,559 --> 00:23:29,360
and saw that degenerate

575
00:23:29,360 --> 00:23:32,880
and adding assault actually

576
00:23:32,880 --> 00:23:37,200
protects against attacks against that

577
00:23:37,200 --> 00:23:39,280
adding a sword

578
00:23:39,280 --> 00:23:41,600
also

579
00:23:41,919 --> 00:23:43,760
helps against

580
00:23:43,760 --> 00:23:46,000
evil web application attacks

581
00:23:46,000 --> 00:23:49,000
where

582
00:24:00,480 --> 00:24:01,919
maybe

583
00:24:01,919 --> 00:24:04,400
then you can say something about that

584
00:24:04,400 --> 00:24:05,279
and

585
00:24:05,279 --> 00:24:08,720
while we were specking this out

586
00:24:08,720 --> 00:24:10,559
there is actually another attack where

587
00:24:10,559 --> 00:24:13,360
this project helps against

588
00:24:13,360 --> 00:24:14,400
which is

589
00:24:14,400 --> 00:24:16,159
a concern

590
00:24:16,159 --> 00:24:19,360
where ed dsa is used to

591
00:24:19,360 --> 00:24:21,919
compute the same signature twice and in

592
00:24:21,919 --> 00:24:23,279
the second run

593
00:24:23,279 --> 00:24:25,760
there is a fault injection attack

594
00:24:25,760 --> 00:24:26,700
and that can lead to

595
00:24:26,700 --> 00:24:29,200
[Music]

596
00:24:29,200 --> 00:24:32,799
secret key recovery

597
00:24:32,799 --> 00:24:35,039
and by making sure there is thought in

598
00:24:35,039 --> 00:24:37,039
the signature

599
00:24:37,039 --> 00:24:39,360
you make pgp signatures

600
00:24:39,360 --> 00:24:41,679
non-deterministic so you

601
00:24:41,679 --> 00:24:43,039
never

602
00:24:43,039 --> 00:24:47,240
sign the same message twice

603
00:24:47,840 --> 00:24:50,159
there is a related change

604
00:24:50,159 --> 00:24:51,360
for the

605
00:24:51,360 --> 00:24:53,200
one part signature packet if you want to

606
00:24:53,200 --> 00:24:55,520
do a prefix salt you need to

607
00:24:55,520 --> 00:24:58,159
have this information

608
00:24:58,159 --> 00:25:00,320
early on so you need to include it in

609
00:25:00,320 --> 00:25:01,760
the

610
00:25:01,760 --> 00:25:05,600
um one pass signature packet

611
00:25:06,159 --> 00:25:08,400
so

612
00:25:09,039 --> 00:25:10,080
there is a

613
00:25:10,080 --> 00:25:13,039
another change we also use a fingerprint

614
00:25:13,039 --> 00:25:16,000
there instead of a key

615
00:25:16,880 --> 00:25:21,039
alright next slide piece

616
00:25:22,320 --> 00:25:25,918
we included a padding packet

617
00:25:26,559 --> 00:25:28,799
the padding packet is ignored like the

618
00:25:28,799 --> 00:25:31,279
marker pack packet

619
00:25:31,279 --> 00:25:33,840
but it can have

620
00:25:33,840 --> 00:25:35,600
an arbitrary length

621
00:25:35,600 --> 00:25:38,000
and it can appear anywhere

622
00:25:38,000 --> 00:25:40,880
but we give guidance for

623
00:25:40,880 --> 00:25:42,799
where to put the packet to increase

624
00:25:42,799 --> 00:25:44,960
compatibility with the

625
00:25:44,960 --> 00:25:47,679
legacy implementation

626
00:25:47,679 --> 00:25:49,279
the body of the

627
00:25:49,279 --> 00:25:52,080
padding package should be random

628
00:25:52,080 --> 00:25:54,960
to protect the padding from

629
00:25:54,960 --> 00:25:57,360
any compression layers

630
00:25:57,360 --> 00:25:59,200
um

631
00:25:59,200 --> 00:26:03,279
like like in the transport protocol

632
00:26:03,840 --> 00:26:06,559
next slide please

633
00:26:08,559 --> 00:26:10,320
there are a number of general

634
00:26:10,320 --> 00:26:12,320
improvements so

635
00:26:12,320 --> 00:26:15,360
we defined how to use mpis

636
00:26:15,360 --> 00:26:17,919
multiprecision integers to encode

637
00:26:17,919 --> 00:26:20,159
non-integer data

638
00:26:20,159 --> 00:26:23,520
because modern ec algorithms

639
00:26:23,520 --> 00:26:24,960
um

640
00:26:24,960 --> 00:26:28,240
produce and operate on octet strings

641
00:26:28,240 --> 00:26:32,720
which are not necessarily integers

642
00:26:34,720 --> 00:26:35,600
we

643
00:26:35,600 --> 00:26:37,440
hope pgp has two

644
00:26:37,440 --> 00:26:39,919
ways to express packets

645
00:26:39,919 --> 00:26:42,080
the new and the old way

646
00:26:42,080 --> 00:26:44,880
where the new wave was introduced in

647
00:26:44,880 --> 00:26:49,919
1998 and the old one deprecated in 1998

648
00:26:49,919 --> 00:26:53,840
and we kind of uh

649
00:26:53,840 --> 00:26:56,080
made the next step in the deprecation

650
00:26:56,080 --> 00:26:57,760
process

651
00:26:57,760 --> 00:26:58,720
by

652
00:26:58,720 --> 00:27:01,039
calling the old one the legacy format

653
00:27:01,039 --> 00:27:02,960
and warning

654
00:27:02,960 --> 00:27:07,039
more sternly against it

655
00:27:07,039 --> 00:27:09,919
we have an intended recipient packet

656
00:27:09,919 --> 00:27:11,039
in

657
00:27:11,039 --> 00:27:13,039
in signatures

658
00:27:13,039 --> 00:27:14,880
so you can

659
00:27:14,880 --> 00:27:17,840
bind a signing context to an encryption

660
00:27:17,840 --> 00:27:20,840
context

661
00:27:20,960 --> 00:27:22,640
and

662
00:27:22,640 --> 00:27:24,159
this has been

663
00:27:24,159 --> 00:27:26,159
proposed for quite a while and we

664
00:27:26,159 --> 00:27:28,720
included it because it is a

665
00:27:28,720 --> 00:27:30,080
graphic

666
00:27:30,080 --> 00:27:32,960
refresh thing

667
00:27:33,520 --> 00:27:34,960
we changed how

668
00:27:34,960 --> 00:27:37,360
certificates look

669
00:27:37,360 --> 00:27:39,440
notably

670
00:27:39,440 --> 00:27:43,600
they are now valid without a user id

671
00:27:43,919 --> 00:27:46,080
previously

672
00:27:46,080 --> 00:27:48,799
certificates had to include one user id

673
00:27:48,799 --> 00:27:50,559
but

674
00:27:50,559 --> 00:27:52,799
there was no requirement on it being

675
00:27:52,799 --> 00:27:55,679
actually bound by signature

676
00:27:55,679 --> 00:27:57,520
and

677
00:27:57,520 --> 00:28:00,840
now we made the user id

678
00:28:00,840 --> 00:28:02,960
optional but there is ongoing

679
00:28:02,960 --> 00:28:04,960
discussions

680
00:28:04,960 --> 00:28:09,120
and daniel will talk more about that

681
00:28:09,120 --> 00:28:11,279
we also switch two chains

682
00:28:11,279 --> 00:28:13,600
we now operate on markdown

683
00:28:13,600 --> 00:28:16,399
we use one sentence per line and we

684
00:28:16,399 --> 00:28:18,640
or the design team worked mostly in

685
00:28:18,640 --> 00:28:19,760
gitlab

686
00:28:19,760 --> 00:28:22,320
and that worked well for us

687
00:28:22,320 --> 00:28:24,720
we introduced a lot more tables and try

688
00:28:24,720 --> 00:28:26,640
to

689
00:28:26,640 --> 00:28:28,799
bring more structure to the text in

690
00:28:28,799 --> 00:28:31,799
general

691
00:28:31,919 --> 00:28:34,640
next slide please

692
00:28:36,559 --> 00:28:38,559
algorithms

693
00:28:38,559 --> 00:28:41,039
so for public key algorithms there is

694
00:28:41,039 --> 00:28:42,159
only

695
00:28:42,159 --> 00:28:43,120
um

696
00:28:43,120 --> 00:28:48,080
you have to do eddsa and dcdh

697
00:28:48,480 --> 00:28:50,480
you have to do

698
00:28:50,480 --> 00:28:52,480
ed25519

699
00:28:52,480 --> 00:28:55,679
and ecdh using curve25519

700
00:28:55,679 --> 00:28:56,720
that's

701
00:28:56,720 --> 00:28:58,960
openpgp's version of

702
00:28:58,960 --> 00:29:01,960
x25549

703
00:29:02,000 --> 00:29:03,840
and you should

704
00:29:03,840 --> 00:29:05,600
implement the same using

705
00:29:05,600 --> 00:29:08,399
curve 448

706
00:29:09,440 --> 00:29:11,360
if you look at cyphers the only

707
00:29:11,360 --> 00:29:16,240
mandatory to implement algorithms as128

708
00:29:16,240 --> 00:29:19,120
we added the camellia ciphers

709
00:29:19,120 --> 00:29:21,600
and strongly deprecated idea triple

710
00:29:21,600 --> 00:29:24,480
death and classified

711
00:29:25,520 --> 00:29:26,960
the only

712
00:29:26,960 --> 00:29:31,200
mandatory ad mode is ocb

713
00:29:31,600 --> 00:29:33,919
and we also added gcm because it's a

714
00:29:33,919 --> 00:29:35,679
fips approved

715
00:29:35,679 --> 00:29:38,559
aad mode

716
00:29:39,440 --> 00:29:41,279
nothing really happened

717
00:29:41,279 --> 00:29:43,360
to the hash algorithms

718
00:29:43,360 --> 00:29:45,600
so

719
00:29:46,600 --> 00:29:49,279
chart256 is mandatory and that's also

720
00:29:49,279 --> 00:29:51,919
used for fingerprint calculations

721
00:29:51,919 --> 00:29:53,200
um

722
00:29:53,200 --> 00:29:56,799
md5 sha1 and drive md are strongly

723
00:29:56,799 --> 00:29:59,279
deprecated

724
00:29:59,279 --> 00:30:02,000
next slide is

725
00:30:06,480 --> 00:30:09,440
kds and fingerprints so

726
00:30:09,440 --> 00:30:12,159
version five fingerprints are the output

727
00:30:12,159 --> 00:30:13,760
of share two

728
00:30:13,760 --> 00:30:16,880
and uh 32 octets

729
00:30:16,880 --> 00:30:19,360
and the five kids are the left most

730
00:30:19,360 --> 00:30:22,960
eight octets of the fingerprints

731
00:30:22,960 --> 00:30:24,880
this is an area where we spent a bit of

732
00:30:24,880 --> 00:30:27,440
time on but didn't really make any

733
00:30:27,440 --> 00:30:29,840
progress

734
00:30:30,960 --> 00:30:32,960
the worry is that

735
00:30:32,960 --> 00:30:36,159
the fingerprints will be very long

736
00:30:36,159 --> 00:30:38,320
and even less ergonomic than

737
00:30:38,320 --> 00:30:41,439
the four fingerprints

738
00:30:41,600 --> 00:30:43,520
with the we don't really have a solution

739
00:30:43,520 --> 00:30:45,650
for that but

740
00:30:45,650 --> 00:30:46,880
[Music]

741
00:30:46,880 --> 00:30:49,279
the the consensus is

742
00:30:49,279 --> 00:30:53,120
don't display fingerprints to use those

743
00:30:54,240 --> 00:30:56,960
next slide piece

744
00:31:01,679 --> 00:31:03,679
and with that

745
00:31:03,679 --> 00:31:05,919
let's talk more about

746
00:31:05,919 --> 00:31:07,440
areas where we

747
00:31:07,440 --> 00:31:11,120
are working on or need guidance or

748
00:31:11,120 --> 00:31:14,559
want to open up the discussion

749
00:31:14,559 --> 00:31:16,159
yeah so let's um

750
00:31:16,159 --> 00:31:17,279
so i think diana's going to start with

751
00:31:17,279 --> 00:31:18,559
that but let's first

752
00:31:18,559 --> 00:31:20,399
see are there any topics that have come

753
00:31:20,399 --> 00:31:22,320
up that people wanted to talk

754
00:31:22,320 --> 00:31:24,000
to on this and i think there certainly

755
00:31:24,000 --> 00:31:26,799
is one that verner raised about aad so

756
00:31:26,799 --> 00:31:28,960
werner do you want to jump in the

757
00:31:28,960 --> 00:31:33,240
mic line or just send audio

758
00:31:33,679 --> 00:31:35,600
yeah hello so

759
00:31:35,600 --> 00:31:37,760
hey

760
00:31:38,159 --> 00:31:39,120
um

761
00:31:39,120 --> 00:31:42,320
well i have some concerns so let me

762
00:31:42,320 --> 00:31:43,519
quickly uh

763
00:31:43,519 --> 00:31:45,200
um

764
00:31:45,200 --> 00:31:47,840
tell a bit about the history so in uh i

765
00:31:47,840 --> 00:31:49,840
think it was in summer in summer or late

766
00:31:49,840 --> 00:31:52,399
late summer i dropped out of the design

767
00:31:52,399 --> 00:31:53,279
team

768
00:31:53,279 --> 00:31:57,519
um because uh for one um i had some

769
00:31:57,519 --> 00:31:59,440
time resource problems

770
00:31:59,440 --> 00:32:02,080
and technically um we have finished all

771
00:32:02,080 --> 00:32:05,039
the uh critical the critical um

772
00:32:05,039 --> 00:32:06,159
questions

773
00:32:06,159 --> 00:32:08,799
why this design team had had been set up

774
00:32:08,799 --> 00:32:09,840
then

775
00:32:09,840 --> 00:32:12,080
and so everything was was fine at that

776
00:32:12,080 --> 00:32:15,279
point at that point and only a few

777
00:32:15,279 --> 00:32:17,200
things had to be done for example for

778
00:32:17,200 --> 00:32:21,200
example uh mpi easy how to describe the

779
00:32:21,200 --> 00:32:22,799
parameters in a bit in a better way and

780
00:32:22,799 --> 00:32:26,799
so on and some change some wording and

781
00:32:26,799 --> 00:32:29,760
these well more editorial things

782
00:32:29,760 --> 00:32:31,840
um and things

783
00:32:31,840 --> 00:32:34,320
what i've now seen is that there are

784
00:32:34,320 --> 00:32:38,080
large change large changes changes which

785
00:32:38,080 --> 00:32:40,480
um

786
00:32:40,640 --> 00:32:44,720
yeah so in 2018 in january 2018 four

787
00:32:44,720 --> 00:32:47,600
years ago four years ago we have started

788
00:32:47,600 --> 00:32:50,480
to deploy deploy aaid because on an

789
00:32:50,480 --> 00:32:51,919
internal

790
00:32:51,919 --> 00:32:53,840
agreement in the in the working group

791
00:32:53,840 --> 00:32:56,240
that this is the way we are going with

792
00:32:56,240 --> 00:32:59,279
aed and this has been overthrown by this

793
00:32:59,279 --> 00:33:00,320
new ide

794
00:33:00,320 --> 00:33:02,159
that's not good

795
00:33:02,159 --> 00:33:03,600
that

796
00:33:03,600 --> 00:33:06,080
is bad for the reputation of openpgp

797
00:33:06,080 --> 00:33:08,480
because it's not reliable cannot be seen

798
00:33:08,480 --> 00:33:11,039
as a reliable working working group if

799
00:33:11,039 --> 00:33:12,799
things like this

800
00:33:12,799 --> 00:33:15,120
um happen

801
00:33:15,120 --> 00:33:18,799
these are my main concerns uh having gcm

802
00:33:18,799 --> 00:33:22,480
is bad but i suggested that anyway um

803
00:33:22,480 --> 00:33:24,080
because of uh

804
00:33:24,080 --> 00:33:26,480
getting the certifications well

805
00:33:26,480 --> 00:33:28,240
and there is currently no way to have

806
00:33:28,240 --> 00:33:30,720
ocd in in flips and also not in the next

807
00:33:30,720 --> 00:33:32,320
few years

808
00:33:32,320 --> 00:33:34,799
okay that's for me

809
00:33:34,799 --> 00:33:36,640
so let me see if i can just understand

810
00:33:36,640 --> 00:33:40,399
the concern correctly there um

811
00:33:40,399 --> 00:33:43,200
you so your main concern is that the

812
00:33:43,200 --> 00:33:46,640
the current draft specifies aed in a way

813
00:33:46,640 --> 00:33:49,519
that differs from

814
00:33:49,519 --> 00:33:52,640
the deployed implementation in

815
00:33:52,640 --> 00:33:55,440
canoe pgs is that the main concern

816
00:33:55,440 --> 00:33:59,760
are in blue including and in rnp

817
00:33:59,760 --> 00:34:02,320
and we did inter-operate testing on we

818
00:34:02,320 --> 00:34:04,880
had we had in the working group we had

819
00:34:04,880 --> 00:34:07,120
we had content that that this is the way

820
00:34:07,120 --> 00:34:09,760
to uh to go and this so this is the

821
00:34:09,760 --> 00:34:11,918
reason why it has been impla it has been

822
00:34:11,918 --> 00:34:13,199
implemented

823
00:34:13,199 --> 00:34:16,399
uh now last summer things seem to have

824
00:34:16,399 --> 00:34:18,000
changed then

825
00:34:18,000 --> 00:34:20,239
in particular after i dropped out of the

826
00:34:20,239 --> 00:34:23,440
design team if i knew about that so i

827
00:34:23,440 --> 00:34:25,679
would not have dropped all of that okay

828
00:34:25,679 --> 00:34:28,320
let's not worry too much about the

829
00:34:28,320 --> 00:34:30,079
who and when

830
00:34:30,079 --> 00:34:31,280
i think it's more interesting the you

831
00:34:31,280 --> 00:34:33,599
know the what and you know the output of

832
00:34:33,599 --> 00:34:34,960
the design team is input to the working

833
00:34:34,960 --> 00:34:36,560
group so if there's things that need

834
00:34:36,560 --> 00:34:37,918
changing or fixing that's that's

835
00:34:37,918 --> 00:34:40,560
perfectly normal um so i'm trying to

836
00:34:40,560 --> 00:34:41,839
understand

837
00:34:41,839 --> 00:34:43,599
can you be a little bit more specific as

838
00:34:43,599 --> 00:34:44,719
to

839
00:34:44,719 --> 00:34:48,320
where in the current draft

840
00:34:48,320 --> 00:34:52,320
needs fixing from your point of view

841
00:34:52,719 --> 00:34:53,760
well you

842
00:34:53,760 --> 00:34:55,679
you added new packets uh deprecate

843
00:34:55,679 --> 00:34:58,160
duplicated the old aid packets changed

844
00:34:58,160 --> 00:34:58,880
and

845
00:34:58,880 --> 00:35:01,280
changed the entire structure

846
00:35:01,280 --> 00:35:04,160
are so in particular it's about aeid

847
00:35:04,160 --> 00:35:06,720
which is was one of the main goals which

848
00:35:06,720 --> 00:35:09,520
have been chartered are here

849
00:35:09,520 --> 00:35:10,480
and

850
00:35:10,480 --> 00:35:14,599
that's that's a real concern

851
00:35:17,040 --> 00:35:19,920
also adding a new um new kd kdf is also

852
00:35:19,920 --> 00:35:21,280
not a good idea

853
00:35:21,280 --> 00:35:24,000
um from the mentor's view

854
00:35:24,000 --> 00:35:26,079
adding complexity

855
00:35:26,079 --> 00:35:28,240
so i see daniel in the queue you i guess

856
00:35:28,240 --> 00:35:29,760
you get to stand at the microphone even

857
00:35:29,760 --> 00:35:32,079
daniel

858
00:35:34,800 --> 00:35:36,720
does this thing work

859
00:35:36,720 --> 00:35:37,680
uh can

860
00:35:37,680 --> 00:35:39,520
can remote people hear daniel from the

861
00:35:39,520 --> 00:35:41,759
room

862
00:35:42,880 --> 00:35:45,920
no does it work like this can you hear

863
00:35:45,920 --> 00:35:47,119
me well

864
00:35:47,119 --> 00:35:48,240
okay good

865
00:35:48,240 --> 00:35:49,520
yeah so

866
00:35:49,520 --> 00:35:50,800
um

867
00:35:50,800 --> 00:35:52,000
i think

868
00:35:52,000 --> 00:35:55,760
some of the changes that were made um to

869
00:35:55,760 --> 00:35:56,839
aad

870
00:35:56,839 --> 00:36:00,000
were a result of

871
00:36:00,000 --> 00:36:01,680
adding gcm

872
00:36:01,680 --> 00:36:04,000
and i i thought i would just comment

873
00:36:04,000 --> 00:36:05,200
since

874
00:36:05,200 --> 00:36:08,400
uh that was partially my proposal

875
00:36:08,400 --> 00:36:11,680
um so there there was an attack

876
00:36:11,680 --> 00:36:12,800
that

877
00:36:12,800 --> 00:36:15,520
lara brisagini who is one of my

878
00:36:15,520 --> 00:36:18,480
colleagues pointed out

879
00:36:18,480 --> 00:36:21,920
which is when you have a gcm encrypted

880
00:36:21,920 --> 00:36:24,000
message

881
00:36:24,000 --> 00:36:27,280
you can do a downgrade attack by

882
00:36:27,280 --> 00:36:29,520
converting it into

883
00:36:29,520 --> 00:36:33,040
um a message that claims to be cfb

884
00:36:33,040 --> 00:36:34,720
encrypted

885
00:36:34,720 --> 00:36:36,320
given that

886
00:36:36,320 --> 00:36:41,010
cfp and gcm are very similar modes

887
00:36:41,010 --> 00:36:42,400
[Music]

888
00:36:42,400 --> 00:36:44,800
you can then

889
00:36:44,800 --> 00:36:47,040
sometimes even successfully decrypt the

890
00:36:47,040 --> 00:36:49,280
message as cfp

891
00:36:49,280 --> 00:36:50,079
if

892
00:36:50,079 --> 00:36:51,599
there is a

893
00:36:51,599 --> 00:36:55,920
broken implementation of mdc which

894
00:36:55,920 --> 00:36:58,720
has happened in the past

895
00:36:58,720 --> 00:37:00,340
this can

896
00:37:00,340 --> 00:37:01,839
[Applause]

897
00:37:01,839 --> 00:37:02,960
lead to

898
00:37:02,960 --> 00:37:04,800
a decryption article

899
00:37:04,800 --> 00:37:06,800
or rather if there is a decryption

900
00:37:06,800 --> 00:37:09,359
article in cfb

901
00:37:09,359 --> 00:37:12,240
you then also have a decryption article

902
00:37:12,240 --> 00:37:14,320
in gcm

903
00:37:14,320 --> 00:37:15,119
so

904
00:37:15,119 --> 00:37:17,599
the the concern was that

905
00:37:17,599 --> 00:37:19,599
if you can convert

906
00:37:19,599 --> 00:37:21,440
a message between

907
00:37:21,440 --> 00:37:22,640
different

908
00:37:22,640 --> 00:37:24,480
modes

909
00:37:24,480 --> 00:37:26,480
also you know cross-grade attacks

910
00:37:26,480 --> 00:37:28,720
between different aad modes even though

911
00:37:28,720 --> 00:37:31,680
we're not aware of any they might happen

912
00:37:31,680 --> 00:37:33,760
in the future

913
00:37:33,760 --> 00:37:36,480
so this is the main reason why we added

914
00:37:36,480 --> 00:37:39,359
key separation and um eight and adding

915
00:37:39,359 --> 00:37:43,440
an hkdf was the method we landed on

916
00:37:43,440 --> 00:37:46,640
uh in the design team in the end there

917
00:37:46,640 --> 00:37:50,240
are other possibilities such as putting

918
00:37:50,240 --> 00:37:54,320
the aad mode inside the encrypted

919
00:37:54,320 --> 00:37:55,839
uh public key encrypted session key

920
00:37:55,839 --> 00:37:57,680
packet or the

921
00:37:57,680 --> 00:38:00,320
secret key encrypted session key packet

922
00:38:00,320 --> 00:38:01,839
um

923
00:38:01,839 --> 00:38:04,880
i mean yeah i don't know how much you

924
00:38:04,880 --> 00:38:07,359
want me to go into the details but

925
00:38:07,359 --> 00:38:09,839
this is mainly the reason that many of

926
00:38:09,839 --> 00:38:12,960
those changes were made was a result of

927
00:38:12,960 --> 00:38:17,440
adding gcm which in turn was a result of

928
00:38:17,440 --> 00:38:18,880
wanting to

929
00:38:18,880 --> 00:38:22,079
um add a fips mode uh if that makes

930
00:38:22,079 --> 00:38:24,400
sense

931
00:38:26,079 --> 00:38:28,079
so i saw dkg briefly in the queue then

932
00:38:28,079 --> 00:38:29,599
jumped out

933
00:38:29,599 --> 00:38:31,440
but vernon i think you should feel free

934
00:38:31,440 --> 00:38:34,480
to respond there too if you wish

935
00:38:34,480 --> 00:38:35,520
um

936
00:38:35,520 --> 00:38:37,359
well okay so

937
00:38:37,359 --> 00:38:39,839
the better solution is not to have a way

938
00:38:39,839 --> 00:38:42,400
out to choose an algorithm so um

939
00:38:42,400 --> 00:38:44,880
now without without the pattern problem

940
00:38:44,880 --> 00:38:47,839
problems in ocb i would suggest to drop

941
00:38:47,839 --> 00:38:49,680
everything else and use only

942
00:38:49,680 --> 00:38:52,320
ocb and nothing nothing else

943
00:38:52,320 --> 00:38:53,760
and

944
00:38:53,760 --> 00:38:57,599
then better wait for for fips are to get

945
00:38:57,599 --> 00:38:59,280
straight and

946
00:38:59,280 --> 00:39:01,520
allows it i can't see that right now but

947
00:39:01,520 --> 00:39:03,599
i've i've seen that the brain build

948
00:39:03,599 --> 00:39:04,960
curves are also

949
00:39:04,960 --> 00:39:07,520
or will also go into flips so

950
00:39:07,520 --> 00:39:09,920
um there's there is a possibility to

951
00:39:09,920 --> 00:39:12,240
have lift and fibs

952
00:39:12,240 --> 00:39:15,560
in some time

953
00:39:17,200 --> 00:39:18,800
so again just so i understand you're

954
00:39:18,800 --> 00:39:21,680
suggesting to

955
00:39:23,440 --> 00:39:26,160
kind of revert this change

956
00:39:26,160 --> 00:39:27,520
and

957
00:39:27,520 --> 00:39:29,440
on the basis that ocb doesn't have the

958
00:39:29,440 --> 00:39:31,119
attack problem that daniel just

959
00:39:31,119 --> 00:39:33,599
mentioned

960
00:39:34,720 --> 00:39:37,200
yeah that that's right it's um

961
00:39:37,200 --> 00:39:39,280
that's one reason and it is in general

962
00:39:39,280 --> 00:39:41,359
better not to have not to have a way to

963
00:39:41,359 --> 00:39:43,359
choose between algorithms and we know

964
00:39:43,359 --> 00:39:46,000
that ocp is a good algorithm

965
00:39:46,000 --> 00:39:48,079
uh i can't see that there will be any

966
00:39:48,079 --> 00:39:50,880
reason to replace it they may and

967
00:39:50,880 --> 00:39:53,520
um as we talk about this gcm gcm has

968
00:39:53,520 --> 00:39:56,960
still a lot of problems um so okay put

969
00:39:56,960 --> 00:39:58,960
another packet into if you if they

970
00:39:58,960 --> 00:40:00,400
really want want to do this as an

971
00:40:00,400 --> 00:40:02,240
optional thing to have

972
00:40:02,240 --> 00:40:04,880
gcm with a id but for everything else

973
00:40:04,880 --> 00:40:06,800
for everything else we could just live

974
00:40:06,800 --> 00:40:10,400
with cf with cfb plus are one thing

975
00:40:10,400 --> 00:40:14,800
um which is also a solid way of

976
00:40:14,800 --> 00:40:17,359
of authenticated encryption also not

977
00:40:17,359 --> 00:40:19,920
standardized but this works and it can

978
00:40:19,920 --> 00:40:23,280
be flips approved be fips approved can

979
00:40:23,280 --> 00:40:24,800
be a part of fibs approved

980
00:40:24,800 --> 00:40:27,440
implementation

981
00:40:27,680 --> 00:40:29,280
okay

982
00:40:29,280 --> 00:40:30,640
and do we have other people want to talk

983
00:40:30,640 --> 00:40:33,839
at this time dkg i think you're are you

984
00:40:33,839 --> 00:40:35,839
in the queue you are yeah yeah i was in

985
00:40:35,839 --> 00:40:37,920
the queue earlier but i think uh daniel

986
00:40:37,920 --> 00:40:39,599
wiggins said what i was gonna say about

987
00:40:39,599 --> 00:40:42,560
the the cryptographic justification for

988
00:40:42,560 --> 00:40:43,760
including that

989
00:40:43,760 --> 00:40:46,480
um i want to say i i think i

990
00:40:46,480 --> 00:40:47,359
um

991
00:40:47,359 --> 00:40:49,280
agree with werner's general sense that

992
00:40:49,280 --> 00:40:51,280
fewer options is better

993
00:40:51,280 --> 00:40:52,560
but i just want to know that that would

994
00:40:52,560 --> 00:40:55,359
itself be a major change from

995
00:40:55,359 --> 00:40:59,200
the draft that existed as of 4 years ago

996
00:40:59,200 --> 00:41:01,040
so

997
00:41:01,040 --> 00:41:03,359
you know

998
00:41:04,880 --> 00:41:06,640
no matter what any of the approaches

999
00:41:06,640 --> 00:41:08,079
either the one that's currently in the

1000
00:41:08,079 --> 00:41:09,280
draft or the one that verner is

1001
00:41:09,280 --> 00:41:11,520
proposing would indeed be different from

1002
00:41:11,520 --> 00:41:12,960
the thing that we never managed to get

1003
00:41:12,960 --> 00:41:14,240
out the door this person would never

1004
00:41:14,240 --> 00:41:16,319
manage to get out the door originally so

1005
00:41:16,319 --> 00:41:17,599
you know the the changes that we're

1006
00:41:17,599 --> 00:41:19,040
seeing are a result of additional grip

1007
00:41:19,040 --> 00:41:21,520
analysis thank you to lara who daniel

1008
00:41:21,520 --> 00:41:23,680
mentioned

1009
00:41:23,680 --> 00:41:24,480
and

1010
00:41:24,480 --> 00:41:26,720
potential changes in the environment

1011
00:41:26,720 --> 00:41:28,480
around cryptographic algorithms verner

1012
00:41:28,480 --> 00:41:31,520
you mentioned changes to the asymmetric

1013
00:41:31,520 --> 00:41:32,800
choices

1014
00:41:32,800 --> 00:41:34,720
available for fips

1015
00:41:34,720 --> 00:41:36,319
my understanding is that chips has no

1016
00:41:36,319 --> 00:41:38,880
current plans to review uh symmetric

1017
00:41:38,880 --> 00:41:41,040
cipher modes i would love it if they did

1018
00:41:41,040 --> 00:41:42,400
but we're not working in that world

1019
00:41:42,400 --> 00:41:44,319
right now

1020
00:41:44,319 --> 00:41:45,119
and so

1021
00:41:45,119 --> 00:41:47,839
these choices i think are the product of

1022
00:41:47,839 --> 00:41:50,240
sort of where the world's at the moment

1023
00:41:50,240 --> 00:41:52,560
um to try to ensure that that open pgp

1024
00:41:52,560 --> 00:41:54,400
has a robust mechanism going forward

1025
00:41:54,400 --> 00:41:55,760
both for people who require fit

1026
00:41:55,760 --> 00:41:56,880
compliance

1027
00:41:56,880 --> 00:41:59,920
um and not

1028
00:42:01,520 --> 00:42:06,000
okay um do we have

1029
00:42:06,079 --> 00:42:07,839
other people want to chime in on this

1030
00:42:07,839 --> 00:42:10,160
topic

1031
00:42:11,280 --> 00:42:14,240
so would we again just try and clarify

1032
00:42:14,240 --> 00:42:15,599
my understanding of this would it be

1033
00:42:15,599 --> 00:42:17,280
fair to characterize this as verner as

1034
00:42:17,280 --> 00:42:18,800
you're saying that

1035
00:42:18,800 --> 00:42:20,560
ocd is good enough

1036
00:42:20,560 --> 00:42:22,880
and we while we might want the ability

1037
00:42:22,880 --> 00:42:24,000
to support different cryptographic

1038
00:42:24,000 --> 00:42:27,280
algorithms having the same level of

1039
00:42:27,280 --> 00:42:28,839
flexibility for

1040
00:42:28,839 --> 00:42:31,040
modes is something you don't think we

1041
00:42:31,040 --> 00:42:33,200
need

1042
00:42:33,920 --> 00:42:35,839
uh yes

1043
00:42:35,839 --> 00:42:37,920
that's right we put eax into it and they

1044
00:42:37,920 --> 00:42:38,880
choose up

1045
00:42:38,880 --> 00:42:42,400
modes um just because some folks uh

1046
00:42:42,400 --> 00:42:45,040
had problems with the pattern status of

1047
00:42:45,040 --> 00:42:48,720
oc ocp but uh as i said back five year

1048
00:42:48,720 --> 00:42:50,800
five years ago was there well about this

1049
00:42:50,800 --> 00:42:53,040
time of the pattern the plan and we have

1050
00:42:53,040 --> 00:42:57,119
expired and we are now at that point

1051
00:42:57,119 --> 00:42:59,440
and uh for uh or

1052
00:42:59,440 --> 00:43:02,560
phil even uh dropped paying the fees for

1053
00:43:02,560 --> 00:43:05,920
for the patent yeah okay um

1054
00:43:05,920 --> 00:43:07,040
so i guess i'm thinking what's the best

1055
00:43:07,040 --> 00:43:09,359
way to kind of try and figure this out

1056
00:43:09,359 --> 00:43:11,119
is

1057
00:43:11,119 --> 00:43:12,640
has anybody got a suggestion for the

1058
00:43:12,640 --> 00:43:16,880
best way to resolve this to maybe

1059
00:43:16,880 --> 00:43:18,000
would somebody be willing to create a

1060
00:43:18,000 --> 00:43:20,880
merge request for the

1061
00:43:20,880 --> 00:43:22,640
gitlab repo

1062
00:43:22,640 --> 00:43:24,480
that would

1063
00:43:24,480 --> 00:43:26,000
allow people to see the effect of change

1064
00:43:26,000 --> 00:43:28,000
or is that just too much work i i'd have

1065
00:43:28,000 --> 00:43:29,680
to look at i'm looking at paulie as the

1066
00:43:29,680 --> 00:43:32,000
editor

1067
00:43:32,880 --> 00:43:34,079
no i'm not asking you to make the merge

1068
00:43:34,079 --> 00:43:35,680
request i'm just asking would it be a

1069
00:43:35,680 --> 00:43:37,040
lot of work to make the merge requests

1070
00:43:37,040 --> 00:43:38,800
reflecting what brenner is

1071
00:43:38,800 --> 00:43:41,040
talking about

1072
00:43:41,040 --> 00:43:42,800
i'm not sure if i'm in the queue now

1073
00:43:42,800 --> 00:43:45,359
you're in the queue now

1074
00:43:45,359 --> 00:43:46,560
it's another screen so i'm not sure if

1075
00:43:46,560 --> 00:43:48,000
the audio is on but

1076
00:43:48,000 --> 00:43:49,599
yes now the room audio is going okay

1077
00:43:49,599 --> 00:43:51,359
great okay i just want to make quite

1078
00:43:51,359 --> 00:43:52,560
like

1079
00:43:52,560 --> 00:43:54,560
i think this is an item for discussion

1080
00:43:54,560 --> 00:43:56,480
before we do a merge request because

1081
00:43:56,480 --> 00:43:58,960
okay it's like we don't need the exact

1082
00:43:58,960 --> 00:44:00,720
text right right now it's the issue that

1083
00:44:00,720 --> 00:44:02,560
we need to understand better whether we

1084
00:44:02,560 --> 00:44:03,839
want to go with

1085
00:44:03,839 --> 00:44:05,359
option a or b

1086
00:44:05,359 --> 00:44:07,119
i don't think presenting text will add

1087
00:44:07,119 --> 00:44:08,640
clarification to the discussion at this

1088
00:44:08,640 --> 00:44:09,520
point

1089
00:44:09,520 --> 00:44:10,560
fair enough since you're since you've

1090
00:44:10,560 --> 00:44:12,560
been in the editing i bow to your

1091
00:44:12,560 --> 00:44:13,520
knowledge

1092
00:44:13,520 --> 00:44:15,680
so so is the right outcome here just for

1093
00:44:15,680 --> 00:44:16,400
the

1094
00:44:16,400 --> 00:44:18,480
chairs to start a thread on the mailing

1095
00:44:18,480 --> 00:44:19,760
lists

1096
00:44:19,760 --> 00:44:21,680
to see do we prefer what's in zero five

1097
00:44:21,680 --> 00:44:23,040
or do we prefer

1098
00:44:23,040 --> 00:44:24,720
uh what verner is kind of proposing i'll

1099
00:44:24,720 --> 00:44:25,599
try and

1100
00:44:25,599 --> 00:44:27,280
burn it out i might drop uma and see if

1101
00:44:27,280 --> 00:44:28,480
i can properly characterize what you're

1102
00:44:28,480 --> 00:44:29,440
saying

1103
00:44:29,440 --> 00:44:30,720
and then start a thread on the mailing

1104
00:44:30,720 --> 00:44:32,240
list does that sound like a reasonable

1105
00:44:32,240 --> 00:44:35,720
way to proceed

1106
00:44:38,960 --> 00:44:40,160
yeah okay

1107
00:44:40,160 --> 00:44:42,800
uh vernon says okay just as i had okay

1108
00:44:42,800 --> 00:44:44,880
so i guess if the people taking notes

1109
00:44:44,880 --> 00:44:45,839
would just make sure that there's an

1110
00:44:45,839 --> 00:44:47,680
action on the chairs to check with

1111
00:44:47,680 --> 00:44:48,960
werner and create that thread on the

1112
00:44:48,960 --> 00:44:51,040
list

1113
00:44:51,040 --> 00:44:53,440
okay any other topics on the current

1114
00:44:53,440 --> 00:44:55,440
text or draft five that people would

1115
00:44:55,440 --> 00:44:56,960
like to raise

1116
00:44:56,960 --> 00:44:58,640
for discussion just now that are not

1117
00:44:58,640 --> 00:45:00,720
going to be covered in this other list

1118
00:45:00,720 --> 00:45:03,959
on the screen

1119
00:45:09,040 --> 00:45:12,160
not seeing anything

1120
00:45:13,119 --> 00:45:15,920
anybody in the room anybody in the queue

1121
00:45:15,920 --> 00:45:17,440
no

1122
00:45:17,440 --> 00:45:18,720
okay in that case daniel do you want to

1123
00:45:18,720 --> 00:45:20,160
jump up and

1124
00:45:20,160 --> 00:45:22,560
i think the right apparently the the box

1125
00:45:22,560 --> 00:45:25,359
here is where you should be

1126
00:45:25,359 --> 00:45:27,040
it's got the box has gotten smaller

1127
00:45:27,040 --> 00:45:28,400
since the last

1128
00:45:28,400 --> 00:45:31,040
in-person itf very specific

1129
00:45:31,040 --> 00:45:34,319
so does this work as well

1130
00:45:37,359 --> 00:45:39,359
i guess i'll assume it does until people

1131
00:45:39,359 --> 00:45:40,720
complain

1132
00:45:40,720 --> 00:45:44,400
um okay so as um

1133
00:45:44,400 --> 00:45:47,920
eustace uh hinted that there

1134
00:45:47,920 --> 00:45:49,119
has been

1135
00:45:49,119 --> 00:45:52,319
uh some discussion and uh also some

1136
00:45:52,319 --> 00:45:54,319
proposals within

1137
00:45:54,319 --> 00:45:56,000
um the

1138
00:45:56,000 --> 00:45:58,000
design team about

1139
00:45:58,000 --> 00:46:01,359
how to structure a

1140
00:46:01,359 --> 00:46:04,640
a public key or a certificate

1141
00:46:04,640 --> 00:46:05,760
um

1142
00:46:05,760 --> 00:46:06,880
what

1143
00:46:06,880 --> 00:46:09,119
elements to have there

1144
00:46:09,119 --> 00:46:12,400
um so i'll i'll talk a bit about that

1145
00:46:12,400 --> 00:46:15,920
next slide please can i also do so

1146
00:46:15,920 --> 00:46:17,680
oh

1147
00:46:17,680 --> 00:46:21,119
uh i'll try here no no it's not there no

1148
00:46:21,119 --> 00:46:23,280
no you have to ask me okay

1149
00:46:23,280 --> 00:46:25,680
does that thing work no okay

1150
00:46:25,680 --> 00:46:26,839
all right

1151
00:46:26,839 --> 00:46:30,960
um so yeah just to um

1152
00:46:30,960 --> 00:46:32,800
summarize

1153
00:46:32,800 --> 00:46:33,680
the

1154
00:46:33,680 --> 00:46:35,920
the current situation

1155
00:46:35,920 --> 00:46:39,920
um there is this uh convention let's say

1156
00:46:39,920 --> 00:46:43,280
uh in open pgp to

1157
00:46:43,280 --> 00:46:46,000
require a self-signed

1158
00:46:46,000 --> 00:46:48,720
user id

1159
00:46:50,400 --> 00:46:52,000
where

1160
00:46:52,000 --> 00:46:54,240
you also store

1161
00:46:54,240 --> 00:46:56,480
various properties about the key

1162
00:46:56,480 --> 00:46:59,520
uh such as the expiration date the

1163
00:46:59,520 --> 00:47:01,520
algorithm preferences

1164
00:47:01,520 --> 00:47:03,440
um etc

1165
00:47:03,440 --> 00:47:04,640
um

1166
00:47:04,640 --> 00:47:06,160
and

1167
00:47:06,160 --> 00:47:08,480
um the

1168
00:47:08,480 --> 00:47:12,560
there there are some use cases um for

1169
00:47:12,560 --> 00:47:14,720
not having a user id

1170
00:47:14,720 --> 00:47:16,190
um for example

1171
00:47:16,190 --> 00:47:19,260
[Music]

1172
00:47:20,240 --> 00:47:21,839
you're talking about

1173
00:47:21,839 --> 00:47:25,359
for example uh case.openphp.org

1174
00:47:25,359 --> 00:47:28,160
has been publishing keys

1175
00:47:28,160 --> 00:47:31,680
without the user id when the

1176
00:47:31,680 --> 00:47:37,240
user id has not been verified yet um

1177
00:47:41,680 --> 00:47:42,720
thank you

1178
00:47:42,720 --> 00:47:43,920
um

1179
00:47:43,920 --> 00:47:46,880
in addition to that um

1180
00:47:46,880 --> 00:47:49,040
we at protomail

1181
00:47:49,040 --> 00:47:50,640
also

1182
00:47:50,640 --> 00:47:53,119
would like to publish keys without a

1183
00:47:53,119 --> 00:47:55,680
user id in order not to reveal personal

1184
00:47:55,680 --> 00:47:57,520
data for example if it contains their

1185
00:47:57,520 --> 00:47:58,640
full name

1186
00:47:58,640 --> 00:48:00,720
and people import their key they might

1187
00:48:00,720 --> 00:48:02,000
not

1188
00:48:02,000 --> 00:48:05,200
expect us to publish it

1189
00:48:05,200 --> 00:48:07,119
and in addition to that

1190
00:48:07,119 --> 00:48:10,640
uh we have been getting some

1191
00:48:10,640 --> 00:48:13,680
attacks let's say where uh people

1192
00:48:13,680 --> 00:48:15,680
try to enumerate

1193
00:48:15,680 --> 00:48:18,960
um protomail addresses via wkd for

1194
00:48:18,960 --> 00:48:22,400
example so we would like to

1195
00:48:22,400 --> 00:48:23,680
hide

1196
00:48:23,680 --> 00:48:25,520
whether a certain email address exists

1197
00:48:25,520 --> 00:48:29,359
or not for also for privacy reasons

1198
00:48:29,359 --> 00:48:33,200
and again this is easier if um

1199
00:48:33,200 --> 00:48:35,839
if there's no user id in the key

1200
00:48:35,839 --> 00:48:36,960
um

1201
00:48:36,960 --> 00:48:40,480
because the the user id might contain uh

1202
00:48:40,480 --> 00:48:42,480
you know very specific details that make

1203
00:48:42,480 --> 00:48:45,200
it obvious that it's not

1204
00:48:45,200 --> 00:48:47,200
an auto generated key

1205
00:48:47,200 --> 00:48:49,119
for example

1206
00:48:49,119 --> 00:48:52,559
um next type please

1207
00:48:54,240 --> 00:48:55,040
yeah

1208
00:48:55,040 --> 00:48:59,200
so um rfc480 the the preview or the

1209
00:48:59,200 --> 00:49:02,720
current let's say open pgp rfc

1210
00:49:02,720 --> 00:49:06,000
required a user id but does not require

1211
00:49:06,000 --> 00:49:07,760
a self signature

1212
00:49:07,760 --> 00:49:10,640
as users also said

1213
00:49:10,640 --> 00:49:11,359
but

1214
00:49:11,359 --> 00:49:14,400
by convention let's say some

1215
00:49:14,400 --> 00:49:17,280
implementations did in fact require a

1216
00:49:17,280 --> 00:49:19,440
cell signature

1217
00:49:19,440 --> 00:49:22,400
which has some advantages

1218
00:49:22,400 --> 00:49:24,800
um such as

1219
00:49:24,800 --> 00:49:27,280
being able to

1220
00:49:27,280 --> 00:49:30,400
express an expiration date without an

1221
00:49:30,400 --> 00:49:33,200
attacker being able to remove the self

1222
00:49:33,200 --> 00:49:34,880
signature for example

1223
00:49:34,880 --> 00:49:36,240
um

1224
00:49:36,240 --> 00:49:39,200
since that would invalidate the key

1225
00:49:39,200 --> 00:49:42,079
but this this has not been documented in

1226
00:49:42,079 --> 00:49:42,839
the

1227
00:49:42,839 --> 00:49:44,880
spec um

1228
00:49:44,880 --> 00:49:47,359
the crypto refresh

1229
00:49:47,359 --> 00:49:50,160
goes in the other direction by

1230
00:49:50,160 --> 00:49:54,079
also not requiring a user id

1231
00:49:54,079 --> 00:49:56,480
so there has been some discussion about

1232
00:49:56,480 --> 00:50:00,079
do we need to uh require for example

1233
00:50:00,079 --> 00:50:01,280
um

1234
00:50:01,280 --> 00:50:04,079
a direct key cell uh self signature to

1235
00:50:04,079 --> 00:50:06,400
replace this self signature

1236
00:50:06,400 --> 00:50:10,319
um but yeah next slide please

1237
00:50:10,559 --> 00:50:13,680
so uh before i get to that indeed um

1238
00:50:13,680 --> 00:50:15,920
first the question is do we need a user

1239
00:50:15,920 --> 00:50:16,960
id

1240
00:50:16,960 --> 00:50:18,640
um

1241
00:50:18,640 --> 00:50:20,000
so

1242
00:50:20,000 --> 00:50:20,750
um

1243
00:50:20,750 --> 00:50:22,240
[Music]

1244
00:50:22,240 --> 00:50:25,040
when encrypting to a key you might think

1245
00:50:25,040 --> 00:50:27,599
that you want a user id

1246
00:50:27,599 --> 00:50:30,160
to know whether you're encrypting to the

1247
00:50:30,160 --> 00:50:31,680
correct key

1248
00:50:31,680 --> 00:50:35,200
um but i would argue that

1249
00:50:35,200 --> 00:50:37,599
you anyway need a separate

1250
00:50:37,599 --> 00:50:39,280
mechanism

1251
00:50:39,280 --> 00:50:42,480
to verify that either

1252
00:50:42,480 --> 00:50:43,599
you get the

1253
00:50:43,599 --> 00:50:46,640
key from wkd and therefore

1254
00:50:46,640 --> 00:50:49,119
you trust that the key belongs to a

1255
00:50:49,119 --> 00:50:50,800
certain email address

1256
00:50:50,800 --> 00:50:55,040
or you get it from a key server and

1257
00:50:55,040 --> 00:50:58,800
it also has some third-party signatures

1258
00:50:58,800 --> 00:51:00,559
if you

1259
00:51:00,559 --> 00:51:02,720
like the web of trust model

1260
00:51:02,720 --> 00:51:04,000
or

1261
00:51:04,000 --> 00:51:05,280
there's also

1262
00:51:05,280 --> 00:51:07,760
a proposal for key transparency which

1263
00:51:07,760 --> 00:51:11,760
aaron will be presenting about later

1264
00:51:11,760 --> 00:51:12,880
or

1265
00:51:12,880 --> 00:51:13,920
you can

1266
00:51:13,920 --> 00:51:15,520
you know verify the fingerprint in

1267
00:51:15,520 --> 00:51:16,559
person

1268
00:51:16,559 --> 00:51:18,960
uh or you know call them up and say hey

1269
00:51:18,960 --> 00:51:21,520
is this the correct key

1270
00:51:21,520 --> 00:51:23,280
in any case

1271
00:51:23,280 --> 00:51:25,359
just trusting the user id is not

1272
00:51:25,359 --> 00:51:27,760
sufficient because anybody can

1273
00:51:27,760 --> 00:51:30,480
generate a key with any user id they

1274
00:51:30,480 --> 00:51:32,079
like

1275
00:51:32,079 --> 00:51:34,079
for the second point

1276
00:51:34,079 --> 00:51:37,119
when verifying a signature using a key

1277
00:51:37,119 --> 00:51:40,640
um it's a bit more tenuous because you

1278
00:51:40,640 --> 00:51:43,760
might argue that uh you want

1279
00:51:43,760 --> 00:51:47,359
to know that um the the key owner

1280
00:51:47,359 --> 00:51:49,920
uh claims to be

1281
00:51:49,920 --> 00:51:53,680
that person that you think

1282
00:51:53,680 --> 00:51:56,960
is is sending you a message for example

1283
00:51:56,960 --> 00:51:59,760
otherwise in theory someone else could

1284
00:51:59,760 --> 00:52:01,680
steal a public key

1285
00:52:01,680 --> 00:52:03,920
and a signature

1286
00:52:03,920 --> 00:52:06,319
and send you an email um

1287
00:52:06,319 --> 00:52:08,480
and and pretend that

1288
00:52:08,480 --> 00:52:11,520
uh you know they they signed it and they

1289
00:52:11,520 --> 00:52:13,359
came up with it

1290
00:52:13,359 --> 00:52:15,760
i mean you might argue about whether

1291
00:52:15,760 --> 00:52:18,000
this uh this is even a valid attack

1292
00:52:18,000 --> 00:52:20,559
since they can also just you know sign

1293
00:52:20,559 --> 00:52:22,880
the same data

1294
00:52:22,880 --> 00:52:25,359
but okay

1295
00:52:26,480 --> 00:52:28,640
another solution would to this would be

1296
00:52:28,640 --> 00:52:30,400
signing the email headers

1297
00:52:30,400 --> 00:52:31,760
or

1298
00:52:31,760 --> 00:52:34,000
you know repurposing the the signups

1299
00:52:34,000 --> 00:52:36,480
user id subpacket

1300
00:52:36,480 --> 00:52:38,319
even if you don't have a user id in the

1301
00:52:38,319 --> 00:52:40,558
key

1302
00:52:40,960 --> 00:52:42,720
and finally

1303
00:52:42,720 --> 00:52:44,400
you might argue

1304
00:52:44,400 --> 00:52:47,680
it can catch some mistakes uh if you

1305
00:52:47,680 --> 00:52:50,240
have a user id for example if you upload

1306
00:52:50,240 --> 00:52:52,480
the wrong key to wkd

1307
00:52:52,480 --> 00:52:54,880
then you know the sender can notice that

1308
00:52:54,880 --> 00:52:57,680
they're using the wrong key

1309
00:52:57,680 --> 00:52:59,200
but

1310
00:52:59,200 --> 00:53:01,920
in general there are not many

1311
00:53:01,920 --> 00:53:05,599
um let's say cryptographic reasons for

1312
00:53:05,599 --> 00:53:08,319
uh having a user id i would argue next

1313
00:53:08,319 --> 00:53:10,720
at least

1314
00:53:10,960 --> 00:53:13,200
then to the question of do we need a

1315
00:53:13,200 --> 00:53:14,800
self signature

1316
00:53:14,800 --> 00:53:15,090
um

1317
00:53:15,090 --> 00:53:17,040
[Music]

1318
00:53:17,040 --> 00:53:18,960
i i would argue

1319
00:53:18,960 --> 00:53:21,280
yes we do need it

1320
00:53:21,280 --> 00:53:23,680
because if

1321
00:53:23,680 --> 00:53:25,520
you have if you generate a key for

1322
00:53:25,520 --> 00:53:27,200
example which says

1323
00:53:27,200 --> 00:53:31,240
i prefer as256

1324
00:53:31,280 --> 00:53:33,040
and then an attacker removes the

1325
00:53:33,040 --> 00:53:34,240
signature

1326
00:53:34,240 --> 00:53:36,800
then an implementation can only assume

1327
00:53:36,800 --> 00:53:40,920
that you support as128

1328
00:53:41,040 --> 00:53:43,040
because uh you know that's the only

1329
00:53:43,040 --> 00:53:45,440
mandatory to implement algorithm

1330
00:53:45,440 --> 00:53:47,440
and so you know there's a downgrade

1331
00:53:47,440 --> 00:53:49,119
attack there of course you might argue

1332
00:53:49,119 --> 00:53:52,559
then why don't we make as256

1333
00:53:52,559 --> 00:53:55,119
mandatory to implement uh but in the

1334
00:53:55,119 --> 00:53:57,680
future the the same argument still goes

1335
00:53:57,680 --> 00:53:59,280
if you know uh

1336
00:53:59,280 --> 00:54:01,119
a stronger algorithm

1337
00:54:01,119 --> 00:54:05,200
or mode um is is added to the spec we

1338
00:54:05,200 --> 00:54:08,240
might want some robust mechanism for

1339
00:54:08,240 --> 00:54:11,200
signal signaling support for that

1340
00:54:11,200 --> 00:54:14,559
um to prevent downgrade attacks

1341
00:54:14,559 --> 00:54:18,000
um and similarly if you generate a key

1342
00:54:18,000 --> 00:54:18,800
with

1343
00:54:18,800 --> 00:54:20,880
an expiration date of one year for

1344
00:54:20,880 --> 00:54:23,440
example in the future

1345
00:54:23,440 --> 00:54:24,880
then

1346
00:54:24,880 --> 00:54:27,680
an attacker can't remove the signature

1347
00:54:27,680 --> 00:54:31,359
and remove the expiration date if you uh

1348
00:54:31,359 --> 00:54:32,720
require

1349
00:54:32,720 --> 00:54:35,599
um having a self signature in order to

1350
00:54:35,599 --> 00:54:37,920
use the key

1351
00:54:37,920 --> 00:54:39,280
as

1352
00:54:39,280 --> 00:54:42,160
you know some current implementations uh

1353
00:54:42,160 --> 00:54:42,880
do

1354
00:54:42,880 --> 00:54:46,000
require but uh you know it's not written

1355
00:54:46,000 --> 00:54:47,440
anywhere in the spec

1356
00:54:47,440 --> 00:54:49,920
so the question here is should we write

1357
00:54:49,920 --> 00:54:53,119
that in spec and if so should it be the

1358
00:54:53,119 --> 00:54:55,119
the user id self signature as it is

1359
00:54:55,119 --> 00:54:56,079
today

1360
00:54:56,079 --> 00:54:58,559
or as an alternative proposal should it

1361
00:54:58,559 --> 00:55:01,760
be a direct key signature

1362
00:55:01,760 --> 00:55:04,480
next slide please

1363
00:55:05,119 --> 00:55:07,119
yeah so here is a

1364
00:55:07,119 --> 00:55:10,000
let's say a tentative proposal it's it's

1365
00:55:10,000 --> 00:55:11,040
not even

1366
00:55:11,040 --> 00:55:14,319
uh there's no merch request for this um

1367
00:55:14,319 --> 00:55:15,760
yet but

1368
00:55:15,760 --> 00:55:18,480
um this is just uh a proposal for

1369
00:55:18,480 --> 00:55:20,799
discussion here

1370
00:55:20,799 --> 00:55:24,319
so the proposal would be

1371
00:55:24,319 --> 00:55:27,040
make user ids completely optional

1372
00:55:27,040 --> 00:55:29,599
also make a user id

1373
00:55:29,599 --> 00:55:31,920
self signatures optional

1374
00:55:31,920 --> 00:55:34,960
as the current draft indeed does

1375
00:55:34,960 --> 00:55:36,160
but then

1376
00:55:36,160 --> 00:55:40,079
require a direct key self signature in

1377
00:55:40,079 --> 00:55:41,599
order to have

1378
00:55:41,599 --> 00:55:44,880
a place to store key expiration

1379
00:55:44,880 --> 00:55:47,280
dates and preferences that can't be

1380
00:55:47,280 --> 00:55:48,880
removed

1381
00:55:48,880 --> 00:55:50,480
and then

1382
00:55:50,480 --> 00:55:53,440
if we care about sender identity sign it

1383
00:55:53,440 --> 00:55:56,319
as part of the message

1384
00:55:56,319 --> 00:56:00,079
for example in the email headers

1385
00:56:01,040 --> 00:56:04,000
then um

1386
00:56:04,000 --> 00:56:05,200
you know

1387
00:56:05,200 --> 00:56:07,280
um

1388
00:56:07,280 --> 00:56:10,880
yeah everybody can uh look at the direct

1389
00:56:10,880 --> 00:56:13,920
key signature uh for the for the key

1390
00:56:13,920 --> 00:56:15,040
properties

1391
00:56:15,040 --> 00:56:16,880
you know this would

1392
00:56:16,880 --> 00:56:19,119
simplify

1393
00:56:19,119 --> 00:56:21,920
what a certificate let's say

1394
00:56:21,920 --> 00:56:25,760
looks like in openpgp and simplify usage

1395
00:56:25,760 --> 00:56:28,160
but with

1396
00:56:28,160 --> 00:56:30,240
some potential downsides if we care

1397
00:56:30,240 --> 00:56:31,440
about

1398
00:56:31,440 --> 00:56:34,960
um for example user id specific

1399
00:56:34,960 --> 00:56:36,640
uh preferences

1400
00:56:36,640 --> 00:56:37,440
um

1401
00:56:37,440 --> 00:56:39,520
so you know that's that's part of the

1402
00:56:39,520 --> 00:56:44,160
topic for discussion uh next type please

1403
00:56:44,160 --> 00:56:45,920
um hang on a second daniel can you just

1404
00:56:45,920 --> 00:56:46,799
um

1405
00:56:46,799 --> 00:56:48,400
can you just go back to that proposal i

1406
00:56:48,400 --> 00:56:50,079
just wanted i think it might be missing

1407
00:56:50,079 --> 00:56:51,599
some context

1408
00:56:51,599 --> 00:56:54,559
um is this for all openpgp certificates

1409
00:56:54,559 --> 00:56:56,319
or just for certificates with a v5

1410
00:56:56,319 --> 00:56:59,040
public key right exactly that's a very

1411
00:56:59,040 --> 00:57:01,359
good point yeah so this will be for v5

1412
00:57:01,359 --> 00:57:03,200
keys and indeed

1413
00:57:03,200 --> 00:57:05,520
that's also

1414
00:57:05,520 --> 00:57:07,119
part of the reason why

1415
00:57:07,119 --> 00:57:08,960
we're discussing this now

1416
00:57:08,960 --> 00:57:11,599
um is even even though you might

1417
00:57:11,599 --> 00:57:14,720
question is this even uh in charger

1418
00:57:14,720 --> 00:57:17,200
right is this even relevant for the

1419
00:57:17,200 --> 00:57:19,760
charter of the crypto refresh and uh

1420
00:57:19,760 --> 00:57:22,000
certainly the answer might be no even

1421
00:57:22,000 --> 00:57:24,559
though some of these parts are um let's

1422
00:57:24,559 --> 00:57:26,559
say crypto adjacent

1423
00:57:26,559 --> 00:57:30,079
um but uh since we're releasing v5 keys

1424
00:57:30,079 --> 00:57:32,960
now um it might be a very good

1425
00:57:32,960 --> 00:57:35,839
opportunity to say okay we make a clean

1426
00:57:35,839 --> 00:57:36,720
break

1427
00:57:36,720 --> 00:57:41,040
uh v4 keys had this convention and v5

1428
00:57:41,040 --> 00:57:44,559
keys um you know look differently and we

1429
00:57:44,559 --> 00:57:47,520
kind of have a more uh strict and more

1430
00:57:47,520 --> 00:57:49,040
clearly defined

1431
00:57:49,040 --> 00:57:51,440
uh certificate structure

1432
00:57:51,440 --> 00:57:54,000
uh going forward yeah thanks for that

1433
00:57:54,000 --> 00:57:56,319
point

1434
00:57:57,760 --> 00:58:01,280
um so yeah the the questions uh to the

1435
00:58:01,280 --> 00:58:03,280
working group um

1436
00:58:03,280 --> 00:58:04,960
are yeah first of all you need or is

1437
00:58:04,960 --> 00:58:06,799
this even in charter

1438
00:58:06,799 --> 00:58:09,280
do we want to solve this problem let's

1439
00:58:09,280 --> 00:58:10,319
say

1440
00:58:10,319 --> 00:58:12,960
of course the the status quo

1441
00:58:12,960 --> 00:58:16,160
is that you know we have some convention

1442
00:58:16,160 --> 00:58:18,400
that is not documented

1443
00:58:18,400 --> 00:58:19,839
that

1444
00:58:19,839 --> 00:58:23,200
requires implementations more or less to

1445
00:58:23,200 --> 00:58:26,079
generate a user id with a self signature

1446
00:58:26,079 --> 00:58:28,640
even though the spec doesn't say so

1447
00:58:28,640 --> 00:58:32,079
and i would say my worry is that

1448
00:58:32,079 --> 00:58:34,160
you know if we don't do anything then

1449
00:58:34,160 --> 00:58:37,760
probably that convention will stay

1450
00:58:37,760 --> 00:58:41,200
for v5 keys as as a sort of default

1451
00:58:41,200 --> 00:58:45,680
um and then we still have this

1452
00:58:45,680 --> 00:58:47,599
undocumented convention

1453
00:58:47,599 --> 00:58:50,640
another option might be we we document

1454
00:58:50,640 --> 00:58:52,720
the convention but we don't do anything

1455
00:58:52,720 --> 00:58:54,000
else

1456
00:58:54,000 --> 00:58:55,760
or another

1457
00:58:55,760 --> 00:58:59,040
option is we try to change the

1458
00:58:59,040 --> 00:59:02,079
the the convention or rather the

1459
00:59:02,079 --> 00:59:05,920
the practice uh by documenting some uh

1460
00:59:05,920 --> 00:59:08,240
alternative certificate structure that

1461
00:59:08,240 --> 00:59:10,000
we prefer

1462
00:59:10,000 --> 00:59:11,920
and so yeah some of some of this is

1463
00:59:11,920 --> 00:59:13,920
crypto adjacent

1464
00:59:13,920 --> 00:59:15,760
um

1465
00:59:15,760 --> 00:59:18,880
such as the algorithm preferences so you

1466
00:59:18,880 --> 00:59:21,200
might argue that it's in charger

1467
00:59:21,200 --> 00:59:24,559
some of it certainly is not

1468
00:59:24,559 --> 00:59:27,119
i mean as i said v5 keys are

1469
00:59:27,119 --> 00:59:30,000
a nice opportunity to fix all of this

1470
00:59:30,000 --> 00:59:33,359
but certainly also uh you might argue

1471
00:59:33,359 --> 00:59:35,680
that it's uh it's not in charter and

1472
00:59:35,680 --> 00:59:38,240
that we should uh fix it in

1473
00:59:38,240 --> 00:59:41,839
in v6 or or whenever

1474
00:59:41,839 --> 00:59:44,079
then the second question is

1475
00:59:44,079 --> 00:59:47,280
do we care about user id specific

1476
00:59:47,280 --> 00:59:48,880
preferences

1477
00:59:48,880 --> 00:59:51,119
because so the the tentative proposal

1478
00:59:51,119 --> 00:59:54,319
would be to only look at uh direct key

1479
00:59:54,319 --> 00:59:57,359
signatures uh for preferences and

1480
00:59:57,359 --> 00:59:59,280
expiration dates etc

1481
00:59:59,280 --> 01:00:01,440
um just to make

1482
01:00:01,440 --> 01:00:03,839
implementations simpler

1483
01:00:03,839 --> 01:00:04,640
and

1484
01:00:04,640 --> 01:00:07,359
make make openpcp simpler certainly a

1485
01:00:07,359 --> 01:00:10,240
criticism has been that openpgp is too

1486
01:00:10,240 --> 01:00:11,680
complex and

1487
01:00:11,680 --> 01:00:13,920
um that you know there are too many

1488
01:00:13,920 --> 01:00:16,720
differences in what implementations do

1489
01:00:16,720 --> 01:00:18,480
and um

1490
01:00:18,480 --> 01:00:21,119
certainly i think it would be good to

1491
01:00:21,119 --> 01:00:23,119
simplify things

1492
01:00:23,119 --> 01:00:25,680
um but you might argue that you know if

1493
01:00:25,680 --> 01:00:27,680
you have a key that you use

1494
01:00:27,680 --> 01:00:30,079
both at home and at work you might have

1495
01:00:30,079 --> 01:00:32,720
different preferences for the algorithms

1496
01:00:32,720 --> 01:00:35,920
that you want to use on those computers

1497
01:00:35,920 --> 01:00:38,160
i would argue that you probably should

1498
01:00:38,160 --> 01:00:41,119
generate a separate key in that case but

1499
01:00:41,119 --> 01:00:43,200
again yeah this is a

1500
01:00:43,200 --> 01:00:46,960
definitely a topic for discussion

1501
01:00:47,280 --> 01:00:49,440
and then the final question is do we

1502
01:00:49,440 --> 01:00:50,960
care about

1503
01:00:50,960 --> 01:00:55,359
situation situations where you

1504
01:00:55,359 --> 01:00:58,319
typically don't include the sender in a

1505
01:00:58,319 --> 01:00:59,760
signed message

1506
01:00:59,760 --> 01:01:01,839
uh do we care about someone else

1507
01:01:01,839 --> 01:01:04,880
stealing uh the public key

1508
01:01:04,880 --> 01:01:08,319
uh and the signature you might argue no

1509
01:01:08,319 --> 01:01:11,359
we don't care about it because you know

1510
01:01:11,359 --> 01:01:13,680
someone can just steal the data and sign

1511
01:01:13,680 --> 01:01:16,079
it themselves so

1512
01:01:16,079 --> 01:01:18,160
perhaps it's not relevant

1513
01:01:18,160 --> 01:01:20,480
if we do care about it

1514
01:01:20,480 --> 01:01:23,119
we could use the signer's user id

1515
01:01:23,119 --> 01:01:25,839
um

1516
01:01:26,000 --> 01:01:27,760
yeah those are

1517
01:01:27,760 --> 01:01:30,480
mainly the the three topics

1518
01:01:30,480 --> 01:01:33,200
um i had in mind for discussion but if

1519
01:01:33,200 --> 01:01:35,920
anybody else has any any other concerns

1520
01:01:35,920 --> 01:01:37,040
or

1521
01:01:37,040 --> 01:01:40,799
questions then of course feel free to

1522
01:01:40,799 --> 01:01:43,119
bring them up

1523
01:01:43,119 --> 01:01:44,640
okay so just

1524
01:01:44,640 --> 01:01:46,160
if people want to talk onto this then

1525
01:01:46,160 --> 01:01:47,920
jumping in the queue now is the right

1526
01:01:47,920 --> 01:01:48,960
thing to do

1527
01:01:48,960 --> 01:01:50,400
um

1528
01:01:50,400 --> 01:01:53,680
just to summarize then you have the

1529
01:01:53,680 --> 01:01:56,240
you know the tentative proposal was

1530
01:01:56,240 --> 01:01:57,359
applying to

1531
01:01:57,359 --> 01:01:59,359
v5 public keys yes

1532
01:01:59,359 --> 01:02:01,839
and the defaults

1533
01:02:01,839 --> 01:02:03,280
if we can't figure it out the default is

1534
01:02:03,280 --> 01:02:05,119
kind of just stick with what we have

1535
01:02:05,119 --> 01:02:08,799
i would assume so yeah okay

1536
01:02:10,640 --> 01:02:12,879
um

1537
01:02:12,960 --> 01:02:14,400
and i guess yeah the reason for raising

1538
01:02:14,400 --> 01:02:16,160
this is that the design team weren't

1539
01:02:16,160 --> 01:02:17,599
kind of sure what people really wanted

1540
01:02:17,599 --> 01:02:19,359
bkg

1541
01:02:19,359 --> 01:02:21,599
hi there um i'm just speaking with no

1542
01:02:21,599 --> 01:02:23,200
hats on here

1543
01:02:23,200 --> 01:02:24,000
um

1544
01:02:24,000 --> 01:02:26,400
as a

1545
01:02:26,559 --> 01:02:28,799
implementer and maintainer

1546
01:02:28,799 --> 01:02:29,920
um

1547
01:02:29,920 --> 01:02:32,559
the complexity of per user id

1548
01:02:32,559 --> 01:02:34,400
preferences

1549
01:02:34,400 --> 01:02:36,720
is a lot

1550
01:02:36,720 --> 01:02:38,559
and

1551
01:02:38,559 --> 01:02:40,640
i really like the proposal that's on the

1552
01:02:40,640 --> 01:02:43,200
table here for the sake of simplicity of

1553
01:02:43,200 --> 01:02:44,720
understanding i think there's a lot of

1554
01:02:44,720 --> 01:02:46,000
room for

1555
01:02:46,000 --> 01:02:47,520
there's even with this proposal there's

1556
01:02:47,520 --> 01:02:48,480
a lot of room for potential

1557
01:02:48,480 --> 01:02:51,359
misunderstanding of open pgp preferences

1558
01:02:51,359 --> 01:02:52,079
but

1559
01:02:52,079 --> 01:02:54,240
the idea of dropping user id specific

1560
01:02:54,240 --> 01:02:56,160
preferences is very appealing to me from

1561
01:02:56,160 --> 01:02:58,160
a simplicity perspective and i've never

1562
01:02:58,160 --> 01:02:59,920
actually seen a scenario

1563
01:02:59,920 --> 01:03:02,319
where i've found the user id preferences

1564
01:03:02,319 --> 01:03:04,079
were particularly

1565
01:03:04,079 --> 01:03:05,200
um

1566
01:03:05,200 --> 01:03:07,680
desired or desirable

1567
01:03:07,680 --> 01:03:10,559
or reliable so i you know if this is

1568
01:03:10,559 --> 01:03:14,559
this is simpler and cleaner so i i'm

1569
01:03:14,559 --> 01:03:17,839
a fan i'm in favor of it

1570
01:03:20,799 --> 01:03:23,920
okay are there opinions

1571
01:03:24,960 --> 01:03:27,440
i i mean i guess i can paraphrase werner

1572
01:03:27,440 --> 01:03:29,839
from the jabra

1573
01:03:29,839 --> 01:03:31,839
i'm guessing he's kind of not in favor

1574
01:03:31,839 --> 01:03:33,280
our favorite the status quo i think is

1575
01:03:33,280 --> 01:03:35,280
what perhaps

1576
01:03:35,280 --> 01:03:36,640
he did raise the point that hadn't been

1577
01:03:36,640 --> 01:03:37,839
raised

1578
01:03:37,839 --> 01:03:40,720
but i think i guess derek atkins

1579
01:03:40,720 --> 01:03:43,839
had a use case where there was no room

1580
01:03:43,839 --> 01:03:46,240
for user ids and that's that was other

1581
01:03:46,240 --> 01:03:47,520
than that i think werner would argue

1582
01:03:47,520 --> 01:03:49,280
that they should be a must

1583
01:03:49,280 --> 01:03:51,680
um i see so that's that's another

1584
01:03:51,680 --> 01:03:53,119
argument and again if you want to jump

1585
01:03:53,119 --> 01:03:55,680
in and send audio that's fine to do it

1586
01:03:55,680 --> 01:03:57,599
um

1587
01:03:57,599 --> 01:03:59,680
yes go ahead

1588
01:03:59,680 --> 01:04:00,960
yes

1589
01:04:00,960 --> 01:04:03,680
we had one idea one idea um on where

1590
01:04:03,680 --> 01:04:05,920
there was no requirement uh requirement

1591
01:04:05,920 --> 01:04:07,839
for the for the user user id and that

1592
01:04:07,839 --> 01:04:10,720
was ex particularly to eric uh derek

1593
01:04:10,720 --> 01:04:13,119
atkins uh requirement so he put it he

1594
01:04:13,119 --> 01:04:16,319
put it in and this was just a discussion

1595
01:04:16,319 --> 01:04:17,599
thing and uh

1596
01:04:17,599 --> 01:04:19,520
later i think he retracted this that

1597
01:04:19,520 --> 01:04:21,760
it's not really needed and i think

1598
01:04:21,760 --> 01:04:25,039
basically he could have lived without uh

1599
01:04:25,039 --> 01:04:28,160
are being 100 compliant with your pgp

1600
01:04:28,160 --> 01:04:29,200
specs

1601
01:04:29,200 --> 01:04:31,359
so i i don't know what what what the

1602
01:04:31,359 --> 01:04:33,920
outcome of this project

1603
01:04:33,920 --> 01:04:36,079
so it's couple of years now

1604
01:04:36,079 --> 01:04:38,400
that happened yeah so maybe just to

1605
01:04:38,400 --> 01:04:39,760
point out

1606
01:04:39,760 --> 01:04:43,039
even rfc 480

1607
01:04:43,039 --> 01:04:45,839
even though it did indeed require

1608
01:04:45,839 --> 01:04:48,000
a user id packet

1609
01:04:48,000 --> 01:04:50,960
didn't require a self signature

1610
01:04:50,960 --> 01:04:55,359
on the user id packet which

1611
01:04:55,359 --> 01:04:57,280
i mean if you have a user id packet

1612
01:04:57,280 --> 01:04:59,839
without a self signature it doesn't

1613
01:04:59,839 --> 01:05:02,799
um really add much i would argue

1614
01:05:02,799 --> 01:05:06,000
of course implementations um

1615
01:05:06,000 --> 01:05:08,480
require the user id

1616
01:05:08,480 --> 01:05:10,880
uh self segment or some implementations

1617
01:05:10,880 --> 01:05:12,960
required it

1618
01:05:12,960 --> 01:05:15,119
so i mean certainly another direction we

1619
01:05:15,119 --> 01:05:17,440
could go is to

1620
01:05:17,440 --> 01:05:19,920
put that in the spec right require a

1621
01:05:19,920 --> 01:05:22,160
user id and require a user id self

1622
01:05:22,160 --> 01:05:23,280
signature

1623
01:05:23,280 --> 01:05:24,640
if we think

1624
01:05:24,640 --> 01:05:26,079
we need them

1625
01:05:26,079 --> 01:05:27,119
but

1626
01:05:27,119 --> 01:05:30,880
um i i don't know if you have a specific

1627
01:05:30,880 --> 01:05:33,760
argument warner for

1628
01:05:33,760 --> 01:05:36,799
what whether we need them or what's your

1629
01:05:36,799 --> 01:05:39,520
opinion on that

1630
01:05:40,880 --> 01:05:43,520
uh so yeah so

1631
01:05:43,520 --> 01:05:44,799
in the java chat he did raise a couple

1632
01:05:44,799 --> 01:05:46,960
of reasons why he thinks that they're

1633
01:05:46,960 --> 01:05:48,839
they're needed

1634
01:05:48,839 --> 01:05:53,640
um and then most recently about a pgp

1635
01:05:53,640 --> 01:05:56,000
263 ia

1636
01:05:56,000 --> 01:05:57,920
requiring whatever so i i think the

1637
01:05:57,920 --> 01:05:59,359
action on this we're not getting too

1638
01:05:59,359 --> 01:06:00,559
much more information here in the room

1639
01:06:00,559 --> 01:06:01,920
so i think the action on this is again

1640
01:06:01,920 --> 01:06:03,839
to create a thread on the on the list

1641
01:06:03,839 --> 01:06:06,160
okay um and i guess the choices are this

1642
01:06:06,160 --> 01:06:08,559
tentative proposal or the status quo

1643
01:06:08,559 --> 01:06:10,160
and if the status quo we might want to

1644
01:06:10,160 --> 01:06:12,240
document it a little bit better than

1645
01:06:12,240 --> 01:06:14,960
previously was the case yeah uh either

1646
01:06:14,960 --> 01:06:17,920
documenting the cisco or even requiring

1647
01:06:17,920 --> 01:06:20,079
the status quo in the document

1648
01:06:20,079 --> 01:06:21,839
could be an option

1649
01:06:21,839 --> 01:06:25,039
okay so okay so i think that that's

1650
01:06:25,039 --> 01:06:27,039
a reasonable outcome for that one

1651
01:06:27,039 --> 01:06:28,319
paul do you want to take the next topic

1652
01:06:28,319 --> 01:06:28,960
or

1653
01:06:28,960 --> 01:06:30,400
do you want me to i made the slide but

1654
01:06:30,400 --> 01:06:33,799
you raised the topic

1655
01:06:40,240 --> 01:06:41,359
so uh

1656
01:06:41,359 --> 01:06:42,960
so to paraphrase the issue here is that

1657
01:06:42,960 --> 01:06:44,640
the problem is that

1658
01:06:44,640 --> 01:06:46,640
when people are checking each other's

1659
01:06:46,640 --> 01:06:47,520
key

1660
01:06:47,520 --> 01:06:49,760
um the minimum security requirements to

1661
01:06:49,760 --> 01:06:52,720
do this securely is more than the vast

1662
01:06:52,720 --> 01:06:54,799
majority of humans are willing to invest

1663
01:06:54,799 --> 01:06:56,799
to do this process

1664
01:06:56,799 --> 01:06:58,480
and we haven't really come up with a

1665
01:06:58,480 --> 01:06:59,920
solution and we don't really know what

1666
01:06:59,920 --> 01:07:02,240
to do

1667
01:07:02,400 --> 01:07:04,720
but that is really the problem uh or we

1668
01:07:04,720 --> 01:07:06,160
came up with too many solutions none of

1669
01:07:06,160 --> 01:07:07,680
which worked

1670
01:07:07,680 --> 01:07:09,920
no because all the solutions either

1671
01:07:09,920 --> 01:07:12,640
require either don't require enough work

1672
01:07:12,640 --> 01:07:14,880
by the human and are therefore insecure

1673
01:07:14,880 --> 01:07:16,880
or requires so much work from the humans

1674
01:07:16,880 --> 01:07:18,720
that they won't do it which makes it

1675
01:07:18,720 --> 01:07:20,319
insecure that's what i kind of meant by

1676
01:07:20,319 --> 01:07:22,720
don't work

1677
01:07:22,880 --> 01:07:25,200
so so yeah so so

1678
01:07:25,200 --> 01:07:26,720
we discussed this a couple of times so

1679
01:07:26,720 --> 01:07:28,960
we couldn't really come to something

1680
01:07:28,960 --> 01:07:30,559
of a solution so

1681
01:07:30,559 --> 01:07:32,079
we definitely need working group and

1682
01:07:32,079 --> 01:07:34,640
boot from this

1683
01:07:38,720 --> 01:07:41,720
so

1684
01:07:44,480 --> 01:07:47,520
tkg you're in line

1685
01:07:47,839 --> 01:07:49,760
yeah i think you could provide a little

1686
01:07:49,760 --> 01:07:53,359
bit more color uh for this problem

1687
01:07:53,359 --> 01:07:54,480
um

1688
01:07:54,480 --> 01:07:57,280
i don't think there's any uh concerns

1689
01:07:57,280 --> 01:07:59,200
within the working group about the on

1690
01:07:59,200 --> 01:08:02,720
the wire use of the fingerprint

1691
01:08:02,720 --> 01:08:06,559
and for the changes that have been made

1692
01:08:06,559 --> 01:08:09,039
in the crypto refresh document

1693
01:08:09,039 --> 01:08:10,799
there's no place

1694
01:08:10,799 --> 01:08:13,520
in the modern formats where the key id

1695
01:08:13,520 --> 01:08:15,039
itself is used

1696
01:08:15,039 --> 01:08:17,679
on the wire or in calculations the full

1697
01:08:17,679 --> 01:08:19,839
fingerprint is always used

1698
01:08:19,839 --> 01:08:20,960
um

1699
01:08:20,960 --> 01:08:22,640
you know for people who are interacting

1700
01:08:22,640 --> 01:08:24,238
with v4

1701
01:08:24,238 --> 01:08:26,399
you know rfc 4880 compliant clients of

1702
01:08:26,399 --> 01:08:27,198
course

1703
01:08:27,198 --> 01:08:28,719
we can't avoid

1704
01:08:28,719 --> 01:08:31,520
the eight octet pid because that is

1705
01:08:31,520 --> 01:08:35,198
baked into the v4 pkesk packet

1706
01:08:35,198 --> 01:08:36,960
but otherwise on the wire we're just

1707
01:08:36,960 --> 01:08:38,880
talking about full fingerprints and

1708
01:08:38,880 --> 01:08:41,359
that's not an issue the issue here

1709
01:08:41,359 --> 01:08:43,198
is for the scenarios like paul said

1710
01:08:43,198 --> 01:08:44,960
where humans are in the loop for

1711
01:08:44,960 --> 01:08:47,279
verifying a

1712
01:08:47,279 --> 01:08:50,839
primary key

1713
01:08:57,920 --> 01:09:00,319
martin

1714
01:09:04,640 --> 01:09:07,279
hey so i'm martin arts i work for the

1715
01:09:07,279 --> 01:09:09,120
dutch cyber security center and i have a

1716
01:09:09,120 --> 01:09:11,839
question around this uh topic for this

1717
01:09:11,839 --> 01:09:13,839
question so if you say don't recommend

1718
01:09:13,839 --> 01:09:15,759
any specific form

1719
01:09:15,759 --> 01:09:16,640
uh

1720
01:09:16,640 --> 01:09:19,439
would the implementers represent the

1721
01:09:19,439 --> 01:09:20,399
design team

1722
01:09:20,399 --> 01:09:22,158
expect there to be

1723
01:09:22,158 --> 01:09:24,640
multiple

1724
01:09:24,640 --> 01:09:27,439
competing perhaps or different

1725
01:09:27,439 --> 01:09:29,520
implementations surfacing in the user

1726
01:09:29,520 --> 01:09:31,759
interface because i think

1727
01:09:31,759 --> 01:09:33,279
well at least our experience has been

1728
01:09:33,279 --> 01:09:35,839
that it's been hard enough to get people

1729
01:09:35,839 --> 01:09:38,719
to use pgp in general so

1730
01:09:38,719 --> 01:09:40,399
i was wondering

1731
01:09:40,399 --> 01:09:43,198
what your thoughts are on the effect of

1732
01:09:43,198 --> 01:09:45,359
this

1733
01:09:45,359 --> 01:09:48,880
status quo or recommendation

1734
01:09:48,880 --> 01:09:50,640
so we agreed that the effect would be

1735
01:09:50,640 --> 01:09:52,399
bad because there would be no universal

1736
01:09:52,399 --> 01:09:54,560
way in which humans would actually

1737
01:09:54,560 --> 01:09:56,640
be able to verify their keys

1738
01:09:56,640 --> 01:09:57,760
so we're not saying that's a good

1739
01:09:57,760 --> 01:09:59,520
solution at all but we just can't come

1740
01:09:59,520 --> 01:10:02,719
up with anything that was acceptable

1741
01:10:02,719 --> 01:10:04,480
so yeah i understood

1742
01:10:04,480 --> 01:10:06,880
that i was just wondering if

1743
01:10:06,880 --> 01:10:09,199
uh in a dash in addition to not having a

1744
01:10:09,199 --> 01:10:12,080
good solution having multiple bad ones

1745
01:10:12,080 --> 01:10:15,519
would be one step worse

1746
01:10:15,600 --> 01:10:16,480
yeah

1747
01:10:16,480 --> 01:10:18,000
and i don't know but i was just

1748
01:10:18,000 --> 01:10:18,960
wondering

1749
01:10:18,960 --> 01:10:21,120
it's given this recommendation what

1750
01:10:21,120 --> 01:10:22,560
implementers would

1751
01:10:22,560 --> 01:10:23,840
choose to do

1752
01:10:23,840 --> 01:10:25,199
uh

1753
01:10:25,199 --> 01:10:26,960
and whether

1754
01:10:26,960 --> 01:10:29,360
having them make different choices based

1755
01:10:29,360 --> 01:10:30,560
on

1756
01:10:30,560 --> 01:10:33,120
the uh so so you're right and all of

1757
01:10:33,120 --> 01:10:34,719
this came up in these discussions and

1758
01:10:34,719 --> 01:10:37,120
but we just couldn't come to an actual

1759
01:10:37,120 --> 01:10:38,960
solution i'm afraid i don't have

1760
01:10:38,960 --> 01:10:41,199
anything useful to complete other than

1761
01:10:41,199 --> 01:10:42,640
raising this question

1762
01:10:42,640 --> 01:10:45,640
sorry

1763
01:10:53,679 --> 01:10:54,719
take too much time though because

1764
01:10:54,719 --> 01:10:57,120
although i don't see mallory in in the

1765
01:10:57,120 --> 01:10:58,800
so we may have a bit of extra time so go

1766
01:10:58,800 --> 01:10:59,920
ahead

1767
01:10:59,920 --> 01:11:01,440
yeah just to say

1768
01:11:01,440 --> 01:11:02,880
so just for the

1769
01:11:02,880 --> 01:11:05,199
for the uh recording if you stay here

1770
01:11:05,199 --> 01:11:06,800
said your name before yes so this is

1771
01:11:06,800 --> 01:11:08,640
daniel hilkins again

1772
01:11:08,640 --> 01:11:09,920
um

1773
01:11:09,920 --> 01:11:10,960
so

1774
01:11:10,960 --> 01:11:14,960
my position on this is that

1775
01:11:14,960 --> 01:11:17,199
we shouldn't show

1776
01:11:17,199 --> 01:11:19,920
fingerprints to the user and we should

1777
01:11:19,920 --> 01:11:23,600
uh come up with something else entirely

1778
01:11:23,600 --> 01:11:26,880
which could look something like you know

1779
01:11:26,880 --> 01:11:29,840
showing a qr code in order to make it

1780
01:11:29,840 --> 01:11:32,000
easier to verify

1781
01:11:32,000 --> 01:11:34,560
that you're using the the correct key of

1782
01:11:34,560 --> 01:11:35,920
course it's not

1783
01:11:35,920 --> 01:11:39,920
a suitable solution in every scenario

1784
01:11:39,920 --> 01:11:41,760
but i think

1785
01:11:41,760 --> 01:11:46,320
in my opinion it would be valuable for

1786
01:11:46,880 --> 01:11:50,960
this working group or a separate effort

1787
01:11:50,960 --> 01:11:51,760
to

1788
01:11:51,760 --> 01:11:52,960
look into

1789
01:11:52,960 --> 01:11:55,280
solutions like that

1790
01:11:55,280 --> 01:11:57,199
and

1791
01:11:57,199 --> 01:12:00,080
that that's sort of indeed why i would

1792
01:12:00,080 --> 01:12:03,199
prefer not to

1793
01:12:03,440 --> 01:12:04,960
put a

1794
01:12:04,960 --> 01:12:06,400
solution

1795
01:12:06,400 --> 01:12:08,960
not to put the suboptimal solution in in

1796
01:12:08,960 --> 01:12:10,800
the spec now

1797
01:12:10,800 --> 01:12:14,960
um in order to you know keep room to

1798
01:12:14,960 --> 01:12:17,199
uh think about the

1799
01:12:17,199 --> 01:12:18,000
um

1800
01:12:18,000 --> 01:12:19,679
the problem more broadly if that makes

1801
01:12:19,679 --> 01:12:22,679
sense

1802
01:12:22,880 --> 01:12:26,560
so we have uh mallory

1803
01:12:30,400 --> 01:12:32,960
um yeah i just wanted to follow on

1804
01:12:32,960 --> 01:12:34,560
actually from that comment mine is very

1805
01:12:34,560 --> 01:12:37,040
similar which is i think their important

1806
01:12:37,040 --> 01:12:40,159
user experience or user interface for

1807
01:12:40,159 --> 01:12:42,480
this it might be very worthwhile looking

1808
01:12:42,480 --> 01:12:43,840
at

1809
01:12:43,840 --> 01:12:45,679
messaging and direct messaging

1810
01:12:45,679 --> 01:12:47,679
implementations of encryption because

1811
01:12:47,679 --> 01:12:49,600
users are already being trained there

1812
01:12:49,600 --> 01:12:52,960
and following on from what the

1813
01:12:52,960 --> 01:12:55,199
what users expect actually might get you

1814
01:12:55,199 --> 01:12:56,640
the most even if it's not a perfect

1815
01:12:56,640 --> 01:12:58,960
solution it will

1816
01:12:58,960 --> 01:13:00,800
achieve i think

1817
01:13:00,800 --> 01:13:02,719
harmony with

1818
01:13:02,719 --> 01:13:03,679
again

1819
01:13:03,679 --> 01:13:06,400
good user behavior and that

1820
01:13:06,400 --> 01:13:08,640
verification actually happens so what

1821
01:13:08,640 --> 01:13:10,480
i'm seeing in signal and other places is

1822
01:13:10,480 --> 01:13:12,239
actually a long fingerprint in addition

1823
01:13:12,239 --> 01:13:14,480
to a qr code but that

1824
01:13:14,480 --> 01:13:18,000
long fingerprint is visible

1825
01:13:18,000 --> 01:13:18,960
so

1826
01:13:18,960 --> 01:13:20,159
you're saying that they're using the

1827
01:13:20,159 --> 01:13:22,800
full length hash output as

1828
01:13:22,800 --> 01:13:25,600
the only non-qr code fingerprints in

1829
01:13:25,600 --> 01:13:26,960
various instant messaging things but i

1830
01:13:26,960 --> 01:13:28,320
presume they're all doing it differently

1831
01:13:28,320 --> 01:13:32,440
or with different inputs as well right

1832
01:13:37,360 --> 01:13:39,920
yeah i mean i'm suggesting actually uh

1833
01:13:39,920 --> 01:13:41,120
looking through

1834
01:13:41,120 --> 01:13:44,239
um all the primary messaging i mean i

1835
01:13:44,239 --> 01:13:46,159
think that that was probably the largest

1836
01:13:46,159 --> 01:13:47,760
in terms of user

1837
01:13:47,760 --> 01:13:49,040
um base

1838
01:13:49,040 --> 01:13:50,000
so

1839
01:13:50,000 --> 01:13:51,840
coming up with

1840
01:13:51,840 --> 01:13:54,320
a sort of survey of all of

1841
01:13:54,320 --> 01:13:56,239
the larger ones and figuring out a

1842
01:13:56,239 --> 01:13:58,400
solution that aligns with that because

1843
01:13:58,400 --> 01:14:01,199
this is a youth experience question

1844
01:14:01,199 --> 01:14:04,960
um i think that um

1845
01:14:06,560 --> 01:14:09,440
martin yeah so this is martin again um

1846
01:14:09,440 --> 01:14:11,920
so i didn't consider point daniel just

1847
01:14:11,920 --> 01:14:13,120
made and i think

1848
01:14:13,120 --> 01:14:15,199
that makes sense to me that if if

1849
01:14:15,199 --> 01:14:17,759
there's no

1850
01:14:19,360 --> 01:14:21,600
if this is out of scope for the current

1851
01:14:21,600 --> 01:14:24,080
effort and the solution

1852
01:14:24,080 --> 01:14:25,040
would be

1853
01:14:25,040 --> 01:14:26,320
something that needs more work

1854
01:14:26,320 --> 01:14:28,400
separately and i can understand why you

1855
01:14:28,400 --> 01:14:31,199
would not make a choice here it's just

1856
01:14:31,199 --> 01:14:32,960
well the point i raised

1857
01:14:32,960 --> 01:14:36,880
was made so yeah thanks

1858
01:14:37,600 --> 01:14:40,480
okay so from

1859
01:14:40,480 --> 01:14:43,839
okay so i think the

1860
01:14:44,480 --> 01:14:46,320
would it be fair to say that the

1861
01:14:46,320 --> 01:14:48,400
sense here is that to be able to be

1862
01:14:48,400 --> 01:14:50,320
confirmed on the mailing list is that

1863
01:14:50,320 --> 01:14:52,159
the

1864
01:14:52,159 --> 01:14:54,159
the suggestion of the design team to not

1865
01:14:54,159 --> 01:14:56,560
recommend a specific form is maybe the

1866
01:14:56,560 --> 01:14:58,719
closest we've still got

1867
01:14:58,719 --> 01:15:00,800
and but it would be worth looking at say

1868
01:15:00,800 --> 01:15:02,159
what is the messaging apps and someone

1869
01:15:02,159 --> 01:15:03,920
are doing since anything anything better

1870
01:15:03,920 --> 01:15:06,719
might just exist

1871
01:15:08,800 --> 01:15:10,239
so

1872
01:15:10,239 --> 01:15:13,120
um this does require that there's either

1873
01:15:13,120 --> 01:15:15,280
a recharging or continuation where we

1874
01:15:15,280 --> 01:15:16,560
pick up that work right because it's

1875
01:15:16,560 --> 01:15:18,560
currently not in charter

1876
01:15:18,560 --> 01:15:20,080
but well so

1877
01:15:20,080 --> 01:15:21,760
not recommending a

1878
01:15:21,760 --> 01:15:23,920
particular form is just clarify that's

1879
01:15:23,920 --> 01:15:25,760
just adding some but if we're not

1880
01:15:25,760 --> 01:15:27,360
recommending anything

1881
01:15:27,360 --> 01:15:29,600
and we might not read charter

1882
01:15:29,600 --> 01:15:33,120
then we have the worst solution of all

1883
01:15:33,120 --> 01:15:35,120
one would yeah i i would like to see

1884
01:15:35,120 --> 01:15:36,480
this working group reach harder to take

1885
01:15:36,480 --> 01:15:38,800
on this topic but i can't

1886
01:15:38,800 --> 01:15:40,400
yeah i can't you know just click a

1887
01:15:40,400 --> 01:15:42,480
finger and make that happen

1888
01:15:42,480 --> 01:15:44,000
no i understand i'm just saying that

1889
01:15:44,000 --> 01:15:47,760
there's there's a dependency here

1890
01:15:48,480 --> 01:15:50,080
i think there's a there's a less optimal

1891
01:15:50,080 --> 01:15:52,159
outcome possible here but i i don't

1892
01:15:52,159 --> 01:15:54,080
think i would argue against making it a

1893
01:15:54,080 --> 01:15:56,080
dependency that we

1894
01:15:56,080 --> 01:15:57,679
try to recharter before we finish this

1895
01:15:57,679 --> 01:15:59,920
work

1896
01:16:00,239 --> 01:16:01,760
so

1897
01:16:01,760 --> 01:16:04,239
as far as being in scope um

1898
01:16:04,239 --> 01:16:05,199
you know

1899
01:16:05,199 --> 01:16:07,840
security area ads we'd be happy to

1900
01:16:07,840 --> 01:16:10,960
receive some guidance on that um

1901
01:16:10,960 --> 01:16:14,080
paul obviously you're you're uh

1902
01:16:14,080 --> 01:16:15,440
potentially

1903
01:16:15,440 --> 01:16:17,600
one of those um

1904
01:16:17,600 --> 01:16:18,560
but

1905
01:16:18,560 --> 01:16:21,600
the current charter

1906
01:16:21,600 --> 01:16:23,840
might have it be in scope to say when

1907
01:16:23,840 --> 01:16:25,840
presenting this to humans

1908
01:16:25,840 --> 01:16:28,080
we believe that x number of bits of the

1909
01:16:28,080 --> 01:16:30,159
fingerprint are are

1910
01:16:30,159 --> 01:16:32,080
sufficient for human verification or

1911
01:16:32,080 --> 01:16:34,000
something along those lines even if we

1912
01:16:34,000 --> 01:16:35,760
don't specify how to present those to

1913
01:16:35,760 --> 01:16:36,880
the user

1914
01:16:36,880 --> 01:16:38,880
right because there is still this you

1915
01:16:38,880 --> 01:16:40,960
know historically people have used the

1916
01:16:40,960 --> 01:16:43,120
short pid which is just four octets

1917
01:16:43,120 --> 01:16:44,880
which we know to be

1918
01:16:44,880 --> 01:16:47,360
uh insufficient right so there is a

1919
01:16:47,360 --> 01:16:49,520
question about cryptographic usage here

1920
01:16:49,520 --> 01:16:51,760
that might be in charter even if we

1921
01:16:51,760 --> 01:16:54,080
don't get to the human representation

1922
01:16:54,080 --> 01:16:56,640
just wanted to point that out

1923
01:16:56,640 --> 01:16:59,040
roman

1924
01:17:00,239 --> 01:17:02,560
hi everyone i just pulled out hop on the

1925
01:17:02,560 --> 01:17:04,800
mic and i just cut the non-existent view

1926
01:17:04,800 --> 01:17:07,600
uh with my ad prerogative uh so just to

1927
01:17:07,600 --> 01:17:08,960
clarify two things but first

1928
01:17:08,960 --> 01:17:12,080
procedurally uh paul uh paul and i have

1929
01:17:12,080 --> 01:17:13,520
been splitting up the working groups and

1930
01:17:13,520 --> 01:17:16,239
i'm gonna be the responsible for for for

1931
01:17:16,239 --> 01:17:17,600
this working group so they're going to

1932
01:17:17,600 --> 01:17:19,920
be seeing more of me uh and to repeat

1933
01:17:19,920 --> 01:17:21,600
what i said in chat i don't actually

1934
01:17:21,600 --> 01:17:22,960
know the answer and i would like to be

1935
01:17:22,960 --> 01:17:24,640
very decisive in this meeting to help

1936
01:17:24,640 --> 01:17:26,640
the discussion but i'm just not up to

1937
01:17:26,640 --> 01:17:28,400
speed on where we are with the working

1938
01:17:28,400 --> 01:17:31,440
group to make a call here so i i want us

1939
01:17:31,440 --> 01:17:33,120
to continue the technical conversations

1940
01:17:33,120 --> 01:17:35,600
but i would like to defer the in-scope

1941
01:17:35,600 --> 01:17:37,600
at a scope decision uh until a later

1942
01:17:37,600 --> 01:17:39,440
point so i can have a chance to to speak

1943
01:17:39,440 --> 01:17:40,719
with the working group chairs and figure

1944
01:17:40,719 --> 01:17:42,080
something out

1945
01:17:42,080 --> 01:17:43,360
thanks

1946
01:17:43,360 --> 01:17:45,839
thank you

1947
01:17:46,159 --> 01:17:48,960
okay so so

1948
01:17:49,040 --> 01:17:50,640
right again i i so i think what we come

1949
01:17:50,640 --> 01:17:53,040
down to is the

1950
01:17:53,040 --> 01:17:53,920
you know

1951
01:17:53,920 --> 01:17:56,000
it's not a good position

1952
01:17:56,000 --> 01:17:57,120
it'll be great if the working group

1953
01:17:57,120 --> 01:17:58,719
recharges later on to try to figure out

1954
01:17:58,719 --> 01:17:59,920
a better answer

1955
01:17:59,920 --> 01:18:02,640
uh meantime i think we can

1956
01:18:02,640 --> 01:18:04,159
we could document some of the security

1957
01:18:04,159 --> 01:18:07,760
issues around people using shorter ids

1958
01:18:07,760 --> 01:18:10,560
and maybe what we don't have an ideal

1959
01:18:10,560 --> 01:18:12,800
solution to recommend

1960
01:18:12,800 --> 01:18:15,840
which is roughly what's on the slide

1961
01:18:15,840 --> 01:18:19,360
and was that our last one okay dkg you

1962
01:18:19,360 --> 01:18:22,400
had one more topic

1963
01:18:24,480 --> 01:18:26,400
yes um

1964
01:18:26,400 --> 01:18:28,080
sorry i'm not showing video just because

1965
01:18:28,080 --> 01:18:29,120
uh

1966
01:18:29,120 --> 01:18:31,600
my laptop will overheat if i do

1967
01:18:31,600 --> 01:18:33,440
um

1968
01:18:33,440 --> 01:18:35,440
so one of the things that's come up that

1969
01:18:35,440 --> 01:18:39,199
is uh pending a potential change to the

1970
01:18:39,199 --> 01:18:41,199
draft is to sort of

1971
01:18:41,199 --> 01:18:44,800
um mr rhett khan shah won

1972
01:18:44,800 --> 01:18:47,280
when i say retcon that's a term from

1973
01:18:47,280 --> 01:18:49,040
like uh i don't know

1974
01:18:49,040 --> 01:18:52,080
online fandom where people talk about

1975
01:18:52,080 --> 01:18:53,679
a storyline that has been changed

1976
01:18:53,679 --> 01:18:56,719
retroactively to mean something else um

1977
01:18:56,719 --> 01:18:58,159
so we all know that shot one is on the

1978
01:18:58,159 --> 01:19:00,640
way out we would love to see it removed

1979
01:19:00,640 --> 01:19:02,400
but as long as we have version four

1980
01:19:02,400 --> 01:19:05,199
public keys in open tgp sha-1 will be

1981
01:19:05,199 --> 01:19:07,840
part of open ppp as long as we have

1982
01:19:07,840 --> 01:19:10,560
version one safety packets shot one will

1983
01:19:10,560 --> 01:19:12,719
be part of open pgp

1984
01:19:12,719 --> 01:19:15,040
um because it's used in the mdc packet

1985
01:19:15,040 --> 01:19:17,280
there

1986
01:19:17,360 --> 01:19:18,880
it may be legitimate to use in those

1987
01:19:18,880 --> 01:19:20,480
places

1988
01:19:20,480 --> 01:19:21,840
but it still seems potentially

1989
01:19:21,840 --> 01:19:22,960
problematic because we know that there

1990
01:19:22,960 --> 01:19:24,080
are collisions and we don't know what

1991
01:19:24,080 --> 01:19:25,760
else is going to go wrong

1992
01:19:25,760 --> 01:19:27,679
and so the thought was that we might

1993
01:19:27,679 --> 01:19:29,760
specify in the draft that everywhere

1994
01:19:29,760 --> 01:19:31,199
that sha-1

1995
01:19:31,199 --> 01:19:32,800
is used

1996
01:19:32,800 --> 01:19:34,719
uh should use something like sha-1

1997
01:19:34,719 --> 01:19:36,400
collision detection and there's some

1998
01:19:36,400 --> 01:19:37,760
links on the slide here if you're

1999
01:19:37,760 --> 01:19:39,120
interested

2000
01:19:39,120 --> 01:19:40,880
in learning more about this it's not

2001
01:19:40,880 --> 01:19:42,159
exactly a

2002
01:19:42,159 --> 01:19:43,760
fully specified center but basically it

2003
01:19:43,760 --> 01:19:45,760
says we can detect

2004
01:19:45,760 --> 01:19:48,320
known mechanisms for collision creation

2005
01:19:48,320 --> 01:19:50,480
and when those happen

2006
01:19:50,480 --> 01:19:53,440
you can either create a explicit failure

2007
01:19:53,440 --> 01:19:55,440
right there's no such digest for this

2008
01:19:55,440 --> 01:19:57,520
input stream

2009
01:19:57,520 --> 01:20:00,320
um or you can return a subtly different

2010
01:20:00,320 --> 01:20:02,560
result which would make implementations

2011
01:20:02,560 --> 01:20:04,719
potentially break and make collisions

2012
01:20:04,719 --> 01:20:06,320
not uh

2013
01:20:06,320 --> 01:20:07,600
collide

2014
01:20:07,600 --> 01:20:09,920
so we can in the draft say hey in the

2015
01:20:09,920 --> 01:20:11,600
cases where you still have to use sha-1

2016
01:20:11,600 --> 01:20:13,679
we recommend using sha-1 cd

2017
01:20:13,679 --> 01:20:16,719
or some similar variation

2018
01:20:16,719 --> 01:20:19,040
to avoid the known collision uh attacks

2019
01:20:19,040 --> 01:20:20,880
on shot one i just wanted to flag that

2020
01:20:20,880 --> 01:20:22,800
that's there it should have no effect

2021
01:20:22,800 --> 01:20:24,400
for people operating over legitimate

2022
01:20:24,400 --> 01:20:27,199
data and it will just make a noisy uh

2023
01:20:27,199 --> 01:20:28,400
failure

2024
01:20:28,400 --> 01:20:30,639
for implementations that

2025
01:20:30,639 --> 01:20:33,600
end up having tackle data that's

2026
01:20:33,600 --> 01:20:34,960
potentially made from one of the

2027
01:20:34,960 --> 01:20:38,239
collision attacks that we know about

2028
01:20:40,080 --> 01:20:42,719
great thanks so i

2029
01:20:42,719 --> 01:20:45,920
does anybody want to speak to you know

2030
01:20:45,920 --> 01:20:48,480
liking or disliking this idea or to yeah

2031
01:20:48,480 --> 01:20:50,320
we see i see a thumbs up in the in the

2032
01:20:50,320 --> 01:20:51,120
room

2033
01:20:51,120 --> 01:20:53,520
um

2034
01:20:53,520 --> 01:20:55,040
i guess that we should just raise this

2035
01:20:55,040 --> 01:20:57,679
as a thread on the mailing list and say

2036
01:20:57,679 --> 01:20:59,199
do people want to go this way and if

2037
01:20:59,199 --> 01:21:02,559
they do then we can figure a text

2038
01:21:04,400 --> 01:21:05,440
yeah

2039
01:21:05,440 --> 01:21:08,080
and nobody disagree

2040
01:21:08,080 --> 01:21:09,120
okay

2041
01:21:09,120 --> 01:21:11,760
i think that's

2042
01:21:12,880 --> 01:21:14,400
yeah that the action is to create a

2043
01:21:14,400 --> 01:21:17,360
thread for about this

2044
01:21:17,760 --> 01:21:19,920
okay so then the last slide uh before we

2045
01:21:19,920 --> 01:21:21,840
move on to the other presentations is

2046
01:21:21,840 --> 01:21:23,760
we'd like yeah again the design team

2047
01:21:23,760 --> 01:21:25,360
we've been kind of operating well also

2048
01:21:25,360 --> 01:21:27,040
our editor has gone off to become a

2049
01:21:27,040 --> 01:21:28,639
security area director which is a you

2050
01:21:28,639 --> 01:21:32,320
know unfortunate future for him but um

2051
01:21:32,320 --> 01:21:34,159
but we can we won't be able to expect as

2052
01:21:34,159 --> 01:21:35,840
many cycles from paul even though it's

2053
01:21:35,840 --> 01:21:37,199
it's relatively it's relatively

2054
01:21:37,199 --> 01:21:38,960
straightforward to push buttons but

2055
01:21:38,960 --> 01:21:40,719
nonetheless it requires a bit of thought

2056
01:21:40,719 --> 01:21:42,880
um so we would like to try and get this

2057
01:21:42,880 --> 01:21:45,360
finished pretty quickly

2058
01:21:45,360 --> 01:21:46,400
um

2059
01:21:46,400 --> 01:21:48,639
there's not many remaining

2060
01:21:48,639 --> 01:21:51,520
merge requests in the

2061
01:21:51,520 --> 01:21:54,159
github gitlab repo there are tons of

2062
01:21:54,159 --> 01:21:55,199
issues

2063
01:21:55,199 --> 01:21:58,000
um but not all of which are

2064
01:21:58,000 --> 01:22:00,080
amenable to being represented or not all

2065
01:22:00,080 --> 01:22:02,560
of which are in charter

2066
01:22:02,560 --> 01:22:04,159
so we'd like to

2067
01:22:04,159 --> 01:22:06,239
the chairs i think would like to to try

2068
01:22:06,239 --> 01:22:08,239
and get to a

2069
01:22:08,239 --> 01:22:09,920
get some implementation experience with

2070
01:22:09,920 --> 01:22:12,080
zero five

2071
01:22:12,080 --> 01:22:13,600
and then probably have another draft at

2072
01:22:13,600 --> 01:22:15,760
least that uh

2073
01:22:15,760 --> 01:22:16,960
we think would be ready for working

2074
01:22:16,960 --> 01:22:18,719
group last call so

2075
01:22:18,719 --> 01:22:20,159
the issues we called it for resolving

2076
01:22:20,159 --> 01:22:22,480
today we'd like to do those as part of

2077
01:22:22,480 --> 01:22:23,679
that

2078
01:22:23,679 --> 01:22:25,040
i'll ask people to implement things and

2079
01:22:25,040 --> 01:22:27,120
check it out

2080
01:22:27,120 --> 01:22:28,480
that's i think our plan for the next

2081
01:22:28,480 --> 01:22:29,679
steps

2082
01:22:29,679 --> 01:22:32,639
any input on that

2083
01:22:36,080 --> 01:22:39,040
nobody thinks it's crazy

2084
01:22:39,040 --> 01:22:40,719
um and then what you know i think once

2085
01:22:40,719 --> 01:22:43,199
we get a working group last call started

2086
01:22:43,199 --> 01:22:45,760
uh i think it might yeah depending on

2087
01:22:45,760 --> 01:22:47,280
if that doesn't far you know fall down

2088
01:22:47,280 --> 01:22:48,719
in flames then i think it might be time

2089
01:22:48,719 --> 01:22:50,719
to think about recharging but let's not

2090
01:22:50,719 --> 01:22:53,199
do that till we have a document that's a

2091
01:22:53,199 --> 01:22:56,320
working group last call at least

2092
01:22:57,679 --> 01:23:00,639
and with that that's our current status

2093
01:23:00,639 --> 01:23:03,199
and back to

2094
01:23:03,199 --> 01:23:06,199
agenda

2095
01:23:07,440 --> 01:23:09,360
um so i think the next we have presents

2096
01:23:09,360 --> 01:23:11,520
where's the agenda

2097
01:23:11,520 --> 01:23:13,679
me

2098
01:23:15,760 --> 01:23:18,000
there's teaching oh there's the agenda

2099
01:23:18,000 --> 01:23:20,480
there we go okay so now we have uh falco

2100
01:23:20,480 --> 01:23:23,600
then mallory and then aaron and we're we

2101
01:23:23,600 --> 01:23:25,760
have 35 minutes so i guess you know if

2102
01:23:25,760 --> 01:23:27,040
you guys could be a little bit quick

2103
01:23:27,040 --> 01:23:28,880
that would be appreciated

2104
01:23:28,880 --> 01:23:30,960
so falco did you want to drive the

2105
01:23:30,960 --> 01:23:34,800
slides or did you want me to

2106
01:23:34,800 --> 01:23:36,880
i can't

2107
01:23:36,880 --> 01:23:39,120
okay well i should stop sharing and you

2108
01:23:39,120 --> 01:23:42,159
need to hit the share slides

2109
01:23:42,159 --> 01:23:42,960
share

2110
01:23:42,960 --> 01:23:45,040
pre-doted slides button and you'll find

2111
01:23:45,040 --> 01:23:46,840
your deck as one of the

2112
01:23:46,840 --> 01:23:49,840
options i have to upload it first yeah

2113
01:23:49,840 --> 01:23:52,960
no i've already uploaded them

2114
01:23:52,960 --> 01:23:54,719
okay

2115
01:23:54,719 --> 01:23:56,719
so if you click on the share pre-loaded

2116
01:23:56,719 --> 01:23:58,560
slides button rather than sharing a

2117
01:23:58,560 --> 01:23:59,760
screen

2118
01:23:59,760 --> 01:24:01,760
ah

2119
01:24:01,760 --> 01:24:04,159
i see

2120
01:24:06,560 --> 01:24:09,760
slight circumstance no

2121
01:24:09,760 --> 01:24:11,679
yeah maybe you share them i don't figure

2122
01:24:11,679 --> 01:24:13,760
it

2123
01:24:14,840 --> 01:24:19,280
out something well i think that's me

2124
01:24:20,800 --> 01:24:22,320
okay so just say when you're not the

2125
01:24:22,320 --> 01:24:23,440
next slide

2126
01:24:23,440 --> 01:24:24,239
okay

2127
01:24:24,239 --> 01:24:26,800
yeah thank you so yeah my name is fargo

2128
01:24:26,800 --> 01:24:28,239
schlensky i'm

2129
01:24:28,239 --> 01:24:31,920
presenting uh to your project which

2130
01:24:31,920 --> 01:24:33,440
um

2131
01:24:33,440 --> 01:24:35,040
should be of interest to the working

2132
01:24:35,040 --> 01:24:37,199
group because it's um

2133
01:24:37,199 --> 01:24:39,520
uh one of its uh aspects is that we're

2134
01:24:39,520 --> 01:24:41,440
going to do standardization efforts and

2135
01:24:41,440 --> 01:24:43,440
for post-quantum cryptography in open

2136
01:24:43,440 --> 01:24:45,120
pgp

2137
01:24:45,120 --> 01:24:47,920
so this project is contracted out by the

2138
01:24:47,920 --> 01:24:49,760
german federal office for information

2139
01:24:49,760 --> 01:24:51,360
security

2140
01:24:51,360 --> 01:24:54,400
on the side of the bsi on on the side of

2141
01:24:54,400 --> 01:24:56,480
the bsi stavros is leading the project

2142
01:24:56,480 --> 01:24:59,199
on the side of the contractor mdg

2143
01:24:59,199 --> 01:25:00,800
together with

2144
01:25:00,800 --> 01:25:01,520
the

2145
01:25:01,520 --> 01:25:04,719
technical university of eindhoven

2146
01:25:04,719 --> 01:25:07,120
i'm the project manager

2147
01:25:07,120 --> 01:25:10,719
so next slide please

2148
01:25:10,960 --> 01:25:13,360
the background is um

2149
01:25:13,360 --> 01:25:15,440
yeah as i said it's contracted out by

2150
01:25:15,440 --> 01:25:18,560
the bsi in order to progress on the

2151
01:25:18,560 --> 01:25:20,080
post-quantum

2152
01:25:20,080 --> 01:25:22,639
standardization the timeline is uh we

2153
01:25:22,639 --> 01:25:25,280
start at end of last year and

2154
01:25:25,280 --> 01:25:27,760
it goes for three years till the end of

2155
01:25:27,760 --> 01:25:30,320
2024

2156
01:25:30,320 --> 01:25:32,400
so we are doing uh we're going to do

2157
01:25:32,400 --> 01:25:34,239
standardization

2158
01:25:34,239 --> 01:25:37,120
um so i'm speaking and

2159
01:25:37,120 --> 01:25:39,440
you have to understand i'm speaking in

2160
01:25:39,440 --> 01:25:40,400
from the

2161
01:25:40,400 --> 01:25:42,480
perspective of the project what are

2162
01:25:42,480 --> 01:25:43,920
actually going to happen in the working

2163
01:25:43,920 --> 01:25:45,760
group that's not

2164
01:25:45,760 --> 01:25:47,600
our influence of course

2165
01:25:47,600 --> 01:25:51,040
but we have this this job to do

2166
01:25:51,040 --> 01:25:53,520
um to do uh to drive forward the

2167
01:25:53,520 --> 01:25:56,719
standardization of post-quantum schemes

2168
01:25:56,719 --> 01:25:58,960
based on the selection by nist

2169
01:25:58,960 --> 01:26:01,679
that we are waiting now anytime

2170
01:26:01,679 --> 01:26:03,360
and also do proof of concept

2171
01:26:03,360 --> 01:26:05,120
implementations

2172
01:26:05,120 --> 01:26:06,400
we are

2173
01:26:06,400 --> 01:26:08,719
aiming at multi-algorithm

2174
01:26:08,719 --> 01:26:09,520
um

2175
01:26:09,520 --> 01:26:10,960
[Music]

2176
01:26:10,960 --> 01:26:14,159
key encapsulation methods and signature

2177
01:26:14,159 --> 01:26:16,000
here for the implementation it will be

2178
01:26:16,000 --> 01:26:17,360
lattice-based

2179
01:26:17,360 --> 01:26:19,280
we'll implement it in thunderbird via

2180
01:26:19,280 --> 01:26:21,600
rnp and botan is the cryptographic

2181
01:26:21,600 --> 01:26:22,639
library

2182
01:26:22,639 --> 01:26:24,960
but we'll also make implementations in

2183
01:26:24,960 --> 01:26:28,400
gnupg and libgrypt

2184
01:26:28,400 --> 01:26:31,360
next slide please

2185
01:26:33,760 --> 01:26:37,199
so and for the motivation

2186
01:26:37,199 --> 01:26:40,239
why do i address it now uh already

2187
01:26:40,239 --> 01:26:42,880
so that's the well-known problem for the

2188
01:26:42,880 --> 01:26:45,120
crypt for for public encryption the

2189
01:26:45,120 --> 01:26:47,120
store now decrypt later

2190
01:26:47,120 --> 01:26:48,880
which people might be facing today in

2191
01:26:48,880 --> 01:26:50,400
certain applications

2192
01:26:50,400 --> 01:26:52,960
but also for signatures we have some

2193
01:26:52,960 --> 01:26:55,199
applications where signatures

2194
01:26:55,199 --> 01:26:56,960
cannot be

2195
01:26:56,960 --> 01:26:59,199
redone

2196
01:26:59,199 --> 01:27:01,440
efficiently so the long-term

2197
01:27:01,440 --> 01:27:04,639
security for signatures is also required

2198
01:27:04,639 --> 01:27:06,560
and we are observing that post quantum

2199
01:27:06,560 --> 01:27:08,639
cryptography is already entering

2200
01:27:08,639 --> 01:27:10,159
generally already entering the

2201
01:27:10,159 --> 01:27:12,800
standardization phase now so this

2202
01:27:12,800 --> 01:27:15,600
contest is coming to an end

2203
01:27:15,600 --> 01:27:16,560
and

2204
01:27:16,560 --> 01:27:18,560
other standardization efforts which i

2205
01:27:18,560 --> 01:27:19,840
will address

2206
01:27:19,840 --> 01:27:21,840
in the next slide also

2207
01:27:21,840 --> 01:27:23,520
in progress

2208
01:27:23,520 --> 01:27:25,600
demand for pqc is observed in the field

2209
01:27:25,600 --> 01:27:26,960
maybe not like

2210
01:27:26,960 --> 01:27:29,440
it's people want to use it now but they

2211
01:27:29,440 --> 01:27:32,719
are preparing for it i think and the

2212
01:27:32,719 --> 01:27:35,199
demand will grow as soon as standards

2213
01:27:35,199 --> 01:27:36,719
are there

2214
01:27:36,719 --> 01:27:39,920
and the integration has started also

2215
01:27:39,920 --> 01:27:40,719
in

2216
01:27:40,719 --> 01:27:42,159
protocols

2217
01:27:42,159 --> 01:27:45,040
next slide please

2218
01:27:45,120 --> 01:27:47,920
so this is just some examples of uh

2219
01:27:47,920 --> 01:27:50,159
drafts uh i don't think we have to go

2220
01:27:50,159 --> 01:27:52,639
into everything in detail some rfcs

2221
01:27:52,639 --> 01:27:54,080
already

2222
01:27:54,080 --> 01:27:57,440
based especially in the context of the

2223
01:27:57,440 --> 01:28:00,239
firmware update the conscious binary

2224
01:28:00,239 --> 01:28:02,320
object representation

2225
01:28:02,320 --> 01:28:04,000
and

2226
01:28:04,000 --> 01:28:07,120
yeah lamps is

2227
01:28:07,760 --> 01:28:09,440
considering to adopt

2228
01:28:09,440 --> 01:28:11,679
a number of

2229
01:28:11,679 --> 01:28:12,840
drafts

2230
01:28:12,840 --> 01:28:16,719
around coast post quantum

2231
01:28:16,719 --> 01:28:19,600
key signatures and encryption binary

2232
01:28:19,600 --> 01:28:22,400
data formats

2233
01:28:22,400 --> 01:28:25,199
there's also a draft for

2234
01:28:25,199 --> 01:28:27,920
for the icon1 encoding for hash b hash

2235
01:28:27,920 --> 01:28:30,000
based schemes

2236
01:28:30,000 --> 01:28:32,960
and etsy iso also have the activities

2237
01:28:32,960 --> 01:28:35,440
publishing documents on this giving

2238
01:28:35,440 --> 01:28:37,040
recommendations

2239
01:28:37,040 --> 01:28:38,320
already

2240
01:28:38,320 --> 01:28:41,040
so everybody has it on the screen so

2241
01:28:41,040 --> 01:28:44,000
this just says a bit of more

2242
01:28:44,000 --> 01:28:46,159
background summary for for the

2243
01:28:46,159 --> 01:28:48,000
motivation okay

2244
01:28:48,000 --> 01:28:50,639
next slide please

2245
01:28:50,639 --> 01:28:53,040
maybe one more slide please i'll reverse

2246
01:28:53,040 --> 01:28:56,480
the order here

2247
01:28:56,480 --> 01:28:59,280
so the design criteria just as a summary

2248
01:28:59,280 --> 01:29:00,080
we

2249
01:29:00,080 --> 01:29:00,960
we are

2250
01:29:00,960 --> 01:29:02,719
only starting now we don't have any

2251
01:29:02,719 --> 01:29:05,360
content to to present now what we are

2252
01:29:05,360 --> 01:29:07,600
going to do but the aim is

2253
01:29:07,600 --> 01:29:10,400
of course not only to have pqc but to

2254
01:29:10,400 --> 01:29:12,480
have this what is sometimes referred to

2255
01:29:12,480 --> 01:29:14,800
as hybrid but more accurately probably

2256
01:29:14,800 --> 01:29:17,679
as multi-algorithm

2257
01:29:17,679 --> 01:29:19,280
scheme so we

2258
01:29:19,280 --> 01:29:21,600
want to be able to have keys

2259
01:29:21,600 --> 01:29:23,440
different keys which is of course

2260
01:29:23,440 --> 01:29:26,880
already possible in an open pgp

2261
01:29:26,880 --> 01:29:30,239
certificate so you can decrypt

2262
01:29:30,239 --> 01:29:32,400
encrypt keys uh

2263
01:29:32,400 --> 01:29:34,159
encrypt messages with multiple keys of a

2264
01:29:34,159 --> 01:29:35,360
recipient

2265
01:29:35,360 --> 01:29:36,480
you can

2266
01:29:36,480 --> 01:29:38,560
perform signatures with multiple of your

2267
01:29:38,560 --> 01:29:40,400
own keys

2268
01:29:40,400 --> 01:29:43,920
and so in order to provide this fallback

2269
01:29:43,920 --> 01:29:46,960
if the new pqc screams turn out

2270
01:29:46,960 --> 01:29:50,840
new pcc schemes turn out to be

2271
01:29:50,840 --> 01:29:54,560
um not as secure as expected

2272
01:29:54,560 --> 01:29:57,760
we want to orient towards existing

2273
01:29:57,760 --> 01:30:00,800
proposals standards as far as they exist

2274
01:30:00,800 --> 01:30:04,080
and that makes sense for open pgp

2275
01:30:04,080 --> 01:30:06,080
and we also aim at backward

2276
01:30:06,080 --> 01:30:08,080
compatibility so

2277
01:30:08,080 --> 01:30:09,920
for the key formats and the signature

2278
01:30:09,920 --> 01:30:11,760
formats especially where it's possible

2279
01:30:11,760 --> 01:30:13,520
where it should be possible

2280
01:30:13,520 --> 01:30:15,760
we want uh

2281
01:30:15,760 --> 01:30:18,800
the new formats to be

2282
01:30:18,800 --> 01:30:21,520
ideally processable by

2283
01:30:21,520 --> 01:30:22,560
uh

2284
01:30:22,560 --> 01:30:24,480
existing

2285
01:30:24,480 --> 01:30:26,239
implementations that don't support the

2286
01:30:26,239 --> 01:30:28,719
new pqc standard

2287
01:30:28,719 --> 01:30:32,239
okay one slide back please

2288
01:30:33,679 --> 01:30:36,880
so the timeline here and the the whole

2289
01:30:36,880 --> 01:30:39,679
project plan and a very brief summary

2290
01:30:39,679 --> 01:30:42,560
we are now entering

2291
01:30:42,560 --> 01:30:45,679
the phase where we make the

2292
01:30:45,679 --> 01:30:48,639
design a proposed design also

2293
01:30:48,639 --> 01:30:50,480
more or less in parallel proof of

2294
01:30:50,480 --> 01:30:53,280
concept implementation

2295
01:30:53,280 --> 01:30:54,400
we

2296
01:30:54,400 --> 01:30:56,320
target to

2297
01:30:56,320 --> 01:30:59,600
produce a first draft version

2298
01:30:59,600 --> 01:31:01,440
in the last quarter of this year towards

2299
01:31:01,440 --> 01:31:03,840
the end of this year

2300
01:31:03,840 --> 01:31:05,440
but in general our standardization

2301
01:31:05,440 --> 01:31:07,679
efforts last until the

2302
01:31:07,679 --> 01:31:10,239
the end of the project which should very

2303
01:31:10,239 --> 01:31:12,800
well cover the this standardization

2304
01:31:12,800 --> 01:31:16,080
phase which as they announced is this

2305
01:31:16,080 --> 01:31:18,400
announced it as i understood it

2306
01:31:18,400 --> 01:31:20,159
should last until

2307
01:31:20,159 --> 01:31:23,719
the end of 2023

2308
01:31:24,159 --> 01:31:26,639
so by then we should have the standards

2309
01:31:26,639 --> 01:31:28,880
only by then of course it makes really

2310
01:31:28,880 --> 01:31:30,480
sense to

2311
01:31:30,480 --> 01:31:31,920
finish the

2312
01:31:31,920 --> 01:31:33,280
um

2313
01:31:33,280 --> 01:31:36,080
the open picture piece standard as well

2314
01:31:36,080 --> 01:31:37,040
um

2315
01:31:37,040 --> 01:31:38,639
but there are many things there there

2316
01:31:38,639 --> 01:31:41,120
are not many things uh that will be that

2317
01:31:41,120 --> 01:31:44,000
are left open now i i would say

2318
01:31:44,000 --> 01:31:46,960
more or less it's the parameters

2319
01:31:46,960 --> 01:31:49,600
nist will have to specify maybe the apis

2320
01:31:49,600 --> 01:31:51,920
as far as that is relevant but otherwise

2321
01:31:51,920 --> 01:31:54,639
of course it's possible to already start

2322
01:31:54,639 --> 01:31:56,840
with many

2323
01:31:56,840 --> 01:32:00,320
specifications at this stage already

2324
01:32:00,320 --> 01:32:04,559
okay then uh next slide please

2325
01:32:04,800 --> 01:32:07,120
yeah then uh of course the most

2326
01:32:07,120 --> 01:32:08,960
important aspect and this is why we're

2327
01:32:08,960 --> 01:32:12,400
pre presenting here is that we

2328
01:32:12,400 --> 01:32:13,840
of course seek the cooperation with the

2329
01:32:13,840 --> 01:32:15,120
working group

2330
01:32:15,120 --> 01:32:17,520
we are well aware that there is

2331
01:32:17,520 --> 01:32:21,199
no charter for this currently

2332
01:32:21,199 --> 01:32:22,960
but in any case

2333
01:32:22,960 --> 01:32:25,840
as i said it's a project it has a

2334
01:32:25,840 --> 01:32:28,880
timeline we have work packages we'll

2335
01:32:28,880 --> 01:32:31,840
do these things and the more we have

2336
01:32:31,840 --> 01:32:34,719
cooperation with a working group

2337
01:32:34,719 --> 01:32:36,080
the more

2338
01:32:36,080 --> 01:32:37,199
i think

2339
01:32:37,199 --> 01:32:39,520
of course this project will benefit

2340
01:32:39,520 --> 01:32:41,040
so we are open

2341
01:32:41,040 --> 01:32:43,280
for any kind of input or contribution

2342
01:32:43,280 --> 01:32:44,560
and

2343
01:32:44,560 --> 01:32:45,679
yeah

2344
01:32:45,679 --> 01:32:48,480
currently our plan is to work on a draft

2345
01:32:48,480 --> 01:32:50,880
which is hopefully later adopted by the

2346
01:32:50,880 --> 01:32:53,120
working group

2347
01:32:53,120 --> 01:32:55,679
that is from my side thank you for your

2348
01:32:55,679 --> 01:32:57,440
attention thank you for this opportunity

2349
01:32:57,440 --> 01:32:59,920
to present the project here

2350
01:32:59,920 --> 01:33:02,320
uh yeah and i'll be happy or we'll be

2351
01:33:02,320 --> 01:33:06,840
happy to answer any questions you might

2352
01:33:06,840 --> 01:33:10,239
have great thanks michael um

2353
01:33:10,239 --> 01:33:12,638
florence

2354
01:33:18,080 --> 01:33:21,280
hi i'm flo uk ncsc um i was wondering if

2355
01:33:21,280 --> 01:33:23,040
you'd given any thought to algorithms

2356
01:33:23,040 --> 01:33:24,800
yet beyond um

2357
01:33:24,800 --> 01:33:26,320
beyond lattices

2358
01:33:26,320 --> 01:33:28,080
um also thanks was really interesting

2359
01:33:28,080 --> 01:33:30,480
presentation

2360
01:33:30,480 --> 01:33:31,360
um

2361
01:33:31,360 --> 01:33:33,760
yet regarding the algorithm choice for

2362
01:33:33,760 --> 01:33:37,840
standardization we plan to

2363
01:33:37,840 --> 01:33:40,880
orient towards the next decision so

2364
01:33:40,880 --> 01:33:43,280
basically we would like to standardize

2365
01:33:43,280 --> 01:33:44,480
all

2366
01:33:44,480 --> 01:33:45,520
or

2367
01:33:45,520 --> 01:33:48,159
consider all the

2368
01:33:48,159 --> 01:33:49,760
missed schemes that are selected for

2369
01:33:49,760 --> 01:33:52,159
standardization also for standardization

2370
01:33:52,159 --> 01:33:53,120
in

2371
01:33:53,120 --> 01:33:56,400
openpgp it's only that the

2372
01:33:56,400 --> 01:33:58,159
implementation that we make in the

2373
01:33:58,159 --> 01:33:59,440
project

2374
01:33:59,440 --> 01:34:03,360
is restricted to the subset of

2375
01:34:03,360 --> 01:34:04,480
one

2376
01:34:04,480 --> 01:34:06,239
encryption scheme and one signature

2377
01:34:06,239 --> 01:34:07,440
scheme

2378
01:34:07,440 --> 01:34:09,679
there's of course an interest of us that

2379
01:34:09,679 --> 01:34:11,840
there are other contributions in all

2380
01:34:11,840 --> 01:34:13,600
these efforts that hopefully there is

2381
01:34:13,600 --> 01:34:15,120
some

2382
01:34:15,120 --> 01:34:16,880
some more contributions of

2383
01:34:16,880 --> 01:34:18,639
implementations maybe of the other

2384
01:34:18,639 --> 01:34:20,880
schemes

2385
01:34:20,880 --> 01:34:24,480
as there are already existing

2386
01:34:24,480 --> 01:34:26,719
implementations of all schemes that

2387
01:34:26,719 --> 01:34:29,040
shouldn't be too difficult to to have a

2388
01:34:29,040 --> 01:34:31,679
proof of concept implementation of each

2389
01:34:31,679 --> 01:34:33,920
but yeah this is something that

2390
01:34:33,920 --> 01:34:35,920
would require more um

2391
01:34:35,920 --> 01:34:37,040
cooperation

2392
01:34:37,040 --> 01:34:39,760
with other people

2393
01:34:40,400 --> 01:34:42,080
thanks very much

2394
01:34:42,080 --> 01:34:45,320
thank you

2395
01:34:48,400 --> 01:34:50,960
i can also open my camera i totally

2396
01:34:50,960 --> 01:34:52,080
forgot

2397
01:34:52,080 --> 01:34:52,960
and

2398
01:34:52,960 --> 01:34:55,280
also at protonmail we are now trying to

2399
01:34:55,280 --> 01:34:58,639
consider an experimental implementation

2400
01:34:58,639 --> 01:35:02,719
of post-quantum cryptography and we have

2401
01:35:02,719 --> 01:35:05,520
looked at the schemes he also proposed

2402
01:35:05,520 --> 01:35:07,040
on the

2403
01:35:07,040 --> 01:35:08,800
on the mailing list

2404
01:35:08,800 --> 01:35:10,320
they they look

2405
01:35:10,320 --> 01:35:12,719
practical and convenient and we have

2406
01:35:12,719 --> 01:35:14,480
already we're starting on

2407
01:35:14,480 --> 01:35:17,679
right now onto um

2408
01:35:17,679 --> 01:35:19,440
let's say uh proof of concept

2409
01:35:19,440 --> 01:35:21,199
implementation as well

2410
01:35:21,199 --> 01:35:22,800
we would like to

2411
01:35:22,800 --> 01:35:25,119
let's say have a chat and probably

2412
01:35:25,119 --> 01:35:27,199
interrupt like develop something that is

2413
01:35:27,199 --> 01:35:29,679
interoperable probably

2414
01:35:29,679 --> 01:35:32,000
yeah yeah oh very good yeah then we

2415
01:35:32,000 --> 01:35:35,360
should get into contact yeah okay

2416
01:35:35,360 --> 01:35:36,560
great thanks thank you for the

2417
01:35:36,560 --> 01:35:39,119
presentation yeah thanks falco uh so i

2418
01:35:39,119 --> 01:35:40,800
guess this would be definitely one to

2419
01:35:40,800 --> 01:35:43,820
consider at rechartering time so

2420
01:35:43,820 --> 01:35:44,960
[Music]

2421
01:35:44,960 --> 01:35:46,560
okay i don't see anything else in the

2422
01:35:46,560 --> 01:35:50,960
queue so uh mallory if you'd like to

2423
01:35:50,960 --> 01:35:54,560
jump in do you want us do you want to

2424
01:35:54,719 --> 01:35:55,920
you want me to share the slides for you

2425
01:35:55,920 --> 01:35:57,360
or do you want to do it you're doing it

2426
01:35:57,360 --> 01:36:01,799
yourself i think i can manage

2427
01:36:20,000 --> 01:36:21,520
i'm not sure if you have to approve my

2428
01:36:21,520 --> 01:36:23,600
request

2429
01:36:23,600 --> 01:36:25,119
you want me to do should i do them from

2430
01:36:25,119 --> 01:36:27,280
here

2431
01:36:27,600 --> 01:36:29,920
um i've requested

2432
01:36:29,920 --> 01:36:31,600
oh sorry yes

2433
01:36:31,600 --> 01:36:34,080
i have to click yes

2434
01:36:34,080 --> 01:36:38,600
yes i do okay great

2435
01:36:44,080 --> 01:36:46,239
it doesn't like that

2436
01:36:46,239 --> 01:36:47,360
um

2437
01:36:47,360 --> 01:36:50,400
for the sake of time maybe you should

2438
01:36:50,400 --> 01:36:53,199
oh right oh i think that that's me doing

2439
01:36:53,199 --> 01:36:54,320
it now

2440
01:36:54,320 --> 01:36:55,600
that's fine

2441
01:36:55,600 --> 01:36:58,880
i appreciate it all right hi everyone um

2442
01:36:58,880 --> 01:37:01,199
so um i'm mallory notal i'm one of the

2443
01:37:01,199 --> 01:37:03,840
authors on this draft um

2444
01:37:03,840 --> 01:37:06,400
the it's a definition for end-to-end

2445
01:37:06,400 --> 01:37:10,400
encryption and uh next slide

2446
01:37:10,400 --> 01:37:14,960
um i wrote it with a few other folks um

2447
01:37:14,960 --> 01:37:16,560
that you'll see here i'm not sure if any

2448
01:37:16,560 --> 01:37:18,400
of them are in

2449
01:37:18,400 --> 01:37:20,880
this meeting but if you are

2450
01:37:20,880 --> 01:37:22,719
feel free to jump in

2451
01:37:22,719 --> 01:37:25,199
um or correct me in the chat things like

2452
01:37:25,199 --> 01:37:26,800
that don't see anyone i don't see them

2453
01:37:26,800 --> 01:37:31,199
either that's fine um next slide

2454
01:37:31,280 --> 01:37:33,119
so the goal is

2455
01:37:33,119 --> 01:37:35,199
really quite straightforward it's just a

2456
01:37:35,199 --> 01:37:38,159
definition of um into encrypted um

2457
01:37:38,159 --> 01:37:40,719
systems and encrypted communications you

2458
01:37:40,719 --> 01:37:43,600
know that that second part um

2459
01:37:43,600 --> 01:37:45,520
is swapped around throughout the draft

2460
01:37:45,520 --> 01:37:48,000
but really yeah that that's the it's

2461
01:37:48,000 --> 01:37:49,280
really intended to be very

2462
01:37:49,280 --> 01:37:52,559
straightforward uh next slide

2463
01:37:53,520 --> 01:37:56,560
um so why we're presenting it here

2464
01:37:56,560 --> 01:37:59,119
um so the history of the draft the first

2465
01:37:59,119 --> 01:38:01,920
version we were working on in

2466
01:38:01,920 --> 01:38:03,840
messaging layer security

2467
01:38:03,840 --> 01:38:05,920
um but when

2468
01:38:05,920 --> 01:38:08,800
we discussed it folks made the keen

2469
01:38:08,800 --> 01:38:10,560
observation that this would apply to

2470
01:38:10,560 --> 01:38:14,080
other working groups in the ietf and so

2471
01:38:14,080 --> 01:38:16,400
it probably should be dispatched

2472
01:38:16,400 --> 01:38:18,960
we did that and

2473
01:38:18,960 --> 01:38:20,320
the

2474
01:38:20,320 --> 01:38:23,520
the outcome of that session was the

2475
01:38:23,520 --> 01:38:25,679
security area directors are really kind

2476
01:38:25,679 --> 01:38:27,520
to give us a mailing list to work on

2477
01:38:27,520 --> 01:38:28,960
this draft so

2478
01:38:28,960 --> 01:38:31,040
you can now

2479
01:38:31,040 --> 01:38:34,080
review the draft at e2e

2480
01:38:34,080 --> 01:38:36,719
ietf.org there's been

2481
01:38:36,719 --> 01:38:39,199
a little bit of discussion there

2482
01:38:39,199 --> 01:38:41,119
we got

2483
01:38:41,119 --> 01:38:42,960
new issues out of out of those

2484
01:38:42,960 --> 01:38:45,280
discussions um

2485
01:38:45,280 --> 01:38:47,040
but then in needing to progress it i

2486
01:38:47,040 --> 01:38:49,760
think it does also make sense to um for

2487
01:38:49,760 --> 01:38:51,840
me to come to you to the working groups

2488
01:38:51,840 --> 01:38:53,679
that this actually might affect um and

2489
01:38:53,679 --> 01:38:55,600
ask for reviews so that's what i'm doing

2490
01:38:55,600 --> 01:38:56,320
now

2491
01:38:56,320 --> 01:38:57,520
um

2492
01:38:57,520 --> 01:38:59,760
i don't know that that this should be

2493
01:38:59,760 --> 01:39:01,520
adopted necessarily in any of these

2494
01:39:01,520 --> 01:39:03,440
working groups but um more abuse is

2495
01:39:03,440 --> 01:39:07,199
always required so uh next slide please

2496
01:39:07,199 --> 01:39:10,159
to get more into the substance now um

2497
01:39:10,159 --> 01:39:12,080
the outcomes that we're hoping for with

2498
01:39:12,080 --> 01:39:14,480
this draft um is that it makes it more

2499
01:39:14,480 --> 01:39:16,560
difficult to call things into

2500
01:39:16,560 --> 01:39:18,159
inter-encrypted when they really aren't

2501
01:39:18,159 --> 01:39:20,320
and actually we do see this tendency

2502
01:39:20,320 --> 01:39:21,920
maybe it's not so much in engineering

2503
01:39:21,920 --> 01:39:24,400
spaces like the ietf but you know

2504
01:39:24,400 --> 01:39:27,520
encryption um has landed in the

2505
01:39:27,520 --> 01:39:29,840
mainstream and the more public

2506
01:39:29,840 --> 01:39:31,679
discussion about

2507
01:39:31,679 --> 01:39:33,600
user expectations on

2508
01:39:33,600 --> 01:39:36,480
the internet and apps they use and we

2509
01:39:36,480 --> 01:39:39,199
are seeing a tendency for

2510
01:39:39,199 --> 01:39:41,920
that public discussion to discuss things

2511
01:39:41,920 --> 01:39:43,520
that are not actually

2512
01:39:43,520 --> 01:39:45,920
indian encryption as if they are

2513
01:39:45,920 --> 01:39:48,800
it would be very useful then to have

2514
01:39:48,800 --> 01:39:49,920
sort of

2515
01:39:49,920 --> 01:39:51,760
a plain language

2516
01:39:51,760 --> 01:39:54,000
explanation of what

2517
01:39:54,000 --> 01:39:56,480
intent encryption is from an authority

2518
01:39:56,480 --> 01:39:58,480
like the ietf so that's the first

2519
01:39:58,480 --> 01:39:59,520
outcome

2520
01:39:59,520 --> 01:40:00,480
um

2521
01:40:00,480 --> 01:40:02,639
i think it might also be useful and this

2522
01:40:02,639 --> 01:40:05,679
is a question i guess through the group

2523
01:40:05,679 --> 01:40:08,880
to put sort of definitional

2524
01:40:08,880 --> 01:40:11,600
text in one draft so that it doesn't

2525
01:40:11,600 --> 01:40:14,239
make your other drafts very long and you

2526
01:40:14,239 --> 01:40:15,679
don't have to worry about being really

2527
01:40:15,679 --> 01:40:17,920
specific what you mean when you invoke

2528
01:40:17,920 --> 01:40:20,719
things like deniability or other kinds

2529
01:40:20,719 --> 01:40:22,400
of concepts related to this

2530
01:40:22,400 --> 01:40:26,239
um and then the last one um is maybe a

2531
01:40:26,239 --> 01:40:28,080
goal i'm not sure this is maybe a

2532
01:40:28,080 --> 01:40:30,000
question for those sort of working

2533
01:40:30,000 --> 01:40:30,960
across

2534
01:40:30,960 --> 01:40:33,280
these spaces in the ietf so area

2535
01:40:33,280 --> 01:40:35,440
directors essentially but like you know

2536
01:40:35,440 --> 01:40:37,679
if there's a possible goal or if it is a

2537
01:40:37,679 --> 01:40:40,560
desirable thing to try to

2538
01:40:40,560 --> 01:40:42,320
harmonize a sort of

2539
01:40:42,320 --> 01:40:45,600
norms or principles driven approach to

2540
01:40:45,600 --> 01:40:46,639
um

2541
01:40:46,639 --> 01:40:48,239
encryption in particular

2542
01:40:48,239 --> 01:40:50,239
although transport encryption might also

2543
01:40:50,239 --> 01:40:52,080
have some overlap there

2544
01:40:52,080 --> 01:40:53,679
so those are the three outcomes there

2545
01:40:53,679 --> 01:40:54,960
may be more those are the ones we

2546
01:40:54,960 --> 01:40:57,119
articulated when we are

2547
01:40:57,119 --> 01:41:00,560
initiating this work next slide please

2548
01:41:00,560 --> 01:41:04,320
um the the also an important approach

2549
01:41:04,320 --> 01:41:05,920
that we wanted to be clear about from

2550
01:41:05,920 --> 01:41:07,440
the beginning is that we didn't want to

2551
01:41:07,440 --> 01:41:09,280
write a draft that explained what

2552
01:41:09,280 --> 01:41:11,119
end-to-end encryption is not

2553
01:41:11,119 --> 01:41:12,400
that would not have been helpful

2554
01:41:12,400 --> 01:41:14,159
although there are very many examples

2555
01:41:14,159 --> 01:41:15,920
out there that we could have used we

2556
01:41:15,920 --> 01:41:18,239
wanted it to be a

2557
01:41:18,239 --> 01:41:19,600
definition that stands on its own

2558
01:41:19,600 --> 01:41:21,600
without counter example

2559
01:41:21,600 --> 01:41:23,520
um

2560
01:41:23,520 --> 01:41:26,400
we yeah and to that point also then

2561
01:41:26,400 --> 01:41:29,199
invoking threats as a way of explaining

2562
01:41:29,199 --> 01:41:30,800
what intended encryption is would be a

2563
01:41:30,800 --> 01:41:32,080
common tendency and a lot of

2564
01:41:32,080 --> 01:41:34,960
documentation sort of out in the wild

2565
01:41:34,960 --> 01:41:36,480
talks about threats when it's trying to

2566
01:41:36,480 --> 01:41:38,880
talk about encryption um we also didn't

2567
01:41:38,880 --> 01:41:41,280
want to invoke a threat model into this

2568
01:41:41,280 --> 01:41:42,639
discussion at all

2569
01:41:42,639 --> 01:41:44,800
um and then the other thing which this

2570
01:41:44,800 --> 01:41:47,040
baby is difficult to avoid we have no

2571
01:41:47,040 --> 01:41:48,960
control over it is that if there seemed

2572
01:41:48,960 --> 01:41:52,719
to be a lot of disagreement within

2573
01:41:52,719 --> 01:41:54,320
an engineering space like the internet

2574
01:41:54,320 --> 01:41:55,760
engineering task force that could be

2575
01:41:55,760 --> 01:41:58,080
counter to our goals to try to come up

2576
01:41:58,080 --> 01:42:01,679
with um you know harmonization on what

2577
01:42:01,679 --> 01:42:03,360
is indian decryption so if we all sort

2578
01:42:03,360 --> 01:42:04,880
of disagree about what it means then

2579
01:42:04,880 --> 01:42:06,880
that's actually counterproductive

2580
01:42:06,880 --> 01:42:09,360
and you know considering ietf meetings

2581
01:42:09,360 --> 01:42:11,040
and mailing lists are

2582
01:42:11,040 --> 01:42:13,760
well documented um that would maybe not

2583
01:42:13,760 --> 01:42:15,920
be useful but we again can't control it

2584
01:42:15,920 --> 01:42:17,600
and if we're totally wrong about what is

2585
01:42:17,600 --> 01:42:19,840
intent encryption then that might happen

2586
01:42:19,840 --> 01:42:22,560
um okay next slide

2587
01:42:22,560 --> 01:42:24,719
um this should be the table of contents

2588
01:42:24,719 --> 01:42:26,239
yep so um

2589
01:42:26,239 --> 01:42:27,679
the this is what the table of contents

2590
01:42:27,679 --> 01:42:29,520
looks like now it did not always we've

2591
01:42:29,520 --> 01:42:30,960
added quite a lot into the formal

2592
01:42:30,960 --> 01:42:33,840
definition piece so it's a three-part

2593
01:42:33,840 --> 01:42:36,400
draft it tries to define intimate

2594
01:42:36,400 --> 01:42:39,199
encryption in three different ways and

2595
01:42:39,199 --> 01:42:41,440
we believe in aggregate

2596
01:42:41,440 --> 01:42:43,760
that is what is required to actually

2597
01:42:43,760 --> 01:42:45,840
come up with a full definition the first

2598
01:42:45,840 --> 01:42:47,520
way of course is a formal definition

2599
01:42:47,520 --> 01:42:49,760
what is an end what is the end to end

2600
01:42:49,760 --> 01:42:52,400
principle what is encryption and then

2601
01:42:52,400 --> 01:42:54,000
can you summarize that in one or two

2602
01:42:54,000 --> 01:42:55,920
sentences and we do that in the first

2603
01:42:55,920 --> 01:42:58,480
part but then i think it's also

2604
01:42:58,480 --> 01:43:00,320
incredibly useful to

2605
01:43:00,320 --> 01:43:03,040
look at what are the features of indent

2606
01:43:03,040 --> 01:43:04,480
encryption and then what are the

2607
01:43:04,480 --> 01:43:06,639
challenges that features or

2608
01:43:06,639 --> 01:43:09,440
implementations are trying to overcome

2609
01:43:09,440 --> 01:43:12,080
um when looking at systems design so the

2610
01:43:12,080 --> 01:43:14,719
second part is from a developer's

2611
01:43:14,719 --> 01:43:17,440
perspective what is into encryption and

2612
01:43:17,440 --> 01:43:19,360
then finally

2613
01:43:19,360 --> 01:43:21,760
user expectations should matter quite a

2614
01:43:21,760 --> 01:43:23,920
lot because if the

2615
01:43:23,920 --> 01:43:25,679
users are not

2616
01:43:25,679 --> 01:43:29,440
um aware of features or they are not

2617
01:43:29,440 --> 01:43:30,719
um

2618
01:43:30,719 --> 01:43:31,760
sort of

2619
01:43:31,760 --> 01:43:33,760
making choices

2620
01:43:33,760 --> 01:43:35,280
we were talking before about user

2621
01:43:35,280 --> 01:43:37,440
behavior around checking signatures like

2622
01:43:37,440 --> 01:43:38,960
all of that actually matters quite a bit

2623
01:43:38,960 --> 01:43:40,239
no matter what the tech is it's

2624
01:43:40,239 --> 01:43:41,600
underlying it because at the end of the

2625
01:43:41,600 --> 01:43:42,560
day

2626
01:43:42,560 --> 01:43:44,400
um users are the ones

2627
01:43:44,400 --> 01:43:45,760
writing these messages and receiving

2628
01:43:45,760 --> 01:43:48,080
these messages so user expectation tries

2629
01:43:48,080 --> 01:43:50,159
to lay out um

2630
01:43:50,159 --> 01:43:52,960
sort of when when a when a user hears

2631
01:43:52,960 --> 01:43:54,960
that a messaging app is indian encrypted

2632
01:43:54,960 --> 01:43:57,040
what actually should they expect

2633
01:43:57,040 --> 01:43:58,880
um and does the

2634
01:43:58,880 --> 01:44:00,560
technology fulfill that

2635
01:44:00,560 --> 01:44:03,800
next slide

2636
01:44:08,000 --> 01:44:11,440
so um the draft is now in

2637
01:44:11,440 --> 01:44:13,280
o2 i think

2638
01:44:13,280 --> 01:44:16,880
so since the first draft um we had to

2639
01:44:16,880 --> 01:44:18,560
really expand the formal definition

2640
01:44:18,560 --> 01:44:21,040
section it was too succinct and

2641
01:44:21,040 --> 01:44:22,719
there was a lot of

2642
01:44:22,719 --> 01:44:24,880
question about what is an end that was a

2643
01:44:24,880 --> 01:44:26,800
really interesting discussion

2644
01:44:26,800 --> 01:44:29,679
because it's not maybe just the device

2645
01:44:29,679 --> 01:44:32,320
if you have for example proposals

2646
01:44:32,320 --> 01:44:33,520
that

2647
01:44:33,520 --> 01:44:36,080
um say if you just scan

2648
01:44:36,080 --> 01:44:37,360
the device

2649
01:44:37,360 --> 01:44:38,719
before

2650
01:44:38,719 --> 01:44:40,480
content is uploaded then you could do

2651
01:44:40,480 --> 01:44:42,159
some degree of content moderation in

2652
01:44:42,159 --> 01:44:44,719
indians and encrypted systems we kind of

2653
01:44:44,719 --> 01:44:47,280
feel like that's a violation of um the

2654
01:44:47,280 --> 01:44:49,520
promises of confidentiality and privacy

2655
01:44:49,520 --> 01:44:51,119
and end-to-end encrypted messaging so

2656
01:44:51,119 --> 01:44:54,000
then what is it into the device is it

2657
01:44:54,000 --> 01:44:56,480
the operating system is it the person

2658
01:44:56,480 --> 01:44:58,800
you know what is that so we we dealt

2659
01:44:58,800 --> 01:45:01,119
with that um

2660
01:45:01,119 --> 01:45:03,840
after the first version and then the um

2661
01:45:03,840 --> 01:45:06,480
version we're at now has changed

2662
01:45:06,480 --> 01:45:08,960
um again like a little bit more work on

2663
01:45:08,960 --> 01:45:11,760
the definition the the formal definition

2664
01:45:11,760 --> 01:45:13,360
section um

2665
01:45:13,360 --> 01:45:15,119
and also

2666
01:45:15,119 --> 01:45:16,719
having to grapple again with this

2667
01:45:16,719 --> 01:45:18,960
identity versus endpoint um piece so

2668
01:45:18,960 --> 01:45:20,480
that's those are the changes actually

2669
01:45:20,480 --> 01:45:22,080
it's mostly been in the sections i think

2670
01:45:22,080 --> 01:45:23,920
the pieces around you know what our

2671
01:45:23,920 --> 01:45:26,400
users expect and then also what are some

2672
01:45:26,400 --> 01:45:28,719
of the possible features for indian

2673
01:45:28,719 --> 01:45:31,040
encrypted messaging implementations have

2674
01:45:31,040 --> 01:45:32,960
not really been touched but that

2675
01:45:32,960 --> 01:45:34,880
actually might be the ask

2676
01:45:34,880 --> 01:45:37,360
for you all if you check a look at this

2677
01:45:37,360 --> 01:45:38,960
so next slide

2678
01:45:38,960 --> 01:45:40,880
please

2679
01:45:40,880 --> 01:45:43,520
we're hoping to close a few of the

2680
01:45:43,520 --> 01:45:45,920
smaller issues in the next version that

2681
01:45:45,920 --> 01:45:48,880
they're not terribly thorny um

2682
01:45:48,880 --> 01:45:51,280
the there's a i think that it's worth

2683
01:45:51,280 --> 01:45:52,800
looking for people who really are

2684
01:45:52,800 --> 01:45:54,159
working on the sort of metadata

2685
01:45:54,159 --> 01:45:55,679
reduction angle which sounds like a lot

2686
01:45:55,679 --> 01:45:57,199
of you are with respect to getting rid

2687
01:45:57,199 --> 01:46:00,080
of user ids and other kinds of things um

2688
01:46:00,080 --> 01:46:02,080
that could use a nice sweep over for

2689
01:46:02,080 --> 01:46:04,159
folks wanting to review like are we

2690
01:46:04,159 --> 01:46:06,560
treating the metadata problem enough as

2691
01:46:06,560 --> 01:46:08,159
far as i remember it's just like one

2692
01:46:08,159 --> 01:46:12,560
sort of subsection in section two um

2693
01:46:12,560 --> 01:46:15,679
thinks i think that um we have other

2694
01:46:15,679 --> 01:46:17,360
features in there like perfect forward

2695
01:46:17,360 --> 01:46:18,400
secrecy

2696
01:46:18,400 --> 01:46:20,320
backwards compatibility

2697
01:46:20,320 --> 01:46:22,320
issues um

2698
01:46:22,320 --> 01:46:25,280
disappearing messages deniability but we

2699
01:46:25,280 --> 01:46:28,080
want to make sure that

2700
01:46:28,080 --> 01:46:30,320
that's complete actually even if not

2701
01:46:30,320 --> 01:46:32,239
every implementation has those features

2702
01:46:32,239 --> 01:46:34,480
we want to make sure that um they're all

2703
01:46:34,480 --> 01:46:35,840
there

2704
01:46:35,840 --> 01:46:38,480
and yeah just if we could have more

2705
01:46:38,480 --> 01:46:40,800
reviews i'd really welcome that um next

2706
01:46:40,800 --> 01:46:43,360
and final slide gives you all a pointer

2707
01:46:43,360 --> 01:46:45,440
to where this is happening at github but

2708
01:46:45,440 --> 01:46:47,119
again and i should have put this on the

2709
01:46:47,119 --> 01:46:49,679
slide i'm really sorry you can email

2710
01:46:49,679 --> 01:46:54,880
um e2ee ietf.org for uh with your review

2711
01:46:54,880 --> 01:46:55,920
um

2712
01:46:55,920 --> 01:46:57,199
and it would just be really great to

2713
01:46:57,199 --> 01:46:59,600
have more reviews

2714
01:46:59,600 --> 01:47:02,239
but open to your thoughts and feedback

2715
01:47:02,239 --> 01:47:03,679
now as well

2716
01:47:03,679 --> 01:47:06,000
if you have any

2717
01:47:06,000 --> 01:47:07,679
great thanks mary

2718
01:47:07,679 --> 01:47:09,280
any

2719
01:47:09,280 --> 01:47:10,960
comments or questions i guess how many

2720
01:47:10,960 --> 01:47:13,360
people have read this draft or

2721
01:47:13,360 --> 01:47:15,360
you know just in the room no

2722
01:47:15,360 --> 01:47:17,040
no okay so i guess we're encouraging

2723
01:47:17,040 --> 01:47:18,960
people to read the draft it's the next

2724
01:47:18,960 --> 01:47:21,520
step really

2725
01:47:21,679 --> 01:47:22,639
um

2726
01:47:22,639 --> 01:47:24,080
i

2727
01:47:24,080 --> 01:47:26,800
don't see anybody in the mic line so

2728
01:47:26,800 --> 01:47:28,960
yeah yeah again i'd encourage you to

2729
01:47:28,960 --> 01:47:31,760
read the draft and please comment to on

2730
01:47:31,760 --> 01:47:32,719
the

2731
01:47:32,719 --> 01:47:35,280
e2ee list

2732
01:47:35,280 --> 01:47:36,480
thanks a lot

2733
01:47:36,480 --> 01:47:37,920
great thanks mary

2734
01:47:37,920 --> 01:47:39,199
and

2735
01:47:39,199 --> 01:47:41,599
aaron

2736
01:47:47,679 --> 01:47:50,960
this is your box oh thank you

2737
01:47:50,960 --> 01:47:53,520
so uh i'll be presenting the

2738
01:47:53,520 --> 01:47:54,960
transparency that is a project that

2739
01:47:54,960 --> 01:47:56,960
we've recently been developing at

2740
01:47:56,960 --> 01:47:59,360
protomail but it's also something that

2741
01:47:59,360 --> 01:48:01,040
in my opinion is very important for the

2742
01:48:01,040 --> 01:48:02,400
whole community

2743
01:48:02,400 --> 01:48:03,199
to

2744
01:48:03,199 --> 01:48:05,600
have an idea uh to propose an

2745
01:48:05,600 --> 01:48:08,880
alternative to like to verify other

2746
01:48:08,880 --> 01:48:12,960
people's keys in an automated way

2747
01:48:15,280 --> 01:48:16,480
so

2748
01:48:16,480 --> 01:48:19,360
the base principle is the fact that when

2749
01:48:19,360 --> 01:48:20,880
you get a key

2750
01:48:20,880 --> 01:48:23,040
this key might not be authentic and

2751
01:48:23,040 --> 01:48:25,040
trusting the user id is not just

2752
01:48:25,040 --> 01:48:26,960
sufficient to know that he belongs to

2753
01:48:26,960 --> 01:48:28,239
someone

2754
01:48:28,239 --> 01:48:29,119
um

2755
01:48:29,119 --> 01:48:32,400
this is especially relevant for wkd

2756
01:48:32,400 --> 01:48:36,320
because wkd servers might uh like serve

2757
01:48:36,320 --> 01:48:39,040
the key and also handle the

2758
01:48:39,040 --> 01:48:41,360
the delivery of the email itself so you

2759
01:48:41,360 --> 01:48:43,600
have a single point of failure or some

2760
01:48:43,600 --> 01:48:46,320
where a malicious actor might inject a

2761
01:48:46,320 --> 01:48:48,400
bad public key read the message and

2762
01:48:48,400 --> 01:48:50,400
silently re-encrypt it to

2763
01:48:50,400 --> 01:48:52,400
the recipient that might not even notice

2764
01:48:52,400 --> 01:48:55,280
that this is happening

2765
01:48:58,239 --> 01:49:00,400
so oh no that's too many slides yeah too

2766
01:49:00,400 --> 01:49:03,199
many clicks i don't spoil the content so

2767
01:49:03,199 --> 01:49:06,480
uh what do we have right now is for is

2768
01:49:06,480 --> 01:49:08,000
mostly um

2769
01:49:08,000 --> 01:49:10,800
either a key signing parties or

2770
01:49:10,800 --> 01:49:11,600
um

2771
01:49:11,600 --> 01:49:14,400
the the web of trust the we have seen

2772
01:49:14,400 --> 01:49:15,679
that this

2773
01:49:15,679 --> 01:49:16,880
has worked

2774
01:49:16,880 --> 01:49:19,280
but this not always works

2775
01:49:19,280 --> 01:49:20,239
so

2776
01:49:20,239 --> 01:49:22,080
we would like to propose an alternative

2777
01:49:22,080 --> 01:49:25,119
or at least to look into an alternative

2778
01:49:25,119 --> 01:49:26,400
that

2779
01:49:26,400 --> 01:49:29,199
allows people to automatically do this

2780
01:49:29,199 --> 01:49:31,679
without any manual intervention

2781
01:49:31,679 --> 01:49:34,400
next slide please

2782
01:49:34,639 --> 01:49:36,960
um what do we do is basically create a

2783
01:49:36,960 --> 01:49:38,159
screenshot

2784
01:49:38,159 --> 01:49:41,119
of the of the various key in a point in

2785
01:49:41,119 --> 01:49:43,520
time and you would basically

2786
01:49:43,520 --> 01:49:46,560
check whether your keys are into the

2787
01:49:46,560 --> 01:49:50,239
screenshot and you and if if you see

2788
01:49:50,239 --> 01:49:52,239
your keys correctly everyone else sees

2789
01:49:52,239 --> 01:49:55,360
your keys correctly this is i mean based

2790
01:49:55,360 --> 01:49:57,520
on to the comics paper that has been

2791
01:49:57,520 --> 01:49:59,440
published in 2014

2792
01:49:59,440 --> 01:50:01,360
and also google's key transparency

2793
01:50:01,360 --> 01:50:04,400
project so it's not nothing let's say

2794
01:50:04,400 --> 01:50:07,040
terribly innovative but it is still a

2795
01:50:07,040 --> 01:50:11,400
good application to open pgp

2796
01:50:12,639 --> 01:50:14,639
so the general principles is the fact

2797
01:50:14,639 --> 01:50:16,159
that

2798
01:50:16,159 --> 01:50:18,800
we return you some information when you

2799
01:50:18,800 --> 01:50:21,040
try to fetch a key

2800
01:50:21,040 --> 01:50:22,560
and

2801
01:50:22,560 --> 01:50:24,960
we return you also um i'd say a revision

2802
01:50:24,960 --> 01:50:26,080
a proof

2803
01:50:26,080 --> 01:50:28,639
and this if everything matches

2804
01:50:28,639 --> 01:50:31,280
then you can use this information to

2805
01:50:31,280 --> 01:50:33,840
verify that what you're getting is what

2806
01:50:33,840 --> 01:50:36,480
everyone else is getting

2807
01:50:36,480 --> 01:50:38,239
there or there is also something needed

2808
01:50:38,239 --> 01:50:41,760
is like uh auditors that verify that we

2809
01:50:41,760 --> 01:50:44,480
um publish consistent ebooks and we

2810
01:50:44,480 --> 01:50:47,199
don't cheat in publishing several uh

2811
01:50:47,199 --> 01:50:49,199
ebooks at the same time like basically

2812
01:50:49,199 --> 01:50:51,440
branching off

2813
01:50:51,440 --> 01:50:53,280
next one so and i just added myself to

2814
01:50:53,280 --> 01:50:55,280
the queue to ask a question uh oh yeah

2815
01:50:55,280 --> 01:50:58,159
in in this slide here who is we

2816
01:50:58,159 --> 01:51:01,199
so as of now it is protomate but the

2817
01:51:01,199 --> 01:51:04,159
idea is the fact that everyone could

2818
01:51:04,159 --> 01:51:06,639
run their own implementation of key

2819
01:51:06,639 --> 01:51:09,840
transparency there could be uh let's say

2820
01:51:09,840 --> 01:51:10,719
um

2821
01:51:10,719 --> 01:51:13,440
any kind of um

2822
01:51:13,440 --> 01:51:14,400
like

2823
01:51:14,400 --> 01:51:16,080
anyone who wants to

2824
01:51:16,080 --> 01:51:18,080
participate into the project might want

2825
01:51:18,080 --> 01:51:20,960
to register their own merkle tree into

2826
01:51:20,960 --> 01:51:23,280
oh it's falling the content okay go

2827
01:51:23,280 --> 01:51:26,239
ahead go ahead go ahead um okay so

2828
01:51:26,239 --> 01:51:28,000
protonmail or somebody similar yeah

2829
01:51:28,000 --> 01:51:30,520
exactly like also i don't know

2830
01:51:30,520 --> 01:51:32,320
keys.openpgp.org might want to do the

2831
01:51:32,320 --> 01:51:35,840
same okay

2832
01:51:36,560 --> 01:51:38,560
and how do we do it is miracle trees

2833
01:51:38,560 --> 01:51:39,760
basically

2834
01:51:39,760 --> 01:51:42,880
this is a compact way to simply ensure

2835
01:51:42,880 --> 01:51:44,320
that

2836
01:51:44,320 --> 01:51:47,119
um users can verify their own path

2837
01:51:47,119 --> 01:51:48,480
without having to

2838
01:51:48,480 --> 01:51:50,719
download the whole tree and

2839
01:51:50,719 --> 01:51:52,639
auditors can verify that the tree is

2840
01:51:52,639 --> 01:51:55,760
consistent across ebooks

2841
01:51:55,760 --> 01:51:58,080
we use the verifiable random functions

2842
01:51:58,080 --> 01:52:00,719
to derive the part of the leaf

2843
01:52:00,719 --> 01:52:01,520
and

2844
01:52:01,520 --> 01:52:04,000
so that you can map a single address to

2845
01:52:04,000 --> 01:52:06,239
a single leaf and we cannot cheat by

2846
01:52:06,239 --> 01:52:07,760
assigning uh

2847
01:52:07,760 --> 01:52:11,440
an address to multiple leaves

2848
01:52:11,679 --> 01:52:13,199
and well

2849
01:52:13,199 --> 01:52:14,320
here we

2850
01:52:14,320 --> 01:52:16,800
this is an idea but there might be the

2851
01:52:16,800 --> 01:52:19,679
fingerprinter that states which key do

2852
01:52:19,679 --> 01:52:23,520
you actually want to use as primary key

2853
01:52:23,520 --> 01:52:25,440
we in our implementation are considering

2854
01:52:25,440 --> 01:52:27,520
using actually not the fingerprint but a

2855
01:52:27,520 --> 01:52:30,239
list of keys because a keyring might be

2856
01:52:30,239 --> 01:52:32,879
more interesting

2857
01:52:34,320 --> 01:52:36,639
so what do the clients need to do is to

2858
01:52:36,639 --> 01:52:39,040
verify that their own path matches to

2859
01:52:39,040 --> 01:52:41,119
their own key so that to ensure that

2860
01:52:41,119 --> 01:52:43,199
everyone is seeing their key

2861
01:52:43,199 --> 01:52:45,280
if the verification fails this should be

2862
01:52:45,280 --> 01:52:46,960
displayed to the user somehow but this

2863
01:52:46,960 --> 01:52:49,440
is also most likely left to the

2864
01:52:49,440 --> 01:52:52,719
to the client implementation

2865
01:52:54,159 --> 01:52:56,960
and the auditors must verify that the

2866
01:52:56,960 --> 01:52:59,440
epoch ids are like consecutive they're

2867
01:52:59,440 --> 01:53:01,520
the chain does not branch

2868
01:53:01,520 --> 01:53:03,840
and via gossiping that

2869
01:53:03,840 --> 01:53:06,880
the chain hashes match so they should

2870
01:53:06,880 --> 01:53:09,599
pretty much ensure that the tree is

2871
01:53:09,599 --> 01:53:12,599
consistent

2872
01:53:14,320 --> 01:53:15,199
okay

2873
01:53:15,199 --> 01:53:18,159
so um

2874
01:53:18,159 --> 01:53:21,679
how does this fit into into open bgp

2875
01:53:21,679 --> 01:53:23,760
it's mostly i think this is uh an

2876
01:53:23,760 --> 01:53:26,960
augmentation of like of wkd it's

2877
01:53:26,960 --> 01:53:28,239
something that

2878
01:53:28,239 --> 01:53:31,119
automatically with wkd could provide us

2879
01:53:31,119 --> 01:53:33,360
a better key safety

2880
01:53:33,360 --> 01:53:34,320
and

2881
01:53:34,320 --> 01:53:36,719
maybe one day could also be integrated

2882
01:53:36,719 --> 01:53:39,840
into keys as as an additional signature

2883
01:53:39,840 --> 01:53:42,320
or additional information saying this

2884
01:53:42,320 --> 01:53:44,880
key is into key transparency at

2885
01:53:44,880 --> 01:53:46,560
keys.openpgp.org

2886
01:53:46,560 --> 01:53:48,480
or some information like this like tls

2887
01:53:48,480 --> 01:53:50,800
is doing with tls certificates that they

2888
01:53:50,800 --> 01:53:52,480
say

2889
01:53:52,480 --> 01:53:55,360
this certificate has been released

2890
01:53:55,360 --> 01:53:58,800
um is there actual question

2891
01:53:58,800 --> 01:54:01,360
uh so we have dkg in the queue and then

2892
01:54:01,360 --> 01:54:02,880
paul

2893
01:54:02,880 --> 01:54:04,960
and then me probably

2894
01:54:04,960 --> 01:54:05,840
uh

2895
01:54:05,840 --> 01:54:09,520
thanks for raising this um it's uh i

2896
01:54:09,520 --> 01:54:12,159
think this is uh interesting work

2897
01:54:12,159 --> 01:54:13,599
um

2898
01:54:13,599 --> 01:54:15,280
i'm curious about your choice of

2899
01:54:15,280 --> 01:54:17,920
fingerprints being at the leaves of the

2900
01:54:17,920 --> 01:54:20,840
tree as opposed to full certificates

2901
01:54:20,840 --> 01:54:23,199
um basically because as we've talked

2902
01:54:23,199 --> 01:54:25,280
about already today the openpg

2903
01:54:25,280 --> 01:54:27,760
certificate format is composable

2904
01:54:27,760 --> 01:54:30,639
and one thing that a malicious wkd

2905
01:54:30,639 --> 01:54:32,960
server could do is serve up the wrong

2906
01:54:32,960 --> 01:54:35,679
combination of packets associated with a

2907
01:54:35,679 --> 01:54:37,520
single public key

2908
01:54:37,520 --> 01:54:41,840
um for example they could serve uh

2909
01:54:42,080 --> 01:54:44,880
say an encryption capable sub key that

2910
01:54:44,880 --> 01:54:47,199
they know has been revoked because it's

2911
01:54:47,199 --> 01:54:49,520
been compromised but not serve the

2912
01:54:49,520 --> 01:54:50,800
self

2913
01:54:50,800 --> 01:54:53,520
the revocation signature

2914
01:54:53,520 --> 01:54:54,800
and this wouldn't

2915
01:54:54,800 --> 01:54:57,360
identify that that particular

2916
01:54:57,360 --> 01:55:00,880
combination is no longer valid right

2917
01:55:00,880 --> 01:55:01,679
so

2918
01:55:01,679 --> 01:55:03,520
in our implementation we actually

2919
01:55:03,520 --> 01:55:06,159
consider this i this was a let's say a

2920
01:55:06,159 --> 01:55:07,520
toy example

2921
01:55:07,520 --> 01:55:09,440
uh where we use the fingerprints but

2922
01:55:09,440 --> 01:55:11,040
actually in the

2923
01:55:11,040 --> 01:55:12,080
in the

2924
01:55:12,080 --> 01:55:14,080
let's say final draft that we're trying

2925
01:55:14,080 --> 01:55:16,960
to implement we do uh have a science

2926
01:55:16,960 --> 01:55:18,639
list where we specify

2927
01:55:18,639 --> 01:55:20,960
also all the sub key fingerprints and

2928
01:55:20,960 --> 01:55:22,239
not just

2929
01:55:22,239 --> 01:55:25,040
um and also the the usage of the keys so

2930
01:55:25,040 --> 01:55:27,760
if a key is revoked or if a key is

2931
01:55:27,760 --> 01:55:28,960
used to be

2932
01:55:28,960 --> 01:55:31,280
encryption only or signature only etc

2933
01:55:31,280 --> 01:55:34,480
etc etc

2934
01:55:34,639 --> 01:55:36,880
so sorry let me

2935
01:55:36,880 --> 01:55:38,719
is this this is a whole new data format

2936
01:55:38,719 --> 01:55:39,520
then

2937
01:55:39,520 --> 01:55:41,119
that you're defining

2938
01:55:41,119 --> 01:55:42,320
is there a reason to do the whole new

2939
01:55:42,320 --> 01:55:43,679
data format

2940
01:55:43,679 --> 01:55:46,239
it's an arbitrary data format as of now

2941
01:55:46,239 --> 01:55:48,960
but i mean as soon as we can get to

2942
01:55:48,960 --> 01:55:52,400
standardization uh let's say um

2943
01:55:52,400 --> 01:55:56,320
as if we can get this into uh an rfc we

2944
01:55:56,320 --> 01:55:58,639
probably won't use our proprietary

2945
01:55:58,639 --> 01:56:01,119
standardization our property is standard

2946
01:56:01,119 --> 01:56:02,560
but we will try to look with the

2947
01:56:02,560 --> 01:56:03,679
community

2948
01:56:03,679 --> 01:56:06,000
what exactly is needed in the different

2949
01:56:06,000 --> 01:56:07,679
use cases

2950
01:56:07,679 --> 01:56:11,760
so the i think the only thing that um

2951
01:56:11,760 --> 01:56:13,199
i mean we already have a standard for

2952
01:56:13,199 --> 01:56:15,040
how certificates look the one thing

2953
01:56:15,040 --> 01:56:16,880
that's missing for your purposes here i

2954
01:56:16,880 --> 01:56:19,040
think would be a canonicalization

2955
01:56:19,040 --> 01:56:21,679
of an existing open pgp certificate

2956
01:56:21,679 --> 01:56:24,560
right a transfer public key form

2957
01:56:24,560 --> 01:56:25,760
or are you thinking that it needs to be

2958
01:56:25,760 --> 01:56:28,080
something else

2959
01:56:28,080 --> 01:56:30,800
yeah i mean at least our specific case

2960
01:56:30,800 --> 01:56:32,960
has also like

2961
01:56:32,960 --> 01:56:35,040
a little bit we need a little bit more

2962
01:56:35,040 --> 01:56:37,360
flexibility so that's why we implemented

2963
01:56:37,360 --> 01:56:39,760
this format but we're willing to let's

2964
01:56:39,760 --> 01:56:42,400
say adapt to what the community then

2965
01:56:42,400 --> 01:56:43,760
requires

2966
01:56:43,760 --> 01:56:44,960
okay i don't i want to get out of the

2967
01:56:44,960 --> 01:56:47,040
queue here but if you could describe at

2968
01:56:47,040 --> 01:56:48,639
some point

2969
01:56:48,639 --> 01:56:50,159
what specific flexibility you need

2970
01:56:50,159 --> 01:56:52,000
that's not in the already too flexible

2971
01:56:52,000 --> 01:56:54,800
open pgp public key format uh that would

2972
01:56:54,800 --> 01:56:56,719
be great because i don't i don't

2973
01:56:56,719 --> 01:56:58,400
understand those differences

2974
01:56:58,400 --> 01:57:01,920
maybe a a stupid example could be um

2975
01:57:01,920 --> 01:57:05,280
we have uh external addresses that are

2976
01:57:05,280 --> 01:57:08,880
not meant for email use

2977
01:57:08,880 --> 01:57:10,880
and we want to specify this directly

2978
01:57:10,880 --> 01:57:13,119
into the miracle tree

2979
01:57:13,119 --> 01:57:16,639
so clearly this could also be uh

2980
01:57:16,639 --> 01:57:18,800
like this can also be set into the key

2981
01:57:18,800 --> 01:57:21,199
flags but the key flags are not

2982
01:57:21,199 --> 01:57:23,520
specifically into the into the miracle

2983
01:57:23,520 --> 01:57:25,280
tree and therefore

2984
01:57:25,280 --> 01:57:26,080
uh

2985
01:57:26,080 --> 01:57:27,920
i don't know whether this uh notation

2986
01:57:27,920 --> 01:57:29,599
would include that information directly

2987
01:57:29,599 --> 01:57:32,400
into the merkle tree

2988
01:57:35,760 --> 01:57:38,960
okay uh paula speaking so my question is

2989
01:57:38,960 --> 01:57:40,719
about so i understand the merkle tree

2990
01:57:40,719 --> 01:57:42,800
and the append only uh properties and

2991
01:57:42,800 --> 01:57:45,119
those are great but who says that the

2992
01:57:45,119 --> 01:57:46,800
latest submission is actually the real

2993
01:57:46,800 --> 01:57:48,800
one like we have a whole spam problem in

2994
01:57:48,800 --> 01:57:51,199
the key servers right now where anyone

2995
01:57:51,199 --> 01:57:52,960
submitting stuff like without

2996
01:57:52,960 --> 01:57:54,560
confirmation

2997
01:57:54,560 --> 01:57:56,400
so how do i know that like the poll that

2998
01:57:56,400 --> 01:57:57,840
knoweth that ca

2999
01:57:57,840 --> 01:58:00,239
last entry in the in the tree is

3000
01:58:00,239 --> 01:58:01,840
actually the real key and not some fake

3001
01:58:01,840 --> 01:58:02,880
key

3002
01:58:02,880 --> 01:58:03,679
so

3003
01:58:03,679 --> 01:58:06,320
first of all this project as a whole

3004
01:58:06,320 --> 01:58:08,000
detect like

3005
01:58:08,000 --> 01:58:10,639
doesn't really prevent someone from

3006
01:58:10,639 --> 01:58:13,520
like faking keys but makes them

3007
01:58:13,520 --> 01:58:16,239
identifiable like makes a problem clear

3008
01:58:16,239 --> 01:58:17,679
like makes a

3009
01:58:17,679 --> 01:58:20,080
like gives accountability

3010
01:58:20,080 --> 01:58:20,960
um

3011
01:58:20,960 --> 01:58:23,760
the fact that the only the people like

3012
01:58:23,760 --> 01:58:27,199
if we use wkd if we bind it to wkd and

3013
01:58:27,199 --> 01:58:29,679
not to the to the key servers

3014
01:58:29,679 --> 01:58:32,000
that would actually give us um

3015
01:58:32,000 --> 01:58:34,800
a lot of let's say flexibility disorder

3016
01:58:34,800 --> 01:58:37,679
in this direction because wkd

3017
01:58:37,679 --> 01:58:39,840
you have already an authority like the

3018
01:58:39,840 --> 01:58:41,599
who owns the domain can choose what goes

3019
01:58:41,599 --> 01:58:43,679
in there not everyone right but so who

3020
01:58:43,679 --> 01:58:46,000
owns the domain is and that that was my

3021
01:58:46,000 --> 01:58:47,599
next question actually

3022
01:58:47,599 --> 01:58:49,760
if you if you link it to the domain then

3023
01:58:49,760 --> 01:58:51,360
you have at least a guarantee that

3024
01:58:51,360 --> 01:58:53,360
whoever controls the domain hopefully is

3025
01:58:53,360 --> 01:58:55,520
also within that domain controlling the

3026
01:58:55,520 --> 01:58:56,400
key

3027
01:58:56,400 --> 01:58:58,400
and you get the right person so if a

3028
01:58:58,400 --> 01:59:00,239
domain is sold to somebody else somebody

3029
01:59:00,239 --> 01:59:02,880
else will run dns and point to another

3030
01:59:02,880 --> 01:59:04,719
wkd

3031
01:59:04,719 --> 01:59:06,719
service where you can get the key of

3032
01:59:06,719 --> 01:59:09,840
course if you do this that

3033
01:59:09,840 --> 01:59:12,800
i'm the author of the open pgp key

3034
01:59:12,800 --> 01:59:15,679
rfc you can also just put it in dns and

3035
01:59:15,679 --> 01:59:18,080
protect it with dns segment you have to

3036
01:59:18,080 --> 01:59:20,880
the same property of having the current

3037
01:59:20,880 --> 01:59:24,159
domain owner clearly owns that key that

3038
01:59:24,159 --> 01:59:26,480
they currently publish and it's valid

3039
01:59:26,480 --> 01:59:28,639
and it is the latest key because that's

3040
01:59:28,639 --> 01:59:30,719
the key they're currently publishing and

3041
01:59:30,719 --> 01:59:32,960
you would avoid these uh at least these

3042
01:59:32,960 --> 01:59:34,480
moral three things and

3043
01:59:34,480 --> 01:59:36,480
having multiple keys

3044
01:59:36,480 --> 01:59:38,880
with wkd i don't like it because it adds

3045
01:59:38,880 --> 01:59:41,760
an additional problem or an additional

3046
01:59:41,760 --> 01:59:43,199
step where

3047
01:59:43,199 --> 01:59:44,880
a web server can be compromised and

3048
01:59:44,880 --> 01:59:47,440
other content can appear

3049
01:59:47,440 --> 01:59:49,920
i mean this also provides the fact that

3050
01:59:49,920 --> 01:59:52,159
this lets you look into the past and see

3051
01:59:52,159 --> 01:59:54,080
if an email in the past was already

3052
01:59:54,080 --> 01:59:56,000
let's say was was faked

3053
01:59:56,000 --> 01:59:58,239
and also would allow you to see if

3054
01:59:58,239 --> 02:00:00,159
someone else has published a key on your

3055
02:00:00,159 --> 02:00:02,080
behalf without you knowing

3056
02:00:02,080 --> 02:00:02,960
like

3057
02:00:02,960 --> 02:00:04,639
like you can audit yourself that's the

3058
02:00:04,639 --> 02:00:06,800
whole point of the of the

3059
02:00:06,800 --> 02:00:08,880
thing is you should audit yourself into

3060
02:00:08,880 --> 02:00:10,719
the miracle tree and spot if there's any

3061
02:00:10,719 --> 02:00:13,280
inconsistency so we're we're kind of

3062
02:00:13,280 --> 02:00:15,679
about time okay

3063
02:00:15,679 --> 02:00:16,719
so

3064
02:00:16,719 --> 02:00:18,560
in fact we are a time

3065
02:00:18,560 --> 02:00:20,320
okay so yeah i guess this is a topic

3066
02:00:20,320 --> 02:00:21,760
that

3067
02:00:21,760 --> 02:00:23,760
ct was interesting there might be a

3068
02:00:23,760 --> 02:00:24,960
useful way of making this work and in

3069
02:00:24,960 --> 02:00:26,080
that case that would be interesting i

3070
02:00:26,080 --> 02:00:26,960
think for

3071
02:00:26,960 --> 02:00:29,440
to you know having a worked out thing

3072
02:00:29,440 --> 02:00:31,199
like this at the time we started talking

3073
02:00:31,199 --> 02:00:33,520
about recharging might be kind of quick

3074
02:00:33,520 --> 02:00:36,159
it's something comfortable yeah great so

3075
02:00:36,159 --> 02:00:38,960
thank you um thanks to aaron and to

3076
02:00:38,960 --> 02:00:42,239
florence's for for taking notes um

3077
02:00:42,239 --> 02:00:45,119
for those of you in the room uh you you

3078
02:00:45,119 --> 02:00:46,560
should hopefully have signed into the

3079
02:00:46,560 --> 02:00:49,280
data tracker and click the on site for

3080
02:00:49,280 --> 02:00:51,199
this thing so that's that's how you sign

3081
02:00:51,199 --> 02:00:52,480
the blue sheet

3082
02:00:52,480 --> 02:00:53,840
so i won't be doing the traditional

3083
02:00:53,840 --> 02:00:55,119
thing of running around the room with

3084
02:00:55,119 --> 02:00:56,639
blue sheets at the end

3085
02:00:56,639 --> 02:00:57,920
as normal

3086
02:00:57,920 --> 02:01:00,239
and with that thanks for coming

3087
02:01:00,239 --> 02:01:02,400
um and we'll

3088
02:01:02,400 --> 02:01:03,760
have some discussion on the main list

3089
02:01:03,760 --> 02:01:05,119
and go from there

3090
02:01:05,119 --> 02:01:06,480
and thanks to all the remote folks for

3091
02:01:06,480 --> 02:01:07,760
turning up as well

3092
02:01:07,760 --> 02:01:09,440
especially if you're in a painful time

3093
02:01:09,440 --> 02:01:11,678
zone

3094
02:01:14,000 --> 02:01:18,040
and i think we're done thank you

3095
02:01:24,480 --> 02:01:27,480
okay

3096
02:01:42,080 --> 02:01:45,080
oh

3097
02:01:54,880 --> 02:01:56,239
one of the nice things about certificate

3098
02:01:56,239 --> 02:01:59,879
transparency is

