1
00:00:27,119 --> 00:00:30,599
i'm not a chair

2
00:00:31,359 --> 00:00:34,880
okay so let's get up here it's uh 10 am

3
00:00:34,880 --> 00:00:37,200
europe time now

4
00:00:37,200 --> 00:00:42,559
so welcome everyone to this hybrid etf

5
00:00:43,360 --> 00:00:46,239
so we will start with our uh

6
00:00:46,239 --> 00:00:49,520
chair slides so jorge is helping us uh

7
00:00:49,520 --> 00:00:53,280
locally on site uh to manage via my cue

8
00:00:53,280 --> 00:00:54,559
in case there are

9
00:00:54,559 --> 00:00:56,320
some comments

10
00:00:56,320 --> 00:01:00,079
so thank you jorge for doing that

11
00:01:04,640 --> 00:01:07,040
this is our not well if you are not

12
00:01:07,040 --> 00:01:08,720
aware about it

13
00:01:08,720 --> 00:01:12,360
please read it

14
00:01:21,200 --> 00:01:23,200
here is our agenda

15
00:01:23,200 --> 00:01:25,360
so for this session it's not fully

16
00:01:25,360 --> 00:01:27,680
packed we have couple of buffer

17
00:01:27,680 --> 00:01:30,479
available for discussion

18
00:01:30,479 --> 00:01:32,799
however we still need to have

19
00:01:32,799 --> 00:01:35,439
the presenter sticking on their

20
00:01:35,439 --> 00:01:38,679
time slot

21
00:01:43,520 --> 00:01:46,560
status updates we have one rfc that has

22
00:01:46,560 --> 00:01:49,600
been published since last itf uh which

23
00:01:49,600 --> 00:01:51,759
is about the operational aspect for

24
00:01:51,759 --> 00:01:53,360
proxier

25
00:01:53,360 --> 00:01:55,920
in evpn environments

26
00:01:55,920 --> 00:01:58,560
we have currently two documents as part

27
00:01:58,560 --> 00:02:02,240
of the rfc editor queue so we have evpn

28
00:02:02,240 --> 00:02:04,240
procedure updates and we have also via

29
00:02:04,240 --> 00:02:05,680
optimized

30
00:02:05,680 --> 00:02:06,840
ingress

31
00:02:06,840 --> 00:02:08,479
replication

32
00:02:08,479 --> 00:02:10,800
we still have bunches of documents that

33
00:02:10,800 --> 00:02:12,319
are either

34
00:02:12,319 --> 00:02:17,519
under hd review or at vm iesg

35
00:02:17,680 --> 00:02:22,560
so i think the igmp mld proxy draft is

36
00:02:22,560 --> 00:02:24,480
quite close to uh

37
00:02:24,480 --> 00:02:26,640
to the end and the distribution are

38
00:02:26,640 --> 00:02:28,959
progressing well

39
00:02:28,959 --> 00:02:31,040
and there are still couple of documents

40
00:02:31,040 --> 00:02:32,640
that have been that haven't been

41
00:02:32,640 --> 00:02:37,238
processed yet by the ad

42
00:02:42,879 --> 00:02:45,280
we have currently four documents

43
00:02:45,280 --> 00:02:48,000
that are under shepherd with you

44
00:02:48,000 --> 00:02:50,560
so on the evpn unequal cost load

45
00:02:50,560 --> 00:02:53,760
balancing we sent a request uh to idr

46
00:02:53,760 --> 00:02:56,480
shares a couple of months back if i'm

47
00:02:56,480 --> 00:02:58,000
not mistaken

48
00:02:58,000 --> 00:03:01,200
uh to get some review uh especially

49
00:03:01,200 --> 00:03:03,440
because there was some

50
00:03:03,440 --> 00:03:06,319
discussion about this um

51
00:03:06,319 --> 00:03:09,360
uh load balancing community uh and so on

52
00:03:09,360 --> 00:03:11,360
so we really need to ensure that we are

53
00:03:11,360 --> 00:03:14,159
that we agree on our on the solution

54
00:03:14,159 --> 00:03:15,680
so it will be good to have the feedback

55
00:03:15,680 --> 00:03:19,280
from uh or at least via agreement of idr

56
00:03:19,280 --> 00:03:22,000
shares in this one

57
00:03:24,000 --> 00:03:27,360
evp and fxe and mhpa

58
00:03:27,360 --> 00:03:28,720
i have

59
00:03:28,720 --> 00:03:31,599
provided a review to the offers

60
00:03:31,599 --> 00:03:33,440
i know that some documents have been

61
00:03:33,440 --> 00:03:34,640
updated

62
00:03:34,640 --> 00:03:36,640
so i just need to uh to read the updated

63
00:03:36,640 --> 00:03:38,720
version again to check that all the

64
00:03:38,720 --> 00:03:41,840
comments have been addressed

65
00:03:42,480 --> 00:03:44,560
and i think matthew correct me if i'm

66
00:03:44,560 --> 00:03:45,840
wrong but

67
00:03:45,840 --> 00:03:48,959
evp and lsping is almost ready to go

68
00:03:48,959 --> 00:03:52,879
yeah i gave that place from request

69
00:03:52,959 --> 00:03:55,519
last week

70
00:03:55,920 --> 00:03:57,200
okay thank you for everyone who worked

71
00:03:57,200 --> 00:04:00,280
the map

72
00:04:03,280 --> 00:04:05,200
we have currently product two documents

73
00:04:05,200 --> 00:04:07,120
that are ready for working replace call

74
00:04:07,120 --> 00:04:09,439
we have the evpn resident uh multicast

75
00:04:09,439 --> 00:04:13,680
source and we have here uh bgps1

76
00:04:13,680 --> 00:04:17,439
document from from linda as well

77
00:04:20,959 --> 00:04:22,720
we have one working group last call

78
00:04:22,720 --> 00:04:24,560
which is still in progress

79
00:04:24,560 --> 00:04:26,720
mainly because we are missing

80
00:04:26,720 --> 00:04:28,800
ipr call replies

81
00:04:28,800 --> 00:04:30,880
so this is for the evp and fast df

82
00:04:30,880 --> 00:04:32,960
recovery

83
00:04:32,960 --> 00:04:36,320
so offers please reply to the iphone so

84
00:04:36,320 --> 00:04:40,440
we can move forward with the draft

85
00:04:44,320 --> 00:04:45,520
uh

86
00:04:45,520 --> 00:04:48,560
we did the last call for the evpn

87
00:04:48,560 --> 00:04:51,600
emultioning split horizon document

88
00:04:51,600 --> 00:04:54,000
again on this one we are still missing

89
00:04:54,000 --> 00:04:56,080
uh some ipr for

90
00:04:56,080 --> 00:04:58,880
feedback from co-opers

91
00:04:58,880 --> 00:05:00,960
so of course please reply to the ipr

92
00:05:00,960 --> 00:05:02,800
poll and there are also couple of

93
00:05:02,800 --> 00:05:04,560
comments that have been provided by the

94
00:05:04,560 --> 00:05:07,280
working group and that offers need to

95
00:05:07,280 --> 00:05:10,280
address

96
00:05:10,720 --> 00:05:13,840
so maybe jorge i think you are um

97
00:05:13,840 --> 00:05:15,759
i think you are managing this document

98
00:05:15,759 --> 00:05:18,080
correct

99
00:05:18,720 --> 00:05:22,240
uh yeah should we publish a new version

100
00:05:22,240 --> 00:05:24,400
addressing the comments

101
00:05:24,400 --> 00:05:25,919
yes that will be good so we can then

102
00:05:25,919 --> 00:05:27,680
move forward

103
00:05:27,680 --> 00:05:32,280
okay we'll do that thanks

104
00:05:41,600 --> 00:05:44,960
okay working group uh document update so

105
00:05:44,960 --> 00:05:46,960
we will not go through through all the

106
00:05:46,960 --> 00:05:49,120
draft a few things that i wanted to

107
00:05:49,120 --> 00:05:50,240
highlight

108
00:05:50,240 --> 00:05:54,000
so on the draft itf best bgp multicast

109
00:05:54,000 --> 00:05:55,600
controller

110
00:05:55,600 --> 00:05:58,639
there may be some overlap with some idea

111
00:05:58,639 --> 00:06:00,400
work on the

112
00:06:00,400 --> 00:06:03,198
p2mp

113
00:06:03,280 --> 00:06:06,400
segment routing policies so we need to

114
00:06:06,400 --> 00:06:07,840
work with the

115
00:06:07,840 --> 00:06:10,720
idea chairs and the co-founders of all

116
00:06:10,720 --> 00:06:14,160
drafts to see how we are

117
00:06:14,160 --> 00:06:17,840
how we manage both documents

118
00:06:18,880 --> 00:06:22,400
evpn genius i think we still uh

119
00:06:22,400 --> 00:06:24,479
we still wait for the first tour to

120
00:06:24,479 --> 00:06:26,000
update the draft

121
00:06:26,000 --> 00:06:27,680
uh to be able to move the document

122
00:06:27,680 --> 00:06:30,160
forward

123
00:06:31,759 --> 00:06:36,400
and what else on the evp and bfd we are

124
00:06:36,400 --> 00:06:38,319
also still waiting for the offers to

125
00:06:38,319 --> 00:06:41,520
refresh the draft so we are expecting to

126
00:06:41,520 --> 00:06:43,440
send the document to the bfd working

127
00:06:43,440 --> 00:06:45,520
group for review

128
00:06:45,520 --> 00:06:47,280
but we need the draft to be uh to be

129
00:06:47,280 --> 00:06:48,560
refreshed

130
00:06:48,560 --> 00:06:50,960
before we do that

131
00:06:50,960 --> 00:06:53,840
i see a comment

132
00:06:53,919 --> 00:06:56,000
yeah there is a comment in the room uh

133
00:06:56,000 --> 00:06:57,360
okay

134
00:06:57,360 --> 00:07:01,039
yes samia this is for the evpn geneve i

135
00:07:01,039 --> 00:07:03,440
believe we updated the draft and upload

136
00:07:03,440 --> 00:07:06,000
uploaded the version three so were there

137
00:07:06,000 --> 00:07:09,280
other comments after that

138
00:07:09,759 --> 00:07:12,960
we we can check again but uh i i think

139
00:07:12,960 --> 00:07:15,759
there was still some comments after the

140
00:07:15,759 --> 00:07:17,440
last version that have that has been

141
00:07:17,440 --> 00:07:19,440
published so if you can cross check on

142
00:07:19,440 --> 00:07:21,199
your side and confirm that everything

143
00:07:21,199 --> 00:07:22,400
has been

144
00:07:22,400 --> 00:07:24,560
updated then we can probably move

145
00:07:24,560 --> 00:07:26,240
forward okay

146
00:07:26,240 --> 00:07:27,919
okay so the comments will be on the list

147
00:07:27,919 --> 00:07:30,560
right okay yes you should be able to

148
00:07:30,560 --> 00:07:32,479
find them in the archive

149
00:07:32,479 --> 00:07:34,240
okay thank you

150
00:07:34,240 --> 00:07:36,720
we also have a bit of a

151
00:07:36,720 --> 00:07:38,319
dependency issue i think between this

152
00:07:38,319 --> 00:07:39,599
and the

153
00:07:39,599 --> 00:07:42,639
the geneve drafting uh the uv vpn

154
00:07:42,639 --> 00:07:45,520
drafting um

155
00:07:45,520 --> 00:07:47,599
in mvo3 which was kind of small due to

156
00:07:47,599 --> 00:07:48,879
lack of

157
00:07:48,879 --> 00:07:51,520
lack of review

158
00:07:51,520 --> 00:07:53,039
oh okay

159
00:07:53,039 --> 00:07:55,919
i i saw geneve uh already done right so

160
00:07:55,919 --> 00:07:57,840
it's not done yet in

161
00:07:57,840 --> 00:07:59,680
no it's not done because we didn't get

162
00:07:59,680 --> 00:08:01,280
any comments on it we need to get more

163
00:08:01,280 --> 00:08:04,000
review on it uh it's very quiet over

164
00:08:04,000 --> 00:08:06,080
there

165
00:08:06,080 --> 00:08:07,280
okay

166
00:08:07,280 --> 00:08:08,560
thanks

167
00:08:08,560 --> 00:08:10,639
geneva's done sorry just to clarify

168
00:08:10,639 --> 00:08:12,479
geneva's done but it's the applicability

169
00:08:12,479 --> 00:08:15,520
of evpn to geneve

170
00:08:15,520 --> 00:08:18,639
i think okay

171
00:08:21,199 --> 00:08:22,400
okay

172
00:08:22,400 --> 00:08:24,560
so we can probably move to the

173
00:08:24,560 --> 00:08:27,039
presentation so i think jorge you are

174
00:08:27,039 --> 00:08:29,280
the first presenter

175
00:08:29,280 --> 00:08:32,240
yeah i also had a question about the

176
00:08:32,240 --> 00:08:36,240
evp and ipvpn uh interworking draft

177
00:08:36,240 --> 00:08:37,519
so we

178
00:08:37,519 --> 00:08:40,479
the the trap is going to expire soon so

179
00:08:40,479 --> 00:08:43,039
we we plan to refresh it and uh add uh

180
00:08:43,039 --> 00:08:45,600
some minor changes that we discussed uh

181
00:08:45,600 --> 00:08:47,360
among the authors

182
00:08:47,360 --> 00:08:50,880
and once we do that um

183
00:08:50,880 --> 00:08:52,800
do we have any uh

184
00:08:52,800 --> 00:08:55,519
any dating in mind for that discussion

185
00:08:55,519 --> 00:08:58,800
with the idr chairs happening or

186
00:08:58,800 --> 00:09:00,720
i think the discussion already happened

187
00:09:00,720 --> 00:09:03,680
but we are still waiting for feedback

188
00:09:03,680 --> 00:09:05,839
from the idr chairs unfortunately for a

189
00:09:05,839 --> 00:09:07,040
long time

190
00:09:07,040 --> 00:09:09,440
okay so i know that sue already provided

191
00:09:09,440 --> 00:09:10,720
some comments

192
00:09:10,720 --> 00:09:13,120
but i haven't really seen some reply

193
00:09:13,120 --> 00:09:14,720
from you

194
00:09:14,720 --> 00:09:17,040
but i think jeff wanted also to uh to

195
00:09:17,040 --> 00:09:18,160
have a look

196
00:09:18,160 --> 00:09:20,000
at the draft

197
00:09:20,000 --> 00:09:21,360
there was a

198
00:09:21,360 --> 00:09:23,680
what i remember there was an email

199
00:09:23,680 --> 00:09:27,200
from sue i replied with um

200
00:09:27,200 --> 00:09:29,279
with my comments

201
00:09:29,279 --> 00:09:31,519
and that's all i remember

202
00:09:31,519 --> 00:09:33,279
okay

203
00:09:33,279 --> 00:09:36,160
so there's a comment here from keur yes

204
00:09:36,160 --> 00:09:39,120
patel arcus and i'm one of the idr

205
00:09:39,120 --> 00:09:41,040
chairs so stefan i will make sure we

206
00:09:41,040 --> 00:09:43,200
will take it back to the idr

207
00:09:43,200 --> 00:09:44,959
uh and the chairs will

208
00:09:44,959 --> 00:09:47,440
i will poke uh chairs and get you the

209
00:09:47,440 --> 00:09:48,800
feedback yeah

210
00:09:48,800 --> 00:09:50,880
yeah because there was a couple of

211
00:09:50,880 --> 00:09:52,800
really important points that we need to

212
00:09:52,800 --> 00:09:55,279
uh to clarify in terms of our

213
00:09:55,279 --> 00:09:57,040
internal process because the document

214
00:09:57,040 --> 00:09:59,680
for instance if i remember correctly is

215
00:09:59,680 --> 00:10:02,399
defining for rules uh some rules about

216
00:10:02,399 --> 00:10:04,399
aggregation of

217
00:10:04,399 --> 00:10:06,480
of some attributes and so on but moving

218
00:10:06,480 --> 00:10:08,399
forward we really need to ensure that we

219
00:10:08,399 --> 00:10:10,640
have the right process because for each

220
00:10:10,640 --> 00:10:13,200
new attribute which is defined

221
00:10:13,200 --> 00:10:15,040
there is a requirement to define what

222
00:10:15,040 --> 00:10:18,480
are the aggregation rules

223
00:10:18,480 --> 00:10:20,800
thanks

224
00:10:26,079 --> 00:10:27,040
okay

225
00:10:27,040 --> 00:10:29,040
any other comment on the chair slide

226
00:10:29,040 --> 00:10:33,079
before we move to the presentations

227
00:10:38,160 --> 00:10:39,279
okay

228
00:10:39,279 --> 00:10:41,440
so jorge you can

229
00:10:41,440 --> 00:10:45,360
go ahead let me pop up your slides

230
00:10:45,440 --> 00:10:47,839
okay

231
00:10:51,040 --> 00:10:52,959
so good morning everyone my name is

232
00:10:52,959 --> 00:10:55,440
jorge rabalam i'm presenting this

233
00:10:55,440 --> 00:10:59,519
draft about evpn vpws gateway solution

234
00:10:59,519 --> 00:11:02,240
on behalf of my authors

235
00:11:02,240 --> 00:11:04,560
next night please

236
00:11:04,560 --> 00:11:06,640
so we are going to talk about uh three

237
00:11:06,640 --> 00:11:09,440
things here so um following pretty much

238
00:11:09,440 --> 00:11:11,839
the the outline of the draft so the

239
00:11:11,839 --> 00:11:14,720
first part is we'll talk a little bit

240
00:11:14,720 --> 00:11:18,720
about what evpn vpws interconnect is

241
00:11:18,720 --> 00:11:20,880
and why we are talking about service

242
00:11:20,880 --> 00:11:23,360
interworking or service gateway

243
00:11:23,360 --> 00:11:25,839
service gateway solution in this draft

244
00:11:25,839 --> 00:11:28,240
then we'll briefly talk about the

245
00:11:28,240 --> 00:11:30,240
extensions that we are defining in the

246
00:11:30,240 --> 00:11:33,519
draft that's what we call the evpn vpws

247
00:11:33,519 --> 00:11:35,120
gateway procedures

248
00:11:35,120 --> 00:11:38,399
and then next steps

249
00:11:38,880 --> 00:11:41,440
next slide please yeah

250
00:11:41,440 --> 00:11:44,320
so what are we talking about here so

251
00:11:44,320 --> 00:11:45,760
this is

252
00:11:45,760 --> 00:11:48,079
this is a draft about uh how to

253
00:11:48,079 --> 00:11:51,600
interconnect evpn vpws services or in

254
00:11:51,600 --> 00:11:55,920
other words how to have an evpn vpws

255
00:11:55,920 --> 00:11:58,880
expan spanning multiple domains

256
00:11:58,880 --> 00:12:01,760
where each domain can be an igp instance

257
00:12:01,760 --> 00:12:04,480
or an autonomous system

258
00:12:04,480 --> 00:12:06,399
and uh typically

259
00:12:06,399 --> 00:12:08,560
this is for high scale

260
00:12:08,560 --> 00:12:10,720
as i said multi-domain networks

261
00:12:10,720 --> 00:12:12,639
and each domain can actually have a

262
00:12:12,639 --> 00:12:15,200
different transport technology mpls

263
00:12:15,200 --> 00:12:17,600
vxlan segment routing v6 or segment

264
00:12:17,600 --> 00:12:19,360
routing mpls

265
00:12:19,360 --> 00:12:21,839
what we also want to do is optimize all

266
00:12:21,839 --> 00:12:24,079
the evpn multi-homing procedures

267
00:12:24,079 --> 00:12:26,480
including mass withdrawal

268
00:12:26,480 --> 00:12:27,360
and

269
00:12:27,360 --> 00:12:29,360
if needed we want to provide the

270
00:12:29,360 --> 00:12:32,240
solution able to provide translation of

271
00:12:32,240 --> 00:12:35,279
rds rts ethernet tags and layer 2

272
00:12:35,279 --> 00:12:39,040
capabilities on the border routers

273
00:12:39,040 --> 00:12:40,880
so looking at the all the different

274
00:12:40,880 --> 00:12:44,639
options that we have for evp mvpws into

275
00:12:44,639 --> 00:12:45,760
domain

276
00:12:45,760 --> 00:12:47,680
we in the draft we classify the

277
00:12:47,680 --> 00:12:49,920
solutions in three groups so the first

278
00:12:49,920 --> 00:12:51,519
group is what we call the service

279
00:12:51,519 --> 00:12:53,440
interworking solution

280
00:12:53,440 --> 00:12:54,240
or

281
00:12:54,240 --> 00:12:56,639
service gateway solution the second

282
00:12:56,639 --> 00:12:58,720
group is what we call the inter domain

283
00:12:58,720 --> 00:13:00,560
option b solution

284
00:13:00,560 --> 00:13:02,079
and the third one is what we call the

285
00:13:02,079 --> 00:13:04,160
transport interworking solution

286
00:13:04,160 --> 00:13:07,800
so next slide please

287
00:13:07,920 --> 00:13:09,760
so the three solutions are illustrated

288
00:13:09,760 --> 00:13:12,079
here in this slide so the uh the first

289
00:13:12,079 --> 00:13:13,040
one

290
00:13:13,040 --> 00:13:15,200
is the service interworking solution in

291
00:13:15,200 --> 00:13:17,440
the example you have three domains and

292
00:13:17,440 --> 00:13:19,440
two border routers connecting those

293
00:13:19,440 --> 00:13:21,680
domains so in this solution basically we

294
00:13:21,680 --> 00:13:23,760
instantiate a vpws

295
00:13:23,760 --> 00:13:26,079
service on the border routers

296
00:13:26,079 --> 00:13:27,120
the

297
00:13:27,120 --> 00:13:30,560
80 per evi route for the evpn vpws

298
00:13:30,560 --> 00:13:34,320
service is advertised from the igrisbe

299
00:13:34,320 --> 00:13:36,959
it's uh imported and processed by the

300
00:13:36,959 --> 00:13:38,639
border router 2

301
00:13:38,639 --> 00:13:41,440
and basically the the route is distribu

302
00:13:41,440 --> 00:13:45,279
redistributed into the domain 2.

303
00:13:45,279 --> 00:13:48,160
with the same or different rds rds and

304
00:13:48,160 --> 00:13:50,480
tags and also encapsulation same thing

305
00:13:50,480 --> 00:13:53,519
would happen with border router one

306
00:13:53,519 --> 00:13:55,600
in obviously this is in one direction

307
00:13:55,600 --> 00:13:58,320
the other direction we will have a

308
00:13:58,320 --> 00:14:00,320
similar solution

309
00:14:00,320 --> 00:14:02,800
so in the second group

310
00:14:02,800 --> 00:14:05,600
of what we call the option b solution

311
00:14:05,600 --> 00:14:08,720
there is no instantiation of the vpws

312
00:14:08,720 --> 00:14:10,639
service on the border routers but we

313
00:14:10,639 --> 00:14:12,480
have a typical

314
00:14:12,480 --> 00:14:14,480
model b

315
00:14:14,480 --> 00:14:16,480
on the on the border routers and what

316
00:14:16,480 --> 00:14:18,320
that means is that the border routers

317
00:14:18,320 --> 00:14:19,120
will

318
00:14:19,120 --> 00:14:20,240
import

319
00:14:20,240 --> 00:14:23,680
the 80 variva routes we'll program

320
00:14:23,680 --> 00:14:25,199
a swap

321
00:14:25,199 --> 00:14:26,639
operation

322
00:14:26,639 --> 00:14:28,720
on the labels and they will re-advertise

323
00:14:28,720 --> 00:14:31,760
the routes with nextup self and also

324
00:14:31,760 --> 00:14:34,480
modifying the uh the label

325
00:14:34,480 --> 00:14:36,800
this would be the case this is a typical

326
00:14:36,800 --> 00:14:38,639
case with mpls but that would be also

327
00:14:38,639 --> 00:14:42,720
the case uh if you have a vxlan dni

328
00:14:42,720 --> 00:14:46,320
or even potentially a service x as well

329
00:14:46,320 --> 00:14:48,880
the third group is the the one at the

330
00:14:48,880 --> 00:14:51,279
bottom and what we

331
00:14:51,279 --> 00:14:54,160
call the transport interworking solution

332
00:14:54,160 --> 00:14:57,120
in this case uh you may notice that the

333
00:14:57,120 --> 00:14:59,839
the route the 80 preview route

334
00:14:59,839 --> 00:15:01,920
issued by the eagus p

335
00:15:01,920 --> 00:15:04,639
goes all the way up to the ingress p

336
00:15:04,639 --> 00:15:06,880
that route is not processed by the

337
00:15:06,880 --> 00:15:08,720
border routers

338
00:15:08,720 --> 00:15:11,040
you can obviously have a control plane

339
00:15:11,040 --> 00:15:13,120
route reflectors in between

340
00:15:13,120 --> 00:15:15,040
but the there is no inline route

341
00:15:15,040 --> 00:15:17,199
reflectors uh processing the the routes

342
00:15:17,199 --> 00:15:19,519
or doing any any swap operation with the

343
00:15:19,519 --> 00:15:21,360
with the labels

344
00:15:21,360 --> 00:15:23,839
and in this case if the domains uh they

345
00:15:23,839 --> 00:15:25,519
have different encapsulations like in

346
00:15:25,519 --> 00:15:26,880
the example

347
00:15:26,880 --> 00:15:29,360
the only rule is that obviously

348
00:15:29,360 --> 00:15:31,519
since there is no border router in in

349
00:15:31,519 --> 00:15:32,959
the middle

350
00:15:32,959 --> 00:15:35,759
processing the the route the egress p

351
00:15:35,759 --> 00:15:38,079
and the ingress p they must have the

352
00:15:38,079 --> 00:15:40,639
same encapsulation

353
00:15:40,639 --> 00:15:43,440
next slide please

354
00:15:46,079 --> 00:15:49,360
so in the draft what we are doing is

355
00:15:49,360 --> 00:15:52,000
basically we describe the three groups

356
00:15:52,000 --> 00:15:54,639
and what we are saying is that the three

357
00:15:54,639 --> 00:15:57,600
solutions are perfectly valid

358
00:15:57,600 --> 00:15:58,320
but

359
00:15:58,320 --> 00:16:01,759
if you have uh the requirements that we

360
00:16:01,759 --> 00:16:04,000
represent here in the table

361
00:16:04,000 --> 00:16:05,759
the service interworking solution is

362
00:16:05,759 --> 00:16:07,600
probably the uh

363
00:16:07,600 --> 00:16:09,279
the ideal one

364
00:16:09,279 --> 00:16:11,440
and those requirements are for instance

365
00:16:11,440 --> 00:16:14,000
if you want to have per domain evpn

366
00:16:14,000 --> 00:16:16,880
multi-homing capabilities of per domain

367
00:16:16,880 --> 00:16:18,320
must withdraw

368
00:16:18,320 --> 00:16:21,360
or you want to to provide the ability to

369
00:16:21,360 --> 00:16:22,800
translate

370
00:16:22,800 --> 00:16:27,120
rds rts tags or l2 attributes

371
00:16:27,120 --> 00:16:28,480
the service interworking would be the

372
00:16:28,480 --> 00:16:29,920
ideal solution

373
00:16:29,920 --> 00:16:32,720
also the solution handles heterogeneous

374
00:16:32,720 --> 00:16:34,639
encapsulations in different domains

375
00:16:34,639 --> 00:16:35,440
right

376
00:16:35,440 --> 00:16:38,160
and you could even have evpn level

377
00:16:38,160 --> 00:16:41,279
service oem

378
00:16:41,279 --> 00:16:44,079
next slide please

379
00:16:45,120 --> 00:16:46,079
so

380
00:16:46,079 --> 00:16:48,000
based on that

381
00:16:48,000 --> 00:16:49,680
basically we are extending the

382
00:16:49,680 --> 00:16:52,720
procedures in evpn vpws to handle this

383
00:16:52,720 --> 00:16:55,920
uh inter-domain scenario

384
00:16:55,920 --> 00:16:57,120
this is uh

385
00:16:57,120 --> 00:16:59,279
the service gateway concept is already

386
00:16:59,279 --> 00:17:03,759
defined in rfc 9014 for evpn multi-point

387
00:17:03,759 --> 00:17:06,480
this is pretty much

388
00:17:06,480 --> 00:17:08,319
extending the procedures for evp and

389
00:17:08,319 --> 00:17:10,720
vpws routes

390
00:17:10,720 --> 00:17:12,880
and all the procedures in the draft they

391
00:17:12,880 --> 00:17:15,520
refer to what we call redistribution and

392
00:17:15,520 --> 00:17:19,119
redistribution here means

393
00:17:19,119 --> 00:17:21,839
all the procedures that involve three

394
00:17:21,839 --> 00:17:22,799
things

395
00:17:22,799 --> 00:17:24,480
so the first thing is the reception and

396
00:17:24,480 --> 00:17:26,880
process of the evpn route that is coming

397
00:17:26,880 --> 00:17:28,880
from the source domain

398
00:17:28,880 --> 00:17:30,799
the second one is the programming of the

399
00:17:30,799 --> 00:17:33,320
forwarding path and the third one is the

400
00:17:33,320 --> 00:17:35,600
re-advertisement of the route to a

401
00:17:35,600 --> 00:17:37,039
different domain

402
00:17:37,039 --> 00:17:38,880
which is what we call the next

403
00:17:38,880 --> 00:17:40,960
destination domain

404
00:17:40,960 --> 00:17:42,720
so the for the first one the reception

405
00:17:42,720 --> 00:17:44,799
and process of the

406
00:17:44,799 --> 00:17:49,200
routes basically we follow the rfc 8214

407
00:17:49,200 --> 00:17:52,240
and we extend that with the uh d-path

408
00:17:52,240 --> 00:17:55,200
that we we use in this type of scenarios

409
00:17:55,200 --> 00:17:58,640
for uh loop prevention and also for uh

410
00:17:58,640 --> 00:18:00,880
best path selection

411
00:18:00,880 --> 00:18:03,120
the the forwarding state programming is

412
00:18:03,120 --> 00:18:05,600
basically we receive a route um we

413
00:18:05,600 --> 00:18:08,480
program the uh the received uh label or

414
00:18:08,480 --> 00:18:10,000
vni or sed

415
00:18:10,000 --> 00:18:12,640
we allocate a new label vni or set and

416
00:18:12,640 --> 00:18:14,960
we re-advertise that and we program this

417
00:18:14,960 --> 00:18:17,840
a switching operation between the two

418
00:18:17,840 --> 00:18:19,120
and the third part is the

419
00:18:19,120 --> 00:18:21,200
re-advertisement of the routes

420
00:18:21,200 --> 00:18:23,120
so in the draft there are certain rules

421
00:18:23,120 --> 00:18:25,280
that you need to comply with

422
00:18:25,280 --> 00:18:26,799
uh usually you will when you

423
00:18:26,799 --> 00:18:28,480
re-advertise you use different route

424
00:18:28,480 --> 00:18:30,320
distinguishers to provide enough

425
00:18:30,320 --> 00:18:32,559
diversity in the in the in within the

426
00:18:32,559 --> 00:18:33,600
domain

427
00:18:33,600 --> 00:18:35,039
you can use the same or different route

428
00:18:35,039 --> 00:18:37,760
targets and and ether tags

429
00:18:37,760 --> 00:18:40,799
we use esi zero unless you define an

430
00:18:40,799 --> 00:18:42,720
interconnect ethernet segment as we will

431
00:18:42,720 --> 00:18:44,559
see in the next slide

432
00:18:44,559 --> 00:18:46,720
you can regenerate the layer 2

433
00:18:46,720 --> 00:18:48,720
attributes which includes the control

434
00:18:48,720 --> 00:18:51,679
word signaling the flow label and also

435
00:18:51,679 --> 00:18:53,280
the mtu

436
00:18:53,280 --> 00:18:55,679
the p and the b flags that we use for

437
00:18:55,679 --> 00:18:57,840
multi-homing are not propagated but they

438
00:18:57,840 --> 00:18:59,919
are regenerated based on the

439
00:18:59,919 --> 00:19:02,960
interconnect ethernet segment state

440
00:19:02,960 --> 00:19:04,320
and we

441
00:19:04,320 --> 00:19:06,160
yeah we also describe some other rules

442
00:19:06,160 --> 00:19:08,400
like the propagation of communities and

443
00:19:08,400 --> 00:19:09,760
also how

444
00:19:09,760 --> 00:19:12,640
you update the d-path attribute

445
00:19:12,640 --> 00:19:15,440
next slide please

446
00:19:16,240 --> 00:19:18,480
so for redundancy of the service gateway

447
00:19:18,480 --> 00:19:21,120
there are two solutions described in the

448
00:19:21,120 --> 00:19:23,440
the draft solution number one is called

449
00:19:23,440 --> 00:19:24,960
anycast gateways

450
00:19:24,960 --> 00:19:27,600
and it's a very simple solution

451
00:19:27,600 --> 00:19:29,760
so here the idea is when we received the

452
00:19:29,760 --> 00:19:32,320
routes from the egress p in this example

453
00:19:32,320 --> 00:19:35,039
in domain three

454
00:19:35,039 --> 00:19:37,200
that route is imported by the border

455
00:19:37,200 --> 00:19:40,080
routers or those service gateways 21 and

456
00:19:40,080 --> 00:19:41,280
22

457
00:19:41,280 --> 00:19:43,440
and they are redistributed in the into

458
00:19:43,440 --> 00:19:45,200
the domain too with

459
00:19:45,200 --> 00:19:46,480
the same

460
00:19:46,480 --> 00:19:48,880
ethernet tag identifier

461
00:19:48,880 --> 00:19:51,600
so the border routers 11 and

462
00:19:51,600 --> 00:19:54,080
i should say 12 at the bottom

463
00:19:54,080 --> 00:19:55,840
uh basically they they do best pass

464
00:19:55,840 --> 00:19:57,760
selection and they pick up one of the of

465
00:19:57,760 --> 00:19:58,960
the two

466
00:19:58,960 --> 00:20:01,760
and uh they re-advertise or redistribute

467
00:20:01,760 --> 00:20:04,000
the the route into the main one with the

468
00:20:04,000 --> 00:20:06,400
same ethernet tag as well

469
00:20:06,400 --> 00:20:08,240
so this is a very simple solution there

470
00:20:08,240 --> 00:20:10,159
are no ethernet segments

471
00:20:10,159 --> 00:20:13,760
i configured here or or created

472
00:20:13,760 --> 00:20:16,559
but basically we provide a

473
00:20:16,559 --> 00:20:18,320
path based on the best path selection

474
00:20:18,320 --> 00:20:19,360
there is no

475
00:20:19,360 --> 00:20:21,120
on a per flow

476
00:20:21,120 --> 00:20:23,120
basis load balancing or anything like

477
00:20:23,120 --> 00:20:24,159
that

478
00:20:24,159 --> 00:20:26,159
the other solution which is a bit more

479
00:20:26,159 --> 00:20:28,880
sophisticated is uh is what we call the

480
00:20:28,880 --> 00:20:31,039
vpn full evpn multi-homing with the

481
00:20:31,039 --> 00:20:32,799
interconnected ethernet segment the

482
00:20:32,799 --> 00:20:34,080
interconnect ethernet segment is

483
00:20:34,080 --> 00:20:35,760
something that we defined in the rfc

484
00:20:35,760 --> 00:20:40,320
9014 only now extended for evpn vpws

485
00:20:40,320 --> 00:20:42,559
and this is a full ethernet segment

486
00:20:42,559 --> 00:20:43,600
construct

487
00:20:43,600 --> 00:20:46,320
so basically you can define all active

488
00:20:46,320 --> 00:20:48,960
or single active multi-homing you have

489
00:20:48,960 --> 00:20:51,200
properties like a mass withdrawal

490
00:20:51,200 --> 00:20:54,080
aliasing backup and it's all happening

491
00:20:54,080 --> 00:20:56,799
within the uh the context of the domain

492
00:20:56,799 --> 00:20:58,799
so the ad per es routes are not

493
00:20:58,799 --> 00:21:01,280
propagated they are consumed within the

494
00:21:01,280 --> 00:21:04,720
domain by the service gateways

495
00:21:04,720 --> 00:21:06,960
so and uh and this is the more powerful

496
00:21:06,960 --> 00:21:09,440
solution providing uh on a per you know

497
00:21:09,440 --> 00:21:11,840
on per flow load balancing if you want

498
00:21:11,840 --> 00:21:13,679
it for all active

499
00:21:13,679 --> 00:21:16,799
next slide please

500
00:21:16,799 --> 00:21:19,200
so next steps for this draft is

501
00:21:19,200 --> 00:21:22,080
basically we are uh seeking for feedback

502
00:21:22,080 --> 00:21:23,760
from the working group and

503
00:21:23,760 --> 00:21:26,080
and uh yeah we wanted to hear if this is

504
00:21:26,080 --> 00:21:27,280
uh

505
00:21:27,280 --> 00:21:29,600
useful and uh and eventually we'll

506
00:21:29,600 --> 00:21:33,039
request a working group adoption

507
00:21:33,039 --> 00:21:36,320
any comments or questions

508
00:21:39,039 --> 00:21:40,640
yeah there's a comment here in the in

509
00:21:40,640 --> 00:21:42,400
the room

510
00:21:42,400 --> 00:21:45,360
yes i hi himanshu from siena

511
00:21:45,360 --> 00:21:46,559
um

512
00:21:46,559 --> 00:21:49,760
is this the service gateways

513
00:21:49,760 --> 00:21:52,159
based on the vpws

514
00:21:52,159 --> 00:21:53,440
uh

515
00:21:53,440 --> 00:21:56,880
l2 vpn survival switching

516
00:21:56,880 --> 00:22:00,000
type almost the same concepts right

517
00:22:00,000 --> 00:22:02,000
it's a service gateway solution for evpn

518
00:22:02,000 --> 00:22:05,600
vpws yeah

519
00:22:05,679 --> 00:22:08,799
why not call it that way

520
00:22:08,880 --> 00:22:10,640
it's called uh

521
00:22:10,640 --> 00:22:13,520
eppm vp vpws gateway yeah

522
00:22:13,520 --> 00:22:16,400
yeah because i think the

523
00:22:16,400 --> 00:22:18,559
in the past when i

524
00:22:18,559 --> 00:22:20,799
was doing something and i called service

525
00:22:20,799 --> 00:22:22,480
interworking

526
00:22:22,480 --> 00:22:25,039
i got a lot of pushback from the group

527
00:22:25,039 --> 00:22:27,440
that you cannot define you cannot do

528
00:22:27,440 --> 00:22:28,960
service interworking

529
00:22:28,960 --> 00:22:30,720
in the itf

530
00:22:30,720 --> 00:22:32,720
in those days it was like atm frame

531
00:22:32,720 --> 00:22:34,559
relay type of thing and

532
00:22:34,559 --> 00:22:37,039
ip service interworking was not

533
00:22:37,039 --> 00:22:41,200
something that is standard for itf so i

534
00:22:41,200 --> 00:22:43,280
had to change my drafts and all that

535
00:22:43,280 --> 00:22:45,840
other stuff yeah but i

536
00:22:45,840 --> 00:22:47,760
i don't understand the question in the

537
00:22:47,760 --> 00:22:49,520
sense that this is pure

538
00:22:49,520 --> 00:22:52,240
it's full evpn vpws and end-to-end right

539
00:22:52,240 --> 00:22:55,760
so the it is it is and it is

540
00:22:55,760 --> 00:22:58,640
it is uh i think i i i feel this is

541
00:22:58,640 --> 00:23:01,200
similar to the surah wire switching and

542
00:23:01,200 --> 00:23:03,039
multi-segment pseudo wire

543
00:23:03,039 --> 00:23:04,799
right um

544
00:23:04,799 --> 00:23:07,799
the

545
00:23:08,640 --> 00:23:11,120
maybe you want to change the

546
00:23:11,120 --> 00:23:14,320
i mean it's up to you but

547
00:23:14,320 --> 00:23:18,559
the service interworking aspects is

548
00:23:18,559 --> 00:23:21,520
problematic for itf

549
00:23:21,520 --> 00:23:23,120
in the past i don't know maybe things

550
00:23:23,120 --> 00:23:24,400
have changed now

551
00:23:24,400 --> 00:23:25,760
okay so you're saying the service

552
00:23:25,760 --> 00:23:29,039
interworking term uh means something

553
00:23:29,039 --> 00:23:31,600
else that uh in the past created some

554
00:23:31,600 --> 00:23:33,200
yeah yeah

555
00:23:33,200 --> 00:23:34,640
i mean we can we can change the

556
00:23:34,640 --> 00:23:36,400
terminology here

557
00:23:36,400 --> 00:23:38,799
but we already did service interworking

558
00:23:38,799 --> 00:23:41,520
for instance between evpn and it and so

559
00:23:41,520 --> 00:23:43,120
i don't really see what is the issue

560
00:23:43,120 --> 00:23:43,840
here

561
00:23:43,840 --> 00:23:45,840
um i think the issue is that there are

562
00:23:45,840 --> 00:23:48,000
different services

563
00:23:48,000 --> 00:23:50,080
service interworking is matching

564
00:23:50,080 --> 00:23:52,240
typically one service to another service

565
00:23:52,240 --> 00:23:54,159
whereas this is

566
00:23:54,159 --> 00:23:55,679
doing

567
00:23:55,679 --> 00:23:57,120
this this is kind of slightly different

568
00:23:57,120 --> 00:24:00,400
because it is still a vpn end to end

569
00:24:00,400 --> 00:24:02,159
yeah

570
00:24:02,159 --> 00:24:04,559
it is evpn end to end yes

571
00:24:04,559 --> 00:24:05,760
exactly

572
00:24:05,760 --> 00:24:06,880
okay

573
00:24:06,880 --> 00:24:08,960
okay let's move towards to the other

574
00:24:08,960 --> 00:24:12,480
question laura you had a question

575
00:24:16,400 --> 00:24:19,559
go ahead

576
00:24:30,159 --> 00:24:33,679
i saw the slide that you have

577
00:24:33,679 --> 00:24:36,240
on top now and that is requesting

578
00:24:36,240 --> 00:24:38,720
feedback so i didn't bother that much

579
00:24:38,720 --> 00:24:39,520
but

580
00:24:39,520 --> 00:24:42,400
now i kind of heard you saying that it's

581
00:24:42,400 --> 00:24:45,679
almost ready for work group adoption

582
00:24:45,679 --> 00:24:48,000
i think you should hold this

583
00:24:48,000 --> 00:24:51,039
off a bit yes because it was listed as

584
00:24:51,039 --> 00:24:52,159
an

585
00:24:52,159 --> 00:24:54,960
other document

586
00:24:56,960 --> 00:24:58,880
sorry it was hard for me to to

587
00:24:58,880 --> 00:24:59,919
understand

588
00:24:59,919 --> 00:25:01,840
they comment this

589
00:25:01,840 --> 00:25:05,520
the comment is that on the agenda

590
00:25:05,520 --> 00:25:08,400
this document has another name

591
00:25:08,400 --> 00:25:10,720
sure so there are quite a number of

592
00:25:10,720 --> 00:25:13,360
people that hasn't been able to prepare

593
00:25:13,360 --> 00:25:15,600
the meeting

594
00:25:15,600 --> 00:25:16,720
and

595
00:25:16,720 --> 00:25:19,919
if you're only requesting more feedback

596
00:25:19,919 --> 00:25:21,520
i think it's fine

597
00:25:21,520 --> 00:25:25,360
but if you're saying that this is

598
00:25:25,360 --> 00:25:28,080
ready for working group adoption then i

599
00:25:28,080 --> 00:25:31,200
think you should hold that off a bit

600
00:25:31,200 --> 00:25:32,880
and allow us to actually read the

601
00:25:32,880 --> 00:25:34,559
document

602
00:25:34,559 --> 00:25:36,720
uh within youth

603
00:25:36,720 --> 00:25:39,679
with new file names

604
00:25:39,679 --> 00:25:43,760
sure and yeah i yeah my apologies again

605
00:25:43,760 --> 00:25:46,159
because we we changed the um

606
00:25:46,159 --> 00:25:48,000
uh the name of the draft at the very

607
00:25:48,000 --> 00:25:50,159
last minute before posting the draft and

608
00:25:50,159 --> 00:25:50,880
uh

609
00:25:50,880 --> 00:25:54,320
yeah i forgot to to update the chairs so

610
00:25:54,320 --> 00:25:56,240
that that's why it was it was not the

611
00:25:56,240 --> 00:25:58,400
right name on the agenda

612
00:25:58,400 --> 00:26:00,799
and uh yeah we're not uh requesting for

613
00:26:00,799 --> 00:26:02,720
working group adoption yet i mean this

614
00:26:02,720 --> 00:26:04,640
is draft zero zero so for the moment

615
00:26:04,640 --> 00:26:06,080
it's just feedback

616
00:26:06,080 --> 00:26:08,640
i i said that eventually we will request

617
00:26:08,640 --> 00:26:11,039
a working group adoption but not at this

618
00:26:11,039 --> 00:26:12,799
stage so yeah

619
00:26:12,799 --> 00:26:14,559
absolutely that's fine

620
00:26:14,559 --> 00:26:16,799
yeah people will have time to review of

621
00:26:16,799 --> 00:26:18,080
course

622
00:26:18,080 --> 00:26:21,760
okay jeffrey really quickly

623
00:26:21,760 --> 00:26:23,840
very quickly jeffrey

624
00:26:23,840 --> 00:26:25,919
so i noticed

625
00:26:25,919 --> 00:26:28,559
the route distinguisher rewrite

626
00:26:28,559 --> 00:26:31,360
which is often a problem because it

627
00:26:31,360 --> 00:26:33,520
causes routes to

628
00:26:33,520 --> 00:26:35,840
potentially uh play themselves across

629
00:26:35,840 --> 00:26:38,399
the beams

630
00:26:44,640 --> 00:26:47,520
against sorry it's hard for me to

631
00:26:47,520 --> 00:26:48,640
to

632
00:26:48,640 --> 00:26:50,000
catch it so

633
00:26:50,000 --> 00:26:52,559
the question is whether this is for l2

634
00:26:52,559 --> 00:26:54,240
services

635
00:26:54,240 --> 00:26:56,799
the question is route distinguisher

636
00:26:56,799 --> 00:26:58,159
rewrites

637
00:26:58,159 --> 00:27:02,159
do any other best documents do it

638
00:27:03,520 --> 00:27:05,279
i mean what we are saying here is that

639
00:27:05,279 --> 00:27:07,360
we recommend the uh the road

640
00:27:07,360 --> 00:27:10,720
distinguisher rewrite yeah

641
00:27:10,720 --> 00:27:13,120
okay because that is giving you a

642
00:27:13,120 --> 00:27:14,880
pad diversity

643
00:27:14,880 --> 00:27:17,600
across domains right

644
00:27:17,600 --> 00:27:21,840
it's problematic you'll and mail

645
00:27:22,399 --> 00:27:24,880
okay and we we should discuss in the

646
00:27:24,880 --> 00:27:26,799
list

647
00:27:26,799 --> 00:27:29,120
okay

648
00:27:29,279 --> 00:27:31,520
okay let's move to your representation

649
00:27:31,520 --> 00:27:32,480
actually

650
00:27:32,480 --> 00:27:34,799
you

651
00:27:36,720 --> 00:27:38,880
yeah okay

652
00:27:38,880 --> 00:27:41,360
this draft is uh was already presented

653
00:27:41,360 --> 00:27:45,440
in last ietf is a revision01

654
00:27:45,440 --> 00:27:46,559
it's called the

655
00:27:46,559 --> 00:27:49,919
domain path for ethernet vpn so we'll

656
00:27:49,919 --> 00:27:51,440
talk about a

657
00:27:51,440 --> 00:27:53,200
short refresh what's new in the draft

658
00:27:53,200 --> 00:27:54,799
the next steps

659
00:27:54,799 --> 00:27:56,720
so next slide please

660
00:27:56,720 --> 00:27:58,880
yeah domain path is defined in this evpn

661
00:27:58,880 --> 00:28:01,520
ipvpn interworking draft

662
00:28:01,520 --> 00:28:03,440
and that graph is is used for layer

663
00:28:03,440 --> 00:28:08,240
three routes meaning uh ipvpn pc

664
00:28:08,240 --> 00:28:11,679
and pgp routes uh and um

665
00:28:11,679 --> 00:28:14,159
you know 40 vpn routes 35 and routes

666
00:28:14,159 --> 00:28:18,240
type 2 in the symmetric irb model

667
00:28:18,240 --> 00:28:20,880
and uh yeah this this trap is basically

668
00:28:20,880 --> 00:28:23,679
modified by service gateways along the

669
00:28:23,679 --> 00:28:26,159
way and is used for control plane loop

670
00:28:26,159 --> 00:28:28,799
protection and best path selection

671
00:28:28,799 --> 00:28:31,200
yeah there are some procedures

672
00:28:31,200 --> 00:28:34,320
related to it so next slide

673
00:28:34,320 --> 00:28:36,320
so in this draft basically what we are

674
00:28:36,320 --> 00:28:37,840
doing is

675
00:28:37,840 --> 00:28:40,320
extending the use of the path

676
00:28:40,320 --> 00:28:42,960
also for evpn routes that are not used

677
00:28:42,960 --> 00:28:46,399
for layer 3 but also for the rest of the

678
00:28:46,399 --> 00:28:48,159
capabilities

679
00:28:48,159 --> 00:28:51,440
so uh and just like in the uh evp and

680
00:28:51,440 --> 00:28:54,159
ipvp and interworking draft this is used

681
00:28:54,159 --> 00:28:57,440
for loop protection on the gateways

682
00:28:57,440 --> 00:29:00,480
and also provides traceability and best

683
00:29:00,480 --> 00:29:03,919
path selection on the receiving piece

684
00:29:03,919 --> 00:29:06,720
next slide please

685
00:29:08,480 --> 00:29:11,279
so what is new in this revision so there

686
00:29:11,279 --> 00:29:13,840
are new authors added

687
00:29:13,840 --> 00:29:16,000
malika patrice and wen

688
00:29:16,000 --> 00:29:17,440
and their contributions are now

689
00:29:17,440 --> 00:29:19,600
incorporated to the draft

690
00:29:19,600 --> 00:29:21,679
so you will notice section one has

691
00:29:21,679 --> 00:29:24,559
changed now it includes the

692
00:29:24,559 --> 00:29:26,799
use cases that are justifying the use of

693
00:29:26,799 --> 00:29:29,760
d-path in this uh these environments

694
00:29:29,760 --> 00:29:32,799
we clarify the terminology we did a

695
00:29:32,799 --> 00:29:35,279
general cleanup and also we are making

696
00:29:35,279 --> 00:29:37,760
some changes in the specification itself

697
00:29:37,760 --> 00:29:39,200
which is in

698
00:29:39,200 --> 00:29:40,880
section 4.

699
00:29:40,880 --> 00:29:43,279
in particular we now allow the d-path to

700
00:29:43,279 --> 00:29:45,840
be used also for imet routes or evpn

701
00:29:45,840 --> 00:29:47,919
routes type 3.

702
00:29:47,919 --> 00:29:48,720
and

703
00:29:48,720 --> 00:29:51,039
as such we are also explaining why we

704
00:29:51,039 --> 00:29:53,360
are using the path for imet routes

705
00:29:53,360 --> 00:29:55,600
we are also including some modification

706
00:29:55,600 --> 00:29:58,720
of the use of d-pad for mac ip routes

707
00:29:58,720 --> 00:30:01,520
next slide please

708
00:30:03,120 --> 00:30:05,279
so in particular for the

709
00:30:05,279 --> 00:30:07,919
mac ip advertisement routes if you are

710
00:30:07,919 --> 00:30:12,960
in an rfc 9014 gateway type of scenario

711
00:30:12,960 --> 00:30:15,440
the d-path is used if you look at the

712
00:30:15,440 --> 00:30:18,480
left-hand side of your slide

713
00:30:18,480 --> 00:30:21,440
p1 advertises a mac ip route that is

714
00:30:21,440 --> 00:30:23,520
imported by the gateways gateway 1 and

715
00:30:23,520 --> 00:30:24,480
2.

716
00:30:24,480 --> 00:30:26,159
so for instance when gateway 2

717
00:30:26,159 --> 00:30:30,000
re-advertises that route into domain 2

718
00:30:30,000 --> 00:30:32,799
it basically slaps the d-path with the

719
00:30:32,799 --> 00:30:36,080
domain 1 identifier that is received by

720
00:30:36,080 --> 00:30:38,159
gateway 1 and

721
00:30:38,159 --> 00:30:41,840
identified as a looped route

722
00:30:41,840 --> 00:30:44,399
so what we are doing uh in this revision

723
00:30:44,399 --> 00:30:47,120
is we we allow

724
00:30:47,120 --> 00:30:50,240
to actually install that looped route as

725
00:30:50,240 --> 00:30:51,919
long as there are no other routes

726
00:30:51,919 --> 00:30:54,000
available in the router a typical

727
00:30:54,000 --> 00:30:55,679
example would be what you have on the

728
00:30:55,679 --> 00:30:56,960
right hand side of the slide in the

729
00:30:56,960 --> 00:30:57,919
diagram

730
00:30:57,919 --> 00:31:00,000
so if gateway 1

731
00:31:00,000 --> 00:31:00,960
loses

732
00:31:00,960 --> 00:31:02,240
its

733
00:31:02,240 --> 00:31:04,320
peer to the route reflector in domain

734
00:31:04,320 --> 00:31:06,960
one for instance the uh obviously the

735
00:31:06,960 --> 00:31:09,679
the mac ip route received directly from

736
00:31:09,679 --> 00:31:11,279
p1 is actually

737
00:31:11,279 --> 00:31:12,240
lost

738
00:31:12,240 --> 00:31:14,000
and in that case the the route that is

739
00:31:14,000 --> 00:31:17,600
received from gateway 2 can be installed

740
00:31:17,600 --> 00:31:19,840
and in this case is used for

741
00:31:19,840 --> 00:31:21,760
fast convergence

742
00:31:21,760 --> 00:31:23,600
you know for in flight packets and you

743
00:31:23,600 --> 00:31:26,000
know it can help in that sense so that's

744
00:31:26,000 --> 00:31:29,279
why i included we included this case

745
00:31:29,279 --> 00:31:32,000
next slide

746
00:31:32,000 --> 00:31:35,360
so we identified also some cases where

747
00:31:35,360 --> 00:31:38,080
um you know the the two gateways that

748
00:31:38,080 --> 00:31:40,640
are stitching um domain one to domain

749
00:31:40,640 --> 00:31:41,679
two

750
00:31:41,679 --> 00:31:45,360
they uh they advertise in uh rfc 9014

751
00:31:45,360 --> 00:31:47,279
they advertise i met routes for the two

752
00:31:47,279 --> 00:31:51,279
domains and we want to avoid parallel

753
00:31:51,279 --> 00:31:53,919
evpn paths for bump traffic between the

754
00:31:53,919 --> 00:31:55,919
two in case you have local attachment

755
00:31:55,919 --> 00:31:58,559
circuits on the on the two gateways

756
00:31:58,559 --> 00:32:00,240
and one way to differentiate those

757
00:32:00,240 --> 00:32:02,320
routes and and pick up

758
00:32:02,320 --> 00:32:05,440
only one and and and have only one um

759
00:32:05,440 --> 00:32:06,799
bomb path

760
00:32:06,799 --> 00:32:09,279
is to actually use the path right

761
00:32:09,279 --> 00:32:11,840
if we add the path uh with the local

762
00:32:11,840 --> 00:32:14,080
domain to the gateways on the imed

763
00:32:14,080 --> 00:32:15,679
routes that are

764
00:32:15,679 --> 00:32:17,760
advertised for domain two we can

765
00:32:17,760 --> 00:32:20,080
identify those and not install those and

766
00:32:20,080 --> 00:32:21,840
we only install the ones for the main

767
00:32:21,840 --> 00:32:23,440
one

768
00:32:23,440 --> 00:32:26,240
next slide please

769
00:32:26,880 --> 00:32:30,159
so next steps um so there is a section

770
00:32:30,159 --> 00:32:31,919
in the draft that talks about uh best

771
00:32:31,919 --> 00:32:35,279
path selection for the vpn routes

772
00:32:35,279 --> 00:32:38,240
but we basically discussed and we we

773
00:32:38,240 --> 00:32:40,960
think that section should be clarified

774
00:32:40,960 --> 00:32:42,000
in

775
00:32:42,000 --> 00:32:45,840
in the rfc 7432-bis draft

776
00:32:45,840 --> 00:32:48,320
and this document should just refer to

777
00:32:48,320 --> 00:32:50,399
that section and modify that section

778
00:32:50,399 --> 00:32:52,799
with the new addition of the d-path for

779
00:32:52,799 --> 00:32:54,559
the evpn routes

780
00:32:54,559 --> 00:32:57,600
so we'll make those changes um and we'll

781
00:32:57,600 --> 00:32:59,679
synchronize those changes with the uh

782
00:32:59,679 --> 00:33:02,399
the rfc 7432 based draft

783
00:33:02,399 --> 00:33:04,880
and after that uh yeah we want to

784
00:33:04,880 --> 00:33:06,640
receive more feedback from the working

785
00:33:06,640 --> 00:33:07,600
group

786
00:33:07,600 --> 00:33:09,039
and uh

787
00:33:09,039 --> 00:33:11,440
and after that the draft we think will

788
00:33:11,440 --> 00:33:15,200
be ready for working group adoption

789
00:33:16,159 --> 00:33:20,919
and uh that's it any comments

790
00:33:26,080 --> 00:33:27,279
no comment

791
00:33:27,279 --> 00:33:28,799
so i think we can make the next

792
00:33:28,799 --> 00:33:31,600
presentation

793
00:33:32,159 --> 00:33:35,039
okay this one is a short update

794
00:33:35,039 --> 00:33:38,000
so is the ip aliasing draft version zero

795
00:33:38,000 --> 00:33:39,360
four

796
00:33:39,360 --> 00:33:42,158
next slide please

797
00:33:43,039 --> 00:33:44,799
so changes in revision four there is a

798
00:33:44,799 --> 00:33:48,000
new author uh lucas uh based on the the

799
00:33:48,000 --> 00:33:50,320
use cases that um

800
00:33:50,320 --> 00:33:51,600
he brought up

801
00:33:51,600 --> 00:33:53,840
for the draft and actually we included

802
00:33:53,840 --> 00:33:55,279
one of those

803
00:33:55,279 --> 00:33:57,440
use cases that we call centralized

804
00:33:57,440 --> 00:33:58,880
routing model

805
00:33:58,880 --> 00:34:01,679
other minor changes general cleanup of

806
00:34:01,679 --> 00:34:04,159
fixed type of fixing and references

807
00:34:04,159 --> 00:34:05,279
updated

808
00:34:05,279 --> 00:34:07,840
next slide

809
00:34:07,840 --> 00:34:10,800
please yeah so this centralized routing

810
00:34:10,800 --> 00:34:14,159
model is uh described now in the draft

811
00:34:14,159 --> 00:34:16,320
basically what this is about is

812
00:34:16,320 --> 00:34:18,320
if you have this um

813
00:34:18,320 --> 00:34:20,480
an environment where you use the

814
00:34:20,480 --> 00:34:24,000
ip aliasing procedures or these layer 3

815
00:34:24,000 --> 00:34:26,719
ethernet segments

816
00:34:26,719 --> 00:34:28,800
what we want is in some cases we have

817
00:34:28,800 --> 00:34:32,320
some cnfs or vnfs and that are attached

818
00:34:32,320 --> 00:34:33,040
to

819
00:34:33,040 --> 00:34:35,599
the vpn layer 3 network

820
00:34:35,599 --> 00:34:38,639
and those cnfs or vnfs

821
00:34:38,639 --> 00:34:40,879
we want to simplify the configuration on

822
00:34:40,879 --> 00:34:42,960
and the operation so the

823
00:34:42,960 --> 00:34:45,359
basically instead of having a direct

824
00:34:45,359 --> 00:34:47,918
ebgp pc

825
00:34:47,918 --> 00:34:50,560
session to the directly connected

826
00:34:50,560 --> 00:34:51,599
leaf

827
00:34:51,599 --> 00:34:53,839
what we want is to have a appear to a

828
00:34:53,839 --> 00:34:55,918
centralized leave

829
00:34:55,918 --> 00:34:58,880
in this diagram we call it pec

830
00:34:58,880 --> 00:35:00,800
as in centralized

831
00:35:00,800 --> 00:35:03,680
and all the cnfs and vnfs will have this

832
00:35:03,680 --> 00:35:06,640
bgp session to the centralized uh leaf

833
00:35:06,640 --> 00:35:07,599
right

834
00:35:07,599 --> 00:35:09,520
so in this diagram we are only uh

835
00:35:09,520 --> 00:35:10,960
illustrating the

836
00:35:10,960 --> 00:35:13,119
the procedures for one of them you you

837
00:35:13,119 --> 00:35:16,720
see the cnf uh it has an epgp pc session

838
00:35:16,720 --> 00:35:18,320
to pec

839
00:35:18,320 --> 00:35:20,880
to a loop back in the ip verve

840
00:35:20,880 --> 00:35:22,480
and through that session is a

841
00:35:22,480 --> 00:35:24,000
advertising uh

842
00:35:24,000 --> 00:35:27,280
for instance the subnet 50.0 24 with

843
00:35:27,280 --> 00:35:29,920
next stop 10.1 which is the dip of the

844
00:35:29,920 --> 00:35:31,520
cnf

845
00:35:31,520 --> 00:35:33,280
the centralized

846
00:35:33,280 --> 00:35:34,160
leaf

847
00:35:34,160 --> 00:35:35,839
basically imports that route and it's

848
00:35:35,839 --> 00:35:38,400
going to re-advertise the route i5 with

849
00:35:38,400 --> 00:35:41,440
the nextup pc

850
00:35:41,440 --> 00:35:43,040
and that will be imported by the rest of

851
00:35:43,040 --> 00:35:46,320
the leaves attached to the ipv verse

852
00:35:46,320 --> 00:35:48,800
so if we didn't do anything special the

853
00:35:48,800 --> 00:35:51,200
traffic coming from h4

854
00:35:51,200 --> 00:35:54,720
for uh for to a host in that subnet

855
00:35:54,720 --> 00:35:56,160
basically will

856
00:35:56,160 --> 00:35:59,119
with trombone through pc and then to the

857
00:35:59,119 --> 00:36:02,880
uh directly attached uh leaves p1 or p2

858
00:36:02,880 --> 00:36:04,880
so what we want here is to avoid that

859
00:36:04,880 --> 00:36:07,359
tromboning and that is what the

860
00:36:07,359 --> 00:36:09,680
this layer three ethernet segments uh

861
00:36:09,680 --> 00:36:10,880
provide

862
00:36:10,880 --> 00:36:13,119
so we defined this a new ethernet

863
00:36:13,119 --> 00:36:17,040
segment construct on p1 p2 and pc

864
00:36:17,040 --> 00:36:20,320
however pec will not advertise the 80

865
00:36:20,320 --> 00:36:21,920
per eva routes

866
00:36:21,920 --> 00:36:23,119
because the

867
00:36:23,119 --> 00:36:24,480
you know the

868
00:36:24,480 --> 00:36:27,960
the cnf loopback is not known through a

869
00:36:27,960 --> 00:36:30,320
non-evpn route

870
00:36:30,320 --> 00:36:32,640
but p1 and p2 will advertise the 80 per

871
00:36:32,640 --> 00:36:35,599
va routes so p3 actually resolves the

872
00:36:35,599 --> 00:36:37,359
prefix to

873
00:36:37,359 --> 00:36:40,000
the owners of the 80 per eva routes and

874
00:36:40,000 --> 00:36:40,960
can do

875
00:36:40,960 --> 00:36:43,520
load balancing to pa1 and p2 and not

876
00:36:43,520 --> 00:36:46,240
send the traffic to pec

877
00:36:46,240 --> 00:36:47,599
so that is the use case that we

878
00:36:47,599 --> 00:36:48,720
introduced

879
00:36:48,720 --> 00:36:51,760
next slide please

880
00:36:51,760 --> 00:36:53,119
and basically

881
00:36:53,119 --> 00:36:54,800
yeah we've been presenting this draft

882
00:36:54,800 --> 00:36:57,200
for a while so we really think it's a

883
00:36:57,200 --> 00:36:59,599
very useful draft with use cases and

884
00:36:59,599 --> 00:37:02,160
implementation so we really want to ask

885
00:37:02,160 --> 00:37:05,960
for working group adoption

886
00:37:09,200 --> 00:37:11,759
any comment

887
00:37:13,280 --> 00:37:15,520
okay there's no one in here

888
00:37:15,520 --> 00:37:16,880
okay

889
00:37:16,880 --> 00:37:19,359
thank you thank you all right

890
00:37:19,359 --> 00:37:22,598
next speaker

891
00:37:43,839 --> 00:37:45,200
few months back

892
00:37:45,200 --> 00:37:46,960
and we are not able to present it in

893
00:37:46,960 --> 00:37:47,920
your

894
00:37:47,920 --> 00:37:50,960
last ietf forum can you move to the next

895
00:37:50,960 --> 00:37:53,359
slide please so this is uh

896
00:37:53,359 --> 00:37:54,400
so

897
00:37:54,400 --> 00:37:57,440
this is regarding a use case

898
00:37:57,440 --> 00:38:00,560
which we have encountered uh

899
00:38:00,560 --> 00:38:02,240
in one of our

900
00:38:02,240 --> 00:38:06,320
i mean uh we came across this use case

901
00:38:06,320 --> 00:38:09,359
in one of our customers deployment so

902
00:38:09,359 --> 00:38:11,599
we thought of taking this up

903
00:38:11,599 --> 00:38:13,440
in the

904
00:38:13,440 --> 00:38:15,839
in the best forum before uh

905
00:38:15,839 --> 00:38:17,920
writing this together putting putting up

906
00:38:17,920 --> 00:38:19,119
this together

907
00:38:19,119 --> 00:38:21,119
and there were few discussions where a

908
00:38:21,119 --> 00:38:22,960
few of

909
00:38:22,960 --> 00:38:25,599
the best members have responded back

910
00:38:25,599 --> 00:38:28,560
this is more of implementation

911
00:38:28,560 --> 00:38:31,119
requisite but

912
00:38:31,119 --> 00:38:33,280
uh we thought it was otherwise we can

913
00:38:33,280 --> 00:38:36,320
solve it in a generic way via a control

914
00:38:36,320 --> 00:38:38,000
plane based solution

915
00:38:38,000 --> 00:38:40,960
um so that's where we are so the agenda

916
00:38:40,960 --> 00:38:42,800
here is again the introduction the

917
00:38:42,800 --> 00:38:44,720
problem statement and the use case which

918
00:38:44,720 --> 00:38:47,440
is tied to it the solution

919
00:38:47,440 --> 00:38:50,480
and then how this control pin extension

920
00:38:50,480 --> 00:38:53,280
is backward compatible or otherwise

921
00:38:53,280 --> 00:38:57,040
please next slide so next slide please

922
00:38:58,560 --> 00:39:00,640
essentially this was a case of active

923
00:39:00,640 --> 00:39:02,560
active firewall deployment

924
00:39:02,560 --> 00:39:04,720
wherein you have the same physical

925
00:39:04,720 --> 00:39:07,839
device with a virtual credential

926
00:39:07,839 --> 00:39:10,400
and it's placed on the same ethernet

927
00:39:10,400 --> 00:39:14,560
segment but in let's say a different

928
00:39:14,560 --> 00:39:17,280
fabric which is

929
00:39:17,280 --> 00:39:20,079
connected over van or let's say over

930
00:39:20,079 --> 00:39:23,440
over a dci it can be a typical

931
00:39:23,440 --> 00:39:25,680
envio fabric which i don't want to use

932
00:39:25,680 --> 00:39:27,359
the word engineer but

933
00:39:27,359 --> 00:39:30,000
just for an overlay reference

934
00:39:30,000 --> 00:39:32,560
which can be deployed via

935
00:39:32,560 --> 00:39:34,960
evpn control plane or supported by iev

936
00:39:34,960 --> 00:39:37,040
pin control right that's the reason i

937
00:39:37,040 --> 00:39:39,920
mentioned it here so

938
00:39:39,920 --> 00:39:42,960
it's about the active active firewalls

939
00:39:42,960 --> 00:39:45,920
where two instances of

940
00:39:45,920 --> 00:39:47,680
the same wire

941
00:39:47,680 --> 00:39:49,599
firewall which are carrying the same

942
00:39:49,599 --> 00:39:52,800
virtual credentials are active instances

943
00:39:52,800 --> 00:39:55,040
but they serve their local site

944
00:39:55,040 --> 00:39:57,200
they don't talk to each other per se or

945
00:39:57,200 --> 00:39:58,240
or

946
00:39:58,240 --> 00:40:01,520
we would want it to be a

947
00:40:01,520 --> 00:40:03,119
not as in a

948
00:40:03,119 --> 00:40:05,200
load balance kind of dealing it has to

949
00:40:05,200 --> 00:40:07,520
be preferred in such a way where the

950
00:40:07,520 --> 00:40:08,880
local

951
00:40:08,880 --> 00:40:10,880
deployment serves the

952
00:40:10,880 --> 00:40:12,240
requisite

953
00:40:12,240 --> 00:40:15,118
next slide piece

954
00:40:16,720 --> 00:40:19,280
this is what i was referring to

955
00:40:19,280 --> 00:40:20,079
where

956
00:40:20,079 --> 00:40:21,280
the

957
00:40:21,280 --> 00:40:24,800
bricks are the firewalls and assume that

958
00:40:24,800 --> 00:40:27,839
this is a these are two

959
00:40:27,839 --> 00:40:30,400
evpn based fabrics one on the left

960
00:40:30,400 --> 00:40:32,240
another on on the right side one and

961
00:40:32,240 --> 00:40:33,760
side two

962
00:40:33,760 --> 00:40:36,880
and the firewalls here which are hooked

963
00:40:36,880 --> 00:40:38,800
to the which are also hosting the

964
00:40:38,800 --> 00:40:40,079
gateway

965
00:40:40,079 --> 00:40:40,960
are

966
00:40:40,960 --> 00:40:44,240
uh hosted by the border league um

967
00:40:44,240 --> 00:40:46,720
that's just just a sample topology it

968
00:40:46,720 --> 00:40:48,079
can uh

969
00:40:48,079 --> 00:40:49,599
definitely

970
00:40:49,599 --> 00:40:52,400
differ from this one

971
00:40:52,400 --> 00:40:54,960
so essentially all the local host

972
00:40:54,960 --> 00:40:56,400
on the site

973
00:40:56,400 --> 00:40:58,240
should be targeting

974
00:40:58,240 --> 00:41:00,400
their packets or

975
00:41:00,400 --> 00:41:02,319
any control plane requisite like app

976
00:41:02,319 --> 00:41:04,720
response and request for the gateway

977
00:41:04,720 --> 00:41:06,880
should be redirected towards the local

978
00:41:06,880 --> 00:41:09,359
firewall and any bomb traffic person

979
00:41:09,359 --> 00:41:11,280
including the app request

980
00:41:11,280 --> 00:41:12,720
should

981
00:41:12,720 --> 00:41:14,240
be dealt

982
00:41:14,240 --> 00:41:16,720
locally by both the firewalls by both

983
00:41:16,720 --> 00:41:19,040
the border meters which are stationed

984
00:41:19,040 --> 00:41:20,720
across two different sites and part of

985
00:41:20,720 --> 00:41:21,920
the same

986
00:41:21,920 --> 00:41:24,720
evpn extension network right

987
00:41:24,720 --> 00:41:26,959
so

988
00:41:27,599 --> 00:41:31,119
yeah so this is uh both firewalls are

989
00:41:31,119 --> 00:41:34,079
hooked to the same ethernet segment

990
00:41:34,079 --> 00:41:36,960
though carrying the same um

991
00:41:36,960 --> 00:41:40,319
potential same virtual mac ip for

992
00:41:40,319 --> 00:41:41,440
example

993
00:41:41,440 --> 00:41:43,280
and but they are

994
00:41:43,280 --> 00:41:46,160
uh two separate physical devices per se

995
00:41:46,160 --> 00:41:48,079
which may or may not have an orthogonal

996
00:41:48,079 --> 00:41:50,079
way of talking to each other maintaining

997
00:41:50,079 --> 00:41:53,440
states that's oblivious here

998
00:41:53,440 --> 00:41:54,319
and

999
00:41:54,319 --> 00:41:56,240
the red lines show

1000
00:41:56,240 --> 00:42:00,240
the typical flow of

1001
00:42:00,560 --> 00:42:04,799
data traffic within the site

1002
00:42:06,160 --> 00:42:08,960
next step please

1003
00:42:13,760 --> 00:42:17,040
so yeah you have to speed up a bit if

1004
00:42:17,040 --> 00:42:18,880
you want to be able to cover your second

1005
00:42:18,880 --> 00:42:19,760
draft

1006
00:42:19,760 --> 00:42:21,680
sure so we can skip this one i think

1007
00:42:21,680 --> 00:42:24,560
this i have already uh covered the

1008
00:42:24,560 --> 00:42:26,480
probably i should have yeah

1009
00:42:26,480 --> 00:42:28,319
so uh

1010
00:42:28,319 --> 00:42:30,800
the requisite the requisite here is that

1011
00:42:30,800 --> 00:42:32,880
all the both the border leaves or both

1012
00:42:32,880 --> 00:42:33,839
the

1013
00:42:33,839 --> 00:42:37,279
b taps here or

1014
00:42:38,079 --> 00:42:39,520
should be should

1015
00:42:39,520 --> 00:42:40,960
act as a

1016
00:42:40,960 --> 00:42:43,359
designated folder both can flood the

1017
00:42:43,359 --> 00:42:44,640
traffic

1018
00:42:44,640 --> 00:42:46,640
uh both should be able to flood the

1019
00:42:46,640 --> 00:42:49,040
traffic at the same time so it's about

1020
00:42:49,040 --> 00:42:50,319
supporting

1021
00:42:50,319 --> 00:42:52,800
more than one designated forwarder for

1022
00:42:52,800 --> 00:42:56,240
the same ethernet segment and

1023
00:42:56,240 --> 00:42:59,599
and bd combination right so that's the

1024
00:42:59,599 --> 00:43:01,119
idea here and that's what we are

1025
00:43:01,119 --> 00:43:02,640
proposing here

1026
00:43:02,640 --> 00:43:05,119
that we want to have a

1027
00:43:05,119 --> 00:43:07,599
new mode of selection for df

1028
00:43:07,599 --> 00:43:08,800
which is

1029
00:43:08,800 --> 00:43:12,319
equivalent to a

1030
00:43:12,319 --> 00:43:15,839
all pe's in scenarios like this all p's

1031
00:43:15,839 --> 00:43:18,079
which can act as a df

1032
00:43:18,079 --> 00:43:19,680
and uh

1033
00:43:19,680 --> 00:43:22,000
yeah so that's that's what the

1034
00:43:22,000 --> 00:43:23,119
uh

1035
00:43:23,119 --> 00:43:25,440
request here is yeah we can move to the

1036
00:43:25,440 --> 00:43:27,839
next one

1037
00:43:29,599 --> 00:43:31,359
so uh

1038
00:43:31,359 --> 00:43:33,680
the send side and receive side are

1039
00:43:33,680 --> 00:43:37,359
i mean again we support the new df bit

1040
00:43:37,359 --> 00:43:39,920
new df value suggest an increment to the

1041
00:43:39,920 --> 00:43:42,240
existing ones we have zero and one right

1042
00:43:42,240 --> 00:43:44,640
now being supported for default

1043
00:43:44,640 --> 00:43:45,760
and uh

1044
00:43:45,760 --> 00:43:47,200
uh

1045
00:43:47,200 --> 00:43:49,359
one which was extended in uh

1046
00:43:49,359 --> 00:43:53,480
and extended by rfc85847432

1047
00:43:53,680 --> 00:43:56,480
so uh

1048
00:43:56,640 --> 00:43:58,160
if at all

1049
00:43:58,160 --> 00:44:00,480
we have i mean we can choose the label

1050
00:44:00,480 --> 00:44:02,400
next value and the the tentative

1051
00:44:02,400 --> 00:44:04,319
proposal to use the next value which is

1052
00:44:04,319 --> 00:44:07,200
two again to be backward compatible if

1053
00:44:07,200 --> 00:44:09,680
any of the routers which doesn't

1054
00:44:09,680 --> 00:44:12,079
publishes or publishes a non-two value

1055
00:44:12,079 --> 00:44:13,839
or it doesn't supports this

1056
00:44:13,839 --> 00:44:17,280
extended community the the default falls

1057
00:44:17,280 --> 00:44:18,400
back to

1058
00:44:18,400 --> 00:44:19,280
the

1059
00:44:19,280 --> 00:44:23,200
existing rfc 7432 the default selection

1060
00:44:23,200 --> 00:44:25,119
received side processing is

1061
00:44:25,119 --> 00:44:27,040
again the same so send side and see side

1062
00:44:27,040 --> 00:44:28,400
is mostly

1063
00:44:28,400 --> 00:44:30,079
uh about

1064
00:44:30,079 --> 00:44:32,160
being backward compatible or being able

1065
00:44:32,160 --> 00:44:34,960
to revert back to defaults if one of the

1066
00:44:34,960 --> 00:44:37,359
p's don't

1067
00:44:37,359 --> 00:44:39,359
uh publishes the

1068
00:44:39,359 --> 00:44:43,359
all all psdf mode so yeah

1069
00:44:43,359 --> 00:44:44,640
um

1070
00:44:44,640 --> 00:44:48,240
next one please i think um

1071
00:44:49,040 --> 00:44:50,960
yeah same thing and

1072
00:44:50,960 --> 00:44:52,720
uh the last slide this this can be

1073
00:44:52,720 --> 00:44:55,279
skipped here

1074
00:44:57,920 --> 00:45:00,319
yeah so i think this is what we expect

1075
00:45:00,319 --> 00:45:01,920
more discussion i shouldn't say working

1076
00:45:01,920 --> 00:45:03,839
group draft but more discussion and

1077
00:45:03,839 --> 00:45:06,160
feedback on this uh

1078
00:45:06,160 --> 00:45:08,319
proposal on this draft or if there are

1079
00:45:08,319 --> 00:45:11,839
any existing ways which are already

1080
00:45:11,839 --> 00:45:14,240
providing these enablers definitely we

1081
00:45:14,240 --> 00:45:17,599
want to collaborate well

1082
00:45:17,599 --> 00:45:20,880
okay so we will take action however

1083
00:45:20,880 --> 00:45:24,880
you have used the time for your draft

1084
00:45:24,880 --> 00:45:27,119
what i propose is if you have time at

1085
00:45:27,119 --> 00:45:28,720
the end of the meeting you will do the

1086
00:45:28,720 --> 00:45:30,880
presentation of this contract

1087
00:45:30,880 --> 00:45:32,880
okay

1088
00:45:32,880 --> 00:45:34,400
okay

1089
00:45:34,400 --> 00:45:35,920
uh jorge

1090
00:45:35,920 --> 00:45:38,720
you are on the queue

1091
00:45:39,119 --> 00:45:41,599
yeah i have a couple of comment

1092
00:45:41,599 --> 00:45:43,839
questions so thanks for for this

1093
00:45:43,839 --> 00:45:45,760
presentation so the first one is you are

1094
00:45:45,760 --> 00:45:48,880
requesting code point two for the

1095
00:45:48,880 --> 00:45:51,280
df algorithm for the df election

1096
00:45:51,280 --> 00:45:53,520
extended community that is actually the

1097
00:45:53,520 --> 00:45:55,920
the one we use for the preference based

1098
00:45:55,920 --> 00:45:58,000
df election so

1099
00:45:58,000 --> 00:45:59,680
hopefully you can actually remove it

1100
00:45:59,680 --> 00:46:00,960
from the

1101
00:46:00,960 --> 00:46:03,920
from the draft as soon as you can please

1102
00:46:03,920 --> 00:46:05,520
and the uh

1103
00:46:05,520 --> 00:46:07,760
the second one is since you are asking

1104
00:46:07,760 --> 00:46:10,640
for um you know any other way of of

1105
00:46:10,640 --> 00:46:12,079
doing this

1106
00:46:12,079 --> 00:46:16,480
um so in 7432 base we we have this uh

1107
00:46:16,480 --> 00:46:18,400
default gateway extended community that

1108
00:46:18,400 --> 00:46:20,720
is already specified

1109
00:46:20,720 --> 00:46:23,760
that can be used with uh mac ip routes

1110
00:46:23,760 --> 00:46:24,960
and actually

1111
00:46:24,960 --> 00:46:26,880
it indicates that the

1112
00:46:26,880 --> 00:46:29,200
the route is being advertised for a kind

1113
00:46:29,200 --> 00:46:31,359
of a default gateway which is what i

1114
00:46:31,359 --> 00:46:34,240
understood in your use case you want to

1115
00:46:34,240 --> 00:46:35,359
achieve

1116
00:46:35,359 --> 00:46:37,119
and it's already specified that this

1117
00:46:37,119 --> 00:46:39,280
extended community is not going to be

1118
00:46:39,280 --> 00:46:41,839
subject to mobility and things like that

1119
00:46:41,839 --> 00:46:44,720
so the only difference with your uh

1120
00:46:44,720 --> 00:46:47,359
draft or your your use case is that in

1121
00:46:47,359 --> 00:46:49,040
seven four three two bits that is used

1122
00:46:49,040 --> 00:46:52,160
for irb uh mac ip routes

1123
00:46:52,160 --> 00:46:54,240
in your case uh it wouldn't be an irb

1124
00:46:54,240 --> 00:46:56,240
but it would be something attached to an

1125
00:46:56,240 --> 00:46:58,480
attachment circuit but i don't see why

1126
00:46:58,480 --> 00:47:00,960
you you wouldn't use that instead of

1127
00:47:00,960 --> 00:47:02,720
an ethernet segment to me an external

1128
00:47:02,720 --> 00:47:04,319
segment here in this use case is kind of

1129
00:47:04,319 --> 00:47:05,280
a

1130
00:47:05,280 --> 00:47:07,920
strange thing to use

1131
00:47:07,920 --> 00:47:09,359
but we can discuss more in the on the

1132
00:47:09,359 --> 00:47:11,839
mailing list

1133
00:47:11,839 --> 00:47:14,000
sure okay yeah

1134
00:47:14,000 --> 00:47:16,880
okay linda

1135
00:47:21,200 --> 00:47:24,319
okay my question how do you play but

1136
00:47:24,319 --> 00:47:26,800
we'll put you up inside failure so you

1137
00:47:26,800 --> 00:47:29,440
have the firewall on both sides

1138
00:47:29,440 --> 00:47:31,200
but each side you don't have one

1139
00:47:31,200 --> 00:47:33,760
firewall right i'm not confused like why

1140
00:47:33,760 --> 00:47:36,400
you need to talk about multiple um

1141
00:47:36,400 --> 00:47:38,640
default firewalls

1142
00:47:38,640 --> 00:47:41,040
so all the traffic from one goes through

1143
00:47:41,040 --> 00:47:43,680
that same uh firewall right so it's

1144
00:47:43,680 --> 00:47:45,839
really just one

1145
00:47:45,839 --> 00:47:47,680
it's a little confusing on your product

1146
00:47:47,680 --> 00:47:48,640
yeah

1147
00:47:48,640 --> 00:47:50,319
essentially there is one

1148
00:47:50,319 --> 00:47:52,480
but we don't want the trump warning of

1149
00:47:52,480 --> 00:47:56,000
traffic when let's say site one

1150
00:47:56,000 --> 00:47:58,319
based host are sending a

1151
00:47:58,319 --> 00:48:00,960
traffic not south to the outside world

1152
00:48:00,960 --> 00:48:02,880
it should not get tromboned to the

1153
00:48:02,880 --> 00:48:04,720
remote

1154
00:48:04,720 --> 00:48:07,599
uh sites firewall instance right it

1155
00:48:07,599 --> 00:48:10,000
should only be routed to the local one

1156
00:48:10,000 --> 00:48:12,000
yeah i understand typically you have

1157
00:48:12,000 --> 00:48:13,920
different credentials but this is one

1158
00:48:13,920 --> 00:48:16,559
specific case where we want to

1159
00:48:16,559 --> 00:48:17,280
have

1160
00:48:17,280 --> 00:48:19,119
same virtual credential for both the

1161
00:48:19,119 --> 00:48:21,839
cases for both the both the sides

1162
00:48:21,839 --> 00:48:24,960
and in case the local one fails that's

1163
00:48:24,960 --> 00:48:27,760
the time when the

1164
00:48:27,760 --> 00:48:30,720
the bomb traffic or or not south traffic

1165
00:48:30,720 --> 00:48:32,720
should be trombonic to the remote side

1166
00:48:32,720 --> 00:48:35,440
as a favorite

1167
00:48:35,440 --> 00:48:37,839
dresser

1168
00:48:38,480 --> 00:48:39,839
okay

1169
00:48:39,839 --> 00:48:42,400
thank you

1170
00:48:43,920 --> 00:48:46,800
okay so let's look with your

1171
00:48:46,800 --> 00:48:49,969
[Music]

1172
00:48:58,410 --> 00:49:01,469
[Music]

1173
00:49:29,040 --> 00:49:31,119
in uh

1174
00:49:31,119 --> 00:49:33,680
that's right

1175
00:49:35,599 --> 00:49:37,520
this is our motivation

1176
00:49:37,520 --> 00:49:41,040
spf is very useful for 3d terminal you

1177
00:49:41,040 --> 00:49:44,520
can see resources

1178
00:49:55,920 --> 00:49:57,359
just for me but

1179
00:49:57,359 --> 00:50:00,400
we cannot tell you anymore

1180
00:50:04,880 --> 00:50:08,760
certainly it's not just here

1181
00:50:15,599 --> 00:50:18,599
so

1182
00:50:52,720 --> 00:50:54,400
okay so

1183
00:50:54,400 --> 00:50:57,280
what we could do is probably move to the

1184
00:50:57,280 --> 00:50:59,040
next picture

1185
00:50:59,040 --> 00:51:04,839
until ibru is able for his audio issuer

1186
00:51:08,480 --> 00:51:09,680
okay

1187
00:51:09,680 --> 00:51:11,520
i will come back to this presentation

1188
00:51:11,520 --> 00:51:13,599
later

1189
00:51:13,599 --> 00:51:15,440
uh so next

1190
00:51:15,440 --> 00:51:17,839
will be

1191
00:51:18,160 --> 00:51:19,839
again

1192
00:51:19,839 --> 00:51:22,839
yes

1193
00:51:23,280 --> 00:51:24,880
uh hi

1194
00:51:24,880 --> 00:51:27,839
my name is guyan mishra i'm with verizon

1195
00:51:27,839 --> 00:51:31,680
and i am giving an update to the ipv60

1196
00:51:31,680 --> 00:51:33,200
design

1197
00:51:33,200 --> 00:51:34,800
as well as

1198
00:51:34,800 --> 00:51:37,440
providing an introduction to a new draft

1199
00:51:37,440 --> 00:51:38,240
um

1200
00:51:38,240 --> 00:51:42,240
ipv6 only pd design all sappy

1201
00:51:42,240 --> 00:51:42,960
so

1202
00:51:42,960 --> 00:51:46,240
uh this first draft ipv6 only t design

1203
00:51:46,240 --> 00:51:49,359
was adopted last year on the 28th

1204
00:51:49,359 --> 00:51:51,200
so with this draft um

1205
00:51:51,200 --> 00:51:53,760
one update that we have to the uh draft

1206
00:51:53,760 --> 00:51:57,119
as we uh initially the draft was uh we

1207
00:51:57,119 --> 00:51:59,599
were in scope was uh

1208
00:51:59,599 --> 00:52:01,680
you're testing uh

1209
00:52:01,680 --> 00:52:05,680
for this bcp was the pc edge scenario so

1210
00:52:05,680 --> 00:52:09,280
we added a s scenario to that that was

1211
00:52:09,280 --> 00:52:11,440
in the in the original draft and we had

1212
00:52:11,440 --> 00:52:14,240
removed it but now we're adding that

1213
00:52:14,240 --> 00:52:17,280
test back i guess into the draft so

1214
00:52:17,280 --> 00:52:20,559
that's testing both um

1215
00:52:20,559 --> 00:52:24,400
safety 128 so vpn and mvpn into into the

1216
00:52:24,400 --> 00:52:26,559
draft

1217
00:52:26,559 --> 00:52:29,599
did you draft it so this draft is a bcp

1218
00:52:29,599 --> 00:52:32,319
draft uh so this next draft that we're

1219
00:52:32,319 --> 00:52:34,480
introducing um that that i've been

1220
00:52:34,480 --> 00:52:36,480
providing an introduction for on this

1221
00:52:36,480 --> 00:52:39,440
call is a uh it's called ipv6 only p

1222
00:52:39,440 --> 00:52:42,160
design all sappy uh this one is

1223
00:52:42,160 --> 00:52:45,040
standards track and this is a this is a

1224
00:52:45,040 --> 00:52:48,640
super set of the uh original draft the

1225
00:52:48,640 --> 00:52:51,359
ipv6 only tv design the difference

1226
00:52:51,359 --> 00:52:53,760
between this draft so this is

1227
00:52:53,760 --> 00:52:56,800
is is what i call the design draft and

1228
00:52:56,800 --> 00:52:59,520
related to the uh

1229
00:52:59,520 --> 00:53:02,079
the original draft the original bcp

1230
00:53:02,079 --> 00:53:04,559
draft is is testing with with the five

1231
00:53:04,559 --> 00:53:08,079
different vendors cisco juniper arista

1232
00:53:08,079 --> 00:53:10,160
nokia and huawei

1233
00:53:10,160 --> 00:53:13,200
and this draft is providing the design

1234
00:53:13,200 --> 00:53:16,640
framework uh with this draft the focus

1235
00:53:16,640 --> 00:53:18,160
is

1236
00:53:18,160 --> 00:53:20,800
and and how it's different is it focuses

1237
00:53:20,800 --> 00:53:24,480
on all all sappy's so not only the the

1238
00:53:24,480 --> 00:53:26,960
atheists happy that are being tested

1239
00:53:26,960 --> 00:53:28,880
in the

1240
00:53:28,880 --> 00:53:30,000
in the

1241
00:53:30,000 --> 00:53:32,559
original draft but um all all other

1242
00:53:32,559 --> 00:53:33,520
staff

1243
00:53:33,520 --> 00:53:36,079
next slide

1244
00:53:39,680 --> 00:53:42,880
next slide thanks

1245
00:53:42,880 --> 00:53:44,079
uh so

1246
00:53:44,079 --> 00:53:46,640
here what i've done is i i actually kind

1247
00:53:46,640 --> 00:53:50,000
of broke i from the uh ayanna page for

1248
00:53:50,000 --> 00:53:52,160
um aki sapi

1249
00:53:52,160 --> 00:53:54,880
uh what i did was i i took all the fsf

1250
00:53:54,880 --> 00:53:56,079
and kind of broke them up into

1251
00:53:56,079 --> 00:53:58,559
functional groupings so

1252
00:53:58,559 --> 00:54:01,440
the first case uh functional case of the

1253
00:54:01,440 --> 00:54:05,200
of accusative is an edge customer mlri

1254
00:54:05,200 --> 00:54:07,839
ipv4 an ipv610 lri

1255
00:54:07,839 --> 00:54:10,720
and that's a unicast staffing multicast

1256
00:54:10,720 --> 00:54:12,800
staffing the unicast staff is one of the

1257
00:54:12,800 --> 00:54:15,280
staffers that we're testing in the

1258
00:54:15,280 --> 00:54:18,240
original draft ipv6 only design

1259
00:54:18,240 --> 00:54:22,000
the inner as um acting safety is is the

1260
00:54:22,000 --> 00:54:23,520
additional one that we are testing so

1261
00:54:23,520 --> 00:54:28,400
that's happy 128 for vpn at 129 for mvpn

1262
00:54:28,400 --> 00:54:31,599
uh we're also testing as well uh

1263
00:54:31,599 --> 00:54:36,240
uh bgpl labeled your cast for uh 6pe and

1264
00:54:36,240 --> 00:54:37,599
4pe

1265
00:54:37,599 --> 00:54:39,119
um

1266
00:54:39,119 --> 00:54:41,040
so in addition to

1267
00:54:41,040 --> 00:54:42,960
uh those sashes that are within the

1268
00:54:42,960 --> 00:54:45,200
original draft so this second functional

1269
00:54:45,200 --> 00:54:49,920
area is uh enter nras uh asbr asp

1270
00:54:49,920 --> 00:54:51,839
uh uh interest

1271
00:54:51,839 --> 00:54:54,480
um so in there we have one slash 40 vpn

1272
00:54:54,480 --> 00:54:56,640
auto discovery um

1273
00:54:56,640 --> 00:54:57,760
the next

1274
00:54:57,760 --> 00:55:00,000
category is a multicast and there we

1275
00:55:00,000 --> 00:55:02,240
have uh vpn

1276
00:55:02,240 --> 00:55:04,400
md mcas vpls

1277
00:55:04,400 --> 00:55:07,680
mdt sas multitask tree

1278
00:55:07,680 --> 00:55:09,760
and the next category

1279
00:55:09,760 --> 00:55:12,960
is uh anything any um

1280
00:55:12,960 --> 00:55:14,559
any uh

1281
00:55:14,559 --> 00:55:17,200
peering that's going to a controller so

1282
00:55:17,200 --> 00:55:19,040
an sdn controller so that would cover

1283
00:55:19,040 --> 00:55:21,119
like vgpls

1284
00:55:21,119 --> 00:55:22,000
or

1285
00:55:22,000 --> 00:55:24,480
a routing sappy uh routing policy

1286
00:55:24,480 --> 00:55:26,480
staffing

1287
00:55:26,480 --> 00:55:29,920
or uh the bgpls

1288
00:55:29,920 --> 00:55:31,200
spf

1289
00:55:31,200 --> 00:55:34,720
uh then in the next category is ltvpn

1290
00:55:34,720 --> 00:55:36,280
the one after that is

1291
00:55:36,280 --> 00:55:39,200
optimizations and then the last category

1292
00:55:39,200 --> 00:55:44,839
is any kind of routing policy next life

1293
00:55:48,480 --> 00:55:51,200
next slide that's thanks so here i just

1294
00:55:51,200 --> 00:55:52,960
what i did what i had this is the thing

1295
00:55:52,960 --> 00:55:55,680
just the uh ayanna happy shaping link

1296
00:55:55,680 --> 00:55:57,520
that has all the app staffers and i have

1297
00:55:57,520 --> 00:56:00,720
color coded into functional um

1298
00:56:00,720 --> 00:56:03,279
next slide

1299
00:56:06,480 --> 00:56:08,799
next slide sorry

1300
00:56:08,799 --> 00:56:11,440
um and then here as well so basically

1301
00:56:11,440 --> 00:56:13,440
all what i'm showing here is this color

1302
00:56:13,440 --> 00:56:15,920
coding you know of all functional

1303
00:56:15,920 --> 00:56:18,480
basically the ipv6 only p design all

1304
00:56:18,480 --> 00:56:19,440
sappy

1305
00:56:19,440 --> 00:56:21,119
all all of the address families and

1306
00:56:21,119 --> 00:56:22,319
subsequent average families are

1307
00:56:22,319 --> 00:56:25,359
supported i did highlight in yellow uh

1308
00:56:25,359 --> 00:56:28,799
the dubs after 76. on the previous slide

1309
00:56:28,799 --> 00:56:31,200
i had i actually forgot to highlight

1310
00:56:31,200 --> 00:56:35,280
sapi 4 which is bgplu for the transport

1311
00:56:35,280 --> 00:56:37,200
so the transport staffing would would be

1312
00:56:37,200 --> 00:56:39,200
something that's the transport layer and

1313
00:56:39,200 --> 00:56:42,000
what this this draft is primarily

1314
00:56:42,000 --> 00:56:44,319
consider all staff related to the

1315
00:56:44,319 --> 00:56:46,000
service sessions

1316
00:56:46,000 --> 00:56:48,640
and not the not the transports happening

1317
00:56:48,640 --> 00:56:51,200
next slide

1318
00:56:55,200 --> 00:56:56,160
next

1319
00:56:56,160 --> 00:56:58,880
so so here uh here i'm showing um just a

1320
00:56:58,880 --> 00:57:01,200
dual stack scenario so this is a typical

1321
00:57:01,200 --> 00:57:02,480
you know

1322
00:57:02,480 --> 00:57:05,280
a pec you have two separate piers

1323
00:57:05,280 --> 00:57:10,760
uh a traditional dual stack next slide

1324
00:57:12,480 --> 00:57:14,559
and then here we have a signal here and

1325
00:57:14,559 --> 00:57:17,359
you're we're carrying both the v4 and v6

1326
00:57:17,359 --> 00:57:20,160
and on right with it with a single pier

1327
00:57:20,160 --> 00:57:23,399
next slide

1328
00:57:28,000 --> 00:57:30,720
uh okay so here this this is this is one

1329
00:57:30,720 --> 00:57:32,559
of the scenarios we are testing in the

1330
00:57:32,559 --> 00:57:35,760
original ipv6 only p design draft so

1331
00:57:35,760 --> 00:57:39,440
that we've added sap 128 and sap 129

1332
00:57:39,440 --> 00:57:42,319
mvpn so this is separate fears next

1333
00:57:42,319 --> 00:57:44,558
slide

1334
00:57:47,760 --> 00:57:49,440
and here we have it combined into a

1335
00:57:49,440 --> 00:57:51,440
single field so both

1336
00:57:51,440 --> 00:57:54,400
sappy 128 and 129 are carrying you know

1337
00:57:54,400 --> 00:57:57,359
using a single pier so eliminating any

1338
00:57:57,359 --> 00:58:00,000
before appearing and this is where ixp

1339
00:58:00,000 --> 00:58:01,920
pops or any edge peering you you

1340
00:58:01,920 --> 00:58:04,240
actually can save as well as the arrays

1341
00:58:04,240 --> 00:58:06,559
metering at ixp pops

1342
00:58:06,559 --> 00:58:09,799
next slide

1343
00:58:12,079 --> 00:58:14,480
and so this fight is showing kind of the

1344
00:58:14,480 --> 00:58:16,880
the frame of the all-safety so other

1345
00:58:16,880 --> 00:58:18,319
additional staffing so here we're

1346
00:58:18,319 --> 00:58:20,960
showing exactly 128 we're showing em

1347
00:58:20,960 --> 00:58:23,359
cash free for this so this is a bg this

1348
00:58:23,359 --> 00:58:26,480
is the new uh draft i think with bgp

1349
00:58:26,480 --> 00:58:29,280
sapphire stateless multicast states

1350
00:58:29,280 --> 00:58:31,280
multicast and then srt

1351
00:58:31,280 --> 00:58:33,119
so in instead i see you have two

1352
00:58:33,119 --> 00:58:36,160
separate peers carrying this happy uh

1353
00:58:36,160 --> 00:58:38,720
next slide

1354
00:58:39,520 --> 00:58:41,280
and then here we're actually just a

1355
00:58:41,280 --> 00:58:43,920
single v6 pier and then here you can see

1356
00:58:43,920 --> 00:58:46,640
we're carrying for all three sappys

1357
00:58:46,640 --> 00:58:49,119
with a single pier

1358
00:58:49,119 --> 00:58:52,079
i just showing the framework of how

1359
00:58:52,079 --> 00:58:54,960
of this draft this new all sappy it

1360
00:58:54,960 --> 00:58:58,000
applies to all all adversaries

1361
00:58:58,000 --> 00:59:00,000
oh sorry all uh sappy's such good

1362
00:59:00,000 --> 00:59:04,040
applications next slide

1363
00:59:04,720 --> 00:59:07,200
and this this this slide shows a

1364
00:59:07,200 --> 00:59:09,599
controller scenario so you have a pe

1365
00:59:09,599 --> 00:59:13,280
peering to a pc sdn controller and here

1366
00:59:13,280 --> 00:59:16,720
we have uh vgpls and then um

1367
00:59:16,720 --> 00:59:19,520
routing policy safety rpd safety and

1368
00:59:19,520 --> 00:59:22,319
here we have two separate piers uh this

1369
00:59:22,319 --> 00:59:26,799
is traditional dual stack uh next life

1370
00:59:28,000 --> 00:59:30,240
and here we have a single pier so we can

1371
00:59:30,240 --> 00:59:32,799
see the savings you're actually really

1372
00:59:32,799 --> 00:59:35,280
able to eliminate the uh v4 pier and

1373
00:59:35,280 --> 00:59:37,119
you're able to carry just showing

1374
00:59:37,119 --> 00:59:39,440
various a variety of scenarios where

1375
00:59:39,440 --> 00:59:41,839
instead of having single p i mean

1376
00:59:41,839 --> 00:59:44,960
separate piers for v4 v6 now it's really

1377
00:59:44,960 --> 00:59:47,760
any sappy any of those diana's happy

1378
00:59:47,760 --> 00:59:49,280
that are in the list that are all you

1379
00:59:49,280 --> 00:59:51,920
know you know they're that they're uh

1380
00:59:51,920 --> 00:59:54,480
defined uh they can all be carried you

1381
00:59:54,480 --> 00:59:57,280
know with a single single v6 pier

1382
00:59:57,280 --> 01:00:00,520
next slide

1383
01:00:00,960 --> 01:00:04,319
uh so yeah as far as updates uh for the

1384
01:00:04,319 --> 01:00:08,480
ipv6 design set um uh draft uh

1385
01:00:08,480 --> 01:00:10,000
we uh

1386
01:00:10,000 --> 01:00:12,319
here's uh the list of the hardware

1387
01:00:12,319 --> 01:00:14,000
platforms and code that we're testing

1388
01:00:14,000 --> 01:00:16,559
with cisco juniper nokia arista and

1389
01:00:16,559 --> 01:00:19,839
wallet next life

1390
01:00:22,160 --> 01:00:24,240
this is our our test plan that we have

1391
01:00:24,240 --> 01:00:27,359
so we have you know the core

1392
01:00:27,359 --> 01:00:30,559
we're using isis as the underlay uh vcnp

1393
01:00:30,559 --> 01:00:33,599
uh we're testing really the main things

1394
01:00:33,599 --> 01:00:35,599
that we need to test i think related to

1395
01:00:35,599 --> 01:00:38,240
uh the phone functionally testing and

1396
01:00:38,240 --> 01:00:39,880
ensuring that everything works with the

1397
01:00:39,880 --> 01:00:43,119
ipd60p design we're testing bgp pick

1398
01:00:43,119 --> 01:00:46,000
next step cell label allocation mode for

1399
01:00:46,000 --> 01:00:47,680
c per vrf

1400
01:00:47,680 --> 01:00:50,160
brow reflector function add path next

1401
01:00:50,160 --> 01:00:51,599
stop and change

1402
01:00:51,599 --> 01:00:52,480
uh

1403
01:00:52,480 --> 01:00:54,640
p lincoln node failure and then edge

1404
01:00:54,640 --> 01:00:59,440
scenarios we're testing vfd lag ipccos

1405
01:00:59,440 --> 01:01:00,559
and um

1406
01:01:00,559 --> 01:01:03,040
and ce lincoln node failures

1407
01:01:03,040 --> 01:01:04,640
next slide

1408
01:01:04,640 --> 01:01:06,799
again you have to conclude you have less

1409
01:01:06,799 --> 01:01:08,240
than one minute

1410
01:01:08,240 --> 01:01:11,200
okay thank you

1411
01:01:11,200 --> 01:01:12,000
um

1412
01:01:12,000 --> 01:01:12,880
so

1413
01:01:12,880 --> 01:01:16,000
let's go to the next slide

1414
01:01:16,000 --> 01:01:17,280
next slide

1415
01:01:17,280 --> 01:01:19,520
so this is the inner as

1416
01:01:19,520 --> 01:01:21,280
our architecture that we're that we have

1417
01:01:21,280 --> 01:01:23,520
set up in the in the lab

1418
01:01:23,520 --> 01:01:25,680
with each of the vendors uh what we've

1419
01:01:25,680 --> 01:01:28,319
added in here is the nras so we have two

1420
01:01:28,319 --> 01:01:31,760
two paths between the uh as the as on

1421
01:01:31,760 --> 01:01:34,960
the left and the asl right to test so we

1422
01:01:34,960 --> 01:01:36,640
now we're able to test both the edge

1423
01:01:36,640 --> 01:01:38,559
scenario and then as well as the intra

1424
01:01:38,559 --> 01:01:42,160
as scenario next slide

1425
01:01:45,040 --> 01:01:46,799
so here we've got we've added in

1426
01:01:46,799 --> 01:01:50,160
basically 128 and 129 so this lists all

1427
01:01:50,160 --> 01:01:52,960
the different tests it's a total of 12

1428
01:01:52,960 --> 01:01:54,720
different test scenarios that we will be

1429
01:01:54,720 --> 01:01:58,000
testing next slide

1430
01:01:59,920 --> 01:02:02,240
right this is the last slide so

1431
01:02:02,240 --> 01:02:04,480
we made some significant progress with

1432
01:02:04,480 --> 01:02:07,200
juniper in testing and uh with the

1433
01:02:07,200 --> 01:02:09,440
testing uh we've been able to

1434
01:02:09,440 --> 01:02:11,599
successfully test the uh

1435
01:02:11,599 --> 01:02:15,200
pec edge scenario where we have an ipv4

1436
01:02:15,200 --> 01:02:18,319
and ipv6 mlri uh from a control plane

1437
01:02:18,319 --> 01:02:19,599
perspective they're they're being

1438
01:02:19,599 --> 01:02:22,559
carried over a single v6 only pier uh

1439
01:02:22,559 --> 01:02:24,640
and we're forwarding v4 and v6 and we

1440
01:02:24,640 --> 01:02:27,839
have end end reachability cdc

1441
01:02:27,839 --> 01:02:30,880
um and we're using the default uh per cd

1442
01:02:30,880 --> 01:02:32,520
label

1443
01:02:32,520 --> 01:02:35,440
allocation um we've tested with a v4

1444
01:02:35,440 --> 01:02:37,760
only core we've also tested with a v6

1445
01:02:37,760 --> 01:02:39,119
only core

1446
01:02:39,119 --> 01:02:41,200
um and we've proved that the solution

1447
01:02:41,200 --> 01:02:44,000
works so everything's so far so good um

1448
01:02:44,000 --> 01:02:46,960
we haven't seen cnn issues and the

1449
01:02:46,960 --> 01:02:48,960
testing is basically we're trying to

1450
01:02:48,960 --> 01:02:50,319
prove out that

1451
01:02:50,319 --> 01:02:52,240
you know what you would normally do with

1452
01:02:52,240 --> 01:02:54,240
dual stacking we're able to do with a

1453
01:02:54,240 --> 01:02:57,280
single v6 pier and provide the same

1454
01:02:57,280 --> 01:02:59,599
identical functionality as uh the dual

1455
01:02:59,599 --> 01:03:00,559
stack

1456
01:03:00,559 --> 01:03:03,039
thank you

1457
01:03:03,039 --> 01:03:05,119
okay unfortunately we don't have time

1458
01:03:05,119 --> 01:03:06,720
for questions

1459
01:03:06,720 --> 01:03:08,880
uh so if people have some questions

1460
01:03:08,880 --> 01:03:11,920
please raise them to the list

1461
01:03:11,920 --> 01:03:14,799
thank you and thank you again next

1462
01:03:14,799 --> 01:03:18,000
speaker will be ko

1463
01:03:26,000 --> 01:03:27,359
they will do it

1464
01:03:27,359 --> 01:03:30,359
super

1465
01:03:30,799 --> 01:03:32,000
hey folks

1466
01:03:32,000 --> 01:03:33,839
my name is kevin patel and i'm going to

1467
01:03:33,839 --> 01:03:34,960
talk about

1468
01:03:34,960 --> 01:03:37,200
the map safi mobile user playing safety

1469
01:03:37,200 --> 01:03:39,599
draft for bgp this is a draft that i've

1470
01:03:39,599 --> 01:03:41,760
co-authored with tetsuya murakami satoru

1471
01:03:41,760 --> 01:03:45,039
matsushima jeffrey

1472
01:03:45,839 --> 01:03:48,400
next slide please

1473
01:03:48,400 --> 01:03:50,559
following are the contributors who have

1474
01:03:50,559 --> 01:03:51,760
contributed

1475
01:03:51,760 --> 01:03:53,599
significantly to the draft next slide

1476
01:03:53,599 --> 01:03:55,920
please

1477
01:03:55,920 --> 01:03:58,720
so here is the motivation there is a

1478
01:03:58,720 --> 01:04:01,440
srv6 map architecture mop stands for

1479
01:04:01,440 --> 01:04:04,400
mobile user plane um draft

1480
01:04:04,400 --> 01:04:07,280
that is present uh presented in dmm

1481
01:04:07,280 --> 01:04:09,599
working group and it defines

1482
01:04:09,599 --> 01:04:11,599
a srv6 based

1483
01:04:11,599 --> 01:04:13,280
mobile user plane architecture for

1484
01:04:13,280 --> 01:04:15,599
distributed mobility management

1485
01:04:15,599 --> 01:04:17,839
basically this architecture integrates

1486
01:04:17,839 --> 01:04:20,640
mobile user plane into srv6 and the way

1487
01:04:20,640 --> 01:04:23,760
it does that is that it transforms

1488
01:04:23,760 --> 01:04:25,599
session information from mobility

1489
01:04:25,599 --> 01:04:27,680
management system into necessary routing

1490
01:04:27,680 --> 01:04:29,760
information but with

1491
01:04:29,760 --> 01:04:32,319
srv6 as a forwarding fabric one

1492
01:04:32,319 --> 01:04:33,839
forwarding fabric

1493
01:04:33,839 --> 01:04:35,520
as part of this architecture it also

1494
01:04:35,520 --> 01:04:38,160
defines the following things it also it

1495
01:04:38,160 --> 01:04:39,200
defines

1496
01:04:39,200 --> 01:04:41,039
a notion of

1497
01:04:41,039 --> 01:04:44,400
mobile user plane router or a pe router

1498
01:04:44,400 --> 01:04:46,160
and a controller

1499
01:04:46,160 --> 01:04:48,319
two new segment types

1500
01:04:48,319 --> 01:04:52,000
are defined srv6 segment types for the

1501
01:04:52,000 --> 01:04:55,039
map segments uh it's called direct or

1502
01:04:55,039 --> 01:04:57,760
interwork segment and then there are two

1503
01:04:57,760 --> 01:04:58,799
new

1504
01:04:58,799 --> 01:05:00,400
session transform routes that are

1505
01:05:00,400 --> 01:05:01,599
defined

1506
01:05:01,599 --> 01:05:02,720
and these are the routes that

1507
01:05:02,720 --> 01:05:04,880
controllers would announce the mob

1508
01:05:04,880 --> 01:05:07,920
segments would pretty much reside on pe

1509
01:05:07,920 --> 01:05:10,640
next slide please

1510
01:05:11,520 --> 01:05:15,119
now it also defines two new well-known

1511
01:05:15,119 --> 01:05:17,839
routing instances akin to very similar

1512
01:05:17,839 --> 01:05:19,520
to vrfs

1513
01:05:19,520 --> 01:05:20,720
it's called

1514
01:05:20,720 --> 01:05:23,839
interwork segment for n3 ran

1515
01:05:23,839 --> 01:05:26,000
this is the segment that allows you to

1516
01:05:26,000 --> 01:05:28,079
connect n3 interfaces

1517
01:05:28,079 --> 01:05:30,960
between g note b's and ups and a direct

1518
01:05:30,960 --> 01:05:33,839
segment n6dn

1519
01:05:33,839 --> 01:05:36,160
which is an n6 interface between upf and

1520
01:05:36,160 --> 01:05:37,599
data networks

1521
01:05:37,599 --> 01:05:39,119
again you should think of these segments

1522
01:05:39,119 --> 01:05:41,760
connecting into earlier three vrf like

1523
01:05:41,760 --> 01:05:42,559
uh

1524
01:05:42,559 --> 01:05:44,400
routing instances

1525
01:05:44,400 --> 01:05:46,960
and with that being said

1526
01:05:46,960 --> 01:05:49,839
what this draft does is that it defines

1527
01:05:49,839 --> 01:05:51,760
a new pgp safy

1528
01:05:51,760 --> 01:05:54,960
um that allows this mock in extensions

1529
01:05:54,960 --> 01:05:56,160
to work

1530
01:05:56,160 --> 01:05:59,119
uh with bgp as a control plane also adds

1531
01:05:59,119 --> 01:06:00,720
a new extended community as part of

1532
01:06:00,720 --> 01:06:02,640
defining a new software yeah next slide

1533
01:06:02,640 --> 01:06:05,640
please

1534
01:06:06,079 --> 01:06:06,960
so

1535
01:06:06,960 --> 01:06:09,599
this is how the nlri format looks like

1536
01:06:09,599 --> 01:06:11,920
it has an architecture type which is one

1537
01:06:11,920 --> 01:06:12,960
octet

1538
01:06:12,960 --> 01:06:14,880
followed by route type length and then

1539
01:06:14,880 --> 01:06:16,880
route type specific fields

1540
01:06:16,880 --> 01:06:19,520
the architecture type defined in this

1541
01:06:19,520 --> 01:06:23,119
draft is 3gpp 5g

1542
01:06:23,119 --> 01:06:24,880
subsequent drafts can define newer

1543
01:06:24,880 --> 01:06:27,119
architecture types but for now for this

1544
01:06:27,119 --> 01:06:32,200
draft it is 3gbp 5g next slide please

1545
01:06:32,319 --> 01:06:35,440
so as part of this architecture type

1546
01:06:35,440 --> 01:06:37,680
there are four new route types that are

1547
01:06:37,680 --> 01:06:38,720
defined

1548
01:06:38,720 --> 01:06:41,359
uh specifically for this architecture

1549
01:06:41,359 --> 01:06:43,440
two of them are discovery routes for

1550
01:06:43,440 --> 01:06:46,160
different segments that we have defined

1551
01:06:46,160 --> 01:06:47,920
and two of them are

1552
01:06:47,920 --> 01:06:50,000
session transport routes that carries

1553
01:06:50,000 --> 01:06:51,599
routing information

1554
01:06:51,599 --> 01:06:53,760
uh two discovery routes are interwork

1555
01:06:53,760 --> 01:06:55,599
segment discovery and direct segment

1556
01:06:55,599 --> 01:06:58,160
discovery routes now the route types

1557
01:06:58,160 --> 01:06:59,760
could be shared

1558
01:06:59,760 --> 01:07:02,000
across different architecture types as

1559
01:07:02,000 --> 01:07:04,480
and when they get defined but for this

1560
01:07:04,480 --> 01:07:06,480
architecture type there are only four

1561
01:07:06,480 --> 01:07:08,160
route types that are defined next slide

1562
01:07:08,160 --> 01:07:10,480
please

1563
01:07:11,440 --> 01:07:13,359
so a little bit

1564
01:07:13,359 --> 01:07:15,200
about

1565
01:07:15,200 --> 01:07:18,079
again the well-known routing instances

1566
01:07:18,079 --> 01:07:20,079
that are being defined

1567
01:07:20,079 --> 01:07:22,799
you have n3ran as a routing instance and

1568
01:07:22,799 --> 01:07:25,760
then 6dn routing instance

1569
01:07:25,760 --> 01:07:26,960
and then

1570
01:07:26,960 --> 01:07:29,680
you have discovery route interwork

1571
01:07:29,680 --> 01:07:31,920
discovery route that connects with n3

1572
01:07:31,920 --> 01:07:34,000
ran routing instances so anytime you

1573
01:07:34,000 --> 01:07:34,880
have

1574
01:07:34,880 --> 01:07:36,240
n3 ran

1575
01:07:36,240 --> 01:07:38,880
vrf like routing instance on a pe you

1576
01:07:38,880 --> 01:07:40,000
would announce

1577
01:07:40,000 --> 01:07:42,319
interwork segment discovery routes

1578
01:07:42,319 --> 01:07:44,319
anytime you have an n6d and routing

1579
01:07:44,319 --> 01:07:45,839
instance you would announce direct

1580
01:07:45,839 --> 01:07:47,839
segment require discovery routes the

1581
01:07:47,839 --> 01:07:49,520
kind of stuff it carries

1582
01:07:49,520 --> 01:07:51,200
within the route

1583
01:07:51,200 --> 01:07:52,720
is

1584
01:07:52,720 --> 01:07:55,200
prefixes for g node b's prefix set

1585
01:07:55,200 --> 01:07:58,319
attributes b locator followed by

1586
01:07:58,319 --> 01:07:59,520
gtp

1587
01:07:59,520 --> 01:08:01,200
460 function

1588
01:08:01,200 --> 01:08:04,079
and when you look at n6dn it carries map

1589
01:08:04,079 --> 01:08:06,000
segment

1590
01:08:06,000 --> 01:08:08,160
same prefix state attribute with low p

1591
01:08:08,160 --> 01:08:09,280
locator

1592
01:08:09,280 --> 01:08:10,880
followed by

1593
01:08:10,880 --> 01:08:14,720
n dot dt 4 6 function or dx base

1594
01:08:14,720 --> 01:08:15,760
function

1595
01:08:15,760 --> 01:08:18,560
next slide please

1596
01:08:19,920 --> 01:08:21,679
all right so two new route types a

1597
01:08:21,679 --> 01:08:23,040
little bit about that

1598
01:08:23,040 --> 01:08:25,120
type one route carries

1599
01:08:25,120 --> 01:08:27,920
um end user reachability information it

1600
01:08:27,920 --> 01:08:29,759
carries tunnel end points

1601
01:08:29,759 --> 01:08:30,799
um

1602
01:08:30,799 --> 01:08:31,920
gtp

1603
01:08:31,920 --> 01:08:34,399
deid qfi

1604
01:08:34,399 --> 01:08:36,238
all these things where you talk about

1605
01:08:36,238 --> 01:08:39,679
eid qfi and

1606
01:08:39,679 --> 01:08:40,960
and

1607
01:08:40,960 --> 01:08:43,198
under a tunnel endpoint they are

1608
01:08:43,198 --> 01:08:46,238
architecture specific 3gbp 5g specific

1609
01:08:46,238 --> 01:08:48,399
and therefore the nlri has an

1610
01:08:48,399 --> 01:08:50,158
architecture specific field in which

1611
01:08:50,158 --> 01:08:51,679
it's been carried

1612
01:08:51,679 --> 01:08:54,399
now this route types are announced by

1613
01:08:54,399 --> 01:08:56,319
controllers while the discovery routes

1614
01:08:56,319 --> 01:08:58,000
were announced by pes

1615
01:08:58,000 --> 01:09:00,799
so tunnel endpoint that is announced by

1616
01:09:00,799 --> 01:09:04,238
controller it's been resolved using

1617
01:09:04,238 --> 01:09:06,719
interwork segment discovery route uh

1618
01:09:06,719 --> 01:09:08,238
which also carries the locator and

1619
01:09:08,238 --> 01:09:10,640
prefix id so you would have this route

1620
01:09:10,640 --> 01:09:12,479
recurs over the tunnel endpoint route

1621
01:09:12,479 --> 01:09:14,560
and resolve that

1622
01:09:14,560 --> 01:09:16,319
when it comes to creating forwarding

1623
01:09:16,319 --> 01:09:19,040
said for gtp 46e it is basically

1624
01:09:19,040 --> 01:09:21,040
generated using the procedures

1625
01:09:21,040 --> 01:09:23,279
mentioned in srv6 mobile u-plane draft

1626
01:09:23,279 --> 01:09:26,000
yeah next slide please

1627
01:09:26,000 --> 01:09:27,679
and i think this is my last slide but

1628
01:09:27,679 --> 01:09:30,080
the type 2

1629
01:09:30,080 --> 01:09:32,479
session transform route again is used by

1630
01:09:32,479 --> 01:09:35,439
n3rand routing interface it carries upf

1631
01:09:35,439 --> 01:09:36,799
addresses

1632
01:09:36,799 --> 01:09:39,759
the teid again that it carries

1633
01:09:39,759 --> 01:09:40,799
is

1634
01:09:40,799 --> 01:09:43,439
very specific to 3gpp 5g and it's

1635
01:09:43,439 --> 01:09:45,679
carried in an appropriate field in an

1636
01:09:45,679 --> 01:09:47,679
lri

1637
01:09:47,679 --> 01:09:49,439
this route type also carries mop

1638
01:09:49,439 --> 01:09:51,679
extended community and it carries the

1639
01:09:51,679 --> 01:09:54,560
direct segment in uh

1640
01:09:54,560 --> 01:09:57,199
information on a pe there could be a

1641
01:09:57,199 --> 01:09:58,800
multiple and three rand routing

1642
01:09:58,800 --> 01:10:00,080
instances

1643
01:10:00,080 --> 01:10:04,159
what this direct segment

1644
01:10:04,159 --> 01:10:07,440
information allows you is to map

1645
01:10:07,440 --> 01:10:10,400
a appropriate segment

1646
01:10:10,400 --> 01:10:12,800
for a routing instance that is present

1647
01:10:12,800 --> 01:10:15,679
on a muppy on a pe and it lets you

1648
01:10:15,679 --> 01:10:18,880
simply forward the traffic to that

1649
01:10:18,880 --> 01:10:21,520
basically a routing instance

1650
01:10:21,520 --> 01:10:23,360
now all of these are carried with route

1651
01:10:23,360 --> 01:10:25,440
target extended communities import route

1652
01:10:25,440 --> 01:10:28,159
target extended communities and so the

1653
01:10:28,159 --> 01:10:30,640
appropriate filtering would be done in a

1654
01:10:30,640 --> 01:10:33,520
manner such that only the necessary

1655
01:10:33,520 --> 01:10:36,239
routing information stays on a pe

1656
01:10:36,239 --> 01:10:39,199
on a given pe yeah

1657
01:10:39,199 --> 01:10:41,040
this is i believe my next slide yeah

1658
01:10:41,040 --> 01:10:43,360
this this is my last slide the draft is

1659
01:10:43,360 --> 01:10:44,880
in fairly good shape

1660
01:10:44,880 --> 01:10:47,040
version one of the draft will be

1661
01:10:47,040 --> 01:10:49,520
submitted soon we

1662
01:10:49,520 --> 01:10:51,040
we would really like to get our working

1663
01:10:51,040 --> 01:10:52,800
group feedback and once we have

1664
01:10:52,800 --> 01:10:55,520
submitted a version one would like to

1665
01:10:55,520 --> 01:10:58,400
have one working group consider adopting

1666
01:10:58,400 --> 01:11:00,800
this draft

1667
01:11:00,800 --> 01:11:02,640
i'll be open for any questions that are

1668
01:11:02,640 --> 01:11:04,719
that you may have

1669
01:11:04,719 --> 01:11:07,040
linda

1670
01:11:08,960 --> 01:11:11,679
question about this ensuing ram versus

1671
01:11:11,679 --> 01:11:14,800
in sixth rank um are they

1672
01:11:14,800 --> 01:11:17,600
one domain segment running domain or

1673
01:11:17,600 --> 01:11:18,880
separate

1674
01:11:18,880 --> 01:11:20,560
they are separate domains you want to

1675
01:11:20,560 --> 01:11:22,000
think of them as

1676
01:11:22,000 --> 01:11:24,800
they are two separate vrf like instances

1677
01:11:24,800 --> 01:11:26,719
that are configured on a

1678
01:11:26,719 --> 01:11:28,239
on a router

1679
01:11:28,239 --> 01:11:30,320
think of it as a provider as routers and

1680
01:11:30,320 --> 01:11:32,320
in that sense they are two separate

1681
01:11:32,320 --> 01:11:33,760
domains

1682
01:11:33,760 --> 01:11:35,600
so because they use different address

1683
01:11:35,600 --> 01:11:38,560
space right in n3 ran the address space

1684
01:11:38,560 --> 01:11:41,920
is genome b and upf that's the address

1685
01:11:41,920 --> 01:11:43,679
because in between them they have gtp

1686
01:11:43,679 --> 01:11:47,440
tunnels and then after with n6 that's

1687
01:11:47,440 --> 01:11:49,679
the client route so they're very

1688
01:11:49,679 --> 01:11:52,400
completely different so how do you

1689
01:11:52,400 --> 01:11:54,560
merge them together

1690
01:11:54,560 --> 01:11:56,960
there is an architecture draft that

1691
01:11:56,960 --> 01:11:59,600
talks about it very nicely

1692
01:11:59,600 --> 01:12:01,440
i can forward that to the working group

1693
01:12:01,440 --> 01:12:04,239
as well but it defines the rule sets to

1694
01:12:04,239 --> 01:12:06,640
say how the routing information is

1695
01:12:06,640 --> 01:12:07,760
stitched

1696
01:12:07,760 --> 01:12:09,679
across um

1697
01:12:09,679 --> 01:12:12,400
different vrf's as and when or different

1698
01:12:12,400 --> 01:12:14,080
routing instances as and when you want

1699
01:12:14,080 --> 01:12:16,719
to forward the traffic towards yeah

1700
01:12:16,719 --> 01:12:18,239
okay thank you

1701
01:12:18,239 --> 01:12:19,920
that's in the dnn

1702
01:12:19,920 --> 01:12:21,280
document yes

1703
01:12:21,280 --> 01:12:23,920
yes srv6 map architecture

1704
01:12:23,920 --> 01:12:25,360
okay

1705
01:12:25,360 --> 01:12:27,759
thank you

1706
01:12:28,000 --> 01:12:29,840
there is a question here in the room

1707
01:12:29,840 --> 01:12:33,280
yeah luigi is this srb6 specific only

1708
01:12:33,280 --> 01:12:35,600
it starts with a service

1709
01:12:35,600 --> 01:12:38,239
a specific forwarding claim

1710
01:12:38,239 --> 01:12:41,280
but the bgp procedures are universal and

1711
01:12:41,280 --> 01:12:44,880
can be applied um to the mpls there is

1712
01:12:44,880 --> 01:12:47,120
an mpls draft also as a forwarding plane

1713
01:12:47,120 --> 01:12:49,280
that comes through

1714
01:12:49,280 --> 01:12:52,080
uh when uh we're matrix uh nokia my

1715
01:12:52,080 --> 01:12:54,159
question is uh what is the goal of this

1716
01:12:54,159 --> 01:12:56,960
draft and is street vp somehow going to

1717
01:12:56,960 --> 01:12:59,360
adopt this because today can you can you

1718
01:12:59,360 --> 01:13:01,360
speak a little louder i'm so sorry

1719
01:13:01,360 --> 01:13:03,120
uh my question is what is the goal of

1720
01:13:03,120 --> 01:13:05,840
this draft given that 3gbp owns the

1721
01:13:05,840 --> 01:13:08,400
architecture of 5g typically are they

1722
01:13:08,400 --> 01:13:10,560
trying to incorporate this

1723
01:13:10,560 --> 01:13:13,199
architecture in their specification no

1724
01:13:13,199 --> 01:13:14,480
because

1725
01:13:14,480 --> 01:13:17,199
i haven't as part of defining this drop

1726
01:13:17,199 --> 01:13:18,880
i haven't done any modifications through

1727
01:13:18,880 --> 01:13:22,400
3gpp what we have done is universally

1728
01:13:22,400 --> 01:13:25,360
defined bgp as a mechanism to build

1729
01:13:25,360 --> 01:13:28,159
a fabric or a control plane in a manner

1730
01:13:28,159 --> 01:13:30,239
that the packets would be carried from

1731
01:13:30,239 --> 01:13:32,719
ran into the data networks

1732
01:13:32,719 --> 01:13:35,120
so i believe this is a standalone draft

1733
01:13:35,120 --> 01:13:37,440
it has vpn like semantics that is one of

1734
01:13:37,440 --> 01:13:39,840
the reasons i have brought it to best

1735
01:13:39,840 --> 01:13:42,800
because best deals with services

1736
01:13:42,800 --> 01:13:44,640
but you're i so you're only for i

1737
01:13:44,640 --> 01:13:46,239
haven't read into all the details you're

1738
01:13:46,239 --> 01:13:48,640
only discussing the connectivity between

1739
01:13:48,640 --> 01:13:51,520
the radio and the upf and then upf

1740
01:13:51,520 --> 01:13:53,679
but not the the so you're not trying to

1741
01:13:53,679 --> 01:13:55,920
replace the signaling of gtp that they

1742
01:13:55,920 --> 01:13:57,600
are using between

1743
01:13:57,600 --> 01:13:59,440
the radio and the upf

1744
01:13:59,440 --> 01:14:02,960
not replacing the signaling but can be

1745
01:14:02,960 --> 01:14:05,440
encompassing the signaling from gtp to

1746
01:14:05,440 --> 01:14:07,199
srv6 which is defined in the

1747
01:14:07,199 --> 01:14:10,719
architecture draft but this draft relies

1748
01:14:10,719 --> 01:14:12,640
on the procedures that are defined in

1749
01:14:12,640 --> 01:14:14,000
the architecture drop to do an

1750
01:14:14,000 --> 01:14:15,600
appropriate conversion

1751
01:14:15,600 --> 01:14:17,920
here we have defined bgp as a fabric

1752
01:14:17,920 --> 01:14:20,239
that makes sure how does it work

1753
01:14:20,239 --> 01:14:21,920
and interwork

1754
01:14:21,920 --> 01:14:23,120
between the

1755
01:14:23,120 --> 01:14:25,840
rams as well as the dns that is the data

1756
01:14:25,840 --> 01:14:28,840
networks

1757
01:14:30,000 --> 01:14:31,520
okay

1758
01:14:31,520 --> 01:14:33,280
you have a question

1759
01:14:33,280 --> 01:14:35,920
i'm sure um i'm here i was wondering you

1760
01:14:35,920 --> 01:14:38,719
know with the 3gpp have you had has

1761
01:14:38,719 --> 01:14:41,199
there been like a maybe a gap analysis

1762
01:14:41,199 --> 01:14:43,360
or problem statement of

1763
01:14:43,360 --> 01:14:46,960
of what was uh in the existing

1764
01:14:46,960 --> 01:14:49,920
3gpp architecture

1765
01:14:49,920 --> 01:14:52,480
what gap existed or was it actually

1766
01:14:52,480 --> 01:14:55,040
mainly ietf technologies and new

1767
01:14:55,040 --> 01:14:56,719
technologies let's say like network

1768
01:14:56,719 --> 01:14:59,679
slicing and srv6 or whatnot it has

1769
01:14:59,679 --> 01:15:01,760
actually driven

1770
01:15:01,760 --> 01:15:04,800
the development of this new solution yes

1771
01:15:04,800 --> 01:15:07,040
so again um thank you for the question

1772
01:15:07,040 --> 01:15:08,159
again

1773
01:15:08,159 --> 01:15:10,640
i thought i described it well in the

1774
01:15:10,640 --> 01:15:13,600
motivations part of the draft early on

1775
01:15:13,600 --> 01:15:15,760
the motivations are that there is no bgp

1776
01:15:15,760 --> 01:15:18,800
based mechanism or a fabric that can

1777
01:15:18,800 --> 01:15:21,360
achieve this the draft's goal is to use

1778
01:15:21,360 --> 01:15:23,520
bgp as a fabric to build where you can

1779
01:15:23,520 --> 01:15:25,840
translate a service 6 to gtp

1780
01:15:25,840 --> 01:15:27,920
and that is the motivation one of the

1781
01:15:27,920 --> 01:15:30,159
reasons again i will repeat

1782
01:15:30,159 --> 01:15:32,320
but i will be quick is that bringing it

1783
01:15:32,320 --> 01:15:34,640
to best because it has a vpn semantics

1784
01:15:34,640 --> 01:15:36,640
it has a services like semantics it's a

1785
01:15:36,640 --> 01:15:38,560
great place to bring it in that's one of

1786
01:15:38,560 --> 01:15:40,560
the reasons why we presented it here and

1787
01:15:40,560 --> 01:15:43,920
i think it belongs here

1788
01:15:43,920 --> 01:15:44,960
thank you

1789
01:15:44,960 --> 01:15:46,400
okay

1790
01:15:46,400 --> 01:15:48,799
thank you

1791
01:15:49,600 --> 01:15:53,480
next picture is mesh

1792
01:15:58,719 --> 01:16:01,440
all right uh this is mahesh nandani and

1793
01:16:01,440 --> 01:16:04,880
i'm going to talk about the srv6

1794
01:16:04,880 --> 01:16:06,320
map

1795
01:16:06,320 --> 01:16:08,880
you got the introduction from ku

1796
01:16:08,880 --> 01:16:11,840
and i did post this draft actually

1797
01:16:11,840 --> 01:16:14,159
this morning into the best working group

1798
01:16:14,159 --> 01:16:15,920
sorry for that confusion

1799
01:16:15,920 --> 01:16:16,800
i

1800
01:16:16,800 --> 01:16:18,800
should have done it before the cutoff

1801
01:16:18,800 --> 01:16:21,440
but we posted it the wrong working group

1802
01:16:21,440 --> 01:16:24,320
next slide please

1803
01:16:24,480 --> 01:16:29,120
all right so um as ku talked about

1804
01:16:29,120 --> 01:16:30,560
his route

1805
01:16:30,560 --> 01:16:33,040
this particular yang model is talking

1806
01:16:33,040 --> 01:16:35,360
about the configuration aspect of bgp

1807
01:16:35,360 --> 01:16:37,440
and i'll come to that in a minute for

1808
01:16:37,440 --> 01:16:40,000
the mobile user plane

1809
01:16:40,000 --> 01:16:42,320
again it aligns with the

1810
01:16:42,320 --> 01:16:44,880
srv6 map architecture draft being

1811
01:16:44,880 --> 01:16:47,679
discussed in the dmm working group

1812
01:16:47,679 --> 01:16:49,760
which basically integrates the mobile

1813
01:16:49,760 --> 01:16:52,960
sessions as ku talked about

1814
01:16:52,960 --> 01:16:55,520
into ip

1815
01:16:55,520 --> 01:16:56,640
information

1816
01:16:56,640 --> 01:16:59,040
and it uses srv6

1817
01:16:59,040 --> 01:17:01,280
to specify the source routes

1818
01:17:01,280 --> 01:17:02,480
to and from

1819
01:17:02,480 --> 01:17:04,719
the mobile node

1820
01:17:04,719 --> 01:17:06,800
the architecture draft does recommend

1821
01:17:06,800 --> 01:17:08,480
the use of bgp

1822
01:17:08,480 --> 01:17:11,040
and therefore we have used bgp

1823
01:17:11,040 --> 01:17:13,120
in this particular yang model

1824
01:17:13,120 --> 01:17:14,320
and

1825
01:17:14,320 --> 01:17:17,440
as ko mentioned there's the new safy

1826
01:17:17,440 --> 01:17:19,679
that he has introduced as part of that

1827
01:17:19,679 --> 01:17:21,920
draft which is what we are going to use

1828
01:17:21,920 --> 01:17:25,120
in this particular yang model also

1829
01:17:25,120 --> 01:17:26,000
um

1830
01:17:26,000 --> 01:17:29,560
next slide please

1831
01:17:30,239 --> 01:17:31,120
so

1832
01:17:31,120 --> 01:17:31,840
uh

1833
01:17:31,840 --> 01:17:33,679
let's talk a little bit about what is

1834
01:17:33,679 --> 01:17:36,719
the actual model doing it's augmenting

1835
01:17:36,719 --> 01:17:37,840
the current

1836
01:17:37,840 --> 01:17:40,800
uh existing bgp yang model in the idea

1837
01:17:40,800 --> 01:17:42,159
working group

1838
01:17:42,159 --> 01:17:45,280
and it adds a srv6

1839
01:17:45,280 --> 01:17:48,800
a particular node at a global level

1840
01:17:48,800 --> 01:17:51,760
and inside that particular container or

1841
01:17:51,760 --> 01:17:54,960
node we all add the map capability for

1842
01:17:54,960 --> 01:17:55,920
both

1843
01:17:55,920 --> 01:17:59,520
uplink and downlink configuration

1844
01:17:59,520 --> 01:18:03,120
in addition to the base bjp engmall it

1845
01:18:03,120 --> 01:18:06,000
also augments the bgp policy model

1846
01:18:06,000 --> 01:18:06,719
for

1847
01:18:06,719 --> 01:18:09,280
a defined set it

1848
01:18:09,280 --> 01:18:10,960
in this particular case and interface

1849
01:18:10,960 --> 01:18:14,800
sets and it add adds both a match and a

1850
01:18:14,800 --> 01:18:17,280
set options i'm not in

1851
01:18:17,280 --> 01:18:19,360
bringing up the tree diagram here i

1852
01:18:19,360 --> 01:18:21,840
think that would be better served by

1853
01:18:21,840 --> 01:18:24,239
reading the draft or the young model 3

1854
01:18:24,239 --> 01:18:25,760
itself

1855
01:18:25,760 --> 01:18:28,640
next slide please

1856
01:18:30,480 --> 01:18:32,719
right so um

1857
01:18:32,719 --> 01:18:35,760
essentially we have gone through one cut

1858
01:18:35,760 --> 01:18:38,640
of the yang model and we made sure that

1859
01:18:38,640 --> 01:18:39,840
it

1860
01:18:39,840 --> 01:18:42,719
validates it compiles

1861
01:18:42,719 --> 01:18:45,040
but we do expect a revision

1862
01:18:45,040 --> 01:18:48,239
not only of the model but also the draft

1863
01:18:48,239 --> 01:18:50,560
and in particular we're going to focus

1864
01:18:50,560 --> 01:18:52,840
on an example

1865
01:18:52,840 --> 01:18:55,360
of for how

1866
01:18:55,360 --> 01:18:58,080
it could be used for configuration

1867
01:18:58,080 --> 01:18:59,920
it will be updating the security

1868
01:18:59,920 --> 01:19:02,960
consideration section for the draft

1869
01:19:02,960 --> 01:19:03,920
and

1870
01:19:03,920 --> 01:19:05,440
and this is a question to the working

1871
01:19:05,440 --> 01:19:07,600
group as feedback is

1872
01:19:07,600 --> 01:19:08,480
what

1873
01:19:08,480 --> 01:19:10,159
operational data

1874
01:19:10,159 --> 01:19:12,239
would they like to see

1875
01:19:12,239 --> 01:19:15,040
being modeled as part of the model

1876
01:19:15,040 --> 01:19:17,440
and i think that's pretty much my last

1877
01:19:17,440 --> 01:19:19,199
slide

1878
01:19:19,199 --> 01:19:22,599
any questions

1879
01:19:25,920 --> 01:19:28,960
we don't have any questions

1880
01:19:30,000 --> 01:19:32,159
thank you

1881
01:19:32,159 --> 01:19:35,879
next speaker is

1882
01:19:41,199 --> 01:19:44,080
and

1883
01:19:48,840 --> 01:19:54,159
i need to check where are your slides

1884
01:19:58,880 --> 01:20:01,440
okay yeah

1885
01:20:02,239 --> 01:20:05,839
okay you can go ahead

1886
01:20:13,120 --> 01:20:16,679
hang with continue

1887
01:20:41,600 --> 01:20:43,600
could you send me a message you are able

1888
01:20:43,600 --> 01:20:44,719
to ask

1889
01:20:44,719 --> 01:20:47,840
because we are not able to hear you

1890
01:20:47,840 --> 01:20:51,960
you may have to kick out

1891
01:21:05,120 --> 01:21:06,320
okay

1892
01:21:06,320 --> 01:21:08,800
so we are not able to

1893
01:21:08,800 --> 01:21:11,440
get you

1894
01:21:11,440 --> 01:21:13,760
uh so we will move in the main time to

1895
01:21:13,760 --> 01:21:16,639
the next pair

1896
01:21:16,880 --> 01:21:18,480
let's tell do you want to go with your

1897
01:21:18,480 --> 01:21:21,120
presentation

1898
01:21:24,080 --> 01:21:26,320
let me just

1899
01:21:26,320 --> 01:21:29,840
open your slides

1900
01:21:55,679 --> 01:21:56,880
and

1901
01:21:56,880 --> 01:21:59,199
whether the service providers like it or

1902
01:21:59,199 --> 01:22:01,360
not and if you look at the bottom line

1903
01:22:01,360 --> 01:22:03,120
of those discussions it's always

1904
01:22:03,120 --> 01:22:04,480
something like

1905
01:22:04,480 --> 01:22:07,920
uh ipv6 is giving us a lot of hassle

1906
01:22:07,920 --> 01:22:09,360
because

1907
01:22:09,360 --> 01:22:10,960
we have no control on the address we

1908
01:22:10,960 --> 01:22:14,159
have no control on who is who

1909
01:22:14,159 --> 01:22:17,360
and that really boils down to neighbor

1910
01:22:17,360 --> 01:22:19,199
discovery and the way addresses are

1911
01:22:19,199 --> 01:22:22,320
formed with uh auto configuration

1912
01:22:22,320 --> 01:22:23,440
and so

1913
01:22:23,440 --> 01:22:26,719
if you can go to the next slide please

1914
01:22:27,199 --> 01:22:31,280
yeah compared to ipv4 which are

1915
01:22:31,280 --> 01:22:33,520
you know what everybody operates

1916
01:22:33,520 --> 01:22:36,560
ipv6 is different it

1917
01:22:36,560 --> 01:22:38,400
it's very clear it has

1918
01:22:38,400 --> 01:22:41,040
very observable difference which impact

1919
01:22:41,040 --> 01:22:43,679
the way the network can be operated

1920
01:22:43,679 --> 01:22:46,639
with v4 we had phdp

1921
01:22:46,639 --> 01:22:50,159
one address per node the dhcp flow was

1922
01:22:50,159 --> 01:22:52,719
observable you could see the the request

1923
01:22:52,719 --> 01:22:55,280
coming in the response coming back you

1924
01:22:55,280 --> 01:22:57,760
could snoop far from it and know uh

1925
01:22:57,760 --> 01:22:59,600
which mac address basically that's what

1926
01:22:59,600 --> 01:23:01,840
the service providers many use

1927
01:23:01,840 --> 01:23:03,120
um

1928
01:23:03,120 --> 01:23:06,400
obviously six the uid but basically who

1929
01:23:06,400 --> 01:23:08,639
owns uh which it trusts and usually

1930
01:23:08,639 --> 01:23:11,280
there was one ip address per node so

1931
01:23:11,280 --> 01:23:14,639
that made the the network side

1932
01:23:14,639 --> 01:23:16,159
of the operation

1933
01:23:16,159 --> 01:23:19,760
kind of simple here deterministic

1934
01:23:19,760 --> 01:23:21,440
and another thing which comes with dhcp

1935
01:23:21,440 --> 01:23:22,960
is the fact that for each address that's

1936
01:23:22,960 --> 01:23:25,520
been performed on the network given to a

1937
01:23:25,520 --> 01:23:27,920
device you could say

1938
01:23:27,920 --> 01:23:30,159
how long at most it's going to stay on

1939
01:23:30,159 --> 01:23:32,159
the network so either it's refreshed or

1940
01:23:32,159 --> 01:23:32,840
it's

1941
01:23:32,840 --> 01:23:36,480
gone next slide please

1942
01:23:37,760 --> 01:23:40,480
and and with v6 and more specifically

1943
01:23:40,480 --> 01:23:42,800
with stateless advanced configuration

1944
01:23:42,800 --> 01:23:45,360
all this is gone

1945
01:23:45,360 --> 01:23:46,239
the

1946
01:23:46,239 --> 01:23:48,400
it's basically the concept that a node

1947
01:23:48,400 --> 01:23:50,560
can form any address and as many

1948
01:23:50,560 --> 01:23:52,639
addresses it lacks

1949
01:23:52,639 --> 01:23:54,400
without fully asking the network if it

1950
01:23:54,400 --> 01:23:55,920
can do that

1951
01:23:55,920 --> 01:23:59,040
and without retelling the network

1952
01:23:59,040 --> 01:24:00,840
how long it's going to use that

1953
01:24:00,840 --> 01:24:03,280
address uh when the address can be

1954
01:24:03,280 --> 01:24:04,960
deprecated if there is any state in the

1955
01:24:04,960 --> 01:24:06,960
network associated to that address so

1956
01:24:06,960 --> 01:24:08,719
it's it's all linked to the fact that

1957
01:24:08,719 --> 01:24:10,800
the expectation is the network has a

1958
01:24:10,800 --> 01:24:13,520
cache of the addresses and it can do

1959
01:24:13,520 --> 01:24:15,280
least recently used and that's going to

1960
01:24:15,280 --> 01:24:16,880
work

1961
01:24:16,880 --> 01:24:19,120
and well the guys at nano they just ate

1962
01:24:19,120 --> 01:24:21,199
that for some reason and in fact uh

1963
01:24:21,199 --> 01:24:24,159
enterprise networks uh hate that as well

1964
01:24:24,159 --> 01:24:26,480
because for everything we build and vpn

1965
01:24:26,480 --> 01:24:28,719
is no exception we are meant maintaining

1966
01:24:28,719 --> 01:24:31,520
more and more stent in the network

1967
01:24:31,520 --> 01:24:32,800
so

1968
01:24:32,800 --> 01:24:35,440
the desire on one direction is what the

1969
01:24:35,440 --> 01:24:37,280
android android guys will tell you they

1970
01:24:37,280 --> 01:24:39,120
don't want to support the hdb

1971
01:24:39,120 --> 01:24:41,040
um

1972
01:24:41,040 --> 01:24:42,960
they they just want to be able to use

1973
01:24:42,960 --> 01:24:45,199
and claim any address they want and if

1974
01:24:45,199 --> 01:24:46,960
anything goes wrong it's the fault of

1975
01:24:46,960 --> 01:24:49,520
the network it's never the fault

1976
01:24:49,520 --> 01:24:52,159
of the of the user asking too many

1977
01:24:52,159 --> 01:24:53,679
addresses or doing wrong things within

1978
01:24:53,679 --> 01:24:55,199
the class always the fault of the

1979
01:24:55,199 --> 01:24:56,239
network

1980
01:24:56,239 --> 01:24:57,040
the

1981
01:24:57,040 --> 01:24:58,880
master is the device

1982
01:24:58,880 --> 01:25:00,320
well when you're network operator

1983
01:25:00,320 --> 01:25:02,880
corporate network admin or what

1984
01:25:02,880 --> 01:25:05,040
uh it's it's not what you want you you

1985
01:25:05,040 --> 01:25:06,800
basically want

1986
01:25:06,800 --> 01:25:08,639
at least some control on on the

1987
01:25:08,639 --> 01:25:10,639
addresses because at some point

1988
01:25:10,639 --> 01:25:13,120
um you may be asked who is behind this

1989
01:25:13,120 --> 01:25:14,560
address you may be

1990
01:25:14,560 --> 01:25:15,440
uh

1991
01:25:15,440 --> 01:25:17,600
you you may be

1992
01:25:17,600 --> 01:25:19,679
forced to to provide some services for

1993
01:25:19,679 --> 01:25:21,040
which you have to deploy resources

1994
01:25:21,040 --> 01:25:24,719
associated with addresses so

1995
01:25:24,719 --> 01:25:26,080
just to be able to have the proper

1996
01:25:26,080 --> 01:25:28,800
resources deployed to face the the need

1997
01:25:28,800 --> 01:25:30,800
of the network you need you need to be

1998
01:25:30,800 --> 01:25:32,880
able to have some control on it say hey

1999
01:25:32,880 --> 01:25:34,400
you can't have more addresses than that

2000
01:25:34,400 --> 01:25:36,480
you're already using too much of that

2001
01:25:36,480 --> 01:25:38,880
or uh who's this guy being this address

2002
01:25:38,880 --> 01:25:42,320
uh can i trust that it's not somebody uh

2003
01:25:42,320 --> 01:25:43,840
stealing this address and guess what

2004
01:25:43,840 --> 01:25:45,360
with stateless advance of the

2005
01:25:45,360 --> 01:25:46,960
configuration it's very very easy to

2006
01:25:46,960 --> 01:25:47,840
steal

2007
01:25:47,840 --> 01:25:49,920
no trust and just claim it and start

2008
01:25:49,920 --> 01:25:51,600
getting the traffic

2009
01:25:51,600 --> 01:25:54,080
the bottom line is the way this this

2010
01:25:54,080 --> 01:25:56,000
reactive protocol operates is completely

2011
01:25:56,000 --> 01:25:58,000
non-deterministic the network cannot

2012
01:25:58,000 --> 01:25:58,960
build

2013
01:25:58,960 --> 01:26:01,280
a clear view on which addresses are

2014
01:26:01,280 --> 01:26:04,080
present on the network which devices on

2015
01:26:04,080 --> 01:26:06,560
which centers you don't necessarily know

2016
01:26:06,560 --> 01:26:08,639
when it's formed and you definitely

2017
01:26:08,639 --> 01:26:12,400
don't know when it stops being used

2018
01:26:12,480 --> 01:26:13,600
and

2019
01:26:13,600 --> 01:26:17,120
this is the major cause of broadcast uh

2020
01:26:17,120 --> 01:26:19,920
and unknown and multicast traffic

2021
01:26:19,920 --> 01:26:22,880
in in the network because basically this

2022
01:26:22,880 --> 01:26:24,880
this cache based reactive operation

2023
01:26:24,880 --> 01:26:27,199
forces the network to look up anything

2024
01:26:27,199 --> 01:26:29,840
that's not known

2025
01:26:29,840 --> 01:26:30,719
so

2026
01:26:30,719 --> 01:26:31,679
yeah

2027
01:26:31,679 --> 01:26:33,280
auto configuration could be very fine

2028
01:26:33,280 --> 01:26:35,199
having the devices for instance if you

2029
01:26:35,199 --> 01:26:37,440
think of this this cluster of servers

2030
01:26:37,440 --> 01:26:40,320
and the devops deploying stuff

2031
01:26:40,320 --> 01:26:42,480
they they really might like to have auto

2032
01:26:42,480 --> 01:26:44,960
conf like the device such as which drive

2033
01:26:44,960 --> 01:26:46,719
some prefix gonna use

2034
01:26:46,719 --> 01:26:48,080
and as long as it's doable on the

2035
01:26:48,080 --> 01:26:51,120
network yes network would say yes

2036
01:26:51,120 --> 01:26:52,639
but on the other hand there should be a

2037
01:26:52,639 --> 01:26:54,239
way to say no

2038
01:26:54,239 --> 01:26:56,239
and there must be a way to make sure

2039
01:26:56,239 --> 01:26:58,000
that you know exactly deterministically

2040
01:26:58,000 --> 01:27:01,600
which address is where in your network

2041
01:27:01,600 --> 01:27:05,000
looks like this

2042
01:27:05,040 --> 01:27:07,520
so um this slide basically

2043
01:27:07,520 --> 01:27:09,360
summarizes the kind of issues you get

2044
01:27:09,360 --> 01:27:10,480
with slack

2045
01:27:10,480 --> 01:27:12,320
uh slack doesn't tell you when there is

2046
01:27:12,320 --> 01:27:14,400
a movement slug does not

2047
01:27:14,400 --> 01:27:15,679
tell you

2048
01:27:15,679 --> 01:27:17,199
how long you're gonna use the the

2049
01:27:17,199 --> 01:27:19,440
address the only thing you can do for

2050
01:27:19,440 --> 01:27:21,760
slack is snoop the the dad basically and

2051
01:27:21,760 --> 01:27:23,280
tnd protocol

2052
01:27:23,280 --> 01:27:24,960
and that's very unreliable because it's

2053
01:27:24,960 --> 01:27:26,880
based on broadcast and you have some

2054
01:27:26,880 --> 01:27:28,400
wireless environment for instance you

2055
01:27:28,400 --> 01:27:30,320
might you might lose them with them

2056
01:27:30,320 --> 01:27:31,600
completely

2057
01:27:31,600 --> 01:27:33,360
and

2058
01:27:33,360 --> 01:27:34,719
the

2059
01:27:34,719 --> 01:27:37,040
the look at basically uh

2060
01:27:37,040 --> 01:27:39,600
is the only way to find a silent node

2061
01:27:39,600 --> 01:27:41,520
which means that you will have a a

2062
01:27:41,520 --> 01:27:43,679
broadcast through your fabric or you

2063
01:27:43,679 --> 01:27:46,000
won't be able to serve that type of node

2064
01:27:46,000 --> 01:27:47,840
the whole concept of sign up node is

2065
01:27:47,840 --> 01:27:49,520
something that we don't want we want to

2066
01:27:49,520 --> 01:27:51,679
make sure we have a state for everything

2067
01:27:51,679 --> 01:27:53,760
uh that's present on the network and

2068
01:27:53,760 --> 01:27:56,000
basically slack is the major cause for

2069
01:27:56,000 --> 01:27:57,280
not knowing that

2070
01:27:57,280 --> 01:27:59,440
the result is the number of enterprise

2071
01:27:59,440 --> 01:28:01,199
networks won't

2072
01:28:01,199 --> 01:28:03,440
support uh slack they will only support

2073
01:28:03,440 --> 01:28:05,520
the hcp and guess what android does the

2074
01:28:05,520 --> 01:28:08,159
reverse they only support slack

2075
01:28:08,159 --> 01:28:10,080
so at the end of the day uh you can't

2076
01:28:10,080 --> 01:28:12,639
survive ipv6 android devices on

2077
01:28:12,639 --> 01:28:14,639
an enterprise network

2078
01:28:14,639 --> 01:28:17,440
next slide please

2079
01:28:19,040 --> 01:28:21,040
so yeah i mean that that was the status

2080
01:28:21,040 --> 01:28:23,600
20 years ago she realized ipv6 is 25

2081
01:28:23,600 --> 01:28:26,639
years ago ipv4 is 40 years ago

2082
01:28:26,639 --> 01:28:29,440
from the perspective of 2020 both are

2083
01:28:29,440 --> 01:28:32,080
all protocols the difference is ipv6 has

2084
01:28:32,080 --> 01:28:33,440
evolved

2085
01:28:33,440 --> 01:28:35,600
it has evolved because of srv6 it has

2086
01:28:35,600 --> 01:28:37,600
evolved because of the iot not because

2087
01:28:37,600 --> 01:28:39,520
of the mainstream ipv6 but it has

2088
01:28:39,520 --> 01:28:40,639
evolved

2089
01:28:40,639 --> 01:28:44,159
and in particular this concept of

2090
01:28:44,159 --> 01:28:46,800
the bad aspect of the sl in slack has

2091
01:28:46,800 --> 01:28:48,600
been addressed it's been addressed by

2092
01:28:48,600 --> 01:28:50,239
rfc8505

2093
01:28:50,239 --> 01:28:52,639
which basically is kind of a reverse

2094
01:28:52,639 --> 01:28:54,159
dhcp

2095
01:28:54,159 --> 01:28:56,639
it's the device that sits on the phone

2096
01:28:56,639 --> 01:28:58,719
it says network and it won't be able to

2097
01:28:58,719 --> 01:28:59,679
trust

2098
01:28:59,679 --> 01:29:02,480
and the network says yes or no

2099
01:29:02,480 --> 01:29:05,199
for many good reasons like duplication

2100
01:29:05,199 --> 01:29:07,920
this takes itp off the picture you put

2101
01:29:07,920 --> 01:29:08,840
any

2102
01:29:08,840 --> 01:29:11,920
podcast uh but for the rh life coming

2103
01:29:11,920 --> 01:29:13,520
from the network the device but

2104
01:29:13,520 --> 01:29:16,080
basically you you go up hm here the

2105
01:29:16,080 --> 01:29:17,360
multicast

2106
01:29:17,360 --> 01:29:19,840
uh operations which are related to the

2107
01:29:19,840 --> 01:29:22,239
neighbor discovery stateless operation

2108
01:29:22,239 --> 01:29:23,520
all this is gone

2109
01:29:23,520 --> 01:29:26,320
you get the stateful observable exchange

2110
01:29:26,320 --> 01:29:29,199
between the device and the network

2111
01:29:29,199 --> 01:29:31,600
and based on that we can effectively

2112
01:29:31,600 --> 01:29:34,639
build a reliable stateful deterministic

2113
01:29:34,639 --> 01:29:37,040
state to evpn because now we know

2114
01:29:37,040 --> 01:29:39,120
exactly which ip addresses are present

2115
01:29:39,120 --> 01:29:41,360
on which device

2116
01:29:41,360 --> 01:29:45,040
and rfc89 weigh basically the security

2117
01:29:45,040 --> 01:29:47,840
of it basically making sure that

2118
01:29:47,840 --> 01:29:49,600
somebody who claims the trust wants to

2119
01:29:49,600 --> 01:29:50,840
use an easy

2120
01:29:50,840 --> 01:29:53,199
address is the owner it is the drive

2121
01:29:53,199 --> 01:29:54,800
that's already present in the network so

2122
01:29:54,800 --> 01:29:57,440
it's a kind of a port of ownership

2123
01:29:57,440 --> 01:29:59,120
based on auto configuration as well so

2124
01:29:59,120 --> 01:30:00,719
it's all about configuration you don't

2125
01:30:00,719 --> 01:30:02,880
need to care about it but basically when

2126
01:30:02,880 --> 01:30:04,320
you when you train for the first time in

2127
01:30:04,320 --> 01:30:05,840
addition to the network you're

2128
01:30:05,840 --> 01:30:07,360
associated with a token that you can

2129
01:30:07,360 --> 01:30:09,360
prove later so if you will

2130
01:30:09,360 --> 01:30:10,239
uh

2131
01:30:10,239 --> 01:30:12,480
or you re-register your drive and prove

2132
01:30:12,480 --> 01:30:15,360
you're the same guy as he did before

2133
01:30:15,360 --> 01:30:16,960
next slide please

2134
01:30:16,960 --> 01:30:19,360
pascal you have two minutes left

2135
01:30:19,360 --> 01:30:21,199
yeah so so

2136
01:30:21,199 --> 01:30:23,280
that's uh i'll be good

2137
01:30:23,280 --> 01:30:24,880
this is uh

2138
01:30:24,880 --> 01:30:26,239
basically the goal of this draft

2139
01:30:26,239 --> 01:30:28,719
basically enables to uh

2140
01:30:28,719 --> 01:30:31,199
use those rfc8505 and then line two up

2141
01:30:31,199 --> 01:30:34,480
to eight in the context of here

2142
01:30:34,480 --> 01:30:36,480
and so using the signals that come from

2143
01:30:36,480 --> 01:30:39,760
the whole we have a better tools for uh

2144
01:30:39,760 --> 01:30:42,560
sorting out duplication from any palette

2145
01:30:42,560 --> 01:30:44,400
from movement

2146
01:30:44,400 --> 01:30:46,239
we have a sequence contour for instance

2147
01:30:46,239 --> 01:30:48,560
that uh each time the device is saying

2148
01:30:48,560 --> 01:30:50,480
i'm here i'll get this address

2149
01:30:50,480 --> 01:30:52,000
and it says it moves it will have to do

2150
01:30:52,000 --> 01:30:53,600
that then we can sequence that we can

2151
01:30:53,600 --> 01:30:55,600
know exactly what is the location of

2152
01:30:55,600 --> 01:30:57,280
future drives which means that we can

2153
01:30:57,280 --> 01:31:02,159
know where to inject it in evpn

2154
01:31:06,560 --> 01:31:09,040
that can prove the ownership so somebody

2155
01:31:09,040 --> 01:31:10,639
goes on the other side of your african

2156
01:31:10,639 --> 01:31:13,120
network and says i have this interest

2157
01:31:13,120 --> 01:31:15,440
well you can validate you can say oh yes

2158
01:31:15,440 --> 01:31:17,440
he does or no he does not

2159
01:31:17,440 --> 01:31:20,159
looks like this

2160
01:31:20,880 --> 01:31:23,760
so here is uh between

2161
01:31:23,760 --> 01:31:26,080
the flow that that happens in that case

2162
01:31:26,080 --> 01:31:28,239
different shot of time i will go

2163
01:31:28,239 --> 01:31:29,600
relieve that but basically you have to

2164
01:31:29,600 --> 01:31:32,239
bring every address with a lifetime and

2165
01:31:32,239 --> 01:31:34,400
do that carefully to and when you move

2166
01:31:34,400 --> 01:31:36,480
you have to register it for for the same

2167
01:31:36,480 --> 01:31:37,920
location then we are signaling from

2168
01:31:37,920 --> 01:31:39,520
north carolina

2169
01:31:39,520 --> 01:31:42,080
next slide

2170
01:31:42,880 --> 01:31:45,520
so here is important how the the labor

2171
01:31:45,520 --> 01:31:47,920
discovery registration works

2172
01:31:47,920 --> 01:31:49,920
for for host that that the security

2173
01:31:49,920 --> 01:31:51,760
piece so you see there is a challenge

2174
01:31:51,760 --> 01:31:54,000
the north exchange and so many of the uh

2175
01:31:54,000 --> 01:31:56,000
the key pair that was auto configured by

2176
01:31:56,000 --> 01:31:57,040
the host

2177
01:31:57,040 --> 01:31:59,520
and that is used to generate the token

2178
01:31:59,520 --> 01:32:01,679
that the network will keep

2179
01:32:01,679 --> 01:32:04,400
next slide please

2180
01:32:05,040 --> 01:32:07,280
so yeah the draft has been stable for

2181
01:32:07,280 --> 01:32:09,440
one we got a

2182
01:32:09,440 --> 01:32:10,840
discussion by your

2183
01:32:10,840 --> 01:32:13,199
uh so

2184
01:32:13,199 --> 01:32:14,960
this this is the

2185
01:32:14,960 --> 01:32:16,880
uh

2186
01:32:16,880 --> 01:32:18,719
i mean

2187
01:32:18,719 --> 01:32:21,120
we are now ready for for adoption the

2188
01:32:21,120 --> 01:32:23,280
group is interested in following up with

2189
01:32:23,280 --> 01:32:24,840
this uh

2190
01:32:24,840 --> 01:32:27,040
another a number of other protocols i've

2191
01:32:27,040 --> 01:32:28,880
already had and that includes ripped

2192
01:32:28,880 --> 01:32:31,520
infants ripple and we also have uh

2193
01:32:31,520 --> 01:32:34,639
redistributed uh m505

2194
01:32:34,639 --> 01:32:37,120
to uh

2195
01:32:37,120 --> 01:32:38,280
rfc

2196
01:32:38,280 --> 01:32:40,960
8929 which is actually a labor discovery

2197
01:32:40,960 --> 01:32:43,199
property so you can interrupt classical

2198
01:32:43,199 --> 01:32:44,800
neighbor discovery with

2199
01:32:44,800 --> 01:32:45,600
uh

2200
01:32:45,600 --> 01:32:49,040
h505 using a nd plus

2201
01:32:49,040 --> 01:32:50,880
so yes i mean at this point i don't know

2202
01:32:50,880 --> 01:32:52,639
what to do but ask if you guys are

2203
01:32:52,639 --> 01:32:55,840
interested for other things

2204
01:33:00,560 --> 01:33:02,960
and that's it

2205
01:33:02,960 --> 01:33:05,679
thank you question

2206
01:33:05,840 --> 01:33:09,400
we are on the question

2207
01:33:10,239 --> 01:33:11,600
okay

2208
01:33:11,600 --> 01:33:14,080
let's try to resume with

2209
01:33:14,080 --> 01:33:17,080
hybrid

2210
01:33:22,159 --> 01:33:24,159
hello can you hear me

2211
01:33:24,159 --> 01:33:25,760
yes

2212
01:33:25,760 --> 01:33:27,840
okay

2213
01:33:27,840 --> 01:33:29,199
let me come here

2214
01:33:29,199 --> 01:33:31,040
this is our

2215
01:33:31,040 --> 01:33:33,440
our motivation

2216
01:33:33,440 --> 01:33:34,480
we

2217
01:33:34,480 --> 01:33:35,520
[Music]

2218
01:33:35,520 --> 01:33:35,840
is want

2219
01:33:35,840 --> 01:33:38,880
useful for 3d general it can receive

2220
01:33:38,880 --> 01:33:42,159
intensive resources for one side of the

2221
01:33:42,159 --> 01:33:44,239
butterfly specific network the

2222
01:33:44,239 --> 01:33:47,360
discriminator for each plc is

2223
01:33:47,360 --> 01:33:49,679
particularly particularly

2224
01:33:49,679 --> 01:33:52,080
which is a little bit of protective

2225
01:33:52,080 --> 01:33:53,679
impact

2226
01:33:53,679 --> 01:33:57,040
according there also communication idp

2227
01:33:57,040 --> 01:33:58,639
rather spf

2228
01:33:58,639 --> 01:34:01,440
network but it's not accepted by the

2229
01:34:01,440 --> 01:34:04,560
interior or inter domain general

2230
01:34:04,560 --> 01:34:07,440
next slide please

2231
01:34:08,800 --> 01:34:10,719
this is the first

2232
01:34:10,719 --> 01:34:13,360
first central that we want to resolve

2233
01:34:13,360 --> 01:34:16,560
this this center is our intro to me and

2234
01:34:16,560 --> 01:34:20,800
the service will use srv6be

2235
01:34:20,800 --> 01:34:24,719
it's a typical 3pm general the user see

2236
01:34:24,719 --> 01:34:28,239
we are single home to one access pe and

2237
01:34:28,239 --> 01:34:31,120
the service is multi-home that was

2238
01:34:31,120 --> 01:34:32,800
two service piece

2239
01:34:32,800 --> 01:34:35,600
uh the the user the accessory will

2240
01:34:35,600 --> 01:34:37,280
create a spfe

2241
01:34:37,280 --> 01:34:40,239
svme instead of pm session then they can

2242
01:34:40,239 --> 01:34:43,040
save the resources over smsp

2243
01:34:43,040 --> 01:34:45,280
each accent key

2244
01:34:45,280 --> 01:34:48,080
now we are correct we will create a spf

2245
01:34:48,080 --> 01:34:50,560
session the psh

2246
01:34:50,560 --> 01:34:51,760
will be

2247
01:34:51,760 --> 01:34:54,480
maybe very very huge

2248
01:34:54,480 --> 01:34:56,800
then the remote and each sql decision

2249
01:34:56,800 --> 01:34:59,920
will will use work many manual manually

2250
01:34:59,920 --> 01:35:03,360
convicted remote discriminators

2251
01:35:03,360 --> 01:35:04,560
and

2252
01:35:04,560 --> 01:35:08,239
and for srv6 service we may use sql

2253
01:35:08,239 --> 01:35:11,360
session to detect remote srv6 locator

2254
01:35:11,360 --> 01:35:12,400
prefix

2255
01:35:12,400 --> 01:35:14,800
rather than we can see that it also can

2256
01:35:14,800 --> 01:35:19,280
result we saw every receive resources

2257
01:35:19,280 --> 01:35:22,480
the next slide is

2258
01:35:24,239 --> 01:35:27,119
this is another general rule it's

2259
01:35:27,119 --> 01:35:29,199
it's very similar to the

2260
01:35:29,199 --> 01:35:32,400
previous one but uh the service now we

2261
01:35:32,400 --> 01:35:37,759
will use srv6 policy to for the service

2262
01:35:37,840 --> 01:35:41,320
next slide please

2263
01:35:42,239 --> 01:35:44,560
uh this is our solution

2264
01:35:44,560 --> 01:35:47,920
in our solution we want to reuse the vip

2265
01:35:47,920 --> 01:35:52,040
meter attribute also defined in rc

2266
01:35:52,040 --> 01:35:53,760
99026

2267
01:35:53,760 --> 01:35:55,199
it's the earlier the

2268
01:35:55,199 --> 01:35:56,639
type 38

2269
01:35:56,639 --> 01:36:00,000
attribute and we don't do any change to

2270
01:36:00,000 --> 01:36:01,280
spfd

2271
01:36:01,280 --> 01:36:04,159
and in our solution we are introduced

2272
01:36:04,159 --> 01:36:07,840
two new vip modes the first one is splv

2273
01:36:07,840 --> 01:36:10,800
for srv6 locator session the second one

2274
01:36:10,800 --> 01:36:14,080
is a spf for comment session

2275
01:36:14,080 --> 01:36:15,360
the first one

2276
01:36:15,360 --> 01:36:17,920
will be we will use it to detect the

2277
01:36:17,920 --> 01:36:21,440
srv6 locator prefix

2278
01:36:21,440 --> 01:36:22,480
in this

2279
01:36:22,480 --> 01:36:25,520
type wall the optional tov will contain

2280
01:36:25,520 --> 01:36:27,119
source ip address

2281
01:36:27,119 --> 01:36:30,000
it indicates the remote service remote

2282
01:36:30,000 --> 01:36:32,159
piece srv6 locator

2283
01:36:32,159 --> 01:36:35,760
but for the signal type the

2284
01:36:35,760 --> 01:36:38,719
session will use to detect remote roads

2285
01:36:38,719 --> 01:36:41,520
network also means the motor key the

2286
01:36:41,520 --> 01:36:42,960
tunnel endpoint

2287
01:36:42,960 --> 01:36:45,520
then and in this theory it will call

2288
01:36:45,520 --> 01:36:47,840
which will contain the remote

2289
01:36:47,840 --> 01:36:50,560
piece next hop address

2290
01:36:50,560 --> 01:36:53,840
next slide please

2291
01:36:55,600 --> 01:36:57,679
this is the procedures

2292
01:36:57,679 --> 01:36:58,639
for the

2293
01:36:58,639 --> 01:37:00,880
for the reflector

2294
01:37:00,880 --> 01:37:01,920
key

2295
01:37:01,920 --> 01:37:05,280
the ppvp roles will advertise with their

2296
01:37:05,280 --> 01:37:08,560
local dismantler carried in the vfd

2297
01:37:08,560 --> 01:37:11,520
designer attributes and the dfd model

2298
01:37:11,520 --> 01:37:14,239
will be set to one of the new modes we

2299
01:37:14,239 --> 01:37:16,080
have defined before

2300
01:37:16,080 --> 01:37:20,000
but for in initial initial initiator

2301
01:37:20,000 --> 01:37:22,560
the pld model where you will create you

2302
01:37:22,560 --> 01:37:25,199
the school creator the spf session when

2303
01:37:25,199 --> 01:37:27,679
when we receive the remote

2304
01:37:27,679 --> 01:37:29,520
piece discriminators

2305
01:37:29,520 --> 01:37:32,080
for type one we have for type one

2306
01:37:32,080 --> 01:37:35,440
mode we will create the set up recession

2307
01:37:35,440 --> 01:37:38,000
to detect the remote srv6

2308
01:37:38,000 --> 01:37:41,760
locator prefix under the for type 2

2309
01:37:41,760 --> 01:37:44,400
so we will use the asset tool detect

2310
01:37:44,400 --> 01:37:47,679
other mode endpoints

2311
01:37:47,679 --> 01:37:50,560
next time please

2312
01:37:50,800 --> 01:37:53,119
okay uh and also we have

2313
01:37:53,119 --> 01:37:55,440
uh do some more we have received some

2314
01:37:55,440 --> 01:37:58,000
comments in the middle east and we still

2315
01:37:58,000 --> 01:38:00,560
welcome more comments and discussions

2316
01:38:00,560 --> 01:38:03,280
and also later we may only we may revise

2317
01:38:03,280 --> 01:38:05,760
our jobs according to our summer

2318
01:38:05,760 --> 01:38:07,040
discussion

2319
01:38:07,040 --> 01:38:10,040
thanks

2320
01:38:16,480 --> 01:38:18,560
okay thank you

2321
01:38:18,560 --> 01:38:19,760
okay thank you

2322
01:38:19,760 --> 01:38:22,320
on the queue

2323
01:38:23,679 --> 01:38:25,520
okay and

2324
01:38:25,520 --> 01:38:29,560
we will retry with you

2325
01:38:41,600 --> 01:38:42,639
hang

2326
01:38:42,639 --> 01:38:45,840
we still don't tell you

2327
01:38:57,760 --> 01:39:01,520
frank do you want to say something

2328
01:39:01,920 --> 01:39:04,960
please unmute yourself

2329
01:39:11,119 --> 01:39:13,679
okay it's still uh

2330
01:39:13,679 --> 01:39:15,360
it's still not working we are not able

2331
01:39:15,360 --> 01:39:18,480
to hear your angle

2332
01:39:22,159 --> 01:39:23,840
so unfortunately we will have again to

2333
01:39:23,840 --> 01:39:26,960
move to the next uh to the next speaker

2334
01:39:26,960 --> 01:39:29,520
so next speaker is a fang

2335
01:39:29,520 --> 01:39:31,760
and if we have time at the end we can we

2336
01:39:31,760 --> 01:39:35,119
can recry again thank you

2337
01:39:37,760 --> 01:39:41,840
let me pop up the slides

2338
01:39:53,280 --> 01:39:55,199
thank um do you want to take over and

2339
01:39:55,199 --> 01:39:58,080
present your slides

2340
01:40:01,840 --> 01:40:05,639
please unmute yourself

2341
01:40:16,480 --> 01:40:19,480
on

2342
01:41:15,119 --> 01:41:16,960
okay it seems that we have issues with

2343
01:41:16,960 --> 01:41:19,840
both presenters

2344
01:41:20,480 --> 01:41:22,080
we can

2345
01:41:22,080 --> 01:41:24,159
somia do you want to take over and

2346
01:41:24,159 --> 01:41:25,600
present your

2347
01:41:25,600 --> 01:41:28,480
dampening backup slide

2348
01:41:28,480 --> 01:41:30,080
sure yeah

2349
01:41:30,080 --> 01:41:33,840
okay let me just pop up the slides

2350
01:41:38,960 --> 01:41:40,880
okay please go ahead

2351
01:41:40,880 --> 01:41:43,840
yeah hello everyone i'm back here again

2352
01:41:43,840 --> 01:41:46,080
so this was a draft which we did again

2353
01:41:46,080 --> 01:41:47,040
uh

2354
01:41:47,040 --> 01:41:48,800
around half a year back because of the

2355
01:41:48,800 --> 01:41:50,400
same reason we were not able to build so

2356
01:41:50,400 --> 01:41:51,520
i work with

2357
01:41:51,520 --> 01:41:52,880
aruba hp

2358
01:41:52,880 --> 01:41:55,280
and my co-authors vinayak and swati also

2359
01:41:55,280 --> 01:41:56,800
worked there

2360
01:41:56,800 --> 01:42:00,360
next site please

2361
01:42:01,280 --> 01:42:02,960
uh next slide please yeah you can have

2362
01:42:02,960 --> 01:42:05,199
this

2363
01:42:08,239 --> 01:42:11,760
so the problem statement here is

2364
01:42:11,760 --> 01:42:14,000
we have talked about mac dampening in

2365
01:42:14,000 --> 01:42:17,280
rfc 7432 which talks about

2366
01:42:17,280 --> 01:42:19,840
the dampening counts and the timer and

2367
01:42:19,840 --> 01:42:21,920
the mac moves observe within that right

2368
01:42:21,920 --> 01:42:24,239
that has already been talked in detail

2369
01:42:24,239 --> 01:42:26,159
and there was some portion

2370
01:42:26,159 --> 01:42:27,280
left

2371
01:42:27,280 --> 01:42:30,080
to implementation per se

2372
01:42:30,080 --> 01:42:33,199
uh including how do we handle with

2373
01:42:33,199 --> 01:42:35,840
uh the freezing of the mac

2374
01:42:35,840 --> 01:42:38,159
and how do we unfreeze it or deep freeze

2375
01:42:38,159 --> 01:42:40,840
it post and freezing do we freeze it

2376
01:42:40,840 --> 01:42:43,280
forever or

2377
01:42:43,280 --> 01:42:45,760
there is an organic way to

2378
01:42:45,760 --> 01:42:49,119
freeze unfreeze check it again and go on

2379
01:42:49,119 --> 01:42:50,719
i mean it's all

2380
01:42:50,719 --> 01:42:53,199
uh left to implementation

2381
01:42:53,199 --> 01:42:54,480
um

2382
01:42:54,480 --> 01:42:56,480
but i want to sort of

2383
01:42:56,480 --> 01:42:59,520
put forth uh

2384
01:42:59,520 --> 01:43:00,560
a

2385
01:43:00,560 --> 01:43:02,719
thoughts here where we want to

2386
01:43:02,719 --> 01:43:04,960
actually do something on that side as

2387
01:43:04,960 --> 01:43:06,320
well

2388
01:43:06,320 --> 01:43:07,679
right so

2389
01:43:07,679 --> 01:43:09,600
the the best option here would be to

2390
01:43:09,600 --> 01:43:12,239
freeze it forever but if no operator is

2391
01:43:12,239 --> 01:43:14,719
taking care of it right when sort of

2392
01:43:14,719 --> 01:43:16,320
it's frozen forever

2393
01:43:16,320 --> 01:43:17,920
it's it's down

2394
01:43:17,920 --> 01:43:21,119
down the drain strike and there is no

2395
01:43:21,119 --> 01:43:23,360
correction which is happening let's say

2396
01:43:23,360 --> 01:43:25,920
the time is non-deterministic here right

2397
01:43:25,920 --> 01:43:26,880
it

2398
01:43:26,880 --> 01:43:30,719
it would be okay to handle it in a

2399
01:43:30,719 --> 01:43:34,159
organic way where we want control plane

2400
01:43:34,159 --> 01:43:36,320
and say control plane but extensions to

2401
01:43:36,320 --> 01:43:38,480
control plane where we define

2402
01:43:38,480 --> 01:43:40,719
certain ways of

2403
01:43:40,719 --> 01:43:43,280
de-freezing and again running mac

2404
01:43:43,280 --> 01:43:45,679
damping on top of it as a complete

2405
01:43:45,679 --> 01:43:46,800
solution

2406
01:43:46,800 --> 01:43:47,679
so

2407
01:43:47,679 --> 01:43:49,119
this is what

2408
01:43:49,119 --> 01:43:51,199
we have been trying to propose here in

2409
01:43:51,199 --> 01:43:53,360
this draft it can be more of information

2410
01:43:53,360 --> 01:43:54,080
if

2411
01:43:54,080 --> 01:43:56,320
not standardized per se

2412
01:43:56,320 --> 01:43:59,199
so again as already discussed

2413
01:43:59,199 --> 01:44:01,679
the typical problems of

2414
01:44:01,679 --> 01:44:04,000
mac duplication or mac move per se which

2415
01:44:04,000 --> 01:44:06,480
leads to damping or dual map

2416
01:44:06,480 --> 01:44:08,719
configuration sorry

2417
01:44:08,719 --> 01:44:10,480
the mag configuration

2418
01:44:10,480 --> 01:44:13,119
um wrong configuration of match and

2419
01:44:13,119 --> 01:44:15,280
let's say two different vms in a dc

2420
01:44:15,280 --> 01:44:16,480
scenario

2421
01:44:16,480 --> 01:44:19,280
or um let's say in campus per se where

2422
01:44:19,280 --> 01:44:21,679
the where there is a rogue device

2423
01:44:21,679 --> 01:44:22,560
which is

2424
01:44:22,560 --> 01:44:25,040
mimicking two map maps we have two vtep

2425
01:44:25,040 --> 01:44:26,639
so that's very possible

2426
01:44:26,639 --> 01:44:28,480
so um

2427
01:44:28,480 --> 01:44:31,520
another case is of the loopy access side

2428
01:44:31,520 --> 01:44:34,400
client network where you have the client

2429
01:44:34,400 --> 01:44:36,560
side network where let's say the fabric

2430
01:44:36,560 --> 01:44:38,159
operator has no hole

2431
01:44:38,159 --> 01:44:39,360
so that's

2432
01:44:39,360 --> 01:44:42,560
it it would lead to a

2433
01:44:42,560 --> 01:44:43,920
relearning of

2434
01:44:43,920 --> 01:44:46,560
max at dynamic max dynamically learning

2435
01:44:46,560 --> 01:44:48,560
at two different weekends and this can

2436
01:44:48,560 --> 01:44:50,719
go on forever the stickiness of the mac

2437
01:44:50,719 --> 01:44:52,320
will also

2438
01:44:52,320 --> 01:44:55,440
not help because this loopy

2439
01:44:55,440 --> 01:44:56,400
uh

2440
01:44:56,400 --> 01:44:57,760
side network

2441
01:44:57,760 --> 01:45:00,960
won't i mean help you converge

2442
01:45:00,960 --> 01:45:03,440
right so um

2443
01:45:03,440 --> 01:45:05,199
that's where we are and you can move to

2444
01:45:05,199 --> 01:45:08,159
the next like this

2445
01:45:09,280 --> 01:45:11,600
so what we intend to define here is

2446
01:45:11,600 --> 01:45:14,400
something called a mac freeze timer

2447
01:45:14,400 --> 01:45:17,440
and a wrapper around mac dampening timer

2448
01:45:17,440 --> 01:45:19,199
which was defined and the mac dampening

2449
01:45:19,199 --> 01:45:20,800
counts which were already defined in

2450
01:45:20,800 --> 01:45:22,239
7432

2451
01:45:22,239 --> 01:45:23,360
and

2452
01:45:23,360 --> 01:45:26,000
have all of this under the same umbrella

2453
01:45:26,000 --> 01:45:29,600
called a mac dampening attribute set

2454
01:45:29,600 --> 01:45:32,000
and so essentially the

2455
01:45:32,000 --> 01:45:34,400
the aim here or the goal here is

2456
01:45:34,400 --> 01:45:35,440
to

2457
01:45:35,440 --> 01:45:38,719
um get to the duplicity as soon as

2458
01:45:38,719 --> 01:45:39,840
possible

2459
01:45:39,840 --> 01:45:41,840
if the operator hasn't taken control of

2460
01:45:41,840 --> 01:45:42,840
the

2461
01:45:42,840 --> 01:45:45,920
situation this may entail freezing the

2462
01:45:45,920 --> 01:45:47,760
map

2463
01:45:47,760 --> 01:45:49,760
for a longer duration then let's say an

2464
01:45:49,760 --> 01:45:51,840
earlier iteration when that can happen

2465
01:45:51,840 --> 01:45:56,000
and the map was frozen right or

2466
01:45:56,000 --> 01:45:58,560
and a combination of two that would help

2467
01:45:58,560 --> 01:46:01,440
us to elongate

2468
01:46:01,440 --> 01:46:04,400
the freezing time and reduce

2469
01:46:04,400 --> 01:46:05,199
the

2470
01:46:05,199 --> 01:46:07,679
duplicity detection time or the

2471
01:46:07,679 --> 01:46:10,639
damping timer here along with the count

2472
01:46:10,639 --> 01:46:13,840
in an organic way where we can

2473
01:46:13,840 --> 01:46:15,920
define the iteration so we can define

2474
01:46:15,920 --> 01:46:18,960
the complete package in one iteration

2475
01:46:18,960 --> 01:46:19,760
and

2476
01:46:19,760 --> 01:46:21,679
take it further

2477
01:46:21,679 --> 01:46:25,119
can you move to the next slide please

2478
01:46:25,600 --> 01:46:26,560
yeah

2479
01:46:26,560 --> 01:46:28,960
so this is how it works so we have these

2480
01:46:28,960 --> 01:46:30,880
three values under an umbrella when i

2481
01:46:30,880 --> 01:46:32,080
say um

2482
01:46:32,080 --> 01:46:34,639
one at one iteration it's an iteration

2483
01:46:34,639 --> 01:46:35,760
of

2484
01:46:35,760 --> 01:46:37,440
dampening detection

2485
01:46:37,440 --> 01:46:40,400
and freezing right and unfreezing on

2486
01:46:40,400 --> 01:46:42,480
this day

2487
01:46:42,480 --> 01:46:43,600
so

2488
01:46:43,600 --> 01:46:46,960
this whole bunch of procedures or the

2489
01:46:46,960 --> 01:46:49,760
two procedures can be put into

2490
01:46:49,760 --> 01:46:51,840
one iteration and can be tracked and

2491
01:46:51,840 --> 01:46:53,440
cached

2492
01:46:53,440 --> 01:46:55,600
instead of just going ahead and freezing

2493
01:46:55,600 --> 01:46:56,719
the mac

2494
01:46:56,719 --> 01:46:57,440
right

2495
01:46:57,440 --> 01:46:58,480
so

2496
01:46:58,480 --> 01:46:59,679
essentially

2497
01:46:59,679 --> 01:47:01,520
as we see here

2498
01:47:01,520 --> 01:47:04,560
in the slide that the nth iteration of

2499
01:47:04,560 --> 01:47:06,320
the mat damping time

2500
01:47:06,320 --> 01:47:08,719
can be a little lesser as compared to

2501
01:47:08,719 --> 01:47:11,840
the pre previous iteration the counts

2502
01:47:11,840 --> 01:47:13,600
can

2503
01:47:13,600 --> 01:47:14,719
increase

2504
01:47:14,719 --> 01:47:17,600
where we want to

2505
01:47:18,000 --> 01:47:20,159
have more number of counts within the

2506
01:47:20,159 --> 01:47:22,000
same iteration and also the freezing

2507
01:47:22,000 --> 01:47:24,320
timer the freeze timer can increase

2508
01:47:24,320 --> 01:47:27,440
where we may give ample opportunity or

2509
01:47:27,440 --> 01:47:29,920
provide appalachian opportunity

2510
01:47:29,920 --> 01:47:31,280
for the

2511
01:47:31,280 --> 01:47:33,280
admin to take care of it

2512
01:47:33,280 --> 01:47:35,040
take care of this problem situation if

2513
01:47:35,040 --> 01:47:36,880
not done in the within the organ

2514
01:47:36,880 --> 01:47:37,920
iteration

2515
01:47:37,920 --> 01:47:41,679
and this is how it proceeds so

2516
01:47:41,679 --> 01:47:43,040
yeah

2517
01:47:43,040 --> 01:47:44,800
this is the solution in the next slide

2518
01:47:44,800 --> 01:47:47,800
please

2519
01:47:50,000 --> 01:47:52,080
so with respect to time

2520
01:47:52,080 --> 01:47:53,840
and ft the

2521
01:47:53,840 --> 01:47:54,639
the

2522
01:47:54,639 --> 01:47:56,000
freeze timer

2523
01:47:56,000 --> 01:47:56,800
it

2524
01:47:56,800 --> 01:47:58,880
increases till infinity so eventually

2525
01:47:58,880 --> 01:48:01,840
you are going towards a complete freeze

2526
01:48:01,840 --> 01:48:04,560
but in an organic way you are going up

2527
01:48:04,560 --> 01:48:06,719
the blip and showing up and then

2528
01:48:06,719 --> 01:48:08,159
freezing again

2529
01:48:08,159 --> 01:48:10,960
whereas the dampening timer is

2530
01:48:10,960 --> 01:48:13,600
shortening enough to go into zero so

2531
01:48:13,600 --> 01:48:15,520
eventually we want both of these to

2532
01:48:15,520 --> 01:48:16,960
converge where

2533
01:48:16,960 --> 01:48:20,320
it leads to a complete freeze of mac

2534
01:48:20,320 --> 01:48:21,199
if

2535
01:48:21,199 --> 01:48:23,840
these intermediate stages or iterations

2536
01:48:23,840 --> 01:48:24,719
of

2537
01:48:24,719 --> 01:48:28,080
the whole solution doesn't work

2538
01:48:28,080 --> 01:48:31,800
next slide please

2539
01:48:32,000 --> 01:48:35,040
this is a sample example of the duke mac

2540
01:48:35,040 --> 01:48:36,800
and i have

2541
01:48:36,800 --> 01:48:40,320
given few examples wherein how the

2542
01:48:40,320 --> 01:48:42,320
the timer values and the count values

2543
01:48:42,320 --> 01:48:45,119
can be dealt with and even the deltas by

2544
01:48:45,119 --> 01:48:46,480
which these

2545
01:48:46,480 --> 01:48:49,199
uh variables are

2546
01:48:49,199 --> 01:48:52,080
addressed those also can be

2547
01:48:52,080 --> 01:48:54,560
addressed those also can alter within

2548
01:48:54,560 --> 01:48:56,080
each iteration

2549
01:48:56,080 --> 01:48:57,360
so

2550
01:48:57,360 --> 01:48:59,600
yeah please go through these details in

2551
01:48:59,600 --> 01:49:01,920
the draft and let me know

2552
01:49:01,920 --> 01:49:04,320
your views on this yeah and next next

2553
01:49:04,320 --> 01:49:06,799
like this

2554
01:49:07,119 --> 01:49:09,040
and backward compatibility since all

2555
01:49:09,040 --> 01:49:11,199
this is restricted to one diff one

2556
01:49:11,199 --> 01:49:13,280
device and there is no control plane

2557
01:49:13,280 --> 01:49:15,760
exchange i mean except the extended

2558
01:49:15,760 --> 01:49:18,400
community maximus number which

2559
01:49:18,400 --> 01:49:20,960
leads to this uh dampening or which

2560
01:49:20,960 --> 01:49:22,960
helps derives the dampening

2561
01:49:22,960 --> 01:49:25,119
state there is nothing much which is

2562
01:49:25,119 --> 01:49:26,960
exchange all this is under the purview

2563
01:49:26,960 --> 01:49:30,080
of the same

2564
01:49:30,960 --> 01:49:33,360
device

2565
01:49:35,920 --> 01:49:38,719
next slide please

2566
01:49:39,599 --> 01:49:43,040
i think we are done here so

2567
01:49:53,440 --> 01:49:57,159
look red

2568
01:49:58,239 --> 01:50:02,480
it's just uh just a general comment um

2569
01:50:02,960 --> 01:50:05,199
on this slide if there's no control

2570
01:50:05,199 --> 01:50:07,520
plane exchange of the values

2571
01:50:07,520 --> 01:50:10,080
i think the feedback would be why why do

2572
01:50:10,080 --> 01:50:12,480
we understand that

2573
01:50:12,480 --> 01:50:13,599
um

2574
01:50:13,599 --> 01:50:15,679
sorry i'm not able to hear completely

2575
01:50:15,679 --> 01:50:19,040
can you repeat again please

2576
01:50:21,040 --> 01:50:22,639
the question with it is

2577
01:50:22,639 --> 01:50:25,119
if there's no uh control plane exchange

2578
01:50:25,119 --> 01:50:26,560
of the values

2579
01:50:26,560 --> 01:50:28,480
this seems to be very implementation

2580
01:50:28,480 --> 01:50:29,599
dependent

2581
01:50:29,599 --> 01:50:32,400
which is where 7432 had ex uh you know

2582
01:50:32,400 --> 01:50:35,520
explicitly left it off on purpose

2583
01:50:35,520 --> 01:50:37,040
so maybe that that was really the only

2584
01:50:37,040 --> 01:50:39,679
feedback is if 2ps don't need to

2585
01:50:39,679 --> 01:50:41,840
communicate this value

2586
01:50:41,840 --> 01:50:43,920
uh maybe expand on the benefits of

2587
01:50:43,920 --> 01:50:46,400
standardizing

2588
01:50:46,400 --> 01:50:46,840
um

2589
01:50:46,840 --> 01:50:48,880
[Music]

2590
01:50:48,880 --> 01:50:51,199
but still we have to have procedures

2591
01:50:51,199 --> 01:50:54,239
right which can be information per se

2592
01:50:54,239 --> 01:50:55,920
can help converge

2593
01:50:55,920 --> 01:51:00,920
on to how we deal with this situation

2594
01:51:09,840 --> 01:51:12,560
yeah hi uh i have similar comments to to

2595
01:51:12,560 --> 01:51:15,760
what look was trying to say um since you

2596
01:51:15,760 --> 01:51:17,520
are not changing the control plane

2597
01:51:17,520 --> 01:51:20,639
change or you're not adding any any

2598
01:51:20,639 --> 01:51:22,800
changes in the signaling uh

2599
01:51:22,800 --> 01:51:24,480
at least yet the draft should be

2600
01:51:24,480 --> 01:51:27,440
informational in my opinion not standard

2601
01:51:27,440 --> 01:51:28,639
struck

2602
01:51:28,639 --> 01:51:30,880
sure yeah i wanted to do that but

2603
01:51:30,880 --> 01:51:33,840
probably i missed it

2604
01:51:41,599 --> 01:51:42,880
okay and

2605
01:51:42,880 --> 01:51:44,400
we can probably

2606
01:51:44,400 --> 01:51:45,920
try again

2607
01:51:45,920 --> 01:51:49,480
for last time

2608
01:52:03,760 --> 01:52:07,360
yeah please unmute yourself

2609
01:52:11,360 --> 01:52:13,840
yeah hang on

2610
01:52:13,840 --> 01:52:15,520
can you speak we are not able to hear

2611
01:52:15,520 --> 01:52:17,840
you now

2612
01:52:23,280 --> 01:52:25,520
hello can you hear me

2613
01:52:25,520 --> 01:52:29,239
yes it's working well

2614
01:52:30,320 --> 01:52:31,040
so

2615
01:52:31,040 --> 01:52:33,199
which draft do you want to

2616
01:52:33,199 --> 01:52:34,560
present

2617
01:52:34,560 --> 01:52:38,760
is it the upstream df selection

2618
01:52:38,760 --> 01:52:46,560
[Laughter]

2619
01:52:47,679 --> 01:52:50,679
oh

2620
01:53:01,390 --> 01:53:14,359
[Music]

2621
01:53:23,440 --> 01:53:27,320
do you want to try again

2622
01:53:40,400 --> 01:53:41,679
hello

2623
01:53:41,679 --> 01:53:44,080
hello

2624
01:53:52,840 --> 01:53:56,320
hello you hear me

2625
01:53:56,480 --> 01:53:59,280
yes try again

2626
01:54:04,000 --> 01:54:08,840
okay so go ahead with the presentation

2627
01:54:23,119 --> 01:54:25,040
do you want to start the presentation

2628
01:54:25,040 --> 01:54:26,560
can you hear me

2629
01:54:26,560 --> 01:54:29,560
yes

2630
01:54:38,080 --> 01:54:41,559
we can hear you

2631
01:54:52,400 --> 01:54:54,799
hello

2632
01:54:56,239 --> 01:54:57,840
it seems that you are not able to hear

2633
01:54:57,840 --> 01:55:00,840
us

2634
01:55:14,000 --> 01:55:17,239
keep talking

2635
01:55:34,480 --> 01:55:36,080
hello can you hear me

2636
01:55:36,080 --> 01:55:40,440
yes yes we can we can hear you

2637
01:55:54,950 --> 01:55:56,960
[Applause]

2638
01:55:56,960 --> 01:55:59,960
um

2639
01:56:10,719 --> 01:56:12,560
okay if you are not able to fix your

2640
01:56:12,560 --> 01:56:16,639
audio you may probably have to close

2641
01:56:16,639 --> 01:56:20,199
to close the session

2642
01:56:30,639 --> 01:56:32,960
okay

2643
01:56:36,000 --> 01:56:36,960
okay

2644
01:56:36,960 --> 01:56:37,760
uh

2645
01:56:37,760 --> 01:56:41,000
here is

2646
01:56:45,440 --> 01:56:46,400
okay

2647
01:56:46,400 --> 01:56:48,239
uh hello everyone

2648
01:56:48,239 --> 01:56:50,320
here is someone from holley

2649
01:56:50,320 --> 01:56:52,639
this presentation is about the

2650
01:56:52,639 --> 01:56:55,440
and we can start fill over improvement

2651
01:56:55,440 --> 01:56:56,480
for some

2652
01:56:56,480 --> 01:56:58,879
cases

2653
01:56:59,440 --> 01:57:02,480
next slide please

2654
01:57:03,760 --> 01:57:08,320
yeah as we know rsp 8826 has defined new

2655
01:57:08,320 --> 01:57:09,679
image

2656
01:57:09,679 --> 01:57:12,719
based on ketone scatters for m routine

2657
01:57:12,719 --> 01:57:14,480
fat failover

2658
01:57:14,480 --> 01:57:16,960
the main procedures include

2659
01:57:16,960 --> 01:57:20,080
first determining the status of a p

2660
01:57:20,080 --> 01:57:21,360
tunnel

2661
01:57:21,360 --> 01:57:23,679
second the standardized demonstration

2662
01:57:23,679 --> 01:57:25,119
approaching

2663
01:57:25,119 --> 01:57:27,840
advertising is a new standby its

2664
01:57:27,840 --> 01:57:29,199
community

2665
01:57:29,199 --> 01:57:31,520
and the third the hot

2666
01:57:31,520 --> 01:57:34,480
house standby mechanism

2667
01:57:34,480 --> 01:57:37,119
however in some cases

2668
01:57:37,119 --> 01:57:39,440
charging the status of a pinternal could

2669
01:57:39,440 --> 01:57:41,920
be somewhat complicated

2670
01:57:41,920 --> 01:57:43,360
for example

2671
01:57:43,360 --> 01:57:46,320
the multicast flow is discontinuous for

2672
01:57:46,320 --> 01:57:50,320
sampling or the devices may not have

2673
01:57:50,320 --> 01:57:53,040
the pfd capabilities

2674
01:57:53,040 --> 01:57:54,560
on the other hand

2675
01:57:54,560 --> 01:57:57,599
how to root standby may result in the

2676
01:57:57,599 --> 01:58:00,080
steady static dependencies throughout

2677
01:58:00,080 --> 01:58:02,719
the backbone network

2678
01:58:02,719 --> 01:58:05,599
therefore we propose an idea that the

2679
01:58:05,599 --> 01:58:09,119
upstream keys may make more effort for

2680
01:58:09,119 --> 01:58:11,599
the fast field over

2681
01:58:11,599 --> 01:58:13,440
they may perform a

2682
01:58:13,440 --> 01:58:16,400
designated for water selection

2683
01:58:16,400 --> 01:58:18,880
to prevent traffic redundancy in the

2684
01:58:18,880 --> 01:58:20,719
tunnels

2685
01:58:20,719 --> 01:58:23,760
and consequently the downstream tvs may

2686
01:58:23,760 --> 01:58:27,360
perform and any cost rpf

2687
01:58:27,360 --> 01:58:30,480
to accept any of the flows from the 10k

2688
01:58:30,480 --> 01:58:33,799
stop screens

2689
01:58:34,080 --> 01:58:37,040
the upstream cf status is described here

2690
01:58:37,040 --> 01:58:39,040
is per vrf

2691
01:58:39,040 --> 01:58:41,920
and could be more refined for further

2692
01:58:41,920 --> 01:58:44,239
improvement

2693
01:58:44,239 --> 01:58:46,159
so here are some details

2694
01:58:46,159 --> 01:58:49,839
next slide is

2695
01:58:52,800 --> 01:58:54,960
upstream designated in the water

2696
01:58:54,960 --> 01:58:56,080
selection

2697
01:58:56,080 --> 01:58:59,280
we hope to use some existing methods to

2698
01:58:59,280 --> 01:59:00,840
perform the df

2699
01:59:00,840 --> 01:59:05,679
section take vrt for example as shown

2700
01:59:05,679 --> 01:59:08,639
the rows of the vrt routers can be

2701
01:59:08,639 --> 01:59:11,679
mapped to the mvp and performing

2702
01:59:11,679 --> 01:59:13,920
upstream keys

2703
01:59:13,920 --> 01:59:16,800
both the primary and standby keys

2704
01:59:16,800 --> 01:59:20,560
install vrf team stage from bgp smart

2705
01:59:20,560 --> 01:59:21,920
captain roads

2706
01:59:21,920 --> 01:59:24,880
and the send join to customer source

2707
01:59:24,880 --> 01:59:27,119
detection

2708
01:59:27,119 --> 01:59:30,960
when traffic arrived at both substring p

2709
01:59:30,960 --> 01:59:33,840
only the primary one towards the flow

2710
01:59:33,840 --> 01:59:37,599
into k1002 constraints

2711
01:59:37,760 --> 01:59:40,800
the vrp is just one technology other

2712
01:59:40,800 --> 01:59:43,280
private implementations would be

2713
01:59:43,280 --> 01:59:45,440
optional

2714
01:59:45,440 --> 01:59:48,559
okay next last week

2715
01:59:50,400 --> 01:59:52,320
we consider a new

2716
01:59:52,320 --> 01:59:56,480
scan community called upstream water

2717
01:59:56,480 --> 01:59:58,880
water selection community

2718
01:59:58,880 --> 02:00:02,000
it is an anti-address specific fixed

2719
02:00:02,000 --> 02:00:03,280
community

2720
02:00:03,280 --> 02:00:06,960
carried on pdp repair routes of unicast

2721
02:00:06,960 --> 02:00:10,000
or multicaster address family

2722
02:00:10,000 --> 02:00:11,840
the global

2723
02:00:11,840 --> 02:00:13,199
should be set

2724
02:00:13,199 --> 02:00:16,719
as an identical virtual ideologies

2725
02:00:16,719 --> 02:00:19,920
such as vrp virtual ip

2726
02:00:19,920 --> 02:00:22,480
or similar identities

2727
02:00:22,480 --> 02:00:25,760
for other technical technologies

2728
02:00:25,760 --> 02:00:29,840
the local domain field should be set as

2729
02:00:29,840 --> 02:00:33,360
master or backup status derived from the

2730
02:00:33,360 --> 02:00:35,840
tf selection

2731
02:00:35,840 --> 02:00:38,880
the main usage of this community is to

2732
02:00:38,880 --> 02:00:41,599
inform downstream people

2733
02:00:41,599 --> 02:00:44,400
the upstream behaviors that make

2734
02:00:44,400 --> 02:00:47,440
doctrine key used to execute and any

2735
02:00:47,440 --> 02:00:50,000
test rpf checking

2736
02:00:50,000 --> 02:00:53,320
next lastly

2737
02:00:54,719 --> 02:00:57,599
uh downstream people still need to

2738
02:00:57,599 --> 02:01:00,480
advertise a standby simultaneous route

2739
02:01:00,480 --> 02:01:04,560
described in rfc 1926

2740
02:01:04,560 --> 02:01:07,520
however the standby pe community is no

2741
02:01:07,520 --> 02:01:10,960
longer necessary of course the upstream

2742
02:01:10,960 --> 02:01:12,080
keys

2743
02:01:12,080 --> 02:01:15,360
can decide their primary or standby

2744
02:01:15,360 --> 02:01:18,880
roads by themselves

2745
02:01:18,880 --> 02:01:22,639
downstream piece then accept the c flow

2746
02:01:22,639 --> 02:01:25,840
from any of candidate top stream keys

2747
02:01:25,840 --> 02:01:28,639
and export it to ce

2748
02:01:28,639 --> 02:01:33,199
is a kind of any cash rpf checking

2749
02:01:33,199 --> 02:01:36,239
as a result the safe application in

2750
02:01:36,239 --> 02:01:40,239
backbone will be prevented by absentee

2751
02:01:40,239 --> 02:01:42,000
cf selection

2752
02:01:42,000 --> 02:01:43,679
but not downstream

2753
02:01:43,679 --> 02:01:46,320
as mentioned about

2754
02:01:46,320 --> 02:01:50,280
okay final slide please

2755
02:01:50,560 --> 02:01:53,440
next steps uh we are going to specify

2756
02:01:53,440 --> 02:01:55,520
more details for more

2757
02:01:55,520 --> 02:01:58,560
failures scenarios

2758
02:01:58,560 --> 02:02:01,119
to provide the relief for

2759
02:02:01,119 --> 02:02:05,320
even slow ds batteries

2760
02:02:05,840 --> 02:02:08,880
comments and discussions

2761
02:02:08,880 --> 02:02:12,480
sorry my my speaker is

2762
02:02:12,639 --> 02:02:15,360
a little bit

2763
02:02:15,840 --> 02:02:18,480
i can't hear what you say so

2764
02:02:18,480 --> 02:02:22,239
if you have any questions please

2765
02:02:22,239 --> 02:02:25,520
put this comment in the mail and we can

2766
02:02:25,520 --> 02:02:26,560
ask

2767
02:02:26,560 --> 02:02:28,239
later details

2768
02:02:28,239 --> 02:02:30,000
thank you

2769
02:02:30,000 --> 02:02:33,360
okay thank you uh we are already out of

2770
02:02:33,360 --> 02:02:35,040
time um

2771
02:02:35,040 --> 02:02:36,560
so we don't have time for the last

2772
02:02:36,560 --> 02:02:38,960
presentation

2773
02:02:38,960 --> 02:02:41,440
so thank you everyone

2774
02:02:41,440 --> 02:02:43,440
for your attendance and uh

2775
02:02:43,440 --> 02:02:45,520
hopefully we can see each other at the

2776
02:02:45,520 --> 02:02:48,239
next year

2777
02:02:48,400 --> 02:02:51,119
thanks everyone

2778
02:02:52,719 --> 02:02:54,639
and thank you jorge

2779
02:02:54,639 --> 02:02:57,639
thanks

2780
02:03:09,920 --> 02:03:12,480
the only two

2781
02:03:13,040 --> 02:03:13,679
ha ha ha ha ha ha ha ha ha ha ha ha ha

2782
02:03:13,679 --> 02:03:14,480
ha ha ha survivors ha ha ha ha ha ha ha

2783
02:03:14,480 --> 02:03:15,760
ha ha ha ha ha ha ha ha ha ha ha ha ha

2784
02:03:15,760 --> 02:03:18,880
ha ha ha ha ha ha

