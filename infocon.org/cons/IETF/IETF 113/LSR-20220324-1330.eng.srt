1
00:00:05,120 --> 00:00:07,680
labels or car versus ct that's

2
00:00:07,680 --> 00:00:09,040
controversial

3
00:00:09,040 --> 00:00:11,759
oh there's coming from each other

4
00:00:11,759 --> 00:00:15,440
i'm sure there's a few comments coming

5
00:00:15,440 --> 00:00:16,880
we're going to have to do better

6
00:00:16,880 --> 00:00:19,840
marketing i guess

7
00:00:22,240 --> 00:00:23,600
okay

8
00:00:23,600 --> 00:00:25,680
all right well um

9
00:00:25,680 --> 00:00:28,640
i think yeah i think uh

10
00:00:28,640 --> 00:00:31,840
we have a lot of online participants

11
00:00:31,840 --> 00:00:33,520
yep

12
00:00:33,520 --> 00:00:36,239
i mean we are already done pretty much

13
00:00:36,239 --> 00:00:38,160
yeah okay well i think we're ready to

14
00:00:38,160 --> 00:00:40,000
start let me go back to the slides

15
00:00:40,000 --> 00:00:41,600
okay

16
00:00:41,600 --> 00:00:43,200
yeah we

17
00:00:43,200 --> 00:00:44,559
shouldn't wait for the room to fill up i

18
00:00:44,559 --> 00:00:46,719
don't think it's going to yeah um all

19
00:00:46,719 --> 00:00:49,440
right everyone uh so you're in the lsr

20
00:00:49,440 --> 00:00:50,960
working group it's pretty hard to get

21
00:00:50,960 --> 00:00:53,280
that wrong online so only those two

22
00:00:53,280 --> 00:00:54,800
other people in the room hope you're

23
00:00:54,800 --> 00:00:56,840
there for that

24
00:00:56,840 --> 00:00:59,199
uh and uh

25
00:00:59,199 --> 00:01:00,000
yeah

26
00:01:00,000 --> 00:01:01,520
i t 113

27
00:01:01,520 --> 00:01:04,320
hybrid meeting

28
00:01:04,400 --> 00:01:05,920
uh we have a

29
00:01:05,920 --> 00:01:06,960
well

30
00:01:06,960 --> 00:01:08,960
there's a note well

31
00:01:08,960 --> 00:01:10,080
uh

32
00:01:10,080 --> 00:01:11,760
i swear there was one that we could get

33
00:01:11,760 --> 00:01:14,400
that was readable but

34
00:01:14,400 --> 00:01:15,680
shorter i mean

35
00:01:15,680 --> 00:01:18,080
it basically says everything you do

36
00:01:18,080 --> 00:01:23,600
in the idf is donated to part of the itf

37
00:01:25,280 --> 00:01:26,720
um okay it doesn't we don't have an

38
00:01:26,720 --> 00:01:28,560
agenda slide so i'll just quickly

39
00:01:28,560 --> 00:01:31,680
mention uh our agenda is fairly full

40
00:01:31,680 --> 00:01:34,159
um so we will try to keep people to

41
00:01:34,159 --> 00:01:36,079
their uh

42
00:01:36,079 --> 00:01:37,759
things uh i think somebody else said

43
00:01:37,759 --> 00:01:39,360
that it's ridiculously full or something

44
00:01:39,360 --> 00:01:40,720
like that so i had to

45
00:01:40,720 --> 00:01:43,759
i i feel that was unfair we we left like

46
00:01:43,759 --> 00:01:46,640
five minutes slop at the end

47
00:01:46,640 --> 00:01:48,560
so hopefully we don't we don't run to

48
00:01:48,560 --> 00:01:50,000
the very end

49
00:01:50,000 --> 00:01:51,600
um

50
00:01:51,600 --> 00:01:53,439
and with that i think ac is going to run

51
00:01:53,439 --> 00:01:56,640
the status so i'll i'll click ac talk

52
00:01:56,640 --> 00:01:58,079
yeah yeah i'm going to see if i can get

53
00:01:58,079 --> 00:01:59,360
this done i'm going to get this done in

54
00:01:59,360 --> 00:02:02,079
less time uh i'm just going to point out

55
00:02:02,079 --> 00:02:05,920
new stuff okay no newer rfcs

56
00:02:05,920 --> 00:02:09,919
we do have a new draft on the uh rfc off

57
00:02:09,919 --> 00:02:12,879
48 or in in

58
00:02:12,879 --> 00:02:17,680
r48 that's the isis reverse metric

59
00:02:17,680 --> 00:02:21,400
uh next slide

60
00:02:23,210 --> 00:02:26,300
[Music]

61
00:02:29,200 --> 00:02:32,000
so this is one way we can uh we can do

62
00:02:32,000 --> 00:02:33,680
these one-offs

63
00:02:33,680 --> 00:02:35,680
but uh for

64
00:02:35,680 --> 00:02:38,000
certain things as well as including them

65
00:02:38,000 --> 00:02:40,800
in the base spec

66
00:02:40,879 --> 00:02:45,040
this hasn't changed next slide

67
00:02:45,920 --> 00:02:47,280
uh

68
00:02:47,280 --> 00:02:48,959
we're

69
00:02:48,959 --> 00:02:51,920
still um flex algorithm we did have one

70
00:02:51,920 --> 00:02:55,360
comment on that about the

71
00:02:55,360 --> 00:02:58,720
sub tlv overflow i i guess

72
00:02:58,720 --> 00:03:00,480
the offers are going to cover that in

73
00:03:00,480 --> 00:03:02,159
the in

74
00:03:02,159 --> 00:03:05,360
in the in the draft it's in ad review as

75
00:03:05,360 --> 00:03:08,319
well next slide

76
00:03:09,680 --> 00:03:11,760
uh

77
00:03:11,760 --> 00:03:14,640
these are all these are ones uh the the

78
00:03:14,640 --> 00:03:15,840
last

79
00:03:15,840 --> 00:03:19,040
two are the ones we uh added we

80
00:03:19,040 --> 00:03:20,959
requested publication on the flood

81
00:03:20,959 --> 00:03:22,640
reflection which is like a route

82
00:03:22,640 --> 00:03:25,680
reflector and isis and the bfd strict

83
00:03:25,680 --> 00:03:27,840
mode

84
00:03:27,840 --> 00:03:30,000
where you require bfd to establish a

85
00:03:30,000 --> 00:03:33,840
ospf next slide

86
00:03:35,599 --> 00:03:37,599
and

87
00:03:37,599 --> 00:03:38,959
these haven't really changed we've been

88
00:03:38,959 --> 00:03:40,640
kind of waiting for these yang models to

89
00:03:40,640 --> 00:03:42,720
publish the base hanging models before

90
00:03:42,720 --> 00:03:45,120
we working group called the last they i

91
00:03:45,120 --> 00:03:46,959
think it'll happen hopefully before next

92
00:03:46,959 --> 00:03:50,159
ietf it all depends on the bfd yang

93
00:03:50,159 --> 00:03:53,280
model next slide

94
00:03:55,920 --> 00:03:57,519
uh

95
00:03:57,519 --> 00:04:00,720
the offers of flex algorithm have

96
00:04:00,720 --> 00:04:03,760
requested working class call we probably

97
00:04:03,760 --> 00:04:05,439
can do that one

98
00:04:05,439 --> 00:04:08,239
fairly soon

99
00:04:08,720 --> 00:04:13,120
the same way for reverse metric and

100
00:04:13,519 --> 00:04:15,120
is also

101
00:04:15,120 --> 00:04:18,000
it's just an ospf version of an isi so

102
00:04:18,000 --> 00:04:20,079
we probably can do that pretty simply as

103
00:04:20,079 --> 00:04:20,959
well

104
00:04:20,959 --> 00:04:24,199
next slide

105
00:04:28,560 --> 00:04:30,080
i don't want to say anything more about

106
00:04:30,080 --> 00:04:31,759
that we really haven't had it much

107
00:04:31,759 --> 00:04:35,280
movement on these next slide

108
00:04:38,160 --> 00:04:39,440
next slide

109
00:04:39,440 --> 00:04:41,199
if you see your draft and you want to

110
00:04:41,199 --> 00:04:42,800
start uh

111
00:04:42,800 --> 00:04:44,560
start discussion started on the list

112
00:04:44,560 --> 00:04:47,040
next slide

113
00:04:54,639 --> 00:04:57,280
oh i didn't update i didn't update that

114
00:04:57,280 --> 00:05:00,880
the flex that that sub comment on uh

115
00:05:00,880 --> 00:05:02,479
flexible algorithm bandwidth delay and

116
00:05:02,479 --> 00:05:03,759
metrics

117
00:05:03,759 --> 00:05:05,840
that's wrong it's that was from last

118
00:05:05,840 --> 00:05:08,320
ietf it's not covered today

119
00:05:08,320 --> 00:05:10,000
there's just discussion going on between

120
00:05:10,000 --> 00:05:12,320
the offers on that one

121
00:05:12,320 --> 00:05:15,599
and final slide

122
00:05:15,840 --> 00:05:19,120
ah not the final slide

123
00:05:19,120 --> 00:05:21,919
oh this is one the offers of

124
00:05:21,919 --> 00:05:23,440
i don't have the pen on these i guess

125
00:05:23,440 --> 00:05:25,680
i'm an offer on one of them i got i got

126
00:05:25,680 --> 00:05:27,919
to get these were accepted by the

127
00:05:27,919 --> 00:05:30,400
working group but the offers never

128
00:05:30,400 --> 00:05:32,000
uh

129
00:05:32,000 --> 00:05:34,160
updated them with the uh

130
00:05:34,160 --> 00:05:36,800
i mean they were they were adopted but

131
00:05:36,800 --> 00:05:39,360
the offers never uh republished them so

132
00:05:39,360 --> 00:05:42,320
they should we should uh oh

133
00:05:42,320 --> 00:05:44,320
i noticed that when going through this

134
00:05:44,320 --> 00:05:45,759
the

135
00:05:45,759 --> 00:05:48,080
existing documents i'm going to get a

136
00:05:48,080 --> 00:05:50,560
hold of them to do that

137
00:05:50,560 --> 00:05:53,360
next slide

138
00:05:53,360 --> 00:05:55,600
and we had a bunch of adoption requests

139
00:05:55,600 --> 00:05:57,919
not a bunch but a bunch of highly

140
00:05:57,919 --> 00:06:00,080
a couple of highly contentious ones and

141
00:06:00,080 --> 00:06:03,680
they did not they were not adopted

142
00:06:03,680 --> 00:06:05,680
and i imagine i imagine some of the

143
00:06:05,680 --> 00:06:07,520
documents that we have today will be

144
00:06:07,520 --> 00:06:10,800
asked for adoption okay that's it

145
00:06:10,800 --> 00:06:12,880
again i encourage you i didn't want to

146
00:06:12,880 --> 00:06:14,160
spend a lot of time because we have a

147
00:06:14,160 --> 00:06:18,479
real full agenda on working group status

148
00:06:19,759 --> 00:06:22,000
i just was in mpls they even covered

149
00:06:22,000 --> 00:06:23,840
their their erratas

150
00:06:23,840 --> 00:06:26,799
in their status

151
00:06:28,560 --> 00:06:30,720
so next presentation

152
00:06:30,720 --> 00:06:32,639
which is also me

153
00:06:32,639 --> 00:06:34,000
yeah i think you're up next hang on let

154
00:06:34,000 --> 00:06:36,720
me pull the let me click the sure

155
00:06:36,720 --> 00:06:39,440
i know i know

156
00:06:40,880 --> 00:06:44,159
once we have terminology

157
00:06:45,600 --> 00:06:47,919
so this started out

158
00:06:47,919 --> 00:06:49,840
actually

159
00:06:49,840 --> 00:06:55,840
a couple years ago both the ietf and

160
00:06:55,840 --> 00:06:58,080
a lot of the large companies ibm and

161
00:06:58,080 --> 00:07:00,880
cisco notably uh

162
00:07:00,880 --> 00:07:03,039
wanted to change these standards so we

163
00:07:03,039 --> 00:07:06,000
can update our documentation to have

164
00:07:06,000 --> 00:07:08,560
inclusive language specifically in ospf

165
00:07:08,560 --> 00:07:10,960
getting rid of the master slave

166
00:07:10,960 --> 00:07:13,360
terminology in the ospf database

167
00:07:13,360 --> 00:07:14,479
exchange

168
00:07:14,479 --> 00:07:16,800
so mike from ibm

169
00:07:16,800 --> 00:07:18,560
contacted

170
00:07:18,560 --> 00:07:22,240
uh alvaro me and alvaro and tried to get

171
00:07:22,240 --> 00:07:23,919
oh and we uh

172
00:07:23,919 --> 00:07:26,560
kicked off this effort this this is a

173
00:07:26,560 --> 00:07:28,720
draft that just updates the current and

174
00:07:28,720 --> 00:07:30,560
let's go to the next slide

175
00:07:30,560 --> 00:07:32,000
i'm going to try and do this one fairly

176
00:07:32,000 --> 00:07:33,360
quickly too

177
00:07:33,360 --> 00:07:34,720
so

178
00:07:34,720 --> 00:07:36,720
alvaro did the initial work on this i

179
00:07:36,720 --> 00:07:38,800
agree with them we replaced master slave

180
00:07:38,800 --> 00:07:41,039
with leader follower

181
00:07:41,039 --> 00:07:42,840
in in all the

182
00:07:42,840 --> 00:07:45,759
uh in all this sections we don't

183
00:07:45,759 --> 00:07:48,800
actually do it we don't actually do a

184
00:07:48,800 --> 00:07:52,639
biz draft on rfc 2328 but we have a

185
00:07:52,639 --> 00:07:54,879
document that that that updates it and

186
00:07:54,879 --> 00:07:57,360
notes the sections this draft notes the

187
00:07:57,360 --> 00:08:00,400
sections that uh will be changed

188
00:08:00,400 --> 00:08:02,479
additionally we're going to place the ms

189
00:08:02,479 --> 00:08:05,120
bit which is master slave bit with l bit

190
00:08:05,120 --> 00:08:06,960
now this is really a good change because

191
00:08:06,960 --> 00:08:09,520
now all the diagrams that had to have a

192
00:08:09,520 --> 00:08:12,319
two character field for a one bit go

193
00:08:12,319 --> 00:08:14,879
down to one so it really makes it make

194
00:08:14,879 --> 00:08:17,599
it'll make it'll make the dot the

195
00:08:17,599 --> 00:08:20,639
if we when we redo when and if we redo

196
00:08:20,639 --> 00:08:23,199
these documents it'll make the diagrams

197
00:08:23,199 --> 00:08:26,400
uh a lot easier to look at

198
00:08:26,400 --> 00:08:28,879
and this also required an ian action

199
00:08:28,879 --> 00:08:30,479
because we had a registry for the

200
00:08:30,479 --> 00:08:32,159
database description

201
00:08:32,159 --> 00:08:33,279
flags

202
00:08:33,279 --> 00:08:35,838
next slide

203
00:08:39,200 --> 00:08:41,360
these are the sections that change there

204
00:08:41,360 --> 00:08:42,799
was just uh

205
00:08:42,799 --> 00:08:44,000
uh uh

206
00:08:44,000 --> 00:08:47,040
a small reference in 7.2 and most of it

207
00:08:47,040 --> 00:08:50,320
is in the native data data structures

208
00:08:50,320 --> 00:08:52,880
uh chapter 10 which also

209
00:08:52,880 --> 00:08:54,480
it's kind of a misnomer the name of this

210
00:08:54,480 --> 00:08:56,399
section it really includes the neighbor

211
00:08:56,399 --> 00:08:59,200
uh fsm as well and all the events and

212
00:08:59,200 --> 00:09:02,000
everything these this is where the

213
00:09:02,000 --> 00:09:04,959
majority of the changes are in rfc 2328

214
00:09:04,959 --> 00:09:06,839
which is

215
00:09:06,839 --> 00:09:09,519
the um

216
00:09:09,519 --> 00:09:11,279
internet standard

217
00:09:11,279 --> 00:09:15,440
document for the osvfv2 also in appendix

218
00:09:15,440 --> 00:09:17,279
3 there's a

219
00:09:17,279 --> 00:09:19,440
figure including the database

220
00:09:19,440 --> 00:09:21,200
description packet

221
00:09:21,200 --> 00:09:23,279
and that's where the ms bit is going to

222
00:09:23,279 --> 00:09:24,640
be changed to the

223
00:09:24,640 --> 00:09:26,240
change the l bit

224
00:09:26,240 --> 00:09:28,800
again this document just updates it by

225
00:09:28,800 --> 00:09:31,440
making the reference it doesn't actually

226
00:09:31,440 --> 00:09:32,880
replace it

227
00:09:32,880 --> 00:09:37,600
update 2328 so i elboro did and

228
00:09:37,600 --> 00:09:39,920
mike both noted that this document need

229
00:09:39,920 --> 00:09:41,279
to be updated i went through the other

230
00:09:41,279 --> 00:09:43,279
documents and looked for references next

231
00:09:43,279 --> 00:09:44,399
slide

232
00:09:44,399 --> 00:09:46,320
to master slave

233
00:09:46,320 --> 00:09:49,279
oh and i found ospf b3 luckily

234
00:09:49,279 --> 00:09:52,959
since ospf v3 builds on v2 the only

235
00:09:52,959 --> 00:09:55,440
reference was in the

236
00:09:55,440 --> 00:09:57,760
ipv6

237
00:09:57,760 --> 00:10:00,080
figure with the database exchange packet

238
00:10:00,080 --> 00:10:02,640
next slide

239
00:10:03,360 --> 00:10:05,920
and we have a few of these there was one

240
00:10:05,920 --> 00:10:08,480
example reference in rfc four four four

241
00:10:08,480 --> 00:10:11,120
two four two two two two

242
00:10:11,120 --> 00:10:13,120
uh it's going to update that

243
00:10:13,120 --> 00:10:16,240
the outer bound uh synchronization we

244
00:10:16,240 --> 00:10:17,920
might wanna we probably want to do a biz

245
00:10:17,920 --> 00:10:20,480
on this one anyway but this updates it

246
00:10:20,480 --> 00:10:23,279
there's a there's a uh

247
00:10:23,279 --> 00:10:25,040
picture of the packet and some

248
00:10:25,040 --> 00:10:26,800
annotation in that one too because it

249
00:10:26,800 --> 00:10:29,200
allows the reason we want to do this one

250
00:10:29,200 --> 00:10:32,320
over is because dynamic well isis has a

251
00:10:32,320 --> 00:10:34,160
way to do out-of-bands

252
00:10:34,160 --> 00:10:36,959
synchronization today

253
00:10:36,959 --> 00:10:39,040
ospf doesn't

254
00:10:39,040 --> 00:10:40,000
and

255
00:10:40,000 --> 00:10:42,800
the dynamic flooding has situations

256
00:10:42,800 --> 00:10:44,959
where you get into a problem that

257
00:10:44,959 --> 00:10:46,240
problem where you've done flooding

258
00:10:46,240 --> 00:10:48,160
reduction and you want to make sure

259
00:10:48,160 --> 00:10:49,760
you're in sync

260
00:10:49,760 --> 00:10:52,240
so you know how ospf connect i mean how

261
00:10:52,240 --> 00:10:55,760
isis can ask for complete c c

262
00:10:55,760 --> 00:10:58,000
s m p p use

263
00:10:58,000 --> 00:11:00,240
ospf needs to be able to do the database

264
00:11:00,240 --> 00:11:03,760
exchange out of say out of band as well

265
00:11:03,760 --> 00:11:06,399
and then there was a richard algeria did

266
00:11:06,399 --> 00:11:09,040
this uh informational

267
00:11:09,040 --> 00:11:11,360
draft there's a couple

268
00:11:11,360 --> 00:11:12,560
just

269
00:11:12,560 --> 00:11:14,800
ancillary references this updates that

270
00:11:14,800 --> 00:11:15,920
as well

271
00:11:15,920 --> 00:11:18,399
last slide i mean not last but next

272
00:11:18,399 --> 00:11:20,720
slide

273
00:11:21,040 --> 00:11:23,839
and what uh monet

274
00:11:23,839 --> 00:11:24,640
uh

275
00:11:24,640 --> 00:11:28,000
this monet experimental draft

276
00:11:28,000 --> 00:11:29,200
had

277
00:11:29,200 --> 00:11:30,880
some changes to this neighbor state

278
00:11:30,880 --> 00:11:32,720
machine which

279
00:11:32,720 --> 00:11:34,480
uh referenced

280
00:11:34,480 --> 00:11:35,600
the

281
00:11:35,600 --> 00:11:38,240
ms the master slave relationship and ms

282
00:11:38,240 --> 00:11:41,040
bit in the data description packets

283
00:11:41,040 --> 00:11:42,800
and finally

284
00:11:42,800 --> 00:11:44,800
uh

285
00:11:44,800 --> 00:11:49,920
support the rfc the ipv4 address fan or

286
00:11:49,920 --> 00:11:52,079
ipv different address families and i in

287
00:11:52,079 --> 00:11:55,279
ospfv3 there was an mtu consideration so

288
00:11:55,279 --> 00:11:57,440
it just had a picture of the snippet of

289
00:11:57,440 --> 00:11:59,839
the database description packet where

290
00:11:59,839 --> 00:12:02,399
you would have the flags and that had it

291
00:12:02,399 --> 00:12:04,880
as well so this up this graph updates

292
00:12:04,880 --> 00:12:08,000
them as well and the final slide

293
00:12:08,000 --> 00:12:10,000
now i want to say something really one

294
00:12:10,000 --> 00:12:12,000
really good thing about this

295
00:12:12,000 --> 00:12:14,880
unlike vrp where it was all over

296
00:12:14,880 --> 00:12:16,880
is that the mib

297
00:12:16,880 --> 00:12:19,440
and the yang model did not have any

298
00:12:19,440 --> 00:12:21,680
references those things actually take

299
00:12:21,680 --> 00:12:24,240
deprecation and functional code changes

300
00:12:24,240 --> 00:12:26,720
or you know implementation changes to

301
00:12:26,720 --> 00:12:29,200
support ospf doesn't have any of those

302
00:12:29,200 --> 00:12:30,560
where you really

303
00:12:30,560 --> 00:12:32,800
you know where you were where you need

304
00:12:32,800 --> 00:12:34,720
to deprecate

305
00:12:34,720 --> 00:12:38,000
tables and do it the old way so luckily

306
00:12:38,000 --> 00:12:40,399
the next step would be there might be

307
00:12:40,399 --> 00:12:41,120
some

308
00:12:41,120 --> 00:12:43,360
discussion we've kind of discussed this

309
00:12:43,360 --> 00:12:45,360
among ourselves we think this is a

310
00:12:45,360 --> 00:12:47,839
natural choice it's really nice that we

311
00:12:47,839 --> 00:12:50,079
have an l bit rather than an ms bit the

312
00:12:50,079 --> 00:12:51,920
reason it was the ms bid is the database

313
00:12:51,920 --> 00:12:54,480
exchange already had the more bit

314
00:12:54,480 --> 00:12:56,639
to say when you were done sending

315
00:12:56,639 --> 00:12:59,279
database exchange packets so this l bit

316
00:12:59,279 --> 00:13:00,880
makes it uh

317
00:13:00,880 --> 00:13:03,519
more concise in the figure

318
00:13:03,519 --> 00:13:06,720
we uh like i'd say don't just say oh why

319
00:13:06,720 --> 00:13:09,120
don't you make this primary secondary or

320
00:13:09,120 --> 00:13:10,639
some things like that unless you have a

321
00:13:10,639 --> 00:13:13,040
real good reason why i mean there's

322
00:13:13,040 --> 00:13:16,560
there's all sorts of uh

323
00:13:16,560 --> 00:13:18,480
all sorts of word smithing that goes on

324
00:13:18,480 --> 00:13:19,519
but i don't

325
00:13:19,519 --> 00:13:22,240
i don't think i think this is a this

326
00:13:22,240 --> 00:13:24,240
this and i'll credit alvaro for coming

327
00:13:24,240 --> 00:13:25,600
up with this choice i think this is a

328
00:13:25,600 --> 00:13:27,360
really good choice leader and follower

329
00:13:27,360 --> 00:13:29,600
because it's analysis to what's actually

330
00:13:29,600 --> 00:13:32,839
happening in the database exchange

331
00:13:32,839 --> 00:13:34,720
and uh

332
00:13:34,720 --> 00:13:36,079
finally

333
00:13:36,079 --> 00:13:38,079
i think we need to you know we talked

334
00:13:38,079 --> 00:13:40,560
about biz work on just on these

335
00:13:40,560 --> 00:13:42,639
documents anyway i think we need to do

336
00:13:42,639 --> 00:13:44,800
this in the interim because like i said

337
00:13:44,800 --> 00:13:47,199
my company and ibm and others really

338
00:13:47,199 --> 00:13:48,959
want to update our

339
00:13:48,959 --> 00:13:50,959
documentation as soon as possible so if

340
00:13:50,959 --> 00:13:53,199
we can nail down what the uh

341
00:13:53,199 --> 00:13:54,880
what the terminology is going to be even

342
00:13:54,880 --> 00:13:56,800
before this is published that would be

343
00:13:56,800 --> 00:13:58,399
good

344
00:13:58,399 --> 00:14:00,320
thanks

345
00:14:00,320 --> 00:14:02,959
yeah um i think i i think i might have

346
00:14:02,959 --> 00:14:05,199
put in the list the idea about the uh

347
00:14:05,199 --> 00:14:06,720
about doing abyss

348
00:14:06,720 --> 00:14:08,639
and grabbing i i'd like to we don't have

349
00:14:08,639 --> 00:14:10,560
to do it for this rev but i think i

350
00:14:10,560 --> 00:14:12,320
think it's worthwhile

351
00:14:12,320 --> 00:14:15,120
um since we do have errata

352
00:14:15,120 --> 00:14:17,839
um and i and what was on the list is

353
00:14:17,839 --> 00:14:19,120
people think that well it's gonna you're

354
00:14:19,120 --> 00:14:20,639
gonna open it up to

355
00:14:20,639 --> 00:14:23,279
open up a can of worms right like

356
00:14:23,279 --> 00:14:24,639
i don't think we have to i think we

357
00:14:24,639 --> 00:14:26,639
could just say you know

358
00:14:26,639 --> 00:14:28,480
we're just doing errata and this and

359
00:14:28,480 --> 00:14:30,800
this change maybe having this document

360
00:14:30,800 --> 00:14:33,120
even makes it easier to do that

361
00:14:33,120 --> 00:14:34,079
um

362
00:14:34,079 --> 00:14:35,760
you know especially

363
00:14:35,760 --> 00:14:37,600
we're just going to do it

364
00:14:37,600 --> 00:14:40,160
right right especially of 2328 because

365
00:14:40,160 --> 00:14:42,160
that's already all the way to internet

366
00:14:42,160 --> 00:14:43,600
standard

367
00:14:43,600 --> 00:14:44,880
right

368
00:14:44,880 --> 00:14:47,760
yeah i mean my only i'm thinking

369
00:14:47,760 --> 00:14:49,839
i guess this is enough for companies but

370
00:14:49,839 --> 00:14:52,800
if i was you know actually looking

371
00:14:52,800 --> 00:14:54,800
for the documentation on ospf right i'm

372
00:14:54,800 --> 00:14:57,120
still going to pull 2328 whether you

373
00:14:57,120 --> 00:14:58,880
have an updated thing out there saying

374
00:14:58,880 --> 00:15:00,240
you know use this new language it's

375
00:15:00,240 --> 00:15:01,920
still there right

376
00:15:01,920 --> 00:15:03,920
so i don't know anyway it seems like to

377
00:15:03,920 --> 00:15:06,160
me this is better but

378
00:15:06,160 --> 00:15:09,519
we can probably talk about this forever

379
00:15:09,519 --> 00:15:12,880
and no one else is in the queue

380
00:15:16,959 --> 00:15:19,360
if it's outside of if it's out like my

381
00:15:19,360 --> 00:15:21,680
car i don't look at the i look at my

382
00:15:21,680 --> 00:15:23,600
product documentation for my car i don't

383
00:15:23,600 --> 00:15:27,040
look at the you know the uh

384
00:15:27,040 --> 00:15:29,279
the iso uh

385
00:15:29,279 --> 00:15:30,639
standards

386
00:15:30,639 --> 00:15:33,279
to see how things work there

387
00:15:33,279 --> 00:15:35,279
well maybe even better that you look at

388
00:15:35,279 --> 00:15:38,079
the the um show oh spf neighbor right

389
00:15:38,079 --> 00:15:39,279
you're looking at

390
00:15:39,279 --> 00:15:40,800
the dashboard of the car and not the

391
00:15:40,800 --> 00:15:42,079
manual

392
00:15:42,079 --> 00:15:43,360
yeah

393
00:15:43,360 --> 00:15:45,360
john

394
00:15:45,360 --> 00:15:47,759
yeah i was debating whether to say

395
00:15:47,759 --> 00:15:50,000
anything but since he brought it up um

396
00:15:50,000 --> 00:15:51,120
yeah i

397
00:15:51,120 --> 00:15:53,440
had kind of the first you know

398
00:15:53,440 --> 00:15:55,839
initial reaction you did chris which is

399
00:15:55,839 --> 00:15:58,079
you know you already said it all already

400
00:15:58,079 --> 00:15:59,839
but then as ac was going through a slide

401
00:15:59,839 --> 00:16:02,079
deck he was like and this rfc is

402
00:16:02,079 --> 00:16:04,160
impacted then this rfc is impacted and

403
00:16:04,160 --> 00:16:05,920
this rfc is impact

404
00:16:05,920 --> 00:16:08,720
that's a lot of rfcs so like i i do see

405
00:16:08,720 --> 00:16:10,480
the value of publishing one short

406
00:16:10,480 --> 00:16:12,480
document that you know

407
00:16:12,480 --> 00:16:14,560
says what the updates are to all of them

408
00:16:14,560 --> 00:16:16,959
but i i would hope that you know you

409
00:16:16,959 --> 00:16:18,800
would at least consider

410
00:16:18,800 --> 00:16:21,120
then subsequently you know as

411
00:16:21,120 --> 00:16:22,880
as you get around to it visiting those

412
00:16:22,880 --> 00:16:25,199
to like actually take care of rolling in

413
00:16:25,199 --> 00:16:26,800
the changes because i do think for the

414
00:16:26,800 --> 00:16:29,040
reason you said chris like in in my

415
00:16:29,040 --> 00:16:30,959
opinion is really just an individual

416
00:16:30,959 --> 00:16:33,120
contributor here but i think it's it's

417
00:16:33,120 --> 00:16:34,240
better to

418
00:16:34,240 --> 00:16:38,480
have it in the spec itself thanks

419
00:16:38,480 --> 00:16:39,519
yeah

420
00:16:39,519 --> 00:16:40,639
okay

421
00:16:40,639 --> 00:16:42,240
thanks john all right well i guess we'll

422
00:16:42,240 --> 00:16:44,720
go to the next which is

423
00:16:44,720 --> 00:16:46,160
the uh

424
00:16:46,160 --> 00:16:49,440
nodeliveness tony

425
00:16:49,440 --> 00:16:52,399
let's see if i can

426
00:16:53,040 --> 00:16:54,800
you know i'm gonna i'm gonna turn off my

427
00:16:54,800 --> 00:16:57,199
audio

428
00:16:57,199 --> 00:16:59,680
at least

429
00:17:02,959 --> 00:17:04,799
tony lee are you here

430
00:17:04,799 --> 00:17:06,640
are you presenting the node liveness

431
00:17:06,640 --> 00:17:08,959
protocol

432
00:17:08,959 --> 00:17:11,679
i know i saw you in here talking earlier

433
00:17:11,679 --> 00:17:14,559
i'm here yes i am ready to present

434
00:17:14,559 --> 00:17:16,799
all right let me see if i can

435
00:17:16,799 --> 00:17:18,640
i will happily

436
00:17:18,640 --> 00:17:20,319
do that

437
00:17:20,319 --> 00:17:22,000
oh wait i just clicked on something that

438
00:17:22,000 --> 00:17:23,919
opened your profile which was not what i

439
00:17:23,919 --> 00:17:25,520
wanted there it is

440
00:17:25,520 --> 00:17:28,639
that's slide control

441
00:17:30,080 --> 00:17:33,520
oh i wonder what it's going to choose

442
00:17:33,520 --> 00:17:36,320
do you have a choice

443
00:17:41,120 --> 00:17:42,640
there we go

444
00:17:42,640 --> 00:17:44,840
can everyone see slides

445
00:17:44,840 --> 00:17:47,200
yep very good

446
00:17:47,200 --> 00:17:49,760
uh so this is a proposal that is in

447
00:17:49,760 --> 00:17:54,000
response to the discussion about pua

448
00:17:54,000 --> 00:17:56,400
and i'm assuming that's still a live

449
00:17:56,400 --> 00:17:59,400
proposal

450
00:18:00,000 --> 00:18:01,679
uh so

451
00:18:01,679 --> 00:18:03,919
the problem we're talking about um

452
00:18:03,919 --> 00:18:06,640
people have been using lsp presence in

453
00:18:06,640 --> 00:18:08,240
the lsdb

454
00:18:08,240 --> 00:18:11,280
as a substitute for node liveness

455
00:18:11,280 --> 00:18:13,440
and this suddenly doesn't work as soon

456
00:18:13,440 --> 00:18:16,720
as the network graduates up to hierarchy

457
00:18:16,720 --> 00:18:18,400
you know somebody dropping off in a

458
00:18:18,400 --> 00:18:19,840
level one area

459
00:18:19,840 --> 00:18:21,600
just doesn't appear on the other side of

460
00:18:21,600 --> 00:18:23,840
the network anymore

461
00:18:23,840 --> 00:18:25,760
so there are a bunch of other proposals

462
00:18:25,760 --> 00:18:27,679
that we've discussed

463
00:18:27,679 --> 00:18:30,320
pua putting loopbacks in bgp don't

464
00:18:30,320 --> 00:18:34,400
aggregate the loopbacks many other ideas

465
00:18:34,400 --> 00:18:36,480
the root problem here is that igps are

466
00:18:36,480 --> 00:18:39,760
carrying live reachability not liveness

467
00:18:39,760 --> 00:18:42,000
and if we want to talk about liveness we

468
00:18:42,000 --> 00:18:45,120
really really need another mechanism

469
00:18:45,120 --> 00:18:47,520
the igp is not a dump truck it is not

470
00:18:47,520 --> 00:18:49,440
meant to carry everything

471
00:18:49,440 --> 00:18:51,600
if you're confused

472
00:18:51,600 --> 00:18:54,639
this is a dump truck

473
00:18:55,120 --> 00:18:57,919
okay here's another dump truck

474
00:18:57,919 --> 00:19:00,400
uh i'm proposing that we

475
00:19:00,400 --> 00:19:03,039
create a completely separate service

476
00:19:03,039 --> 00:19:05,520
uh consider this another protocol within

477
00:19:05,520 --> 00:19:06,960
the routing area

478
00:19:06,960 --> 00:19:09,200
um and this would be a publish subscribe

479
00:19:09,200 --> 00:19:10,799
service pub sub

480
00:19:10,799 --> 00:19:12,720
kind of approach

481
00:19:12,720 --> 00:19:15,440
basically any data that we want to carry

482
00:19:15,440 --> 00:19:17,200
around but don't want to put in the

483
00:19:17,200 --> 00:19:20,960
routing protocols we could put in here

484
00:19:20,960 --> 00:19:22,799
the basic idea is that this would run on

485
00:19:22,799 --> 00:19:24,880
abrs although there's actually a neat

486
00:19:24,880 --> 00:19:26,720
way of not running it directly on the

487
00:19:26,720 --> 00:19:28,400
abrs

488
00:19:28,400 --> 00:19:29,440
and

489
00:19:29,440 --> 00:19:32,160
um i've con i've added some simple

490
00:19:32,160 --> 00:19:34,000
register notification

491
00:19:34,000 --> 00:19:35,440
messaging

492
00:19:35,440 --> 00:19:38,080
i have no expertise in pub sub

493
00:19:38,080 --> 00:19:40,400
architectures so apologies if i've

494
00:19:40,400 --> 00:19:42,720
messed something up uh contributions

495
00:19:42,720 --> 00:19:44,640
most welcome

496
00:19:44,640 --> 00:19:46,720
and this is intended to be more general

497
00:19:46,720 --> 00:19:49,600
than just liveness despite the title um

498
00:19:49,600 --> 00:19:51,280
i've already heard a proposal that we

499
00:19:51,280 --> 00:19:54,400
stuff a bunch of capabilities into this

500
00:19:54,400 --> 00:19:57,600
and that would be most welcome

501
00:19:58,640 --> 00:20:00,559
all right the idea of this is pretty

502
00:20:00,559 --> 00:20:02,640
simple

503
00:20:02,640 --> 00:20:05,280
b and c are some a pair of abrs running

504
00:20:05,280 --> 00:20:07,120
this protocol

505
00:20:07,120 --> 00:20:10,080
and router comes up and he wants to talk

506
00:20:10,080 --> 00:20:10,960
about

507
00:20:10,960 --> 00:20:13,039
loopbacks he's looking for liveness

508
00:20:13,039 --> 00:20:15,760
information about particular addresses

509
00:20:15,760 --> 00:20:18,080
so he fires off a registration message

510
00:20:18,080 --> 00:20:22,720
and he talks to his abr router b

511
00:20:22,720 --> 00:20:25,360
router b looks at the prefix that a a

512
00:20:25,360 --> 00:20:27,679
has requested and says oh

513
00:20:27,679 --> 00:20:30,320
i know that that's over in area two

514
00:20:30,320 --> 00:20:33,200
i'm going to send a registration over to

515
00:20:33,200 --> 00:20:36,480
router 3 the abr for area 2

516
00:20:36,480 --> 00:20:38,880
and register for loopbacks coming from

517
00:20:38,880 --> 00:20:41,520
area 2.

518
00:20:42,080 --> 00:20:44,400
router c now sees

519
00:20:44,400 --> 00:20:46,799
liveness events where

520
00:20:46,799 --> 00:20:50,159
a node within area 2 drops off

521
00:20:50,159 --> 00:20:53,520
and he sends a notification saying

522
00:20:53,520 --> 00:20:56,000
that you know this router has fallen off

523
00:20:56,000 --> 00:20:58,880
of the whirl off the face of the earth

524
00:20:58,880 --> 00:21:01,840
and he forwards that back to router b

525
00:21:01,840 --> 00:21:04,080
router b in turn sends that notification

526
00:21:04,080 --> 00:21:07,439
back to router a

527
00:21:10,640 --> 00:21:12,720
all right

528
00:21:12,720 --> 00:21:15,360
doing this is not hard

529
00:21:15,360 --> 00:21:17,760
the easiest way of doing this is to put

530
00:21:17,760 --> 00:21:19,440
all of your loopbacks in a single

531
00:21:19,440 --> 00:21:21,600
hierarchical prefix

532
00:21:21,600 --> 00:21:24,320
um your local avr registers for all

533
00:21:24,320 --> 00:21:28,000
remote more specific prefixes

534
00:21:28,000 --> 00:21:31,039
okay if you do this right you've got n

535
00:21:31,039 --> 00:21:33,840
nodes per area and a areas

536
00:21:33,840 --> 00:21:36,640
with two abrs per area then an abr is

537
00:21:36,640 --> 00:21:38,880
going to have n local sessions and

538
00:21:38,880 --> 00:21:40,480
registrations

539
00:21:40,480 --> 00:21:42,720
and two times a minus one remote

540
00:21:42,720 --> 00:21:45,600
sessions and registrations so this is

541
00:21:45,600 --> 00:21:48,000
about 3 000

542
00:21:48,000 --> 00:21:50,159
and this is entirely sustainable and

543
00:21:50,159 --> 00:21:52,320
those of you with bgp implementation

544
00:21:52,320 --> 00:21:53,840
experience will not be scared by this

545
00:21:53,840 --> 00:21:56,159
number

546
00:21:56,159 --> 00:21:57,679
if you really don't like running this on

547
00:21:57,679 --> 00:21:59,440
your abr

548
00:21:59,440 --> 00:22:02,400
you can actually do this on any igp

549
00:22:02,400 --> 00:22:05,360
speaker in the area and

550
00:22:05,360 --> 00:22:07,600
that makes it nice because you can now

551
00:22:07,600 --> 00:22:10,480
run this actually on non-router hardware

552
00:22:10,480 --> 00:22:14,720
and it can scale with cheap memory

553
00:22:14,720 --> 00:22:17,039
so this is actually helpful

554
00:22:17,039 --> 00:22:18,480
um

555
00:22:18,480 --> 00:22:21,520
i did add igp capabilities so that we

556
00:22:21,520 --> 00:22:23,840
can identify the speakers here so we

557
00:22:23,840 --> 00:22:27,840
don't actually have to configure that

558
00:22:29,039 --> 00:22:30,000
all right

559
00:22:30,000 --> 00:22:33,600
all the rest of this is just boring tlv

560
00:22:33,600 --> 00:22:35,360
definitions

561
00:22:35,360 --> 00:22:37,120
i'm not going to talk through them in

562
00:22:37,120 --> 00:22:39,360
growing detail there's registration

563
00:22:39,360 --> 00:22:41,200
message

564
00:22:41,200 --> 00:22:43,120
then within a registration message

565
00:22:43,120 --> 00:22:45,840
message there's a subtle saying liveness

566
00:22:45,840 --> 00:22:48,400
for this prefix

567
00:22:48,400 --> 00:22:50,320
there's a notification message and it

568
00:22:50,320 --> 00:22:52,320
carries some tlvs

569
00:22:52,320 --> 00:22:54,159
and it carries liveness notifications

570
00:22:54,159 --> 00:22:57,039
for a prefix

571
00:22:58,240 --> 00:23:02,000
and there's a capability bit for isis

572
00:23:02,000 --> 00:23:05,679
and a capability for ospf

573
00:23:05,679 --> 00:23:07,360
and that's it

574
00:23:07,360 --> 00:23:08,690
any questions

575
00:23:08,690 --> 00:23:10,799
[Music]

576
00:23:10,799 --> 00:23:12,480
looks like um

577
00:23:12,480 --> 00:23:16,720
igen who's in the queue first whoa

578
00:23:17,280 --> 00:23:20,440
go ahead

579
00:23:23,039 --> 00:23:25,760
the the first question i think

580
00:23:25,760 --> 00:23:29,360
there are exists the pub sub mechanism

581
00:23:29,360 --> 00:23:31,280
so why we

582
00:23:31,280 --> 00:23:33,360
invent a new pop-up

583
00:23:33,360 --> 00:23:35,440
mechanism and

584
00:23:35,440 --> 00:23:36,880
and the second question why would you

585
00:23:36,880 --> 00:23:39,520
win such intentions within the idp

586
00:23:39,520 --> 00:23:40,799
working group

587
00:23:40,799 --> 00:23:42,880
the second the third question is

588
00:23:42,880 --> 00:23:44,000
you know the

589
00:23:44,000 --> 00:23:45,919
the pressure

590
00:23:45,919 --> 00:23:49,760
not only on the apr is not only for the

591
00:23:49,760 --> 00:23:52,960
session session number but all but also

592
00:23:52,960 --> 00:23:55,520
but for the

593
00:23:55,520 --> 00:23:57,279
registered information

594
00:23:57,279 --> 00:24:00,000
you know the apr must keep the

595
00:24:00,000 --> 00:24:01,840
register table

596
00:24:01,840 --> 00:24:03,840
so i think this is

597
00:24:03,840 --> 00:24:04,720
will

598
00:24:04,720 --> 00:24:06,799
give the pressure give the pressure to

599
00:24:06,799 --> 00:24:08,240
the avr

600
00:24:08,240 --> 00:24:09,120
and

601
00:24:09,120 --> 00:24:11,120
and we also mentioned that

602
00:24:11,120 --> 00:24:12,960
the

603
00:24:12,960 --> 00:24:14,480
you can find the

604
00:24:14,480 --> 00:24:17,679
harder itp node within air to to do the

605
00:24:17,679 --> 00:24:18,400
work

606
00:24:18,400 --> 00:24:20,880
but i think the such world can only be

607
00:24:20,880 --> 00:24:22,559
done

608
00:24:22,559 --> 00:24:25,520
by the avr so uh i think

609
00:24:25,520 --> 00:24:27,360
we will stop

610
00:24:27,360 --> 00:24:29,840
we're okay with more pressure on the abr

611
00:24:29,840 --> 00:24:31,120
okay

612
00:24:31,120 --> 00:24:34,240
okay buffer overrun massively

613
00:24:34,240 --> 00:24:37,760
um i've been up since 2 am

614
00:24:37,760 --> 00:24:40,640
i am not working on all cylinders i

615
00:24:40,640 --> 00:24:42,960
certainly cannot buffer all of that

616
00:24:42,960 --> 00:24:43,840
um

617
00:24:43,840 --> 00:24:47,120
so going back to your first question um

618
00:24:47,120 --> 00:24:50,320
why a new pub sub mechanism

619
00:24:50,320 --> 00:24:52,960
i have not seen a pub a similar pub sub

620
00:24:52,960 --> 00:24:57,440
mechanism in is in ietf

621
00:24:57,440 --> 00:24:59,120
if there is such a thing i don't know

622
00:24:59,120 --> 00:25:02,080
about it feel free to point me at it um

623
00:25:02,080 --> 00:25:04,000
you know i'm happy to reuse it if we've

624
00:25:04,000 --> 00:25:05,840
got something

625
00:25:05,840 --> 00:25:07,360
okay and i've already forgotten what

626
00:25:07,360 --> 00:25:08,880
your question two was could you please

627
00:25:08,880 --> 00:25:11,880
repeat

628
00:25:18,799 --> 00:25:21,039
could you please repeat the question

629
00:25:21,039 --> 00:25:23,919
you went to the pubs of mechanically in

630
00:25:23,919 --> 00:25:26,559
the itp working group i think the

631
00:25:26,559 --> 00:25:29,200
notification

632
00:25:29,200 --> 00:25:31,360
message and the mechanism is not

633
00:25:31,360 --> 00:25:33,600
released with the itp so i think if you

634
00:25:33,600 --> 00:25:38,240
want to invent a new uh notification

635
00:25:38,240 --> 00:25:39,760
protocol i think

636
00:25:39,760 --> 00:25:40,840
you can try

637
00:25:40,840 --> 00:25:44,000
to form a new working group

638
00:25:44,000 --> 00:25:46,320
i think as you have said that the search

639
00:25:46,320 --> 00:25:48,880
mechanism can be used to

640
00:25:48,880 --> 00:25:50,640
transfer other

641
00:25:50,640 --> 00:25:54,400
non-idp related information

642
00:25:54,400 --> 00:25:57,200
i agree that this could go outside of

643
00:25:57,200 --> 00:25:59,600
this working group but the problem that

644
00:25:59,600 --> 00:26:01,520
we're trying to solve here was raised in

645
00:26:01,520 --> 00:26:02,880
this working group

646
00:26:02,880 --> 00:26:06,080
um so i started off here um even if it

647
00:26:06,080 --> 00:26:07,919
had been in another working group we

648
00:26:07,919 --> 00:26:10,799
would have been presenting here in uh

649
00:26:10,799 --> 00:26:14,080
lsr because of the lsr problem

650
00:26:14,080 --> 00:26:16,159
so if if the working group decides that

651
00:26:16,159 --> 00:26:18,240
this is interesting and we want to go

652
00:26:18,240 --> 00:26:20,240
forward i'm happy to take it where

653
00:26:20,240 --> 00:26:22,159
wherever the area directors want it to

654
00:26:22,159 --> 00:26:25,159
go

655
00:26:25,840 --> 00:26:26,880
okay

656
00:26:26,880 --> 00:26:29,120
all right

657
00:26:29,840 --> 00:26:33,439
i know i shouldn't have more questions

658
00:26:35,360 --> 00:26:37,039
so i think

659
00:26:37,039 --> 00:26:38,559
it is not

660
00:26:38,559 --> 00:26:42,080
the right place for for the for for the

661
00:26:42,080 --> 00:26:46,879
person to evaluate the process okay

662
00:26:47,600 --> 00:26:50,240
okay so my question is clarification so

663
00:26:50,240 --> 00:26:53,919
i see you do registration uh do you only

664
00:26:53,919 --> 00:26:56,320
do the registration for the node which

665
00:26:56,320 --> 00:26:59,279
has client attachment or is every node

666
00:26:59,279 --> 00:27:02,159
i'm not confused on that

667
00:27:02,159 --> 00:27:04,159
uh so the way this is currently

668
00:27:04,159 --> 00:27:06,400
described we're doing registration for

669
00:27:06,400 --> 00:27:08,159
entire prefixes and everything

670
00:27:08,159 --> 00:27:10,080
underneath a prefix

671
00:27:10,080 --> 00:27:12,240
so that allows us to do a very nice

672
00:27:12,240 --> 00:27:14,480
thing where

673
00:27:14,480 --> 00:27:18,240
router a can actually generate a single

674
00:27:18,240 --> 00:27:21,360
registration mechanism uh message

675
00:27:21,360 --> 00:27:24,960
uh that covers all of the loopbacks

676
00:27:24,960 --> 00:27:27,760
for the entire network

677
00:27:27,760 --> 00:27:31,120
oh so his registration for for his own

678
00:27:31,120 --> 00:27:33,279
loopback addresses not for the client

679
00:27:33,279 --> 00:27:35,840
because like a b c d each can have a

680
00:27:35,840 --> 00:27:38,640
bunch of client prefix attached so i'm

681
00:27:38,640 --> 00:27:40,320
i'm curious like which one do you

682
00:27:40,320 --> 00:27:41,679
register

683
00:27:41,679 --> 00:27:44,080
he's registering for all

684
00:27:44,080 --> 00:27:46,240
all clients loopback addresses

685
00:27:46,240 --> 00:27:49,520
throughout the entire network

686
00:27:49,520 --> 00:27:51,520
okay isn't that same as lsa you

687
00:27:51,520 --> 00:27:54,480
advertise all the prefixes attached to

688
00:27:54,480 --> 00:27:55,760
you

689
00:27:55,760 --> 00:27:59,600
no we're not advertising anything here

690
00:28:00,000 --> 00:28:04,240
this is a request oh request oh okay

691
00:28:04,240 --> 00:28:06,240
okay thank you please

692
00:28:06,240 --> 00:28:07,840
please tell me about the liveness for

693
00:28:07,840 --> 00:28:11,120
everything in ten slash eight

694
00:28:11,760 --> 00:28:14,799
oh so it's a request b and b respond

695
00:28:14,799 --> 00:28:15,760
back

696
00:28:15,760 --> 00:28:16,880
okay

697
00:28:16,880 --> 00:28:18,799
see response

698
00:28:18,799 --> 00:28:22,960
i see got it thank you thank you so much

699
00:28:24,080 --> 00:28:27,120
hi this is the story

700
00:28:27,520 --> 00:28:28,880
um

701
00:28:28,880 --> 00:28:31,360
tony have you considered uh multihop

702
00:28:31,360 --> 00:28:33,360
ipbfd i have not read your draft so

703
00:28:33,360 --> 00:28:36,320
maybe you have lot more than

704
00:28:36,320 --> 00:28:38,559
just the liveliness check but it seems

705
00:28:38,559 --> 00:28:41,200
like you are also

706
00:28:41,200 --> 00:28:43,520
propagating the failure check based on

707
00:28:43,520 --> 00:28:46,159
whoever has registered like for instance

708
00:28:46,159 --> 00:28:48,960
a has also registered to be notified if

709
00:28:48,960 --> 00:28:50,960
the c has gone down is that

710
00:28:50,960 --> 00:28:52,720
even though the session is between a and

711
00:28:52,720 --> 00:28:53,440
b

712
00:28:53,440 --> 00:28:56,240
liveliness check

713
00:28:56,320 --> 00:28:58,399
again a is registering

714
00:28:58,399 --> 00:29:01,919
to get uh loopback update uptime or

715
00:29:01,919 --> 00:29:05,039
updates for the entire network

716
00:29:05,039 --> 00:29:07,520
so yes he's gonna get

717
00:29:07,520 --> 00:29:10,880
notifications about bc and d

718
00:29:10,880 --> 00:29:13,679
i see okay so i i

719
00:29:13,679 --> 00:29:15,520
originally i was asking

720
00:29:15,520 --> 00:29:18,640
if multi-hop ipp fd for liveliness check

721
00:29:18,640 --> 00:29:20,159
work but i think you have a lot more

722
00:29:20,159 --> 00:29:23,279
here than what i was thinking i mean

723
00:29:23,279 --> 00:29:26,640
i'm not trying to compete with bfd here

724
00:29:26,640 --> 00:29:27,600
yeah

725
00:29:27,600 --> 00:29:28,559
right

726
00:29:28,559 --> 00:29:30,240
that has been proposed as one of the

727
00:29:30,240 --> 00:29:32,080
solutions but it wasn't it wasn't what

728
00:29:32,080 --> 00:29:34,880
people are happy with

729
00:29:34,880 --> 00:29:38,000
okay the less

730
00:29:40,240 --> 00:29:41,039
so

731
00:29:41,039 --> 00:29:43,039
tony you know i'm on record just not

732
00:29:43,039 --> 00:29:44,799
liking this solution i'm not gonna

733
00:29:44,799 --> 00:29:46,399
rehash this

734
00:29:46,399 --> 00:29:48,080
i have a different

735
00:29:48,080 --> 00:29:50,320
i have a different question for you

736
00:29:50,320 --> 00:29:51,120
um

737
00:29:51,120 --> 00:29:53,200
you're inventing a new

738
00:29:53,200 --> 00:29:55,840
application or service if you will

739
00:29:55,840 --> 00:29:58,000
which operators are going to have to

740
00:29:58,000 --> 00:30:01,440
configure and maintain and troubleshoot

741
00:30:01,440 --> 00:30:04,080
and the source of all this information

742
00:30:04,080 --> 00:30:06,720
comes from the igbs that they're already

743
00:30:06,720 --> 00:30:08,960
running and know how to

744
00:30:08,960 --> 00:30:11,600
configure and manage so forth

745
00:30:11,600 --> 00:30:14,320
do you have any feedback from operators

746
00:30:14,320 --> 00:30:16,799
as to how they feel about this are they

747
00:30:16,799 --> 00:30:18,640
are they interested are they scared of

748
00:30:18,640 --> 00:30:20,320
it

749
00:30:20,320 --> 00:30:23,039
do they have anything

750
00:30:23,039 --> 00:30:26,000
um i've heard some feedback from one

751
00:30:26,000 --> 00:30:27,200
operator

752
00:30:27,200 --> 00:30:31,360
um i i i believe in the room

753
00:30:31,360 --> 00:30:35,959
uh i will not speak for him

754
00:30:36,159 --> 00:30:37,600
so um

755
00:30:37,600 --> 00:30:39,279
but no other than that i have not heard

756
00:30:39,279 --> 00:30:41,600
a lot of feedback i will point out that

757
00:30:41,600 --> 00:30:44,399
routers have lots and lots of subsystems

758
00:30:44,399 --> 00:30:46,080
lots and lots of different things that

759
00:30:46,080 --> 00:30:47,840
people have to configure

760
00:30:47,840 --> 00:30:48,880
um

761
00:30:48,880 --> 00:30:52,559
one more i agree is a pain but frankly

762
00:30:52,559 --> 00:30:54,559
adding one more mechanism to our

763
00:30:54,559 --> 00:30:55,840
architecture

764
00:30:55,840 --> 00:30:57,679
is much better in my mind than

765
00:30:57,679 --> 00:31:00,559
overloading dozens and dozens of

766
00:31:00,559 --> 00:31:04,080
things onto one protocol

767
00:31:04,080 --> 00:31:06,320
all right i guess the only point i want

768
00:31:06,320 --> 00:31:07,440
to make is

769
00:31:07,440 --> 00:31:09,840
you and i might agree or disagree but if

770
00:31:09,840 --> 00:31:11,840
nobody wants to deploy this then it's

771
00:31:11,840 --> 00:31:14,640
kind of moot so i'm really interested to

772
00:31:14,640 --> 00:31:17,200
to find out

773
00:31:21,760 --> 00:31:23,519
you know somehow we have to come to some

774
00:31:23,519 --> 00:31:26,640
solution for pua problems

775
00:31:26,640 --> 00:31:29,039
agreed

776
00:31:29,519 --> 00:31:30,720
okay

777
00:31:30,720 --> 00:31:33,120
we're on

778
00:31:44,880 --> 00:31:47,679
messing up ospf i'm sure

779
00:31:47,679 --> 00:31:50,320
he's nearing the cisco systems that uh

780
00:31:50,320 --> 00:31:51,120
thanks

781
00:31:51,120 --> 00:31:52,640
speaking as working remember thanks for

782
00:31:52,640 --> 00:31:54,720
a very readable draft it was very easy

783
00:31:54,720 --> 00:31:58,320
to easy to read through this uh the the

784
00:31:58,320 --> 00:32:00,000
thing i was going to point out is i

785
00:32:00,000 --> 00:32:01,840
realize it's not limited to this but if

786
00:32:01,840 --> 00:32:03,760
if you put all your

787
00:32:03,760 --> 00:32:06,799
loopbacks in one hierarchical prefix

788
00:32:06,799 --> 00:32:08,559
i'm going to go on the record as saying

789
00:32:08,559 --> 00:32:09,760
i don't think

790
00:32:09,760 --> 00:32:11,440
10 20 000

791
00:32:11,440 --> 00:32:12,960
uh

792
00:32:12,960 --> 00:32:15,919
advertisements of loopbacks and ospf is

793
00:32:15,919 --> 00:32:17,200
that many

794
00:32:17,200 --> 00:32:18,640
i don't really i really don't think

795
00:32:18,640 --> 00:32:20,960
especially maybe because because they're

796
00:32:20,960 --> 00:32:22,559
real small you know they're little small

797
00:32:22,559 --> 00:32:25,440
lsas it's not a big deal that you have

798
00:32:25,440 --> 00:32:27,519
these and the granularity and if they

799
00:32:27,519 --> 00:32:29,679
they don't go up and down that often you

800
00:32:29,679 --> 00:32:31,440
know it's not it's not that's not a big

801
00:32:31,440 --> 00:32:33,360
deal to me so if you put them all in a

802
00:32:33,360 --> 00:32:36,399
separate prefix anyway you could just

803
00:32:36,399 --> 00:32:38,080
not summarize those

804
00:32:38,080 --> 00:32:39,840
that would be my first comment my other

805
00:32:39,840 --> 00:32:42,799
one how did you come up with o and n for

806
00:32:42,799 --> 00:32:45,360
ipv4 and ipv6 that's it i was just

807
00:32:45,360 --> 00:32:47,200
curious where you got those from is that

808
00:32:47,200 --> 00:32:49,360
latin or something

809
00:32:49,360 --> 00:32:52,320
uh that's old and new

810
00:32:52,320 --> 00:32:53,679
ah

811
00:32:53,679 --> 00:32:54,559
okay

812
00:32:54,559 --> 00:32:56,720
i should have gotten that

813
00:32:56,720 --> 00:32:58,320
thanks

814
00:32:58,320 --> 00:32:59,919
and the reason for

815
00:32:59,919 --> 00:33:02,559
aggregating things into a prefix was to

816
00:33:02,559 --> 00:33:04,240
allow us to minimize the number of

817
00:33:04,240 --> 00:33:07,200
registration messages flying around

818
00:33:07,200 --> 00:33:10,080
no i i realized

819
00:33:10,080 --> 00:33:11,519
through that administrative burden

820
00:33:11,519 --> 00:33:12,960
anyway i i

821
00:33:12,960 --> 00:33:14,720
i'm just saying at least for osbf i

822
00:33:14,720 --> 00:33:16,399
don't see a problem with with tens of

823
00:33:16,399 --> 00:33:19,279
thousands of advertisements

824
00:33:19,279 --> 00:33:21,840
okay the notification is on a it's on a

825
00:33:21,840 --> 00:33:23,919
it's on a host level right you register

826
00:33:23,919 --> 00:33:26,320
for interest in a prefix

827
00:33:26,320 --> 00:33:30,159
you get notified of a sing single

828
00:33:30,159 --> 00:33:33,919
correct deads yeah okay

829
00:33:34,399 --> 00:33:35,919
all right uh

830
00:33:35,919 --> 00:33:37,840
is it

831
00:33:37,840 --> 00:33:40,880
jeffrey from juniper

832
00:33:40,880 --> 00:33:43,519
when i see the registration notification

833
00:33:43,519 --> 00:33:45,679
the sequence of events especially from

834
00:33:45,679 --> 00:33:48,399
one layer to another propagation reminds

835
00:33:48,399 --> 00:33:49,840
me of the

836
00:33:49,840 --> 00:33:54,080
bgp's raw target constraint mechanism

837
00:33:54,080 --> 00:33:57,679
i thought i just make that comment

838
00:33:57,679 --> 00:33:59,840
okay i was not consciously mirroring

839
00:33:59,840 --> 00:34:02,080
that

840
00:34:02,080 --> 00:34:04,240
oh um i didn't mean that you were

841
00:34:04,240 --> 00:34:06,880
mirroring either

842
00:34:10,320 --> 00:34:11,440
okay

843
00:34:11,440 --> 00:34:14,320
oh one more uh guy uh quick now though

844
00:34:14,320 --> 00:34:17,200
we're almost out of time

845
00:34:18,960 --> 00:34:20,800
and tony

846
00:34:20,800 --> 00:34:23,679
you know on the uh

847
00:34:23,760 --> 00:34:25,520
do you guys hear an actor

848
00:34:25,520 --> 00:34:26,960
i'm sorry i don't think there's a bad

849
00:34:26,960 --> 00:34:29,280
actor

850
00:34:30,719 --> 00:34:32,159
um

851
00:34:32,159 --> 00:34:34,960
with with the

852
00:34:35,520 --> 00:34:37,839
mailing list i had to mention that there

853
00:34:37,839 --> 00:34:39,280
is uh

854
00:34:39,280 --> 00:34:41,520
overhead are there any concerns with

855
00:34:41,520 --> 00:34:42,960
overhead

856
00:34:42,960 --> 00:34:45,760
related to um maintaining i guess the

857
00:34:45,760 --> 00:34:49,280
seconds i guess between the different um

858
00:34:49,280 --> 00:34:53,679
elements that are that are participating

859
00:34:55,359 --> 00:34:56,719
i don't have a whole lot of concerns

860
00:34:56,719 --> 00:34:59,119
about it that's not a whole lot of data

861
00:34:59,119 --> 00:35:02,880
um in the modern large scale network and

862
00:35:02,880 --> 00:35:05,440
because we can take it off the abr it

863
00:35:05,440 --> 00:35:07,839
doesn't even have to be router-based

864
00:35:07,839 --> 00:35:10,240
so you know

865
00:35:10,240 --> 00:35:12,800
take standard commercial server instance

866
00:35:12,800 --> 00:35:16,200
drop it somewhere

867
00:35:17,200 --> 00:35:19,440
thank you okay

868
00:35:19,440 --> 00:35:22,880
all right great thank you tony

869
00:35:23,680 --> 00:35:25,599
next up

870
00:35:25,599 --> 00:35:27,119
g

871
00:35:27,119 --> 00:35:30,079
um igp extensions for scalable segment

872
00:35:30,079 --> 00:35:32,560
routing based enhanced

873
00:35:32,560 --> 00:35:36,000
i need to click mute all

874
00:35:39,599 --> 00:35:40,800
okay uh

875
00:35:40,800 --> 00:35:42,960
you may need to i just muted everyone so

876
00:35:42,960 --> 00:35:44,800
you may need to unmute yourself again

877
00:35:44,800 --> 00:35:47,119
sorry

878
00:35:48,880 --> 00:35:51,599
okay great i see you and i'm going to

879
00:35:51,599 --> 00:35:54,000
give you

880
00:35:54,079 --> 00:35:58,079
i'm going to select the slide this time

881
00:35:58,079 --> 00:35:58,960
it's

882
00:35:58,960 --> 00:36:02,079
enhanced vpn

883
00:36:02,160 --> 00:36:03,599
yes

884
00:36:03,599 --> 00:36:06,079
and then

885
00:36:06,960 --> 00:36:09,920
oh that's interesting

886
00:36:10,000 --> 00:36:11,680
okay i'm gonna give you the control and

887
00:36:11,680 --> 00:36:13,520
you may have to you might need to select

888
00:36:13,520 --> 00:36:15,760
your your deck out of there

889
00:36:15,760 --> 00:36:19,040
should be number four

890
00:36:20,560 --> 00:36:23,119
number four

891
00:36:23,119 --> 00:36:24,480
yes

892
00:36:24,480 --> 00:36:26,240
yeah just click on that and you'll get

893
00:36:26,240 --> 00:36:28,640
feel that control yeah can you see it

894
00:36:28,640 --> 00:36:30,799
now

895
00:36:33,760 --> 00:36:35,920
can you see the slides now

896
00:36:35,920 --> 00:36:38,400
yep okay

897
00:36:38,400 --> 00:36:41,119
so ah hello everyone this is jedong from

898
00:36:41,119 --> 00:36:44,720
huawei i'm going to give an update about

899
00:36:44,720 --> 00:36:47,839
the igp extensions for the scalable

900
00:36:47,839 --> 00:36:50,240
second routine-based enhanced vpn or

901
00:36:50,240 --> 00:36:52,240
korean vpn plus

902
00:36:52,240 --> 00:36:54,720
i'm present presenting here on behalf of

903
00:36:54,720 --> 00:36:58,480
the co-authors listed on the front page

904
00:36:58,480 --> 00:37:00,800
okay

905
00:37:00,960 --> 00:37:03,440
so here are some backgrounds the vaping

906
00:37:03,440 --> 00:37:06,480
plus framework is a described in the

907
00:37:06,480 --> 00:37:09,760
enhanced vbn draft in teas and it

908
00:37:09,760 --> 00:37:11,760
mentions that one typical use case is to

909
00:37:11,760 --> 00:37:15,040
deliver the idf network slide service

910
00:37:15,040 --> 00:37:17,680
and ituner slice framework is this

911
00:37:17,680 --> 00:37:21,040
described in the itunes draft

912
00:37:21,040 --> 00:37:23,680
it introduced the concept called

913
00:37:23,680 --> 00:37:26,079
network resource partition or nrp for

914
00:37:26,079 --> 00:37:28,079
the network slice realization

915
00:37:28,079 --> 00:37:30,720
so in the context of network slicing we

916
00:37:30,720 --> 00:37:33,280
can consider the nrp as an

917
00:37:33,280 --> 00:37:35,760
instantiation of the vtn defining vpn

918
00:37:35,760 --> 00:37:37,680
plus framework

919
00:37:37,680 --> 00:37:40,320
and the scalability of the nrp as

920
00:37:40,320 --> 00:37:42,480
something considered

921
00:37:42,480 --> 00:37:44,720
gee one second

922
00:37:44,720 --> 00:37:47,280
i'm seeing in the chat room apparently

923
00:37:47,280 --> 00:37:51,480
there's no sound

924
00:37:53,760 --> 00:37:55,599
everyone remote is hearing you

925
00:37:55,599 --> 00:37:58,320
but i don't think anybody in the room

926
00:37:58,320 --> 00:37:59,920
unfortunately everyone in the room

927
00:37:59,920 --> 00:38:02,839
accounts for three people

928
00:38:02,839 --> 00:38:06,240
so people in the room cannot hear me

929
00:38:06,240 --> 00:38:08,079
yeah but i'm not sure we should hold the

930
00:38:08,079 --> 00:38:10,160
entire meeting up for

931
00:38:10,160 --> 00:38:13,200
three people uh

932
00:38:14,079 --> 00:38:14,960
so

933
00:38:14,960 --> 00:38:15,760
let's

934
00:38:15,760 --> 00:38:16,880
but they can't

935
00:38:16,880 --> 00:38:19,839
her personal devices

936
00:38:21,839 --> 00:38:23,359
what was that john

937
00:38:23,359 --> 00:38:26,240
not in the room

938
00:38:27,280 --> 00:38:29,680
uh i i was saying

939
00:38:29,680 --> 00:38:31,839
let's if we're going to continue then

940
00:38:31,839 --> 00:38:33,119
let's at least tell them we're going to

941
00:38:33,119 --> 00:38:35,040
do that so they have the opportunity to

942
00:38:35,040 --> 00:38:38,320
join from their laptops

943
00:38:39,920 --> 00:38:42,640
well let's give them maybe 30 seconds i

944
00:38:42,640 --> 00:38:44,240
we are we're already a little bit in

945
00:38:44,240 --> 00:38:48,399
that way so right

946
00:38:48,800 --> 00:38:51,599
there's exactly the uh the symmetrical

947
00:38:51,599 --> 00:38:53,920
case of um

948
00:38:53,920 --> 00:38:55,920
you know in a quote normal meeting

949
00:38:55,920 --> 00:38:58,000
unquote when these

950
00:38:58,000 --> 00:39:01,000
people

951
00:39:11,520 --> 00:39:14,640
our delegate has left the table

952
00:39:14,640 --> 00:39:16,640
maybe he's gonna go

953
00:39:16,640 --> 00:39:19,598
pound his r uh

954
00:39:19,800 --> 00:39:21,359
[Music]

955
00:39:21,359 --> 00:39:22,720
all right i'm gonna let them know that

956
00:39:22,720 --> 00:39:26,240
we're gonna move forward

957
00:39:26,320 --> 00:39:30,079
oh john looks like you are right now

958
00:39:35,200 --> 00:39:37,359
okay i'm gonna i'm gonna

959
00:39:37,359 --> 00:39:39,680
let's let's keep moving forward

960
00:39:39,680 --> 00:39:41,440
um

961
00:39:41,440 --> 00:39:45,200
go ahead shall i continue okay yes

962
00:39:45,200 --> 00:39:46,320
okay

963
00:39:46,320 --> 00:39:48,880
so i just mentioned that the scalability

964
00:39:48,880 --> 00:39:51,680
of the nrp is analyzed in the this graph

965
00:39:51,680 --> 00:39:54,320
and rv scalability and that draft

966
00:39:54,320 --> 00:39:56,320
provides guidelines for the control plan

967
00:39:56,320 --> 00:39:58,960
and data plane optimizations to improve

968
00:39:58,960 --> 00:40:01,200
the scalability for the nrp

969
00:40:01,200 --> 00:40:03,680
so this document defines mechanisms for

970
00:40:03,680 --> 00:40:05,599
igp

971
00:40:05,599 --> 00:40:07,520
to distribute the

972
00:40:07,520 --> 00:40:11,200
status and information for the nrp's

973
00:40:11,200 --> 00:40:15,118
vtns in a scalable manner

974
00:40:18,079 --> 00:40:20,560
so here is uh the summary about the

975
00:40:20,560 --> 00:40:22,240
optimizations for the battery

976
00:40:22,240 --> 00:40:23,839
scalability

977
00:40:23,839 --> 00:40:26,800
the first thing we can do is we can map

978
00:40:26,800 --> 00:40:28,960
multiple overlay connectivity services

979
00:40:28,960 --> 00:40:31,040
to the same vtn

980
00:40:31,040 --> 00:40:33,920
so that we can use the one shared vtn to

981
00:40:33,920 --> 00:40:35,839
provide annually network

982
00:40:35,839 --> 00:40:38,079
topology and resource attributes

983
00:40:38,079 --> 00:40:40,640
required by a group of the overlay

984
00:40:40,640 --> 00:40:42,160
services

985
00:40:42,160 --> 00:40:44,240
and the second point is we can decouple

986
00:40:44,240 --> 00:40:46,319
the topology and resource attribute of

987
00:40:46,319 --> 00:40:48,240
vtn so that

988
00:40:48,240 --> 00:40:50,319
we can allow multiple vtns to share the

989
00:40:50,319 --> 00:40:53,280
same topology and also the topology

990
00:40:53,280 --> 00:40:55,760
specific by route computation so that

991
00:40:55,760 --> 00:40:58,000
the overhead in control plane can be

992
00:40:58,000 --> 00:40:59,440
reduced

993
00:40:59,440 --> 00:41:01,680
uh we can also allow multiple vtn to

994
00:41:01,680 --> 00:41:03,440
share the same set of network resources

995
00:41:03,440 --> 00:41:06,079
on some of the network segments

996
00:41:06,079 --> 00:41:08,400
this brings flexibility in the resource

997
00:41:08,400 --> 00:41:10,480
isolation or sharing

998
00:41:10,480 --> 00:41:13,599
and the third one is we can introduce a

999
00:41:13,599 --> 00:41:16,880
network-wide v18 id in the data plane so

1000
00:41:16,880 --> 00:41:20,000
that we can avoid allocation of uh the

1001
00:41:20,000 --> 00:41:22,400
distribution of additional provition

1002
00:41:22,400 --> 00:41:23,520
segments

1003
00:41:23,520 --> 00:41:26,640
for the sr-based vaping plus

1004
00:41:26,640 --> 00:41:29,440
note that we are in the progress of an

1005
00:41:29,440 --> 00:41:32,160
alarm to align the terminology of vtn

1006
00:41:32,160 --> 00:41:33,760
and nrp

1007
00:41:33,760 --> 00:41:36,000
in a set of documents so here we just

1008
00:41:36,000 --> 00:41:37,599
keep using the waiting in the following

1009
00:41:37,599 --> 00:41:40,000
slides

1010
00:41:41,839 --> 00:41:43,839
okay so here are the extensions to the

1011
00:41:43,839 --> 00:41:45,599
iss

1012
00:41:45,599 --> 00:41:48,400
first is that we defined a new routine

1013
00:41:48,400 --> 00:41:50,800
definition subtle it is used to

1014
00:41:50,800 --> 00:41:54,400
advertise the associated topology and

1015
00:41:54,400 --> 00:41:56,640
other attributes of the vtn

1016
00:41:56,640 --> 00:41:59,119
and it can be used under the iss

1017
00:41:59,119 --> 00:42:01,119
launcher capability to

1018
00:42:01,119 --> 00:42:03,200
do you see the format is shown here

1019
00:42:03,200 --> 00:42:05,680
basically it contains the waiting id

1020
00:42:05,680 --> 00:42:09,440
which is a network-wide and an empty id

1021
00:42:09,440 --> 00:42:11,760
to identify the topology

1022
00:42:11,760 --> 00:42:14,560
associated with vtn and algorithm id to

1023
00:42:14,560 --> 00:42:16,880
identify the algorithm

1024
00:42:16,880 --> 00:42:18,800
associated which can be a normal

1025
00:42:18,800 --> 00:42:21,920
algorithm or a flux algorithm

1026
00:42:21,920 --> 00:42:24,480
there are also the fields for the future

1027
00:42:24,480 --> 00:42:27,520
of extension the sub-sub-trees can be

1028
00:42:27,520 --> 00:42:30,720
used to add additional attributes of the

1029
00:42:30,720 --> 00:42:33,200
vtn

1030
00:42:35,599 --> 00:42:38,160
for the topology advertisement as we

1031
00:42:38,160 --> 00:42:40,880
mentioned that multiple vpns can share

1032
00:42:40,880 --> 00:42:44,000
the same topology so that we can reuse

1033
00:42:44,000 --> 00:42:46,400
the existing mechanism like igp multi

1034
00:42:46,400 --> 00:42:48,640
topology or flux algo

1035
00:42:48,640 --> 00:42:52,319
to define the topology of the vtn and

1036
00:42:52,319 --> 00:42:54,160
distribute the attributes of the

1037
00:42:54,160 --> 00:42:55,599
topology

1038
00:42:55,599 --> 00:42:57,760
here multi topology can be reused to

1039
00:42:57,760 --> 00:43:00,480
define the logical topology and also the

1040
00:43:00,480 --> 00:43:03,200
topology node and link attributes

1041
00:43:03,200 --> 00:43:06,000
then flash argo can be used to specify

1042
00:43:06,000 --> 00:43:07,760
the metric type and the topology

1043
00:43:07,760 --> 00:43:10,560
constraints which are applied on the

1044
00:43:10,560 --> 00:43:13,119
specific topology

1045
00:43:13,119 --> 00:43:15,520
i know that multiple vitamins can be

1046
00:43:15,520 --> 00:43:17,200
associated with the same topology

1047
00:43:17,200 --> 00:43:20,160
algorithm table

1048
00:43:20,160 --> 00:43:23,200
for the segment routine the extensions

1049
00:43:23,200 --> 00:43:24,000
in

1050
00:43:24,000 --> 00:43:25,920
igp protocols can also provide the

1051
00:43:25,920 --> 00:43:27,520
distribution of their

1052
00:43:27,520 --> 00:43:30,960
topology algorithm typos srcs and srv6

1053
00:43:30,960 --> 00:43:33,520
locators

1054
00:43:36,480 --> 00:43:38,319
the second part is uh about the

1055
00:43:38,319 --> 00:43:40,720
advertisement of vtn resource attributes

1056
00:43:40,720 --> 00:43:43,680
here we introduce two options uh

1057
00:43:43,680 --> 00:43:46,400
the first one is to uh to use the igp

1058
00:43:46,400 --> 00:43:48,640
auto bundle mechanism with some minor

1059
00:43:48,640 --> 00:43:50,079
extensions

1060
00:43:50,079 --> 00:43:52,480
here we treat the subset of the link

1061
00:43:52,480 --> 00:43:55,680
resources allocated to a vtn as of

1062
00:43:55,680 --> 00:43:57,680
either a physical or virtual layer 2

1063
00:43:57,680 --> 00:44:00,079
member link of the layer 3 link

1064
00:44:00,079 --> 00:44:02,319
and using the outer boundary mechanism

1065
00:44:02,319 --> 00:44:06,400
we introduced a new flag called e-flat

1066
00:44:06,400 --> 00:44:08,560
it is used to indicate whether

1067
00:44:08,560 --> 00:44:10,560
the membranes can be used for load

1068
00:44:10,560 --> 00:44:12,160
balancing or

1069
00:44:12,160 --> 00:44:15,280
each membrane is used exclusively for

1070
00:44:15,280 --> 00:44:18,000
the associated vtns

1071
00:44:18,000 --> 00:44:20,480
we also introduce a new vitamin id sub

1072
00:44:20,480 --> 00:44:21,680
tlv

1073
00:44:21,680 --> 00:44:25,119
to specify the association between the

1074
00:44:25,119 --> 00:44:28,800
layer 2 member link and a set of vtns

1075
00:44:28,800 --> 00:44:30,400
so basically there's a list of the

1076
00:44:30,400 --> 00:44:34,920
written ids in this subtle

1077
00:44:36,960 --> 00:44:38,800
uh the second approach for the resource

1078
00:44:38,800 --> 00:44:40,960
attribute advertisement is to

1079
00:44:40,960 --> 00:44:44,160
introduce provition link t attributes

1080
00:44:44,160 --> 00:44:46,400
so that a subset of linked resources

1081
00:44:46,400 --> 00:44:49,200
allocated to a vtn can be modeled as a

1082
00:44:49,200 --> 00:44:52,240
priviledian key attributes of the link

1083
00:44:52,240 --> 00:44:55,200
here we need to introduce a new sub tlv

1084
00:44:55,200 --> 00:44:56,400
to define

1085
00:44:56,400 --> 00:44:59,440
uh to advertise the set of link resource

1086
00:44:59,440 --> 00:45:03,280
and the other t attributes for uh one or

1087
00:45:03,280 --> 00:45:05,599
a group of atms

1088
00:45:05,599 --> 00:45:07,920
here the waiting id sub sub tree is used

1089
00:45:07,920 --> 00:45:11,280
to specify the list of 18 ids and other

1090
00:45:11,280 --> 00:45:14,319
sub sub tlvs can include the t

1091
00:45:14,319 --> 00:45:16,800
attributes of trvs like the vtm

1092
00:45:16,800 --> 00:45:18,560
bandwidth of tlv

1093
00:45:18,560 --> 00:45:19,680
other

1094
00:45:19,680 --> 00:45:21,520
t attributes which are

1095
00:45:21,520 --> 00:45:25,759
associated with a set of vtns

1096
00:45:28,079 --> 00:45:30,319
the third part is to advertise the vtn

1097
00:45:30,319 --> 00:45:33,680
specific data identifiers so that we can

1098
00:45:33,680 --> 00:45:35,520
generate the following entries for

1099
00:45:35,520 --> 00:45:37,359
different tv teams

1100
00:45:37,359 --> 00:45:39,599
the first option is we can introduce

1101
00:45:39,599 --> 00:45:43,200
providing srcs or srv6 locators so here

1102
00:45:43,200 --> 00:45:47,520
we list a set of the new sub-trvs or trs

1103
00:45:47,520 --> 00:45:49,680
for this purpose

1104
00:45:49,680 --> 00:45:52,000
uh the second approach is as i mentioned

1105
00:45:52,000 --> 00:45:53,599
in the beginning

1106
00:45:53,599 --> 00:45:56,319
i'm sorry but we're out of time

1107
00:45:56,319 --> 00:45:58,480
what more has it asked for okay this is

1108
00:45:58,480 --> 00:46:00,480
i think the last uh

1109
00:46:00,480 --> 00:46:02,640
almost the last one

1110
00:46:02,640 --> 00:46:03,440
yeah

1111
00:46:03,440 --> 00:46:05,920
uh it's obvious technology is to use the

1112
00:46:05,920 --> 00:46:08,800
dedicated waiting id instead so we can

1113
00:46:08,800 --> 00:46:11,040
save this overhead of the

1114
00:46:11,040 --> 00:46:12,839
controller

1115
00:46:12,839 --> 00:46:15,680
distribution okay here's the next step

1116
00:46:15,680 --> 00:46:17,200
we will work on the terminology

1117
00:46:17,200 --> 00:46:19,119
alignment and we would like to hear

1118
00:46:19,119 --> 00:46:20,960
comments feedbacks from the looking

1119
00:46:20,960 --> 00:46:22,720
group then we

1120
00:46:22,720 --> 00:46:26,839
consider adoption of this document thank

1121
00:46:26,839 --> 00:46:29,599
you uh yeah the reason i was i was

1122
00:46:29,599 --> 00:46:31,200
trying to cut you short a little bit was

1123
00:46:31,200 --> 00:46:32,480
because i wanted to give a little bit of

1124
00:46:32,480 --> 00:46:34,240
time to discuss this

1125
00:46:34,240 --> 00:46:35,200
um

1126
00:46:35,200 --> 00:46:37,599
i'll i guess i'll throw my comments out

1127
00:46:37,599 --> 00:46:38,640
since

1128
00:46:38,640 --> 00:46:39,760
i get to

1129
00:46:39,760 --> 00:46:40,960
um

1130
00:46:40,960 --> 00:46:43,119
and that is that right now the

1131
00:46:43,119 --> 00:46:44,480
we're looking at a standard track

1132
00:46:44,480 --> 00:46:46,640
modification to the protocol based on

1133
00:46:46,640 --> 00:46:49,200
informational they have you are basing

1134
00:46:49,200 --> 00:46:51,599
part of this on adopted drafts and teas

1135
00:46:51,599 --> 00:46:53,680
but they're adopted as informational i

1136
00:46:53,680 --> 00:46:55,359
think we want to see that

1137
00:46:55,359 --> 00:46:57,200
you know i talked to lou

1138
00:46:57,200 --> 00:46:59,200
berger and you know

1139
00:46:59,200 --> 00:47:01,280
he he seems to think that there's still

1140
00:47:01,280 --> 00:47:03,040
a little bit more work to be done in on

1141
00:47:03,040 --> 00:47:04,960
this plus there's one other draft that

1142
00:47:04,960 --> 00:47:06,480
you referred to i believe that it was an

1143
00:47:06,480 --> 00:47:08,240
individual draft

1144
00:47:08,240 --> 00:47:10,240
so i think it's a little early to be

1145
00:47:10,240 --> 00:47:12,400
talking about adoption in this working

1146
00:47:12,400 --> 00:47:15,680
group um but you know i i'm not saying

1147
00:47:15,680 --> 00:47:16,400
that

1148
00:47:16,400 --> 00:47:17,920
i'm not i'm not trying to personally cut

1149
00:47:17,920 --> 00:47:19,839
it down and i'm speaking as a chair

1150
00:47:19,839 --> 00:47:22,319
right now right i think it's just

1151
00:47:22,319 --> 00:47:23,839
you know we need to like move it the

1152
00:47:23,839 --> 00:47:26,000
right or in the right order and the

1153
00:47:26,000 --> 00:47:28,400
right thing

1154
00:47:29,040 --> 00:47:31,359
oh okay uh so

1155
00:47:31,359 --> 00:47:33,520
uh what clarification which document are

1156
00:47:33,520 --> 00:47:35,359
you talking about in the test working

1157
00:47:35,359 --> 00:47:36,480
group

1158
00:47:36,480 --> 00:47:38,720
the

1159
00:47:38,720 --> 00:47:40,480
you normatively reference the two

1160
00:47:40,480 --> 00:47:42,800
informational ones

1161
00:47:42,800 --> 00:47:45,520
and you informatively reference the

1162
00:47:45,520 --> 00:47:47,440
personal

1163
00:47:47,440 --> 00:47:49,680
i don't i don't remember them you must

1164
00:47:49,680 --> 00:47:51,280
know what they are right what are you

1165
00:47:51,280 --> 00:47:52,960
saying

1166
00:47:52,960 --> 00:47:53,760
the

1167
00:47:53,760 --> 00:47:55,440
one of the chairs of the t's is in the

1168
00:47:55,440 --> 00:47:56,720
queue

1169
00:47:56,720 --> 00:47:57,839
oh okay

1170
00:47:57,839 --> 00:47:58,880
yes

1171
00:47:58,880 --> 00:47:59,680
yeah

1172
00:47:59,680 --> 00:48:02,839
go ahead

1173
00:48:08,880 --> 00:48:10,319
tariq go ahead

1174
00:48:10,319 --> 00:48:12,240
and then uh

1175
00:48:12,240 --> 00:48:15,119
okay can you hear me uh hello this is

1176
00:48:15,119 --> 00:48:17,440
tarek

1177
00:48:17,520 --> 00:48:19,119
uh hi terrell

1178
00:48:19,119 --> 00:48:21,440
oh you can hear me great uh thanks jimmy

1179
00:48:21,440 --> 00:48:23,440
for the presentation it's not a question

1180
00:48:23,440 --> 00:48:24,800
i just want to

1181
00:48:24,800 --> 00:48:27,200
um draw your attention that we have

1182
00:48:27,200 --> 00:48:29,520
proposed um

1183
00:48:29,520 --> 00:48:31,520
similar extensions in the lsr working

1184
00:48:31,520 --> 00:48:33,599
group um

1185
00:48:33,599 --> 00:48:34,400
for

1186
00:48:34,400 --> 00:48:38,000
per nrp sets as well as uh

1187
00:48:38,000 --> 00:48:41,359
uh per upper nrp link attributes uh

1188
00:48:41,359 --> 00:48:43,119
there are at least two drafts that we

1189
00:48:43,119 --> 00:48:46,079
presented uh one of them back in ief

1190
00:48:46,079 --> 00:48:47,280
110.

1191
00:48:47,280 --> 00:48:50,400
um so i agree with chris

1192
00:48:50,400 --> 00:48:53,040
we need to still

1193
00:48:53,040 --> 00:48:54,880
you know what you're proposing is it's

1194
00:48:54,880 --> 00:48:56,800
early for adoption at the moment maybe

1195
00:48:56,800 --> 00:48:58,480
we should collaborate

1196
00:48:58,480 --> 00:49:00,960
and uh complete the alignment as you

1197
00:49:00,960 --> 00:49:03,599
mentioned uh he still referenced vtn

1198
00:49:03,599 --> 00:49:06,000
when he has already

1199
00:49:06,000 --> 00:49:09,040
uh converged on the term nrp

1200
00:49:09,040 --> 00:49:10,960
so that that's what i wanted to draw

1201
00:49:10,960 --> 00:49:12,880
your attention to thanks

1202
00:49:12,880 --> 00:49:14,480
yeah thanks

1203
00:49:14,480 --> 00:49:17,520
okay thank you hi uh this this pawn uh

1204
00:49:17,520 --> 00:49:20,240
earlier i was on mute earlier um

1205
00:49:20,240 --> 00:49:22,000
speaking as such as the t is working

1206
00:49:22,000 --> 00:49:23,359
with chair uh

1207
00:49:23,359 --> 00:49:24,880
you're right we have had some discussion

1208
00:49:24,880 --> 00:49:27,119
with regards to vtn versus nrp in the

1209
00:49:27,119 --> 00:49:28,640
tease working group

1210
00:49:28,640 --> 00:49:30,640
the guidance from the ts chairs at this

1211
00:49:30,640 --> 00:49:32,000
point

1212
00:49:32,000 --> 00:49:35,839
is to use the term nrp in documents that

1213
00:49:35,839 --> 00:49:37,440
discuss generic usage of resource

1214
00:49:37,440 --> 00:49:39,760
partitions and refer to vtn

1215
00:49:39,760 --> 00:49:41,359
in only in documents that are specific

1216
00:49:41,359 --> 00:49:43,280
to enhanced vpn so if there are any

1217
00:49:43,280 --> 00:49:45,839
protocol fields or data model lease that

1218
00:49:45,839 --> 00:49:47,680
you need to refer to

1219
00:49:47,680 --> 00:49:50,079
an identifier for resource partition

1220
00:49:50,079 --> 00:49:52,079
the expectation is that you would use

1221
00:49:52,079 --> 00:49:54,720
nrpid in those scenarios so

1222
00:49:54,720 --> 00:49:56,880
we would have to we may end up looking

1223
00:49:56,880 --> 00:49:58,480
at each document in the space across

1224
00:49:58,480 --> 00:50:00,400
working groups and make a call but

1225
00:50:00,400 --> 00:50:02,480
that's the guidance for now uh then this

1226
00:50:02,480 --> 00:50:03,920
document seems to be a good candidate

1227
00:50:03,920 --> 00:50:07,839
where nrp should be used

1228
00:50:08,559 --> 00:50:10,559
okay great i think we need to do yeah we

1229
00:50:10,559 --> 00:50:13,839
are working on the alignment

1230
00:50:15,520 --> 00:50:16,559
okay great

1231
00:50:16,559 --> 00:50:19,040
so thanks

1232
00:50:19,760 --> 00:50:21,599
all right

1233
00:50:21,599 --> 00:50:25,359
so next up is uh uemo

1234
00:50:25,359 --> 00:50:29,040
yes okay yeah okay i'll give you control

1235
00:50:29,040 --> 00:50:31,760
uh pull your slides up if you can pull

1236
00:50:31,760 --> 00:50:33,760
yours in and not take the 12 15 that

1237
00:50:33,760 --> 00:50:37,000
would be great

1238
00:50:47,200 --> 00:50:50,800
do you see there we go thanks

1239
00:50:50,800 --> 00:50:53,040
hello everyone today i'm going to talk

1240
00:50:53,040 --> 00:50:58,400
about the lsr for sr proxy forwarding

1241
00:51:01,280 --> 00:51:03,119
there's a draft about the proxy

1242
00:51:03,119 --> 00:51:06,640
forwarding for srt pass protection

1243
00:51:06,640 --> 00:51:08,800
so this draft

1244
00:51:08,800 --> 00:51:12,079
contains igp extension

1245
00:51:12,079 --> 00:51:14,160
and provides

1246
00:51:14,160 --> 00:51:16,640
protection

1247
00:51:16,640 --> 00:51:18,079
of node

1248
00:51:18,079 --> 00:51:20,839
and abundances of a failed

1249
00:51:20,839 --> 00:51:22,559
node

1250
00:51:22,559 --> 00:51:25,599
we have presented this draft in spring

1251
00:51:25,599 --> 00:51:28,000
working group many times

1252
00:51:28,000 --> 00:51:30,800
and we receive lots of value

1253
00:51:30,800 --> 00:51:32,800
comments and suggestions

1254
00:51:32,800 --> 00:51:34,839
from bruno ac

1255
00:51:34,839 --> 00:51:37,520
peter unless

1256
00:51:37,520 --> 00:51:38,960
just before

1257
00:51:38,960 --> 00:51:41,520
the working group adoption

1258
00:51:41,520 --> 00:51:43,119
for this draft

1259
00:51:43,119 --> 00:51:46,000
we will suggest to move the igp

1260
00:51:46,000 --> 00:51:49,359
extension to a new draft so that's the

1261
00:51:49,359 --> 00:51:52,160
new draft i'm going to present

1262
00:51:52,160 --> 00:51:55,200
focusing on igp extensions

1263
00:51:55,200 --> 00:51:58,480
there are two sets of extensions one set

1264
00:51:58,480 --> 00:51:59,440
is

1265
00:51:59,440 --> 00:52:03,359
for advertising binding segments

1266
00:52:03,359 --> 00:52:04,720
the answer

1267
00:52:04,720 --> 00:52:07,440
is for advertising proxy forwarding

1268
00:52:07,440 --> 00:52:10,000
capabilities

1269
00:52:10,000 --> 00:52:11,839
a binding segment

1270
00:52:11,839 --> 00:52:14,240
consists of a binding sheet

1271
00:52:14,240 --> 00:52:16,240
and a list of

1272
00:52:16,240 --> 00:52:17,760
segments

1273
00:52:17,760 --> 00:52:20,960
a node may have multiple binding

1274
00:52:20,960 --> 00:52:22,480
segments

1275
00:52:22,480 --> 00:52:26,160
data node will advertise

1276
00:52:26,160 --> 00:52:27,839
its binding segments

1277
00:52:27,839 --> 00:52:29,599
to its

1278
00:52:29,599 --> 00:52:31,680
labels

1279
00:52:31,680 --> 00:52:34,160
for advertising

1280
00:52:34,160 --> 00:52:36,640
proxy forwarding capability

1281
00:52:36,640 --> 00:52:38,079
and note p

1282
00:52:38,079 --> 00:52:39,200
if

1283
00:52:39,200 --> 00:52:42,079
he has the capability

1284
00:52:42,079 --> 00:52:42,880
for

1285
00:52:42,880 --> 00:52:44,480
peace labels

1286
00:52:44,480 --> 00:52:46,559
he will advertise

1287
00:52:46,559 --> 00:52:50,000
the capability in the domain

1288
00:52:50,000 --> 00:52:52,319
there are two options

1289
00:52:52,319 --> 00:52:53,359
for

1290
00:52:53,359 --> 00:52:55,040
a node p

1291
00:52:55,040 --> 00:52:58,400
to advertise its capabilities

1292
00:52:58,400 --> 00:53:01,760
one option is that p in order to provide

1293
00:53:01,760 --> 00:53:04,000
protection no the p

1294
00:53:04,000 --> 00:53:07,760
may use mirror id for its label n

1295
00:53:07,760 --> 00:53:11,359
node p will advertise mirror id for node

1296
00:53:11,359 --> 00:53:14,480
n for protection so in this case we can

1297
00:53:14,480 --> 00:53:18,079
just use mirror id as an indication

1298
00:53:18,079 --> 00:53:21,359
of the capability so another option is

1299
00:53:21,359 --> 00:53:22,960
that

1300
00:53:22,960 --> 00:53:24,559
node p

1301
00:53:24,559 --> 00:53:25,520
just

1302
00:53:25,520 --> 00:53:26,839
use one

1303
00:53:26,839 --> 00:53:30,720
flag ef flag which short for proxy

1304
00:53:30,720 --> 00:53:32,079
forwarding

1305
00:53:32,079 --> 00:53:36,800
just advise this bit in in the domain

1306
00:53:39,680 --> 00:53:42,960
for advertising binding segment eospf

1307
00:53:42,960 --> 00:53:44,640
a node n

1308
00:53:44,640 --> 00:53:46,480
will use

1309
00:53:46,480 --> 00:53:48,160
a binding

1310
00:53:48,160 --> 00:53:50,000
binding segment tlv

1311
00:53:50,000 --> 00:53:53,280
for each of its binding segments

1312
00:53:53,280 --> 00:53:56,880
in a link scope opec lsas

1313
00:53:56,880 --> 00:54:00,160
abundant tier a binding signal trv

1314
00:54:00,160 --> 00:54:01,839
will contain

1315
00:54:01,839 --> 00:54:03,599
a binding sheet

1316
00:54:03,599 --> 00:54:06,480
and a list of

1317
00:54:06,480 --> 00:54:07,359
c's

1318
00:54:07,359 --> 00:54:11,799
for the list of segments

1319
00:54:13,520 --> 00:54:17,760
so similarly similarly for isos

1320
00:54:17,760 --> 00:54:19,520
so ss

1321
00:54:19,520 --> 00:54:21,839
where no

1322
00:54:21,839 --> 00:54:22,839
with node

1323
00:54:22,839 --> 00:54:25,119
n has

1324
00:54:25,119 --> 00:54:28,000
a number of binary segments node n

1325
00:54:28,000 --> 00:54:28,880
will

1326
00:54:28,880 --> 00:54:32,079
advertise each of the binding segments

1327
00:54:32,079 --> 00:54:33,760
using a

1328
00:54:33,760 --> 00:54:35,040
binding

1329
00:54:35,040 --> 00:54:36,799
segment tlv

1330
00:54:36,799 --> 00:54:39,920
in a link scope lsps

1331
00:54:39,920 --> 00:54:42,079
so this

1332
00:54:42,079 --> 00:54:43,119
plv

1333
00:54:43,119 --> 00:54:45,440
is similar to ospf just contain banner

1334
00:54:45,440 --> 00:54:47,680
sheet and the list of segments on this

1335
00:54:47,680 --> 00:54:50,680
services

1336
00:54:54,160 --> 00:54:56,480
so for advertising proxy

1337
00:54:56,480 --> 00:54:58,960
for the capability in ospf

1338
00:54:58,960 --> 00:55:01,040
we just need one

1339
00:55:01,040 --> 00:55:05,440
bit which is defined in the existing

1340
00:55:05,440 --> 00:55:08,240
router function capability tlv

1341
00:55:08,240 --> 00:55:12,000
so just one bit which is a pfb

1342
00:55:12,000 --> 00:55:15,040
bit so set one indicates the capability

1343
00:55:15,040 --> 00:55:16,559
and then enterprise

1344
00:55:16,559 --> 00:55:19,119
this one

1345
00:55:19,359 --> 00:55:23,920
so similarly in all in iso in ss

1346
00:55:23,920 --> 00:55:27,200
so we just defined a new flag

1347
00:55:27,200 --> 00:55:28,000
in

1348
00:55:28,000 --> 00:55:29,599
the existing

1349
00:55:29,599 --> 00:55:32,240
sr capability subtle v

1350
00:55:32,240 --> 00:55:36,000
so this new flag will indicate whether

1351
00:55:36,000 --> 00:55:37,040
node p

1352
00:55:37,040 --> 00:55:38,319
have

1353
00:55:38,319 --> 00:55:39,440
the

1354
00:55:39,440 --> 00:55:42,680
proxy forwarding capabilities

1355
00:55:42,680 --> 00:55:44,400
[Music]

1356
00:55:44,400 --> 00:55:46,319
yeah i think that that's all and then i

1357
00:55:46,319 --> 00:55:49,760
would like receive comments

1358
00:55:49,760 --> 00:55:51,680
so uh wemo

1359
00:55:51,680 --> 00:55:53,760
this is me uh speaking as a chair

1360
00:55:53,760 --> 00:55:55,280
uh

1361
00:55:55,280 --> 00:55:57,599
i'm not mistaken the proxy stuff in

1362
00:55:57,599 --> 00:55:59,680
spring is is not adopted yet is that

1363
00:55:59,680 --> 00:56:01,359
correct

1364
00:56:01,359 --> 00:56:03,520
uh they i don't know because just before

1365
00:56:03,520 --> 00:56:07,440
the ietf we have an adoption call

1366
00:56:07,440 --> 00:56:09,760
and then that's a depend on the chair

1367
00:56:09,760 --> 00:56:11,839
decisions whether they were adopted or

1368
00:56:11,839 --> 00:56:12,799
not

1369
00:56:12,799 --> 00:56:14,240
i think that

1370
00:56:14,240 --> 00:56:16,720
from my understanding we re i think we

1371
00:56:16,720 --> 00:56:18,319
receive a

1372
00:56:18,319 --> 00:56:20,160
good amount of support and then that's

1373
00:56:20,160 --> 00:56:22,240
it depends on yeah uh uh

1374
00:56:22,240 --> 00:56:24,720
so you you expect it but it isn't done

1375
00:56:24,720 --> 00:56:25,680
yet

1376
00:56:25,680 --> 00:56:26,799
so yeah yeah

1377
00:56:26,799 --> 00:56:28,319
it's not that long yet i don't know the

1378
00:56:28,319 --> 00:56:30,559
decision from jail yet right

1379
00:56:30,559 --> 00:56:32,160
right so i mean i think this is the same

1380
00:56:32,160 --> 00:56:34,480
comment i gave to the last presenter you

1381
00:56:34,480 --> 00:56:36,960
know these obviously come after the base

1382
00:56:36,960 --> 00:56:39,520
document would be adopted i mean you're

1383
00:56:39,520 --> 00:56:41,760
not even asking for adoption here so i

1384
00:56:41,760 --> 00:56:43,200
just thought i would put that out there

1385
00:56:43,200 --> 00:56:44,720
you know we'll probably follow along

1386
00:56:44,720 --> 00:56:46,960
behind the base document

1387
00:56:46,960 --> 00:56:47,920
um

1388
00:56:47,920 --> 00:56:49,520
bruno brooks

1389
00:56:49,520 --> 00:56:51,200
bruno go ahead

1390
00:56:51,200 --> 00:56:53,680
yeah go ahead bruno bruno as a spring

1391
00:56:53,680 --> 00:56:54,640
co-chair

1392
00:56:54,640 --> 00:56:56,799
so we we started the code for adoption

1393
00:56:56,799 --> 00:56:59,520
but a month or two ago

1394
00:56:59,520 --> 00:57:02,400
and i believe we sent the result

1395
00:57:02,400 --> 00:57:05,200
at least i sent it somewhere

1396
00:57:05,200 --> 00:57:06,050
and

1397
00:57:06,050 --> 00:57:07,520
[Music]

1398
00:57:07,520 --> 00:57:09,119
in short the result is that there is

1399
00:57:09,119 --> 00:57:11,359
some support for the feature but not for

1400
00:57:11,359 --> 00:57:12,400
the

1401
00:57:12,400 --> 00:57:15,920
to propose igp extensions

1402
00:57:15,920 --> 00:57:18,480
so oh so in other words you didn't you

1403
00:57:18,480 --> 00:57:19,920
you think it would have been adapted

1404
00:57:19,920 --> 00:57:22,559
without the igp extensions in it

1405
00:57:22,559 --> 00:57:24,480
no no no no um

1406
00:57:24,480 --> 00:57:27,520
well actually there are two two subjects

1407
00:57:27,520 --> 00:57:29,920
um

1408
00:57:30,160 --> 00:57:31,920
so one is different we're getting that

1409
00:57:31,920 --> 00:57:33,440
one uh

1410
00:57:33,440 --> 00:57:35,280
one of the comment is that uh it is

1411
00:57:35,280 --> 00:57:38,839
functionally equivalent to the

1412
00:57:38,839 --> 00:57:41,520
um i don't remember the name in the isis

1413
00:57:41,520 --> 00:57:43,200
binding seat we have some kind of

1414
00:57:43,200 --> 00:57:44,559
anycast

1415
00:57:44,559 --> 00:57:46,960
uh which is mirror seeder we have mirror

1416
00:57:46,960 --> 00:57:50,000
seed in um existing in isis

1417
00:57:50,000 --> 00:57:51,920
sr extension

1418
00:57:51,920 --> 00:57:53,200
and it seemed

1419
00:57:53,200 --> 00:57:55,280
proxy forwarding seems functionally

1420
00:57:55,280 --> 00:57:58,799
equivalent so the question uh

1421
00:57:58,799 --> 00:58:01,440
was why do we need a new igp extension

1422
00:58:01,440 --> 00:58:04,400
instead of reusing uh the mirror seed

1423
00:58:04,400 --> 00:58:06,240
that is for isis

1424
00:58:06,240 --> 00:58:09,200
for spf i'm not following uh

1425
00:58:09,200 --> 00:58:11,680
so closely

1426
00:58:11,680 --> 00:58:15,359
so is this an end run then

1427
00:58:15,359 --> 00:58:17,440
you guys said we don't like the i the

1428
00:58:17,440 --> 00:58:19,040
isis extension

1429
00:58:19,040 --> 00:58:20,960
uh and wemo brought it here to see if we

1430
00:58:20,960 --> 00:58:23,359
like the isix extension is that what

1431
00:58:23,359 --> 00:58:25,598
happened

1432
00:58:27,839 --> 00:58:30,160
the function we need is that they need a

1433
00:58:30,160 --> 00:58:31,839
is a

1434
00:58:31,839 --> 00:58:33,839
router advertiser need to advertise that

1435
00:58:33,839 --> 00:58:37,520
it is a proxy for someone else

1436
00:58:37,520 --> 00:58:39,280
that was common on the list that the

1437
00:58:39,280 --> 00:58:41,920
function already exists it's a mirror

1438
00:58:41,920 --> 00:58:43,680
seeder which is defined in s

1439
00:58:43,680 --> 00:58:45,200
architecture

1440
00:58:45,200 --> 00:58:47,920
and which is also defined in isis

1441
00:58:47,920 --> 00:58:50,079
sar extension which is a two or three

1442
00:58:50,079 --> 00:58:51,760
years ago

1443
00:58:51,760 --> 00:58:53,200
so the feedback from the working hoops

1444
00:58:53,200 --> 00:58:55,599
that is that why do we need a new igp

1445
00:58:55,599 --> 00:58:58,079
extension at least for isis

1446
00:58:58,079 --> 00:58:59,119
okay

1447
00:58:59,119 --> 00:59:03,599
to provide that proxy forwarding feature

1448
00:59:03,599 --> 00:59:06,079
and i don't think we

1449
00:59:06,079 --> 00:59:09,040
made progress since then

1450
00:59:09,040 --> 00:59:11,279
okay

1451
00:59:12,640 --> 00:59:15,520
remote do you have a

1452
00:59:15,520 --> 00:59:17,119
yeah i think it is uh as i mentioned

1453
00:59:17,119 --> 00:59:19,359
that there are two options here one

1454
00:59:19,359 --> 00:59:21,760
option is that we can reuse the

1455
00:59:21,760 --> 00:59:24,160
bureau sheet already there in this case

1456
00:59:24,160 --> 00:59:26,480
we don't need any extensions at least

1457
00:59:26,480 --> 00:59:28,240
for iss

1458
00:59:28,240 --> 00:59:30,480
and then we have another option just one

1459
00:59:30,480 --> 00:59:31,760
bit for

1460
00:59:31,760 --> 00:59:34,480
capability

1461
00:59:36,799 --> 00:59:39,040
okay

1462
00:59:40,960 --> 00:59:42,640
and then i think for the

1463
00:59:42,640 --> 00:59:44,480
extension for

1464
00:59:44,480 --> 00:59:47,040
binding segments we need a in order to

1465
00:59:47,040 --> 00:59:49,040
support the binding segment of a failed

1466
00:59:49,040 --> 00:59:51,520
node and then this uh

1467
00:59:51,520 --> 00:59:52,480
funding

1468
00:59:52,480 --> 00:59:55,760
segment advertisement should be

1469
00:59:55,760 --> 00:59:57,280
nice to have otherwise we need to

1470
00:59:57,280 --> 01:00:01,839
configure or do something else

1471
01:00:02,400 --> 01:00:05,119
i'm sorry ac do you want to go

1472
01:00:05,119 --> 01:00:07,920
yeah ac linden cisco systems speaking as

1473
01:00:07,920 --> 01:00:10,000
working group remember i i think the

1474
01:00:10,000 --> 01:00:13,119
document here you know you know

1475
01:00:13,119 --> 01:00:15,920
even even irrespective of the issue that

1476
01:00:15,920 --> 01:00:17,520
bruno brought up it could be a lot

1477
01:00:17,520 --> 01:00:20,720
clearer as to who

1478
01:00:20,720 --> 01:00:23,280
advertises what you know the

1479
01:00:23,280 --> 01:00:25,200
failed mode and when they advertise it

1480
01:00:25,200 --> 01:00:27,839
in relation to the failure the duration

1481
01:00:27,839 --> 01:00:30,160
and everything um

1482
01:00:30,160 --> 01:00:32,960
i really i even though i'd seen this

1483
01:00:32,960 --> 01:00:34,400
before

1484
01:00:34,400 --> 01:00:36,559
i really had to go to the spring

1485
01:00:36,559 --> 01:00:38,640
document then i had to actually the

1486
01:00:38,640 --> 01:00:40,480
spring document didn't help me until i

1487
01:00:40,480 --> 01:00:42,480
looked at the example you know you can

1488
01:00:42,480 --> 01:00:44,640
kind of guess you can kind of guess how

1489
01:00:44,640 --> 01:00:46,160
it would work

1490
01:00:46,160 --> 01:00:49,040
but it should specify exactly when the

1491
01:00:49,040 --> 01:00:51,040
capabilities are

1492
01:00:51,040 --> 01:00:52,640
advertised and

1493
01:00:52,640 --> 01:00:54,000
for how long and then you should

1494
01:00:54,000 --> 01:00:56,319
advertise i mean because there was a

1495
01:00:56,319 --> 01:00:58,880
there was a uh

1496
01:00:58,880 --> 01:01:01,200
implying that it was only

1497
01:01:01,200 --> 01:01:02,720
for a certain period of time or

1498
01:01:02,720 --> 01:01:04,400
something it wasn't all and i thought

1499
01:01:04,400 --> 01:01:06,079
wow i think you'd tell i thought you'd

1500
01:01:06,079 --> 01:01:07,119
tell the

1501
01:01:07,119 --> 01:01:09,920
no you were protecting you'd tell it as

1502
01:01:09,920 --> 01:01:12,079
soon as the adjacency came up but anyway

1503
01:01:12,079 --> 01:01:13,680
i think that needs to be added to the

1504
01:01:13,680 --> 01:01:14,960
draft

1505
01:01:14,960 --> 01:01:18,799
okay thank you yeah yes okay

1506
01:01:23,119 --> 01:01:25,839
okay

1507
01:01:27,359 --> 01:01:29,520
yeah um can you hear me

1508
01:01:29,520 --> 01:01:32,079
i'm sorry i had some issue with mikko

1509
01:01:32,079 --> 01:01:34,240
yeah we can

1510
01:01:34,240 --> 01:01:36,839
okay no i i just wanted to highlight

1511
01:01:36,839 --> 01:01:38,240
again and

1512
01:01:38,240 --> 01:01:39,760
what bruno mentioned

1513
01:01:39,760 --> 01:01:42,079
in fact there was some some disagreement

1514
01:01:42,079 --> 01:01:43,440
also on our

1515
01:01:43,440 --> 01:01:45,760
on the way of doing it because the draft

1516
01:01:45,760 --> 01:01:49,440
at least as a way to other um

1517
01:01:49,440 --> 01:01:51,839
when the adoption call was done uh in

1518
01:01:51,839 --> 01:01:54,079
spring was proposing to uh

1519
01:01:54,079 --> 01:01:55,280
uh

1520
01:01:55,280 --> 01:01:57,599
to force to for instance advertise this

1521
01:01:57,599 --> 01:01:59,039
capability

1522
01:01:59,039 --> 01:02:00,720
just for a couple of neighbors but in

1523
01:02:00,720 --> 01:02:02,880
this case this is creating some

1524
01:02:02,880 --> 01:02:05,280
uh potentially some an

1525
01:02:05,280 --> 01:02:07,920
your path or issues and so on so so

1526
01:02:07,920 --> 01:02:09,599
there was also some disagreement on the

1527
01:02:09,599 --> 01:02:10,960
way of

1528
01:02:10,960 --> 01:02:12,720
of doing it so so

1529
01:02:12,720 --> 01:02:14,640
the fact is really we need to clarify

1530
01:02:14,640 --> 01:02:17,200
the use case first and the way

1531
01:02:17,200 --> 01:02:18,880
we should do things from an architecture

1532
01:02:18,880 --> 01:02:20,640
point of view before talking about any

1533
01:02:20,640 --> 01:02:22,640
igp extension so this has to be solved

1534
01:02:22,640 --> 01:02:23,839
in spring

1535
01:02:23,839 --> 01:02:26,319
before doing anything in lsr in my

1536
01:02:26,319 --> 01:02:28,079
opinion

1537
01:02:28,079 --> 01:02:30,559
yeah i think the capability is very

1538
01:02:30,559 --> 01:02:33,119
clear it's a normal practice right

1539
01:02:33,119 --> 01:02:35,760
we we have a capability in some routes

1540
01:02:35,760 --> 01:02:38,000
and then routers and then some nodes

1541
01:02:38,000 --> 01:02:39,760
that don't have that capability and then

1542
01:02:39,760 --> 01:02:42,079
we need to have some kind of incremental

1543
01:02:42,079 --> 01:02:44,000
deployment and also

1544
01:02:44,000 --> 01:02:46,400
we have backward compatibility that's

1545
01:02:46,400 --> 01:02:49,599
normal practice to improve the network

1546
01:02:49,599 --> 01:02:52,720
stability right and also i reply that

1547
01:02:52,720 --> 01:02:55,119
one in the spring working group

1548
01:02:55,119 --> 01:02:57,440
okay wait wait wait we're out of time

1549
01:02:57,440 --> 01:02:58,720
and we don't need to have a spring

1550
01:02:58,720 --> 01:03:01,280
argument in our group so

1551
01:03:01,280 --> 01:03:02,720
you have to convince the people over

1552
01:03:02,720 --> 01:03:04,319
there first uh

1553
01:03:04,319 --> 01:03:06,240
but you know i mean if you if you can do

1554
01:03:06,240 --> 01:03:08,000
that i don't think you'll see a big big

1555
01:03:08,000 --> 01:03:10,559
anybody really objecting here

1556
01:03:10,559 --> 01:03:13,119
so yeah i think basically i would say

1557
01:03:13,119 --> 01:03:15,520
the objection motor operation is a

1558
01:03:15,520 --> 01:03:19,280
complete uh uh a complete competitive uh

1559
01:03:19,280 --> 01:03:21,520
draft they also have another draft

1560
01:03:21,520 --> 01:03:23,599
that's that's it

1561
01:03:23,599 --> 01:03:25,760
okay so i know that's the whole so

1562
01:03:25,760 --> 01:03:28,079
there's a yeah

1563
01:03:28,079 --> 01:03:29,039
right

1564
01:03:29,039 --> 01:03:30,480
i got you

1565
01:03:30,480 --> 01:03:32,640
all right thank you

1566
01:03:32,640 --> 01:03:35,200
okay thank you

1567
01:03:37,599 --> 01:03:40,640
three minutes late here

1568
01:03:43,280 --> 01:03:45,280
and let me

1569
01:03:45,280 --> 01:03:47,920
give you permissions just

1570
01:03:47,920 --> 01:03:50,079
you should be able to select your slide

1571
01:03:50,079 --> 01:03:52,319
deck

1572
01:03:54,480 --> 01:03:57,039
uh okay let me see

1573
01:03:57,039 --> 01:04:00,400
what oh okay i found it

1574
01:04:00,480 --> 01:04:02,880
great thanks

1575
01:04:02,880 --> 01:04:05,039
okay yes uh

1576
01:04:05,039 --> 01:04:07,520
now i will introduce the scheme about

1577
01:04:07,520 --> 01:04:08,720
the igb

1578
01:04:08,720 --> 01:04:12,598
deterministic routine

1579
01:04:18,480 --> 01:04:22,160
sorry there's a bit of natures

1580
01:04:23,440 --> 01:04:26,680
hear you

1581
01:04:27,839 --> 01:04:32,000
yeah but i can't see the green

1582
01:04:34,480 --> 01:04:38,440
the slide two more

1583
01:04:41,359 --> 01:04:44,640
yeah this is the motivations uh

1584
01:04:44,640 --> 01:04:47,440
architecture defines the close goals

1585
01:04:47,440 --> 01:04:49,680
of determining

1586
01:04:49,680 --> 01:04:53,359
rooting uh bonded legit bonded

1587
01:04:53,359 --> 01:04:54,960
loss ratio and

1588
01:04:54,960 --> 01:04:57,760
bonded out of audit denuclearing

1589
01:04:57,760 --> 01:05:00,319
it uses resource reservation explicit

1590
01:05:00,319 --> 01:05:02,400
routine and

1591
01:05:02,400 --> 01:05:04,079
service protection

1592
01:05:04,079 --> 01:05:06,720
to achieve these goals a deterministic

1593
01:05:06,720 --> 01:05:09,119
path is typically but another doesn't

1594
01:05:09,119 --> 01:05:12,160
mean a traffic engineer pass with

1595
01:05:12,160 --> 01:05:14,000
explanation routine

1596
01:05:14,000 --> 01:05:16,480
calculated by a controller

1597
01:05:16,480 --> 01:05:18,799
full cycle provides an alternate way to

1598
01:05:18,799 --> 01:05:21,039
compute the consumption based

1599
01:05:21,039 --> 01:05:22,319
parts

1600
01:05:22,319 --> 01:05:25,039
so we proposed a distributed

1601
01:05:25,039 --> 01:05:26,640
deterministic figure

1602
01:05:26,640 --> 01:05:31,038
using extensions for the cycle

1603
01:05:34,880 --> 01:05:36,400
so next

1604
01:05:36,400 --> 01:05:40,480
oh the latency is a bit

1605
01:05:42,079 --> 01:05:46,079
okay this is uh for uh

1606
01:05:46,799 --> 01:05:48,079
yeah

1607
01:05:48,079 --> 01:05:50,160
the latency is a repeated

1608
01:05:50,160 --> 01:05:52,480
a first arc already supports the mean

1609
01:05:52,480 --> 01:05:55,359
delay magic type data considers link

1610
01:05:55,359 --> 01:05:58,000
delay but another node killing

1611
01:05:58,000 --> 01:06:00,720
including cool delays delay equals to

1612
01:06:00,720 --> 01:06:03,440
another delay plus transmission delay to

1613
01:06:03,440 --> 01:06:05,839
obtain a deterministic path the node

1614
01:06:05,839 --> 01:06:08,079
delay must be considered

1615
01:06:08,079 --> 01:06:10,720
a simple example is that

1616
01:06:10,720 --> 01:06:14,240
a link of from 1 to 10 kilometers length

1617
01:06:14,240 --> 01:06:17,440
and from 5 to 50 micro seconds in

1618
01:06:17,440 --> 01:06:19,920
transmission delay and the node delay

1619
01:06:19,920 --> 01:06:24,960
may be from 10 to 50 milliseconds

1620
01:06:25,680 --> 01:06:28,240
so next

1621
01:06:29,760 --> 01:06:32,760
now

1622
01:06:34,720 --> 01:06:37,359
yeah how so how to provide full circle

1623
01:06:37,359 --> 01:06:39,520
deterministic routine

1624
01:06:39,520 --> 01:06:41,039
uh

1625
01:06:41,039 --> 01:06:43,200
three aspects are considered under the

1626
01:06:43,200 --> 01:06:45,839
guidance of internet architecture for

1627
01:06:45,839 --> 01:06:48,960
the resource resolution aspect

1628
01:06:48,960 --> 01:06:52,799
deterministic link is introduced which

1629
01:06:52,799 --> 01:06:54,799
has the deterministic node delay

1630
01:06:54,799 --> 01:06:55,920
attributes

1631
01:06:55,920 --> 01:06:59,359
for the explicit routing aspect

1632
01:06:59,359 --> 01:07:02,079
we introduced flex argo pass calculated

1633
01:07:02,079 --> 01:07:05,520
with deterministic dilemmas type

1634
01:07:05,520 --> 01:07:08,160
for the serviceable technician aspect

1635
01:07:08,160 --> 01:07:10,720
an additional redundant deterministic

1636
01:07:10,720 --> 01:07:12,240
delay pass

1637
01:07:12,240 --> 01:07:14,240
consistently with the delay of the

1638
01:07:14,240 --> 01:07:18,640
primary path is computed

1639
01:07:19,680 --> 01:07:22,160
so next

1640
01:07:25,280 --> 01:07:27,200
yep

1641
01:07:27,200 --> 01:07:28,640
deterministically captured beach

1642
01:07:28,640 --> 01:07:31,200
advertised

1643
01:07:33,440 --> 01:07:36,880
yeah but uh i just waited the screen to

1644
01:07:36,880 --> 01:07:38,880
present it's updated to everybody else

1645
01:07:38,880 --> 01:07:41,520
don't worry that is a deterministic link

1646
01:07:41,520 --> 01:07:44,160
attributes

1647
01:07:45,280 --> 01:07:47,599
okay

1648
01:07:47,760 --> 01:07:50,000
this is about deterministic link

1649
01:07:50,000 --> 01:07:51,920
attributes advertised

1650
01:07:51,920 --> 01:07:53,280
including

1651
01:07:53,280 --> 01:07:56,000
link transmission delay that means the

1652
01:07:56,000 --> 01:07:58,160
average machine link transmission delay

1653
01:07:58,160 --> 01:07:59,440
value

1654
01:07:59,440 --> 01:08:02,000
infinite forwarding delay that means the

1655
01:08:02,000 --> 01:08:03,680
latency of our packet of volume

1656
01:08:03,680 --> 01:08:05,920
resolution and the incoming port all

1657
01:08:05,920 --> 01:08:08,480
generated from the control plane to king

1658
01:08:08,480 --> 01:08:10,880
and the outgoing board

1659
01:08:10,880 --> 01:08:12,960
you know the scheduling delay that means

1660
01:08:12,960 --> 01:08:14,880
the desk

1661
01:08:14,880 --> 01:08:17,759
related to the scheduling algorithm such

1662
01:08:17,759 --> 01:08:22,560
as tsn cigarette for the night cbs

1663
01:08:22,960 --> 01:08:25,040
multiple scaling delays

1664
01:08:25,040 --> 01:08:28,000
may be provided by each cigarette

1665
01:08:28,000 --> 01:08:30,238
aggregation

1666
01:08:30,238 --> 01:08:32,238
uh the following figure shows the

1667
01:08:32,238 --> 01:08:34,880
simplified delay model including three

1668
01:08:34,880 --> 01:08:36,560
types of delay

1669
01:08:36,560 --> 01:08:38,640
described about

1670
01:08:38,640 --> 01:08:41,279
so next

1671
01:08:51,120 --> 01:08:53,759
okay this place is about

1672
01:08:53,759 --> 01:08:56,158
how to compute the deterministic delay

1673
01:08:56,158 --> 01:08:58,319
pass

1674
01:08:58,319 --> 01:09:00,560
fad explicitly contains the

1675
01:09:00,560 --> 01:09:03,759
deterministic nuclear source and

1676
01:09:03,759 --> 01:09:05,279
scheduling

1677
01:09:05,279 --> 01:09:06,960
a new metric type

1678
01:09:06,960 --> 01:09:09,520
deterministic delay metric type is used

1679
01:09:09,520 --> 01:09:11,120
to indicate

1680
01:09:11,120 --> 01:09:13,600
the calculation of deterministic delay

1681
01:09:13,600 --> 01:09:15,839
pass

1682
01:09:16,479 --> 01:09:18,640
the falling figure illustrates an

1683
01:09:18,640 --> 01:09:23,198
example of deterministic delay routine

1684
01:09:23,198 --> 01:09:25,759
in the physical network determining

1685
01:09:25,759 --> 01:09:27,759
determining significant linkers are

1686
01:09:27,759 --> 01:09:31,198
generated and the attributes

1687
01:09:31,198 --> 01:09:34,719
provided by decent linkers are

1688
01:09:34,719 --> 01:09:36,880
interned accordingly

1689
01:09:36,880 --> 01:09:38,479
five microseconds you can notice

1690
01:09:38,479 --> 01:09:41,198
gradient delay from one to 60

1691
01:09:41,198 --> 01:09:43,359
microseconds and

1692
01:09:43,359 --> 01:09:45,120
link transmission delay

1693
01:09:45,120 --> 01:09:48,479
as indicated in the figure then full

1694
01:09:48,479 --> 01:09:52,479
circle 188 is created to include these

1695
01:09:52,479 --> 01:09:55,360
deterministic links and

1696
01:09:55,360 --> 01:09:59,679
the scheduling delay 10 microseconds

1697
01:09:59,679 --> 01:10:02,800
so at last the deterministic spt is

1698
01:10:02,800 --> 01:10:05,520
shown on the right side

1699
01:10:05,520 --> 01:10:08,960
it has the deterministic delay and the

1700
01:10:08,960 --> 01:10:11,040
delegita

1701
01:10:11,040 --> 01:10:12,560
for

1702
01:10:12,560 --> 01:10:16,159
comparison the traditional sp based on

1703
01:10:16,159 --> 01:10:19,760
the music type 1 is shown on the left

1704
01:10:19,760 --> 01:10:20,880
side

1705
01:10:20,880 --> 01:10:24,280
so next

1706
01:10:31,440 --> 01:10:34,879
sorry there's a bit of latest

1707
01:10:35,840 --> 01:10:37,440
okay yeah

1708
01:10:37,440 --> 01:10:39,679
this page is about the

1709
01:10:39,679 --> 01:10:42,960
redundant deterministic delay pass

1710
01:10:42,960 --> 01:10:45,360
redundant deterministic daily paths are

1711
01:10:45,360 --> 01:10:49,040
calculated by plr according to

1712
01:10:49,040 --> 01:10:51,600
local policies somewhat like a ti lfa

1713
01:10:51,600 --> 01:10:54,320
alpha pass but they're not identical

1714
01:10:54,320 --> 01:10:57,120
at the constraints for a redundant path

1715
01:10:57,120 --> 01:11:00,800
ingredient that are contained in the fad

1716
01:11:00,800 --> 01:11:03,760
and that constrained

1717
01:11:03,760 --> 01:11:06,080
that the number of nodes intersecting

1718
01:11:06,080 --> 01:11:08,159
the primary and the redundant part is

1719
01:11:08,159 --> 01:11:11,440
minima measured and the constraints that

1720
01:11:11,440 --> 01:11:12,960
the difference between the number of

1721
01:11:12,960 --> 01:11:15,280
hopes of a primary and redundant path is

1722
01:11:15,280 --> 01:11:16,400
minimized

1723
01:11:16,400 --> 01:11:18,480
and the concerns that the difference

1724
01:11:18,480 --> 01:11:20,159
between the cumulative

1725
01:11:20,159 --> 01:11:22,880
lingual transmission delay of primary

1726
01:11:22,880 --> 01:11:25,760
and redundant path is minimized

1727
01:11:25,760 --> 01:11:27,920
at the primary and the redundant path

1728
01:11:27,920 --> 01:11:30,480
each user specific scheduling delays and

1729
01:11:30,480 --> 01:11:33,120
they should have similar cumulative

1730
01:11:33,120 --> 01:11:35,679
delays the packet is sent along the

1731
01:11:35,679 --> 01:11:38,080
primary and redundant pass at the same

1732
01:11:38,080 --> 01:11:39,440
time

1733
01:11:39,440 --> 01:11:41,840
so next

1734
01:11:41,840 --> 01:11:42,800
okay

1735
01:11:42,800 --> 01:11:45,920
uh that is what the percentage of this

1736
01:11:45,920 --> 01:11:48,000
document uh any questions and comments i

1737
01:11:48,000 --> 01:11:50,960
will come thank you

1738
01:11:51,600 --> 01:11:53,840
yeah yeah we maybe from some quick

1739
01:11:53,840 --> 01:11:55,920
comments we're already over time so i'd

1740
01:11:55,920 --> 01:11:57,679
like to pull this in um so i'm gonna

1741
01:11:57,679 --> 01:12:00,080
walk with you now

1742
01:12:00,080 --> 01:12:02,000
uh the granularity of measurement

1743
01:12:02,000 --> 01:12:04,719
doesn't match the advertisement is per

1744
01:12:04,719 --> 01:12:07,440
topology per adjacency

1745
01:12:07,440 --> 01:12:10,480
the delay is per traffic class you

1746
01:12:10,480 --> 01:12:12,159
cannot advertise

1747
01:12:12,159 --> 01:12:14,000
one traffic class

1748
01:12:14,000 --> 01:12:16,239
in especially on vaq system there's huge

1749
01:12:16,239 --> 01:12:18,800
difference between different traffic

1750
01:12:18,800 --> 01:12:20,880
classes in the way they defined so i'm

1751
01:12:20,880 --> 01:12:23,920
not sure how you can do it

1752
01:12:29,120 --> 01:12:31,120
so your question is about the

1753
01:12:31,120 --> 01:12:33,760
measurement value is a

1754
01:12:33,760 --> 01:12:37,840
traffic class right

1755
01:12:41,600 --> 01:12:43,840
potentially all traffic classes will go

1756
01:12:43,840 --> 01:12:46,320
into the same topology right but the

1757
01:12:46,320 --> 01:12:48,800
time it takes to traverse the device is

1758
01:12:48,800 --> 01:12:50,320
different and depends on traffic class

1759
01:12:50,320 --> 01:12:52,880
definition

1760
01:12:55,840 --> 01:12:56,960
okay

1761
01:12:56,960 --> 01:12:58,480
um

1762
01:12:58,480 --> 01:13:00,400
let's move to the next question you can

1763
01:13:00,400 --> 01:13:05,159
also unless you want to answer that

1764
01:13:06,400 --> 01:13:08,560
okay next question

1765
01:13:08,560 --> 01:13:10,560
hi can you hear me well

1766
01:13:10,560 --> 01:13:11,920
yes

1767
01:13:11,920 --> 01:13:14,640
uh joseon from huawei uh one comment for

1768
01:13:14,640 --> 01:13:17,040
this document a stable pass is very

1769
01:13:17,040 --> 01:13:20,239
important for deterministic latency

1770
01:13:20,239 --> 01:13:21,520
which is called

1771
01:13:21,520 --> 01:13:24,320
explicit passing that networking group

1772
01:13:24,320 --> 01:13:25,760
so i think

1773
01:13:25,760 --> 01:13:28,320
we should be very careful if we choose a

1774
01:13:28,320 --> 01:13:31,040
distributed path computation mechanisms

1775
01:13:31,040 --> 01:13:34,960
for that net because if the paths change

1776
01:13:34,960 --> 01:13:37,199
the the latency and the jitter will also

1777
01:13:37,199 --> 01:13:40,080
change accordingly so maybe we should

1778
01:13:40,080 --> 01:13:42,719
have more discussion to

1779
01:13:42,719 --> 01:13:43,440
to

1780
01:13:43,440 --> 01:13:46,480
to decide whether we should go this way

1781
01:13:46,480 --> 01:13:50,640
especially using flex ego thank you

1782
01:13:50,640 --> 01:13:52,800
thanks shawshan

1783
01:13:52,800 --> 01:13:55,120
ac

1784
01:13:55,120 --> 01:13:56,239
uh

1785
01:13:56,239 --> 01:13:58,239
speaking as working with chair i think

1786
01:13:58,239 --> 01:14:00,640
we really should get yeah input before

1787
01:14:00,640 --> 01:14:04,080
we do anything on this from the uh

1788
01:14:04,080 --> 01:14:05,760
the uh

1789
01:14:05,760 --> 01:14:08,000
that net working group as well the one

1790
01:14:08,000 --> 01:14:09,520
comment i think you one thing you need

1791
01:14:09,520 --> 01:14:11,440
is a discussion

1792
01:14:11,440 --> 01:14:14,960
of the how often you change these things

1793
01:14:14,960 --> 01:14:18,320
and how often you advertise them because

1794
01:14:18,320 --> 01:14:20,560
i must admit i'm not uh i'm not an

1795
01:14:20,560 --> 01:14:22,640
expert but it looked like it looked like

1796
01:14:22,640 --> 01:14:25,520
these these nodal delays

1797
01:14:25,520 --> 01:14:27,920
uh could change quite a bit and i think

1798
01:14:27,920 --> 01:14:29,600
it you know just for the

1799
01:14:29,600 --> 01:14:31,199
the scaling and the

1800
01:14:31,199 --> 01:14:34,400
in the hysteresis of uh

1801
01:14:34,400 --> 01:14:36,159
of select path selection there needs to

1802
01:14:36,159 --> 01:14:39,040
be discussion of that

1803
01:14:39,040 --> 01:14:40,800
yeah

1804
01:14:40,800 --> 01:14:42,800
i mean i i yeah so let's move to the

1805
01:14:42,800 --> 01:14:44,640
next presentation i think uh it's

1806
01:14:44,640 --> 01:14:46,880
interesting stuff though uh especially

1807
01:14:46,880 --> 01:14:48,719
what joe shawn's point was i wonder how

1808
01:14:48,719 --> 01:14:50,960
that will all work out but

1809
01:14:50,960 --> 01:14:52,880
to be discussed i guess

1810
01:14:52,880 --> 01:14:57,480
all right who's up next uh

1811
01:14:57,920 --> 01:15:00,239
dedicated metric is that right yeah

1812
01:15:00,239 --> 01:15:04,400
dedicated metric for flex algo

1813
01:15:04,400 --> 01:15:07,120
and ciao

1814
01:15:08,000 --> 01:15:11,320
thanks shelton

1815
01:15:15,760 --> 01:15:18,080
you should uh have be able to select

1816
01:15:18,080 --> 01:15:20,320
your deck from the list

1817
01:15:20,320 --> 01:15:22,560
okay can you hear me

1818
01:15:22,560 --> 01:15:24,960
yes

1819
01:15:24,960 --> 01:15:26,560
we're five minutes over so if you can

1820
01:15:26,560 --> 01:15:29,679
pull this in that'd be great

1821
01:15:30,320 --> 01:15:32,000
uh okay

1822
01:15:32,000 --> 01:15:33,840
uh hi everyone

1823
01:15:33,840 --> 01:15:36,480
this is monk sorton from new h3c

1824
01:15:36,480 --> 01:15:41,120
technologies this presentation is on the

1825
01:15:41,120 --> 01:15:44,159
advertisement of dedicated metrics for

1826
01:15:44,159 --> 01:15:47,920
flexible algorithm in igp this is an 0-0

1827
01:15:47,920 --> 01:15:49,920
version in the visual draft

1828
01:15:49,920 --> 01:15:51,760
by the way the words in the title

1829
01:15:51,760 --> 01:15:54,320
dedication metric for flexible algorithm

1830
01:15:54,320 --> 01:15:55,440
may bring

1831
01:15:55,440 --> 01:15:57,840
confusions so we will use

1832
01:15:57,840 --> 01:16:00,719
algorithm specific link metric in the

1833
01:16:00,719 --> 01:16:02,880
slides and the future version of the

1834
01:16:02,880 --> 01:16:03,920
draft

1835
01:16:03,920 --> 01:16:08,480
thanks for the comments from ac and ig

1836
01:16:11,280 --> 01:16:12,560
ok

1837
01:16:12,560 --> 01:16:15,440
this is the background of this draft

1838
01:16:15,440 --> 01:16:18,719
flex algorithm allows igp to compute

1839
01:16:18,719 --> 01:16:22,000
constraint based passes links can be

1840
01:16:22,000 --> 01:16:24,880
pruned by using eag rules to create

1841
01:16:24,880 --> 01:16:26,640
different topologies for different

1842
01:16:26,640 --> 01:16:29,920
algorithms however if a link is included

1843
01:16:29,920 --> 01:16:32,159
by multiple algorithms of the same

1844
01:16:32,159 --> 01:16:34,719
metric type these algorithms can only

1845
01:16:34,719 --> 01:16:37,280
share the same metric value

1846
01:16:37,280 --> 01:16:40,159
the current defined flexible algorithm

1847
01:16:40,159 --> 01:16:43,120
prefix matrix subtree in the draft of

1848
01:16:43,120 --> 01:16:45,360
flex algorithm can advertise

1849
01:16:45,360 --> 01:16:48,480
algorithm-specific prefix magic but not

1850
01:16:48,480 --> 01:16:50,880
for link magic

1851
01:16:50,880 --> 01:16:54,320
this draft extends easys and ospf to

1852
01:16:54,320 --> 01:16:56,320
advertise

1853
01:16:56,320 --> 01:16:58,960
algorithm specific link matrix for

1854
01:16:58,960 --> 01:17:03,800
different flex algorithms separately

1855
01:17:04,640 --> 01:17:06,640
here is a problem

1856
01:17:06,640 --> 01:17:09,760
assume that in the network compromised

1857
01:17:09,760 --> 01:17:11,040
by

1858
01:17:11,040 --> 01:17:14,239
node a b c and d

1859
01:17:14,239 --> 01:17:15,760
we have two

1860
01:17:15,760 --> 01:17:19,520
network slices for the traffic from a2d

1861
01:17:19,520 --> 01:17:21,040
for slides one

1862
01:17:21,040 --> 01:17:24,719
the network operator expects to use abd

1863
01:17:24,719 --> 01:17:29,840
as a primary path and acd is as a backup

1864
01:17:29,840 --> 01:17:30,719
path

1865
01:17:30,719 --> 01:17:34,159
for slides2 acd is the primary path and

1866
01:17:34,159 --> 01:17:35,520
the abd

1867
01:17:35,520 --> 01:17:38,480
is a backup pass

1868
01:17:38,480 --> 01:17:40,880
network resources are reserved along the

1869
01:17:40,880 --> 01:17:44,400
primary passes for slices for example on

1870
01:17:44,400 --> 01:17:49,360
link a b and bd bandwidth of 100 mbps is

1871
01:17:49,360 --> 01:17:53,199
reserved for slice one and on link ac

1872
01:17:53,199 --> 01:17:56,320
and cd bandwidth is reserved for slice

1873
01:17:56,320 --> 01:17:57,520
2.

1874
01:17:57,520 --> 01:17:59,199
on the backup path

1875
01:17:59,199 --> 01:18:02,239
no dedicated resources are reserved and

1876
01:18:02,239 --> 01:18:04,719
the bandwidth will be shared with best

1877
01:18:04,719 --> 01:18:07,840
effort traffic

1878
01:18:07,920 --> 01:18:12,159
flex algorithm 128 is used to steal the

1879
01:18:12,159 --> 01:18:14,960
traffic of slice 1 and the flex

1880
01:18:14,960 --> 01:18:18,640
algorithm 129 is used for size 2.

1881
01:18:18,640 --> 01:18:20,960
locators and seeds belonging to these

1882
01:18:20,960 --> 01:18:24,000
flex algorithms are also resource aware

1883
01:18:24,000 --> 01:18:26,000
when processing the packets resources

1884
01:18:26,000 --> 01:18:28,080
identified by the locators and the seeds

1885
01:18:28,080 --> 01:18:29,600
will be used

1886
01:18:29,600 --> 01:18:30,880
in the past

1887
01:18:30,880 --> 01:18:33,679
computation of each flex algorithm

1888
01:18:33,679 --> 01:18:36,880
the intended primary path should be the

1889
01:18:36,880 --> 01:18:39,440
shortest path from a2d

1890
01:18:39,440 --> 01:18:40,800
unfortunately

1891
01:18:40,800 --> 01:18:43,120
if the metric type of the two flex

1892
01:18:43,120 --> 01:18:45,280
algorithms are the same which is

1893
01:18:45,280 --> 01:18:48,000
possible since they both care about the

1894
01:18:48,000 --> 01:18:50,080
bandwidth resources

1895
01:18:50,080 --> 01:18:52,239
same link matrix will be used in the

1896
01:18:52,239 --> 01:18:55,520
computation of the two flex algorithms

1897
01:18:55,520 --> 01:18:59,440
and the path will be the same

1898
01:19:02,239 --> 01:19:05,679
if we use eag rules for example link a b

1899
01:19:05,679 --> 01:19:08,159
and bd are green and they are included

1900
01:19:08,159 --> 01:19:12,239
by flex algorithm 128 link ac and cdi

1901
01:19:12,239 --> 01:19:16,800
yellow included by flex algorithm 129

1902
01:19:16,800 --> 01:19:17,920
the

1903
01:19:17,920 --> 01:19:20,840
primary passes of the two slices can be

1904
01:19:20,840 --> 01:19:24,000
satisfied but meanwhile the backup path

1905
01:19:24,000 --> 01:19:25,760
will be excluded

1906
01:19:25,760 --> 01:19:28,880
it is not desirable

1907
01:19:28,880 --> 01:19:31,440
we hope that different metrics can be

1908
01:19:31,440 --> 01:19:34,080
advertised for the same link

1909
01:19:34,080 --> 01:19:36,480
for flex algorithm 128

1910
01:19:36,480 --> 01:19:40,159
it is expected that matrix of link a b

1911
01:19:40,159 --> 01:19:43,280
and b d others are smaller than link ac

1912
01:19:43,280 --> 01:19:44,960
and cd

1913
01:19:44,960 --> 01:19:48,000
but for flex algorithm 129

1914
01:19:48,000 --> 01:19:51,679
link ac and cd will have smaller metrics

1915
01:19:51,679 --> 01:19:55,120
so in this draft we want to advertise

1916
01:19:55,120 --> 01:19:59,280
algorithm specific link matrix

1917
01:19:59,530 --> 01:20:01,360
[Music]

1918
01:20:01,360 --> 01:20:03,120
do you know if tony puts a question in

1919
01:20:03,120 --> 01:20:06,640
here or do you want to wait to the end

1920
01:20:07,520 --> 01:20:09,520
okay

1921
01:20:09,520 --> 01:20:12,239
go ahead tony

1922
01:20:15,679 --> 01:20:18,840
it's okay

1923
01:20:20,560 --> 01:20:22,800
yep

1924
01:20:24,400 --> 01:20:26,159
oh

1925
01:20:26,159 --> 01:20:27,840
okay tony doesn't seem it seems like

1926
01:20:27,840 --> 01:20:29,040
you're maybe

1927
01:20:29,040 --> 01:20:30,840
hopping in and out

1928
01:20:30,840 --> 01:20:32,800
uh go hey man

1929
01:20:32,800 --> 01:20:35,920
keep going okay

1930
01:20:36,080 --> 01:20:38,880
okay i'll continue

1931
01:20:38,880 --> 01:20:41,600
uh here is another case uh which can

1932
01:20:41,600 --> 01:20:44,320
also benefit from the flag from the

1933
01:20:44,320 --> 01:20:47,040
algorithm specific link matrix

1934
01:20:47,040 --> 01:20:49,760
assume that there is a t-tunnel between

1935
01:20:49,760 --> 01:20:52,800
a and the d in flex algorithm 198

1936
01:20:52,800 --> 01:20:54,639
but for the best effort

1937
01:20:54,639 --> 01:20:58,480
traffic of default topology tunnel ad is

1938
01:20:58,480 --> 01:21:02,000
not expected to be used

1939
01:21:02,000 --> 01:21:05,520
the metric type of flex algorithm 128 is

1940
01:21:05,520 --> 01:21:07,360
igp metric

1941
01:21:07,360 --> 01:21:10,400
in this case we can advertise the link

1942
01:21:10,400 --> 01:21:13,840
metric of tunnel ad with max metric

1943
01:21:13,840 --> 01:21:16,800
meanwhile algorithm specific link metric

1944
01:21:16,800 --> 01:21:19,480
is also advertised for algorithm

1945
01:21:19,480 --> 01:21:21,040
128

1946
01:21:21,040 --> 01:21:23,679
and the metric is a smaller value

1947
01:21:23,679 --> 01:21:25,600
which allows the

1948
01:21:25,600 --> 01:21:27,040
traffic to be

1949
01:21:27,040 --> 01:21:30,400
stilled into the tunnel

1950
01:21:32,960 --> 01:21:35,679
this is the extension of algorithm

1951
01:21:35,679 --> 01:21:39,120
specific link metrics of trv for easies

1952
01:21:39,120 --> 01:21:41,679
it is carried in the application

1953
01:21:41,679 --> 01:21:43,920
specific link attribute for flex

1954
01:21:43,920 --> 01:21:45,600
algorithm

1955
01:21:45,600 --> 01:21:48,159
if the metric type and algorithm fields

1956
01:21:48,159 --> 01:21:51,280
are consistent with fad

1957
01:21:51,280 --> 01:21:54,000
setflex algorithm should use a metric in

1958
01:21:54,000 --> 01:21:56,639
the new defined trv during pass

1959
01:21:56,639 --> 01:21:58,159
calculation

1960
01:21:58,159 --> 01:22:01,120
the new defined sub trv is optional if

1961
01:22:01,120 --> 01:22:03,840
it is not advertised lexi metrics are

1962
01:22:03,840 --> 01:22:05,840
used

1963
01:22:05,840 --> 01:22:07,280
for example

1964
01:22:07,280 --> 01:22:10,400
if the metric type of flex algorithm is

1965
01:22:10,400 --> 01:22:14,159
igp metric and the algorithm specific

1966
01:22:14,159 --> 01:22:16,960
link metric sub trv of the same metric

1967
01:22:16,960 --> 01:22:19,920
type and algorithm is advertised in asl

1968
01:22:19,920 --> 01:22:22,719
carried by trv22

1969
01:22:22,719 --> 01:22:24,960
the metric in the new defined sub trv

1970
01:22:24,960 --> 01:22:27,199
should be used other than the default

1971
01:22:27,199 --> 01:22:31,199
metric field in trv22

1972
01:22:32,400 --> 01:22:35,760
this is the extension for ospf

1973
01:22:35,760 --> 01:22:39,840
the new sub trv for ospf is also carried

1974
01:22:39,840 --> 01:22:42,239
in the application specific link

1975
01:22:42,239 --> 01:22:45,199
attribute for flex algorithm the usage

1976
01:22:45,199 --> 01:22:47,040
is similar with easy ease

1977
01:22:47,040 --> 01:22:49,920
[Music]

1978
01:22:49,920 --> 01:22:52,639
the next step is to request further

1979
01:22:52,639 --> 01:22:55,280
review and feedback and the questions or

1980
01:22:55,280 --> 01:22:58,400
comments are welcomed thank you

1981
01:22:58,400 --> 01:23:00,400
okay we have three three in the queue

1982
01:23:00,400 --> 01:23:02,880
right now i'm gonna uh i'll lock it up

1983
01:23:02,880 --> 01:23:04,480
for g four

1984
01:23:04,480 --> 01:23:06,639
we do need to move quick so please go

1985
01:23:06,639 --> 01:23:08,880
quick

1986
01:23:09,520 --> 01:23:11,520
i think that means i'm up

1987
01:23:11,520 --> 01:23:12,560
so

1988
01:23:12,560 --> 01:23:14,320
uh shroud already brought this up on the

1989
01:23:14,320 --> 01:23:16,960
mailing list but i think that you you

1990
01:23:16,960 --> 01:23:19,520
misunderstood her maybe

1991
01:23:19,520 --> 01:23:22,560
we already have this in the generic

1992
01:23:22,560 --> 01:23:24,320
metric that we've proposed

1993
01:23:24,320 --> 01:23:26,080
if you take a look at the flex algo

1994
01:23:26,080 --> 01:23:28,239
definition there's already a metric type

1995
01:23:28,239 --> 01:23:30,719
that it defines and it allows user to

1996
01:23:30,719 --> 01:23:32,560
find metric types

1997
01:23:32,560 --> 01:23:35,679
and then you can attach a metric type to

1998
01:23:35,679 --> 01:23:37,280
a metric

1999
01:23:37,280 --> 01:23:38,480
on a link

2000
01:23:38,480 --> 01:23:40,400
and that is all you needed so we already

2001
01:23:40,400 --> 01:23:42,400
have this mechanism it's redundant with

2002
01:23:42,400 --> 01:23:46,480
the other generic metric proposal

2003
01:23:46,480 --> 01:23:48,480
please take a look again

2004
01:23:48,480 --> 01:23:49,520
uh

2005
01:23:49,520 --> 01:23:51,760
okay thank you

2006
01:23:51,760 --> 01:23:54,719
but i think uh the metric type based

2007
01:23:54,719 --> 01:23:55,840
metric

2008
01:23:55,840 --> 01:23:57,760
is different from the algorithm based

2009
01:23:57,760 --> 01:23:59,199
metric

2010
01:23:59,199 --> 01:24:01,679
so our problem here is to use different

2011
01:24:01,679 --> 01:24:05,199
link metric value for same metric type

2012
01:24:05,199 --> 01:24:08,638
but different flex algo

2013
01:24:09,040 --> 01:24:11,920
using multiple user defined metric type

2014
01:24:11,920 --> 01:24:14,840
may be a solution that can avoid our

2015
01:24:14,840 --> 01:24:18,639
problem but i'm afraid that it may bring

2016
01:24:18,639 --> 01:24:20,480
complexity

2017
01:24:20,480 --> 01:24:21,760
in the same time

2018
01:24:21,760 --> 01:24:24,000
as we need to define

2019
01:24:24,000 --> 01:24:25,600
many private

2020
01:24:25,600 --> 01:24:28,560
metric types for every flex algorithm

2021
01:24:28,560 --> 01:24:32,480
and advertise them for every link

2022
01:24:32,480 --> 01:24:33,679
so

2023
01:24:33,679 --> 01:24:36,560
i think uh

2024
01:24:36,560 --> 01:24:40,000
we gotta we gotta move forward

2025
01:24:40,159 --> 01:24:44,519
okay next question please or comment

2026
01:24:44,639 --> 01:24:47,199
hello can you hear me

2027
01:24:47,199 --> 01:24:48,800
yes

2028
01:24:48,800 --> 01:24:50,639
okay i have one

2029
01:24:50,639 --> 01:24:53,600
comment and one question the question is

2030
01:24:53,600 --> 01:24:56,400
if there are losers that do not support

2031
01:24:56,400 --> 01:24:57,199
this

2032
01:24:57,199 --> 01:24:59,360
mechanism in the network we're now

2033
01:24:59,360 --> 01:25:02,800
defining a new meta type how to ensure

2034
01:25:02,800 --> 01:25:04,800
that no loop occurs

2035
01:25:04,800 --> 01:25:05,840
during

2036
01:25:05,840 --> 01:25:07,760
route calculation

2037
01:25:07,760 --> 01:25:09,199
okay

2038
01:25:09,199 --> 01:25:11,440
one command is

2039
01:25:11,440 --> 01:25:13,760
the existing flash cycle mechanism can

2040
01:25:13,760 --> 01:25:17,120
also solve the scenario in a document i

2041
01:25:17,120 --> 01:25:19,360
suggest that the metric type can be

2042
01:25:19,360 --> 01:25:20,560
defined

2043
01:25:20,560 --> 01:25:24,000
into two scopes general and custom and

2044
01:25:24,000 --> 01:25:26,560
customize the metric type reading the

2045
01:25:26,560 --> 01:25:27,840
custom

2046
01:25:27,840 --> 01:25:30,719
mice scope for the special flight cycle

2047
01:25:30,719 --> 01:25:32,800
thank you

2048
01:25:32,800 --> 01:25:35,440
uh okay we're gonna peter can you make

2049
01:25:35,440 --> 01:25:38,800
your point i we're we're way over now

2050
01:25:38,800 --> 01:25:40,560
i'm gonna i want to give everyone a

2051
01:25:40,560 --> 01:25:42,320
chance but i don't think we have time so

2052
01:25:42,320 --> 01:25:45,920
peter do you have a comment really quick

2053
01:25:52,320 --> 01:25:57,360
maybe muted locally yeah unmute

2054
01:25:59,440 --> 01:26:01,440
okay time's up g

2055
01:26:01,440 --> 01:26:04,839
go ahead g

2056
01:26:08,560 --> 01:26:11,360
i go more and more similar to the multi

2057
01:26:11,360 --> 01:26:14,320
topology and uh this is not

2058
01:26:14,320 --> 01:26:15,920
the

2059
01:26:15,920 --> 01:26:18,480
original design of how flat sago is used

2060
01:26:18,480 --> 01:26:20,320
and work

2061
01:26:20,320 --> 01:26:23,280
yeah okay nice comment thank you we have

2062
01:26:23,280 --> 01:26:26,080
to move on now uh sorry everyone

2063
01:26:26,080 --> 01:26:27,199
um

2064
01:26:27,199 --> 01:26:29,040
so next up is shrada

2065
01:26:29,040 --> 01:26:31,840
the application specific link attribute

2066
01:26:31,840 --> 01:26:33,840
this one may generate some commentary

2067
01:26:33,840 --> 01:26:36,080
that's why i've been kind of pushing

2068
01:26:36,080 --> 01:26:37,360
people

2069
01:26:37,360 --> 01:26:38,880
go ahead if you can pull the

2070
01:26:38,880 --> 01:26:41,679
presentation in we have 15 minutes

2071
01:26:41,679 --> 01:26:43,280
allocated here so if you could get it

2072
01:26:43,280 --> 01:26:44,800
done quicker we'll have more time for

2073
01:26:44,800 --> 01:26:46,320
discussion

2074
01:26:46,320 --> 01:26:48,719
hello can you hear me

2075
01:26:48,719 --> 01:26:52,239
yes oh i gotta give you permission

2076
01:26:54,719 --> 01:26:56,880
there you should have permission to

2077
01:26:56,880 --> 01:27:00,280
select your slides

2078
01:27:07,679 --> 01:27:11,040
yeah i'm going to be presenting the

2079
01:27:11,040 --> 01:27:13,600
extension to asla with any application

2080
01:27:13,600 --> 01:27:14,800
bit

2081
01:27:14,800 --> 01:27:18,679
on behalf of my co-authors

2082
01:27:22,080 --> 01:27:24,080
a quick recap of the problem statement

2083
01:27:24,080 --> 01:27:24,960
and then

2084
01:27:24,960 --> 01:27:29,520
we have uh an example to show

2085
01:27:29,520 --> 01:27:30,800
where this is

2086
01:27:30,800 --> 01:27:34,719
any bit is beneficial

2087
01:27:38,560 --> 01:27:40,800
so a network operator may want certain

2088
01:27:40,800 --> 01:27:42,320
link attributes

2089
01:27:42,320 --> 01:27:44,560
to be used by all current applications

2090
01:27:44,560 --> 01:27:46,719
and all future applications

2091
01:27:46,719 --> 01:27:48,800
the design of those attributes may be

2092
01:27:48,800 --> 01:27:51,360
such that

2093
01:27:52,239 --> 01:27:54,560
they have to be used same value has to

2094
01:27:54,560 --> 01:27:56,800
be used for all all

2095
01:27:56,800 --> 01:27:59,520
different mechanisms such as srt flex

2096
01:27:59,520 --> 01:28:02,080
algo and rsvp that are deployed in the

2097
01:28:02,080 --> 01:28:04,559
network

2098
01:28:04,880 --> 01:28:06,480
so asla allows for attribute

2099
01:28:06,480 --> 01:28:08,960
advertisement where link attributes are

2100
01:28:08,960 --> 01:28:10,880
applicable to one application or some

2101
01:28:10,880 --> 01:28:12,159
applications

2102
01:28:12,159 --> 01:28:13,600
and there is a limited provision to

2103
01:28:13,600 --> 01:28:15,440
advertise attributes that are applicable

2104
01:28:15,440 --> 01:28:17,280
to any application that is currently

2105
01:28:17,280 --> 01:28:19,760
defined or going to be defined in future

2106
01:28:19,760 --> 01:28:23,760
it's limited because um it says um uh

2107
01:28:23,760 --> 01:28:25,760
it does not allow application to use

2108
01:28:25,760 --> 01:28:28,480
attributes from zero length

2109
01:28:28,480 --> 01:28:31,120
bitmask when any other attribute is

2110
01:28:31,120 --> 01:28:34,080
advertised with an application bit set

2111
01:28:34,080 --> 01:28:34,800
so

2112
01:28:34,800 --> 01:28:36,639
what we're trying to solve here is

2113
01:28:36,639 --> 01:28:38,320
provide more granular control over

2114
01:28:38,320 --> 01:28:40,000
attribute advertisement for any

2115
01:28:40,000 --> 01:28:43,840
application versus specific application

2116
01:28:45,600 --> 01:28:46,400
so

2117
01:28:46,400 --> 01:28:50,480
what we are proposing is a new bit

2118
01:28:50,480 --> 01:28:54,159
under the applications application bits

2119
01:28:54,159 --> 01:28:56,159
which is called a bit which means any

2120
01:28:56,159 --> 01:28:58,159
application can use attributes which are

2121
01:28:58,159 --> 01:29:00,400
advertised under this

2122
01:29:00,400 --> 01:29:02,960
bitmask

2123
01:29:04,560 --> 01:29:07,520
so any example use case here so let's

2124
01:29:07,520 --> 01:29:10,400
consider a network deployment

2125
01:29:10,400 --> 01:29:12,560
that has deployed below attributes right

2126
01:29:12,560 --> 01:29:14,719
so admin groups srlg

2127
01:29:14,719 --> 01:29:17,280
e metric and generic metric and many

2128
01:29:17,280 --> 01:29:18,960
other attributes

2129
01:29:18,960 --> 01:29:20,960
so they have no application specific

2130
01:29:20,960 --> 01:29:22,719
values

2131
01:29:22,719 --> 01:29:25,040
so all deployed applications are all

2132
01:29:25,040 --> 01:29:26,480
using same values for all these

2133
01:29:26,480 --> 01:29:28,000
applications so

2134
01:29:28,000 --> 01:29:31,440
a new application is defined let's say

2135
01:29:31,440 --> 01:29:33,199
as part of network evolution a new

2136
01:29:33,199 --> 01:29:35,679
application y is

2137
01:29:35,679 --> 01:29:37,520
to be deployed

2138
01:29:37,520 --> 01:29:39,920
and it uses a specific value

2139
01:29:39,920 --> 01:29:42,239
for one of the attributes so i had taken

2140
01:29:42,239 --> 01:29:44,639
the subtle v10 and less pointed out that

2141
01:29:44,639 --> 01:29:46,639
that's not the right example so let's

2142
01:29:46,639 --> 01:29:48,239
let's just take one of the attributes

2143
01:29:48,239 --> 01:29:50,080
maybe admin groups that

2144
01:29:50,080 --> 01:29:54,400
it has to use application specific value

2145
01:29:55,520 --> 01:29:58,080
using uh any bit the way we would

2146
01:29:58,080 --> 01:30:01,840
advertise is so so to start with the

2147
01:30:01,840 --> 01:30:04,080
network would have advertised all those

2148
01:30:04,080 --> 01:30:06,639
attributes under any app any bit set

2149
01:30:06,639 --> 01:30:09,600
with sabm with any bit set

2150
01:30:09,600 --> 01:30:11,120
and when the new application is

2151
01:30:11,120 --> 01:30:14,080
introduced with some

2152
01:30:14,960 --> 01:30:16,960
application that has a application

2153
01:30:16,960 --> 01:30:19,440
specific value for certain attribute

2154
01:30:19,440 --> 01:30:20,719
we would just

2155
01:30:20,719 --> 01:30:22,320
set

2156
01:30:22,320 --> 01:30:25,280
advertise a new asylum tlv

2157
01:30:25,280 --> 01:30:26,159
with

2158
01:30:26,159 --> 01:30:30,320
any bit with the y bit set and then

2159
01:30:30,320 --> 01:30:32,000
we would advertise the

2160
01:30:32,000 --> 01:30:34,880
attribute that requires specific value

2161
01:30:34,880 --> 01:30:36,880
the previous advertisement would remain

2162
01:30:36,880 --> 01:30:38,880
same no change uh the preview to the

2163
01:30:38,880 --> 01:30:42,080
previous as less appeared

2164
01:30:42,719 --> 01:30:45,040
so can this be achieved with existing

2165
01:30:45,040 --> 01:30:48,560
rfc 8919 yes it can be achieved and this

2166
01:30:48,560 --> 01:30:50,639
shows how that can be achieved there are

2167
01:30:50,639 --> 01:30:53,280
multiple ways this can be achieved

2168
01:30:53,280 --> 01:30:56,000
so one option is

2169
01:30:56,000 --> 01:30:58,159
the moment you advertise

2170
01:30:58,159 --> 01:30:59,280
because

2171
01:30:59,280 --> 01:31:01,840
you can advertise with sabm 0 length

2172
01:31:01,840 --> 01:31:04,480
which means all any application can use

2173
01:31:04,480 --> 01:31:05,840
it

2174
01:31:05,840 --> 01:31:07,760
so

2175
01:31:07,760 --> 01:31:09,440
to start with you would be advertising

2176
01:31:09,440 --> 01:31:10,880
with 0

2177
01:31:10,880 --> 01:31:13,120
bit mask and then all the attributes

2178
01:31:13,120 --> 01:31:14,800
and when the new

2179
01:31:14,800 --> 01:31:16,960
application has to be introduced you

2180
01:31:16,960 --> 01:31:20,320
would uh advertise another s up tlv

2181
01:31:20,320 --> 01:31:22,480
set the y bit the which is the new

2182
01:31:22,480 --> 01:31:24,719
application and then add the subtle that

2183
01:31:24,719 --> 01:31:27,120
has application specific value you would

2184
01:31:27,120 --> 01:31:28,560
all you would also have to repeat all

2185
01:31:28,560 --> 01:31:30,320
other because that application also

2186
01:31:30,320 --> 01:31:32,480
wants to use all other attributes

2187
01:31:32,480 --> 01:31:33,920
so you would have to repeat all other

2188
01:31:33,920 --> 01:31:37,040
attributes under this subtle as well

2189
01:31:37,040 --> 01:31:39,040
so this option is

2190
01:31:39,040 --> 01:31:41,280
not very efficient in coding you can see

2191
01:31:41,280 --> 01:31:43,360
that all the attributes are being

2192
01:31:43,360 --> 01:31:45,839
repeated

2193
01:31:46,239 --> 01:31:48,080
so there is another way of advertising

2194
01:31:48,080 --> 01:31:51,520
the same with um sab uh i mean existing

2195
01:31:51,520 --> 01:31:55,280
rfc eight nine one nine wherein

2196
01:31:55,280 --> 01:31:57,520
uh there are three slash subtleties the

2197
01:31:57,520 --> 01:31:59,760
first one where all bits are all

2198
01:31:59,760 --> 01:32:01,920
application bits are set except y and

2199
01:32:01,920 --> 01:32:03,199
then you

2200
01:32:03,199 --> 01:32:05,920
advertise the

2201
01:32:05,920 --> 01:32:07,520
attribute

2202
01:32:07,520 --> 01:32:09,199
that y chose to have application

2203
01:32:09,199 --> 01:32:11,120
specific value

2204
01:32:11,120 --> 01:32:14,719
and then your existing asla subtle v you

2205
01:32:14,719 --> 01:32:16,639
put all other attributes but remove the

2206
01:32:16,639 --> 01:32:19,040
one which has the application specific

2207
01:32:19,040 --> 01:32:21,920
value and then a third as a subtle where

2208
01:32:21,920 --> 01:32:23,760
a y bit is set

2209
01:32:23,760 --> 01:32:25,600
and then application specific value for

2210
01:32:25,600 --> 01:32:28,639
that subtle is included

2211
01:32:28,639 --> 01:32:30,800
so

2212
01:32:31,280 --> 01:32:33,840
option 2 is better

2213
01:32:33,840 --> 01:32:36,080
encoding efficiency as compared to the

2214
01:32:36,080 --> 01:32:38,480
previous option

2215
01:32:38,480 --> 01:32:41,199
but not as efficient as

2216
01:32:41,199 --> 01:32:45,519
any app or way of advertising

2217
01:32:47,600 --> 01:32:48,800
uh so

2218
01:32:48,800 --> 01:32:50,560
and also um

2219
01:32:50,560 --> 01:32:51,440
what

2220
01:32:51,440 --> 01:32:54,639
what we're suggesting is that it's the

2221
01:32:54,639 --> 01:32:57,280
it's an efficient encoding and

2222
01:32:57,280 --> 01:33:00,000
it's very intuitive encoding when

2223
01:33:00,000 --> 01:33:01,040
there are

2224
01:33:01,040 --> 01:33:02,800
attributes that have

2225
01:33:02,800 --> 01:33:05,360
application specific values and

2226
01:33:05,360 --> 01:33:07,040
some attributes that don't have

2227
01:33:07,040 --> 01:33:08,800
applications that have specific

2228
01:33:08,800 --> 01:33:11,040
application specific values and other

2229
01:33:11,040 --> 01:33:12,400
attributes that

2230
01:33:12,400 --> 01:33:14,960
do not have application specific

2231
01:33:14,960 --> 01:33:17,520
uh values and it's it's intuitive

2232
01:33:17,520 --> 01:33:19,280
encoding as well as very straightforward

2233
01:33:19,280 --> 01:33:22,440
to implement

2234
01:33:23,199 --> 01:33:25,440
yeah before we go there

2235
01:33:25,440 --> 01:33:28,320
so let's also made a comment that uh

2236
01:33:28,320 --> 01:33:29,520
uh you know

2237
01:33:29,520 --> 01:33:32,239
existing deployments that have already

2238
01:33:32,239 --> 01:33:35,280
deployed asla uh you know moving them to

2239
01:33:35,280 --> 01:33:36,639
this

2240
01:33:36,639 --> 01:33:39,920
would be uh problematic so

2241
01:33:39,920 --> 01:33:43,360
the there is no need for because asla

2242
01:33:43,360 --> 01:33:46,800
ensures i mean any bit ensures that

2243
01:33:46,800 --> 01:33:50,719
if if there is an advertisement with

2244
01:33:50,719 --> 01:33:55,199
of course if you want to deploy this

2245
01:33:55,520 --> 01:33:57,520
asla with any bit

2246
01:33:57,520 --> 01:34:00,320
so all the nodes in your domain have to

2247
01:34:00,320 --> 01:34:02,840
understand this any bit

2248
01:34:02,840 --> 01:34:04,800
um so

2249
01:34:04,800 --> 01:34:07,199
an existing deployment that has um

2250
01:34:07,199 --> 01:34:09,840
already deployed asla

2251
01:34:09,840 --> 01:34:12,719
with existing mechanism

2252
01:34:12,719 --> 01:34:16,080
that i mean there is no uh force i mean

2253
01:34:16,080 --> 01:34:18,719
there is no enforcement to change to any

2254
01:34:18,719 --> 01:34:21,040
application right they can do that

2255
01:34:21,040 --> 01:34:23,280
whenever the time comes that is when a

2256
01:34:23,280 --> 01:34:25,280
new application comes in where it's more

2257
01:34:25,280 --> 01:34:27,920
appropriate to use any they can migrate

2258
01:34:27,920 --> 01:34:29,760
during that time there's no

2259
01:34:29,760 --> 01:34:31,040
there's no

2260
01:34:31,040 --> 01:34:34,239
need to switch to any app immediately

2261
01:34:34,239 --> 01:34:35,520
they can do that whenever there is

2262
01:34:35,520 --> 01:34:38,080
really need for that but

2263
01:34:38,080 --> 01:34:39,520
those

2264
01:34:39,520 --> 01:34:42,560
deployments which are going to deploy s

2265
01:34:42,560 --> 01:34:45,280
line future and they have these specific

2266
01:34:45,280 --> 01:34:46,880
require i mean this

2267
01:34:46,880 --> 01:34:48,080
they

2268
01:34:48,080 --> 01:34:50,000
they believe the their network is going

2269
01:34:50,000 --> 01:34:52,480
to evolve the way described in these

2270
01:34:52,480 --> 01:34:55,360
examples they can go with uh any bit

2271
01:34:55,360 --> 01:34:56,400
if we

2272
01:34:56,400 --> 01:34:58,159
if we if we allow this protocol

2273
01:34:58,159 --> 01:35:00,799
extension

2274
01:35:01,520 --> 01:35:04,159
for asla

2275
01:35:04,639 --> 01:35:07,040
okay uh yeah we would request review and

2276
01:35:07,040 --> 01:35:08,719
comments and

2277
01:35:08,719 --> 01:35:11,840
working group adoption

2278
01:35:13,040 --> 01:35:15,199
sorry let let's go ahead you're in the

2279
01:35:15,199 --> 01:35:17,440
queue

2280
01:35:17,600 --> 01:35:20,560
so uh trot as as you've seen i mean i

2281
01:35:20,560 --> 01:35:22,560
sent a pretty lengthy

2282
01:35:22,560 --> 01:35:24,960
email uh discussing

2283
01:35:24,960 --> 01:35:27,920
uh this uh i i don't go over it point by

2284
01:35:27,920 --> 01:35:29,520
point um

2285
01:35:29,520 --> 01:35:31,440
you know give you a chance to

2286
01:35:31,440 --> 01:35:33,440
read and respond but

2287
01:35:33,440 --> 01:35:36,639
you know the conclusion on my part is

2288
01:35:36,639 --> 01:35:38,960
uh there's really no justification for

2289
01:35:38,960 --> 01:35:41,119
moving it forward there are no

2290
01:35:41,119 --> 01:35:43,760
significant

2291
01:35:43,760 --> 01:35:46,320
advantages when you look at the spectrum

2292
01:35:46,320 --> 01:35:47,600
of of

2293
01:35:47,600 --> 01:35:50,400
the various combinations of cases

2294
01:35:50,400 --> 01:35:52,080
deployment cases

2295
01:35:52,080 --> 01:35:53,920
and there's a lot of

2296
01:35:53,920 --> 01:35:56,000
cost in terms of implementation

2297
01:35:56,000 --> 01:35:57,520
complexity

2298
01:35:57,520 --> 01:35:59,679
and deployment complexity that comes

2299
01:35:59,679 --> 01:36:01,040
along with this

2300
01:36:01,040 --> 01:36:02,880
and we're really not getting any benefit

2301
01:36:02,880 --> 01:36:04,320
for it so

2302
01:36:04,320 --> 01:36:06,320
my opinion is that there's just no

2303
01:36:06,320 --> 01:36:11,400
justification to move forward with this

2304
01:36:11,760 --> 01:36:14,080
okay

2305
01:36:14,480 --> 01:36:17,520
uh so less i i i think you mentioned

2306
01:36:17,520 --> 01:36:19,679
that in in terms of

2307
01:36:19,679 --> 01:36:21,760
encoding efficiency there's very little

2308
01:36:21,760 --> 01:36:23,600
that is getting saved but this example

2309
01:36:23,600 --> 01:36:25,199
was just an example right you can

2310
01:36:25,199 --> 01:36:28,719
imagine if there are more attributes

2311
01:36:28,719 --> 01:36:31,280
um that new application requires

2312
01:36:31,280 --> 01:36:34,480
application specific values all those

2313
01:36:34,480 --> 01:36:35,679
uh

2314
01:36:35,679 --> 01:36:38,159
will have to be repeated in that option

2315
01:36:38,159 --> 01:36:41,199
too that that i discussed so

2316
01:36:41,199 --> 01:36:43,679
uh well i've i mean i went through three

2317
01:36:43,679 --> 01:36:45,920
different examples with with varying

2318
01:36:45,920 --> 01:36:47,520
combinations

2319
01:36:47,520 --> 01:36:48,400
and

2320
01:36:48,400 --> 01:36:49,840
you know the example you provided

2321
01:36:49,840 --> 01:36:51,520
there's some savings in the other two

2322
01:36:51,520 --> 01:36:54,000
examples there's either no savings

2323
01:36:54,000 --> 01:36:55,280
or the all

2324
01:36:55,280 --> 01:36:57,119
is slightly better

2325
01:36:57,119 --> 01:36:58,080
so

2326
01:36:58,080 --> 01:37:00,480
i i really think the quantification of

2327
01:37:00,480 --> 01:37:01,440
this

2328
01:37:01,440 --> 01:37:03,360
efficiencies is

2329
01:37:03,360 --> 01:37:05,360
you know even if you get a little bit

2330
01:37:05,360 --> 01:37:07,520
it's it's very small and it's

2331
01:37:07,520 --> 01:37:09,679
overwhelmed by the complexity that

2332
01:37:09,679 --> 01:37:11,679
you're adding to implementations into

2333
01:37:11,679 --> 01:37:13,360
deployments

2334
01:37:13,360 --> 01:37:16,400
that's that's my input

2335
01:37:16,800 --> 01:37:19,679
um so i i joined the queue is with my

2336
01:37:19,679 --> 01:37:21,760
chair hat off so just speaking as a

2337
01:37:21,760 --> 01:37:23,119
working member

2338
01:37:23,119 --> 01:37:25,840
i'm i find the lessons

2339
01:37:25,840 --> 01:37:30,080
examples pretty convincing but even so

2340
01:37:30,080 --> 01:37:31,280
if there were

2341
01:37:31,280 --> 01:37:32,800
i mean i guess i

2342
01:37:32,800 --> 01:37:34,320
it's coming down to whether you think

2343
01:37:34,320 --> 01:37:36,639
this is needed or not and

2344
01:37:36,639 --> 01:37:38,639
do we have any

2345
01:37:38,639 --> 01:37:42,000
examples right now where this is needed

2346
01:37:42,000 --> 01:37:43,920
you know are we is this just like

2347
01:37:43,920 --> 01:37:46,239
imagining that we might need this that

2348
01:37:46,239 --> 01:37:48,239
if we might have a bunch of applications

2349
01:37:48,239 --> 01:37:49,440
someday

2350
01:37:49,440 --> 01:37:51,360
if this would be a better way to encode

2351
01:37:51,360 --> 01:37:53,440
it or is there a real pressing need for

2352
01:37:53,440 --> 01:37:55,199
this do we have deployments that are

2353
01:37:55,199 --> 01:37:57,040
currently running out of tlb space for

2354
01:37:57,040 --> 01:37:58,719
example

2355
01:37:58,719 --> 01:38:00,800
that would be my question

2356
01:38:00,800 --> 01:38:04,239
uh so uh chris this is

2357
01:38:04,239 --> 01:38:06,800
so the comment that i have is if if if

2358
01:38:06,800 --> 01:38:08,000
um

2359
01:38:08,000 --> 01:38:11,920
if we are going to make as a

2360
01:38:11,920 --> 01:38:14,800
going ahead if we want to make that as a

2361
01:38:14,800 --> 01:38:17,040
de facto standard where the link

2362
01:38:17,040 --> 01:38:18,960
attributes have to be advertised it has

2363
01:38:18,960 --> 01:38:21,360
to be flexible and we have to let it

2364
01:38:21,360 --> 01:38:23,440
evolve and we have to think of future

2365
01:38:23,440 --> 01:38:25,360
where new applications can come and how

2366
01:38:25,360 --> 01:38:26,560
easy

2367
01:38:26,560 --> 01:38:29,520
it is the existing

2368
01:38:29,520 --> 01:38:32,000
extensions how easy it is

2369
01:38:32,000 --> 01:38:33,840
uh you know to

2370
01:38:33,840 --> 01:38:36,320
how easy and simple it is to understand

2371
01:38:36,320 --> 01:38:40,159
and to you know advertise those

2372
01:38:42,080 --> 01:38:43,600
attributes

2373
01:38:43,600 --> 01:38:44,400
in

2374
01:38:44,400 --> 01:38:46,960
inside this asla subtle

2375
01:38:46,960 --> 01:38:49,119
if we don't do that if we don't allow

2376
01:38:49,119 --> 01:38:51,360
such

2377
01:38:52,719 --> 01:38:54,239
you know the protocol

2378
01:38:54,239 --> 01:38:56,480
extensions to evolve

2379
01:38:56,480 --> 01:38:58,480
then it's really difficult and really

2380
01:38:58,480 --> 01:39:00,639
hard to justify making them de facto

2381
01:39:00,639 --> 01:39:03,040
standards

2382
01:39:03,040 --> 01:39:04,560
yeah well i mean i guess i wasn't saying

2383
01:39:04,560 --> 01:39:06,480
don't let it happen i was just saying i

2384
01:39:06,480 --> 01:39:08,320
mean we have like uh we have an

2385
01:39:08,320 --> 01:39:10,239
extension out there and isis right to

2386
01:39:10,239 --> 01:39:11,199
use

2387
01:39:11,199 --> 01:39:12,159
you know

2388
01:39:12,159 --> 01:39:15,040
expanded space we've never used it

2389
01:39:15,040 --> 01:39:17,199
i just that's all i meant since this is

2390
01:39:17,199 --> 01:39:18,960
contentious i just

2391
01:39:18,960 --> 01:39:21,280
be nice

2392
01:39:22,800 --> 01:39:24,719
okay so your question

2393
01:39:24,719 --> 01:39:26,480
do we have

2394
01:39:26,480 --> 01:39:29,440
cases where tlv space is exhausting

2395
01:39:29,440 --> 01:39:32,000
i think we have another draft

2396
01:39:32,000 --> 01:39:33,840
which where which describes those

2397
01:39:33,840 --> 01:39:36,800
scenarios happening and how that should

2398
01:39:36,800 --> 01:39:38,480
be handled

2399
01:39:38,480 --> 01:39:40,159
so which which means that you know the

2400
01:39:40,159 --> 01:39:43,760
tl space uh getting used up is is is

2401
01:39:43,760 --> 01:39:45,280
real

2402
01:39:45,280 --> 01:39:46,320
yeah

2403
01:39:46,320 --> 01:39:48,960
okay that's a valid comment all right uh

2404
01:39:48,960 --> 01:39:52,159
martin uh i think you're up next

2405
01:39:52,159 --> 01:39:55,719
yeah martin horner

2406
01:40:06,000 --> 01:40:08,000
application specific link attributes in

2407
01:40:08,000 --> 01:40:10,719
general i think the fact that we have

2408
01:40:10,719 --> 01:40:12,880
this kind of discussion shows

2409
01:40:12,880 --> 01:40:15,679
that the concept of application specific

2410
01:40:15,679 --> 01:40:18,560
link attributes is just too complex i

2411
01:40:18,560 --> 01:40:21,520
know who really needs it i from my point

2412
01:40:21,520 --> 01:40:23,600
of view it's overly complex but here we

2413
01:40:23,600 --> 01:40:26,320
are i hope we resolve this issue or this

2414
01:40:26,320 --> 01:40:29,759
discussion as soon as possible

2415
01:40:30,719 --> 01:40:32,800
martin i couldn't hear your comment at

2416
01:40:32,800 --> 01:40:34,880
all would be helpful if you could send

2417
01:40:34,880 --> 01:40:36,560
it on the list

2418
01:40:36,560 --> 01:40:38,800
yeah and also open up kodi md if you

2419
01:40:38,800 --> 01:40:42,159
don't mind and put it in the minutes

2420
01:40:42,320 --> 01:40:44,560
uh to the media echo people it's it's

2421
01:40:44,560 --> 01:40:46,560
really hard to hear the in-room mic

2422
01:40:46,560 --> 01:40:47,840
i've seen this in multiple working

2423
01:40:47,840 --> 01:40:49,600
groups too okay i can't watch with the

2424
01:40:49,600 --> 01:40:50,880
list

2425
01:40:50,880 --> 01:40:52,800
yeah thank you sorry

2426
01:40:52,800 --> 01:40:55,440
all right um i think so i i was just

2427
01:40:55,440 --> 01:40:57,600
gonna encourage oh

2428
01:40:57,600 --> 01:40:59,520
this is just daisy speaking as uh chair

2429
01:40:59,520 --> 01:41:01,920
just encourage everybody to uh read

2430
01:41:01,920 --> 01:41:04,239
through the email

2431
01:41:04,239 --> 01:41:06,719
email thread and comment on this i was

2432
01:41:06,719 --> 01:41:08,639
just in response to martin

2433
01:41:08,639 --> 01:41:10,639
also speaking as working groups here we

2434
01:41:10,639 --> 01:41:12,239
did have

2435
01:41:12,239 --> 01:41:14,719
operators that requested application

2436
01:41:14,719 --> 01:41:16,880
specific attributes back in that

2437
01:41:16,880 --> 01:41:19,840
discussion

2438
01:41:21,440 --> 01:41:22,639
okay

2439
01:41:22,639 --> 01:41:24,639
okay thanks shirata um

2440
01:41:24,639 --> 01:41:28,320
all right alvaro alvaro and the ospf

2441
01:41:28,320 --> 01:41:31,119
monitor node

2442
01:41:31,520 --> 01:41:35,600
on-site hopefully the mic is louder

2443
01:41:36,719 --> 01:41:39,360
jeffrey was trying to sneak in here and

2444
01:41:39,360 --> 01:41:41,280
get his presentation on so um i'm

2445
01:41:41,280 --> 01:41:42,320
assuming you guys are going to share the

2446
01:41:42,320 --> 01:41:43,520
slides yep

2447
01:41:43,520 --> 01:41:44,840
yeah i'm

2448
01:41:44,840 --> 01:41:48,719
uh i forgot you were on site damn

2449
01:41:48,719 --> 01:41:50,639
yeah i'll come here all right

2450
01:41:50,639 --> 01:41:54,400
so okay i've got i've got it up

2451
01:41:55,040 --> 01:41:57,280
oh

2452
01:41:57,360 --> 01:41:59,840
that's very weird i i don't actually

2453
01:41:59,840 --> 01:42:02,480
know how to do this locally

2454
01:42:02,480 --> 01:42:05,519
do you see the slides

2455
01:42:05,679 --> 01:42:07,760
nope

2456
01:42:07,760 --> 01:42:08,880
you should just do whatever you did

2457
01:42:08,880 --> 01:42:12,560
before we were seeing the other slides

2458
01:42:13,119 --> 01:42:16,080
uh jeff can you share them

2459
01:42:16,080 --> 01:42:18,000
i i was obviously what i did before was

2460
01:42:18,000 --> 01:42:20,400
given controls of the presenter when i

2461
01:42:20,400 --> 01:42:22,320
click on it it just opens the document

2462
01:42:22,320 --> 01:42:25,719
in my computer

2463
01:42:30,960 --> 01:42:33,600
coming it's coming now

2464
01:42:33,600 --> 01:42:36,000
coming soon

2465
01:42:36,000 --> 01:42:38,960
there we go okay so i'm okay

2466
01:42:38,960 --> 01:42:41,920
and i work at future way and i'm doing

2467
01:42:41,920 --> 01:42:44,880
this work with lynn han

2468
01:42:45,520 --> 01:42:47,280
i had sent an email to the mailing list

2469
01:42:47,280 --> 01:42:49,040
about this and there were some replies

2470
01:42:49,040 --> 01:42:50,480
sorry i didn't get the replies but i'm

2471
01:42:50,480 --> 01:42:53,119
going to attempt and answer

2472
01:42:53,119 --> 01:42:55,840
the comments from there today i only

2473
01:42:55,840 --> 01:42:57,440
have five slides

2474
01:42:57,440 --> 01:42:59,760
so please uh you know hold

2475
01:42:59,760 --> 01:43:01,119
all the other comments until i finish

2476
01:43:01,119 --> 01:43:03,199
and hopefully address your your slides

2477
01:43:03,199 --> 01:43:06,159
uh or your comments uh next

2478
01:43:06,159 --> 01:43:09,119
so uh what we're trying to do here is

2479
01:43:09,119 --> 01:43:12,080
define what we call an active monitor

2480
01:43:12,080 --> 01:43:14,080
active as opposed to what we usually

2481
01:43:14,080 --> 01:43:16,239
have which is a passive monitor

2482
01:43:16,239 --> 01:43:18,000
say on a lan

2483
01:43:18,000 --> 01:43:20,320
which just listens and most of the time

2484
01:43:20,320 --> 01:43:22,239
we don't even know it's there

2485
01:43:22,239 --> 01:43:25,040
we have um and this is something that we

2486
01:43:25,040 --> 01:43:26,800
left off the draft because we wanted it

2487
01:43:26,800 --> 01:43:29,600
to be not specific to an application

2488
01:43:29,600 --> 01:43:31,679
um or the implementation the deployment

2489
01:43:31,679 --> 01:43:32,880
that we have

2490
01:43:32,880 --> 01:43:36,080
but uh more general so what we have the

2491
01:43:36,080 --> 01:43:37,920
specific application that we have is we

2492
01:43:37,920 --> 01:43:39,360
have a mobile network

2493
01:43:39,360 --> 01:43:41,600
and this mobile network is going to from

2494
01:43:41,600 --> 01:43:43,600
time to time come in contact with what

2495
01:43:43,600 --> 01:43:46,719
we're calling a a monitor node

2496
01:43:46,719 --> 01:43:50,320
over a point-to-point uh radio link

2497
01:43:50,320 --> 01:43:51,360
so it's very specific to a

2498
01:43:51,360 --> 01:43:53,760
point-to-point uh implementation what we

2499
01:43:53,760 --> 01:43:57,440
want is of course to be able to

2500
01:43:57,440 --> 01:43:58,560
interface with this node we want to

2501
01:43:58,560 --> 01:44:00,080
authenticate it

2502
01:44:00,080 --> 01:44:02,239
uh we want this node to be non-transit

2503
01:44:02,239 --> 01:44:05,119
as has been uh pointed out on the list

2504
01:44:05,119 --> 01:44:06,880
but we also want

2505
01:44:06,880 --> 01:44:09,119
the node to not

2506
01:44:09,119 --> 01:44:13,199
be able to influence our network

2507
01:44:13,199 --> 01:44:16,000
meaning if it decides to send stuff to

2508
01:44:16,000 --> 01:44:18,880
us right to become not just listen only

2509
01:44:18,880 --> 01:44:21,520
but to send lsas or anything else

2510
01:44:21,520 --> 01:44:24,639
we want to be able to not propagate the

2511
01:44:24,639 --> 01:44:26,960
lsas across the rest of the network

2512
01:44:26,960 --> 01:44:30,560
and also to not advertise the link

2513
01:44:30,560 --> 01:44:32,159
that we're connected

2514
01:44:32,159 --> 01:44:34,400
towards this node

2515
01:44:34,400 --> 01:44:35,520
um

2516
01:44:35,520 --> 01:44:37,920
this will also not only achieve uh

2517
01:44:37,920 --> 01:44:39,600
stability in the network because if

2518
01:44:39,600 --> 01:44:41,600
we're just flooding a bunch of lsas

2519
01:44:41,600 --> 01:44:43,520
which may or may not be just the local

2520
01:44:43,520 --> 01:44:45,760
lsas for that monitor node this node

2521
01:44:45,760 --> 01:44:47,440
could inject you know whatever they want

2522
01:44:47,440 --> 01:44:49,119
and we don't want that to create

2523
01:44:49,119 --> 01:44:51,600
anything uh inside the network the same

2524
01:44:51,600 --> 01:44:53,920
thing with the link if the link flaps or

2525
01:44:53,920 --> 01:44:55,360
anything else

2526
01:44:55,360 --> 01:44:58,159
it could cause some stability in there

2527
01:44:58,159 --> 01:45:00,400
this helps with that it also helps with

2528
01:45:00,400 --> 01:45:02,719
of course not having even traffic to the

2529
01:45:02,719 --> 01:45:03,600
node

2530
01:45:03,600 --> 01:45:05,040
which many of the existing solutions

2531
01:45:05,040 --> 01:45:06,880
allow right not just now

2532
01:45:06,880 --> 01:45:08,560
transit traffic but no traffic to the

2533
01:45:08,560 --> 01:45:10,000
node itself

2534
01:45:10,000 --> 01:45:12,400
and we also wrote in the draft that

2535
01:45:12,400 --> 01:45:14,960
in the case of this being used in a

2536
01:45:14,960 --> 01:45:16,719
multi-access interface

2537
01:45:16,719 --> 01:45:19,119
that we don't want the node to become a

2538
01:45:19,119 --> 01:45:21,920
dr bdr

2539
01:45:22,080 --> 01:45:23,760
i do realize when i was

2540
01:45:23,760 --> 01:45:25,840
doing the slides last night that we need

2541
01:45:25,840 --> 01:45:27,520
to beef up a lot the description of what

2542
01:45:27,520 --> 01:45:29,520
does it mean to not be eligible for the

2543
01:45:29,520 --> 01:45:32,480
rmddr so we need to to work on that

2544
01:45:32,480 --> 01:45:34,320
next slide

2545
01:45:34,320 --> 01:45:36,719
so what the draft says is it gives two

2546
01:45:36,719 --> 01:45:40,080
options one in section three

2547
01:45:40,080 --> 01:45:42,480
that we call a monitoring interface so

2548
01:45:42,480 --> 01:45:44,480
basically we're defining

2549
01:45:44,480 --> 01:45:45,600
two

2550
01:45:45,600 --> 01:45:47,920
interface configurable parameters

2551
01:45:47,920 --> 01:45:49,360
these are

2552
01:45:49,360 --> 01:45:50,960
you know the same type that are defined

2553
01:45:50,960 --> 01:45:52,000
in

2554
01:45:52,000 --> 01:45:55,600
uh 2328 and i think it's appendix c2

2555
01:45:55,600 --> 01:45:58,800
and uh there are some in ospf v3 as well

2556
01:45:58,800 --> 01:46:00,480
so what these do is they're relatively

2557
01:46:00,480 --> 01:46:03,440
simple the names are

2558
01:46:03,440 --> 01:46:04,800
very straightforward do not advertise

2559
01:46:04,800 --> 01:46:06,400
link which means don't advertise the

2560
01:46:06,400 --> 01:46:08,638
link

2561
01:46:09,360 --> 01:46:12,239
where you configure this again in our

2562
01:46:12,239 --> 01:46:14,320
application it's a point-to-point link

2563
01:46:14,320 --> 01:46:15,920
but it could also work in a multi-access

2564
01:46:15,920 --> 01:46:16,880
link

2565
01:46:16,880 --> 01:46:19,119
and the other one is do not request and

2566
01:46:19,119 --> 01:46:20,560
ignore lsas

2567
01:46:20,560 --> 01:46:21,840
so in there we describe a little bit

2568
01:46:21,840 --> 01:46:23,920
more where we say well in this case what

2569
01:46:23,920 --> 01:46:25,280
i want you to do

2570
01:46:25,280 --> 01:46:27,520
is to not request

2571
01:46:27,520 --> 01:46:29,119
lsas

2572
01:46:29,119 --> 01:46:30,159
from

2573
01:46:30,159 --> 01:46:31,840
the monitor node when you're doing the

2574
01:46:31,840 --> 01:46:33,520
database exchange

2575
01:46:33,520 --> 01:46:35,520
and don't

2576
01:46:35,520 --> 01:46:37,360
consider any

2577
01:46:37,360 --> 01:46:39,760
lsas received from them for propagation

2578
01:46:39,760 --> 01:46:42,000
so section 13 of 23 28 talks about how

2579
01:46:42,000 --> 01:46:44,480
to do that with max h

2580
01:46:44,480 --> 01:46:47,440
so what this lets it do let's do is

2581
01:46:47,440 --> 01:46:49,440
the goals that i mentioned before you

2582
01:46:49,440 --> 01:46:51,040
can authenticate the node it won't be

2583
01:46:51,040 --> 01:46:52,560
transit because there's no information

2584
01:46:52,560 --> 01:46:54,480
going out from them there's no direct

2585
01:46:54,480 --> 01:46:56,239
traffic to them either there's no lsa

2586
01:46:56,239 --> 01:46:57,679
propagation we're not advertising the

2587
01:46:57,679 --> 01:46:58,480
link

2588
01:46:58,480 --> 01:47:00,159
and yes we need to clarify a little bit

2589
01:47:00,159 --> 01:47:01,280
more what does it mean to not be

2590
01:47:01,280 --> 01:47:03,840
eligible for the rmpdr

2591
01:47:03,840 --> 01:47:05,040
um

2592
01:47:05,040 --> 01:47:07,040
we think it's important for this to be

2593
01:47:07,040 --> 01:47:08,880
specified or

2594
01:47:08,880 --> 01:47:10,560
at least documented it doesn't

2595
01:47:10,560 --> 01:47:12,080
necessarily have to be a standard or

2596
01:47:12,080 --> 01:47:14,000
documented

2597
01:47:14,000 --> 01:47:15,040
because

2598
01:47:15,040 --> 01:47:16,480
at least in this area they're working on

2599
01:47:16,480 --> 01:47:18,560
there might be multiple routers at that

2600
01:47:18,560 --> 01:47:20,080
edge of the network

2601
01:47:20,080 --> 01:47:23,520
multiple vendors for example that um

2602
01:47:23,520 --> 01:47:25,440
could implement this and we want you

2603
01:47:25,440 --> 01:47:27,360
know to be the the behavior to be clear

2604
01:47:27,360 --> 01:47:28,719
and understood exactly what's going to

2605
01:47:28,719 --> 01:47:30,880
happen not to leave it to chance for the

2606
01:47:30,880 --> 01:47:33,360
one implementation to do one thing

2607
01:47:33,360 --> 01:47:35,679
different than another

2608
01:47:35,679 --> 01:47:37,679
next slide

2609
01:47:37,679 --> 01:47:40,320
so that first option addresses the need

2610
01:47:40,320 --> 01:47:41,360
that we have

2611
01:47:41,360 --> 01:47:42,560
but we thought you know as long as we're

2612
01:47:42,560 --> 01:47:44,320
doing this we should do a complete

2613
01:47:44,320 --> 01:47:46,159
solution for a monitoring node

2614
01:47:46,159 --> 01:47:48,719
so the other

2615
01:47:49,199 --> 01:47:51,119
way of doing this is not just assume

2616
01:47:51,119 --> 01:47:51,840
that

2617
01:47:51,840 --> 01:47:53,440
the monitor node is the only one on the

2618
01:47:53,440 --> 01:47:54,560
interface

2619
01:47:54,560 --> 01:47:56,960
but if we have say a lan we could have

2620
01:47:56,960 --> 01:47:58,560
multiple routers

2621
01:47:58,560 --> 01:48:00,639
and one of them one of the nodes be a

2622
01:48:00,639 --> 01:48:02,239
monitor node

2623
01:48:02,239 --> 01:48:05,199
so in this option we're saying the

2624
01:48:05,199 --> 01:48:08,239
monitor node would advertise a bit in uh

2625
01:48:08,239 --> 01:48:09,600
lls

2626
01:48:09,600 --> 01:48:11,920
saying hey i'm a monitor

2627
01:48:11,920 --> 01:48:13,920
and what that would do is it would cause

2628
01:48:13,920 --> 01:48:15,920
the other routers on the link the ones

2629
01:48:15,920 --> 01:48:18,000
that are you know real routers to do

2630
01:48:18,000 --> 01:48:19,360
pretty much the same thing that the

2631
01:48:19,360 --> 01:48:21,199
local configuration would do

2632
01:48:21,199 --> 01:48:23,520
ignore any received lsas

2633
01:48:23,520 --> 01:48:25,920
don't

2634
01:48:26,080 --> 01:48:27,600
request any other saves during the

2635
01:48:27,600 --> 01:48:29,679
database exchange

2636
01:48:29,679 --> 01:48:32,400
and consider that node ineligible for

2637
01:48:32,400 --> 01:48:34,639
dr or bdr

2638
01:48:34,639 --> 01:48:35,679
so again

2639
01:48:35,679 --> 01:48:37,760
by doing this we

2640
01:48:37,760 --> 01:48:39,520
achieve the same goals

2641
01:48:39,520 --> 01:48:41,119
authentication non-transcendental

2642
01:48:41,119 --> 01:48:42,320
traffic

2643
01:48:42,320 --> 01:48:44,800
no let's say propagation no dr

2644
01:48:44,800 --> 01:48:47,119
eligibility yes we need to specify that

2645
01:48:47,119 --> 01:48:48,320
more

2646
01:48:48,320 --> 01:48:50,239
and uh no link advertisement they put a

2647
01:48:50,239 --> 01:48:52,239
little asterisk there because

2648
01:48:52,239 --> 01:48:54,080
uh that would work in a point-to-point

2649
01:48:54,080 --> 01:48:56,159
link where one of the routers emphasizes

2650
01:48:56,159 --> 01:48:58,239
that it's a monitor so i me as the other

2651
01:48:58,239 --> 01:49:00,480
router won't advertise link

2652
01:49:00,480 --> 01:49:02,639
in a multi-access interface of course we

2653
01:49:02,639 --> 01:49:04,239
would advertise the link

2654
01:49:04,239 --> 01:49:07,599
because there are other routers in there

2655
01:49:08,320 --> 01:49:11,199
so that's pretty much it for the draft

2656
01:49:11,199 --> 01:49:12,400
in the

2657
01:49:12,400 --> 01:49:13,679
list there was a mention of other

2658
01:49:13,679 --> 01:49:15,920
possible solutions next slide

2659
01:49:15,920 --> 01:49:19,599
and so i did a quick table um

2660
01:49:19,599 --> 01:49:21,440
of these two solutions at the very

2661
01:49:21,440 --> 01:49:22,880
beginning and some of the others towards

2662
01:49:22,880 --> 01:49:25,840
the end ac mentioned this

2663
01:49:25,840 --> 01:49:30,080
isp that we have all worked with and

2664
01:49:30,080 --> 01:49:32,719
i won't even say where they are

2665
01:49:32,719 --> 01:49:33,760
which

2666
01:49:33,760 --> 01:49:35,520
had proposed at some point maintaining

2667
01:49:35,520 --> 01:49:38,400
stuff in exchange for a long time

2668
01:49:38,400 --> 01:49:40,080
sure we could do that that doesn't

2669
01:49:40,080 --> 01:49:41,920
achieve everything that we want because

2670
01:49:41,920 --> 01:49:43,920
we could still get direct traffic

2671
01:49:43,920 --> 01:49:46,239
we could still we are still probably in

2672
01:49:46,239 --> 01:49:47,520
the lsa

2673
01:49:47,520 --> 01:49:48,800
uh if we don't get full we don't

2674
01:49:48,800 --> 01:49:52,080
necessarily propagate the um

2675
01:49:52,080 --> 01:49:54,560
the link so that's a good thing

2676
01:49:54,560 --> 01:49:57,280
both the orbit and the h-bit for s3 and

2677
01:49:57,280 --> 01:50:00,159
s3v2 pretty much do the same thing they

2678
01:50:00,159 --> 01:50:01,280
don't

2679
01:50:01,280 --> 01:50:03,440
uh allow transit which is a good thing

2680
01:50:03,440 --> 01:50:05,599
but they still allow

2681
01:50:05,599 --> 01:50:07,520
their traffic they still allow

2682
01:50:07,520 --> 01:50:10,159
propagation of the lsas they still allow

2683
01:50:10,159 --> 01:50:11,679
announcement of the link

2684
01:50:11,679 --> 01:50:13,119
et cetera

2685
01:50:13,119 --> 01:50:14,960
and um

2686
01:50:14,960 --> 01:50:17,040
6860 was also mentioned

2687
01:50:17,040 --> 01:50:20,719
all 6860 does is it hides the link

2688
01:50:20,719 --> 01:50:23,440
from the forwarding table the

2689
01:50:23,440 --> 01:50:26,880
lsas are still advertised throughout the

2690
01:50:26,880 --> 01:50:27,840
throughout the network throughout the

2691
01:50:27,840 --> 01:50:29,599
area so we still get electric

2692
01:50:29,599 --> 01:50:32,880
propagation we do get

2693
01:50:32,880 --> 01:50:35,360
direct traffic

2694
01:50:35,360 --> 01:50:37,440
we um

2695
01:50:37,440 --> 01:50:39,599
yeah we can get direct traffic

2696
01:50:39,599 --> 01:50:42,400
and of course it doesn't prevent um

2697
01:50:42,400 --> 01:50:44,080
we're gonna avoid i'm sorry we can avoid

2698
01:50:44,080 --> 01:50:45,520
direct traffic

2699
01:50:45,520 --> 01:50:47,360
uh because if we hide the links then we

2700
01:50:47,360 --> 01:50:49,920
can't you know get to that link

2701
01:50:49,920 --> 01:50:52,320
but it doesn't prevent transit right

2702
01:50:52,320 --> 01:50:55,119
because we're hiding the transit link

2703
01:50:55,119 --> 01:50:55,920
the

2704
01:50:55,920 --> 01:50:58,159
node is not removed from the topology

2705
01:50:58,159 --> 01:51:00,400
right the quality still can be resolved

2706
01:51:00,400 --> 01:51:02,480
uh for transit through that link

2707
01:51:02,480 --> 01:51:04,960
so we believe that um you know for those

2708
01:51:04,960 --> 01:51:06,960
specific needs that we have

2709
01:51:06,960 --> 01:51:10,239
again the big one here is protection not

2710
01:51:10,239 --> 01:51:12,400
just non-transit and not uh directing

2711
01:51:12,400 --> 01:51:15,760
traffic but also trying to protect

2712
01:51:15,760 --> 01:51:16,480
the

2713
01:51:16,480 --> 01:51:18,960
network from a possible misbehaving

2714
01:51:18,960 --> 01:51:20,400
monitor node

2715
01:51:20,400 --> 01:51:22,239
i'm going to note that except for the

2716
01:51:22,239 --> 01:51:23,440
first

2717
01:51:23,440 --> 01:51:25,360
the monitoring interface column

2718
01:51:25,360 --> 01:51:26,960
where the receiving router the router

2719
01:51:26,960 --> 01:51:28,880
say in the network has control over what

2720
01:51:28,880 --> 01:51:29,760
happens

2721
01:51:29,760 --> 01:51:31,199
everything else depends on the

2722
01:51:31,199 --> 01:51:33,440
monitoring node to say something

2723
01:51:33,440 --> 01:51:34,960
to indicate with a bit that it wants to

2724
01:51:34,960 --> 01:51:36,560
do something and of course there's

2725
01:51:36,560 --> 01:51:38,239
always the risk that that bit won't be

2726
01:51:38,239 --> 01:51:39,040
set

2727
01:51:39,040 --> 01:51:40,719
all bro can you wrap up

2728
01:51:40,719 --> 01:51:43,920
we're sort of out of time

2729
01:51:44,560 --> 01:51:46,159
uh i don't understand what you said but

2730
01:51:46,159 --> 01:51:48,320
i i'm done

2731
01:51:48,320 --> 01:51:51,440
okay go ahead ac okay ac lindem speaking

2732
01:51:51,440 --> 01:51:55,040
as a working group uh member yeah i

2733
01:51:55,040 --> 01:51:57,679
i i wasn't suggesting that we go back to

2734
01:51:57,679 --> 01:51:59,199
that i was saying that was the worst way

2735
01:51:59,199 --> 01:52:02,000
to do it the way that isp did it because

2736
01:52:02,000 --> 01:52:04,400
we actually had to change code

2737
01:52:04,400 --> 01:52:07,840
to uh because we had all this code to

2738
01:52:07,840 --> 01:52:09,119
get rid of

2739
01:52:09,119 --> 01:52:11,280
adjacencies that weren't making progress

2740
01:52:11,280 --> 01:52:13,920
and bring it up and down

2741
01:52:13,920 --> 01:52:16,000
i read this again i was pretty said you

2742
01:52:16,000 --> 01:52:18,480
could do everything you wanted without

2743
01:52:18,480 --> 01:52:20,639
this but after i read it again i see

2744
01:52:20,639 --> 01:52:21,599
that

2745
01:52:21,599 --> 01:52:23,599
i think the one thing you can't do

2746
01:52:23,599 --> 01:52:26,800
without some extension is that is

2747
01:52:26,800 --> 01:52:29,679
get rid of the adjacency and any

2748
01:52:29,679 --> 01:52:31,280
flapping of it

2749
01:52:31,280 --> 01:52:34,400
on the side of the non-monitoring mode

2750
01:52:34,400 --> 01:52:37,199
so i don't mind that but i just suggest

2751
01:52:37,199 --> 01:52:39,280
that for all these things you put the

2752
01:52:39,280 --> 01:52:41,440
burn it on the new guy the monitoring

2753
01:52:41,440 --> 01:52:42,880
mode then you get the best backward

2754
01:52:42,880 --> 01:52:44,719
compatibility even if they don't support

2755
01:52:44,719 --> 01:52:46,480
it like for instance

2756
01:52:46,480 --> 01:52:49,360
you don't have to advertise a router lsa

2757
01:52:49,360 --> 01:52:51,199
you don't need to you know we already

2758
01:52:51,199 --> 01:52:53,360
have a way to keep from becoming dr you

2759
01:52:53,360 --> 01:52:55,760
dr priority of zero

2760
01:52:55,760 --> 01:52:57,920
that'll do it you don't really need to

2761
01:52:57,920 --> 01:53:00,960
specify that the other nodes do anything

2762
01:53:00,960 --> 01:53:02,000
special

2763
01:53:02,000 --> 01:53:05,119
so you could really do this just put the

2764
01:53:05,119 --> 01:53:08,000
burden on the monitoring node and really

2765
01:53:08,000 --> 01:53:12,560
have these options just for what the uh

2766
01:53:12,560 --> 01:53:14,400
node you're connecting to

2767
01:53:14,400 --> 01:53:17,599
puts in his lsa

2768
01:53:17,599 --> 01:53:19,599
that's that's that's my comment now i'm

2769
01:53:19,599 --> 01:53:21,840
not i'm not i'm not saying we could do

2770
01:53:21,840 --> 01:53:24,080
it exactly the same way and it might be

2771
01:53:24,080 --> 01:53:26,719
good to have a formal mechanism for this

2772
01:53:26,719 --> 01:53:28,480
yeah especially especially if you're

2773
01:53:28,480 --> 01:53:30,880
going to put the uh put the pub sub

2774
01:53:30,880 --> 01:53:33,360
mechanism on a different node this node

2775
01:53:33,360 --> 01:53:35,440
that node is going to have to passively

2776
01:53:35,440 --> 01:53:38,800
monitor both the backbone and the uh

2777
01:53:38,800 --> 01:53:40,639
yeah the other network

2778
01:53:40,639 --> 01:53:42,560
the non-backups

2779
01:53:42,560 --> 01:53:44,239
we'll think about that you know as i

2780
01:53:44,239 --> 01:53:45,520
said it makes you a little bit nervous

2781
01:53:45,520 --> 01:53:48,159
that that we put all the

2782
01:53:48,159 --> 01:53:51,280
new machinery on the new node uh because

2783
01:53:51,280 --> 01:53:52,480
you know if it goes if something goes

2784
01:53:52,480 --> 01:53:53,599
wrong with it then the rest of the

2785
01:53:53,599 --> 01:53:54,719
network's true

2786
01:53:54,719 --> 01:53:56,480
but yes yeah buddy but exactly but

2787
01:53:56,480 --> 01:53:58,560
exactly it's innocuous i mean you just

2788
01:53:58,560 --> 01:54:00,480
don't advertise

2789
01:54:00,480 --> 01:54:02,159
yeah it's easy

2790
01:54:02,159 --> 01:54:03,119
okay

2791
01:54:03,119 --> 01:54:04,480
uh okay

2792
01:54:04,480 --> 01:54:06,639
good point thanks alvaro um and let's

2793
01:54:06,639 --> 01:54:08,880
get our last presentation uh who came in

2794
01:54:08,880 --> 01:54:11,280
late so we don't feel too bad about

2795
01:54:11,280 --> 01:54:13,040
not giving you the whole 10 minutes but

2796
01:54:13,040 --> 01:54:14,239
you have the remaining time of the

2797
01:54:14,239 --> 01:54:16,880
meeting uh jeffrey

2798
01:54:16,880 --> 01:54:18,719
yeah so really quick the only thing the

2799
01:54:18,719 --> 01:54:20,800
other slide said is that yeah we need to

2800
01:54:20,800 --> 01:54:22,960
update with some of the considerations

2801
01:54:22,960 --> 01:54:25,840
and uh you'll get more feedback and uh

2802
01:54:25,840 --> 01:54:27,840
that's after we do that uh we'll

2803
01:54:27,840 --> 01:54:29,199
probably want to

2804
01:54:29,199 --> 01:54:31,360
uh have this considered for adoption

2805
01:54:31,360 --> 01:54:32,639
but you know just like everyone else

2806
01:54:32,639 --> 01:54:34,880
says at the last slide thank you all

2807
01:54:34,880 --> 01:54:37,840
right thanks

2808
01:54:41,679 --> 01:54:43,920
jeffrey zhang uh presenting any cast

2809
01:54:43,920 --> 01:54:46,560
affiliation advertisement

2810
01:54:46,560 --> 01:54:48,800
yep i'm here

2811
01:54:48,800 --> 01:54:52,480
oh oh you're in the room too okay uh

2812
01:54:52,480 --> 01:54:55,840
great great uh uh looks like jeff you

2813
01:54:55,840 --> 01:54:57,760
you did it great thank you

2814
01:54:57,760 --> 01:55:00,320
go okay

2815
01:55:00,320 --> 01:55:02,880
so this is about um

2816
01:55:02,880 --> 01:55:04,639
advertising the

2817
01:55:04,639 --> 01:55:06,800
affiliated addresses for any cash

2818
01:55:06,800 --> 01:55:08,000
address

2819
01:55:08,000 --> 01:55:10,719
next up please

2820
01:55:12,239 --> 01:55:16,000
the purpose of this is that

2821
01:55:16,000 --> 01:55:18,400
there is this use case where

2822
01:55:18,400 --> 01:55:22,000
when you need to send traffic to uh

2823
01:55:22,000 --> 01:55:24,000
any of uh uh

2824
01:55:24,000 --> 01:55:25,920
a set of devices that

2825
01:55:25,920 --> 01:55:28,800
own that uh anycast address

2826
01:55:28,800 --> 01:55:31,040
typically you just send use the anycast

2827
01:55:31,040 --> 01:55:33,040
address as your destination address and

2828
01:55:33,040 --> 01:55:33,840
then

2829
01:55:33,840 --> 01:55:36,800
the closest one will get get the package

2830
01:55:36,800 --> 01:55:39,360
and if you happen to have ecmp to some

2831
01:55:39,360 --> 01:55:41,280
of those then the you get a little

2832
01:55:41,280 --> 01:55:44,000
balancing and some but if you don't have

2833
01:55:44,000 --> 01:55:45,360
ecmp

2834
01:55:45,360 --> 01:55:47,840
oil is always the closest one that gets

2835
01:55:47,840 --> 01:55:49,040
the traffic

2836
01:55:49,040 --> 01:55:50,000
so

2837
01:55:50,000 --> 01:55:51,760
what if you really want to do load

2838
01:55:51,760 --> 01:55:55,360
balancing even when there is no ecmp

2839
01:55:55,360 --> 01:55:57,440
so that is one use case and there may be

2840
01:55:57,440 --> 01:55:59,520
some other use cases as well

2841
01:55:59,520 --> 01:56:02,320
next slide please

2842
01:56:02,320 --> 01:56:05,199
so this slides actually describe the

2843
01:56:05,199 --> 01:56:08,080
specific use cases uh use case

2844
01:56:08,080 --> 01:56:10,480
uh that uh that i just talked about but

2845
01:56:10,480 --> 01:56:12,800
i'm going to skip the

2846
01:56:12,800 --> 01:56:15,840
skip it next one please

2847
01:56:15,840 --> 01:56:17,040
so

2848
01:56:17,040 --> 01:56:21,360
this is n flag come to the picture

2849
01:56:21,360 --> 01:56:22,400
um

2850
01:56:22,400 --> 01:56:24,880
that flag is set when the prefix

2851
01:56:24,880 --> 01:56:28,400
identifies an advertising router so one

2852
01:56:28,400 --> 01:56:31,440
may think that uh what if you uh said

2853
01:56:31,440 --> 01:56:33,520
and flag on on the

2854
01:56:33,520 --> 01:56:36,000
those affiliate addresses then

2855
01:56:36,000 --> 01:56:39,280
um but that's not enough because um it

2856
01:56:39,280 --> 01:56:43,760
only the m flag only says that this

2857
01:56:43,760 --> 01:56:46,000
list address belongs to this router it

2858
01:56:46,000 --> 01:56:48,159
does not carry other semantics

2859
01:56:48,159 --> 01:56:50,719
we do need explicit uh

2860
01:56:50,719 --> 01:56:52,400
advertisement

2861
01:56:52,400 --> 01:56:54,880
advisement of the affiliation next slide

2862
01:56:54,880 --> 01:56:57,840
please

2863
01:56:58,000 --> 01:57:00,639
so there are four reasons i listed here

2864
01:57:00,639 --> 01:57:02,800
um

2865
01:57:02,800 --> 01:57:05,040
just because a node advertised two local

2866
01:57:05,040 --> 01:57:08,000
addresses a and b it does not mean that

2867
01:57:08,000 --> 01:57:10,880
they are always exchangeable as reason

2868
01:57:10,880 --> 01:57:12,560
number one and

2869
01:57:12,560 --> 01:57:14,480
number two is that affiliation may have

2870
01:57:14,480 --> 01:57:16,800
to be one way um

2871
01:57:16,800 --> 01:57:19,119
traffic that's destined to any cash

2872
01:57:19,119 --> 01:57:22,560
address may use an affiliated address

2873
01:57:22,560 --> 01:57:25,760
but the other way may not be desired or

2874
01:57:25,760 --> 01:57:28,960
should not be allowed at all for example

2875
01:57:28,960 --> 01:57:31,840
if your network allows a transit node to

2876
01:57:31,840 --> 01:57:33,760
change the anycast address to an

2877
01:57:33,760 --> 01:57:35,360
affiliated address

2878
01:57:35,360 --> 01:57:36,239
then

2879
01:57:36,239 --> 01:57:38,560
once that change is done you must not

2880
01:57:38,560 --> 01:57:40,400
change it back

2881
01:57:40,400 --> 01:57:43,440
to another affiliated address because uh

2882
01:57:43,440 --> 01:57:45,199
you could get in the routing loops that

2883
01:57:45,199 --> 01:57:47,440
way

2884
01:57:47,520 --> 01:57:49,360
then number three

2885
01:57:49,360 --> 01:57:51,440
a node may have a

2886
01:57:51,440 --> 01:57:54,000
different anycast addresses each with a

2887
01:57:54,000 --> 01:57:57,679
different set of affiliate addresses

2888
01:57:57,679 --> 01:57:59,679
and finding number four

2889
01:57:59,679 --> 01:58:02,320
even when other those addresses are

2890
01:58:02,320 --> 01:58:03,920
reachable

2891
01:58:03,920 --> 01:58:05,840
you may want to withdraw the affiliation

2892
01:58:05,840 --> 01:58:09,199
advertisement because you don't want the

2893
01:58:09,199 --> 01:58:12,560
uh the anycast address to be replaced

2894
01:58:12,560 --> 01:58:16,159
with a affiliate affiliated address

2895
01:58:16,159 --> 01:58:19,638
next slide please

2896
01:58:21,040 --> 01:58:23,599
so for that reason we want to advertise

2897
01:58:23,599 --> 01:58:26,080
the uh affiliation

2898
01:58:26,080 --> 01:58:30,000
um in igp we would do it in a

2899
01:58:30,000 --> 01:58:33,280
anycast affiliations affiliation sub tlv

2900
01:58:33,280 --> 01:58:35,040
that is attached to

2901
01:58:35,040 --> 01:58:38,119
either iss extended reachability tlv or

2902
01:58:38,119 --> 01:58:41,679
ospv2 xmd prefix tlb or

2903
01:58:41,679 --> 01:58:46,480
ospf 3 intra intel area prefix grv

2904
01:58:46,480 --> 01:58:49,840
that is for any castro's prefix

2905
01:58:49,840 --> 01:58:53,040
it basically includes a list of a fairly

2906
01:58:53,040 --> 01:58:55,360
affiliated addresses

2907
01:58:55,360 --> 01:58:58,560
um next slide please

2908
01:58:58,560 --> 01:59:02,080
that's for bgp so i'll just skip it it

2909
01:59:02,080 --> 01:59:04,880
can easily be done

2910
01:59:04,880 --> 01:59:06,080
so

2911
01:59:06,080 --> 01:59:09,119
next up next slide

2912
01:59:10,159 --> 01:59:12,000
to summarize

2913
01:59:12,000 --> 01:59:15,360
we want to advertise

2914
01:59:15,599 --> 01:59:17,679
address is affiliated with anycast

2915
01:59:17,679 --> 01:59:19,360
address

2916
01:59:19,360 --> 01:59:21,840
they can be easily done

2917
01:59:21,840 --> 01:59:26,679
i want to seek comments here

2918
01:59:32,239 --> 01:59:34,159
okay we still have a couple minutes uh

2919
01:59:34,159 --> 01:59:36,960
linda go ahead

2920
01:59:37,360 --> 01:59:40,560
jeffrey that's a good draft um

2921
01:59:40,560 --> 01:59:43,599
so um in our other drive the 5g edge

2922
01:59:43,599 --> 01:59:46,000
compute a drag will also

2923
01:59:46,000 --> 01:59:48,639
include this portion however we did a

2924
01:59:48,639 --> 01:59:50,480
slightly differently

2925
01:59:50,480 --> 01:59:53,040
we use the

2926
01:59:53,040 --> 01:59:54,960
flex algorithm to

2927
01:59:54,960 --> 01:59:57,440
identify the topology where

2928
01:59:57,440 --> 01:59:58,480
this

2929
01:59:58,480 --> 02:00:02,080
information is relevant applicable

2930
02:00:02,080 --> 02:00:03,280
because this

2931
02:00:03,280 --> 02:00:06,400
finding of any cache to the unicast

2932
02:00:06,400 --> 02:00:09,199
address doesn't have to be

2933
02:00:09,199 --> 02:00:10,159
touched

2934
02:00:10,159 --> 02:00:12,560
intercepted by every every node in the

2935
02:00:12,560 --> 02:00:14,159
in the domain

2936
02:00:14,159 --> 02:00:15,679
what do you think about that approach

2937
02:00:15,679 --> 02:00:18,239
maybe we can talk offline on that

2938
02:00:18,239 --> 02:00:20,800
i i guess we'll have to talk about it

2939
02:00:20,800 --> 02:00:23,199
offline because here in this room it's

2940
02:00:23,199 --> 02:00:24,080
very

2941
02:00:24,080 --> 02:00:28,000
difficult for me to to hear clearly

2942
02:00:28,000 --> 02:00:29,840
the audio uh

2943
02:00:29,840 --> 02:00:33,280
yeah it's it's not that

2944
02:00:33,280 --> 02:00:36,800
the volume is not enough but somehow

2945
02:00:36,800 --> 02:00:39,440
it's it's not very clear

2946
02:00:39,440 --> 02:00:41,199
but i think

2947
02:00:41,199 --> 02:00:42,480
we can follow up

2948
02:00:42,480 --> 02:00:45,040
offline and as long as everyone else can

2949
02:00:45,040 --> 02:00:47,920
hear it we should still

2950
02:00:47,920 --> 02:00:49,679
uh linda i muted you because you're

2951
02:00:49,679 --> 02:00:51,599
echoing back into the room

2952
02:00:51,599 --> 02:00:55,400
oh okay okay

2953
02:00:57,280 --> 02:00:58,480
ac

2954
02:00:58,480 --> 02:01:00,800
quick quick ac lineup cisco systems

2955
02:01:00,800 --> 02:01:03,920
quick clarifying question so the idea is

2956
02:01:03,920 --> 02:01:05,599
the ingress

2957
02:01:05,599 --> 02:01:08,560
would you would use the anycast to find

2958
02:01:08,560 --> 02:01:11,119
a service then use one of the affiliated

2959
02:01:11,119 --> 02:01:12,880
address or load balance between them is

2960
02:01:12,880 --> 02:01:14,560
that correct

2961
02:01:14,560 --> 02:01:17,040
uh correct that's one one of the use

2962
02:01:17,040 --> 02:01:19,920
cases we have identified but in theory

2963
02:01:19,920 --> 02:01:22,239
it could be used for any other purposes

2964
02:01:22,239 --> 02:01:23,360
where

2965
02:01:23,360 --> 02:01:24,560
you uh

2966
02:01:24,560 --> 02:01:28,000
this affiliation could give you

2967
02:01:28,000 --> 02:01:29,599
okay would you you wouldn't expect

2968
02:01:29,599 --> 02:01:32,400
everybody everybody in the past to use

2969
02:01:32,400 --> 02:01:34,480
it would you

2970
02:01:34,480 --> 02:01:36,879
like to see

2971
02:01:40,880 --> 02:01:42,000
that would be i mean it'd be kind of

2972
02:01:42,000 --> 02:01:44,239
complex i guess i guess to you know do

2973
02:01:44,239 --> 02:01:46,480
that in the data plane if everybody had

2974
02:01:46,480 --> 02:01:47,520
to

2975
02:01:47,520 --> 02:01:48,400
keep

2976
02:01:48,400 --> 02:01:50,239
if people other than the ingress had to

2977
02:01:50,239 --> 02:01:52,800
keep the uh the association the mapping

2978
02:01:52,800 --> 02:01:54,400
anyway

2979
02:01:54,400 --> 02:01:57,920
um so because uh it's igp

2980
02:01:57,920 --> 02:02:00,000
and you have once you advertise that

2981
02:02:00,000 --> 02:02:02,320
information it's everywhere anyway so in

2982
02:02:02,320 --> 02:02:05,280
theory a transit rather could do could

2983
02:02:05,280 --> 02:02:07,440
change that

2984
02:02:07,440 --> 02:02:09,599
if an operator or

2985
02:02:09,599 --> 02:02:11,199
allows that

2986
02:02:11,199 --> 02:02:13,920
indeed if you really do that then

2987
02:02:13,920 --> 02:02:16,800
um once you change it to a

2988
02:02:16,800 --> 02:02:18,719
affiliated address you should not change

2989
02:02:18,719 --> 02:02:19,679
it back

2990
02:02:19,679 --> 02:02:21,679
that's one of the reasons i mentioned

2991
02:02:21,679 --> 02:02:24,000
earlier if you change back and forth you

2992
02:02:24,000 --> 02:02:26,159
may get into routing loops

2993
02:02:26,159 --> 02:02:28,320
yeah yep okay

2994
02:02:28,320 --> 02:02:30,320
oh how about you last you want to take

2995
02:02:30,320 --> 02:02:33,639
the last comment

2996
02:02:35,520 --> 02:02:39,040
jeff i so the igps already have the

2997
02:02:39,040 --> 02:02:41,679
what's needed to identify any cast

2998
02:02:41,679 --> 02:02:43,199
advertisements and unicast

2999
02:02:43,199 --> 02:02:45,840
advertisements and the sources of those

3000
02:02:45,840 --> 02:02:48,000
advertisements

3001
02:02:48,000 --> 02:02:49,280
so i don't think we need further

3002
02:02:49,280 --> 02:02:51,840
extensions there what i don't understand

3003
02:02:51,840 --> 02:02:53,679
very clearly

3004
02:02:53,679 --> 02:02:55,920
is the need for the mapping of a

3005
02:02:55,920 --> 02:02:58,239
particular anycast address to a

3006
02:02:58,239 --> 02:03:00,880
particular unicast address if you could

3007
02:03:00,880 --> 02:03:02,639
clarify that in

3008
02:03:02,639 --> 02:03:04,639
either on the list or an update to the

3009
02:03:04,639 --> 02:03:05,760
draft

3010
02:03:05,760 --> 02:03:08,159
that would be helpful

3011
02:03:08,159 --> 02:03:09,199
um

3012
02:03:09,199 --> 02:03:13,280
so in on slide number three i talked

3013
02:03:13,280 --> 02:03:16,880
about the isis ended and flag that is

3014
02:03:16,880 --> 02:03:18,239
not enough

3015
02:03:18,239 --> 02:03:21,119
um i don't know if there are other ways

3016
02:03:21,119 --> 02:03:24,480
to uh advertise the affiliation yeah

3017
02:03:24,480 --> 02:03:26,880
yeah we also have we now have a sorry to

3018
02:03:26,880 --> 02:03:29,920
interrupt we have an a flag as well

3019
02:03:29,920 --> 02:03:31,679
that's that's fairly new

3020
02:03:31,679 --> 02:03:32,480
so

3021
02:03:32,480 --> 02:03:34,719
i'll look into that i'll follow up okay

3022
02:03:34,719 --> 02:03:36,639
great here

3023
02:03:36,639 --> 02:03:38,880
okay

3024
02:03:39,599 --> 02:03:43,840
that's a proposed draft right

3025
02:03:46,960 --> 02:03:49,040
a draft

3026
02:03:49,040 --> 02:03:52,639
so i think you know it's going to happen

3027
02:03:52,639 --> 02:03:53,920
yeah okay

3028
02:03:53,920 --> 02:03:55,199
so

3029
02:03:55,199 --> 02:03:57,520
there will be an a bit uh

3030
02:03:57,520 --> 02:04:00,800
jeffrey will uh we're not jeffrey anyway

3031
02:04:00,800 --> 02:04:02,880
yeah okay so that's it we ran out of

3032
02:04:02,880 --> 02:04:05,760
time we're over time uh but we're the

3033
02:04:05,760 --> 02:04:07,760
last people i guess that's okay to run a

3034
02:04:07,760 --> 02:04:09,679
couple minutes over

3035
02:04:09,679 --> 02:04:13,760
thanks everybody for coming and um

3036
02:04:13,760 --> 02:04:14,560
uh

3037
02:04:14,560 --> 02:04:16,800
we'll maybe next time we'll keep 10

3038
02:04:16,800 --> 02:04:18,400
minutes at the end instead of five

3039
02:04:18,400 --> 02:04:19,440
minutes

3040
02:04:19,440 --> 02:04:22,320
since we've been growing out again

3041
02:04:22,320 --> 02:04:23,599
and hopefully see

3042
02:04:23,599 --> 02:04:25,840
everybody in philadelphia philly or

3043
02:04:25,840 --> 02:04:29,119
pennsylvania yeah

3044
02:04:29,199 --> 02:04:30,480
yeah thank you

3045
02:04:30,480 --> 02:04:32,960
thanks everybody and thanks jeff uh for

3046
02:04:32,960 --> 02:04:35,119
managing the local cue and sharing the

3047
02:04:35,119 --> 02:04:37,040
local slides

3048
02:04:37,040 --> 02:04:39,199
yeah thanks jeff

3049
02:04:39,199 --> 02:04:43,440
pleasure see you all in

3050
02:04:43,440 --> 02:04:47,400
philadelphia bye

3051
02:05:04,000 --> 02:05:07,000
oh

3052
02:05:07,599 --> 02:05:10,599
perfect

