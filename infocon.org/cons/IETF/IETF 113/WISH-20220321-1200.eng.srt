1
00:00:12,400 --> 00:00:15,400
so

2
00:00:20,480 --> 00:00:23,439
good morning according to my time uh

3
00:00:23,439 --> 00:00:25,359
clock it's time to start but i think

4
00:00:25,359 --> 00:00:26,800
we're going to give people a couple of

5
00:00:26,800 --> 00:00:29,039
minutes

6
00:00:29,039 --> 00:00:30,640
we have a pretty light agenda as well we

7
00:00:30,640 --> 00:00:31,599
should be able to get all the way

8
00:00:31,599 --> 00:00:35,320
through it regardless

9
00:00:53,360 --> 00:00:56,360
um

10
00:01:58,799 --> 00:02:01,119
hi ted i like your yellow mask it's very

11
00:02:01,119 --> 00:02:04,119
distinctive

12
00:02:09,199 --> 00:02:11,920
hi sean uh they were giving them out at

13
00:02:11,920 --> 00:02:13,440
the registration and i have a whole

14
00:02:13,440 --> 00:02:15,520
bunch of very boring white ones

15
00:02:15,520 --> 00:02:18,400
but uh it's very hard not to

16
00:02:18,400 --> 00:02:20,319
fall to the allure of bright and shiny

17
00:02:20,319 --> 00:02:22,239
colors

18
00:02:22,239 --> 00:02:23,680
the advantage of being remote though is

19
00:02:23,680 --> 00:02:24,640
you get to

20
00:02:24,640 --> 00:02:28,238
go and just show off your beard instead

21
00:02:31,040 --> 00:02:33,930
sure murray jump in

22
00:02:33,930 --> 00:02:37,059
[Applause]

23
00:02:41,519 --> 00:02:43,200
still pretty faint i can hear you but

24
00:02:43,200 --> 00:02:44,640
it's pretty

25
00:02:44,640 --> 00:02:46,000
okay

26
00:02:46,000 --> 00:02:47,599
same problem as before thanks i'll keep

27
00:02:47,599 --> 00:02:51,000
working on it

28
00:03:00,159 --> 00:03:01,360
all right nails unless you got any

29
00:03:01,360 --> 00:03:03,040
objection we'll get going here in like

30
00:03:03,040 --> 00:03:05,840
two minutes

31
00:03:36,239 --> 00:03:39,239
so

32
00:03:50,080 --> 00:03:53,200
next again how's that

33
00:03:54,879 --> 00:03:56,480
i think that's better

34
00:03:56,480 --> 00:03:57,920
you think it's better let me try one

35
00:03:57,920 --> 00:04:01,200
more turn up a little more

36
00:04:01,200 --> 00:04:03,920
there how's that

37
00:04:04,560 --> 00:04:06,159
it's more much

38
00:04:06,159 --> 00:04:07,040
more

39
00:04:07,040 --> 00:04:08,239
louder

40
00:04:08,239 --> 00:04:11,640
all right thanks

41
00:04:41,120 --> 00:04:43,040
does not want to seem to let me share

42
00:04:43,040 --> 00:04:45,199
the slides with you the

43
00:04:45,199 --> 00:04:46,720
share of pre-reloaded slides so we're

44
00:04:46,720 --> 00:04:50,240
going to have a little screen on

45
00:04:53,199 --> 00:04:55,600
all right i'll do this

46
00:04:55,600 --> 00:04:57,280
i don't want to do that that's a bad

47
00:04:57,280 --> 00:04:58,800
idea

48
00:04:58,800 --> 00:05:01,600
let's share this

49
00:05:02,479 --> 00:05:03,360
and

50
00:05:03,360 --> 00:05:05,520
hopefully

51
00:05:05,520 --> 00:05:09,960
everyone sees this now

52
00:05:10,080 --> 00:05:11,600
all right

53
00:05:11,600 --> 00:05:14,240
probably time

54
00:05:15,919 --> 00:05:18,720
so welcome to wish

55
00:05:18,720 --> 00:05:20,400
um please make sure your video is turned

56
00:05:20,400 --> 00:05:21,199
off

57
00:05:21,199 --> 00:05:23,280
um unless you're speaking as well your

58
00:05:23,280 --> 00:05:25,360
microphone a bunch of links for the

59
00:05:25,360 --> 00:05:26,560
media co

60
00:05:26,560 --> 00:05:30,240
um how to get in the audio panel java

61
00:05:30,240 --> 00:05:31,759
and the minutes which is also the

62
00:05:31,759 --> 00:05:33,199
note-taking

63
00:05:33,199 --> 00:05:34,880
mechanism as well

64
00:05:34,880 --> 00:05:36,880
um i believe there was a qr code that

65
00:05:36,880 --> 00:05:38,880
comes at the beginning when you came in

66
00:05:38,880 --> 00:05:41,039
the room which you need to scan

67
00:05:41,039 --> 00:05:43,039
um to make sure that you get added to

68
00:05:43,039 --> 00:05:44,960
the blue sheets

69
00:05:44,960 --> 00:05:47,280
it saves everybody from having to worry

70
00:05:47,280 --> 00:05:50,840
about cleaning pens

71
00:05:53,440 --> 00:05:56,880
um welcome to wish

72
00:05:57,039 --> 00:05:59,680
neils and i are the chairs

73
00:05:59,680 --> 00:06:02,080
hello

74
00:06:03,120 --> 00:06:05,520
this is only the second session of the

75
00:06:05,520 --> 00:06:07,440
ietf meeting that you may have been at

76
00:06:07,440 --> 00:06:08,800
uh know well

77
00:06:08,800 --> 00:06:10,639
remind you of the various policies that

78
00:06:10,639 --> 00:06:12,080
you um

79
00:06:12,080 --> 00:06:14,400
agree to

80
00:06:14,400 --> 00:06:16,400
adhere yourself to uh because you're

81
00:06:16,400 --> 00:06:17,600
participating

82
00:06:17,600 --> 00:06:20,880
um lots of things in here lots of ipr

83
00:06:20,880 --> 00:06:22,160
policy

84
00:06:22,160 --> 00:06:24,240
um how to work in the group any

85
00:06:24,240 --> 00:06:26,960
harassment code of content copyright

86
00:06:26,960 --> 00:06:29,520
patents etc if you have any questions

87
00:06:29,520 --> 00:06:30,400
um

88
00:06:30,400 --> 00:06:31,840
we can answer them other people in the

89
00:06:31,840 --> 00:06:34,560
room can answer them if you see or feel

90
00:06:34,560 --> 00:06:36,479
that anything's being done that's out of

91
00:06:36,479 --> 00:06:37,759
line with those

92
00:06:37,759 --> 00:06:41,680
please contact the obods team

93
00:06:43,600 --> 00:06:45,360
and this is kind of one that we wanted

94
00:06:45,360 --> 00:06:47,039
to highlight which out of contact is

95
00:06:47,039 --> 00:06:48,319
basically try to treat everybody with

96
00:06:48,319 --> 00:06:49,440
respect

97
00:06:49,440 --> 00:06:52,080
try to speak as slowly as possible

98
00:06:52,080 --> 00:06:53,840
trying to limit the use of slang i feel

99
00:06:53,840 --> 00:06:55,759
like they put that in just for me

100
00:06:55,759 --> 00:06:58,080
dispute ideas um by using a reasonable

101
00:06:58,080 --> 00:06:59,120
argument

102
00:06:59,120 --> 00:07:01,199
um use your best engineering judgment

103
00:07:01,199 --> 00:07:02,720
find the best solution for the whole the

104
00:07:02,720 --> 00:07:03,680
internet

105
00:07:03,680 --> 00:07:07,280
and i contribute to the ongoing work

106
00:07:08,400 --> 00:07:09,840
and our agenda is pretty light tonight

107
00:07:09,840 --> 00:07:10,880
so we're gonna go through the venus

108
00:07:10,880 --> 00:07:11,840
trivia

109
00:07:11,840 --> 00:07:13,759
um we have one draft and we have some

110
00:07:13,759 --> 00:07:15,759
implementation experience that uh got

111
00:07:15,759 --> 00:07:17,599
bumped from the last time and then we'll

112
00:07:17,599 --> 00:07:19,039
have some open time

113
00:07:19,039 --> 00:07:20,720
i don't know if we're gonna need 30

114
00:07:20,720 --> 00:07:22,319
minutes to talk about the draft because

115
00:07:22,319 --> 00:07:24,639
there's only one open

116
00:07:24,639 --> 00:07:26,880
uh pull request and two issues and so we

117
00:07:26,880 --> 00:07:28,400
may be able to close that out and

118
00:07:28,400 --> 00:07:30,160
actually go for working group last call

119
00:07:30,160 --> 00:07:31,680
with this uh

120
00:07:31,680 --> 00:07:34,240
um with this one draft

121
00:07:34,240 --> 00:07:37,440
and that's really it so

122
00:07:37,440 --> 00:07:42,199
i wonder is sergio available

123
00:07:46,720 --> 00:07:48,639
go ahead

124
00:07:48,639 --> 00:07:50,160
hello

125
00:07:50,160 --> 00:07:52,240
yeah i think that the my party is going

126
00:07:52,240 --> 00:07:55,120
to be fast but we can spend later more

127
00:07:55,120 --> 00:07:59,479
time just thinking about the steps

128
00:08:00,800 --> 00:08:05,479
so you can go to the first slide

129
00:08:12,160 --> 00:08:13,840
say again

130
00:08:13,840 --> 00:08:17,520
that can you go to the first place

131
00:08:20,400 --> 00:08:23,799
well i can

132
00:08:28,960 --> 00:08:31,960
okay

133
00:08:43,760 --> 00:08:46,560
no this is not

134
00:08:51,200 --> 00:08:55,160
i don't know how to do it

135
00:09:04,160 --> 00:09:05,839
because you shared it it should be

136
00:09:05,839 --> 00:09:07,040
working

137
00:09:07,040 --> 00:09:09,200
yeah but in the index ready to be shared

138
00:09:09,200 --> 00:09:11,680
there is only the we implemented

139
00:09:11,680 --> 00:09:13,839
with implementation experience in janus

140
00:09:13,839 --> 00:09:17,040
so there is no other

141
00:09:17,120 --> 00:09:18,560
deck there

142
00:09:18,560 --> 00:09:21,560
great

143
00:10:06,079 --> 00:10:09,079
wow

144
00:10:23,600 --> 00:10:24,720
can you shoot

145
00:10:24,720 --> 00:10:26,240
the slides to me again via email and i

146
00:10:26,240 --> 00:10:29,200
can see if i can get about

147
00:10:37,600 --> 00:10:39,920
yeah cause those came through oh unless

148
00:10:39,920 --> 00:10:43,279
you updated those

149
00:10:43,519 --> 00:10:44,320
i

150
00:10:44,320 --> 00:10:46,480
updated it in the

151
00:10:46,480 --> 00:10:49,200
in the google doc that you suddenly

152
00:10:49,200 --> 00:10:51,360
yep and then i didn't upload the new

153
00:10:51,360 --> 00:10:53,519
version so that would be a problem

154
00:10:53,519 --> 00:10:55,839
let me go do that now

155
00:10:55,839 --> 00:10:59,399
apologies everyone

156
00:11:32,480 --> 00:11:35,480
um

157
00:12:49,120 --> 00:12:52,120
um

158
00:13:05,440 --> 00:13:07,680
see that i have restored the

159
00:13:07,680 --> 00:13:09,600
the slides because it seems that you

160
00:13:09,600 --> 00:13:11,279
have ever written my

161
00:13:11,279 --> 00:13:13,839
my slides but i have put it again in in

162
00:13:13,839 --> 00:13:15,920
the

163
00:13:15,920 --> 00:13:18,959
in the slide deck

164
00:13:18,959 --> 00:13:21,839
on google drive

165
00:13:22,320 --> 00:13:25,200
so this should be there

166
00:13:29,519 --> 00:13:31,760
yes this is not

167
00:13:31,760 --> 00:13:33,200
true

168
00:13:33,200 --> 00:13:36,480
you want to share that again or

169
00:13:36,959 --> 00:13:39,199
should i

170
00:13:46,399 --> 00:13:49,839
can you share them while i upload them

171
00:13:50,959 --> 00:13:53,959
yep

172
00:14:08,160 --> 00:14:11,160
uh

173
00:14:24,639 --> 00:14:26,079
turns out i can't i would have to

174
00:14:26,079 --> 00:14:29,479
restart chrome

175
00:14:30,800 --> 00:14:34,439
sorry about that

176
00:15:16,639 --> 00:15:19,639
um

177
00:15:48,560 --> 00:15:49,759
no still

178
00:15:49,759 --> 00:15:53,000
not there

179
00:16:11,839 --> 00:16:14,839
okay

180
00:16:27,600 --> 00:16:29,600
yes the the slides are rotated in the

181
00:16:29,600 --> 00:16:30,959
data tracker

182
00:16:30,959 --> 00:16:32,959
and also you go to the

183
00:16:32,959 --> 00:16:36,000
to emitting materials in the slides

184
00:16:36,000 --> 00:16:37,279
then they

185
00:16:37,279 --> 00:16:41,079
they look at it also

186
00:17:45,440 --> 00:17:46,559
yeah

187
00:17:46,559 --> 00:17:48,480
this is it finally

188
00:17:48,480 --> 00:17:51,200
about that folks

189
00:17:51,200 --> 00:17:52,559
okay so

190
00:17:52,559 --> 00:17:54,000
um

191
00:17:54,000 --> 00:17:55,760
this is the list of changing between the

192
00:17:55,760 --> 00:17:57,360
the previous version of the withdraft

193
00:17:57,360 --> 00:18:00,400
and the on the latest one

194
00:18:00,400 --> 00:18:04,160
there is one minor change related to the

195
00:18:04,160 --> 00:18:07,760
to the linear relation type of

196
00:18:07,760 --> 00:18:09,280
that we have in the draft that will

197
00:18:09,280 --> 00:18:11,600
probably has the

198
00:18:11,600 --> 00:18:13,840
urn of

199
00:18:13,840 --> 00:18:17,039
the urine itf pattern sweep and we have

200
00:18:17,039 --> 00:18:20,320
renamed it yesterday server

201
00:18:20,320 --> 00:18:22,240
and the main difference between the two

202
00:18:22,240 --> 00:18:23,840
drafts is the

203
00:18:23,840 --> 00:18:26,000
the the last open point that we have for

204
00:18:26,000 --> 00:18:29,520
the draft that was how to handle a

205
00:18:29,520 --> 00:18:31,679
patch request that could be

206
00:18:31,679 --> 00:18:33,600
out of order before

207
00:18:33,600 --> 00:18:35,919
between uh a patch required that was

208
00:18:35,919 --> 00:18:37,280
doing a

209
00:18:37,280 --> 00:18:41,440
uh i'm sending new istrical candidates

210
00:18:41,440 --> 00:18:43,440
from the

211
00:18:43,440 --> 00:18:46,400
one that was doing a restart

212
00:18:46,400 --> 00:18:47,679
and what happened when they were

213
00:18:47,679 --> 00:18:50,000
received out of order and how to

214
00:18:50,000 --> 00:18:51,840
to solve that

215
00:18:51,840 --> 00:18:53,039
the problem was

216
00:18:53,039 --> 00:18:54,720
presented last

217
00:18:54,720 --> 00:18:57,520
in the last ietf meeting and it was

218
00:18:57,520 --> 00:19:00,320
agreed that we were going to go

219
00:19:00,320 --> 00:19:02,720
we were going to implement it with a

220
00:19:02,720 --> 00:19:06,160
with the http entity tag

221
00:19:06,160 --> 00:19:08,720
and that's why this

222
00:19:08,720 --> 00:19:11,440
a

223
00:19:11,440 --> 00:19:12,320
this

224
00:19:12,320 --> 00:19:14,240
the patch the the pull request that has

225
00:19:14,240 --> 00:19:16,080
been already merged into the draft and

226
00:19:16,080 --> 00:19:18,000
made available in the in the

227
00:19:18,000 --> 00:19:20,000
in the second version is

228
00:19:20,000 --> 00:19:21,440
is covering

229
00:19:21,440 --> 00:19:22,400
that

230
00:19:22,400 --> 00:19:24,880
what the draft the

231
00:19:24,880 --> 00:19:26,880
the changes have done is that now we are

232
00:19:26,880 --> 00:19:28,320
associating a

233
00:19:28,320 --> 00:19:29,600
a unique

234
00:19:29,600 --> 00:19:32,320
a value of an entity tax to each ice

235
00:19:32,320 --> 00:19:34,240
session

236
00:19:34,240 --> 00:19:37,360
this entity tax is an opec opaque value

237
00:19:37,360 --> 00:19:39,200
so meaning that the

238
00:19:39,200 --> 00:19:41,919
if the the whipping the

239
00:19:41,919 --> 00:19:44,080
the clients has not

240
00:19:44,080 --> 00:19:46,080
uh have to take any

241
00:19:46,080 --> 00:19:48,000
kind of

242
00:19:48,000 --> 00:19:50,720
or try to get any semantic semantical

243
00:19:50,720 --> 00:19:52,960
value of it it's an

244
00:19:52,960 --> 00:19:54,400
opaque value and

245
00:19:54,400 --> 00:19:57,600
it is up to the server how to um how to

246
00:19:57,600 --> 00:19:59,840
choose the value and how it is generated

247
00:19:59,840 --> 00:20:02,240
and it could be just an auto grant

248
00:20:02,240 --> 00:20:06,000
counter and uuid or for example the i

249
00:20:06,000 --> 00:20:07,360
user name

250
00:20:07,360 --> 00:20:09,600
and it is updo to the to the server how

251
00:20:09,600 --> 00:20:13,039
to to implement it and how to use it

252
00:20:13,039 --> 00:20:14,159
and

253
00:20:14,159 --> 00:20:17,120
the entity value entity tag value must

254
00:20:17,120 --> 00:20:22,080
be returned both in the in the 201

255
00:20:22,080 --> 00:20:24,000
created response to the original post

256
00:20:24,000 --> 00:20:25,200
request

257
00:20:25,200 --> 00:20:27,679
or in any 200 okay

258
00:20:27,679 --> 00:20:30,080
response to a patch request that it is

259
00:20:30,080 --> 00:20:32,000
triggering i restart

260
00:20:32,000 --> 00:20:34,320
so this means that every time the there

261
00:20:34,320 --> 00:20:36,159
is a new ice session

262
00:20:36,159 --> 00:20:38,640
because it is either the initial one

263
00:20:38,640 --> 00:20:42,000
or the um or because a new ice restart

264
00:20:42,000 --> 00:20:43,039
is triggered

265
00:20:43,039 --> 00:20:44,880
the entity

266
00:20:44,880 --> 00:20:47,360
value has to be changed

267
00:20:47,360 --> 00:20:50,240
and report it back to the client

268
00:20:50,240 --> 00:20:53,120
then the the patch request for for

269
00:20:53,120 --> 00:20:55,200
trickle eyes

270
00:20:55,200 --> 00:20:57,520
must contain an if match header with the

271
00:20:57,520 --> 00:20:59,919
last known value of the entity

272
00:20:59,919 --> 00:21:01,360
tag value

273
00:21:01,360 --> 00:21:04,799
and then the the server can check if the

274
00:21:04,799 --> 00:21:07,760
the entity the identity tag value that

275
00:21:07,760 --> 00:21:10,320
it is in the if match header

276
00:21:10,320 --> 00:21:13,520
and is the same one that the one that

277
00:21:13,520 --> 00:21:15,520
that he has for the

278
00:21:15,520 --> 00:21:17,039
for the eye session

279
00:21:17,039 --> 00:21:18,880
and if it not

280
00:21:18,880 --> 00:21:21,840
if it doesn't match it means that the

281
00:21:21,840 --> 00:21:23,440
the

282
00:21:23,440 --> 00:21:26,320
the patch request is out of order

283
00:21:26,320 --> 00:21:28,880
and then it must reject it with a

284
00:21:28,880 --> 00:21:32,000
four one two a precondition fail as in

285
00:21:32,000 --> 00:21:34,080
the as specified by the

286
00:21:34,080 --> 00:21:37,360
in the itachi rpc

287
00:21:37,360 --> 00:21:40,480
and then the pass requests for isostar

288
00:21:40,480 --> 00:21:43,120
must contain an if matched value of an

289
00:21:43,120 --> 00:21:46,000
aesthetic as there is meaning that

290
00:21:46,000 --> 00:21:47,280
it in

291
00:21:47,280 --> 00:21:49,520
regard that the ice restart must happen

292
00:21:49,520 --> 00:21:52,159
regardless of which is the

293
00:21:52,159 --> 00:21:54,880
the value of the entity tax that means

294
00:21:54,880 --> 00:21:57,200
because you want to trigger the

295
00:21:57,200 --> 00:22:00,000
restart always

296
00:22:00,000 --> 00:22:00,880
and

297
00:22:00,880 --> 00:22:03,760
also i this is the one thing that we

298
00:22:03,760 --> 00:22:05,600
should check i think that

299
00:22:05,600 --> 00:22:09,440
that it is valid according to the http

300
00:22:09,440 --> 00:22:13,360
um specs is that we should only

301
00:22:13,360 --> 00:22:15,120
need to

302
00:22:15,120 --> 00:22:18,640
send or should only the the

303
00:22:18,640 --> 00:22:20,559
the with clients should only send the

304
00:22:20,559 --> 00:22:23,520
ifmatch header for the pass request and

305
00:22:23,520 --> 00:22:25,520
not for the other

306
00:22:25,520 --> 00:22:27,520
requests that are not changing the

307
00:22:27,520 --> 00:22:30,320
the i session for example in the http

308
00:22:30,320 --> 00:22:32,720
delete

309
00:22:32,720 --> 00:22:33,600
and

310
00:22:33,600 --> 00:22:35,919
also as a consequence of the

311
00:22:35,919 --> 00:22:37,039
that the

312
00:22:37,039 --> 00:22:38,720
patch request for

313
00:22:38,720 --> 00:22:42,720
sending ice candidates must contain the

314
00:22:42,720 --> 00:22:45,200
the entity attack of the

315
00:22:45,200 --> 00:22:47,280
of the investors then the client must

316
00:22:47,280 --> 00:22:50,320
buffer all i scan the ice candidates

317
00:22:50,320 --> 00:22:51,679
that are gathered

318
00:22:51,679 --> 00:22:54,799
after sending a nice restart until until

319
00:22:54,799 --> 00:22:57,360
it receives the delay the updated entity

320
00:22:57,360 --> 00:22:58,799
tag

321
00:22:58,799 --> 00:23:00,720
in the the response

322
00:23:00,720 --> 00:23:02,240
this is already something that we need

323
00:23:02,240 --> 00:23:04,240
to do anyway in the initial request

324
00:23:04,240 --> 00:23:07,760
because you cannot send a

325
00:23:07,760 --> 00:23:09,039
scan the date

326
00:23:09,039 --> 00:23:10,480
until you receive the

327
00:23:10,480 --> 00:23:12,320
the response

328
00:23:12,320 --> 00:23:14,640
to the to the post request

329
00:23:14,640 --> 00:23:17,360
so this is something that it was already

330
00:23:17,360 --> 00:23:20,400
uh requested or it was already required

331
00:23:20,400 --> 00:23:23,760
to be done before and on the original

332
00:23:23,760 --> 00:23:25,200
and

333
00:23:25,200 --> 00:23:26,880
when i started the session and now we

334
00:23:26,880 --> 00:23:28,480
are also

335
00:23:28,480 --> 00:23:31,039
having to do it when there is another

336
00:23:31,039 --> 00:23:33,840
start on going

337
00:23:33,919 --> 00:23:36,000
so

338
00:23:36,000 --> 00:23:37,200
we have two people in the queue i don't

339
00:23:37,200 --> 00:23:39,120
know do you guys want to uh

340
00:23:39,120 --> 00:23:40,720
do your points now or do you want to

341
00:23:40,720 --> 00:23:43,039
wait till the end

342
00:23:43,039 --> 00:23:46,240
i have ended so it's fine for days for

343
00:23:46,240 --> 00:23:47,600
them to

344
00:23:47,600 --> 00:23:50,640
so i'm fine to go on the queue

345
00:23:50,640 --> 00:23:52,080
all right

346
00:23:52,080 --> 00:23:54,559
julius

347
00:23:57,279 --> 00:23:59,760
hello can you hear me

348
00:23:59,760 --> 00:24:01,039
okay cool

349
00:24:01,039 --> 00:24:01,919
um

350
00:24:01,919 --> 00:24:04,640
so could you please clarify and i'd like

351
00:24:04,640 --> 00:24:08,240
to see it clarified in the draft how the

352
00:24:08,240 --> 00:24:11,039
server determines whether an sdp

353
00:24:11,039 --> 00:24:15,520
fragment is a restart or a

354
00:24:15,520 --> 00:24:16,840
or a

355
00:24:16,840 --> 00:24:19,760
candidate does it just look at the if

356
00:24:19,760 --> 00:24:21,039
match header

357
00:24:21,039 --> 00:24:24,559
or does it examine the sdp and look at

358
00:24:24,559 --> 00:24:27,760
the ufrag value or does it do both

359
00:24:27,760 --> 00:24:30,880
it this has not changed that how is that

360
00:24:30,880 --> 00:24:32,799
and it is a

361
00:24:32,799 --> 00:24:35,120
specified in the rfc for the ice

362
00:24:35,120 --> 00:24:36,799
fragment and you have to check the

363
00:24:36,799 --> 00:24:38,880
username and password

364
00:24:38,880 --> 00:24:40,720
to see if they have changed between the

365
00:24:40,720 --> 00:24:42,400
one that you have and the one that it is

366
00:24:42,400 --> 00:24:43,840
say

367
00:24:43,840 --> 00:24:45,760
um

368
00:24:45,760 --> 00:24:47,760
for the the the one that you have for

369
00:24:47,760 --> 00:24:50,640
the client or not so this is this is

370
00:24:50,640 --> 00:24:52,480
according to i don't recall the the

371
00:24:52,480 --> 00:24:53,919
number of their facebook

372
00:24:53,919 --> 00:24:55,600
and you have to you have to check the

373
00:24:55,600 --> 00:24:58,240
sdp fragment and is it not enough to

374
00:24:58,240 --> 00:25:01,600
check the if match value for an asterisk

375
00:25:01,600 --> 00:25:04,400
uh you shouldn't i mean let's let's keep

376
00:25:04,400 --> 00:25:06,240
things where they should be i mean

377
00:25:06,240 --> 00:25:08,880
probably probably it will work

378
00:25:08,880 --> 00:25:09,840
but

379
00:25:09,840 --> 00:25:11,279
but

380
00:25:11,279 --> 00:25:12,880
the

381
00:25:12,880 --> 00:25:14,240
they are different mechanisms for

382
00:25:14,240 --> 00:25:15,760
different things

383
00:25:15,760 --> 00:25:18,480
so i think that an implementation should

384
00:25:18,480 --> 00:25:21,200
check the and the

385
00:25:21,200 --> 00:25:22,720
the

386
00:25:22,720 --> 00:25:26,159
the i say the ice username fastball and

387
00:25:26,159 --> 00:25:28,720
password to detect the that it is an

388
00:25:28,720 --> 00:25:31,600
irrestart okay okay

389
00:25:31,600 --> 00:25:32,960
just because

390
00:25:32,960 --> 00:25:36,080
they can have different semantics so

391
00:25:36,080 --> 00:25:40,080
we must be modified in the future and

392
00:25:40,080 --> 00:25:42,240
okay and i will have another comment

393
00:25:42,240 --> 00:25:44,240
about the document as a whole so i'll go

394
00:25:44,240 --> 00:25:46,240
back to the end of the queue now

395
00:25:46,240 --> 00:25:48,240
okay

396
00:25:48,240 --> 00:25:52,000
jonathan do you want to hop up thanks

397
00:25:54,000 --> 00:25:56,159
yeah jonathan lennox um i think the

398
00:25:56,159 --> 00:25:58,080
other probably

399
00:25:58,080 --> 00:25:59,279
another point you want to say is you

400
00:25:59,279 --> 00:26:00,880
can't start a nice restart while an

401
00:26:00,880 --> 00:26:02,640
existing ice restart is pending

402
00:26:02,640 --> 00:26:03,760
basically you can't have more than one

403
00:26:03,760 --> 00:26:05,440
ice restart in flight

404
00:26:05,440 --> 00:26:06,799
at a time

405
00:26:06,799 --> 00:26:08,159
that's probably a requirement you want

406
00:26:08,159 --> 00:26:09,520
otherwise things get confusing as to

407
00:26:09,520 --> 00:26:11,039
which one actually

408
00:26:11,039 --> 00:26:12,880
is the current one

409
00:26:12,880 --> 00:26:13,679
um

410
00:26:13,679 --> 00:26:16,240
i've seen this like

411
00:26:16,240 --> 00:26:17,520
nobody would probably do this on purpose

412
00:26:17,520 --> 00:26:19,520
but i've seen this like when a

413
00:26:19,520 --> 00:26:21,120
device's network is flapping and it just

414
00:26:21,120 --> 00:26:22,320
thinks oh i have to do another ice

415
00:26:22,320 --> 00:26:23,679
restart right away

416
00:26:23,679 --> 00:26:24,400
so

417
00:26:24,400 --> 00:26:26,159
you probably want to say

418
00:26:26,159 --> 00:26:27,760
you know wait till the previous ice you

419
00:26:27,760 --> 00:26:29,200
get a response to the previous i3 start

420
00:26:29,200 --> 00:26:31,039
before you start another one

421
00:26:31,039 --> 00:26:33,360
yeah but what will happen if you're not

422
00:26:33,360 --> 00:26:37,158
done one question

423
00:26:38,720 --> 00:26:39,760
that's

424
00:26:39,760 --> 00:26:40,960
that's when

425
00:26:40,960 --> 00:26:44,720
what will happen if uh

426
00:26:46,080 --> 00:26:48,559
if for example you have a flagging

427
00:26:48,559 --> 00:26:50,080
network as you said and the previous

428
00:26:50,080 --> 00:26:52,080
restart is not completed so you have to

429
00:26:52,080 --> 00:26:54,000
wait for the timeout

430
00:26:54,000 --> 00:26:57,279
of the http request

431
00:26:58,799 --> 00:27:00,320
i will never

432
00:27:00,320 --> 00:27:02,480
so

433
00:27:02,799 --> 00:27:04,480
i mean maybe or either that or you

434
00:27:04,480 --> 00:27:05,760
figure out how to handle it the problem

435
00:27:05,760 --> 00:27:06,799
is that

436
00:27:06,799 --> 00:27:08,159
if you're if you've got more than one

437
00:27:08,159 --> 00:27:10,480
request outstanding at a time

438
00:27:10,480 --> 00:27:13,200
you're not sure which one actually

439
00:27:13,200 --> 00:27:14,080
you know

440
00:27:14,080 --> 00:27:16,960
is the current state

441
00:27:16,960 --> 00:27:18,799
yeah but i but

442
00:27:18,799 --> 00:27:20,640
for example i would say that the ice

443
00:27:20,640 --> 00:27:22,640
restart

444
00:27:22,640 --> 00:27:24,080
happens because you are switching

445
00:27:24,080 --> 00:27:27,679
networks so the previous http request is

446
00:27:27,679 --> 00:27:30,720
not likely to have been received

447
00:27:30,720 --> 00:27:33,039
or your or you didn't receive the rest

448
00:27:33,039 --> 00:27:34,240
or was received but you didn't get the

449
00:27:34,240 --> 00:27:35,360
response

450
00:27:35,360 --> 00:27:36,640
yeah yes

451
00:27:36,640 --> 00:27:38,480
or you haven't gotten the response yet

452
00:27:38,480 --> 00:27:41,360
who knows but yeah now i agree

453
00:27:41,360 --> 00:27:43,200
well i think i'm not sure what the

454
00:27:43,200 --> 00:27:44,399
requirement should be but we should have

455
00:27:44,399 --> 00:27:46,320
a description how to handle this because

456
00:27:46,320 --> 00:27:47,760
if you're not sure which requests

457
00:27:47,760 --> 00:27:49,919
actually reach the server first

458
00:27:49,919 --> 00:27:51,520
you could be uncertain which one you're

459
00:27:51,520 --> 00:27:52,799
actually supposed to which one you

460
00:27:52,799 --> 00:27:54,559
should actually switch to

461
00:27:54,559 --> 00:27:57,279
so might you might need some logic there

462
00:27:57,279 --> 00:27:58,960
this is a case where the fact that sip

463
00:27:58,960 --> 00:28:00,399
actually has a total sequence number

464
00:28:00,399 --> 00:28:02,240
ordering helps in fact you don't have a

465
00:28:02,240 --> 00:28:04,240
total sequence ordering here

466
00:28:04,240 --> 00:28:06,720
confusion

467
00:28:11,440 --> 00:28:14,880
okay so maybe just the time stamp for

468
00:28:14,880 --> 00:28:16,720
the for the response would be enough for

469
00:28:16,720 --> 00:28:18,399
that to know which one is happened

470
00:28:18,399 --> 00:28:20,719
before

471
00:28:23,679 --> 00:28:25,600
i really love this channel

472
00:28:25,600 --> 00:28:27,919
i didn't understand

473
00:28:27,919 --> 00:28:30,559
in the description of patch

474
00:28:30,559 --> 00:28:32,880
when you do a patch does the e-tag value

475
00:28:32,880 --> 00:28:35,520
change or not

476
00:28:35,520 --> 00:28:37,679
depends of

477
00:28:37,679 --> 00:28:38,480
the

478
00:28:38,480 --> 00:28:40,480
depend if it is that the patch is for a

479
00:28:40,480 --> 00:28:43,120
nice restart if it is another start the

480
00:28:43,120 --> 00:28:45,279
the entity tag will change because you

481
00:28:45,279 --> 00:28:47,120
are triggering you are

482
00:28:47,120 --> 00:28:49,919
creating a new ice session but it is if

483
00:28:49,919 --> 00:28:52,159
the patch request is for and

484
00:28:52,159 --> 00:28:54,640
sending a new ice candidate it will not

485
00:28:54,640 --> 00:28:55,600
change

486
00:28:55,600 --> 00:28:57,520
okay can you make that clear in the in

487
00:28:57,520 --> 00:28:59,279
the in the dock

488
00:28:59,279 --> 00:29:01,200
okay i will i was trying to i was trying

489
00:29:01,200 --> 00:29:03,279
to figure it out and i couldn't read it

490
00:29:03,279 --> 00:29:05,760
from a look

491
00:29:05,760 --> 00:29:09,120
that's a comment to johnson

492
00:29:09,120 --> 00:29:10,880
there is no universal

493
00:29:10,880 --> 00:29:13,440
ordering of

494
00:29:13,440 --> 00:29:14,640
candidates

495
00:29:14,640 --> 00:29:17,679
in sep either or rather

496
00:29:17,679 --> 00:29:19,679
candidates don't exist in zip so we're

497
00:29:19,679 --> 00:29:23,399
outside of zip here

498
00:29:28,880 --> 00:29:31,279
julius

499
00:29:33,679 --> 00:29:36,240
yeah so that's a comment not about the

500
00:29:36,240 --> 00:29:37,919
latest changes that's a comment about

501
00:29:37,919 --> 00:29:41,039
the document as a whole if i understand

502
00:29:41,039 --> 00:29:43,520
the document correctly the intent is

503
00:29:43,520 --> 00:29:45,600
that both the client and the server are

504
00:29:45,600 --> 00:29:48,320
monitoring ice content and reacting

505
00:29:48,320 --> 00:29:49,679
immediately

506
00:29:49,679 --> 00:29:51,840
to a retraction of consent is that

507
00:29:51,840 --> 00:29:54,320
correct

508
00:29:54,559 --> 00:29:55,760
yeah

509
00:29:55,760 --> 00:29:57,679
but but this is as

510
00:29:57,679 --> 00:30:00,960
this is as a as webrtc works so you have

511
00:30:00,960 --> 00:30:03,760
no change in change there yeah sure but

512
00:30:03,760 --> 00:30:05,760
i'm saying that uh

513
00:30:05,760 --> 00:30:08,399
i feel that this should be stated

514
00:30:08,399 --> 00:30:10,960
normatively

515
00:30:10,960 --> 00:30:12,559
so if you look at the places where

516
00:30:12,559 --> 00:30:15,440
consent is mentioned in the document

517
00:30:15,440 --> 00:30:18,159
the only there is uh the normative la

518
00:30:18,159 --> 00:30:20,000
there is normative language only in two

519
00:30:20,000 --> 00:30:22,399
places and it feels incorrect

520
00:30:22,399 --> 00:30:24,640
and it feels incomplete sorry

521
00:30:24,640 --> 00:30:26,720
so either you don't use normative

522
00:30:26,720 --> 00:30:29,760
language at all for ice content

523
00:30:29,760 --> 00:30:31,600
and refer to the right document but

524
00:30:31,600 --> 00:30:32,720
saying that

525
00:30:32,720 --> 00:30:34,720
you obey another rfc

526
00:30:34,720 --> 00:30:36,480
or else you use

527
00:30:36,480 --> 00:30:39,440
normative language and you say and you

528
00:30:39,440 --> 00:30:41,440
state precisely the behavior of the

529
00:30:41,440 --> 00:30:43,600
server and the client and here we are

530
00:30:43,600 --> 00:30:45,840
halfway okay from an editorial point

531
00:30:45,840 --> 00:30:47,520
that feels really weird

532
00:30:47,520 --> 00:30:50,399
and that you do mention two details

533
00:30:50,399 --> 00:30:52,640
in normative language

534
00:30:52,640 --> 00:30:54,799
and refer the rest

535
00:30:54,799 --> 00:30:55,600
to

536
00:30:55,600 --> 00:30:57,679
the webrtc documents

537
00:30:57,679 --> 00:30:59,600
okay so i feel that's a

538
00:30:59,600 --> 00:31:02,720
that's an editorial issue not a

539
00:31:02,720 --> 00:31:05,679
fundamental issue so what i would like i

540
00:31:05,679 --> 00:31:07,919
might not be i might be the minority

541
00:31:07,919 --> 00:31:09,519
here so

542
00:31:09,519 --> 00:31:12,320
i feel that you should be stating

543
00:31:12,320 --> 00:31:14,559
that non-native language clearly in this

544
00:31:14,559 --> 00:31:16,559
document even though it repeats other

545
00:31:16,559 --> 00:31:20,480
documents but that's just my opinion

546
00:31:21,279 --> 00:31:23,600
i don't have a strong opinion on that i

547
00:31:23,600 --> 00:31:25,679
mean i would just say would like to get

548
00:31:25,679 --> 00:31:27,519
input out what is the best way of doing

549
00:31:27,519 --> 00:31:29,840
the the editorial of that i mean i'm

550
00:31:29,840 --> 00:31:32,240
fine with both waves no seriously which

551
00:31:32,240 --> 00:31:33,120
is the

552
00:31:33,120 --> 00:31:35,360
the correct one of doing that but i will

553
00:31:35,360 --> 00:31:36,480
be fine to

554
00:31:36,480 --> 00:31:38,399
to change it to whatever is the most

555
00:31:38,399 --> 00:31:40,720
appropriate one so perhaps i mentioned

556
00:31:40,720 --> 00:31:43,200
the thing that bob that initially

557
00:31:43,200 --> 00:31:45,600
bothered me so in the last revision you

558
00:31:45,600 --> 00:31:49,120
had the fact that in any case

559
00:31:49,120 --> 00:31:51,440
the server must

560
00:31:51,440 --> 00:31:55,760
uh react to a retraction of consent

561
00:31:55,760 --> 00:31:57,440
okay and that's a normative language and

562
00:31:57,440 --> 00:31:59,279
i was wondering here are you adding a

563
00:31:59,279 --> 00:32:01,360
new requirement here or is it something

564
00:32:01,360 --> 00:32:04,240
i'm already doing

565
00:32:04,799 --> 00:32:05,600
yeah

566
00:32:05,600 --> 00:32:07,919
i mean

567
00:32:07,919 --> 00:32:10,000
i think that it is valid the concern i

568
00:32:10,000 --> 00:32:11,679
i'm not sure exactly what is the formal

569
00:32:11,679 --> 00:32:14,720
way of doing that in the species so i

570
00:32:14,720 --> 00:32:16,880
we can just check it and

571
00:32:16,880 --> 00:32:19,039
modify it to whatever best process the

572
00:32:19,039 --> 00:32:21,679
best parasthesis for this

573
00:32:21,679 --> 00:32:24,320
but i'm fine i mean i i i start yourself

574
00:32:24,320 --> 00:32:25,200
so

575
00:32:25,200 --> 00:32:28,440
thank you

576
00:32:33,919 --> 00:32:36,799
adam go ahead

577
00:32:37,200 --> 00:32:39,919
thanks so i wanted to comment on what

578
00:32:39,919 --> 00:32:41,840
harold was saying the i think we really

579
00:32:41,840 --> 00:32:43,679
want to be careful here is that we don't

580
00:32:43,679 --> 00:32:46,480
try to define the e-tag semantics here

581
00:32:46,480 --> 00:32:48,799
as much as uh pointing to the behavior

582
00:32:48,799 --> 00:32:51,279
described in 7232

583
00:32:51,279 --> 00:32:53,840
um and from that perspective i'm i'm not

584
00:32:53,840 --> 00:32:55,279
sure the answer is correct that it

585
00:32:55,279 --> 00:32:56,880
doesn't change

586
00:32:56,880 --> 00:32:58,559
when candidates arrive i think when

587
00:32:58,559 --> 00:33:00,240
you're patching a resource it's changing

588
00:33:00,240 --> 00:33:02,000
the resource value and so the e-tag is

589
00:33:02,000 --> 00:33:04,000
necessarily going to change but again i

590
00:33:04,000 --> 00:33:05,760
think that's instead of defining the

591
00:33:05,760 --> 00:33:07,600
semantics in this document

592
00:33:07,600 --> 00:33:11,840
we should point to 7232 for them

593
00:33:16,159 --> 00:33:17,279
okay

594
00:33:17,279 --> 00:33:18,240
but

595
00:33:18,240 --> 00:33:20,399
i will

596
00:33:20,399 --> 00:33:24,159
like to ask you if you can i mean as a

597
00:33:24,159 --> 00:33:26,880
make a small pr just trying to at least

598
00:33:26,880 --> 00:33:28,880
so i can't know exactly what what or

599
00:33:28,880 --> 00:33:30,880
where are you concerned or just try to

600
00:33:30,880 --> 00:33:33,279
to put a jihad issue so

601
00:33:33,279 --> 00:33:35,200
i can check exactly the which part of

602
00:33:35,200 --> 00:33:36,840
the document needs to be

603
00:33:36,840 --> 00:33:39,919
changed sure yeah i'll do that um i was

604
00:33:39,919 --> 00:33:41,840
more responding to the the

605
00:33:41,840 --> 00:33:43,519
discussion in the room here i'm i'm not

606
00:33:43,519 --> 00:33:44,799
exactly sure what the text says at the

607
00:33:44,799 --> 00:33:46,799
moment but i'll look at it and

608
00:33:46,799 --> 00:33:48,960
and uh open a pr if there needs to be a

609
00:33:48,960 --> 00:33:50,399
change thanks

610
00:33:50,399 --> 00:33:53,679
yeah i think that this is the the

611
00:33:53,679 --> 00:33:55,600
the trade-off is how

612
00:33:55,600 --> 00:33:58,960
verbose verbose would have to do in the

613
00:33:58,960 --> 00:34:01,279
in the document so it is splitted about

614
00:34:01,279 --> 00:34:03,519
what needs to be done in by a whip

615
00:34:03,519 --> 00:34:05,679
implementation instead of having to look

616
00:34:05,679 --> 00:34:07,919
at too many different drafts or at least

617
00:34:07,919 --> 00:34:11,520
to have a more clear idea of

618
00:34:11,520 --> 00:34:12,719
what to

619
00:34:12,719 --> 00:34:15,040
what needs to be done but obviously we

620
00:34:15,040 --> 00:34:16,399
need to be precise

621
00:34:16,399 --> 00:34:18,839
on the language so

622
00:34:18,839 --> 00:34:21,918
sergio from experience here um i think

623
00:34:21,918 --> 00:34:24,079
the isd has waffled over the years

624
00:34:24,079 --> 00:34:25,839
whether they want lower case language if

625
00:34:25,839 --> 00:34:27,839
you're repeating requirements from other

626
00:34:27,839 --> 00:34:29,918
drafts as long as i think as long as

627
00:34:29,918 --> 00:34:31,280
you're consistent to make sure that we

628
00:34:31,280 --> 00:34:32,800
know where the requirement came from

629
00:34:32,800 --> 00:34:35,119
whether it's new or imported another

630
00:34:35,119 --> 00:34:37,918
document that's fine the only problem

631
00:34:37,918 --> 00:34:39,839
with repeating the requirement is that

632
00:34:39,839 --> 00:34:41,839
it's changed in the base document and

633
00:34:41,839 --> 00:34:42,960
not in the

634
00:34:42,960 --> 00:34:44,800
other document and there's this mismatch

635
00:34:44,800 --> 00:34:46,399
problem but i think long as you're

636
00:34:46,399 --> 00:34:50,159
clearly as defined in rfc empty squad

637
00:34:50,159 --> 00:34:52,639
in section block comma then you put the

638
00:34:52,639 --> 00:34:54,639
requirement i think it'll be fine

639
00:34:54,639 --> 00:34:57,639
okay

640
00:35:17,760 --> 00:35:19,440
the key was now drained so you can

641
00:35:19,440 --> 00:35:21,680
continue with the presentation sorry

642
00:35:21,680 --> 00:35:26,078
yeah so let's slide this

643
00:35:28,079 --> 00:35:28,960
so

644
00:35:28,960 --> 00:35:29,680
well

645
00:35:29,680 --> 00:35:30,960
i i said that

646
00:35:30,960 --> 00:35:32,800
so i think that i would like to talk

647
00:35:32,800 --> 00:35:34,320
about next steps

648
00:35:34,320 --> 00:35:36,800
there are no outstanding issues in the

649
00:35:36,800 --> 00:35:39,839
in the draft there are two

650
00:35:39,839 --> 00:35:42,640
pending ones in the github repository

651
00:35:42,640 --> 00:35:45,599
but one is another one by team

652
00:35:45,599 --> 00:35:47,200
that i will share with him i don't think

653
00:35:47,200 --> 00:35:48,640
that he's on the

654
00:35:48,640 --> 00:35:51,359
on the meeting

655
00:35:51,599 --> 00:35:52,720
no

656
00:35:52,720 --> 00:35:55,040
but it was a one night from the very

657
00:35:55,040 --> 00:35:56,400
beginning and i don't think that it is

658
00:35:56,400 --> 00:35:58,880
relevant anymore

659
00:35:58,880 --> 00:36:00,800
and the other one

660
00:36:00,800 --> 00:36:04,079
was about the if we should specify

661
00:36:04,079 --> 00:36:04,960
the

662
00:36:04,960 --> 00:36:07,119
more about the http

663
00:36:07,119 --> 00:36:09,280
error response code

664
00:36:09,280 --> 00:36:11,440
i think that we are already

665
00:36:11,440 --> 00:36:12,800
doing

666
00:36:12,800 --> 00:36:14,560
that for the most of the

667
00:36:14,560 --> 00:36:17,760
requests that have a semantic

668
00:36:17,760 --> 00:36:21,359
or that means we need to to

669
00:36:21,359 --> 00:36:22,960
to provide responses in case of

670
00:36:22,960 --> 00:36:24,079
something

671
00:36:24,079 --> 00:36:24,800
that

672
00:36:24,800 --> 00:36:25,760
happened

673
00:36:25,760 --> 00:36:28,720
and for general errors like not phone or

674
00:36:28,720 --> 00:36:30,400
things like that or

675
00:36:30,400 --> 00:36:32,480
international better i think that

676
00:36:32,480 --> 00:36:35,040
and there is no need to to define that

677
00:36:35,040 --> 00:36:36,400
as we

678
00:36:36,400 --> 00:36:38,960
everyone should just follow the

679
00:36:38,960 --> 00:36:41,359
http response code

680
00:36:41,359 --> 00:36:44,720
that are already specified

681
00:36:45,280 --> 00:36:46,160
so

682
00:36:46,160 --> 00:36:48,240
i know seriously what is the

683
00:36:48,240 --> 00:36:50,720
the the procedure of continuing with the

684
00:36:50,720 --> 00:36:51,920
with the draft

685
00:36:51,920 --> 00:36:53,599
well we need to make some editorial

686
00:36:53,599 --> 00:36:55,119
changes but

687
00:36:55,119 --> 00:36:56,400
not probably

688
00:36:56,400 --> 00:36:58,720
they're not sure if we

689
00:36:58,720 --> 00:37:00,560
can go to the

690
00:37:00,560 --> 00:37:02,560
working group last call or if we need to

691
00:37:02,560 --> 00:37:04,640
make this editorial change before

692
00:37:04,640 --> 00:37:05,599
before

693
00:37:05,599 --> 00:37:07,520
doing so

694
00:37:07,520 --> 00:37:10,400
so sergio what i'd like to see is um

695
00:37:10,400 --> 00:37:13,200
to have you clear up the issues

696
00:37:13,200 --> 00:37:16,160
um if they're old like close them out

697
00:37:16,160 --> 00:37:18,640
um and the other pull request is just

698
00:37:18,640 --> 00:37:20,560
kind of like lingering there if you can

699
00:37:20,560 --> 00:37:22,000
close those out and then anybody else

700
00:37:22,000 --> 00:37:23,599
can get their stuff in as quickly as

701
00:37:23,599 --> 00:37:25,520
possible and then we can go to a working

702
00:37:25,520 --> 00:37:27,440
group class call

703
00:37:27,440 --> 00:37:29,760
okay

704
00:37:34,320 --> 00:37:37,320
please

705
00:37:38,240 --> 00:37:39,520
so um

706
00:37:39,520 --> 00:37:42,560
i'm i'm so sorry sergio i'm i'm really

707
00:37:42,560 --> 00:37:44,960
sorry but i disagree with you on the

708
00:37:44,960 --> 00:37:47,040
error handling issue

709
00:37:47,040 --> 00:37:49,359
and uh the reason i'm sorry is that it's

710
00:37:49,359 --> 00:37:52,240
horrible defining precisely all the

711
00:37:52,240 --> 00:37:55,920
error values is horribly tedious work

712
00:37:55,920 --> 00:37:57,599
and i

713
00:37:57,599 --> 00:38:00,560
feel and i feel that that's not

714
00:38:00,560 --> 00:38:01,920
something that you should leave to the

715
00:38:01,920 --> 00:38:03,280
implementer

716
00:38:03,280 --> 00:38:04,400
so

717
00:38:04,400 --> 00:38:06,960
if i'm implementing the server side of

718
00:38:06,960 --> 00:38:07,839
which

719
00:38:07,839 --> 00:38:10,880
i don't want to have to go through all

720
00:38:10,880 --> 00:38:14,160
of the http rxcs in order to find out

721
00:38:14,160 --> 00:38:16,320
which is the right

722
00:38:16,320 --> 00:38:18,720
error value to send at a given point

723
00:38:18,720 --> 00:38:20,320
when i have a failure

724
00:38:20,320 --> 00:38:23,599
and when implementing your draft i have

725
00:38:23,599 --> 00:38:26,880
had i have had the problem so i've

726
00:38:26,880 --> 00:38:28,720
i wanted to get it done

727
00:38:28,720 --> 00:38:31,200
so i have to say that i was more or less

728
00:38:31,200 --> 00:38:33,920
sending errors randomly and that's

729
00:38:33,920 --> 00:38:35,839
something i felt the need for

730
00:38:35,839 --> 00:38:37,599
guidance telling me that if you have

731
00:38:37,599 --> 00:38:41,040
this kind of failure send this error

732
00:38:41,040 --> 00:38:43,440
here so some of them are obvious if i

733
00:38:43,440 --> 00:38:45,280
have an implementation failure if i have

734
00:38:45,280 --> 00:38:47,359
an unexpected error i send internal

735
00:38:47,359 --> 00:38:49,520
server error that's fine

736
00:38:49,520 --> 00:38:51,839
but in cases where the client is sending

737
00:38:51,839 --> 00:38:55,119
something that mismatches and so on uh

738
00:38:55,119 --> 00:38:56,720
whether to send

739
00:38:56,720 --> 00:39:00,000
which of the 400 errors or 500 errors to

740
00:39:00,000 --> 00:39:01,040
send

741
00:39:01,040 --> 00:39:02,960
i feel that the draft needs a little bit

742
00:39:02,960 --> 00:39:04,720
more work on that

743
00:39:04,720 --> 00:39:07,040
because it's horrible no no no no no but

744
00:39:07,040 --> 00:39:09,119
i mean

745
00:39:09,119 --> 00:39:11,920
what i can do this is the typical lot

746
00:39:11,920 --> 00:39:14,800
please feel free to to submit a pr solve

747
00:39:14,800 --> 00:39:17,280
with that but i'm not going to but i

748
00:39:17,280 --> 00:39:19,760
mean yes for example how

749
00:39:19,760 --> 00:39:21,920
exhaustive can we

750
00:39:21,920 --> 00:39:24,079
how we do we need to go

751
00:39:24,079 --> 00:39:26,400
into this because for example

752
00:39:26,400 --> 00:39:28,480
do we need to specify what happens if

753
00:39:28,480 --> 00:39:30,320
someone sent us an

754
00:39:30,320 --> 00:39:32,560
invalid sdp

755
00:39:32,560 --> 00:39:33,599
when

756
00:39:33,599 --> 00:39:37,119
when in the patch request

757
00:39:37,119 --> 00:39:39,040
i think that we shouldn't i mean this is

758
00:39:39,040 --> 00:39:40,480
already a

759
00:39:40,480 --> 00:39:42,240
standard http and we don't need to

760
00:39:42,240 --> 00:39:43,440
reference

761
00:39:43,440 --> 00:39:44,400
the

762
00:39:44,400 --> 00:39:45,119
the

763
00:39:45,119 --> 00:39:47,280
what code needs to be

764
00:39:47,280 --> 00:39:48,560
um

765
00:39:48,560 --> 00:39:50,640
be returning for example instead of an

766
00:39:50,640 --> 00:39:51,680
sdp

767
00:39:51,680 --> 00:39:55,760
and we get a

768
00:39:55,760 --> 00:39:57,440
um or something there are a lot of

769
00:39:57,440 --> 00:39:59,680
things that they we shouldn't er we

770
00:39:59,680 --> 00:40:01,520
should not be specifying because it is

771
00:40:01,520 --> 00:40:02,880
just how

772
00:40:02,880 --> 00:40:06,079
um http works i mean you have errors

773
00:40:06,079 --> 00:40:07,440
responses

774
00:40:07,440 --> 00:40:09,440
that are defined for

775
00:40:09,440 --> 00:40:11,040
the

776
00:40:11,040 --> 00:40:13,200
the

777
00:40:13,200 --> 00:40:15,359
for the common cases i think that we

778
00:40:15,359 --> 00:40:18,319
have to define responses for example

779
00:40:18,319 --> 00:40:19,599
uh

780
00:40:19,599 --> 00:40:21,440
for when the semantic

781
00:40:21,440 --> 00:40:22,839
issues for

782
00:40:22,839 --> 00:40:25,839
example i cannot think of anything by

783
00:40:25,839 --> 00:40:29,200
now that it is not in the draft so

784
00:40:29,200 --> 00:40:30,800
you could put you could save some

785
00:40:30,800 --> 00:40:33,359
example and we can check if so

786
00:40:33,359 --> 00:40:35,040
there was one on the list

787
00:40:35,040 --> 00:40:36,240
which is

788
00:40:36,240 --> 00:40:38,079
you sent me a candidate that i don't

789
00:40:38,079 --> 00:40:39,680
understand

790
00:40:39,680 --> 00:40:42,800
do i ignore the candidate

791
00:40:42,800 --> 00:40:46,640
and return 200 or to 202 i don't

792
00:40:46,640 --> 00:40:50,079
remember or do i inform the client

793
00:40:50,079 --> 00:40:53,280
that i couldn't pass this candidate

794
00:40:53,280 --> 00:40:55,280
okay it's tricky because you can batch

795
00:40:55,280 --> 00:40:56,560
the candidates

796
00:40:56,560 --> 00:40:58,800
okay so you answered something which i

797
00:40:58,800 --> 00:41:00,480
agree with

798
00:41:00,480 --> 00:41:02,720
uh ignore the candidate and return

799
00:41:02,720 --> 00:41:03,920
success

800
00:41:03,920 --> 00:41:05,680
but i feel that it should be in the

801
00:41:05,680 --> 00:41:06,560
draft

802
00:41:06,560 --> 00:41:09,280
yeah no no and i have i have added that

803
00:41:09,280 --> 00:41:10,400
in the graph

804
00:41:10,400 --> 00:41:12,960
okay but but if you check this is not

805
00:41:12,960 --> 00:41:15,680
about whatever code to return it is what

806
00:41:15,680 --> 00:41:18,800
is the behavior of the server

807
00:41:18,800 --> 00:41:19,760
yeah

808
00:41:19,760 --> 00:41:20,960
so that

809
00:41:20,960 --> 00:41:23,359
so that's these cases i completely agree

810
00:41:23,359 --> 00:41:25,119
that we have to to add anything that we

811
00:41:25,119 --> 00:41:27,359
can find in the server in the

812
00:41:27,359 --> 00:41:28,400
in the

813
00:41:28,400 --> 00:41:30,560
in the draft for example because this is

814
00:41:30,560 --> 00:41:32,400
not just specified which is there were

815
00:41:32,400 --> 00:41:34,560
code to return it is if

816
00:41:34,560 --> 00:41:36,640
this is valid and what should be the

817
00:41:36,640 --> 00:41:38,400
behavior when receiving this kind of or

818
00:41:38,400 --> 00:41:39,920
having this kind of

819
00:41:39,920 --> 00:41:42,560
of a of candidate

820
00:41:42,560 --> 00:41:45,280
okay what happens if you send me delete

821
00:41:45,280 --> 00:41:48,160
for a resource that no longer exists do

822
00:41:48,160 --> 00:41:51,839
i send 404 but that used to exist

823
00:41:51,839 --> 00:41:55,759
that has been turned down but for

824
00:41:55,920 --> 00:41:57,920
yeah i mean it is standard for not found

825
00:41:57,920 --> 00:41:59,359
i think that this is the most clear

826
00:41:59,359 --> 00:42:00,880
example of still something that i don't

827
00:42:00,880 --> 00:42:03,040
think that needs to be go is to be on

828
00:42:03,040 --> 00:42:05,440
the on the draft

829
00:42:05,440 --> 00:42:06,800
okay

830
00:42:06,800 --> 00:42:09,599
i mean the the first one i i agree that

831
00:42:09,599 --> 00:42:11,359
it has to be in the draft and it is it

832
00:42:11,359 --> 00:42:12,640
is in the draft

833
00:42:12,640 --> 00:42:15,040
what to return if the if the

834
00:42:15,040 --> 00:42:17,680
this resource is not from is it is the

835
00:42:17,680 --> 00:42:19,440
country sample of what i think don't

836
00:42:19,440 --> 00:42:21,520
think that it has to be in the draft

837
00:42:21,520 --> 00:42:22,400
okay

838
00:42:22,400 --> 00:42:26,000
with codex that i don't support

839
00:42:27,040 --> 00:42:28,800
this is the sap negotiation you have to

840
00:42:28,800 --> 00:42:30,720
return as an sdp

841
00:42:30,720 --> 00:42:31,760
with the economy

842
00:42:31,760 --> 00:42:34,400
okay okay that's a silly one so sorry

843
00:42:34,400 --> 00:42:36,240
do you mean so

844
00:42:36,240 --> 00:42:38,240
yeah okay but now look for the draft and

845
00:42:38,240 --> 00:42:40,000
see whether there are any concrete other

846
00:42:40,000 --> 00:42:43,839
concrete cases that i miss

847
00:42:46,880 --> 00:42:48,800
um but i think one way that we start to

848
00:42:48,800 --> 00:42:50,800
ferret out a lot of these is actually by

849
00:42:50,800 --> 00:42:52,880
doing the working group last call so i'd

850
00:42:52,880 --> 00:42:54,400
really like to get there in the next

851
00:42:54,400 --> 00:42:56,160
couple of weeks where we can fire this

852
00:42:56,160 --> 00:42:58,720
off so i'll be watching the repo and

853
00:42:58,720 --> 00:43:00,319
sergio i'll be talking with you to make

854
00:43:00,319 --> 00:43:02,560
sure that we uh make sure everything is

855
00:43:02,560 --> 00:43:03,599
dutifully

856
00:43:03,599 --> 00:43:05,760
knocked off as much as possible and then

857
00:43:05,760 --> 00:43:07,520
we do the work last call and see where

858
00:43:07,520 --> 00:43:08,960
we go and then we can start talking

859
00:43:08,960 --> 00:43:10,880
about all the other issues of sending

860
00:43:10,880 --> 00:43:13,119
mana tag and language support subtitles

861
00:43:13,119 --> 00:43:15,520
etc

862
00:43:20,319 --> 00:43:22,800
okay so

863
00:43:22,800 --> 00:43:24,079
i think that

864
00:43:24,079 --> 00:43:26,319
because i have already been working with

865
00:43:26,319 --> 00:43:28,079
some people that are implementing whip

866
00:43:28,079 --> 00:43:29,920
and are thinking about

867
00:43:29,920 --> 00:43:34,000
i have received a request about how to

868
00:43:34,000 --> 00:43:36,880
can we add more functionalities to whip

869
00:43:36,880 --> 00:43:37,760
so

870
00:43:37,760 --> 00:43:41,040
i think that my general question is if

871
00:43:41,040 --> 00:43:43,839
once we have the whip draft

872
00:43:43,839 --> 00:43:45,839
publish or ready for publishing if we

873
00:43:45,839 --> 00:43:48,400
have to we should be working on

874
00:43:48,400 --> 00:43:51,119
on adding new functionalities to whip

875
00:43:51,119 --> 00:43:52,640
for example the ones that comes

876
00:43:52,640 --> 00:43:55,040
immediately in mind to me is how for

877
00:43:55,040 --> 00:43:57,200
example sending metadata alongside with

878
00:43:57,200 --> 00:43:58,800
the

879
00:43:58,800 --> 00:44:00,720
with the

880
00:44:00,720 --> 00:44:03,359
with the audio video there are a lot of

881
00:44:03,359 --> 00:44:05,200
specs already available that are used in

882
00:44:05,200 --> 00:44:06,960
the traditional streaming

883
00:44:06,960 --> 00:44:09,119
that we could support

884
00:44:09,119 --> 00:44:11,599
and for example multi-language support

885
00:44:11,599 --> 00:44:14,319
if we want to support it and how

886
00:44:14,319 --> 00:44:17,280
or for example how do we do subtitling

887
00:44:17,280 --> 00:44:20,000
with a with a with whip that it is

888
00:44:20,000 --> 00:44:21,440
something that probably

889
00:44:21,440 --> 00:44:22,480
a

890
00:44:22,480 --> 00:44:25,599
i have a proposal

891
00:44:25,839 --> 00:44:29,040
ready to to stop being working on with a

892
00:44:29,040 --> 00:44:31,599
like for sending with btt over data

893
00:44:31,599 --> 00:44:32,880
channels

894
00:44:32,880 --> 00:44:34,240
but this

895
00:44:34,240 --> 00:44:36,720
is a kind of a

896
00:44:36,720 --> 00:44:38,079
outside of scope

897
00:44:38,079 --> 00:44:40,480
of the of the week working group because

898
00:44:40,480 --> 00:44:43,040
we are not supposed to do any

899
00:44:43,040 --> 00:44:44,400
any

900
00:44:44,400 --> 00:44:45,920
new draft

901
00:44:45,920 --> 00:44:47,920
or new specs for this kind of things

902
00:44:47,920 --> 00:44:50,240
probably this would go to apt core and

903
00:44:50,240 --> 00:44:53,680
then we have to reference it from here

904
00:44:53,680 --> 00:44:54,960
so

905
00:44:54,960 --> 00:44:56,880
not sure exactly

906
00:44:56,880 --> 00:44:59,359
how should we stand and then

907
00:44:59,359 --> 00:45:01,359
or if we should extend the working group

908
00:45:01,359 --> 00:45:03,520
to handle these things or how

909
00:45:03,520 --> 00:45:06,240
we should do it

910
00:45:07,680 --> 00:45:09,599
uh sergio i too have the same question

911
00:45:09,599 --> 00:45:11,200
but i guess we'll need to figure out how

912
00:45:11,200 --> 00:45:13,359
to do that um because i know that we

913
00:45:13,359 --> 00:45:15,119
initially tightly scoped this working

914
00:45:15,119 --> 00:45:18,160
groups charter so we may have to cuddle

915
00:45:18,160 --> 00:45:19,760
with our 80s to figure out what they

916
00:45:19,760 --> 00:45:21,440
want to do whether it's

917
00:45:21,440 --> 00:45:23,599
you know this goes away and they all get

918
00:45:23,599 --> 00:45:26,319
dispatched or they all go to avt core or

919
00:45:26,319 --> 00:45:28,880
wherever um we'll definitely

920
00:45:28,880 --> 00:45:33,280
be looking at that if you have ideas the

921
00:45:33,280 --> 00:45:34,960
right thing to do is to start dropping

922
00:45:34,960 --> 00:45:36,880
drafts and then we can start thinking

923
00:45:36,880 --> 00:45:38,640
about it

924
00:45:38,640 --> 00:45:39,680
yep

925
00:45:39,680 --> 00:45:42,000
yeah i was just checking our charter and

926
00:45:42,000 --> 00:45:45,119
i think no yeah as sean said like

927
00:45:45,119 --> 00:45:48,839
some work to figure out

928
00:46:00,079 --> 00:46:01,920
thank you sergio i'm going to be looking

929
00:46:01,920 --> 00:46:02,960
forward to getting this one in working

930
00:46:02,960 --> 00:46:04,160
group last call so we'll work through

931
00:46:04,160 --> 00:46:06,319
that uh lorenzo

932
00:46:06,319 --> 00:46:07,839
i believe you're up and we can drive the

933
00:46:07,839 --> 00:46:09,040
slides from here so you can just say

934
00:46:09,040 --> 00:46:12,279
next slide

935
00:46:17,440 --> 00:46:19,280
you can also try to to pass the control

936
00:46:19,280 --> 00:46:22,640
to me i can try to use the

937
00:46:22,880 --> 00:46:23,920
in

938
00:46:23,920 --> 00:46:25,359
the mobile interface over here to

939
00:46:25,359 --> 00:46:27,680
control the slides absolutely how do i

940
00:46:27,680 --> 00:46:29,200
change it over to you

941
00:46:29,200 --> 00:46:31,680
uh you can just hover over my name in

942
00:46:31,680 --> 00:46:33,760
the in the participants list and there

943
00:46:33,760 --> 00:46:35,839
should be an icon that says pass control

944
00:46:35,839 --> 00:46:37,440
to

945
00:46:37,440 --> 00:46:41,200
let's do that there we go look at that

946
00:46:41,280 --> 00:46:45,440
it has i've i believe i'm doing that now

947
00:46:45,440 --> 00:46:46,319
yeah

948
00:46:46,319 --> 00:46:47,520
all right cool

949
00:46:47,520 --> 00:46:48,319
okay

950
00:46:48,319 --> 00:46:49,760
yeah we added this new feature why not

951
00:46:49,760 --> 00:46:51,280
use it you know

952
00:46:51,280 --> 00:46:53,280
okay awesome

953
00:46:53,280 --> 00:46:55,200
okay i'll i'll be brief so i will i

954
00:46:55,200 --> 00:46:57,440
won't bother bore you too much with all

955
00:46:57,440 --> 00:46:59,200
these i just wanted to share some

956
00:46:59,200 --> 00:47:01,839
implementation experience uh with both

957
00:47:01,839 --> 00:47:03,599
the web client and server that we

958
00:47:03,599 --> 00:47:05,040
implemented

959
00:47:05,040 --> 00:47:07,359
as an open source uh an open source tool

960
00:47:07,359 --> 00:47:09,200
and in particular using two completely

961
00:47:09,200 --> 00:47:11,040
different webrtc stacks which was also

962
00:47:11,040 --> 00:47:13,359
helpful in terms of

963
00:47:13,359 --> 00:47:14,599
integration

964
00:47:14,599 --> 00:47:16,880
interoperability as well

965
00:47:16,880 --> 00:47:17,920
so

966
00:47:17,920 --> 00:47:19,520
i won't go too much into the detail of

967
00:47:19,520 --> 00:47:21,359
the on the implementation itself so you

968
00:47:21,359 --> 00:47:23,200
can find more information in that blog

969
00:47:23,200 --> 00:47:25,040
post if you are interested

970
00:47:25,040 --> 00:47:28,079
and i also made a presentation at

971
00:47:28,079 --> 00:47:30,000
a conference in chicago a few months ago

972
00:47:30,000 --> 00:47:32,240
where i also went a bit more in detail

973
00:47:32,240 --> 00:47:35,200
about all the different aspects but i'll

974
00:47:35,200 --> 00:47:36,319
share some

975
00:47:36,319 --> 00:47:38,800
some details about both the server and

976
00:47:38,800 --> 00:47:40,720
client-side implementation so for the

977
00:47:40,720 --> 00:47:43,680
server side we based it all on our own

978
00:47:43,680 --> 00:47:45,839
javascript rtc server which is an open

979
00:47:45,839 --> 00:47:46,800
source

980
00:47:46,800 --> 00:47:48,960
implementation of a webrtc server with

981
00:47:48,960 --> 00:47:51,520
different functionality including an sfu

982
00:47:51,520 --> 00:47:53,760
and the sfu is indeed what we use we

983
00:47:53,760 --> 00:47:56,480
used in here so specifically janus uses

984
00:47:56,480 --> 00:47:57,680
its own

985
00:47:57,680 --> 00:48:00,800
json based api so rather than embedding

986
00:48:00,800 --> 00:48:03,599
uh the web api inside genos itself which

987
00:48:03,599 --> 00:48:04,640
is what

988
00:48:04,640 --> 00:48:06,559
julius did in galin for instance if i

989
00:48:06,559 --> 00:48:08,160
record correctly

990
00:48:08,160 --> 00:48:12,319
we chose a a simpler and more loosely

991
00:48:12,319 --> 00:48:14,240
integrated approach which was basically

992
00:48:14,240 --> 00:48:16,240
of placing

993
00:48:16,240 --> 00:48:18,880
a tiny wrapper in front of janus itself

994
00:48:18,880 --> 00:48:20,400
which means that we have

995
00:48:20,400 --> 00:48:23,359
a small uh server implementation that

996
00:48:23,359 --> 00:48:25,359
sits in front of janus that implements

997
00:48:25,359 --> 00:48:28,240
the web api and then it translates all

998
00:48:28,240 --> 00:48:30,079
the interactions on the website to

999
00:48:30,079 --> 00:48:32,160
interactions on the janos side so it

1000
00:48:32,160 --> 00:48:34,720
translates the apis

1001
00:48:34,720 --> 00:48:36,559
on the fly and of course nothing needs

1002
00:48:36,559 --> 00:48:38,319
to be changed on the webrtc stack

1003
00:48:38,319 --> 00:48:39,839
because that doesn't change so it's a

1004
00:48:39,839 --> 00:48:42,400
very thin layer on the signaling on a

1005
00:48:42,400 --> 00:48:44,160
signaling level and we implemented it

1006
00:48:44,160 --> 00:48:46,319
very quickly using node.js so it's

1007
00:48:46,319 --> 00:48:49,359
basically a very basic express based

1008
00:48:49,359 --> 00:48:52,240
rest api for what implements the

1009
00:48:52,240 --> 00:48:54,880
the web api and then the janus

1010
00:48:54,880 --> 00:48:57,359
inter integration is is done

1011
00:48:57,359 --> 00:48:59,280
programmatically as well and of course

1012
00:48:59,280 --> 00:49:01,359
it only takes care of the ingest part so

1013
00:49:01,359 --> 00:49:03,359
we make sure that the video

1014
00:49:03,359 --> 00:49:05,680
gets to janus and then what happens

1015
00:49:05,680 --> 00:49:07,520
after that is out of scope of the web

1016
00:49:07,520 --> 00:49:09,440
server itself so if you need to

1017
00:49:09,440 --> 00:49:11,920
distribute it somehow that's up to you

1018
00:49:11,920 --> 00:49:13,520
and as i mentioned this is completely

1019
00:49:13,520 --> 00:49:15,119
open source so if you want to give that

1020
00:49:15,119 --> 00:49:16,800
a try you just need to to clone that

1021
00:49:16,800 --> 00:49:18,800
repo and everything should should be

1022
00:49:18,800 --> 00:49:19,920
working

1023
00:49:19,920 --> 00:49:21,520
and just to give you an idea about how

1024
00:49:21,520 --> 00:49:23,359
it works so as i mentioned it's very

1025
00:49:23,359 --> 00:49:25,920
simply uh an application

1026
00:49:25,920 --> 00:49:27,839
layer in front of janus for what concern

1027
00:49:27,839 --> 00:49:30,000
the signaling so you have a web client

1028
00:49:30,000 --> 00:49:31,040
talking

1029
00:49:31,040 --> 00:49:33,440
talking the whip language with this

1030
00:49:33,440 --> 00:49:35,119
simple web server the web server

1031
00:49:35,119 --> 00:49:37,760
translates it to janus requests which

1032
00:49:37,760 --> 00:49:39,359
means that eventually you end up with

1033
00:49:39,359 --> 00:49:41,520
the webrtc peer connection between the

1034
00:49:41,520 --> 00:49:43,920
web client and the janus server that is

1035
00:49:43,920 --> 00:49:46,319
being controlled by this simple web

1036
00:49:46,319 --> 00:49:47,839
server

1037
00:49:47,839 --> 00:49:50,240
and as far as the this translation is

1038
00:49:50,240 --> 00:49:52,319
concerned it's actually quite trivial

1039
00:49:52,319 --> 00:49:53,680
which means that the same process could

1040
00:49:53,680 --> 00:49:55,839
be done with other media servers as well

1041
00:49:55,839 --> 00:49:57,359
in this case for instance this is the

1042
00:49:57,359 --> 00:50:00,640
http post that originates the

1043
00:50:00,640 --> 00:50:02,800
the publishing process which means that

1044
00:50:02,800 --> 00:50:05,040
as soon as we receive a new offer we

1045
00:50:05,040 --> 00:50:07,200
need to pass this to janus somehow and

1046
00:50:07,200 --> 00:50:09,280
since we are using the sfu plugin with

1047
00:50:09,280 --> 00:50:11,599
that it means that we need to create a

1048
00:50:11,599 --> 00:50:13,280
connection with janus create the

1049
00:50:13,280 --> 00:50:15,680
resource that we need to talk to jarvis

1050
00:50:15,680 --> 00:50:18,960
for that and then we join an existing

1051
00:50:18,960 --> 00:50:21,119
sfu room as if we were an actual

1052
00:50:21,119 --> 00:50:23,680
participant if we even if we are not

1053
00:50:23,680 --> 00:50:25,440
as soon as we receive an answer back

1054
00:50:25,440 --> 00:50:27,280
which means that janus is has taken care

1055
00:50:27,280 --> 00:50:29,760
of the negotiation process we can send

1056
00:50:29,760 --> 00:50:32,240
that answer back via whip back to the

1057
00:50:32,240 --> 00:50:33,839
participant which means that then the

1058
00:50:33,839 --> 00:50:36,559
negotiation for the whip producer can

1059
00:50:36,559 --> 00:50:38,400
start happening and of course the web

1060
00:50:38,400 --> 00:50:41,040
server also adds the needed resources

1061
00:50:41,040 --> 00:50:42,319
for instance the

1062
00:50:42,319 --> 00:50:44,400
the location header so that you can then

1063
00:50:44,400 --> 00:50:47,760
interact with the resource after that

1064
00:50:47,760 --> 00:50:49,520
which means that of course we also

1065
00:50:49,520 --> 00:50:51,839
support handling trickle candidates and

1066
00:50:51,839 --> 00:50:53,599
this is quite trivial because in this

1067
00:50:53,599 --> 00:50:55,520
case we just need to translate between

1068
00:50:55,520 --> 00:50:58,640
the sdp fragment format that we've uses

1069
00:50:58,640 --> 00:51:00,720
and the json-based

1070
00:51:00,720 --> 00:51:02,640
trickle signaling that janus uses

1071
00:51:02,640 --> 00:51:04,400
instead which is relatively

1072
00:51:04,400 --> 00:51:05,839
straightforward also when you group

1073
00:51:05,839 --> 00:51:08,079
candidates so no problems there of

1074
00:51:08,079 --> 00:51:09,680
course what happens when you start

1075
00:51:09,680 --> 00:51:12,079
exchanging trickle candidates is that

1076
00:51:12,079 --> 00:51:14,400
the actualized and dtls exchanges are

1077
00:51:14,400 --> 00:51:16,400
going to happen between the producer and

1078
00:51:16,400 --> 00:51:18,880
janus itself so the web server is not

1079
00:51:18,880 --> 00:51:21,119
involved in the process after that

1080
00:51:21,119 --> 00:51:23,440
for ice restarts the process was a bit

1081
00:51:23,440 --> 00:51:25,839
more complicated just because on the

1082
00:51:25,839 --> 00:51:27,520
website

1083
00:51:27,520 --> 00:51:29,760
we just use we just exchanged the

1084
00:51:29,760 --> 00:51:31,839
credentials not the whole sdp while

1085
00:51:31,839 --> 00:51:34,800
janus expects the whole sdp to update a

1086
00:51:34,800 --> 00:51:36,800
session to trigger a restart which means

1087
00:51:36,800 --> 00:51:39,520
that the the web server needs

1088
00:51:39,520 --> 00:51:41,680
to to keep basically a copy of the

1089
00:51:41,680 --> 00:51:44,079
original sdp that was sent to the post

1090
00:51:44,079 --> 00:51:46,240
and so anytime that we receive new

1091
00:51:46,240 --> 00:51:48,400
credentials from the producer we just

1092
00:51:48,400 --> 00:51:50,559
swoop the credentials in this sdp that

1093
00:51:50,559 --> 00:51:53,119
we had before we send it to janus we

1094
00:51:53,119 --> 00:51:55,599
receive a complete sdp back

1095
00:51:55,599 --> 00:51:57,920
and then we extract the new credentials

1096
00:51:57,920 --> 00:52:00,559
from this answer and only send those via

1097
00:52:00,559 --> 00:52:03,280
via whip instead so a bit more work but

1098
00:52:03,280 --> 00:52:06,880
it's not really that complicated

1099
00:52:06,880 --> 00:52:08,880
uh tearing down a session is also quite

1100
00:52:08,880 --> 00:52:10,640
easy because we just need to basically

1101
00:52:10,640 --> 00:52:12,720
tear down the resource on the genocide

1102
00:52:12,720 --> 00:52:15,680
whenever we receive a delete of course

1103
00:52:15,680 --> 00:52:17,680
the counterpart may also be happening so

1104
00:52:17,680 --> 00:52:20,400
we may be detecting a peer connection

1105
00:52:20,400 --> 00:52:23,280
going down because of iso or dtls and in

1106
00:52:23,280 --> 00:52:25,280
that case janus can intercept it and

1107
00:52:25,280 --> 00:52:27,920
notify that via the janus api to the web

1108
00:52:27,920 --> 00:52:30,160
server that is controlling it and when

1109
00:52:30,160 --> 00:52:31,760
that happens the web server can then

1110
00:52:31,760 --> 00:52:33,839
clean up the resources automatically so

1111
00:52:33,839 --> 00:52:36,079
that if appear connection was closed

1112
00:52:36,079 --> 00:52:38,319
because there was a dtls alert but no

1113
00:52:38,319 --> 00:52:40,000
signaling involved for instance we can

1114
00:52:40,000 --> 00:52:41,839
still take care of cleaning everything

1115
00:52:41,839 --> 00:52:44,400
up accordingly

1116
00:52:44,400 --> 00:52:46,240
and of course i mean web server is nice

1117
00:52:46,240 --> 00:52:48,079
but we also wanted to have a web client

1118
00:52:48,079 --> 00:52:50,480
to test it all and we didn't really want

1119
00:52:50,480 --> 00:52:52,240
to use a browser for that because even

1120
00:52:52,240 --> 00:52:53,200
though

1121
00:52:53,200 --> 00:52:55,680
a web client basically needs an http

1122
00:52:55,680 --> 00:52:57,520
stack and the webrtc is stuck and so the

1123
00:52:57,520 --> 00:52:59,680
browser is the obvious choice here i

1124
00:52:59,680 --> 00:53:02,079
wanted to test and set the more native

1125
00:53:02,079 --> 00:53:03,920
solution because that's what most

1126
00:53:03,920 --> 00:53:06,319
broadcasters use anyway so they use

1127
00:53:06,319 --> 00:53:08,400
applications like obs

1128
00:53:08,400 --> 00:53:10,640
or extreme or others which are all

1129
00:53:10,640 --> 00:53:12,960
native solutions that allow them to to

1130
00:53:12,960 --> 00:53:15,440
produce a broadcast in a more controlled

1131
00:53:15,440 --> 00:53:16,240
way

1132
00:53:16,240 --> 00:53:18,960
unfortunately obs webrtc does exist but

1133
00:53:18,960 --> 00:53:20,960
does not support whip at the moment it

1134
00:53:20,960 --> 00:53:23,119
did support whip in a very early stage

1135
00:53:23,119 --> 00:53:25,839
last year but right now it only supports

1136
00:53:25,839 --> 00:53:28,480
the custom millicase protocol so i

1137
00:53:28,480 --> 00:53:31,200
basically chose to use uh g-streamer for

1138
00:53:31,200 --> 00:53:32,960
the purpose because it does come with a

1139
00:53:32,960 --> 00:53:35,520
webrtc stack in webrtc bin

1140
00:53:35,520 --> 00:53:37,359
and i actually had already used this

1141
00:53:37,359 --> 00:53:38,960
stack for a few other applications in

1142
00:53:38,960 --> 00:53:40,720
the past so i was partly familiar with

1143
00:53:40,720 --> 00:53:42,720
it and i wanted to play with that

1144
00:53:42,720 --> 00:53:45,040
and most importantly it is very modular

1145
00:53:45,040 --> 00:53:46,800
and very powerful which as i explained

1146
00:53:46,800 --> 00:53:49,599
later basically allowed me to do some

1147
00:53:49,599 --> 00:53:51,599
more prototyping and doing some

1148
00:53:51,599 --> 00:53:54,160
interesting things with all these uh

1149
00:53:54,160 --> 00:53:55,839
right away and all this is also open

1150
00:53:55,839 --> 00:53:57,520
source if you want to to play with it a

1151
00:53:57,520 --> 00:54:01,359
bit so i encourage you to do that

1152
00:54:01,359 --> 00:54:03,440
and as far as the futures

1153
00:54:03,440 --> 00:54:04,800
there are some limitations so it's

1154
00:54:04,800 --> 00:54:06,240
pretty much complete in terms of

1155
00:54:06,240 --> 00:54:08,400
adherence to this to the to the spec but

1156
00:54:08,400 --> 00:54:10,000
there are some limitations so we do

1157
00:54:10,000 --> 00:54:11,520
support trigger

1158
00:54:11,520 --> 00:54:14,079
settings standard either in advance or

1159
00:54:14,079 --> 00:54:16,319
via the link header as specified in the

1160
00:54:16,319 --> 00:54:18,880
document we support authorization via

1161
00:54:18,880 --> 00:54:20,800
tokens delete and so on and so forth we

1162
00:54:20,800 --> 00:54:22,079
can also do

1163
00:54:22,079 --> 00:54:23,760
non-triggle if you want to even though

1164
00:54:23,760 --> 00:54:25,440
the speak does mandate support for

1165
00:54:25,440 --> 00:54:28,319
trickle and we have a way to force turn

1166
00:54:28,319 --> 00:54:29,839
uh in case you need it which would be

1167
00:54:29,839 --> 00:54:31,599
pretty much the equivalent of calling

1168
00:54:31,599 --> 00:54:33,440
ice transport relay when you do it from

1169
00:54:33,440 --> 00:54:35,680
the browser which can be helpful in some

1170
00:54:35,680 --> 00:54:38,480
in some cases and we chose to make the

1171
00:54:38,480 --> 00:54:40,240
audio video pipelines completely

1172
00:54:40,240 --> 00:54:42,640
customizable which means that you choose

1173
00:54:42,640 --> 00:54:45,440
using the gstreamer format how you want

1174
00:54:45,440 --> 00:54:47,040
what you want to capture and how you

1175
00:54:47,040 --> 00:54:49,680
want to encode it up until the webrtc

1176
00:54:49,680 --> 00:54:52,000
part that is taken care of by the web

1177
00:54:52,000 --> 00:54:54,480
client which again gives you a lot of

1178
00:54:54,480 --> 00:54:56,480
flexibility in terms of what you want to

1179
00:54:56,480 --> 00:54:58,240
capture and how you want to send it

1180
00:54:58,240 --> 00:55:00,000
which was helpful in a few different use

1181
00:55:00,000 --> 00:55:02,000
cases in particular

1182
00:55:02,000 --> 00:55:04,079
the problem is that at the moment webrtc

1183
00:55:04,079 --> 00:55:05,920
bin has some limitations so for instance

1184
00:55:05,920 --> 00:55:08,640
it does not support ice restarts yet

1185
00:55:08,640 --> 00:55:10,559
which means that i could not test that

1186
00:55:10,559 --> 00:55:13,280
part so far and uh there is a pull

1187
00:55:13,280 --> 00:55:15,440
request to add support for that but it

1188
00:55:15,440 --> 00:55:17,680
still is still stuck for a while

1189
00:55:17,680 --> 00:55:19,200
and besides there is also another

1190
00:55:19,200 --> 00:55:20,480
limitation that we mentioned on the

1191
00:55:20,480 --> 00:55:22,720
mailing list which means that

1192
00:55:22,720 --> 00:55:25,119
once you create a peerconnection object

1193
00:55:25,119 --> 00:55:26,799
which means once you have generated your

1194
00:55:26,799 --> 00:55:29,359
offer and sent it somewhere you cannot

1195
00:55:29,359 --> 00:55:31,520
add a stun or turn server after that

1196
00:55:31,520 --> 00:55:33,520
point which means that we cannot use for

1197
00:55:33,520 --> 00:55:34,559
instance

1198
00:55:34,559 --> 00:55:37,040
the link header in response to a post to

1199
00:55:37,040 --> 00:55:39,680
add a stand and turn server together

1200
00:55:39,680 --> 00:55:41,520
credentials after we have sent the offer

1201
00:55:41,520 --> 00:55:43,760
we can only do it before which means

1202
00:55:43,760 --> 00:55:45,599
that at the moment we only support the

1203
00:55:45,599 --> 00:55:46,720
link

1204
00:55:46,720 --> 00:55:49,040
header when in response to the options

1205
00:55:49,040 --> 00:55:50,799
before the post which is a bit of a

1206
00:55:50,799 --> 00:55:53,359
limitation but hopefully that will be

1207
00:55:53,359 --> 00:55:55,760
overcome soon as well and finally at the

1208
00:55:55,760 --> 00:55:58,720
moment there's only sorry

1209
00:55:58,720 --> 00:56:00,799
at the moment this only supports linux

1210
00:56:00,799 --> 00:56:03,280
because that's what i use on my own

1211
00:56:03,280 --> 00:56:06,160
laptop but in theory it should be easy

1212
00:56:06,160 --> 00:56:08,079
enough to port it to windows and macos

1213
00:56:08,079 --> 00:56:09,440
as well i just don't have much

1214
00:56:09,440 --> 00:56:11,040
experience in development on those

1215
00:56:11,040 --> 00:56:12,559
environments so

1216
00:56:12,559 --> 00:56:14,240
since this is open source if you have a

1217
00:56:14,240 --> 00:56:16,079
bit of experience in updating the make

1218
00:56:16,079 --> 00:56:17,680
files to get it working there as well

1219
00:56:17,680 --> 00:56:20,880
i'd be this would be very welcome

1220
00:56:20,880 --> 00:56:23,359
and to conclude i mean this is how you

1221
00:56:23,359 --> 00:56:25,599
can basically start

1222
00:56:25,599 --> 00:56:27,280
with client session so for instance in

1223
00:56:27,280 --> 00:56:29,520
this case that address is actually

1224
00:56:29,520 --> 00:56:31,920
real so it's an address that i set up

1225
00:56:31,920 --> 00:56:34,240
for the academy last itf and it's still

1226
00:56:34,240 --> 00:56:36,480
active if you want to play with it a bit

1227
00:56:36,480 --> 00:56:38,400
so if you send

1228
00:56:38,400 --> 00:56:40,400
if you create a web session a ted

1229
00:56:40,400 --> 00:56:42,400
address with that token

1230
00:56:42,400 --> 00:56:44,160
then you can just choose what you want

1231
00:56:44,160 --> 00:56:47,760
to send as audio and video uh

1232
00:56:47,760 --> 00:56:50,160
streams and then that should just work

1233
00:56:50,160 --> 00:56:52,400
and you can test it

1234
00:56:52,400 --> 00:56:54,559
using this web page over here so since

1235
00:56:54,559 --> 00:56:56,079
basically the

1236
00:56:56,079 --> 00:56:58,559
uh the whip the web server

1237
00:56:58,559 --> 00:57:00,240
talks to john's to create a fake

1238
00:57:00,240 --> 00:57:02,559
participant in a room basically all you

1239
00:57:02,559 --> 00:57:04,000
need to make sure that it is actually

1240
00:57:04,000 --> 00:57:06,079
working is joining the same room somehow

1241
00:57:06,079 --> 00:57:08,400
so that link allows you to join as a

1242
00:57:08,400 --> 00:57:10,559
passive participant if you see something

1243
00:57:10,559 --> 00:57:12,799
everything is working and in this case

1244
00:57:12,799 --> 00:57:14,240
we are capturing

1245
00:57:14,240 --> 00:57:16,160
a fake audio source and a fake video

1246
00:57:16,160 --> 00:57:17,599
series but this could be an actual

1247
00:57:17,599 --> 00:57:19,280
webcam this could be

1248
00:57:19,280 --> 00:57:21,119
streaming from a file or something else

1249
00:57:21,119 --> 00:57:22,799
so everything that gstreamer supports

1250
00:57:22,799 --> 00:57:24,480
you can actually capture here basically

1251
00:57:24,480 --> 00:57:27,200
that's the the main idea

1252
00:57:27,200 --> 00:57:29,599
and just to just a couple of notes on

1253
00:57:29,599 --> 00:57:31,440
the tags so i started experimenting with

1254
00:57:31,440 --> 00:57:32,960
those as well

1255
00:57:32,960 --> 00:57:35,200
in a couple of pull requests and right

1256
00:57:35,200 --> 00:57:37,280
now i made some assumptions and some of

1257
00:57:37,280 --> 00:57:39,520
those we have also addressed them

1258
00:57:39,520 --> 00:57:41,040
in the discussion before so i won't

1259
00:57:41,040 --> 00:57:44,558
bother you too much with those

1260
00:57:45,200 --> 00:57:47,440
i was i just wanted to conclude with the

1261
00:57:47,440 --> 00:57:48,880
the fact that with the web client you

1262
00:57:48,880 --> 00:57:50,559
can actually do some experimentation as

1263
00:57:50,559 --> 00:57:52,880
well so if you do want to make some

1264
00:57:52,880 --> 00:57:54,799
experimentations in early prototyping

1265
00:57:54,799 --> 00:57:56,720
with whip and webrtc in general it may

1266
00:57:56,720 --> 00:57:58,960
be a useful tool because for instance

1267
00:57:58,960 --> 00:58:00,559
one aspect that is important in

1268
00:58:00,559 --> 00:58:02,480
broadcasting is the ability to use

1269
00:58:02,480 --> 00:58:04,960
existing broadcasting tools

1270
00:58:04,960 --> 00:58:06,880
for webrtc as well which is the main

1271
00:58:06,880 --> 00:58:09,200
reason why webrtc has not been adopted

1272
00:58:09,200 --> 00:58:11,680
much in the broadcaster industry so far

1273
00:58:11,680 --> 00:58:13,760
mainly because tools like obs that

1274
00:58:13,760 --> 00:58:15,920
pretty much all streamers use do not

1275
00:58:15,920 --> 00:58:18,480
support webrtc out of the box so i

1276
00:58:18,480 --> 00:58:20,960
wanted to check if i could actually

1277
00:58:20,960 --> 00:58:23,839
already used web obs as a way to produce

1278
00:58:23,839 --> 00:58:25,280
a stream and then

1279
00:58:25,280 --> 00:58:27,280
send it to voip rtc somehow and i

1280
00:58:27,280 --> 00:58:29,839
prototype a prototype the way using an

1281
00:58:29,839 --> 00:58:31,680
intermediate technology that is called

1282
00:58:31,680 --> 00:58:33,359
ndi which is basically a standard

1283
00:58:33,359 --> 00:58:35,599
defacto in the broadcaster industry

1284
00:58:35,599 --> 00:58:38,400
basically i had obs i produced something

1285
00:58:38,400 --> 00:58:42,000
in obs configured an ndi output in obs

1286
00:58:42,000 --> 00:58:44,559
and since gstreamer has a plugin to use

1287
00:58:44,559 --> 00:58:46,319
ndi as a source

1288
00:58:46,319 --> 00:58:48,559
all i needed to do was start the web

1289
00:58:48,559 --> 00:58:51,040
clients to capture from the ndi source

1290
00:58:51,040 --> 00:58:52,960
that was generated possibly on another

1291
00:58:52,960 --> 00:58:54,559
laptop over there

1292
00:58:54,559 --> 00:58:56,880
and then capture what obs was producing

1293
00:58:56,880 --> 00:58:59,839
and send it via webrtc to janus which is

1294
00:58:59,839 --> 00:59:01,359
what i did in

1295
00:59:01,359 --> 00:59:05,240
in these very silly

1296
00:59:08,799 --> 00:59:10,960
this very silly demo over here where i

1297
00:59:10,960 --> 00:59:12,960
was capturing myself playing guitar i

1298
00:59:12,960 --> 00:59:15,040
did a lot of gifs like this was a 90s

1299
00:59:15,040 --> 00:59:16,079
website

1300
00:59:16,079 --> 00:59:18,559
and then basically started

1301
00:59:18,559 --> 00:59:21,040
i produced this stream live and then vi

1302
00:59:21,040 --> 00:59:22,880
and d i passed it to the web client the

1303
00:59:22,880 --> 00:59:25,839
web client sent it to janus and i had

1304
00:59:25,839 --> 00:59:27,839
in a demo there were about 20 people

1305
00:59:27,839 --> 00:59:30,319
watching the webrtc concert in real time

1306
00:59:30,319 --> 00:59:32,160
basically that was the idea but of

1307
00:59:32,160 --> 00:59:34,079
course this there are more interesting

1308
00:59:34,079 --> 00:59:35,760
things that you can do beyond beyond the

1309
00:59:35,760 --> 00:59:37,440
silly experiment that i did because for

1310
00:59:37,440 --> 00:59:39,839
instance just this week sergio used the

1311
00:59:39,839 --> 00:59:42,400
web client to prototype adding support

1312
00:59:42,400 --> 00:59:43,200
for

1313
00:59:43,200 --> 00:59:46,480
new pixel formats and h.264 profiles in

1314
00:59:46,480 --> 00:59:48,640
chrome itself because basically

1315
00:59:48,640 --> 00:59:50,559
gstreamer allows you to encode

1316
00:59:50,559 --> 00:59:52,000
everything the way that you want which

1317
00:59:52,000 --> 00:59:53,680
means that you can easily

1318
00:59:53,680 --> 00:59:55,839
inject a webrtc stream that is not

1319
00:59:55,839 --> 00:59:58,000
strictly what the webrtc browser expects

1320
00:59:58,000 --> 00:59:59,040
so

1321
00:59:59,040 --> 01:00:01,119
you can create something and then check

1322
01:00:01,119 --> 01:00:03,040
what the browser will accept or not that

1323
01:00:03,040 --> 01:00:04,160
way

1324
01:00:04,160 --> 01:00:05,839
and that is basically all so i don't

1325
01:00:05,839 --> 01:00:07,520
know if i have time for questions or if

1326
01:00:07,520 --> 01:00:08,960
you have any in the first place thank

1327
01:00:08,960 --> 01:00:11,119
you

1328
01:00:12,880 --> 01:00:16,079
i think we're at the top of the hour but

1329
01:00:16,079 --> 01:00:19,599
see are there any questions

1330
01:00:22,160 --> 01:00:25,040
otherwise thank you renzo

1331
01:00:25,040 --> 01:00:26,000
always

1332
01:00:26,000 --> 01:00:28,799
helpful to get feedback from actual

1333
01:00:28,799 --> 01:00:30,559
implementations

1334
01:00:30,559 --> 01:00:33,440
um and with that i think

1335
01:00:33,440 --> 01:00:35,440
thank you for attending wish sounds like

1336
01:00:35,440 --> 01:00:36,640
we're

1337
01:00:36,640 --> 01:00:38,960
good track to

1338
01:00:38,960 --> 01:00:40,559
make it to working group last call

1339
01:00:40,559 --> 01:00:42,319
pretty soon

1340
01:00:42,319 --> 01:00:43,839
and

1341
01:00:43,839 --> 01:00:46,000
sean and me will

1342
01:00:46,000 --> 01:00:49,040
take the item to figure out

1343
01:00:49,040 --> 01:00:50,480
what to do with

1344
01:00:50,480 --> 01:00:53,599
extensions regarding metadata and

1345
01:00:53,599 --> 01:00:57,040
subtitles and that kind of stuff

1346
01:00:57,040 --> 01:00:59,200
thank you very much for indian english

1347
01:00:59,200 --> 01:01:01,839
and hopefully we have a

1348
01:01:01,839 --> 01:01:05,839
good and nice remaining itf week

1349
01:01:06,799 --> 01:01:08,640
yeah and sorry for the chair fell there

1350
01:01:08,640 --> 01:01:12,000
at the beginning oh yes sorry about that

1351
01:01:12,000 --> 01:01:14,160
um

1352
01:01:14,480 --> 01:01:16,559
my chrome had like uh asked before

1353
01:01:16,559 --> 01:01:18,240
permissions to do the screen recording

1354
01:01:18,240 --> 01:01:19,119
again

1355
01:01:19,119 --> 01:01:20,559
which would have required like to

1356
01:01:20,559 --> 01:01:23,200
restore chrome

1357
01:01:23,359 --> 01:01:27,319
i should have tested that before

