1
00:00:07,040 --> 00:00:10,040
so

2
00:00:28,320 --> 00:00:31,320
foreign

3
00:00:41,920 --> 00:00:45,200
it's almost time but um

4
00:00:45,200 --> 00:00:47,120
let's see

5
00:00:47,120 --> 00:00:48,320
okay

6
00:00:48,320 --> 00:00:50,239
number of people

7
00:00:50,239 --> 00:00:53,280
is getting increased

8
00:00:53,280 --> 00:00:55,520
i can wait one

9
00:00:55,520 --> 00:00:58,680
two minutes

10
00:01:13,439 --> 00:01:16,439
uh

11
00:01:26,640 --> 00:01:29,640
okay

12
00:01:40,320 --> 00:01:41,920
okay

13
00:01:41,920 --> 00:01:45,600
looks like we can start

14
00:01:46,079 --> 00:01:48,398
right

15
00:01:50,799 --> 00:01:53,200
okay so

16
00:01:53,200 --> 00:01:55,840
the decision

17
00:01:56,960 --> 00:01:59,600
hey hello everyone

18
00:01:59,600 --> 00:02:04,479
um i hear some items somewhere

19
00:02:06,719 --> 00:02:09,598
okay hello everyone uh i think i can

20
00:02:09,598 --> 00:02:10,959
hear you

21
00:02:10,959 --> 00:02:12,560
you can hear me

22
00:02:12,560 --> 00:02:14,160
um

23
00:02:14,160 --> 00:02:16,319
so this is our dcpm working group

24
00:02:16,319 --> 00:02:18,879
meeting tcp maintenance under my neck

25
00:02:18,879 --> 00:02:20,720
station working group

26
00:02:20,720 --> 00:02:22,959
and this working group has three

27
00:02:22,959 --> 00:02:26,160
co-chairs my name is yoshi nishida and

28
00:02:26,160 --> 00:02:28,319
we have ian here

29
00:02:28,319 --> 00:02:30,560
and michael here

30
00:02:30,560 --> 00:02:31,680
everyone

31
00:02:31,680 --> 00:02:33,519
in remote

32
00:02:33,519 --> 00:02:36,080
and just in case uh this session is

33
00:02:36,080 --> 00:02:38,879
being recorded so it will be published

34
00:02:38,879 --> 00:02:41,519
eventually so here in the remote make

35
00:02:41,519 --> 00:02:44,239
sure you have already cleaned the room

36
00:02:44,239 --> 00:02:46,640
otherwise it will be published

37
00:02:46,640 --> 00:02:48,958
okay

38
00:02:49,360 --> 00:02:51,280
and this is i

39
00:02:51,280 --> 00:02:53,760
use a node well i think you have already

40
00:02:53,760 --> 00:02:57,200
seen this several times already so in a

41
00:02:57,200 --> 00:02:58,959
nutshell

42
00:02:58,959 --> 00:03:01,200
this basically describes how to

43
00:03:01,200 --> 00:03:04,080
participate how to contribute to the idf

44
00:03:04,080 --> 00:03:07,200
and which point you should be available

45
00:03:07,200 --> 00:03:09,760
and if you have any concerns about

46
00:03:09,760 --> 00:03:12,480
participating or contributing the idea

47
00:03:12,480 --> 00:03:14,159
please read this

48
00:03:14,159 --> 00:03:16,159
slide very carefully

49
00:03:16,159 --> 00:03:17,360
and then

50
00:03:17,360 --> 00:03:19,599
if you you know you can find the same

51
00:03:19,599 --> 00:03:21,920
content on the idf webpage you can

52
00:03:21,920 --> 00:03:26,079
search and you can find it very easily

53
00:03:28,080 --> 00:03:30,239
and then

54
00:03:30,239 --> 00:03:32,879
so this is a special tips for

55
00:03:32,879 --> 00:03:34,799
this idea meeting

56
00:03:34,799 --> 00:03:37,920
so if you are on site please make sure

57
00:03:37,920 --> 00:03:41,680
to sign in the session by using media go

58
00:03:41,680 --> 00:03:44,560
and also when you speak up

59
00:03:44,560 --> 00:03:47,840
please use medical to join the mic you

60
00:03:47,840 --> 00:03:51,120
and please keep audio and the video off

61
00:03:51,120 --> 00:03:53,360
while you know you unless you are using

62
00:03:53,360 --> 00:03:56,560
uh on sidebar mid ago

63
00:03:56,560 --> 00:03:58,080
and if you are

64
00:03:58,080 --> 00:04:00,640
remote if you remote participant uh

65
00:04:00,640 --> 00:04:02,239
please make sure your audio and the

66
00:04:02,239 --> 00:04:04,720
video of undersea and ask unless you're

67
00:04:04,720 --> 00:04:05,920
speaking

68
00:04:05,920 --> 00:04:08,640
and then use your headset as much as

69
00:04:08,640 --> 00:04:11,119
possible

70
00:04:12,640 --> 00:04:15,920
okay and then this is a resource for

71
00:04:15,920 --> 00:04:18,560
this itf meeting

72
00:04:18,560 --> 00:04:20,880
you can find the entire agenda on this

73
00:04:20,880 --> 00:04:22,560
first url

74
00:04:22,560 --> 00:04:24,240
and they if you want to get more

75
00:04:24,240 --> 00:04:26,000
information about mid echo weather

76
00:04:26,000 --> 00:04:30,160
information you can use the second url

77
00:04:30,160 --> 00:04:32,400
and if you have any you know technical

78
00:04:32,400 --> 00:04:34,639
issues or other reports other issues you

79
00:04:34,639 --> 00:04:36,000
want to report

80
00:04:36,000 --> 00:04:39,600
please use the third link

81
00:04:40,800 --> 00:04:42,479
moving beyond

82
00:04:42,479 --> 00:04:44,400
logistics

83
00:04:44,400 --> 00:04:46,880
um so richard will be in charge of not

84
00:04:46,880 --> 00:04:49,919
taking thank you so much richard

85
00:04:49,919 --> 00:04:52,160
and michael will take care of

86
00:04:52,160 --> 00:04:53,600
javascript

87
00:04:53,600 --> 00:04:56,080
thank you so much michael

88
00:04:56,080 --> 00:04:56,960
and

89
00:04:56,960 --> 00:04:59,040
this is short reminder so when you

90
00:04:59,040 --> 00:05:00,080
submit

91
00:05:00,080 --> 00:05:02,080
your internet draft to this working

92
00:05:02,080 --> 00:05:03,680
group please

93
00:05:03,680 --> 00:05:05,600
include tcpm

94
00:05:05,600 --> 00:05:08,800
as the name of your draft otherwise

95
00:05:08,800 --> 00:05:10,400
we cannot track

96
00:05:10,400 --> 00:05:12,880
the status of the draft so please keep

97
00:05:12,880 --> 00:05:15,680
this in your mind

98
00:05:17,600 --> 00:05:20,479
and then this is agenda for the today's

99
00:05:20,479 --> 00:05:22,080
meeting

100
00:05:22,080 --> 00:05:23,919
so we are starting from working group

101
00:05:23,919 --> 00:05:25,520
status

102
00:05:25,520 --> 00:05:28,000
and then after that we have

103
00:05:28,000 --> 00:05:30,400
uh three presentation for working group

104
00:05:30,400 --> 00:05:31,520
document

105
00:05:31,520 --> 00:05:33,039
um at first

106
00:05:33,039 --> 00:05:36,080
probing we'll talk about i start draft

107
00:05:36,080 --> 00:05:36,840
and

108
00:05:36,840 --> 00:05:40,560
then bd will talk about the cubic draft

109
00:05:40,560 --> 00:05:44,080
after that bob will talk about acura dcn

110
00:05:44,080 --> 00:05:45,840
updates

111
00:05:45,840 --> 00:05:47,759
and after working group documents

112
00:05:47,759 --> 00:05:50,560
presentation we have three presentation

113
00:05:50,560 --> 00:05:53,680
for non-working group document

114
00:05:53,680 --> 00:05:56,080
first chorus will talk about tcp

115
00:05:56,080 --> 00:05:58,080
accurate request

116
00:05:58,080 --> 00:06:00,720
and then after that peng will talk about

117
00:06:00,720 --> 00:06:04,400
update for mbtcp lobby

118
00:06:04,400 --> 00:06:05,600
and then

119
00:06:05,600 --> 00:06:09,360
after that maxim will talk about tgprs

120
00:06:09,360 --> 00:06:12,160
modern transport service based tcp and

121
00:06:12,160 --> 00:06:13,759
trs

122
00:06:13,759 --> 00:06:16,080
so this is the agenda for today

123
00:06:16,080 --> 00:06:19,120
any question or comment or suggestion on

124
00:06:19,120 --> 00:06:21,840
this agenda

125
00:06:23,919 --> 00:06:26,160
okay

126
00:06:26,160 --> 00:06:28,160
then we'll be on to the working group

127
00:06:28,160 --> 00:06:30,639
status

128
00:06:32,240 --> 00:06:35,120
so as you might already notice

129
00:06:35,120 --> 00:06:37,600
there are some personal updates in the

130
00:06:37,600 --> 00:06:39,199
working group

131
00:06:39,199 --> 00:06:39,919
and

132
00:06:39,919 --> 00:06:42,639
very unfortunately uh michael decided to

133
00:06:42,639 --> 00:06:44,720
step down as a chair

134
00:06:44,720 --> 00:06:47,360
but we really really appreciate his

135
00:06:47,360 --> 00:06:50,000
long-term contribution dedication to the

136
00:06:50,000 --> 00:06:51,120
idea

137
00:06:51,120 --> 00:06:54,160
and to this working group

138
00:06:54,160 --> 00:06:57,360
i really really appreciate it i i

139
00:06:57,360 --> 00:06:59,440
learned him a lot he learned from him a

140
00:06:59,440 --> 00:07:00,400
lot

141
00:07:00,400 --> 00:07:04,400
and then um we have a new concierge ian

142
00:07:04,400 --> 00:07:05,520
and

143
00:07:05,520 --> 00:07:08,319
thank you so much for taking this role

144
00:07:08,319 --> 00:07:10,960
here you have some words

145
00:07:10,960 --> 00:07:12,479
thank you um yeah i'm really excited

146
00:07:12,479 --> 00:07:14,639
obviously i'm extremely familiar with

147
00:07:14,639 --> 00:07:16,400
with quick and um

148
00:07:16,400 --> 00:07:18,720
to you know congestion control work like

149
00:07:18,720 --> 00:07:20,000
ppr and

150
00:07:20,000 --> 00:07:22,400
and such and i'm excited to

151
00:07:22,400 --> 00:07:24,720
um kind of get a better visibility into

152
00:07:24,720 --> 00:07:27,440
the innovations in tcp and

153
00:07:27,440 --> 00:07:28,319
um

154
00:07:28,319 --> 00:07:30,639
you know help wherever i can to to make

155
00:07:30,639 --> 00:07:33,280
sure that tcp is awesome is quick

156
00:07:33,280 --> 00:07:36,719
so that's kind of how i think about it

157
00:07:36,960 --> 00:07:39,359
thank you

158
00:07:40,240 --> 00:07:42,800
okay moving on

159
00:07:42,800 --> 00:07:44,720
so working group documents so we have

160
00:07:44,720 --> 00:07:47,680
several working group documents um so ao

161
00:07:47,680 --> 00:07:49,759
test vector draft

162
00:07:49,759 --> 00:07:52,720
the current status of this draft is rfc

163
00:07:52,720 --> 00:07:53,440
in

164
00:07:53,440 --> 00:07:54,720
exaq

165
00:07:54,720 --> 00:07:55,759
so

166
00:07:55,759 --> 00:07:59,520
this draft will be published very soon

167
00:07:59,520 --> 00:08:01,840
so young pcb draft

168
00:08:01,840 --> 00:08:03,759
this draft is under

169
00:08:03,759 --> 00:08:06,879
is ies

170
00:08:10,840 --> 00:08:14,800
review 793 bits draft this is this draft

171
00:08:14,800 --> 00:08:18,960
is currently under isc evaluation

172
00:08:18,960 --> 00:08:22,240
and ad3 12 bits draft and this graph

173
00:08:22,240 --> 00:08:24,560
will be discussed in the meeting

174
00:08:24,560 --> 00:08:25,440
and

175
00:08:25,440 --> 00:08:28,319
so hopefully we can finalize this draft

176
00:08:28,319 --> 00:08:29,199
and

177
00:08:29,199 --> 00:08:31,440
high star star high start plus press

178
00:08:31,440 --> 00:08:33,679
draft and this draft will also be

179
00:08:33,679 --> 00:08:35,839
discussed in the meeting

180
00:08:35,839 --> 00:08:38,640
and then accurate edition and draft

181
00:08:38,640 --> 00:08:41,039
this draft will also be discussed in the

182
00:08:41,039 --> 00:08:42,000
meeting

183
00:08:42,000 --> 00:08:44,560
and then we believe with all three this

184
00:08:44,560 --> 00:08:45,600
draft

185
00:08:45,600 --> 00:08:48,480
uh getting close to be finalized that's

186
00:08:48,480 --> 00:08:50,000
expectation

187
00:08:50,000 --> 00:08:51,120
and then

188
00:08:51,120 --> 00:08:54,560
um generalized issue and draft this

189
00:08:54,560 --> 00:08:58,399
draft has been on hold for a while

190
00:08:58,399 --> 00:09:00,800
and the reason why it has been on hold

191
00:09:00,800 --> 00:09:01,600
is

192
00:09:01,600 --> 00:09:04,959
that this truck depends on accurate dcn

193
00:09:04,959 --> 00:09:05,920
but

194
00:09:05,920 --> 00:09:07,279
we have

195
00:09:07,279 --> 00:09:09,519
very long discussion on accuracy and

196
00:09:09,519 --> 00:09:11,760
draft that's why you know this general

197
00:09:11,760 --> 00:09:14,000
edition drought has been suspended for a

198
00:09:14,000 --> 00:09:15,120
long time

199
00:09:15,120 --> 00:09:18,080
but uh i think the current status of our

200
00:09:18,080 --> 00:09:20,640
tradition is you know getting mature

201
00:09:20,640 --> 00:09:23,279
it's getting close to be finalized so i

202
00:09:23,279 --> 00:09:24,080
think

203
00:09:24,080 --> 00:09:26,480
we can start proceeding generally each

204
00:09:26,480 --> 00:09:28,399
and drop very soon

205
00:09:28,399 --> 00:09:31,920
that is expectation

206
00:09:32,160 --> 00:09:35,120
and for idio draft

207
00:09:35,120 --> 00:09:37,600
joe sometimes updates the draft some

208
00:09:37,600 --> 00:09:39,839
sometimes send a message to the mailing

209
00:09:39,839 --> 00:09:40,880
list

210
00:09:40,880 --> 00:09:44,720
but the problem of this uh draft is we

211
00:09:44,720 --> 00:09:46,640
don't have

212
00:09:46,640 --> 00:09:49,360
many feedback on this draft so it's very

213
00:09:49,360 --> 00:09:52,399
difficult for chairs to think about how

214
00:09:52,399 --> 00:09:54,160
to proceed this draft

215
00:09:54,160 --> 00:09:56,080
so i would like to talk about this

216
00:09:56,080 --> 00:09:58,160
traffic a little bit more in my final

217
00:09:58,160 --> 00:10:01,120
slide so i will you know talk about this

218
00:10:01,120 --> 00:10:02,839
later

219
00:10:02,839 --> 00:10:04,560
and

220
00:10:04,560 --> 00:10:05,360
then

221
00:10:05,360 --> 00:10:07,920
the final one is 69

222
00:10:07,920 --> 00:10:10,079
37 bits drafts

223
00:10:10,079 --> 00:10:12,880
and this draft has been inactive for a

224
00:10:12,880 --> 00:10:14,079
while

225
00:10:14,079 --> 00:10:16,640
but uh as far as we exchange email with

226
00:10:16,640 --> 00:10:18,640
the authors

227
00:10:18,640 --> 00:10:20,880
they also is planning to publish new

228
00:10:20,880 --> 00:10:22,640
version very soon

229
00:10:22,640 --> 00:10:25,760
and so once they have published the new

230
00:10:25,760 --> 00:10:28,079
version we can think about how to

231
00:10:28,079 --> 00:10:29,600
proceed the draft

232
00:10:29,600 --> 00:10:31,600
so that's a plan

233
00:10:31,600 --> 00:10:32,399
so

234
00:10:32,399 --> 00:10:34,320
that's you know current status of the

235
00:10:34,320 --> 00:10:36,000
working document

236
00:10:36,000 --> 00:10:39,360
any questions or comments on the working

237
00:10:39,360 --> 00:10:42,079
group documents

238
00:10:43,760 --> 00:10:45,279
so this is a richard

239
00:10:45,279 --> 00:10:46,640
just the general

240
00:10:46,640 --> 00:10:48,640
observation i don't think we need to

241
00:10:48,640 --> 00:10:50,959
wait with generous ecn on any of the

242
00:10:50,959 --> 00:10:52,800
other stuff really

243
00:10:52,800 --> 00:10:54,800
quite the opposite so i would really

244
00:10:54,800 --> 00:10:57,680
appreciate it if generalized ecn

245
00:10:57,680 --> 00:11:01,200
would proceed perhaps we can start

246
00:11:01,200 --> 00:11:03,360
thinking about even going working group

247
00:11:03,360 --> 00:11:05,600
last call because quite frankly there's

248
00:11:05,600 --> 00:11:07,839
no i don't see any technical

249
00:11:07,839 --> 00:11:10,079
discussion going on around that

250
00:11:10,079 --> 00:11:12,640
while there is also technical merit to

251
00:11:12,640 --> 00:11:15,120
be had from generalized ecm

252
00:11:15,120 --> 00:11:16,560
okay

253
00:11:16,560 --> 00:11:19,680
that's fine okay then uh richard now you

254
00:11:19,680 --> 00:11:21,440
can initiate mail

255
00:11:21,440 --> 00:11:22,959
send the email to the mailing list and

256
00:11:22,959 --> 00:11:24,800
the initial discussion and then we can

257
00:11:24,800 --> 00:11:26,880
think about you know if we can it's

258
00:11:26,880 --> 00:11:30,800
ready for working lupus core or not

259
00:11:32,640 --> 00:11:34,800
yeah

260
00:11:35,120 --> 00:11:37,600
that would be fine um it has a normative

261
00:11:37,600 --> 00:11:41,040
reference to equity again so it could go

262
00:11:41,040 --> 00:11:43,440
through um

263
00:11:43,440 --> 00:11:46,079
the isg

264
00:11:46,959 --> 00:11:48,480
waiting director eastern if it went

265
00:11:48,480 --> 00:11:49,680
first but that

266
00:11:49,680 --> 00:11:52,000
might be better to get it out of the way

267
00:11:52,000 --> 00:11:53,680
um

268
00:11:53,680 --> 00:11:57,359
rather than really admit

269
00:12:00,320 --> 00:12:02,480
can you not hear me

270
00:12:02,480 --> 00:12:04,639
it's a little difficult to hear you

271
00:12:04,639 --> 00:12:05,920
sorry

272
00:12:05,920 --> 00:12:07,760
so if you can if i can improve your

273
00:12:07,760 --> 00:12:09,040
settings

274
00:12:09,040 --> 00:12:10,560
before the presentation that would be

275
00:12:10,560 --> 00:12:11,680
great

276
00:12:11,680 --> 00:12:15,359
so what's the problem just volume

277
00:12:15,839 --> 00:12:18,800
no it's not volume

278
00:12:19,440 --> 00:12:21,200
like heading out i think

279
00:12:21,200 --> 00:12:25,240
at least that's what it was for me

280
00:12:28,730 --> 00:12:31,789
[Music]

281
00:12:36,240 --> 00:12:39,240
okay

282
00:12:40,720 --> 00:12:43,120
okay

283
00:12:45,519 --> 00:12:46,399
so

284
00:12:46,399 --> 00:12:48,720
you hear what i said

285
00:12:48,720 --> 00:12:52,760
about what richard said

286
00:12:56,320 --> 00:12:58,720
if you can repeat it for this

287
00:12:58,720 --> 00:13:01,440
okay i i just said there's a normative

288
00:13:01,440 --> 00:13:04,639
reference from um in generalized vcn

289
00:13:04,639 --> 00:13:07,440
so

290
00:13:16,959 --> 00:13:18,480
would be fine you know at least it would

291
00:13:18,480 --> 00:13:22,399
be out of the working group but it um

292
00:13:22,399 --> 00:13:24,639
and that that

293
00:13:24,639 --> 00:13:26,800
okay

294
00:13:26,800 --> 00:13:28,959
yeah

295
00:13:30,560 --> 00:13:33,200
basically i got it it's a little tricky

296
00:13:33,200 --> 00:13:35,279
so oh sorry

297
00:13:35,279 --> 00:13:36,320
yes

298
00:13:36,320 --> 00:13:38,880
that's okay

299
00:13:39,040 --> 00:13:40,880
okay

300
00:13:40,880 --> 00:13:44,560
let's move on to the next slide

301
00:13:45,600 --> 00:13:47,760
so this is my final slide

302
00:13:47,760 --> 00:13:48,720
so i

303
00:13:48,720 --> 00:13:50,800
like to talk about idio draft a little

304
00:13:50,800 --> 00:13:54,240
bit more and as i mentioned

305
00:13:54,240 --> 00:13:56,720
the problem of this draft is we have

306
00:13:56,720 --> 00:13:59,519
very little feedback on this draft

307
00:13:59,519 --> 00:14:00,320
so

308
00:14:00,320 --> 00:14:03,199
what i'm thinking right now is you know

309
00:14:03,199 --> 00:14:05,040
we can you know have some kind of

310
00:14:05,040 --> 00:14:07,680
specific reviewer for this draft

311
00:14:07,680 --> 00:14:09,760
and then if we can get very detailed

312
00:14:09,760 --> 00:14:11,519
feedback on this trust from the

313
00:14:11,519 --> 00:14:15,279
reviewers we can have a very good idea

314
00:14:15,279 --> 00:14:17,680
about how to proceed draft

315
00:14:17,680 --> 00:14:22,560
so if you are interested in living draft

316
00:14:22,720 --> 00:14:24,399
this is a very good chance for you to

317
00:14:24,399 --> 00:14:26,880
speak up so anyone

318
00:14:26,880 --> 00:14:29,760
interested in leaving this draft

319
00:14:29,760 --> 00:14:33,920
please speak up right now

320
00:14:36,399 --> 00:14:39,680
um i think i could at least um

321
00:14:39,680 --> 00:14:41,360
read it and

322
00:14:41,360 --> 00:14:46,000
see whether i can offer any anything

323
00:14:46,000 --> 00:14:50,160
okay great thank you so much jonathan

324
00:14:50,160 --> 00:14:53,279
it will be good if i can have one more

325
00:14:53,279 --> 00:14:57,320
review if possible

326
00:15:01,600 --> 00:15:02,720
okay

327
00:15:02,720 --> 00:15:05,040
yeah if not no after some discussion

328
00:15:05,040 --> 00:15:07,519
among cheers we might contact some of

329
00:15:07,519 --> 00:15:08,720
you

330
00:15:08,720 --> 00:15:10,839
asked for asking you know

331
00:15:10,839 --> 00:15:13,920
reviewing but that's a plan

332
00:15:13,920 --> 00:15:16,480
and then also if you have some

333
00:15:16,480 --> 00:15:18,880
implementation experience for idio draft

334
00:15:18,880 --> 00:15:20,480
or if you are planned

335
00:15:20,480 --> 00:15:23,120
if you plan to implement idio draft

336
00:15:23,120 --> 00:15:25,680
please uh the information such kind of

337
00:15:25,680 --> 00:15:28,320
information will also be very useful

338
00:15:28,320 --> 00:15:30,160
for us to think about

339
00:15:30,160 --> 00:15:32,320
how to proceed this draft so we

340
00:15:32,320 --> 00:15:35,199
appreciate your cooperation

341
00:15:35,199 --> 00:15:36,800
and then

342
00:15:36,800 --> 00:15:38,480
in the meantime

343
00:15:38,480 --> 00:15:41,360
i also like to think about how to you

344
00:15:41,360 --> 00:15:44,959
know proceed scene option extension

345
00:15:44,959 --> 00:15:48,399
and joe has a one proposal to about

346
00:15:48,399 --> 00:15:51,279
slashing option space extension

347
00:15:51,279 --> 00:15:54,079
and this program the program of this

348
00:15:54,079 --> 00:15:56,160
draft is also we don't we have very

349
00:15:56,160 --> 00:15:58,399
little feedback on this draft and then

350
00:15:58,399 --> 00:16:00,399
joe is saying that's no

351
00:16:00,399 --> 00:16:02,560
he is thinking about you know submitting

352
00:16:02,560 --> 00:16:05,120
this draft as an independent stream

353
00:16:05,120 --> 00:16:06,240
but uh

354
00:16:06,240 --> 00:16:07,759
um

355
00:16:07,759 --> 00:16:10,800
i'm not sure this is a great idea

356
00:16:10,800 --> 00:16:13,360
the one reason for that is uh

357
00:16:13,360 --> 00:16:16,399
option extension is very fundamental for

358
00:16:16,399 --> 00:16:17,680
this respect

359
00:16:17,680 --> 00:16:21,519
so having this kind of proposal in as in

360
00:16:21,519 --> 00:16:23,600
as an independent stream is a great idea

361
00:16:23,600 --> 00:16:26,800
or not but we still have a don't have

362
00:16:26,800 --> 00:16:28,880
don't have a specific feedback on this

363
00:16:28,880 --> 00:16:31,440
point so we don't know

364
00:16:31,440 --> 00:16:34,079
if this is okay or if this is not okay

365
00:16:34,079 --> 00:16:37,040
well we should adapt it as this is a

366
00:16:37,040 --> 00:16:38,320
great idea

367
00:16:38,320 --> 00:16:40,720
so and then we also would like to think

368
00:16:40,720 --> 00:16:41,920
about

369
00:16:41,920 --> 00:16:43,360
uh

370
00:16:43,360 --> 00:16:44,399
how to

371
00:16:44,399 --> 00:16:46,880
extend option space in general not only

372
00:16:46,880 --> 00:16:49,519
specifically those proposals if you have

373
00:16:49,519 --> 00:16:53,519
any you know idea or opinions sold

374
00:16:53,519 --> 00:16:54,959
please share

375
00:16:54,959 --> 00:16:57,920
so we really appreciate your feedback

376
00:16:57,920 --> 00:17:02,839
any comments or thoughts

377
00:17:11,679 --> 00:17:13,919
wait

378
00:17:15,359 --> 00:17:18,640
uh yeah i would say

379
00:17:18,640 --> 00:17:20,880
the options extension in general and the

380
00:17:20,880 --> 00:17:21,679
sin

381
00:17:21,679 --> 00:17:23,280
especially

382
00:17:23,280 --> 00:17:25,039
is uh something i've been interested in

383
00:17:25,039 --> 00:17:26,240
for a long time

384
00:17:26,240 --> 00:17:29,280
and ideally i think the working group

385
00:17:29,280 --> 00:17:31,440
would

386
00:17:31,440 --> 00:17:34,080
handle this and arrive at a consensus

387
00:17:34,080 --> 00:17:35,280
solution

388
00:17:35,280 --> 00:17:36,080
uh

389
00:17:36,080 --> 00:17:37,840
i think the

390
00:17:37,840 --> 00:17:39,360
independent stream

391
00:17:39,360 --> 00:17:42,159
path is

392
00:17:42,400 --> 00:17:44,400
a last resort if the working group

393
00:17:44,400 --> 00:17:46,880
doesn't have the interest or energy to

394
00:17:46,880 --> 00:17:49,039
do anything

395
00:17:49,039 --> 00:17:50,080
i think

396
00:17:50,080 --> 00:17:52,480
it makes sense to me because it comes up

397
00:17:52,480 --> 00:17:55,039
enough that something is needed that the

398
00:17:55,039 --> 00:17:56,480
independent path is a way to get

399
00:17:56,480 --> 00:17:57,840
something published that other people

400
00:17:57,840 --> 00:17:58,880
can

401
00:17:58,880 --> 00:18:01,280
use and experiment with but

402
00:18:01,280 --> 00:18:03,039
i think it's a last resort and it's not

403
00:18:03,039 --> 00:18:06,080
the ideal path at all

404
00:18:07,840 --> 00:18:10,240
thank you

405
00:18:13,360 --> 00:18:15,840
martin

406
00:18:21,679 --> 00:18:23,919
hi uh martin duke google um

407
00:18:23,919 --> 00:18:26,080
yeah i agree with wes it would be nice

408
00:18:26,080 --> 00:18:28,799
to get this done and if it's a question

409
00:18:28,799 --> 00:18:29,919
of

410
00:18:29,919 --> 00:18:31,280
bandwidth

411
00:18:31,280 --> 00:18:32,640
it just people want to review it but

412
00:18:32,640 --> 00:18:34,559
there's too many other things in tcpm

413
00:18:34,559 --> 00:18:37,840
right now then maybe we can make a

414
00:18:37,840 --> 00:18:39,280
commitment to

415
00:18:39,280 --> 00:18:41,360
like i don't know adopt it and then

416
00:18:41,360 --> 00:18:42,720
clear some space that people have the

417
00:18:42,720 --> 00:18:44,400
time or if people just aren't interested

418
00:18:44,400 --> 00:18:46,240
that's it that's maybe a different issue

419
00:18:46,240 --> 00:18:49,120
so i'm not sure what the nature of the

420
00:18:49,120 --> 00:18:52,159
of the reluctance is

421
00:18:57,280 --> 00:18:58,640
yeah so i

422
00:18:58,640 --> 00:19:01,200
also need my at least i need my feedback

423
00:19:01,200 --> 00:19:02,960
otherwise so this is so this is richard

424
00:19:02,960 --> 00:19:04,480
so i so from

425
00:19:04,480 --> 00:19:06,720
my ex observations over the last couple

426
00:19:06,720 --> 00:19:09,280
of years we've had a couple of years ago

427
00:19:09,280 --> 00:19:11,679
we had this push to get more option

428
00:19:11,679 --> 00:19:14,240
space and it was quite a high

429
00:19:14,240 --> 00:19:17,200
high on the agenda but since then um we

430
00:19:17,200 --> 00:19:19,520
didn't really find anything that had an

431
00:19:19,520 --> 00:19:20,799
immediate need

432
00:19:20,799 --> 00:19:23,440
for extended options right away

433
00:19:23,440 --> 00:19:24,799
however

434
00:19:24,799 --> 00:19:27,520
i would support what martin just said i

435
00:19:27,520 --> 00:19:30,080
think we should discuss adopting this

436
00:19:30,080 --> 00:19:32,000
and having it on the

437
00:19:32,000 --> 00:19:33,600
on the working groups

438
00:19:33,600 --> 00:19:36,000
agenda because eventually it will be

439
00:19:36,000 --> 00:19:38,480
coming up again and then it will be more

440
00:19:38,480 --> 00:19:40,559
urgent than ever probably at least in

441
00:19:40,559 --> 00:19:41,600
the beginning

442
00:19:41,600 --> 00:19:44,799
um at least at that time i would expect

443
00:19:44,799 --> 00:19:46,880
people will have some bandwidth to

444
00:19:46,880 --> 00:19:49,919
contribute and review

445
00:19:50,880 --> 00:19:52,799
so you are saying we should wait a

446
00:19:52,799 --> 00:19:54,400
little bit more we should start

447
00:19:54,400 --> 00:19:56,960
discussion very soon

448
00:19:56,960 --> 00:19:59,600
i think i think we should we should uh

449
00:19:59,600 --> 00:20:02,320
adopt i think we should adopt this but

450
00:20:02,320 --> 00:20:04,559
um and give it cons consideration just

451
00:20:04,559 --> 00:20:06,480
as much imagination

452
00:20:06,480 --> 00:20:09,039
and to see that we can work on this even

453
00:20:09,039 --> 00:20:11,760
not at a very high priority right now

454
00:20:11,760 --> 00:20:13,200
but eventually it should be a working

455
00:20:13,200 --> 00:20:14,880
group document

456
00:20:14,880 --> 00:20:17,600
i don't think that i i also believe what

457
00:20:17,600 --> 00:20:18,640
mentioned

458
00:20:18,640 --> 00:20:20,720
having as an independent stream is

459
00:20:20,720 --> 00:20:23,360
should only be the very last resort and

460
00:20:23,360 --> 00:20:24,880
i would personally i wouldn't really

461
00:20:24,880 --> 00:20:27,280
like that

462
00:20:29,039 --> 00:20:32,240
so i do want to clarify that um

463
00:20:32,240 --> 00:20:33,760
i was making a question not a statement

464
00:20:33,760 --> 00:20:37,360
like if the if the lack of reviews is

465
00:20:37,360 --> 00:20:40,400
is like indifference or bandwidth and if

466
00:20:40,400 --> 00:20:42,240
the question is bandwidth then i think

467
00:20:42,240 --> 00:20:44,559
we can make time for this and just maybe

468
00:20:44,559 --> 00:20:46,240
reduce our document intake or or

469
00:20:46,240 --> 00:20:47,840
whatever and then put it as like the

470
00:20:47,840 --> 00:20:49,840
last milestone

471
00:20:49,840 --> 00:20:51,679
um they're the furthest up milestone

472
00:20:51,679 --> 00:20:54,000
whereas if people just like don't care

473
00:20:54,000 --> 00:20:55,200
then

474
00:20:55,200 --> 00:20:57,600
then we shouldn't string along joe

475
00:20:57,600 --> 00:21:00,600
thanks

476
00:21:05,200 --> 00:21:08,080
okay thank you

477
00:21:09,440 --> 00:21:10,559
so

478
00:21:10,559 --> 00:21:12,880
if there is no more comments now we are

479
00:21:12,880 --> 00:21:16,840
moving on to the presentation

480
00:21:19,280 --> 00:21:21,200
i would like to ask the presenters to

481
00:21:21,200 --> 00:21:23,360
stay in the time

482
00:21:23,360 --> 00:21:26,000
they got for the presentations

483
00:21:26,000 --> 00:21:27,120
yeah

484
00:21:27,120 --> 00:21:28,720
okay

485
00:21:28,720 --> 00:21:31,280
let's move on to the presentation

486
00:21:31,280 --> 00:21:34,720
so probing it's your turn

487
00:21:39,280 --> 00:21:41,840
come here

488
00:21:42,000 --> 00:21:44,240
and you should share yours you can

489
00:21:44,240 --> 00:21:46,000
control your slide

490
00:21:46,000 --> 00:21:48,559
uh i sent uh

491
00:21:48,559 --> 00:21:50,559
thank you

492
00:21:50,559 --> 00:21:53,678
i just approved it for me

493
00:21:55,919 --> 00:21:56,720
okay

494
00:21:56,720 --> 00:21:58,880
great uh hello everyone i'm here to talk

495
00:21:58,880 --> 00:22:01,280
about uh high start plus plus uh so the

496
00:22:01,280 --> 00:22:03,679
current draft version is a draft version

497
00:22:03,679 --> 00:22:06,159
four um

498
00:22:06,159 --> 00:22:07,679
so

499
00:22:07,679 --> 00:22:09,760
uh this is a recap of the original idea

500
00:22:09,760 --> 00:22:12,080
when we first brought this to the tcpm

501
00:22:12,080 --> 00:22:13,679
working group so the problem we're

502
00:22:13,679 --> 00:22:15,520
trying to solve is

503
00:22:15,520 --> 00:22:17,520
the slow start overshoot problem so

504
00:22:17,520 --> 00:22:18,559
because

505
00:22:18,559 --> 00:22:20,480
we effectively double the window every

506
00:22:20,480 --> 00:22:21,919
round of time

507
00:22:21,919 --> 00:22:24,159
we can overshoot the ideal send rate and

508
00:22:24,159 --> 00:22:26,799
that causes massive packet losses

509
00:22:26,799 --> 00:22:28,480
uh which means you know more time spent

510
00:22:28,480 --> 00:22:30,080
in in recovery

511
00:22:30,080 --> 00:22:31,679
uh as well as increased packet

512
00:22:31,679 --> 00:22:33,760
retransmissions and sometimes we end up

513
00:22:33,760 --> 00:22:36,080
uh taking rto even with algorithms like

514
00:22:36,080 --> 00:22:38,080
rack

515
00:22:38,080 --> 00:22:40,799
so uh hyzer plus plus originally when we

516
00:22:40,799 --> 00:22:42,080
proposed it was a very simple

517
00:22:42,080 --> 00:22:45,280
modification and the idea was there to

518
00:22:45,280 --> 00:22:48,480
uh use delay inquiries to detect that um

519
00:22:48,480 --> 00:22:51,039
the um the queues are filling up and we

520
00:22:51,039 --> 00:22:53,200
basically exit slow start early before

521
00:22:53,200 --> 00:22:55,360
causing the packet loss

522
00:22:55,360 --> 00:22:58,480
and then we included a compensation for

523
00:22:58,480 --> 00:23:00,799
any premature slow start exit so in

524
00:23:00,799 --> 00:23:03,919
cases where the the delay increase was

525
00:23:03,919 --> 00:23:07,280
due to jitter or a temporary burst of

526
00:23:07,280 --> 00:23:11,120
packets we basically uh introduced

527
00:23:11,120 --> 00:23:14,320
usage of limited slow start

528
00:23:14,320 --> 00:23:16,799
so uh effectively we would use the max

529
00:23:16,799 --> 00:23:18,320
of limited slow start and the condition

530
00:23:18,320 --> 00:23:19,919
avoidance window

531
00:23:19,919 --> 00:23:21,919
uh thereby mitigating some of the impact

532
00:23:21,919 --> 00:23:25,360
of experience exit

533
00:23:26,799 --> 00:23:29,200
at that point we uh

534
00:23:29,200 --> 00:23:30,720
got some feedback and we started looking

535
00:23:30,720 --> 00:23:32,799
into jitter resiliency and we ended up

536
00:23:32,799 --> 00:23:34,720
simplifying the algorithm a lot so

537
00:23:34,720 --> 00:23:37,200
instead of trying to compensate

538
00:23:37,200 --> 00:23:39,840
for early exit from slow start we added

539
00:23:39,840 --> 00:23:42,720
detection of spurious exits

540
00:23:42,720 --> 00:23:44,400
to be able to resume slow start so

541
00:23:44,400 --> 00:23:45,919
imagine a network where there is a lot

542
00:23:45,919 --> 00:23:47,279
of jitter

543
00:23:47,279 --> 00:23:50,080
a delay increase algorithm would kick in

544
00:23:50,080 --> 00:23:52,080
sometimes spuriously and cause us to

545
00:23:52,080 --> 00:23:54,320
exit slow start at that point we enter

546
00:23:54,320 --> 00:23:55,840
something called as the conservative

547
00:23:55,840 --> 00:23:57,360
slow start phase

548
00:23:57,360 --> 00:23:58,960
so what is conservative slow start is

549
00:23:58,960 --> 00:24:01,039
basically a series of rounds where we

550
00:24:01,039 --> 00:24:02,799
are trying to determine if the exit was

551
00:24:02,799 --> 00:24:05,360
spurious due to a delay spike

552
00:24:05,360 --> 00:24:07,760
and the way we do that is we

553
00:24:07,760 --> 00:24:10,400
when we enter css we

554
00:24:10,400 --> 00:24:11,919
capture the

555
00:24:11,919 --> 00:24:14,159
the current rounds main rdt

556
00:24:14,159 --> 00:24:17,520
at that point and then for a

557
00:24:17,520 --> 00:24:20,240
series of rounds we see if any of the

558
00:24:20,240 --> 00:24:22,320
delay samples are going to be lower than

559
00:24:22,320 --> 00:24:23,279
the

560
00:24:23,279 --> 00:24:25,039
captured rdt

561
00:24:25,039 --> 00:24:27,600
that tells us whether the uh

562
00:24:27,600 --> 00:24:30,320
delay increase was spurious or not

563
00:24:30,320 --> 00:24:32,080
and if we think that the if if we

564
00:24:32,080 --> 00:24:33,679
determine that the exit was indeed

565
00:24:33,679 --> 00:24:35,760
spurious we basically resume high start

566
00:24:35,760 --> 00:24:36,880
plus plus so which means you know

567
00:24:36,880 --> 00:24:39,760
regular slow start resumes as well as

568
00:24:39,760 --> 00:24:42,240
uh the direction of uh delay increase

569
00:24:42,240 --> 00:24:43,919
and in the entire algorithm is basically

570
00:24:43,919 --> 00:24:45,840
reset and and it restarts and the

571
00:24:45,840 --> 00:24:47,600
advantage of this is that if the network

572
00:24:47,600 --> 00:24:49,440
does have jitter that you know slow

573
00:24:49,440 --> 00:24:51,679
start will still give you

574
00:24:51,679 --> 00:24:53,120
you know good performance and an

575
00:24:53,120 --> 00:24:55,760
exponential window increase

576
00:24:55,760 --> 00:24:57,600
so that's the gist of it that you know

577
00:24:57,600 --> 00:24:59,200
instead of trying to compensate for

578
00:24:59,200 --> 00:25:01,600
early exit we are detecting

579
00:25:01,600 --> 00:25:03,360
uh spurious exists and we are resuming

580
00:25:03,360 --> 00:25:05,918
slow start

581
00:25:06,799 --> 00:25:08,960
uh sorry for the small font size here

582
00:25:08,960 --> 00:25:10,559
but this is the summary of the current

583
00:25:10,559 --> 00:25:13,440
algorithm in draft version 4.

584
00:25:13,440 --> 00:25:16,159
uh so basically in slow start we we

585
00:25:16,159 --> 00:25:17,919
adjust the condition window according to

586
00:25:17,919 --> 00:25:20,240
five six eight one uh but

587
00:25:20,240 --> 00:25:22,480
uh we take rtt samples so

588
00:25:22,480 --> 00:25:25,600
uh each round is approximately an rtt

589
00:25:25,600 --> 00:25:27,520
and we remember the last round's

590
00:25:27,520 --> 00:25:29,200
minority and we compute the current

591
00:25:29,200 --> 00:25:32,640
round's minority and we use a threshold

592
00:25:32,640 --> 00:25:34,799
basically there's a lower clamp and an

593
00:25:34,799 --> 00:25:35,919
upper clamp

594
00:25:35,919 --> 00:25:38,720
but basically if um the current rounds

595
00:25:38,720 --> 00:25:40,240
minority is greater than the last

596
00:25:40,240 --> 00:25:42,720
round's minority plus the threshold

597
00:25:42,720 --> 00:25:45,120
uh then we exit slow start

598
00:25:45,120 --> 00:25:46,720
uh we also capture something called a

599
00:25:46,720 --> 00:25:48,880
css baseline rtd so that's the rgd i was

600
00:25:48,880 --> 00:25:50,080
talking about that will help us

601
00:25:50,080 --> 00:25:52,080
determine if the exit was spurious or

602
00:25:52,080 --> 00:25:54,080
not

603
00:25:54,080 --> 00:25:55,600
and then the conservative slow start

604
00:25:55,600 --> 00:25:57,360
phase lasts

605
00:25:57,360 --> 00:25:58,720
a few rounds currently the draft

606
00:25:58,720 --> 00:26:00,240
recommends five rounds based on

607
00:26:00,240 --> 00:26:01,679
experimentation

608
00:26:01,679 --> 00:26:02,799
uh

609
00:26:02,799 --> 00:26:05,760
and then uh for each ack in css again we

610
00:26:05,760 --> 00:26:07,679
repeat the procedure where we continue

611
00:26:07,679 --> 00:26:09,039
to

612
00:26:09,039 --> 00:26:10,880
measure the current round's minority and

613
00:26:10,880 --> 00:26:13,679
we compare that against the captured um

614
00:26:13,679 --> 00:26:16,480
css baseline rdd

615
00:26:16,480 --> 00:26:19,279
and if at any point during css we see

616
00:26:19,279 --> 00:26:21,039
that the current rounds minority t goes

617
00:26:21,039 --> 00:26:24,159
lower than the than the css baseline or

618
00:26:24,159 --> 00:26:26,720
rtt at that point we can determine that

619
00:26:26,720 --> 00:26:28,400
the exit was actually spurious and we

620
00:26:28,400 --> 00:26:30,400
just resume slow start and high start

621
00:26:30,400 --> 00:26:32,320
plus plus

622
00:26:32,320 --> 00:26:34,960
but if we complete all of css if we

623
00:26:34,960 --> 00:26:36,880
complete all those rounds and we don't

624
00:26:36,880 --> 00:26:38,559
see the minority go lower and then our

625
00:26:38,559 --> 00:26:40,480
captured rtt then we basically enter

626
00:26:40,480 --> 00:26:41,919
conditional maintenance so that is

627
00:26:41,919 --> 00:26:44,400
actually a correct exit and there is a

628
00:26:44,400 --> 00:26:47,440
consistent delay increase

629
00:26:47,440 --> 00:26:49,840
we do exit i start plus plus on any

630
00:26:49,840 --> 00:26:51,919
congestion signals and currently the

631
00:26:51,919 --> 00:26:54,080
draft recommends that we only use this

632
00:26:54,080 --> 00:26:55,520
for the initial slow start for

633
00:26:55,520 --> 00:26:58,240
subsequent slow starts after rto we do

634
00:26:58,240 --> 00:27:00,799
have a value of captured ss thresh

635
00:27:00,799 --> 00:27:03,679
and we say that you may use this after i

636
00:27:03,679 --> 00:27:06,679
do

637
00:27:07,360 --> 00:27:09,520
uh so we did make a few changes in in

638
00:27:09,520 --> 00:27:11,200
draft i want to bring up a couple of

639
00:27:11,200 --> 00:27:12,240
things that were brought up in the

640
00:27:12,240 --> 00:27:15,279
mailing list uh randall had proposed

641
00:27:15,279 --> 00:27:17,679
that uh instead of you know setting css

642
00:27:17,679 --> 00:27:19,760
baseline rtt to the current rounds

643
00:27:19,760 --> 00:27:22,880
minority that it instead be set to last

644
00:27:22,880 --> 00:27:25,120
one minority plus rtt thresh

645
00:27:25,120 --> 00:27:27,279
we did experiment with the idea but it

646
00:27:27,279 --> 00:27:28,159
showed

647
00:27:28,159 --> 00:27:30,720
poor performance when jitter was present

648
00:27:30,720 --> 00:27:32,960
um so i think it was an optimization for

649
00:27:32,960 --> 00:27:34,640
when there's no jitter but in in

650
00:27:34,640 --> 00:27:37,679
presence of jeter it did not work well

651
00:27:37,679 --> 00:27:40,480
and i think neil uh had suggested that

652
00:27:40,480 --> 00:27:43,200
we use a different mechanism for

653
00:27:43,200 --> 00:27:45,120
determining window and basically instead

654
00:27:45,120 --> 00:27:47,039
of using greater than or equal to

655
00:27:47,039 --> 00:27:48,799
you strictly greater than

656
00:27:48,799 --> 00:27:50,320
uh i think his comments were going

657
00:27:50,320 --> 00:27:53,200
towards uh you know cases where uh we

658
00:27:53,200 --> 00:27:54,640
could be app limited

659
00:27:54,640 --> 00:27:57,760
uh but we found that this is also uh

660
00:27:57,760 --> 00:28:00,399
inaccurate uh computation of an end of

661
00:28:00,399 --> 00:28:02,159
round in many cases so we did not make

662
00:28:02,159 --> 00:28:03,279
this change

663
00:28:03,279 --> 00:28:05,120
so the only sort of logic change that we

664
00:28:05,120 --> 00:28:08,159
made in draft zero four was uh removing

665
00:28:08,159 --> 00:28:11,200
uh dependency on uh low ss thresh so

666
00:28:11,200 --> 00:28:13,679
basically at this point uh the only

667
00:28:13,679 --> 00:28:16,480
trigger for

668
00:28:16,480 --> 00:28:19,039
computing and measuring the rtt values

669
00:28:19,039 --> 00:28:21,600
and looking at delay increases basically

670
00:28:21,600 --> 00:28:23,360
enough number of rtt samples have been

671
00:28:23,360 --> 00:28:25,039
taken in the round which currently the

672
00:28:25,039 --> 00:28:26,720
draft recommends that the implementation

673
00:28:26,720 --> 00:28:29,840
at least take eight measurements of rtt

674
00:28:29,840 --> 00:28:31,919
so that was the only change so that

675
00:28:31,919 --> 00:28:33,600
simplified things a little bit more and

676
00:28:33,600 --> 00:28:35,840
removed one magic constant

677
00:28:35,840 --> 00:28:37,360
and then we made a bunch of editorial

678
00:28:37,360 --> 00:28:39,200
improvements based on all the

679
00:28:39,200 --> 00:28:43,320
discussions in the mailing list

680
00:28:44,080 --> 00:28:45,840
so at this point we have addressed all

681
00:28:45,840 --> 00:28:48,320
the outstanding reviews i think we got

682
00:28:48,320 --> 00:28:51,440
one from bob jeremy and neil so far and

683
00:28:51,440 --> 00:28:52,720
we answered questions on the mailing

684
00:28:52,720 --> 00:28:54,640
list as well that came in from randall

685
00:28:54,640 --> 00:28:57,039
and neil

686
00:28:57,039 --> 00:28:59,360
and to our awareness there are at least

687
00:28:59,360 --> 00:29:01,679
three implementations uh in in

688
00:29:01,679 --> 00:29:03,760
production use uh

689
00:29:03,760 --> 00:29:05,520
the windows tcp cubic implementation has

690
00:29:05,520 --> 00:29:07,679
been using this for more than two years

691
00:29:07,679 --> 00:29:09,039
i think maybe three or more than three

692
00:29:09,039 --> 00:29:11,279
years at this point uh cloudflare's

693
00:29:11,279 --> 00:29:12,880
quick library quiche uses it in

694
00:29:12,880 --> 00:29:15,520
production and then uh freebsd has also

695
00:29:15,520 --> 00:29:17,279
added this to their tcp cubic

696
00:29:17,279 --> 00:29:19,760
implementation

697
00:29:19,760 --> 00:29:21,679
so uh in the author's eyes i think the

698
00:29:21,679 --> 00:29:24,159
draft is ready for working group last

699
00:29:24,159 --> 00:29:25,600
call

700
00:29:25,600 --> 00:29:29,360
and i'm happy to take any questions

701
00:29:32,559 --> 00:29:36,080
corey would you like to go first

702
00:29:39,039 --> 00:29:41,600
so corey fergus thank you for doing this

703
00:29:41,600 --> 00:29:43,679
um i've seen this in action it can be

704
00:29:43,679 --> 00:29:44,960
good

705
00:29:44,960 --> 00:29:47,480
my question is which of the

706
00:29:47,480 --> 00:29:50,240
implementations use the latest version

707
00:29:50,240 --> 00:29:51,520
of the spec

708
00:29:51,520 --> 00:29:53,039
is there one i could actually go and try

709
00:29:53,039 --> 00:29:54,399
over my awkward

710
00:29:54,399 --> 00:29:58,000
paths that i don't know about

711
00:29:58,080 --> 00:30:00,480
and

712
00:30:00,640 --> 00:30:03,679
interestingly you have some small voice

713
00:30:03,679 --> 00:30:06,840
in interference for me in this

714
00:30:06,840 --> 00:30:10,399
direction so um i i'm looking for a a

715
00:30:10,399 --> 00:30:12,480
point to which pers which version of the

716
00:30:12,480 --> 00:30:14,640
code i should test and then uh offer to

717
00:30:14,640 --> 00:30:16,159
try and test it and see how well it

718
00:30:16,159 --> 00:30:18,399
works over some really awkward links as

719
00:30:18,399 --> 00:30:20,960
a useful feedback perhaps

720
00:30:20,960 --> 00:30:23,840
yeah uh gauri so uh the the latest

721
00:30:23,840 --> 00:30:25,760
versions of the windows os both windows

722
00:30:25,760 --> 00:30:28,159
10 and windows 11 have the latest uh

723
00:30:28,159 --> 00:30:30,320
algorithm implemented and i think the

724
00:30:30,320 --> 00:30:32,720
free psd tcp implementation also uses

725
00:30:32,720 --> 00:30:34,960
the latest draft so both of these

726
00:30:34,960 --> 00:30:37,520
include for example all the conservative

727
00:30:37,520 --> 00:30:39,279
flow start phase and all of that at the

728
00:30:39,279 --> 00:30:42,159
cloudflare's quick library i'm not sure

729
00:30:42,159 --> 00:30:44,000
if it has been updated to the latest

730
00:30:44,000 --> 00:30:45,440
draft

731
00:30:45,440 --> 00:30:47,200
that's what i wanted to know thank you

732
00:30:47,200 --> 00:30:49,360
ever so much i'll give you a feedback

733
00:30:49,360 --> 00:30:51,840
thank you

734
00:30:56,159 --> 00:30:59,039
any other comments

735
00:31:00,960 --> 00:31:03,039
so i think you know this stuff has been

736
00:31:03,039 --> 00:31:06,000
stable for a long time and then i think

737
00:31:06,000 --> 00:31:07,840
you know we are almost getting ready

738
00:31:07,840 --> 00:31:09,840
well i can rascal

739
00:31:09,840 --> 00:31:12,559
that's what's currently child thinking

740
00:31:12,559 --> 00:31:16,320
but uh if you have any opinions sold on

741
00:31:16,320 --> 00:31:17,440
this one

742
00:31:17,440 --> 00:31:19,039
and this is a good chance for you to

743
00:31:19,039 --> 00:31:20,320
speak up

744
00:31:20,320 --> 00:31:22,960
any comments

745
00:31:28,080 --> 00:31:30,080
silence understands there is no

746
00:31:30,080 --> 00:31:32,720
objection

747
00:31:32,720 --> 00:31:35,440
am i correct

748
00:31:40,080 --> 00:31:43,360
okay and same is to be

749
00:31:43,360 --> 00:31:45,679
at reason there is no objection i think

750
00:31:45,679 --> 00:31:47,919
we can confirm if this relative working

751
00:31:47,919 --> 00:31:49,919
group will have to go right on the

752
00:31:49,919 --> 00:31:52,480
mailing list

753
00:31:54,320 --> 00:31:56,720
okay thank you praveen

754
00:31:56,720 --> 00:31:58,480
okay sounds good

755
00:31:58,480 --> 00:32:01,840
thank you thank you

756
00:32:03,919 --> 00:32:06,320
okay

757
00:32:07,519 --> 00:32:11,200
so we'll be on to the next presentation

758
00:32:11,200 --> 00:32:14,200
bd

759
00:32:24,480 --> 00:32:28,039
can you hear me now

760
00:32:28,240 --> 00:32:29,440
yeah

761
00:32:29,440 --> 00:32:31,279
you want this

762
00:32:31,279 --> 00:32:33,440
you want to make some comments no no i

763
00:32:33,440 --> 00:32:34,640
just want to check

764
00:32:34,640 --> 00:32:37,120
my audio

765
00:32:37,360 --> 00:32:39,600
okay

766
00:32:39,679 --> 00:32:43,360
i think it's getting better okay

767
00:32:44,559 --> 00:32:45,679
yeah

768
00:32:45,679 --> 00:32:47,679
can you hear me okay

769
00:32:47,679 --> 00:32:49,600
yeah

770
00:32:49,600 --> 00:32:52,639
um so

771
00:32:53,519 --> 00:32:56,559
sorry so i always forget the

772
00:32:56,559 --> 00:32:58,399
slide request

773
00:32:58,399 --> 00:33:01,039
um i think you you know you already

774
00:33:01,039 --> 00:33:03,279
grunted

775
00:33:03,279 --> 00:33:05,440
okay

776
00:33:05,440 --> 00:33:06,960
could you tell me where was it on the

777
00:33:06,960 --> 00:33:09,120
left or the right uh

778
00:33:09,120 --> 00:33:13,039
has to okay got it okay

779
00:33:15,120 --> 00:33:16,399
sure

780
00:33:16,399 --> 00:33:17,519
all right

781
00:33:17,519 --> 00:33:20,720
can you see the slice now

782
00:33:20,799 --> 00:33:23,120
awesome

783
00:33:23,120 --> 00:33:27,519
um so today i'll talk a little bit about

784
00:33:27,519 --> 00:33:28,399
um

785
00:33:28,399 --> 00:33:31,279
you know the changes that have been made

786
00:33:31,279 --> 00:33:33,039
and then the discussion that was

787
00:33:33,039 --> 00:33:35,200
happening on the mailing list

788
00:33:35,200 --> 00:33:36,080
to

789
00:33:36,080 --> 00:33:37,360
publish

790
00:33:37,360 --> 00:33:41,200
cubic base as uh proposed standard or or

791
00:33:41,200 --> 00:33:43,840
something else

792
00:33:46,000 --> 00:33:46,799
um

793
00:33:46,799 --> 00:33:47,840
so

794
00:33:47,840 --> 00:33:50,240
i have captured some of the

795
00:33:50,240 --> 00:33:52,640
updates in these slides but there are

796
00:33:52,640 --> 00:33:55,039
many more um these are just some of the

797
00:33:55,039 --> 00:33:57,039
updates that i thought

798
00:33:57,039 --> 00:33:59,760
would be interesting to just combine in

799
00:33:59,760 --> 00:34:02,000
the slides and this includes everything

800
00:34:02,000 --> 00:34:04,480
that has been changed

801
00:34:04,480 --> 00:34:07,039
plus the ones that i have not added here

802
00:34:07,039 --> 00:34:08,079
so they're

803
00:34:08,079 --> 00:34:11,440
all present on the github

804
00:34:11,440 --> 00:34:13,918
um i'm not gonna go through each one of

805
00:34:13,918 --> 00:34:16,480
them because we have gone through these

806
00:34:16,480 --> 00:34:18,839
in the past uh

807
00:34:18,839 --> 00:34:20,960
presentations um

808
00:34:20,960 --> 00:34:22,879
so i'll give

809
00:34:22,879 --> 00:34:25,760
just a couple of minutes on each slides

810
00:34:25,760 --> 00:34:28,159
if you have any questions

811
00:34:28,159 --> 00:34:30,239
uh just in case if you haven't seen

812
00:34:30,239 --> 00:34:34,199
these updates so far

813
00:34:35,199 --> 00:34:36,159
um

814
00:34:36,159 --> 00:34:37,760
same here

815
00:34:37,760 --> 00:34:40,159
these were also done and discussed in

816
00:34:40,159 --> 00:34:44,399
the previous previous presentations

817
00:34:44,399 --> 00:34:48,679
give a couple of seconds here

818
00:34:50,960 --> 00:34:54,239
um so since the last meeting um we made

819
00:34:54,239 --> 00:34:56,480
some changes and these i would like to

820
00:34:56,480 --> 00:34:58,240
discuss

821
00:34:58,240 --> 00:35:00,079
um

822
00:35:00,079 --> 00:35:02,480
the spurious congestion uh detecting

823
00:35:02,480 --> 00:35:04,800
spurious congestion event and reacting

824
00:35:04,800 --> 00:35:06,320
to them

825
00:35:06,320 --> 00:35:08,560
uh there there's now we have categorized

826
00:35:08,560 --> 00:35:11,440
into them into two

827
00:35:11,440 --> 00:35:15,440
events um one is boris timeouts

828
00:35:15,440 --> 00:35:17,920
and the other is spurious loss detected

829
00:35:17,920 --> 00:35:20,640
by acknowledgements the first one is

830
00:35:20,640 --> 00:35:22,880
kind of relevant for tcp

831
00:35:22,880 --> 00:35:25,440
and there's already a standards track rc

832
00:35:25,440 --> 00:35:29,280
that specifies the response for

833
00:35:29,280 --> 00:35:32,240
restoring the congestion window

834
00:35:32,240 --> 00:35:36,640
and um for adapting the timer uh so that

835
00:35:36,640 --> 00:35:37,760
there's

836
00:35:37,760 --> 00:35:39,920
to avoid any future

837
00:35:39,920 --> 00:35:42,560
spurious timeouts so there's this rc

838
00:35:42,560 --> 00:35:45,040
4015 that

839
00:35:45,040 --> 00:35:47,599
specifies all of that

840
00:35:47,599 --> 00:35:50,400
and then we have the spurious losses

841
00:35:50,400 --> 00:35:52,400
detected by acknowledgments so this is

842
00:35:52,400 --> 00:35:56,079
relevant for both tcp and quick

843
00:35:56,079 --> 00:35:59,280
and in tcp you can use timestamps and

844
00:35:59,280 --> 00:36:02,079
duplicate sex to detect these

845
00:36:02,079 --> 00:36:03,280
um

846
00:36:03,280 --> 00:36:04,880
excuse me

847
00:36:04,880 --> 00:36:06,960
for quick it's uh quite easy you can

848
00:36:06,960 --> 00:36:09,920
detect it by seeing any new packets

849
00:36:09,920 --> 00:36:11,839
sorry sorry you can see this by

850
00:36:11,839 --> 00:36:14,240
detecting any packets that were marked

851
00:36:14,240 --> 00:36:16,320
lost but they were acknowledged after

852
00:36:16,320 --> 00:36:18,480
they were marked lost so that's kind of

853
00:36:18,480 --> 00:36:20,400
a spurious loss

854
00:36:20,400 --> 00:36:22,160
and then

855
00:36:22,160 --> 00:36:24,560
for these events uh right now we have

856
00:36:24,560 --> 00:36:27,040
suggested doing a

857
00:36:27,040 --> 00:36:29,359
undo of the condition window of the slow

858
00:36:29,359 --> 00:36:31,359
start threshold and

859
00:36:31,359 --> 00:36:35,520
a few more parameters for cubic

860
00:36:35,520 --> 00:36:36,720
um

861
00:36:36,720 --> 00:36:39,760
so and this this one is kind of a has a

862
00:36:39,760 --> 00:36:42,400
precaution caution written in the text

863
00:36:42,400 --> 00:36:44,400
to be careful when

864
00:36:44,400 --> 00:36:48,079
uh you're using this because you know

865
00:36:48,079 --> 00:36:50,320
it might cause you to set condition

866
00:36:50,320 --> 00:36:52,079
window to a higher value if the link

867
00:36:52,079 --> 00:36:54,079
capacity has changed from the previous

868
00:36:54,079 --> 00:36:56,400
state to the now state so you just have

869
00:36:56,400 --> 00:37:00,000
to be a little careful with that

870
00:37:00,000 --> 00:37:02,320
um

871
00:37:02,640 --> 00:37:06,160
and then we have uh

872
00:37:06,160 --> 00:37:08,880
neil actually made the next update about

873
00:37:08,880 --> 00:37:10,800
clarifying

874
00:37:10,800 --> 00:37:13,040
the meaning of application limited uh

875
00:37:13,040 --> 00:37:14,640
there was some question about what is

876
00:37:14,640 --> 00:37:16,720
application limited means and we have

877
00:37:16,720 --> 00:37:18,400
added text

878
00:37:18,400 --> 00:37:21,119
for clarifying that

879
00:37:21,119 --> 00:37:22,560
and then uh

880
00:37:22,560 --> 00:37:25,839
there was a request or question by yushi

881
00:37:25,839 --> 00:37:30,000
about why is rfc 7661

882
00:37:30,000 --> 00:37:32,160
um okay to use

883
00:37:32,160 --> 00:37:36,000
uh you know when rfc 5681 has a specific

884
00:37:36,000 --> 00:37:38,160
test text about

885
00:37:38,160 --> 00:37:39,920
uh congestion window growing beyond

886
00:37:39,920 --> 00:37:41,920
receipt window and then it shouldn't

887
00:37:41,920 --> 00:37:44,800
grow beyond receive window so

888
00:37:44,800 --> 00:37:45,720
the

889
00:37:45,720 --> 00:37:49,200
7661 basically is monitoring

890
00:37:49,200 --> 00:37:50,960
bytes acknowledged

891
00:37:50,960 --> 00:37:54,079
uh in rtt uh you know like the pipe back

892
00:37:54,079 --> 00:37:56,400
value that it's computing it's like it's

893
00:37:56,400 --> 00:37:58,480
doing how many bytes are acknowledged in

894
00:37:58,480 --> 00:37:59,599
rta

895
00:37:59,599 --> 00:38:02,560
in consecutive rtts one two or three

896
00:38:02,560 --> 00:38:04,640
rounds

897
00:38:04,640 --> 00:38:06,960
so because it's based on the pipe value

898
00:38:06,960 --> 00:38:09,119
which is why it's acknowledged in rtt it

899
00:38:09,119 --> 00:38:11,760
kind of includes the validates the

900
00:38:11,760 --> 00:38:13,280
receive window

901
00:38:13,280 --> 00:38:14,800
because you always check the receive

902
00:38:14,800 --> 00:38:17,599
window before sending the data so

903
00:38:17,599 --> 00:38:19,599
we have added text to make it a little

904
00:38:19,599 --> 00:38:22,640
bit more clear why it is safe to use

905
00:38:22,640 --> 00:38:25,440
um even when this condition window grows

906
00:38:25,440 --> 00:38:28,480
beyond receive window

907
00:38:28,560 --> 00:38:32,480
so these are the latest updates um

908
00:38:32,480 --> 00:38:34,720
in the draft

909
00:38:34,720 --> 00:38:37,599
and this is probably the topic for main

910
00:38:37,599 --> 00:38:40,480
topic for today

911
00:38:41,200 --> 00:38:43,040
um

912
00:38:43,040 --> 00:38:44,000
i

913
00:38:44,000 --> 00:38:46,560
i will

914
00:38:46,560 --> 00:38:49,280
this is um i will leave

915
00:38:49,280 --> 00:38:51,040
leave the rest of the time for questions

916
00:38:51,040 --> 00:38:53,599
discussions and comments on whether we

917
00:38:53,599 --> 00:38:55,280
should publish

918
00:38:55,280 --> 00:38:58,960
83 12 business uh you know

919
00:38:58,960 --> 00:39:02,160
standard strike or not

920
00:39:07,280 --> 00:39:10,000
uh great

921
00:39:10,560 --> 00:39:12,079
yeah gory first i was going to talk to

922
00:39:12,079 --> 00:39:13,760
the previous slide

923
00:39:13,760 --> 00:39:16,320
and just say

924
00:39:16,320 --> 00:39:18,160
i'll read the text again i think i was

925
00:39:18,160 --> 00:39:20,720
happy with what was done so the 7661

926
00:39:20,720 --> 00:39:22,560
thing i think they did the right thing

927
00:39:22,560 --> 00:39:25,520
for this document

928
00:39:25,520 --> 00:39:27,200
so i don't see that as an issue and i'll

929
00:39:27,200 --> 00:39:29,760
read the text carefully i promise and

930
00:39:29,760 --> 00:39:31,920
give feedback if i see anything

931
00:39:31,920 --> 00:39:33,760
so i from my point of view let's look at

932
00:39:33,760 --> 00:39:37,079
the last slide

933
00:39:43,200 --> 00:39:45,760
okay any comments for

934
00:39:45,760 --> 00:39:49,119
ps4 experimenter

935
00:39:50,640 --> 00:39:53,040
michael

936
00:39:53,920 --> 00:39:56,000
uh michael uh just a quick question

937
00:39:56,000 --> 00:39:57,839
about this last statement here this uh

938
00:39:57,839 --> 00:39:59,920
separate draft on cubic evaluation

939
00:39:59,920 --> 00:40:01,920
improvements is that uh supposed to be

940
00:40:01,920 --> 00:40:03,760
the home for the things that marco has

941
00:40:03,760 --> 00:40:05,760
brought up

942
00:40:05,760 --> 00:40:07,359
that's supposed to be

943
00:40:07,359 --> 00:40:09,040
okay i'm just curious i think it's a

944
00:40:09,040 --> 00:40:11,839
good idea probably

945
00:40:13,520 --> 00:40:15,680
and if anyone else has any other

946
00:40:15,680 --> 00:40:17,200
improvements

947
00:40:17,200 --> 00:40:20,560
that they wish to talk about

948
00:40:22,560 --> 00:40:25,560
right

949
00:40:26,640 --> 00:40:28,720
hi yeah lars eggert um

950
00:40:28,720 --> 00:40:29,839
i

951
00:40:29,839 --> 00:40:31,280
saw a bunch of emails from marco on the

952
00:40:31,280 --> 00:40:32,800
list that i haven't fully had the time

953
00:40:32,800 --> 00:40:34,079
to read yet but

954
00:40:34,079 --> 00:40:37,760
glancing at it i'm not sure if he's okay

955
00:40:37,760 --> 00:40:40,720
with publishing this sps even if we did

956
00:40:40,720 --> 00:40:42,800
this other document i would like to hear

957
00:40:42,800 --> 00:40:45,119
that validated from him

958
00:40:45,119 --> 00:40:48,560
i think what i saw him say is that

959
00:40:48,560 --> 00:40:50,880
because cubic was deployed on the

960
00:40:50,880 --> 00:40:52,960
internet without this not not following

961
00:40:52,960 --> 00:40:54,560
the process that that we did back when i

962
00:40:54,560 --> 00:40:56,720
was in magnus and we were ad and then we

963
00:40:56,720 --> 00:40:59,119
had sally and i think was it wes work on

964
00:40:59,119 --> 00:41:00,160
this

965
00:41:00,160 --> 00:41:02,880
considerations thing

966
00:41:02,880 --> 00:41:05,040
means that that the ietf cannot do this

967
00:41:05,040 --> 00:41:06,560
before

968
00:41:06,560 --> 00:41:07,760
cubic

969
00:41:07,760 --> 00:41:09,680
undergoes all of this

970
00:41:09,680 --> 00:41:10,880
you know

971
00:41:10,880 --> 00:41:12,960
evaluation and then

972
00:41:12,960 --> 00:41:14,960
while i sort of i was instrumental in

973
00:41:14,960 --> 00:41:17,680
establishing this process and so i wish

974
00:41:17,680 --> 00:41:19,520
that deployment would have happened that

975
00:41:19,520 --> 00:41:20,800
way

976
00:41:20,800 --> 00:41:23,040
it didn't right people deployed cubic

977
00:41:23,040 --> 00:41:24,000
and it worked well enough and more

978
00:41:24,000 --> 00:41:25,280
people deployed cubic and now it's

979
00:41:25,280 --> 00:41:26,880
basically ubiquitous

980
00:41:26,880 --> 00:41:28,800
and i thought of c2 two ways forward

981
00:41:28,800 --> 00:41:30,240
right either we can

982
00:41:30,240 --> 00:41:32,880
acknowledge that and say well you know

983
00:41:32,880 --> 00:41:35,200
this didn't happen in the way we ideally

984
00:41:35,200 --> 00:41:37,200
would have envisioned it to play out but

985
00:41:37,200 --> 00:41:39,920
the reality is that it is running

986
00:41:39,920 --> 00:41:41,760
the traffic on the internet

987
00:41:41,760 --> 00:41:43,839
and therefore maybe it should be ps or

988
00:41:43,839 --> 00:41:46,240
we can say you know

989
00:41:46,240 --> 00:41:47,359
we're not willing to do that we're going

990
00:41:47,359 --> 00:41:49,440
to stick with new reno um and i

991
00:41:49,440 --> 00:41:50,960
personally obviously i'm very biased

992
00:41:50,960 --> 00:41:52,319
here because i think this should be a

993
00:41:52,319 --> 00:41:53,599
published center but i think it would be

994
00:41:53,599 --> 00:41:55,200
good to sort of that seems to be the

995
00:41:55,200 --> 00:41:57,040
fundamental sort of objection right that

996
00:41:57,040 --> 00:41:58,800
it's

997
00:41:58,800 --> 00:42:01,520
it didn't do what we expect

998
00:42:01,520 --> 00:42:03,040
specifically new congestion control

999
00:42:03,040 --> 00:42:04,960
algorithms which is arguably isn't

1000
00:42:04,960 --> 00:42:07,280
really either but the process that we

1001
00:42:07,280 --> 00:42:08,640
expect the stuff to undergo and it

1002
00:42:08,640 --> 00:42:11,119
didn't follow that

1003
00:42:11,119 --> 00:42:13,520
right i will point out i i made the

1004
00:42:13,520 --> 00:42:16,160
comment in the bar the other night that

1005
00:42:16,160 --> 00:42:17,520
maybe i'll write another document that

1006
00:42:17,520 --> 00:42:18,880
says we should declare a new reno

1007
00:42:18,880 --> 00:42:20,240
historic because we don't have any

1008
00:42:20,240 --> 00:42:21,520
deployment experience on the running

1009
00:42:21,520 --> 00:42:22,880
internet anymore and we haven't had it

1010
00:42:22,880 --> 00:42:24,319
for 10 years

1011
00:42:24,319 --> 00:42:28,839
but that's a discussion for another day

1012
00:42:33,440 --> 00:42:35,200
so this is great it's gory

1013
00:42:35,200 --> 00:42:37,839
fair hust again and i get to agree with

1014
00:42:37,839 --> 00:42:40,480
lars really positively on the first one

1015
00:42:40,480 --> 00:42:43,040
um which basically i think we should we

1016
00:42:43,040 --> 00:42:45,599
should write a paragraph of texting we

1017
00:42:45,599 --> 00:42:47,520
didn't do it the way the ietf should do

1018
00:42:47,520 --> 00:42:50,079
it and this isn't

1019
00:42:50,079 --> 00:42:51,839
this is not totally consistent with

1020
00:42:51,839 --> 00:42:54,400
other rfcs but it is running code it is

1021
00:42:54,400 --> 00:42:56,240
out there it is the consensus of what to

1022
00:42:56,240 --> 00:42:57,119
do

1023
00:42:57,119 --> 00:43:00,400
and that's what this document is and if

1024
00:43:00,400 --> 00:43:02,079
we have a process to doing that then i

1025
00:43:02,079 --> 00:43:04,160
think we should go that way if we don't

1026
00:43:04,160 --> 00:43:05,440
then i think we need to invent one

1027
00:43:05,440 --> 00:43:06,560
because we need to get this document

1028
00:43:06,560 --> 00:43:08,240
published

1029
00:43:08,240 --> 00:43:10,560
so that's my own take and that's just an

1030
00:43:10,560 --> 00:43:12,960
individual idea the second thing is i

1031
00:43:12,960 --> 00:43:15,599
don't agree with lars on the um

1032
00:43:15,599 --> 00:43:17,440
on reno so we can fight that one out

1033
00:43:17,440 --> 00:43:19,760
later

1034
00:43:23,359 --> 00:43:25,680
michael

1035
00:43:25,680 --> 00:43:27,680
so lars brought up a

1036
00:43:27,680 --> 00:43:31,359
statement that there is a process how to

1037
00:43:31,359 --> 00:43:32,560
deal with new

1038
00:43:32,560 --> 00:43:35,280
um congestion controls and

1039
00:43:35,280 --> 00:43:36,160
uh

1040
00:43:36,160 --> 00:43:37,920
so obviously

1041
00:43:37,920 --> 00:43:41,839
cubic didn't follow that procedure

1042
00:43:42,880 --> 00:43:45,359
considering another

1043
00:43:45,359 --> 00:43:47,760
congestion control algorithm which is

1044
00:43:47,760 --> 00:43:50,079
being deployed called bvr

1045
00:43:50,079 --> 00:43:52,960
is also not following this procedure so

1046
00:43:52,960 --> 00:43:54,720
um i'm

1047
00:43:54,720 --> 00:43:56,079
um

1048
00:43:56,079 --> 00:43:57,520
i'm wondering

1049
00:43:57,520 --> 00:43:59,359
whether this

1050
00:43:59,359 --> 00:44:01,599
how how important should it be to follow

1051
00:44:01,599 --> 00:44:03,520
this procedure

1052
00:44:03,520 --> 00:44:06,000
and just to answer martin's questions on

1053
00:44:06,000 --> 00:44:09,839
the chat netflix uses neorino

1054
00:44:35,040 --> 00:44:36,400
into the queue and i saw there's other

1055
00:44:36,400 --> 00:44:38,319
yellow things in front of me so i mean

1056
00:44:38,319 --> 00:44:40,160
the history of this process right this

1057
00:44:40,160 --> 00:44:42,319
is when um i don't want to call it the

1058
00:44:42,319 --> 00:44:43,920
high-speed congestion control wars but

1059
00:44:43,920 --> 00:44:45,520
it was basically we had

1060
00:44:45,520 --> 00:44:47,839
lots i think four or five different uh

1061
00:44:47,839 --> 00:44:50,319
proposals many of them from academia on

1062
00:44:50,319 --> 00:44:51,680
you know

1063
00:44:51,680 --> 00:44:53,440
how you can improve

1064
00:44:53,440 --> 00:44:54,960
tcp specifically for what's called high

1065
00:44:54,960 --> 00:44:56,160
speed links back then which are just

1066
00:44:56,160 --> 00:44:58,079
normal links now but back then they were

1067
00:44:58,079 --> 00:44:59,520
high speed because they were like a gig

1068
00:44:59,520 --> 00:45:01,680
fast or something like that

1069
00:45:01,680 --> 00:45:02,480
and

1070
00:45:02,480 --> 00:45:04,160
we felt that on the itf side we needed

1071
00:45:04,160 --> 00:45:05,440
to give this

1072
00:45:05,440 --> 00:45:07,760
some guidance and some structure because

1073
00:45:07,760 --> 00:45:09,520
um it was sort of quite confusing how

1074
00:45:09,520 --> 00:45:11,200
people went about sort of motivating why

1075
00:45:11,200 --> 00:45:12,400
their scheme was better than somebody

1076
00:45:12,400 --> 00:45:14,160
else's scheme and all of that

1077
00:45:14,160 --> 00:45:15,359
and

1078
00:45:15,359 --> 00:45:16,160
that

1079
00:45:16,160 --> 00:45:17,119
sort of

1080
00:45:17,119 --> 00:45:18,560
that's not how congestion control is

1081
00:45:18,560 --> 00:45:20,880
being done or brought to the idf anymore

1082
00:45:20,880 --> 00:45:23,040
but we're now in a situation where

1083
00:45:23,040 --> 00:45:24,319
the people who work on new congestion

1084
00:45:24,319 --> 00:45:26,319
control schemes actually are in control

1085
00:45:26,319 --> 00:45:28,720
of of end points directly which wasn't

1086
00:45:28,720 --> 00:45:30,160
the case back then which is mostly

1087
00:45:30,160 --> 00:45:31,920
academic work that smart people did but

1088
00:45:31,920 --> 00:45:33,839
they didn't have the

1089
00:45:33,839 --> 00:45:36,000
the ability to deploy at scale

1090
00:45:36,000 --> 00:45:38,319
which we now have right and so

1091
00:45:38,319 --> 00:45:40,560
it's a very different world now 15 years

1092
00:45:40,560 --> 00:45:43,200
later where um

1093
00:45:43,200 --> 00:45:45,440
we actually have the ability to do a b

1094
00:45:45,440 --> 00:45:46,480
testing

1095
00:45:46,480 --> 00:45:48,800
over the real internet and and get data

1096
00:45:48,800 --> 00:45:50,319
back and all of that so when we've seen

1097
00:45:50,319 --> 00:45:52,240
this when we did iw10 for example and

1098
00:45:52,240 --> 00:45:54,319
other things right

1099
00:45:54,319 --> 00:45:56,319
so the the process we outlined is

1100
00:45:56,319 --> 00:45:58,160
probably not useless in the sense that

1101
00:45:58,160 --> 00:45:59,839
it still gives you good guidance for

1102
00:45:59,839 --> 00:46:02,800
what the itf would like to see but

1103
00:46:02,800 --> 00:46:04,560
maybe like

1104
00:46:04,560 --> 00:46:08,000
requiring that to be followed isn't

1105
00:46:08,000 --> 00:46:11,880
hasn't aged very well

1106
00:46:15,359 --> 00:46:17,119
okay

1107
00:46:17,119 --> 00:46:18,160
can i

1108
00:46:18,160 --> 00:46:20,799
say something

1109
00:46:21,119 --> 00:46:22,079
so

1110
00:46:22,079 --> 00:46:24,400
yeah i think you know basically i agree

1111
00:46:24,400 --> 00:46:25,920
what michael says

1112
00:46:25,920 --> 00:46:26,800
so

1113
00:46:26,800 --> 00:46:29,440
so bvr is the internet draft so i it's

1114
00:46:29,440 --> 00:46:30,240
not

1115
00:46:30,240 --> 00:46:32,640
it might be experimental so i don't know

1116
00:46:32,640 --> 00:46:36,319
the status but uh for example lfc

1117
00:46:36,319 --> 00:46:40,160
9002 this is proposed standard and then

1118
00:46:40,160 --> 00:46:42,560
i also think this is some kind of

1119
00:46:42,560 --> 00:46:45,200
aggressiveness in the draft

1120
00:46:45,200 --> 00:46:48,079
the algorithm described in the draft so

1121
00:46:48,079 --> 00:46:50,400
i think i'm not

1122
00:46:50,400 --> 00:46:52,319
i don't find a particular reason that we

1123
00:46:52,319 --> 00:46:54,319
are attacking cubic specifically so

1124
00:46:54,319 --> 00:46:55,839
there are several drafts and the old

1125
00:46:55,839 --> 00:46:58,960
draft should be treated equally and then

1126
00:46:58,960 --> 00:47:01,280
otherwise you know it's not very fair

1127
00:47:01,280 --> 00:47:02,240
and

1128
00:47:02,240 --> 00:47:04,880
so i just know if you know we in the

1129
00:47:04,880 --> 00:47:07,119
space we set very high

1130
00:47:07,119 --> 00:47:09,599
set high bar on the cubic drug i think

1131
00:47:09,599 --> 00:47:11,839
there we should set all other kind of

1132
00:47:11,839 --> 00:47:13,520
transition control

1133
00:47:13,520 --> 00:47:16,400
draft should be has a symbol that's my

1134
00:47:16,400 --> 00:47:19,880
personal opinion

1135
00:47:26,640 --> 00:47:28,079
probing

1136
00:47:28,079 --> 00:47:30,160
yeah so um

1137
00:47:30,160 --> 00:47:32,160
i tend to agree that this should be a

1138
00:47:32,160 --> 00:47:34,000
proposed standard just because of how

1139
00:47:34,000 --> 00:47:36,720
widely it is deployed and i think

1140
00:47:36,720 --> 00:47:38,160
if i were writing a new tcp

1141
00:47:38,160 --> 00:47:39,440
implementation or even a quick

1142
00:47:39,440 --> 00:47:42,559
implementation like having cubic as the

1143
00:47:42,559 --> 00:47:44,400
standard to implement would make sense

1144
00:47:44,400 --> 00:47:46,720
because we know know the limitations of

1145
00:47:46,720 --> 00:47:49,040
neurano right so it doesn't make sense

1146
00:47:49,040 --> 00:47:51,200
for new implementers new implementers to

1147
00:47:51,200 --> 00:47:53,520
not find this as a as a proposed

1148
00:47:53,520 --> 00:47:56,400
standard rc uh that's my take on it as

1149
00:47:56,400 --> 00:47:59,119
an implementer um if i was uh looking

1150
00:47:59,119 --> 00:48:01,599
for guidance from the ietf right uh i

1151
00:48:01,599 --> 00:48:03,280
agree about the part about the process i

1152
00:48:03,280 --> 00:48:04,880
think we should we should revisit that

1153
00:48:04,880 --> 00:48:07,680
process i think iccrg or other places

1154
00:48:07,680 --> 00:48:09,520
could define what that process should be

1155
00:48:09,520 --> 00:48:11,440
but cubic given that it's already so

1156
00:48:11,440 --> 00:48:13,839
widely deployed i think in my opinion i

1157
00:48:13,839 --> 00:48:15,520
would be very supportive of

1158
00:48:15,520 --> 00:48:19,720
publishing it as a proper standard

1159
00:48:24,480 --> 00:48:26,240
martin

1160
00:48:26,240 --> 00:48:28,400
just very quickly i i i feel like we're

1161
00:48:28,400 --> 00:48:30,079
getting maybe away from the 80-12

1162
00:48:30,079 --> 00:48:32,839
discussion a bit but um

1163
00:48:32,839 --> 00:48:35,359
uh regarding like the gates for

1164
00:48:35,359 --> 00:48:36,960
congestion control the bar that we are

1165
00:48:36,960 --> 00:48:39,359
setting it feels like that bar is now

1166
00:48:39,359 --> 00:48:41,040
essentially high enough

1167
00:48:41,040 --> 00:48:42,240
that the correct way to deploy new

1168
00:48:42,240 --> 00:48:44,720
congestion control is to go work for one

1169
00:48:44,720 --> 00:48:46,720
of those companies that ours mentioned

1170
00:48:46,720 --> 00:48:48,640
deployed at scale and then come to idf

1171
00:48:48,640 --> 00:48:52,079
and say see it works which maybe is not

1172
00:48:52,079 --> 00:48:53,760
it is kind of defeating the purpose of

1173
00:48:53,760 --> 00:48:55,920
having this body or a

1174
00:48:55,920 --> 00:48:58,160
related idf body like provide review

1175
00:48:58,160 --> 00:49:00,240
before things get deployed at scale

1176
00:49:00,240 --> 00:49:03,440
so um

1177
00:49:03,440 --> 00:49:06,319
i think we need to rethink it basically

1178
00:49:06,319 --> 00:49:07,680
without without making specific

1179
00:49:07,680 --> 00:49:11,240
proposals thanks

1180
00:49:17,980 --> 00:49:19,440
[Music]

1181
00:49:19,440 --> 00:49:22,319
okay there's okay

1182
00:49:22,319 --> 00:49:24,720
colleen

1183
00:49:26,000 --> 00:49:31,160
uh yeah i think i just want to plus one

1184
00:49:32,880 --> 00:49:34,240
then i don't see that anything this

1185
00:49:34,240 --> 00:49:36,079
group is ever going to do would meet

1186
00:49:36,079 --> 00:49:37,040
that bar

1187
00:49:37,040 --> 00:49:38,800
so i think we should we should have

1188
00:49:38,800 --> 00:49:40,240
published this as proposed standard

1189
00:49:40,240 --> 00:49:43,479
years ago

1190
00:49:44,270 --> 00:49:47,119
[Music]

1191
00:49:47,119 --> 00:49:49,520
okay

1192
00:49:51,440 --> 00:49:53,280
so

1193
00:49:53,280 --> 00:49:55,119
do you think this is counting number

1194
00:49:55,119 --> 00:49:57,280
here is a good idea

1195
00:49:57,280 --> 00:49:59,599
all right this is too early or to

1196
00:49:59,599 --> 00:50:02,400
control basha

1197
00:50:10,160 --> 00:50:11,599
and your opinion

1198
00:50:11,599 --> 00:50:14,800
i think the general sense is that uh

1199
00:50:14,800 --> 00:50:16,319
going

1200
00:50:16,319 --> 00:50:20,000
uh going on to propose standards is uh

1201
00:50:20,000 --> 00:50:22,800
justified

1202
00:50:25,440 --> 00:50:26,480
okay

1203
00:50:26,480 --> 00:50:28,960
so this is not uh how can i say uh

1204
00:50:28,960 --> 00:50:33,040
finalize no number uh but uh you know

1205
00:50:33,040 --> 00:50:35,440
to think about you know how to proceed

1206
00:50:35,440 --> 00:50:37,920
this route i just would like to come the

1207
00:50:37,920 --> 00:50:40,319
number

1208
00:50:40,640 --> 00:50:42,799
so

1209
00:50:47,280 --> 00:50:49,839
it will be

1210
00:50:51,359 --> 00:50:54,079
so if you agree with publishing cubic to

1211
00:50:54,079 --> 00:50:57,680
graph as a proper standard

1212
00:50:57,760 --> 00:51:01,640
please raise your hand

1213
00:51:18,079 --> 00:51:20,319
okay

1214
00:51:20,319 --> 00:51:23,319
25

1215
00:51:28,160 --> 00:51:31,879
26 27

1216
00:51:37,839 --> 00:51:40,160
okay

1217
00:51:40,880 --> 00:51:44,319
let's pretend here

1218
00:51:48,000 --> 00:51:51,440
okay then i can also get another

1219
00:51:51,440 --> 00:51:54,440
information

1220
00:52:04,000 --> 00:52:05,440
if you

1221
00:52:05,440 --> 00:52:06,640
disagree

1222
00:52:06,640 --> 00:52:08,480
with publishing cubic as a purple

1223
00:52:08,480 --> 00:52:10,480
standard

1224
00:52:10,480 --> 00:52:14,200
please raise your hand

1225
00:52:27,839 --> 00:52:30,839
okay

1226
00:52:34,160 --> 00:52:37,680
okay good i think

1227
00:52:38,640 --> 00:52:41,119
28 so

1228
00:52:41,119 --> 00:52:43,040
can i just ask a clarification on the

1229
00:52:43,040 --> 00:52:45,440
poll by jumping in

1230
00:52:45,440 --> 00:52:47,440
okay

1231
00:52:47,440 --> 00:52:49,440
did the last current include those

1232
00:52:49,440 --> 00:52:51,440
people who want to publish it as exp

1233
00:52:51,440 --> 00:52:53,520
rather than just not publish

1234
00:52:53,520 --> 00:52:55,119
because i think some people want to

1235
00:52:55,119 --> 00:52:57,359
publish it as exp

1236
00:52:57,359 --> 00:52:58,400
okay

1237
00:52:58,400 --> 00:53:00,960
then i can add more one more

1238
00:53:00,960 --> 00:53:03,440
question

1239
00:53:12,480 --> 00:53:15,520
a publish cubic as an experimental

1240
00:53:15,520 --> 00:53:19,359
how many people agree with this idea

1241
00:53:25,520 --> 00:53:28,520
one

1242
00:53:37,839 --> 00:53:40,839
hmm

1243
00:53:44,800 --> 00:53:46,000
okay

1244
00:53:46,000 --> 00:53:49,040
number has changed

1245
00:53:52,000 --> 00:53:55,720
pure pressure at work

1246
00:53:56,559 --> 00:54:01,200
democracy and publishing interim results

1247
00:54:01,520 --> 00:54:04,880
okay it's coming back

1248
00:54:04,960 --> 00:54:08,839
i can see some fluctuations

1249
00:54:19,920 --> 00:54:22,400
please make a decision i will cross the

1250
00:54:22,400 --> 00:54:25,839
ball very soon

1251
00:54:28,400 --> 00:54:31,920
it's okay to cross the station

1252
00:54:32,240 --> 00:54:35,040
i will cross

1253
00:54:35,680 --> 00:54:39,078
okay gross

1254
00:54:40,720 --> 00:54:43,920
okay but at least no i think we can get

1255
00:54:43,920 --> 00:54:44,799
good

1256
00:54:44,799 --> 00:54:47,200
statistics for this session

1257
00:54:47,200 --> 00:54:49,680
and but still this is not the final call

1258
00:54:49,680 --> 00:54:51,839
i think we still we should still

1259
00:54:51,839 --> 00:54:53,920
continue the discussion

1260
00:54:53,920 --> 00:54:54,720
and

1261
00:54:54,720 --> 00:54:57,520
but i think i got a good data point

1262
00:54:57,520 --> 00:54:59,920
and oh okay calling you want to make

1263
00:54:59,920 --> 00:55:00,880
something

1264
00:55:00,880 --> 00:55:03,520
make a comment

1265
00:55:03,520 --> 00:55:05,760
oh hey this is large story i

1266
00:55:05,760 --> 00:55:07,359
i'm concerned now that i started looking

1267
00:55:07,359 --> 00:55:09,160
like gory it's no offensive

1268
00:55:09,160 --> 00:55:11,599
[Laughter]

1269
00:55:11,599 --> 00:55:14,960
it's the mask but it's the it's the mask

1270
00:55:14,960 --> 00:55:17,119
oh colin sorry

1271
00:55:17,119 --> 00:55:18,839
and now i disappeared

1272
00:55:18,839 --> 00:55:21,200
okay sorry i forgot to take myself out

1273
00:55:21,200 --> 00:55:22,640
of the queue

1274
00:55:22,640 --> 00:55:24,799
yeah um i i just wanted before so for

1275
00:55:24,799 --> 00:55:27,119
the author's team ask that if people

1276
00:55:27,119 --> 00:55:28,960
because we had the second working group

1277
00:55:28,960 --> 00:55:31,200
call now right if people are okay with

1278
00:55:31,200 --> 00:55:32,799
publishing

1279
00:55:32,799 --> 00:55:34,960
the version as is that would be useful

1280
00:55:34,960 --> 00:55:37,440
to know and if the answer there is no

1281
00:55:37,440 --> 00:55:39,520
it would be very good to know what

1282
00:55:39,520 --> 00:55:42,799
exactly should be added to

1283
00:55:42,799 --> 00:55:44,960
the document i know that gory

1284
00:55:44,960 --> 00:55:46,480
suggested earlier that we add a

1285
00:55:46,480 --> 00:55:49,760
paragraph that said this document didn't

1286
00:55:49,760 --> 00:55:51,920
follow the process outlet in whatever

1287
00:55:51,920 --> 00:55:53,440
the rfc was

1288
00:55:53,440 --> 00:55:54,240
um

1289
00:55:54,240 --> 00:55:55,760
but the uh

1290
00:55:55,760 --> 00:55:59,200
you know the itf discussed this and and

1291
00:55:59,200 --> 00:56:00,880
i want to say proof but at least

1292
00:56:00,880 --> 00:56:02,640
acknowledge that it's not standing in

1293
00:56:02,640 --> 00:56:04,160
the way of this publication or something

1294
00:56:04,160 --> 00:56:06,079
like that if there's other things that

1295
00:56:06,079 --> 00:56:08,079
people want to add that would be also

1296
00:56:08,079 --> 00:56:09,599
good to know

1297
00:56:09,599 --> 00:56:12,160
i would like to ask the chairs for these

1298
00:56:12,160 --> 00:56:14,079
suggested edits to

1299
00:56:14,079 --> 00:56:15,440
a bit more actively asked whether

1300
00:56:15,440 --> 00:56:17,520
there's consensus for this edition

1301
00:56:17,520 --> 00:56:18,960
otherwise we are sort of again in a

1302
00:56:18,960 --> 00:56:20,559
situation where this grab back of things

1303
00:56:20,559 --> 00:56:21,920
that people want to add we don't really

1304
00:56:21,920 --> 00:56:23,680
know what has consensus and what hasn't

1305
00:56:23,680 --> 00:56:26,000
thank you

1306
00:56:26,079 --> 00:56:29,079
okay

1307
00:56:31,520 --> 00:56:32,960
um

1308
00:56:32,960 --> 00:56:34,480
if i recall the discussion if unless i

1309
00:56:34,480 --> 00:56:35,760
missed something in a discussion the

1310
00:56:35,760 --> 00:56:38,640
only person who came to the mic and said

1311
00:56:38,640 --> 00:56:41,119
it should be experimental was lars

1312
00:56:41,119 --> 00:56:42,640
attempting to

1313
00:56:42,640 --> 00:56:45,520
be a sock puppet for for makuu like

1314
00:56:45,520 --> 00:56:46,799
you're kind of trying to like express

1315
00:56:46,799 --> 00:56:48,720
his opinion without him being here

1316
00:56:48,720 --> 00:56:49,760
so if

1317
00:56:49,760 --> 00:56:52,880
if either of the one or two people

1318
00:56:52,880 --> 00:56:53,839
who

1319
00:56:53,839 --> 00:56:55,119
support experimental rather than

1320
00:56:55,119 --> 00:56:57,280
proposed standard could actually like

1321
00:56:57,280 --> 00:56:58,880
say something about it i think that's

1322
00:56:58,880 --> 00:57:00,480
sort of customary

1323
00:57:00,480 --> 00:57:01,920
um

1324
00:57:01,920 --> 00:57:03,359
at least to give them an opportunity to

1325
00:57:03,359 --> 00:57:06,000
state their position

1326
00:57:06,000 --> 00:57:08,319
thanks

1327
00:57:10,799 --> 00:57:12,400
okay and

1328
00:57:12,400 --> 00:57:14,480
so

1329
00:57:14,480 --> 00:57:16,880
okay then i can i'd like to do final you

1330
00:57:16,880 --> 00:57:17,920
know

1331
00:57:17,920 --> 00:57:19,599
both so

1332
00:57:19,599 --> 00:57:22,880
publish to because it is why not this is

1333
00:57:22,880 --> 00:57:23,920
last

1334
00:57:23,920 --> 00:57:26,920
four

1335
00:57:29,119 --> 00:57:33,079
you put a comment

1336
00:57:41,119 --> 00:57:44,240
oh it's some point okay this is really

1337
00:57:44,240 --> 00:57:47,240
interesting

1338
00:57:57,599 --> 00:57:59,920
okay

1339
00:58:00,880 --> 00:58:04,480
there are several okay michael

1340
00:58:05,760 --> 00:58:07,599
you want to make a comment

1341
00:58:07,599 --> 00:58:09,119
yeah michael

1342
00:58:09,119 --> 00:58:10,000
now

1343
00:58:10,000 --> 00:58:12,079
i'm i'm afraid to say that because i'm

1344
00:58:12,079 --> 00:58:13,359
not going to make myself friends with

1345
00:58:13,359 --> 00:58:14,720
that but

1346
00:58:14,720 --> 00:58:16,559
i think the statement that corey wanted

1347
00:58:16,559 --> 00:58:18,720
if that doesn't elaborate on what

1348
00:58:18,720 --> 00:58:21,520
specifically is wrong about the document

1349
00:58:21,520 --> 00:58:23,280
or what specifically these points were

1350
00:58:23,280 --> 00:58:25,599
that marco brought up that i think are

1351
00:58:25,599 --> 00:58:28,400
important in in some way at least

1352
00:58:28,400 --> 00:58:30,240
then that text is confusing to anybody

1353
00:58:30,240 --> 00:58:32,480
reading it right so you have a ps rfc

1354
00:58:32,480 --> 00:58:33,839
that says

1355
00:58:33,839 --> 00:58:35,119
something's fishy here but we're not

1356
00:58:35,119 --> 00:58:37,119
telling you what

1357
00:58:37,119 --> 00:58:39,280
so i i think that this text should

1358
00:58:39,280 --> 00:58:40,319
actually

1359
00:58:40,319 --> 00:58:42,240
elaborate a little bit on on the

1360
00:58:42,240 --> 00:58:44,079
specific issues that marco brought up

1361
00:58:44,079 --> 00:58:46,559
could be just an appendix but i believe

1362
00:58:46,559 --> 00:58:48,079
that text would probably be important to

1363
00:58:48,079 --> 00:58:50,880
have

1364
00:58:50,880 --> 00:58:54,640
okay and now i'm hiding

1365
00:58:56,799 --> 00:58:58,240
okay

1366
00:58:58,240 --> 00:59:00,799
let's stop reporting here

1367
00:59:00,799 --> 00:59:01,760
and

1368
00:59:01,760 --> 00:59:04,720
vidi you want to make some comments um

1369
00:59:04,720 --> 00:59:07,200
yeah so um i just want to reply to

1370
00:59:07,200 --> 00:59:08,960
michael

1371
00:59:08,960 --> 00:59:11,760
that we have been making changes

1372
00:59:11,760 --> 00:59:15,119
based on marco's comments

1373
00:59:15,119 --> 00:59:15,920
and

1374
00:59:15,920 --> 00:59:18,880
writing those uh if there are some open

1375
00:59:18,880 --> 00:59:20,240
issues where writing

1376
00:59:20,240 --> 00:59:23,040
or putting them in the draft for the

1377
00:59:23,040 --> 00:59:25,359
reader to be aware of

1378
00:59:25,359 --> 00:59:28,960
um at this point it isn't clear exactly

1379
00:59:28,960 --> 00:59:31,280
like if there are suggestive texts that

1380
00:59:31,280 --> 00:59:34,480
marku or anyone else would like to add

1381
00:59:34,480 --> 00:59:36,880
would be really happy to add it

1382
00:59:36,880 --> 00:59:38,960
and um that would require some

1383
00:59:38,960 --> 00:59:41,920
participation um and you know some that

1384
00:59:41,920 --> 00:59:44,079
commitment to make that

1385
00:59:44,079 --> 00:59:46,480
to to get that done

1386
00:59:46,480 --> 00:59:50,960
um and um so so you know there are lots

1387
00:59:50,960 --> 00:59:53,680
of emails that marco has sent

1388
00:59:53,680 --> 00:59:54,559
but

1389
00:59:54,559 --> 00:59:56,480
what we have been asking again and again

1390
00:59:56,480 --> 00:59:58,559
is if there is something you have a

1391
00:59:58,559 --> 01:00:00,640
specific suggestion that we could add to

1392
01:00:00,640 --> 01:00:02,799
the draft that would be great

1393
01:00:02,799 --> 01:00:05,680
um so just you know

1394
01:00:05,680 --> 01:00:08,880
it would be good to hear that

1395
01:00:08,880 --> 01:00:11,280
okay so i i did not want to make this

1396
01:00:11,280 --> 01:00:13,920
complicated and i haven't followed the

1397
01:00:13,920 --> 01:00:16,400
last emails from marco anymore but i

1398
01:00:16,400 --> 01:00:18,799
remember that there were things about

1399
01:00:18,799 --> 01:00:22,640
having to update uh probably 3168

1400
01:00:22,640 --> 01:00:25,119
about something and and some procedural

1401
01:00:25,119 --> 01:00:26,799
things right that that he had heavy

1402
01:00:26,799 --> 01:00:28,559
disagreement about

1403
01:00:28,559 --> 01:00:30,160
now i don't remember if that was all

1404
01:00:30,160 --> 01:00:33,680
resolved or not and i mean

1405
01:00:33,680 --> 01:00:35,839
okay i'm fine with publishing without

1406
01:00:35,839 --> 01:00:37,359
having that thing in i don't want to

1407
01:00:37,359 --> 01:00:39,520
make it complicated you really don't

1408
01:00:39,520 --> 01:00:42,400
but if it's possible to state

1409
01:00:42,400 --> 01:00:43,280
why

1410
01:00:43,280 --> 01:00:45,440
there is a procedural problem here and

1411
01:00:45,440 --> 01:00:46,799
why that thing

1412
01:00:46,799 --> 01:00:48,799
gets published nevertheless

1413
01:00:48,799 --> 01:00:50,480
other than just saying okay it's

1414
01:00:50,480 --> 01:00:52,240
published because there is code and is

1415
01:00:52,240 --> 01:00:53,920
deployed

1416
01:00:53,920 --> 01:00:55,520
i mean if we could be a bit more

1417
01:00:55,520 --> 01:00:57,119
elaborate than just something something

1418
01:00:57,119 --> 01:00:58,960
saying something's fishy about this rfc

1419
01:00:58,960 --> 01:01:00,480
then i think this would be valuable if

1420
01:01:00,480 --> 01:01:02,079
we cannot

1421
01:01:02,079 --> 01:01:04,079
i'm not going to make a point about that

1422
01:01:04,079 --> 01:01:07,200
i mean it's okay i still want i think

1423
01:01:07,200 --> 01:01:08,880
the primary thing is that this should be

1424
01:01:08,880 --> 01:01:11,839
a bs

1425
01:01:12,160 --> 01:01:13,440
okay

1426
01:01:13,440 --> 01:01:15,119
thank you so much i think we have lots

1427
01:01:15,119 --> 01:01:16,960
of discussion and that we can get a lot

1428
01:01:16,960 --> 01:01:18,799
of good data point

1429
01:01:18,799 --> 01:01:21,040
and then we are running out of them so

1430
01:01:21,040 --> 01:01:23,040
um i think we can you know

1431
01:01:23,040 --> 01:01:25,200
so cheers can discuss a little bit more

1432
01:01:25,200 --> 01:01:27,760
about how to proceed with this draft

1433
01:01:27,760 --> 01:01:28,640
and

1434
01:01:28,640 --> 01:01:32,000
so thanks so much billy

1435
01:01:32,240 --> 01:01:34,240
now yeah let's move on to the next

1436
01:01:34,240 --> 01:01:35,920
presentation

1437
01:01:35,920 --> 01:01:37,760
bob

1438
01:01:37,760 --> 01:01:40,640
so we are short in time please

1439
01:01:40,640 --> 01:01:43,119
if you can be faster than clan that

1440
01:01:43,119 --> 01:01:45,680
would be great

1441
01:01:45,920 --> 01:01:48,640
that would be great

1442
01:01:50,480 --> 01:01:51,599
all right

1443
01:01:51,599 --> 01:01:53,839
um

1444
01:01:54,720 --> 01:01:56,960
do i

1445
01:01:56,960 --> 01:01:58,880
i've asked for a slide request i don't

1446
01:01:58,880 --> 01:02:01,520
know what happens

1447
01:02:02,079 --> 01:02:03,680
you should mix

1448
01:02:03,680 --> 01:02:07,200
strider requests

1449
01:02:07,200 --> 01:02:09,520
i have

1450
01:02:09,520 --> 01:02:10,799
really

1451
01:02:10,799 --> 01:02:13,680
i don't see

1452
01:02:13,680 --> 01:02:15,680
okay screen or

1453
01:02:15,680 --> 01:02:17,839
yes yes

1454
01:02:17,839 --> 01:02:20,640
oh screen okay

1455
01:02:20,640 --> 01:02:22,640
to be honest i've never done that before

1456
01:02:22,640 --> 01:02:25,118
okay

1457
01:02:26,079 --> 01:02:28,240
can you now say it

1458
01:02:28,240 --> 01:02:31,399
not yet

1459
01:02:35,200 --> 01:02:39,119
i can see a shared screen request open

1460
01:02:39,119 --> 01:02:42,960
isn't it asked to share slides

1461
01:02:42,960 --> 01:02:44,480
yeah that's what i thought that's what i

1462
01:02:44,480 --> 01:02:48,240
did and then yoshi said

1463
01:02:48,240 --> 01:02:49,839
share screen so

1464
01:02:49,839 --> 01:02:52,319
can you try ask to share slides and then

1465
01:02:52,319 --> 01:02:55,039
you will no no yes right sorry yes yes

1466
01:02:55,039 --> 01:02:57,599
right yeah no screen

1467
01:02:57,599 --> 01:02:59,920
yep

1468
01:03:00,319 --> 01:03:03,839
cancel screen request

1469
01:03:05,920 --> 01:03:08,240
hang on

1470
01:03:12,559 --> 01:03:17,480
it's responding very slowly sorry um

1471
01:03:19,440 --> 01:03:22,240
we will get there time is running

1472
01:03:22,240 --> 01:03:23,520
yeah i know

1473
01:03:23,520 --> 01:03:24,720
yeah okay we'll

1474
01:03:24,720 --> 01:03:27,200
i'll talk while while we're waiting for

1475
01:03:27,200 --> 01:03:28,839
this

1476
01:03:28,839 --> 01:03:31,280
um this is

1477
01:03:31,280 --> 01:03:33,599
um

1478
01:03:34,799 --> 01:03:36,000
sorry it's

1479
01:03:36,000 --> 01:03:37,359
it's saying do you really want to share

1480
01:03:37,359 --> 01:03:39,599
your screen i've said no and it's just

1481
01:03:39,599 --> 01:03:41,920
hanging um okay

1482
01:03:41,920 --> 01:03:43,680
um

1483
01:03:43,680 --> 01:03:44,880
this is going to be a talk about

1484
01:03:44,880 --> 01:03:49,200
accuracy and feedback it's draft 18.

1485
01:03:49,760 --> 01:03:53,039
go away there you go right

1486
01:03:53,039 --> 01:03:55,680
now try that

1487
01:03:57,520 --> 01:04:01,038
is are the slides coming up

1488
01:04:02,960 --> 01:04:04,559
not yet

1489
01:04:04,559 --> 01:04:05,440
yeah

1490
01:04:05,440 --> 01:04:06,480
but

1491
01:04:06,480 --> 01:04:09,280
yes finally yes

1492
01:04:09,280 --> 01:04:10,839
okay

1493
01:04:10,839 --> 01:04:13,440
um oh

1494
01:04:13,440 --> 01:04:16,559
no it's gone again

1495
01:04:21,200 --> 01:04:22,960
a new slide deck is being shared it's

1496
01:04:22,960 --> 01:04:25,280
saying

1497
01:04:25,760 --> 01:04:28,960
okay name is here

1498
01:04:28,960 --> 01:04:30,880
let me celebrate him

1499
01:04:30,880 --> 01:04:32,799
okay

1500
01:04:32,799 --> 01:04:34,720
we can see it right so

1501
01:04:34,720 --> 01:04:36,559
am i controlling this or are you

1502
01:04:36,559 --> 01:04:38,640
you are yeah

1503
01:04:38,640 --> 01:04:40,160
can you move on yeah

1504
01:04:40,160 --> 01:04:42,559
yeah so skip the next slide uh as well

1505
01:04:42,559 --> 01:04:45,599
which is a recap of that there's

1506
01:04:45,599 --> 01:04:48,079
a three bit ace field and some

1507
01:04:48,079 --> 01:04:51,599
24 bit option or with 24 bits plus

1508
01:04:51,599 --> 01:04:55,359
headers next

1509
01:04:55,359 --> 01:04:56,480
okay so

1510
01:04:56,480 --> 01:04:59,839
recent draft history um there was a long

1511
01:04:59,839 --> 01:05:01,039
hiatus

1512
01:05:01,039 --> 01:05:04,000
after july 21 but then um like all good

1513
01:05:04,000 --> 01:05:05,839
buses they come in threes

1514
01:05:05,839 --> 01:05:06,960
um

1515
01:05:06,960 --> 01:05:09,200
and so february march

1516
01:05:09,200 --> 01:05:11,359
time we've had three there's links there

1517
01:05:11,359 --> 01:05:13,119
to the summaries of the diffs in each of

1518
01:05:13,119 --> 01:05:13,839
them

1519
01:05:13,839 --> 01:05:15,039
which i'm not going to go through in

1520
01:05:15,039 --> 01:05:16,720
these slides but there are spare slides

1521
01:05:16,720 --> 01:05:18,240
at the end that do

1522
01:05:18,240 --> 01:05:21,039
and thanks to ilpo vidi gory

1523
01:05:21,039 --> 01:05:22,480
richard

1524
01:05:22,480 --> 01:05:24,720
and myself actually for noticing some

1525
01:05:24,720 --> 01:05:26,240
unclear parts but

1526
01:05:26,240 --> 01:05:28,400
um i will go through

1527
01:05:28,400 --> 01:05:29,680
um

1528
01:05:29,680 --> 01:05:31,920
most of those contributions and also

1529
01:05:31,920 --> 01:05:33,520
just to mention that there has been some

1530
01:05:33,520 --> 01:05:35,839
conversation between

1531
01:05:35,839 --> 01:05:37,680
quick authors

1532
01:05:37,680 --> 01:05:38,640
and the

1533
01:05:38,640 --> 01:05:39,440
um

1534
01:05:39,440 --> 01:05:41,359
accuracy and authors about

1535
01:05:41,359 --> 01:05:44,400
how to deal with um

1536
01:05:44,400 --> 01:05:46,160
act frequency

1537
01:05:46,160 --> 01:05:49,480
so next

1538
01:05:50,160 --> 01:05:51,200
uh

1539
01:05:51,200 --> 01:05:53,280
just really news on implementation there

1540
01:05:53,280 --> 01:05:55,119
are two main implementations one in

1541
01:05:55,119 --> 01:05:57,039
linux one and three bsd

1542
01:05:57,039 --> 01:05:59,280
uh the linux one is reasonably up to

1543
01:05:59,280 --> 01:06:01,920
date but it's a couple of um

1544
01:06:01,920 --> 01:06:03,280
draft

1545
01:06:03,280 --> 01:06:06,559
versions out of date but um

1546
01:06:06,559 --> 01:06:09,039
there aren't that many things to do

1547
01:06:09,039 --> 01:06:10,400
rich has been

1548
01:06:10,400 --> 01:06:12,240
implementing in freebsd there's link to

1549
01:06:12,240 --> 01:06:13,359
his

1550
01:06:13,359 --> 01:06:15,200
implementation there

1551
01:06:15,200 --> 01:06:16,559
it currently

1552
01:06:16,559 --> 01:06:18,480
emits handling

1553
01:06:18,480 --> 01:06:21,839
arriving tcp options but it sends them

1554
01:06:21,839 --> 01:06:23,440
and i'm going to talk about that more

1555
01:06:23,440 --> 01:06:26,160
later next

1556
01:06:28,559 --> 01:06:29,440
um

1557
01:06:29,440 --> 01:06:32,960
so this is about the main

1558
01:06:32,960 --> 01:06:34,960
activity that's been going on recently

1559
01:06:34,960 --> 01:06:36,319
on the list

1560
01:06:36,319 --> 01:06:37,359
um

1561
01:06:37,359 --> 01:06:42,079
based on a review comments from vidi

1562
01:06:42,079 --> 01:06:45,119
asking about how you

1563
01:06:45,119 --> 01:06:47,200
deal with any congestion

1564
01:06:47,200 --> 01:06:48,880
feedback coming in when you're not

1565
01:06:48,880 --> 01:06:51,440
sending using capable packets

1566
01:06:51,440 --> 01:06:53,119
so um

1567
01:06:53,119 --> 01:06:54,559
there are a number of cases where you

1568
01:06:54,559 --> 01:06:57,359
might not send incapable packets because

1569
01:06:57,359 --> 01:06:59,039
there's um

1570
01:06:59,039 --> 01:07:00,960
a handshake at the start that checks

1571
01:07:00,960 --> 01:07:02,960
whether there's a mangling going on

1572
01:07:02,960 --> 01:07:05,039
if there is mangling you you still

1573
01:07:05,039 --> 01:07:07,520
remain in actual etn mode

1574
01:07:07,520 --> 01:07:08,480
but you

1575
01:07:08,480 --> 01:07:11,280
don't set ec and not uh acn capable on

1576
01:07:11,280 --> 01:07:13,520
your packets that you send out

1577
01:07:13,520 --> 01:07:15,680
but then video wondered well even if

1578
01:07:15,680 --> 01:07:17,920
you're not sending ecn capable packets

1579
01:07:17,920 --> 01:07:19,200
what if you get

1580
01:07:19,200 --> 01:07:21,359
um congestion marking feedback coming

1581
01:07:21,359 --> 01:07:22,559
back

1582
01:07:22,559 --> 01:07:23,760
and there are

1583
01:07:23,760 --> 01:07:24,799
four

1584
01:07:24,799 --> 01:07:26,640
possible three possible ways we can

1585
01:07:26,640 --> 01:07:28,400
think of doing this

1586
01:07:28,400 --> 01:07:31,440
a b and c here

1587
01:07:33,200 --> 01:07:34,559
the

1588
01:07:34,559 --> 01:07:36,400
um

1589
01:07:36,400 --> 01:07:38,319
in all cases

1590
01:07:38,319 --> 01:07:39,359
you would

1591
01:07:39,359 --> 01:07:43,839
turn off sending ecn capable packets

1592
01:07:43,839 --> 01:07:46,240
but it there's a difference in how we

1593
01:07:46,240 --> 01:07:47,039
think

1594
01:07:47,039 --> 01:07:49,200
you should respond to congestion if it

1595
01:07:49,200 --> 01:07:50,640
comes in

1596
01:07:50,640 --> 01:07:52,799
as shown in the right hand column

1597
01:07:52,799 --> 01:07:54,880
and we'd like some discussion either now

1598
01:07:54,880 --> 01:07:57,680
or on the list of whether these um the

1599
01:07:57,680 --> 01:07:59,119
rationales for these make sense so the

1600
01:07:59,119 --> 01:08:01,920
first one is if during the handshake

1601
01:08:01,920 --> 01:08:02,960
you see

1602
01:08:02,960 --> 01:08:05,440
um some sort of illegal transition going

1603
01:08:05,440 --> 01:08:06,319
on

1604
01:08:06,319 --> 01:08:09,039
like either you send a non-easy packet

1605
01:08:09,039 --> 01:08:11,119
and you get get back

1606
01:08:11,119 --> 01:08:13,039
feedback that said that at the other end

1607
01:08:13,039 --> 01:08:14,559
it was received with

1608
01:08:14,559 --> 01:08:17,600
ecn capable or you said 18k on the other

1609
01:08:17,600 --> 01:08:19,920
end it says it was non-sync when it

1610
01:08:19,920 --> 01:08:21,839
comes back etc etc

1611
01:08:21,839 --> 01:08:22,880
um

1612
01:08:22,880 --> 01:08:24,640
then

1613
01:08:24,640 --> 01:08:26,880
the you you might think well

1614
01:08:26,880 --> 01:08:28,399
it's not going to have any congestion

1615
01:08:28,399 --> 01:08:29,920
response but

1616
01:08:29,920 --> 01:08:31,120
it might

1617
01:08:31,120 --> 01:08:33,679
if the mangling is turning on ecm

1618
01:08:33,679 --> 01:08:36,640
capability and then later on

1619
01:08:36,640 --> 01:08:40,319
there is um some congestion that is um

1620
01:08:40,319 --> 01:08:41,359
doing

1621
01:08:41,359 --> 01:08:43,198
normal congestion marking

1622
01:08:43,198 --> 01:08:45,520
so the idea idea there is that you you

1623
01:08:45,520 --> 01:08:47,759
respond to congestion if you um see any

1624
01:08:47,759 --> 01:08:49,679
feedback even though you wouldn't expect

1625
01:08:49,679 --> 01:08:51,040
to see it

1626
01:08:51,040 --> 01:08:53,600
right um

1627
01:08:53,600 --> 01:08:56,238
in the in the b case

1628
01:08:56,238 --> 01:08:57,359
um

1629
01:08:57,359 --> 01:08:58,479
if you see

1630
01:08:58,479 --> 01:09:01,198
continuous congestion feedback then you

1631
01:09:01,198 --> 01:09:04,158
don't respond to it especially if you're

1632
01:09:04,158 --> 01:09:07,359
if you're not sending um ect but even if

1633
01:09:07,359 --> 01:09:09,759
you are that probably implies there's

1634
01:09:09,759 --> 01:09:12,080
mangling going on that's that's

1635
01:09:12,080 --> 01:09:14,960
asserting um congestion experienced all

1636
01:09:14,960 --> 01:09:16,238
the time

1637
01:09:16,238 --> 01:09:20,000
and the third case c

1638
01:09:20,000 --> 01:09:22,238
if you get a zeroed

1639
01:09:22,238 --> 01:09:24,399
um ace field which is this three bit

1640
01:09:24,399 --> 01:09:25,520
field

1641
01:09:25,520 --> 01:09:26,319
um

1642
01:09:26,319 --> 01:09:28,000
you shouldn't see that at the start so

1643
01:09:28,000 --> 01:09:30,319
that probably means a broken receiver or

1644
01:09:30,319 --> 01:09:32,158
something's wrong

1645
01:09:32,158 --> 01:09:33,439
um

1646
01:09:33,439 --> 01:09:35,839
and therefore it's probably best not to

1647
01:09:35,839 --> 01:09:37,920
respond to congestion and just

1648
01:09:37,920 --> 01:09:42,000
um if you know just solely rely on loss

1649
01:09:42,000 --> 01:09:43,520
so

1650
01:09:43,520 --> 01:09:44,960
um we've written

1651
01:09:44,960 --> 01:09:47,120
that all up in the drafts we went

1652
01:09:47,120 --> 01:09:48,960
through a stage of having must and must

1653
01:09:48,960 --> 01:09:50,799
knots for all those things and then it

1654
01:09:50,799 --> 01:09:52,799
was suggested that we should make them

1655
01:09:52,799 --> 01:09:54,640
all advisory rather than

1656
01:09:54,640 --> 01:09:57,360
normative because

1657
01:09:57,360 --> 01:10:01,199
with deployment experience there may be

1658
01:10:01,199 --> 01:10:03,920
unexpected things going on that we

1659
01:10:03,920 --> 01:10:06,000
need to deal with so we didn't want to

1660
01:10:06,000 --> 01:10:07,760
tie things down too much okay so that

1661
01:10:07,760 --> 01:10:10,800
was quite a complex slide but um

1662
01:10:10,800 --> 01:10:11,760
please

1663
01:10:11,760 --> 01:10:13,440
respond on the list about any of that

1664
01:10:13,440 --> 01:10:17,159
next slide please

1665
01:10:17,760 --> 01:10:19,840
so um in the process

1666
01:10:19,840 --> 01:10:22,080
um of these latest edits i did a review

1667
01:10:22,080 --> 01:10:24,719
of all the lowercase mustang shoulds and

1668
01:10:24,719 --> 01:10:26,880
mays and recommended things

1669
01:10:26,880 --> 01:10:27,679
and

1670
01:10:27,679 --> 01:10:30,400
changed them all to needs to or ought to

1671
01:10:30,400 --> 01:10:31,679
or might

1672
01:10:31,679 --> 01:10:32,640
um

1673
01:10:32,640 --> 01:10:35,280
so that they were not um and

1674
01:10:35,280 --> 01:10:37,760
had no potential of being red and

1675
01:10:37,760 --> 01:10:40,400
red ambiguously as potentially meant to

1676
01:10:40,400 --> 01:10:42,080
be in capitals

1677
01:10:42,080 --> 01:10:43,520
there were just two cases where i

1678
01:10:43,520 --> 01:10:45,120
changed lowercase recommended to

1679
01:10:45,120 --> 01:10:46,320
uppercase

1680
01:10:46,320 --> 01:10:48,800
um and i think they were justified one

1681
01:10:48,800 --> 01:10:51,120
is it said already in the introduction

1682
01:10:51,120 --> 01:10:52,719
it's recommended to implement sac and

1683
01:10:52,719 --> 01:10:55,360
ecm plus plus with accurate ecn

1684
01:10:55,360 --> 01:10:56,640
and um

1685
01:10:56,640 --> 01:10:59,440
made that um uppercase

1686
01:10:59,440 --> 01:11:01,600
and similarly there was one saying it

1687
01:11:01,600 --> 01:11:03,679
strongly recommended to test the path

1688
01:11:03,679 --> 01:11:05,840
traversal of the accuracy and option

1689
01:11:05,840 --> 01:11:07,440
and given it already said strongly i

1690
01:11:07,440 --> 01:11:09,520
figured that was quite reasonable to put

1691
01:11:09,520 --> 01:11:11,600
normative there but if anyone wants to

1692
01:11:11,600 --> 01:11:13,199
object to that please do so on the list

1693
01:11:13,199 --> 01:11:15,199
or now at the mic

1694
01:11:15,199 --> 01:11:18,400
um next slide

1695
01:11:20,560 --> 01:11:22,159
um

1696
01:11:22,159 --> 01:11:23,760
there are um

1697
01:11:23,760 --> 01:11:25,760
as i said spare slides with all the

1698
01:11:25,760 --> 01:11:28,239
detailed changes and i've also posted

1699
01:11:28,239 --> 01:11:30,400
um each one to the list

1700
01:11:30,400 --> 01:11:32,320
there are only really three technical

1701
01:11:32,320 --> 01:11:34,159
changes all the other changes are just

1702
01:11:34,159 --> 01:11:37,520
trying to clarify normative text usually

1703
01:11:37,520 --> 01:11:39,040
the three technical changes are all that

1704
01:11:39,040 --> 01:11:41,040
stuff i just mentioned about congestion

1705
01:11:41,040 --> 01:11:44,159
response if not sending ect

1706
01:11:44,159 --> 01:11:45,360
then there's

1707
01:11:45,360 --> 01:11:46,960
a change where

1708
01:11:46,960 --> 01:11:49,600
um we've allowed

1709
01:11:49,600 --> 01:11:50,640
seven

1710
01:11:50,640 --> 01:11:51,840
um

1711
01:11:51,840 --> 01:11:54,719
packets to go by before you um have to

1712
01:11:54,719 --> 01:11:57,280
send some feedback rather than six

1713
01:11:57,280 --> 01:11:59,600
um because the rap is at eight

1714
01:11:59,600 --> 01:12:01,280
and we couldn't really think why we'd

1715
01:12:01,280 --> 01:12:03,760
said six so we changed it to seven

1716
01:12:03,760 --> 01:12:06,320
um we've just been conservative and the

1717
01:12:06,320 --> 01:12:11,280
third case um is a bit of a fallout from

1718
01:12:11,280 --> 01:12:12,239
when

1719
01:12:12,239 --> 01:12:13,760
we changed the

1720
01:12:13,760 --> 01:12:15,040
um

1721
01:12:15,040 --> 01:12:18,719
tcp option accurate ecm tcp option

1722
01:12:18,719 --> 01:12:20,960
so we had two different tcp option

1723
01:12:20,960 --> 01:12:22,719
orders if you remember

1724
01:12:22,719 --> 01:12:24,159
we went through that episode of changing

1725
01:12:24,159 --> 01:12:24,960
it

1726
01:12:24,960 --> 01:12:28,080
and you noticed that we hadn't

1727
01:12:28,080 --> 01:12:29,280
um

1728
01:12:29,280 --> 01:12:32,080
changed the initialization of the two

1729
01:12:32,080 --> 01:12:33,679
um

1730
01:12:33,679 --> 01:12:35,520
fields

1731
01:12:35,520 --> 01:12:37,520
from how it was originally when we only

1732
01:12:37,520 --> 01:12:39,600
had one option or one type of option so

1733
01:12:39,600 --> 01:12:41,600
we'll change that

1734
01:12:41,600 --> 01:12:45,840
okay um next slide

1735
01:12:46,640 --> 01:12:49,280
a couple of upcoming changes

1736
01:12:49,280 --> 01:12:52,159
um this slide the first one

1737
01:12:52,159 --> 01:12:53,199
um

1738
01:12:53,199 --> 01:12:55,360
gauri's recently

1739
01:12:55,360 --> 01:12:57,040
very recently been talking on the list

1740
01:12:57,040 --> 01:12:59,360
about how he's not happy with this

1741
01:12:59,360 --> 01:13:03,840
um accurate ecn draft updating or

1742
01:13:03,840 --> 01:13:05,840
3449 which is

1743
01:13:05,840 --> 01:13:08,320
about network path asymmetry

1744
01:13:08,320 --> 01:13:09,760
um

1745
01:13:09,760 --> 01:13:11,040
and

1746
01:13:11,040 --> 01:13:13,440
originally i thought it should update it

1747
01:13:13,440 --> 01:13:15,600
because it said oh three three three

1748
01:13:15,600 --> 01:13:17,840
four four nine said

1749
01:13:17,840 --> 01:13:19,120
that

1750
01:13:19,120 --> 01:13:22,800
act filtering middle boxes

1751
01:13:22,800 --> 01:13:26,560
ought to make sure that 3168 feedback

1752
01:13:26,560 --> 01:13:27,679
works

1753
01:13:27,679 --> 01:13:29,199
and so i thought well as we're changing

1754
01:13:29,199 --> 01:13:32,000
3168 feedback we ought to update that

1755
01:13:32,000 --> 01:13:33,440
advice as well

1756
01:13:33,440 --> 01:13:34,239
um

1757
01:13:34,239 --> 01:13:35,280
but

1758
01:13:35,280 --> 01:13:37,120
there is an argument that

1759
01:13:37,120 --> 01:13:38,159
that

1760
01:13:38,159 --> 01:13:41,120
advice in 3449 isn't normative so maybe

1761
01:13:41,120 --> 01:13:43,600
we're not updating it so

1762
01:13:43,600 --> 01:13:45,280
i don't mind going with what gory says

1763
01:13:45,280 --> 01:13:48,640
but maybe other people want to chip in

1764
01:13:48,640 --> 01:13:50,239
on that point

1765
01:13:50,239 --> 01:13:51,600
but whatever we're going to try and

1766
01:13:51,600 --> 01:13:53,920
change the text to outline the problem

1767
01:13:53,920 --> 01:13:55,280
and discuss possible ways forward

1768
01:13:55,280 --> 01:13:56,880
without recommending any changes and

1769
01:13:56,880 --> 01:13:59,280
without updating 3-4-9

1770
01:13:59,280 --> 01:14:00,880
but if people feel strongly we should

1771
01:14:00,880 --> 01:14:03,440
update three four four nine then please

1772
01:14:03,440 --> 01:14:04,800
say

1773
01:14:04,800 --> 01:14:06,480
um

1774
01:14:06,480 --> 01:14:08,879
next

1775
01:14:09,760 --> 01:14:11,440
second upcoming change and i think just

1776
01:14:11,440 --> 01:14:12,880
one more slide

1777
01:14:12,880 --> 01:14:15,840
um

1778
01:14:17,280 --> 01:14:18,960
through the experience of richard's

1779
01:14:18,960 --> 01:14:21,280
implementation and ill pose

1780
01:14:21,280 --> 01:14:22,560
um

1781
01:14:22,560 --> 01:14:23,679
found that

1782
01:14:23,679 --> 01:14:26,239
actually sending it accurately an option

1783
01:14:26,239 --> 01:14:28,400
is the easy part of the code

1784
01:14:28,400 --> 01:14:29,440
and

1785
01:14:29,440 --> 01:14:31,040
handling the receipt of it is the

1786
01:14:31,040 --> 01:14:32,480
difficult part

1787
01:14:32,480 --> 01:14:33,440
and so

1788
01:14:33,440 --> 01:14:35,920
whereas it currently says if you don't

1789
01:14:35,920 --> 01:14:36,880
want to

1790
01:14:36,880 --> 01:14:38,960
implement the um

1791
01:14:38,960 --> 01:14:40,640
accurate ecn option

1792
01:14:40,640 --> 01:14:42,560
at least consider

1793
01:14:42,560 --> 01:14:44,000
implementing

1794
01:14:44,000 --> 01:14:46,320
um if you don't want to send it at least

1795
01:14:46,320 --> 01:14:48,320
consider receiving it we want to change

1796
01:14:48,320 --> 01:14:50,080
that round too if you don't want to

1797
01:14:50,080 --> 01:14:51,040
implement

1798
01:14:51,040 --> 01:14:53,120
receiving it at least consider sending

1799
01:14:53,120 --> 01:14:53,920
it

1800
01:14:53,920 --> 01:14:54,880
and then

1801
01:14:54,880 --> 01:14:56,880
that means that the other end if they

1802
01:14:56,880 --> 01:14:59,040
implement it at least it will work

1803
01:14:59,040 --> 01:14:59,840
um

1804
01:14:59,840 --> 01:15:01,520
even if you're ignoring what they're

1805
01:15:01,520 --> 01:15:03,360
seeing

1806
01:15:03,360 --> 01:15:05,440
so it gives a little immediate

1807
01:15:05,440 --> 01:15:07,040
gratification

1808
01:15:07,040 --> 01:15:09,040
of the

1809
01:15:09,040 --> 01:15:11,840
um

1810
01:15:23,600 --> 01:15:24,960
other than

1811
01:15:24,960 --> 01:15:26,880
dealing with the

1812
01:15:26,880 --> 01:15:27,679
um

1813
01:15:27,679 --> 01:15:30,159
upcoming changes one of which is

1814
01:15:30,159 --> 01:15:33,760
still working through that um

1815
01:15:33,760 --> 01:15:36,840
filtering section with um with gauri and

1816
01:15:36,840 --> 01:15:39,600
then writing text for that

1817
01:15:39,600 --> 01:15:41,840
um

1818
01:15:41,920 --> 01:15:44,560
please could the people who asked for

1819
01:15:44,560 --> 01:15:46,640
the recent changes just confirmed

1820
01:15:46,640 --> 01:15:48,640
they're okay on the list or not

1821
01:15:48,640 --> 01:15:49,840
and otherwise i think we're ready for

1822
01:15:49,840 --> 01:15:51,840
working group last call and as i

1823
01:15:51,840 --> 01:15:53,920
mentioned earlier generalized ecn

1824
01:15:53,920 --> 01:15:56,719
depends on this one

1825
01:15:57,530 --> 01:15:58,880
[Music]

1826
01:15:58,880 --> 01:16:01,040
okay thank you bob

1827
01:16:01,040 --> 01:16:02,719
so jonathan

1828
01:16:02,719 --> 01:16:06,080
please be quick

1829
01:16:06,080 --> 01:16:06,960
okay

1830
01:16:06,960 --> 01:16:09,040
two quick things uh previous slide

1831
01:16:09,040 --> 01:16:10,800
number nine

1832
01:16:10,800 --> 01:16:14,080
um this proposed change would be the

1833
01:16:14,080 --> 01:16:15,600
opposite

1834
01:16:15,600 --> 01:16:19,440
of the interoperability principle

1835
01:16:19,440 --> 01:16:20,560
i.e

1836
01:16:20,560 --> 01:16:23,920
be uh conservative in what you emit and

1837
01:16:23,920 --> 01:16:25,760
generous in what you

1838
01:16:25,760 --> 01:16:27,840
accept

1839
01:16:27,840 --> 01:16:30,159
um

1840
01:16:31,440 --> 01:16:33,440
the other thing i would note and i've

1841
01:16:33,440 --> 01:16:35,600
put this on the list in the past couple

1842
01:16:35,600 --> 01:16:36,880
of hours

1843
01:16:36,880 --> 01:16:38,239
is that

1844
01:16:38,239 --> 01:16:39,920
i think um

1845
01:16:39,920 --> 01:16:42,719
the accurate request which i think will

1846
01:16:42,719 --> 01:16:45,280
be seen uh shortly

1847
01:16:45,280 --> 01:16:47,199
or talked about shortly

1848
01:16:47,199 --> 01:16:49,120
offers an alternative way of getting

1849
01:16:49,120 --> 01:16:52,400
generalized eats the end on

1850
01:16:52,400 --> 01:16:55,360
so we'll talk about that in more detail

1851
01:16:55,360 --> 01:16:57,840
elsewhere

1852
01:16:57,840 --> 01:16:59,679
okay um

1853
01:16:59,679 --> 01:17:01,920
i can i respond to both those the first

1854
01:17:01,920 --> 01:17:02,960
one

1855
01:17:02,960 --> 01:17:05,199
i don't think this is about liberal and

1856
01:17:05,199 --> 01:17:07,360
in what you receive or send these two

1857
01:17:07,360 --> 01:17:08,480
cases

1858
01:17:08,480 --> 01:17:10,000
um

1859
01:17:10,000 --> 01:17:12,480
they're um in either case

1860
01:17:12,480 --> 01:17:14,800
one end is is not doing something and

1861
01:17:14,800 --> 01:17:17,840
the other end is doing something

1862
01:17:17,920 --> 01:17:20,719
so i i definitely don't think this

1863
01:17:20,719 --> 01:17:22,880
contravenes that principle but if you've

1864
01:17:22,880 --> 01:17:24,400
said this on the list i can respond

1865
01:17:24,400 --> 01:17:25,199
there

1866
01:17:25,199 --> 01:17:27,760
when i've fully understood what you mean

1867
01:17:27,760 --> 01:17:30,880
and the other case i don't also see how

1868
01:17:30,880 --> 01:17:33,600
um the act create requesting

1869
01:17:33,600 --> 01:17:34,880
makes

1870
01:17:34,880 --> 01:17:35,760
um

1871
01:17:35,760 --> 01:17:37,679
generalized ecn

1872
01:17:37,679 --> 01:17:39,199
or does it realize this year and it

1873
01:17:39,199 --> 01:17:40,480
seems

1874
01:17:40,480 --> 01:17:42,239
that generalization is a different thing

1875
01:17:42,239 --> 01:17:46,080
it's trying to make control packets

1876
01:17:46,080 --> 01:17:48,239
um he's incapable which

1877
01:17:48,239 --> 01:17:50,320
i don't see how that relates directly to

1878
01:17:50,320 --> 01:17:54,519
the outbreak but um

1879
01:18:00,719 --> 01:18:02,480
okay

1880
01:18:02,480 --> 01:18:04,880
um thanks for the

1881
01:18:04,880 --> 01:18:08,000
rit 349 proposal on the list i'm very

1882
01:18:08,000 --> 01:18:09,520
happy with the direction that's going

1883
01:18:09,520 --> 01:18:11,199
i'm sure the rest of the documents

1884
01:18:11,199 --> 01:18:13,600
pretty ready the one thing i objected to

1885
01:18:13,600 --> 01:18:16,080
reading which you did not pick up on was

1886
01:18:16,080 --> 01:18:18,400
the strongly recommend

1887
01:18:18,400 --> 01:18:20,480
i'm not sure our ad would be that happy

1888
01:18:20,480 --> 01:18:22,719
having a strongly recommend

1889
01:18:22,719 --> 01:18:24,320
can you can you just replace that by

1890
01:18:24,320 --> 01:18:26,320
recommend and say why it's so important

1891
01:18:26,320 --> 01:18:28,080
because it is important

1892
01:18:28,080 --> 01:18:31,440
yep okay i can do that yeah

1893
01:18:36,080 --> 01:18:38,480
okay so

1894
01:18:38,480 --> 01:18:41,280
they'll still need more updates i think

1895
01:18:41,280 --> 01:18:42,960
um

1896
01:18:42,960 --> 01:18:44,480
okay yes

1897
01:18:44,480 --> 01:18:45,920
let's continue the discussion a little

1898
01:18:45,920 --> 01:18:48,000
bit more and then we can think about you

1899
01:18:48,000 --> 01:18:49,440
know if it's ready for working group

1900
01:18:49,440 --> 01:18:53,080
restaurant or not

1901
01:18:54,480 --> 01:18:57,280
sounds good park

1902
01:18:59,360 --> 01:19:01,679
thank you

1903
01:19:02,159 --> 01:19:04,560
okay thanks so much so

1904
01:19:04,560 --> 01:19:06,560
okay

1905
01:19:06,560 --> 01:19:10,719
so moving on to the next presentation

1906
01:19:10,719 --> 01:19:13,199
chorus

1907
01:19:14,000 --> 01:19:15,280
so if you can

1908
01:19:15,280 --> 01:19:17,120
be a bit faster than planned that would

1909
01:19:17,120 --> 01:19:19,040
be really great

1910
01:19:19,040 --> 01:19:20,640
yeah i'll try it

1911
01:19:20,640 --> 01:19:21,440
so

1912
01:19:21,440 --> 01:19:22,640
should i

1913
01:19:22,640 --> 01:19:25,920
ask to share slides or

1914
01:19:27,120 --> 01:19:28,480
yeah

1915
01:19:28,480 --> 01:19:30,239
if you want if you want to control your

1916
01:19:30,239 --> 01:19:32,639
stride

1917
01:19:33,120 --> 01:19:36,120
yes

1918
01:19:40,480 --> 01:19:42,320
i think we also need to get lost lights

1919
01:19:42,320 --> 01:19:44,480
off

1920
01:19:46,960 --> 01:19:48,320
i think quite

1921
01:19:48,320 --> 01:19:50,000
yeah because i'm seeing like i can

1922
01:19:50,000 --> 01:19:53,440
control bob's slides

1923
01:19:54,239 --> 01:19:56,159
white

1924
01:19:56,159 --> 01:19:58,159
okay maybe

1925
01:19:58,159 --> 01:19:59,360
i think

1926
01:19:59,360 --> 01:20:01,440
it shows me that yoshi is sharing the

1927
01:20:01,440 --> 01:20:03,600
slides

1928
01:20:03,600 --> 01:20:06,480
why is he wearing

1929
01:20:06,560 --> 01:20:09,600
i just stopped sharing slides

1930
01:20:09,600 --> 01:20:10,720
yeah

1931
01:20:10,720 --> 01:20:13,199
[Music]

1932
01:20:13,199 --> 01:20:15,280
car

1933
01:20:15,280 --> 01:20:19,840
should i ask again two shares yeah

1934
01:20:20,960 --> 01:20:24,320
and we have some small voices in ian's

1935
01:20:24,320 --> 01:20:27,440
background again i think

1936
01:20:29,040 --> 01:20:31,840
okay i don't see my slides

1937
01:20:31,840 --> 01:20:34,080
here

1938
01:20:35,920 --> 01:20:37,920
coming up maybe the new deck is being

1939
01:20:37,920 --> 01:20:40,320
shared

1940
01:20:43,679 --> 01:20:46,560
no again i didn't find my slides

1941
01:20:46,560 --> 01:20:49,120
on the list

1942
01:20:52,400 --> 01:20:55,840
maybe if you can control them uh yoshi

1943
01:20:55,840 --> 01:20:58,320
or perhaps i can also share my screen

1944
01:20:58,320 --> 01:21:00,800
whatever you prefer

1945
01:21:00,800 --> 01:21:02,080
okay it might be easier to share your

1946
01:21:02,080 --> 01:21:04,400
screen if you have it open

1947
01:21:04,400 --> 01:21:08,360
it's probably the fastest option

1948
01:21:17,360 --> 01:21:20,799
you're working okay

1949
01:21:22,320 --> 01:21:24,880
sorry

1950
01:21:25,920 --> 01:21:29,840
okay can you see the slides now

1951
01:21:29,840 --> 01:21:31,199
okay

1952
01:21:31,199 --> 01:21:33,760
thank you my name is carlos gomez and

1953
01:21:33,760 --> 01:21:35,280
i'm going to present the last update of

1954
01:21:35,280 --> 01:21:38,000
the draft entitled tcp a great request

1955
01:21:38,000 --> 01:21:40,480
star option my co-author is john cochran

1956
01:21:40,480 --> 01:21:42,639
from the university of cambridge

1957
01:21:42,639 --> 01:21:44,719
first of all let's take a look at the

1958
01:21:44,719 --> 01:21:46,719
motivation for this draft

1959
01:21:46,719 --> 01:21:49,920
delay dax is a widely used mechanism

1960
01:21:49,920 --> 01:21:51,840
which is intended to reduce protocol

1961
01:21:51,840 --> 01:21:53,199
overhead

1962
01:21:53,199 --> 01:21:55,280
however in some cases it may also

1963
01:21:55,280 --> 01:21:58,159
contribute to suboptimal performance

1964
01:21:58,159 --> 01:22:01,040
we can identify two types of scenarios

1965
01:22:01,040 --> 01:22:02,159
here

1966
01:22:02,159 --> 01:22:04,159
the first is so-called large congestion

1967
01:22:04,159 --> 01:22:05,600
window scenarios

1968
01:22:05,600 --> 01:22:07,360
that means when the congestion window

1969
01:22:07,360 --> 01:22:10,800
size is much greater than the mss where

1970
01:22:10,800 --> 01:22:12,960
saving up to one of every two acts may

1971
01:22:12,960 --> 01:22:15,120
be insufficient for example in some

1972
01:22:15,120 --> 01:22:16,560
cases there might be performance

1973
01:22:16,560 --> 01:22:18,239
limitations due to a symmetric path

1974
01:22:18,239 --> 01:22:19,520
capacity

1975
01:22:19,520 --> 01:22:22,320
and also in some cases we might

1976
01:22:22,320 --> 01:22:24,880
want to reduce further the computational

1977
01:22:24,880 --> 01:22:27,520
cost and network load

1978
01:22:27,520 --> 01:22:29,199
then there's also so-called small

1979
01:22:29,199 --> 01:22:30,960
congestion window scenarios that means

1980
01:22:30,960 --> 01:22:32,880
with the congestion window size up to

1981
01:22:32,880 --> 01:22:36,000
the order of around one mss

1982
01:22:36,000 --> 01:22:37,120
for example

1983
01:22:37,120 --> 01:22:39,440
this would be in data centers where the

1984
01:22:39,440 --> 01:22:41,520
bandwidth delay product is up to the

1985
01:22:41,520 --> 01:22:43,280
order of one mss

1986
01:22:43,280 --> 01:22:46,320
and in this case the led x will incur a

1987
01:22:46,320 --> 01:22:49,360
delay much greater than the rtd

1988
01:22:49,360 --> 01:22:52,480
and also in transactional data exchanges

1989
01:22:52,480 --> 01:22:54,159
or when the congestion window has

1990
01:22:54,159 --> 01:22:56,400
decreased the ability of requesting

1991
01:22:56,400 --> 01:22:59,920
immediate acts may help avoid idle times

1992
01:22:59,920 --> 01:23:03,520
long faster congestion window growth

1993
01:23:03,520 --> 01:23:05,760
so about the status of the draft

1994
01:23:05,760 --> 01:23:07,760
perhaps if you may recall before

1995
01:23:07,760 --> 01:23:09,280
creating the draft there was some prior

1996
01:23:09,280 --> 01:23:12,159
discussion on sender control of tcpx

1997
01:23:12,159 --> 01:23:12,960
which

1998
01:23:12,960 --> 01:23:15,040
appeared at least to me to convert to

1999
01:23:15,040 --> 01:23:17,120
defining a new tcp option serving two

2000
01:23:17,120 --> 01:23:19,920
purposes the ability of requesting a

2001
01:23:19,920 --> 01:23:21,840
given upgrade and the ability of

2002
01:23:21,840 --> 01:23:24,239
requesting immediate acts

2003
01:23:24,239 --> 01:23:27,040
so today i'm presenting version zero

2004
01:23:27,040 --> 01:23:27,840
three

2005
01:23:27,840 --> 01:23:30,560
which aims to address comments from

2006
01:23:30,560 --> 01:23:33,120
yoshi michael jonathan and bob

2007
01:23:33,120 --> 01:23:35,760
many thanks for the very useful and

2008
01:23:35,760 --> 01:23:38,719
helpful feedback

2009
01:23:38,719 --> 01:23:40,480
so let's go through the updates in zero

2010
01:23:40,480 --> 01:23:41,520
three

2011
01:23:41,520 --> 01:23:44,239
the first one is in the main format of

2012
01:23:44,239 --> 01:23:45,280
the option

2013
01:23:45,280 --> 01:23:48,880
uh previously we had a six byte format

2014
01:23:48,880 --> 01:23:51,679
and now it's just five bytes

2015
01:23:51,679 --> 01:23:54,400
basically we have remove the field

2016
01:23:54,400 --> 01:23:55,760
called n

2017
01:23:55,760 --> 01:23:58,800
uh here this was intended so that when r

2018
01:23:58,800 --> 01:24:01,120
was set to zero the sender could

2019
01:24:01,120 --> 01:24:03,199
request immediate acts for the next n

2020
01:24:03,199 --> 01:24:05,040
segments however

2021
01:24:05,040 --> 01:24:07,040
it was found that this was mostly

2022
01:24:07,040 --> 01:24:08,560
redundant so it's

2023
01:24:08,560 --> 01:24:11,360
possible to produce the same effect

2024
01:24:11,360 --> 01:24:14,719
without an explicit field called n

2025
01:24:14,719 --> 01:24:15,600
and then

2026
01:24:15,600 --> 01:24:19,280
also in the new format the size of the r

2027
01:24:19,280 --> 01:24:22,080
field which corresponds to the ack raid

2028
01:24:22,080 --> 01:24:23,840
requested

2029
01:24:23,840 --> 01:24:25,600
has a size of six bits

2030
01:24:25,600 --> 01:24:28,639
and also there's one new bit which would

2031
01:24:28,639 --> 01:24:31,120
be at the moment reserved this is called

2032
01:24:31,120 --> 01:24:33,199
v

2033
01:24:33,199 --> 01:24:36,080
so for the r field there there are like

2034
01:24:36,080 --> 01:24:38,800
two possible encodings on the table

2035
01:24:38,800 --> 01:24:40,960
the first one would be

2036
01:24:40,960 --> 01:24:43,040
like the straightforward approach which

2037
01:24:43,040 --> 01:24:44,960
is the binary encoding of the requested

2038
01:24:44,960 --> 01:24:47,920
ack rate by the maximum value of r since

2039
01:24:47,920 --> 01:24:51,440
we have 64. sorry well six bits is

2040
01:24:51,440 --> 01:24:54,560
the maximum value 63 and then the second

2041
01:24:54,560 --> 01:24:57,040
option is one of those which were

2042
01:24:57,040 --> 01:24:58,639
suggested by bob

2043
01:24:58,639 --> 01:25:00,560
where there would be four beats

2044
01:25:00,560 --> 01:25:03,360
dedicated to represent a mantissa m two

2045
01:25:03,360 --> 01:25:06,080
bits for representing an exponent e and

2046
01:25:06,080 --> 01:25:08,159
then the requested act rate would be

2047
01:25:08,159 --> 01:25:11,440
computed as you can see on the slide

2048
01:25:11,440 --> 01:25:13,840
and in this case the range of

2049
01:25:13,840 --> 01:25:16,880
possible requested values for r is

2050
01:25:16,880 --> 01:25:19,199
greater although there's better

2051
01:25:19,199 --> 01:25:23,520
granularity for the lower values of r

2052
01:25:23,520 --> 01:25:25,760
um well i don't know if there are

2053
01:25:25,760 --> 01:25:27,199
comments on this or perhaps we can

2054
01:25:27,199 --> 01:25:28,719
discuss at the end

2055
01:25:28,719 --> 01:25:30,960
by the way since i'm sharing my screen i

2056
01:25:30,960 --> 01:25:34,560
cannot see at all uh the queue okay

2057
01:25:34,560 --> 01:25:36,719
so um

2058
01:25:36,719 --> 01:25:38,080
okay so

2059
01:25:38,080 --> 01:25:40,960
then we also have updates in section

2060
01:25:40,960 --> 01:25:43,440
three which describes the behavior of

2061
01:25:43,440 --> 01:25:46,239
the sender the receiver

2062
01:25:46,239 --> 01:25:47,440
first

2063
01:25:47,440 --> 01:25:49,679
we state that a direction capable

2064
01:25:49,679 --> 01:25:51,679
receiving tcp should modify its

2065
01:25:51,679 --> 01:25:53,760
aggregate to one and every r receive

2066
01:25:53,760 --> 01:25:55,600
data segments from the sender

2067
01:25:55,600 --> 01:25:57,760
and this used to be a must in previous

2068
01:25:57,760 --> 01:26:00,480
versions however it's been modified to

2069
01:26:00,480 --> 01:26:01,360
shoot

2070
01:26:01,360 --> 01:26:02,960
because actually there may be several

2071
01:26:02,960 --> 01:26:05,600
reasons why a receiver might not be able

2072
01:26:05,600 --> 01:26:08,400
to satisfy the request

2073
01:26:08,400 --> 01:26:10,320
for example lack of resources also

2074
01:26:10,320 --> 01:26:12,800
security as i will mention later

2075
01:26:12,800 --> 01:26:15,760
also we've clarified that r equal to 1

2076
01:26:15,760 --> 01:26:17,920
means that the receiving tcp should send

2077
01:26:17,920 --> 01:26:20,719
an arc immediately but r equal to 0 is

2078
01:26:20,719 --> 01:26:22,719
not defined at the moment maybe pending

2079
01:26:22,719 --> 01:26:25,679
how we finally represent r in the field

2080
01:26:25,679 --> 01:26:27,199
before

2081
01:26:27,199 --> 01:26:29,040
then we've completed a bit the

2082
01:26:29,040 --> 01:26:32,400
description of announcing support of the

2083
01:26:32,400 --> 01:26:34,000
tar option

2084
01:26:34,000 --> 01:26:36,400
and here by the way there was a

2085
01:26:36,400 --> 01:26:39,440
suggestion by bob about well considering

2086
01:26:39,440 --> 01:26:40,560
due to

2087
01:26:40,560 --> 01:26:42,320
the the lack of space

2088
01:26:42,320 --> 01:26:44,800
in scene package that perhaps we might

2089
01:26:44,800 --> 01:26:46,000
want to

2090
01:26:46,000 --> 01:26:49,920
include the support of tar option only

2091
01:26:49,920 --> 01:26:51,679
in response to a synagogue so i don't

2092
01:26:51,679 --> 01:26:54,320
know if there may be comments on this

2093
01:26:54,320 --> 01:26:56,560
also there was another suggestion to

2094
01:26:56,560 --> 01:27:00,080
aggregate this option with others as in

2095
01:27:00,080 --> 01:27:02,000
yoshi's draft

2096
01:27:02,000 --> 01:27:02,800
and

2097
01:27:02,800 --> 01:27:06,000
another clarification is that a tcp

2098
01:27:06,000 --> 01:27:06,960
segment

2099
01:27:06,960 --> 01:27:08,560
carrying retransmitted data is not

2100
01:27:08,560 --> 01:27:10,560
required to include at our options so if

2101
01:27:10,560 --> 01:27:12,239
the original segment

2102
01:27:12,239 --> 01:27:13,920
carry the tar option

2103
01:27:13,920 --> 01:27:16,480
uh the retransmission is not required to

2104
01:27:16,480 --> 01:27:20,239
to also carry the same star option

2105
01:27:20,239 --> 01:27:22,480
and then uh there have been several

2106
01:27:22,480 --> 01:27:25,440
comments about the ignore order feature

2107
01:27:25,440 --> 01:27:28,800
uh here this was suggested once in a

2108
01:27:28,800 --> 01:27:30,800
previous tcpm meeting

2109
01:27:30,800 --> 01:27:33,199
the idea behind the future would be to

2110
01:27:33,199 --> 01:27:36,000
allow a sender tell the receiver

2111
01:27:36,000 --> 01:27:39,360
that it has some tolerance of

2112
01:27:39,360 --> 01:27:41,440
our data packets

2113
01:27:41,440 --> 01:27:43,760
so then it's not necessary for the

2114
01:27:43,760 --> 01:27:46,639
receiver to uh to send

2115
01:27:46,639 --> 01:27:48,400
immediate acts when there are like

2116
01:27:48,400 --> 01:27:51,600
ignore uh well reordered uh data packets

2117
01:27:51,600 --> 01:27:54,080
however it seems like uh the benefit

2118
01:27:54,080 --> 01:27:57,120
that is seen from this feature is not so

2119
01:27:57,120 --> 01:27:59,199
clear or not so significant

2120
01:27:59,199 --> 01:28:01,760
so the proposal that we have like on the

2121
01:28:01,760 --> 01:28:04,320
table for the next update of the draft

2122
01:28:04,320 --> 01:28:07,600
would be to just remove the feature

2123
01:28:07,600 --> 01:28:09,760
so i don't know if there's comments on

2124
01:28:09,760 --> 01:28:12,760
that

2125
01:28:23,440 --> 01:28:26,000
as an individual so on the mantissa

2126
01:28:26,000 --> 01:28:26,840
thing

2127
01:28:26,840 --> 01:28:29,120
um am i correct in saying there's no way

2128
01:28:29,120 --> 01:28:32,639
to express zero without encoding

2129
01:28:32,639 --> 01:28:34,159
sorry could you repeat

2130
01:28:34,159 --> 01:28:36,000
on the mantissa formula you have on the

2131
01:28:36,000 --> 01:28:38,239
previous slide yeah

2132
01:28:38,239 --> 01:28:39,840
there's no way to express zero in that

2133
01:28:39,840 --> 01:28:41,120
encoding

2134
01:28:41,120 --> 01:28:42,639
i'm not mistaken

2135
01:28:42,639 --> 01:28:45,920
yeah but isn't zero a part of the

2136
01:28:45,920 --> 01:28:47,840
doesn't zero have a meaning

2137
01:28:47,840 --> 01:28:50,400
well it used to have but now it doesn't

2138
01:28:50,400 --> 01:28:52,159
have

2139
01:28:52,159 --> 01:28:53,440
yeah say no more all right next slide

2140
01:28:53,440 --> 01:28:55,120
please

2141
01:28:55,120 --> 01:28:57,679
um

2142
01:28:57,679 --> 01:29:00,400
so if you send the tar with

2143
01:29:00,400 --> 01:29:02,239
in response to senec that is not sent

2144
01:29:02,239 --> 01:29:04,320
reliably

2145
01:29:04,320 --> 01:29:07,519
so isn't that a concern

2146
01:29:09,040 --> 01:29:12,719
yeah so that's that's one point and well

2147
01:29:12,719 --> 01:29:15,600
i understand this was a suggestion to

2148
01:29:15,600 --> 01:29:18,080
to try to somehow deal with the lack of

2149
01:29:18,080 --> 01:29:21,440
syn space but also perhaps we can just

2150
01:29:21,440 --> 01:29:25,040
not consider this this approach

2151
01:29:25,040 --> 01:29:27,280
yeah great thanks thanks for the comment

2152
01:29:27,280 --> 01:29:29,440
yeah

2153
01:29:30,400 --> 01:29:32,960
okay so if there are no other comments

2154
01:29:32,960 --> 01:29:35,440
then perhaps

2155
01:29:37,040 --> 01:29:41,120
hi uh one question so i

2156
01:29:41,120 --> 01:29:42,480
yeah so

2157
01:29:42,480 --> 01:29:45,199
in case of option two the maximum value

2158
01:29:45,199 --> 01:29:45,840
of

2159
01:29:45,840 --> 01:29:49,920
r is 124 which is very big

2160
01:29:49,920 --> 01:29:52,800
i don't know which what kind of use case

2161
01:29:52,800 --> 01:29:56,960
to have such kind of large value for r

2162
01:29:56,960 --> 01:29:59,199
yeah i don't know if maybe bob would

2163
01:29:59,199 --> 01:30:02,320
like to reply himself but uh it seemed

2164
01:30:02,320 --> 01:30:04,320
like some people mentioned that the

2165
01:30:04,320 --> 01:30:07,199
maximum value of 63 could be fine

2166
01:30:07,199 --> 01:30:08,560
however bob

2167
01:30:08,560 --> 01:30:11,760
considered like the future

2168
01:30:11,760 --> 01:30:12,560
so

2169
01:30:12,560 --> 01:30:14,800
when this option might be used

2170
01:30:14,800 --> 01:30:16,719
several years from now

2171
01:30:16,719 --> 01:30:19,840
and perhaps the capacity of links change

2172
01:30:19,840 --> 01:30:23,360
and so on so i don't know if maybe bob

2173
01:30:23,360 --> 01:30:26,239
would like to also

2174
01:30:26,239 --> 01:30:29,559
add something

2175
01:30:55,120 --> 01:30:58,120
um

2176
01:31:06,800 --> 01:31:08,639
or put it on the mailing list since we

2177
01:31:08,639 --> 01:31:11,360
are really short of time

2178
01:31:11,360 --> 01:31:13,839
gory

2179
01:31:15,679 --> 01:31:16,880
no

2180
01:31:16,880 --> 01:31:19,199
no sorry

2181
01:31:19,199 --> 01:31:20,400
sorry

2182
01:31:20,400 --> 01:31:22,000
we can't get it to the mailing list

2183
01:31:22,000 --> 01:31:23,600
please yeah

2184
01:31:23,600 --> 01:31:24,880
gauri

2185
01:31:24,880 --> 01:31:27,360
gori fergus i favor option one and i

2186
01:31:27,360 --> 01:31:29,600
don't know any method which is safe at

2187
01:31:29,600 --> 01:31:30,800
63

2188
01:31:30,800 --> 01:31:32,719
we currently have iw10

2189
01:31:32,719 --> 01:31:34,159
so

2190
01:31:34,159 --> 01:31:36,000
how how bigger than how is bigger than

2191
01:31:36,000 --> 01:31:38,639
10 safe it might be but i don't

2192
01:31:38,639 --> 01:31:40,639
understand how big in the 63 would be

2193
01:31:40,639 --> 01:31:44,719
safe by our current safety requirements

2194
01:31:44,719 --> 01:31:46,080
yeah thanks for the

2195
01:31:46,080 --> 01:31:47,760
consideration

2196
01:31:47,760 --> 01:31:48,480
so

2197
01:31:48,480 --> 01:31:49,760
perhaps the

2198
01:31:49,760 --> 01:31:52,400
the point that bob had was

2199
01:31:52,400 --> 01:31:54,320
considering maybe not

2200
01:31:54,320 --> 01:31:56,840
today's scenarios but maybe future

2201
01:31:56,840 --> 01:32:00,320
scenarios so the idea was being able to

2202
01:32:00,320 --> 01:32:02,800
support like larger values

2203
01:32:02,800 --> 01:32:03,600
but

2204
01:32:03,600 --> 01:32:05,280
yeah that may be

2205
01:32:05,280 --> 01:32:07,520
of course something to take into account

2206
01:32:07,520 --> 01:32:08,320
that

2207
01:32:08,320 --> 01:32:11,440
also a very large value may have issues

2208
01:32:11,440 --> 01:32:15,678
as you just explained thank you yeah

2209
01:32:16,480 --> 01:32:17,679
okay

2210
01:32:17,679 --> 01:32:20,239
thank you so much i think no this is you

2211
01:32:20,239 --> 01:32:22,320
know good one i think we got lots of

2212
01:32:22,320 --> 01:32:24,639
feedback seems to be people seems to be

2213
01:32:24,639 --> 01:32:26,480
supportive so let's continue the

2214
01:32:26,480 --> 01:32:29,120
discussion and then update the draft

2215
01:32:29,120 --> 01:32:30,800
thank you so much

2216
01:32:30,800 --> 01:32:33,120
okay

2217
01:32:34,800 --> 01:32:37,199
and next presentation

2218
01:32:37,199 --> 01:32:40,199
bang

2219
01:32:49,840 --> 01:32:54,120
what is my screen available

2220
01:32:56,719 --> 01:32:58,960
yep

2221
01:32:58,960 --> 01:33:02,000
yes song is good

2222
01:33:03,040 --> 01:33:05,840
but no not the green i i'm starting

2223
01:33:05,840 --> 01:33:07,760
showing it

2224
01:33:07,760 --> 01:33:10,320
somehow

2225
01:33:10,480 --> 01:33:12,320
it hasn't started yet but you should be

2226
01:33:12,320 --> 01:33:14,159
granted

2227
01:33:14,159 --> 01:33:14,960
okay

2228
01:33:14,960 --> 01:33:18,029
[Music]

2229
01:33:20,840 --> 01:33:22,159
okay right

2230
01:33:22,159 --> 01:33:25,440
i think it works right

2231
01:33:27,760 --> 01:33:29,600
okay uh hello this is pony from china

2232
01:33:29,600 --> 01:33:32,560
mobile and i'd like to pre present

2233
01:33:32,560 --> 01:33:35,040
the multiple tcp robust session

2234
01:33:35,040 --> 01:33:36,800
establishment

2235
01:33:36,800 --> 01:33:39,040
and

2236
01:33:39,120 --> 01:33:41,360
since this work has been presented in

2237
01:33:41,360 --> 01:33:44,000
the past years i'd like to have a recap

2238
01:33:44,000 --> 01:33:46,480
of it first

2239
01:33:46,480 --> 01:33:49,199
this document want to solve the problem

2240
01:33:49,199 --> 01:33:51,840
of connection setup failure that is

2241
01:33:51,840 --> 01:33:54,719
essentially caused by establishing a

2242
01:33:54,719 --> 01:33:57,440
connection only on default paths

2243
01:33:57,440 --> 01:34:00,080
with unknown path letters

2244
01:34:00,080 --> 01:34:02,239
when we use multiple

2245
01:34:02,239 --> 01:34:04,800
multipath protocol the session will be

2246
01:34:04,800 --> 01:34:06,480
established in

2247
01:34:06,480 --> 01:34:08,239
a sequence

2248
01:34:08,239 --> 01:34:11,360
and the default bus is selected as the

2249
01:34:11,360 --> 01:34:14,000
first one by default ule

2250
01:34:14,000 --> 01:34:17,280
maybe wi-fi if there is no wi-fi signal

2251
01:34:17,280 --> 01:34:20,480
405 gxs will be selected however

2252
01:34:20,480 --> 01:34:22,960
when the wi-fi signal is bad and the

2253
01:34:22,960 --> 01:34:25,679
delay is large the default path

2254
01:34:25,679 --> 01:34:26,719
can't be

2255
01:34:26,719 --> 01:34:28,080
established

2256
01:34:28,080 --> 01:34:30,960
which will also affect the link of the

2257
01:34:30,960 --> 01:34:32,960
second connection

2258
01:34:32,960 --> 01:34:35,360
so this problem is a real one and has

2259
01:34:35,360 --> 01:34:37,520
been occurring during

2260
01:34:37,520 --> 01:34:40,080
modified protocol deployment and

2261
01:34:40,080 --> 01:34:41,600
implementation

2262
01:34:41,600 --> 01:34:43,920
i believe some people have met this

2263
01:34:43,920 --> 01:34:46,400
problem pay attention to it

2264
01:34:46,400 --> 01:34:49,600
moreover even if the current document

2265
01:34:49,600 --> 01:34:51,679
has a focus on

2266
01:34:51,679 --> 01:34:54,159
btcp we think it could be

2267
01:34:54,159 --> 01:34:56,880
expanded towards antique and

2268
01:34:56,880 --> 01:34:59,520
btc support with

2269
01:34:59,520 --> 01:35:02,480
which has a similar initial

2270
01:35:02,480 --> 01:35:04,560
path grant

2271
01:35:04,560 --> 01:35:04,870
and

2272
01:35:04,870 --> 01:35:06,320
[Music]

2273
01:35:06,320 --> 01:35:08,159
here's the definition for

2274
01:35:08,159 --> 01:35:11,199
a robust decision establishment

2275
01:35:11,199 --> 01:35:14,320
it is a set of extensions to regular

2276
01:35:14,320 --> 01:35:16,000
mvtcp and

2277
01:35:16,000 --> 01:35:19,199
btw version one is designed to provide

2278
01:35:19,199 --> 01:35:20,719
provide a more

2279
01:35:20,719 --> 01:35:21,840
robust

2280
01:35:21,840 --> 01:35:25,520
establishment of mptsb sessions it has

2281
01:35:25,520 --> 01:35:27,760
four methods including

2282
01:35:27,760 --> 01:35:28,560
1

2283
01:35:28,560 --> 01:35:30,320
theme and e3

2284
01:35:30,320 --> 01:35:31,920
and ips

2285
01:35:31,920 --> 01:35:33,920
it also presents a design and the

2286
01:35:33,920 --> 01:35:36,639
protocol procedure of the combination

2287
01:35:36,639 --> 01:35:39,840
scenario in addition to these

2288
01:35:39,840 --> 01:35:42,719
standard alarm solutions for example the

2289
01:35:42,719 --> 01:35:46,320
combination of the same and ips and

2290
01:35:46,320 --> 01:35:50,400
combination of timer and rps

2291
01:35:50,719 --> 01:35:53,440
so a very short solution recap of those

2292
01:35:53,440 --> 01:35:54,480
methods

2293
01:35:54,480 --> 01:35:58,400
first is a timer one uh

2294
01:36:00,560 --> 01:36:01,679
result

2295
01:36:01,679 --> 01:36:04,960
let's say again to network voltage is

2296
01:36:04,960 --> 01:36:07,840
achieved by modifying the thing uh

2297
01:36:07,840 --> 01:36:10,320
retransmission type timer if one path is

2298
01:36:10,320 --> 01:36:13,280
defective another path is used

2299
01:36:13,280 --> 01:36:15,520
and for the same one provides the

2300
01:36:15,520 --> 01:36:17,719
ability to

2301
01:36:17,719 --> 01:36:19,679
simultaneously use

2302
01:36:19,679 --> 01:36:23,440
multipath for connection setup and rst

2303
01:36:23,440 --> 01:36:24,719
is used to

2304
01:36:24,719 --> 01:36:27,280
terminate connection setup on other

2305
01:36:27,280 --> 01:36:28,800
paths when

2306
01:36:28,800 --> 01:36:30,480
connection has been

2307
01:36:30,480 --> 01:36:32,880
established on the first

2308
01:36:32,880 --> 01:36:34,480
path

2309
01:36:34,480 --> 01:36:36,080
and there's also

2310
01:36:36,080 --> 01:36:39,480
the ethereum provides ability to

2311
01:36:39,480 --> 01:36:43,199
simultaneously use multiple paths

2312
01:36:43,199 --> 01:36:44,880
and

2313
01:36:44,880 --> 01:36:47,280
i mean joint cap is used for decreasing

2314
01:36:47,280 --> 01:36:50,159
overhead merging all

2315
01:36:50,159 --> 01:36:53,440
simultaneous established path without

2316
01:36:53,440 --> 01:36:56,159
a joint process

2317
01:36:56,159 --> 01:36:57,920
so the

2318
01:36:57,920 --> 01:37:01,600
ism can be used for negotiation between

2319
01:37:01,600 --> 01:37:02,880
both sides

2320
01:37:02,880 --> 01:37:04,960
and the final one is

2321
01:37:04,960 --> 01:37:07,040
ibs provides a

2322
01:37:07,040 --> 01:37:09,280
huge risk to select

2323
01:37:09,280 --> 01:37:10,560
proper

2324
01:37:10,560 --> 01:37:13,119
property and initial paths for

2325
01:37:13,119 --> 01:37:16,159
connection establishment with a remote

2326
01:37:16,159 --> 01:37:18,080
host based on

2327
01:37:18,080 --> 01:37:20,400
empirical data

2328
01:37:20,400 --> 01:37:23,199
derived from previous

2329
01:37:23,199 --> 01:37:26,239
connection information

2330
01:37:27,360 --> 01:37:29,840
so this draft has been presented several

2331
01:37:29,840 --> 01:37:31,159
times from

2332
01:37:31,159 --> 01:37:34,960
itaf16 and the last presentation was in

2333
01:37:34,960 --> 01:37:36,560
idf for

2334
01:37:36,560 --> 01:37:37,920
the iso

2335
01:37:37,920 --> 01:37:40,560
is negotiating with shares the

2336
01:37:40,560 --> 01:37:42,800
possibility for getting rid of the ipr

2337
01:37:42,800 --> 01:37:44,800
blocking issue towards

2338
01:37:44,800 --> 01:37:46,639
adoption of it

2339
01:37:46,639 --> 01:37:50,719
so the uh criteria is something that

2340
01:37:50,719 --> 01:37:53,600
authors can work on by taking to

2341
01:37:53,600 --> 01:37:55,280
the other people who need the

2342
01:37:55,280 --> 01:37:58,000
publication of the unwanted

2343
01:37:58,000 --> 01:38:00,719
the update for instance a presentation

2344
01:38:00,719 --> 01:38:03,600
from the network operator rather than

2345
01:38:03,600 --> 01:38:06,159
dealing with test results

2346
01:38:06,159 --> 01:38:07,920
of the suggested mechanism would be

2347
01:38:07,920 --> 01:38:11,520
interested input to the working group

2348
01:38:11,520 --> 01:38:14,800
so in this case i found this work was

2349
01:38:14,800 --> 01:38:16,480
really valuable and

2350
01:38:16,480 --> 01:38:18,639
also planned for the joint testing work

2351
01:38:18,639 --> 01:38:20,080
but due to the

2352
01:38:20,080 --> 01:38:21,119
coverage

2353
01:38:21,119 --> 01:38:23,679
uh it is too hard for us to find a place

2354
01:38:23,679 --> 01:38:24,800
to do it

2355
01:38:24,800 --> 01:38:27,840
so i checked the test before and

2356
01:38:27,840 --> 01:38:31,199
it showed the obvious effect efficiency

2357
01:38:31,199 --> 01:38:32,400
of this

2358
01:38:32,400 --> 01:38:34,799
method

2359
01:38:35,280 --> 01:38:36,800
and

2360
01:38:36,800 --> 01:38:37,840
there's

2361
01:38:37,840 --> 01:38:40,080
also the three

2362
01:38:40,080 --> 01:38:42,320
start forms one or six

2363
01:38:42,320 --> 01:38:44,560
you can see the demo and the hexane will

2364
01:38:44,560 --> 01:38:46,000
be done into

2365
01:38:46,000 --> 01:38:49,119
uh i can one seven and

2366
01:38:49,119 --> 01:38:51,679
one eight

2367
01:38:51,920 --> 01:38:55,520
so i just reviewed the overall work um

2368
01:38:55,520 --> 01:38:57,760
the draft check them demo and the ipr

2369
01:38:57,760 --> 01:39:00,400
disclosures with the license

2370
01:39:00,400 --> 01:39:02,080
this draft

2371
01:39:02,080 --> 01:39:04,880
has major enough and completed i wish my

2372
01:39:04,880 --> 01:39:08,159
joining without ipr issue could help to

2373
01:39:08,159 --> 01:39:10,480
promote this work so i'd like to ask if

2374
01:39:10,480 --> 01:39:14,239
we could call for adoption of this draft

2375
01:39:14,239 --> 01:39:17,519
thanks and any comments

2376
01:39:22,400 --> 01:39:25,799
hey that's you

2377
01:39:29,280 --> 01:39:32,480
yoshi will you go first

2378
01:39:33,040 --> 01:39:35,679
we can hear you

2379
01:39:39,040 --> 01:39:41,360
here she is still muted

2380
01:39:41,360 --> 01:39:41,610
yeah

2381
01:39:41,610 --> 01:39:43,760
[Music]

2382
01:39:43,760 --> 01:39:46,320
so can you show the slide of recap zero

2383
01:39:46,320 --> 01:39:48,080
one

2384
01:39:48,080 --> 01:39:49,520
zero

2385
01:39:49,520 --> 01:39:52,000
this one

2386
01:39:52,840 --> 01:39:55,119
okay and then

2387
01:39:55,119 --> 01:39:58,239
so it says that i i would like to talk

2388
01:39:58,239 --> 01:40:00,480
about criteria one so it says you have

2389
01:40:00,480 --> 01:40:02,320
presentation

2390
01:40:02,320 --> 01:40:04,560
from a network operators and which

2391
01:40:04,560 --> 01:40:05,600
dragon

2392
01:40:05,600 --> 01:40:08,800
and then after that with testing result

2393
01:40:08,800 --> 01:40:10,480
of the suggestion makers will be

2394
01:40:10,480 --> 01:40:12,800
interesting so what's

2395
01:40:12,800 --> 01:40:14,480
we expect

2396
01:40:14,480 --> 01:40:16,719
not only showing support this is yeah

2397
01:40:16,719 --> 01:40:18,719
good things having support is very good

2398
01:40:18,719 --> 01:40:20,159
thing but uh

2399
01:40:20,159 --> 01:40:20,960
um

2400
01:40:20,960 --> 01:40:23,679
what we really expect is you know

2401
01:40:23,679 --> 01:40:27,040
showing some experience or operational

2402
01:40:27,040 --> 01:40:29,199
experience by implementation experience

2403
01:40:29,199 --> 01:40:30,159
and

2404
01:40:30,159 --> 01:40:33,199
then um you can demonstrate that this is

2405
01:40:33,199 --> 01:40:36,480
a great idea and then at the same time

2406
01:40:36,480 --> 01:40:37,520
um

2407
01:40:37,520 --> 01:40:39,600
since you are not also

2408
01:40:39,600 --> 01:40:42,480
we can know how you deal with the ipr

2409
01:40:42,480 --> 01:40:45,040
issues and that kind of information will

2410
01:40:45,040 --> 01:40:47,920
be very useful for us to think about how

2411
01:40:47,920 --> 01:40:49,440
to proceed around

2412
01:40:49,440 --> 01:40:52,480
but just supporting is just one step but

2413
01:40:52,480 --> 01:40:56,799
we need more steps that's my comment

2414
01:40:56,960 --> 01:40:58,000
yeah

2415
01:40:58,000 --> 01:41:02,239
okay uh in fact we we plan the test and

2416
01:41:02,239 --> 01:41:04,560
other more things but

2417
01:41:04,560 --> 01:41:08,400
haven't been successful

2418
01:41:09,360 --> 01:41:11,360
so you mentioned that the idea can also

2419
01:41:11,360 --> 01:41:15,760
be applied to mpdccp and be quick

2420
01:41:15,760 --> 01:41:16,639
sending

2421
01:41:16,639 --> 01:41:18,880
doing connection setups simultaneously

2422
01:41:18,880 --> 01:41:19,600
or

2423
01:41:19,600 --> 01:41:21,600
wire timers is something which is done

2424
01:41:21,600 --> 01:41:24,000
in sctp though so there's prior art for

2425
01:41:24,000 --> 01:41:25,520
other protocols

2426
01:41:25,520 --> 01:41:26,800
do your

2427
01:41:26,800 --> 01:41:31,280
does your ipr cover also mp quick and

2428
01:41:31,280 --> 01:41:33,520
mpdccp

2429
01:41:33,520 --> 01:41:37,600
are is your ipr specific to

2430
01:41:37,600 --> 01:41:40,400
mp or tcp uh

2431
01:41:40,400 --> 01:41:43,679
i think it only cover a btc but maybe

2432
01:41:43,679 --> 01:41:45,280
the others

2433
01:41:45,280 --> 01:41:48,800
could clarify this question

2434
01:41:48,800 --> 01:41:51,119
because normally you write iprs in a

2435
01:41:51,119 --> 01:41:53,280
very wide scope

2436
01:41:53,280 --> 01:41:54,960
that's why i'm asking

2437
01:41:54,960 --> 01:41:56,800
and the other question is

2438
01:41:56,800 --> 01:42:00,239
for this stuff being deployed is it

2439
01:42:00,239 --> 01:42:01,920
needed to be implemented in an open

2440
01:42:01,920 --> 01:42:05,440
source operating system or is it

2441
01:42:05,440 --> 01:42:07,199
um

2442
01:42:07,199 --> 01:42:08,800
okay if it's only implemented in

2443
01:42:08,800 --> 01:42:11,920
proprietary systems

2444
01:42:13,280 --> 01:42:16,400
okay thanks

2445
01:42:21,520 --> 01:42:25,480
okay any more comments

2446
01:42:30,080 --> 01:42:31,360
um

2447
01:42:31,360 --> 01:42:34,000
okay yeah i think as i mentioned that

2448
01:42:34,000 --> 01:42:36,080
you know showing support

2449
01:42:36,080 --> 01:42:39,199
from you is very good and for the draft

2450
01:42:39,199 --> 01:42:41,360
but

2451
01:42:41,520 --> 01:42:43,600
it's still a little difficult for you

2452
01:42:43,600 --> 01:42:44,320
know

2453
01:42:44,320 --> 01:42:46,239
we can think this is ready for working

2454
01:42:46,239 --> 01:42:48,960
group adaption because as i mentioned no

2455
01:42:48,960 --> 01:42:52,400
i want to see more broad support or

2456
01:42:52,400 --> 01:42:55,199
you can show some more

2457
01:42:55,199 --> 01:42:57,440
solid test results or implementation

2458
01:42:57,440 --> 01:43:00,159
experiment then

2459
01:43:00,159 --> 01:43:02,080
you can convince people

2460
01:43:02,080 --> 01:43:04,480
that this is not good item for this

2461
01:43:04,480 --> 01:43:06,000
parking group

2462
01:43:06,000 --> 01:43:08,960
right now it just was just one support

2463
01:43:08,960 --> 01:43:12,159
so i think we need more supports or more

2464
01:43:12,159 --> 01:43:16,159
experiments that's my take

2465
01:43:16,800 --> 01:43:18,320
yes i think

2466
01:43:18,320 --> 01:43:19,840
we will

2467
01:43:19,840 --> 01:43:22,320
unvoice

2468
01:43:23,280 --> 01:43:26,560
so should i stop to share the screen

2469
01:43:26,560 --> 01:43:28,639
yeah

2470
01:43:28,639 --> 01:43:31,600
okay thank you thank you peng

2471
01:43:31,600 --> 01:43:32,480
so

2472
01:43:32,480 --> 01:43:34,639
then so next

2473
01:43:34,639 --> 01:43:37,040
action

2474
01:43:37,280 --> 01:43:39,679
yes can you hear me

2475
01:43:39,679 --> 01:43:41,760
yes i can hear you

2476
01:43:41,760 --> 01:43:44,000
okay you have the 17 minutes we have

2477
01:43:44,000 --> 01:43:44,800
left

2478
01:43:44,800 --> 01:43:47,600
okay we'll try to make it a bit faster

2479
01:43:47,600 --> 01:43:49,679
than planned to leave some room for a

2480
01:43:49,679 --> 01:43:51,199
discussion because that's really the

2481
01:43:51,199 --> 01:43:54,000
intent of presenting our work here in

2482
01:43:54,000 --> 01:43:55,199
the tcpm

2483
01:43:55,199 --> 01:43:56,320
um

2484
01:43:56,320 --> 01:43:58,719
so yeah first i would like to to thank

2485
01:43:58,719 --> 01:44:01,280
tcpm for giving us the opportunity to to

2486
01:44:01,280 --> 01:44:02,239
present

2487
01:44:02,239 --> 01:44:06,239
this track for the first time within itf

2488
01:44:06,719 --> 01:44:08,960
so this strap is called tcps modern

2489
01:44:08,960 --> 01:44:11,760
transport services with tcp and tls and

2490
01:44:11,760 --> 01:44:13,920
you might be wondering whether tcpls is

2491
01:44:13,920 --> 01:44:15,360
an acronym

2492
01:44:15,360 --> 01:44:17,040
it's actually not an acronym but it

2493
01:44:17,040 --> 01:44:19,440
conveys the idea that

2494
01:44:19,440 --> 01:44:22,239
we can bring tcp and tls closer and this

2495
01:44:22,239 --> 01:44:24,159
has benefits and we can

2496
01:44:24,159 --> 01:44:26,000
bring new transport services with this

2497
01:44:26,000 --> 01:44:27,600
combination

2498
01:44:27,600 --> 01:44:31,119
um so i will not detail the content of

2499
01:44:31,119 --> 01:44:33,360
the preset presentation we will look at

2500
01:44:33,360 --> 01:44:35,520
that just just now um

2501
01:44:35,520 --> 01:44:37,199
so

2502
01:44:37,199 --> 01:44:38,960
um first as an introduction i would like

2503
01:44:38,960 --> 01:44:42,159
to go back to uh two important uh

2504
01:44:42,159 --> 01:44:44,320
protocol that have been designed um

2505
01:44:44,320 --> 01:44:46,639
within the itf and that extended the

2506
01:44:46,639 --> 01:44:48,239
transports

2507
01:44:48,239 --> 01:44:50,000
the transport services provided so the

2508
01:44:50,000 --> 01:44:52,719
first one is mptcp

2509
01:44:52,719 --> 01:44:55,440
which started in 2009

2510
01:44:55,440 --> 01:44:58,000
and the first specification shipped into

2511
01:44:58,000 --> 01:44:59,920
2013

2512
01:44:59,920 --> 01:45:01,199
and enabled

2513
01:45:01,199 --> 01:45:02,639
bandwidth aggregation with several

2514
01:45:02,639 --> 01:45:05,520
subflows fade over in case of network

2515
01:45:05,520 --> 01:45:07,520
failure with a make before break or

2516
01:45:07,520 --> 01:45:10,239
break before make um

2517
01:45:10,239 --> 01:45:11,600
mechanism

2518
01:45:11,600 --> 01:45:13,119
and it was made in a way that was

2519
01:45:13,119 --> 01:45:15,360
backward compatible with tcp

2520
01:45:15,360 --> 01:45:17,040
so so

2521
01:45:17,040 --> 01:45:19,920
those were the main benefits of of mptcp

2522
01:45:19,920 --> 01:45:22,159
but it also had some issues so the

2523
01:45:22,159 --> 01:45:24,159
address exchange mechanism was not

2524
01:45:24,159 --> 01:45:26,560
really secure although it improved it

2525
01:45:26,560 --> 01:45:28,400
improved in v1

2526
01:45:28,400 --> 01:45:29,119
and

2527
01:45:29,119 --> 01:45:32,560
it used tcp and the tcp options um which

2528
01:45:32,560 --> 01:45:34,320
are prone to middle box interference and

2529
01:45:34,320 --> 01:45:37,360
so that really drive the design of mptcp

2530
01:45:37,360 --> 01:45:39,119
and made the

2531
01:45:39,119 --> 01:45:42,320
design um a bit more difficult to to

2532
01:45:42,320 --> 01:45:43,440
make so

2533
01:45:43,440 --> 01:45:47,119
um mptp also proved to be maybe

2534
01:45:47,119 --> 01:45:48,960
difficult to implement and i think we

2535
01:45:48,960 --> 01:45:51,040
can take the seven year journey from

2536
01:45:51,040 --> 01:45:53,520
this v0 specification to mainline linux

2537
01:45:53,520 --> 01:45:56,000
as an example as an example of that of

2538
01:45:56,000 --> 01:45:57,920
course many things happen in that time

2539
01:45:57,920 --> 01:45:59,040
frame but

2540
01:45:59,040 --> 01:46:01,520
still it's a long time

2541
01:46:01,520 --> 01:46:03,920
so another important protocol that was

2542
01:46:03,920 --> 01:46:06,000
more recently designed is quick

2543
01:46:06,000 --> 01:46:08,800
which started in 2016

2544
01:46:08,800 --> 01:46:11,119
with the goal of designing an udp based

2545
01:46:11,119 --> 01:46:13,280
transport protocol

2546
01:46:13,280 --> 01:46:14,960
and which

2547
01:46:14,960 --> 01:46:17,280
the first version of the protocol was

2548
01:46:17,280 --> 01:46:20,000
shipped into in last year actually and

2549
01:46:20,000 --> 01:46:21,760
it enabled

2550
01:46:21,760 --> 01:46:23,600
stream multiplexing

2551
01:46:23,600 --> 01:46:25,280
without head offline docking and

2552
01:46:25,280 --> 01:46:27,119
connection migration

2553
01:46:27,119 --> 01:46:28,800
and failover as well

2554
01:46:28,800 --> 01:46:29,600
and

2555
01:46:29,600 --> 01:46:32,560
one of the the key elements i see

2556
01:46:32,560 --> 01:46:34,639
of the success of quick is the use of

2557
01:46:34,639 --> 01:46:37,280
tls to secure most of the quick header

2558
01:46:37,280 --> 01:46:38,800
and the quick payloads because that's

2559
01:46:38,800 --> 01:46:41,679
really what enabled an innovation to be

2560
01:46:41,679 --> 01:46:43,600
brought back and effectively deployed in

2561
01:46:43,600 --> 01:46:45,760
the transport layer

2562
01:46:45,760 --> 01:46:47,280
and quick can also be implemented in

2563
01:46:47,280 --> 01:46:48,960
user space and ship with application

2564
01:46:48,960 --> 01:46:52,239
which has a number of benefits

2565
01:46:52,560 --> 01:46:53,280
so

2566
01:46:53,280 --> 01:46:55,679
i think an important point

2567
01:46:55,679 --> 01:46:57,760
um

2568
01:46:57,760 --> 01:47:01,840
that we we need to look at today is that

2569
01:47:01,840 --> 01:47:04,159
we know that tls is the most used uh

2570
01:47:04,159 --> 01:47:06,800
protocol at tcp

2571
01:47:06,800 --> 01:47:09,280
and the latest version uh is even

2572
01:47:09,280 --> 01:47:11,119
expanding the the use of encryption to

2573
01:47:11,119 --> 01:47:13,679
extend the tls protocol with encrypted

2574
01:47:13,679 --> 01:47:16,800
tls records and encrypted extension

2575
01:47:16,800 --> 01:47:17,840
um

2576
01:47:17,840 --> 01:47:19,360
and and

2577
01:47:19,360 --> 01:47:21,520
together with the fact that tcp supports

2578
01:47:21,520 --> 01:47:23,679
in the network and in operating system

2579
01:47:23,679 --> 01:47:27,679
and kernel remains wider tcp is also

2580
01:47:27,679 --> 01:47:29,840
the fallback of quick currently still so

2581
01:47:29,840 --> 01:47:32,480
tcp will remain for a long time and

2582
01:47:32,480 --> 01:47:34,960
given the ubiquity of tls and the lesson

2583
01:47:34,960 --> 01:47:37,840
we learned when designing quick

2584
01:47:37,840 --> 01:47:39,119
um

2585
01:47:39,119 --> 01:47:41,119
the question i would like to to ask is

2586
01:47:41,119 --> 01:47:42,639
or it's a rhetorical question of course

2587
01:47:42,639 --> 01:47:43,840
but

2588
01:47:43,840 --> 01:47:45,760
the question is can we provide new

2589
01:47:45,760 --> 01:47:48,960
transfer services with tcp and tls

2590
01:47:48,960 --> 01:47:50,719
and and the answer in this presentation

2591
01:47:50,719 --> 01:47:53,760
is is of course a positive one uh we

2592
01:47:53,760 --> 01:47:55,679
believe that by using those two elements

2593
01:47:55,679 --> 01:47:57,199
we can build an encrypted transport

2594
01:47:57,199 --> 01:48:00,239
protocol um that brings

2595
01:48:00,239 --> 01:48:02,159
modern transport services to those those

2596
01:48:02,159 --> 01:48:04,639
services are stream multiplexing

2597
01:48:04,639 --> 01:48:06,560
where the app can choose the degree of

2598
01:48:06,560 --> 01:48:07,840
resilience

2599
01:48:07,840 --> 01:48:09,840
from stream to others

2600
01:48:09,840 --> 01:48:12,960
resilience to head offline blocking

2601
01:48:12,960 --> 01:48:15,280
it can also offer connection migration

2602
01:48:15,280 --> 01:48:19,440
and failover and multi-path

2603
01:48:19,440 --> 01:48:21,520
by scheduling at the tls record levels

2604
01:48:21,520 --> 01:48:22,960
this is something we will look of course

2605
01:48:22,960 --> 01:48:25,280
in the details of the protocol

2606
01:48:25,280 --> 01:48:27,360
so having this combined approach we

2607
01:48:27,360 --> 01:48:29,600
believe that the protocol can be more

2608
01:48:29,600 --> 01:48:32,560
efficient than http 2 tls and mptcp

2609
01:48:32,560 --> 01:48:34,400
because those protocols were designed on

2610
01:48:34,400 --> 01:48:36,880
a strict layering assumption and so it

2611
01:48:36,880 --> 01:48:38,880
makes hard

2612
01:48:38,880 --> 01:48:40,800
it makes it hard for an application on

2613
01:48:40,800 --> 01:48:44,320
top of http 2 to influence the mptcp

2614
01:48:44,320 --> 01:48:47,119
scheduling but also taking into account

2615
01:48:47,119 --> 01:48:50,719
the record level of tls

2616
01:48:52,159 --> 01:48:55,360
so let's go over the protocol and

2617
01:48:55,360 --> 01:48:58,480
and put the focus on how we brought

2618
01:48:58,480 --> 01:48:59,840
the services

2619
01:48:59,840 --> 01:49:01,280
that we mentioned in this protocol so

2620
01:49:01,280 --> 01:49:02,800
let's start first with the

2621
01:49:02,800 --> 01:49:05,040
session establishment the tcpls session

2622
01:49:05,040 --> 01:49:07,440
establishment so one of the key facts is

2623
01:49:07,440 --> 01:49:08,400
that

2624
01:49:08,400 --> 01:49:11,520
tcpls does not modify the ttp or tls

2625
01:49:11,520 --> 01:49:12,639
handshake

2626
01:49:12,639 --> 01:49:14,719
what it does is is

2627
01:49:14,719 --> 01:49:17,199
introducing a new tls extension that

2628
01:49:17,199 --> 01:49:20,000
indicates the support of tcpls so here

2629
01:49:20,000 --> 01:49:21,280
this extension

2630
01:49:21,280 --> 01:49:23,360
is exchanged um in the the sequence

2631
01:49:23,360 --> 01:49:24,639
diagram in the

2632
01:49:24,639 --> 01:49:26,960
client hello extension and in the server

2633
01:49:26,960 --> 01:49:28,800
hello extended

2634
01:49:28,800 --> 01:49:30,000
extension

2635
01:49:30,000 --> 01:49:32,320
and at the end of the tls and shake

2636
01:49:32,320 --> 01:49:35,360
both end points know they use tcpls so

2637
01:49:35,360 --> 01:49:38,239
the the sequence diagram shows a regular

2638
01:49:38,239 --> 01:49:41,040
tcp connection opening and a regular tls

2639
01:49:41,040 --> 01:49:43,840
handshake but this our proposal is

2640
01:49:43,840 --> 01:49:47,440
compatible with tcp tfo and tls xero tt

2641
01:49:47,440 --> 01:49:49,759
as well

2642
01:49:50,880 --> 01:49:51,599
so

2643
01:49:51,599 --> 01:49:52,800
the first service i would like to

2644
01:49:52,800 --> 01:49:54,480
introduce is stream multiplexing and

2645
01:49:54,480 --> 01:49:57,040
streams provides concurrent byte streams

2646
01:49:57,040 --> 01:49:57,920
to apply

2647
01:49:57,920 --> 01:49:59,520
to application

2648
01:49:59,520 --> 01:50:01,920
and and tcps manage those streams and

2649
01:50:01,920 --> 01:50:04,719
enables multiplexing over a single

2650
01:50:04,719 --> 01:50:06,960
connection so this is reminiscent of

2651
01:50:06,960 --> 01:50:09,040
what http 2 brought

2652
01:50:09,040 --> 01:50:11,840
to

2653
01:50:12,080 --> 01:50:15,119
to the internet so

2654
01:50:15,119 --> 01:50:16,400
if we look

2655
01:50:16,400 --> 01:50:18,719
back at our diagram and see how it is

2656
01:50:18,719 --> 01:50:20,239
implemented

2657
01:50:20,239 --> 01:50:21,760
we added

2658
01:50:21,760 --> 01:50:24,960
a framing layer inside tls application

2659
01:50:24,960 --> 01:50:27,679
data records which is called tcps frames

2660
01:50:27,679 --> 01:50:30,400
and frames compose the the

2661
01:50:30,400 --> 01:50:32,320
record

2662
01:50:32,320 --> 01:50:34,880
and so if we look really closely at what

2663
01:50:34,880 --> 01:50:36,880
happens on the wire when

2664
01:50:36,880 --> 01:50:40,080
tcpls receiver receives a

2665
01:50:40,080 --> 01:50:43,280
tls record well it first sees the header

2666
01:50:43,280 --> 01:50:44,880
which is in clear text which indicates

2667
01:50:44,880 --> 01:50:47,760
that it's a tls application data records

2668
01:50:47,760 --> 01:50:49,840
for the given tls version

2669
01:50:49,840 --> 01:50:52,880
and then when it removes the protection

2670
01:50:52,880 --> 01:50:54,480
it has another

2671
01:50:54,480 --> 01:50:56,719
tls

2672
01:50:56,719 --> 01:50:59,840
record here which is the clear text

2673
01:50:59,840 --> 01:51:03,280
record and this record contains

2674
01:51:03,280 --> 01:51:05,679
the series of tcps frame here it's a

2675
01:51:05,679 --> 01:51:09,119
single stream frame we will not go over

2676
01:51:09,119 --> 01:51:11,840
the details of the fields i think all of

2677
01:51:11,840 --> 01:51:13,920
you can recognize very strong

2678
01:51:13,920 --> 01:51:15,440
similarities to what have been done in

2679
01:51:15,440 --> 01:51:16,800
http 2 and

2680
01:51:16,800 --> 01:51:19,199
in quick

2681
01:51:19,199 --> 01:51:21,280
so obviously um

2682
01:51:21,280 --> 01:51:24,400
as you probably wondering now um those

2683
01:51:24,400 --> 01:51:26,320
streams put in a single connection are

2684
01:51:26,320 --> 01:51:28,320
subject to edifying blocking this is

2685
01:51:28,320 --> 01:51:30,320
equivalent to what have been achieved

2686
01:51:30,320 --> 01:51:31,520
with

2687
01:51:31,520 --> 01:51:34,880
http 2. so what we propose is also

2688
01:51:34,880 --> 01:51:36,480
a way to

2689
01:51:36,480 --> 01:51:38,719
for tcp allies to manage several tcp

2690
01:51:38,719 --> 01:51:40,880
connection in a single session and

2691
01:51:40,880 --> 01:51:43,440
schedule the records across those tcp

2692
01:51:43,440 --> 01:51:44,639
connections

2693
01:51:44,639 --> 01:51:46,400
and then by giving the

2694
01:51:46,400 --> 01:51:48,960
possibility for the application to map

2695
01:51:48,960 --> 01:51:50,800
the streams to connections

2696
01:51:50,800 --> 01:51:52,719
the application can can choose the

2697
01:51:52,719 --> 01:51:55,199
stream it wants to protect uh from other

2698
01:51:55,199 --> 01:51:57,520
flight blocking from others so here in

2699
01:51:57,520 --> 01:51:59,599
our example we have stream a and stream

2700
01:51:59,599 --> 01:52:02,159
b on a single connection and then stream

2701
01:52:02,159 --> 01:52:04,080
c and stream d on this

2702
01:52:04,080 --> 01:52:06,560
on another connection of the session and

2703
01:52:06,560 --> 01:52:08,719
so stream c and stream d will be

2704
01:52:08,719 --> 01:52:10,719
protected from that offline blocking

2705
01:52:10,719 --> 01:52:13,280
happening on the first connection and uh

2706
01:52:13,280 --> 01:52:17,440
involving string stream a and stream b

2707
01:52:17,440 --> 01:52:19,360
so this brings the question of how can

2708
01:52:19,360 --> 01:52:23,199
we add tcp connection to a cpls session

2709
01:52:23,199 --> 01:52:26,159
the mechanism we have designed involves

2710
01:52:26,159 --> 01:52:28,880
the server giving tokens to the clients

2711
01:52:28,880 --> 01:52:31,119
and the clients using those tokens to

2712
01:52:31,119 --> 01:52:33,599
open a new connection so here we have

2713
01:52:33,599 --> 01:52:35,679
the server giving

2714
01:52:35,679 --> 01:52:39,040
a token inside a frame so this token has

2715
01:52:39,040 --> 01:52:41,360
the value abc and it has the

2716
01:52:41,360 --> 01:52:44,560
sequence number uh one by controlling

2717
01:52:44,560 --> 01:52:47,199
the number of tokens given to the client

2718
01:52:47,199 --> 01:52:49,119
and the server controls the number of

2719
01:52:49,119 --> 01:52:51,598
connection

2720
01:52:51,840 --> 01:52:53,840
what the client can do is then open a

2721
01:52:53,840 --> 01:52:55,520
new tcp connection

2722
01:52:55,520 --> 01:52:58,320
and then use another tls extension which

2723
01:52:58,320 --> 01:53:00,880
is called tcplus join using this token

2724
01:53:00,880 --> 01:53:03,360
value and the server use this token

2725
01:53:03,360 --> 01:53:05,599
value to identify

2726
01:53:05,599 --> 01:53:08,719
and join the tcp connection to the tls

2727
01:53:08,719 --> 01:53:09,760
session

2728
01:53:09,760 --> 01:53:11,440
and then

2729
01:53:11,440 --> 01:53:13,440
at the end of the

2730
01:53:13,440 --> 01:53:16,080
of the token exchange the connection is

2731
01:53:16,080 --> 01:53:18,880
open and it has a given connection id

2732
01:53:18,880 --> 01:53:21,840
which we will detail uh what it is used

2733
01:53:21,840 --> 01:53:22,800
for

2734
01:53:22,800 --> 01:53:25,360
in in the coming slides so

2735
01:53:25,360 --> 01:53:26,639
the question

2736
01:53:26,639 --> 01:53:28,000
uh now is

2737
01:53:28,000 --> 01:53:30,960
what kind of crypto material is used in

2738
01:53:30,960 --> 01:53:33,599
this additional connection so if we look

2739
01:53:33,599 --> 01:53:34,960
at tls

2740
01:53:34,960 --> 01:53:38,560
uh tls encrypt each nonce using each

2741
01:53:38,560 --> 01:53:41,040
record sorry using a unique nonce and

2742
01:53:41,040 --> 01:53:42,679
this is the the

2743
01:53:42,679 --> 01:53:45,360
non-derivation that is specified in tls

2744
01:53:45,360 --> 01:53:46,639
1.3

2745
01:53:46,639 --> 01:53:47,440
um

2746
01:53:47,440 --> 01:53:49,119
so this

2747
01:53:49,119 --> 01:53:51,599
nonce use the record sequence

2748
01:53:51,599 --> 01:53:52,960
um to

2749
01:53:52,960 --> 01:53:55,599
to get the the the nonce of the of the

2750
01:53:55,599 --> 01:53:57,679
record and the record sequence is

2751
01:53:57,679 --> 01:53:59,840
implicit in ts 1.3

2752
01:53:59,840 --> 01:54:02,719
um it is implicit because tcp delivers

2753
01:54:02,719 --> 01:54:05,199
data in sequence and so the sequence can

2754
01:54:05,199 --> 01:54:07,040
be kept implicit

2755
01:54:07,040 --> 01:54:10,000
so as is we cannot share this sequence

2756
01:54:10,000 --> 01:54:12,480
among tcp connections of a tcpl session

2757
01:54:12,480 --> 01:54:15,199
because then the receiver has no way to

2758
01:54:15,199 --> 01:54:18,719
to know which uh record sequence uh the

2759
01:54:18,719 --> 01:54:22,719
the incoming records are and so um in in

2760
01:54:22,719 --> 01:54:24,320
the sequence diagram i've shown you i've

2761
01:54:24,320 --> 01:54:25,920
shown you some tls message that

2762
01:54:25,920 --> 01:54:28,639
resembles a tls handshake but actually

2763
01:54:28,639 --> 01:54:30,400
we do not want to do a full tls

2764
01:54:30,400 --> 01:54:32,480
handshake and then and derive a new

2765
01:54:32,480 --> 01:54:34,639
initial vector for instance because

2766
01:54:34,639 --> 01:54:36,560
that's this is costly

2767
01:54:36,560 --> 01:54:38,480
and so what we propose

2768
01:54:38,480 --> 01:54:39,520
is to

2769
01:54:39,520 --> 01:54:43,119
change the initial vector uh non-script

2770
01:54:43,119 --> 01:54:44,719
construction sorry

2771
01:54:44,719 --> 01:54:45,440
and

2772
01:54:45,440 --> 01:54:48,320
add the connection id so the id of the

2773
01:54:48,320 --> 01:54:52,000
tcp connection part of the tcpl session

2774
01:54:52,000 --> 01:54:54,639
and claw it to the upper bits of the iv

2775
01:54:54,639 --> 01:54:55,599
and

2776
01:54:55,599 --> 01:54:57,520
by doing that and keeping a per

2777
01:54:57,520 --> 01:55:00,320
connection record sequence we now have

2778
01:55:00,320 --> 01:55:02,880
back a unique nonce for each of the

2779
01:55:02,880 --> 01:55:05,840
records sent in this tcpls session so

2780
01:55:05,840 --> 01:55:08,159
it's really a way to share the tls

2781
01:55:08,159 --> 01:55:10,880
session among several

2782
01:55:10,880 --> 01:55:14,000
tcp connections

2783
01:55:14,719 --> 01:55:16,800
another service we would like to

2784
01:55:16,800 --> 01:55:20,239
um to provide with our protocol is a

2785
01:55:20,239 --> 01:55:24,320
failover and so in failover um

2786
01:55:24,320 --> 01:55:25,119
the

2787
01:55:25,119 --> 01:55:27,199
the idea is that when

2788
01:55:27,199 --> 01:55:28,560
a client has

2789
01:55:28,560 --> 01:55:30,480
here an example a client has opened a

2790
01:55:30,480 --> 01:55:32,800
connection to the server and sends two

2791
01:55:32,800 --> 01:55:35,840
chunks of stream stream a and string b

2792
01:55:35,840 --> 01:55:38,719
and something bad happened to string b

2793
01:55:38,719 --> 01:55:40,880
it never reaches the server and actually

2794
01:55:40,880 --> 01:55:43,199
the wall tcp connection is disrupted

2795
01:55:43,199 --> 01:55:45,599
either by the middle box or

2796
01:55:45,599 --> 01:55:48,400
by a network failure for instance so

2797
01:55:48,400 --> 01:55:51,119
what failure failover enables

2798
01:55:51,119 --> 01:55:54,000
the sender to do is to retransmit the

2799
01:55:54,000 --> 01:55:56,639
frames that were lost onto a new tcp

2800
01:55:56,639 --> 01:55:57,760
connection it could have been

2801
01:55:57,760 --> 01:55:59,920
established before the fader or even

2802
01:55:59,920 --> 01:56:01,599
after

2803
01:56:01,599 --> 01:56:04,000
so how does this work on the wire if we

2804
01:56:04,000 --> 01:56:06,159
go back to our sequence diagram and and

2805
01:56:06,159 --> 01:56:08,000
look at what happens in this particular

2806
01:56:08,000 --> 01:56:10,320
example so we have the client sending

2807
01:56:10,320 --> 01:56:13,199
um to connection id

2808
01:56:13,199 --> 01:56:15,679
we have the the client sending sorry two

2809
01:56:15,679 --> 01:56:17,599
tls application data records over

2810
01:56:17,599 --> 01:56:19,679
connection id 0

2811
01:56:19,679 --> 01:56:21,280
and the second never reaches as i

2812
01:56:21,280 --> 01:56:22,800
explained and the connection gets

2813
01:56:22,800 --> 01:56:25,199
disrupted the question becomes

2814
01:56:25,199 --> 01:56:26,560
how can

2815
01:56:26,560 --> 01:56:29,360
the client know which one never reached

2816
01:56:29,360 --> 01:56:31,920
the server and retransmits uh the one

2817
01:56:31,920 --> 01:56:33,520
needed and so

2818
01:56:33,520 --> 01:56:36,080
for that we introduce tcpls

2819
01:56:36,080 --> 01:56:37,440
acknowledgements

2820
01:56:37,440 --> 01:56:40,320
and so those acknowledgements enable

2821
01:56:40,320 --> 01:56:42,400
the sender to know which are the tls

2822
01:56:42,400 --> 01:56:45,679
records that were effectively received

2823
01:56:45,679 --> 01:56:48,239
um we cannot rely on on

2824
01:56:48,239 --> 01:56:51,199
tcp acknowledgements because they just

2825
01:56:51,199 --> 01:56:53,679
mean that the byte stream reached the

2826
01:56:53,679 --> 01:56:56,000
receiver but we do not know whether it

2827
01:56:56,000 --> 01:56:58,480
was read by the application whether it

2828
01:56:58,480 --> 01:57:00,159
was stuck in the kernel buffers or

2829
01:57:00,159 --> 01:57:02,000
whether the decryption was successful

2830
01:57:02,000 --> 01:57:03,520
and so that's why we need those

2831
01:57:03,520 --> 01:57:05,040
acknowledgements

2832
01:57:05,040 --> 01:57:07,199
so those acknowledgements identify

2833
01:57:07,199 --> 01:57:08,400
records

2834
01:57:08,400 --> 01:57:11,599
by stating their sequence number in the

2835
01:57:11,599 --> 01:57:13,520
given connection so it states the

2836
01:57:13,520 --> 01:57:16,239
connection id and the

2837
01:57:16,239 --> 01:57:18,000
mo the highest

2838
01:57:18,000 --> 01:57:19,760
tls record sequence that was received

2839
01:57:19,760 --> 01:57:21,520
over this connection so it only needs

2840
01:57:21,520 --> 01:57:24,880
cumulative acknowledgements

2841
01:57:24,880 --> 01:57:27,119
so here in our example

2842
01:57:27,119 --> 01:57:28,880
the server could send

2843
01:57:28,880 --> 01:57:30,080
a knack

2844
01:57:30,080 --> 01:57:32,960
to the client sorry it states server cid

2845
01:57:32,960 --> 01:57:33,679
on

2846
01:57:33,679 --> 01:57:35,520
on the right hand side is supposed to

2847
01:57:35,520 --> 01:57:38,560
state client cid so the server sends

2848
01:57:38,560 --> 01:57:41,520
back to the client a knack

2849
01:57:41,520 --> 01:57:43,840
and indicates that on cid 0 it has

2850
01:57:43,840 --> 01:57:46,960
received up to sequence number 3

2851
01:57:46,960 --> 01:57:47,760
and

2852
01:57:47,760 --> 01:57:49,520
then the client can make the right

2853
01:57:49,520 --> 01:57:52,480
decision and retransmit the loss frames

2854
01:57:52,480 --> 01:57:54,880
and eventually those last frame get

2855
01:57:54,880 --> 01:57:57,760
acknowledged as part of the the records

2856
01:57:57,760 --> 01:58:01,760
containing the two acts on the bottom

2857
01:58:02,320 --> 01:58:03,920
so using all that

2858
01:58:03,920 --> 01:58:05,440
we are also able to do bandwidth

2859
01:58:05,440 --> 01:58:09,119
aggregation simply by chunking a stream

2860
01:58:09,119 --> 01:58:12,000
in uh some stream frame and then send

2861
01:58:12,000 --> 01:58:14,480
them over different tls records over the

2862
01:58:14,480 --> 01:58:17,199
two connections

2863
01:58:17,840 --> 01:58:20,000
so i've tried to quickly present the

2864
01:58:20,000 --> 01:58:23,599
protocol here uh it's more it's more uh

2865
01:58:23,599 --> 01:58:26,480
explained in detail in the in the draft

2866
01:58:26,480 --> 01:58:28,800
we're very welcoming any feedback and

2867
01:58:28,800 --> 01:58:30,800
comment on the draft either on the

2868
01:58:30,800 --> 01:58:32,960
protocol or the use cases the services

2869
01:58:32,960 --> 01:58:34,880
we we presented

2870
01:58:34,880 --> 01:58:36,320
we will continue working on this

2871
01:58:36,320 --> 01:58:37,360
protocol

2872
01:58:37,360 --> 01:58:38,960
there are obviously some part that needs

2873
01:58:38,960 --> 01:58:40,080
to be

2874
01:58:40,080 --> 01:58:42,719
discussed and designed you probably

2875
01:58:42,719 --> 01:58:44,639
didn't mind congestion control and flow

2876
01:58:44,639 --> 01:58:47,440
control we also do of course

2877
01:58:47,440 --> 01:58:49,280
but also maybe

2878
01:58:49,280 --> 01:58:52,400
looking at further ways to use the tls

2879
01:58:52,400 --> 01:58:54,639
extension to

2880
01:58:54,639 --> 01:58:55,360
to

2881
01:58:55,360 --> 01:58:57,599
to enable new services in ntc pls or

2882
01:58:57,599 --> 01:58:58,560
even

2883
01:58:58,560 --> 01:59:00,639
some

2884
01:59:00,639 --> 01:59:04,239
how to make the receiver um zero copy as

2885
01:59:04,239 --> 01:59:07,119
in tls 1.3 and all those kinds of stuff

2886
01:59:07,119 --> 01:59:09,760
we're really interested in looking in

2887
01:59:09,760 --> 01:59:10,800
the future

2888
01:59:10,800 --> 01:59:14,119
um so the draft follow the prel

2889
01:59:14,119 --> 01:59:17,199
preliminary version of the tcps protocol

2890
01:59:17,199 --> 01:59:20,639
that was presented in a paper at conex21

2891
01:59:20,639 --> 01:59:22,639
that you can read if you're interested

2892
01:59:22,639 --> 01:59:24,480
in more details

2893
01:59:24,480 --> 01:59:27,040
on our approach

2894
01:59:27,040 --> 01:59:30,000
we got also some early implementation

2895
01:59:30,000 --> 01:59:33,280
feedback as we have implemented the last

2896
01:59:33,280 --> 01:59:34,960
the latest draft

2897
01:59:34,960 --> 01:59:36,960
we've implemented it on top

2898
01:59:36,960 --> 01:59:39,679
of a tls 1.3 implementation in c called

2899
01:59:39,679 --> 01:59:41,280
fico tls

2900
01:59:41,280 --> 01:59:43,760
this required us to modify 50 lines of

2901
01:59:43,760 --> 01:59:46,239
the pico tls library so to um to

2902
01:59:46,239 --> 01:59:47,520
implement the

2903
01:59:47,520 --> 01:59:48,320
the

2904
01:59:48,320 --> 01:59:51,599
iv nonce construction i've presented and

2905
01:59:51,599 --> 01:59:53,119
we were able to implement stream

2906
01:59:53,119 --> 01:59:56,400
multiplexing failover and multipath in

2907
01:59:56,400 --> 01:59:59,199
about 2.5 k lines of c codes

2908
01:59:59,199 --> 02:00:01,280
um and this product this prototype will

2909
02:00:01,280 --> 02:00:03,199
be released under

2910
02:00:03,199 --> 02:00:04,639
an open source license in the in the

2911
02:00:04,639 --> 02:00:07,199
coming weeks

2912
02:00:07,599 --> 02:00:08,719
um

2913
02:00:08,719 --> 02:00:11,280
so there is not much to say left in the

2914
02:00:11,280 --> 02:00:13,520
conclusion except that we're really

2915
02:00:13,520 --> 02:00:16,159
welcoming any uh feedback and comments

2916
02:00:16,159 --> 02:00:16,960
on

2917
02:00:16,960 --> 02:00:19,280
our approach

2918
02:00:19,280 --> 02:00:21,920
and maybe one way to start discussing

2919
02:00:21,920 --> 02:00:23,760
this work because we're not looking for

2920
02:00:23,760 --> 02:00:25,760
tcpm adoption

2921
02:00:25,760 --> 02:00:27,840
would be to to start a mailing list to

2922
02:00:27,840 --> 02:00:31,360
discuss with interested people

2923
02:00:31,840 --> 02:00:33,920
so that concludes my

2924
02:00:33,920 --> 02:00:35,280
discussion

2925
02:00:35,280 --> 02:00:37,360
my presentation i hope we have time for

2926
02:00:37,360 --> 02:00:38,719
discussion

2927
02:00:38,719 --> 02:00:41,719
now

2928
02:00:46,239 --> 02:00:48,559
okay

2929
02:00:49,440 --> 02:00:50,800
okay i

2930
02:00:50,800 --> 02:00:52,639
want to make a very quick comment so

2931
02:00:52,639 --> 02:00:53,840
this is

2932
02:00:53,840 --> 02:00:55,520
uh basically application protocol it

2933
02:00:55,520 --> 02:00:58,560
doesn't require any modification tcp

2934
02:00:58,560 --> 02:01:00,320
so that means

2935
02:01:00,320 --> 02:01:02,000
the focus of

2936
02:01:02,000 --> 02:01:04,159
the draft is slightly different from

2937
02:01:04,159 --> 02:01:06,880
focus of tcp and working group

2938
02:01:06,880 --> 02:01:10,239
yeah i think it's interesting for tcpm

2939
02:01:10,239 --> 02:01:12,080
people because uh

2940
02:01:12,080 --> 02:01:12,960
also

2941
02:01:12,960 --> 02:01:15,520
people that participated in mptcp

2942
02:01:15,520 --> 02:01:16,880
um

2943
02:01:16,880 --> 02:01:18,800
are have joined the group and here we're

2944
02:01:18,800 --> 02:01:21,199
touching on services that are

2945
02:01:21,199 --> 02:01:24,320
addressed by mptcp and we believe tls

2946
02:01:24,320 --> 02:01:25,679
opens a new way to address those

2947
02:01:25,679 --> 02:01:27,679
services so that's why we

2948
02:01:27,679 --> 02:01:30,560
think the presentation was fit here

2949
02:01:30,560 --> 02:01:32,320
yeah it's certainly a transport topic

2950
02:01:32,320 --> 02:01:34,239
but i'm not sure this should be the

2951
02:01:34,239 --> 02:01:36,000
venue of the working group but we can

2952
02:01:36,000 --> 02:01:38,800
discuss later

2953
02:01:41,840 --> 02:01:44,400
jonathan

2954
02:01:46,719 --> 02:01:49,599
jonathan hoyland's club

2955
02:01:49,599 --> 02:01:50,480
so

2956
02:01:50,480 --> 02:01:52,800
first obviously it would be really nice

2957
02:01:52,800 --> 02:01:55,280
to see this in the tls working group

2958
02:01:55,280 --> 02:01:57,119
i feel like this is messing around with

2959
02:01:57,119 --> 02:01:59,920
tls in a way that we haven't seen before

2960
02:01:59,920 --> 02:02:00,960
um

2961
02:02:00,960 --> 02:02:02,880
but my my question which i've put in

2962
02:02:02,880 --> 02:02:06,159
chat is is is there a reason why

2963
02:02:06,159 --> 02:02:08,000
you're you're doing something

2964
02:02:08,000 --> 02:02:09,760
special with new tls sessions rather

2965
02:02:09,760 --> 02:02:11,199
than just using

2966
02:02:11,199 --> 02:02:14,080
new session ticket and resumption

2967
02:02:14,080 --> 02:02:15,920
to split out one tls connection into

2968
02:02:15,920 --> 02:02:17,440
multiple ones

2969
02:02:17,440 --> 02:02:21,040
um so so this is also something we've

2970
02:02:21,040 --> 02:02:24,320
briefly uh imagined but we never really

2971
02:02:24,320 --> 02:02:27,199
looked into that

2972
02:02:27,199 --> 02:02:29,920
actually the the way we changed the

2973
02:02:29,920 --> 02:02:32,159
nonce construction is quite simple and

2974
02:02:32,159 --> 02:02:34,080
doesn't require the server to issue

2975
02:02:34,080 --> 02:02:34,960
those

2976
02:02:34,960 --> 02:02:38,480
but issue a bit simpler uh values which

2977
02:02:38,480 --> 02:02:40,400
are those tokens i presented but this is

2978
02:02:40,400 --> 02:02:42,880
something we could look at whether using

2979
02:02:42,880 --> 02:02:44,480
this um

2980
02:02:44,480 --> 02:02:48,159
is is more fit and requires less uh

2981
02:02:48,159 --> 02:02:49,920
stuff to invent than the normal

2982
02:02:49,920 --> 02:02:52,480
proposition yeah

2983
02:02:52,480 --> 02:02:55,280
yeah because with tls it's seen lots of

2984
02:02:55,280 --> 02:02:57,040
formal analysis and lots of like

2985
02:02:57,040 --> 02:02:58,800
security work yeah

2986
02:02:58,800 --> 02:03:01,040
so inventing new bits and

2987
02:03:01,040 --> 02:03:04,080
hoping they work is very scary

2988
02:03:04,080 --> 02:03:05,440
yeah but the the

2989
02:03:05,440 --> 02:03:07,280
the change in the iv that we propose is

2990
02:03:07,280 --> 02:03:10,000
very reminiscent of of many discussion i

2991
02:03:10,000 --> 02:03:13,440
i've i've seen at the atf so this is

2992
02:03:13,440 --> 02:03:15,440
stuff that they're considering for mp

2993
02:03:15,440 --> 02:03:17,920
quick for instance and i think i've seen

2994
02:03:17,920 --> 02:03:19,760
some discussion in that part

2995
02:03:19,760 --> 02:03:22,880
for dtls although i don't remember um

2996
02:03:22,880 --> 02:03:24,719
for which mechanism it was maybe key

2997
02:03:24,719 --> 02:03:26,080
recognition

2998
02:03:26,080 --> 02:03:28,639
negotiation or something

2999
02:03:28,639 --> 02:03:29,920
yeah uh

3000
02:03:29,920 --> 02:03:32,560
crypt analysis by intuition is generally

3001
02:03:32,560 --> 02:03:34,480
not recommended

3002
02:03:34,480 --> 02:03:39,000
i get your comment i get your comment

3003
02:03:40,320 --> 02:03:42,480
[Music]

3004
02:03:42,480 --> 02:03:46,080
okay we are running out of time

3005
02:03:46,080 --> 02:03:49,119
any more comments

3006
02:03:53,440 --> 02:03:56,880
okay yeah this is interesting idea but

3007
02:03:56,880 --> 02:03:58,800
yeah we are still not sure if this is a

3008
02:03:58,800 --> 02:04:01,280
topic for tcpm so let's continue the

3009
02:04:01,280 --> 02:04:04,480
discussion on the tcpm mailing list

3010
02:04:04,480 --> 02:04:06,000
of course

3011
02:04:06,000 --> 02:04:08,400
yeah thanks so much

3012
02:04:08,400 --> 02:04:11,040
thank you okay thank you

3013
02:04:11,040 --> 02:04:14,320
so this is uh we have our presentation

3014
02:04:14,320 --> 02:04:16,480
thanks so much for your participation

3015
02:04:16,480 --> 02:04:18,800
thanks for very thanks so much for very

3016
02:04:18,800 --> 02:04:20,480
productive discussion

3017
02:04:20,480 --> 02:04:22,880
so see you next itf

3018
02:04:22,880 --> 02:04:25,840
thanks so much

3019
02:04:26,800 --> 02:04:29,119
yes

3020
02:04:32,719 --> 02:04:36,560
yoshi will you copy the notes

3021
02:04:36,560 --> 02:04:39,280
yeah

3022
02:04:39,280 --> 02:04:42,320
but uh i'm going to go back right now

3023
02:04:42,320 --> 02:04:45,320
okay

3024
02:04:52,719 --> 02:04:54,079
bye

3025
02:04:54,079 --> 02:04:57,079
bye

