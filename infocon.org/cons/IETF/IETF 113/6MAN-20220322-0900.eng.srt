1
00:00:07,520 --> 00:00:10,520
uh

2
00:00:38,960 --> 00:00:40,960
okay i think we're ready to start here

3
00:00:40,960 --> 00:00:44,079
from vienna bob do you want to go ahead

4
00:00:44,079 --> 00:00:46,000
uh yes good

5
00:00:46,000 --> 00:00:49,680
um i guess morning in vienna very

6
00:00:49,680 --> 00:00:52,160
very early in the morning for me

7
00:00:52,160 --> 00:00:53,039
um

8
00:00:53,039 --> 00:00:57,199
so this is a six-man working group

9
00:00:57,199 --> 00:00:59,839
next slide

10
00:01:03,920 --> 00:01:05,119
this is

11
00:01:05,119 --> 00:01:08,080
notewell which you should all know by

12
00:01:08,080 --> 00:01:11,920
now we will have a test at the end

13
00:01:11,920 --> 00:01:15,439
but basic description of the itf process

14
00:01:15,439 --> 00:01:17,439
how it relates to meetings

15
00:01:17,439 --> 00:01:18,880
um

16
00:01:18,880 --> 00:01:22,159
we're using meat echo in a slightly new

17
00:01:22,159 --> 00:01:24,400
way this time because this is a hybrid

18
00:01:24,400 --> 00:01:26,159
meeting

19
00:01:26,159 --> 00:01:28,560
if you're in the room use the light

20
00:01:28,560 --> 00:01:30,479
version to

21
00:01:30,479 --> 00:01:33,520
join the queue don't use audio and video

22
00:01:33,520 --> 00:01:36,240
if you're in the room

23
00:01:36,240 --> 00:01:38,079
if you happen to be there's a light

24
00:01:38,079 --> 00:01:40,479
version which i since this is tuesday

25
00:01:40,479 --> 00:01:42,320
you should all know about

26
00:01:42,320 --> 00:01:44,159
um

27
00:01:44,159 --> 00:01:45,040
and

28
00:01:45,040 --> 00:01:47,360
you know likewise only turn on your

29
00:01:47,360 --> 00:01:50,159
audio and video

30
00:01:50,159 --> 00:01:53,520
if you're speaking or presenting

31
00:01:53,520 --> 00:01:56,240
and we recommend headsets

32
00:01:56,240 --> 00:01:59,039
next slide

33
00:02:00,240 --> 00:02:02,719
well the usual agenda for

34
00:02:02,719 --> 00:02:06,479
the itf next slide

35
00:02:07,119 --> 00:02:10,399
um we have the jabra room being run out

36
00:02:10,399 --> 00:02:13,040
of meat echo you can also access it with

37
00:02:13,040 --> 00:02:14,400
zulup

38
00:02:14,400 --> 00:02:15,920
um which i have running in the

39
00:02:15,920 --> 00:02:18,800
background somewhere

40
00:02:18,800 --> 00:02:21,040
so where the minutes are shoot many

41
00:02:21,040 --> 00:02:23,200
thanks to xu ping for taking minutes if

42
00:02:23,200 --> 00:02:25,520
there's someone else who

43
00:02:25,520 --> 00:02:27,280
also wants

44
00:02:27,280 --> 00:02:30,160
i think pascal to bear also uh

45
00:02:30,160 --> 00:02:32,080
volunteered to do help out with a minute

46
00:02:32,080 --> 00:02:32,959
so

47
00:02:32,959 --> 00:02:34,800
oh excellent

48
00:02:34,800 --> 00:02:38,480
that's great thank you pascal

49
00:02:38,800 --> 00:02:41,840
and i'm getting a little echo can you

50
00:02:41,840 --> 00:02:43,760
can you hear me okay

51
00:02:43,760 --> 00:02:45,599
we can hear you very well

52
00:02:45,599 --> 00:02:47,680
okay good and here's the link to the

53
00:02:47,680 --> 00:02:51,840
presentations next slide

54
00:02:52,160 --> 00:02:54,000
so

55
00:02:54,000 --> 00:02:56,080
we have two agenda slides doing the

56
00:02:56,080 --> 00:02:59,599
introduction and agenda bashing

57
00:02:59,599 --> 00:03:01,760
we have four working group documents to

58
00:03:01,760 --> 00:03:02,879
discuss

59
00:03:02,879 --> 00:03:06,800
um as you note here tom herbert um

60
00:03:06,800 --> 00:03:09,599
submitted slides but he had some other

61
00:03:09,599 --> 00:03:12,080
family obligations that kept him from

62
00:03:12,080 --> 00:03:14,239
being able to present so

63
00:03:14,239 --> 00:03:17,599
we will have a little extra time

64
00:03:17,599 --> 00:03:19,280
for the agenda which is good because it

65
00:03:19,280 --> 00:03:21,920
was already very tight

66
00:03:21,920 --> 00:03:25,360
but he would appreciate um

67
00:03:25,360 --> 00:03:27,840
feedback on his draft on the list but

68
00:03:27,840 --> 00:03:30,080
you you know those his slides will be in

69
00:03:30,080 --> 00:03:30,840
the

70
00:03:30,840 --> 00:03:34,159
presentation um we have two active

71
00:03:34,159 --> 00:03:37,120
internet drafts the segment identifiers

72
00:03:37,120 --> 00:03:38,560
the charesh

73
00:03:38,560 --> 00:03:41,840
segment identifiers and srb6 that was

74
00:03:41,840 --> 00:03:44,840
discussed quite a lot

75
00:03:44,840 --> 00:03:47,920
um uh last time

76
00:03:47,920 --> 00:03:50,640
um we'll be presented and then ted will

77
00:03:50,640 --> 00:03:52,080
be talking about source address

78
00:03:52,080 --> 00:03:53,200
selection

79
00:03:53,200 --> 00:03:55,920
next slide

80
00:03:56,159 --> 00:04:00,159
and then we have um five

81
00:04:00,159 --> 00:04:02,799
short presentations on

82
00:04:02,799 --> 00:04:04,640
new drafts that haven't had much

83
00:04:04,640 --> 00:04:08,560
discussion or um it doesn't it's unclear

84
00:04:08,560 --> 00:04:10,319
what the level of working group support

85
00:04:10,319 --> 00:04:11,200
is

86
00:04:11,200 --> 00:04:13,760
that we hope to get to and i think we

87
00:04:13,760 --> 00:04:15,680
should have time

88
00:04:15,680 --> 00:04:18,079
this time for a brief talk on each of

89
00:04:18,079 --> 00:04:19,600
those these are intended to be

90
00:04:19,600 --> 00:04:22,079
introductions to this work not

91
00:04:22,079 --> 00:04:25,360
um not to have a big discussion

92
00:04:25,360 --> 00:04:26,840
next

93
00:04:26,840 --> 00:04:30,720
slide so hang on a second bob we lost

94
00:04:30,720 --> 00:04:32,479
slideshare here in the room for some

95
00:04:32,479 --> 00:04:33,680
reason

96
00:04:33,680 --> 00:04:35,919
oh

97
00:04:39,840 --> 00:04:41,199
that's all

98
00:04:41,199 --> 00:04:44,320
i can see them fine

99
00:04:45,759 --> 00:04:47,199
do you think we lost the projector

100
00:04:47,199 --> 00:04:51,000
michael yeah

101
00:05:02,560 --> 00:05:06,280
yes that one

102
00:05:18,639 --> 00:05:20,400
folks said they're coming

103
00:05:20,400 --> 00:05:22,080
in the chat room

104
00:05:22,080 --> 00:05:22,800
yeah

105
00:05:22,800 --> 00:05:25,440
so there's this hdmi splitter that

106
00:05:25,440 --> 00:05:28,160
drives that screen and that projector

107
00:05:28,160 --> 00:05:31,720
right here

108
00:05:50,400 --> 00:05:53,400
okay

109
00:05:57,039 --> 00:05:59,600
there was a nut in the hdmi path that

110
00:05:59,600 --> 00:06:02,400
lost state yeah

111
00:06:02,400 --> 00:06:06,198
yeah that's a common problem

112
00:06:19,280 --> 00:06:22,000
so sorry about that we now got technical

113
00:06:22,000 --> 00:06:24,400
help from iteco and we're back

114
00:06:24,400 --> 00:06:26,240
running in the room

115
00:06:26,240 --> 00:06:28,479
good

116
00:06:30,080 --> 00:06:32,720
all right next slide

117
00:06:32,720 --> 00:06:36,000
so holy i'll hand it off to you

118
00:06:36,000 --> 00:06:38,560
thank you so document status so since

119
00:06:38,560 --> 00:06:40,400
the last meeting meeting we have

120
00:06:40,400 --> 00:06:43,680
published one rfc 9131 on gratuitous

121
00:06:43,680 --> 00:06:45,440
neighbor discovery

122
00:06:45,440 --> 00:06:47,840
um we have nothing in the rfc editor

123
00:06:47,840 --> 00:06:50,080
queue

124
00:06:50,240 --> 00:06:52,560
we have three documents submitted to the

125
00:06:52,560 --> 00:06:54,800
isg we have the

126
00:06:54,800 --> 00:06:56,240
oam document

127
00:06:56,240 --> 00:06:58,400
in segment routing

128
00:06:58,400 --> 00:06:59,440
which has

129
00:06:59,440 --> 00:07:01,039
one disqus

130
00:07:01,039 --> 00:07:03,919
we have the alternate marking method uh

131
00:07:03,919 --> 00:07:05,120
which

132
00:07:05,120 --> 00:07:07,440
is it down to one discuss now

133
00:07:07,440 --> 00:07:08,960
otherwise it's two and we have the

134
00:07:08,960 --> 00:07:10,479
minimum path empty

135
00:07:10,479 --> 00:07:12,720
by hop option document

136
00:07:12,720 --> 00:07:14,880
um eric do you want to say a little bit

137
00:07:14,880 --> 00:07:17,280
about this uh the status of these in the

138
00:07:17,280 --> 00:07:19,520
isg

139
00:07:19,520 --> 00:07:21,759
i just issued the ballot for uh mtu

140
00:07:21,759 --> 00:07:23,039
option and requested putting on a

141
00:07:23,039 --> 00:07:24,639
telechat so

142
00:07:24,639 --> 00:07:27,039
i might be on the first telechat in

143
00:07:27,039 --> 00:07:30,960
april or the second telechat in april

144
00:07:30,960 --> 00:07:32,960
the alternate marking document is

145
00:07:32,960 --> 00:07:36,159
waiting i think on

146
00:07:36,240 --> 00:07:37,599
the

147
00:07:37,599 --> 00:07:40,000
ippm stuff to be

148
00:07:40,000 --> 00:07:41,280
revved to

149
00:07:41,280 --> 00:07:42,880
a proposed standard

150
00:07:42,880 --> 00:07:46,000
so that it can be a normative dependency

151
00:07:46,000 --> 00:07:48,240
uh

152
00:07:48,240 --> 00:07:50,800
martin duke is ad sponsoring uh that

153
00:07:50,800 --> 00:07:53,280
work i think at the moment

154
00:07:53,280 --> 00:07:56,960
and then the srv6oam i

155
00:07:56,960 --> 00:08:00,720
to refresh my brain on the state of that

156
00:08:00,720 --> 00:08:02,800
i think so far do you want to say

157
00:08:02,800 --> 00:08:06,240
something about the status of that or

158
00:08:06,240 --> 00:08:09,560
if you're here

159
00:08:13,599 --> 00:08:16,560
yes safar go ahead

160
00:08:22,560 --> 00:08:24,840
can you hear me

161
00:08:24,840 --> 00:08:26,560
yeah good

162
00:08:26,560 --> 00:08:29,520
uh so we have a discuss from then

163
00:08:29,520 --> 00:08:32,320
uh we have addressed the comments uh uh

164
00:08:32,320 --> 00:08:34,880
from then and sent an email to him as

165
00:08:34,880 --> 00:08:36,479
well so the comment has been addressed

166
00:08:36,479 --> 00:08:39,279
in revision 11. revision 13

167
00:08:39,279 --> 00:08:41,760
howard bean had had a chance to clearly

168
00:08:41,760 --> 00:08:45,440
discuss that's the only discuss pending

169
00:08:45,440 --> 00:08:47,440
yeah that's right i talked i uh

170
00:08:47,440 --> 00:08:48,800
uh

171
00:08:48,800 --> 00:08:50,959
ben is working to

172
00:08:50,959 --> 00:08:52,480
clear all of his document cue before

173
00:08:52,480 --> 00:08:56,160
tomorrow evening andover

174
00:08:56,160 --> 00:08:58,640
so hopefully he'll get to it if not

175
00:08:58,640 --> 00:09:00,640
we'll uh i'll follow up and ask the

176
00:09:00,640 --> 00:09:02,399
incoming psyched

177
00:09:02,399 --> 00:09:04,240
if they want to

178
00:09:04,240 --> 00:09:06,880
pick up his comments and uh complete the

179
00:09:06,880 --> 00:09:09,839
review yeah excellent so it seems like

180
00:09:09,839 --> 00:09:11,680
these are finally progressing they've

181
00:09:11,680 --> 00:09:12,640
been

182
00:09:12,640 --> 00:09:14,320
at the isg for

183
00:09:14,320 --> 00:09:17,040
about 300 days i think so

184
00:09:17,040 --> 00:09:18,320
but at least there's no action from the

185
00:09:18,320 --> 00:09:22,800
working group um thank you

186
00:09:22,800 --> 00:09:24,800
and we have

187
00:09:24,800 --> 00:09:27,200
nothing awaiting write up or

188
00:09:27,200 --> 00:09:30,000
in adoption calls we have

189
00:09:30,000 --> 00:09:31,120
four

190
00:09:31,120 --> 00:09:32,959
new work relatively new working group

191
00:09:32,959 --> 00:09:34,240
documents

192
00:09:34,240 --> 00:09:37,200
we have the zone identifiers um document

193
00:09:37,200 --> 00:09:39,360
that just passed adoption call that

194
00:09:39,360 --> 00:09:41,200
brian is going to

195
00:09:41,200 --> 00:09:44,240
video talk about uh later

196
00:09:44,240 --> 00:09:45,920
we have the

197
00:09:45,920 --> 00:09:47,920
limits on sending and processing ib6

198
00:09:47,920 --> 00:09:49,360
extension headers there is a

199
00:09:49,360 --> 00:09:51,680
presentation in the

200
00:09:51,680 --> 00:09:54,640
in the proceedings but tom can't present

201
00:09:54,640 --> 00:09:55,760
on that

202
00:09:55,760 --> 00:09:56,800
it's the

203
00:09:56,800 --> 00:09:59,440
vtn identifier in ip6 which we have

204
00:09:59,440 --> 00:10:01,600
talked about and it's the hope i hope

205
00:10:01,600 --> 00:10:04,560
options processing procedures which

206
00:10:04,560 --> 00:10:06,880
gory will talk about

207
00:10:06,880 --> 00:10:07,760
just

208
00:10:07,760 --> 00:10:09,440
now

209
00:10:09,440 --> 00:10:12,720
any comments on that before we

210
00:10:12,720 --> 00:10:16,760
leave the floor to corey

211
00:10:28,640 --> 00:10:31,640
oh

212
00:10:32,720 --> 00:10:34,720
it's a very small pink box

213
00:10:34,720 --> 00:10:37,040
yo

214
00:10:37,680 --> 00:10:40,079
i don't know whether i can do that

215
00:10:40,079 --> 00:10:41,920
okay so

216
00:10:41,920 --> 00:10:43,040
this

217
00:10:43,040 --> 00:10:46,399
is the ipv6 hot buy up

218
00:10:46,399 --> 00:10:49,279
opt by op options

219
00:10:49,279 --> 00:10:51,279
processing procedures

220
00:10:51,279 --> 00:10:54,000
and it's bob and i who are the document

221
00:10:54,000 --> 00:10:56,079
editors this is the first working group

222
00:10:56,079 --> 00:10:57,920
version of this document but now we're

223
00:10:57,920 --> 00:11:00,480
at zero one because we did some tweaking

224
00:11:00,480 --> 00:11:03,200
after we started the process so

225
00:11:03,200 --> 00:11:05,839
we'll describe to you where we got

226
00:11:05,839 --> 00:11:07,760
and hopefully

227
00:11:07,760 --> 00:11:09,360
interest you in helping us to get to the

228
00:11:09,360 --> 00:11:13,800
final destination so next

229
00:11:16,160 --> 00:11:17,279
well the first line i think we can

230
00:11:17,279 --> 00:11:19,600
generally agree on pop by hop options

231
00:11:19,600 --> 00:11:22,000
are not working in the internet

232
00:11:22,000 --> 00:11:24,079
uh there may be some disagreement about

233
00:11:24,079 --> 00:11:27,680
whether they should ought must work but

234
00:11:27,680 --> 00:11:29,920
that's kind of where we're starting from

235
00:11:29,920 --> 00:11:31,760
they're not working

236
00:11:31,760 --> 00:11:33,760
it's very common for routers to drop hot

237
00:11:33,760 --> 00:11:36,000
by hop option headers

238
00:11:36,000 --> 00:11:37,920
and where they do it and which ones do

239
00:11:37,920 --> 00:11:38,959
it is

240
00:11:38,959 --> 00:11:40,240
kind of an interesting measurement

241
00:11:40,240 --> 00:11:41,760
problem and probably we should delve

242
00:11:41,760 --> 00:11:43,440
into that we will

243
00:11:43,440 --> 00:11:46,240
hopefully see more data

244
00:11:46,240 --> 00:11:49,200
agent 200 said that um

245
00:11:49,200 --> 00:11:50,800
it would document the current practice

246
00:11:50,800 --> 00:11:52,720
so when we move to full standard

247
00:11:52,720 --> 00:11:55,040
we change the wording to document what

248
00:11:55,040 --> 00:11:58,800
we thought was the current practice

249
00:11:58,800 --> 00:12:01,680
but probably not really where we should

250
00:12:01,680 --> 00:12:03,920
be in the future so this is all about

251
00:12:03,920 --> 00:12:06,560
what happens next

252
00:12:06,560 --> 00:12:07,920
and

253
00:12:07,920 --> 00:12:09,680
it was adopted well we know that next

254
00:12:09,680 --> 00:12:12,239
slide please

255
00:12:15,360 --> 00:12:18,240
changes from the individual draft well

256
00:12:18,240 --> 00:12:19,839
we

257
00:12:19,839 --> 00:12:22,079
listened to the working group we didn't

258
00:12:22,079 --> 00:12:23,920
necessarily find the answers to the

259
00:12:23,920 --> 00:12:25,440
questions that were raised but we where

260
00:12:25,440 --> 00:12:28,320
we found answers we changed the text

261
00:12:28,320 --> 00:12:31,200
um right so there is a kind of elephant

262
00:12:31,200 --> 00:12:33,360
in the room which could think us

263
00:12:33,360 --> 00:12:34,480
um

264
00:12:34,480 --> 00:12:35,839
sorry i carry on talking while you

265
00:12:35,839 --> 00:12:38,560
figure out what to do

266
00:12:38,560 --> 00:12:40,480
so we just uh bob we just lost video to

267
00:12:40,480 --> 00:12:42,560
the projector but

268
00:12:42,560 --> 00:12:45,440
i think we can okay i'm talking

269
00:12:45,440 --> 00:12:47,680
um

270
00:12:48,160 --> 00:12:50,560
one of the big questions we have to

271
00:12:50,560 --> 00:12:52,959
figure out is what language do we use to

272
00:12:52,959 --> 00:12:54,880
talk about this thing that we call fast

273
00:12:54,880 --> 00:12:56,160
path

274
00:12:56,160 --> 00:12:58,160
which was a nice thing simple option

275
00:12:58,160 --> 00:13:00,000
between doing something in an

276
00:13:00,000 --> 00:13:02,480
accelerated hard work or software

277
00:13:02,480 --> 00:13:03,519
fashion

278
00:13:03,519 --> 00:13:05,600
versus doing a big full pass of the

279
00:13:05,600 --> 00:13:08,079
packet headers

280
00:13:08,079 --> 00:13:10,160
life's not quite so simple now as it

281
00:13:10,160 --> 00:13:11,519
used to be

282
00:13:11,519 --> 00:13:13,120
and we're going to get stuck on words if

283
00:13:13,120 --> 00:13:15,120
we don't watch out so bob and i would

284
00:13:15,120 --> 00:13:16,959
like to take this as a separate thing of

285
00:13:16,959 --> 00:13:18,399
just believe at the moment that we can

286
00:13:18,399 --> 00:13:20,639
actually find those words

287
00:13:20,639 --> 00:13:23,040
in the future to describe these two

288
00:13:23,040 --> 00:13:24,639
aspects of a router the things that can

289
00:13:24,639 --> 00:13:25,760
be done

290
00:13:25,760 --> 00:13:27,600
very fast on the things that can be done

291
00:13:27,600 --> 00:13:29,680
with a little bit more processing and

292
00:13:29,680 --> 00:13:32,240
passing and checking

293
00:13:32,240 --> 00:13:34,560
and with lots of editorial changes

294
00:13:34,560 --> 00:13:37,599
well we'll go to the next slide

295
00:13:39,519 --> 00:13:42,079
as you can see we've enabled the issue

296
00:13:42,079 --> 00:13:43,120
tracker

297
00:13:43,120 --> 00:13:46,000
and we give this helpful url

298
00:13:46,000 --> 00:13:48,079
which you can now go to to see all the

299
00:13:48,079 --> 00:13:49,440
issues

300
00:13:49,440 --> 00:13:51,839
okay so um i thought i could talk to

301
00:13:51,839 --> 00:13:53,279
this if you can well soon it would be

302
00:13:53,279 --> 00:13:55,360
good so people can either go into the

303
00:13:55,360 --> 00:13:56,800
metico

304
00:13:56,800 --> 00:13:58,560
and act as they are remote and they can

305
00:13:58,560 --> 00:14:00,959
see the slides um or you can just look

306
00:14:00,959 --> 00:14:03,440
at the pdfs so here's uh

307
00:14:03,440 --> 00:14:07,279
there's support here's technical support

308
00:14:07,360 --> 00:14:09,440
okay so so the the real takeaway from

309
00:14:09,440 --> 00:14:12,399
this slide and is

310
00:14:12,399 --> 00:14:14,320
when we did the adoption call lots of

311
00:14:14,320 --> 00:14:17,360
people responded thank you ever so much

312
00:14:17,360 --> 00:14:19,760
lots of people responded with uh yeah

313
00:14:19,760 --> 00:14:21,680
let's do this but

314
00:14:21,680 --> 00:14:24,320
and they had some sort of issue

315
00:14:24,320 --> 00:14:26,240
and we thought as an experiment what we

316
00:14:26,240 --> 00:14:28,160
would do is try and capture as many of

317
00:14:28,160 --> 00:14:30,160
those as we could actually work out from

318
00:14:30,160 --> 00:14:31,680
passing the thread and put them in the

319
00:14:31,680 --> 00:14:33,519
issue tracker straight away

320
00:14:33,519 --> 00:14:35,279
so not only have we done an adoption to

321
00:14:35,279 --> 00:14:37,839
say hey we'll do this work also we

322
00:14:37,839 --> 00:14:39,519
captured a whole range of different

323
00:14:39,519 --> 00:14:40,959
thoughts about how that work should be

324
00:14:40,959 --> 00:14:41,839
done

325
00:14:41,839 --> 00:14:44,240
it's kind of odd to go to the first book

326
00:14:44,240 --> 00:14:47,760
sorry corey did you hold for a second

327
00:14:47,760 --> 00:14:49,519
yes we're

328
00:14:49,519 --> 00:14:52,240
we're getting brian carpenter's video

329
00:14:52,240 --> 00:14:55,880
being played somewhere

330
00:14:58,720 --> 00:15:00,639
i yeah are you not playing it yourself

331
00:15:00,639 --> 00:15:02,480
you think

332
00:15:02,480 --> 00:15:03,600
i

333
00:15:03,600 --> 00:15:06,079
hope not

334
00:15:09,920 --> 00:15:11,839
apparently i was sorry about that i

335
00:15:11,839 --> 00:15:14,160
don't know what happened

336
00:15:14,160 --> 00:15:16,480
well bob we've got slides here so

337
00:15:16,480 --> 00:15:18,399
your parallel universe i think we'll

338
00:15:18,399 --> 00:15:20,959
carry on

339
00:15:21,120 --> 00:15:23,199
okay so this is the

340
00:15:23,199 --> 00:15:26,240
url i mean it's the working group url so

341
00:15:26,240 --> 00:15:28,639
you can find it but please go there

342
00:15:28,639 --> 00:15:30,320
because we'll use it

343
00:15:30,320 --> 00:15:32,399
and we will pass the mail thread and try

344
00:15:32,399 --> 00:15:34,399
and add issues to this

345
00:15:34,399 --> 00:15:36,800
if you feel inspired you can go and add

346
00:15:36,800 --> 00:15:38,320
an issue yourself

347
00:15:38,320 --> 00:15:40,240
and surely please comment on the issues

348
00:15:40,240 --> 00:15:41,839
as we try and respond to them in the

349
00:15:41,839 --> 00:15:44,399
tracker so we can assemble this massive

350
00:15:44,399 --> 00:15:46,320
slightly conflicting

351
00:15:46,320 --> 00:15:48,560
responses to get something coherent at

352
00:15:48,560 --> 00:15:50,800
the end of the process so

353
00:15:50,800 --> 00:15:54,000
are we ready to go

354
00:15:54,000 --> 00:15:54,959
right

355
00:15:54,959 --> 00:15:56,639
now we look at the issues

356
00:15:56,639 --> 00:15:57,759
um

357
00:15:57,759 --> 00:15:59,199
hopefully we'll have fewer of these as

358
00:15:59,199 --> 00:16:01,519
we do each presentation to six months

359
00:16:01,519 --> 00:16:03,440
these are the short things

360
00:16:03,440 --> 00:16:07,440
most of these we hope are just fixed

361
00:16:07,440 --> 00:16:09,120
um does the working group have basic

362
00:16:09,120 --> 00:16:12,399
experience with extension headers

363
00:16:12,399 --> 00:16:13,839
and we think that's someone else's

364
00:16:13,839 --> 00:16:16,639
drafts problem

365
00:16:17,360 --> 00:16:20,399
we're going to cite 7827

366
00:16:20,399 --> 00:16:22,800
we've changed the text on size of

367
00:16:22,800 --> 00:16:25,040
extension headers arguing that

368
00:16:25,040 --> 00:16:27,199
maybe different sizes are okay maybe

369
00:16:27,199 --> 00:16:28,959
this isn't a great saving to people

370
00:16:28,959 --> 00:16:30,560
implementing to say that you just have

371
00:16:30,560 --> 00:16:32,560
one size

372
00:16:32,560 --> 00:16:34,480
i mean all of this can be undone if you

373
00:16:34,480 --> 00:16:35,920
prefer something different with good

374
00:16:35,920 --> 00:16:38,479
arguments

375
00:16:39,759 --> 00:16:41,440
better to encode hot by hot processing

376
00:16:41,440 --> 00:16:42,959
in the destination address is an

377
00:16:42,959 --> 00:16:44,639
interesting proposal but i think it

378
00:16:44,639 --> 00:16:48,160
changes the ipv6 architecture so um for

379
00:16:48,160 --> 00:16:51,040
the moment we cast that one out

380
00:16:51,040 --> 00:16:52,800
and we changed the spelling mistake

381
00:16:52,800 --> 00:16:55,839
which was fun because we didn't see it

382
00:16:55,839 --> 00:16:58,000
next slide please right now he was

383
00:16:58,000 --> 00:17:01,279
always more substance

384
00:17:02,240 --> 00:17:05,839
why do leading edge line speed routers

385
00:17:05,839 --> 00:17:07,839
want to ignore the hop by hop extension

386
00:17:07,839 --> 00:17:10,240
headers what is it they will get as

387
00:17:10,240 --> 00:17:12,240
benefits if they don't

388
00:17:12,240 --> 00:17:13,599
ignore them

389
00:17:13,599 --> 00:17:15,439
i think if we can't answer this question

390
00:17:15,439 --> 00:17:17,199
properly by the end of the document

391
00:17:17,199 --> 00:17:18,400
nobody will

392
00:17:18,400 --> 00:17:20,559
bother reading the document so this is

393
00:17:20,559 --> 00:17:24,959
actually fundamental and not obvious yes

394
00:17:28,480 --> 00:17:30,799
well either way right

395
00:17:30,799 --> 00:17:33,440
yeah yeah yeah right but seriously both

396
00:17:33,440 --> 00:17:35,039
ways we need to put that argument

397
00:17:35,039 --> 00:17:37,440
through and figure out what it is that

398
00:17:37,440 --> 00:17:38,880
is the right thing to do you know is

399
00:17:38,880 --> 00:17:40,799
there benefits for not ignoring

400
00:17:40,799 --> 00:17:43,280
ignoring it

401
00:17:43,919 --> 00:17:47,440
and the meaning of should i must needs

402
00:17:47,440 --> 00:17:50,400
full care in working it out because

403
00:17:50,400 --> 00:17:52,559
it could be one of these places where

404
00:17:52,559 --> 00:17:53,919
shouldn't must

405
00:17:53,919 --> 00:17:55,600
seems like simple words but probably

406
00:17:55,600 --> 00:17:57,280
need to be really explained in context

407
00:17:57,280 --> 00:17:58,559
here

408
00:17:58,559 --> 00:18:00,240
so um that wasn't very helpful but it

409
00:18:00,240 --> 00:18:01,679
was just saying issue two is the one

410
00:18:01,679 --> 00:18:03,919
where really uh it would be good to get

411
00:18:03,919 --> 00:18:06,960
a little bit more text and thoughts

412
00:18:06,960 --> 00:18:10,000
do you wanna say any more bob

413
00:18:10,080 --> 00:18:12,400
oh no that's fine good

414
00:18:12,400 --> 00:18:15,039
then next slide please

415
00:18:15,039 --> 00:18:17,440
issue four notes that nodes do not need

416
00:18:17,440 --> 00:18:19,919
to process the payload

417
00:18:19,919 --> 00:18:22,160
yeah

418
00:18:22,320 --> 00:18:24,080
i hope the operation is considered

419
00:18:24,080 --> 00:18:25,600
payloads

420
00:18:25,600 --> 00:18:28,720
this refers to i've seen 9098

421
00:18:28,720 --> 00:18:31,600
and maybe we need some text around

422
00:18:31,600 --> 00:18:34,880
forwarding nodes that look into the

423
00:18:34,880 --> 00:18:36,400
what people often call the transport

424
00:18:36,400 --> 00:18:37,919
header

425
00:18:37,919 --> 00:18:39,520
the offset it can be

426
00:18:39,520 --> 00:18:41,360
there are things related here to the

427
00:18:41,360 --> 00:18:43,280
work by tom herbert so we probably have

428
00:18:43,280 --> 00:18:44,480
to link with that

429
00:18:44,480 --> 00:18:46,160
but it does have an impact on whether

430
00:18:46,160 --> 00:18:47,840
the hot buy hop option

431
00:18:47,840 --> 00:18:50,160
is finally passed

432
00:18:50,160 --> 00:18:51,440
so

433
00:18:51,440 --> 00:18:55,640
actually needed here next one

434
00:18:56,320 --> 00:18:59,039
this is the rat hall

435
00:18:59,039 --> 00:19:01,280
what do we call the way in which routers

436
00:19:01,280 --> 00:19:03,440
sometimes do things better with some

437
00:19:03,440 --> 00:19:05,840
types of packets and headers than other

438
00:19:05,840 --> 00:19:07,679
types of packs and headers which can be

439
00:19:07,679 --> 00:19:09,840
actually causing them more pain

440
00:19:09,840 --> 00:19:12,400
right so i invented with bob

441
00:19:12,400 --> 00:19:14,000
the idea of full

442
00:19:14,000 --> 00:19:16,000
forwarding rate

443
00:19:16,000 --> 00:19:18,320
define full how you like

444
00:19:18,320 --> 00:19:19,760
forwarding is certainly what's happening

445
00:19:19,760 --> 00:19:21,919
your rate is the thing that's affected

446
00:19:21,919 --> 00:19:23,600
and the idea being simply to try and

447
00:19:23,600 --> 00:19:25,520
move away from the fastpass slow path

448
00:19:25,520 --> 00:19:28,000
which is many connotations

449
00:19:28,000 --> 00:19:29,840
if there's better language

450
00:19:29,840 --> 00:19:32,640
we'd love to move to the better language

451
00:19:32,640 --> 00:19:34,640
if this works then we'd love help to try

452
00:19:34,640 --> 00:19:36,799
and make it perfect

453
00:19:36,799 --> 00:19:39,039
so if anyone wants to kind of chime in

454
00:19:39,039 --> 00:19:40,880
and say something like full forwarding

455
00:19:40,880 --> 00:19:42,480
rate is horrible and i think it should

456
00:19:42,480 --> 00:19:43,360
be

457
00:19:43,360 --> 00:19:44,240
this

458
00:19:44,240 --> 00:19:46,080
go ahead it'd be more fun to have other

459
00:19:46,080 --> 00:19:50,439
people talking rather than just me

460
00:19:53,760 --> 00:19:56,160
and we got a question did our ch200 make

461
00:19:56,160 --> 00:19:58,400
a difference to deploy practice

462
00:19:58,400 --> 00:19:59,840
so tourists did you have a question on

463
00:19:59,840 --> 00:20:01,600
the previous slide or told us yeah oh

464
00:20:01,600 --> 00:20:02,960
yeah the

465
00:20:02,960 --> 00:20:06,880
the comment right yes i i think if we

466
00:20:06,880 --> 00:20:09,200
define it to be you know the same

467
00:20:09,200 --> 00:20:11,760
throughput as without

468
00:20:11,760 --> 00:20:13,440
the option header right and then the

469
00:20:13,440 --> 00:20:16,240
question is is that reasonable to expect

470
00:20:16,240 --> 00:20:17,919
right so i think the

471
00:20:17,919 --> 00:20:19,760
the minimum functionality that we need

472
00:20:19,760 --> 00:20:22,480
to look into is to be able to do all the

473
00:20:22,480 --> 00:20:24,159
crappy things that

474
00:20:24,159 --> 00:20:26,320
a platform may do in looking into layer

475
00:20:26,320 --> 00:20:27,760
4 information

476
00:20:27,760 --> 00:20:29,600
to skip through the chain of extension

477
00:20:29,600 --> 00:20:30,640
headers

478
00:20:30,640 --> 00:20:32,240
right and that's that's the big question

479
00:20:32,240 --> 00:20:34,320
if we can expect that to be without

480
00:20:34,320 --> 00:20:38,559
performance penalty so and maybe

481
00:20:38,559 --> 00:20:42,159
so in in other cases like control plane

482
00:20:42,159 --> 00:20:44,400
we did questionnaires right so we just

483
00:20:44,400 --> 00:20:46,559
did questionnaires and multicast so

484
00:20:46,559 --> 00:20:49,280
maybe you know starting to put together

485
00:20:49,280 --> 00:20:52,000
a questionnaire for relevant things that

486
00:20:52,000 --> 00:20:54,480
we want to learn to help improve this

487
00:20:54,480 --> 00:20:56,480
might be you know an an option to look

488
00:20:56,480 --> 00:20:57,520
into

489
00:20:57,520 --> 00:21:00,240
okay so a questionnaire might help

490
00:21:00,240 --> 00:21:02,000
so that was totally good thank you i'll

491
00:21:02,000 --> 00:21:04,960
call people's names to help the

492
00:21:04,960 --> 00:21:08,320
notetakers so curate compel

493
00:21:08,320 --> 00:21:11,200
um so full forwarding rate is probably

494
00:21:11,200 --> 00:21:12,640
not a good term

495
00:21:12,640 --> 00:21:15,120
there are times when you move the packet

496
00:21:15,120 --> 00:21:17,760
through the forwarding hardware and you

497
00:21:17,760 --> 00:21:20,159
get half forwarding rate or you might

498
00:21:20,159 --> 00:21:22,720
give up some of the forwarding

499
00:21:22,720 --> 00:21:25,200
to do this the big thing is the previous

500
00:21:25,200 --> 00:21:27,360
slide where it's like why would we even

501
00:21:27,360 --> 00:21:30,559
bother and if you said must and we think

502
00:21:30,559 --> 00:21:33,679
in our asics we can't afford it we might

503
00:21:33,679 --> 00:21:35,280
just ignore the must

504
00:21:35,280 --> 00:21:38,000
so the question is what's the value of

505
00:21:38,000 --> 00:21:40,159
processing hop by hub what are the kind

506
00:21:40,159 --> 00:21:42,159
of options you're putting there and how

507
00:21:42,159 --> 00:21:43,600
would it help

508
00:21:43,600 --> 00:21:45,679
if it's worth processing

509
00:21:45,679 --> 00:21:47,440
it doesn't have to be full forwarding

510
00:21:47,440 --> 00:21:49,840
rate so i think fast path and slow path

511
00:21:49,840 --> 00:21:51,440
is probably better

512
00:21:51,440 --> 00:21:53,679
because for me slow path is like really

513
00:21:53,679 --> 00:21:54,640
slow

514
00:21:54,640 --> 00:21:56,799
and fast path is pretty fast but it may

515
00:21:56,799 --> 00:21:59,679
not be fulfilling right

516
00:21:59,679 --> 00:22:01,520
excellent that makes sense

517
00:22:01,520 --> 00:22:03,840
it makes sense but then i'm sure other

518
00:22:03,840 --> 00:22:05,440
people will argue slightly differently

519
00:22:05,440 --> 00:22:07,760
and um this is just wording that we have

520
00:22:07,760 --> 00:22:09,120
to get right because there's some

521
00:22:09,120 --> 00:22:10,480
semantics behind it we have to just

522
00:22:10,480 --> 00:22:12,880
capture that yeah yeah okay i hear what

523
00:22:12,880 --> 00:22:14,480
you're saying

524
00:22:14,480 --> 00:22:17,679
i will carefully think on those words

525
00:22:17,679 --> 00:22:20,080
uh ben madison work online sorry my app

526
00:22:20,080 --> 00:22:22,240
doesn't want to work um

527
00:22:22,240 --> 00:22:24,240
so i suppose my my feedback here would

528
00:22:24,240 --> 00:22:27,600
be roughly the same as karit's for me

529
00:22:27,600 --> 00:22:30,000
um what's important is not necessarily

530
00:22:30,000 --> 00:22:32,240
the forwarding rate but the determinism

531
00:22:32,240 --> 00:22:33,840
of the performance

532
00:22:33,840 --> 00:22:36,320
as soon as you start punting stuff you

533
00:22:36,320 --> 00:22:39,440
don't know in advance what the various

534
00:22:39,440 --> 00:22:42,240
bytes are going to do to your cpu

535
00:22:42,240 --> 00:22:44,720
um right and that was that was the slope

536
00:22:44,720 --> 00:22:46,240
i think was kind of like i'm going to go

537
00:22:46,240 --> 00:22:47,760
through a decision tree about how to get

538
00:22:47,760 --> 00:22:50,080
there so slow path for me is i'm going

539
00:22:50,080 --> 00:22:51,600
to wind up

540
00:22:51,600 --> 00:22:54,000
in a general purpose cpu somewhere

541
00:22:54,000 --> 00:22:56,000
that's busy with other stuff

542
00:22:56,000 --> 00:22:57,760
some of which may be significantly more

543
00:22:57,760 --> 00:22:58,799
important

544
00:22:58,799 --> 00:23:00,400
um

545
00:23:00,400 --> 00:23:02,960
i think the thing to capture here is i

546
00:23:02,960 --> 00:23:04,640
mean speaking as speaking as a network

547
00:23:04,640 --> 00:23:08,400
operator what i want to know is how do i

548
00:23:08,400 --> 00:23:11,360
configure a policer to make sure that

549
00:23:11,360 --> 00:23:13,520
what is entering can be

550
00:23:13,520 --> 00:23:15,600
dealt with deterministically

551
00:23:15,600 --> 00:23:17,440
so that i don't end up blind i don't

552
00:23:17,440 --> 00:23:19,760
wind up moving the potential problem

553
00:23:19,760 --> 00:23:21,280
from the edge of the network where i can

554
00:23:21,280 --> 00:23:22,960
kind of predict it and deal with it

555
00:23:22,960 --> 00:23:24,400
somewhere into the core where i don't

556
00:23:24,400 --> 00:23:26,159
even necessarily know in advance where

557
00:23:26,159 --> 00:23:27,440
that's going to be

558
00:23:27,440 --> 00:23:29,280
so you're saying deterministic

559
00:23:29,280 --> 00:23:32,080
processing yeah yeah so i think i think

560
00:23:32,080 --> 00:23:35,280
the fast path is the place where

561
00:23:35,280 --> 00:23:38,159
a given operation can happen at

562
00:23:38,159 --> 00:23:39,200
a

563
00:23:39,200 --> 00:23:41,120
very very stable

564
00:23:41,120 --> 00:23:43,840
rate of packets per second um and that's

565
00:23:43,840 --> 00:23:45,840
usually some sort of hardware device but

566
00:23:45,840 --> 00:23:48,080
i think i think that's the way to

567
00:23:48,080 --> 00:23:51,840
talk about it generically personally

568
00:23:52,000 --> 00:23:52,960
we will

569
00:23:52,960 --> 00:23:55,039
take the transcript of this session and

570
00:23:55,039 --> 00:23:58,400
trying to extract useful words

571
00:23:58,400 --> 00:24:00,640
told us again um yeah maybe maybe we

572
00:24:00,640 --> 00:24:02,159
really need to start

573
00:24:02,159 --> 00:24:03,840
figuring out a place where we can put

574
00:24:03,840 --> 00:24:06,720
together the experience about the issue

575
00:24:06,720 --> 00:24:08,400
that that we've gained before even

576
00:24:08,400 --> 00:24:10,080
trying to come to a conclusion of what

577
00:24:10,080 --> 00:24:13,039
the right verbiage is let me add the one

578
00:24:13,039 --> 00:24:14,559
i think high level data point we got

579
00:24:14,559 --> 00:24:16,400
from multicast where you know the

580
00:24:16,400 --> 00:24:17,840
forwarding even let's say without

581
00:24:17,840 --> 00:24:20,880
replication took you know um four times

582
00:24:20,880 --> 00:24:22,320
the amount of resources than of a

583
00:24:22,320 --> 00:24:23,919
unicast packet in

584
00:24:23,919 --> 00:24:25,360
a lot of platforms so what was the

585
00:24:25,360 --> 00:24:27,679
impact the impact was that in a mix of

586
00:24:27,679 --> 00:24:30,400
unicast and multicast packets

587
00:24:30,400 --> 00:24:32,400
the you know average packet size you

588
00:24:32,400 --> 00:24:35,520
could um do and and still achieve line

589
00:24:35,520 --> 00:24:38,159
rate was going up as because you

590
00:24:38,159 --> 00:24:39,840
couldn't the the total packet rate you

591
00:24:39,840 --> 00:24:42,799
could do was uh was lower in the mix and

592
00:24:42,799 --> 00:24:44,640
so then we had to argue oh wait a second

593
00:24:44,640 --> 00:24:46,240
so this multicast traffic is all video

594
00:24:46,240 --> 00:24:48,000
so it's large packets so

595
00:24:48,000 --> 00:24:50,880
it actually helps your but so i don't

596
00:24:50,880 --> 00:24:54,000
think that kiriti's thing like it can be

597
00:24:54,000 --> 00:24:55,919
at a lower packet rate

598
00:24:55,919 --> 00:24:57,760
is something that may be seen as

599
00:24:57,760 --> 00:24:59,840
appropriate by operators

600
00:24:59,840 --> 00:25:02,080
depending on what you know the packets

601
00:25:02,080 --> 00:25:04,240
with more complicated processing

602
00:25:04,240 --> 00:25:05,679
requirements is

603
00:25:05,679 --> 00:25:07,919
right um we're now looking only into the

604
00:25:07,919 --> 00:25:10,400
options but i think the the problem is

605
00:25:10,400 --> 00:25:12,559
general right if there are different

606
00:25:12,559 --> 00:25:14,400
forwarding performances how do we deal

607
00:25:14,400 --> 00:25:15,279
with that

608
00:25:15,279 --> 00:25:17,039
and yeah i would

609
00:25:17,039 --> 00:25:18,400
just to go back to my previous point

610
00:25:18,400 --> 00:25:20,000
just ignoring this stuff right just

611
00:25:20,000 --> 00:25:22,720
having some offset of extension headers

612
00:25:22,720 --> 00:25:24,640
that a particular platform can chose to

613
00:25:24,640 --> 00:25:26,480
always ignore but not complain about the

614
00:25:26,480 --> 00:25:28,799
fact that it needs to skip forward and

615
00:25:28,799 --> 00:25:31,760
ignore it at the line rate at whatever

616
00:25:31,760 --> 00:25:33,279
the packet without the extension header

617
00:25:33,279 --> 00:25:36,000
has that i think is the the one glorious

618
00:25:36,000 --> 00:25:38,080
requirement we need to be able to do

619
00:25:38,080 --> 00:25:40,000
everything else i think we have a lot of

620
00:25:40,000 --> 00:25:41,760
flexibility okay i'm more on

621
00:25:41,760 --> 00:25:45,039
deterministic processing there so i i'll

622
00:25:45,039 --> 00:25:46,640
pick up that and i'll try and listen to

623
00:25:46,640 --> 00:25:48,240
the audio again and

624
00:25:48,240 --> 00:25:51,279
make some notes in the issue tracker

625
00:25:51,279 --> 00:25:53,840
okay um

626
00:25:53,840 --> 00:25:57,039
8200 oh this is just for clarification

627
00:25:57,039 --> 00:25:58,799
we should be much clearer on this the

628
00:25:58,799 --> 00:26:00,640
whole purpose h200 was to progress to

629
00:26:00,640 --> 00:26:02,000
full standard

630
00:26:02,000 --> 00:26:04,640
and it wasn't intended to do anything to

631
00:26:04,640 --> 00:26:05,679
change

632
00:26:05,679 --> 00:26:07,200
the spec and this

633
00:26:07,200 --> 00:26:09,360
particular piece of work here is a

634
00:26:09,360 --> 00:26:12,080
plan to do some new design work of some

635
00:26:12,080 --> 00:26:14,559
sort unlimited scope hopefully but

636
00:26:14,559 --> 00:26:17,120
it's a different thing to x200 next

637
00:26:17,120 --> 00:26:19,439
right

638
00:26:20,320 --> 00:26:21,520
uh

639
00:26:21,520 --> 00:26:23,360
oh

640
00:26:23,360 --> 00:26:25,200
yeah um we didn't change anything for

641
00:26:25,200 --> 00:26:27,679
this because we didn't know what to do

642
00:26:27,679 --> 00:26:30,080
i mean clearly this is actually

643
00:26:30,080 --> 00:26:32,000
the other side of having an extension

644
00:26:32,000 --> 00:26:34,799
header is when people write their

645
00:26:34,799 --> 00:26:37,200
code for processing

646
00:26:37,200 --> 00:26:39,600
malformed extension headers

647
00:26:39,600 --> 00:26:41,360
the chord may be incomplete or it may

648
00:26:41,360 --> 00:26:43,200
contain a bug because it's not exercised

649
00:26:43,200 --> 00:26:45,360
often if it's in hardware then that's a

650
00:26:45,360 --> 00:26:47,919
little bit more tricky even

651
00:26:47,919 --> 00:26:48,720
and

652
00:26:48,720 --> 00:26:50,960
maybe we weren't so smart at the

653
00:26:50,960 --> 00:26:53,360
beginning of ipv6 i don't know i mean

654
00:26:53,360 --> 00:26:54,799
like i wasn't in that room at the moment

655
00:26:54,799 --> 00:26:56,000
that moment

656
00:26:56,000 --> 00:26:57,520
but maybe we should have been a little

657
00:26:57,520 --> 00:26:59,440
bit more careful about this suspect and

658
00:26:59,440 --> 00:27:01,679
got this correct but really is it an

659
00:27:01,679 --> 00:27:03,200
issue now

660
00:27:03,200 --> 00:27:04,720
that would be a good thing to talk about

661
00:27:04,720 --> 00:27:06,640
um as we go forward

662
00:27:06,640 --> 00:27:08,480
but we didn't change anything yet

663
00:27:08,480 --> 00:27:10,480
should we deprecate roots or alert um

664
00:27:10,480 --> 00:27:13,440
question and

665
00:27:13,679 --> 00:27:15,520
ron bonica's writing something so we

666
00:27:15,520 --> 00:27:18,000
thought we might wait and see what ron's

667
00:27:18,000 --> 00:27:20,799
suggestion happened to be received who

668
00:27:20,799 --> 00:27:22,080
liked that who didn't like that so we're

669
00:27:22,080 --> 00:27:23,200
not doing anything on that at the moment

670
00:27:23,200 --> 00:27:26,640
leaving that as an issue next one

671
00:27:28,000 --> 00:27:29,440
you see there's many flavors of this

672
00:27:29,440 --> 00:27:30,399
because

673
00:27:30,399 --> 00:27:31,919
depending on where you sit you have

674
00:27:31,919 --> 00:27:34,320
different versions of not liking this

675
00:27:34,320 --> 00:27:35,600
and i think this is the one we'll try

676
00:27:35,600 --> 00:27:37,440
and tidy up if we can by gathering all

677
00:27:37,440 --> 00:27:38,799
these together and listening to what

678
00:27:38,799 --> 00:27:43,200
people say so we are listening next one

679
00:27:43,200 --> 00:27:45,279
what's the difference between slow path

680
00:27:45,279 --> 00:27:47,520
fast path

681
00:27:47,520 --> 00:27:49,679
and does that become root in the future

682
00:27:49,679 --> 00:27:51,760
this is slide 13 if you're following on

683
00:27:51,760 --> 00:27:54,559
the side numbers

684
00:27:56,799 --> 00:27:59,039
brian carpenter talked about

685
00:27:59,039 --> 00:28:00,960
vms on route

686
00:28:00,960 --> 00:28:03,120
being routers and whether generalized

687
00:28:03,120 --> 00:28:04,960
network processors

688
00:28:04,960 --> 00:28:07,360
will change our thinking about the

689
00:28:07,360 --> 00:28:09,520
slow path fast path

690
00:28:09,520 --> 00:28:10,559
maybe

691
00:28:10,559 --> 00:28:11,679
i mean

692
00:28:11,679 --> 00:28:12,960
we need to look forward as well as

693
00:28:12,960 --> 00:28:14,399
backwards so

694
00:28:14,399 --> 00:28:16,399
it's a useful thing and we need to find

695
00:28:16,399 --> 00:28:18,559
a way to discuss this

696
00:28:18,559 --> 00:28:20,399
so to insert myself in the queue so i'm

697
00:28:20,399 --> 00:28:22,720
working on a forwarding engine like that

698
00:28:22,720 --> 00:28:25,120
which only has a fast path and it's an

699
00:28:25,120 --> 00:28:27,600
in deterministic forwarding path you

700
00:28:27,600 --> 00:28:30,000
know fast forwarding path

701
00:28:30,000 --> 00:28:32,720
but i don't know if it makes any

702
00:28:32,720 --> 00:28:36,720
significant difference really uh

703
00:28:36,799 --> 00:28:38,240
you have the cycles you have right at

704
00:28:38,240 --> 00:28:40,399
the time you have them so

705
00:28:40,399 --> 00:28:44,480
get ready please go ahead yes um

706
00:28:44,480 --> 00:28:46,559
can i say this politely

707
00:28:46,559 --> 00:28:48,559
for real routers there's going to be a

708
00:28:48,559 --> 00:28:50,640
huge difference between fast pass and

709
00:28:50,640 --> 00:28:52,720
slow pass oh absolutely that's not what

710
00:28:52,720 --> 00:28:55,520
i was seeing yeah i know i know i know

711
00:28:55,520 --> 00:28:57,919
so i think that terminology is important

712
00:28:57,919 --> 00:29:00,320
to keep

713
00:29:00,320 --> 00:29:02,240
yes people are talking about you know

714
00:29:02,240 --> 00:29:03,760
running

715
00:29:03,760 --> 00:29:04,799
routing

716
00:29:04,799 --> 00:29:05,840
forwarding

717
00:29:05,840 --> 00:29:08,240
on vms and so on and then the

718
00:29:08,240 --> 00:29:11,120
distinction will be far less but

719
00:29:11,120 --> 00:29:12,480
the rate at which

720
00:29:12,480 --> 00:29:15,360
uh network processors and and general

721
00:29:15,360 --> 00:29:18,080
special purpose asics are growing

722
00:29:18,080 --> 00:29:19,360
compared to

723
00:29:19,360 --> 00:29:22,799
how cpus are growing um that distinction

724
00:29:22,799 --> 00:29:24,880
will just get bigger

725
00:29:24,880 --> 00:29:28,080
yeah and i think also we have a box size

726
00:29:28,080 --> 00:29:30,480
problem here we have routers which are

727
00:29:30,480 --> 00:29:32,320
like bigger than me and we have routers

728
00:29:32,320 --> 00:29:34,399
that can fit in my pocket

729
00:29:34,399 --> 00:29:35,440
and

730
00:29:35,440 --> 00:29:38,640
some all of these form the path

731
00:29:38,640 --> 00:29:40,880
and if they any of these block extension

732
00:29:40,880 --> 00:29:42,000
headers then you don't get extension

733
00:29:42,000 --> 00:29:43,919
headers across the path between two

734
00:29:43,919 --> 00:29:45,120
users so

735
00:29:45,120 --> 00:29:46,799
it's a little bit tricky to get language

736
00:29:46,799 --> 00:29:48,399
right because there are very different

737
00:29:48,399 --> 00:29:51,120
views of what a router is

738
00:29:51,120 --> 00:29:52,480
so

739
00:29:52,480 --> 00:29:54,000
which ones do we need to change to make

740
00:29:54,000 --> 00:29:55,279
this happen i think is the is the

741
00:29:55,279 --> 00:29:56,960
ultimate question and

742
00:29:56,960 --> 00:29:59,600
um we'll get there hopefully yeah and i

743
00:29:59,600 --> 00:30:01,120
will listen to the words you spoke as

744
00:30:01,120 --> 00:30:02,320
well

745
00:30:02,320 --> 00:30:04,799
good luck

746
00:30:06,559 --> 00:30:09,919
um ben madison again um

747
00:30:09,919 --> 00:30:11,919
i assume that the implementation that

748
00:30:11,919 --> 00:30:14,320
you mentioned a moment earlier was vpp

749
00:30:14,320 --> 00:30:15,520
um

750
00:30:15,520 --> 00:30:17,120
so i mean vpp is a good example of where

751
00:30:17,120 --> 00:30:19,520
this becomes a kind of

752
00:30:19,520 --> 00:30:22,080
weird nuance i suppose the thing is when

753
00:30:22,080 --> 00:30:23,120
you're

754
00:30:23,120 --> 00:30:25,039
even when you're running something like

755
00:30:25,039 --> 00:30:27,600
that implementation on general purpose

756
00:30:27,600 --> 00:30:30,000
cpus you're still

757
00:30:30,000 --> 00:30:31,760
i presume writing it with a very

758
00:30:31,760 --> 00:30:34,000
specific cycle budget in mind in order

759
00:30:34,000 --> 00:30:37,440
to try and as best you can make that

760
00:30:37,440 --> 00:30:40,399
general purpose cpu behave like you had

761
00:30:40,399 --> 00:30:42,399
special purpose hardware and there is

762
00:30:42,399 --> 00:30:44,720
still that distinction between this is

763
00:30:44,720 --> 00:30:46,480
the path this is the processing path

764
00:30:46,480 --> 00:30:48,720
where i can just execute arbitrary code

765
00:30:48,720 --> 00:30:50,480
and i can go into a loop and all of

766
00:30:50,480 --> 00:30:52,159
those nice things can happen and this is

767
00:30:52,159 --> 00:30:55,279
the bit where i have a hard stop time

768
00:30:55,279 --> 00:30:56,799
and that will be different for different

769
00:30:56,799 --> 00:30:58,720
platforms and you know mostly operators

770
00:30:58,720 --> 00:31:00,799
can be trusted to choose the right one

771
00:31:00,799 --> 00:31:03,120
depending on how you know how how hard a

772
00:31:03,120 --> 00:31:04,480
deadline that is

773
00:31:04,480 --> 00:31:06,559
but i think that that i i still think

774
00:31:06,559 --> 00:31:08,399
that that's the that's the distinction

775
00:31:08,399 --> 00:31:12,000
to capture um it's the it's the path in

776
00:31:12,000 --> 00:31:14,559
which other stuff won't be asked to sit

777
00:31:14,559 --> 00:31:17,120
and wait around while this packet takes

778
00:31:17,120 --> 00:31:19,200
its kind of long unwinding road down the

779
00:31:19,200 --> 00:31:21,840
decision tree

780
00:31:22,480 --> 00:31:24,640
okay yes

781
00:31:24,640 --> 00:31:27,039
so tell us again um

782
00:31:27,039 --> 00:31:28,480
maybe you know

783
00:31:28,480 --> 00:31:30,320
i think there's a lot of

784
00:31:30,320 --> 00:31:32,080
insight gained into these performance

785
00:31:32,080 --> 00:31:34,799
characteristics and i think

786
00:31:34,799 --> 00:31:36,480
it's it's certainly too much for this

787
00:31:36,480 --> 00:31:38,240
document and i think we're just trying

788
00:31:38,240 --> 00:31:39,440
to figure out

789
00:31:39,440 --> 00:31:41,760
what of that insight we you know want to

790
00:31:41,760 --> 00:31:43,919
take here for this document but maybe we

791
00:31:43,919 --> 00:31:45,679
should have another document maybe in

792
00:31:45,679 --> 00:31:47,600
routing working group or so i don't

793
00:31:47,600 --> 00:31:49,519
think we'll get away without

794
00:31:49,519 --> 00:31:51,840
writing down what we know and don't know

795
00:31:51,840 --> 00:31:54,240
about the word slow and fast path and

796
00:31:54,240 --> 00:31:55,919
maybe we should write that down but in

797
00:31:55,919 --> 00:31:58,480
here uh maybe just you know

798
00:31:58,480 --> 00:32:02,000
afternoon extraction um

799
00:32:02,000 --> 00:32:03,919
when you go to edge routers right so

800
00:32:03,919 --> 00:32:06,159
these very flexible uh network

801
00:32:06,159 --> 00:32:08,320
processing engines

802
00:32:08,320 --> 00:32:10,799
we we've done performance tables in

803
00:32:10,799 --> 00:32:14,240
terms of from you know line rate at 120

804
00:32:14,240 --> 00:32:16,240
bytes down to you activate this feature

805
00:32:16,240 --> 00:32:18,320
you activate that feature you do this qs

806
00:32:18,320 --> 00:32:20,720
right so qs transport level stuff

807
00:32:20,720 --> 00:32:23,600
looking into layer 4 ports it's just

808
00:32:23,600 --> 00:32:25,440
a continuous slide down right this is

809
00:32:25,440 --> 00:32:28,000
all fast path but still the performance

810
00:32:28,000 --> 00:32:30,720
impacts right that that you have impact

811
00:32:30,720 --> 00:32:32,240
the number of subscribers you can put

812
00:32:32,240 --> 00:32:35,039
behind that uh that device right so

813
00:32:35,039 --> 00:32:36,640
what do

814
00:32:36,640 --> 00:32:38,000
yeah i think it's it's a lot more

815
00:32:38,000 --> 00:32:40,320
complicated than just trying to say a

816
00:32:40,320 --> 00:32:42,880
slow and fast path in general and when

817
00:32:42,880 --> 00:32:44,799
we do an actual hop by hub header

818
00:32:44,799 --> 00:32:46,960
function that is applicable to some

819
00:32:46,960 --> 00:32:47,840
traffic

820
00:32:47,840 --> 00:32:50,000
the exact performance characteristic of

821
00:32:50,000 --> 00:32:51,919
that has to be part of the discussion

822
00:32:51,919 --> 00:32:54,320
about that by hop header functionality

823
00:32:54,320 --> 00:32:55,600
right but here we're trying to do

824
00:32:55,600 --> 00:32:57,600
something independent of individual ones

825
00:32:57,600 --> 00:32:58,880
yeah

826
00:32:58,880 --> 00:33:00,880
i think this should be a lot easier than

827
00:33:00,880 --> 00:33:02,240
all the insights that we've already

828
00:33:02,240 --> 00:33:04,000
gained and that will become more

829
00:33:04,000 --> 00:33:05,919
important when we do individual hop by

830
00:33:05,919 --> 00:33:08,559
hop extension header

831
00:33:08,559 --> 00:33:11,919
headers yes sense promising so curated

832
00:33:11,919 --> 00:33:13,840
do you want to have the last word on the

833
00:33:13,840 --> 00:33:16,159
slow i just wanted to spot i was

834
00:33:16,159 --> 00:33:17,919
wondering when the chairs will stop

835
00:33:17,919 --> 00:33:21,039
letting me come up here but

836
00:33:22,159 --> 00:33:24,720
i think the binary kind of thing between

837
00:33:24,720 --> 00:33:27,039
slow path and fast path is probably good

838
00:33:27,039 --> 00:33:31,120
enough but to echo what torlas just said

839
00:33:31,120 --> 00:33:33,919
um there's a lot going on here and it's

840
00:33:33,919 --> 00:33:35,679
very hard i mean we're doing something

841
00:33:35,679 --> 00:33:38,799
similar in mpls and trying to figure out

842
00:33:38,799 --> 00:33:40,720
how much how many different functions

843
00:33:40,720 --> 00:33:42,080
you can put

844
00:33:42,080 --> 00:33:43,919
you know what we call a special purpose

845
00:33:43,919 --> 00:33:46,559
label there and what it what effect that

846
00:33:46,559 --> 00:33:48,720
would have on the fast path

847
00:33:48,720 --> 00:33:51,039
and and then people get into the details

848
00:33:51,039 --> 00:33:53,679
of here's the p4 you know the language

849
00:33:53,679 --> 00:33:55,760
that it's like no you don't want to go

850
00:33:55,760 --> 00:33:56,799
that far

851
00:33:56,799 --> 00:33:58,720
but you also don't want to just wave

852
00:33:58,720 --> 00:34:01,120
your hands so finding the right balance

853
00:34:01,120 --> 00:34:02,640
there i think is very important both

854
00:34:02,640 --> 00:34:05,679
here and in mpls

855
00:34:05,679 --> 00:34:06,880
okay

856
00:34:06,880 --> 00:34:08,960
so bob

857
00:34:08,960 --> 00:34:10,800
i will ask bob

858
00:34:10,800 --> 00:34:12,560
did we hear that fast path and slow

859
00:34:12,560 --> 00:34:15,040
pathway terms that we want to use again

860
00:34:15,040 --> 00:34:17,839
what do we have to think about this

861
00:34:17,839 --> 00:34:19,679
i think we're hearing that they're

862
00:34:19,679 --> 00:34:22,079
useful but they need to be described

863
00:34:22,079 --> 00:34:23,839
carefully

864
00:34:23,839 --> 00:34:26,079
right i that's what i thought i heard as

865
00:34:26,079 --> 00:34:28,079
well and that sounds a great thing for

866
00:34:28,079 --> 00:34:31,280
the issue to finally pin down on one

867
00:34:31,280 --> 00:34:33,280
specific issue and we'll then look at

868
00:34:33,280 --> 00:34:35,440
the how to get that right probably

869
00:34:35,440 --> 00:34:36,960
outside of the document by just going

870
00:34:36,960 --> 00:34:38,719
backwards and forwards and

871
00:34:38,719 --> 00:34:41,440
hopefully building towards an a

872
00:34:41,440 --> 00:34:43,199
definition of what fast path and slow

873
00:34:43,199 --> 00:34:45,199
path mean for extension headers and we

874
00:34:45,199 --> 00:34:46,800
probably don't care about the other uses

875
00:34:46,800 --> 00:34:48,879
of that term

876
00:34:48,879 --> 00:34:52,239
oh come on let's have another issue

877
00:34:52,239 --> 00:34:54,639
um that was one that's very very similar

878
00:34:54,639 --> 00:34:55,918
to another one so we're going to close

879
00:34:55,918 --> 00:34:58,078
that

880
00:34:58,240 --> 00:35:00,240
um what are the incentives for wider

881
00:35:00,240 --> 00:35:01,680
support

882
00:35:01,680 --> 00:35:02,400
and

883
00:35:02,400 --> 00:35:03,200
yeah

884
00:35:03,200 --> 00:35:04,640
i mean we've already started touching on

885
00:35:04,640 --> 00:35:06,880
that and i think we will form an issue

886
00:35:06,880 --> 00:35:08,240
here which will probably go for a little

887
00:35:08,240 --> 00:35:10,160
while which is

888
00:35:10,160 --> 00:35:14,160
we should um try and explain what hot by

889
00:35:14,160 --> 00:35:15,440
hot

890
00:35:15,440 --> 00:35:18,000
processing is actually

891
00:35:18,000 --> 00:35:20,720
um useful on what it might be so that we

892
00:35:20,720 --> 00:35:23,040
can motivate people reading this draft

893
00:35:23,040 --> 00:35:24,800
and doing something different

894
00:35:24,800 --> 00:35:26,880
otherwise the status quo

895
00:35:26,880 --> 00:35:28,800
is maintained and we don't have support

896
00:35:28,800 --> 00:35:30,560
for hot by hot extension headers because

897
00:35:30,560 --> 00:35:32,320
people already started blocking them so

898
00:35:32,320 --> 00:35:34,079
if we don't explain what are the

899
00:35:34,079 --> 00:35:36,560
incentives for wider support then

900
00:35:36,560 --> 00:35:37,760
we won't get anywhere but we need

901
00:35:37,760 --> 00:35:39,119
contributions of text and we'll put them

902
00:35:39,119 --> 00:35:40,960
into the issue there's some man standing

903
00:35:40,960 --> 00:35:42,240
in the room which is not in the

904
00:35:42,240 --> 00:35:44,160
microphone queue i don't know quite who

905
00:35:44,160 --> 00:35:46,400
it is but you should press the button i

906
00:35:46,400 --> 00:35:47,760
yeah

907
00:35:47,760 --> 00:35:49,440
i would i would i would always say the

908
00:35:49,440 --> 00:35:51,839
first thing where to have in there is

909
00:35:51,839 --> 00:35:54,720
must be able to ignore right

910
00:35:54,720 --> 00:35:56,800
should be able to process a secondary

911
00:35:56,800 --> 00:35:58,480
must be able to ignore

912
00:35:58,480 --> 00:35:59,920
i think is the core thing for

913
00:35:59,920 --> 00:36:01,920
interoperability right so

914
00:36:01,920 --> 00:36:03,440
because i think everything we're doing

915
00:36:03,440 --> 00:36:06,320
is going to be optional um for

916
00:36:06,320 --> 00:36:07,839
and so that

917
00:36:07,839 --> 00:36:10,480
i'd really love to see that must ignore

918
00:36:10,480 --> 00:36:11,440
support

919
00:36:11,440 --> 00:36:14,079
the size as as as the core

920
00:36:14,079 --> 00:36:17,520
and that was toilet speaking again

921
00:36:17,520 --> 00:36:20,400
okay we've done issue 17

922
00:36:20,400 --> 00:36:22,880
and we'll look at the next issue please

923
00:36:22,880 --> 00:36:25,040
issue 18

924
00:36:25,040 --> 00:36:26,880
we can stay at the one chair who's

925
00:36:26,880 --> 00:36:28,800
sitting in the room and say at the end

926
00:36:28,800 --> 00:36:30,800
of the day um are we going to make

927
00:36:30,800 --> 00:36:32,800
recommendations are we actually going to

928
00:36:32,800 --> 00:36:33,680
make

929
00:36:33,680 --> 00:36:35,200
requirements should this be a standard

930
00:36:35,200 --> 00:36:36,720
strike document

931
00:36:36,720 --> 00:36:38,320
and we'll keep asking him until he

932
00:36:38,320 --> 00:36:40,480
decides but i guess that would be

933
00:36:40,480 --> 00:36:42,960
depending on how the document goes but

934
00:36:42,960 --> 00:36:45,520
it's a useful question because

935
00:36:45,520 --> 00:36:48,560
depending on how strong the consensus is

936
00:36:48,560 --> 00:36:50,400
and we should make recommendations for

937
00:36:50,400 --> 00:36:52,079
the smaller our recommendations with the

938
00:36:52,079 --> 00:36:54,240
big r

939
00:36:54,240 --> 00:36:56,960
he says yes that's good number 20.

940
00:36:56,960 --> 00:36:58,880
we can't expect unrelated routes of

941
00:36:58,880 --> 00:37:01,440
devices on the path to apply specific

942
00:37:01,440 --> 00:37:03,920
behavior

943
00:37:04,320 --> 00:37:05,200
yeah

944
00:37:05,200 --> 00:37:07,599
extensions headers are an obvious way to

945
00:37:07,599 --> 00:37:10,079
extend ip features

946
00:37:10,079 --> 00:37:12,160
and i guess we live in faith that we can

947
00:37:12,160 --> 00:37:14,480
extend ipv6 i think it would be a good

948
00:37:14,480 --> 00:37:16,400
thing to do personally

949
00:37:16,400 --> 00:37:18,400
and we agree that a specific hop by hop

950
00:37:18,400 --> 00:37:20,400
option will only be processed by nodes

951
00:37:20,400 --> 00:37:23,440
wanting to do so which is kind of

952
00:37:23,440 --> 00:37:25,760
a little bit like we've heard today

953
00:37:25,760 --> 00:37:28,640
don't think we can change that

954
00:37:28,640 --> 00:37:29,839
and so

955
00:37:29,839 --> 00:37:31,440
maybe this is a good comment and maybe

956
00:37:31,440 --> 00:37:32,800
what we'll do is try and put that into

957
00:37:32,800 --> 00:37:34,320
the document a little bit more clearly

958
00:37:34,320 --> 00:37:36,480
at the beginning

959
00:37:36,480 --> 00:37:39,200
issue 21 new options must not be defined

960
00:37:39,200 --> 00:37:42,960
that requires small path processing

961
00:37:44,960 --> 00:37:47,200
it seems simple but and then some people

962
00:37:47,200 --> 00:37:49,119
didn't like that one so um that will be

963
00:37:49,119 --> 00:37:50,640
an argument of having routers on router

964
00:37:50,640 --> 00:37:53,359
alert and stop us going further

965
00:37:53,359 --> 00:37:55,040
there's a url to the issue tracker which

966
00:37:55,040 --> 00:37:56,720
is where all this stuff really the best

967
00:37:56,720 --> 00:37:58,320
discussion

968
00:37:58,320 --> 00:37:59,280
so

969
00:37:59,280 --> 00:38:00,720
end of my talk

970
00:38:00,720 --> 00:38:02,880
you have seven more slides

971
00:38:02,880 --> 00:38:05,359
i do

972
00:38:05,359 --> 00:38:07,280
no you're backup slides i think we're

973
00:38:07,280 --> 00:38:08,880
out of time so

974
00:38:08,880 --> 00:38:10,320
yeah the question i think you've got

975
00:38:10,320 --> 00:38:12,000
enough comments and questions to work on

976
00:38:12,000 --> 00:38:14,800
the next revision uh yeah yeah

977
00:38:14,800 --> 00:38:16,560
yeah this has been very good thank you

978
00:38:16,560 --> 00:38:19,680
all bob you get to say a final word as i

979
00:38:19,680 --> 00:38:21,440
sit down

980
00:38:21,440 --> 00:38:25,839
um i thought i just did um but uh so the

981
00:38:25,839 --> 00:38:28,400
next uh we have so we're not doing tom's

982
00:38:28,400 --> 00:38:29,440
talk

983
00:38:29,440 --> 00:38:36,400
so now jai dong uh talk about vtn id

984
00:38:40,400 --> 00:38:42,560
me

985
00:38:44,000 --> 00:38:45,359
so

986
00:38:45,359 --> 00:38:47,440
please uh please go ahead

987
00:38:47,440 --> 00:38:49,200
i can give you slide control as well if

988
00:38:49,200 --> 00:38:51,119
you like uh

989
00:38:51,119 --> 00:38:52,800
oh that's fine

990
00:38:52,800 --> 00:38:53,839
yeah so now you should be able to

991
00:38:53,839 --> 00:38:55,920
control control the slide so please go

992
00:38:55,920 --> 00:38:58,160
ahead okay thank you

993
00:38:58,160 --> 00:39:00,640
so this is an update about uh carrying

994
00:39:00,640 --> 00:39:02,960
vtid ipv6

995
00:39:02,960 --> 00:39:04,960
extension header draft

996
00:39:04,960 --> 00:39:06,960
uh i'm presenting on behalf of the

997
00:39:06,960 --> 00:39:09,920
co-authors here

998
00:39:13,440 --> 00:39:14,400
okay

999
00:39:14,400 --> 00:39:16,960
here's some background and the status of

1000
00:39:16,960 --> 00:39:18,640
this draft

1001
00:39:18,640 --> 00:39:21,440
basically this document proposed to

1002
00:39:21,440 --> 00:39:23,839
introduce a new hobby hub extension

1003
00:39:23,839 --> 00:39:27,280
header to carry the vt information

1004
00:39:27,280 --> 00:39:29,680
which is used by the transit nodes on

1005
00:39:29,680 --> 00:39:31,599
the path to steered packets to the set

1006
00:39:31,599 --> 00:39:33,599
of natural resources allocated to the

1007
00:39:33,599 --> 00:39:34,640
vtm

1008
00:39:34,640 --> 00:39:36,640
to perform provide the guaranteed

1009
00:39:36,640 --> 00:39:39,920
performance for the vtn specific traffic

1010
00:39:39,920 --> 00:39:42,400
and the current status is that this

1011
00:39:42,400 --> 00:39:44,640
document has been adopted earlier this

1012
00:39:44,640 --> 00:39:45,680
month

1013
00:39:45,680 --> 00:39:48,800
and during the adoption call we received

1014
00:39:48,800 --> 00:39:52,000
valuable comments and discussions

1015
00:39:52,000 --> 00:39:53,599
and many of the comments have been

1016
00:39:53,599 --> 00:39:56,800
resolved in the middle east discussion i

1017
00:39:56,800 --> 00:39:58,480
think it's a good way to list other

1018
00:39:58,480 --> 00:40:01,440
issues uh just like the

1019
00:40:01,440 --> 00:40:04,000
previous draft did

1020
00:40:04,000 --> 00:40:06,319
in this presentation the authors mainly

1021
00:40:06,319 --> 00:40:08,560
would like to pick some of the comments

1022
00:40:08,560 --> 00:40:10,400
for some further discussion

1023
00:40:10,400 --> 00:40:12,560
and we can hear more feedbacks from the

1024
00:40:12,560 --> 00:40:14,079
wing group

1025
00:40:14,079 --> 00:40:16,000
so that the document will be updated

1026
00:40:16,000 --> 00:40:18,640
accordingly

1027
00:40:20,160 --> 00:40:22,560
okay here's the first comment is about

1028
00:40:22,560 --> 00:40:24,240
the terminology

1029
00:40:24,240 --> 00:40:26,960
uh during the adoption call there's some

1030
00:40:26,960 --> 00:40:29,280
discussion about why they will call it

1031
00:40:29,280 --> 00:40:32,480
vtn resource id or the nrp id or

1032
00:40:32,480 --> 00:40:34,640
something else

1033
00:40:34,640 --> 00:40:36,000
i think this is

1034
00:40:36,000 --> 00:40:37,920
related to the terminology discussion

1035
00:40:37,920 --> 00:40:40,400
and definition in the teas working group

1036
00:40:40,400 --> 00:40:42,720
and in this working group the nrp or

1037
00:40:42,720 --> 00:40:45,119
network resource partition is defined as

1038
00:40:45,119 --> 00:40:47,760
a set of network resources allocated in

1039
00:40:47,760 --> 00:40:49,200
the network

1040
00:40:49,200 --> 00:40:51,200
and the vtn the virtual transport

1041
00:40:51,200 --> 00:40:54,800
network is a virtual android network

1042
00:40:54,800 --> 00:40:56,400
which is uh

1043
00:40:56,400 --> 00:40:58,880
consisting of a set of natural resources

1044
00:40:58,880 --> 00:41:02,000
and associated with a network topology

1045
00:41:02,000 --> 00:41:02,880
so

1046
00:41:02,880 --> 00:41:05,200
it seems that the vpn resource id and

1047
00:41:05,200 --> 00:41:08,079
rpid refers to the same thing

1048
00:41:08,079 --> 00:41:10,079
and currently the test working group is

1049
00:41:10,079 --> 00:41:11,359
working on the alignment of the

1050
00:41:11,359 --> 00:41:14,000
terminologies in a set of graphs and

1051
00:41:14,000 --> 00:41:16,240
this document could follow the decision

1052
00:41:16,240 --> 00:41:19,119
made in tears and to do the terminology

1053
00:41:19,119 --> 00:41:20,720
alignment

1054
00:41:20,720 --> 00:41:23,680
uh but something uh some something more

1055
00:41:23,680 --> 00:41:26,079
to be considered here is that

1056
00:41:26,079 --> 00:41:28,560
uh whether we want to extend the

1057
00:41:28,560 --> 00:41:31,440
semantics and the format of this id

1058
00:41:31,440 --> 00:41:33,839
for the hubba hub extension header

1059
00:41:33,839 --> 00:41:35,520
this will be discussed in the following

1060
00:41:35,520 --> 00:41:37,920
slides

1061
00:41:42,880 --> 00:41:45,119
okay the second comment is about the

1062
00:41:45,119 --> 00:41:47,440
processing procedures

1063
00:41:47,440 --> 00:41:49,920
the first one is uh if a node skips the

1064
00:41:49,920 --> 00:41:51,839
hub hub extension header

1065
00:41:51,839 --> 00:41:54,079
it cannot apply the policies required

1066
00:41:54,079 --> 00:41:55,359
for the vta

1067
00:41:55,359 --> 00:41:56,800
so this is uh

1068
00:41:56,800 --> 00:42:00,480
yeah this is a reasonable comment and

1069
00:42:00,480 --> 00:42:03,200
our response is that if uh strictly

1070
00:42:03,200 --> 00:42:04,720
conforming to the vtin specific

1071
00:42:04,720 --> 00:42:07,520
processing is required in the network uh

1072
00:42:07,520 --> 00:42:10,079
it would it is recommended to make sure

1073
00:42:10,079 --> 00:42:12,560
that all the nodes involved in the vtn

1074
00:42:12,560 --> 00:42:14,880
can process the hobby hub and this

1075
00:42:14,880 --> 00:42:16,960
machine option

1076
00:42:16,960 --> 00:42:18,960
this can uh the capability of the

1077
00:42:18,960 --> 00:42:20,640
national nodes can be

1078
00:42:20,640 --> 00:42:22,800
obtained either via the management

1079
00:42:22,800 --> 00:42:24,560
system or some control plan

1080
00:42:24,560 --> 00:42:26,560
advertisement

1081
00:42:26,560 --> 00:42:28,160
so that we can make sure that the

1082
00:42:28,160 --> 00:42:31,440
traffic will only be for forwarded to

1083
00:42:31,440 --> 00:42:32,160
the

1084
00:42:32,160 --> 00:42:35,760
nodes which have this capability

1085
00:42:35,760 --> 00:42:37,920
uh another thing related to the

1086
00:42:37,920 --> 00:42:40,560
processing is uh how to process the

1087
00:42:40,560 --> 00:42:42,880
packet if the transient knows

1088
00:42:42,880 --> 00:42:46,240
it can pass it can pass the rvt option

1089
00:42:46,240 --> 00:42:47,920
but it does not have the network

1090
00:42:47,920 --> 00:42:50,880
resources allocated to the vtn

1091
00:42:50,880 --> 00:42:53,040
uh this is uh something we need to

1092
00:42:53,040 --> 00:42:54,160
consider

1093
00:42:54,160 --> 00:42:55,359
and uh

1094
00:42:55,359 --> 00:42:58,880
currently we think we may use a flag

1095
00:42:58,880 --> 00:43:01,280
to determine the forwarding behavior

1096
00:43:01,280 --> 00:43:03,839
of the in this case but when the flag is

1097
00:43:03,839 --> 00:43:05,920
set it will indicate that package should

1098
00:43:05,920 --> 00:43:08,079
be dropped when there is no matching

1099
00:43:08,079 --> 00:43:10,160
resources for the vtn

1100
00:43:10,160 --> 00:43:11,760
if the flag is

1101
00:43:11,760 --> 00:43:12,880
not set

1102
00:43:12,880 --> 00:43:14,640
it will indicate that package can be

1103
00:43:14,640 --> 00:43:15,920
processed

1104
00:43:15,920 --> 00:43:18,400
processed use a default set of resources

1105
00:43:18,400 --> 00:43:20,400
like it will fall back to the best

1106
00:43:20,400 --> 00:43:22,800
effort

1107
00:43:24,839 --> 00:43:27,440
processing uh the short third comment is

1108
00:43:27,440 --> 00:43:29,599
about the semantics and format of the

1109
00:43:29,599 --> 00:43:31,040
beating option

1110
00:43:31,040 --> 00:43:31,839
uh

1111
00:43:31,839 --> 00:43:33,440
we received the

1112
00:43:33,440 --> 00:43:36,079
comments and suggestion that

1113
00:43:36,079 --> 00:43:39,440
to make this tag generic and flexible

1114
00:43:39,440 --> 00:43:41,200
because in addition to the network

1115
00:43:41,200 --> 00:43:43,359
slicing there are other use cases which

1116
00:43:43,359 --> 00:43:46,079
could benefit from this attack

1117
00:43:46,079 --> 00:43:48,079
and

1118
00:43:48,079 --> 00:43:49,359
there's also

1119
00:43:49,359 --> 00:43:51,839
following comments about whether we need

1120
00:43:51,839 --> 00:43:54,720
to consider to allow the variable length

1121
00:43:54,720 --> 00:43:56,079
of the stack

1122
00:43:56,079 --> 00:43:58,240
and whether we should introduce some

1123
00:43:58,240 --> 00:44:01,440
structure to this option

1124
00:44:01,440 --> 00:44:03,760
so here are some considerations from the

1125
00:44:03,760 --> 00:44:05,119
authors

1126
00:44:05,119 --> 00:44:07,680
the first one is we think the semantic

1127
00:44:07,680 --> 00:44:09,119
of this id

1128
00:44:09,119 --> 00:44:13,040
uh is uh like a natural white identifier

1129
00:44:13,040 --> 00:44:14,800
so if anything

1130
00:44:14,800 --> 00:44:16,960
which is natural white has some natural

1131
00:44:16,960 --> 00:44:18,640
white semantics

1132
00:44:18,640 --> 00:44:19,680
may be

1133
00:44:19,680 --> 00:44:23,200
uh carried in using this id if it is

1134
00:44:23,200 --> 00:44:25,440
generalized

1135
00:44:25,440 --> 00:44:28,000
um another thing is uh we need to

1136
00:44:28,000 --> 00:44:30,960
consider to align with the processing

1137
00:44:30,960 --> 00:44:34,319
and suggestions and the guidelines in

1138
00:44:34,319 --> 00:44:36,400
the harbor hub processing draft the

1139
00:44:36,400 --> 00:44:38,079
first one is we need to make sure that

1140
00:44:38,079 --> 00:44:39,920
this the option is straightforward

1141
00:44:39,920 --> 00:44:41,200
process

1142
00:44:41,200 --> 00:44:43,760
and the length of this option should not

1143
00:44:43,760 --> 00:44:45,119
uh be

1144
00:44:45,119 --> 00:44:46,880
uh extremely

1145
00:44:46,880 --> 00:44:50,880
long which can make it extend beyond the

1146
00:44:50,880 --> 00:44:54,000
capability of the nose and for the like

1147
00:44:54,000 --> 00:44:56,880
uh fastpass processing

1148
00:44:56,880 --> 00:44:57,920
so

1149
00:44:57,920 --> 00:45:01,280
taking both into consideration we

1150
00:45:01,280 --> 00:45:03,520
are considering to make some

1151
00:45:03,520 --> 00:45:06,839
extensions to this option to keep some

1152
00:45:06,839 --> 00:45:10,960
extensibility and for the future use

1153
00:45:10,960 --> 00:45:14,160
the option data length field for of this

1154
00:45:14,160 --> 00:45:16,720
option can already be used to indicate a

1155
00:45:16,720 --> 00:45:19,119
variable lens option field at the value

1156
00:45:19,119 --> 00:45:20,240
field

1157
00:45:20,240 --> 00:45:23,040
and we may introduce a flag field for

1158
00:45:23,040 --> 00:45:24,560
the

1159
00:45:24,560 --> 00:45:26,640
behaviors indicated

1160
00:45:26,640 --> 00:45:28,880
in the previous slide and other optional

1161
00:45:28,880 --> 00:45:30,400
behaviors

1162
00:45:30,400 --> 00:45:34,079
even processing this identified

1163
00:45:34,079 --> 00:45:37,599
uh we may also introduce a reserve field

1164
00:45:37,599 --> 00:45:41,280
for the some future extensions

1165
00:45:41,280 --> 00:45:43,599
the last one is whether we

1166
00:45:43,599 --> 00:45:46,560
consider to make this id field wearable

1167
00:45:46,560 --> 00:45:48,960
with a variable lens

1168
00:45:48,960 --> 00:45:50,079
taking the

1169
00:45:50,079 --> 00:45:51,359
discussion

1170
00:45:51,359 --> 00:45:54,000
about the faster path processing we

1171
00:45:54,000 --> 00:45:58,560
need to be careful about making the lens

1172
00:45:58,720 --> 00:46:01,440
with arbitrary lens

1173
00:46:01,440 --> 00:46:02,480
so

1174
00:46:02,480 --> 00:46:04,240
it'll be discussed

1175
00:46:04,240 --> 00:46:07,839
pascal do you have a comment

1176
00:46:09,280 --> 00:46:11,520
yes uh my command let's not think about

1177
00:46:11,520 --> 00:46:15,119
it my comment is um the need to signal a

1178
00:46:15,119 --> 00:46:17,680
psychological topology for which there

1179
00:46:17,680 --> 00:46:19,760
is a state in the nodes

1180
00:46:19,760 --> 00:46:20,800
uh

1181
00:46:20,800 --> 00:46:22,319
is is

1182
00:46:22,319 --> 00:46:25,119
appears in in multiple places we've

1183
00:46:25,119 --> 00:46:27,760
we've done already a heartbreak header

1184
00:46:27,760 --> 00:46:29,119
option

1185
00:46:29,119 --> 00:46:31,280
for ripple that's the ripple option and

1186
00:46:31,280 --> 00:46:33,040
that's exactly what it signals there is

1187
00:46:33,040 --> 00:46:34,960
what we call an instance id which is a

1188
00:46:34,960 --> 00:46:38,160
logical topology uh that basically you

1189
00:46:38,160 --> 00:46:41,440
place the packets on um right now at

1190
00:46:41,440 --> 00:46:42,720
that net

1191
00:46:42,720 --> 00:46:44,640
we also have

1192
00:46:44,640 --> 00:46:46,560
the need to signal

1193
00:46:46,560 --> 00:46:49,599
uh something like a path

1194
00:46:49,599 --> 00:46:51,520
which is really a a

1195
00:46:51,520 --> 00:46:52,720
complex

1196
00:46:52,720 --> 00:46:54,560
logical structure

1197
00:46:54,560 --> 00:46:56,960
um on which the packets will be

1198
00:46:56,960 --> 00:46:59,440
forwarded and with the exact same needs

1199
00:46:59,440 --> 00:47:01,599
that you know every nodes on the path

1200
00:47:01,599 --> 00:47:04,160
must understand the topology and forward

1201
00:47:04,160 --> 00:47:06,319
based on a death net state which is

1202
00:47:06,319 --> 00:47:08,960
associated to that topology and so i was

1203
00:47:08,960 --> 00:47:13,280
like um are we going to

1204
00:47:13,359 --> 00:47:14,560
create

1205
00:47:14,560 --> 00:47:17,359
one option per work group or

1206
00:47:17,359 --> 00:47:20,480
uh or is there is there an intention a

1207
00:47:20,480 --> 00:47:23,280
need to kind of recognize this this

1208
00:47:23,280 --> 00:47:24,240
common

1209
00:47:24,240 --> 00:47:26,000
requirement to identify biological

1210
00:47:26,000 --> 00:47:27,920
topology and state associated to that

1211
00:47:27,920 --> 00:47:29,839
logical topology

1212
00:47:29,839 --> 00:47:32,400
so we would basically

1213
00:47:32,400 --> 00:47:34,240
consume less options basically in the

1214
00:47:34,240 --> 00:47:35,920
ocean space

1215
00:47:35,920 --> 00:47:39,839
and how do we want to handle this

1216
00:47:40,480 --> 00:47:44,800
um yeah very good uh question i think uh

1217
00:47:44,800 --> 00:47:46,800
from the beginning of this document uh

1218
00:47:46,800 --> 00:47:50,559
we can see that it is mainly about

1219
00:47:50,720 --> 00:47:54,160
the initial idea is to use this i option

1220
00:47:54,160 --> 00:47:56,640
to identify a virtual transfer network

1221
00:47:56,640 --> 00:47:58,319
and the set of resources for packet

1222
00:47:58,319 --> 00:47:59,440
processing

1223
00:47:59,440 --> 00:48:01,280
but

1224
00:48:01,280 --> 00:48:03,200
in the adoption call we've received this

1225
00:48:03,200 --> 00:48:05,760
uh comments about the weather to

1226
00:48:05,760 --> 00:48:07,920
consider to generalize it

1227
00:48:07,920 --> 00:48:11,359
so the authors i think they were open to

1228
00:48:11,359 --> 00:48:13,520
the

1229
00:48:14,079 --> 00:48:16,880
consent discussion in the main working

1230
00:48:16,880 --> 00:48:18,319
group and

1231
00:48:18,319 --> 00:48:21,680
any consensus based on the discussion so

1232
00:48:21,680 --> 00:48:22,800
that

1233
00:48:22,800 --> 00:48:24,000
the thing

1234
00:48:24,000 --> 00:48:25,599
is up to the working group to decide

1235
00:48:25,599 --> 00:48:26,559
whether

1236
00:48:26,559 --> 00:48:29,359
or make it a generalized option or we

1237
00:48:29,359 --> 00:48:33,960
keep it for a specific usage

1238
00:48:40,720 --> 00:48:43,720
do

1239
00:48:48,319 --> 00:48:50,559
okay shall we

1240
00:48:50,559 --> 00:48:51,760
continue

1241
00:48:51,760 --> 00:48:53,440
pascal do you have a further comment

1242
00:48:53,440 --> 00:48:55,839
before we move on

1243
00:48:55,839 --> 00:48:57,359
yeah i mean it's not for the comments

1244
00:48:57,359 --> 00:48:59,440
it's really i mean i'd like to back from

1245
00:48:59,440 --> 00:49:02,559
the room actually or from people

1246
00:49:02,559 --> 00:49:03,280
so

1247
00:49:03,280 --> 00:49:05,200
do we have a direction is there is an

1248
00:49:05,200 --> 00:49:07,119
intention to to

1249
00:49:07,119 --> 00:49:10,720
lead to many many options or or more

1250
00:49:10,720 --> 00:49:12,960
coalesced ones i mean is there like an

1251
00:49:12,960 --> 00:49:14,160
architecture

1252
00:49:14,160 --> 00:49:17,680
that would like to follow us a quote

1253
00:49:17,760 --> 00:49:20,720
that's a good question

1254
00:49:23,680 --> 00:49:26,240
let's go on

1255
00:49:26,240 --> 00:49:29,879
yeah okay

1256
00:49:32,480 --> 00:49:34,079
okay

1257
00:49:34,079 --> 00:49:34,960
so

1258
00:49:34,960 --> 00:49:36,960
here's the next steps uh

1259
00:49:36,960 --> 00:49:38,880
we would like to collect the further

1260
00:49:38,880 --> 00:49:40,559
feedbacks from the working group on the

1261
00:49:40,559 --> 00:49:42,800
above discussion points

1262
00:49:42,800 --> 00:49:45,440
and if we have some consensus on any of

1263
00:49:45,440 --> 00:49:47,200
them we will update the document

1264
00:49:47,200 --> 00:49:49,200
accordingly

1265
00:49:49,200 --> 00:49:52,319
okay that's all

1266
00:49:52,640 --> 00:49:55,440
thank you thank you thank you

1267
00:49:55,440 --> 00:49:59,000
any further comments

1268
00:50:00,240 --> 00:50:02,000
if not then we are moving on to brian

1269
00:50:02,000 --> 00:50:04,319
carpenter's presentation who's sensibly

1270
00:50:04,319 --> 00:50:06,640
enough not stayed awake but

1271
00:50:06,640 --> 00:50:08,880
sent us a video sorry eric klein you can

1272
00:50:08,880 --> 00:50:12,079
speak while i get the video up

1273
00:50:12,079 --> 00:50:13,920
oh i was wondering whether the apn folks

1274
00:50:13,920 --> 00:50:16,319
had had a chance to look at the extended

1275
00:50:16,319 --> 00:50:18,000
vtn

1276
00:50:18,000 --> 00:50:20,240
comments and and to know what to decide

1277
00:50:20,240 --> 00:50:23,520
whether or not it would work for them

1278
00:50:24,559 --> 00:50:25,599
i

1279
00:50:25,599 --> 00:50:26,800
don't know if they're in the room i know

1280
00:50:26,800 --> 00:50:28,079
they have like five minutes at the end

1281
00:50:28,079 --> 00:50:30,960
of the session time permitting

1282
00:50:30,960 --> 00:50:32,960
anywho never mind

1283
00:50:32,960 --> 00:50:34,400
that's certainly an interesting question

1284
00:50:34,400 --> 00:50:39,000
to keep in mind when we talk about abn

1285
00:50:45,599 --> 00:50:48,000
see

1286
00:50:49,280 --> 00:50:53,000
okay so you'll

1287
00:51:04,079 --> 00:51:05,359
this is the first time we're sharing a

1288
00:51:05,359 --> 00:51:08,559
video so let's see how this goes

1289
00:51:08,559 --> 00:51:11,839
please don't interrupt brian

1290
00:51:14,640 --> 00:51:16,880
hi this is brian carpenter and i'm going

1291
00:51:16,880 --> 00:51:19,680
to talk about the idea on representing

1292
00:51:19,680 --> 00:51:22,640
ipv6 zone identifiers in uniform

1293
00:51:22,640 --> 00:51:25,839
resource identifiers

1294
00:51:28,800 --> 00:51:32,160
so first a bit of motivation

1295
00:51:32,160 --> 00:51:35,040
literal addresses in uris are mainly

1296
00:51:35,040 --> 00:51:37,119
intended for operational use or

1297
00:51:37,119 --> 00:51:41,200
diagnostic use not for normal use

1298
00:51:41,200 --> 00:51:43,599
sometimes we need to take actions

1299
00:51:43,599 --> 00:51:47,599
relating to ipv6 link local addresses

1300
00:51:47,599 --> 00:51:50,480
on a specific interface on the host

1301
00:51:50,480 --> 00:51:52,880
a web browser may be the handiest tool

1302
00:51:52,880 --> 00:51:55,119
for this for example just to send out

1303
00:51:55,119 --> 00:51:57,520
packets that you might want to trace

1304
00:51:57,520 --> 00:51:59,599
and it may be the only tool for actually

1305
00:51:59,599 --> 00:52:01,280
reconfiguring devices whose

1306
00:52:01,280 --> 00:52:03,520
configuration mechanism

1307
00:52:03,520 --> 00:52:05,520
is a built-in web server if they're

1308
00:52:05,520 --> 00:52:07,680
otherwise broken and need to be hand

1309
00:52:07,680 --> 00:52:08,960
reconfigured

1310
00:52:08,960 --> 00:52:11,200
and there's at least one application

1311
00:52:11,200 --> 00:52:15,359
cups printing that needs http usage of

1312
00:52:15,359 --> 00:52:17,119
link local addresses on a specific

1313
00:52:17,119 --> 00:52:20,160
interface so the use case is quite real

1314
00:52:20,160 --> 00:52:24,240
even if not very mainstream

1315
00:52:24,240 --> 00:52:26,400
well we did discuss this

1316
00:52:26,400 --> 00:52:28,000
10 years ago

1317
00:52:28,000 --> 00:52:30,839
and it became rfc

1318
00:52:30,839 --> 00:52:32,400
6874

1319
00:52:32,400 --> 00:52:34,160
now the question is why are we

1320
00:52:34,160 --> 00:52:36,400
discussing it again

1321
00:52:36,400 --> 00:52:40,559
well because that rfc was a fail

1322
00:52:40,559 --> 00:52:42,559
as you know we have a standard text

1323
00:52:42,559 --> 00:52:44,240
representation for a linked local

1324
00:52:44,240 --> 00:52:48,640
address as is shown on the slide

1325
00:52:48,640 --> 00:52:52,079
that's widely supported and used in ipv6

1326
00:52:52,079 --> 00:52:53,760
in general

1327
00:52:53,760 --> 00:52:54,839
so

1328
00:52:54,839 --> 00:52:56,720
rf6874

1329
00:52:56,720 --> 00:52:59,280
defined a mapping for the zone id in uri

1330
00:52:59,280 --> 00:53:00,800
syntax

1331
00:53:00,800 --> 00:53:03,839
no known current browser is supported

1332
00:53:03,839 --> 00:53:06,000
the browser community the what working

1333
00:53:06,000 --> 00:53:08,480
group in other words decided explicitly

1334
00:53:08,480 --> 00:53:12,280
not to support it

1335
00:53:14,079 --> 00:53:15,920
so what were the problems that produced

1336
00:53:15,920 --> 00:53:18,559
that failure

1337
00:53:18,880 --> 00:53:19,680
well

1338
00:53:19,680 --> 00:53:21,839
it modifies the

1339
00:53:21,839 --> 00:53:23,760
abnf

1340
00:53:23,760 --> 00:53:24,880
of the

1341
00:53:24,880 --> 00:53:26,319
formal definition

1342
00:53:26,319 --> 00:53:28,000
of uris

1343
00:53:28,000 --> 00:53:29,599
by adding in

1344
00:53:29,599 --> 00:53:31,520
this new new

1345
00:53:31,520 --> 00:53:32,800
component

1346
00:53:32,800 --> 00:53:35,280
a percent sign followed by 25 followed

1347
00:53:35,280 --> 00:53:37,440
by the interface name

1348
00:53:37,440 --> 00:53:40,559
you use percent 25 as a separator

1349
00:53:40,559 --> 00:53:42,880
because that's the

1350
00:53:42,880 --> 00:53:46,720
method in uris according to the syntax

1351
00:53:46,720 --> 00:53:48,880
of escaping special characters such as

1352
00:53:48,880 --> 00:53:51,520
the percent sign

1353
00:53:51,520 --> 00:53:53,040
now the problem with that is it prevents

1354
00:53:53,040 --> 00:53:55,520
cutting paste you can't cut what you've

1355
00:53:55,520 --> 00:53:57,359
typed into a pin command and paste it in

1356
00:53:57,359 --> 00:54:02,480
the url you have to manually fix it

1357
00:54:03,040 --> 00:54:05,599
we previously proposed that because that

1358
00:54:05,599 --> 00:54:08,319
is the escape character in uris

1359
00:54:08,319 --> 00:54:10,559
when you actually look into uri pauses

1360
00:54:10,559 --> 00:54:12,720
and how they work

1361
00:54:12,720 --> 00:54:14,480
it turns out you really don't need it so

1362
00:54:14,480 --> 00:54:16,079
the proposal with the new draft is

1363
00:54:16,079 --> 00:54:18,640
simply to drop the percent two five and

1364
00:54:18,640 --> 00:54:23,400
replace it with a simple percent sign

1365
00:54:25,760 --> 00:54:30,319
another problem is that the text of 6874

1366
00:54:30,319 --> 00:54:33,200
requires hosts to delete the zone id

1367
00:54:33,200 --> 00:54:35,680
from outgoing uris that would be in an

1368
00:54:35,680 --> 00:54:39,040
http host header for example

1369
00:54:39,040 --> 00:54:41,280
that violates the normal behavior of

1370
00:54:41,280 --> 00:54:42,880
http

1371
00:54:42,880 --> 00:54:45,760
implementations the very least it's all

1372
00:54:45,760 --> 00:54:48,000
quick to code and it actually breaks one

1373
00:54:48,000 --> 00:54:49,920
of our use cases namely the cups

1374
00:54:49,920 --> 00:54:52,960
printing protocol so the proposal

1375
00:54:52,960 --> 00:54:56,960
now is to simply delete that requirement

1376
00:54:59,280 --> 00:55:00,640
third problem

1377
00:55:00,640 --> 00:55:03,200
with rfc 6874

1378
00:55:03,200 --> 00:55:06,319
is it suggests that url passes

1379
00:55:06,319 --> 00:55:09,599
should support the percent 25 encoding

1380
00:55:09,599 --> 00:55:11,440
but heuristically

1381
00:55:11,440 --> 00:55:12,880
accept

1382
00:55:12,880 --> 00:55:15,760
a uri that doesn't contain the percent

1383
00:55:15,760 --> 00:55:17,440
encoding so

1384
00:55:17,440 --> 00:55:20,480
descent f zero would be

1385
00:55:20,480 --> 00:55:22,640
recognized as the same as percent two

1386
00:55:22,640 --> 00:55:24,559
five at zero

1387
00:55:24,559 --> 00:55:26,960
except for the exception cases where

1388
00:55:26,960 --> 00:55:28,640
percent

1389
00:55:28,640 --> 00:55:31,520
sign can could be a legitimate escape it

1390
00:55:31,520 --> 00:55:33,359
makes it very tricky to code is very

1391
00:55:33,359 --> 00:55:36,880
confusing to users so the proposal

1392
00:55:36,880 --> 00:55:38,480
is to delete this

1393
00:55:38,480 --> 00:55:41,200
suggestion

1394
00:55:42,079 --> 00:55:43,599
and the fourth

1395
00:55:43,599 --> 00:55:47,559
problem area with rfc6874

1396
00:55:47,760 --> 00:55:49,760
is that it forgot to update the

1397
00:55:49,760 --> 00:55:51,839
internationalized resource identifier

1398
00:55:51,839 --> 00:55:53,440
syntax which is

1399
00:55:53,440 --> 00:55:55,359
trivial to do but it means doing an

1400
00:55:55,359 --> 00:55:58,640
update a different rfc as well as the

1401
00:55:58,640 --> 00:56:02,040
original one

1402
00:56:03,760 --> 00:56:06,160
so we end up with a final proposal which

1403
00:56:06,160 --> 00:56:07,200
is that

1404
00:56:07,200 --> 00:56:09,599
parsers whether they're parsing

1405
00:56:09,599 --> 00:56:12,079
uh uris or iris

1406
00:56:12,079 --> 00:56:13,599
should accept

1407
00:56:13,599 --> 00:56:15,119
a literal address

1408
00:56:15,119 --> 00:56:18,160
as shown there which simply has percent

1409
00:56:18,160 --> 00:56:21,200
and the interface name

1410
00:56:22,160 --> 00:56:24,960
the zone id should of course be passed

1411
00:56:24,960 --> 00:56:27,440
on to the socket api

1412
00:56:27,440 --> 00:56:29,119
without any uh

1413
00:56:29,119 --> 00:56:32,000
need to validate it

1414
00:56:32,000 --> 00:56:33,280
and there are no other special

1415
00:56:33,280 --> 00:56:35,040
requirements for browsers all the other

1416
00:56:35,040 --> 00:56:37,359
special stuff we discussed

1417
00:56:37,359 --> 00:56:38,799
in

1418
00:56:38,799 --> 00:56:42,119
uh rfc 6784

1419
00:56:42,119 --> 00:56:43,680
6874

1420
00:56:43,680 --> 00:56:46,558
is dropped

1421
00:56:49,839 --> 00:56:51,200
so

1422
00:56:51,200 --> 00:56:53,760
we need feedback we contacted a number

1423
00:56:53,760 --> 00:56:55,680
of senior people in the browser

1424
00:56:55,680 --> 00:56:58,160
implementation community

1425
00:56:58,160 --> 00:57:00,480
the message back from them was very

1426
00:57:00,480 --> 00:57:03,440
clear they could implement this but they

1427
00:57:03,440 --> 00:57:05,200
will not implement it without strong

1428
00:57:05,200 --> 00:57:07,760
pressure from users

1429
00:57:07,760 --> 00:57:10,640
so our conclusion at the moment

1430
00:57:10,640 --> 00:57:13,280
is that the best course of action for

1431
00:57:13,280 --> 00:57:15,200
the ietf

1432
00:57:15,200 --> 00:57:17,839
is to advance this draft to precisely

1433
00:57:17,839 --> 00:57:20,079
document the required

1434
00:57:20,079 --> 00:57:22,000
browser behavior

1435
00:57:22,000 --> 00:57:23,599
and

1436
00:57:23,599 --> 00:57:24,400
then

1437
00:57:24,400 --> 00:57:26,880
wait until that strong pressure from

1438
00:57:26,880 --> 00:57:29,440
users arrives which i think it will do

1439
00:57:29,440 --> 00:57:30,799
as people

1440
00:57:30,799 --> 00:57:31,839
deploy

1441
00:57:31,839 --> 00:57:34,319
ipv6 only networks and discover they

1442
00:57:34,319 --> 00:57:35,839
have no other way

1443
00:57:35,839 --> 00:57:38,319
to carry out certain operations of

1444
00:57:38,319 --> 00:57:39,440
course we

1445
00:57:39,440 --> 00:57:41,920
the authors would prefer to receive lots

1446
00:57:41,920 --> 00:57:43,760
more feedback

1447
00:57:43,760 --> 00:57:46,160
thank you

1448
00:57:48,559 --> 00:57:50,480
thanks brian uh

1449
00:57:50,480 --> 00:57:52,640
any comments on that

1450
00:57:52,640 --> 00:57:54,319
anyone representing the browser

1451
00:57:54,319 --> 00:57:57,119
community here

1452
00:58:02,720 --> 00:58:05,440
yes i'll just say i seem to have been a

1453
00:58:05,440 --> 00:58:08,079
co-author of this that i think our goal

1454
00:58:08,079 --> 00:58:09,920
is to document what we think the right

1455
00:58:09,920 --> 00:58:12,160
behavior is and thinking that this will

1456
00:58:12,160 --> 00:58:13,520
be useful

1457
00:58:13,520 --> 00:58:15,359
later when there is demand for something

1458
00:58:15,359 --> 00:58:17,119
like this currently right now there

1459
00:58:17,119 --> 00:58:19,040
isn't

1460
00:58:19,040 --> 00:58:22,920
we have someone in the queue

1461
00:58:24,880 --> 00:58:28,000
mr ackerman can you go ahead please

1462
00:58:28,000 --> 00:58:29,359
um

1463
00:58:29,359 --> 00:58:30,880
no you're

1464
00:58:30,880 --> 00:58:33,920
just hang on yeah

1465
00:58:34,400 --> 00:58:36,559
yeah

1466
00:58:36,559 --> 00:58:39,599
uh mike ackerman i i have a first off i

1467
00:58:39,599 --> 00:58:41,680
think this is great work and can get rid

1468
00:58:41,680 --> 00:58:43,839
of some inhibitors i'm from a large

1469
00:58:43,839 --> 00:58:46,319
enterprise who's not doing ipv6 and this

1470
00:58:46,319 --> 00:58:48,160
is one of the reasons why

1471
00:58:48,160 --> 00:58:49,680
so this is great work

1472
00:58:49,680 --> 00:58:53,040
our in in brian's context there is

1473
00:58:53,040 --> 00:58:54,960
is an organization like mine considered

1474
00:58:54,960 --> 00:58:57,760
a user and should we apply some kind of

1475
00:58:57,760 --> 00:58:59,680
pressure here to our vendors or should

1476
00:58:59,680 --> 00:59:03,279
we just sit back and uh please

1477
00:59:03,440 --> 00:59:05,040
so that's my question

1478
00:59:05,040 --> 00:59:08,558
what can we do to help kind of question

1479
00:59:08,799 --> 00:59:11,359
yeah i think applying

1480
00:59:11,359 --> 00:59:13,280
showing they're interested in this to

1481
00:59:13,280 --> 00:59:15,119
your as a

1482
00:59:15,119 --> 00:59:17,440
browser user customer

1483
00:59:17,440 --> 00:59:19,599
sounds fine to me

1484
00:59:19,599 --> 00:59:22,079
and and just to give my perspective what

1485
00:59:22,079 --> 00:59:23,839
happens to us is i'm one of the ones

1486
00:59:23,839 --> 00:59:26,799
that wants to do ipv6 very few do

1487
00:59:26,799 --> 00:59:28,960
and when i say okay if we do it here's

1488
00:59:28,960 --> 00:59:30,799
the ways to do it here's how we can help

1489
00:59:30,799 --> 00:59:32,799
and everything but here's a couple minor

1490
00:59:32,799 --> 00:59:34,400
issues a lot of people don't think this

1491
00:59:34,400 --> 00:59:35,839
is a minor issue

1492
00:59:35,839 --> 00:59:38,400
so that it's an inhibitor so thanks for

1493
00:59:38,400 --> 00:59:40,160
trying to address it anything we can do

1494
00:59:40,160 --> 00:59:42,400
to help let me know thank you

1495
00:59:42,400 --> 00:59:44,559
that's good feedback thank you

1496
00:59:44,559 --> 00:59:46,799
michael richardson michael richardson at

1497
00:59:46,799 --> 00:59:48,880
the mic having reloaded his entire

1498
00:59:48,880 --> 00:59:51,359
browser tab to get back to the thing

1499
00:59:51,359 --> 00:59:53,280
um

1500
00:59:53,280 --> 00:59:54,799
so um

1501
00:59:54,799 --> 00:59:58,880
uh i'm i am i expressed the opinion uh a

1502
00:59:58,880 --> 01:00:01,200
couple weeks ago that there was no point

1503
01:00:01,200 --> 01:00:03,119
in doing this until we had this that

1504
01:00:03,119 --> 01:00:04,480
we're just we're just spinning our

1505
01:00:04,480 --> 01:00:06,640
wheels brian's convinced me

1506
01:00:06,640 --> 01:00:09,520
that it is useful to go ahead

1507
01:00:09,520 --> 01:00:12,480
uh i am very skeptical that that user

1508
01:00:12,480 --> 01:00:15,200
groundswell of user demand will appear

1509
01:00:15,200 --> 01:00:16,960
due to chicken and egg because no one's

1510
01:00:16,960 --> 01:00:18,960
going to bother deploying an iot device

1511
01:00:18,960 --> 01:00:21,359
it's accessible by ipv6

1512
01:00:21,359 --> 01:00:23,760
link local literals until

1513
01:00:23,760 --> 01:00:25,200
browser can reach it

1514
01:00:25,200 --> 01:00:26,160
okay

1515
01:00:26,160 --> 01:00:26,960
so

1516
01:00:26,960 --> 01:00:28,799
um you know

1517
01:00:28,799 --> 01:00:32,079
that that's i i unfortunately i don't

1518
01:00:32,079 --> 01:00:33,359
know how to get i don't know how to

1519
01:00:33,359 --> 01:00:34,720
break that egg

1520
01:00:34,720 --> 01:00:37,040
and what i was hoping is that

1521
01:00:37,040 --> 01:00:39,680
somebody maybe an enterprise user who

1522
01:00:39,680 --> 01:00:42,240
has a close relationship with their

1523
01:00:42,240 --> 01:00:45,119
browser vendor will will cause at least

1524
01:00:45,119 --> 01:00:47,280
one browser to do this

1525
01:00:47,280 --> 01:00:48,319
and

1526
01:00:48,319 --> 01:00:51,280
and that may you know maybe un

1527
01:00:51,280 --> 01:00:53,119
break the log jam and i think that the

1528
01:00:53,119 --> 01:00:54,640
example of

1529
01:00:54,640 --> 01:00:56,720
in a home specifically

1530
01:00:56,720 --> 01:00:58,400
which has been renumbered

1531
01:00:58,400 --> 01:01:00,000
by renumbered i mean

1532
01:01:00,000 --> 01:01:02,400
someone else has moved into the home

1533
01:01:02,400 --> 01:01:03,599
and now they have a whole bunch of

1534
01:01:03,599 --> 01:01:06,799
devices that are effectively have names

1535
01:01:06,799 --> 01:01:09,839
but and maybe they have ip addresses

1536
01:01:09,839 --> 01:01:11,839
from the previous owner

1537
01:01:11,839 --> 01:01:13,760
um and now that you need to actually go

1538
01:01:13,760 --> 01:01:15,520
and find these devices and do something

1539
01:01:15,520 --> 01:01:17,839
with them and that this is where it

1540
01:01:17,839 --> 01:01:19,839
really i think it's a real win

1541
01:01:19,839 --> 01:01:20,799
for that

1542
01:01:20,799 --> 01:01:21,599
but

1543
01:01:21,599 --> 01:01:23,280
you know until you know maybe someone's

1544
01:01:23,280 --> 01:01:25,520
going to have to have a

1545
01:01:25,520 --> 01:01:26,799
you're going to have to have a specific

1546
01:01:26,799 --> 01:01:29,359
compile of a specific browser that

1547
01:01:29,359 --> 01:01:31,680
actually can find all your old devices

1548
01:01:31,680 --> 01:01:34,160
um but anyway so the point is that i was

1549
01:01:34,160 --> 01:01:35,920
on the skeptical should we do this work

1550
01:01:35,920 --> 01:01:37,839
should we publish this is worth is this

1551
01:01:37,839 --> 01:01:40,799
worth you know the 80s time to review

1552
01:01:40,799 --> 01:01:43,119
and i'm convinced that i've been pushed

1553
01:01:43,119 --> 01:01:45,200
over to the side of okay i guess it's

1554
01:01:45,200 --> 01:01:47,040
worth doing something even if the

1555
01:01:47,040 --> 01:01:49,520
browser people won't help us

1556
01:01:49,520 --> 01:01:51,119
thanks michael i'll let

1557
01:01:51,119 --> 01:01:52,480
ben sneak in

1558
01:01:52,480 --> 01:01:55,039
because he claims that his browser isn't

1559
01:01:55,039 --> 01:01:57,520
working but i did try again when you put

1560
01:01:57,520 --> 01:01:59,440
the qr code back up it's still not

1561
01:01:59,440 --> 01:02:01,760
working i'm afraid um

1562
01:02:01,760 --> 01:02:02,720
so

1563
01:02:02,720 --> 01:02:04,319
speaking of someone who can't really

1564
01:02:04,319 --> 01:02:06,240
think of an immediate use case that i

1565
01:02:06,240 --> 01:02:07,760
have for this it seems like it's

1566
01:02:07,760 --> 01:02:09,680
probably helpful for someone

1567
01:02:09,680 --> 01:02:10,559
um

1568
01:02:10,559 --> 01:02:13,839
the thing that occurs to me is it seems

1569
01:02:13,839 --> 01:02:14,880
like

1570
01:02:14,880 --> 01:02:16,000
um

1571
01:02:16,000 --> 01:02:19,119
this is potentially a

1572
01:02:19,119 --> 01:02:21,200
um an avenue for either kind of

1573
01:02:21,200 --> 01:02:23,760
reconnaissance or or or data gathering

1574
01:02:23,760 --> 01:02:26,160
via the back door if you if you

1575
01:02:26,160 --> 01:02:27,920
if you manage to get

1576
01:02:27,920 --> 01:02:30,640
um a browser or some other piece of user

1577
01:02:30,640 --> 01:02:34,799
software to follow a url of this form

1578
01:02:34,799 --> 01:02:38,160
you potentially are able to gather data

1579
01:02:38,160 --> 01:02:40,079
that kind of listens only on a linked

1580
01:02:40,079 --> 01:02:41,839
local address under the expectation that

1581
01:02:41,839 --> 01:02:43,680
that's only that data is only going to

1582
01:02:43,680 --> 01:02:45,599
be available locally and i wonder if

1583
01:02:45,599 --> 01:02:49,839
you've given any thought to um

1584
01:02:49,839 --> 01:02:51,359
whether this

1585
01:02:51,359 --> 01:02:53,599
makes

1586
01:02:53,599 --> 01:02:55,280
whether you need to start thinking about

1587
01:02:55,280 --> 01:02:57,359
degrees of

1588
01:02:57,359 --> 01:02:59,920
trust um trustedness

1589
01:02:59,920 --> 01:03:00,720
um

1590
01:03:00,720 --> 01:03:02,640
and whether these uh the the you know

1591
01:03:02,640 --> 01:03:05,280
these qualified uris need to be treated

1592
01:03:05,280 --> 01:03:08,559
as inherently less trusted if received

1593
01:03:08,559 --> 01:03:10,720
from a remote source than

1594
01:03:10,720 --> 01:03:14,079
you know a a a a a kind of a normal dns

1595
01:03:14,079 --> 01:03:17,280
name based uh based uri um

1596
01:03:17,280 --> 01:03:18,640
it feels like there might be a bit of a

1597
01:03:18,640 --> 01:03:21,680
can of worms down there

1598
01:03:21,920 --> 01:03:23,440
okay yeah i don't think we've thought

1599
01:03:23,440 --> 01:03:26,480
about that thank you

1600
01:03:26,960 --> 01:03:29,960
lorenzo

1601
01:03:30,240 --> 01:03:32,400
uh lorenzo kalidi i yeah i think i think

1602
01:03:32,400 --> 01:03:34,000
there's value in documenting the correct

1603
01:03:34,000 --> 01:03:34,960
format

1604
01:03:34,960 --> 01:03:35,760
um

1605
01:03:35,760 --> 01:03:37,280
i don't think anything will actually use

1606
01:03:37,280 --> 01:03:39,520
this in urls because the

1607
01:03:39,520 --> 01:03:41,440
the thing that hands up the url is an

1608
01:03:41,440 --> 01:03:43,119
http server

1609
01:03:43,119 --> 01:03:45,440
usually and the http server doesn't know

1610
01:03:45,440 --> 01:03:47,359
what interfaces are present on the

1611
01:03:47,359 --> 01:03:48,559
client

1612
01:03:48,559 --> 01:03:51,039
kind of by definition right so

1613
01:03:51,039 --> 01:03:53,599
it's useful like how does my iot device

1614
01:03:53,599 --> 01:03:55,520
know that my interface school leads it's

1615
01:03:55,520 --> 01:03:57,119
one right

1616
01:03:57,119 --> 01:03:59,520
um but anyway um like like i said i

1617
01:03:59,520 --> 01:04:00,799
think there's value in documenting the

1618
01:04:00,799 --> 01:04:02,000
correct format

1619
01:04:02,000 --> 01:04:03,760
i think it's primarily useful for users

1620
01:04:03,760 --> 01:04:06,480
like typing urls in manually which users

1621
01:04:06,480 --> 01:04:08,160
won't do but you know it's probably

1622
01:04:08,160 --> 01:04:10,880
useful for debugging

1623
01:04:10,880 --> 01:04:13,760
yeah we need to wrap this up soon we're

1624
01:04:13,760 --> 01:04:16,720
about out of time

1625
01:04:16,799 --> 01:04:18,960
so perhaps it'd be helpful if i gave an

1626
01:04:18,960 --> 01:04:20,799
example of the kind of thing i think

1627
01:04:20,799 --> 01:04:23,520
this might make work so systemd for

1628
01:04:23,520 --> 01:04:26,000
example uses you know

1629
01:04:26,000 --> 01:04:27,920
heuristics and and information about the

1630
01:04:27,920 --> 01:04:30,640
pci bus that a nick lives on to generate

1631
01:04:30,640 --> 01:04:32,799
an interface name by default

1632
01:04:32,799 --> 01:04:34,799
by

1633
01:04:34,799 --> 01:04:36,799
you know asking someone

1634
01:04:36,799 --> 01:04:39,280
via you know some embedded javascript to

1635
01:04:39,280 --> 01:04:43,280
go and try and try you know fe-80 colon

1636
01:04:43,280 --> 01:04:44,640
colon one

1637
01:04:44,640 --> 01:04:47,280
via a series of kind of constructed

1638
01:04:47,280 --> 01:04:48,720
interface names you might be able to

1639
01:04:48,720 --> 01:04:50,640
gather into information about what nick

1640
01:04:50,640 --> 01:04:52,160
someone's got on board

1641
01:04:52,160 --> 01:04:53,839
you know that that sort of thing is i

1642
01:04:53,839 --> 01:04:55,200
think the stuff that this potentially

1643
01:04:55,200 --> 01:04:57,680
enables

1644
01:04:58,480 --> 01:05:00,559
and you get the last word michael um

1645
01:05:00,559 --> 01:05:02,240
thank you michael richardson lorenzo's

1646
01:05:02,240 --> 01:05:04,559
question about iot device well in most

1647
01:05:04,559 --> 01:05:06,160
cases what's going to happen is that you

1648
01:05:06,160 --> 01:05:08,400
need to get to the beginning page

1649
01:05:08,400 --> 01:05:10,400
of the device you get that by

1650
01:05:10,400 --> 01:05:12,720
essentially scanning the the network um

1651
01:05:12,720 --> 01:05:14,400
using mdns or something like that so

1652
01:05:14,400 --> 01:05:17,119
those links are actually created locally

1653
01:05:17,119 --> 01:05:19,359
and once you get to the the page the

1654
01:05:19,359 --> 01:05:21,440
links are all relative

1655
01:05:21,440 --> 01:05:23,359
so you don't have to worry about the

1656
01:05:23,359 --> 01:05:25,440
device knowing which thing it is that

1657
01:05:25,440 --> 01:05:27,599
that's this is this is a mostly solved

1658
01:05:27,599 --> 01:05:28,559
problem

1659
01:05:28,559 --> 01:05:31,119
and if anything there's some security

1660
01:05:31,119 --> 01:05:34,240
concern about if the page does come back

1661
01:05:34,240 --> 01:05:39,440
with some interface devices and uh but

1662
01:05:39,440 --> 01:05:41,280
i think that's a uh what's the right

1663
01:05:41,280 --> 01:05:44,559
word uh cross-site scripting issue that

1664
01:05:44,559 --> 01:05:47,039
is in general as a problem not

1665
01:05:47,039 --> 01:05:50,160
specifically to this

1666
01:05:50,160 --> 01:05:52,480
thank you let's go to the next talk

1667
01:05:52,480 --> 01:05:56,440
shiresh you're up

1668
01:06:05,359 --> 01:06:07,119
you should have slide control as well as

1669
01:06:07,119 --> 01:06:10,119
rush

1670
01:06:28,319 --> 01:06:31,920
let's see if suresh can sort out his

1671
01:06:31,920 --> 01:06:34,799
audio on video

1672
01:06:41,280 --> 01:06:44,839
so this by the way is work that

1673
01:06:44,839 --> 01:06:49,039
uh we asked suresh to help us with as a

1674
01:06:49,039 --> 01:06:50,880
working group in collaboration with

1675
01:06:50,880 --> 01:06:53,359
spring so this came out of

1676
01:06:53,359 --> 01:06:55,760
a work in spring where the spring chairs

1677
01:06:55,760 --> 01:06:58,640
asked six man their opinion on the usage

1678
01:06:58,640 --> 01:07:00,400
of

1679
01:07:00,400 --> 01:07:02,640
v6 addresses in

1680
01:07:02,640 --> 01:07:05,598
in spring documents

1681
01:07:11,599 --> 01:07:14,319
seresta you want to give a little uh

1682
01:07:14,319 --> 01:07:15,760
wave or hint

1683
01:07:15,760 --> 01:07:17,680
of where you are otherwise we can move

1684
01:07:17,680 --> 01:07:19,039
to ted's talk and come back to you

1685
01:07:19,039 --> 01:07:22,039
thresh

1686
01:07:31,280 --> 01:07:34,000
yeah why don't we just move to uh should

1687
01:07:34,000 --> 01:07:36,319
we do ted's talk first and then suresh

1688
01:07:36,319 --> 01:07:39,200
you can come after

1689
01:07:39,359 --> 01:07:41,440
i want to try see if this works i just

1690
01:07:41,440 --> 01:07:43,359
left the room and entered

1691
01:07:43,359 --> 01:07:45,039
yeah we can hear you but now we can hear

1692
01:07:45,039 --> 01:07:46,799
you okay

1693
01:07:46,799 --> 01:07:49,119
i think i lost the slides now

1694
01:07:49,119 --> 01:07:51,680
yeah let me show you

1695
01:07:51,680 --> 01:07:54,839
thank you

1696
01:07:57,599 --> 01:07:59,839
thanks all and uh i was gonna complain

1697
01:07:59,839 --> 01:08:01,760
about like it being very early then i

1698
01:08:01,760 --> 01:08:03,599
realized bob is like

1699
01:08:03,599 --> 01:08:06,000
3 a.m for bob so like i'm gonna stop my

1700
01:08:06,000 --> 01:08:08,000
complaints

1701
01:08:08,000 --> 01:08:08,839
thank

1702
01:08:08,839 --> 01:08:10,720
you

1703
01:08:10,720 --> 01:08:13,119
and and eric as well uh so thanks uh so

1704
01:08:13,119 --> 01:08:14,799
thank you very much like uh this has

1705
01:08:14,799 --> 01:08:16,560
been like a very interesting draft like

1706
01:08:16,560 --> 01:08:18,719
so this came out of uh well as like

1707
01:08:18,719 --> 01:08:20,000
allah said like you know a lot of

1708
01:08:20,000 --> 01:08:22,399
discussions between the six-man chairs

1709
01:08:22,399 --> 01:08:24,960
the spring chairs and the uh and the

1710
01:08:24,960 --> 01:08:27,279
respective 80s as well so i just put

1711
01:08:27,279 --> 01:08:29,279
together like a kind of a straw man

1712
01:08:29,279 --> 01:08:31,839
proposal to go forward with uh trying to

1713
01:08:31,839 --> 01:08:33,679
address like all the points that were

1714
01:08:33,679 --> 01:08:36,158
brought up in there and um

1715
01:08:36,158 --> 01:08:39,359
next slide thank you

1716
01:08:39,359 --> 01:08:42,238
uh i gave control to you

1717
01:08:42,238 --> 01:08:44,479
oh

1718
01:08:44,560 --> 01:08:46,399
excellent thank you

1719
01:08:46,399 --> 01:08:48,000
i think that's the part i lost the audio

1720
01:08:48,000 --> 01:08:50,960
so thank you uh so the uh the goal of

1721
01:08:50,960 --> 01:08:52,319
the draft is to look at the

1722
01:08:52,319 --> 01:08:55,600
characteristics of srv6 heads and how

1723
01:08:55,600 --> 01:08:57,359
they relate to the ipv6 addressing

1724
01:08:57,359 --> 01:08:59,839
architecture that was kind of the ask of

1725
01:08:59,839 --> 01:09:01,040
me to do it

1726
01:09:01,040 --> 01:09:02,799
and uh like one of the things that came

1727
01:09:02,799 --> 01:09:05,040
up was really the uh srh like seedless

1728
01:09:05,040 --> 01:09:07,839
that's in there right and um

1729
01:09:07,839 --> 01:09:09,600
so it is like i think it's pretty clear

1730
01:09:09,600 --> 01:09:11,359
from the srh rfc itself right like you

1731
01:09:11,359 --> 01:09:12,399
know there's like different kind of

1732
01:09:12,399 --> 01:09:14,479
things that can occur in this list uh

1733
01:09:14,479 --> 01:09:17,359
some of them are like srv6 said and the

1734
01:09:17,359 --> 01:09:18,880
other things are just

1735
01:09:18,880 --> 01:09:20,479
addresses that can be assigned to local

1736
01:09:20,479 --> 01:09:22,238
interfaces just like any other ipv6

1737
01:09:22,238 --> 01:09:24,719
addresses and um

1738
01:09:24,719 --> 01:09:26,640
what this clarifies is like anything

1739
01:09:26,640 --> 01:09:28,799
that falls in the look other science

1740
01:09:28,799 --> 01:09:32,319
local interfaces uh scenario needs to

1741
01:09:32,319 --> 01:09:34,399
comply with rfc 4291 so like you know

1742
01:09:34,399 --> 01:09:36,719
how the address is formatted how like

1743
01:09:36,719 --> 01:09:38,960
you know the nd works and so on uh needs

1744
01:09:38,960 --> 01:09:42,399
to be fully in compliance with rc4291 so

1745
01:09:42,399 --> 01:09:43,520
we are really talking about like you

1746
01:09:43,520 --> 01:09:46,479
know what's in b and

1747
01:09:46,479 --> 01:09:49,439
so the draft like uh looks at like how

1748
01:09:49,439 --> 01:09:52,238
like rfc8986 which is the srv6 network

1749
01:09:52,238 --> 01:09:55,040
programming defines uh the srv success

1750
01:09:55,040 --> 01:09:56,560
right so it's got like this three part

1751
01:09:56,560 --> 01:09:58,320
thing like you know the lock fountain

1752
01:09:58,320 --> 01:10:01,520
arguments uh sitting in there and this

1753
01:10:01,520 --> 01:10:04,800
clearly does not follow uh rfc 4291 so

1754
01:10:04,800 --> 01:10:06,480
the idea is to really document this

1755
01:10:06,480 --> 01:10:08,880
deviation and to mention that these are

1756
01:10:08,880 --> 01:10:12,239
not uh acceptable for assignment to

1757
01:10:12,239 --> 01:10:14,560
in-house as on the interfaces

1758
01:10:14,560 --> 01:10:17,440
and um clearly we do have president for

1759
01:10:17,440 --> 01:10:19,920
doing stuff like this so the 6052 is

1760
01:10:19,920 --> 01:10:22,159
like for addressing off like ipv's four

1761
01:10:22,159 --> 01:10:25,600
type e6 translators and 7343 is like

1762
01:10:25,600 --> 01:10:27,760
this orchids which are crypto ids and

1763
01:10:27,760 --> 01:10:30,400
they don't follow rfc rfc4291 either but

1764
01:10:30,400 --> 01:10:33,120
they look like ipv6 addresses so like

1765
01:10:33,120 --> 01:10:34,239
what you're saying is like hey this

1766
01:10:34,239 --> 01:10:35,920
thing follows the same path as this

1767
01:10:35,920 --> 01:10:37,440
other things we've done before which

1768
01:10:37,440 --> 01:10:39,600
don't follow 4291 so don't assign them

1769
01:10:39,600 --> 01:10:40,400
to

1770
01:10:40,400 --> 01:10:43,040
interfaces on nhos

1771
01:10:43,040 --> 01:10:44,560
and the other piece was like you know

1772
01:10:44,560 --> 01:10:47,520
how does this affect uh stuff that uh

1773
01:10:47,520 --> 01:10:48,800
does not

1774
01:10:48,800 --> 01:10:50,880
uh it's not aware of srv6 right like you

1775
01:10:50,880 --> 01:10:53,760
know it doesn't do srv6 so for the nodes

1776
01:10:53,760 --> 01:10:56,560
which don't support srv6 these addresses

1777
01:10:56,560 --> 01:10:58,400
like when they appear

1778
01:10:58,400 --> 01:11:00,400
in the destination address of the packet

1779
01:11:00,400 --> 01:11:02,000
they're just used just like regular

1780
01:11:02,000 --> 01:11:04,320
routing uh addresses right if you look

1781
01:11:04,320 --> 01:11:04,960
at

1782
01:11:04,960 --> 01:11:07,440
rfc 7608 like which talks about variable

1783
01:11:07,440 --> 01:11:10,239
and prefixes it's like brian's rc right

1784
01:11:10,239 --> 01:11:12,640
and it really talks about like you know

1785
01:11:12,640 --> 01:11:14,320
you can have routing three pictures of

1786
01:11:14,320 --> 01:11:15,920
any lens so like you know you just need

1787
01:11:15,920 --> 01:11:18,560
to make sure that uh like what is in the

1788
01:11:18,560 --> 01:11:20,239
locator part like kind of doesn't change

1789
01:11:20,239 --> 01:11:22,320
going forward so it's simply just a

1790
01:11:22,320 --> 01:11:24,000
prefix and that's really the standard to

1791
01:11:24,000 --> 01:11:27,320
apply here

1792
01:11:27,679 --> 01:11:28,960
and so

1793
01:11:28,960 --> 01:11:30,480
what does the draft recommend right it

1794
01:11:30,480 --> 01:11:33,199
just says a few things right like and

1795
01:11:33,199 --> 01:11:36,000
one of them is to come up with some kind

1796
01:11:36,000 --> 01:11:38,640
of uh like address allocation right like

1797
01:11:38,640 --> 01:11:40,400
it's request a prefix allocation from

1798
01:11:40,400 --> 01:11:42,800
the inner space for this uh from the

1799
01:11:42,800 --> 01:11:44,960
global unicast space

1800
01:11:44,960 --> 01:11:46,719
and and the idea is like a lot of people

1801
01:11:46,719 --> 01:11:48,080
have said like hey like you know when

1802
01:11:48,080 --> 01:11:49,280
when you have a packet especially

1803
01:11:49,280 --> 01:11:52,400
without an srh like doing srv6 uh it

1804
01:11:52,400 --> 01:11:54,000
becomes like difficult to do filtering

1805
01:11:54,000 --> 01:11:55,199
at the edges because you don't really

1806
01:11:55,199 --> 01:11:57,600
have an srh to look to see if this is

1807
01:11:57,600 --> 01:12:00,400
like doing srv6 so this allows like you

1808
01:12:00,400 --> 01:12:02,000
know people who don't want these kind of

1809
01:12:02,000 --> 01:12:04,239
packets to escape the domain or ought to

1810
01:12:04,239 --> 01:12:05,679
enter the domain depending on like you

1811
01:12:05,679 --> 01:12:07,600
know where you look at uh it helps

1812
01:12:07,600 --> 01:12:09,440
identify these kind of packets to filter

1813
01:12:09,440 --> 01:12:12,320
them at the edges of the sr domain

1814
01:12:12,320 --> 01:12:14,000
and it also talks about like few things

1815
01:12:14,000 --> 01:12:16,480
that um the compressor extract which is

1816
01:12:16,480 --> 01:12:18,560
what causes whole

1817
01:12:18,560 --> 01:12:20,320
like you know exchange between spring

1818
01:12:20,320 --> 01:12:21,120
and

1819
01:12:21,120 --> 01:12:23,280
and six man i saw the routing and

1820
01:12:23,280 --> 01:12:26,320
internet areas um it has like some uh

1821
01:12:26,320 --> 01:12:27,600
some stuff that needs to get fixed

1822
01:12:27,600 --> 01:12:29,920
before it's published as rfc so it talks

1823
01:12:29,920 --> 01:12:30,880
about a few of these things and

1824
01:12:30,880 --> 01:12:33,199
especially really uh about

1825
01:12:33,199 --> 01:12:35,120
error handling and and

1826
01:12:35,120 --> 01:12:36,880
oam and like how the

1827
01:12:36,880 --> 01:12:38,560
uh segments left field is defined it

1828
01:12:38,560 --> 01:12:40,000
just says like hey you need to fix these

1829
01:12:40,000 --> 01:12:42,239
things but obviously it's not up to six

1830
01:12:42,239 --> 01:12:44,400
man to decide but i think it's some

1831
01:12:44,400 --> 01:12:46,560
indication like for the 80s to look for

1832
01:12:46,560 --> 01:12:47,760
these things

1833
01:12:47,760 --> 01:12:50,320
when this hits the isg

1834
01:12:50,320 --> 01:12:51,600
and and the last piece is like you know

1835
01:12:51,600 --> 01:12:54,159
pretty much i i think it's

1836
01:12:54,159 --> 01:12:56,320
um it's obvious and doesn't need to get

1837
01:12:56,320 --> 01:12:57,920
said but it

1838
01:12:57,920 --> 01:13:00,239
it's worth documenting is like generic

1839
01:13:00,239 --> 01:13:02,560
ipv6 tunneling security considerations

1840
01:13:02,560 --> 01:13:04,560
apply when you use these addresses

1841
01:13:04,560 --> 01:13:05,920
especially when like you know you don't

1842
01:13:05,920 --> 01:13:08,960
have um like srh like are like tunneling

1843
01:13:08,960 --> 01:13:10,239
happening

1844
01:13:10,239 --> 01:13:11,760
you still have the same kind of concerns

1845
01:13:11,760 --> 01:13:14,080
because you could get into a domain and

1846
01:13:14,080 --> 01:13:16,400
direct packets in a specific way uh to

1847
01:13:16,400 --> 01:13:18,480
hit specific notes so i think the the

1848
01:13:18,480 --> 01:13:20,640
security considerations still apply so

1849
01:13:20,640 --> 01:13:22,080
that's pretty much what's in the draft

1850
01:13:22,080 --> 01:13:24,400
so um if you haven't read it it's it's

1851
01:13:24,400 --> 01:13:26,000
like a pretty easy read it's like not

1852
01:13:26,000 --> 01:13:27,120
very long

1853
01:13:27,120 --> 01:13:29,199
um so please go ahead and

1854
01:13:29,199 --> 01:13:31,360
send comments on it i got some extremely

1855
01:13:31,360 --> 01:13:33,840
good comments before um

1856
01:13:33,840 --> 01:13:36,400
special thanks to uh brian carpenter and

1857
01:13:36,400 --> 01:13:37,679
eric klein for like you know a lot of

1858
01:13:37,679 --> 01:13:38,960
the uh

1859
01:13:38,960 --> 01:13:40,800
thinking behind this and like bob and

1860
01:13:40,800 --> 01:13:42,719
ola and

1861
01:13:42,719 --> 01:13:44,400
andrew like

1862
01:13:44,400 --> 01:13:46,480
bruno like you know a lot of people gave

1863
01:13:46,480 --> 01:13:47,920
like really really good comments on it

1864
01:13:47,920 --> 01:13:49,280
and two for the name they're all in the

1865
01:13:49,280 --> 01:13:50,800
acknowledgement section

1866
01:13:50,800 --> 01:13:53,040
so please feel free to uh reach out to

1867
01:13:53,040 --> 01:13:55,520
me or like go on list uh if you have any

1868
01:13:55,520 --> 01:13:58,400
issues with it so thank you

1869
01:13:58,400 --> 01:13:59,840
thanks sir

1870
01:13:59,840 --> 01:14:02,159
yeah thanks

1871
01:14:02,159 --> 01:14:04,640
so we have jen in the queue

1872
01:14:04,640 --> 01:14:06,880
yeah

1873
01:14:07,320 --> 01:14:09,760
clarification question

1874
01:14:09,760 --> 01:14:12,000
but you're saying global unicos so you

1875
01:14:12,000 --> 01:14:15,040
mean two zero zero slash three right is

1876
01:14:15,040 --> 01:14:17,440
there any reason not to use the

1877
01:14:17,440 --> 01:14:19,360
something which is like more like borg

1878
01:14:19,360 --> 01:14:21,280
and slasher is your address space so

1879
01:14:21,280 --> 01:14:22,400
it's

1880
01:14:22,400 --> 01:14:25,360
uh never gets confused with the like

1881
01:14:25,360 --> 01:14:26,480
proper

1882
01:14:26,480 --> 01:14:29,199
ir allocated addresses

1883
01:14:29,199 --> 01:14:31,520
yeah so this is not coming from the 2003

1884
01:14:31,520 --> 01:14:32,400
uh

1885
01:14:32,400 --> 01:14:34,400
uh gen right it's asking for a specific

1886
01:14:34,400 --> 01:14:36,640
new allocation um

1887
01:14:36,640 --> 01:14:38,080
maybe confused i was thinking that we're

1888
01:14:38,080 --> 01:14:40,880
defining global unicast as

1889
01:14:40,880 --> 01:14:43,440
uh two zero zero slash three so maybe we

1890
01:14:43,440 --> 01:14:45,280
need to make it explicitly clearer so it

1891
01:14:45,280 --> 01:14:48,480
should be outside of that block

1892
01:14:48,480 --> 01:14:50,800
it is right like i i think specifically

1893
01:14:50,800 --> 01:14:52,400
as for f zero

1894
01:14:52,400 --> 01:14:54,400
sixteen right like maybe it's it's

1895
01:14:54,400 --> 01:14:56,000
specific yeah it is like specifically

1896
01:14:56,000 --> 01:14:58,640
outside the block thanks for uh i think

1897
01:14:58,640 --> 01:15:00,239
if i had to make something clearer like

1898
01:15:00,239 --> 01:15:02,320
i will right like but it it it's an

1899
01:15:02,320 --> 01:15:04,159
address with global unica semantics but

1900
01:15:04,159 --> 01:15:05,840
not from the currently allocated global

1901
01:15:05,840 --> 01:15:07,600
textbox so i think i can probably yeah

1902
01:15:07,600 --> 01:15:10,719
yeah cool and yes uh like need maybe

1903
01:15:10,719 --> 01:15:12,719
yeah in a consideration maybe we should

1904
01:15:12,719 --> 01:15:14,960
explicitly say that it should be sourced

1905
01:15:14,960 --> 01:15:16,640
through destination through globally

1906
01:15:16,640 --> 01:15:18,880
routable falls or something like that so

1907
01:15:18,880 --> 01:15:21,679
we clear on what is expected in terms of

1908
01:15:21,679 --> 01:15:24,239
routing there

1909
01:15:24,239 --> 01:15:25,679
hey jen if you can send me some text

1910
01:15:25,679 --> 01:15:27,120
like from the ayana consideration if

1911
01:15:27,120 --> 01:15:28,400
there's a diff like i would love it

1912
01:15:28,400 --> 01:15:30,880
thank you yeah sure we'll do

1913
01:15:30,880 --> 01:15:33,760
thank you thanks

1914
01:15:35,040 --> 01:15:38,480
here we have ron in the queue

1915
01:15:38,480 --> 01:15:39,840
head on

1916
01:15:39,840 --> 01:15:41,120
okay hi

1917
01:15:41,120 --> 01:15:43,120
a question about the scope of the draft

1918
01:15:43,120 --> 01:15:45,760
i realize you were focusing on

1919
01:15:45,760 --> 01:15:48,239
um addressing architecture

1920
01:15:48,239 --> 01:15:50,080
but there were some other places where

1921
01:15:50,080 --> 01:15:53,120
we might get in trouble with 8200

1922
01:15:53,120 --> 01:15:56,880
um as an outgrowth of the csid i believe

1923
01:15:56,880 --> 01:15:58,880
there are some situations

1924
01:15:58,880 --> 01:16:01,600
where you might have a srh a routing

1925
01:16:01,600 --> 01:16:04,560
header that has no segments in it you

1926
01:16:04,560 --> 01:16:06,560
just need it either to separate

1927
01:16:06,560 --> 01:16:08,880
destination options that come before and

1928
01:16:08,880 --> 01:16:09,840
after

1929
01:16:09,840 --> 01:16:12,560
or you might need it to carry tax flags

1930
01:16:12,560 --> 01:16:14,159
and tlvs

1931
01:16:14,159 --> 01:16:15,600
um is that something we should talk

1932
01:16:15,600 --> 01:16:17,920
about in this document

1933
01:16:17,920 --> 01:16:20,000
um so right now it's like a good

1934
01:16:20,000 --> 01:16:21,520
question right like so right now it's

1935
01:16:21,520 --> 01:16:24,239
like saying to uh the cc draft to

1936
01:16:24,239 --> 01:16:25,520
document this right like you know how

1937
01:16:25,520 --> 01:16:27,520
the segments left field is handled

1938
01:16:27,520 --> 01:16:29,280
because uh it's clearly noted as a

1939
01:16:29,280 --> 01:16:30,640
deviation right like where especially

1940
01:16:30,640 --> 01:16:32,320
when the segments left close to zero

1941
01:16:32,320 --> 01:16:35,120
right uh i right now it's in there like

1942
01:16:35,120 --> 01:16:36,320
if you want to have some kind of

1943
01:16:36,320 --> 01:16:38,560
discussion here i'm i'm perfectly okay

1944
01:16:38,560 --> 01:16:40,239
with it right like you know to add some

1945
01:16:40,239 --> 01:16:42,080
uh for the meat on it and and thanks ron

1946
01:16:42,080 --> 01:16:44,080
for your comments as well like uh um

1947
01:16:44,080 --> 01:16:45,840
very helpful okay from before okay yeah

1948
01:16:45,840 --> 01:16:47,920
we can do that we're gonna talk about

1949
01:16:47,920 --> 01:16:49,679
yeah we can do it offline

1950
01:16:49,679 --> 01:16:52,000
thank you

1951
01:16:56,320 --> 01:17:01,120
okay good um i think oli and i will

1952
01:17:01,120 --> 01:17:04,000
start an adoption call after the meeting

1953
01:17:04,000 --> 01:17:06,960
or next week something like that um

1954
01:17:06,960 --> 01:17:09,280
and we can go from there

1955
01:17:09,280 --> 01:17:12,560
thanks bro thanks allah thank you and uh

1956
01:17:12,560 --> 01:17:15,120
people uh too bad i can be in vienna but

1957
01:17:15,120 --> 01:17:18,320
like maybe next meeting thanks

1958
01:17:19,920 --> 01:17:23,600
okay so i think the next talk is is ted

1959
01:17:23,600 --> 01:17:26,600
ted

1960
01:17:30,960 --> 01:17:32,480
um

1961
01:17:32,480 --> 01:17:33,600
yeah

1962
01:17:33,600 --> 01:17:35,920
i'm out this apple thing that i have

1963
01:17:35,920 --> 01:17:38,159
only have four usb ports and all of them

1964
01:17:38,159 --> 01:17:40,000
are used so i'm afraid you have to say

1965
01:17:40,000 --> 01:17:40,880
next

1966
01:17:40,880 --> 01:17:42,719
all right well i don't know what company

1967
01:17:42,719 --> 01:17:44,239
you represent that could do something

1968
01:17:44,239 --> 01:17:45,760
with that but

1969
01:17:45,760 --> 01:17:47,600
unfortunately i'm not hardworking so i

1970
01:17:47,600 --> 01:17:50,400
can't help you with that

1971
01:17:50,960 --> 01:17:52,400
yeah they do make ups for that but i

1972
01:17:52,400 --> 01:17:54,400
wasn't going to say that ted is very

1973
01:17:54,400 --> 01:17:55,600
faint

1974
01:17:55,600 --> 01:17:57,600
uh sorry this is the mask can you hear

1975
01:17:57,600 --> 01:17:58,800
me now

1976
01:17:58,800 --> 01:17:59,679
better

1977
01:17:59,679 --> 01:18:03,440
okay thank you uh yeah so uh the reason

1978
01:18:03,440 --> 01:18:05,679
that well so so this is a discussion

1979
01:18:05,679 --> 01:18:08,080
about the source address relation

1980
01:18:08,080 --> 01:18:10,400
source address selection policy for

1981
01:18:10,400 --> 01:18:12,480
foreign ulas

1982
01:18:12,480 --> 01:18:14,239
and i will explain what that means in

1983
01:18:14,239 --> 01:18:15,760
the presentation could i have the next

1984
01:18:15,760 --> 01:18:18,080
slide

1985
01:18:18,159 --> 01:18:20,880
okay so imagine you have the scenario

1986
01:18:20,880 --> 01:18:22,480
this is not the only case where this can

1987
01:18:22,480 --> 01:18:24,239
happen this is just an example scenario

1988
01:18:24,239 --> 01:18:25,679
that i can use to illustrate it because

1989
01:18:25,679 --> 01:18:27,280
this is something that that actually

1990
01:18:27,280 --> 01:18:29,760
occurred and i got a bug report for

1991
01:18:29,760 --> 01:18:30,560
um

1992
01:18:30,560 --> 01:18:33,280
so you've got a home network and you've

1993
01:18:33,280 --> 01:18:35,760
got a reasonably competent user on the

1994
01:18:35,760 --> 01:18:37,760
home network that has set up

1995
01:18:37,760 --> 01:18:39,600
a router with an internal network in

1996
01:18:39,600 --> 01:18:41,760
this case they were using it for testing

1997
01:18:41,760 --> 01:18:43,280
of you know software they wanted to make

1998
01:18:43,280 --> 01:18:44,320
sure that

1999
01:18:44,320 --> 01:18:45,280
uh

2000
01:18:45,280 --> 01:18:47,280
various things could communicate over a

2001
01:18:47,280 --> 01:18:49,760
router uh so they set up a router

2002
01:18:49,760 --> 01:18:51,840
you can see the router on the lower

2003
01:18:51,840 --> 01:18:54,400
right ish

2004
01:18:54,400 --> 01:18:57,920
that is manually configured uh

2005
01:18:57,920 --> 01:19:00,640
to advertise a ula

2006
01:19:00,640 --> 01:19:02,400
uh

2007
01:19:02,400 --> 01:19:04,880
uh s a pio option

2008
01:19:04,880 --> 01:19:06,159
uh on

2009
01:19:06,159 --> 01:19:08,880
on the internal network um

2010
01:19:08,880 --> 01:19:10,159
and you have a host on the internal

2011
01:19:10,159 --> 01:19:11,920
network in the far lower right

2012
01:19:11,920 --> 01:19:14,560
that has gotten a ula address

2013
01:19:14,560 --> 01:19:16,480
and then you have a home network

2014
01:19:16,480 --> 01:19:19,120
and the home network just has a gua

2015
01:19:19,120 --> 01:19:21,600
and it got the gua from the ce router

2016
01:19:21,600 --> 01:19:23,040
and there's a host on the home network

2017
01:19:23,040 --> 01:19:25,760
that has the gua configured

2018
01:19:25,760 --> 01:19:26,719
so

2019
01:19:26,719 --> 01:19:29,920
uh on this in this configuration the

2020
01:19:29,920 --> 01:19:31,520
uh the router

2021
01:19:31,520 --> 01:19:33,840
the internal router is advertising

2022
01:19:33,840 --> 01:19:35,280
reachability

2023
01:19:35,280 --> 01:19:40,000
to the fd12 colon 3456 ula

2024
01:19:40,000 --> 01:19:41,120
using a

2025
01:19:41,120 --> 01:19:43,760
router advertisement and host one sees

2026
01:19:43,760 --> 01:19:44,719
that

2027
01:19:44,719 --> 01:19:46,480
and cu router does not see that because

2028
01:19:46,480 --> 01:19:48,320
cu router is a router and routers don't

2029
01:19:48,320 --> 01:19:51,360
listen to router advertisements um

2030
01:19:51,360 --> 01:19:54,400
so next slide

2031
01:19:54,400 --> 01:19:56,000
so when we try to send a packet from

2032
01:19:56,000 --> 01:19:57,360
host one to host two this is what

2033
01:19:57,360 --> 01:19:58,320
happens

2034
01:19:58,320 --> 01:20:01,280
the source address selection chooses

2035
01:20:01,280 --> 01:20:04,320
2001 oc-001 because that's the only

2036
01:20:04,320 --> 01:20:05,280
choice

2037
01:20:05,280 --> 01:20:08,559
it sends it uh

2038
01:20:08,639 --> 01:20:10,159
actually it sends it to the it sends it

2039
01:20:10,159 --> 01:20:13,760
to the internal router uh next slide

2040
01:20:13,760 --> 01:20:15,679
uh it sends it to the to the internal

2041
01:20:15,679 --> 01:20:17,280
router based on the router advertisement

2042
01:20:17,280 --> 01:20:19,760
so so actually the ce router that's a

2043
01:20:19,760 --> 01:20:22,960
mistake um next slide

2044
01:20:22,960 --> 01:20:24,239
the internal router forwards this to

2045
01:20:24,239 --> 01:20:25,760
host two

2046
01:20:25,760 --> 01:20:27,679
next slide

2047
01:20:27,679 --> 01:20:30,080
post two composes a reply and sends it

2048
01:20:30,080 --> 01:20:31,920
back to the source address that was

2049
01:20:31,920 --> 01:20:32,960
selected

2050
01:20:32,960 --> 01:20:34,639
uh next slide

2051
01:20:34,639 --> 01:20:36,400
uh

2052
01:20:36,400 --> 01:20:37,840
now uh

2053
01:20:37,840 --> 01:20:40,159
probably so so the the the internal

2054
01:20:40,159 --> 01:20:42,639
router may have actually been configured

2055
01:20:42,639 --> 01:20:45,280
to have a static route to uh to the gua

2056
01:20:45,280 --> 01:20:46,880
or it may just send it to the ce router

2057
01:20:46,880 --> 01:20:48,159
because that's the default route either

2058
01:20:48,159 --> 01:20:52,159
way it works right c router next slide

2059
01:20:52,159 --> 01:20:54,080
uh the c router would send it to host

2060
01:20:54,080 --> 01:20:55,679
one or or maybe the internal router

2061
01:20:55,679 --> 01:20:56,880
would send host one either way this

2062
01:20:56,880 --> 01:20:59,520
communication all just works right

2063
01:20:59,520 --> 01:21:00,880
we don't we don't have any kind of

2064
01:21:00,880 --> 01:21:02,480
routing protocol running in the network

2065
01:21:02,480 --> 01:21:04,960
c router and router are not talking to

2066
01:21:04,960 --> 01:21:06,239
each other this is all statically

2067
01:21:06,239 --> 01:21:08,639
configured but it just works

2068
01:21:08,639 --> 01:21:10,480
and it's a reasonable thing that you

2069
01:21:10,480 --> 01:21:11,920
would expect somebody

2070
01:21:11,920 --> 01:21:16,000
to do and expect to work next slide

2071
01:21:16,000 --> 01:21:17,520
okay now

2072
01:21:17,520 --> 01:21:20,159
uh imagine that you add a stub router to

2073
01:21:20,159 --> 01:21:21,280
this network

2074
01:21:21,280 --> 01:21:22,320
um

2075
01:21:22,320 --> 01:21:24,639
and the stub router advertises another

2076
01:21:24,639 --> 01:21:25,920
ula

2077
01:21:25,920 --> 01:21:27,840
on the home network link not the

2078
01:21:27,840 --> 01:21:29,199
internal network but the home network

2079
01:21:29,199 --> 01:21:30,000
link

2080
01:21:30,000 --> 01:21:30,960
okay

2081
01:21:30,960 --> 01:21:33,920
so now host one has two addresses it has

2082
01:21:33,920 --> 01:21:38,880
the gua and it has a ula next slide

2083
01:21:38,880 --> 01:21:40,960
okay so host one wants to communicate

2084
01:21:40,960 --> 01:21:42,639
with host two

2085
01:21:42,639 --> 01:21:44,960
it still knows the address of host two

2086
01:21:44,960 --> 01:21:47,520
and so it sends us in packet to host two

2087
01:21:47,520 --> 01:21:50,080
next slide

2088
01:21:50,320 --> 01:21:52,000
ce router knows how to get to host two

2089
01:21:52,000 --> 01:21:53,440
we're assuming so

2090
01:21:53,440 --> 01:21:55,440
it's and it forwards that packet to the

2091
01:21:55,440 --> 01:21:58,320
internal router next slide

2092
01:21:58,320 --> 01:21:59,840
the internal router sends it host two

2093
01:21:59,840 --> 01:22:03,280
that's all fine next slide

2094
01:22:03,360 --> 01:22:05,840
now uh i think i skipped a step here but

2095
01:22:05,840 --> 01:22:07,679
anyway the the host two sends it back to

2096
01:22:07,679 --> 01:22:08,480
the

2097
01:22:08,480 --> 01:22:10,800
to the uh

2098
01:22:10,800 --> 01:22:13,280
the address that host one selected

2099
01:22:13,280 --> 01:22:14,080
um

2100
01:22:14,080 --> 01:22:16,560
next slide

2101
01:22:16,560 --> 01:22:18,719
and cu router very sensibly says i don't

2102
01:22:18,719 --> 01:22:20,239
know what that address is i guess i'll

2103
01:22:20,239 --> 01:22:21,440
just use the default route and it sends

2104
01:22:21,440 --> 01:22:22,880
it to the internet or hopefully it

2105
01:22:22,880 --> 01:22:27,199
filters it but let's be real here um so

2106
01:22:27,199 --> 01:22:29,840
uh so basically this fails and now all

2107
01:22:29,840 --> 01:22:32,159
of a sudden because i've added this new

2108
01:22:32,159 --> 01:22:34,239
router that we see on the sort of on the

2109
01:22:34,239 --> 01:22:35,679
right on the home network because i've

2110
01:22:35,679 --> 01:22:36,960
added this new router which is doing

2111
01:22:36,960 --> 01:22:38,719
something completely legitimate it's

2112
01:22:38,719 --> 01:22:40,800
average just advertising a pio option

2113
01:22:40,800 --> 01:22:42,560
with a new ula in it

2114
01:22:42,560 --> 01:22:44,239
suddenly the whole network configuration

2115
01:22:44,239 --> 01:22:45,600
is broken

2116
01:22:45,600 --> 01:22:46,800
um

2117
01:22:46,800 --> 01:22:49,760
so next slide

2118
01:22:50,639 --> 01:22:53,600
so uh so the problem here if we want to

2119
01:22:53,600 --> 01:22:55,040
agree that it's a problem and the reason

2120
01:22:55,040 --> 01:22:56,320
i'm presenting this is because i want

2121
01:22:56,320 --> 01:22:57,600
you guys to know

2122
01:22:57,600 --> 01:22:58,960
what i saw and

2123
01:22:58,960 --> 01:23:00,400
i ideally this working group would

2124
01:23:00,400 --> 01:23:01,760
decide whether they think this is a

2125
01:23:01,760 --> 01:23:04,239
problem or not right so uh so the

2126
01:23:04,239 --> 01:23:05,920
problem that i see here is that because

2127
01:23:05,920 --> 01:23:09,360
we have two dissimilar ulas

2128
01:23:09,360 --> 01:23:10,719
source address selection makes a

2129
01:23:10,719 --> 01:23:13,040
decision that winds up breaking things

2130
01:23:13,040 --> 01:23:14,639
and the decision it made was a perfectly

2131
01:23:14,639 --> 01:23:16,239
sensible decision

2132
01:23:16,239 --> 01:23:17,679
the configuration here i think is

2133
01:23:17,679 --> 01:23:19,040
perfectly sensible the statically

2134
01:23:19,040 --> 01:23:21,440
configured router is perfectly sensible

2135
01:23:21,440 --> 01:23:23,360
having another router advertise a ula

2136
01:23:23,360 --> 01:23:26,000
using an ra is perfectly sensible

2137
01:23:26,000 --> 01:23:27,840
and yet it all blows up as soon as we do

2138
01:23:27,840 --> 01:23:30,000
that so

2139
01:23:30,000 --> 01:23:31,920
should we do something about this next

2140
01:23:31,920 --> 01:23:34,920
slide

2141
01:23:36,000 --> 01:23:38,800
okay so uh

2142
01:23:38,800 --> 01:23:40,560
so one one way that we can think about

2143
01:23:40,560 --> 01:23:42,239
this is that is that

2144
01:23:42,239 --> 01:23:44,159
um automatic behavior shouldn't break

2145
01:23:44,159 --> 01:23:46,840
things so uh so when something like this

2146
01:23:46,840 --> 01:23:48,880
happens we should make sure that it

2147
01:23:48,880 --> 01:23:50,800
works correctly um

2148
01:23:50,800 --> 01:23:51,679
and

2149
01:23:51,679 --> 01:23:53,199
the way that we would make sure it works

2150
01:23:53,199 --> 01:23:54,960
correctly one one way would be to have

2151
01:23:54,960 --> 01:23:57,120
routers listen to ras which i suspect

2152
01:23:57,120 --> 01:23:59,040
would get a big boo

2153
01:23:59,040 --> 01:24:01,600
the other way is to

2154
01:24:01,600 --> 01:24:03,600
to have source address selection

2155
01:24:03,600 --> 01:24:06,239
not treat ulas that have foreign

2156
01:24:06,239 --> 01:24:09,920
global uh global identifiers as being

2157
01:24:09,920 --> 01:24:10,960
close

2158
01:24:10,960 --> 01:24:12,159
um

2159
01:24:12,159 --> 01:24:14,080
which it currently does just because of

2160
01:24:14,080 --> 01:24:16,800
of shortest match right

2161
01:24:16,800 --> 01:24:18,560
so if we care about this then we

2162
01:24:18,560 --> 01:24:19,600
probably

2163
01:24:19,600 --> 01:24:21,600
need to specify a little bit of

2164
01:24:21,600 --> 01:24:23,920
additional detail about how to deal with

2165
01:24:23,920 --> 01:24:25,520
source address selection in the presence

2166
01:24:25,520 --> 01:24:28,080
of foreign ulas

2167
01:24:28,080 --> 01:24:29,679
the other way of thinking about this is

2168
01:24:29,679 --> 01:24:31,040
well this was a manually configured

2169
01:24:31,040 --> 01:24:33,120
network there wasn't any automatic

2170
01:24:33,120 --> 01:24:35,199
protocol happening if we'd been running

2171
01:24:35,199 --> 01:24:36,560
a routing protocol i don't think this

2172
01:24:36,560 --> 01:24:38,159
would have happened because

2173
01:24:38,159 --> 01:24:39,360
presumably

2174
01:24:39,360 --> 01:24:40,639
although you know maybe it would have

2175
01:24:40,639 --> 01:24:41,840
happened because

2176
01:24:41,840 --> 01:24:43,120
just because we're running a routing

2177
01:24:43,120 --> 01:24:44,400
protocol doesn't mean that when you plug

2178
01:24:44,400 --> 01:24:45,920
another network another device into the

2179
01:24:45,920 --> 01:24:46,800
network

2180
01:24:46,800 --> 01:24:48,080
it's going to be participating in that

2181
01:24:48,080 --> 01:24:49,440
routing protocol

2182
01:24:49,440 --> 01:24:50,639
so

2183
01:24:50,639 --> 01:24:52,400
but the main problem is like the person

2184
01:24:52,400 --> 01:24:54,000
that did this is a very very

2185
01:24:54,000 --> 01:24:55,920
knowledgeable networking guy

2186
01:24:55,920 --> 01:24:56,800
and

2187
01:24:56,800 --> 01:24:58,960
he had no idea why it broke

2188
01:24:58,960 --> 01:25:00,719
so

2189
01:25:00,719 --> 01:25:02,480
i kind of think it might be nice to fix

2190
01:25:02,480 --> 01:25:04,480
this but

2191
01:25:04,480 --> 01:25:05,920
you know i've had some pushback saying

2192
01:25:05,920 --> 01:25:07,440
no so i'm just curious what people think

2193
01:25:07,440 --> 01:25:10,159
about this problem

2194
01:25:11,440 --> 01:25:14,719
so michael you're first in the queue

2195
01:25:14,719 --> 01:25:16,719
michael richardson um can you go back a

2196
01:25:16,719 --> 01:25:19,120
bunch of slides i don't know where but

2197
01:25:19,120 --> 01:25:20,239
um

2198
01:25:20,239 --> 01:25:23,440
before the ula router was there maybe

2199
01:25:23,440 --> 01:25:24,719
it doesn't really matter in the end

2200
01:25:24,719 --> 01:25:26,480
because the picture is good so i

2201
01:25:26,480 --> 01:25:27,840
actually don't understand how it worked

2202
01:25:27,840 --> 01:25:29,199
in the first place

2203
01:25:29,199 --> 01:25:30,880
okay and that's that's actually actually

2204
01:25:30,880 --> 01:25:33,120
i think is fundamental because because i

2205
01:25:33,120 --> 01:25:34,400
don't understand how it worked in the

2206
01:25:34,400 --> 01:25:37,520
first place i as far as i can see it

2207
01:25:37,520 --> 01:25:40,000
should all have been broken always not

2208
01:25:40,000 --> 01:25:42,719
just when you added the ula router

2209
01:25:42,719 --> 01:25:43,520
okay

2210
01:25:43,520 --> 01:25:45,120
and and i think it's good if it's

2211
01:25:45,120 --> 01:25:46,880
consistently broken

2212
01:25:46,880 --> 01:25:48,960
then we can agree that there's a problem

2213
01:25:48,960 --> 01:25:50,960
but the problem might be bigger than

2214
01:25:50,960 --> 01:25:53,440
just adding the ula router yeah okay so

2215
01:25:53,440 --> 01:25:55,360
first thing i want to notice note is

2216
01:25:55,360 --> 01:25:57,280
that ce router is not compliant to

2217
01:25:57,280 --> 01:26:00,320
whatever it's called now 7204

2218
01:26:00,320 --> 01:26:02,639
i think it is 68

2219
01:26:02,639 --> 01:26:03,760
uh

2220
01:26:03,760 --> 01:26:07,840
the the the cpe ipv6 cpe device

2221
01:26:07,840 --> 01:26:10,320
requirements okay okay because it's not

2222
01:26:10,320 --> 01:26:13,440
advertising ula on the home network

2223
01:26:13,440 --> 01:26:15,040
it's always supposed to be advertising

2224
01:26:15,040 --> 01:26:17,520
ula on the home network so that host one

2225
01:26:17,520 --> 01:26:20,480
should always have had a ula

2226
01:26:20,480 --> 01:26:22,960
there and i think if what you're telling

2227
01:26:22,960 --> 01:26:26,320
me is is all correct then the host would

2228
01:26:26,320 --> 01:26:28,960
always never have picked this it's it's

2229
01:26:28,960 --> 01:26:30,960
uh it's um

2230
01:26:30,960 --> 01:26:34,639
gua to talk to host two right okay so i

2231
01:26:34,639 --> 01:26:35,920
don't know why that didn't happen but

2232
01:26:35,920 --> 01:26:38,000
you can turn that off as it is loud but

2233
01:26:38,000 --> 01:26:40,000
it's supposed to be always there so what

2234
01:26:40,000 --> 01:26:42,080
that really means is that there's always

2235
01:26:42,080 --> 01:26:45,120
a ula stub device supposed to always be

2236
01:26:45,120 --> 01:26:46,880
there and whatever is broken should

2237
01:26:46,880 --> 01:26:49,679
always be broken uh for the situation

2238
01:26:49,679 --> 01:26:52,320
well okay that there that's that's not a

2239
01:26:52,320 --> 01:26:54,000
completely invalid statement but i'll

2240
01:26:54,000 --> 01:26:56,000
point something out here which is

2241
01:26:56,000 --> 01:26:56,960
um

2242
01:26:56,960 --> 01:26:58,480
if i were

2243
01:26:58,480 --> 01:26:59,920
a

2244
01:26:59,920 --> 01:27:02,080
naive but reasonably knowledgeable

2245
01:27:02,080 --> 01:27:04,560
network operator of my home network

2246
01:27:04,560 --> 01:27:07,040
uh and the ce router were advertising a

2247
01:27:07,040 --> 01:27:09,360
ula then the ula that i would use on

2248
01:27:09,360 --> 01:27:11,840
this internal network ula would be

2249
01:27:11,840 --> 01:27:13,520
the uh

2250
01:27:13,520 --> 01:27:16,000
the same ula right why

2251
01:27:16,000 --> 01:27:17,679
you'd randomly they both should randomly

2252
01:27:17,679 --> 01:27:19,920
produce one well okay so so let's say

2253
01:27:19,920 --> 01:27:21,360
let's say they both randomly produce one

2254
01:27:21,360 --> 01:27:22,560
well now

2255
01:27:22,560 --> 01:27:23,600
um

2256
01:27:23,600 --> 01:27:25,199
and then suppose i configure the ce

2257
01:27:25,199 --> 01:27:26,159
router

2258
01:27:26,159 --> 01:27:27,760
to forward

2259
01:27:27,760 --> 01:27:30,320
to that yo to that address is that what

2260
01:27:30,320 --> 01:27:31,679
happened here because i'm really unclear

2261
01:27:31,679 --> 01:27:33,600
about how the how the communications

2262
01:27:33,600 --> 01:27:35,440
from host one to host two how did i i

2263
01:27:35,440 --> 01:27:37,199
don't understand how it got it found

2264
01:27:37,199 --> 01:27:40,480
about that fd12 ula right so there's two

2265
01:27:40,480 --> 01:27:42,800
ways that that could work right one is

2266
01:27:42,800 --> 01:27:46,400
the the router is advertising uh

2267
01:27:46,400 --> 01:27:47,600
an rio

2268
01:27:47,600 --> 01:27:49,920
yes to that ula yes that's one way that

2269
01:27:49,920 --> 01:27:51,600
could work which means that host one saw

2270
01:27:51,600 --> 01:27:53,199
it because it listened to that it didn't

2271
01:27:53,199 --> 01:27:54,880
configure an address in it because it's

2272
01:27:54,880 --> 01:27:57,440
not on link etc blah blah blah right but

2273
01:27:57,440 --> 01:28:00,320
it saw that yeah so if you go forward uh

2274
01:28:00,320 --> 01:28:02,639
olay i think you need to add to like

2275
01:28:02,639 --> 01:28:04,159
three or something forward where we have

2276
01:28:04,159 --> 01:28:06,960
the ula router

2277
01:28:06,960 --> 01:28:08,960
see there we are okay

2278
01:28:08,960 --> 01:28:13,159
uh one more maybe

2279
01:28:14,000 --> 01:28:15,199
oh

2280
01:28:15,199 --> 01:28:18,480
it's there's a bit of a delay yeah

2281
01:28:18,480 --> 01:28:19,679
go up to the

2282
01:28:19,679 --> 01:28:21,840
out to the around the world once

2283
01:28:21,840 --> 01:28:24,480
before we get the result um

2284
01:28:24,480 --> 01:28:27,840
why why did host one send it to the ce

2285
01:28:27,840 --> 01:28:29,040
router

2286
01:28:29,040 --> 01:28:32,480
since it knows about fd12 oh yeah that

2287
01:28:32,480 --> 01:28:34,960
one but but why did it send it to the ce

2288
01:28:34,960 --> 01:28:37,760
router here yeah so so there's two ways

2289
01:28:37,760 --> 01:28:40,239
this can work one is the cu router is

2290
01:28:40,239 --> 01:28:42,000
statically configured with a route to

2291
01:28:42,000 --> 01:28:43,760
that network and the

2292
01:28:43,760 --> 01:28:45,040
the

2293
01:28:45,040 --> 01:28:46,159
intermediate router which has

2294
01:28:46,159 --> 01:28:49,120
disappeared is not advertising an ra

2295
01:28:49,120 --> 01:28:51,840
right and in that case the default route

2296
01:28:51,840 --> 01:28:53,120
would carry it to the cu router so your

2297
01:28:53,120 --> 01:28:54,800
router would know that it needs to send

2298
01:28:54,800 --> 01:28:56,080
it to the internal router it wouldn't

2299
01:28:56,080 --> 01:28:57,840
send it out to the internet that at all

2300
01:28:57,840 --> 01:28:59,679
anyway it would in that case it wouldn't

2301
01:28:59,679 --> 01:29:01,199
send it to the internet because it has a

2302
01:29:01,199 --> 01:29:03,120
manually configured route

2303
01:29:03,120 --> 01:29:04,719
to the internal right so we agree that

2304
01:29:04,719 --> 01:29:06,880
if the ce router has been clued into the

2305
01:29:06,880 --> 01:29:09,520
other network that everything is is good

2306
01:29:09,520 --> 01:29:10,960
and i agree with you that that shouldn't

2307
01:29:10,960 --> 01:29:12,800
necessarily be the case that device

2308
01:29:12,800 --> 01:29:15,440
might be uh belong to the isp it has no

2309
01:29:15,440 --> 01:29:17,040
management interfaces that's why i put

2310
01:29:17,040 --> 01:29:18,400
the other router in the first place i

2311
01:29:18,400 --> 01:29:21,199
want to do something you know whatever

2312
01:29:21,199 --> 01:29:22,800
so but i don't understand why the host

2313
01:29:22,800 --> 01:29:23,760
one

2314
01:29:23,760 --> 01:29:26,000
sent it to the ce router when in the

2315
01:29:26,000 --> 01:29:28,320
previous case well so so i think i'm

2316
01:29:28,320 --> 01:29:30,000
picking my slide and not actually asking

2317
01:29:30,000 --> 01:29:31,920
a real question here okay right the

2318
01:29:31,920 --> 01:29:33,600
slide this i think it may have been a

2319
01:29:33,600 --> 01:29:35,760
mistake that i that i said that the host

2320
01:29:35,760 --> 01:29:37,520
sent it to the cu router i don't

2321
01:29:37,520 --> 01:29:38,880
actually know the detail of that but

2322
01:29:38,880 --> 01:29:40,080
there's so that's why i'm saying there's

2323
01:29:40,080 --> 01:29:41,360
two ways it could have worked one is the

2324
01:29:41,360 --> 01:29:42,719
ce router knows how to get to the

2325
01:29:42,719 --> 01:29:44,080
internal network and the other is that

2326
01:29:44,080 --> 01:29:45,360
the internal network router is

2327
01:29:45,360 --> 01:29:47,440
advertising the network either way the

2328
01:29:47,440 --> 01:29:50,159
same thing happens

2329
01:29:50,159 --> 01:29:51,760
well i disagree that's just the point

2330
01:29:51,760 --> 01:29:53,600
i'm trying to say is that i i'm not

2331
01:29:53,600 --> 01:29:56,560
convinced there's a a problem

2332
01:29:56,560 --> 01:29:57,520
okay

2333
01:29:57,520 --> 01:29:58,320
that

2334
01:29:58,320 --> 01:29:59,440
um

2335
01:29:59,440 --> 01:30:02,360
that isn't caused by a series of

2336
01:30:02,360 --> 01:30:05,120
misconfigurations not just one that

2337
01:30:05,120 --> 01:30:07,600
the the guy manually configured that

2338
01:30:07,600 --> 01:30:08,800
because you asserted you did it

2339
01:30:08,800 --> 01:30:10,239
correctly and i agree with you he did it

2340
01:30:10,239 --> 01:30:12,320
correctly okay so i'm not convinced that

2341
01:30:12,320 --> 01:30:14,320
the behavior of the other devices on the

2342
01:30:14,320 --> 01:30:16,080
network is

2343
01:30:16,080 --> 01:30:17,760
correct

2344
01:30:17,760 --> 01:30:18,960
um that's why when we have this

2345
01:30:18,960 --> 01:30:21,120
conversation i tried to try to really to

2346
01:30:21,120 --> 01:30:22,719
draw your diagram so that i could be

2347
01:30:22,719 --> 01:30:24,880
really sure what the problem was right

2348
01:30:24,880 --> 01:30:25,760
okay

2349
01:30:25,760 --> 01:30:28,159
and i i think i think

2350
01:30:28,159 --> 01:30:30,480
i think actually in the end i don't

2351
01:30:30,480 --> 01:30:32,800
object to making the source address

2352
01:30:32,800 --> 01:30:35,520
selection rules more sophisticated

2353
01:30:35,520 --> 01:30:37,360
because i think that they cover cases

2354
01:30:37,360 --> 01:30:38,800
that are

2355
01:30:38,800 --> 01:30:42,400
harder to explain with one diagram

2356
01:30:42,400 --> 01:30:44,800
i just think that we have to articulate

2357
01:30:44,800 --> 01:30:47,120
why we're doing it better

2358
01:30:47,120 --> 01:30:50,639
so that um and this this case has to be

2359
01:30:50,639 --> 01:30:51,920
clearly

2360
01:30:51,920 --> 01:30:53,040
uh

2361
01:30:53,040 --> 01:30:55,440
in clearly a problem so that the

2362
01:30:55,440 --> 01:30:57,520
solution is clearly motivated otherwise

2363
01:30:57,520 --> 01:30:59,600
people are going to come back and say

2364
01:30:59,600 --> 01:31:01,600
well but but but but like i'm doing

2365
01:31:01,600 --> 01:31:02,480
right now

2366
01:31:02,480 --> 01:31:03,280
okay

2367
01:31:03,280 --> 01:31:04,080
and

2368
01:31:04,080 --> 01:31:06,320
and that also may mean that when they

2369
01:31:06,320 --> 01:31:07,440
test it

2370
01:31:07,440 --> 01:31:09,280
their code in the field

2371
01:31:09,280 --> 01:31:11,280
they'll set things up wrong

2372
01:31:11,280 --> 01:31:13,040
and either it won't work and they'll

2373
01:31:13,040 --> 01:31:15,440
complain that we're idiots or it will

2374
01:31:15,440 --> 01:31:18,400
work but their code is wrong yeah

2375
01:31:18,400 --> 01:31:20,639
okay and they didn't actually implement

2376
01:31:20,639 --> 01:31:22,480
it properly right so so i definitely

2377
01:31:22,480 --> 01:31:24,159
agree that we should get the get the the

2378
01:31:24,159 --> 01:31:25,600
problem statement more crisp and i

2379
01:31:25,600 --> 01:31:28,400
apologize for for uh for being unclear

2380
01:31:28,400 --> 01:31:30,400
on the slide and i just wanna just for

2381
01:31:30,400 --> 01:31:32,560
the room i wanna i want i know what ted

2382
01:31:32,560 --> 01:31:34,480
is doing with the ula router and i on

2383
01:31:34,480 --> 01:31:35,760
the stub network and that's really

2384
01:31:35,760 --> 01:31:37,760
really you know i think really important

2385
01:31:37,760 --> 01:31:39,920
but that also could be

2386
01:31:39,920 --> 01:31:42,639
another ce router yes whose internet

2387
01:31:42,639 --> 01:31:44,639
link is broken right now right and the

2388
01:31:44,639 --> 01:31:46,080
reason i had two of them in the first

2389
01:31:46,080 --> 01:31:46,880
place

2390
01:31:46,880 --> 01:31:48,080
is because there are both of them are

2391
01:31:48,080 --> 01:31:50,719
not that reliable right and i know

2392
01:31:50,719 --> 01:31:53,760
recently had a 24 hour outage that

2393
01:31:53,760 --> 01:31:57,520
uh couldn't control right okay we have

2394
01:31:57,520 --> 01:31:58,639
um

2395
01:31:58,639 --> 01:32:01,360
two more people in the queue

2396
01:32:01,360 --> 01:32:02,719
martin

2397
01:32:02,719 --> 01:32:04,000
hi i'm martin

2398
01:32:04,000 --> 01:32:06,800
i also want to say that it's probably a

2399
01:32:06,800 --> 01:32:09,760
configuration uh issue because

2400
01:32:09,760 --> 01:32:13,520
the the sierra should have a ula

2401
01:32:13,520 --> 01:32:15,440
and probably the internal network should

2402
01:32:15,440 --> 01:32:17,440
be part of the some

2403
01:32:17,440 --> 01:32:20,480
bigger ula prefix

2404
01:32:20,480 --> 01:32:22,560
well so so i don't think that's actually

2405
01:32:22,560 --> 01:32:24,880
an interesting criticism though because

2406
01:32:24,880 --> 01:32:26,639
um this is a perfectly valid

2407
01:32:26,639 --> 01:32:28,719
configuration for a network whether or

2408
01:32:28,719 --> 01:32:30,560
not this is a cu router is not really

2409
01:32:30,560 --> 01:32:32,639
the point the point is that it's

2410
01:32:32,639 --> 01:32:34,159
entirely possible for something like

2411
01:32:34,159 --> 01:32:36,800
this to happen and if it does happen

2412
01:32:36,800 --> 01:32:39,040
uh do we care if the network breaks or

2413
01:32:39,040 --> 01:32:42,880
not um yeah but uh the ceo should uh

2414
01:32:42,880 --> 01:32:46,560
as stated before should have a ula also

2415
01:32:46,560 --> 01:32:48,159
set up yeah i get that so what if it's

2416
01:32:48,159 --> 01:32:49,679
not a ceo router what if what if this is

2417
01:32:49,679 --> 01:32:51,840
a what if this is in a corporate setting

2418
01:32:51,840 --> 01:32:53,440
and somebody plugs one of these devices

2419
01:32:53,440 --> 01:32:55,760
into the into the wire

2420
01:32:55,760 --> 01:32:57,520
right now i don't think

2421
01:32:57,520 --> 01:33:00,320
it's uh uh something that should happen

2422
01:33:00,320 --> 01:33:03,440
or uh should uh

2423
01:33:03,440 --> 01:33:05,840
yeah well so what i'm saying here is

2424
01:33:05,840 --> 01:33:07,440
that is that suppose you set up a

2425
01:33:07,440 --> 01:33:08,719
network

2426
01:33:08,719 --> 01:33:11,760
like in a in an enterprise setting you

2427
01:33:11,760 --> 01:33:14,000
set up a network where you have a router

2428
01:33:14,000 --> 01:33:15,600
you have an internal router everybody

2429
01:33:15,600 --> 01:33:16,880
configured it right everybody thought

2430
01:33:16,880 --> 01:33:18,560
they were doing the right thing and now

2431
01:33:18,560 --> 01:33:19,920
somebody plugs a new device into the

2432
01:33:19,920 --> 01:33:21,280
network and the network suddenly stops

2433
01:33:21,280 --> 01:33:23,920
working is that okay

2434
01:33:23,920 --> 01:33:26,800
uh yeah i would say uh it's in this case

2435
01:33:26,800 --> 01:33:29,199
it's okay because you should have put

2436
01:33:29,199 --> 01:33:31,040
their ula

2437
01:33:31,040 --> 01:33:33,360
which ula

2438
01:33:33,360 --> 01:33:36,480
in this home network set magnet uh

2439
01:33:36,480 --> 01:33:38,560
so so so there should have been a ua on

2440
01:33:38,560 --> 01:33:40,880
this wire here

2441
01:33:40,880 --> 01:33:42,560
can't hear you when you walk away from

2442
01:33:42,560 --> 01:33:44,560
the mic so there should have been a ula

2443
01:33:44,560 --> 01:33:46,239
coming from the ce router and therefore

2444
01:33:46,239 --> 01:33:48,080
any problem that occurs

2445
01:33:48,080 --> 01:33:50,239
that doesn't that's the result of the cu

2446
01:33:50,239 --> 01:33:52,719
router not advertising a ula is not a

2447
01:33:52,719 --> 01:33:53,840
problem

2448
01:33:53,840 --> 01:33:55,760
i would say so okay so what if it's not

2449
01:33:55,760 --> 01:33:58,320
a cu router

2450
01:33:58,320 --> 01:34:00,239
yeah

2451
01:34:00,239 --> 01:34:01,280
that's i don't think this is a

2452
01:34:01,280 --> 01:34:02,480
legitimate

2453
01:34:02,480 --> 01:34:03,760
like like

2454
01:34:03,760 --> 01:34:05,120
this is something that can happen

2455
01:34:05,120 --> 01:34:07,840
without anybody doing anything incorrect

2456
01:34:07,840 --> 01:34:09,679
right right let's go we have two more

2457
01:34:09,679 --> 01:34:12,480
people in the queue

2458
01:34:14,320 --> 01:34:16,960
lorenzo

2459
01:34:17,280 --> 01:34:20,639
uh yeah learns a clearly i mean

2460
01:34:20,960 --> 01:34:22,719
this is why ula is a terrible idea in

2461
01:34:22,719 --> 01:34:24,880
general but i think

2462
01:34:24,880 --> 01:34:26,159
so

2463
01:34:26,159 --> 01:34:27,760
i don't to be honest i don't see any

2464
01:34:27,760 --> 01:34:29,679
good answer here other than like have to

2465
01:34:29,679 --> 01:34:32,080
have the reader listen to ras and the

2466
01:34:32,080 --> 01:34:34,159
reason for that is if we change the the

2467
01:34:34,159 --> 01:34:36,159
source address selection rules

2468
01:34:36,159 --> 01:34:38,880
to um basically say that ula is scoped

2469
01:34:38,880 --> 01:34:40,320
to slash 48

2470
01:34:40,320 --> 01:34:41,520
first of all we'll never get that

2471
01:34:41,520 --> 01:34:43,040
through because people believe that ulas

2472
01:34:43,040 --> 01:34:45,440
are are global but they're not they're

2473
01:34:45,440 --> 01:34:48,239
actually just not 10 right so we'll have

2474
01:34:48,239 --> 01:34:49,760
it like it'll be impossible to actually

2475
01:34:49,760 --> 01:34:51,119
change that

2476
01:34:51,119 --> 01:34:52,800
but even if we did

2477
01:34:52,800 --> 01:34:53,679
we're going to break a bunch of

2478
01:34:53,679 --> 01:34:55,600
legitimate use cases where networks have

2479
01:34:55,600 --> 01:34:57,679
separate listing qlas and they rely on

2480
01:34:57,679 --> 01:35:00,080
this behavior to work so that's i think

2481
01:35:00,080 --> 01:35:02,239
that's an onstarter okay and so in

2482
01:35:02,239 --> 01:35:04,560
practice i don't see that it

2483
01:35:04,560 --> 01:35:06,800
to me it feels like if we expect it to

2484
01:35:06,800 --> 01:35:09,679
work that you plug in the ul router and

2485
01:35:09,679 --> 01:35:12,400
it sends an ra and it sends a pio and an

2486
01:35:12,400 --> 01:35:15,760
rio for itself if we want that to work

2487
01:35:15,760 --> 01:35:17,440
then we want other when then we need

2488
01:35:17,440 --> 01:35:18,960
other routers on the network to listen

2489
01:35:18,960 --> 01:35:20,880
to that right and i think that's the

2490
01:35:20,880 --> 01:35:22,560
only thing and it's not true that

2491
01:35:22,560 --> 01:35:24,080
rooters don't listen to arrays because

2492
01:35:24,080 --> 01:35:25,679
the c router at the top there which

2493
01:35:25,679 --> 01:35:27,600
ostensibly shouldn't listen to our a's

2494
01:35:27,600 --> 01:35:30,000
got its default route via varnra so it

2495
01:35:30,000 --> 01:35:32,239
can't be like that that sacred that it's

2496
01:35:32,239 --> 01:35:34,639
not allowed to do it yeah um it's very

2497
01:35:34,639 --> 01:35:37,119
difficult to implement though because

2498
01:35:37,119 --> 01:35:38,960
for the linux boxes that these things

2499
01:35:38,960 --> 01:35:40,880
definitely generally use

2500
01:35:40,880 --> 01:35:41,760
um

2501
01:35:41,760 --> 01:35:44,159
you you have no easy way to filter out

2502
01:35:44,159 --> 01:35:45,760
certain routes

2503
01:35:45,760 --> 01:35:46,880
um

2504
01:35:46,880 --> 01:35:49,119
you can't say only accept ula

2505
01:35:49,119 --> 01:35:51,119
in fact there's you know we

2506
01:35:51,119 --> 01:35:52,320
the

2507
01:35:52,320 --> 01:35:53,760
the connected home people would like us

2508
01:35:53,760 --> 01:35:55,040
to do that but we don't know how to do

2509
01:35:55,040 --> 01:35:58,320
that so okay we have several more people

2510
01:35:58,320 --> 01:35:59,199
thank you

2511
01:35:59,199 --> 01:36:01,280
thank you we're going to close the queue

2512
01:36:01,280 --> 01:36:02,719
after eric

2513
01:36:02,719 --> 01:36:05,119
so ackermann can we do the insertion

2514
01:36:05,119 --> 01:36:09,360
before it was a tooling problem so if uh

2515
01:36:12,480 --> 01:36:14,719
sorry sorry i yeah this is this is real

2516
01:36:14,719 --> 01:36:17,199
quick this is melanie so so just ted

2517
01:36:17,199 --> 01:36:19,920
just one small comment about about

2518
01:36:19,920 --> 01:36:22,080
introducing or plugging a router into an

2519
01:36:22,080 --> 01:36:23,360
enterprise network and maybe this is

2520
01:36:23,360 --> 01:36:24,800
what mike was going to say too yeah

2521
01:36:24,800 --> 01:36:27,600
you're not doing that yeah no no no no

2522
01:36:27,600 --> 01:36:28,480
really no

2523
01:36:28,480 --> 01:36:30,159
no we're not doing it to your network

2524
01:36:30,159 --> 01:36:33,119
but no no no no no to almost any network

2525
01:36:33,119 --> 01:36:35,679
of interesting

2526
01:36:35,679 --> 01:36:37,760
any any soho network could be configured

2527
01:36:37,760 --> 01:36:38,719
this way

2528
01:36:38,719 --> 01:36:40,400
we'll do it to our own network which is

2529
01:36:40,400 --> 01:36:42,639
kind of what i was going to say

2530
01:36:42,639 --> 01:36:43,600
so

2531
01:36:43,600 --> 01:36:45,440
i think this is really good work good

2532
01:36:45,440 --> 01:36:47,600
finds here so thank you ted i'd like to

2533
01:36:47,600 --> 01:36:49,440
see this continued

2534
01:36:49,440 --> 01:36:50,840
nobody can hear me

2535
01:36:50,840 --> 01:36:54,159
um so so please do because i can see

2536
01:36:54,159 --> 01:36:56,719
this happening on our network and again

2537
01:36:56,719 --> 01:36:59,280
another dumb enterprise question is that

2538
01:36:59,280 --> 01:37:00,560
we think

2539
01:37:00,560 --> 01:37:02,639
when i talk to people that want to maybe

2540
01:37:02,639 --> 01:37:04,880
do this you list seem to be important to

2541
01:37:04,880 --> 01:37:07,280
them and there's levels of assumed

2542
01:37:07,280 --> 01:37:09,360
control and limitation that don't seem

2543
01:37:09,360 --> 01:37:11,440
to be applying here so yeah if you can

2544
01:37:11,440 --> 01:37:12,880
get that under control that would be

2545
01:37:12,880 --> 01:37:15,040
fantastic and one more thing you showed

2546
01:37:15,040 --> 01:37:16,719
one slide where

2547
01:37:16,719 --> 01:37:18,560
when the ce router was supposed to route

2548
01:37:18,560 --> 01:37:20,960
it over to house one host one it send it

2549
01:37:20,960 --> 01:37:22,719
up to the internet that concerns me too

2550
01:37:22,719 --> 01:37:24,320
so yeah well that shouldn't happen right

2551
01:37:24,320 --> 01:37:26,080
c router should not be forwarding ulas

2552
01:37:26,080 --> 01:37:27,280
to the internet but

2553
01:37:27,280 --> 01:37:28,560
i i think okay

2554
01:37:28,560 --> 01:37:30,719
but isn't there some definition issues i

2555
01:37:30,719 --> 01:37:32,719
think bob is working on this where we're

2556
01:37:32,719 --> 01:37:35,440
defining what the limited domain of a

2557
01:37:35,440 --> 01:37:37,840
eula is and that's not clear to me and

2558
01:37:37,840 --> 01:37:38,560
and

2559
01:37:38,560 --> 01:37:40,719
maybe that needs some work too right it

2560
01:37:40,719 --> 01:37:42,480
seems to me like there probably is an

2561
01:37:42,480 --> 01:37:44,239
ops document to write here so maybe this

2562
01:37:44,239 --> 01:37:45,840
isn't even a six-man problem this is a

2563
01:37:45,840 --> 01:37:48,320
v6 ops problem good stuff

2564
01:37:48,320 --> 01:37:52,080
okay jen and jen lincoln so i still need

2565
01:37:52,080 --> 01:37:53,760
to get my head around

2566
01:37:53,760 --> 01:37:55,840
how exactly this happened but i don't

2567
01:37:55,840 --> 01:37:56,960
think it's a

2568
01:37:56,960 --> 01:37:59,119
configuration issue i think what we did

2569
01:37:59,119 --> 01:38:00,560
in here is

2570
01:38:00,560 --> 01:38:03,679
is trying to use arrays

2571
01:38:03,679 --> 01:38:06,560
as a routine protocol like we're trying

2572
01:38:06,560 --> 01:38:09,600
to use nd surrounding protocol right so

2573
01:38:09,600 --> 01:38:11,920
i think if you want something like that

2574
01:38:11,920 --> 01:38:14,000
right we need to explore how to do it

2575
01:38:14,000 --> 01:38:15,679
right but i don't think changing default

2576
01:38:15,679 --> 01:38:17,920
address selection algorithm is the right

2577
01:38:17,920 --> 01:38:19,840
way to fix the particular topology

2578
01:38:19,840 --> 01:38:21,679
because i can come up with five other

2579
01:38:21,679 --> 01:38:23,760
different cases when you should not be

2580
01:38:23,760 --> 01:38:25,840
doing this so i agree this need to be

2581
01:38:25,840 --> 01:38:27,040
solved

2582
01:38:27,040 --> 01:38:30,159
uh i don't yet know how maybe array is

2583
01:38:30,159 --> 01:38:31,840
the right way of doing this maybe we

2584
01:38:31,840 --> 01:38:33,440
need something i don't know like what

2585
01:38:33,440 --> 01:38:35,840
home net was doing whatever but i i

2586
01:38:35,840 --> 01:38:38,880
disagree that like ula's particular case

2587
01:38:38,880 --> 01:38:40,239
is the right way of doing this because

2588
01:38:40,239 --> 01:38:42,080
actually it might not be ula necessary

2589
01:38:42,080 --> 01:38:43,679
right it might be something it might be

2590
01:38:43,679 --> 01:38:44,480
actually

2591
01:38:44,480 --> 01:38:46,880
legitimate like global unicast addresses

2592
01:38:46,880 --> 01:38:48,480
and i suspect you might have similar

2593
01:38:48,480 --> 01:38:52,719
problems yeah yeah yeah i think i i i i

2594
01:38:52,719 --> 01:38:54,239
this is why i brought this here because

2595
01:38:54,239 --> 01:38:55,920
i figured people would point out like

2596
01:38:55,920 --> 01:38:57,280
you know

2597
01:38:57,280 --> 01:38:58,960
stuff like this

2598
01:38:58,960 --> 01:39:01,679
okay eric

2599
01:39:02,719 --> 01:39:03,840
uh thank you

2600
01:39:03,840 --> 01:39:05,360
ted i just wanted to offer that i think

2601
01:39:05,360 --> 01:39:07,440
the this ula router that got added i

2602
01:39:07,440 --> 01:39:09,119
don't know what its function is i know

2603
01:39:09,119 --> 01:39:10,639
others do

2604
01:39:10,639 --> 01:39:12,000
i think it probably should advertise the

2605
01:39:12,000 --> 01:39:15,920
ula inside of a pvd io

2606
01:39:16,320 --> 01:39:17,600
it's a separate provisioning domain

2607
01:39:17,600 --> 01:39:19,760
within the home

2608
01:39:19,760 --> 01:39:22,719
uh and it's not

2609
01:39:23,440 --> 01:39:25,440
there's two ways to take advantage of

2610
01:39:25,440 --> 01:39:28,080
the pvd id

2611
01:39:28,080 --> 01:39:29,679
uh

2612
01:39:29,679 --> 01:39:32,159
depends on whether or not you've got um

2613
01:39:32,159 --> 01:39:33,600
a pvd

2614
01:39:33,600 --> 01:39:35,280
and system implementation i think i

2615
01:39:35,280 --> 01:39:38,000
think what you said is is probably true

2616
01:39:38,000 --> 01:39:39,760
in principle but if i were to do that

2617
01:39:39,760 --> 01:39:41,280
the thing would just stop working and

2618
01:39:41,280 --> 01:39:43,280
that would be the end of it

2619
01:39:43,280 --> 01:39:44,239
right you need something that

2620
01:39:44,239 --> 01:39:46,400
understands how to read into the pvd

2621
01:39:46,400 --> 01:39:48,320
right for sure

2622
01:39:48,320 --> 01:39:50,080
but then you but then you could do it

2623
01:39:50,080 --> 01:39:50,960
yeah

2624
01:39:50,960 --> 01:39:52,560
like i said it depends i don't know what

2625
01:39:52,560 --> 01:39:55,040
the true purpose of this ula router is i

2626
01:39:55,040 --> 01:39:57,440
know well so

2627
01:39:57,440 --> 01:39:59,360
i didn't i don't know i think we're

2628
01:39:59,360 --> 01:40:01,920
going to need to wrap this up

2629
01:40:01,920 --> 01:40:02,800
okay

2630
01:40:02,800 --> 01:40:05,040
i'll take it up email me later i'll

2631
01:40:05,040 --> 01:40:07,199
leave the offline yeah

2632
01:40:07,199 --> 01:40:09,840
we'll talk

2633
01:40:09,840 --> 01:40:12,560
thanks a lot ted thank you

2634
01:40:12,560 --> 01:40:14,880
um

2635
01:40:16,080 --> 01:40:18,719
so uh apologies for being your name but

2636
01:40:18,719 --> 01:40:19,679
uh

2637
01:40:19,679 --> 01:40:22,560
do you think you're your app

2638
01:40:22,560 --> 01:40:24,000
this is

2639
01:40:24,000 --> 01:40:26,639
okay okay this is chen chengwan you can

2640
01:40:26,639 --> 01:40:29,360
call me godfrey uh come come huawei now

2641
01:40:29,360 --> 01:40:31,360
this document is cooperation with my

2642
01:40:31,360 --> 01:40:33,119
colleague joe tiernan

2643
01:40:33,119 --> 01:40:35,520
so this document just talked about the

2644
01:40:35,520 --> 01:40:39,520
issue that is the past m2 detection

2645
01:40:39,520 --> 01:40:41,360
in the multi-pass

2646
01:40:41,360 --> 01:40:42,480
scenario

2647
01:40:42,480 --> 01:40:44,560
okay we can go to the next part next

2648
01:40:44,560 --> 01:40:46,639
page

2649
01:40:46,639 --> 01:40:48,880
okay from this page you can see

2650
01:40:48,880 --> 01:40:50,880
when the

2651
01:40:50,880 --> 01:40:52,480
left part

2652
01:40:52,480 --> 01:40:54,560
you can see they have two halves from r1

2653
01:40:54,560 --> 01:40:57,199
to r4 then from the upper player you can

2654
01:40:57,199 --> 01:41:00,080
see the plasma m2 should be long about

2655
01:41:00,080 --> 01:41:02,320
1400

2656
01:41:02,320 --> 01:41:05,199
because of the hash mark algorithm

2657
01:41:05,199 --> 01:41:08,480
inside of the rotor are

2658
01:41:08,480 --> 01:41:11,679
fixed so the possibility detected packet

2659
01:41:11,679 --> 01:41:14,719
will always go into one direction but

2660
01:41:14,719 --> 01:41:17,119
the service packet with a different port

2661
01:41:17,119 --> 01:41:19,199
different ib address maybe we have

2662
01:41:19,199 --> 01:41:22,239
grocery go through other direction

2663
01:41:22,239 --> 01:41:24,480
so if it goes through

2664
01:41:24,480 --> 01:41:28,800
r1 r3 r4 and the packet size is largely

2665
01:41:28,800 --> 01:41:30,040
larger than

2666
01:41:30,040 --> 01:41:32,639
1300 it will be lost

2667
01:41:32,639 --> 01:41:34,639
so this is uh i think is a very

2668
01:41:34,639 --> 01:41:36,480
important issue

2669
01:41:36,480 --> 01:41:40,560
so the idea is looks like the red part

2670
01:41:40,560 --> 01:41:43,760
we can do the duplication in each point

2671
01:41:43,760 --> 01:41:45,360
of the network

2672
01:41:45,360 --> 01:41:48,560
because inside the router we can know uh

2673
01:41:48,560 --> 01:41:52,000
how many load balance pass inside the of

2674
01:41:52,000 --> 01:41:53,679
the downstream

2675
01:41:53,679 --> 01:41:56,159
so we can do the duplication

2676
01:41:56,159 --> 01:41:58,719
at the r1 and then it can send two

2677
01:41:58,719 --> 01:42:03,199
packets from r1 r2 to r4 and another one

2678
01:42:03,199 --> 01:42:05,760
from r1 r3 to r4

2679
01:42:05,760 --> 01:42:09,040
at last we can get the result about the

2680
01:42:09,040 --> 01:42:10,560
1300

2681
01:42:10,560 --> 01:42:14,639
is the minimal pass m2 of from r1 to r4

2682
01:42:14,639 --> 01:42:18,159
so you can record this inside the r1

2683
01:42:18,159 --> 01:42:20,960
so finally the packet will be cut to

2684
01:42:20,960 --> 01:42:23,679
less than 1 000 and 300.

2685
01:42:23,679 --> 01:42:26,480
okay next next page

2686
01:42:26,480 --> 01:42:28,880
okay this may just show the procedure

2687
01:42:28,880 --> 01:42:30,960
inside of the network

2688
01:42:30,960 --> 01:42:33,840
you can see our r1 find the two paths

2689
01:42:33,840 --> 01:42:36,320
here it will copy two to two uh

2690
01:42:36,320 --> 01:42:37,760
downstream links

2691
01:42:37,760 --> 01:42:39,920
after uh then the

2692
01:42:39,920 --> 01:42:42,080
from r2 r3 we will do the same thing

2693
01:42:42,080 --> 01:42:43,199
like this

2694
01:42:43,199 --> 01:42:45,600
last if the packet could

2695
01:42:45,600 --> 01:42:48,719
arrive the r4 it will reply

2696
01:42:48,719 --> 01:42:52,159
to r1 each each uh each packet each copy

2697
01:42:52,159 --> 01:42:55,520
and at last r1 get the response from r4

2698
01:42:55,520 --> 01:42:57,119
it can calculate which one is the

2699
01:42:57,119 --> 01:42:59,920
minimum minimum one and at last we are

2700
01:42:59,920 --> 01:43:03,040
recording in memory for the la for the

2701
01:43:03,040 --> 01:43:05,199
for the following uh service packet to

2702
01:43:05,199 --> 01:43:07,679
do the slicing okay

2703
01:43:07,679 --> 01:43:08,800
so a

2704
01:43:08,800 --> 01:43:11,360
red part just some consideration about

2705
01:43:11,360 --> 01:43:14,639
how to uh modify the packed inverter

2706
01:43:14,639 --> 01:43:17,199
which i just consider to use the hop i

2707
01:43:17,199 --> 01:43:19,280
hope extension header

2708
01:43:19,280 --> 01:43:21,199
about the

2709
01:43:21,199 --> 01:43:24,000
request request direction and i use the

2710
01:43:24,000 --> 01:43:26,400
dh extension head for the response

2711
01:43:26,400 --> 01:43:28,480
duration so uh

2712
01:43:28,480 --> 01:43:30,080
inside of the packet

2713
01:43:30,080 --> 01:43:34,000
i consider to use the m m tag and d tag

2714
01:43:34,000 --> 01:43:35,760
to identify

2715
01:43:35,760 --> 01:43:37,679
this packet is just for pass them to

2716
01:43:37,679 --> 01:43:40,480
definition and our d is identified the

2717
01:43:40,480 --> 01:43:43,280
packet is due to the duplication

2718
01:43:43,280 --> 01:43:48,080
okay so at last we can find the

2719
01:43:48,080 --> 01:43:51,119
whole procedure inside this page

2720
01:43:51,119 --> 01:43:54,320
okay next one

2721
01:43:54,400 --> 01:43:57,440
so uh this page just show a consolation

2722
01:43:57,440 --> 01:44:00,000
about the up layer which which protocol

2723
01:44:00,000 --> 01:44:01,360
could uh

2724
01:44:01,360 --> 01:44:03,920
send this synthesis packet

2725
01:44:03,920 --> 01:44:06,639
here just exam example we consider use

2726
01:44:06,639 --> 01:44:09,360
the keyword light to trigger the passive

2727
01:44:09,360 --> 01:44:12,400
detection so for the uh

2728
01:44:12,400 --> 01:44:15,840
sender uh to know which one is

2729
01:44:15,840 --> 01:44:17,840
the

2730
01:44:17,840 --> 01:44:22,480
which packet i just reply for which one

2731
01:44:22,480 --> 01:44:25,280
reply uh request one we can use the

2732
01:44:25,280 --> 01:44:28,000
sixth number to do the alignment so the

2733
01:44:28,000 --> 01:44:28,800
last

2734
01:44:28,800 --> 01:44:30,320
in

2735
01:44:30,320 --> 01:44:34,000
at last in the receiver we can do the

2736
01:44:34,000 --> 01:44:36,159
calculation according to the same

2737
01:44:36,159 --> 01:44:37,760
sequence number

2738
01:44:37,760 --> 01:44:39,920
okay i think this is the

2739
01:44:39,920 --> 01:44:42,320
whole consideration of the solution this

2740
01:44:42,320 --> 01:44:45,040
is the last page

2741
01:44:45,199 --> 01:44:48,639
okay thank you and we are out of time so

2742
01:44:48,639 --> 01:44:51,040
for these talks at the end we're not we

2743
01:44:51,040 --> 01:44:53,440
don't have time for discussion so please

2744
01:44:53,440 --> 01:44:56,879
bring your comments to the list

2745
01:44:57,760 --> 01:44:59,360
okay thank you

2746
01:44:59,360 --> 01:45:01,040
thank you

2747
01:45:01,040 --> 01:45:02,639
okay next talk

2748
01:45:02,639 --> 01:45:04,800
bob can you help me find the slides for

2749
01:45:04,800 --> 01:45:06,000
this one

2750
01:45:06,000 --> 01:45:09,119
no i can try

2751
01:45:15,600 --> 01:45:17,760
can we just

2752
01:45:17,760 --> 01:45:20,080
let's jump ahead to the nd1 so we can

2753
01:45:20,080 --> 01:45:22,320
figure out the uh the slides for this

2754
01:45:22,320 --> 01:45:23,520
one

2755
01:45:23,520 --> 01:45:24,800
um

2756
01:45:24,800 --> 01:45:29,560
paulo do you want to go ahead thank you

2757
01:45:30,719 --> 01:45:32,639
yes i apologize for not introducing this

2758
01:45:32,639 --> 01:45:34,880
section but this is the new work that is

2759
01:45:34,880 --> 01:45:37,040
uh not been discussed on the list you

2760
01:45:37,040 --> 01:45:38,719
know allowing people five minutes to

2761
01:45:38,719 --> 01:45:41,280
present uh new work please go ahead hold

2762
01:45:41,280 --> 01:45:43,360
up thank you so far

2763
01:45:43,360 --> 01:45:45,199
i'm presenting on behalf of the people

2764
01:45:45,199 --> 01:45:46,880
you see listed here

2765
01:45:46,880 --> 01:45:49,040
so

2766
01:45:49,520 --> 01:45:51,280
so basically uh

2767
01:45:51,280 --> 01:45:53,360
let me just skip the details and

2768
01:45:53,360 --> 01:45:55,520
background of this work because

2769
01:45:55,520 --> 01:45:57,520
i want to preserve times for the next

2770
01:45:57,520 --> 01:46:00,480
speakers but basically we started from

2771
01:46:00,480 --> 01:46:03,920
let's say an analysis uh targeting the

2772
01:46:03,920 --> 01:46:07,520
first four protocols then we moved to

2773
01:46:07,520 --> 01:46:09,520
neighbor discovery after talking with a

2774
01:46:09,520 --> 01:46:12,880
few operators and the idea is to look at

2775
01:46:12,880 --> 01:46:14,159
the

2776
01:46:14,159 --> 01:46:18,719
neighbor discovery so 48 61 and 62 to

2777
01:46:18,719 --> 01:46:21,199
see if

2778
01:46:21,199 --> 01:46:24,159
those standards leave room for solving

2779
01:46:24,159 --> 01:46:27,920
the issues caused by prefix instability

2780
01:46:27,920 --> 01:46:30,480
uh let me just say

2781
01:46:30,480 --> 01:46:32,719
as the chair was saying before

2782
01:46:32,719 --> 01:46:34,960
we have not received so many comments

2783
01:46:34,960 --> 01:46:36,800
from the mailing list so please feel

2784
01:46:36,800 --> 01:46:39,760
free to comment or provide criticism to

2785
01:46:39,760 --> 01:46:40,480
our

2786
01:46:40,480 --> 01:46:43,119
work so we are open to the discussion

2787
01:46:43,119 --> 01:46:45,360
next slide please

2788
01:46:45,360 --> 01:46:47,280
again very quickly so there are options

2789
01:46:47,280 --> 01:46:49,199
to solve the cases

2790
01:46:49,199 --> 01:46:51,760
of prefix invalidity for sure for

2791
01:46:51,760 --> 01:46:54,639
example you can enter the timers defined

2792
01:46:54,639 --> 01:46:57,840
in rfc 4861 so for example you can

2793
01:46:57,840 --> 01:47:01,040
decrease the timers to cope with

2794
01:47:01,040 --> 01:47:03,920
let's say the valid lifetime so the time

2795
01:47:03,920 --> 01:47:06,400
a host maintains stale information or

2796
01:47:06,400 --> 01:47:07,520
you can

2797
01:47:07,520 --> 01:47:11,440
modify or reduce the preferred lifetime

2798
01:47:11,440 --> 01:47:14,800
just to reduce the time for which a

2799
01:47:14,800 --> 01:47:17,679
a certain prefix is preferred so this is

2800
01:47:17,679 --> 01:47:20,880
a kind of operational process

2801
01:47:20,880 --> 01:47:22,960
it perfectly works it's defined if i

2802
01:47:22,960 --> 01:47:25,760
recall it correctly in

2803
01:47:25,760 --> 01:47:27,920
89

2804
01:47:27,920 --> 01:47:30,560
78 maybe

2805
01:47:30,560 --> 01:47:32,000
it's a possibility there is another

2806
01:47:32,000 --> 01:47:33,760
option so the option we choose is to

2807
01:47:33,760 --> 01:47:35,679
look at the protocol behavior so

2808
01:47:35,679 --> 01:47:39,040
specifically for the 61 and 62 and see

2809
01:47:39,040 --> 01:47:41,520
if those protocols

2810
01:47:41,520 --> 01:47:44,159
leave room to let's say

2811
01:47:44,159 --> 01:47:46,800
solve the corner cases

2812
01:47:46,800 --> 01:47:49,280
where invalidity applies

2813
01:47:49,280 --> 01:47:52,560
um this is just uh explained in the next

2814
01:47:52,560 --> 01:47:54,159
slide so

2815
01:47:54,159 --> 01:47:55,440
if you can do

2816
01:47:55,440 --> 01:47:56,800
okay uh

2817
01:47:56,800 --> 01:47:58,880
don't worry is a very complex side but

2818
01:47:58,880 --> 01:48:00,960
i'm not going to discuss it

2819
01:48:00,960 --> 01:48:03,360
at the moment so feel free to have a

2820
01:48:03,360 --> 01:48:05,199
look at the paper and you see the full

2821
01:48:05,199 --> 01:48:07,280
explanation but basically you see on the

2822
01:48:07,280 --> 01:48:08,719
left hand side

2823
01:48:08,719 --> 01:48:10,080
the solutions

2824
01:48:10,080 --> 01:48:11,520
that we

2825
01:48:11,520 --> 01:48:14,880
have identified solve those corner cases

2826
01:48:14,880 --> 01:48:17,040
where invalidity applies

2827
01:48:17,040 --> 01:48:19,280
and on the right

2828
01:48:19,280 --> 01:48:20,560
let's say

2829
01:48:20,560 --> 01:48:23,800
it's a list of proposals of

2830
01:48:23,800 --> 01:48:26,960
modifications or changes to the existing

2831
01:48:26,960 --> 01:48:29,840
protocols so in a way that maybe

2832
01:48:29,840 --> 01:48:32,480
just touching the basic behavior

2833
01:48:32,480 --> 01:48:34,960
we can also solve one of the corner

2834
01:48:34,960 --> 01:48:37,600
cases that i've just highlighted where

2835
01:48:37,600 --> 01:48:39,520
invalidity applies

2836
01:48:39,520 --> 01:48:41,920
a quick example and then i move to the

2837
01:48:41,920 --> 01:48:43,760
conclusion

2838
01:48:43,760 --> 01:48:45,199
let's take

2839
01:48:45,199 --> 01:48:46,400
one of the

2840
01:48:46,400 --> 01:48:48,719
let's say updates introduced by version

2841
01:48:48,719 --> 01:48:50,560
zero two of the draft

2842
01:48:50,560 --> 01:48:53,520
section 6.6 you see

2843
01:48:53,520 --> 01:48:54,880
we have a

2844
01:48:54,880 --> 01:48:57,760
thought of the uh synchronization flag

2845
01:48:57,760 --> 01:49:01,119
just to advise the to let a router

2846
01:49:01,119 --> 01:49:04,239
advise the hosts that um

2847
01:49:04,239 --> 01:49:06,880
the router advertisement

2848
01:49:06,880 --> 01:49:08,960
is complete so all the pieces of

2849
01:49:08,960 --> 01:49:10,960
information needed for the configuration

2850
01:49:10,960 --> 01:49:12,080
of the host

2851
01:49:12,080 --> 01:49:14,880
have been signaled have been passed on

2852
01:49:14,880 --> 01:49:16,239
to the host

2853
01:49:16,239 --> 01:49:17,760
in doing that

2854
01:49:17,760 --> 01:49:19,880
uh in cases of

2855
01:49:19,880 --> 01:49:22,960
misconfiguration outage uh

2856
01:49:22,960 --> 01:49:24,159
abrupt

2857
01:49:24,159 --> 01:49:25,360
reload

2858
01:49:25,360 --> 01:49:29,360
even if an array got lost before

2859
01:49:29,360 --> 01:49:31,440
if combined with techniques such as

2860
01:49:31,440 --> 01:49:33,520
using non-volatile memory

2861
01:49:33,520 --> 01:49:36,000
the new array caused by maybe a new

2862
01:49:36,000 --> 01:49:38,480
prefix sent by the

2863
01:49:38,480 --> 01:49:40,560
upstream provider

2864
01:49:40,560 --> 01:49:43,040
is synchronized to the host so the the

2865
01:49:43,040 --> 01:49:46,480
states are shared across the network

2866
01:49:46,480 --> 01:49:48,719
sorry if i've been uh very fast but

2867
01:49:48,719 --> 01:49:50,719
that's very good that that's thank you

2868
01:49:50,719 --> 01:49:52,560
comments

2869
01:49:52,560 --> 01:49:54,800
thank you very much paulo you beat your

2870
01:49:54,800 --> 01:49:56,639
time by one minute so it's extra bonus

2871
01:49:56,639 --> 01:49:58,960
points

2872
01:50:02,960 --> 01:50:05,679
so chen now we found your presentation

2873
01:50:05,679 --> 01:50:06,800
so uh

2874
01:50:06,800 --> 01:50:08,560
please go ahead

2875
01:50:08,560 --> 01:50:10,960
hello everyone today i'm going to talk

2876
01:50:10,960 --> 01:50:12,719
about a multicast

2877
01:50:12,719 --> 01:50:14,159
using

2878
01:50:14,159 --> 01:50:18,400
multicast rolling head next page

2879
01:50:21,280 --> 01:50:24,639
today i'm going focus on

2880
01:50:25,440 --> 01:50:28,239
the details will be presented in pins

2881
01:50:28,239 --> 01:50:30,719
working group today i'm

2882
01:50:30,719 --> 01:50:32,880
going to focus on

2883
01:50:32,880 --> 01:50:35,360
the items in green

2884
01:50:35,360 --> 01:50:37,199
so introduction

2885
01:50:37,199 --> 01:50:39,599
the existing solution based on segment

2886
01:50:39,599 --> 01:50:41,480
routine includes

2887
01:50:41,480 --> 01:50:43,920
srpmp policy

2888
01:50:43,920 --> 01:50:46,320
and our previous draft

2889
01:50:46,320 --> 01:50:49,440
which received many comments from the

2890
01:50:49,440 --> 01:50:52,880
working dean's working group but these

2891
01:50:52,880 --> 01:50:55,280
existing solutions

2892
01:50:55,280 --> 01:50:58,560
have some weakness

2893
01:50:58,560 --> 01:51:00,800
matcha's routing header

2894
01:51:00,800 --> 01:51:02,320
is a good

2895
01:51:02,320 --> 01:51:05,679
alternative for this existing solution

2896
01:51:05,679 --> 01:51:07,360
which takes a

2897
01:51:07,360 --> 01:51:10,480
breaks those comments into account

2898
01:51:10,480 --> 01:51:13,679
and is more scalable

2899
01:51:13,679 --> 01:51:16,239
next page

2900
01:51:17,040 --> 01:51:19,760
multicast routing header

2901
01:51:19,760 --> 01:51:20,719
is a

2902
01:51:20,719 --> 01:51:24,560
routing header with new routing type

2903
01:51:24,560 --> 01:51:26,880
it contains

2904
01:51:26,880 --> 01:51:28,239
subtree

2905
01:51:28,239 --> 01:51:31,040
from next hop

2906
01:51:32,840 --> 01:51:35,599
sl which is short for

2907
01:51:35,599 --> 01:51:37,440
subject left

2908
01:51:37,440 --> 01:51:40,880
points to the subtree from next hop

2909
01:51:40,880 --> 01:51:42,239
mb

2910
01:51:42,239 --> 01:51:45,040
is a number for branches or link from

2911
01:51:45,040 --> 01:51:46,400
next hop

2912
01:51:46,400 --> 01:51:47,599
b

2913
01:51:47,599 --> 01:51:51,119
is used to indicate whether these

2914
01:51:51,119 --> 01:51:55,440
are used for the links from laptop

2915
01:51:55,440 --> 01:51:58,480
or multi-parts package

2916
01:51:58,480 --> 01:52:00,719
increase of a matka tree

2917
01:52:00,719 --> 01:52:02,960
will in-cap the package

2918
01:52:02,960 --> 01:52:05,599
in my class routing hybrid for each of

2919
01:52:05,599 --> 01:52:08,320
its laptop and extended package to the

2920
01:52:08,320 --> 01:52:09,360
next pop

2921
01:52:09,360 --> 01:52:12,880
for example here we have a multiple tree

2922
01:52:12,880 --> 01:52:14,960
from ingress e1

2923
01:52:14,960 --> 01:52:15,760
to

2924
01:52:15,760 --> 01:52:18,719
microsoft p1

2925
01:52:18,719 --> 01:52:21,119
the multicast voltage header will

2926
01:52:21,119 --> 01:52:25,760
include the subtree from micro p1

2927
01:52:25,760 --> 01:52:30,480
and the the fields l s l m mb and b in

2928
01:52:30,480 --> 01:52:32,800
the mass category holder

2929
01:52:32,800 --> 01:52:33,840
will

2930
01:52:33,840 --> 01:52:35,040
be set

2931
01:52:35,040 --> 01:52:37,199
to the corresponding value

2932
01:52:37,199 --> 01:52:41,040
for the link from english node e1 to

2933
01:52:41,040 --> 01:52:42,480
laptop

2934
01:52:42,480 --> 01:52:44,480
v1

2935
01:52:44,480 --> 01:52:47,119
next page

2936
01:52:47,280 --> 01:52:50,080
so this is the package received by

2937
01:52:50,080 --> 01:52:51,920
e1

2938
01:52:51,920 --> 01:52:54,000
in the mathcast roll header

2939
01:52:54,000 --> 01:52:55,440
the sl

2940
01:52:55,440 --> 01:52:59,440
will point to the tree from p1

2941
01:52:59,440 --> 01:53:03,360
there are four links from p1 which is p1

2942
01:53:03,360 --> 01:53:05,760
to p2 e3

2943
01:53:05,760 --> 01:53:08,560
p8 and p9

2944
01:53:08,560 --> 01:53:13,040
p1 will send a copy to each of these max

2945
01:53:13,040 --> 01:53:14,800
hops

2946
01:53:14,800 --> 01:53:16,960
for the part for the copy

2947
01:53:16,960 --> 01:53:17,679
to

2948
01:53:17,679 --> 01:53:20,239
be sent from p1 to

2949
01:53:20,239 --> 01:53:22,639
maxwell p2

2950
01:53:22,639 --> 01:53:24,000
the fuse

2951
01:53:24,000 --> 01:53:27,520
b mb and the sl in the multicast routing

2952
01:53:27,520 --> 01:53:28,560
header

2953
01:53:28,560 --> 01:53:31,760
will be set to the corresponding values

2954
01:53:31,760 --> 01:53:36,000
for the link from p1 to b2

2955
01:53:36,960 --> 01:53:42,880
for the copy to be sent from p1 to p8

2956
01:53:42,880 --> 01:53:44,000
e8

2957
01:53:44,000 --> 01:53:47,520
is a equals node in this case

2958
01:53:47,520 --> 01:53:50,239
p1 just set

2959
01:53:50,239 --> 01:53:51,679
sl

2960
01:53:51,679 --> 01:53:54,880
to zero and then the pack

2961
01:53:54,880 --> 01:53:58,080
will be sent to p8 which is

2962
01:53:58,080 --> 01:54:01,440
in the bottom of that of the page

2963
01:54:01,440 --> 01:54:03,040
when egress

2964
01:54:03,040 --> 01:54:06,480
e8 receives the package

2965
01:54:06,480 --> 01:54:09,040
the egress will decap the package and

2966
01:54:09,040 --> 01:54:10,320
send the

2967
01:54:10,320 --> 01:54:14,239
detailed package to the ipmodcaster

2968
01:54:14,239 --> 01:54:16,400
for the module so that's

2969
01:54:16,400 --> 01:54:17,920
all that's all any questions and

2970
01:54:17,920 --> 01:54:20,239
comments welcome thank you

2971
01:54:20,239 --> 01:54:21,599
excellent thank you very much and this

2972
01:54:21,599 --> 01:54:23,679
is work going on in in the pin working

2973
01:54:23,679 --> 01:54:25,199
group right

2974
01:54:25,199 --> 01:54:27,440
yes yes we're go details in ping organ

2975
01:54:27,440 --> 01:54:30,000
group okay

2976
01:54:32,239 --> 01:54:36,959
uh okay is it uh shipping or sending

2977
01:54:40,639 --> 01:54:42,880
hello can you hear me

2978
01:54:42,880 --> 01:54:45,599
we can hear you

2979
01:54:45,760 --> 01:54:48,560
good uh this is shooking and i'm going

2980
01:54:48,560 --> 01:54:53,760
to present the two drafts next please

2981
01:54:54,080 --> 01:54:57,360
okay first in apn the apn information

2982
01:54:57,360 --> 01:55:00,639
will be encapsulated in the outer tunnel

2983
01:55:00,639 --> 01:55:03,760
header and when the tunnel ends the ap

2984
01:55:03,760 --> 01:55:06,320
information will be removed and with

2985
01:55:06,320 --> 01:55:09,199
this information it can be used to for

2986
01:55:09,199 --> 01:55:12,320
the fine granularity traffic steering or

2987
01:55:12,320 --> 01:55:17,320
performance measurement next piece

2988
01:55:24,800 --> 01:55:27,440
the ipv6 extension header such as the

2989
01:55:27,440 --> 01:55:29,679
hubble hub rdoh

2990
01:55:29,679 --> 01:55:32,800
the next piece

2991
01:55:32,800 --> 01:55:35,280
okay so here we would like to request

2992
01:55:35,280 --> 01:55:36,960
for a

2993
01:55:36,960 --> 01:55:39,760
low i look early allocation of the code

2994
01:55:39,760 --> 01:55:42,760
points

2995
01:55:46,639 --> 01:55:51,119
i think we've lost trooping

2996
01:55:55,040 --> 01:55:58,080
yes she was almost uh almost done i

2997
01:55:58,080 --> 01:55:59,760
think you know regarding this one we

2998
01:55:59,760 --> 01:56:01,119
certainly have to be something we

2999
01:56:01,119 --> 01:56:03,599
discuss on the list and with our ads

3000
01:56:03,599 --> 01:56:07,040
also given apns um you know having a few

3001
01:56:07,040 --> 01:56:08,480
buffs um

3002
01:56:08,480 --> 01:56:09,920
but yeah yeah

3003
01:56:09,920 --> 01:56:11,520
this is something the chairs and ads can

3004
01:56:11,520 --> 01:56:13,280
discuss and will also take to the list i

3005
01:56:13,280 --> 01:56:15,599
think yeah and the early allocate

3006
01:56:15,599 --> 01:56:17,840
there's an rfc that describes how to do

3007
01:56:17,840 --> 01:56:20,159
early allocations

3008
01:56:20,159 --> 01:56:21,440
okay so

3009
01:56:21,440 --> 01:56:23,440
torres i think you are

3010
01:56:23,440 --> 01:56:28,119
next please come in the pink box

3011
01:56:29,520 --> 01:56:32,080
hello next slide this is presenting on

3012
01:56:32,080 --> 01:56:34,000
behalf of the two co-authors

3013
01:56:34,000 --> 01:56:36,560
um shown on the first slide so this is

3014
01:56:36,560 --> 01:56:40,400
another um uh proposal for a native ipv6

3015
01:56:40,400 --> 01:56:43,360
solution for point to multipoint

3016
01:56:43,360 --> 01:56:45,679
multicast services stateless so it's

3017
01:56:45,679 --> 01:56:48,000
meant to extend the existing srv6

3018
01:56:48,000 --> 01:56:50,159
architecture in terminology and

3019
01:56:50,159 --> 01:56:53,280
functionality um the target solution

3020
01:56:53,280 --> 01:56:55,199
group would be the pim working group as

3021
01:56:55,199 --> 01:56:57,360
that has been you know the group to

3022
01:56:57,360 --> 01:56:59,760
outsource multi-point services from

3023
01:56:59,760 --> 01:57:02,159
spring but that would be done through a

3024
01:57:02,159 --> 01:57:04,480
new hop by hub extension header which we

3025
01:57:04,480 --> 01:57:07,520
typically do here um like we did srh

3026
01:57:07,520 --> 01:57:10,480
here um that's why i'm here um

3027
01:57:10,480 --> 01:57:13,040
so um

3028
01:57:13,040 --> 01:57:14,880
how do we compare that was high level

3029
01:57:14,880 --> 01:57:17,040
comparison here so

3030
01:57:17,040 --> 01:57:20,080
in srh the extension header carries the

3031
01:57:20,080 --> 01:57:21,760
segment path

3032
01:57:21,760 --> 01:57:24,159
and we did start compression of that

3033
01:57:24,159 --> 01:57:26,000
header eight years after we introduced

3034
01:57:26,000 --> 01:57:28,320
the original one so very fast uh maybe

3035
01:57:28,320 --> 01:57:30,719
we can do it even faster for multicast

3036
01:57:30,719 --> 01:57:32,560
by starting with a compressed header

3037
01:57:32,560 --> 01:57:34,480
which is exactly what we think this

3038
01:57:34,480 --> 01:57:36,080
proposal does the best from all the

3039
01:57:36,080 --> 01:57:38,080
proposals out there

3040
01:57:38,080 --> 01:57:40,080
and the segment by segment forwarding

3041
01:57:40,080 --> 01:57:41,760
would be exactly the same you know on

3042
01:57:41,760 --> 01:57:43,119
every segment you're rewriting the

3043
01:57:43,119 --> 01:57:45,679
destination address based on um an

3044
01:57:45,679 --> 01:57:48,719
extraction of the next segment from

3045
01:57:48,719 --> 01:57:51,280
the extension header so that's logically

3046
01:57:51,280 --> 01:57:53,920
the same but um in the recursive bit

3047
01:57:53,920 --> 01:57:56,080
string structure we would obviously

3048
01:57:56,080 --> 01:57:58,239
extract more than one address because we

3049
01:57:58,239 --> 01:57:59,679
still want to do replication that was

3050
01:57:59,679 --> 01:58:02,480
the whole idea of multicast and um so

3051
01:58:02,480 --> 01:58:04,639
then on the egress side on the receivers

3052
01:58:04,639 --> 01:58:06,320
we probably would like to keep the same

3053
01:58:06,320 --> 01:58:08,400
tlvs that we have an srh so that's

3054
01:58:08,400 --> 01:58:12,320
another tbd item so next slide

3055
01:58:12,320 --> 01:58:13,119
so

3056
01:58:13,119 --> 01:58:14,560
here on the right hand side you see a

3057
01:58:14,560 --> 01:58:17,520
distribution tree that is really encoded

3058
01:58:17,520 --> 01:58:19,840
in the compressed addressing structure

3059
01:58:19,840 --> 01:58:22,080
so most simple thing you're on the first

3060
01:58:22,080 --> 01:58:25,760
router a on top um you have a set of

3061
01:58:25,760 --> 01:58:28,000
bits one each for each possible

3062
01:58:28,000 --> 01:58:30,480
adjacency like next top that you have

3063
01:58:30,480 --> 01:58:33,040
and then you've got the substructure for

3064
01:58:33,040 --> 01:58:35,440
the subtree from that point on so

3065
01:58:35,440 --> 01:58:37,360
on every segment processing what you

3066
01:58:37,360 --> 01:58:40,480
need to do is on a you need to basically

3067
01:58:40,480 --> 01:58:41,360
take

3068
01:58:41,360 --> 01:58:43,760
the red subtree that's your new active

3069
01:58:43,760 --> 01:58:44,880
address

3070
01:58:44,880 --> 01:58:47,760
for the next hop toward b and then for

3071
01:58:47,760 --> 01:58:50,080
the copy towards c it's the green

3072
01:58:50,080 --> 01:58:51,840
substructure so the question is a little

3073
01:58:51,840 --> 01:58:54,000
bit how do we do the rewrite there are a

3074
01:58:54,000 --> 01:58:55,920
couple of options we could simply

3075
01:58:55,920 --> 01:58:58,639
extract rewrite make it shorter not sure

3076
01:58:58,639 --> 01:59:01,679
if you know six men would allow that

3077
01:59:01,679 --> 01:59:04,239
we can try to adjust a single segment

3078
01:59:04,239 --> 01:59:07,119
offset which would be exactly what um

3079
01:59:07,119 --> 01:59:09,920
the sequential one in unicast does but

3080
01:59:09,920 --> 01:59:12,400
if we actually have two offsets maybe

3081
01:59:12,400 --> 01:59:14,400
offset and length we would be a better

3082
01:59:14,400 --> 01:59:16,880
compress so we're pretty open in how

3083
01:59:16,880 --> 01:59:18,880
that could be done so those i think are

3084
01:59:18,880 --> 01:59:22,639
the options to discuss next slide

3085
01:59:22,639 --> 01:59:25,280
um yeah so

3086
01:59:25,280 --> 01:59:27,040
then also how do we split up the work

3087
01:59:27,040 --> 01:59:30,000
right so um the compression in spring is

3088
01:59:30,000 --> 01:59:32,719
now done by sticking within 128 bits so

3089
01:59:32,719 --> 01:59:35,199
it's kind of a strange split between six

3090
01:59:35,199 --> 01:59:38,320
men and spring um so can we kind of

3091
01:59:38,320 --> 01:59:41,040
proactively um for for this approach

3092
01:59:41,040 --> 01:59:43,119
figure out how to you know split

3093
01:59:43,119 --> 01:59:45,840
extensibility between six men and the

3094
01:59:45,840 --> 01:59:48,239
subject matter working group like pim

3095
01:59:48,239 --> 01:59:49,599
um

3096
01:59:49,599 --> 01:59:51,840
and uh so that we bake in the

3097
01:59:51,840 --> 01:59:55,040
extensibility up front much better um

3098
01:59:55,040 --> 01:59:56,560
yeah and maybe even have multiple

3099
01:59:56,560 --> 01:59:58,719
options because seemingly depending on

3100
01:59:58,719 --> 02:00:00,560
what type of trees you want there may be

3101
02:00:00,560 --> 02:00:02,400
different compression options that we

3102
02:00:02,400 --> 02:00:05,119
can have so that's pretty high level um

3103
02:00:05,119 --> 02:00:06,480
so if you're interested in the topic

3104
02:00:06,480 --> 02:00:07,760
next slide

3105
02:00:07,760 --> 02:00:10,639
please come to pim thursday if you're

3106
02:00:10,639 --> 02:00:12,239
interested in this otherwise of course

3107
02:00:12,239 --> 02:00:14,719
uh all these questions i was raising

3108
02:00:14,719 --> 02:00:17,280
against the six-man specific things i'd

3109
02:00:17,280 --> 02:00:20,000
love to hear comments about those on the

3110
02:00:20,000 --> 02:00:22,000
list and i'll re-trigger that discussion

3111
02:00:22,000 --> 02:00:23,599
here thank you

3112
02:00:23,599 --> 02:00:26,000
thanks a lot trolls and that brings us

3113
02:00:26,000 --> 02:00:28,719
to the end of the session here in vienna

3114
02:00:28,719 --> 02:00:30,400
and remote

3115
02:00:30,400 --> 02:00:32,320
feel free to send us feedback on how you

3116
02:00:32,320 --> 02:00:35,040
thought the hybrid setup worked i

3117
02:00:35,040 --> 02:00:36,480
certainly noticed that there was a lot

3118
02:00:36,480 --> 02:00:38,400
more activity in the room i think with

3119
02:00:38,400 --> 02:00:39,599
questions and

3120
02:00:39,599 --> 02:00:41,119
discussion than

3121
02:00:41,119 --> 02:00:43,040
what we had remotely even though we it

3122
02:00:43,040 --> 02:00:45,119
was a one-fifth of the people

3123
02:00:45,119 --> 02:00:49,040
here in the room four-fifths remote

3124
02:00:49,040 --> 02:00:51,280
we don't know quite yet what we'll do

3125
02:00:51,280 --> 02:00:53,040
for philadelphia

3126
02:00:53,040 --> 02:00:56,159
bob is out sailing to hawaii

3127
02:00:56,159 --> 02:00:58,239
um

3128
02:00:58,239 --> 02:01:01,199
i'm out hiking to mexico

3129
02:01:01,199 --> 02:01:03,280
or just to clarify a little bit i will

3130
02:01:03,280 --> 02:01:05,440
have hopefully arrived in hawaii and the

3131
02:01:05,440 --> 02:01:07,280
question is should i leave hawaii and go

3132
02:01:07,280 --> 02:01:09,360
to philadelphia

3133
02:01:09,360 --> 02:01:11,119
so um we'll have a discussion with the

3134
02:01:11,119 --> 02:01:13,360
80s and the chairs for that but thanks a

3135
02:01:13,360 --> 02:01:15,040
lot guys yes well do it from the boat

3136
02:01:15,040 --> 02:01:16,960
come on that would be first right

3137
02:01:16,960 --> 02:01:18,480
sharing from the boat

3138
02:01:18,480 --> 02:01:20,159
yeah i cannot afford that kind of

3139
02:01:20,159 --> 02:01:23,159
bandwidth

3140
02:01:24,000 --> 02:01:26,800
well thank you very

3141
02:01:34,840 --> 02:01:38,920
much is

3142
02:01:54,350 --> 02:01:57,429
[Music]

3143
02:01:58,560 --> 02:02:02,520
so what i mean what's empty

