1
00:00:08,800 --> 00:00:10,639
yeah exactly

2
00:00:10,639 --> 00:00:12,799
that's true

3
00:00:12,799 --> 00:00:14,559
so david or

4
00:00:14,559 --> 00:00:18,560
do one of you guys want to try sharing

5
00:00:18,720 --> 00:00:22,160
i'm fine with what you're doing nancy

6
00:00:22,480 --> 00:00:25,480
dang

7
00:00:31,840 --> 00:00:32,729
i think dave went

8
00:00:32,729 --> 00:00:40,539
[Laughter]

9
00:00:40,879 --> 00:00:44,879
we have the advantage they got masks on

10
00:00:44,879 --> 00:00:47,920
we've only got an hour and i have it

11
00:00:47,920 --> 00:00:49,840
right at time right now do we want to go

12
00:00:49,840 --> 00:00:52,000
ahead and get started yeah we really do

13
00:00:52,000 --> 00:00:54,800
need to start because uh there's a very

14
00:00:54,800 --> 00:00:56,879
very full agenda

15
00:00:56,879 --> 00:00:58,879
uh you've got a few people here in the

16
00:00:58,879 --> 00:01:00,800
room by the way i know they they look

17
00:01:00,800 --> 00:01:03,359
like dots but it looks like

18
00:01:03,359 --> 00:01:05,360
five or six people

19
00:01:05,360 --> 00:01:07,280
from here

20
00:01:07,280 --> 00:01:08,479
no you

21
00:01:08,479 --> 00:01:10,320
you've got about double that

22
00:01:10,320 --> 00:01:13,360
oh good all right let's go ahead and get

23
00:01:13,360 --> 00:01:15,840
started um

24
00:01:15,840 --> 00:01:18,159
welcome to suit we have a very very full

25
00:01:18,159 --> 00:01:20,479
agenda today um

26
00:01:20,479 --> 00:01:23,200
and so we want to start on time with a

27
00:01:23,200 --> 00:01:27,200
hope of therefore ending on time

28
00:01:27,200 --> 00:01:28,159
so

29
00:01:28,159 --> 00:01:31,040
next slide please

30
00:01:33,680 --> 00:01:35,840
just a reminder of the note well

31
00:01:35,840 --> 00:01:37,600
given it's thursday you've probably seen

32
00:01:37,600 --> 00:01:39,360
this a lot but if you're going to

33
00:01:39,360 --> 00:01:41,200
contribute please make sure you're aware

34
00:01:41,200 --> 00:01:42,799
of what your

35
00:01:42,799 --> 00:01:46,560
obligations are next slide

36
00:01:52,079 --> 00:01:54,720
so we have some administrative tasks and

37
00:01:54,720 --> 00:01:56,719
i don't believe we have somebody

38
00:01:56,719 --> 00:01:59,680
agreeing to take notes in cody md

39
00:01:59,680 --> 00:02:03,880
could we have a volunteer please

40
00:02:08,399 --> 00:02:12,560
we need volunteers to be notetakers

41
00:02:20,160 --> 00:02:22,160
well we really can't proceed without

42
00:02:22,160 --> 00:02:24,160
this

43
00:02:24,160 --> 00:02:25,760
well in the interest of time i'm happy

44
00:02:25,760 --> 00:02:28,399
to be a backup

45
00:02:32,000 --> 00:02:33,599
yeah brendan you're you're a presenter

46
00:02:33,599 --> 00:02:35,680
you're not it no bren brendan's off the

47
00:02:35,680 --> 00:02:37,840
hook

48
00:02:39,599 --> 00:02:40,879
okay

49
00:02:40,879 --> 00:02:43,040
mike jenkins volunteered

50
00:02:43,040 --> 00:02:44,319
thank you mike

51
00:02:44,319 --> 00:02:45,840
second one

52
00:02:45,840 --> 00:02:46,720
uh

53
00:02:46,720 --> 00:02:51,280
dave and i will watch as well so awesome

54
00:02:51,280 --> 00:02:53,280
that'll get us there thank you next

55
00:02:53,280 --> 00:02:55,680
slide

56
00:02:55,680 --> 00:02:56,480
so

57
00:02:56,480 --> 00:02:59,280
this is page one of the agenda which is

58
00:02:59,280 --> 00:03:01,040
basically

59
00:03:01,040 --> 00:03:03,200
hackathon report

60
00:03:03,200 --> 00:03:05,920
suit manifest and how it has been broken

61
00:03:05,920 --> 00:03:07,760
up

62
00:03:07,760 --> 00:03:08,959
and then

63
00:03:08,959 --> 00:03:12,640
firmware encryption next slide

64
00:03:14,239 --> 00:03:16,000
and then

65
00:03:16,000 --> 00:03:19,920
suit report and then suit related claims

66
00:03:19,920 --> 00:03:22,480
and then mud which we

67
00:03:22,480 --> 00:03:24,319
just got

68
00:03:24,319 --> 00:03:26,560
added to the charter

69
00:03:26,560 --> 00:03:28,239
so that's the

70
00:03:28,239 --> 00:03:29,920
intended

71
00:03:29,920 --> 00:03:32,239
sequence of events are there anybody who

72
00:03:32,239 --> 00:03:35,599
wants to bash the agenda

73
00:03:37,760 --> 00:03:40,000
no one in the queue here

74
00:03:40,000 --> 00:03:42,080
nope i'm not seeing anyone i don't see

75
00:03:42,080 --> 00:03:44,239
anyone chatting so

76
00:03:44,239 --> 00:03:45,840
all right brendan we're going to turn it

77
00:03:45,840 --> 00:03:47,840
over to you to explain what's going on

78
00:03:47,840 --> 00:03:51,519
with the suit manifest

79
00:03:52,319 --> 00:03:54,720
the the hackathon summary so before we

80
00:03:54,720 --> 00:03:56,239
go into the slides was there anybody

81
00:03:56,239 --> 00:03:57,760
that wanted to report at the mic about

82
00:03:57,760 --> 00:04:00,959
things happening at the hackathon

83
00:04:02,159 --> 00:04:04,799
which one goes first

84
00:04:04,799 --> 00:04:08,239
uh suit manifest

85
00:04:08,560 --> 00:04:09,680
go ahead

86
00:04:09,680 --> 00:04:11,920
hi this is honest um just because of the

87
00:04:11,920 --> 00:04:15,439
hackathon um yeah it was um i was there

88
00:04:15,439 --> 00:04:16,959
at the hackathon like

89
00:04:16,959 --> 00:04:19,918
many of the folks in

90
00:04:19,918 --> 00:04:23,359
like who obviously remote or

91
00:04:23,840 --> 00:04:25,600
many people couldn't come to this idf

92
00:04:25,600 --> 00:04:27,280
meeting who are typically participating

93
00:04:27,280 --> 00:04:29,199
at the hackathon which was unfortunate

94
00:04:29,199 --> 00:04:30,960
so i've been working on the firmware

95
00:04:30,960 --> 00:04:33,199
encryption and i'm um

96
00:04:33,199 --> 00:04:34,320
i

97
00:04:34,320 --> 00:04:35,840
i'm going to talk about that a little

98
00:04:35,840 --> 00:04:38,000
bit later

99
00:04:38,000 --> 00:04:39,199
so i think

100
00:04:39,199 --> 00:04:42,000
i think it was uh

101
00:04:42,000 --> 00:04:44,479
we had about i would say 100 people

102
00:04:44,479 --> 00:04:46,560
maybe at the hackathon uh so it was well

103
00:04:46,560 --> 00:04:48,000
attended um

104
00:04:48,000 --> 00:04:50,720
like um relative to

105
00:04:50,720 --> 00:04:52,479
to where we are today with the restart

106
00:04:52,479 --> 00:04:54,400
of the face-to-face meetings uh so it's

107
00:04:54,400 --> 00:04:56,320
really good but uh different experience

108
00:04:56,320 --> 00:04:57,440
than

109
00:04:57,440 --> 00:05:00,720
then we had uh pre-copied

110
00:05:00,720 --> 00:05:03,120
so hopefully next time um

111
00:05:03,120 --> 00:05:05,600
we'll get folks to participate in in

112
00:05:05,600 --> 00:05:07,440
philadelphia at uh

113
00:05:07,440 --> 00:05:11,840
in a bigger setup again

114
00:05:19,919 --> 00:05:21,520
see it's getting cranky i'm trying to

115
00:05:21,520 --> 00:05:24,520
share

116
00:05:25,680 --> 00:05:29,120
okay uh brendan's up next with suit

117
00:05:29,120 --> 00:05:32,120
manifest

118
00:05:41,759 --> 00:05:42,960
there we go

119
00:05:42,960 --> 00:05:46,320
okay um so this is the suit manifest

120
00:05:46,320 --> 00:05:48,639
draft um as you can see it's still

121
00:05:48,639 --> 00:05:51,120
version 16 that means it hasn't changed

122
00:05:51,120 --> 00:05:52,639
since 112.

123
00:05:52,639 --> 00:05:55,440
uh next slide please

124
00:05:55,440 --> 00:05:57,120
that doesn't mean we don't have any open

125
00:05:57,120 --> 00:05:59,759
issues the primary open issues that we

126
00:05:59,759 --> 00:06:02,479
have today are mti algorithms and crypto

127
00:06:02,479 --> 00:06:03,520
agility

128
00:06:03,520 --> 00:06:07,000
next slide please

129
00:06:07,199 --> 00:06:09,120
so um

130
00:06:09,120 --> 00:06:11,360
it really makes sense to me that we

131
00:06:11,360 --> 00:06:14,000
should have some kind of pqc mandatory

132
00:06:14,000 --> 00:06:16,479
to implement algorithm but the question

133
00:06:16,479 --> 00:06:18,560
is what does that actually mean does

134
00:06:18,560 --> 00:06:20,080
that mean that authors are required to

135
00:06:20,080 --> 00:06:21,199
support

136
00:06:21,199 --> 00:06:24,080
pqc or bootloaders or update clients or

137
00:06:24,080 --> 00:06:25,039
all of them

138
00:06:25,039 --> 00:06:26,319
um

139
00:06:26,319 --> 00:06:28,479
i guess at minimum it seems that authors

140
00:06:28,479 --> 00:06:30,800
should be required to support pqc

141
00:06:30,800 --> 00:06:34,360
next slide please

142
00:06:36,319 --> 00:06:38,560
so uh there are a number of ways now the

143
00:06:38,560 --> 00:06:41,039
one that we've discussed really is uh

144
00:06:41,039 --> 00:06:44,639
hss lms now we have a research paper uh

145
00:06:44,639 --> 00:06:47,280
which is linked at the bottom there um

146
00:06:47,280 --> 00:06:48,400
which

147
00:06:48,400 --> 00:06:51,039
has some details on exactly how this

148
00:06:51,039 --> 00:06:53,759
would be configured and what kind of

149
00:06:53,759 --> 00:06:55,360
implications it has

150
00:06:55,360 --> 00:06:58,880
so uh comparing ecdsa to hss lms with

151
00:06:58,880 --> 00:07:00,880
the parameters that were selected for

152
00:07:00,880 --> 00:07:03,280
that particular research paper

153
00:07:03,280 --> 00:07:06,080
we see two fifths verification time

154
00:07:06,080 --> 00:07:10,000
and 74 times the signature size

155
00:07:10,000 --> 00:07:12,560
one and a half times the stack size

156
00:07:12,560 --> 00:07:14,319
double the code size

157
00:07:14,319 --> 00:07:16,800
and i think that the key

158
00:07:16,800 --> 00:07:19,520
question here is whether a 74 times

159
00:07:19,520 --> 00:07:22,000
signature size is acceptable

160
00:07:22,000 --> 00:07:24,800
um this is four kilobytes just for

161
00:07:24,800 --> 00:07:27,039
putting a concrete number on it

162
00:07:27,039 --> 00:07:28,960
um

163
00:07:28,960 --> 00:07:31,120
there's another parameterization

164
00:07:31,120 --> 00:07:34,240
obviously uh where we could do the w8

165
00:07:34,240 --> 00:07:37,520
parameter rather than the w4 that drops

166
00:07:37,520 --> 00:07:40,880
the signature size to i think 1280 bytes

167
00:07:40,880 --> 00:07:41,919
um

168
00:07:41,919 --> 00:07:44,400
but i'm expecting a much higher

169
00:07:44,400 --> 00:07:46,639
verification time because there's a lot

170
00:07:46,639 --> 00:07:48,639
more hashes that have to be done

171
00:07:48,639 --> 00:07:51,360
so the question is can we realistically

172
00:07:51,360 --> 00:07:54,080
expect this from bootloaders

173
00:07:54,080 --> 00:07:55,520
and i'm not sure there's a clear-cut

174
00:07:55,520 --> 00:07:58,319
answer on that

175
00:07:58,319 --> 00:08:00,960
it may be that we have to specify that

176
00:08:00,960 --> 00:08:02,160
this is only

177
00:08:02,160 --> 00:08:04,560
a requirement for update clients

178
00:08:04,560 --> 00:08:05,680
i'm not sure

179
00:08:05,680 --> 00:08:08,400
next slide please

180
00:08:10,560 --> 00:08:13,599
um there is an alternative uh falcon 512

181
00:08:13,599 --> 00:08:15,919
actually looks pretty good

182
00:08:15,919 --> 00:08:18,240
um it doesn't have the same kind of key

183
00:08:18,240 --> 00:08:20,800
management overhead uh the signature

184
00:08:20,800 --> 00:08:23,199
size is smaller than all of the hss lms

185
00:08:23,199 --> 00:08:26,720
implementations and it is incredibly

186
00:08:26,720 --> 00:08:27,840
fast

187
00:08:27,840 --> 00:08:30,240
um it does require a fair bit of ram

188
00:08:30,240 --> 00:08:32,559
around four kilobytes based on the

189
00:08:32,559 --> 00:08:34,559
aforementioned research paper the real

190
00:08:34,559 --> 00:08:36,479
issue is the code size which is looking

191
00:08:36,479 --> 00:08:39,440
at about 57 kilobytes just to implement

192
00:08:39,440 --> 00:08:41,360
that one signature algorithm and it's

193
00:08:41,360 --> 00:08:43,839
not yet accepted by nist though it is in

194
00:08:43,839 --> 00:08:46,560
the final round so there's a possibility

195
00:08:46,560 --> 00:08:48,880
there maybe someone will come up with a

196
00:08:48,880 --> 00:08:50,959
better code size implementation i don't

197
00:08:50,959 --> 00:08:54,240
know i'm not sure what's driving that

198
00:08:54,240 --> 00:08:57,040
next slide please

199
00:08:58,720 --> 00:09:01,279
the next question is crypto agility now

200
00:09:01,279 --> 00:09:02,959
that's quite plausible for update

201
00:09:02,959 --> 00:09:04,000
clients

202
00:09:04,000 --> 00:09:06,000
um

203
00:09:06,000 --> 00:09:09,440
within the uh the constraint that they

204
00:09:09,440 --> 00:09:11,920
will have to over specify hardware

205
00:09:11,920 --> 00:09:13,120
or implementers will have to over

206
00:09:13,120 --> 00:09:14,480
specify hardware

207
00:09:14,480 --> 00:09:16,560
and essentially be planning for this

208
00:09:16,560 --> 00:09:18,320
from the get-go

209
00:09:18,320 --> 00:09:20,880
um however it's not plausible to have

210
00:09:20,880 --> 00:09:24,240
crypto agility in a non-updatable code

211
00:09:24,240 --> 00:09:26,160
so how do we handle stage zero boot

212
00:09:26,160 --> 00:09:28,880
loaders um is that just a different

213
00:09:28,880 --> 00:09:31,760
requirement um we

214
00:09:31,760 --> 00:09:34,160
we need to essentially say where our

215
00:09:34,160 --> 00:09:36,640
crypto agility mandate ends

216
00:09:36,640 --> 00:09:38,720
um and i guess the final question is do

217
00:09:38,720 --> 00:09:41,279
we advocate for dual signature the idea

218
00:09:41,279 --> 00:09:43,360
there is that you use a

219
00:09:43,360 --> 00:09:47,040
classical signature algorithm for the

220
00:09:47,040 --> 00:09:50,880
bootloader but you use uh pqc algorithm

221
00:09:50,880 --> 00:09:54,240
for the update client itself

222
00:09:55,120 --> 00:09:57,279
next slide please

223
00:09:57,279 --> 00:09:58,800
that's the last line i think that's it

224
00:09:58,800 --> 00:10:03,000
yeah that's it so uh discussion

225
00:10:09,760 --> 00:10:12,399
david brown

226
00:10:16,079 --> 00:10:17,440
am i on

227
00:10:17,440 --> 00:10:18,640
yes

228
00:10:18,640 --> 00:10:20,000
all right so

229
00:10:20,000 --> 00:10:21,360
i guess the only comment i would make

230
00:10:21,360 --> 00:10:23,920
about something like 57 kilobytes of

231
00:10:23,920 --> 00:10:25,120
code

232
00:10:25,120 --> 00:10:28,160
is like several times larger than npu

233
00:10:28,160 --> 00:10:30,079
boot is currently

234
00:10:30,079 --> 00:10:30,880
and

235
00:10:30,880 --> 00:10:33,360
that's not going to work for

236
00:10:33,360 --> 00:10:34,720
i mean

237
00:10:34,720 --> 00:10:37,040
we can declare something as mandatory

238
00:10:37,040 --> 00:10:37,760
but

239
00:10:37,760 --> 00:10:39,839
realistically they're going to be config

240
00:10:39,839 --> 00:10:42,000
options and people won't select them

241
00:10:42,000 --> 00:10:43,120
if they aren't going to fit in their

242
00:10:43,120 --> 00:10:44,720
device

243
00:10:44,720 --> 00:10:46,800
so i kind of wonder what mandatory is

244
00:10:46,800 --> 00:10:49,920
going to realistically mean

245
00:10:49,920 --> 00:10:51,360
yeah you're absolutely right david and

246
00:10:51,360 --> 00:10:52,480
that's exactly what i'm trying to

247
00:10:52,480 --> 00:10:54,480
highlight here is that when we talk

248
00:10:54,480 --> 00:10:56,320
about mandatory to implement in the

249
00:10:56,320 --> 00:10:59,120
bootloader we need to be really clear on

250
00:10:59,120 --> 00:11:00,959
whether it's even plausible in the first

251
00:11:00,959 --> 00:11:03,279
place

252
00:11:04,480 --> 00:11:06,720
so brandon i had a question about that

253
00:11:06,720 --> 00:11:07,920
that

254
00:11:07,920 --> 00:11:11,040
code was that a verify only

255
00:11:11,040 --> 00:11:12,560
implementation

256
00:11:12,560 --> 00:11:14,560
because i would expect that to get much

257
00:11:14,560 --> 00:11:15,519
smaller

258
00:11:15,519 --> 00:11:17,680
sorry uh which code um

259
00:11:17,680 --> 00:11:19,839
the code size is that for

260
00:11:19,839 --> 00:11:22,399
generating signatures or validating

261
00:11:22,399 --> 00:11:24,160
signatures or both

262
00:11:24,160 --> 00:11:26,160
sorry i i appreciate that the question

263
00:11:26,160 --> 00:11:29,040
was are you talking about the falcon or

264
00:11:29,040 --> 00:11:30,800
the hss lms

265
00:11:30,800 --> 00:11:32,959
i'd be interested in both but

266
00:11:32,959 --> 00:11:36,399
um um well on that one if if he's on the

267
00:11:36,399 --> 00:11:38,560
call i will defer to either or

268
00:11:38,560 --> 00:11:40,079
emmanuel since it was their research

269
00:11:40,079 --> 00:11:43,839
paper that i pulled this out of

270
00:11:48,079 --> 00:11:51,360
go ahead a manual and then harness

271
00:11:51,360 --> 00:11:55,440
i yeah emmanuel here um

272
00:11:55,440 --> 00:11:58,720
so uh yeah it's it's it's for both uh

273
00:11:58,720 --> 00:12:00,079
signing and

274
00:12:00,079 --> 00:12:02,480
and uh verifying

275
00:12:02,480 --> 00:12:06,240
and so uh we definitely uh you know

276
00:12:06,240 --> 00:12:09,279
these are our numbers we got with

277
00:12:09,279 --> 00:12:12,399
a an implementation that we made as much

278
00:12:12,399 --> 00:12:13,920
as possible

279
00:12:13,920 --> 00:12:14,880
uh

280
00:12:14,880 --> 00:12:17,440
embedded friendly but

281
00:12:17,440 --> 00:12:18,880
there are probably

282
00:12:18,880 --> 00:12:20,880
ways to improve that and we're actually

283
00:12:20,880 --> 00:12:22,320
working on that

284
00:12:22,320 --> 00:12:23,600
right now

285
00:12:23,600 --> 00:12:24,880
we don't have

286
00:12:24,880 --> 00:12:27,360
the results for that but i expect we can

287
00:12:27,360 --> 00:12:28,959
i mean as russ said we can do slightly

288
00:12:28,959 --> 00:12:31,440
better uh there are some stuff which

289
00:12:31,440 --> 00:12:33,279
i think won't get better like the

290
00:12:33,279 --> 00:12:35,200
signature sides and things like that

291
00:12:35,200 --> 00:12:36,720
uh but

292
00:12:36,720 --> 00:12:39,920
it might be that uh and there are like

293
00:12:39,920 --> 00:12:42,000
more embedded friendly implementation

294
00:12:42,000 --> 00:12:44,160
out there how how much more friendly

295
00:12:44,160 --> 00:12:45,680
that is gonna be

296
00:12:45,680 --> 00:12:48,880
i don't know uh but um russ is right

297
00:12:48,880 --> 00:12:51,600
that there's probably like

298
00:12:51,600 --> 00:12:53,440
some some some level of improvement

299
00:12:53,440 --> 00:12:56,160
that's possible here

300
00:12:56,160 --> 00:12:58,160
okay that's that's good information um

301
00:12:58,160 --> 00:13:00,079
my my understanding from having looked

302
00:13:00,079 --> 00:13:02,639
at this a bit before was that that um

303
00:13:02,639 --> 00:13:05,440
that 57k in particular seemed very large

304
00:13:05,440 --> 00:13:08,560
compared to what i saw on the

305
00:13:08,560 --> 00:13:09,680
um

306
00:13:09,680 --> 00:13:10,959
on the site

307
00:13:10,959 --> 00:13:12,959
uh the falcon sign

308
00:13:12,959 --> 00:13:15,680
site and i thought that it was possible

309
00:13:15,680 --> 00:13:17,839
to do smaller than that but i i took you

310
00:13:17,839 --> 00:13:19,760
at your word so i'd be like very

311
00:13:19,760 --> 00:13:22,639
interested to hear what the verify only

312
00:13:22,639 --> 00:13:25,760
sizes look like

313
00:13:28,720 --> 00:13:31,360
yes me as well go ahead hollis

314
00:13:31,360 --> 00:13:33,279
hi

315
00:13:33,279 --> 00:13:33,839
yeah i um

316
00:13:33,839 --> 00:13:35,279
i wonder whether it's possible to get

317
00:13:35,279 --> 00:13:37,440
away without specifying a mandatory to

318
00:13:37,440 --> 00:13:39,600
implement in this case because as

319
00:13:39,600 --> 00:13:41,440
friends said like there are different

320
00:13:41,440 --> 00:13:44,639
pieces in this um or software components

321
00:13:44,639 --> 00:13:46,560
in this whole um

322
00:13:46,560 --> 00:13:48,480
sort of picture you have obviously the

323
00:13:48,480 --> 00:13:51,680
stage zero bootloader or the

324
00:13:51,680 --> 00:13:53,440
like the the one that is kind of the the

325
00:13:53,440 --> 00:13:54,880
root of trust

326
00:13:54,880 --> 00:13:56,079
and uh

327
00:13:56,079 --> 00:13:58,560
that's one thing but then you have um

328
00:13:58,560 --> 00:14:01,519
maybe other stages um you know in a more

329
00:14:01,519 --> 00:14:04,000
complex system you also have uh the

330
00:14:04,000 --> 00:14:06,800
update client which which also has some

331
00:14:06,800 --> 00:14:08,399
some code in there

332
00:14:08,399 --> 00:14:10,000
and and of course it will depend a

333
00:14:10,000 --> 00:14:13,199
little bit on on the specific deployment

334
00:14:13,199 --> 00:14:15,600
case uh like how long these devices are

335
00:14:15,600 --> 00:14:17,920
supposed to be out in the field

336
00:14:17,920 --> 00:14:19,920
and so how can we

337
00:14:19,920 --> 00:14:22,480
make generic recommendations um given

338
00:14:22,480 --> 00:14:24,800
that the this competition also hasn't

339
00:14:24,800 --> 00:14:26,639
been completed yet

340
00:14:26,639 --> 00:14:28,320
and so on and so on so

341
00:14:28,320 --> 00:14:30,959
like do we really need to

342
00:14:30,959 --> 00:14:33,040
sort of like can't we table that and

343
00:14:33,040 --> 00:14:34,399
maybe have

344
00:14:34,399 --> 00:14:37,440
um profiles later on for example say a

345
00:14:37,440 --> 00:14:40,240
specific deployment um sort of setup

346
00:14:40,240 --> 00:14:42,880
that has uh let's say a combination of

347
00:14:42,880 --> 00:14:44,399
different stages of bootloaders and

348
00:14:44,399 --> 00:14:45,920
firmware update client and so on and

349
00:14:45,920 --> 00:14:46,800
have

350
00:14:46,800 --> 00:14:48,639
have for those a recommendation versus

351
00:14:48,639 --> 00:14:50,480
something that is um sort of very

352
00:14:50,480 --> 00:14:52,720
simplistic short-lived etc or shorter

353
00:14:52,720 --> 00:14:53,600
lift

354
00:14:53,600 --> 00:14:55,440
a different um

355
00:14:55,440 --> 00:14:58,760
sort of story

356
00:15:06,720 --> 00:15:08,560
hannah it's just a clarifying question

357
00:15:08,560 --> 00:15:10,320
are you suggesting that maybe we treat

358
00:15:10,320 --> 00:15:14,000
this in security considerations then

359
00:15:14,000 --> 00:15:15,279
leave it up to

360
00:15:15,279 --> 00:15:17,440
additional work

361
00:15:17,440 --> 00:15:19,279
yeah maybe to do

362
00:15:19,279 --> 00:15:21,360
more or less

363
00:15:21,360 --> 00:15:23,120
describe the challenge that someone

364
00:15:23,120 --> 00:15:25,680
deploying a firmware update mechanism

365
00:15:25,680 --> 00:15:28,000
has to go through like they have to

366
00:15:28,000 --> 00:15:30,320
um sort of figure out for themselves on

367
00:15:30,320 --> 00:15:33,040
like how long are my devices going to be

368
00:15:33,040 --> 00:15:34,880
out in the field um

369
00:15:34,880 --> 00:15:38,480
is uh post quantum sort of

370
00:15:38,480 --> 00:15:40,480
the post the emergence of these

371
00:15:40,480 --> 00:15:42,240
computers um

372
00:15:42,240 --> 00:15:44,639
is that a problem for me or do i

373
00:15:44,639 --> 00:15:46,399
consider it an important how how much

374
00:15:46,399 --> 00:15:48,160
space do i have for the device and so on

375
00:15:48,160 --> 00:15:49,680
and so on

376
00:15:49,680 --> 00:15:52,560
do i need encryption uh for my firmware

377
00:15:52,560 --> 00:15:55,680
etc etc like or how is my whole software

378
00:15:55,680 --> 00:15:59,439
architecture sort of laid out

379
00:16:00,160 --> 00:16:01,680
so i'm going to jump in and

380
00:16:01,680 --> 00:16:03,600
respond to that since nobody else is in

381
00:16:03,600 --> 00:16:04,720
queue

382
00:16:04,720 --> 00:16:08,000
right now my prediction would be that um

383
00:16:08,000 --> 00:16:09,920
if i were to look into a crystal ball

384
00:16:09,920 --> 00:16:12,959
that uh it might not pass uh iesg review

385
00:16:12,959 --> 00:16:14,720
if it didn't actually have you know

386
00:16:14,720 --> 00:16:16,240
mandatory to implement stuff because you

387
00:16:16,240 --> 00:16:17,920
would not have an interoperable spec per

388
00:16:17,920 --> 00:16:20,560
say if you required a uh profile that

389
00:16:20,560 --> 00:16:23,040
didn't exist in our fc forum to actually

390
00:16:23,040 --> 00:16:25,839
uh interoperate and so i'm not sure that

391
00:16:25,839 --> 00:16:27,440
it would actually save us any time to

392
00:16:27,440 --> 00:16:29,839
the rfc process to try to split it out

393
00:16:29,839 --> 00:16:31,040
it's a good question you're making me

394
00:16:31,040 --> 00:16:32,320
think about it but that's my guess right

395
00:16:32,320 --> 00:16:35,320
now

396
00:16:40,959 --> 00:16:43,519
go ahead emmanuel

397
00:16:43,519 --> 00:16:44,320
yes

398
00:16:44,320 --> 00:16:47,040
so uh i think that this question was

399
00:16:47,040 --> 00:16:51,120
raised uh because uh we wanted to make

400
00:16:51,120 --> 00:16:54,000
uh lms mandatory to implement right

401
00:16:54,000 --> 00:16:55,680
where there are like some questions

402
00:16:55,680 --> 00:16:59,279
about like is is that like today

403
00:16:59,279 --> 00:17:01,440
uh something that people are going to be

404
00:17:01,440 --> 00:17:02,839
able to do

405
00:17:02,839 --> 00:17:06,959
um and so so the question is not like uh

406
00:17:06,959 --> 00:17:09,839
do we want to have nti uh or not it's

407
00:17:09,839 --> 00:17:11,919
like what do we put into it yeah

408
00:17:11,919 --> 00:17:13,839
right now i think

409
00:17:13,839 --> 00:17:16,480
that was the discussion and we observed

410
00:17:16,480 --> 00:17:20,160
that we had this post-quantum

411
00:17:20,319 --> 00:17:21,280
hm

412
00:17:21,280 --> 00:17:23,039
hss lms

413
00:17:23,039 --> 00:17:25,839
opportunity which would allow us to have

414
00:17:25,839 --> 00:17:28,640
a transition to other algorithms under

415
00:17:28,640 --> 00:17:31,520
the protection of a post-quantum safe

416
00:17:31,520 --> 00:17:34,400
algorithm so

417
00:17:35,280 --> 00:17:37,760
yes it's a huge signature but firmware

418
00:17:37,760 --> 00:17:39,520
loads are usually not

419
00:17:39,520 --> 00:17:42,240
small in there in the

420
00:17:42,240 --> 00:17:44,400
first place so this is a place where you

421
00:17:44,400 --> 00:17:47,679
could amaterize a large signature

422
00:17:47,679 --> 00:17:51,679
i'm surprised about the code size

423
00:17:57,760 --> 00:17:59,600
okay i think we need to continue this on

424
00:17:59,600 --> 00:18:00,400
the list

425
00:18:00,400 --> 00:18:03,360
oh we have a new new person thank you go

426
00:18:03,360 --> 00:18:05,600
ahead

427
00:18:06,320 --> 00:18:08,000
so uh

428
00:18:08,000 --> 00:18:11,360
we i just wanted to relay we had a few

429
00:18:11,360 --> 00:18:13,520
other points of

430
00:18:13,520 --> 00:18:17,039
concern about the hss lms uh one of them

431
00:18:17,039 --> 00:18:18,080
is

432
00:18:18,080 --> 00:18:21,679
that since it is not uh part of any of

433
00:18:21,679 --> 00:18:22,559
the

434
00:18:22,559 --> 00:18:25,280
like big standardized libraries there is

435
00:18:25,280 --> 00:18:28,320
a greater risk that

436
00:18:28,320 --> 00:18:30,799
we don't know when we use it whether it

437
00:18:30,799 --> 00:18:34,000
will have support whether

438
00:18:34,000 --> 00:18:36,080
security issues will be

439
00:18:36,080 --> 00:18:38,000
will be handled and

440
00:18:38,000 --> 00:18:39,600
fixed

441
00:18:39,600 --> 00:18:41,600
in the future

442
00:18:41,600 --> 00:18:44,159
and also

443
00:18:45,840 --> 00:18:48,159
that

444
00:18:49,120 --> 00:18:51,840
sorry i'm blanking

445
00:18:52,400 --> 00:18:57,320
well that's at least one of them but um

446
00:18:57,760 --> 00:19:00,640
uh yeah

447
00:19:00,640 --> 00:19:03,280
i i couldn't remember sorry

448
00:19:03,280 --> 00:19:07,120
go ahead thank you brandon

449
00:19:08,000 --> 00:19:10,559
i just wanted to respond to the comment

450
00:19:10,559 --> 00:19:12,640
that firmware loads are huge uh while

451
00:19:12,640 --> 00:19:15,200
that may be the case for a

452
00:19:15,200 --> 00:19:18,320
full image update uh that does ignore

453
00:19:18,320 --> 00:19:21,280
that it's absolutely possible to do

454
00:19:21,280 --> 00:19:23,440
differential updates that are small and

455
00:19:23,440 --> 00:19:25,520
it's also possible to do

456
00:19:25,520 --> 00:19:28,400
uh small asset updates that aren't the

457
00:19:28,400 --> 00:19:30,640
entire firmware image so

458
00:19:30,640 --> 00:19:32,960
i i don't think it's fair to say that

459
00:19:32,960 --> 00:19:36,160
amortizing a kilobyte or four kilobytes

460
00:19:36,160 --> 00:19:39,360
of uh signature size across a firmware

461
00:19:39,360 --> 00:19:41,120
load is necessarily going to get lost in

462
00:19:41,120 --> 00:19:43,360
the noise i think that very much depends

463
00:19:43,360 --> 00:19:45,440
on the use case and on

464
00:19:45,440 --> 00:19:47,440
um on exactly what kind of compression

465
00:19:47,440 --> 00:19:49,200
you're using

466
00:19:49,200 --> 00:19:51,200
and just to put some concrete numbers on

467
00:19:51,200 --> 00:19:53,520
this the energy that it takes to

468
00:19:53,520 --> 00:19:57,120
transmit a byte of firmware

469
00:19:57,120 --> 00:19:59,760
over a lora network is i think on the

470
00:19:59,760 --> 00:20:02,640
order of 80 times the amount of energy

471
00:20:02,640 --> 00:20:04,640
that it takes to write it to flash so

472
00:20:04,640 --> 00:20:07,200
when it comes to saving energy on low

473
00:20:07,200 --> 00:20:11,200
power uh remote nodes the firmware size

474
00:20:11,200 --> 00:20:13,679
is absolute like over the wire is

475
00:20:13,679 --> 00:20:16,720
absolutely crucial

476
00:20:18,080 --> 00:20:19,440
good point

477
00:20:19,440 --> 00:20:21,280
um

478
00:20:21,280 --> 00:20:24,400
i think emmanuel's next and then thomas

479
00:20:24,400 --> 00:20:27,039
yeah so um i wanted to

480
00:20:27,039 --> 00:20:30,400
uh also um

481
00:20:30,400 --> 00:20:33,200
violently agree with uh

482
00:20:33,200 --> 00:20:35,200
with brandon here uh we detail like

483
00:20:35,200 --> 00:20:36,159
different

484
00:20:36,159 --> 00:20:40,400
different cases uh in this um uh paper

485
00:20:40,400 --> 00:20:43,440
that uh um

486
00:20:43,440 --> 00:20:46,159
brendan was uh was citing uh where you

487
00:20:46,159 --> 00:20:48,799
see the impact of something like lms in

488
00:20:48,799 --> 00:20:52,080
terms of signature size uh on on the

489
00:20:52,080 --> 00:20:54,000
data you need to transmit over the

490
00:20:54,000 --> 00:20:55,520
network depending on what you're

491
00:20:55,520 --> 00:20:57,760
actually updating obviously

492
00:20:57,760 --> 00:20:59,760
and there are different sizes indeed

493
00:20:59,760 --> 00:21:00,960
where

494
00:21:00,960 --> 00:21:02,720
where 4k is a lot

495
00:21:02,720 --> 00:21:05,200
that said so we um

496
00:21:05,200 --> 00:21:06,480
we are

497
00:21:06,480 --> 00:21:07,919
working on

498
00:21:07,919 --> 00:21:09,600
a uh

499
00:21:09,600 --> 00:21:12,720
improved implementation of lms um

500
00:21:12,720 --> 00:21:16,720
with our colleagues uh at interior

501
00:21:16,720 --> 00:21:20,400
who are crypto specialists um and uh so

502
00:21:20,400 --> 00:21:22,799
we are we're going to follow up on this

503
00:21:22,799 --> 00:21:25,520
on this paper with um with some more

504
00:21:25,520 --> 00:21:27,600
work uh and hopefully we can actually

505
00:21:27,600 --> 00:21:28,880
bring some of these some of these

506
00:21:28,880 --> 00:21:31,200
numbers down not the signature size but

507
00:21:31,200 --> 00:21:33,679
others at least uh that's that's our

508
00:21:33,679 --> 00:21:37,039
hope and so uh stay tuned on this and

509
00:21:37,039 --> 00:21:38,240
we'll get back

510
00:21:38,240 --> 00:21:39,919
as soon as we can on this

511
00:21:39,919 --> 00:21:42,159
thanks

512
00:21:42,240 --> 00:21:44,480
thank you hollis

513
00:21:44,480 --> 00:21:47,120
yeah i wonder um we wanted to

514
00:21:47,120 --> 00:21:49,440
finalize the suit um specification and

515
00:21:49,440 --> 00:21:51,360
manufacture specification rather soon so

516
00:21:51,360 --> 00:21:53,600
i wonder like what are really

517
00:21:53,600 --> 00:21:56,480
realistically the options uh besides

518
00:21:56,480 --> 00:21:59,200
hssm lms um

519
00:21:59,200 --> 00:22:01,280
because i don't think it would be it

520
00:22:01,280 --> 00:22:03,679
would be wise to pick something that uh

521
00:22:03,679 --> 00:22:05,200
from the nist competition which hasn't

522
00:22:05,200 --> 00:22:07,039
been finalized yet

523
00:22:07,039 --> 00:22:09,280
let alone that obviously there's even

524
00:22:09,280 --> 00:22:11,039
less code available

525
00:22:11,039 --> 00:22:13,360
um so that may be

526
00:22:13,360 --> 00:22:15,039
maybe a little bit of a

527
00:22:15,039 --> 00:22:17,760
unfortunate uh

528
00:22:17,760 --> 00:22:21,200
um situation in the end

529
00:22:22,880 --> 00:22:25,280
i think that the choices are kind of

530
00:22:25,280 --> 00:22:27,840
limited right

531
00:22:28,799 --> 00:22:31,360
it sounds to me like we have a

532
00:22:31,360 --> 00:22:34,480
timing problem here right that there's

533
00:22:34,480 --> 00:22:40,080
desire to make hhs lms work but um

534
00:22:40,080 --> 00:22:41,280
we haven't had enough time for

535
00:22:41,280 --> 00:22:44,400
implementation to kind of catch up

536
00:22:44,400 --> 00:22:46,000
um one of the things that we did in

537
00:22:46,000 --> 00:22:48,159
ipsec me

538
00:22:48,159 --> 00:22:50,960
you know was we had a separate um

539
00:22:50,960 --> 00:22:52,640
algorithm draft

540
00:22:52,640 --> 00:22:53,679
that we

541
00:22:53,679 --> 00:22:56,240
would work on um and update over time

542
00:22:56,240 --> 00:22:58,480
and we use things like

543
00:22:58,480 --> 00:23:01,520
must minus or should plus um as a way to

544
00:23:01,520 --> 00:23:02,720
signal

545
00:23:02,720 --> 00:23:04,960
a desire to

546
00:23:04,960 --> 00:23:06,799
advance or

547
00:23:06,799 --> 00:23:09,919
or retract um specific algorithms over

548
00:23:09,919 --> 00:23:12,480
time as a way to kind of signal

549
00:23:12,480 --> 00:23:14,960
to the implementation base

550
00:23:14,960 --> 00:23:18,080
um the direction that the

551
00:23:18,080 --> 00:23:20,960
standard was going um

552
00:23:20,960 --> 00:23:22,720
maybe we could do something like that

553
00:23:22,720 --> 00:23:26,159
here as a way to

554
00:23:26,159 --> 00:23:29,600
you know to break the logjam

555
00:23:29,600 --> 00:23:33,320
any thoughts on that

556
00:23:40,559 --> 00:23:42,400
um

557
00:23:42,400 --> 00:23:44,559
no thoughts on that sorry i just want to

558
00:23:44,559 --> 00:23:46,799
update uh on the

559
00:23:46,799 --> 00:23:49,840
local numbers okay so if there's anyone

560
00:23:49,840 --> 00:23:52,159
who wants to respond to

561
00:23:52,159 --> 00:23:54,400
uh

562
00:23:54,880 --> 00:23:57,360
what we just said uh the please go ahead

563
00:23:57,360 --> 00:24:00,360
first

564
00:24:05,200 --> 00:24:08,799
so you say 10k for falcon verification

565
00:24:08,799 --> 00:24:11,039
did you look at hms

566
00:24:11,039 --> 00:24:15,200
uh hss lms um

567
00:24:17,600 --> 00:24:20,400
so what i just did uh to get the numbers

568
00:24:20,400 --> 00:24:24,320
was quickly take the benchmark the test

569
00:24:24,320 --> 00:24:26,799
application we have for falcon comment

570
00:24:26,799 --> 00:24:28,480
out anything that's related to key

571
00:24:28,480 --> 00:24:30,960
generation and signing

572
00:24:30,960 --> 00:24:34,720
and wrap the numbers from the elf file

573
00:24:34,720 --> 00:24:36,640
uh that take up the falcon bits and

574
00:24:36,640 --> 00:24:40,000
that's around 10k so

575
00:24:40,000 --> 00:24:42,000
that's for falcon probably what you have

576
00:24:42,000 --> 00:24:43,279
to work with

577
00:24:43,279 --> 00:24:45,360
for this implementation if you want to

578
00:24:45,360 --> 00:24:49,039
have the bootloader added

579
00:24:50,480 --> 00:24:52,720
thank you topple

580
00:24:52,720 --> 00:24:55,760
yeah i can get your numbers for hss lms

581
00:24:55,760 --> 00:24:58,559
but that takes around a similar amount

582
00:24:58,559 --> 00:25:02,080
of time for me to get those

583
00:25:02,400 --> 00:25:04,880
okay thank you

584
00:25:04,880 --> 00:25:06,240
okay

585
00:25:06,240 --> 00:25:07,360
harness

586
00:25:07,360 --> 00:25:10,559
um yeah i like i like the idea that

587
00:25:10,559 --> 00:25:12,159
david just raised

588
00:25:12,159 --> 00:25:14,080
but the problem is it sounds like a

589
00:25:14,080 --> 00:25:16,400
little bit to what um dave taylor was

590
00:25:16,400 --> 00:25:18,320
previously referring to because we

591
00:25:18,320 --> 00:25:21,679
basically then have no mdi in the

592
00:25:21,679 --> 00:25:23,679
manifest specification move that the

593
00:25:23,679 --> 00:25:26,320
separate algorithm draft but then

594
00:25:26,320 --> 00:25:28,480
presumably um they would have to go

595
00:25:28,480 --> 00:25:30,080
together right

596
00:25:30,080 --> 00:25:32,640
while there is a benefit of having

597
00:25:32,640 --> 00:25:35,279
the ability to update um

598
00:25:35,279 --> 00:25:37,279
that algorithm draft independently

599
00:25:37,279 --> 00:25:39,919
without sort of revising the manifest

600
00:25:39,919 --> 00:25:42,799
specification which has um

601
00:25:42,799 --> 00:25:45,279
is attractive to me but i think it will

602
00:25:45,279 --> 00:25:48,159
not uh sort of like really

603
00:25:48,159 --> 00:25:50,480
um

604
00:25:50,559 --> 00:25:52,400
allow us to get us off the hook of the

605
00:25:52,400 --> 00:25:54,720
question of what mti is because even so

606
00:25:54,720 --> 00:25:56,799
i haven't looked at that ipsec but

607
00:25:56,799 --> 00:25:58,000
presumably

608
00:25:58,000 --> 00:26:00,159
it also has an mdi version in there

609
00:26:00,159 --> 00:26:02,400
right

610
00:26:05,600 --> 00:26:07,840
this has been done for lots of

611
00:26:07,840 --> 00:26:10,159
protocols to separate the algorithms out

612
00:26:10,159 --> 00:26:11,919
just so they can be

613
00:26:11,919 --> 00:26:14,480
revved over time without changing the

614
00:26:14,480 --> 00:26:16,080
protocol spec

615
00:26:16,080 --> 00:26:18,320
s mime ipsec

616
00:26:18,320 --> 00:26:21,279
um tls lots of them do it

617
00:26:21,279 --> 00:26:24,400
but the tls doesn't

618
00:26:33,360 --> 00:26:35,360
registry with the recommended not

619
00:26:35,360 --> 00:26:37,679
recommended thing yeah

620
00:26:37,679 --> 00:26:40,559
now i i like that idea um

621
00:26:40,559 --> 00:26:42,880
but uh even even then like

622
00:26:42,880 --> 00:26:45,360
would it make sense to let's say

623
00:26:45,360 --> 00:26:46,640
um

624
00:26:46,640 --> 00:26:47,520
have

625
00:26:47,520 --> 00:26:51,120
ecdsa india as uh for example currently

626
00:26:51,120 --> 00:26:53,520
as the must and uh i've recommended or

627
00:26:53,520 --> 00:26:56,159
should for hss lms uh

628
00:26:56,159 --> 00:26:58,400
and then as we make progress and say

629
00:26:58,400 --> 00:27:00,640
okay we can get the code size down and

630
00:27:00,640 --> 00:27:01,600
we can

631
00:27:01,600 --> 00:27:04,320
do all sorts of other investigations uh

632
00:27:04,320 --> 00:27:05,120
we

633
00:27:05,120 --> 00:27:08,240
be revisit that that document and then

634
00:27:08,240 --> 00:27:11,039
uh maybe make some other recommendations

635
00:27:11,039 --> 00:27:15,039
is that sort of the idea david

636
00:27:16,320 --> 00:27:17,600
the idea and that would allow

637
00:27:17,600 --> 00:27:19,440
implementations to catch up and we can

638
00:27:19,440 --> 00:27:21,600
make better decisions you know at some

639
00:27:21,600 --> 00:27:23,520
time down the road

640
00:27:23,520 --> 00:27:24,720
okay

641
00:27:24,720 --> 00:27:27,440
yeah i like that

642
00:27:28,799 --> 00:27:30,720
if anyone thinks that's a bad idea

643
00:27:30,720 --> 00:27:32,720
please put something in the chat or come

644
00:27:32,720 --> 00:27:35,840
to the mic

645
00:27:45,679 --> 00:27:47,200
brendan morin here

646
00:27:47,200 --> 00:27:50,080
so i think that honestly the direction

647
00:27:50,080 --> 00:27:51,919
we're gonna have to go here

648
00:27:51,919 --> 00:27:56,399
is to specify an mta mti for update

649
00:27:56,399 --> 00:28:01,080
but not specify anything for boot

650
00:28:02,480 --> 00:28:05,760
that could still be done as uh as dave

651
00:28:05,760 --> 00:28:08,080
suggested by putting it in a separate

652
00:28:08,080 --> 00:28:10,399
document that's a normative reference

653
00:28:10,399 --> 00:28:12,640
that's easier to

654
00:28:12,640 --> 00:28:13,679
change

655
00:28:13,679 --> 00:28:17,120
without ever changing the base spec

656
00:28:17,120 --> 00:28:17,919
yeah

657
00:28:17,919 --> 00:28:18,960
fair enough

658
00:28:18,960 --> 00:28:20,960
i guess what i'm trying to say here is

659
00:28:20,960 --> 00:28:22,240
that uh

660
00:28:22,240 --> 00:28:24,480
boot loaders can end up being so

661
00:28:24,480 --> 00:28:27,760
application specific that if we are too

662
00:28:27,760 --> 00:28:30,000
normative about what the boot does all

663
00:28:30,000 --> 00:28:31,679
that means is that this will not get

664
00:28:31,679 --> 00:28:33,440
used in a bootloader and will inflate

665
00:28:33,440 --> 00:28:34,960
sizes artificially because there are

666
00:28:34,960 --> 00:28:39,080
multiple manifests flying around

667
00:28:45,039 --> 00:28:47,120
okay hannes is that a new hand or an old

668
00:28:47,120 --> 00:28:49,279
one

669
00:28:55,200 --> 00:28:56,640
okay

670
00:28:56,640 --> 00:29:00,000
so um i think we have a basic direction

671
00:29:00,000 --> 00:29:02,720
uh for for brendan to

672
00:29:02,720 --> 00:29:05,600
finish this up and um

673
00:29:05,600 --> 00:29:08,559
it's very clear that we've spent

674
00:29:08,559 --> 00:29:11,039
half of the time on one document so that

675
00:29:11,039 --> 00:29:12,640
we're not going to get anywhere close to

676
00:29:12,640 --> 00:29:14,159
through this agenda

677
00:29:14,159 --> 00:29:15,039
so

678
00:29:15,039 --> 00:29:17,039
we're just going to keep going

679
00:29:17,039 --> 00:29:18,320
because i think the decisions we're

680
00:29:18,320 --> 00:29:20,240
making are important

681
00:29:20,240 --> 00:29:22,640
but we're going to be scheduling a

682
00:29:22,640 --> 00:29:25,039
virtual interim in

683
00:29:25,039 --> 00:29:28,480
a couple months so

684
00:29:28,559 --> 00:29:30,960
let's keep going uh

685
00:29:30,960 --> 00:29:33,279
brendan up next is the

686
00:29:33,279 --> 00:29:36,600
trust domains

687
00:29:41,919 --> 00:29:45,279
okay uh so there is not a lot of update

688
00:29:45,279 --> 00:29:49,600
here um this is just the uh resubmission

689
00:29:49,600 --> 00:29:50,399
of

690
00:29:50,399 --> 00:29:51,600
the

691
00:29:51,600 --> 00:29:53,760
previous individual draft as a working

692
00:29:53,760 --> 00:29:57,440
group draft next slide please

693
00:30:01,840 --> 00:30:03,919
just as a quick recap this is the

694
00:30:03,919 --> 00:30:06,480
portion now that contains

695
00:30:06,480 --> 00:30:08,799
delegation chains dependencies

696
00:30:08,799 --> 00:30:10,720
integrated dependencies multiple suit

697
00:30:10,720 --> 00:30:13,200
processors and the unlinked directive

698
00:30:13,200 --> 00:30:16,559
now this is important specifically for t

699
00:30:16,559 --> 00:30:18,080
so we want to get this one through

700
00:30:18,080 --> 00:30:20,080
quickly uh well quickly after the

701
00:30:20,080 --> 00:30:23,279
manifest primary document

702
00:30:23,279 --> 00:30:25,679
and it

703
00:30:25,679 --> 00:30:27,600
is specifically because teep depends on

704
00:30:27,600 --> 00:30:29,360
dependencies and unlink

705
00:30:29,360 --> 00:30:32,158
next slide please

706
00:30:33,679 --> 00:30:36,240
now um i say that there's no running

707
00:30:36,240 --> 00:30:38,640
code for these things but to be frankly

708
00:30:38,640 --> 00:30:41,440
honest i could well be very wrong i know

709
00:30:41,440 --> 00:30:44,559
that uh akira has been working on um

710
00:30:44,559 --> 00:30:46,559
running code which may well do all of

711
00:30:46,559 --> 00:30:48,320
this so

712
00:30:48,320 --> 00:30:49,760
when i say there's no running code i

713
00:30:49,760 --> 00:30:52,559
mean that i haven't spotted it yet um so

714
00:30:52,559 --> 00:30:54,320
if the if there is running code please

715
00:30:54,320 --> 00:30:57,440
do let me know um

716
00:30:57,440 --> 00:31:00,559
really the other thing is i'm not 100

717
00:31:00,559 --> 00:31:02,320
certain that we're using the cwts

718
00:31:02,320 --> 00:31:05,600
correctly so if there's anyone who is

719
00:31:05,600 --> 00:31:07,039
um

720
00:31:07,039 --> 00:31:09,120
who wants to review the use of key

721
00:31:09,120 --> 00:31:12,159
claims in cwt i would appreciate that

722
00:31:12,159 --> 00:31:14,320
or sorry proof of possession claims

723
00:31:14,320 --> 00:31:16,880
um and i would very much appreciate any

724
00:31:16,880 --> 00:31:19,120
contributors and especially if they come

725
00:31:19,120 --> 00:31:21,600
from teep i mean anyone is welcome but

726
00:31:21,600 --> 00:31:25,199
if they come from teep doubly so

727
00:31:29,279 --> 00:31:31,360
that's that's all i have for this

728
00:31:31,360 --> 00:31:33,840
document

729
00:31:36,720 --> 00:31:38,480
basically i'm hearing a screen for

730
00:31:38,480 --> 00:31:39,919
review

731
00:31:39,919 --> 00:31:41,360
yes please

732
00:31:41,360 --> 00:31:44,320
any comments from anyone who

733
00:31:44,320 --> 00:31:45,519
has

734
00:31:45,519 --> 00:31:47,679
either implemented or or read the

735
00:31:47,679 --> 00:31:50,159
document

736
00:31:51,760 --> 00:31:53,919
seeing nothing let's go on to the next

737
00:31:53,919 --> 00:31:54,720
one

738
00:31:54,720 --> 00:31:56,320
whoops here comes

739
00:31:56,320 --> 00:31:59,320
ken

740
00:32:06,559 --> 00:32:09,200
hi brendan

741
00:32:10,240 --> 00:32:11,600
can you hear me

742
00:32:11,600 --> 00:32:13,120
yes

743
00:32:13,120 --> 00:32:15,200
oh yeah uh

744
00:32:15,200 --> 00:32:18,720
yeah as i mentioned in the chat uh my

745
00:32:18,720 --> 00:32:22,159
lips suits support uh dependency and uh

746
00:32:22,159 --> 00:32:24,880
also integrated dependency

747
00:32:24,880 --> 00:32:27,360
uh but i'm not sure

748
00:32:27,360 --> 00:32:28,960
that there is support

749
00:32:28,960 --> 00:32:33,039
because there's no uh sample binaries

750
00:32:33,039 --> 00:32:34,080
in the

751
00:32:34,080 --> 00:32:34,799
uh

752
00:32:34,799 --> 00:32:36,240
document so

753
00:32:36,240 --> 00:32:40,320
i report are an email

754
00:32:40,880 --> 00:32:43,519
so uh please review my sample binaries

755
00:32:43,519 --> 00:32:48,080
and mr rip sisu versus behavior

756
00:32:48,720 --> 00:32:51,279
thank you ken uh i guess what that that

757
00:32:51,279 --> 00:32:53,200
really says to me is that i need to make

758
00:32:53,200 --> 00:32:54,640
sure that there are some examples in

759
00:32:54,640 --> 00:32:57,799
that draft

760
00:33:07,519 --> 00:33:09,840
okay i'm not seeing anyone else in the

761
00:33:09,840 --> 00:33:11,039
queue

762
00:33:11,039 --> 00:33:13,440
and let's go on to

763
00:33:13,440 --> 00:33:16,880
suit update management

764
00:33:16,880 --> 00:33:19,279
okay and once again this is a

765
00:33:19,279 --> 00:33:21,519
resubmission from the previous

766
00:33:21,519 --> 00:33:25,840
individual draft next slide please

767
00:33:27,120 --> 00:33:29,519
all right uh just as a refresher what

768
00:33:29,519 --> 00:33:32,320
this contains is update management

769
00:33:32,320 --> 00:33:34,880
metadata um so this

770
00:33:34,880 --> 00:33:38,799
provides information like um

771
00:33:38,799 --> 00:33:40,720
certain conditions that you might care

772
00:33:40,720 --> 00:33:43,039
about version number matching battery

773
00:33:43,039 --> 00:33:47,120
levels um expiry dates of manifests um

774
00:33:47,120 --> 00:33:49,519
an explicit check for if an image

775
00:33:49,519 --> 00:33:52,399
uh does not match something

776
00:33:52,399 --> 00:33:53,519
um an

777
00:33:53,519 --> 00:33:55,600
authorization check which could be used

778
00:33:55,600 --> 00:33:57,600
for end user approval and i think that's

779
00:33:57,600 --> 00:34:00,880
an important consideration with rfc 8890

780
00:34:00,880 --> 00:34:02,720
you want something that allows the end

781
00:34:02,720 --> 00:34:05,039
user to have some degree of control so

782
00:34:05,039 --> 00:34:07,679
that one fulfills that particular

783
00:34:07,679 --> 00:34:08,800
requirement

784
00:34:08,800 --> 00:34:09,839
and

785
00:34:09,839 --> 00:34:11,599
then there's also directives for

786
00:34:11,599 --> 00:34:14,320
managing updates like wait for event and

787
00:34:14,320 --> 00:34:16,800
metadata for non-recipients next slide

788
00:34:16,800 --> 00:34:19,800
please

789
00:34:21,280 --> 00:34:23,679
so currently we are specifying coswood

790
00:34:23,679 --> 00:34:25,760
uh which is what was available when the

791
00:34:25,760 --> 00:34:27,760
original draft was written

792
00:34:27,760 --> 00:34:30,239
but it looks to me like co-rim would be

793
00:34:30,239 --> 00:34:33,199
a much better option the problem is that

794
00:34:33,199 --> 00:34:35,359
co-rim is not a working group document

795
00:34:35,359 --> 00:34:36,159
yet

796
00:34:36,159 --> 00:34:37,839
um and

797
00:34:37,839 --> 00:34:40,079
so that that would essentially put a

798
00:34:40,079 --> 00:34:44,399
blocker on this particular draft so um

799
00:34:44,399 --> 00:34:46,960
it strikes me that it might be better to

800
00:34:46,960 --> 00:34:48,960
go ahead as it is

801
00:34:48,960 --> 00:34:50,000
and

802
00:34:50,000 --> 00:34:53,040
add another extension document later

803
00:34:53,040 --> 00:34:55,119
much as i'd rather not have so many

804
00:34:55,119 --> 00:34:56,480
extensions

805
00:34:56,480 --> 00:34:57,760
um

806
00:34:57,760 --> 00:35:00,560
it's not clear that the update

807
00:35:00,560 --> 00:35:03,440
management document is anywhere near

808
00:35:03,440 --> 00:35:05,680
comprehensive or complete

809
00:35:05,680 --> 00:35:07,760
once again if there are use cases that

810
00:35:07,760 --> 00:35:09,839
you care about i would very much

811
00:35:09,839 --> 00:35:12,160
appreciate hearing about them and

812
00:35:12,160 --> 00:35:15,119
feedback is absolutely welcome

813
00:35:15,119 --> 00:35:19,040
if you want to contribute please do

814
00:35:20,079 --> 00:35:21,520
and that's all i have for this one as

815
00:35:21,520 --> 00:35:24,520
well

816
00:35:32,400 --> 00:35:35,920
again a big call for review and

817
00:35:35,920 --> 00:35:40,040
there's going to be a common theme

818
00:35:45,760 --> 00:35:48,480
okay seeing no one joined the queue

819
00:35:48,480 --> 00:35:52,200
up next is hana

820
00:36:01,760 --> 00:36:04,400
okay next slide

821
00:36:04,400 --> 00:36:06,480
briefly talking a little bit about the

822
00:36:06,480 --> 00:36:09,119
firmware encryption so

823
00:36:09,119 --> 00:36:11,359
what what has changed since we met last

824
00:36:11,359 --> 00:36:13,280
time so there was this intra meeting in

825
00:36:13,280 --> 00:36:14,079
the

826
00:36:14,079 --> 00:36:16,240
cozy working group where we presented

827
00:36:16,240 --> 00:36:19,280
the cosy hp key draft and there the

828
00:36:19,280 --> 00:36:22,079
decision was made to change the

829
00:36:22,079 --> 00:36:23,680
underlying structure

830
00:36:23,680 --> 00:36:26,880
of the payload um needless to say that

831
00:36:26,880 --> 00:36:28,560
that had to be

832
00:36:28,560 --> 00:36:30,400
backboarded so to speak

833
00:36:30,400 --> 00:36:31,920
into

834
00:36:31,920 --> 00:36:34,880
this document um

835
00:36:34,880 --> 00:36:36,880
and i've also fixed references which

836
00:36:36,880 --> 00:36:38,839
apparently got somehow

837
00:36:38,839 --> 00:36:40,640
garbled um

838
00:36:40,640 --> 00:36:41,599
ice

839
00:36:41,599 --> 00:36:44,240
bento we spent most of our time focusing

840
00:36:44,240 --> 00:36:46,640
on progressing the cosy hb key which we

841
00:36:46,640 --> 00:36:48,880
extracted from this document or from an

842
00:36:48,880 --> 00:36:50,160
earlier version of this document and

843
00:36:50,160 --> 00:36:52,880
moved into that separate document by

844
00:36:52,880 --> 00:36:55,200
the last idf

845
00:36:55,200 --> 00:36:57,200
decision of this group

846
00:36:57,200 --> 00:36:58,160
um

847
00:36:58,160 --> 00:37:00,480
okay

848
00:37:02,640 --> 00:37:05,520
and in the meanwhile

849
00:37:05,520 --> 00:37:07,040
i had

850
00:37:07,040 --> 00:37:09,920
added code to a code to hp key to embed

851
00:37:09,920 --> 00:37:12,960
tls which you can find there i'm using

852
00:37:12,960 --> 00:37:15,520
that code in the decocy library which

853
00:37:15,520 --> 00:37:17,280
you find there and updated the code

854
00:37:17,280 --> 00:37:19,440
during the hackathon which i was

855
00:37:19,440 --> 00:37:22,079
previously referring to which uses this

856
00:37:22,079 --> 00:37:23,119
um

857
00:37:23,119 --> 00:37:24,720
the crypto adaptation layer that

858
00:37:24,720 --> 00:37:27,440
lawrence has uh added decoys he supports

859
00:37:27,440 --> 00:37:30,560
openssl and also the bsa crypto api

860
00:37:30,560 --> 00:37:32,240
which is why i had

861
00:37:32,240 --> 00:37:34,720
used the bsa crypto api

862
00:37:34,720 --> 00:37:36,800
what you will also notice when you look

863
00:37:36,800 --> 00:37:38,640
at that code is that the firmware

864
00:37:38,640 --> 00:37:40,640
encryption is for

865
00:37:40,640 --> 00:37:43,040
use with aes keywrap is not yet there

866
00:37:43,040 --> 00:37:44,960
because um

867
00:37:44,960 --> 00:37:47,920
the bsa crypto api support for the aes

868
00:37:47,920 --> 00:37:51,680
keywrap is still working progress in

869
00:37:51,680 --> 00:37:54,000
the last link here so as soon as that is

870
00:37:54,000 --> 00:37:55,520
done i will

871
00:37:55,520 --> 00:37:58,240
copy that code in there as well

872
00:37:58,240 --> 00:38:00,160
okay so there's at least something to

873
00:38:00,160 --> 00:38:01,920
look at and that's how i create the

874
00:38:01,920 --> 00:38:05,839
examples as well next slide

875
00:38:05,839 --> 00:38:08,000
so but there are some open issues still

876
00:38:08,000 --> 00:38:10,720
um not only with this document but also

877
00:38:10,720 --> 00:38:12,000
with

878
00:38:12,000 --> 00:38:13,359
the work of the

879
00:38:13,359 --> 00:38:14,880
cozy hb key

880
00:38:14,880 --> 00:38:16,560
document so we

881
00:38:16,560 --> 00:38:18,560
will have to work on or take the

882
00:38:18,560 --> 00:38:20,560
decisions that were

883
00:38:20,560 --> 00:38:22,480
made earlier this week in a cozy working

884
00:38:22,480 --> 00:38:24,640
group um

885
00:38:24,640 --> 00:38:27,119
and update this document as well

886
00:38:27,119 --> 00:38:31,040
um the examples are kind of rudimentary

887
00:38:31,040 --> 00:38:34,000
uh so they don't include uh for example

888
00:38:34,000 --> 00:38:36,480
the whole wrapper let alone the the suit

889
00:38:36,480 --> 00:38:39,280
part um sort of like this the outside

890
00:38:39,280 --> 00:38:41,760
manifest part which i would also like to

891
00:38:41,760 --> 00:38:42,720
include

892
00:38:42,720 --> 00:38:45,599
um and there's also um sort of some

893
00:38:45,599 --> 00:38:47,200
homework to be done

894
00:38:47,200 --> 00:38:49,599
when it comes to binding the context to

895
00:38:49,599 --> 00:38:52,160
the encryption itself and i want to talk

896
00:38:52,160 --> 00:38:55,119
about the last two items in the next few

897
00:38:55,119 --> 00:38:56,880
slides briefly

898
00:38:56,880 --> 00:38:59,200
okay next slide

899
00:38:59,200 --> 00:39:01,040
so this is what i mean by a more

900
00:39:01,040 --> 00:39:03,359
complete example so what you see in the

901
00:39:03,359 --> 00:39:04,800
document um

902
00:39:04,800 --> 00:39:06,960
right now is the left-hand side which

903
00:39:06,960 --> 00:39:08,720
shows this um

904
00:39:08,720 --> 00:39:11,839
cozy structure in a sort of debug format

905
00:39:11,839 --> 00:39:15,040
um with this new two-layer structure

906
00:39:15,040 --> 00:39:17,040
which is um

907
00:39:17,040 --> 00:39:18,880
which is essentially the

908
00:39:18,880 --> 00:39:21,119
sort of the the the first layer the

909
00:39:21,119 --> 00:39:23,200
first part on the top is just uh the

910
00:39:23,200 --> 00:39:26,000
regular encrypt function functionality

911
00:39:26,000 --> 00:39:27,599
cos encrypt with

912
00:39:27,599 --> 00:39:29,520
algorithm information with the nouns

913
00:39:29,520 --> 00:39:33,119
included in there detached ciphertext

914
00:39:33,119 --> 00:39:35,359
um that's the first part and then what

915
00:39:35,359 --> 00:39:37,280
follows afterwards is the recipient

916
00:39:37,280 --> 00:39:39,359
structure or the or if there are

917
00:39:39,359 --> 00:39:42,560
multiple recipients multiple recipient

918
00:39:42,560 --> 00:39:45,040
structures in that area

919
00:39:45,040 --> 00:39:47,680
and that's for example where the

920
00:39:47,680 --> 00:39:50,400
hpke goes or the aes key wrap so this is

921
00:39:50,400 --> 00:39:52,640
now unified in terms of look and feel

922
00:39:52,640 --> 00:39:55,599
which i personally like a lot

923
00:39:55,599 --> 00:39:57,040
um

924
00:39:57,040 --> 00:39:59,040
there's obviously some of the things are

925
00:39:59,040 --> 00:40:00,800
abbreviated for

926
00:40:00,800 --> 00:40:03,680
better readability so obviously the keys

927
00:40:03,680 --> 00:40:05,440
the public keys and also the encrypted

928
00:40:05,440 --> 00:40:08,800
care case would be larger

929
00:40:09,200 --> 00:40:10,960
this however needs to be in order to

930
00:40:10,960 --> 00:40:12,960
provide proper security

931
00:40:12,960 --> 00:40:15,520
um or at least the authentication part

932
00:40:15,520 --> 00:40:17,760
uh it needs to be bundled up with a sign

933
00:40:17,760 --> 00:40:20,800
so um as i try to uh

934
00:40:20,800 --> 00:40:23,760
show here graphically is that

935
00:40:23,760 --> 00:40:25,760
once you generate this cosy encrypt

936
00:40:25,760 --> 00:40:28,079
structure it gets sort of um the binary

937
00:40:28,079 --> 00:40:30,079
gets included into this payload

938
00:40:30,079 --> 00:40:31,760
structure on the right-hand side of the

939
00:40:31,760 --> 00:40:33,040
slide

940
00:40:33,040 --> 00:40:36,560
and then the the cosy sign wrapper is

941
00:40:36,560 --> 00:40:39,359
sign one rapist and use to to actually

942
00:40:39,359 --> 00:40:41,839
sign that payload

943
00:40:41,839 --> 00:40:44,079
i hope that makes sense uh so for

944
00:40:44,079 --> 00:40:46,400
example if you have uh

945
00:40:46,400 --> 00:40:46,640
um

946
00:40:46,640 --> 00:40:48,000
[Music]

947
00:40:48,000 --> 00:40:50,319
well um not for example but this this

948
00:40:50,319 --> 00:40:53,440
would be the way to be done for the uh

949
00:40:53,440 --> 00:40:55,839
for the use with the hp key when you

950
00:40:55,839 --> 00:40:58,720
uh sign it but then with key as key wrap

951
00:40:58,720 --> 00:41:00,640
when one if you have a

952
00:41:00,640 --> 00:41:03,440
shared secret um

953
00:41:03,440 --> 00:41:05,040
in this case multiple shared secrets

954
00:41:05,040 --> 00:41:06,960
then you would actually use

955
00:41:06,960 --> 00:41:08,160
the mac

956
00:41:08,160 --> 00:41:10,960
operation instead

957
00:41:10,960 --> 00:41:13,040
so that's um

958
00:41:13,040 --> 00:41:14,480
those are some of the examples that are

959
00:41:14,480 --> 00:41:16,000
still missing in the document i will add

960
00:41:16,000 --> 00:41:16,960
them

961
00:41:16,960 --> 00:41:19,280
as well based on on

962
00:41:19,280 --> 00:41:20,960
on the code i have

963
00:41:20,960 --> 00:41:23,200
okay next slide

964
00:41:23,200 --> 00:41:25,439
so

965
00:41:25,680 --> 00:41:28,160
if we actually produce that example on

966
00:41:28,160 --> 00:41:31,200
the on the previous slide there uh there

967
00:41:31,200 --> 00:41:33,599
is the sort of for the topmost part

968
00:41:33,599 --> 00:41:36,640
there is the encrypt operation

969
00:41:36,640 --> 00:41:38,800
which um for which the cosy

970
00:41:38,800 --> 00:41:41,359
specification defines that you have to

971
00:41:41,359 --> 00:41:42,800
come up with a

972
00:41:42,800 --> 00:41:45,359
structure which i copied on the screen

973
00:41:45,359 --> 00:41:47,520
this underscore structure

974
00:41:47,520 --> 00:41:50,720
which um is then used as input to the

975
00:41:50,720 --> 00:41:52,800
additional authenticated data

976
00:41:52,800 --> 00:41:55,440
for this operation

977
00:41:55,440 --> 00:41:57,200
and um

978
00:41:57,200 --> 00:41:58,480
the

979
00:41:58,480 --> 00:42:00,079
so there's some context in there namely

980
00:42:00,079 --> 00:42:02,400
the operation you are going to perform

981
00:42:02,400 --> 00:42:04,720
there's also information copied over

982
00:42:04,720 --> 00:42:05,920
from

983
00:42:05,920 --> 00:42:08,880
the protected field which is uh from for

984
00:42:08,880 --> 00:42:10,720
example on the previous

985
00:42:10,720 --> 00:42:11,680
slide

986
00:42:11,680 --> 00:42:13,040
we used

987
00:42:13,040 --> 00:42:16,720
aes gcm 128 to encrypt the firmware

988
00:42:16,720 --> 00:42:18,640
image so that would be

989
00:42:18,640 --> 00:42:19,839
put in there

990
00:42:19,839 --> 00:42:21,440
and then there's um

991
00:42:21,440 --> 00:42:23,680
in in our case there's

992
00:42:23,680 --> 00:42:26,480
no external aad here

993
00:42:26,480 --> 00:42:28,720
so this would be used and then uh

994
00:42:28,720 --> 00:42:32,000
that would be input to the regular uh

995
00:42:32,000 --> 00:42:35,520
in this case aes uh gcm 128 operation

996
00:42:35,520 --> 00:42:37,680
and uh that's what the the output would

997
00:42:37,680 --> 00:42:38,880
be

998
00:42:38,880 --> 00:42:40,400
next slide

999
00:42:40,400 --> 00:42:43,760
but there's more than that um

1000
00:42:43,760 --> 00:42:45,760
so the the courses back also talks about

1001
00:42:45,760 --> 00:42:47,520
this so-called context information

1002
00:42:47,520 --> 00:42:48,720
structure

1003
00:42:48,720 --> 00:42:51,440
and refers to sort of it as a way to

1004
00:42:51,440 --> 00:42:54,079
bind the context uh

1005
00:42:54,079 --> 00:42:56,560
or the context of the transaction uh to

1006
00:42:56,560 --> 00:42:57,520
the whole

1007
00:42:57,520 --> 00:42:58,480
sort of

1008
00:42:58,480 --> 00:43:01,040
sort of construction if you will

1009
00:43:01,040 --> 00:43:03,440
and as far as i understand it and at

1010
00:43:03,440 --> 00:43:04,400
this

1011
00:43:04,400 --> 00:43:06,480
my reading of the the cozy specification

1012
00:43:06,480 --> 00:43:09,200
is a little bit uh i'm

1013
00:43:09,200 --> 00:43:10,160
i'm still

1014
00:43:10,160 --> 00:43:11,839
learning in some sense on how to read

1015
00:43:11,839 --> 00:43:13,920
that cozy specification but

1016
00:43:13,920 --> 00:43:15,040
um

1017
00:43:15,040 --> 00:43:16,960
i understand that it's not used for k

1018
00:43:16,960 --> 00:43:18,880
aes keywrap

1019
00:43:18,880 --> 00:43:21,359
but it would be used for or it's

1020
00:43:21,359 --> 00:43:22,400
currently

1021
00:43:22,400 --> 00:43:25,359
uh used for all these um elliptic um

1022
00:43:25,359 --> 00:43:26,880
curved tiffy helmet

1023
00:43:26,880 --> 00:43:31,040
um static static or semi-static uh

1024
00:43:31,040 --> 00:43:33,599
operations and so

1025
00:43:33,599 --> 00:43:36,560
that's why i had put that um sort of a

1026
00:43:36,560 --> 00:43:38,720
way to populate that structure

1027
00:43:38,720 --> 00:43:40,880
into an earlier version of the document

1028
00:43:40,880 --> 00:43:43,119
which is now found in

1029
00:43:43,119 --> 00:43:46,240
the cosy hb key document um

1030
00:43:46,240 --> 00:43:47,280
so

1031
00:43:47,280 --> 00:43:49,599
i have spoken to a few folks during this

1032
00:43:49,599 --> 00:43:51,920
meeting about um how they interpret that

1033
00:43:51,920 --> 00:43:54,480
text in in a cozy uh specification and

1034
00:43:54,480 --> 00:43:55,760
um

1035
00:43:55,760 --> 00:43:58,319
it's not entirely clear so i'm going to

1036
00:43:58,319 --> 00:44:00,800
reach out to some of the experts here in

1037
00:44:00,800 --> 00:44:03,599
the idf for like uh cast and others

1038
00:44:03,599 --> 00:44:05,839
to find out whether my understanding is

1039
00:44:05,839 --> 00:44:09,839
is correct but um it's it's a little bit

1040
00:44:09,839 --> 00:44:12,640
uh tricky um because there's i don't

1041
00:44:12,640 --> 00:44:14,960
want to have too much redundancy here

1042
00:44:14,960 --> 00:44:16,560
because some of that information is

1043
00:44:16,560 --> 00:44:18,960
already included in the um kdf in a key

1044
00:44:18,960 --> 00:44:20,400
derivation function

1045
00:44:20,400 --> 00:44:23,200
of the hb key itself already

1046
00:44:23,200 --> 00:44:24,079
um

1047
00:44:24,079 --> 00:44:26,400
what is not included is

1048
00:44:26,400 --> 00:44:28,560
because we are using the base mode of hp

1049
00:44:28,560 --> 00:44:29,760
key

1050
00:44:29,760 --> 00:44:32,960
is the identities um so at least at the

1051
00:44:32,960 --> 00:44:35,200
minimum we would have to wrap in the

1052
00:44:35,200 --> 00:44:36,560
identities

1053
00:44:36,560 --> 00:44:39,040
um and the recipient identity itself has

1054
00:44:39,040 --> 00:44:42,000
if um actually we could go back to

1055
00:44:42,000 --> 00:44:43,839
slides to show that to see the example

1056
00:44:43,839 --> 00:44:44,880
here

1057
00:44:44,880 --> 00:44:48,160
no one another one this one yeah so if

1058
00:44:48,160 --> 00:44:49,920
you look here this obviously there's the

1059
00:44:49,920 --> 00:44:52,640
key id shows here up in two places and

1060
00:44:52,640 --> 00:44:53,920
one is for the

1061
00:44:53,920 --> 00:44:55,839
for the sender and the other one is for

1062
00:44:55,839 --> 00:44:58,319
the recipient so in the cosy encrypt

1063
00:44:58,319 --> 00:45:00,800
that contains the recipient um

1064
00:45:00,800 --> 00:45:02,640
the key id for the recipient i don't

1065
00:45:02,640 --> 00:45:05,119
know if you can scroll over them if you

1066
00:45:05,119 --> 00:45:07,680
have a way to mark things but you maybe

1067
00:45:07,680 --> 00:45:09,359
you can see that if you can go down with

1068
00:45:09,359 --> 00:45:11,280
the mouse point a little bit

1069
00:45:11,280 --> 00:45:13,680
um so as part of this recipient

1070
00:45:13,680 --> 00:45:16,240
structure there's uh the key id

1071
00:45:16,240 --> 00:45:19,119
that identifies the static elliptic

1072
00:45:19,119 --> 00:45:21,200
curve if you have in public key

1073
00:45:21,200 --> 00:45:23,920
and that would be the recipient id that

1074
00:45:23,920 --> 00:45:26,480
would be yeah exactly um

1075
00:45:26,480 --> 00:45:29,359
that would be the recipient um

1076
00:45:29,359 --> 00:45:31,520
identity included into this

1077
00:45:31,520 --> 00:45:32,720
structure

1078
00:45:32,720 --> 00:45:33,839
and

1079
00:45:33,839 --> 00:45:35,280
what is a little bit inconvenient is

1080
00:45:35,280 --> 00:45:36,160
that

1081
00:45:36,160 --> 00:45:37,760
since we have this layering of the

1082
00:45:37,760 --> 00:45:38,880
payload

1083
00:45:38,880 --> 00:45:40,800
the sender's

1084
00:45:40,800 --> 00:45:42,960
identity is actually

1085
00:45:42,960 --> 00:45:46,720
outside in this cozy sine one structure

1086
00:45:46,720 --> 00:45:49,040
but that's how it is

1087
00:45:49,040 --> 00:45:51,440
so if anyone has an idea

1088
00:45:51,440 --> 00:45:52,640
on how

1089
00:45:52,640 --> 00:45:55,920
in cosi this was meant to be used um

1090
00:45:55,920 --> 00:45:58,640
being applied to hbk or has some other

1091
00:45:58,640 --> 00:46:00,319
sort of like experience with this i

1092
00:46:00,319 --> 00:46:02,560
would uh obviously

1093
00:46:02,560 --> 00:46:05,200
value that input um but i understand

1094
00:46:05,200 --> 00:46:06,880
it's a little bit uh

1095
00:46:06,880 --> 00:46:11,040
a very specialized uh aspect here

1096
00:46:11,040 --> 00:46:14,560
and um yeah so this is so honest

1097
00:46:14,560 --> 00:46:17,119
yes this is russ uh this goes back to

1098
00:46:17,119 --> 00:46:18,119
rfc

1099
00:46:18,119 --> 00:46:22,720
2631 which is based on nancy x942

1100
00:46:22,720 --> 00:46:23,920
um

1101
00:46:23,920 --> 00:46:24,880
where

1102
00:46:24,880 --> 00:46:28,400
you're trying to derive a uh

1103
00:46:28,400 --> 00:46:30,480
shared secret and you want to make sure

1104
00:46:30,480 --> 00:46:32,480
that both parties are applying the same

1105
00:46:32,480 --> 00:46:35,280
context to that secret that's where this

1106
00:46:35,280 --> 00:46:37,359
info struck stuff

1107
00:46:37,359 --> 00:46:38,720
is rooted

1108
00:46:38,720 --> 00:46:40,720
and uh here

1109
00:46:40,720 --> 00:46:44,079
we're we've got a lot less concerns

1110
00:46:44,079 --> 00:46:46,319
because of the it's always used with the

1111
00:46:46,319 --> 00:46:50,000
signature so the question uh to my mind

1112
00:46:50,000 --> 00:46:52,640
really falls to the cozy group uh to

1113
00:46:52,640 --> 00:46:54,720
make sure that

1114
00:46:54,720 --> 00:46:56,240
when they're using it as a building

1115
00:46:56,240 --> 00:46:59,040
block in other contexts are there any

1116
00:46:59,040 --> 00:47:00,960
concerns and i think we need to make

1117
00:47:00,960 --> 00:47:03,760
sure that questions raised there but

1118
00:47:03,760 --> 00:47:06,319
in this context i'm i'm pretty sure

1119
00:47:06,319 --> 00:47:08,880
there's no problems

1120
00:47:08,880 --> 00:47:11,599
yeah yeah that was my um that was my

1121
00:47:11,599 --> 00:47:13,119
impression as well

1122
00:47:13,119 --> 00:47:15,359
um because um

1123
00:47:15,359 --> 00:47:17,359
i don't want to sort of blow things up

1124
00:47:17,359 --> 00:47:18,480
with some

1125
00:47:18,480 --> 00:47:20,880
um redundant payloads that are actually

1126
00:47:20,880 --> 00:47:23,920
then not adding any

1127
00:47:23,920 --> 00:47:25,599
additional value

1128
00:47:25,599 --> 00:47:27,839
but

1129
00:47:28,160 --> 00:47:30,319
yeah so currently

1130
00:47:30,319 --> 00:47:32,000
what is currently in the two documents

1131
00:47:32,000 --> 00:47:34,960
is that we don't use that structure

1132
00:47:34,960 --> 00:47:38,400
and the cochbee document says

1133
00:47:38,400 --> 00:47:40,079
if you have an application specific

1134
00:47:40,079 --> 00:47:41,520
context here's the structure and you

1135
00:47:41,520 --> 00:47:43,760
populated with the respective fields but

1136
00:47:43,760 --> 00:47:45,040
i wanted to

1137
00:47:45,040 --> 00:47:47,680
sort of be sure that you guys uh agree

1138
00:47:47,680 --> 00:47:48,880
with that

1139
00:47:48,880 --> 00:47:51,040
um

1140
00:47:51,040 --> 00:47:52,640
that's that's

1141
00:47:52,640 --> 00:47:53,920
yeah

1142
00:47:53,920 --> 00:47:56,240
was that your last that was my last line

1143
00:47:56,240 --> 00:47:57,440
yeah yeah

1144
00:47:57,440 --> 00:47:58,319
so

1145
00:47:58,319 --> 00:48:00,480
if if anyone is interested to contribute

1146
00:48:00,480 --> 00:48:01,760
um

1147
00:48:01,760 --> 00:48:05,520
uh drop us an email uh yeah quote there

1148
00:48:05,520 --> 00:48:08,079
a lot of fun

1149
00:48:13,040 --> 00:48:16,400
any further comments

1150
00:48:17,920 --> 00:48:20,720
okay hearing none we're going to go back

1151
00:48:20,720 --> 00:48:21,599
to

1152
00:48:21,599 --> 00:48:25,559
brendan for suit report

1153
00:48:34,079 --> 00:48:36,720
you're on mute brendan

1154
00:48:36,720 --> 00:48:38,400
got it thank you

1155
00:48:38,400 --> 00:48:39,280
um

1156
00:48:39,280 --> 00:48:40,079
so

1157
00:48:40,079 --> 00:48:42,240
once again this is

1158
00:48:42,240 --> 00:48:43,440
uh

1159
00:48:43,440 --> 00:48:45,760
an update uh this one actually does have

1160
00:48:45,760 --> 00:48:49,839
new content next slide please

1161
00:48:50,240 --> 00:48:54,240
so uh just a a quick recap of what this

1162
00:48:54,240 --> 00:48:56,720
is it carries a record of decisions made

1163
00:48:56,720 --> 00:48:59,040
by the suit manifest processor that you

1164
00:48:59,040 --> 00:49:02,319
use alongside the manifest tree itself

1165
00:49:02,319 --> 00:49:04,880
in order to reconstruct what a device

1166
00:49:04,880 --> 00:49:05,920
did

1167
00:49:05,920 --> 00:49:08,400
decisions are appended to a log

1168
00:49:08,400 --> 00:49:10,000
essentially in the order that they're

1169
00:49:10,000 --> 00:49:10,880
made

1170
00:49:10,880 --> 00:49:13,119
and if you want to make this efficient

1171
00:49:13,119 --> 00:49:15,760
in a small device you can use indefinite

1172
00:49:15,760 --> 00:49:18,960
length encoding to construct that whole

1173
00:49:18,960 --> 00:49:21,040
sebor structure on the fly

1174
00:49:21,040 --> 00:49:23,920
next slide please

1175
00:49:24,800 --> 00:49:28,240
so what we have done since the zero zero

1176
00:49:28,240 --> 00:49:29,680
draft is

1177
00:49:29,680 --> 00:49:31,599
added a list of suit parameters and

1178
00:49:31,599 --> 00:49:34,079
component ids to use as system

1179
00:49:34,079 --> 00:49:37,200
properties uh what this can do is enable

1180
00:49:37,200 --> 00:49:39,680
attestation of system properties and

1181
00:49:39,680 --> 00:49:41,760
though it does have wider applications

1182
00:49:41,760 --> 00:49:43,920
than just attestation

1183
00:49:43,920 --> 00:49:46,240
and it ties into the suit reporting

1184
00:49:46,240 --> 00:49:49,359
policy which shows up in the manifest

1185
00:49:49,359 --> 00:49:51,119
draft itself

1186
00:49:51,119 --> 00:49:54,000
next slide please

1187
00:49:56,480 --> 00:49:59,119
oh that is the last slide oh okay right

1188
00:49:59,119 --> 00:50:01,040
yeah sorry

1189
00:50:01,040 --> 00:50:03,280
yeah sorry i i had originally planned to

1190
00:50:03,280 --> 00:50:07,119
have this one come after the one on the

1191
00:50:07,119 --> 00:50:11,280
uh suit and rats claims uh so that's

1192
00:50:11,280 --> 00:50:13,200
hence my thinking there was more content

1193
00:50:13,200 --> 00:50:15,839
coming there um so this

1194
00:50:15,839 --> 00:50:18,160
this i guess sets the backdrop then for

1195
00:50:18,160 --> 00:50:21,440
that particular discussion

1196
00:50:23,520 --> 00:50:25,760
so i think it in

1197
00:50:25,760 --> 00:50:27,920
it makes the most sense to me to put

1198
00:50:27,920 --> 00:50:30,480
these two together and maybe we should

1199
00:50:30,480 --> 00:50:33,040
uh go straight into the next one and

1200
00:50:33,040 --> 00:50:35,119
then we can have discussion about them

1201
00:50:35,119 --> 00:50:36,800
together because i think the the issues

1202
00:50:36,800 --> 00:50:39,119
really are tied together

1203
00:50:39,119 --> 00:50:42,079
okay then let's go to

1204
00:50:42,079 --> 00:50:43,119
draft

1205
00:50:43,119 --> 00:50:47,280
burkholt's rat suit claims

1206
00:50:51,920 --> 00:50:53,920
the slide deck is called suit-related

1207
00:50:53,920 --> 00:50:56,640
rats claims

1208
00:50:58,559 --> 00:51:00,480
you want me to switch

1209
00:51:00,480 --> 00:51:03,280
yes please please

1210
00:51:03,920 --> 00:51:05,280
got it

1211
00:51:05,280 --> 00:51:09,319
great next slide please

1212
00:51:10,800 --> 00:51:13,760
okay so previously we had a draft of

1213
00:51:13,760 --> 00:51:16,079
suit claims in rats to define suit

1214
00:51:16,079 --> 00:51:17,440
specific elements that require

1215
00:51:17,440 --> 00:51:19,760
attestation um the thing is that the

1216
00:51:19,760 --> 00:51:22,079
suit report could also carry these uh

1217
00:51:22,079 --> 00:51:24,000
elements now we proposed this at the

1218
00:51:24,000 --> 00:51:25,359
rats interim

1219
00:51:25,359 --> 00:51:28,000
and suggested that we merge the

1220
00:51:28,000 --> 00:51:30,240
this document with the suit report

1221
00:51:30,240 --> 00:51:32,160
document now that was rejected in the

1222
00:51:32,160 --> 00:51:34,319
interim um and the reason for that was

1223
00:51:34,319 --> 00:51:36,960
that some of the claims are duplicated

1224
00:51:36,960 --> 00:51:39,920
by elements that have been added in rats

1225
00:51:39,920 --> 00:51:41,440
i don't think that this is the correct

1226
00:51:41,440 --> 00:51:43,839
decision and i don't believe that hank

1227
00:51:43,839 --> 00:51:46,240
does either and i want to revisit that

1228
00:51:46,240 --> 00:51:48,000
within some additional explanation of

1229
00:51:48,000 --> 00:51:49,680
what our reasoning is so i don't think

1230
00:51:49,680 --> 00:51:51,119
that we managed to carry that across

1231
00:51:51,119 --> 00:51:52,960
properly during the interim

1232
00:51:52,960 --> 00:51:55,680
next slide please

1233
00:51:58,319 --> 00:52:00,079
so essentially this is a debate about

1234
00:52:00,079 --> 00:52:02,000
semantics versus structure

1235
00:52:02,000 --> 00:52:03,920
eat contains data with specific

1236
00:52:03,920 --> 00:52:06,160
semantics and specific structure and the

1237
00:52:06,160 --> 00:52:07,920
suit report contains

1238
00:52:07,920 --> 00:52:10,079
data with similar semantics and a

1239
00:52:10,079 --> 00:52:11,680
different structure

1240
00:52:11,680 --> 00:52:14,240
the suit report structure is designed

1241
00:52:14,240 --> 00:52:15,920
specifically to reduce overhead on

1242
00:52:15,920 --> 00:52:18,240
constrained devices now what that means

1243
00:52:18,240 --> 00:52:20,640
is essentially that you don't have to

1244
00:52:20,640 --> 00:52:24,319
hold in memory uh components that will

1245
00:52:24,319 --> 00:52:25,599
go into

1246
00:52:25,599 --> 00:52:29,359
the uh the eat claims later the idea

1247
00:52:29,359 --> 00:52:31,440
here is that you can actually just

1248
00:52:31,440 --> 00:52:34,240
directly encode on the fly

1249
00:52:34,240 --> 00:52:35,520
as you

1250
00:52:35,520 --> 00:52:37,680
uh as you encounter these decision

1251
00:52:37,680 --> 00:52:38,800
points

1252
00:52:38,800 --> 00:52:40,640
um

1253
00:52:40,640 --> 00:52:43,280
the this may seem like it's a premature

1254
00:52:43,280 --> 00:52:46,559
optimization and i suppose it might be

1255
00:52:46,559 --> 00:52:49,240
um but it's consistent with the the

1256
00:52:49,240 --> 00:52:51,839
non-attestation side of reporting in

1257
00:52:51,839 --> 00:52:52,880
suit

1258
00:52:52,880 --> 00:52:53,760
so

1259
00:52:53,760 --> 00:52:56,160
by putting those two things together it

1260
00:52:56,160 --> 00:52:59,119
seems that they do make sense

1261
00:52:59,119 --> 00:53:02,880
um on their own like the the the the

1262
00:53:02,880 --> 00:53:05,839
the joint code size reduction and memory

1263
00:53:05,839 --> 00:53:07,599
reduction that you get by doing both

1264
00:53:07,599 --> 00:53:09,040
things this way

1265
00:53:09,040 --> 00:53:11,280
uh seems like it would be the right

1266
00:53:11,280 --> 00:53:14,079
choice um obviously this is something

1267
00:53:14,079 --> 00:53:16,800
that we don't have measurements for yet

1268
00:53:16,800 --> 00:53:19,359
but that is something that uh makes

1269
00:53:19,359 --> 00:53:21,760
sense to me from a

1270
00:53:21,760 --> 00:53:23,599
high-level perspective

1271
00:53:23,599 --> 00:53:25,680
it's really tightly coupled to how suit

1272
00:53:25,680 --> 00:53:28,319
parsing is done it happens in exactly

1273
00:53:28,319 --> 00:53:30,880
the same order and so eventually we get

1274
00:53:30,880 --> 00:53:32,720
down to the the heart of the matter

1275
00:53:32,720 --> 00:53:35,280
which is that it's got similar semantics

1276
00:53:35,280 --> 00:53:38,319
but different structure for a reason

1277
00:53:38,319 --> 00:53:41,800
next slide please

1278
00:53:42,640 --> 00:53:45,280
and so this is where i think we come to

1279
00:53:45,280 --> 00:53:47,599
possibly the contentious side of things

1280
00:53:47,599 --> 00:53:50,160
um suit reports could potentially be

1281
00:53:50,160 --> 00:53:52,720
treated as evidence but they should not

1282
00:53:52,720 --> 00:53:55,200
be treated as attestation results

1283
00:53:55,200 --> 00:53:58,559
so arguably a verifier should translate

1284
00:53:58,559 --> 00:54:01,359
a suit report into generic e-claims so

1285
00:54:01,359 --> 00:54:03,359
now we look at these as two different

1286
00:54:03,359 --> 00:54:06,640
pieces within the rats architecture and

1287
00:54:06,640 --> 00:54:09,680
so this is why we believe that it makes

1288
00:54:09,680 --> 00:54:12,480
sense to add one claim

1289
00:54:12,480 --> 00:54:14,160
to eat

1290
00:54:14,160 --> 00:54:15,520
which is

1291
00:54:15,520 --> 00:54:17,119
a suit report

1292
00:54:17,119 --> 00:54:19,920
next slide please

1293
00:54:21,040 --> 00:54:23,599
oh i just i just stole my own thunder um

1294
00:54:23,599 --> 00:54:25,760
so that would be consistent with uh

1295
00:54:25,760 --> 00:54:28,319
using it as evidence the verifier would

1296
00:54:28,319 --> 00:54:30,960
be perfectly capable of translating

1297
00:54:30,960 --> 00:54:32,319
claims from

1298
00:54:32,319 --> 00:54:36,079
evidence to results where appropriate

1299
00:54:36,079 --> 00:54:37,760
it moves the trans the format

1300
00:54:37,760 --> 00:54:39,760
translation overhead away from

1301
00:54:39,760 --> 00:54:42,000
constrained endnodes and puts it in a

1302
00:54:42,000 --> 00:54:44,319
verifier in a data center somewhere

1303
00:54:44,319 --> 00:54:46,000
which is where it belongs

1304
00:54:46,000 --> 00:54:48,640
um and it would allow us to merge the

1305
00:54:48,640 --> 00:54:52,000
uh suit rats claims document into the

1306
00:54:52,000 --> 00:54:55,440
ietf suit report document and then only

1307
00:54:55,440 --> 00:54:58,319
have one claim added in each which would

1308
00:54:58,319 --> 00:55:01,119
cover all of suit

1309
00:55:01,119 --> 00:55:03,760
and that is my slide deck so

1310
00:55:03,760 --> 00:55:05,760
questions comments

1311
00:55:05,760 --> 00:55:08,400
go ahead dave

1312
00:55:09,119 --> 00:55:09,920
uh

1313
00:55:09,920 --> 00:55:12,640
dave filler as an individual participant

1314
00:55:12,640 --> 00:55:16,319
and uh editor of uh t protocol

1315
00:55:16,319 --> 00:55:17,200
i think

1316
00:55:17,200 --> 00:55:19,839
this is part of the right question um

1317
00:55:19,839 --> 00:55:21,200
what you have on the slide might

1318
00:55:21,200 --> 00:55:23,280
actually be the answer but i wanted to

1319
00:55:23,280 --> 00:55:23,550
uh

1320
00:55:23,550 --> 00:55:25,040
[Music]

1321
00:55:25,040 --> 00:55:27,119
up level the question into multiple

1322
00:55:27,119 --> 00:55:29,599
possibilities and maybe get

1323
00:55:29,599 --> 00:55:30,720
your

1324
00:55:30,720 --> 00:55:31,760
feedback and the rest of the working

1325
00:55:31,760 --> 00:55:33,280
groups feedback to see if this is the

1326
00:55:33,280 --> 00:55:34,559
right one

1327
00:55:34,559 --> 00:55:35,920
because i can see multiple different

1328
00:55:35,920 --> 00:55:38,480
ways one could go um that i think are

1329
00:55:38,480 --> 00:55:40,000
consistent maybe with the original

1330
00:55:40,000 --> 00:55:41,119
principle and this is one way to

1331
00:55:41,119 --> 00:55:42,640
implement them and it might be the right

1332
00:55:42,640 --> 00:55:45,680
one okay so i can imagine uh of uh for

1333
00:55:45,680 --> 00:55:47,760
completeness i can imagine you could use

1334
00:55:47,760 --> 00:55:50,640
the suit report as the evidence format

1335
00:55:50,640 --> 00:55:53,359
say instead of eat okay

1336
00:55:53,359 --> 00:55:55,440
you could use the suit report in

1337
00:55:55,440 --> 00:55:57,760
evidence like encapsulated like you have

1338
00:55:57,760 --> 00:55:59,280
here which is you're doing it inside of

1339
00:55:59,280 --> 00:56:01,040
a single claim inside of an each right

1340
00:56:01,040 --> 00:56:03,359
so you have this report inside of a need

1341
00:56:03,359 --> 00:56:05,119
you could do it uh

1342
00:56:05,119 --> 00:56:07,599
translated where the information in the

1343
00:56:07,599 --> 00:56:09,680
suit report becomes information in the

1344
00:56:09,680 --> 00:56:11,200
eat and i think that's consistent with

1345
00:56:11,200 --> 00:56:12,880
what you're saying maybe about

1346
00:56:12,880 --> 00:56:14,480
attestation results or portions of

1347
00:56:14,480 --> 00:56:16,319
attestation results and portions of zero

1348
00:56:16,319 --> 00:56:18,079
reports maybe

1349
00:56:18,079 --> 00:56:20,160
you could also send the suit report in

1350
00:56:20,160 --> 00:56:22,880
addition to evidence and it gets to um

1351
00:56:22,880 --> 00:56:24,640
the evidence is stuff that is

1352
00:56:24,640 --> 00:56:26,799
interpreted by a verifier

1353
00:56:26,799 --> 00:56:29,280
and here in the tea case the thing that

1354
00:56:29,280 --> 00:56:31,040
needs the information the student report

1355
00:56:31,040 --> 00:56:32,720
is the relying party

1356
00:56:32,720 --> 00:56:34,319
so you can say well how do i get the

1357
00:56:34,319 --> 00:56:38,079
information from the uh a tester or or

1358
00:56:38,079 --> 00:56:40,240
you know suit reporter

1359
00:56:40,240 --> 00:56:42,960
into the relying party and so you might

1360
00:56:42,960 --> 00:56:44,720
be able to do that

1361
00:56:44,720 --> 00:56:47,119
via inside the attestation exchange in

1362
00:56:47,119 --> 00:56:48,960
which case the all the information

1363
00:56:48,960 --> 00:56:52,720
that's needed by the uh updater it has

1364
00:56:52,720 --> 00:56:54,480
to be in the

1365
00:56:54,480 --> 00:56:56,400
um at the station report in some way so

1366
00:56:56,400 --> 00:56:57,920
you got to go through that pipeline or

1367
00:56:57,920 --> 00:56:59,520
another way that you could do it is to

1368
00:56:59,520 --> 00:57:02,640
say okay independent of attestation you

1369
00:57:02,640 --> 00:57:04,319
send the suit report directly from the

1370
00:57:04,319 --> 00:57:06,240
attesture to the to the relying party

1371
00:57:06,240 --> 00:57:08,160
which means it would be in

1372
00:57:08,160 --> 00:57:09,839
in the teap case that would be in a

1373
00:57:09,839 --> 00:57:11,440
query response

1374
00:57:11,440 --> 00:57:14,160
message um separate from the evidence

1375
00:57:14,160 --> 00:57:16,400
field okay and so in terms of what we do

1376
00:57:16,400 --> 00:57:17,920
in the t protocol spec we can add

1377
00:57:17,920 --> 00:57:20,480
another field into into a query response

1378
00:57:20,480 --> 00:57:22,480
that says here's how you could reply

1379
00:57:22,480 --> 00:57:23,920
here's how you could pass in you know

1380
00:57:23,920 --> 00:57:26,000
the boot time suit report or something

1381
00:57:26,000 --> 00:57:27,599
like that separate from the evidence

1382
00:57:27,599 --> 00:57:29,119
field or you can put it inside the

1383
00:57:29,119 --> 00:57:30,319
evidence field but then you've got to

1384
00:57:30,319 --> 00:57:32,160
make sure it gets translated into

1385
00:57:32,160 --> 00:57:33,839
attestation results just so that the

1386
00:57:33,839 --> 00:57:35,520
team could get it rather than getting it

1387
00:57:35,520 --> 00:57:36,799
in parallel to the evidence so those are

1388
00:57:36,799 --> 00:57:38,960
the different possibilities that i see

1389
00:57:38,960 --> 00:57:40,400
i have no objection to doing what

1390
00:57:40,400 --> 00:57:42,079
brendan what brendan is saying here on

1391
00:57:42,079 --> 00:57:43,520
the slide i just don't know if that's

1392
00:57:43,520 --> 00:57:45,599
the most efficient way to do it in in

1393
00:57:45,599 --> 00:57:47,599
teep or if we should also have a way of

1394
00:57:47,599 --> 00:57:49,359
having suit reports directly in the

1395
00:57:49,359 --> 00:57:51,680
query response sorry in the career

1396
00:57:51,680 --> 00:57:53,760
response in addition the evidence field

1397
00:57:53,760 --> 00:57:55,280
just so it goes directly to the relying

1398
00:57:55,280 --> 00:57:56,799
party and it only pays attention to it

1399
00:57:56,799 --> 00:57:58,960
if at the station succeeds so open and

1400
00:57:58,960 --> 00:58:00,160
feedback

1401
00:58:00,160 --> 00:58:02,880
hey dave real quick um

1402
00:58:02,880 --> 00:58:04,799
you you you said a lot and it was very

1403
00:58:04,799 --> 00:58:06,480
difficult to capture in the notes would

1404
00:58:06,480 --> 00:58:09,599
you mind um typing some of that into the

1405
00:58:09,599 --> 00:58:11,200
notes for us uh

1406
00:58:11,200 --> 00:58:13,200
i would be happy to although it would be

1407
00:58:13,200 --> 00:58:14,559
more concerning if brendan didn't

1408
00:58:14,559 --> 00:58:16,400
understand my question so

1409
00:58:16,400 --> 00:58:18,160
no i i did understand your question it

1410
00:58:18,160 --> 00:58:20,000
does make sense to me i can see there's

1411
00:58:20,000 --> 00:58:21,359
i think it was four different ways that

1412
00:58:21,359 --> 00:58:23,200
we could go about this the argument i'm

1413
00:58:23,200 --> 00:58:25,040
making is that it doesn't make sense for

1414
00:58:25,040 --> 00:58:27,359
a constrained node to have to do claim

1415
00:58:27,359 --> 00:58:29,440
translation when that could easily be

1416
00:58:29,440 --> 00:58:32,880
handled by something higher level

1417
00:58:33,839 --> 00:58:35,760
one of the questions is tied in and i

1418
00:58:35,760 --> 00:58:37,680
know we're just about up on time here

1419
00:58:37,680 --> 00:58:39,280
and so you may have to defer this to the

1420
00:58:39,280 --> 00:58:41,119
to the list but i am looking for a

1421
00:58:41,119 --> 00:58:42,880
direction as to what to do with the t

1422
00:58:42,880 --> 00:58:46,000
protocol one um is today

1423
00:58:46,000 --> 00:58:49,280
there is no requirement for a teep

1424
00:58:49,280 --> 00:58:51,359
device you know a teep agent capable

1425
00:58:51,359 --> 00:58:53,839
device to actually keep track of suit

1426
00:58:53,839 --> 00:58:56,079
reports at boot time right you can argue

1427
00:58:56,079 --> 00:58:57,440
that there is a requirement to keep

1428
00:58:57,440 --> 00:58:59,599
track of suit reports at update time

1429
00:58:59,599 --> 00:59:00,720
okay

1430
00:59:00,720 --> 00:59:02,160
but there's not currently a requirement

1431
00:59:02,160 --> 00:59:04,720
to keep track of them at boot time um if

1432
00:59:04,720 --> 00:59:07,359
we say that there's no claims directly

1433
00:59:07,359 --> 00:59:09,280
in eat then i think it does introduce a

1434
00:59:09,280 --> 00:59:11,200
requirement to have suit reports at boot

1435
00:59:11,200 --> 00:59:12,960
time and there would be a dependency

1436
00:59:12,960 --> 00:59:15,119
there requirement for for for the tp

1437
00:59:15,119 --> 00:59:16,799
agent so

1438
00:59:16,799 --> 00:59:18,960
yeah i think on this one i'm a little

1439
00:59:18,960 --> 00:59:21,839
bit less concerned um

1440
00:59:21,839 --> 00:59:24,559
about what happens in teep

1441
00:59:24,559 --> 00:59:26,720
because so far at least it appears that

1442
00:59:26,720 --> 00:59:29,839
teep devices are typically larger and uh

1443
00:59:29,839 --> 00:59:32,240
have more power available more code size

1444
00:59:32,240 --> 00:59:35,680
available more memory available um

1445
00:59:35,680 --> 00:59:38,640
so maybe that's not quite as big of an

1446
00:59:38,640 --> 00:59:40,480
issue and it's fine to do things the way

1447
00:59:40,480 --> 00:59:42,720
they are i'm i guess i'm more thinking

1448
00:59:42,720 --> 00:59:45,280
about more constrained devices

1449
00:59:45,280 --> 00:59:47,280
uh i think this is something we need to

1450
00:59:47,280 --> 00:59:49,040
discuss on the list a bit more

1451
00:59:49,040 --> 00:59:50,160
um

1452
00:59:50,160 --> 00:59:51,040
so

1453
00:59:51,040 --> 00:59:52,960
maybe we should defer or we should take

1454
00:59:52,960 --> 00:59:54,559
this discussion to the list because i

1455
00:59:54,559 --> 00:59:57,440
think we are out of time

1456
00:59:58,839 --> 01:00:02,079
yeah uh so yes let's continue this

1457
01:00:02,079 --> 01:00:03,839
discussion on the list i'm really

1458
01:00:03,839 --> 01:00:05,359
surprised given that the first

1459
01:00:05,359 --> 01:00:08,000
presentation took us a half hour that we

1460
01:00:08,000 --> 01:00:10,240
got through this much of the agenda

1461
01:00:10,240 --> 01:00:12,720
um but yes let's take this to the list

1462
01:00:12,720 --> 01:00:15,920
and we'll schedule in the room

1463
01:00:15,920 --> 01:00:18,720
so that we can

1464
01:00:18,720 --> 01:00:21,520
recap what we we do on the list reach

1465
01:00:21,520 --> 01:00:25,440
consensus and then talk about mud

1466
01:00:26,000 --> 01:00:28,960
so expect a doodle poll soon

1467
01:00:28,960 --> 01:00:31,760
and uh for those of you in vienna safe

1468
01:00:31,760 --> 01:00:33,200
trips home uh

1469
01:00:33,200 --> 01:00:36,640
after the meeting ends tomorrow

1470
01:00:38,079 --> 01:00:40,559
thank you very much uh to the note taker

1471
01:00:40,559 --> 01:00:42,160
especially

1472
01:00:42,160 --> 01:00:44,879
thanks everyone

1473
01:00:46,720 --> 01:00:49,959
thank you

1474
01:01:08,160 --> 01:01:11,839
okay yeah

1475
01:01:35,680 --> 01:01:38,680
oh

1476
01:02:00,640 --> 01:02:02,720
you

