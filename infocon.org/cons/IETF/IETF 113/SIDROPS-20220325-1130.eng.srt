1
00:00:08,480 --> 00:00:10,400
damn chris i should have stayed back for

2
00:00:10,400 --> 00:00:12,559
the cookie

3
00:00:12,559 --> 00:00:14,000
exactly

4
00:00:14,000 --> 00:00:15,599
only we'd known

5
00:00:15,599 --> 00:00:18,320
had i known warren was going to

6
00:00:18,320 --> 00:00:21,119
bring cookies

7
00:00:24,400 --> 00:00:25,680
all right

8
00:00:25,680 --> 00:00:27,279
i think when cookie time is done we're

9
00:00:27,279 --> 00:00:29,439
ready to get started and i believe

10
00:00:29,439 --> 00:00:31,439
warren is uh

11
00:00:31,439 --> 00:00:32,960
running the presentation so i won't do

12
00:00:32,960 --> 00:00:34,719
any of the presentation stuff stop the

13
00:00:34,719 --> 00:00:36,960
thing

14
00:00:42,160 --> 00:00:44,718
at

15
00:00:45,120 --> 00:00:48,640
so i'm doing the slides we said

16
00:00:49,280 --> 00:00:51,520
okay

17
00:00:56,879 --> 00:00:58,480
just waiting for the

18
00:00:58,480 --> 00:01:00,079
thing to reload

19
00:01:00,079 --> 00:01:01,920
and

20
00:01:01,920 --> 00:01:04,719
side erupts

21
00:01:10,080 --> 00:01:11,840
i'm assuming that the first set of

22
00:01:11,840 --> 00:01:13,760
slides that you would like presented is

23
00:01:13,760 --> 00:01:15,840
going to be the chairs ones because that

24
00:01:15,840 --> 00:01:18,799
seems to make sense

25
00:01:24,159 --> 00:01:25,920
i just realized that i've always done

26
00:01:25,920 --> 00:01:27,119
this being

27
00:01:27,119 --> 00:01:28,799
not in the chair role

28
00:01:28,799 --> 00:01:30,320
so

29
00:01:30,320 --> 00:01:33,200
warren you are that audible

30
00:01:33,200 --> 00:01:34,159
oh

31
00:01:34,159 --> 00:01:35,439
no

32
00:01:35,439 --> 00:01:39,798
really i thought i saw them

33
00:01:52,640 --> 00:01:55,640
no

34
00:02:06,960 --> 00:02:09,440
um does this forward and backward

35
00:02:09,440 --> 00:02:10,800
let me check if my forward and back

36
00:02:10,800 --> 00:02:12,800
works

37
00:02:12,800 --> 00:02:14,640
it does not

38
00:02:14,640 --> 00:02:16,800
but that picky does

39
00:02:16,800 --> 00:02:18,959
good

40
00:02:19,120 --> 00:02:21,440
alrighty the chairs the slides are

41
00:02:21,440 --> 00:02:22,879
loaded i don't know if you're going to

42
00:02:22,879 --> 00:02:24,879
do the intro or

43
00:02:24,879 --> 00:02:27,440
i can yeah

44
00:02:27,440 --> 00:02:29,200
okay so we're

45
00:02:29,200 --> 00:02:31,120
getting started we have a relatively

46
00:02:31,120 --> 00:02:33,040
full agenda this is cider opposite

47
00:02:33,040 --> 00:02:35,519
ietf113 either you're in the room and

48
00:02:35,519 --> 00:02:37,440
you're in the right room or

49
00:02:37,440 --> 00:02:39,120
you're virtually on the

50
00:02:39,120 --> 00:02:40,959
on the medico in which case you made it

51
00:02:40,959 --> 00:02:43,040
to the right room virtually

52
00:02:43,040 --> 00:02:45,120
um if you think you're not insider ops

53
00:02:45,120 --> 00:02:46,879
you should go to the other room

54
00:02:46,879 --> 00:02:48,800
but you could also also stay and listen

55
00:02:48,800 --> 00:02:50,319
uh

56
00:02:50,319 --> 00:02:54,239
i'm chris cayer's on virtual thing too

57
00:02:54,239 --> 00:02:56,160
natalie's at the

58
00:02:56,160 --> 00:02:57,760
desk with warren who's running all the

59
00:02:57,760 --> 00:03:00,399
slides for us

60
00:03:01,280 --> 00:03:03,519
and john's gutter says perhaps the

61
00:03:03,519 --> 00:03:05,120
in-room chairs need to make sure they're

62
00:03:05,120 --> 00:03:07,280
very close to the mic

63
00:03:07,280 --> 00:03:10,400
okay next slide that work

64
00:03:10,400 --> 00:03:12,000
actually before let me also check the

65
00:03:12,000 --> 00:03:13,360
room mics because the batteries keep

66
00:03:13,360 --> 00:03:14,400
dying

67
00:03:14,400 --> 00:03:16,560
okay

68
00:03:16,560 --> 00:03:19,280
great

69
00:03:19,280 --> 00:03:20,239
okay

70
00:03:20,239 --> 00:03:22,640
uh the next slide is the note well

71
00:03:22,640 --> 00:03:24,319
people

72
00:03:24,319 --> 00:03:26,319
can download i should have said all the

73
00:03:26,319 --> 00:03:27,760
slide decks we have should be in the

74
00:03:27,760 --> 00:03:30,080
meeting materials site appropriately

75
00:03:30,080 --> 00:03:32,319
i think there's one update to this chair

76
00:03:32,319 --> 00:03:34,480
slides to put in but we'll do that at

77
00:03:34,480 --> 00:03:37,200
the end of the meeting

78
00:03:38,080 --> 00:03:39,840
uh miniko says they had to lower the

79
00:03:39,840 --> 00:03:42,560
front mic because of feedback oh good

80
00:03:42,560 --> 00:03:45,120
okay um i think

81
00:03:45,120 --> 00:03:46,480
we don't really have any agenda bashing

82
00:03:46,480 --> 00:03:49,120
to do we do have um a short chat from

83
00:03:49,120 --> 00:03:51,599
allison menken the uh

84
00:03:51,599 --> 00:03:53,680
ietf ombudsman who wants to come and

85
00:03:53,680 --> 00:03:55,840
talk to us about code of conduct and how

86
00:03:55,840 --> 00:03:57,439
we should be paying attention to whether

87
00:03:57,439 --> 00:03:59,280
the code of context says instead of not

88
00:03:59,280 --> 00:04:00,560
paying attention which we have a

89
00:04:00,560 --> 00:04:02,000
tendency to do so

90
00:04:02,000 --> 00:04:03,360
allison

91
00:04:03,360 --> 00:04:06,159
yeah yo from the ombuds team

92
00:04:06,159 --> 00:04:09,040
um that was the yo from

93
00:04:09,040 --> 00:04:12,080
beowulf so we've had a bad

94
00:04:12,080 --> 00:04:12,959
um

95
00:04:12,959 --> 00:04:15,599
season this this season with cider ops

96
00:04:15,599 --> 00:04:17,759
uh i'm authorized to say we're we're

97
00:04:17,759 --> 00:04:20,320
normally extremely careful about

98
00:04:20,320 --> 00:04:22,400
about confidentiality but i wanted to

99
00:04:22,400 --> 00:04:23,440
say that

100
00:04:23,440 --> 00:04:25,280
we've agreed to let you know that we've

101
00:04:25,280 --> 00:04:28,240
had quite a few cases of people who feel

102
00:04:28,240 --> 00:04:30,560
concerned and uncomfortable with the

103
00:04:30,560 --> 00:04:32,479
kind of discussions that go on insider

104
00:04:32,479 --> 00:04:33,440
ops

105
00:04:33,440 --> 00:04:34,240
and

106
00:04:34,240 --> 00:04:36,560
the ticket to doing the right thing here

107
00:04:36,560 --> 00:04:38,160
is to just come back to the code of

108
00:04:38,160 --> 00:04:40,400
conduct over and over again which says

109
00:04:40,400 --> 00:04:43,520
be neutral be equal be

110
00:04:43,520 --> 00:04:46,320
be respectful to each other

111
00:04:46,320 --> 00:04:49,759
um if you are saying something

112
00:04:49,759 --> 00:04:51,520
about somebody

113
00:04:51,520 --> 00:04:53,280
using the word you you're probably doing

114
00:04:53,280 --> 00:04:54,560
it wrong

115
00:04:54,560 --> 00:04:58,080
um and understand that the problems that

116
00:04:58,080 --> 00:05:00,080
you're solving are very difficult so it

117
00:05:00,080 --> 00:05:01,280
has to be

118
00:05:01,280 --> 00:05:04,080
there's there's a need for

119
00:05:04,080 --> 00:05:06,639
more respect and more

120
00:05:06,639 --> 00:05:07,840
care

121
00:05:07,840 --> 00:05:08,800
in

122
00:05:08,800 --> 00:05:10,720
disagreeing because the disagreements

123
00:05:10,720 --> 00:05:11,759
may be

124
00:05:11,759 --> 00:05:13,199
complex

125
00:05:13,199 --> 00:05:15,919
but the problems that have come up from

126
00:05:15,919 --> 00:05:17,680
the ombuds team that we've seen have

127
00:05:17,680 --> 00:05:20,080
been both problems of

128
00:05:20,080 --> 00:05:21,600
long

129
00:05:21,600 --> 00:05:23,280
people that are

130
00:05:23,280 --> 00:05:25,360
well established and you would expect to

131
00:05:25,360 --> 00:05:27,199
be comfortable and know how to deal with

132
00:05:27,199 --> 00:05:29,600
problems but also problems of people who

133
00:05:29,600 --> 00:05:30,240
are

134
00:05:30,240 --> 00:05:31,600
new and not

135
00:05:31,600 --> 00:05:33,919
not well established are not sure that

136
00:05:33,919 --> 00:05:35,520
they can participate because they don't

137
00:05:35,520 --> 00:05:38,720
know how to work in the environment so

138
00:05:38,720 --> 00:05:40,320
we wanted to

139
00:05:40,320 --> 00:05:41,680
make it clear

140
00:05:41,680 --> 00:05:43,759
that without paying enough attention to

141
00:05:43,759 --> 00:05:45,360
the code of conduct

142
00:05:45,360 --> 00:05:47,199
it's probably very difficult to solve

143
00:05:47,199 --> 00:05:48,639
the problems that you have which are

144
00:05:48,639 --> 00:05:50,960
really difficult problems it's also

145
00:05:50,960 --> 00:05:53,360
probably difficult to get new people

146
00:05:53,360 --> 00:05:55,199
involved who may have solutions that you

147
00:05:55,199 --> 00:05:56,560
haven't thought of

148
00:05:56,560 --> 00:05:58,639
so this is my pitch

149
00:05:58,639 --> 00:06:00,000
and i'd like

150
00:06:00,000 --> 00:06:02,800
we were invited by the a.d by warren to

151
00:06:02,800 --> 00:06:04,560
come and speak to you

152
00:06:04,560 --> 00:06:07,440
um and i've spoken uh several times now

153
00:06:07,440 --> 00:06:10,400
with the the chairs about this too

154
00:06:10,400 --> 00:06:12,400
to go back and reread the code of

155
00:06:12,400 --> 00:06:14,400
conduct if you have any doubts about

156
00:06:14,400 --> 00:06:16,160
something you're writing in an email go

157
00:06:16,160 --> 00:06:19,440
back and reread the code of conduct

158
00:06:19,440 --> 00:06:20,479
um

159
00:06:20,479 --> 00:06:22,639
if somebody objects to something you say

160
00:06:22,639 --> 00:06:24,800
please think about your code of conduct

161
00:06:24,800 --> 00:06:27,360
and pull back from the way you've said

162
00:06:27,360 --> 00:06:28,639
it

163
00:06:28,639 --> 00:06:31,360
please try to lessen our caseload from

164
00:06:31,360 --> 00:06:33,600
cidrops

165
00:06:33,600 --> 00:06:35,600
so i don't i can't really answer any

166
00:06:35,600 --> 00:06:37,600
questions because of the confidentiality

167
00:06:37,600 --> 00:06:39,199
but that's the message

168
00:06:39,199 --> 00:06:40,080
and

169
00:06:40,080 --> 00:06:42,400
i think warren or the chairs may want to

170
00:06:42,400 --> 00:06:44,319
add something but if not that's the

171
00:06:44,319 --> 00:06:45,840
pitch

172
00:06:45,840 --> 00:06:48,240
warren anything you want to add yep i'd

173
00:06:48,240 --> 00:06:50,319
like to add something yeah i mean i must

174
00:06:50,319 --> 00:06:52,319
admit that well let me turn my

175
00:06:52,319 --> 00:06:53,680
volume up here

176
00:06:53,680 --> 00:06:56,720
um yeah i've never had code of conduct

177
00:06:56,720 --> 00:06:58,319
discussions with the umbud's team in any

178
00:06:58,319 --> 00:07:00,319
of my other working groups

179
00:07:00,319 --> 00:07:02,880
um so you know i would like to continue

180
00:07:02,880 --> 00:07:04,720
not having code of conduct discussions

181
00:07:04,720 --> 00:07:06,400
with the ombuds team

182
00:07:06,400 --> 00:07:08,400
um i'm really glad that people are

183
00:07:08,400 --> 00:07:10,319
passionate about this stuff

184
00:07:10,319 --> 00:07:11,759
um

185
00:07:11,759 --> 00:07:14,560
and we have some strong personalities

186
00:07:14,560 --> 00:07:16,800
just sometimes the passion kind of

187
00:07:16,800 --> 00:07:18,720
overflows from

188
00:07:18,720 --> 00:07:21,039
let's make this thing better into like

189
00:07:21,039 --> 00:07:23,120
let's beat up the artwork

190
00:07:23,120 --> 00:07:24,319
and

191
00:07:24,319 --> 00:07:25,360
one of the things which i think is

192
00:07:25,360 --> 00:07:27,759
happening is in many cases

193
00:07:27,759 --> 00:07:29,440
a lot of the

194
00:07:29,440 --> 00:07:31,599
people participating know

195
00:07:31,599 --> 00:07:33,520
the other people

196
00:07:33,520 --> 00:07:34,720
and

197
00:07:34,720 --> 00:07:36,160
think that they understand how their

198
00:07:36,160 --> 00:07:37,919
message will be heard

199
00:07:37,919 --> 00:07:40,000
and even if that's true

200
00:07:40,000 --> 00:07:43,039
people who aren't in that discussion

201
00:07:43,039 --> 00:07:45,360
see the sort of sniping and get

202
00:07:45,360 --> 00:07:47,039
concerned that they might also be

203
00:07:47,039 --> 00:07:49,840
attacked if they start participating

204
00:07:49,840 --> 00:07:53,919
so you know while chris and i can

205
00:07:53,919 --> 00:07:55,440
call each other you know i can call

206
00:07:55,440 --> 00:07:57,440
chris's mommy fat and he can say i'm

207
00:07:57,440 --> 00:08:00,879
ugly and we're both okay with that um

208
00:08:00,879 --> 00:08:02,800
especially if you've seen his mama it

209
00:08:02,800 --> 00:08:04,879
drives other people away

210
00:08:04,879 --> 00:08:06,879
and so you know we need to keep that

211
00:08:06,879 --> 00:08:08,400
sort of thing in mind

212
00:08:08,400 --> 00:08:10,639
my god i'm glad that i'm not interested

213
00:08:10,639 --> 00:08:12,319
near where chris is because when i get

214
00:08:12,319 --> 00:08:13,840
back there's going to be a beat down i'm

215
00:08:13,840 --> 00:08:16,479
sure but yeah i mean

216
00:08:16,479 --> 00:08:18,319
really we need to be a lot more careful

217
00:08:18,319 --> 00:08:20,400
with this um

218
00:08:20,400 --> 00:08:21,759
if

219
00:08:21,759 --> 00:08:23,840
you're writing a reply both think about

220
00:08:23,840 --> 00:08:25,039
you know whether it's technically

221
00:08:25,039 --> 00:08:27,599
accurate and also whether you could word

222
00:08:27,599 --> 00:08:29,759
it in a way that comes off slightly less

223
00:08:29,759 --> 00:08:32,640
you know aggressive slack jackass

224
00:08:32,640 --> 00:08:35,039
actually um so warren not slightly less

225
00:08:35,039 --> 00:08:36,719
so let's let's try not to pull our

226
00:08:36,719 --> 00:08:38,240
punches too much

227
00:08:38,240 --> 00:08:40,320
not

228
00:08:40,320 --> 00:08:43,120
don't be aggressive be

229
00:08:43,120 --> 00:08:44,880
be

230
00:08:44,880 --> 00:08:48,320
only as aggressive as necessary only as

231
00:08:48,320 --> 00:08:51,920
as as strong as necessary not aggressive

232
00:08:51,920 --> 00:08:53,279
and i know that some people will

233
00:08:53,279 --> 00:08:54,959
disagree with that but

234
00:08:54,959 --> 00:08:55,760
but

235
00:08:55,760 --> 00:08:58,080
the problem solving

236
00:08:58,080 --> 00:09:00,399
um the the judgment about how aggressive

237
00:09:00,399 --> 00:09:03,360
has been over the top for a while now so

238
00:09:03,360 --> 00:09:06,320
i'd like us to to let the strong

239
00:09:06,320 --> 00:09:09,279
personality say

240
00:09:09,279 --> 00:09:11,279
you've been talking about

241
00:09:11,279 --> 00:09:12,560
you've been

242
00:09:12,560 --> 00:09:14,800
aggressive in ways that are you know too

243
00:09:14,800 --> 00:09:17,440
much of your mom is fat and now we have

244
00:09:17,440 --> 00:09:19,920
to have none of that now now

245
00:09:19,920 --> 00:09:22,399
let's let's let's pull back further than

246
00:09:22,399 --> 00:09:24,560
you expect you you need to and i think

247
00:09:24,560 --> 00:09:25,839
you'll find

248
00:09:25,839 --> 00:09:27,600
and i think the chairs will find that

249
00:09:27,600 --> 00:09:28,880
this will make

250
00:09:28,880 --> 00:09:31,200
for the problem for the the working

251
00:09:31,200 --> 00:09:33,200
group to go better

252
00:09:33,200 --> 00:09:36,399
um i hope that's true okay yeah sorry

253
00:09:36,399 --> 00:09:37,839
that's what i yeah that's what i was

254
00:09:37,839 --> 00:09:39,600
trying to say and also you know

255
00:09:39,600 --> 00:09:40,959
we should

256
00:09:40,959 --> 00:09:42,480
if you are

257
00:09:42,480 --> 00:09:43,839
disagreeing with something it should be

258
00:09:43,839 --> 00:09:45,600
the idea that you're disagreeing with

259
00:09:45,600 --> 00:09:47,040
not the person

260
00:09:47,040 --> 00:09:48,480
if you're disagreeing with sort of the

261
00:09:48,480 --> 00:09:50,240
person or the person's personality

262
00:09:50,240 --> 00:09:52,320
you've already lost the argument but

263
00:09:52,320 --> 00:09:55,600
yeah we have lars in the queue so

264
00:09:55,600 --> 00:09:59,120
lars go ahead oh there you are in person

265
00:09:59,120 --> 00:10:01,200
lars lima from that note

266
00:10:01,200 --> 00:10:02,640
i would like to add one other

267
00:10:02,640 --> 00:10:04,399
recommendation that i saved myself a

268
00:10:04,399 --> 00:10:05,920
couple of times

269
00:10:05,920 --> 00:10:08,240
and that is when you feel

270
00:10:08,240 --> 00:10:10,079
upset about something that someone has

271
00:10:10,079 --> 00:10:12,320
written and you write an answer

272
00:10:12,320 --> 00:10:13,519
do that

273
00:10:13,519 --> 00:10:15,200
but don't send it

274
00:10:15,200 --> 00:10:17,120
let it sit there for a couple of hours

275
00:10:17,120 --> 00:10:20,160
yep go back have a cup of coffee read it

276
00:10:20,160 --> 00:10:22,320
again and you may find that you might

277
00:10:22,320 --> 00:10:23,760
may want to change a few words here and

278
00:10:23,760 --> 00:10:24,880
there and

279
00:10:24,880 --> 00:10:26,480
change the entire tone of the message

280
00:10:26,480 --> 00:10:28,560
that has helped me every time i've

281
00:10:28,560 --> 00:10:29,920
broken that role

282
00:10:29,920 --> 00:10:32,560
role is sort of broken that rule i've

283
00:10:32,560 --> 00:10:33,920
i've had i've

284
00:10:33,920 --> 00:10:36,640
had to to

285
00:10:36,640 --> 00:10:39,279
you know back up and and apologize and

286
00:10:39,279 --> 00:10:40,160
and uh

287
00:10:40,160 --> 00:10:42,399
sets miserable and every time i follow

288
00:10:42,399 --> 00:10:44,640
the rule i've been very glad glad

289
00:10:44,640 --> 00:10:46,959
afterwards so at least

290
00:10:46,959 --> 00:10:48,640
make the attempt yeah

291
00:10:48,640 --> 00:10:50,959
yeah also you know if the main

292
00:10:50,959 --> 00:10:52,640
discussions are between two or three

293
00:10:52,640 --> 00:10:53,680
people

294
00:10:53,680 --> 00:10:55,519
you know and there is more than two or

295
00:10:55,519 --> 00:10:57,200
three emails in a day you might want to

296
00:10:57,200 --> 00:10:59,200
sort of stop and take a step back and be

297
00:10:59,200 --> 00:11:01,360
like is this really the discussion we

298
00:11:01,360 --> 00:11:02,800
should be having now

299
00:11:02,800 --> 00:11:04,480
if it's you know

300
00:11:04,480 --> 00:11:06,399
you're missing a comma it might be

301
00:11:06,399 --> 00:11:08,079
better if you had a dash here that's

302
00:11:08,079 --> 00:11:08,880
great

303
00:11:08,880 --> 00:11:09,839
if it's

304
00:11:09,839 --> 00:11:11,440
your idea is the worst one i've ever

305
00:11:11,440 --> 00:11:12,480
seen

306
00:11:12,480 --> 00:11:15,600
that's not okay i think we've all

307
00:11:15,600 --> 00:11:17,279
all got this under

308
00:11:17,279 --> 00:11:20,160
all understand what's going on um

309
00:11:20,160 --> 00:11:22,560
and also thank you very much alison and

310
00:11:22,560 --> 00:11:24,240
the ombuds team for you know coming

311
00:11:24,240 --> 00:11:26,320
along and doing this and also apologies

312
00:11:26,320 --> 00:11:28,560
to everyone that this was needed

313
00:11:28,560 --> 00:11:30,079
and

314
00:11:30,079 --> 00:11:32,240
okay i'm gonna go but um i wish you

315
00:11:32,240 --> 00:11:34,320
everybody luck and i i'm gonna

316
00:11:34,320 --> 00:11:36,720
we'll we'll be continuing to monitor um

317
00:11:36,720 --> 00:11:38,320
the cases so

318
00:11:38,320 --> 00:11:41,360
please uh do us do us a favor and keep

319
00:11:41,360 --> 00:11:43,120
reading the code of conduct and thinking

320
00:11:43,120 --> 00:11:44,640
about how to be good to each other thank

321
00:11:44,640 --> 00:11:46,000
you

322
00:11:46,000 --> 00:11:48,560
and also if anybody is feeling stressed

323
00:11:48,560 --> 00:11:50,800
or you know attacked or something

324
00:11:50,800 --> 00:11:52,720
i will admit i don't always keep up with

325
00:11:52,720 --> 00:11:54,959
all the mail feel free to mention it to

326
00:11:54,959 --> 00:11:56,320
the chairs and feel free to mention it

327
00:11:56,320 --> 00:11:57,200
to me

328
00:11:57,200 --> 00:12:00,320
you know if stuff's not going well

329
00:12:00,320 --> 00:12:01,120
just

330
00:12:01,120 --> 00:12:02,880
speak up and let's get this under

331
00:12:02,880 --> 00:12:03,839
control

332
00:12:03,839 --> 00:12:04,639
and

333
00:12:04,639 --> 00:12:07,440
i believe that the first set is

334
00:12:07,440 --> 00:12:08,839
mr yobe

335
00:12:08,839 --> 00:12:12,079
with a long title which

336
00:12:12,079 --> 00:12:13,920
natalie will read out because i'm trying

337
00:12:13,920 --> 00:12:15,920
to find the slide

338
00:12:15,920 --> 00:12:19,040
update on resource shine checklist and

339
00:12:19,040 --> 00:12:21,040
rpki client

340
00:12:21,040 --> 00:12:21,839
where

341
00:12:21,839 --> 00:12:24,480
which slide deck is that the second one

342
00:12:24,480 --> 00:12:26,800
i think

343
00:12:29,200 --> 00:12:32,160
well meet echo decided to just close the

344
00:12:32,160 --> 00:12:35,439
tab at me oh

345
00:12:36,839 --> 00:12:38,800
no don't if you want to start

346
00:12:38,800 --> 00:12:40,480
introducing yourself just in case

347
00:12:40,480 --> 00:12:42,720
somebody doesn't know who you are

348
00:12:42,720 --> 00:12:45,279
my name is job snyders

349
00:12:45,279 --> 00:12:49,920
i work for fastly contribute to open bsd

350
00:12:50,079 --> 00:12:53,120
in the last two years i started running

351
00:12:53,120 --> 00:12:56,160
hiking kung fu

352
00:12:58,000 --> 00:13:00,480
i'm waiting for data tracker to load the

353
00:13:00,480 --> 00:13:02,959
tab closed itself which was awesome did

354
00:13:02,959 --> 00:13:07,000
you try disabling ipv6

355
00:13:12,000 --> 00:13:13,760
no actually i'm not luckily because i

356
00:13:13,760 --> 00:13:16,079
would have felt like an idiot if i were

357
00:13:16,079 --> 00:13:19,079
rejoining

358
00:13:19,360 --> 00:13:22,480
request browser permissions

359
00:13:22,480 --> 00:13:24,399
complete

360
00:13:24,399 --> 00:13:26,240
click share slides

361
00:13:26,240 --> 00:13:29,200
i only see

362
00:13:29,360 --> 00:13:31,440
sign tell verification

363
00:13:31,440 --> 00:13:33,600
hey how is that even possible

364
00:13:33,600 --> 00:13:37,600
i will have to share from my

365
00:13:37,920 --> 00:13:40,880
thing instead from my tab sorry that

366
00:13:40,880 --> 00:13:42,480
this is all

367
00:13:42,480 --> 00:13:45,120
taking a while

368
00:13:45,120 --> 00:13:47,040
luckily that's in no way embarrassing

369
00:13:47,040 --> 00:13:50,480
like we've never used a computer before

370
00:13:50,480 --> 00:13:53,680
do you want to share my screen

371
00:13:55,120 --> 00:13:57,920
why not try what was wrong with uh

372
00:13:57,920 --> 00:14:01,519
slide sharing the pre-uploaded ones

373
00:14:01,519 --> 00:14:03,760
they are pre-uploaded but for some

374
00:14:03,760 --> 00:14:06,720
reason my machine they decided to not

375
00:14:06,720 --> 00:14:08,399
show them again

376
00:14:08,399 --> 00:14:09,519
they are

377
00:14:09,519 --> 00:14:12,240
so they are in the meeting materials

378
00:14:12,240 --> 00:14:13,920
they all are but

379
00:14:13,920 --> 00:14:16,959
they don't show up in uh

380
00:14:16,959 --> 00:14:20,319
the chair truly thingy

381
00:14:25,279 --> 00:14:26,560
do they show up for you in the chat then

382
00:14:26,560 --> 00:14:27,360
they

383
00:14:27,360 --> 00:14:30,160
meet echoview

384
00:14:33,839 --> 00:14:35,440
would you mind doing the magic to make

385
00:14:35,440 --> 00:14:37,519
the pre-uploaded slides populate into

386
00:14:37,519 --> 00:14:39,360
the share thing again if you're on the

387
00:14:39,360 --> 00:14:43,639
thing they are in the chat

388
00:14:47,360 --> 00:14:48,800
and of course my browser had also

389
00:14:48,800 --> 00:14:52,719
updated what and i can see them

390
00:14:54,720 --> 00:14:56,880
i said i can see them

391
00:14:56,880 --> 00:14:58,800
now they've all populated they have now

392
00:14:58,800 --> 00:15:01,199
populated in the thing yeah so which set

393
00:15:01,199 --> 00:15:02,800
was it the name

394
00:15:02,800 --> 00:15:04,639
rsc yeah

395
00:15:04,639 --> 00:15:06,240
there you go goodness me that took a

396
00:15:06,240 --> 00:15:08,639
while apologies

397
00:15:08,639 --> 00:15:10,800
all right i have a timer as well how

398
00:15:10,800 --> 00:15:14,639
much time do i have ten perfect

399
00:15:14,959 --> 00:15:16,480
uh research

400
00:15:16,480 --> 00:15:18,720
resource science checklist

401
00:15:18,720 --> 00:15:20,480
uh this has worked together with ben

402
00:15:20,480 --> 00:15:22,800
madison and tom harrison

403
00:15:22,800 --> 00:15:24,399
and there are many other contributors

404
00:15:24,399 --> 00:15:25,360
that

405
00:15:25,360 --> 00:15:26,800
helped us develop the current

406
00:15:26,800 --> 00:15:28,560
specification

407
00:15:28,560 --> 00:15:31,359
next slide please

408
00:15:34,480 --> 00:15:37,120
so what is an rsc

409
00:15:37,120 --> 00:15:39,120
rc is an idea that

410
00:15:39,120 --> 00:15:42,480
is essentially a conceptual successor to

411
00:15:42,480 --> 00:15:45,440
an earlier idea called rta

412
00:15:45,440 --> 00:15:48,639
but it is a simplification of rta

413
00:15:48,639 --> 00:15:51,360
you can find references in the draft to

414
00:15:51,360 --> 00:15:54,839
the prior work

415
00:15:54,880 --> 00:15:58,560
what rc offers us is the means to

416
00:15:58,560 --> 00:16:00,900
use the rpki to

417
00:16:00,900 --> 00:16:02,399
[Music]

418
00:16:02,399 --> 00:16:03,600
sign

419
00:16:03,600 --> 00:16:06,560
arbitrary digital objects in the form of

420
00:16:06,560 --> 00:16:07,680
a hash

421
00:16:07,680 --> 00:16:09,199
you can sign

422
00:16:09,199 --> 00:16:12,560
so-called with resources

423
00:16:12,560 --> 00:16:16,240
rlcs are distributed outside of the rpki

424
00:16:16,240 --> 00:16:19,199
publication system so their existence

425
00:16:19,199 --> 00:16:20,959
does not

426
00:16:20,959 --> 00:16:23,120
in any way impedes the the current

427
00:16:23,120 --> 00:16:26,880
ecosystem used for routing objects

428
00:16:26,880 --> 00:16:28,959
and they could be useful in bring your

429
00:16:28,959 --> 00:16:31,519
own ip address or bring your own as

430
00:16:31,519 --> 00:16:33,440
scenarios

431
00:16:33,440 --> 00:16:35,600
in context of for instance peering to be

432
00:16:35,600 --> 00:16:38,240
or cloud providers

433
00:16:38,240 --> 00:16:40,800
you have to imagine that the likes of

434
00:16:40,800 --> 00:16:43,279
say fastly or amazon

435
00:16:43,279 --> 00:16:46,959
when there's a bring your own ip request

436
00:16:46,959 --> 00:16:49,600
that indeed it's useful to have the

437
00:16:49,600 --> 00:16:52,240
resource holder create a row app

438
00:16:52,240 --> 00:16:56,160
but the web user signing up to us

439
00:16:56,160 --> 00:16:58,160
we don't know if they were actually the

440
00:16:58,160 --> 00:17:00,480
ones that created the row app

441
00:17:00,480 --> 00:17:02,560
and we don't really care who they are

442
00:17:02,560 --> 00:17:06,319
but we do care if they are able to sign

443
00:17:06,319 --> 00:17:09,839
with the appropriate private keys

444
00:17:09,839 --> 00:17:10,640
the

445
00:17:10,640 --> 00:17:13,599
current running code state is there's

446
00:17:13,599 --> 00:17:15,039
multiple

447
00:17:15,039 --> 00:17:16,880
implementations

448
00:17:16,880 --> 00:17:19,520
there there's uh two signers uh one

449
00:17:19,520 --> 00:17:21,599
created by ben madison one created by

450
00:17:21,599 --> 00:17:23,199
tom harrison

451
00:17:23,199 --> 00:17:25,839
uh and on the validation site there also

452
00:17:25,839 --> 00:17:27,919
is multiple implementations that

453
00:17:27,919 --> 00:17:30,559
demonstrate how these objects are

454
00:17:30,559 --> 00:17:31,760
to be

455
00:17:31,760 --> 00:17:36,320
decoded and validated next slide please

456
00:17:41,200 --> 00:17:44,799
the last update on this was at

457
00:17:44,840 --> 00:17:46,799
iatf111 we

458
00:17:46,799 --> 00:17:48,799
through the iana early allocation

459
00:17:48,799 --> 00:17:51,120
procedure received a code point to

460
00:17:51,120 --> 00:17:53,600
foster interoperability testing

461
00:17:53,600 --> 00:17:55,600
uh by now that code point has been

462
00:17:55,600 --> 00:17:56,799
renewed

463
00:17:56,799 --> 00:17:58,880
and the code point has been added to

464
00:17:58,880 --> 00:18:02,000
openness openssl 3.0 which is has been

465
00:18:02,000 --> 00:18:04,080
released a few months ago

466
00:18:04,080 --> 00:18:07,360
and starting in libra ssl 3.4.0

467
00:18:07,360 --> 00:18:09,919
the code point is also available

468
00:18:09,919 --> 00:18:10,960
but

469
00:18:10,960 --> 00:18:13,120
these code points uh in in the

470
00:18:13,120 --> 00:18:16,480
cryptographic libraries are uh nice but

471
00:18:16,480 --> 00:18:19,039
uh all rpe implementations know that

472
00:18:19,039 --> 00:18:21,919
they also have to uh declare the code

473
00:18:21,919 --> 00:18:23,520
points in their own

474
00:18:23,520 --> 00:18:26,640
uh rp software because you cannot rely

475
00:18:26,640 --> 00:18:28,799
on the library being new enough to

476
00:18:28,799 --> 00:18:30,320
support code points like this

477
00:18:30,320 --> 00:18:31,760
unfortunately

478
00:18:31,760 --> 00:18:34,559
next slide please

479
00:18:35,360 --> 00:18:36,240
the

480
00:18:36,240 --> 00:18:40,240
rsc files have the dot sig extension sig

481
00:18:40,240 --> 00:18:43,360
short for signature

482
00:18:43,360 --> 00:18:45,360
there is example files available on

483
00:18:45,360 --> 00:18:46,799
github

484
00:18:46,799 --> 00:18:48,799
that you can use for for testing your

485
00:18:48,799 --> 00:18:51,200
own encoder or decoder

486
00:18:51,200 --> 00:18:54,080
this should be fairly straightforward

487
00:18:54,080 --> 00:18:54,880
as

488
00:18:54,880 --> 00:18:58,080
rsc files are sort of a mixture between

489
00:18:58,080 --> 00:18:59,280
uh

490
00:18:59,280 --> 00:19:02,240
the rfc3779

491
00:19:02,240 --> 00:19:04,880
extension as it exists in the ca

492
00:19:04,880 --> 00:19:06,160
certificates

493
00:19:06,160 --> 00:19:09,440
and you can take some inspiration from

494
00:19:09,440 --> 00:19:11,520
manifest handling

495
00:19:11,520 --> 00:19:13,520
so if you glue those two together you

496
00:19:13,520 --> 00:19:14,799
you

497
00:19:14,799 --> 00:19:17,600
easily end up with an rc uh

498
00:19:17,600 --> 00:19:19,840
capable parser

499
00:19:19,840 --> 00:19:22,559
next slide please

500
00:19:23,440 --> 00:19:24,799
this document

501
00:19:24,799 --> 00:19:27,679
would be really nice if other interested

502
00:19:27,679 --> 00:19:30,480
parties contribute

503
00:19:30,480 --> 00:19:33,039
the expectation of of the implementation

504
00:19:33,039 --> 00:19:36,320
report is that per normative term term

505
00:19:36,320 --> 00:19:38,799
in the draft people indicate whether

506
00:19:38,799 --> 00:19:41,919
they implemented it or not and if not

507
00:19:41,919 --> 00:19:43,600
why not

508
00:19:43,600 --> 00:19:45,600
so the why not could be that

509
00:19:45,600 --> 00:19:48,640
you wrote a signer implementation

510
00:19:48,640 --> 00:19:51,520
which doesn't concern itself with actual

511
00:19:51,520 --> 00:19:54,559
validation so it's all very uh context

512
00:19:54,559 --> 00:19:56,799
dependent on which of these uh fields

513
00:19:56,799 --> 00:19:59,120
you'd implement

514
00:19:59,120 --> 00:20:01,200
which of the what values you'd fill in

515
00:20:01,200 --> 00:20:02,960
in this table

516
00:20:02,960 --> 00:20:04,480
but the

517
00:20:04,480 --> 00:20:06,799
advantage of filling in reports like

518
00:20:06,799 --> 00:20:08,640
these is that we get a good

519
00:20:08,640 --> 00:20:10,400
understanding of whether

520
00:20:10,400 --> 00:20:12,320
all normative terms in a certain

521
00:20:12,320 --> 00:20:15,360
document are covered by at least

522
00:20:15,360 --> 00:20:17,039
two implementations

523
00:20:17,039 --> 00:20:18,799
which means that two individual human

524
00:20:18,799 --> 00:20:21,039
beings were able to decipher the

525
00:20:21,039 --> 00:20:24,720
internet draft and convert it into code

526
00:20:24,720 --> 00:20:26,400
and this greatly helps with the shepard

527
00:20:26,400 --> 00:20:27,360
write up

528
00:20:27,360 --> 00:20:30,799
and also the isg review

529
00:20:30,799 --> 00:20:32,559
in subsequent steps

530
00:20:32,559 --> 00:20:35,280
so if you're interested to

531
00:20:35,280 --> 00:20:37,600
work on rrc please also take a look at

532
00:20:37,600 --> 00:20:39,919
this wiki page and and fill it in as you

533
00:20:39,919 --> 00:20:42,080
deem fit

534
00:20:42,080 --> 00:20:43,840
um sorry

535
00:20:43,840 --> 00:20:46,639
yeah next slide

536
00:20:47,280 --> 00:20:50,799
the request to the big five

537
00:20:50,799 --> 00:20:53,280
the likes of aaron a p nick ripe afraid

538
00:20:53,280 --> 00:20:54,559
eclectic

539
00:20:54,559 --> 00:20:56,480
is to consider

540
00:20:56,480 --> 00:20:59,600
implementing rsc support in the hosted

541
00:20:59,600 --> 00:21:01,120
environments in

542
00:21:01,120 --> 00:21:04,159
the rpki dashboard or web portal or

543
00:21:04,159 --> 00:21:07,039
whatever you call it exactly

544
00:21:07,039 --> 00:21:09,520
all of the rers have different user

545
00:21:09,520 --> 00:21:12,320
interfaces which i consider a positive

546
00:21:12,320 --> 00:21:14,640
thing because that is a good indication

547
00:21:14,640 --> 00:21:16,480
of diversity

548
00:21:16,480 --> 00:21:20,080
and allows us to learn from each other

549
00:21:20,080 --> 00:21:22,960
so in yellow is is an example that maybe

550
00:21:22,960 --> 00:21:25,520
is applicable in context of aaron's

551
00:21:25,520 --> 00:21:28,080
email interface

552
00:21:28,080 --> 00:21:31,039
and and the the lower right could be a

553
00:21:31,039 --> 00:21:33,440
web form where you for instance fill in

554
00:21:33,440 --> 00:21:36,159
the resource with which you want to sign

555
00:21:36,159 --> 00:21:37,679
the hashes over which you want to

556
00:21:37,679 --> 00:21:40,320
generate the signature optionally a file

557
00:21:40,320 --> 00:21:41,440
name

558
00:21:41,440 --> 00:21:43,840
and the validity

559
00:21:43,840 --> 00:21:46,640
of the rsc

560
00:21:46,640 --> 00:21:48,159
and then what you should get back out of

561
00:21:48,159 --> 00:21:49,280
the system

562
00:21:49,280 --> 00:21:52,880
is a sick file that you then can either

563
00:21:52,880 --> 00:21:54,400
email or

564
00:21:54,400 --> 00:21:56,640
upload through a web form or

565
00:21:56,640 --> 00:21:59,120
put on a usb stick or whatever the

566
00:21:59,120 --> 00:22:01,360
transportation means are

567
00:22:01,360 --> 00:22:03,520
transportation happens outside the

568
00:22:03,520 --> 00:22:06,000
global repository system

569
00:22:06,000 --> 00:22:08,960
and of course you should make a tool to

570
00:22:08,960 --> 00:22:10,240
revoke

571
00:22:10,240 --> 00:22:12,720
the ee served in the rrc

572
00:22:12,720 --> 00:22:14,880
so that if any future point in time you

573
00:22:14,880 --> 00:22:16,320
you want to

574
00:22:16,320 --> 00:22:19,840
withdraw the the attestation uh there's

575
00:22:19,840 --> 00:22:23,039
an ability to do so

576
00:22:23,200 --> 00:22:26,679
next slide please

577
00:22:27,760 --> 00:22:30,320
um the spec has been stable for quite

578
00:22:30,320 --> 00:22:31,440
some time

579
00:22:31,440 --> 00:22:32,480
between

580
00:22:32,480 --> 00:22:35,039
version 5 and version 6 we essentially

581
00:22:35,039 --> 00:22:38,080
only bumped the the version

582
00:22:38,080 --> 00:22:40,559
i think there's uh sufficient running

583
00:22:40,559 --> 00:22:44,640
code to to see that it works and is uh

584
00:22:44,640 --> 00:22:46,960
implementable

585
00:22:46,960 --> 00:22:49,039
so with that i would actually want to

586
00:22:49,039 --> 00:22:51,280
wrap this project up and

587
00:22:51,280 --> 00:22:55,039
request working group last call

588
00:22:55,039 --> 00:22:58,159
and we have two minutes left for

589
00:22:58,159 --> 00:23:00,799
questions comments

590
00:23:00,799 --> 00:23:04,559
so with that i hand it back to

591
00:23:04,559 --> 00:23:08,120
the circus master

592
00:23:09,840 --> 00:23:12,080
jeff

593
00:23:12,960 --> 00:23:13,679
yo

594
00:23:13,679 --> 00:23:15,360
quick operational question since i

595
00:23:15,360 --> 00:23:17,919
haven't been following this

596
00:23:17,919 --> 00:23:20,000
i think this is a wonderful idea

597
00:23:20,000 --> 00:23:22,960
uh i don't operate one of the

598
00:23:22,960 --> 00:23:24,559
caches that collect all this stuff and

599
00:23:24,559 --> 00:23:27,440
do all the nasty crypto to verify it

600
00:23:27,440 --> 00:23:30,880
is there any long-term concern about uh

601
00:23:30,880 --> 00:23:33,440
adding a large number of objects to the

602
00:23:33,440 --> 00:23:36,320
rpki system and impacts on the various

603
00:23:36,320 --> 00:23:39,360
applications that use it

604
00:23:39,760 --> 00:23:42,320
jeff thank you for the question

605
00:23:42,320 --> 00:23:44,720
it is very important to note that rsc

606
00:23:44,720 --> 00:23:48,159
files are distributed outside the global

607
00:23:48,159 --> 00:23:51,120
rpk repository system

608
00:23:51,120 --> 00:23:54,880
to illustrate what that means exactly

609
00:23:54,880 --> 00:23:55,919
roas

610
00:23:55,919 --> 00:24:00,080
route origin authorizations or crls or

611
00:24:00,080 --> 00:24:02,480
manifest files are distributed inside

612
00:24:02,480 --> 00:24:04,720
the global repository system so if you

613
00:24:04,720 --> 00:24:07,200
use rsync or rdp

614
00:24:07,200 --> 00:24:09,520
those are the files you you you pull

615
00:24:09,520 --> 00:24:12,640
into the system but rsc files

616
00:24:12,640 --> 00:24:14,880
are not distributed through that means

617
00:24:14,880 --> 00:24:16,799
they are distributed in a one-to-one

618
00:24:16,799 --> 00:24:20,080
fashion so i could generate an rsc file

619
00:24:20,080 --> 00:24:21,360
email it to you

620
00:24:21,360 --> 00:24:23,440
and the global participants in this

621
00:24:23,440 --> 00:24:25,919
ecosystem would never ever know that i

622
00:24:25,919 --> 00:24:28,080
generated one and send it to you so

623
00:24:28,080 --> 00:24:30,840
there is no burden on the global

624
00:24:30,840 --> 00:24:35,120
system answers my question thank you

625
00:24:35,679 --> 00:24:38,480
thank you and i'm next in the queue

626
00:24:38,480 --> 00:24:39,440
um

627
00:24:39,440 --> 00:24:41,360
what would be helpful is at some point

628
00:24:41,360 --> 00:24:43,120
somebody explains to me the relationship

629
00:24:43,120 --> 00:24:46,480
between this and side ups rpki has no

630
00:24:46,480 --> 00:24:48,320
identity it feels like they're closely

631
00:24:48,320 --> 00:24:50,080
related i'm going to have to explain it

632
00:24:50,080 --> 00:24:52,159
when it goes to isg evil

633
00:24:52,159 --> 00:24:54,480
and rudiger will do your question

634
00:24:54,480 --> 00:24:55,679
question but then we'll cut the queue

635
00:24:55,679 --> 00:24:58,960
right after yeah

636
00:24:59,600 --> 00:25:02,640
you want to answer the question no

637
00:25:02,640 --> 00:25:04,880
do that oh okay somebody can explain it

638
00:25:04,880 --> 00:25:06,720
i mean if you want to take over my job

639
00:25:06,720 --> 00:25:08,640
you will be shorter

640
00:25:08,640 --> 00:25:10,080
um

641
00:25:10,080 --> 00:25:12,400
the relationship has been

642
00:25:12,400 --> 00:25:13,520
noted

643
00:25:13,520 --> 00:25:16,080
in the rsc draft itself the rc draft

644
00:25:16,080 --> 00:25:19,279
references the no identity

645
00:25:19,279 --> 00:25:22,960
draft and the rsc draft explains that rc

646
00:25:22,960 --> 00:25:25,919
files cannot be used to confirm identity

647
00:25:25,919 --> 00:25:28,159
all it does is it confirms that somebody

648
00:25:28,159 --> 00:25:30,799
has possession of the private keys

649
00:25:30,799 --> 00:25:31,760
and

650
00:25:31,760 --> 00:25:33,039
uh

651
00:25:33,039 --> 00:25:35,600
the resources with which they signed are

652
00:25:35,600 --> 00:25:38,400
subordinate to the the certificate

653
00:25:38,400 --> 00:25:40,240
authority okay so

654
00:25:40,240 --> 00:25:42,880
from my perspective there is uh no

655
00:25:42,880 --> 00:25:45,520
conflict whatsoever um i think everybody

656
00:25:45,520 --> 00:25:48,000
is on the same page and uh

657
00:25:48,000 --> 00:25:49,600
and it's it's explained in the draft

658
00:25:49,600 --> 00:25:51,600
itself

659
00:25:51,600 --> 00:25:54,840
uh very short yeah uh

660
00:25:54,840 --> 00:25:58,080
referencing back to jeff's question

661
00:25:58,080 --> 00:25:59,279
about

662
00:25:59,279 --> 00:26:02,480
what is the load on the general

663
00:26:02,480 --> 00:26:05,120
distribution mechanism

664
00:26:05,120 --> 00:26:06,400
uh

665
00:26:06,400 --> 00:26:10,640
i was surprised by your poi your request

666
00:26:10,640 --> 00:26:12,799
for revocation tools which quite

667
00:26:12,799 --> 00:26:14,000
obviously

668
00:26:14,000 --> 00:26:17,679
uh will have a need on the distribution

669
00:26:17,679 --> 00:26:18,880
system

670
00:26:18,880 --> 00:26:20,640
and i

671
00:26:20,640 --> 00:26:22,960
but that's that's actually a surprising

672
00:26:22,960 --> 00:26:24,559
point

673
00:26:24,559 --> 00:26:27,039
yes the the only load on the global

674
00:26:27,039 --> 00:26:30,799
system is if you revoke an rsc

675
00:26:30,799 --> 00:26:32,720
uh the serial

676
00:26:32,720 --> 00:26:34,960
is appended to to

677
00:26:34,960 --> 00:26:39,120
this the crl of that that ca uh so per

678
00:26:39,120 --> 00:26:41,120
rsc that you're revoking

679
00:26:41,120 --> 00:26:43,360
you're you're adding a few bytes to a

680
00:26:43,360 --> 00:26:44,960
crl

681
00:26:44,960 --> 00:26:47,600
but then again the cr rsc files could be

682
00:26:47,600 --> 00:26:50,240
short lived uh where you you don't want

683
00:26:50,240 --> 00:26:51,440
to revoke

684
00:26:51,440 --> 00:26:54,240
this is something we'll we'll have to

685
00:26:54,240 --> 00:26:57,279
figure out in in the wild

686
00:26:57,279 --> 00:26:58,640
this is a tool

687
00:26:58,640 --> 00:27:00,080
we're putting it in the toolbox and

688
00:27:00,080 --> 00:27:02,640
we'll we'll see how it works out

689
00:27:02,640 --> 00:27:05,679
okay thank you and we are close on time

690
00:27:05,679 --> 00:27:07,760
so let's get on to the next one which

691
00:27:07,760 --> 00:27:09,840
might also have been

692
00:27:09,840 --> 00:27:12,640
uh what's the file name for this one is

693
00:27:12,640 --> 00:27:13,760
uh

694
00:27:13,760 --> 00:27:17,039
discard origin authorization

695
00:27:17,039 --> 00:27:19,039
and i will put you down for nine minutes

696
00:27:19,039 --> 00:27:20,960
even though we said 10 because we wasted

697
00:27:20,960 --> 00:27:24,480
the first bit me losing things okay

698
00:27:24,480 --> 00:27:27,120
thank you sir

699
00:27:28,159 --> 00:27:30,880
not miss slides

700
00:27:31,279 --> 00:27:33,360
anyway i'm ben madison i work for work

701
00:27:33,360 --> 00:27:36,320
online communications

702
00:27:37,279 --> 00:27:40,960
and hopefully we'll have slides soon

703
00:27:44,880 --> 00:27:46,559
we've just discovered it'd be useful to

704
00:27:46,559 --> 00:27:48,320
have the title not just the file name

705
00:27:48,320 --> 00:27:51,039
and the file share

706
00:27:51,679 --> 00:27:53,440
anyway so

707
00:27:53,440 --> 00:27:55,760
doa was the acronym that we came up with

708
00:27:55,760 --> 00:27:58,080
before we had quite agreed on what doa

709
00:27:58,080 --> 00:27:59,600
stood for so that is still subject to

710
00:27:59,600 --> 00:28:01,279
change

711
00:28:01,279 --> 00:28:02,720
but this is another piece of work

712
00:28:02,720 --> 00:28:04,880
between myself job and mikhail who's not

713
00:28:04,880 --> 00:28:07,679
here today although maybe online um next

714
00:28:07,679 --> 00:28:10,159
slide please

715
00:28:11,200 --> 00:28:12,080
so

716
00:28:12,080 --> 00:28:14,159
a very brief bit of background in case

717
00:28:14,159 --> 00:28:16,480
anyone is unfamiliar with the the

718
00:28:16,480 --> 00:28:18,799
practice um out in the wild of the

719
00:28:18,799 --> 00:28:21,760
internet in order to try and mitigate

720
00:28:21,760 --> 00:28:25,520
the effect of distributed

721
00:28:25,520 --> 00:28:27,600
dos attacks

722
00:28:27,600 --> 00:28:29,760
it's fairly common practice for

723
00:28:29,760 --> 00:28:33,919
operators to need to ask someone closer

724
00:28:33,919 --> 00:28:35,760
to the source of the attack to discard

725
00:28:35,760 --> 00:28:37,360
traffic on their behalf because

726
00:28:37,360 --> 00:28:39,520
otherwise by the time it's on net for

727
00:28:39,520 --> 00:28:42,000
them it's already overwhelmed links or

728
00:28:42,000 --> 00:28:44,640
devices on the path and

729
00:28:44,640 --> 00:28:46,880
generally this is done by adding a

730
00:28:46,880 --> 00:28:49,919
special purpose bgp community to a to a

731
00:28:49,919 --> 00:28:52,240
bgp announcement and

732
00:28:52,240 --> 00:28:54,960
that community signals a request for the

733
00:28:54,960 --> 00:28:57,440
recipient of that route to drop the

734
00:28:57,440 --> 00:28:59,200
match traffic on the floor rather than

735
00:28:59,200 --> 00:29:00,559
forward it towards

736
00:29:00,559 --> 00:29:03,520
the the announcer of the prefix um

737
00:29:03,520 --> 00:29:04,559
and

738
00:29:04,559 --> 00:29:05,760
this

739
00:29:05,760 --> 00:29:08,000
mechanism is is the thing that we're

740
00:29:08,000 --> 00:29:10,399
trying to make a little bit more robust

741
00:29:10,399 --> 00:29:12,159
and secure through through the use of

742
00:29:12,159 --> 00:29:16,159
doas next slide please warren

743
00:29:16,399 --> 00:29:18,399
okay so today

744
00:29:18,399 --> 00:29:19,919
um

745
00:29:19,919 --> 00:29:21,279
so today as i say there's this fairly

746
00:29:21,279 --> 00:29:22,799
common practice that's been around for a

747
00:29:22,799 --> 00:29:24,799
while which is inter-domain rtbh

748
00:29:24,799 --> 00:29:27,679
signaling and over the last maybe three

749
00:29:27,679 --> 00:29:29,360
four years or so it's become

750
00:29:29,360 --> 00:29:32,080
increasingly common for operators to run

751
00:29:32,080 --> 00:29:35,919
policies which involve dropping anything

752
00:29:35,919 --> 00:29:38,480
that has a rov validation status of

753
00:29:38,480 --> 00:29:41,039
invalid on the floor at every ingress to

754
00:29:41,039 --> 00:29:41,840
their

755
00:29:41,840 --> 00:29:43,440
bgp topology

756
00:29:43,440 --> 00:29:48,080
and these don't play nicely um excellent

757
00:29:48,960 --> 00:29:52,080
the fundamental problem is that

758
00:29:52,080 --> 00:29:55,760
by announcing an rtbh route for a victim

759
00:29:55,760 --> 00:29:57,840
of a ddos attack you're essentially

760
00:29:57,840 --> 00:30:00,000
completing the attack for the attacker

761
00:30:00,000 --> 00:30:02,559
um you know you are you are killing off

762
00:30:02,559 --> 00:30:04,240
the victim in order to mitigate

763
00:30:04,240 --> 00:30:05,679
collateral damage

764
00:30:05,679 --> 00:30:07,919
and as a result you want to keep the you

765
00:30:07,919 --> 00:30:10,080
want to keep as much granularity in that

766
00:30:10,080 --> 00:30:11,679
approach as possible and so usually

767
00:30:11,679 --> 00:30:14,399
these rtbh routes take the form of host

768
00:30:14,399 --> 00:30:17,760
length prefixes um

769
00:30:17,760 --> 00:30:18,880
now

770
00:30:18,880 --> 00:30:21,120
um origin validation on the other hand

771
00:30:21,120 --> 00:30:24,640
has this concept of protecting against

772
00:30:24,640 --> 00:30:27,360
two types of misorigination the first

773
00:30:27,360 --> 00:30:29,120
and most obvious being the wrong as

774
00:30:29,120 --> 00:30:31,600
number doing the origination the second

775
00:30:31,600 --> 00:30:34,840
and often more useful being

776
00:30:34,840 --> 00:30:38,240
preventing prefixes longer than some

777
00:30:38,240 --> 00:30:41,440
upper bound from being announced on the

778
00:30:41,440 --> 00:30:43,120
on the open internet and there's a

779
00:30:43,120 --> 00:30:45,120
conflict here because

780
00:30:45,120 --> 00:30:46,880
in order to

781
00:30:46,880 --> 00:30:50,159
um in order to have host length or very

782
00:30:50,159 --> 00:30:52,000
long prefixes propagate throughout the

783
00:30:52,000 --> 00:30:55,600
internet one would need to create rowers

784
00:30:55,600 --> 00:30:58,320
that permit very long prefixes

785
00:30:58,320 --> 00:30:59,440
to be

786
00:30:59,440 --> 00:31:00,880
to receive

787
00:31:00,880 --> 00:31:03,840
a valid status

788
00:31:03,840 --> 00:31:06,480
in so doing you effectively remove that

789
00:31:06,480 --> 00:31:08,640
second type of protection that rov gives

790
00:31:08,640 --> 00:31:10,960
you because you're you're essentially

791
00:31:10,960 --> 00:31:13,200
opening the door for any sub prefix

792
00:31:13,200 --> 00:31:16,320
hijack to occur for any

793
00:31:16,320 --> 00:31:18,159
any uh address space for which you want

794
00:31:18,159 --> 00:31:20,080
to be able to use this mechanism

795
00:31:20,080 --> 00:31:20,960
um

796
00:31:20,960 --> 00:31:23,039
the two common workarounds for this that

797
00:31:23,039 --> 00:31:26,480
exist today um some people force

798
00:31:26,480 --> 00:31:28,080
users of this kind of a service to

799
00:31:28,080 --> 00:31:29,760
create rows with those very long max

800
00:31:29,760 --> 00:31:30,880
length

801
00:31:30,880 --> 00:31:33,039
values which essentially turns off that

802
00:31:33,039 --> 00:31:34,559
second type of check and is not a good

803
00:31:34,559 --> 00:31:35,519
idea

804
00:31:35,519 --> 00:31:37,679
um secondly and this is what probably

805
00:31:37,679 --> 00:31:39,840
the majority of people do is they have a

806
00:31:39,840 --> 00:31:41,360
kind of a a

807
00:31:41,360 --> 00:31:42,640
carve out at the beginning of their

808
00:31:42,640 --> 00:31:45,200
routing policy which says if this is

809
00:31:45,200 --> 00:31:48,240
carrying the rtbh signal then i'm going

810
00:31:48,240 --> 00:31:51,600
to exempt it from the origin validation

811
00:31:51,600 --> 00:31:53,600
related policy upfront

812
00:31:53,600 --> 00:31:56,240
next please

813
00:31:56,240 --> 00:31:58,559
as i say the first approach is is

814
00:31:58,559 --> 00:32:00,159
problematic because it really breaks one

815
00:32:00,159 --> 00:32:02,320
of the fundamental things that origin

816
00:32:02,320 --> 00:32:04,480
validation gives you and is if anyone is

817
00:32:04,480 --> 00:32:06,080
doing that today then i would suggest

818
00:32:06,080 --> 00:32:08,159
that they stop as soon as possible next

819
00:32:08,159 --> 00:32:10,159
please

820
00:32:10,159 --> 00:32:13,519
the second is as i say the the the kind

821
00:32:13,519 --> 00:32:16,000
of the lesser of two evils today but

822
00:32:16,000 --> 00:32:17,200
it's really

823
00:32:17,200 --> 00:32:20,960
really quite problematic um firstly

824
00:32:20,960 --> 00:32:23,360
the the fallout from abuse of an rtbh

825
00:32:23,360 --> 00:32:26,880
signaling service can be quite severe um

826
00:32:26,880 --> 00:32:29,120
especially where i sit in the topology

827
00:32:29,120 --> 00:32:31,600
as a transit provider um

828
00:32:31,600 --> 00:32:33,760
my customers are obvious are very often

829
00:32:33,760 --> 00:32:36,159
competitors of one another and there is

830
00:32:36,159 --> 00:32:37,840
a very very

831
00:32:37,840 --> 00:32:39,519
straightforward

832
00:32:39,519 --> 00:32:40,399
um

833
00:32:40,399 --> 00:32:44,240
path to one customer black holing the

834
00:32:44,240 --> 00:32:46,320
prefixes of another customer using this

835
00:32:46,320 --> 00:32:48,080
kind of mechanism which is almost

836
00:32:48,080 --> 00:32:49,440
impossible for me to defend against

837
00:32:49,440 --> 00:32:52,240
today without a mechanism like this um

838
00:32:52,240 --> 00:32:54,720
next please

839
00:32:55,120 --> 00:32:57,039
and there's other kind of you know side

840
00:32:57,039 --> 00:33:01,679
issues as well um whereas a rower has

841
00:33:01,679 --> 00:33:02,799
a

842
00:33:02,799 --> 00:33:05,200
has has meaning in a global kind of

843
00:33:05,200 --> 00:33:07,600
default free zone wide scope

844
00:33:07,600 --> 00:33:11,519
um rtbh signals are typically used very

845
00:33:11,519 --> 00:33:14,960
very locally you're not expecting to

846
00:33:14,960 --> 00:33:17,039
advertise one of these host length black

847
00:33:17,039 --> 00:33:19,279
hole routes and have everyone on the

848
00:33:19,279 --> 00:33:21,760
internet starting to drop traffic um the

849
00:33:21,760 --> 00:33:24,640
intention is that at most that signal is

850
00:33:24,640 --> 00:33:26,960
intended to propagate one or two as hops

851
00:33:26,960 --> 00:33:29,919
away from you um and rowers simply don't

852
00:33:29,919 --> 00:33:31,519
mean that and have no way of

853
00:33:31,519 --> 00:33:35,200
communicating that kind of a scoping

854
00:33:35,519 --> 00:33:37,120
the other problem

855
00:33:37,120 --> 00:33:40,399
is that we have no either implemented or

856
00:33:40,399 --> 00:33:42,640
even proposed mechanism to provide

857
00:33:42,640 --> 00:33:44,960
secure attribution of who's added a

858
00:33:44,960 --> 00:33:47,519
community to a root so in a situation

859
00:33:47,519 --> 00:33:49,120
where the origin is more than one hop

860
00:33:49,120 --> 00:33:51,840
away from you it's entirely unclear as a

861
00:33:51,840 --> 00:33:54,399
receiver whether it was the origin or

862
00:33:54,399 --> 00:33:56,240
their transit or their transits transit

863
00:33:56,240 --> 00:33:58,080
that decided this traffic should be

864
00:33:58,080 --> 00:34:00,080
falling on the floor and that has

865
00:34:00,080 --> 00:34:02,159
substantial contractual implications as

866
00:34:02,159 --> 00:34:03,360
you can imagine

867
00:34:03,360 --> 00:34:04,559
um

868
00:34:04,559 --> 00:34:07,360
and this is that that first point is

869
00:34:07,360 --> 00:34:10,239
made a little harder actually because

870
00:34:10,239 --> 00:34:11,679
there's a there's a there's a well-known

871
00:34:11,679 --> 00:34:14,159
community um that's defined in

872
00:34:14,159 --> 00:34:16,159
in several triple nine

873
00:34:16,159 --> 00:34:17,679
which

874
00:34:17,679 --> 00:34:19,520
which uh which

875
00:34:19,520 --> 00:34:21,280
um

876
00:34:21,280 --> 00:34:23,040
which is a value that anybody can use to

877
00:34:23,040 --> 00:34:25,599
indicate this uh the the semantics

878
00:34:25,599 --> 00:34:27,280
without having to carve out a special

879
00:34:27,280 --> 00:34:29,359
community from their namespace

880
00:34:29,359 --> 00:34:30,960
but what the old practice before this

881
00:34:30,960 --> 00:34:33,599
came along gave you was at least some

882
00:34:33,599 --> 00:34:35,679
indication of who the origin is trying

883
00:34:35,679 --> 00:34:38,079
to talk to because if they

884
00:34:38,079 --> 00:34:39,760
if they're using a community that i've

885
00:34:39,760 --> 00:34:41,440
allocated from my name space then i can

886
00:34:41,440 --> 00:34:43,679
interpret that as it being a request to

887
00:34:43,679 --> 00:34:44,480
me

888
00:34:44,480 --> 00:34:46,800
whereas if there's this general purpose

889
00:34:46,800 --> 00:34:50,079
um signal then it's difficult to know

890
00:34:50,079 --> 00:34:53,679
out if it's propagating kind of beyond

891
00:34:53,679 --> 00:34:55,280
the the neighborhood of the origin it's

892
00:34:55,280 --> 00:34:56,639
difficult to know who should listen to

893
00:34:56,639 --> 00:34:58,240
that and just a note you've only got

894
00:34:58,240 --> 00:34:59,839
around two minutes so okay sorry i'll

895
00:34:59,839 --> 00:35:03,400
try and speed up

896
00:35:04,400 --> 00:35:06,400
okay so the idea is essentially to

897
00:35:06,400 --> 00:35:07,680
follow

898
00:35:07,680 --> 00:35:09,680
most of the logic that exists today in

899
00:35:09,680 --> 00:35:12,079
origin validation um

900
00:35:12,079 --> 00:35:13,760
but to add

901
00:35:13,760 --> 00:35:16,079
um add some heuristics to the object

902
00:35:16,079 --> 00:35:18,640
that we create that allows

903
00:35:18,640 --> 00:35:21,280
for receivers to know whether or not

904
00:35:21,280 --> 00:35:24,800
they should act on it um

905
00:35:25,040 --> 00:35:26,160
the

906
00:35:26,160 --> 00:35:27,520
um

907
00:35:27,520 --> 00:35:29,920
let me skip forwards maybe one in the

908
00:35:29,920 --> 00:35:32,079
interest of time

909
00:35:32,079 --> 00:35:33,119
it's a

910
00:35:33,119 --> 00:35:36,960
um 6488 style signed object um very

911
00:35:36,960 --> 00:35:39,599
similar in structure to a rower

912
00:35:39,599 --> 00:35:41,920
it follows the rower um procedure of the

913
00:35:41,920 --> 00:35:43,760
prefix holder signing the the signed

914
00:35:43,760 --> 00:35:45,920
data in the cms

915
00:35:45,920 --> 00:35:48,240
and the distribution mechanism is very

916
00:35:48,240 --> 00:35:49,839
similar as well it will require an

917
00:35:49,839 --> 00:35:52,880
extension to rtr and it will be

918
00:35:52,880 --> 00:35:53,760
pro

919
00:35:53,760 --> 00:35:56,640
validated and processed on an rp and

920
00:35:56,640 --> 00:35:59,040
that rp will be responsible for for

921
00:35:59,040 --> 00:36:00,640
sending data to the to the router for

922
00:36:00,640 --> 00:36:04,160
use in routing policies next

923
00:36:04,320 --> 00:36:08,400
this is what the content looks like next

924
00:36:09,599 --> 00:36:12,480
there's a version filled next

925
00:36:12,480 --> 00:36:14,800
um the ip address blocks is subtly

926
00:36:14,800 --> 00:36:17,599
different um to what you find in a rower

927
00:36:17,599 --> 00:36:19,520
instead of having prefix and max length

928
00:36:19,520 --> 00:36:22,800
you have prefix and length range

929
00:36:22,800 --> 00:36:24,960
reason being as i say you probably only

930
00:36:24,960 --> 00:36:27,839
want sorry let's have a minute

931
00:36:27,839 --> 00:36:29,680
um

932
00:36:29,680 --> 00:36:30,480
you

933
00:36:30,480 --> 00:36:32,160
you don't want if you if you're if your

934
00:36:32,160 --> 00:36:34,640
prefix is a a 16

935
00:36:34,640 --> 00:36:37,359
you may want to accept rtbh roots for a

936
00:36:37,359 --> 00:36:39,760
31 and a 32 but probably not everything

937
00:36:39,760 --> 00:36:41,920
in the middle so you have a range the

938
00:36:41,920 --> 00:36:43,680
origin asid has exactly the same

939
00:36:43,680 --> 00:36:45,680
semantics as it does in aurora

940
00:36:45,680 --> 00:36:47,839
next please

941
00:36:47,839 --> 00:36:50,640
the peer asides is is there to provide

942
00:36:50,640 --> 00:36:53,520
that idea of scoping so um

943
00:36:53,520 --> 00:36:54,720
only if

944
00:36:54,720 --> 00:36:56,800
you have received the actual bgp

945
00:36:56,800 --> 00:36:59,119
announcement from one of the as numbers

946
00:36:59,119 --> 00:37:01,280
listed in peer asides you expected to

947
00:37:01,280 --> 00:37:03,760
act on it um

948
00:37:03,760 --> 00:37:06,000
next

949
00:37:06,640 --> 00:37:10,240
and finally there's a set of communities

950
00:37:10,240 --> 00:37:12,400
that the receiver of a bgp announcement

951
00:37:12,400 --> 00:37:14,320
can cross-reference

952
00:37:14,320 --> 00:37:16,720
against and that tells

953
00:37:16,720 --> 00:37:18,800
that tells the receiver whether what

954
00:37:18,800 --> 00:37:21,680
they think is an rtbh signal community

955
00:37:21,680 --> 00:37:24,079
is in fact being intended that way by

956
00:37:24,079 --> 00:37:26,720
the originator of the route um

957
00:37:26,720 --> 00:37:28,400
now i use the term heuristics rather

958
00:37:28,400 --> 00:37:29,520
than you know

959
00:37:29,520 --> 00:37:31,759
than

960
00:37:31,839 --> 00:37:34,079
rather than kind of specific criteria

961
00:37:34,079 --> 00:37:36,320
because none of this gives you absolute

962
00:37:36,320 --> 00:37:37,520
certainty

963
00:37:37,520 --> 00:37:38,400
that

964
00:37:38,400 --> 00:37:39,200
this

965
00:37:39,200 --> 00:37:41,760
this path that you're seeing in bgp

966
00:37:41,760 --> 00:37:44,400
absolutely is a black hole we don't have

967
00:37:44,400 --> 00:37:46,240
the mechanics to do that today either in

968
00:37:46,240 --> 00:37:49,359
bgp or in the rpki but it gives you a

969
00:37:49,359 --> 00:37:52,800
very a very very much stronger hint

970
00:37:52,800 --> 00:37:53,760
than

971
00:37:53,760 --> 00:37:54,960
um

972
00:37:54,960 --> 00:37:57,920
than today's mechanisms do and at its

973
00:37:57,920 --> 00:38:01,040
very worst it is at least as good as

974
00:38:01,040 --> 00:38:02,480
rower coverage

975
00:38:02,480 --> 00:38:04,880
for the equivalent unicast prefixes are

976
00:38:04,880 --> 00:38:07,040
so it's it's a it's it's not a

977
00:38:07,040 --> 00:38:08,480
perfect solution but i don't believe

978
00:38:08,480 --> 00:38:09,680
that we have a perfect solution

979
00:38:09,680 --> 00:38:12,640
available to us today next please

980
00:38:12,640 --> 00:38:14,560
you're gonna have to go faster yep

981
00:38:14,560 --> 00:38:17,040
um i'm gonna skip over bgp reprocessing

982
00:38:17,040 --> 00:38:18,480
because otherwise that's going to take a

983
00:38:18,480 --> 00:38:21,200
while but the general idea is that you

984
00:38:21,200 --> 00:38:23,200
have a parallel

985
00:38:23,200 --> 00:38:24,160
um

986
00:38:24,160 --> 00:38:25,839
a parallel

987
00:38:25,839 --> 00:38:28,320
uh status which kind which mirrors in

988
00:38:28,320 --> 00:38:30,320
some way the the origin validation

989
00:38:30,320 --> 00:38:32,320
status but the two are orthogonal to

990
00:38:32,320 --> 00:38:34,240
each other so it's entirely

991
00:38:34,240 --> 00:38:36,400
it's entirely legitimate to have a route

992
00:38:36,400 --> 00:38:38,800
that fails to match a door but matches a

993
00:38:38,800 --> 00:38:40,079
row in which case it's probably a

994
00:38:40,079 --> 00:38:42,079
unicast route and the reverse is true as

995
00:38:42,079 --> 00:38:45,440
well being origin validation invalid and

996
00:38:45,440 --> 00:38:48,079
being a match for a doer probably means

997
00:38:48,079 --> 00:38:49,839
that it's a host length

998
00:38:49,839 --> 00:38:52,320
rtbh route and so the idea is that those

999
00:38:52,320 --> 00:38:54,400
can be ships in the night and as long as

1000
00:38:54,400 --> 00:38:56,880
you are looking at the doa status before

1001
00:38:56,880 --> 00:38:59,440
the origin validation status you can

1002
00:38:59,440 --> 00:39:01,680
implement the same kind of check if it's

1003
00:39:01,680 --> 00:39:03,520
an rtbh route

1004
00:39:03,520 --> 00:39:04,880
up front before you look at the

1005
00:39:04,880 --> 00:39:08,240
orientation of origin validation status

1006
00:39:08,240 --> 00:39:10,800
logic just like operators are doing

1007
00:39:10,800 --> 00:39:12,880
today so it's a it's a fairly easy drop

1008
00:39:12,880 --> 00:39:15,040
into current policies

1009
00:39:15,040 --> 00:39:16,000
um

1010
00:39:16,000 --> 00:39:18,480
next please

1011
00:39:18,560 --> 00:39:20,240
this is kind of what i'm describing

1012
00:39:20,240 --> 00:39:21,680
there where you are you're checking the

1013
00:39:21,680 --> 00:39:24,240
doa state up front

1014
00:39:24,240 --> 00:39:26,560
and using it as a black hole root if it

1015
00:39:26,560 --> 00:39:28,480
matches and only then you're going on to

1016
00:39:28,480 --> 00:39:30,640
your normal kind of unicast uh routing

1017
00:39:30,640 --> 00:39:34,400
policy checks next please

1018
00:39:34,560 --> 00:39:37,520
so this is fairly early stages still i

1019
00:39:37,520 --> 00:39:40,079
think the the idea is mostly fairly well

1020
00:39:40,079 --> 00:39:41,359
formed i don't think that there's going

1021
00:39:41,359 --> 00:39:42,800
likely to be much change to the

1022
00:39:42,800 --> 00:39:44,880
underlying idea um

1023
00:39:44,880 --> 00:39:46,480
the

1024
00:39:46,480 --> 00:39:48,640
document itself needs a fair amount of

1025
00:39:48,640 --> 00:39:51,359
work um one of the questions that we had

1026
00:39:51,359 --> 00:39:52,960
for the working group is whether we

1027
00:39:52,960 --> 00:39:54,640
think that this should stay as one

1028
00:39:54,640 --> 00:39:57,040
document or whether it should be split

1029
00:39:57,040 --> 00:39:59,760
out into parts kind of like the the

1030
00:39:59,760 --> 00:40:02,320
origin validation series was um where we

1031
00:40:02,320 --> 00:40:04,240
defined the the object itself in one

1032
00:40:04,240 --> 00:40:06,079
document the validation process and

1033
00:40:06,079 --> 00:40:07,839
another and the rtr extensions in

1034
00:40:07,839 --> 00:40:10,800
another still

1035
00:40:10,800 --> 00:40:12,880
i'm not sure i have a strong opinion on

1036
00:40:12,880 --> 00:40:15,280
that so i'm i'm hoping for some feedback

1037
00:40:15,280 --> 00:40:16,160
there

1038
00:40:16,160 --> 00:40:18,640
and i'd also like to know from the

1039
00:40:18,640 --> 00:40:20,079
working group whether we think that this

1040
00:40:20,079 --> 00:40:21,920
is a good candidate for adoption at this

1041
00:40:21,920 --> 00:40:23,839
stage or whether the working group would

1042
00:40:23,839 --> 00:40:25,839
like to see it mature more as an

1043
00:40:25,839 --> 00:40:27,760
individual draft and then talk about it

1044
00:40:27,760 --> 00:40:30,000
sometime down the line

1045
00:40:30,000 --> 00:40:32,640
okay so we have jeff in the queue and if

1046
00:40:32,640 --> 00:40:35,119
you can keep your answer short thanks

1047
00:40:35,119 --> 00:40:37,760
yes so i have not read your draft

1048
00:40:37,760 --> 00:40:39,680
my question to you is is this intended

1049
00:40:39,680 --> 00:40:41,839
the address rtbh for anything in the

1050
00:40:41,839 --> 00:40:44,000
adjacent a.s

1051
00:40:44,000 --> 00:40:46,240
so that's the purpose of the

1052
00:40:46,240 --> 00:40:49,520
pras ids field the default behavior is

1053
00:40:49,520 --> 00:40:50,319
that

1054
00:40:50,319 --> 00:40:53,520
this will not allow um

1055
00:40:53,520 --> 00:40:56,560
transit for rtbh routes um but if you

1056
00:40:56,560 --> 00:40:58,960
add one of your transit providers to

1057
00:40:58,960 --> 00:41:02,400
that list of pras ids that's a signal to

1058
00:41:02,400 --> 00:41:04,160
the receiver that you have authorized

1059
00:41:04,160 --> 00:41:07,040
that transit um and that it should be

1060
00:41:07,040 --> 00:41:09,119
matched and accepted so that that is

1061
00:41:09,119 --> 00:41:11,359
supported

1062
00:41:11,359 --> 00:41:14,000
okay thank you

1063
00:41:14,240 --> 00:41:17,520
do you remember what is slidex called

1064
00:41:17,520 --> 00:41:19,040
we're just looking for ignis i think

1065
00:41:19,040 --> 00:41:21,359
you're up and we're just looking forward

1066
00:41:21,359 --> 00:41:22,400
to

1067
00:41:22,400 --> 00:41:23,680
something something

1068
00:41:23,680 --> 00:41:25,920
yes scalability okay that's the one

1069
00:41:25,920 --> 00:41:28,319
thank you

1070
00:41:28,880 --> 00:41:31,359
and you we originally said 15 if you can

1071
00:41:31,359 --> 00:41:33,839
do it in 12 or you know that would be

1072
00:41:33,839 --> 00:41:35,760
hugely appreciated

1073
00:41:35,760 --> 00:41:36,880
if

1074
00:41:36,880 --> 00:41:39,280
that's fine

1075
00:41:41,440 --> 00:41:43,520
hello the ignorance mcdonald's exactly

1076
00:41:43,520 --> 00:41:46,160
tonight let's uh look a little bit into

1077
00:41:46,160 --> 00:41:49,040
some practical experimentation with bgp

1078
00:41:49,040 --> 00:41:53,119
sec so if i operate uh an exchange and

1079
00:41:53,119 --> 00:41:54,160
if

1080
00:41:54,160 --> 00:41:57,359
i would prefer to see what happens if

1081
00:41:57,359 --> 00:41:58,960
the current global

1082
00:41:58,960 --> 00:42:01,280
routing system is bgp second and next

1083
00:42:01,280 --> 00:42:02,880
slide please

1084
00:42:02,880 --> 00:42:04,800
so this is an experiment this is a

1085
00:42:04,800 --> 00:42:07,040
simulated uh

1086
00:42:07,040 --> 00:42:12,400
playground based on uh real-world data

1087
00:42:13,920 --> 00:42:15,839
based on the real-world data for

1088
00:42:15,839 --> 00:42:17,920
gathering the above absolute numbers and

1089
00:42:17,920 --> 00:42:20,079
the related relation

1090
00:42:20,079 --> 00:42:22,000
relative numbers of all sorts of

1091
00:42:22,000 --> 00:42:24,480
identifiers paths

1092
00:42:24,480 --> 00:42:26,960
lengths distribution of prefixes and so

1093
00:42:26,960 --> 00:42:29,200
on

1094
00:42:29,200 --> 00:42:32,800
this this was done as an instrumented uh

1095
00:42:32,800 --> 00:42:35,040
implementation for focusing with the

1096
00:42:35,040 --> 00:42:37,200
measurement of uh

1097
00:42:37,200 --> 00:42:40,160
the performance and mostly into the

1098
00:42:40,160 --> 00:42:41,440
right i like

1099
00:42:41,440 --> 00:42:44,560
this i will try to

1100
00:42:44,560 --> 00:42:46,400
mostly for measuring the performance and

1101
00:42:46,400 --> 00:42:49,359
trying to get some data why things work

1102
00:42:49,359 --> 00:42:51,599
in the way they work and why we are

1103
00:42:51,599 --> 00:42:53,760
getting such uh performance measurements

1104
00:42:53,760 --> 00:42:56,720
this is a limited domain isolated

1105
00:42:56,720 --> 00:42:59,760
environment which uses uh not

1106
00:42:59,760 --> 00:43:02,480
necessarily what bgp spec specifies

1107
00:43:02,480 --> 00:43:05,040
right now in the rfc

1108
00:43:05,040 --> 00:43:07,920
it was implemented as uh

1109
00:43:07,920 --> 00:43:09,839
friendly to the environment in the sense

1110
00:43:09,839 --> 00:43:11,520
that using

1111
00:43:11,520 --> 00:43:14,400
vendor-specific code points uh so there

1112
00:43:14,400 --> 00:43:16,480
are no hijacks and every negative

1113
00:43:16,480 --> 00:43:17,760
impacts

1114
00:43:17,760 --> 00:43:20,480
and the main concern

1115
00:43:20,480 --> 00:43:22,880
or the main goal of this is to try to

1116
00:43:22,880 --> 00:43:24,400
find out uh

1117
00:43:24,400 --> 00:43:27,440
how this would work if we move to

1118
00:43:27,440 --> 00:43:30,720
bgp second turn and why it

1119
00:43:30,720 --> 00:43:33,119
doesn't work as

1120
00:43:33,119 --> 00:43:35,440
it is expected next slide please and if

1121
00:43:35,440 --> 00:43:36,880
you can speak even closer to the mic

1122
00:43:36,880 --> 00:43:38,720
right

1123
00:43:38,720 --> 00:43:40,880
i'll try next slide please

1124
00:43:40,880 --> 00:43:45,040
so if we uh use play in bgp uh there's a

1125
00:43:45,040 --> 00:43:48,560
top of 400 neighbors uh having some some

1126
00:43:48,560 --> 00:43:50,720
having full views some having less than

1127
00:43:50,720 --> 00:43:51,920
full views

1128
00:43:51,920 --> 00:43:54,880
uh with the distribution taken uh based

1129
00:43:54,880 --> 00:43:56,960
on uh the public available route

1130
00:43:56,960 --> 00:44:00,160
collectors uh so 400 neighbors feeding

1131
00:44:00,160 --> 00:44:03,200
into the route server and then uh no no

1132
00:44:03,200 --> 00:44:05,440
policy um just best path selection

1133
00:44:05,440 --> 00:44:07,119
everything is fed back

1134
00:44:07,119 --> 00:44:09,359
bgp does that in a

1135
00:44:09,359 --> 00:44:10,800
minute and a half

1136
00:44:10,800 --> 00:44:12,480
for bgp set for exactly the same

1137
00:44:12,480 --> 00:44:16,240
topology it takes over half an hour

1138
00:44:16,240 --> 00:44:18,560
that's not necessarily the nicest result

1139
00:44:18,560 --> 00:44:21,599
let's look why next slide please

1140
00:44:21,599 --> 00:44:22,400
uh

1141
00:44:22,400 --> 00:44:24,240
this doesn't run in

1142
00:44:24,240 --> 00:44:27,040
a vacuum it runs on uh specific hardware

1143
00:44:27,040 --> 00:44:29,200
platforms and uh

1144
00:44:29,200 --> 00:44:33,040
those put uh certain limitations on to

1145
00:44:33,040 --> 00:44:35,359
how things operate there it's one thing

1146
00:44:35,359 --> 00:44:38,000
to write an abstract code for uh

1147
00:44:38,000 --> 00:44:40,160
illustratory purposes the other thing is

1148
00:44:40,160 --> 00:44:42,240
to write a code which runs on real

1149
00:44:42,240 --> 00:44:43,440
hardware

1150
00:44:43,440 --> 00:44:44,400
and

1151
00:44:44,400 --> 00:44:47,599
your uh contemporary uh

1152
00:44:47,599 --> 00:44:50,400
compute platform has plenty of

1153
00:44:50,400 --> 00:44:52,960
raw compute capacity as such

1154
00:44:52,960 --> 00:44:55,440
uh it might have plenty of memory

1155
00:44:55,440 --> 00:44:57,359
capacity but not necessary memory

1156
00:44:57,359 --> 00:44:58,880
bandwidth and

1157
00:44:58,880 --> 00:45:01,040
memory latency is

1158
00:45:01,040 --> 00:45:04,560
certainly an aspect to keep an eye on

1159
00:45:04,560 --> 00:45:08,880
uh vectorization and uh smd uh wide

1160
00:45:08,880 --> 00:45:10,960
operations are a

1161
00:45:10,960 --> 00:45:13,680
general trend and the increase in scalar

1162
00:45:13,680 --> 00:45:16,480
platform capacity is single

1163
00:45:16,480 --> 00:45:18,640
low single digit percent

1164
00:45:18,640 --> 00:45:22,319
whereas uh the increase in width of the

1165
00:45:22,319 --> 00:45:25,680
computation is in orders uh sometimes

1166
00:45:25,680 --> 00:45:28,720
orders of magnitude

1167
00:45:28,880 --> 00:45:30,640
and yes your fancy

1168
00:45:30,640 --> 00:45:33,520
shiny platform can still run 16-bit

1169
00:45:33,520 --> 00:45:36,480
16-bit code from 40 years ago

1170
00:45:36,480 --> 00:45:37,920
that just does not mean that it is the

1171
00:45:37,920 --> 00:45:39,839
right thing to do

1172
00:45:39,839 --> 00:45:41,839
sadly many textbooks still continue to

1173
00:45:41,839 --> 00:45:43,920
think that that is a reality

1174
00:45:43,920 --> 00:45:47,359
next slide please

1175
00:45:47,359 --> 00:45:50,079
uh if we look at the inners of a bgp sec

1176
00:45:50,079 --> 00:45:53,680
uh two steps uh receive things hash

1177
00:45:53,680 --> 00:45:55,839
the incoming parts

1178
00:45:55,839 --> 00:45:56,960
get the

1179
00:45:56,960 --> 00:45:59,040
message to be signed assign it in this

1180
00:45:59,040 --> 00:46:01,839
case for receive its verify and then do

1181
00:46:01,839 --> 00:46:03,839
the rest of processing

1182
00:46:03,839 --> 00:46:05,920
uh chatu is hardware friendly and in

1183
00:46:05,920 --> 00:46:08,480
general that's a light uh computational

1184
00:46:08,480 --> 00:46:11,200
light operation uh uh operates on the

1185
00:46:11,200 --> 00:46:13,599
fixed blocks of four bytes and does a

1186
00:46:13,599 --> 00:46:15,520
rather light arithmetical

1187
00:46:15,520 --> 00:46:17,359
operation shifts bit back and forth and

1188
00:46:17,359 --> 00:46:19,359
so on the problem is that it touches

1189
00:46:19,359 --> 00:46:20,720
memory

1190
00:46:20,720 --> 00:46:23,359
and touching memory is expensive if you

1191
00:46:23,359 --> 00:46:26,319
can avoid touching memory uh without a

1192
00:46:26,319 --> 00:46:29,839
real need you better do that

1193
00:46:29,839 --> 00:46:32,160
signature generation it involves much

1194
00:46:32,160 --> 00:46:35,040
heavier computational operations large

1195
00:46:35,040 --> 00:46:38,480
uh integer uh realization plus there is

1196
00:46:38,480 --> 00:46:41,599
also multiplication and uh computational

1197
00:46:41,599 --> 00:46:43,520
it's more expensive but it doesn't need

1198
00:46:43,520 --> 00:46:46,400
to touch the memory therefore

1199
00:46:46,400 --> 00:46:47,359
uh

1200
00:46:47,359 --> 00:46:49,520
overall the larger the longer the

1201
00:46:49,520 --> 00:46:52,800
assigned path is the more time you spend

1202
00:46:52,800 --> 00:46:55,599
on calculating the hash and even before

1203
00:46:55,599 --> 00:46:58,480
that fighting with the memory layout and

1204
00:46:58,480 --> 00:47:01,680
only then uh you do signing and

1205
00:47:01,680 --> 00:47:04,640
verification in this case

1206
00:47:04,640 --> 00:47:07,359
next slide please

1207
00:47:08,560 --> 00:47:11,520
what is this vectorization thing about

1208
00:47:11,520 --> 00:47:13,680
uh that's a simple idea that you have

1209
00:47:13,680 --> 00:47:15,599
one set of instructions but you operate

1210
00:47:15,599 --> 00:47:18,079
on multiple streams of independent data

1211
00:47:18,079 --> 00:47:20,480
at the same time this is a perfect fit

1212
00:47:20,480 --> 00:47:22,960
into uh hashing

1213
00:47:22,960 --> 00:47:24,960
multiple uh

1214
00:47:24,960 --> 00:47:27,359
secure path segments while calculating

1215
00:47:27,359 --> 00:47:29,760
and verifying multiple signatures at the

1216
00:47:29,760 --> 00:47:32,960
same time the operations for each chat

1217
00:47:32,960 --> 00:47:35,359
you block they are the same uh just the

1218
00:47:35,359 --> 00:47:38,720
data difference so take uh the

1219
00:47:38,720 --> 00:47:40,720
full received

1220
00:47:40,720 --> 00:47:43,280
secure path uh elements

1221
00:47:43,280 --> 00:47:45,760
feed them sequentially into different

1222
00:47:45,760 --> 00:47:48,880
lanes uh for processing and run uh shad

1223
00:47:48,880 --> 00:47:51,760
to transform uh on them in parallel

1224
00:47:51,760 --> 00:47:53,680
works definitely definitely works fine

1225
00:47:53,680 --> 00:47:56,319
provided that you can get your data uh

1226
00:47:56,319 --> 00:47:58,800
into the layout that is friendly for

1227
00:47:58,800 --> 00:48:01,520
this then once you have calculated the

1228
00:48:01,520 --> 00:48:04,400
hashes uh feed them into your elliptical

1229
00:48:04,400 --> 00:48:06,000
stuff and

1230
00:48:06,000 --> 00:48:07,760
on the output you get the answer valid

1231
00:48:07,760 --> 00:48:09,359
not valid

1232
00:48:09,359 --> 00:48:10,240
um

1233
00:48:10,240 --> 00:48:13,839
overall the latency is marginally

1234
00:48:13,839 --> 00:48:16,640
higher for this uh you need to do some

1235
00:48:16,640 --> 00:48:18,400
additional work and some instructions

1236
00:48:18,400 --> 00:48:21,280
are not directly uh one-to-one mapped as

1237
00:48:21,280 --> 00:48:24,720
in the scalar world but from the overall

1238
00:48:24,720 --> 00:48:28,079
throughput perspective you have uh

1239
00:48:28,079 --> 00:48:30,559
performance increase uh proportional to

1240
00:48:30,559 --> 00:48:33,680
the width width of the vector lanes

1241
00:48:33,680 --> 00:48:36,480
next slide please

1242
00:48:37,760 --> 00:48:42,319
that's an interesting font over here

1243
00:48:42,960 --> 00:48:46,000
let's try that again

1244
00:48:47,200 --> 00:48:48,880
all right um

1245
00:48:48,880 --> 00:48:52,000
so the problem uh with uh not the font

1246
00:48:52,000 --> 00:48:55,040
but with the uh more important things

1247
00:48:55,040 --> 00:48:58,720
is uh that the format of the secure path

1248
00:48:58,720 --> 00:49:01,280
uh message on the wire is

1249
00:49:01,280 --> 00:49:03,839
completely not the one as is expected

1250
00:49:03,839 --> 00:49:06,240
for uh the hashing function to operate

1251
00:49:06,240 --> 00:49:07,119
on

1252
00:49:07,119 --> 00:49:09,280
there are two components in the secure

1253
00:49:09,280 --> 00:49:12,240
uh path um the path part and the

1254
00:49:12,240 --> 00:49:15,119
signature path the total length of the

1255
00:49:15,119 --> 00:49:17,200
signature for the hope is 100 bytes but

1256
00:49:17,200 --> 00:49:19,520
that's six plus 94.

1257
00:49:19,520 --> 00:49:22,000
none of those two they are divisible by

1258
00:49:22,000 --> 00:49:25,280
four and if you try to uh use the

1259
00:49:25,280 --> 00:49:27,440
capabilities of your underlying platform

1260
00:49:27,440 --> 00:49:30,480
which is able to fetch only at uh four

1261
00:49:30,480 --> 00:49:33,359
or eight by granularity you cannot use

1262
00:49:33,359 --> 00:49:36,480
this uh you can force it but the end

1263
00:49:36,480 --> 00:49:39,440
result is that you will lose far more

1264
00:49:39,440 --> 00:49:43,040
than uh the potential uh gain out of all

1265
00:49:43,040 --> 00:49:44,640
of this

1266
00:49:44,640 --> 00:49:47,440
therefore uh the receive side problem

1267
00:49:47,440 --> 00:49:50,640
for bgp sec is that it has data on the

1268
00:49:50,640 --> 00:49:53,920
wire which directly contradicts to uh

1269
00:49:53,920 --> 00:49:56,160
performance to have being able to have a

1270
00:49:56,160 --> 00:49:58,319
performant implementation let's move to

1271
00:49:58,319 --> 00:49:59,920
the next slide and see what the font we

1272
00:49:59,920 --> 00:50:03,359
get there oh the real one

1273
00:50:03,359 --> 00:50:05,200
for the transmit side

1274
00:50:05,200 --> 00:50:06,319
um

1275
00:50:06,319 --> 00:50:09,280
gpsex signs uh

1276
00:50:09,280 --> 00:50:11,680
also the target s number that's a good

1277
00:50:11,680 --> 00:50:12,960
thing

1278
00:50:12,960 --> 00:50:16,240
uh the not so good thing is how exactly

1279
00:50:16,240 --> 00:50:17,920
that is done

1280
00:50:17,920 --> 00:50:20,079
so if i advertise the same path in the

1281
00:50:20,079 --> 00:50:23,520
same prefix to a multitude of neighbors

1282
00:50:23,520 --> 00:50:26,960
uh the stable part is the path itself

1283
00:50:26,960 --> 00:50:29,119
and the prefix what changes is the

1284
00:50:29,119 --> 00:50:32,000
target test number the first the initial

1285
00:50:32,000 --> 00:50:33,839
first four bytes which are at the

1286
00:50:33,839 --> 00:50:36,559
beginning of the block to be hashed that

1287
00:50:36,559 --> 00:50:39,760
means that starting from the first

1288
00:50:39,760 --> 00:50:43,040
round of sh2 processing the result will

1289
00:50:43,040 --> 00:50:46,640
be different and basically uh we'll end

1290
00:50:46,640 --> 00:50:49,440
up needing to redo all the calculation

1291
00:50:49,440 --> 00:50:50,319
just

1292
00:50:50,319 --> 00:50:53,680
just for nothing if instead that target

1293
00:50:53,680 --> 00:50:56,720
s number wet back the stable part can be

1294
00:50:56,720 --> 00:50:58,960
pre-compute and then intermediate state

1295
00:50:58,960 --> 00:51:00,240
cached

1296
00:51:00,240 --> 00:51:03,359
and uh the longer the uh the path length

1297
00:51:03,359 --> 00:51:05,520
is the higher uh

1298
00:51:05,520 --> 00:51:08,400
the savings in this case would be

1299
00:51:08,400 --> 00:51:09,440
uh

1300
00:51:09,440 --> 00:51:11,440
the other aspects are exactly the same

1301
00:51:11,440 --> 00:51:13,520
uh signature generation is computational

1302
00:51:13,520 --> 00:51:15,040
expensive it doesn't touch memory

1303
00:51:15,040 --> 00:51:17,280
therefore it's not off the problem next

1304
00:51:17,280 --> 00:51:19,760
slide please

1305
00:51:20,720 --> 00:51:24,800
back to the experiments so uh do some uh

1306
00:51:24,800 --> 00:51:27,359
fixing here and there rearrange some

1307
00:51:27,359 --> 00:51:28,960
fields uh

1308
00:51:28,960 --> 00:51:32,079
do some other protocol level changes and

1309
00:51:32,079 --> 00:51:32,960
uh

1310
00:51:32,960 --> 00:51:36,400
call it magic and this can uh move into

1311
00:51:36,400 --> 00:51:38,960
the order of five minutes for uh the

1312
00:51:38,960 --> 00:51:42,000
same uh test environment overall next

1313
00:51:42,000 --> 00:51:44,000
slide

1314
00:51:44,000 --> 00:51:46,000
so does this mean that bgp sec is

1315
00:51:46,000 --> 00:51:47,680
fundamentally broken no it's not

1316
00:51:47,680 --> 00:51:50,400
fundamentally broken uh everything is

1317
00:51:50,400 --> 00:51:52,880
fine with the security aspects uh just

1318
00:51:52,880 --> 00:51:55,839
that uh the current approaches to the

1319
00:51:55,839 --> 00:51:58,880
wire format and some protocol mechanics

1320
00:51:58,880 --> 00:52:01,200
uh does not uh

1321
00:52:01,200 --> 00:52:05,119
correlate well with uh

1322
00:52:05,119 --> 00:52:06,400
performance

1323
00:52:06,400 --> 00:52:07,760
implementing those things in a

1324
00:52:07,760 --> 00:52:09,119
performant way

1325
00:52:09,119 --> 00:52:11,520
and it also is a little bit disconnected

1326
00:52:11,520 --> 00:52:14,079
from the realities of the

1327
00:52:14,079 --> 00:52:15,119
current

1328
00:52:15,119 --> 00:52:18,480
compute platforms next slide please

1329
00:52:18,480 --> 00:52:20,720
uh all right uh that's actually strong

1330
00:52:20,720 --> 00:52:22,960
encryption even for me i don't remember

1331
00:52:22,960 --> 00:52:25,100
what was written there

1332
00:52:25,100 --> 00:52:27,680
[Music]

1333
00:52:27,680 --> 00:52:30,160
so i think those were the questions

1334
00:52:30,160 --> 00:52:31,599
about

1335
00:52:31,599 --> 00:52:33,200
those questions which you wanted to ask

1336
00:52:33,200 --> 00:52:35,040
but you didn't uh

1337
00:52:35,040 --> 00:52:37,359
manage to run to the mic so is this

1338
00:52:37,359 --> 00:52:39,200
purely an implementation aspect can a

1339
00:52:39,200 --> 00:52:42,319
smart compiler fix all of this for me

1340
00:52:42,319 --> 00:52:43,440
we are talking about the data

1341
00:52:43,440 --> 00:52:44,880
dependencies not control flow

1342
00:52:44,880 --> 00:52:48,160
dependencies uh smart compiler is good

1343
00:52:48,160 --> 00:52:50,800
at doing rather trivial things for

1344
00:52:50,800 --> 00:52:52,960
example lot of vectorizing the round of

1345
00:52:52,960 --> 00:52:55,520
chatu is mostly feasible

1346
00:52:55,520 --> 00:52:57,280
you need just to provide a little bit

1347
00:52:57,280 --> 00:52:59,599
help to the compiler but certainly the

1348
00:52:59,599 --> 00:53:01,760
compiler cannot do anything about on the

1349
00:53:01,760 --> 00:53:05,839
wire data layout formats and uh overall

1350
00:53:05,839 --> 00:53:08,800
uh the data architecture of your

1351
00:53:08,800 --> 00:53:10,240
application

1352
00:53:10,240 --> 00:53:12,400
so if we use a fancy programming

1353
00:53:12,400 --> 00:53:14,960
language will this solve a problem

1354
00:53:14,960 --> 00:53:17,280
automatically well if you implement your

1355
00:53:17,280 --> 00:53:19,760
bgp second implementation in

1356
00:53:19,760 --> 00:53:22,400
uh in javascript i'm not certain i can

1357
00:53:22,400 --> 00:53:26,000
read it from from that far

1358
00:53:26,960 --> 00:53:29,200
thank you so much ah what can be done

1359
00:53:29,200 --> 00:53:31,359
then uh i will return to that thank you

1360
00:53:31,359 --> 00:53:32,400
jared

1361
00:53:32,400 --> 00:53:35,599
so if i if i rely only on the

1362
00:53:35,599 --> 00:53:37,520
language aspect no you can make things

1363
00:53:37,520 --> 00:53:39,400
worse but not necessarily

1364
00:53:39,400 --> 00:53:42,079
better uh

1365
00:53:42,079 --> 00:53:45,280
so what can be done of trying to fix uh

1366
00:53:45,280 --> 00:53:47,440
the bgp sec here

1367
00:53:47,440 --> 00:53:49,359
first thing the protocol is versioned

1368
00:53:49,359 --> 00:53:51,280
now one if you could try moving to the

1369
00:53:51,280 --> 00:53:53,119
next slide maybe it will work no it

1370
00:53:53,119 --> 00:53:55,920
doesn't so i will have to repeat that so

1371
00:53:55,920 --> 00:53:59,200
bgp sec is versioned now right now we

1372
00:53:59,200 --> 00:54:03,760
have uh uh mostly global uh deployment

1373
00:54:03,760 --> 00:54:04,880
of zero

1374
00:54:04,880 --> 00:54:08,480
uh instances of bgp sec version zero uh

1375
00:54:08,480 --> 00:54:11,280
and if we if we uh define a new wire

1376
00:54:11,280 --> 00:54:12,720
format

1377
00:54:12,720 --> 00:54:16,400
which changes uh a few of the things

1378
00:54:16,400 --> 00:54:19,200
first is how um

1379
00:54:19,200 --> 00:54:21,680
why a message is uh

1380
00:54:21,680 --> 00:54:24,960
laid out on the wire that it is one uh

1381
00:54:24,960 --> 00:54:28,079
consecutive block and uh not intermixed

1382
00:54:28,079 --> 00:54:29,920
uh fragments

1383
00:54:29,920 --> 00:54:32,240
the second thing uh

1384
00:54:32,240 --> 00:54:34,800
the algorithm identifiers right now they

1385
00:54:34,800 --> 00:54:38,559
define only the actual algorithms

1386
00:54:38,559 --> 00:54:41,119
they possibly could either also identify

1387
00:54:41,119 --> 00:54:43,440
the format of the message to be hashed

1388
00:54:43,440 --> 00:54:46,799
and possibly processed in other ways

1389
00:54:46,799 --> 00:54:49,839
that would allow for a

1390
00:54:49,839 --> 00:54:52,680
certain degree of freedom of

1391
00:54:52,680 --> 00:54:54,799
experimentation further

1392
00:54:54,799 --> 00:54:57,119
and

1393
00:54:57,920 --> 00:55:00,400
making that in a more or less

1394
00:55:00,400 --> 00:55:02,240
forward compatible way as much as we

1395
00:55:02,240 --> 00:55:05,200
would need that

1396
00:55:05,680 --> 00:55:08,400
questions so that was discussed

1397
00:55:08,400 --> 00:55:10,240
previously next slide please and let's

1398
00:55:10,240 --> 00:55:13,040
see what we get in discussion right so

1399
00:55:13,040 --> 00:55:14,000
um

1400
00:55:14,000 --> 00:55:16,400
that's a feedback of trying to uh

1401
00:55:16,400 --> 00:55:19,200
experiment of what it would take uh for

1402
00:55:19,200 --> 00:55:23,520
bgp sec to be deployed and and used

1403
00:55:23,520 --> 00:55:26,079
uh the question is do we as a community

1404
00:55:26,079 --> 00:55:27,280
care about

1405
00:55:27,280 --> 00:55:30,000
that and if we care uh

1406
00:55:30,000 --> 00:55:34,119
how we try to address this

1407
00:55:34,160 --> 00:55:37,040
and that's that's it from my side

1408
00:55:37,040 --> 00:55:38,400
and while we're checking if there are

1409
00:55:38,400 --> 00:55:39,760
any questions i'd just like to thank

1410
00:55:39,760 --> 00:55:42,240
ignis for having kept the shot thank you

1411
00:55:42,240 --> 00:55:43,920
thanks there must be at least some

1412
00:55:43,920 --> 00:55:46,079
questions if not we can also take them

1413
00:55:46,079 --> 00:55:48,240
on list keep it short and one from

1414
00:55:48,240 --> 00:55:50,799
sriram

1415
00:55:52,559 --> 00:55:54,400
sriram for your head

1416
00:55:54,400 --> 00:55:55,200
oh

1417
00:55:55,200 --> 00:55:57,359
okay question uh ignis

1418
00:55:57,359 --> 00:55:59,040
um

1419
00:55:59,040 --> 00:56:00,079
we've

1420
00:56:00,079 --> 00:56:02,880
we did some studies with like caching um

1421
00:56:02,880 --> 00:56:03,680
the

1422
00:56:03,680 --> 00:56:05,920
signatures that have been all already

1423
00:56:05,920 --> 00:56:08,319
verified so during the signature

1424
00:56:08,319 --> 00:56:11,119
verification on the update you can cache

1425
00:56:11,119 --> 00:56:13,200
segments of the

1426
00:56:13,200 --> 00:56:14,880
aspart

1427
00:56:14,880 --> 00:56:16,720
the signatures that you have verified

1428
00:56:16,720 --> 00:56:19,200
and next time the same update or another

1429
00:56:19,200 --> 00:56:21,359
update that has a common

1430
00:56:21,359 --> 00:56:23,520
aspar segment with the previous one you

1431
00:56:23,520 --> 00:56:25,359
can make use of the cache so that's

1432
00:56:25,359 --> 00:56:28,000
another way of improving the performance

1433
00:56:28,000 --> 00:56:30,880
perhaps you have thought of it uh yes i

1434
00:56:30,880 --> 00:56:35,280
do this actually is contrary to uh the

1435
00:56:35,280 --> 00:56:37,359
recommended practices of using

1436
00:56:37,359 --> 00:56:40,000
elliptical signatures you can do this

1437
00:56:40,000 --> 00:56:42,799
only if your random number is stable and

1438
00:56:42,799 --> 00:56:45,520
that leaks your key that's not the right

1439
00:56:45,520 --> 00:56:47,680
thing to do at all

1440
00:56:47,680 --> 00:56:51,040
cashing is certainly possible and uh

1441
00:56:51,040 --> 00:56:53,200
rearranging a little bit a few things

1442
00:56:53,200 --> 00:56:54,720
here and there you can cash and that's a

1443
00:56:54,720 --> 00:56:56,720
whole point

1444
00:56:56,720 --> 00:56:59,680
however signature signing and

1445
00:56:59,680 --> 00:57:03,599
verification for as part longer than

1446
00:57:03,599 --> 00:57:04,319
uh

1447
00:57:04,319 --> 00:57:06,400
in this particular instance four or five

1448
00:57:06,400 --> 00:57:08,799
hops becomes less computationally

1449
00:57:08,799 --> 00:57:10,799
expensive than calculating the hash and

1450
00:57:10,799 --> 00:57:13,040
that is the problem

1451
00:57:13,040 --> 00:57:14,640
so you are not limited by the

1452
00:57:14,640 --> 00:57:16,400
performance of the elliptic curve as

1453
00:57:16,400 --> 00:57:18,880
such you are limited by the overall

1454
00:57:18,880 --> 00:57:22,000
performance of memory system

1455
00:57:22,000 --> 00:57:25,640
okay thank you

1456
00:57:29,760 --> 00:57:31,839
joe snyder's fastly

1457
00:57:31,839 --> 00:57:34,559
you ask do we care i can

1458
00:57:34,559 --> 00:57:38,319
indicate just like an iepg i do care

1459
00:57:38,319 --> 00:57:40,000
and i do think that now is a good time

1460
00:57:40,000 --> 00:57:42,000
to start work on this

1461
00:57:42,000 --> 00:57:45,359
i think version zero will

1462
00:57:45,359 --> 00:57:47,839
give us valuable operational uh feedback

1463
00:57:47,839 --> 00:57:49,839
on how it works in the world provided

1464
00:57:49,839 --> 00:57:52,960
that bgp sec router key publication

1465
00:57:52,960 --> 00:57:56,160
becomes easily accessible to operators

1466
00:57:56,160 --> 00:57:57,920
and from there migrating to a

1467
00:57:57,920 --> 00:58:00,079
performance enhanced version

1468
00:58:00,079 --> 00:58:03,280
seems a very logical and organic way to

1469
00:58:03,280 --> 00:58:05,359
further the development of this protocol

1470
00:58:05,359 --> 00:58:07,839
so awesome presentation thank you for

1471
00:58:07,839 --> 00:58:10,160
sharing your insights and yes let's do

1472
00:58:10,160 --> 00:58:11,119
it

1473
00:58:11,119 --> 00:58:12,640
all right

1474
00:58:12,640 --> 00:58:14,799
thank you

1475
00:58:14,799 --> 00:58:17,520
thank you so i'm done thanks

1476
00:58:17,520 --> 00:58:20,400
and next

1477
00:58:20,480 --> 00:58:22,390
week

1478
00:58:22,390 --> 00:58:25,460
[Music]

1479
00:58:33,680 --> 00:58:37,200
thank you warden um

1480
00:58:37,200 --> 00:58:39,839
so this is uh this talk is about aspa

1481
00:58:39,839 --> 00:58:41,920
verification procedures

1482
00:58:41,920 --> 00:58:44,000
um we we have considered some

1483
00:58:44,000 --> 00:58:47,119
enhancements and also route server there

1484
00:58:47,119 --> 00:58:50,079
has been a very good um

1485
00:58:50,079 --> 00:58:52,559
productive creative discussion on the

1486
00:58:52,559 --> 00:58:56,319
mailing list um i'm very thankful to

1487
00:58:56,319 --> 00:58:58,640
nick hilliard um for

1488
00:58:58,640 --> 00:59:01,760
for offering several uh very

1489
00:59:01,760 --> 00:59:03,440
constructive comments

1490
00:59:03,440 --> 00:59:06,000
i've had i've had discussions about this

1491
00:59:06,000 --> 00:59:08,880
uh in the past with alexander and also

1492
00:59:08,880 --> 00:59:11,920
thanks to ben jacobs chunwon and jeff

1493
00:59:11,920 --> 00:59:14,000
and others for participating in the

1494
00:59:14,000 --> 00:59:16,720
discussions on the list

1495
00:59:16,720 --> 00:59:19,839
next slide please

1496
00:59:20,480 --> 00:59:23,119
so um so we'll first look at uh like

1497
00:59:23,119 --> 00:59:24,880
summarize uh the working group

1498
00:59:24,880 --> 00:59:26,880
discussions on the list and based on

1499
00:59:26,880 --> 00:59:29,520
that uh we will look at a solution for

1500
00:59:29,520 --> 00:59:32,000
the route server issue

1501
00:59:32,000 --> 00:59:33,920
there has been prior work where we

1502
00:59:33,920 --> 00:59:36,960
identified a shortcoming in the aspa

1503
00:59:36,960 --> 00:59:38,720
downstream procedure

1504
00:59:38,720 --> 00:59:41,520
that was presented a year ago at ietf

1505
00:59:41,520 --> 00:59:43,359
110

1506
00:59:43,359 --> 00:59:46,480
and based on that the there was a

1507
00:59:46,480 --> 00:59:49,040
working group consensus around that

1508
00:59:49,040 --> 00:59:52,079
uh to to update uh the algorithms to

1509
00:59:52,079 --> 00:59:55,119
overcome that shortcoming so in today

1510
00:59:55,119 --> 00:59:56,640
later on i will

1511
00:59:56,640 --> 00:59:58,880
describe the updated

1512
00:59:58,880 --> 01:00:01,760
algorithms as as they stand today

1513
01:00:01,760 --> 01:00:04,559
that includes the above fix from ietf

1514
01:00:04,559 --> 01:00:07,680
110 it includes the route server being

1515
01:00:07,680 --> 01:00:10,400
properly accommodated it takes care of

1516
01:00:10,400 --> 01:00:13,599
some necessary special and corner cases

1517
01:00:13,599 --> 01:00:16,079
and it's it's ready for uh

1518
01:00:16,079 --> 01:00:18,000
the algorithm description is ready for

1519
01:00:18,000 --> 01:00:20,640
updating the aspa draft

1520
01:00:20,640 --> 01:00:23,280
next slide

1521
01:00:23,280 --> 01:00:24,319
so

1522
01:00:24,319 --> 01:00:27,359
i'm showing here a couple of urls for

1523
01:00:27,359 --> 01:00:30,000
the working group discussion threads

1524
01:00:30,000 --> 01:00:33,040
on next slide

1525
01:00:33,280 --> 01:00:35,520
so just few basics about the route

1526
01:00:35,520 --> 01:00:36,640
server

1527
01:00:36,640 --> 01:00:40,799
rs is a route server in this picture as2

1528
01:00:40,799 --> 01:00:44,319
it's an ixp uh rs clients are as1 and

1529
01:00:44,319 --> 01:00:45,599
as3

1530
01:00:45,599 --> 01:00:48,240
uh so in the control plane uh the

1531
01:00:48,240 --> 01:00:51,119
transparent rs would in would insert its

1532
01:00:51,119 --> 01:00:54,160
asn in the path and that is common

1533
01:00:54,160 --> 01:00:56,960
uh and the non-transparent rs it would

1534
01:00:56,960 --> 01:00:59,920
not insert it as and in the um

1535
01:00:59,920 --> 01:01:01,920
it inserts its asm in the path the

1536
01:01:01,920 --> 01:01:03,680
transparent one doesn't

1537
01:01:03,680 --> 01:01:06,799
um and but the non-transparent rs is a

1538
01:01:06,799 --> 01:01:08,640
is rarity or abnormal

1539
01:01:08,640 --> 01:01:10,640
or even an abnormality

1540
01:01:10,640 --> 01:01:13,040
as you will see we are not focusing uh

1541
01:01:13,040 --> 01:01:15,440
the solution on the non-transparent rs

1542
01:01:15,440 --> 01:01:18,240
instead we are focusing the solution on

1543
01:01:18,240 --> 01:01:20,000
transparent artists

1544
01:01:20,000 --> 01:01:22,240
uh in the data plane the route server

1545
01:01:22,240 --> 01:01:24,799
passes the next hop attribute unmodified

1546
01:01:24,799 --> 01:01:27,599
to its rs clients so the data plane

1547
01:01:27,599 --> 01:01:29,920
connection between rs clients is a

1548
01:01:29,920 --> 01:01:32,240
direct connection

1549
01:01:32,240 --> 01:01:33,599
rs client

1550
01:01:33,599 --> 01:01:36,240
r2 rs is essentially like a customer to

1551
01:01:36,240 --> 01:01:39,040
provide a relationship and the and the

1552
01:01:39,040 --> 01:01:42,319
relationship between rs clients as1 and

1553
01:01:42,319 --> 01:01:44,319
s3 in this example

1554
01:01:44,319 --> 01:01:47,280
uh is effectively a lateral carrying

1555
01:01:47,280 --> 01:01:48,559
relationship

1556
01:01:48,559 --> 01:01:52,000
next slide please

1557
01:01:52,000 --> 01:01:54,880
um so for aspa-based route league

1558
01:01:54,880 --> 01:01:57,599
detection uh involving the route servers

1559
01:01:57,599 --> 01:01:59,760
uh we solved the problem for transparent

1560
01:01:59,760 --> 01:02:02,400
rs and it just so happens that the

1561
01:02:02,400 --> 01:02:03,680
solution

1562
01:02:03,680 --> 01:02:06,640
for the non-transparent rs comes with it

1563
01:02:06,640 --> 01:02:09,280
at no extra effort no extra effort

1564
01:02:09,280 --> 01:02:12,960
involved next slide please

1565
01:02:13,440 --> 01:02:17,119
so this is an example of like how uh

1566
01:02:17,119 --> 01:02:19,359
like it's a preview of the of the

1567
01:02:19,359 --> 01:02:21,760
general solution with an example

1568
01:02:21,760 --> 01:02:24,160
uh the rs client essentially uh we

1569
01:02:24,160 --> 01:02:26,559
recommend that it should include uh the

1570
01:02:26,559 --> 01:02:29,359
rsasn in its aspa

1571
01:02:29,359 --> 01:02:31,839
so in this topology the update

1572
01:02:31,839 --> 01:02:34,160
propagates from as1

1573
01:02:34,160 --> 01:02:36,960
to as4 from left to right

1574
01:02:36,960 --> 01:02:40,960
uh and along the way at rs at as2

1575
01:02:40,960 --> 01:02:43,039
it passes through an rs

1576
01:02:43,039 --> 01:02:45,680
as4 doesn't know that there is an rs in

1577
01:02:45,680 --> 01:02:48,480
the path and it doesn't need to know it

1578
01:02:48,480 --> 01:02:51,599
uh the asps take care of uh

1579
01:02:51,599 --> 01:02:53,039
take care of that

1580
01:02:53,039 --> 01:02:56,559
uh so the asp is that for for as4 to

1581
01:02:56,559 --> 01:02:58,640
validate the update and determine

1582
01:02:58,640 --> 01:03:01,440
whether it is a route leak or not uh the

1583
01:03:01,440 --> 01:03:04,319
asps that should be in place are the are

1584
01:03:04,319 --> 01:03:06,640
the three that i show in the middle

1585
01:03:06,640 --> 01:03:10,319
uh as1 attests as2 as a provider

1586
01:03:10,319 --> 01:03:12,720
as3 attests as2

1587
01:03:12,720 --> 01:03:15,359
as a provider so both rs clients

1588
01:03:15,359 --> 01:03:19,119
essentially attest the rs as a provider

1589
01:03:19,119 --> 01:03:22,799
um and in addition to that uh the rs

1590
01:03:22,799 --> 01:03:26,319
itself assigns a as0 aspa

1591
01:03:26,319 --> 01:03:28,720
and this recommendation is already in

1592
01:03:28,720 --> 01:03:31,520
the draft uh so it with this uh with

1593
01:03:31,520 --> 01:03:35,920
this set of aspas whether as3 receives a

1594
01:03:35,920 --> 01:03:38,480
route uh with with whether it receives

1595
01:03:38,480 --> 01:03:39,680
the update

1596
01:03:39,680 --> 01:03:42,960
with the rsas included or not in both

1597
01:03:42,960 --> 01:03:44,960
cases whether in other words whether it

1598
01:03:44,960 --> 01:03:48,079
is transparent rs or non-transparent rs

1599
01:03:48,079 --> 01:03:51,760
in both cases the as4 is able to uh

1600
01:03:51,760 --> 01:03:55,119
correctly validate uh and tell in this

1601
01:03:55,119 --> 01:03:58,160
case it's that it's a leak so by by

1602
01:03:58,160 --> 01:04:02,000
having this set of rs asps in place the

1603
01:04:02,000 --> 01:04:03,359
the correct

1604
01:04:03,359 --> 01:04:05,359
detection and the correct operation of

1605
01:04:05,359 --> 01:04:06,240
the

1606
01:04:06,240 --> 01:04:08,799
validation procedure is possible next

1607
01:04:08,799 --> 01:04:12,119
slide please

1608
01:04:12,480 --> 01:04:15,359
so the solution description is that each

1609
01:04:15,359 --> 01:04:18,160
rs client registers aspa including the

1610
01:04:18,160 --> 01:04:20,720
rsasn in the spas

1611
01:04:20,720 --> 01:04:24,480
spas stands for set of provider asses

1612
01:04:24,480 --> 01:04:26,799
in theory it is sufficient that each rs

1613
01:04:26,799 --> 01:04:28,880
client has an aspa

1614
01:04:28,880 --> 01:04:32,640
just including the asns of its providers

1615
01:04:32,640 --> 01:04:35,520
other than the rs uh however some rs

1616
01:04:35,520 --> 01:04:38,240
clients may not have any provider so in

1617
01:04:38,240 --> 01:04:40,640
that case it it's good to have a general

1618
01:04:40,640 --> 01:04:43,520
recommendation uh that the rs clients

1619
01:04:43,520 --> 01:04:46,400
should include the uh rsasn uh in the

1620
01:04:46,400 --> 01:04:47,760
aspa

1621
01:04:47,760 --> 01:04:51,119
and additionally including the rsasn in

1622
01:04:51,119 --> 01:04:52,960
the as in the spas

1623
01:04:52,960 --> 01:04:55,359
has diagnostic value for troubleshooting

1624
01:04:55,359 --> 01:04:56,640
etc

1625
01:04:56,640 --> 01:04:59,200
next slide

1626
01:05:00,400 --> 01:05:02,559
so another thing that is currently in

1627
01:05:02,559 --> 01:05:05,119
the draft in section 5.3

1628
01:05:05,119 --> 01:05:08,240
is that the rs client detects whether

1629
01:05:08,240 --> 01:05:09,119
the

1630
01:05:09,119 --> 01:05:11,520
rs it is connected to

1631
01:05:11,520 --> 01:05:14,160
is transparent or non-transparent and

1632
01:05:14,160 --> 01:05:16,240
based on that it applies

1633
01:05:16,240 --> 01:05:18,240
either the upstream algorithm or the

1634
01:05:18,240 --> 01:05:20,160
downstream algorithm

1635
01:05:20,160 --> 01:05:21,520
however

1636
01:05:21,520 --> 01:05:24,079
nick hilliard uh offered this a good

1637
01:05:24,079 --> 01:05:26,720
suggestion uh based on which we don't

1638
01:05:26,720 --> 01:05:27,839
have to

1639
01:05:27,839 --> 01:05:30,880
do that that complication can be avoided

1640
01:05:30,880 --> 01:05:32,559
and the way it is done is that the

1641
01:05:32,559 --> 01:05:34,480
validating

1642
01:05:34,480 --> 01:05:37,760
as uh if it is if it has the rs client

1643
01:05:37,760 --> 01:05:38,640
role

1644
01:05:38,640 --> 01:05:40,480
uh it determines whether the most

1645
01:05:40,480 --> 01:05:44,079
recently added asn uh in the as path

1646
01:05:44,079 --> 01:05:47,039
equals the sender's as number in this

1647
01:05:47,039 --> 01:05:49,920
case the sender is the route server

1648
01:05:49,920 --> 01:05:51,680
if that is not so

1649
01:05:51,680 --> 01:05:54,000
that is a confirmation that the rs is

1650
01:05:54,000 --> 01:05:55,440
transparent

1651
01:05:55,440 --> 01:05:57,920
in the in that case the rs client can

1652
01:05:57,920 --> 01:06:02,160
simply add the rsasn to the as path

1653
01:06:02,160 --> 01:06:05,760
for aspa verification purposes only

1654
01:06:05,760 --> 01:06:07,760
and then the downstream verification

1655
01:06:07,760 --> 01:06:09,839
procedure can be applied so there is no

1656
01:06:09,839 --> 01:06:12,480
need to make a choice at the rs client

1657
01:06:12,480 --> 01:06:15,200
uh between the upstream

1658
01:06:15,200 --> 01:06:17,839
procedure or the downstream procedure so

1659
01:06:17,839 --> 01:06:19,119
with this

1660
01:06:19,119 --> 01:06:22,880
modification or simplification uh the uh

1661
01:06:22,880 --> 01:06:25,760
the section 5.3 in the

1662
01:06:25,760 --> 01:06:28,799
draft can be potentially deleted next

1663
01:06:28,799 --> 01:06:30,880
slide please

1664
01:06:30,880 --> 01:06:33,039
so now quickly um

1665
01:06:33,039 --> 01:06:35,920
the refined enhanced aspa upstream and

1666
01:06:35,920 --> 01:06:38,559
downstream verification procedures

1667
01:06:38,559 --> 01:06:41,760
including the enhancements including the

1668
01:06:41,760 --> 01:06:45,680
uh the fix from ietf 110

1669
01:06:45,680 --> 01:06:48,160
as well as next slide please

1670
01:06:48,160 --> 01:06:50,079
um

1671
01:06:50,079 --> 01:06:53,039
as well as some special cases

1672
01:06:53,039 --> 01:06:57,039
pertaining to presence of air set

1673
01:06:57,039 --> 01:06:59,520
that's already in the draft but some

1674
01:06:59,520 --> 01:07:01,920
special cases that have to do with this

1675
01:07:01,920 --> 01:07:05,839
with the length of the update etc uh one

1676
01:07:05,839 --> 01:07:09,039
can simplify uh i mean one can

1677
01:07:09,039 --> 01:07:11,200
additionally enhance the procedures so

1678
01:07:11,200 --> 01:07:13,599
that's been done and i have shared with

1679
01:07:13,599 --> 01:07:16,480
alexander a few times and

1680
01:07:16,480 --> 01:07:18,640
we didn't get a chance to spend too much

1681
01:07:18,640 --> 01:07:21,200
time on it but we we did

1682
01:07:21,200 --> 01:07:23,760
alexander did look at it and uh i have

1683
01:07:23,760 --> 01:07:25,760
some feedback from him

1684
01:07:25,760 --> 01:07:28,079
so in terms of the description uh this

1685
01:07:28,079 --> 01:07:30,799
uh this is complete and it includes a

1686
01:07:30,799 --> 01:07:32,720
number of corner uh

1687
01:07:32,720 --> 01:07:35,920
cases that are necessary uh it includes

1688
01:07:35,920 --> 01:07:38,079
the treatment of the route server as we

1689
01:07:38,079 --> 01:07:41,039
just discussed a few slides ago uh next

1690
01:07:41,039 --> 01:07:43,839
slide please

1691
01:07:44,400 --> 01:07:46,559
so downstream procedure is described in

1692
01:07:46,559 --> 01:07:49,520
these two slides uh and and it it kind

1693
01:07:49,520 --> 01:07:52,240
of takes care of various uh

1694
01:07:52,240 --> 01:07:54,880
corner cases special cases the route

1695
01:07:54,880 --> 01:07:56,480
server as i said

1696
01:07:56,480 --> 01:07:58,240
um and we have

1697
01:07:58,240 --> 01:08:00,720
uh uh we have confidence that that this

1698
01:08:00,720 --> 01:08:03,200
works several people uh back in one year

1699
01:08:03,200 --> 01:08:05,440
ago people reviewed it and we have

1700
01:08:05,440 --> 01:08:07,920
confidence that this is a good way to uh

1701
01:08:07,920 --> 01:08:09,839
to update the algorithm

1702
01:08:09,839 --> 01:08:12,400
next slide please

1703
01:08:12,400 --> 01:08:14,960
so similarly the upstream has also been

1704
01:08:14,960 --> 01:08:17,679
enhanced including the special cases

1705
01:08:17,679 --> 01:08:20,319
um again i will not go through this step

1706
01:08:20,319 --> 01:08:22,479
step wise obviously but

1707
01:08:22,479 --> 01:08:24,880
the description is complete and we can

1708
01:08:24,880 --> 01:08:26,960
take one more look at it and potentially

1709
01:08:26,960 --> 01:08:30,319
it's a good candidate uh to at least in

1710
01:08:30,319 --> 01:08:33,439
uh in in its uh um

1711
01:08:33,439 --> 01:08:35,839
the form i mean the wording may be

1712
01:08:35,839 --> 01:08:37,920
different but essentially

1713
01:08:37,920 --> 01:08:40,080
all the necessary ingredients for the

1714
01:08:40,080 --> 01:08:42,960
procedures are are described here

1715
01:08:42,960 --> 01:08:45,439
so it should work pretty good to update

1716
01:08:45,439 --> 01:08:46,479
the

1717
01:08:46,479 --> 01:08:47,520
draft

1718
01:08:47,520 --> 01:08:49,600
next slide please

1719
01:08:49,600 --> 01:08:52,640
so at least we have been

1720
01:08:52,640 --> 01:08:55,759
working on implementation of everything

1721
01:08:55,759 --> 01:08:59,279
a bgp rov bgp sec and we have those

1722
01:08:59,279 --> 01:09:01,839
implementations available in bgp

1723
01:09:01,839 --> 01:09:03,359
srx

1724
01:09:03,359 --> 01:09:06,880
and included in that is also the aspa

1725
01:09:06,880 --> 01:09:09,600
procedures uh that are described here

1726
01:09:09,600 --> 01:09:11,600
except for the route server related

1727
01:09:11,600 --> 01:09:13,520
parts which are new

1728
01:09:13,520 --> 01:09:16,960
um so this is the reference to to our

1729
01:09:16,960 --> 01:09:19,759
implementation uh there is also a data

1730
01:09:19,759 --> 01:09:22,640
that is available for for tests

1731
01:09:22,640 --> 01:09:25,520
data sets are available for testing

1732
01:09:25,520 --> 01:09:28,319
so that concludes my presentation thank

1733
01:09:28,319 --> 01:09:31,839
you happy to take questions

1734
01:09:31,839 --> 01:09:34,479
excellent thank you we have been and

1735
01:09:34,479 --> 01:09:35,759
alexander

1736
01:09:35,759 --> 01:09:38,158
and thank you again for doing it in a

1737
01:09:38,158 --> 01:09:39,520
short time and thanks to everyone for

1738
01:09:39,520 --> 01:09:41,600
keeping question short

1739
01:09:41,600 --> 01:09:43,920
hi sharon um

1740
01:09:43,920 --> 01:09:46,158
i'm a little confused by the the read

1741
01:09:46,158 --> 01:09:48,560
server handling um warren would you mind

1742
01:09:48,560 --> 01:09:53,120
going back to the the example topology

1743
01:09:54,320 --> 01:09:55,840
um

1744
01:09:55,840 --> 01:09:58,560
there is no there's uh the one further

1745
01:09:58,560 --> 01:10:02,480
on where it had as4 in it as well

1746
01:10:02,480 --> 01:10:04,640
that's the one um

1747
01:10:04,640 --> 01:10:06,800
i i'm i'm a little unclear still as to

1748
01:10:06,800 --> 01:10:09,040
what we thought was broken prior to this

1749
01:10:09,040 --> 01:10:11,280
update um

1750
01:10:11,280 --> 01:10:14,080
there is no difference

1751
01:10:14,080 --> 01:10:16,480
from the perspective of as4

1752
01:10:16,480 --> 01:10:19,600
um if the if the rs is a transparent one

1753
01:10:19,600 --> 01:10:21,520
it can be ignored altogether

1754
01:10:21,520 --> 01:10:23,440
and if it's a non-transparent one then

1755
01:10:23,440 --> 01:10:25,120
it is indistinguishable from a transit

1756
01:10:25,120 --> 01:10:26,480
provider

1757
01:10:26,480 --> 01:10:27,600
um

1758
01:10:27,600 --> 01:10:29,440
all that needs to happen in order for

1759
01:10:29,440 --> 01:10:32,080
as4 to correctly detect this as a leak

1760
01:10:32,080 --> 01:10:35,840
is as1 needs to have created some aspa

1761
01:10:35,840 --> 01:10:37,840
with any contents as long as it doesn't

1762
01:10:37,840 --> 01:10:39,679
have as3 in it

1763
01:10:39,679 --> 01:10:42,159
um and that's what the previous

1764
01:10:42,159 --> 01:10:44,000
that's what the previous version of the

1765
01:10:44,000 --> 01:10:46,159
algorithm said um

1766
01:10:46,159 --> 01:10:47,199
i don't

1767
01:10:47,199 --> 01:10:49,760
i find the the additional

1768
01:10:49,760 --> 01:10:51,679
corner case is a complication rather

1769
01:10:51,679 --> 01:10:53,360
than the simplification and i i don't

1770
01:10:53,360 --> 01:10:55,920
see the logic personally yeah if you uh

1771
01:10:55,920 --> 01:10:58,320
thank you uh for the question us if you

1772
01:10:58,320 --> 01:11:00,480
focus on uh like here we are looking at

1773
01:11:00,480 --> 01:11:04,960
as3 from s s or as4 from s four point

1774
01:11:04,960 --> 01:11:07,360
four points of view uh points of view uh

1775
01:11:07,360 --> 01:11:10,400
what you said is correct uh it doesn't

1776
01:11:10,400 --> 01:11:12,640
need to know about the presence of the

1777
01:11:12,640 --> 01:11:15,520
rs whether it is transparent or not uh

1778
01:11:15,520 --> 01:11:18,320
all that it needs are the asps that that

1779
01:11:18,320 --> 01:11:21,440
the two rs clients should have uh with

1780
01:11:21,440 --> 01:11:25,600
any uh asn whatever uh any provider that

1781
01:11:25,600 --> 01:11:28,400
it may show in the aspa

1782
01:11:28,400 --> 01:11:30,560
but if you look at it from the point of

1783
01:11:30,560 --> 01:11:34,000
view of as3 when a as3 rs client is

1784
01:11:34,000 --> 01:11:36,080
evaluating a s

1785
01:11:36,080 --> 01:11:38,159
then um

1786
01:11:38,159 --> 01:11:39,760
it

1787
01:11:39,760 --> 01:11:43,679
then it helps for it to uh see that as1

1788
01:11:43,679 --> 01:11:46,400
has registered an aspa

1789
01:11:46,400 --> 01:11:50,560
including the rs asn in it um and that

1790
01:11:50,560 --> 01:11:53,280
is uh that is one reason to uh so it is

1791
01:11:53,280 --> 01:11:56,560
not necessary uh to include the uh

1792
01:11:56,560 --> 01:12:00,800
rsasn in the aspa like you said um uh

1793
01:12:00,800 --> 01:12:03,120
because we are already assuming that the

1794
01:12:03,120 --> 01:12:05,120
that the uh

1795
01:12:05,120 --> 01:12:08,960
non-transparent uh rs is is a rarity

1796
01:12:08,960 --> 01:12:10,000
um

1797
01:12:10,000 --> 01:12:12,880
however uh if in cases when they are

1798
01:12:12,880 --> 01:12:14,560
when the uh

1799
01:12:14,560 --> 01:12:17,120
when the rs is

1800
01:12:17,120 --> 01:12:19,600
non-transparent or even otherwise it

1801
01:12:19,600 --> 01:12:21,760
helps the rs client

1802
01:12:21,760 --> 01:12:25,199
so as4 it doesn't matter but for for the

1803
01:12:25,199 --> 01:12:27,920
rs client as3 it matters to some extent

1804
01:12:27,920 --> 01:12:31,760
to have uh the uh the asn of the rs uh

1805
01:12:31,760 --> 01:12:34,000
in the aspa

1806
01:12:34,000 --> 01:12:34,800
thanks

1807
01:12:34,800 --> 01:12:36,719
that i i understand the explanation i

1808
01:12:36,719 --> 01:12:38,640
think it's important to realize that as3

1809
01:12:38,640 --> 01:12:40,000
knows that it's speaking to a root

1810
01:12:40,000 --> 01:12:40,960
server

1811
01:12:40,960 --> 01:12:42,320
um

1812
01:12:42,320 --> 01:12:44,159
i don't think that i don't think that

1813
01:12:44,159 --> 01:12:46,159
having corner cases in the protocol

1814
01:12:46,159 --> 01:12:48,000
helps anyone here i think it's more

1815
01:12:48,000 --> 01:12:49,600
complication

1816
01:12:49,600 --> 01:12:50,480
and

1817
01:12:50,480 --> 01:12:53,840
the validation that as3 applies can take

1818
01:12:53,840 --> 01:12:56,239
into account its local knowledge i don't

1819
01:12:56,239 --> 01:12:58,640
think that i think this makes the

1820
01:12:58,640 --> 01:13:00,480
validation procedure

1821
01:13:00,480 --> 01:13:04,239
harder to understand rather than easier

1822
01:13:07,920 --> 01:13:10,320
let me try to jump and ask the question

1823
01:13:10,320 --> 01:13:11,760
for sure

1824
01:13:11,760 --> 01:13:14,719
the problem occurs if in a slightly

1825
01:13:14,719 --> 01:13:17,360
different topology imagine on this

1826
01:13:17,360 --> 01:13:20,640
drawing that is4 is a custom

1827
01:13:20,640 --> 01:13:25,199
and it receives a prefix from i3

1828
01:13:25,199 --> 01:13:29,520
and in this case if is1 and ic3 haven't

1829
01:13:29,520 --> 01:13:30,480
signed

1830
01:13:30,480 --> 01:13:33,600
the ic2 as its provider

1831
01:13:33,600 --> 01:13:36,960
it will treat such a route as a router

1832
01:13:36,960 --> 01:13:39,280
so one hope away

1833
01:13:39,280 --> 01:13:41,040
from the

1834
01:13:41,040 --> 01:13:43,679
non-transparent uh transparent internet

1835
01:13:43,679 --> 01:13:46,000
exchange point

1836
01:13:46,000 --> 01:13:48,400
we cannot distinguish

1837
01:13:48,400 --> 01:13:51,199
if it is a round league or if it is not

1838
01:13:51,199 --> 01:13:53,920
transparent internet exchange point

1839
01:13:53,920 --> 01:13:55,760
that's the problem and alexandra are you

1840
01:13:55,760 --> 01:13:58,480
talking about the case where the ixp

1841
01:13:58,480 --> 01:14:00,080
root server is non-transparent there

1842
01:14:00,080 --> 01:14:01,199
yeah

1843
01:14:01,199 --> 01:14:03,679
yes yes yes and a slightly different

1844
01:14:03,679 --> 01:14:07,280
drawing where ice4 is a customer of ice

1845
01:14:07,280 --> 01:14:10,480
i understand so i think in that case

1846
01:14:10,480 --> 01:14:12,560
i think the in that case we embrace the

1847
01:14:12,560 --> 01:14:15,360
fact that the root server is a transit

1848
01:14:15,360 --> 01:14:16,719
provider

1849
01:14:16,719 --> 01:14:18,800
it is a transparent it's just not giving

1850
01:14:18,800 --> 01:14:20,239
anyone a full table

1851
01:14:20,239 --> 01:14:22,080
and i think we should erase that rather

1852
01:14:22,080 --> 01:14:23,440
than trying to

1853
01:14:23,440 --> 01:14:25,199
make them artificially into different

1854
01:14:25,199 --> 01:14:26,320
things

1855
01:14:26,320 --> 01:14:28,480
yeah yeah i totally agree with you and

1856
01:14:28,480 --> 01:14:29,440
so

1857
01:14:29,440 --> 01:14:33,760
in this direction i had a plan to change

1858
01:14:33,760 --> 01:14:36,480
the document

1859
01:14:36,960 --> 01:14:39,760
i'm sorry for

1860
01:14:39,760 --> 01:14:41,360
interrupting

1861
01:14:41,360 --> 01:14:44,080
no problem thank you alexander um i just

1862
01:14:44,080 --> 01:14:47,520
want to add to what you already said um

1863
01:14:47,520 --> 01:14:49,920
uh i think you you said it correctly

1864
01:14:49,920 --> 01:14:50,880
that

1865
01:14:50,880 --> 01:14:53,600
for the non-transparent case uh if it

1866
01:14:53,600 --> 01:14:55,520
may be extremely rare

1867
01:14:55,520 --> 01:14:58,400
but just in case the route servers

1868
01:14:58,400 --> 01:15:01,440
inserts is as number and for example as4

1869
01:15:01,440 --> 01:15:03,760
is the customer as you said

1870
01:15:03,760 --> 01:15:06,080
in order to be able to detect route

1871
01:15:06,080 --> 01:15:09,520
leaks it it is it is not a corner case

1872
01:15:09,520 --> 01:15:12,320
it is it is it becomes

1873
01:15:12,320 --> 01:15:15,040
useful for the for that rs client to

1874
01:15:15,040 --> 01:15:19,199
include the rsasn in the aspa

1875
01:15:19,199 --> 01:15:23,239
i think you agree with that

1876
01:15:25,600 --> 01:15:27,360
okay thank you i suspect there'll be

1877
01:15:27,360 --> 01:15:30,000
some more discussion on this on the list

1878
01:15:30,000 --> 01:15:32,880
yeah um i'm sorry lauren um yeah i would

1879
01:15:32,880 --> 01:15:36,159
request ben to uh put a message on the

1880
01:15:36,159 --> 01:15:38,560
site on the list so we can we can

1881
01:15:38,560 --> 01:15:41,199
understand if we misunderstood him

1882
01:15:41,199 --> 01:15:42,400
thank you

1883
01:15:42,400 --> 01:15:45,120
and ben says he'll put it on the list

1884
01:15:45,120 --> 01:15:47,760
okay excellent thank you and we seem to

1885
01:15:47,760 --> 01:15:50,400
be managing to recover some of our time

1886
01:15:50,400 --> 01:15:52,480
but we will still

1887
01:15:52,480 --> 01:15:54,080
try and make sure that we get through

1888
01:15:54,080 --> 01:15:57,199
things so everybody has a fair

1889
01:15:57,199 --> 01:15:58,800
fair shot at the mic

1890
01:15:58,800 --> 01:16:02,320
and i believe next we have

1891
01:16:02,320 --> 01:16:03,120
yo

1892
01:16:03,120 --> 01:16:06,239
rpki and ct and discovery and i think

1893
01:16:06,239 --> 01:16:07,600
this is

1894
01:16:07,600 --> 01:16:08,719
15

1895
01:16:08,719 --> 01:16:11,120
as well

1896
01:16:16,560 --> 01:16:19,040
all right i'm back joe snyder's and i'm

1897
01:16:19,040 --> 01:16:22,320
here to steer up some stuff and cause us

1898
01:16:22,320 --> 01:16:25,520
a lot of work in the next five years

1899
01:16:25,520 --> 01:16:26,320
um

1900
01:16:26,320 --> 01:16:28,880
this is an attempt to kick off a

1901
01:16:28,880 --> 01:16:30,640
what i would say is

1902
01:16:30,640 --> 01:16:33,040
quite large project amongst our fairly

1903
01:16:33,040 --> 01:16:34,800
small community

1904
01:16:34,800 --> 01:16:36,159
but i do believe

1905
01:16:36,159 --> 01:16:38,159
it is worthwhile and in this in this

1906
01:16:38,159 --> 01:16:40,719
deck i'll try to explain why

1907
01:16:40,719 --> 01:16:43,440
next slide please

1908
01:16:44,080 --> 01:16:46,239
so if we look at the rpki although the

1909
01:16:46,239 --> 01:16:48,960
standards are 10 plus years it's only in

1910
01:16:48,960 --> 01:16:51,520
recent years that we've

1911
01:16:51,520 --> 01:16:53,520
really grown through some some teething

1912
01:16:53,520 --> 01:16:54,400
pain

1913
01:16:54,400 --> 01:16:57,360
um i think we're i mean this this image

1914
01:16:57,360 --> 01:16:59,600
is is a bit of a joke uh but i've we've

1915
01:16:59,600 --> 01:17:02,000
come a long way in the last two years i

1916
01:17:02,000 --> 01:17:04,719
know that almost all rars are now

1917
01:17:04,719 --> 01:17:06,480
testing with multiple validator

1918
01:17:06,480 --> 01:17:08,719
implementations before pushing code to

1919
01:17:08,719 --> 01:17:10,400
production

1920
01:17:10,400 --> 01:17:13,440
some rers even move to a 24 7 support

1921
01:17:13,440 --> 01:17:15,199
model

1922
01:17:15,199 --> 01:17:18,000
i think rp implementers have uh taken a

1923
01:17:18,000 --> 01:17:19,840
much closer look at the original

1924
01:17:19,840 --> 01:17:22,239
intentions of of the design behind the

1925
01:17:22,239 --> 01:17:24,320
rpki data structures

1926
01:17:24,320 --> 01:17:25,280
uh

1927
01:17:25,280 --> 01:17:26,480
and and

1928
01:17:26,480 --> 01:17:29,040
also for instance on the bgp router side

1929
01:17:29,040 --> 01:17:30,560
a few uh

1930
01:17:30,560 --> 01:17:33,040
terrible bugs were uncovered and

1931
01:17:33,040 --> 01:17:35,199
subsequently fixed

1932
01:17:35,199 --> 01:17:36,239
so

1933
01:17:36,239 --> 01:17:39,360
you know we we learn as we do

1934
01:17:39,360 --> 01:17:41,520
but there is more

1935
01:17:41,520 --> 01:17:44,000
next slide please

1936
01:17:44,000 --> 01:17:46,400
because if i look at our sibling

1937
01:17:46,400 --> 01:17:49,520
the web pki they are years ahead of what

1938
01:17:49,520 --> 01:17:50,880
we are doing

1939
01:17:50,880 --> 01:17:52,400
and i think they're really cool and i

1940
01:17:52,400 --> 01:17:54,800
would like to copy some of their ideas

1941
01:17:54,800 --> 01:17:55,679
and

1942
01:17:55,679 --> 01:17:58,080
apply them to the rpki for mutual

1943
01:17:58,080 --> 01:17:59,520
benefits

1944
01:17:59,520 --> 01:18:02,320
next slide please

1945
01:18:05,280 --> 01:18:08,400
all right let me go to my backup copy of

1946
01:18:08,400 --> 01:18:11,559
the slides

1947
01:18:17,199 --> 01:18:19,759
here we go

1948
01:18:19,920 --> 01:18:20,719
so

1949
01:18:20,719 --> 01:18:23,360
this slide

1950
01:18:24,719 --> 01:18:27,040
shows some differences between rpki and

1951
01:18:27,040 --> 01:18:28,800
web pki

1952
01:18:28,800 --> 01:18:30,000
um

1953
01:18:30,000 --> 01:18:32,880
in the web pki if you want to be a root

1954
01:18:32,880 --> 01:18:34,239
ca

1955
01:18:34,239 --> 01:18:36,000
synonymous to to the trust anchor

1956
01:18:36,000 --> 01:18:38,239
operators in the rpki

1957
01:18:38,239 --> 01:18:39,360
um

1958
01:18:39,360 --> 01:18:41,120
there's a number of things that that

1959
01:18:41,120 --> 01:18:44,239
happen in that ecosystem that

1960
01:18:44,239 --> 01:18:47,199
we sort of skipped over or are now

1961
01:18:47,199 --> 01:18:48,960
slowly catching up to

1962
01:18:48,960 --> 01:18:51,760
uh in the rpi ecosystem

1963
01:18:51,760 --> 01:18:54,159
so for instance

1964
01:18:54,159 --> 01:18:58,560
if you want to operate a web pki ca

1965
01:18:58,560 --> 01:19:00,000
route

1966
01:19:00,000 --> 01:19:02,080
you have to jump through many hoops to

1967
01:19:02,080 --> 01:19:04,640
to produce audit reports and share those

1968
01:19:04,640 --> 01:19:08,480
other reports with others for review

1969
01:19:08,480 --> 01:19:10,880
you might be operating your route

1970
01:19:10,880 --> 01:19:13,199
for multiple years without any

1971
01:19:13,199 --> 01:19:14,960
subscribers

1972
01:19:14,960 --> 01:19:17,199
so the analogy to the rpki would be

1973
01:19:17,199 --> 01:19:19,600
without any subordinate

1974
01:19:19,600 --> 01:19:21,120
inr holders

1975
01:19:21,120 --> 01:19:22,880
uh before you

1976
01:19:22,880 --> 01:19:25,199
are included in commonly accepted trust

1977
01:19:25,199 --> 01:19:26,400
stores

1978
01:19:26,400 --> 01:19:27,840
um

1979
01:19:27,840 --> 01:19:30,000
and and that's that's kind of the the

1980
01:19:30,000 --> 01:19:31,840
paperwork side of things i would say

1981
01:19:31,840 --> 01:19:33,679
because an audit report and then a

1982
01:19:33,679 --> 01:19:37,040
compliance uh report uh or or running

1983
01:19:37,040 --> 01:19:39,440
for years in a sort of dry mode

1984
01:19:39,440 --> 01:19:41,840
uh is is

1985
01:19:41,840 --> 01:19:43,840
an administrative action

1986
01:19:43,840 --> 01:19:45,600
but to

1987
01:19:45,600 --> 01:19:47,840
help justify the trust

1988
01:19:47,840 --> 01:19:49,120
in an uh

1989
01:19:49,120 --> 01:19:50,400
in a roots

1990
01:19:50,400 --> 01:19:53,040
in in the web pki there's an additional

1991
01:19:53,040 --> 01:19:54,800
technology that is used that is

1992
01:19:54,800 --> 01:19:57,120
certificate transparency

1993
01:19:57,120 --> 01:20:00,800
so other reports are for the the

1994
01:20:00,800 --> 01:20:02,480
encounter so to speak

1995
01:20:02,480 --> 01:20:05,120
certificate transparency is there for

1996
01:20:05,120 --> 01:20:08,480
computer geeks to verify uh if what is

1997
01:20:08,480 --> 01:20:10,480
happening under that root actually

1998
01:20:10,480 --> 01:20:14,159
happens next slide please

1999
01:20:14,320 --> 01:20:16,840
this is not getting any

2000
01:20:16,840 --> 01:20:20,480
better so this slide uh contains uh a

2001
01:20:20,480 --> 01:20:22,960
pointer to the last ripe routing working

2002
01:20:22,960 --> 01:20:23,760
group

2003
01:20:23,760 --> 01:20:25,840
where uh

2004
01:20:25,840 --> 01:20:29,520
martin hutchinson from google gave an a

2005
01:20:29,520 --> 01:20:32,000
very high level introduction to what

2006
01:20:32,000 --> 01:20:34,239
certificate transparency is what the

2007
01:20:34,239 --> 01:20:35,760
benefits are

2008
01:20:35,760 --> 01:20:38,080
and some pointers to

2009
01:20:38,080 --> 01:20:39,840
how

2010
01:20:39,840 --> 01:20:42,800
not just the web pki but but also other

2011
01:20:42,800 --> 01:20:45,920
pki infrastructures are life reaching

2012
01:20:45,920 --> 01:20:47,840
certificate transparency

2013
01:20:47,840 --> 01:20:50,560
so reviewing that 20-minute video uh is

2014
01:20:50,560 --> 01:20:52,480
is worth your time

2015
01:20:52,480 --> 01:20:55,280
next slide please

2016
01:20:55,840 --> 01:20:58,080
nice

2017
01:20:58,480 --> 01:21:01,120
so in order to kick off a certificate

2018
01:21:01,120 --> 01:21:04,320
transparency project in context of rpki

2019
01:21:04,320 --> 01:21:06,239
uh we need to map

2020
01:21:06,239 --> 01:21:09,040
certain con concepts from the the web

2021
01:21:09,040 --> 01:21:11,199
pki to the rpki

2022
01:21:11,199 --> 01:21:13,440
and use that to to develop our own

2023
01:21:13,440 --> 01:21:14,639
procedures

2024
01:21:14,639 --> 01:21:16,639
to make extensions to to our own

2025
01:21:16,639 --> 01:21:18,239
software

2026
01:21:18,239 --> 01:21:20,719
so in the certificate transparency world

2027
01:21:20,719 --> 01:21:24,400
there is a role called the believer

2028
01:21:24,400 --> 01:21:25,840
and the believer

2029
01:21:25,840 --> 01:21:27,199
is

2030
01:21:27,199 --> 01:21:29,520
an entity that

2031
01:21:29,520 --> 01:21:32,639
takes an attestation made by a claimant

2032
01:21:32,639 --> 01:21:34,800
and and verifies that according to the

2033
01:21:34,800 --> 01:21:36,960
cryptographic procedures as described in

2034
01:21:36,960 --> 01:21:38,719
the specifications

2035
01:21:38,719 --> 01:21:41,440
so in the web pki world the believer is

2036
01:21:41,440 --> 01:21:42,880
the web browser

2037
01:21:42,880 --> 01:21:45,360
and in the rpk world the believer is the

2038
01:21:45,360 --> 01:21:46,880
relying party

2039
01:21:46,880 --> 01:21:49,679
cash implementation so the likes of rpki

2040
01:21:49,679 --> 01:21:52,800
client fort or rootinator

2041
01:21:52,800 --> 01:21:54,480
verifiers

2042
01:21:54,480 --> 01:21:56,800
are entities that have a stake in the

2043
01:21:56,800 --> 01:21:59,760
ecosystem and in the web pki this could

2044
01:21:59,760 --> 01:22:02,800
be the owner of a domain name say

2045
01:22:02,800 --> 01:22:04,320
fastly.com

2046
01:22:04,320 --> 01:22:07,440
uh in the rpki this is the the resource

2047
01:22:07,440 --> 01:22:10,080
holder so the holder of an as number or

2048
01:22:10,080 --> 01:22:13,520
or a set of ip addresses

2049
01:22:13,520 --> 01:22:16,000
and the verifiers want to know what

2050
01:22:16,000 --> 01:22:18,080
certificates were issued

2051
01:22:18,080 --> 01:22:22,080
covering my resource or my domain name

2052
01:22:22,080 --> 01:22:26,320
which means they can verify whether it's

2053
01:22:26,400 --> 01:22:28,960
cas exist which which hold those uh

2054
01:22:28,960 --> 01:22:31,920
resources uh as subordinate uh whether

2055
01:22:31,920 --> 01:22:33,760
they are all under control of the

2056
01:22:33,760 --> 01:22:35,199
verifier

2057
01:22:35,199 --> 01:22:38,639
but also security researchers use can be

2058
01:22:38,639 --> 01:22:41,440
can assume the role of verifiers to to

2059
01:22:41,440 --> 01:22:43,920
compare what they see in the wild versus

2060
01:22:43,920 --> 01:22:46,480
what what should exist

2061
01:22:46,480 --> 01:22:49,040
then finally the claimant

2062
01:22:49,040 --> 01:22:52,880
is the entity making

2063
01:22:53,679 --> 01:22:56,880
attestations about

2064
01:22:57,120 --> 01:22:59,760
who who issue

2065
01:22:59,760 --> 01:23:01,120
certificates

2066
01:23:01,120 --> 01:23:05,040
so in the web pki we call them cas

2067
01:23:05,040 --> 01:23:07,040
but in the rpki

2068
01:23:07,040 --> 01:23:09,440
it's it's basically the trust anchor

2069
01:23:09,440 --> 01:23:12,880
operator plus the cas that belong to the

2070
01:23:12,880 --> 01:23:14,560
trust anchor operator

2071
01:23:14,560 --> 01:23:17,360
so in the rpk you you have the the trust

2072
01:23:17,360 --> 01:23:19,360
anchor itself which is usually the

2073
01:23:19,360 --> 01:23:21,120
offline hsn

2074
01:23:21,120 --> 01:23:22,400
and a few

2075
01:23:22,400 --> 01:23:25,120
intermediate certificates that that hold

2076
01:23:25,120 --> 01:23:27,840
the power for zero slash zero in both v4

2077
01:23:27,840 --> 01:23:30,400
and v6

2078
01:23:30,719 --> 01:23:32,800
and then the

2079
01:23:32,800 --> 01:23:36,800
the trust arc jumps towards the the

2080
01:23:36,800 --> 01:23:39,400
cas that are heavily constrained by the

2081
01:23:39,400 --> 01:23:42,080
3779 extensions

2082
01:23:42,080 --> 01:23:43,120
so

2083
01:23:43,120 --> 01:23:45,520
uh in in the claimant for the purpose of

2084
01:23:45,520 --> 01:23:48,239
this presentation is kind of the the top

2085
01:23:48,239 --> 01:23:51,520
of the the trust stream

2086
01:23:51,520 --> 01:23:53,040
if you follow this link you can read

2087
01:23:53,040 --> 01:23:56,239
more about the use of these words

2088
01:23:56,239 --> 01:23:58,959
next slide please

2089
01:24:00,840 --> 01:24:02,880
now uh

2090
01:24:02,880 --> 01:24:06,320
a very natural question is why not use

2091
01:24:06,320 --> 01:24:08,320
existing publication mechanisms like

2092
01:24:08,320 --> 01:24:10,639
rsync or rdp

2093
01:24:10,639 --> 01:24:12,800
and we have to realize that both rsync

2094
01:24:12,800 --> 01:24:15,520
and rdp have been optimized for a very

2095
01:24:15,520 --> 01:24:18,639
specific purpose which is to bring

2096
01:24:18,639 --> 01:24:21,520
the current set of objects as fast as

2097
01:24:21,520 --> 01:24:23,360
possible to

2098
01:24:23,360 --> 01:24:26,080
a verifier to for instance the rp

2099
01:24:26,080 --> 01:24:27,920
implementations

2100
01:24:27,920 --> 01:24:28,800
so

2101
01:24:28,800 --> 01:24:32,400
an example of why rdp might not be

2102
01:24:32,400 --> 01:24:33,760
complete

2103
01:24:33,760 --> 01:24:36,400
is uh you you can although everybody

2104
01:24:36,400 --> 01:24:37,760
knows that manifest numbers

2105
01:24:37,760 --> 01:24:39,360
monotonically

2106
01:24:39,360 --> 01:24:40,639
increase

2107
01:24:40,639 --> 01:24:43,280
between rdp deltas

2108
01:24:43,280 --> 01:24:47,520
you can observe in some situations gaps

2109
01:24:47,520 --> 01:24:50,320
in in that numbering scheme

2110
01:24:50,320 --> 01:24:53,120
because if if a user

2111
01:24:53,120 --> 01:24:55,120
adds a rowa and deletes a roa in a

2112
01:24:55,120 --> 01:24:57,760
matter of seconds

2113
01:24:57,760 --> 01:25:01,040
the the subsequent overt event overtakes

2114
01:25:01,040 --> 01:25:03,280
the earlier event and it's not worth

2115
01:25:03,280 --> 01:25:06,000
sending out uh the the earlier uh

2116
01:25:06,000 --> 01:25:07,920
manifest because it has been overtaken

2117
01:25:07,920 --> 01:25:09,440
by events

2118
01:25:09,440 --> 01:25:11,360
and the purpose of certificate

2119
01:25:11,360 --> 01:25:13,600
transparency in this regard is to

2120
01:25:13,600 --> 01:25:17,360
provide full insight into all ca certs

2121
01:25:17,360 --> 01:25:19,920
that have been issued

2122
01:25:19,920 --> 01:25:22,000
which makes it a bit of a heavier

2123
01:25:22,000 --> 01:25:23,120
machine

2124
01:25:23,120 --> 01:25:25,120
and therefore i think it's very good to

2125
01:25:25,120 --> 01:25:27,199
to have separate mechanisms

2126
01:25:27,199 --> 01:25:30,400
uh one targeted to get files or objects

2127
01:25:30,400 --> 01:25:32,960
very fast to the verifiers

2128
01:25:32,960 --> 01:25:34,000
um

2129
01:25:34,000 --> 01:25:36,239
to the believers apologies

2130
01:25:36,239 --> 01:25:39,120
and then a secondary system that is

2131
01:25:39,120 --> 01:25:41,920
designed to to inform verifiers about

2132
01:25:41,920 --> 01:25:45,199
all actions that transpired

2133
01:25:45,199 --> 01:25:48,000
next slide please

2134
01:25:50,000 --> 01:25:51,360
so

2135
01:25:51,360 --> 01:25:53,280
the benefit to the community

2136
01:25:53,280 --> 01:25:54,639
is that

2137
01:25:54,639 --> 01:25:58,159
if we set up some kind of global rpki

2138
01:25:58,159 --> 01:26:01,120
certificate transparency system

2139
01:26:01,120 --> 01:26:03,440
we get auditable logs

2140
01:26:03,440 --> 01:26:06,560
of all actions that rars took

2141
01:26:06,560 --> 01:26:08,639
and this means that resource holders

2142
01:26:08,639 --> 01:26:10,320
such as myself

2143
01:26:10,320 --> 01:26:11,679
uh can

2144
01:26:11,679 --> 01:26:14,400
inspect exactly which cryptographic

2145
01:26:14,400 --> 01:26:16,719
entities at what point in time had

2146
01:26:16,719 --> 01:26:19,199
received what entitlements

2147
01:26:19,199 --> 01:26:19,920
so

2148
01:26:19,920 --> 01:26:23,040
in the case of for instance rsc

2149
01:26:23,040 --> 01:26:25,679
it's it's really nice to to understand

2150
01:26:25,679 --> 01:26:27,360
at what point in time

2151
01:26:27,360 --> 01:26:29,920
uh could anyone other than myself

2152
01:26:29,920 --> 01:26:32,159
and my my parents

2153
01:26:32,159 --> 01:26:33,199
issue

2154
01:26:33,199 --> 01:26:34,719
rscs

2155
01:26:34,719 --> 01:26:37,520
signed with my resources

2156
01:26:37,520 --> 01:26:38,320
or

2157
01:26:38,320 --> 01:26:40,080
if there was some kind of administrative

2158
01:26:40,080 --> 01:26:43,040
issue where for one reason or another

2159
01:26:43,040 --> 01:26:45,440
my my res my rpki

2160
01:26:45,440 --> 01:26:48,320
entitlements were revoked

2161
01:26:48,320 --> 01:26:52,560
when exactly was my ability to uh

2162
01:26:52,560 --> 01:26:56,320
sign with those resources reinstate it

2163
01:26:56,320 --> 01:26:59,360
and i think that the

2164
01:26:59,360 --> 01:27:01,120
having this type of

2165
01:27:01,120 --> 01:27:04,159
maximum granularity or full detail like

2166
01:27:04,159 --> 01:27:06,080
the highest resolution image that we can

2167
01:27:06,080 --> 01:27:08,719
get of the issuance process of of the

2168
01:27:08,719 --> 01:27:10,159
rers

2169
01:27:10,159 --> 01:27:12,000
will positively raise the bar in the

2170
01:27:12,000 --> 01:27:13,440
ecosystem

2171
01:27:13,440 --> 01:27:15,679
so aspiring to implement certificate

2172
01:27:15,679 --> 01:27:17,360
transparency

2173
01:27:17,360 --> 01:27:19,520
forces people to take a careful look at

2174
01:27:19,520 --> 01:27:21,600
their issuance process

2175
01:27:21,600 --> 01:27:24,080
and document and understand how exactly

2176
01:27:24,080 --> 01:27:26,960
their procedures work and through that

2177
01:27:26,960 --> 01:27:28,239
process

2178
01:27:28,239 --> 01:27:31,120
we may see some organizations optimize

2179
01:27:31,120 --> 01:27:33,040
their process

2180
01:27:33,040 --> 01:27:35,199
so i i think it's good to have

2181
01:27:35,199 --> 01:27:38,880
uh something on the horizon that that

2182
01:27:38,880 --> 01:27:42,560
yes is difficult is is it's not cheap

2183
01:27:42,560 --> 01:27:44,639
it will involve

2184
01:27:44,639 --> 01:27:47,760
many man hours or people hours

2185
01:27:47,760 --> 01:27:49,760
but the end result is i think a

2186
01:27:49,760 --> 01:27:52,400
healthier ecosystem that is worthy of

2187
01:27:52,400 --> 01:27:54,639
the trust of the believers

2188
01:27:54,639 --> 01:27:56,239
i don't think it's

2189
01:27:56,239 --> 01:27:58,239
i think it's it's not sufficient to say

2190
01:27:58,239 --> 01:27:59,120
hey

2191
01:27:59,120 --> 01:28:01,600
we are an rer you can trust our brands

2192
01:28:01,600 --> 01:28:02,400
we

2193
01:28:02,400 --> 01:28:04,719
we are trustworthy because we we engage

2194
01:28:04,719 --> 01:28:06,800
with the community we listen to you all

2195
01:28:06,800 --> 01:28:09,120
of this is true but in addition to that

2196
01:28:09,120 --> 01:28:10,719
i want to be audited

2197
01:28:10,719 --> 01:28:13,440
to be able to audit those claims and and

2198
01:28:13,440 --> 01:28:15,600
see how

2199
01:28:15,600 --> 01:28:18,000
what the health status of a a trust

2200
01:28:18,000 --> 01:28:20,719
anchor operator uh truly is

2201
01:28:20,719 --> 01:28:22,800
uh because that provides the grounds to

2202
01:28:22,800 --> 01:28:25,679
to engage in conversation uh and make

2203
01:28:25,679 --> 01:28:28,400
retrospectives on on incidents and

2204
01:28:28,400 --> 01:28:30,239
and talk about why did this happen and

2205
01:28:30,239 --> 01:28:33,199
what can we do to prevent this next time

2206
01:28:33,199 --> 01:28:36,080
in the same way i see that ct in in the

2207
01:28:36,080 --> 01:28:38,560
web pki has brought numerous

2208
01:28:38,560 --> 01:28:41,440
improvements uh and and far more

2209
01:28:41,440 --> 01:28:42,560
uh

2210
01:28:42,560 --> 01:28:45,440
uh operation of of the cas in the web

2211
01:28:45,440 --> 01:28:48,719
pki to the point that now uh ct and the

2212
01:28:48,719 --> 01:28:53,280
web pki are so intertwined uh that that

2213
01:28:53,280 --> 01:28:55,520
web pki is is fairly functional these

2214
01:28:55,520 --> 01:28:57,840
days

2215
01:28:58,080 --> 01:28:59,520
so um

2216
01:28:59,520 --> 01:29:02,400
next slide please slides broken

2217
01:29:02,400 --> 01:29:04,239
uh but it's here if you want to see it

2218
01:29:04,239 --> 01:29:06,880
in the big screen

2219
01:29:06,880 --> 01:29:10,760
you can see my slide here

2220
01:29:11,040 --> 01:29:13,120
so the to-do list

2221
01:29:13,120 --> 01:29:14,800
and keep in mind this is a multi-year

2222
01:29:14,800 --> 01:29:16,159
project so

2223
01:29:16,159 --> 01:29:18,000
if you happen to be an rer and you look

2224
01:29:18,000 --> 01:29:19,600
at your budget and you're like there's

2225
01:29:19,600 --> 01:29:22,400
no way i can pull this off that's okay

2226
01:29:22,400 --> 01:29:24,000
there's always next year or the year

2227
01:29:24,000 --> 01:29:25,280
after

2228
01:29:25,280 --> 01:29:27,120
this is not a project we should rush

2229
01:29:27,120 --> 01:29:28,159
through

2230
01:29:28,159 --> 01:29:29,760
this is a project where we should

2231
01:29:29,760 --> 01:29:32,239
carefully take our time to establish

2232
01:29:32,239 --> 01:29:36,239
what exactly it is we want to implement

2233
01:29:36,560 --> 01:29:38,400
so for the initial scope of certificate

2234
01:29:38,400 --> 01:29:41,040
transparency i propose that we attempt

2235
01:29:41,040 --> 01:29:43,360
to keep track of the cas in the

2236
01:29:43,360 --> 01:29:47,600
ecosystem so we leave roas gbrs bgp set

2237
01:29:47,600 --> 01:29:51,120
keys aspa objects out of scope

2238
01:29:51,120 --> 01:29:53,520
those are ee certificates

2239
01:29:53,520 --> 01:29:55,760
i think if we can get to the point where

2240
01:29:55,760 --> 01:29:58,960
ca certificates are carefully tracked uh

2241
01:29:58,960 --> 01:30:00,960
that would also already be a big step

2242
01:30:00,960 --> 01:30:02,960
forward

2243
01:30:02,960 --> 01:30:03,840
now

2244
01:30:03,840 --> 01:30:06,159
who does this concern

2245
01:30:06,159 --> 01:30:08,719
as i mentioned i think the rars are are

2246
01:30:08,719 --> 01:30:11,199
the ones that the prime candidates to

2247
01:30:11,199 --> 01:30:12,800
provide

2248
01:30:12,800 --> 01:30:16,080
a high level of transparency uh through

2249
01:30:16,080 --> 01:30:17,840
ct

2250
01:30:17,840 --> 01:30:20,480
log operators some entities will need to

2251
01:30:20,480 --> 01:30:21,140
set up

2252
01:30:21,140 --> 01:30:23,120
[Music]

2253
01:30:23,120 --> 01:30:25,600
surfaces that can absorb information

2254
01:30:25,600 --> 01:30:28,400
coming from the rers and publish that in

2255
01:30:28,400 --> 01:30:30,080
immutable logs

2256
01:30:30,080 --> 01:30:32,239
and then of course verifiers and that

2257
01:30:32,239 --> 01:30:34,320
could be anybody with a stake or

2258
01:30:34,320 --> 01:30:35,440
interest

2259
01:30:35,440 --> 01:30:37,600
so somewhat out of scope is

2260
01:30:37,600 --> 01:30:40,239
delegated rpki or even rp

2261
01:30:40,239 --> 01:30:41,760
implementations because rp

2262
01:30:41,760 --> 01:30:45,199
implementations are just believers

2263
01:30:45,199 --> 01:30:48,639
and then the second part of my slide is

2264
01:30:48,639 --> 01:30:52,800
a call to to look for interested people

2265
01:30:52,800 --> 01:30:55,120
step one would be to offer an internet

2266
01:30:55,120 --> 01:30:57,760
draft that kind of maps out a plan about

2267
01:30:57,760 --> 01:31:01,520
what cte is and how it applies to rpki

2268
01:31:01,520 --> 01:31:03,120
we need to find people that are willing

2269
01:31:03,120 --> 01:31:04,639
to host logs

2270
01:31:04,639 --> 01:31:06,400
because the claimant

2271
01:31:06,400 --> 01:31:08,159
should be a different

2272
01:31:08,159 --> 01:31:09,120
the lock

2273
01:31:09,120 --> 01:31:10,880
operator should be a different entity

2274
01:31:10,880 --> 01:31:13,199
than the claimant

2275
01:31:13,199 --> 01:31:14,880
we need to find people that are willing

2276
01:31:14,880 --> 01:31:17,600
to send pre-certificates to the locks

2277
01:31:17,600 --> 01:31:18,560
and

2278
01:31:18,560 --> 01:31:21,199
ideally find people who have hands-on

2279
01:31:21,199 --> 01:31:23,440
experience with ct

2280
01:31:23,440 --> 01:31:26,400
and can help our community understand

2281
01:31:26,400 --> 01:31:29,679
what to do and what pitfalls to avoid

2282
01:31:29,679 --> 01:31:31,440
so if that

2283
01:31:31,440 --> 01:31:33,120
the microphone uh

2284
01:31:33,120 --> 01:31:36,000
queue i guess is open

2285
01:31:36,000 --> 01:31:38,320
yep and we only have five questions

2286
01:31:38,320 --> 01:31:40,320
sorry five minutes for questions so

2287
01:31:40,320 --> 01:31:42,000
people can keep them short

2288
01:31:42,000 --> 01:31:45,600
one minute each okay uh this is the

2289
01:31:45,600 --> 01:31:48,080
um yeah i like the idea of ct and i see

2290
01:31:48,080 --> 01:31:49,840
a lot of value of

2291
01:31:49,840 --> 01:31:51,280
i've seen a lot of value in applying

2292
01:31:51,280 --> 01:31:53,280
certificate transparency when uh you

2293
01:31:53,280 --> 01:31:55,600
apply this to any certificates

2294
01:31:55,600 --> 01:31:57,520
like the resource sign checklist that

2295
01:31:57,520 --> 01:31:59,679
you

2296
01:31:59,679 --> 01:32:01,679
mentioned because it's very hard to

2297
01:32:01,679 --> 01:32:03,440
observe all the objects and the nobles

2298
01:32:03,440 --> 01:32:06,239
actually published and

2299
01:32:06,239 --> 01:32:08,080
unless you

2300
01:32:08,080 --> 01:32:09,280
have certificate transparency on

2301
01:32:09,280 --> 01:32:12,159
identity certificates you cannot show a

2302
01:32:12,159 --> 01:32:13,920
very important attack in the rpi which

2303
01:32:13,920 --> 01:32:16,480
is which i think is the original objects

2304
01:32:16,480 --> 01:32:18,159
from the view that you present to

2305
01:32:18,159 --> 01:32:19,440
somebody

2306
01:32:19,440 --> 01:32:21,920
and that would be critical that ees are

2307
01:32:21,920 --> 01:32:23,840
included initially

2308
01:32:23,840 --> 01:32:26,560
but my main question is

2309
01:32:26,560 --> 01:32:28,639
if i may respond to that okay

2310
01:32:28,639 --> 01:32:29,000
um

2311
01:32:29,000 --> 01:32:30,560
[Music]

2312
01:32:30,560 --> 01:32:34,000
it would be very cool if eeserts can be

2313
01:32:34,000 --> 01:32:37,280
part of uh the ct lock infrastructure

2314
01:32:37,280 --> 01:32:39,920
and i'm not pro precluding or x sorry

2315
01:32:39,920 --> 01:32:41,920
i'm not excluding that that

2316
01:32:41,920 --> 01:32:42,800
path

2317
01:32:42,800 --> 01:32:45,280
but to to reduce the scope and and get

2318
01:32:45,280 --> 01:32:47,280
somewhere i think it's great to start

2319
01:32:47,280 --> 01:32:49,360
with c a's

2320
01:32:49,360 --> 01:32:51,199
and if we can get that working we can

2321
01:32:51,199 --> 01:32:56,000
maybe add more to it oh okay i don't see

2322
01:32:56,000 --> 01:32:58,159
much benefit in removing the code part

2323
01:32:58,159 --> 01:33:00,000
where for a ca certificate you submit it

2324
01:33:00,000 --> 01:33:02,560
to the log incorporate the rsc and for

2325
01:33:02,560 --> 01:33:05,120
you certificate you don't but

2326
01:33:05,120 --> 01:33:06,880
that's uh we probably actually have to

2327
01:33:06,880 --> 01:33:09,040
prototype this to see how it works out

2328
01:33:09,040 --> 01:33:11,840
but if you want to if you want the

2329
01:33:11,840 --> 01:33:14,000
rp's to check certificate and

2330
01:33:14,000 --> 01:33:15,440
transparency

2331
01:33:15,440 --> 01:33:17,840
they will need to check the

2332
01:33:17,840 --> 01:33:19,920
the attestations that are in the ca

2333
01:33:19,920 --> 01:33:22,080
certificates this means that when you

2334
01:33:22,080 --> 01:33:23,840
want to create a ca certificate you need

2335
01:33:23,840 --> 01:33:25,920
to get enough responses from qualified

2336
01:33:25,920 --> 01:33:28,159
logs at least in the web context

2337
01:33:28,159 --> 01:33:31,360
and that implies that

2338
01:33:31,360 --> 01:33:34,560
that log availability

2339
01:33:34,560 --> 01:33:38,560
causes an upper bound on ca availability

2340
01:33:38,560 --> 01:33:39,920
um

2341
01:33:39,920 --> 01:33:41,040
and

2342
01:33:41,040 --> 01:33:43,440
more brittleness in the rpi scares me a

2343
01:33:43,440 --> 01:33:45,840
lot being an actual ca operator of a

2344
01:33:45,840 --> 01:33:48,480
real world instance that has a lot of

2345
01:33:48,480 --> 01:33:49,360
impact

2346
01:33:49,360 --> 01:33:51,440
so how do you well how do you think

2347
01:33:51,440 --> 01:33:53,040
about this risk

2348
01:33:53,040 --> 01:33:54,639
so as you can see

2349
01:33:54,639 --> 01:33:57,199
clearly

2350
01:33:58,960 --> 01:34:01,440
i consider rp implementations at this

2351
01:34:01,440 --> 01:34:04,080
point in time out of scope

2352
01:34:04,080 --> 01:34:07,280
because rp's are believers

2353
01:34:07,280 --> 01:34:09,920
and and they just absorb rdp and rsync

2354
01:34:09,920 --> 01:34:11,679
and do what they do today

2355
01:34:11,679 --> 01:34:14,400
separately will create verifiers maybe

2356
01:34:14,400 --> 01:34:17,520
based on existing rp code bases and

2357
01:34:17,520 --> 01:34:20,239
those would absorb the logs and

2358
01:34:20,239 --> 01:34:21,840
maybe use

2359
01:34:21,840 --> 01:34:25,199
monitoring alerts or or

2360
01:34:25,199 --> 01:34:26,560
but an rp

2361
01:34:26,560 --> 01:34:29,040
in the rpki context is a believer not a

2362
01:34:29,040 --> 01:34:30,960
verifier

2363
01:34:30,960 --> 01:34:32,480
so sorry we are all going to have to be

2364
01:34:32,480 --> 01:34:34,560
okay we need to clarify

2365
01:34:34,560 --> 01:34:36,320
there's lots of clarifications that need

2366
01:34:36,320 --> 01:34:38,639
to take place uh i don't consider myself

2367
01:34:38,639 --> 01:34:40,800
a ct expert either

2368
01:34:40,800 --> 01:34:42,800
so we'll need to educate each other and

2369
01:34:42,800 --> 01:34:44,840
yeah that means lots of

2370
01:34:44,840 --> 01:34:46,800
talking

2371
01:34:46,800 --> 01:34:48,560
uh

2372
01:34:48,560 --> 01:34:49,679
um

2373
01:34:49,679 --> 01:34:53,520
in web pki the end game of significant

2374
01:34:53,520 --> 01:34:55,199
transparency as these as i understand is

2375
01:34:55,199 --> 01:34:58,880
that if a ca really misbehaves we just

2376
01:34:58,880 --> 01:35:00,960
pull it from our trust and we no longer

2377
01:35:00,960 --> 01:35:02,719
trust the ca

2378
01:35:02,719 --> 01:35:04,480
how these what do you see is the end

2379
01:35:04,480 --> 01:35:05,679
game for

2380
01:35:05,679 --> 01:35:08,719
rpi because i believe there is no real

2381
01:35:08,719 --> 01:35:11,679
no real alternative to the rars

2382
01:35:11,679 --> 01:35:13,360
currently

2383
01:35:13,360 --> 01:35:15,760
if an aria are misbehaves yes i will

2384
01:35:15,760 --> 01:35:17,920
remove them from my thruster

2385
01:35:17,920 --> 01:35:19,360
okay and instead i'll tell your goal

2386
01:35:19,360 --> 01:35:20,080
with

2387
01:35:20,080 --> 01:35:22,560
uh certificate transparency to see if an

2388
01:35:22,560 --> 01:35:25,280
rer misbehaves and then to pull them

2389
01:35:25,280 --> 01:35:27,520
from from your thruster

2390
01:35:27,520 --> 01:35:31,040
the first goal is to engage with rudiger

2391
01:35:31,040 --> 01:35:34,000
the first goal is to engage with the ror

2392
01:35:34,000 --> 01:35:36,480
and confirm with them hey i saw this

2393
01:35:36,480 --> 01:35:39,679
incident can you provide me with an rfo

2394
01:35:39,679 --> 01:35:42,080
and then an rfo appears and hopefully

2395
01:35:42,080 --> 01:35:44,320
everybody learns but if the same type of

2396
01:35:44,320 --> 01:35:46,639
mistakes repeats over and over or if

2397
01:35:46,639 --> 01:35:49,119
there are systematic issues

2398
01:35:49,119 --> 01:35:51,119
it could

2399
01:35:51,119 --> 01:35:53,920
motivate some operators to to perhaps

2400
01:35:53,920 --> 01:35:57,840
temporarily or perhaps permanently

2401
01:35:58,960 --> 01:36:00,480
no longer

2402
01:36:00,480 --> 01:36:03,920
sees using a specific trust anchor

2403
01:36:03,920 --> 01:36:07,040
so the goal of transparency is is

2404
01:36:07,040 --> 01:36:08,719
in part to to

2405
01:36:08,719 --> 01:36:10,800
be able to to hold people or

2406
01:36:10,800 --> 01:36:13,360
organizations accountable

2407
01:36:13,360 --> 01:36:14,480
but

2408
01:36:14,480 --> 01:36:17,360
distrusting a route is is

2409
01:36:17,360 --> 01:36:19,119
then that's the end of the process that

2410
01:36:19,119 --> 01:36:21,600
is the death of the universe so the the

2411
01:36:21,600 --> 01:36:24,159
goal of ct is to avoid to get to that

2412
01:36:24,159 --> 01:36:26,639
state because we can learn uh from what

2413
01:36:26,639 --> 01:36:28,560
appears in the logs

2414
01:36:28,560 --> 01:36:30,400
okay so

2415
01:36:30,400 --> 01:36:32,320
it's just logging and knowing that it

2416
01:36:32,320 --> 01:36:34,320
happens but

2417
01:36:34,320 --> 01:36:36,239
that's it right then or

2418
01:36:36,239 --> 01:36:38,800
the first step towards solving a problem

2419
01:36:38,800 --> 01:36:39,760
is

2420
01:36:39,760 --> 01:36:41,520
knowing there was a problem

2421
01:36:41,520 --> 01:36:44,400
okay thank you

2422
01:36:44,880 --> 01:36:48,239
thank you and next in the queue we have

2423
01:36:48,239 --> 01:36:51,239
russ

2424
01:36:55,760 --> 01:36:59,199
hello russell um i have uh real problems

2425
01:36:59,199 --> 01:37:01,839
with this work

2426
01:37:02,000 --> 01:37:06,480
my concern is that the rpki unlike the

2427
01:37:06,480 --> 01:37:07,920
web pki

2428
01:37:07,920 --> 01:37:11,520
was constructed so that

2429
01:37:11,520 --> 01:37:12,719
the

2430
01:37:12,719 --> 01:37:16,480
ca is authoritative for the resources

2431
01:37:16,480 --> 01:37:19,280
that it issues

2432
01:37:19,520 --> 01:37:22,480
the web pki on the other hand all of the

2433
01:37:22,480 --> 01:37:25,280
roots are able to do

2434
01:37:25,280 --> 01:37:27,920
anything with any aspect of the name

2435
01:37:27,920 --> 01:37:29,679
space

2436
01:37:29,679 --> 01:37:32,800
so when we started uh

2437
01:37:32,800 --> 01:37:35,679
working on this the ieb suggested that

2438
01:37:35,679 --> 01:37:39,280
ayanna run a slash zero and the rir's be

2439
01:37:39,280 --> 01:37:40,639
subordinate

2440
01:37:40,639 --> 01:37:42,639
and then to accommodate

2441
01:37:42,639 --> 01:37:43,600
uh

2442
01:37:43,600 --> 01:37:46,639
easier transfers among the rirs each of

2443
01:37:46,639 --> 01:37:49,360
them became equal

2444
01:37:49,360 --> 01:37:52,239
roots for slash zero

2445
01:37:52,239 --> 01:37:54,960
i argue that you don't need this if you

2446
01:37:54,960 --> 01:37:58,239
go back to the first model

2447
01:38:01,119 --> 01:38:03,040
thank you for your comment russ

2448
01:38:03,040 --> 01:38:04,080
i

2449
01:38:04,080 --> 01:38:06,560
think i should clarify and probably

2450
01:38:06,560 --> 01:38:08,639
repeat this at many subsequent

2451
01:38:08,639 --> 01:38:10,000
presentations

2452
01:38:10,000 --> 01:38:12,719
in the rpk ecosystem there are

2453
01:38:12,719 --> 01:38:14,840
22 000

2454
01:38:14,840 --> 01:38:18,639
cas the ones to which i think

2455
01:38:18,639 --> 01:38:21,280
certificate transparency applies

2456
01:38:21,280 --> 01:38:24,639
are the rers that have the 0

2457
01:38:24,639 --> 01:38:25,920
certificates

2458
01:38:25,920 --> 01:38:28,480
and their intermediate operational

2459
01:38:28,480 --> 01:38:29,679
certificates

2460
01:38:29,679 --> 01:38:32,080
and the moment the trust arc

2461
01:38:32,080 --> 01:38:34,960
bounces towards say an lar who indeed

2462
01:38:34,960 --> 01:38:37,520
are heavily constrained by rfc

2463
01:38:37,520 --> 01:38:40,480
3779 extensions

2464
01:38:40,480 --> 01:38:41,199
i

2465
01:38:41,199 --> 01:38:42,800
they can only shoot themselves in the

2466
01:38:42,800 --> 01:38:45,840
foot so i want to know which

2467
01:38:45,840 --> 01:38:48,560
other lars are are

2468
01:38:48,560 --> 01:38:50,800
able to sign with my resources but

2469
01:38:50,800 --> 01:38:52,719
beyond that

2470
01:38:52,719 --> 01:38:55,199
i'm less interested so i think in

2471
01:38:55,199 --> 01:38:58,880
practice in the rpk ecosystem ct will

2472
01:38:58,880 --> 01:39:00,320
apply to

2473
01:39:00,320 --> 01:39:01,199
maybe

2474
01:39:01,199 --> 01:39:03,920
15 25 cas

2475
01:39:03,920 --> 01:39:06,480
uh but the cas that i myself as as

2476
01:39:06,480 --> 01:39:09,840
resource solder run uh are are not of

2477
01:39:09,840 --> 01:39:11,760
interest to the cte project

2478
01:39:11,760 --> 01:39:12,880
and we're really going to keep the

2479
01:39:12,880 --> 01:39:14,800
questions and answers a lot shorter it's

2480
01:39:14,800 --> 01:39:17,679
been way more than 15 and we're

2481
01:39:17,679 --> 01:39:19,920
okay

2482
01:39:20,159 --> 01:39:21,199
well

2483
01:39:21,199 --> 01:39:22,880
two

2484
01:39:22,880 --> 01:39:24,840
two views one

2485
01:39:24,840 --> 01:39:29,119
is following rus

2486
01:39:29,119 --> 01:39:32,880
some of the basics of web pki and vrpki

2487
01:39:32,880 --> 01:39:34,960
are really different

2488
01:39:34,960 --> 01:39:38,560
for some parts of your arguments

2489
01:39:38,560 --> 01:39:42,000
i had the bells ringing for example

2490
01:39:42,000 --> 01:39:45,119
that you should keep in mind

2491
01:39:45,119 --> 01:39:46,400
that

2492
01:39:46,400 --> 01:39:49,440
ca and identity are not really the same

2493
01:39:49,440 --> 01:39:51,678
thing

2494
01:39:52,840 --> 01:39:55,920
um so kind of

2495
01:39:55,920 --> 01:39:57,760
harking back

2496
01:39:57,760 --> 01:39:59,440
to

2497
01:39:59,440 --> 01:40:03,199
successful treating web pki

2498
01:40:03,199 --> 01:40:06,638
is not necessarily

2499
01:40:06,880 --> 01:40:10,080
the most valid thing to do

2500
01:40:10,080 --> 01:40:14,239
uh nevertheless the activity of

2501
01:40:14,239 --> 01:40:16,880
establishing tracking mechanisms and

2502
01:40:16,880 --> 01:40:20,159
monitoring for what is in the p in the

2503
01:40:20,159 --> 01:40:22,480
uh in the rpki

2504
01:40:22,480 --> 01:40:24,800
and figuring out

2505
01:40:24,800 --> 01:40:27,679
what info what

2506
01:40:27,679 --> 01:40:31,840
information support should be generated

2507
01:40:31,840 --> 01:40:33,199
like

2508
01:40:33,199 --> 01:40:35,840
your question i am the holder of

2509
01:40:35,840 --> 01:40:37,760
resources

2510
01:40:37,760 --> 01:40:40,000
and

2511
01:40:40,000 --> 01:40:42,239
for a long time for a long time i have

2512
01:40:42,239 --> 01:40:44,480
been thinking we need to establish some

2513
01:40:44,480 --> 01:40:47,199
monitoring and things like that

2514
01:40:47,199 --> 01:40:48,480
including

2515
01:40:48,480 --> 01:40:51,199
uh making it easy

2516
01:40:51,199 --> 01:40:54,080
for resource holders to get an

2517
01:40:54,080 --> 01:40:56,000
independent

2518
01:40:56,000 --> 01:40:58,320
signaling of what the

2519
01:40:58,320 --> 01:41:02,320
global view of their resources is

2520
01:41:02,320 --> 01:41:05,520
so for many of the details i'm

2521
01:41:05,520 --> 01:41:09,280
i think the web pki is track

2522
01:41:09,280 --> 01:41:13,199
is directing you to bad tracks

2523
01:41:13,199 --> 01:41:17,280
the idea of we want to monitor this

2524
01:41:17,280 --> 01:41:18,639
um

2525
01:41:18,639 --> 01:41:21,199
and figure out a lot of details what is

2526
01:41:21,199 --> 01:41:24,320
necessary and useful there that is valid

2527
01:41:24,320 --> 01:41:27,840
word uh work and uh well okay that's

2528
01:41:27,840 --> 01:41:31,199
that's that so i don't want to dismiss

2529
01:41:31,199 --> 01:41:33,199
this effort

2530
01:41:33,199 --> 01:41:34,800
overall

2531
01:41:34,800 --> 01:41:35,679
but

2532
01:41:35,679 --> 01:41:37,440
i don't think

2533
01:41:37,440 --> 01:41:39,440
it is headed in the right direction

2534
01:41:39,440 --> 01:41:42,759
right now

2535
01:41:50,400 --> 01:41:52,080
um couple of things i'm not sure either

2536
01:41:52,080 --> 01:41:53,760
of them are really questions

2537
01:41:53,760 --> 01:41:55,040
um

2538
01:41:55,040 --> 01:41:57,440
so the first is i think that

2539
01:41:57,440 --> 01:41:59,360
i think there's a there's we need to do

2540
01:41:59,360 --> 01:42:01,119
better as a

2541
01:42:01,119 --> 01:42:03,360
kind of as a group about distinguishing

2542
01:42:03,360 --> 01:42:04,960
when we're talking about

2543
01:42:04,960 --> 01:42:06,960
publication events versus signing events

2544
01:42:06,960 --> 01:42:08,239
because often that you know obviously

2545
01:42:08,239 --> 01:42:10,080
they happen very close together in time

2546
01:42:10,080 --> 01:42:12,639
and usually by related parties

2547
01:42:12,639 --> 01:42:14,560
this is about for me about seeing

2548
01:42:14,560 --> 01:42:17,280
signing events which are not visible

2549
01:42:17,280 --> 01:42:19,199
through any

2550
01:42:19,199 --> 01:42:20,960
theoretical version of the publication

2551
01:42:20,960 --> 01:42:22,320
system not just the one we have now i

2552
01:42:22,320 --> 01:42:23,760
think we probably want something like

2553
01:42:23,760 --> 01:42:25,360
this for the publication system as well

2554
01:42:25,360 --> 01:42:28,320
but there's separate problems um and i

2555
01:42:28,320 --> 01:42:29,760
think teeth for example the problem that

2556
01:42:29,760 --> 01:42:31,520
you were pointing to that that's an

2557
01:42:31,520 --> 01:42:32,960
important thing that i want to be able

2558
01:42:32,960 --> 01:42:35,119
to see but that's not a signing event

2559
01:42:35,119 --> 01:42:36,080
that i'm looking for that's a

2560
01:42:36,080 --> 01:42:38,320
publication event that i'm looking for

2561
01:42:38,320 --> 01:42:41,320
um

2562
01:42:42,639 --> 01:42:43,760
the second thing that i think it's

2563
01:42:43,760 --> 01:42:46,480
important to point out is i i i have a

2564
01:42:46,480 --> 01:42:48,239
very good working relationship with my

2565
01:42:48,239 --> 01:42:50,320
local rir i know the individuals

2566
01:42:50,320 --> 01:42:52,239
involved i trust that they are doing

2567
01:42:52,239 --> 01:42:53,600
things with the right intents and

2568
01:42:53,600 --> 01:42:55,119
they're not trying to you know act with

2569
01:42:55,119 --> 01:42:56,800
any malfeasance but that's not

2570
01:42:56,800 --> 01:42:59,440
necessarily where the chain of the chain

2571
01:42:59,440 --> 01:43:02,239
of trust needs to stop i also need to be

2572
01:43:02,239 --> 01:43:05,119
able to demonstrate to some third party

2573
01:43:05,119 --> 01:43:07,840
when the rpki eventually causes some

2574
01:43:07,840 --> 01:43:09,360
substantial outage for one of my

2575
01:43:09,360 --> 01:43:11,520
customers when it will you know it's

2576
01:43:11,520 --> 01:43:12,960
just a matter of how and when and what

2577
01:43:12,960 --> 01:43:14,639
that looks like i need to be able to

2578
01:43:14,639 --> 01:43:16,400
stand up in front of those people and

2579
01:43:16,400 --> 01:43:19,440
demonstrate why it was reasonable for me

2580
01:43:19,440 --> 01:43:21,840
to trust this system in the first place

2581
01:43:21,840 --> 01:43:24,639
and having things like some version of

2582
01:43:24,639 --> 01:43:25,679
ct

2583
01:43:25,679 --> 01:43:29,119
having the ability to demonstrate that

2584
01:43:29,119 --> 01:43:31,440
the publication system was sound all of

2585
01:43:31,440 --> 01:43:33,440
that sort of thing allows me to make

2586
01:43:33,440 --> 01:43:35,440
that argument better and allows me to

2587
01:43:35,440 --> 01:43:38,719
use this in a more robust fashion

2588
01:43:38,719 --> 01:43:40,880
thanks

2589
01:43:40,880 --> 01:43:41,679
um

2590
01:43:41,679 --> 01:43:43,840
so email me if you're interested in this

2591
01:43:43,840 --> 01:43:45,600
type of work and

2592
01:43:45,600 --> 01:43:47,600
this is super super early stages no

2593
01:43:47,600 --> 01:43:49,760
direction has yet been set

2594
01:43:49,760 --> 01:43:51,119
other than

2595
01:43:51,119 --> 01:43:52,800
i want more transparency in this

2596
01:43:52,800 --> 01:43:54,480
ecosystem

2597
01:43:54,480 --> 01:43:57,280
thank you excellent thank you very much

2598
01:43:57,280 --> 01:44:01,600
and now we have our last presentation

2599
01:44:01,600 --> 01:44:03,280
and

2600
01:44:03,280 --> 01:44:04,880
yes

2601
01:44:04,880 --> 01:44:07,520
thank you so

2602
01:44:07,520 --> 01:44:07,890
much

2603
01:44:07,890 --> 01:44:09,119
[Music]

2604
01:44:09,119 --> 01:44:11,119
yeah i will i think we are a bit short

2605
01:44:11,119 --> 01:44:13,360
on time so i will try to keep it short

2606
01:44:13,360 --> 01:44:14,800
um

2607
01:44:14,800 --> 01:44:16,880
so my name is kung i want to talk a bit

2608
01:44:16,880 --> 01:44:20,320
about the rpki of the beaten happy path

2609
01:44:20,320 --> 01:44:22,400
we know how the rpki works when

2610
01:44:22,400 --> 01:44:23,760
everything works because it currently

2611
01:44:23,760 --> 01:44:24,560
does

2612
01:44:24,560 --> 01:44:26,560
however there are a couple of edge cases

2613
01:44:26,560 --> 01:44:28,560
that can currently occur with the

2614
01:44:28,560 --> 01:44:30,560
current standards which would probably

2615
01:44:30,560 --> 01:44:32,719
be

2616
01:44:32,719 --> 01:44:34,960
caused some issues and i want to discuss

2617
01:44:34,960 --> 01:44:38,320
five of them uh and basically ask your

2618
01:44:38,320 --> 01:44:40,239
input about what

2619
01:44:40,239 --> 01:44:42,159
you think should happen in these cases

2620
01:44:42,159 --> 01:44:44,480
uh next slide please

2621
01:44:44,480 --> 01:44:47,920
uh the first one is is partial rpki data

2622
01:44:47,920 --> 01:44:50,480
the id is now this is a fictional

2623
01:44:50,480 --> 01:44:53,199
example however you can find

2624
01:44:53,199 --> 01:44:55,600
similar examples in real life

2625
01:44:55,600 --> 01:44:56,880
uh

2626
01:44:56,880 --> 01:44:59,920
we have a sca0 at the top and it has

2627
01:44:59,920 --> 01:45:02,400
three children ca1 which has a roller

2628
01:45:02,400 --> 01:45:04,480
for 1.106

2629
01:45:04,480 --> 01:45:08,719
16. we have a ca2 for that has that for

2630
01:45:08,719 --> 01:45:10,239
the slash 8

2631
01:45:10,239 --> 01:45:13,760
another one for this 16 and

2632
01:45:13,760 --> 01:45:17,760
cr3 for a slash

2633
01:45:17,760 --> 01:45:23,440
oh nca4 no ca3 4 24.

2634
01:45:24,000 --> 01:45:26,080
the problem is that if you

2635
01:45:26,080 --> 01:45:28,719
send for some reason ca3 for example

2636
01:45:28,719 --> 01:45:30,800
becomes unavailable then you have a

2637
01:45:30,800 --> 01:45:32,000
rower

2638
01:45:32,000 --> 01:45:34,480
for the slash 8 and you don't have it

2639
01:45:34,480 --> 01:45:36,560
for the slash 16 that is a subset of the

2640
01:45:36,560 --> 01:45:38,239
slash slash 8.

2641
01:45:38,239 --> 01:45:40,800
and now you get

2642
01:45:40,800 --> 01:45:43,679
a valid that becomes invalid which is uh

2643
01:45:43,679 --> 01:45:46,400
contradictory to the fill open situation

2644
01:45:46,400 --> 01:45:50,320
that we normally have with the rpg

2645
01:45:51,199 --> 01:45:53,440
and the question of course then is well

2646
01:45:53,440 --> 01:45:55,440
what do you do do you then include the

2647
01:45:55,440 --> 01:45:58,719
data from co2 do you

2648
01:45:58,719 --> 01:45:59,600
uh

2649
01:45:59,600 --> 01:46:01,199
use the cached version if you have it

2650
01:46:01,199 --> 01:46:03,920
from ca3 do you uh

2651
01:46:03,920 --> 01:46:05,920
and what do you do with date from ca4 if

2652
01:46:05,920 --> 01:46:07,920
that's the child of ca3

2653
01:46:07,920 --> 01:46:09,600
or do you just say okay if you're doing

2654
01:46:09,600 --> 01:46:12,239
this then you're so stupid then this is

2655
01:46:12,239 --> 01:46:14,800
your own fault if anything bad happens

2656
01:46:14,800 --> 01:46:17,600
and then the question that of course uh

2657
01:46:17,600 --> 01:46:20,800
also uh you get is um

2658
01:46:20,800 --> 01:46:22,320
when do you actually then when should

2659
01:46:22,320 --> 01:46:24,239
the relying party actually report ready

2660
01:46:24,239 --> 01:46:27,760
to rtr that's it has tried to get all

2661
01:46:27,760 --> 01:46:30,239
the data and uh

2662
01:46:30,239 --> 01:46:32,480
perhaps failed for safer

2663
01:46:32,480 --> 01:46:35,199
next slide please

2664
01:46:35,280 --> 01:46:36,159
um

2665
01:46:36,159 --> 01:46:38,840
now a couple of ways that you could have

2666
01:46:38,840 --> 01:46:42,400
uh situations where you get don't get

2667
01:46:42,400 --> 01:46:44,080
all the data

2668
01:46:44,080 --> 01:46:45,119
uh

2669
01:46:45,119 --> 01:46:47,360
look i can delegate my resources and i

2670
01:46:47,360 --> 01:46:50,639
can do that as however i want so if i am

2671
01:46:50,639 --> 01:46:52,159
e in this case

2672
01:46:52,159 --> 01:46:54,400
i can create nine children

2673
01:46:54,400 --> 01:46:56,080
that are all different publication

2674
01:46:56,080 --> 01:46:58,159
points and different locations

2675
01:46:58,159 --> 01:46:59,600
and they can also delegate their

2676
01:46:59,600 --> 01:47:01,600
resources however they like so like they

2677
01:47:01,600 --> 01:47:03,520
can delegate it to nine children again

2678
01:47:03,520 --> 01:47:05,520
and we can do this for eight layers

2679
01:47:05,520 --> 01:47:07,760
uh we have some limits to the depth of

2680
01:47:07,760 --> 01:47:09,679
the chain this is uh based mainly

2681
01:47:09,679 --> 01:47:11,920
implementations uh this is not but not

2682
01:47:11,920 --> 01:47:14,159
in the specification however if just

2683
01:47:14,159 --> 01:47:15,920
already with the limitations that we

2684
01:47:15,920 --> 01:47:18,560
currently have i can create in the end

2685
01:47:18,560 --> 01:47:20,840
five million

2686
01:47:20,840 --> 01:47:22,480
uh

2687
01:47:22,480 --> 01:47:25,040
publication points just by creating

2688
01:47:25,040 --> 01:47:26,719
something that is nine wide and eight

2689
01:47:26,719 --> 01:47:27,600
deep

2690
01:47:27,600 --> 01:47:29,360
and and

2691
01:47:29,360 --> 01:47:31,280
the question that i have then is is what

2692
01:47:31,280 --> 01:47:33,840
should erp software and operator do in

2693
01:47:33,840 --> 01:47:35,760
this case and

2694
01:47:35,760 --> 01:47:37,600
should the ca prevent that from

2695
01:47:37,600 --> 01:47:39,520
happening or

2696
01:47:39,520 --> 01:47:42,000
uh what should the ca actually do and

2697
01:47:42,000 --> 01:47:44,159
and also if you think that you notice

2698
01:47:44,159 --> 01:47:45,360
something like this but it's actually

2699
01:47:45,360 --> 01:47:47,280
just an honest structure that is

2700
01:47:47,280 --> 01:47:48,880
looks strange

2701
01:47:48,880 --> 01:47:51,679
how do we then deal with false positives

2702
01:47:51,679 --> 01:47:54,400
next slide please

2703
01:47:54,800 --> 01:47:56,480
um

2704
01:47:56,480 --> 01:47:57,920
there's also something about file

2705
01:47:57,920 --> 01:47:59,199
systems i mean

2706
01:47:59,199 --> 01:48:01,199
this is all runs on machines that are

2707
01:48:01,199 --> 01:48:03,440
actually that that just have actual

2708
01:48:03,440 --> 01:48:05,040
disks

2709
01:48:05,040 --> 01:48:08,239
uh especially with rsync we first get

2710
01:48:08,239 --> 01:48:09,840
the data and then we do something with

2711
01:48:09,840 --> 01:48:12,719
the data now we have some ways to

2712
01:48:12,719 --> 01:48:14,000
exclude

2713
01:48:14,000 --> 01:48:16,000
files we don't like and those are being

2714
01:48:16,000 --> 01:48:18,000
used but we can create many folders and

2715
01:48:18,000 --> 01:48:19,760
the thing is that we can

2716
01:48:19,760 --> 01:48:22,000
even do this uh

2717
01:48:22,000 --> 01:48:22,800
well

2718
01:48:22,800 --> 01:48:24,480
not just the publication points can do

2719
01:48:24,480 --> 01:48:27,920
this but any uh hop between us and the

2720
01:48:27,920 --> 01:48:29,600
publication point can

2721
01:48:29,600 --> 01:48:31,600
for example modify the reply that we get

2722
01:48:31,600 --> 01:48:33,360
from rsync to

2723
01:48:33,360 --> 01:48:35,199
add a lot of folders in between them i

2724
01:48:35,199 --> 01:48:37,040
i've shown an example structure that you

2725
01:48:37,040 --> 01:48:38,480
could use and that

2726
01:48:38,480 --> 01:48:40,000
means that

2727
01:48:40,000 --> 01:48:42,159
if you were to apply that to the right

2728
01:48:42,159 --> 01:48:44,560
ncc publication point uh

2729
01:48:44,560 --> 01:48:46,880
from two months ago then you would get

2730
01:48:46,880 --> 01:48:48,800
about 18 billion folders which is

2731
01:48:48,800 --> 01:48:50,880
probably more folders than your file

2732
01:48:50,880 --> 01:48:53,199
system is able to uh manage

2733
01:48:53,199 --> 01:48:55,040
and in the current implementations what

2734
01:48:55,040 --> 01:48:57,119
we see is that uh

2735
01:48:57,119 --> 01:48:59,280
there is no way to restrict this in any

2736
01:48:59,280 --> 01:49:00,800
way shape or form

2737
01:49:00,800 --> 01:49:02,960
which then means that your file system

2738
01:49:02,960 --> 01:49:05,760
says okay i cannot handle this anymore

2739
01:49:05,760 --> 01:49:06,800
and

2740
01:49:06,800 --> 01:49:07,760
uh

2741
01:49:07,760 --> 01:49:09,679
whatever happens is then left to what

2742
01:49:09,679 --> 01:49:11,679
your rp implementation does and the

2743
01:49:11,679 --> 01:49:13,040
operating system

2744
01:49:13,040 --> 01:49:15,440
but then really doesn't result in you

2745
01:49:15,440 --> 01:49:19,599
having actually uh data that you can use

2746
01:49:19,599 --> 01:49:22,239
next slide please

2747
01:49:22,239 --> 01:49:25,360
i and this is also very simple but we we

2748
01:49:25,360 --> 01:49:27,440
have robots and we can create rawa so i

2749
01:49:27,440 --> 01:49:30,880
i was just calculating okay how many

2750
01:49:30,880 --> 01:49:33,679
vrps can i create from my rows so

2751
01:49:33,679 --> 01:49:34,639
i mean

2752
01:49:34,639 --> 01:49:36,800
let's say that i have a 48 which is not

2753
01:49:36,800 --> 01:49:39,119
that's uh

2754
01:49:39,119 --> 01:49:41,360
out of the realm of possibilities then i

2755
01:49:41,360 --> 01:49:44,719
can create a 2 to the power 81 give or

2756
01:49:44,719 --> 01:49:47,199
take prefix from that because i can

2757
01:49:47,199 --> 01:49:49,920
split everything up into

2758
01:49:49,920 --> 01:49:52,159
everything which is not useful in any

2759
01:49:52,159 --> 01:49:54,960
way but i can and then

2760
01:49:54,960 --> 01:49:57,520
i can uh allow that for 2 to the power

2761
01:49:57,520 --> 01:50:00,320
423 asms which means that you get a very

2762
01:50:00,320 --> 01:50:01,920
large number of

2763
01:50:01,920 --> 01:50:04,159
possible vrps that your router is

2764
01:50:04,159 --> 01:50:06,560
probably not going to handle

2765
01:50:06,560 --> 01:50:09,440
however rp's accept this in principle

2766
01:50:09,440 --> 01:50:12,480
rtr accepts this in principle

2767
01:50:12,480 --> 01:50:13,679
so

2768
01:50:13,679 --> 01:50:16,320
at which stage should you actually go

2769
01:50:16,320 --> 01:50:19,040
okay probably not don't need all this

2770
01:50:19,040 --> 01:50:20,800
data we should probably leave something

2771
01:50:20,800 --> 01:50:22,880
out should router do that or do should

2772
01:50:22,880 --> 01:50:25,040
rt do that or your lying party should do

2773
01:50:25,040 --> 01:50:28,000
that or the publication point or the ca

2774
01:50:28,000 --> 01:50:30,719
next slide please

2775
01:50:30,800 --> 01:50:32,960
so and then

2776
01:50:32,960 --> 01:50:34,960
the last thing is if something like this

2777
01:50:34,960 --> 01:50:38,679
happens um

2778
01:50:38,880 --> 01:50:39,760
and i

2779
01:50:39,760 --> 01:50:41,679
just do this because i like they're very

2780
01:50:41,679 --> 01:50:43,760
very much this like you

2781
01:50:43,760 --> 01:50:46,480
then i can do this and only target you

2782
01:50:46,480 --> 01:50:48,480
okay if we do then get significant

2783
01:50:48,480 --> 01:50:50,000
transparency this becomes a lot more

2784
01:50:50,000 --> 01:50:52,080
difficult for everything that requires

2785
01:50:52,080 --> 01:50:53,520
science objects

2786
01:50:53,520 --> 01:50:55,280
but the rsync one that can also be done

2787
01:50:55,280 --> 01:50:57,280
as a man in the middle so and you would

2788
01:50:57,280 --> 01:50:59,599
stay out of the significant transparency

2789
01:50:59,599 --> 01:51:00,560
part

2790
01:51:00,560 --> 01:51:01,520
so

2791
01:51:01,520 --> 01:51:03,119
my question is okay how can i

2792
01:51:03,119 --> 01:51:04,960
effectively stop this

2793
01:51:04,960 --> 01:51:07,040
and if i cannot stop this how can i

2794
01:51:07,040 --> 01:51:08,800
report it to someone else that can stop

2795
01:51:08,800 --> 01:51:09,440
it

2796
01:51:09,440 --> 01:51:11,520
and how can i prove to this person that

2797
01:51:11,520 --> 01:51:13,520
i or this organization that actually

2798
01:51:13,520 --> 01:51:15,440
this is happening and i'm not just

2799
01:51:15,440 --> 01:51:18,000
making this up because i want to get

2800
01:51:18,000 --> 01:51:20,080
someone else taken down that is actually

2801
01:51:20,080 --> 01:51:23,199
the one that that that that i actually

2802
01:51:23,199 --> 01:51:25,119
dislike i mean there are malicious

2803
01:51:25,119 --> 01:51:26,639
parties out in the world i would like

2804
01:51:26,639 --> 01:51:28,880
rather like that there weren't but they

2805
01:51:28,880 --> 01:51:31,360
just are

2806
01:51:32,960 --> 01:51:33,760
and

2807
01:51:33,760 --> 01:51:35,679
so the question for that is uh how do

2808
01:51:35,679 --> 01:51:38,000
when can i prove who the perpetrator was

2809
01:51:38,000 --> 01:51:40,000
and is it even possible

2810
01:51:40,000 --> 01:51:42,560
and and how can a ca know that what they

2811
01:51:42,560 --> 01:51:44,880
are doing actually is viewed by me as

2812
01:51:44,880 --> 01:51:47,520
something that is malicious

2813
01:51:47,520 --> 01:51:49,679
next slide please

2814
01:51:49,679 --> 01:51:51,679
so those are the five points that i

2815
01:51:51,679 --> 01:51:55,119
wanted to discuss and uh my

2816
01:51:55,119 --> 01:51:57,679
question to you is um

2817
01:51:57,679 --> 01:51:59,440
should these problems or if there are

2818
01:51:59,440 --> 01:52:03,199
problems be dealt with and if so how um

2819
01:52:03,199 --> 01:52:05,760
who should solve what

2820
01:52:05,760 --> 01:52:07,840
and if they are going to be solved

2821
01:52:07,840 --> 01:52:09,280
should that be done in a proactive

2822
01:52:09,280 --> 01:52:11,599
manner or in a reactive manner

2823
01:52:11,599 --> 01:52:13,280
so i would like to open the floor and

2824
01:52:13,280 --> 01:52:16,239
order the microphones

2825
01:52:16,239 --> 01:52:20,400
do your comments thank you jobs first

2826
01:52:22,480 --> 01:52:25,920
job schneiders fastly open bsd

2827
01:52:25,920 --> 01:52:27,760
um

2828
01:52:27,760 --> 01:52:30,480
i i don't want to go as a slight first

2829
01:52:30,480 --> 01:52:32,000
slide to to

2830
01:52:32,000 --> 01:52:34,400
offer potential solutions or answers but

2831
01:52:34,400 --> 01:52:36,880
for instance

2832
01:52:36,880 --> 01:52:39,119
i think that publish in parent really is

2833
01:52:39,119 --> 01:52:41,199
a technique that that helps the whole

2834
01:52:41,199 --> 01:52:42,719
ecosystem

2835
01:52:42,719 --> 01:52:45,199
because one of the fears is that a

2836
01:52:45,199 --> 01:52:47,760
sibling ca of yours can do something

2837
01:52:47,760 --> 01:52:50,400
that somehow knocks you out

2838
01:52:50,400 --> 01:52:52,560
and for instance in the partial rpi data

2839
01:52:52,560 --> 01:52:54,159
example

2840
01:52:54,159 --> 01:52:56,560
you you listed that if ca3 has an issue

2841
01:52:56,560 --> 01:52:58,639
ca4 disappears

2842
01:52:58,639 --> 01:53:01,119
a lot of those scenarios are alleviated

2843
01:53:01,119 --> 01:53:03,360
if published in parent is used

2844
01:53:03,360 --> 01:53:06,000
and and i think for this reason and

2845
01:53:06,000 --> 01:53:07,360
other reasons

2846
01:53:07,360 --> 01:53:09,679
we as ecosystems should really strive to

2847
01:53:09,679 --> 01:53:11,679
to get rid of the well not get rid of

2848
01:53:11,679 --> 01:53:12,960
the

2849
01:53:12,960 --> 01:53:16,400
delegated aspect but encourage everybody

2850
01:53:16,400 --> 01:53:18,560
that the default setting is publishing

2851
01:53:18,560 --> 01:53:21,599
your parent because it makes life easier

2852
01:53:21,599 --> 01:53:22,719
and

2853
01:53:22,719 --> 01:53:24,560
if you publish in the parents the

2854
01:53:24,560 --> 01:53:26,480
parents can

2855
01:53:26,480 --> 01:53:29,520
out of bands so on on the layer uh where

2856
01:53:29,520 --> 01:53:31,280
where the child is is

2857
01:53:31,280 --> 01:53:33,440
sending it to the parents api

2858
01:53:33,440 --> 01:53:35,520
uh apply some restrictions

2859
01:53:35,520 --> 01:53:37,119
like with email

2860
01:53:37,119 --> 01:53:39,119
in the smtp protocol it's not encoded

2861
01:53:39,119 --> 01:53:41,599
that i can only send you

2862
01:53:41,599 --> 01:53:44,080
up to 10 megabytes but if i try to send

2863
01:53:44,080 --> 01:53:46,080
you a 10 megabyte email your email

2864
01:53:46,080 --> 01:53:49,040
server will say oh it's too large i i'm

2865
01:53:49,040 --> 01:53:51,280
not eating this another metal surfer

2866
01:53:51,280 --> 01:53:53,440
might happily accept it and this is

2867
01:53:53,440 --> 01:53:55,360
local policy

2868
01:53:55,360 --> 01:53:57,520
so each parent repository can apply

2869
01:53:57,520 --> 01:53:59,760
local policy as is appropriate for for

2870
01:53:59,760 --> 01:54:02,159
that context that environment

2871
01:54:02,159 --> 01:54:04,239
without signaling such limits through

2872
01:54:04,239 --> 01:54:05,440
the rpki

2873
01:54:05,440 --> 01:54:07,040
so the parents

2874
01:54:07,040 --> 01:54:08,480
i think can

2875
01:54:08,480 --> 01:54:11,599
not only help rp's

2876
01:54:11,599 --> 01:54:12,880
and and help

2877
01:54:12,880 --> 01:54:15,520
help against partial rpi data

2878
01:54:15,520 --> 01:54:17,119
but also

2879
01:54:17,119 --> 01:54:19,199
keep their children in check in a way

2880
01:54:19,199 --> 01:54:20,239
that is

2881
01:54:20,239 --> 01:54:23,599
lightweight dynamically adaptable uh and

2882
01:54:23,599 --> 01:54:25,520
and does not encumber the the broader

2883
01:54:25,520 --> 01:54:27,280
ecosystem

2884
01:54:27,280 --> 01:54:30,560
um but i can monologue here for hours uh

2885
01:54:30,560 --> 01:54:31,360
i

2886
01:54:31,360 --> 01:54:34,239
yield the mic to other people

2887
01:54:34,239 --> 01:54:36,239
yes thank you yup uh i think you make a

2888
01:54:36,239 --> 01:54:38,480
good point however that that in the

2889
01:54:38,480 --> 01:54:40,239
implies that you get a first class

2890
01:54:40,239 --> 01:54:42,719
citizen namely or the first class uh

2891
01:54:42,719 --> 01:54:44,880
publishing parent and a second class

2892
01:54:44,880 --> 01:54:46,000
delegate

2893
01:54:46,000 --> 01:54:49,040
and i'm not i it is a solution but i

2894
01:54:49,040 --> 01:54:50,560
think that is that is a consequence of

2895
01:54:50,560 --> 01:54:52,400
that uh solution

2896
01:54:52,400 --> 01:54:53,520
that

2897
01:54:53,520 --> 01:54:55,040
needs to be at least we people need to

2898
01:54:55,040 --> 01:54:57,519
be aware of

2899
01:54:58,239 --> 01:55:02,080
right yeah um tim russell's

2900
01:55:02,080 --> 01:55:05,040
um my name was on the first

2901
01:55:05,040 --> 01:55:06,560
page of the slide act

2902
01:55:06,560 --> 01:55:07,599
um

2903
01:55:07,599 --> 01:55:09,679
one thing i wanted to say first is i

2904
01:55:09,679 --> 01:55:12,159
think this is an example of a number of

2905
01:55:12,159 --> 01:55:13,760
issues that may occur and a general

2906
01:55:13,760 --> 01:55:15,119
question about how we should deal with

2907
01:55:15,119 --> 01:55:16,480
them

2908
01:55:16,480 --> 01:55:18,639
secondly to be a bit more specific uh so

2909
01:55:18,639 --> 01:55:21,280
i my feeling is that there are

2910
01:55:21,280 --> 01:55:23,119
things to be discussed

2911
01:55:23,119 --> 01:55:25,280
with regards to these suggestions that

2912
01:55:25,280 --> 01:55:26,800
yop just made

2913
01:55:26,800 --> 01:55:28,719
i think there may be work there but the

2914
01:55:28,719 --> 01:55:31,199
current reality is that parent case can

2915
01:55:31,199 --> 01:55:33,679
only be reactive they can stop a

2916
01:55:33,679 --> 01:55:35,679
delegated ca

2917
01:55:35,679 --> 01:55:38,320
when problems occur

2918
01:55:38,320 --> 01:55:40,320
but i think we should look into more

2919
01:55:40,320 --> 01:55:41,840
proactive measures

2920
01:55:41,840 --> 01:55:43,520
and if we want to do things with

2921
01:55:43,520 --> 01:55:44,960
repositories

2922
01:55:44,960 --> 01:55:46,560
that implies that we need to look at the

2923
01:55:46,560 --> 01:55:48,719
publication protocol that also implies

2924
01:55:48,719 --> 01:55:51,199
that we may want to think about what

2925
01:55:51,199 --> 01:55:54,159
trusted repositories are and what not so

2926
01:55:54,159 --> 01:55:56,000
i think those are all very interesting

2927
01:55:56,000 --> 01:55:58,000
interesting things to think about but

2928
01:55:58,000 --> 01:56:00,159
currently uh just to repeat i think the

2929
01:56:00,159 --> 01:56:04,480
reality is that we can only be reactive

2930
01:56:06,080 --> 01:56:08,639
thank you tim

2931
01:56:13,760 --> 01:56:14,880
first

2932
01:56:14,880 --> 01:56:16,639
small side note

2933
01:56:16,639 --> 01:56:20,080
thinking about of bad characteristics of

2934
01:56:20,080 --> 01:56:23,440
arsenic just ignore

2935
01:56:23,440 --> 01:56:27,678
arsenic has been identified as

2936
01:56:27,760 --> 01:56:29,599
a dangerous spot

2937
01:56:29,599 --> 01:56:33,199
and is being replaced

2938
01:56:34,560 --> 01:56:35,360
for

2939
01:56:35,360 --> 01:56:37,119
the

2940
01:56:37,119 --> 01:56:41,280
uh voluminetr volumetric

2941
01:56:41,280 --> 01:56:43,199
attacks that you

2942
01:56:43,199 --> 01:56:44,639
were

2943
01:56:44,639 --> 01:56:47,280
uh going um

2944
01:56:47,280 --> 01:56:49,440
well okay i'm

2945
01:56:49,440 --> 01:56:53,599
i'm uh i i think i think they will blow

2946
01:56:53,599 --> 01:56:56,400
up uh much earlier than they hit the

2947
01:56:56,400 --> 01:56:57,920
routers

2948
01:56:57,920 --> 01:56:58,880
um

2949
01:56:58,880 --> 01:57:00,480
but uh

2950
01:57:00,480 --> 01:57:01,920
well okay

2951
01:57:01,920 --> 01:57:02,800
the

2952
01:57:02,800 --> 01:57:05,280
thing that uh

2953
01:57:05,280 --> 01:57:08,400
you really should be checking is your

2954
01:57:08,400 --> 01:57:13,360
first slide where you only told

2955
01:57:13,360 --> 01:57:17,280
the roars that certain cas

2956
01:57:17,280 --> 01:57:20,239
are supposed to publish

2957
01:57:20,239 --> 01:57:22,480
and you did not show

2958
01:57:22,480 --> 01:57:23,840
what

2959
01:57:23,840 --> 01:57:24,960
sets

2960
01:57:24,960 --> 01:57:27,760
the cas were holding

2961
01:57:27,760 --> 01:57:29,679
and the

2962
01:57:29,679 --> 01:57:32,960
the trouble that you constructed

2963
01:57:32,960 --> 01:57:37,119
depended on the unusual idea

2964
01:57:37,119 --> 01:57:38,560
that the

2965
01:57:38,560 --> 01:57:40,320
delegation

2966
01:57:40,320 --> 01:57:42,719
of resources was

2967
01:57:42,719 --> 01:57:45,040
not hierarchic

2968
01:57:45,040 --> 01:57:48,239
and a kind of overlapping between

2969
01:57:48,239 --> 01:57:49,840
siblings

2970
01:57:49,840 --> 01:57:51,040
and

2971
01:57:51,040 --> 01:57:55,679
yes the monitoring and tracking system

2972
01:57:55,679 --> 01:57:58,560
uh quite certainly should show that and

2973
01:57:58,560 --> 01:57:59,760
yes

2974
01:57:59,760 --> 01:58:02,880
uh the policies that this should not be

2975
01:58:02,880 --> 01:58:05,520
hap this should not be done when running

2976
01:58:05,520 --> 01:58:07,360
your registry

2977
01:58:07,360 --> 01:58:08,320
uh

2978
01:58:08,320 --> 01:58:10,880
have not been that obviously and

2979
01:58:10,880 --> 01:58:13,920
formally erased but they are actually i

2980
01:58:13,920 --> 01:58:17,520
think very well understood

2981
01:58:17,679 --> 01:58:19,360
thank you whitaker yes i want to point

2982
01:58:19,360 --> 01:58:21,520
out that this was based on a real life

2983
01:58:21,520 --> 01:58:23,840
example which is currently in the uh

2984
01:58:23,840 --> 01:58:27,360
primarily a p naked and identic

2985
01:58:27,360 --> 01:58:30,000
relationship where this happens uh it's

2986
01:58:30,000 --> 01:58:31,040
not yet

2987
01:58:31,040 --> 01:58:33,360
it doesn't happen a lot but it happens

2988
01:58:33,360 --> 01:58:36,159
in some places so that's why that that

2989
01:58:36,159 --> 01:58:38,880
sounds that sounds like to rehark to

2990
01:58:38,880 --> 01:58:42,480
russ uh russ remarks about having a

2991
01:58:42,480 --> 01:58:44,960
single or multiple routes

2992
01:58:44,960 --> 01:58:49,280
and not having very clear and explicit

2993
01:58:49,280 --> 01:58:53,199
formal policies about how the

2994
01:58:53,199 --> 01:58:56,239
how the resources managed under the

2995
01:58:56,239 --> 01:58:58,000
overlapping routes

2996
01:58:58,000 --> 01:59:00,840
actually are defined and

2997
01:59:00,840 --> 01:59:02,400
strict

2998
01:59:02,400 --> 01:59:04,480
thank you

2999
01:59:04,480 --> 01:59:06,480
um

3000
01:59:06,480 --> 01:59:08,400
i'll try and keep it as short as

3001
01:59:08,400 --> 01:59:10,320
possible i think your

3002
01:59:10,320 --> 01:59:12,320
your your first dog uh

3003
01:59:12,320 --> 01:59:13,840
your first example may well look for

3004
01:59:13,840 --> 01:59:15,119
curd in the wild but i think it's an

3005
01:59:15,119 --> 01:59:17,599
example of you know people will be able

3006
01:59:17,599 --> 01:59:19,440
to shoot themselves in the head using

3007
01:59:19,440 --> 01:59:21,679
whatever technology we give them um and

3008
01:59:21,679 --> 01:59:23,760
that's you know that that example is an

3009
01:59:23,760 --> 01:59:25,360
accident waiting to happen

3010
01:59:25,360 --> 01:59:27,360
i think for the rest of

3011
01:59:27,360 --> 01:59:28,880
i think for the rest of this i think

3012
01:59:28,880 --> 01:59:32,400
that it's an important problem and

3013
01:59:32,400 --> 01:59:35,440
um we do need to

3014
01:59:35,440 --> 01:59:37,679
be clear about what the action we take

3015
01:59:37,679 --> 01:59:40,000
it i'm not i'm not convinced that the

3016
01:59:40,000 --> 01:59:41,679
any of the action that we take against

3017
01:59:41,679 --> 01:59:42,400
the

3018
01:59:42,400 --> 01:59:43,440
um

3019
01:59:43,440 --> 01:59:45,679
the the kind of the potential doses that

3020
01:59:45,679 --> 01:59:46,560
exist

3021
01:59:46,560 --> 01:59:48,960
should be changes to a protocol

3022
01:59:48,960 --> 01:59:49,920
um

3023
01:59:49,920 --> 01:59:52,159
what i do think that we need to do is

3024
01:59:52,159 --> 01:59:53,199
being

3025
01:59:53,199 --> 01:59:55,040
much clearer

3026
01:59:55,040 --> 01:59:58,080
um on in particular how rp's are dealing

3027
01:59:58,080 --> 02:00:00,239
with placing limits on their willingness

3028
02:00:00,239 --> 02:00:01,679
to traverse trees and lots of

3029
02:00:01,679 --> 02:00:03,440
directories and lots of objects and so

3030
02:00:03,440 --> 02:00:05,040
on and so forth and it's not necessarily

3031
02:00:05,040 --> 02:00:06,480
the case that they need to implement the

3032
02:00:06,480 --> 02:00:09,040
same protections or make them as conv

3033
02:00:09,040 --> 02:00:11,360
configurable as one another but i think

3034
02:00:11,360 --> 02:00:13,599
that there would be value both for

3035
02:00:13,599 --> 02:00:14,960
people potentially doing new

3036
02:00:14,960 --> 02:00:16,960
implementations or for information

3037
02:00:16,960 --> 02:00:19,040
sharing between implementations or users

3038
02:00:19,040 --> 02:00:20,960
of those implementations if there was

3039
02:00:20,960 --> 02:00:22,480
some collaboration between rpm

3040
02:00:22,480 --> 02:00:26,080
implementers to document what recognized

3041
02:00:26,080 --> 02:00:28,159
attack vectors there are

3042
02:00:28,159 --> 02:00:29,840
and how they each deal with them and the

3043
02:00:29,840 --> 02:00:31,280
strategies that have been taken in the

3044
02:00:31,280 --> 02:00:32,880
pla the trade-offs you know and i think

3045
02:00:32,880 --> 02:00:34,560
that wouldn't be you know anything more

3046
02:00:34,560 --> 02:00:36,080
than an informational document but i

3047
02:00:36,080 --> 02:00:38,480
think it would be a a useful reference

3048
02:00:38,480 --> 02:00:40,480
point um

3049
02:00:40,480 --> 02:00:42,560
but i don't think that we i don't i

3050
02:00:42,560 --> 02:00:44,800
don't think that having

3051
02:00:44,800 --> 02:00:46,639
constructing a system that is impossible

3052
02:00:46,639 --> 02:00:49,119
to abuse or that is

3053
02:00:49,119 --> 02:00:50,880
is capable of

3054
02:00:50,880 --> 02:00:52,960
you know not breaking under any you know

3055
02:00:52,960 --> 02:00:54,960
absurdly overloaded circumstances

3056
02:00:54,960 --> 02:00:56,239
available to us because

3057
02:00:56,239 --> 02:00:58,400
essentially the limit is your memory if

3058
02:00:58,400 --> 02:00:59,760
you don't have anything

3059
02:00:59,760 --> 02:01:01,760
written in the software um

3060
02:01:01,760 --> 02:01:04,000
yeah

3061
02:01:04,639 --> 02:01:06,840
thank

3062
02:01:06,840 --> 02:01:09,679
you jared motch

3063
02:01:09,679 --> 02:01:10,480
uh

3064
02:01:10,480 --> 02:01:13,599
job q's coolest um

3065
02:01:13,599 --> 02:01:15,920
one of the things i observed uh in

3066
02:01:15,920 --> 02:01:17,599
listening to this is how much it reminds

3067
02:01:17,599 --> 02:01:20,080
me of the early days of usnet news

3068
02:01:20,080 --> 02:01:22,960
which was a case where

3069
02:01:22,960 --> 02:01:25,119
you would have these files and they

3070
02:01:25,119 --> 02:01:27,360
would get transmitted over this protocol

3071
02:01:27,360 --> 02:01:28,560
and you would write a whole bunch of

3072
02:01:28,560 --> 02:01:30,480
directories and files out to the file

3073
02:01:30,480 --> 02:01:31,679
system

3074
02:01:31,679 --> 02:01:34,400
and one of the companies that decided

3075
02:01:34,400 --> 02:01:36,080
they wanted to build commercial software

3076
02:01:36,080 --> 02:01:38,159
to run a usnet new server they actually

3077
02:01:38,159 --> 02:01:39,920
figured out that leveraging the

3078
02:01:39,920 --> 02:01:42,000
underlying operating system was actually

3079
02:01:42,000 --> 02:01:43,360
inefficient

3080
02:01:43,360 --> 02:01:45,599
and while i know the original

3081
02:01:45,599 --> 02:01:47,760
implementations of much of this used

3082
02:01:47,760 --> 02:01:50,320
things like rsync as the method to go

3083
02:01:50,320 --> 02:01:52,639
and transfer the data the data is still

3084
02:01:52,639 --> 02:01:56,000
just data and the files are just files

3085
02:01:56,000 --> 02:01:56,960
and

3086
02:01:56,960 --> 02:01:59,119
that doesn't mean that an implementation

3087
02:01:59,119 --> 02:02:00,880
shouldn't perhaps look at okay do we

3088
02:02:00,880 --> 02:02:02,560
abstract this out

3089
02:02:02,560 --> 02:02:04,239
and store it in our own internal data

3090
02:02:04,239 --> 02:02:05,360
store so

3091
02:02:05,360 --> 02:02:06,719
you know what one of the companies did

3092
02:02:06,719 --> 02:02:08,320
is they went and implemented a solution

3093
02:02:08,320 --> 02:02:10,400
whereby which all that data was still

3094
02:02:10,400 --> 02:02:11,360
there

3095
02:02:11,360 --> 02:02:13,360
but instead of them having to go out and

3096
02:02:13,360 --> 02:02:15,520
making all the file system calls and

3097
02:02:15,520 --> 02:02:17,040
dealing with all of the slowness of

3098
02:02:17,040 --> 02:02:19,360
interacting with the kernel and

3099
02:02:19,360 --> 02:02:21,280
operating system and hardware

3100
02:02:21,280 --> 02:02:23,040
they actually implemented a lot of that

3101
02:02:23,040 --> 02:02:24,480
internally in something that was

3102
02:02:24,480 --> 02:02:26,639
optimized for that use case and i

3103
02:02:26,639 --> 02:02:28,560
suspect that that

3104
02:02:28,560 --> 02:02:31,119
historical perspective may be useful in

3105
02:02:31,119 --> 02:02:32,880
the context of this

3106
02:02:32,880 --> 02:02:34,560
which is we have a lot of potential

3107
02:02:34,560 --> 02:02:36,480
traversal stuff a lot of potential file

3108
02:02:36,480 --> 02:02:37,679
creation

3109
02:02:37,679 --> 02:02:40,480
and stuff and as well as expiry policies

3110
02:02:40,480 --> 02:02:42,880
which are very similar to

3111
02:02:42,880 --> 02:02:44,800
but not exactly identical to that use

3112
02:02:44,800 --> 02:02:47,440
case and the solution space may lie very

3113
02:02:47,440 --> 02:02:49,119
similar to that software which then

3114
02:02:49,119 --> 02:02:50,159
became

3115
02:02:50,159 --> 02:02:52,320
very dominant uh even though it was

3116
02:02:52,320 --> 02:02:53,679
commercial and there were other you know

3117
02:02:53,679 --> 02:02:55,840
open source softwares to compete

3118
02:02:55,840 --> 02:02:58,080
uh as a result and so i i think here

3119
02:02:58,080 --> 02:03:00,960
that that that is very likely the case

3120
02:03:00,960 --> 02:03:02,960
uh you know that we should be looking

3121
02:03:02,960 --> 02:03:05,440
beyond the individual file systems and

3122
02:03:05,440 --> 02:03:07,840
looking at how that actually data store

3123
02:03:07,840 --> 02:03:09,280
is held in

3124
02:03:09,280 --> 02:03:11,199
uh you know internally within the

3125
02:03:11,199 --> 02:03:13,280
software and

3126
02:03:13,280 --> 02:03:15,520
uh versus that so i'm not sure what your

3127
02:03:15,520 --> 02:03:16,880
thoughts are on that

3128
02:03:16,880 --> 02:03:18,800
well i think you are

3129
02:03:18,800 --> 02:03:21,280
i agree and and for rdp a lot of

3130
02:03:21,280 --> 02:03:23,119
implementations already do that but the

3131
02:03:23,119 --> 02:03:25,920
rsync protocol makes that more difficult

3132
02:03:25,920 --> 02:03:28,239
to achieve that same so i believe that

3133
02:03:28,239 --> 02:03:29,840
there are implementations that do that

3134
02:03:29,840 --> 02:03:33,199
for rdp but do not do that for uh rsync

3135
02:03:33,199 --> 02:03:35,199
at the moment because rsync and rsync is

3136
02:03:35,199 --> 02:03:37,360
still requirement so

3137
02:03:37,360 --> 02:03:39,119
you can always downgrade to rsync and

3138
02:03:39,119 --> 02:03:43,559
then execute same attack

3139
02:03:48,079 --> 02:03:50,480
okay and our last one thank you very

3140
02:03:50,480 --> 02:03:52,719
much we managed to recover some time so

3141
02:03:52,719 --> 02:03:54,079
we

3142
02:03:54,079 --> 02:03:56,719
had his this initial reports about these

3143
02:03:56,719 --> 02:03:59,520
issues and we resolved part of these

3144
02:03:59,520 --> 02:04:00,719
attack attack

3145
02:04:00,719 --> 02:04:02,560
attack factors which is a really good

3146
02:04:02,560 --> 02:04:04,000
step because

3147
02:04:04,000 --> 02:04:05,840
it got a lot more complicated to do a

3148
02:04:05,840 --> 02:04:07,920
denial of service attack on all

3149
02:04:07,920 --> 02:04:10,960
validators worldwide however you also

3150
02:04:10,960 --> 02:04:13,040
showed that if you want to attack a

3151
02:04:13,040 --> 02:04:14,719
specific instance

3152
02:04:14,719 --> 02:04:16,800
you can still do that because it's

3153
02:04:16,800 --> 02:04:18,880
really hard to set these limits in a way

3154
02:04:18,880 --> 02:04:21,520
that's in the recursive case which

3155
02:04:21,520 --> 02:04:23,040
still needs to be quite wide because

3156
02:04:23,040 --> 02:04:25,199
some cas are quite wide

3157
02:04:25,199 --> 02:04:27,760
you cannot abuse it

3158
02:04:27,760 --> 02:04:31,199
so in my opinion we need some

3159
02:04:31,199 --> 02:04:32,880
work on that in this

3160
02:04:32,880 --> 02:04:36,079
working group so that at least

3161
02:04:36,079 --> 02:04:38,400
relying party instances can detect it

3162
02:04:38,400 --> 02:04:40,320
when it when the administrative domain

3163
02:04:40,320 --> 02:04:42,800
changes when traversing the tree

3164
02:04:42,800 --> 02:04:45,840
because uh for some entities it may be

3165
02:04:45,840 --> 02:04:47,119
logical that they have an extremely

3166
02:04:47,119 --> 02:04:49,440
large repository and

3167
02:04:49,440 --> 02:04:52,320
for the for a non-rar it's probably

3168
02:04:52,320 --> 02:04:56,079
likely that their logical entity has an

3169
02:04:56,079 --> 02:04:59,040
order of magnitude less objects in there

3170
02:04:59,040 --> 02:04:59,920
and

3171
02:04:59,920 --> 02:05:01,599
yeah i think we should continue

3172
02:05:01,599 --> 02:05:04,560
investigating this issue

3173
02:05:04,560 --> 02:05:07,199
thank you peace

3174
02:05:10,400 --> 02:05:13,199
thanks i think that was exciting

3175
02:05:13,199 --> 02:05:14,880
i want to congratulate warren for being

3176
02:05:14,880 --> 02:05:16,320
the first one that

3177
02:05:16,320 --> 02:05:18,159
has managed to

3178
02:05:18,159 --> 02:05:20,159
voluntarily get a group of engineers to

3179
02:05:20,159 --> 02:05:23,199
accept cookies so

3180
02:05:23,760 --> 02:05:25,199
thank you

3181
02:05:25,199 --> 02:05:26,239
so

3182
02:05:26,239 --> 02:05:28,639
so thank you everyone and also thank you

3183
02:05:28,639 --> 02:05:31,199
to the speakers and you know questioners

3184
02:05:31,199 --> 02:05:32,880
for keeping things short

3185
02:05:32,880 --> 02:05:34,400
um we did lose some time in the

3186
02:05:34,400 --> 02:05:36,000
beginning but

3187
02:05:36,000 --> 02:05:37,840
we're going along nicely

3188
02:05:37,840 --> 02:05:40,560
and also thanks everyone for you know

3189
02:05:40,560 --> 02:05:42,320
we're going to try to keep things civil

3190
02:05:42,320 --> 02:05:44,800
code of conduct etc again you know

3191
02:05:44,800 --> 02:05:46,960
passion is great um poking each other is

3192
02:05:46,960 --> 02:05:51,119
not so thank you everyone um

3193
02:05:51,119 --> 02:05:52,639
and

3194
02:05:52,639 --> 02:05:53,920
button

3195
02:05:53,920 --> 02:05:55,840
oh we can still be means chris yeah

3196
02:05:55,840 --> 02:05:57,199
he's an area

3197
02:05:57,199 --> 02:05:58,719
actually i mean

3198
02:05:58,719 --> 02:06:00,800
yeah we should yeah we can joke it chris

3199
02:06:00,800 --> 02:06:03,740
um okay so

3200
02:06:03,740 --> 02:06:06,639
[Laughter]

3201
02:06:06,639 --> 02:06:08,400
i keep forgetting that i'm coming home

3202
02:06:08,400 --> 02:06:10,880
tomorrow and you live nearby and

3203
02:06:10,880 --> 02:06:12,239
if you all don't hear from me on the

3204
02:06:12,239 --> 02:06:14,000
list for a few weeks somebody please

3205
02:06:14,000 --> 02:06:15,280
come find me

3206
02:06:15,280 --> 02:06:18,239
okay um thank you everybody thanks to

3207
02:06:18,239 --> 02:06:21,320
the speakers

3208
02:06:42,960 --> 02:06:47,159
it seems to be something

