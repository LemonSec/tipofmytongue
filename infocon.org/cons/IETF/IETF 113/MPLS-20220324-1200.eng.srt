1
00:00:09,840 --> 00:00:12,880
okay it's 8 a.m sharp my time i think

2
00:00:12,880 --> 00:00:14,960
it's 1 p.m

3
00:00:14,960 --> 00:00:17,359
vienna time

4
00:00:17,359 --> 00:00:20,160
nick and loa

5
00:00:20,320 --> 00:00:23,880
should we get started

6
00:00:30,160 --> 00:00:33,600
are you trying to say something lower

7
00:00:33,600 --> 00:00:36,160
uh no i'll do it

8
00:00:36,160 --> 00:00:38,719
okay i think uh we have a tight agenda

9
00:00:38,719 --> 00:00:40,239
so

10
00:00:40,239 --> 00:00:41,840
um

11
00:00:41,840 --> 00:00:43,520
we'll get going

12
00:00:43,520 --> 00:00:45,680
welcome to the ietf

13
00:00:45,680 --> 00:00:46,960
113

14
00:00:46,960 --> 00:00:50,320
mpls working group session

15
00:00:50,320 --> 00:00:52,559
this is a hybrid

16
00:00:52,559 --> 00:00:55,280
online with physical presence

17
00:00:55,280 --> 00:00:57,440
not so much of a physical presence there

18
00:00:57,440 --> 00:00:58,800
as was pointed

19
00:00:58,800 --> 00:01:01,120
um

20
00:01:02,160 --> 00:01:04,559
my name is tariq and the other working

21
00:01:04,559 --> 00:01:07,600
group chairs co-chairs that we have are

22
00:01:07,600 --> 00:01:09,360
lowa and nick

23
00:01:09,360 --> 00:01:11,439
our secretary is mack

24
00:01:11,439 --> 00:01:13,600
he's going to be helping us

25
00:01:13,600 --> 00:01:14,479
uh

26
00:01:14,479 --> 00:01:17,119
on minute taking today

27
00:01:17,119 --> 00:01:19,280
um

28
00:01:19,280 --> 00:01:22,400
i see him in the queue

29
00:01:22,720 --> 00:01:24,799
i i want to welcome

30
00:01:24,799 --> 00:01:27,280
our new ad

31
00:01:27,280 --> 00:01:28,420
andrew alston

32
00:01:28,420 --> 00:01:29,600
[Music]

33
00:01:29,600 --> 00:01:31,119
it's

34
00:01:31,119 --> 00:01:32,640
my pleasure and our pleasure to work

35
00:01:32,640 --> 00:01:34,159
with you

36
00:01:34,159 --> 00:01:35,680
hello

37
00:01:35,680 --> 00:01:37,759
and uh looking forward to working with

38
00:01:37,759 --> 00:01:38,840
you

39
00:01:38,840 --> 00:01:43,040
um so let me proceed to the next slide

40
00:01:43,040 --> 00:01:45,759
then uh

41
00:01:47,040 --> 00:01:48,240
this is our

42
00:01:48,240 --> 00:01:51,200
usual note well um it governs the

43
00:01:51,200 --> 00:01:53,439
intellectual property at itf as well as

44
00:01:53,439 --> 00:01:55,680
the code of conduct

45
00:01:55,680 --> 00:01:57,520
if you're participating

46
00:01:57,520 --> 00:02:00,159
in this conference and you're abiding by

47
00:02:00,159 --> 00:02:02,399
these rules so make sure you read them

48
00:02:02,399 --> 00:02:05,360
and understand them

49
00:02:07,040 --> 00:02:09,038
uh

50
00:02:09,038 --> 00:02:10,959
we're leaving some pointers here that

51
00:02:10,959 --> 00:02:12,879
might be helpful for the working group

52
00:02:12,879 --> 00:02:16,879
um notably um we have a pointer to the

53
00:02:16,879 --> 00:02:18,480
working group wiki

54
00:02:18,480 --> 00:02:20,879
where we can get to the

55
00:02:20,879 --> 00:02:22,959
design team

56
00:02:22,959 --> 00:02:25,680
wiki pages as well as well as other

57
00:02:25,680 --> 00:02:26,879
material

58
00:02:26,879 --> 00:02:30,319
um the slides are there in the on the

59
00:02:30,319 --> 00:02:31,920
materials page

60
00:02:31,920 --> 00:02:35,360
uh and we are also leaving the github

61
00:02:35,360 --> 00:02:38,000
link where we having some work in

62
00:02:38,000 --> 00:02:39,840
progress

63
00:02:39,840 --> 00:02:42,239
drafts that the design team as well as

64
00:02:42,239 --> 00:02:44,080
the working group in general can

65
00:02:44,080 --> 00:02:47,720
leverage and use

66
00:02:50,800 --> 00:02:54,000
um so this is our agenda for today it is

67
00:02:54,000 --> 00:02:55,920
uh pretty packed

68
00:02:55,920 --> 00:02:57,599
um

69
00:02:57,599 --> 00:03:01,120
the the status slides are um we have

70
00:03:01,120 --> 00:03:03,760
almost 11 or 12 slides that we compiled

71
00:03:03,760 --> 00:03:06,000
but i will not go through all of them in

72
00:03:06,000 --> 00:03:07,760
the interest of time

73
00:03:07,760 --> 00:03:09,920
and

74
00:03:09,920 --> 00:03:12,959
it is the right time uh if anyone wants

75
00:03:12,959 --> 00:03:14,720
to

76
00:03:14,720 --> 00:03:17,280
bash this agenda change anything or add

77
00:03:17,280 --> 00:03:20,959
or remove please sound your opinion

78
00:03:20,959 --> 00:03:24,239
i do see zafar is in the queue um

79
00:03:24,239 --> 00:03:26,159
so i will stop right here and allow you

80
00:03:26,159 --> 00:03:28,239
to go and ask

81
00:03:28,239 --> 00:03:30,080
go ahead

82
00:03:30,080 --> 00:03:33,760
yeah so uh many things um there is a dra

83
00:03:33,760 --> 00:03:36,080
there is a slot for policy or an npls

84
00:03:36,080 --> 00:03:38,000
result label we use

85
00:03:38,000 --> 00:03:40,720
um i could not find a working group

86
00:03:40,720 --> 00:03:42,959
document oh sorry not working with any

87
00:03:42,959 --> 00:03:45,519
any document associated with this all i

88
00:03:45,519 --> 00:03:48,000
see is some slides uh that are

89
00:03:48,000 --> 00:03:50,959
non-technical and uh full of

90
00:03:50,959 --> 00:03:52,239
fud and

91
00:03:52,239 --> 00:03:54,879
attacks so i i just wonder

92
00:03:54,879 --> 00:03:56,400
about that uh

93
00:03:56,400 --> 00:03:57,200
being

94
00:03:57,200 --> 00:04:01,319
selected at the agenda item

95
00:04:03,360 --> 00:04:05,040
we do have a slot

96
00:04:05,040 --> 00:04:06,239
for

97
00:04:06,239 --> 00:04:08,400
work that was presented at the design

98
00:04:08,400 --> 00:04:12,560
team it's coming up on the next slide

99
00:04:12,640 --> 00:04:14,879
it's a policy on special purpose uh

100
00:04:14,879 --> 00:04:16,880
label reuse uh the design team had

101
00:04:16,880 --> 00:04:20,079
worked on it and uh tony had given the

102
00:04:20,079 --> 00:04:22,960
presentation talk on it and and we

103
00:04:22,960 --> 00:04:24,800
thought it would be useful for the

104
00:04:24,800 --> 00:04:26,720
working group this time to listen to the

105
00:04:26,720 --> 00:04:28,960
talk in general rather than just the

106
00:04:28,960 --> 00:04:31,520
design team

107
00:04:32,690 --> 00:04:34,400
[Music]

108
00:04:34,400 --> 00:04:35,919
okay thanks

109
00:04:35,919 --> 00:04:39,680
yeah thanks okay thanks therefore

110
00:04:41,680 --> 00:04:42,880
so uh

111
00:04:42,880 --> 00:04:45,520
i will uh proceed unless anyone else i

112
00:04:45,520 --> 00:04:47,120
think laura is there in the queue as

113
00:04:47,120 --> 00:04:49,040
well uh do you want to add anything yeah

114
00:04:49,040 --> 00:04:51,520
i just wanted to you want to tell

115
00:04:51,520 --> 00:04:52,800
sapphire but

116
00:04:52,800 --> 00:04:56,400
one of my questions tony would be if he

117
00:04:56,400 --> 00:04:59,759
thinks this is worth writing up as draft

118
00:04:59,759 --> 00:05:01,759
so

119
00:05:01,759 --> 00:05:03,919
look at this as

120
00:05:03,919 --> 00:05:06,560
early work

121
00:05:08,160 --> 00:05:10,720
i would be happy to write it up as a if

122
00:05:10,720 --> 00:05:12,720
as a draft if people feel it's really

123
00:05:12,720 --> 00:05:13,840
necessary

124
00:05:13,840 --> 00:05:15,520
um you know if people think it's

125
00:05:15,520 --> 00:05:17,199
contentious yes

126
00:05:17,199 --> 00:05:19,440
um if people will simply accept it and

127
00:05:19,440 --> 00:05:23,960
go with it then why bother

128
00:05:26,479 --> 00:05:28,639
i'm not suggesting that we write a draft

129
00:05:28,639 --> 00:05:30,400
thank you

130
00:05:30,400 --> 00:05:33,440
okay thank you okay

131
00:05:34,320 --> 00:05:35,520
um

132
00:05:35,520 --> 00:05:38,160
i'll move i'll move on and next we have

133
00:05:38,160 --> 00:05:40,320
an errata that was reported since last

134
00:05:40,320 --> 00:05:44,880
time we met uh it's against rfc 6512

135
00:05:44,880 --> 00:05:45,919
um

136
00:05:45,919 --> 00:05:48,320
from the looks of it uh you know there

137
00:05:48,320 --> 00:05:52,720
is a um editorial maybe or a typo enter

138
00:05:52,720 --> 00:05:56,160
es it should be intra aes

139
00:05:56,160 --> 00:05:59,360
but it it might have a technical

140
00:05:59,360 --> 00:06:01,680
meaning associated with it

141
00:06:01,680 --> 00:06:02,560
um

142
00:06:02,560 --> 00:06:04,800
we will have to sync up with

143
00:06:04,800 --> 00:06:06,880
ad on this and

144
00:06:06,880 --> 00:06:07,919
and

145
00:06:07,919 --> 00:06:10,160
see how you know

146
00:06:10,160 --> 00:06:13,600
we need to verify that or

147
00:06:13,759 --> 00:06:17,199
pursue that further

148
00:06:19,120 --> 00:06:22,160
on the next slide uh we we since last

149
00:06:22,160 --> 00:06:24,000
time we have had uh

150
00:06:24,000 --> 00:06:25,680
a new rfc

151
00:06:25,680 --> 00:06:26,800
um

152
00:06:26,800 --> 00:06:28,960
we want to thank the the authors the

153
00:06:28,960 --> 00:06:30,720
shepherd as well as the working group on

154
00:06:30,720 --> 00:06:32,840
working on and producing this

155
00:06:32,840 --> 00:06:37,120
document um we do have two other rfc

156
00:06:37,120 --> 00:06:38,960
sorry documents that are in the rfc

157
00:06:38,960 --> 00:06:40,479
editor queue

158
00:06:40,479 --> 00:06:41,600
um

159
00:06:41,600 --> 00:06:43,199
one is in its

160
00:06:43,199 --> 00:06:46,479
the final stages in the off 48 as the

161
00:06:46,479 --> 00:06:48,560
second one is in mishraf

162
00:06:48,560 --> 00:06:51,680
waiting on another document

163
00:06:51,680 --> 00:06:55,120
the other document is also

164
00:06:55,360 --> 00:06:58,000
by the same authors and i think lua is

165
00:06:58,000 --> 00:06:59,360
the shepherd

166
00:06:59,360 --> 00:07:02,240
you want to comment on what's holding up

167
00:07:02,240 --> 00:07:05,440
the other document

168
00:07:06,160 --> 00:07:08,479
i don't really want to but the truth is

169
00:07:08,479 --> 00:07:12,479
that that's me i've been too busy

170
00:07:12,639 --> 00:07:16,880
i will take care of it after the meeting

171
00:07:16,880 --> 00:07:18,160
okay

172
00:07:18,160 --> 00:07:19,840
okay thanks

173
00:07:19,840 --> 00:07:21,199
um

174
00:07:21,199 --> 00:07:23,520
we we do have a new document that was

175
00:07:23,520 --> 00:07:26,960
adopted since last time we met um

176
00:07:26,960 --> 00:07:28,960
and uh i i

177
00:07:28,960 --> 00:07:31,919
i don't want to we do have a set of

178
00:07:31,919 --> 00:07:34,720
documents that were updated and i like i

179
00:07:34,720 --> 00:07:36,880
promised i will not go through the full

180
00:07:36,880 --> 00:07:39,919
status report i will leave it for the

181
00:07:39,919 --> 00:07:42,960
working group to to inspect the slides

182
00:07:42,960 --> 00:07:45,680
if they're interested

183
00:07:45,680 --> 00:07:46,560
so

184
00:07:46,560 --> 00:07:48,400
i will switch to the next item on the

185
00:07:48,400 --> 00:07:51,039
agenda unless anyone has any specific

186
00:07:51,039 --> 00:07:52,879
question

187
00:07:52,879 --> 00:07:55,280
uh rakesh i see you in the queue so feel

188
00:07:55,280 --> 00:07:56,240
free to

189
00:07:56,240 --> 00:07:58,240
go ahead

190
00:07:58,240 --> 00:08:00,479
yeah i have very quick uh comment on

191
00:08:00,479 --> 00:08:04,720
that draft itf and pls 6374 sr

192
00:08:04,720 --> 00:08:06,800
uh so we have requested the working

193
00:08:06,800 --> 00:08:08,879
group last call on it i'm not sure if

194
00:08:08,879 --> 00:08:11,919
you track it separately or not but just

195
00:08:11,919 --> 00:08:13,840
note thanks

196
00:08:13,840 --> 00:08:16,400
uh thanks for the reminder we do have uh

197
00:08:16,400 --> 00:08:18,479
you know a list of documents that have

198
00:08:18,479 --> 00:08:20,080
requested

199
00:08:20,080 --> 00:08:22,878
um the

200
00:08:23,120 --> 00:08:26,759
adoption yeah

201
00:08:29,440 --> 00:08:31,280
okay uh

202
00:08:31,280 --> 00:08:33,760
i'll change the deck to the first uh

203
00:08:33,760 --> 00:08:36,719
presenter who is going to be uh

204
00:08:36,719 --> 00:08:37,839
um

205
00:08:37,839 --> 00:08:42,159
wreck-ish i believe yes it is rekash

206
00:08:42,799 --> 00:08:45,039
okay

207
00:08:47,600 --> 00:08:49,600
i will give you the

208
00:08:49,600 --> 00:08:51,680
um the control on the slides are cache

209
00:08:51,680 --> 00:08:53,600
as well you should be able to flip

210
00:08:53,600 --> 00:08:55,040
through them

211
00:08:55,040 --> 00:08:57,120
from the bottom of the screen

212
00:08:57,120 --> 00:08:58,640
yeah i see it

213
00:08:58,640 --> 00:08:59,920
thanks derek

214
00:08:59,920 --> 00:09:02,640
uh hi everyone good morning my name is

215
00:09:02,640 --> 00:09:05,760
raques gandhi i'm presenting the

216
00:09:05,760 --> 00:09:09,600
mpls data plane ium draft on behalf of

217
00:09:09,600 --> 00:09:10,640
the

218
00:09:10,640 --> 00:09:14,240
co-authors listed here

219
00:09:16,480 --> 00:09:19,040
so the agenda is requirements and scope

220
00:09:19,040 --> 00:09:22,240
of the draft the summary of the protocol

221
00:09:22,240 --> 00:09:26,160
and discussions next steps

222
00:09:27,200 --> 00:09:29,360
so what this is uh the draft is about

223
00:09:29,360 --> 00:09:31,360
the carrying you know iom data fields

224
00:09:31,360 --> 00:09:34,160
with mpls encapsulation so there is a

225
00:09:34,160 --> 00:09:37,200
work going on in ippm working group uh

226
00:09:37,200 --> 00:09:40,000
there are a couple of drops um on the

227
00:09:40,000 --> 00:09:41,440
iom data

228
00:09:41,440 --> 00:09:43,600
i believe uh they have finished working

229
00:09:43,600 --> 00:09:46,320
blastport as well uh this is for edge to

230
00:09:46,320 --> 00:09:50,680
edge as well as hop by hop iom

231
00:09:52,800 --> 00:09:54,880
so just a brief history of this draft

232
00:09:54,880 --> 00:09:57,360
it's been around for um more than three

233
00:09:57,360 --> 00:09:59,839
years now it used to be in spring it was

234
00:09:59,839 --> 00:10:01,680
presented there

235
00:10:01,680 --> 00:10:04,160
then moved to mpls working group because

236
00:10:04,160 --> 00:10:05,760
it's a generic

237
00:10:05,760 --> 00:10:08,079
application to mpls data plane last year

238
00:10:08,079 --> 00:10:09,440
we did the

239
00:10:09,440 --> 00:10:12,240
mplsrt expert review and

240
00:10:12,240 --> 00:10:14,399
they were good suggestions came out one

241
00:10:14,399 --> 00:10:16,320
of them being

242
00:10:16,320 --> 00:10:19,200
used gsch for the iom so we have

243
00:10:19,200 --> 00:10:21,200
included that suggestions

244
00:10:21,200 --> 00:10:24,079
uh draft was renamed to focus on mpls

245
00:10:24,079 --> 00:10:26,399
all mpls data plane there were some

246
00:10:26,399 --> 00:10:28,320
concerns raised with uh requesting of

247
00:10:28,320 --> 00:10:30,480
the multiple espls

248
00:10:30,480 --> 00:10:32,880
and impact on msd that might be the

249
00:10:32,880 --> 00:10:34,320
reason why

250
00:10:34,320 --> 00:10:35,040
we

251
00:10:35,040 --> 00:10:37,760
trigger the dt design theme as well

252
00:10:37,760 --> 00:10:41,680
uh based on some review comments um

253
00:10:41,680 --> 00:10:44,160
so we have updated draft to address

254
00:10:44,160 --> 00:10:47,120
those comments as well so

255
00:10:47,120 --> 00:10:49,600
draft was presented couple of times and

256
00:10:49,600 --> 00:10:52,160
just so we'll focus on the changes and

257
00:10:52,160 --> 00:10:53,839
not go through a lot of details this

258
00:10:53,839 --> 00:10:56,839
time

259
00:11:00,880 --> 00:11:04,320
so this is the iom gach

260
00:11:04,320 --> 00:11:06,160
type we defined

261
00:11:06,160 --> 00:11:08,160
to carry the iom data fields this was

262
00:11:08,160 --> 00:11:10,079
based on the impedance rt expert review

263
00:11:10,079 --> 00:11:11,120
feedback

264
00:11:11,120 --> 00:11:14,640
that this is a good option for it

265
00:11:14,640 --> 00:11:18,480
so we have added that in the draft

266
00:11:18,640 --> 00:11:21,760
uh there are two uh indicators uh used

267
00:11:21,760 --> 00:11:24,880
to be different uh espl labels but based

268
00:11:24,880 --> 00:11:26,079
on feedback

269
00:11:26,079 --> 00:11:29,440
uh one option is to define the two

270
00:11:29,440 --> 00:11:31,519
uh flags one

271
00:11:31,519 --> 00:11:33,680
indicates that there is iom

272
00:11:33,680 --> 00:11:35,440
data present after the bottom of the

273
00:11:35,440 --> 00:11:37,040
stack and there is a second flag that

274
00:11:37,040 --> 00:11:38,320
says um

275
00:11:38,320 --> 00:11:42,399
uh it needs to hop by hop processing

276
00:11:42,399 --> 00:11:45,519
so the label can be a entropy label it

277
00:11:45,519 --> 00:11:48,560
can be spl or network programming label

278
00:11:48,560 --> 00:11:50,320
this is something

279
00:11:50,320 --> 00:11:52,399
we can discuss as part of the working

280
00:11:52,399 --> 00:11:55,639
group process

281
00:11:58,720 --> 00:12:00,639
so yeah we talked about uh the option

282
00:12:00,639 --> 00:12:03,120
types uh so if it's end to end

283
00:12:03,120 --> 00:12:05,680
iom defines the option types for into

284
00:12:05,680 --> 00:12:07,839
end to it it's actually called h2h

285
00:12:07,839 --> 00:12:09,279
processing and then hop by hop

286
00:12:09,279 --> 00:12:11,839
processing

287
00:12:13,760 --> 00:12:17,120
so the packet will look like like this

288
00:12:17,120 --> 00:12:17,920
with

289
00:12:17,920 --> 00:12:21,200
ioi indicator that says that there is an

290
00:12:21,200 --> 00:12:22,320
iom

291
00:12:22,320 --> 00:12:23,279
data

292
00:12:23,279 --> 00:12:25,200
up to the bottom of the stack and as we

293
00:12:25,200 --> 00:12:27,600
had defined gsch for it

294
00:12:27,600 --> 00:12:30,160
uh so this is based on uh discussion so

295
00:12:30,160 --> 00:12:33,680
far packet would look like this

296
00:12:34,079 --> 00:12:36,240
now the procedure is simple we

297
00:12:36,240 --> 00:12:38,079
i will not go into the details of the

298
00:12:38,079 --> 00:12:40,160
procedure but end cap node will add it

299
00:12:40,160 --> 00:12:42,000
and

300
00:12:42,000 --> 00:12:44,480
iom as well as the indicator midpoint

301
00:12:44,480 --> 00:12:46,560
will ignore it and

302
00:12:46,560 --> 00:12:49,360
the cap node will

303
00:12:49,360 --> 00:12:52,320
process the iom and remove the mpls with

304
00:12:52,320 --> 00:12:54,720
ioa

305
00:12:55,519 --> 00:12:57,920
for hub by hub there is another flag

306
00:12:57,920 --> 00:13:00,800
defined that says that iom needs the hub

307
00:13:00,800 --> 00:13:03,760
by hope processing

308
00:13:04,160 --> 00:13:06,480
procedure is very similar to edge to

309
00:13:06,480 --> 00:13:09,040
edge case except now you have a byte of

310
00:13:09,040 --> 00:13:10,800
processing um

311
00:13:10,800 --> 00:13:13,120
required flag set and midpoint or

312
00:13:13,120 --> 00:13:15,120
intermediate node will process the iom

313
00:13:15,120 --> 00:13:19,399
data based on the flag

314
00:13:20,399 --> 00:13:22,800
so uh welcome your review comments and

315
00:13:22,800 --> 00:13:25,279
suggestions uh on this important work uh

316
00:13:25,279 --> 00:13:27,839
and many thanks for all of the review

317
00:13:27,839 --> 00:13:30,959
and um comments including mplsrt expert

318
00:13:30,959 --> 00:13:33,440
review uh we are requesting working

319
00:13:33,440 --> 00:13:36,079
group adoption and whatever the open

320
00:13:36,079 --> 00:13:38,079
items we can take it up as part of the

321
00:13:38,079 --> 00:13:40,959
working process

322
00:13:41,360 --> 00:13:43,040
that's all i had

323
00:13:43,040 --> 00:13:45,439
thank you

324
00:13:46,800 --> 00:13:48,880
thank you go ahead please

325
00:13:48,880 --> 00:13:51,920
with your question greg

326
00:13:52,720 --> 00:13:53,440
yes

327
00:13:53,440 --> 00:13:56,079
uh thank you for presentation as you

328
00:13:56,079 --> 00:13:58,720
mentioned um so there

329
00:13:58,720 --> 00:14:00,839
i am encapsulation in

330
00:14:00,839 --> 00:14:02,560
mpls um

331
00:14:02,560 --> 00:14:06,880
is uh one of their cases for uh miad and

332
00:14:06,880 --> 00:14:09,680
it's reflected in the draft

333
00:14:09,680 --> 00:14:10,560
um

334
00:14:10,560 --> 00:14:11,279
so

335
00:14:11,279 --> 00:14:13,600
can you clarify what type of

336
00:14:13,600 --> 00:14:15,199
encapsulation

337
00:14:15,199 --> 00:14:18,479
this draft proposes

338
00:14:25,120 --> 00:14:28,399
yeah so this was uh there is a gsch type

339
00:14:28,399 --> 00:14:29,440
defined

340
00:14:29,440 --> 00:14:31,680
based on the mpls rta

341
00:14:31,680 --> 00:14:33,040
feedback

342
00:14:33,040 --> 00:14:36,320
to carry the iom data field

343
00:14:36,320 --> 00:14:38,560
and then there is a second

344
00:14:38,560 --> 00:14:41,440
indicator that's defined

345
00:14:41,440 --> 00:14:44,639
as bits in the ttl field of a label

346
00:14:44,639 --> 00:14:47,199
label being entropy label or spl or

347
00:14:47,199 --> 00:14:49,040
network programming label

348
00:14:49,040 --> 00:14:50,480
to be

349
00:14:50,480 --> 00:14:54,399
discussed as part of the working process

350
00:14:54,880 --> 00:14:57,360
so you are proposing multiple

351
00:14:57,360 --> 00:14:59,839
solutions

352
00:14:59,920 --> 00:15:02,880
no the there is indicator and then there

353
00:15:02,880 --> 00:15:04,079
is data

354
00:15:04,079 --> 00:15:04,880
right

355
00:15:04,880 --> 00:15:06,480
this is

356
00:15:06,480 --> 00:15:09,680
in line with uh two um

357
00:15:09,680 --> 00:15:13,839
two things that's also part of the miad

358
00:15:13,920 --> 00:15:16,160
but my understanding is that

359
00:15:16,160 --> 00:15:19,040
gach is not part of the miad

360
00:15:19,040 --> 00:15:22,079
or not part of their direction that open

361
00:15:22,079 --> 00:15:24,720
design team is working on

362
00:15:24,720 --> 00:15:26,880
yeah so this is based on the mprsrt

363
00:15:26,880 --> 00:15:28,480
expert's uh

364
00:15:28,480 --> 00:15:31,519
suggestions to use um gach and uh

365
00:15:31,519 --> 00:15:35,199
incorporated draft uh if miad

366
00:15:35,199 --> 00:15:38,240
comes up with a different header uh then

367
00:15:38,240 --> 00:15:40,079
it can be adapted

368
00:15:40,079 --> 00:15:43,519
as part of the working process

369
00:15:49,440 --> 00:15:50,240
okay

370
00:15:50,240 --> 00:15:52,639
let's take it to the list thank you

371
00:15:52,639 --> 00:15:54,399
thanks greg

372
00:15:54,399 --> 00:15:57,600
okay um i have a question rakesh uh

373
00:15:57,600 --> 00:16:00,480
um you say that the the the the iuem

374
00:16:00,480 --> 00:16:04,240
header uh metadata or uh the uh

375
00:16:04,240 --> 00:16:06,399
they have this extension header that

376
00:16:06,399 --> 00:16:08,320
you're proposing should be inserted by

377
00:16:08,320 --> 00:16:09,920
the

378
00:16:09,920 --> 00:16:13,600
by the ingress node or any node

379
00:16:13,600 --> 00:16:15,920
so we call it the end cap node that adds

380
00:16:15,920 --> 00:16:19,120
the iom end cap will um

381
00:16:19,120 --> 00:16:21,600
add as part of the end cap

382
00:16:21,600 --> 00:16:22,560
okay

383
00:16:22,560 --> 00:16:26,560
and can mult can can kind of how do you

384
00:16:26,560 --> 00:16:28,320
handle the case that

385
00:16:28,320 --> 00:16:31,199
a an iom

386
00:16:31,199 --> 00:16:33,759
header already exists in the packet

387
00:16:33,759 --> 00:16:35,199
and

388
00:16:35,199 --> 00:16:38,320
and someone tries to add another iom

389
00:16:38,320 --> 00:16:40,639
header

390
00:16:40,639 --> 00:16:42,079
so yeah

391
00:16:42,079 --> 00:16:44,560
lsp hierarchy or

392
00:16:44,560 --> 00:16:47,199
something like that

393
00:16:47,199 --> 00:16:48,959
yeah i think there is a

394
00:16:48,959 --> 00:16:51,199
small section in the draft that talks

395
00:16:51,199 --> 00:16:52,560
about it

396
00:16:52,560 --> 00:16:54,160
and

397
00:16:54,160 --> 00:16:57,680
basically as part of the new end cap

398
00:16:57,680 --> 00:16:59,920
there is there are two ways of doing it

399
00:16:59,920 --> 00:17:01,680
either adding a

400
00:17:01,680 --> 00:17:05,119
new header and the whole iom or

401
00:17:05,119 --> 00:17:07,199
uh appending the data to the existing

402
00:17:07,199 --> 00:17:08,480
iom

403
00:17:08,480 --> 00:17:10,559
so this is these are two options uh we

404
00:17:10,559 --> 00:17:12,559
can elaborate and

405
00:17:12,559 --> 00:17:15,599
agree on which one is the right one

406
00:17:15,599 --> 00:17:18,160
okay i i'm just concerned about the when

407
00:17:18,160 --> 00:17:23,520
when uh the one egress ls lsr of one lsp

408
00:17:23,520 --> 00:17:25,839
uh tries to remove the whole thing uh

409
00:17:25,839 --> 00:17:27,199
the whole header

410
00:17:27,199 --> 00:17:29,360
and you want part of it to persist and

411
00:17:29,360 --> 00:17:31,600
maybe i should read that section thank

412
00:17:31,600 --> 00:17:32,559
you

413
00:17:32,559 --> 00:17:33,360
yeah

414
00:17:33,360 --> 00:17:35,200
that's a good comment

415
00:17:35,200 --> 00:17:38,320
we can elaborate thanks

416
00:17:40,400 --> 00:17:41,280
okay

417
00:17:41,280 --> 00:17:44,400
we will move to the next

418
00:17:44,400 --> 00:17:46,690
presentation

419
00:17:46,690 --> 00:17:48,799
[Music]

420
00:17:48,799 --> 00:17:53,240
let me see if i can find it then

421
00:18:00,320 --> 00:18:02,879
interesting

422
00:18:03,620 --> 00:18:06,160
[Music]

423
00:18:06,160 --> 00:18:08,400
i'm finding it

424
00:18:08,400 --> 00:18:11,919
it's not allowing me to share

425
00:18:13,600 --> 00:18:16,080
uh tarek would you hand me to the other

426
00:18:16,080 --> 00:18:18,399
slides

427
00:18:18,559 --> 00:18:22,640
yeah i i'm uh it's not letting me uh

428
00:18:22,640 --> 00:18:24,880
share your slides so

429
00:18:24,880 --> 00:18:27,679
um i'm not sure it's telling me okay

430
00:18:27,679 --> 00:18:30,240
okay now it is

431
00:18:30,240 --> 00:18:32,480
yeah i just released uh

432
00:18:32,480 --> 00:18:34,240
i was the share slide more so i just

433
00:18:34,240 --> 00:18:35,760
released it and maybe that was the

434
00:18:35,760 --> 00:18:38,960
reason oh that was it then thank you

435
00:18:38,960 --> 00:18:43,160
okay let me find the

436
00:18:48,320 --> 00:18:50,799
oh yeah okay is it ciao

437
00:18:50,799 --> 00:18:54,160
yes i'm xiaomi okay go ahead

438
00:18:54,160 --> 00:18:54,960
okay

439
00:18:54,960 --> 00:18:57,280
hello everyone uh i'm xiaomi i'm

440
00:18:57,280 --> 00:19:01,760
presenting lsb ping for sr pass seats

441
00:19:01,760 --> 00:19:04,000
this chapter was presented

442
00:19:04,000 --> 00:19:06,480
at ietf 109

443
00:19:06,480 --> 00:19:09,520
this is the second time is presented

444
00:19:09,520 --> 00:19:12,320
next slide please

445
00:19:13,760 --> 00:19:16,400
go to control the slides from the bottom

446
00:19:16,400 --> 00:19:20,120
okay i see

447
00:19:24,320 --> 00:19:27,280
there's a bit delayed

448
00:19:30,720 --> 00:19:33,520
okay right now

449
00:19:33,679 --> 00:19:36,480
past segment two is mps data plane uh is

450
00:19:36,480 --> 00:19:38,320
defined in

451
00:19:38,320 --> 00:19:41,760
draft spring ampere's path segment

452
00:19:41,760 --> 00:19:43,440
which has passed the working group last

453
00:19:43,440 --> 00:19:44,559
call

454
00:19:44,559 --> 00:19:46,559
in spring working group

455
00:19:46,559 --> 00:19:49,440
path segment is normally used

456
00:19:49,440 --> 00:19:51,440
by the egress nodes

457
00:19:51,440 --> 00:19:53,679
for past identification

458
00:19:53,679 --> 00:19:56,240
a pass segment must be

459
00:19:56,240 --> 00:19:58,240
inserted at

460
00:19:58,240 --> 00:20:00,960
the ingress node and must not be popped

461
00:20:00,960 --> 00:20:02,000
off

462
00:20:02,000 --> 00:20:03,760
until it

463
00:20:03,760 --> 00:20:04,880
reaches

464
00:20:04,880 --> 00:20:06,880
the egress node

465
00:20:06,880 --> 00:20:08,559
path segment

466
00:20:08,559 --> 00:20:10,720
must immediately

467
00:20:10,720 --> 00:20:12,159
follow the

468
00:20:12,159 --> 00:20:15,360
routine segment pointing to the

469
00:20:15,360 --> 00:20:18,840
egress node

470
00:20:31,840 --> 00:20:33,760
this draft

471
00:20:33,760 --> 00:20:37,280
provides three target fact sub to v's

472
00:20:37,280 --> 00:20:39,520
for past segment

473
00:20:39,520 --> 00:20:42,400
when pass segment is used to identify an

474
00:20:42,400 --> 00:20:43,840
sr policy

475
00:20:43,840 --> 00:20:46,880
the target effect sr policy is perceived

476
00:20:46,880 --> 00:20:48,159
sub v

477
00:20:48,159 --> 00:20:50,400
is included in the

478
00:20:50,400 --> 00:20:52,799
spping message

479
00:20:52,799 --> 00:20:56,159
when pass segment is used to identify

480
00:20:56,159 --> 00:20:59,039
an sr policies candidate pass

481
00:20:59,039 --> 00:21:02,159
the target effect as a candidate passed

482
00:21:02,159 --> 00:21:04,159
perceived sub tuv

483
00:21:04,159 --> 00:21:06,320
is included in

484
00:21:06,320 --> 00:21:08,640
svp message

485
00:21:08,640 --> 00:21:10,799
when pass segment is used to identify a

486
00:21:10,799 --> 00:21:12,240
segment list

487
00:21:12,240 --> 00:21:15,280
the target effect as a segment list

488
00:21:15,280 --> 00:21:16,960
passive sub to v

489
00:21:16,960 --> 00:21:19,200
is included in the

490
00:21:19,200 --> 00:21:20,559
spp

491
00:21:20,559 --> 00:21:23,799
ping message

492
00:21:35,280 --> 00:21:38,400
this slide illustrates the format

493
00:21:38,400 --> 00:21:42,720
of sub policies passed it sub to v

494
00:21:42,720 --> 00:21:45,200
uh as specified in segment routing

495
00:21:45,200 --> 00:21:47,120
policy draft

496
00:21:47,120 --> 00:21:49,760
a sr policy must be

497
00:21:49,760 --> 00:21:52,320
identified through the tuple

498
00:21:52,320 --> 00:21:53,840
head and

499
00:21:53,840 --> 00:21:55,039
color and

500
00:21:55,039 --> 00:21:57,600
endpoint

501
00:21:57,679 --> 00:21:59,520
so this subtle v has

502
00:21:59,520 --> 00:22:00,720
three fields

503
00:22:00,720 --> 00:22:03,280
head and color and end point

504
00:22:03,280 --> 00:22:06,720
that identify an sr policy

505
00:22:06,720 --> 00:22:08,799
the erase node would use the three

506
00:22:08,799 --> 00:22:10,000
fields

507
00:22:10,000 --> 00:22:13,200
and receive the path segment to validate

508
00:22:13,200 --> 00:22:15,520
the control plane to forwarding plane

509
00:22:15,520 --> 00:22:17,200
synchronization

510
00:22:17,200 --> 00:22:21,159
for this path segment

511
00:22:30,080 --> 00:22:33,200
this slide illustrates the format of sr

512
00:22:33,200 --> 00:22:36,720
candidate pass pass sid sub tuv

513
00:22:36,720 --> 00:22:38,960
as specified in a

514
00:22:38,960 --> 00:22:41,280
segment routine policy draft

515
00:22:41,280 --> 00:22:44,000
in sr candidate path must be identified

516
00:22:44,000 --> 00:22:47,039
through the tuple head and the color

517
00:22:47,039 --> 00:22:48,240
endpoint

518
00:22:48,240 --> 00:22:51,360
protocol origin originator and the

519
00:22:51,360 --> 00:22:53,120
discriminator

520
00:22:53,120 --> 00:22:56,400
so this subtly has six fields

521
00:22:56,400 --> 00:22:58,240
of the tuple that

522
00:22:58,240 --> 00:23:01,600
identify as a candidate passed

523
00:23:01,600 --> 00:23:03,600
the igress node

524
00:23:03,600 --> 00:23:06,240
would use the six fields and receive the

525
00:23:06,240 --> 00:23:08,799
pass segment to validate the control

526
00:23:08,799 --> 00:23:10,559
plane to forwarding plane

527
00:23:10,559 --> 00:23:15,320
synchronization for this path segment

528
00:23:35,360 --> 00:23:36,400
this slide

529
00:23:36,400 --> 00:23:38,320
illustrates the format

530
00:23:38,320 --> 00:23:42,559
of sr segmented list past seed subtly

531
00:23:42,559 --> 00:23:43,679
and sustain

532
00:23:43,679 --> 00:23:46,880
list can be identified through the tuple

533
00:23:46,880 --> 00:23:48,000
head and

534
00:23:48,000 --> 00:23:49,039
color

535
00:23:49,039 --> 00:23:53,120
endpoint protocol region resonator

536
00:23:53,120 --> 00:23:56,559
discriminator and segment list id

537
00:23:56,559 --> 00:23:59,440
one more field segment list id

538
00:23:59,440 --> 00:24:02,000
then the tuple that identifies

539
00:24:02,000 --> 00:24:06,320
as a candidate path so this subtly has

540
00:24:06,320 --> 00:24:07,760
seven fields

541
00:24:07,760 --> 00:24:10,480
of the tuple that identify an sr segment

542
00:24:10,480 --> 00:24:12,080
list

543
00:24:12,080 --> 00:24:14,000
the egress node would use the seven

544
00:24:14,000 --> 00:24:16,799
fields and receive the path segment

545
00:24:16,799 --> 00:24:18,720
to validate the control plane to

546
00:24:18,720 --> 00:24:20,080
forwarding plane

547
00:24:20,080 --> 00:24:24,399
signalization for this path segment

548
00:24:26,559 --> 00:24:27,390
so uh

549
00:24:27,390 --> 00:24:28,559
[Music]

550
00:24:28,559 --> 00:24:29,760
the authors

551
00:24:29,760 --> 00:24:33,520
believe this chapter is straight forward

552
00:24:33,520 --> 00:24:35,360
and it's ready for working group

553
00:24:35,360 --> 00:24:36,799
adoption

554
00:24:36,799 --> 00:24:39,200
thank you

555
00:24:44,240 --> 00:24:45,520
no questions

556
00:24:45,520 --> 00:24:47,440
i have a quick question for you please

557
00:24:47,440 --> 00:24:48,320
um

558
00:24:48,320 --> 00:24:51,039
is the path segment only uh relevant at

559
00:24:51,039 --> 00:24:54,640
the egress or would the transit

560
00:24:54,640 --> 00:24:57,520
node be interested in this path segment

561
00:24:57,520 --> 00:24:59,039
id

562
00:24:59,039 --> 00:25:02,640
uh yes uh in the zero zero version of

563
00:25:02,640 --> 00:25:04,080
this job to

564
00:25:04,080 --> 00:25:06,159
uh we have no uh

565
00:25:06,159 --> 00:25:08,960
decision on whether it's only

566
00:25:08,960 --> 00:25:09,760
to

567
00:25:09,760 --> 00:25:11,840
egress node or

568
00:25:11,840 --> 00:25:16,000
is also relevant to transient nodes

569
00:25:16,000 --> 00:25:18,159
and after revision

570
00:25:18,159 --> 00:25:19,440
we

571
00:25:19,440 --> 00:25:23,760
decided to decided to change it to just

572
00:25:23,760 --> 00:25:27,360
for egress node to check to validate

573
00:25:27,360 --> 00:25:30,799
because we think uh past segment uh

574
00:25:30,799 --> 00:25:32,240
from the the

575
00:25:32,240 --> 00:25:33,600
discretion

576
00:25:33,600 --> 00:25:36,320
of the uh past segment uh

577
00:25:36,320 --> 00:25:38,240
working group draft

578
00:25:38,240 --> 00:25:41,200
we think is just relevant to the egress

579
00:25:41,200 --> 00:25:42,159
note

580
00:25:42,159 --> 00:25:45,200
that's the decision from the authors

581
00:25:45,200 --> 00:25:46,480
thank you okay

582
00:25:46,480 --> 00:25:48,080
thank you

583
00:25:48,080 --> 00:25:50,880
um we'll move to the next presenter i

584
00:25:50,880 --> 00:25:53,279
guess i don't see anyone on the mic

585
00:25:53,279 --> 00:25:55,279
trying to ask a question

586
00:25:55,279 --> 00:25:56,799
okay thank you

587
00:25:56,799 --> 00:25:58,720
thanks

588
00:25:58,720 --> 00:26:01,600
i think greedy is next uh

589
00:26:01,600 --> 00:26:03,120
let me find your

590
00:26:03,120 --> 00:26:06,918
set of slides deprecating

591
00:26:11,760 --> 00:26:13,120
hello

592
00:26:13,120 --> 00:26:14,640
can you hear me

593
00:26:14,640 --> 00:26:17,200
yeah if you come bit closer to the mic

594
00:26:17,200 --> 00:26:19,679
it was a little bit open yeah

595
00:26:19,679 --> 00:26:21,440
i think i can hear you

596
00:26:21,440 --> 00:26:25,039
okay all right um this um

597
00:26:25,039 --> 00:26:26,000
this is a

598
00:26:26,000 --> 00:26:29,120
fairly straightforward draft many thanks

599
00:26:29,120 --> 00:26:29,840
to

600
00:26:29,840 --> 00:26:30,799
ron

601
00:26:30,799 --> 00:26:32,960
for pushing me to do this

602
00:26:32,960 --> 00:26:35,760
and for preparing the slides

603
00:26:35,760 --> 00:26:39,559
so next slide please

604
00:26:40,960 --> 00:26:42,480
so the proposal is fairly

605
00:26:42,480 --> 00:26:43,760
straightforward

606
00:26:43,760 --> 00:26:46,799
the lsb ping rfc

607
00:26:46,799 --> 00:26:49,200
8209 80

608
00:26:49,200 --> 00:26:52,240
80 229

609
00:26:52,240 --> 00:26:56,159
basically says use a router alert option

610
00:26:56,159 --> 00:26:58,240
in the ping packets

611
00:26:58,240 --> 00:27:00,159
and

612
00:27:00,159 --> 00:27:02,960
we'll explain in the next few slides

613
00:27:02,960 --> 00:27:06,400
why that's not a good idea

614
00:27:06,400 --> 00:27:09,440
and why it's unnecessary

615
00:27:09,440 --> 00:27:11,120
and um

616
00:27:11,120 --> 00:27:13,600
so we're proposing to remove

617
00:27:13,600 --> 00:27:15,840
this this option

618
00:27:15,840 --> 00:27:18,159
from lsb ping

619
00:27:18,159 --> 00:27:21,279
and in the process we'll reclassify

620
00:27:21,279 --> 00:27:23,919
7506 to historic

621
00:27:23,919 --> 00:27:27,039
7506 registers

622
00:27:27,039 --> 00:27:29,279
routing alert option

623
00:27:29,279 --> 00:27:31,440
for ipv6 you have to say why you want to

624
00:27:31,440 --> 00:27:33,520
use it so it basically says we want to

625
00:27:33,520 --> 00:27:35,440
use it for mpls

626
00:27:35,440 --> 00:27:37,279
so we don't need it and this is the only

627
00:27:37,279 --> 00:27:38,559
use of it so

628
00:27:38,559 --> 00:27:41,120
it becomes historic

629
00:27:41,120 --> 00:27:42,880
and the reason for doing all this is

630
00:27:42,880 --> 00:27:44,960
that

631
00:27:44,960 --> 00:27:47,520
router alert does pose some security

632
00:27:47,520 --> 00:27:48,399
issues

633
00:27:48,399 --> 00:27:50,320
so you can read rfc

634
00:27:50,320 --> 00:27:53,039
6398 to understand

635
00:27:53,039 --> 00:27:56,159
those those issues

636
00:27:56,159 --> 00:27:59,760
and it also allows the six-man effort

637
00:27:59,760 --> 00:28:02,159
that's looking at you know how to

638
00:28:02,159 --> 00:28:04,240
resurrect the hop by hop options and

639
00:28:04,240 --> 00:28:05,919
what to do about it

640
00:28:05,919 --> 00:28:07,279
they're considering whether we need

641
00:28:07,279 --> 00:28:09,919
router alert in ipv6

642
00:28:09,919 --> 00:28:13,200
and they might get confused that um you

643
00:28:13,200 --> 00:28:15,600
know lsp ping really needs it so this

644
00:28:15,600 --> 00:28:17,919
gives them the freedom to

645
00:28:17,919 --> 00:28:20,240
say we don't need that

646
00:28:20,240 --> 00:28:22,480
and the biggest thing is that we really

647
00:28:22,480 --> 00:28:26,000
don't need router alert in lsp ping

648
00:28:26,000 --> 00:28:29,480
next slide please

649
00:28:30,799 --> 00:28:33,120
so here's what an lsp ping packet looks

650
00:28:33,120 --> 00:28:35,120
like um you got to read this from the

651
00:28:35,120 --> 00:28:36,320
bottom up

652
00:28:36,320 --> 00:28:38,320
so you got the label stack you've got an

653
00:28:38,320 --> 00:28:40,080
ip

654
00:28:40,080 --> 00:28:41,919
header inside that

655
00:28:41,919 --> 00:28:44,559
and in the echo request the router alert

656
00:28:44,559 --> 00:28:46,559
is mandatory

657
00:28:46,559 --> 00:28:50,399
then you have a udp with a well-known um

658
00:28:50,399 --> 00:28:51,760
port number

659
00:28:51,760 --> 00:28:54,000
saying this lsv ping and then you have

660
00:28:54,000 --> 00:28:58,080
the actual contents of the lsp ping

661
00:28:58,080 --> 00:29:00,879
next slide please

662
00:29:01,360 --> 00:29:04,399
so echo reply looks quite similar

663
00:29:04,399 --> 00:29:06,480
a couple of things that are different

664
00:29:06,480 --> 00:29:08,080
i don't believe you actually need an

665
00:29:08,080 --> 00:29:10,640
mpls label stack

666
00:29:10,640 --> 00:29:13,279
in the ip header the router alert is

667
00:29:13,279 --> 00:29:14,720
optional

668
00:29:14,720 --> 00:29:17,679
but then you have the udp

669
00:29:17,679 --> 00:29:20,000
header and then you have the reply

670
00:29:20,000 --> 00:29:22,000
contents

671
00:29:22,000 --> 00:29:25,480
next slide please

672
00:29:26,000 --> 00:29:27,039
so

673
00:29:27,039 --> 00:29:29,200
the motivation for putting a router

674
00:29:29,200 --> 00:29:31,760
alert in the echo request

675
00:29:31,760 --> 00:29:34,640
is essentially paranoia

676
00:29:34,640 --> 00:29:36,399
we really wanted to make sure that the

677
00:29:36,399 --> 00:29:39,120
router that sorry the echo request does

678
00:29:39,120 --> 00:29:41,679
not go beyond the egress

679
00:29:41,679 --> 00:29:44,559
so to do that we put three protective

680
00:29:44,559 --> 00:29:45,919
mechanisms

681
00:29:45,919 --> 00:29:47,760
we said that the destination address

682
00:29:47,760 --> 00:29:50,640
must be from 127-8

683
00:29:50,640 --> 00:29:52,159
for ipv4

684
00:29:52,159 --> 00:29:55,120
or this funky address for ipv6

685
00:29:55,120 --> 00:29:58,000
and that's not allowed to be forwarded

686
00:29:58,000 --> 00:30:00,480
so when you pull off all the labels

687
00:30:00,480 --> 00:30:02,080
from the label stack

688
00:30:02,080 --> 00:30:03,679
you see that address you shouldn't

689
00:30:03,679 --> 00:30:05,360
forward it

690
00:30:05,360 --> 00:30:07,440
on top of that we said the ttl must be

691
00:30:07,440 --> 00:30:09,760
set to one so when you do all that and

692
00:30:09,760 --> 00:30:12,000
you look at the ttl you say oh i'm not

693
00:30:12,000 --> 00:30:14,159
going to forward this either

694
00:30:14,159 --> 00:30:15,919
and then we said we'll put a router

695
00:30:15,919 --> 00:30:16,960
alert

696
00:30:16,960 --> 00:30:18,480
it's like yeah

697
00:30:18,480 --> 00:30:20,480
so it's total paranoia

698
00:30:20,480 --> 00:30:22,559
two levels are plenty

699
00:30:22,559 --> 00:30:24,559
and i don't believe anyone actually

700
00:30:24,559 --> 00:30:26,720
implements using

701
00:30:26,720 --> 00:30:29,919
uh router alert in the lsb ping

702
00:30:29,919 --> 00:30:32,000
and even if they did it's a simple

703
00:30:32,000 --> 00:30:33,919
change to remove it

704
00:30:33,919 --> 00:30:37,600
and it doesn't add any protection

705
00:30:37,600 --> 00:30:40,799
uh next slide please

706
00:30:41,760 --> 00:30:44,000
now for the echo reply

707
00:30:44,000 --> 00:30:46,480
um it's a different motivation

708
00:30:46,480 --> 00:30:50,240
and this one's even more questionable

709
00:30:50,240 --> 00:30:53,120
the reply has several modes one says i

710
00:30:53,120 --> 00:30:55,120
don't care about the reply i just want

711
00:30:55,120 --> 00:30:57,440
to ping in the forward direction

712
00:30:57,440 --> 00:30:59,600
not not used very much

713
00:30:59,600 --> 00:31:03,360
the next one says reply via ipv4

714
00:31:03,360 --> 00:31:05,200
or ipv6

715
00:31:05,200 --> 00:31:09,679
the third it says reply via ipv4 or ipv6

716
00:31:09,679 --> 00:31:12,559
with the router alert set

717
00:31:12,559 --> 00:31:14,960
and the the fourth is reply via

718
00:31:14,960 --> 00:31:16,559
application level

719
00:31:16,559 --> 00:31:18,799
some control channel

720
00:31:18,799 --> 00:31:21,440
so mostly what people do is two

721
00:31:21,440 --> 00:31:25,120
i don't believe anyone does three

722
00:31:25,120 --> 00:31:27,840
what three is about is if you just send

723
00:31:27,840 --> 00:31:29,919
an ip packet and you're applying to an

724
00:31:29,919 --> 00:31:31,840
echo

725
00:31:31,840 --> 00:31:34,720
and it might get lost

726
00:31:34,720 --> 00:31:37,279
and so if you use a router alert it will

727
00:31:37,279 --> 00:31:40,000
suddenly magically show up at the egress

728
00:31:40,000 --> 00:31:43,440
or in this case the ingress

729
00:31:43,440 --> 00:31:45,519
i'm not sure what i was on at that

730
00:31:45,519 --> 00:31:46,640
moment

731
00:31:46,640 --> 00:31:49,760
you'd have to ask my lawyer my doctor

732
00:31:49,760 --> 00:31:51,919
and my priest

733
00:31:51,919 --> 00:31:54,000
but you know

734
00:31:54,000 --> 00:31:56,799
it's there in the in in the rfc

735
00:31:56,799 --> 00:31:59,200
and what we'd like to do is remove it

736
00:31:59,200 --> 00:32:01,840
next slide

737
00:32:03,760 --> 00:32:05,360
so um

738
00:32:05,360 --> 00:32:07,039
i think we

739
00:32:07,039 --> 00:32:09,440
would like to have the working group

740
00:32:09,440 --> 00:32:11,519
look at this

741
00:32:11,519 --> 00:32:14,000
you know give us feedback in terms of

742
00:32:14,000 --> 00:32:16,559
especially if anyone's actually using it

743
00:32:16,559 --> 00:32:19,840
um if anyone actually thinks it's useful

744
00:32:19,840 --> 00:32:22,559
i don't believe so but you know

745
00:32:22,559 --> 00:32:24,080
um

746
00:32:24,080 --> 00:32:25,840
i think the working group should review

747
00:32:25,840 --> 00:32:27,279
it

748
00:32:27,279 --> 00:32:29,679
i think it's fairly straightforward to

749
00:32:29,679 --> 00:32:32,399
adopt this and actually move it on

750
00:32:32,399 --> 00:32:33,840
to to

751
00:32:33,840 --> 00:32:35,840
you know to the next stage

752
00:32:35,840 --> 00:32:39,840
and to classify or reclassify 7506 as

753
00:32:39,840 --> 00:32:41,200
historic

754
00:32:41,200 --> 00:32:43,200
and probably it would be nice to tell

755
00:32:43,200 --> 00:32:45,760
the i think it's six man that's doing

756
00:32:45,760 --> 00:32:47,200
the hobbyhop

757
00:32:47,200 --> 00:32:48,159
stuff

758
00:32:48,159 --> 00:32:49,679
in ipv6

759
00:32:49,679 --> 00:32:51,039
and tell them hey

760
00:32:51,039 --> 00:32:53,679
if you thought mpls needed

761
00:32:53,679 --> 00:32:57,679
router alert it's no longer the case

762
00:32:57,679 --> 00:33:00,159
thank you any questions

763
00:33:00,159 --> 00:33:02,480
yes we do have greg in the queue first

764
00:33:02,480 --> 00:33:04,399
in the top of the queue

765
00:33:04,399 --> 00:33:06,240
uh thank you um

766
00:33:06,240 --> 00:33:09,519
i just want to note that uh through

767
00:33:09,519 --> 00:33:14,080
other discussions i learned that

768
00:33:14,080 --> 00:33:17,439
ipv6 mapped

769
00:33:18,080 --> 00:33:20,960
mapping of ipv4

770
00:33:20,960 --> 00:33:22,080
loopback

771
00:33:22,080 --> 00:33:26,480
range has no special meaning in ipv6

772
00:33:26,480 --> 00:33:28,960
and at least one uh

773
00:33:28,960 --> 00:33:31,360
operating system allows use of these

774
00:33:31,360 --> 00:33:35,039
addresses and they get out

775
00:33:35,039 --> 00:33:36,640
so ipv6

776
00:33:36,640 --> 00:33:40,080
has only one single loopback which is a

777
00:33:40,080 --> 00:33:42,799
address one

778
00:33:42,799 --> 00:33:45,120
okay that's good to know the reason why

779
00:33:45,120 --> 00:33:48,080
we actually said use the whole range was

780
00:33:48,080 --> 00:33:50,559
to give a little more chance for

781
00:33:50,559 --> 00:33:52,399
entropy because

782
00:33:52,399 --> 00:33:54,320
lsp ping in the hop i hope the

783
00:33:54,320 --> 00:33:56,159
traceroute mode

784
00:33:56,159 --> 00:33:57,679
you want to explore all the different

785
00:33:57,679 --> 00:33:58,640
paths

786
00:33:58,640 --> 00:34:02,320
and if you're including the ip address

787
00:34:02,320 --> 00:34:04,320
in your

788
00:34:04,320 --> 00:34:07,120
exploration in in your ecmp

789
00:34:07,120 --> 00:34:09,199
that would help

790
00:34:09,199 --> 00:34:12,879
so um that would be a little bit painful

791
00:34:12,879 --> 00:34:16,000
but we still have the ttl set to one

792
00:34:16,000 --> 00:34:18,239
so um thank you for pointing that out

793
00:34:18,239 --> 00:34:19,199
greg

794
00:34:19,199 --> 00:34:21,119
we will

795
00:34:21,119 --> 00:34:23,440
look at that and come back to you but um

796
00:34:23,440 --> 00:34:25,119
you know i i still think that we should

797
00:34:25,119 --> 00:34:27,679
remove this but uh ron and i will

798
00:34:27,679 --> 00:34:29,760
consult and hopefully the working group

799
00:34:29,760 --> 00:34:32,320
will also give us

800
00:34:32,320 --> 00:34:34,399
and actually it might be

801
00:34:34,399 --> 00:34:36,800
something that we can look at

802
00:34:36,800 --> 00:34:40,079
a recommendation of using this range

803
00:34:40,079 --> 00:34:42,000
in the documents and

804
00:34:42,000 --> 00:34:44,560
might be do some this and say don't use

805
00:34:44,560 --> 00:34:47,359
this range use just one single ipv6

806
00:34:47,359 --> 00:34:48,960
address

807
00:34:48,960 --> 00:34:49,760
oh

808
00:34:49,760 --> 00:34:51,599
yeah but then you don't get the entropy

809
00:34:51,599 --> 00:34:53,119
you don't get the

810
00:34:53,119 --> 00:34:54,159
you know the

811
00:34:54,159 --> 00:34:55,440
exploration

812
00:34:55,440 --> 00:34:57,760
use source port

813
00:34:57,760 --> 00:35:00,839
number true true

814
00:35:00,839 --> 00:35:04,320
okay thank you

815
00:35:04,720 --> 00:35:07,118
go ahead

816
00:35:08,960 --> 00:35:11,920
the question on

817
00:35:11,920 --> 00:35:14,720
which document you actually update

818
00:35:14,720 --> 00:35:17,280
you say in the

819
00:35:17,280 --> 00:35:20,640
graph that you're updating 75 or 6

820
00:35:20,640 --> 00:35:24,640
and 80 29 those are fairly obvious

821
00:35:24,640 --> 00:35:26,960
but in the paragraph above you say that

822
00:35:26,960 --> 00:35:30,400
rc 6398

823
00:35:30,400 --> 00:35:32,079
recommends

824
00:35:32,079 --> 00:35:34,800
to use this very carefully

825
00:35:34,800 --> 00:35:36,640
yes

826
00:35:36,640 --> 00:35:39,680
since you are removing the possibility

827
00:35:39,680 --> 00:35:41,599
to even be careful

828
00:35:41,599 --> 00:35:45,440
isn't 63.98 those are updated

829
00:35:45,440 --> 00:35:49,359
no 653.98 doesn't say says nothing about

830
00:35:49,359 --> 00:35:51,359
the particular use that we are talking

831
00:35:51,359 --> 00:35:52,480
about here

832
00:35:52,480 --> 00:35:55,359
it says in general router alert in ip

833
00:35:55,359 --> 00:35:57,760
packets is not a good idea especially

834
00:35:57,760 --> 00:35:59,599
across the internet

835
00:35:59,599 --> 00:36:03,599
so i don't believe that that's affected

836
00:36:03,599 --> 00:36:06,000
that is not the mpls

837
00:36:06,000 --> 00:36:07,119
drought

838
00:36:07,119 --> 00:36:09,359
that's what i'm saying no

839
00:36:09,359 --> 00:36:11,440
ah okay

840
00:36:11,440 --> 00:36:14,320
can you clarify that

841
00:36:14,320 --> 00:36:15,839
sure

842
00:36:15,839 --> 00:36:17,760
okay thanks

843
00:36:17,760 --> 00:36:19,599
okay thank you

844
00:36:19,599 --> 00:36:22,000
thanks thank you or kiriti we'll move uh

845
00:36:22,000 --> 00:36:25,040
to the next presentation and we have

846
00:36:25,040 --> 00:36:27,839
tony

847
00:36:30,880 --> 00:36:32,480
thank you

848
00:36:32,480 --> 00:36:36,160
i'll also give you the control to flip

849
00:36:36,160 --> 00:36:38,880
slides thank you

850
00:36:38,880 --> 00:36:41,200
so there are currently two proposals on

851
00:36:41,200 --> 00:36:43,920
the table for reusing eli

852
00:36:43,920 --> 00:36:44,720
uh

853
00:36:44,720 --> 00:36:48,160
for indicating the the miad structure

854
00:36:48,160 --> 00:36:50,560
um these are listed here these are both

855
00:36:50,560 --> 00:36:53,280
based on draft ukraine

856
00:36:53,280 --> 00:36:54,960
and i wanted to talk about that a little

857
00:36:54,960 --> 00:36:57,200
bit

858
00:36:57,359 --> 00:37:00,320
there are six claims of advantages for

859
00:37:00,320 --> 00:37:01,839
using eli

860
00:37:01,839 --> 00:37:04,000
i'm going to go through all of these in

861
00:37:04,000 --> 00:37:05,760
gory detail

862
00:37:05,760 --> 00:37:08,240
and let's talk and see if these claims

863
00:37:08,240 --> 00:37:11,040
are really true

864
00:37:12,560 --> 00:37:14,000
claim one

865
00:37:14,000 --> 00:37:16,560
we're going to get faster deployment in

866
00:37:16,560 --> 00:37:18,079
existing networks

867
00:37:18,079 --> 00:37:20,400
that already have el already deployed

868
00:37:20,400 --> 00:37:23,839
with an incremental benefit

869
00:37:24,000 --> 00:37:26,079
well what is our deployment critical

870
00:37:26,079 --> 00:37:27,920
path

871
00:37:27,920 --> 00:37:30,000
our working group convent needs to

872
00:37:30,000 --> 00:37:32,079
converge on what we're doing

873
00:37:32,079 --> 00:37:34,640
we've got software development

874
00:37:34,640 --> 00:37:36,560
we go forward right

875
00:37:36,560 --> 00:37:38,320
forwarding plan and signaling code we've

876
00:37:38,320 --> 00:37:40,480
got testing deployment it's probably

877
00:37:40,480 --> 00:37:42,480
going to take us about three years to

878
00:37:42,480 --> 00:37:45,200
get something deployed here

879
00:37:45,200 --> 00:37:47,680
uh the benefit of

880
00:37:47,680 --> 00:37:49,680
uh oh we've agreed we're doing

881
00:37:49,680 --> 00:37:51,760
incremental signaling changes

882
00:37:51,760 --> 00:37:54,720
so signaling is not a critical path

883
00:37:54,720 --> 00:37:58,400
so claim one is pretty inconsequential

884
00:37:58,400 --> 00:38:00,800
whether we use eli or different spl is

885
00:38:00,800 --> 00:38:04,200
not a big deal

886
00:38:05,040 --> 00:38:07,119
claim 2

887
00:38:07,119 --> 00:38:09,200
single label for entropy in the mpls

888
00:38:09,200 --> 00:38:10,320
header

889
00:38:10,320 --> 00:38:12,320
which helps keeping label stack size

890
00:38:12,320 --> 00:38:13,839
smaller

891
00:38:13,839 --> 00:38:16,640
well any proposal that includes entropy

892
00:38:16,640 --> 00:38:18,320
and me miata

893
00:38:18,320 --> 00:38:20,640
extension has the same property

894
00:38:20,640 --> 00:38:23,280
this is not specific to reusing eli

895
00:38:23,280 --> 00:38:26,400
this is clearly not true

896
00:38:28,320 --> 00:38:30,079
claim three

897
00:38:30,079 --> 00:38:32,240
when el is already enabled in the

898
00:38:32,240 --> 00:38:33,839
network the proposed scheme does not

899
00:38:33,839 --> 00:38:35,520
require hardware to support an

900
00:38:35,520 --> 00:38:38,320
additional spl indicator

901
00:38:38,320 --> 00:38:40,240
well new platforms that could have

902
00:38:40,240 --> 00:38:44,400
hard-coded me add support are years away

903
00:38:44,400 --> 00:38:46,400
having ubiquitous deployment of these is

904
00:38:46,400 --> 00:38:48,400
decades away

905
00:38:48,400 --> 00:38:50,160
most new platforms will have software

906
00:38:50,160 --> 00:38:52,640
driven npus

907
00:38:52,640 --> 00:38:54,720
miad must be supportable on legacy

908
00:38:54,720 --> 00:38:58,720
platforms there's no point otherwise

909
00:38:58,720 --> 00:39:01,599
so legacy platforms that will add me at

910
00:39:01,599 --> 00:39:03,839
support will not require hardware

911
00:39:03,839 --> 00:39:06,640
changes that's why their legacy

912
00:39:06,640 --> 00:39:09,280
so claim 3 is kind of irrelevant me and

913
00:39:09,280 --> 00:39:13,160
cannot wait for new hardware

914
00:39:14,960 --> 00:39:17,520
claim four

915
00:39:17,520 --> 00:39:19,920
save as a new special purpose label and

916
00:39:19,920 --> 00:39:20,640
b

917
00:39:20,640 --> 00:39:21,839
related pro

918
00:39:21,839 --> 00:39:23,440
protocol extensions to signal its

919
00:39:23,440 --> 00:39:27,760
capability in ldp rsvp yada yada yada et

920
00:39:27,760 --> 00:39:31,119
okay well this is to claim a reusing eli

921
00:39:31,119 --> 00:39:32,400
would save a

922
00:39:32,400 --> 00:39:33,760
spl

923
00:39:33,760 --> 00:39:36,240
but that creates risk it's not actually

924
00:39:36,240 --> 00:39:38,079
backward compatible

925
00:39:38,079 --> 00:39:41,200
um eli is expected to have one

926
00:39:41,200 --> 00:39:43,119
additional lse

927
00:39:43,119 --> 00:39:44,640
and adding more

928
00:39:44,640 --> 00:39:48,560
new lses for the isd after the eli is

929
00:39:48,560 --> 00:39:52,160
not going to be backward compatible

930
00:39:52,640 --> 00:39:53,760
part b

931
00:39:53,760 --> 00:39:55,520
we already have agreed that we're going

932
00:39:55,520 --> 00:39:57,599
to be doing additional signaling

933
00:39:57,599 --> 00:39:59,839
extensions

934
00:39:59,839 --> 00:40:02,240
so claim 4a is true but it's more than

935
00:40:02,240 --> 00:40:05,200
offset by the risk and claim 4b is

936
00:40:05,200 --> 00:40:08,000
inconsequential

937
00:40:09,440 --> 00:40:10,720
claim five

938
00:40:10,720 --> 00:40:12,720
an intermediate node can compute the

939
00:40:12,720 --> 00:40:15,839
ecmp hash with the el field and avoid

940
00:40:15,839 --> 00:40:18,079
inconsistent load balancing of traffic

941
00:40:18,079 --> 00:40:20,000
flow that can happen when an mpls

942
00:40:20,000 --> 00:40:23,599
extension header alters the label stack

943
00:40:23,599 --> 00:40:26,480
um assuming the ad includes el this is

944
00:40:26,480 --> 00:40:29,119
always true regardless of the spl

945
00:40:29,119 --> 00:40:32,800
so this is not actually true

946
00:40:34,240 --> 00:40:36,319
claim six

947
00:40:36,319 --> 00:40:38,800
this reduces the mpls label stack size

948
00:40:38,800 --> 00:40:41,839
when el is enabled for ecmp hashing when

949
00:40:41,839 --> 00:40:44,560
mpls extension header is also used as

950
00:40:44,560 --> 00:40:46,319
there is only one field for el in the

951
00:40:46,319 --> 00:40:48,319
mpls header it simplifies the mpls

952
00:40:48,319 --> 00:40:50,400
header processing

953
00:40:50,400 --> 00:40:54,480
well assuming our miad

954
00:40:54,800 --> 00:40:57,599
mechanism includes el this is always

955
00:40:57,599 --> 00:41:00,480
going to be true regardless of spl

956
00:41:00,480 --> 00:41:04,760
so claim 6 is also false

957
00:41:06,560 --> 00:41:08,480
turning now to another option that's

958
00:41:08,480 --> 00:41:10,480
listed

959
00:41:10,480 --> 00:41:12,560
there's a proposal that we use network

960
00:41:12,560 --> 00:41:17,119
programming labels npl for our spl

961
00:41:17,119 --> 00:41:18,880
we were not able to find the definition

962
00:41:18,880 --> 00:41:22,800
of npl in any itf document

963
00:41:22,800 --> 00:41:25,280
i was able to find a document on the web

964
00:41:25,280 --> 00:41:29,599
that suggests that npl is sr specific

965
00:41:29,599 --> 00:41:31,839
and we have

966
00:41:31,839 --> 00:41:33,440
already agreed that

967
00:41:33,440 --> 00:41:36,640
miad is not sr specific

968
00:41:36,640 --> 00:41:38,720
so this does not seem like an

969
00:41:38,720 --> 00:41:41,520
appropriate approach

970
00:41:41,520 --> 00:41:43,759
so

971
00:41:44,160 --> 00:41:45,280
all right

972
00:41:45,280 --> 00:41:47,839
so basic summary we should go ahead and

973
00:41:47,839 --> 00:41:51,680
use just a new spl for me at

974
00:41:51,680 --> 00:41:55,200
and i'll take questions

975
00:41:55,760 --> 00:41:58,920
go ahead

976
00:42:06,240 --> 00:42:07,520
rakesh

977
00:42:07,520 --> 00:42:09,520
yeah hi um

978
00:42:09,520 --> 00:42:11,680
so uh thanks tony for the presentation

979
00:42:11,680 --> 00:42:14,560
um uh unfortunately um

980
00:42:14,560 --> 00:42:17,440
i see uh most of the

981
00:42:17,440 --> 00:42:20,240
arguments against the claims are um

982
00:42:20,240 --> 00:42:22,319
false um

983
00:42:22,319 --> 00:42:23,040
and

984
00:42:23,040 --> 00:42:25,520
not not very analytical

985
00:42:25,520 --> 00:42:28,240
uh specifically for claim one about

986
00:42:28,240 --> 00:42:30,480
faster deployment and claim for about

987
00:42:30,480 --> 00:42:32,480
signaling extensions

988
00:42:32,480 --> 00:42:33,760
um

989
00:42:33,760 --> 00:42:36,000
if you look at the history entropy label

990
00:42:36,000 --> 00:42:39,040
was you know developed 10 years ago and

991
00:42:39,040 --> 00:42:40,960
we're still doing protocol extensions

992
00:42:40,960 --> 00:42:43,040
there is there are new drafts in pce and

993
00:42:43,040 --> 00:42:45,040
whatnot we're doing protocol extensions

994
00:42:45,040 --> 00:42:45,920
so

995
00:42:45,920 --> 00:42:47,839
uh should not underestimate the amount

996
00:42:47,839 --> 00:42:50,640
of work required for protocol extensions

997
00:42:50,640 --> 00:42:53,040
for new spl it will take another 10

998
00:42:53,040 --> 00:42:55,359
years for uspl if you look at the

999
00:42:55,359 --> 00:42:56,560
history

1000
00:42:56,560 --> 00:42:59,680
adding a one bit flag in the eli just to

1001
00:42:59,680 --> 00:43:02,800
say is me is capable is definitely a lot

1002
00:43:02,800 --> 00:43:04,000
less work

1003
00:43:04,000 --> 00:43:06,960
uh lost a lot less protocol work lot

1004
00:43:06,960 --> 00:43:08,800
less software development

1005
00:43:08,800 --> 00:43:11,520
easy to certify and deploy and less

1006
00:43:11,520 --> 00:43:15,040
impact on operators oss system as well

1007
00:43:15,040 --> 00:43:16,480
so um

1008
00:43:16,480 --> 00:43:18,079
i think it's definitely faster

1009
00:43:18,079 --> 00:43:20,160
deployment and it's also backwards

1010
00:43:20,160 --> 00:43:23,040
compatible because of that big

1011
00:43:23,040 --> 00:43:26,079
end cap node will not add any

1012
00:43:26,079 --> 00:43:28,400
ear life that will expose on the legacy

1013
00:43:28,400 --> 00:43:31,280
node so uh from that point of view it's

1014
00:43:31,280 --> 00:43:34,000
also a safe to go in brownfield network

1015
00:43:34,000 --> 00:43:36,880
so i think both conclusions for one and

1016
00:43:36,880 --> 00:43:39,119
four that you have are

1017
00:43:39,119 --> 00:43:42,720
completely false thank you

1018
00:43:42,720 --> 00:43:45,839
okay i disagree with you

1019
00:43:52,079 --> 00:43:53,440
you're next

1020
00:43:53,440 --> 00:43:55,119
yep um

1021
00:43:55,119 --> 00:43:57,200
okay on slide three

1022
00:43:57,200 --> 00:44:01,599
uh you note that the uh

1023
00:44:01,599 --> 00:44:02,800
of course the extension header

1024
00:44:02,800 --> 00:44:05,280
processing itself so then some any maya

1025
00:44:05,280 --> 00:44:06,960
wherever that formatted would is would

1026
00:44:06,960 --> 00:44:10,079
be done in microcode however i think the

1027
00:44:10,079 --> 00:44:12,800
i think the claim is really indicating

1028
00:44:12,800 --> 00:44:15,760
that the existing label stack walking

1029
00:44:15,760 --> 00:44:17,119
and

1030
00:44:17,119 --> 00:44:19,040
detection of an entropy label indicator

1031
00:44:19,040 --> 00:44:20,480
that spl

1032
00:44:20,480 --> 00:44:23,200
would remain the same i think that's the

1033
00:44:23,200 --> 00:44:25,440
important distinction there um so of

1034
00:44:25,440 --> 00:44:28,160
course we're gonna do whatever

1035
00:44:28,160 --> 00:44:30,880
uh miad processing uh that comes after

1036
00:44:30,880 --> 00:44:33,280
that in you know whatever a new software

1037
00:44:33,280 --> 00:44:35,520
implementation that would be built but

1038
00:44:35,520 --> 00:44:37,440
um you'd still

1039
00:44:37,440 --> 00:44:39,839
you'd still benefit from that uh eli

1040
00:44:39,839 --> 00:44:43,119
walk that you'd be doing anyway

1041
00:44:43,119 --> 00:44:44,400
i think most of these will probably have

1042
00:44:44,400 --> 00:44:45,920
to take the list but we can we can

1043
00:44:45,920 --> 00:44:47,760
continue that there tony i know there's

1044
00:44:47,760 --> 00:44:48,960
a long way

1045
00:44:48,960 --> 00:44:51,839
let's take it to the list

1046
00:44:53,040 --> 00:44:55,280
yeah thank you darren zafar do you want

1047
00:44:55,280 --> 00:44:58,240
to go with your question

1048
00:44:58,400 --> 00:45:01,440
uh so my comment is regarding the claim

1049
00:45:01,440 --> 00:45:02,400
two

1050
00:45:02,400 --> 00:45:07,280
slide five um the claim two

1051
00:45:07,280 --> 00:45:09,760
is correct as correct as two plus uh two

1052
00:45:09,760 --> 00:45:11,280
equals to four math

1053
00:45:11,280 --> 00:45:13,280
jack presentation and pulse working

1054
00:45:13,280 --> 00:45:15,680
group explained the point on how to

1055
00:45:15,680 --> 00:45:18,400
reuse el reduces the label stack size

1056
00:45:18,400 --> 00:45:19,520
very well

1057
00:45:19,520 --> 00:45:21,839
or reference that uh in fact is the

1058
00:45:21,839 --> 00:45:25,440
other one if you add a new spl you add

1059
00:45:25,440 --> 00:45:27,200
two additional label

1060
00:45:27,200 --> 00:45:29,760
and also carrying entropy

1061
00:45:29,760 --> 00:45:30,720
in

1062
00:45:30,720 --> 00:45:33,680
entropy and eo as well as spl mean you

1063
00:45:33,680 --> 00:45:36,079
are adding two additional label

1064
00:45:36,079 --> 00:45:38,800
uh in this track as well so i mean i i

1065
00:45:38,800 --> 00:45:42,240
don't see any way you can uh basically

1066
00:45:42,240 --> 00:45:44,640
support or or claim that claim two is

1067
00:45:44,640 --> 00:45:46,720
false

1068
00:45:46,720 --> 00:45:48,800
so we already have two other proposals

1069
00:45:48,800 --> 00:45:51,040
on the table where people are carrying

1070
00:45:51,040 --> 00:45:54,720
entropy using me ad inside of me ad

1071
00:45:54,720 --> 00:45:58,319
so the entropy label is not necessary

1072
00:45:58,319 --> 00:46:00,240
whatsoever you don't need a separate

1073
00:46:00,240 --> 00:46:03,598
instance of the entropy label

1074
00:46:04,079 --> 00:46:06,480
like uh going back to what vin mentioned

1075
00:46:06,480 --> 00:46:09,520
um during pals and what rakesh mentioned

1076
00:46:09,520 --> 00:46:11,760
um we have a

1077
00:46:11,760 --> 00:46:14,400
defined entropy label and it's not

1078
00:46:14,400 --> 00:46:16,480
fully and correctly deployed as of today

1079
00:46:16,480 --> 00:46:18,079
even so

1080
00:46:18,079 --> 00:46:20,160
assuming that you're going to migrate

1081
00:46:20,160 --> 00:46:22,800
everything uh to the new spl is just

1082
00:46:22,800 --> 00:46:26,720
visual thinking um and um

1083
00:46:26,720 --> 00:46:28,640
you have to deal with it and then you

1084
00:46:28,640 --> 00:46:31,119
will have to deal with the full label uh

1085
00:46:31,119 --> 00:46:34,400
pushing um so you have to carry for some

1086
00:46:34,400 --> 00:46:36,000
you have to carry for entropy label for

1087
00:46:36,000 --> 00:46:37,680
some node we have to carry

1088
00:46:37,680 --> 00:46:40,160
spi is just just a message it's just

1089
00:46:40,160 --> 00:46:42,000
full label you you will end up with four

1090
00:46:42,000 --> 00:46:43,760
labels you are married you are getting

1091
00:46:43,760 --> 00:46:46,160
married with full label uh stack uh for

1092
00:46:46,160 --> 00:46:48,240
for a simple thing so

1093
00:46:48,240 --> 00:46:52,160
uh this is please don't make such games

1094
00:46:52,160 --> 00:46:54,880
i disagree uh the things that are on the

1095
00:46:54,880 --> 00:46:58,079
table if you're using miat you have room

1096
00:46:58,079 --> 00:47:00,240
to put entropy in it and there's no

1097
00:47:00,240 --> 00:47:03,200
point in adding an entropy label too

1098
00:47:03,200 --> 00:47:06,720
and and then how would you do migration

1099
00:47:06,720 --> 00:47:09,760
uh all the legacy anyway but we can take

1100
00:47:09,760 --> 00:47:10,800
it off

1101
00:47:10,800 --> 00:47:13,119
all of this is doing me add everything

1102
00:47:13,119 --> 00:47:15,440
that assumes that we are doing me ad

1103
00:47:15,440 --> 00:47:18,400
already has signaling that uh we are

1104
00:47:18,400 --> 00:47:22,640
only selecting the ad capable routers

1105
00:47:22,880 --> 00:47:24,640
we can take it offline

1106
00:47:24,640 --> 00:47:26,559
all right thank you back to recently i

1107
00:47:26,559 --> 00:47:30,480
beg to disagree thank you so far bruno

1108
00:47:30,559 --> 00:47:32,400
can you go back to uh can you go back go

1109
00:47:32,400 --> 00:47:35,520
forward to slide 18 please

1110
00:47:35,520 --> 00:47:37,040
slide 18

1111
00:47:37,040 --> 00:47:39,760
yes last one

1112
00:47:39,760 --> 00:47:43,599
okay well in my backup slide yes sir

1113
00:47:43,599 --> 00:47:45,359
i have a clarification question which

1114
00:47:45,359 --> 00:47:47,200
may be cultural

1115
00:47:47,200 --> 00:47:49,200
i'm not sure what you have in mind by

1116
00:47:49,200 --> 00:47:51,440
the two words at best and would you

1117
00:47:51,440 --> 00:47:54,160
agree that we can say claims of backward

1118
00:47:54,160 --> 00:47:57,119
compatibility applies to draft or crime

1119
00:47:57,119 --> 00:47:58,160
yes

1120
00:47:58,160 --> 00:48:00,480
thank you i'll agree to that because

1121
00:48:00,480 --> 00:48:03,839
your draft does not add lses onto the

1122
00:48:03,839 --> 00:48:04,839
label

1123
00:48:04,839 --> 00:48:06,400
stack

1124
00:48:06,400 --> 00:48:09,200
i agree with you but uh i i i would have

1125
00:48:09,200 --> 00:48:10,400
uh

1126
00:48:10,400 --> 00:48:12,480
like that summary to be part of you the

1127
00:48:12,480 --> 00:48:13,920
summary you you

1128
00:48:13,920 --> 00:48:16,480
you showed us so much it's it's fair to

1129
00:48:16,480 --> 00:48:20,240
have it in the site thank you for that

1130
00:48:20,240 --> 00:48:23,919
thank you bruno and ketan

1131
00:48:24,160 --> 00:48:26,640
quick a couple of clarifications one is

1132
00:48:26,640 --> 00:48:27,760
uh

1133
00:48:27,760 --> 00:48:31,040
does the miad proposal plan to cover

1134
00:48:31,040 --> 00:48:32,160
entropy

1135
00:48:32,160 --> 00:48:35,040
and all other special labels that are uh

1136
00:48:35,040 --> 00:48:37,280
out there or is it just entropy and is

1137
00:48:37,280 --> 00:48:39,280
that something that was

1138
00:48:39,280 --> 00:48:40,880
been uh kind of agreed in the

1139
00:48:40,880 --> 00:48:43,040
requirements uh that

1140
00:48:43,040 --> 00:48:45,520
this is miaad would be encompassed

1141
00:48:45,520 --> 00:48:47,359
everything

1142
00:48:47,359 --> 00:48:49,040
while i can't speak to what all

1143
00:48:49,040 --> 00:48:51,119
proposals are going to do

1144
00:48:51,119 --> 00:48:53,920
um of the proposals i have seen

1145
00:48:53,920 --> 00:48:57,520
uh there are opportunities for adding

1146
00:48:57,520 --> 00:49:00,640
lots and lots of various things onto one

1147
00:49:00,640 --> 00:49:04,559
spo and i am assuming that we're going

1148
00:49:04,559 --> 00:49:07,359
to basically try to cram as much

1149
00:49:07,359 --> 00:49:11,359
functionality into one spl as we can

1150
00:49:11,359 --> 00:49:12,240
okay

1151
00:49:12,240 --> 00:49:14,640
which of those two could you refer to

1152
00:49:14,640 --> 00:49:16,960
that because i think i was able to see

1153
00:49:16,960 --> 00:49:20,079
it only in one proposal uh the jags

1154
00:49:20,079 --> 00:49:22,960
draft that covered entropy uh maybe i

1155
00:49:22,960 --> 00:49:26,559
missed the other which and then

1156
00:49:26,559 --> 00:49:29,599
for fai also has carries entropy

1157
00:49:29,599 --> 00:49:30,480
okay

1158
00:49:30,480 --> 00:49:31,599
and uh

1159
00:49:31,599 --> 00:49:33,760
second clarifying question uh or last

1160
00:49:33,760 --> 00:49:36,559
second and last uh this is about

1161
00:49:36,559 --> 00:49:39,200
miad right i wanted to know your views

1162
00:49:39,200 --> 00:49:40,079
on

1163
00:49:40,079 --> 00:49:41,280
uh

1164
00:49:41,280 --> 00:49:43,760
the draft decline

1165
00:49:43,760 --> 00:49:45,599
and what it proposes

1166
00:49:45,599 --> 00:49:49,520
and do you see any problems with that

1167
00:49:49,520 --> 00:49:52,960
um so i have no problems with that

1168
00:49:52,960 --> 00:49:54,720
okay thank you

1169
00:49:54,720 --> 00:49:59,319
okay thank you lola

1170
00:50:07,760 --> 00:50:08,640
and

1171
00:50:08,640 --> 00:50:10,559
i would very much welcome and draft

1172
00:50:10,559 --> 00:50:12,640
unless

1173
00:50:12,640 --> 00:50:15,280
it's so much easier to

1174
00:50:15,280 --> 00:50:18,000
discuss the working group if we have

1175
00:50:18,000 --> 00:50:19,680
oral saying the sun team if you have

1176
00:50:19,680 --> 00:50:22,160
addressed

1177
00:50:22,880 --> 00:50:24,880
since this appears to be controversial i

1178
00:50:24,880 --> 00:50:28,400
would be happy to write a draft

1179
00:50:29,920 --> 00:50:32,160
okay

1180
00:50:35,200 --> 00:50:37,440
yeah so i i also wanted to clarify but i

1181
00:50:37,440 --> 00:50:39,119
think in the meantime it's done i think

1182
00:50:39,119 --> 00:50:40,880
the most of the statements are not in

1183
00:50:40,880 --> 00:50:43,280
the context of bruno's draft but

1184
00:50:43,280 --> 00:50:45,040
actually on all the extension that has

1185
00:50:45,040 --> 00:50:46,960
been proposed on top of that but i

1186
00:50:46,960 --> 00:50:50,000
wanted to repeat once

1187
00:50:50,319 --> 00:50:52,960
your voice is very faint uh can you

1188
00:50:52,960 --> 00:50:54,880
repeat is this better

1189
00:50:54,880 --> 00:50:57,359
now it's little bit better yeah go ahead

1190
00:50:57,359 --> 00:50:58,800
wait

1191
00:50:58,800 --> 00:51:00,480
is this better

1192
00:51:00,480 --> 00:51:01,839
no

1193
00:51:01,839 --> 00:51:02,960
okay

1194
00:51:02,960 --> 00:51:04,400
avoid the mask

1195
00:51:04,400 --> 00:51:06,160
what i was trying to say is also clarify

1196
00:51:06,160 --> 00:51:07,839
that that most of the claims are not in

1197
00:51:07,839 --> 00:51:10,000
the context of bruno and because where

1198
00:51:10,000 --> 00:51:11,680
i'm coming from is the following tony

1199
00:51:11,680 --> 00:51:12,800
right so

1200
00:51:12,800 --> 00:51:13,680
we have

1201
00:51:13,680 --> 00:51:16,240
uh i in my view we have learned from the

1202
00:51:16,240 --> 00:51:18,240
past and i take the example of ib4 and

1203
00:51:18,240 --> 00:51:20,720
ipv6 which is maybe not the right

1204
00:51:20,720 --> 00:51:24,160
context but if we change too many things

1205
00:51:24,160 --> 00:51:26,000
it's going to take a long time before

1206
00:51:26,000 --> 00:51:27,599
it's adopted and i think you alluded to

1207
00:51:27,599 --> 00:51:29,680
some of your claims in

1208
00:51:29,680 --> 00:51:31,440
the presentation

1209
00:51:31,440 --> 00:51:34,319
and we have to probably segment the

1210
00:51:34,319 --> 00:51:36,480
extensions that we want to do in mpls in

1211
00:51:36,480 --> 00:51:37,440
two

1212
00:51:37,440 --> 00:51:40,160
phases in my view right one is what can

1213
00:51:40,160 --> 00:51:41,200
we do

1214
00:51:41,200 --> 00:51:43,040
with the minimum effort

1215
00:51:43,040 --> 00:51:46,000
and i in any proposal uh i do agree that

1216
00:51:46,000 --> 00:51:47,920
we have to do micro code change but we

1217
00:51:47,920 --> 00:51:50,800
have to see with the legacy systems that

1218
00:51:50,800 --> 00:51:51,760
we have

1219
00:51:51,760 --> 00:51:55,359
what type of extensions can we support

1220
00:51:55,359 --> 00:51:57,680
using that legacy hardware if you will

1221
00:51:57,680 --> 00:52:00,079
which in any form or anything that we

1222
00:52:00,079 --> 00:52:02,000
are proposing we'll need to do an

1223
00:52:02,000 --> 00:52:04,160
upgrade right so i'm not disputing any

1224
00:52:04,160 --> 00:52:07,040
of that but i believe we have to segment

1225
00:52:07,040 --> 00:52:09,040
the let's say the

1226
00:52:09,040 --> 00:52:11,040
implementations in two phases one is

1227
00:52:11,040 --> 00:52:13,920
what i call maybe a minimum set that

1228
00:52:13,920 --> 00:52:16,319
allows us to have something fairly

1229
00:52:16,319 --> 00:52:18,720
quickly and fairly quickly means and i

1230
00:52:18,720 --> 00:52:20,880
do don't disagree with you three

1231
00:52:20,880 --> 00:52:22,559
three-ish years maybe a little bit

1232
00:52:22,559 --> 00:52:23,760
longer

1233
00:52:23,760 --> 00:52:26,240
but and then have maybe something on

1234
00:52:26,240 --> 00:52:28,640
which is much more extensible and look

1235
00:52:28,640 --> 00:52:31,200
at what that would mean and i would like

1236
00:52:31,200 --> 00:52:33,920
us to segment the problem spaces in

1237
00:52:33,920 --> 00:52:36,079
those two categories because otherwise

1238
00:52:36,079 --> 00:52:38,880
we might ball the ocean and takes us

1239
00:52:38,880 --> 00:52:40,480
years before

1240
00:52:40,480 --> 00:52:43,680
we get anything and i gave the example

1241
00:52:43,680 --> 00:52:44,640
uh

1242
00:52:44,640 --> 00:52:47,280
in the morning session about the entropy

1243
00:52:47,280 --> 00:52:48,240
label

1244
00:52:48,240 --> 00:52:51,040
just to give you an indication i read

1245
00:52:51,040 --> 00:52:52,559
i went back to the draft the

1246
00:52:52,559 --> 00:52:54,559
specification was 10 years ago that we

1247
00:52:54,559 --> 00:52:56,960
have rfc and i can tell you today there

1248
00:52:56,960 --> 00:52:59,280
is still a bunch of networks that do not

1249
00:52:59,280 --> 00:53:00,720
support it

1250
00:53:00,720 --> 00:53:02,559
okay

1251
00:53:02,559 --> 00:53:04,880
well there's no question that they're

1252
00:53:04,880 --> 00:53:05,839
taking

1253
00:53:05,839 --> 00:53:07,760
it's going to take some time for me ed

1254
00:53:07,760 --> 00:53:10,400
to get adopted and get out there and

1255
00:53:10,400 --> 00:53:13,040
there's no question that having all the

1256
00:53:13,040 --> 00:53:14,400
functions is going to take an

1257
00:53:14,400 --> 00:53:16,559
arbitrarily long amount of time

1258
00:53:16,559 --> 00:53:18,800
the only question on the table really is

1259
00:53:18,800 --> 00:53:22,480
does reusing eli save us time in getting

1260
00:53:22,480 --> 00:53:23,920
deployed

1261
00:53:23,920 --> 00:53:26,000
and i don't see that it does anything

1262
00:53:26,000 --> 00:53:28,960
towards that

1263
00:53:28,960 --> 00:53:31,040
my point only is for for a minimum set

1264
00:53:31,040 --> 00:53:34,480
of functionality i think it does

1265
00:53:34,480 --> 00:53:36,559
okay well somebody needs to explain that

1266
00:53:36,559 --> 00:53:38,559
because i don't see that it matters one

1267
00:53:38,559 --> 00:53:40,240
way

1268
00:53:40,240 --> 00:53:42,000
i think bruno's draft does that in my

1269
00:53:42,000 --> 00:53:43,680
view

1270
00:53:43,680 --> 00:53:45,680
bruno's draft doesn't lie because

1271
00:53:45,680 --> 00:53:47,440
bruno's draft is only talking about

1272
00:53:47,440 --> 00:53:50,559
cases where we can just reuse eli and

1273
00:53:50,559 --> 00:53:54,960
not add additional lse still onto

1274
00:53:55,280 --> 00:53:56,480
set of it

1275
00:53:56,480 --> 00:53:59,280
without doing uh uh

1276
00:53:59,280 --> 00:54:02,319
can we take it to the list when uh um

1277
00:54:02,319 --> 00:54:04,240
all right thank you uh running out of

1278
00:54:04,240 --> 00:54:07,200
time i i do want uh it's not a question

1279
00:54:07,200 --> 00:54:10,160
tony it's just a sharing a concern we

1280
00:54:10,160 --> 00:54:13,200
said ancillary data can change along

1281
00:54:13,200 --> 00:54:15,680
the path of the packet

1282
00:54:15,680 --> 00:54:18,079
if we put ancillary data in the entropy

1283
00:54:18,079 --> 00:54:19,200
label

1284
00:54:19,200 --> 00:54:21,520
then it will break hashing maybe you

1285
00:54:21,520 --> 00:54:24,400
mentioned this or touched upon it but

1286
00:54:24,400 --> 00:54:26,640
yeah quickly that's it that's my comment

1287
00:54:26,640 --> 00:54:27,599
okay

1288
00:54:27,599 --> 00:54:29,280
kiriti if you can make it very quick

1289
00:54:29,280 --> 00:54:30,480
please

1290
00:54:30,480 --> 00:54:32,400
we are eating so

1291
00:54:32,400 --> 00:54:35,760
first um first comment is that um

1292
00:54:35,760 --> 00:54:37,440
thank you um

1293
00:54:37,440 --> 00:54:39,599
tony stewart and john

1294
00:54:39,599 --> 00:54:42,559
for this i think it's very important

1295
00:54:42,559 --> 00:54:44,720
second thing is i wish you had spoken up

1296
00:54:44,720 --> 00:54:48,319
at the pals joint meeting

1297
00:54:48,319 --> 00:54:51,839
and third is um if we do this hack and

1298
00:54:51,839 --> 00:54:54,400
even bruno's draft consider for me

1299
00:54:54,400 --> 00:54:56,079
constitutes a hack

1300
00:54:56,079 --> 00:54:58,480
um we're not making forward progress um

1301
00:54:58,480 --> 00:55:00,480
we really want to make forward progress

1302
00:55:00,480 --> 00:55:03,440
in mpls thank you

1303
00:55:03,440 --> 00:55:04,880
okay

1304
00:55:04,880 --> 00:55:07,280
thank you and i'll switch right away to

1305
00:55:07,280 --> 00:55:09,680
the next set of slides

1306
00:55:09,680 --> 00:55:10,559
um

1307
00:55:10,559 --> 00:55:12,799
by you i think

1308
00:55:12,799 --> 00:55:15,680
it's extension headers

1309
00:55:15,680 --> 00:55:17,919
um

1310
00:55:18,160 --> 00:55:20,000
try to give you the time that you asked

1311
00:55:20,000 --> 00:55:22,079
for it but we will go over time go ahead

1312
00:55:22,079 --> 00:55:25,599
or you yeah uh thank you yeah so i have

1313
00:55:25,599 --> 00:55:28,960
probably five minutes to cover this uh

1314
00:55:28,960 --> 00:55:30,000
slice

1315
00:55:30,000 --> 00:55:32,640
and i i will be uh on behalf of

1316
00:55:32,640 --> 00:55:33,599
our

1317
00:55:33,599 --> 00:55:38,079
to give an overview of a set of related

1318
00:55:38,079 --> 00:55:39,520
drafts

1319
00:55:39,520 --> 00:55:41,359
centered on the theme

1320
00:55:41,359 --> 00:55:44,400
for mprs extension headers to enable

1321
00:55:44,400 --> 00:55:46,720
extensible in-network services in nps

1322
00:55:46,720 --> 00:55:48,799
networks

1323
00:55:48,799 --> 00:55:49,680
um

1324
00:55:49,680 --> 00:55:52,558
next slice can

1325
00:55:55,359 --> 00:55:57,760
yeah first a little bit history uh we

1326
00:55:57,760 --> 00:56:02,240
started his work in uh middle of 2018

1327
00:56:02,240 --> 00:56:04,720
and um

1328
00:56:04,720 --> 00:56:06,960
after that this has been involved a lot

1329
00:56:06,960 --> 00:56:09,359
uh today it's already the version zero

1330
00:56:09,359 --> 00:56:14,240
six and uh also uh later in 2019 we

1331
00:56:14,240 --> 00:56:17,520
decided to split the document and spin

1332
00:56:17,520 --> 00:56:19,359
off a part

1333
00:56:19,359 --> 00:56:22,079
to discuss options for the exchange

1334
00:56:22,079 --> 00:56:24,000
header indicator

1335
00:56:24,000 --> 00:56:27,040
and also we have two other

1336
00:56:27,040 --> 00:56:30,240
documents covering the architecture

1337
00:56:30,240 --> 00:56:32,160
network architecture of using extension

1338
00:56:32,160 --> 00:56:33,760
headers and

1339
00:56:33,760 --> 00:56:35,040
some other

1340
00:56:35,040 --> 00:56:38,559
operational optimizations to

1341
00:56:38,559 --> 00:56:39,760
make the

1342
00:56:39,760 --> 00:56:42,240
processing faster

1343
00:56:42,240 --> 00:56:45,720
so next slice

1344
00:56:46,880 --> 00:56:49,680
so the basic motivation for this work is

1345
00:56:49,680 --> 00:56:52,240
that we have seen uh recently there are

1346
00:56:52,240 --> 00:56:54,720
a lot of uh in-network services

1347
00:56:54,720 --> 00:56:57,599
our user packages are introduced

1348
00:56:57,599 --> 00:57:01,359
this in these use cases include in-situm

1349
00:57:01,359 --> 00:57:03,440
network slicing service function

1350
00:57:03,440 --> 00:57:04,400
chaining

1351
00:57:04,400 --> 00:57:07,040
uh multicast segmentality and network

1352
00:57:07,040 --> 00:57:08,400
programming

1353
00:57:08,400 --> 00:57:10,400
we can see some common requirements to

1354
00:57:10,400 --> 00:57:11,520
this

1355
00:57:11,520 --> 00:57:12,880
applications

1356
00:57:12,880 --> 00:57:14,079
first

1357
00:57:14,079 --> 00:57:17,119
we do need to encapsulate some actual

1358
00:57:17,119 --> 00:57:19,359
instruction header or metadata in user

1359
00:57:19,359 --> 00:57:20,720
package

1360
00:57:20,720 --> 00:57:23,440
and also these headers

1361
00:57:23,440 --> 00:57:25,440
are needed to be added removed or

1362
00:57:25,440 --> 00:57:26,880
processed

1363
00:57:26,880 --> 00:57:29,520
totally within the network

1364
00:57:29,520 --> 00:57:30,960
and also

1365
00:57:30,960 --> 00:57:31,839
these

1366
00:57:31,839 --> 00:57:34,319
applications are mostly orthogonal which

1367
00:57:34,319 --> 00:57:36,799
means multiple such applications may be

1368
00:57:36,799 --> 00:57:38,720
stacked together

1369
00:57:38,720 --> 00:57:43,119
in uh and coexisted in a single package

1370
00:57:43,119 --> 00:57:45,599
and also uh since they are applied to

1371
00:57:45,599 --> 00:57:48,480
user package uh they they should support

1372
00:57:48,480 --> 00:57:50,960
fast data planning processing that's a

1373
00:57:50,960 --> 00:57:52,799
requirement a performance requirement we

1374
00:57:52,799 --> 00:57:54,880
need to care about

1375
00:57:54,880 --> 00:57:57,920
and so so now the issue is that uh we so

1376
00:57:57,920 --> 00:58:00,000
we should also consider to support these

1377
00:58:00,000 --> 00:58:03,040
new applications uh in nps network

1378
00:58:03,040 --> 00:58:05,200
therefore we have this work next next

1379
00:58:05,200 --> 00:58:08,520
slides please

1380
00:58:11,280 --> 00:58:13,839
yeah so solution is a ips extension

1381
00:58:13,839 --> 00:58:16,400
header and we shall stop designing

1382
00:58:16,400 --> 00:58:18,720
piecemeal and incompatible solutions

1383
00:58:18,720 --> 00:58:21,200
which competes the same resource

1384
00:58:21,200 --> 00:58:23,839
we have seen several proposals uh just

1385
00:58:23,839 --> 00:58:26,079
like this they um

1386
00:58:26,079 --> 00:58:27,040
they

1387
00:58:27,040 --> 00:58:29,599
specify some new special purpose label

1388
00:58:29,599 --> 00:58:31,440
and they claim the

1389
00:58:31,440 --> 00:58:33,920
location after the label stack to

1390
00:58:33,920 --> 00:58:34,480
fit

1391
00:58:34,480 --> 00:58:35,680
[Music]

1392
00:58:35,680 --> 00:58:38,319
actual header and metadata

1393
00:58:38,319 --> 00:58:40,319
but if you consider multiple such

1394
00:58:40,319 --> 00:58:42,960
applications to be applied at the same

1395
00:58:42,960 --> 00:58:45,680
time there will be um

1396
00:58:45,680 --> 00:58:48,319
there'll be issues about that so we

1397
00:58:48,319 --> 00:58:50,640
should have a generic framework once for

1398
00:58:50,640 --> 00:58:54,480
all so the in this uh proposals we have

1399
00:58:54,480 --> 00:58:57,040
this extension headers uh we will put

1400
00:58:57,040 --> 00:58:59,359
this extended headers between the nps

1401
00:58:59,359 --> 00:59:03,200
label stack and the payload and the

1402
00:59:03,200 --> 00:59:05,599
the in stack indicator to tell you have

1403
00:59:05,599 --> 00:59:08,000
this uh effective headers

1404
00:59:08,000 --> 00:59:10,799
so except header is not new it's already

1405
00:59:10,799 --> 00:59:13,839
been uh used in ipv6 but there are some

1406
00:59:13,839 --> 00:59:16,160
issues about ipv6 there's a header we

1407
00:59:16,160 --> 00:59:17,119
should

1408
00:59:17,119 --> 00:59:19,200
learn some lessons from that

1409
00:59:19,200 --> 00:59:22,240
the first that uh that for ipv6 the

1410
00:59:22,240 --> 00:59:23,680
extent header

1411
00:59:23,680 --> 00:59:26,000
can only be added and removed by the end

1412
00:59:26,000 --> 00:59:29,119
host but here clearly we need to support

1413
00:59:29,119 --> 00:59:32,559
in network adding and remove

1414
00:59:32,559 --> 00:59:34,640
and also

1415
00:59:34,640 --> 00:59:37,040
in ipv6 there's only one hotbed hub

1416
00:59:37,040 --> 00:59:39,920
header is allowed so which means if you

1417
00:59:39,920 --> 00:59:42,960
you have multiple hbh functions you have

1418
00:59:42,960 --> 00:59:45,119
to put all of them as options in the

1419
00:59:45,119 --> 00:59:47,680
single hp hd header therefore you create

1420
00:59:47,680 --> 00:59:50,079
a hierarchical structure

1421
00:59:50,079 --> 00:59:52,799
so but for the simplicity simplicity we

1422
00:59:52,799 --> 00:59:53,839
should

1423
00:59:53,839 --> 00:59:57,599
allow multiple hbh headers together to

1424
00:59:57,599 --> 01:00:00,640
be chained so we will have a flat uh

1425
01:00:00,640 --> 01:00:02,720
structure for processing

1426
01:00:02,720 --> 01:00:05,680
and also uh for ipv6 we need to scan

1427
01:00:05,680 --> 01:00:08,160
through the other extension header to

1428
01:00:08,160 --> 01:00:11,119
reach the original layer for headers

1429
01:00:11,119 --> 01:00:13,760
it can be slow if so

1430
01:00:13,760 --> 01:00:16,799
so here we should allow the um we can

1431
01:00:16,799 --> 01:00:18,799
skip all the exchange headers in just

1432
01:00:18,799 --> 01:00:21,760
one step to access a layer for headers

1433
01:00:21,760 --> 01:00:23,359
if needed

1434
01:00:23,359 --> 01:00:25,680
and in ipv6 says

1435
01:00:25,680 --> 01:00:28,640
if you meet no exchange headers it will

1436
01:00:28,640 --> 01:00:31,440
drop the package here we should you know

1437
01:00:31,440 --> 01:00:34,319
uh just ignore no uh exchange headers

1438
01:00:34,319 --> 01:00:36,640
and still keep forwarding the package

1439
01:00:36,640 --> 01:00:37,440
just

1440
01:00:37,440 --> 01:00:40,720
make sure uh you know the for the combat

1441
01:00:40,720 --> 01:00:43,200
compatibility issues

1442
01:00:43,200 --> 01:00:46,880
and also for ipv6 this has extension

1443
01:00:46,880 --> 01:00:49,520
header is not necessarily for past pa

1444
01:00:49,520 --> 01:00:52,799
fastpass processing but here we should

1445
01:00:52,799 --> 01:00:55,200
optimize for data playing fastpass

1446
01:00:55,200 --> 01:00:56,640
processing

1447
01:00:56,640 --> 01:00:59,359
so next slice

1448
01:01:03,760 --> 01:01:06,160
yeah so i think the the high level

1449
01:01:06,160 --> 01:01:08,160
requirement is a flexibility

1450
01:01:08,160 --> 01:01:10,160
extensibility performance and the

1451
01:01:10,160 --> 01:01:12,400
backward compatibility

1452
01:01:12,400 --> 01:01:14,640
uh maybe we can just go the next slides

1453
01:01:14,640 --> 01:01:16,160
to

1454
01:01:16,160 --> 01:01:18,079
um quickly wreck about

1455
01:01:18,079 --> 01:01:20,960
okay so this slides summarize

1456
01:01:20,960 --> 01:01:23,119
all the possible options for the

1457
01:01:23,119 --> 01:01:26,240
indicator in stack indicator

1458
01:01:26,240 --> 01:01:28,960
you can see here we have a four uh group

1459
01:01:28,960 --> 01:01:31,920
of possible solutions which cover uh all

1460
01:01:31,920 --> 01:01:34,079
the um

1461
01:01:34,079 --> 01:01:36,960
possibilities on as i think in other

1462
01:01:36,960 --> 01:01:40,160
talks these are discussed today

1463
01:01:40,160 --> 01:01:43,040
but there are some uh conclusions from

1464
01:01:43,040 --> 01:01:43,920
the

1465
01:01:43,920 --> 01:01:45,280
open dt

1466
01:01:45,280 --> 01:01:48,160
uh we will not go to the gale

1467
01:01:48,160 --> 01:01:50,000
gsh pass

1468
01:01:50,000 --> 01:01:52,240
and also

1469
01:01:52,240 --> 01:01:54,480
in this job to be indicated that we

1470
01:01:54,480 --> 01:01:57,039
prefer to use a single special purpose

1471
01:01:57,039 --> 01:01:59,839
label as an indicator

1472
01:01:59,839 --> 01:02:03,078
next slice

1473
01:02:08,319 --> 01:02:10,880
um maybe we just give the details next

1474
01:02:10,880 --> 01:02:13,599
slice this is uh how we specify the

1475
01:02:13,599 --> 01:02:15,359
special purpose label

1476
01:02:15,359 --> 01:02:17,680
and for the extension headers

1477
01:02:17,680 --> 01:02:19,839
sorry i just wanted to let you know for

1478
01:02:19,839 --> 01:02:21,520
you if you can

1479
01:02:21,520 --> 01:02:23,680
um you know summarize what you want to

1480
01:02:23,680 --> 01:02:26,640
say uh we are over time but i'll i

1481
01:02:26,640 --> 01:02:28,640
promise to give you some time and i

1482
01:02:28,640 --> 01:02:30,480
think meet echo will not close the

1483
01:02:30,480 --> 01:02:31,599
session

1484
01:02:31,599 --> 01:02:34,480
uh yeah okay then um

1485
01:02:34,480 --> 01:02:37,680
okay um let me just escape this

1486
01:02:37,680 --> 01:02:40,000
we are on slide eight right now

1487
01:02:40,000 --> 01:02:43,839
it uh extension header right um

1488
01:02:43,839 --> 01:02:46,960
yeah yeah um so

1489
01:02:46,960 --> 01:02:48,799
we we we could support multiple

1490
01:02:48,799 --> 01:02:51,039
extension headers in one package and we

1491
01:02:51,039 --> 01:02:53,359
simply change them together

1492
01:02:53,359 --> 01:02:56,559
and we also uh use the next header type

1493
01:02:56,559 --> 01:02:59,440
to indicate the next extension header uh

1494
01:02:59,440 --> 01:03:01,200
we have some several special next

1495
01:03:01,200 --> 01:03:03,280
headers are provisioned to support

1496
01:03:03,280 --> 01:03:06,480
different cases for example noun means

1497
01:03:06,480 --> 01:03:09,119
there's no further extension headers

1498
01:03:09,119 --> 01:03:11,440
and unknown means this is a lasting

1499
01:03:11,440 --> 01:03:13,839
stage header and the following is a

1500
01:03:13,839 --> 01:03:16,160
payload and but with type of it we don't

1501
01:03:16,160 --> 01:03:19,280
know and nps means there's another nps

1502
01:03:19,280 --> 01:03:21,039
label stack follows the current

1503
01:03:21,039 --> 01:03:22,960
extension header

1504
01:03:22,960 --> 01:03:24,400
um

1505
01:03:24,400 --> 01:03:27,359
also we support

1506
01:03:27,920 --> 01:03:30,640
edge to edge and the hobbyhop

1507
01:03:30,640 --> 01:03:32,640
type of extension headers and the hit

1508
01:03:32,640 --> 01:03:35,760
hop i hope headers will be always put

1509
01:03:35,760 --> 01:03:38,960
in front of the actual edge headers for

1510
01:03:38,960 --> 01:03:41,200
the purpose of performance

1511
01:03:41,200 --> 01:03:44,439
next slides

1512
01:03:44,480 --> 01:03:46,240
yeah this is the details that you can

1513
01:03:46,240 --> 01:03:49,520
find in our draft on how how we define

1514
01:03:49,520 --> 01:03:52,160
the format of this exchange headers um

1515
01:03:52,160 --> 01:03:55,039
you can see that basically the structure

1516
01:03:55,039 --> 01:03:59,119
is very similar to the ipv6 exchange

1517
01:03:59,119 --> 01:04:01,280
header but with some extra

1518
01:04:01,280 --> 01:04:03,440
information about that

1519
01:04:03,440 --> 01:04:06,079
next slides

1520
01:04:07,680 --> 01:04:09,119
maybe this uh

1521
01:04:09,119 --> 01:04:11,760
more details about how to optimize the

1522
01:04:11,760 --> 01:04:15,359
operation you can refer to our drafts

1523
01:04:15,359 --> 01:04:19,680
for the details next slides

1524
01:04:20,319 --> 01:04:21,839
yeah so here's some hardware

1525
01:04:21,839 --> 01:04:23,920
implementation consideration because we

1526
01:04:23,920 --> 01:04:26,720
need to make sure it works in the faster

1527
01:04:26,720 --> 01:04:28,240
path

1528
01:04:28,240 --> 01:04:30,160
therefore we should design for

1529
01:04:30,160 --> 01:04:32,559
simplicity and performance

1530
01:04:32,559 --> 01:04:34,799
and we believe a simple postdeck

1531
01:04:34,799 --> 01:04:37,839
extension extension header chin

1532
01:04:37,839 --> 01:04:40,720
with a simple indicator in instant

1533
01:04:40,720 --> 01:04:42,400
indicator

1534
01:04:42,400 --> 01:04:45,280
it's a most simple simplest way uh which

1535
01:04:45,280 --> 01:04:48,400
can minimize uh password uh

1536
01:04:48,400 --> 01:04:51,280
uh for finite state machine and also the

1537
01:04:51,280 --> 01:04:52,799
steps

1538
01:04:52,799 --> 01:04:55,200
which can which is good for both storage

1539
01:04:55,200 --> 01:04:58,799
and the latency and as i said before we

1540
01:04:58,799 --> 01:05:02,640
uh put the hbh headers before the

1541
01:05:02,640 --> 01:05:05,440
e3 headers uh so to maximize the

1542
01:05:05,440 --> 01:05:08,160
usability uh given the limited header

1543
01:05:08,160 --> 01:05:09,599
buffer size

1544
01:05:09,599 --> 01:05:12,160
and also we prefer to put the extension

1545
01:05:12,160 --> 01:05:15,280
header indicator at the bottom stack for

1546
01:05:15,280 --> 01:05:18,480
simplicity and backward compatibility

1547
01:05:18,480 --> 01:05:19,760
and uh

1548
01:05:19,760 --> 01:05:22,960
we have we could use a the fvc labels to

1549
01:05:22,960 --> 01:05:26,319
avoid unnecessary label stack scanning

1550
01:05:26,319 --> 01:05:29,359
i just escaped this slide so you can

1551
01:05:29,359 --> 01:05:30,480
read our

1552
01:05:30,480 --> 01:05:34,480
jobs for more details next slide

1553
01:05:34,480 --> 01:05:37,200
so the summaries we um believe stage

1554
01:05:37,200 --> 01:05:40,000
header is a generic solution for nprc

1555
01:05:40,000 --> 01:05:41,520
natural services

1556
01:05:41,520 --> 01:05:44,240
uh it's built on a common uh industry

1557
01:05:44,240 --> 01:05:46,240
practice and the key performance

1558
01:05:46,240 --> 01:05:50,000
flexibility and extensibility is in mind

1559
01:05:50,000 --> 01:05:52,240
it's also very compelling for npr's

1560
01:05:52,240 --> 01:05:54,319
network because i'm ps label stack

1561
01:05:54,319 --> 01:05:57,280
overhead is much smaller than ipv6 and

1562
01:05:57,280 --> 01:05:59,280
it's a protocol independent can

1563
01:05:59,280 --> 01:06:02,480
encapsulate virus protocols and also we

1564
01:06:02,480 --> 01:06:04,880
don't have too much history burden

1565
01:06:04,880 --> 01:06:06,640
like ipv6

1566
01:06:06,640 --> 01:06:09,839
we have more freedom for innovations

1567
01:06:09,839 --> 01:06:12,240
thank you let's not miss all my sites

1568
01:06:12,240 --> 01:06:14,319
okay thank you

1569
01:06:14,319 --> 01:06:16,640
we don't have much time actually with

1570
01:06:16,640 --> 01:06:19,039
overtime and i did close the queue

1571
01:06:19,039 --> 01:06:19,920
um

1572
01:06:19,920 --> 01:06:22,079
i have any questions please take it to

1573
01:06:22,079 --> 01:06:24,319
the email list and at this time i will

1574
01:06:24,319 --> 01:06:26,319
ask my co-chairs if there's anything

1575
01:06:26,319 --> 01:06:27,359
else

1576
01:06:27,359 --> 01:06:29,920
they want to share before we close

1577
01:06:29,920 --> 01:06:33,160
this session

1578
01:06:36,000 --> 01:06:38,480
uh lower you want to speak

1579
01:06:38,480 --> 01:06:43,640
i see that you have the mic on

1580
01:06:51,839 --> 01:06:53,280
i don't think i don't know if you can

1581
01:06:53,280 --> 01:06:54,720
hear me

1582
01:06:54,720 --> 01:06:57,599
no i can now i can okay

1583
01:06:57,599 --> 01:07:00,400
i say i think it's fine to close

1584
01:07:00,400 --> 01:07:01,280
okay

1585
01:07:01,280 --> 01:07:02,880
all right thank you so much for a very

1586
01:07:02,880 --> 01:07:04,799
productive session

1587
01:07:04,799 --> 01:07:08,240
um we will uh we'll see you next ietf or

1588
01:07:08,240 --> 01:07:11,119
even the design team weekly meeting

1589
01:07:11,119 --> 01:07:14,319
thanks a lot

1590
01:07:14,319 --> 01:07:17,880
thank you bye-bye

1591
01:07:30,480 --> 01:07:32,559
you

