1
00:00:46,719 --> 00:00:48,239
hi everyone

2
00:00:48,239 --> 00:00:52,320
uh this is trove let's start

3
00:00:52,879 --> 00:00:55,840
uh and i'm sure by the time we welcome

4
00:00:55,840 --> 00:00:57,360
everyone there will be more people

5
00:00:57,360 --> 00:00:58,719
joining in

6
00:00:58,719 --> 00:01:00,960
so welcome to the second session of the

7
00:01:00,960 --> 00:01:02,879
pc working group

8
00:01:02,879 --> 00:01:03,680
uh

9
00:01:03,680 --> 00:01:07,760
julian and i are

10
00:01:07,760 --> 00:01:10,560
not on site and we have hurry uh taking

11
00:01:10,560 --> 00:01:13,200
care of on-site if there is any need

12
00:01:13,200 --> 00:01:15,920
that arises

13
00:01:16,000 --> 00:01:17,680
this is our note well

14
00:01:17,680 --> 00:01:20,720
and by participating in this itf meeting

15
00:01:20,720 --> 00:01:23,680
both online as well as on-site you are

16
00:01:23,680 --> 00:01:27,600
agreeing to the itf process and policies

17
00:01:27,600 --> 00:01:30,159
uh all your contribution the things that

18
00:01:30,159 --> 00:01:32,880
you do on chat or on the mic are

19
00:01:32,880 --> 00:01:36,159
contributions to the itf and our other

20
00:01:36,159 --> 00:01:39,520
itf ipr rules are applicable so please

21
00:01:39,520 --> 00:01:41,119
take care of that

22
00:01:41,119 --> 00:01:45,600
you are also agreeing to working uh in a

23
00:01:45,600 --> 00:01:48,560
constructive environment so take care of

24
00:01:48,560 --> 00:01:52,000
the anti-harassment policies and other

25
00:01:52,000 --> 00:01:55,200
rules of code of conduct in the itf so

26
00:01:55,200 --> 00:01:56,479
please go through

27
00:01:56,479 --> 00:01:58,640
all these important documents which

28
00:01:58,640 --> 00:02:01,200
describe the idea of processes and rules

29
00:02:01,200 --> 00:02:03,200
that we live by

30
00:02:03,200 --> 00:02:06,399
so kindly noted well

31
00:02:06,960 --> 00:02:09,360
now uh i think you must be getting

32
00:02:09,360 --> 00:02:13,120
familiar with uh participation both uh

33
00:02:13,120 --> 00:02:15,440
for in-person as well as remote

34
00:02:15,440 --> 00:02:18,319
please make sure to join the meet echo

35
00:02:18,319 --> 00:02:19,200
queue

36
00:02:19,200 --> 00:02:22,000
for in-person participants as well that

37
00:02:22,000 --> 00:02:24,400
we will be calling the cube based on

38
00:02:24,400 --> 00:02:27,040
meet echo and not person standing on the

39
00:02:27,040 --> 00:02:27,840
mic

40
00:02:27,840 --> 00:02:29,760
so we will have a common queue on meet

41
00:02:29,760 --> 00:02:31,599
ago please follow that

42
00:02:31,599 --> 00:02:34,080
and kindly take care of your audio and

43
00:02:34,080 --> 00:02:35,040
video

44
00:02:35,040 --> 00:02:37,280
please do not send without joining the

45
00:02:37,280 --> 00:02:38,239
queue

46
00:02:38,239 --> 00:02:39,440
and

47
00:02:39,440 --> 00:02:42,560
make sure to respect uh like the av

48
00:02:42,560 --> 00:02:45,519
rules that we have

49
00:02:45,920 --> 00:02:48,080
with respect to idf guidelines and

50
00:02:48,080 --> 00:02:49,360
conduct

51
00:02:49,360 --> 00:02:51,840
we must extend respect and courtesy to

52
00:02:51,840 --> 00:02:54,560
all our colleagues at all times

53
00:02:54,560 --> 00:02:57,120
sometimes we have impersonal

54
00:02:57,120 --> 00:03:00,800
uh discussions but the aim is always

55
00:03:00,800 --> 00:03:01,680
to

56
00:03:01,680 --> 00:03:03,760
contribute to the global internet that

57
00:03:03,760 --> 00:03:06,800
needs diverse needs of various different

58
00:03:06,800 --> 00:03:09,120
technical and operational environment so

59
00:03:09,120 --> 00:03:11,920
please go through bcpe 54 and follow

60
00:03:11,920 --> 00:03:15,120
these itf guidelines and code of conduct

61
00:03:15,120 --> 00:03:16,000
both

62
00:03:16,000 --> 00:03:19,360
on site as well as on our mic lines as

63
00:03:19,360 --> 00:03:23,440
well as jabber and chat

64
00:03:23,519 --> 00:03:24,959
finally

65
00:03:24,959 --> 00:03:27,120
administrative yeah we have hari who has

66
00:03:27,120 --> 00:03:29,920
been helping us so our minutes

67
00:03:29,920 --> 00:03:33,040
are sorted by hari i will post the link

68
00:03:33,040 --> 00:03:35,200
for the collaborative minutes so please

69
00:03:35,200 --> 00:03:36,799
anybody who can help

70
00:03:36,799 --> 00:03:41,040
please help i have done that as well

71
00:03:41,280 --> 00:03:43,360
as i was mentioning please use the meet

72
00:03:43,360 --> 00:03:46,319
echo etiquette join the queue be mindful

73
00:03:46,319 --> 00:03:49,280
of the agenda time though we have uh

74
00:03:49,280 --> 00:03:51,440
enough time for discussions between

75
00:03:51,440 --> 00:03:53,599
talks so please use them let's have a

76
00:03:53,599 --> 00:03:58,000
good discussion on today's agenda

77
00:03:58,000 --> 00:04:01,439
uh this is our part two of our agenda

78
00:04:01,439 --> 00:04:04,319
the only change that was requested was a

79
00:04:04,319 --> 00:04:06,959
swap of order in our first two

80
00:04:06,959 --> 00:04:09,519
presentations as per authors so we have

81
00:04:09,519 --> 00:04:11,360
done that otherwise the agenda is the

82
00:04:11,360 --> 00:04:12,159
same

83
00:04:12,159 --> 00:04:14,319
and we did the agenda bashing in the

84
00:04:14,319 --> 00:04:17,918
previous session so i will move on

85
00:04:17,918 --> 00:04:20,399
and now let's start with

86
00:04:20,399 --> 00:04:22,880
our first presenter christian who is on

87
00:04:22,880 --> 00:04:23,759
site

88
00:04:23,759 --> 00:04:24,960
christian

89
00:04:24,960 --> 00:04:28,359
please welcome

90
00:04:28,880 --> 00:04:30,880
okay hello everybody this is uh

91
00:04:30,880 --> 00:04:33,280
christine schmutzer i'm standing here uh

92
00:04:33,280 --> 00:04:35,440
um as a representative for all the

93
00:04:35,440 --> 00:04:37,520
authors and the contributors of this

94
00:04:37,520 --> 00:04:38,720
draft

95
00:04:38,720 --> 00:04:41,199
um and i'm gonna introduce circuit style

96
00:04:41,199 --> 00:04:43,520
segment routing policies so next slide

97
00:04:43,520 --> 00:04:45,919
please

98
00:04:46,240 --> 00:04:48,080
so what are we trying to achieve with

99
00:04:48,080 --> 00:04:50,240
this informational draft

100
00:04:50,240 --> 00:04:52,479
we essentially want to enable service

101
00:04:52,479 --> 00:04:54,880
providers to build one segment routing

102
00:04:54,880 --> 00:04:58,320
network that can not only run typical

103
00:04:58,320 --> 00:05:00,320
connection what i call connectionless

104
00:05:00,320 --> 00:05:02,240
services like ip

105
00:05:02,240 --> 00:05:04,880
or vpn connectivity or layer 2 vpn

106
00:05:04,880 --> 00:05:07,440
connectivity but also address the

107
00:05:07,440 --> 00:05:09,600
requirements and the needs for

108
00:05:09,600 --> 00:05:11,919
what often is called private line which

109
00:05:11,919 --> 00:05:13,759
is essentially a connect connection

110
00:05:13,759 --> 00:05:16,479
oriented point-to-point transport

111
00:05:16,479 --> 00:05:17,840
this could be

112
00:05:17,840 --> 00:05:20,000
legacy tdm connections but it also could

113
00:05:20,000 --> 00:05:22,720
be ethernet layer 2vpn point-to-point

114
00:05:22,720 --> 00:05:24,479
services with strict bandwidth

115
00:05:24,479 --> 00:05:27,120
guarantees

116
00:05:27,520 --> 00:05:29,840
those services generally have a set of

117
00:05:29,840 --> 00:05:32,720
requirements which are different to

118
00:05:32,720 --> 00:05:34,560
the traffic that you normally run to

119
00:05:34,560 --> 00:05:35,600
carry

120
00:05:35,600 --> 00:05:36,960
you know internet traffic or

121
00:05:36,960 --> 00:05:38,479
connectionless traffic

122
00:05:38,479 --> 00:05:41,520
uh generally traffic engineered paths

123
00:05:41,520 --> 00:05:44,160
in a persistence manner are required

124
00:05:44,160 --> 00:05:46,639
strict bandwidth commitment because this

125
00:05:46,639 --> 00:05:48,400
is generally

126
00:05:48,400 --> 00:05:51,120
delivered by tdm switched networks like

127
00:05:51,120 --> 00:05:54,240
sonnet sdh or otm

128
00:05:54,240 --> 00:05:55,919
and then with that comes also the

129
00:05:55,919 --> 00:05:57,280
requirement for end-to-end path

130
00:05:57,280 --> 00:05:59,680
protection because that allows you to

131
00:05:59,680 --> 00:06:01,840
have end-to-end bandwidth commitment for

132
00:06:01,840 --> 00:06:03,440
not only the working but also the

133
00:06:03,440 --> 00:06:05,120
protect path

134
00:06:05,120 --> 00:06:07,440
and switch over your traffic in less

135
00:06:07,440 --> 00:06:10,160
than 50 milliseconds

136
00:06:10,160 --> 00:06:12,800
and last but not least oem or path

137
00:06:12,800 --> 00:06:14,800
integrity for the

138
00:06:14,800 --> 00:06:16,319
you know engineered paths is a

139
00:06:16,319 --> 00:06:18,319
requirement that has to be addressed

140
00:06:18,319 --> 00:06:21,199
next slide

141
00:06:21,199 --> 00:06:23,360
so what are the characteristics of

142
00:06:23,360 --> 00:06:25,199
segment routing uh circuit style

143
00:06:25,199 --> 00:06:26,560
policies

144
00:06:26,560 --> 00:06:30,160
um essentially uh we are taking two as

145
00:06:30,160 --> 00:06:32,800
our policies uh one in the forward and

146
00:06:32,800 --> 00:06:35,360
one in the reverse direction and we are

147
00:06:35,360 --> 00:06:37,919
bundling to together those two policies

148
00:06:37,919 --> 00:06:41,280
in a bi-directional association

149
00:06:41,280 --> 00:06:43,280
what also comes here in play is that for

150
00:06:43,280 --> 00:06:46,319
those sr policies we request a bandwidth

151
00:06:46,319 --> 00:06:48,319
to be administ administrated and

152
00:06:48,319 --> 00:06:49,680
committed

153
00:06:49,680 --> 00:06:52,240
we also want the path in the forward and

154
00:06:52,240 --> 00:06:53,919
the reverse direction routed along the

155
00:06:53,919 --> 00:06:56,000
same path through the network so core

156
00:06:56,000 --> 00:06:58,639
routing is indicated as a requirement

157
00:06:58,639 --> 00:07:01,120
and a characteristic

158
00:07:01,120 --> 00:07:04,160
in order to make the path deterministic

159
00:07:04,160 --> 00:07:05,919
uh we actually

160
00:07:05,919 --> 00:07:08,080
enforce that the segment lists used for

161
00:07:08,080 --> 00:07:10,800
those sr policies are supposed to be a

162
00:07:10,800 --> 00:07:13,199
list of strict hops with unprotected

163
00:07:13,199 --> 00:07:15,199
adjacency seats

164
00:07:15,199 --> 00:07:17,039
and i will come um to the point about

165
00:07:17,039 --> 00:07:19,440
the unprotected the chases it sits in a

166
00:07:19,440 --> 00:07:20,800
second

167
00:07:20,800 --> 00:07:21,599
um

168
00:07:21,599 --> 00:07:23,599
also because in

169
00:07:23,599 --> 00:07:25,759
these environments for those services

170
00:07:25,759 --> 00:07:28,479
generally the path should never change

171
00:07:28,479 --> 00:07:31,280
up until an an operator would request a

172
00:07:31,280 --> 00:07:32,479
change

173
00:07:32,479 --> 00:07:34,639
no path re-optimization

174
00:07:34,639 --> 00:07:38,639
shall be applied to those segment lists

175
00:07:38,639 --> 00:07:40,720
for protection in particular end-to-end

176
00:07:40,720 --> 00:07:43,120
path protection or restoration

177
00:07:43,120 --> 00:07:46,560
we use multiple candidate paths uh to uh

178
00:07:46,560 --> 00:07:48,479
build the recovery schemes i will talk

179
00:07:48,479 --> 00:07:51,520
in a second and because we're using un

180
00:07:51,520 --> 00:07:53,440
end-to-end path protection

181
00:07:53,440 --> 00:07:56,720
no local lfa like protection is supposed

182
00:07:56,720 --> 00:07:58,319
to happen and that's why the segment

183
00:07:58,319 --> 00:08:00,240
lists shall be constructed using

184
00:08:00,240 --> 00:08:03,520
unprotected adjacency sits

185
00:08:03,520 --> 00:08:06,560
in order to of uh observe the proper

186
00:08:06,560 --> 00:08:09,520
operation of each path you know oem

187
00:08:09,520 --> 00:08:11,919
using stamp protocol and loopback mode

188
00:08:11,919 --> 00:08:14,319
probes will be applied to perform

189
00:08:14,319 --> 00:08:16,479
liveness as well as performance

190
00:08:16,479 --> 00:08:18,639
measurement to understand the delay and

191
00:08:18,639 --> 00:08:23,039
the loss of each path next slide please

192
00:08:23,680 --> 00:08:25,520
so what are we proposing here in this

193
00:08:25,520 --> 00:08:28,160
informational draft it's not

194
00:08:28,160 --> 00:08:30,479
you know any extensions but really

195
00:08:30,479 --> 00:08:33,839
a summary of already defined um you know

196
00:08:33,839 --> 00:08:36,399
mechanisms or constructs to be grouped

197
00:08:36,399 --> 00:08:39,360
together in order to form a solution

198
00:08:39,360 --> 00:08:41,839
the network is expected to be configured

199
00:08:41,839 --> 00:08:43,839
with unprotected adjacency seats on all

200
00:08:43,839 --> 00:08:44,880
the links

201
00:08:44,880 --> 00:08:46,560
uh they could be manually configured to

202
00:08:46,560 --> 00:08:48,480
make them persistence across router

203
00:08:48,480 --> 00:08:50,640
reloads they could also be allocated by

204
00:08:50,640 --> 00:08:51,839
the system that this is an

205
00:08:51,839 --> 00:08:53,760
implementation detail

206
00:08:53,760 --> 00:08:56,640
igb and bgbls extensions

207
00:08:56,640 --> 00:08:58,240
would be used to disseminate the

208
00:08:58,240 --> 00:09:01,120
topology information so that the pce

209
00:09:01,120 --> 00:09:03,120
used for the path computation is aware

210
00:09:03,120 --> 00:09:06,080
of those adjacency sets

211
00:09:06,080 --> 00:09:08,160
with that also comes that for each and

212
00:09:08,160 --> 00:09:09,920
every link we want to know what the

213
00:09:09,920 --> 00:09:12,480
available bandwidth is per link in the

214
00:09:12,480 --> 00:09:14,399
topology so that the

215
00:09:14,399 --> 00:09:17,040
requested bandwidth for the you know

216
00:09:17,040 --> 00:09:20,320
path delegation um can be uh properly

217
00:09:20,320 --> 00:09:23,680
administered in the topology

218
00:09:23,680 --> 00:09:27,360
the pcc basically each endpoint of the

219
00:09:27,360 --> 00:09:29,839
pair of policies will delegate the path

220
00:09:29,839 --> 00:09:31,920
computation to the pce

221
00:09:31,920 --> 00:09:33,600
you will use

222
00:09:33,600 --> 00:09:35,279
already existing mechanisms like the

223
00:09:35,279 --> 00:09:36,959
bandwidth object to request the

224
00:09:36,959 --> 00:09:38,800
bandwidth

225
00:09:38,800 --> 00:09:41,440
and it will use the lsba object

226
00:09:41,440 --> 00:09:44,720
by setting the lb to 0 and the eb21 to

227
00:09:44,720 --> 00:09:47,120
avoid that any local protection is going

228
00:09:47,120 --> 00:09:50,080
to be applied in the data plane

229
00:09:50,080 --> 00:09:52,080
the bi-directional association object

230
00:09:52,080 --> 00:09:54,720
will be used with the c bit set to one

231
00:09:54,720 --> 00:09:57,760
so that co-routing will be honored uh in

232
00:09:57,760 --> 00:10:01,279
the pce when doing the path computation

233
00:10:01,279 --> 00:10:03,200
and if you want protection recovery

234
00:10:03,200 --> 00:10:05,440
which i will detail in the next slide

235
00:10:05,440 --> 00:10:06,959
we're going to use the sr policy

236
00:10:06,959 --> 00:10:08,240
association

237
00:10:08,240 --> 00:10:10,720
to uh associate multiple candidate paths

238
00:10:10,720 --> 00:10:13,440
with a particular policy

239
00:10:13,440 --> 00:10:16,440
oops

240
00:10:19,839 --> 00:10:23,519
did we drop or yeah

241
00:10:33,600 --> 00:10:36,160
was a drop at my side i'm back

242
00:10:36,160 --> 00:10:37,600
let me go back to the slide that you

243
00:10:37,600 --> 00:10:40,160
were presenting

244
00:10:40,399 --> 00:10:41,920
i guess this was a test without whether

245
00:10:41,920 --> 00:10:44,320
i remember what's in my slide

246
00:10:44,320 --> 00:10:46,320
when we have multiple candidate paths uh

247
00:10:46,320 --> 00:10:48,720
we're gonna use this joint association

248
00:10:48,720 --> 00:10:50,560
uh in order to to have the path

249
00:10:50,560 --> 00:10:52,959
computation be done in a disjoint manner

250
00:10:52,959 --> 00:10:54,560
which is particularly important for one

251
00:10:54,560 --> 00:10:56,079
for one protection

252
00:10:56,079 --> 00:10:58,399
and then again uh the strict hops and no

253
00:10:58,399 --> 00:11:01,360
re-optimization will be covered by

254
00:11:01,360 --> 00:11:04,240
samuel in the following presentation uh

255
00:11:04,240 --> 00:11:06,240
as you see with the footnotes all these

256
00:11:06,240 --> 00:11:09,040
uh let's say semantics or mechanisms

257
00:11:09,040 --> 00:11:10,640
have already been defined in either

258
00:11:10,640 --> 00:11:15,839
existing rfcs or itf drafts next slide

259
00:11:17,839 --> 00:11:18,880
so

260
00:11:18,880 --> 00:11:20,720
one very important and let's say the

261
00:11:20,720 --> 00:11:22,000
more

262
00:11:22,000 --> 00:11:23,680
comprehensive

263
00:11:23,680 --> 00:11:25,519
aspect of circuit style segment routing

264
00:11:25,519 --> 00:11:27,600
policies are the recovery schemes

265
00:11:27,600 --> 00:11:29,279
because of those connection oriented

266
00:11:29,279 --> 00:11:31,440
networks generally giving

267
00:11:31,440 --> 00:11:33,680
us all sorts of flexibility to operators

268
00:11:33,680 --> 00:11:36,000
to to build the coverage schemes we want

269
00:11:36,000 --> 00:11:38,160
to honor those requirements and provide

270
00:11:38,160 --> 00:11:40,160
solutions the most simple one is

271
00:11:40,160 --> 00:11:42,160
unprotected so you have one candidate

272
00:11:42,160 --> 00:11:45,279
path from let's say a1 to z1

273
00:11:45,279 --> 00:11:46,959
and if that path would go down it is

274
00:11:46,959 --> 00:11:48,880
expected that the traffic will not

275
00:11:48,880 --> 00:11:51,360
recover but it is also expected that

276
00:11:51,360 --> 00:11:52,240
most

277
00:11:52,240 --> 00:11:53,279
you know

278
00:11:53,279 --> 00:11:55,040
real-time deployments will likely have

279
00:11:55,040 --> 00:11:56,560
another unprotected

280
00:11:56,560 --> 00:11:59,040
circuit style policy between the node a2

281
00:11:59,040 --> 00:12:01,440
and z2 and they're going to be computed

282
00:12:01,440 --> 00:12:03,200
from a path perspective in a disjoint

283
00:12:03,200 --> 00:12:04,320
manner

284
00:12:04,320 --> 00:12:06,560
and operators use those two unprotected

285
00:12:06,560 --> 00:12:09,519
policies in let's say a redundant mated

286
00:12:09,519 --> 00:12:11,920
pair so that the service layer can deal

287
00:12:11,920 --> 00:12:13,519
or can handle the redundancy and the

288
00:12:13,519 --> 00:12:15,760
traffic recovery

289
00:12:15,760 --> 00:12:18,000
on the top right a slight variation of

290
00:12:18,000 --> 00:12:20,320
unprotected which is one plus r

291
00:12:20,320 --> 00:12:22,160
meaning you have one candidate path and

292
00:12:22,160 --> 00:12:24,560
if that one fails on demand you're going

293
00:12:24,560 --> 00:12:25,519
to set

294
00:12:25,519 --> 00:12:27,680
set up or establish another candidate

295
00:12:27,680 --> 00:12:28,720
path

296
00:12:28,720 --> 00:12:31,519
around the failure that is on demand and

297
00:12:31,519 --> 00:12:33,040
not guaranteed

298
00:12:33,040 --> 00:12:34,959
but still we are requesting bandwidth

299
00:12:34,959 --> 00:12:38,160
for that delegation so the operator has

300
00:12:38,160 --> 00:12:39,920
the opportunity to

301
00:12:39,920 --> 00:12:42,480
recover the traffic if a failure happens

302
00:12:42,480 --> 00:12:45,279
not in less than 50 milliseconds but at

303
00:12:45,279 --> 00:12:48,000
uh um you know an acceptable time to

304
00:12:48,000 --> 00:12:50,800
overall um provide a good high

305
00:12:50,800 --> 00:12:53,279
availability

306
00:12:53,279 --> 00:12:54,480
um

307
00:12:54,480 --> 00:12:57,279
for strict topsy for strict uh 50

308
00:12:57,279 --> 00:12:59,040
millisecond protection the one for one

309
00:12:59,040 --> 00:13:00,480
protection scheme would be used this is

310
00:13:00,480 --> 00:13:02,720
the bottom left you have two candidate

311
00:13:02,720 --> 00:13:05,200
paths again with two uh

312
00:13:05,200 --> 00:13:07,360
preferences the higher preference path

313
00:13:07,360 --> 00:13:09,680
will be active if that one fails the

314
00:13:09,680 --> 00:13:12,160
second one will be activated

315
00:13:12,160 --> 00:13:14,079
both will be pre-programmed to

316
00:13:14,079 --> 00:13:16,720
accomplish sub 50 millisecond protection

317
00:13:16,720 --> 00:13:19,279
and computation again is disjoint

318
00:13:19,279 --> 00:13:20,800
and last but not least the most

319
00:13:20,800 --> 00:13:23,680
complicated but most versatile approach

320
00:13:23,680 --> 00:13:26,320
is to have one for one plus r protection

321
00:13:26,320 --> 00:13:28,560
meaning it's a slight variation of the

322
00:13:28,560 --> 00:13:30,880
previous one but if both the working and

323
00:13:30,880 --> 00:13:32,959
the protect fail you're gonna have a

324
00:13:32,959 --> 00:13:34,880
third candidate path that will be on

325
00:13:34,880 --> 00:13:38,000
demand established and try to uh to

326
00:13:38,000 --> 00:13:39,760
recover the traffic even in a more

327
00:13:39,760 --> 00:13:40,880
severe

328
00:13:40,880 --> 00:13:43,920
network degradation

329
00:13:44,320 --> 00:13:45,040
the

330
00:13:45,040 --> 00:13:47,279
the state of the candidate path will be

331
00:13:47,279 --> 00:13:48,880
indicated by the

332
00:13:48,880 --> 00:13:51,519
o flag in the lsp object

333
00:13:51,519 --> 00:13:53,360
with the existing semantics of two

334
00:13:53,360 --> 00:13:55,760
meaning active one up and zero mean

335
00:13:55,760 --> 00:13:57,199
meaning down

336
00:13:57,199 --> 00:13:59,680
next slide

337
00:13:59,920 --> 00:14:01,360
this is all i have to

338
00:14:01,360 --> 00:14:03,839
to share we appreciate your comments and

339
00:14:03,839 --> 00:14:04,959
discussion

340
00:14:04,959 --> 00:14:07,040
uh and we hope that this uh introduction

341
00:14:07,040 --> 00:14:10,320
was uh uh interesting

342
00:14:10,320 --> 00:14:12,639
uh i see how meown in the queue how many

343
00:14:12,639 --> 00:14:15,800
go ahead

344
00:14:18,800 --> 00:14:21,519
so actually i'm trying to understand one

345
00:14:21,519 --> 00:14:23,760
question for clarification about the

346
00:14:23,760 --> 00:14:26,800
term used for the circuit style because

347
00:14:26,800 --> 00:14:29,519
i'm coming from the circuit

348
00:14:29,519 --> 00:14:32,000
site so are you trying to

349
00:14:32,000 --> 00:14:32,760
uh

350
00:14:32,760 --> 00:14:34,399
approximately

351
00:14:34,399 --> 00:14:35,920
uh

352
00:14:35,920 --> 00:14:38,240
following the kind of bandwidth

353
00:14:38,240 --> 00:14:41,440
guarantee became some in the circuit

354
00:14:41,440 --> 00:14:44,320
style only or you are referring to any

355
00:14:44,320 --> 00:14:46,240
additional features

356
00:14:46,240 --> 00:14:47,760
because

357
00:14:47,760 --> 00:14:48,880
given

358
00:14:48,880 --> 00:14:51,920
the network as a packet switching

359
00:14:51,920 --> 00:14:55,519
hardware it is hard to

360
00:14:56,000 --> 00:14:57,040
how to say

361
00:14:57,040 --> 00:15:00,720
it it's hard to achieve the the circuit

362
00:15:00,720 --> 00:15:04,240
style characteristics

363
00:15:04,639 --> 00:15:07,199
yeah so maybe one thing that i may not

364
00:15:07,199 --> 00:15:08,880
have clearly mentioned

365
00:15:08,880 --> 00:15:11,120
um so what i

366
00:15:11,120 --> 00:15:12,959
indicated before is that for each and

367
00:15:12,959 --> 00:15:15,519
every link in the topology we allocate a

368
00:15:15,519 --> 00:15:17,600
bandwidth to the path computation

369
00:15:17,600 --> 00:15:19,680
element right

370
00:15:19,680 --> 00:15:22,320
and what the assumption here is that in

371
00:15:22,320 --> 00:15:25,040
the segment routing network

372
00:15:25,040 --> 00:15:27,040
only circuit style segment routing

373
00:15:27,040 --> 00:15:29,040
policies have strict bandwidth

374
00:15:29,040 --> 00:15:30,240
guarantees

375
00:15:30,240 --> 00:15:32,959
and those guarantees will be

376
00:15:32,959 --> 00:15:34,880
called admission controlled against the

377
00:15:34,880 --> 00:15:36,399
bandwidth that you have on a per-link

378
00:15:36,399 --> 00:15:37,519
basis

379
00:15:37,519 --> 00:15:39,839
any other traffic will not have a strict

380
00:15:39,839 --> 00:15:42,320
bandwidth guarantee and for that manner

381
00:15:42,320 --> 00:15:44,560
also be

382
00:15:44,560 --> 00:15:45,839
mapped to

383
00:15:45,839 --> 00:15:48,240
diffserv queues in the links at a lower

384
00:15:48,240 --> 00:15:50,959
priority so only what gets a strict

385
00:15:50,959 --> 00:15:52,880
bandwidth guarantee

386
00:15:52,880 --> 00:15:54,399
will have the highest priority and will

387
00:15:54,399 --> 00:15:56,880
get a strict commitment anything else

388
00:15:56,880 --> 00:15:59,120
will be lower priority and hence not

389
00:15:59,120 --> 00:16:02,240
have a strict benefit

390
00:16:02,560 --> 00:16:04,560
okay thank you for the point i get your

391
00:16:04,560 --> 00:16:06,320
point but the

392
00:16:06,320 --> 00:16:08,560
personal suggestion would be try to

393
00:16:08,560 --> 00:16:10,720
change the term the current term circuit

394
00:16:10,720 --> 00:16:12,480
style into something like bandwidth

395
00:16:12,480 --> 00:16:15,120
guarantee or something similar

396
00:16:15,120 --> 00:16:17,120
okay so it was more about the name

397
00:16:17,120 --> 00:16:18,800
rather than the the concept and the

398
00:16:18,800 --> 00:16:22,160
behavior okay got that yes

399
00:16:22,160 --> 00:16:24,240
john go ahead

400
00:16:24,240 --> 00:16:27,199
thanks uh john scudder as an individual

401
00:16:27,199 --> 00:16:28,240
um

402
00:16:28,240 --> 00:16:29,920
i'm just curious about you you spoke a

403
00:16:29,920 --> 00:16:32,000
couple times about 50 millisecond

404
00:16:32,000 --> 00:16:33,600
restoration

405
00:16:33,600 --> 00:16:34,399
um

406
00:16:34,399 --> 00:16:36,880
and if we look at your maybe it's the

407
00:16:36,880 --> 00:16:40,320
next slide uh with the a and the z

408
00:16:40,320 --> 00:16:41,279
um

409
00:16:41,279 --> 00:16:42,880
or well

410
00:16:42,880 --> 00:16:45,519
yeah that one um so so in your one for

411
00:16:45,519 --> 00:16:46,800
one um

412
00:16:46,800 --> 00:16:49,040
presumably you can't guarantee 50

413
00:16:49,040 --> 00:16:51,519
milliseconds unless you have uh unless

414
00:16:51,519 --> 00:16:54,000
you bound the the latency between anz

415
00:16:54,000 --> 00:16:54,800
right

416
00:16:54,800 --> 00:16:56,880
if you're excluding any kind of midpoint

417
00:16:56,880 --> 00:16:58,880
protection because all the protection

418
00:16:58,880 --> 00:17:02,240
has to be engaged from the head end

419
00:17:02,240 --> 00:17:04,079
yes i mean the the i guess the

420
00:17:04,079 --> 00:17:07,039
well-known latency uh and notification

421
00:17:07,039 --> 00:17:09,280
aspect of uh you know a very long path

422
00:17:09,280 --> 00:17:11,520
would uh would be applied so maybe in

423
00:17:11,520 --> 00:17:14,480
that sense my you know goal from sub 50

424
00:17:14,480 --> 00:17:17,359
milliseconds was not 100 appropriate i

425
00:17:17,359 --> 00:17:19,919
guess the notion is that both paths

426
00:17:19,919 --> 00:17:22,000
should be established operational in the

427
00:17:22,000 --> 00:17:24,959
data plane and once lifeless detects a

428
00:17:24,959 --> 00:17:27,119
problem you switch over to the second

429
00:17:27,119 --> 00:17:29,039
path immediately

430
00:17:29,039 --> 00:17:30,799
okay so this was like the the colloquial

431
00:17:30,799 --> 00:17:33,039
use of 50 milliseconds to mean as fast

432
00:17:33,039 --> 00:17:34,559
as possible

433
00:17:34,559 --> 00:17:35,919
yes i think that would be a fair

434
00:17:35,919 --> 00:17:37,200
statement yes

435
00:17:37,200 --> 00:17:39,280
okay thank you

436
00:17:39,280 --> 00:17:42,559
uh tariq go ahead

437
00:17:44,080 --> 00:17:46,799
sad with juniper um

438
00:17:46,799 --> 00:17:48,799
my question is is there an assumption

439
00:17:48,799 --> 00:17:51,679
that there is one pce managing

440
00:17:51,679 --> 00:17:54,400
only sr paths in the network

441
00:17:54,400 --> 00:17:57,280
and is it only one

442
00:17:57,280 --> 00:17:59,120
pce in the network

443
00:17:59,120 --> 00:18:01,200
or there will be multiple or can be

444
00:18:01,200 --> 00:18:03,600
multiple

445
00:18:03,760 --> 00:18:05,840
um yeah that's

446
00:18:05,840 --> 00:18:07,600
that's a quite complex question i would

447
00:18:07,600 --> 00:18:10,160
say in the in the most simple

448
00:18:10,160 --> 00:18:13,120
consideration it would be one pce

449
00:18:13,120 --> 00:18:14,960
responsible for

450
00:18:14,960 --> 00:18:18,160
you know placing sr policies that

451
00:18:18,160 --> 00:18:21,039
that have strict bandwidth guarantees

452
00:18:21,039 --> 00:18:24,480
of course someone could consider

453
00:18:24,480 --> 00:18:26,320
multiple pces

454
00:18:26,320 --> 00:18:29,200
somehow collaborating uh but the the

455
00:18:29,200 --> 00:18:32,160
problem then appears is uh how to get a

456
00:18:32,160 --> 00:18:33,919
um you know

457
00:18:33,919 --> 00:18:36,320
uh consistent view of what has been

458
00:18:36,320 --> 00:18:38,400
already admitted in terms of bandwidth

459
00:18:38,400 --> 00:18:40,080
guarantee and what not

460
00:18:40,080 --> 00:18:42,960
and to avoid race conditions but i would

461
00:18:42,960 --> 00:18:45,039
say from a concert perspective

462
00:18:45,039 --> 00:18:45,919
um

463
00:18:45,919 --> 00:18:47,679
circuit style segment routing policies

464
00:18:47,679 --> 00:18:49,840
are somewhat independent

465
00:18:49,840 --> 00:18:51,200
from the

466
00:18:51,200 --> 00:18:55,200
let's say pc architecture if you will

467
00:18:55,200 --> 00:18:56,960
if there is an assumption then please

468
00:18:56,960 --> 00:18:59,280
make it in the in the document thanks

469
00:18:59,280 --> 00:19:01,520
okay actually there is the state

470
00:19:01,520 --> 00:19:03,760
synchronization draft which does talk

471
00:19:03,760 --> 00:19:05,280
about this there is a working group

472
00:19:05,280 --> 00:19:06,559
draft that we have

473
00:19:06,559 --> 00:19:09,200
pc state sync so have a look where

474
00:19:09,200 --> 00:19:11,200
this kind of problem is being discussed

475
00:19:11,200 --> 00:19:13,520
where multiple pc collaborate and

476
00:19:13,520 --> 00:19:15,760
exchange the bandwidth information yeah

477
00:19:15,760 --> 00:19:20,600
fan yank go ahead you're next in queue

478
00:19:26,799 --> 00:19:28,480
a fan we are not getting any audio from

479
00:19:28,480 --> 00:19:30,720
you

480
00:19:34,960 --> 00:19:37,520
uh chenk can you go ahead instead while

481
00:19:37,520 --> 00:19:41,440
fan figure out the audio issue

482
00:19:43,360 --> 00:19:44,320
i've

483
00:19:44,320 --> 00:19:45,280
done

484
00:19:45,280 --> 00:19:48,160
such a things in cmcc

485
00:19:48,160 --> 00:19:50,799
two or three years ago

486
00:19:50,799 --> 00:19:54,000
bye bye bye by using pot segment

487
00:19:54,000 --> 00:19:56,960
and i think it would be a good chance to

488
00:19:56,960 --> 00:19:57,760
uh

489
00:19:57,760 --> 00:20:00,000
uh was gather with par

490
00:20:00,000 --> 00:20:02,640
segment and this uh draft

491
00:20:02,640 --> 00:20:05,520
i i think i need to read more about the

492
00:20:05,520 --> 00:20:08,159
draft and yeah that that that's it thank

493
00:20:08,159 --> 00:20:10,320
you

494
00:20:11,280 --> 00:20:12,880
fan uh

495
00:20:12,880 --> 00:20:15,840
are you able to speak

496
00:20:16,159 --> 00:20:19,360
maybe use the chat window instead and i

497
00:20:19,360 --> 00:20:21,520
also have one comment

498
00:20:21,520 --> 00:20:24,080
here my first comment would be at the

499
00:20:24,080 --> 00:20:26,720
at the very high level that if we are

500
00:20:26,720 --> 00:20:30,080
defining something like circuit style sr

501
00:20:30,080 --> 00:20:32,559
policy or whatever we name it later on

502
00:20:32,559 --> 00:20:34,640
where this could be not just signal

503
00:20:34,640 --> 00:20:37,440
signaled in psap but in future there

504
00:20:37,440 --> 00:20:39,360
could be a use of this being signaled in

505
00:20:39,360 --> 00:20:41,440
bgp as well so first my question would

506
00:20:41,440 --> 00:20:44,799
be is it really psep specific or is this

507
00:20:44,799 --> 00:20:48,080
a generic work that later on can use

508
00:20:48,080 --> 00:20:49,200
signaling

509
00:20:49,200 --> 00:20:52,480
uh in bgp even yang or something and if

510
00:20:52,480 --> 00:20:54,640
it does then maybe we need to find

511
00:20:54,640 --> 00:20:57,360
spring as a better home for the overall

512
00:20:57,360 --> 00:21:00,720
idea of this circuit style sr policy and

513
00:21:00,720 --> 00:21:02,400
only maybe the next document what we

514
00:21:02,400 --> 00:21:04,720
have which is the psep extension that

515
00:21:04,720 --> 00:21:07,679
could focus on pc work so my question to

516
00:21:07,679 --> 00:21:09,760
authors would be that is this really

517
00:21:09,760 --> 00:21:12,559
psap specific

518
00:21:13,120 --> 00:21:14,000
um

519
00:21:14,000 --> 00:21:16,880
i don't think it's necessarily 100 psap

520
00:21:16,880 --> 00:21:18,400
specific

521
00:21:18,400 --> 00:21:19,280
um

522
00:21:19,280 --> 00:21:22,159
but uh for more i would i'm pretty new

523
00:21:22,159 --> 00:21:24,159
to itf so i i can't

524
00:21:24,159 --> 00:21:26,240
you know properly answer your question i

525
00:21:26,240 --> 00:21:28,559
think but i think what you're saying uh

526
00:21:28,559 --> 00:21:31,440
is something that definitely can be can

527
00:21:31,440 --> 00:21:33,840
be considered and is making sense to me

528
00:21:33,840 --> 00:21:36,400
yeah and also one thing which stuck me a

529
00:21:36,400 --> 00:21:38,400
little uh we are saying that we don't

530
00:21:38,400 --> 00:21:40,960
want pc to do decomputation

531
00:21:40,960 --> 00:21:42,080
here

532
00:21:42,080 --> 00:21:45,280
then the idea of why delegate why give

533
00:21:45,280 --> 00:21:47,679
control to pc when we actually don't

534
00:21:47,679 --> 00:21:50,720
want pc to recompute parts that was not

535
00:21:50,720 --> 00:21:52,080
very clear to me

536
00:21:52,080 --> 00:21:54,320
uh maybe we should do stateless then and

537
00:21:54,320 --> 00:21:57,679
like just com ask pc to give us the path

538
00:21:57,679 --> 00:21:59,919
and no need to delegate the path to pc

539
00:21:59,919 --> 00:22:02,000
so this part also was not clear maybe

540
00:22:02,000 --> 00:22:03,440
either you want to answer now that's

541
00:22:03,440 --> 00:22:04,960
fine otherwise we can take this to the

542
00:22:04,960 --> 00:22:06,559
list as well

543
00:22:06,559 --> 00:22:08,159
yeah i probably can't answer the

544
00:22:08,159 --> 00:22:10,720
stateless versus stateful

545
00:22:10,720 --> 00:22:12,960
per se but i think what i can tell you

546
00:22:12,960 --> 00:22:15,440
from my interactions with operators is

547
00:22:15,440 --> 00:22:17,440
that in the transport world

548
00:22:17,440 --> 00:22:20,000
you know people like to have uh let's

549
00:22:20,000 --> 00:22:23,440
say a computation done by a controller

550
00:22:23,440 --> 00:22:25,520
or a system and don't want to deal with

551
00:22:25,520 --> 00:22:28,720
it manually but the uh but once it was

552
00:22:28,720 --> 00:22:31,360
chosen it should be staying the same

553
00:22:31,360 --> 00:22:33,600
uh and and that's where the requirement

554
00:22:33,600 --> 00:22:35,520
is coming from

555
00:22:35,520 --> 00:22:37,679
so i think the there is no advantage of

556
00:22:37,679 --> 00:22:39,600
active stateful pc we are getting in

557
00:22:39,600 --> 00:22:42,000
that case anyway let's not take up more

558
00:22:42,000 --> 00:22:43,760
time we can we should discuss this from

559
00:22:43,760 --> 00:22:45,520
in mailing list so i request you to

560
00:22:45,520 --> 00:22:47,280
start a thread and let's have more

561
00:22:47,280 --> 00:22:49,360
discussion on the list

562
00:22:49,360 --> 00:22:51,200
thank you

563
00:22:51,200 --> 00:22:53,280
thank you

564
00:22:53,280 --> 00:22:57,360
okay next we have samuel

565
00:23:00,640 --> 00:23:01,679
hi all

566
00:23:01,679 --> 00:23:04,720
uh i'm samuel cyril from cisco i'll be

567
00:23:04,720 --> 00:23:06,960
presenting draft about piece of

568
00:23:06,960 --> 00:23:10,320
extensions for silken style on behalf of

569
00:23:10,320 --> 00:23:12,880
outdoors it's new draft so it was not

570
00:23:12,880 --> 00:23:15,200
presented before

571
00:23:15,200 --> 00:23:18,000
next slide please

572
00:23:18,480 --> 00:23:20,559
doubt contains piece of extensions

573
00:23:20,559 --> 00:23:23,120
needed to satisfy requirements of

574
00:23:23,120 --> 00:23:26,320
connection oriented transport services

575
00:23:26,320 --> 00:23:28,480
piercing as our policies also called

576
00:23:28,480 --> 00:23:31,679
circus style as well as our policies

577
00:23:31,679 --> 00:23:34,400
uh creation in his presentation already

578
00:23:34,400 --> 00:23:36,640
described those requirements

579
00:23:36,640 --> 00:23:37,440
like

580
00:23:37,440 --> 00:23:40,640
party persistency hope battle behavior

581
00:23:40,640 --> 00:23:43,360
state bandwidth guarantee and

582
00:23:43,360 --> 00:23:45,520
end-to-end protection and he also

583
00:23:45,520 --> 00:23:47,520
described

584
00:23:47,520 --> 00:23:51,120
circuit style as our policies in general

585
00:23:51,120 --> 00:23:53,039
so i will not repeat

586
00:23:53,039 --> 00:23:55,440
that part i'll just describe only piece

587
00:23:55,440 --> 00:23:57,039
of extensions

588
00:23:57,039 --> 00:23:59,279
which are needed on top of existing

589
00:23:59,279 --> 00:24:01,679
currencies

590
00:24:01,679 --> 00:24:05,120
the next slide is

591
00:24:05,120 --> 00:24:08,080
this draft contains two parts first one

592
00:24:08,080 --> 00:24:10,720
is introducing ability to to request

593
00:24:10,720 --> 00:24:14,240
state parts so part consists consisting

594
00:24:14,240 --> 00:24:16,640
only from straight hopes for specific

595
00:24:16,640 --> 00:24:18,880
osp for hazard that means

596
00:24:18,880 --> 00:24:21,840
uh do you swift of adia senses it's only

597
00:24:21,840 --> 00:24:23,679
for stateful messages

598
00:24:23,679 --> 00:24:25,760
new flag was introduced

599
00:24:25,760 --> 00:24:27,840
and for stateless messages just

600
00:24:27,840 --> 00:24:30,480
clarification of existing flag

601
00:24:30,480 --> 00:24:32,960
forcing my routing well done

602
00:24:32,960 --> 00:24:35,279
because flight was introduced in one of

603
00:24:35,279 --> 00:24:38,240
the initial pc rfcs and no clarification

604
00:24:38,240 --> 00:24:42,640
was done as part of rfc's rfc uh

605
00:24:42,640 --> 00:24:45,279
with srx extensions

606
00:24:45,279 --> 00:24:46,960
second part is about

607
00:24:46,960 --> 00:24:48,559
adding ability to control part

608
00:24:48,559 --> 00:24:50,240
computation triggers

609
00:24:50,240 --> 00:24:54,320
so opera operator on pcc can

610
00:24:54,320 --> 00:24:56,320
explicitly control

611
00:24:56,320 --> 00:24:58,400
part computation figures

612
00:24:58,400 --> 00:25:00,640
for example if that computation should

613
00:25:00,640 --> 00:25:03,760
be or if paths should be recomputed

614
00:25:03,760 --> 00:25:06,000
in case of topology change or in case of

615
00:25:06,000 --> 00:25:08,480
any periodic figure

616
00:25:08,480 --> 00:25:11,360
next slide please

617
00:25:11,520 --> 00:25:14,320
as mentioned before instead was messages

618
00:25:14,320 --> 00:25:16,880
there was already offload in rp object

619
00:25:16,880 --> 00:25:19,760
which was specified if the state part is

620
00:25:19,760 --> 00:25:22,240
requested or loose but is acceptable as

621
00:25:22,240 --> 00:25:24,880
well in pc request message but it was

622
00:25:24,880 --> 00:25:27,200
not explained what that means for azar

623
00:25:27,200 --> 00:25:29,120
so we are adding the explicit statement

624
00:25:29,120 --> 00:25:32,320
now to clarify that in case of

625
00:25:32,320 --> 00:25:34,559
increase of state part on the adsense

626
00:25:34,559 --> 00:25:37,840
seats must be used

627
00:25:39,679 --> 00:25:41,520
for stateful messages

628
00:25:41,520 --> 00:25:44,080
we are adding new plugin lsp extended

629
00:25:44,080 --> 00:25:46,880
flex tlv uh to cover a similar

630
00:25:46,880 --> 00:25:49,600
functionality kov is applicable to both

631
00:25:49,600 --> 00:25:53,600
srn rsvp uh in pc port message flag is

632
00:25:53,600 --> 00:25:56,400
indicating if pcc requested straight

633
00:25:56,400 --> 00:26:00,080
path and pc is supposed to reflect uh

634
00:26:00,080 --> 00:26:03,279
very low that flag in pc update message

635
00:26:03,279 --> 00:26:05,440
so it will indicate if if participation

636
00:26:05,440 --> 00:26:07,279
was done considering state power

637
00:26:07,279 --> 00:26:10,480
requirement or not the name all flag

638
00:26:10,480 --> 00:26:12,960
was chosen just because the offline was

639
00:26:12,960 --> 00:26:15,919
used in instagram messages as well on rp

640
00:26:15,919 --> 00:26:18,320
object

641
00:26:18,640 --> 00:26:21,440
next slide please

642
00:26:21,919 --> 00:26:23,919
the second part of the drought is about

643
00:26:23,919 --> 00:26:26,240
controlling pc power connection vehicle

644
00:26:26,240 --> 00:26:27,360
behavior

645
00:26:27,360 --> 00:26:30,640
uh from pcc site for specific lsp for

646
00:26:30,640 --> 00:26:31,440
now

647
00:26:31,440 --> 00:26:33,440
two clocks were introduced one for

648
00:26:33,440 --> 00:26:36,240
blocking power computation if topology

649
00:26:36,240 --> 00:26:38,400
used by pc for part computation was

650
00:26:38,400 --> 00:26:40,080
modified

651
00:26:40,080 --> 00:26:42,400
basically if if pc received any any

652
00:26:42,400 --> 00:26:44,240
change for example from igp or from

653
00:26:44,240 --> 00:26:45,600
vgplus

654
00:26:45,600 --> 00:26:48,240
second is for blocking any periodical

655
00:26:48,240 --> 00:26:50,880
optimizations so

656
00:26:50,880 --> 00:26:53,440
we are open to introducing any other

657
00:26:53,440 --> 00:26:56,480
flex to cover other takers you need

658
00:26:56,480 --> 00:27:00,080
um basically the plea is extensible so

659
00:27:00,080 --> 00:27:01,440
if there are other

660
00:27:01,440 --> 00:27:03,679
takers which can cause the computation

661
00:27:03,679 --> 00:27:04,840
then

662
00:27:04,840 --> 00:27:06,400
then

663
00:27:06,400 --> 00:27:09,840
the ple can be still extended purpose uh

664
00:27:09,840 --> 00:27:11,760
all these dlvs to decay's number of

665
00:27:11,760 --> 00:27:14,640
computations and part changes done for

666
00:27:14,640 --> 00:27:16,480
specific lsp

667
00:27:16,480 --> 00:27:17,360
so

668
00:27:17,360 --> 00:27:20,960
to achieve path persistency even even

669
00:27:20,960 --> 00:27:23,679
though flake is set in the dlv or the

670
00:27:23,679 --> 00:27:26,720
pov gaps and then all part computations

671
00:27:26,720 --> 00:27:29,520
uh all part communication figures are

672
00:27:29,520 --> 00:27:30,480
allowed

673
00:27:30,480 --> 00:27:31,520
and

674
00:27:31,520 --> 00:27:33,919
it is just on pc and local policy of the

675
00:27:33,919 --> 00:27:36,080
pc to decide if part computation should

676
00:27:36,080 --> 00:27:37,679
be triggered or not

677
00:27:37,679 --> 00:27:39,919
it is done that way uh

678
00:27:39,919 --> 00:27:42,559
for the future so any new flag can be

679
00:27:42,559 --> 00:27:45,360
ended in background compatibility

680
00:27:45,360 --> 00:27:48,840
next slide please

681
00:27:49,520 --> 00:27:51,200
so thank thanks for listening any

682
00:27:51,200 --> 00:27:53,840
comments any questions are welcome

683
00:27:53,840 --> 00:27:56,320
we have already received some feedback

684
00:27:56,320 --> 00:27:59,279
uh so some updates to the develop will

685
00:27:59,279 --> 00:28:00,480
be done soon

686
00:28:00,480 --> 00:28:02,960
also to thanks though for

687
00:28:02,960 --> 00:28:05,600
your comments we are discussing the

688
00:28:05,600 --> 00:28:07,360
proposal as well

689
00:28:07,360 --> 00:28:11,678
i mean the comments in in the method

690
00:28:12,720 --> 00:28:15,039
uh tariq go ahead

691
00:28:15,039 --> 00:28:15,840
yes

692
00:28:15,840 --> 00:28:18,320
tariq sad with juniper uh my question it

693
00:28:18,320 --> 00:28:20,720
seems that you want to lock the path

694
00:28:20,720 --> 00:28:22,320
after it's set up

695
00:28:22,320 --> 00:28:24,880
you don't want it to change um

696
00:28:24,880 --> 00:28:27,600
uh so why not have one bit to say uh

697
00:28:27,600 --> 00:28:30,559
lock or pin pin down the path

698
00:28:30,559 --> 00:28:31,919
instead of

699
00:28:31,919 --> 00:28:34,000
multiple

700
00:28:34,000 --> 00:28:36,960
that can be definitely done and here we

701
00:28:36,960 --> 00:28:39,600
just wanted to clarify or we we wanted

702
00:28:39,600 --> 00:28:42,000
to introduce maybe something with a

703
00:28:42,000 --> 00:28:44,720
higher granularity but yeah in this

704
00:28:44,720 --> 00:28:46,640
specific case well for ca specific

705
00:28:46,640 --> 00:28:49,520
policies uh the one flag

706
00:28:49,520 --> 00:28:52,399
would be sufficient

707
00:28:54,720 --> 00:28:55,840
so yeah

708
00:28:55,840 --> 00:28:56,799
it

709
00:28:56,799 --> 00:28:58,960
we can do that it's just about

710
00:28:58,960 --> 00:29:02,399
the added value of two flags versus uh

711
00:29:02,399 --> 00:29:05,440
having just one flex so so both options

712
00:29:05,440 --> 00:29:08,000
are possible

713
00:29:09,279 --> 00:29:10,840
undo go

714
00:29:10,840 --> 00:29:13,360
ahead um yeah just kind of echoing a

715
00:29:13,360 --> 00:29:15,679
little bit what character said is i

716
00:29:15,679 --> 00:29:17,120
really do like three computation

717
00:29:17,120 --> 00:29:18,559
triggers tlv

718
00:29:18,559 --> 00:29:21,760
um but the idea of a bit for pin to path

719
00:29:21,760 --> 00:29:22,960
is kind of nice

720
00:29:22,960 --> 00:29:24,480
um but in that same token i do like the

721
00:29:24,480 --> 00:29:26,480
flags that you have here uh the only

722
00:29:26,480 --> 00:29:27,600
thing that i'll just kind of reiterate

723
00:29:27,600 --> 00:29:29,279
that i had mentioned in the chat was um

724
00:29:29,279 --> 00:29:31,039
it wasn't quite clear to me

725
00:29:31,039 --> 00:29:33,360
that when it says about don't recompute

726
00:29:33,360 --> 00:29:35,760
due to updated topology information

727
00:29:35,760 --> 00:29:37,200
um let's say something happens in the

728
00:29:37,200 --> 00:29:38,960
network or there's uncontrolled traffic

729
00:29:38,960 --> 00:29:40,720
right so if we're trying to guarantee

730
00:29:40,720 --> 00:29:42,480
bandwidth for a given path for a given

731
00:29:42,480 --> 00:29:43,760
canada path

732
00:29:43,760 --> 00:29:46,320
and maybe there's a traffic surge on i

733
00:29:46,320 --> 00:29:48,480
don't know legacy ldp traffic

734
00:29:48,480 --> 00:29:50,480
or maybe a lag member dropped which

735
00:29:50,480 --> 00:29:52,480
means the capacity dropped

736
00:29:52,480 --> 00:29:55,279
would one expect the pc to tear down the

737
00:29:55,279 --> 00:29:58,240
path because bandwidth is no longer met

738
00:29:58,240 --> 00:30:00,159
or should it will stay

739
00:30:00,159 --> 00:30:02,399
up and valid in that case

740
00:30:02,399 --> 00:30:05,440
so i would say that i can clarify in the

741
00:30:05,440 --> 00:30:08,000
drought but i would say that if lsp

742
00:30:08,000 --> 00:30:09,760
should be should be really down then

743
00:30:09,760 --> 00:30:11,760
basically the trigger can be considered

744
00:30:11,760 --> 00:30:14,960
as as the report with all flag

745
00:30:14,960 --> 00:30:17,279
indicating that the pub is down and

746
00:30:17,279 --> 00:30:19,440
based on that pc can potentially still

747
00:30:19,440 --> 00:30:22,240
recompute so even if i was speeding down

748
00:30:22,240 --> 00:30:24,480
just because of the topology change we

749
00:30:24,480 --> 00:30:26,799
can still uh pc can still trigger the

750
00:30:26,799 --> 00:30:28,960
part computation based on osp going down

751
00:30:28,960 --> 00:30:31,360
and because in case of cs policies we

752
00:30:31,360 --> 00:30:32,159
have

753
00:30:32,159 --> 00:30:35,679
weho backup so if primary part

754
00:30:35,679 --> 00:30:37,600
is going down then the cup can still

755
00:30:37,600 --> 00:30:39,039
take over and

756
00:30:39,039 --> 00:30:41,919
um primary part can be reported as down

757
00:30:41,919 --> 00:30:45,360
pc can compute it because it can see

758
00:30:45,360 --> 00:30:48,960
lsp reported with all flag

759
00:30:48,960 --> 00:30:50,399
set to down

760
00:30:50,399 --> 00:30:53,919
and and then again both both candidate

761
00:30:53,919 --> 00:30:55,200
parts can be up

762
00:30:55,200 --> 00:30:56,159
so

763
00:30:56,159 --> 00:30:58,559
maybe we can introduce one more flag

764
00:30:58,559 --> 00:31:01,600
here to indicate if if pc can recompute

765
00:31:01,600 --> 00:31:05,039
if lsb is down or if um

766
00:31:05,039 --> 00:31:08,000
if it can recompute if original pad is

767
00:31:08,000 --> 00:31:09,919
still valid

768
00:31:09,919 --> 00:31:12,240
yeah i think i think the is still valid

769
00:31:12,240 --> 00:31:13,360
is the important part because in this

770
00:31:13,360 --> 00:31:16,080
case if there's a bandwidth um

771
00:31:16,080 --> 00:31:18,320
invalidation in the network the pcc

772
00:31:18,320 --> 00:31:19,519
wouldn't actually be aware of it because

773
00:31:19,519 --> 00:31:21,760
naturally there's no signaling so if pc

774
00:31:21,760 --> 00:31:23,279
is doing let's say telemetry collection

775
00:31:23,279 --> 00:31:24,960
it's only the pc that can actually say

776
00:31:24,960 --> 00:31:26,640
hey you know what i'm sending your

777
00:31:26,640 --> 00:31:28,080
traffic flow across a link that doesn't

778
00:31:28,080 --> 00:31:30,080
support that capacity anymore unless of

779
00:31:30,080 --> 00:31:31,039
course you're doing packet loss

780
00:31:31,039 --> 00:31:32,720
detection or something as well

781
00:31:32,720 --> 00:31:35,360
um yes i i like the idea of saying you

782
00:31:35,360 --> 00:31:36,240
know

783
00:31:36,240 --> 00:31:38,159
is pat still valid you know you're

784
00:31:38,159 --> 00:31:40,480
permitted to do something as long as

785
00:31:40,480 --> 00:31:42,080
you know the path is no longer valid i

786
00:31:42,080 --> 00:31:43,440
think would be a good kind of concept to

787
00:31:43,440 --> 00:31:46,080
introduce here

788
00:31:50,510 --> 00:31:53,559
[Music]

789
00:32:02,320 --> 00:32:04,720
go ahead

790
00:32:10,880 --> 00:32:14,559
i see i see all beats in the uh

791
00:32:14,559 --> 00:32:19,840
rp object in of rfc 54 50

792
00:32:19,840 --> 00:32:24,640
50 right so can we reuse that feat or do

793
00:32:24,640 --> 00:32:25,919
we have any

794
00:32:25,919 --> 00:32:28,000
reason to

795
00:32:28,000 --> 00:32:30,080
okay okay i saw that

796
00:32:30,080 --> 00:32:32,639
is this thing

797
00:32:33,600 --> 00:32:35,360
in case of stateless messages we are

798
00:32:35,360 --> 00:32:37,679
reusing existing flag so we are just

799
00:32:37,679 --> 00:32:40,399
explaining what that flag means for

800
00:32:40,399 --> 00:32:42,720
first segment routing

801
00:32:42,720 --> 00:32:44,640
just for stateful messages we are

802
00:32:44,640 --> 00:32:47,760
introducing new new flag because rp

803
00:32:47,760 --> 00:32:52,080
object is not using in stateful messages

804
00:32:54,080 --> 00:32:55,440
okay

805
00:32:55,440 --> 00:32:57,840
gotcha

806
00:32:58,799 --> 00:33:01,760
fan go ahead

807
00:33:03,919 --> 00:33:04,799
um

808
00:33:04,799 --> 00:33:08,640
my audible i think yes thomas cart okay

809
00:33:08,640 --> 00:33:09,440
um

810
00:33:09,440 --> 00:33:12,080
just uh clarification questions i

811
00:33:12,080 --> 00:33:15,039
actually also did to the previous uh um

812
00:33:15,039 --> 00:33:18,960
draft preview previous presentation um i

813
00:33:18,960 --> 00:33:19,679
i

814
00:33:19,679 --> 00:33:23,200
um i see that the the previous uh draft

815
00:33:23,200 --> 00:33:25,360
is the informational draft so can i

816
00:33:25,360 --> 00:33:29,519
understand this cs policy is a is this

817
00:33:29,519 --> 00:33:30,399
um

818
00:33:30,399 --> 00:33:32,880
it's based on the sr policy button

819
00:33:32,880 --> 00:33:35,440
there's no extension

820
00:33:35,440 --> 00:33:37,440
there's no extension to the as our

821
00:33:37,440 --> 00:33:39,840
policy

822
00:33:40,559 --> 00:33:42,720
maybe this question is not for you but

823
00:33:42,720 --> 00:33:46,080
for the previous uh presenter um but

824
00:33:46,080 --> 00:33:48,720
i i see i i am i

825
00:33:48,720 --> 00:33:51,519
correct to understand this that the cs

826
00:33:51,519 --> 00:33:56,080
policy is not extended by uh controlling

827
00:33:56,080 --> 00:33:57,760
protocol

828
00:33:57,760 --> 00:34:00,720
in terms of controlling control particle

829
00:34:00,720 --> 00:34:01,519
um

830
00:34:01,519 --> 00:34:04,399
compared to sr policy

831
00:34:04,399 --> 00:34:08,719
and i understand that the the the

832
00:34:08,719 --> 00:34:11,599
the pc pce protect um protocol

833
00:34:11,599 --> 00:34:14,159
extensions to the sr policy actually is

834
00:34:14,159 --> 00:34:14,960
not

835
00:34:14,960 --> 00:34:16,879
extended and is

836
00:34:16,879 --> 00:34:19,760
inherited um um

837
00:34:19,760 --> 00:34:23,599
as it is inherited uh attached um to

838
00:34:23,599 --> 00:34:26,960
this cs policy

839
00:34:28,879 --> 00:34:33,280
yeah so uh so the extension itself is or

840
00:34:33,280 --> 00:34:36,399
the cs policies are basically uh

841
00:34:36,399 --> 00:34:39,760
implemented using existing existing

842
00:34:39,760 --> 00:34:43,280
uh rfcs and there are just these few

843
00:34:43,280 --> 00:34:45,839
smaller changes which are done which are

844
00:34:45,839 --> 00:34:47,359
needed in

845
00:34:47,359 --> 00:34:48,879
but from

846
00:34:48,879 --> 00:34:50,879
as a policy perspective we are using

847
00:34:50,879 --> 00:34:54,639
existing concepts and

848
00:34:54,800 --> 00:34:57,200
i'm not sure education do you want to

849
00:34:57,200 --> 00:34:59,440
add anything on top of that i can see

850
00:34:59,440 --> 00:35:00,720
that

851
00:35:00,720 --> 00:35:02,240
we

852
00:35:02,240 --> 00:35:03,200
yeah

853
00:35:03,200 --> 00:35:05,760
can you hear me yeah

854
00:35:05,760 --> 00:35:08,079
christian do state your name

855
00:35:08,079 --> 00:35:10,640
yeah this is christian um so thanks for

856
00:35:10,640 --> 00:35:13,200
the question yes the circuit style as

857
00:35:13,200 --> 00:35:15,280
our policy draft is informational

858
00:35:15,280 --> 00:35:16,480
because

859
00:35:16,480 --> 00:35:17,520
we are

860
00:35:17,520 --> 00:35:20,480
not changing the sr policy architecture

861
00:35:20,480 --> 00:35:22,960
right so we are using existing

862
00:35:22,960 --> 00:35:25,280
uh constructs like you have one

863
00:35:25,280 --> 00:35:26,880
candidate path or multiple candidate

864
00:35:26,880 --> 00:35:28,480
paths you could have

865
00:35:28,480 --> 00:35:33,040
oem or liveness on the candidate paths

866
00:35:33,040 --> 00:35:35,520
and things of that nature

867
00:35:35,520 --> 00:35:37,040
circuit style

868
00:35:37,040 --> 00:35:39,680
sr policies are really

869
00:35:39,680 --> 00:35:42,079
let's say a description of using

870
00:35:42,079 --> 00:35:45,520
many different mechanisms that are based

871
00:35:45,520 --> 00:35:46,640
upon this

872
00:35:46,640 --> 00:35:48,880
policy architecture as well as already

873
00:35:48,880 --> 00:35:51,040
defined pcip extensions

874
00:35:51,040 --> 00:35:53,920
uh and samuel's extension is uh

875
00:35:53,920 --> 00:35:56,160
extensions are extensions that haven't

876
00:35:56,160 --> 00:35:58,960
been defined so far but are also needed

877
00:35:58,960 --> 00:36:01,440
to overall make circuit cell policies

878
00:36:01,440 --> 00:36:03,839
possible

879
00:36:04,079 --> 00:36:06,240
yeah thank you i understand

880
00:36:06,240 --> 00:36:08,960
one last question um

881
00:36:08,960 --> 00:36:12,720
if this cscs policy actually is targeted

882
00:36:12,720 --> 00:36:17,599
to both srv6 and sr amperes right

883
00:36:17,599 --> 00:36:20,320
that is correct

884
00:36:20,480 --> 00:36:24,160
okay um thank you and um this this work

885
00:36:24,160 --> 00:36:25,440
is

886
00:36:25,440 --> 00:36:28,880
actually experientially bringing very uh

887
00:36:28,880 --> 00:36:32,320
it's very it's very interesting um work

888
00:36:32,320 --> 00:36:35,440
and it provides a approach to

889
00:36:35,440 --> 00:36:38,839
to to carry this uh the legacy um

890
00:36:38,839 --> 00:36:40,800
services

891
00:36:40,800 --> 00:36:42,560
but i i think there are more uh

892
00:36:42,560 --> 00:36:45,839
considerations or more questions we can

893
00:36:45,839 --> 00:36:49,359
confirm um in other working groups it's

894
00:36:49,359 --> 00:36:52,640
also pce related

895
00:36:52,640 --> 00:36:54,400
yes

896
00:36:54,400 --> 00:36:55,920
we didn't have a lot of time but i think

897
00:36:55,920 --> 00:36:57,359
we can have discussion on the mailing

898
00:36:57,359 --> 00:36:58,240
list

899
00:36:58,240 --> 00:37:00,560
like some of the diffserv uh assumptions

900
00:37:00,560 --> 00:37:02,400
i didn't really cover in detail but we

901
00:37:02,400 --> 00:37:05,200
can discuss this definitely

902
00:37:05,200 --> 00:37:06,720
just one point

903
00:37:06,720 --> 00:37:08,880
uh just one point that i wanted to also

904
00:37:08,880 --> 00:37:10,400
bring when i was discussing this with

905
00:37:10,400 --> 00:37:13,280
samuel my initial reaction of looking at

906
00:37:13,280 --> 00:37:16,400
this tlv felt very much like oh it's a

907
00:37:16,400 --> 00:37:19,520
policy and we have policy association

908
00:37:19,520 --> 00:37:22,400
and maybe we can just reuse it but his

909
00:37:22,400 --> 00:37:25,200
reply was and based on what i'm hearing

910
00:37:25,200 --> 00:37:27,680
uh in the room as well people would like

911
00:37:27,680 --> 00:37:29,760
not to use uh like you know generic

912
00:37:29,760 --> 00:37:31,839
policy association where you need to

913
00:37:31,839 --> 00:37:34,320
configure this as a policy but rather

914
00:37:34,320 --> 00:37:35,119
have

915
00:37:35,119 --> 00:37:37,359
a sort of like a way to signal this

916
00:37:37,359 --> 00:37:39,119
well-known policies

917
00:37:39,119 --> 00:37:42,960
as a tlv outside but uh i want the

918
00:37:42,960 --> 00:37:44,560
working group to think about it a little

919
00:37:44,560 --> 00:37:46,880
bit that if we have this kind of

920
00:37:46,880 --> 00:37:49,440
well-known policies what is the best way

921
00:37:49,440 --> 00:37:52,079
for us to signal in long terms do we

922
00:37:52,079 --> 00:37:54,800
define tlvs like this or should we come

923
00:37:54,800 --> 00:37:56,000
up with a way

924
00:37:56,000 --> 00:37:59,040
of defining well-known policies

925
00:37:59,040 --> 00:38:01,520
uh that can and still

926
00:38:01,520 --> 00:38:04,240
use our policy association

927
00:38:04,240 --> 00:38:06,720
mechanism so something to think about

928
00:38:06,720 --> 00:38:08,960
and i would also be interested in

929
00:38:08,960 --> 00:38:11,200
feedback from the authors as well as

930
00:38:11,200 --> 00:38:14,480
others in the working group on that

931
00:38:16,880 --> 00:38:19,119
okay and i think let's take that to the

932
00:38:19,119 --> 00:38:21,839
mailing list and let's move to the next

933
00:38:21,839 --> 00:38:24,400
presentation

934
00:38:27,680 --> 00:38:31,480
you you have the float

935
00:38:32,720 --> 00:38:35,279
can you hear me

936
00:38:37,440 --> 00:38:38,400
so

937
00:38:38,400 --> 00:38:40,400
uh hello experts i'm you from china

938
00:38:40,400 --> 00:38:43,440
telecom i will introduce our draft and

939
00:38:43,440 --> 00:38:45,520
some essential updates

940
00:38:45,520 --> 00:38:48,240
next slide please

941
00:38:49,440 --> 00:38:51,440
well considering the large-scale

942
00:38:51,440 --> 00:38:53,920
development of the ethernet interface it

943
00:38:53,920 --> 00:38:56,240
is possible to use the info contained in

944
00:38:56,240 --> 00:38:58,960
the layer 2 frame to simplify the

945
00:38:58,960 --> 00:39:01,839
end-to-end package forwarding procedure

946
00:39:01,839 --> 00:39:07,040
based on rfc 9050 which specifies the pc

947
00:39:07,040 --> 00:39:09,920
extensions for pcc to derive an npr's

948
00:39:09,920 --> 00:39:11,920
label switch pass

949
00:39:11,920 --> 00:39:14,800
this document defines the psap extension

950
00:39:14,800 --> 00:39:17,440
for the line basis tractive wording in

951
00:39:17,440 --> 00:39:19,680
native american network

952
00:39:19,680 --> 00:39:24,000
compare with the rfc 8821 which

953
00:39:24,000 --> 00:39:26,960
describes an architecture for pc-based

954
00:39:26,960 --> 00:39:29,599
traffic engineering in native lp

955
00:39:29,599 --> 00:39:30,720
networks

956
00:39:30,720 --> 00:39:33,359
this draft describes the processes of

957
00:39:33,359 --> 00:39:35,440
data packet forwarding system based on

958
00:39:35,440 --> 00:39:36,880
vlan info

959
00:39:36,880 --> 00:39:39,839
okay next up please

960
00:39:41,200 --> 00:39:43,280
there are strong motivations for the

961
00:39:43,280 --> 00:39:45,920
operator to provide to provide the

962
00:39:45,920 --> 00:39:48,480
end-to-end solution to preferred

963
00:39:48,480 --> 00:39:50,160
application traffic

964
00:39:50,160 --> 00:39:53,119
so this page shows the target scenario

965
00:39:53,119 --> 00:39:54,880
of the strat

966
00:39:54,880 --> 00:39:56,960
the requirement should meet the

967
00:39:56,960 --> 00:39:58,720
following two points

968
00:39:58,720 --> 00:40:01,040
the first one intro or into domain

969
00:40:01,040 --> 00:40:03,680
traffic guarantee the second one

970
00:40:03,680 --> 00:40:06,480
the controller senses the network states

971
00:40:06,480 --> 00:40:08,960
and dynamically adapt adapt to the

972
00:40:08,960 --> 00:40:10,640
network states

973
00:40:10,640 --> 00:40:13,680
okay that's like this

974
00:40:15,839 --> 00:40:17,839
based on the scenario about

975
00:40:17,839 --> 00:40:20,240
the actuator requirements can be

976
00:40:20,240 --> 00:40:22,800
generalized as follows which can

977
00:40:22,800 --> 00:40:27,760
which are consistent with our fc 8821

978
00:40:27,760 --> 00:40:29,040
the first one

979
00:40:29,040 --> 00:40:32,319
same solution for native ipv4 or ipv6

980
00:40:32,319 --> 00:40:33,359
traffic

981
00:40:33,359 --> 00:40:36,480
the second one support for intra or int

982
00:40:36,480 --> 00:40:38,800
and into domain scenarios

983
00:40:38,800 --> 00:40:39,680
step

984
00:40:39,680 --> 00:40:42,400
the third point achieve end-to-end

985
00:40:42,400 --> 00:40:45,040
traffic assurance with determine

986
00:40:45,040 --> 00:40:47,119
determine the chaos behavior

987
00:40:47,119 --> 00:40:49,520
for trafficking requiring a service

988
00:40:49,520 --> 00:40:50,960
assurance

989
00:40:50,960 --> 00:40:53,599
the first one based on the centralized

990
00:40:53,599 --> 00:40:55,680
controls through a distributed network

991
00:40:55,680 --> 00:40:56,960
control plane

992
00:40:56,960 --> 00:40:58,319
the fifth one

993
00:40:58,319 --> 00:41:01,359
ability to adjust all the optima the

994
00:41:01,359 --> 00:41:04,160
optimal pass dynamically upon the

995
00:41:04,160 --> 00:41:06,800
changes of network states

996
00:41:06,800 --> 00:41:10,079
no need for reserving resources for

997
00:41:10,079 --> 00:41:12,720
physical links in advance

998
00:41:12,720 --> 00:41:15,680
okay that's at least

999
00:41:17,280 --> 00:41:19,839
as shown in this figure the procedures

1000
00:41:19,839 --> 00:41:21,920
are for vlan based traffic forwarding

1001
00:41:21,920 --> 00:41:23,599
are other flows

1002
00:41:23,599 --> 00:41:27,520
step 1 the pc calculates the explicit

1003
00:41:27,520 --> 00:41:29,520
route and sends the route information to

1004
00:41:29,520 --> 00:41:33,359
the pcc through the pc initial messages

1005
00:41:33,359 --> 00:41:37,119
step two the ingress pcc like r3 forms

1006
00:41:37,119 --> 00:41:39,680
the vlm forwarding routine table

1007
00:41:39,680 --> 00:41:40,960
and the

1008
00:41:40,960 --> 00:41:45,200
transit pcc like r1 r2 and r4

1009
00:41:45,200 --> 00:41:48,720
and the egress pcc like r5 forms a vlan

1010
00:41:48,720 --> 00:41:50,720
crossing routing table

1011
00:41:50,720 --> 00:41:53,440
step 3 the packet to be guaranteed

1012
00:41:53,440 --> 00:41:55,280
matches the table

1013
00:41:55,280 --> 00:41:57,280
and then be labeled with corresponding

1014
00:41:57,280 --> 00:42:00,160
with land tag as marketing the red line

1015
00:42:00,160 --> 00:42:02,400
therefore the label packet will be

1016
00:42:02,400 --> 00:42:05,200
further sent to the pcc specific sub

1017
00:42:05,200 --> 00:42:07,200
interface and identified by the

1018
00:42:07,200 --> 00:42:10,000
valentine and then be forwarded

1019
00:42:10,000 --> 00:42:12,720
aside please

1020
00:42:14,880 --> 00:42:17,839
the data packet e-calculation processes

1021
00:42:17,839 --> 00:42:20,400
is shown in this slides

1022
00:42:20,400 --> 00:42:22,640
when the original data packet was sent

1023
00:42:22,640 --> 00:42:25,520
to the ingress node it will look at the

1024
00:42:25,520 --> 00:42:27,920
vfr table of r1

1025
00:42:27,920 --> 00:42:30,000
if matched the packet will be labeled

1026
00:42:30,000 --> 00:42:32,240
with corresponding with land tag

1027
00:42:32,240 --> 00:42:34,000
the labeled packet will then will be

1028
00:42:34,000 --> 00:42:36,079
sent to the transient node

1029
00:42:36,079 --> 00:42:39,040
similarly it will look up the vcr table

1030
00:42:39,040 --> 00:42:42,000
which only contains the in and out vlan

1031
00:42:42,000 --> 00:42:45,119
and then be forwarded to the ingress

1032
00:42:45,119 --> 00:42:49,119
node the output of the vcr table is zero

1033
00:42:49,119 --> 00:42:51,760
so the vlan will be unlabeled and

1034
00:42:51,760 --> 00:42:54,480
under returns to the normal forwarding

1035
00:42:54,480 --> 00:42:57,119
um there are potent there are potential

1036
00:42:57,119 --> 00:43:00,079
conflicts in future when each kind of

1037
00:43:00,079 --> 00:43:01,760
service expands

1038
00:43:01,760 --> 00:43:04,960
so compared with mpis

1039
00:43:04,960 --> 00:43:07,440
the mechanism uses a completely new

1040
00:43:07,440 --> 00:43:10,480
address space to bypass the already used

1041
00:43:10,480 --> 00:43:12,480
nps label space

1042
00:43:12,480 --> 00:43:14,880
which will not conflict with other

1043
00:43:14,880 --> 00:43:18,319
existing protocols and avoid

1044
00:43:18,319 --> 00:43:20,319
considering the

1045
00:43:20,319 --> 00:43:22,960
and avoid considering the label overlap

1046
00:43:22,960 --> 00:43:26,800
of the already of the already used

1047
00:43:26,800 --> 00:43:28,640
nps services

1048
00:43:28,640 --> 00:43:31,359
in the empire's native ip mixed

1049
00:43:31,359 --> 00:43:33,040
environment

1050
00:43:33,040 --> 00:43:36,880
compared with srv6 it avoids the rsrh

1051
00:43:36,880 --> 00:43:38,800
overhead problem

1052
00:43:38,800 --> 00:43:41,839
so totally it is suitable for ipv4 and

1053
00:43:41,839 --> 00:43:44,400
ipv6 networks and can leverage the

1054
00:43:44,400 --> 00:43:45,839
existing

1055
00:43:45,839 --> 00:43:48,880
pc technologies as much as possible

1056
00:43:48,880 --> 00:43:51,599
as i please

1057
00:43:53,119 --> 00:43:56,880
and we specified the vlan forwarding and

1058
00:43:56,880 --> 00:43:59,200
vlan crossing routing table like the

1059
00:43:59,200 --> 00:44:00,400
figure

1060
00:44:00,400 --> 00:44:02,240
showing in this site

1061
00:44:02,240 --> 00:44:04,400
the landform routing table should be

1062
00:44:04,400 --> 00:44:06,880
maintained in the ingress bcc

1063
00:44:06,880 --> 00:44:09,200
and you to match the packet to the

1064
00:44:09,200 --> 00:44:11,040
guaranteed base

1065
00:44:11,040 --> 00:44:13,599
to to be guaranteed based on the source

1066
00:44:13,599 --> 00:44:16,560
and destination pgp prefix

1067
00:44:16,560 --> 00:44:18,480
the land crossing routine table should

1068
00:44:18,480 --> 00:44:19,920
be maintained

1069
00:44:19,920 --> 00:44:23,280
in the transit pcc and the egress pcc

1070
00:44:23,280 --> 00:44:25,440
through the mapping of the in and the

1071
00:44:25,440 --> 00:44:26,800
outly land

1072
00:44:26,800 --> 00:44:29,200
the pack the data to be guaranteed will

1073
00:44:29,200 --> 00:44:31,760
be transferred to the specific interface

1074
00:44:31,760 --> 00:44:34,319
and be switched on the output

1075
00:44:34,319 --> 00:44:37,760
for the transit pcc or zero for the

1076
00:44:37,760 --> 00:44:40,000
egress pcc

1077
00:44:40,000 --> 00:44:42,640
as i please

1078
00:44:44,160 --> 00:44:47,440
based on the last version we also added

1079
00:44:47,440 --> 00:44:51,200
the vlan switching path sequence diagram

1080
00:44:51,200 --> 00:44:54,560
to describe the vsp setup operation

1081
00:44:54,560 --> 00:44:57,319
refers to our

1082
00:44:57,319 --> 00:45:01,640
rfc82a1 and rfc89050

1083
00:45:02,319 --> 00:45:05,720
nasa please

1084
00:45:05,760 --> 00:45:06,640
okay

1085
00:45:06,640 --> 00:45:08,800
that's the main content of this draft

1086
00:45:08,800 --> 00:45:10,960
and the comments and the suggestion has

1087
00:45:10,960 --> 00:45:13,359
been fully discussed on the mailing list

1088
00:45:13,359 --> 00:45:16,400
and have been resolved so i think these

1089
00:45:16,400 --> 00:45:18,319
documents are ready to request for

1090
00:45:18,319 --> 00:45:21,520
adoption thank you

1091
00:45:23,839 --> 00:45:27,960
are there any comments from anyone

1092
00:45:32,880 --> 00:45:35,920
uh one comment uh which i would also ask

1093
00:45:35,920 --> 00:45:39,280
is uh which i kind of alluded to during

1094
00:45:39,280 --> 00:45:40,880
the last last

1095
00:45:40,880 --> 00:45:43,359
uh last time when this was discussed as

1096
00:45:43,359 --> 00:45:44,160
well

1097
00:45:44,160 --> 00:45:46,720
uh but the thing is like when we uh did

1098
00:45:46,720 --> 00:45:49,359
the native ip work in pce we had the

1099
00:45:49,359 --> 00:45:52,079
document in teas working group and it's

1100
00:45:52,079 --> 00:45:54,160
already an rfc and there was a consensus

1101
00:45:54,160 --> 00:45:57,040
behind that approach and for pc to add

1102
00:45:57,040 --> 00:45:59,119
an extension it was pretty uh

1103
00:45:59,119 --> 00:46:00,400
straightforward

1104
00:46:00,400 --> 00:46:02,560
in this case what we are doing is we are

1105
00:46:02,560 --> 00:46:04,880
introducing things like v

1106
00:46:04,880 --> 00:46:06,880
vfr vcr

1107
00:46:06,880 --> 00:46:07,920
and

1108
00:46:07,920 --> 00:46:10,079
a sort of tables which needs to be in

1109
00:46:10,079 --> 00:46:12,560
the data plane and i am a little bit

1110
00:46:12,560 --> 00:46:14,640
uncomfortable with it because it's sort

1111
00:46:14,640 --> 00:46:17,280
of like outside what pc working group is

1112
00:46:17,280 --> 00:46:18,560
chartered to do

1113
00:46:18,560 --> 00:46:21,440
and i wanted to get an explanation or if

1114
00:46:21,440 --> 00:46:23,119
i remember the explanation i was given

1115
00:46:23,119 --> 00:46:25,280
is this is not something which is new we

1116
00:46:25,280 --> 00:46:27,760
are just defining new terms here

1117
00:46:27,760 --> 00:46:30,160
and i was still not sure and i wanted to

1118
00:46:30,160 --> 00:46:32,400
get a feedback from the working group as

1119
00:46:32,400 --> 00:46:35,359
well on whether they consider this as a

1120
00:46:35,359 --> 00:46:39,119
part of pce or whether

1121
00:46:39,119 --> 00:46:42,240
this idea of how this vfr tables and vcr

1122
00:46:42,240 --> 00:46:44,560
tables needs to be described in some

1123
00:46:44,560 --> 00:46:45,680
other place

1124
00:46:45,680 --> 00:46:47,359
and then the extension should be done

1125
00:46:47,359 --> 00:46:48,160
here

1126
00:46:48,160 --> 00:46:50,480
so any feedback from the working group

1127
00:46:50,480 --> 00:46:51,920
would also be nice as well as from the

1128
00:46:51,920 --> 00:46:55,640
authors on this

1129
00:46:59,599 --> 00:47:02,319
yep uh we have discussed with the uh

1130
00:47:02,319 --> 00:47:04,800
cooperators and i think we have

1131
00:47:04,800 --> 00:47:08,960
discussed already and we made some uh

1132
00:47:08,960 --> 00:47:12,079
updates on the newly

1133
00:47:12,079 --> 00:47:14,720
discussed draft and

1134
00:47:14,720 --> 00:47:17,280
maybe we can discuss

1135
00:47:17,280 --> 00:47:20,160
further in the mailing list

1136
00:47:20,160 --> 00:47:24,279
sure i should go ahead

1137
00:47:30,640 --> 00:47:32,079
hello

1138
00:47:32,079 --> 00:47:34,480
yes we can hear you yeah

1139
00:47:34,480 --> 00:47:35,599
uh

1140
00:47:35,599 --> 00:47:37,520
i think

1141
00:47:37,520 --> 00:47:39,200
we vcr table

1142
00:47:39,200 --> 00:47:41,280
is

1143
00:47:41,280 --> 00:47:43,760
implementing the device

1144
00:47:43,760 --> 00:47:44,960
so

1145
00:47:44,960 --> 00:47:47,200
here the main point

1146
00:47:47,200 --> 00:47:48,480
is the

1147
00:47:48,480 --> 00:47:51,520
instruction sent from the pce

1148
00:47:51,520 --> 00:47:53,599
to the pcc

1149
00:47:53,599 --> 00:47:55,920
so i think

1150
00:47:55,920 --> 00:47:58,480
such work should should be

1151
00:47:58,480 --> 00:48:00,559
included in the

1152
00:48:00,559 --> 00:48:03,620
pc working group okay

1153
00:48:03,620 --> 00:48:05,280
[Music]

1154
00:48:05,280 --> 00:48:07,760
so let's just to clarify what i meant

1155
00:48:07,760 --> 00:48:10,240
was that anything related to our message

1156
00:48:10,240 --> 00:48:13,440
definitely it's a part of pce but the

1157
00:48:13,440 --> 00:48:15,680
document also describe how this

1158
00:48:15,680 --> 00:48:18,640
forwarding is happening and how the vpr

1159
00:48:18,640 --> 00:48:20,400
tables are populated

1160
00:48:20,400 --> 00:48:22,240
and how they are maintained

1161
00:48:22,240 --> 00:48:24,640
is that a part of pc charter i'm not

1162
00:48:24,640 --> 00:48:26,800
sure and i will take this up with our ad

1163
00:48:26,800 --> 00:48:28,880
and discuss with julian as well and

1164
00:48:28,880 --> 00:48:29,760
we'll

1165
00:48:29,760 --> 00:48:31,599
uh and we are looking for feedback from

1166
00:48:31,599 --> 00:48:33,440
the working group as well so please let

1167
00:48:33,440 --> 00:48:35,119
us know what feedback that they have

1168
00:48:35,119 --> 00:48:37,520
about this document

1169
00:48:37,520 --> 00:48:39,680
okay i think we can

1170
00:48:39,680 --> 00:48:42,400
treat the table as a

1171
00:48:42,400 --> 00:48:46,000
space of policy uh traffic policy

1172
00:48:46,000 --> 00:48:46,839
so

1173
00:48:46,839 --> 00:48:48,559
uh

1174
00:48:48,559 --> 00:48:51,760
it is using the existing

1175
00:48:51,760 --> 00:48:53,520
mechanism

1176
00:48:53,520 --> 00:48:55,359
okay

1177
00:48:55,359 --> 00:48:57,599
okay let's continue that discussion

1178
00:48:57,599 --> 00:48:58,880
uh let's move on to the next

1179
00:48:58,880 --> 00:49:01,880
presentation

1180
00:49:05,119 --> 00:49:07,920
you none go ahead

1181
00:49:09,040 --> 00:49:10,559
can you hear me

1182
00:49:10,559 --> 00:49:12,400
yes

1183
00:49:12,400 --> 00:49:15,839
okay hi pce experts i am finally from

1184
00:49:15,839 --> 00:49:18,400
china telecom in the last version of our

1185
00:49:18,400 --> 00:49:22,000
documents we described the related

1186
00:49:22,000 --> 00:49:25,200
processes of peer multicast based on pce

1187
00:49:25,200 --> 00:49:28,200
exercise

1188
00:49:28,640 --> 00:49:31,839
in this update we want to use a

1189
00:49:31,839 --> 00:49:35,119
pce-based document to include the

1190
00:49:35,119 --> 00:49:36,240
management

1191
00:49:36,240 --> 00:49:41,359
processes of ipml ip mrdp and sr

1192
00:49:41,359 --> 00:49:42,960
multicast trees

1193
00:49:42,960 --> 00:49:44,480
the same idea

1194
00:49:44,480 --> 00:49:46,559
based on bgp has

1195
00:49:46,559 --> 00:49:49,359
has already been accepted the overall

1196
00:49:49,359 --> 00:49:52,640
process includes three aspects the first

1197
00:49:52,640 --> 00:49:55,440
is multicast tree information discovery

1198
00:49:55,440 --> 00:49:59,280
when a pce calculates a multicast tree

1199
00:49:59,280 --> 00:50:01,359
it needs to collect

1200
00:50:01,359 --> 00:50:04,480
three information of fruit and leaves

1201
00:50:04,480 --> 00:50:07,359
we have designed corresponding signaling

1202
00:50:07,359 --> 00:50:09,520
to spot days

1203
00:50:09,520 --> 00:50:12,559
the second is multicast

1204
00:50:12,559 --> 00:50:16,240
state setup and updates this process is

1205
00:50:16,240 --> 00:50:17,200
to

1206
00:50:17,200 --> 00:50:19,599
set up project forwarding states on

1207
00:50:19,599 --> 00:50:22,000
relevant nodes for different multicast

1208
00:50:22,000 --> 00:50:24,960
trees and replication technologies

1209
00:50:24,960 --> 00:50:25,839
and

1210
00:50:25,839 --> 00:50:28,960
establish relationship between multicast

1211
00:50:28,960 --> 00:50:33,680
3 and p2mp paths the third is

1212
00:50:33,680 --> 00:50:35,040
multicast

1213
00:50:35,040 --> 00:50:38,240
multiple statistics synchronization this

1214
00:50:38,240 --> 00:50:41,440
process is to synchronize multicast

1215
00:50:41,440 --> 00:50:43,119
multicast

1216
00:50:43,119 --> 00:50:46,640
statistics between egress and pce and

1217
00:50:46,640 --> 00:50:49,839
between pce and ingress

1218
00:50:49,839 --> 00:50:52,839
for multicast service analysis and

1219
00:50:52,839 --> 00:50:57,920
business development next slide please

1220
00:51:00,800 --> 00:51:03,040
in the multicultural trade information

1221
00:51:03,040 --> 00:51:04,960
discovery processing

1222
00:51:04,960 --> 00:51:07,599
process ingress cells source

1223
00:51:07,599 --> 00:51:11,280
registration to pce where report message

1224
00:51:11,280 --> 00:51:13,680
carry multicast source registration

1225
00:51:13,680 --> 00:51:16,559
objects the send message

1226
00:51:16,559 --> 00:51:20,480
it needs to carry tray identifier to use

1227
00:51:20,480 --> 00:51:24,720
used to identify a specific multicast

1228
00:51:24,720 --> 00:51:27,520
tree and the information of source

1229
00:51:27,520 --> 00:51:30,800
in this message the d flag needs to be

1230
00:51:30,800 --> 00:51:34,160
set to request the pce to calculate the

1231
00:51:34,160 --> 00:51:38,000
p2mp path for ingress

1232
00:51:38,000 --> 00:51:40,800
pce will respond with a message

1233
00:51:40,800 --> 00:51:42,880
confirming the requests

1234
00:51:42,880 --> 00:51:46,720
the egress is the multicast receiver

1235
00:51:46,720 --> 00:51:51,119
joining or leaving requests to pce where

1236
00:51:51,119 --> 00:51:54,000
report message carrying multicast

1237
00:51:54,000 --> 00:51:56,640
receiver information objects to send

1238
00:51:56,640 --> 00:51:57,839
messages

1239
00:51:57,839 --> 00:52:00,960
need to carry three identifiers of the

1240
00:52:00,960 --> 00:52:04,079
multicast tree that accuracies requested

1241
00:52:04,079 --> 00:52:07,359
to join or leave and the vpn of

1242
00:52:07,359 --> 00:52:09,200
receivers

1243
00:52:09,200 --> 00:52:12,240
and selectively carry

1244
00:52:12,240 --> 00:52:15,599
bfr information of egress

1245
00:52:15,599 --> 00:52:17,040
in

1246
00:52:17,040 --> 00:52:19,520
in their multicast scenario for

1247
00:52:19,520 --> 00:52:21,760
different multicast trees the tree

1248
00:52:21,760 --> 00:52:25,440
identifier is different for ip multicast

1249
00:52:25,440 --> 00:52:29,760
it is sg or star g tuple

1250
00:52:29,760 --> 00:52:33,920
for mrdp multicast it is mrdp flag

1251
00:52:33,920 --> 00:52:38,240
for sr multipast it is root three id

1252
00:52:38,240 --> 00:52:42,079
tuple next slide please

1253
00:52:42,079 --> 00:52:44,720
for the process of mode of multicast

1254
00:52:44,720 --> 00:52:47,760
surface still set up and updates there

1255
00:52:47,760 --> 00:52:50,480
are different processes for different

1256
00:52:50,480 --> 00:52:52,640
forwarding technologies

1257
00:52:52,640 --> 00:52:55,680
for laboratories the process has been

1258
00:52:55,680 --> 00:52:57,440
defined and

1259
00:52:57,440 --> 00:53:00,240
introducted

1260
00:53:01,119 --> 00:53:04,720
in document pcep extension for p2 and

1261
00:53:04,720 --> 00:53:08,720
psr policy different from p2mp paths in

1262
00:53:08,720 --> 00:53:12,240
some cases each related nodes need to be

1263
00:53:12,240 --> 00:53:16,480
assigned a portrait label to identifiers

1264
00:53:16,480 --> 00:53:19,920
to identify the multicast tree in vpn

1265
00:53:19,920 --> 00:53:22,960
scenario it is also necessary to assign

1266
00:53:22,960 --> 00:53:25,440
vpn forwarding identifier

1267
00:53:25,440 --> 00:53:26,839
therefore we

1268
00:53:26,839 --> 00:53:31,119
defined trade tris failable static trv

1269
00:53:31,119 --> 00:53:35,920
and vpn forwarding identifier trv

1270
00:53:35,920 --> 00:53:38,079
these two tlvs

1271
00:53:38,079 --> 00:53:41,280
needs to be included in cci objects in

1272
00:53:41,280 --> 00:53:42,640
this process

1273
00:53:42,640 --> 00:53:46,000
in addition to rsp objects needs to

1274
00:53:46,000 --> 00:53:49,119
carry three identifiers to associate

1275
00:53:49,119 --> 00:53:52,160
multicast tree and the p2mp path

1276
00:53:52,160 --> 00:53:54,319
next slide please

1277
00:53:54,319 --> 00:53:57,200
you have one minute

1278
00:53:57,200 --> 00:53:58,160
okay

1279
00:53:58,160 --> 00:53:59,440
for beer

1280
00:53:59,440 --> 00:54:01,920
for beer trade it's

1281
00:54:01,920 --> 00:54:03,760
uh for pr trade

1282
00:54:03,760 --> 00:54:06,640
firstly it's a pc combine bfr

1283
00:54:06,640 --> 00:54:10,559
information of egresses into with into b

1284
00:54:10,559 --> 00:54:13,680
string then pc is sent between

1285
00:54:13,680 --> 00:54:16,559
forwarding identifier to egress verb

1286
00:54:16,559 --> 00:54:19,280
update message informing some tool for

1287
00:54:19,280 --> 00:54:23,359
words finally pcie send b string and vpn

1288
00:54:23,359 --> 00:54:25,920
forwarding identifier to the

1289
00:54:25,920 --> 00:54:29,520
ingress where three forwarding

1290
00:54:29,520 --> 00:54:31,839
three forwarding states synchronization

1291
00:54:31,839 --> 00:54:35,520
objects to inform ingress to incur to

1292
00:54:35,520 --> 00:54:37,680
encapsulate and forward packets

1293
00:54:37,680 --> 00:54:40,240
accordingly depending on whether to

1294
00:54:40,240 --> 00:54:43,440
create or update a view tree the united

1295
00:54:43,440 --> 00:54:45,520
message and update message as

1296
00:54:45,520 --> 00:54:47,119
selectively used

1297
00:54:47,119 --> 00:54:49,359
in this message so

1298
00:54:49,359 --> 00:54:53,040
the rsp object needs to carry ip3

1299
00:54:53,040 --> 00:54:56,240
identifier to associate tree identifier

1300
00:54:56,240 --> 00:54:57,119
and

1301
00:54:57,119 --> 00:54:59,520
these strings

1302
00:54:59,520 --> 00:55:01,839
due to due to time constraints

1303
00:55:01,839 --> 00:55:05,040
multicasters static test synchronization

1304
00:55:05,040 --> 00:55:07,599
will not be described

1305
00:55:07,599 --> 00:55:10,079
for the time b and we can discuss it

1306
00:55:10,079 --> 00:55:11,280
later

1307
00:55:11,280 --> 00:55:13,920
that's the main content content of our

1308
00:55:13,920 --> 00:55:17,440
document only any comment our work are

1309
00:55:17,440 --> 00:55:19,200
welcomed thank you

1310
00:55:19,200 --> 00:55:21,760
thank you please uh pass the comments uh

1311
00:55:21,760 --> 00:55:24,640
on the list and let's welcome our last

1312
00:55:24,640 --> 00:55:27,440
speaker thank you

1313
00:55:30,160 --> 00:55:32,480
hello uh can you help me

1314
00:55:32,480 --> 00:55:34,480
yes ron gohan

1315
00:55:34,480 --> 00:55:37,359
okay thank you hi hello everyone i'm i'm

1316
00:55:37,359 --> 00:55:39,920
going to introduce pcep procedures and

1317
00:55:39,920 --> 00:55:43,680
protocol excuses for using pcep as a pcc

1318
00:55:43,680 --> 00:55:45,680
of the next please

1319
00:55:45,680 --> 00:55:46,799
uh

1320
00:55:46,799 --> 00:55:49,359
next is the introduction this draft

1321
00:55:49,359 --> 00:55:52,319
specifies a new mechanism where pce

1322
00:55:52,319 --> 00:55:55,119
allocates the beer information

1323
00:55:55,119 --> 00:55:58,640
centrally and uses pcep to distribute

1324
00:55:58,640 --> 00:56:02,079
them to all nodes then pcc generates a

1325
00:56:02,079 --> 00:56:04,559
bit indexed forwarding tables

1326
00:56:04,559 --> 00:56:07,200
there are two ways in our draft to

1327
00:56:07,200 --> 00:56:10,240
generate a bit index forwarding table

1328
00:56:10,240 --> 00:56:13,920
the first is the pce pcc allocate

1329
00:56:13,920 --> 00:56:17,040
allocate parameters for example beer sub

1330
00:56:17,040 --> 00:56:20,400
domain id bfr id will be algorithm and

1331
00:56:20,400 --> 00:56:24,079
itp algorithm carried by cci object and

1332
00:56:24,079 --> 00:56:25,680
the parameters

1333
00:56:25,680 --> 00:56:28,319
for example bfr prefix

1334
00:56:28,319 --> 00:56:31,839
bsl in calculation type a bift id and

1335
00:56:31,839 --> 00:56:33,920
maxed aside carried by beer in

1336
00:56:33,920 --> 00:56:37,760
capitalism troa and bfr prefix carried

1337
00:56:37,760 --> 00:56:40,400
by efficacy objects to the pcc on

1338
00:56:40,400 --> 00:56:42,240
receiving the beer information's

1339
00:56:42,240 --> 00:56:46,000
allocations species use idp protocol to

1340
00:56:46,000 --> 00:56:48,559
distribute vr related information to

1341
00:56:48,559 --> 00:56:51,440
other nodes the node calculates the next

1342
00:56:51,440 --> 00:56:54,640
hope in this case each tcc only needs to

1343
00:56:54,640 --> 00:56:57,520
allocate its own beer information by the

1344
00:56:57,520 --> 00:56:59,200
pcecc

1345
00:56:59,200 --> 00:57:01,760
another is in scenario where the idp

1346
00:57:01,760 --> 00:57:04,319
protocol is not used or

1347
00:57:04,319 --> 00:57:07,520
available each pcc is allocated its own

1348
00:57:07,520 --> 00:57:10,960
and enable your information by the pcecc

1349
00:57:10,960 --> 00:57:14,079
the npc pcc generates a bit based on the

1350
00:57:14,079 --> 00:57:16,640
information that's received the brevis

1351
00:57:16,640 --> 00:57:20,799
include a beer sub domain id and bfi id

1352
00:57:20,799 --> 00:57:25,520
card by cci object bfr prefix psr bsl in

1353
00:57:25,520 --> 00:57:28,640
and incorporate recent type

1354
00:57:28,640 --> 00:57:31,440
with the fifth id and max si carried by

1355
00:57:31,440 --> 00:57:34,640
the encapsulation toa a bfr neighbor

1356
00:57:34,640 --> 00:57:37,680
carried by address tl and bfr prefix

1357
00:57:37,680 --> 00:57:41,440
carried by fpc objects next please

1358
00:57:41,440 --> 00:57:45,040
for this case is talk about

1359
00:57:45,040 --> 00:57:48,319
the protocol distance uh it includes a

1360
00:57:48,319 --> 00:57:50,960
beer capability advertisement we add b

1361
00:57:50,960 --> 00:57:52,480
bit

1362
00:57:52,480 --> 00:57:55,040
capabilities of toy to extend build

1363
00:57:55,040 --> 00:57:57,599
capability and we also defined a new

1364
00:57:57,599 --> 00:57:58,799
pass

1365
00:57:58,799 --> 00:58:02,160
pass set up type for blt

1366
00:58:02,160 --> 00:58:04,960
for cci objects we defined a new cci

1367
00:58:04,960 --> 00:58:08,559
object type for beer and uh defines all

1368
00:58:08,559 --> 00:58:10,720
the the uses to obviously know

1369
00:58:10,720 --> 00:58:13,839
absolutely why is beer in cap in

1370
00:58:13,839 --> 00:58:16,079
calculations after a way to carry the

1371
00:58:16,079 --> 00:58:18,559
people the beer and

1372
00:58:18,559 --> 00:58:21,280
license information and the other is

1373
00:58:21,280 --> 00:58:24,160
addressed to always carried the bfr

1374
00:58:24,160 --> 00:58:26,720
interface and next hope information for

1375
00:58:26,720 --> 00:58:30,240
fec object which we use is fgc opposite

1376
00:58:30,240 --> 00:58:32,799
one and f is object two

1377
00:58:32,799 --> 00:58:36,720
which is defined in rfc rfc 8664 to

1378
00:58:36,720 --> 00:58:38,960
carry the bfr prefix

1379
00:58:38,960 --> 00:58:40,400
next please

1380
00:58:40,400 --> 00:58:43,839
next is the extension in details of this

1381
00:58:43,839 --> 00:58:47,760
is for pcc capabilities of troy i knew

1382
00:58:47,760 --> 00:58:51,520
just like the picture the format uh we

1383
00:58:51,520 --> 00:58:54,079
we defined we defined

1384
00:58:54,079 --> 00:58:55,200
a new bit

1385
00:58:55,200 --> 00:58:59,040
this is a b bit uh in capability a pce

1386
00:58:59,040 --> 00:59:01,599
cc capabilities of troa

1387
00:59:01,599 --> 00:59:05,440
if it said two one by a pc uh tcp

1388
00:59:05,440 --> 00:59:08,000
speaker that indicates that the pcep

1389
00:59:08,000 --> 00:59:09,839
speaker is uh

1390
00:59:09,839 --> 00:59:11,920
is a capable uh

1391
00:59:11,920 --> 00:59:14,160
for pcc beta capability on the pc you

1392
00:59:14,160 --> 00:59:16,319
would allocate via information on this

1393
00:59:16,319 --> 00:59:19,760
station next please

1394
00:59:19,760 --> 00:59:22,480
next is a new path statement type is

1395
00:59:22,480 --> 00:59:23,760
defined

1396
00:59:23,760 --> 00:59:26,480
next please

1397
00:59:26,799 --> 00:59:29,520
next is cci objects we define a new

1398
00:59:29,520 --> 00:59:33,119
object type for beer purpose it includes

1399
00:59:33,119 --> 00:59:36,319
subdominant id the algorithm itp

1400
00:59:36,319 --> 00:59:39,599
algorithm bfr id and optional tray next

1401
00:59:39,599 --> 00:59:42,799
place we defined two optional uh

1402
00:59:42,799 --> 00:59:45,680
oppositional ways why is a beer in

1403
00:59:45,680 --> 00:59:48,640
cavaliers in some tio it includes uh the

1404
00:59:48,640 --> 00:59:52,160
bt the et flag which is identifies uh

1405
00:59:52,160 --> 00:59:54,000
mps in captive

1406
00:59:54,000 --> 00:59:58,160
incapable lesson of no mts in cavaliers

1407
00:59:58,160 --> 01:00:01,680
listen uh and it also includes max si

1408
01:00:01,680 --> 01:00:03,200
local business

1409
01:00:03,200 --> 01:00:07,040
list and the bift id next please

1410
01:00:07,040 --> 01:00:09,359
next is the address to we will use

1411
01:00:09,359 --> 01:00:11,280
address tl it carries the b auto

1412
01:00:11,280 --> 01:00:13,359
interface and next top information next

1413
01:00:13,359 --> 01:00:14,400
clicks

1414
01:00:14,400 --> 01:00:17,440
as we know uh beer information is always

1415
01:00:17,440 --> 01:00:20,480
associated with a host prefix so we use

1416
01:00:20,480 --> 01:00:23,359
fec obviously one and obviously two to

1417
01:00:23,359 --> 01:00:27,520
carry the bfr prefix next place

1418
01:00:27,520 --> 01:00:28,640
next is

1419
01:00:28,640 --> 01:00:32,640
next step is comments welcome thank you

1420
01:00:32,640 --> 01:00:34,960
any last comments we have 30 seconds not

1421
01:00:34,960 --> 01:00:37,520
even 30 seconds but we'll allow one last

1422
01:00:37,520 --> 01:00:41,400
comment if anybody has

1423
01:00:43,119 --> 01:00:44,880
okay i think let's discuss this on the

1424
01:00:44,880 --> 01:00:47,920
mailing list thanks for your work

1425
01:00:47,920 --> 01:00:50,480
okay thank you

1426
01:00:50,480 --> 01:00:52,799
uh julian would you like to close the

1427
01:00:52,799 --> 01:00:54,480
meeting

1428
01:00:54,480 --> 01:00:56,400
yeah sure thank you grav so thank you

1429
01:00:56,400 --> 01:00:58,559
everyone for attending the meeting

1430
01:00:58,559 --> 01:00:59,359
we

1431
01:00:59,359 --> 01:01:01,280
certainly hope that we will be able to

1432
01:01:01,280 --> 01:01:03,359
meet face to face next time

1433
01:01:03,359 --> 01:01:05,599
hopefully finger crossed

1434
01:01:05,599 --> 01:01:08,079
so talk to you soon

1435
01:01:08,079 --> 01:01:12,000
i hope on the enjoy the itf week

1436
01:01:12,000 --> 01:01:13,359
thank you everyone

1437
01:01:13,359 --> 01:01:15,200
thank you everyone thanks hari for

1438
01:01:15,200 --> 01:01:17,200
taking minutes as well as being a person

1439
01:01:17,200 --> 01:01:20,720
on the ground thank you bye

1440
01:01:20,720 --> 01:01:23,959
bye harry

1441
01:01:40,319 --> 01:01:43,319
um

1442
01:01:55,039 --> 01:01:58,039
uh

