1
00:00:14,639 --> 00:00:20,400
here all right it is 12 30 so i think

2
00:00:20,400 --> 00:00:21,680
we're

3
00:00:21,680 --> 00:00:23,600
in time to go

4
00:00:23,600 --> 00:00:24,640
um

5
00:00:24,640 --> 00:00:27,039
welcome everybody this is the the anima

6
00:00:27,039 --> 00:00:28,560
working group

7
00:00:28,560 --> 00:00:32,079
at itf 113 hybrid

8
00:00:32,079 --> 00:00:34,000
um if that's not what you're expected to

9
00:00:34,000 --> 00:00:35,920
you're in the wrong room

10
00:00:35,920 --> 00:00:37,520
um

11
00:00:37,520 --> 00:00:39,360
so there were a bunch of new wonderful

12
00:00:39,360 --> 00:00:41,200
slides about the hybrid experience we're

13
00:00:41,200 --> 00:00:44,239
having here but i i'm guessing that

14
00:00:44,239 --> 00:00:46,559
given how this is the last session of

15
00:00:46,559 --> 00:00:47,840
the week

16
00:00:47,840 --> 00:00:49,600
if we haven't figured out how to do it

17
00:00:49,600 --> 00:00:52,160
by now it's probably too late

18
00:00:52,160 --> 00:00:53,840
the one thing that's always very much

19
00:00:53,840 --> 00:00:56,640
appreciated for the people in the room

20
00:00:56,640 --> 00:00:58,320
when you step up to the microphone

21
00:00:58,320 --> 00:01:01,039
before that uh please you know click

22
00:01:01,039 --> 00:01:03,520
um on raise the hand so that the remote

23
00:01:03,520 --> 00:01:06,320
audience will also see your name in the

24
00:01:06,320 --> 00:01:07,600
queue

25
00:01:07,600 --> 00:01:09,200
i think that's the most important one

26
00:01:09,200 --> 00:01:12,400
otherwise standard procedures itf note

27
00:01:12,400 --> 00:01:14,880
well everything is public and there are

28
00:01:14,880 --> 00:01:17,680
a lot of interesting bcps when you can't

29
00:01:17,680 --> 00:01:21,280
sleep that you should be aware of

30
00:01:21,840 --> 00:01:22,720
right

31
00:01:22,720 --> 00:01:27,520
logistics i think there is nothing of

32
00:01:27,520 --> 00:01:30,640
importance here

33
00:01:33,040 --> 00:01:35,439
we've got

34
00:01:35,720 --> 00:01:39,520
a note taker but it's also

35
00:01:39,520 --> 00:01:41,920
everybody else who wants to uh help

36
00:01:41,920 --> 00:01:44,320
taking the notes uh please go

37
00:01:44,320 --> 00:01:46,880
to the hedgehog document and help with

38
00:01:46,880 --> 00:01:48,960
it

39
00:01:50,880 --> 00:01:52,960
so let's let's go through some of these

40
00:01:52,960 --> 00:01:54,640
reminder slides here

41
00:01:54,640 --> 00:01:57,119
that i hope are always useful we've got

42
00:01:57,119 --> 00:01:59,600
the early ipr disclosure process so by

43
00:01:59,600 --> 00:02:02,079
the time that we're

44
00:02:02,079 --> 00:02:04,240
adopting a document we're already

45
00:02:04,240 --> 00:02:06,719
asking the ipr question so that we're

46
00:02:06,719 --> 00:02:09,679
not surprised later on about a possible

47
00:02:09,679 --> 00:02:12,720
ipr in the document when we try to

48
00:02:12,720 --> 00:02:15,040
offload the document to isg to become an

49
00:02:15,040 --> 00:02:17,519
rfc

50
00:02:18,560 --> 00:02:20,720
we also now have eight rfcs so

51
00:02:20,720 --> 00:02:22,319
especially for the folks amongst you

52
00:02:22,319 --> 00:02:24,879
that are implementing either of those

53
00:02:24,879 --> 00:02:26,080
when you find

54
00:02:26,080 --> 00:02:27,920
any bugs and problems of course raise

55
00:02:27,920 --> 00:02:29,840
them with a list but

56
00:02:29,840 --> 00:02:31,440
specifically when they're against the

57
00:02:31,440 --> 00:02:32,480
text

58
00:02:32,480 --> 00:02:35,280
we have an errata system in the ietf

59
00:02:35,280 --> 00:02:37,440
that allows you to track

60
00:02:37,440 --> 00:02:40,560
any such textual issues and

61
00:02:40,560 --> 00:02:42,959
when you are implementing you obviously

62
00:02:42,959 --> 00:02:45,519
also want to read the erratas of of

63
00:02:45,519 --> 00:02:47,440
those rfcs

64
00:02:47,440 --> 00:02:49,760
in case they do impact the

65
00:02:49,760 --> 00:02:51,840
implementation which i think

66
00:02:51,840 --> 00:02:54,800
a few of them do

67
00:02:54,879 --> 00:02:56,400
um so

68
00:02:56,400 --> 00:02:58,879
right so now let's get through the

69
00:02:58,879 --> 00:03:01,840
actual working documents that we have

70
00:03:01,840 --> 00:03:03,360
um

71
00:03:03,360 --> 00:03:05,680
so the first one the oldest one is the

72
00:03:05,680 --> 00:03:06,480
um

73
00:03:06,480 --> 00:03:09,200
asa guideline document um there is no

74
00:03:09,200 --> 00:03:10,879
slot for it i think

75
00:03:10,879 --> 00:03:12,640
the main author is uh

76
00:03:12,640 --> 00:03:15,840
well asleep in new zealand right now um

77
00:03:15,840 --> 00:03:20,000
and it is an auth 48 for 45 days so i

78
00:03:20,000 --> 00:03:22,080
think that leaves it three more days um

79
00:03:22,080 --> 00:03:25,280
no kidding um but yeah it should be a an

80
00:03:25,280 --> 00:03:28,560
rfc pretty soon and i'm not aware of any

81
00:03:28,560 --> 00:03:32,879
issues in the author 48 process left

82
00:03:32,879 --> 00:03:35,840
um so that brings us uh to ongoing work

83
00:03:35,840 --> 00:03:38,080
um brewski cloud we've got a slot for it

84
00:03:38,080 --> 00:03:40,560
you are actually misleading people for

85
00:03:40,560 --> 00:03:41,840
the 48

86
00:03:41,840 --> 00:03:44,319
it was 48 hours

87
00:03:44,319 --> 00:03:46,640
48 days

88
00:03:46,640 --> 00:03:49,280
i'm sorry that was a a badly explained

89
00:03:49,280 --> 00:03:50,799
joke but uh

90
00:03:50,799 --> 00:03:53,120
yeah i'm yeah it's it's actually meant

91
00:03:53,120 --> 00:03:56,480
to be 48 hours but uh we are seeing a

92
00:03:56,480 --> 00:03:58,879
large variation of how long earth 48

93
00:03:58,879 --> 00:04:00,159
takes so

94
00:04:00,159 --> 00:04:02,319
that number of days is actually not not

95
00:04:02,319 --> 00:04:04,640
really untypical for how long that stage

96
00:04:04,640 --> 00:04:06,319
of the process takes

97
00:04:06,319 --> 00:04:08,640
sorry for reminding me that that joke

98
00:04:08,640 --> 00:04:10,560
should have been explained

99
00:04:10,560 --> 00:04:13,519
all right then um so i've been trying to

100
00:04:13,519 --> 00:04:15,760
track you know where work actually

101
00:04:15,760 --> 00:04:18,000
happened so you'll see that most of the

102
00:04:18,000 --> 00:04:20,000
working group documents that we have

103
00:04:20,000 --> 00:04:21,358
have been doing good work and we're

104
00:04:21,358 --> 00:04:23,600
having slots for them so no need to

105
00:04:23,600 --> 00:04:26,639
mention that in more detail here um

106
00:04:26,639 --> 00:04:28,479
what's specific so we've got the

107
00:04:28,479 --> 00:04:33,360
constraint join proxy um that

108
00:04:33,840 --> 00:04:36,000
is in the process of being submitted to

109
00:04:36,000 --> 00:04:38,960
isg so i think the current state is a ad

110
00:04:38,960 --> 00:04:42,560
review um so that's hopefully going

111
00:04:42,560 --> 00:04:44,320
through well um

112
00:04:44,320 --> 00:04:47,199
we'll hear in the slot um

113
00:04:47,199 --> 00:04:49,199
we've got the brucey essing and roll

114
00:04:49,199 --> 00:04:51,520
where um there will be a name change

115
00:04:51,520 --> 00:04:53,680
coming up that's the unusual thing about

116
00:04:53,680 --> 00:04:56,800
that one we've got brewski prm

117
00:04:56,800 --> 00:04:57,600
that

118
00:04:57,600 --> 00:05:00,080
all those are talked in slots

119
00:05:00,080 --> 00:05:01,520
we've got

120
00:05:01,520 --> 00:05:03,919
the constraint voucher where in the last

121
00:05:03,919 --> 00:05:06,400
ietf we felt we needed a more early

122
00:05:06,400 --> 00:05:08,639
review from the broader community i'm

123
00:05:08,639 --> 00:05:10,320
going to talk about that separately in

124
00:05:10,320 --> 00:05:12,400
general but that has happened very

125
00:05:12,400 --> 00:05:15,199
nicely since itf-112

126
00:05:15,199 --> 00:05:18,880
we've got the jws voucher

127
00:05:18,880 --> 00:05:20,320
um

128
00:05:20,320 --> 00:05:22,320
standard ongoing

129
00:05:22,320 --> 00:05:23,199
now

130
00:05:23,199 --> 00:05:26,000
we have grass distribution i talked with

131
00:05:26,000 --> 00:05:28,880
the authors and um there is no slot here

132
00:05:28,880 --> 00:05:31,840
for this one um the shepherd has done

133
00:05:31,840 --> 00:05:33,600
an extensive review since the last

134
00:05:33,600 --> 00:05:35,600
version and the authors are working on a

135
00:05:35,600 --> 00:05:36,960
reply but

136
00:05:36,960 --> 00:05:40,160
they couldn't come to the ietf this time

137
00:05:40,160 --> 00:05:42,639
around so that's why they didn't request

138
00:05:42,639 --> 00:05:45,039
a slot and and didn't hurry with their

139
00:05:45,039 --> 00:05:47,039
update to meet the deadlines for this

140
00:05:47,039 --> 00:05:49,759
idea so hopefully uh we'll talk about

141
00:05:49,759 --> 00:05:51,600
that one in philadelphia

142
00:05:51,600 --> 00:05:53,120
um

143
00:05:53,120 --> 00:05:55,840
then we've got one which was closer for

144
00:05:55,840 --> 00:05:57,120
this draft

145
00:05:57,120 --> 00:05:59,039
uh well running will

146
00:05:59,039 --> 00:06:02,720
we only receive very minor

147
00:06:02,720 --> 00:06:05,360
comments and that would be

148
00:06:05,360 --> 00:06:07,840
addressed very soon so

149
00:06:07,840 --> 00:06:11,199
um we feel there's nothing um major to

150
00:06:11,199 --> 00:06:12,319
report

151
00:06:12,319 --> 00:06:14,000
yeah i think the major part is the

152
00:06:14,000 --> 00:06:16,240
shepherd review so i think that that

153
00:06:16,240 --> 00:06:17,600
would be the major

154
00:06:17,600 --> 00:06:20,319
i think feedback to take into account

155
00:06:20,319 --> 00:06:22,560
sure

156
00:06:23,520 --> 00:06:25,440
right um

157
00:06:25,440 --> 00:06:26,560
so

158
00:06:26,560 --> 00:06:28,639
one thing that slipped

159
00:06:28,639 --> 00:06:30,800
through the cracks michael the voucher

160
00:06:30,800 --> 00:06:32,560
delegation

161
00:06:32,560 --> 00:06:34,800
um that's expired

162
00:06:34,800 --> 00:06:36,880
nothing for it so it's it's just kind of

163
00:06:36,880 --> 00:06:39,440
uh in the whole list of priorities just

164
00:06:39,440 --> 00:06:40,960
at the bottom end

165
00:06:40,960 --> 00:06:42,400
all right

166
00:06:42,400 --> 00:06:44,400
so let me just quickly

167
00:06:44,400 --> 00:06:48,479
take a note on that one

168
00:06:48,479 --> 00:06:50,960
voucher delegation

169
00:06:50,960 --> 00:06:52,800
it's just low priority

170
00:06:52,800 --> 00:06:55,039
versus the other

171
00:06:55,039 --> 00:06:58,639
working group drafts okay

172
00:07:00,080 --> 00:07:00,960
right

173
00:07:00,960 --> 00:07:02,720
um

174
00:07:02,720 --> 00:07:05,759
we've got the rfc8366bis

175
00:07:05,759 --> 00:07:08,720
and finally we've got

176
00:07:08,720 --> 00:07:11,360
the service auto deployment

177
00:07:11,360 --> 00:07:12,160
and

178
00:07:12,160 --> 00:07:13,440
also the

179
00:07:13,440 --> 00:07:15,039
authors for that one couldn't come to

180
00:07:15,039 --> 00:07:18,639
the ietf so no slot for that one

181
00:07:18,639 --> 00:07:22,639
you must miss something here

182
00:07:22,639 --> 00:07:26,080
others did request slots

183
00:07:26,080 --> 00:07:27,520
and they

184
00:07:27,520 --> 00:07:30,400
upload these slides as well wow okay let

185
00:07:30,400 --> 00:07:32,560
me see is that am i

186
00:07:32,560 --> 00:07:35,199
infrastructure

187
00:07:35,199 --> 00:07:38,160
yeah the slides number seven

188
00:07:38,160 --> 00:07:40,160
seven oh okay right so that that there

189
00:07:40,160 --> 00:07:42,240
was a mismatch on my side okay i'll have

190
00:07:42,240 --> 00:07:43,599
to fix the

191
00:07:43,599 --> 00:07:46,240
agenda slide and uh upload

192
00:07:46,240 --> 00:07:48,479
a fix to the agenda so let me do a tbd

193
00:07:48,479 --> 00:07:49,840
yeah hopefully

194
00:07:49,840 --> 00:07:52,479
that was that was just good enough

195
00:07:52,479 --> 00:07:54,639
yeah

196
00:07:57,680 --> 00:07:59,840
yeah

197
00:07:59,840 --> 00:08:01,919
sorry for that

198
00:08:01,919 --> 00:08:03,919
that was my mistake with this shared

199
00:08:03,919 --> 00:08:06,639
slides okay so that that's the main work

200
00:08:06,639 --> 00:08:08,000
i'm not going to mention here in the

201
00:08:08,000 --> 00:08:10,240
chair slides the non-working group items

202
00:08:10,240 --> 00:08:12,639
that we have on the agenda

203
00:08:12,639 --> 00:08:14,800
just let me quickly finish and get to

204
00:08:14,800 --> 00:08:18,560
the the real work um so uh one of the

205
00:08:18,560 --> 00:08:20,720
ongoing issues please you know when

206
00:08:20,720 --> 00:08:22,240
especially when you're an author of a

207
00:08:22,240 --> 00:08:24,639
document in the working group um you

208
00:08:24,639 --> 00:08:27,599
know mutually review other working group

209
00:08:27,599 --> 00:08:29,599
documents to help the the working group

210
00:08:29,599 --> 00:08:32,159
to really do its uh job and move forward

211
00:08:32,159 --> 00:08:32,958
and

212
00:08:32,958 --> 00:08:34,880
if you're not sure which document would

213
00:08:34,880 --> 00:08:37,039
be good for you to review just ask us

214
00:08:37,039 --> 00:08:39,599
shares and i will be happy to help

215
00:08:39,599 --> 00:08:40,880
doing that

216
00:08:40,880 --> 00:08:41,839
also

217
00:08:41,839 --> 00:08:46,640
the process that you solve after itf-112

218
00:08:46,640 --> 00:08:48,800
where we as the chairs are helping to

219
00:08:48,800 --> 00:08:50,640
get the formal

220
00:08:50,640 --> 00:08:53,680
early reviews from other groups in the

221
00:08:53,680 --> 00:08:55,200
ietf like working groups and

222
00:08:55,200 --> 00:08:56,560
directorates

223
00:08:56,560 --> 00:08:59,440
to happen so that we don't overload the

224
00:08:59,440 --> 00:09:00,880
last call

225
00:09:00,880 --> 00:09:03,600
and isg review in the end but that we do

226
00:09:03,600 --> 00:09:05,839
it during the working group stage as

227
00:09:05,839 --> 00:09:08,560
good as possible

228
00:09:08,560 --> 00:09:10,640
shepherding is another way on how you

229
00:09:10,640 --> 00:09:12,720
can show your appreciation of the fact

230
00:09:12,720 --> 00:09:14,399
that you're going to be an author of an

231
00:09:14,399 --> 00:09:15,360
rfc

232
00:09:15,360 --> 00:09:17,920
um when it's finally through and so we

233
00:09:17,920 --> 00:09:19,920
haven't really made much of progress

234
00:09:19,920 --> 00:09:22,720
since itf-1112 with these documents here

235
00:09:22,720 --> 00:09:25,680
that all still don't have shepherds so

236
00:09:25,680 --> 00:09:27,839
i guess we as working group chairs are

237
00:09:27,839 --> 00:09:30,160
going to reach out more to the authors

238
00:09:30,160 --> 00:09:32,320
of of the different documents to help

239
00:09:32,320 --> 00:09:34,959
that to help more mutually in the coming

240
00:09:34,959 --> 00:09:37,760
months as appropriate seeing which of

241
00:09:37,760 --> 00:09:39,600
these documents are far enough in the

242
00:09:39,600 --> 00:09:41,680
process that um a shepherd would really

243
00:09:41,680 --> 00:09:44,160
be helpful

244
00:09:44,800 --> 00:09:47,680
technical discussions so yes these

245
00:09:47,680 --> 00:09:49,839
working group meetings are always

246
00:09:49,839 --> 00:09:52,080
overboarding with process status updates

247
00:09:52,080 --> 00:09:53,760
but that's just the cost of doing

248
00:09:53,760 --> 00:09:55,920
business in an organized fashion and

249
00:09:55,920 --> 00:09:57,760
it's not the only way on how we can do

250
00:09:57,760 --> 00:10:00,560
work the real work happens typically on

251
00:10:00,560 --> 00:10:02,880
the mailing list and it can also very

252
00:10:02,880 --> 00:10:05,920
nicely happen on regular site meetings

253
00:10:05,920 --> 00:10:08,240
interims there are a lot of options

254
00:10:08,240 --> 00:10:10,240
what has worked best for

255
00:10:10,240 --> 00:10:14,160
animal so far is the what we informally

256
00:10:14,160 --> 00:10:16,240
call the brewski design team weekly

257
00:10:16,240 --> 00:10:18,640
meeting

258
00:10:19,440 --> 00:10:21,680
michael is responsible for setting that

259
00:10:21,680 --> 00:10:23,440
up i hope the time that i have here is

260
00:10:23,440 --> 00:10:26,480
the correct one but otherwise uh um if

261
00:10:26,480 --> 00:10:28,640
it's not the correct one um i'll be

262
00:10:28,640 --> 00:10:30,399
happy to to work with michael that we

263
00:10:30,399 --> 00:10:31,680
send hour

264
00:10:31,680 --> 00:10:34,959
it's half an hour later okay

265
00:10:35,040 --> 00:10:36,720
okay

266
00:10:36,720 --> 00:10:39,519
update

267
00:10:39,519 --> 00:10:42,640
slot 4 weekly

268
00:10:42,640 --> 00:10:44,560
meeting

269
00:10:44,560 --> 00:10:47,920
sent out to list okay

270
00:10:47,920 --> 00:10:50,320
right so that's another tpd for me uh

271
00:10:50,320 --> 00:10:52,880
we'll we'll send an update for that um

272
00:10:52,880 --> 00:10:55,200
also we do have a github it's great

273
00:10:55,200 --> 00:10:57,519
especially uh when you want to collect

274
00:10:57,519 --> 00:10:59,200
and structure any feedback that you're

275
00:10:59,200 --> 00:11:01,760
getting one of the most easy things to

276
00:11:01,760 --> 00:11:03,680
make sure that any concern you have

277
00:11:03,680 --> 00:11:05,839
about a document doesn't get lost in

278
00:11:05,839 --> 00:11:07,920
mailing this discussion is

279
00:11:07,920 --> 00:11:11,200
to open up an issue in the github entry

280
00:11:11,200 --> 00:11:13,360
for that particular document and that's

281
00:11:13,360 --> 00:11:15,839
already a good enough reason that all of

282
00:11:15,839 --> 00:11:17,440
the animal documents should have a

283
00:11:17,440 --> 00:11:20,079
github entry i think so far that is true

284
00:11:20,079 --> 00:11:22,880
um because it is great for tracking any

285
00:11:22,880 --> 00:11:24,640
issues better than the mailing list

286
00:11:24,640 --> 00:11:26,720
alone but obviously any real issues

287
00:11:26,720 --> 00:11:28,720
should always go to the mailing list but

288
00:11:28,720 --> 00:11:32,399
tracking is is very nice on github and i

289
00:11:32,399 --> 00:11:34,959
think that's it with process so

290
00:11:34,959 --> 00:11:36,959
who would like to step up first to the

291
00:11:36,959 --> 00:11:38,240
microphone

292
00:11:38,240 --> 00:11:42,079
we have um i think michael here listed

293
00:11:42,079 --> 00:11:43,839
for uh the status update on the

294
00:11:43,839 --> 00:11:46,320
constrained voucher and the hackathon

295
00:11:46,320 --> 00:11:50,480
that had seemingly has happened for it

296
00:11:51,360 --> 00:11:54,399
okay i mean maybe stop share the slides

297
00:11:54,399 --> 00:11:57,839
and it worked before

298
00:11:58,160 --> 00:12:00,560
you find the slides here constraint

299
00:12:00,560 --> 00:12:01,839
voucher

300
00:12:01,839 --> 00:12:04,320
unfortunately this is amazing

301
00:12:04,320 --> 00:12:06,480
it's amazing we could have now you know

302
00:12:06,480 --> 00:12:08,399
we could have a slide clicker that works

303
00:12:08,399 --> 00:12:10,720
over the internet

304
00:12:10,720 --> 00:12:12,560
right that's that's that's a that's

305
00:12:12,560 --> 00:12:14,399
that's that's the major accomplishment

306
00:12:14,399 --> 00:12:17,440
of this year so how do i meet on the

307
00:12:17,440 --> 00:12:19,519
internet do i click so that you can find

308
00:12:19,519 --> 00:12:22,560
my name okay hover next to it okay and

309
00:12:22,560 --> 00:12:24,399
you see that third button

310
00:12:24,399 --> 00:12:26,160
okay no that's the wrong yeah yeah

311
00:12:26,160 --> 00:12:27,600
that's pretty controversial all right so

312
00:12:27,600 --> 00:12:29,440
i'll lie back and drink a bad coffee

313
00:12:29,440 --> 00:12:32,160
that's right here you go

314
00:12:32,160 --> 00:12:33,600
yeah please

315
00:12:33,600 --> 00:12:34,560
um

316
00:12:34,560 --> 00:12:36,880
okay so the constraint voucher document

317
00:12:36,880 --> 00:12:39,279
is actually it's at 16 i'm sorry i think

318
00:12:39,279 --> 00:12:42,480
it's at 16 not 15. um

319
00:12:42,480 --> 00:12:45,760
panos esko peter and i um

320
00:12:45,760 --> 00:12:48,560
and uh

321
00:12:48,560 --> 00:12:50,399
um

322
00:12:50,399 --> 00:12:52,399
you know this is the i really like this

323
00:12:52,399 --> 00:12:55,600
big duck it's really nice um but uh a

324
00:12:55,600 --> 00:12:57,040
little bit about it i mentioned

325
00:12:57,040 --> 00:13:00,959
brewski.org um before i'll mention again

326
00:13:00,959 --> 00:13:04,240
and uh but constrained voucher is rfc

327
00:13:04,240 --> 00:13:07,760
8995 re-implemented in terms of cosi

328
00:13:07,760 --> 00:13:11,600
and c-bor over dtls using coap

329
00:13:11,600 --> 00:13:13,120
so

330
00:13:13,120 --> 00:13:14,959
take all of the regular big protocols

331
00:13:14,959 --> 00:13:16,720
and replace them with constrained ones

332
00:13:16,720 --> 00:13:20,320
and that's what you get

333
00:13:20,320 --> 00:13:23,440
since 112 there's a url if you have the

334
00:13:23,440 --> 00:13:25,440
slides you can see the thing

335
00:13:25,440 --> 00:13:28,079
um many small edits you'll see there's i

336
00:13:28,079 --> 00:13:31,120
think i counted like 17 or 18 diffs or

337
00:13:31,120 --> 00:13:32,560
something like this and most of them are

338
00:13:32,560 --> 00:13:35,600
one word changes um we fixed and

339
00:13:35,600 --> 00:13:38,560
validated all of the examples

340
00:13:38,560 --> 00:13:40,240
we realized that one of the things we

341
00:13:40,240 --> 00:13:42,320
had wrong and actually my code is still

342
00:13:42,320 --> 00:13:43,519
wrong about

343
00:13:43,519 --> 00:13:47,760
is uh the pro proxy the assertions map

344
00:13:47,760 --> 00:13:49,519
them to strings which is wrong because

345
00:13:49,519 --> 00:13:51,360
there's no reason to send that many

346
00:13:51,360 --> 00:13:53,600
bytes

347
00:13:53,600 --> 00:13:55,120
but piang doesn't actually do the

348
00:13:55,120 --> 00:13:57,199
mapping for you so we've actually put a

349
00:13:57,199 --> 00:13:59,120
table in the document

350
00:13:59,120 --> 00:14:00,800
which does that

351
00:14:00,800 --> 00:14:03,279
we've not made it an iana registry

352
00:14:03,279 --> 00:14:05,600
because in order to change that thing

353
00:14:05,600 --> 00:14:07,680
you would have to go back to the

354
00:14:07,680 --> 00:14:08,720
um

355
00:14:08,720 --> 00:14:12,399
yang doc yang part and extend it

356
00:14:12,399 --> 00:14:14,839
there's an interaction there with

357
00:14:14,839 --> 00:14:20,079
uh the rc 83 8366 bis eff

358
00:14:20,079 --> 00:14:21,440
work there too

359
00:14:21,440 --> 00:14:23,440
uh that we'll come back to

360
00:14:23,440 --> 00:14:25,199
um we have

361
00:14:25,199 --> 00:14:26,480
tried to do

362
00:14:26,480 --> 00:14:29,279
interop efforts okay

363
00:14:29,279 --> 00:14:32,399
um we were much we were most

364
00:14:32,399 --> 00:14:35,199
well organized last summer when we had a

365
00:14:35,199 --> 00:14:37,680
week-long interop and we uh

366
00:14:37,680 --> 00:14:40,079
got some real work done uh during that

367
00:14:40,079 --> 00:14:42,638
process

368
00:14:42,839 --> 00:14:46,160
um ietf has set up the hackathon efforts

369
00:14:46,160 --> 00:14:48,880
has set up in a layer 2 vpn

370
00:14:48,880 --> 00:14:51,680
um initially it was a raspberry pi

371
00:14:51,680 --> 00:14:54,240
requirement and then it became a micro

372
00:14:54,240 --> 00:14:56,320
tick box requirement

373
00:14:56,320 --> 00:14:58,639
and um

374
00:14:58,639 --> 00:15:00,959
at least two of us are now

375
00:15:00,959 --> 00:15:04,000
able to run that uh regularly mine just

376
00:15:04,000 --> 00:15:06,480
is running you can ping it if you like

377
00:15:06,480 --> 00:15:08,800
peter turn it on and off and we can do

378
00:15:08,800 --> 00:15:10,959
things the reason why that's useful to

379
00:15:10,959 --> 00:15:12,160
us is because of course we have a

380
00:15:12,160 --> 00:15:14,240
discovery protocol that runs over l2 and

381
00:15:14,240 --> 00:15:15,680
needs multicast

382
00:15:15,680 --> 00:15:17,760
and that actually works over the vpn so

383
00:15:17,760 --> 00:15:19,760
we can actually test that

384
00:15:19,760 --> 00:15:20,880
um

385
00:15:20,880 --> 00:15:22,880
we have not yet done that because there

386
00:15:22,880 --> 00:15:24,480
are other things that have gotten in the

387
00:15:24,480 --> 00:15:25,920
way

388
00:15:25,920 --> 00:15:27,519
and i would say the biggest problem is

389
00:15:27,519 --> 00:15:28,959
probably time zones just getting

390
00:15:28,959 --> 00:15:30,959
everyone to to say okay i'm going to

391
00:15:30,959 --> 00:15:32,880
work together at this time and it's not

392
00:15:32,880 --> 00:15:34,320
always convenient

393
00:15:34,320 --> 00:15:35,839
for everybody

394
00:15:35,839 --> 00:15:37,440
but we're continuing to do that and

395
00:15:37,440 --> 00:15:39,199
we're very open to more people joining

396
00:15:39,199 --> 00:15:41,920
this and the vpn the itf vpn makes it

397
00:15:41,920 --> 00:15:42,800
really

398
00:15:42,800 --> 00:15:45,519
easy to do and particularly if your lab

399
00:15:45,519 --> 00:15:47,839
is behind three layers of you know

400
00:15:47,839 --> 00:15:50,480
corporate firewalls or something then

401
00:15:50,480 --> 00:15:53,279
um the box might actually let you you

402
00:15:53,279 --> 00:15:56,480
know have a land that's effectively not

403
00:15:56,480 --> 00:15:58,800
behind their control i'd ask first

404
00:15:58,800 --> 00:16:00,160
though so

405
00:16:00,160 --> 00:16:01,680
there you go

406
00:16:01,680 --> 00:16:03,440
um

407
00:16:03,440 --> 00:16:06,160
what are the issues so we actually still

408
00:16:06,160 --> 00:16:08,480
have an early allocation that

409
00:16:08,480 --> 00:16:10,880
request that i think we should emphasize

410
00:16:10,880 --> 00:16:14,000
um i guess you know we've used 6502

411
00:16:14,000 --> 00:16:16,000
which is a private use value

412
00:16:16,000 --> 00:16:16,880
um

413
00:16:16,880 --> 00:16:18,639
and

414
00:16:18,639 --> 00:16:19,440
uh

415
00:16:19,440 --> 00:16:21,440
we need we need to come back and mr

416
00:16:21,440 --> 00:16:23,279
chair and please can we do this early

417
00:16:23,279 --> 00:16:24,800
allocation on this because that would be

418
00:16:24,800 --> 00:16:26,240
useful to do

419
00:16:26,240 --> 00:16:27,279
um

420
00:16:27,279 --> 00:16:28,720
and then we'll have to fix our code to

421
00:16:28,720 --> 00:16:30,639
actually support both for a little while

422
00:16:30,639 --> 00:16:32,480
and come back to that that's just for

423
00:16:32,480 --> 00:16:35,199
the content format on the co-app

424
00:16:35,199 --> 00:16:38,160
right on that request so it's not not

425
00:16:38,160 --> 00:16:40,560
super critical but it's it's uh

426
00:16:40,560 --> 00:16:43,359
it's just annoying

427
00:16:43,440 --> 00:16:44,320
um

428
00:16:44,320 --> 00:16:47,839
i happen to run multiple nasa instances

429
00:16:47,839 --> 00:16:50,000
in a multi-tenant situation where you

430
00:16:50,000 --> 00:16:52,959
must have the sni set properly to get

431
00:16:52,959 --> 00:16:54,880
the right web server

432
00:16:54,880 --> 00:16:57,440
so this is probably a good thing that i

433
00:16:57,440 --> 00:16:58,800
have

434
00:16:58,800 --> 00:17:01,199
been so stingy as to not

435
00:17:01,199 --> 00:17:03,279
they run on separate ipv6

436
00:17:03,279 --> 00:17:05,919
addresses but they use the same ipv4

437
00:17:05,919 --> 00:17:06,959
address

438
00:17:06,959 --> 00:17:08,959
i could have gone another ipv4 address

439
00:17:08,959 --> 00:17:10,559
but i didn't really care about that

440
00:17:10,559 --> 00:17:12,240
about v4

441
00:17:12,240 --> 00:17:14,640
so the s s and i must be set correctly

442
00:17:14,640 --> 00:17:17,039
or you won't get to my correct server

443
00:17:17,039 --> 00:17:19,119
and so that's kind of useful because it

444
00:17:19,119 --> 00:17:20,480
turned out it's revealed a number of

445
00:17:20,480 --> 00:17:22,880
bugs and a number of other clients

446
00:17:22,880 --> 00:17:25,280
uh that otherwise were not revealed by

447
00:17:25,280 --> 00:17:28,240
uh other instances so that is uh

448
00:17:28,240 --> 00:17:30,080
there's uh whatever is called that draft

449
00:17:30,080 --> 00:17:32,400
use it or lose it kind of thing it's

450
00:17:32,400 --> 00:17:34,799
kind of useful

451
00:17:34,799 --> 00:17:36,559
um

452
00:17:36,559 --> 00:17:38,400
i still haven't quite got the authority

453
00:17:38,400 --> 00:17:41,760
key identifier correct in the idev id

454
00:17:41,760 --> 00:17:44,559
and this has been a source of

455
00:17:44,559 --> 00:17:46,960
interop issues um

456
00:17:46,960 --> 00:17:49,120
and uh so we're still kind of working on

457
00:17:49,120 --> 00:17:50,880
that that's actually really goes back to

458
00:17:50,880 --> 00:17:52,960
rfc 8995

459
00:17:52,960 --> 00:17:55,679
and voucher even to have that right

460
00:17:55,679 --> 00:17:59,360
um and uh we're going to figure that out

461
00:17:59,360 --> 00:18:00,799
you know going on because it's getting

462
00:18:00,799 --> 00:18:02,240
in the way of things

463
00:18:02,240 --> 00:18:06,240
so those are kind of the issues um

464
00:18:06,720 --> 00:18:08,880
it would be nice to have everyone come

465
00:18:08,880 --> 00:18:11,120
to philadelphia and be in the same room

466
00:18:11,120 --> 00:18:12,960
and not have any distractions so that i

467
00:18:12,960 --> 00:18:15,679
think is the major advantage of being in

468
00:18:15,679 --> 00:18:17,679
person the major disadvantage of course

469
00:18:17,679 --> 00:18:19,840
is when you find a bug it might take you

470
00:18:19,840 --> 00:18:21,520
12 hours to fix it

471
00:18:21,520 --> 00:18:23,280
by which point the hackathon is over

472
00:18:23,280 --> 00:18:24,160
right

473
00:18:24,160 --> 00:18:26,960
so that's the downside of not doing that

474
00:18:26,960 --> 00:18:28,720
and that's really it any questions or

475
00:18:28,720 --> 00:18:30,799
whatever thing the document is really

476
00:18:30,799 --> 00:18:32,640
ready for working group last call or

477
00:18:32,640 --> 00:18:34,799
additional reviews um there's some

478
00:18:34,799 --> 00:18:38,480
feeling that the examples maybe aren't

479
00:18:38,480 --> 00:18:41,120
uh proven to be correct until we've all

480
00:18:41,120 --> 00:18:42,640
interoperated

481
00:18:42,640 --> 00:18:44,640
successfully with all of them

482
00:18:44,640 --> 00:18:46,400
um but at this point i feel actually

483
00:18:46,400 --> 00:18:48,000
that's probably

484
00:18:48,000 --> 00:18:48,880
it's

485
00:18:48,880 --> 00:18:50,799
that's probably boiling the ocean we're

486
00:18:50,799 --> 00:18:52,960
probably they're probably good enough at

487
00:18:52,960 --> 00:18:54,000
this point

488
00:18:54,000 --> 00:18:55,039
so

489
00:18:55,039 --> 00:18:57,360
um and we'll resume uh

490
00:18:57,360 --> 00:19:00,000
meeting in in april

491
00:19:00,000 --> 00:19:02,559
not next week but the week after

492
00:19:02,559 --> 00:19:04,879
thank you

493
00:19:05,039 --> 00:19:06,240
you see

494
00:19:06,240 --> 00:19:09,039
do i do that yeah that works

495
00:19:09,039 --> 00:19:10,720
okay so i've taken any questions from

496
00:19:10,720 --> 00:19:14,240
the the oh esko go ahead

497
00:19:14,240 --> 00:19:15,840
yeah hey yeah michael just to remark

498
00:19:15,840 --> 00:19:18,559
yeah so the examples you mentioned um

499
00:19:18,559 --> 00:19:21,200
so uh we still have the kind of older

500
00:19:21,200 --> 00:19:22,880
examples in and they were not yet

501
00:19:22,880 --> 00:19:24,720
updated to

502
00:19:24,720 --> 00:19:26,480
the latest and the results of the

503
00:19:26,480 --> 00:19:28,799
hackathon but i agree with you that for

504
00:19:28,799 --> 00:19:30,880
the document

505
00:19:30,880 --> 00:19:32,559
not considering these examples i think

506
00:19:32,559 --> 00:19:35,360
the rest is ready for the review indeed

507
00:19:35,360 --> 00:19:36,799
i kind of consider examples are

508
00:19:36,799 --> 00:19:38,799
updatable into auth 48 and that's one of

509
00:19:38,799 --> 00:19:41,120
the things that you might do in auth48

510
00:19:41,120 --> 00:19:45,039
um is make sure really be sure but um

511
00:19:45,039 --> 00:19:46,160
you know we can go through all the

512
00:19:46,160 --> 00:19:47,440
reviews we don't have i don't think we

513
00:19:47,440 --> 00:19:49,440
have to wait for all of that to get the

514
00:19:49,440 --> 00:19:51,120
rest of the reviews happen

515
00:19:51,120 --> 00:19:53,039
yeah i agree

516
00:19:53,039 --> 00:19:55,679
so expect the document soon rob

517
00:19:55,679 --> 00:19:58,559
so you you had some um good suggestions

518
00:19:58,559 --> 00:20:00,080
for the early reviews i was just

519
00:20:00,080 --> 00:20:01,679
wondering whether you want to do it

520
00:20:01,679 --> 00:20:03,760
publicly or not if you have an idea

521
00:20:03,760 --> 00:20:05,919
about whom we should try to draft as the

522
00:20:05,919 --> 00:20:07,120
shepherd

523
00:20:07,120 --> 00:20:08,720
oh as the shepherd

524
00:20:08,720 --> 00:20:10,799
i don't know who the shepherd should be

525
00:20:10,799 --> 00:20:14,320
right give it a thought um okay um no

526
00:20:14,320 --> 00:20:15,039
other

527
00:20:15,039 --> 00:20:18,080
i would suggest you

528
00:20:18,240 --> 00:20:20,000
yeah that was the i don't know the most

529
00:20:20,000 --> 00:20:22,159
obvious public answer but maybe there is

530
00:20:22,159 --> 00:20:24,240
a non-public answer

531
00:20:24,240 --> 00:20:26,880
um otherwise um

532
00:20:26,880 --> 00:20:29,840
we probably should have an iot

533
00:20:29,840 --> 00:20:31,919
uh directorate review if we haven't

534
00:20:31,919 --> 00:20:32,960
already

535
00:20:32,960 --> 00:20:36,080
and i would really like to get the same

536
00:20:36,080 --> 00:20:38,400
three reviewers that did the major their

537
00:20:38,400 --> 00:20:40,240
major reviews for

538
00:20:40,240 --> 00:20:41,679
um

539
00:20:41,679 --> 00:20:44,159
for brewski for eight nine nine five

540
00:20:44,159 --> 00:20:46,720
russ housley reviewed it early last year

541
00:20:46,720 --> 00:20:48,720
and it wasn't ready yet so i'd like to

542
00:20:48,720 --> 00:20:50,400
have him repeat and the reason for that

543
00:20:50,400 --> 00:20:51,760
is because they've already read those

544
00:20:51,760 --> 00:20:53,600
the other documents and therefore

545
00:20:53,600 --> 00:20:55,840
they'll that the diff to be constrained

546
00:20:55,840 --> 00:20:57,280
would be much more obvious to them so

547
00:20:57,280 --> 00:20:58,559
that was yagi

548
00:20:58,559 --> 00:21:01,120
uh christian and russ

549
00:21:01,120 --> 00:21:02,880
that reviewed last time so i'd love to

550
00:21:02,880 --> 00:21:04,000
have them do it again i don't know if

551
00:21:04,000 --> 00:21:05,760
they have time um

552
00:21:05,760 --> 00:21:07,440
i think christian's officially retired

553
00:21:07,440 --> 00:21:09,520
or something at this point in sales only

554
00:21:09,520 --> 00:21:10,559
so

555
00:21:10,559 --> 00:21:12,799
okay

556
00:21:12,880 --> 00:21:14,400
right

557
00:21:14,400 --> 00:21:17,039
what's next

558
00:21:17,039 --> 00:21:19,919
where's the agenda

559
00:21:21,919 --> 00:21:22,960
so

560
00:21:22,960 --> 00:21:23,919
uh

561
00:21:23,919 --> 00:21:26,000
right so we've got status update in on

562
00:21:26,000 --> 00:21:28,559
jws voucher who

563
00:21:28,559 --> 00:21:31,039
wants to present is that local remote

564
00:21:31,039 --> 00:21:33,840
thomas it sounds as if you want to go

565
00:21:33,840 --> 00:21:36,720
yeah that's me hello from my side

566
00:21:36,720 --> 00:21:39,039
um

567
00:21:39,120 --> 00:21:40,880
yes

568
00:21:40,880 --> 00:21:45,480
so let me take the

569
00:21:46,640 --> 00:21:48,480
where is it

570
00:21:48,480 --> 00:21:49,760
so i haven't shared the slides do you

571
00:21:49,760 --> 00:21:51,120
want to share them yourself or do you

572
00:21:51,120 --> 00:21:53,520
want me to find them choose a deck to

573
00:21:53,520 --> 00:21:55,679
share okay

574
00:21:55,679 --> 00:21:58,679
um

575
00:21:58,720 --> 00:22:02,159
so now it will be available

576
00:22:02,159 --> 00:22:03,600
okay

577
00:22:03,600 --> 00:22:05,120
so yeah this is a

578
00:22:05,120 --> 00:22:06,799
short update on the

579
00:22:06,799 --> 00:22:09,280
jws and vouchers

580
00:22:09,280 --> 00:22:11,919
we we started some months ago or almost

581
00:22:11,919 --> 00:22:13,039
a year

582
00:22:13,039 --> 00:22:16,960
um and it's in version three currently

583
00:22:16,960 --> 00:22:19,200
so let's let's see what we have

584
00:22:19,200 --> 00:22:20,080
uh

585
00:22:20,080 --> 00:22:21,840
next slide

586
00:22:21,840 --> 00:22:24,880
so here to to recover a bit so

587
00:22:24,880 --> 00:22:27,520
this is another form factor to

588
00:22:27,520 --> 00:22:29,960
the original voucher rfc

589
00:22:29,960 --> 00:22:33,679
8366 which specifies um

590
00:22:33,679 --> 00:22:36,080
cms signed json and here we see another

591
00:22:36,080 --> 00:22:40,000
option which is jws sign json so there

592
00:22:40,000 --> 00:22:43,200
are no changes to the yang and so this

593
00:22:43,200 --> 00:22:46,080
new voucher format could be used for

594
00:22:46,080 --> 00:22:48,440
standard briskies or

595
00:22:48,440 --> 00:22:52,480
8995 or and it also also the brisket prm

596
00:22:52,480 --> 00:22:54,640
and so pledge and responder modes

597
00:22:54,640 --> 00:22:58,559
relies on the jws form factor here

598
00:22:58,559 --> 00:23:00,480
what else do we have

599
00:23:00,480 --> 00:23:03,440
next slide so um

600
00:23:03,440 --> 00:23:05,520
the the options we had

601
00:23:05,520 --> 00:23:09,200
so um initially we started with the aws

602
00:23:09,200 --> 00:23:11,600
compact serialization which you can find

603
00:23:11,600 --> 00:23:14,480
in chapter 3.1 of

604
00:23:14,480 --> 00:23:16,280
rfc

605
00:23:16,280 --> 00:23:18,000
7515

606
00:23:18,000 --> 00:23:18,880
and

607
00:23:18,880 --> 00:23:21,600
so this was an arbitrary choice and

608
00:23:21,600 --> 00:23:23,600
because it was convenient

609
00:23:23,600 --> 00:23:26,080
looking to the libraries no big deal for

610
00:23:26,080 --> 00:23:27,919
implementations here

611
00:23:27,919 --> 00:23:29,280
but

612
00:23:29,280 --> 00:23:32,080
lately we changed to

613
00:23:32,080 --> 00:23:35,679
general jws json serialization

614
00:23:35,679 --> 00:23:37,600
for uh reasons

615
00:23:37,600 --> 00:23:41,039
um so we we want to have uh

616
00:23:41,039 --> 00:23:44,640
or maybe future you use cases could um

617
00:23:44,640 --> 00:23:46,000
require

618
00:23:46,000 --> 00:23:48,159
more than one signature to a voucher

619
00:23:48,159 --> 00:23:50,960
object and also not to limit this new

620
00:23:50,960 --> 00:23:54,320
form factor um to one signature and

621
00:23:54,320 --> 00:23:56,640
compared to the existing vouchers like

622
00:23:56,640 --> 00:24:00,799
json and um cms and also sibo and cosec

623
00:24:00,799 --> 00:24:02,640
so we do not want to have a difference

624
00:24:02,640 --> 00:24:04,480
here because this other form factors

625
00:24:04,480 --> 00:24:07,679
also support multiple signatures on

626
00:24:07,679 --> 00:24:10,559
on on on the voucher payload

627
00:24:10,559 --> 00:24:12,400
so this this is why we

628
00:24:12,400 --> 00:24:14,720
are switched to this um other form

629
00:24:14,720 --> 00:24:16,080
factor

630
00:24:16,080 --> 00:24:18,240
and we will see it i think on the next

631
00:24:18,240 --> 00:24:19,360
slide

632
00:24:19,360 --> 00:24:21,120
yes um

633
00:24:21,120 --> 00:24:23,840
here i have a voucher representation so

634
00:24:23,840 --> 00:24:26,640
on the left hand side you can see uh

635
00:24:26,640 --> 00:24:29,440
yeah general jws json

636
00:24:29,440 --> 00:24:32,400
um serialization syntax

637
00:24:32,400 --> 00:24:34,480
looking at the payload yeah you can see

638
00:24:34,480 --> 00:24:36,480
it's a voucher with

639
00:24:36,480 --> 00:24:37,760
some

640
00:24:37,760 --> 00:24:39,760
fields

641
00:24:39,760 --> 00:24:42,159
everybody should know so um assertion

642
00:24:42,159 --> 00:24:44,320
serial number nones for example created

643
00:24:44,320 --> 00:24:47,360
on pin domain certificate and then we

644
00:24:47,360 --> 00:24:50,159
see the signatures array

645
00:24:50,159 --> 00:24:52,320
at the bottom so here it's only showing

646
00:24:52,320 --> 00:24:56,080
one signature but the um the brackets in

647
00:24:56,080 --> 00:24:58,080
brackets indicate that you can have

648
00:24:58,080 --> 00:25:01,919
multiple signatures in that so and um so

649
00:25:01,919 --> 00:25:04,080
details can be found

650
00:25:04,080 --> 00:25:06,720
in the in the draft so figure one

651
00:25:06,720 --> 00:25:09,120
gives more details on that and then we

652
00:25:09,120 --> 00:25:11,520
also have an example in the appendix

653
00:25:11,520 --> 00:25:14,799
which is then the um

654
00:25:14,799 --> 00:25:16,799
the ddt voucher

655
00:25:16,799 --> 00:25:19,600
itself as an example so and you can see

656
00:25:19,600 --> 00:25:22,640
it here we have the payload a64 encoded

657
00:25:22,640 --> 00:25:24,480
and then we again have the signatures

658
00:25:24,480 --> 00:25:26,960
array with the protected header of a64

659
00:25:26,960 --> 00:25:28,480
encoded and

660
00:25:28,480 --> 00:25:31,039
the um

661
00:25:31,520 --> 00:25:33,440
matching signature

662
00:25:33,440 --> 00:25:36,000
also base64 encoded

663
00:25:36,000 --> 00:25:37,200
and

664
00:25:37,200 --> 00:25:38,480
that's all

665
00:25:38,480 --> 00:25:43,840
so to the syntax and to the example

666
00:25:45,120 --> 00:25:47,279
yeah history of changes so

667
00:25:47,279 --> 00:25:50,159
main change was go from compact to

668
00:25:50,159 --> 00:25:52,240
general theorization

669
00:25:52,240 --> 00:25:53,200
and

670
00:25:53,200 --> 00:25:56,480
what we did is also include zoomtext and

671
00:25:56,480 --> 00:25:58,159
examples for the

672
00:25:58,159 --> 00:26:01,200
um different objects which is pledge

673
00:26:01,200 --> 00:26:02,720
voucher request

674
00:26:02,720 --> 00:26:04,720
registrar voucher request and the

675
00:26:04,720 --> 00:26:07,520
voucher itself

676
00:26:08,840 --> 00:26:11,520
um that's that one

677
00:26:11,520 --> 00:26:14,240
and then yeah the next step is to

678
00:26:14,240 --> 00:26:16,240
enhance the description so i think uh

679
00:26:16,240 --> 00:26:18,640
content-wise we are complete but uh we

680
00:26:18,640 --> 00:26:20,000
need some more

681
00:26:20,000 --> 00:26:20,300
um

682
00:26:20,300 --> 00:26:22,080
[Music]

683
00:26:22,080 --> 00:26:24,640
writing uh to to give some some more

684
00:26:24,640 --> 00:26:25,919
meat in there

685
00:26:25,919 --> 00:26:27,840
and um

686
00:26:27,840 --> 00:26:29,679
to make it easy for for the for the

687
00:26:29,679 --> 00:26:31,600
reader to get a good understanding of

688
00:26:31,600 --> 00:26:34,320
what we are doing and how the how the

689
00:26:34,320 --> 00:26:35,600
form factor is

690
00:26:35,600 --> 00:26:37,120
meant to be

691
00:26:37,120 --> 00:26:39,039
then we have regular alignment in the

692
00:26:39,039 --> 00:26:41,840
design team calls um we circulate the

693
00:26:41,840 --> 00:26:44,400
outcome to the mailing list and we have

694
00:26:44,400 --> 00:26:47,279
poc implementations um together with

695
00:26:47,279 --> 00:26:48,720
brisket prm

696
00:26:48,720 --> 00:26:51,919
and yeah also here working group you

697
00:26:51,919 --> 00:26:53,679
appreciated

698
00:26:53,679 --> 00:26:54,960
and i think

699
00:26:54,960 --> 00:26:56,080
that's

700
00:26:56,080 --> 00:26:58,320
it it's only the appropriations yeah

701
00:26:58,320 --> 00:26:59,919
that's it

702
00:26:59,919 --> 00:27:03,480
are there questions

703
00:27:08,400 --> 00:27:10,799
no

704
00:27:11,919 --> 00:27:14,159
then we are done

705
00:27:14,159 --> 00:27:16,080
thank you very much

706
00:27:16,080 --> 00:27:18,799
okay thank you

707
00:27:18,840 --> 00:27:24,320
so that brings us to brewski prm stefan

708
00:27:24,320 --> 00:27:27,439
yeah that's what we mean

709
00:27:31,679 --> 00:27:33,679
wait a second i need to revoke the

710
00:27:33,679 --> 00:27:37,520
slides and steph and now you can

711
00:27:37,919 --> 00:27:40,240
start sharing your slides

712
00:27:40,240 --> 00:27:40,960
i

713
00:27:40,960 --> 00:27:44,240
tried to request the slides

714
00:27:44,399 --> 00:27:46,399
request again that was because there was

715
00:27:46,399 --> 00:27:50,559
still the previous year okay

716
00:27:55,600 --> 00:27:57,360
so i requested

717
00:27:57,360 --> 00:27:58,640
nothing happened

718
00:27:58,640 --> 00:28:01,760
oh yeah i don't know why that should

719
00:28:01,760 --> 00:28:04,960
okay let me try it again

720
00:28:05,520 --> 00:28:08,080
master chance lights

721
00:28:08,080 --> 00:28:11,720
ah there it is

722
00:28:16,710 --> 00:28:18,320
[Music]

723
00:28:18,320 --> 00:28:21,360
so it should be visible

724
00:28:21,520 --> 00:28:23,120
yeah i would like to give an update of

725
00:28:23,120 --> 00:28:25,679
the work we are currently doing

726
00:28:25,679 --> 00:28:27,520
thanks i would like to give an update on

727
00:28:27,520 --> 00:28:29,039
the work we are currently doing for

728
00:28:29,039 --> 00:28:30,720
brewski and

729
00:28:30,720 --> 00:28:33,039
pledge in responder mode

730
00:28:33,039 --> 00:28:36,080
prm so that's a work that

731
00:28:36,080 --> 00:28:38,240
besides thomas and i eliot and michael

732
00:28:38,240 --> 00:28:41,799
are involved in

733
00:28:44,320 --> 00:28:47,520
so since the last itf we have uh two two

734
00:28:47,520 --> 00:28:49,440
uh updates or two versions from the

735
00:28:49,440 --> 00:28:52,320
draft so in the first update uh we

736
00:28:52,320 --> 00:28:54,799
addressed several issues that were

737
00:28:54,799 --> 00:28:57,840
discussed on the anima github and in the

738
00:28:57,840 --> 00:28:59,440
design team

739
00:28:59,440 --> 00:29:01,440
uh so i'm starting from the beginning so

740
00:29:01,440 --> 00:29:04,240
issue 15 was uh we incorporated an

741
00:29:04,240 --> 00:29:05,279
option for

742
00:29:05,279 --> 00:29:07,279
additional signature of the voucher so

743
00:29:07,279 --> 00:29:09,600
this is what thomas just mentioned in

744
00:29:09,600 --> 00:29:11,440
the

745
00:29:11,440 --> 00:29:12,480
uh

746
00:29:12,480 --> 00:29:15,279
those are the old slides yeah anyway um

747
00:29:15,279 --> 00:29:17,600
we incorporated in uh the additional

748
00:29:17,600 --> 00:29:19,919
signature for the voucher uh which is

749
00:29:19,919 --> 00:29:21,840
intended to provide the proof of

750
00:29:21,840 --> 00:29:24,720
procession of the registrar proof of

751
00:29:24,720 --> 00:29:27,120
possession of the registrar private key

752
00:29:27,120 --> 00:29:31,600
so in brewski prm the uh we reverse

753
00:29:31,600 --> 00:29:33,360
uh the

754
00:29:33,360 --> 00:29:35,520
the roles of the pledge and the

755
00:29:35,520 --> 00:29:37,200
registrar in terms of pushing

756
00:29:37,200 --> 00:29:39,120
information down to the pledge

757
00:29:39,120 --> 00:29:40,480
and at first

758
00:29:40,480 --> 00:29:42,880
the registrar agent pushed down pushes

759
00:29:42,880 --> 00:29:45,520
down the registrar's certificate

760
00:29:45,520 --> 00:29:47,120
to the pledge but the pledge doesn't

761
00:29:47,120 --> 00:29:49,760
have a proof of procession so we use a

762
00:29:49,760 --> 00:29:52,000
second

763
00:29:52,000 --> 00:29:54,080
a second signature of the voucher itself

764
00:29:54,080 --> 00:29:56,960
to provide that information down to the

765
00:29:56,960 --> 00:29:59,840
to the pledge when the voucher comes

766
00:29:59,840 --> 00:30:01,440
back from the mazar and descent

767
00:30:01,440 --> 00:30:03,360
forwarded via the pledge agent down to

768
00:30:03,360 --> 00:30:05,760
the to the registrar

769
00:30:05,760 --> 00:30:07,919
so i have a slide afterwards to that as

770
00:30:07,919 --> 00:30:08,880
well

771
00:30:08,880 --> 00:30:11,679
so then we included a new endpoint on

772
00:30:11,679 --> 00:30:13,360
the registrar

773
00:30:13,360 --> 00:30:15,520
which became necessary because we want

774
00:30:15,520 --> 00:30:17,039
to deliver the wrapped enrollment

775
00:30:17,039 --> 00:30:19,919
request so we have a pkcs10

776
00:30:19,919 --> 00:30:22,799
which is typically provided to the est

777
00:30:22,799 --> 00:30:26,080
simple enroll endpoint in brewski prm we

778
00:30:26,080 --> 00:30:29,120
are using a signature wrapped pk cs10 so

779
00:30:29,120 --> 00:30:30,880
that was a reason to define an own

780
00:30:30,880 --> 00:30:33,440
endpoint on the registrar to not

781
00:30:33,440 --> 00:30:35,120
uh

782
00:30:35,120 --> 00:30:39,200
to not change esd at that point in time

783
00:30:39,200 --> 00:30:41,440
so then we had issue number eight and

784
00:30:41,440 --> 00:30:44,320
seven they somehow are corresponding

785
00:30:44,320 --> 00:30:46,080
uh we were thinking in the very first

786
00:30:46,080 --> 00:30:48,559
beginning to support multiple csrs

787
00:30:48,559 --> 00:30:51,360
during the run of brewski prm but then

788
00:30:51,360 --> 00:30:54,640
decided to have a single cr csr

789
00:30:54,640 --> 00:30:57,679
certificate signing request to

790
00:30:57,679 --> 00:31:01,120
enroll for an ldf id

791
00:31:01,120 --> 00:31:02,880
and entity certificate which is a

792
00:31:02,880 --> 00:31:05,360
generic ldfid

793
00:31:05,360 --> 00:31:07,760
and based on the elder

794
00:31:07,760 --> 00:31:10,720
generic ldfid further certificates may

795
00:31:10,720 --> 00:31:13,120
be bootstrapped for the endpoint so that

796
00:31:13,120 --> 00:31:15,840
can be done using the existing endpoints

797
00:31:15,840 --> 00:31:18,240
on the on the registrar but it's not

798
00:31:18,240 --> 00:31:21,600
intended to do that on the first flight

799
00:31:21,600 --> 00:31:23,600
so that was the reason to to drop the

800
00:31:23,600 --> 00:31:26,399
support for multiple csrs and

801
00:31:26,399 --> 00:31:28,799
consequently we also have dropped the

802
00:31:28,799 --> 00:31:30,640
support for additional signatures on the

803
00:31:30,640 --> 00:31:33,279
enrollment response as we just have a

804
00:31:33,279 --> 00:31:35,840
single generic lfid certificate as

805
00:31:35,840 --> 00:31:39,519
response for the enrollment request

806
00:31:40,000 --> 00:31:42,480
so based on the poc we also verified

807
00:31:42,480 --> 00:31:43,519
that we

808
00:31:43,519 --> 00:31:46,720
utilize the itf

809
00:31:46,720 --> 00:31:49,279
ztp types the young definition for that

810
00:31:49,279 --> 00:31:50,559
correctly

811
00:31:50,559 --> 00:31:52,159
and uh

812
00:31:52,159 --> 00:31:54,159
issue number four is also solved so that

813
00:31:54,159 --> 00:31:56,559
is the assertion type which was aligned

814
00:31:56,559 --> 00:31:59,840
with the voucher definition in rfc 83 66

815
00:31:59,840 --> 00:32:00,880
bisp

816
00:32:00,880 --> 00:32:03,440
so we have defined a new assertion type

817
00:32:03,440 --> 00:32:04,720
there

818
00:32:04,720 --> 00:32:08,399
which is called agent proximity

819
00:32:12,240 --> 00:32:13,440
so then

820
00:32:13,440 --> 00:32:17,039
in in the context of bootstrapping

821
00:32:17,039 --> 00:32:20,159
we introduced the registrar agent

822
00:32:20,159 --> 00:32:22,159
that provides some information to the

823
00:32:22,159 --> 00:32:24,080
pledge and one of the information here

824
00:32:24,080 --> 00:32:26,880
is agent sign cert up to now we had it

825
00:32:26,880 --> 00:32:28,399
as a single certificate

826
00:32:28,399 --> 00:32:30,640
and now we changed it to an array to

827
00:32:30,640 --> 00:32:33,519
also uh address situations in which the

828
00:32:33,519 --> 00:32:35,600
registrar agent may have a different

829
00:32:35,600 --> 00:32:36,720
certificate

830
00:32:36,720 --> 00:32:39,519
or a certificate pass than the registrar

831
00:32:39,519 --> 00:32:42,000
itself so having the array would allow

832
00:32:42,000 --> 00:32:44,399
to also provide intermediate

833
00:32:44,399 --> 00:32:49,039
certificates for the agent signed third

834
00:32:49,919 --> 00:32:52,240
so then there was some some further

835
00:32:52,240 --> 00:32:53,840
enhancement of the text that better

836
00:32:53,840 --> 00:32:55,279
provides

837
00:32:55,279 --> 00:32:57,360
authorization checks of the registrar

838
00:32:57,360 --> 00:32:58,399
agent

839
00:32:58,399 --> 00:33:02,240
and uh some further housekeeping with uh

840
00:33:02,240 --> 00:33:04,960
providing a more elaborate inquiry

841
00:33:04,960 --> 00:33:06,640
description of the

842
00:33:06,640 --> 00:33:08,720
examples that we are provided for the

843
00:33:08,720 --> 00:33:11,039
triggering of pledge voucher requests

844
00:33:11,039 --> 00:33:13,200
and enrollment requests

845
00:33:13,200 --> 00:33:15,840
we also included a limitation section

846
00:33:15,840 --> 00:33:17,200
here

847
00:33:17,200 --> 00:33:19,120
to note that if the pledge is in power

848
00:33:19,120 --> 00:33:21,840
save mode then there is no way in

849
00:33:21,840 --> 00:33:24,799
starting the communication except that

850
00:33:24,799 --> 00:33:26,799
the pledge comes back from from the

851
00:33:26,799 --> 00:33:28,480
power save mode

852
00:33:28,480 --> 00:33:31,279
as this is targeting the push scenario

853
00:33:31,279 --> 00:33:34,640
instead of the pull scenario

854
00:33:37,120 --> 00:33:39,679
so then uh sorry for for having the old

855
00:33:39,679 --> 00:33:41,679
slides here

856
00:33:41,679 --> 00:33:43,760
uh so issue number 15 i already

857
00:33:43,760 --> 00:33:45,679
addressed in the in the first version

858
00:33:45,679 --> 00:33:48,960
here uh in the first change to version

859
00:33:48,960 --> 00:33:50,000
one

860
00:33:50,000 --> 00:33:51,760
so we finalized here the handling of the

861
00:33:51,760 --> 00:33:53,760
additional signature verification so

862
00:33:53,760 --> 00:33:55,360
it's basically some enhancement of the

863
00:33:55,360 --> 00:33:56,399
text

864
00:33:56,399 --> 00:33:58,640
that was included here to have the order

865
00:33:58,640 --> 00:34:01,120
of the signature verification when the

866
00:34:01,120 --> 00:34:02,240
uh

867
00:34:02,240 --> 00:34:04,480
the voucher which which is now signed

868
00:34:04,480 --> 00:34:07,440
also by the register is

869
00:34:07,440 --> 00:34:10,800
is received by the pledge

870
00:34:10,800 --> 00:34:12,320
then we included

871
00:34:12,320 --> 00:34:13,280
some

872
00:34:13,280 --> 00:34:16,159
further examples for the generalized jws

873
00:34:16,159 --> 00:34:18,879
json serialization in the same way as

874
00:34:18,879 --> 00:34:21,760
thomas just showed before

875
00:34:21,760 --> 00:34:24,480
for the jws voucher draft

876
00:34:24,480 --> 00:34:26,480
and further included arrow responses

877
00:34:26,480 --> 00:34:28,079
from the patch if it is not able to

878
00:34:28,079 --> 00:34:31,040
create certain requests

879
00:34:31,040 --> 00:34:34,079
so issues 7 8 14 are basically resolved

880
00:34:34,079 --> 00:34:37,040
by sticking to one certificate that is

881
00:34:37,040 --> 00:34:40,159
requested to drink the generic ldf id

882
00:34:40,159 --> 00:34:42,079
and getting back also a single

883
00:34:42,079 --> 00:34:44,800
certificate so that are all

884
00:34:44,800 --> 00:34:46,960
corresponding to the to the changes or

885
00:34:46,960 --> 00:34:50,159
to the issues that i've mentioned before

886
00:34:50,159 --> 00:34:53,119
so just to picture this uh utilization

887
00:34:53,119 --> 00:34:54,960
of multiple signatures on the voucher

888
00:34:54,960 --> 00:34:57,359
response so on the right hand side that

889
00:34:57,359 --> 00:34:58,160
is

890
00:34:58,160 --> 00:35:01,040
the flow chart i always used as an awful

891
00:35:01,040 --> 00:35:03,119
echo by the way

892
00:35:03,119 --> 00:35:04,480
um

893
00:35:04,480 --> 00:35:06,720
the right hand side shows the flow chart

894
00:35:06,720 --> 00:35:12,240
that i uh showed at the ids before that

895
00:35:12,320 --> 00:35:13,680
gives some more detail on the

896
00:35:13,680 --> 00:35:15,200
interaction between the pledge the

897
00:35:15,200 --> 00:35:19,279
registrar agent and the domain registrar

898
00:35:19,359 --> 00:35:22,000
and what we try to do here or what we

899
00:35:22,000 --> 00:35:24,079
defined here is basically

900
00:35:24,079 --> 00:35:26,960
the provisional accept that is used in

901
00:35:26,960 --> 00:35:29,680
brewski in the original brewski

902
00:35:29,680 --> 00:35:32,400
based on the preliminary provisional

903
00:35:32,400 --> 00:35:35,200
accept and the tls handshake we rebuilt

904
00:35:35,200 --> 00:35:37,839
that here by providing

905
00:35:37,839 --> 00:35:39,839
the certificate in the first flight and

906
00:35:39,839 --> 00:35:41,760
the trigger of the voucher

907
00:35:41,760 --> 00:35:44,079
request message from the registrar agent

908
00:35:44,079 --> 00:35:46,560
down to the pledge we have the registrar

909
00:35:46,560 --> 00:35:49,520
included here but in contrast to the

910
00:35:49,520 --> 00:35:52,240
original brewski where you already have

911
00:35:52,240 --> 00:35:54,560
a proof of possession

912
00:35:54,560 --> 00:35:56,720
by the registrar of the corresponding

913
00:35:56,720 --> 00:35:58,960
private key through the tls handshake we

914
00:35:58,960 --> 00:36:00,560
don't have that here

915
00:36:00,560 --> 00:36:02,560
so that was the reason to

916
00:36:02,560 --> 00:36:05,280
enhance the voucher as you can see on

917
00:36:05,280 --> 00:36:06,800
the left hand side with the second

918
00:36:06,800 --> 00:36:09,280
signature and that signature is provided

919
00:36:09,280 --> 00:36:12,480
on the way back from the from the mazda

920
00:36:12,480 --> 00:36:14,400
to the domain registrar the domain

921
00:36:14,400 --> 00:36:16,160
register provides that additional

922
00:36:16,160 --> 00:36:17,359
signature

923
00:36:17,359 --> 00:36:19,280
of the voucher

924
00:36:19,280 --> 00:36:20,320
and then

925
00:36:20,320 --> 00:36:22,960
we describe the order in which to verify

926
00:36:22,960 --> 00:36:24,800
the signatures

927
00:36:24,800 --> 00:36:27,520
of this double sign voucher

928
00:36:27,520 --> 00:36:30,079
to enable the pledge to on one hand

929
00:36:30,079 --> 00:36:32,320
accept the contained

930
00:36:32,320 --> 00:36:35,280
pinned domain certificate as new trust

931
00:36:35,280 --> 00:36:38,240
anchor and also verify that the

932
00:36:38,240 --> 00:36:41,280
registrar with whom he is in contact

933
00:36:41,280 --> 00:36:43,839
really possesses the private key

934
00:36:43,839 --> 00:36:46,160
to the certificate that he has

935
00:36:46,160 --> 00:36:47,200
that he has

936
00:36:47,200 --> 00:36:50,480
received in the first flight

937
00:36:51,760 --> 00:36:55,839
this is just to depict that

938
00:36:57,839 --> 00:37:00,400
okay so uh based on the current state of

939
00:37:00,400 --> 00:37:03,359
the draft we have no open issues so

940
00:37:03,359 --> 00:37:06,079
there we used to collect open issues

941
00:37:06,079 --> 00:37:07,839
also in the draft and stated them

942
00:37:07,839 --> 00:37:10,079
throughout the draft

943
00:37:10,079 --> 00:37:12,560
that was

944
00:37:14,480 --> 00:37:16,720
that was all of those open issues are

945
00:37:16,720 --> 00:37:18,560
solved the open issues we collected on

946
00:37:18,560 --> 00:37:20,880
the animal github are also solved so

947
00:37:20,880 --> 00:37:22,960
currently the draft itself has no open

948
00:37:22,960 --> 00:37:23,839
issues

949
00:37:23,839 --> 00:37:26,560
what is missing right now is a more

950
00:37:26,560 --> 00:37:28,560
elaborate discussion in the security

951
00:37:28,560 --> 00:37:30,480
consideration section that needs to be

952
00:37:30,480 --> 00:37:31,680
updated

953
00:37:31,680 --> 00:37:33,920
uh we have the pog implementation

954
00:37:33,920 --> 00:37:36,160
ongoing and also the interrupt testing

955
00:37:36,160 --> 00:37:38,320
so that is in conjunction with what

956
00:37:38,320 --> 00:37:42,640
thomas said regarding the jws voucher

957
00:37:43,040 --> 00:37:45,280
from that point of view i would

958
00:37:45,280 --> 00:37:47,920
like to ask for volunteers for peer

959
00:37:47,920 --> 00:37:48,960
review

960
00:37:48,960 --> 00:37:52,880
and also request working group review

961
00:37:53,040 --> 00:37:54,000
thank you

962
00:37:54,000 --> 00:37:56,160
by the way i think instead of just doing

963
00:37:56,160 --> 00:37:58,720
it here if you reach out individual

964
00:37:58,720 --> 00:38:01,040
individual to you know

965
00:38:01,040 --> 00:38:02,720
folks in the ietf in the working group

966
00:38:02,720 --> 00:38:04,320
here and other working groups and ask

967
00:38:04,320 --> 00:38:06,160
them i think that's uh

968
00:38:06,160 --> 00:38:08,400
typically more effective and

969
00:38:08,400 --> 00:38:11,200
okay if if you can reciprocate with with

970
00:38:11,200 --> 00:38:12,960
other documents from them or so that

971
00:38:12,960 --> 00:38:15,520
typically will then even be faster

972
00:38:15,520 --> 00:38:18,520
yep

973
00:38:18,640 --> 00:38:22,440
any questions for the draft

974
00:38:33,359 --> 00:38:34,480
all right

975
00:38:34,480 --> 00:38:36,960
that sounds like we have a wrap on this

976
00:38:36,960 --> 00:38:38,480
item

977
00:38:38,480 --> 00:38:42,320
so okay you stop the share great and

978
00:38:42,320 --> 00:38:44,079
next in line

979
00:38:44,079 --> 00:38:48,160
would be brewski ae with a

980
00:38:48,160 --> 00:38:49,680
new

981
00:38:49,680 --> 00:38:50,960
member

982
00:38:50,960 --> 00:38:54,880
yeah author here let me see

983
00:38:56,640 --> 00:38:58,480
can you hear me my name is dave we can

984
00:38:58,480 --> 00:39:01,440
hear you find david um

985
00:39:01,440 --> 00:39:02,720
can you uh

986
00:39:02,720 --> 00:39:05,119
try to share the slides yourself

987
00:39:05,119 --> 00:39:07,920
um i would ask you to share if otherwise

988
00:39:07,920 --> 00:39:10,800
you can also give it a try

989
00:39:10,800 --> 00:39:14,240
i can try to share the slides and just

990
00:39:14,240 --> 00:39:15,680
so good

991
00:39:15,680 --> 00:39:18,399
taking notes

992
00:39:27,359 --> 00:39:29,440
great

993
00:39:29,440 --> 00:39:30,800
thanks

994
00:39:30,800 --> 00:39:33,680
yeah so i'm reporting on the status of

995
00:39:33,680 --> 00:39:36,240
bruce key ae

996
00:39:36,240 --> 00:39:39,680
the current draft version is o5

997
00:39:39,680 --> 00:39:40,640
and

998
00:39:40,640 --> 00:39:43,359
ae originally stood for asynchronous

999
00:39:43,359 --> 00:39:45,839
enrollment as the main use case

1000
00:39:45,839 --> 00:39:49,520
but since uh about half a year or so

1001
00:39:49,520 --> 00:39:51,200
in the design team

1002
00:39:51,200 --> 00:39:52,880
we figured that it's actually the scope

1003
00:39:52,880 --> 00:39:54,480
can be widened with the application

1004
00:39:54,480 --> 00:39:56,400
scope so this scope of technical scope

1005
00:39:56,400 --> 00:39:58,240
is the same as before

1006
00:39:58,240 --> 00:39:58,960
but

1007
00:39:58,960 --> 00:40:00,640
actually we can accommodate much more

1008
00:40:00,640 --> 00:40:02,000
use cases

1009
00:40:02,000 --> 00:40:03,680
um and

1010
00:40:03,680 --> 00:40:06,720
this is much better reflected by

1011
00:40:06,720 --> 00:40:08,880
um something um

1012
00:40:08,880 --> 00:40:10,800
called an alternative enrollment

1013
00:40:10,800 --> 00:40:12,000
protocols

1014
00:40:12,000 --> 00:40:14,240
and for this reason we are also

1015
00:40:14,240 --> 00:40:18,400
proposing to update uh the name of the

1016
00:40:18,400 --> 00:40:21,359
whole draft to briskly ae

1017
00:40:21,359 --> 00:40:23,280
alternative alternative enrollment

1018
00:40:23,280 --> 00:40:26,319
protocols in brewski

1019
00:40:27,359 --> 00:40:29,359
for the same reason we also would like

1020
00:40:29,359 --> 00:40:30,560
to

1021
00:40:30,560 --> 00:40:33,760
rename the repository on github so far

1022
00:40:33,760 --> 00:40:36,319
reflecting the name as inc enroll

1023
00:40:36,319 --> 00:40:37,359
and

1024
00:40:37,359 --> 00:40:39,440
the plan is to go to

1025
00:40:39,440 --> 00:40:43,599
a name just saying brewski ae basically

1026
00:40:44,480 --> 00:40:47,440
next slide please

1027
00:40:49,680 --> 00:40:51,599
just a quick recap

1028
00:40:51,599 --> 00:40:55,040
what of what brewski ae is about

1029
00:40:55,040 --> 00:40:57,920
the idea is that it is a variant of

1030
00:40:57,920 --> 00:40:59,440
standard brewski

1031
00:40:59,440 --> 00:41:03,280
where instead of the usual use for

1032
00:41:03,280 --> 00:41:04,880
when doing the certificate enrollment

1033
00:41:04,880 --> 00:41:06,720
step

1034
00:41:06,720 --> 00:41:08,160
not to use

1035
00:41:08,160 --> 00:41:10,079
est simple enroll

1036
00:41:10,079 --> 00:41:11,920
but to use any

1037
00:41:11,920 --> 00:41:14,880
other certificate enrollment protocol

1038
00:41:14,880 --> 00:41:15,839
that

1039
00:41:15,839 --> 00:41:17,040
supports

1040
00:41:17,040 --> 00:41:19,599
self-contained request messages

1041
00:41:19,599 --> 00:41:21,760
with such type of request messages we

1042
00:41:21,760 --> 00:41:23,839
could get independence of the transport

1043
00:41:23,839 --> 00:41:26,319
layer and therefore have much better

1044
00:41:26,319 --> 00:41:29,119
flexibility when where to process

1045
00:41:29,119 --> 00:41:32,079
certificate requests

1046
00:41:32,079 --> 00:41:33,440
and

1047
00:41:33,440 --> 00:41:37,040
this is reflected in this figure um so

1048
00:41:37,040 --> 00:41:38,960
focusing on the orange

1049
00:41:38,960 --> 00:41:40,400
frame box

1050
00:41:40,400 --> 00:41:43,359
and this is the part where after initial

1051
00:41:43,359 --> 00:41:46,079
voucher exchange the pledge

1052
00:41:46,079 --> 00:41:49,599
would like to enroll a certificate

1053
00:41:49,599 --> 00:41:50,880
to this end

1054
00:41:50,880 --> 00:41:54,240
um it can optionally request further

1055
00:41:54,240 --> 00:41:56,319
certificates that it may need during the

1056
00:41:56,319 --> 00:41:57,839
enrollment or later

1057
00:41:57,839 --> 00:41:59,920
it can optionally also

1058
00:41:59,920 --> 00:42:03,119
ask for specifics certificate

1059
00:42:03,119 --> 00:42:04,960
request attributes to include in the

1060
00:42:04,960 --> 00:42:07,119
request

1061
00:42:07,119 --> 00:42:08,079
and then

1062
00:42:08,079 --> 00:42:10,240
the mandatory step is

1063
00:42:10,240 --> 00:42:13,920
to actually request a certificate

1064
00:42:13,920 --> 00:42:15,839
and this is done

1065
00:42:15,839 --> 00:42:17,359
these three

1066
00:42:17,359 --> 00:42:19,040
steps are done in the new protocol or

1067
00:42:19,040 --> 00:42:20,640
whatever protocol you want to have

1068
00:42:20,640 --> 00:42:22,880
instead of esd simple

1069
00:42:22,880 --> 00:42:25,680
um enroll for example you could use

1070
00:42:25,680 --> 00:42:29,040
cmp or cms or est

1071
00:42:29,040 --> 00:42:30,720
fall cmc

1072
00:42:30,720 --> 00:42:32,480
to this end

1073
00:42:32,480 --> 00:42:33,359
and

1074
00:42:33,359 --> 00:42:35,599
after the request arrives at the domain

1075
00:42:35,599 --> 00:42:37,359
registrar

1076
00:42:37,359 --> 00:42:38,960
um

1077
00:42:38,960 --> 00:42:41,520
still the the main register

1078
00:42:41,520 --> 00:42:43,839
could do the processing or part of the

1079
00:42:43,839 --> 00:42:46,640
processing of the enrollment request

1080
00:42:46,640 --> 00:42:49,440
and all everything remaining

1081
00:42:49,440 --> 00:42:52,000
can be done by a different

1082
00:42:52,000 --> 00:42:53,680
agent for example

1083
00:42:53,680 --> 00:42:56,480
an ra that is somewhere in the back end

1084
00:42:56,480 --> 00:42:59,040
of the overall architecture

1085
00:42:59,040 --> 00:43:01,760
so we have some more flexibility

1086
00:43:01,760 --> 00:43:05,599
um in the system uh design and structure

1087
00:43:05,599 --> 00:43:09,599
where the ra functionality can be

1088
00:43:09,599 --> 00:43:13,280
shared freely between the domain

1089
00:43:13,280 --> 00:43:15,599
registrar of brewski itself

1090
00:43:15,599 --> 00:43:16,960
and some

1091
00:43:16,960 --> 00:43:19,760
optional external entity doing the rest

1092
00:43:19,760 --> 00:43:23,119
of the ra functionality

1093
00:43:24,319 --> 00:43:26,240
there any comments or questions on this

1094
00:43:26,240 --> 00:43:29,599
uh on the overall scenario

1095
00:43:29,599 --> 00:43:34,000
yeah just a intolerance here um

1096
00:43:34,000 --> 00:43:35,119
so

1097
00:43:35,119 --> 00:43:37,200
this and i think uh the prior one as

1098
00:43:37,200 --> 00:43:39,280
well always makes me

1099
00:43:39,280 --> 00:43:41,280
sad to see that

1100
00:43:41,280 --> 00:43:43,119
these wonderful diagrams maybe just

1101
00:43:43,119 --> 00:43:45,359
temporarily shown once in a

1102
00:43:45,359 --> 00:43:47,359
working group meeting as what i think

1103
00:43:47,359 --> 00:43:49,040
where they would really be great in the

1104
00:43:49,040 --> 00:43:50,560
in the document so

1105
00:43:50,560 --> 00:43:52,160
if you folks are interested would really

1106
00:43:52,160 --> 00:43:54,400
be cool if we could try to see what the

1107
00:43:54,400 --> 00:43:55,920
the current

1108
00:43:55,920 --> 00:43:58,000
uh processes by which we can get at

1109
00:43:58,000 --> 00:44:00,560
least that in the pdf mr richardson is

1110
00:44:00,560 --> 00:44:03,200
against it

1111
00:44:07,119 --> 00:44:08,640
in the in the pdf versions of the

1112
00:44:08,640 --> 00:44:11,760
document oh that sucks

1113
00:44:11,760 --> 00:44:13,680
well but i mean this this one actually

1114
00:44:13,680 --> 00:44:16,400
might still be very very nice even in uh

1115
00:44:16,400 --> 00:44:18,640
grayscale right so grayscale it is not

1116
00:44:18,640 --> 00:44:20,240
black and white so

1117
00:44:20,240 --> 00:44:23,040
i i stand with my opinion that it's it's

1118
00:44:23,040 --> 00:44:25,520
a shame if if that work was lost uh as

1119
00:44:25,520 --> 00:44:28,079
opposed to make it into the rfcs even in

1120
00:44:28,079 --> 00:44:30,400
the pdf version so um if you're

1121
00:44:30,400 --> 00:44:32,480
interested right ping me and uh we can

1122
00:44:32,480 --> 00:44:35,119
we can talk with the rfc editors then

1123
00:44:35,119 --> 00:44:38,400
if if for how the tool chain works

1124
00:44:38,400 --> 00:44:41,280
thanks a lot for this comment what's up

1125
00:44:41,280 --> 00:44:44,560
opinions yes this picture is very good

1126
00:44:44,560 --> 00:44:45,599
to

1127
00:44:45,599 --> 00:44:49,599
get the full picture what the ae is and

1128
00:44:49,599 --> 00:44:50,880
how the

1129
00:44:50,880 --> 00:44:53,040
procedure would be

1130
00:44:53,040 --> 00:44:55,280
it's very helpful

1131
00:44:55,280 --> 00:44:57,599
it would be a shame if we can't

1132
00:44:57,599 --> 00:44:59,599
including that in a document

1133
00:44:59,599 --> 00:45:01,680
and for my understanding

1134
00:45:01,680 --> 00:45:04,560
that a new rfc editor

1135
00:45:04,560 --> 00:45:06,960
shield here already have the technology

1136
00:45:06,960 --> 00:45:08,000
to

1137
00:45:08,000 --> 00:45:11,280
uh into such picture already

1138
00:45:11,280 --> 00:45:13,920
we can do that

1139
00:45:13,920 --> 00:45:17,680
so you mean to include it in the draft

1140
00:45:17,680 --> 00:45:18,400
yes

1141
00:45:18,400 --> 00:45:19,920
great

1142
00:45:19,920 --> 00:45:21,839
we'll give that a try but we we we've

1143
00:45:21,839 --> 00:45:24,079
never tried the tool chain on on how to

1144
00:45:24,079 --> 00:45:26,319
do it right so let's mr rich in one

1145
00:45:26,319 --> 00:45:27,910
smooth one all right

1146
00:45:27,910 --> 00:45:30,079
[Laughter]

1147
00:45:30,079 --> 00:45:31,920
by the way i owe this picture mostly to

1148
00:45:31,920 --> 00:45:34,079
steven freeze so

1149
00:45:34,079 --> 00:45:37,599
i just added uh the specifics of uh of

1150
00:45:37,599 --> 00:45:39,920
highlighting the brisk the iep or ae

1151
00:45:39,920 --> 00:45:42,480
portion of it

1152
00:45:42,560 --> 00:45:45,119
yeah then we can move on to the next

1153
00:45:45,119 --> 00:45:47,200
slide on

1154
00:45:47,200 --> 00:45:49,920
the current uh the

1155
00:45:49,920 --> 00:45:51,599
recent

1156
00:45:51,599 --> 00:45:53,839
changes yes

1157
00:45:53,839 --> 00:45:56,880
since the last version or which was

1158
00:45:56,880 --> 00:46:00,800
referenced in the last iatf

1159
00:46:00,800 --> 00:46:02,319
where we split the document from the

1160
00:46:02,319 --> 00:46:04,319
brisket prime

1161
00:46:04,319 --> 00:46:06,880
since then i have become the editor of

1162
00:46:06,880 --> 00:46:08,640
the document

1163
00:46:08,640 --> 00:46:10,960
and as mentioned we shift to the

1164
00:46:10,960 --> 00:46:13,760
emphasis of the presentation

1165
00:46:13,760 --> 00:46:16,160
not contents wise but presentation wise

1166
00:46:16,160 --> 00:46:18,720
two words uh supporting alternative

1167
00:46:18,720 --> 00:46:20,640
enrollment protocols

1168
00:46:20,640 --> 00:46:22,480
and accordingly

1169
00:46:22,480 --> 00:46:24,160
updated

1170
00:46:24,160 --> 00:46:25,280
the title

1171
00:46:25,280 --> 00:46:27,599
at least provisionally and today i would

1172
00:46:27,599 --> 00:46:30,319
like to ask for your formal approval for

1173
00:46:30,319 --> 00:46:32,720
this step

1174
00:46:33,119 --> 00:46:34,800
yes as far as the name chain is

1175
00:46:34,800 --> 00:46:36,720
concerned whenever you have the

1176
00:46:36,720 --> 00:46:38,720
next revision available just

1177
00:46:38,720 --> 00:46:41,280
change the name in the file name

1178
00:46:41,280 --> 00:46:43,760
um put in what the prior name is so it's

1179
00:46:43,760 --> 00:46:46,000
just during the data tracker upload then

1180
00:46:46,000 --> 00:46:49,119
i if i'm not mistaken it'll ask for

1181
00:46:49,119 --> 00:46:50,560
working group chair approval and then

1182
00:46:50,560 --> 00:46:53,200
we're done with it

1183
00:46:53,200 --> 00:46:55,520
thanks

1184
00:47:05,359 --> 00:47:08,880
oh no i i saw a custom rest hand

1185
00:47:08,880 --> 00:47:11,839
go ahead all right

1186
00:47:11,839 --> 00:47:14,640
yeah apart from the this is a major

1187
00:47:14,640 --> 00:47:18,319
shift of uh focus of the text um

1188
00:47:18,319 --> 00:47:21,440
we moved around some sections uh

1189
00:47:21,440 --> 00:47:24,559
towards appendix in order to make the

1190
00:47:24,559 --> 00:47:26,720
document more readable and also shuffle

1191
00:47:26,720 --> 00:47:28,880
around some other sections

1192
00:47:28,880 --> 00:47:31,839
and also streamline the wording and the

1193
00:47:31,839 --> 00:47:34,480
console i consolidated the terminology

1194
00:47:34,480 --> 00:47:36,800
and etc etc

1195
00:47:36,800 --> 00:47:39,359
so meanwhile i would say the document is

1196
00:47:39,359 --> 00:47:40,960
in the

1197
00:47:40,960 --> 00:47:44,160
pretty stable um status already

1198
00:47:44,160 --> 00:47:45,839
uh where it should be

1199
00:47:45,839 --> 00:47:46,880
uh

1200
00:47:46,880 --> 00:47:49,520
pretty convenient to read

1201
00:47:49,520 --> 00:47:50,640
and therefore

1202
00:47:50,640 --> 00:47:52,480
yeah i think it's a good opportunity

1203
00:47:52,480 --> 00:47:54,000
also to ask

1204
00:47:54,000 --> 00:47:57,280
um any of you um who is interested to

1205
00:47:57,280 --> 00:47:59,359
have a look at it and do an informal

1206
00:47:59,359 --> 00:48:02,559
review on vray um would be very glad to

1207
00:48:02,559 --> 00:48:03,839
receive

1208
00:48:03,839 --> 00:48:07,720
for their comments on it

1209
00:48:08,720 --> 00:48:11,200
next slide is yes

1210
00:48:11,200 --> 00:48:14,640
what is going to be done next

1211
00:48:14,640 --> 00:48:15,599
while

1212
00:48:15,599 --> 00:48:17,920
internally reviewing the text we noticed

1213
00:48:17,920 --> 00:48:20,400
that we have two

1214
00:48:20,400 --> 00:48:21,680
parts

1215
00:48:21,680 --> 00:48:23,680
that need some little further work of

1216
00:48:23,680 --> 00:48:25,520
getting more details in

1217
00:48:25,520 --> 00:48:28,079
which is

1218
00:48:28,400 --> 00:48:31,280
describing in more detail

1219
00:48:31,280 --> 00:48:33,040
the

1220
00:48:33,040 --> 00:48:35,920
instantiation of the of this framework

1221
00:48:35,920 --> 00:48:37,520
uh to using

1222
00:48:37,520 --> 00:48:39,839
the lightweight cmp profiles or using

1223
00:48:39,839 --> 00:48:41,760
the cmb protocol

1224
00:48:41,760 --> 00:48:44,400
and there it turns out that

1225
00:48:44,400 --> 00:48:46,800
we should even some

1226
00:48:46,800 --> 00:48:48,559
give some more detail

1227
00:48:48,559 --> 00:48:49,680
how to

1228
00:48:49,680 --> 00:48:52,240
transfer further certificates during the

1229
00:48:52,240 --> 00:48:53,920
enrollment process

1230
00:48:53,920 --> 00:48:56,400
um whether to use

1231
00:48:56,400 --> 00:49:00,800
the search request template um

1232
00:49:01,280 --> 00:49:03,920
yeah message flow

1233
00:49:03,920 --> 00:49:05,520
or

1234
00:49:05,520 --> 00:49:08,240
rely on

1235
00:49:08,319 --> 00:49:10,079
the regis

1236
00:49:10,079 --> 00:49:12,720
the domain registrar to do any further

1237
00:49:12,720 --> 00:49:13,920
completion

1238
00:49:13,920 --> 00:49:17,520
of the certificate request

1239
00:49:17,520 --> 00:49:19,680
we should also clarify whether we want

1240
00:49:19,680 --> 00:49:22,480
to stick with doing a

1241
00:49:22,480 --> 00:49:25,280
certificate confirmation within cmp

1242
00:49:25,280 --> 00:49:27,599
in a classical way or use the implicit

1243
00:49:27,599 --> 00:49:29,520
confirm

1244
00:49:29,520 --> 00:49:30,640
while

1245
00:49:30,640 --> 00:49:32,800
um i should have noticed anyway in

1246
00:49:32,800 --> 00:49:35,680
brewski in the outer protocol there will

1247
00:49:35,680 --> 00:49:38,000
be an enrollment status confirmation

1248
00:49:38,000 --> 00:49:39,839
message at the end of

1249
00:49:39,839 --> 00:49:44,599
the general brewski message exchange

1250
00:49:45,440 --> 00:49:47,599
we also need to make up our minds

1251
00:49:47,599 --> 00:49:50,240
whether we should specify the use of

1252
00:49:50,240 --> 00:49:52,559
pkcs10 format

1253
00:49:52,559 --> 00:49:54,240
within

1254
00:49:54,240 --> 00:49:57,920
cmp which could be useful for legacy

1255
00:49:57,920 --> 00:50:00,319
support

1256
00:50:00,800 --> 00:50:04,240
apart from the cmp instantiation

1257
00:50:04,240 --> 00:50:06,880
the plan was also to have

1258
00:50:06,880 --> 00:50:10,480
an est with full cmc instantiation of

1259
00:50:10,480 --> 00:50:13,440
risky ae um

1260
00:50:13,440 --> 00:50:14,880
this

1261
00:50:14,880 --> 00:50:16,640
should be provided by elliot but

1262
00:50:16,640 --> 00:50:18,400
unfortunately he hasn't had time

1263
00:50:18,400 --> 00:50:21,200
apparently to work on this so we would

1264
00:50:21,200 --> 00:50:24,160
need to see how um if we can get some

1265
00:50:24,160 --> 00:50:27,680
more details on this or i can just leave

1266
00:50:27,680 --> 00:50:31,280
the esd section as it is which in a

1267
00:50:31,280 --> 00:50:32,720
not very detailed

1268
00:50:32,720 --> 00:50:35,200
fashion

1269
00:50:37,520 --> 00:50:39,359
when i plan to do an

1270
00:50:39,359 --> 00:50:40,800
next version

1271
00:50:40,800 --> 00:50:44,559
of the dav document when these two

1272
00:50:44,559 --> 00:50:47,440
items have been completed

1273
00:50:47,440 --> 00:50:50,000
and as mentioned would be very nice to

1274
00:50:50,000 --> 00:50:51,119
get

1275
00:50:51,119 --> 00:50:53,440
some reviews and comments

1276
00:50:53,440 --> 00:50:55,359
and we are also doing

1277
00:50:55,359 --> 00:50:57,599
poc implementation

1278
00:50:57,599 --> 00:51:01,200
currently and if anyone is interested

1279
00:51:01,200 --> 00:51:03,440
to do an interoperability testing please

1280
00:51:03,440 --> 00:51:06,760
let us know

1281
00:51:08,800 --> 00:51:11,760
yeah that's basically all i would

1282
00:51:11,760 --> 00:51:13,839
like to share

1283
00:51:13,839 --> 00:51:15,040
with you

1284
00:51:15,040 --> 00:51:19,558
are there comments or questions

1285
00:51:29,200 --> 00:51:30,800
apparently not

1286
00:51:30,800 --> 00:51:33,119
thank you

1287
00:51:33,200 --> 00:51:35,200
thank you very

1288
00:51:35,200 --> 00:51:35,839
michael much

1289
00:51:35,839 --> 00:51:38,800
want to step up to the microphone again

1290
00:51:38,800 --> 00:51:40,280
yeah it's uh

1291
00:51:40,280 --> 00:51:43,280
8366 if i find

1292
00:51:43,280 --> 00:51:45,920
the slides

1293
00:51:45,920 --> 00:51:49,200
and the richardson line

1294
00:51:49,200 --> 00:51:50,480
and

1295
00:51:50,480 --> 00:51:52,960
michael i noticed that if you if you if

1296
00:51:52,960 --> 00:51:56,000
you let your phone go you have it before

1297
00:51:56,000 --> 00:51:57,440
i i have a

1298
00:51:57,440 --> 00:51:58,480
question

1299
00:51:58,480 --> 00:52:01,520
uh sorry i should ask you this earlier

1300
00:52:01,520 --> 00:52:05,359
uh what happened to the to your

1301
00:52:05,359 --> 00:52:08,720
working group after virtual dedication

1302
00:52:08,720 --> 00:52:10,720
uh it hasn't been updated that's what

1303
00:52:10,720 --> 00:52:12,559
happened

1304
00:52:12,559 --> 00:52:17,200
okay so you are not give up it yet right

1305
00:52:17,200 --> 00:52:20,960
no no it's just the relevance is

1306
00:52:20,960 --> 00:52:23,359
um

1307
00:52:23,680 --> 00:52:25,200
we can we could talk about this later

1308
00:52:25,200 --> 00:52:27,680
okay and when we at the end of the open

1309
00:52:27,680 --> 00:52:30,079
time okay if that's okay okay

1310
00:52:30,079 --> 00:52:30,960
yeah

1311
00:52:30,960 --> 00:52:33,920
that's fine because you know i just

1312
00:52:33,920 --> 00:52:36,000
noticed that missed

1313
00:52:36,000 --> 00:52:37,760
uh already

1314
00:52:37,760 --> 00:52:40,960
last december right okay go ahead

1315
00:52:40,960 --> 00:52:42,640
sorry for interrupting

1316
00:52:42,640 --> 00:52:46,400
um okay so i'm gonna talk about 83 66

1317
00:52:46,400 --> 00:52:48,800
bits which we adopted

1318
00:52:48,800 --> 00:52:51,040
um

1319
00:52:51,040 --> 00:52:53,440
what was it december i guess in the end

1320
00:52:53,440 --> 00:52:54,880
maybe it was january

1321
00:52:54,880 --> 00:52:56,559
um

1322
00:52:56,559 --> 00:52:59,440
and uh

1323
00:52:59,520 --> 00:53:02,240
what was the initial motivation for this

1324
00:53:02,240 --> 00:53:04,720
is that particularly coming from the

1325
00:53:04,720 --> 00:53:06,480
alternate enrollment

1326
00:53:06,480 --> 00:53:08,240
was that we realized that we wanted to

1327
00:53:08,240 --> 00:53:11,520
extend this yang enumerated type called

1328
00:53:11,520 --> 00:53:13,839
assertion

1329
00:53:13,839 --> 00:53:16,000
and

1330
00:53:16,000 --> 00:53:18,240
that's not possible to do that without

1331
00:53:18,240 --> 00:53:20,400
revising the yang module

1332
00:53:20,400 --> 00:53:22,000
and um

1333
00:53:22,000 --> 00:53:24,880
so this isn't was motivated by this and

1334
00:53:24,880 --> 00:53:26,640
of course we wouldn't like to repeat the

1335
00:53:26,640 --> 00:53:30,720
effort again so um what do we do

1336
00:53:30,720 --> 00:53:32,000
we basically

1337
00:53:32,000 --> 00:53:34,880
the the solution is is that we take this

1338
00:53:34,880 --> 00:53:36,800
particular item

1339
00:53:36,800 --> 00:53:39,520
uh we make put it in a sub module

1340
00:53:39,520 --> 00:53:40,960
um

1341
00:53:40,960 --> 00:53:42,800
and which we import

1342
00:53:42,800 --> 00:53:45,920
and then we arrange for ayanna to manage

1343
00:53:45,920 --> 00:53:48,319
this module and we can create a registry

1344
00:53:48,319 --> 00:53:50,880
around it and essentially what happens

1345
00:53:50,880 --> 00:53:52,559
is that

1346
00:53:52,559 --> 00:53:54,800
uh whenever someone comes along and

1347
00:53:54,800 --> 00:53:56,800
follows the ayanna

1348
00:53:56,800 --> 00:54:00,319
considerations to allocate this value

1349
00:54:00,319 --> 00:54:02,800
then the iana will in fact

1350
00:54:02,800 --> 00:54:04,880
turn around and

1351
00:54:04,880 --> 00:54:06,960
essentially edit the yang module and

1352
00:54:06,960 --> 00:54:09,359
create a new yang module a new entry a

1353
00:54:09,359 --> 00:54:10,559
new revision

1354
00:54:10,559 --> 00:54:12,640
there with the new stuff there

1355
00:54:12,640 --> 00:54:14,000
so um

1356
00:54:14,000 --> 00:54:15,599
effectively what we've done is we've

1357
00:54:15,599 --> 00:54:16,400
turned

1358
00:54:16,400 --> 00:54:19,040
the iana people into yang

1359
00:54:19,040 --> 00:54:21,440
editing robots

1360
00:54:21,440 --> 00:54:22,839
which we can remote

1361
00:54:22,839 --> 00:54:25,119
control and hopefully they won't you

1362
00:54:25,119 --> 00:54:25,920
know

1363
00:54:25,920 --> 00:54:27,440
take over the world or something like

1364
00:54:27,440 --> 00:54:28,160
that

1365
00:54:28,160 --> 00:54:29,440
um

1366
00:54:29,440 --> 00:54:30,800
so

1367
00:54:30,800 --> 00:54:33,359
my belief is that this has no effect on

1368
00:54:33,359 --> 00:54:36,160
any bits on the wire

1369
00:54:36,160 --> 00:54:37,599
that that

1370
00:54:37,599 --> 00:54:39,599
everything looks the same at the end of

1371
00:54:39,599 --> 00:54:40,559
the day

1372
00:54:40,559 --> 00:54:41,520
um

1373
00:54:41,520 --> 00:54:42,880
and

1374
00:54:42,880 --> 00:54:44,960
if you know someone was actually

1375
00:54:44,960 --> 00:54:47,359
generating code from yang modules this

1376
00:54:47,359 --> 00:54:48,720
would be useful because then they would

1377
00:54:48,720 --> 00:54:52,680
have the most up-to-date things

1378
00:54:53,040 --> 00:54:55,280
so what do we do we turned it all into

1379
00:54:55,280 --> 00:54:59,920
markdown uh since the rfc 8366 was first

1380
00:54:59,920 --> 00:55:02,720
worked on it was in a git repository but

1381
00:55:02,720 --> 00:55:04,400
that was long before martin thompson's

1382
00:55:04,400 --> 00:55:07,200
make fall existed so we've added that

1383
00:55:07,200 --> 00:55:09,440
a bunch of rules to process the yang

1384
00:55:09,440 --> 00:55:11,920
file in the make file

1385
00:55:11,920 --> 00:55:13,839
and to do all the right things and the

1386
00:55:13,839 --> 00:55:15,839
working group adopted the document

1387
00:55:15,839 --> 00:55:17,520
finally

1388
00:55:17,520 --> 00:55:19,440
so what's next so

1389
00:55:19,440 --> 00:55:23,520
um first of all we used uh

1390
00:55:23,520 --> 00:55:24,880
what's it called

1391
00:55:24,880 --> 00:55:27,520
uh the one before essex structure yang

1392
00:55:27,520 --> 00:55:29,920
data model and that's apparently not

1393
00:55:29,920 --> 00:55:32,480
sexy anymore um so

1394
00:55:32,480 --> 00:55:33,680
for me

1395
00:55:33,680 --> 00:55:35,119
oh i thought someone says that uh that's

1396
00:55:35,119 --> 00:55:37,119
not sexy anymore now we should be using

1397
00:55:37,119 --> 00:55:40,400
rfc 8791 which is this essex structure

1398
00:55:40,400 --> 00:55:41,520
stuff

1399
00:55:41,520 --> 00:55:43,359
i don't really understand the difference

1400
00:55:43,359 --> 00:55:44,799
between the two

1401
00:55:44,799 --> 00:55:45,680
um

1402
00:55:45,680 --> 00:55:49,200
i think that it's just a different way a

1403
00:55:49,200 --> 00:55:51,280
yang way of expressing things and i

1404
00:55:51,280 --> 00:55:53,119
think that it will result also in no

1405
00:55:53,119 --> 00:55:55,599
wire changes just we would now be

1406
00:55:55,599 --> 00:55:57,920
expressing our yang module in the

1407
00:55:57,920 --> 00:55:58,960
modern

1408
00:55:58,960 --> 00:56:02,480
uh 2020 onwards

1409
00:56:02,480 --> 00:56:04,079
away

1410
00:56:04,079 --> 00:56:06,880
um i would like someone else to

1411
00:56:06,880 --> 00:56:10,160
you know follow breadcrumbs through and

1412
00:56:10,160 --> 00:56:11,599
figure that out that would be really

1413
00:56:11,599 --> 00:56:13,359
good review to do

1414
00:56:13,359 --> 00:56:15,520
if you know yang or particularly if

1415
00:56:15,520 --> 00:56:18,480
you're an expert in 8791

1416
00:56:18,480 --> 00:56:22,319
so that's a change of the text

1417
00:56:22,559 --> 00:56:25,760
secondly we need to go through 8366 and

1418
00:56:25,760 --> 00:56:27,520
see if there are optional things that we

1419
00:56:27,520 --> 00:56:29,599
spoke about we wrote about

1420
00:56:29,599 --> 00:56:32,079
that either need clarification at this

1421
00:56:32,079 --> 00:56:33,760
point or

1422
00:56:33,760 --> 00:56:35,440
uh we're just dumb ideas and we should

1423
00:56:35,440 --> 00:56:36,720
just remove them

1424
00:56:36,720 --> 00:56:39,040
okay

1425
00:56:39,440 --> 00:56:42,400
the goal of this is could we publish his

1426
00:56:42,400 --> 00:56:44,400
internet standard at the end of the day

1427
00:56:44,400 --> 00:56:47,359
okay as opposed to proposed standard

1428
00:56:47,359 --> 00:56:48,480
um

1429
00:56:48,480 --> 00:56:51,200
and that's a question for our a.d rob

1430
00:56:51,200 --> 00:56:52,319
over there

1431
00:56:52,319 --> 00:56:54,000
he's not really paying attention to us

1432
00:56:54,000 --> 00:56:56,079
probably friday afternoon

1433
00:56:56,079 --> 00:56:59,920
anyway could we publish 83 66 bits as uh

1434
00:56:59,920 --> 00:57:00,720
as

1435
00:57:00,720 --> 00:57:03,200
internet standard um given that we are

1436
00:57:03,200 --> 00:57:05,359
re-expressing it in a you know several

1437
00:57:05,359 --> 00:57:07,839
different versions of of uh more modern

1438
00:57:07,839 --> 00:57:10,720
versions of yang but not i hope i think

1439
00:57:10,720 --> 00:57:12,799
changing any bits on the wire or

1440
00:57:12,799 --> 00:57:14,640
invalidating in the interoperability

1441
00:57:14,640 --> 00:57:16,240
testing that we now actually have a fair

1442
00:57:16,240 --> 00:57:19,040
bit about uh effort not just in anima

1443
00:57:19,040 --> 00:57:22,400
but also over in the net mod uh zero

1444
00:57:22,400 --> 00:57:23,200
comp

1445
00:57:23,200 --> 00:57:25,040
space

1446
00:57:25,040 --> 00:57:25,839
so

1447
00:57:25,839 --> 00:57:27,280
on that specific question i was paying

1448
00:57:27,280 --> 00:57:28,720
attention on that specific question i

1449
00:57:28,720 --> 00:57:31,040
think going to ps first for this

1450
00:57:31,040 --> 00:57:33,200
document would be better i think going

1451
00:57:33,200 --> 00:57:35,680
directly to internet standard might be

1452
00:57:35,680 --> 00:57:37,440
um questionable in terms of how much

1453
00:57:37,440 --> 00:57:39,760
stuff is changing i can have a look but

1454
00:57:39,760 --> 00:57:41,839
i think it's a question of whether the

1455
00:57:41,839 --> 00:57:44,000
changes are significant or not so i

1456
00:57:44,000 --> 00:57:45,520
think i need to review that carefully

1457
00:57:45,520 --> 00:57:47,920
but i could get back to that right so so

1458
00:57:47,920 --> 00:57:50,480
just to to restate it we're really

1459
00:57:50,480 --> 00:57:52,960
changing the yang the expression of the

1460
00:57:52,960 --> 00:57:55,200
content but not any of the content

1461
00:57:55,200 --> 00:57:56,240
itself

1462
00:57:56,240 --> 00:57:58,079
so it could be that we introduce i agree

1463
00:57:58,079 --> 00:58:00,079
with you it could be that we introduce

1464
00:58:00,079 --> 00:58:03,520
unintended bugs in the yang in how we

1465
00:58:03,520 --> 00:58:04,799
express it

1466
00:58:04,799 --> 00:58:07,760
but i think that's relatively unlikely

1467
00:58:07,760 --> 00:58:09,119
but what you're suggesting is that we

1468
00:58:09,119 --> 00:58:12,319
publish as ps and that a later isg could

1469
00:58:12,319 --> 00:58:14,400
could redesignate it you know if we

1470
00:58:14,400 --> 00:58:16,240
think we're okay that would be the safer

1471
00:58:16,240 --> 00:58:17,760
way that would be the safer easier way

1472
00:58:17,760 --> 00:58:19,599
yeah i said kentucky

1473
00:58:19,599 --> 00:58:23,480
oh yeah kent hey

1474
00:58:29,920 --> 00:58:32,799
as he finds the unmute button

1475
00:58:32,799 --> 00:58:35,200
can you hear me we can now

1476
00:58:35,200 --> 00:58:37,599
okay wonderful a difference between yang

1477
00:58:37,599 --> 00:58:40,240
data and as a structure

1478
00:58:40,240 --> 00:58:41,760
um

1479
00:58:41,760 --> 00:58:44,000
yang data does not define a protocol

1480
00:58:44,000 --> 00:58:45,520
accessible node

1481
00:58:45,520 --> 00:58:48,240
the simplest way to make an analogy is

1482
00:58:48,240 --> 00:58:50,240
yang data is like a grouping whereas

1483
00:58:50,240 --> 00:58:52,720
asset structure is like a container

1484
00:58:52,720 --> 00:58:54,799
okay

1485
00:58:54,799 --> 00:58:57,440
okay and and will it change any of the

1486
00:58:57,440 --> 00:58:58,720
content

1487
00:58:58,720 --> 00:59:01,200
in the end

1488
00:59:01,520 --> 00:59:05,359
the serialized json for instance uh the

1489
00:59:05,359 --> 00:59:07,200
well the all the inner nodes of course

1490
00:59:07,200 --> 00:59:10,079
are are rendered the same it's just the

1491
00:59:10,079 --> 00:59:13,200
the outermost envelope container or you

1492
00:59:13,200 --> 00:59:15,760
know that outermost node doesn't exist

1493
00:59:15,760 --> 00:59:16,720
in

1494
00:59:16,720 --> 00:59:18,799
yang data but it does exist in essence

1495
00:59:18,799 --> 00:59:20,000
structure

1496
00:59:20,000 --> 00:59:20,880
so

1497
00:59:20,880 --> 00:59:23,359
uh where you know what it wherever yang

1498
00:59:23,359 --> 00:59:25,359
data was instantiated before it was

1499
00:59:25,359 --> 00:59:28,240
probably wrapped by some sort of

1500
00:59:28,240 --> 00:59:30,559
container or envelope

1501
00:59:30,559 --> 00:59:31,280
and

1502
00:59:31,280 --> 00:59:33,760
the name of that envelope now needs to

1503
00:59:33,760 --> 00:59:36,880
be the name of the essa structure and

1504
00:59:36,880 --> 00:59:39,920
then you'll have the equivalent

1505
00:59:39,920 --> 00:59:42,400
okay so if we can accomplish that then

1506
00:59:42,400 --> 00:59:44,480
we will accomplish no bits in the wire

1507
00:59:44,480 --> 00:59:46,960
change then

1508
00:59:46,960 --> 00:59:47,760
yeah

1509
00:59:47,760 --> 00:59:49,200
and what do you think about going to

1510
00:59:49,200 --> 00:59:50,720
internet standard

1511
00:59:50,720 --> 00:59:53,200
do you think that the the experience on

1512
00:59:53,200 --> 00:59:57,040
over in that net uh comp it uh

1513
00:59:57,040 --> 00:59:58,079
is uh

1514
00:59:58,079 --> 01:00:00,510
mature enough to say to justify that

1515
01:00:00,510 --> 01:00:02,160
[Laughter]

1516
01:00:02,160 --> 01:00:04,079
i don't want to swim outside my lane but

1517
01:00:04,079 --> 01:00:06,319
i've never heard of a draft like this to

1518
01:00:06,319 --> 01:00:08,240
going to internet standards so quickly

1519
01:00:08,240 --> 01:00:09,680
so okay

1520
01:00:09,680 --> 01:00:11,680
all right so so you think we should just

1521
01:00:11,680 --> 01:00:13,599
we should do it ps and maybe we'll get

1522
01:00:13,599 --> 01:00:15,920
to we'll get it blessed later on

1523
01:00:15,920 --> 01:00:17,359
yeah i think the the interesting

1524
01:00:17,359 --> 01:00:19,440
question will be what uh

1525
01:00:19,440 --> 01:00:21,839
the the ietf thinks about

1526
01:00:21,839 --> 01:00:23,680
the standard level not with respect to

1527
01:00:23,680 --> 01:00:25,760
how stuff works interoperable on the

1528
01:00:25,760 --> 01:00:28,000
wire but also interpretable on the

1529
01:00:28,000 --> 01:00:30,240
tooling side right because you're using

1530
01:00:30,240 --> 01:00:32,880
using it completely because i guess that

1531
01:00:32,880 --> 01:00:34,160
new new stuff you don't even have the

1532
01:00:34,160 --> 01:00:35,680
tool chains which is why you want to

1533
01:00:35,680 --> 01:00:38,160
have some more manual review as opposed

1534
01:00:38,160 --> 01:00:39,839
to simply checking it in the tool chain

1535
01:00:39,839 --> 01:00:41,359
well we don't have code generators that

1536
01:00:41,359 --> 01:00:43,119
are going to actually process it but we

1537
01:00:43,119 --> 01:00:44,079
do have

1538
01:00:44,079 --> 01:00:46,079
have have uh

1539
01:00:46,079 --> 01:00:47,839
we do know how the serialization works

1540
01:00:47,839 --> 01:00:49,680
and all that other stuff so that that's

1541
01:00:49,680 --> 01:00:51,280
i think okay

1542
01:00:51,280 --> 01:00:52,880
um so i have a second question or the

1543
01:00:52,880 --> 01:00:55,359
third question actually um so

1544
01:00:55,359 --> 01:00:58,000
one of the things that we are doing in

1545
01:00:58,000 --> 01:00:59,040
um

1546
01:00:59,040 --> 01:01:01,200
well so jws voucher is one of the unique

1547
01:01:01,200 --> 01:01:04,799
documents that doesn't extend 8366 at

1548
01:01:04,799 --> 01:01:05,520
all

1549
01:01:05,520 --> 01:01:08,400
um constrained voucher extends it

1550
01:01:08,400 --> 01:01:11,400
um

1551
01:01:12,960 --> 01:01:14,400
there's another document that extends it

1552
01:01:14,400 --> 01:01:15,920
now i can't remember what it is there's

1553
01:01:15,920 --> 01:01:18,799
two or three documents that have taken

1554
01:01:18,799 --> 01:01:22,960
uh 8366 and extended it often in in

1555
01:01:22,960 --> 01:01:24,720
orthogonal directions and you should

1556
01:01:24,720 --> 01:01:25,760
actually be able to combine the

1557
01:01:25,760 --> 01:01:27,839
extensions at the same time i don't know

1558
01:01:27,839 --> 01:01:29,280
how to express that

1559
01:01:29,280 --> 01:01:32,400
so the question is those documents now

1560
01:01:32,400 --> 01:01:35,440
they're still extending 8366

1561
01:01:35,440 --> 01:01:36,880
and

1562
01:01:36,880 --> 01:01:39,400
the sir the question is well should an

1563
01:01:39,400 --> 01:01:43,680
8366 bis should it go and now reach in

1564
01:01:43,680 --> 01:01:44,640
and

1565
01:01:44,640 --> 01:01:47,520
uh take those extensions and include it

1566
01:01:47,520 --> 01:01:50,559
into the 83 66 bit document

1567
01:01:50,559 --> 01:01:51,680
as

1568
01:01:51,680 --> 01:01:53,040
you know additional sections or

1569
01:01:53,040 --> 01:01:54,799
something like that to make it a little

1570
01:01:54,799 --> 01:01:56,240
more you know

1571
01:01:56,240 --> 01:01:58,079
inclusive or

1572
01:01:58,079 --> 01:01:59,520
should it just continue on and do what

1573
01:01:59,520 --> 01:02:01,520
it does and be only what it is and have

1574
01:02:01,520 --> 01:02:03,839
extensions that happen there the

1575
01:02:03,839 --> 01:02:05,680
extensions happen with the grouping that

1576
01:02:05,680 --> 01:02:07,359
we created

1577
01:02:07,359 --> 01:02:08,880
i don't know the answer to that question

1578
01:02:08,880 --> 01:02:10,160
in particular

1579
01:02:10,160 --> 01:02:12,079
um i don't know how to tell someone to

1580
01:02:12,079 --> 01:02:14,319
use 8366 plus

1581
01:02:14,319 --> 01:02:16,079
whatever constrained voucher comes up

1582
01:02:16,079 --> 01:02:18,960
with plus say whatever delegated voucher

1583
01:02:18,960 --> 01:02:20,559
comes up with because those are

1584
01:02:20,559 --> 01:02:22,160
orthogonal extensions you should be able

1585
01:02:22,160 --> 01:02:23,920
to combine them

1586
01:02:23,920 --> 01:02:25,440
but i'm going to say i'm going to tell

1587
01:02:25,440 --> 01:02:28,480
you here's three rfcs to implement

1588
01:02:28,480 --> 01:02:29,440
and

1589
01:02:29,440 --> 01:02:31,359
i don't know how to mix that yang if i

1590
01:02:31,359 --> 01:02:32,960
was doing a code generator i wouldn't

1591
01:02:32,960 --> 01:02:36,000
know how to to put that yang together um

1592
01:02:36,000 --> 01:02:37,280
i don't know if that matters i don't

1593
01:02:37,280 --> 01:02:39,599
know if it even like it may be just

1594
01:02:39,599 --> 01:02:41,760
perfectly fine for someone to say here's

1595
01:02:41,760 --> 01:02:44,319
three rfcs mix them all together you

1596
01:02:44,319 --> 01:02:47,280
won't have any problem and that's it

1597
01:02:47,280 --> 01:02:49,920
i think process wise will will stay i

1598
01:02:49,920 --> 01:02:51,680
mean the smart money is on keeping it

1599
01:02:51,680 --> 01:02:53,760
separate if i were thinking about you

1600
01:02:53,760 --> 01:02:54,559
know

1601
01:02:54,559 --> 01:02:56,240
trying to write a document that has all

1602
01:02:56,240 --> 01:02:58,799
the ipv6 extension headers together

1603
01:02:58,799 --> 01:03:00,480
and then you know things were retired

1604
01:03:00,480 --> 01:03:03,119
later on what you do right so that would

1605
01:03:03,119 --> 01:03:04,240
affect the

1606
01:03:04,240 --> 01:03:06,240
everything together so by keeping things

1607
01:03:06,240 --> 01:03:08,079
in separate documents it also means that

1608
01:03:08,079 --> 01:03:10,480
we can change their status accordingly

1609
01:03:10,480 --> 01:03:12,640
over time absolutely so so that's that's

1610
01:03:12,640 --> 01:03:14,319
the point so i was trying to get the

1611
01:03:14,319 --> 01:03:15,680
status but then there's also the

1612
01:03:15,680 --> 01:03:17,440
technical side but you know what you

1613
01:03:17,440 --> 01:03:19,200
know we do sometimes come along like

1614
01:03:19,200 --> 01:03:22,640
like dhcp uh uh v6 bis

1615
01:03:22,640 --> 01:03:25,440
right 8415 we actually pulled all the

1616
01:03:25,440 --> 01:03:27,440
extensions into one document and and it

1617
01:03:27,440 --> 01:03:29,440
made sense to do that at the time right

1618
01:03:29,440 --> 01:03:30,799
now i'm just sort of asking well does

1619
01:03:30,799 --> 01:03:33,599
that make any sense

1620
01:03:33,599 --> 01:03:35,680
uh robleton

1621
01:03:35,680 --> 01:03:36,960
is kent still in the queue i don't know

1622
01:03:36,960 --> 01:03:39,440
but i'll i'll jump in anyway just one

1623
01:03:39,440 --> 01:03:41,039
observation you also got the wonderful

1624
01:03:41,039 --> 01:03:44,720
updates tag that is very vaguely defined

1625
01:03:44,720 --> 01:03:46,480
so you could also update the other two

1626
01:03:46,480 --> 01:03:48,400
extensions if there's anything required

1627
01:03:48,400 --> 01:03:49,920
to explain how they worked with the

1628
01:03:49,920 --> 01:03:52,000
updated version of

1629
01:03:52,000 --> 01:03:55,680
8366. 8366 bis could update these other

1630
01:03:55,680 --> 01:03:58,400
extensions yeah yes documents just just

1631
01:03:58,400 --> 01:04:00,559
to flag them okay that's a good point

1632
01:04:00,559 --> 01:04:02,240
and i think the timing will be such that

1633
01:04:02,240 --> 01:04:04,160
they'll actually be published

1634
01:04:04,160 --> 01:04:05,839
beforehand anyway

1635
01:04:05,839 --> 01:04:08,720
or maybe at the same time but anyway

1636
01:04:08,720 --> 01:04:10,720
okay thank you that's all i have anyone

1637
01:04:10,720 --> 01:04:12,640
else have any questions some people

1638
01:04:12,640 --> 01:04:14,480
that's uh you guys are still in the

1639
01:04:14,480 --> 01:04:16,079
queue kent did you have another thing to

1640
01:04:16,079 --> 01:04:17,200
say

1641
01:04:17,200 --> 01:04:18,319
yes

1642
01:04:18,319 --> 01:04:21,839
regarding pulling things into 83 66

1643
01:04:21,839 --> 01:04:24,720
another consideration is that

1644
01:04:24,720 --> 01:04:29,119
i would imagine the biz would obsolete

1645
01:04:29,119 --> 01:04:30,960
the 8366

1646
01:04:30,960 --> 01:04:32,960
right um that's the typical thing that's

1647
01:04:32,960 --> 01:04:33,760
done

1648
01:04:33,760 --> 01:04:37,760
uh yet we have 8572 scpp which depends

1649
01:04:37,760 --> 01:04:41,039
on 836 and would not

1650
01:04:41,039 --> 01:04:42,480
be able to

1651
01:04:42,480 --> 01:04:44,559
uh incorporate whatever orthogonal

1652
01:04:44,559 --> 01:04:46,400
extensions you're referring to

1653
01:04:46,400 --> 01:04:48,720
yeah so that could cause problems for

1654
01:04:48,720 --> 01:04:50,960
85.72

1655
01:04:50,960 --> 01:04:53,039
if that were to happen

1656
01:04:53,039 --> 01:04:55,359
if it were to be obsoleted

1657
01:04:55,359 --> 01:04:58,319
if yes well if suddenly there were yeah

1658
01:04:58,319 --> 01:05:01,119
suddenly there was a new rfc that that

1659
01:05:01,119 --> 01:05:05,119
uh replaced 83 c6 and included um

1660
01:05:05,119 --> 01:05:07,559
these orthogonal extensions that

1661
01:05:07,559 --> 01:05:11,119
8572 could not take advantage of

1662
01:05:11,119 --> 01:05:13,599
that implementations of 8572 might be

1663
01:05:13,599 --> 01:05:14,640
left in a

1664
01:05:14,640 --> 01:05:16,880
situation that be difficult for them

1665
01:05:16,880 --> 01:05:17,920
so so

1666
01:05:17,920 --> 01:05:19,760
not including extensions would make it

1667
01:05:19,760 --> 01:05:21,359
easier for other

1668
01:05:21,359 --> 01:05:22,960
other things that are depending on it i

1669
01:05:22,960 --> 01:05:24,400
hear what you're saying i agree with you

1670
01:05:24,400 --> 01:05:25,359
completely

1671
01:05:25,359 --> 01:05:28,160
so that that completely completely uh

1672
01:05:28,160 --> 01:05:30,240
you know settles for me any decision

1673
01:05:30,240 --> 01:05:31,680
about whether we would incorporate

1674
01:05:31,680 --> 01:05:33,440
anything else

1675
01:05:33,440 --> 01:05:35,839
uh yeah i mean maybe it's also status

1676
01:05:35,839 --> 01:05:37,920
check right i don't think we've always

1677
01:05:37,920 --> 01:05:40,720
obsolated the prior version right is tls

1678
01:05:40,720 --> 01:05:43,920
1.2 obsolete

1679
01:05:43,920 --> 01:05:45,680
i think that's a separate different kind

1680
01:05:45,680 --> 01:05:47,839
of conversation i think you should ask

1681
01:05:47,839 --> 01:05:51,599
is 85 is rfc 822 obsolete

1682
01:05:51,599 --> 01:05:54,240
it's been replaced twice

1683
01:05:54,240 --> 01:05:56,000
right but if we don't obsolete eight

1684
01:05:56,000 --> 01:05:58,240
three six six but we just you know

1685
01:05:58,240 --> 01:06:01,039
supersede seeded it's kind of maybe less

1686
01:06:01,039 --> 01:06:02,960
of a problem for the the existing

1687
01:06:02,960 --> 01:06:06,079
documents like 8572

1688
01:06:06,079 --> 01:06:07,839
just you know playing correctly with the

1689
01:06:07,839 --> 01:06:09,520
status no no i think it's okay if we

1690
01:06:09,520 --> 01:06:11,280
obsolete it because the document because

1691
01:06:11,280 --> 01:06:13,599
the new document has the same content

1692
01:06:13,599 --> 01:06:16,640
and so it's perfectly fine for the

1693
01:06:16,640 --> 01:06:18,480
the other documents to just say oh well

1694
01:06:18,480 --> 01:06:20,319
we're just moving up to the new new one

1695
01:06:20,319 --> 01:06:22,000
and that's fine i think that's as long

1696
01:06:22,000 --> 01:06:24,480
as the content is the same right

1697
01:06:24,480 --> 01:06:26,960
that's what that's what kent's point was

1698
01:06:26,960 --> 01:06:28,000
that

1699
01:06:28,000 --> 01:06:30,240
otherwise you'd have to say new document

1700
01:06:30,240 --> 01:06:32,240
minus this other stuff right and then

1701
01:06:32,240 --> 01:06:34,319
it's i think too complicated

1702
01:06:34,319 --> 01:06:36,799
carson

1703
01:06:38,880 --> 01:06:42,640
well to ask to answer the question

1704
01:06:42,640 --> 01:06:46,720
tls 1.3 does absolute tls 1.2

1705
01:06:46,720 --> 01:06:48,799
thank you two all right

1706
01:06:48,799 --> 01:06:50,400
thanks for looking

1707
01:06:50,400 --> 01:06:53,039
anybody else

1708
01:06:56,160 --> 01:06:57,920
i wield my

1709
01:06:57,920 --> 01:07:00,240
i'm trying to get the next slide deck

1710
01:07:00,240 --> 01:07:02,400
but

1711
01:07:02,400 --> 01:07:05,760
i'm not sure what you're doing there

1712
01:07:06,079 --> 01:07:07,839
well there's brewski cloud coming up

1713
01:07:07,839 --> 01:07:10,160
next

1714
01:07:10,319 --> 01:07:12,720
i guess so unless you want to designate

1715
01:07:12,720 --> 01:07:15,839
somebody else

1716
01:07:22,640 --> 01:07:24,319
oh

1717
01:07:24,319 --> 01:07:26,480
all right

1718
01:07:26,480 --> 01:07:28,880
i did look at the slides just earlier

1719
01:07:28,880 --> 01:07:30,160
because i thought it was you that was

1720
01:07:30,160 --> 01:07:31,760
going to be doing them

1721
01:07:31,760 --> 01:07:33,520
um

1722
01:07:33,520 --> 01:07:34,720
so

1723
01:07:34,720 --> 01:07:36,640
um

1724
01:07:36,640 --> 01:07:38,559
i think we did publish a new version

1725
01:07:38,559 --> 01:07:40,839
since the last version

1726
01:07:40,839 --> 01:07:42,640
um

1727
01:07:42,640 --> 01:07:44,799
so just to remind you there's a section

1728
01:07:44,799 --> 01:07:47,359
in brewski that says that devices may

1729
01:07:47,359 --> 01:07:49,200
want to talk to the cloud directly

1730
01:07:49,200 --> 01:07:51,760
instead of talking to a local registrar

1731
01:07:51,760 --> 01:07:53,520
and is intentionally

1732
01:07:53,520 --> 01:07:55,280
potentially does not specify that and

1733
01:07:55,280 --> 01:07:57,119
this document does

1734
01:07:57,119 --> 01:07:58,400
um so

1735
01:07:58,400 --> 01:08:00,240
we started with a bunch of different use

1736
01:08:00,240 --> 01:08:03,039
cases i think four of them

1737
01:08:03,039 --> 01:08:06,079
uh we got rid of a couple of them

1738
01:08:06,079 --> 01:08:09,440
and essentially there's two use cases

1739
01:08:09,440 --> 01:08:11,200
one is that

1740
01:08:11,200 --> 01:08:14,079
there's no local mechanism to find the

1741
01:08:14,079 --> 01:08:15,440
registrar

1742
01:08:15,440 --> 01:08:17,198
such as perhaps you are deploying a

1743
01:08:17,198 --> 01:08:20,158
device such as maybe a sip phone

1744
01:08:20,158 --> 01:08:22,080
um at someone's home but it needs to

1745
01:08:22,080 --> 01:08:24,640
talk to the registrar which is at the

1746
01:08:24,640 --> 01:08:27,040
office headquarters and the cloud could

1747
01:08:27,040 --> 01:08:28,960
redirect it and it's literally done with

1748
01:08:28,960 --> 01:08:31,040
an http redirect and we had a

1749
01:08:31,040 --> 01:08:32,960
conversation about which one and the

1750
01:08:32,960 --> 01:08:34,960
document says that

1751
01:08:34,960 --> 01:08:36,640
and then

1752
01:08:36,640 --> 01:08:38,238
that was the what was the first one so

1753
01:08:38,238 --> 01:08:41,439
there's your 300 307 thing

1754
01:08:41,439 --> 01:08:43,679
um and then the other case

1755
01:08:43,679 --> 01:08:47,600
um is that the registrar

1756
01:08:47,600 --> 01:08:49,600
does not speak brewski but does speak

1757
01:08:49,600 --> 01:08:51,679
est

1758
01:08:51,679 --> 01:08:53,600
in which case the cloud will return a

1759
01:08:53,600 --> 01:08:56,799
voucher that points it directly to

1760
01:08:56,799 --> 01:09:00,080
the uh correct uh and pins the correct

1761
01:09:00,080 --> 01:09:02,080
registrar this is one of the places

1762
01:09:02,080 --> 01:09:05,198
where we have an extension to 8366 now i

1763
01:09:05,198 --> 01:09:07,520
remember that's orthogonal so that's a

1764
01:09:07,520 --> 01:09:10,560
separate use case in that case the cloud

1765
01:09:10,560 --> 01:09:12,880
acts as a

1766
01:09:12,880 --> 01:09:15,920
partial registrar but it pins this this

1767
01:09:15,920 --> 01:09:18,479
other device and then you go to that

1768
01:09:18,479 --> 01:09:19,279
place

1769
01:09:19,279 --> 01:09:21,120
and just do est

1770
01:09:21,120 --> 01:09:22,158
with that

1771
01:09:22,158 --> 01:09:24,319
so the document explains that part as

1772
01:09:24,319 --> 01:09:25,439
well

1773
01:09:25,439 --> 01:09:27,120
um

1774
01:09:27,120 --> 01:09:29,839
we went through security considerations

1775
01:09:29,839 --> 01:09:32,000
before the last itf

1776
01:09:32,000 --> 01:09:34,719
um and uh

1777
01:09:34,719 --> 01:09:36,799
i think they were reasonably well

1778
01:09:36,799 --> 01:09:39,839
accepted uh but we're really ready for

1779
01:09:39,839 --> 01:09:42,158
uh working group last call and you know

1780
01:09:42,158 --> 01:09:44,719
reviews uh sector review

1781
01:09:44,719 --> 01:09:45,920
um

1782
01:09:45,920 --> 01:09:48,799
would be great um and uh

1783
01:09:48,799 --> 01:09:52,640
maybe even some review from http people

1784
01:09:52,640 --> 01:09:54,080
or something like that they could tell

1785
01:09:54,080 --> 01:09:57,600
us if we got 307 right i think that's it

1786
01:09:57,600 --> 01:10:00,640
yeah that's the last slide

1787
01:10:01,120 --> 01:10:03,840
any questions

1788
01:10:05,760 --> 01:10:06,640
no

1789
01:10:06,640 --> 01:10:08,080
okay

1790
01:10:08,080 --> 01:10:09,040
great

1791
01:10:09,040 --> 01:10:12,280
thank you

1792
01:10:17,679 --> 01:10:19,600
right so i think uh like we did with the

1793
01:10:19,600 --> 01:10:21,760
last document uh

1794
01:10:21,760 --> 01:10:23,360
you you probably have the best starting

1795
01:10:23,360 --> 01:10:25,520
suggestion for the sector review so work

1796
01:10:25,520 --> 01:10:26,480
with me

1797
01:10:26,480 --> 01:10:29,840
i'll i'll get those

1798
01:10:29,840 --> 01:10:31,760
[Laughter]

1799
01:10:31,760 --> 01:10:33,520
no no last time you you had some good

1800
01:10:33,520 --> 01:10:35,280
suggestion who the

1801
01:10:35,280 --> 01:10:38,320
favorite reviewers would be so

1802
01:10:38,320 --> 01:10:39,920
please provide me the input so that we

1803
01:10:39,920 --> 01:10:41,920
get the best possible

1804
01:10:41,920 --> 01:10:42,840
review

1805
01:10:42,840 --> 01:10:44,640
done

1806
01:10:44,640 --> 01:10:46,880
okay

1807
01:10:48,159 --> 01:10:50,400
using you're next with the autonomic

1808
01:10:50,400 --> 01:10:52,480
mechanism for resource-based network

1809
01:10:52,480 --> 01:10:55,679
services auto deployment

1810
01:10:55,679 --> 01:10:58,719
can you hear me

1811
01:10:58,719 --> 01:11:00,239
uh

1812
01:11:00,239 --> 01:11:03,040
is my shamash

1813
01:11:03,040 --> 01:11:05,760
namaste

1814
01:11:05,920 --> 01:11:08,159
yep

1815
01:11:10,000 --> 01:11:12,480
you're a little bit loud so if you uh

1816
01:11:12,480 --> 01:11:14,000
tone down your level a little bit i

1817
01:11:14,000 --> 01:11:15,920
think that would be good

1818
01:11:15,920 --> 01:11:20,360
uh oh oh sorry sorry

1819
01:11:26,719 --> 01:11:27,840
oh

1820
01:11:27,840 --> 01:11:30,480
okay

1821
01:11:31,199 --> 01:11:32,880
sorry

1822
01:11:32,880 --> 01:11:35,679
it's okay now

1823
01:11:35,679 --> 01:11:37,600
yeah it's it's still on the high end

1824
01:11:37,600 --> 01:11:40,239
level but we'll survive

1825
01:11:40,239 --> 01:11:41,760
uh okay

1826
01:11:41,760 --> 01:11:44,800
kyle hear me today

1827
01:11:45,360 --> 01:11:47,120
it's it's it's just very loud so maybe

1828
01:11:47,120 --> 01:11:48,480
uh if you can

1829
01:11:48,480 --> 01:11:49,920
i'm not sure what type of microphone you

1830
01:11:49,920 --> 01:11:51,440
have just a little bit further away

1831
01:11:51,440 --> 01:11:52,800
maybe

1832
01:11:52,800 --> 01:11:55,280
oh sorry sorry

1833
01:11:55,280 --> 01:11:57,280
no worries

1834
01:11:57,280 --> 01:11:58,640
okay okay

1835
01:11:58,640 --> 01:12:00,560
uh let's start

1836
01:12:00,560 --> 01:12:04,239
uh let's start and uh this soap is about

1837
01:12:04,239 --> 01:12:05,120
uh

1838
01:12:05,120 --> 01:12:07,520
auto deployment mechanism for

1839
01:12:07,520 --> 01:12:10,640
resource-based network

1840
01:12:10,640 --> 01:12:12,239
okay

1841
01:12:12,239 --> 01:12:14,960
all right first i will have a review

1842
01:12:14,960 --> 01:12:19,360
about our draft and the portal of this

1843
01:12:19,360 --> 01:12:21,920
draft is one two to

1844
01:12:21,920 --> 01:12:24,480
establish a site of autonomic

1845
01:12:24,480 --> 01:12:26,239
negotiation my

1846
01:12:26,239 --> 01:12:29,120
mechanism to achieve the negotiation and

1847
01:12:29,120 --> 01:12:32,000
the distribution of the network results

1848
01:12:32,000 --> 01:12:34,560
in the domain network

1849
01:12:34,560 --> 01:12:37,360
and that means it's a real negotiation

1850
01:12:37,360 --> 01:12:41,679
with a service plant and decide how many

1851
01:12:41,679 --> 01:12:44,159
how much resource service you can use in

1852
01:12:44,159 --> 01:12:44,960
the

1853
01:12:44,960 --> 01:12:46,159
uh

1854
01:12:46,159 --> 01:12:48,480
domain network and

1855
01:12:48,480 --> 01:12:51,920
we think the draft can slow the

1856
01:12:51,920 --> 01:12:52,880
the

1857
01:12:52,880 --> 01:12:56,560
target of the draft so first is we want

1858
01:12:56,560 --> 01:12:58,480
to the

1859
01:12:58,480 --> 01:13:01,199
resource-based network

1860
01:13:01,199 --> 01:13:04,800
can get the resource autonomy and

1861
01:13:04,800 --> 01:13:07,520
satisfies the truth requirements of the

1862
01:13:07,520 --> 01:13:08,640
service

1863
01:13:08,640 --> 01:13:09,600
and the

1864
01:13:09,600 --> 01:13:14,400
next second is the mechanism of the

1865
01:13:14,400 --> 01:13:17,840
supporting multiple runs of the

1866
01:13:17,840 --> 01:13:19,040
thus

1867
01:13:19,040 --> 01:13:21,600
enables the service plan to change the

1868
01:13:21,600 --> 01:13:24,320
resource requirement according to the

1869
01:13:24,320 --> 01:13:28,159
state of the network for example if

1870
01:13:28,159 --> 01:13:30,000
if the network is

1871
01:13:30,000 --> 01:13:33,199
contested under the service can reduce

1872
01:13:33,199 --> 01:13:35,360
the quality of the

1873
01:13:35,360 --> 01:13:39,040
results and the third uh the mechanism

1874
01:13:39,040 --> 01:13:40,880
can ensure that

1875
01:13:40,880 --> 01:13:43,600
results in the domain network can be

1876
01:13:43,600 --> 01:13:45,560
used more if

1877
01:13:45,560 --> 01:13:49,360
initially we think that a smart network

1878
01:13:49,360 --> 01:13:51,520
should provide a different

1879
01:13:51,520 --> 01:13:53,120
level of

1880
01:13:53,120 --> 01:13:56,320
different levels of network results for

1881
01:13:56,320 --> 01:13:59,360
different level of the service and this

1882
01:13:59,360 --> 01:14:02,080
is our goal of the draft

1883
01:14:02,080 --> 01:14:04,960
and this is a major change from the

1884
01:14:04,960 --> 01:14:07,440
woman to seasons and

1885
01:14:07,440 --> 01:14:10,560
in this slope i want to discuss an

1886
01:14:10,560 --> 01:14:13,440
example with parameters and

1887
01:14:13,440 --> 01:14:15,600
we think this may

1888
01:14:15,600 --> 01:14:17,520
make our dresser

1889
01:14:17,520 --> 01:14:22,239
more easy to become a relaxed

1890
01:14:22,320 --> 01:14:25,520
and this is this page is about the auto

1891
01:14:25,520 --> 01:14:27,040
deployment

1892
01:14:27,040 --> 01:14:29,920
process and the way includes three

1893
01:14:29,920 --> 01:14:32,560
precise discovery stage and the

1894
01:14:32,560 --> 01:14:35,440
negotiation

1895
01:14:35,440 --> 01:14:38,440
under something the asa will do after

1896
01:14:38,440 --> 01:14:40,719
negotiation and

1897
01:14:40,719 --> 01:14:44,320
and in the discovery part and within the

1898
01:14:44,320 --> 01:14:47,679
resource manager as in the discovery

1899
01:14:47,679 --> 01:14:48,960
method to

1900
01:14:48,960 --> 01:14:50,880
find the service uh

1901
01:14:50,880 --> 01:14:53,520
providing resource manager asa and the

1902
01:14:53,520 --> 01:14:56,159
when the request results mandates i want

1903
01:14:56,159 --> 01:14:57,600
to

1904
01:14:57,600 --> 01:14:58,719
write

1905
01:14:58,719 --> 01:15:01,760
results they will send a message to

1906
01:15:01,760 --> 01:15:04,640
providing resource manager asap

1907
01:15:04,640 --> 01:15:08,960
and in the negotiation part state and

1908
01:15:08,960 --> 01:15:12,960
this uh this mechanism allowed multiple

1909
01:15:12,960 --> 01:15:17,600
runs of negotiation and uh so two

1910
01:15:17,600 --> 01:15:20,400
asa will decide uh

1911
01:15:20,400 --> 01:15:22,000
decides uh

1912
01:15:22,000 --> 01:15:25,440
how many how much resources are respect

1913
01:15:25,440 --> 01:15:27,360
and the third requesting resource

1914
01:15:27,360 --> 01:15:30,560
measure asa will decide

1915
01:15:30,560 --> 01:15:33,199
at each round how much the results need

1916
01:15:33,199 --> 01:15:35,120
to offer and the providing resource

1917
01:15:35,120 --> 01:15:38,239
management will respond a lot to the

1918
01:15:38,239 --> 01:15:40,960
results they can offer under that means

1919
01:15:40,960 --> 01:15:44,159
so providing resource manager asa will

1920
01:15:44,159 --> 01:15:45,840
consider the

1921
01:15:45,840 --> 01:15:48,719
network state under the

1922
01:15:48,719 --> 01:15:51,199
service information and

1923
01:15:51,199 --> 01:15:54,560
decide how much resource can offer and

1924
01:15:54,560 --> 01:15:55,600
after

1925
01:15:55,600 --> 01:15:59,120
negotiation the two asa guides the

1926
01:15:59,120 --> 01:16:00,560
result and

1927
01:16:00,560 --> 01:16:03,199
the providing results microasyl will

1928
01:16:03,199 --> 01:16:06,560
remove the iterable results from the

1929
01:16:06,560 --> 01:16:09,440
resource part and we should emphasize

1930
01:16:09,440 --> 01:16:10,239
that

1931
01:16:10,239 --> 01:16:12,920
this graph is about

1932
01:16:12,920 --> 01:16:16,159
negotiation how much resources

1933
01:16:16,159 --> 01:16:16,960
uh

1934
01:16:16,960 --> 01:16:20,159
resources can offer to the servers and

1935
01:16:20,159 --> 01:16:22,400
it now to

1936
01:16:22,400 --> 01:16:24,400
release the

1937
01:16:24,400 --> 01:16:27,759
results hold by hope

1938
01:16:28,880 --> 01:16:30,000
this is

1939
01:16:30,000 --> 01:16:33,280
the objective password objective we

1940
01:16:33,280 --> 01:16:36,560
decide we define the draft and

1941
01:16:36,560 --> 01:16:39,600
i think the most important thing is

1942
01:16:39,600 --> 01:16:40,560
about

1943
01:16:40,560 --> 01:16:43,600
the objective value and

1944
01:16:43,600 --> 01:16:46,239
nowadays we did we think they are

1945
01:16:46,239 --> 01:16:50,080
include two part so one is about service

1946
01:16:50,080 --> 01:16:53,280
service information and another is about

1947
01:16:53,280 --> 01:16:55,520
the resource information

1948
01:16:55,520 --> 01:16:58,320
so service information within

1949
01:16:58,320 --> 01:17:03,679
uh the asa can uses to communicate

1950
01:17:03,679 --> 01:17:06,960
who ask the results and the service

1951
01:17:06,960 --> 01:17:08,960
level uh

1952
01:17:08,960 --> 01:17:11,600
under the as far as the resource

1953
01:17:11,600 --> 01:17:13,760
information is about

1954
01:17:13,760 --> 01:17:16,640
how much resource they should

1955
01:17:16,640 --> 01:17:18,239
offer and um

1956
01:17:18,239 --> 01:17:20,880
i think they and this objective is

1957
01:17:20,880 --> 01:17:24,800
naughty in jason and i think this is

1958
01:17:24,800 --> 01:17:28,159
uh is easy to understand but i think

1959
01:17:28,159 --> 01:17:29,679
this objective

1960
01:17:29,679 --> 01:17:30,370
maybe

1961
01:17:30,370 --> 01:17:31,520
[Music]

1962
01:17:31,520 --> 01:17:34,719
maybe need to be discussed more and i

1963
01:17:34,719 --> 01:17:38,640
think i will start a mail to discuss

1964
01:17:38,640 --> 01:17:39,520
this

1965
01:17:39,520 --> 01:17:42,960
question and i think this is a

1966
01:17:42,960 --> 01:17:47,120
important thing we will do the next step

1967
01:17:47,120 --> 01:17:51,120
this is an example about

1968
01:17:51,360 --> 01:17:55,280
about how to use this negotiate and

1969
01:17:55,280 --> 01:17:57,440
grasp all data and

1970
01:17:57,440 --> 01:18:00,320
we added some parameters

1971
01:18:00,320 --> 01:18:01,360
and the

1972
01:18:01,360 --> 01:18:04,159
in this page we see that

1973
01:18:04,159 --> 01:18:05,440
the

1974
01:18:05,440 --> 01:18:07,360
server initial

1975
01:18:07,360 --> 01:18:10,880
pay a row of request

1976
01:18:10,880 --> 01:18:14,800
resource manager asa and she will answer

1977
01:18:14,800 --> 01:18:18,080
results to the providing resources and

1978
01:18:18,080 --> 01:18:20,800
this this is a

1979
01:18:20,800 --> 01:18:23,679
negotiation message and i was the first

1980
01:18:23,679 --> 01:18:25,280
one so

1981
01:18:25,280 --> 01:18:27,600
as i will ask the

1982
01:18:27,600 --> 01:18:28,640
10

1983
01:18:28,640 --> 01:18:31,600
10 megabit bits per

1984
01:18:31,600 --> 01:18:36,400
second on the bandwidth so the x turns

1985
01:18:36,400 --> 01:18:39,840
0 10 under the 0

1986
01:18:39,840 --> 01:18:42,480
bandwidth and the tenants of value

1987
01:18:42,480 --> 01:18:45,040
but i think but

1988
01:18:45,040 --> 01:18:48,880
as far as providing resource mindset

1989
01:18:48,880 --> 01:18:52,560
it receives a message and if the network

1990
01:18:52,560 --> 01:18:53,600
is

1991
01:18:53,600 --> 01:18:56,719
not very busy

1992
01:18:56,719 --> 01:18:58,080
it will

1993
01:18:58,080 --> 01:18:59,520
respond

1994
01:18:59,520 --> 01:19:01,199
accept but

1995
01:19:01,199 --> 01:19:03,120
if the if

1996
01:19:03,120 --> 01:19:05,360
the network is

1997
01:19:05,360 --> 01:19:07,760
the result is

1998
01:19:07,760 --> 01:19:11,040
she will license page says it will

1999
01:19:11,040 --> 01:19:12,719
respond to eight

2000
01:19:12,719 --> 01:19:16,239
and the next round is r

2001
01:19:16,239 --> 01:19:17,440
is the

2002
01:19:17,440 --> 01:19:18,640
results

2003
01:19:18,640 --> 01:19:22,239
it is request results major ace and she

2004
01:19:22,239 --> 01:19:25,199
will decide the eight if

2005
01:19:25,199 --> 01:19:29,199
if the eight is eight is enough and

2006
01:19:29,199 --> 01:19:32,000
i think uh says the pinterest in its

2007
01:19:32,000 --> 01:19:33,120
sense

2008
01:19:33,120 --> 01:19:37,120
eight megabit has is enough so she will

2009
01:19:37,120 --> 01:19:41,040
send us a message under the

2010
01:19:41,040 --> 01:19:44,000
providing resource manager will accept

2011
01:19:44,000 --> 01:19:46,960
and this is the example of negotiation

2012
01:19:46,960 --> 01:19:49,199
process

2013
01:19:49,199 --> 01:19:51,840
and this is a new step

2014
01:19:51,840 --> 01:19:56,480
uh when we add in the draft and is it

2015
01:19:56,480 --> 01:20:00,719
about how if the example of the changing

2016
01:20:00,719 --> 01:20:02,560
resource requirement

2017
01:20:02,560 --> 01:20:05,040
and the multi-car we can see in the

2018
01:20:05,040 --> 01:20:07,120
draft

2019
01:20:07,120 --> 01:20:10,960
and uh for next step we will uh have a

2020
01:20:10,960 --> 01:20:14,880
more discuss about our uh draft and i

2021
01:20:14,880 --> 01:20:17,040
hope uh some hope

2022
01:20:17,040 --> 01:20:20,639
other people can help us understand

2023
01:20:20,639 --> 01:20:23,880
thank you

2024
01:20:34,719 --> 01:20:37,199
any questions here i don't see anybody

2025
01:20:37,199 --> 01:20:39,599
online

2026
01:20:41,600 --> 01:20:44,400
so yeah i'll i'll review the document

2027
01:20:44,400 --> 01:20:46,639
and provide feedback on the list um

2028
01:20:46,639 --> 01:20:49,600
i think it would be great to so so the

2029
01:20:49,600 --> 01:20:51,199
slides already show a little bit more

2030
01:20:51,199 --> 01:20:54,560
details on the example um

2031
01:20:54,560 --> 01:20:56,400
use case here than the draft itself

2032
01:20:56,400 --> 01:20:59,120
that's great um i think yes

2033
01:20:59,120 --> 01:21:01,520
what would be good to to to to bring

2034
01:21:01,520 --> 01:21:03,360
this down to a fully

2035
01:21:03,360 --> 01:21:05,760
explicit example use case and i'm not

2036
01:21:05,760 --> 01:21:07,520
sure what what type of you know proof of

2037
01:21:07,520 --> 01:21:10,159
concept code you have but i think such a

2038
01:21:10,159 --> 01:21:11,760
proof of concept code that would

2039
01:21:11,760 --> 01:21:12,880
actually

2040
01:21:12,880 --> 01:21:15,520
you know result in the reservation of of

2041
01:21:15,520 --> 01:21:17,440
of a resource would help a lot so for

2042
01:21:17,440 --> 01:21:19,840
example you're showing the step-by-step

2043
01:21:19,840 --> 01:21:22,400
process to talk with the nodes along the

2044
01:21:22,400 --> 01:21:25,600
path but how do you know the path for

2045
01:21:25,600 --> 01:21:27,360
a particular

2046
01:21:27,360 --> 01:21:29,120
service instance that you want to do i

2047
01:21:29,120 --> 01:21:31,120
think that's not being answered and then

2048
01:21:31,120 --> 01:21:33,760
of course um you know picking some way

2049
01:21:33,760 --> 01:21:34,560
to

2050
01:21:34,560 --> 01:21:36,800
i guess actually reserve guarantee the

2051
01:21:36,800 --> 01:21:39,679
bandwidth that that that should also be

2052
01:21:39,679 --> 01:21:43,360
given as an example and um yeah i i

2053
01:21:43,360 --> 01:21:45,360
guess that the example you're showing

2054
01:21:45,360 --> 01:21:48,400
would be some form of um

2055
01:21:48,400 --> 01:21:50,000
alternative to something that in the

2056
01:21:50,000 --> 01:21:52,639
past rsvp has done

2057
01:21:52,639 --> 01:21:53,440
and

2058
01:21:53,440 --> 01:21:55,679
i guess that discussion of

2059
01:21:55,679 --> 01:21:56,560
how

2060
01:21:56,560 --> 01:21:58,960
this mechanism would be better

2061
01:21:58,960 --> 01:22:01,360
in comparison to to such prior examples

2062
01:22:01,360 --> 01:22:03,760
that would also help to distinguish the

2063
01:22:03,760 --> 01:22:05,440
proposal

2064
01:22:05,440 --> 01:22:10,678
okay okay sure

2065
01:22:11,440 --> 01:22:14,879
uh animal health question

2066
01:22:20,560 --> 01:22:22,080
okay

2067
01:22:22,080 --> 01:22:24,639
okay

2068
01:22:24,639 --> 01:22:26,719
then i think you're up again for the

2069
01:22:26,719 --> 01:22:29,120
next slot the

2070
01:22:29,120 --> 01:22:32,239
yes the nice stuff

2071
01:22:32,639 --> 01:22:35,040
yes nice yeah

2072
01:22:35,040 --> 01:22:36,320
so now this is

2073
01:22:36,320 --> 01:22:38,000
the first draft here that we're

2074
01:22:38,000 --> 01:22:39,600
discussing that is not working group

2075
01:22:39,600 --> 01:22:42,880
adopted but individual ground so far

2076
01:22:42,880 --> 01:22:44,639
yeah

2077
01:22:44,639 --> 01:22:45,679
okay

2078
01:22:45,679 --> 01:22:48,800
i i will start about this draft

2079
01:22:48,800 --> 01:22:52,000
under this draft is about autonomic ip

2080
01:22:52,000 --> 01:22:53,280
address

2081
01:22:53,280 --> 01:22:56,400
to access control group mapping

2082
01:22:56,400 --> 01:22:58,800
and i first i will

2083
01:22:58,800 --> 01:23:02,400
reveal the basic idea of the draft and

2084
01:23:02,400 --> 01:23:04,960
this is a picture of

2085
01:23:04,960 --> 01:23:08,000
an example of campus network and

2086
01:23:08,000 --> 01:23:11,199
the in this network it improves exercise

2087
01:23:11,199 --> 01:23:14,080
note and the acer we defined in the

2088
01:23:14,080 --> 01:23:17,920
draft and here the aap represents the

2089
01:23:17,920 --> 01:23:22,400
absence of a dictation point asa and

2090
01:23:22,400 --> 01:23:24,639
pp response

2091
01:23:24,639 --> 01:23:26,719
is our poli

2092
01:23:26,719 --> 01:23:29,520
policies enforcement point

2093
01:23:29,520 --> 01:23:32,960
and this strat draft wants to slow the

2094
01:23:32,960 --> 01:23:34,480
question about

2095
01:23:34,480 --> 01:23:37,600
how to autonomic configure the policy

2096
01:23:37,600 --> 01:23:41,440
for user in the network and we use a

2097
01:23:41,440 --> 01:23:43,920
group basic policy to

2098
01:23:43,920 --> 01:23:45,440
deal with it

2099
01:23:45,440 --> 01:23:47,199
and

2100
01:23:47,199 --> 01:23:50,560
in the in our draft as a group means a

2101
01:23:50,560 --> 01:23:53,360
number of items connecting to the

2102
01:23:53,360 --> 01:23:55,440
network starter share

2103
01:23:55,440 --> 01:23:58,239
share common network policy uh for

2104
01:23:58,239 --> 01:24:00,480
example if uh

2105
01:24:00,480 --> 01:24:02,080
one user

2106
01:24:02,080 --> 01:24:03,520
adapts uh

2107
01:24:03,520 --> 01:24:06,800
uh the network but and if they change

2108
01:24:06,800 --> 01:24:10,320
the exercise point say maybe that is a

2109
01:24:10,320 --> 01:24:13,600
different ip but we think that the user

2110
01:24:13,600 --> 01:24:17,120
wants to get the same network

2111
01:24:17,120 --> 01:24:18,719
servers

2112
01:24:18,719 --> 01:24:20,239
so that

2113
01:24:20,239 --> 01:24:24,239
our driver want to uh slow this

2114
01:24:24,239 --> 01:24:27,040
this price this project

2115
01:24:27,040 --> 01:24:30,560
and this is our chain from the last

2116
01:24:30,560 --> 01:24:32,239
version and

2117
01:24:32,239 --> 01:24:35,280
in our slab we will do the

2118
01:24:35,280 --> 01:24:39,280
uh example about how this mechanism work

2119
01:24:39,280 --> 01:24:40,159
and

2120
01:24:40,159 --> 01:24:41,600
i think this

2121
01:24:41,600 --> 01:24:45,280
will make others know more about our

2122
01:24:45,280 --> 01:24:47,599
draft

2123
01:24:49,280 --> 01:24:51,760
this page will show the

2124
01:24:51,760 --> 01:24:53,520
gra the diff

2125
01:24:53,520 --> 01:24:57,199
grasp what we define in the draft and

2126
01:24:57,199 --> 01:24:58,800
it includes

2127
01:24:58,800 --> 01:25:03,120
aap objective under the pp objective and

2128
01:25:03,120 --> 01:25:05,600
this is our def uh

2129
01:25:05,600 --> 01:25:07,280
defined

2130
01:25:07,280 --> 01:25:11,920
and this page is about an example about

2131
01:25:11,920 --> 01:25:15,920
how aap does ip address and group id

2132
01:25:15,920 --> 01:25:18,639
might be information for a house for a

2133
01:25:18,639 --> 01:25:22,400
host and it weighs in is its prior

2134
01:25:22,400 --> 01:25:25,440
knowledge for animal objective and

2135
01:25:25,440 --> 01:25:29,199
we must emphasize that this is only just

2136
01:25:29,199 --> 01:25:32,880
an example and it is not built standard

2137
01:25:32,880 --> 01:25:35,679
there are many weapons like the aap

2138
01:25:35,679 --> 01:25:36,880
threats

2139
01:25:36,880 --> 01:25:39,120
this mapping information

2140
01:25:39,120 --> 01:25:41,360
and this is our

2141
01:25:41,360 --> 01:25:44,560
example and in the example

2142
01:25:44,560 --> 01:25:46,800
uh the hosts a

2143
01:25:46,800 --> 01:25:47,840
uh

2144
01:25:47,840 --> 01:25:49,679
uh

2145
01:25:49,679 --> 01:25:52,400
joins uh network and say

2146
01:25:52,400 --> 01:25:55,840
aap use a travel a server to add some

2147
01:25:55,840 --> 01:25:57,679
mic to group id

2148
01:25:57,679 --> 01:26:01,360
mic information uh first as a figure

2149
01:26:01,360 --> 01:26:02,880
shows that

2150
01:26:02,880 --> 01:26:06,560
a access network under it exercise node

2151
01:26:06,560 --> 01:26:10,880
is aap and the host a will send its mic

2152
01:26:10,880 --> 01:26:13,840
address to the domain network in order

2153
01:26:13,840 --> 01:26:16,480
to write certification and

2154
01:26:16,480 --> 01:26:19,520
some other information so the

2155
01:26:19,520 --> 01:26:22,560
ap uses my address to

2156
01:26:22,560 --> 01:26:24,400
request group

2157
01:26:24,400 --> 01:26:27,360
to request group id to triple a server

2158
01:26:27,360 --> 01:26:30,560
and the aaa server will reply the

2159
01:26:30,560 --> 01:26:34,639
request with mac a is okay under the

2160
01:26:34,639 --> 01:26:36,080
group is

2161
01:26:36,080 --> 01:26:37,600
file

2162
01:26:37,600 --> 01:26:40,639
so the ap will store this information in

2163
01:26:40,639 --> 01:26:41,520
their

2164
01:26:41,520 --> 01:26:45,280
local memory and for next step

2165
01:26:45,280 --> 01:26:48,400
after passing the synchronous

2166
01:26:48,400 --> 01:26:51,440
after passing the scientification so

2167
01:26:51,440 --> 01:26:55,120
jose can use a dhcp process to write

2168
01:26:55,120 --> 01:27:00,000
their ip address and so that the aap can

2169
01:27:00,000 --> 01:27:03,280
write the micro information about

2170
01:27:03,280 --> 01:27:07,920
ipa to mitre 8 and eventually the ap

2171
01:27:07,920 --> 01:27:09,600
uses two

2172
01:27:09,600 --> 01:27:12,239
information and the guys

2173
01:27:12,239 --> 01:27:13,360
a is

2174
01:27:13,360 --> 01:27:17,120
um is to group five so this is an

2175
01:27:17,120 --> 01:27:18,719
example about

2176
01:27:18,719 --> 01:27:24,159
how aap does the group id information

2177
01:27:24,159 --> 01:27:28,480
and this is a this page is about uh

2178
01:27:28,480 --> 01:27:31,440
how the how the aap

2179
01:27:31,440 --> 01:27:32,880
pushing my

2180
01:27:32,880 --> 01:27:37,040
information to peps and uh we also

2181
01:27:37,040 --> 01:27:39,120
include the discovery stage and the

2182
01:27:39,120 --> 01:27:43,760
negotiation stage and the isis picture

2183
01:27:43,760 --> 01:27:47,679
show and first the ap will just send a

2184
01:27:47,679 --> 01:27:49,840
discovery message to

2185
01:27:49,840 --> 01:27:51,679
pvp and write

2186
01:27:51,679 --> 01:27:54,719
the pp node and

2187
01:27:54,719 --> 01:27:58,480
after that the lap will

2188
01:27:58,480 --> 01:28:01,840
send the request negotiation message to

2189
01:28:01,840 --> 01:28:05,520
of the negotiation message include ipa

2190
01:28:05,520 --> 01:28:06,159
and

2191
01:28:06,159 --> 01:28:09,920
group id file to the pep and the pp will

2192
01:28:09,920 --> 01:28:12,960
steal this information and they will use

2193
01:28:12,960 --> 01:28:13,760
this

2194
01:28:13,760 --> 01:28:16,800
imping table to enforce the

2195
01:28:16,800 --> 01:28:19,360
policy

2196
01:28:19,440 --> 01:28:22,400
and if the pep receives this message

2197
01:28:22,400 --> 01:28:24,320
they will start

2198
01:28:24,320 --> 01:28:25,199
some

2199
01:28:25,199 --> 01:28:27,840
tape mapping table in their local memory

2200
01:28:27,840 --> 01:28:29,040
and they will

2201
01:28:29,040 --> 01:28:34,000
respond to negotiation and the message

2202
01:28:34,400 --> 01:28:36,560
this is uh

2203
01:28:36,560 --> 01:28:38,560
this picture is about

2204
01:28:38,560 --> 01:28:41,560
how the pp uses

2205
01:28:41,560 --> 01:28:45,360
ip2 group information to

2206
01:28:45,360 --> 01:28:47,760
enforce to

2207
01:28:47,760 --> 01:28:50,000
enforce the policy

2208
01:28:50,000 --> 01:28:51,199
and

2209
01:28:51,199 --> 01:28:55,360
as an example the user a user whose ip

2210
01:28:55,360 --> 01:28:59,440
address is ipa want to send send a

2211
01:28:59,440 --> 01:29:00,960
package to the

2212
01:29:00,960 --> 01:29:02,400
data

2213
01:29:02,400 --> 01:29:06,400
database machine whose ip address is ipb

2214
01:29:06,400 --> 01:29:10,239
like the orange line in the pincher we

2215
01:29:10,239 --> 01:29:11,679
say that

2216
01:29:11,679 --> 01:29:15,520
the ipa is a group file under the ipb is

2217
01:29:15,520 --> 01:29:17,840
group 10 but

2218
01:29:17,840 --> 01:29:21,120
we know that the policy size that

2219
01:29:21,120 --> 01:29:25,520
ip file to ip group id file to group ip

2220
01:29:25,520 --> 01:29:26,880
10 is

2221
01:29:26,880 --> 01:29:31,120
is b is drop and is forbidden so the pp

2222
01:29:31,120 --> 01:29:32,000
will

2223
01:29:32,000 --> 01:29:33,600
uh

2224
01:29:33,600 --> 01:29:36,000
will do something to

2225
01:29:36,000 --> 01:29:37,280
enforce the

2226
01:29:37,280 --> 01:29:38,480
policy

2227
01:29:38,480 --> 01:29:39,920
and uh

2228
01:29:39,920 --> 01:29:41,679
and in this

2229
01:29:41,679 --> 01:29:45,760
in this mechanism the pp will drive the

2230
01:29:45,760 --> 01:29:49,679
data package and find the source ip

2231
01:29:49,679 --> 01:29:53,840
uh ipa under to the target ips ipb

2232
01:29:53,840 --> 01:29:57,280
understand they use their uh

2233
01:29:57,280 --> 01:29:58,639
information

2234
01:29:58,639 --> 01:30:02,639
sorted information and that's a ipp a is

2235
01:30:02,639 --> 01:30:05,440
a good file under the

2236
01:30:05,440 --> 01:30:09,440
ipb is a group 10 under the undersea it

2237
01:30:09,440 --> 01:30:11,520
also found the policy

2238
01:30:11,520 --> 01:30:14,400
510 drop that means the

2239
01:30:14,400 --> 01:30:16,400
pipe should drop the

2240
01:30:16,400 --> 01:30:20,560
heighthead so the pad so the pp will

2241
01:30:20,560 --> 01:30:22,800
drop the package and

2242
01:30:22,800 --> 01:30:25,040
enforce um

2243
01:30:25,040 --> 01:30:26,159
policy

2244
01:30:26,159 --> 01:30:30,000
and this is the house pp enforcer policy

2245
01:30:30,000 --> 01:30:34,239
and if the ipa changes

2246
01:30:34,239 --> 01:30:35,920
point on the

2247
01:30:35,920 --> 01:30:37,600
guys

2248
01:30:37,600 --> 01:30:41,120
new ip ipl device is ipc

2249
01:30:41,120 --> 01:30:44,239
but we know that the

2250
01:30:44,239 --> 01:30:47,600
ipc is also in the proof file

2251
01:30:47,600 --> 01:30:48,800
so the

2252
01:30:48,800 --> 01:30:53,040
pp also can find that ipc to ipb is also

2253
01:30:53,040 --> 01:30:54,239
forbidden

2254
01:30:54,239 --> 01:30:54,960
so

2255
01:30:54,960 --> 01:30:58,320
it will also drop the package and this

2256
01:30:58,320 --> 01:30:59,920
is

2257
01:30:59,920 --> 01:31:06,239
how the pp uses uh information to

2258
01:31:06,239 --> 01:31:09,199
manage the night work

2259
01:31:09,199 --> 01:31:13,840
and this is uh all about our draft and

2260
01:31:13,840 --> 01:31:17,679
so also saying this draft is

2261
01:31:17,679 --> 01:31:20,800
being reliably complete so we want to

2262
01:31:20,800 --> 01:31:25,199
send this paper this graph is ready for

2263
01:31:25,199 --> 01:31:26,560
adoption

2264
01:31:26,560 --> 01:31:29,800
thank you

2265
01:31:39,120 --> 01:31:42,679
any questions

2266
01:31:51,810 --> 01:31:57,360
[Music]

2267
01:31:57,360 --> 01:32:00,080
we have seen that the growing demand and

2268
01:32:00,080 --> 01:32:00,800
the

2269
01:32:00,800 --> 01:32:03,199
parliament for group based policy in the

2270
01:32:03,199 --> 01:32:05,120
network

2271
01:32:05,120 --> 01:32:07,360
this this idea is

2272
01:32:07,360 --> 01:32:11,440
very attractive feature for animal asa

2273
01:32:11,440 --> 01:32:13,440
my opinion perhaps

2274
01:32:13,440 --> 01:32:15,440
this can

2275
01:32:15,440 --> 01:32:19,840
work for the security scenario

2276
01:32:19,840 --> 01:32:21,920
and kind of

2277
01:32:21,920 --> 01:32:22,800
in the

2278
01:32:22,800 --> 01:32:26,520
use case for that

2279
01:32:27,199 --> 01:32:28,159
uh

2280
01:32:28,159 --> 01:32:31,920
your straightforward scenario

2281
01:32:31,920 --> 01:32:34,560
security

2282
01:32:34,560 --> 01:32:36,719
uh

2283
01:32:38,840 --> 01:32:42,159
security uh

2284
01:32:42,159 --> 01:32:44,400
sorry i have some

2285
01:32:44,400 --> 01:32:45,679
from some

2286
01:32:45,679 --> 01:32:46,560
uh

2287
01:32:46,560 --> 01:32:49,360
some some ip is not allowed

2288
01:32:49,360 --> 01:32:52,239
to excel some uh

2289
01:32:52,239 --> 01:32:55,679
node and in this mechanism

2290
01:32:55,679 --> 01:32:57,440
they can't control this

2291
01:32:57,440 --> 01:32:59,520
success

2292
01:32:59,520 --> 01:33:01,660
in my opinion

2293
01:33:01,660 --> 01:33:04,849
[Music]

2294
01:33:05,040 --> 01:33:07,600
yes i i know this question this question

2295
01:33:07,600 --> 01:33:10,480
i think we will add in the

2296
01:33:10,480 --> 01:33:13,280
filter if the

2297
01:33:13,280 --> 01:33:16,639
ip is not fun

2298
01:33:17,199 --> 01:33:21,080
okay thank you

2299
01:33:22,080 --> 01:33:24,880
go ahead you though

2300
01:33:26,800 --> 01:33:28,080
actually i

2301
01:33:28,080 --> 01:33:30,320
answered a little bit more regarding

2302
01:33:30,320 --> 01:33:32,480
jungkook's question

2303
01:33:32,480 --> 01:33:34,840
about the security so

2304
01:33:34,840 --> 01:33:39,040
uh at one of the courses yeah i think in

2305
01:33:39,040 --> 01:33:40,560
it is uh

2306
01:33:40,560 --> 01:33:43,120
in broad scope we can say that it is

2307
01:33:43,120 --> 01:33:46,560
also for security purpose um but i guess

2308
01:33:46,560 --> 01:33:49,520
most likely will consider is like for

2309
01:33:49,520 --> 01:33:51,040
the policy

2310
01:33:51,040 --> 01:33:53,280
uh policy enforcement

2311
01:33:53,280 --> 01:33:54,159
so

2312
01:33:54,159 --> 01:33:56,800
uh so it depending on how you

2313
01:33:56,800 --> 01:33:58,880
categorize this

2314
01:33:58,880 --> 01:33:59,840
so

2315
01:33:59,840 --> 01:34:02,159
in broad scope yeah it is security in

2316
01:34:02,159 --> 01:34:04,000
narrow scope

2317
01:34:04,000 --> 01:34:06,639
it is more considered as the policy side

2318
01:34:06,639 --> 01:34:08,800
that's that's what i'm trying to say

2319
01:34:08,800 --> 01:34:11,199
thank you

2320
01:34:13,440 --> 01:34:15,040
i do have some

2321
01:34:15,040 --> 01:34:18,320
questions clarification questions could

2322
01:34:18,320 --> 01:34:19,440
you go back to

2323
01:34:19,440 --> 01:34:20,800
[Music]

2324
01:34:20,800 --> 01:34:23,280
slides

2325
01:34:23,840 --> 01:34:26,400
at this page or

2326
01:34:26,400 --> 01:34:27,600
this yeah

2327
01:34:27,600 --> 01:34:29,920
here

2328
01:34:31,520 --> 01:34:34,080
yeah here i get confused

2329
01:34:34,080 --> 01:34:36,320
by this example because

2330
01:34:36,320 --> 01:34:37,280
uh

2331
01:34:37,280 --> 01:34:40,960
in this figure you actually only show

2332
01:34:40,960 --> 01:34:42,560
the procedure

2333
01:34:42,560 --> 01:34:45,280
between the host and the

2334
01:34:45,280 --> 01:34:46,719
a server

2335
01:34:46,719 --> 01:34:48,239
between the host

2336
01:34:48,239 --> 01:34:51,600
host and the dhcp server

2337
01:34:51,600 --> 01:34:55,360
which we can reuse the existing

2338
01:34:55,360 --> 01:34:58,880
authentication protocols all the

2339
01:34:58,880 --> 01:35:01,119
existing dhc

2340
01:35:01,119 --> 01:35:03,360
protocols

2341
01:35:03,360 --> 01:35:05,119
if that's the case

2342
01:35:05,119 --> 01:35:07,360
so

2343
01:35:08,480 --> 01:35:11,119
why anyone

2344
01:35:11,119 --> 01:35:13,360
yeah

2345
01:35:13,679 --> 01:35:14,960
yeah

2346
01:35:14,960 --> 01:35:18,159
my next question is seminar uh could you

2347
01:35:18,159 --> 01:35:20,480
go next page

2348
01:35:20,480 --> 01:35:22,080
um

2349
01:35:22,080 --> 01:35:22,880
yeah

2350
01:35:22,880 --> 01:35:24,080
here

2351
01:35:24,080 --> 01:35:28,800
you give an example of negotiation but

2352
01:35:28,800 --> 01:35:30,239
from the

2353
01:35:30,239 --> 01:35:33,280
procedure you have on this figure it's

2354
01:35:33,280 --> 01:35:34,239
the

2355
01:35:34,239 --> 01:35:37,679
normal request and response model

2356
01:35:37,679 --> 01:35:40,400
where is the negotiation

2357
01:35:40,400 --> 01:35:42,639
i cannot see how

2358
01:35:42,639 --> 01:35:44,480
she can help you

2359
01:35:44,480 --> 01:35:46,480
request something

2360
01:35:46,480 --> 01:35:47,840
with certain

2361
01:35:47,840 --> 01:35:50,320
group id and

2362
01:35:50,320 --> 01:35:54,480
receive something or some allergy

2363
01:35:54,480 --> 01:35:56,800
allocation information bike

2364
01:35:56,800 --> 01:35:59,520
that's a request and a response

2365
01:35:59,520 --> 01:36:04,000
it seems misused for negotiation

2366
01:36:06,880 --> 01:36:11,520
yes i i know what you'll say

2367
01:36:12,320 --> 01:36:13,600
go ahead

2368
01:36:13,600 --> 01:36:15,440
yeah

2369
01:36:15,440 --> 01:36:17,199
yeah that's that's a good question so so

2370
01:36:17,199 --> 01:36:18,960
maybe we can take a look at the previous

2371
01:36:18,960 --> 01:36:21,040
page first

2372
01:36:21,040 --> 01:36:23,440
yeah that's regarding so

2373
01:36:23,440 --> 01:36:26,400
as eugene just now showed this is just

2374
01:36:26,400 --> 01:36:27,920
an example so

2375
01:36:27,920 --> 01:36:30,239
basically if the whole system deployed

2376
01:36:30,239 --> 01:36:32,480
the animal we are thinking that would be

2377
01:36:32,480 --> 01:36:35,440
one of the essential components

2378
01:36:35,440 --> 01:36:36,800
for the whole

2379
01:36:36,800 --> 01:36:38,800
animal deployment

2380
01:36:38,800 --> 01:36:42,239
here this is just to just to show the

2381
01:36:42,239 --> 01:36:44,000
readers that

2382
01:36:44,000 --> 01:36:45,840
even

2383
01:36:45,840 --> 01:36:46,800
even

2384
01:36:46,800 --> 01:36:49,040
some part is not

2385
01:36:49,040 --> 01:36:51,360
animalized

2386
01:36:51,360 --> 01:36:54,159
this can be standard long piece for the

2387
01:36:54,159 --> 01:36:56,960
work which can be a standalone piece for

2388
01:36:56,960 --> 01:36:59,119
the anima asa

2389
01:36:59,119 --> 01:37:01,760
so that's why that's also why the reason

2390
01:37:01,760 --> 01:37:04,639
uh using put here as this is not going

2391
01:37:04,639 --> 01:37:06,960
to be standardized so just to show there

2392
01:37:06,960 --> 01:37:09,199
are different possibilities how to use

2393
01:37:09,199 --> 01:37:10,080
it

2394
01:37:10,080 --> 01:37:12,080
so that's okay that's fine

2395
01:37:12,080 --> 01:37:12,960
but

2396
01:37:12,960 --> 01:37:15,840
i would like to say another update

2397
01:37:15,840 --> 01:37:17,760
example which shows

2398
01:37:17,760 --> 01:37:21,119
you know what would be uh you know

2399
01:37:21,119 --> 01:37:25,119
unified uh what would a unicode uh value

2400
01:37:25,119 --> 01:37:29,600
for use the animal or grass uh particles

2401
01:37:29,600 --> 01:37:30,880
right yeah

2402
01:37:30,880 --> 01:37:33,280
yeah yeah yeah that's valid i think we

2403
01:37:33,280 --> 01:37:36,080
can add a at the as a description or

2404
01:37:36,080 --> 01:37:39,760
paragraph to the existing uh document to

2405
01:37:39,760 --> 01:37:42,159
have a to have an introduction on on

2406
01:37:42,159 --> 01:37:44,480
this what you suggested

2407
01:37:44,480 --> 01:37:47,600
okay and yeah for the next one yeah

2408
01:37:47,600 --> 01:37:49,199
you're right we are using the

2409
01:37:49,199 --> 01:37:52,000
negotiation so it can be treated as a

2410
01:37:52,000 --> 01:37:54,960
single uh single with a request and

2411
01:37:54,960 --> 01:37:57,679
reply mode of the negotiation so

2412
01:37:57,679 --> 01:38:00,719
basically um of course

2413
01:38:00,719 --> 01:38:03,199
this is basically like uh

2414
01:38:03,199 --> 01:38:07,360
uh the pep stop pep point receive this

2415
01:38:07,360 --> 01:38:09,840
uh negotiation negotiation request of

2416
01:38:09,840 --> 01:38:12,639
course here we are we our assumption is

2417
01:38:12,639 --> 01:38:15,040
have just uh

2418
01:38:15,040 --> 01:38:18,560
just approves such negotiation this

2419
01:38:18,560 --> 01:38:21,679
mapping unconditionally but in the real

2420
01:38:21,679 --> 01:38:22,880
deployment

2421
01:38:22,880 --> 01:38:24,960
of course because the paper is a policy

2422
01:38:24,960 --> 01:38:28,400
enforcement point it can use some um

2423
01:38:28,400 --> 01:38:31,440
pre-defined policy it can reject this

2424
01:38:31,440 --> 01:38:34,800
negotiation so it's still a quite a

2425
01:38:34,800 --> 01:38:36,880
common sense for the

2426
01:38:36,880 --> 01:38:39,440
animal uh defined request and

2427
01:38:39,440 --> 01:38:41,600
negotiation and negotiation and the

2428
01:38:41,600 --> 01:38:43,600
policy but here for the illustration

2429
01:38:43,600 --> 01:38:45,760
purpose we just assume everything is

2430
01:38:45,760 --> 01:38:47,679
okay so the pep

2431
01:38:47,679 --> 01:38:49,040
accepted this

2432
01:38:49,040 --> 01:38:50,080
so

2433
01:38:50,080 --> 01:38:53,760
hope this reply your your question

2434
01:38:53,760 --> 01:38:56,000
um

2435
01:38:56,239 --> 01:38:59,520
yes and no yes you explain why you use

2436
01:38:59,520 --> 01:39:03,600
this figure or this example but

2437
01:39:03,600 --> 01:39:07,280
that's much better if you can you know

2438
01:39:07,280 --> 01:39:08,320
show up

2439
01:39:08,320 --> 01:39:13,040
better few uh example which

2440
01:39:13,040 --> 01:39:16,400
expressed how the education may happen

2441
01:39:16,400 --> 01:39:18,239
that would oh yeah

2442
01:39:18,239 --> 01:39:20,960
yeah so uh because this one actually was

2443
01:39:20,960 --> 01:39:24,159
added to the latest version which also

2444
01:39:24,159 --> 01:39:26,800
suggested by tolus and i think by brian

2445
01:39:26,800 --> 01:39:29,199
because the original version was too

2446
01:39:29,199 --> 01:39:32,080
abstract currently we are using this

2447
01:39:32,080 --> 01:39:35,119
flowchart to give a more solid example

2448
01:39:35,119 --> 01:39:38,480
so i think a one of the way to deal with

2449
01:39:38,480 --> 01:39:41,679
it we can try to add something

2450
01:39:41,679 --> 01:39:44,719
uh say that if there is that

2451
01:39:44,719 --> 01:39:47,360
if the pep doesn't allow this then

2452
01:39:47,360 --> 01:39:49,840
actually the negotiation ad

2453
01:39:49,840 --> 01:39:53,040
sorry negotiate negotiation and message

2454
01:39:53,040 --> 01:39:55,280
um it's not a hundred percent accept

2455
01:39:55,280 --> 01:39:57,440
case it can be something like the deny

2456
01:39:57,440 --> 01:39:59,840
so we add this example to show that it

2457
01:39:59,840 --> 01:40:02,480
is uh there are different consequences

2458
01:40:02,480 --> 01:40:05,280
the different results for negotiation

2459
01:40:05,280 --> 01:40:09,119
i think that uh yeah so maybe from my

2460
01:40:09,119 --> 01:40:12,560
side a comment so what what this

2461
01:40:12,560 --> 01:40:15,199
seems to be in the direction of is

2462
01:40:15,199 --> 01:40:17,360
something similar to you know what we've

2463
01:40:17,360 --> 01:40:20,560
been doing for well maybe now 30 years

2464
01:40:20,560 --> 01:40:22,560
um triple aaa

2465
01:40:22,560 --> 01:40:24,960
between you know policy decision point

2466
01:40:24,960 --> 01:40:26,560
and policy enforcement points with

2467
01:40:26,560 --> 01:40:30,560
protocols like tacacs radius diameter

2468
01:40:30,560 --> 01:40:31,760
and so

2469
01:40:31,760 --> 01:40:34,159
that comparison right in terms of what

2470
01:40:34,159 --> 01:40:36,800
can those solutions not do that we can

2471
01:40:36,800 --> 01:40:38,000
do with the

2472
01:40:38,000 --> 01:40:40,880
uh with with this enema approach um i

2473
01:40:40,880 --> 01:40:42,400
think would be helpful but that of

2474
01:40:42,400 --> 01:40:44,159
course is

2475
01:40:44,159 --> 01:40:45,840
a lot of work trying to figure out what

2476
01:40:45,840 --> 01:40:48,159
you can actually do with uh what we have

2477
01:40:48,159 --> 01:40:50,480
been built up over 30 years with you

2478
01:40:50,480 --> 01:40:53,360
know radio's diameter

2479
01:40:53,360 --> 01:40:57,760
tacax so that's that's uh not free

2480
01:40:57,760 --> 01:41:00,080
to wrap up to but i think the problem is

2481
01:41:00,080 --> 01:41:01,679
that if you don't do it at some point in

2482
01:41:01,679 --> 01:41:03,119
time the people who do know those

2483
01:41:03,119 --> 01:41:05,440
technologies will come for review and

2484
01:41:05,440 --> 01:41:06,880
say well we can do everything that

2485
01:41:06,880 --> 01:41:08,880
you're trying to do new here already

2486
01:41:08,880 --> 01:41:10,239
with the old stuff maybe it's a little

2487
01:41:10,239 --> 01:41:11,760
bit more crappy

2488
01:41:11,760 --> 01:41:13,760
which certainly everybody agrees to is

2489
01:41:13,760 --> 01:41:15,760
most of the stuff that's 30 years old

2490
01:41:15,760 --> 01:41:18,560
but as long as it it can be done the you

2491
01:41:18,560 --> 01:41:19,360
know

2492
01:41:19,360 --> 01:41:21,440
desire to do something new is

2493
01:41:21,440 --> 01:41:22,639
very often

2494
01:41:22,639 --> 01:41:25,119
much uh reduced so so that's i think one

2495
01:41:25,119 --> 01:41:27,199
of the challenges and i think what what

2496
01:41:27,199 --> 01:41:29,440
what is helpful with understanding that

2497
01:41:29,440 --> 01:41:31,679
old stuff is you know trying to find the

2498
01:41:31,679 --> 01:41:33,679
most easy places where the old stuff

2499
01:41:33,679 --> 01:41:36,080
cannot do it right um so for example

2500
01:41:36,080 --> 01:41:37,280
what you're showing here where you're

2501
01:41:37,280 --> 01:41:39,040
pushing stuff out

2502
01:41:39,040 --> 01:41:41,920
to multiple points um that that is

2503
01:41:41,920 --> 01:41:43,280
getting in the direction where the

2504
01:41:43,280 --> 01:41:46,480
typical um aaa solutions do not work

2505
01:41:46,480 --> 01:41:48,560
well because they're typically really

2506
01:41:48,560 --> 01:41:51,600
based on request reply based on you know

2507
01:41:51,600 --> 01:41:54,159
a new device showing up at some place

2508
01:41:54,159 --> 01:41:56,080
that's where you know the request reply

2509
01:41:56,080 --> 01:41:58,080
for the authentication authorization is

2510
01:41:58,080 --> 01:41:59,679
triggered

2511
01:41:59,679 --> 01:42:02,080
yeah let's not to carry on too long we

2512
01:42:02,080 --> 01:42:04,000
can take it to the list but

2513
01:42:04,000 --> 01:42:06,300
that was the general idea thanks

2514
01:42:06,300 --> 01:42:08,080
[Music]

2515
01:42:08,080 --> 01:42:11,320
yeah thanks

2516
01:42:14,400 --> 01:42:17,199
any more questions

2517
01:42:20,159 --> 01:42:21,760
okay

2518
01:42:21,760 --> 01:42:24,760
so

2519
01:42:31,119 --> 01:42:33,280
i think it's me then let me bring up the

2520
01:42:33,280 --> 01:42:36,280
slides

2521
01:42:54,000 --> 01:42:55,199
all right

2522
01:42:55,199 --> 01:42:57,679
last slot this is about two drafts that

2523
01:42:57,679 --> 01:42:59,280
i had presented

2524
01:42:59,280 --> 01:43:00,080
um

2525
01:43:00,080 --> 01:43:03,280
a couple of times in the past already

2526
01:43:03,280 --> 01:43:05,280
and then never found the time to

2527
01:43:05,280 --> 01:43:07,920
prioritize them on my own top of the

2528
01:43:07,920 --> 01:43:10,320
line due to the the other animal work so

2529
01:43:10,320 --> 01:43:12,320
i wanted to get back to that

2530
01:43:12,320 --> 01:43:13,920
with a couple of the

2531
01:43:13,920 --> 01:43:15,679
co-authors we now have on these two

2532
01:43:15,679 --> 01:43:17,520
documents and

2533
01:43:17,520 --> 01:43:19,679
revive this and also then ask for

2534
01:43:19,679 --> 01:43:22,719
working group adoption

2535
01:43:22,800 --> 01:43:24,880
the documents are quite stable from the

2536
01:43:24,880 --> 01:43:26,480
content and functionality that we're

2537
01:43:26,480 --> 01:43:28,960
asking for obviously not from the text

2538
01:43:28,960 --> 01:43:30,000
quality

2539
01:43:30,000 --> 01:43:34,239
details um and uh

2540
01:43:34,239 --> 01:43:36,159
ease of read so please read the

2541
01:43:36,159 --> 01:43:38,000
documents but hopefully this the

2542
01:43:38,000 --> 01:43:40,320
refresher here will also help to to get

2543
01:43:40,320 --> 01:43:42,800
the gist of what it's about

2544
01:43:42,800 --> 01:43:44,560
um so we've got the autonomic networks

2545
01:43:44,560 --> 01:43:46,719
that we want right brewski is autonomic

2546
01:43:46,719 --> 01:43:48,639
we hope zero touch except you know power

2547
01:43:48,639 --> 01:43:51,040
and ethernet cables maybe but what if

2548
01:43:51,040 --> 01:43:52,560
anything goes wrong how about the

2549
01:43:52,560 --> 01:43:54,400
troubleshooting side right and how about

2550
01:43:54,400 --> 01:43:57,199
the acp then which supposedly is booted

2551
01:43:57,199 --> 01:44:00,400
automatically after brewski um so the

2552
01:44:00,400 --> 01:44:02,480
first and most simple use case i would

2553
01:44:02,480 --> 01:44:04,719
like to finish up is really to get

2554
01:44:04,719 --> 01:44:08,239
something that we described in rfc 8366

2555
01:44:08,239 --> 01:44:11,360
which is the you know acp for

2556
01:44:11,360 --> 01:44:14,000
the um

2557
01:44:14,960 --> 01:44:18,000
autonomous network that is controlled

2558
01:44:18,000 --> 01:44:20,000
you know in a traditional form from an

2559
01:44:20,000 --> 01:44:22,239
operator centrally or with or without

2560
01:44:22,239 --> 01:44:23,920
sdn controller

2561
01:44:23,920 --> 01:44:26,239
to get that working reliably

2562
01:44:26,239 --> 01:44:28,880
with brewski and acp

2563
01:44:28,880 --> 01:44:30,639
and with the experience from the

2564
01:44:30,639 --> 01:44:32,960
pre-standard acp implementations that i

2565
01:44:32,960 --> 01:44:35,360
worked on

2566
01:44:35,360 --> 01:44:37,040
we really need a few infrastructure

2567
01:44:37,040 --> 01:44:39,119
services for this to run to successfully

2568
01:44:39,119 --> 01:44:40,719
bring up brewski and the acp for

2569
01:44:40,719 --> 01:44:43,040
troubleshooting and then of course also

2570
01:44:43,040 --> 01:44:46,159
to securely access devices across the

2571
01:44:46,159 --> 01:44:49,119
acp from the knock by an operator

2572
01:44:49,119 --> 01:44:51,440
through the cli or an sdn controller so

2573
01:44:51,440 --> 01:44:54,639
that's kind of uh was the starting point

2574
01:44:54,639 --> 01:44:57,119
for what i wanted to achieve which kind

2575
01:44:57,119 --> 01:44:58,880
of still the most important use case but

2576
01:44:58,880 --> 01:45:00,159
as we'll see

2577
01:45:00,159 --> 01:45:02,239
what we're proposing to uh to

2578
01:45:02,239 --> 01:45:06,000
standardize will support a lot more

2579
01:45:06,000 --> 01:45:08,800
so the core a i infrastructure services

2580
01:45:08,800 --> 01:45:10,480
right so the most important stuff from

2581
01:45:10,480 --> 01:45:12,000
the operational experience with free

2582
01:45:12,000 --> 01:45:13,840
standard is really syslog that

2583
01:45:13,840 --> 01:45:16,560
automatically runs and can you know

2584
01:45:16,560 --> 01:45:19,040
signal you know any type of thing that

2585
01:45:19,040 --> 01:45:20,719
for example happens from the brewski

2586
01:45:20,719 --> 01:45:21,920
proxy

2587
01:45:21,920 --> 01:45:24,960
back to the registrar or a syslog server

2588
01:45:24,960 --> 01:45:27,679
in some other place so that we actually

2589
01:45:27,679 --> 01:45:29,199
know when something goes wrong but

2590
01:45:29,199 --> 01:45:31,920
equally when something is working that

2591
01:45:31,920 --> 01:45:34,800
the registrar for example uses this lock

2592
01:45:34,800 --> 01:45:36,719
to to notify

2593
01:45:36,719 --> 01:45:40,480
when a new device is being enrolled

2594
01:45:40,480 --> 01:45:41,280
and

2595
01:45:41,280 --> 01:45:43,440
that then the next steps can be taken in

2596
01:45:43,440 --> 01:45:46,480
in some automated workflow so syslog is

2597
01:45:46,480 --> 01:45:48,400
the the the first service right that

2598
01:45:48,400 --> 01:45:51,360
that all the acp nodes um can start

2599
01:45:51,360 --> 01:45:53,920
syslogging what they're doing in the um

2600
01:45:53,920 --> 01:45:56,320
a infrastructure brewski proxy and and

2601
01:45:56,320 --> 01:45:58,560
whatever else the components are clock

2602
01:45:58,560 --> 01:46:01,920
synchronization uh to some selected ntp

2603
01:46:01,920 --> 01:46:05,360
service across the acp um we need good

2604
01:46:05,360 --> 01:46:07,199
times even just for basic crypto and

2605
01:46:07,199 --> 01:46:10,239
certificate validation we did a lot of

2606
01:46:10,239 --> 01:46:12,560
jumping around hoops to try to minimize

2607
01:46:12,560 --> 01:46:15,600
dependency against clocking in brewski

2608
01:46:15,600 --> 01:46:17,520
but of course life is a lot easier if

2609
01:46:17,520 --> 01:46:20,000
you do have good um

2610
01:46:20,000 --> 01:46:22,080
synchronized time

2611
01:46:22,080 --> 01:46:23,679
even if it's just you know tracing of

2612
01:46:23,679 --> 01:46:25,440
event propagation just you know this

2613
01:46:25,440 --> 01:46:27,119
message came here that message came

2614
01:46:27,119 --> 01:46:28,880
there oh there were

2615
01:46:28,880 --> 01:46:31,040
five milliseconds apart which was first

2616
01:46:31,040 --> 01:46:32,719
which was second

2617
01:46:32,719 --> 01:46:34,639
very easy to do if you have ntp

2618
01:46:34,639 --> 01:46:38,719
otherwise you're kind of very much lost

2619
01:46:39,119 --> 01:46:42,080
um and then um the remote access to the

2620
01:46:42,080 --> 01:46:45,199
nodes via the acp um that would really

2621
01:46:45,199 --> 01:46:46,159
be

2622
01:46:46,159 --> 01:46:49,440
ssh through the acp but

2623
01:46:49,440 --> 01:46:52,239
these days it's really very convoluted

2624
01:46:52,239 --> 01:46:54,960
and not good enough just to rely on ssh

2625
01:46:54,960 --> 01:46:56,480
authentication through the acp

2626
01:46:56,480 --> 01:46:59,119
certificates so it's a lot easier if you

2627
01:46:59,119 --> 01:47:00,960
have the standard authentication and

2628
01:47:00,960 --> 01:47:04,000
authorization of access

2629
01:47:04,000 --> 01:47:06,800
into ssh for controllers for operators

2630
01:47:06,800 --> 01:47:09,280
when you can rely on the standard

2631
01:47:09,280 --> 01:47:11,600
authorization and authentication tools

2632
01:47:11,600 --> 01:47:14,239
chain through radius tacx or diameter

2633
01:47:14,239 --> 01:47:15,760
radios being the

2634
01:47:15,760 --> 01:47:17,760
foremost standard of the ietf in that

2635
01:47:17,760 --> 01:47:19,760
space so you need to be able to discover

2636
01:47:19,760 --> 01:47:22,239
in the acp your radio server across the

2637
01:47:22,239 --> 01:47:24,800
acp and then simply whenever somebody

2638
01:47:24,800 --> 01:47:27,040
logs in through ssh whether it's a

2639
01:47:27,040 --> 01:47:30,719
controller using netcon across ssh or

2640
01:47:30,719 --> 01:47:33,040
an operator using cli

2641
01:47:33,040 --> 01:47:34,560
that the standard

2642
01:47:34,560 --> 01:47:37,119
authentication authorization in terms of

2643
01:47:37,119 --> 01:47:38,719
here are the commands that can be done

2644
01:47:38,719 --> 01:47:41,679
that all that existing stuff is simply

2645
01:47:41,679 --> 01:47:44,480
automated across the acp including that

2646
01:47:44,480 --> 01:47:46,800
radius authentication

2647
01:47:46,800 --> 01:47:47,920
and then of course there is the

2648
01:47:47,920 --> 01:47:50,239
alternative that we got from netconf

2649
01:47:50,239 --> 01:47:52,960
recently ken's work in the

2650
01:47:52,960 --> 01:47:55,679
working group the call home where you

2651
01:47:55,679 --> 01:47:58,719
discover a netcon server and you are

2652
01:47:58,719 --> 01:48:01,840
after you're being enrolled by brewski

2653
01:48:01,840 --> 01:48:04,000
and have an acp you would discover hey

2654
01:48:04,000 --> 01:48:06,639
there is a net called home server let me

2655
01:48:06,639 --> 01:48:08,320
connect to that so that the rest of the

2656
01:48:08,320 --> 01:48:10,800
configuration happens through netcon for

2657
01:48:10,800 --> 01:48:12,400
example

2658
01:48:12,400 --> 01:48:14,239
finally what i think

2659
01:48:14,239 --> 01:48:16,080
among the you know these core a

2660
01:48:16,080 --> 01:48:18,880
infrastructure services would be

2661
01:48:18,880 --> 01:48:21,760
to auto enable dns across the acp

2662
01:48:21,760 --> 01:48:24,000
simply just you know the poor

2663
01:48:24,000 --> 01:48:26,400
operator using the cli

2664
01:48:26,400 --> 01:48:28,800
could then much easier get rid of having

2665
01:48:28,800 --> 01:48:32,480
to look at ipv6 addresses by simply you

2666
01:48:32,480 --> 01:48:35,280
know also having dns set up that it has

2667
01:48:35,280 --> 01:48:37,520
a good dns names for all the operational

2668
01:48:37,520 --> 01:48:39,520
ipv6 addresses because

2669
01:48:39,520 --> 01:48:42,159
so far the operators are

2670
01:48:42,159 --> 01:48:44,000
really well i can't remember these long

2671
01:48:44,000 --> 01:48:46,800
addresses at least

2672
01:48:46,800 --> 01:48:48,400
all right and that brings us really to

2673
01:48:48,400 --> 01:48:50,800
the draft anima services dns auto config

2674
01:48:50,800 --> 01:48:53,600
which really is just trying to achieve

2675
01:48:53,600 --> 01:48:56,080
exactly what the prior slide said right

2676
01:48:56,080 --> 01:48:58,000
so the operator sets up servers in the

2677
01:48:58,000 --> 01:48:58,800
knock

2678
01:48:58,800 --> 01:49:01,119
those servers need to support ipv6

2679
01:49:01,119 --> 01:49:02,639
syslog ntp

2680
01:49:02,639 --> 01:49:05,040
dns radius diameter netconf whatever

2681
01:49:05,040 --> 01:49:07,760
subset of those the operator fields he

2682
01:49:07,760 --> 01:49:10,239
wants to have automated running in the

2683
01:49:10,239 --> 01:49:11,440
ani

2684
01:49:11,440 --> 01:49:14,800
connects those servers to the ani um

2685
01:49:14,800 --> 01:49:16,480
typically through an acp connect

2686
01:49:16,480 --> 01:49:18,639
interface to the noc that's specified in

2687
01:49:18,639 --> 01:49:21,360
the acp rfc um of course nothing yet

2688
01:49:21,360 --> 01:49:23,760
happens then the operator enables the

2689
01:49:23,760 --> 01:49:26,000
service announcements for the acp right

2690
01:49:26,000 --> 01:49:26,719
so

2691
01:49:26,719 --> 01:49:28,639
those could simply be automatically by

2692
01:49:28,639 --> 01:49:31,520
the servers themselves using dns sd over

2693
01:49:31,520 --> 01:49:34,239
mdns or the service announcements are a

2694
01:49:34,239 --> 01:49:36,320
feature on that edge router the acp

2695
01:49:36,320 --> 01:49:38,480
connect when those existing servers

2696
01:49:38,480 --> 01:49:40,639
don't support dns sd

2697
01:49:40,639 --> 01:49:45,040
right so now all the acp nodes start

2698
01:49:45,040 --> 01:49:48,000
getting through the acp um the service

2699
01:49:48,000 --> 01:49:50,880
announcements um and they automatically

2700
01:49:50,880 --> 01:49:52,960
start their local agents the ntp agent

2701
01:49:52,960 --> 01:49:54,960
dns radius

2702
01:49:54,960 --> 01:49:57,760
so basically uh the asas for exactly

2703
01:49:57,760 --> 01:50:01,119
those infrastructure services

2704
01:50:01,119 --> 01:50:03,280
and yeah as i said from the operational

2705
01:50:03,280 --> 01:50:05,679
experience that is most important really

2706
01:50:05,679 --> 01:50:07,679
after you're connecting and enrolling

2707
01:50:07,679 --> 01:50:11,119
new devices into the ani

2708
01:50:11,119 --> 01:50:13,440
and again nothing of this will run

2709
01:50:13,440 --> 01:50:16,800
unless the operator explicitly you know

2710
01:50:16,800 --> 01:50:18,880
in the knock enables it right so that

2711
01:50:18,880 --> 01:50:21,119
there is no additional magic that

2712
01:50:21,119 --> 01:50:23,920
happens without the you know intent of

2713
01:50:23,920 --> 01:50:25,760
the operator and that is then very

2714
01:50:25,760 --> 01:50:26,960
easily done

2715
01:50:26,960 --> 01:50:30,400
on the servers or on the edge router

2716
01:50:30,400 --> 01:50:32,480
so now how do we

2717
01:50:32,480 --> 01:50:35,199
announce those services across the acp

2718
01:50:35,199 --> 01:50:37,199
well we have and we want to use grasp

2719
01:50:37,199 --> 01:50:39,599
across the acp but we do not want to

2720
01:50:39,599 --> 01:50:41,920
reinvent the wheel when there already is

2721
01:50:41,920 --> 01:50:43,599
a wheel and that will

2722
01:50:43,599 --> 01:50:46,239
exist and that is really you know the

2723
01:50:46,239 --> 01:50:48,560
service definitions that we have in dns

2724
01:50:48,560 --> 01:50:49,360
sd

2725
01:50:49,360 --> 01:50:51,280
um that has pretty much most of what we

2726
01:50:51,280 --> 01:50:54,000
need it has the services the services

2727
01:50:54,000 --> 01:50:56,960
name with the wonderful iana registries

2728
01:50:56,960 --> 01:50:58,480
and then a bunch of interesting

2729
01:50:58,480 --> 01:51:00,560
parameters service instance names

2730
01:51:00,560 --> 01:51:02,159
priority weight

2731
01:51:02,159 --> 01:51:04,480
tax parameters

2732
01:51:04,480 --> 01:51:06,800
none of this is actually specific to dns

2733
01:51:06,800 --> 01:51:09,840
dns is just the transport um

2734
01:51:09,840 --> 01:51:12,080
and yeah i just got some information on

2735
01:51:12,080 --> 01:51:13,840
are going to add about the history of

2736
01:51:13,840 --> 01:51:16,560
this this actually originated uh way

2737
01:51:16,560 --> 01:51:18,159
before ip and

2738
01:51:18,159 --> 01:51:21,199
apple's local talk as service

2739
01:51:21,199 --> 01:51:23,199
discovery and binding so

2740
01:51:23,199 --> 01:51:25,599
in the same way we're just trying to

2741
01:51:25,599 --> 01:51:29,040
decouple this now from the dns binding

2742
01:51:29,040 --> 01:51:31,280
so that we

2743
01:51:31,280 --> 01:51:32,080
can

2744
01:51:32,080 --> 01:51:34,080
use it across graphs where actually it

2745
01:51:34,080 --> 01:51:37,199
will hopefully become a lot easier um

2746
01:51:37,199 --> 01:51:39,679
and this is here um actually

2747
01:51:39,679 --> 01:51:41,679
how it would look like

2748
01:51:41,679 --> 01:51:44,800
in grasp so this is the draft uh eckerd

2749
01:51:44,800 --> 01:51:48,560
anima grasp dns ssd in dns the data for

2750
01:51:48,560 --> 01:51:50,719
a single service instance is split

2751
01:51:50,719 --> 01:51:53,360
across four or more resource records so

2752
01:51:53,360 --> 01:51:55,040
the quad a is to get the address

2753
01:51:55,040 --> 01:51:56,480
resolution

2754
01:51:56,480 --> 01:52:01,480
the cname pointer stuart go ahead

2755
01:52:02,320 --> 01:52:05,360
i just want to briefly say uh i support

2756
01:52:05,360 --> 01:52:06,800
this direction

2757
01:52:06,800 --> 01:52:09,679
uh your summary is exactly right

2758
01:52:09,679 --> 01:52:12,320
the key concept here

2759
01:52:12,320 --> 01:52:16,400
is the iana registry rfc 6335 i think if

2760
01:52:16,400 --> 01:52:18,719
that's right by memory uh and you're

2761
01:52:18,719 --> 01:52:20,239
absolutely right

2762
01:52:20,239 --> 01:52:23,280
the encoding of that into dns records is

2763
01:52:23,280 --> 01:52:25,440
useful in certain contexts

2764
01:52:25,440 --> 01:52:27,360
uh i can give you examples of other

2765
01:52:27,360 --> 01:52:30,159
contexts that are

2766
01:52:30,159 --> 01:52:31,920
not widely used outside of apple but

2767
01:52:31,920 --> 01:52:34,400
they are examples of what's been done

2768
01:52:34,400 --> 01:52:35,840
over bluetooth

2769
01:52:35,840 --> 01:52:38,560
the same namespace of service types is

2770
01:52:38,560 --> 01:52:41,520
used to describe ip services but over

2771
01:52:41,520 --> 01:52:43,520
bluetooth discovery frames which are not

2772
01:52:43,520 --> 01:52:45,679
dns formatted

2773
01:52:45,679 --> 01:52:48,639
and it's also used in peer-to-peer wi-fi

2774
01:52:48,639 --> 01:52:49,760
again

2775
01:52:49,760 --> 01:52:51,920
encoded and i don't know the details but

2776
01:52:51,920 --> 01:52:54,159
some kind of wi-fi public action frame

2777
01:52:54,159 --> 01:52:56,000
that's also not using dns format

2778
01:52:56,000 --> 01:52:58,400
messages so we do have a precedent

2779
01:52:58,400 --> 01:53:00,400
the key thing is not to invent a new

2780
01:53:00,400 --> 01:53:02,400
registry of service types that would be

2781
01:53:02,400 --> 01:53:05,040
really reinventing will for no reason

2782
01:53:05,040 --> 01:53:07,040
not only the the service types but also

2783
01:53:07,040 --> 01:53:08,880
the parameters that we have right

2784
01:53:08,880 --> 01:53:10,239
priority weight so that the whole

2785
01:53:10,239 --> 01:53:12,480
management of you have multiple service

2786
01:53:12,480 --> 01:53:14,880
instances how you think about redundancy

2787
01:53:14,880 --> 01:53:16,880
selection that that is as consistent as

2788
01:53:16,880 --> 01:53:18,080
we can get it

2789
01:53:18,080 --> 01:53:18,960
so

2790
01:53:18,960 --> 01:53:20,800
the the only thing that i figured out we

2791
01:53:20,800 --> 01:53:23,440
can add in the case of grasp is that we

2792
01:53:23,440 --> 01:53:25,360
have a notion of distance to the server

2793
01:53:25,360 --> 01:53:27,679
because we hop by hop forwarded which we

2794
01:53:27,679 --> 01:53:30,639
kind of always fail to do correctly in

2795
01:53:30,639 --> 01:53:33,360
multi-hop mdns that's been the pain but

2796
01:53:33,360 --> 01:53:35,520
so we've got the distance as

2797
01:53:35,520 --> 01:53:38,639
one added you know criteria we can use

2798
01:53:38,639 --> 01:53:40,480
which may not be applicable to all

2799
01:53:40,480 --> 01:53:42,480
environments but which would then only

2800
01:53:42,480 --> 01:53:44,080
be for

2801
01:53:44,080 --> 01:53:47,679
the acp case right so

2802
01:53:47,679 --> 01:53:48,480
in

2803
01:53:48,480 --> 01:53:50,800
in dns it's split up across a bunch of

2804
01:53:50,800 --> 01:53:51,760
different

2805
01:53:51,760 --> 01:53:53,840
resource records and that also means you

2806
01:53:53,840 --> 01:53:55,679
have multiple

2807
01:53:55,679 --> 01:53:57,599
back and forth hubs you need to go

2808
01:53:57,599 --> 01:53:58,639
through before you have all the

2809
01:53:58,639 --> 01:54:00,560
information if you haven't cached it in

2810
01:54:00,560 --> 01:54:02,560
before and then grasp it's really very

2811
01:54:02,560 --> 01:54:04,960
simple because because we can just for

2812
01:54:04,960 --> 01:54:06,480
the announcement of flooding service

2813
01:54:06,480 --> 01:54:09,040
information put everything into a single

2814
01:54:09,040 --> 01:54:10,880
grasp objective and that's what i've

2815
01:54:10,880 --> 01:54:12,320
shown you on the right hand side and if

2816
01:54:12,320 --> 01:54:14,480
you look at the words here you'll find

2817
01:54:14,480 --> 01:54:16,080
all the same things that you'll find

2818
01:54:16,080 --> 01:54:17,920
scattered around the

2819
01:54:17,920 --> 01:54:20,320
mdns solution like the

2820
01:54:20,320 --> 01:54:23,440
instance um the service priority weight

2821
01:54:23,440 --> 01:54:25,440
and then the additional extension and

2822
01:54:25,440 --> 01:54:28,320
extensive text things kv pairs so that's

2823
01:54:28,320 --> 01:54:30,560
all being mapped and then only the

2824
01:54:30,560 --> 01:54:31,760
distance

2825
01:54:31,760 --> 01:54:33,920
would be a new one that we can't really

2826
01:54:33,920 --> 01:54:37,520
map back to um mdns

2827
01:54:37,520 --> 01:54:40,320
so then the key part of reusing the

2828
01:54:40,320 --> 01:54:42,320
service registry so for the objective

2829
01:54:42,320 --> 01:54:44,159
names we have our own

2830
01:54:44,159 --> 01:54:46,639
registry so what i'm proposing here is a

2831
01:54:46,639 --> 01:54:49,119
little bit of a hacky thing which is

2832
01:54:49,119 --> 01:54:50,639
that um

2833
01:54:50,639 --> 01:54:54,159
if an objective has a grasp name of serv

2834
01:54:54,159 --> 01:54:55,520
dot name

2835
01:54:55,520 --> 01:54:58,400
then the name after that has to be a

2836
01:54:58,400 --> 01:55:00,880
name that was registered exactly in that

2837
01:55:00,880 --> 01:55:03,920
existing dns sd service registry right

2838
01:55:03,920 --> 01:55:06,320
and that basically then

2839
01:55:06,320 --> 01:55:08,800
gives us exactly the fact that when

2840
01:55:08,800 --> 01:55:11,119
you're using such a name you must use

2841
01:55:11,119 --> 01:55:13,199
this encoding format to announce it in

2842
01:55:13,199 --> 01:55:16,159
graph so that it stays in its definition

2843
01:55:16,159 --> 01:55:20,560
also compatible with a dns sd as far as

2844
01:55:20,560 --> 01:55:22,560
all the behavior and the parameters are

2845
01:55:22,560 --> 01:55:23,599
concerned

2846
01:55:23,599 --> 01:55:25,679
hold on a second michael do you have a

2847
01:55:25,679 --> 01:55:28,080
question

2848
01:55:28,719 --> 01:55:30,639
you'll raise your hand

2849
01:55:30,639 --> 01:55:32,240
like richardson

2850
01:55:32,240 --> 01:55:34,080
[Music]

2851
01:55:34,080 --> 01:55:36,639
um it's not really a clarifying question

2852
01:55:36,639 --> 01:55:38,480
michael richardson at the mic

2853
01:55:38,480 --> 01:55:40,800
um i did like um

2854
01:55:40,800 --> 01:55:43,840
carlos that you talked about dns

2855
01:55:43,840 --> 01:55:47,040
over the acp and names

2856
01:55:47,040 --> 01:55:49,440
and since we're using an ula

2857
01:55:49,440 --> 01:55:51,040
the reverse map

2858
01:55:51,040 --> 01:55:52,560
the only way to get the answers from the

2859
01:55:52,560 --> 01:55:54,719
reverse map is to use the local

2860
01:55:54,719 --> 01:55:57,199
recursive dns server because if you use

2861
01:55:57,199 --> 01:55:58,800
a public one of course you won't get

2862
01:55:58,800 --> 01:56:01,360
anything useful um

2863
01:56:01,360 --> 01:56:03,679
and so that's really important as to to

2864
01:56:03,679 --> 01:56:05,920
in your you know in your syslogs when

2865
01:56:05,920 --> 01:56:07,599
you're receiving them from other things

2866
01:56:07,599 --> 01:56:09,840
you'd like to put the name of the actual

2867
01:56:09,840 --> 01:56:11,760
machine not its

2868
01:56:11,760 --> 01:56:14,000
current you know the ip address that

2869
01:56:14,000 --> 01:56:17,760
currently happen to use to talk to you

2870
01:56:17,760 --> 01:56:20,320
so we actually need to think maybe

2871
01:56:20,320 --> 01:56:22,639
whether or not we want to do reverse map

2872
01:56:22,639 --> 01:56:25,920
updates using dns update using some sig

2873
01:56:25,920 --> 01:56:28,080
zero type key which of course we would

2874
01:56:28,080 --> 01:56:29,840
have to discover with grasp to find out

2875
01:56:29,840 --> 01:56:32,159
which server to update to

2876
01:56:32,159 --> 01:56:34,320
uh or whether or not we want to actually

2877
01:56:34,320 --> 01:56:38,320
do uh reverse map updates using grasp

2878
01:56:38,320 --> 01:56:40,320
yeah okay so that might be an

2879
01:56:40,320 --> 01:56:42,880
interesting asa that we might just find

2880
01:56:42,880 --> 01:56:45,440
that might be it might be easier most

2881
01:56:45,440 --> 01:56:47,679
people have a lot of difficulty getting

2882
01:56:47,679 --> 01:56:49,599
dns updates to work

2883
01:56:49,599 --> 01:56:50,480
um

2884
01:56:50,480 --> 01:56:53,040
outside of microsoft active directory

2885
01:56:53,040 --> 01:56:53,840
um

2886
01:56:53,840 --> 01:56:55,520
and there's some

2887
01:56:55,520 --> 01:56:57,280
subtle cryptographic reasons why it's

2888
01:56:57,280 --> 01:56:59,599
hard and needs to be that way but

2889
01:56:59,599 --> 01:57:01,599
uh we could we we should probably think

2890
01:57:01,599 --> 01:57:03,679
about whether or not what we want to do

2891
01:57:03,679 --> 01:57:05,280
and have an opinion on it seems like a

2892
01:57:05,280 --> 01:57:07,360
good service that the acp ought to do

2893
01:57:07,360 --> 01:57:08,400
which is

2894
01:57:08,400 --> 01:57:11,440
forward and reverse naming for the acp

2895
01:57:11,440 --> 01:57:12,639
things

2896
01:57:12,639 --> 01:57:14,560
in particular when you reach out and

2897
01:57:14,560 --> 01:57:17,280
want to ssh to

2898
01:57:17,280 --> 01:57:18,080
some

2899
01:57:18,080 --> 01:57:22,080
enterprise equipment across the planet

2900
01:57:22,480 --> 01:57:25,840
it might be actually useful if we

2901
01:57:25,840 --> 01:57:26,960
had a

2902
01:57:26,960 --> 01:57:28,639
opinion

2903
01:57:28,639 --> 01:57:31,360
we are opinionated as the about how you

2904
01:57:31,360 --> 01:57:34,800
named the uh that piece of equipment

2905
01:57:34,800 --> 01:57:38,080
such that you want to go through the acp

2906
01:57:38,080 --> 01:57:40,960
versus you name it such that you know

2907
01:57:40,960 --> 01:57:43,599
you'll just go over your public network

2908
01:57:43,599 --> 01:57:45,840
because there's reasons to do both and

2909
01:57:45,840 --> 01:57:47,679
sometimes you actually want to check if

2910
01:57:47,679 --> 01:57:49,119
the public network is working and

2911
01:57:49,119 --> 01:57:50,800
sometimes you actually want to check if

2912
01:57:50,800 --> 01:57:53,040
actually the machine is up in the in and

2913
01:57:53,040 --> 01:57:55,040
going through the acp is a better choice

2914
01:57:55,040 --> 01:57:57,280
because that is more likely to be

2915
01:57:57,280 --> 01:57:59,360
working so that's actually other side of

2916
01:57:59,360 --> 01:58:00,880
thing on the naming side we may actually

2917
01:58:00,880 --> 01:58:02,800
want to have some opinions that say you

2918
01:58:02,800 --> 01:58:04,320
know this is a really good way to do it

2919
01:58:04,320 --> 01:58:06,239
maybe this is you won't want to do it

2920
01:58:06,239 --> 01:58:08,320
everywhere but at least we would then be

2921
01:58:08,320 --> 01:58:09,920
creating a uh

2922
01:58:09,920 --> 01:58:12,159
you know

2923
01:58:14,080 --> 01:58:16,719
a convention about that and we could

2924
01:58:16,719 --> 01:58:18,080
argue a lot about the details but i

2925
01:58:18,080 --> 01:58:19,440
think that would be really useful to do

2926
01:58:19,440 --> 01:58:21,280
that i think that's something that

2927
01:58:21,280 --> 01:58:25,280
um this document could do i i fully

2928
01:58:25,280 --> 01:58:26,639
agree with the intention i think you

2929
01:58:26,639 --> 01:58:29,360
brought it up already once so i don't

2930
01:58:29,360 --> 01:58:31,280
think it belongs into either of these

2931
01:58:31,280 --> 01:58:32,880
two documents okay it would be a

2932
01:58:32,880 --> 01:58:34,480
separate document just because this is

2933
01:58:34,480 --> 01:58:36,719
really just services well no no but the

2934
01:58:36,719 --> 01:58:38,480
cert but some of the new services that

2935
01:58:38,480 --> 01:58:40,320
we actually might want to say that need

2936
01:58:40,320 --> 01:58:41,679
to exist

2937
01:58:41,679 --> 01:58:43,920
is is this kind of stuff and then we

2938
01:58:43,920 --> 01:58:45,599
would have to point to something else

2939
01:58:45,599 --> 01:58:46,960
that actually implemented them that's

2940
01:58:46,960 --> 01:58:48,400
what i'm trying to say

2941
01:58:48,400 --> 01:58:50,239
meaning it's like

2942
01:58:50,239 --> 01:58:52,480
don't don't bring up an acp

2943
01:58:52,480 --> 01:58:54,080
and not turn on these services that

2944
01:58:54,080 --> 01:58:56,320
would be silly right but i think you're

2945
01:58:56,320 --> 01:58:58,159
going one step further right so i mean

2946
01:58:58,159 --> 01:59:01,199
i'm just trying to discover the services

2947
01:59:01,199 --> 01:59:04,080
there and yeah i i i'll have to think

2948
01:59:04,080 --> 01:59:05,679
more about what i think is the good

2949
01:59:05,679 --> 01:59:06,800
logical

2950
01:59:06,800 --> 01:59:09,040
separation line between

2951
01:59:09,040 --> 01:59:10,880
different pieces of work so that each of

2952
01:59:10,880 --> 01:59:13,360
them can best be reused without

2953
01:59:13,360 --> 01:59:15,920
creating unnecessary dependencies yeah

2954
01:59:15,920 --> 01:59:17,040
thank you

2955
01:59:17,040 --> 01:59:18,400
all right so

2956
01:59:18,400 --> 01:59:20,320
how do we operationalize the whole thing

2957
01:59:20,320 --> 01:59:22,159
so ideally

2958
01:59:22,159 --> 01:59:24,639
if we think about you know we write asa

2959
01:59:24,639 --> 01:59:26,560
so whatever it is we introduce an

2960
01:59:26,560 --> 01:59:28,880
application api

2961
01:59:28,880 --> 01:59:30,480
through which service announcement and

2962
01:59:30,480 --> 01:59:32,880
discoveries can be made and i'm thinking

2963
01:59:32,880 --> 01:59:35,440
about whether we can have just a very

2964
01:59:35,440 --> 01:59:37,599
simple you know announce discover

2965
01:59:37,599 --> 01:59:40,880
abstract api specification in the draft

2966
01:59:40,880 --> 01:59:43,920
and then the api library can actually

2967
01:59:43,920 --> 01:59:46,960
select whether to use grasp or dns

2968
01:59:46,960 --> 01:59:48,800
as an implementation choice maybe by

2969
01:59:48,800 --> 01:59:50,719
automatically discovering the context

2970
01:59:50,719 --> 01:59:53,280
well i do have an acp let me use graph

2971
01:59:53,280 --> 01:59:55,679
otherwise use let me use dns

2972
01:59:55,679 --> 01:59:59,440
on the acp router

2973
01:59:59,440 --> 02:00:01,679
it's easy to announce a simple

2974
02:00:01,679 --> 02:00:03,520
sorry to configure a simple announcer

2975
02:00:03,520 --> 02:00:05,599
for the services if you do have legacy

2976
02:00:05,599 --> 02:00:08,239
existing services that can't do dns sd

2977
02:00:08,239 --> 02:00:11,360
otherwise it would be a grass dns sd to

2978
02:00:11,360 --> 02:00:13,199
mdns gateway

2979
02:00:13,199 --> 02:00:15,119
brian carpenter had already played

2980
02:00:15,119 --> 02:00:16,719
around a little bit and started to do

2981
02:00:16,719 --> 02:00:18,719
that not sure how far he had gotten on

2982
02:00:18,719 --> 02:00:21,040
the mdns side there

2983
02:00:21,040 --> 02:00:22,400
and then

2984
02:00:22,400 --> 02:00:25,119
as i started to allude to earlier

2985
02:00:25,119 --> 02:00:26,960
this objective format with all these

2986
02:00:26,960 --> 02:00:30,000
parameters in its standardized fashion

2987
02:00:30,000 --> 02:00:30,960
must

2988
02:00:30,960 --> 02:00:34,000
be used when you use the serve.name and

2989
02:00:34,000 --> 02:00:35,520
you must then

2990
02:00:35,520 --> 02:00:38,159
use that as a registered name in the

2991
02:00:38,159 --> 02:00:41,360
service registry and this must be used

2992
02:00:41,360 --> 02:00:45,040
when you want to have a service not only

2993
02:00:45,040 --> 02:00:47,760
visible in grass but where you want it

2994
02:00:47,760 --> 02:00:49,679
possibly across a different type of

2995
02:00:49,679 --> 02:00:50,960
transports

2996
02:00:50,960 --> 02:00:52,480
so i think

2997
02:00:52,480 --> 02:00:55,199
brian gave a good counter example

2998
02:00:55,199 --> 02:00:57,440
brian gave an example of an objective

2999
02:00:57,440 --> 02:00:59,119
that was just meant to give service

3000
02:00:59,119 --> 02:01:01,040
parameters that are specifically to

3001
02:01:01,040 --> 02:01:02,639
grasp itself

3002
02:01:02,639 --> 02:01:05,199
for those type of things it wouldn't be

3003
02:01:05,199 --> 02:01:07,520
necessary or beneficial to to use the

3004
02:01:07,520 --> 02:01:10,239
serve.name thing because it's specific

3005
02:01:10,239 --> 02:01:12,719
to the grass protocol

3006
02:01:12,719 --> 02:01:14,480
all right so summary

3007
02:01:14,480 --> 02:01:17,119
proposal is for the two bra two drafts

3008
02:01:17,119 --> 02:01:18,159
which are

3009
02:01:18,159 --> 02:01:19,599
serving

3010
02:01:19,599 --> 02:01:22,000
very much combined goals but independent

3011
02:01:22,000 --> 02:01:23,920
of each other the first one is the

3012
02:01:23,920 --> 02:01:26,480
encoding in grasp of

3013
02:01:26,480 --> 02:01:29,119
service specif service specifications

3014
02:01:29,119 --> 02:01:31,840
that are compatible with the dns

3015
02:01:31,840 --> 02:01:34,800
sd service specifications

3016
02:01:34,800 --> 02:01:37,440
including that definition of the binding

3017
02:01:37,440 --> 02:01:39,520
between the grasp objective registry and

3018
02:01:39,520 --> 02:01:41,840
the service registry by coming up with

3019
02:01:41,840 --> 02:01:44,000
the surf.name

3020
02:01:44,000 --> 02:01:46,639
and the second one being the

3021
02:01:46,639 --> 02:01:50,080
services dns auto config which is really

3022
02:01:50,080 --> 02:01:52,239
ultimately a specification of a few

3023
02:01:52,239 --> 02:01:53,920
basic asas

3024
02:01:53,920 --> 02:01:56,560
for the a i itself to operate

3025
02:01:56,560 --> 02:01:58,480
autonomously come up

3026
02:01:58,480 --> 02:02:00,400
up to the point

3027
02:02:00,400 --> 02:02:02,639
where you can remotely manage it from an

3028
02:02:02,639 --> 02:02:05,040
sdn controller so it's an asa to start

3029
02:02:05,040 --> 02:02:09,360
syslog ntp sshd netconf call home dns

3030
02:02:09,360 --> 02:02:11,199
resolver and radius authentication

3031
02:02:11,199 --> 02:02:14,159
client right so a bunch of the most core

3032
02:02:14,159 --> 02:02:17,840
asa we can think of and that is using

3033
02:02:17,840 --> 02:02:20,719
for its own auto configuration those um

3034
02:02:20,719 --> 02:02:22,880
dns sd compatible

3035
02:02:22,880 --> 02:02:26,000
grasp service discoveries

3036
02:02:26,000 --> 02:02:28,239
so that's it really um really would like

3037
02:02:28,239 --> 02:02:29,920
to see adoption call for these two

3038
02:02:29,920 --> 02:02:32,719
drafts um from to the working group and

3039
02:02:32,719 --> 02:02:35,599
yeah please read the drafts comment on

3040
02:02:35,599 --> 02:02:38,000
them and then chime in when we have such

3041
02:02:38,000 --> 02:02:40,800
an adoption call

3042
02:02:41,040 --> 02:02:42,639
hi teres

3043
02:02:42,639 --> 02:02:45,360
we're two minutes over that is a big

3044
02:02:45,360 --> 02:02:48,719
no-no here in the ietf we're so sorry

3045
02:02:48,719 --> 02:02:51,599
you must allow me to to say something

3046
02:02:51,599 --> 02:02:53,840
because i would be the chair

3047
02:02:53,840 --> 02:02:54,800
to

3048
02:02:54,800 --> 02:02:58,400
launch the docking code if right lead it

3049
02:02:58,400 --> 02:03:01,360
yeah um without my

3050
02:03:01,360 --> 02:03:03,119
any mature head

3051
02:03:03,119 --> 02:03:05,520
i suppose this works that's very useful

3052
02:03:05,520 --> 02:03:07,280
work and i

3053
02:03:07,280 --> 02:03:09,599
think that would benefit the autonomic

3054
02:03:09,599 --> 02:03:10,800
network

3055
02:03:10,800 --> 02:03:12,400
in total

3056
02:03:12,400 --> 02:03:13,199
but

3057
02:03:13,199 --> 02:03:14,400
put my

3058
02:03:14,400 --> 02:03:15,520
work group

3059
02:03:15,520 --> 02:03:16,960
chair hat on

3060
02:03:16,960 --> 02:03:18,239
i have two

3061
02:03:18,239 --> 02:03:19,360
small

3062
02:03:19,360 --> 02:03:21,760
uh concerns here

3063
02:03:21,760 --> 02:03:24,480
one is you know apart from the

3064
02:03:24,480 --> 02:03:26,320
presentation you're giving in the

3065
02:03:26,320 --> 02:03:27,599
meetings

3066
02:03:27,599 --> 02:03:29,840
i would like to see more discussing in

3067
02:03:29,840 --> 02:03:31,280
many lists

3068
02:03:31,280 --> 02:03:32,480
right

3069
02:03:32,480 --> 02:03:33,599
you'll maybe

3070
02:03:33,599 --> 02:03:34,480
ask

3071
02:03:34,480 --> 02:03:35,599
somebody

3072
02:03:35,599 --> 02:03:40,800
uh to review the uh to draft and

3073
02:03:40,840 --> 02:03:44,239
publish his comments in the mailing list

3074
02:03:44,239 --> 02:03:46,000
right

3075
02:03:46,000 --> 02:03:47,520
second

3076
02:03:47,520 --> 02:03:50,719
i'm slightly worried you are

3077
02:03:50,719 --> 02:03:53,360
overloaded a lot

3078
02:03:53,360 --> 02:03:56,079
you should probably do some documents

3079
02:03:56,079 --> 02:03:57,070
sheffield first

3080
02:03:57,070 --> 02:03:59,760
[Laughter]

3081
02:03:59,760 --> 02:04:02,400
joking um yeah but

3082
02:04:02,400 --> 02:04:03,360
but

3083
02:04:03,360 --> 02:04:05,599
yeah i i would like you to get

3084
02:04:05,599 --> 02:04:07,360
guaranteed for

3085
02:04:07,360 --> 02:04:09,040
enough

3086
02:04:09,040 --> 02:04:10,480
energy on this

3087
02:04:10,480 --> 02:04:11,840
uh if we

3088
02:04:11,840 --> 02:04:13,119
you know

3089
02:04:13,119 --> 02:04:16,480
uh gone to doctors to draft

3090
02:04:16,480 --> 02:04:17,679
right

3091
02:04:17,679 --> 02:04:21,360
yeah let's take that on the main list

3092
02:04:21,360 --> 02:04:24,360
okay

3093
02:04:24,880 --> 02:04:26,239
right any uh do you want to do the

3094
02:04:26,239 --> 02:04:28,000
closing remarks for the for for the

3095
02:04:28,000 --> 02:04:30,800
working meeting

3096
02:04:31,119 --> 02:04:34,480
fine we have already over time and we

3097
02:04:34,480 --> 02:04:36,719
have very good meeting this week

3098
02:04:36,719 --> 02:04:40,719
thanks all for your time and hopefully

3099
02:04:40,719 --> 02:04:44,480
see you next meeting on site or remote

3100
02:04:44,480 --> 02:04:45,599
thanks

3101
02:04:45,599 --> 02:04:48,760
thank you

3102
02:04:52,480 --> 02:04:55,559
all right

3103
02:05:12,960 --> 02:05:15,960
um

3104
02:05:19,160 --> 02:05:23,330
[Music]

3105
02:05:27,920 --> 02:05:30,000
thank you for all your work

3106
02:05:30,000 --> 02:05:33,000
likewise

3107
02:05:41,599 --> 02:05:44,599
um

3108
02:05:49,440 --> 02:05:52,440
um

