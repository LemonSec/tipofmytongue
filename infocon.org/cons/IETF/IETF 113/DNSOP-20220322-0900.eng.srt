1
00:00:14,000 --> 00:00:17,920
we do have some technical problems

2
00:00:17,920 --> 00:00:20,240
for the presenter

3
00:00:20,240 --> 00:00:24,240
the cable is stable

4
00:00:25,760 --> 00:00:27,599
okay

5
00:00:27,599 --> 00:00:30,760
all right

6
00:00:52,960 --> 00:00:53,760
so

7
00:00:53,760 --> 00:00:56,960
we're still setting up

8
00:00:57,520 --> 00:01:00,160
uh the presenter screen can somebody

9
00:01:00,160 --> 00:01:01,760
raise his hand

10
00:01:01,760 --> 00:01:04,319
in remote and so we can test the mic

11
00:01:04,319 --> 00:01:05,438
line

12
00:01:05,438 --> 00:01:10,520
paul please go ahead can you speak

13
00:01:13,760 --> 00:01:15,360
okay we

14
00:01:15,360 --> 00:01:17,840
we don't hear you yet okay good let me

15
00:01:17,840 --> 00:01:20,159
check this

16
00:01:20,159 --> 00:01:22,479
okay

17
00:01:43,720 --> 00:01:46,860
[Music]

18
00:01:51,600 --> 00:01:53,680
sure i can try can you hear me

19
00:01:53,680 --> 00:01:56,399
okay yeah we hear you yeah okay maybe

20
00:01:56,399 --> 00:01:58,399
it's false audio yeah

21
00:01:58,399 --> 00:02:00,719
okay

22
00:02:01,520 --> 00:02:03,839
all right

23
00:02:05,040 --> 00:02:09,799
yeah would be testing testing

24
00:02:10,250 --> 00:02:13,330
[Music]

25
00:02:20,480 --> 00:02:23,120
yeah

26
00:02:23,120 --> 00:02:26,400
paul can you try again

27
00:02:28,160 --> 00:02:30,480
okay

28
00:02:32,160 --> 00:02:35,160
okay

29
00:02:37,200 --> 00:02:39,518
okay

30
00:02:41,200 --> 00:02:44,079
we get started

31
00:02:46,239 --> 00:02:48,640
yeah okay another test

32
00:02:48,640 --> 00:02:51,839
from the room

33
00:02:55,040 --> 00:02:57,519
yeah that one seems to work

34
00:02:57,519 --> 00:02:59,760
yeah

35
00:03:00,080 --> 00:03:03,080
okay

36
00:03:08,319 --> 00:03:10,239
okay welcome

37
00:03:10,239 --> 00:03:13,120
this is the dns working group dynastop

38
00:03:13,120 --> 00:03:14,560
working group

39
00:03:14,560 --> 00:03:18,400
and next slide please

40
00:03:18,400 --> 00:03:20,720
so the chairs

41
00:03:20,720 --> 00:03:23,360
tim vicinski suzanne

42
00:03:23,360 --> 00:03:26,400
uh and myself benno alexander here is

43
00:03:26,400 --> 00:03:28,959
the so-called delegate it's help he's

44
00:03:28,959 --> 00:03:31,760
helping us uh with the practical

45
00:03:31,760 --> 00:03:34,319
issues and things of running at the the

46
00:03:34,319 --> 00:03:36,159
hybrid session

47
00:03:36,159 --> 00:03:39,040
uh warren is our ad sitting in front of

48
00:03:39,040 --> 00:03:40,480
here

49
00:03:40,480 --> 00:03:42,799
we have a jabber scribe which is suzanne

50
00:03:42,799 --> 00:03:44,799
and we have the note taker the midi

51
00:03:44,799 --> 00:03:46,640
taker and this paul hoffman thank you

52
00:03:46,640 --> 00:03:49,840
very much next slide

53
00:03:49,840 --> 00:03:52,480
we assume that you are all aware of the

54
00:03:52,480 --> 00:03:55,680
note well next slide

55
00:03:55,680 --> 00:03:58,959
and we also like to mention the

56
00:03:58,959 --> 00:04:00,959
code of conduct

57
00:04:00,959 --> 00:04:04,239
here at the itf

58
00:04:04,239 --> 00:04:06,400
well the short version is be kind and be

59
00:04:06,400 --> 00:04:08,720
respectful to each other

60
00:04:08,720 --> 00:04:09,920
if you

61
00:04:09,920 --> 00:04:11,840
find with your interactions on mailing

62
00:04:11,840 --> 00:04:14,159
list or one-on-one communications the

63
00:04:14,159 --> 00:04:16,000
lines here the code of conduct is not

64
00:04:16,000 --> 00:04:17,040
followed

65
00:04:17,040 --> 00:04:19,440
please contact the dynastop chairs

66
00:04:19,440 --> 00:04:22,240
and i also want to mention there is an

67
00:04:22,240 --> 00:04:25,040
ombuds team so if you have questions and

68
00:04:25,040 --> 00:04:29,840
guidance and support okay next slide

69
00:04:30,639 --> 00:04:33,360
um yeah so we are now running a hybrid

70
00:04:33,360 --> 00:04:34,720
uh meeting

71
00:04:34,720 --> 00:04:36,639
in uh after two and a half years thanks

72
00:04:36,639 --> 00:04:38,720
yeah we i don't have the

73
00:04:38,720 --> 00:04:42,960
slight display in front of me um

74
00:04:42,960 --> 00:04:45,600
for all in person

75
00:04:45,600 --> 00:04:47,600
attendees here in the room

76
00:04:47,600 --> 00:04:49,840
uh if you want to go to the mic maybe

77
00:04:49,840 --> 00:04:51,680
you already learned that yesterday but i

78
00:04:51,680 --> 00:04:53,919
want to repeat that if you go to the mic

79
00:04:53,919 --> 00:04:56,240
you have to raise your hand on your

80
00:04:56,240 --> 00:04:59,440
telephone so everyone in the room even

81
00:04:59,440 --> 00:05:00,960
though you're not intend to go to the

82
00:05:00,960 --> 00:05:03,039
bike though please register with the

83
00:05:03,039 --> 00:05:04,320
following

84
00:05:04,320 --> 00:05:07,520
quad code because it also

85
00:05:07,520 --> 00:05:10,479
resists you as being as attending the

86
00:05:10,479 --> 00:05:11,840
the dinosaur

87
00:05:11,840 --> 00:05:14,560
meeting so it's the blue sheet

88
00:05:14,560 --> 00:05:16,960
also

89
00:05:17,520 --> 00:05:19,759
thank you

90
00:05:19,759 --> 00:05:23,120
yeah next slide

91
00:05:23,280 --> 00:05:26,320
so for the document updates uh

92
00:05:26,320 --> 00:05:27,120
tim

93
00:05:27,120 --> 00:05:29,600
uh or the dinosaur chairs did send an

94
00:05:29,600 --> 00:05:30,560
email

95
00:05:30,560 --> 00:05:32,720
yesterday this morning

96
00:05:32,720 --> 00:05:35,120
about the status updates we want to keep

97
00:05:35,120 --> 00:05:37,600
it brief because we have a full

98
00:05:37,600 --> 00:05:41,440
agenda so we rather reserve the time

99
00:05:41,440 --> 00:05:44,000
for the presenters

100
00:05:44,000 --> 00:05:46,240
week so next slide

101
00:05:46,240 --> 00:05:48,639
we did finish

102
00:05:48,639 --> 00:05:50,800
dynasec ayanna considerations it's

103
00:05:50,800 --> 00:05:52,479
published as rfc

104
00:05:52,479 --> 00:05:55,280
and also dns tcp requirements has been

105
00:05:55,280 --> 00:05:57,280
published as an rfc

106
00:05:57,280 --> 00:06:00,400
okay next slide please

107
00:06:01,759 --> 00:06:05,039
svcp https service binding

108
00:06:05,039 --> 00:06:08,639
it's still in ist call there are some um

109
00:06:08,639 --> 00:06:12,000
well discussion in the isd a new id is

110
00:06:12,000 --> 00:06:15,360
asked by the ise and the process is

111
00:06:15,360 --> 00:06:16,639
going forward

112
00:06:16,639 --> 00:06:21,080
um yes next slide

113
00:06:21,280 --> 00:06:22,800
yeah so

114
00:06:22,800 --> 00:06:25,039
the interims

115
00:06:25,039 --> 00:06:27,680
we had scheduled two interims between

116
00:06:27,680 --> 00:06:28,919
the itf

117
00:06:28,919 --> 00:06:31,919
112 and 113 this one

118
00:06:31,919 --> 00:06:34,560
it seems to work quite well for us

119
00:06:34,560 --> 00:06:36,240
so we uh

120
00:06:36,240 --> 00:06:37,199
planned

121
00:06:37,199 --> 00:06:39,840
one or two drafts in an uh into a

122
00:06:39,840 --> 00:06:42,319
meeting of an hour so we can discuss it

123
00:06:42,319 --> 00:06:43,840
in detail

124
00:06:43,840 --> 00:06:45,440
it worked well for us and we are also

125
00:06:45,440 --> 00:06:46,720
planning to

126
00:06:46,720 --> 00:06:49,440
plan to one or two ite sorry interim

127
00:06:49,440 --> 00:06:52,240
meetings between the current itf meeting

128
00:06:52,240 --> 00:06:53,520
and the next one

129
00:06:53,520 --> 00:06:55,520
in in july

130
00:06:55,520 --> 00:06:56,639
um

131
00:06:56,639 --> 00:06:59,280
yeah next slide

132
00:06:59,280 --> 00:07:02,400
um yeah this is important slide to

133
00:07:02,400 --> 00:07:03,919
mention and

134
00:07:03,919 --> 00:07:07,919
there are questions feel free to ask

135
00:07:08,160 --> 00:07:09,440
we

136
00:07:09,440 --> 00:07:12,319
didn't adopt any new work in the past

137
00:07:12,319 --> 00:07:14,400
one and a half year one year one half

138
00:07:14,400 --> 00:07:17,599
year there were two well quite a lot of

139
00:07:17,599 --> 00:07:20,639
active dynastop working group documents

140
00:07:20,639 --> 00:07:23,120
and it was difficult to make progress

141
00:07:23,120 --> 00:07:26,319
with all documents

142
00:07:26,319 --> 00:07:28,479
in being active documents in the working

143
00:07:28,479 --> 00:07:29,599
group

144
00:07:29,599 --> 00:07:30,479
so

145
00:07:30,479 --> 00:07:32,880
in the past year we finished a number of

146
00:07:32,880 --> 00:07:34,319
the working group documents we're in

147
00:07:34,319 --> 00:07:36,319
good shape i think that the top chairs

148
00:07:36,319 --> 00:07:39,039
think we can go forward adopting new

149
00:07:39,039 --> 00:07:40,319
work and also

150
00:07:40,319 --> 00:07:42,479
warrant our area director i think we're

151
00:07:42,479 --> 00:07:45,680
in good shape so we did a survey about

152
00:07:45,680 --> 00:07:48,000
which working group documents were or

153
00:07:48,000 --> 00:07:50,000
potential working group documents are of

154
00:07:50,000 --> 00:07:51,680
great interest

155
00:07:51,680 --> 00:07:54,800
from the first survey

156
00:07:55,120 --> 00:07:59,120
four four five months ago the dinosaur

157
00:07:59,120 --> 00:08:02,080
dinosaur bootstrapping and the dinosaur

158
00:08:02,080 --> 00:08:04,560
automation drafts were selected as the

159
00:08:04,560 --> 00:08:07,120
most relevant or

160
00:08:07,120 --> 00:08:09,280
there were the drafts that got the most

161
00:08:09,280 --> 00:08:12,000
interest from the dinosaur working group

162
00:08:12,000 --> 00:08:14,879
so we will start at dinus op call for

163
00:08:14,879 --> 00:08:16,160
adoption

164
00:08:16,160 --> 00:08:18,160
later this week

165
00:08:18,160 --> 00:08:20,240
for these two drafts

166
00:08:20,240 --> 00:08:24,240
besides that of course there's new work

167
00:08:24,240 --> 00:08:26,400
presented today there's

168
00:08:26,400 --> 00:08:29,120
discussions on the mailing list

169
00:08:29,120 --> 00:08:32,000
that's good but we will

170
00:08:32,000 --> 00:08:33,679
[Music]

171
00:08:33,679 --> 00:08:35,599
have another survey

172
00:08:35,599 --> 00:08:38,159
for the working group to fill in

173
00:08:38,159 --> 00:08:41,120
to indicate which drafts the audience

174
00:08:41,120 --> 00:08:43,279
the the participants find interesting

175
00:08:43,279 --> 00:08:45,040
and find work relevant for the working

176
00:08:45,040 --> 00:08:47,040
group so we can make another selection

177
00:08:47,040 --> 00:08:48,640
for new work

178
00:08:48,640 --> 00:08:51,760
so we want to prioritize our work also

179
00:08:51,760 --> 00:08:52,800
in

180
00:08:52,800 --> 00:08:54,640
coordination or with feedback from the

181
00:08:54,640 --> 00:08:57,120
genus of working group

182
00:08:57,120 --> 00:08:58,160
um

183
00:08:58,160 --> 00:09:00,080
yes thank you maybe

184
00:09:00,080 --> 00:09:02,800
you want to mention something yeah

185
00:09:02,800 --> 00:09:05,360
next slide

186
00:09:05,360 --> 00:09:08,399
yeah indeed it's also a word from warren

187
00:09:08,399 --> 00:09:12,480
huh that screen still doesn't sorry yeah

188
00:09:13,120 --> 00:09:16,480
um so warren kumari um

189
00:09:16,480 --> 00:09:18,640
so bino in the chairs just went through

190
00:09:18,640 --> 00:09:20,000
like a long

191
00:09:20,000 --> 00:09:21,519
thing on you know we should do stuff

192
00:09:21,519 --> 00:09:22,880
with the working group and make sure the

193
00:09:22,880 --> 00:09:24,480
working group has all the consensus and

194
00:09:24,480 --> 00:09:25,920
blah blah blah

195
00:09:25,920 --> 00:09:28,000
and that's a great idea

196
00:09:28,000 --> 00:09:30,240
but what i would really like

197
00:09:30,240 --> 00:09:32,160
is if we could also do something in

198
00:09:32,160 --> 00:09:33,200
addition

199
00:09:33,200 --> 00:09:36,720
there has been some discussion on a bcp

200
00:09:36,720 --> 00:09:38,560
on dns sec

201
00:09:38,560 --> 00:09:40,480
and there was some discussion in that on

202
00:09:40,480 --> 00:09:42,080
maybe we just start up a really

203
00:09:42,080 --> 00:09:44,000
short-lived working group just to do the

204
00:09:44,000 --> 00:09:46,880
dns sec as a bcp document

205
00:09:46,880 --> 00:09:49,279
and i sort of discussed that with the

206
00:09:49,279 --> 00:09:50,720
isg

207
00:09:50,720 --> 00:09:53,040
and there was some feedback that that

208
00:09:53,040 --> 00:09:56,480
sounds like a lot of admin work and faff

209
00:09:56,480 --> 00:09:57,200
so

210
00:09:57,200 --> 00:10:00,399
what would be nice is if we could do

211
00:10:00,399 --> 00:10:01,839
this whole process with you know the

212
00:10:01,839 --> 00:10:03,440
survey and

213
00:10:03,440 --> 00:10:06,160
the working group has you know provides

214
00:10:06,160 --> 00:10:09,279
advice on what how we prioritize stuff

215
00:10:09,279 --> 00:10:11,760
but if we could also maybe please do the

216
00:10:11,760 --> 00:10:14,640
bcp on dns sec and do that with a really

217
00:10:14,640 --> 00:10:16,399
high priority and bump it to the front

218
00:10:16,399 --> 00:10:19,040
of the queue and so i'm sort of asking

219
00:10:19,040 --> 00:10:21,519
the working group for a favor of

220
00:10:21,519 --> 00:10:23,200
if it would mind considering that

221
00:10:23,200 --> 00:10:24,880
there's been a fair bit of feedback that

222
00:10:24,880 --> 00:10:27,360
a bcp on dnsec would be good

223
00:10:27,360 --> 00:10:29,360
and so you know i would really like it

224
00:10:29,360 --> 00:10:30,640
if we could do that

225
00:10:30,640 --> 00:10:32,959
do it as a fast track thing and sort of

226
00:10:32,959 --> 00:10:35,120
move it to the front of the queue of how

227
00:10:35,120 --> 00:10:37,040
we prioritize stuff

228
00:10:37,040 --> 00:10:37,920
so

229
00:10:37,920 --> 00:10:39,920
hopefully we can do that

230
00:10:39,920 --> 00:10:42,640
thank you thank you warren

231
00:10:42,640 --> 00:10:44,160
okay

232
00:10:44,160 --> 00:10:45,040
yeah

233
00:10:45,040 --> 00:10:47,839
next slide

234
00:10:49,600 --> 00:10:51,920
yep so document status

235
00:10:51,920 --> 00:10:54,320
the document status has been

236
00:10:54,320 --> 00:10:58,320
sent as an email to the mailing list

237
00:10:58,320 --> 00:11:00,079
if you have further questions please

238
00:11:00,079 --> 00:11:02,079
contact the chairs or discuss this on

239
00:11:02,079 --> 00:11:03,920
the mailing list

240
00:11:03,920 --> 00:11:06,560
yeah okay thank you

241
00:11:06,560 --> 00:11:08,720
all our work is on data tracker and in

242
00:11:08,720 --> 00:11:09,760
github

243
00:11:09,760 --> 00:11:11,360
so

244
00:11:11,360 --> 00:11:13,440
there are references and urls also in

245
00:11:13,440 --> 00:11:15,360
the agenda where we

246
00:11:15,360 --> 00:11:18,560
organize our work next slide please

247
00:11:18,560 --> 00:11:19,760
so this is a little bit out of the

248
00:11:19,760 --> 00:11:22,480
ordinary but it's relevant to the call

249
00:11:22,480 --> 00:11:23,760
for adoption

250
00:11:23,760 --> 00:11:26,480
of dynasac automation i would like to

251
00:11:26,480 --> 00:11:28,880
ask ulrich

252
00:11:28,880 --> 00:11:31,279
for three to four minutes he promised

253
00:11:31,279 --> 00:11:32,959
yeah yeah

254
00:11:32,959 --> 00:11:34,240
so

255
00:11:34,240 --> 00:11:37,600
yeah it's not an agenda

256
00:11:37,600 --> 00:11:39,040
no problem i think i know what's on the

257
00:11:39,040 --> 00:11:39,920
slide

258
00:11:39,920 --> 00:11:42,000
okay hello my name is i work for the

259
00:11:42,000 --> 00:11:43,839
swedish internet registry

260
00:11:43,839 --> 00:11:44,720
um

261
00:11:44,720 --> 00:11:46,880
yes so we you probably have heard us

262
00:11:46,880 --> 00:11:48,800
talk about the multi sign up

263
00:11:48,800 --> 00:11:51,200
dns automation

264
00:11:51,200 --> 00:11:53,519
and one of the problems is that for

265
00:11:53,519 --> 00:11:55,600
multisigner bose

266
00:11:55,600 --> 00:11:57,839
or several signers need to support the

267
00:11:57,839 --> 00:11:59,360
same algorithm

268
00:11:59,360 --> 00:11:59,900
and

269
00:11:59,900 --> 00:12:01,040
[Music]

270
00:12:01,040 --> 00:12:02,639
well if you uh

271
00:12:02,639 --> 00:12:04,639
if you own a domain name

272
00:12:04,639 --> 00:12:06,079
and let's if

273
00:12:06,079 --> 00:12:08,079
you're in the size of the coca-colas and

274
00:12:08,079 --> 00:12:10,480
stuff of this world then you probably

275
00:12:10,480 --> 00:12:11,839
can

276
00:12:11,839 --> 00:12:13,680
persuade your service providers to

277
00:12:13,680 --> 00:12:15,920
support the algorithms you want but for

278
00:12:15,920 --> 00:12:18,399
the rest of us that's not the case and

279
00:12:18,399 --> 00:12:19,200
so

280
00:12:19,200 --> 00:12:20,800
if you want to move your domains and

281
00:12:20,800 --> 00:12:22,800
your service providers have a distinct

282
00:12:22,800 --> 00:12:24,560
set of algorithms

283
00:12:24,560 --> 00:12:26,399
we would need to do something to be able

284
00:12:26,399 --> 00:12:29,519
to move these domains and uh

285
00:12:29,519 --> 00:12:31,279
there's

286
00:12:31,279 --> 00:12:34,959
yeah so right now the rfcs requires to

287
00:12:34,959 --> 00:12:37,600
be that there'll be signatures of all

288
00:12:37,600 --> 00:12:39,680
the algorithms that are in the dns key

289
00:12:39,680 --> 00:12:40,560
set

290
00:12:40,560 --> 00:12:41,360
and

291
00:12:41,360 --> 00:12:44,000
that can be done in the if the signers

292
00:12:44,000 --> 00:12:45,440
don't support all the algorithms

293
00:12:45,440 --> 00:12:46,720
obviously

294
00:12:46,720 --> 00:12:49,519
and so we would need to adjust the dns

295
00:12:49,519 --> 00:12:51,200
sec rc

296
00:12:51,200 --> 00:12:53,360
but we would have to do some additional

297
00:12:53,360 --> 00:12:54,240
work

298
00:12:54,240 --> 00:12:55,040
and

299
00:12:55,040 --> 00:12:57,200
right now it is not not really clear how

300
00:12:57,200 --> 00:12:58,480
to do that

301
00:12:58,480 --> 00:13:01,440
and we need to discuss that and uh yeah

302
00:13:01,440 --> 00:13:02,800
we started some discussions on the

303
00:13:02,800 --> 00:13:03,920
mailing list

304
00:13:03,920 --> 00:13:06,160
and i would like for more people to join

305
00:13:06,160 --> 00:13:07,200
in and

306
00:13:07,200 --> 00:13:09,839
see if we can solve this problem

307
00:13:09,839 --> 00:13:11,279
thank you thank you

308
00:13:11,279 --> 00:13:13,360
yeah

309
00:13:13,360 --> 00:13:17,040
um next slide we're almost done agenda

310
00:13:17,040 --> 00:13:19,600
well we're done agenda so these are the

311
00:13:19,600 --> 00:13:21,200
current

312
00:13:21,200 --> 00:13:22,959
working group business so it's a

313
00:13:22,959 --> 00:13:25,200
presentation by duane in

314
00:13:25,200 --> 00:13:26,320
two minutes

315
00:13:26,320 --> 00:13:28,480
and these are the other so next slide

316
00:13:28,480 --> 00:13:29,600
please

317
00:13:29,600 --> 00:13:31,600
these are the new business are the zero

318
00:13:31,600 --> 00:13:33,839
zero presentation

319
00:13:33,839 --> 00:13:35,680
do have a lot of new work in the working

320
00:13:35,680 --> 00:13:38,160
group because well the existing

321
00:13:38,160 --> 00:13:40,639
documents are almost finished and

322
00:13:40,639 --> 00:13:42,880
we are discussing the details on the

323
00:13:42,880 --> 00:13:45,120
mailing list but none of the presenters

324
00:13:45,120 --> 00:13:47,040
or authors did ask for a presentation

325
00:13:47,040 --> 00:13:49,279
slot so there's a lot of new business

326
00:13:49,279 --> 00:13:51,120
i won't go off the of the agenda next

327
00:13:51,120 --> 00:13:53,360
slide i think we can

328
00:13:53,360 --> 00:13:54,639
get started

329
00:13:54,639 --> 00:13:58,639
thank you so i would like to us invite

330
00:13:58,639 --> 00:13:59,600
dwayne

331
00:13:59,600 --> 00:14:01,440
to give the first

332
00:14:01,440 --> 00:14:04,240
his first presentation dwayne do you

333
00:14:04,240 --> 00:14:07,120
want to run your own slides or

334
00:14:07,120 --> 00:14:08,480
do you prefer no i think you should do

335
00:14:08,480 --> 00:14:09,440
it

336
00:14:09,440 --> 00:14:11,680
actually

337
00:14:11,920 --> 00:14:13,199
so that's

338
00:14:13,199 --> 00:14:14,399
this one

339
00:14:14,399 --> 00:14:17,399
yeah

340
00:14:20,639 --> 00:14:23,519
so this is about uh negative caching of

341
00:14:23,519 --> 00:14:25,279
dns resolution failures

342
00:14:25,279 --> 00:14:26,639
oh

343
00:14:26,639 --> 00:14:29,519
sorry we we selected the wrong set thank

344
00:14:29,519 --> 00:14:31,279
you

345
00:14:31,279 --> 00:14:33,519
all right

346
00:14:34,480 --> 00:14:36,399
let's do that one

347
00:14:36,399 --> 00:14:37,519
oh

348
00:14:37,519 --> 00:14:40,720
okay we go for the

349
00:14:41,760 --> 00:14:45,839
the negative one probably this one

350
00:14:48,480 --> 00:14:49,680
okay

351
00:14:49,680 --> 00:14:52,800
uh dwayne can you

352
00:14:52,800 --> 00:14:55,360
give me the share

353
00:14:55,360 --> 00:14:59,440
right yes please i think be easy

354
00:14:59,760 --> 00:15:01,680
sorry it seems like we are it seems like

355
00:15:01,680 --> 00:15:03,600
we uploaded the same slides twice on the

356
00:15:03,600 --> 00:15:05,040
different titles and now we are missing

357
00:15:05,040 --> 00:15:06,560
yours

358
00:15:06,560 --> 00:15:08,800
okay

359
00:15:09,839 --> 00:15:10,880
um

360
00:15:10,880 --> 00:15:13,120
maybe you can stop

361
00:15:13,120 --> 00:15:15,440
that's

362
00:15:15,440 --> 00:15:17,600
annoying

363
00:15:17,600 --> 00:15:19,839
blue that's optional let's see

364
00:15:19,839 --> 00:15:22,720
yeah it is

365
00:15:23,279 --> 00:15:26,279
whoops

366
00:15:30,320 --> 00:15:32,399
it's fully automated but it's apparently

367
00:15:32,399 --> 00:15:33,199
it's

368
00:15:33,199 --> 00:15:33,870
developed

369
00:15:33,870 --> 00:15:36,079
[Music]

370
00:15:36,079 --> 00:15:38,719
do you see my screen

371
00:15:39,199 --> 00:15:42,880
uh yet uh we can you can give

372
00:15:42,880 --> 00:15:44,480
dwayne permission

373
00:15:44,480 --> 00:15:47,680
to share his screen

374
00:15:48,399 --> 00:15:52,839
i think already all right

375
00:16:05,519 --> 00:16:06,800
sort of like it

376
00:16:06,800 --> 00:16:09,040
did start for a moment but then it

377
00:16:09,040 --> 00:16:10,800
came back again

378
00:16:10,800 --> 00:16:15,279
can you send me the slides

379
00:16:18,240 --> 00:16:21,480
there you go

380
00:16:33,839 --> 00:16:36,839
next

381
00:16:40,000 --> 00:16:41,600
i keep getting error object cannot be

382
00:16:41,600 --> 00:16:42,639
found here

383
00:16:42,639 --> 00:16:46,279
okay um

384
00:16:53,199 --> 00:16:55,759
can you send me your slides uh of the

385
00:16:55,759 --> 00:16:58,320
first presentation the glue not optional

386
00:16:58,320 --> 00:17:01,600
just by email yeah

387
00:17:08,160 --> 00:17:10,559
i'll send you both just in case

388
00:17:10,559 --> 00:17:12,480
excellent yeah thank you

389
00:17:12,480 --> 00:17:14,000
so let's let's do the negative caching

390
00:17:14,000 --> 00:17:16,079
first and meanwhile we we work on

391
00:17:16,079 --> 00:17:18,079
sharing your other slideshow sorry for

392
00:17:18,079 --> 00:17:19,280
that

393
00:17:19,280 --> 00:17:22,400
that's okay it might be my fault

394
00:17:22,400 --> 00:17:25,600
i just uploaded him yesterday

395
00:17:26,959 --> 00:17:30,480
okay the mail has been sent

396
00:17:30,480 --> 00:17:32,400
all right so this

397
00:17:32,400 --> 00:17:33,919
is a

398
00:17:33,919 --> 00:17:36,640
presentation on negative caching of dns

399
00:17:36,640 --> 00:17:39,600
resolution failures this is a new draft

400
00:17:39,600 --> 00:17:40,880
um

401
00:17:40,880 --> 00:17:42,799
not adopted by the working group next

402
00:17:42,799 --> 00:17:45,799
slide

403
00:17:47,200 --> 00:17:48,320
so the

404
00:17:48,320 --> 00:17:50,240
the the gist of the problem that we want

405
00:17:50,240 --> 00:17:52,000
to talk about today is that uh it

406
00:17:52,000 --> 00:17:53,600
appears recursive name servers are

407
00:17:53,600 --> 00:17:55,840
really bad at caching

408
00:17:55,840 --> 00:17:58,160
resolution failures such as

409
00:17:58,160 --> 00:18:02,080
timeouts and um server failure

410
00:18:02,080 --> 00:18:04,160
codes of refuse codes

411
00:18:04,160 --> 00:18:05,919
uh validation dynastic validation

412
00:18:05,919 --> 00:18:07,600
failures and

413
00:18:07,600 --> 00:18:08,960
loops

414
00:18:08,960 --> 00:18:13,039
the graphic on the right is um data from

415
00:18:13,039 --> 00:18:15,360
verisign's com net name servers during

416
00:18:15,360 --> 00:18:18,559
the facebook outage of october last year

417
00:18:18,559 --> 00:18:21,360
and it shows um how the rates of queries

418
00:18:21,360 --> 00:18:23,520
increased for those three

419
00:18:23,520 --> 00:18:25,679
facebook related domains from

420
00:18:25,679 --> 00:18:28,480
you know a reasonable amount to kind of

421
00:18:28,480 --> 00:18:31,280
an insane amount over the

422
00:18:31,280 --> 00:18:33,760
six or so hours of the outage

423
00:18:33,760 --> 00:18:36,320
next slide

424
00:18:40,240 --> 00:18:41,520
so

425
00:18:41,520 --> 00:18:44,480
this this list is also in in the draft

426
00:18:44,480 --> 00:18:46,960
and these are some of the um

427
00:18:46,960 --> 00:18:49,919
incidents and evidence of uh

428
00:18:49,919 --> 00:18:51,360
you know

429
00:18:51,360 --> 00:18:54,000
failure to cash uh resolution failures

430
00:18:54,000 --> 00:18:55,200
over the years

431
00:18:55,200 --> 00:18:57,520
the facebook outage i just mentioned uh

432
00:18:57,520 --> 00:19:00,720
for that we saw 128 times increase in

433
00:19:00,720 --> 00:19:03,840
queries to comnet name servers

434
00:19:03,840 --> 00:19:05,520
um

435
00:19:05,520 --> 00:19:08,240
in 2021 last year

436
00:19:08,240 --> 00:19:10,160
myself and some verisign colleagues

437
00:19:10,160 --> 00:19:11,760
presented some work at the dns work

438
00:19:11,760 --> 00:19:13,039
meeting where

439
00:19:13,039 --> 00:19:14,320
we um

440
00:19:14,320 --> 00:19:16,720
we were doing some experiments with a uh

441
00:19:16,720 --> 00:19:18,160
a botnet domain

442
00:19:18,160 --> 00:19:20,080
and we intentionally caused one of the

443
00:19:20,080 --> 00:19:22,840
the domains that the body used to return

444
00:19:22,840 --> 00:19:26,320
surfail errors and we saw a 1200

445
00:19:26,320 --> 00:19:29,520
x increase in uh responses in

446
00:19:29,520 --> 00:19:31,360
in inquiries to our uh sinkhole name

447
00:19:31,360 --> 00:19:33,520
servers

448
00:19:33,520 --> 00:19:35,039
i suspect a lot of us are familiar with

449
00:19:35,039 --> 00:19:38,720
the the tsuname work from also 2021

450
00:19:38,720 --> 00:19:40,640
uh in a network they recorded a 500x

451
00:19:40,640 --> 00:19:41,919
increase

452
00:19:41,919 --> 00:19:43,200
um

453
00:19:43,200 --> 00:19:46,320
2020 there was the nxns attack uh

454
00:19:46,320 --> 00:19:47,840
research that was

455
00:19:47,840 --> 00:19:49,440
published

456
00:19:49,440 --> 00:19:52,559
1620x increase

457
00:19:52,559 --> 00:19:54,720
going back further in time the ksk

458
00:19:54,720 --> 00:19:55,919
rollover

459
00:19:55,919 --> 00:19:58,000
during the post revocation phase of the

460
00:19:58,000 --> 00:19:59,200
key rollover

461
00:19:59,200 --> 00:20:01,760
we observed an 80x increase in dns key

462
00:20:01,760 --> 00:20:05,120
queries at the root servers

463
00:20:05,120 --> 00:20:07,440
um victor duchovny presented something

464
00:20:07,440 --> 00:20:10,400
at dnsoarc where he is doing a um

465
00:20:10,400 --> 00:20:12,799
a daily survey of dinasek

466
00:20:12,799 --> 00:20:15,120
and uh at the end of his survey he

467
00:20:15,120 --> 00:20:17,520
retried all of the

468
00:20:17,520 --> 00:20:19,440
names that had failed he retried them

469
00:20:19,440 --> 00:20:21,200
all again and

470
00:20:21,200 --> 00:20:23,440
that led to a very significant

471
00:20:23,440 --> 00:20:25,360
amplification effect

472
00:20:25,360 --> 00:20:27,600
the dine attack recorded

473
00:20:27,600 --> 00:20:28,880
or

474
00:20:28,880 --> 00:20:30,880
talked about

475
00:20:30,880 --> 00:20:33,039
a 10x increase in

476
00:20:33,039 --> 00:20:35,039
retries from resolvers

477
00:20:35,039 --> 00:20:37,840
and uh if you go back even to 2009 you

478
00:20:37,840 --> 00:20:40,640
may remember this um paper and blog post

479
00:20:40,640 --> 00:20:42,320
called rollover and die

480
00:20:42,320 --> 00:20:45,120
from uh from when the ripe ncc

481
00:20:45,120 --> 00:20:49,039
did a rollover of some inaudibles

482
00:20:49,039 --> 00:20:51,520
next slide

483
00:20:54,960 --> 00:20:58,480
so briefly this slide talks about the uh

484
00:20:58,480 --> 00:21:00,720
the existing requirements that you know

485
00:21:00,720 --> 00:21:03,200
we were able to find

486
00:21:03,200 --> 00:21:04,799
in some of the rfcs

487
00:21:04,799 --> 00:21:08,480
so rfc 2308 uh is all about negative

488
00:21:08,480 --> 00:21:09,919
caching

489
00:21:09,919 --> 00:21:11,679
and it says that negative caching should

490
00:21:11,679 --> 00:21:13,520
no longer be seen as an optional part of

491
00:21:13,520 --> 00:21:15,520
a dns resolver

492
00:21:15,520 --> 00:21:17,440
however it also

493
00:21:17,440 --> 00:21:19,120
does say that

494
00:21:19,120 --> 00:21:21,039
caching timeouts and caching server

495
00:21:21,039 --> 00:21:23,280
failures is optional

496
00:21:23,280 --> 00:21:25,039
so specifically that is something that

497
00:21:25,039 --> 00:21:28,720
we think needs to be updated

498
00:21:28,960 --> 00:21:32,240
uh rc 4697

499
00:21:32,240 --> 00:21:34,720
talks about how an iterative resolver

500
00:21:34,720 --> 00:21:36,159
must not

501
00:21:36,159 --> 00:21:38,320
send a query for the

502
00:21:38,320 --> 00:21:41,039
nsr set

503
00:21:41,039 --> 00:21:43,280
of a non-responsive zone to any of the

504
00:21:43,280 --> 00:21:47,919
name servers for that zone's parent zone

505
00:21:47,919 --> 00:21:49,760
so one of the reasons that

506
00:21:49,760 --> 00:21:51,280
we call it this specifically is because

507
00:21:51,280 --> 00:21:52,880
that is exactly what was happening in

508
00:21:52,880 --> 00:21:56,559
the case of the facebook outage

509
00:21:56,840 --> 00:22:01,600
although 46.97 talks about the nsr set

510
00:22:01,600 --> 00:22:02,480
um

511
00:22:02,480 --> 00:22:03,679
you know during the facebook outage we

512
00:22:03,679 --> 00:22:05,360
weren't exactly seeing ns queries but we

513
00:22:05,360 --> 00:22:07,360
were definitely seeing queries

514
00:22:07,360 --> 00:22:11,879
to the parent zone for facebook.com

515
00:22:12,880 --> 00:22:16,240
46.97 also has some other um

516
00:22:16,240 --> 00:22:18,799
should level requirements that uh that

517
00:22:18,799 --> 00:22:22,000
we won't go into in this presentation

518
00:22:22,000 --> 00:22:23,159
and then

519
00:22:23,159 --> 00:22:27,440
8767 which is um uh

520
00:22:27,440 --> 00:22:30,640
sort of stale i believe uh talks about

521
00:22:30,640 --> 00:22:31,840
says attempts to refresh from

522
00:22:31,840 --> 00:22:33,520
non-responsive or otherwise failing

523
00:22:33,520 --> 00:22:35,360
authoritative name servers

524
00:22:35,360 --> 00:22:36,720
are recommended to be done no more

525
00:22:36,720 --> 00:22:39,520
frequently than every 30 seconds

526
00:22:39,520 --> 00:22:40,799
so again that's sort of a should level

527
00:22:40,799 --> 00:22:42,720
requirement

528
00:22:42,720 --> 00:22:45,039
and it's definitely not what we observe

529
00:22:45,039 --> 00:22:46,960
in reality

530
00:22:46,960 --> 00:22:49,440
next slide

531
00:22:51,440 --> 00:22:52,480
so

532
00:22:52,480 --> 00:22:54,080
this is kind of what we propose in the

533
00:22:54,080 --> 00:22:58,000
draft for updated requirements um

534
00:22:58,000 --> 00:23:00,650
first resolvers must cache

535
00:23:00,650 --> 00:23:01,679
[Music]

536
00:23:01,679 --> 00:23:03,360
all types of resolution failures for at

537
00:23:03,360 --> 00:23:05,679
least five seconds

538
00:23:05,679 --> 00:23:09,679
and not longer than five minutes

539
00:23:09,679 --> 00:23:12,640
resolvers should employ an exponential

540
00:23:12,640 --> 00:23:14,640
backup algorithm

541
00:23:14,640 --> 00:23:17,039
in their uh in the amount of time that

542
00:23:17,039 --> 00:23:18,880
they

543
00:23:18,880 --> 00:23:21,760
cache negatively

544
00:23:21,840 --> 00:23:24,240
are actually in in back off in the sense

545
00:23:24,240 --> 00:23:25,919
that they retry so you know every time

546
00:23:25,919 --> 00:23:27,919
they retry they should retry uh they

547
00:23:27,919 --> 00:23:29,120
should wait a longer time between

548
00:23:29,120 --> 00:23:31,678
retries

549
00:23:32,159 --> 00:23:34,400
uh a resolver must not retry more than

550
00:23:34,400 --> 00:23:37,360
twice meaning three queries in total

551
00:23:37,360 --> 00:23:41,678
before considering a server unresponsive

552
00:23:41,919 --> 00:23:44,480
and then lastly

553
00:23:44,480 --> 00:23:46,240
we want to reiterate or strengthen the

554
00:23:46,240 --> 00:23:48,799
requirements about requiring

555
00:23:48,799 --> 00:23:50,480
parent name servers of a zone

556
00:23:50,480 --> 00:23:53,520
experiencing failures

557
00:23:53,760 --> 00:23:56,240
next slide

558
00:23:57,600 --> 00:24:00,640
um okay so that's it um

559
00:24:00,640 --> 00:24:01,919
if uh

560
00:24:01,919 --> 00:24:03,760
we also presented this

561
00:24:03,760 --> 00:24:06,080
material sort of at the dns arc meeting

562
00:24:06,080 --> 00:24:07,120
um

563
00:24:07,120 --> 00:24:08,880
a month or so ago and it has a little

564
00:24:08,880 --> 00:24:10,080
bit more

565
00:24:10,080 --> 00:24:12,480
uh information on the background and

566
00:24:12,480 --> 00:24:14,960
some some data so if

567
00:24:14,960 --> 00:24:16,000
folks would find that interesting i

568
00:24:16,000 --> 00:24:18,159
would encourage you to go look for that

569
00:24:18,159 --> 00:24:20,799
otherwise at this point i would like to

570
00:24:20,799 --> 00:24:22,320
ask for discussion

571
00:24:22,320 --> 00:24:24,159
and see if this is something the

572
00:24:24,159 --> 00:24:27,360
group is interested in taking on

573
00:24:29,039 --> 00:24:31,600
thank you thank you dwayne

574
00:24:31,600 --> 00:24:33,520
i see one

575
00:24:33,520 --> 00:24:36,000
person in the queue that's paul

576
00:24:36,000 --> 00:24:37,120
at all

577
00:24:37,120 --> 00:24:39,840
sorry leemon

578
00:24:41,440 --> 00:24:45,400
paul please go ahead

579
00:24:46,880 --> 00:24:48,480
hi paul

580
00:24:48,480 --> 00:24:52,240
um if you go one slide back i guess um

581
00:24:52,240 --> 00:24:54,720
you have the exponential back off as a

582
00:24:54,720 --> 00:24:56,799
shoot why is that not a must because

583
00:24:56,799 --> 00:24:58,400
that seems like the really important

584
00:24:58,400 --> 00:25:00,720
thing to sort of stem the flood of

585
00:25:00,720 --> 00:25:03,200
messages

586
00:25:04,080 --> 00:25:05,279
um

587
00:25:05,279 --> 00:25:07,440
well to me the most important thing is

588
00:25:07,440 --> 00:25:09,840
the at least five seconds because

589
00:25:09,840 --> 00:25:12,799
you know what we see in fact is

590
00:25:12,799 --> 00:25:15,200
certain resolvers query like

591
00:25:15,200 --> 00:25:17,120
thousands of times per second

592
00:25:17,120 --> 00:25:19,440
in in failure mode so if we could go

593
00:25:19,440 --> 00:25:21,360
from thousands of times per second from

594
00:25:21,360 --> 00:25:22,640
once every five seconds i think that

595
00:25:22,640 --> 00:25:24,159
would be a huge win

596
00:25:24,159 --> 00:25:25,760
but i would also be willing to make

597
00:25:25,760 --> 00:25:27,840
exponential back off a level requirement

598
00:25:27,840 --> 00:25:30,879
if there was support for that

599
00:25:33,840 --> 00:25:36,400
fever i pretty much supported adopting

600
00:25:36,400 --> 00:25:38,799
that because i think it is it is

601
00:25:38,799 --> 00:25:40,799
important the question is will we get

602
00:25:40,799 --> 00:25:43,120
the people who are doing this uh

603
00:25:43,120 --> 00:25:45,200
with the thousand requests per second to

604
00:25:45,200 --> 00:25:48,000
to actually read that but uh i think we

605
00:25:48,000 --> 00:25:51,039
should give it a go

606
00:25:52,240 --> 00:25:55,480
thanks ralph

607
00:25:57,279 --> 00:26:00,480
so uh largely man um i will just state

608
00:26:00,480 --> 00:26:02,000
my support for this i think this is very

609
00:26:02,000 --> 00:26:03,760
important work i'm not going to get into

610
00:26:03,760 --> 00:26:04,960
the details this of course that's going

611
00:26:04,960 --> 00:26:07,200
to be hashed out as we work on it but i

612
00:26:07,200 --> 00:26:08,799
strongly support adopting this work to

613
00:26:08,799 --> 00:26:11,039
the working group thanks

614
00:26:11,039 --> 00:26:12,559
thank you

615
00:26:12,559 --> 00:26:16,480
um hazel please go uh please go ahead

616
00:26:16,480 --> 00:26:19,600
hi um so first thing i think it sounds

617
00:26:19,600 --> 00:26:21,840
like a good idea um one thing i was

618
00:26:21,840 --> 00:26:23,039
wondering

619
00:26:23,039 --> 00:26:25,840
you said about five seconds and about

620
00:26:25,840 --> 00:26:27,039
you know you're getting thousands of

621
00:26:27,039 --> 00:26:28,880
queries um

622
00:26:28,880 --> 00:26:30,720
part of me does wonder

623
00:26:30,720 --> 00:26:32,720
if depending on the proportion of this

624
00:26:32,720 --> 00:26:35,360
traffic that's coming from shall we say

625
00:26:35,360 --> 00:26:38,559
large public resolver um

626
00:26:38,559 --> 00:26:40,640
operators um

627
00:26:40,640 --> 00:26:42,640
i've got to say my name i'm hazel smith

628
00:26:42,640 --> 00:26:44,960
google um

629
00:26:44,960 --> 00:26:47,279
uh

630
00:26:47,360 --> 00:26:50,159
is that gonna like like is that timeout

631
00:26:50,159 --> 00:26:53,039
supposed to be like her

632
00:26:53,039 --> 00:26:55,200
backhand task like you know if you've

633
00:26:55,200 --> 00:26:57,279
got you've got a low balance that sprays

634
00:26:57,279 --> 00:26:59,120
across you know i know i pick a number

635
00:26:59,120 --> 00:27:01,919
out of my out of my hat 10 000 um

636
00:27:01,919 --> 00:27:04,400
back ends each of which is a name server

637
00:27:04,400 --> 00:27:06,159
recursive name server each with its own

638
00:27:06,159 --> 00:27:08,159
local cache

639
00:27:08,159 --> 00:27:10,240
is if each of those ways five seconds

640
00:27:10,240 --> 00:27:13,039
given how many people asked for facebook

641
00:27:13,039 --> 00:27:13,840
you know

642
00:27:13,840 --> 00:27:16,480
every second of the day

643
00:27:16,480 --> 00:27:17,600
is that

644
00:27:17,600 --> 00:27:20,640
gonna be enough if each one of those

645
00:27:20,640 --> 00:27:22,720
waits five seconds and then all of them

646
00:27:22,720 --> 00:27:24,320
they all once go huh i don't know who

647
00:27:24,320 --> 00:27:27,520
facebook is better ask

648
00:27:28,480 --> 00:27:32,080
yeah thanks hazel um so

649
00:27:32,240 --> 00:27:33,279
it is

650
00:27:33,279 --> 00:27:35,919
our intention that it is per back-end

651
00:27:35,919 --> 00:27:37,760
server as you said so

652
00:27:37,760 --> 00:27:38,960
um

653
00:27:38,960 --> 00:27:41,039
uh i wouldn't uh

654
00:27:41,039 --> 00:27:42,720
maybe we need to be a little bit more

655
00:27:42,720 --> 00:27:44,159
specific in the in the language about

656
00:27:44,159 --> 00:27:46,159
that but uh that is the intention what

657
00:27:46,159 --> 00:27:49,279
what we see today again uh if if there's

658
00:27:49,279 --> 00:27:51,360
a large recursive operator that has

659
00:27:51,360 --> 00:27:53,520
thousands of backend servers

660
00:27:53,520 --> 00:27:54,399
uh

661
00:27:54,399 --> 00:27:56,080
what we see at verifying some of our

662
00:27:56,080 --> 00:27:57,919
data is we see thousands of requests per

663
00:27:57,919 --> 00:27:59,440
second from each of those backend

664
00:27:59,440 --> 00:28:02,159
servers right so that's how you get to a

665
00:28:02,159 --> 00:28:04,320
million queries per second obviously so

666
00:28:04,320 --> 00:28:06,559
wow okay so yeah we we would be we would

667
00:28:06,559 --> 00:28:08,399
be very happy if each back-end server

668
00:28:08,399 --> 00:28:10,000
could limit itself to five queries per

669
00:28:10,000 --> 00:28:12,399
second or one car every five seconds

670
00:28:12,399 --> 00:28:14,240
sorry

671
00:28:14,240 --> 00:28:16,559
thanks

672
00:28:26,799 --> 00:28:27,919
can i speak

673
00:28:27,919 --> 00:28:30,640
jim reed i strongly support this draft i

674
00:28:30,640 --> 00:28:33,200
think it's much needed so kudos to doing

675
00:28:33,200 --> 00:28:34,720
his colleagues for actually writing this

676
00:28:34,720 --> 00:28:36,720
up i think that you really should adopt

677
00:28:36,720 --> 00:28:37,600
this

678
00:28:37,600 --> 00:28:39,120
i've got one or two questions though

679
00:28:39,120 --> 00:28:40,799
first of all is the numbers we've got

680
00:28:40,799 --> 00:28:42,880
there the same resolvers must cash for

681
00:28:42,880 --> 00:28:44,640
five seconds and not longer than five

682
00:28:44,640 --> 00:28:45,679
minutes

683
00:28:45,679 --> 00:28:46,960
i think we should have something a bit

684
00:28:46,960 --> 00:28:48,720
more evidence-based

685
00:28:48,720 --> 00:28:50,240
i don't really know care where these

686
00:28:50,240 --> 00:28:52,080
particular numbers come from but i do

687
00:28:52,080 --> 00:28:53,120
think if we're going to develop this

688
00:28:53,120 --> 00:28:54,320
further we should try to have an

689
00:28:54,320 --> 00:28:56,240
evidence-based approach to that maybe

690
00:28:56,240 --> 00:28:57,840
these values should be smaller maybe

691
00:28:57,840 --> 00:28:59,760
they should be larger i don't know and

692
00:28:59,760 --> 00:29:01,120
we should reconsider also what the

693
00:29:01,120 --> 00:29:03,279
second order effects would be once those

694
00:29:03,279 --> 00:29:06,159
values are chosen and put into place

695
00:29:06,159 --> 00:29:07,679
and the other question i have is more of

696
00:29:07,679 --> 00:29:10,000
a meta one dwayne is that you saw there

697
00:29:10,000 --> 00:29:11,520
was a big spike in queries after the

698
00:29:11,520 --> 00:29:13,520
facebook outage were you able to

699
00:29:13,520 --> 00:29:15,679
identify the name seven implementations

700
00:29:15,679 --> 00:29:17,200
that were responsible for the bulk of

701
00:29:17,200 --> 00:29:18,480
those queries

702
00:29:18,480 --> 00:29:19,600
and i would imagine they're going to be

703
00:29:19,600 --> 00:29:21,279
coming from a very small number because

704
00:29:21,279 --> 00:29:23,039
the bulk of the resolver traffic these

705
00:29:23,039 --> 00:29:25,120
days is coming from you know like

706
00:29:25,120 --> 00:29:27,039
google's quality and the others the

707
00:29:27,039 --> 00:29:30,240
other all four services

708
00:29:30,640 --> 00:29:34,320
yeah thanks jim so um

709
00:29:34,399 --> 00:29:36,320
in the draft i believe

710
00:29:36,320 --> 00:29:37,840
maybe not i don't know if it was

711
00:29:37,840 --> 00:29:39,440
published but verisign published a blog

712
00:29:39,440 --> 00:29:42,000
post on on the outage as well

713
00:29:42,000 --> 00:29:44,320
and in there we were able to identify

714
00:29:44,320 --> 00:29:47,520
some of the um sources for this right

715
00:29:47,520 --> 00:29:50,320
so uh we were seeing a lot of the

716
00:29:50,320 --> 00:29:51,120
uh

717
00:29:51,120 --> 00:29:52,880
traffic coming from large recursive

718
00:29:52,880 --> 00:29:55,840
operators um we didn't we didn't really

719
00:29:55,840 --> 00:29:58,559
attempt to identify uh you know all the

720
00:29:58,559 --> 00:30:00,960
open source implementations out there

721
00:30:00,960 --> 00:30:03,120
but we did analysis or identification

722
00:30:03,120 --> 00:30:04,960
based on source address not on say

723
00:30:04,960 --> 00:30:07,440
software version if that makes sense

724
00:30:07,440 --> 00:30:09,679
okay thanks

725
00:30:09,679 --> 00:30:12,159
i can point you to that uh

726
00:30:12,159 --> 00:30:14,640
if you need to sorry yeah so um we

727
00:30:14,640 --> 00:30:17,279
bumped uh joao from the queue but if we

728
00:30:17,279 --> 00:30:20,399
do have time for a short question

729
00:30:20,399 --> 00:30:24,559
okay okay sorry uh dwayne go ahead

730
00:30:24,640 --> 00:30:26,559
uh i was just gonna say if if anyone

731
00:30:26,559 --> 00:30:29,600
needs the link to that um other

732
00:30:29,600 --> 00:30:31,760
blog post i'd be happy to provide it

733
00:30:31,760 --> 00:30:32,880
okay

734
00:30:32,880 --> 00:30:33,919
thank you

735
00:30:33,919 --> 00:30:34,720
so

736
00:30:34,720 --> 00:30:36,960
to your last request call for adoption

737
00:30:36,960 --> 00:30:38,080
we will

738
00:30:38,080 --> 00:30:41,440
uh run the survey so and your draft will

739
00:30:41,440 --> 00:30:43,919
certainly uh in the service of the

740
00:30:43,919 --> 00:30:45,520
working group can

741
00:30:45,520 --> 00:30:47,360
indicate their preference on their work

742
00:30:47,360 --> 00:30:49,520
and that we set priorities but

743
00:30:49,520 --> 00:30:51,840
we will follow up on that and we will

744
00:30:51,840 --> 00:30:52,880
report

745
00:30:52,880 --> 00:30:54,559
well we run the survey probably one or

746
00:30:54,559 --> 00:30:55,840
two weeks

747
00:30:55,840 --> 00:30:57,679
something like that so

748
00:30:57,679 --> 00:31:01,360
early april half april will uh set out a

749
00:31:01,360 --> 00:31:03,600
plan for adoption of work

750
00:31:03,600 --> 00:31:04,880
yeah

751
00:31:04,880 --> 00:31:08,320
okay great thanks thank you very much

752
00:31:08,320 --> 00:31:09,519
and thank you for

753
00:31:09,519 --> 00:31:13,360
sending us the the other presentation

754
00:31:14,480 --> 00:31:15,919
yeah it's correct

755
00:31:15,919 --> 00:31:19,519
please right yeah okay thanks benno so

756
00:31:19,519 --> 00:31:22,799
uh so this is about um the the glue is

757
00:31:22,799 --> 00:31:25,440
not optional draft um this was

758
00:31:25,440 --> 00:31:27,440
originally written by mark andrews and

759
00:31:27,440 --> 00:31:29,120
he kind of allowed uh myself and

760
00:31:29,120 --> 00:31:30,559
schumann huck and paul waters to join

761
00:31:30,559 --> 00:31:32,720
him as co-authors

762
00:31:32,720 --> 00:31:34,240
the the title originally of course is

763
00:31:34,240 --> 00:31:37,200
glue is not optional but as we'll see uh

764
00:31:37,200 --> 00:31:38,960
you know throughout this presentation

765
00:31:38,960 --> 00:31:40,159
there may be

766
00:31:40,159 --> 00:31:42,159
need to change that slidell title

767
00:31:42,159 --> 00:31:44,799
slightly so

768
00:31:45,679 --> 00:31:46,960
uh next last time this work was

769
00:31:46,960 --> 00:31:49,200
presented we were at revision two of the

770
00:31:49,200 --> 00:31:51,279
draft so here are the changes uh

771
00:31:51,279 --> 00:31:52,799
summarized since then

772
00:31:52,799 --> 00:31:54,480
i'm going to talk in detail about all of

773
00:31:54,480 --> 00:31:57,440
these in the uh forthcoming slides so

774
00:31:57,440 --> 00:32:01,399
just go ahead to the next slide please

775
00:32:01,919 --> 00:32:03,039
um

776
00:32:03,039 --> 00:32:05,360
so one sort of important change is that

777
00:32:05,360 --> 00:32:07,519
we added some clarifying text that this

778
00:32:07,519 --> 00:32:08,720
draft only

779
00:32:08,720 --> 00:32:09,840
um

780
00:32:09,840 --> 00:32:11,840
refers to requirements on

781
00:32:11,840 --> 00:32:13,519
name server software implementations and

782
00:32:13,519 --> 00:32:14,720
doesn't

783
00:32:14,720 --> 00:32:16,960
really say anything at all about

784
00:32:16,960 --> 00:32:18,640
data placed in

785
00:32:18,640 --> 00:32:21,919
zones or or how registry should operate

786
00:32:21,919 --> 00:32:23,840
so a few people told me they were very

787
00:32:23,840 --> 00:32:25,760
pleased with that edition

788
00:32:25,760 --> 00:32:27,360
they were concerned about

789
00:32:27,360 --> 00:32:28,720
how it might impact their registry

790
00:32:28,720 --> 00:32:29,919
operation but that's not the intention

791
00:32:29,919 --> 00:32:31,279
of this draft

792
00:32:31,279 --> 00:32:33,600
next

793
00:32:35,440 --> 00:32:38,000
so all references to orphan or promoted

794
00:32:38,000 --> 00:32:39,840
glue have been removed this is something

795
00:32:39,840 --> 00:32:41,919
that was a little bit contentious before

796
00:32:41,919 --> 00:32:43,919
and it seems like the group settled on

797
00:32:43,919 --> 00:32:48,000
just removing it so that has been done

798
00:32:48,000 --> 00:32:50,320
next

799
00:32:53,760 --> 00:32:55,919
so based on some discussions in other

800
00:32:55,919 --> 00:32:58,240
working groups like deprive it it seems

801
00:32:58,240 --> 00:32:58,960
like

802
00:32:58,960 --> 00:33:00,480
we might be headed in a direction where

803
00:33:00,480 --> 00:33:02,960
the concept of glue could be expanding

804
00:33:02,960 --> 00:33:04,000
to

805
00:33:04,000 --> 00:33:04,799
uh

806
00:33:04,799 --> 00:33:06,880
things or record types other than a and

807
00:33:06,880 --> 00:33:08,559
quad a records

808
00:33:08,559 --> 00:33:10,799
so for example there's uh there's this

809
00:33:10,799 --> 00:33:13,200
ds glue draft by ben

810
00:33:13,200 --> 00:33:15,279
uh and so

811
00:33:15,279 --> 00:33:16,960
the question for us becomes should this

812
00:33:16,960 --> 00:33:20,080
talk him and talk about referral glue

813
00:33:20,080 --> 00:33:22,399
or just continue to work use the phrase

814
00:33:22,399 --> 00:33:23,519
glue

815
00:33:23,519 --> 00:33:27,360
to mean uh only addresses of ns records

816
00:33:27,360 --> 00:33:29,279
below the zone cut

817
00:33:29,279 --> 00:33:31,360
at this point in the in the zero four

818
00:33:31,360 --> 00:33:33,360
version of the draft we've gone ahead

819
00:33:33,360 --> 00:33:34,320
and

820
00:33:34,320 --> 00:33:35,600
changed

821
00:33:35,600 --> 00:33:39,679
glue to referral glue in in most places

822
00:33:39,679 --> 00:33:41,919
kind of to test the waters and see how

823
00:33:41,919 --> 00:33:43,679
it sounds to me it sounds a little

824
00:33:43,679 --> 00:33:45,760
strange but um

825
00:33:45,760 --> 00:33:47,600
we went ahead and did that

826
00:33:47,600 --> 00:33:49,519
and then also i think there's maybe a

827
00:33:49,519 --> 00:33:51,039
little bit of an open question about

828
00:33:51,039 --> 00:33:54,880
where to define glue although

829
00:33:54,880 --> 00:33:56,399
maybe maybe somebody else has some

830
00:33:56,399 --> 00:33:57,840
updates on this at some point there was

831
00:33:57,840 --> 00:33:59,679
talk of putting it in the

832
00:33:59,679 --> 00:34:02,000
dns terminology document

833
00:34:02,000 --> 00:34:03,440
and if it doesn't go there then it seems

834
00:34:03,440 --> 00:34:04,640
like

835
00:34:04,640 --> 00:34:06,000
maybe it needs to go in this document

836
00:34:06,000 --> 00:34:08,560
but i would probably

837
00:34:08,560 --> 00:34:12,560
not like that um so we'll see next

838
00:34:15,199 --> 00:34:17,199
another aspect that was

839
00:34:17,199 --> 00:34:20,560
uh controversial with the previous

840
00:34:20,560 --> 00:34:22,960
version was uh the requirements around

841
00:34:22,960 --> 00:34:24,960
sibling glue

842
00:34:24,960 --> 00:34:26,399
so at this point

843
00:34:26,399 --> 00:34:30,719
uh we've made sibling glue optional

844
00:34:30,719 --> 00:34:33,359
and that's why the you know the

845
00:34:33,359 --> 00:34:35,359
sort of strong title may need to to

846
00:34:35,359 --> 00:34:36,639
change but

847
00:34:36,639 --> 00:34:39,359
what what the current version says is

848
00:34:39,359 --> 00:34:40,879
that when a name server generates a

849
00:34:40,879 --> 00:34:43,599
referral response it should include all

850
00:34:43,599 --> 00:34:46,079
available glue records

851
00:34:46,079 --> 00:34:49,040
in the additional section and after

852
00:34:49,040 --> 00:34:51,760
adding all the in domain glue records if

853
00:34:51,760 --> 00:34:54,239
not all sibling glue records fit

854
00:34:54,239 --> 00:34:55,839
due to message size constraints then the

855
00:34:55,839 --> 00:34:58,560
name server is not required to set tc

856
00:34:58,560 --> 00:35:00,800
equals one

857
00:35:00,800 --> 00:35:02,720
so therefore we have slightly different

858
00:35:02,720 --> 00:35:04,240
requirements for in-domain glue and

859
00:35:04,240 --> 00:35:07,200
sibling glue in domain glue is

860
00:35:07,200 --> 00:35:09,599
uh all of in domain glue records are

861
00:35:09,599 --> 00:35:11,599
required but not all sibling blue

862
00:35:11,599 --> 00:35:14,640
records are required

863
00:35:15,359 --> 00:35:17,839
next

864
00:35:20,480 --> 00:35:23,599
and then i think the last change that uh

865
00:35:23,599 --> 00:35:25,200
we want to talk about is

866
00:35:25,200 --> 00:35:26,960
to the document now talks about

867
00:35:26,960 --> 00:35:29,119
transports a little bit more generically

868
00:35:29,119 --> 00:35:30,720
you know it used to say

869
00:35:30,720 --> 00:35:33,040
if all glue works don't fit in a udp

870
00:35:33,040 --> 00:35:36,560
response then the client should use tcp

871
00:35:36,560 --> 00:35:38,960
but now it says you know if message

872
00:35:38,960 --> 00:35:41,119
constraints if size constraints prevent

873
00:35:41,119 --> 00:35:43,119
the inclusion of all

874
00:35:43,119 --> 00:35:44,960
glue records then the client should use

875
00:35:44,960 --> 00:35:46,720
another transport to retrieve the full

876
00:35:46,720 --> 00:35:49,200
response

877
00:35:49,920 --> 00:35:53,599
and next i think that's it

878
00:35:54,160 --> 00:35:56,800
okay so at this point we see sort of the

879
00:35:56,800 --> 00:35:59,599
the main outstanding issues are uh you

880
00:35:59,599 --> 00:36:01,200
know the phrasing of glue versus

881
00:36:01,200 --> 00:36:04,320
referral glue and uh where

882
00:36:04,320 --> 00:36:07,680
glue actually becomes defined

883
00:36:08,480 --> 00:36:11,440
then i think it's time for discussion

884
00:36:11,440 --> 00:36:13,200
thank you dwayne

885
00:36:13,200 --> 00:36:18,240
can i invite ben ben schwartz to the mic

886
00:36:20,560 --> 00:36:21,599
hi

887
00:36:21,599 --> 00:36:24,599
uh

888
00:36:26,079 --> 00:36:27,680
um

889
00:36:27,680 --> 00:36:29,680
i agree that the the terminology around

890
00:36:29,680 --> 00:36:32,480
glue is kind of confusing uh

891
00:36:32,480 --> 00:36:35,599
it's uh i there are a few conflicting

892
00:36:35,599 --> 00:36:38,960
definitions in different rfcs

893
00:36:38,960 --> 00:36:41,839
i i don't really understand how referral

894
00:36:41,839 --> 00:36:43,839
glue

895
00:36:43,839 --> 00:36:46,720
clarifies because in my view all glue is

896
00:36:46,720 --> 00:36:48,400
for referral and the things that have

897
00:36:48,400 --> 00:36:50,800
been contemplated in deprive

898
00:36:50,800 --> 00:36:53,760
are about enabling secure referral which

899
00:36:53,760 --> 00:36:55,280
may require

900
00:36:55,280 --> 00:36:57,200
more information to be conveyed in the

901
00:36:57,200 --> 00:36:59,359
glue

902
00:36:59,359 --> 00:37:00,880
so

903
00:37:00,880 --> 00:37:02,480
i also

904
00:37:02,480 --> 00:37:04,160
don't see

905
00:37:04,160 --> 00:37:05,359
why those

906
00:37:05,359 --> 00:37:07,280
those things wouldn't be subject to the

907
00:37:07,280 --> 00:37:10,079
same rules as everything else so i i

908
00:37:10,079 --> 00:37:11,359
guess i don't understand the need for

909
00:37:11,359 --> 00:37:13,200
this distinction in my view

910
00:37:13,200 --> 00:37:15,520
uh glue is

911
00:37:15,520 --> 00:37:18,240
whatever records have been placed in the

912
00:37:18,240 --> 00:37:21,599
parent for the purpose of referrals and

913
00:37:21,599 --> 00:37:24,320
the the parent doesn't really

914
00:37:24,320 --> 00:37:26,000
might have some opinions about what it

915
00:37:26,000 --> 00:37:28,560
accepts there but once they're in

916
00:37:28,560 --> 00:37:29,920
they you know i think they should be

917
00:37:29,920 --> 00:37:32,960
treated uniformly

918
00:37:35,200 --> 00:37:37,520
so

919
00:37:37,520 --> 00:37:39,040
i i kind of see what you're saying but

920
00:37:39,040 --> 00:37:41,119
we already sort of have a situation now

921
00:37:41,119 --> 00:37:43,440
where we're treating different types of

922
00:37:43,440 --> 00:37:44,640
glue differently right where we have

923
00:37:44,640 --> 00:37:46,960
sibling glue which is different than

924
00:37:46,960 --> 00:37:48,800
uh in domain glue

925
00:37:48,800 --> 00:37:51,599
and yeah so

926
00:37:51,680 --> 00:37:53,520
when a name server is you know going

927
00:37:53,520 --> 00:37:54,480
through and filling in the decimal

928
00:37:54,480 --> 00:37:55,520
section

929
00:37:55,520 --> 00:37:57,839
it needs to have some sense of priority

930
00:37:57,839 --> 00:38:00,800
right uh unless we're just going to say

931
00:38:00,800 --> 00:38:04,079
all again go back to all types of glue

932
00:38:04,079 --> 00:38:05,520
some no

933
00:38:05,520 --> 00:38:07,200
my um so the distinction that seems

934
00:38:07,200 --> 00:38:09,599
relevant there is about the location of

935
00:38:09,599 --> 00:38:12,560
it as opposed to say the rr type

936
00:38:12,560 --> 00:38:14,079
i think that

937
00:38:14,079 --> 00:38:15,280
if you want to

938
00:38:15,280 --> 00:38:16,960
draw a distinction in the draft i think

939
00:38:16,960 --> 00:38:19,440
the important distinction is the

940
00:38:19,440 --> 00:38:21,280
the location of the glue record the

941
00:38:21,280 --> 00:38:23,280
owner name of the blue record relative

942
00:38:23,280 --> 00:38:25,359
to the

943
00:38:25,359 --> 00:38:27,680
other names in play

944
00:38:27,680 --> 00:38:30,000
okay

945
00:38:30,000 --> 00:38:32,480
thanks ben

946
00:38:32,480 --> 00:38:33,440
thank you

947
00:38:33,440 --> 00:38:36,880
uh paul paul hoffman

948
00:38:38,880 --> 00:38:42,560
so um because the terminology document

949
00:38:42,560 --> 00:38:45,440
is still open um i think it's the best

950
00:38:45,440 --> 00:38:47,440
place to put this not that i want to do

951
00:38:47,440 --> 00:38:49,040
the work to put it there

952
00:38:49,040 --> 00:38:52,400
um but i think that since we haven't

953
00:38:52,400 --> 00:38:56,000
closed it out and because

954
00:38:56,000 --> 00:38:58,560
people writing future documents are more

955
00:38:58,560 --> 00:39:01,599
likely to look for it there than in some

956
00:39:01,599 --> 00:39:03,520
other rfc

957
00:39:03,520 --> 00:39:05,440
just put in the terminology document we

958
00:39:05,440 --> 00:39:08,720
can keep it open for longer

959
00:39:11,839 --> 00:39:13,040
thank you

960
00:39:13,040 --> 00:39:16,079
brett red car

961
00:39:27,040 --> 00:39:28,880
i wanted to add um same my weight to the

962
00:39:28,880 --> 00:39:30,960
same thing that i think the um

963
00:39:30,960 --> 00:39:32,160
the definition should be in the

964
00:39:32,160 --> 00:39:33,760
terminology document

965
00:39:33,760 --> 00:39:34,800
um

966
00:39:34,800 --> 00:39:36,800
as an operator who quite often has to

967
00:39:36,800 --> 00:39:39,119
hire new staff and bring them on board

968
00:39:39,119 --> 00:39:41,520
and train them and stuff um and the

969
00:39:41,520 --> 00:39:43,280
amount of terminology in dns it makes

970
00:39:43,280 --> 00:39:45,040
that quite challenging to have

971
00:39:45,040 --> 00:39:46,880
one place where all that sits is really

972
00:39:46,880 --> 00:39:48,320
really useful

973
00:39:48,320 --> 00:39:49,760
and actually i think that terminology

974
00:39:49,760 --> 00:39:51,200
document should

975
00:39:51,200 --> 00:39:53,920
um be in constant edit so we should be

976
00:39:53,920 --> 00:39:55,520
publishing it now and again but as soon

977
00:39:55,520 --> 00:39:57,760
as it's published changes happens uh

978
00:39:57,760 --> 00:39:58,800
um

979
00:39:58,800 --> 00:40:02,400
it always requires updates basically

980
00:40:06,560 --> 00:40:07,520
okay

981
00:40:07,520 --> 00:40:10,720
thank you ralph ralph baby in the room

982
00:40:10,720 --> 00:40:13,040
yeah so on the glue with this referral

983
00:40:13,040 --> 00:40:15,280
group i don't have an opinion it's just

984
00:40:15,280 --> 00:40:17,200
words all glue s pens that is for

985
00:40:17,200 --> 00:40:19,280
referral i haven't seen anything

986
00:40:19,280 --> 00:40:22,160
else um the other thing is the registry

987
00:40:22,160 --> 00:40:24,400
statement in there i mean registries

988
00:40:24,400 --> 00:40:26,880
define the name server right and

989
00:40:26,880 --> 00:40:29,040
registry to kind of define the a record

990
00:40:29,040 --> 00:40:31,359
let's go into this zone so

991
00:40:31,359 --> 00:40:34,000
if they don't need to follow this then

992
00:40:34,000 --> 00:40:35,440
not sure if we are winning something

993
00:40:35,440 --> 00:40:38,440
here

994
00:40:41,520 --> 00:40:43,920
i'm sorry rob can you can you

995
00:40:43,920 --> 00:40:45,839
say that again

996
00:40:45,839 --> 00:40:48,000
so

997
00:40:48,240 --> 00:40:50,560
if you are registering a domain

998
00:40:50,560 --> 00:40:52,960
the the place you put the a record and

999
00:40:52,960 --> 00:40:54,720
quarter a and name server record in is

1000
00:40:54,720 --> 00:40:55,920
the registry

1001
00:40:55,920 --> 00:40:57,760
so if the registry don't need to follow

1002
00:40:57,760 --> 00:40:59,760
this then meaning they don't need to

1003
00:40:59,760 --> 00:41:01,920
input the stuff then what are we gaining

1004
00:41:01,920 --> 00:41:04,079
so i found that statement that

1005
00:41:04,079 --> 00:41:05,839
registries don't have to do something a

1006
00:41:05,839 --> 00:41:08,400
bit weird

1007
00:41:10,960 --> 00:41:11,760
so

1008
00:41:11,760 --> 00:41:12,880
um

1009
00:41:12,880 --> 00:41:15,040
i i think the you know the impetus for

1010
00:41:15,040 --> 00:41:16,960
this work was was not about how

1011
00:41:16,960 --> 00:41:19,200
registered but it was about

1012
00:41:19,200 --> 00:41:20,400
when a name server

1013
00:41:20,400 --> 00:41:23,599
needs to set the targeted or not

1014
00:41:23,599 --> 00:41:24,720
so

1015
00:41:24,720 --> 00:41:26,000
the sound

1016
00:41:26,000 --> 00:41:28,319
sounds very bad from your side so it's a

1017
00:41:28,319 --> 00:41:31,200
lot of noise or white noise on top of

1018
00:41:31,200 --> 00:41:34,439
your voice

1019
00:41:41,440 --> 00:41:45,960
there's a crack on top of that yeah

1020
00:41:48,720 --> 00:41:49,920
how about now

1021
00:41:49,920 --> 00:41:52,560
much better yeah perfect yeah okay i

1022
00:41:52,560 --> 00:41:55,280
just muted and or unmuted

1023
00:41:55,280 --> 00:41:57,520
um

1024
00:41:57,599 --> 00:41:58,800
well i guess we should take that

1025
00:41:58,800 --> 00:42:01,040
discussion to the list ralph because i

1026
00:42:01,040 --> 00:42:02,880
think the original impetus for the work

1027
00:42:02,880 --> 00:42:05,280
was was really you know the behavior of

1028
00:42:05,280 --> 00:42:07,040
name servers in and whether or not they

1029
00:42:07,040 --> 00:42:10,319
set the tc bit in their responses

1030
00:42:10,319 --> 00:42:12,319
and what i've heard from

1031
00:42:12,319 --> 00:42:13,440
some

1032
00:42:13,440 --> 00:42:15,280
a few folks that that work on the

1033
00:42:15,280 --> 00:42:17,280
registry side is is

1034
00:42:17,280 --> 00:42:18,160
um

1035
00:42:18,160 --> 00:42:19,359
you know different registries have

1036
00:42:19,359 --> 00:42:21,440
different modes of operation

1037
00:42:21,440 --> 00:42:24,240
with respect to to how they treat uh

1038
00:42:24,240 --> 00:42:25,839
glue records or address records in their

1039
00:42:25,839 --> 00:42:28,000
registry and and they were concerned

1040
00:42:28,000 --> 00:42:30,960
that they would have to um change their

1041
00:42:30,960 --> 00:42:32,640
models their their registry models and

1042
00:42:32,640 --> 00:42:35,440
they didn't want to do that obviously

1043
00:42:35,440 --> 00:42:37,839
some have um you know i think it gets

1044
00:42:37,839 --> 00:42:39,119
down to

1045
00:42:39,119 --> 00:42:40,240
um

1046
00:42:40,240 --> 00:42:43,200
host object versus um

1047
00:42:43,200 --> 00:42:44,400
the i figure what the other type is

1048
00:42:44,400 --> 00:42:46,160
called but um there were concerns that

1049
00:42:46,160 --> 00:42:47,599
they would have to change

1050
00:42:47,599 --> 00:42:51,040
their their registry models for this

1051
00:42:53,680 --> 00:42:55,680
yeah okay thank you

1052
00:42:55,680 --> 00:42:58,240
next one hazel

1053
00:42:58,240 --> 00:43:00,640
hazel smith google um

1054
00:43:00,640 --> 00:43:03,200
so firstly i would say that um i think

1055
00:43:03,200 --> 00:43:05,119
it's a good idea to make clearer about

1056
00:43:05,119 --> 00:43:06,960
the definitions of glue i mean it's

1057
00:43:06,960 --> 00:43:08,319
possible i'm just hilariously

1058
00:43:08,319 --> 00:43:10,640
under-informed here but um

1059
00:43:10,640 --> 00:43:12,319
i've always struggled to know whether i

1060
00:43:12,319 --> 00:43:14,480
should call the sort of

1061
00:43:14,480 --> 00:43:16,240
ds records that are you know parent side

1062
00:43:16,240 --> 00:43:17,440
of the zone cut whether i should call

1063
00:43:17,440 --> 00:43:19,520
them glue or not and i'm sure i did try

1064
00:43:19,520 --> 00:43:20,800
and look for a straight out from this

1065
00:43:20,800 --> 00:43:23,280
and couldn't find one before so

1066
00:43:23,280 --> 00:43:24,400
ah

1067
00:43:24,400 --> 00:43:25,920
wherever this ends up it would be good

1068
00:43:25,920 --> 00:43:27,280
to have a straight answer somewhere a

1069
00:43:27,280 --> 00:43:30,160
community consensus on this point um

1070
00:43:30,160 --> 00:43:31,520
i also

1071
00:43:31,520 --> 00:43:33,040
knew what paul was saying that perhaps

1072
00:43:33,040 --> 00:43:34,640
it should be in the terminology document

1073
00:43:34,640 --> 00:43:35,920
and to me that sounds like that might be

1074
00:43:35,920 --> 00:43:38,240
a better place for it but

1075
00:43:38,240 --> 00:43:40,160
as long as it goes somewhere that's my

1076
00:43:40,160 --> 00:43:42,480
feeling

1077
00:43:44,560 --> 00:43:48,960
thank you uh alexander in the room

1078
00:43:49,839 --> 00:43:53,280
um thank you um alexander mayor veronica

1079
00:43:53,280 --> 00:43:55,599
deity speaking from the registry side i

1080
00:43:55,599 --> 00:43:56,640
think it's very important to

1081
00:43:56,640 --> 00:43:58,240
differentiate

1082
00:43:58,240 --> 00:44:01,040
the three steps between a registry

1083
00:44:01,040 --> 00:44:03,359
accepting data which is the first step

1084
00:44:03,359 --> 00:44:05,359
the second step of the zone file that

1085
00:44:05,359 --> 00:44:07,680
the registry generates for a name server

1086
00:44:07,680 --> 00:44:09,200
and then a search step

1087
00:44:09,200 --> 00:44:10,880
where the nameserver actually hands out

1088
00:44:10,880 --> 00:44:12,880
a certain set of records

1089
00:44:12,880 --> 00:44:15,040
and i think that document

1090
00:44:15,040 --> 00:44:18,720
should be constrained to the search step

1091
00:44:18,800 --> 00:44:20,319
maybe there should be eventually a

1092
00:44:20,319 --> 00:44:21,680
second document that talks about the

1093
00:44:21,680 --> 00:44:23,200
second step about

1094
00:44:23,200 --> 00:44:25,119
what is going to go into the onto the

1095
00:44:25,119 --> 00:44:26,000
zone

1096
00:44:26,000 --> 00:44:28,560
um and and i would leave it up to the

1097
00:44:28,560 --> 00:44:31,119
registry community in regex or whatever

1098
00:44:31,119 --> 00:44:33,839
to define what actually is acceptable

1099
00:44:33,839 --> 00:44:36,800
and we are trying to be very uh

1100
00:44:36,800 --> 00:44:38,800
liberating what we accept in terms not

1101
00:44:38,800 --> 00:44:40,880
to confuse our deer registers because

1102
00:44:40,880 --> 00:44:42,800
they send all kind of data that we don't

1103
00:44:42,800 --> 00:44:46,560
really put into the zone

1104
00:44:49,040 --> 00:44:51,040
thank you alex yeah

1105
00:44:51,040 --> 00:44:53,440
so dwayne do you have some additional

1106
00:44:53,440 --> 00:44:55,280
questions or

1107
00:44:55,280 --> 00:44:58,800
enough sufficient feedback

1108
00:44:58,880 --> 00:45:00,800
um so i think on the

1109
00:45:00,800 --> 00:45:02,640
uh you know where

1110
00:45:02,640 --> 00:45:03,920
where the definition goes i think we're

1111
00:45:03,920 --> 00:45:05,839
pretty clear on that it sounds like uh

1112
00:45:05,839 --> 00:45:07,760
we're still a little bit uh unclear

1113
00:45:07,760 --> 00:45:08,800
about

1114
00:45:08,800 --> 00:45:10,880
exactly what glue means and

1115
00:45:10,880 --> 00:45:13,680
and you know whether referral glue

1116
00:45:13,680 --> 00:45:15,520
what that means so um you know i think

1117
00:45:15,520 --> 00:45:17,520
that goes back to the group to the list

1118
00:45:17,520 --> 00:45:19,040
and

1119
00:45:19,040 --> 00:45:21,599
go from there

1120
00:45:21,680 --> 00:45:22,880
thank you

1121
00:45:22,880 --> 00:45:25,920
thank you very much joanne

1122
00:45:25,920 --> 00:45:28,880
next up in the agenda

1123
00:45:28,880 --> 00:45:33,560
is i think ben yeah

1124
00:45:35,040 --> 00:45:37,119
ben do you want to run your own slides

1125
00:45:37,119 --> 00:45:39,119
shall we run the slides it's available

1126
00:45:39,119 --> 00:45:42,160
on the meet echo

1127
00:45:42,720 --> 00:45:46,000
yeah i've requested

1128
00:45:46,000 --> 00:45:48,480
grind it

1129
00:45:55,839 --> 00:45:58,880
excellent please go ahead okay

1130
00:45:58,880 --> 00:46:00,560
uh hey everybody

1131
00:46:00,560 --> 00:46:03,760
uh this is about a zero zero draft that

1132
00:46:03,760 --> 00:46:07,680
is seeking adoption in this workings

1133
00:46:07,680 --> 00:46:10,800
um the authors are myself and uh my

1134
00:46:10,800 --> 00:46:15,560
co-author also from google robert evans

1135
00:46:17,359 --> 00:46:19,440
so the the point of this draft is to

1136
00:46:19,440 --> 00:46:21,440
talk about what happens when you try to

1137
00:46:21,440 --> 00:46:23,440
do dane

1138
00:46:23,440 --> 00:46:27,599
and also use these new svcb or

1139
00:46:27,599 --> 00:46:30,400
https record types

1140
00:46:30,400 --> 00:46:32,800
and also it talks about how to do dane

1141
00:46:32,800 --> 00:46:35,119
with quick which i think may be an inch

1142
00:46:35,119 --> 00:46:38,160
maybe a a major bike shed point but is

1143
00:46:38,160 --> 00:46:41,599
actually a very very tiny change

1144
00:46:41,599 --> 00:46:43,119
so

1145
00:46:43,119 --> 00:46:46,400
this is particularly inspired by some

1146
00:46:46,400 --> 00:46:48,319
discussions that have been happening in

1147
00:46:48,319 --> 00:46:49,440
dprive

1148
00:46:49,440 --> 00:46:51,119
and also in add

1149
00:46:51,119 --> 00:46:52,319
around

1150
00:46:52,319 --> 00:46:53,839
the use of

1151
00:46:53,839 --> 00:46:57,119
svcb records to

1152
00:46:57,119 --> 00:47:00,240
convey information about the secure

1153
00:47:00,240 --> 00:47:02,000
about the support for encrypted

1154
00:47:02,000 --> 00:47:03,280
transports

1155
00:47:03,280 --> 00:47:06,079
for a dns server both recursive and

1156
00:47:06,079 --> 00:47:07,359
authoritative

1157
00:47:07,359 --> 00:47:09,280
but it actually applies generally to

1158
00:47:09,280 --> 00:47:14,000
things like using http 3 with dane

1159
00:47:15,440 --> 00:47:16,960
yeah these things are in the same draft

1160
00:47:16,960 --> 00:47:19,680
because they are actually connected

1161
00:47:19,680 --> 00:47:21,520
one of the key purposes of service

1162
00:47:21,520 --> 00:47:23,359
bindings is to enable

1163
00:47:23,359 --> 00:47:26,160
upgrading too quick and skipping a tcp

1164
00:47:26,160 --> 00:47:28,559
bootstrap step

1165
00:47:28,559 --> 00:47:31,599
and also uh the only other way to get to

1166
00:47:31,599 --> 00:47:34,480
quick is using the http specific alt

1167
00:47:34,480 --> 00:47:36,559
service mechanism so

1168
00:47:36,559 --> 00:47:40,000
if you're not doing http then uh svcb is

1169
00:47:40,000 --> 00:47:41,599
the only way

1170
00:47:41,599 --> 00:47:44,720
currently defined to to get to quick

1171
00:47:44,720 --> 00:47:45,680
so

1172
00:47:45,680 --> 00:47:48,559
this uh and also this is just a very

1173
00:47:48,559 --> 00:47:50,960
small amount of text

1174
00:47:50,960 --> 00:47:53,280
okay i want to have a some brief

1175
00:47:53,280 --> 00:47:56,079
background about dane um since we spent

1176
00:47:56,079 --> 00:47:58,640
some time reading the day in rfcs maybe

1177
00:47:58,640 --> 00:48:00,720
not everybody has uh has looked at them

1178
00:48:00,720 --> 00:48:02,240
recently

1179
00:48:02,240 --> 00:48:06,240
so dane is based on publishing tlsa

1180
00:48:06,240 --> 00:48:08,240
queries which contain

1181
00:48:08,240 --> 00:48:10,480
tls certificates or fingerprints or

1182
00:48:10,480 --> 00:48:13,520
public key fingerprints

1183
00:48:13,839 --> 00:48:15,359
and those

1184
00:48:15,359 --> 00:48:18,839
queries are made for a name of this form

1185
00:48:18,839 --> 00:48:22,000
underscore port dot underscore transport

1186
00:48:22,000 --> 00:48:23,440
dot underscore

1187
00:48:23,440 --> 00:48:25,280
base name

1188
00:48:25,280 --> 00:48:27,040
or in the documents it's sometimes

1189
00:48:27,040 --> 00:48:28,960
called the base domain

1190
00:48:28,960 --> 00:48:32,000
this query follows cnames as usual

1191
00:48:32,000 --> 00:48:33,200
and

1192
00:48:33,200 --> 00:48:36,640
this is all very logical it's uh the the

1193
00:48:36,640 --> 00:48:38,400
tls query

1194
00:48:38,400 --> 00:48:41,040
base domain is based on the redirected

1195
00:48:41,040 --> 00:48:43,599
transport endpoint it's based on the

1196
00:48:43,599 --> 00:48:46,160
thing you're actually going to establish

1197
00:48:46,160 --> 00:48:47,839
a socket to essentially it lives as

1198
00:48:47,839 --> 00:48:50,240
close as possible to the a and quad a

1199
00:48:50,240 --> 00:48:52,240
records

1200
00:48:52,240 --> 00:48:54,960
and the dain clients are supposed to set

1201
00:48:54,960 --> 00:48:56,960
an sni extension

1202
00:48:56,960 --> 00:48:59,760
that contains this base name

1203
00:48:59,760 --> 00:49:02,640
okay simple enough clear but there are a

1204
00:49:02,640 --> 00:49:04,640
few wrinkles in this design

1205
00:49:04,640 --> 00:49:08,640
wrinkle one is the handling of cnames so

1206
00:49:08,640 --> 00:49:13,200
if there is a cname on the base domain

1207
00:49:13,440 --> 00:49:16,240
the dane specification says that the

1208
00:49:16,240 --> 00:49:18,079
client should essentially

1209
00:49:18,079 --> 00:49:20,319
follow that cname chain to its end look

1210
00:49:20,319 --> 00:49:22,880
at the the final target name

1211
00:49:22,880 --> 00:49:24,640
and then

1212
00:49:24,640 --> 00:49:27,040
append these prefix labels

1213
00:49:27,040 --> 00:49:29,119
look for a tlsa

1214
00:49:29,119 --> 00:49:32,079
record if it can't resolve the tlsa

1215
00:49:32,079 --> 00:49:35,040
record there it should uh rewind to the

1216
00:49:35,040 --> 00:49:37,200
beginning of the cname chain try a

1217
00:49:37,200 --> 00:49:38,880
different base domain

1218
00:49:38,880 --> 00:49:41,440
uh emit another tlsa query so there are

1219
00:49:41,440 --> 00:49:43,760
actually two two different queries for

1220
00:49:43,760 --> 00:49:46,400
different names potentially required on

1221
00:49:46,400 --> 00:49:48,160
every attempt to

1222
00:49:48,160 --> 00:49:50,400
connect using dane that's that's an

1223
00:49:50,400 --> 00:49:53,520
interesting wrinkle

1224
00:49:53,920 --> 00:49:55,599
there are also some

1225
00:49:55,599 --> 00:49:58,079
documents describing how to use dane

1226
00:49:58,079 --> 00:50:00,160
with mx and

1227
00:50:00,160 --> 00:50:02,640
it and srv records and those have their

1228
00:50:02,640 --> 00:50:05,440
own wrinkles so the mx

1229
00:50:05,440 --> 00:50:08,720
and dane specification

1230
00:50:08,720 --> 00:50:10,800
tells clients that they actually need to

1231
00:50:10,800 --> 00:50:13,599
maintain three different reference

1232
00:50:13,599 --> 00:50:15,440
identifiers

1233
00:50:15,440 --> 00:50:16,880
so they should

1234
00:50:16,880 --> 00:50:19,200
they should construct the base domain

1235
00:50:19,200 --> 00:50:21,359
put that in the sni so they're telling

1236
00:50:21,359 --> 00:50:24,640
the server i want this dom

1237
00:50:24,640 --> 00:50:26,960
your certificate for this name the the

1238
00:50:26,960 --> 00:50:29,280
base domain but they should also accept

1239
00:50:29,280 --> 00:50:31,200
any certificate that

1240
00:50:31,200 --> 00:50:32,319
comes back

1241
00:50:32,319 --> 00:50:34,000
and covers these other identifiers even

1242
00:50:34,000 --> 00:50:35,599
if it actually doesn't provide them with

1243
00:50:35,599 --> 00:50:37,599
the name they were asking for in the sni

1244
00:50:37,599 --> 00:50:40,559
so that's that's pretty weird from a tls

1245
00:50:40,559 --> 00:50:42,559
standpoint

1246
00:50:42,559 --> 00:50:44,480
and it gets even weirder in a way with

1247
00:50:44,480 --> 00:50:45,839
srv

1248
00:50:45,839 --> 00:50:47,599
where srv says

1249
00:50:47,599 --> 00:50:50,240
that the point uh the expectation here

1250
00:50:50,240 --> 00:50:51,440
is that

1251
00:50:51,440 --> 00:50:52,559
the

1252
00:50:52,559 --> 00:50:55,280
target server host name

1253
00:50:55,280 --> 00:50:56,480
should be

1254
00:50:56,480 --> 00:50:58,480
in the certificate

1255
00:50:58,480 --> 00:51:01,280
but clients are should not ask for it

1256
00:51:01,280 --> 00:51:04,000
they should ask for the service name in

1257
00:51:04,000 --> 00:51:07,440
other words uh if there's a some sort if

1258
00:51:07,440 --> 00:51:09,599
there's srb indirection

1259
00:51:09,599 --> 00:51:12,480
clients should ask for the thing before

1260
00:51:12,480 --> 00:51:14,640
the srv in direction but expect the

1261
00:51:14,640 --> 00:51:17,280
thing after the srv in direction

1262
00:51:17,280 --> 00:51:19,359
literally don't ask for the thing that

1263
00:51:19,359 --> 00:51:22,720
we actually expect you to get um

1264
00:51:22,720 --> 00:51:24,960
and you know there's logic behind each

1265
00:51:24,960 --> 00:51:26,800
of these decisions

1266
00:51:26,800 --> 00:51:28,240
but um

1267
00:51:28,240 --> 00:51:29,680
but these are the considerations that

1268
00:51:29,680 --> 00:51:32,400
sort of went into our design

1269
00:51:32,400 --> 00:51:36,680
so what does the draft actually say

1270
00:51:36,960 --> 00:51:37,839
uh

1271
00:51:37,839 --> 00:51:40,480
it's it's really very simple it says you

1272
00:51:40,480 --> 00:51:41,200
do

1273
00:51:41,200 --> 00:51:44,000
the svcb thing and then you do the dane

1274
00:51:44,000 --> 00:51:45,280
thing

1275
00:51:45,280 --> 00:51:46,800
so

1276
00:51:46,800 --> 00:51:51,119
the output of svcb essentially is

1277
00:51:51,119 --> 00:51:52,000
a

1278
00:51:52,000 --> 00:51:54,319
list of tuples

1279
00:51:54,319 --> 00:51:56,720
target name which is a concept within

1280
00:51:56,720 --> 00:51:57,920
svcb

1281
00:51:57,920 --> 00:51:59,119
transport

1282
00:51:59,119 --> 00:52:01,680
and port number

1283
00:52:01,680 --> 00:52:03,359
and so this draft just says you take

1284
00:52:03,359 --> 00:52:06,160
those tuples and you treat each of them

1285
00:52:06,160 --> 00:52:07,839
totally independently

1286
00:52:07,839 --> 00:52:12,480
as an input to plain old basic dane

1287
00:52:12,480 --> 00:52:15,119
so that's a that is very much like the

1288
00:52:15,119 --> 00:52:16,240
srv

1289
00:52:16,240 --> 00:52:18,400
specification we uh we tried to stick

1290
00:52:18,400 --> 00:52:20,400
close to that because svcp is very much

1291
00:52:20,400 --> 00:52:23,119
inspired by srv and and is essentially

1292
00:52:23,119 --> 00:52:25,839
an evolution of that idea

1293
00:52:25,839 --> 00:52:27,119
and

1294
00:52:27,119 --> 00:52:29,520
uh but we did add some simplification so

1295
00:52:29,520 --> 00:52:31,920
one of them is well or uh there are some

1296
00:52:31,920 --> 00:52:33,599
differences one is there's only one

1297
00:52:33,599 --> 00:52:35,280
reference identity

1298
00:52:35,280 --> 00:52:37,520
there's none of none of this like

1299
00:52:37,520 --> 00:52:39,920
try to validate against one name but if

1300
00:52:39,920 --> 00:52:41,839
it doesn't match here some other names

1301
00:52:41,839 --> 00:52:44,000
that you should also check

1302
00:52:44,000 --> 00:52:44,800
that

1303
00:52:44,800 --> 00:52:46,720
seems like it will significantly

1304
00:52:46,720 --> 00:52:48,800
simplify implementation when using

1305
00:52:48,800 --> 00:52:50,640
common ssl

1306
00:52:50,640 --> 00:52:53,520
type libraries

1307
00:52:53,760 --> 00:52:55,520
but there is also a

1308
00:52:55,520 --> 00:52:57,280
another difference which is that srb

1309
00:52:57,280 --> 00:53:00,319
records prohibit the use of cnames after

1310
00:53:00,319 --> 00:53:02,800
the srv in direction

1311
00:53:02,800 --> 00:53:04,960
svcb does not

1312
00:53:04,960 --> 00:53:07,119
and even

1313
00:53:07,119 --> 00:53:09,839
mentions it in the draft as something

1314
00:53:09,839 --> 00:53:11,920
that you can you can do

1315
00:53:11,920 --> 00:53:12,839
i think

1316
00:53:12,839 --> 00:53:14,720
so

1317
00:53:14,720 --> 00:53:18,240
so wrinkle one still applies here

1318
00:53:18,240 --> 00:53:20,559
but ideally that's sort of hidden within

1319
00:53:20,559 --> 00:53:23,119
the abstraction that identifies dane

1320
00:53:23,119 --> 00:53:26,720
that's within the dane black box

1321
00:53:27,040 --> 00:53:28,800
the other thing that this draft says and

1322
00:53:28,800 --> 00:53:30,800
this is literally the entire text of the

1323
00:53:30,800 --> 00:53:31,920
section

1324
00:53:31,920 --> 00:53:33,839
is to update

1325
00:53:33,839 --> 00:53:36,319
rfc 6698 that's the original dane

1326
00:53:36,319 --> 00:53:38,559
specification or well that's an early

1327
00:53:38,559 --> 00:53:41,359
dane specification

1328
00:53:41,359 --> 00:53:43,200
with a

1329
00:53:43,200 --> 00:53:44,079
uh

1330
00:53:44,079 --> 00:53:45,680
a different

1331
00:53:45,680 --> 00:53:48,960
definition of what the transport prefix

1332
00:53:48,960 --> 00:53:51,119
labels mean

1333
00:53:51,119 --> 00:53:53,599
and the key here is that the current

1334
00:53:53,599 --> 00:53:57,680
text just says tcp udp and sctp

1335
00:53:57,680 --> 00:53:59,760
and this raises a question about what

1336
00:53:59,760 --> 00:54:02,640
happens if you have dtls and quick

1337
00:54:02,640 --> 00:54:03,680
running

1338
00:54:03,680 --> 00:54:05,839
on the same endpoint

1339
00:54:05,839 --> 00:54:08,480
dtls and quick are demuxiable at the

1340
00:54:08,480 --> 00:54:12,880
transport layer so there's no

1341
00:54:12,880 --> 00:54:15,280
absolutely necessary reason

1342
00:54:15,280 --> 00:54:17,040
why they would

1343
00:54:17,040 --> 00:54:20,240
have to have the same certificate or the

1344
00:54:20,240 --> 00:54:21,200
same

1345
00:54:21,200 --> 00:54:24,319
key material serving both of them if

1346
00:54:24,319 --> 00:54:26,720
they were both operational but maybe

1347
00:54:26,720 --> 00:54:28,640
more importantly than that

1348
00:54:28,640 --> 00:54:31,520
is that there have been some proposals

1349
00:54:31,520 --> 00:54:34,240
to use the presence of a tlsa record to

1350
00:54:34,240 --> 00:54:37,040
indicate which transport is in use and

1351
00:54:37,040 --> 00:54:40,079
so if you are trying to tell the client

1352
00:54:40,079 --> 00:54:42,960
uh whether to use or if the client is

1353
00:54:42,960 --> 00:54:45,760
trying to ask does this server support

1354
00:54:45,760 --> 00:54:48,319
dtls

1355
00:54:48,319 --> 00:54:50,839
we'd like the tlsa record to be

1356
00:54:50,839 --> 00:54:53,280
unambiguous uh you know the presence of

1357
00:54:53,280 --> 00:54:55,760
a tlsa record for udp should be an

1358
00:54:55,760 --> 00:54:58,480
unambiguous indicator that the server

1359
00:54:58,480 --> 00:55:00,880
supports dtls and it has been

1360
00:55:00,880 --> 00:55:02,799
right up until the publication of quick

1361
00:55:02,799 --> 00:55:04,000
and then

1362
00:55:04,000 --> 00:55:07,040
now it's sort of a little unclear

1363
00:55:07,040 --> 00:55:09,119
so the goal is to remove this ambiguity

1364
00:55:09,119 --> 00:55:11,680
and also sharpen the semantics here

1365
00:55:11,680 --> 00:55:13,920
essentially arguing that these so-called

1366
00:55:13,920 --> 00:55:17,839
transport names are really about the

1367
00:55:17,839 --> 00:55:20,400
immediate underlying protocol below tls

1368
00:55:20,400 --> 00:55:22,079
the protocol that contains the tls

1369
00:55:22,079 --> 00:55:24,480
handshake

1370
00:55:24,720 --> 00:55:27,920
here's just a quick example of the kind

1371
00:55:27,920 --> 00:55:30,720
of thing that motivates this

1372
00:55:30,720 --> 00:55:32,640
so if you imagine you have a dns server

1373
00:55:32,640 --> 00:55:35,760
again may be authoritative maybe

1374
00:55:35,760 --> 00:55:38,160
recursive doesn't actually matter very

1375
00:55:38,160 --> 00:55:39,839
much for this

1376
00:55:39,839 --> 00:55:41,839
and it's got some set of service

1377
00:55:41,839 --> 00:55:43,839
bindings including some advertisements

1378
00:55:43,839 --> 00:55:46,720
for dns over tls and dns over quick

1379
00:55:46,720 --> 00:55:49,599
maybe on different ports

1380
00:55:49,599 --> 00:55:50,640
then

1381
00:55:50,640 --> 00:55:52,000
these are the

1382
00:55:52,000 --> 00:55:54,240
these are the tlsa records that you

1383
00:55:54,240 --> 00:55:55,760
would have to publish to go along with

1384
00:55:55,760 --> 00:55:58,000
them

1385
00:55:58,720 --> 00:56:00,480
so this is a very simple draft we're

1386
00:56:00,480 --> 00:56:02,559
seeking adoption in the working group

1387
00:56:02,559 --> 00:56:05,839
i'm happy to answer any questions

1388
00:56:06,720 --> 00:56:09,359
thank you ben

1389
00:56:10,079 --> 00:56:13,599
yeah we do have time for questions

1390
00:56:13,599 --> 00:56:17,480
wes please go ahead

1391
00:56:20,079 --> 00:56:23,520
oh yes my video is upside down

1392
00:56:23,599 --> 00:56:24,880
uh

1393
00:56:24,880 --> 00:56:27,280
that works well because

1394
00:56:27,280 --> 00:56:28,799
of the topic

1395
00:56:28,799 --> 00:56:32,319
so the one the the reason that dane

1396
00:56:32,319 --> 00:56:35,119
chases the target is

1397
00:56:35,119 --> 00:56:37,359
who is in control of the certificate in

1398
00:56:37,359 --> 00:56:39,359
particular right so

1399
00:56:39,359 --> 00:56:40,880
um the one thing that you should

1400
00:56:40,880 --> 00:56:45,319
definitely consider in your draft is

1401
00:56:46,160 --> 00:56:47,599
think about it this way if if i'm the

1402
00:56:47,599 --> 00:56:49,920
owner of a website and i have a cname to

1403
00:56:49,920 --> 00:56:51,920
my cdn right

1404
00:56:51,920 --> 00:56:53,680
i do not want to do

1405
00:56:53,680 --> 00:56:56,160
the dane

1406
00:56:56,160 --> 00:56:59,280
updating of a tlsa record to keep

1407
00:56:59,280 --> 00:57:00,960
tracking the cdn certificate as it

1408
00:57:00,960 --> 00:57:02,240
changes

1409
00:57:02,240 --> 00:57:03,760
you know you don't want a million

1410
00:57:03,760 --> 00:57:05,680
customers potentially getting those

1411
00:57:05,680 --> 00:57:08,400
those tlsa records wrong

1412
00:57:08,400 --> 00:57:10,480
so the reason for the name chasing is

1413
00:57:10,480 --> 00:57:13,280
that but still allows that you know if

1414
00:57:13,280 --> 00:57:15,520
the cdn actually doesn't have a tlsa

1415
00:57:15,520 --> 00:57:17,680
record because uh

1416
00:57:17,680 --> 00:57:18,880
they're

1417
00:57:18,880 --> 00:57:20,960
they don't support tlsa

1418
00:57:20,960 --> 00:57:22,720
then i can publish one anyway right i

1419
00:57:22,720 --> 00:57:24,240
can work around it

1420
00:57:24,240 --> 00:57:25,280
um

1421
00:57:25,280 --> 00:57:26,880
so that's yeah of course you could

1422
00:57:26,880 --> 00:57:28,960
always do that by copying if you're

1423
00:57:28,960 --> 00:57:30,960
willing to copy paste their ip addresses

1424
00:57:30,960 --> 00:57:34,000
into your zone as well

1425
00:57:34,160 --> 00:57:36,400
well so that right that's that's always

1426
00:57:36,400 --> 00:57:38,319
the problem right that you want to do

1427
00:57:38,319 --> 00:57:40,319
the least amount of management possible

1428
00:57:40,319 --> 00:57:41,359
so

1429
00:57:41,359 --> 00:57:42,240
um

1430
00:57:42,240 --> 00:57:44,640
following to the target is is you know

1431
00:57:44,640 --> 00:57:46,400
quintessentially the purpose so you

1432
00:57:46,400 --> 00:57:48,160
definitely want to do something

1433
00:57:48,160 --> 00:57:50,720
point being regardless of why dane does

1434
00:57:50,720 --> 00:57:52,160
it right right

1435
00:57:52,160 --> 00:57:53,839
you need to be able to account for the

1436
00:57:53,839 --> 00:57:56,799
fact that client that uh zone owners do

1437
00:57:56,799 --> 00:57:58,559
not necessarily want to do a whole lot

1438
00:57:58,559 --> 00:58:00,160
of tracking of remote certificates

1439
00:58:00,160 --> 00:58:02,000
that's a real pain

1440
00:58:02,000 --> 00:58:04,400
in danger so i i think i think that we

1441
00:58:04,400 --> 00:58:05,680
are um

1442
00:58:05,680 --> 00:58:07,680
i think that we are doing the thing that

1443
00:58:07,680 --> 00:58:10,640
that pushes furthest in that direction

1444
00:58:10,640 --> 00:58:13,598
yes i agree with that

1445
00:58:14,240 --> 00:58:16,000
okay thank you

1446
00:58:16,000 --> 00:58:18,319
so wish you're looking much younger

1447
00:58:18,319 --> 00:58:20,880
upside down

1448
00:58:20,880 --> 00:58:22,880
i think i will follow your example next

1449
00:58:22,880 --> 00:58:24,240
time

1450
00:58:24,240 --> 00:58:25,680
i'll have to start walking around that

1451
00:58:25,680 --> 00:58:27,839
way

1452
00:58:29,119 --> 00:58:31,200
sam simone wiley

1453
00:58:31,200 --> 00:58:34,680
please go ahead

1454
00:58:37,839 --> 00:58:40,480
we can't hear you

1455
00:58:40,480 --> 00:58:42,240
no

1456
00:58:42,240 --> 00:58:45,280
sam we don't hear you

1457
00:58:45,280 --> 00:58:46,240
sam

1458
00:58:46,240 --> 00:58:48,640
we don't hear you

1459
00:58:48,640 --> 00:58:51,839
i can see you

1460
00:58:59,359 --> 00:59:02,359
nope

1461
00:59:04,079 --> 00:59:06,480
um samuel you could sam you can also

1462
00:59:06,480 --> 00:59:08,880
type in your question and suzanne can

1463
00:59:08,880 --> 00:59:10,720
relate it or we can relay that to the

1464
00:59:10,720 --> 00:59:12,959
room

1465
00:59:13,680 --> 00:59:16,680
okay

1466
00:59:20,240 --> 00:59:22,959
okay well

1467
00:59:23,440 --> 00:59:25,119
um

1468
00:59:25,119 --> 00:59:29,119
for timekeeping uh bend

1469
00:59:29,359 --> 00:59:31,440
some final words and call for good

1470
00:59:31,440 --> 00:59:33,680
options i'll just uh so this is a call

1471
00:59:33,680 --> 00:59:37,359
for but this is a a request for adoption

1472
00:59:37,359 --> 00:59:38,559
um

1473
00:59:38,559 --> 00:59:39,440
so

1474
00:59:39,440 --> 00:59:40,319
uh

1475
00:59:40,319 --> 00:59:41,839
please consider whether you'd like to

1476
00:59:41,839 --> 00:59:44,319
see this work in dns out

1477
00:59:44,319 --> 00:59:45,839
we've had some discussion on the mailing

1478
00:59:45,839 --> 00:59:48,559
list mostly about this last point about

1479
00:59:48,559 --> 00:59:50,480
uh about wrinkle one

1480
00:59:50,480 --> 00:59:52,400
and and c names

1481
00:59:52,400 --> 00:59:53,920
with uh

1482
00:59:53,920 --> 00:59:56,960
with some argument that this

1483
00:59:56,960 --> 00:59:58,640
maybe should actually be deprecated

1484
00:59:58,640 --> 01:00:01,520
across all of dane and

1485
01:00:01,520 --> 01:00:02,319
uh

1486
01:00:02,319 --> 01:00:04,079
and that as a first step we should not

1487
01:00:04,079 --> 01:00:06,960
permit it here so essentially

1488
01:00:06,960 --> 01:00:09,520
the uh

1489
01:00:09,520 --> 01:00:11,680
the client would follow c name chains to

1490
01:00:11,680 --> 01:00:13,760
the end and would only do a single tlsa

1491
01:00:13,760 --> 01:00:16,880
query for the final alias target and not

1492
01:00:16,880 --> 01:00:19,119
not rolling back to the beginning of the

1493
01:00:19,119 --> 01:00:20,880
cname change

1494
01:00:20,880 --> 01:00:22,400
okay

1495
01:00:22,400 --> 01:00:23,920
thank you

1496
01:00:23,920 --> 01:00:26,160
thank you okay next

1497
01:00:26,160 --> 01:00:31,279
presenter is willem william toro in room

1498
01:00:34,640 --> 01:00:36,559
william unfortunately that that screen

1499
01:00:36,559 --> 01:00:39,760
doesn't work so you can either

1500
01:00:39,920 --> 01:00:42,240
you'll need to resort to that one okay

1501
01:00:42,240 --> 01:00:45,759
if that's good for you yes

1502
01:00:47,760 --> 01:00:49,680
so i also asked to

1503
01:00:49,680 --> 01:00:54,160
yeah i granted you access so

1504
01:00:54,240 --> 01:00:55,119
no

1505
01:00:55,119 --> 01:00:57,599
that this is this is fine too or i'll

1506
01:00:57,599 --> 01:00:59,359
just say move a little bit closer to the

1507
01:00:59,359 --> 01:01:01,759
microphone

1508
01:01:04,880 --> 01:01:07,520
that's okay i just need to i can't read

1509
01:01:07,520 --> 01:01:08,240
the

1510
01:01:08,240 --> 01:01:11,040
i need to read this text

1511
01:01:11,040 --> 01:01:12,480
okay

1512
01:01:12,480 --> 01:01:15,119
so uh

1513
01:01:15,119 --> 01:01:17,920
this is also this is new work also

1514
01:01:17,920 --> 01:01:20,319
maybe looking for adoption or at least

1515
01:01:20,319 --> 01:01:22,960
get feedback from you to see if you like

1516
01:01:22,960 --> 01:01:25,280
this id

1517
01:01:25,280 --> 01:01:29,119
driver and dnsec a dry run or a practice

1518
01:01:29,119 --> 01:01:30,079
run

1519
01:01:30,079 --> 01:01:33,599
is a testing process where the effects

1520
01:01:33,599 --> 01:01:36,839
of a possible failure are intentionally

1521
01:01:36,839 --> 01:01:40,799
mitigated according to wikipedia

1522
01:01:40,799 --> 01:01:43,680
so on the picture you see the italian

1523
01:01:43,680 --> 01:01:46,240
astronaut samantha

1524
01:01:46,240 --> 01:01:48,879
christopher

1525
01:01:48,960 --> 01:01:51,599
doing a dry run of a

1526
01:01:51,599 --> 01:01:54,319
fix of the international space station

1527
01:01:54,319 --> 01:01:57,759
in a swimming pool

1528
01:01:59,680 --> 01:02:01,920
this work is

1529
01:02:01,920 --> 01:02:05,440
i'm doing this work with your ghost

1530
01:02:05,440 --> 01:02:08,799
kevs which is the inbound developer at

1531
01:02:08,799 --> 01:02:13,200
enemy labs and roy argens

1532
01:02:13,200 --> 01:02:16,359
next slide

1533
01:02:22,480 --> 01:02:24,079
oh you should be able to do that oh

1534
01:02:24,079 --> 01:02:25,520
should i

1535
01:02:25,520 --> 01:02:27,760
oh

1536
01:02:27,760 --> 01:02:29,599
how oh yes

1537
01:02:29,599 --> 01:02:31,359
yeah

1538
01:02:31,359 --> 01:02:34,920
well yeah

1539
01:02:41,039 --> 01:02:42,799
sorry guys okay

1540
01:02:42,799 --> 01:02:45,200
can you forward the slides with me

1541
01:02:45,200 --> 01:02:46,880
yeah okay

1542
01:02:46,880 --> 01:02:48,720
you need to stop sharing this right so

1543
01:02:48,720 --> 01:02:52,720
that i can start for whatever reason

1544
01:02:53,200 --> 01:02:56,319
okay i stopped

1545
01:02:57,520 --> 01:03:00,319
there you go so we are on slides

1546
01:03:00,319 --> 01:03:03,839
yes two now what's the table

1547
01:03:04,160 --> 01:03:07,440
so dnsec deployment is lagging the top

1548
01:03:07,440 --> 01:03:09,839
level domain domains are

1549
01:03:09,839 --> 01:03:13,280
assigned for 90 more than 90 percent

1550
01:03:13,280 --> 01:03:15,680
but second level domains are not here's

1551
01:03:15,680 --> 01:03:19,359
an overview of the top 10

1552
01:03:19,359 --> 01:03:23,039
largest domains and so some of them

1553
01:03:23,039 --> 01:03:26,240
have even zero signed domains or are not

1554
01:03:26,240 --> 01:03:27,680
signed themselves

1555
01:03:27,680 --> 01:03:28,839
i

1556
01:03:28,839 --> 01:03:33,200
suppose and next slide please

1557
01:03:33,200 --> 01:03:35,680
so um

1558
01:03:35,680 --> 01:03:39,599
what's the rea why will people uh deploy

1559
01:03:39,599 --> 01:03:42,720
dns sec so one of the thoughts

1560
01:03:42,720 --> 01:03:46,079
has been that the dane would be a

1561
01:03:46,079 --> 01:03:48,720
driver of dinosaur

1562
01:03:48,720 --> 01:03:50,960
this is a slide from a presentation

1563
01:03:50,960 --> 01:03:53,440
given at the last dns orc

1564
01:03:53,440 --> 01:03:56,000
showing the amount of till then

1565
01:03:56,000 --> 01:03:59,520
deployment for a mail exchange

1566
01:03:59,520 --> 01:04:01,119
you can see

1567
01:04:01,119 --> 01:04:02,480
that the

1568
01:04:02,480 --> 01:04:05,200
only domain where

1569
01:04:05,200 --> 01:04:08,240
then deployment is really taking off is

1570
01:04:08,240 --> 01:04:09,440
dot now

1571
01:04:09,440 --> 01:04:10,880
and dot nel

1572
01:04:10,880 --> 01:04:14,480
already has a large dns sex signed

1573
01:04:14,480 --> 01:04:16,640
population of domains

1574
01:04:16,640 --> 01:04:18,000
because

1575
01:04:18,000 --> 01:04:20,799
there's a financial incentive basically

1576
01:04:20,799 --> 01:04:22,720
in dothanelle if you

1577
01:04:22,720 --> 01:04:25,039
do denyseck on your domain you get it

1578
01:04:25,039 --> 01:04:26,640
for cheaper

1579
01:04:26,640 --> 01:04:29,279
next slide

1580
01:04:29,839 --> 01:04:31,359
so

1581
01:04:31,359 --> 01:04:35,039
the the other reasons for dinosaur to

1582
01:04:35,039 --> 01:04:38,319
lag behind a little bit is that dinosaur

1583
01:04:38,319 --> 01:04:42,799
you appear as appear as network failures

1584
01:04:42,799 --> 01:04:44,720
which is not nice you cannot see that

1585
01:04:44,720 --> 01:04:48,879
it's something with dinosaur next flight

1586
01:04:49,119 --> 01:04:51,839
and also

1587
01:04:51,920 --> 01:04:55,839
enabling dnsec is not without risks we

1588
01:04:55,839 --> 01:04:58,559
are unforeseen failures

1589
01:04:58,559 --> 01:05:00,319
i'm referring i'm showing here the

1590
01:05:00,319 --> 01:05:02,319
picture of

1591
01:05:02,319 --> 01:05:05,599
a report of the recent failure with

1592
01:05:05,599 --> 01:05:06,720
slack

1593
01:05:06,720 --> 01:05:09,280
and they did they did it uh

1594
01:05:09,280 --> 01:05:12,720
they did actually did uh dry run

1595
01:05:12,720 --> 01:05:15,119
that in a sec deployment but

1596
01:05:15,119 --> 01:05:16,559
still uh

1597
01:05:16,559 --> 01:05:17,760
managed to

1598
01:05:17,760 --> 01:05:22,000
yeah be off the grid for the ttl time

1599
01:05:22,000 --> 01:05:26,559
that the ds had in the parent next slide

1600
01:05:26,559 --> 01:05:29,359
so there have been efforts to mitigate

1601
01:05:29,359 --> 01:05:30,559
this

1602
01:05:30,559 --> 01:05:33,760
one very nice one is the extended dns

1603
01:05:33,760 --> 01:05:36,079
errors

1604
01:05:36,079 --> 01:05:38,640
instead of dynasec failure appearing as

1605
01:05:38,640 --> 01:05:41,039
a network failure it will show you the

1606
01:05:41,039 --> 01:05:44,400
actual error next slide

1607
01:05:45,760 --> 01:05:48,160
here you see a query for

1608
01:05:48,160 --> 01:05:51,520
dnssec failure failure.org i believe

1609
01:05:51,520 --> 01:05:55,119
and the ede or the edns extension with

1610
01:05:55,119 --> 01:05:57,119
the extended error

1611
01:05:57,119 --> 01:05:58,240
saying

1612
01:05:58,240 --> 01:06:00,240
something is not

1613
01:06:00,240 --> 01:06:02,319
good with your

1614
01:06:02,319 --> 01:06:06,880
set record or something next slide

1615
01:06:06,960 --> 01:06:10,000
and this is a call out to mozilla

1616
01:06:10,000 --> 01:06:11,760
because this is a

1617
01:06:11,760 --> 01:06:14,400
firefox running doe

1618
01:06:14,400 --> 01:06:17,280
to cloudflare that does provide the ede

1619
01:06:17,280 --> 01:06:19,839
coder but mozilla is not displaying it

1620
01:06:19,839 --> 01:06:20,960
why not

1621
01:06:20,960 --> 01:06:23,280
now this is important

1622
01:06:23,280 --> 01:06:25,920
next slide

1623
01:06:26,480 --> 01:06:27,359
and

1624
01:06:27,359 --> 01:06:30,160
recently roy irons came with a new draft

1625
01:06:30,160 --> 01:06:30,960
the

1626
01:06:30,960 --> 01:06:33,359
extended dns error reporting which is

1627
01:06:33,359 --> 01:06:34,720
not only

1628
01:06:34,720 --> 01:06:38,079
conveying the error to the client

1629
01:06:38,079 --> 01:06:39,440
querying

1630
01:06:39,440 --> 01:06:42,799
the name but also to the

1631
01:06:42,799 --> 01:06:45,920
reporting agent of the

1632
01:06:45,920 --> 01:06:48,640
operators running the domain which is

1633
01:06:48,640 --> 01:06:52,160
good because they can then fix it

1634
01:06:52,160 --> 01:06:54,960
and next slide

1635
01:06:55,200 --> 01:06:57,359
but unfortunately

1636
01:06:57,359 --> 01:07:00,079
the error has then already happened so

1637
01:07:00,079 --> 01:07:02,240
the extended dns error reporting is

1638
01:07:02,240 --> 01:07:04,559
really good but that happens after the

1639
01:07:04,559 --> 01:07:06,319
fact

1640
01:07:06,319 --> 01:07:08,480
so what is driver and dna

1641
01:07:08,480 --> 01:07:10,960
next slide

1642
01:07:10,960 --> 01:07:14,880
is get the dns error reports but then

1643
01:07:14,880 --> 01:07:17,839
without the end user experiencing the

1644
01:07:17,839 --> 01:07:19,119
failure

1645
01:07:19,119 --> 01:07:21,920
so operators can try out the insect

1646
01:07:21,920 --> 01:07:24,480
deployments for a period of time

1647
01:07:24,480 --> 01:07:27,359
before rolling to actual dns

1648
01:07:27,359 --> 01:07:29,839
next slide

1649
01:07:31,920 --> 01:07:35,280
so this is conveniently signaled with a

1650
01:07:35,280 --> 01:07:38,799
new special ds algorithm

1651
01:07:38,799 --> 01:07:42,038
next slide

1652
01:07:42,400 --> 01:07:45,359
the idea is to put the

1653
01:07:45,359 --> 01:07:49,200
ds algorithm or what the the s algorithm

1654
01:07:49,200 --> 01:07:51,520
would have been in a

1655
01:07:51,520 --> 01:07:55,119
actual dna sec as the first byte in the

1656
01:07:55,119 --> 01:07:57,280
digest field

1657
01:07:57,280 --> 01:07:58,880
and the

1658
01:07:58,880 --> 01:08:01,760
digest just following after that next

1659
01:08:01,760 --> 01:08:04,000
flight

1660
01:08:04,000 --> 01:08:06,400
so here you see

1661
01:08:06,400 --> 01:08:09,760
what the the ds record for itf.org and

1662
01:08:09,760 --> 01:08:12,240
how that would look like in driver and

1663
01:08:12,240 --> 01:08:13,760
the intersect

1664
01:08:13,760 --> 01:08:16,080
so it's

1665
01:08:16,080 --> 01:08:18,719
the the

1666
01:08:19,839 --> 01:08:23,120
digest type field is changed from one to

1667
01:08:23,120 --> 01:08:25,679
dry run and

1668
01:08:25,679 --> 01:08:28,560
moved to the first byte of inserted

1669
01:08:28,560 --> 01:08:30,479
basically into the

1670
01:08:30,479 --> 01:08:31,759
digest

1671
01:08:31,759 --> 01:08:34,319
next slide

1672
01:08:34,960 --> 01:08:39,439
so the id then is for resolvers to

1673
01:08:39,439 --> 01:08:43,359
look at the ds resource record set

1674
01:08:43,359 --> 01:08:45,040
and

1675
01:08:45,040 --> 01:08:46,960
so if there is now the

1676
01:08:46,960 --> 01:08:50,158
dsr set it's insecure of course

1677
01:08:50,158 --> 01:08:52,639
but then

1678
01:08:52,719 --> 01:08:55,120
if there is a ds set a validating

1679
01:08:55,120 --> 01:08:58,640
resolver has to pick a ds it will choose

1680
01:08:58,640 --> 01:09:02,000
to validate the domain domain

1681
01:09:02,000 --> 01:09:04,238
in this case it will look is there a

1682
01:09:04,238 --> 01:09:08,560
driver in ds if so we are going to try

1683
01:09:08,560 --> 01:09:10,799
that first

1684
01:09:10,799 --> 01:09:13,040
then

1685
01:09:13,520 --> 01:09:16,479
does it validate yes

1686
01:09:16,479 --> 01:09:19,520
great you you return the answer with the

1687
01:09:19,520 --> 01:09:21,120
id bits head

1688
01:09:21,120 --> 01:09:22,799
if not

1689
01:09:22,799 --> 01:09:25,520
send the report to the reporting agent

1690
01:09:25,520 --> 01:09:28,640
of the operator following extended dns

1691
01:09:28,640 --> 01:09:30,319
error reporting

1692
01:09:30,319 --> 01:09:32,000
and then

1693
01:09:32,000 --> 01:09:35,198
do the validation again but

1694
01:09:35,198 --> 01:09:38,238
with uh pretending that there had not

1695
01:09:38,238 --> 01:09:41,920
been a dryron ds records in the parent

1696
01:09:41,920 --> 01:09:45,279
so if dryron ds is your only ds record

1697
01:09:45,279 --> 01:09:47,359
in the parent the

1698
01:09:47,359 --> 01:09:50,560
it will fall back to insecure

1699
01:09:50,560 --> 01:09:52,238
do you want to take questions right now

1700
01:09:52,238 --> 01:09:53,600
because we have paul in the queue or

1701
01:09:53,600 --> 01:09:55,360
afterwards

1702
01:09:55,360 --> 01:09:56,560
okay okay

1703
01:09:56,560 --> 01:09:58,719
continue

1704
01:09:58,719 --> 01:09:59,600
uh

1705
01:09:59,600 --> 01:10:00,960
so

1706
01:10:00,960 --> 01:10:02,400
okay so

1707
01:10:02,400 --> 01:10:03,280
this

1708
01:10:03,280 --> 01:10:06,880
flowchart is for because it conveys the

1709
01:10:06,880 --> 01:10:11,760
id easiest but in actual implementation

1710
01:10:11,760 --> 01:10:13,600
uh i've so

1711
01:10:13,600 --> 01:10:16,560
the one of the others is yogos

1712
01:10:16,560 --> 01:10:18,320
tesseranike

1713
01:10:18,320 --> 01:10:20,000
which is a

1714
01:10:20,000 --> 01:10:23,040
the developer of the inbound recursive

1715
01:10:23,040 --> 01:10:27,920
resofa what we actually want to do is

1716
01:10:27,920 --> 01:10:32,400
take a ds driver and the s and a non

1717
01:10:32,400 --> 01:10:33,760
driver and the

1718
01:10:33,760 --> 01:10:36,080
simultaneously in the

1719
01:10:36,080 --> 01:10:38,159
validation process

1720
01:10:38,159 --> 01:10:41,120
and then you know evaluate them

1721
01:10:41,120 --> 01:10:44,400
simultaneously and also have two

1722
01:10:44,400 --> 01:10:47,520
security statuses with the rr set in the

1723
01:10:47,520 --> 01:10:48,800
cache

1724
01:10:48,800 --> 01:10:51,760
because otherwise it will be yeah it

1725
01:10:51,760 --> 01:10:53,920
would be like a bit complicated for

1726
01:10:53,920 --> 01:10:55,840
implementations it would be another

1727
01:10:55,840 --> 01:10:59,520
straw on the camera i suppose

1728
01:10:59,520 --> 01:11:02,080
next slide

1729
01:11:02,239 --> 01:11:03,280
so this

1730
01:11:03,280 --> 01:11:07,840
also enables opportunistic dane

1731
01:11:07,840 --> 01:11:08,880
you know

1732
01:11:08,880 --> 01:11:11,600
if you have the excellent if not then

1733
01:11:11,600 --> 01:11:12,960
you know

1734
01:11:12,960 --> 01:11:16,159
so not not useful for signaling right

1735
01:11:16,159 --> 01:11:17,360
which which

1736
01:11:17,360 --> 01:11:21,360
as it happens with a male for example

1737
01:11:21,360 --> 01:11:23,920
next slide

1738
01:11:24,480 --> 01:11:26,719
is this backwards compatible with

1739
01:11:26,719 --> 01:11:29,280
existing deployments yes because the

1740
01:11:29,280 --> 01:11:30,880
spec says

1741
01:11:30,880 --> 01:11:33,120
if a validating resolver does not

1742
01:11:33,120 --> 01:11:36,640
recognize the dsr algorithm it should

1743
01:11:36,640 --> 01:11:38,840
just ignore the ds

1744
01:11:38,840 --> 01:11:42,719
altogether the next slide

1745
01:11:42,719 --> 01:11:46,159
so another colleague of my tom carpe did

1746
01:11:46,159 --> 01:11:48,960
some measurements during the hackathon

1747
01:11:48,960 --> 01:11:51,920
trying to determine what the effect is

1748
01:11:51,920 --> 01:11:55,600
in in the real world of having at the

1749
01:11:55,600 --> 01:11:58,000
ds record with

1750
01:11:58,000 --> 01:12:01,280
a strange uh digest type

1751
01:12:01,280 --> 01:12:02,159
and

1752
01:12:02,159 --> 01:12:03,120
well

1753
01:12:03,120 --> 01:12:05,120
there were some issues with vibe atlas

1754
01:12:05,120 --> 01:12:08,320
at the moment but we could

1755
01:12:08,320 --> 01:12:10,080
the results for

1756
01:12:10,080 --> 01:12:13,360
a running driver next to actual dns

1757
01:12:13,360 --> 01:12:16,560
deployment that was done and as you can

1758
01:12:16,560 --> 01:12:17,360
see

1759
01:12:17,360 --> 01:12:20,159
the error margin is larger than the

1760
01:12:20,159 --> 01:12:22,880
actual effect

1761
01:12:22,880 --> 01:12:25,440
next slide

1762
01:12:27,040 --> 01:12:30,080
cds works as before you can

1763
01:12:30,080 --> 01:12:32,320
we think it's perfectly fine to

1764
01:12:32,320 --> 01:12:36,960
bootstrap actual dnsec from a driver and

1765
01:12:36,960 --> 01:12:38,320
dnsec

1766
01:12:38,320 --> 01:12:42,320
by having a cds key in your zone

1767
01:12:42,320 --> 01:12:44,719
c dns key or not

1768
01:12:44,719 --> 01:12:47,600
cds resource record i mean cdns key is

1769
01:12:47,600 --> 01:12:50,080
another thing

1770
01:12:50,080 --> 01:12:52,480
because

1771
01:12:53,840 --> 01:12:56,320
you you cannot signal what kind of

1772
01:12:56,320 --> 01:12:59,679
ditches type you want to have in the

1773
01:12:59,679 --> 01:13:03,040
parent next slide

1774
01:13:03,120 --> 01:13:06,480
i think there's also opportunity to

1775
01:13:06,480 --> 01:13:08,560
do something else as well

1776
01:13:08,560 --> 01:13:09,280
have

1777
01:13:09,280 --> 01:13:10,480
clients

1778
01:13:10,480 --> 01:13:11,679
uh

1779
01:13:11,679 --> 01:13:14,640
participate in the dry run with a

1780
01:13:14,640 --> 01:13:19,000
veteran query flag

1781
01:13:19,040 --> 01:13:22,480
there are some bits available in edness

1782
01:13:22,480 --> 01:13:23,760
next to

1783
01:13:23,760 --> 01:13:25,520
the do bit

1784
01:13:25,520 --> 01:13:28,800
but maybe nor more realistically next

1785
01:13:28,800 --> 01:13:31,800
slide

1786
01:13:32,320 --> 01:13:35,600
it's just the edness option uh

1787
01:13:35,600 --> 01:13:38,800
acting as a flag

1788
01:13:39,840 --> 01:13:42,400
i hear alexander uh

1789
01:13:42,400 --> 01:13:44,320
good morning

1790
01:13:44,320 --> 01:13:45,360
yeah

1791
01:13:45,360 --> 01:13:47,120
so uh both

1792
01:13:47,120 --> 01:13:49,120
things cannot be tested with the light

1793
01:13:49,120 --> 01:13:52,080
atlas so we have to look into

1794
01:13:52,080 --> 01:13:54,000
other ways to see how backwards

1795
01:13:54,000 --> 01:13:55,840
compatible that would be

1796
01:13:55,840 --> 01:13:59,080
next slide

1797
01:14:00,480 --> 01:14:02,960
so you could sign your zone

1798
01:14:02,960 --> 01:14:06,400
uh and not put a ds in your parent

1799
01:14:06,400 --> 01:14:09,280
and have your authoritative service uh

1800
01:14:09,280 --> 01:14:12,400
report a reporting agent

1801
01:14:12,400 --> 01:14:13,840
right so

1802
01:14:13,840 --> 01:14:16,800
wherefore do we need the uh extra the

1803
01:14:16,800 --> 01:14:19,840
new ds algorithm to signal driver and uh

1804
01:14:19,840 --> 01:14:22,239
dnf

1805
01:14:22,239 --> 01:14:23,679
um

1806
01:14:23,679 --> 01:14:24,880
well

1807
01:14:24,880 --> 01:14:26,560
because

1808
01:14:26,560 --> 01:14:28,080
it's

1809
01:14:28,080 --> 01:14:31,040
the the the

1810
01:14:31,040 --> 01:14:32,960
extended dns error

1811
01:14:32,960 --> 01:14:36,239
reporting edns option is not transitive

1812
01:14:36,239 --> 01:14:38,080
a staff resolver

1813
01:14:38,080 --> 01:14:40,159
may not receive it

1814
01:14:40,159 --> 01:14:42,480
and so for stock validation

1815
01:14:42,480 --> 01:14:45,840
it's better if it can see that driven is

1816
01:14:45,840 --> 01:14:48,800
the intention by having access to the

1817
01:14:48,800 --> 01:14:52,560
complete validation chain

1818
01:14:52,560 --> 01:14:53,679
also

1819
01:14:53,679 --> 01:14:56,960
without it you would not test the the

1820
01:14:56,960 --> 01:14:59,199
link to the ds record

1821
01:14:59,199 --> 01:15:01,600
and uh yeah you would not have the

1822
01:15:01,600 --> 01:15:03,840
benefit of those nice other features

1823
01:15:03,840 --> 01:15:05,440
like boots

1824
01:15:05,440 --> 01:15:08,000
strapping actual dns sec

1825
01:15:08,000 --> 01:15:11,120
from driver nds

1826
01:15:11,120 --> 01:15:13,520
and yeah it's in

1827
01:15:13,520 --> 01:15:16,239
then combining driver and with

1828
01:15:16,239 --> 01:15:19,040
actual dnsec it's nice that

1829
01:15:19,040 --> 01:15:22,000
the ds the driver on vs

1830
01:15:22,000 --> 01:15:26,640
points to the keys that are intended to

1831
01:15:26,640 --> 01:15:28,960
be driving

1832
01:15:28,960 --> 01:15:34,000
so it's nice to be explicit about this

1833
01:15:34,719 --> 01:15:37,280
next slide

1834
01:15:37,440 --> 01:15:40,000
so this is the id

1835
01:15:40,000 --> 01:15:43,120
and i'm uh curious what you think of it

1836
01:15:43,120 --> 01:15:45,760
and if you if you believe that we

1837
01:15:45,760 --> 01:15:47,600
should adopt it if you think it's a good

1838
01:15:47,600 --> 01:15:49,920
idea yes we have a little bit of time

1839
01:15:49,920 --> 01:15:51,600
for questions here

1840
01:15:51,600 --> 01:15:54,640
yeah cool sir okay

1841
01:15:54,640 --> 01:15:56,560
hey uh this is uh gavin brown from

1842
01:15:56,560 --> 01:15:59,440
central nick um i think this is a useful

1843
01:15:59,440 --> 01:16:01,440
uh tool in the in the in the toolbox but

1844
01:16:01,440 --> 01:16:03,760
i just wanted to flag a couple of issues

1845
01:16:03,760 --> 01:16:05,440
on the provisioning side

1846
01:16:05,440 --> 01:16:06,880
so um

1847
01:16:06,880 --> 01:16:08,320
i can't speak for other implementations

1848
01:16:08,320 --> 01:16:10,159
but i can say on our side

1849
01:16:10,159 --> 01:16:12,960
um we validate ds records with which we

1850
01:16:12,960 --> 01:16:14,560
receive over epp and one of the things

1851
01:16:14,560 --> 01:16:17,040
we do is we check the hash length and at

1852
01:16:17,040 --> 01:16:19,679
the moment um every algorithm

1853
01:16:19,679 --> 01:16:21,760
that's in a ds record has a has a

1854
01:16:21,760 --> 01:16:23,679
corresponding fixed hash length and this

1855
01:16:23,679 --> 01:16:26,159
would make hash lengths variable because

1856
01:16:26,159 --> 01:16:28,000
obviously if the dry run record is set

1857
01:16:28,000 --> 01:16:30,880
in that in that algorithm field then the

1858
01:16:30,880 --> 01:16:32,800
implementation now has to know

1859
01:16:32,800 --> 01:16:34,080
i read the first bit off and then i'll

1860
01:16:34,080 --> 01:16:35,440
validate the length of the hash the

1861
01:16:35,440 --> 01:16:37,360
second thing is the way that we as

1862
01:16:37,360 --> 01:16:39,760
registries receive ds records there are

1863
01:16:39,760 --> 01:16:41,920
two interfaces in ebp this is called the

1864
01:16:41,920 --> 01:16:43,760
ds data interface which for this work

1865
01:16:43,760 --> 01:16:45,360
with completely fine there's also the

1866
01:16:45,360 --> 01:16:47,120
dns key interface where all we receive

1867
01:16:47,120 --> 01:16:48,719
is the key data and we generate the

1868
01:16:48,719 --> 01:16:50,960
registry generates the ds record and

1869
01:16:50,960 --> 01:16:52,880
there's no way at this point if a

1870
01:16:52,880 --> 01:16:54,960
registry is using the key data interface

1871
01:16:54,960 --> 01:16:57,280
to know whether to set the dry run flag

1872
01:16:57,280 --> 01:16:59,440
or not so we'd need to extend

1873
01:16:59,440 --> 01:17:02,239
that rfc the epp extension to add a dry

1874
01:17:02,239 --> 01:17:04,480
run flag that could be

1875
01:17:04,480 --> 01:17:06,320
provided along with the dns key data

1876
01:17:06,320 --> 01:17:08,159
when adding a ds record to a domain in

1877
01:17:08,159 --> 01:17:10,159
an epp server

1878
01:17:10,159 --> 01:17:14,159
yeah that sounds like a good id

1879
01:17:14,640 --> 01:17:16,800
and also the first issue

1880
01:17:16,800 --> 01:17:19,120
alternatively you could have a

1881
01:17:19,120 --> 01:17:20,080
separate

1882
01:17:20,080 --> 01:17:22,400
driver and ds

1883
01:17:22,400 --> 01:17:24,960
digest type for each

1884
01:17:24,960 --> 01:17:27,600
corresponding to the actual dns digest

1885
01:17:27,600 --> 01:17:29,280
type

1886
01:17:29,280 --> 01:17:30,480
shane

1887
01:17:30,480 --> 01:17:33,199
hi shane kerr so i was skeptical when i

1888
01:17:33,199 --> 01:17:34,640
first read this but actually when you

1889
01:17:34,640 --> 01:17:36,480
explained it it makes a lot of sense to

1890
01:17:36,480 --> 01:17:37,360
me

1891
01:17:37,360 --> 01:17:39,679
uh have you thought about whether it be

1892
01:17:39,679 --> 01:17:41,600
applicable for

1893
01:17:41,600 --> 01:17:43,920
helping measure the potential impact of

1894
01:17:43,920 --> 01:17:45,760
like a root uh

1895
01:17:45,760 --> 01:17:48,320
rollover

1896
01:17:48,960 --> 01:17:51,650
i have not but i'm i'm doing it now

1897
01:17:51,650 --> 01:17:55,600
[Laughter]

1898
01:17:55,600 --> 01:17:58,719
yeah i guess that would be helpful

1899
01:17:58,719 --> 01:18:02,159
indeed you could do a driver and now you

1900
01:18:02,159 --> 01:18:04,159
would need a driver and trust anchor

1901
01:18:04,159 --> 01:18:05,520
then

1902
01:18:05,520 --> 01:18:06,320
uh

1903
01:18:06,320 --> 01:18:08,719
yeah yeah i think especially if we're

1904
01:18:08,719 --> 01:18:10,800
thinking about an algorithm role at the

1905
01:18:10,800 --> 01:18:12,480
root it might be useful to have this

1906
01:18:12,480 --> 01:18:15,840
beforehand yeah yeah well we we have

1907
01:18:15,840 --> 01:18:18,800
thought about that driven would be very

1908
01:18:18,800 --> 01:18:21,440
useful for testing algorithm wall overs

1909
01:18:21,440 --> 01:18:23,040
in

1910
01:18:23,040 --> 01:18:26,159
just your own domain but i i guess oh

1911
01:18:26,159 --> 01:18:29,199
mikey might just yeah

1912
01:18:32,159 --> 01:18:32,720
so um

1913
01:18:32,720 --> 01:18:35,360
[Music]

1914
01:18:35,360 --> 01:18:37,360
validation already is one of the most

1915
01:18:37,360 --> 01:18:40,320
complex code pieces in a resolver we are

1916
01:18:40,320 --> 01:18:43,199
now adding complexity to that for

1917
01:18:43,199 --> 01:18:44,880
kind of uh

1918
01:18:44,880 --> 01:18:46,560
no benefit because you're giving out

1919
01:18:46,560 --> 01:18:48,159
sort of

1920
01:18:48,159 --> 01:18:49,679
insecure if you are if you are

1921
01:18:49,679 --> 01:18:52,000
encountered and

1922
01:18:52,000 --> 01:18:53,679
i think that

1923
01:18:53,679 --> 01:18:56,159
we should be pushing ede get clients to

1924
01:18:56,159 --> 01:18:58,320
implement ede and have that as a goal

1925
01:18:58,320 --> 01:18:59,520
because that

1926
01:18:59,520 --> 01:19:01,920
gives the end user a clear indication

1927
01:19:01,920 --> 01:19:04,560
and if you implement dnsec you'll find

1928
01:19:04,560 --> 01:19:06,080
these things so

1929
01:19:06,080 --> 01:19:07,600
i don't think that this is something

1930
01:19:07,600 --> 01:19:08,960
that we should do

1931
01:19:08,960 --> 01:19:10,960
getting more and more complex stuff on

1932
01:19:10,960 --> 01:19:13,440
in the resolver to the point where

1933
01:19:13,440 --> 01:19:15,760
only a few people can run resolvers

1934
01:19:15,760 --> 01:19:18,640
because it's getting so complex yeah

1935
01:19:18,640 --> 01:19:22,000
yes sir i think the most complex element

1936
01:19:22,000 --> 01:19:24,719
of this is the extended dns error

1937
01:19:24,719 --> 01:19:28,000
reporting up to the

1938
01:19:28,000 --> 01:19:29,360
operators

1939
01:19:29,360 --> 01:19:31,440
which has already

1940
01:19:31,440 --> 01:19:34,640
been worked on in the work group

1941
01:19:34,640 --> 01:19:37,100
and uh and the goal my opinion on those

1942
01:19:37,100 --> 01:19:38,960
[Laughter]

1943
01:19:38,960 --> 01:19:41,360
and and the goal is to give operators

1944
01:19:41,360 --> 01:19:43,280
more confidence right that to give the

1945
01:19:43,280 --> 01:19:45,679
operators more confidence that uh

1946
01:19:45,679 --> 01:19:46,480
they're

1947
01:19:46,480 --> 01:19:49,760
yeah well for nl half of the

1948
01:19:49,760 --> 01:19:51,760
zones are assigned and it works so

1949
01:19:51,760 --> 01:19:54,480
clearly it is possible if you are you

1950
01:19:54,480 --> 01:19:56,640
put enough energy into it

1951
01:19:56,640 --> 01:19:57,520
yes

1952
01:19:57,520 --> 01:20:00,640
best would be if all tlds would

1953
01:20:00,640 --> 01:20:03,520
give out the domains cheaper if you do

1954
01:20:03,520 --> 01:20:07,280
the insect that i agree

1955
01:20:08,239 --> 01:20:09,360
thank you

1956
01:20:09,360 --> 01:20:10,639
benjamin

1957
01:20:10,639 --> 01:20:13,199
please go ahead

1958
01:20:13,199 --> 01:20:15,199
hi

1959
01:20:15,199 --> 01:20:16,719
i

1960
01:20:16,719 --> 01:20:19,760
i think this is a recurring pattern now

1961
01:20:19,760 --> 01:20:21,760
of people trying to

1962
01:20:21,760 --> 01:20:24,159
uh stuff things into fake digest types

1963
01:20:24,159 --> 01:20:25,040
with

1964
01:20:25,040 --> 01:20:28,320
uh in the ds record um seeing as i wrote

1965
01:20:28,320 --> 01:20:30,080
a draft to do it and and you wrote a

1966
01:20:30,080 --> 01:20:31,360
draft to do it and we're not the only

1967
01:20:31,360 --> 01:20:32,880
two

1968
01:20:32,880 --> 01:20:35,280
rather than um then keep doing this for

1969
01:20:35,280 --> 01:20:36,560
every

1970
01:20:36,560 --> 01:20:38,400
idea that people have for stuffing

1971
01:20:38,400 --> 01:20:40,159
things into the ds record maybe we

1972
01:20:40,159 --> 01:20:42,080
should have a general purpose

1973
01:20:42,080 --> 01:20:43,760
um meta

1974
01:20:43,760 --> 01:20:45,199
digest type

1975
01:20:45,199 --> 01:20:48,480
where we can then avoid polluting the

1976
01:20:48,480 --> 01:20:51,520
digest type space with lots of different

1977
01:20:51,520 --> 01:20:55,120
weird things that aren't digests

1978
01:20:55,520 --> 01:20:57,920
as to this proposal specifically i it's

1979
01:20:57,920 --> 01:21:00,960
not my area really but i do wonder you

1980
01:21:00,960 --> 01:21:02,239
know

1981
01:21:02,239 --> 01:21:04,320
would we be better off just

1982
01:21:04,320 --> 01:21:06,639
providing some uh

1983
01:21:06,639 --> 01:21:09,199
some best practice guidance about how to

1984
01:21:09,199 --> 01:21:12,239
set up a a duplicate of your zone in

1985
01:21:12,239 --> 01:21:14,960
order to enable dns tech there see that

1986
01:21:14,960 --> 01:21:16,239
it works and then do the same thing on

1987
01:21:16,239 --> 01:21:17,679
the real one

1988
01:21:17,679 --> 01:21:20,239
excuse me

1989
01:21:20,560 --> 01:21:21,840
um

1990
01:21:21,840 --> 01:21:23,840
thank you ben uh your mirror story we

1991
01:21:23,840 --> 01:21:25,360
are out of time please send your request

1992
01:21:25,360 --> 01:21:29,320
to the mailing list

1993
01:21:30,480 --> 01:21:31,840
okay

1994
01:21:31,840 --> 01:21:34,400
thank you thank you willem um

1995
01:21:34,400 --> 01:21:36,719
take it indeed the continued discussion

1996
01:21:36,719 --> 01:21:38,400
on the mailing list

1997
01:21:38,400 --> 01:21:39,120
and

1998
01:21:39,120 --> 01:21:42,560
we'll go forward from that thank you

1999
01:21:42,560 --> 01:21:47,199
next presentation is remote by um

2000
01:21:48,080 --> 01:21:52,000
state hash based signatures

2001
01:21:52,960 --> 01:21:56,400
thanks ben good morning good morning um

2002
01:21:56,400 --> 01:21:58,480
i apologize for two things in advance a

2003
01:21:58,480 --> 01:22:00,400
that my slides are much duller than the

2004
01:22:00,400 --> 01:22:01,840
ones that william just showed with the

2005
01:22:01,840 --> 01:22:04,960
beautiful pictures on them uh and uh be

2006
01:22:04,960 --> 01:22:06,960
for my dog who has just walked into the

2007
01:22:06,960 --> 01:22:08,400
room and might start barking if

2008
01:22:08,400 --> 01:22:10,239
something happens outside so apologies

2009
01:22:10,239 --> 01:22:11,840
in advance

2010
01:22:11,840 --> 01:22:14,560
um this is about a draft

2011
01:22:14,560 --> 01:22:17,360
that andrew frickley from verizon and i

2012
01:22:17,360 --> 01:22:20,400
uh co-authored on the use of stateful

2013
01:22:20,400 --> 01:22:23,280
hash based signature schemes for dnsec

2014
01:22:23,280 --> 01:22:25,840
next slide please

2015
01:22:26,080 --> 01:22:28,639
um maybe a little bit of context for

2016
01:22:28,639 --> 01:22:31,280
that so um i'm sure you've all heard the

2017
01:22:31,280 --> 01:22:33,280
discussion uh about the advent of

2018
01:22:33,280 --> 01:22:35,040
quantum computers and maybe paul hoffman

2019
01:22:35,040 --> 01:22:37,199
has talked your ears off about this

2020
01:22:37,199 --> 01:22:38,480
um

2021
01:22:38,480 --> 01:22:41,120
and that there are varying

2022
01:22:41,120 --> 01:22:44,239
uh um opinions about when practical

2023
01:22:44,239 --> 01:22:48,400
quantum computers might come uh to be uh

2024
01:22:48,400 --> 01:22:49,920
around

2025
01:22:49,920 --> 01:22:51,760
but what there is consensus on is that

2026
01:22:51,760 --> 01:22:53,199
these would break current public key

2027
01:22:53,199 --> 01:22:55,440
algorithms and that this causes uh

2028
01:22:55,440 --> 01:22:58,320
problems for internet cryptography

2029
01:22:58,320 --> 01:23:01,280
and i we've heard estimations vary

2030
01:23:01,280 --> 01:23:03,920
anywhere between 15 to 50 years where

2031
01:23:03,920 --> 01:23:06,159
obviously if it's indeed 50 years we

2032
01:23:06,159 --> 01:23:07,760
shouldn't really be worried right now

2033
01:23:07,760 --> 01:23:09,840
whereas if it's 15 years we might need

2034
01:23:09,840 --> 01:23:12,800
to start scratching our heads

2035
01:23:12,800 --> 01:23:14,239
as a consequence

2036
01:23:14,239 --> 01:23:16,480
post quantum crypto algorithms pqc

2037
01:23:16,480 --> 01:23:17,520
algorithms are seeing a lot of

2038
01:23:17,520 --> 01:23:18,800
development

2039
01:23:18,800 --> 01:23:20,080
maybe you've heard of the nist

2040
01:23:20,080 --> 01:23:21,679
standardization effort which is

2041
01:23:21,679 --> 01:23:24,159
currently in the final phase

2042
01:23:24,159 --> 01:23:26,480
um and there is also momentum to start

2043
01:23:26,480 --> 01:23:28,480
deployment of pqc algorithms there's

2044
01:23:28,480 --> 01:23:30,560
already been a lot of experiments in for

2045
01:23:30,560 --> 01:23:33,199
example um

2046
01:23:33,199 --> 01:23:34,719
the tls space

2047
01:23:34,719 --> 01:23:37,040
um but because of this standardization

2048
01:23:37,040 --> 01:23:39,120
effort you can expect requirements for

2049
01:23:39,120 --> 01:23:42,480
pqc support to appear in uh government

2050
01:23:42,480 --> 01:23:45,760
tenders uh in the near future because as

2051
01:23:45,760 --> 01:23:47,040
soon as this becomes an official

2052
01:23:47,040 --> 01:23:48,560
standard governments are going to

2053
01:23:48,560 --> 01:23:51,199
require uh manufacturers to support

2054
01:23:51,199 --> 01:23:55,199
these algorithms next slide please

2055
01:23:55,520 --> 01:23:57,600
um but then there is the argument that

2056
01:23:57,600 --> 01:24:00,159
dns signatures have an effective zero

2057
01:24:00,159 --> 01:24:02,639
year shelf life right so they they don't

2058
01:24:02,639 --> 01:24:05,520
last much beyond their expiration time

2059
01:24:05,520 --> 01:24:08,080
so why should we now already care about

2060
01:24:08,080 --> 01:24:10,320
pqc for the nsx

2061
01:24:10,320 --> 01:24:12,239
well the answer that we have for that is

2062
01:24:12,239 --> 01:24:14,320
that standardization implementation and

2063
01:24:14,320 --> 01:24:16,800
transition of algorithms take a long

2064
01:24:16,800 --> 01:24:18,000
time

2065
01:24:18,000 --> 01:24:19,360
and

2066
01:24:19,360 --> 01:24:22,320
an illustrative example of that is the

2067
01:24:22,320 --> 01:24:24,400
odd 10 odd years that it took for

2068
01:24:24,400 --> 01:24:26,480
example to standardize

2069
01:24:26,480 --> 01:24:28,639
elliptic curve algorithms from when they

2070
01:24:28,639 --> 01:24:31,600
first appeared uh for use in um

2071
01:24:31,600 --> 01:24:33,440
something like the insect from

2072
01:24:33,440 --> 01:24:35,840
them actually being standardized in rfc

2073
01:24:35,840 --> 01:24:36,800
and then

2074
01:24:36,800 --> 01:24:38,880
implemented and the fellowship there's

2075
01:24:38,880 --> 01:24:41,920
my dog and implemented in

2076
01:24:41,920 --> 01:24:44,080
um i'm just gonna close my door

2077
01:24:44,080 --> 01:24:48,000
implement it in software

2078
01:24:48,320 --> 01:24:51,920
um there are other challenges with the

2079
01:24:51,920 --> 01:24:54,480
new and i put this in quotes pqc

2080
01:24:54,480 --> 01:24:56,080
algorithms that are currently being

2081
01:24:56,080 --> 01:24:59,199
considered for standardization by nist

2082
01:24:59,199 --> 01:25:00,880
there are worries about their long-term

2083
01:25:00,880 --> 01:25:03,040
security which is precisely why they're

2084
01:25:03,040 --> 01:25:04,880
running the standardization effort to

2085
01:25:04,880 --> 01:25:06,560
figure out which of the proposed

2086
01:25:06,560 --> 01:25:08,880
algorithms are actually secure for use

2087
01:25:08,880 --> 01:25:10,639
but they also have rather unfavorable

2088
01:25:10,639 --> 01:25:12,560
parameters for use in dns so that's

2089
01:25:12,560 --> 01:25:14,080
something that

2090
01:25:14,080 --> 01:25:17,280
that is a concern for us

2091
01:25:18,080 --> 01:25:20,719
because of the challenges with new pqc

2092
01:25:20,719 --> 01:25:23,360
algorithms that are still

2093
01:25:23,360 --> 01:25:26,159
around but also uh because of the long

2094
01:25:26,159 --> 01:25:28,320
time it takes to standardize algorithms

2095
01:25:28,320 --> 01:25:31,040
for the use in dns sick um it is our

2096
01:25:31,040 --> 01:25:33,040
belief so andrew and i

2097
01:25:33,040 --> 01:25:34,960
state that we think that we need a safe

2098
01:25:34,960 --> 01:25:38,239
fallback to be standardized just in case

2099
01:25:38,239 --> 01:25:40,000
and and keep that in mind with this

2100
01:25:40,000 --> 01:25:43,280
draft next slide please

2101
01:25:43,600 --> 01:25:44,880
and what we're proposing is to

2102
01:25:44,880 --> 01:25:46,719
standardize stateful hash-based

2103
01:25:46,719 --> 01:25:50,639
signature schemes for uh for dnsec um

2104
01:25:50,639 --> 01:25:52,719
a very very quick primer on stateful

2105
01:25:52,719 --> 01:25:57,040
hbss they were first proposed by uh uh

2106
01:25:57,040 --> 01:25:59,360
ralph merkel and are constructed using

2107
01:25:59,360 --> 01:26:01,040
merkle trees i'm not going to bore you

2108
01:26:01,040 --> 01:26:02,560
with all of the details

2109
01:26:02,560 --> 01:26:04,159
um

2110
01:26:04,159 --> 01:26:06,159
the the takeaway is that they they are

2111
01:26:06,159 --> 01:26:08,400
considered to have very strong security

2112
01:26:08,400 --> 01:26:10,400
if you use the secure cryptographic hash

2113
01:26:10,400 --> 01:26:12,159
function basically they inherit the

2114
01:26:12,159 --> 01:26:14,719
security properties of the hash function

2115
01:26:14,719 --> 01:26:16,560
um and that there are actually some good

2116
01:26:16,560 --> 01:26:18,639
security proofs for this

2117
01:26:18,639 --> 01:26:21,920
their workings are very well understood

2118
01:26:21,920 --> 01:26:23,040
they are

2119
01:26:23,040 --> 01:26:24,880
you're very unlikely to encounter crypto

2120
01:26:24,880 --> 01:26:26,960
analytical surprises that suddenly break

2121
01:26:26,960 --> 01:26:28,960
the security of these schemes

2122
01:26:28,960 --> 01:26:31,679
and they remain secure in the face of

2123
01:26:31,679 --> 01:26:34,960
powerful quantum computers

2124
01:26:34,960 --> 01:26:37,199
i note that stateless hash based

2125
01:26:37,199 --> 01:26:39,280
signature schemes also exist for example

2126
01:26:39,280 --> 01:26:41,679
sphinx plus is such a scheme that's

2127
01:26:41,679 --> 01:26:43,600
being considered by nist

2128
01:26:43,600 --> 01:26:45,040
next slide please

2129
01:26:45,040 --> 01:26:46,960
roland yes

2130
01:26:46,960 --> 01:26:49,760
to take a question from the room

2131
01:26:49,760 --> 01:26:51,600
yes stephen go ahead

2132
01:26:51,600 --> 01:26:54,480
hi roland stephen farrell

2133
01:26:54,480 --> 01:26:55,840
so so i think there's a problem with

2134
01:26:55,840 --> 01:26:57,280
stateful hashtag signatures is that you

2135
01:26:57,280 --> 01:26:58,639
have a finite number of signing

2136
01:26:58,639 --> 01:26:59,760
operations

2137
01:26:59,760 --> 01:27:01,040
i'll get to that

2138
01:27:01,040 --> 01:27:02,639
is that okay

2139
01:27:02,639 --> 01:27:04,320
well but the reason i say that is

2140
01:27:04,320 --> 01:27:06,000
because i think it means safe is not the

2141
01:27:06,000 --> 01:27:06,800
right

2142
01:27:06,800 --> 01:27:09,679
way of describing the whole situation

2143
01:27:09,679 --> 01:27:12,000
okay i'll i'll take that we'll take that

2144
01:27:12,000 --> 01:27:13,840
on board um

2145
01:27:13,840 --> 01:27:15,920
when i'm when i okay so maybe i should

2146
01:27:15,920 --> 01:27:18,880
clarify that when we say safe or secure

2147
01:27:18,880 --> 01:27:20,000
we mean

2148
01:27:20,000 --> 01:27:22,239
provided that you

2149
01:27:22,239 --> 01:27:24,400
respect the limitations of these

2150
01:27:24,400 --> 01:27:25,520
algorithms

2151
01:27:25,520 --> 01:27:27,440
and indeed the fact that you can only

2152
01:27:27,440 --> 01:27:29,520
make a finite number of signatures is a

2153
01:27:29,520 --> 01:27:31,120
limitation

2154
01:27:31,120 --> 01:27:32,719
i was about to get to that so maybe next

2155
01:27:32,719 --> 01:27:34,960
slide

2156
01:27:35,760 --> 01:27:36,800
um

2157
01:27:36,800 --> 01:27:39,760
this is a very very very simple

2158
01:27:39,760 --> 01:27:42,639
uh picture of

2159
01:27:42,639 --> 01:27:44,719
what touchy scheme looks like

2160
01:27:44,719 --> 01:27:48,719
what you see on the slide is uh uh the

2161
01:27:48,719 --> 01:27:51,280
the merkle tree that constructs the the

2162
01:27:51,280 --> 01:27:54,000
public key of the uh signature scheme

2163
01:27:54,000 --> 01:27:56,080
um

2164
01:27:56,080 --> 01:27:58,400
underneath the every leaf

2165
01:27:58,400 --> 01:28:01,520
is associated with a um a one-time used

2166
01:28:01,520 --> 01:28:04,880
public key as steven pointed out um you

2167
01:28:04,880 --> 01:28:06,239
can only create a finite number of

2168
01:28:06,239 --> 01:28:08,000
signatures that's because the private

2169
01:28:08,000 --> 01:28:11,280
key is actually constructed uh as a

2170
01:28:11,280 --> 01:28:13,840
set of one-time use private keys that

2171
01:28:13,840 --> 01:28:15,520
you can only use to create one signature

2172
01:28:15,520 --> 01:28:18,000
and should never reuse them

2173
01:28:18,000 --> 01:28:21,840
so basically a signature is composed of

2174
01:28:21,840 --> 01:28:23,360
the

2175
01:28:23,360 --> 01:28:25,120
one-time signature using the one-time

2176
01:28:25,120 --> 01:28:26,960
private key on the data that you're

2177
01:28:26,960 --> 01:28:28,719
signing and then there is an

2178
01:28:28,719 --> 01:28:31,679
authentication path in the merkle tree

2179
01:28:31,679 --> 01:28:35,199
which is uh the list of

2180
01:28:35,199 --> 01:28:36,880
intermediate nodes in the tree that you

2181
01:28:36,880 --> 01:28:39,440
need to reconstruct the

2182
01:28:39,440 --> 01:28:41,840
root hash in order to validate the

2183
01:28:41,840 --> 01:28:42,880
signature

2184
01:28:42,880 --> 01:28:44,880
and in this case those are the

2185
01:28:44,880 --> 01:28:46,080
red

2186
01:28:46,080 --> 01:28:48,320
nodes in the merkle tree

2187
01:28:48,320 --> 01:28:51,120
next slide please

2188
01:28:54,239 --> 01:28:56,239
as steven pointed out you can only

2189
01:28:56,239 --> 01:28:58,080
create a but there are limitations to

2190
01:28:58,080 --> 01:28:59,600
these algorithms you can only create a

2191
01:28:59,600 --> 01:29:01,199
finite number of signatures with the

2192
01:29:01,199 --> 01:29:03,520
signing key um as the private key

2193
01:29:03,520 --> 01:29:07,120
consists of a collection of uh ots keys

2194
01:29:07,120 --> 01:29:09,679
it is essential that you keep stayed for

2195
01:29:09,679 --> 01:29:11,920
your signer because if you reuse one of

2196
01:29:11,920 --> 01:29:14,400
the uh one-time signing keys this breaks

2197
01:29:14,400 --> 01:29:16,560
security of the scheme

2198
01:29:16,560 --> 01:29:18,239
and this is potentially a challenge for

2199
01:29:18,239 --> 01:29:20,080
online signers and distributed setups

2200
01:29:20,080 --> 01:29:21,760
and i'll say something about that on the

2201
01:29:21,760 --> 01:29:23,520
next slide

2202
01:29:23,520 --> 01:29:25,280
another limitation is that signatures

2203
01:29:25,280 --> 01:29:27,440
are very large they're typically larger

2204
01:29:27,440 --> 01:29:30,159
than 2.5 kilobytes per signature

2205
01:29:30,159 --> 01:29:31,920
but the upside is that the public keys

2206
01:29:31,920 --> 01:29:35,040
are very small in the order of 70 bytes

2207
01:29:35,040 --> 01:29:38,080
um so for dns this essentially requires

2208
01:29:38,080 --> 01:29:40,719
eating a zero to transport

2209
01:29:40,719 --> 01:29:42,000
signatures

2210
01:29:42,000 --> 01:29:43,679
as part of a message

2211
01:29:43,679 --> 01:29:46,400
and arguably you need tcp transport or

2212
01:29:46,400 --> 01:29:49,599
or a different transport

2213
01:29:50,000 --> 01:29:50,800
so

2214
01:29:50,800 --> 01:29:52,239
we are therefore not claiming that this

2215
01:29:52,239 --> 01:29:53,840
should be a preferred option for the

2216
01:29:53,840 --> 01:29:56,480
insect but it could be

2217
01:29:56,480 --> 01:29:59,199
a safe fallback of course if implemented

2218
01:29:59,199 --> 01:30:00,719
securely

2219
01:30:00,719 --> 01:30:02,480
and given the time it takes to

2220
01:30:02,480 --> 01:30:05,120
standardize these

2221
01:30:05,120 --> 01:30:07,600
new algorithms we argue that we should

2222
01:30:07,600 --> 01:30:09,520
start standardizing this now so that we

2223
01:30:09,520 --> 01:30:11,280
have at least the same fallback in place

2224
01:30:11,280 --> 01:30:15,440
in case we need it next slide please

2225
01:30:16,000 --> 01:30:19,120
maybe a sidestep if you have online uh

2226
01:30:19,120 --> 01:30:21,040
or multi-signer setups where you have

2227
01:30:21,040 --> 01:30:22,480
multiple signers that need to create

2228
01:30:22,480 --> 01:30:24,560
signatures independently

2229
01:30:24,560 --> 01:30:26,960
you can use a so-called multi-tree

2230
01:30:26,960 --> 01:30:28,639
scheme for that

2231
01:30:28,639 --> 01:30:30,719
where you basically have a top-level

2232
01:30:30,719 --> 01:30:32,719
tree under which you have different

2233
01:30:32,719 --> 01:30:34,480
hierarchies that you can distribute

2234
01:30:34,480 --> 01:30:37,360
among multiple signers and there is more

2235
01:30:37,360 --> 01:30:40,239
information about this in the draft

2236
01:30:40,239 --> 01:30:43,040
next slide please

2237
01:30:43,760 --> 01:30:46,480
so the draft status the draft proposes

2238
01:30:46,480 --> 01:30:49,120
how to use stateful schemes in dns sec

2239
01:30:49,120 --> 01:30:51,199
we currently include

2240
01:30:51,199 --> 01:30:52,239
three

2241
01:30:52,239 --> 01:30:54,960
already iatf standardized algorithms in

2242
01:30:54,960 --> 01:30:57,600
the draft so that's hss lms

2243
01:30:57,600 --> 01:31:00,000
and two variants of xmss

2244
01:31:00,000 --> 01:31:03,440
and the rc numbers are on the slide here

2245
01:31:03,440 --> 01:31:04,480
um

2246
01:31:04,480 --> 01:31:06,400
this draft we consider this draft sort

2247
01:31:06,400 --> 01:31:08,080
of roughly complete in the sense that

2248
01:31:08,080 --> 01:31:10,080
everything we would think needs to be in

2249
01:31:10,080 --> 01:31:12,320
there is in there but of course it needs

2250
01:31:12,320 --> 01:31:16,000
a review and we are interested to hear

2251
01:31:16,000 --> 01:31:17,840
and i heard already heard multiple times

2252
01:31:17,840 --> 01:31:19,360
from benno that that he's going to run a

2253
01:31:19,360 --> 01:31:20,880
survey or that the chairs are going to

2254
01:31:20,880 --> 01:31:22,960
run a survey so we'll wait for that but

2255
01:31:22,960 --> 01:31:24,159
whether there would be an interest in

2256
01:31:24,159 --> 01:31:26,400
adopting this and moving this draft

2257
01:31:26,400 --> 01:31:27,600
forward

2258
01:31:27,600 --> 01:31:30,960
um i would say that the the way we set

2259
01:31:30,960 --> 01:31:34,159
up this draft is very comparable to how

2260
01:31:34,159 --> 01:31:38,000
um for example the eddsa uh rc is

2261
01:31:38,000 --> 01:31:40,639
structured um

2262
01:31:40,639 --> 01:31:42,400
so it really

2263
01:31:42,400 --> 01:31:44,320
only contains the essentials of how do

2264
01:31:44,320 --> 01:31:46,960
you use this algorithm in dns section

2265
01:31:46,960 --> 01:31:50,000
uh anonymous have done or will do um i

2266
01:31:50,000 --> 01:31:51,600
kind of lost track of that a proof of

2267
01:31:51,600 --> 01:31:53,120
concept implementation of this and

2268
01:31:53,120 --> 01:31:55,120
unbound i see ben on nodding so i guess

2269
01:31:55,120 --> 01:31:57,199
that's that's been done

2270
01:31:57,199 --> 01:32:01,280
um next slide please

2271
01:32:02,560 --> 01:32:04,560
we're also considering some follow-up

2272
01:32:04,560 --> 01:32:05,760
work

2273
01:32:05,760 --> 01:32:08,000
we're considering a draft on

2274
01:32:08,000 --> 01:32:11,199
implementation considerations

2275
01:32:11,199 --> 01:32:12,719
which would look at interoper

2276
01:32:12,719 --> 01:32:14,960
operability uh the trade-offs that you

2277
01:32:14,960 --> 01:32:17,040
have if you need use these multi-tree

2278
01:32:17,040 --> 01:32:20,080
setups uh parameter choices

2279
01:32:20,080 --> 01:32:22,880
uh transport considerations etc although

2280
01:32:22,880 --> 01:32:24,480
we do realize that transport

2281
01:32:24,480 --> 01:32:26,080
considerations

2282
01:32:26,080 --> 01:32:27,920
might open up a can of worms because

2283
01:32:27,920 --> 01:32:31,280
that applies to much more than just

2284
01:32:31,280 --> 01:32:34,239
the use of these signature schemes

2285
01:32:34,239 --> 01:32:35,360
um

2286
01:32:35,360 --> 01:32:36,880
i think that's the last slide next slide

2287
01:32:36,880 --> 01:32:38,320
please

2288
01:32:38,320 --> 01:32:40,400
yes uh now is your time for your

2289
01:32:40,400 --> 01:32:42,800
questions um

2290
01:32:42,800 --> 01:32:44,400
and there are some thanks to people who

2291
01:32:44,400 --> 01:32:47,280
reviewed this draft on the slide

2292
01:32:47,280 --> 01:32:48,639
thank you roland

2293
01:32:48,639 --> 01:32:50,880
graham hey gavin brown from central nick

2294
01:32:50,880 --> 01:32:52,400
so a couple of points

2295
01:32:52,400 --> 01:32:54,880
could you give an indication of how much

2296
01:32:54,880 --> 01:32:56,719
state needs to be stored on the signer

2297
01:32:56,719 --> 01:32:59,600
if it's an online signer um

2298
01:32:59,600 --> 01:33:02,480
and and for how long

2299
01:33:02,480 --> 01:33:05,920
um yes i can so the um the state that

2300
01:33:05,920 --> 01:33:08,960
you need to keep is which one-time

2301
01:33:08,960 --> 01:33:10,560
signature private keys you have

2302
01:33:10,560 --> 01:33:12,480
essentially used so you need to track

2303
01:33:12,480 --> 01:33:15,360
and this could just be a sequence number

2304
01:33:15,360 --> 01:33:18,159
where you store the the sequence number

2305
01:33:18,159 --> 01:33:20,880
of the keys

2306
01:33:20,880 --> 01:33:23,280
and for how much time that depends so

2307
01:33:23,280 --> 01:33:24,560
one of the param

2308
01:33:24,560 --> 01:33:28,159
if you choose the parameters for the

2309
01:33:28,159 --> 01:33:30,159
for the key you basically determine how

2310
01:33:30,159 --> 01:33:32,159
many signatures you can create with that

2311
01:33:32,159 --> 01:33:34,159
particular key

2312
01:33:34,159 --> 01:33:35,280
um

2313
01:33:35,280 --> 01:33:37,199
and uh you would need to keep this state

2314
01:33:37,199 --> 01:33:40,639
for the lifetime uh of the key

2315
01:33:40,639 --> 01:33:42,400
answer your question it does a little

2316
01:33:42,400 --> 01:33:44,159
bit but obviously if you've got a second

2317
01:33:44,159 --> 01:33:46,480
a combined signing key or or something

2318
01:33:46,480 --> 01:33:48,639
then that basically means that your

2319
01:33:48,639 --> 01:33:50,719
source your sap for your zone has a has

2320
01:33:50,719 --> 01:33:52,320
a finite lifetime because if you use up

2321
01:33:52,320 --> 01:33:54,480
all of those

2322
01:33:54,480 --> 01:33:56,320
you have to roll your key before you get

2323
01:33:56,320 --> 01:33:57,360
to the point where you've used up all

2324
01:33:57,360 --> 01:33:58,560
the available

2325
01:33:58,560 --> 01:34:00,239
signature leaf signatures

2326
01:34:00,239 --> 01:34:02,159
yes and that's so that

2327
01:34:02,159 --> 01:34:04,000
yes you're correct and that's obviously

2328
01:34:04,000 --> 01:34:04,960
um

2329
01:34:04,960 --> 01:34:06,560
a challenge because there's a trade-off

2330
01:34:06,560 --> 01:34:07,920
here now

2331
01:34:07,920 --> 01:34:10,080
with every so basically one of the

2332
01:34:10,080 --> 01:34:11,679
parameters is the depth of the merkle

2333
01:34:11,679 --> 01:34:14,239
tree that you use so obviously as soon

2334
01:34:14,239 --> 01:34:16,400
as you add another

2335
01:34:16,400 --> 01:34:18,960
um level 3 the number of signatures that

2336
01:34:18,960 --> 01:34:21,600
you can create with that key doubles

2337
01:34:21,600 --> 01:34:25,040
however um your signature length will

2338
01:34:25,040 --> 01:34:27,600
also grow but in a linear fashion so

2339
01:34:27,600 --> 01:34:29,920
every level of the tree adds

2340
01:34:29,920 --> 01:34:31,199
um

2341
01:34:31,199 --> 01:34:33,360
one

2342
01:34:33,360 --> 01:34:34,800
step in the authentication part of the

2343
01:34:34,800 --> 01:34:37,440
signature so that's linear and then the

2344
01:34:37,440 --> 01:34:38,480
number of

2345
01:34:38,480 --> 01:34:40,000
uh signatures that you can create

2346
01:34:40,000 --> 01:34:42,560
doubles so you can create keys that can

2347
01:34:42,560 --> 01:34:44,960
uh generate quite a lot of signatures

2348
01:34:44,960 --> 01:34:46,880
but obviously this is not suitable for

2349
01:34:46,880 --> 01:34:48,719
every type of zone if you have a very

2350
01:34:48,719 --> 01:34:50,239
dynamic zone you're going to run out of

2351
01:34:50,239 --> 01:34:52,800
signatures at some point yeah okay and

2352
01:34:52,800 --> 01:34:54,560
one final point um you describe this as

2353
01:34:54,560 --> 01:34:58,000
a sort of fullback in case um you know

2354
01:34:58,000 --> 01:34:59,600
quantum crypto comes along and everyone

2355
01:34:59,600 --> 01:35:01,440
breaks everyone's algorithms so the

2356
01:35:01,440 --> 01:35:03,920
proposal in this draft is that to that

2357
01:35:03,920 --> 01:35:07,760
we should implement this but not use it

2358
01:35:07,840 --> 01:35:09,600
um

2359
01:35:09,600 --> 01:35:12,159
that's a good question so

2360
01:35:12,159 --> 01:35:12,840
the

2361
01:35:12,840 --> 01:35:14,719
the

2362
01:35:14,719 --> 01:35:16,639
what we are what we are thinking of is

2363
01:35:16,639 --> 01:35:19,119
that you you might need at least as a

2364
01:35:19,119 --> 01:35:21,840
secure option for the root or for safety

2365
01:35:21,840 --> 01:35:24,320
of these where you you have a slightly

2366
01:35:24,320 --> 01:35:26,800
better understanding of how that

2367
01:35:26,800 --> 01:35:28,719
zone is operated and how many signatures

2368
01:35:28,719 --> 01:35:30,560
you need to create etc

2369
01:35:30,560 --> 01:35:32,880
um

2370
01:35:33,280 --> 01:35:34,639
if i think

2371
01:35:34,639 --> 01:35:36,880
of of the i'm and i i don't know the

2372
01:35:36,880 --> 01:35:38,159
number on the top of my head it's it's

2373
01:35:38,159 --> 01:35:40,480
86 something the rfc that that sort of

2374
01:35:40,480 --> 01:35:42,000
specifies which are recommended

2375
01:35:42,000 --> 01:35:43,920
algorithms and and which ones you

2376
01:35:43,920 --> 01:35:45,840
probably should not use this this would

2377
01:35:45,840 --> 01:35:47,600
not be a

2378
01:35:47,600 --> 01:35:49,920
um

2379
01:35:49,920 --> 01:35:51,600
an algorithm that you must implement but

2380
01:35:51,600 --> 01:35:53,760
it's something that you you probably

2381
01:35:53,760 --> 01:35:55,840
should try and implement

2382
01:35:55,840 --> 01:35:57,440
but you must be able to validate it

2383
01:35:57,440 --> 01:35:59,520
that's that's how i look at it

2384
01:35:59,520 --> 01:36:02,400
um but yeah that's a fair point

2385
01:36:02,400 --> 01:36:04,320
thank you

2386
01:36:04,320 --> 01:36:05,440
okay

2387
01:36:05,440 --> 01:36:07,440
paul hoffman so we're a little bit short

2388
01:36:07,440 --> 01:36:08,480
of time

2389
01:36:08,480 --> 01:36:10,800
so please keep your questions and

2390
01:36:10,800 --> 01:36:12,239
answers brief

2391
01:36:12,239 --> 01:36:14,080
sure so this is actually a comment

2392
01:36:14,080 --> 01:36:16,159
roland you said that you're also

2393
01:36:16,159 --> 01:36:18,800
considering doing an implementation

2394
01:36:18,800 --> 01:36:21,920
uh considerations document i absolutely

2395
01:36:21,920 --> 01:36:25,119
would not support adopting

2396
01:36:25,119 --> 01:36:28,000
this spec in the working group until we

2397
01:36:28,000 --> 01:36:30,239
have that implementations document in

2398
01:36:30,239 --> 01:36:31,440
parallel

2399
01:36:31,440 --> 01:36:33,119
given that you just listed a whole bunch

2400
01:36:33,119 --> 01:36:35,679
of mine fields and such like that

2401
01:36:35,679 --> 01:36:37,360
i think that in fact i think the

2402
01:36:37,360 --> 01:36:39,600
implementations consideration should be

2403
01:36:39,600 --> 01:36:42,080
part of this document

2404
01:36:42,080 --> 01:36:45,360
okay thanks for the comment

2405
01:36:46,239 --> 01:36:48,320
all right stephen so in general i think

2406
01:36:48,320 --> 01:36:50,400
doing this would be a bad idea doing it

2407
01:36:50,400 --> 01:36:53,360
now would be a really bad idea um

2408
01:36:53,360 --> 01:36:54,239
so

2409
01:36:54,239 --> 01:36:55,920
the problem with stateful signatures is

2410
01:36:55,920 --> 01:36:57,360
that it creates a whole bunch of weird

2411
01:36:57,360 --> 01:36:59,199
corner cases

2412
01:36:59,199 --> 01:37:00,239
and

2413
01:37:00,239 --> 01:37:01,920
the nist competition is likely to

2414
01:37:01,920 --> 01:37:03,679
produce non-stateful

2415
01:37:03,679 --> 01:37:05,280
post-quantum signature schemes in the

2416
01:37:05,280 --> 01:37:06,560
next year or two

2417
01:37:06,560 --> 01:37:08,639
it would be a much better option to wait

2418
01:37:08,639 --> 01:37:11,199
for those and never think about stateful

2419
01:37:11,199 --> 01:37:15,360
signatures for dns sec in my opinion

2420
01:37:15,679 --> 01:37:18,840
i don't share your optimism but

2421
01:37:18,840 --> 01:37:22,080
okay hi peter thomason from the esec

2422
01:37:22,080 --> 01:37:24,159
um you said that um

2423
01:37:24,159 --> 01:37:25,840
these signatures should be a safe

2424
01:37:25,840 --> 01:37:29,360
fallback option but not um

2425
01:37:29,360 --> 01:37:30,880
you're not pending for them to be the

2426
01:37:30,880 --> 01:37:32,000
preferred

2427
01:37:32,000 --> 01:37:35,280
or a preferred dns mechanism um so i

2428
01:37:35,280 --> 01:37:37,360
wonder how you can have both at the same

2429
01:37:37,360 --> 01:37:39,040
time let's say for example you need the

2430
01:37:39,040 --> 01:37:41,440
fallback um in place when in 20 years

2431
01:37:41,440 --> 01:37:42,960
from now something happens with the post

2432
01:37:42,960 --> 01:37:44,480
quantum algorithms

2433
01:37:44,480 --> 01:37:46,560
then you already need the root zone to

2434
01:37:46,560 --> 01:37:48,880
be signed with these things and

2435
01:37:48,880 --> 01:37:50,639
if you already need to have that in

2436
01:37:50,639 --> 01:37:51,600
place

2437
01:37:51,600 --> 01:37:53,280
then it would have to be supported on

2438
01:37:53,280 --> 01:37:54,880
all

2439
01:37:54,880 --> 01:37:57,520
resolver infrastructure and already

2440
01:37:57,520 --> 01:38:00,080
i guess within a few years from now so

2441
01:38:00,080 --> 01:38:01,840
how does it go together with it not

2442
01:38:01,840 --> 01:38:03,199
being preferred in the sense that you

2443
01:38:03,199 --> 01:38:06,000
can avoid deployment maybe you can't and

2444
01:38:06,000 --> 01:38:07,199
then it would be

2445
01:38:07,199 --> 01:38:08,639
kind of required to have it everywhere

2446
01:38:08,639 --> 01:38:09,679
wouldn't it

2447
01:38:09,679 --> 01:38:11,760
yeah i think so so i think that's that

2448
01:38:11,760 --> 01:38:14,239
that might be conflating two things so

2449
01:38:14,239 --> 01:38:15,119
um

2450
01:38:15,119 --> 01:38:18,320
when um when when we say that this

2451
01:38:18,320 --> 01:38:19,920
should not be the

2452
01:38:19,920 --> 01:38:21,760
uh preferred option what we mean is that

2453
01:38:21,760 --> 01:38:23,119
operationally it should not be the

2454
01:38:23,119 --> 01:38:24,800
preferred option right so unless there

2455
01:38:24,800 --> 01:38:26,320
is a very good reason to deploy this

2456
01:38:26,320 --> 01:38:28,840
operationally you shouldn't do that

2457
01:38:28,840 --> 01:38:31,440
um the

2458
01:38:31,440 --> 01:38:32,130
um

2459
01:38:32,130 --> 01:38:34,159
[Music]

2460
01:38:34,159 --> 01:38:36,960
support for it uh implementing support

2461
01:38:36,960 --> 01:38:39,040
support for it is a different matter and

2462
01:38:39,040 --> 01:38:40,239
because

2463
01:38:40,239 --> 01:38:42,080
signatures effectively have a zero year

2464
01:38:42,080 --> 01:38:43,199
shelf life

2465
01:38:43,199 --> 01:38:45,360
you can deploy

2466
01:38:45,360 --> 01:38:47,199
such a fallback option only when you

2467
01:38:47,199 --> 01:38:48,960
really need it so you should be ready to

2468
01:38:48,960 --> 01:38:50,480
go to deploy it but that doesn't mean

2469
01:38:50,480 --> 01:38:52,000
you need to use it in operation so

2470
01:38:52,000 --> 01:38:54,400
there's no need to actually use this

2471
01:38:54,400 --> 01:38:56,400
in operation for signing until you

2472
01:38:56,400 --> 01:38:57,920
really need it because of the way the

2473
01:38:57,920 --> 01:39:00,719
nsx works

2474
01:39:03,840 --> 01:39:05,040
okay

2475
01:39:05,040 --> 01:39:06,960
um martin i don't know how you did it

2476
01:39:06,960 --> 01:39:08,960
but you actually somehow skipped into

2477
01:39:08,960 --> 01:39:11,600
the closed queue so i'm sorry we are out

2478
01:39:11,600 --> 01:39:13,040
of time so please send your comment to

2479
01:39:13,040 --> 01:39:16,400
the mailing list thank you

2480
01:39:16,400 --> 01:39:18,960
okay thank you roland

2481
01:39:18,960 --> 01:39:20,800
please we continue the discussion on the

2482
01:39:20,800 --> 01:39:22,560
mailing list and

2483
01:39:22,560 --> 01:39:24,400
your draft will also be

2484
01:39:24,400 --> 01:39:27,040
be part of the survey thank you

2485
01:39:27,040 --> 01:39:29,440
um next up is uh

2486
01:39:29,440 --> 01:39:32,799
donald not eastlake

2487
01:39:33,520 --> 01:39:35,520
you want to run your own slides we run

2488
01:39:35,520 --> 01:39:37,679
your slides

2489
01:39:37,679 --> 01:39:40,880
uh sure i can run my slides well

2490
01:39:40,880 --> 01:39:43,600
if you give me control of your

2491
01:39:43,600 --> 01:39:45,840
uploaded slides

2492
01:39:45,840 --> 01:39:48,080
we we do have them ready also if you

2493
01:39:48,080 --> 01:39:50,239
prefer

2494
01:39:50,239 --> 01:39:51,679
well i mean i was gonna i could run

2495
01:39:51,679 --> 01:39:53,440
yours or i can let's see yeah

2496
01:39:53,440 --> 01:39:54,880
i can do

2497
01:39:54,880 --> 01:39:57,440
there we go

2498
01:39:58,639 --> 01:40:00,480
so

2499
01:40:00,480 --> 01:40:03,199
so i challenge you to finish

2500
01:40:03,199 --> 01:40:05,920
all the slides in 15 minutes

2501
01:40:05,920 --> 01:40:08,719
uh i'll see if i can cut

2502
01:40:08,719 --> 01:40:10,639
be quick here so that the

2503
01:40:10,639 --> 01:40:12,480
last presenter has a chance so this is

2504
01:40:12,480 --> 01:40:14,560
about expressing communication service

2505
01:40:14,560 --> 01:40:17,040
requirements in dns queries this is a

2506
01:40:17,040 --> 01:40:18,880
zero zero draft so it's not doesn't

2507
01:40:18,880 --> 01:40:20,960
claim to be fully uh

2508
01:40:20,960 --> 01:40:23,360
polished at this point

2509
01:40:23,360 --> 01:40:25,199
and so the goal is you can get answers

2510
01:40:25,199 --> 01:40:27,920
back that depend on what for example

2511
01:40:27,920 --> 01:40:29,840
you'd like a minimum latency connection

2512
01:40:29,840 --> 01:40:32,320
or maximum bandwidth or like wants to

2513
01:40:32,320 --> 01:40:34,639
work through recursive servers so

2514
01:40:34,639 --> 01:40:37,040
things like meta rrs are not really

2515
01:40:37,040 --> 01:40:39,040
appropriate with no changes of course to

2516
01:40:39,040 --> 01:40:40,560
the dns

2517
01:40:40,560 --> 01:40:42,880
on the wire protocol or messages

2518
01:40:42,880 --> 01:40:44,480
so you know the only things that are

2519
01:40:44,480 --> 01:40:45,760
survived through

2520
01:40:45,760 --> 01:40:47,920
a recursive server is the q name q type

2521
01:40:47,920 --> 01:40:49,679
and q class and really

2522
01:40:49,679 --> 01:40:52,239
q name is the only practical place to

2523
01:40:52,239 --> 01:40:54,480
encode additional uh information you

2524
01:40:54,480 --> 01:40:57,520
might want to encode so there's already

2525
01:40:57,520 --> 01:40:59,440
people well aware it's a very

2526
01:40:59,440 --> 01:41:00,960
knowledgeable audience i'm presenting to

2527
01:41:00,960 --> 01:41:04,159
i must admit uh ways to encode uh things

2528
01:41:04,159 --> 01:41:05,840
about the service or the

2529
01:41:05,840 --> 01:41:08,159
communications protocol you're gonna use

2530
01:41:08,159 --> 01:41:09,600
and if you can get different responses

2531
01:41:09,600 --> 01:41:11,520
back depending on whether you're

2532
01:41:11,520 --> 01:41:13,520
gonna be talking tcp or udp it seems

2533
01:41:13,520 --> 01:41:15,280
reasonable you might want different

2534
01:41:15,280 --> 01:41:18,239
answers based on the kind of

2535
01:41:18,239 --> 01:41:20,400
quality of service you want

2536
01:41:20,400 --> 01:41:21,840
um

2537
01:41:21,840 --> 01:41:24,159
so these underscores are used in a

2538
01:41:24,159 --> 01:41:27,119
number of ways these days

2539
01:41:27,119 --> 01:41:30,560
there's also the rldh restricted letters

2540
01:41:30,560 --> 01:41:34,239
digital hyphen labels defined in 58 90

2541
01:41:34,239 --> 01:41:36,400
which effectively i view them as ways to

2542
01:41:36,400 --> 01:41:38,880
enter to change the interpretation of

2543
01:41:38,880 --> 01:41:39,840
labels

2544
01:41:39,840 --> 01:41:42,480
so currently the only one defined is the

2545
01:41:42,480 --> 01:41:45,440
prefix for internationalized

2546
01:41:45,440 --> 01:41:48,000
labels that can be interpreted as having

2547
01:41:48,000 --> 01:41:50,639
a strict set of unicode in them

2548
01:41:50,639 --> 01:41:51,920
um

2549
01:41:51,920 --> 01:41:53,119
and none of these

2550
01:41:53,119 --> 01:41:55,199
are the rldh labels i think should

2551
01:41:55,199 --> 01:41:57,840
affect anything to do with uh

2552
01:41:57,840 --> 01:41:59,600
protocol on the wire or

2553
01:41:59,600 --> 01:42:03,280
very special processing or security

2554
01:42:03,280 --> 01:42:04,880
so what sort of things might you want to

2555
01:42:04,880 --> 01:42:06,880
say well you sort of a course qos might

2556
01:42:06,880 --> 01:42:09,199
be useful where you just ask for like

2557
01:42:09,199 --> 01:42:12,080
minimum jitter or

2558
01:42:12,080 --> 01:42:14,080
minimum packet loss or things like that

2559
01:42:14,080 --> 01:42:15,600
or with reasonable values for other

2560
01:42:15,600 --> 01:42:18,400
things or you might actually want to

2561
01:42:18,400 --> 01:42:21,520
specify a more precise metric where you

2562
01:42:21,520 --> 01:42:23,760
say a minimum acceptable bandwidth is

2563
01:42:23,760 --> 01:42:26,159
some number of megabits or megabytes or

2564
01:42:26,159 --> 01:42:29,159
whatever

2565
01:42:30,159 --> 01:42:33,119
so the draft is zero geograph has a

2566
01:42:33,119 --> 01:42:35,760
specific proposed format for for uh

2567
01:42:35,760 --> 01:42:38,400
labels and uh

2568
01:42:38,400 --> 01:42:40,080
yes they might start with qs hyphen

2569
01:42:40,080 --> 01:42:41,040
hyphen

2570
01:42:41,040 --> 01:42:44,560
following the rldh format and qs either

2571
01:42:44,560 --> 01:42:46,800
way happens to not be a country code or

2572
01:42:46,800 --> 01:42:48,719
you know it seems like it sort of stands

2573
01:42:48,719 --> 01:42:51,360
for qos to some extent and then just

2574
01:42:51,360 --> 01:42:54,080
have a hexadecimal encoding of tlvs

2575
01:42:54,080 --> 01:42:55,920
where you might just have one tlb or

2576
01:42:55,920 --> 01:42:58,320
possibly several and a hexadecimal is

2577
01:42:58,320 --> 01:43:00,239
not the densest encoding you can imagine

2578
01:43:00,239 --> 01:43:03,040
but it avoids case uh insensitivity

2579
01:43:03,040 --> 01:43:04,960
problems with dns and should be easily

2580
01:43:04,960 --> 01:43:06,239
readable for

2581
01:43:06,239 --> 01:43:10,880
debugging and other purposes like that

2582
01:43:10,880 --> 01:43:12,639
so what would an example be what it

2583
01:43:12,639 --> 01:43:14,639
would actually look like so this is one

2584
01:43:14,639 --> 01:43:16,880
which according to the

2585
01:43:16,880 --> 01:43:19,199
information currently in the draft

2586
01:43:19,199 --> 01:43:21,600
would be a request for uh minimum

2587
01:43:21,600 --> 01:43:25,760
latency uh for example.com so qs hyphen

2588
01:43:25,760 --> 01:43:28,560
hyphens prefix happens to be that

2589
01:43:28,560 --> 01:43:31,600
type 1 is is course qos this is that's

2590
01:43:31,600 --> 01:43:35,040
one byte of value and the value 08 hex

2591
01:43:35,040 --> 01:43:36,639
is currently the value suggested in the

2592
01:43:36,639 --> 01:43:38,800
draft for minimum latency

2593
01:43:38,800 --> 01:43:42,320
so qs hyphen iphone1108.example.com

2594
01:43:42,320 --> 01:43:45,520
it means i want an answer back that

2595
01:43:45,520 --> 01:43:47,119
is minimum latency

2596
01:43:47,119 --> 01:43:48,400
so what what kind of data are you

2597
01:43:48,400 --> 01:43:49,440
getting back well there's lots of

2598
01:43:49,440 --> 01:43:51,040
different things obviously but one

2599
01:43:51,040 --> 01:43:54,000
possibility just a one would be a

2600
01:43:54,000 --> 01:43:56,080
semantic address it's an address that

2601
01:43:56,080 --> 01:43:58,400
has not just the identification of a

2602
01:43:58,400 --> 01:44:00,239
interface identifier but also encode

2603
01:44:00,239 --> 01:44:02,320
some additional information about how to

2604
01:44:02,320 --> 01:44:04,560
connect to that related to routing or

2605
01:44:04,560 --> 01:44:06,480
how to set the header fields or who

2606
01:44:06,480 --> 01:44:08,000
knows what

2607
01:44:08,000 --> 01:44:09,600
so

2608
01:44:09,600 --> 01:44:11,760
you might just be doing a quad a

2609
01:44:11,760 --> 01:44:13,280
retrieval

2610
01:44:13,280 --> 01:44:16,080
with a quality of service specified and

2611
01:44:16,080 --> 01:44:18,800
get back uh a ip address which has some

2612
01:44:18,800 --> 01:44:20,719
additional information in the lower

2613
01:44:20,719 --> 01:44:22,480
order bits

2614
01:44:22,480 --> 01:44:24,560
and uh one way you could use that is you

2615
01:44:24,560 --> 01:44:26,239
could have a thing where your

2616
01:44:26,239 --> 01:44:28,719
application does the dns query takes the

2617
01:44:28,719 --> 01:44:30,560
ad as it gets back and just makes a

2618
01:44:30,560 --> 01:44:32,480
network connection the application is

2619
01:44:32,480 --> 01:44:34,400
could be pretty ignorant of all this

2620
01:44:34,400 --> 01:44:35,679
stuff and doesn't have to understand

2621
01:44:35,679 --> 01:44:37,440
these things and maybe the first hop

2622
01:44:37,440 --> 01:44:39,600
router or something like that notices

2623
01:44:39,600 --> 01:44:41,679
the uh special the

2624
01:44:41,679 --> 01:44:43,119
uh quad

2625
01:44:43,119 --> 01:44:45,600
the ipv6 address and does the right

2626
01:44:45,600 --> 01:44:47,520
thing to get you the network connection

2627
01:44:47,520 --> 01:44:49,199
with the quality of service that you are

2628
01:44:49,199 --> 01:44:51,599
seeking

2629
01:44:52,159 --> 01:44:54,320
um

2630
01:44:54,320 --> 01:44:56,639
so you know what how much you have to

2631
01:44:56,639 --> 01:44:59,199
tweak there's really no necessary change

2632
01:44:59,199 --> 01:45:00,800
at the

2633
01:45:00,800 --> 01:45:02,239
resolver end what do you have to do with

2634
01:45:02,239 --> 01:45:04,320
the server end well you know obviously

2635
01:45:04,320 --> 01:45:06,159
you can if you just want to test out

2636
01:45:06,159 --> 01:45:08,480
your your resolver or

2637
01:45:08,480 --> 01:45:09,840
application or whatever to create these

2638
01:45:09,840 --> 01:45:12,639
things you can always just ignore this

2639
01:45:12,639 --> 01:45:14,560
if this is a prefix label

2640
01:45:14,560 --> 01:45:16,480
in front of your domain name ignore it

2641
01:45:16,480 --> 01:45:18,639
by using wildcard if you have a small

2642
01:45:18,639 --> 01:45:20,480
number of values like these course qos

2643
01:45:20,480 --> 01:45:23,840
values or a few specific metrics you

2644
01:45:23,840 --> 01:45:25,840
could just have those as entries in your

2645
01:45:25,840 --> 01:45:27,280
zone whatever

2646
01:45:27,280 --> 01:45:28,880
but indeed if you want to support more

2647
01:45:28,880 --> 01:45:30,960
general qos metrics where somehow it

2648
01:45:30,960 --> 01:45:32,719
dynamically computes something about how

2649
01:45:32,719 --> 01:45:36,320
to handle uh your connection based on uh

2650
01:45:36,320 --> 01:45:38,560
more precise or complicated qs things

2651
01:45:38,560 --> 01:45:40,320
then there's some sort of thing would

2652
01:45:40,320 --> 01:45:41,920
have to get done at that authoritative

2653
01:45:41,920 --> 01:45:44,639
server perhaps calling some back end or

2654
01:45:44,639 --> 01:45:48,080
other system to get some information

2655
01:45:48,080 --> 01:45:50,560
so this draft also creates a and a

2656
01:45:50,560 --> 01:45:53,360
registry for these are ldh labels which

2657
01:45:53,360 --> 01:45:55,199
i think is a good thing and has its

2658
01:45:55,199 --> 01:45:57,040
expert review and give some suggestions

2659
01:45:57,040 --> 01:45:59,440
to the expert and creates a registry for

2660
01:45:59,440 --> 01:46:00,560
the uh

2661
01:46:00,560 --> 01:46:02,480
these service request types

2662
01:46:02,480 --> 01:46:04,400
i'd like to ask people to take a look at

2663
01:46:04,400 --> 01:46:06,400
the draft certainly welcome any kind of

2664
01:46:06,400 --> 01:46:08,800
comments or suggestions on the draft

2665
01:46:08,800 --> 01:46:10,000
and

2666
01:46:10,000 --> 01:46:14,000
again here's the draft uh name and uh

2667
01:46:14,000 --> 01:46:15,520
i'd like to ask if there are any

2668
01:46:15,520 --> 01:46:16,639
questions

2669
01:46:16,639 --> 01:46:19,679
or comments at this point

2670
01:46:20,000 --> 01:46:22,639
thank you thank you donald uh ben please

2671
01:46:22,639 --> 01:46:25,800
go ahead

2672
01:46:26,719 --> 01:46:28,800
hi ben schwartz

2673
01:46:28,800 --> 01:46:30,000
i

2674
01:46:30,000 --> 01:46:31,520
uh

2675
01:46:31,520 --> 01:46:35,119
i'm going to i think say my my standard

2676
01:46:35,119 --> 01:46:36,880
status thing which is this sounds like a

2677
01:46:36,880 --> 01:46:38,840
job for service

2678
01:46:38,840 --> 01:46:41,679
bindings uh so

2679
01:46:41,679 --> 01:46:45,040
i i don't find the idea of um

2680
01:46:45,040 --> 01:46:47,600
encoding the quality of service in

2681
01:46:47,600 --> 01:46:50,400
in the label very appealing um although

2682
01:46:50,400 --> 01:46:51,840
i think i understand where it's coming

2683
01:46:51,840 --> 01:46:56,639
from uh i you know i think that

2684
01:46:56,639 --> 01:46:57,920
i'm

2685
01:46:57,920 --> 01:47:00,000
uh if i were presented with this problem

2686
01:47:00,000 --> 01:47:02,080
what i would do is to say that

2687
01:47:02,080 --> 01:47:03,840
each of these different quality of

2688
01:47:03,840 --> 01:47:05,760
service labels is something that can be

2689
01:47:05,760 --> 01:47:06,800
encoded

2690
01:47:06,800 --> 01:47:10,080
into an svcb record

2691
01:47:10,080 --> 01:47:12,159
so you query for the name you get back a

2692
01:47:12,159 --> 01:47:13,840
list of options

2693
01:47:13,840 --> 01:47:15,920
and those options can be tagged with an

2694
01:47:15,920 --> 01:47:17,920
indication of

2695
01:47:17,920 --> 01:47:19,199
what kind of quality of service you

2696
01:47:19,199 --> 01:47:21,840
might expect from them

2697
01:47:21,840 --> 01:47:24,080
i that's uh certainly

2698
01:47:24,080 --> 01:47:26,320
something i'll look at a bit but uh that

2699
01:47:26,320 --> 01:47:29,040
requires of course that the application

2700
01:47:29,040 --> 01:47:31,679
uh know about this stuff

2701
01:47:31,679 --> 01:47:33,360
whereas what's been expressed here

2702
01:47:33,360 --> 01:47:34,719
especially if you can use a simatic

2703
01:47:34,719 --> 01:47:36,560
address means you could have a an

2704
01:47:36,560 --> 01:47:39,119
application that is just given a domain

2705
01:47:39,119 --> 01:47:41,199
name and application knows nothing about

2706
01:47:41,199 --> 01:47:43,679
any of this but it magically gets its uh

2707
01:47:43,679 --> 01:47:46,159
network connection with the desired

2708
01:47:46,159 --> 01:47:48,400
quality of service because when it gets

2709
01:47:48,400 --> 01:47:49,840
the quad a that has something in the

2710
01:47:49,840 --> 01:47:52,480
bottom bits that they caught or make

2711
01:47:52,480 --> 01:47:54,400
that be a semantic address that causes

2712
01:47:54,400 --> 01:47:57,519
the quality of service it wants

2713
01:47:58,480 --> 01:48:00,239
yeah i it seems like a little bit too

2714
01:48:00,239 --> 01:48:03,440
much of a retrofit to me um you know if

2715
01:48:03,440 --> 01:48:05,199
if you think that that kind of degree of

2716
01:48:05,199 --> 01:48:07,440
retrofit is is required i think it would

2717
01:48:07,440 --> 01:48:08,639
be

2718
01:48:08,639 --> 01:48:10,239
valuable to understand a little bit more

2719
01:48:10,239 --> 01:48:12,639
about what the motivating use case is

2720
01:48:12,639 --> 01:48:14,880
okay

2721
01:48:15,600 --> 01:48:17,840
thank you

2722
01:48:17,840 --> 01:48:19,360
this is always from the swedish universe

2723
01:48:19,360 --> 01:48:20,560
registry

2724
01:48:20,560 --> 01:48:23,920
um in my head quality of service is a

2725
01:48:23,920 --> 01:48:26,560
property of the network pass

2726
01:48:26,560 --> 01:48:29,520
and i don't know how the uh

2727
01:48:29,520 --> 01:48:32,960
resolver or resolving paths

2728
01:48:32,960 --> 01:48:35,600
might intersect with the network path

2729
01:48:35,600 --> 01:48:37,679
but there's absolutely no

2730
01:48:37,679 --> 01:48:40,159
reason to assume that it does

2731
01:48:40,159 --> 01:48:42,080
and so i really don't see how this

2732
01:48:42,080 --> 01:48:46,280
solves the qs problem

2733
01:48:46,800 --> 01:48:48,719
uh you mean the resolving path the path

2734
01:48:48,719 --> 01:48:50,880
by which the the queries and responses

2735
01:48:50,880 --> 01:48:52,480
are that that

2736
01:48:52,480 --> 01:48:54,560
dns query the the quality of service on

2737
01:48:54,560 --> 01:48:56,080
dns query has nothing to do with the

2738
01:48:56,080 --> 01:48:57,520
this is the idea is to get back

2739
01:48:57,520 --> 01:48:59,199
interviews

2740
01:48:59,199 --> 01:49:01,360
but this query i have to send out to you

2741
01:49:01,360 --> 01:49:03,920
know make my network path do something

2742
01:49:03,920 --> 01:49:05,600
if i send that to

2743
01:49:05,600 --> 01:49:07,440
some resolver somewhere on the internet

2744
01:49:07,440 --> 01:49:08,960
how would that

2745
01:49:08,960 --> 01:49:12,239
make my network path better

2746
01:49:12,239 --> 01:49:13,840
the idea is that the information you get

2747
01:49:13,840 --> 01:49:16,080
back in response to the query would

2748
01:49:16,080 --> 01:49:18,639
and it might be able to do that even if

2749
01:49:18,639 --> 01:49:21,599
it's just a query for an address

2750
01:49:21,599 --> 01:49:24,080
by using semantic addresses it could be

2751
01:49:24,080 --> 01:49:25,760
querying for other things as well of

2752
01:49:25,760 --> 01:49:27,440
course but the idea is that the

2753
01:49:27,440 --> 01:49:30,239
information returned would be uh such as

2754
01:49:30,239 --> 01:49:31,520
to

2755
01:49:31,520 --> 01:49:32,880
make it

2756
01:49:32,880 --> 01:49:34,800
either more likely or certain or

2757
01:49:34,800 --> 01:49:36,080
whatever that you would get the quality

2758
01:49:36,080 --> 01:49:38,880
of service you wanted

2759
01:49:39,440 --> 01:49:40,400
okay

2760
01:49:40,400 --> 01:49:42,320
i mean if you think there should be more

2761
01:49:42,320 --> 01:49:44,080
information about how that would work or

2762
01:49:44,080 --> 01:49:45,920
something then that's a perfectly

2763
01:49:45,920 --> 01:49:48,080
reasonable criticism of the draft but i

2764
01:49:48,080 --> 01:49:49,440
i think it's possible that that would

2765
01:49:49,440 --> 01:49:52,239
work i don't know

2766
01:49:52,960 --> 01:49:54,000
okay

2767
01:49:54,000 --> 01:49:55,119
thank you

2768
01:49:55,119 --> 01:49:56,880
thank you all and uh well please

2769
01:49:56,880 --> 01:49:58,400
continue the discussion on the mailing

2770
01:49:58,400 --> 01:49:59,760
list

2771
01:49:59,760 --> 01:50:01,760
any other questions you have for the

2772
01:50:01,760 --> 01:50:04,000
working group donald

2773
01:50:04,000 --> 01:50:05,360
i don't think so

2774
01:50:05,360 --> 01:50:07,199
okay thank you

2775
01:50:07,199 --> 01:50:09,280
okay our final

2776
01:50:09,280 --> 01:50:10,400
uh

2777
01:50:10,400 --> 01:50:14,560
draft presentation will be by thiru

2778
01:50:14,560 --> 01:50:15,360
so

2779
01:50:15,360 --> 01:50:17,280
sorry donald can i stop sharing your

2780
01:50:17,280 --> 01:50:20,000
slides you can oh okay are you convinced

2781
01:50:20,000 --> 01:50:22,639
i can do this perfect thank you

2782
01:50:22,639 --> 01:50:25,760
do you want to run your own slides or we

2783
01:50:25,760 --> 01:50:27,119
do that for you

2784
01:50:27,119 --> 01:50:28,320
yeah it would be great if you can run

2785
01:50:28,320 --> 01:50:30,799
the slides

2786
01:50:33,199 --> 01:50:35,199
hey good morning uh hey good morning

2787
01:50:35,199 --> 01:50:36,560
everyone uh

2788
01:50:36,560 --> 01:50:38,960
we presented this draft uh in the last

2789
01:50:38,960 --> 01:50:43,119
two idf sessions uh next slide please

2790
01:50:45,280 --> 01:50:47,679
yeah this was originally uh unstructured

2791
01:50:47,679 --> 01:50:50,320
dns opera page that was uh presented at

2792
01:50:50,320 --> 01:50:52,639
several idf sessions and based on the

2793
01:50:52,639 --> 01:50:54,320
feedback we got from the working group

2794
01:50:54,320 --> 01:50:56,880
this structured uh error page draft was

2795
01:50:56,880 --> 01:50:58,960
being created so the idea was basically

2796
01:50:58,960 --> 01:51:01,760
to get a possible json for the user and

2797
01:51:01,760 --> 01:51:03,440
the id troubleshooting especially when

2798
01:51:03,440 --> 01:51:06,159
there is dns filtering and the client

2799
01:51:06,159 --> 01:51:08,080
displays or logs the json with its own

2800
01:51:08,080 --> 01:51:09,679
uh that's the

2801
01:51:09,679 --> 01:51:12,480
background or recap of why this draft

2802
01:51:12,480 --> 01:51:13,920
was created

2803
01:51:13,920 --> 01:51:16,719
next slide please

2804
01:51:18,719 --> 01:51:20,320
one of the major comments that we got in

2805
01:51:20,320 --> 01:51:22,719
the last itf was that uh don't introduce

2806
01:51:22,719 --> 01:51:24,800
a new adns option rather free you see

2807
01:51:24,800 --> 01:51:27,199
extra field in the adhd option itself

2808
01:51:27,199 --> 01:51:28,639
and that's the change we did in this

2809
01:51:28,639 --> 01:51:31,280
version was to introduce recast uh extra

2810
01:51:31,280 --> 01:51:34,400
dn text field in the ada option to have

2811
01:51:34,400 --> 01:51:37,280
a structure json fields

2812
01:51:37,280 --> 01:51:40,000
next slide please

2813
01:51:40,639 --> 01:51:42,239
so as you can see in this figure it's

2814
01:51:42,239 --> 01:51:43,920
it's going to be the extra text field

2815
01:51:43,920 --> 01:51:46,159
with the json attributes to indicate

2816
01:51:46,159 --> 01:51:48,560
reasons why the domain was being

2817
01:51:48,560 --> 01:51:52,880
filtered by uh the dns filtering service

2818
01:51:52,880 --> 01:51:55,440
next slide

2819
01:51:55,679 --> 01:51:57,679
yeah we had also updated the security

2820
01:51:57,679 --> 01:51:59,199
considerations based on the feedback

2821
01:51:59,199 --> 01:52:01,599
from the working group that uh

2822
01:52:01,599 --> 01:52:03,520
the error page would be displayed only

2823
01:52:03,520 --> 01:52:05,520
if the error resolver encrypted resolver

2824
01:52:05,520 --> 01:52:07,840
has a sufficient reputation and in the

2825
01:52:07,840 --> 01:52:09,440
previous version of the draft we had

2826
01:52:09,440 --> 01:52:11,599
mandated encrypted resolver as a

2827
01:52:11,599 --> 01:52:13,679
prerequisite for receiving and

2828
01:52:13,679 --> 01:52:15,679
processing the extra text field and we

2829
01:52:15,679 --> 01:52:17,920
had also added text to

2830
01:52:17,920 --> 01:52:20,159
make sure that this error page is going

2831
01:52:20,159 --> 01:52:21,679
to be displayed in an isolated

2832
01:52:21,679 --> 01:52:24,239
environment just like captive portals

2833
01:52:24,239 --> 01:52:25,679
not to

2834
01:52:25,679 --> 01:52:27,440
get confused with the actual content

2835
01:52:27,440 --> 01:52:28,480
provider

2836
01:52:28,480 --> 01:52:30,719
giving the content back to the user

2837
01:52:30,719 --> 01:52:33,440
and uh in case if the encrypted resolver

2838
01:52:33,440 --> 01:52:35,679
is not uh trusted by the client then

2839
01:52:35,679 --> 01:52:37,520
only the host name of the encrypted

2840
01:52:37,520 --> 01:52:40,560
resolver could be provided that way

2841
01:52:40,560 --> 01:52:42,560
the client does not have to visit the

2842
01:52:42,560 --> 01:52:45,760
error page pointed out by the

2843
01:52:45,760 --> 01:52:48,159
c and r fields so those are the major

2844
01:52:48,159 --> 01:52:50,800
changes that we did to this draft

2845
01:52:50,800 --> 01:52:54,480
and uh next slide please

2846
01:52:54,719 --> 01:52:56,400
yeah i think we have addressed all the

2847
01:52:56,400 --> 01:52:57,840
comments from the working group and we

2848
01:52:57,840 --> 01:53:00,000
have been presenting this throughout

2849
01:53:00,000 --> 01:53:01,840
several itu sessions and

2850
01:53:01,840 --> 01:53:03,599
would like to hear comments and requests

2851
01:53:03,599 --> 01:53:06,719
for working group caption

2852
01:53:07,760 --> 01:53:09,040
thank you

2853
01:53:09,040 --> 01:53:10,560
are there any

2854
01:53:10,560 --> 01:53:12,880
questions from the room remote or in

2855
01:53:12,880 --> 01:53:14,239
person

2856
01:53:14,239 --> 01:53:15,520
ralph please

2857
01:53:15,520 --> 01:53:17,920
go ahead

2858
01:53:18,800 --> 01:53:21,040
not a question really more more comments

2859
01:53:21,040 --> 01:53:23,679
so this shows a good

2860
01:53:23,679 --> 01:53:25,920
usage of the sort of extended dns errors

2861
01:53:25,920 --> 01:53:27,760
and what you can do with it and i just

2862
01:53:27,760 --> 01:53:29,360
want to say that we have an experimental

2863
01:53:29,360 --> 01:53:30,960
implementation for that

2864
01:53:30,960 --> 01:53:33,280
and uh if somebody wants to work with us

2865
01:53:33,280 --> 01:53:36,320
i'm happy to to work with them

2866
01:53:36,320 --> 01:53:38,239
thank you thank you

2867
01:53:38,239 --> 01:53:42,480
um tommy you're next

2868
01:53:44,639 --> 01:53:47,040
all right hello tommy paulie from apple

2869
01:53:47,040 --> 01:53:48,800
um i just wanted to

2870
01:53:48,800 --> 01:53:51,599
speak up to mention that

2871
01:53:51,599 --> 01:53:53,920
i'm definitely supportive of doing some

2872
01:53:53,920 --> 01:53:56,639
work in this area and solving it on the

2873
01:53:56,639 --> 01:53:58,800
client we are seeing a lot of cases

2874
01:53:58,800 --> 01:54:00,159
where

2875
01:54:00,159 --> 01:54:02,000
there is

2876
01:54:02,000 --> 01:54:05,040
filtering going on or blocking and

2877
01:54:05,040 --> 01:54:06,880
the the signals are

2878
01:54:06,880 --> 01:54:08,639
not explicit and they often interfere

2879
01:54:08,639 --> 01:54:10,080
with

2880
01:54:10,080 --> 01:54:11,199
uh

2881
01:54:11,199 --> 01:54:12,560
actually displaying a page if they're

2882
01:54:12,560 --> 01:54:14,960
redirecting you to something

2883
01:54:14,960 --> 01:54:16,480
but your original connection is using

2884
01:54:16,480 --> 01:54:18,880
tls so this would be a very useful

2885
01:54:18,880 --> 01:54:21,520
mechanism i think you know the details

2886
01:54:21,520 --> 01:54:23,040
may need to be iterated upon by the

2887
01:54:23,040 --> 01:54:24,400
working group but it'd be great to see

2888
01:54:24,400 --> 01:54:26,320
this

2889
01:54:26,320 --> 01:54:28,960
in in the working groups hands and

2890
01:54:28,960 --> 01:54:30,400
iterated upon there

2891
01:54:30,400 --> 01:54:32,719
thank you

2892
01:54:33,040 --> 01:54:35,040
thanks tommy

2893
01:54:35,040 --> 01:54:37,840
uh ben

2894
01:54:40,239 --> 01:54:42,880
hey my uh

2895
01:54:42,880 --> 01:54:45,599
my biggest concern with this draft um

2896
01:54:45,599 --> 01:54:47,760
it seems like it's still there

2897
01:54:47,760 --> 01:54:50,880
fundamentally which is that this uh this

2898
01:54:50,880 --> 01:54:54,080
draft is is at base

2899
01:54:54,080 --> 01:54:57,440
meant to uh to create a situation where

2900
01:54:57,440 --> 01:54:59,280
the

2901
01:54:59,280 --> 01:55:02,000
where the client ultimately opens a web

2902
01:55:02,000 --> 01:55:03,040
page

2903
01:55:03,040 --> 01:55:06,000
that is selected by the resolver

2904
01:55:06,000 --> 01:55:08,960
and that's just a really big change from

2905
01:55:08,960 --> 01:55:11,760
the security posture that we currently

2906
01:55:11,760 --> 01:55:14,800
have between clients and resolvers even

2907
01:55:14,800 --> 01:55:16,719
resolvers that we are you know that are

2908
01:55:16,719 --> 01:55:18,560
in some sense trusted

2909
01:55:18,560 --> 01:55:20,239
even even like a

2910
01:55:20,239 --> 01:55:22,159
trusted recursive resolver program like

2911
01:55:22,159 --> 01:55:24,080
mozilla's does not allow

2912
01:55:24,080 --> 01:55:26,239
the the resolver to

2913
01:55:26,239 --> 01:55:28,480
in any way direct the user to open

2914
01:55:28,480 --> 01:55:29,599
particular

2915
01:55:29,599 --> 01:55:30,840
pages or

2916
01:55:30,840 --> 01:55:34,480
websites that is the the real point of

2917
01:55:34,480 --> 01:55:36,880
concern for me if we could find a way to

2918
01:55:36,880 --> 01:55:40,320
keep this truly machine readable

2919
01:55:40,320 --> 01:55:43,679
so that the the information is presented

2920
01:55:43,679 --> 01:55:46,719
by the resolver to the user agent

2921
01:55:46,719 --> 01:55:49,280
and then the the user agent can figure

2922
01:55:49,280 --> 01:55:51,199
out how to present that information

2923
01:55:51,199 --> 01:55:53,280
safely to the user that would be much

2924
01:55:53,280 --> 01:55:56,000
more appealing to me

2925
01:55:57,760 --> 01:55:59,440
thanks ben and there's several fields in

2926
01:55:59,440 --> 01:56:01,280
the station structure like the

2927
01:56:01,280 --> 01:56:02,960
justification field which is just a

2928
01:56:02,960 --> 01:56:04,800
plain text and not an error page in

2929
01:56:04,800 --> 01:56:06,639
itself so the error pages are an

2930
01:56:06,639 --> 01:56:08,400
optional text and the human friendly

2931
01:56:08,400 --> 01:56:10,400
organization name or the justification

2932
01:56:10,400 --> 01:56:12,880
text fields are purely machine passable

2933
01:56:12,880 --> 01:56:15,599
and the user agent can display whatever

2934
01:56:15,599 --> 01:56:16,960
appropriate error page it wants to

2935
01:56:16,960 --> 01:56:18,560
display the other fields are pretty much

2936
01:56:18,560 --> 01:56:20,560
optional so i think as a working group

2937
01:56:20,560 --> 01:56:22,080
we can decide which one is mandatory

2938
01:56:22,080 --> 01:56:23,679
which one is optional and then make uh

2939
01:56:23,679 --> 01:56:26,320
progress on this

2940
01:56:26,400 --> 01:56:29,119
sure so yeah if the draft could be clear

2941
01:56:29,119 --> 01:56:31,840
about what's uh what's optional here and

2942
01:56:31,840 --> 01:56:34,000
and focus on the machine readable

2943
01:56:34,000 --> 01:56:35,599
components that would be much more

2944
01:56:35,599 --> 01:56:37,760
appealing to me um one way that you

2945
01:56:37,760 --> 01:56:39,840
might one way that you might pursue that

2946
01:56:39,840 --> 01:56:43,119
is by replacing some of the the metadata

2947
01:56:43,119 --> 01:56:45,040
information with like a contact field

2948
01:56:45,040 --> 01:56:46,719
like a mailto link

2949
01:56:46,719 --> 01:56:48,719
if you know if you need more information

2950
01:56:48,719 --> 01:56:51,040
you know here's the link to here here's

2951
01:56:51,040 --> 01:56:53,040
an email address to talk to tech support

2952
01:56:53,040 --> 01:56:54,840
here's a phone number that you can

2953
01:56:54,840 --> 01:56:58,159
call sure

2954
01:56:59,440 --> 01:57:01,599
okay thank you thanks ben

2955
01:57:01,599 --> 01:57:03,360
um

2956
01:57:03,360 --> 01:57:06,159
no other questions and comments so dear

2957
01:57:06,159 --> 01:57:10,400
yeah we were testing your patience sorry

2958
01:57:11,280 --> 01:57:13,199
yeah we explained the

2959
01:57:13,199 --> 01:57:15,280
procedure now for adopting new working

2960
01:57:15,280 --> 01:57:16,719
group documents

2961
01:57:16,719 --> 01:57:19,440
so we will run the survey and uh your

2962
01:57:19,440 --> 01:57:21,520
drug will be surely part of that of the

2963
01:57:21,520 --> 01:57:22,960
survey

2964
01:57:22,960 --> 01:57:26,880
thank you yeah okay thank you all

2965
01:57:26,880 --> 01:57:28,800
we come to conclusion of the working

2966
01:57:28,800 --> 01:57:30,960
group i would like to thank all the

2967
01:57:30,960 --> 01:57:33,280
presenters of drafts thank you very much

2968
01:57:33,280 --> 01:57:35,840
i would like also to thank all the

2969
01:57:35,840 --> 01:57:38,400
remote and in-person

2970
01:57:38,400 --> 01:57:40,000
attendees here in the dinosaur working

2971
01:57:40,000 --> 01:57:42,560
group it's it's good to see you back

2972
01:57:42,560 --> 01:57:43,920
here in the room

2973
01:57:43,920 --> 01:57:46,159
and i would like to thank alexander for

2974
01:57:46,159 --> 01:57:48,480
helping us out as a delegate

2975
01:57:48,480 --> 01:57:50,560
and that closes the working group thank

2976
01:57:50,560 --> 01:57:53,560
you

2977
01:58:00,320 --> 01:58:03,280
for for today

2978
01:58:03,280 --> 01:58:05,440
thank you warren

2979
01:58:05,440 --> 01:58:07,440
the dinosaur working group is closed for

2980
01:58:07,440 --> 01:58:10,440
today

