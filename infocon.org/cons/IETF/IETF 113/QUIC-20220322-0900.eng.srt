1
00:00:13,519 --> 00:00:16,519
um

2
00:00:43,600 --> 00:00:45,440
one right yeah sure but we we would need

3
00:00:45,440 --> 00:00:47,440
to populate the

4
00:00:47,440 --> 00:00:49,120
real on the real world and we'll be

5
00:00:49,120 --> 00:00:51,360
coordinating taking it to the list after

6
00:00:51,360 --> 00:00:52,640
this

7
00:00:52,640 --> 00:00:54,719
reaching out to people okay

8
00:00:54,719 --> 00:00:58,960
stuff like that yeah i mean that's

9
00:01:08,640 --> 00:01:10,960
yeah it was kind of just trying to do so

10
00:01:10,960 --> 00:01:13,520
that's

11
00:01:29,920 --> 00:01:32,920
um

12
00:01:54,320 --> 00:01:57,200
okay good morning everybody uh this is

13
00:01:57,200 --> 00:02:00,000
the first in-person quick meeting i've

14
00:02:00,000 --> 00:02:03,200
shared so bear with me i have no excuse

15
00:02:03,200 --> 00:02:06,240
for first day technology woes uh

16
00:02:06,240 --> 00:02:07,920
apparently we have a bit of an av issue

17
00:02:07,920 --> 00:02:10,000
with the screen behind me in terms of

18
00:02:10,000 --> 00:02:12,239
that would be running me tako you know

19
00:02:12,239 --> 00:02:14,480
visualization of what's happening

20
00:02:14,480 --> 00:02:16,879
but don't worry uh

21
00:02:16,879 --> 00:02:20,000
we'll live on um in case anyone in the

22
00:02:20,000 --> 00:02:22,879
room hasn't yet done it there was a qr

23
00:02:22,879 --> 00:02:24,879
code to scan on the way in that would

24
00:02:24,879 --> 00:02:26,720
cover the blue sheets and that would

25
00:02:26,720 --> 00:02:28,560
allow you to

26
00:02:28,560 --> 00:02:30,400
participate so we'll be running the

27
00:02:30,400 --> 00:02:32,640
queue via the

28
00:02:32,640 --> 00:02:35,120
the website slash application that that

29
00:02:35,120 --> 00:02:36,879
qr code would load

30
00:02:36,879 --> 00:02:38,400
so if you would like to get onto the

31
00:02:38,400 --> 00:02:40,400
microphone while you're in the room

32
00:02:40,400 --> 00:02:42,239
please use that tool similarly for

33
00:02:42,239 --> 00:02:44,480
remote participants you'll be familiar

34
00:02:44,480 --> 00:02:45,440
with

35
00:02:45,440 --> 00:02:47,840
using the me tattoo tool to participate

36
00:02:47,840 --> 00:02:50,239
in terms of sharing your microphone and

37
00:02:50,239 --> 00:02:51,920
entering the queue and

38
00:02:51,920 --> 00:02:53,680
so on and so forth

39
00:02:53,680 --> 00:02:57,360
so without further ado let's get on with

40
00:02:57,360 --> 00:03:00,159
some administrivia and

41
00:03:00,159 --> 00:03:02,640
some chair slides

42
00:03:02,640 --> 00:03:04,400
i'm sharing

43
00:03:04,400 --> 00:03:06,400
how do i

44
00:03:06,400 --> 00:03:08,080
forward the slide there we go with a

45
00:03:08,080 --> 00:03:10,080
note well so if you're not familiar with

46
00:03:10,080 --> 00:03:12,480
the note well no well the note well we

47
00:03:12,480 --> 00:03:14,159
are on our second day so i hope some of

48
00:03:14,159 --> 00:03:16,560
you would have seen this yesterday uh

49
00:03:16,560 --> 00:03:18,640
the noteworld is a reminder of you know

50
00:03:18,640 --> 00:03:20,319
the policies in effect

51
00:03:20,319 --> 00:03:22,319
uh on various topics such as patents and

52
00:03:22,319 --> 00:03:24,720
code of conduct uh you know

53
00:03:24,720 --> 00:03:26,400
so please do just go and follow the

54
00:03:26,400 --> 00:03:28,159
links and read up on this and understand

55
00:03:28,159 --> 00:03:31,120
how your contributions on participation

56
00:03:31,120 --> 00:03:32,720
in the ietf

57
00:03:32,720 --> 00:03:36,640
follow processes and policies

58
00:03:37,360 --> 00:03:38,959
in addition to that

59
00:03:38,959 --> 00:03:40,799
just like last time we'd like to draw a

60
00:03:40,799 --> 00:03:42,159
specific attention to our code of

61
00:03:42,159 --> 00:03:43,280
conduct

62
00:03:43,280 --> 00:03:45,360
and the expectations for how tf

63
00:03:45,360 --> 00:03:47,040
participants

64
00:03:47,040 --> 00:03:48,640
extend respect and get to see to their

65
00:03:48,640 --> 00:03:50,480
colleagues at all time

66
00:03:50,480 --> 00:03:52,319
again please

67
00:03:52,319 --> 00:03:54,560
familiarize yourself with these

68
00:03:54,560 --> 00:03:56,159
and if there are any issues that you

69
00:03:56,159 --> 00:03:57,920
encounter with code of conduct the

70
00:03:57,920 --> 00:04:00,799
chairs the ads the ombuds team are here

71
00:04:00,799 --> 00:04:04,799
so please reach out to us

72
00:04:06,239 --> 00:04:08,080
we have a note taker brian has

73
00:04:08,080 --> 00:04:09,680
volunteered thank you very much as

74
00:04:09,680 --> 00:04:11,120
always if there's anyone who would like

75
00:04:11,120 --> 00:04:14,400
to dive into the notes app and help him

76
00:04:14,400 --> 00:04:16,560
that would be brilliant

77
00:04:16,560 --> 00:04:19,680
we do need a board the bluetooth already

78
00:04:19,680 --> 00:04:21,519
handled that's good

79
00:04:21,519 --> 00:04:23,440
we would like a javascribe would anyone

80
00:04:23,440 --> 00:04:26,759
like to volunteer

81
00:04:29,360 --> 00:04:31,440
david thank you very much

82
00:04:31,440 --> 00:04:33,680
uh we've covered the till these slides

83
00:04:33,680 --> 00:04:35,360
are taken from the last time around so

84
00:04:35,360 --> 00:04:36,720
some of the outcomes might change it

85
00:04:36,720 --> 00:04:38,960
doesn't look that way to me um

86
00:04:38,960 --> 00:04:40,800
so again i would hope some of you are

87
00:04:40,800 --> 00:04:43,520
familiar but if not you can always

88
00:04:43,520 --> 00:04:46,479
use your intuition

89
00:04:48,800 --> 00:04:50,080
oops

90
00:04:50,080 --> 00:04:52,080
wrong link to the agenda there we go the

91
00:04:52,080 --> 00:04:54,520
obvious error we are

92
00:04:54,520 --> 00:04:57,280
iatf113 um please ignore that link

93
00:04:57,280 --> 00:05:00,080
that's my fault but the the rough order

94
00:05:00,080 --> 00:05:03,919
of events is listed here anyway

95
00:05:05,039 --> 00:05:06,479
we're going to do some chair updates

96
00:05:06,479 --> 00:05:08,800
keep trying to keep it brief uh

97
00:05:08,800 --> 00:05:10,960
you know as we've uh completed quick

98
00:05:10,960 --> 00:05:14,000
vision one it kind of people uh maybe

99
00:05:14,000 --> 00:05:15,520
not following the working group so

100
00:05:15,520 --> 00:05:16,880
closely so we just want to give you an

101
00:05:16,880 --> 00:05:18,960
idea of what's happened since last time

102
00:05:18,960 --> 00:05:20,639
um then we'll get into the adopted

103
00:05:20,639 --> 00:05:22,720
working group items so we'll cover

104
00:05:22,720 --> 00:05:25,520
version negotiation

105
00:05:25,520 --> 00:05:27,680
quick load balancing quick v2

106
00:05:27,680 --> 00:05:31,039
onto multi-path and q log and then we

107
00:05:31,039 --> 00:05:33,360
have one additional item to talk about

108
00:05:33,360 --> 00:05:35,440
zero rtt bdp

109
00:05:35,440 --> 00:05:39,840
would anyone like to bash that agenda

110
00:05:45,039 --> 00:05:47,840
nope okay

111
00:05:48,639 --> 00:05:51,199
so brief update since last meeting the

112
00:05:51,199 --> 00:05:53,360
the multi-path document was adopted into

113
00:05:53,360 --> 00:05:55,280
the working group which is good um work

114
00:05:55,280 --> 00:05:56,800
is underway there we'll hear from miria

115
00:05:56,800 --> 00:05:58,000
later about

116
00:05:58,000 --> 00:05:59,600
what's been happening what issues there

117
00:05:59,600 --> 00:06:03,759
are to resolve etc uh the hp 3 and q pac

118
00:06:03,759 --> 00:06:06,400
drafts ended all 48 after about a year

119
00:06:06,400 --> 00:06:07,840
of purgatory

120
00:06:07,840 --> 00:06:11,840
so uh we're making some progress there

121
00:06:11,840 --> 00:06:13,919
the datagram draft entered all 48

122
00:06:13,919 --> 00:06:15,840
yesterday just as we were on the train

123
00:06:15,840 --> 00:06:18,319
to somewhere um so

124
00:06:18,319 --> 00:06:19,120
the

125
00:06:19,120 --> 00:06:21,600
uh we'll we'll be following with an

126
00:06:21,600 --> 00:06:23,520
update to the list about how we're going

127
00:06:23,520 --> 00:06:26,479
to manage all 48 comments um around this

128
00:06:26,479 --> 00:06:28,639
time but should be

129
00:06:28,639 --> 00:06:30,479
nothing out of the ordinary in terms of

130
00:06:30,479 --> 00:06:33,600
our working group github flow of issues

131
00:06:33,600 --> 00:06:36,160
and resolutions

132
00:06:36,160 --> 00:06:37,840
so look out for that

133
00:06:37,840 --> 00:06:40,319
the ops drafts the the applicability

134
00:06:40,319 --> 00:06:42,880
manageability draft completed ietf last

135
00:06:42,880 --> 00:06:45,039
call we're at zero github issues right

136
00:06:45,039 --> 00:06:46,000
now

137
00:06:46,000 --> 00:06:47,919
so thank you for all the reviewers from

138
00:06:47,919 --> 00:06:49,599
the various areas

139
00:06:49,599 --> 00:06:52,960
um and for the editors in responding to

140
00:06:52,960 --> 00:06:55,280
those issues uh i think we're in a good

141
00:06:55,280 --> 00:06:58,240
place we will be working with our head

142
00:06:58,240 --> 00:06:59,280
to

143
00:06:59,280 --> 00:07:01,840
progress onto the next stage um and the

144
00:07:01,840 --> 00:07:04,319
grease bit document uh is dura shepherd

145
00:07:04,319 --> 00:07:06,720
write-up from me um so that's on me and

146
00:07:06,720 --> 00:07:09,120
that'll be coming soon ahead so

147
00:07:09,120 --> 00:07:12,800
just just look out for that one

148
00:07:13,680 --> 00:07:17,919
related work um we had mask yesterday

149
00:07:17,919 --> 00:07:20,240
which was you know good

150
00:07:20,240 --> 00:07:22,560
we have web transport on thursday which

151
00:07:22,560 --> 00:07:24,639
i hope will be good um and there is a

152
00:07:24,639 --> 00:07:27,360
media of a quick both session on

153
00:07:27,360 --> 00:07:30,639
wednesday morning so tomorrow this time

154
00:07:30,639 --> 00:07:32,400
that you might want to look out for i

155
00:07:32,400 --> 00:07:35,840
won't go into any more details there

156
00:07:38,400 --> 00:07:40,160
so i have two slides that i would like

157
00:07:40,160 --> 00:07:41,840
to talk about general

158
00:07:41,840 --> 00:07:43,919
working group business the first one

159
00:07:43,919 --> 00:07:46,160
should be fairly straightforward

160
00:07:46,160 --> 00:07:48,160
but for those who maybe don't know the

161
00:07:48,160 --> 00:07:50,319
the data tracker holds both our charter

162
00:07:50,319 --> 00:07:52,479
and our list of milestones

163
00:07:52,479 --> 00:07:53,360
um

164
00:07:53,360 --> 00:07:55,360
the data tracker allows generally

165
00:07:55,360 --> 00:07:57,759
speaking milestones to have dates or no

166
00:07:57,759 --> 00:08:01,280
dates you can't mix them but you can

167
00:08:01,280 --> 00:08:04,560
go inside and toggle between the two um

168
00:08:04,560 --> 00:08:06,639
currently the quick working group uses

169
00:08:06,639 --> 00:08:08,800
milestones with dates

170
00:08:08,800 --> 00:08:11,039
and all of the milestones along the

171
00:08:11,039 --> 00:08:13,919
lines of submit draft so-and-so to the

172
00:08:13,919 --> 00:08:15,759
isg

173
00:08:15,759 --> 00:08:17,120
if anyone looks at those they're all

174
00:08:17,120 --> 00:08:18,960
past you um

175
00:08:18,960 --> 00:08:20,400
we're also missing some milestones for

176
00:08:20,400 --> 00:08:22,160
the documents we've adopted

177
00:08:22,160 --> 00:08:25,840
um since since that happened

178
00:08:25,840 --> 00:08:27,680
we can blame codeword for that

179
00:08:27,680 --> 00:08:30,960
but but i think what what's what's

180
00:08:30,960 --> 00:08:32,479
kind of fun from my perspective is no

181
00:08:32,479 --> 00:08:34,240
one seems to have complained about this

182
00:08:34,240 --> 00:08:37,919
and that we're making good good progress

183
00:08:37,919 --> 00:08:41,039
spencer's in the queue uh

184
00:08:41,039 --> 00:08:42,080
okay

185
00:08:42,080 --> 00:08:45,360
this slide okay um

186
00:08:46,080 --> 00:08:47,279
as far as we're considering we're

187
00:08:47,279 --> 00:08:48,640
keeping active and everything's going

188
00:08:48,640 --> 00:08:50,320
along okay so

189
00:08:50,320 --> 00:08:51,519
uh

190
00:08:51,519 --> 00:08:52,880
none of this is unique to the quick

191
00:08:52,880 --> 00:08:54,480
working group as far as i can tell i

192
00:08:54,480 --> 00:08:56,800
wanted to do some data driven analysis

193
00:08:56,800 --> 00:08:59,600
uh so i scraped the the data tracker api

194
00:08:59,600 --> 00:09:01,360
and gathered some information it's not a

195
00:09:01,360 --> 00:09:02,560
thread on the working group chairs

196
00:09:02,560 --> 00:09:03,760
mailing list

197
00:09:03,760 --> 00:09:05,680
as far as i could tell but at the point

198
00:09:05,680 --> 00:09:08,720
in time i did this there was 123 working

199
00:09:08,720 --> 00:09:10,240
groups four of them used non-dated

200
00:09:10,240 --> 00:09:12,480
milestones and the rest is dated of

201
00:09:12,480 --> 00:09:15,920
those dated milestones over 500

202
00:09:15,920 --> 00:09:18,560
oh sorry if there were 500 and 400 out

203
00:09:18,560 --> 00:09:20,640
of those were late so that's about 80

204
00:09:20,640 --> 00:09:22,160
and the median value was two and a half

205
00:09:22,160 --> 00:09:23,360
years so

206
00:09:23,360 --> 00:09:25,040
my my interpretation is they're pretty

207
00:09:25,040 --> 00:09:26,720
pointless um

208
00:09:26,720 --> 00:09:29,839
having goals and in general is good and

209
00:09:29,839 --> 00:09:32,480
we should strive to

210
00:09:32,480 --> 00:09:33,920
keep on top of the work that's happening

211
00:09:33,920 --> 00:09:36,240
here and keep it tuned along and we do

212
00:09:36,240 --> 00:09:37,200
see that

213
00:09:37,200 --> 00:09:38,560
so for the quick working group the

214
00:09:38,560 --> 00:09:42,080
proposal would be to switch away from

215
00:09:42,080 --> 00:09:44,320
these dated milestones which adds you

216
00:09:44,320 --> 00:09:46,480
know some work for us to decide what the

217
00:09:46,480 --> 00:09:48,080
date should be and then

218
00:09:48,080 --> 00:09:50,399
what it should be when we don't hit that

219
00:09:50,399 --> 00:09:53,120
because of various reasons um but the

220
00:09:53,120 --> 00:09:56,880
order of presentation of that list would

221
00:09:56,880 --> 00:09:58,880
be the anticipated sequence of our

222
00:09:58,880 --> 00:10:01,360
documents

223
00:10:02,399 --> 00:10:03,279
so

224
00:10:03,279 --> 00:10:06,640
i see spencer in the queue

225
00:10:07,360 --> 00:10:09,279
and then david after him please go ahead

226
00:10:09,279 --> 00:10:12,160
spencer yeah thank you uh so spencer

227
00:10:12,160 --> 00:10:13,760
dawkins and

228
00:10:13,760 --> 00:10:14,959
um

229
00:10:14,959 --> 00:10:16,160
i

230
00:10:16,160 --> 00:10:18,399
applaud

231
00:10:18,399 --> 00:10:20,240
the discussions that are happening

232
00:10:20,240 --> 00:10:22,240
everywhere in the itf about

233
00:10:22,240 --> 00:10:23,200
uh

234
00:10:23,200 --> 00:10:26,640
that we don't lie to ourselves

235
00:10:27,360 --> 00:10:28,079
but

236
00:10:28,079 --> 00:10:30,959
when we stop lying to ourselves

237
00:10:30,959 --> 00:10:32,880
and start telling the truth people will

238
00:10:32,880 --> 00:10:36,560
notice that something happened

239
00:10:36,560 --> 00:10:39,200
the people in the ietf will adjust

240
00:10:39,200 --> 00:10:41,360
but i would suggest you to i would

241
00:10:41,360 --> 00:10:43,279
suggest you all to be

242
00:10:43,279 --> 00:10:44,720
very clear

243
00:10:44,720 --> 00:10:45,680
in

244
00:10:45,680 --> 00:10:48,079
what you're doing and why

245
00:10:48,079 --> 00:10:50,319
and

246
00:10:50,959 --> 00:10:52,320
i would

247
00:10:52,320 --> 00:10:54,160
ask the working group

248
00:10:54,160 --> 00:10:56,880
to consider their chairs to consider

249
00:10:56,880 --> 00:11:00,240
uh dropping a liaison

250
00:11:00,240 --> 00:11:01,839
message to

251
00:11:01,839 --> 00:11:03,839
people who've already interacted with

252
00:11:03,839 --> 00:11:04,800
the

253
00:11:04,800 --> 00:11:07,200
quick working group from other sdos

254
00:11:07,200 --> 00:11:09,440
and explain to them what is happening

255
00:11:09,440 --> 00:11:11,519
and why and that we all think it's a

256
00:11:11,519 --> 00:11:14,480
good thing and that this is the way this

257
00:11:14,480 --> 00:11:16,560
this is reality for the last

258
00:11:16,560 --> 00:11:18,160
however long the quick working group has

259
00:11:18,160 --> 00:11:20,079
been in existence anyway

260
00:11:20,079 --> 00:11:21,760
and now they can tell what we're

261
00:11:21,760 --> 00:11:23,920
actually doing

262
00:11:23,920 --> 00:11:25,839
but

263
00:11:25,839 --> 00:11:29,360
it seems like to me that without that

264
00:11:29,360 --> 00:11:31,519
having the dates suddenly disappear

265
00:11:31,519 --> 00:11:32,880
completely

266
00:11:32,880 --> 00:11:36,399
would send the message that

267
00:11:36,480 --> 00:11:38,079
you have we have no idea how long this

268
00:11:38,079 --> 00:11:40,560
is going to take which may be true

269
00:11:40,560 --> 00:11:42,880
and you might as well go ahead and try

270
00:11:42,880 --> 00:11:44,079
to do stuff

271
00:11:44,079 --> 00:11:45,760
that's in scope for this working group

272
00:11:45,760 --> 00:11:48,399
yourself in another sdo

273
00:11:48,399 --> 00:11:51,440
and that that would be

274
00:11:51,440 --> 00:11:53,440
that would be a train wreck

275
00:11:53,440 --> 00:11:55,040
so um

276
00:11:55,040 --> 00:11:57,519
like say i i i know you all will do the

277
00:11:57,519 --> 00:11:59,519
right thing whatever that is

278
00:11:59,519 --> 00:12:00,880
but uh

279
00:12:00,880 --> 00:12:02,639
that that would be my

280
00:12:02,639 --> 00:12:05,440
uh input into your consideration to do

281
00:12:05,440 --> 00:12:07,519
the right thing thank you

282
00:12:07,519 --> 00:12:09,920
thank you spencer um we'll take we've

283
00:12:09,920 --> 00:12:11,360
captured some notes there so we'll take

284
00:12:11,360 --> 00:12:12,880
that into consideration

285
00:12:12,880 --> 00:12:15,680
david please

286
00:12:17,360 --> 00:12:19,839
david scanasi quick enthusiast

287
00:12:19,839 --> 00:12:21,040
um

288
00:12:21,040 --> 00:12:22,160
sure

289
00:12:22,160 --> 00:12:24,720
this is between the chairs and the a.d

290
00:12:24,720 --> 00:12:29,040
please just decide like let's move on

291
00:12:29,040 --> 00:12:31,760
we trust you

292
00:12:32,480 --> 00:12:34,320
okay

293
00:12:34,320 --> 00:12:35,440
thank you

294
00:12:35,440 --> 00:12:37,440
um

295
00:12:37,440 --> 00:12:38,959
okay uh

296
00:12:38,959 --> 00:12:40,639
and i'll just try to hammer this through

297
00:12:40,639 --> 00:12:42,720
um for anyone that may

298
00:12:42,720 --> 00:12:44,399
have been uh

299
00:12:44,399 --> 00:12:46,800
working with the quick uh drafts while

300
00:12:46,800 --> 00:12:48,639
we were still in development before rc

301
00:12:48,639 --> 00:12:51,279
9000 or before they got the

302
00:12:51,279 --> 00:12:53,360
instructions to the iana team to

303
00:12:53,360 --> 00:12:54,959
construct some tables we had something

304
00:12:54,959 --> 00:12:56,959
called the temporary eye on a table

305
00:12:56,959 --> 00:12:58,800
which is a wiki page on the bass drafts

306
00:12:58,800 --> 00:12:59,760
repo

307
00:12:59,760 --> 00:13:01,600
this was intended to capture use of

308
00:13:01,600 --> 00:13:03,600
quick and hp3 extension points before

309
00:13:03,600 --> 00:13:05,360
those tables were created so that we

310
00:13:05,360 --> 00:13:07,040
could just coordinate amongst the

311
00:13:07,040 --> 00:13:08,079
community

312
00:13:08,079 --> 00:13:10,639
and avoid nasty collisions that's

313
00:13:10,639 --> 00:13:12,160
covered stuff like quick versions

314
00:13:12,160 --> 00:13:13,680
transport parameters settings frame

315
00:13:13,680 --> 00:13:17,040
types error codes and so on um

316
00:13:17,040 --> 00:13:19,040
and it's there and we we thank people

317
00:13:19,040 --> 00:13:20,720
who have taken the effort to go and

318
00:13:20,720 --> 00:13:23,360
register the values there

319
00:13:23,360 --> 00:13:25,839
however the ayana tables now exist and

320
00:13:25,839 --> 00:13:28,000
we would encourage people strongly to

321
00:13:28,000 --> 00:13:30,800
use the actual tables that they should

322
00:13:30,800 --> 00:13:33,600
be doing using the established ir

323
00:13:33,600 --> 00:13:36,079
procedures in the relevant

324
00:13:36,079 --> 00:13:40,720
quick or http 3 documents

325
00:13:40,720 --> 00:13:42,880
saying that we do have a bunch of values

326
00:13:42,880 --> 00:13:45,839
in the temporary iona table and we want

327
00:13:45,839 --> 00:13:48,320
to get those into the into the proper

328
00:13:48,320 --> 00:13:50,480
ones as well so

329
00:13:50,480 --> 00:13:52,000
we just wanted to give people a heads up

330
00:13:52,000 --> 00:13:54,079
of what's going to be happening um and

331
00:13:54,079 --> 00:13:56,480
not effectively archiving that temporary

332
00:13:56,480 --> 00:13:59,519
table locking it and then assisting with

333
00:13:59,519 --> 00:14:02,000
the various responsible parties follow

334
00:14:02,000 --> 00:14:04,240
the due process to get everything into

335
00:14:04,240 --> 00:14:07,440
the full official tables so there's no

336
00:14:07,440 --> 00:14:10,240
action immediately required from anyone

337
00:14:10,240 --> 00:14:12,000
but

338
00:14:12,000 --> 00:14:13,680
just keep an eye out on the list or for

339
00:14:13,680 --> 00:14:15,199
any direct contact that might be coming

340
00:14:15,199 --> 00:14:17,199
from the chairs and please assist us in

341
00:14:17,199 --> 00:14:20,079
doing the right thing

342
00:14:20,959 --> 00:14:22,800
and that is the end of the chair slides

343
00:14:22,800 --> 00:14:24,399
as you know in the queue and i think

344
00:14:24,399 --> 00:14:26,560
we're good to proceed on to the

345
00:14:26,560 --> 00:14:30,359
first agenda item

346
00:14:34,480 --> 00:14:36,240
let me switch

347
00:14:36,240 --> 00:14:39,959
slide deck

348
00:14:56,639 --> 00:14:59,040
thank you lucas my name is david

349
00:14:59,040 --> 00:15:02,000
scanazzi i'm a quick enthusiast

350
00:15:02,000 --> 00:15:03,920
and let's talk about quick version

351
00:15:03,920 --> 00:15:05,279
negotiation

352
00:15:05,279 --> 00:15:06,399
um

353
00:15:06,399 --> 00:15:09,120
next slide please

354
00:15:09,120 --> 00:15:10,720
so uh

355
00:15:10,720 --> 00:15:13,279
had this slide from i don't forget how

356
00:15:13,279 --> 00:15:14,959
many years now and i just keep adding

357
00:15:14,959 --> 00:15:17,279
lines and then it's starting to not fit

358
00:15:17,279 --> 00:15:20,160
but conceptually we've been doing vn for

359
00:15:20,160 --> 00:15:22,720
a while used to be in google quick it

360
00:15:22,720 --> 00:15:24,800
got added to itf quick we split it out

361
00:15:24,800 --> 00:15:26,399
to its own draft

362
00:15:26,399 --> 00:15:28,880
we redesigned it as a working group

363
00:15:28,880 --> 00:15:31,360
and we've kind of landed on something

364
00:15:31,360 --> 00:15:33,199
that everyone likes

365
00:15:33,199 --> 00:15:36,959
or rather that no one dislikes

366
00:15:36,959 --> 00:15:41,360
and over the course of the last um

367
00:15:41,360 --> 00:15:43,279
almost year we've done quite a bit of

368
00:15:43,279 --> 00:15:45,360
editorial work that's where where the

369
00:15:45,360 --> 00:15:48,160
document was quite lacking

370
00:15:48,160 --> 00:15:50,240
but we've kind of

371
00:15:50,240 --> 00:15:52,399
gotten it in what i think to be a decent

372
00:15:52,399 --> 00:15:53,360
shape

373
00:15:53,360 --> 00:15:58,000
between the editors um next slide please

374
00:16:00,480 --> 00:16:03,199
skip that one

375
00:16:03,600 --> 00:16:04,880
thank

376
00:16:04,880 --> 00:16:07,440
you we had one question which is in a

377
00:16:07,440 --> 00:16:09,600
way editorial but kind of

378
00:16:09,600 --> 00:16:12,160
fundamentally changes quite a bit how we

379
00:16:12,160 --> 00:16:13,600
um

380
00:16:13,600 --> 00:16:16,639
see that uh like a lot of the text and

381
00:16:16,639 --> 00:16:18,480
ecker and i didn't quite agree on it so

382
00:16:18,480 --> 00:16:19,600
we thought

383
00:16:19,600 --> 00:16:21,199
that's great we can bike ship this with

384
00:16:21,199 --> 00:16:23,360
the working group

385
00:16:23,360 --> 00:16:25,519
and it's on like the definition of the

386
00:16:25,519 --> 00:16:27,759
term compatible version negotiation from

387
00:16:27,759 --> 00:16:29,839
the draft

388
00:16:29,839 --> 00:16:31,759
the way i personally had been thinking

389
00:16:31,759 --> 00:16:33,360
about it

390
00:16:33,360 --> 00:16:35,839
you would have when you use the same

391
00:16:35,839 --> 00:16:37,519
version that the client offered that

392
00:16:37,519 --> 00:16:38,959
would just be

393
00:16:38,959 --> 00:16:40,800
using that version

394
00:16:40,800 --> 00:16:43,040
uh and compatible version negotiation

395
00:16:43,040 --> 00:16:44,720
would be when you use that feature to

396
00:16:44,720 --> 00:16:46,560
upgrade from one to another

397
00:16:46,560 --> 00:16:49,120
um ecker's coming at it more from like

398
00:16:49,120 --> 00:16:52,959
the tls side of things where when you

399
00:16:53,600 --> 00:16:54,800
thanks martin

400
00:16:54,800 --> 00:16:57,120
uh when you um

401
00:16:57,120 --> 00:16:59,120
look at that

402
00:16:59,120 --> 00:17:00,959
wow lost my train of thought it's early

403
00:17:00,959 --> 00:17:02,480
here

404
00:17:02,480 --> 00:17:04,799
when you actually

405
00:17:04,799 --> 00:17:06,160
stick to that version that's also

406
00:17:06,160 --> 00:17:08,000
compatible version negotiation you just

407
00:17:08,000 --> 00:17:09,599
negotiated the first version that was

408
00:17:09,599 --> 00:17:12,559
offered by the client so

409
00:17:12,559 --> 00:17:14,720
do folks have thoughts here it kind of

410
00:17:14,720 --> 00:17:16,400
the the reason we're bringing it is like

411
00:17:16,400 --> 00:17:18,559
it editorially changes kind of a lot of

412
00:17:18,559 --> 00:17:20,640
the document in terms of how we think

413
00:17:20,640 --> 00:17:22,400
about it and these are terms that will

414
00:17:22,400 --> 00:17:24,319
stick with us for a while

415
00:17:24,319 --> 00:17:24,640
um

416
00:17:24,640 --> 00:17:27,359
[Music]

417
00:17:27,359 --> 00:17:28,960
and ecker if you want to add something

418
00:17:28,960 --> 00:17:30,880
uh hop on

419
00:17:30,880 --> 00:17:32,559
but otherwise yeah i'm opening up to the

420
00:17:32,559 --> 00:17:34,160
floor

421
00:17:34,160 --> 00:17:37,120
does anyone care

422
00:17:40,480 --> 00:17:43,760
i can't hear you okay

423
00:17:43,840 --> 00:17:45,520
you're marked as unmuted but we cannot

424
00:17:45,520 --> 00:17:47,840
hear you

425
00:17:50,559 --> 00:17:52,960
uh we can't hear martin no all martin

426
00:17:52,960 --> 00:17:54,880
martin just tried his thing as if the

427
00:17:54,880 --> 00:17:58,240
like audio is

428
00:17:59,679 --> 00:18:01,280
yeah yeah

429
00:18:01,280 --> 00:18:02,480
okay

430
00:18:02,480 --> 00:18:04,000
okay we can hear you empty so the

431
00:18:04,000 --> 00:18:07,039
problem is on your end necker

432
00:18:07,039 --> 00:18:09,440
my maybe microphones don't work at 2 am

433
00:18:09,440 --> 00:18:12,520
in california

434
00:18:16,080 --> 00:18:18,399
nope

435
00:18:19,760 --> 00:18:22,480
try turning it off and on again

436
00:18:22,480 --> 00:18:24,880
i'll let let's take empty

437
00:18:24,880 --> 00:18:26,480
first while ecker tries that maybe

438
00:18:26,480 --> 00:18:30,320
switch microphone or i don't know

439
00:18:30,320 --> 00:18:31,919
empty go ahead

440
00:18:31,919 --> 00:18:34,400
so ecker's right you're wrong um

441
00:18:34,400 --> 00:18:36,880
this is version negotiation even if you

442
00:18:36,880 --> 00:18:38,559
pick the same thing

443
00:18:38,559 --> 00:18:40,480
it's a lot cleaner that way then you

444
00:18:40,480 --> 00:18:43,280
don't have to think about it too much

445
00:18:43,280 --> 00:18:44,160
uh

446
00:18:44,160 --> 00:18:46,240
the other thing was

447
00:18:46,240 --> 00:18:47,760
a version is always compatible with

448
00:18:47,760 --> 00:18:48,880
itself

449
00:18:48,880 --> 00:18:51,919
is the other way to think about it

450
00:18:52,720 --> 00:18:56,280
that works for me

451
00:18:56,880 --> 00:18:57,840
um

452
00:18:57,840 --> 00:19:00,559
all right proposal we actually do what

453
00:19:00,559 --> 00:19:02,720
echo wants um

454
00:19:02,720 --> 00:19:04,160
if you don't like that please come to

455
00:19:04,160 --> 00:19:06,799
the mic now and i'm the jabra scribe so

456
00:19:06,799 --> 00:19:08,240
can someone just double check that

457
00:19:08,240 --> 00:19:09,520
there's not too much happening in the

458
00:19:09,520 --> 00:19:11,840
jabber

459
00:19:14,559 --> 00:19:15,600
all right

460
00:19:15,600 --> 00:19:16,640
then

461
00:19:16,640 --> 00:19:19,360
next slightly

462
00:19:20,799 --> 00:19:21,520
so

463
00:19:21,520 --> 00:19:24,080
that was the last issue

464
00:19:24,080 --> 00:19:24,960
we

465
00:19:24,960 --> 00:19:26,480
we're going to do some editorial work on

466
00:19:26,480 --> 00:19:28,320
this to clean it up uh kerr and i are

467
00:19:28,320 --> 00:19:30,720
meeting next week to do that

468
00:19:30,720 --> 00:19:33,760
but we're pretty much done uh we we have

469
00:19:33,760 --> 00:19:34,640
some

470
00:19:34,640 --> 00:19:37,120
reasonable amount of

471
00:19:37,120 --> 00:19:38,960
implementation experience we don't have

472
00:19:38,960 --> 00:19:41,200
too much deployment with compatible vn

473
00:19:41,200 --> 00:19:42,640
right now

474
00:19:42,640 --> 00:19:43,000
um

475
00:19:43,000 --> 00:19:44,480
[Music]

476
00:19:44,480 --> 00:19:45,520
but

477
00:19:45,520 --> 00:19:47,360
we think this is ready and kind of the

478
00:19:47,360 --> 00:19:50,320
question on where we proceed is

479
00:19:50,320 --> 00:19:52,480
do we want to tie the progression and

480
00:19:52,480 --> 00:19:54,080
timeline of this draft to what we're

481
00:19:54,080 --> 00:19:55,760
doing in quick v2 which is kind of the

482
00:19:55,760 --> 00:19:57,919
first way we have to really

483
00:19:57,919 --> 00:20:00,640
exercise compatible vm

484
00:20:00,640 --> 00:20:02,559
or do we just want to move this forward

485
00:20:02,559 --> 00:20:03,919
or you know do working group last call

486
00:20:03,919 --> 00:20:06,240
and then park it what do people think

487
00:20:06,240 --> 00:20:08,330
why especially the chairs um

488
00:20:08,330 --> 00:20:11,409
[Music]

489
00:20:11,919 --> 00:20:15,039
no strong opinions from chairs right now

490
00:20:15,039 --> 00:20:18,320
it's too early for strong opinions

491
00:20:18,320 --> 00:20:20,000
uh so um

492
00:20:20,000 --> 00:20:21,520
state your name at the microphone oh

493
00:20:21,520 --> 00:20:24,320
okay sorry martin duke google uh and v2

494
00:20:24,320 --> 00:20:26,720
author and um i think v2 is waiting for

495
00:20:26,720 --> 00:20:28,159
you so

496
00:20:28,159 --> 00:20:30,400
it will not be a blocking thing as well

497
00:20:30,400 --> 00:20:32,159
i'll talk about in like

498
00:20:32,159 --> 00:20:35,480
the next presentation

499
00:20:35,760 --> 00:20:38,880
all right then um

500
00:20:38,880 --> 00:20:40,240
i

501
00:20:40,240 --> 00:20:41,360
barring like we're gonna do a bit of

502
00:20:41,360 --> 00:20:43,760
editorial work in the coming week uh

503
00:20:43,760 --> 00:20:45,760
after that i think we probably want to

504
00:20:45,760 --> 00:20:47,520
request working group last call then

505
00:20:47,520 --> 00:20:49,760
okay thank you we had martin in thecube

506
00:20:49,760 --> 00:20:52,080
oh oh sorry there's uh empty back in the

507
00:20:52,080 --> 00:20:53,679
queue

508
00:20:53,679 --> 00:20:55,919
yeah so having implemented both of these

509
00:20:55,919 --> 00:20:58,400
i think that technically they are good

510
00:20:58,400 --> 00:20:59,200
uh

511
00:20:59,200 --> 00:21:00,720
i think that the version negotiation

512
00:21:00,720 --> 00:21:03,600
draft is a bit rough editorially and so

513
00:21:03,600 --> 00:21:05,360
i have to get a little bit of time to to

514
00:21:05,360 --> 00:21:06,640
see what you and echo manage to put

515
00:21:06,640 --> 00:21:08,640
together next week i think there's some

516
00:21:08,640 --> 00:21:10,320
ordering things and some terminology

517
00:21:10,320 --> 00:21:12,159
stuff that's a little bit shaky

518
00:21:12,159 --> 00:21:13,520
but um

519
00:21:13,520 --> 00:21:15,440
it's technically sound i've implemented

520
00:21:15,440 --> 00:21:17,679
it i've implemented v2 they both

521
00:21:17,679 --> 00:21:19,760
interrupt with i think three or four

522
00:21:19,760 --> 00:21:21,520
other implementations

523
00:21:21,520 --> 00:21:24,559
and i think we're deploying it so

524
00:21:24,559 --> 00:21:26,559
whoops

525
00:21:26,559 --> 00:21:29,200
cool a quick question mt uh you had a

526
00:21:29,200 --> 00:21:31,760
few very good editorial issues that you

527
00:21:31,760 --> 00:21:33,230
filed on the draft um

528
00:21:33,230 --> 00:21:34,320
[Music]

529
00:21:34,320 --> 00:21:36,000
we resolved these like right before the

530
00:21:36,000 --> 00:21:38,080
draft to deadline and submitted a new

531
00:21:38,080 --> 00:21:39,760
one that hopefully addresses those are

532
00:21:39,760 --> 00:21:41,280
you referring to the one before do you

533
00:21:41,280 --> 00:21:43,200
think we need like that it's still a bit

534
00:21:43,200 --> 00:21:45,039
rough with the latest one

535
00:21:45,039 --> 00:21:47,679
oh well we read it last week um i'll

536
00:21:47,679 --> 00:21:49,520
have another look yep

537
00:21:49,520 --> 00:21:51,120
thanks um

538
00:21:51,120 --> 00:21:53,679
do you and we're happy to do that do you

539
00:21:53,679 --> 00:21:55,679
think that we're okay to move forward to

540
00:21:55,679 --> 00:21:58,159
working with last call and then you know

541
00:21:58,159 --> 00:21:59,520
after we address

542
00:21:59,520 --> 00:22:02,080
some of the editorial things and

543
00:22:02,080 --> 00:22:03,760
address more editor things after working

544
00:22:03,760 --> 00:22:05,600
with last call or

545
00:22:05,600 --> 00:22:08,000
let me take another look um but if the

546
00:22:08,000 --> 00:22:10,000
editorial state was as it was when i

547
00:22:10,000 --> 00:22:13,120
last saw it i liked to see

548
00:22:13,120 --> 00:22:14,640
that work done before working group last

549
00:22:14,640 --> 00:22:16,159
call there's a good chance that somebody

550
00:22:16,159 --> 00:22:18,080
could get messed up in that process

551
00:22:18,080 --> 00:22:21,200
sounds good when you take a look at um

552
00:22:21,200 --> 00:22:23,360
at that police foundation

553
00:22:23,360 --> 00:22:25,360
with specifics if you have them

554
00:22:25,360 --> 00:22:26,960
thanks yeah

555
00:22:26,960 --> 00:22:29,800
cool uh ecker's next in the queue

556
00:22:29,800 --> 00:22:31,679
[Music]

557
00:22:31,679 --> 00:22:32,799
how about now

558
00:22:32,799 --> 00:22:34,080
yes

559
00:22:34,080 --> 00:22:34,880
okay

560
00:22:34,880 --> 00:22:36,480
oh i can explain what happened later

561
00:22:36,480 --> 00:22:39,280
it's not good um anyway um

562
00:22:39,280 --> 00:22:41,039
the uh i i i think if we're going to

563
00:22:41,039 --> 00:22:42,320
make substantial hurdle changes let's

564
00:22:42,320 --> 00:22:43,840
just do them and do our new class call

565
00:22:43,840 --> 00:22:45,600
because like you know other otherwise

566
00:22:45,600 --> 00:22:46,799
we'll have to do working class call

567
00:22:46,799 --> 00:22:48,000
again so

568
00:22:48,000 --> 00:22:50,240
um

569
00:22:51,280 --> 00:22:55,520
okay that that makes sense

570
00:22:55,520 --> 00:22:56,880
all right okay

571
00:22:56,880 --> 00:22:58,480
that's it on quick version negotiation

572
00:22:58,480 --> 00:23:00,320
thanks everyone thank you david we've

573
00:23:00,320 --> 00:23:02,960
made some time up there which is great

574
00:23:02,960 --> 00:23:05,919
um that's

575
00:23:06,840 --> 00:23:09,440
appreciated which slide would you like

576
00:23:09,440 --> 00:23:13,520
to start with b2 b2 okay

577
00:23:16,720 --> 00:23:19,280
so does this work with the mask

578
00:23:19,280 --> 00:23:22,510
all right sweet

579
00:23:22,510 --> 00:23:26,320
[Laughter]

580
00:23:26,320 --> 00:23:28,960
uh next slide so the closely related v2

581
00:23:28,960 --> 00:23:30,960
draft uh just for any of you who are not

582
00:23:30,960 --> 00:23:32,960
paying attention this has a few purposes

583
00:23:32,960 --> 00:23:35,360
it is not adding any features to quick

584
00:23:35,360 --> 00:23:37,760
it is not um fixing anything about quick

585
00:23:37,760 --> 00:23:39,039
version one

586
00:23:39,039 --> 00:23:40,799
it is an effort to grease the version

587
00:23:40,799 --> 00:23:43,440
field to have a target for this vn thing

588
00:23:43,440 --> 00:23:44,880
that that david and ecker have been

589
00:23:44,880 --> 00:23:46,000
working on

590
00:23:46,000 --> 00:23:48,159
and also just while we have the quick

591
00:23:48,159 --> 00:23:50,400
brain trust together kind of develop a

592
00:23:50,400 --> 00:23:51,840
template for what a new version should

593
00:23:51,840 --> 00:23:53,440
look like and

594
00:23:53,440 --> 00:23:54,720
give people kind of

595
00:23:54,720 --> 00:23:56,960
an example to follow when they do quick

596
00:23:56,960 --> 00:23:59,760
versions that actually add value

597
00:23:59,760 --> 00:24:02,159
next slide

598
00:24:02,159 --> 00:24:04,320
um oh actually before i get to this uh

599
00:24:04,320 --> 00:24:05,919
there aren't really much there isn't

600
00:24:05,919 --> 00:24:09,120
much in the way of open issues um

601
00:24:09,120 --> 00:24:11,360
the there's mainly just an editorial

602
00:24:11,360 --> 00:24:13,600
thing about what goes in the vn draft

603
00:24:13,600 --> 00:24:16,080
versus what goes in the v2 draft so

604
00:24:16,080 --> 00:24:17,679
david and i are playing hot potato on a

605
00:24:17,679 --> 00:24:18,960
couple issues

606
00:24:18,960 --> 00:24:20,400
but i think these can go together

607
00:24:20,400 --> 00:24:22,159
probably to working group last call

608
00:24:22,159 --> 00:24:24,240
pretty soon we have pretty good interop

609
00:24:24,240 --> 00:24:25,600
with v2

610
00:24:25,600 --> 00:24:27,120
um there's one

611
00:24:27,120 --> 00:24:29,600
issue that might be contentious we had a

612
00:24:29,600 --> 00:24:31,440
little we had a few people who felt

613
00:24:31,440 --> 00:24:32,480
strongly

614
00:24:32,480 --> 00:24:35,039
discuss it um offline

615
00:24:35,039 --> 00:24:38,400
but um alpn is is the one thing

616
00:24:38,400 --> 00:24:40,799
so after a bit of wrangling we've

617
00:24:40,799 --> 00:24:44,400
decided that v2 should use the h3 alpine

618
00:24:44,400 --> 00:24:47,279
rather than h3-something

619
00:24:47,279 --> 00:24:49,360
um

620
00:24:49,360 --> 00:24:50,559
uh

621
00:24:50,559 --> 00:24:53,360
and of course for doq and for moke or

622
00:24:53,360 --> 00:24:55,440
mock or whatever it's called uh same

623
00:24:55,440 --> 00:24:57,679
thing

624
00:24:57,760 --> 00:25:01,000
next slide

625
00:25:01,679 --> 00:25:04,400
so the draft currently says that yes

626
00:25:04,400 --> 00:25:08,080
all these alpn's apply um

627
00:25:08,080 --> 00:25:09,120
this has

628
00:25:09,120 --> 00:25:10,880
so there's a few reasons number one

629
00:25:10,880 --> 00:25:12,720
since compatible version negotiation

630
00:25:12,720 --> 00:25:14,960
there's not a lot of cost to

631
00:25:14,960 --> 00:25:16,880
to messing up uh

632
00:25:16,880 --> 00:25:19,039
just to using sort of the incorrect

633
00:25:19,039 --> 00:25:20,000
version

634
00:25:20,000 --> 00:25:21,039
um

635
00:25:21,039 --> 00:25:22,640
certainly the case we don't anticipate a

636
00:25:22,640 --> 00:25:24,720
lot of v2 only servers and clients out

637
00:25:24,720 --> 00:25:25,679
there

638
00:25:25,679 --> 00:25:28,679
um

639
00:25:28,960 --> 00:25:30,159
as a practical matter some

640
00:25:30,159 --> 00:25:32,400
implementations would be would be uh

641
00:25:32,400 --> 00:25:35,440
complicated by having to to

642
00:25:35,440 --> 00:25:38,480
to revise the the alpn in use

643
00:25:38,480 --> 00:25:39,440
um

644
00:25:39,440 --> 00:25:42,559
as i talked about a couple itfs ago

645
00:25:42,559 --> 00:25:45,279
if we have lots of versions and lots of

646
00:25:45,279 --> 00:25:47,200
alpn's then the registry sort of

647
00:25:47,200 --> 00:25:49,279
explodes and that's kind of a bad thing

648
00:25:49,279 --> 00:25:51,600
to do to the alpn registry for just on

649
00:25:51,600 --> 00:25:53,279
on behalf of quick

650
00:25:53,279 --> 00:25:56,799
and finally as a deployment issue

651
00:25:56,799 --> 00:25:57,760
um

652
00:25:57,760 --> 00:25:59,919
obviously a lot of h3 things are are

653
00:25:59,919 --> 00:26:02,000
tied pretty closely to

654
00:26:02,000 --> 00:26:03,440
to the quick implementation but in

655
00:26:03,440 --> 00:26:05,120
principle if you have an if you have a

656
00:26:05,120 --> 00:26:06,880
abstract quick implementation with an

657
00:26:06,880 --> 00:26:10,000
api the application should be an alpn to

658
00:26:10,000 --> 00:26:12,799
provide to to use in the connection

659
00:26:12,799 --> 00:26:14,799
and um if you're trying to roll out new

660
00:26:14,799 --> 00:26:16,240
quick versions deprecate all the quick

661
00:26:16,240 --> 00:26:18,559
versions in a quick implementation then

662
00:26:18,559 --> 00:26:19,520
you would then have to change all the

663
00:26:19,520 --> 00:26:21,600
applications and that sounds

664
00:26:21,600 --> 00:26:23,760
unhappy so for all the reasons this is

665
00:26:23,760 --> 00:26:25,679
where we've landed um and i'd like to

666
00:26:25,679 --> 00:26:27,279
open the floor if people have a big

667
00:26:27,279 --> 00:26:29,039
problem with that

668
00:26:29,039 --> 00:26:30,880
or a small problem with that

669
00:26:30,880 --> 00:26:34,320
okay we have mike bishop in the queue

670
00:26:34,320 --> 00:26:37,879
mike go ahead

671
00:26:39,440 --> 00:26:41,360
waiting to see if uh audio is going

672
00:26:41,360 --> 00:26:42,880
through all right

673
00:26:42,880 --> 00:26:45,440
um so to be clear i'm not coming to the

674
00:26:45,440 --> 00:26:47,120
queue because i have a problem with it i

675
00:26:47,120 --> 00:26:48,880
think this is the right call

676
00:26:48,880 --> 00:26:50,640
i think this is the wrong draft this

677
00:26:50,640 --> 00:26:53,840
needs to be in version negotiation

678
00:26:55,440 --> 00:26:57,760
um

679
00:26:58,880 --> 00:27:00,480
and you can mention it here too but i

680
00:27:00,480 --> 00:27:02,960
think version negotiation needs to

681
00:27:02,960 --> 00:27:04,840
talk about a lpn

682
00:27:04,840 --> 00:27:07,600
selection across versions and

683
00:27:07,600 --> 00:27:09,200
when you can share them when you keep

684
00:27:09,200 --> 00:27:10,320
them

685
00:27:10,320 --> 00:27:12,799
okay i i will say that in terms of our

686
00:27:12,799 --> 00:27:14,720
forging consensus we sort of punched the

687
00:27:14,720 --> 00:27:16,880
issue of incompatible versions

688
00:27:16,880 --> 00:27:18,960
um i think that this this logic should

689
00:27:18,960 --> 00:27:20,559
apply to incompatible versions but i'm

690
00:27:20,559 --> 00:27:22,480
not sure that is a universal

691
00:27:22,480 --> 00:27:25,279
sentiment um the current

692
00:27:25,279 --> 00:27:27,120
the current um

693
00:27:27,120 --> 00:27:28,880
sort of pattern that we're developing

694
00:27:28,880 --> 00:27:31,600
here is that if you are doing a new

695
00:27:31,600 --> 00:27:33,600
version draft you should go you should

696
00:27:33,600 --> 00:27:35,679
essentially inventory all the existing

697
00:27:35,679 --> 00:27:38,159
alpn's and say if they work

698
00:27:38,159 --> 00:27:41,279
uh conversely if you're doing a new

699
00:27:41,279 --> 00:27:42,880
um if you're proposing if you're

700
00:27:42,880 --> 00:27:45,200
registering a new quick alpn

701
00:27:45,200 --> 00:27:47,120
um you should really inventory all the

702
00:27:47,120 --> 00:27:48,480
existing

703
00:27:48,480 --> 00:27:49,360
um

704
00:27:49,360 --> 00:27:51,120
quick versions and sort of say if they

705
00:27:51,120 --> 00:27:52,000
work

706
00:27:52,000 --> 00:27:53,840
and then ultimately becomes unmanageable

707
00:27:53,840 --> 00:27:55,279
we can have a registry but i don't think

708
00:27:55,279 --> 00:27:57,919
we're anywhere near that point yet

709
00:27:57,919 --> 00:27:59,039
yeah i

710
00:27:59,039 --> 00:28:01,840
i have a feeling unmanageable or not

711
00:28:01,840 --> 00:28:03,919
there are eventually going to be

712
00:28:03,919 --> 00:28:06,080
either versions or protocols that don't

713
00:28:06,080 --> 00:28:07,520
do that work

714
00:28:07,520 --> 00:28:09,360
and it

715
00:28:09,360 --> 00:28:10,799
we just need to write down somewhere

716
00:28:10,799 --> 00:28:12,640
what happens when you don't know

717
00:28:12,640 --> 00:28:15,039
whether it's supposed to be compatible

718
00:28:15,039 --> 00:28:18,720
and probably the end is the right place

719
00:28:21,279 --> 00:28:24,000
what's that david

720
00:28:26,320 --> 00:28:28,559
davidskenazi

721
00:28:28,559 --> 00:28:30,080
what to do when like they're not

722
00:28:30,080 --> 00:28:32,080
compatible is already in the vm draft

723
00:28:32,080 --> 00:28:34,480
mike uh or did i misunderstand what you

724
00:28:34,480 --> 00:28:36,480
were saying let's talk about alpn which

725
00:28:36,480 --> 00:28:37,919
i don't think is mentioned in the vm

726
00:28:37,919 --> 00:28:38,960
draft

727
00:28:38,960 --> 00:28:40,799
what to do when you're not sure whether

728
00:28:40,799 --> 00:28:42,880
the alpn is compatible with the version

729
00:28:42,880 --> 00:28:45,520
and i think the answer is don't use it

730
00:28:45,520 --> 00:28:47,840
well so i mean we've all overloaded the

731
00:28:47,840 --> 00:28:51,120
word compatible which is a problem so

732
00:28:51,120 --> 00:28:52,799
the compatible version incompatible

733
00:28:52,799 --> 00:28:55,039
version is referring to the the pain of

734
00:28:55,039 --> 00:28:56,720
version negotiation

735
00:28:56,720 --> 00:28:58,799
that's the context i was using it in the

736
00:28:58,799 --> 00:29:02,480
other issue is like does this

737
00:29:02,480 --> 00:29:04,399
does the does are the features of the

738
00:29:04,399 --> 00:29:06,240
particular quick version

739
00:29:06,240 --> 00:29:08,080
usable with the application which is a

740
00:29:08,080 --> 00:29:09,840
different question

741
00:29:09,840 --> 00:29:11,360
and that is that is the question that

742
00:29:11,360 --> 00:29:14,799
needs to be addressed in each version or

743
00:29:14,799 --> 00:29:16,480
in each draft that either proposes a new

744
00:29:16,480 --> 00:29:19,919
version or registers a new alp

745
00:29:21,120 --> 00:29:22,000
okay

746
00:29:22,000 --> 00:29:25,520
and ideally we have some concept of

747
00:29:25,520 --> 00:29:28,559
upper layer feature compatibility

748
00:29:28,559 --> 00:29:30,000
but

749
00:29:30,000 --> 00:29:32,080
how do you quantify that

750
00:29:32,080 --> 00:29:33,440
yeah i'm not sure how to write that down

751
00:29:33,440 --> 00:29:36,240
either um

752
00:29:36,240 --> 00:29:38,240
like i have some good boilerplate i

753
00:29:38,240 --> 00:29:40,159
think in the v2 draft that says like

754
00:29:40,159 --> 00:29:41,919
this is the same so it should be fine

755
00:29:41,919 --> 00:29:43,840
and i'm going to add something about doq

756
00:29:43,840 --> 00:29:46,480
since doq has essentially shipped

757
00:29:46,480 --> 00:29:48,720
um

758
00:29:53,200 --> 00:29:55,120
okay so david

759
00:29:55,120 --> 00:29:57,919
oh i'm already here great um

760
00:29:57,919 --> 00:30:00,080
i want to add to a few of these things

761
00:30:00,080 --> 00:30:01,520
because um

762
00:30:01,520 --> 00:30:03,600
so first off i don't really believe that

763
00:30:03,600 --> 00:30:06,000
there is a notion of i don't know if

764
00:30:06,000 --> 00:30:06,880
this

765
00:30:06,880 --> 00:30:08,640
if this application layer protocol works

766
00:30:08,640 --> 00:30:10,640
over this transport like

767
00:30:10,640 --> 00:30:13,200
any specification of a an application

768
00:30:13,200 --> 00:30:14,480
their protocol will tell you what

769
00:30:14,480 --> 00:30:16,240
transport it runs on

770
00:30:16,240 --> 00:30:18,080
and if it's another transport it just

771
00:30:18,080 --> 00:30:19,279
doesn't work

772
00:30:19,279 --> 00:30:21,360
period unless you have some reason to

773
00:30:21,360 --> 00:30:23,039
believe it does and you you we're not

774
00:30:23,039 --> 00:30:24,720
gonna this isn't the taps working group

775
00:30:24,720 --> 00:30:26,320
we're not gonna mix and match things and

776
00:30:26,320 --> 00:30:27,840
hope for the best

777
00:30:27,840 --> 00:30:30,879
um sorry

778
00:30:31,919 --> 00:30:34,960
um but no so going into this a bit more

779
00:30:34,960 --> 00:30:36,880
this is

780
00:30:36,880 --> 00:30:38,990
quite a bit of a mess um

781
00:30:38,990 --> 00:30:40,799
[Music]

782
00:30:40,799 --> 00:30:44,399
and the the fundamental reason why this

783
00:30:44,399 --> 00:30:46,320
is such a

784
00:30:46,320 --> 00:30:49,279
mess is that you know and obviously this

785
00:30:49,279 --> 00:30:51,919
is obvious in hindsight wasn't at the

786
00:30:51,919 --> 00:30:53,039
time

787
00:30:53,039 --> 00:30:55,520
we really messed up alt service uh when

788
00:30:55,520 --> 00:30:57,200
we did alt service

789
00:30:57,200 --> 00:31:00,480
we used the lpn tokens

790
00:31:00,480 --> 00:31:01,840
whereas

791
00:31:01,840 --> 00:31:03,440
that's not what we should have used we

792
00:31:03,440 --> 00:31:06,480
should have used a combination of alpn

793
00:31:06,480 --> 00:31:08,000
and the entire transport stack

794
00:31:08,000 --> 00:31:10,080
underneath because when you go to

795
00:31:10,080 --> 00:31:11,519
another service

796
00:31:11,519 --> 00:31:13,360
that is the information you need to know

797
00:31:13,360 --> 00:31:14,720
so let's say

798
00:31:14,720 --> 00:31:16,399
i connect to this website and tells me

799
00:31:16,399 --> 00:31:19,840
it's accessible over http 3.

800
00:31:19,840 --> 00:31:22,720
i need to know what quick version

801
00:31:22,720 --> 00:31:25,039
i send an initial at

802
00:31:25,039 --> 00:31:26,880
and

803
00:31:26,880 --> 00:31:30,000
if we are just talking about a lpn here

804
00:31:30,000 --> 00:31:32,799
it makes sense to reuse the h3 alpn for

805
00:31:32,799 --> 00:31:34,640
quickview on a quick v2

806
00:31:34,640 --> 00:31:36,799
because the lpn is

807
00:31:36,799 --> 00:31:40,000
only sensit makes sense only in the

808
00:31:40,000 --> 00:31:42,159
scope of an underlying version

809
00:31:42,159 --> 00:31:43,919
whose handshake you're doing

810
00:31:43,919 --> 00:31:45,519
and that way you can go up to the next

811
00:31:45,519 --> 00:31:46,399
thing

812
00:31:46,399 --> 00:31:48,559
um but when you're doing all service all

813
00:31:48,559 --> 00:31:51,360
this completely falls apart

814
00:31:51,360 --> 00:31:54,240
um so so you're segueing nicely into i

815
00:31:54,240 --> 00:31:56,880
think what is the next slide

816
00:31:56,880 --> 00:31:58,399
if that will work

817
00:31:58,399 --> 00:32:01,679
lucas this this is the next slide oh

818
00:32:01,679 --> 00:32:03,679
yeah right okay

819
00:32:03,679 --> 00:32:06,480
um right so lucas and i have um proposed

820
00:32:06,480 --> 00:32:07,840
the draft

821
00:32:07,840 --> 00:32:09,039
um

822
00:32:09,039 --> 00:32:10,640
which is essentially adding an

823
00:32:10,640 --> 00:32:12,320
alt-service parameter

824
00:32:12,320 --> 00:32:15,039
that tells you what the quick version is

825
00:32:15,039 --> 00:32:16,399
um

826
00:32:16,399 --> 00:32:18,880
which will solve the problem for h3

827
00:32:18,880 --> 00:32:21,200
if people support it um we will also

828
00:32:21,200 --> 00:32:23,279
extend that to service b once you know

829
00:32:23,279 --> 00:32:24,880
we get a couple draft versions under our

830
00:32:24,880 --> 00:32:25,840
belt

831
00:32:25,840 --> 00:32:27,919
so um this is sort of our long-term

832
00:32:27,919 --> 00:32:29,360
solution to solve the problem that

833
00:32:29,360 --> 00:32:31,279
you're describing

834
00:32:31,279 --> 00:32:33,679
whether or not people will take it up is

835
00:32:33,679 --> 00:32:35,840
out of our control but um

836
00:32:35,840 --> 00:32:37,679
that's what we have

837
00:32:37,679 --> 00:32:40,080
um so i see the queue is closed so i'm

838
00:32:40,080 --> 00:32:43,519
gonna go sit down but uh and let mt and

839
00:32:43,519 --> 00:32:45,440
ecker chime in but i think this is

840
00:32:45,440 --> 00:32:46,880
really important

841
00:32:46,880 --> 00:32:47,679
i

842
00:32:47,679 --> 00:32:50,480
really believe that we cannot move quick

843
00:32:50,480 --> 00:32:52,000
v2 forward

844
00:32:52,000 --> 00:32:52,799
and

845
00:32:52,799 --> 00:32:55,519
kick this can down the road um i

846
00:32:55,519 --> 00:32:57,120
personally believe that we need to solve

847
00:32:57,120 --> 00:32:58,320
this

848
00:32:58,320 --> 00:33:01,039
uh and stop like just writing more

849
00:33:01,039 --> 00:33:03,440
things like there's no rush whatsoever

850
00:33:03,440 --> 00:33:05,679
to deploying quick v2 no one's waiting

851
00:33:05,679 --> 00:33:07,120
on it

852
00:33:07,120 --> 00:33:08,880
and i would like to see this solved

853
00:33:08,880 --> 00:33:11,039
because if we ship quick v2 and then we

854
00:33:11,039 --> 00:33:13,919
realize that your draft doesn't work out

855
00:33:13,919 --> 00:33:16,240
then we're we've made yet a bigger mess

856
00:33:16,240 --> 00:33:18,320
for ourselves

857
00:33:18,320 --> 00:33:19,840
thanks david

858
00:33:19,840 --> 00:33:23,879
martin thompson please

859
00:33:24,080 --> 00:33:27,679
just waiting on audio so um

860
00:33:27,679 --> 00:33:29,120
i put it in the

861
00:33:29,120 --> 00:33:30,960
uh and i'll probably read this out

862
00:33:30,960 --> 00:33:32,640
anything that's compatible with quick

863
00:33:32,640 --> 00:33:35,440
both on a version negotiation basis and

864
00:33:35,440 --> 00:33:37,679
a feature basis

865
00:33:37,679 --> 00:33:41,360
is probably okay to use the same lpn i

866
00:33:41,360 --> 00:33:42,480
think we'll have to word that a little

867
00:33:42,480 --> 00:33:44,720
bit more precisely i think you need a

868
00:33:44,720 --> 00:33:47,279
strict or a superset of the features

869
00:33:47,279 --> 00:33:50,399
that the protocol was using

870
00:33:50,399 --> 00:33:51,919
which means that for instance if you

871
00:33:51,919 --> 00:33:54,240
define a new version of quick that only

872
00:33:54,240 --> 00:33:56,080
does streams

873
00:33:56,080 --> 00:33:58,159
and doesn't do datagrams it would still

874
00:33:58,159 --> 00:34:00,559
be okay for http probably maybe

875
00:34:00,559 --> 00:34:03,360
depending on all this websocket stuff um

876
00:34:03,360 --> 00:34:04,720
but that's the sort of idea that we're

877
00:34:04,720 --> 00:34:06,159
going to need to we would want to write

878
00:34:06,159 --> 00:34:07,840
down

879
00:34:07,840 --> 00:34:09,839
i don't think it works if you lose

880
00:34:09,839 --> 00:34:12,639
features in it in the transport

881
00:34:12,639 --> 00:34:14,960
and i don't think it works if you lose

882
00:34:14,960 --> 00:34:16,800
compatible version upgrades because then

883
00:34:16,800 --> 00:34:18,879
you have performance problems

884
00:34:18,879 --> 00:34:20,560
and that's part of the reason why we're

885
00:34:20,560 --> 00:34:22,399
talking about the all-service thing i

886
00:34:22,399 --> 00:34:24,320
think that's primarily why we're talking

887
00:34:24,320 --> 00:34:27,359
about the old service thing because if

888
00:34:27,359 --> 00:34:30,159
if we're just doing lpns and didn't care

889
00:34:30,159 --> 00:34:33,599
too much about it we could do um

890
00:34:33,599 --> 00:34:35,679
we do version negotiation right in in

891
00:34:35,679 --> 00:34:36,800
that case

892
00:34:36,800 --> 00:34:40,320
so um i think everyone else here on the

893
00:34:40,320 --> 00:34:42,560
chat has been saying we should add it to

894
00:34:42,560 --> 00:34:44,800
the vm draft not the quick v2 draft and

895
00:34:44,800 --> 00:34:48,359
i agree with that

896
00:34:51,520 --> 00:34:53,599
we're gonna let david respond quickly to

897
00:34:53,599 --> 00:34:56,480
that just as the vienna author

898
00:34:56,480 --> 00:34:59,520
sorry very quickly um the quick version

899
00:34:59,520 --> 00:35:01,839
negotiation draft

900
00:35:01,839 --> 00:35:04,240
isn't specific to any quick version

901
00:35:04,240 --> 00:35:05,520
obviously

902
00:35:05,520 --> 00:35:07,680
so it operates at the level of the quick

903
00:35:07,680 --> 00:35:09,119
invariants

904
00:35:09,119 --> 00:35:11,200
the quick invariants don't have a notion

905
00:35:11,200 --> 00:35:13,200
of lpn because the quick inversions

906
00:35:13,200 --> 00:35:15,599
don't have a notion of tls you can have

907
00:35:15,599 --> 00:35:18,400
a quick version that's based on noise or

908
00:35:18,400 --> 00:35:19,599
what have you

909
00:35:19,599 --> 00:35:22,240
so that is yet another reason why this

910
00:35:22,240 --> 00:35:23,680
is a mess

911
00:35:23,680 --> 00:35:25,760
that's true but we also include a whole

912
00:35:25,760 --> 00:35:27,200
bunch of advice in there about what to

913
00:35:27,200 --> 00:35:29,280
do with retries what to do with a bunch

914
00:35:29,280 --> 00:35:31,680
of other things uh zero rtt i think it

915
00:35:31,680 --> 00:35:32,720
was as well

916
00:35:32,720 --> 00:35:33,520
so

917
00:35:33,520 --> 00:35:36,160
i think probably what we can do is put

918
00:35:36,160 --> 00:35:38,400
another one of those subheadings under

919
00:35:38,400 --> 00:35:39,440
that section

920
00:35:39,440 --> 00:35:41,200
and and say what do you do with lpn in

921
00:35:41,200 --> 00:35:43,359
the case that you that you have it

922
00:35:43,359 --> 00:35:44,400
i think that's the right thing to do

923
00:35:44,400 --> 00:35:45,920
here i don't think this is a property of

924
00:35:45,920 --> 00:35:48,400
v2 i think this is a property of

925
00:35:48,400 --> 00:35:49,839
pn

926
00:35:49,839 --> 00:35:51,280
and i guess the question is what we have

927
00:35:51,280 --> 00:35:54,240
to write down right now um i think we've

928
00:35:54,240 --> 00:35:57,200
reached agreement that v2 will be fi

929
00:35:57,200 --> 00:35:59,599
specifically we'll be fine

930
00:35:59,599 --> 00:36:02,320
if we just use we use the alpn and we're

931
00:36:02,320 --> 00:36:04,240
establishing a pattern that people might

932
00:36:04,240 --> 00:36:05,359
follow

933
00:36:05,359 --> 00:36:08,000
um unless there's a reason not to

934
00:36:08,000 --> 00:36:08,880
so

935
00:36:08,880 --> 00:36:12,480
maybe we can trust future

936
00:36:12,480 --> 00:36:14,880
standards writers to say well you know

937
00:36:14,880 --> 00:36:16,960
this pattern is not working anymore

938
00:36:16,960 --> 00:36:19,520
and so we should do something else

939
00:36:19,520 --> 00:36:20,400
but if

940
00:36:20,400 --> 00:36:22,079
i mean i'm not gonna if if we want to

941
00:36:22,079 --> 00:36:24,160
put it in the vm draft that's fine with

942
00:36:24,160 --> 00:36:27,920
me at least but uh i think like with alt

943
00:36:27,920 --> 00:36:29,119
service

944
00:36:29,119 --> 00:36:31,520
we can only do the best that we can with

945
00:36:31,520 --> 00:36:32,880
the information that we have at hand and

946
00:36:32,880 --> 00:36:34,480
the experience that we have

947
00:36:34,480 --> 00:36:36,480
i suspect we do we

948
00:36:36,480 --> 00:36:38,240
do know something here

949
00:36:38,240 --> 00:36:40,480
uh and that's based on

950
00:36:40,480 --> 00:36:41,920
the implementation experience that we

951
00:36:41,920 --> 00:36:43,680
have that suggests that

952
00:36:43,680 --> 00:36:46,560
you can use the same lpn under the sort

953
00:36:46,560 --> 00:36:49,359
of narrow constraints that i described

954
00:36:49,359 --> 00:36:52,160
and then maybe outside of that it's

955
00:36:52,160 --> 00:36:55,040
for the for the reader um you know work

956
00:36:55,040 --> 00:36:57,759
it out for yourself

957
00:36:58,079 --> 00:36:58,880
okay

958
00:36:58,880 --> 00:37:01,200
we're we're kind of um out time for this

959
00:37:01,200 --> 00:37:04,079
but we'll let akka respond well speak

960
00:37:04,079 --> 00:37:05,680
quickly

961
00:37:05,680 --> 00:37:06,839
i think you can do

962
00:37:06,839 --> 00:37:09,839
that yeah

963
00:37:09,839 --> 00:37:11,200
so so i'm not sure how quickly i'm going

964
00:37:11,200 --> 00:37:13,119
to speak since things have kind of

965
00:37:13,119 --> 00:37:14,560
backed up for a while

966
00:37:14,560 --> 00:37:17,839
um so i think a few points um

967
00:37:17,839 --> 00:37:19,440
first i think i think like the worrying

968
00:37:19,440 --> 00:37:21,440
about like this is probably a little a

969
00:37:21,440 --> 00:37:23,920
little more premature um but let's let's

970
00:37:23,920 --> 00:37:24,880
let's not

971
00:37:24,880 --> 00:37:26,640
the the situation like largely is going

972
00:37:26,640 --> 00:37:27,520
to be

973
00:37:27,520 --> 00:37:28,560
um

974
00:37:28,560 --> 00:37:32,320
i i think okay um in in the sense that

975
00:37:32,320 --> 00:37:33,680
um you know

976
00:37:33,680 --> 00:37:35,520
trying to run like a situation where you

977
00:37:35,520 --> 00:37:36,720
actually have this much confusion about

978
00:37:36,720 --> 00:37:38,160
like a the properties of the underlying

979
00:37:38,160 --> 00:37:41,119
protocol and be the properties of jlp

980
00:37:41,119 --> 00:37:43,119
support seems like probably not like a

981
00:37:43,119 --> 00:37:44,640
great idea and we'll probably not try to

982
00:37:44,640 --> 00:37:46,720
create um you know you know what

983
00:37:46,720 --> 00:37:47,760
application you're running again it's

984
00:37:47,760 --> 00:37:50,240
not like your aopn switching between doq

985
00:37:50,240 --> 00:37:52,320
and um and h3 right

986
00:37:52,320 --> 00:37:53,119
um

987
00:37:53,119 --> 00:37:54,720
so um

988
00:37:54,720 --> 00:37:56,560
you know uh that that they should do

989
00:37:56,560 --> 00:37:58,480
this in like x now hello seems a little

990
00:37:58,480 --> 00:37:59,920
weird um

991
00:37:59,920 --> 00:38:02,480
i think what that i think what the um uh

992
00:38:02,480 --> 00:38:03,440
you know

993
00:38:03,440 --> 00:38:04,400
um

994
00:38:04,400 --> 00:38:05,839
david uh you're right that this

995
00:38:05,839 --> 00:38:07,280
strategist is agnostic about whether

996
00:38:07,280 --> 00:38:09,040
it's tales or not but it's it's hard to

997
00:38:09,040 --> 00:38:10,800
believe that any any future thing we

998
00:38:10,800 --> 00:38:12,160
design isn't gonna need some aopa and

999
00:38:12,160 --> 00:38:13,920
wood construct and so even if that's

1000
00:38:13,920 --> 00:38:15,359
carried in some entirely different way

1001
00:38:15,359 --> 00:38:17,440
in the transport negotiation in this in

1002
00:38:17,440 --> 00:38:19,280
the you know

1003
00:38:19,280 --> 00:38:20,480
protocol it's going to have to go

1004
00:38:20,480 --> 00:38:22,880
somewhere i think um you know we

1005
00:38:22,880 --> 00:38:25,760
aopm was added to tls for a reason um i

1006
00:38:25,760 --> 00:38:27,359
think there isn't it has to appear i

1007
00:38:27,359 --> 00:38:29,119
agree this has to appear if anywhere in

1008
00:38:29,119 --> 00:38:32,240
the vm draft but not and not in v2 um i

1009
00:38:32,240 --> 00:38:35,200
think what has to appear um is

1010
00:38:35,200 --> 00:38:37,440
that any exterior protocol negotiation

1011
00:38:37,440 --> 00:38:38,720
signal you do

1012
00:38:38,720 --> 00:38:42,240
has to be done from scratch when um

1013
00:38:42,240 --> 00:38:44,560
when when you do an incompatible vn

1014
00:38:44,560 --> 00:38:46,800
which is to say so suppose for instance

1015
00:38:46,800 --> 00:38:49,040
that you're um

1016
00:38:49,040 --> 00:38:52,320
that uh you know if you offered v1 you

1017
00:38:52,320 --> 00:38:54,480
would have offered a lp at a and when

1018
00:38:54,480 --> 00:38:57,280
you offered v2 you offered aopn a and b

1019
00:38:57,280 --> 00:38:58,320
well when you

1020
00:38:58,320 --> 00:38:59,599
when you get a

1021
00:38:59,599 --> 00:39:01,359
vn that forces you back to v1 you have

1022
00:39:01,359 --> 00:39:03,680
to offer a and not a and b because

1023
00:39:03,680 --> 00:39:05,040
otherwise the attacker is able to force

1024
00:39:05,040 --> 00:39:06,560
you into posture of choosing a specific

1025
00:39:06,560 --> 00:39:09,920
aopn uh offer by doing a um

1026
00:39:09,920 --> 00:39:12,320
uh by by doing uh uh

1027
00:39:12,320 --> 00:39:15,680
um by doing a vn so i think um and i

1028
00:39:15,680 --> 00:39:16,400
haven't thought about it if it's

1029
00:39:16,400 --> 00:39:17,760
entirely possible there are other things

1030
00:39:17,760 --> 00:39:19,520
like that that have that property and in

1031
00:39:19,520 --> 00:39:21,920
every single case um they have they jump

1032
00:39:21,920 --> 00:39:23,520
from scratch now i think it does kind of

1033
00:39:23,520 --> 00:39:24,640
imply that things are done from scratch

1034
00:39:24,640 --> 00:39:25,359
but i think it really has to be

1035
00:39:25,359 --> 00:39:28,920
explicitly stated

1036
00:39:30,960 --> 00:39:32,480
thanks ecker um

1037
00:39:32,480 --> 00:39:35,119
i think the the concern that i'm pulling

1038
00:39:35,119 --> 00:39:36,800
out of this i mean i think i think we're

1039
00:39:36,800 --> 00:39:39,359
moving forward with v2 using

1040
00:39:39,359 --> 00:39:43,040
the v1 alpns but um there's david's

1041
00:39:43,040 --> 00:39:44,800
concern about maybe holding something up

1042
00:39:44,800 --> 00:39:45,680
until

1043
00:39:45,680 --> 00:39:47,920
this hp bist draft matures a little bit

1044
00:39:47,920 --> 00:39:50,560
i'm not sure what would be held exactly

1045
00:39:50,560 --> 00:39:53,119
b feed the vn draft of the v2 draft i

1046
00:39:53,119 --> 00:39:54,880
was hoping to ship both of them like

1047
00:39:54,880 --> 00:39:57,359
soon i think they're both essentially i

1048
00:39:57,359 --> 00:39:58,960
mean the remaining concerns are

1049
00:39:58,960 --> 00:40:00,240
editorial

1050
00:40:00,240 --> 00:40:01,520
so i think they're ready for working

1051
00:40:01,520 --> 00:40:03,440
with last call unless we want to see how

1052
00:40:03,440 --> 00:40:04,640
this

1053
00:40:04,640 --> 00:40:06,880
called service thing shakes out

1054
00:40:06,880 --> 00:40:08,480
i don't think it's necessary for sorry i

1055
00:40:08,480 --> 00:40:09,520
should have responded i don't think it's

1056
00:40:09,520 --> 00:40:10,880
necessary to wait for that um i think

1057
00:40:10,880 --> 00:40:12,160
the change that i'm supposed to make to

1058
00:40:12,160 --> 00:40:14,400
the end is straightforward um if if any

1059
00:40:14,400 --> 00:40:16,240
change is needed i'll file a bug to like

1060
00:40:16,240 --> 00:40:18,800
check for the change um and um because i

1061
00:40:18,800 --> 00:40:19,839
don't remember if we have any tests

1062
00:40:19,839 --> 00:40:21,520
about this and i think that the v2 thing

1063
00:40:21,520 --> 00:40:22,720
is fine i don't think we need to do the

1064
00:40:22,720 --> 00:40:25,119
old service thing frankly at all but

1065
00:40:25,119 --> 00:40:27,440
like certainly not before we ship this

1066
00:40:27,440 --> 00:40:28,480
okay

1067
00:40:28,480 --> 00:40:30,160
if if and like i said if you want to

1068
00:40:30,160 --> 00:40:32,960
wander over to hp bis and and

1069
00:40:32,960 --> 00:40:34,480
express some support for that that would

1070
00:40:34,480 --> 00:40:35,680
be helpful

1071
00:40:35,680 --> 00:40:36,480
um

1072
00:40:36,480 --> 00:40:38,880
should we move on yes please okay

1073
00:40:38,880 --> 00:40:41,359
next set of slides

1074
00:40:41,359 --> 00:40:42,480
all right now for something completely

1075
00:40:42,480 --> 00:40:44,640
different um quick lb

1076
00:40:44,640 --> 00:40:47,200
oops nope click the wrong button

1077
00:40:47,200 --> 00:40:50,439
one moment

1078
00:41:01,760 --> 00:41:04,000
okay so when last we met um this thing

1079
00:41:04,000 --> 00:41:05,760
had exploded through some scope creep

1080
00:41:05,760 --> 00:41:07,040
into

1081
00:41:07,040 --> 00:41:09,520
uh this multiplicity of config options

1082
00:41:09,520 --> 00:41:10,400
and there were like three different

1083
00:41:10,400 --> 00:41:11,839
algorithms in each algorithm had a

1084
00:41:11,839 --> 00:41:13,760
completely different implementation and

1085
00:41:13,760 --> 00:41:15,440
had completely different parameters with

1086
00:41:15,440 --> 00:41:16,880
different limits

1087
00:41:16,880 --> 00:41:18,079
and um

1088
00:41:18,079 --> 00:41:19,520
there were not a lot of implementations

1089
00:41:19,520 --> 00:41:21,040
we'd not done any interop the second

1090
00:41:21,040 --> 00:41:22,640
problem is still a problem but the first

1091
00:41:22,640 --> 00:41:24,160
one um

1092
00:41:24,160 --> 00:41:27,598
has improved next slide

1093
00:41:28,079 --> 00:41:30,480
okay so now uh i got rid of all that and

1094
00:41:30,480 --> 00:41:32,240
there's just the one thing now basically

1095
00:41:32,240 --> 00:41:34,720
every connection id looks like this

1096
00:41:34,720 --> 00:41:36,800
um

1097
00:41:36,800 --> 00:41:37,920
uh

1098
00:41:37,920 --> 00:41:40,319
and it could be encrypted or not

1099
00:41:40,319 --> 00:41:42,240
and um if it's if it's the specific

1100
00:41:42,240 --> 00:41:43,920
magic length where it can be a single

1101
00:41:43,920 --> 00:41:46,079
block encryption decryption because the

1102
00:41:46,079 --> 00:41:48,400
it's 17 bytes then then it is otherwise

1103
00:41:48,400 --> 00:41:50,480
you use this multi-pass thing

1104
00:41:50,480 --> 00:41:52,720
um so this is much cleaner conceptually

1105
00:41:52,720 --> 00:41:54,640
i think it's a lot easier to understand

1106
00:41:54,640 --> 00:41:56,640
and it's much less code having haven't

1107
00:41:56,640 --> 00:41:58,400
implemented it both ways

1108
00:41:58,400 --> 00:42:00,960
next slide

1109
00:42:00,960 --> 00:42:02,800
um so these were sort of the last time

1110
00:42:02,800 --> 00:42:04,560
these this is kind of the path forward i

1111
00:42:04,560 --> 00:42:06,720
i uh proposed for this

1112
00:42:06,720 --> 00:42:07,599
um

1113
00:42:07,599 --> 00:42:09,200
we did a quick we did get a crypto

1114
00:42:09,200 --> 00:42:10,800
review we did make some changes we just

1115
00:42:10,800 --> 00:42:13,200
got another crypto review which um

1116
00:42:13,200 --> 00:42:15,680
was a little less positive about what we

1117
00:42:15,680 --> 00:42:17,599
had done and so christian and i are

1118
00:42:17,599 --> 00:42:19,200
working through that they kind of want

1119
00:42:19,200 --> 00:42:20,319
to do more

1120
00:42:20,319 --> 00:42:22,079
passes which seems like a problem so

1121
00:42:22,079 --> 00:42:24,319
we're we're exploring that on how to fix

1122
00:42:24,319 --> 00:42:25,119
that

1123
00:42:25,119 --> 00:42:26,800
i was going to delete the block cipher

1124
00:42:26,800 --> 00:42:28,720
but there was some push back and i think

1125
00:42:28,720 --> 00:42:29,839
the new

1126
00:42:29,839 --> 00:42:31,680
system where there's just a magic length

1127
00:42:31,680 --> 00:42:34,319
where you do it you use a block cipher

1128
00:42:34,319 --> 00:42:36,000
cleans up a lot of complexity it's like

1129
00:42:36,000 --> 00:42:37,680
10 lines of code

1130
00:42:37,680 --> 00:42:40,480
so um i think we'll just leave it in

1131
00:42:40,480 --> 00:42:43,200
um and i sent an email a few weeks ago

1132
00:42:43,200 --> 00:42:45,440
about splitting the draft so there's to

1133
00:42:45,440 --> 00:42:46,560
remind you guys there's this load

1134
00:42:46,560 --> 00:42:47,920
balancer thing where we encode the

1135
00:42:47,920 --> 00:42:49,599
server id and a

1136
00:42:49,599 --> 00:42:51,359
any connection id and then there's like

1137
00:42:51,359 --> 00:42:53,040
this mostly unrelated thing about

1138
00:42:53,040 --> 00:42:55,359
offloading retry to some sort of service

1139
00:42:55,359 --> 00:42:56,640
or

1140
00:42:56,640 --> 00:42:58,400
hardware thing or whatever

1141
00:42:58,400 --> 00:43:00,560
um

1142
00:43:00,560 --> 00:43:03,359
and uh that like is loosely

1143
00:43:03,359 --> 00:43:04,720
under the theme of middlebox

1144
00:43:04,720 --> 00:43:06,079
coordination but otherwise there's no

1145
00:43:06,079 --> 00:43:08,160
really ship at all and so um i think

1146
00:43:08,160 --> 00:43:09,200
there was

1147
00:43:09,200 --> 00:43:11,680
pretty strong support on the list to um

1148
00:43:11,680 --> 00:43:13,200
split those and i've already got a pr

1149
00:43:13,200 --> 00:43:14,400
for that so

1150
00:43:14,400 --> 00:43:16,160
unless somebody comes up to the mic and

1151
00:43:16,160 --> 00:43:18,240
says this is um a terrible idea i'm

1152
00:43:18,240 --> 00:43:20,720
probably going to push commit that um

1153
00:43:20,720 --> 00:43:22,720
shortly after this

1154
00:43:22,720 --> 00:43:24,960
and then like from an edit so there is

1155
00:43:24,960 --> 00:43:26,480
again some more crypto review stuff to

1156
00:43:26,480 --> 00:43:29,760
do but like the design is getting pretty

1157
00:43:29,760 --> 00:43:31,839
close to being done i think what we

1158
00:43:31,839 --> 00:43:33,520
really need is some interop and some

1159
00:43:33,520 --> 00:43:36,560
deployment experience i think um

1160
00:43:36,560 --> 00:43:38,079
i think google has the intent of

1161
00:43:38,079 --> 00:43:39,680
deploying this

1162
00:43:39,680 --> 00:43:40,800
in the

1163
00:43:40,800 --> 00:43:43,760
near to mid-term i'll say um so that

1164
00:43:43,760 --> 00:43:45,200
will at least give us some experience to

1165
00:43:45,200 --> 00:43:46,560
try to manage handle all the

1166
00:43:46,560 --> 00:43:48,319
configuration and all that i've gotten

1167
00:43:48,319 --> 00:43:51,280
some bytes from infinate financial about

1168
00:43:51,280 --> 00:43:52,880
their implementation

1169
00:43:52,880 --> 00:43:55,040
so um maybe

1170
00:43:55,040 --> 00:43:57,280
i i would have thought by now we'd have

1171
00:43:57,280 --> 00:43:58,960
more servers that supported this but

1172
00:43:58,960 --> 00:44:00,960
that seems not to have happened so if

1173
00:44:00,960 --> 00:44:02,319
you have a server implementation i'd

1174
00:44:02,319 --> 00:44:04,640
really appreciate um some effort in this

1175
00:44:04,640 --> 00:44:05,839
space

1176
00:44:05,839 --> 00:44:07,760
but um

1177
00:44:07,760 --> 00:44:10,000
i i don't think we're a mile away from

1178
00:44:10,000 --> 00:44:11,599
from last call but it needs a little

1179
00:44:11,599 --> 00:44:15,040
more maturation before we get there

1180
00:44:15,040 --> 00:44:17,839
we have ecker in the queue

1181
00:44:17,839 --> 00:44:21,240
please go ahead

1182
00:44:22,720 --> 00:44:24,640
hi so yes i i am just catching up to

1183
00:44:24,640 --> 00:44:26,400
speed on the uh um

1184
00:44:26,400 --> 00:44:29,359
on the top on this document um

1185
00:44:29,359 --> 00:44:32,000
uh i did read the inria review and it

1186
00:44:32,000 --> 00:44:34,240
was quite concerning um

1187
00:44:34,240 --> 00:44:35,760
i guess um

1188
00:44:35,760 --> 00:44:36,720
you know

1189
00:44:36,720 --> 00:44:38,160
i don't think we should invent our own

1190
00:44:38,160 --> 00:44:40,640
version of ffx in this working group um

1191
00:44:40,640 --> 00:44:42,720
and um so either we should remove that

1192
00:44:42,720 --> 00:44:44,880
section or replace it with fx um but

1193
00:44:44,880 --> 00:44:46,560
like it took a it took enormous long

1194
00:44:46,560 --> 00:44:49,280
time to get ffx right um and

1195
00:44:49,280 --> 00:44:50,720
and a lot of a lot of a lot of real

1196
00:44:50,720 --> 00:44:53,680
photographers and so um i i i think we

1197
00:44:53,680 --> 00:44:54,800
should like

1198
00:44:54,800 --> 00:44:56,079
like i think i think it was like

1199
00:44:56,079 --> 00:44:57,119
regrettable

1200
00:44:57,119 --> 00:44:58,560
the center which we innovated um you

1201
00:44:58,560 --> 00:45:00,240
know in uh um

1202
00:45:00,240 --> 00:45:02,560
cryptographically um in doing um sql

1203
00:45:02,560 --> 00:45:03,760
server encryption is about the limit of

1204
00:45:03,760 --> 00:45:05,119
like what i'm willing to see i etf do

1205
00:45:05,119 --> 00:45:06,319
without like a lot more computer review

1206
00:45:06,319 --> 00:45:08,880
than we seem to have

1207
00:45:08,880 --> 00:45:10,720
i mean the concern about f of x is 12

1208
00:45:10,720 --> 00:45:14,240
passes um which seems like a lot

1209
00:45:14,240 --> 00:45:16,079
um

1210
00:45:16,079 --> 00:45:19,520
cheaper but like i mean like um

1211
00:45:19,520 --> 00:45:21,680
sorry i cut you off go ahead

1212
00:45:21,680 --> 00:45:25,040
well so i mean like we have a zero pass

1213
00:45:25,040 --> 00:45:26,800
option in this this design still where

1214
00:45:26,800 --> 00:45:29,359
people don't encrypt at all so so it's

1215
00:45:29,359 --> 00:45:32,598
it's um

1216
00:45:32,720 --> 00:45:34,079
uh like

1217
00:45:34,079 --> 00:45:35,680
this is not a well-formed idea right now

1218
00:45:35,680 --> 00:45:38,160
but i'm thinking about possibly

1219
00:45:38,160 --> 00:45:40,720
having some sort of um configuration

1220
00:45:40,720 --> 00:45:42,319
option where like you kind of can turn

1221
00:45:42,319 --> 00:45:43,920
the knob on on how well you're doing

1222
00:45:43,920 --> 00:45:45,280
here in terms of like number of passes

1223
00:45:45,280 --> 00:45:47,520
or something but that's i gotta go a

1224
00:45:47,520 --> 00:45:49,440
couple rounds with christian and

1225
00:45:49,440 --> 00:45:50,960
and the crypto review to figure out what

1226
00:45:50,960 --> 00:45:52,800
we're doing there

1227
00:45:52,800 --> 00:45:54,880
but i understand your concern yeah i

1228
00:45:54,880 --> 00:45:56,720
mean i i guess just like

1229
00:45:56,720 --> 00:45:59,200
like just like

1230
00:45:59,200 --> 00:46:02,000
yeah i i think just just generally like

1231
00:46:02,000 --> 00:46:03,520
the the itf used to do this kind of

1232
00:46:03,520 --> 00:46:04,880
thing and like used to life freelance a

1233
00:46:04,880 --> 00:46:07,920
lot on the crypto um and um

1234
00:46:07,920 --> 00:46:09,200
and like we've really moved towards

1235
00:46:09,200 --> 00:46:11,040
having like you know as much as possible

1236
00:46:11,040 --> 00:46:12,400
having validated crypto that we have

1237
00:46:12,400 --> 00:46:14,960
like high confidence in and um and so

1238
00:46:14,960 --> 00:46:16,480
like that so to not have that seems like

1239
00:46:16,480 --> 00:46:17,839
a regression and if the answer if we

1240
00:46:17,839 --> 00:46:18,960
can't solve this problem then we should

1241
00:46:18,960 --> 00:46:19,920
throw up our hands and say we can't

1242
00:46:19,920 --> 00:46:22,560
solve the problem and not and and and

1243
00:46:22,560 --> 00:46:23,839
like wait for the photographers to solve

1244
00:46:23,839 --> 00:46:27,119
it for us rather than um you know

1245
00:46:27,119 --> 00:46:27,839
and uh

1246
00:46:27,839 --> 00:46:28,960
mean and

1247
00:46:28,960 --> 00:46:30,000
you know it is possible there's

1248
00:46:30,000 --> 00:46:31,280
something that is that can tell this

1249
00:46:31,280 --> 00:46:32,960
problem given the more limited design

1250
00:46:32,960 --> 00:46:35,119
space than fpe um

1251
00:46:35,119 --> 00:46:37,200
uh but i think for us to like write into

1252
00:46:37,200 --> 00:46:38,960
post-standard document um something

1253
00:46:38,960 --> 00:46:40,560
which we like like this little

1254
00:46:40,560 --> 00:46:43,839
confidence in seems unfortunate

1255
00:46:45,680 --> 00:46:49,440
okay i mean i'm certainly um

1256
00:46:49,760 --> 00:46:52,720
i'm certainly open to the crafters like

1257
00:46:52,720 --> 00:46:54,880
proposing something in the like

1258
00:46:54,880 --> 00:46:57,040
sub 16 byte

1259
00:46:57,040 --> 00:46:58,880
plain text space

1260
00:46:58,880 --> 00:47:00,400
that um

1261
00:47:00,400 --> 00:47:02,000
you know meets meets the meets the

1262
00:47:02,000 --> 00:47:03,920
constraints that we have i'm not married

1263
00:47:03,920 --> 00:47:06,000
to this particular way of working

1264
00:47:06,000 --> 00:47:08,839
um and i understand the concerns i'm

1265
00:47:08,839 --> 00:47:11,520
just uh

1266
00:47:11,520 --> 00:47:13,200
this has not been forthcoming to at this

1267
00:47:13,200 --> 00:47:15,440
point and i've not completely digested

1268
00:47:15,440 --> 00:47:18,079
this latest review so so um i need to

1269
00:47:18,079 --> 00:47:19,200
huddle with christian and figure out

1270
00:47:19,200 --> 00:47:21,119
what we're gonna do about it

1271
00:47:21,119 --> 00:47:23,920
perfect timing to ask christian to come

1272
00:47:23,920 --> 00:47:27,760
to the microphone oh excellent

1273
00:47:29,599 --> 00:47:30,720
yeah i mean

1274
00:47:30,720 --> 00:47:32,880
i

1275
00:47:32,880 --> 00:47:35,680
i'm i'm kind of i have a lot of sympathy

1276
00:47:35,680 --> 00:47:38,559
for what echo said okay

1277
00:47:38,559 --> 00:47:41,200
as in uh we should not invent stuff and

1278
00:47:41,200 --> 00:47:42,400
uh

1279
00:47:42,400 --> 00:47:45,119
i actually insisted to have these crypto

1280
00:47:45,119 --> 00:47:48,319
reviews to make sure that we are not uh

1281
00:47:48,319 --> 00:47:50,880
out of the deep end

1282
00:47:50,880 --> 00:47:52,800
what is interesting is that one of the

1283
00:47:52,800 --> 00:47:55,599
crypto review was really positive

1284
00:47:55,599 --> 00:47:59,520
and it is unclear that the in-area

1285
00:47:59,520 --> 00:48:01,440
attack

1286
00:48:01,440 --> 00:48:04,800
is actually important in the case that

1287
00:48:04,800 --> 00:48:06,640
we have

1288
00:48:06,640 --> 00:48:10,000
but we can we can check that

1289
00:48:10,000 --> 00:48:12,079
i would much prefer to have something

1290
00:48:12,079 --> 00:48:15,040
that is completely standard and yeah i

1291
00:48:15,040 --> 00:48:16,160
mean if

1292
00:48:16,160 --> 00:48:18,240
if we are okay with 12 passes let's do

1293
00:48:18,240 --> 00:48:21,359
12 passes but

1294
00:48:21,359 --> 00:48:23,760
i i must say that we we will we have to

1295
00:48:23,760 --> 00:48:25,599
discuss with you know folks to

1296
00:48:25,599 --> 00:48:27,920
understand exactly

1297
00:48:27,920 --> 00:48:30,800
what the implications are and if it is

1298
00:48:30,800 --> 00:48:34,720
to say don't do that well we won't do it

1299
00:48:34,720 --> 00:48:37,839
or we should not do it

1300
00:48:41,920 --> 00:48:43,680
thank you christian

1301
00:48:43,680 --> 00:48:46,880
i don't see anyone else in the queue

1302
00:48:46,880 --> 00:48:49,440
you have one more slide martin do i okay

1303
00:48:49,440 --> 00:48:51,599
sure but it's is on the i've already

1304
00:48:51,599 --> 00:48:53,119
forgotten what no i forget this yeah

1305
00:48:53,119 --> 00:48:54,880
yeah nobody cares about your documents

1306
00:48:54,880 --> 00:48:56,400
that was good unless somebody cares

1307
00:48:56,400 --> 00:48:57,599
about space in the documents we don't

1308
00:48:57,599 --> 00:48:58,880
want to talk about that

1309
00:48:58,880 --> 00:49:01,359
all right excellent thank you

1310
00:49:01,359 --> 00:49:03,839
thank you

1311
00:49:06,160 --> 00:49:07,920
which brings us on to the next gender

1312
00:49:07,920 --> 00:49:11,880
item which is multibath

1313
00:49:23,200 --> 00:49:25,119
yeah hello everybody um i'm elia

1314
00:49:25,119 --> 00:49:27,040
cooleven i'm presenting for the also

1315
00:49:27,040 --> 00:49:29,040
group here and i hope my authors will

1316
00:49:29,040 --> 00:49:30,559
just jump into the queue anytime they

1317
00:49:30,559 --> 00:49:32,960
want to say something and we go to the

1318
00:49:32,960 --> 00:49:35,280
next slide

1319
00:49:35,280 --> 00:49:38,559
yeah so multipass draft was adopted

1320
00:49:38,559 --> 00:49:40,160
earlier this year

1321
00:49:40,160 --> 00:49:42,160
and we submitted the zero zero version

1322
00:49:42,160 --> 00:49:43,760
and the zero version had already a

1323
00:49:43,760 --> 00:49:45,839
couple of editorial changes and

1324
00:49:45,839 --> 00:49:47,839
clarifications and stuff compared to the

1325
00:49:47,839 --> 00:49:49,520
individual draft

1326
00:49:49,520 --> 00:49:51,280
um but

1327
00:49:51,280 --> 00:49:54,000
no design changes i believe and then we

1328
00:49:54,000 --> 00:49:56,839
submitted a new version just at the

1329
00:49:56,839 --> 00:50:00,400
submission um deadline which also mainly

1330
00:50:00,400 --> 00:50:02,720
had editorial change but like to to a

1331
00:50:02,720 --> 00:50:04,640
larger amount like we added some kind of

1332
00:50:04,640 --> 00:50:06,800
overview section to make it easier to

1333
00:50:06,800 --> 00:50:07,680
read

1334
00:50:07,680 --> 00:50:09,599
we had a couple of clarifications about

1335
00:50:09,599 --> 00:50:11,920
how to use or like what's the relation

1336
00:50:11,920 --> 00:50:13,200
to existing

1337
00:50:13,200 --> 00:50:15,040
transport parameters

1338
00:50:15,040 --> 00:50:16,800
and there was some clarifications about

1339
00:50:16,800 --> 00:50:18,559
timeouts and so on so this is technical

1340
00:50:18,559 --> 00:50:20,400
stuff but it was clarification stuff

1341
00:50:20,400 --> 00:50:22,319
missing and not like supposed to be any

1342
00:50:22,319 --> 00:50:24,880
kind of new design changes

1343
00:50:24,880 --> 00:50:27,119
or anything like that

1344
00:50:27,119 --> 00:50:29,359
um yeah look at the div yourself if you

1345
00:50:29,359 --> 00:50:31,280
want to know what the details are

1346
00:50:31,280 --> 00:50:34,400
um so um let's let's jump into the open

1347
00:50:34,400 --> 00:50:37,280
issues um next slide

1348
00:50:37,280 --> 00:50:39,760
we have a bunch of open issues in github

1349
00:50:39,760 --> 00:50:41,599
and these are not all of them but like

1350
00:50:41,599 --> 00:50:43,440
they're also editorial ones and we also

1351
00:50:43,440 --> 00:50:46,880
have a bunch of open issues

1352
00:50:46,960 --> 00:50:49,520
sorry which are unmarked at

1353
00:50:49,520 --> 00:50:51,839
kind of extension because in this draft

1354
00:50:51,839 --> 00:50:53,920
we really try to focus on the bare

1355
00:50:53,920 --> 00:50:55,599
minimum to some extent really what

1356
00:50:55,599 --> 00:50:57,680
what's needed to make to set up new

1357
00:50:57,680 --> 00:50:58,559
parts

1358
00:50:58,559 --> 00:51:01,119
and manage new paths

1359
00:51:01,119 --> 00:51:03,920
and so we have basically this six design

1360
00:51:03,920 --> 00:51:05,599
issues which are currently open and i

1361
00:51:05,599 --> 00:51:07,520
would like to quickly run through them

1362
00:51:07,520 --> 00:51:09,440
and see if we can make any progress the

1363
00:51:09,440 --> 00:51:11,359
biggest design issue is the last one

1364
00:51:11,359 --> 00:51:13,200
here in the slide that's a big question

1365
00:51:13,200 --> 00:51:15,359
about using one or multiple packet

1366
00:51:15,359 --> 00:51:17,200
number spaces

1367
00:51:17,200 --> 00:51:19,520
but if you look at the github

1368
00:51:19,520 --> 00:51:21,359
issue we also made some progress there

1369
00:51:21,359 --> 00:51:22,880
had some good discussion and maybe have

1370
00:51:22,880 --> 00:51:25,520
a way forward so let's see where we are

1371
00:51:25,520 --> 00:51:28,559
um yeah let's start

1372
00:51:29,200 --> 00:51:30,800
okay this is an issue that has been

1373
00:51:30,800 --> 00:51:32,319
around for a while

1374
00:51:32,319 --> 00:51:34,240
as i just said when we

1375
00:51:34,240 --> 00:51:36,160
when we took the existing multi-pass

1376
00:51:36,160 --> 00:51:37,920
draft and and merged them into this

1377
00:51:37,920 --> 00:51:40,079
draft we really tried to concentrate on

1378
00:51:40,079 --> 00:51:41,520
the bare minimum

1379
00:51:41,520 --> 00:51:45,040
and so this part was existent uh in at

1380
00:51:45,040 --> 00:51:47,680
least the alibaba draft but we didn't

1381
00:51:47,680 --> 00:51:49,280
take it over

1382
00:51:49,280 --> 00:51:50,880
and the function we're talking about

1383
00:51:50,880 --> 00:51:53,280
here is to indicate to the other end

1384
00:51:53,280 --> 00:51:54,960
that one of the passes or multiple of

1385
00:51:54,960 --> 00:51:57,119
the process actually should not be used

1386
00:51:57,119 --> 00:51:58,800
at this point of time so you just keep

1387
00:51:58,800 --> 00:52:01,040
them as a backup and that's a very

1388
00:52:01,040 --> 00:52:02,880
typical scenario you have like this hand

1389
00:52:02,880 --> 00:52:04,640
hand-over scenario where you open one

1390
00:52:04,640 --> 00:52:06,559
path on your wi-fi oneplus and your

1391
00:52:06,559 --> 00:52:08,559
cellular and as long as you have good

1392
00:52:08,559 --> 00:52:10,480
wi-fi connectivity you don't want to use

1393
00:52:10,480 --> 00:52:12,880
a seller because it's more expensive

1394
00:52:12,880 --> 00:52:14,160
but you're the client you have this

1395
00:52:14,160 --> 00:52:15,920
knowledge you're requesting data from

1396
00:52:15,920 --> 00:52:17,359
the server and the server doesn't know

1397
00:52:17,359 --> 00:52:19,920
that so you want to tell the server

1398
00:52:19,920 --> 00:52:22,079
don't use this pass as long as you have

1399
00:52:22,079 --> 00:52:23,200
a different path that's the

1400
00:52:23,200 --> 00:52:24,720
functionality

1401
00:52:24,720 --> 00:52:26,480
and that is related to

1402
00:52:26,480 --> 00:52:28,240
package scheduling and these kind of

1403
00:52:28,240 --> 00:52:30,000
questions which we

1404
00:52:30,000 --> 00:52:32,000
declared as out of scope for the space

1405
00:52:32,000 --> 00:52:34,160
draft but this functionality seems to be

1406
00:52:34,160 --> 00:52:37,119
very basic and very important and useful

1407
00:52:37,119 --> 00:52:39,040
so the question really is do you want to

1408
00:52:39,040 --> 00:52:40,480
add it back

1409
00:52:40,480 --> 00:52:43,040
as i said it was there in

1410
00:52:43,040 --> 00:52:44,960
the alibaba draft there was a frame

1411
00:52:44,960 --> 00:52:46,640
called path status we don't have that

1412
00:52:46,640 --> 00:52:48,640
frame anymore pass that is had like a

1413
00:52:48,640 --> 00:52:50,720
lot of information not only this

1414
00:52:50,720 --> 00:52:53,119
information but this was like one piece

1415
00:52:53,119 --> 00:52:55,119
of the information in there and it's

1416
00:52:55,119 --> 00:52:57,280
also a function that is part of

1417
00:52:57,280 --> 00:52:59,119
multipath quick for example because

1418
00:52:59,119 --> 00:53:01,520
there's a bit in multiples quick so when

1419
00:53:01,520 --> 00:53:04,240
multi-pass quick sorry multi-pass tcp

1420
00:53:04,240 --> 00:53:06,079
when multi-pass tcp was designed they

1421
00:53:06,079 --> 00:53:07,440
also decided this is an important

1422
00:53:07,440 --> 00:53:10,240
function they want to support it

1423
00:53:10,240 --> 00:53:12,880
so any opinions should we re-edit

1424
00:53:12,880 --> 00:53:15,440
there's no pr yet but like

1425
00:53:15,440 --> 00:53:17,440
i think uh and we don't have to discuss

1426
00:53:17,440 --> 00:53:19,119
about how we want to edit just like

1427
00:53:19,119 --> 00:53:20,640
getting some feedback if people think

1428
00:53:20,640 --> 00:53:22,319
it's useful

1429
00:53:22,319 --> 00:53:24,000
yeah we have a few people joining the

1430
00:53:24,000 --> 00:53:28,400
queue so uh spencer's up first i'll just

1431
00:53:28,400 --> 00:53:32,240
let him get to the physical microphone

1432
00:53:36,000 --> 00:53:38,640
yeah uh this this is spencer dawkins so

1433
00:53:38,640 --> 00:53:40,319
um

1434
00:53:40,319 --> 00:53:41,680
i think that

1435
00:53:41,680 --> 00:53:44,319
this is really basic

1436
00:53:44,319 --> 00:53:45,839
and

1437
00:53:45,839 --> 00:53:48,079
i think that

1438
00:53:48,079 --> 00:53:50,559
almost everybody that has a cell phone

1439
00:53:50,559 --> 00:53:52,400
that has

1440
00:53:52,400 --> 00:53:53,599
wi-fi

1441
00:53:53,599 --> 00:53:55,440
connectivity

1442
00:53:55,440 --> 00:53:57,200
we'll find that you know

1443
00:53:57,200 --> 00:53:59,200
we'll find this late useful sooner or

1444
00:53:59,200 --> 00:54:00,240
later

1445
00:54:00,240 --> 00:54:01,920
so i think this is i think this is

1446
00:54:01,920 --> 00:54:03,760
really basic

1447
00:54:03,760 --> 00:54:07,359
uh it could be a separate extension

1448
00:54:07,359 --> 00:54:08,960
but i would expect that everybody would

1449
00:54:08,960 --> 00:54:12,800
be negotiating the severed extinction

1450
00:54:13,760 --> 00:54:16,960
so you know that's just kind of where

1451
00:54:16,960 --> 00:54:19,359
i am

1452
00:54:19,760 --> 00:54:23,440
i'm still thinking my way through

1453
00:54:23,520 --> 00:54:25,599
kind of all of the different reasons why

1454
00:54:25,599 --> 00:54:28,079
people do multipath but

1455
00:54:28,079 --> 00:54:30,319
uh on this one

1456
00:54:30,319 --> 00:54:34,000
it seems like you know it seems like um

1457
00:54:34,000 --> 00:54:36,839
this is also something where i know

1458
00:54:36,839 --> 00:54:40,640
something about my end that

1459
00:54:40,640 --> 00:54:42,799
i want you to know

1460
00:54:42,799 --> 00:54:45,200
and um

1461
00:54:45,200 --> 00:54:47,040
that you can't guess

1462
00:54:47,040 --> 00:54:49,119
you know you the server

1463
00:54:49,119 --> 00:54:51,040
can't know

1464
00:54:51,040 --> 00:54:54,319
that i had this preference

1465
00:54:54,480 --> 00:54:57,680
and uh it seems like it's harder to do

1466
00:54:57,680 --> 00:54:59,680
you know it's hard you know not having

1467
00:54:59,680 --> 00:55:01,760
this will make things harder

1468
00:55:01,760 --> 00:55:05,119
uh in the base protocol this is

1469
00:55:05,119 --> 00:55:08,079
uh in the base multi-path

1470
00:55:08,079 --> 00:55:09,280
extension

1471
00:55:09,280 --> 00:55:10,960
uh but uh

1472
00:55:10,960 --> 00:55:14,799
that would be my theory thank you

1473
00:55:14,799 --> 00:55:20,040
thank you spencer tommy paulie please

1474
00:55:22,400 --> 00:55:25,599
all right tommy pauly apple um

1475
00:55:25,599 --> 00:55:27,040
so

1476
00:55:27,040 --> 00:55:29,119
on this

1477
00:55:29,119 --> 00:55:31,680
you know i think they're pr you probably

1478
00:55:31,680 --> 00:55:35,200
could have other implicit ways

1479
00:55:35,200 --> 00:55:37,439
to

1480
00:55:37,760 --> 00:55:39,760
tell the server that i don't want to use

1481
00:55:39,760 --> 00:55:42,319
this path yet by saying oh i haven't

1482
00:55:42,319 --> 00:55:43,920
been

1483
00:55:43,920 --> 00:55:45,359
actually sending anything from the

1484
00:55:45,359 --> 00:55:46,720
client

1485
00:55:46,720 --> 00:55:48,000
on this path you could do things like

1486
00:55:48,000 --> 00:55:49,920
that but

1487
00:55:49,920 --> 00:55:53,440
that would be relatively complicated um

1488
00:55:53,440 --> 00:55:55,440
and you know i think a lot of the cases

1489
00:55:55,440 --> 00:55:57,920
where we've seen multipath deployed so

1490
00:55:57,920 --> 00:55:59,280
far

1491
00:55:59,280 --> 00:56:01,520
at least in our experience is when you

1492
00:56:01,520 --> 00:56:04,240
have very specific applications that are

1493
00:56:04,240 --> 00:56:05,440
using it where you have a lot of

1494
00:56:05,440 --> 00:56:07,040
coordination between the client and the

1495
00:56:07,040 --> 00:56:09,119
server but hopefully with multipath

1496
00:56:09,119 --> 00:56:11,599
quick as quick is more and more

1497
00:56:11,599 --> 00:56:13,040
ubiquitous on the web we're just going

1498
00:56:13,040 --> 00:56:15,359
to start using this to random servers

1499
00:56:15,359 --> 00:56:17,520
that we don't have that with so i think

1500
00:56:17,520 --> 00:56:19,359
having something explicit

1501
00:56:19,359 --> 00:56:21,680
would be very very useful here

1502
00:56:21,680 --> 00:56:24,240
just to avoid some of the cost cases

1503
00:56:24,240 --> 00:56:25,920
the fact that there is something

1504
00:56:25,920 --> 00:56:28,720
equivalent within mptcp i think is a

1505
00:56:28,720 --> 00:56:30,160
very strong argument for saying we

1506
00:56:30,160 --> 00:56:32,160
should have at least parity

1507
00:56:32,160 --> 00:56:33,520
with it and i don't think we should

1508
00:56:33,520 --> 00:56:35,839
necessarily go beyond it and so i would

1509
00:56:35,839 --> 00:56:38,160
encourage us to stay minimal

1510
00:56:38,160 --> 00:56:41,200
and not add a huge

1511
00:56:41,200 --> 00:56:44,160
uh bunch of complexity or too much

1512
00:56:44,160 --> 00:56:46,240
extensibility right now there just you

1513
00:56:46,240 --> 00:56:49,119
know use whatever the simplest

1514
00:56:49,119 --> 00:56:52,000
uh bit we need to send but

1515
00:56:52,000 --> 00:56:53,760
let's do something to at least maintain

1516
00:56:53,760 --> 00:56:57,040
parity with mptcp

1517
00:56:57,280 --> 00:56:59,839
yeah if i remember correctly this um mp

1518
00:56:59,839 --> 00:57:01,599
prior option was designed to be

1519
00:57:01,599 --> 00:57:03,520
extendable and and provide more features

1520
00:57:03,520 --> 00:57:05,680
but at the end they only um specified

1521
00:57:05,680 --> 00:57:08,000
this one bit in this initial version so

1522
00:57:08,000 --> 00:57:09,440
yeah

1523
00:57:09,440 --> 00:57:12,960
uh jun fay please proceed

1524
00:57:12,960 --> 00:57:16,000
uh hello this is unfair from alibaba

1525
00:57:16,000 --> 00:57:18,160
i want to add some more information so

1526
00:57:18,160 --> 00:57:20,559
actually in some of our applications we

1527
00:57:20,559 --> 00:57:21,920
already

1528
00:57:21,920 --> 00:57:24,799
see users complain that we use too much

1529
00:57:24,799 --> 00:57:26,720
of the cellular data

1530
00:57:26,720 --> 00:57:30,319
so i think the cost is a one of the very

1531
00:57:30,319 --> 00:57:32,880
important factor that ultimately affects

1532
00:57:32,880 --> 00:57:34,559
user experience

1533
00:57:34,559 --> 00:57:36,480
so that's why

1534
00:57:36,480 --> 00:57:37,680
we think

1535
00:57:37,680 --> 00:57:40,400
it is actually important for us to have

1536
00:57:40,400 --> 00:57:42,640
some explicit way

1537
00:57:42,640 --> 00:57:45,440
to for example if we see the

1538
00:57:45,440 --> 00:57:48,160
data is consumed a lot on one path and

1539
00:57:48,160 --> 00:57:49,119
we can

1540
00:57:49,119 --> 00:57:52,160
explicitly send a signal to set up setup

1541
00:57:52,160 --> 00:57:55,520
path as standby so i actually agree with

1542
00:57:55,520 --> 00:57:57,119
what mira just said

1543
00:57:57,119 --> 00:57:59,359
i think it's important to have this

1544
00:57:59,359 --> 00:58:02,160
functionality

1545
00:58:03,040 --> 00:58:04,000
thank you

1546
00:58:04,000 --> 00:58:06,079
marcus in the room

1547
00:58:06,079 --> 00:58:08,480
marcus armando telekom

1548
00:58:08,480 --> 00:58:10,480
as you know mia i already participated

1549
00:58:10,480 --> 00:58:12,559
in the discussion at github and i fully

1550
00:58:12,559 --> 00:58:14,319
support this idea the only question i

1551
00:58:14,319 --> 00:58:17,359
have is one bit enough at the end or do

1552
00:58:17,359 --> 00:58:20,559
we need more bits um

1553
00:58:20,559 --> 00:58:23,920
in the multi-pass dccp i will present on

1554
00:58:23,920 --> 00:58:27,200
on friday during the tsvwt slot

1555
00:58:27,200 --> 00:58:30,160
i will present that we spend for mprio

1556
00:58:30,160 --> 00:58:33,680
option four bits so we have

1557
00:58:33,680 --> 00:58:36,720
multiple levels of prioritization for

1558
00:58:36,720 --> 00:58:38,880
paths so maybe that is something which

1559
00:58:38,880 --> 00:58:41,440
could be also considerate here

1560
00:58:41,440 --> 00:58:43,359
yeah as i said there's no pr

1561
00:58:43,359 --> 00:58:45,680
and no pr yet so we will propose a

1562
00:58:45,680 --> 00:58:46,720
solution

1563
00:58:46,720 --> 00:58:48,640
uh i hear definite agreement that we

1564
00:58:48,640 --> 00:58:50,960
want at least this one bit so

1565
00:58:50,960 --> 00:58:53,119
let's see where we go thank you

1566
00:58:53,119 --> 00:58:55,680
thanks and then hang on one more person

1567
00:58:55,680 --> 00:58:58,000
sorry

1568
00:59:00,160 --> 00:59:02,720
the advanced feature regarding to the

1569
00:59:02,720 --> 00:59:05,440
scheduling you basically signal the

1570
00:59:05,440 --> 00:59:08,799
scheduling preference of your pass it's

1571
00:59:08,799 --> 00:59:12,319
not a zero one decision it's actually

1572
00:59:12,319 --> 00:59:14,960
you can signal uh how much traffic you

1573
00:59:14,960 --> 00:59:18,799
want to go to a specific test so i think

1574
00:59:18,799 --> 00:59:21,040
it should leave out the

1575
00:59:21,040 --> 00:59:23,599
base drop it should be put into another

1576
00:59:23,599 --> 00:59:26,400
extension drop

1577
00:59:26,880 --> 00:59:28,160
yeah i think that's maybe a little bit

1578
00:59:28,160 --> 00:59:30,559
of a separate or like yeah

1579
00:59:30,559 --> 00:59:32,000
that's a functionality you might want to

1580
00:59:32,000 --> 00:59:33,680
use it well at some point but if it has

1581
00:59:33,680 --> 00:59:35,599
to be part of the base back is a is a

1582
00:59:35,599 --> 00:59:38,160
different question

1583
00:59:39,040 --> 00:59:40,400
let's wait for the pr and then have some

1584
00:59:40,400 --> 00:59:42,880
more discussion

1585
00:59:42,880 --> 00:59:47,839
cool thanks yeah then next issue

1586
00:59:49,520 --> 00:59:52,400
yeah so um this

1587
00:59:52,400 --> 00:59:53,520
issue

1588
00:59:53,520 --> 00:59:58,640
is also easy um in rfc 9000 only the

1589
00:59:58,640 --> 01:00:01,040
clients can migrate and there are good

1590
01:00:01,040 --> 01:00:02,480
reasons for it because it makes the

1591
01:00:02,480 --> 01:00:04,799
whole thing much simpler and that's also

1592
01:00:04,799 --> 01:00:06,319
the main use case

1593
01:00:06,319 --> 01:00:09,119
however if i'm right and i might be

1594
01:00:09,119 --> 01:00:10,400
wrong

1595
01:00:10,400 --> 01:00:12,400
i believe the reasons for having this

1596
01:00:12,400 --> 01:00:14,960
restriction is not valid for multipath

1597
01:00:14,960 --> 01:00:16,799
anymore because in a multipass case

1598
01:00:16,799 --> 01:00:18,720
you're not closing the old path you're

1599
01:00:18,720 --> 01:00:21,359
just open opening a second press so if

1600
01:00:21,359 --> 01:00:24,319
the second pass fails to some extent you

1601
01:00:24,319 --> 01:00:26,640
still have the old one so i don't i

1602
01:00:26,640 --> 01:00:28,319
didn't find a good reason to actually

1603
01:00:28,319 --> 01:00:30,640
keep this restriction um it's a change

1604
01:00:30,640 --> 01:00:32,880
to it would be a change to what the base

1605
01:00:32,880 --> 01:00:34,559
version one spec

1606
01:00:34,559 --> 01:00:37,040
says and we try to keep those changes

1607
01:00:37,040 --> 01:00:39,200
minimal but if we don't have a good

1608
01:00:39,200 --> 01:00:41,520
reason restricting um the multi-pass

1609
01:00:41,520 --> 01:00:45,040
functionality in a way that

1610
01:00:45,040 --> 01:00:46,880
doesn't allow for certain use cases this

1611
01:00:46,880 --> 01:00:48,400
doesn't seem to be useful for me so i

1612
01:00:48,400 --> 01:00:51,599
wanted to have some feedback if people

1613
01:00:51,599 --> 01:00:53,599
think this restriction is still useful

1614
01:00:53,599 --> 01:00:55,280
or if people are open to actually

1615
01:00:55,280 --> 01:00:58,319
release that restriction

1616
01:00:58,480 --> 01:01:00,640
we have like we've got a few people

1617
01:01:00,640 --> 01:01:04,319
joining the key so mike please go ahead

1618
01:01:05,359 --> 01:01:08,720
so the issue here is not so much that

1619
01:01:08,720 --> 01:01:11,200
you don't want the server to open new

1620
01:01:11,200 --> 01:01:14,559
paths as that with nat the server

1621
01:01:14,559 --> 01:01:17,359
opening the new path will usually

1622
01:01:17,359 --> 01:01:19,440
not be useful if it sends the first

1623
01:01:19,440 --> 01:01:20,559
packet

1624
01:01:20,559 --> 01:01:24,079
so what i had envisioned for server

1625
01:01:24,079 --> 01:01:26,000
initiated paths

1626
01:01:26,000 --> 01:01:28,799
was basically a frame that looks a lot

1627
01:01:28,799 --> 01:01:31,280
like the server preferred address

1628
01:01:31,280 --> 01:01:33,040
transport parameter

1629
01:01:33,040 --> 01:01:35,359
where the server asks the client please

1630
01:01:35,359 --> 01:01:37,760
try to reach me on this ip address

1631
01:01:37,760 --> 01:01:39,440
and then the server and the client is

1632
01:01:39,440 --> 01:01:42,240
the one who sends the first packet to

1633
01:01:42,240 --> 01:01:44,559
open things up with an app

1634
01:01:44,559 --> 01:01:45,599
so

1635
01:01:45,599 --> 01:01:48,160
i think if you want it to work in most

1636
01:01:48,160 --> 01:01:50,079
situations you need a little bit more

1637
01:01:50,079 --> 01:01:52,880
machinery and not just removing

1638
01:01:52,880 --> 01:01:54,160
the restriction

1639
01:01:54,160 --> 01:01:55,839
and you can remove the restriction and

1640
01:01:55,839 --> 01:01:57,920
it just won't work most of the time

1641
01:01:57,920 --> 01:01:59,760
so yeah that i totally agree but i think

1642
01:01:59,760 --> 01:02:01,520
that would actually be an extension that

1643
01:02:01,520 --> 01:02:03,680
we kind of didn't consider of of the

1644
01:02:03,680 --> 01:02:06,079
space functionality and the point is if

1645
01:02:06,079 --> 01:02:08,240
the server tries to open a path and you

1646
01:02:08,240 --> 01:02:09,920
fail then you know nothing happened you

1647
01:02:09,920 --> 01:02:12,079
just fail in in the multi-pass case

1648
01:02:12,079 --> 01:02:14,640
because you still have the old pass so

1649
01:02:14,640 --> 01:02:15,520
um

1650
01:02:15,520 --> 01:02:17,599
yes you know in many scenarios it might

1651
01:02:17,599 --> 01:02:18,960
not be useful but there might be use

1652
01:02:18,960 --> 01:02:20,240
cases where it's useful and it's just

1653
01:02:20,240 --> 01:02:21,680
like not necessary to have this

1654
01:02:21,680 --> 01:02:25,038
restriction from my point of view

1655
01:02:26,480 --> 01:02:30,160
thanks mike martin please yes uh martin

1656
01:02:30,160 --> 01:02:32,559
zeman protocollabs

1657
01:02:32,559 --> 01:02:34,880
i would like to point out that having

1658
01:02:34,880 --> 01:02:37,039
server initiated path would be really

1659
01:02:37,039 --> 01:02:39,039
nice in the peer-to-peer use case as it

1660
01:02:39,039 --> 01:02:42,720
makes the protocol more symmetric

1661
01:02:45,119 --> 01:02:48,319
short and sweet eric

1662
01:02:51,520 --> 01:02:52,640
uh

1663
01:02:52,640 --> 01:02:55,119
i guess i would um

1664
01:02:55,119 --> 01:02:56,480
i mean i'm sort of not not approached

1665
01:02:56,480 --> 01:02:58,400
that necessarily but like my assumption

1666
01:02:58,400 --> 01:02:59,520
would be in the peer-to-peer use case

1667
01:02:59,520 --> 01:03:01,280
you're using ice anyway or something

1668
01:03:01,280 --> 01:03:03,359
like it and therefore like

1669
01:03:03,359 --> 01:03:04,480
um

1670
01:03:04,480 --> 01:03:05,680
and of course the situation went

1671
01:03:05,680 --> 01:03:07,119
different

1672
01:03:07,119 --> 01:03:08,720
like are we ever going to use are we

1673
01:03:08,720 --> 01:03:10,319
ever any i mean are we ever going to do

1674
01:03:10,319 --> 01:03:12,319
quick multi-path like i mean there's a

1675
01:03:12,319 --> 01:03:14,079
peer-to-peer case where you like just

1676
01:03:14,079 --> 01:03:15,520
like randomly probe new powers with

1677
01:03:15,520 --> 01:03:18,480
quick rather than with lice

1678
01:03:20,160 --> 01:03:21,920
i don't know isis for recovering right

1679
01:03:21,920 --> 01:03:23,839
you might still want to open the pass

1680
01:03:23,839 --> 01:03:26,319
for some reason from the server side

1681
01:03:26,319 --> 01:03:29,520
uh i mean i mean realistically no real

1682
01:03:29,520 --> 01:03:31,200
realistically like

1683
01:03:31,200 --> 01:03:32,319
um

1684
01:03:32,319 --> 01:03:33,119
uh

1685
01:03:33,119 --> 01:03:34,799
realistically you like need ice to like

1686
01:03:34,799 --> 01:03:35,920
punch the holes in the nets and do all

1687
01:03:35,920 --> 01:03:37,839
kinds of other crap like like that's why

1688
01:03:37,839 --> 01:03:39,039
that's why i like that's why like all

1689
01:03:39,039 --> 01:03:40,559
the any anybody passed off and like

1690
01:03:40,559 --> 01:03:43,039
whatever did you live above ice

1691
01:03:43,039 --> 01:03:45,280
i mean yeah so i think in the net as we

1692
01:03:45,280 --> 01:03:46,880
discussed in that case it's not useful

1693
01:03:46,880 --> 01:03:48,240
and that's like a very common case the

1694
01:03:48,240 --> 01:03:49,920
cases i have in my head are more like

1695
01:03:49,920 --> 01:03:52,240
these kind of mask proxy cases where you

1696
01:03:52,240 --> 01:03:54,079
was in like one network and you want to

1697
01:03:54,079 --> 01:03:56,319
use it

1698
01:03:56,319 --> 01:03:58,000
right again i'm not i'm not opposed to

1699
01:03:58,000 --> 01:03:59,760
this this change what i'm saying is that

1700
01:03:59,760 --> 01:04:00,880
i don't believe in the peer-to-peer case

1701
01:04:00,880 --> 01:04:05,200
it will actually be functional yeah okay

1702
01:04:05,680 --> 01:04:08,079
so uh hi brian trammell google uh i

1703
01:04:08,079 --> 01:04:09,359
basically came up to this or put myself

1704
01:04:09,359 --> 01:04:10,559
in the queue to say something very much

1705
01:04:10,559 --> 01:04:12,880
like what mike bishop said i i think

1706
01:04:12,880 --> 01:04:14,559
what i'm hearing is the right way to do

1707
01:04:14,559 --> 01:04:16,640
this is to release the restriction but

1708
01:04:16,640 --> 01:04:18,559
maybe add some language here that says

1709
01:04:18,559 --> 01:04:20,160
by the way this is only going to work

1710
01:04:20,160 --> 01:04:22,240
here and point to future extensions

1711
01:04:22,240 --> 01:04:24,720
because i think the the server address

1712
01:04:24,720 --> 01:04:26,480
thing that that mike

1713
01:04:26,480 --> 01:04:28,720
was talking about is super useful and

1714
01:04:28,720 --> 01:04:30,640
i'd like to see that extension maybe

1715
01:04:30,640 --> 01:04:32,720
follow very closely on the heels of this

1716
01:04:32,720 --> 01:04:35,520
i think it's it's um

1717
01:04:35,520 --> 01:04:37,200
and like releasing this restriction in

1718
01:04:37,200 --> 01:04:38,839
the initial multipath

1719
01:04:38,839 --> 01:04:40,559
extension sort of points in that

1720
01:04:40,559 --> 01:04:41,760
direction but i think you need to be

1721
01:04:41,760 --> 01:04:43,680
very explicit about what the what this

1722
01:04:43,680 --> 01:04:44,960
is going to get you

1723
01:04:44,960 --> 01:04:46,880
in the base case and then point to

1724
01:04:46,880 --> 01:04:48,559
future work to actually so like you need

1725
01:04:48,559 --> 01:04:51,039
the like exercise or on the ice stuff

1726
01:04:51,039 --> 01:04:54,640
uh and then uh very excited about mike's

1727
01:04:54,640 --> 01:04:55,520
um

1728
01:04:55,520 --> 01:04:58,960
server preferred address so thanks

1729
01:04:58,960 --> 01:05:02,000
mike please go ahead

1730
01:05:03,680 --> 01:05:05,599
okay i'm still on the view i'll get down

1731
01:05:05,599 --> 01:05:06,799
now

1732
01:05:06,799 --> 01:05:09,839
oh sorry okay eric please

1733
01:05:09,839 --> 01:05:12,319
details details so i would be fairly

1734
01:05:12,319 --> 01:05:13,680
hesitant to release this in the

1735
01:05:13,680 --> 01:05:16,000
multipath extension um

1736
01:05:16,000 --> 01:05:18,559
i joined the queue just to say that

1737
01:05:18,559 --> 01:05:20,720
at the time when we were doing client

1738
01:05:20,720 --> 01:05:22,559
initiated migration in the original

1739
01:05:22,559 --> 01:05:25,440
quick spec there were an awful lot of

1740
01:05:25,440 --> 01:05:27,680
fairly thorny problems that we were able

1741
01:05:27,680 --> 01:05:29,200
to punt on by saying that the server

1742
01:05:29,200 --> 01:05:31,920
can't do this and so i think just

1743
01:05:31,920 --> 01:05:33,760
my initial reaction to this slide was

1744
01:05:33,760 --> 01:05:35,520
like oh yeah sure like you know try to

1745
01:05:35,520 --> 01:05:37,200
open a new path it'll be fine if it

1746
01:05:37,200 --> 01:05:40,160
doesn't work nobody's upset um but it

1747
01:05:40,160 --> 01:05:41,520
might be worth going back and digging up

1748
01:05:41,520 --> 01:05:42,799
some of those discussions because there

1749
01:05:42,799 --> 01:05:44,960
were a lot of fairly painful things and

1750
01:05:44,960 --> 01:05:46,720
so i think my personal preference would

1751
01:05:46,720 --> 01:05:48,960
be to keep the restriction here

1752
01:05:48,960 --> 01:05:50,559
and

1753
01:05:50,559 --> 01:05:53,200
it have a completely separate document

1754
01:05:53,200 --> 01:05:55,599
that opens that up like personally i

1755
01:05:55,599 --> 01:05:57,440
think it would be super useful i'd love

1756
01:05:57,440 --> 01:06:00,160
to see that for peer-to-peer use cases

1757
01:06:00,160 --> 01:06:01,839
but it seems like that would

1758
01:06:01,839 --> 01:06:05,119
be best as a different document that can

1759
01:06:05,119 --> 01:06:07,920
then spend lots of time and focus on

1760
01:06:07,920 --> 01:06:09,520
those issues as opposed to being an

1761
01:06:09,520 --> 01:06:11,039
afterthought in this document which has

1762
01:06:11,039 --> 01:06:13,200
its own issues to deal with

1763
01:06:13,200 --> 01:06:16,319
so this is exactly the point um like

1764
01:06:16,319 --> 01:06:17,680
i know we had like a whole lot of

1765
01:06:17,680 --> 01:06:19,760
discussions but like my memory wasn't

1766
01:06:19,760 --> 01:06:21,119
good enough to figure out what we

1767
01:06:21,119 --> 01:06:22,160
discussed

1768
01:06:22,160 --> 01:06:24,319
and so i tried to to read the draft and

1769
01:06:24,319 --> 01:06:25,920
figure out what the restriction was and

1770
01:06:25,920 --> 01:06:27,680
i think the main restriction was exactly

1771
01:06:27,680 --> 01:06:29,520
these net use cases and the risk of

1772
01:06:29,520 --> 01:06:30,880
failure and i don't think that's a

1773
01:06:30,880 --> 01:06:33,200
reason to keep it here in multiples so

1774
01:06:33,200 --> 01:06:34,880
if there have been more reasons and

1775
01:06:34,880 --> 01:06:36,400
somebody remembers better what the

1776
01:06:36,400 --> 01:06:38,559
discussion was or maybe have to dig

1777
01:06:38,559 --> 01:06:41,359
through github or whatever um then then

1778
01:06:41,359 --> 01:06:42,799
we should pick them out and we should

1779
01:06:42,799 --> 01:06:45,039
discuss them but i didn't find any other

1780
01:06:45,039 --> 01:06:46,240
reasons and if we don't have a good

1781
01:06:46,240 --> 01:06:48,319
reason then like i don't want to keep

1782
01:06:48,319 --> 01:06:49,599
this restriction

1783
01:06:49,599 --> 01:06:51,440
but like if you if you if you remember

1784
01:06:51,440 --> 01:06:53,200
better than i do then just send an email

1785
01:06:53,200 --> 01:06:54,400
to the list or to me that would be

1786
01:06:54,400 --> 01:06:56,079
helpful

1787
01:06:56,079 --> 01:06:57,200
spencer

1788
01:06:57,200 --> 01:06:59,680
uh this is spencer dawkins um

1789
01:06:59,680 --> 01:07:02,559
if i was understanding what eric was

1790
01:07:02,559 --> 01:07:05,440
suggesting and i'm asking both eric and

1791
01:07:05,440 --> 01:07:06,480
maria

1792
01:07:06,480 --> 01:07:08,799
would would it be possible for this

1793
01:07:08,799 --> 01:07:12,559
extension draft to be silent about this

1794
01:07:12,559 --> 01:07:15,680
and we could have the conversation about

1795
01:07:15,680 --> 01:07:18,160
what what could happen in the base quick

1796
01:07:18,160 --> 01:07:19,520
protocol

1797
01:07:19,520 --> 01:07:20,799
is that is that

1798
01:07:20,799 --> 01:07:25,240
kind of what eric was suggesting

1799
01:07:29,119 --> 01:07:30,880
i'm i'm sorry i'm not sure what you're

1800
01:07:30,880 --> 01:07:32,960
suggesting yeah well

1801
01:07:32,960 --> 01:07:34,799
i i'm also kind of asking your

1802
01:07:34,799 --> 01:07:37,200
understanding of what you know given

1803
01:07:37,200 --> 01:07:41,640
that input what would you do next

1804
01:07:42,240 --> 01:07:44,000
yeah i think we we just need a little

1805
01:07:44,000 --> 01:07:45,680
bit more discussion and dig into like

1806
01:07:45,680 --> 01:07:49,520
this old discussion okay okay uh um yeah

1807
01:07:49,520 --> 01:07:52,240
okay and i hope eric can help with that

1808
01:07:52,240 --> 01:07:54,160
yeah i i

1809
01:07:54,160 --> 01:07:56,640
i thank thank you for thank you for

1810
01:07:56,640 --> 01:08:00,000
presenting this particular issue

1811
01:08:01,680 --> 01:08:05,039
okay i think eric's a hangover from when

1812
01:08:05,039 --> 01:08:06,559
he joined before

1813
01:08:06,559 --> 01:08:11,839
uh let's go to janna now please yes

1814
01:08:12,559 --> 01:08:14,079
i'm waiting

1815
01:08:14,079 --> 01:08:15,839
okay i think i'm in

1816
01:08:15,839 --> 01:08:17,279
um

1817
01:08:17,279 --> 01:08:19,439
so the one um

1818
01:08:19,439 --> 01:08:21,120
one thing i might note is that simply

1819
01:08:21,120 --> 01:08:23,439
removing the restriction doesn't really

1820
01:08:23,439 --> 01:08:25,520
tell us much about what the problems

1821
01:08:25,520 --> 01:08:27,679
might be it's about what you want to do

1822
01:08:27,679 --> 01:08:29,120
after that

1823
01:08:29,120 --> 01:08:31,040
so

1824
01:08:31,040 --> 01:08:32,479
i would say that if there is a design

1825
01:08:32,479 --> 01:08:34,799
about what is going to happen

1826
01:08:34,799 --> 01:08:36,880
it's going to be a lot more concrete in

1827
01:08:36,880 --> 01:08:39,040
terms of an analysis of the problems

1828
01:08:39,040 --> 01:08:41,040
that might happen with

1829
01:08:41,040 --> 01:08:45,040
a new mechanism that the server uses

1830
01:08:45,040 --> 01:08:46,319
i'd say sure go ahead remove the

1831
01:08:46,319 --> 01:08:48,960
restriction but let's see what exactly

1832
01:08:48,960 --> 01:08:50,799
i mean whatever it is that we end up

1833
01:08:50,799 --> 01:08:52,319
doing from the server in terms of

1834
01:08:52,319 --> 01:08:54,000
initiating new paths and so on and so

1835
01:08:54,000 --> 01:08:56,479
forth will make it more interesting

1836
01:08:56,479 --> 01:08:57,439
uh

1837
01:08:57,439 --> 01:09:00,560
for us to understand the the

1838
01:09:00,560 --> 01:09:02,319
interactions with various things and as

1839
01:09:02,319 --> 01:09:03,920
eric was pointing out

1840
01:09:03,920 --> 01:09:06,399
there were a lot of little

1841
01:09:06,399 --> 01:09:08,719
corners which we walked down

1842
01:09:08,719 --> 01:09:10,399
uh when we were doing the client

1843
01:09:10,399 --> 01:09:13,679
initiated uh migrations

1844
01:09:13,679 --> 01:09:15,040
and be interesting to go down those

1845
01:09:15,040 --> 01:09:16,479
paths again once you have a mechanism

1846
01:09:16,479 --> 01:09:19,279
here to speak of

1847
01:09:19,279 --> 01:09:21,439
yeah i agree um but it sounds like

1848
01:09:21,439 --> 01:09:22,640
people are interested to actually have

1849
01:09:22,640 --> 01:09:25,679
that discussion so that's good

1850
01:09:26,399 --> 01:09:29,279
thanks christian

1851
01:09:29,279 --> 01:09:30,880
yeah uh

1852
01:09:30,880 --> 01:09:33,759
we we have had that discussion

1853
01:09:33,759 --> 01:09:36,880
a number of times in the author's

1854
01:09:36,880 --> 01:09:38,640
list and on github

1855
01:09:38,640 --> 01:09:40,880
and i i really disagree with miria on

1856
01:09:40,880 --> 01:09:42,640
that one

1857
01:09:42,640 --> 01:09:45,520
where i come from is that the multibus

1858
01:09:45,520 --> 01:09:46,799
option

1859
01:09:46,799 --> 01:09:49,679
has been designed to be as compatible as

1860
01:09:49,679 --> 01:09:53,520
possible with the existing quick v1

1861
01:09:53,520 --> 01:09:56,400
and if we do a departure from the quick

1862
01:09:56,400 --> 01:09:58,080
v1 restriction

1863
01:09:58,080 --> 01:10:01,199
that we only start from the client

1864
01:10:01,199 --> 01:10:03,520
that departure as a cascade of

1865
01:10:03,520 --> 01:10:05,360
implication an example would be for

1866
01:10:05,360 --> 01:10:07,760
example who validates the pass

1867
01:10:07,760 --> 01:10:09,760
right now we have to pass validation by

1868
01:10:09,760 --> 01:10:12,400
saying the server can only use it if the

1869
01:10:12,400 --> 01:10:13,440
client

1870
01:10:13,440 --> 01:10:15,199
sends non

1871
01:10:15,199 --> 01:10:18,320
password editing packet on it

1872
01:10:18,320 --> 01:10:20,480
on the pass there are

1873
01:10:20,480 --> 01:10:22,159
restrictions like that

1874
01:10:22,159 --> 01:10:24,400
and i really really believe that it's

1875
01:10:24,400 --> 01:10:26,719
better to leave this server initiated

1876
01:10:26,719 --> 01:10:27,760
thing

1877
01:10:27,760 --> 01:10:30,800
to a separate draft that fully discusses

1878
01:10:30,800 --> 01:10:32,880
it

1879
01:10:34,880 --> 01:10:36,560
yeah i mean um as you said we're

1880
01:10:36,560 --> 01:10:39,199
disagreeing a little bit here um because

1881
01:10:39,199 --> 01:10:41,040
we do change things in the in the base

1882
01:10:41,040 --> 01:10:42,800
back right and we we ask we to keep it

1883
01:10:42,800 --> 01:10:44,960
minimal but if there's no good reason to

1884
01:10:44,960 --> 01:10:46,640
keep it then

1885
01:10:46,640 --> 01:10:48,880
we should remove it and

1886
01:10:48,880 --> 01:10:50,960
there is at least one good reason there

1887
01:10:50,960 --> 01:10:52,880
is at least one good reason which is the

1888
01:10:52,880 --> 01:10:55,280
validation of the past by the client

1889
01:10:55,280 --> 01:10:56,800
sending traffic

1890
01:10:56,800 --> 01:10:58,560
yeah but i think this this is just

1891
01:10:58,560 --> 01:11:00,480
symmetric in that case so i don't think

1892
01:11:00,480 --> 01:11:03,360
it no it is not it is not it is not

1893
01:11:03,360 --> 01:11:05,440
symmetric

1894
01:11:05,440 --> 01:11:07,760
it is not symmetric the server must not

1895
01:11:07,760 --> 01:11:11,040
send data before the client has sent

1896
01:11:11,040 --> 01:11:12,400
non-validating

1897
01:11:12,400 --> 01:11:15,679
packets on the pass

1898
01:11:17,600 --> 01:11:18,320
so

1899
01:11:18,320 --> 01:11:20,560
you're saying um

1900
01:11:20,560 --> 01:11:22,880
even if the server opens the connection

1901
01:11:22,880 --> 01:11:24,719
we still need the restriction that first

1902
01:11:24,719 --> 01:11:28,000
the client needs to send data

1903
01:11:28,000 --> 01:11:30,239
yeah and and basically if you don't do

1904
01:11:30,239 --> 01:11:32,400
that cascade of thing it doesn't work i

1905
01:11:32,400 --> 01:11:35,120
really wish we dropped that issue for

1906
01:11:35,120 --> 01:11:37,679
now and we punt it to an explicit

1907
01:11:37,679 --> 01:11:40,800
extension that that's what mike said

1908
01:11:40,800 --> 01:11:43,360
which is like bishop which is basically

1909
01:11:43,360 --> 01:11:44,080
to

1910
01:11:44,080 --> 01:11:46,000
exchange the address et cetera et cetera

1911
01:11:46,000 --> 01:11:48,000
do the full shebang don't don't do this

1912
01:11:48,000 --> 01:11:50,880
one tiny thing on the side

1913
01:11:50,880 --> 01:11:55,080
and don't hide it in the main draft

1914
01:11:55,600 --> 01:11:58,960
okay i mean it's noted um as i said i

1915
01:11:58,960 --> 01:12:00,239
think we disagree because i think this

1916
01:12:00,239 --> 01:12:02,400
is a smaller change than you believe and

1917
01:12:02,400 --> 01:12:04,159
maybe you should figure out how big the

1918
01:12:04,159 --> 01:12:05,679
change actually is to figure out a way

1919
01:12:05,679 --> 01:12:06,800
forward

1920
01:12:06,800 --> 01:12:08,880
no it's not it's the principle i mean in

1921
01:12:08,880 --> 01:12:10,880
principle we should not do small changes

1922
01:12:10,880 --> 01:12:13,280
like that

1923
01:12:14,719 --> 01:12:17,600
okay let's uh let's get harold in the

1924
01:12:17,600 --> 01:12:20,560
room to speak thanks chris harold john

1925
01:12:20,560 --> 01:12:24,800
speaking in from the webrtc experience

1926
01:12:24,800 --> 01:12:26,239
where we have

1927
01:12:26,239 --> 01:12:28,239
peer-to-peer we have client server we

1928
01:12:28,239 --> 01:12:30,480
have

1929
01:12:30,560 --> 01:12:32,239
different reasons for opening new

1930
01:12:32,239 --> 01:12:35,120
channels we have failover

1931
01:12:35,120 --> 01:12:38,560
anything that restricts

1932
01:12:38,560 --> 01:12:40,400
failover

1933
01:12:40,400 --> 01:12:43,520
is a pain in the posterior

1934
01:12:43,520 --> 01:12:45,600
but this actually

1935
01:12:45,600 --> 01:12:47,120
is

1936
01:12:47,120 --> 01:12:50,599
server initiated

1937
01:12:52,400 --> 01:12:56,800
is a useful tool in more places than

1938
01:12:56,800 --> 01:12:58,960
multipath

1939
01:12:58,960 --> 01:13:03,120
so i think the right way forward is to

1940
01:13:03,120 --> 01:13:04,560
initiate

1941
01:13:04,560 --> 01:13:07,679
action on server initiated channels

1942
01:13:07,679 --> 01:13:10,960
independently and make sure that you

1943
01:13:10,960 --> 01:13:13,520
don't block multipath for using from

1944
01:13:13,520 --> 01:13:15,840
using it when it's available

1945
01:13:15,840 --> 01:13:16,640
so

1946
01:13:16,640 --> 01:13:19,600
two different things

1947
01:13:19,600 --> 01:13:22,159
because it's more useful than just

1948
01:13:22,159 --> 01:13:24,799
multipath

1949
01:13:27,040 --> 01:13:28,239
yeah i think the conclusion is still

1950
01:13:28,239 --> 01:13:30,000
believe it open the issue but we might

1951
01:13:30,000 --> 01:13:31,600
don't prioritize it

1952
01:13:31,600 --> 01:13:33,040
okay um

1953
01:13:33,040 --> 01:13:35,920
quick time check we have about 10 15

1954
01:13:35,920 --> 01:13:37,840
minutes left okay so however you'd like

1955
01:13:37,840 --> 01:13:40,400
to use that

1956
01:13:40,400 --> 01:13:43,360
what's the next issue

1957
01:13:45,199 --> 01:13:47,920
okay um so i just i just note this i

1958
01:13:47,920 --> 01:13:48,960
don't think we haven't have to

1959
01:13:48,960 --> 01:13:50,960
discussion right now um this is an open

1960
01:13:50,960 --> 01:13:52,320
issue we have

1961
01:13:52,320 --> 01:13:55,040
um where there was a proposal to also

1962
01:13:55,040 --> 01:13:57,199
have some kind of effectively zero rtt

1963
01:13:57,199 --> 01:13:58,640
behavior for new passes because

1964
01:13:58,640 --> 01:14:00,560
currently when you open a new path you

1965
01:14:00,560 --> 01:14:02,400
have pass validation so it takes a whole

1966
01:14:02,400 --> 01:14:04,719
round trip time until you can send data

1967
01:14:04,719 --> 01:14:06,080
on the new path

1968
01:14:06,080 --> 01:14:07,679
and the question was do we want to make

1969
01:14:07,679 --> 01:14:09,360
more than that

1970
01:14:09,360 --> 01:14:11,520
but i would just like point you at the

1971
01:14:11,520 --> 01:14:13,440
github issue at this point there's no pr

1972
01:14:13,440 --> 01:14:16,560
yet and we need further discussion there

1973
01:14:16,560 --> 01:14:19,520
we have three people in the queue um

1974
01:14:19,520 --> 01:14:22,480
please please keep it short

1975
01:14:22,480 --> 01:14:24,879
janme

1976
01:14:26,840 --> 01:14:29,360
please everyone this is yummy from

1977
01:14:29,360 --> 01:14:32,159
alibaba for this issue we can include

1978
01:14:32,159 --> 01:14:35,600
some token mechanisms to help endpoints

1979
01:14:35,600 --> 01:14:38,400
validate the appeals address quickly and

1980
01:14:38,400 --> 01:14:40,480
surely this will

1981
01:14:40,480 --> 01:14:43,280
bring complexity for creating new passes

1982
01:14:43,280 --> 01:14:45,199
and we need to consider

1983
01:14:45,199 --> 01:14:48,640
the security problems very carefully

1984
01:14:48,640 --> 01:14:50,960
so at first we want to make sure that

1985
01:14:50,960 --> 01:14:53,360
whether people need this or not

1986
01:14:53,360 --> 01:14:55,440
um because in quick we want the points

1987
01:14:55,440 --> 01:14:58,560
must to pass validation first before

1988
01:14:58,560 --> 01:15:00,400
sending non-profit package during

1989
01:15:00,400 --> 01:15:03,920
migration so if people want this we want

1990
01:15:03,920 --> 01:15:07,600
to to hear your voice here

1991
01:15:08,320 --> 01:15:11,600
thanks brian uh hi brian trammell google

1992
01:15:11,600 --> 01:15:13,840
i i would just point out that a answer

1993
01:15:13,840 --> 01:15:15,920
to this question what i think caused the

1994
01:15:15,920 --> 01:15:17,760
previous discussion to collapse into one

1995
01:15:17,760 --> 01:15:19,199
of its two states

1996
01:15:19,199 --> 01:15:20,960
so maybe spending a little bit more time

1997
01:15:20,960 --> 01:15:23,440
on this not right now but revisiting the

1998
01:15:23,440 --> 01:15:25,679
multipath server restriction removal

1999
01:15:25,679 --> 01:15:27,120
after there's an answer here because i

2000
01:15:27,120 --> 01:15:29,199
think that might actually make the

2001
01:15:29,199 --> 01:15:31,360
the path validation

2002
01:15:31,360 --> 01:15:33,920
restriction removal on server initiated

2003
01:15:33,920 --> 01:15:36,880
paths easier

2004
01:15:36,880 --> 01:15:40,239
thank you and eric

2005
01:15:44,480 --> 01:15:46,080
there we go

2006
01:15:46,080 --> 01:15:48,159
i would actually question

2007
01:15:48,159 --> 01:15:50,640
why we would need this unless there's a

2008
01:15:50,640 --> 01:15:52,560
concern around sending

2009
01:15:52,560 --> 01:15:55,199
data on multiple paths within the first

2010
01:15:55,199 --> 01:15:57,120
round trip of the connection because i

2011
01:15:57,120 --> 01:15:58,640
think the idea was that

2012
01:15:58,640 --> 01:16:00,080
other than in that case you should

2013
01:16:00,080 --> 01:16:02,000
always be able to have a valid path by

2014
01:16:02,000 --> 01:16:03,600
the time you need to

2015
01:16:03,600 --> 01:16:05,440
actually send anything on it

2016
01:16:05,440 --> 01:16:07,040
and so it would be really good to have

2017
01:16:07,040 --> 01:16:08,400
kind of a clear picture of what the

2018
01:16:08,400 --> 01:16:10,719
exact use case is where

2019
01:16:10,719 --> 01:16:13,120
opening this this box is is necessary at

2020
01:16:13,120 --> 01:16:14,480
all

2021
01:16:14,480 --> 01:16:17,120
yep um yeah i think this is maybe an

2022
01:16:17,120 --> 01:16:19,280
action item for yanmai if you can add

2023
01:16:19,280 --> 01:16:20,640
more information to the github issue

2024
01:16:20,640 --> 01:16:23,440
that would be helpful

2025
01:16:24,400 --> 01:16:26,799
next

2026
01:16:30,480 --> 01:16:32,320
actually can we take the next one first

2027
01:16:32,320 --> 01:16:34,400
that's okay

2028
01:16:34,400 --> 01:16:35,920
um

2029
01:16:35,920 --> 01:16:37,760
so that is a discussion that came up

2030
01:16:37,760 --> 01:16:39,679
when we tried to clarify how the idle

2031
01:16:39,679 --> 01:16:41,760
timeout worked um and currently what

2032
01:16:41,760 --> 01:16:43,840
we're saying is that like you have this

2033
01:16:43,840 --> 01:16:45,760
idle max idle timeout parameter and you

2034
01:16:45,760 --> 01:16:47,679
just use it for all paths

2035
01:16:47,679 --> 01:16:49,679
but given the passes might be very

2036
01:16:49,679 --> 01:16:50,960
different or you might use them in a

2037
01:16:50,960 --> 01:16:53,120
very different way it could be useful to

2038
01:16:53,120 --> 01:16:54,560
actually have different timeouts on

2039
01:16:54,560 --> 01:16:56,480
different passes and you might want to

2040
01:16:56,480 --> 01:16:58,800
actually um you can also just like do

2041
01:16:58,800 --> 01:17:00,719
that locally and it will not totally

2042
01:17:00,719 --> 01:17:02,719
break but it might be useful to actually

2043
01:17:02,719 --> 01:17:04,159
sing all this information to the other

2044
01:17:04,159 --> 01:17:05,040
end

2045
01:17:05,040 --> 01:17:07,840
so um discussion so far was basically um

2046
01:17:07,840 --> 01:17:10,000
we had some people saying yes this is

2047
01:17:10,000 --> 01:17:11,600
helpful because it's more explicit and

2048
01:17:11,600 --> 01:17:13,040
it makes it easier

2049
01:17:13,040 --> 01:17:13,840
to

2050
01:17:13,840 --> 01:17:15,440
close your passes

2051
01:17:15,440 --> 01:17:16,719
at a

2052
01:17:16,719 --> 01:17:18,640
at a valid point of time and then there

2053
01:17:18,640 --> 01:17:20,480
was also an argument about no this

2054
01:17:20,480 --> 01:17:22,320
doesn't give you much and it's just too

2055
01:17:22,320 --> 01:17:25,040
complicated so more input would be

2056
01:17:25,040 --> 01:17:26,080
nice

2057
01:17:26,080 --> 01:17:28,480
at the github issue or a quick comment

2058
01:17:28,480 --> 01:17:30,719
if you have anything here

2059
01:17:30,719 --> 01:17:32,400
i think more discussion is needed at the

2060
01:17:32,400 --> 01:17:34,800
github issue so

2061
01:17:34,800 --> 01:17:36,480
no queue let's go back to the previous

2062
01:17:36,480 --> 01:17:38,719
issue

2063
01:17:38,719 --> 01:17:41,199
okay okay and that's an issue which is

2064
01:17:41,199 --> 01:17:42,880
actually related to

2065
01:17:42,880 --> 01:17:45,679
the packet number um space question

2066
01:17:45,679 --> 01:17:48,000
because that's only an issue that exists

2067
01:17:48,000 --> 01:17:50,080
if we use single packet number spaces on

2068
01:17:50,080 --> 01:17:51,760
our paths so if we decide to use

2069
01:17:51,760 --> 01:17:54,000
multiple packet numbers

2070
01:17:54,000 --> 01:17:56,840
spaces this issue just goes away

2071
01:17:56,840 --> 01:17:59,840
um and we also we have a pr for this so

2072
01:17:59,840 --> 01:18:01,199
maybe this is straightforward but some

2073
01:18:01,199 --> 01:18:03,440
feedback would be useful so the problem

2074
01:18:03,440 --> 01:18:05,040
is if you have a single packet number

2075
01:18:05,040 --> 01:18:07,360
space and you send an acknowledgement

2076
01:18:07,360 --> 01:18:09,120
and you provide and you acknowledge

2077
01:18:09,120 --> 01:18:11,520
packets in the same frame that have been

2078
01:18:11,520 --> 01:18:13,440
sent or received over

2079
01:18:13,440 --> 01:18:15,840
different passes and one of those

2080
01:18:15,840 --> 01:18:18,400
packets carried an ecn marking you

2081
01:18:18,400 --> 01:18:20,159
cannot as the receiver of the act you

2082
01:18:20,159 --> 01:18:21,920
cannot distinguish anymore which pass

2083
01:18:21,920 --> 01:18:24,400
the ecn marking was on because the ecn

2084
01:18:24,400 --> 01:18:27,360
feedback in quick is just like a counter

2085
01:18:27,360 --> 01:18:28,800
so the counter increased but you don't

2086
01:18:28,800 --> 01:18:30,480
know which path

2087
01:18:30,480 --> 01:18:32,640
so we need to address this issue it's an

2088
01:18:32,640 --> 01:18:35,760
open problem um and there and like what

2089
01:18:35,760 --> 01:18:37,600
the current text proposes is like three

2090
01:18:37,600 --> 01:18:40,080
things it's a recommendation for the

2091
01:18:40,080 --> 01:18:42,080
sender of the acknowledgement to

2092
01:18:42,080 --> 01:18:44,719
actually separate if you if the ecn

2093
01:18:44,719 --> 01:18:47,280
marking increases if ecn is used and you

2094
01:18:47,280 --> 01:18:50,560
see a marking then try to separate

2095
01:18:50,560 --> 01:18:53,199
your ex you can you can always always

2096
01:18:53,199 --> 01:18:55,760
just acknowledge packets of one pass in

2097
01:18:55,760 --> 01:18:57,920
one egg that's a loud and quick it might

2098
01:18:57,920 --> 01:19:00,640
increase your exercise quite a bit but

2099
01:19:00,640 --> 01:19:02,400
it gives the receiver of the egg the

2100
01:19:02,400 --> 01:19:03,840
information it needs to figure out where

2101
01:19:03,840 --> 01:19:05,280
the congestion was

2102
01:19:05,280 --> 01:19:07,440
that's just a recommendation

2103
01:19:07,440 --> 01:19:09,280
if the sender of the egg doesn't follow

2104
01:19:09,280 --> 01:19:10,719
this recommendation

2105
01:19:10,719 --> 01:19:12,320
and you when you receive such an egg

2106
01:19:12,320 --> 01:19:14,560
where it's ambitious and where it's not

2107
01:19:14,560 --> 01:19:17,360
clear where the congestion happened

2108
01:19:17,360 --> 01:19:20,000
you have to assume the most conservative

2109
01:19:20,000 --> 01:19:22,640
case which is like the congestion

2110
01:19:22,640 --> 01:19:24,400
might happen any path and you should

2111
01:19:24,400 --> 01:19:26,400
react to it on all paths

2112
01:19:26,400 --> 01:19:29,199
that's what the pr says right now the

2113
01:19:29,199 --> 01:19:31,440
other option is always to just disable

2114
01:19:31,440 --> 01:19:33,040
ecn support

2115
01:19:33,040 --> 01:19:34,719
and so if you received such an

2116
01:19:34,719 --> 01:19:36,320
acknowledgement you can decide at this

2117
01:19:36,320 --> 01:19:38,000
point to disable or of course you can

2118
01:19:38,000 --> 01:19:40,000
just like whenever you use single packet

2119
01:19:40,000 --> 01:19:42,080
number spaces you just don't use ecn at

2120
01:19:42,080 --> 01:19:43,679
all that's like the easiest solution but

2121
01:19:43,679 --> 01:19:45,280
would make me sad

2122
01:19:45,280 --> 01:19:46,400
actually

2123
01:19:46,400 --> 01:19:48,640
um so that's the pr

2124
01:19:48,640 --> 01:19:49,520
um

2125
01:19:49,520 --> 01:19:50,960
and

2126
01:19:50,960 --> 01:19:52,159
i don't know there was a bit of

2127
01:19:52,159 --> 01:19:54,560
discussion with christian i think but i

2128
01:19:54,560 --> 01:19:58,320
believe this is mostly ready to merge

2129
01:19:58,560 --> 01:20:02,400
if people agree to these recommendations

2130
01:20:02,400 --> 01:20:05,520
gary just joined the queue

2131
01:20:05,520 --> 01:20:08,159
so gary doesn't agree or disagree and

2132
01:20:08,159 --> 01:20:09,360
hasn't read

2133
01:20:09,360 --> 01:20:11,040
so the implications i will read and i'll

2134
01:20:11,040 --> 01:20:13,679
look at it i don't like the last option

2135
01:20:13,679 --> 01:20:16,159
that don't use ecn or break ecm by just

2136
01:20:16,159 --> 01:20:17,280
making everything a lowest common

2137
01:20:17,280 --> 01:20:19,040
denominator seems like the wrong way to

2138
01:20:19,040 --> 01:20:21,199
go at this stage

2139
01:20:21,199 --> 01:20:24,159
so um i agree okay happily read it and

2140
01:20:24,159 --> 01:20:26,960
happily give comment

2141
01:20:27,600 --> 01:20:29,920
okay

2142
01:20:30,320 --> 01:20:33,600
okay um yeah then let's move to the big

2143
01:20:33,600 --> 01:20:35,520
issue actually

2144
01:20:35,520 --> 01:20:36,719
one more yeah

2145
01:20:36,719 --> 01:20:39,120
so um the the big thing that we need to

2146
01:20:39,120 --> 01:20:40,639
resolve in this group is really do we

2147
01:20:40,639 --> 01:20:42,800
want to use single packet number spaces

2148
01:20:42,800 --> 01:20:45,280
on all paths or use separate packet

2149
01:20:45,280 --> 01:20:47,520
number spaces on each path

2150
01:20:47,520 --> 01:20:49,600
um and like we had this discussion

2151
01:20:49,600 --> 01:20:51,360
already before we adopted the draft and

2152
01:20:51,360 --> 01:20:53,040
we kind of in a stage where at the

2153
01:20:53,040 --> 01:20:55,040
current draft actually describes both

2154
01:20:55,040 --> 01:20:56,639
options in the hope that people would

2155
01:20:56,639 --> 01:20:58,880
implement both or one of the options we

2156
01:20:58,880 --> 01:21:01,120
get some more experience with it

2157
01:21:01,120 --> 01:21:03,280
um so this is a little bit the analysis

2158
01:21:03,280 --> 01:21:05,760
about what's the pro and cons

2159
01:21:05,760 --> 01:21:07,840
and i quickly will run through it but

2160
01:21:07,840 --> 01:21:09,760
then also talk about the pr that we have

2161
01:21:09,760 --> 01:21:11,120
there right now

2162
01:21:11,120 --> 01:21:12,639
and like christian or anybody of the

2163
01:21:12,639 --> 01:21:14,159
other authors feel free to jump in the

2164
01:21:14,159 --> 01:21:15,840
queue anytime and just

2165
01:21:15,840 --> 01:21:17,520
um add stuff

2166
01:21:17,520 --> 01:21:20,639
so from an efficiency point of view

2167
01:21:20,639 --> 01:21:22,639
the multipack and multiple packet number

2168
01:21:22,639 --> 01:21:25,040
space solution is more efficient because

2169
01:21:25,040 --> 01:21:27,440
you can just reuse the existing

2170
01:21:27,440 --> 01:21:29,760
loss recovery logic and everything is

2171
01:21:29,760 --> 01:21:32,639
like clear and easy um but effectively

2172
01:21:32,639 --> 01:21:33,920
what the implementation experience

2173
01:21:33,920 --> 01:21:35,760
showed so far is that the single number

2174
01:21:35,760 --> 01:21:38,000
packet space if you like do a little bit

2175
01:21:38,000 --> 01:21:39,760
of an additional effort is like from the

2176
01:21:39,760 --> 01:21:42,080
performance point of view nearly similar

2177
01:21:42,080 --> 01:21:43,840
efficient so that's like not the big

2178
01:21:43,840 --> 01:21:45,760
point to distinguish things here

2179
01:21:45,760 --> 01:21:47,360
code complexity is something we

2180
01:21:47,360 --> 01:21:48,960
discussed a lot

2181
01:21:48,960 --> 01:21:50,639
because initially we thought like having

2182
01:21:50,639 --> 01:21:52,480
a single number package space means

2183
01:21:52,480 --> 01:21:55,040
actually less code changes

2184
01:21:55,040 --> 01:21:56,480
while having multiple packet number

2185
01:21:56,480 --> 01:21:58,239
spaces really adds like a complete new

2186
01:21:58,239 --> 01:22:00,239
code path and if you don't use that

2187
01:22:00,239 --> 01:22:01,760
feature it might not be used very often

2188
01:22:01,760 --> 01:22:03,760
so that was a concern

2189
01:22:03,760 --> 01:22:06,239
but to actually have a good performance

2190
01:22:06,239 --> 01:22:07,760
with a single packet number space

2191
01:22:07,760 --> 01:22:09,760
solution you have to be really smart

2192
01:22:09,760 --> 01:22:12,639
about how to to send your packets in

2193
01:22:12,639 --> 01:22:14,800
order to keep the exercise small in

2194
01:22:14,800 --> 01:22:17,360
order um to have efficient recovery

2195
01:22:17,360 --> 01:22:19,440
mechanism and so on and having the

2196
01:22:19,440 --> 01:22:21,760
smartness in there is additional code

2197
01:22:21,760 --> 01:22:23,520
and it's additional logic

2198
01:22:23,520 --> 01:22:25,199
and it's probably also additional logic

2199
01:22:25,199 --> 01:22:26,719
that we don't just want to leave to the

2200
01:22:26,719 --> 01:22:28,639
implementation but specify in the draft

2201
01:22:28,639 --> 01:22:30,320
to some extent because otherwise people

2202
01:22:30,320 --> 01:22:31,679
will implement this and just get bad

2203
01:22:31,679 --> 01:22:33,520
performance and will not like it so we

2204
01:22:33,520 --> 01:22:35,360
have to give a advice about it and its

2205
01:22:35,360 --> 01:22:37,199
additional code

2206
01:22:37,199 --> 01:22:39,679
and so you know the big difference here

2207
01:22:39,679 --> 01:22:41,120
is like the third point it's the egg

2208
01:22:41,120 --> 01:22:43,679
handling um where like multi-part the

2209
01:22:43,679 --> 01:22:45,920
multi-packet number space solution we

2210
01:22:45,920 --> 01:22:47,840
add a new acknowledgement for and you

2211
01:22:47,840 --> 01:22:50,400
can really distinguish which packet was

2212
01:22:50,400 --> 01:22:51,280
sent and

2213
01:22:51,280 --> 01:22:52,560
in which path

2214
01:22:52,560 --> 01:22:54,560
and everything and ecn information is

2215
01:22:54,560 --> 01:22:56,000
clear we don't have the problem that i

2216
01:22:56,000 --> 01:22:58,320
was just like talking about before

2217
01:22:58,320 --> 01:23:00,480
and in the single packet number space

2218
01:23:00,480 --> 01:23:02,320
solution you really have to add some

2219
01:23:02,320 --> 01:23:03,920
logic to make sure

2220
01:23:03,920 --> 01:23:06,080
um that like your x don't increase

2221
01:23:06,080 --> 01:23:07,920
because if you have two passes with very

2222
01:23:07,920 --> 01:23:10,480
different delay you see x you see holes

2223
01:23:10,480 --> 01:23:11,920
in your egg

2224
01:23:11,920 --> 01:23:15,040
uh in your x space and that can increase

2225
01:23:15,040 --> 01:23:16,880
the x a lot so you have to be smart

2226
01:23:16,880 --> 01:23:18,400
about how you send your packets how to

2227
01:23:18,400 --> 01:23:20,320
distribute the packet numbers and how

2228
01:23:20,320 --> 01:23:22,480
you create your ex

2229
01:23:22,480 --> 01:23:27,280
um and yeah so you know like

2230
01:23:27,280 --> 01:23:29,440
as i said i think the code complexity is

2231
01:23:29,440 --> 01:23:31,280
like not the big point here anymore

2232
01:23:31,280 --> 01:23:33,280
because they are kind of trade-offs but

2233
01:23:33,280 --> 01:23:36,480
what's still a big difference is that

2234
01:23:36,480 --> 01:23:37,520
use of

2235
01:23:37,520 --> 01:23:38,480
no

2236
01:23:38,480 --> 01:23:41,199
connection id on both ends is not

2237
01:23:41,199 --> 01:23:43,040
supported with multiple packet number

2238
01:23:43,040 --> 01:23:45,040
spaces effectively the multiple packet

2239
01:23:45,040 --> 01:23:46,560
number spaces need some kind of

2240
01:23:46,560 --> 01:23:48,719
identifier in the packet to figure out

2241
01:23:48,719 --> 01:23:50,320
where your packet belongs in order to

2242
01:23:50,320 --> 01:23:52,159
decode it so you need a connect

2243
01:23:52,159 --> 01:23:54,320
connection id and that's really the big

2244
01:23:54,320 --> 01:23:55,760
difference

2245
01:23:55,760 --> 01:23:58,320
next slide

2246
01:23:58,960 --> 01:24:00,880
yeah so we did discussed about a lot

2247
01:24:00,880 --> 01:24:03,840
about like how you can enable

2248
01:24:03,840 --> 01:24:06,320
this use cases also for multiple packet

2249
01:24:06,320 --> 01:24:08,800
number spaces and there are some ways to

2250
01:24:08,800 --> 01:24:10,400
actually handle this if you only have

2251
01:24:10,400 --> 01:24:12,800
like one connection id in one direction

2252
01:24:12,800 --> 01:24:14,880
um it might not like it might be a

2253
01:24:14,880 --> 01:24:17,600
little bit fragile or like um not easy

2254
01:24:17,600 --> 01:24:18,960
and some fiddling that there are

2255
01:24:18,960 --> 01:24:21,600
possibilities but like this table mainly

2256
01:24:21,600 --> 01:24:23,120
just tells you that

2257
01:24:23,120 --> 01:24:24,080
um

2258
01:24:24,080 --> 01:24:26,239
you at least lead like our conclusion is

2259
01:24:26,239 --> 01:24:27,840
you at least need one

2260
01:24:27,840 --> 01:24:29,920
congestion one connection id in one

2261
01:24:29,920 --> 01:24:31,840
direction with multiple packet number

2262
01:24:31,840 --> 01:24:34,320
spaces

2263
01:24:34,960 --> 01:24:37,760
brian in the key

2264
01:24:39,280 --> 01:24:41,679
so thanks a lot for both of these tables

2265
01:24:41,679 --> 01:24:43,520
that makes this issue a lot easier to

2266
01:24:43,520 --> 01:24:44,400
understand

2267
01:24:44,400 --> 01:24:47,360
um i would say on the previous

2268
01:24:47,360 --> 01:24:49,679
um on the previous slide

2269
01:24:49,679 --> 01:24:51,679
uh you'd said that the

2270
01:24:51,679 --> 01:24:54,159
the code complexity is kind of a

2271
01:24:54,159 --> 01:24:55,600
trade-off you have to choose one or the

2272
01:24:55,600 --> 01:24:57,440
other i would point out that in the

2273
01:24:57,440 --> 01:24:58,880
single pn space in order to be

2274
01:24:58,880 --> 01:25:00,880
performant you need an entire set of

2275
01:25:00,880 --> 01:25:02,800
special cases whereas in the multiple pn

2276
01:25:02,800 --> 01:25:05,040
space you just need a new abstraction

2277
01:25:05,040 --> 01:25:06,560
where you might not have had one right

2278
01:25:06,560 --> 01:25:08,239
like so you already have a loss recovery

2279
01:25:08,239 --> 01:25:10,239
algorithm instance maybe you didn't

2280
01:25:10,239 --> 01:25:11,600
split it out in the right way and we're

2281
01:25:11,600 --> 01:25:13,679
forcing you to do that that does seem to

2282
01:25:13,679 --> 01:25:16,880
be like a very green yellow to me so i

2283
01:25:16,880 --> 01:25:18,639
do think that the the

2284
01:25:18,639 --> 01:25:20,320
the code complexity on the single pn

2285
01:25:20,320 --> 01:25:21,199
space if you're trying to do a

2286
01:25:21,199 --> 01:25:24,719
performance seems to me to be

2287
01:25:24,880 --> 01:25:26,239
a negative on that side than the other

2288
01:25:26,239 --> 01:25:27,840
one it's like basically do we want to

2289
01:25:27,840 --> 01:25:29,360
force people to do more more code

2290
01:25:29,360 --> 01:25:31,679
complexity with respect to

2291
01:25:31,679 --> 01:25:33,440
like a completely separate code path as

2292
01:25:33,440 --> 01:25:34,719
opposed to an instance of an existing

2293
01:25:34,719 --> 01:25:38,719
code path versus the zeroing cid problem

2294
01:25:38,719 --> 01:25:40,480
i mean i just use three colors here

2295
01:25:40,480 --> 01:25:42,320
right so but i think like it's what i

2296
01:25:42,320 --> 01:25:43,920
want to say here we call complexity it

2297
01:25:43,920 --> 01:25:45,520
seems like to be like the big argument

2298
01:25:45,520 --> 01:25:48,000
at the beginning yeah but right now

2299
01:25:48,000 --> 01:25:50,000
yeah because it really okay good so i

2300
01:25:50,000 --> 01:25:51,360
think i'm just restating your point

2301
01:25:51,360 --> 01:25:54,000
thanks okay thanks thanks brian uh

2302
01:25:54,000 --> 01:25:56,800
martin thompson

2303
01:26:01,440 --> 01:26:02,719
yes okay

2304
01:26:02,719 --> 01:26:05,120
so um i think perhaps there's a code

2305
01:26:05,120 --> 01:26:07,760
complexity piece that you haven't um

2306
01:26:07,760 --> 01:26:09,920
gotten on the multiple p n spaces side

2307
01:26:09,920 --> 01:26:12,239
here which is the key schedule

2308
01:26:12,239 --> 01:26:13,520
if you're going to be using multiple

2309
01:26:13,520 --> 01:26:15,280
packet number spaces you can do separate

2310
01:26:15,280 --> 01:26:17,199
key derivation for

2311
01:26:17,199 --> 01:26:19,040
the different spaces otherwise you will

2312
01:26:19,040 --> 01:26:20,719
have knots reuse

2313
01:26:20,719 --> 01:26:22,960
so um

2314
01:26:22,960 --> 01:26:24,480
i guess that's probably just another

2315
01:26:24,480 --> 01:26:26,159
version of the saying that same thing

2316
01:26:26,159 --> 01:26:27,440
which is you need multiple

2317
01:26:27,440 --> 01:26:29,600
instantiations but it does

2318
01:26:29,600 --> 01:26:31,440
change the way that you

2319
01:26:31,440 --> 01:26:34,159
um even start using a single path in

2320
01:26:34,159 --> 01:26:38,159
that case which is a little awkward

2321
01:26:40,480 --> 01:26:42,560
so i if i remember correctly it was

2322
01:26:42,560 --> 01:26:45,199
actually a point about so in in if you

2323
01:26:45,199 --> 01:26:47,120
if you decrypt your packet in a multiple

2324
01:26:47,120 --> 01:26:48,960
packet number space you have to use the

2325
01:26:48,960 --> 01:26:49,920
nons

2326
01:26:49,920 --> 01:26:51,360
and the connection id so that will

2327
01:26:51,360 --> 01:26:53,520
actually change your decryption logic

2328
01:26:53,520 --> 01:26:55,520
with which was like one of the

2329
01:26:55,520 --> 01:26:57,679
negative points here

2330
01:26:57,679 --> 01:26:59,600
um

2331
01:26:59,600 --> 01:27:00,320
right

2332
01:27:00,320 --> 01:27:02,400
that's all

2333
01:27:02,400 --> 01:27:05,839
thanks martin christine

2334
01:27:12,880 --> 01:27:14,719
i i have been we have been discussing

2335
01:27:14,719 --> 01:27:18,000
that for quite some time and uh the um

2336
01:27:18,000 --> 01:27:20,080
the point that the master that miriah is

2337
01:27:20,080 --> 01:27:22,000
making there on the

2338
01:27:22,000 --> 01:27:24,639
additional code is really based on the

2339
01:27:24,639 --> 01:27:26,159
implementation experience in my

2340
01:27:26,159 --> 01:27:28,000
implementation

2341
01:27:28,000 --> 01:27:30,239
and and yes you do need the additional

2342
01:27:30,239 --> 01:27:32,159
code if you want to uh

2343
01:27:32,159 --> 01:27:33,280
to do that

2344
01:27:33,280 --> 01:27:35,360
that additional code is actually on a

2345
01:27:35,360 --> 01:27:37,440
common path you can use it in the in the

2346
01:27:37,440 --> 01:27:40,800
unique past but it has the advantage of

2347
01:27:40,800 --> 01:27:43,199
dealing very well with things like the

2348
01:27:43,199 --> 01:27:45,600
size of hack in general

2349
01:27:45,600 --> 01:27:48,239
and with the the issue of

2350
01:27:48,239 --> 01:27:50,559
um

2351
01:27:51,040 --> 01:27:53,199
out of order delivery in general because

2352
01:27:53,199 --> 01:27:55,199
out of order delivery also messes the

2353
01:27:55,199 --> 01:27:56,719
size of hack

2354
01:27:56,719 --> 01:27:57,760
and if you

2355
01:27:57,760 --> 01:27:59,520
you were to see that you would see that

2356
01:27:59,520 --> 01:28:01,120
for example

2357
01:28:01,120 --> 01:28:03,199
if the network was doing equal pass

2358
01:28:03,199 --> 01:28:04,880
multi-path

2359
01:28:04,880 --> 01:28:07,760
that will be it'd be useful as well so

2360
01:28:07,760 --> 01:28:09,679
in my implementation that logic which

2361
01:28:09,679 --> 01:28:11,360
was added

2362
01:28:11,360 --> 01:28:13,280
is in the

2363
01:28:13,280 --> 01:28:15,360
in the main pass it's not some kind of

2364
01:28:15,360 --> 01:28:18,639
things crafted on the side

2365
01:28:19,199 --> 01:28:20,960
the uh

2366
01:28:20,960 --> 01:28:23,520
one one thing i would point out in the

2367
01:28:23,520 --> 01:28:26,080
proposed solution that we have

2368
01:28:26,080 --> 01:28:28,320
is that actually christian um as you're

2369
01:28:28,320 --> 01:28:30,239
here should we just move on to slides up

2370
01:28:30,239 --> 01:28:32,320
and you want to talk about this

2371
01:28:32,320 --> 01:28:36,960
yes yes let's move there yeah

2372
01:28:40,880 --> 01:28:43,360
you want to take it or should i yeah

2373
01:28:43,360 --> 01:28:44,800
yeah i can i can take it i mean

2374
01:28:44,800 --> 01:28:46,800
basically because i i

2375
01:28:46,800 --> 01:28:49,360
i look at the problem and i say okay we

2376
01:28:49,360 --> 01:28:52,960
mostly have an issue with uh no with

2377
01:28:52,960 --> 01:28:56,239
zero length connection id if we if we

2378
01:28:56,239 --> 01:28:58,320
were not using zero lens connection id

2379
01:28:58,320 --> 01:29:00,719
we'll just use multiple number space and

2380
01:29:00,719 --> 01:29:02,719
yes it's a bit awkward i mean we have to

2381
01:29:02,719 --> 01:29:04,880
do some changes on the

2382
01:29:04,880 --> 01:29:07,679
interface to the um

2383
01:29:07,679 --> 01:29:09,520
to the encryption but that's not

2384
01:29:09,520 --> 01:29:11,520
too bad i mean it's it's something you

2385
01:29:11,520 --> 01:29:14,719
do once and it's done it's easy to test

2386
01:29:14,719 --> 01:29:17,840
now if you want to support multiple

2387
01:29:17,840 --> 01:29:19,360
connection ids

2388
01:29:19,360 --> 01:29:23,040
you end up with two pack of complexity

2389
01:29:23,040 --> 01:29:25,920
you have one pack of complexity on the

2390
01:29:25,920 --> 01:29:30,400
receiver side i mean if as a receiver

2391
01:29:30,400 --> 01:29:32,400
i decide to

2392
01:29:32,400 --> 01:29:33,600
say hey

2393
01:29:33,600 --> 01:29:35,840
i am going to receive another connection

2394
01:29:35,840 --> 01:29:37,520
id

2395
01:29:37,520 --> 01:29:40,239
and i am going to also support the

2396
01:29:40,239 --> 01:29:42,400
server when using multipass when using

2397
01:29:42,400 --> 01:29:43,920
multiple paths

2398
01:29:43,920 --> 01:29:46,400
then by doing that

2399
01:29:46,400 --> 01:29:47,679
the the

2400
01:29:47,679 --> 01:29:50,400
you are forcing yourself

2401
01:29:50,400 --> 01:29:51,840
to uh

2402
01:29:51,840 --> 01:29:55,360
implement all the arc logic for

2403
01:29:55,360 --> 01:29:57,760
multiples i mean basically make sure to

2404
01:29:57,760 --> 01:30:00,000
not sending too many hugs making them

2405
01:30:00,000 --> 01:30:02,080
short etc

2406
01:30:02,080 --> 01:30:03,840
so

2407
01:30:03,840 --> 01:30:06,880
what i like about that is that it is

2408
01:30:06,880 --> 01:30:09,600
an optional complexity

2409
01:30:09,600 --> 01:30:13,520
an application can choose to either

2410
01:30:13,520 --> 01:30:14,719
use

2411
01:30:14,719 --> 01:30:16,880
zero lens connection id and do the

2412
01:30:16,880 --> 01:30:18,400
complexity

2413
01:30:18,400 --> 01:30:21,679
or not use zero lens connection id

2414
01:30:21,679 --> 01:30:23,760
and then don't have the complexity so

2415
01:30:23,760 --> 01:30:26,080
that that's something which is on the on

2416
01:30:26,080 --> 01:30:29,679
the x side which is very well optional

2417
01:30:29,679 --> 01:30:32,840
and i think that we have something a bit

2418
01:30:32,840 --> 01:30:36,239
similar on the server side

2419
01:30:36,239 --> 01:30:38,800
here i mean on the

2420
01:30:38,800 --> 01:30:40,560
on the side of

2421
01:30:40,560 --> 01:30:41,360
the

2422
01:30:41,360 --> 01:30:42,639
the node

2423
01:30:42,639 --> 01:30:44,800
that is not using

2424
01:30:44,800 --> 01:30:46,960
zero lens connection id but speaks to a

2425
01:30:46,960 --> 01:30:49,120
node that is

2426
01:30:49,120 --> 01:30:50,960
in that case the complexity is on the

2427
01:30:50,960 --> 01:30:52,480
sun path

2428
01:30:52,480 --> 01:30:55,199
i mean how do you manage multiple links

2429
01:30:55,199 --> 01:30:57,600
how do you manage to do that

2430
01:30:57,600 --> 01:30:58,960
and and

2431
01:30:58,960 --> 01:31:03,360
in the loss recovery logic mostly

2432
01:31:03,360 --> 01:31:07,840
that loss recovery logic only engages

2433
01:31:07,840 --> 01:31:09,360
when the

2434
01:31:09,360 --> 01:31:12,960
sender actually sends on multiple paths

2435
01:31:12,960 --> 01:31:15,040
at the same time

2436
01:31:15,040 --> 01:31:18,239
so it's again optional we can have a

2437
01:31:18,239 --> 01:31:19,679
sender

2438
01:31:19,679 --> 01:31:20,560
that

2439
01:31:20,560 --> 01:31:23,040
basically says yeah i mean i'm going to

2440
01:31:23,040 --> 01:31:26,000
do multipass i assume that my peer will

2441
01:31:26,000 --> 01:31:28,639
have a full length connection id

2442
01:31:28,639 --> 01:31:31,280
if they don't i will do a fall back and

2443
01:31:31,280 --> 01:31:32,639
i'll say i don't want to buy that

2444
01:31:32,639 --> 01:31:34,800
complexity we'll just send mostly on one

2445
01:31:34,800 --> 01:31:36,480
bus

2446
01:31:36,480 --> 01:31:38,960
that that works so basically

2447
01:31:38,960 --> 01:31:42,639
i think that if we take that approach

2448
01:31:42,639 --> 01:31:44,480
we get to a solution where the

2449
01:31:44,480 --> 01:31:47,760
complexity on either side is optional

2450
01:31:47,760 --> 01:31:49,360
if you want to have the feature of the

2451
01:31:49,360 --> 01:31:51,360
orleans connection id

2452
01:31:51,360 --> 01:31:53,840
you have an additional complexity

2453
01:31:53,840 --> 01:31:57,040
but i mean things are well defined and

2454
01:31:57,040 --> 01:31:59,120
and you don't get the complexity if you

2455
01:31:59,120 --> 01:32:00,080
don't

2456
01:32:00,080 --> 01:32:02,159
want that video

2457
01:32:02,159 --> 01:32:03,920
so that's the spirit of the unified

2458
01:32:03,920 --> 01:32:05,920
proposal let's say make the complexity

2459
01:32:05,920 --> 01:32:07,440
optional

2460
01:32:07,440 --> 01:32:10,560
and if people want to have the

2461
01:32:10,560 --> 01:32:12,480
the benefits of using short connection

2462
01:32:12,480 --> 01:32:15,440
ideas are not null connection ids

2463
01:32:15,440 --> 01:32:17,679
then by the complexity and get the

2464
01:32:17,679 --> 01:32:20,080
feature

2465
01:32:20,719 --> 01:32:22,880
thanks christian we're we're at time for

2466
01:32:22,880 --> 01:32:24,239
this session

2467
01:32:24,239 --> 01:32:25,679
all together and i appreciate we've got

2468
01:32:25,679 --> 01:32:28,159
some people in the queue but um we're

2469
01:32:28,159 --> 01:32:30,560
seeing good interest in this topic

2470
01:32:30,560 --> 01:32:32,719
um so i think we'll need to take it

2471
01:32:32,719 --> 01:32:34,960
offline and follow up you can take the

2472
01:32:34,960 --> 01:32:36,640
clue

2473
01:32:36,640 --> 01:32:38,880
[Music]

2474
01:32:38,880 --> 01:32:40,719
corey could you be quick you do you need

2475
01:32:40,719 --> 01:32:42,880
to respond to anything or could we just

2476
01:32:42,880 --> 01:32:44,159
take this offline

2477
01:32:44,159 --> 01:32:45,679
gary would like to talk more about the

2478
01:32:45,679 --> 01:32:48,080
act situation but you do it online off

2479
01:32:48,080 --> 01:32:49,440
after the meeting thanks that's

2480
01:32:49,440 --> 01:32:51,199
appreciated i would really like to

2481
01:32:51,199 --> 01:32:53,360
figure out if my co-authors want to add

2482
01:32:53,360 --> 01:32:55,199
anything janmay is there anything

2483
01:32:55,199 --> 01:32:58,638
briefly you would like to add

2484
01:33:02,480 --> 01:33:05,600
to support the effort for the unified

2485
01:33:05,600 --> 01:33:08,560
proposal on last page for three reasons

2486
01:33:08,560 --> 01:33:11,199
first the solution takes advantage from

2487
01:33:11,199 --> 01:33:13,120
both single pn space and multiple

2488
01:33:13,120 --> 01:33:15,040
viewing spaces as for most

2489
01:33:15,040 --> 01:33:17,199
implementations which use long

2490
01:33:17,199 --> 01:33:19,440
connection ids it could take the best

2491
01:33:19,440 --> 01:33:22,880
efficiency of ack ranges with multiple

2492
01:33:22,880 --> 01:33:25,280
opinion space and for implementations

2493
01:33:25,280 --> 01:33:27,840
which use non-connection id they could

2494
01:33:27,840 --> 01:33:30,800
support mod pass with single pin space

2495
01:33:30,800 --> 01:33:32,639
we don't have to worry about choosing

2496
01:33:32,639 --> 01:33:36,239
from a or b we just take the best of

2497
01:33:36,239 --> 01:33:38,719
both and the second point is that for

2498
01:33:38,719 --> 01:33:41,360
implementations we just have one single

2499
01:33:41,360 --> 01:33:44,719
solution for each situation it surely

2500
01:33:44,719 --> 01:33:47,360
would reduce complexity and the last

2501
01:33:47,360 --> 01:33:50,159
point is that we don't have the risk of

2502
01:33:50,159 --> 01:33:52,239
failure for interrupt tests and this

2503
01:33:52,239 --> 01:33:54,000
will probably happen in the previous

2504
01:33:54,000 --> 01:33:55,120
version if

2505
01:33:55,120 --> 01:33:57,280
two endpoints choose to support

2506
01:33:57,280 --> 01:33:59,760
different p and space solutions in the

2507
01:33:59,760 --> 01:34:01,199
unified version we don't have this

2508
01:34:01,199 --> 01:34:04,159
problem because the id in pakistan or

2509
01:34:04,159 --> 01:34:06,639
distinguishes the situations

2510
01:34:06,639 --> 01:34:09,280
that's why i strongly support support

2511
01:34:09,280 --> 01:34:12,880
the unified co-host as an individual

2512
01:34:12,880 --> 01:34:14,639
thank you okay thank you

2513
01:34:14,639 --> 01:34:16,159
um yes so

2514
01:34:16,159 --> 01:34:18,159
the the pr here probably needs some

2515
01:34:18,159 --> 01:34:19,760
editorial work still

2516
01:34:19,760 --> 01:34:21,520
uh so don't get confused by that but

2517
01:34:21,520 --> 01:34:24,239
other than that i think we uh have a way

2518
01:34:24,239 --> 01:34:26,159
proposed way forward and like if more

2519
01:34:26,159 --> 01:34:27,440
people want to implement and provide

2520
01:34:27,440 --> 01:34:29,760
feedback that would be very useful

2521
01:34:29,760 --> 01:34:33,560
cool thank you

2522
01:34:34,880 --> 01:34:36,719
right

2523
01:34:36,719 --> 01:34:39,440
thanks mira

2524
01:34:39,520 --> 01:34:41,760
next up we have robin

2525
01:34:41,760 --> 01:34:45,800
to talk about q log

2526
01:34:46,239 --> 01:34:47,840
thank you

2527
01:34:47,840 --> 01:34:49,679
we can hear you we're just granting you

2528
01:34:49,679 --> 01:34:52,800
a slide deck control

2529
01:34:52,800 --> 01:34:55,520
we can see this in the room are you okay

2530
01:34:55,520 --> 01:34:58,719
yep it should be fine

2531
01:34:59,600 --> 01:35:01,360
all right morning everyone welcome to

2532
01:35:01,360 --> 01:35:04,320
the superman update for q log um so

2533
01:35:04,320 --> 01:35:06,639
called because for all three of our uh

2534
01:35:06,639 --> 01:35:08,560
existing documents this last update we

2535
01:35:08,560 --> 01:35:11,600
basically went from clark kent to cal-el

2536
01:35:11,600 --> 01:35:14,239
um meaning that internally they're still

2537
01:35:14,239 --> 01:35:15,679
pretty much the same person they have

2538
01:35:15,679 --> 01:35:17,520
the same superpowers they just look

2539
01:35:17,520 --> 01:35:18,880
quite differently

2540
01:35:18,880 --> 01:35:21,760
on the um outside and that is my way of

2541
01:35:21,760 --> 01:35:23,440
saying that we did mostly editorial

2542
01:35:23,440 --> 01:35:25,520
changes in this past

2543
01:35:25,520 --> 01:35:28,880
update but of a very specific kind as

2544
01:35:28,880 --> 01:35:30,080
you might know one of the main things

2545
01:35:30,080 --> 01:35:32,960
that qlogs does is define different

2546
01:35:32,960 --> 01:35:34,639
types of events that you can log for the

2547
01:35:34,639 --> 01:35:36,400
different protocols

2548
01:35:36,400 --> 01:35:38,000
so and the event fields that you need to

2549
01:35:38,000 --> 01:35:40,000
log in the types

2550
01:35:40,000 --> 01:35:42,400
of the data that is in those fields and

2551
01:35:42,400 --> 01:35:44,639
to define what that should all be

2552
01:35:44,639 --> 01:35:46,800
up until now we had been using a

2553
01:35:46,800 --> 01:35:48,719
typescript alike

2554
01:35:48,719 --> 01:35:49,760
dialect

2555
01:35:49,760 --> 01:35:51,280
mainly because at the beginning when i

2556
01:35:51,280 --> 01:35:53,199
started q log i didn't know about any

2557
01:35:53,199 --> 01:35:54,159
better

2558
01:35:54,159 --> 01:35:55,280
options

2559
01:35:55,280 --> 01:35:57,119
since last time we know about something

2560
01:35:57,119 --> 01:35:59,920
called cddl the concise data definition

2561
01:35:59,920 --> 01:36:01,600
language

2562
01:36:01,600 --> 01:36:04,560
which is a much better fit for this and

2563
01:36:04,560 --> 01:36:07,440
also an official itf standard so that's

2564
01:36:07,440 --> 01:36:08,960
basically what this update was we

2565
01:36:08,960 --> 01:36:12,159
switched from typescript to cddl and as

2566
01:36:12,159 --> 01:36:14,080
you can see from the examples here on

2567
01:36:14,080 --> 01:36:17,119
top it's actually relatively trivial

2568
01:36:17,119 --> 01:36:18,880
for most things it's mostly a little bit

2569
01:36:18,880 --> 01:36:21,040
of syntax that changes

2570
01:36:21,040 --> 01:36:23,280
string is now called text and number is

2571
01:36:23,280 --> 01:36:26,159
called uint and the question mark is for

2572
01:36:26,159 --> 01:36:28,320
an optional field is before the field

2573
01:36:28,320 --> 01:36:30,400
instead of after

2574
01:36:30,400 --> 01:36:32,000
things like that right so it should be

2575
01:36:32,000 --> 01:36:34,880
relatively simple even for people not

2576
01:36:34,880 --> 01:36:37,040
very

2577
01:36:37,040 --> 01:36:39,119
experience with cdl to

2578
01:36:39,119 --> 01:36:42,960
understand most of uh of the new syntax

2579
01:36:42,960 --> 01:36:45,760
however cdl does bring us quite a few

2580
01:36:45,760 --> 01:36:47,760
extra opportunities to make things

2581
01:36:47,760 --> 01:36:50,639
better for example our

2582
01:36:50,639 --> 01:36:52,320
q log events are generally described as

2583
01:36:52,320 --> 01:36:54,639
very flexible you can add any

2584
01:36:54,639 --> 01:36:56,320
new fields if that's needed in your

2585
01:36:56,320 --> 01:36:58,560
personal implementation and tools are

2586
01:36:58,560 --> 01:37:00,960
expected to handle that now in the

2587
01:37:00,960 --> 01:37:02,560
previous definitions we kind of

2588
01:37:02,560 --> 01:37:04,239
indicated that with as you can see a

2589
01:37:04,239 --> 01:37:05,199
comment

2590
01:37:05,199 --> 01:37:06,480
right hoping that people would do the

2591
01:37:06,480 --> 01:37:07,600
right thing

2592
01:37:07,600 --> 01:37:10,639
but in cddl there's actually an official

2593
01:37:10,639 --> 01:37:12,719
syntax for doing that indicating here

2594
01:37:12,719 --> 01:37:14,880
that you can have any number of

2595
01:37:14,880 --> 01:37:17,360
text fields so key value pairs where the

2596
01:37:17,360 --> 01:37:21,280
key is a string that's the asterisk text

2597
01:37:21,280 --> 01:37:22,080
and

2598
01:37:22,080 --> 01:37:25,199
the value can be then any value that you

2599
01:37:25,199 --> 01:37:26,960
may want so that's a that's a much

2600
01:37:26,960 --> 01:37:29,280
cleaner way of doing this and cdl's

2601
01:37:29,280 --> 01:37:30,159
other

2602
01:37:30,159 --> 01:37:32,080
interesting options

2603
01:37:32,080 --> 01:37:34,560
for example um one of the things that

2604
01:37:34,560 --> 01:37:36,560
are in the quakecraft is that you can

2605
01:37:36,560 --> 01:37:39,280
have tls level alert errors

2606
01:37:39,280 --> 01:37:42,239
and they map onto quick level errors but

2607
01:37:42,239 --> 01:37:44,800
we didn't want to make a new

2608
01:37:44,800 --> 01:37:45,600
uh

2609
01:37:45,600 --> 01:37:48,719
text string enum entry for each and each

2610
01:37:48,719 --> 01:37:50,560
of them individually so originally in

2611
01:37:50,560 --> 01:37:52,639
typescript we had like this very

2612
01:37:52,639 --> 01:37:54,719
non-official

2613
01:37:54,719 --> 01:37:57,600
syntax for doing that while with

2614
01:37:57,600 --> 01:38:00,560
cddl we can actually use the regex

2615
01:38:00,560 --> 01:38:02,560
operator and defined as a little bit

2616
01:38:02,560 --> 01:38:04,719
more clearly what type of uh string

2617
01:38:04,719 --> 01:38:06,560
we're expecting there for that kind of

2618
01:38:06,560 --> 01:38:08,960
error another thing that we can use is

2619
01:38:08,960 --> 01:38:11,119
the unwrap operator so we have quite a

2620
01:38:11,119 --> 01:38:12,880
few events that actually share quite a

2621
01:38:12,880 --> 01:38:15,119
few fields think about you know the

2622
01:38:15,119 --> 01:38:16,560
difference between a pack and the scent

2623
01:38:16,560 --> 01:38:18,719
and a packet received the packet remains

2624
01:38:18,719 --> 01:38:20,639
a packet um

2625
01:38:20,639 --> 01:38:22,960
previously we may mostly manually copy

2626
01:38:22,960 --> 01:38:24,480
to the fields and sometimes you know if

2627
01:38:24,480 --> 01:38:27,040
you forget to change uh or to keep these

2628
01:38:27,040 --> 01:38:29,040
changes consistent

2629
01:38:29,040 --> 01:38:31,679
with cddl editorially it's very simple

2630
01:38:31,679 --> 01:38:33,520
you have this unwrap operator the

2631
01:38:33,520 --> 01:38:35,360
squiggly line

2632
01:38:35,360 --> 01:38:37,760
where you just have the common fields in

2633
01:38:37,760 --> 01:38:39,840
one part and then you can just

2634
01:38:39,840 --> 01:38:41,760
unwrap them at the location that you

2635
01:38:41,760 --> 01:38:43,280
need them basically meaning you just

2636
01:38:43,280 --> 01:38:44,960
copy paste the fields

2637
01:38:44,960 --> 01:38:47,199
to where you uh where you want to reuse

2638
01:38:47,199 --> 01:38:48,880
them basically

2639
01:38:48,880 --> 01:38:51,520
so that's mostly editorial but the main

2640
01:38:51,520 --> 01:38:52,960
thing that i was really happy with with

2641
01:38:52,960 --> 01:38:56,719
cddl is the ability to be a bit more

2642
01:38:56,719 --> 01:38:59,600
specific about extension points

2643
01:38:59,600 --> 01:39:02,239
um ctl is a feature called

2644
01:39:02,239 --> 01:39:04,480
sockets or plugs

2645
01:39:04,480 --> 01:39:06,719
which are indicated here with the

2646
01:39:06,719 --> 01:39:08,719
dollar sign

2647
01:39:08,719 --> 01:39:10,560
as you can see where the idea is that

2648
01:39:10,560 --> 01:39:13,280
it's kind of like a a partial type

2649
01:39:13,280 --> 01:39:15,679
so you define the type so in this case

2650
01:39:15,679 --> 01:39:17,840
the protocol event body that's defined

2651
01:39:17,840 --> 01:39:20,000
partially at one place and then you can

2652
01:39:20,000 --> 01:39:23,119
extend the same type with new

2653
01:39:23,119 --> 01:39:24,400
possible

2654
01:39:24,400 --> 01:39:26,480
definitions in a different

2655
01:39:26,480 --> 01:39:28,800
place and in practice for qlog this is

2656
01:39:28,800 --> 01:39:30,880
very useful because we have what we call

2657
01:39:30,880 --> 01:39:32,480
the main schema

2658
01:39:32,480 --> 01:39:34,239
so that is like the main document

2659
01:39:34,239 --> 01:39:36,000
describing all the high level stuff for

2660
01:39:36,000 --> 01:39:38,880
example what is a generic event look

2661
01:39:38,880 --> 01:39:41,119
like as you can see on top

2662
01:39:41,119 --> 01:39:42,800
but then we have sub documents that

2663
01:39:42,800 --> 01:39:44,880
describe the different events for in

2664
01:39:44,880 --> 01:39:47,280
this case hp3 and

2665
01:39:47,280 --> 01:39:48,480
quick

2666
01:39:48,480 --> 01:39:50,080
and you kind of want to

2667
01:39:50,080 --> 01:39:51,679
properly link up

2668
01:39:51,679 --> 01:39:53,520
those two definitions across the

2669
01:39:53,520 --> 01:39:55,600
different documents

2670
01:39:55,600 --> 01:39:57,679
that we have and that was

2671
01:39:57,679 --> 01:39:59,600
very difficult i found in typescript

2672
01:39:59,600 --> 01:40:01,280
there we just again had the data for an

2673
01:40:01,280 --> 01:40:02,800
event was anything

2674
01:40:02,800 --> 01:40:04,239
it could even be just a number or a

2675
01:40:04,239 --> 01:40:07,920
string not very well types well here the

2676
01:40:07,920 --> 01:40:09,440
approach we're taking now is that you

2677
01:40:09,440 --> 01:40:11,360
have a very very clear listing of all

2678
01:40:11,360 --> 01:40:13,199
the different events

2679
01:40:13,199 --> 01:40:15,280
in for example the acp tree document and

2680
01:40:15,280 --> 01:40:17,440
then you can say these belong to the

2681
01:40:17,440 --> 01:40:20,159
protocol event body partial type that is

2682
01:40:20,159 --> 01:40:22,560
defined in the main schema

2683
01:40:22,560 --> 01:40:23,679
and so

2684
01:40:23,679 --> 01:40:25,520
you can do a proper checking

2685
01:40:25,520 --> 01:40:28,080
uh in in tooling for example as i'll get

2686
01:40:28,080 --> 01:40:29,199
to soon

2687
01:40:29,199 --> 01:40:30,880
if if you're actually using these things

2688
01:40:30,880 --> 01:40:33,360
correctly

2689
01:40:34,320 --> 01:40:37,440
as they are defined in the specs right

2690
01:40:37,440 --> 01:40:39,440
um those are like the main things there

2691
01:40:39,440 --> 01:40:42,159
are a lot of smaller things um for

2692
01:40:42,159 --> 01:40:44,639
example we have the size operator

2693
01:40:44,639 --> 01:40:46,800
meaning we can be a bit more precise

2694
01:40:46,800 --> 01:40:47,840
about

2695
01:40:47,840 --> 01:40:50,239
how large certain fields need to be

2696
01:40:50,239 --> 01:40:52,159
that's not super useful for json but

2697
01:40:52,159 --> 01:40:54,480
let's imagine someone wants to make a

2698
01:40:54,480 --> 01:40:56,400
binary serialization of q log down the

2699
01:40:56,400 --> 01:40:58,000
line it's good to have these things

2700
01:40:58,000 --> 01:41:00,719
defined up front

2701
01:41:00,719 --> 01:41:02,480
there's also one thing that i am

2702
01:41:02,480 --> 01:41:04,320
planning to do it's not in there yet but

2703
01:41:04,320 --> 01:41:07,119
for example adding some metadata to the

2704
01:41:07,119 --> 01:41:09,280
events as well one concrete example is

2705
01:41:09,280 --> 01:41:11,119
that we have the notion of event

2706
01:41:11,119 --> 01:41:12,480
importance

2707
01:41:12,480 --> 01:41:15,199
so not all events are as important as

2708
01:41:15,199 --> 01:41:16,719
the others and you shouldn't be logging

2709
01:41:16,719 --> 01:41:18,080
all the events all the time because that

2710
01:41:18,080 --> 01:41:19,920
would be way too much

2711
01:41:19,920 --> 01:41:22,159
logs and so we have the concept of core

2712
01:41:22,159 --> 01:41:24,320
events most important than base and then

2713
01:41:24,320 --> 01:41:26,320
extra that you can have for debugging

2714
01:41:26,320 --> 01:41:27,440
purposes

2715
01:41:27,440 --> 01:41:29,119
these again these indications are done

2716
01:41:29,119 --> 01:41:31,360
in like a pros way in the current drafts

2717
01:41:31,360 --> 01:41:33,440
but cdl will allow us to have this

2718
01:41:33,440 --> 01:41:37,119
inside of the actual definition

2719
01:41:37,119 --> 01:41:38,560
as well which i think would be useful

2720
01:41:38,560 --> 01:41:40,719
for a variety of reasons

2721
01:41:40,719 --> 01:41:42,320
next to those things we did a big

2722
01:41:42,320 --> 01:41:44,560
consistency update of all of this across

2723
01:41:44,560 --> 01:41:46,159
the different documents we properly

2724
01:41:46,159 --> 01:41:48,080
named all the code blocks we properly

2725
01:41:48,080 --> 01:41:49,760
split up examples and that kind of stuff

2726
01:41:49,760 --> 01:41:50,560
to make

2727
01:41:50,560 --> 01:41:52,719
things a bit more tidy

2728
01:41:52,719 --> 01:41:54,320
but so that was like

2729
01:41:54,320 --> 01:41:57,520
the main thing that we did in this

2730
01:41:57,520 --> 01:41:59,600
in this update and i wanted to get back

2731
01:41:59,600 --> 01:42:03,040
a little bit to why we did this um first

2732
01:42:03,040 --> 01:42:04,239
of all

2733
01:42:04,239 --> 01:42:07,199
we now have cddl which is a iutf

2734
01:42:07,199 --> 01:42:09,360
standard is an existing rfc which is

2735
01:42:09,360 --> 01:42:11,600
better than having not an rfc but in my

2736
01:42:11,600 --> 01:42:13,520
mind much more importantly is this this

2737
01:42:13,520 --> 01:42:15,360
will help us with having some automated

2738
01:42:15,360 --> 01:42:17,440
tooling some powerful automated tooling

2739
01:42:17,440 --> 01:42:19,280
down the line what we did for these

2740
01:42:19,280 --> 01:42:22,000
drafts is already have some basic tools

2741
01:42:22,000 --> 01:42:24,639
that basically extract the cdl from

2742
01:42:24,639 --> 01:42:27,520
the markdown documents

2743
01:42:27,520 --> 01:42:29,920
and combine them into a single cdl file

2744
01:42:29,920 --> 01:42:31,679
which we can then validate using

2745
01:42:31,679 --> 01:42:34,239
existing cgl tooling to make sure that

2746
01:42:34,239 --> 01:42:36,239
we haven't forgotten anything or that

2747
01:42:36,239 --> 01:42:38,639
our type interferences are are

2748
01:42:38,639 --> 01:42:40,719
consistent and that kind of stuff and

2749
01:42:40,719 --> 01:42:42,000
then we've also been using this to

2750
01:42:42,000 --> 01:42:45,119
generate dummy uh json files so that we

2751
01:42:45,119 --> 01:42:47,360
can actually check you know is is our is

2752
01:42:47,360 --> 01:42:50,159
our q log is our cdl definition actually

2753
01:42:50,159 --> 01:42:51,119
correct

2754
01:42:51,119 --> 01:42:52,719
um

2755
01:42:52,719 --> 01:42:54,880
is it representing what we want it to

2756
01:42:54,880 --> 01:42:57,119
represent so that's what we have and

2757
01:42:57,119 --> 01:42:59,679
then we hope to go for even more complex

2758
01:42:59,679 --> 01:43:01,760
things which are here in red which is

2759
01:43:01,760 --> 01:43:03,520
for example generating other

2760
01:43:03,520 --> 01:43:06,159
representations of the same schema so

2761
01:43:06,159 --> 01:43:08,320
for example let's say you have you want

2762
01:43:08,320 --> 01:43:10,400
to implement a q log library

2763
01:43:10,400 --> 01:43:11,760
and for some reason you want to have

2764
01:43:11,760 --> 01:43:13,360
each of the events as a separate class

2765
01:43:13,360 --> 01:43:14,880
or substruct

2766
01:43:14,880 --> 01:43:15,920
right now you would have to do that

2767
01:43:15,920 --> 01:43:18,000
manually which again is annoying to keep

2768
01:43:18,000 --> 01:43:20,080
things consistent with this you might be

2769
01:43:20,080 --> 01:43:22,480
able to generate this automatically

2770
01:43:22,480 --> 01:43:24,960
down the line another very useful use

2771
01:43:24,960 --> 01:43:27,360
case is automatically validation of

2772
01:43:27,360 --> 01:43:30,320
actual q log json files so i imagine

2773
01:43:30,320 --> 01:43:32,960
this that you just upload a q log to for

2774
01:43:32,960 --> 01:43:34,639
example qvis and then it can tell you

2775
01:43:34,639 --> 01:43:35,679
okay

2776
01:43:35,679 --> 01:43:37,199
this field is actually required and

2777
01:43:37,199 --> 01:43:39,760
you're not logging it or you are you

2778
01:43:39,760 --> 01:43:42,000
have a typo in this kind of field which

2779
01:43:42,000 --> 01:43:43,360
we've seen happen in the wild a couple

2780
01:43:43,360 --> 01:43:44,880
of times

2781
01:43:44,880 --> 01:43:45,679
um

2782
01:43:45,679 --> 01:43:47,040
all of these things i think will be

2783
01:43:47,040 --> 01:43:48,159
useful

2784
01:43:48,159 --> 01:43:49,840
not as much for existing implementations

2785
01:43:49,840 --> 01:43:51,520
but especially for newer ones or the

2786
01:43:51,520 --> 01:43:52,880
ones that still need to update to the

2787
01:43:52,880 --> 01:43:55,199
newer versions

2788
01:43:55,199 --> 01:43:57,199
but especially as we look to extend q

2789
01:43:57,199 --> 01:43:59,679
log beyond what we have now

2790
01:43:59,679 --> 01:44:01,280
again i'm we're still not sure if we're

2791
01:44:01,280 --> 01:44:03,440
going to look for tcp or anything but i

2792
01:44:03,440 --> 01:44:04,560
think it's

2793
01:44:04,560 --> 01:44:06,239
at least i have concrete plans to start

2794
01:44:06,239 --> 01:44:08,480
working on some q log things for web

2795
01:44:08,480 --> 01:44:10,400
transport for mask

2796
01:44:10,400 --> 01:44:13,199
for multi-path um down the line and i

2797
01:44:13,199 --> 01:44:14,719
think

2798
01:44:14,719 --> 01:44:16,719
having this kind of proper tooling and

2799
01:44:16,719 --> 01:44:18,239
validation in place will make that

2800
01:44:18,239 --> 01:44:20,719
process a lot easier for everyone trying

2801
01:44:20,719 --> 01:44:21,760
to

2802
01:44:21,760 --> 01:44:23,600
implement this down the line

2803
01:44:23,600 --> 01:44:25,760
right

2804
01:44:25,840 --> 01:44:27,840
so that's what we did

2805
01:44:27,840 --> 01:44:30,560
why we did it now

2806
01:44:30,560 --> 01:44:34,320
what we want to do by next atf is mostly

2807
01:44:34,320 --> 01:44:36,560
more editorial stuff so

2808
01:44:36,560 --> 01:44:38,880
a lot of the pros was written

2809
01:44:38,880 --> 01:44:41,280
during draft 23 24

2810
01:44:41,280 --> 01:44:43,520
and so a lot of things has been updated

2811
01:44:43,520 --> 01:44:45,679
since a good example of that is the

2812
01:44:45,679 --> 01:44:48,159
qbank drafts right where we have renamed

2813
01:44:48,159 --> 01:44:52,000
http headers to http fields which are of

2814
01:44:52,000 --> 01:44:54,719
course carried in the new http3 fields

2815
01:44:54,719 --> 01:44:56,400
frame

2816
01:44:56,400 --> 01:44:58,638
right

2817
01:44:58,719 --> 01:45:01,360
and some other pros updates another

2818
01:45:01,360 --> 01:45:03,199
thing that we plan to do is adding a

2819
01:45:03,199 --> 01:45:05,440
couple additional events and fields that

2820
01:45:05,440 --> 01:45:07,520
we don't have now things that allow you

2821
01:45:07,520 --> 01:45:09,840
to log on which cpu or tread for example

2822
01:45:09,840 --> 01:45:11,440
things were happening

2823
01:45:11,440 --> 01:45:15,119
but especially also again for qpack

2824
01:45:15,119 --> 01:45:17,440
we currently have very obtuse

2825
01:45:17,440 --> 01:45:19,840
um events i think that could be a bit

2826
01:45:19,840 --> 01:45:21,440
more high level bit more usable for

2827
01:45:21,440 --> 01:45:23,199
people because i don't think anyone has

2828
01:45:23,199 --> 01:45:24,960
ever actually implemented the current

2829
01:45:24,960 --> 01:45:26,719
queue back events which i think is a

2830
01:45:26,719 --> 01:45:28,239
clear indicator they're kind of missing

2831
01:45:28,239 --> 01:45:29,760
their goal

2832
01:45:29,760 --> 01:45:31,679
so we really want to

2833
01:45:31,679 --> 01:45:33,520
get on that for the next step

2834
01:45:33,520 --> 01:45:34,639
most of these i think we can do

2835
01:45:34,639 --> 01:45:37,360
ourselves but especially for qpack i

2836
01:45:37,360 --> 01:45:39,199
don't think we have to the necessary

2837
01:45:39,199 --> 01:45:40,400
expertise

2838
01:45:40,400 --> 01:45:41,520
um

2839
01:45:41,520 --> 01:45:43,440
within the editors and so we are looking

2840
01:45:43,440 --> 01:45:45,440
for as you can see on the right our own

2841
01:45:45,440 --> 01:45:47,760
lowest lane or maybe in this case a

2842
01:45:47,760 --> 01:45:49,520
louis lane

2843
01:45:49,520 --> 01:45:51,360
to come help us out with that

2844
01:45:51,360 --> 01:45:53,760
i created an issue for that number 199

2845
01:45:53,760 --> 01:45:55,440
if you're interested

2846
01:45:55,440 --> 01:45:57,280
so that's things we can mostly do

2847
01:45:57,280 --> 01:45:59,360
ourselves and think we have a grasp on

2848
01:45:59,360 --> 01:46:00,880
but there are a couple of open issues

2849
01:46:00,880 --> 01:46:04,719
that i wanted to bring here now

2850
01:46:04,719 --> 01:46:06,480
that will need to be resolved before we

2851
01:46:06,480 --> 01:46:08,560
move to rfc of course

2852
01:46:08,560 --> 01:46:10,159
one of the ideas is split up the main

2853
01:46:10,159 --> 01:46:12,560
scheme even further to remove especially

2854
01:46:12,560 --> 01:46:14,719
operational concerns there for example

2855
01:46:14,719 --> 01:46:16,960
we have an environment fire variable

2856
01:46:16,960 --> 01:46:18,800
that you should set as a

2857
01:46:18,800 --> 01:46:20,480
implementation where the queue log

2858
01:46:20,480 --> 01:46:22,400
should end up we also have a well-known

2859
01:46:22,400 --> 01:46:24,800
endpoint that nobody's actually using at

2860
01:46:24,800 --> 01:46:26,320
the time so maybe we shouldn't even have

2861
01:46:26,320 --> 01:46:27,679
that

2862
01:46:27,679 --> 01:46:28,960
so the question is do we keep that in

2863
01:46:28,960 --> 01:46:30,639
the main or do we even need to specify

2864
01:46:30,639 --> 01:46:31,840
that at all

2865
01:46:31,840 --> 01:46:32,560
right

2866
01:46:32,560 --> 01:46:33,840
then there are a lot of discussions

2867
01:46:33,840 --> 01:46:36,560
about versioning and extensibility

2868
01:46:36,560 --> 01:46:38,480
we have

2869
01:46:38,480 --> 01:46:40,639
clearly said that we will not take this

2870
01:46:40,639 --> 01:46:42,800
into too much account right not try to

2871
01:46:42,800 --> 01:46:44,320
already

2872
01:46:44,320 --> 01:46:46,480
estimate how things would work for tcp

2873
01:46:46,480 --> 01:46:48,560
and stuff down the line but we still

2874
01:46:48,560 --> 01:46:50,400
need to have a few extension points and

2875
01:46:50,400 --> 01:46:52,239
idea how to

2876
01:46:52,239 --> 01:46:54,639
handle different versions of

2877
01:46:54,639 --> 01:46:57,840
the main schema versus versions of the

2878
01:46:57,840 --> 01:46:59,840
protocol events and that kind of stuff

2879
01:46:59,840 --> 01:47:01,840
we have a couple of

2880
01:47:01,840 --> 01:47:03,920
i think proposals for everything but

2881
01:47:03,920 --> 01:47:05,840
something so people with an interest in

2882
01:47:05,840 --> 01:47:07,760
that

2883
01:47:07,760 --> 01:47:09,199
might look at these

2884
01:47:09,199 --> 01:47:10,800
issues there as well

2885
01:47:10,800 --> 01:47:13,199
but the main thing for me which i keep

2886
01:47:13,199 --> 01:47:14,880
bringing up i think in every keylog

2887
01:47:14,880 --> 01:47:16,400
target did and i still haven't had

2888
01:47:16,400 --> 01:47:17,600
anyone

2889
01:47:17,600 --> 01:47:19,840
really give much feedback on this

2890
01:47:19,840 --> 01:47:22,800
is around security and privacy

2891
01:47:22,800 --> 01:47:24,159
right

2892
01:47:24,159 --> 01:47:27,360
how do we handle that within q log

2893
01:47:27,360 --> 01:47:29,760
the more i uh try to find a business the

2894
01:47:29,760 --> 01:47:31,199
more it's it's

2895
01:47:31,199 --> 01:47:32,239
i think

2896
01:47:32,239 --> 01:47:34,480
or at least i'm a very bad searcher it

2897
01:47:34,480 --> 01:47:36,800
appears that this is an unsolved problem

2898
01:47:36,800 --> 01:47:38,560
or at least an unspecified or

2899
01:47:38,560 --> 01:47:40,560
unstandardized problem that most

2900
01:47:40,560 --> 01:47:42,320
companies just do what makes sense for

2901
01:47:42,320 --> 01:47:44,480
them internally and they do it in an ad

2902
01:47:44,480 --> 01:47:46,960
hoc fashion

2903
01:47:46,960 --> 01:47:48,560
and there are no existing documents that

2904
01:47:48,560 --> 01:47:50,080
you can refer to as you should follow

2905
01:47:50,080 --> 01:47:52,239
these specific guidelines and if that is

2906
01:47:52,239 --> 01:47:54,000
indeed the case then

2907
01:47:54,000 --> 01:47:55,520
i wonder if this is something we should

2908
01:47:55,520 --> 01:47:57,119
be doing in q log because it seems like

2909
01:47:57,119 --> 01:47:59,199
a very big undertaking a very important

2910
01:47:59,199 --> 01:48:00,800
undertaking as well

2911
01:48:00,800 --> 01:48:02,880
but something that would very much delay

2912
01:48:02,880 --> 01:48:04,400
qrock lock

2913
01:48:04,400 --> 01:48:05,360
itself

2914
01:48:05,360 --> 01:48:07,040
right so either i'm looking for people

2915
01:48:07,040 --> 01:48:08,159
to tell us

2916
01:48:08,159 --> 01:48:09,760
these are the best practice documents

2917
01:48:09,760 --> 01:48:11,119
you can refer to

2918
01:48:11,119 --> 01:48:12,080
or

2919
01:48:12,080 --> 01:48:15,040
people to tell us what is like the

2920
01:48:15,040 --> 01:48:16,560
i wouldn't say the absolute minimum that

2921
01:48:16,560 --> 01:48:18,960
we have to do to make this good

2922
01:48:18,960 --> 01:48:20,960
with q log to make it

2923
01:48:20,960 --> 01:48:23,199
appropriate but at least give us a way

2924
01:48:23,199 --> 01:48:25,280
forward in what should be specified in q

2925
01:48:25,280 --> 01:48:26,480
log

2926
01:48:26,480 --> 01:48:29,040
before we can get to rfc

2927
01:48:29,040 --> 01:48:31,199
so that we can start working on this as

2928
01:48:31,199 --> 01:48:32,880
soon as possible

2929
01:48:32,880 --> 01:48:36,000
that's it thanks

2930
01:48:36,159 --> 01:48:38,320
thank you very much robin um

2931
01:48:38,320 --> 01:48:40,639
you know just just as a independent

2932
01:48:40,639 --> 01:48:43,520
perspective the the cdl work was good

2933
01:48:43,520 --> 01:48:45,280
and those pr's if anyone didn't see were

2934
01:48:45,280 --> 01:48:47,360
quite big um so the the efforts are

2935
01:48:47,360 --> 01:48:49,119
appreciated and that does really unblock

2936
01:48:49,119 --> 01:48:51,520
us um on on progressing these other

2937
01:48:51,520 --> 01:48:54,320
issues that uh are both big and small um

2938
01:48:54,320 --> 01:48:56,239
but i think if people would like to

2939
01:48:56,239 --> 01:48:57,920
contribute it would be

2940
01:48:57,920 --> 01:49:00,400
um really appreciated it it might be

2941
01:49:00,400 --> 01:49:02,719
just something simple to buy off and

2942
01:49:02,719 --> 01:49:04,320
knock off got a few people in the queue

2943
01:49:04,320 --> 01:49:06,639
uh brian first i'm going to close the

2944
01:49:06,639 --> 01:49:08,880
cube just so that we can keep the pace

2945
01:49:08,880 --> 01:49:10,159
going but uh

2946
01:49:10,159 --> 01:49:13,280
so yeah uh tldr robin uh let's schedule

2947
01:49:13,280 --> 01:49:14,880
a little bit of time offline to talk

2948
01:49:14,880 --> 01:49:16,960
about the security and privacy stuff i'm

2949
01:49:16,960 --> 01:49:18,880
willing to help on that i think you've

2950
01:49:18,880 --> 01:49:20,560
properly identified that this is a

2951
01:49:20,560 --> 01:49:22,400
gigantic can of worms

2952
01:49:22,400 --> 01:49:23,679
uh we

2953
01:49:23,679 --> 01:49:26,000
semi tackled some of these things in the

2954
01:49:26,000 --> 01:49:27,840
ipfix and peace psamp working groups

2955
01:49:27,840 --> 01:49:29,760
about 10 to 15 years ago so there might

2956
01:49:29,760 --> 01:49:31,199
be some prior art there that we can draw

2957
01:49:31,199 --> 01:49:32,719
from but um

2958
01:49:32,719 --> 01:49:34,800
let's follow up on that offline

2959
01:49:34,800 --> 01:49:36,000
thanks brian

2960
01:49:36,000 --> 01:49:39,000
eric

2961
01:49:44,639 --> 01:49:47,520
kicking in all right uh yeah i would say

2962
01:49:47,520 --> 01:49:49,440
for the security and privacy side of

2963
01:49:49,440 --> 01:49:51,679
things i would advocate for per field

2964
01:49:51,679 --> 01:49:53,760
indicators in addition to whatever other

2965
01:49:53,760 --> 01:49:56,719
guys are going to give um like big plus

2966
01:49:56,719 --> 01:49:59,040
one let's chat with brian and you know

2967
01:49:59,040 --> 01:50:00,719
figure out how we tackle the kind of

2968
01:50:00,719 --> 01:50:02,639
high level concepts but something that

2969
01:50:02,639 --> 01:50:03,760
we've found

2970
01:50:03,760 --> 01:50:06,320
uh internally for a variety of things

2971
01:50:06,320 --> 01:50:07,360
that get

2972
01:50:07,360 --> 01:50:10,239
spit out by different implementations of

2973
01:50:10,239 --> 01:50:11,520
of

2974
01:50:11,520 --> 01:50:13,199
various things

2975
01:50:13,199 --> 01:50:15,679
at least within apple platforms is that

2976
01:50:15,679 --> 01:50:18,400
it is extremely helpful to have kind of

2977
01:50:18,400 --> 01:50:22,159
a very local indication of hey

2978
01:50:22,159 --> 01:50:23,920
you're in the middle of writing some

2979
01:50:23,920 --> 01:50:26,239
random code somewhere and you may not be

2980
01:50:26,239 --> 01:50:27,840
thinking about the fact that somebody

2981
01:50:27,840 --> 01:50:29,679
could use this to

2982
01:50:29,679 --> 01:50:32,000
derive or understand x piece of

2983
01:50:32,000 --> 01:50:33,440
information that could be considered

2984
01:50:33,440 --> 01:50:34,880
private

2985
01:50:34,880 --> 01:50:36,239
so

2986
01:50:36,239 --> 01:50:37,599
yes please let's have some high-level

2987
01:50:37,599 --> 01:50:39,679
guidance somewhere but i think

2988
01:50:39,679 --> 01:50:41,520
having something that is in this

2989
01:50:41,520 --> 01:50:44,080
document not somewhere else for

2990
01:50:44,080 --> 01:50:47,360
potentially each field of hey

2991
01:50:47,360 --> 01:50:48,639
you know

2992
01:50:48,639 --> 01:50:50,800
we've thought of some random thing that

2993
01:50:50,800 --> 01:50:52,239
you could combine this field with this

2994
01:50:52,239 --> 01:50:53,360
other one and

2995
01:50:53,360 --> 01:50:55,040
understand something about a person that

2996
01:50:55,040 --> 01:50:56,880
you might not want or that they might

2997
01:50:56,880 --> 01:50:58,239
not have been thinking of at the time

2998
01:50:58,239 --> 01:50:59,679
when this was getting logged would

2999
01:50:59,679 --> 01:51:01,599
probably be very helpful for people even

3000
01:51:01,599 --> 01:51:03,520
if to say oh hey you should go read this

3001
01:51:03,520 --> 01:51:06,800
other high level guidance somewhere else

3002
01:51:06,800 --> 01:51:09,119
and would that be simply like this is a

3003
01:51:09,119 --> 01:51:10,880
sensitive field or this is sensitive

3004
01:51:10,880 --> 01:51:12,639
field and this is how you should encode

3005
01:51:12,639 --> 01:51:16,000
it if you want to be privacy sensitive

3006
01:51:16,000 --> 01:51:17,520
yeah probably something along those

3007
01:51:17,520 --> 01:51:19,920
lines of even just a single field of

3008
01:51:19,920 --> 01:51:22,080
like this is a totally fine field spit

3009
01:51:22,080 --> 01:51:23,840
this out as much as you want separate

3010
01:51:23,840 --> 01:51:26,080
from like hey by the way this is your

3011
01:51:26,080 --> 01:51:28,080
like one of your main tls keys you

3012
01:51:28,080 --> 01:51:31,199
probably shouldn't be logging this

3013
01:51:31,280 --> 01:51:32,480
okay thanks

3014
01:51:32,480 --> 01:51:35,839
thanks jonah

3015
01:51:38,960 --> 01:51:40,719
i think i'm in

3016
01:51:40,719 --> 01:51:43,040
um

3017
01:51:43,360 --> 01:51:45,520
yeah i'll agree with uh what eric said i

3018
01:51:45,520 --> 01:51:47,440
was up to i was

3019
01:51:47,440 --> 01:51:49,119
i came up here to say that perfield

3020
01:51:49,119 --> 01:51:50,880
indicators are very useful

3021
01:51:50,880 --> 01:51:54,000
however i'm also going to caution um

3022
01:51:54,000 --> 01:51:56,159
against going too deep down that rabbit

3023
01:51:56,159 --> 01:51:57,119
hole

3024
01:51:57,119 --> 01:51:59,520
this is uh there's a lot of local

3025
01:51:59,520 --> 01:52:02,880
semantics attached to what data means

3026
01:52:02,880 --> 01:52:03,920
what

3027
01:52:03,920 --> 01:52:05,760
um

3028
01:52:05,760 --> 01:52:07,599
there's this value in indicating levels

3029
01:52:07,599 --> 01:52:10,480
of sensitivity of of various bits of

3030
01:52:10,480 --> 01:52:12,639
data protocol information because as

3031
01:52:12,639 --> 01:52:14,159
eric was pointing out oftentimes the

3032
01:52:14,159 --> 01:52:15,520
consumers of this information don't

3033
01:52:15,520 --> 01:52:18,320
necessarily understand what how how

3034
01:52:18,320 --> 01:52:19,920
pieces of information can be put

3035
01:52:19,920 --> 01:52:20,880
together with other pieces of

3036
01:52:20,880 --> 01:52:23,280
information

3037
01:52:23,280 --> 01:52:24,719
but at the same time because you don't

3038
01:52:24,719 --> 01:52:28,239
have global view of how exactly these

3039
01:52:28,239 --> 01:52:30,480
traces are being used are they being

3040
01:52:30,480 --> 01:52:33,040
used in a client side a single you know

3041
01:52:33,040 --> 01:52:37,599
are they being used in in in in

3042
01:52:37,599 --> 01:52:40,000
in tandem with other logs that are also

3043
01:52:40,000 --> 01:52:41,840
existing you just don't know the scope

3044
01:52:41,840 --> 01:52:42,840
of

3045
01:52:42,840 --> 01:52:45,599
uh the total storage

3046
01:52:45,599 --> 01:52:46,960
that we're talking about the total view

3047
01:52:46,960 --> 01:52:48,159
that we're talking about it becomes

3048
01:52:48,159 --> 01:52:50,880
tricky so i'll say that

3049
01:52:50,880 --> 01:52:53,199
these should be considerations not rules

3050
01:52:53,199 --> 01:52:55,679
um and that's appropriate i think it's

3051
01:52:55,679 --> 01:52:57,119
definitely very useful to have perfect

3052
01:52:57,119 --> 01:52:59,440
indicators but just be careful

3053
01:52:59,440 --> 01:53:01,119
about um

3054
01:53:01,119 --> 01:53:02,960
losing yourself in there

3055
01:53:02,960 --> 01:53:04,320
it's not about making it perfect it's

3056
01:53:04,320 --> 01:53:05,840
about giving much more information than

3057
01:53:05,840 --> 01:53:07,280
what they would have without these

3058
01:53:07,280 --> 01:53:10,280
indicators

3059
01:53:12,560 --> 01:53:15,440
so uh with that robin thank you very

3060
01:53:15,440 --> 01:53:18,000
much and goodbye and we'll go on to the

3061
01:53:18,000 --> 01:53:19,760
last presentation

3062
01:53:19,760 --> 01:53:21,440
of the day

3063
01:53:21,440 --> 01:53:25,159
from nico

3064
01:53:35,040 --> 01:53:37,520
we can see your slides but we can't see

3065
01:53:37,520 --> 01:53:40,920
or hear you

3066
01:53:46,000 --> 01:53:47,840
nicholas

3067
01:53:47,840 --> 01:53:51,159
are you speaking

3068
01:53:58,400 --> 01:54:02,360
we cannot hear you nicholas

3069
01:54:11,760 --> 01:54:13,840
corey could you maybe help

3070
01:54:13,840 --> 01:54:14,960
support

3071
01:54:14,960 --> 01:54:18,159
yeah how about i

3072
01:54:19,679 --> 01:54:21,599
we'll see if nicholas can resolve his

3073
01:54:21,599 --> 01:54:23,840
issues while you're leading

3074
01:54:23,840 --> 01:54:25,199
hi i'm

3075
01:54:25,199 --> 01:54:27,280
i'm going to read the mic hi

3076
01:54:27,280 --> 01:54:30,080
i'm gory i'm not nicholas so if nicholas

3077
01:54:30,080 --> 01:54:31,599
comes online

3078
01:54:31,599 --> 01:54:33,679
he will carry on but i'm one of the

3079
01:54:33,679 --> 01:54:34,960
people who worked on this along with

3080
01:54:34,960 --> 01:54:39,280
christian and tom so um and stefan from

3081
01:54:39,280 --> 01:54:42,080
orange so let's talk about um what this

3082
01:54:42,080 --> 01:54:44,480
is about let's draft please

3083
01:54:44,480 --> 01:54:45,520
next slide

3084
01:54:45,520 --> 01:54:51,360
oh nicholas is in control yes go for it

3085
01:54:51,360 --> 01:54:54,239
and we still have no audio okay

3086
01:54:54,239 --> 01:54:55,920
right okay

3087
01:54:55,920 --> 01:54:57,599
so

3088
01:54:57,599 --> 01:54:59,679
the premise is that there are two pieces

3089
01:54:59,679 --> 01:55:01,280
to this puzzle

3090
01:55:01,280 --> 01:55:03,599
one of them is about remembering some of

3091
01:55:03,599 --> 01:55:05,920
the transport parameters

3092
01:55:05,920 --> 01:55:07,920
from a previous connection

3093
01:55:07,920 --> 01:55:10,480
and using this to somehow initialize a

3094
01:55:10,480 --> 01:55:12,159
new connection

3095
01:55:12,159 --> 01:55:14,239
and we've been doing this with tcp in

3096
01:55:14,239 --> 01:55:16,560
one way or another for a while

3097
01:55:16,560 --> 01:55:19,760
and quicks different to tcp quick's

3098
01:55:19,760 --> 01:55:21,679
probably best to tcp

3099
01:55:21,679 --> 01:55:23,920
so can we do this explicitly is it

3100
01:55:23,920 --> 01:55:26,080
possible to implement a way of caching

3101
01:55:26,080 --> 01:55:28,000
and reusing the parameters

3102
01:55:28,000 --> 01:55:29,679
and perhaps specify a bit of logic

3103
01:55:29,679 --> 01:55:31,280
around it

3104
01:55:31,280 --> 01:55:34,159
so christian very helpfully implemented

3105
01:55:34,159 --> 01:55:36,080
some of this in pico click

3106
01:55:36,080 --> 01:55:38,880
you can go to the url and download this

3107
01:55:38,880 --> 01:55:40,080
and use it

3108
01:55:40,080 --> 01:55:42,400
and we have been using it and testing it

3109
01:55:42,400 --> 01:55:45,360
so the method does work

3110
01:55:45,360 --> 01:55:47,920
we chose one use case because

3111
01:55:47,920 --> 01:55:49,199
nicholas

3112
01:55:49,199 --> 01:55:51,840
has a lot of experience with satcom and

3113
01:55:51,840 --> 01:55:53,440
we got some real satcom links some

3114
01:55:53,440 --> 01:55:56,000
simulated satcom links and we evaluated

3115
01:55:56,000 --> 01:55:57,760
how this might help

3116
01:55:57,760 --> 01:55:59,920
when you have a path that has a very

3117
01:55:59,920 --> 01:56:01,520
large delay and perhaps a lot of

3118
01:56:01,520 --> 01:56:04,000
bandwidth but you don't initially know

3119
01:56:04,000 --> 01:56:05,679
whether to use it so you do this usual

3120
01:56:05,679 --> 01:56:07,679
slow start thing and it goes

3121
01:56:07,679 --> 01:56:09,760
very slowly and you do this new thing

3122
01:56:09,760 --> 01:56:11,119
and it can go

3123
01:56:11,119 --> 01:56:12,960
very quickly which is what quick should

3124
01:56:12,960 --> 01:56:15,840
do

3125
01:56:17,119 --> 01:56:18,880
um

3126
01:56:18,880 --> 01:56:20,400
they would say more about this data it's

3127
01:56:20,400 --> 01:56:22,000
not my data

3128
01:56:22,000 --> 01:56:23,840
and the thing is there's a link at the

3129
01:56:23,840 --> 01:56:25,440
bottom so you can look at what the data

3130
01:56:25,440 --> 01:56:27,280
looks like and look at the experiments

3131
01:56:27,280 --> 01:56:29,119
that were done

3132
01:56:29,119 --> 01:56:32,719
and read the bdp extension draft which

3133
01:56:32,719 --> 01:56:34,560
is one of two drafts we know factored

3134
01:56:34,560 --> 01:56:35,840
out

3135
01:56:35,840 --> 01:56:37,599
so after talking about this for a few

3136
01:56:37,599 --> 01:56:39,520
times at the ietf we're coming here with

3137
01:56:39,520 --> 01:56:41,679
a bit more solidarity and what we're

3138
01:56:41,679 --> 01:56:43,360
saying is we think this is actually two

3139
01:56:43,360 --> 01:56:44,880
problem spaces

3140
01:56:44,880 --> 01:56:46,880
what frames you might need in quick to

3141
01:56:46,880 --> 01:56:48,560
actually do this

3142
01:56:48,560 --> 01:56:50,000
what are the rules and guidance for

3143
01:56:50,000 --> 01:56:51,440
doing this when you have that

3144
01:56:51,440 --> 01:56:53,360
information or maybe you take a

3145
01:56:53,360 --> 01:56:54,880
different approach but you still do the

3146
01:56:54,880 --> 01:56:57,679
same thing

3147
01:56:57,679 --> 01:56:58,719
so

3148
01:56:58,719 --> 01:57:00,080
the first thing is

3149
01:57:00,080 --> 01:57:01,760
why are we doing this why can't we just

3150
01:57:01,760 --> 01:57:03,920
say well go whatever you like

3151
01:57:03,920 --> 01:57:05,119
well of course

3152
01:57:05,119 --> 01:57:07,280
we care about safety

3153
01:57:07,280 --> 01:57:10,080
and we care that the network conditions

3154
01:57:10,080 --> 01:57:13,040
might not be what you expect

3155
01:57:13,040 --> 01:57:13,840
so

3156
01:57:13,840 --> 01:57:15,119
most of the time they're going to be

3157
01:57:15,119 --> 01:57:17,360
exactly what you expect exactly what you

3158
01:57:17,360 --> 01:57:18,800
saw last time

3159
01:57:18,800 --> 01:57:20,159
but

3160
01:57:20,159 --> 01:57:24,159
if the ip address isn't the same

3161
01:57:24,159 --> 01:57:25,360
maybe that's an indication you're not

3162
01:57:25,360 --> 01:57:27,280
talking to the same endpoint

3163
01:57:27,280 --> 01:57:29,679
if the rtt is significantly different

3164
01:57:29,679 --> 01:57:31,040
that's a really good indication that

3165
01:57:31,040 --> 01:57:33,360
your path characteristic isn't the same

3166
01:57:33,360 --> 01:57:34,480
and you shouldn't be using the same

3167
01:57:34,480 --> 01:57:36,480
congestion control

3168
01:57:36,480 --> 01:57:39,440
parameters you were last time

3169
01:57:39,440 --> 01:57:41,280
and of course

3170
01:57:41,280 --> 01:57:42,800
what does the same mean

3171
01:57:42,800 --> 01:57:44,400
if you measured it

3172
01:57:44,400 --> 01:57:46,000
a year ago and you measure it now

3173
01:57:46,000 --> 01:57:48,159
obviously it's stupid if you measured it

3174
01:57:48,159 --> 01:57:51,280
a week ago a day ago an hour ago what's

3175
01:57:51,280 --> 01:57:53,679
the lifetime of this information

3176
01:57:53,679 --> 01:57:54,960
we don't have answers to that one by the

3177
01:57:54,960 --> 01:57:56,080
way

3178
01:57:56,080 --> 01:57:58,639
but we think we should have

3179
01:57:58,639 --> 01:58:00,560
the other thing is

3180
01:58:00,560 --> 01:58:02,480
whatever you measure

3181
01:58:02,480 --> 01:58:04,480
even in good faith you might have had

3182
01:58:04,480 --> 01:58:06,080
the whole of the capacity available when

3183
01:58:06,080 --> 01:58:08,400
you last did it

3184
01:58:08,400 --> 01:58:10,080
someone else might have come in

3185
01:58:10,080 --> 01:58:11,920
afterwards

3186
01:58:11,920 --> 01:58:13,119
and you now don't have that full

3187
01:58:13,119 --> 01:58:15,040
capacity available how do you prevent

3188
01:58:15,040 --> 01:58:16,960
stamping on top of them as to having out

3189
01:58:16,960 --> 01:58:19,360
new connections

3190
01:58:19,360 --> 01:58:20,880
well it turns out that the

3191
01:58:20,880 --> 01:58:23,920
overestimation you might get in using

3192
01:58:23,920 --> 01:58:25,360
standard congestion control and the

3193
01:58:25,360 --> 01:58:27,040
starvation of things

3194
01:58:27,040 --> 01:58:28,960
probably could be avoided in most cases

3195
01:58:28,960 --> 01:58:31,360
by not jumping to the full capacity

3196
01:58:31,360 --> 01:58:32,800
you jump to a little bit be more

3197
01:58:32,800 --> 01:58:35,280
conservative and importantly

3198
01:58:35,280 --> 01:58:37,679
you get really out of that congestion

3199
01:58:37,679 --> 01:58:39,440
when you see it

3200
01:58:39,440 --> 01:58:41,040
maybe this is actually a reasonable way

3201
01:58:41,040 --> 01:58:43,199
to operate maybe it's not far from

3202
01:58:43,199 --> 01:58:45,679
things we've heard in ttpm recently with

3203
01:58:45,679 --> 01:58:48,719
high start plus plus

3204
01:58:48,719 --> 01:58:49,920
is there a problem with malicious

3205
01:58:49,920 --> 01:58:52,000
clients could you have a client that

3206
01:58:52,000 --> 01:58:54,000
actually just uses this information to

3207
01:58:54,000 --> 01:58:56,320
try and blow up the path and make things

3208
01:58:56,320 --> 01:58:57,760
worse for people

3209
01:58:57,760 --> 01:58:59,360
well we look to this and we don't think

3210
01:58:59,360 --> 01:59:01,119
that's a particular issue

3211
01:59:01,119 --> 01:59:03,839
look at the draft

3212
01:59:04,400 --> 01:59:08,560
so we have draft quick careful resume

3213
01:59:08,560 --> 01:59:11,360
the idea is that we have one minute one

3214
01:59:11,360 --> 01:59:13,660
side one one minute yeah okay

3215
01:59:13,660 --> 01:59:15,040
[Music]

3216
01:59:15,040 --> 01:59:16,560
it's about carefully resuming i have

3217
01:59:16,560 --> 01:59:18,480
talked about carefully resuming and he's

3218
01:59:18,480 --> 01:59:21,440
got safety guidelines in the next slide

3219
01:59:21,440 --> 01:59:23,919
nicholas

3220
01:59:24,800 --> 01:59:26,560
nicholas next oh options tremendous

3221
01:59:26,560 --> 01:59:28,400
promises there's different ways to do

3222
01:59:28,400 --> 01:59:29,280
this

3223
01:59:29,280 --> 01:59:31,440
otherwise we won't be talking about it

3224
01:59:31,440 --> 01:59:32,960
and we'd like to see this widely

3225
01:59:32,960 --> 01:59:34,639
implemented

3226
01:59:34,639 --> 01:59:36,400
by other people because that's what

3227
01:59:36,400 --> 01:59:38,480
quick's about different implementations

3228
01:59:38,480 --> 01:59:39,920
working together

3229
01:59:39,920 --> 01:59:42,239
and

3230
01:59:42,320 --> 01:59:43,679
we'd like to suggest one of these has

3231
01:59:43,679 --> 01:59:45,440
been the recommended way to do it let's

3232
01:59:45,440 --> 01:59:47,119
go for the next slide next slide

3233
01:59:47,119 --> 01:59:49,280
nicholas

3234
01:59:49,280 --> 01:59:50,560
these are the areas where you might get

3235
01:59:50,560 --> 01:59:53,040
benefit

3236
01:59:53,040 --> 01:59:55,520
and

3237
01:59:55,520 --> 01:59:57,360
is there any interest

3238
01:59:57,360 --> 01:59:58,639
can we

3239
01:59:58,639 --> 02:00:00,320
make this a working group item can we

3240
02:00:00,320 --> 02:00:02,400
make one of the smoking group item will

3241
02:00:02,400 --> 02:00:04,480
people actually help us make these into

3242
02:00:04,480 --> 02:00:06,400
rfcs

3243
02:00:06,400 --> 02:00:08,320
and that is the important question here

3244
02:00:08,320 --> 02:00:10,320
so we've had um

3245
02:00:10,320 --> 02:00:12,800
this topic on the as time permits bucket

3246
02:00:12,800 --> 02:00:14,480
of quick and we've always run out of

3247
02:00:14,480 --> 02:00:16,080
time for the last few sessions at least

3248
02:00:16,080 --> 02:00:19,199
anyway um it would be really good to get

3249
02:00:19,199 --> 02:00:21,199
an indication of people think this is

3250
02:00:21,199 --> 02:00:22,560
something of interest to the working

3251
02:00:22,560 --> 02:00:23,440
group

3252
02:00:23,440 --> 02:00:25,520
maybe you know the shape the specific

3253
02:00:25,520 --> 02:00:26,560
shape of it needs to be slightly

3254
02:00:26,560 --> 02:00:27,920
different but

3255
02:00:27,920 --> 02:00:29,679
um you know these folks have been

3256
02:00:29,679 --> 02:00:30,960
working on things and i think you're

3257
02:00:30,960 --> 02:00:32,639
looking for an indication

3258
02:00:32,639 --> 02:00:34,239
should should you continue working on it

3259
02:00:34,239 --> 02:00:36,880
or switch tracks to something else so i

3260
02:00:36,880 --> 02:00:39,199
think you know we're at time we probably

3261
02:00:39,199 --> 02:00:41,920
can't have that chat right now but um

3262
02:00:41,920 --> 02:00:44,560
it'd be really helpful if if the group

3263
02:00:44,560 --> 02:00:47,440
here and remote and on the list could

3264
02:00:47,440 --> 02:00:49,760
give us an indication

3265
02:00:49,760 --> 02:00:51,760
yes no

3266
02:00:51,760 --> 02:00:53,119
rather than just

3267
02:00:53,119 --> 02:00:54,960
crickets because we'll have to read that

3268
02:00:54,960 --> 02:00:59,520
and interpret that in some way so

3269
02:00:59,520 --> 02:01:02,719
thank you please get in touch

3270
02:01:03,360 --> 02:01:05,040
with that we're at time we're going to

3271
02:01:05,040 --> 02:01:06,800
get booted off in a minute

3272
02:01:06,800 --> 02:01:08,800
i neglected to mention at the start of

3273
02:01:08,800 --> 02:01:12,080
the session we have quick and hgb3

3274
02:01:12,080 --> 02:01:14,560
stickers at the front desk please come

3275
02:01:14,560 --> 02:01:16,400
and get some because i have hundreds of

3276
02:01:16,400 --> 02:01:18,080
them in my bag

3277
02:01:18,080 --> 02:01:20,000
i don't want to take them all home but

3278
02:01:20,000 --> 02:01:21,440
if you have friends or colleagues or

3279
02:01:21,440 --> 02:01:23,119
whomever might have contributed or

3280
02:01:23,119 --> 02:01:24,880
interested please take some back with

3281
02:01:24,880 --> 02:01:26,480
them too

3282
02:01:26,480 --> 02:01:28,080
and again thank you all very much for

3283
02:01:28,080 --> 02:01:29,280
your time

3284
02:01:29,280 --> 02:01:30,000
and

3285
02:01:30,000 --> 02:01:33,000
patience

3286
02:01:36,639 --> 02:01:38,960
can you can we mute this thing

3287
02:01:38,960 --> 02:01:42,760
can we mute this thing

3288
02:01:51,199 --> 02:01:54,199
um

3289
02:02:05,599 --> 02:02:07,679
you

