1
00:00:06,260 --> 00:00:09,969
[Music]

2
00:00:13,200 --> 00:00:17,480
see share preloaded slides

3
00:00:19,439 --> 00:00:21,680
did you click on the your

4
00:00:21,680 --> 00:00:23,359
next your name the share screen and then

5
00:00:23,359 --> 00:00:26,400
you do share preloaded slides

6
00:00:26,400 --> 00:00:27,840
yeah

7
00:00:27,840 --> 00:00:29,279
except

8
00:00:29,279 --> 00:00:33,440
i haven't seen the agenda slides yet

9
00:00:33,440 --> 00:00:36,239
no here they are

10
00:00:41,200 --> 00:00:42,640
great

11
00:00:42,640 --> 00:00:46,800
we do have a pretty to the minute

12
00:00:46,800 --> 00:00:49,200
agenda so um

13
00:00:49,200 --> 00:00:51,120
i say we get started

14
00:00:51,120 --> 00:00:53,280
yeah so um

15
00:00:53,280 --> 00:00:55,120
we'll just

16
00:00:55,120 --> 00:00:56,960
kind of write minutes later based on the

17
00:00:56,960 --> 00:00:58,640
recording

18
00:00:58,640 --> 00:01:00,480
yeah i'll just do that it's worked out

19
00:01:00,480 --> 00:01:02,559
well so far so i'll just do that later

20
00:01:02,559 --> 00:01:04,879
after i'm starting to do taking minutes

21
00:01:04,879 --> 00:01:06,960
now so um

22
00:01:06,960 --> 00:01:08,640
thank you perfect

23
00:01:08,640 --> 00:01:12,040
okay awesome

24
00:01:15,840 --> 00:01:17,759
all right uh

25
00:01:17,759 --> 00:01:20,400
yeah shall i start here then i guess i

26
00:01:20,400 --> 00:01:23,040
usually do this please yeah please all

27
00:01:23,040 --> 00:01:24,720
right

28
00:01:24,720 --> 00:01:26,720
welcome everyone to

29
00:01:26,720 --> 00:01:28,080
to pym

30
00:01:28,080 --> 00:01:30,560
here in vienna except most of us are not

31
00:01:30,560 --> 00:01:33,840
in vienna um

32
00:01:33,920 --> 00:01:37,680
yeah we got the full agenda let's see

33
00:01:37,680 --> 00:01:39,680
got the note well hope everyone has seen

34
00:01:39,680 --> 00:01:41,759
that

35
00:01:41,759 --> 00:01:43,650
it's the same as it's been a long time

36
00:01:43,650 --> 00:01:46,790
[Music]

37
00:01:47,119 --> 00:01:49,920
the negotiator agenda

38
00:01:49,920 --> 00:01:50,640
so

39
00:01:50,640 --> 00:01:53,600
two first presentations will be about

40
00:01:53,600 --> 00:01:56,240
uh dr solutions

41
00:01:56,240 --> 00:01:58,320
so we should try to compare those

42
00:01:58,320 --> 00:02:00,399
solutions and see

43
00:02:00,399 --> 00:02:02,240
what to do whether we want to stick with

44
00:02:02,240 --> 00:02:04,399
one or merge them or

45
00:02:04,399 --> 00:02:06,960
maybe go move forward with both or at

46
00:02:06,960 --> 00:02:08,479
least we need to

47
00:02:08,479 --> 00:02:11,520
figure out what we want to do

48
00:02:11,520 --> 00:02:14,160
then we got

49
00:02:15,920 --> 00:02:17,680
yeah the point to point

50
00:02:17,680 --> 00:02:19,599
policy ping which is the working group

51
00:02:19,599 --> 00:02:20,879
draft

52
00:02:20,879 --> 00:02:22,400
we got the pim light which has been

53
00:02:22,400 --> 00:02:24,640
presented before

54
00:02:24,640 --> 00:02:27,920
uh now there are several

55
00:02:28,080 --> 00:02:30,400
pretty new things let's see the snipping

56
00:02:30,400 --> 00:02:31,680
yang

57
00:02:31,680 --> 00:02:33,280
um

58
00:02:33,280 --> 00:02:35,680
that's some something that was taken out

59
00:02:35,680 --> 00:02:38,480
of the sleeping yen previously to to be

60
00:02:38,480 --> 00:02:40,720
able to publish without waiting for

61
00:02:40,720 --> 00:02:43,680
references but now we might want to

62
00:02:43,680 --> 00:02:45,760
move forward with this

63
00:02:45,760 --> 00:02:48,879
and then there's several

64
00:02:48,879 --> 00:02:49,680
other

65
00:02:49,680 --> 00:02:53,360
new proposals proposals as well

66
00:02:53,360 --> 00:02:57,599
um looking at the working group status

67
00:02:57,599 --> 00:02:59,680
we got the pym yang model it's still in

68
00:02:59,680 --> 00:03:01,440
the rfc editors queue it's been there a

69
00:03:01,440 --> 00:03:03,040
very long time

70
00:03:03,040 --> 00:03:04,720
it's still waiting for some final

71
00:03:04,720 --> 00:03:07,950
references i assume

72
00:03:07,950 --> 00:03:12,290
[Music]

73
00:03:13,040 --> 00:03:14,800
okay um

74
00:03:14,800 --> 00:03:17,280
we got the uh

75
00:03:17,280 --> 00:03:19,280
sleeping young model which finally got

76
00:03:19,280 --> 00:03:22,720
published so that's great

77
00:03:22,720 --> 00:03:26,000
um we got the bfd pointy multipoint use

78
00:03:26,000 --> 00:03:28,400
case published as well so making

79
00:03:28,400 --> 00:03:30,400
progress

80
00:03:30,400 --> 00:03:33,920
because the igmp mld extension draft

81
00:03:33,920 --> 00:03:35,599
which has been

82
00:03:35,599 --> 00:03:37,760
approved it just needs the lazy offer

83
00:03:37,760 --> 00:03:39,440
which is me to

84
00:03:39,440 --> 00:03:42,239
do a final update

85
00:03:42,239 --> 00:03:45,040
before it can be published

86
00:03:45,040 --> 00:03:46,879
um

87
00:03:46,879 --> 00:03:48,959
yeah i'll send an email to that working

88
00:03:48,959 --> 00:03:51,040
to the working group later i guess about

89
00:03:51,040 --> 00:03:54,560
what changes wherever

90
00:03:54,560 --> 00:03:56,640
yeah we're going to make

91
00:03:56,640 --> 00:03:58,959
no nothing too dramatic

92
00:03:58,959 --> 00:04:01,840
then they got uh yeah the dr drafts that

93
00:04:01,840 --> 00:04:04,159
are presented this meeting

94
00:04:04,159 --> 00:04:06,720
a gmp mld proxy yang

95
00:04:06,720 --> 00:04:08,959
we probably requested publication of

96
00:04:08,959 --> 00:04:11,200
that

97
00:04:11,439 --> 00:04:13,120
um

98
00:04:13,120 --> 00:04:15,439
since more drafts here like the the

99
00:04:15,439 --> 00:04:17,680
packing drafts we also requested

100
00:04:17,680 --> 00:04:18,440
publication

101
00:04:18,440 --> 00:04:19,759
[Music]

102
00:04:19,759 --> 00:04:21,120
um

103
00:04:21,120 --> 00:04:23,600
a few drafts not presented this meeting

104
00:04:23,600 --> 00:04:24,720
we need to

105
00:04:24,720 --> 00:04:26,080
look into the

106
00:04:26,080 --> 00:04:29,440
igmp base again but yeah nothing this

107
00:04:29,440 --> 00:04:31,759
meeting

108
00:04:31,759 --> 00:04:33,919
there's also an elite draft that got

109
00:04:33,919 --> 00:04:36,240
adopted that is not being discussed and

110
00:04:36,240 --> 00:04:37,600
um

111
00:04:37,600 --> 00:04:38,720
the po

112
00:04:38,720 --> 00:04:40,160
point point

113
00:04:40,160 --> 00:04:42,320
point to multi-point policy ping will be

114
00:04:42,320 --> 00:04:44,479
discussed

115
00:04:44,479 --> 00:04:47,919
that's that's our status

116
00:04:47,919 --> 00:04:51,640
any comments on this

117
00:04:51,640 --> 00:04:56,820
[Music]

118
00:04:56,960 --> 00:04:58,639
there is someone i'm hearing like a

119
00:04:58,639 --> 00:05:00,320
buzzing i don't know if you're trying to

120
00:05:00,320 --> 00:05:03,280
say anything or

121
00:05:05,039 --> 00:05:07,039
yeah no idea just ignore until it gets

122
00:05:07,039 --> 00:05:08,320
worse and i'll

123
00:05:08,320 --> 00:05:10,080
have no idea where to do that

124
00:05:10,080 --> 00:05:11,039
yeah

125
00:05:11,039 --> 00:05:15,280
okay um so shall we just uh

126
00:05:15,280 --> 00:05:17,759
start with our first

127
00:05:17,759 --> 00:05:19,919
first presentation

128
00:05:19,919 --> 00:05:23,810
let's do if sandy's available let's go

129
00:05:23,810 --> 00:05:27,370
[Music]

130
00:05:33,370 --> 00:05:36,829
[Music]

131
00:05:36,960 --> 00:05:39,039
let's start with him

132
00:05:39,039 --> 00:05:41,039
he's on both drafts

133
00:05:41,039 --> 00:05:42,720
yeah

134
00:05:42,720 --> 00:05:45,280
yeah let's start with um

135
00:05:45,280 --> 00:05:48,800
the second so you pull my

136
00:05:48,800 --> 00:05:52,120
by the time

137
00:05:52,560 --> 00:05:55,120
yeah so i think you should be able to

138
00:05:55,120 --> 00:05:57,600
control your own slides and if you want

139
00:05:57,600 --> 00:05:59,440
to but let's see

140
00:05:59,440 --> 00:06:01,280
no you you you can

141
00:06:01,280 --> 00:06:04,159
present that's right

142
00:06:04,720 --> 00:06:07,680
yeah well i mean i think anyway

143
00:06:07,680 --> 00:06:10,919
let's see

144
00:06:24,160 --> 00:06:27,160
ready

145
00:06:34,800 --> 00:06:37,440
so we can go to the first slide

146
00:06:37,440 --> 00:06:40,000
yeah so yeah just just tell me when to

147
00:06:40,000 --> 00:06:42,479
when to go to next yeah

148
00:06:42,479 --> 00:06:44,719
sure

149
00:06:45,600 --> 00:06:48,960
so good morning good afternoon guys so

150
00:06:48,960 --> 00:06:51,280
the first first thing is to talk about

151
00:06:51,280 --> 00:06:53,360
the problem statement

152
00:06:53,360 --> 00:06:56,960
so this basically our current pim rfc it

153
00:06:56,960 --> 00:07:00,160
talks about how to elect a pimdia

154
00:07:00,160 --> 00:07:01,360
in the land

155
00:07:01,360 --> 00:07:03,919
and in this case we are showing that r1

156
00:07:03,919 --> 00:07:06,080
is the dr and it could be based on ip

157
00:07:06,080 --> 00:07:08,160
address or based on

158
00:07:08,160 --> 00:07:10,800
its prior configured priority

159
00:07:10,800 --> 00:07:13,039
now what happens that when there is any

160
00:07:13,039 --> 00:07:16,800
failure and let's consider that r1 fails

161
00:07:16,800 --> 00:07:18,960
amount of time it is going to take where

162
00:07:18,960 --> 00:07:22,080
r2 rr3 is going to take over as a new dr

163
00:07:22,080 --> 00:07:24,319
it depends on multiple factors

164
00:07:24,319 --> 00:07:26,400
and some of the factors are first thing

165
00:07:26,400 --> 00:07:28,800
is to detect the failure how fast we are

166
00:07:28,800 --> 00:07:31,759
able to detect that there is a failure

167
00:07:31,759 --> 00:07:33,919
and then depending on the hardware

168
00:07:33,919 --> 00:07:36,080
capability how much time we are taking

169
00:07:36,080 --> 00:07:38,160
to reprogram the routes

170
00:07:38,160 --> 00:07:40,160
and then how much time we are taking to

171
00:07:40,160 --> 00:07:42,240
rebuild the tree and again rebuilding

172
00:07:42,240 --> 00:07:45,440
the tree will totally depend on how

173
00:07:45,440 --> 00:07:48,160
diverse your network is

174
00:07:48,160 --> 00:07:48,879
so

175
00:07:48,879 --> 00:07:50,960
there are many deployments where these

176
00:07:50,960 --> 00:07:53,120
kind of mechanism doesn't work pretty

177
00:07:53,120 --> 00:07:53,919
well

178
00:07:53,919 --> 00:07:56,639
and they don't want

179
00:07:56,639 --> 00:07:59,039
any downtime because in this case if you

180
00:07:59,039 --> 00:08:00,080
see

181
00:08:00,080 --> 00:08:02,560
worst case if we don't have bfd and we

182
00:08:02,560 --> 00:08:05,520
just rely on hellos we are going we may

183
00:08:05,520 --> 00:08:08,639
take up two minutes to even detect that

184
00:08:08,639 --> 00:08:10,240
dr is down

185
00:08:10,240 --> 00:08:11,120
so

186
00:08:11,120 --> 00:08:13,120
there was a need for some kind of

187
00:08:13,120 --> 00:08:14,879
mechanism some protection mechanism

188
00:08:14,879 --> 00:08:17,680
where we could really do fast failover

189
00:08:17,680 --> 00:08:19,919
and that is where this draft comes into

190
00:08:19,919 --> 00:08:22,639
the picture that how can we come up with

191
00:08:22,639 --> 00:08:26,000
a backup dr which which can keep things

192
00:08:26,000 --> 00:08:28,000
ready in case of failure we can go to

193
00:08:28,000 --> 00:08:30,560
the next slide

194
00:08:35,120 --> 00:08:37,279
now coming coming to the backup dr

195
00:08:37,279 --> 00:08:39,279
election how how exactly we should be

196
00:08:39,279 --> 00:08:41,760
doing backup dr election so what this

197
00:08:41,760 --> 00:08:43,760
draft talks about that

198
00:08:43,760 --> 00:08:46,720
to have a very simple mechanism so i'm i

199
00:08:46,720 --> 00:08:50,399
have just pasted from 7761

200
00:08:50,399 --> 00:08:52,880
that today our

201
00:08:52,880 --> 00:08:55,680
dr election mechanism is based on our

202
00:08:55,680 --> 00:08:57,040
priority

203
00:08:57,040 --> 00:08:58,000
and

204
00:08:58,000 --> 00:09:01,200
our ip address so so everyone whether it

205
00:09:01,200 --> 00:09:04,000
is r1 r2 and r3 there are exact same

206
00:09:04,000 --> 00:09:07,200
algorithm to identify whether

207
00:09:07,200 --> 00:09:08,720
i am

208
00:09:08,720 --> 00:09:10,880
eligible to be dr or not

209
00:09:10,880 --> 00:09:13,120
so what i am saying instead of doing

210
00:09:13,120 --> 00:09:14,959
some extra

211
00:09:14,959 --> 00:09:17,200
signaling between these routers

212
00:09:17,200 --> 00:09:19,760
why not to run same algorithm and now

213
00:09:19,760 --> 00:09:22,080
you find if you are the second best so

214
00:09:22,080 --> 00:09:24,480
in this case when r1 runs the algorithm

215
00:09:24,480 --> 00:09:27,920
r1 knows that r1 r2 and r3 all three are

216
00:09:27,920 --> 00:09:28,959
in the lan

217
00:09:28,959 --> 00:09:32,160
and priorities are 190 and 80.

218
00:09:32,160 --> 00:09:36,320
so r1 picks itself as a dr now when r2

219
00:09:36,320 --> 00:09:37,279
is doing

220
00:09:37,279 --> 00:09:39,200
running the same algorithm it knows that

221
00:09:39,200 --> 00:09:42,080
it is the second best router so in case

222
00:09:42,080 --> 00:09:44,480
you are second best router you

223
00:09:44,480 --> 00:09:47,120
definitely can qualify for backup drlx

224
00:09:47,120 --> 00:09:48,320
backup dr

225
00:09:48,320 --> 00:09:50,480
now the role of backup dr

226
00:09:50,480 --> 00:09:53,839
is to build the tree all all the way to

227
00:09:53,839 --> 00:09:57,040
source and you may backup dr will be

228
00:09:57,040 --> 00:09:58,720
getting the traffic as well but backup

229
00:09:58,720 --> 00:10:00,720
dr is not going to forward it to the

230
00:10:00,720 --> 00:10:01,680
access

231
00:10:01,680 --> 00:10:04,160
and backup dr is going to forward it to

232
00:10:04,160 --> 00:10:06,560
access only when r1 fails

233
00:10:06,560 --> 00:10:09,120
it is it is kind of when you change your

234
00:10:09,120 --> 00:10:11,839
rule from bdr to dr that is when you

235
00:10:11,839 --> 00:10:14,079
start forwarding the traffic the benefit

236
00:10:14,079 --> 00:10:16,160
of this mechanism is

237
00:10:16,160 --> 00:10:18,880
now all the states are already ready as

238
00:10:18,880 --> 00:10:21,040
soon as you detect the failure maybe

239
00:10:21,040 --> 00:10:23,279
there will be bfd running or some other

240
00:10:23,279 --> 00:10:25,600
mechanism where you can really detect

241
00:10:25,600 --> 00:10:27,760
the failure very fast and you will be

242
00:10:27,760 --> 00:10:29,519
immediately able to start following

243
00:10:29,519 --> 00:10:32,959
traffic to the access so this kind of

244
00:10:32,959 --> 00:10:34,880
provides a mechanism where you will have

245
00:10:34,880 --> 00:10:36,720
minimum traffic loss

246
00:10:36,720 --> 00:10:38,800
so this is the mechanism of

247
00:10:38,800 --> 00:10:41,200
backup dr election

248
00:10:41,200 --> 00:10:44,200
next

249
00:10:46,160 --> 00:10:48,320
so that was one part of draft the second

250
00:10:48,320 --> 00:10:50,399
part of draft i think which we started

251
00:10:50,399 --> 00:10:53,440
uh discussing over email is stick idea

252
00:10:53,440 --> 00:10:57,120
behavior and why do we need stick idea

253
00:10:57,120 --> 00:10:58,000
so

254
00:10:58,000 --> 00:11:00,160
again there are deployments where they

255
00:11:00,160 --> 00:11:02,160
don't want to have dr

256
00:11:02,160 --> 00:11:04,720
election happening in case of any new

257
00:11:04,720 --> 00:11:07,360
order comes into the network it could be

258
00:11:07,360 --> 00:11:09,519
accidental conflict or it could be

259
00:11:09,519 --> 00:11:11,279
maybe customer is really trying to bring

260
00:11:11,279 --> 00:11:13,680
up a

261
00:11:13,680 --> 00:11:16,000
router which was earlier which was up

262
00:11:16,000 --> 00:11:18,320
and running which went down and now it's

263
00:11:18,320 --> 00:11:20,160
coming up back

264
00:11:20,160 --> 00:11:23,600
in in this these cases you don't want

265
00:11:23,600 --> 00:11:26,480
your dr to change and the reason for

266
00:11:26,480 --> 00:11:28,880
that would be again the kind of churn

267
00:11:28,880 --> 00:11:30,640
which you are going to see in your

268
00:11:30,640 --> 00:11:31,760
network

269
00:11:31,760 --> 00:11:34,240
so just by just because of one new

270
00:11:34,240 --> 00:11:36,480
router coming into the network or some

271
00:11:36,480 --> 00:11:37,060
router

272
00:11:37,060 --> 00:11:38,160
[Music]

273
00:11:38,160 --> 00:11:41,040
kind of went down and came back up you

274
00:11:41,040 --> 00:11:43,920
don't want so much churn to be happening

275
00:11:43,920 --> 00:11:46,320
in network and that is where there are

276
00:11:46,320 --> 00:11:48,000
many

277
00:11:48,000 --> 00:11:49,600
customers who are looking for a sticky

278
00:11:49,600 --> 00:11:52,480
dr functionality where once one router

279
00:11:52,480 --> 00:11:54,399
has been elected as a dr it should just

280
00:11:54,399 --> 00:11:55,760
stick to

281
00:11:55,760 --> 00:11:57,279
the whole network so to stick to that

282
00:11:57,279 --> 00:11:59,680
particular router unless it fails

283
00:11:59,680 --> 00:12:02,079
and that is where a sticky dr

284
00:12:02,079 --> 00:12:06,079
requirement comes next slide

285
00:12:07,120 --> 00:12:09,040
now sticky dr

286
00:12:09,040 --> 00:12:10,800
procedures again

287
00:12:10,800 --> 00:12:13,120
we were thinking about it that how

288
00:12:13,120 --> 00:12:15,839
how can we do with very minimum protocol

289
00:12:15,839 --> 00:12:16,959
extension

290
00:12:16,959 --> 00:12:17,839
so

291
00:12:17,839 --> 00:12:20,240
the one of the step which looks pretty

292
00:12:20,240 --> 00:12:22,560
straightforward and easy to do is so

293
00:12:22,560 --> 00:12:25,360
first first step is let's have dr

294
00:12:25,360 --> 00:12:27,839
election as it was happening today so in

295
00:12:27,839 --> 00:12:31,680
this case r1 r2 and r3 they have

296
00:12:31,680 --> 00:12:34,160
three priorities configured so priority

297
00:12:34,160 --> 00:12:36,480
100 is the one who is going to take over

298
00:12:36,480 --> 00:12:37,440
as a

299
00:12:37,440 --> 00:12:40,160
dr so there is no change in dr election

300
00:12:40,160 --> 00:12:43,199
procedure next step

301
00:12:45,519 --> 00:12:48,240
and now this is this is where something

302
00:12:48,240 --> 00:12:51,200
new we are trying to define that once

303
00:12:51,200 --> 00:12:53,680
you have taken over as

304
00:12:53,680 --> 00:12:55,040
dr

305
00:12:55,040 --> 00:12:57,519
we are looking at

306
00:12:57,519 --> 00:13:02,399
r1 now announces its priority as mdr max

307
00:13:02,399 --> 00:13:05,360
when i say pdr max so basically

308
00:13:05,360 --> 00:13:07,760
we can have a reserved number our

309
00:13:07,760 --> 00:13:10,240
reserve priority which is really the max

310
00:13:10,240 --> 00:13:11,600
value which

311
00:13:11,600 --> 00:13:14,240
should not be user configurable value

312
00:13:14,240 --> 00:13:15,600
and

313
00:13:15,600 --> 00:13:18,000
it is kind of a

314
00:13:18,000 --> 00:13:20,639
r1 is getting a sigma 4 that

315
00:13:20,639 --> 00:13:24,160
now r1 gets that max value r1 starts

316
00:13:24,160 --> 00:13:26,959
announcing its own priority as this

317
00:13:26,959 --> 00:13:28,639
highest priority

318
00:13:28,639 --> 00:13:31,200
now what benefit we are going to get out

319
00:13:31,200 --> 00:13:32,079
of it

320
00:13:32,079 --> 00:13:35,040
when r1 starts sending this mdr max

321
00:13:35,040 --> 00:13:37,519
priority no matter who is coming or who

322
00:13:37,519 --> 00:13:39,440
is going in the network it is never

323
00:13:39,440 --> 00:13:42,160
going to change the dr behavior it is

324
00:13:42,160 --> 00:13:45,600
not going to cause a dr reelection but

325
00:13:45,600 --> 00:13:47,920
to remember that even though r1 has been

326
00:13:47,920 --> 00:13:50,160
configured with priority 100 now it is

327
00:13:50,160 --> 00:13:53,839
announcing a special dr priority

328
00:13:53,839 --> 00:13:56,160
next

329
00:13:57,519 --> 00:13:58,399
now

330
00:13:58,399 --> 00:14:01,600
when sticky dr fails or the router which

331
00:14:01,600 --> 00:14:04,240
was dr earlier fails so what is going to

332
00:14:04,240 --> 00:14:06,480
happen so in this case

333
00:14:06,480 --> 00:14:08,880
when r2 r3 detect that there is a

334
00:14:08,880 --> 00:14:10,560
failure they are going to

335
00:14:10,560 --> 00:14:14,320
rerun dr election and if there was a vdr

336
00:14:14,320 --> 00:14:16,560
vdr will automatically take over

337
00:14:16,560 --> 00:14:19,680
and now r2 is the one who is going to

338
00:14:19,680 --> 00:14:21,120
start sending

339
00:14:21,120 --> 00:14:23,680
this new dr priority

340
00:14:23,680 --> 00:14:25,360
at this point of time what is going to

341
00:14:25,360 --> 00:14:27,920
happen even if r1 comes back so r1

342
00:14:27,920 --> 00:14:30,880
priority is configured priority is 100

343
00:14:30,880 --> 00:14:34,639
but r2 is announcing pimd or max which

344
00:14:34,639 --> 00:14:37,040
means that r1 will never take over

345
00:14:37,040 --> 00:14:39,680
because r1 is always going to run its dr

346
00:14:39,680 --> 00:14:41,120
algorithm

347
00:14:41,120 --> 00:14:45,839
against this drmax priority

348
00:14:46,079 --> 00:14:48,479
next

349
00:14:49,360 --> 00:14:51,920
so implementation wise yes this this

350
00:14:51,920 --> 00:14:54,560
particular sticky dr behavior has been

351
00:14:54,560 --> 00:14:57,600
implemented and deployed as well

352
00:14:57,600 --> 00:14:59,839
next

353
00:15:01,360 --> 00:15:03,360
and uh with respect to ayana

354
00:15:03,360 --> 00:15:04,880
consideration

355
00:15:04,880 --> 00:15:06,480
i was thinking and maybe we can

356
00:15:06,480 --> 00:15:08,639
definitely discuss whether this should

357
00:15:08,639 --> 00:15:09,680
be

358
00:15:09,680 --> 00:15:13,040
just a user driven approach or we can

359
00:15:13,040 --> 00:15:15,680
reserve some range of values

360
00:15:15,680 --> 00:15:16,880
from the

361
00:15:16,880 --> 00:15:19,040
india so mdr is if i remember correctly

362
00:15:19,040 --> 00:15:21,920
it's 32 bit value so

363
00:15:21,920 --> 00:15:23,680
there was a thought that we can reserve

364
00:15:23,680 --> 00:15:25,279
some

365
00:15:25,279 --> 00:15:27,920
uh towards end some values which you

366
00:15:27,920 --> 00:15:30,399
should not be allowed to configure and

367
00:15:30,399 --> 00:15:32,959
we will use one of the number as a max

368
00:15:32,959 --> 00:15:34,639
dr value

369
00:15:34,639 --> 00:15:37,519
and the second second thing which needs

370
00:15:37,519 --> 00:15:40,560
to be discussed we really should we even

371
00:15:40,560 --> 00:15:41,519
send

372
00:15:41,519 --> 00:15:43,920
any flag with hello saying that i

373
00:15:43,920 --> 00:15:46,240
support pim stick idea because if you

374
00:15:46,240 --> 00:15:48,800
see in this behave this current approach

375
00:15:48,800 --> 00:15:51,600
i don't think even any

376
00:15:51,600 --> 00:15:54,160
capability exchange is needed because if

377
00:15:54,160 --> 00:15:56,399
there are there are other routers who

378
00:15:56,399 --> 00:15:58,959
don't support sticky tr

379
00:15:58,959 --> 00:16:00,959
if they are not dr

380
00:16:00,959 --> 00:16:03,600
at first time they will never take over

381
00:16:03,600 --> 00:16:05,519
as

382
00:16:05,519 --> 00:16:07,519
dr because the

383
00:16:07,519 --> 00:16:08,639
whoever

384
00:16:08,639 --> 00:16:10,800
becomes a dr and supports ticket here

385
00:16:10,800 --> 00:16:13,519
will start announcing this max value

386
00:16:13,519 --> 00:16:15,360
and this max value will always be

387
00:16:15,360 --> 00:16:17,199
honored

388
00:16:17,199 --> 00:16:19,279
so i don't think there is really need

389
00:16:19,279 --> 00:16:21,680
for hello unless working group thinks

390
00:16:21,680 --> 00:16:23,600
that there are some cases where

391
00:16:23,600 --> 00:16:26,800
announcing option capability option in

392
00:16:26,800 --> 00:16:29,120
hello is going to be good

393
00:16:29,120 --> 00:16:30,639
so i think that's all

394
00:16:30,639 --> 00:16:32,000
let me go to next slide if i have

395
00:16:32,000 --> 00:16:33,839
anything else

396
00:16:33,839 --> 00:16:35,040
yeah

397
00:16:35,040 --> 00:16:38,240
so if there is any question

398
00:16:42,959 --> 00:16:45,519
uh i have just a single question here

399
00:16:45,519 --> 00:16:48,880
you are proposing you seeking ctdr or

400
00:16:48,880 --> 00:16:51,519
how about your bdr 5 if you have another

401
00:16:51,519 --> 00:16:53,120
router just come

402
00:16:53,120 --> 00:16:55,279
and then have a higher priority than the

403
00:16:55,279 --> 00:16:57,360
car with the pdr are you going to have

404
00:16:57,360 --> 00:17:00,720
the sticky bdr or not

405
00:17:00,720 --> 00:17:02,079
so i have

406
00:17:02,079 --> 00:17:04,640
i don't think there is a really need for

407
00:17:04,640 --> 00:17:07,839
a sticky bdr as well but if there is a

408
00:17:07,839 --> 00:17:10,400
if there is a real need i i don't see

409
00:17:10,400 --> 00:17:11,599
same

410
00:17:11,599 --> 00:17:13,760
same algorithm working for sticky bdr as

411
00:17:13,760 --> 00:17:16,160
well but in that case bdr has to as i

412
00:17:16,160 --> 00:17:19,760
said if we are reserving the range of

413
00:17:19,760 --> 00:17:23,359
max value then bdr has to be less than

414
00:17:23,359 --> 00:17:24,480
the dr

415
00:17:24,480 --> 00:17:26,160
that's all

416
00:17:26,160 --> 00:17:29,199
okay thank you

417
00:17:30,960 --> 00:17:33,840
sandy

418
00:17:38,160 --> 00:17:39,280
hello

419
00:17:39,280 --> 00:17:40,960
yeah yeah

420
00:17:40,960 --> 00:17:42,400
okay thank you

421
00:17:42,400 --> 00:17:44,480
my question is um

422
00:17:44,480 --> 00:17:45,679
i

423
00:17:45,679 --> 00:17:48,400
magmana for his presentation but i think

424
00:17:48,400 --> 00:17:49,120
that

425
00:17:49,120 --> 00:17:52,720
the contents described in the slides is

426
00:17:52,720 --> 00:17:54,240
not the same

427
00:17:54,240 --> 00:17:56,160
with the draft

428
00:17:56,160 --> 00:17:59,360
so i'm not sure on whether nankamana

429
00:17:59,360 --> 00:18:02,080
will update the draft to this solution

430
00:18:02,080 --> 00:18:03,440
or keep the

431
00:18:03,440 --> 00:18:06,559
draft as the same as the

432
00:18:06,559 --> 00:18:09,039
as exists

433
00:18:09,039 --> 00:18:09,760
yeah

434
00:18:09,760 --> 00:18:12,080
thanks for this point so yes draft is

435
00:18:12,080 --> 00:18:15,200
going to be updated

436
00:18:15,200 --> 00:18:16,480
okay

437
00:18:16,480 --> 00:18:18,880
thank you

438
00:18:26,640 --> 00:18:28,480
danny do you want to

439
00:18:28,480 --> 00:18:32,000
directly con present yourself

440
00:18:32,000 --> 00:18:33,360
yes

441
00:18:33,360 --> 00:18:34,799
may i

442
00:18:34,799 --> 00:18:37,120
yeah we can discuss the

443
00:18:37,120 --> 00:18:39,520
combined uh discussion after your

444
00:18:39,520 --> 00:18:41,679
presentation that the one question that

445
00:18:41,679 --> 00:18:44,160
moncomata didn't get answered however is

446
00:18:44,160 --> 00:18:48,640
the whole pmdr max value

447
00:18:48,640 --> 00:18:51,440
do we need to

448
00:18:51,440 --> 00:18:54,320
add that um

449
00:18:54,320 --> 00:18:57,840
so maybe we can discuss it at the end

450
00:18:57,840 --> 00:19:00,400
yeah go ahead

451
00:19:00,400 --> 00:19:02,000
okay

452
00:19:02,000 --> 00:19:04,080
uh hello everyone i'm sandyson from

453
00:19:04,080 --> 00:19:05,360
litty and

454
00:19:05,360 --> 00:19:07,840
this presentation is for the same

455
00:19:07,840 --> 00:19:12,000
background of makabana structure

456
00:19:12,000 --> 00:19:14,640
for pmdr improvement dropped this

457
00:19:14,640 --> 00:19:17,679
chapter has been adjusted

458
00:19:17,679 --> 00:19:20,320
according to eddie's suggestion

459
00:19:20,320 --> 00:19:22,960
since washington

460
00:19:22,960 --> 00:19:25,840
next please

461
00:19:29,679 --> 00:19:32,400
the problem statement is the same with

462
00:19:32,400 --> 00:19:33,679
magmala's

463
00:19:33,679 --> 00:19:35,679
pro presentation

464
00:19:35,679 --> 00:19:38,559
but i can

465
00:19:38,559 --> 00:19:39,600
repeat it

466
00:19:39,600 --> 00:19:43,120
maybe you can make it all clear and so

467
00:19:43,120 --> 00:19:44,880
according fc

468
00:19:44,880 --> 00:19:47,679
7761 the router has the highest the

469
00:19:47,679 --> 00:19:51,039
priority will be the dr so if working dr

470
00:19:51,039 --> 00:19:53,039
or the link between the dr and the

471
00:19:53,039 --> 00:19:57,440
landfills anudia must be elected

472
00:19:57,440 --> 00:19:59,520
another case is that if a new router

473
00:19:59,520 --> 00:20:02,080
with a higher priority connects in a

474
00:20:02,080 --> 00:20:04,240
working lane the new router will be the

475
00:20:04,240 --> 00:20:05,120
via

476
00:20:05,120 --> 00:20:08,080
so the the there is packet losing during

477
00:20:08,080 --> 00:20:09,679
the switch

478
00:20:09,679 --> 00:20:12,320
next please

479
00:20:16,640 --> 00:20:19,919
so according to the problem statement we

480
00:20:19,919 --> 00:20:22,240
know that it makes the network more

481
00:20:22,240 --> 00:20:25,679
stable if we can keep their unchanging

482
00:20:25,679 --> 00:20:27,840
and we may also call it a sticky

483
00:20:27,840 --> 00:20:29,280
solution

484
00:20:29,280 --> 00:20:32,640
and a new bdr rule is needed the new bdr

485
00:20:32,640 --> 00:20:35,840
can be in standby mode and it takes over

486
00:20:35,840 --> 00:20:38,640
the dr's responsibility in case of drca

487
00:20:38,640 --> 00:20:39,520
note

488
00:20:39,520 --> 00:20:44,360
forward flow next please

489
00:20:48,960 --> 00:20:51,520
and so the solution defined in this

490
00:20:51,520 --> 00:20:54,880
draft introduces two new options in pim

491
00:20:54,880 --> 00:20:58,320
hollow message that's the difference

492
00:20:58,320 --> 00:21:01,120
between this structure and the mechanics

493
00:21:01,120 --> 00:21:05,440
draft they are the two new options are

494
00:21:05,440 --> 00:21:07,840
they are option and the pdr option

495
00:21:07,840 --> 00:21:10,000
and this solution will change the

496
00:21:10,000 --> 00:21:13,320
priority carrying function defined in fc

497
00:21:13,320 --> 00:21:15,280
7761

498
00:21:15,280 --> 00:21:17,919
whenever a router which supports

499
00:21:17,919 --> 00:21:20,640
supports this solution starts to work in

500
00:21:20,640 --> 00:21:22,640
a lan it should send the pin parallel

501
00:21:22,640 --> 00:21:26,960
message with the two options set to zero

502
00:21:26,960 --> 00:21:29,760
when hello hold the timer expires the

503
00:21:29,760 --> 00:21:32,480
router receives hello message from other

504
00:21:32,480 --> 00:21:36,159
router if there any monitor checks the

505
00:21:36,159 --> 00:21:39,120
hello message from weldon neighbors if

506
00:21:39,120 --> 00:21:41,679
it finds that there is their option set

507
00:21:41,679 --> 00:21:45,520
to non-zero value it won't elect itself

508
00:21:45,520 --> 00:21:49,520
sdr even if it has a higher priority but

509
00:21:49,520 --> 00:21:50,400
it

510
00:21:50,400 --> 00:21:52,960
still can be the video if it has the

511
00:21:52,960 --> 00:21:55,280
highest priority among the routers

512
00:21:55,280 --> 00:21:58,880
except there if there is no existed deer

513
00:21:58,880 --> 00:22:01,120
in the land then router has the highest

514
00:22:01,120 --> 00:22:03,039
priority will be the fear

515
00:22:03,039 --> 00:22:04,960
in case there is a router since the

516
00:22:04,960 --> 00:22:07,760
hollow based message without a dr or dr

517
00:22:07,760 --> 00:22:10,320
option then all the routers in the land

518
00:22:10,320 --> 00:22:13,559
must use the function defined in

519
00:22:13,559 --> 00:22:16,640
fc761 to elect the deer

520
00:22:16,640 --> 00:22:19,440
the vr will be instead by mode the

521
00:22:19,440 --> 00:22:21,520
button not forwarding through until it

522
00:22:21,520 --> 00:22:23,760
finds at the dear count forward flow

523
00:22:23,760 --> 00:22:27,158
next please

524
00:22:29,440 --> 00:22:31,840
and so let's see what happened when all

525
00:22:31,840 --> 00:22:34,559
the router starts working that all the

526
00:22:34,559 --> 00:22:36,720
routers send the team hollow with the

527
00:22:36,720 --> 00:22:39,919
drpr option set of zero and they also

528
00:22:39,919 --> 00:22:42,400
send their their priority

529
00:22:42,400 --> 00:22:44,799
when the hollow hold timer

530
00:22:44,799 --> 00:22:46,880
experts the router with the highest

531
00:22:46,880 --> 00:22:49,919
priority will be elected and the bdr

532
00:22:49,919 --> 00:22:52,000
will be elected also

533
00:22:52,000 --> 00:22:54,559
all the daughters the hello message with

534
00:22:54,559 --> 00:22:57,440
dr bdr option set

535
00:22:57,440 --> 00:22:59,760
and let's see the second situation there

536
00:22:59,760 --> 00:23:02,320
is a working dr in the land already and

537
00:23:02,320 --> 00:23:04,720
rotor with a high priority connects in

538
00:23:04,720 --> 00:23:07,120
the net the new router sends the team

539
00:23:07,120 --> 00:23:09,760
hollow message with drbdr options set to

540
00:23:09,760 --> 00:23:12,559
zero and it also sends the

541
00:23:12,559 --> 00:23:15,840
their priority when the hello held timer

542
00:23:15,840 --> 00:23:18,480
expires the new router receives the

543
00:23:18,480 --> 00:23:21,679
hello message with dr option set to the

544
00:23:21,679 --> 00:23:24,480
working dr's at best it only replaces

545
00:23:24,480 --> 00:23:26,080
the working deer

546
00:23:26,080 --> 00:23:29,600
but it will be the bdr if it has highest

547
00:23:29,600 --> 00:23:31,440
priority among all the

548
00:23:31,440 --> 00:23:34,320
other routers except working there

549
00:23:34,320 --> 00:23:37,120
finally all the routers in the name will

550
00:23:37,120 --> 00:23:38,799
send the hollow message with the same

551
00:23:38,799 --> 00:23:42,880
value of dr on the bdr option set

552
00:23:42,880 --> 00:23:45,520
next please

553
00:23:48,400 --> 00:23:51,360
once the video is elected the tier will

554
00:23:51,360 --> 00:23:54,080
join the multicast tree but it won't

555
00:23:54,080 --> 00:23:56,720
forward the flow until it finds that the

556
00:23:56,720 --> 00:23:59,039
deal account for the float the video can

557
00:23:59,039 --> 00:24:02,159
monitor the dr by bfd or other detection

558
00:24:02,159 --> 00:24:03,600
methods

559
00:24:03,600 --> 00:24:05,840
next

560
00:24:09,279 --> 00:24:11,840
and so this is a summary of this

561
00:24:11,840 --> 00:24:14,880
solution it has a bdr role to reduce the

562
00:24:14,880 --> 00:24:18,000
time of multicast tree rebuild

563
00:24:18,000 --> 00:24:20,640
the sticky dr and the fastest switching

564
00:24:20,640 --> 00:24:23,600
of video can minimize the packet loss

565
00:24:23,600 --> 00:24:26,159
the convergence time of dr election will

566
00:24:26,159 --> 00:24:28,640
be one hollow hold time

567
00:24:28,640 --> 00:24:31,360
and the solution has explicit signaling

568
00:24:31,360 --> 00:24:34,720
because the two dr bdr options

569
00:24:34,720 --> 00:24:37,600
are defined in hollow message

570
00:24:37,600 --> 00:24:39,440
and the election result is certain

571
00:24:39,440 --> 00:24:41,760
because either the router which has the

572
00:24:41,760 --> 00:24:44,400
highest priority is elected

573
00:24:44,400 --> 00:24:46,400
when all the router starts to work in

574
00:24:46,400 --> 00:24:48,880
the lane all the working deal would be

575
00:24:48,880 --> 00:24:50,000
replaced

576
00:24:50,000 --> 00:24:52,960
replaced even if a new router connects

577
00:24:52,960 --> 00:24:55,360
the lamp with a higher priority

578
00:24:55,360 --> 00:24:59,520
this solution is compatible with fc7761

579
00:24:59,520 --> 00:25:01,880
and the function defined in

580
00:25:01,880 --> 00:25:04,720
fc7761 is used once a router sends a

581
00:25:04,720 --> 00:25:09,279
hello message without a new option

582
00:25:09,279 --> 00:25:12,000
okay that's all

583
00:25:12,000 --> 00:25:14,240
so

584
00:25:14,640 --> 00:25:17,279
so now i think we can talk about the

585
00:25:17,279 --> 00:25:19,520
difference between the

586
00:25:19,520 --> 00:25:21,760
the two solutions

587
00:25:21,760 --> 00:25:22,640
yeah

588
00:25:22,640 --> 00:25:25,919
i in my opinion the main difference

589
00:25:25,919 --> 00:25:27,840
between the two

590
00:25:27,840 --> 00:25:29,679
methods is that

591
00:25:29,679 --> 00:25:32,640
pimdia the improvements has

592
00:25:32,640 --> 00:25:35,590
explicit signaling and the the

593
00:25:35,590 --> 00:25:36,720
[Music]

594
00:25:36,720 --> 00:25:41,200
fun methods defining bdr draft has no

595
00:25:41,200 --> 00:25:42,480
explicit

596
00:25:42,480 --> 00:25:45,840
signaling accepted the max priority

597
00:25:45,840 --> 00:25:49,760
value so i'm not very sure if

598
00:25:49,760 --> 00:25:50,559
the

599
00:25:50,559 --> 00:25:51,840
max

600
00:25:51,840 --> 00:25:54,640
priority value has been used

601
00:25:54,640 --> 00:25:56,960
in somewhere or

602
00:25:56,960 --> 00:26:00,559
i'm not very sure and but uh i think the

603
00:26:00,559 --> 00:26:03,200
experience with the deployment will to

604
00:26:03,200 --> 00:26:06,240
help with it

605
00:26:07,360 --> 00:26:09,200
so we have these two drafts that we've

606
00:26:09,200 --> 00:26:12,240
adopted as a working group the idea is

607
00:26:12,240 --> 00:26:15,279
valid we think it's a worthwhile

608
00:26:15,279 --> 00:26:18,159
effort to be working on and

609
00:26:18,159 --> 00:26:20,080
we understood the different solutions

610
00:26:20,080 --> 00:26:22,559
which is great so

611
00:26:22,559 --> 00:26:24,960
we either continue to progress these

612
00:26:24,960 --> 00:26:26,880
drafts on their own and update them like

613
00:26:26,880 --> 00:26:28,400
mankamana said he's gonna update his

614
00:26:28,400 --> 00:26:30,559
draft i guess the problem is that it

615
00:26:30,559 --> 00:26:31,840
seems like there's

616
00:26:31,840 --> 00:26:34,240
continuing creeping

617
00:26:34,240 --> 00:26:36,799
overlap between the giraffes so we need

618
00:26:36,799 --> 00:26:38,320
to

619
00:26:38,320 --> 00:26:40,880
try to avoid that do the would the

620
00:26:40,880 --> 00:26:42,080
authors

621
00:26:42,080 --> 00:26:43,919
of the different giraffes prefer to keep

622
00:26:43,919 --> 00:26:47,960
them separate is

623
00:26:52,000 --> 00:26:55,200
my opinion the non-stocky methods

624
00:26:55,200 --> 00:26:58,000
defined in video draft is

625
00:26:58,000 --> 00:27:01,279
useful and it can be used

626
00:27:01,279 --> 00:27:03,440
in the network

627
00:27:03,440 --> 00:27:07,360
but it has no explicit secondary

628
00:27:07,360 --> 00:27:09,200
but it still works

629
00:27:09,200 --> 00:27:12,720
and the the methods defined in existing

630
00:27:12,720 --> 00:27:14,400
bdr structure

631
00:27:14,400 --> 00:27:16,799
cannot be used because

632
00:27:16,799 --> 00:27:19,679
there are as many problems with it i

633
00:27:19,679 --> 00:27:21,120
also stand up

634
00:27:21,120 --> 00:27:23,840
the questions in the mailing list apart

635
00:27:23,840 --> 00:27:27,360
from today's math minus presentation

636
00:27:27,360 --> 00:27:28,799
we know that

637
00:27:28,799 --> 00:27:32,240
the solution the sticky solution for vdr

638
00:27:32,240 --> 00:27:33,679
is changed

639
00:27:33,679 --> 00:27:38,240
so i think only we can discuss is

640
00:27:38,240 --> 00:27:39,279
if we

641
00:27:39,279 --> 00:27:44,240
whether we use explicit signaling or

642
00:27:44,240 --> 00:27:45,840
no x

643
00:27:45,840 --> 00:27:47,120
explicit

644
00:27:47,120 --> 00:27:50,080
secondly yeah

645
00:27:50,080 --> 00:27:53,360
yeah i feel uh the main thing really is

646
00:27:53,360 --> 00:27:55,840
that we i think we agree that we need a

647
00:27:55,840 --> 00:27:58,399
solution for sticky they are

648
00:27:58,399 --> 00:28:00,080
and that's the main place i think where

649
00:28:00,080 --> 00:28:02,640
these two you know documents both have a

650
00:28:02,640 --> 00:28:04,640
solution and they are clearly very

651
00:28:04,640 --> 00:28:06,480
different

652
00:28:06,480 --> 00:28:07,520
so

653
00:28:07,520 --> 00:28:09,520
ideally i would like to have a technical

654
00:28:09,520 --> 00:28:12,000
discussion like yeah like the email you

655
00:28:12,000 --> 00:28:15,120
sent sadly to the mailing list

656
00:28:15,120 --> 00:28:17,840
to to find out which which method

657
00:28:17,840 --> 00:28:19,679
actually is best you know what what are

658
00:28:19,679 --> 00:28:22,000
the pros and cons with each other the

659
00:28:22,000 --> 00:28:23,440
methods

660
00:28:23,440 --> 00:28:25,440
uh is there a need for both for them or

661
00:28:25,440 --> 00:28:27,679
is is one better than the other in some

662
00:28:27,679 --> 00:28:28,960
way

663
00:28:28,960 --> 00:28:32,640
um but if we pick a solution then yeah

664
00:28:32,640 --> 00:28:34,480
the question is

665
00:28:34,480 --> 00:28:37,279
do we want to have a

666
00:28:37,279 --> 00:28:38,960
yeah i guess we want to have a draft

667
00:28:38,960 --> 00:28:40,000
with

668
00:28:40,000 --> 00:28:43,039
just one sticky draft from sticky dr

669
00:28:43,039 --> 00:28:45,679
solution right that the working group

670
00:28:45,679 --> 00:28:47,679
picks um

671
00:28:47,679 --> 00:28:49,840
or if you want two solutions of course

672
00:28:49,840 --> 00:28:51,760
it could be two different drafts i know

673
00:28:51,760 --> 00:28:53,120
um

674
00:28:53,120 --> 00:28:54,640
but we need to have a technical

675
00:28:54,640 --> 00:28:56,320
discussion i think probably on the

676
00:28:56,320 --> 00:28:59,639
mailing lists

677
00:29:00,159 --> 00:29:02,080
but yeah with all these with all of your

678
00:29:02,080 --> 00:29:04,000
offers working on this i am also

679
00:29:04,000 --> 00:29:06,240
wondering though if it if it makes sense

680
00:29:06,240 --> 00:29:09,520
to have possibly a

681
00:29:09,520 --> 00:29:13,279
um i don't know um merge the documents

682
00:29:13,279 --> 00:29:15,600
or have a new draft whatever with all

683
00:29:15,600 --> 00:29:17,760
the offers together or

684
00:29:17,760 --> 00:29:19,679
that's that's a different matter

685
00:29:19,679 --> 00:29:21,039
i want to focus on the technical

686
00:29:21,039 --> 00:29:24,879
discussion perhaps on the mailing list

687
00:29:25,679 --> 00:29:27,520
and i think the time is up now for this

688
00:29:27,520 --> 00:29:29,679
one

689
00:29:30,799 --> 00:29:31,760
yeah

690
00:29:31,760 --> 00:29:34,720
i think we need to get going

691
00:29:34,720 --> 00:29:36,480
one thing though yeah we need to get

692
00:29:36,480 --> 00:29:38,559
something someone coming out the draft

693
00:29:38,559 --> 00:29:40,720
updated so that we have a good way of

694
00:29:40,720 --> 00:29:42,640
comparing the solutions and discussing

695
00:29:42,640 --> 00:29:45,520
them on the mailing list

696
00:29:46,320 --> 00:29:48,159
yes i will

697
00:29:48,159 --> 00:29:50,399
say

698
00:29:50,640 --> 00:29:52,480
okay all right

699
00:29:52,480 --> 00:29:55,360
thank you

700
00:29:55,360 --> 00:29:56,559
thank you

701
00:29:56,559 --> 00:29:59,039
yeah thanks

702
00:29:59,039 --> 00:30:03,360
so i guess uh uh just quickly stig or i

703
00:30:03,360 --> 00:30:05,600
will initiate a

704
00:30:05,600 --> 00:30:08,559
email on the list and then please start

705
00:30:08,559 --> 00:30:10,640
contributing to that so we can come to a

706
00:30:10,640 --> 00:30:13,200
resolution

707
00:30:16,799 --> 00:30:20,760
and human is up next

708
00:30:30,399 --> 00:30:32,880
okay so this is the point of multiplan

709
00:30:32,880 --> 00:30:37,440
policy ping nexus right please

710
00:30:37,440 --> 00:30:39,679
okay so just a little bit of update and

711
00:30:39,679 --> 00:30:41,120
i don't know why it's cutting on the

712
00:30:41,120 --> 00:30:43,360
side

713
00:30:43,360 --> 00:30:44,880
but

714
00:30:44,880 --> 00:30:47,279
from draft point of view in in this

715
00:30:47,279 --> 00:30:48,480
solution

716
00:30:48,480 --> 00:30:50,799
when it comes to the replication segment

717
00:30:50,799 --> 00:30:53,039
and the point to multi-point policy

718
00:30:53,039 --> 00:30:55,039
itself uh

719
00:30:55,039 --> 00:30:58,159
we are almost done with the with that

720
00:30:58,159 --> 00:31:00,240
work there are a little bit churn on

721
00:31:00,240 --> 00:31:02,320
those drafts so

722
00:31:02,320 --> 00:31:05,360
talking to the co-authors maybe we start

723
00:31:05,360 --> 00:31:08,080
doing last call on those two

724
00:31:08,080 --> 00:31:10,720
on the yang side uh we haven't done any

725
00:31:10,720 --> 00:31:12,320
work on it so you know i would

726
00:31:12,320 --> 00:31:13,919
appreciate if the working group has

727
00:31:13,919 --> 00:31:16,720
started looking uh at the yang

728
00:31:16,720 --> 00:31:18,480
if they have any comments

729
00:31:18,480 --> 00:31:20,559
please bring it forward so we can start

730
00:31:20,559 --> 00:31:24,399
updating those i'll try to revive that

731
00:31:24,399 --> 00:31:26,880
draft in the spring again

732
00:31:26,880 --> 00:31:28,960
uh but yeah any comments over there you

733
00:31:28,960 --> 00:31:30,799
know i would greatly appreciate it so we

734
00:31:30,799 --> 00:31:32,960
can have a you know good yank

735
00:31:32,960 --> 00:31:35,600
um on the mvpn side again we are working

736
00:31:35,600 --> 00:31:38,480
on it i think that's best uh we are

737
00:31:38,480 --> 00:31:40,720
working on it we are trying to make the

738
00:31:40,720 --> 00:31:42,000
draft

739
00:31:42,000 --> 00:31:44,559
complete

740
00:31:44,559 --> 00:31:47,760
i think the next one i'm guessing that's

741
00:31:47,760 --> 00:31:49,279
the pce

742
00:31:49,279 --> 00:31:51,440
so yeah that's zero zero the pce has

743
00:31:51,440 --> 00:31:53,679
been adopted uh

744
00:31:53,679 --> 00:31:55,519
right now there are a couple of vendors

745
00:31:55,519 --> 00:31:58,240
that are working on the pce

746
00:31:58,240 --> 00:31:59,440
messaging

747
00:31:59,440 --> 00:32:01,279
and that's why it's just stuck on zero

748
00:32:01,279 --> 00:32:04,640
zero uh probably in the next itf or the

749
00:32:04,640 --> 00:32:06,000
one after

750
00:32:06,000 --> 00:32:08,320
uh we do have some implementation so

751
00:32:08,320 --> 00:32:10,799
there's gonna be more uh churn into that

752
00:32:10,799 --> 00:32:12,720
draft so

753
00:32:12,720 --> 00:32:15,039
uh you know some of those changes will

754
00:32:15,039 --> 00:32:17,919
come forward on the pce side

755
00:32:17,919 --> 00:32:19,120
um

756
00:32:19,120 --> 00:32:21,679
the the next one is the idr which is the

757
00:32:21,679 --> 00:32:25,200
sr point to multipoint policy uh we just

758
00:32:25,200 --> 00:32:26,000
uh

759
00:32:26,000 --> 00:32:29,760
asked for uh adoption call uh

760
00:32:29,760 --> 00:32:32,080
and there was some good support

761
00:32:32,080 --> 00:32:34,159
so it should be okay the last day is

762
00:32:34,159 --> 00:32:36,399
actually today the 24th so we'll see

763
00:32:36,399 --> 00:32:37,760
what happens there

764
00:32:37,760 --> 00:32:40,000
and the last but not least is the pink

765
00:32:40,000 --> 00:32:42,480
which is the this draft which we are

766
00:32:42,480 --> 00:32:44,320
working on in this

767
00:32:44,320 --> 00:32:46,240
working group so that's a little update

768
00:32:46,240 --> 00:32:48,080
of what's going on with this point to

769
00:32:48,080 --> 00:32:50,559
multiplying solution from all draft

770
00:32:50,559 --> 00:32:52,799
points

771
00:32:53,600 --> 00:32:55,200
okay now

772
00:32:55,200 --> 00:32:57,840
oops

773
00:32:59,840 --> 00:33:01,679
i wonder if i did something wrong there

774
00:33:01,679 --> 00:33:03,519
uh yeah i was just trying to see if i

775
00:33:03,519 --> 00:33:07,120
can get it to look better but

776
00:33:07,120 --> 00:33:09,519
it doesn't look that way

777
00:33:09,519 --> 00:33:12,240
oh sorry

778
00:33:15,279 --> 00:33:17,519
yeah

779
00:33:17,600 --> 00:33:19,519
okay so what we are trying to achieve

780
00:33:19,519 --> 00:33:21,760
here as everybody knows when it comes to

781
00:33:21,760 --> 00:33:23,279
point to multi-point policy and the

782
00:33:23,279 --> 00:33:26,480
replication segments it's a pce solution

783
00:33:26,480 --> 00:33:29,200
so there is no signaling on the

784
00:33:29,200 --> 00:33:31,840
network itself on the line on the fibers

785
00:33:31,840 --> 00:33:34,399
itself so it is crucial for us to

786
00:33:34,399 --> 00:33:36,320
understand what the failure is within

787
00:33:36,320 --> 00:33:37,279
the tree

788
00:33:37,279 --> 00:33:39,440
going from the root all the way to the

789
00:33:39,440 --> 00:33:41,519
to the leaves of these

790
00:33:41,519 --> 00:33:43,679
of this puppy so

791
00:33:43,679 --> 00:33:47,039
basically the point of this draft is to

792
00:33:47,039 --> 00:33:49,279
come up with the oem mechanism that is

793
00:33:49,279 --> 00:33:53,039
capable of testing the tree for each

794
00:33:53,039 --> 00:33:54,799
candidate path again a little bit of

795
00:33:54,799 --> 00:33:56,000
reminder

796
00:33:56,000 --> 00:33:57,120
on the

797
00:33:57,120 --> 00:34:00,320
route you can have multiple canada paths

798
00:34:00,320 --> 00:34:02,080
that they are redundant

799
00:34:02,080 --> 00:34:04,720
and the active candidate pad is the one

800
00:34:04,720 --> 00:34:08,000
that has the highest precedence

801
00:34:08,000 --> 00:34:10,719
uh any other candidate pad is staying

802
00:34:10,719 --> 00:34:12,239
there as

803
00:34:12,239 --> 00:34:13,440
inactive

804
00:34:13,440 --> 00:34:16,399
and based on the failure when the pce or

805
00:34:16,399 --> 00:34:18,320
the controller for that matter realizes

806
00:34:18,320 --> 00:34:20,079
that there is a failure on the active

807
00:34:20,079 --> 00:34:23,359
candidate path it will switch to the

808
00:34:23,359 --> 00:34:26,000
backup canada paths if you will so each

809
00:34:26,000 --> 00:34:28,159
one of these candidate paths have a trio

810
00:34:28,159 --> 00:34:30,159
for its own through the network they can

811
00:34:30,159 --> 00:34:32,239
be set up accordingly through the

812
00:34:32,239 --> 00:34:34,560
network they can be srlg meaning that

813
00:34:34,560 --> 00:34:36,239
they can be completely separate from

814
00:34:36,239 --> 00:34:38,159
each other it all comes down to the

815
00:34:38,159 --> 00:34:40,639
controller how they want to set up these

816
00:34:40,639 --> 00:34:42,800
uh canada paths through the network from

817
00:34:42,800 --> 00:34:45,119
the root all the way to the host sorry

818
00:34:45,119 --> 00:34:46,560
to the leaves

819
00:34:46,560 --> 00:34:49,199
so that said we need to

820
00:34:49,199 --> 00:34:51,280
be able to test every one of these

821
00:34:51,280 --> 00:34:53,280
candidate paths now there's a second

822
00:34:53,280 --> 00:34:54,399
concept

823
00:34:54,399 --> 00:34:56,239
under the candidate path

824
00:34:56,239 --> 00:34:59,359
uh and that concept is what we call the

825
00:34:59,359 --> 00:35:01,760
path instance so basically if a

826
00:35:01,760 --> 00:35:04,800
candidate pad needs to be uh

827
00:35:04,800 --> 00:35:06,800
optimized then

828
00:35:06,800 --> 00:35:09,599
we can have two path instances

829
00:35:09,599 --> 00:35:11,359
under the candidate path

830
00:35:11,359 --> 00:35:15,040
that the second path instance will be

831
00:35:15,040 --> 00:35:17,520
signal through the network through an

832
00:35:17,520 --> 00:35:19,040
optimized path

833
00:35:19,040 --> 00:35:20,720
and

834
00:35:20,720 --> 00:35:23,599
it can do a make before break procedure

835
00:35:23,599 --> 00:35:25,839
on the route to switch from one path

836
00:35:25,839 --> 00:35:27,359
instance through the second pattern

837
00:35:27,359 --> 00:35:30,079
sense so you keep that candidate pat up

838
00:35:30,079 --> 00:35:31,839
and running which is your primary cannon

839
00:35:31,839 --> 00:35:32,640
pack

840
00:35:32,640 --> 00:35:35,599
so this draft will introduce a mechanism

841
00:35:35,599 --> 00:35:37,839
to test every single one of these canada

842
00:35:37,839 --> 00:35:40,320
paths and every single one of these path

843
00:35:40,320 --> 00:35:41,680
instances

844
00:35:41,680 --> 00:35:43,760
under the canada path

845
00:35:43,760 --> 00:35:46,640
next slide please

846
00:35:46,880 --> 00:35:49,839
yeah let me try to to share

847
00:35:49,839 --> 00:35:53,200
the application here instead i think

848
00:35:53,200 --> 00:35:56,879
okay sure let's see

849
00:35:57,520 --> 00:36:01,839
um okay i need to let's see

850
00:36:07,440 --> 00:36:10,680
let's see

851
00:36:25,920 --> 00:36:26,800
uh

852
00:36:26,800 --> 00:36:28,079
yeah oh

853
00:36:28,079 --> 00:36:29,680
much better thank you

854
00:36:29,680 --> 00:36:30,640
okay

855
00:36:30,640 --> 00:36:34,800
yeah okay right okay so um yeah or are

856
00:36:34,800 --> 00:36:36,320
you do you want to move on to the next

857
00:36:36,320 --> 00:36:37,520
slide right

858
00:36:37,520 --> 00:36:41,400
yes please thank you

859
00:36:44,000 --> 00:36:46,160
so uh

860
00:36:46,160 --> 00:36:48,799
yeah sorry

861
00:36:50,720 --> 00:36:52,240
look um

862
00:36:52,240 --> 00:36:53,280
okay

863
00:36:53,280 --> 00:36:55,359
here we go

864
00:36:55,359 --> 00:36:57,839
so uh when it comes to the

865
00:36:57,839 --> 00:37:01,920
uh packet construction and the the

866
00:37:01,920 --> 00:37:04,480
the packet format we didn't reinvent the

867
00:37:04,480 --> 00:37:07,200
wheel there's already rfcs in there for

868
00:37:07,200 --> 00:37:12,160
mpls encap which is rfc 4379 and 6425

869
00:37:12,160 --> 00:37:15,760
we are basically reusing those rfcs

870
00:37:15,760 --> 00:37:17,440
and i guess one point that i'm trying to

871
00:37:17,440 --> 00:37:20,000
make here is that this draft is only for

872
00:37:20,000 --> 00:37:22,800
the mpls end cap when it goes to the

873
00:37:22,800 --> 00:37:24,320
srv6

874
00:37:24,320 --> 00:37:26,640
oem stuff

875
00:37:26,640 --> 00:37:28,960
then there is a draft in the six man

876
00:37:28,960 --> 00:37:30,320
which is the

877
00:37:30,320 --> 00:37:33,520
oem for srv6 and we need to come up with

878
00:37:33,520 --> 00:37:38,480
a new draft that reuses the srv6oem

879
00:37:38,480 --> 00:37:41,760
packet format to uh to introduce

880
00:37:41,760 --> 00:37:43,520
oem functionality for point to

881
00:37:43,520 --> 00:37:45,520
multipoint three in the

882
00:37:45,520 --> 00:37:48,240
srv6 domain i guess

883
00:37:48,240 --> 00:37:51,599
one thing that we did identify into this

884
00:37:51,599 --> 00:37:54,160
draft is the

885
00:37:54,160 --> 00:37:56,800
target fake so we did identify the

886
00:37:56,800 --> 00:37:59,280
point-to-multi-point policy target fake

887
00:37:59,280 --> 00:38:02,160
that identifies this packet to the oem

888
00:38:02,160 --> 00:38:03,119
layer

889
00:38:03,119 --> 00:38:05,599
saying that this is really for point to

890
00:38:05,599 --> 00:38:07,920
multi-point policy and the tlv to

891
00:38:07,920 --> 00:38:09,200
identify

892
00:38:09,200 --> 00:38:11,760
this oem packet uh if you could go to

893
00:38:11,760 --> 00:38:13,680
the next slide please and i realized the

894
00:38:13,680 --> 00:38:17,119
slide numbers are wrong but my apologies

895
00:38:17,119 --> 00:38:19,520
so yeah so this is the the tlv that

896
00:38:19,520 --> 00:38:22,560
actually identifies the packet as a

897
00:38:22,560 --> 00:38:25,440
point to multi-point policy oem packet

898
00:38:25,440 --> 00:38:26,640
and

899
00:38:26,640 --> 00:38:28,160
there are some questions here that we

900
00:38:28,160 --> 00:38:30,640
need to address i did send the email to

901
00:38:30,640 --> 00:38:33,680
the mpls working group asking that as of

902
00:38:33,680 --> 00:38:34,640
now

903
00:38:34,640 --> 00:38:37,200
as you can see uh the root address can

904
00:38:37,200 --> 00:38:41,280
be ipv4 or ipv6 root address

905
00:38:41,280 --> 00:38:44,079
and as of now we are using the address

906
00:38:44,079 --> 00:38:45,119
family

907
00:38:45,119 --> 00:38:47,520
to identify the length of the root

908
00:38:47,520 --> 00:38:48,880
address to be

909
00:38:48,880 --> 00:38:51,680
32-bit or you know 64-bit depending on

910
00:38:51,680 --> 00:38:55,040
whether it's ipv4 ipv6 so one question

911
00:38:55,040 --> 00:38:57,200
is does it make sense to come up with

912
00:38:57,200 --> 00:38:59,280
two different tlvs

913
00:38:59,280 --> 00:39:03,280
one for ipv4 and one for ipv6 and drop

914
00:39:03,280 --> 00:39:04,960
the address family

915
00:39:04,960 --> 00:39:07,599
or you know one tlv is sufficient enough

916
00:39:07,599 --> 00:39:09,440
and you know keep the address family but

917
00:39:09,440 --> 00:39:11,839
the length becomes variable

918
00:39:11,839 --> 00:39:14,160
in this case so that's one thing that

919
00:39:14,160 --> 00:39:16,640
you know if you have opinions on

920
00:39:16,640 --> 00:39:18,160
i would greatly appreciate if you can

921
00:39:18,160 --> 00:39:19,520
feedback me

922
00:39:19,520 --> 00:39:21,839
or to the to the authors

923
00:39:21,839 --> 00:39:23,119
uh

924
00:39:23,119 --> 00:39:25,040
so that's that's really the story of

925
00:39:25,040 --> 00:39:28,560
what's going on and you know um and

926
00:39:28,560 --> 00:39:30,160
forget about the next slide obviously

927
00:39:30,160 --> 00:39:32,000
i'm in a security so

928
00:39:32,000 --> 00:39:34,000
that's update on this draft and all the

929
00:39:34,000 --> 00:39:35,119
other

930
00:39:35,119 --> 00:39:38,160
any comments questions

931
00:39:40,000 --> 00:39:42,880
did that uh email go to mpls and pim or

932
00:39:42,880 --> 00:39:45,040
just mpls

933
00:39:45,040 --> 00:39:46,240
and

934
00:39:46,240 --> 00:39:49,359
uh good question i i replied to

935
00:39:49,359 --> 00:39:51,920
everybody on the last email so it should

936
00:39:51,920 --> 00:39:54,400
have gone to pim i'll double check

937
00:39:54,400 --> 00:39:57,359
i'll double check as well but uh

938
00:39:57,359 --> 00:39:59,920
thank you we'll get

939
00:39:59,920 --> 00:40:02,160
we'll respond or hopefully they do

940
00:40:02,160 --> 00:40:04,480
actually

941
00:40:05,440 --> 00:40:06,480
okay

942
00:40:06,480 --> 00:40:09,640
thank you

943
00:40:10,079 --> 00:40:11,920
see we have the same problem with the

944
00:40:11,920 --> 00:40:15,200
next slide so i'll share my uh

945
00:40:15,200 --> 00:40:18,079
share a window again let's see

946
00:40:18,079 --> 00:40:20,800
so probably it's the way i printed out

947
00:40:20,800 --> 00:40:22,720
then

948
00:40:22,720 --> 00:40:24,800
because i just grabbed power points and

949
00:40:24,800 --> 00:40:27,520
i print so maybe that's

950
00:40:27,520 --> 00:40:29,440
i did something wrong

951
00:40:29,440 --> 00:40:33,119
okay so the next one is pim light um

952
00:40:33,119 --> 00:40:34,960
basically what i'm trying to achieve

953
00:40:34,960 --> 00:40:37,920
here is to have the working group to

954
00:40:37,920 --> 00:40:40,720
come up with a baseline for this draft

955
00:40:40,720 --> 00:40:43,280
there there was a lot of conversation

956
00:40:43,280 --> 00:40:45,680
emails back and forth on the on the

957
00:40:45,680 --> 00:40:48,319
working group email list

958
00:40:48,319 --> 00:40:50,839
which is great uh but i think we need to

959
00:40:50,839 --> 00:40:53,680
agree on the baseline and what do we

960
00:40:53,680 --> 00:40:56,160
want to do here and based on that

961
00:40:56,160 --> 00:40:59,200
agreement take it forward

962
00:40:59,200 --> 00:41:01,200
and see what we come up with so next

963
00:41:01,200 --> 00:41:04,520
slide please

964
00:41:08,319 --> 00:41:09,760
yeah um

965
00:41:09,760 --> 00:41:13,000
let's see

966
00:41:23,839 --> 00:41:26,319
that's very strange

967
00:41:26,319 --> 00:41:29,680
yeah let me try to to to fix this just a

968
00:41:29,680 --> 00:41:32,720
moment um

969
00:41:33,119 --> 00:41:35,839
see

970
00:41:54,800 --> 00:41:57,119
yeah let's do it this way

971
00:41:57,119 --> 00:41:59,520
thank you

972
00:42:00,240 --> 00:42:03,720
so um

973
00:42:04,800 --> 00:42:08,640
uh yeah sorry let's see

974
00:42:12,800 --> 00:42:14,319
all right so

975
00:42:14,319 --> 00:42:17,920
a little bit of history uh this uh draft

976
00:42:17,920 --> 00:42:20,400
uh well this idea came alive when we

977
00:42:20,400 --> 00:42:22,800
were doing the last car for

978
00:42:22,800 --> 00:42:25,760
beer pim signaling uh basically in that

979
00:42:25,760 --> 00:42:28,000
draft what we wanted to do was

980
00:42:28,000 --> 00:42:30,960
to send the the multicast estate join

981
00:42:30,960 --> 00:42:32,960
and prunes from one

982
00:42:32,960 --> 00:42:35,119
beer edge router to the next beer edge

983
00:42:35,119 --> 00:42:36,079
router

984
00:42:36,079 --> 00:42:38,960
and in the draft field explained that we

985
00:42:38,960 --> 00:42:41,359
are only sending uh

986
00:42:41,359 --> 00:42:45,280
joins and prune messages as a signaling

987
00:42:45,280 --> 00:42:48,160
from 1b router to the next one and then

988
00:42:48,160 --> 00:42:50,000
the question became that

989
00:42:50,000 --> 00:42:52,960
since these are packets are very close

990
00:42:52,960 --> 00:42:56,560
or identical to pim joints and prunes

991
00:42:56,560 --> 00:42:59,520
maybe we need to identify a brand new

992
00:42:59,520 --> 00:43:01,119
pim interface

993
00:43:01,119 --> 00:43:04,000
that could carry only the pim joints and

994
00:43:04,000 --> 00:43:06,480
prunes without actually trying to bring

995
00:43:06,480 --> 00:43:08,160
up a

996
00:43:08,160 --> 00:43:11,200
pim adjacency between the

997
00:43:11,200 --> 00:43:15,520
the routers or two peers for that matter

998
00:43:15,520 --> 00:43:17,599
and that's where the idea was born so

999
00:43:17,599 --> 00:43:18,720
basically

1000
00:43:18,720 --> 00:43:21,119
we are not trying to complicate the

1001
00:43:21,119 --> 00:43:23,839
story here all we are trying to do is

1002
00:43:23,839 --> 00:43:26,720
and multicast states or remove the

1003
00:43:26,720 --> 00:43:29,599
multicasted states between two

1004
00:43:29,599 --> 00:43:32,400
pim routers that are attached

1005
00:43:32,400 --> 00:43:35,760
either directly or via some medium and

1006
00:43:35,760 --> 00:43:37,760
that medium can be anything it could be

1007
00:43:37,760 --> 00:43:40,319
beer it could be any other medium and

1008
00:43:40,319 --> 00:43:42,800
then the next question is if there is no

1009
00:43:42,800 --> 00:43:44,720
hellos because we are not bringing up

1010
00:43:44,720 --> 00:43:45,520
the

1011
00:43:45,520 --> 00:43:47,520
uh we are not sending pim hellos it's

1012
00:43:47,520 --> 00:43:49,280
just the estates

1013
00:43:49,280 --> 00:43:52,160
then some of these messages uh like

1014
00:43:52,160 --> 00:43:55,040
asserts or some of these other messages

1015
00:43:55,040 --> 00:43:57,839
that are really relying on the hellos

1016
00:43:57,839 --> 00:44:00,240
might not get accepted or processed by

1017
00:44:00,240 --> 00:44:02,640
the pim routers

1018
00:44:02,640 --> 00:44:08,118
accordingly as well so next slide please

1019
00:44:09,520 --> 00:44:10,400
uh

1020
00:44:10,400 --> 00:44:12,400
yeah so basically uh again as i

1021
00:44:12,400 --> 00:44:15,359
explained uh as of now

1022
00:44:15,359 --> 00:44:17,680
depending what happens in in this

1023
00:44:17,680 --> 00:44:18,640
meeting

1024
00:44:18,640 --> 00:44:22,319
uh the entire idea was just to come up

1025
00:44:22,319 --> 00:44:23,680
with

1026
00:44:23,680 --> 00:44:25,839
a new interface

1027
00:44:25,839 --> 00:44:28,800
whatever we want to call this interface

1028
00:44:28,800 --> 00:44:31,119
that only is

1029
00:44:31,119 --> 00:44:34,560
capable of sending a couple of messages

1030
00:44:34,560 --> 00:44:36,800
including joints prunes and maybe

1031
00:44:36,800 --> 00:44:38,000
asserts

1032
00:44:38,000 --> 00:44:41,200
and to have the other router accepting

1033
00:44:41,200 --> 00:44:42,640
these messages

1034
00:44:42,640 --> 00:44:45,040
even though the fact that there is no

1035
00:44:45,040 --> 00:44:47,599
pim adjacency or the pin hellos

1036
00:44:47,599 --> 00:44:49,920
between the two routers uh next slide

1037
00:44:49,920 --> 00:44:52,160
please

1038
00:44:52,720 --> 00:44:54,480
so there were a couple of well not

1039
00:44:54,480 --> 00:44:55,599
couple there there were a lot of

1040
00:44:55,599 --> 00:44:57,839
discussions in the working group uh

1041
00:44:57,839 --> 00:44:58,640
which

1042
00:44:58,640 --> 00:44:59,680
i'm

1043
00:44:59,680 --> 00:45:02,480
bringing up in this slide uh so just to

1044
00:45:02,480 --> 00:45:04,480
refresh everybody's memory

1045
00:45:04,480 --> 00:45:07,599
one thing was the name um

1046
00:45:07,599 --> 00:45:10,000
some people didn't like light uh you

1047
00:45:10,000 --> 00:45:11,599
know some people were saying it's light

1048
00:45:11,599 --> 00:45:14,000
transit etc so we need to come up with a

1049
00:45:14,000 --> 00:45:15,599
name

1050
00:45:15,599 --> 00:45:19,920
and the next thing is there are

1051
00:45:19,920 --> 00:45:23,520
conversations again if we can use hellos

1052
00:45:23,520 --> 00:45:27,599
from other type of protocols like igp

1053
00:45:27,599 --> 00:45:30,560
to revive that hello messaging between

1054
00:45:30,560 --> 00:45:31,520
the

1055
00:45:31,520 --> 00:45:33,839
between the two uh

1056
00:45:33,839 --> 00:45:34,880
router

1057
00:45:34,880 --> 00:45:36,480
so even though we don't want to send the

1058
00:45:36,480 --> 00:45:37,920
pim hellos

1059
00:45:37,920 --> 00:45:42,079
on this specific implementation can we

1060
00:45:42,079 --> 00:45:44,839
kind of piggyback on some other type of

1061
00:45:44,839 --> 00:45:48,560
protocol to make sure that the two pim

1062
00:45:48,560 --> 00:45:50,960
light routers are still up and running

1063
00:45:50,960 --> 00:45:52,720
and communicating with each other and

1064
00:45:52,720 --> 00:45:54,319
there is some kind of heartbeat between

1065
00:45:54,319 --> 00:45:56,480
them i guess

1066
00:45:56,480 --> 00:45:58,800
the next question was

1067
00:45:58,800 --> 00:46:02,880
as of now in the draft i mentioned that

1068
00:46:02,880 --> 00:46:05,280
when it comes to the joins and prunes

1069
00:46:05,280 --> 00:46:07,920
and asserts those are the type of

1070
00:46:07,920 --> 00:46:10,560
messages that are accepted when there is

1071
00:46:10,560 --> 00:46:13,280
no pim hello so you know one question

1072
00:46:13,280 --> 00:46:15,440
was do we really need a cert in this

1073
00:46:15,440 --> 00:46:17,359
type of scenarios whether there's gonna

1074
00:46:17,359 --> 00:46:19,119
be duplicated traffic and if there is

1075
00:46:19,119 --> 00:46:21,359
duplicated traffic whether assert is the

1076
00:46:21,359 --> 00:46:22,640
way to go

1077
00:46:22,640 --> 00:46:24,640
to actually avoid that

1078
00:46:24,640 --> 00:46:26,319
duplicate the traffic

1079
00:46:26,319 --> 00:46:28,480
uh there were other comments with regard

1080
00:46:28,480 --> 00:46:30,480
to the multicast to say that we need to

1081
00:46:30,480 --> 00:46:33,440
identify the the states that we want to

1082
00:46:33,440 --> 00:46:36,000
uh signal over this medium

1083
00:46:36,000 --> 00:46:39,040
sg star g etc etc

1084
00:46:39,040 --> 00:46:41,599
uh and and the last but not least was

1085
00:46:41,599 --> 00:46:43,760
you know what is the interface itself

1086
00:46:43,760 --> 00:46:46,560
itself uh we you know if it's pim light

1087
00:46:46,560 --> 00:46:47,920
interface

1088
00:46:47,920 --> 00:46:50,560
uh do we need to explicitly configure

1089
00:46:50,560 --> 00:46:52,720
this interface because of security point

1090
00:46:52,720 --> 00:46:55,599
of view and do we need to only accept

1091
00:46:55,599 --> 00:46:56,800
the

1092
00:46:56,800 --> 00:46:58,319
joins and

1093
00:46:58,319 --> 00:46:59,839
the prunes

1094
00:46:59,839 --> 00:47:01,599
on a

1095
00:47:01,599 --> 00:47:03,920
medium that has this interface connected

1096
00:47:03,920 --> 00:47:06,480
to it and if so

1097
00:47:06,480 --> 00:47:09,440
in some of these mediums like beer you

1098
00:47:09,440 --> 00:47:12,160
cannot really create an interface so

1099
00:47:12,160 --> 00:47:15,359
what do we want to do there

1100
00:47:15,520 --> 00:47:17,200
yeah so i guess

1101
00:47:17,200 --> 00:47:18,960
we were hoping for a

1102
00:47:18,960 --> 00:47:21,680
you know quick dirty way of making

1103
00:47:21,680 --> 00:47:24,400
identifying this brand new interface and

1104
00:47:24,400 --> 00:47:28,720
making it use in the beer draft but

1105
00:47:28,720 --> 00:47:30,559
it might be that

1106
00:47:30,559 --> 00:47:33,040
we created a bigger hole

1107
00:47:33,040 --> 00:47:35,359
which we need to kind of figure out what

1108
00:47:35,359 --> 00:47:36,960
we want to do here

1109
00:47:36,960 --> 00:47:39,200
so i i think i'm going to pause on this

1110
00:47:39,200 --> 00:47:41,920
slide and let it digest and you know if

1111
00:47:41,920 --> 00:47:44,240
there's any comments or questions

1112
00:47:44,240 --> 00:47:46,079
you know now there's the time

1113
00:47:46,079 --> 00:47:47,920
tourists has one for you

1114
00:47:47,920 --> 00:47:50,800
yeah so my recurring wish that i don't

1115
00:47:50,800 --> 00:47:53,359
get for 30 years now um

1116
00:47:53,359 --> 00:47:55,200
so if we have an upstream interface with

1117
00:47:55,200 --> 00:47:57,520
a multiple possible senders of traffic

1118
00:47:57,520 --> 00:47:59,359
and when we're doing a cert right now

1119
00:47:59,359 --> 00:48:00,480
we've we've

1120
00:48:00,480 --> 00:48:01,359
termed

1121
00:48:01,359 --> 00:48:03,440
a strong rpf to be able to filter out

1122
00:48:03,440 --> 00:48:05,760
the packets based on who sent them

1123
00:48:05,760 --> 00:48:08,079
we never did this because that's

1124
00:48:08,079 --> 00:48:09,599
layer 2 filtering right you would need

1125
00:48:09,599 --> 00:48:11,839
to know which of the upstream

1126
00:48:11,839 --> 00:48:12,720
pim

1127
00:48:12,720 --> 00:48:14,400
routers would send something but for

1128
00:48:14,400 --> 00:48:16,800
example in beer we also have that right

1129
00:48:16,800 --> 00:48:18,240
we have

1130
00:48:18,240 --> 00:48:21,119
the brbfrid in the header so even on a

1131
00:48:21,119 --> 00:48:23,040
beer site we know who sent it whether

1132
00:48:23,040 --> 00:48:25,200
you call that strong rpf or you have a

1133
00:48:25,200 --> 00:48:27,760
virtual interface on a per upstream bfr

1134
00:48:27,760 --> 00:48:29,839
id and you're effectively you know

1135
00:48:29,839 --> 00:48:32,240
changing your rpf interface so that you

1136
00:48:32,240 --> 00:48:34,960
at the pim level representing not a lan

1137
00:48:34,960 --> 00:48:38,240
but you know for every upstream um

1138
00:48:38,240 --> 00:48:41,280
bfir a separate point-to-point interface

1139
00:48:41,280 --> 00:48:43,040
i mean that's that's that's a modeling

1140
00:48:43,040 --> 00:48:45,200
question but in the forwarding plane you

1141
00:48:45,200 --> 00:48:46,800
obviously want to receive a packet and

1142
00:48:46,800 --> 00:48:49,200
filter it based on the bfr id in the

1143
00:48:49,200 --> 00:48:51,359
packet if you know the vendors think

1144
00:48:51,359 --> 00:48:52,960
that can be done i'd be very happy

1145
00:48:52,960 --> 00:48:54,640
because that would get us rid of a cert

1146
00:48:54,640 --> 00:48:55,680
but

1147
00:48:55,680 --> 00:48:59,119
i don't believe that will ever happen

1148
00:48:59,119 --> 00:49:01,359
sure

1149
00:49:01,359 --> 00:49:02,960
so uh

1150
00:49:02,960 --> 00:49:06,400
yeah stick here so um

1151
00:49:06,400 --> 00:49:08,800
with beer you don't have a shared medium

1152
00:49:08,800 --> 00:49:12,640
right so i start swings work anyway um

1153
00:49:12,640 --> 00:49:13,920
if a

1154
00:49:13,920 --> 00:49:15,839
smaller router is forwarding something

1155
00:49:15,839 --> 00:49:18,160
you would only reach it receive it if if

1156
00:49:18,160 --> 00:49:20,960
you actually have asked to receive it

1157
00:49:20,960 --> 00:49:22,000
right

1158
00:49:22,000 --> 00:49:23,599
so um

1159
00:49:23,599 --> 00:49:25,520
so the concept of a search only really

1160
00:49:25,520 --> 00:49:27,280
really works if you have like a shared

1161
00:49:27,280 --> 00:49:30,000
medium like an ethernet or somehow

1162
00:49:30,000 --> 00:49:32,880
simulating that

1163
00:49:33,040 --> 00:49:34,800
so i think it should be possible to say

1164
00:49:34,800 --> 00:49:36,000
that uh

1165
00:49:36,000 --> 00:49:38,079
this pimlight mechanism

1166
00:49:38,079 --> 00:49:40,079
does you know doesn't have doesn't

1167
00:49:40,079 --> 00:49:42,720
support a search but it's restricted to

1168
00:49:42,720 --> 00:49:46,400
certain types of links or interfaces

1169
00:49:46,400 --> 00:49:48,960
that's also why you don't need the dr

1170
00:49:48,960 --> 00:49:53,520
priority why sorry dr election right

1171
00:49:53,760 --> 00:49:55,700
for these other questions

1172
00:49:55,700 --> 00:49:57,599
[Music]

1173
00:49:57,599 --> 00:50:00,800
i don't see a problem with an rp

1174
00:50:00,800 --> 00:50:02,960
an rp doesn't need to anything in

1175
00:50:02,960 --> 00:50:04,079
particular when it comes to

1176
00:50:04,079 --> 00:50:05,920
neighborships

1177
00:50:05,920 --> 00:50:08,000
um

1178
00:50:08,000 --> 00:50:10,160
and for the interface being enabled i

1179
00:50:10,160 --> 00:50:11,760
think it's fine to say that certain

1180
00:50:11,760 --> 00:50:13,440
interface types say like a beer

1181
00:50:13,440 --> 00:50:17,359
interface it's enabled by default

1182
00:50:17,760 --> 00:50:19,359
uh

1183
00:50:19,359 --> 00:50:21,200
it's enabled by default okay yeah i got

1184
00:50:21,200 --> 00:50:23,680
you okay

1185
00:50:24,800 --> 00:50:27,359
um so i think most of these can be dealt

1186
00:50:27,359 --> 00:50:29,760
with pretty easily just need some text

1187
00:50:29,760 --> 00:50:32,800
explaining exactly

1188
00:50:32,800 --> 00:50:35,599
what the applicability is so of the pim

1189
00:50:35,599 --> 00:50:37,920
light

1190
00:50:38,160 --> 00:50:40,160
and explain why they don't need to need

1191
00:50:40,160 --> 00:50:42,559
to worry too much about assets and

1192
00:50:42,559 --> 00:50:45,200
smaller things

1193
00:50:45,920 --> 00:50:46,800
okay

1194
00:50:46,800 --> 00:50:49,599
okay so that that sounds good so maybe

1195
00:50:49,599 --> 00:50:53,800
oh there's another comment sir

1196
00:51:03,839 --> 00:51:06,319
go ahead cindy

1197
00:51:06,319 --> 00:51:09,839
hello hello do you hear me

1198
00:51:09,920 --> 00:51:12,319
hello

1199
00:51:12,480 --> 00:51:15,200
okay uh i do support the motivation of

1200
00:51:15,200 --> 00:51:18,160
this draft because i think

1201
00:51:18,160 --> 00:51:19,599
the team

1202
00:51:19,599 --> 00:51:22,720
over beer deployment will may be very

1203
00:51:22,720 --> 00:51:25,200
widely used in the future

1204
00:51:25,200 --> 00:51:27,839
so i do support this structure

1205
00:51:27,839 --> 00:51:30,160
but i think

1206
00:51:30,160 --> 00:51:33,280
the last discussion is very

1207
00:51:33,280 --> 00:51:36,880
useful and some details must be added in

1208
00:51:36,880 --> 00:51:38,640
the draft right

1209
00:51:38,640 --> 00:51:41,520
so it will make the implementers more

1210
00:51:41,520 --> 00:51:45,920
clearly about the solutions

1211
00:51:45,920 --> 00:51:48,160
yeah

1212
00:51:48,319 --> 00:51:51,599
about the name of the

1213
00:51:51,599 --> 00:51:54,240
pimlight interface or something else it

1214
00:51:54,240 --> 00:51:57,839
doesn't matter for me yeah

1215
00:51:59,920 --> 00:52:03,559
okay thank you

1216
00:52:04,000 --> 00:52:05,920
okay so uh

1217
00:52:05,920 --> 00:52:08,480
maybe the way forward is

1218
00:52:08,480 --> 00:52:12,079
uh we'll wait one more ietf uh you know

1219
00:52:12,079 --> 00:52:14,559
uh if everybody can ponder about this

1220
00:52:14,559 --> 00:52:16,400
slide specifically

1221
00:52:16,400 --> 00:52:18,720
uh and and based on the

1222
00:52:18,720 --> 00:52:21,040
emails that we receive we'll update the

1223
00:52:21,040 --> 00:52:22,319
draft

1224
00:52:22,319 --> 00:52:24,160
and you know um

1225
00:52:24,160 --> 00:52:26,160
in the next ietf we can do another

1226
00:52:26,160 --> 00:52:28,240
presentation and you know see whether we

1227
00:52:28,240 --> 00:52:29,520
can

1228
00:52:29,520 --> 00:52:31,440
adopt a draft or you know how to move it

1229
00:52:31,440 --> 00:52:34,559
kind of forward kind of thing um that's

1230
00:52:34,559 --> 00:52:37,520
that's where i am right now i i think uh

1231
00:52:37,520 --> 00:52:38,800
uh

1232
00:52:38,800 --> 00:52:40,880
you know i in the next sorry can i go to

1233
00:52:40,880 --> 00:52:44,400
the next slide my apologies

1234
00:52:45,680 --> 00:52:46,800
yeah so

1235
00:52:46,800 --> 00:52:48,960
i i think from what i'm hearing there is

1236
00:52:48,960 --> 00:52:50,480
somewhat of an agreement we need to put

1237
00:52:50,480 --> 00:52:52,079
a little bit more meat into the draft

1238
00:52:52,079 --> 00:52:54,480
which is fine i'll work on it you know

1239
00:52:54,480 --> 00:52:56,559
send your comments into the

1240
00:52:56,559 --> 00:52:58,800
what what we just discussed so i'm

1241
00:52:58,800 --> 00:53:01,200
getting old you know i might forget some

1242
00:53:01,200 --> 00:53:02,640
of these stuff so please send it into

1243
00:53:02,640 --> 00:53:04,079
the email

1244
00:53:04,079 --> 00:53:07,520
uh working group email i'll uh i'll

1245
00:53:07,520 --> 00:53:10,000
put them into the draft

1246
00:53:10,000 --> 00:53:12,000
and the next

1247
00:53:12,000 --> 00:53:14,800
itf will take it

1248
00:53:14,800 --> 00:53:16,640
and we certainly don't need to wait to

1249
00:53:16,640 --> 00:53:19,040
the next itf unless you want to sandy

1250
00:53:19,040 --> 00:53:21,520
can certainly initiate an adoption call

1251
00:53:21,520 --> 00:53:23,280
on the list

1252
00:53:23,280 --> 00:53:26,880
okay appreciate it before then yeah

1253
00:53:26,880 --> 00:53:29,839
okay thank you

1254
00:53:41,440 --> 00:53:44,240
uh hi mike if you'll hear me

1255
00:53:44,240 --> 00:53:45,440
yes

1256
00:53:45,440 --> 00:53:46,400
yeah

1257
00:53:46,400 --> 00:53:48,640
okay

1258
00:53:49,200 --> 00:53:51,439
uh

1259
00:53:51,680 --> 00:53:52,640
hello

1260
00:53:52,640 --> 00:53:55,839
hello everyone i'm hunty from ireland

1261
00:53:55,839 --> 00:53:58,480
now let me introduce a new individual

1262
00:53:58,480 --> 00:54:00,240
draft about

1263
00:54:00,240 --> 00:54:04,000
hmd's moving young model standard for l2

1264
00:54:04,000 --> 00:54:05,920
vpn

1265
00:54:05,920 --> 00:54:08,559
next week

1266
00:54:08,800 --> 00:54:10,720
and this is the first version for the

1267
00:54:10,720 --> 00:54:13,200
presentation and the effort

1268
00:54:13,200 --> 00:54:16,720
is from the mankasi on design team uh

1269
00:54:16,720 --> 00:54:19,359
the all servers and also that from

1270
00:54:19,359 --> 00:54:23,359
everson ibm dream pro and china mobile

1271
00:54:23,359 --> 00:54:25,920
netflix

1272
00:54:28,480 --> 00:54:31,599
now let me introduce the relationship

1273
00:54:31,599 --> 00:54:32,760
with

1274
00:54:32,760 --> 00:54:34,400
rc-9166

1275
00:54:34,400 --> 00:54:35,920
uh

1276
00:54:35,920 --> 00:54:36,839
the

1277
00:54:36,839 --> 00:54:40,480
rc-916 define the young data model for

1278
00:54:40,480 --> 00:54:41,760
configuring

1279
00:54:41,760 --> 00:54:45,920
ignp and mld smoothing

1280
00:54:46,240 --> 00:54:50,879
but it only but it only covers the

1281
00:54:50,960 --> 00:54:53,040
and then hmpm smoking in the bridge

1282
00:54:53,040 --> 00:54:54,079
service

1283
00:54:54,079 --> 00:54:56,960
and this draft was published that

1284
00:54:56,960 --> 00:54:58,400
um maybe

1285
00:54:58,400 --> 00:55:00,799
february this year

1286
00:55:00,799 --> 00:55:02,799
it's just published

1287
00:55:02,799 --> 00:55:06,040
last week

1288
00:55:06,319 --> 00:55:08,160
this first were

1289
00:55:08,160 --> 00:55:10,559
this rfc was the

1290
00:55:10,559 --> 00:55:14,880
hmp smoking young model draft and it was

1291
00:55:14,880 --> 00:55:18,160
included the alpha european part for

1292
00:55:18,160 --> 00:55:22,000
igmp and mld smoking and enter into the

1293
00:55:22,000 --> 00:55:24,880
rfc and queue in august

1294
00:55:24,880 --> 00:55:26,640
to 2020

1295
00:55:26,640 --> 00:55:27,760
and

1296
00:55:27,760 --> 00:55:31,280
but it was blocked in the misraf state

1297
00:55:31,280 --> 00:55:33,760
more than one year because of a non-tail

1298
00:55:33,760 --> 00:55:35,359
reference to the

1299
00:55:35,359 --> 00:55:36,960
atf

1300
00:55:36,960 --> 00:55:39,680
by cell to repeat young

1301
00:55:39,680 --> 00:55:41,119
this draft

1302
00:55:41,119 --> 00:55:43,760
in this draft it will define the

1303
00:55:43,760 --> 00:55:46,400
l2 review model

1304
00:55:46,400 --> 00:55:49,200
but but but this draft

1305
00:55:49,200 --> 00:55:50,240
uh

1306
00:55:50,240 --> 00:55:51,040
has

1307
00:55:51,040 --> 00:55:54,079
expired on

1308
00:55:54,079 --> 00:55:56,559
maybe january 2020

1309
00:55:56,559 --> 00:56:00,880
uh this is not an active draft now uh so

1310
00:56:00,880 --> 00:56:04,880
we asked for our group last call in the

1311
00:56:04,880 --> 00:56:07,599
in the pink in the pink working group

1312
00:56:07,599 --> 00:56:08,559
for

1313
00:56:08,559 --> 00:56:09,760
removing

1314
00:56:09,760 --> 00:56:12,319
and removing the alkaline alternating

1315
00:56:12,319 --> 00:56:14,079
part

1316
00:56:14,079 --> 00:56:19,440
in in september 2021 and it passed so we

1317
00:56:19,440 --> 00:56:22,079
uh so we removed the alternating path

1318
00:56:22,079 --> 00:56:25,200
for the shaft and not long afterwards

1319
00:56:25,200 --> 00:56:28,720
and this draft was published as uh rc

1320
00:56:28,720 --> 00:56:31,720
rc9166

1321
00:56:32,160 --> 00:56:34,799
nice please

1322
00:56:35,839 --> 00:56:38,000
uh but we think that

1323
00:56:38,000 --> 00:56:40,880
but uh the ignpm while this movie could

1324
00:56:40,880 --> 00:56:44,880
be used in lgbt service so we think

1325
00:56:44,880 --> 00:56:47,440
it is still needed to

1326
00:56:47,440 --> 00:56:50,079
be covered in the young data model

1327
00:56:50,079 --> 00:56:51,599
so we

1328
00:56:51,599 --> 00:56:55,520
make this new individual graphs and also

1329
00:56:55,520 --> 00:56:58,880
and also the same as the

1330
00:56:58,880 --> 00:57:00,319
authors of

1331
00:57:00,319 --> 00:57:03,119
rc9166

1332
00:57:03,119 --> 00:57:05,680
nessles

1333
00:57:09,920 --> 00:57:12,400
now let me introduce some details of

1334
00:57:12,400 --> 00:57:15,119
this new individual draft

1335
00:57:15,119 --> 00:57:17,920
first the m router interface for

1336
00:57:17,920 --> 00:57:19,200
alteration

1337
00:57:19,200 --> 00:57:21,280
and

1338
00:57:21,280 --> 00:57:24,000
in amphitheater there are

1339
00:57:24,000 --> 00:57:26,799
two types of ambulatory interface

1340
00:57:26,799 --> 00:57:29,920
interfaces and it could be called the

1341
00:57:29,920 --> 00:57:33,280
ac embroidery interface and pw amplifier

1342
00:57:33,280 --> 00:57:35,040
interface

1343
00:57:35,040 --> 00:57:36,160
we can

1344
00:57:36,160 --> 00:57:38,160
we could manually

1345
00:57:38,160 --> 00:57:40,480
configure the

1346
00:57:40,480 --> 00:57:43,599
memory interface uh

1347
00:57:43,599 --> 00:57:46,000
ac or pw

1348
00:57:46,000 --> 00:57:49,680
and we could also uh and this

1349
00:57:49,680 --> 00:57:53,280
amazon interfaces for automation

1350
00:57:53,280 --> 00:57:55,040
could also be

1351
00:57:55,040 --> 00:57:57,359
uh learned dynamically

1352
00:57:57,359 --> 00:57:58,960
uh

1353
00:57:58,960 --> 00:58:01,760
when they added uh when when when the

1354
00:58:01,760 --> 00:58:04,400
i'm sorry interfaces are they now they

1355
00:58:04,400 --> 00:58:06,240
learn this um

1356
00:58:06,240 --> 00:58:11,040
and they are read only and nicely

1357
00:58:13,760 --> 00:58:16,079
second

1358
00:58:16,079 --> 00:58:18,799
and there are also two types of

1359
00:58:18,799 --> 00:58:22,490
uh outgoing interfaces for alteration

1360
00:58:22,490 --> 00:58:23,599
[Music]

1361
00:58:23,599 --> 00:58:26,640
we could manually configure the

1362
00:58:26,640 --> 00:58:29,760
outgoing interfaces

1363
00:58:29,760 --> 00:58:33,839
under the htmp smoking instance

1364
00:58:34,160 --> 00:58:35,440
they are

1365
00:58:35,440 --> 00:58:38,799
easy and finally uh

1366
00:58:38,799 --> 00:58:41,520
the necessities

1367
00:58:43,359 --> 00:58:45,839
similarly and these

1368
00:58:45,839 --> 00:58:47,119
uh

1369
00:58:47,119 --> 00:58:50,960
outgoing interfaces could also be

1370
00:58:50,960 --> 00:58:52,880
dynamically landed

1371
00:58:52,880 --> 00:58:54,559
and they are

1372
00:58:54,559 --> 00:58:57,599
and they are read only

1373
00:58:58,000 --> 00:59:00,480
nicely

1374
00:59:03,440 --> 00:59:04,960
and now uh

1375
00:59:04,960 --> 00:59:08,480
in order to uh use the snooping

1376
00:59:08,480 --> 00:59:12,480
instances in the alteration uh

1377
00:59:12,480 --> 00:59:16,240
the l2p uh the htmp smoothing instance

1378
00:59:16,240 --> 00:59:18,640
and i mailed these two uh

1379
00:59:18,640 --> 00:59:22,319
so in order to use the snooki says in

1380
00:59:22,319 --> 00:59:23,599
albuvier

1381
00:59:23,599 --> 00:59:25,359
we argument the

1382
00:59:25,359 --> 00:59:28,960
level instance of cyborgs as

1383
00:59:28,960 --> 00:59:30,160
african

1384
00:59:30,160 --> 00:59:33,359
and the instances could be referenced

1385
00:59:33,359 --> 00:59:34,160
that

1386
00:59:34,160 --> 00:59:36,640
could be referenced in the algorithm

1387
00:59:36,640 --> 00:59:37,599
service

1388
00:59:37,599 --> 00:59:40,640
uh like below

1389
00:59:43,119 --> 00:59:44,799
that's all the

1390
00:59:44,799 --> 00:59:47,200
uh all the updates of uh that's all the

1391
00:59:47,200 --> 00:59:50,160
key points of about this uh individual

1392
00:59:50,160 --> 00:59:53,599
draft uh the next page and that's the

1393
00:59:53,599 --> 00:59:57,599
uh that would like to apply for the uh

1394
00:59:57,599 --> 01:00:00,880
working group adoption and welcome any

1395
01:00:00,880 --> 01:00:04,160
more comments thank you

1396
01:00:05,680 --> 01:00:08,240
i think

1397
01:00:10,400 --> 01:00:14,760
you want to go first i guess

1398
01:00:22,799 --> 01:00:24,400
say that again

1399
01:00:24,400 --> 01:00:27,680
no just waiting for you

1400
01:00:29,520 --> 01:00:30,799
no i don't have a question i was just

1401
01:00:30,799 --> 01:00:33,200
going to do initiate a uh adoption call

1402
01:00:33,200 --> 01:00:34,720
on the okay

1403
01:00:34,720 --> 01:00:38,240
well okay so one one question uh the the

1404
01:00:38,240 --> 01:00:41,040
ltvpn draft that they were waiting on is

1405
01:00:41,040 --> 01:00:44,880
that is that progressing now

1406
01:00:44,880 --> 01:00:46,640
uh

1407
01:00:46,640 --> 01:00:47,680
no

1408
01:00:47,680 --> 01:00:51,359
there's no uh progress now

1409
01:00:51,359 --> 01:00:52,559
the latest

1410
01:00:52,559 --> 01:00:54,960
version is

1411
01:00:54,960 --> 01:00:59,440
has a pair at uh in january 2020

1412
01:00:59,440 --> 01:01:02,240
um right

1413
01:01:02,720 --> 01:01:05,920
so it means that if we move forward this

1414
01:01:05,920 --> 01:01:08,400
with this it will get stuck again i

1415
01:01:08,400 --> 01:01:11,119
guess but i i still think we should move

1416
01:01:11,119 --> 01:01:13,359
forward though so the contents of this

1417
01:01:13,359 --> 01:01:15,119
draft is basically exactly what we

1418
01:01:15,119 --> 01:01:19,799
agreed to publish before right

1419
01:01:24,559 --> 01:01:27,440
is is the content is the content of this

1420
01:01:27,440 --> 01:01:30,640
shaft exactly like the model that was in

1421
01:01:30,640 --> 01:01:31,599
the

1422
01:01:31,599 --> 01:01:33,760
previous drafts right

1423
01:01:33,760 --> 01:01:35,599
yes yes

1424
01:01:35,599 --> 01:01:39,839
yeah okay yeah thanks

1425
01:01:46,480 --> 01:01:48,720
so right now we do have

1426
01:01:48,720 --> 01:01:50,880
10 11 who

1427
01:01:50,880 --> 01:01:53,520
are showing adoption

1428
01:01:53,520 --> 01:01:56,079
agreement for this draft hongji and none

1429
01:01:56,079 --> 01:01:58,160
against so um

1430
01:01:58,160 --> 01:02:01,280
i think that's fairly conclusive

1431
01:02:01,280 --> 01:02:03,760
we'll send an email as lit as well we're

1432
01:02:03,760 --> 01:02:05,599
up to 12 now

1433
01:02:05,599 --> 01:02:10,319
but i think you can safely assume that

1434
01:02:10,319 --> 01:02:13,599
we will adopt this draft

1435
01:02:17,760 --> 01:02:20,079
so for the record we're at 15 right now

1436
01:02:20,079 --> 01:02:21,760
in favor and none against then i'm gonna

1437
01:02:21,760 --> 01:02:23,680
go ahead and end the session thank you

1438
01:02:23,680 --> 01:02:25,039
very much

1439
01:02:25,039 --> 01:02:26,960
all right thank you

1440
01:02:26,960 --> 01:02:29,280
okay

1441
01:02:31,039 --> 01:02:32,799
okay let's see

1442
01:02:32,799 --> 01:02:37,480
next new song

1443
01:02:58,559 --> 01:03:03,000
hello go ahead go ahead yep

1444
01:03:06,400 --> 01:03:09,119
yes go ahead issan

1445
01:03:09,119 --> 01:03:11,599
okay okay

1446
01:03:11,920 --> 01:03:14,079
hello there everyone i'm isung from

1447
01:03:14,079 --> 01:03:16,720
chain mobile and today i will

1448
01:03:16,720 --> 01:03:18,559
present the

1449
01:03:18,559 --> 01:03:22,240
p pim mflr based on the trfa

1450
01:03:22,240 --> 01:03:25,119
this is the second time to present this

1451
01:03:25,119 --> 01:03:27,280
draft and

1452
01:03:27,280 --> 01:03:31,079
the next slide please

1453
01:03:32,000 --> 01:03:34,160
firstly i will give the brief

1454
01:03:34,160 --> 01:03:36,160
introduction of this draft

1455
01:03:36,160 --> 01:03:39,680
and as we know and the pmfr

1456
01:03:39,680 --> 01:03:41,680
it's a very important

1457
01:03:41,680 --> 01:03:44,880
protection mechanism for the multicast

1458
01:03:44,880 --> 01:03:48,000
deploys it can minimize the

1459
01:03:48,000 --> 01:03:49,920
packet loss when the

1460
01:03:49,920 --> 01:03:52,640
failure happens to the

1461
01:03:52,640 --> 01:03:54,720
multicast parts

1462
01:03:54,720 --> 01:03:55,680
but

1463
01:03:55,680 --> 01:03:58,839
in the rfc

1464
01:03:58,839 --> 01:04:00,720
7431

1465
01:04:00,720 --> 01:04:03,760
it can only use the rfa

1466
01:04:03,760 --> 01:04:06,480
but rfa can only cover part of the

1467
01:04:06,480 --> 01:04:09,010
network develop topologies

1468
01:04:09,010 --> 01:04:10,839
[Music]

1469
01:04:10,839 --> 01:04:14,319
so there are some uh

1470
01:04:14,319 --> 01:04:15,920
kind of uh

1471
01:04:15,920 --> 01:04:17,280
the

1472
01:04:17,280 --> 01:04:21,359
topologies and it cannot cover

1473
01:04:21,359 --> 01:04:25,359
and the trfa can help the unicast fr to

1474
01:04:25,359 --> 01:04:26,880
achieve the almost

1475
01:04:26,880 --> 01:04:28,559
100 percent

1476
01:04:28,559 --> 01:04:32,799
uh network capability uh coverage

1477
01:04:32,799 --> 01:04:33,920
so uh

1478
01:04:33,920 --> 01:04:36,400
we are

1479
01:04:36,559 --> 01:04:40,400
in this draft we provide a new mechanism

1480
01:04:40,400 --> 01:04:44,000
by using the tfa for the pmfr

1481
01:04:44,000 --> 01:04:45,839
and it's

1482
01:04:45,839 --> 01:04:48,319
no need for the additional extension of

1483
01:04:48,319 --> 01:04:50,799
the pin protocol just to use the

1484
01:04:50,799 --> 01:04:53,280
existing pin features

1485
01:04:53,280 --> 01:04:55,599
and

1486
01:04:55,599 --> 01:04:58,160
this time we we update the jobs as a

1487
01:04:58,160 --> 01:05:00,400
informational drive and that is a

1488
01:05:00,400 --> 01:05:01,839
recommending

1489
01:05:01,839 --> 01:05:03,280
recommendation

1490
01:05:03,280 --> 01:05:05,680
for the uh multicast protection

1491
01:05:05,680 --> 01:05:07,280
deployment in the

1492
01:05:07,280 --> 01:05:09,119
sr networks

1493
01:05:09,119 --> 01:05:11,920
next step please

1494
01:05:21,039 --> 01:05:25,039
sorry i can't see this line oh okay

1495
01:05:25,119 --> 01:05:28,400
and the first uh firstly uh is

1496
01:05:28,400 --> 01:05:31,359
the mfr based on the rfa that is uh

1497
01:05:31,359 --> 01:05:32,799
has defined the

1498
01:05:32,799 --> 01:05:35,760
at the arabs in rfic

1499
01:05:35,760 --> 01:05:38,000
74-31

1500
01:05:38,000 --> 01:05:40,319
so the uh

1501
01:05:40,319 --> 01:05:43,280
ability to to build the backup multicast

1502
01:05:43,280 --> 01:05:44,400
tree just

1503
01:05:44,400 --> 01:05:47,599
according to the normal uh

1504
01:05:47,599 --> 01:05:52,400
protocol procedure of the rfc 70 77

1505
01:05:52,400 --> 01:05:54,960
61

1506
01:05:55,359 --> 01:05:58,480
the next slide please

1507
01:06:02,839 --> 01:06:08,559
and we come to the uh rfe rfa

1508
01:06:08,559 --> 01:06:10,400
and

1509
01:06:10,400 --> 01:06:11,920
the pqt

1510
01:06:11,920 --> 01:06:13,440
it

1511
01:06:13,440 --> 01:06:16,319
the pq node

1512
01:06:16,559 --> 01:06:18,559
for the rfa and uh

1513
01:06:18,559 --> 01:06:21,760
for the unicast it will uh establish the

1514
01:06:21,760 --> 01:06:22,880
uh

1515
01:06:22,880 --> 01:06:24,720
unicast tunnel

1516
01:06:24,720 --> 01:06:25,520
to

1517
01:06:25,520 --> 01:06:28,240
protect the unicast traffic so

1518
01:06:28,240 --> 01:06:32,479
the typical we can use the

1519
01:06:32,640 --> 01:06:36,400
pmrp vector attribute

1520
01:06:37,200 --> 01:06:39,039
we can

1521
01:06:39,039 --> 01:06:40,160
look the

1522
01:06:40,160 --> 01:06:42,160
pico node at the

1523
01:06:42,160 --> 01:06:44,480
first part of the

1524
01:06:44,480 --> 01:06:46,559
backup multicast cheese

1525
01:06:46,559 --> 01:06:47,599
root

1526
01:06:47,599 --> 01:06:50,079
uh so

1527
01:06:51,280 --> 01:06:55,039
firstly we can uh uh

1528
01:06:55,520 --> 01:06:57,920
build the first the first part of the

1529
01:06:57,920 --> 01:06:59,599
tree and the

1530
01:06:59,599 --> 01:07:01,920
when we

1531
01:07:01,920 --> 01:07:05,680
when the uh pq node select the example

1532
01:07:05,680 --> 01:07:09,359
at the example uh r3

1533
01:07:09,359 --> 01:07:12,839
and we it will remove the vector

1534
01:07:12,839 --> 01:07:15,039
and then

1535
01:07:15,039 --> 01:07:16,400
it will uh

1536
01:07:16,400 --> 01:07:19,039
establish the multicast tree according

1537
01:07:19,039 --> 01:07:20,160
to the

1538
01:07:20,160 --> 01:07:23,759
multicast source directly

1539
01:07:25,039 --> 01:07:28,599
next slide please

1540
01:07:35,440 --> 01:07:39,839
so this is the tfa for the unicast fr in

1541
01:07:39,839 --> 01:07:42,799
the sr1 networks and

1542
01:07:42,799 --> 01:07:45,680
the draft uh trp has defined the

1543
01:07:45,680 --> 01:07:46,799
solution

1544
01:07:46,799 --> 01:07:48,480
and the

1545
01:07:48,480 --> 01:07:50,720
unicast traffic can be protected

1546
01:07:50,720 --> 01:07:52,160
according to the

1547
01:07:52,160 --> 01:07:54,240
sr repair list

1548
01:07:54,240 --> 01:07:58,079
and for the example uh in the picture uh

1549
01:07:58,079 --> 01:08:02,880
the the repair list uh including the

1550
01:08:02,880 --> 01:08:06,319
a node seed uh from the p node and uh

1551
01:08:06,319 --> 01:08:08,400
the

1552
01:08:08,400 --> 01:08:12,799
adjacency node adjacency seed

1553
01:08:14,079 --> 01:08:16,799
for the uh

1554
01:08:16,799 --> 01:08:20,399
p between the p and q

1555
01:08:21,120 --> 01:08:23,279
so uh

1556
01:08:23,279 --> 01:08:25,279
we can uh we can get the

1557
01:08:25,279 --> 01:08:27,439
second at least uh

1558
01:08:27,439 --> 01:08:30,319
to uh to protect the unicast but how to

1559
01:08:30,319 --> 01:08:32,960
use to the pim join

1560
01:08:32,960 --> 01:08:36,759
the next slide please

1561
01:08:38,960 --> 01:08:42,080
uh fortunately we we have uh we have

1562
01:08:42,080 --> 01:08:43,279
uh

1563
01:08:43,279 --> 01:08:45,120
defined uh the

1564
01:08:45,120 --> 01:08:48,640
features for the rpf vector attribute

1565
01:08:48,640 --> 01:08:49,600
and the

1566
01:08:49,600 --> 01:08:51,198
explicit

1567
01:08:51,198 --> 01:08:53,759
rpf vector attribute

1568
01:08:53,759 --> 01:08:55,439
for the node seed

1569
01:08:55,439 --> 01:08:58,880
we can use the rpf vector attribute let

1570
01:08:58,880 --> 01:09:00,000
the

1571
01:09:00,000 --> 01:09:03,279
r4 in the picture

1572
01:09:04,158 --> 01:09:07,839
for the r4 in the vector we use the tab

1573
01:09:07,839 --> 01:09:10,640
0 of the joint attribute

1574
01:09:10,640 --> 01:09:11,600
and

1575
01:09:11,600 --> 01:09:14,080
it will uh look up the

1576
01:09:14,080 --> 01:09:18,158
unicast routing to the r4 and

1577
01:09:18,158 --> 01:09:20,799
hope i hope to send the pim joint from

1578
01:09:20,799 --> 01:09:22,399
the r6

1579
01:09:22,399 --> 01:09:23,759
to r4

1580
01:09:23,759 --> 01:09:25,920
and

1581
01:09:26,238 --> 01:09:29,439
the the second uh the second

1582
01:09:29,439 --> 01:09:32,880
vector is that the exclusive rpf vector

1583
01:09:32,880 --> 01:09:35,920
attribute that the tab four of the draw

1584
01:09:35,920 --> 01:09:39,040
attribute it will uh

1585
01:09:39,040 --> 01:09:42,399
it will not uh look up the unicast

1586
01:09:42,399 --> 01:09:46,000
routing table and just

1587
01:09:46,000 --> 01:09:48,238
specify the

1588
01:09:48,238 --> 01:09:51,040
p upstream neighbor

1589
01:09:51,040 --> 01:09:53,920
so when the pim john

1590
01:09:53,920 --> 01:09:55,920
received by the r4

1591
01:09:55,920 --> 01:09:59,199
and we it will check the

1592
01:09:59,920 --> 01:10:01,679
type 4 attribute

1593
01:10:01,679 --> 01:10:02,800
for the

1594
01:10:02,800 --> 01:10:04,880
r3 and will

1595
01:10:04,880 --> 01:10:07,520
directly send the john to

1596
01:10:07,520 --> 01:10:09,920
to the r3

1597
01:10:09,920 --> 01:10:12,239
and after the

1598
01:10:12,239 --> 01:10:13,600
kim jon

1599
01:10:13,600 --> 01:10:17,600
received by r3 and it will remove the

1600
01:10:17,600 --> 01:10:18,880
vector and

1601
01:10:18,880 --> 01:10:19,679
and

1602
01:10:19,679 --> 01:10:21,360
in the jump packet

1603
01:10:21,360 --> 01:10:23,120
there is no uh

1604
01:10:23,120 --> 01:10:25,120
vector now and

1605
01:10:25,120 --> 01:10:27,679
it will continue to

1606
01:10:27,679 --> 01:10:30,719
establish the multicast tree

1607
01:10:30,719 --> 01:10:32,640
to

1608
01:10:32,640 --> 01:10:34,960
according to the

1609
01:10:34,960 --> 01:10:36,719
rpf uh

1610
01:10:36,719 --> 01:10:37,760
uh

1611
01:10:37,760 --> 01:10:40,640
of the multicultural source directly and

1612
01:10:40,640 --> 01:10:43,199
herbert hope to establish the

1613
01:10:43,199 --> 01:10:47,280
uh remaining backup multicast tree

1614
01:10:47,280 --> 01:10:49,440
so

1615
01:10:49,440 --> 01:10:50,880
that's the method of

1616
01:10:50,880 --> 01:10:52,560
using the

1617
01:10:52,560 --> 01:10:56,000
sr repair list to

1618
01:10:56,800 --> 01:10:58,560
to establish the

1619
01:10:58,560 --> 01:11:00,800
uh

1620
01:11:00,880 --> 01:11:05,600
mofr backup multicast tree

1621
01:11:05,600 --> 01:11:08,320
next step is

1622
01:11:10,159 --> 01:11:12,480
so that's all and

1623
01:11:12,480 --> 01:11:16,120
any comments

1624
01:11:30,239 --> 01:11:33,040
thank you east song is your goal to

1625
01:11:33,040 --> 01:11:35,840
continue to work on it and then oh sorry

1626
01:11:35,840 --> 01:11:38,640
human go ahead

1627
01:11:39,199 --> 01:11:42,800
yeah just one question i wasn't clear

1628
01:11:42,800 --> 01:11:45,199
uh in in the slide that you're sending

1629
01:11:45,199 --> 01:11:46,640
the joins

1630
01:11:46,640 --> 01:11:48,480
uh

1631
01:11:48,480 --> 01:11:50,560
are those going over the

1632
01:11:50,560 --> 01:11:53,360
segment routing or or are they just like

1633
01:11:53,360 --> 01:11:56,559
going over the interface

1634
01:11:56,640 --> 01:11:57,679
oh did

1635
01:11:57,679 --> 01:12:00,239
just going over the interface it just

1636
01:12:00,239 --> 01:12:02,719
use the segment routing as the segment

1637
01:12:02,719 --> 01:12:04,800
list as the

1638
01:12:04,800 --> 01:12:06,840
reference to the

1639
01:12:06,840 --> 01:12:09,760
rpf okay

1640
01:12:09,760 --> 01:12:12,239
but but then the part that gets i'm

1641
01:12:12,239 --> 01:12:13,520
still confused is

1642
01:12:13,520 --> 01:12:16,000
when the traffic comes from r6 and goes

1643
01:12:16,000 --> 01:12:18,400
to r5

1644
01:12:18,400 --> 01:12:21,120
and if the r5 if you are not tunneling

1645
01:12:21,120 --> 01:12:23,600
the traffic and the r5 says that no no

1646
01:12:23,600 --> 01:12:25,280
this is not the best path

1647
01:12:25,280 --> 01:12:27,760
go back to r6

1648
01:12:27,760 --> 01:12:28,800
how are you

1649
01:12:28,800 --> 01:12:32,239
mitigating that issue

1650
01:12:32,320 --> 01:12:34,719
like how are you going from pspace to

1651
01:12:34,719 --> 01:12:38,000
cue a space without the ps base sending

1652
01:12:38,000 --> 01:12:41,840
the traffic back to r6

1653
01:12:42,719 --> 01:12:44,960
oh

1654
01:12:45,280 --> 01:12:48,400
this also according to the pin protocol

1655
01:12:48,400 --> 01:12:51,639
and the

1656
01:12:53,440 --> 01:12:56,639
state for the sg

1657
01:12:58,719 --> 01:13:01,280
okay r6 will uh

1658
01:13:01,280 --> 01:13:03,440
we'll send the drone to the r5 and r5 we

1659
01:13:03,440 --> 01:13:08,159
will we will create the sd state

1660
01:13:08,880 --> 01:13:11,440
and also look for the r4

1661
01:13:11,440 --> 01:13:13,280
s3

1662
01:13:13,280 --> 01:13:14,719
so so basically what you're saying the

1663
01:13:14,719 --> 01:13:16,560
multicast i guess part i'm confused

1664
01:13:16,560 --> 01:13:18,480
about the multicast traffic is never

1665
01:13:18,480 --> 01:13:20,480
going over any

1666
01:13:20,480 --> 01:13:24,480
sr tunnel it's just being forwarded

1667
01:13:24,480 --> 01:13:26,320
yeah yeah yeah yeah

1668
01:13:26,320 --> 01:13:28,800
okay my money costs the traffic never

1669
01:13:28,800 --> 01:13:30,400
never to the

1670
01:13:30,400 --> 01:13:33,839
sr other parts

1671
01:13:37,760 --> 01:13:40,760
nils

1672
01:13:47,520 --> 01:13:50,239
is there a question

1673
01:13:56,560 --> 01:13:58,239
can you hear me now

1674
01:13:58,239 --> 01:13:59,600
yeah

1675
01:13:59,600 --> 01:14:01,120
okay great

1676
01:14:01,120 --> 01:14:04,480
yeah um i also have a question um

1677
01:14:04,480 --> 01:14:07,920
from my understanding of mofr this is a

1678
01:14:07,920 --> 01:14:09,440
live live

1679
01:14:09,440 --> 01:14:11,840
communication so you will receive on our

1680
01:14:11,840 --> 01:14:13,120
sixth

1681
01:14:13,120 --> 01:14:14,719
um

1682
01:14:14,719 --> 01:14:16,960
the streams twice

1683
01:14:16,960 --> 01:14:19,199
so um

1684
01:14:19,199 --> 01:14:22,400
i'm i don't know if i'm just um thinking

1685
01:14:22,400 --> 01:14:23,360
too

1686
01:14:23,360 --> 01:14:27,199
far out in your example but

1687
01:14:27,199 --> 01:14:28,800
looking

1688
01:14:28,800 --> 01:14:31,280
looking at the example that you've given

1689
01:14:31,280 --> 01:14:32,159
here

1690
01:14:32,159 --> 01:14:35,599
with low bandwidth

1691
01:14:37,280 --> 01:14:39,759
routes

1692
01:14:40,239 --> 01:14:42,159
this

1693
01:14:42,159 --> 01:14:45,760
this this really seems a bit uh like

1694
01:14:45,760 --> 01:14:49,040
constructed um

1695
01:14:49,040 --> 01:14:52,560
is is there a real life um demand behind

1696
01:14:52,560 --> 01:14:55,600
this or is this more of a

1697
01:14:55,600 --> 01:15:00,880
theoretical and educational rfc

1698
01:15:02,080 --> 01:15:06,719
uh this is a information of the

1699
01:15:06,719 --> 01:15:08,800
information dropped and

1700
01:15:08,800 --> 01:15:10,960
we just uh

1701
01:15:10,960 --> 01:15:14,640
re recommended this uh mechanism in the

1702
01:15:14,640 --> 01:15:18,480
sr networks if we use the

1703
01:15:18,480 --> 01:15:22,759
pim traditional pim for the multicast

1704
01:15:25,360 --> 01:15:27,679
okay

1705
01:15:28,159 --> 01:15:30,880
yep okay thanks

1706
01:15:30,880 --> 01:15:34,280
okay thank you

1707
01:15:41,360 --> 01:15:42,800
stig may have to

1708
01:15:42,800 --> 01:15:45,280
make a call on this draft going forward

1709
01:15:45,280 --> 01:15:47,360
since i'm draft

1710
01:15:47,360 --> 01:15:50,360
right

1711
01:15:57,120 --> 01:16:00,239
yeah so the draft looks interesting

1712
01:16:00,239 --> 01:16:02,560
to me as well um

1713
01:16:02,560 --> 01:16:04,800
i wonder um

1714
01:16:04,800 --> 01:16:07,040
i guess we can do uh we can do a call i

1715
01:16:07,040 --> 01:16:09,120
wonder whether we you know whether

1716
01:16:09,120 --> 01:16:10,880
people understand really enough what's

1717
01:16:10,880 --> 01:16:13,840
it what's in the document or or not but

1718
01:16:13,840 --> 01:16:15,280
maybe

1719
01:16:15,280 --> 01:16:16,960
maybe most people

1720
01:16:16,960 --> 01:16:19,600
have read it and get it um

1721
01:16:19,600 --> 01:16:24,320
let's we can we can try a poll and see

1722
01:16:27,360 --> 01:16:29,520
you may do that or are you doing that

1723
01:16:29,520 --> 01:16:31,280
i can

1724
01:16:31,280 --> 01:16:32,960
yeah maybe you can do it

1725
01:16:32,960 --> 01:16:35,040
okay i'm trying to figure out how here

1726
01:16:35,040 --> 01:16:36,239
but

1727
01:16:36,239 --> 01:16:38,640
yeah a little under the weather today

1728
01:16:38,640 --> 01:16:40,000
yeah yeah

1729
01:16:40,000 --> 01:16:43,880
you're a hero for being here

1730
01:17:08,239 --> 01:17:10,239
do you guys see the results like i'm

1731
01:17:10,239 --> 01:17:12,718
seeing it

1732
01:17:12,800 --> 01:17:16,320
i'm seeing it at least is

1733
01:17:16,320 --> 01:17:18,880
can a non-chair see

1734
01:17:18,880 --> 01:17:21,520
what i'm saying

1735
01:17:22,000 --> 01:17:24,400
i'm guessing not it's not fair if you

1736
01:17:24,400 --> 01:17:26,159
can see it right

1737
01:17:26,159 --> 01:17:27,520
before

1738
01:17:27,520 --> 01:17:28,640
i would think

1739
01:17:28,640 --> 01:17:30,239
maybe

1740
01:17:30,239 --> 01:17:33,040
well right now we've got 14 that have

1741
01:17:33,040 --> 01:17:34,719
raised their hand in support

1742
01:17:34,719 --> 01:17:37,040
against

1743
01:17:37,280 --> 01:17:39,360
so

1744
01:17:39,360 --> 01:17:41,440
yeah so um

1745
01:17:41,440 --> 01:17:44,000
well there's definitely

1746
01:17:44,000 --> 01:17:47,760
a lot of interest but yeah see we have

1747
01:17:47,760 --> 01:17:51,280
you know a couple of people

1748
01:17:51,679 --> 01:17:54,960
against as well so

1749
01:17:54,960 --> 01:17:58,000
so i would say we

1750
01:17:58,000 --> 01:18:01,280
need to take it to the list

1751
01:18:01,440 --> 01:18:04,000
we need to understand you know

1752
01:18:04,000 --> 01:18:06,080
why some people are against it as well

1753
01:18:06,080 --> 01:18:07,199
and

1754
01:18:07,199 --> 01:18:12,480
also possibly why people support it

1755
01:18:12,480 --> 01:18:14,080
uh but at least we have a lot of

1756
01:18:14,080 --> 01:18:16,239
interest so uh

1757
01:18:16,239 --> 01:18:17,840
we should definitely go ahead and do an

1758
01:18:17,840 --> 01:18:21,520
adoption call on the mailing list

1759
01:18:22,000 --> 01:18:24,080
yeah so just for the notes from when i

1760
01:18:24,080 --> 01:18:25,199
do it

1761
01:18:25,199 --> 01:18:27,520
right now it's 15 in support and one

1762
01:18:27,520 --> 01:18:28,640
against then i'm going to end the

1763
01:18:28,640 --> 01:18:31,640
session

1764
01:18:41,440 --> 01:18:44,320
great thanks now we now uh now we have a

1765
01:18:44,320 --> 01:18:47,280
few drafts and it looks like we've got a

1766
01:18:47,280 --> 01:18:49,600
decent amount of time here

1767
01:18:49,600 --> 01:18:50,880
that

1768
01:18:50,880 --> 01:18:53,679
all have some

1769
01:18:53,760 --> 01:18:55,280
something to do with uh point to

1770
01:18:55,280 --> 01:18:57,760
multipoint uh

1771
01:18:57,760 --> 01:19:03,120
srv6 and related ideas and so um

1772
01:19:03,120 --> 01:19:06,000
waymo is going to be the first one

1773
01:19:06,000 --> 01:19:07,440
he's just getting back from presenting

1774
01:19:07,440 --> 01:19:09,280
in another working group so he's a hero

1775
01:19:09,280 --> 01:19:11,360
for getting here quickly

1776
01:19:11,360 --> 01:19:13,600
yeah i'm here i'm here you hear me great

1777
01:19:13,600 --> 01:19:16,159
yeah thanks

1778
01:19:16,400 --> 01:19:18,960
so hello everyone i'm going to talking

1779
01:19:18,960 --> 01:19:20,640
about multicast

1780
01:19:20,640 --> 01:19:25,360
using multicast routing head next page

1781
01:19:26,960 --> 01:19:30,159
the existing solution based on sr

1782
01:19:30,159 --> 01:19:31,600
include

1783
01:19:31,600 --> 01:19:34,480
srp 2mp policy

1784
01:19:34,480 --> 01:19:36,800
and our previous draft

1785
01:19:36,800 --> 01:19:39,840
there's a v6 ptop pass

1786
01:19:39,840 --> 01:19:42,480
which we have received lots of comments

1787
01:19:42,480 --> 01:19:44,480
from the working group

1788
01:19:44,480 --> 01:19:46,960
so these existing solutions

1789
01:19:46,960 --> 01:19:48,840
have some

1790
01:19:48,840 --> 01:19:52,080
weakness and the multicast

1791
01:19:52,080 --> 01:19:55,040
using multicast routing overhead

1792
01:19:55,040 --> 01:19:57,440
is a good alternative

1793
01:19:57,440 --> 01:19:58,320
which

1794
01:19:58,320 --> 01:20:00,320
takes

1795
01:20:00,320 --> 01:20:01,199
these

1796
01:20:01,199 --> 01:20:03,360
comments into account

1797
01:20:03,360 --> 01:20:07,920
and also is more scalable next page

1798
01:20:09,840 --> 01:20:12,239
so basically

1799
01:20:12,239 --> 01:20:14,480
each link of a node has a link number

1800
01:20:14,480 --> 01:20:16,400
which is local

1801
01:20:16,400 --> 01:20:19,760
each node in the network have a

1802
01:20:19,760 --> 01:20:21,199
table

1803
01:20:21,199 --> 01:20:22,800
this table maps

1804
01:20:22,800 --> 01:20:24,239
link number

1805
01:20:24,239 --> 01:20:26,239
to the last hop address of the of the

1806
01:20:26,239 --> 01:20:28,400
link

1807
01:20:28,400 --> 01:20:31,679
a multicast tree is encoded by linked

1808
01:20:31,679 --> 01:20:33,120
numbers

1809
01:20:33,120 --> 01:20:35,280
the increase of the tree

1810
01:20:35,280 --> 01:20:36,480
in caps

1811
01:20:36,480 --> 01:20:38,480
the mycast package

1812
01:20:38,480 --> 01:20:39,920
into a

1813
01:20:39,920 --> 01:20:41,840
multicast routing header

1814
01:20:41,840 --> 01:20:44,080
for each subtree

1815
01:20:44,080 --> 01:20:47,679
from the desktop of the ingress and then

1816
01:20:47,679 --> 01:20:48,719
send

1817
01:20:48,719 --> 01:20:51,120
the package to the next hop

1818
01:20:51,120 --> 01:20:53,920
and then finally the package will reach

1819
01:20:53,920 --> 01:20:54,719
to

1820
01:20:54,719 --> 01:20:57,120
each of the eagles node

1821
01:20:57,120 --> 01:20:58,840
and at the transient

1822
01:20:58,840 --> 01:21:01,280
node after transient nodes receive the

1823
01:21:01,280 --> 01:21:04,320
package transient node just gets

1824
01:21:04,320 --> 01:21:06,239
each of the linked numbers

1825
01:21:06,239 --> 01:21:09,120
from the uh matrix routing header and

1826
01:21:09,120 --> 01:21:11,440
then find the next hardware address from

1827
01:21:11,440 --> 01:21:14,000
the link number from the label table and

1828
01:21:14,000 --> 01:21:16,800
then send the package to the next home

1829
01:21:16,800 --> 01:21:20,719
at the equation node equals nodes just

1830
01:21:20,719 --> 01:21:22,960
recap the package and then send the

1831
01:21:22,960 --> 01:21:25,679
package to the ip multicast

1832
01:21:25,679 --> 01:21:29,840
forwarding module next page

1833
01:21:31,280 --> 01:21:33,120
so this is the basic encoding of

1834
01:21:33,120 --> 01:21:35,199
multicast tree

1835
01:21:35,199 --> 01:21:37,040
we're just encoding

1836
01:21:37,040 --> 01:21:40,080
the tree every every link on the tree

1837
01:21:40,080 --> 01:21:42,239
and then each link

1838
01:21:42,239 --> 01:21:44,960
from node u to d

1839
01:21:44,960 --> 01:21:47,760
is encoded by three views

1840
01:21:47,760 --> 01:21:51,280
link number field indicator link number

1841
01:21:51,280 --> 01:21:52,719
unknown to you

1842
01:21:52,719 --> 01:21:55,040
the lumber branches is the number for

1843
01:21:55,040 --> 01:21:57,360
links

1844
01:21:57,760 --> 01:22:00,719
we lost the slide stick

1845
01:22:00,719 --> 01:22:03,280
can you refresh

1846
01:22:03,280 --> 01:22:05,840
i refresh

1847
01:22:05,840 --> 01:22:08,560
i can see the slides

1848
01:22:08,560 --> 01:22:10,880
is this

1849
01:22:22,840 --> 01:22:25,360
yes then the third

1850
01:22:25,360 --> 01:22:28,880
or not the previous one

1851
01:22:29,600 --> 01:22:31,760
previous yeah yeah no no the previous

1852
01:22:31,760 --> 01:22:34,639
one page page yeah this one page four

1853
01:22:34,639 --> 01:22:36,960
okay the third field is a point to

1854
01:22:36,960 --> 01:22:39,760
pointed to the sub tree from b

1855
01:22:39,760 --> 01:22:42,639
so for example for link from ingress

1856
01:22:42,639 --> 01:22:46,000
from p1 to p1

1857
01:22:46,000 --> 01:22:47,840
the link number is 2

1858
01:22:47,840 --> 01:22:50,159
and then the number of branches from

1859
01:22:50,159 --> 01:22:53,040
ge1 is four we have four links from p1

1860
01:22:53,040 --> 01:22:54,480
and then the

1861
01:22:54,480 --> 01:22:56,639
number 22 as a point pointed to the

1862
01:22:56,639 --> 01:23:01,120
subtree from g1 so next page

1863
01:23:02,480 --> 01:23:03,760
so for the

1864
01:23:03,760 --> 01:23:06,400
which is for the equals node for the

1865
01:23:06,400 --> 01:23:08,560
link to the user node those are number

1866
01:23:08,560 --> 01:23:10,800
of branches and the point are all zeros

1867
01:23:10,800 --> 01:23:13,600
and then we can introduce a flag l to

1868
01:23:13,600 --> 01:23:15,600
indicate this linkage to eagle zone and

1869
01:23:15,600 --> 01:23:17,679
then we can remove those

1870
01:23:17,679 --> 01:23:18,639
uh

1871
01:23:18,639 --> 01:23:20,719
two fields lincoln number of links and

1872
01:23:20,719 --> 01:23:22,480
the pointer to the

1873
01:23:22,480 --> 01:23:26,400
sub tree so in this way we can

1874
01:23:26,400 --> 01:23:27,679
reduce

1875
01:23:27,679 --> 01:23:30,560
the overhead for example after receiving

1876
01:23:30,560 --> 01:23:32,719
the those two fields for the link to the

1877
01:23:32,719 --> 01:23:35,360
equals note we can use

1878
01:23:35,360 --> 01:23:39,840
16 bytes to inc include to encode

1879
01:23:39,840 --> 01:23:41,360
14

1880
01:23:41,360 --> 01:23:45,199
notes three the trigger with 40 nodes

1881
01:23:45,199 --> 01:23:48,599
so next page

1882
01:23:48,800 --> 01:23:50,880
so in addition to that improvement we

1883
01:23:50,880 --> 01:23:54,320
can also remove the link example field

1884
01:23:54,320 --> 01:23:56,800
using a bit

1885
01:23:56,800 --> 01:23:59,040
bit set one indicate that

1886
01:23:59,040 --> 01:24:01,440
the beast number will be used

1887
01:24:01,440 --> 01:24:04,800
to encode the encoded link numbers

1888
01:24:04,800 --> 01:24:06,639
from a node

1889
01:24:06,639 --> 01:24:07,440
b

1890
01:24:07,440 --> 01:24:09,920
so for example we have subtree here from

1891
01:24:09,920 --> 01:24:11,280
p3

1892
01:24:11,280 --> 01:24:12,000
to

1893
01:24:12,000 --> 01:24:12,890
p4 to

1894
01:24:12,890 --> 01:24:14,320
[Music]

1895
01:24:14,320 --> 01:24:16,880
pe4 to p mark

1896
01:24:16,880 --> 01:24:22,560
p7 so in this so those links from e4

1897
01:24:22,560 --> 01:24:25,440
can be encoded by bit strings and also

1898
01:24:25,440 --> 01:24:26,960
we have a p

1899
01:24:26,960 --> 01:24:30,080
flag indicate that those

1900
01:24:30,080 --> 01:24:31,920
nodes

1901
01:24:31,920 --> 01:24:34,239
in addition to

1902
01:24:34,239 --> 01:24:35,600
represented by

1903
01:24:35,600 --> 01:24:39,040
the beast number and also indicate that

1904
01:24:39,040 --> 01:24:41,920
the light swap is a leaf nose so in this

1905
01:24:41,920 --> 01:24:45,280
way we also remove the l bit

1906
01:24:45,280 --> 01:24:48,320
in this case so in this way we encode

1907
01:24:48,320 --> 01:24:49,600
the subtree

1908
01:24:49,600 --> 01:24:52,480
here just using four parts

1909
01:24:52,480 --> 01:24:55,280
so next page

1910
01:24:56,480 --> 01:24:59,280
so this is another example to use

1911
01:24:59,280 --> 01:25:01,440
use the piece to encode the part of the

1912
01:25:01,440 --> 01:25:03,280
sub tree

1913
01:25:03,280 --> 01:25:05,840
so this in this way we just when visa is

1914
01:25:05,840 --> 01:25:07,600
used and then we

1915
01:25:07,600 --> 01:25:09,199
also remove the

1916
01:25:09,199 --> 01:25:10,800
link number

1917
01:25:10,800 --> 01:25:13,360
link number field so we further improve

1918
01:25:13,360 --> 01:25:17,519
the encoding so next page

1919
01:25:18,880 --> 01:25:22,400
so we come together we have a encoding

1920
01:25:22,400 --> 01:25:23,920
for a whole tree

1921
01:25:23,920 --> 01:25:27,280
so we use certain bytes to encode the

1922
01:25:27,280 --> 01:25:29,759
whole tree

1923
01:25:29,840 --> 01:25:32,239
so when we

1924
01:25:32,239 --> 01:25:34,960
use this one and then we in english

1925
01:25:34,960 --> 01:25:37,199
english node we just

1926
01:25:37,199 --> 01:25:38,639
includes

1927
01:25:38,639 --> 01:25:42,159
the subtree from p1 so in fact we only

1928
01:25:42,159 --> 01:25:42,960
use

1929
01:25:42,960 --> 01:25:44,639
eleven pad

1930
01:25:44,639 --> 01:25:46,800
to

1931
01:25:46,960 --> 01:25:49,280
do the forwarding that's the overhead

1932
01:25:49,280 --> 01:25:52,599
next page

1933
01:25:54,080 --> 01:25:56,560
mud has rolling head

1934
01:25:56,560 --> 01:25:58,560
the mud cast rolling head is a rolling

1935
01:25:58,560 --> 01:26:01,760
head with a new routing type

1936
01:26:01,760 --> 01:26:02,639
this

1937
01:26:02,639 --> 01:26:04,560
header is similar to sigma rounding

1938
01:26:04,560 --> 01:26:06,080
header

1939
01:26:06,080 --> 01:26:08,560
it will contain a subtree from an ice

1940
01:26:08,560 --> 01:26:10,159
hop

1941
01:26:10,159 --> 01:26:12,800
and then we have sl

1942
01:26:12,800 --> 01:26:15,120
we are pointed to the sub tree

1943
01:26:15,120 --> 01:26:16,480
we have field

1944
01:26:16,480 --> 01:26:18,880
mb which is the number of branches or

1945
01:26:18,880 --> 01:26:21,199
lamp links

1946
01:26:21,199 --> 01:26:25,599
and then we have bit to indicate whether

1947
01:26:25,920 --> 01:26:28,880
whether the bit string is used for the

1948
01:26:28,880 --> 01:26:31,120
links from knightshop

1949
01:26:31,120 --> 01:26:33,199
on the english english note of a

1950
01:26:33,199 --> 01:26:37,120
multicast tree will encap a package

1951
01:26:37,120 --> 01:26:39,840
in a mud cast rolling header for each

1952
01:26:39,840 --> 01:26:42,239
next hop and then send this one to the

1953
01:26:42,239 --> 01:26:43,679
next hop

1954
01:26:43,679 --> 01:26:45,760
the mic rolling header

1955
01:26:45,760 --> 01:26:50,639
will include subtree from next hop

1956
01:26:50,639 --> 01:26:53,920
and then the english node which just set

1957
01:26:53,920 --> 01:26:55,199
the fuse

1958
01:26:55,199 --> 01:26:58,000
such as sl mb and the b

1959
01:26:58,000 --> 01:27:00,880
in the multicast rolling header to the

1960
01:27:00,880 --> 01:27:02,800
corresponding value

1961
01:27:02,800 --> 01:27:04,719
to for the link

1962
01:27:04,719 --> 01:27:07,040
from english node to the next hop for

1963
01:27:07,040 --> 01:27:09,600
example here mb will get

1964
01:27:09,600 --> 01:27:12,239
the value

1965
01:27:12,320 --> 01:27:13,440
from this

1966
01:27:13,440 --> 01:27:15,760
uh cycled one which is a value

1967
01:27:15,760 --> 01:27:17,600
corresponding to the link from english

1968
01:27:17,600 --> 01:27:19,440
node to

1969
01:27:19,440 --> 01:27:20,880
e1 next hop

1970
01:27:20,880 --> 01:27:23,760
and then just set send this package to

1971
01:27:23,760 --> 01:27:24,719
the

1972
01:27:24,719 --> 01:27:28,960
microsoft which is p1 next page

1973
01:27:29,280 --> 01:27:31,440
so after p1 as transcendent receive the

1974
01:27:31,440 --> 01:27:33,440
package

1975
01:27:33,440 --> 01:27:34,719
so it will

1976
01:27:34,719 --> 01:27:35,920
send

1977
01:27:35,920 --> 01:27:39,520
a copy to each of its last hop

1978
01:27:39,520 --> 01:27:42,320
for example for electro g2

1979
01:27:42,320 --> 01:27:44,880
v1 just sets

1980
01:27:44,880 --> 01:27:48,639
the fuse bmb and sl in the header to the

1981
01:27:48,639 --> 01:27:51,280
corresponding value

1982
01:27:51,280 --> 01:27:53,440
for the link to the next hop

1983
01:27:53,440 --> 01:27:56,480
and then deliver to the to the next hop

1984
01:27:56,480 --> 01:27:59,040
that's very simple without any

1985
01:27:59,040 --> 01:28:01,520
modification inside of the tree included

1986
01:28:01,520 --> 01:28:03,360
in the in the header

1987
01:28:03,360 --> 01:28:07,040
for egress node for example for from

1988
01:28:07,040 --> 01:28:11,280
from p1 to p8 which is the eagles node

1989
01:28:11,280 --> 01:28:14,080
we just set sl to zero and then deliver

1990
01:28:14,080 --> 01:28:15,840
the package to the equals node

1991
01:28:15,840 --> 01:28:17,520
after receiving

1992
01:28:17,520 --> 01:28:19,199
the package

1993
01:28:19,199 --> 01:28:21,040
if it is a equals node

1994
01:28:21,040 --> 01:28:23,199
which is indicated by sl equals zero

1995
01:28:23,199 --> 01:28:24,080
zero

1996
01:28:24,080 --> 01:28:26,639
equals node just the capital package and

1997
01:28:26,639 --> 01:28:28,480
then send the

1998
01:28:28,480 --> 01:28:31,040
package to the ip multicast for the

1999
01:28:31,040 --> 01:28:33,199
module i'm done

2000
01:28:33,199 --> 01:28:35,919
so next page

2001
01:28:37,360 --> 01:28:39,280
yeah i think this is the first street

2002
01:28:39,280 --> 01:28:41,520
fold and the symbol and then i would

2003
01:28:41,520 --> 01:28:44,480
like a comment and also if possible i

2004
01:28:44,480 --> 01:28:46,000
would like a

2005
01:28:46,000 --> 01:28:49,880
requested option called

2006
01:28:59,360 --> 01:29:01,440
as a individual

2007
01:29:01,440 --> 01:29:04,239
contributor to this draft

2008
01:29:04,239 --> 01:29:06,480
it would also be helpful if this would

2009
01:29:06,480 --> 01:29:07,520
probably be something that we need to

2010
01:29:07,520 --> 01:29:09,760
discuss of course further on the list

2011
01:29:09,760 --> 01:29:12,159
but um

2012
01:29:12,159 --> 01:29:14,960
bob hinden did mention to us

2013
01:29:14,960 --> 01:29:16,800
that the

2014
01:29:16,800 --> 01:29:19,120
uh so waymo presented this in six men as

2015
01:29:19,120 --> 01:29:19,920
well

2016
01:29:19,920 --> 01:29:22,239
this week and

2017
01:29:22,239 --> 01:29:24,159
bob mentioned to us that the header

2018
01:29:24,159 --> 01:29:26,719
format and processing would

2019
01:29:26,719 --> 01:29:29,760
be okay for six man to discuss but a

2020
01:29:29,760 --> 01:29:31,040
whole

2021
01:29:31,040 --> 01:29:32,880
the whole notion of

2022
01:29:32,880 --> 01:29:35,199
uh this multicast routing header that

2023
01:29:35,199 --> 01:29:37,440
waymo described would be better in the

2024
01:29:37,440 --> 01:29:39,280
work group that's focused on multicast

2025
01:29:39,280 --> 01:29:42,239
and that's why he's presenting it here

2026
01:29:42,239 --> 01:29:43,120
so

2027
01:29:43,120 --> 01:29:44,320
if

2028
01:29:44,320 --> 01:29:45,760
we were to ever

2029
01:29:45,760 --> 01:29:48,000
take up a

2030
01:29:48,000 --> 01:29:50,480
this draft

2031
01:29:50,480 --> 01:29:53,600
six man would then

2032
01:29:53,600 --> 01:29:56,000
work on the actual um

2033
01:29:56,000 --> 01:29:56,880
uh

2034
01:29:56,880 --> 01:29:58,080
processing

2035
01:29:58,080 --> 01:29:59,840
and the header format

2036
01:29:59,840 --> 01:30:02,159
it probably would be kind of similar to

2037
01:30:02,159 --> 01:30:05,440
what uh newman did very successfully

2038
01:30:05,440 --> 01:30:06,719
with

2039
01:30:06,719 --> 01:30:09,840
point to multi-point draft and having a

2040
01:30:09,840 --> 01:30:11,520
replication segment

2041
01:30:11,520 --> 01:30:13,679
defined in spring and then the stitching

2042
01:30:13,679 --> 01:30:15,040
of all those

2043
01:30:15,040 --> 01:30:16,639
um

2044
01:30:16,639 --> 01:30:18,960
segments and a policy done here so it's

2045
01:30:18,960 --> 01:30:21,760
kind of a rough equivalent to that so

2046
01:30:21,760 --> 01:30:25,280
just wanted to throw that in there

2047
01:30:28,320 --> 01:30:29,760
but you're going to have to drive the

2048
01:30:29,760 --> 01:30:31,920
stick

2049
01:30:31,920 --> 01:30:33,280
right

2050
01:30:33,280 --> 01:30:36,159
uh for this stuff i feel like we

2051
01:30:36,159 --> 01:30:37,199
probably

2052
01:30:37,199 --> 01:30:38,880
need people to

2053
01:30:38,880 --> 01:30:40,800
you know give people some time to read

2054
01:30:40,800 --> 01:30:42,880
it carefully

2055
01:30:42,880 --> 01:30:43,920
uh

2056
01:30:43,920 --> 01:30:47,160
this this is uh all new right so

2057
01:30:47,160 --> 01:30:48,320
[Music]

2058
01:30:48,320 --> 01:30:51,520
i i suspect not too many people have

2059
01:30:51,520 --> 01:30:54,639
really started it yet

2060
01:30:56,080 --> 01:30:58,560
so uh

2061
01:30:58,560 --> 01:31:00,800
yeah i would say let's let's have a

2062
01:31:00,800 --> 01:31:02,719
let's follow up on the mailing list and

2063
01:31:02,719 --> 01:31:04,719
try to

2064
01:31:04,719 --> 01:31:07,440
try to um

2065
01:31:07,440 --> 01:31:09,520
try to have some discussion there it

2066
01:31:09,520 --> 01:31:11,040
would have been nice if you could ask

2067
01:31:11,040 --> 01:31:14,320
how many people have um

2068
01:31:14,320 --> 01:31:16,320
read it perhaps but if it's worth having

2069
01:31:16,320 --> 01:31:19,440
a poll just for that

2070
01:31:20,000 --> 01:31:21,760
okay i'll do that and robin's got a

2071
01:31:21,760 --> 01:31:23,040
question

2072
01:31:23,040 --> 01:31:24,880
okay sure

2073
01:31:24,880 --> 01:31:26,480
okay uh

2074
01:31:26,480 --> 01:31:28,800
okay robin from huawei

2075
01:31:28,800 --> 01:31:31,120
so my comments is that

2076
01:31:31,120 --> 01:31:32,080
later

2077
01:31:32,080 --> 01:31:34,960
we will provide some this compilation

2078
01:31:34,960 --> 01:31:36,400
between the

2079
01:31:36,400 --> 01:31:39,440
this solution and the premiere this

2080
01:31:39,440 --> 01:31:40,960
solution

2081
01:31:40,960 --> 01:31:42,159
yes

2082
01:31:42,159 --> 01:31:45,520
yes progress this p2mp

2083
01:31:45,520 --> 01:31:46,880
that's the

2084
01:31:46,880 --> 01:31:48,880
uh i sr

2085
01:31:48,880 --> 01:31:52,239
solution that uh that dropped us also to

2086
01:31:52,239 --> 01:31:55,280
encapsulate the p2mp3

2087
01:31:55,280 --> 01:31:56,800
okay

2088
01:31:56,800 --> 01:31:57,760
right

2089
01:31:57,760 --> 01:32:00,400
you're right so there are a couple of

2090
01:32:00,400 --> 01:32:01,679
or different

2091
01:32:01,679 --> 01:32:05,280
solutions here right yeah

2092
01:32:05,280 --> 01:32:07,520
so we may have to

2093
01:32:07,520 --> 01:32:10,159
give it some time to you know

2094
01:32:10,159 --> 01:32:12,000
have people understand all the different

2095
01:32:12,000 --> 01:32:14,480
options

2096
01:32:26,239 --> 01:32:27,760
so ten people have indicated that

2097
01:32:27,760 --> 01:32:29,280
they've read the draft and yeah i've

2098
01:32:29,280 --> 01:32:31,280
indicated they have not so there you go

2099
01:32:31,280 --> 01:32:33,760
yeah yeah okay thanks

2100
01:32:33,760 --> 01:32:37,840
yeah i think let's uh let's get all the

2101
01:32:37,840 --> 01:32:41,679
you know all this potential solutions

2102
01:32:41,679 --> 01:32:44,000
yeah um

2103
01:32:44,000 --> 01:32:46,080
first and then uh

2104
01:32:46,080 --> 01:32:48,639
we need to you know discuss them a bit

2105
01:32:48,639 --> 01:32:50,639
more carefully to find out which

2106
01:32:50,639 --> 01:32:54,920
solutions look the most promising

2107
01:32:57,120 --> 01:33:00,000
so i would say let's just take

2108
01:33:00,000 --> 01:33:01,120
continue

2109
01:33:01,120 --> 01:33:06,280
discussing the draft on the mailing list

2110
01:33:08,320 --> 01:33:10,960
but we uh yeah we should work towards

2111
01:33:10,960 --> 01:33:13,520
evaluating the proposals and finding out

2112
01:33:13,520 --> 01:33:15,679
which which solutions would

2113
01:33:15,679 --> 01:33:17,679
look the best

2114
01:33:17,679 --> 01:33:20,639
uh tallest oh i'm just waiting to uh

2115
01:33:20,639 --> 01:33:22,239
present

2116
01:33:22,239 --> 01:33:24,880
right yeah let's let's take it to the

2117
01:33:24,880 --> 01:33:26,719
list and uh

2118
01:33:26,719 --> 01:33:29,679
twirl us next step

2119
01:33:29,679 --> 01:33:31,920
can you still share the slides so i'm

2120
01:33:31,920 --> 01:33:33,280
not sure that

2121
01:33:33,280 --> 01:33:35,040
uh

2122
01:33:35,040 --> 01:33:36,960
yeah oh

2123
01:33:36,960 --> 01:33:39,920
i know you can easily do it yourself but

2124
01:33:39,920 --> 01:33:41,760
i i got it here now

2125
01:33:41,760 --> 01:33:42,880
yeah

2126
01:33:42,880 --> 01:33:45,840
okay so presenting um

2127
01:33:45,840 --> 01:33:47,199
what yeah

2128
01:33:47,199 --> 01:33:48,239
uh

2129
01:33:48,239 --> 01:33:50,239
alternative option or but whether

2130
01:33:50,239 --> 01:33:53,679
they're exclusionary or um

2131
01:33:53,679 --> 01:33:55,360
amend each other i think that's that's

2132
01:33:55,360 --> 01:33:58,400
another interesting question next slide

2133
01:33:58,400 --> 01:34:01,440
okay so um what what we want to have is

2134
01:34:01,440 --> 01:34:04,159
a native ipv6 srv6 solution for point to

2135
01:34:04,159 --> 01:34:06,639
multipoint that is stateless homan

2136
01:34:06,639 --> 01:34:08,960
already done all the work for the state

2137
01:34:08,960 --> 01:34:11,679
full ones with the replication segments

2138
01:34:11,679 --> 01:34:13,280
so this is intended to be part of the

2139
01:34:13,280 --> 01:34:16,400
srv6 architecture for networks with only

2140
01:34:16,400 --> 01:34:19,440
ipv6 and srv6 so where the operators do

2141
01:34:19,440 --> 01:34:21,840
not want additional layer 3 forwarding

2142
01:34:21,840 --> 01:34:24,960
planes for multicast that are not ipv6

2143
01:34:24,960 --> 01:34:27,440
and we want this as much as possible to

2144
01:34:27,440 --> 01:34:28,159
be

2145
01:34:28,159 --> 01:34:30,719
well as little changes over you know

2146
01:34:30,719 --> 01:34:32,960
what we're doing let's say with the sra

2147
01:34:32,960 --> 01:34:35,040
chatter for for path but just the same

2148
01:34:35,040 --> 01:34:37,920
thing for multicast replication and

2149
01:34:37,920 --> 01:34:40,960
there is no such solution the ietf today

2150
01:34:40,960 --> 01:34:44,239
um that's unicast only srh but we

2151
01:34:44,239 --> 01:34:46,239
already saw one other proposal to do

2152
01:34:46,239 --> 01:34:47,440
this so

2153
01:34:47,440 --> 01:34:50,000
um and in this proposal the core

2154
01:34:50,000 --> 01:34:53,600
property is really of the encoding of

2155
01:34:53,600 --> 01:34:55,199
the compressed tree which we call

2156
01:34:55,199 --> 01:34:57,600
recursive bit string structure

2157
01:34:57,600 --> 01:34:59,600
next slide

2158
01:34:59,600 --> 01:35:02,000
so the recursive bit string structure

2159
01:35:02,000 --> 01:35:04,480
is shown on the right hand side that is

2160
01:35:04,480 --> 01:35:07,199
um in the blue box the whole address

2161
01:35:07,199 --> 01:35:09,840
structure as it is seen for on the first

2162
01:35:09,840 --> 01:35:11,440
router a

2163
01:35:11,440 --> 01:35:13,119
and that router a

2164
01:35:13,119 --> 01:35:16,239
simply needs to examine a single bit

2165
01:35:16,239 --> 01:35:18,639
string that is indicating the

2166
01:35:18,639 --> 01:35:21,600
adjacencies on that router a to which it

2167
01:35:21,600 --> 01:35:23,679
should send packets so in this example

2168
01:35:23,679 --> 01:35:24,719
here

2169
01:35:24,719 --> 01:35:27,040
it has four possible adjacencies two of

2170
01:35:27,040 --> 01:35:29,760
them have set bits so that is an

2171
01:35:29,760 --> 01:35:32,560
adjacency to b and adjacency to c

2172
01:35:32,560 --> 01:35:34,719
and so what router a needs to do is

2173
01:35:34,719 --> 01:35:37,040
simply do a lookup of these bits in the

2174
01:35:37,040 --> 01:35:39,040
bit string and then for each of the

2175
01:35:39,040 --> 01:35:42,639
copies the new work is that it needs to

2176
01:35:42,639 --> 01:35:45,600
rewrite um that compressed address so

2177
01:35:45,600 --> 01:35:48,159
that only the subtree for that

2178
01:35:48,159 --> 01:35:50,639
particular neighbor is

2179
01:35:50,639 --> 01:35:52,159
the active

2180
01:35:52,159 --> 01:35:53,600
address

2181
01:35:53,600 --> 01:35:56,000
for that copy being sent and active

2182
01:35:56,000 --> 01:35:58,000
means it could be rewritten so that

2183
01:35:58,000 --> 01:36:00,080
everything is thrown away except for

2184
01:36:00,080 --> 01:36:02,800
that subtree or it could be pointers

2185
01:36:02,800 --> 01:36:05,679
that basically say here the active part

2186
01:36:05,679 --> 01:36:08,400
of the address is just that subtree

2187
01:36:08,400 --> 01:36:10,560
and that is i think a little bit also

2188
01:36:10,560 --> 01:36:12,719
the question with six men because uh

2189
01:36:12,719 --> 01:36:13,840
shortening

2190
01:36:13,840 --> 01:36:16,239
um an address is something that is not

2191
01:36:16,239 --> 01:36:19,520
officially endorsed by um

2192
01:36:19,520 --> 01:36:23,600
rfc 8200 but it's also not prohibited so

2193
01:36:23,600 --> 01:36:26,239
we're fairly you know

2194
01:36:26,239 --> 01:36:28,719
not not opinionated on that but let the

2195
01:36:28,719 --> 01:36:33,199
iatf decide what would be best next

2196
01:36:33,679 --> 01:36:36,080
okay so why do we want this so all these

2197
01:36:36,080 --> 01:36:37,760
wonderful traffic steering things we can

2198
01:36:37,760 --> 01:36:39,040
get out of that

2199
01:36:39,040 --> 01:36:39,980
right so the

2200
01:36:39,980 --> 01:36:41,119
[Music]

2201
01:36:41,119 --> 01:36:43,360
prerequisite for guaranteed resource

2202
01:36:43,360 --> 01:36:46,080
path with bandwidth and latencies when

2203
01:36:46,080 --> 01:36:48,719
we have a pce and admission controller

2204
01:36:48,719 --> 01:36:50,880
it's great for the path diversity with

2205
01:36:50,880 --> 01:36:53,119
the zero loss multicast

2206
01:36:53,119 --> 01:36:56,159
for net with pre-off it's great for

2207
01:36:56,159 --> 01:36:58,880
minimum cost steiner trees

2208
01:36:58,880 --> 01:37:01,920
capacity optimization through non-ecmp

2209
01:37:01,920 --> 01:37:03,280
load splitting which is pretty much

2210
01:37:03,280 --> 01:37:06,239
today in unicast 95 percent why

2211
01:37:06,239 --> 01:37:09,440
customers are using segment routing so

2212
01:37:09,440 --> 01:37:11,520
the ability to engineer

2213
01:37:11,520 --> 01:37:12,800
this path

2214
01:37:12,800 --> 01:37:15,280
in multicast trees would then also mean

2215
01:37:15,280 --> 01:37:17,199
that you can utilize the capacity in the

2216
01:37:17,199 --> 01:37:19,920
network for multicast equally better as

2217
01:37:19,920 --> 01:37:22,159
you can do with segment routing for

2218
01:37:22,159 --> 01:37:24,639
unicast and then of course also and

2219
01:37:24,639 --> 01:37:26,880
that's maybe uh even more going back to

2220
01:37:26,880 --> 01:37:28,800
the original routes predictable and

2221
01:37:28,800 --> 01:37:30,960
simple convergence there are no micro

2222
01:37:30,960 --> 01:37:32,800
loops that we're getting with the hop by

2223
01:37:32,800 --> 01:37:35,360
hop reconvergence through the igp

2224
01:37:35,360 --> 01:37:37,520
when we're not doing source routing so

2225
01:37:37,520 --> 01:37:39,280
now that's all traffic engineering that

2226
01:37:39,280 --> 01:37:41,280
we get through the traffic steering of

2227
01:37:41,280 --> 01:37:43,920
uh indicating the tree but even if we

2228
01:37:43,920 --> 01:37:46,960
compare it to just flat bit strings

2229
01:37:46,960 --> 01:37:49,280
that are not encoding the whole tree we

2230
01:37:49,280 --> 01:37:51,840
do uh think we get scalability benefits

2231
01:37:51,840 --> 01:37:53,199
and those come simply from the

2232
01:37:53,199 --> 01:37:54,800
consideration that

2233
01:37:54,800 --> 01:37:56,239
this working group and the original

2234
01:37:56,239 --> 01:37:58,719
protocols we did right pim sparse mode

2235
01:37:58,719 --> 01:38:00,639
kind of our biggest success

2236
01:38:00,639 --> 01:38:02,320
is based on the predicate we've got a

2237
01:38:02,320 --> 01:38:04,400
large network and the multicast delivery

2238
01:38:04,400 --> 01:38:07,600
is a tree is small so we're only sending

2239
01:38:07,600 --> 01:38:09,360
to a relatively small number of

2240
01:38:09,360 --> 01:38:11,760
receivers in a large network and so

2241
01:38:11,760 --> 01:38:13,280
there is the simple thought example

2242
01:38:13,280 --> 01:38:14,880
without a good picture

2243
01:38:14,880 --> 01:38:17,440
consider you have a network with the 2

2244
01:38:17,440 --> 01:38:19,920
560 destinations egress pe's and the

2245
01:38:19,920 --> 01:38:22,639
service providers um you have flat bit

2246
01:38:22,639 --> 01:38:25,600
strings of 256 bits which is kind of

2247
01:38:25,600 --> 01:38:28,400
some existing technology

2248
01:38:28,400 --> 01:38:31,280
and you uh want to

2249
01:38:31,280 --> 01:38:34,239
send to 10 destinations well if you have

2250
01:38:34,239 --> 01:38:36,719
flat bit strings you might be unlucky

2251
01:38:36,719 --> 01:38:38,960
and you send 10 packets because all

2252
01:38:38,960 --> 01:38:40,960
these 10 bits that you send to are in 10

2253
01:38:40,960 --> 01:38:43,280
different bit strings um so your

2254
01:38:43,280 --> 01:38:46,000
replication efficiency is sent to 10

2255
01:38:46,000 --> 01:38:47,840
destination if you're lucky it's one

2256
01:38:47,840 --> 01:38:49,920
packet if you're unlucky it's 10 packets

2257
01:38:49,920 --> 01:38:51,520
with flat bit strings and if you use

2258
01:38:51,520 --> 01:38:54,800
this rbs scheme um in the validation

2259
01:38:54,800 --> 01:38:58,000
topologies that we used you can get

2260
01:38:58,000 --> 01:39:01,199
always away with a single packet because

2261
01:39:01,199 --> 01:39:03,280
you can always encode for any

2262
01:39:03,280 --> 01:39:06,159
combination of 10 receivers

2263
01:39:06,159 --> 01:39:08,320
any tree within just you know less than

2264
01:39:08,320 --> 01:39:13,840
256 bit of rbs3 so that so even rbs does

2265
01:39:13,840 --> 01:39:16,239
encode the whole tree it

2266
01:39:16,239 --> 01:39:16,960
is

2267
01:39:16,960 --> 01:39:19,199
in our opinion uh even more efficient in

2268
01:39:19,199 --> 01:39:21,520
many cases than any flat bit string

2269
01:39:21,520 --> 01:39:24,560
option and of course that example did

2270
01:39:24,560 --> 01:39:26,400
not even include the overhead of

2271
01:39:26,400 --> 01:39:28,719
encoding the tree and flat bit strings

2272
01:39:28,719 --> 01:39:29,679
so

2273
01:39:29,679 --> 01:39:31,280
so we think that this recursive bit

2274
01:39:31,280 --> 01:39:33,520
string structure is of all the proposals

2275
01:39:33,520 --> 01:39:35,600
the best compressed version that gives

2276
01:39:35,600 --> 01:39:38,239
the best replication efficiency

2277
01:39:38,239 --> 01:39:41,360
next slide

2278
01:39:41,360 --> 01:39:43,840
so here again um in a little bit more

2279
01:39:43,840 --> 01:39:45,840
detail hopefully that can be read it's a

2280
01:39:45,840 --> 01:39:48,000
little bit too small for me i guess

2281
01:39:48,000 --> 01:39:50,480
uh here um hopefully it's better on the

2282
01:39:50,480 --> 01:39:52,639
large screen how do we encode and

2283
01:39:52,639 --> 01:39:55,040
process

2284
01:39:55,040 --> 01:39:56,960
so all the length fields that we're

2285
01:39:56,960 --> 01:39:58,400
using are in bits so that we're

2286
01:39:58,400 --> 01:40:00,960
efficient if a router has n neighbors

2287
01:40:00,960 --> 01:40:02,719
then the bit string to be examined on

2288
01:40:02,719 --> 01:40:06,000
that router has n bits um so in our

2289
01:40:06,000 --> 01:40:08,480
example we had four routers so we have a

2290
01:40:08,480 --> 01:40:11,199
fib with for rbs which we see on the

2291
01:40:11,199 --> 01:40:13,679
right hand side uh which has four bit

2292
01:40:13,679 --> 01:40:17,840
entries um and uh each entry has the

2293
01:40:17,840 --> 01:40:20,480
address of the next hop which is what

2294
01:40:20,480 --> 01:40:22,880
you know in the usual segment routing

2295
01:40:22,880 --> 01:40:25,679
fashion would be the destination ipv6

2296
01:40:25,679 --> 01:40:27,199
address in the outer header being

2297
01:40:27,199 --> 01:40:28,320
replaced

2298
01:40:28,320 --> 01:40:30,719
um and then we have another column that

2299
01:40:30,719 --> 01:40:32,400
says whether

2300
01:40:32,400 --> 01:40:34,560
that particular neighbor is a leaf or

2301
01:40:34,560 --> 01:40:36,159
it's an intermediate hop if it's an

2302
01:40:36,159 --> 01:40:38,800
intermediate hop then it means there is

2303
01:40:38,800 --> 01:40:40,880
a recursion field

2304
01:40:40,880 --> 01:40:41,679
which

2305
01:40:41,679 --> 01:40:43,840
and that's shown here in the middle

2306
01:40:43,840 --> 01:40:45,760
in the address there is a subtree for

2307
01:40:45,760 --> 01:40:47,840
that particular neighbor

2308
01:40:47,840 --> 01:40:49,360
and that is then what's going to be

2309
01:40:49,360 --> 01:40:51,520
extracted as the address to the neighbor

2310
01:40:51,520 --> 01:40:54,159
if a neighbor is a leaf then of course

2311
01:40:54,159 --> 01:40:56,719
that neighbor doesn't need to get any

2312
01:40:56,719 --> 01:40:58,560
further address but the packet can just

2313
01:40:58,560 --> 01:41:00,400
be sent to the neighbor

2314
01:41:00,400 --> 01:41:02,080
without any further

2315
01:41:02,080 --> 01:41:05,199
rbs address so

2316
01:41:05,199 --> 01:41:07,920
as far as processing a concerned single

2317
01:41:07,920 --> 01:41:10,719
flat bit string lookup on every node and

2318
01:41:10,719 --> 01:41:11,760
then

2319
01:41:11,760 --> 01:41:14,000
an address rewrite which is adjustment

2320
01:41:14,000 --> 01:41:16,800
of pointer or extraction of a part of

2321
01:41:16,800 --> 01:41:18,480
the address and making that the address

2322
01:41:18,480 --> 01:41:20,560
so we also think this is uh

2323
01:41:20,560 --> 01:41:23,280
the least amount of complex processing

2324
01:41:23,280 --> 01:41:25,040
in the forwarding plane of any of the

2325
01:41:25,040 --> 01:41:28,000
compressed options uh that we have seen

2326
01:41:28,000 --> 01:41:30,560
next slide

2327
01:41:31,360 --> 01:41:34,480
so and here again the uh comparison with

2328
01:41:34,480 --> 01:41:37,199
the segment routing header for ipv6

2329
01:41:37,199 --> 01:41:38,880
right so the idea of course is

2330
01:41:38,880 --> 01:41:40,880
architecturally operationally the same

2331
01:41:40,880 --> 01:41:43,119
we're just doing replication and for

2332
01:41:43,119 --> 01:41:45,280
that we're carrying a segment three as

2333
01:41:45,280 --> 01:41:48,159
opposed to a segment path

2334
01:41:48,159 --> 01:41:50,480
and yeah so in

2335
01:41:50,480 --> 01:41:52,880
unicast we had one uncompressed solution

2336
01:41:52,880 --> 01:41:55,040
and then it just took us eight years to

2337
01:41:55,040 --> 01:41:56,960
start working on the compression there

2338
01:41:56,960 --> 01:41:58,840
which is what we're doing right now in

2339
01:41:58,840 --> 01:42:02,159
2022 and so hopefully we can for the

2340
01:42:02,159 --> 01:42:04,960
multicast part skip all the you know bad

2341
01:42:04,960 --> 01:42:07,679
compressions or uncompressed options and

2342
01:42:07,679 --> 01:42:09,840
uh directly go to the best possible

2343
01:42:09,840 --> 01:42:10,960
compression

2344
01:42:10,960 --> 01:42:12,960
um the forwarding is the same right

2345
01:42:12,960 --> 01:42:14,560
segment by segment forwarding by

2346
01:42:14,560 --> 01:42:17,440
swapping the ipv6 destination address

2347
01:42:17,440 --> 01:42:19,520
from the forwarding information that i

2348
01:42:19,520 --> 01:42:22,239
showed that's from the fib so that we

2349
01:42:22,239 --> 01:42:24,480
have compression in the packet just bits

2350
01:42:24,480 --> 01:42:27,119
for the neighbors and then in the fibs

2351
01:42:27,119 --> 01:42:30,080
the next top ipv6 addresses

2352
01:42:30,080 --> 01:42:31,679
and of course yeah we're replicating

2353
01:42:31,679 --> 01:42:33,520
more than once that's the whole point of

2354
01:42:33,520 --> 01:42:34,960
the multicast

2355
01:42:34,960 --> 01:42:37,199
there are tlvs in the srh headers

2356
01:42:37,199 --> 01:42:39,679
optionally for egress node

2357
01:42:39,679 --> 01:42:41,360
functionalities

2358
01:42:41,360 --> 01:42:43,520
we would think that we start saying we

2359
01:42:43,520 --> 01:42:45,520
have the same set of tlvs but we'll have

2360
01:42:45,520 --> 01:42:47,440
to work through which of these are

2361
01:42:47,440 --> 01:42:49,840
applicable for multicast packets

2362
01:42:49,840 --> 01:42:52,719
equally so that's some tpd work

2363
01:42:52,719 --> 01:42:56,080
srh also has the programmability uh in

2364
01:42:56,080 --> 01:42:57,920
the uncompressed version when you have

2365
01:42:57,920 --> 01:43:00,000
long addresses we haven't seen use cases

2366
01:43:00,000 --> 01:43:02,480
for these transit top programmability

2367
01:43:02,480 --> 01:43:04,719
functions so we haven't considered that

2368
01:43:04,719 --> 01:43:07,520
yet but if that is desirable to have

2369
01:43:07,520 --> 01:43:10,560
um then we can look into this but right

2370
01:43:10,560 --> 01:43:12,880
now it's maximum compressed so

2371
01:43:12,880 --> 01:43:14,719
no programmability on the intermediate

2372
01:43:14,719 --> 01:43:16,000
hops

2373
01:43:16,000 --> 01:43:18,480
next slide

2374
01:43:19,119 --> 01:43:22,239
right so then the next steps and

2375
01:43:22,239 --> 01:43:25,440
mike was already alluding to this um so

2376
01:43:25,440 --> 01:43:27,920
assuming that there is a community um

2377
01:43:27,920 --> 01:43:31,040
across spring um and pim that wants to

2378
01:43:31,040 --> 01:43:32,719
adopt this um

2379
01:43:32,719 --> 01:43:34,639
we may need to figure out how to split

2380
01:43:34,639 --> 01:43:36,480
that work between

2381
01:43:36,480 --> 01:43:38,000
the working group that kind of

2382
01:43:38,000 --> 01:43:40,239
understands the multicast technology

2383
01:43:40,239 --> 01:43:43,119
which would be uh pim um and then six

2384
01:43:43,119 --> 01:43:46,480
men for anything that relates to the rfc

2385
01:43:46,480 --> 01:43:48,719
8200 ipv6

2386
01:43:48,719 --> 01:43:50,960
extension header and coding details to

2387
01:43:50,960 --> 01:43:53,679
make that compliant

2388
01:43:53,679 --> 01:43:55,760
so maybe there

2389
01:43:55,760 --> 01:43:57,840
needs to be some type of an architecture

2390
01:43:57,840 --> 01:44:02,239
document equivalent to rfc 8986 which is

2391
01:44:02,239 --> 01:44:04,320
the srv6 architecture also for the

2392
01:44:04,320 --> 01:44:06,400
multicast part of it as an extension to

2393
01:44:06,400 --> 01:44:08,800
the srv6 architecture and then the

2394
01:44:08,800 --> 01:44:11,040
extension header maybe as a six-man

2395
01:44:11,040 --> 01:44:14,800
document i think um as soon as we see a

2396
01:44:14,800 --> 01:44:18,320
sufficient support for the technology

2397
01:44:18,320 --> 01:44:19,840
i guess across the working groups we're

2398
01:44:19,840 --> 01:44:22,080
going to figure that out um and then of

2399
01:44:22,080 --> 01:44:24,080
course the question is do we want

2400
01:44:24,080 --> 01:44:25,760
extensibility of the compression

2401
01:44:25,760 --> 01:44:28,560
mechanisms in terms of not um you know

2402
01:44:28,560 --> 01:44:31,280
fixating only on one of course as you

2403
01:44:31,280 --> 01:44:32,080
know

2404
01:44:32,080 --> 01:44:34,480
uh here me representing rbs i think

2405
01:44:34,480 --> 01:44:36,560
that's that's great is it sufficient do

2406
01:44:36,560 --> 01:44:39,040
we want to be future proof by having

2407
01:44:39,040 --> 01:44:40,639
options for multiple compression

2408
01:44:40,639 --> 01:44:42,719
algorithm that's i think another

2409
01:44:42,719 --> 01:44:45,119
important technical question uh that we

2410
01:44:45,119 --> 01:44:47,679
should maybe look into more simulations

2411
01:44:47,679 --> 01:44:50,159
of performance across the different

2412
01:44:50,159 --> 01:44:52,800
mechanisms to make decisions on and i

2413
01:44:52,800 --> 01:44:55,760
think that's it next slide

2414
01:44:55,760 --> 01:44:57,920
yeah please show your interest

2415
01:44:57,920 --> 01:44:59,280
i think pim working groups would be

2416
01:44:59,280 --> 01:45:03,559
great to get the discussion started

2417
01:45:19,840 --> 01:45:21,760
robin robin

2418
01:45:21,760 --> 01:45:22,639
okay

2419
01:45:22,639 --> 01:45:24,400
uh romeo

2420
01:45:24,400 --> 01:45:28,000
so uh tourists in fact you know that's

2421
01:45:28,000 --> 01:45:31,040
the one advantage of the

2422
01:45:31,040 --> 01:45:34,560
of the srv6 you the incremental

2423
01:45:34,560 --> 01:45:36,560
deployment

2424
01:45:36,560 --> 01:45:41,840
based on the existing ipv6 network

2425
01:45:41,840 --> 01:45:44,480
i'm not sure this

2426
01:45:44,480 --> 01:45:47,919
this mechanism

2427
01:45:48,719 --> 01:45:51,520
if the this mechanism takes the

2428
01:45:51,520 --> 01:45:54,960
incremental deployment into account

2429
01:45:54,960 --> 01:45:56,719
or not

2430
01:45:56,719 --> 01:46:00,880
or the all the mechanism needed to

2431
01:46:00,880 --> 01:46:03,840
upgrade the whole network to support the

2432
01:46:03,840 --> 01:46:05,199
rbis

2433
01:46:05,199 --> 01:46:07,920
so i think this may be a challenge for

2434
01:46:07,920 --> 01:46:09,119
the

2435
01:46:09,119 --> 01:46:11,760
deployment

2436
01:46:11,760 --> 01:46:13,920
so especially for the

2437
01:46:13,920 --> 01:46:17,280
for the existing network

2438
01:46:17,280 --> 01:46:20,320
right so so the answer is that um

2439
01:46:20,320 --> 01:46:23,440
it can definitely work incrementally you

2440
01:46:23,440 --> 01:46:26,000
only need to support rbs on the nodes

2441
01:46:26,000 --> 01:46:28,639
where you want replication to happen

2442
01:46:28,639 --> 01:46:31,040
but at that point in time what you need

2443
01:46:31,040 --> 01:46:32,400
to do is

2444
01:46:32,400 --> 01:46:34,080
uh to define the fib with the

2445
01:46:34,080 --> 01:46:36,880
adjacencies of not directly connected

2446
01:46:36,880 --> 01:46:38,880
next hops which is exactly what you

2447
01:46:38,880 --> 01:46:40,560
would be doing with the loose source

2448
01:46:40,560 --> 01:46:43,440
routing in the unicast case as well

2449
01:46:43,440 --> 01:46:46,480
and that will work perfectly fine but of

2450
01:46:46,480 --> 01:46:49,520
course you may have more adjacency bits

2451
01:46:49,520 --> 01:46:51,199
then because you may

2452
01:46:51,199 --> 01:46:53,199
you may you have just let's say for

2453
01:46:53,199 --> 01:46:55,679
physical links so that's just four bits

2454
01:46:55,679 --> 01:46:58,000
in a fully upgraded network but if you

2455
01:46:58,000 --> 01:47:01,119
go to three or four hops you may need to

2456
01:47:01,119 --> 01:47:03,760
have more bits there so the performance

2457
01:47:03,760 --> 01:47:06,880
as far as how well is it compressed um

2458
01:47:06,880 --> 01:47:09,360
for the incremental update case is is

2459
01:47:09,360 --> 01:47:11,280
another good um you know performance

2460
01:47:11,280 --> 01:47:14,719
evaluation that would need to be done

2461
01:47:15,119 --> 01:47:16,239
okay my

2462
01:47:16,239 --> 01:47:18,639
second comment is that uh you know

2463
01:47:18,639 --> 01:47:20,880
that's the

2464
01:47:20,880 --> 01:47:25,119
this uh in fact the multicast

2465
01:47:25,119 --> 01:47:26,400
solution

2466
01:47:26,400 --> 01:47:30,239
may be more complex than the unicast

2467
01:47:30,239 --> 01:47:32,840
i think this is the good practice of

2468
01:47:32,840 --> 01:47:36,320
srv6 is to provide some of these the

2469
01:47:36,320 --> 01:47:39,280
euler solution

2470
01:47:39,280 --> 01:47:41,360
for the srv6

2471
01:47:41,360 --> 01:47:43,679
so i think

2472
01:47:43,679 --> 01:47:47,199
maybe in the drought maybe more euro

2473
01:47:47,199 --> 01:47:48,400
situation

2474
01:47:48,400 --> 01:47:50,560
can be provided

2475
01:47:50,560 --> 01:47:53,520
or maybe there's a

2476
01:47:53,520 --> 01:47:55,360
additional this

2477
01:47:55,360 --> 01:47:58,080
additional euler situation draft

2478
01:47:58,080 --> 01:48:00,880
accompany this drought

2479
01:48:00,880 --> 01:48:02,560
for better

2480
01:48:02,560 --> 01:48:06,880
understanding about this solution

2481
01:48:13,040 --> 01:48:14,800
yeah so

2482
01:48:14,800 --> 01:48:15,840
i

2483
01:48:15,840 --> 01:48:17,840
think right now what were i think also

2484
01:48:17,840 --> 01:48:19,600
all the other drafts have only started

2485
01:48:19,600 --> 01:48:21,679
to think about is the basic

2486
01:48:21,679 --> 01:48:24,159
uh forwarding plane mechanisms and as i

2487
01:48:24,159 --> 01:48:25,520
said uh

2488
01:48:25,520 --> 01:48:27,760
um we may even need to split up that

2489
01:48:27,760 --> 01:48:29,840
type of work between something to go to

2490
01:48:29,840 --> 01:48:31,920
six men on the encoding side and the

2491
01:48:31,920 --> 01:48:33,520
architecture in a similar way that we

2492
01:48:33,520 --> 01:48:34,960
had it in spring

2493
01:48:34,960 --> 01:48:39,199
um and uh in six men um and uh yeah none

2494
01:48:39,199 --> 01:48:41,360
of none of this covers the control plane

2495
01:48:41,360 --> 01:48:44,560
parts of it for example so um this is

2496
01:48:44,560 --> 01:48:46,880
just the core from from from from from

2497
01:48:46,880 --> 01:48:50,400
which that work is starting right

2498
01:48:51,920 --> 01:48:54,800
yeah i think to me it's reasonable to do

2499
01:48:54,800 --> 01:48:56,719
an architecture document and that's

2500
01:48:56,719 --> 01:48:58,719
something that can uh

2501
01:48:58,719 --> 01:49:01,199
move on with without having decided on

2502
01:49:01,199 --> 01:49:03,679
the exact solution right that's it

2503
01:49:03,679 --> 01:49:05,679
independent or whatever

2504
01:49:05,679 --> 01:49:08,960
encoding we end up with

2505
01:49:11,679 --> 01:49:14,080
yes i think you have the right uh

2506
01:49:14,080 --> 01:49:15,920
strategy right here on this slide tour

2507
01:49:15,920 --> 01:49:17,360
list is to

2508
01:49:17,360 --> 01:49:19,360
take this discussion to pim i think it's

2509
01:49:19,360 --> 01:49:20,960
the right place

2510
01:49:20,960 --> 01:49:22,239
um

2511
01:49:22,239 --> 01:49:23,840
since you are

2512
01:49:23,840 --> 01:49:27,199
defining a new type of segment right

2513
01:49:27,199 --> 01:49:28,880
that part would likely need to be

2514
01:49:28,880 --> 01:49:31,599
discussed in spring

2515
01:49:31,599 --> 01:49:34,159
kind of like the replication segment is

2516
01:49:34,159 --> 01:49:35,920
something that's done in spring but we

2517
01:49:35,920 --> 01:49:36,800
can

2518
01:49:36,800 --> 01:49:38,719
stig and i can help figure that out if

2519
01:49:38,719 --> 01:49:39,760
there's

2520
01:49:39,760 --> 01:49:42,320
as we progress

2521
01:49:42,320 --> 01:49:45,119
does that make sense

2522
01:49:45,679 --> 01:49:46,719
okay

2523
01:49:46,719 --> 01:49:48,400
and we need to move on to the last

2524
01:49:48,400 --> 01:49:51,040
presentation we're right on time thank

2525
01:49:51,040 --> 01:49:53,199
you

2526
01:50:08,840 --> 01:50:13,119
hi hi can you hear me well

2527
01:50:13,360 --> 01:50:15,280
yes

2528
01:50:15,280 --> 01:50:17,840
okay thank you uh this is joseon from

2529
01:50:17,840 --> 01:50:20,080
huawei and i will introduce our work

2530
01:50:20,080 --> 01:50:23,199
about multicast south routing over ipv6

2531
01:50:23,199 --> 01:50:25,920
traffic engineering solution next slide

2532
01:50:25,920 --> 01:50:28,159
please

2533
01:50:28,880 --> 01:50:32,480
uh here is the problem statement

2534
01:50:32,480 --> 01:50:35,360
basically srv6 has already provided a

2535
01:50:35,360 --> 01:50:37,679
solution for unicast service to indicate

2536
01:50:37,679 --> 01:50:38,719
it

2537
01:50:38,719 --> 01:50:42,000
p2p passed through segment least in srh

2538
01:50:42,000 --> 01:50:43,840
for te scenario

2539
01:50:43,840 --> 01:50:47,199
and there is no flow status is requested

2540
01:50:47,199 --> 01:50:49,280
to maintain in the intermediate nodes

2541
01:50:49,280 --> 01:50:52,639
which is very beneficial for deployment

2542
01:50:52,639 --> 01:50:55,119
and also there are several srp2mp

2543
01:50:55,119 --> 01:50:57,679
solutions under discussion for multicast

2544
01:50:57,679 --> 01:51:01,520
te besides the previous two

2545
01:51:01,520 --> 01:51:04,960
to presentations one of them is

2546
01:51:04,960 --> 01:51:07,280
what has already been discussed in pim4

2547
01:51:07,280 --> 01:51:09,440
well as our p2mp policy

2548
01:51:09,440 --> 01:51:11,599
uh solution uh

2549
01:51:11,599 --> 01:51:15,599
in which uh sr ptmp3 is constructed by

2550
01:51:15,599 --> 01:51:18,320
sticking a set of replication segments

2551
01:51:18,320 --> 01:51:21,119
together through sr p2mp policy each

2552
01:51:21,119 --> 01:51:23,920
replication node which will introduce a

2553
01:51:23,920 --> 01:51:26,159
replication status in the intermediate

2554
01:51:26,159 --> 01:51:28,639
nodes and another solution is

2555
01:51:28,639 --> 01:51:30,880
previous work from juan more which is

2556
01:51:30,880 --> 01:51:35,360
called srv6 p2mp pass assignment list

2557
01:51:35,360 --> 01:51:39,040
for p2mp pass is provided to the ingress

2558
01:51:39,040 --> 01:51:40,080
node and

2559
01:51:40,080 --> 01:51:42,159
there are two arguments for each seed

2560
01:51:42,159 --> 01:51:44,480
which is and branches and ncs to

2561
01:51:44,480 --> 01:51:46,800
indicate the next level of subtree after

2562
01:51:46,800 --> 01:51:48,400
replication

2563
01:51:48,400 --> 01:51:50,400
and for this document

2564
01:51:50,400 --> 01:51:53,199
we will provide a optional solution of

2565
01:51:53,199 --> 01:51:54,400
multicast

2566
01:51:54,400 --> 01:51:58,639
p2mp pass indication for multicast te

2567
01:51:58,639 --> 01:52:02,360
on next slide please

2568
01:52:02,960 --> 01:52:05,440
uh before going to the detail of our

2569
01:52:05,440 --> 01:52:08,159
solution i think we we can briefly

2570
01:52:08,159 --> 01:52:11,760
review what has been done in srv6 in f

2571
01:52:11,760 --> 01:52:14,719
and sr6 if there is a client package

2572
01:52:14,719 --> 01:52:17,840
from the ce side

2573
01:52:17,840 --> 01:52:20,080
in the p side the ingress node will

2574
01:52:20,080 --> 01:52:22,800
encap the packet with fpv6 header and

2575
01:52:22,800 --> 01:52:25,840
srh and again srh a second list will

2576
01:52:25,840 --> 01:52:28,159
indicate the p2p path

2577
01:52:28,159 --> 01:52:31,199
and in the end point um

2578
01:52:31,199 --> 01:52:33,199
it will update the

2579
01:52:33,199 --> 01:52:36,320
segment left by segment uh left minus

2580
01:52:36,320 --> 01:52:37,920
one and the destination address is

2581
01:52:37,920 --> 01:52:40,480
replicated uh replaced by the next

2582
01:52:40,480 --> 01:52:43,119
active seed pointed by the same left

2583
01:52:43,119 --> 01:52:45,040
which steers the packet to the next

2584
01:52:45,040 --> 01:52:47,520
indicating node or adjacency in the t

2585
01:52:47,520 --> 01:52:49,920
pass this is based on the behavior

2586
01:52:49,920 --> 01:52:52,560
definition for the function of and or

2587
01:52:52,560 --> 01:52:54,000
and dot

2588
01:52:54,000 --> 01:52:57,360
x in rc8986

2589
01:52:57,360 --> 01:52:58,880
and the in the egress node when the

2590
01:52:58,880 --> 01:53:01,440
seven left equals to zero

2591
01:53:01,440 --> 01:53:04,960
uh the packet will be decapitated

2592
01:53:04,960 --> 01:53:07,679
and forwarded to the ce side so that is

2593
01:53:07,679 --> 01:53:10,560
the unicast method so what can we do for

2594
01:53:10,560 --> 01:53:14,480
multicast next slide please

2595
01:53:14,960 --> 01:53:17,679
this is our first solution we introduce

2596
01:53:17,679 --> 01:53:19,040
a structural

2597
01:53:19,040 --> 01:53:21,040
segment list for multicast tree the

2598
01:53:21,040 --> 01:53:23,920
basic idea is that we we can define new

2599
01:53:23,920 --> 01:53:26,400
function type which is called

2600
01:53:26,400 --> 01:53:29,360
antidote replication through second list

2601
01:53:29,360 --> 01:53:31,840
for specify the nodes which the

2602
01:53:31,840 --> 01:53:33,920
multicast tree passes through and

2603
01:53:33,920 --> 01:53:36,800
defines two parameters in each seed

2604
01:53:36,800 --> 01:53:38,560
which is called the replication number

2605
01:53:38,560 --> 01:53:40,560
and a pointer to

2606
01:53:40,560 --> 01:53:42,480
indicate the replication forwarding

2607
01:53:42,480 --> 01:53:44,320
relationship between the upstream and

2608
01:53:44,320 --> 01:53:46,000
the downstream nodes

2609
01:53:46,000 --> 01:53:48,400
so what is solution look like

2610
01:53:48,400 --> 01:53:50,960
first there will be a second list just

2611
01:53:50,960 --> 01:53:53,679
like the unicast in the segment list

2612
01:53:53,679 --> 01:53:56,159
will contain all the seeds according to

2613
01:53:56,159 --> 01:53:58,560
the indicated nodes in the multicast

2614
01:53:58,560 --> 01:53:59,440
tree

2615
01:53:59,440 --> 01:54:01,679
for example in the picture in the right

2616
01:54:01,679 --> 01:54:04,400
right hand there is an indicated

2617
01:54:04,400 --> 01:54:06,800
multicast tree and for each node there

2618
01:54:06,800 --> 01:54:10,560
will be a seed in the seminal list

2619
01:54:10,560 --> 01:54:11,840
in a

2620
01:54:11,840 --> 01:54:15,679
mod custom routing header we call it mrh

2621
01:54:15,679 --> 01:54:18,639
and in each seed there will be three

2622
01:54:18,639 --> 01:54:21,360
parts as the segment format just like

2623
01:54:21,360 --> 01:54:24,080
the the unicast sr6 seed there is a

2624
01:54:24,080 --> 01:54:26,960
locator there's a function and also two

2625
01:54:26,960 --> 01:54:29,040
arguments one is replication number

2626
01:54:29,040 --> 01:54:31,520
which could indicate how many packets

2627
01:54:31,520 --> 01:54:34,159
to replicate in this node and another is

2628
01:54:34,159 --> 01:54:36,480
a pointer to indicate the second left

2629
01:54:36,480 --> 01:54:38,960
value of the first child node the basic

2630
01:54:38,960 --> 01:54:42,880
idea here is that if it is a p2 p pass

2631
01:54:42,880 --> 01:54:46,719
the the problem is very simple we just

2632
01:54:46,719 --> 01:54:49,440
we just set the segment left by segment

2633
01:54:49,440 --> 01:54:51,840
left minus one but if

2634
01:54:51,840 --> 01:54:55,840
it comes to multicast the next hub

2635
01:54:55,840 --> 01:54:58,560
downstream node will be a group and we

2636
01:54:58,560 --> 01:55:02,400
cannot find the next seed only by minus

2637
01:55:02,400 --> 01:55:04,400
one so we have to indicate how many

2638
01:55:04,400 --> 01:55:06,800
packets will be replicated and where to

2639
01:55:06,800 --> 01:55:09,199
find the corresponding seed so we have

2640
01:55:09,199 --> 01:55:12,880
we we define these two uh arguments and

2641
01:55:12,880 --> 01:55:15,840
so correspondingly the the behavior is

2642
01:55:15,840 --> 01:55:18,639
then the packet will be replicated based

2643
01:55:18,639 --> 01:55:20,639
on the replication number and updates

2644
01:55:20,639 --> 01:55:22,480
the same on the left and the ipv6

2645
01:55:22,480 --> 01:55:24,800
destination address based on the pointer

2646
01:55:24,800 --> 01:55:27,520
and forwarding the replicated packets to

2647
01:55:27,520 --> 01:55:29,280
the downstream nodes

2648
01:55:29,280 --> 01:55:32,840
next slide please

2649
01:55:35,599 --> 01:55:38,239
uh here is a simple example and and i

2650
01:55:38,239 --> 01:55:40,960
think i won't go to detail maybe if you

2651
01:55:40,960 --> 01:55:43,040
are interested you can see the whole pro

2652
01:55:43,040 --> 01:55:44,880
progress here

2653
01:55:44,880 --> 01:55:49,040
in different notes next slide please

2654
01:55:49,440 --> 01:55:50,719
and

2655
01:55:50,719 --> 01:55:53,520
we can see in the previous solution the

2656
01:55:53,520 --> 01:55:56,639
the drawback is also very obvious

2657
01:55:56,639 --> 01:55:59,040
because we have to allocate

2658
01:55:59,040 --> 01:56:01,360
a seed for each node in the multicast

2659
01:56:01,360 --> 01:56:02,960
tree the

2660
01:56:02,960 --> 01:56:05,040
the header expense may be

2661
01:56:05,040 --> 01:56:07,280
unacceptable when the tree is

2662
01:56:07,280 --> 01:56:09,920
large so we we introduce some

2663
01:56:09,920 --> 01:56:11,920
compression method to

2664
01:56:11,920 --> 01:56:14,960
with local b stream the basic idea is

2665
01:56:14,960 --> 01:56:17,040
like we

2666
01:56:17,040 --> 01:56:19,440
we define a local

2667
01:56:19,440 --> 01:56:22,560
bit screen in each seed which

2668
01:56:22,560 --> 01:56:25,760
each beat represents a local outgoing

2669
01:56:25,760 --> 01:56:29,520
port and if the packet is supposed to be

2670
01:56:29,520 --> 01:56:32,560
replicated and go through that outgoing

2671
01:56:32,560 --> 01:56:35,520
part the the corresponding uh bit

2672
01:56:35,520 --> 01:56:38,560
position will be set and with the local

2673
01:56:38,560 --> 01:56:40,080
bit stream the

2674
01:56:40,080 --> 01:56:41,679
the multicast

2675
01:56:41,679 --> 01:56:42,880
the

2676
01:56:42,880 --> 01:56:45,679
seed for leaf nodes can be saved in

2677
01:56:45,679 --> 01:56:47,840
assemblies so the

2678
01:56:47,840 --> 01:56:48,560
the

2679
01:56:48,560 --> 01:56:51,360
the header expense can be reduced

2680
01:56:51,360 --> 01:56:54,239
next slide please

2681
01:56:54,320 --> 01:56:57,520
uh here is a very simple example and

2682
01:56:57,520 --> 01:57:00,159
you can see only one c that is needed in

2683
01:57:00,159 --> 01:57:02,480
a tree like this

2684
01:57:02,480 --> 01:57:04,159
at least

2685
01:57:04,159 --> 01:57:08,280
uh next slide please

2686
01:57:11,040 --> 01:57:12,880
uh here are some uh

2687
01:57:12,880 --> 01:57:15,360
additional thoughts uh actually a new

2688
01:57:15,360 --> 01:57:17,360
type of ipv6 routine header for

2689
01:57:17,360 --> 01:57:19,280
multicast which is called mrh is

2690
01:57:19,280 --> 01:57:20,239
mentioned

2691
01:57:20,239 --> 01:57:21,360
before

2692
01:57:21,360 --> 01:57:24,000
is proposed and

2693
01:57:24,000 --> 01:57:25,520
we think this

2694
01:57:25,520 --> 01:57:29,119
mrh is requested for different types of

2695
01:57:29,119 --> 01:57:30,320
encoding

2696
01:57:30,320 --> 01:57:32,320
p2mp paths

2697
01:57:32,320 --> 01:57:34,080
maybe including the previous

2698
01:57:34,080 --> 01:57:37,440
presentations and other possible options

2699
01:57:37,440 --> 01:57:40,320
and so maybe we think more contributions

2700
01:57:40,320 --> 01:57:41,679
are needed to make this header

2701
01:57:41,679 --> 01:57:44,159
reasonable enough and be able to

2702
01:57:44,159 --> 01:57:45,920
compatible with

2703
01:57:45,920 --> 01:57:48,000
various encoding forms

2704
01:57:48,000 --> 01:57:51,040
so and also maybe um corporations with

2705
01:57:51,040 --> 01:57:53,280
six months will very helpful

2706
01:57:53,280 --> 01:57:55,679
and here is a very simple comparison

2707
01:57:55,679 --> 01:57:58,800
between two existing documents which are

2708
01:57:58,800 --> 01:58:02,480
very similar uh one is recursive subtree

2709
01:58:02,480 --> 01:58:04,480
and uh

2710
01:58:04,480 --> 01:58:06,480
for the the former

2711
01:58:06,480 --> 01:58:07,199
the

2712
01:58:07,199 --> 01:58:09,520
and another one is the layered

2713
01:58:09,520 --> 01:58:12,080
replication behavior and the first one

2714
01:58:12,080 --> 01:58:14,320
will pop the irrelevant segments after

2715
01:58:14,320 --> 01:58:16,639
replication and the latter keeps all the

2716
01:58:16,639 --> 01:58:20,480
segment uh just as srv6 does for unicast

2717
01:58:20,480 --> 01:58:22,719
and same on the left is used to locate

2718
01:58:22,719 --> 01:58:24,480
the active seed

2719
01:58:24,480 --> 01:58:27,199
and for the local b stream method the

2720
01:58:27,199 --> 01:58:30,000
locator could be omitted considering

2721
01:58:30,000 --> 01:58:32,480
that local bit string is able to

2722
01:58:32,480 --> 01:58:35,040
indicate the next top episodes

2723
01:58:35,040 --> 01:58:38,000
prefix besides the output part and this

2724
01:58:38,000 --> 01:58:40,080
method is also uh

2725
01:58:40,080 --> 01:58:42,880
introduced in detail in our document if

2726
01:58:42,880 --> 01:58:45,040
people are interested maybe you can

2727
01:58:45,040 --> 01:58:47,119
go for it

2728
01:58:47,119 --> 01:58:50,480
this will compress the the header

2729
01:58:50,480 --> 01:58:52,000
further

2730
01:58:52,000 --> 01:58:53,040
and

2731
01:58:53,040 --> 01:58:54,159
also

2732
01:58:54,159 --> 01:58:56,480
the different kind of solutions can be

2733
01:58:56,480 --> 01:58:59,280
combined together to to be used

2734
01:58:59,280 --> 01:59:02,480
and if the seed is too long and

2735
01:59:02,480 --> 01:59:04,560
the segment can also be considered to be

2736
01:59:04,560 --> 01:59:06,400
compressed as

2737
01:59:06,400 --> 01:59:09,040
as what has been done for

2738
01:59:09,040 --> 01:59:11,119
srv6 and srh

2739
01:59:11,119 --> 01:59:14,679
next slide please

2740
01:59:16,400 --> 01:59:19,520
so the uh we hope more people will be

2741
01:59:19,520 --> 01:59:23,040
interested in this work because um p2mp

2742
01:59:23,040 --> 01:59:26,080
passing coding can be complex but

2743
01:59:26,080 --> 01:59:27,520
uh

2744
01:59:27,520 --> 01:59:30,159
interesting and with a lot of possible

2745
01:59:30,159 --> 01:59:32,880
solutions so we think more more work can

2746
01:59:32,880 --> 01:59:35,360
be done here and for our document

2747
01:59:35,360 --> 01:59:37,520
comments our feed and feedback will be

2748
01:59:37,520 --> 01:59:39,119
very welcome

2749
01:59:39,119 --> 01:59:42,960
and for the concept of of mr6 and

2750
01:59:42,960 --> 01:59:46,639
based on ipv6 network we will

2751
01:59:46,639 --> 01:59:49,440
we have already proposed above and

2752
01:59:49,440 --> 01:59:51,760
if people are interested in this topic

2753
01:59:51,760 --> 01:59:52,719
maybe

2754
01:59:52,719 --> 01:59:54,880
not only in pim and relative working

2755
01:59:54,880 --> 01:59:58,639
google we can also discuss in above

2756
01:59:58,639 --> 02:00:01,840
okay that's all thank you

2757
02:00:06,159 --> 02:00:08,880
thank you appreciate you

2758
02:00:08,880 --> 02:00:12,320
presenting any questions

2759
02:00:15,520 --> 02:00:17,280
i think we have a

2760
02:00:17,280 --> 02:00:20,480
quite a lot stig to uh discuss on the

2761
02:00:20,480 --> 02:00:21,360
list

2762
02:00:21,360 --> 02:00:23,280
robin has a question

2763
02:00:23,280 --> 02:00:24,560
yeah

2764
02:00:24,560 --> 02:00:26,480
okay you uh

2765
02:00:26,480 --> 02:00:30,000
again so in fact uh these solutions

2766
02:00:30,000 --> 02:00:31,920
propose this the

2767
02:00:31,920 --> 02:00:35,280
uh multicast routine header but uh you

2768
02:00:35,280 --> 02:00:36,400
know

2769
02:00:36,400 --> 02:00:39,760
i think that's a little different from

2770
02:00:39,760 --> 02:00:41,199
the

2771
02:00:41,199 --> 02:00:44,719
from the srh because the eyes are only

2772
02:00:44,719 --> 02:00:47,360
while rooting header but here

2773
02:00:47,360 --> 02:00:51,280
because of this the different mechanism

2774
02:00:51,280 --> 02:00:52,159
that

2775
02:00:52,159 --> 02:00:53,679
the

2776
02:00:53,679 --> 02:00:56,880
oddest mechanism needs the new multicast

2777
02:00:56,880 --> 02:00:58,719
the routine header

2778
02:00:58,719 --> 02:01:02,000
so the first we think we should

2779
02:01:02,000 --> 02:01:05,280
think about how to convert this solution

2780
02:01:05,280 --> 02:01:07,440
the second one we may

2781
02:01:07,440 --> 02:01:09,440
think about

2782
02:01:09,440 --> 02:01:12,719
how many types of image

2783
02:01:12,719 --> 02:01:14,239
we need

2784
02:01:14,239 --> 02:01:17,920
if more or more types of the mr

2785
02:01:17,920 --> 02:01:20,560
rooting mrh

2786
02:01:20,560 --> 02:01:23,119
are necessary so

2787
02:01:23,119 --> 02:01:24,800
we need to

2788
02:01:24,800 --> 02:01:28,159
a secret hesitator with the sex mahem

2789
02:01:28,159 --> 02:01:31,839
so that's my comments on this one

2790
02:01:32,159 --> 02:01:33,920
thank you tourist

2791
02:01:33,920 --> 02:01:36,080
yeah just to respond to what robin was

2792
02:01:36,080 --> 02:01:37,920
saying there so um

2793
02:01:37,920 --> 02:01:40,480
the the proposals here um are saying

2794
02:01:40,480 --> 02:01:43,040
that that we could basically

2795
02:01:43,040 --> 02:01:46,719
just take one code point for uh

2796
02:01:46,719 --> 02:01:49,199
the routing header um field space and

2797
02:01:49,199 --> 02:01:50,639
then do a sub

2798
02:01:50,639 --> 02:01:52,880
different subtypes for for different

2799
02:01:52,880 --> 02:01:55,599
type of encodings and so on um

2800
02:01:55,599 --> 02:01:58,400
actually you know the space is is is is

2801
02:01:58,400 --> 02:02:00,239
is rather large in in terms of eight

2802
02:02:00,239 --> 02:02:02,320
bits and not many values being used

2803
02:02:02,320 --> 02:02:04,560
there and for example in unicast we

2804
02:02:04,560 --> 02:02:06,239
actually have two source routing headers

2805
02:02:06,239 --> 02:02:08,000
already at least that i remember because

2806
02:02:08,000 --> 02:02:10,880
the iot space has also done its own one

2807
02:02:10,880 --> 02:02:12,639
and not only the spring working group

2808
02:02:12,639 --> 02:02:14,560
and they simply took two different

2809
02:02:14,560 --> 02:02:17,440
values from that eight bit space so we

2810
02:02:17,440 --> 02:02:20,000
already got evidence that if there are

2811
02:02:20,000 --> 02:02:21,679
multiple different

2812
02:02:21,679 --> 02:02:23,840
options required for different use cases

2813
02:02:23,840 --> 02:02:26,239
then you may not need to sub multiplex

2814
02:02:26,239 --> 02:02:28,159
but you just get two different or three

2815
02:02:28,159 --> 02:02:30,159
or four different code points there it's

2816
02:02:30,159 --> 02:02:31,360
it doesn't seem to me as if we're

2817
02:02:31,360 --> 02:02:34,000
running out there

2818
02:02:35,119 --> 02:02:37,360
okay

2819
02:02:39,440 --> 02:02:42,080
any other comments before we end up do

2820
02:02:42,080 --> 02:02:45,119
any other comments dig

2821
02:02:45,119 --> 02:02:48,320
not from me no

2822
02:02:49,599 --> 02:02:52,480
great good well i can say that

2823
02:02:52,480 --> 02:02:54,320
obviously yeah there's a lot to discuss

2824
02:02:54,320 --> 02:02:56,480
on the mailing list and also

2825
02:02:56,480 --> 02:02:57,840
how the work should be done forward in

2826
02:02:57,840 --> 02:03:00,159
the itf and there's this buff and so on

2827
02:03:00,159 --> 02:03:01,440
so

2828
02:03:01,440 --> 02:03:03,760
yeah we'll

2829
02:03:03,760 --> 02:03:07,119
see what happens next

2830
02:03:07,520 --> 02:03:09,599
but uh yeah

2831
02:03:09,599 --> 02:03:11,280
we should ideally have ongoing

2832
02:03:11,280 --> 02:03:13,520
discussions on the mailing lists and not

2833
02:03:13,520 --> 02:03:15,840
just just wait for the next idea for the

2834
02:03:15,840 --> 02:03:18,400
next buff

2835
02:03:18,560 --> 02:03:20,639
for sure

2836
02:03:20,639 --> 02:03:23,040
get some rest dig feel better and thanks

2837
02:03:23,040 --> 02:03:24,239
everybody for

2838
02:03:24,239 --> 02:03:26,880
attending tim

2839
02:03:26,880 --> 02:03:29,119
thanks everyone

2840
02:03:29,119 --> 02:03:30,960
see ya

2841
02:03:30,960 --> 02:03:32,400
all right bye

2842
02:03:32,400 --> 02:03:34,239
thanks jordan

2843
02:03:34,239 --> 02:03:37,480
thanks trellis

2844
02:04:29,679 --> 02:04:31,760
you

