1
00:00:09,840 --> 00:00:12,840
um

2
00:00:55,680 --> 00:00:58,680
yes

3
00:01:06,159 --> 00:01:09,200
you know what what i should do see what

4
00:01:09,200 --> 00:01:11,600
to connect to this i'm connected now to

5
00:01:11,600 --> 00:01:13,280
connect the white

6
00:01:13,280 --> 00:01:14,880
i want to run the slides

7
00:01:14,880 --> 00:01:15,759
yeah

8
00:01:15,759 --> 00:01:18,560
well i know i don't know

9
00:01:22,640 --> 00:01:24,240
yeah

10
00:01:24,240 --> 00:01:28,158
oh you plug your up in the ethernet drop

11
00:01:28,240 --> 00:01:30,000
i don't need to i mean i don't know

12
00:01:30,000 --> 00:01:32,720
wi-fi right

13
00:01:33,600 --> 00:01:36,079
oh okay

14
00:01:37,119 --> 00:01:39,200
materials

15
00:01:39,200 --> 00:01:42,920
the slide's not available

16
00:02:15,280 --> 00:02:18,280
okay

17
00:02:28,000 --> 00:02:29,520
yeah the audio is wired and all you need

18
00:02:29,520 --> 00:02:31,680
to do is share that to

19
00:02:31,680 --> 00:02:36,280
share from your computers to the slides

20
00:02:38,560 --> 00:02:40,400
while this while we are getting

21
00:02:40,400 --> 00:02:42,080
ourselves um

22
00:02:42,080 --> 00:02:44,239
remedial chair training here um do we

23
00:02:44,239 --> 00:02:47,440
have a volunteer to be a scribe and

24
00:02:47,440 --> 00:02:50,840
a note taker

25
00:02:51,040 --> 00:02:53,519
which one

26
00:02:54,640 --> 00:02:55,920
all right can you be the notetaker

27
00:02:55,920 --> 00:02:58,560
please glory thank you

28
00:02:58,560 --> 00:02:59,840
rhys thank you

29
00:02:59,840 --> 00:03:02,879
i don't anticipate just

30
00:03:03,120 --> 00:03:05,519
for what

31
00:03:05,519 --> 00:03:09,040
if somebody is on jabber and um

32
00:03:09,040 --> 00:03:11,519
me can't use the

33
00:03:11,519 --> 00:03:12,879
echo then um

34
00:03:12,879 --> 00:03:14,400
you can relay to the mic

35
00:03:14,400 --> 00:03:16,560
or if there's like some huge blow up on

36
00:03:16,560 --> 00:03:18,400
jabber um

37
00:03:18,400 --> 00:03:19,840
we would like to know

38
00:03:19,840 --> 00:03:22,000
hey if i were you i wouldn't say that at

39
00:03:22,000 --> 00:03:24,400
the mine

40
00:03:26,480 --> 00:03:27,280
troll

41
00:03:27,280 --> 00:03:28,959
are you

42
00:03:28,959 --> 00:03:31,200
i'm gonna share something

43
00:03:31,200 --> 00:03:33,519
i think you use the um

44
00:03:33,519 --> 00:03:36,080
it's that thing there right uh yeah

45
00:03:36,080 --> 00:03:37,599
there you go

46
00:03:37,599 --> 00:03:39,680
if they're pre-loaded slides i don't

47
00:03:39,680 --> 00:03:42,720
know that can't be right

48
00:03:43,200 --> 00:03:46,159
yeah that's what i mean

49
00:03:46,159 --> 00:03:48,480
it's in the agenda though yeah all right

50
00:03:48,480 --> 00:03:50,319
well

51
00:03:50,319 --> 00:03:53,120
yeah you do need to download it

52
00:03:53,120 --> 00:03:56,000
but then how do i

53
00:03:58,080 --> 00:04:02,480
dismiss that and try

54
00:04:04,000 --> 00:04:05,439
you can share your screen and do the

55
00:04:05,439 --> 00:04:07,040
downloaded

56
00:04:07,040 --> 00:04:09,280
thing

57
00:04:10,640 --> 00:04:11,680
all right i'm just going to start

58
00:04:11,680 --> 00:04:15,040
talking um welcome to tsb area everybody

59
00:04:15,040 --> 00:04:16,880
i'm sorry that we don't know how to work

60
00:04:16,880 --> 00:04:18,880
anything um

61
00:04:18,880 --> 00:04:21,358
nevertheless uh

62
00:04:21,358 --> 00:04:23,600
uh if you have not somehow

63
00:04:23,600 --> 00:04:25,680
seen the notewell yet uh please take a

64
00:04:25,680 --> 00:04:27,199
look at the notewell most of us are

65
00:04:27,199 --> 00:04:29,840
familiar with it basically if you

66
00:04:29,840 --> 00:04:30,720
you know

67
00:04:30,720 --> 00:04:33,520
if ipr is a thing and if you um

68
00:04:33,520 --> 00:04:35,440
have any ipr relevant to what happens

69
00:04:35,440 --> 00:04:37,840
today you must disclose it

70
00:04:37,840 --> 00:04:40,240
uh i invite you to type well into your

71
00:04:40,240 --> 00:04:43,360
favorite search engine if you like and

72
00:04:43,360 --> 00:04:46,160
investigate that a little bit further

73
00:04:46,160 --> 00:04:47,040
um

74
00:04:47,040 --> 00:04:48,639
today we have we're going to go through

75
00:04:48,639 --> 00:04:50,960
our usual a.d slides about the state of

76
00:04:50,960 --> 00:04:52,320
the area

77
00:04:52,320 --> 00:04:54,560
um in a moment here and then we have a

78
00:04:54,560 --> 00:04:56,240
couple of invited talks on the theme of

79
00:04:56,240 --> 00:04:57,759
sctp

80
00:04:57,759 --> 00:05:00,320
um and i'll say a few words about that

81
00:05:00,320 --> 00:05:01,360
later

82
00:05:01,360 --> 00:05:03,120
are we oh we have slides look at that

83
00:05:03,120 --> 00:05:05,520
thank you zahed

84
00:05:05,520 --> 00:05:07,440
i'm martin duke and this is ahead sarker

85
00:05:07,440 --> 00:05:09,680
next slide

86
00:05:09,680 --> 00:05:12,560
already talked about that

87
00:05:12,560 --> 00:05:14,320
already talked about that

88
00:05:14,320 --> 00:05:15,840
and of course i'm open mic at the end of

89
00:05:15,840 --> 00:05:17,680
the session

90
00:05:17,680 --> 00:05:21,199
uh okay just as a um

91
00:05:22,560 --> 00:05:25,280
as a brief summary of the existing

92
00:05:25,280 --> 00:05:28,320
working groups um

93
00:05:28,320 --> 00:05:31,199
not a whole bunch uh

94
00:05:31,199 --> 00:05:32,800
not a whole bunch of big developments in

95
00:05:32,800 --> 00:05:35,039
terms of uh big new work going on i

96
00:05:35,039 --> 00:05:36,240
would say in the working groups we do

97
00:05:36,240 --> 00:05:38,720
have some chair changes um uh i'd like

98
00:05:38,720 --> 00:05:41,520
to thank john cedorf and michael scharf

99
00:05:41,520 --> 00:05:44,720
who chaired alto and tcpm respectively

100
00:05:44,720 --> 00:05:47,680
and uh a big welcome to muhammad bukader

101
00:05:47,680 --> 00:05:49,120
and uh actually it's not on the slide

102
00:05:49,120 --> 00:05:51,440
but ian sweat who are taking over alto

103
00:05:51,440 --> 00:05:54,000
and tcpm respectively

104
00:05:54,000 --> 00:05:56,800
you have anything to add

105
00:05:56,800 --> 00:05:58,479
so uh

106
00:05:58,479 --> 00:06:00,240
you can hear me right right

107
00:06:00,240 --> 00:06:03,120
so yeah for the um the

108
00:06:03,120 --> 00:06:05,039
working groups i am responsible for i

109
00:06:05,039 --> 00:06:07,600
think the dtn yeah recharging has been

110
00:06:07,600 --> 00:06:09,680
done new work coming in

111
00:06:09,680 --> 00:06:12,960
and there is a session today uh after

112
00:06:12,960 --> 00:06:15,840
uh in the afternoon and there we are

113
00:06:15,840 --> 00:06:17,520
having some sort of like overview

114
00:06:17,520 --> 00:06:19,120
discussion on green stuff we'll be

115
00:06:19,120 --> 00:06:20,800
talking so we might be uninterested

116
00:06:20,800 --> 00:06:21,840
going in

117
00:06:21,840 --> 00:06:23,680
um

118
00:06:23,680 --> 00:06:27,120
then um we have quick always um

119
00:06:27,120 --> 00:06:28,880
championing the deliverables and new

120
00:06:28,880 --> 00:06:30,720
items i think one of the things that we

121
00:06:30,720 --> 00:06:32,639
could mention here like they i started

122
00:06:32,639 --> 00:06:35,759
working on mp quick extension

123
00:06:35,759 --> 00:06:38,000
and there are a couple of um drops they

124
00:06:38,000 --> 00:06:40,400
went for the rfc editor few and

125
00:06:40,400 --> 00:06:42,800
obviously there are some new

126
00:06:42,800 --> 00:06:45,280
ids on load balancing and passion

127
00:06:45,280 --> 00:06:47,680
negotiation that if you are present in

128
00:06:47,680 --> 00:06:50,000
today's session you know about it

129
00:06:50,000 --> 00:06:53,280
um aramcat uh has one working group

130
00:06:53,280 --> 00:06:55,759
document doesn't work from last call

131
00:06:55,759 --> 00:06:57,680
i think this is waiting for the

132
00:06:57,680 --> 00:06:59,759
uh schaefer strikeout

133
00:06:59,759 --> 00:07:02,240
anna is working on it

134
00:07:02,240 --> 00:07:04,240
and then for the taps

135
00:07:04,240 --> 00:07:06,870
most of the things going as usual

136
00:07:06,870 --> 00:07:08,319
[Music]

137
00:07:08,319 --> 00:07:09,840
we are just

138
00:07:09,840 --> 00:07:11,680
talking about imagine

139
00:07:11,680 --> 00:07:13,759
about some some you know mapping over

140
00:07:13,759 --> 00:07:15,520
quick

141
00:07:15,520 --> 00:07:18,800
so that would be all i think uh

142
00:07:18,800 --> 00:07:20,720
from my side yeah uh the only thing i

143
00:07:20,720 --> 00:07:22,720
would like to highlight is in tcpm uh

144
00:07:22,720 --> 00:07:25,360
rfc 5681 is most you know is this sort

145
00:07:25,360 --> 00:07:27,759
of the core loss recovery document um

146
00:07:27,759 --> 00:07:30,720
the sort of semi-modern version of that

147
00:07:30,720 --> 00:07:33,440
and we're looking to miss that um

148
00:07:33,440 --> 00:07:35,199
but no one's really stepped up to do

149
00:07:35,199 --> 00:07:37,280
that so um this has come up a couple of

150
00:07:37,280 --> 00:07:39,120
times but no one's done the work

151
00:07:39,120 --> 00:07:40,720
if you're eager to leave your imprint on

152
00:07:40,720 --> 00:07:42,960
a fairly foundational document for tcp

153
00:07:42,960 --> 00:07:44,479
um that is an opportunity that is

154
00:07:44,479 --> 00:07:45,919
available to you

155
00:07:45,919 --> 00:07:48,719
next slide please

156
00:07:48,800 --> 00:07:52,240
so hi uh livesacred former uh

157
00:07:52,240 --> 00:07:54,879
technical tsp person so i would be i

158
00:07:54,879 --> 00:07:56,479
could be convinced to be an editor for

159
00:07:56,479 --> 00:07:58,319
it but i need people who actually know

160
00:07:58,319 --> 00:08:00,400
this stuff to be authors

161
00:08:00,400 --> 00:08:01,680
but i'm happy to run the github and

162
00:08:01,680 --> 00:08:03,039
stuff and merge things and push it up

163
00:08:03,039 --> 00:08:06,000
and so on like i do for cubic this

164
00:08:06,000 --> 00:08:07,919
thank you lars um so you could just

165
00:08:07,919 --> 00:08:11,199
contact lars or me or the tcpm chairs if

166
00:08:11,199 --> 00:08:12,879
this is something that is interesting to

167
00:08:12,879 --> 00:08:14,639
you thank you

168
00:08:14,639 --> 00:08:18,319
um doc it's pretty busy um

169
00:08:18,319 --> 00:08:20,800
not quarter but four months uh

170
00:08:20,800 --> 00:08:23,599
document wise a bunch of stuff went to

171
00:08:23,599 --> 00:08:27,280
the rfc ad 4960 bis courses the new

172
00:08:27,280 --> 00:08:29,280
rev of sctp

173
00:08:29,280 --> 00:08:31,680
um iom data was a pretty big effort out

174
00:08:31,680 --> 00:08:35,279
of ippm to get some in-band telemetry um

175
00:08:35,279 --> 00:08:38,559
the whole slew of alto's last charter

176
00:08:38,559 --> 00:08:40,958
made it through to the rfc editor

177
00:08:40,958 --> 00:08:43,120
sets four documents and quick datagram

178
00:08:43,120 --> 00:08:44,640
is another big one

179
00:08:44,640 --> 00:08:46,399
um

180
00:08:46,399 --> 00:08:48,640
on the rfc side uh things coming out of

181
00:08:48,640 --> 00:08:51,600
the queue um the whole dtn

182
00:08:51,600 --> 00:08:54,240
last charter set a bunch of ippm stuff

183
00:08:54,240 --> 00:08:56,000
that's kind of a grab bag and all while

184
00:08:56,000 --> 00:08:57,760
it was not out of the tdse area

185
00:08:57,760 --> 00:08:59,440
technically i want to call your

186
00:08:59,440 --> 00:09:01,519
attention 9187 which is joe touch's

187
00:09:01,519 --> 00:09:03,760
document about secret number extension

188
00:09:03,760 --> 00:09:06,720
which obviously has a transport flavor

189
00:09:06,720 --> 00:09:10,240
anything add about this side

190
00:09:10,240 --> 00:09:12,480
okay

191
00:09:13,600 --> 00:09:16,160
uh tsv art as usual we like to call

192
00:09:16,160 --> 00:09:17,680
attention to what's happening with the

193
00:09:17,680 --> 00:09:20,320
tsv art um

194
00:09:20,320 --> 00:09:22,720
thank you to all of our reviewers um you

195
00:09:22,720 --> 00:09:24,720
can see there in parentheses the number

196
00:09:24,720 --> 00:09:26,560
of reviews they've done in this last

197
00:09:26,560 --> 00:09:29,040
cycle and i think the takeaway there is

198
00:09:29,040 --> 00:09:30,959
there's not an enormous

199
00:09:30,959 --> 00:09:33,120
volume of documents to read so i really

200
00:09:33,120 --> 00:09:34,880
invite you if you would like to get a

201
00:09:34,880 --> 00:09:36,399
bigger picture of

202
00:09:36,399 --> 00:09:38,160
what's going on the itf and how it

203
00:09:38,160 --> 00:09:39,760
relates to what's happening in in

204
00:09:39,760 --> 00:09:41,760
transport i invite you to

205
00:09:41,760 --> 00:09:44,800
contact magnus about um adding yourself

206
00:09:44,800 --> 00:09:47,360
to the rotation and helping us out as

207
00:09:47,360 --> 00:09:49,839
ads a lot by providing another set of

208
00:09:49,839 --> 00:09:51,519
eyes of other things that are coming out

209
00:09:51,519 --> 00:09:54,560
of iatf last call

210
00:09:54,560 --> 00:09:56,240
just to add to that one i mean i think

211
00:09:56,240 --> 00:09:58,000
we understand like

212
00:09:58,000 --> 00:10:00,240
sometimes we cannot make the review even

213
00:10:00,240 --> 00:10:01,920
if you're in this team so it will be

214
00:10:01,920 --> 00:10:05,200
great actually to you you inform magnus

215
00:10:05,200 --> 00:10:07,519
of the other secretaries for us that you

216
00:10:07,519 --> 00:10:09,440
are unavailable for a particular time

217
00:10:09,440 --> 00:10:11,760
period that will help us actually to

218
00:10:11,760 --> 00:10:14,480
scheduling it better so yeah thanks

219
00:10:14,480 --> 00:10:17,519
thanks for the work here

220
00:10:17,519 --> 00:10:19,839
next slide

221
00:10:24,800 --> 00:10:26,560
there's no next slide oh right okay so

222
00:10:26,560 --> 00:10:28,560
let's call up the other presentation

223
00:10:28,560 --> 00:10:31,040
so we have as i mentioned um a couple

224
00:10:31,040 --> 00:10:33,200
minutes ago we have um

225
00:10:33,200 --> 00:10:35,760
two presentations on the server sctp uh

226
00:10:35,760 --> 00:10:37,600
obviously we shipped quick

227
00:10:37,600 --> 00:10:40,320
quite recently and that has a number of

228
00:10:40,320 --> 00:10:42,320
sctp features so some of you might be

229
00:10:42,320 --> 00:10:43,519
wondering

230
00:10:43,519 --> 00:10:46,240
what's up with sctp is still relevant um

231
00:10:46,240 --> 00:10:48,000
and i we have a couple of speakers today

232
00:10:48,000 --> 00:10:49,839
that will argue that it is

233
00:10:49,839 --> 00:10:51,440
um

234
00:10:51,440 --> 00:10:53,680
i think we'll start with michael

235
00:10:53,680 --> 00:10:56,560
cookson who's uh remote and uh michael

236
00:10:56,560 --> 00:10:58,800
are you there

237
00:10:58,800 --> 00:11:01,440
he's there we need to give him

238
00:11:01,440 --> 00:11:04,320
yeah i am there

239
00:11:04,320 --> 00:11:07,040
ah there he is

240
00:11:07,360 --> 00:11:09,600
okay

241
00:11:10,160 --> 00:11:11,680
would you like to control the slides or

242
00:11:11,680 --> 00:11:14,399
should we uh

243
00:11:14,399 --> 00:11:16,480
do you see them

244
00:11:16,480 --> 00:11:17,600
no

245
00:11:17,600 --> 00:11:19,440
yes

246
00:11:19,440 --> 00:11:21,519
you are not caring

247
00:11:21,519 --> 00:11:24,000
but we can share if that's a problem for

248
00:11:24,000 --> 00:11:24,880
you

249
00:11:24,880 --> 00:11:27,040
but

250
00:11:27,040 --> 00:11:29,440
how how can i meet eco for doing that i

251
00:11:29,440 --> 00:11:30,959
think they need to be uploaded and then

252
00:11:30,959 --> 00:11:31,920
i can

253
00:11:31,920 --> 00:11:35,519
select them right sort of

254
00:11:35,519 --> 00:11:36,959
why don't we just do it this seems like

255
00:11:36,959 --> 00:11:40,920
it's a problem okay

256
00:11:49,839 --> 00:11:51,600
okay michael take it away

257
00:11:51,600 --> 00:11:55,480
yep okay next slide

258
00:11:57,440 --> 00:11:59,040
so um

259
00:11:59,040 --> 00:12:00,160
i don't want

260
00:12:00,160 --> 00:12:00,880
to

261
00:12:00,880 --> 00:12:01,839
discuss

262
00:12:01,839 --> 00:12:04,079
too many technical details of http i

263
00:12:04,079 --> 00:12:05,920
just want to um

264
00:12:05,920 --> 00:12:08,880
highlight the services http provides and

265
00:12:08,880 --> 00:12:11,600
i'm focusing more on why

266
00:12:11,600 --> 00:12:15,920
things are provided and why are things

267
00:12:15,920 --> 00:12:17,200
have been things

268
00:12:17,200 --> 00:12:20,079
integrated into http and that gives you

269
00:12:20,079 --> 00:12:22,160
i think should give you a better

270
00:12:22,160 --> 00:12:24,880
understanding when you can use uh sctp

271
00:12:24,880 --> 00:12:25,920
or

272
00:12:25,920 --> 00:12:28,720
another transport like maybe mptcp or

273
00:12:28,720 --> 00:12:30,399
quick or whatever

274
00:12:30,399 --> 00:12:33,200
um so things started i think more than

275
00:12:33,200 --> 00:12:35,440
20 years ago and the original use case

276
00:12:35,440 --> 00:12:36,320
was

277
00:12:36,320 --> 00:12:39,519
um to

278
00:12:39,519 --> 00:12:43,279
be able to use an ip-based network for

279
00:12:43,279 --> 00:12:45,440
transporting ss7

280
00:12:45,440 --> 00:12:47,839
signaling messages over

281
00:12:47,839 --> 00:12:49,040
ip

282
00:12:49,040 --> 00:12:50,399
um

283
00:12:50,399 --> 00:12:52,160
that's telephone signaling classical

284
00:12:52,160 --> 00:12:54,880
telephone signaling and

285
00:12:54,880 --> 00:12:57,839
although i'm focusing here on that um

286
00:12:57,839 --> 00:13:01,040
the use cases uh where sctp is used up

287
00:13:01,040 --> 00:13:03,760
to now is sometimes still that and

288
00:13:03,760 --> 00:13:06,399
sometimes other signaling which

289
00:13:06,399 --> 00:13:07,200
has

290
00:13:07,200 --> 00:13:09,519
uh similar requirements

291
00:13:09,519 --> 00:13:10,399
so

292
00:13:10,399 --> 00:13:12,720
the ss7 stuff what was special about

293
00:13:12,720 --> 00:13:14,880
that um

294
00:13:14,880 --> 00:13:16,320
it was uh

295
00:13:16,320 --> 00:13:18,639
what you transport what you deal with is

296
00:13:18,639 --> 00:13:21,680
small messages small meaning 100 bytes

297
00:13:21,680 --> 00:13:23,680
is is

298
00:13:23,680 --> 00:13:27,440
is not a small message there and

299
00:13:27,440 --> 00:13:28,160
the

300
00:13:28,160 --> 00:13:31,440
you need to transport them reliable on

301
00:13:31,440 --> 00:13:34,720
but the ordering requirements are not

302
00:13:34,720 --> 00:13:38,000
that you need complete ordering but only

303
00:13:38,000 --> 00:13:40,320
some messages need to be

304
00:13:40,320 --> 00:13:42,399
in sequence so from a telephone call

305
00:13:42,399 --> 00:13:44,720
perspective all messages belonging to a

306
00:13:44,720 --> 00:13:46,320
single telephone call need to be in

307
00:13:46,320 --> 00:13:48,880
sequence but you can interleave messages

308
00:13:48,880 --> 00:13:50,560
from different telephone calls without

309
00:13:50,560 --> 00:13:54,320
any problems so only partial um

310
00:13:54,320 --> 00:13:57,600
ordering is required um you have

311
00:13:57,600 --> 00:14:00,399
pretty strict time limits for delivering

312
00:14:00,399 --> 00:14:02,959
the messages so this means the time

313
00:14:02,959 --> 00:14:05,839
between the sender sends it and this and

314
00:14:05,839 --> 00:14:07,199
the receiver

315
00:14:07,199 --> 00:14:07,680
um

316
00:14:07,680 --> 00:14:08,959
[Music]

317
00:14:08,959 --> 00:14:11,279
processes it so it's not about queuing

318
00:14:11,279 --> 00:14:13,240
delay or re-transmission so it's an

319
00:14:13,240 --> 00:14:16,399
end-to-end um

320
00:14:16,399 --> 00:14:18,720
limit and this means you need to

321
00:14:18,720 --> 00:14:21,360
minimize head of line blocking so

322
00:14:21,360 --> 00:14:23,199
if you are if you are

323
00:14:23,199 --> 00:14:24,320
delaying

324
00:14:24,320 --> 00:14:26,240
the processing of a message without any

325
00:14:26,240 --> 00:14:28,560
good reason that's not a good thing

326
00:14:28,560 --> 00:14:32,079
and the last issue is that you need a

327
00:14:32,079 --> 00:14:34,880
very long lifetime of the communication

328
00:14:34,880 --> 00:14:38,639
relation and you need um a high level of

329
00:14:38,639 --> 00:14:40,320
reliability so

330
00:14:40,320 --> 00:14:42,639
long lifetime means

331
00:14:42,639 --> 00:14:45,279
an satp communication regulation can be

332
00:14:45,279 --> 00:14:47,920
up for a year or something like that

333
00:14:47,920 --> 00:14:49,199
and

334
00:14:49,199 --> 00:14:50,079
you

335
00:14:50,079 --> 00:14:52,110
to avoid this um

336
00:14:52,110 --> 00:14:55,289
[Music]

337
00:14:55,760 --> 00:14:57,519
you need to avoid single points of

338
00:14:57,519 --> 00:14:59,440
failure so normally you have multiple

339
00:14:59,440 --> 00:15:01,440
network connections and you need to fail

340
00:15:01,440 --> 00:15:02,800
over in a very

341
00:15:02,800 --> 00:15:07,599
fast um time limit next slide

342
00:15:09,040 --> 00:15:11,680
so that basically motivates the base

343
00:15:11,680 --> 00:15:13,600
protocol features you have reliable

344
00:15:13,600 --> 00:15:15,839
transport of user messages

345
00:15:15,839 --> 00:15:18,240
so it's message oriented you can bundle

346
00:15:18,240 --> 00:15:20,800
multiple messages in a single

347
00:15:20,800 --> 00:15:22,320
packet because you want to do that

348
00:15:22,320 --> 00:15:25,199
efficient and messages are small

349
00:15:25,199 --> 00:15:28,079
you can have multiple streams

350
00:15:28,079 --> 00:15:30,160
and only messages sent on a single

351
00:15:30,160 --> 00:15:32,720
stream are delivered in order you have

352
00:15:32,720 --> 00:15:35,600
also support for unordered messages they

353
00:15:35,600 --> 00:15:37,920
are reliable but

354
00:15:37,920 --> 00:15:40,480
you deliver them as soon as they

355
00:15:40,480 --> 00:15:42,720
get uh

356
00:15:42,720 --> 00:15:44,880
get get to the destination

357
00:15:44,880 --> 00:15:47,759
um this um

358
00:15:47,759 --> 00:15:50,560
dealing with network failures is uh

359
00:15:50,560 --> 00:15:52,639
handled by using multi-homing so you

360
00:15:52,639 --> 00:15:55,040
have multiple ip addresses on each on

361
00:15:55,040 --> 00:15:56,160
each side

362
00:15:56,160 --> 00:15:59,279
and you supervise the paths that you

363
00:15:59,279 --> 00:16:01,040
want to know which path are working

364
00:16:01,040 --> 00:16:03,040
which ones are not working that in case

365
00:16:03,040 --> 00:16:04,880
of you need to fail over you fail over

366
00:16:04,880 --> 00:16:06,959
to a path which is working

367
00:16:06,959 --> 00:16:08,800
and um

368
00:16:08,800 --> 00:16:09,680
the

369
00:16:09,680 --> 00:16:10,639
um

370
00:16:10,639 --> 00:16:13,040
the use case so the the protocol was

371
00:16:13,040 --> 00:16:16,240
developed in the ietf so all the

372
00:16:16,240 --> 00:16:18,320
dimensioning the timers and that stuff

373
00:16:18,320 --> 00:16:20,399
is uh

374
00:16:20,399 --> 00:16:23,600
selected for uh the big guy internet but

375
00:16:23,600 --> 00:16:25,519
this is not the

376
00:16:25,519 --> 00:16:28,320
parameters which are used when you run

377
00:16:28,320 --> 00:16:30,160
this product so they are much much

378
00:16:30,160 --> 00:16:32,720
stricter timers uh and this stuff so you

379
00:16:32,720 --> 00:16:34,800
need to be able to configure that

380
00:16:34,800 --> 00:16:37,519
on a very fine-grained way

381
00:16:37,519 --> 00:16:39,920
and there is support

382
00:16:39,920 --> 00:16:42,639
for um

383
00:16:42,639 --> 00:16:45,440
large user messages so you can

384
00:16:45,440 --> 00:16:47,680
transport them but that was not the

385
00:16:47,680 --> 00:16:50,880
focus of the protocol so that's why

386
00:16:50,880 --> 00:16:52,639
you get some head of line blocking if

387
00:16:52,639 --> 00:16:54,240
you actually do this

388
00:16:54,240 --> 00:16:56,800
next slide

389
00:16:58,240 --> 00:17:02,800
so over time some of the limitations

390
00:17:02,800 --> 00:17:05,280
of the protocol were

391
00:17:05,280 --> 00:17:08,720
worked around or addressed um several

392
00:17:08,720 --> 00:17:11,520
things were done pretty simple when the

393
00:17:11,520 --> 00:17:13,599
protocol was designed because

394
00:17:13,599 --> 00:17:16,559
uh it should be on the market very fast

395
00:17:16,559 --> 00:17:19,199
so i think it was about a year between

396
00:17:19,199 --> 00:17:21,280
the first version of the protocol and it

397
00:17:21,280 --> 00:17:22,400
went to

398
00:17:22,400 --> 00:17:24,079
the rfc editor

399
00:17:24,079 --> 00:17:25,839
um

400
00:17:25,839 --> 00:17:28,400
so the features are basically

401
00:17:28,400 --> 00:17:30,640
you can dynamically reconfigure the

402
00:17:30,640 --> 00:17:33,280
addresses normally the address

403
00:17:33,280 --> 00:17:34,799
and the base protocol the addresses are

404
00:17:34,799 --> 00:17:36,320
negotiated during

405
00:17:36,320 --> 00:17:38,000
connection setup but

406
00:17:38,000 --> 00:17:40,559
you can change them over time this was

407
00:17:40,559 --> 00:17:43,520
hard to get through the ietf but it's

408
00:17:43,520 --> 00:17:44,320
done

409
00:17:44,320 --> 00:17:46,320
you can increase the number of streams

410
00:17:46,320 --> 00:17:50,160
and reset them um this is basically if

411
00:17:50,160 --> 00:17:51,840
you you don't want to tear down the

412
00:17:51,840 --> 00:17:54,320
communication relation to just increase

413
00:17:54,320 --> 00:17:56,320
something or change the addresses we

414
00:17:56,320 --> 00:17:58,960
have partial reliability so that address

415
00:17:58,960 --> 00:18:00,400
is a point where

416
00:18:00,400 --> 00:18:02,480
the application for example runs a timer

417
00:18:02,480 --> 00:18:04,240
and when the timer runs off

418
00:18:04,240 --> 00:18:07,200
basic for example it supervises the call

419
00:18:07,200 --> 00:18:09,280
setup

420
00:18:09,280 --> 00:18:11,440
and if the application decides no it

421
00:18:11,440 --> 00:18:13,120
didn't work then it doesn't make sense

422
00:18:13,120 --> 00:18:14,799
at the lower layer to still retransmit

423
00:18:14,799 --> 00:18:16,720
the messages so that's why

424
00:18:16,720 --> 00:18:19,039
partial reliability went in

425
00:18:19,039 --> 00:18:21,039
um the base

426
00:18:21,039 --> 00:18:23,919
specification has an abstract api

427
00:18:23,919 --> 00:18:26,720
um and there is also

428
00:18:26,720 --> 00:18:29,520
it was also worked on a concrete api

429
00:18:29,520 --> 00:18:32,640
just to make sure that you are able to

430
00:18:32,640 --> 00:18:35,280
configure the parameters you need to

431
00:18:35,280 --> 00:18:38,160
be able to that you can actually do that

432
00:18:38,160 --> 00:18:40,799
um that was very helpful and sometimes

433
00:18:40,799 --> 00:18:42,880
still an issue that you can't tweak some

434
00:18:42,880 --> 00:18:44,240
of the numbers

435
00:18:44,240 --> 00:18:46,320
um there were documents to improve the

436
00:18:46,320 --> 00:18:47,679
failover

437
00:18:47,679 --> 00:18:50,640
um and additional lower layers were

438
00:18:50,640 --> 00:18:52,880
added so you can run

439
00:18:52,880 --> 00:18:53,679
so

440
00:18:53,679 --> 00:18:56,960
the base back only runs over ipv4 and v6

441
00:18:56,960 --> 00:18:59,919
but you can run it over ipsec

442
00:18:59,919 --> 00:19:02,480
originally http was developed like quick

443
00:19:02,480 --> 00:19:04,880
over udp but

444
00:19:04,880 --> 00:19:06,240
it was

445
00:19:06,240 --> 00:19:09,760
changed to run natively over ip and

446
00:19:09,760 --> 00:19:11,440
a later spec brought back the udp

447
00:19:11,440 --> 00:19:13,120
encapsulation and you can run it over

448
00:19:13,120 --> 00:19:15,120
dtls if you want to

449
00:19:15,120 --> 00:19:16,960
even encrypt the

450
00:19:16,960 --> 00:19:20,160
transport information

451
00:19:20,640 --> 00:19:24,240
this is used in webrtc which is a use

452
00:19:24,240 --> 00:19:27,440
case which came in later and large user

453
00:19:27,440 --> 00:19:30,559
messages are also an issue there so

454
00:19:30,559 --> 00:19:32,080
um

455
00:19:32,080 --> 00:19:32,799
the

456
00:19:32,799 --> 00:19:34,799
handling of large user messages was

457
00:19:34,799 --> 00:19:36,880
improved to avoid head of line blocking

458
00:19:36,880 --> 00:19:38,720
and several

459
00:19:38,720 --> 00:19:41,280
stream schedulers were specified which

460
00:19:41,280 --> 00:19:43,440
is a local issue on the sender side but

461
00:19:43,440 --> 00:19:45,120
you might want to have

462
00:19:45,120 --> 00:19:48,639
a defined behavior

463
00:19:48,880 --> 00:19:51,360
when you run certain applications

464
00:19:51,360 --> 00:19:52,559
and

465
00:19:52,559 --> 00:19:54,000
the

466
00:19:54,000 --> 00:19:55,120
way

467
00:19:55,120 --> 00:19:57,440
most common way to seek your sctp

468
00:19:57,440 --> 00:19:58,799
traffic is

469
00:19:58,799 --> 00:20:00,480
transport layer security so there are

470
00:20:00,480 --> 00:20:02,240
specifications for

471
00:20:02,240 --> 00:20:04,880
tls and dtls over http

472
00:20:04,880 --> 00:20:07,840
next slide

473
00:20:09,120 --> 00:20:12,000
yeah that's the webrtc um use case so

474
00:20:12,000 --> 00:20:15,039
basically http is used to

475
00:20:15,039 --> 00:20:18,000
multiplex data channels and provide a

476
00:20:18,000 --> 00:20:19,679
condition control for them so you can

477
00:20:19,679 --> 00:20:21,600
have multiple data channels

478
00:20:21,600 --> 00:20:22,720
um

479
00:20:22,720 --> 00:20:26,080
in webrtc which are a symmetric uh

480
00:20:26,080 --> 00:20:28,000
channel so the properties in one

481
00:20:28,000 --> 00:20:29,600
direction are the properties in the

482
00:20:29,600 --> 00:20:31,200
other

483
00:20:31,200 --> 00:20:34,400
and http allows you to basically to

484
00:20:34,400 --> 00:20:36,240
open and close these

485
00:20:36,240 --> 00:20:40,240
to run them ordered and unordered

486
00:20:40,240 --> 00:20:41,600
and

487
00:20:41,600 --> 00:20:44,640
reliable or unreliable where unreliable

488
00:20:44,640 --> 00:20:46,640
means the number of retransmissions can

489
00:20:46,640 --> 00:20:48,799
be limited or the lifetime of user

490
00:20:48,799 --> 00:20:51,200
messages can be limited this can be

491
00:20:51,200 --> 00:20:53,679
combined in in

492
00:20:53,679 --> 00:20:55,760
different ways so you can have unordered

493
00:20:55,760 --> 00:20:58,320
but reliable or

494
00:20:58,320 --> 00:21:00,720
ordered but still unreliable in some

495
00:21:00,720 --> 00:21:01,679
sense

496
00:21:01,679 --> 00:21:03,039
and this is

497
00:21:03,039 --> 00:21:06,640
sort of hidden from from the um

498
00:21:06,640 --> 00:21:09,679
from the user who doesn't see http he

499
00:21:09,679 --> 00:21:13,440
just um sees uh or selects these ordered

500
00:21:13,440 --> 00:21:15,440
unordered reliable properties and that's

501
00:21:15,440 --> 00:21:16,640
it

502
00:21:16,640 --> 00:21:19,200
next slide

503
00:21:20,880 --> 00:21:23,520
yeah so um

504
00:21:23,520 --> 00:21:27,679
the question is so this is what what um

505
00:21:27,679 --> 00:21:30,799
how sap evolved in the ietf and as you

506
00:21:30,799 --> 00:21:32,880
see it's it's mostly related to the

507
00:21:32,880 --> 00:21:34,480
original use case

508
00:21:34,480 --> 00:21:36,240
um there are some

509
00:21:36,240 --> 00:21:38,640
points which um

510
00:21:38,640 --> 00:21:41,120
we didn't achieve in the ietf

511
00:21:41,120 --> 00:21:45,360
um i listed a couple of them um so the

512
00:21:45,360 --> 00:21:47,360
parametrization for signaling networks

513
00:21:47,360 --> 00:21:49,280
was something which was uh brought up a

514
00:21:49,280 --> 00:21:52,320
couple of times because it was important

515
00:21:52,320 --> 00:21:53,440
for

516
00:21:53,440 --> 00:21:54,720
um

517
00:21:54,720 --> 00:21:55,600
for

518
00:21:55,600 --> 00:21:58,640
people running http based communication

519
00:21:58,640 --> 00:22:01,120
and they wanted some guidance on that

520
00:22:01,120 --> 00:22:03,600
but the argument was always this that's

521
00:22:03,600 --> 00:22:05,840
not the internet so we don't do that

522
00:22:05,840 --> 00:22:08,000
um there was an interest in

523
00:22:08,000 --> 00:22:09,520
specification

524
00:22:09,520 --> 00:22:12,159
and specifying conformance tests which

525
00:22:12,159 --> 00:22:14,000
would be

526
00:22:14,000 --> 00:22:16,080
which also was not

527
00:22:16,080 --> 00:22:19,200
possible to do but um that's still

528
00:22:19,200 --> 00:22:22,320
something which is done in in

529
00:22:22,320 --> 00:22:24,840
in deployments where people test

530
00:22:24,840 --> 00:22:27,280
implementations before they

531
00:22:27,280 --> 00:22:28,960
take them into service

532
00:22:28,960 --> 00:22:30,480
um

533
00:22:30,480 --> 00:22:32,640
the sac the acknowledgement scheme in

534
00:22:32,640 --> 00:22:36,000
http is is in a way that you can

535
00:22:36,000 --> 00:22:39,039
reneg and there was an extension to do

536
00:22:39,039 --> 00:22:41,919
it in a non-renegable way but that also

537
00:22:41,919 --> 00:22:44,480
didn't went through

538
00:22:44,480 --> 00:22:46,720
the multi-homing in http is used for net

539
00:22:46,720 --> 00:22:48,799
for network resilience or ford

540
00:22:48,799 --> 00:22:50,480
resilience

541
00:22:50,480 --> 00:22:52,880
and there was an idea to do it also for

542
00:22:52,880 --> 00:22:54,960
load sharing but that was also not

543
00:22:54,960 --> 00:22:56,240
acceptable

544
00:22:56,240 --> 00:22:59,039
and ecm support didn't make it

545
00:22:59,039 --> 00:23:01,600
next slide

546
00:23:03,039 --> 00:23:05,600
so the current activities in at least

547
00:23:05,600 --> 00:23:09,200
tsv are um still working on an old

548
00:23:09,200 --> 00:23:10,320
document

549
00:23:10,320 --> 00:23:13,039
about net

550
00:23:13,360 --> 00:23:15,440
and it seems to be

551
00:23:15,440 --> 00:23:18,240
coming up

552
00:23:19,520 --> 00:23:21,760
in in the context of linux container

553
00:23:21,760 --> 00:23:25,039
stuff which seems to use nets and if you

554
00:23:25,039 --> 00:23:28,240
want to run sctp there then

555
00:23:28,240 --> 00:23:31,120
it seems to be an issue

556
00:23:31,120 --> 00:23:33,760
and the other one is an update for dtls

557
00:23:33,760 --> 00:23:35,440
over

558
00:23:35,440 --> 00:23:36,640
http

559
00:23:36,640 --> 00:23:38,880
the there is a specification which has

560
00:23:38,880 --> 00:23:41,840
its limits because it was written when

561
00:23:41,840 --> 00:23:42,960
um

562
00:23:42,960 --> 00:23:46,559
only dtls102 was 1.0 was available and

563
00:23:46,559 --> 00:23:47,760
one and two and one or three are

564
00:23:47,760 --> 00:23:49,360
different and don't provide the same

565
00:23:49,360 --> 00:23:50,559
services

566
00:23:50,559 --> 00:23:53,120
so there is some

567
00:23:53,120 --> 00:23:55,039
work needed

568
00:23:55,039 --> 00:23:57,520
next slide

569
00:23:58,480 --> 00:24:02,080
that's actually what might come up

570
00:24:02,080 --> 00:24:03,279
one is

571
00:24:03,279 --> 00:24:05,760
the document for udp encapsulation has

572
00:24:05,760 --> 00:24:07,039
an issue

573
00:24:07,039 --> 00:24:08,480
um which is

574
00:24:08,480 --> 00:24:11,360
written up in the document and

575
00:24:11,360 --> 00:24:13,679
in the draft there and

576
00:24:13,679 --> 00:24:16,880
instead of having a separate document

577
00:24:16,880 --> 00:24:19,679
saying you need to do this also

578
00:24:19,679 --> 00:24:20,799
um

579
00:24:20,799 --> 00:24:23,360
the idea i think of the former transport

580
00:24:23,360 --> 00:24:27,039
ide or so was to just do a biz document

581
00:24:27,039 --> 00:24:28,799
to have one complete spec for that so

582
00:24:28,799 --> 00:24:31,360
that might come up uh the other one was

583
00:24:31,360 --> 00:24:36,320
um the 14 48 95 bis uh scp auth

584
00:24:36,320 --> 00:24:40,000
uh the algorithms there are only hmac

585
00:24:40,000 --> 00:24:43,440
with shawan and hmac with sha256

586
00:24:43,440 --> 00:24:45,919
and um during the discussion for the

587
00:24:45,919 --> 00:24:49,279
dtls biz document it came up to have

588
00:24:49,279 --> 00:24:52,000
also other algorithms there maybe

589
00:24:52,000 --> 00:24:54,480
um obsolete show one as a must to

590
00:24:54,480 --> 00:24:57,600
implement um

591
00:24:57,600 --> 00:25:00,400
so that might come up i'm not aware of a

592
00:25:00,400 --> 00:25:03,360
lot of more issues there's some some

593
00:25:03,360 --> 00:25:05,039
textual cleanups

594
00:25:05,039 --> 00:25:07,600
but nothing fundamental

595
00:25:07,600 --> 00:25:08,640
um

596
00:25:08,640 --> 00:25:10,960
these two things are maintenance um

597
00:25:10,960 --> 00:25:14,400
could come up the other one new features

598
00:25:14,400 --> 00:25:16,880
one could do improvements for webrtc

599
00:25:16,880 --> 00:25:18,880
uh simple ones like you don't actually

600
00:25:18,880 --> 00:25:20,720
need the checksum i'm aware of some

601
00:25:20,720 --> 00:25:23,520
implementations not using the checksum

602
00:25:23,520 --> 00:25:26,720
at the http level because it uses uh on

603
00:25:26,720 --> 00:25:28,720
some platforms a substantial amount of

604
00:25:28,720 --> 00:25:29,760
cycles

605
00:25:29,760 --> 00:25:32,559
um you could do a fast open car style

606
00:25:32,559 --> 00:25:34,240
setup because you don't need the cookie

607
00:25:34,240 --> 00:25:36,400
protection something like that

608
00:25:36,400 --> 00:25:38,080
um you could do

609
00:25:38,080 --> 00:25:40,480
um association

610
00:25:40,480 --> 00:25:43,120
forwarding to allow any cast-like

611
00:25:43,120 --> 00:25:45,679
features which i presented i think

612
00:25:45,679 --> 00:25:47,600
an idea if we go over so

613
00:25:47,600 --> 00:25:49,679
if you want to do load balancing between

614
00:25:49,679 --> 00:25:52,720
multiple points you can do that or

615
00:25:52,720 --> 00:25:55,440
i think erickson brought that up

616
00:25:55,440 --> 00:25:57,600
you might want to consider a full mesh

617
00:25:57,600 --> 00:25:58,799
model so

618
00:25:58,799 --> 00:26:01,279
um in http the multi-homing is you don't

619
00:26:01,279 --> 00:26:02,640
consider the

620
00:26:02,640 --> 00:26:05,120
source address peers you only

621
00:26:05,120 --> 00:26:07,520
supervise the

622
00:26:07,520 --> 00:26:09,360
the destination address and not the

623
00:26:09,360 --> 00:26:11,840
destination source address pairs that's

624
00:26:11,840 --> 00:26:13,600
what i wanted to say yeah so that should

625
00:26:13,600 --> 00:26:15,919
give you an overview what the features

626
00:26:15,919 --> 00:26:18,320
of sctp are

627
00:26:18,320 --> 00:26:20,320
some of them are available also in other

628
00:26:20,320 --> 00:26:22,320
protocols um

629
00:26:22,320 --> 00:26:24,000
much streaming and quick are

630
00:26:24,000 --> 00:26:27,279
multi-homing and tcp and ptcp

631
00:26:27,279 --> 00:26:31,600
um or upcoming and mp quick um but

632
00:26:31,600 --> 00:26:33,679
it should give you a feeling what the

633
00:26:33,679 --> 00:26:37,360
services are and why they are there

634
00:26:37,360 --> 00:26:40,000
any questions

635
00:26:41,039 --> 00:26:42,720
any questions from michael uh we're

636
00:26:42,720 --> 00:26:45,039
gonna claudio go uh talk a little bit

637
00:26:45,039 --> 00:26:46,559
more about um

638
00:26:46,559 --> 00:26:48,240
or dive a little deeper into the service

639
00:26:48,240 --> 00:26:50,320
provider use case but does anyone any

640
00:26:50,320 --> 00:26:53,720
questions for michael

641
00:27:02,880 --> 00:27:04,720
gary fergus i wasn't going to ask a

642
00:27:04,720 --> 00:27:06,240
question i was going to try and provide

643
00:27:06,240 --> 00:27:07,039
a

644
00:27:07,039 --> 00:27:09,200
tiny extra context um

645
00:27:09,200 --> 00:27:11,600
we we looked at we looked at

646
00:27:11,600 --> 00:27:14,000
pathfillo with sctp and we did work

647
00:27:14,000 --> 00:27:16,000
there we pushed back on multipath

648
00:27:16,000 --> 00:27:17,520
because at the time

649
00:27:17,520 --> 00:27:19,919
that wasn't a thing now it is maybe that

650
00:27:19,919 --> 00:27:21,200
is also something that we could

651
00:27:21,200 --> 00:27:23,520
potentially look at with their ctp

652
00:27:23,520 --> 00:27:24,960
just because i push back once doesn't

653
00:27:24,960 --> 00:27:27,120
mean that this is a bad idea similar

654
00:27:27,120 --> 00:27:28,799
with ecn

655
00:27:28,799 --> 00:27:30,399
if ecm becomes popular with other things

656
00:27:30,399 --> 00:27:32,080
then maybe it fits there so maybe there

657
00:27:32,080 --> 00:27:34,320
are a few other things that i could see

658
00:27:34,320 --> 00:27:37,440
might appear as useful things for sctp

659
00:27:37,440 --> 00:27:39,279
and because we did them previously and

660
00:27:39,279 --> 00:27:42,159
said ah don't do that maybe we'll say do

661
00:27:42,159 --> 00:27:45,760
that next time if they've paused again

662
00:27:47,039 --> 00:27:49,440
china

663
00:27:54,640 --> 00:27:56,399
hi

664
00:27:56,399 --> 00:27:57,840
thanks for the presentation michael it

665
00:27:57,840 --> 00:27:59,200
was great to go

666
00:27:59,200 --> 00:28:01,279
over that history from 20 years a little

667
00:28:01,279 --> 00:28:03,279
bit um

668
00:28:03,279 --> 00:28:07,039
the the question i have and i've is is

669
00:28:07,039 --> 00:28:10,799
in terms of its use cases today

670
00:28:10,799 --> 00:28:12,480
how much is do you have a sense for how

671
00:28:12,480 --> 00:28:14,320
much http is being used right now for

672
00:28:14,320 --> 00:28:15,440
ss7

673
00:28:15,440 --> 00:28:16,799
the other was the original use case and

674
00:28:16,799 --> 00:28:18,320
i always thought that was it was

675
00:28:18,320 --> 00:28:20,559
successful in that

676
00:28:20,559 --> 00:28:21,600
quite a bit

677
00:28:21,600 --> 00:28:24,320
so i'm aware of that it is still used in

678
00:28:24,320 --> 00:28:26,320
that use case

679
00:28:26,320 --> 00:28:28,799
so it's it's still

680
00:28:28,799 --> 00:28:31,440
so so machines are still being brought

681
00:28:31,440 --> 00:28:31,990
up in

682
00:28:31,990 --> 00:28:33,679
[Music]

683
00:28:33,679 --> 00:28:35,919
network operators networks

684
00:28:35,919 --> 00:28:39,039
um today with that use case uh there are

685
00:28:39,039 --> 00:28:40,799
other use cases now

686
00:28:40,799 --> 00:28:43,120
uh in with diameter or something like

687
00:28:43,120 --> 00:28:45,520
that and um

688
00:28:45,520 --> 00:28:47,919
i think claudio is giving in the next

689
00:28:47,919 --> 00:28:51,120
presentation um

690
00:28:51,120 --> 00:28:53,919
an overview about how it is used in 5g

691
00:28:53,919 --> 00:28:55,039
or something

692
00:28:55,039 --> 00:28:58,880
5 6 g something like that

693
00:28:58,880 --> 00:29:00,480
still in signaling

694
00:29:00,480 --> 00:29:03,120
still so yeah still in signaling and i

695
00:29:03,120 --> 00:29:05,440
guess the motivations are still the same

696
00:29:05,440 --> 00:29:08,080
things like redundancy like

697
00:29:08,080 --> 00:29:10,080
so that hasn't changed the protocol on

698
00:29:10,080 --> 00:29:12,720
top has changed and maybe also the

699
00:29:12,720 --> 00:29:15,200
timers have changed

700
00:29:15,200 --> 00:29:17,279
makes sense

701
00:29:17,279 --> 00:29:19,600
thank you

702
00:29:20,080 --> 00:29:23,080
jake

703
00:29:27,520 --> 00:29:29,840
sorry i keep mixing up the video and

704
00:29:29,840 --> 00:29:32,960
screen share buttons okay um

705
00:29:32,960 --> 00:29:34,960
thank you michael that was uh that was

706
00:29:34,960 --> 00:29:36,000
interesting

707
00:29:36,000 --> 00:29:37,440
um

708
00:29:37,440 --> 00:29:38,799
i had

709
00:29:38,799 --> 00:29:41,120
so you're i there's a lot i don't know

710
00:29:41,120 --> 00:29:43,120
about sctv i've never really used it but

711
00:29:43,120 --> 00:29:44,159
um

712
00:29:44,159 --> 00:29:46,559
the the feature you mentioned about uh

713
00:29:46,559 --> 00:29:50,000
apart from reliability and uh

714
00:29:50,000 --> 00:29:51,600
you know sending with a deadline a

715
00:29:51,600 --> 00:29:53,600
partial reliability with a deadline this

716
00:29:53,600 --> 00:29:55,200
reminded me of one of the features i

717
00:29:55,200 --> 00:29:56,480
thought was really

718
00:29:56,480 --> 00:29:59,279
useful about srt that i heard about

719
00:29:59,279 --> 00:30:01,440
you know in the last in the last couple

720
00:30:01,440 --> 00:30:02,880
of years at some point and i know that

721
00:30:02,880 --> 00:30:05,039
that's had a lot of uptake

722
00:30:05,039 --> 00:30:06,720
in the video space do you have any

723
00:30:06,720 --> 00:30:08,559
insight into like

724
00:30:08,559 --> 00:30:12,799
why sctp was not sort of the go-to uh

725
00:30:12,799 --> 00:30:14,480
for

726
00:30:14,480 --> 00:30:16,880
uh for solving that problem is this a

727
00:30:16,880 --> 00:30:20,559
performance thing or a it's you know

728
00:30:20,559 --> 00:30:22,480
geared around the smaller messages and

729
00:30:22,480 --> 00:30:24,240
so it doesn't work as well for the

730
00:30:24,240 --> 00:30:26,880
larger messages or like what's the you

731
00:30:26,880 --> 00:30:27,919
know it seems like it would have been

732
00:30:27,919 --> 00:30:29,840
way easier to just

733
00:30:29,840 --> 00:30:32,080
run one that's already written if that

734
00:30:32,080 --> 00:30:34,480
worked right

735
00:30:34,480 --> 00:30:37,279
i don't know why i i have no idea

736
00:30:37,279 --> 00:30:40,320
okay i was just curious uh

737
00:30:40,320 --> 00:30:41,919
all right well well thank you this was

738
00:30:41,919 --> 00:30:44,799
uh this is neat

739
00:30:44,880 --> 00:30:46,640
okay lars and i'm gonna cut the cue

740
00:30:46,640 --> 00:30:48,159
unless someone

741
00:30:48,159 --> 00:30:50,640
enters immediately

742
00:30:50,640 --> 00:30:53,679
yeah last record um

743
00:30:55,200 --> 00:30:56,720
back when naru's id right we had

744
00:30:56,720 --> 00:30:58,640
basically ss7 was the use case and there

745
00:30:58,640 --> 00:31:00,559
was also still some hope that that sctp

746
00:31:00,559 --> 00:31:02,159
would be like the general next

747
00:31:02,159 --> 00:31:03,679
generation transfer protocol and that

748
00:31:03,679 --> 00:31:05,760
really hasn't sort of happened but then

749
00:31:05,760 --> 00:31:08,080
webrtc happened and sctp actually did

750
00:31:08,080 --> 00:31:10,159
see like a major new use case that we

751
00:31:10,159 --> 00:31:12,240
nobody really had on the radar

752
00:31:12,240 --> 00:31:13,279
um

753
00:31:13,279 --> 00:31:14,880
i'm still sort of

754
00:31:14,880 --> 00:31:17,039
um the problem we had back then was that

755
00:31:17,039 --> 00:31:18,799
we could never get adequate review for

756
00:31:18,799 --> 00:31:20,640
these sctp extensions because the

757
00:31:20,640 --> 00:31:23,039
community was very very small

758
00:31:23,039 --> 00:31:26,080
has that changed i don't think so

759
00:31:26,080 --> 00:31:27,360
so and then i think we're going to be

760
00:31:27,360 --> 00:31:28,720
fundamentally in the same situation

761
00:31:28,720 --> 00:31:29,919
where we have

762
00:31:29,919 --> 00:31:31,600
basically nobody with an interest to

763
00:31:31,600 --> 00:31:34,559
review this thing for these things

764
00:31:34,559 --> 00:31:35,919
adequately

765
00:31:35,919 --> 00:31:37,200
i think that that's sort of something

766
00:31:37,200 --> 00:31:39,360
that's it's not a technological issue

767
00:31:39,360 --> 00:31:40,640
with any of this right they're all

768
00:31:40,640 --> 00:31:42,720
probably reasonable but we we didn't

769
00:31:42,720 --> 00:31:45,600
really manage to review stuff back then

770
00:31:45,600 --> 00:31:47,550
i wonder if that's changed now

771
00:31:47,550 --> 00:31:49,679
[Music]

772
00:31:49,679 --> 00:31:51,039
so there was a

773
00:31:51,039 --> 00:31:54,480
a group of people um

774
00:31:54,480 --> 00:31:57,039
being interested in sctp and doing

775
00:31:57,039 --> 00:31:58,840
reviews it was not

776
00:31:58,840 --> 00:32:00,720
large

777
00:32:00,720 --> 00:32:01,519
but

778
00:32:01,519 --> 00:32:03,600
there were a couple of people

779
00:32:03,600 --> 00:32:06,640
doing it from different

780
00:32:06,640 --> 00:32:08,080
companies

781
00:32:08,080 --> 00:32:11,360
vendors or whatever you would call them

782
00:32:11,360 --> 00:32:12,799
so that's a

783
00:32:12,799 --> 00:32:15,039
new application on top of http what i

784
00:32:15,039 --> 00:32:16,559
meant is like people actually implement

785
00:32:16,559 --> 00:32:18,480
sctp stacks because as far as i know

786
00:32:18,480 --> 00:32:20,159
there's exactly one implementation that

787
00:32:20,159 --> 00:32:21,919
everybody's using right

788
00:32:21,919 --> 00:32:25,720
uh as far as is

789
00:32:32,960 --> 00:32:36,080
so a lot of so i'm aware of a lot of

790
00:32:36,080 --> 00:32:38,880
companies in the telco area having their

791
00:32:38,880 --> 00:32:41,200
own implementations some sometimes some

792
00:32:41,200 --> 00:32:43,919
p some companies even have more than one

793
00:32:43,919 --> 00:32:45,600
um

794
00:32:45,600 --> 00:32:49,320
and with webrtc there are multiple other

795
00:32:49,320 --> 00:32:50,960
implementations

796
00:32:50,960 --> 00:32:55,679
focusing on that uh particular case

797
00:32:55,679 --> 00:32:59,279
so i'm aware of google i'm aware of

798
00:32:59,279 --> 00:33:00,799
other implementations in other

799
00:33:00,799 --> 00:33:02,960
programming languages so there are

800
00:33:02,960 --> 00:33:04,159
multiple

801
00:33:04,159 --> 00:33:07,679
implementations available

802
00:33:07,679 --> 00:33:10,000
so uh we need to move on but but lars i

803
00:33:10,000 --> 00:33:10,799
did

804
00:33:10,799 --> 00:33:12,240
you do raise an interesting point about

805
00:33:12,240 --> 00:33:14,559
quality review um there is a a pretty

806
00:33:14,559 --> 00:33:17,279
good pipeline proposed work in this area

807
00:33:17,279 --> 00:33:19,600
um and i'm always asking the question

808
00:33:19,600 --> 00:33:22,240
can we farm this out of tscwg to take

809
00:33:22,240 --> 00:33:25,440
something off their plate um and i i did

810
00:33:25,440 --> 00:33:27,440
a bit of a poll and i think six or seven

811
00:33:27,440 --> 00:33:28,880
people said they would attend a working

812
00:33:28,880 --> 00:33:31,440
group that did this now who knows what

813
00:33:31,440 --> 00:33:33,039
percentage of the actual attendees that

814
00:33:33,039 --> 00:33:33,760
is

815
00:33:33,760 --> 00:33:36,240
but it was a little bit on the low side

816
00:33:36,240 --> 00:33:41,600
to separate it out so whether tsvwg is

817
00:33:41,600 --> 00:33:43,600
whether those additional people in tswg

818
00:33:43,600 --> 00:33:45,200
are actually reviewing the work uh you

819
00:33:45,200 --> 00:33:47,440
know it's hard to say

820
00:33:47,440 --> 00:33:48,480
but um

821
00:33:48,480 --> 00:33:51,200
yeah that's always the concern

822
00:33:51,200 --> 00:33:52,960
all right let's let's move on to uh

823
00:33:52,960 --> 00:33:55,200
claudio's presentation which dives a

824
00:33:55,200 --> 00:33:57,279
little deeper into uh service provider

825
00:33:57,279 --> 00:33:59,919
use cases

826
00:34:02,559 --> 00:34:06,480
thank you can you hear me today

827
00:34:06,480 --> 00:34:08,079
guys much better

828
00:34:08,079 --> 00:34:10,000
hello

829
00:34:10,000 --> 00:34:12,800
yeah yeah claudio i can hear you

830
00:34:12,800 --> 00:34:14,239
go ahead

831
00:34:14,239 --> 00:34:16,879
you can't hear me today or

832
00:34:16,879 --> 00:34:18,839
we can

833
00:34:18,839 --> 00:34:22,719
michael oh you can't hear us for us

834
00:34:22,719 --> 00:34:26,159
hello can you hear me today

835
00:34:26,159 --> 00:34:30,079
oh perfect because i it's not you yes

836
00:34:30,079 --> 00:34:32,079
but

837
00:34:32,079 --> 00:34:35,359
i try to do what they can here so uh

838
00:34:35,359 --> 00:34:38,639
well somebody has got the worrisor cdp

839
00:34:38,639 --> 00:34:40,480
still use it just

840
00:34:40,480 --> 00:34:42,320
look around you

841
00:34:42,320 --> 00:34:44,560
it is all around you it's used

842
00:34:44,560 --> 00:34:47,040
everywhere in the world every day there

843
00:34:47,040 --> 00:34:50,480
are thousands of new deployment of scpp

844
00:34:50,480 --> 00:34:52,560
because it is used in the radioaccess

845
00:34:52,560 --> 00:34:53,679
network

846
00:34:53,679 --> 00:34:56,960
so it's not your mobile phone that is

847
00:34:56,960 --> 00:34:59,920
using sctp but the next hope the the

848
00:34:59,920 --> 00:35:03,599
radio station is using scp

849
00:35:03,599 --> 00:35:07,440
and there are some special reasons why

850
00:35:07,440 --> 00:35:10,640
it is used at scdp and possibly some of

851
00:35:10,640 --> 00:35:13,440
the reasons they were not really

852
00:35:13,440 --> 00:35:16,400
the real objective of the first design

853
00:35:16,400 --> 00:35:20,000
of the protocol because we are not using

854
00:35:20,000 --> 00:35:23,359
http with ss7 in the radioactive network

855
00:35:23,359 --> 00:35:25,920
s7 is not there anymore

856
00:35:25,920 --> 00:35:29,599
and we use it in a very peculiar way so

857
00:35:29,599 --> 00:35:30,400
let

858
00:35:30,400 --> 00:35:32,400
please switch to the next slide and i

859
00:35:32,400 --> 00:35:33,680
will

860
00:35:33,680 --> 00:35:38,000
talk a little bit about why it is there

861
00:35:38,000 --> 00:35:40,320
in front of you you have

862
00:35:40,320 --> 00:35:42,560
something like the current radio access

863
00:35:42,560 --> 00:35:45,440
network so you have some coresight you

864
00:35:45,440 --> 00:35:48,560
have some central sites that are

865
00:35:48,560 --> 00:35:50,000
cloud-based

866
00:35:50,000 --> 00:35:52,000
and you have the radio site

867
00:35:52,000 --> 00:35:54,720
here i show you that they are all

868
00:35:54,720 --> 00:35:57,760
connected with the lines

869
00:35:57,760 --> 00:36:01,520
and those lines they represent the lcdb

870
00:36:01,520 --> 00:36:03,359
association

871
00:36:03,359 --> 00:36:04,640
the

872
00:36:04,640 --> 00:36:06,820
it is the control plane so

873
00:36:06,820 --> 00:36:08,000
[Music]

874
00:36:08,000 --> 00:36:10,240
it's not really the message for the end

875
00:36:10,240 --> 00:36:12,800
user but it is the message that enables

876
00:36:12,800 --> 00:36:16,079
the handy user to do what he wants to do

877
00:36:16,079 --> 00:36:18,880
with this mobile device

878
00:36:18,880 --> 00:36:22,160
so for instance if you want to

879
00:36:22,160 --> 00:36:24,400
to get more bandwidth

880
00:36:24,400 --> 00:36:27,040
because you are watching some movies on

881
00:36:27,040 --> 00:36:28,560
your mobile phone

882
00:36:28,560 --> 00:36:29,440
then

883
00:36:29,440 --> 00:36:31,920
it's your radio that will ask

884
00:36:31,920 --> 00:36:35,359
to the network is this user equipment

885
00:36:35,359 --> 00:36:37,599
permitted to do

886
00:36:37,599 --> 00:36:42,079
more bandwidth if so then it will tell

887
00:36:42,079 --> 00:36:44,079
via control plane

888
00:36:44,079 --> 00:36:47,520
to the radio to allocate more bandwidth

889
00:36:47,520 --> 00:36:50,320
so that is more or less the

890
00:36:50,320 --> 00:36:52,000
the new way

891
00:36:52,000 --> 00:36:54,720
the control plane is controlling all the

892
00:36:54,720 --> 00:36:58,880
devices in the radio access network

893
00:36:58,880 --> 00:37:01,680
and on the other hand

894
00:37:01,680 --> 00:37:04,800
this is not internet it is another

895
00:37:04,800 --> 00:37:05,920
network

896
00:37:05,920 --> 00:37:06,839
it's

897
00:37:06,839 --> 00:37:11,200
often on vpn so you don't have

898
00:37:11,200 --> 00:37:14,079
you don't go into the public internet

899
00:37:14,079 --> 00:37:16,079
it's often

900
00:37:16,079 --> 00:37:19,359
uh handled in a different way than

901
00:37:19,359 --> 00:37:23,040
than we imagine a network so

902
00:37:23,040 --> 00:37:26,560
quite often each of this

903
00:37:26,880 --> 00:37:30,079
control signaling is encapsulated over

904
00:37:30,079 --> 00:37:31,920
ipsec for

905
00:37:31,920 --> 00:37:34,560
security and

906
00:37:34,560 --> 00:37:39,119
also often this ipsec encapsulation is

907
00:37:39,119 --> 00:37:43,280
statically routed in order to keep

908
00:37:43,280 --> 00:37:47,680
under control all the possible uh

909
00:37:47,680 --> 00:37:51,520
faults between nodes or network

910
00:37:51,520 --> 00:37:54,160
problems

911
00:37:54,240 --> 00:37:55,760
some are

912
00:37:55,760 --> 00:37:58,880
single homed some are multi-homework

913
00:37:58,880 --> 00:38:00,000
in the

914
00:38:00,000 --> 00:38:02,800
in the old world when we were doing 3g

915
00:38:02,800 --> 00:38:05,920
we had only single ohm and association

916
00:38:05,920 --> 00:38:08,640
in the chain but when lte has been

917
00:38:08,640 --> 00:38:10,560
introduced with 4g

918
00:38:10,560 --> 00:38:15,359
and with the 5g as well we have started

919
00:38:15,359 --> 00:38:18,320
for the customer operator have started

920
00:38:18,320 --> 00:38:20,720
pretending to have multi-owning for

921
00:38:20,720 --> 00:38:23,680
redundancy so that

922
00:38:23,680 --> 00:38:26,079
the network can be under control in a

923
00:38:26,079 --> 00:38:28,320
smooth way

924
00:38:28,320 --> 00:38:30,960
furthermore

925
00:38:31,359 --> 00:38:35,040
one moving from 4g to 5g network has

926
00:38:35,040 --> 00:38:39,680
introduced a concept of migration so

927
00:38:39,680 --> 00:38:43,680
when moving from 3g to 4g that there was

928
00:38:43,680 --> 00:38:44,839
no direct

929
00:38:44,839 --> 00:38:47,599
communication in the run between

930
00:38:47,599 --> 00:38:51,599
those generations but between 4g and 5g

931
00:38:51,599 --> 00:38:54,720
a new trend has been established so that

932
00:38:54,720 --> 00:38:56,000
we have

933
00:38:56,000 --> 00:38:58,400
a channel that connects to the

934
00:38:58,400 --> 00:39:00,720
generation and this still is transported

935
00:39:00,720 --> 00:39:03,280
over scdb

936
00:39:03,280 --> 00:39:04,079
uh

937
00:39:04,079 --> 00:39:06,640
somebody asked is there only one

938
00:39:06,640 --> 00:39:08,880
implementation no there are more

939
00:39:08,880 --> 00:39:11,280
implementation but

940
00:39:11,280 --> 00:39:13,839
thanks to the fact that

941
00:39:13,839 --> 00:39:17,040
there were not so many

942
00:39:17,040 --> 00:39:19,599
big changes in sbb

943
00:39:19,599 --> 00:39:22,640
the interoperability between vendor is

944
00:39:22,640 --> 00:39:25,280
quite good and for the

945
00:39:25,280 --> 00:39:28,400
for the run for the net telecom vendor

946
00:39:28,400 --> 00:39:30,240
interoperability is

947
00:39:30,240 --> 00:39:31,920
very important

948
00:39:31,920 --> 00:39:36,240
and the lifetime of the sctp

949
00:39:36,240 --> 00:39:38,800
is in this way tied to the lifetime of

950
00:39:38,800 --> 00:39:41,280
the ready access network so let's say

951
00:39:41,280 --> 00:39:45,839
that 4g will be still there for

952
00:39:45,839 --> 00:39:49,359
another 10 years and then 5g has been

953
00:39:49,359 --> 00:39:50,400
just

954
00:39:50,400 --> 00:39:54,400
taken over now so let's say that in 2035

955
00:39:54,400 --> 00:39:57,280
scp will still be there

956
00:39:57,280 --> 00:40:00,000
so if uh thinking about a replacement

957
00:40:00,000 --> 00:40:02,320
for scdb is something that should be

958
00:40:02,320 --> 00:40:06,240
planned now and probably will

959
00:40:06,240 --> 00:40:11,839
will show up in the middle of the 30s

960
00:40:12,240 --> 00:40:15,680
please next slide

961
00:40:17,440 --> 00:40:20,000
as i said before

962
00:40:20,000 --> 00:40:23,280
the run is not the internet

963
00:40:23,280 --> 00:40:25,920
since the control plane is very

964
00:40:25,920 --> 00:40:28,720
important for the operators and losing

965
00:40:28,720 --> 00:40:30,160
the control plane

966
00:40:30,160 --> 00:40:35,119
means losing the money the ip network is

967
00:40:35,119 --> 00:40:36,240
say

968
00:40:36,240 --> 00:40:38,480
rather than being packet

969
00:40:38,480 --> 00:40:40,560
oriented it's a connection-oriented

970
00:40:40,560 --> 00:40:41,599
fashion

971
00:40:41,599 --> 00:40:44,079
so the operator they take particular

972
00:40:44,079 --> 00:40:47,440
care in on how they encapsulate

973
00:40:47,440 --> 00:40:49,359
and how they are positioning the

974
00:40:49,359 --> 00:40:51,119
security gateway

975
00:40:51,119 --> 00:40:52,880
for

976
00:40:52,880 --> 00:40:55,359
for traffic redundancy

977
00:40:55,359 --> 00:40:58,400
and they use steady crowds i can also

978
00:40:58,400 --> 00:41:01,839
tell you that they don't trust dns they

979
00:41:01,839 --> 00:41:05,200
assign manually ip address

980
00:41:05,200 --> 00:41:06,480
for

981
00:41:06,480 --> 00:41:10,880
for having everything under control

982
00:41:10,880 --> 00:41:14,480
the next slide list

983
00:41:16,480 --> 00:41:18,720
we are using

984
00:41:18,720 --> 00:41:21,119
before mikkel made a very nice

985
00:41:21,119 --> 00:41:23,520
presentation about all the features

986
00:41:23,520 --> 00:41:26,480
current and planet for sedb

987
00:41:26,480 --> 00:41:29,599
what we use in run is that the

988
00:41:29,599 --> 00:41:32,319
connection are semi-permanent so

989
00:41:32,319 --> 00:41:34,880
for a telecom operator there is no

990
00:41:34,880 --> 00:41:37,359
reason to take down an association

991
00:41:37,359 --> 00:41:39,520
unless a problem of course

992
00:41:39,520 --> 00:41:43,599
so it should be up forever theoretically

993
00:41:43,599 --> 00:41:47,200
we use two strings

994
00:41:47,200 --> 00:41:49,920
one stream is used for generic control

995
00:41:49,920 --> 00:41:52,400
and the other stream is used for

996
00:41:52,400 --> 00:41:54,240
providing

997
00:41:54,240 --> 00:41:55,760
independent

998
00:41:55,760 --> 00:41:58,720
uh non-head of locking

999
00:41:58,720 --> 00:42:02,319
connection for other kind of signaling

1000
00:42:02,319 --> 00:42:04,480
multi-homing is

1001
00:42:04,480 --> 00:42:07,359
the feature that operator like

1002
00:42:07,359 --> 00:42:10,000
a lot because they can reconfigure the

1003
00:42:10,000 --> 00:42:12,400
network still

1004
00:42:12,400 --> 00:42:14,880
the transport network and still the run

1005
00:42:14,880 --> 00:42:18,000
will be working smoothly

1006
00:42:18,000 --> 00:42:21,040
we do in sequence delivery

1007
00:42:21,040 --> 00:42:23,680
i don't know any case of non sequence

1008
00:42:23,680 --> 00:42:27,118
delivery in the telecom

1009
00:42:28,240 --> 00:42:30,160
in the last time there is a lot of

1010
00:42:30,160 --> 00:42:32,720
effort on security so we

1011
00:42:32,720 --> 00:42:34,079
use

1012
00:42:34,079 --> 00:42:37,760
encryption and then since

1013
00:42:37,760 --> 00:42:40,160
scdp doesn't really trust the transport

1014
00:42:40,160 --> 00:42:41,359
network

1015
00:42:41,359 --> 00:42:43,680
we use the

1016
00:42:43,680 --> 00:42:47,040
level path mq discovery that is also

1017
00:42:47,040 --> 00:42:48,880
part of svp

1018
00:42:48,880 --> 00:42:52,079
and unofficial so something that is

1019
00:42:52,079 --> 00:42:55,680
implemented and it's using the scdb

1020
00:42:55,680 --> 00:42:57,920
but not in the way that scp has been

1021
00:42:57,920 --> 00:43:01,440
designed is that the timers so we are

1022
00:43:01,440 --> 00:43:02,480
using

1023
00:43:02,480 --> 00:43:05,440
timers that are much faster than what is

1024
00:43:05,440 --> 00:43:08,160
recommended in the original

1025
00:43:08,160 --> 00:43:09,839
rfc

1026
00:43:09,839 --> 00:43:10,880
and

1027
00:43:10,880 --> 00:43:14,960
we take care of timer accuracy so we

1028
00:43:14,960 --> 00:43:18,160
use a millisecond the timer accuracy for

1029
00:43:18,160 --> 00:43:19,599
our purposes

1030
00:43:19,599 --> 00:43:24,560
and then we use scp for link supervision

1031
00:43:24,560 --> 00:43:28,400
even though this is not written anywhere

1032
00:43:28,400 --> 00:43:31,040
in the in the recommendation

1033
00:43:31,040 --> 00:43:33,359
in the next slide please

1034
00:43:33,359 --> 00:43:34,800
claudia are you about three minutes

1035
00:43:34,800 --> 00:43:37,839
remaining for these masteries one of the

1036
00:43:37,839 --> 00:43:41,440
reasons why we use scgp

1037
00:43:41,440 --> 00:43:42,720
is

1038
00:43:42,720 --> 00:43:44,800
for latency

1039
00:43:44,800 --> 00:43:47,680
you you don't think that it has anything

1040
00:43:47,680 --> 00:43:51,280
to do because it doesn't start from

1041
00:43:51,280 --> 00:43:55,520
user equipment to user equipment but

1042
00:43:55,520 --> 00:43:58,960
the case is that normally in in lte

1043
00:43:58,960 --> 00:44:01,760
any user equipment a mobile phone is in

1044
00:44:01,760 --> 00:44:05,280
idle mode so it doesn't have any

1045
00:44:05,280 --> 00:44:08,400
carriers assignment from for

1046
00:44:08,400 --> 00:44:10,720
transferring data so you think that you

1047
00:44:10,720 --> 00:44:12,640
are connected but you are not

1048
00:44:12,640 --> 00:44:15,440
unless you do something and then at that

1049
00:44:15,440 --> 00:44:16,400
time

1050
00:44:16,400 --> 00:44:19,200
your user equipment asks the network for

1051
00:44:19,200 --> 00:44:21,440
resources so it's like

1052
00:44:21,440 --> 00:44:24,319
that the cable is unplugged from the

1053
00:44:24,319 --> 00:44:26,720
network you plug in the cable to the

1054
00:44:26,720 --> 00:44:30,000
network only when you ask for it

1055
00:44:30,000 --> 00:44:33,200
and then the handshake for guaranteeing

1056
00:44:33,200 --> 00:44:34,160
the

1057
00:44:34,160 --> 00:44:37,359
the user plane data requires five

1058
00:44:37,359 --> 00:44:38,880
signals

1059
00:44:38,880 --> 00:44:42,720
between the ue and the core network

1060
00:44:42,720 --> 00:44:44,800
and requirement is that it should be

1061
00:44:44,800 --> 00:44:47,200
accomplished in less than 100

1062
00:44:47,200 --> 00:44:49,040
milliseconds

1063
00:44:49,040 --> 00:44:51,760
so if you want to make a ping from your

1064
00:44:51,760 --> 00:44:54,079
lte mobile phone

1065
00:44:54,079 --> 00:44:57,680
you will spend the five handshake and

1066
00:44:57,680 --> 00:44:59,599
then you will send

1067
00:44:59,599 --> 00:45:03,440
the icmp packet and getting the rtp

1068
00:45:03,440 --> 00:45:06,880
and the measured time will be actually

1069
00:45:06,880 --> 00:45:10,560
the sum of this and initial and shape

1070
00:45:10,560 --> 00:45:13,119
and actual rtt

1071
00:45:13,119 --> 00:45:16,560
this is something that

1072
00:45:16,560 --> 00:45:20,000
shows how important is

1073
00:45:20,000 --> 00:45:24,079
the sctp and the control plane for the

1074
00:45:24,079 --> 00:45:26,640
for the experience of the low latency

1075
00:45:26,640 --> 00:45:27,680
that

1076
00:45:27,680 --> 00:45:31,040
a user has

1077
00:45:31,040 --> 00:45:35,680
uh next slide this

1078
00:45:39,599 --> 00:45:43,040
can you okay and now this is the other

1079
00:45:43,040 --> 00:45:44,839
way that is the link

1080
00:45:44,839 --> 00:45:46,640
supervision

1081
00:45:46,640 --> 00:45:49,280
uh yes i will do that in two minutes the

1082
00:45:49,280 --> 00:45:51,760
other case is that we have uh

1083
00:45:51,760 --> 00:45:53,760
that the links were vision is important

1084
00:45:53,760 --> 00:45:56,800
because when the connection towards the

1085
00:45:56,800 --> 00:45:58,640
control plane is lost

1086
00:45:58,640 --> 00:46:02,640
in the run then you need to shut down

1087
00:46:02,640 --> 00:46:05,119
the radio as soon as possible

1088
00:46:05,119 --> 00:46:07,680
and this is because if a radio

1089
00:46:07,680 --> 00:46:10,400
that is not under control of the control

1090
00:46:10,400 --> 00:46:14,000
plane can cause disturbance to the

1091
00:46:14,000 --> 00:46:17,440
neighbor's radio and at the same time

1092
00:46:17,440 --> 00:46:20,319
removing the power to the radio tells

1093
00:46:20,319 --> 00:46:23,359
implicitly to all the user equipment

1094
00:46:23,359 --> 00:46:26,720
that this cell this radio is not working

1095
00:46:26,720 --> 00:46:29,599
anymore and they have to connect to

1096
00:46:29,599 --> 00:46:32,800
another radio so in the in the case of

1097
00:46:32,800 --> 00:46:35,040
in the you are watching the super bowl

1098
00:46:35,040 --> 00:46:37,040
and you are at the stadium and one of

1099
00:46:37,040 --> 00:46:39,599
the radio that is serving us with the

1100
00:46:39,599 --> 00:46:41,440
stadium

1101
00:46:41,440 --> 00:46:45,200
loses connection to the to the network

1102
00:46:45,200 --> 00:46:48,000
it is important that in a few seconds

1103
00:46:48,000 --> 00:46:49,599
this is known

1104
00:46:49,599 --> 00:46:51,599
and then

1105
00:46:51,599 --> 00:46:53,920
so that the equipment can

1106
00:46:53,920 --> 00:46:57,119
hand over into another radius rail

1107
00:46:57,119 --> 00:47:00,480
station and this is the requirement is

1108
00:47:00,480 --> 00:47:03,599
that you should do that in less than 20

1109
00:47:03,599 --> 00:47:04,880
seconds

1110
00:47:04,880 --> 00:47:07,680
uh next slide piece i don't know if it's

1111
00:47:07,680 --> 00:47:10,400
my last slide

1112
00:47:10,400 --> 00:47:11,920
yeah this is

1113
00:47:11,920 --> 00:47:13,440
the weakness

1114
00:47:13,440 --> 00:47:14,640
and

1115
00:47:14,640 --> 00:47:17,440
that we have seen so it's hard to make

1116
00:47:17,440 --> 00:47:21,760
it work behind that but miguel said it

1117
00:47:21,760 --> 00:47:24,640
for supporting cloud

1118
00:47:24,640 --> 00:47:26,400
implementations

1119
00:47:26,400 --> 00:47:29,119
have some side effects with each other

1120
00:47:29,119 --> 00:47:32,559
when internal or in the user space

1121
00:47:32,559 --> 00:47:35,520
then encryption is not negative and then

1122
00:47:35,520 --> 00:47:36,880
the last but not the least one

1123
00:47:36,880 --> 00:47:40,000
oscillation doesn't scale well for hiv

1124
00:47:40,000 --> 00:47:43,119
please do the next one

1125
00:47:46,160 --> 00:47:47,920
if you don't switch into the next i

1126
00:47:47,920 --> 00:47:49,359
don't think that like

1127
00:47:49,359 --> 00:47:52,800
maybe maybe we can see that this is my

1128
00:47:52,800 --> 00:47:55,680
last slide

1129
00:47:56,640 --> 00:47:58,079
yeah this is

1130
00:47:58,079 --> 00:47:59,920
my last slide please

1131
00:47:59,920 --> 00:48:01,760
close the

1132
00:48:01,760 --> 00:48:03,280
eye closed and

1133
00:48:03,280 --> 00:48:04,839
ask if you have

1134
00:48:04,839 --> 00:48:07,680
questions okay i'm not 100 sure if

1135
00:48:07,680 --> 00:48:10,800
claudia can hear us um

1136
00:48:10,800 --> 00:48:12,800
there certainly was issues before

1137
00:48:12,800 --> 00:48:14,960
but regardless um if anyone has any

1138
00:48:14,960 --> 00:48:17,280
questions uh and if claudio can't hear

1139
00:48:17,280 --> 00:48:19,119
uh hopefully maybe some of the other

1140
00:48:19,119 --> 00:48:21,040
erickson people that are in the audience

1141
00:48:21,040 --> 00:48:23,839
could could back them up

1142
00:48:23,839 --> 00:48:25,839
michael

1143
00:48:25,839 --> 00:48:27,440
uh yeah

1144
00:48:27,440 --> 00:48:28,640
so

1145
00:48:28,640 --> 00:48:30,000
the question is

1146
00:48:30,000 --> 00:48:32,880
the capacity one so is it uh

1147
00:48:32,880 --> 00:48:34,960
so what is the limiting point here

1148
00:48:34,960 --> 00:48:36,800
we can't serve a gigabit we can't serve

1149
00:48:36,800 --> 00:48:39,359
10 gig or 100 gig or

1150
00:48:39,359 --> 00:48:44,078
in which scale are we there

1151
00:48:44,880 --> 00:48:48,559
no not really it is that uh it's

1152
00:48:48,559 --> 00:48:50,720
difficult to scan over

1153
00:48:50,720 --> 00:48:53,599
multiple because of the design that

1154
00:48:53,599 --> 00:48:56,400
requires this single point

1155
00:48:56,400 --> 00:48:59,040
doing the that is difficult to

1156
00:48:59,040 --> 00:49:00,160
implement

1157
00:49:00,160 --> 00:49:01,599
so you can

1158
00:49:01,599 --> 00:49:03,200
one association

1159
00:49:03,200 --> 00:49:05,520
is a single point for the sake so it

1160
00:49:05,520 --> 00:49:08,240
cannot grow up forever normally it is

1161
00:49:08,240 --> 00:49:12,640
limited to the work of a single core

1162
00:49:13,440 --> 00:49:16,960
so so and and a connection terminates at

1163
00:49:16,960 --> 00:49:19,839
a single endpoint

1164
00:49:20,800 --> 00:49:25,200
like a tcp connection or whatever okay

1165
00:49:26,160 --> 00:49:28,559
reese yeah so we have a question from

1166
00:49:28,559 --> 00:49:31,520
the chef by julius crobot

1167
00:49:31,520 --> 00:49:33,839
the capacity issue is it a problem with

1168
00:49:33,839 --> 00:49:38,000
window size or with congestion control

1169
00:49:38,400 --> 00:49:40,640
oh no no problem with windows sides of

1170
00:49:40,640 --> 00:49:42,480
congestion control everything works

1171
00:49:42,480 --> 00:49:44,400
perfectly but if you

1172
00:49:44,400 --> 00:49:47,359
had more tracking on an association then

1173
00:49:47,359 --> 00:49:49,920
you will saturate the capacity of a

1174
00:49:49,920 --> 00:49:52,480
single core because

1175
00:49:52,480 --> 00:49:54,800
i haven't seen an implementation that

1176
00:49:54,800 --> 00:49:57,839
can spread a single association on more

1177
00:49:57,839 --> 00:50:00,880
than one single report it is because

1178
00:50:00,880 --> 00:50:06,079
the way that the protocol is designed

1179
00:50:07,760 --> 00:50:08,800
large

1180
00:50:08,800 --> 00:50:09,760
yeah i think it's

1181
00:50:09,760 --> 00:50:11,599
a cpu issue because you can't offload

1182
00:50:11,599 --> 00:50:14,400
sctp like you can offload tcp to modern

1183
00:50:14,400 --> 00:50:16,400
nics right and so

1184
00:50:16,400 --> 00:50:18,640
because of that you're limited

1185
00:50:18,640 --> 00:50:21,200
by what a single core can do and i guess

1186
00:50:21,200 --> 00:50:22,800
these cores may not always be super

1187
00:50:22,800 --> 00:50:25,800
powerful

1188
00:50:29,920 --> 00:50:32,319
jonna

1189
00:50:36,319 --> 00:50:37,920
i think i'm in

1190
00:50:37,920 --> 00:50:39,920
um i'll speak to the specific specific

1191
00:50:39,920 --> 00:50:41,359
point and then i have a general question

1192
00:50:41,359 --> 00:50:43,200
for the chairs i have a comment that's

1193
00:50:43,200 --> 00:50:44,319
more general

1194
00:50:44,319 --> 00:50:46,800
um on this particular point i think that

1195
00:50:46,800 --> 00:50:48,559
it really depends on the implementation

1196
00:50:48,559 --> 00:50:50,640
if you're doing it in user space

1197
00:50:50,640 --> 00:50:53,119
you might be able to do fun tricks but i

1198
00:50:53,119 --> 00:50:54,480
can understand that with existing

1199
00:50:54,480 --> 00:50:56,559
implementations in kernel in particular

1200
00:50:56,559 --> 00:50:58,640
you'd have trouble scaling past a single

1201
00:50:58,640 --> 00:50:59,839
core

1202
00:50:59,839 --> 00:51:01,760
so i get that

1203
00:51:01,760 --> 00:51:02,559
um

1204
00:51:02,559 --> 00:51:04,000
the general question i have for the

1205
00:51:04,000 --> 00:51:06,240
chairs is are we having

1206
00:51:06,240 --> 00:51:08,000
are we having just questions related to

1207
00:51:08,000 --> 00:51:09,599
the specific presentations or are you

1208
00:51:09,599 --> 00:51:12,000
also generally i saw the type that

1209
00:51:12,000 --> 00:51:14,000
the theme here was scpp

1210
00:51:14,000 --> 00:51:16,800
today uh do you want to take uh comments

1211
00:51:16,800 --> 00:51:17,680
on that

1212
00:51:17,680 --> 00:51:19,760
so um i'm gonna cut the queue after

1213
00:51:19,760 --> 00:51:22,000
michael and then um we'll open it we'll

1214
00:51:22,000 --> 00:51:24,000
help with transition to open mic and

1215
00:51:24,000 --> 00:51:25,359
you're welcome to keep talking about

1216
00:51:25,359 --> 00:51:28,960
sctp if you would like to do that

1217
00:51:29,520 --> 00:51:32,160
okay so i should do that now

1218
00:51:32,160 --> 00:51:34,079
uh let's let's let's have michael follow

1219
00:51:34,079 --> 00:51:35,599
up on this presentation one last time

1220
00:51:35,599 --> 00:51:37,599
then we can open the mic

1221
00:51:37,599 --> 00:51:40,800
i'll just look to you then

1222
00:51:41,599 --> 00:51:45,599
yes just two two remarks one is

1223
00:51:45,680 --> 00:51:47,599
nix of some vendors allow checksum

1224
00:51:47,599 --> 00:51:50,640
offloading which is in the case of sctp

1225
00:51:50,640 --> 00:51:52,800
uh much more useful than in the case of

1226
00:51:52,800 --> 00:51:56,400
tcp um so doing the

1227
00:51:56,400 --> 00:51:58,079
depending on the cpu you have that's

1228
00:51:58,079 --> 00:52:01,599
that's uh that's that's some cpu load um

1229
00:52:01,599 --> 00:52:03,520
i'm aware of implementations which can

1230
00:52:03,520 --> 00:52:05,200
do at least

1231
00:52:05,200 --> 00:52:06,880
receiving packets in one thread

1232
00:52:06,880 --> 00:52:08,640
receiving sending packets and another

1233
00:52:08,640 --> 00:52:09,599
thread

1234
00:52:09,599 --> 00:52:11,760
to some way so

1235
00:52:11,760 --> 00:52:13,920
you can you can

1236
00:52:13,920 --> 00:52:16,839
you can do that but that gets

1237
00:52:16,839 --> 00:52:20,720
hard you can't use more than

1238
00:52:20,720 --> 00:52:23,598
two i guess

1239
00:52:24,160 --> 00:52:25,760
thank you michael and thank you claudio

1240
00:52:25,760 --> 00:52:27,440
for presentations um they were very

1241
00:52:27,440 --> 00:52:30,800
informative i certainly learned a lot um

1242
00:52:30,800 --> 00:52:32,800
this is now begins the open mic portion

1243
00:52:32,800 --> 00:52:35,119
of the session so um if you have any

1244
00:52:35,119 --> 00:52:36,880
comments at all about the transport area

1245
00:52:36,880 --> 00:52:38,800
and any part of it feel free to enter

1246
00:52:38,800 --> 00:52:42,240
the queue and we'll begin with janna

1247
00:52:44,960 --> 00:52:46,559
thanks again martin

1248
00:52:46,559 --> 00:52:47,280
so

1249
00:52:47,280 --> 00:52:49,200
at a high level i think

1250
00:52:49,200 --> 00:52:50,800
uh it's in it's instructor to think

1251
00:52:50,800 --> 00:52:53,359
about the fact that uh sctp even lost

1252
00:52:53,359 --> 00:52:55,040
his point earlier about the fact that

1253
00:52:55,040 --> 00:52:57,680
sctp was designed at a different time

1254
00:52:57,680 --> 00:52:59,200
had different potential end goals at the

1255
00:52:59,200 --> 00:53:01,599
time not all of them manifested for

1256
00:53:01,599 --> 00:53:03,920
various reasons we understand them i

1257
00:53:03,920 --> 00:53:07,200
think would be well today and uh i will

1258
00:53:07,200 --> 00:53:09,119
say that we've taken a lot of those

1259
00:53:09,119 --> 00:53:12,160
lessons into account when we worked on

1260
00:53:12,160 --> 00:53:12,960
quick

1261
00:53:12,960 --> 00:53:14,640
and so it's it's played a significant

1262
00:53:14,640 --> 00:53:15,680
role that experience has played a

1263
00:53:15,680 --> 00:53:17,520
significant role in where we've come

1264
00:53:17,520 --> 00:53:18,400
today

1265
00:53:18,400 --> 00:53:20,640
um

1266
00:53:20,960 --> 00:53:23,920
going forward i would suggest again back

1267
00:53:23,920 --> 00:53:26,559
to something that lars mentioned earlier

1268
00:53:26,559 --> 00:53:28,240
that it would be really useful to

1269
00:53:28,240 --> 00:53:30,000
understand

1270
00:53:30,000 --> 00:53:30,960
the

1271
00:53:30,960 --> 00:53:33,520
cases where sctp needs to be developed

1272
00:53:33,520 --> 00:53:36,640
in the places where sctp is used

1273
00:53:36,640 --> 00:53:38,879
um

1274
00:53:39,040 --> 00:53:40,800
we can talk about features in general

1275
00:53:40,800 --> 00:53:42,160
but i think it's much more interesting

1276
00:53:42,160 --> 00:53:44,880
to talk about the features so uh claudia

1277
00:53:44,880 --> 00:53:46,559
mentioned that sctp is going to be in

1278
00:53:46,559 --> 00:53:48,400
the rank for a long time and i

1279
00:53:48,400 --> 00:53:49,680
appreciate that

1280
00:53:49,680 --> 00:53:50,559
but

1281
00:53:50,559 --> 00:53:52,240
use of the protocol doesn't necessarily

1282
00:53:52,240 --> 00:53:54,319
mean that we need to keep developing it

1283
00:53:54,319 --> 00:53:56,960
in ways that the current use cases don't

1284
00:53:56,960 --> 00:53:59,520
need it to be developed so

1285
00:53:59,520 --> 00:54:02,400
i would suggest that going forward it'd

1286
00:54:02,400 --> 00:54:05,280
be really useful to understand

1287
00:54:05,280 --> 00:54:07,359
uh for any extensions or any work that

1288
00:54:07,359 --> 00:54:08,720
we need to do

1289
00:54:08,720 --> 00:54:11,440
who exactly is going to be using it

1290
00:54:11,440 --> 00:54:14,160
and that should also give you a pool of

1291
00:54:14,160 --> 00:54:17,599
people to review and to do the work on

1292
00:54:17,599 --> 00:54:19,839
future extensions

1293
00:54:19,839 --> 00:54:23,119
that's just a high order point

1294
00:54:23,520 --> 00:54:25,359
i i think jonah that's a very valid

1295
00:54:25,359 --> 00:54:26,960
point i think uh

1296
00:54:26,960 --> 00:54:28,160
this is this is something called

1297
00:54:28,160 --> 00:54:30,000
maintenance and developing new features

1298
00:54:30,000 --> 00:54:30,960
i mean

1299
00:54:30,960 --> 00:54:33,119
so uh in the maintenance part we can we

1300
00:54:33,119 --> 00:54:35,920
can have the protocol there

1301
00:54:35,920 --> 00:54:38,400
but uh we cannot forget about it right

1302
00:54:38,400 --> 00:54:40,160
so that's just one of the point products

1303
00:54:40,160 --> 00:54:42,640
here we're trying to make uh

1304
00:54:42,640 --> 00:54:44,720
but yeah when you are talking about

1305
00:54:44,720 --> 00:54:46,799
extensions and making some new

1306
00:54:46,799 --> 00:54:48,640
development uh for the particular

1307
00:54:48,640 --> 00:54:51,359
protocol um not only but acidity but

1308
00:54:51,359 --> 00:54:53,359
whatever we need to think about who is

1309
00:54:53,359 --> 00:54:54,880
the user so that's a very valid point

1310
00:54:54,880 --> 00:54:57,200
thank you

1311
00:54:57,599 --> 00:55:00,000
hello

1312
00:55:00,240 --> 00:55:02,960
so i was a little bit strived seeing uh

1313
00:55:02,960 --> 00:55:04,839
the point

1314
00:55:04,839 --> 00:55:08,480
of lacking cloud support for sctp and

1315
00:55:08,480 --> 00:55:10,640
especially kubernetes there

1316
00:55:10,640 --> 00:55:12,480
and uh

1317
00:55:12,480 --> 00:55:15,119
this reminded me of something i've been

1318
00:55:15,119 --> 00:55:17,920
looking to a lot in the last years and

1319
00:55:17,920 --> 00:55:20,400
this is mainly how transport and

1320
00:55:20,400 --> 00:55:22,000
kubernetes works

1321
00:55:22,000 --> 00:55:24,160
and it looks like we really have a some

1322
00:55:24,160 --> 00:55:26,240
kind of disconnect from the http

1323
00:55:26,240 --> 00:55:27,760
dominated

1324
00:55:27,760 --> 00:55:29,119
world how

1325
00:55:29,119 --> 00:55:31,119
people are doing network transport in

1326
00:55:31,119 --> 00:55:33,839
kubernetes and how the transport area

1327
00:55:33,839 --> 00:55:36,880
and the iitf perceives transport and i

1328
00:55:36,880 --> 00:55:38,480
think this is really

1329
00:55:38,480 --> 00:55:41,119
some point we should look into

1330
00:55:41,119 --> 00:55:42,240
um

1331
00:55:42,240 --> 00:55:45,200
also how slightly different the ideas of

1332
00:55:45,200 --> 00:55:47,520
transport are

1333
00:55:47,520 --> 00:55:50,799
and i think this also explains a lot why

1334
00:55:50,799 --> 00:55:53,440
we have problems or why the sctp

1335
00:55:53,440 --> 00:55:55,119
community seems to have problems with

1336
00:55:55,119 --> 00:55:56,960
kubernetes so far because

1337
00:55:56,960 --> 00:56:00,559
they uh kubernetes has a very specific

1338
00:56:00,559 --> 00:56:03,280
idea what transport is it how it works

1339
00:56:03,280 --> 00:56:05,680
and this is really centered on

1340
00:56:05,680 --> 00:56:09,200
rest and http and not so much about what

1341
00:56:09,200 --> 00:56:10,640
usually

1342
00:56:10,640 --> 00:56:15,400
transport people at the itf care about

1343
00:56:18,160 --> 00:56:20,079
michael

1344
00:56:20,079 --> 00:56:23,200
yeah i just want to second what jannah

1345
00:56:23,200 --> 00:56:26,160
said and in addition to that uh that's

1346
00:56:26,160 --> 00:56:27,760
something we do for

1347
00:56:27,760 --> 00:56:29,359
several years so

1348
00:56:29,359 --> 00:56:31,280
none of the

1349
00:56:31,280 --> 00:56:32,640
recent

1350
00:56:32,640 --> 00:56:37,040
sctp developments meaning the features

1351
00:56:37,040 --> 00:56:38,880
were done without

1352
00:56:38,880 --> 00:56:41,440
some some other entity requesting that

1353
00:56:41,440 --> 00:56:44,559
feature some other entity might be

1354
00:56:44,559 --> 00:56:47,839
another working group of the ietf or so

1355
00:56:47,839 --> 00:56:49,440
um so

1356
00:56:49,440 --> 00:56:51,839
this is something we do for i don't know

1357
00:56:51,839 --> 00:56:55,720
five or ten years now

1358
00:57:00,960 --> 00:57:02,960
all right any other open mic comments at

1359
00:57:02,960 --> 00:57:06,000
all about anything

1360
00:57:08,079 --> 00:57:09,520
okay four minutes ahead of schedule

1361
00:57:09,520 --> 00:57:11,200
great um

1362
00:57:11,200 --> 00:57:12,880
thank you for coming uh thank you for

1363
00:57:12,880 --> 00:57:15,359
everything you do for transport and uh

1364
00:57:15,359 --> 00:57:18,000
have a good rest of your itf

1365
00:57:18,000 --> 00:57:21,160
thank you

1366
00:57:32,240 --> 00:57:34,960
so what happened with this slide thing

1367
00:57:34,960 --> 00:57:36,160
i have no idea i mean the slides are

1368
00:57:36,160 --> 00:57:37,119
uploaded

1369
00:57:37,119 --> 00:57:41,040
i mean maybe maybe we need to manually

1370
00:57:43,040 --> 00:57:44,400
oh is there some button you're supposed

1371
00:57:44,400 --> 00:57:45,920
to press it could be you're supposed to

1372
00:57:45,920 --> 00:57:48,559
press a button

1373
00:57:49,280 --> 00:57:52,280
here

1374
00:57:55,280 --> 00:57:57,200
no it's just introductory slides that's

1375
00:57:57,200 --> 00:57:58,480
just

1376
00:57:58,480 --> 00:58:00,319
like free

1377
00:58:00,319 --> 00:58:02,960
chair slides

1378
00:58:05,520 --> 00:58:09,119
i thought they were automatically

1379
00:58:16,880 --> 00:58:18,880
yeah

1380
00:58:18,880 --> 00:58:23,240
it's there i don't know what the issue

1381
00:58:34,960 --> 00:58:37,839
mean a lot of people don't care

1382
00:59:00,240 --> 00:59:04,040
oh yeah we didn't mention that

1383
00:59:09,150 --> 00:59:11,119
[Music]

1384
00:59:11,119 --> 00:59:13,520
so maybe maybe we should do that because

1385
00:59:13,520 --> 00:59:14,400
i mean

1386
00:59:14,400 --> 00:59:19,319
it only stays like yeah it can be

1387
00:59:28,079 --> 00:59:32,040
don't know how this works okay

1388
00:59:45,040 --> 00:59:47,200
80 people on the meet echo so that goes

1389
00:59:47,200 --> 00:59:49,200
into the blue sheets yeah yeah but so

1390
00:59:49,200 --> 00:59:51,920
those 80 people were like actually

1391
00:59:51,920 --> 00:59:53,520
and then there were some java clients as

1392
00:59:53,520 --> 00:59:56,520
well

1393
01:00:25,920 --> 01:00:29,160
was a mistake

1394
01:00:35,440 --> 01:00:38,240
then everybody has to log in and then

1395
01:00:38,240 --> 01:00:42,118
but like all the chats

1396
01:00:48,240 --> 01:00:51,240
um

1397
01:01:33,359 --> 01:01:35,760
it was a pretty good talk

1398
01:01:35,760 --> 01:01:36,839
i mean

1399
01:01:36,839 --> 01:01:41,599
yeah claudio's tech is terrible but like

1400
01:01:41,599 --> 01:01:44,720
i didn't get it like

1401
01:01:44,720 --> 01:01:47,680
i kind of realized like

1402
01:01:48,079 --> 01:01:50,319
how how does like

1403
01:01:50,319 --> 01:01:52,640
how can someone have that kind of remote

1404
01:01:52,640 --> 01:01:54,400
technology problem

1405
01:01:54,400 --> 01:01:56,240
at this point in 2022 that's why i don't

1406
01:01:56,240 --> 01:01:57,440
understand how can someone have like a

1407
01:01:57,440 --> 01:01:59,200
headset i can't send and receive at the

1408
01:01:59,200 --> 01:02:02,439
same time

1409
01:02:20,799 --> 01:02:23,799
um

