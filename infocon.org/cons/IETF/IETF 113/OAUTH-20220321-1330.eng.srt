1
00:00:07,440 --> 00:00:10,440
excellent

2
00:00:40,960 --> 00:00:45,559
hi everyone uh let's get started

3
00:00:47,600 --> 00:00:49,120
no that's fine

4
00:00:49,120 --> 00:00:51,919
there's nobody here

5
00:00:54,480 --> 00:00:56,079
okay

6
00:00:56,079 --> 00:00:59,079
perfect

7
00:00:59,120 --> 00:01:00,239
good

8
00:01:00,239 --> 00:01:04,720
okay uh let's quickly wave at the remote

9
00:01:04,720 --> 00:01:06,880
participants they can all see us that's

10
00:01:06,880 --> 00:01:09,680
excellent wave over there so roman can

11
00:01:09,680 --> 00:01:11,680
you see us roman

12
00:01:11,680 --> 00:01:13,040
folks are

13
00:01:13,040 --> 00:01:14,400
perfect

14
00:01:14,400 --> 00:01:16,320
i i can see you it's not some kind of

15
00:01:16,320 --> 00:01:17,520
deep speak

16
00:01:17,520 --> 00:01:19,439
good

17
00:01:19,439 --> 00:01:21,920
good okay

18
00:01:21,920 --> 00:01:24,920
okay

19
00:01:26,159 --> 00:01:29,040
welcome everyone um

20
00:01:29,040 --> 00:01:33,439
great to see you um in person finally um

21
00:01:33,439 --> 00:01:36,640
lots of uh familiar faces

22
00:01:36,640 --> 00:01:39,680
some new faces too which is great

23
00:01:39,680 --> 00:01:42,320
and um hopefully this is just a

24
00:01:42,320 --> 00:01:43,840
beginning of uh

25
00:01:43,840 --> 00:01:45,520
better days hopefully

26
00:01:45,520 --> 00:01:48,000
more more face-to-face meetings so

27
00:01:48,000 --> 00:01:50,479
welcome to that oauth working group

28
00:01:50,479 --> 00:01:54,520
and let's get going

29
00:01:54,640 --> 00:01:58,159
uh this is not not well so um if you're

30
00:01:58,159 --> 00:01:59,759
not familiar with this

31
00:01:59,759 --> 00:02:02,000
especially for those new faces here

32
00:02:02,000 --> 00:02:03,439
please make sure

33
00:02:03,439 --> 00:02:05,840
to get familiar with this this

34
00:02:05,840 --> 00:02:08,000
governs everything that we do at the

35
00:02:08,000 --> 00:02:09,280
ietf

36
00:02:09,280 --> 00:02:12,319
and it's important that you may know

37
00:02:12,319 --> 00:02:14,640
this stuff right so

38
00:02:14,640 --> 00:02:16,480
take your time and and

39
00:02:16,480 --> 00:02:17,520
spend

40
00:02:17,520 --> 00:02:21,720
some time looking at this

41
00:02:22,239 --> 00:02:23,680
um

42
00:02:23,680 --> 00:02:25,680
again because this is our first time

43
00:02:25,680 --> 00:02:29,040
doing um kind of a hybrid model a type

44
00:02:29,040 --> 00:02:30,239
of um

45
00:02:30,239 --> 00:02:31,760
um

46
00:02:31,760 --> 00:02:34,000
conference so

47
00:02:34,000 --> 00:02:38,000
if you are in person um make sure that

48
00:02:38,000 --> 00:02:38,879
use

49
00:02:38,879 --> 00:02:40,879
you use a meet echo

50
00:02:40,879 --> 00:02:44,080
um and this is the on-site tool please

51
00:02:44,080 --> 00:02:45,680
so um

52
00:02:45,680 --> 00:02:47,920
and um you will use that to join the

53
00:02:47,920 --> 00:02:51,519
queue even if you are in person here

54
00:02:51,519 --> 00:02:52,480
um

55
00:02:52,480 --> 00:02:53,280
and

56
00:02:53,280 --> 00:02:55,440
you keep the audio and video obvious

57
00:02:55,440 --> 00:02:57,360
obviously off

58
00:02:57,360 --> 00:03:00,400
and for remote participants again you

59
00:03:00,400 --> 00:03:01,440
can

60
00:03:01,440 --> 00:03:03,920
make sure that audio and video are off

61
00:03:03,920 --> 00:03:06,000
unless you wanna

62
00:03:06,000 --> 00:03:09,440
present or um or say something

63
00:03:09,440 --> 00:03:12,159
and we highly encourage you that to you

64
00:03:12,159 --> 00:03:15,679
to use a a headset

65
00:03:16,720 --> 00:03:18,959
so now we have um

66
00:03:18,959 --> 00:03:22,080
a few sessions uh so this this our first

67
00:03:22,080 --> 00:03:23,760
session for this week

68
00:03:23,760 --> 00:03:27,040
a another the other official session is

69
00:03:27,040 --> 00:03:30,480
on thursday at the same time

70
00:03:30,480 --> 00:03:34,400
we have also two um side meetings um one

71
00:03:34,400 --> 00:03:36,959
on tuesday tomorrow at two

72
00:03:36,959 --> 00:03:39,599
and one on wednesday at six

73
00:03:39,599 --> 00:03:40,720
pm

74
00:03:40,720 --> 00:03:43,519
um everyone is welcome to attend um

75
00:03:43,519 --> 00:03:45,840
again it's it's public

76
00:03:45,840 --> 00:03:48,480
meetings so anyone um can attend those

77
00:03:48,480 --> 00:03:50,640
too

78
00:03:52,720 --> 00:03:56,799
a quick work group updates first um

79
00:03:56,799 --> 00:04:00,080
rfc 9207 was published uh

80
00:04:00,080 --> 00:04:04,400
congratulations to danielle um and um

81
00:04:04,400 --> 00:04:07,040
i think creston i don't think he's here

82
00:04:07,040 --> 00:04:08,480
right

83
00:04:08,480 --> 00:04:11,439
congratulations uh guys and thanks for

84
00:04:11,439 --> 00:04:12,879
everyone who contributed to that

85
00:04:12,879 --> 00:04:14,720
document and reviewed and provide

86
00:04:14,720 --> 00:04:16,000
feedback so

87
00:04:16,000 --> 00:04:17,918
awesome work thank you

88
00:04:17,918 --> 00:04:21,519
a rfc edit queue we have a one

89
00:04:21,519 --> 00:04:24,560
jot response for or tokens introspection

90
00:04:24,560 --> 00:04:26,560
um i think

91
00:04:26,560 --> 00:04:28,000
we're just waiting for this to go

92
00:04:28,000 --> 00:04:28,880
through

93
00:04:28,880 --> 00:04:31,040
we can't do much about this

94
00:04:31,040 --> 00:04:33,840
a worker consensus we have um

95
00:04:33,840 --> 00:04:36,160
the first one is

96
00:04:36,160 --> 00:04:36,960
a

97
00:04:36,960 --> 00:04:39,280
christina's and mike's document

98
00:04:39,280 --> 00:04:41,759
is a simple document we're

99
00:04:41,759 --> 00:04:43,759
progressed very very well

100
00:04:43,759 --> 00:04:45,759
very quickly so

101
00:04:45,759 --> 00:04:47,600
we have consensus on this one and we

102
00:04:47,600 --> 00:04:48,960
will

103
00:04:48,960 --> 00:04:52,638
make progress on this one soon

104
00:04:52,800 --> 00:04:55,680
the security bcp has been languishing

105
00:04:55,680 --> 00:04:57,919
for a long time and you can blame the

106
00:04:57,919 --> 00:05:00,080
chairs for this so

107
00:05:00,080 --> 00:05:02,080
we started doing more work around this

108
00:05:02,080 --> 00:05:03,680
so

109
00:05:03,680 --> 00:05:04,720
we did

110
00:05:04,720 --> 00:05:05,840
review it

111
00:05:05,840 --> 00:05:08,479
myself and harnesses in the process of

112
00:05:08,479 --> 00:05:11,280
doing it is halfway through this

113
00:05:11,280 --> 00:05:13,039
um

114
00:05:13,039 --> 00:05:15,520
do you wanna

115
00:05:15,919 --> 00:05:17,360
okay

116
00:05:17,360 --> 00:05:19,680
we have to

117
00:05:19,680 --> 00:05:22,680
oh

118
00:05:25,600 --> 00:05:27,440
so yeah

119
00:05:27,440 --> 00:05:31,039
now i'm filled uh so harness is halfway

120
00:05:31,039 --> 00:05:33,280
through this document but hopefully we

121
00:05:33,280 --> 00:05:35,120
will make progress on this one

122
00:05:35,120 --> 00:05:36,560
soon

123
00:05:36,560 --> 00:05:37,600
eh

124
00:05:37,600 --> 00:05:40,160
on the right document we kind of drop

125
00:05:40,160 --> 00:05:42,240
the ball in this one and we will pick it

126
00:05:42,240 --> 00:05:45,199
up pretty soon so um we will start

127
00:05:45,199 --> 00:05:48,240
working on this one too

128
00:05:49,520 --> 00:05:51,120
thanks daniel for

129
00:05:51,120 --> 00:05:52,720
doing an update of the document

130
00:05:52,720 --> 00:05:55,199
following the previews that we did

131
00:05:55,199 --> 00:05:57,039
so the next step is the shepherd write

132
00:05:57,039 --> 00:05:58,720
up

133
00:05:58,720 --> 00:06:01,600
the ipr

134
00:06:02,000 --> 00:06:03,199
i think

135
00:06:03,199 --> 00:06:05,120
so if i correctly memorize it for the

136
00:06:05,120 --> 00:06:08,080
raw document yeah no

137
00:06:08,080 --> 00:06:10,479
it was thorsten you're right okay not

138
00:06:10,479 --> 00:06:12,960
daniel

139
00:06:12,960 --> 00:06:14,880
okay that's fine but it's the same

140
00:06:14,880 --> 00:06:17,360
status

141
00:06:19,280 --> 00:06:20,720
thanks to austin i don't know if he's

142
00:06:20,720 --> 00:06:21,759
online

143
00:06:21,759 --> 00:06:24,639
i didn't see him

144
00:06:24,880 --> 00:06:28,000
okay um so that's the update that we

145
00:06:28,000 --> 00:06:29,520
have any any questions any comments

146
00:06:29,520 --> 00:06:31,919
about this

147
00:06:32,639 --> 00:06:34,960
okay

148
00:06:34,960 --> 00:06:37,520
hey so here is our agenda beside the

149
00:06:37,520 --> 00:06:40,880
chairs update um mike uh sorry brian

150
00:06:40,880 --> 00:06:43,680
will start oh go ahead um mike so all

151
00:06:43,680 --> 00:06:45,919
the last three

152
00:06:45,919 --> 00:06:48,560
this is mike jones from microsoft all

153
00:06:48,560 --> 00:06:50,400
the last three documents are awaiting

154
00:06:50,400 --> 00:06:54,000
shepard reviews yes okay

155
00:06:55,199 --> 00:07:00,800
so um brian will start with uh d-pop um

156
00:07:00,800 --> 00:07:02,880
after that um i'll be talking about

157
00:07:02,880 --> 00:07:04,800
three direction attacks

158
00:07:04,800 --> 00:07:07,440
and aaron will will finish with the

159
00:07:07,440 --> 00:07:09,440
oauth 2.1

160
00:07:09,440 --> 00:07:11,280
so that's for today

161
00:07:11,280 --> 00:07:14,160
and for thursday we have a device flow

162
00:07:14,160 --> 00:07:17,280
um and peter we'll talk about this

163
00:07:17,280 --> 00:07:18,319
um

164
00:07:18,319 --> 00:07:20,000
victoria will talk about step up

165
00:07:20,000 --> 00:07:22,000
authentication uh

166
00:07:22,000 --> 00:07:23,840
um brian will be

167
00:07:23,840 --> 00:07:26,080
in supporting role

168
00:07:26,080 --> 00:07:28,160
and daniel will

169
00:07:28,160 --> 00:07:30,560
be talking about libraries there on on

170
00:07:30,560 --> 00:07:32,720
thursday so yeah i have lots of

171
00:07:32,720 --> 00:07:36,160
interesting stuff to to to discuss

172
00:07:36,160 --> 00:07:40,400
um any questions or comments

173
00:07:40,720 --> 00:07:43,440
suggestions

174
00:07:43,599 --> 00:07:47,199
personal attacks on the chairs

175
00:07:49,199 --> 00:07:53,400
okay get brian

176
00:08:00,400 --> 00:08:01,680
okay um

177
00:08:01,680 --> 00:08:04,000
are you gonna have i don't know how to

178
00:08:04,000 --> 00:08:05,199
do that hold on i don't know how to do

179
00:08:05,199 --> 00:08:07,440
this either do you want to advance or

180
00:08:07,440 --> 00:08:08,720
i think you have to

181
00:08:08,720 --> 00:08:10,960
choose the fan stuff yeah yeah like he

182
00:08:10,960 --> 00:08:13,440
wanted to control it from his

183
00:08:13,440 --> 00:08:16,319
okay then let's let's let's just yeah

184
00:08:16,319 --> 00:08:17,680
just just

185
00:08:17,680 --> 00:08:19,919
let me know and progress it

186
00:08:19,919 --> 00:08:22,160
all right very cool yep all right uh

187
00:08:22,160 --> 00:08:24,080
welcome nice to see everybody in person

188
00:08:24,080 --> 00:08:26,720
again ah here we go this is weird this

189
00:08:26,720 --> 00:08:28,960
is really weird uh so bear with me uh so

190
00:08:28,960 --> 00:08:30,879
depop oauth2 demonstrating proof of

191
00:08:30,879 --> 00:08:32,799
possession at the application layer

192
00:08:32,799 --> 00:08:35,200
uh doing a picture up here for iatf this

193
00:08:35,200 --> 00:08:36,559
is on the other side of austria though

194
00:08:36,559 --> 00:08:37,519
so

195
00:08:37,519 --> 00:08:40,799
close but not quite uh so

196
00:08:40,799 --> 00:08:43,120
sorry

197
00:08:43,599 --> 00:08:46,720
it is it is it just

198
00:08:47,680 --> 00:08:49,839
what if i speak a little louder okay i

199
00:08:49,839 --> 00:08:51,760
will try to speak louder all right next

200
00:08:51,760 --> 00:08:53,760
slide

201
00:08:53,760 --> 00:08:55,600
man this is awkward all right little

202
00:08:55,600 --> 00:08:57,279
expectation setting here i got 45

203
00:08:57,279 --> 00:08:58,720
minutes hopefully not going to use it

204
00:08:58,720 --> 00:09:00,800
all got a little jet lag so again bear

205
00:09:00,800 --> 00:09:02,240
with me um

206
00:09:02,240 --> 00:09:03,920
i'm going to do a full overview of the

207
00:09:03,920 --> 00:09:06,880
depop protocol um trying to note

208
00:09:06,880 --> 00:09:09,440
particular places explicitly where

209
00:09:09,440 --> 00:09:11,760
changes have occurred recently

210
00:09:11,760 --> 00:09:13,200
i know some of you have seen this before

211
00:09:13,200 --> 00:09:15,360
so i apologize for any repetition but i

212
00:09:15,360 --> 00:09:17,040
find it a lot easier to talk about

213
00:09:17,040 --> 00:09:18,880
things in context of the overall change

214
00:09:18,880 --> 00:09:22,760
and then i'll wrap things up

215
00:09:23,120 --> 00:09:25,920
next slide please

216
00:09:26,720 --> 00:09:29,519
so depop the objectives of depop really

217
00:09:29,519 --> 00:09:31,680
quickly and in general providing a

218
00:09:31,680 --> 00:09:33,680
pragmatic application level proof of

219
00:09:33,680 --> 00:09:35,760
possession mechanism for oauth 2 access

220
00:09:35,760 --> 00:09:36,720
tokens

221
00:09:36,720 --> 00:09:38,320
and refresh tokens when they're issued

222
00:09:38,320 --> 00:09:40,640
to public clients the pragmatic was a

223
00:09:40,640 --> 00:09:42,640
little bit qualified prayer it is still

224
00:09:42,640 --> 00:09:44,160
pretty pragmatic but it's maybe not as

225
00:09:44,160 --> 00:09:45,760
simple as it once was

226
00:09:45,760 --> 00:09:47,200
and it's not terribly efficient because

227
00:09:47,200 --> 00:09:48,880
it uses public key cryptography on

228
00:09:48,880 --> 00:09:51,040
basically every request but that is uh

229
00:09:51,040 --> 00:09:52,320
sort of the price of admission and where

230
00:09:52,320 --> 00:09:53,680
we've ended up with things but i wanted

231
00:09:53,680 --> 00:09:54,399
to

232
00:09:54,399 --> 00:09:55,920
point that out and just head it off

233
00:09:55,920 --> 00:09:57,680
right at the beginning

234
00:09:57,680 --> 00:10:00,560
uh next

235
00:10:00,959 --> 00:10:03,360
so it has been a while uh last time we

236
00:10:03,360 --> 00:10:04,640
were all together

237
00:10:04,640 --> 00:10:08,399
was ietf 106 in singapore um

238
00:10:08,399 --> 00:10:10,160
lots happened since that time we

239
00:10:10,160 --> 00:10:11,600
presented

240
00:10:11,600 --> 00:10:13,600
i believe was draft

241
00:10:13,600 --> 00:10:16,079
three of uh defect

242
00:10:16,079 --> 00:10:18,959
individual draft sometime later uh

243
00:10:18,959 --> 00:10:20,320
around the beginning of the following

244
00:10:20,320 --> 00:10:22,160
year got a call for adoption actually

245
00:10:22,160 --> 00:10:23,920
got it adopted we've had several drafts

246
00:10:23,920 --> 00:10:24,800
since

247
00:10:24,800 --> 00:10:26,399
uh really this was just an opportunity

248
00:10:26,399 --> 00:10:28,720
to to say hello again to everyone in

249
00:10:28,720 --> 00:10:30,240
person and throw another photo up here

250
00:10:30,240 --> 00:10:33,440
of a nice ietf city uh

251
00:10:33,440 --> 00:10:35,519
it's nice to be back this is weird but

252
00:10:35,519 --> 00:10:36,800
it's really nice to be back in front of

253
00:10:36,800 --> 00:10:38,959
everyone and see some faces inside and

254
00:10:38,959 --> 00:10:40,880
out the meetings

255
00:10:40,880 --> 00:10:42,399
but since that time

256
00:10:42,399 --> 00:10:44,399
give me the next slide we've published a

257
00:10:44,399 --> 00:10:45,600
few things

258
00:10:45,600 --> 00:10:49,040
so into the overview of d-pop in general

259
00:10:49,040 --> 00:10:50,640
d-pop is this proof-of-possession

260
00:10:50,640 --> 00:10:52,399
mechanism it's achieved by sending

261
00:10:52,399 --> 00:10:55,279
something we call a d-pop proof jwt

262
00:10:55,279 --> 00:10:57,360
is sent as an http header

263
00:10:57,360 --> 00:10:59,440
what this does is it demonstrates a

264
00:10:59,440 --> 00:11:01,200
reasonable level of proof of possession

265
00:11:01,200 --> 00:11:04,079
in the context of the given http request

266
00:11:04,079 --> 00:11:06,320
this header is sent the same way

267
00:11:06,320 --> 00:11:08,320
with mostly the same syntax and

268
00:11:08,320 --> 00:11:10,320
semantics on both requests to the token

269
00:11:10,320 --> 00:11:12,560
endpoint at the authorization server and

270
00:11:12,560 --> 00:11:14,480
on protected resource requests

271
00:11:14,480 --> 00:11:17,360
the as uses it to bind tokens that it

272
00:11:17,360 --> 00:11:19,279
issues to the the public key contained

273
00:11:19,279 --> 00:11:22,079
in the proof and the rs uses the proof

274
00:11:22,079 --> 00:11:24,560
um to verify bound tokens

275
00:11:24,560 --> 00:11:27,279
um just an example at the bottom there

276
00:11:27,279 --> 00:11:28,399
it's just a

277
00:11:28,399 --> 00:11:30,560
d-pop header and a jot

278
00:11:30,560 --> 00:11:33,600
and a fairly simple illustration of the

279
00:11:33,600 --> 00:11:35,920
token request includes the proof bound

280
00:11:35,920 --> 00:11:37,440
tokens are issued

281
00:11:37,440 --> 00:11:39,680
following that the bound tokens are used

282
00:11:39,680 --> 00:11:41,600
for resource access sent in conjunction

283
00:11:41,600 --> 00:11:43,120
with the proof and assuming that all

284
00:11:43,120 --> 00:11:45,279
validates

285
00:11:45,279 --> 00:11:46,880
access is granted

286
00:11:46,880 --> 00:11:49,360
next slide please

287
00:11:49,360 --> 00:11:51,519
sorry i'm nervous

288
00:11:51,519 --> 00:11:54,399
this is strange

289
00:11:55,279 --> 00:11:57,519
the general anatomy of a deep prop proof

290
00:11:57,519 --> 00:11:59,680
here's the jot exploded they're

291
00:11:59,680 --> 00:12:01,600
explicitly typed because that's one of

292
00:12:01,600 --> 00:12:03,839
the best practices these days uh d-pop

293
00:12:03,839 --> 00:12:07,120
plus jot using that structured um

294
00:12:07,120 --> 00:12:09,760
structured suffix syntax um

295
00:12:09,760 --> 00:12:12,800
we the ad part of the normal job there

296
00:12:12,800 --> 00:12:15,200
we only it only supports uh asymmetric

297
00:12:15,200 --> 00:12:16,800
signatures part of just the way that it

298
00:12:16,800 --> 00:12:18,480
works because these keys are sort of

299
00:12:18,480 --> 00:12:20,480
established almost like on a trust on

300
00:12:20,480 --> 00:12:23,120
first use basis you present the key and

301
00:12:23,120 --> 00:12:25,920
proof that you control the associated

302
00:12:25,920 --> 00:12:27,120
private key

303
00:12:27,120 --> 00:12:28,480
um so it only really works with

304
00:12:28,480 --> 00:12:30,800
asymmetric signatures the actual key

305
00:12:30,800 --> 00:12:34,000
itself has included the jwk header um

306
00:12:34,000 --> 00:12:36,079
and this is the key both the signature

307
00:12:36,079 --> 00:12:38,560
over this jot will verify from and that

308
00:12:38,560 --> 00:12:40,320
including the content of the jaw and the

309
00:12:40,320 --> 00:12:42,480
request is what proves possession of the

310
00:12:42,480 --> 00:12:44,880
associated private key

311
00:12:44,880 --> 00:12:46,160
um

312
00:12:46,160 --> 00:12:48,639
we've got a jti just for a unique

313
00:12:48,639 --> 00:12:51,040
identifier for following replay

314
00:12:51,040 --> 00:12:53,120
some minimal information about the http

315
00:12:53,120 --> 00:12:54,720
request this is what binds it to the

316
00:12:54,720 --> 00:12:56,720
request it's not a an integrity

317
00:12:56,720 --> 00:12:58,399
mechanism over the whole request or

318
00:12:58,399 --> 00:12:59,680
anything like that

319
00:12:59,680 --> 00:13:01,519
it's a it's a minimal amount of http

320
00:13:01,519 --> 00:13:03,680
information that just associates with

321
00:13:03,680 --> 00:13:05,600
this proof with that particular request

322
00:13:05,600 --> 00:13:07,279
or a subset of information about that

323
00:13:07,279 --> 00:13:08,959
request

324
00:13:08,959 --> 00:13:11,360
there's an iat an issue that time

325
00:13:11,360 --> 00:13:13,440
and these proofs are then only accepted

326
00:13:13,440 --> 00:13:16,320
for a reasonable window around the iit

327
00:13:16,320 --> 00:13:17,920
when receiving it

328
00:13:17,920 --> 00:13:19,200
in

329
00:13:19,200 --> 00:13:21,200
oh three draft of three we introduced a

330
00:13:21,200 --> 00:13:23,120
hash of the access token that's included

331
00:13:23,120 --> 00:13:26,079
there only on protected resource access

332
00:13:26,079 --> 00:13:28,720
in draft 04 we introduced the server

333
00:13:28,720 --> 00:13:30,639
provided nonce so if the server

334
00:13:30,639 --> 00:13:31,760
challenges

335
00:13:31,760 --> 00:13:33,600
with the nonce the client has to follow

336
00:13:33,600 --> 00:13:35,279
up by including the nonce and a claim in

337
00:13:35,279 --> 00:13:36,639
the proof

338
00:13:36,639 --> 00:13:38,160
um

339
00:13:38,160 --> 00:13:41,360
what did i miss something

340
00:13:41,920 --> 00:13:43,839
i think we got it all there

341
00:13:43,839 --> 00:13:45,839
next slide please

342
00:13:45,839 --> 00:13:47,760
so an access token request when actually

343
00:13:47,760 --> 00:13:49,680
uh requesting tokens it's a normal

344
00:13:49,680 --> 00:13:51,680
request of the token endpoint at the

345
00:13:51,680 --> 00:13:54,079
authorization server but a depop proof

346
00:13:54,079 --> 00:13:56,560
header is included in the request

347
00:13:56,560 --> 00:13:58,639
shown here in purple it's just a jot as

348
00:13:58,639 --> 00:13:59,760
a header

349
00:13:59,760 --> 00:14:01,519
um you'll see otherwise this is a normal

350
00:14:01,519 --> 00:14:03,920
authorization code um

351
00:14:03,920 --> 00:14:04,959
request

352
00:14:04,959 --> 00:14:06,320
next i don't know what to do with my

353
00:14:06,320 --> 00:14:08,639
hands

354
00:14:08,720 --> 00:14:11,120
the access token response looks familiar

355
00:14:11,120 --> 00:14:13,680
um access token is issued normal stuff

356
00:14:13,680 --> 00:14:15,680
here refresh token but the response

357
00:14:15,680 --> 00:14:17,600
types indicates that this access token

358
00:14:17,600 --> 00:14:20,079
has been depop bound by the inclusion of

359
00:14:20,079 --> 00:14:23,199
the depop value and header

360
00:14:23,199 --> 00:14:25,360
for public clients clients that don't

361
00:14:25,360 --> 00:14:27,600
have credentials associated with this

362
00:14:27,600 --> 00:14:29,920
authorization server the refresh token

363
00:14:29,920 --> 00:14:32,320
is also bound to the uh the public key

364
00:14:32,320 --> 00:14:34,399
and the depop proof

365
00:14:34,399 --> 00:14:36,800
next slide

366
00:14:36,800 --> 00:14:38,240
uh just following up with that it looks

367
00:14:38,240 --> 00:14:39,920
the same a refresh token request is the

368
00:14:39,920 --> 00:14:41,519
same kind of thing requested the token

369
00:14:41,519 --> 00:14:43,760
endpoint normal refresh token stuff but

370
00:14:43,760 --> 00:14:46,079
the default proof um header is also

371
00:14:46,079 --> 00:14:47,360
included here

372
00:14:47,360 --> 00:14:49,040
the result of this would be since this

373
00:14:49,040 --> 00:14:51,199
is a public client there's no other

374
00:14:51,199 --> 00:14:53,519
credentials this refresh token was bound

375
00:14:53,519 --> 00:14:54,800
to that so on checking this the

376
00:14:54,800 --> 00:14:57,120
authorization server makes sure that

377
00:14:57,120 --> 00:14:59,279
the key in here matches the key to which

378
00:14:59,279 --> 00:15:00,800
this was bound and then also

379
00:15:00,800 --> 00:15:02,639
subsequently issues new access tokens

380
00:15:02,639 --> 00:15:04,240
that are that are in turn bound to this

381
00:15:04,240 --> 00:15:06,399
request or bound to the public key in

382
00:15:06,399 --> 00:15:09,040
this uh request

383
00:15:09,040 --> 00:15:11,199
next

384
00:15:11,199 --> 00:15:13,519
and what an actual depop bound access

385
00:15:13,519 --> 00:15:15,760
token looks like either for job-based

386
00:15:15,760 --> 00:15:17,920
access tokens or tokens uh that are

387
00:15:17,920 --> 00:15:19,120
introspected

388
00:15:19,120 --> 00:15:21,519
it's just the cnf claim

389
00:15:21,519 --> 00:15:23,920
um and in turn that includes

390
00:15:23,920 --> 00:15:27,040
uh a sha-256 hash

391
00:15:27,040 --> 00:15:29,600
of the jwk thumb print of the public key

392
00:15:29,600 --> 00:15:31,759
that was in the proof so basically it's

393
00:15:31,759 --> 00:15:34,079
binding this token to that public key

394
00:15:34,079 --> 00:15:35,199
through a hash of the public key

395
00:15:35,199 --> 00:15:37,680
included in the token using the cnf the

396
00:15:37,680 --> 00:15:40,560
confirmation clam syntax uh

397
00:15:40,560 --> 00:15:42,639
with a jkt

398
00:15:42,639 --> 00:15:44,800
for

399
00:15:44,880 --> 00:15:46,959
json webkey thumbprint i think was a

400
00:15:46,959 --> 00:15:48,639
little short for tried to keep it's

401
00:15:48,639 --> 00:15:51,680
relatively compact

402
00:15:52,839 --> 00:15:54,399
next

403
00:15:54,399 --> 00:15:56,560
resource requests no surprise here they

404
00:15:56,560 --> 00:15:58,560
look really fun similar as a normal

405
00:15:58,560 --> 00:15:59,519
request

406
00:15:59,519 --> 00:16:02,160
it includes the access token

407
00:16:02,160 --> 00:16:04,880
with d-pop as the scheme

408
00:16:04,880 --> 00:16:08,720
and also includes d-pop uh proof

409
00:16:08,720 --> 00:16:10,959
in the in the header

410
00:16:10,959 --> 00:16:13,519
and what this allows is this token then

411
00:16:13,519 --> 00:16:15,839
is bound to the public key in here and

412
00:16:15,839 --> 00:16:18,320
part of the validation includes then

413
00:16:18,320 --> 00:16:21,279
validating the proof signature accepted

414
00:16:21,279 --> 00:16:24,000
and then in turn validating that the

415
00:16:24,000 --> 00:16:26,480
hash associate of the public key in the

416
00:16:26,480 --> 00:16:28,399
access token matches up to the hash in

417
00:16:28,399 --> 00:16:30,480
the in um excuse me matches up to the

418
00:16:30,480 --> 00:16:32,560
public key in the proof itself

419
00:16:32,560 --> 00:16:34,240
that's a bad explanation but i hope you

420
00:16:34,240 --> 00:16:35,519
get the idea

421
00:16:35,519 --> 00:16:37,839
next

422
00:16:38,639 --> 00:16:40,880
so for protected resource access we have

423
00:16:40,880 --> 00:16:43,440
a 401 with the wa authenticate challenge

424
00:16:43,440 --> 00:16:45,759
to indicate that depop is needed

425
00:16:45,759 --> 00:16:47,440
in the case that there's a protected

426
00:16:47,440 --> 00:16:49,440
resource request without any token at

427
00:16:49,440 --> 00:16:52,720
all again it can respond with a 401 and

428
00:16:52,720 --> 00:16:55,199
depop is the scheme and here it can also

429
00:16:55,199 --> 00:16:57,839
indicate the algorithms it accepts for

430
00:16:57,839 --> 00:16:59,680
the proof itself so these are signature

431
00:16:59,680 --> 00:17:00,880
algorithms

432
00:17:00,880 --> 00:17:03,440
that are acceptable in the depop proof

433
00:17:03,440 --> 00:17:05,119
so the types of algorithms that it can

434
00:17:05,119 --> 00:17:06,400
sign

435
00:17:06,400 --> 00:17:09,600
and for um

436
00:17:10,000 --> 00:17:12,079
a request this is very similar to the

437
00:17:12,079 --> 00:17:13,599
bearer scheme but a little bit

438
00:17:13,599 --> 00:17:15,439
information additional information is

439
00:17:15,439 --> 00:17:16,839
necessary for like the signing

440
00:17:16,839 --> 00:17:19,039
algorithms a response to a protected

441
00:17:19,039 --> 00:17:20,799
resource request with an invalid token

442
00:17:20,799 --> 00:17:22,240
for whatever reason

443
00:17:22,240 --> 00:17:24,000
in this case it was invalid because the

444
00:17:24,000 --> 00:17:26,240
confirmation didn't match the public key

445
00:17:26,240 --> 00:17:28,559
in the in the proof so again it's just a

446
00:17:28,559 --> 00:17:29,760
401

447
00:17:29,760 --> 00:17:31,840
uh the dub dub

448
00:17:31,840 --> 00:17:34,879
there's something missing

449
00:17:36,480 --> 00:17:37,760
and that's how that got in the other

450
00:17:37,760 --> 00:17:38,880
spot

451
00:17:38,880 --> 00:17:42,960
copy paste anyway there would be a uh

452
00:17:42,960 --> 00:17:44,320
debuff here

453
00:17:44,320 --> 00:17:46,160
what is the scheme and then the normal

454
00:17:46,160 --> 00:17:48,000
error parameters invalid token and their

455
00:17:48,000 --> 00:17:50,000
description just saying what's wrong

456
00:17:50,000 --> 00:17:52,000
as well as the out can be specified here

457
00:17:52,000 --> 00:17:54,880
as well um and this is the abs in the

458
00:17:54,880 --> 00:17:56,480
the challenge

459
00:17:56,480 --> 00:17:58,480
are the way that the resource server is

460
00:17:58,480 --> 00:18:00,960
able to signal what proof signing

461
00:18:00,960 --> 00:18:03,039
algorithms it it accepts so that it can

462
00:18:03,039 --> 00:18:04,240
be a little bit more dynamic with the

463
00:18:04,240 --> 00:18:05,200
client

464
00:18:05,200 --> 00:18:07,840
next slide

465
00:18:08,960 --> 00:18:10,880
um so in

466
00:18:10,880 --> 00:18:13,200
draft 4 we added the option for the

467
00:18:13,200 --> 00:18:15,840
server to provide a nonce

468
00:18:15,840 --> 00:18:17,360
um that

469
00:18:17,360 --> 00:18:19,919
will the option for a server provided

470
00:18:19,919 --> 00:18:22,320
nonce to be included in the deprop proof

471
00:18:22,320 --> 00:18:24,000
while drafts five and six hopefully

472
00:18:24,000 --> 00:18:25,679
refine and clarify this in a way that

473
00:18:25,679 --> 00:18:27,840
makes it really comprehensible and

474
00:18:27,840 --> 00:18:29,520
implementable

475
00:18:29,520 --> 00:18:31,840
some examples of how this works

476
00:18:31,840 --> 00:18:34,000
is the authorization server

477
00:18:34,000 --> 00:18:35,120
errors

478
00:18:35,120 --> 00:18:38,080
provides uh this error code use depop

479
00:18:38,080 --> 00:18:39,039
nonce

480
00:18:39,039 --> 00:18:41,120
and the nonce itself is always included

481
00:18:41,120 --> 00:18:42,400
in a header

482
00:18:42,400 --> 00:18:44,559
of depop nods so basically this is just

483
00:18:44,559 --> 00:18:45,440
saying

484
00:18:45,440 --> 00:18:47,760
uh try again and include this nonce in

485
00:18:47,760 --> 00:18:49,520
that element of the proof when you send

486
00:18:49,520 --> 00:18:51,200
it it's a little bit different on a

487
00:18:51,200 --> 00:18:53,039
protected resource challenge because we

488
00:18:53,039 --> 00:18:55,919
have the www authenticate um in play

489
00:18:55,919 --> 00:18:56,960
there

490
00:18:56,960 --> 00:18:59,440
and in that case it's uh the same error

491
00:18:59,440 --> 00:19:02,240
code but delivered as a parameter on wwe

492
00:19:02,240 --> 00:19:04,160
authenticate and the nonce though is

493
00:19:04,160 --> 00:19:06,000
again delivered in the header so no

494
00:19:06,000 --> 00:19:07,919
matter where it is the nonce comes back

495
00:19:07,919 --> 00:19:09,360
as a loan header

496
00:19:09,360 --> 00:19:10,960
and that's useful particularly in the

497
00:19:10,960 --> 00:19:13,919
case that you can provide a new nonce

498
00:19:13,919 --> 00:19:16,480
even for successful requests

499
00:19:16,480 --> 00:19:18,160
which just tells the client on the next

500
00:19:18,160 --> 00:19:20,640
one use this nonce this allows a more

501
00:19:20,640 --> 00:19:22,480
efficient means of the server providing

502
00:19:22,480 --> 00:19:24,480
new nonces without constant back and

503
00:19:24,480 --> 00:19:26,000
forth the challenges that just looks

504
00:19:26,000 --> 00:19:28,320
like this whatever it is it's an okay

505
00:19:28,320 --> 00:19:30,400
but a new nonce is provided and so in

506
00:19:30,400 --> 00:19:32,400
the subsequent request the client would

507
00:19:32,400 --> 00:19:34,240
use that nonsense proof rather than

508
00:19:34,240 --> 00:19:36,320
whatever the last one it had was

509
00:19:36,320 --> 00:19:38,559
so brian this is roman i'm sorry to kind

510
00:19:38,559 --> 00:19:41,120
of cut in from the uh from the jabber

511
00:19:41,120 --> 00:19:42,799
when you it's really helpful for you to

512
00:19:42,799 --> 00:19:44,720
point to the screen but you're not by

513
00:19:44,720 --> 00:19:46,480
the microphone so some folks are having

514
00:19:46,480 --> 00:19:48,720
a hard time to hear so either reach over

515
00:19:48,720 --> 00:19:50,320
if you could or pull the mic out so you

516
00:19:50,320 --> 00:19:52,880
can travel

517
00:19:52,880 --> 00:19:54,559
i was afraid you were going to say that

518
00:19:54,559 --> 00:19:55,600
because i realized what i was doing

519
00:19:55,600 --> 00:19:58,480
right as you started talking will do

520
00:19:58,480 --> 00:19:59,760
especially since we're almost done

521
00:19:59,760 --> 00:20:01,919
thanks for the tip

522
00:20:01,919 --> 00:20:04,559
next slide

523
00:20:05,200 --> 00:20:07,600
uh some metadata uh the authorization

524
00:20:07,600 --> 00:20:09,280
server so we talked a little bit about

525
00:20:09,280 --> 00:20:11,600
how the resource server can signal the

526
00:20:11,600 --> 00:20:15,039
alg proof algorithms that it supports

527
00:20:15,039 --> 00:20:17,600
the authorization server can provide the

528
00:20:17,600 --> 00:20:19,120
algorithms it supports through the use

529
00:20:19,120 --> 00:20:21,520
of metadata it's just one new uh

530
00:20:21,520 --> 00:20:24,960
metadata um parameter depop signing out

531
00:20:24,960 --> 00:20:27,440
value supported and this just signals

532
00:20:27,440 --> 00:20:30,559
support for depop in general at the as

533
00:20:30,559 --> 00:20:32,320
uh by its presence as well as the

534
00:20:32,320 --> 00:20:34,320
particular algorithms that it supports

535
00:20:34,320 --> 00:20:36,960
it's a array of strings

536
00:20:36,960 --> 00:20:40,400
in drafts five and six

537
00:20:40,400 --> 00:20:43,200
we added uh client registration metadata

538
00:20:43,200 --> 00:20:45,280
both for client registration and for the

539
00:20:45,280 --> 00:20:47,280
general sort of model of client metadata

540
00:20:47,280 --> 00:20:49,120
is useful as a as a way of sort of

541
00:20:49,120 --> 00:20:50,799
providing a common data model for

542
00:20:50,799 --> 00:20:52,240
clients in general

543
00:20:52,240 --> 00:20:54,400
we had a depop bound access tokens and

544
00:20:54,400 --> 00:20:56,799
it's just a boolean value that indicates

545
00:20:56,799 --> 00:20:58,720
whether this client will always use

546
00:20:58,720 --> 00:21:01,520
depop or not when requesting tokens from

547
00:21:01,520 --> 00:21:03,760
the authorization server this felt like

548
00:21:03,760 --> 00:21:05,840
a fairly common switch that might be

549
00:21:05,840 --> 00:21:07,520
needed to enforce particular policy

550
00:21:07,520 --> 00:21:09,679
around one client so say this client is

551
00:21:09,679 --> 00:21:12,000
always going to use depop if it doesn't

552
00:21:12,000 --> 00:21:14,880
something's wrong and reject it

553
00:21:14,880 --> 00:21:18,159
next slide please thank you refund

554
00:21:18,159 --> 00:21:20,159
so binding an authorization code to a

555
00:21:20,159 --> 00:21:23,120
depop key in draft05 which is relatively

556
00:21:23,120 --> 00:21:24,159
recent

557
00:21:24,159 --> 00:21:27,679
the optional depop jkt authorization

558
00:21:27,679 --> 00:21:30,720
request parameter was added this is a

559
00:21:30,720 --> 00:21:32,880
parameter on the authorization request

560
00:21:32,880 --> 00:21:35,919
it's the sha 256 jbuk thumbprint of the

561
00:21:35,919 --> 00:21:38,960
proof of possession key of the depop key

562
00:21:38,960 --> 00:21:40,799
this comes in the authorization request

563
00:21:40,799 --> 00:21:43,760
the as binds the authorization code it

564
00:21:43,760 --> 00:21:46,960
issues as a result of that request after

565
00:21:46,960 --> 00:21:48,240
the whole dance

566
00:21:48,240 --> 00:21:50,480
to that thumb print and then on code

567
00:21:50,480 --> 00:21:51,679
rejection

568
00:21:51,679 --> 00:21:53,360
it checks that thumb print against the

569
00:21:53,360 --> 00:21:55,120
depop proof provided in the token

570
00:21:55,120 --> 00:21:57,520
request otherwise rejects it

571
00:21:57,520 --> 00:21:59,760
this enables a more end-to-end binding

572
00:21:59,760 --> 00:22:01,440
of the whole authorization flow to a

573
00:22:01,440 --> 00:22:04,240
particular depop key that was lacking in

574
00:22:04,240 --> 00:22:06,159
prior versions

575
00:22:06,159 --> 00:22:08,720
it can be used in conjunction with pixi

576
00:22:08,720 --> 00:22:11,679
with no changes required to pixi

577
00:22:11,679 --> 00:22:12,480
and

578
00:22:12,480 --> 00:22:14,559
when using par you have that initial

579
00:22:14,559 --> 00:22:15,919
pushed authorization request that

580
00:22:15,919 --> 00:22:18,559
provides the opportunity to bind early

581
00:22:18,559 --> 00:22:20,159
so when you're using power you can bind

582
00:22:20,159 --> 00:22:22,080
either from the depop proof

583
00:22:22,080 --> 00:22:24,159
presented in the par request itself the

584
00:22:24,159 --> 00:22:26,880
normal header presented in the header or

585
00:22:26,880 --> 00:22:29,760
in the request or can also bind using

586
00:22:29,760 --> 00:22:32,400
the same parameter depop jkt if they're

587
00:22:32,400 --> 00:22:34,640
both provided they need to be the same

588
00:22:34,640 --> 00:22:36,799
uh quick example of what that looks like

589
00:22:36,799 --> 00:22:38,400
no scary surprise but it's just an

590
00:22:38,400 --> 00:22:40,559
additional header and a get request

591
00:22:40,559 --> 00:22:42,559
that would be sent through the browser

592
00:22:42,559 --> 00:22:44,880
includes the thumbprint of the key

593
00:22:44,880 --> 00:22:47,840
by that parameter name

594
00:22:47,840 --> 00:22:49,360
next slide please

595
00:22:49,360 --> 00:22:52,639
so looking ahead

596
00:22:52,799 --> 00:22:55,919
next steps ietf 114 is scheduled to be

597
00:22:55,919 --> 00:22:57,280
in philadelphia

598
00:22:57,280 --> 00:23:00,080
uh we'll see if that happens or not but

599
00:23:00,080 --> 00:23:01,919
a couple of things that are kind of open

600
00:23:01,919 --> 00:23:03,600
right now that i'm aware of one is

601
00:23:03,600 --> 00:23:06,799
whether or not the application depop jkt

602
00:23:06,799 --> 00:23:08,640
media type registration is really

603
00:23:08,640 --> 00:23:10,799
necessary this is the pattern that's

604
00:23:10,799 --> 00:23:12,720
been followed by a number of of other

605
00:23:12,720 --> 00:23:13,919
documents

606
00:23:13,919 --> 00:23:16,480
but as i look at it

607
00:23:16,480 --> 00:23:18,640
it feels like a bit overkill to actually

608
00:23:18,640 --> 00:23:20,799
go out and register a whole new media

609
00:23:20,799 --> 00:23:22,880
type for this one type of jot that's

610
00:23:22,880 --> 00:23:24,559
only ever going to be sent in an http

611
00:23:24,559 --> 00:23:25,679
header

612
00:23:25,679 --> 00:23:26,960
so there's some words in there that kind

613
00:23:26,960 --> 00:23:28,400
of ask that question

614
00:23:28,400 --> 00:23:30,400
no one's actually answered them

615
00:23:30,400 --> 00:23:31,919
registering it's not a big deal we can

616
00:23:31,919 --> 00:23:33,520
put it in there but it just seems really

617
00:23:33,520 --> 00:23:34,799
excessive

618
00:23:34,799 --> 00:23:37,440
so i don't know if some higher ups

619
00:23:37,440 --> 00:23:39,600
chairs or ads have some advice along

620
00:23:39,600 --> 00:23:41,039
those lines i would certainly be

621
00:23:41,039 --> 00:23:42,559
interested in hearing it

622
00:23:42,559 --> 00:23:44,640
we also have six authors on the document

623
00:23:44,640 --> 00:23:46,960
which according to the rfc styled guide

624
00:23:46,960 --> 00:23:49,440
is considered excessive

625
00:23:49,440 --> 00:23:52,000
and gritty's down here um

626
00:23:52,000 --> 00:23:53,840
helping me with that statement

627
00:23:53,840 --> 00:23:55,600
so those are two sort of administrative

628
00:23:55,600 --> 00:23:57,520
problems that that i think need to be

629
00:23:57,520 --> 00:23:59,520
fixed for sure but they are basically

630
00:23:59,520 --> 00:24:00,799
just

631
00:24:00,799 --> 00:24:03,360
minor administrative issues so

632
00:24:03,360 --> 00:24:05,360
that in terms of the protocol definition

633
00:24:05,360 --> 00:24:07,440
and functionality itself i feel like

634
00:24:07,440 --> 00:24:09,039
we're approaching a place where working

635
00:24:09,039 --> 00:24:10,799
group last call is a reasonable thing to

636
00:24:10,799 --> 00:24:12,720
start considering um

637
00:24:12,720 --> 00:24:14,000
so i'll put that out there are we

638
00:24:14,000 --> 00:24:17,120
closing in on working working group last

639
00:24:17,120 --> 00:24:19,679
call

640
00:24:19,679 --> 00:24:21,360
and yes that is philadelphia and

641
00:24:21,360 --> 00:24:24,559
gritty's from philadelphia

642
00:24:25,360 --> 00:24:28,320
i thought roman was trying to join the

643
00:24:28,320 --> 00:24:29,120
um

644
00:24:29,120 --> 00:24:31,840
yeah mike if you can join the queue

645
00:24:31,840 --> 00:24:33,360
please

646
00:24:33,360 --> 00:24:34,559
roman

647
00:24:34,559 --> 00:24:35,760
jumping in to help with some of the

648
00:24:35,760 --> 00:24:37,360
administrative things

649
00:24:37,360 --> 00:24:38,880
okay go ahead please

650
00:24:38,880 --> 00:24:41,120
uh so jumping in on the middle one is

651
00:24:41,120 --> 00:24:43,520
six authors excessive for the style yes

652
00:24:43,520 --> 00:24:44,960
that is the letter of the law of the

653
00:24:44,960 --> 00:24:47,760
style guide uh if the working group

654
00:24:47,760 --> 00:24:49,840
really feels that it's important to to

655
00:24:49,840 --> 00:24:52,000
have all of those authors i will support

656
00:24:52,000 --> 00:24:54,159
them in that we just need to document

657
00:24:54,159 --> 00:24:55,440
that appropriately in the shepherd

658
00:24:55,440 --> 00:24:57,360
write-up and i will carry and support

659
00:24:57,360 --> 00:24:58,880
the group in that decision through the

660
00:24:58,880 --> 00:25:00,880
isg

661
00:25:00,880 --> 00:25:02,559
do you think that's possible roman the

662
00:25:02,559 --> 00:25:05,840
the style guide was was very um

663
00:25:05,840 --> 00:25:07,679
harsh about it so i was assuming we

664
00:25:07,679 --> 00:25:09,440
would need to cut down but if you think

665
00:25:09,440 --> 00:25:10,640
it's something we can push through with

666
00:25:10,640 --> 00:25:12,000
a little bit of explanation that would

667
00:25:12,000 --> 00:25:13,440
be great

668
00:25:13,440 --> 00:25:14,559
yeah i mean

669
00:25:14,559 --> 00:25:15,919
we could talk about this offline but

670
00:25:15,919 --> 00:25:17,600
it's my understanding that all the

671
00:25:17,600 --> 00:25:19,200
authors there have very much kind of

672
00:25:19,200 --> 00:25:21,279
contributed there and there's a

673
00:25:21,279 --> 00:25:23,279
very tight story as to

674
00:25:23,279 --> 00:25:25,440
why we why we have that list and that

675
00:25:25,440 --> 00:25:26,640
seems important to the working group

676
00:25:26,640 --> 00:25:28,080
unless someone kind of disagrees with me

677
00:25:28,080 --> 00:25:29,760
so i will help through the process to

678
00:25:29,760 --> 00:25:31,760
make sure that the document stays as it

679
00:25:31,760 --> 00:25:33,360
is with that author

680
00:25:33,360 --> 00:25:36,240
wonderful thank you

681
00:25:39,120 --> 00:25:40,880
mike

682
00:25:40,880 --> 00:25:43,039
did you join the uh the queue

683
00:25:43,039 --> 00:25:45,039
i i did you can see it on the yellow

684
00:25:45,039 --> 00:25:47,520
screen there good it's a beautiful thing

685
00:25:47,520 --> 00:25:48,480
nice

686
00:25:48,480 --> 00:25:53,120
um this is mike jones from microsoft um

687
00:25:53,120 --> 00:25:56,880
my memory of the description of the jot

688
00:25:56,880 --> 00:25:59,679
type claim

689
00:25:59,679 --> 00:26:01,440
is that

690
00:26:01,440 --> 00:26:03,840
those are intended to be

691
00:26:03,840 --> 00:26:05,679
media types

692
00:26:05,679 --> 00:26:08,320
with a special syntax

693
00:26:08,320 --> 00:26:10,640
edition that you're allowed to leave off

694
00:26:10,640 --> 00:26:12,960
application slash

695
00:26:12,960 --> 00:26:14,159
but

696
00:26:14,159 --> 00:26:15,760
for my earlier statement those are

697
00:26:15,760 --> 00:26:18,159
supposed to be media types media types

698
00:26:18,159 --> 00:26:20,640
are things registered in the iana media

699
00:26:20,640 --> 00:26:22,240
type registry

700
00:26:22,240 --> 00:26:23,919
therefore i think we should just

701
00:26:23,919 --> 00:26:26,320
register it even if it's never used as a

702
00:26:26,320 --> 00:26:27,840
media type

703
00:26:27,840 --> 00:26:30,080
per se that field

704
00:26:30,080 --> 00:26:33,200
is for media types

705
00:26:33,200 --> 00:26:35,360
your memory i believe is correct i think

706
00:26:35,360 --> 00:26:37,200
that's right it's just every time i sit

707
00:26:37,200 --> 00:26:39,600
down to do it it seems kind of crazy but

708
00:26:39,600 --> 00:26:41,279
maybe we should just go ahead there's

709
00:26:41,279 --> 00:26:43,039
also a structured

710
00:26:43,039 --> 00:26:47,440
suffix for plus jwt registered

711
00:26:47,440 --> 00:26:48,320
um

712
00:26:48,320 --> 00:26:50,400
but i suppose that it's i wanted to

713
00:26:50,400 --> 00:26:52,640
think about that sort of as like a wild

714
00:26:52,640 --> 00:26:54,240
card for you could just go ahead and use

715
00:26:54,240 --> 00:26:56,159
this as a media type but

716
00:26:56,159 --> 00:26:57,919
it sounds like from what you're saying

717
00:26:57,919 --> 00:26:59,679
we should just go ahead and

718
00:26:59,679 --> 00:27:01,360
bite the bullet and do the registration

719
00:27:01,360 --> 00:27:03,039
right the structured suffix was

720
00:27:03,039 --> 00:27:05,600
registered by a different rfc

721
00:27:05,600 --> 00:27:08,960
and is already in the iana registries

722
00:27:08,960 --> 00:27:10,080
and

723
00:27:10,080 --> 00:27:11,679
i couldn't remember whether we've done

724
00:27:11,679 --> 00:27:13,600
the registration or not

725
00:27:13,600 --> 00:27:15,600
if we've not i will create a pull

726
00:27:15,600 --> 00:27:18,399
request while we sit here if i get bored

727
00:27:18,399 --> 00:27:20,399
we have not done it there's some

728
00:27:20,399 --> 00:27:22,000
some rambling words to the effect of

729
00:27:22,000 --> 00:27:23,760
what i just said in the area where it

730
00:27:23,760 --> 00:27:25,919
would be so pr pending

731
00:27:25,919 --> 00:27:28,080
wonderful thank you

732
00:27:28,080 --> 00:27:31,639
okay so has

733
00:27:37,840 --> 00:27:39,919
yeah yes we can

734
00:27:39,919 --> 00:27:42,000
hi um i i

735
00:27:42,000 --> 00:27:43,679
on the registration i would say we

736
00:27:43,679 --> 00:27:45,200
should go ahead and do it

737
00:27:45,200 --> 00:27:47,120
on the working group last call

738
00:27:47,120 --> 00:27:49,679
i would support uh to go go to the last

739
00:27:49,679 --> 00:27:52,960
call uh within cisco uh we are planning

740
00:27:52,960 --> 00:27:55,039
to use uh this

741
00:27:55,039 --> 00:27:57,919
kind of this this solution for webex uh

742
00:27:57,919 --> 00:28:00,320
in order to mitigate theft risk for the

743
00:28:00,320 --> 00:28:02,480
tokens we use for internal services

744
00:28:02,480 --> 00:28:03,919
and we've been following this draft

745
00:28:03,919 --> 00:28:06,080
pretty closely and the refinements uh in

746
00:28:06,080 --> 00:28:07,520
the five and six and

747
00:28:07,520 --> 00:28:10,240
over has been uh

748
00:28:10,240 --> 00:28:11,600
at the point where the returns are

749
00:28:11,600 --> 00:28:13,840
dimension diminishing um i think it's

750
00:28:13,840 --> 00:28:16,480
good enough i i we think we should go

751
00:28:16,480 --> 00:28:18,080
ahead with the last last call for this

752
00:28:18,080 --> 00:28:20,399
draft

753
00:28:21,120 --> 00:28:22,720
okay thank you

754
00:28:22,720 --> 00:28:24,880
anybody else

755
00:28:24,880 --> 00:28:27,520
put your hand down

756
00:28:28,840 --> 00:28:32,640
yeah okay so um do you wanna maybe then

757
00:28:32,640 --> 00:28:34,799
kind of update the the document based on

758
00:28:34,799 --> 00:28:36,559
that discussion with mike and

759
00:28:36,559 --> 00:28:38,559
and then we can probably start our group

760
00:28:38,559 --> 00:28:40,000
last call okay

761
00:28:40,000 --> 00:28:41,279
okay awesome

762
00:28:41,279 --> 00:28:44,480
anything else

763
00:28:44,480 --> 00:28:46,399
thank you

764
00:28:46,399 --> 00:28:49,760
thank you thank you all

765
00:28:51,200 --> 00:28:54,520
there you go

766
00:29:01,120 --> 00:29:04,120
okay

767
00:29:27,919 --> 00:29:29,600
okay

768
00:29:29,600 --> 00:29:31,360
can you hear me

769
00:29:31,360 --> 00:29:33,520
okay let's get going so i'm gonna be

770
00:29:33,520 --> 00:29:35,120
talking about three direction attacks

771
00:29:35,120 --> 00:29:37,039
next slide please

772
00:29:37,039 --> 00:29:38,799
so this

773
00:29:38,799 --> 00:29:41,840
um there was an article that prompted

774
00:29:41,840 --> 00:29:43,679
the whole discussion here

775
00:29:43,679 --> 00:29:46,080
uh the the article was talking about

776
00:29:46,080 --> 00:29:47,360
some

777
00:29:47,360 --> 00:29:49,200
specific vendors

778
00:29:49,200 --> 00:29:51,840
and and issues around implementation of

779
00:29:51,840 --> 00:29:55,039
a free directions and just to be clear

780
00:29:55,039 --> 00:29:56,399
those same

781
00:29:56,399 --> 00:29:58,240
problems and issues that we will discuss

782
00:29:58,240 --> 00:29:59,600
right now

783
00:29:59,600 --> 00:30:02,320
not specific for those vendors it's just

784
00:30:02,320 --> 00:30:05,120
much much wider than that so next slide

785
00:30:05,120 --> 00:30:07,360
please

786
00:30:07,440 --> 00:30:09,840
um so let's talk about that

787
00:30:09,840 --> 00:30:11,360
how the whole thing starts with the

788
00:30:11,360 --> 00:30:14,480
attacker setup um initially the the

789
00:30:14,480 --> 00:30:16,480
attacker creates an account on the

790
00:30:16,480 --> 00:30:18,399
victim's platform

791
00:30:18,399 --> 00:30:20,240
um creates an application of that

792
00:30:20,240 --> 00:30:21,520
platform

793
00:30:21,520 --> 00:30:22,399
and

794
00:30:22,399 --> 00:30:25,440
it crafts an authorization request with

795
00:30:25,440 --> 00:30:28,240
the goal of redirecting that user

796
00:30:28,240 --> 00:30:30,159
to an application that controls by

797
00:30:30,159 --> 00:30:33,039
controlled by by the attacker

798
00:30:33,039 --> 00:30:36,080
and then send that request to a the

799
00:30:36,080 --> 00:30:37,279
victim through

800
00:30:37,279 --> 00:30:39,840
sms or email or whatever right

801
00:30:39,840 --> 00:30:42,480
next slide please

802
00:30:42,480 --> 00:30:47,399
also take the microphone and put it in

803
00:30:50,320 --> 00:30:53,039
is that better can you hear me better

804
00:30:53,039 --> 00:30:54,720
okay

805
00:30:54,720 --> 00:30:57,840
um okay so this is a typical

806
00:30:57,840 --> 00:31:00,799
a authorization request you have a

807
00:31:00,799 --> 00:31:03,600
the get request with a response type a

808
00:31:03,600 --> 00:31:05,200
redirect uri

809
00:31:05,200 --> 00:31:07,919
a scope and a client id

810
00:31:07,919 --> 00:31:10,320
and obviously the host that hosts that

811
00:31:10,320 --> 00:31:11,760
endpoint

812
00:31:11,760 --> 00:31:14,480
we're showing a host name that

813
00:31:14,480 --> 00:31:15,519
is

814
00:31:15,519 --> 00:31:17,600
shared between all tenants some other

815
00:31:17,600 --> 00:31:20,159
deployments will show the tenant itself

816
00:31:20,159 --> 00:31:22,000
also in the url

817
00:31:22,000 --> 00:31:24,640
the issues applicable to either

818
00:31:24,640 --> 00:31:26,159
deployment right

819
00:31:26,159 --> 00:31:28,880
next slide please

820
00:31:30,399 --> 00:31:32,640
okay so let's talk about um

821
00:31:32,640 --> 00:31:34,880
what the rfc is talking about today like

822
00:31:34,880 --> 00:31:38,080
what's how to handle those error cases

823
00:31:38,080 --> 00:31:40,159
so the first part is talking about

824
00:31:40,159 --> 00:31:42,720
a redirection uri if there is a problem

825
00:31:42,720 --> 00:31:44,480
with redirection uri

826
00:31:44,480 --> 00:31:46,799
or a client identifier

827
00:31:46,799 --> 00:31:49,279
then the authorization server should

828
00:31:49,279 --> 00:31:51,519
inform the resource owner

829
00:31:51,519 --> 00:31:53,600
and must not automatically redirect the

830
00:31:53,600 --> 00:31:56,000
user right which is good that's what we

831
00:31:56,000 --> 00:31:57,840
want right

832
00:31:57,840 --> 00:32:01,679
the second part is that it says

833
00:32:01,679 --> 00:32:04,720
if the resource only denies that request

834
00:32:04,720 --> 00:32:07,279
or if the request fails for any other

835
00:32:07,279 --> 00:32:08,880
reason

836
00:32:08,880 --> 00:32:10,240
then the

837
00:32:10,240 --> 00:32:14,159
authorization server informs the client

838
00:32:14,159 --> 00:32:16,080
by adding some other parameters and

839
00:32:16,080 --> 00:32:18,159
redirecting the user right so

840
00:32:18,159 --> 00:32:20,640
that's the rfc today

841
00:32:20,640 --> 00:32:23,039
um and notice that it says authorization

842
00:32:23,039 --> 00:32:25,039
server informs the client

843
00:32:25,039 --> 00:32:27,440
it doesn't say must should

844
00:32:27,440 --> 00:32:30,080
it's a that's the way it is today

845
00:32:30,080 --> 00:32:32,960
so next slide so we will talk about

846
00:32:32,960 --> 00:32:34,480
four different

847
00:32:34,480 --> 00:32:39,279
issues that that was cast actually

848
00:32:40,240 --> 00:32:43,200
the first one is um

849
00:32:43,200 --> 00:32:45,600
if there is a problem with the request

850
00:32:45,600 --> 00:32:48,399
there is an invalid response type or a

851
00:32:48,399 --> 00:32:49,600
scope

852
00:32:49,600 --> 00:32:53,039
so after the user authenticates

853
00:32:53,039 --> 00:32:55,440
and if there is a one one of those

854
00:32:55,440 --> 00:32:57,840
parameters are invalid

855
00:32:57,840 --> 00:33:01,120
and the and the client id and

856
00:33:01,120 --> 00:33:03,039
redirect uri is controlled by the

857
00:33:03,039 --> 00:33:04,080
attacker

858
00:33:04,080 --> 00:33:07,120
then the user will be redirected to that

859
00:33:07,120 --> 00:33:08,960
specific website controlled by by that

860
00:33:08,960 --> 00:33:11,519
attacker so that's the the first use

861
00:33:11,519 --> 00:33:12,320
case

862
00:33:12,320 --> 00:33:14,879
next place

863
00:33:16,559 --> 00:33:18,399
so the second one is after the user

864
00:33:18,399 --> 00:33:20,159
authenticates typically you will get the

865
00:33:20,159 --> 00:33:23,200
consent you have to either confirm or

866
00:33:23,200 --> 00:33:24,480
decline

867
00:33:24,480 --> 00:33:26,240
so in this case it doesn't matter what

868
00:33:26,240 --> 00:33:28,399
you do whether you accept it or decline

869
00:33:28,399 --> 00:33:29,200
it

870
00:33:29,200 --> 00:33:32,000
you'll still be redirected to that

871
00:33:32,000 --> 00:33:34,559
attacker a controlled

872
00:33:34,559 --> 00:33:36,159
application

873
00:33:36,159 --> 00:33:39,360
next slide please

874
00:33:39,360 --> 00:33:41,279
uh this issue is talking about event

875
00:33:41,279 --> 00:33:42,480
redirection even before the

876
00:33:42,480 --> 00:33:43,919
authentication so

877
00:33:43,919 --> 00:33:47,679
this is an example of a uh a crafted

878
00:33:47,679 --> 00:33:49,039
message

879
00:33:49,039 --> 00:33:51,200
um it's just the only thing that there

880
00:33:51,200 --> 00:33:53,840
is is a client id every other

881
00:33:53,840 --> 00:33:56,159
parameter is missing and that and the

882
00:33:56,159 --> 00:33:58,799
user redirected automatically

883
00:33:58,799 --> 00:34:00,720
to a specific

884
00:34:00,720 --> 00:34:02,640
application

885
00:34:02,640 --> 00:34:05,880
next one

886
00:34:06,080 --> 00:34:08,079
okay so this one is the the most

887
00:34:08,079 --> 00:34:09,839
challenging challenging issue probably

888
00:34:09,839 --> 00:34:12,719
that that we'll face here so this is um

889
00:34:12,719 --> 00:34:15,918
around silence a solid authentication

890
00:34:15,918 --> 00:34:18,320
and this is an oidc a kind of

891
00:34:18,320 --> 00:34:20,960
specification which which allows

892
00:34:20,960 --> 00:34:22,560
um

893
00:34:22,560 --> 00:34:23,839
allows that that

894
00:34:23,839 --> 00:34:26,560
allow you to check if um a user is still

895
00:34:26,560 --> 00:34:29,199
authenticated or the consent is still

896
00:34:29,199 --> 00:34:32,000
valid without really prompting the user

897
00:34:32,000 --> 00:34:33,119
right

898
00:34:33,119 --> 00:34:35,280
and again in this case

899
00:34:35,280 --> 00:34:39,440
the user will be redirected to um that

900
00:34:39,440 --> 00:34:42,800
um application controlled by the the

901
00:34:42,800 --> 00:34:44,719
attacker

902
00:34:44,719 --> 00:34:47,959
next slide

903
00:34:48,079 --> 00:34:49,839
so the question is

904
00:34:49,839 --> 00:34:53,040
do we need a rethinking here around uh

905
00:34:53,040 --> 00:34:54,399
how to handle

906
00:34:54,399 --> 00:34:56,079
um

907
00:34:56,079 --> 00:34:59,440
error error error handling right so

908
00:34:59,440 --> 00:35:01,280
do we want to say hey the server should

909
00:35:01,280 --> 00:35:02,400
always

910
00:35:02,400 --> 00:35:04,400
be responsible for handling those error

911
00:35:04,400 --> 00:35:05,839
cases

912
00:35:05,839 --> 00:35:08,640
should there be an explicit text about

913
00:35:08,640 --> 00:35:10,320
you have first to authenticate the user

914
00:35:10,320 --> 00:35:11,359
before

915
00:35:11,359 --> 00:35:14,400
attempting to redirect the user

916
00:35:14,400 --> 00:35:16,480
how to handle solid authentication which

917
00:35:16,480 --> 00:35:18,400
is probably the most challenging part of

918
00:35:18,400 --> 00:35:20,079
this story

919
00:35:20,079 --> 00:35:22,720
how to handle that that declined a

920
00:35:22,720 --> 00:35:26,320
consent um use case

921
00:35:26,320 --> 00:35:28,400
regardless of what we do i think we at

922
00:35:28,400 --> 00:35:31,440
least want to document all of this

923
00:35:31,440 --> 00:35:33,200
and explain it

924
00:35:33,200 --> 00:35:34,160
like

925
00:35:34,160 --> 00:35:36,320
try to improve their current situation

926
00:35:36,320 --> 00:35:38,640
and we could do that and there are a few

927
00:35:38,640 --> 00:35:40,640
options here about documenting the the

928
00:35:40,640 --> 00:35:41,839
status

929
00:35:41,839 --> 00:35:43,520
either

930
00:35:43,520 --> 00:35:46,880
update the current security bcp which is

931
00:35:46,880 --> 00:35:49,599
trying to ship soon but we'll see if

932
00:35:49,599 --> 00:35:51,680
that's the right path

933
00:35:51,680 --> 00:35:53,520
if not maybe

934
00:35:53,520 --> 00:35:56,240
maybe a a new dedicated document just to

935
00:35:56,240 --> 00:35:57,520
talk about this

936
00:35:57,520 --> 00:36:00,560
those issues that we've we've seen in

937
00:36:00,560 --> 00:36:02,160
the field right

938
00:36:02,160 --> 00:36:02,880
so

939
00:36:02,880 --> 00:36:06,079
what i'm looking for here is that really

940
00:36:06,079 --> 00:36:07,119
thoughts

941
00:36:07,119 --> 00:36:08,560
discussions

942
00:36:08,560 --> 00:36:13,280
and see what what should be done here so

943
00:36:13,280 --> 00:36:15,599
that's that's my last slide

944
00:36:15,599 --> 00:36:17,440
and um

945
00:36:17,440 --> 00:36:20,560
looking for people to line up and

946
00:36:20,560 --> 00:36:25,240
have some discussion here any thoughts

947
00:36:32,480 --> 00:36:34,079
i didn't know if i i didn't know if i

948
00:36:34,079 --> 00:36:35,680
should just like talk through meat echo

949
00:36:35,680 --> 00:36:37,920
or since we're in the room or what no

950
00:36:37,920 --> 00:36:41,520
that was a joke that was fine anyway um

951
00:36:41,520 --> 00:36:42,720
so

952
00:36:42,720 --> 00:36:44,079
everything you're describing here is

953
00:36:44,079 --> 00:36:45,599
kind of like

954
00:36:45,599 --> 00:36:47,920
this is the known trade-off uh the

955
00:36:47,920 --> 00:36:49,839
well-known trade-off of doing anything

956
00:36:49,839 --> 00:36:51,440
in the front channel

957
00:36:51,440 --> 00:36:53,119
you know it's kind of an inherently

958
00:36:53,119 --> 00:36:54,960
fishable space

959
00:36:54,960 --> 00:36:55,839
and

960
00:36:55,839 --> 00:36:56,880
um

961
00:36:56,880 --> 00:37:00,079
you know the the documents especially

962
00:37:00,079 --> 00:37:02,560
the you know the updated bcps and stuff

963
00:37:02,560 --> 00:37:04,000
like that do a pretty good job of

964
00:37:04,000 --> 00:37:05,440
describing that

965
00:37:05,440 --> 00:37:07,599
not going into exactly the specificity

966
00:37:07,599 --> 00:37:09,839
of these particular attacks i agree

967
00:37:09,839 --> 00:37:11,599
um so

968
00:37:11,599 --> 00:37:14,480
to me i i realize that we're trying to

969
00:37:14,480 --> 00:37:16,720
ship as much as fast as we can

970
00:37:16,720 --> 00:37:19,359
um adding a few additional paragraphs to

971
00:37:19,359 --> 00:37:21,680
the bcp to describe the specifics of

972
00:37:21,680 --> 00:37:22,960
these attacks

973
00:37:22,960 --> 00:37:25,520
to me that makes the most sense i don't

974
00:37:25,520 --> 00:37:27,040
think that this makes sense as its own

975
00:37:27,040 --> 00:37:28,800
document just talking about one little

976
00:37:28,800 --> 00:37:30,320
description thing if that's what you're

977
00:37:30,320 --> 00:37:31,520
going to do you may as well write it in

978
00:37:31,520 --> 00:37:33,839
a blog post and call it a day because

979
00:37:33,839 --> 00:37:36,079
more people would actually read it there

980
00:37:36,079 --> 00:37:37,839
and um

981
00:37:37,839 --> 00:37:39,839
i don't think that this really needs to

982
00:37:39,839 --> 00:37:42,240
hold up the bcp because i don't think

983
00:37:42,240 --> 00:37:43,280
that this

984
00:37:43,280 --> 00:37:44,960
this is really a new attack this is

985
00:37:44,960 --> 00:37:46,480
really just a

986
00:37:46,480 --> 00:37:48,160
description of how bad this attack

987
00:37:48,160 --> 00:37:50,000
surface really is that we've all already

988
00:37:50,000 --> 00:37:51,680
know about right with just more

989
00:37:51,680 --> 00:37:53,839
specifics yeah

990
00:37:53,839 --> 00:37:55,920
thank you justin

991
00:37:55,920 --> 00:37:58,800
any other thoughts

992
00:37:58,800 --> 00:38:01,040
mike

993
00:38:02,480 --> 00:38:05,200
mike jones microsoft

994
00:38:05,200 --> 00:38:09,119
uh justin i like your characterization

995
00:38:09,119 --> 00:38:10,160
of

996
00:38:10,160 --> 00:38:12,560
adding descriptions of things we already

997
00:38:12,560 --> 00:38:13,520
know

998
00:38:13,520 --> 00:38:15,920
i think that is an appropriate

999
00:38:15,920 --> 00:38:18,800
kind of response to the thinking that

1000
00:38:18,800 --> 00:38:20,720
the working group has done around this

1001
00:38:20,720 --> 00:38:23,760
and it's good thinking

1002
00:38:23,760 --> 00:38:26,000
i do not think we should be

1003
00:38:26,000 --> 00:38:28,320
proposing normative changes to any of

1004
00:38:28,320 --> 00:38:31,280
our specifications

1005
00:38:31,280 --> 00:38:35,359
i think we should be in particular

1006
00:38:35,359 --> 00:38:38,800
asking authorization server and

1007
00:38:38,800 --> 00:38:41,280
open id provider implementers to think

1008
00:38:41,280 --> 00:38:43,280
about

1009
00:38:43,280 --> 00:38:45,440
the security implications of doing the

1010
00:38:45,440 --> 00:38:47,200
redirect back

1011
00:38:47,200 --> 00:38:50,720
under certain circumstances

1012
00:38:50,960 --> 00:38:53,520
and i'd be glad to review such a text

1013
00:38:53,520 --> 00:38:56,079
and i bet justin would too

1014
00:38:56,079 --> 00:38:58,839
awesome thank you thank you mike

1015
00:38:58,839 --> 00:39:00,400
daniel

1016
00:39:00,400 --> 00:39:03,520
yeah um i agree that this is probably so

1017
00:39:03,520 --> 00:39:05,280
the security bcp is probably the right

1018
00:39:05,280 --> 00:39:06,640
place for this

1019
00:39:06,640 --> 00:39:08,000
um

1020
00:39:08,000 --> 00:39:10,000
but probably the next version of the

1021
00:39:10,000 --> 00:39:12,400
security bcp so i think at some point we

1022
00:39:12,400 --> 00:39:15,119
agreed that we don't want to

1023
00:39:15,119 --> 00:39:16,800
add any

1024
00:39:16,800 --> 00:39:19,839
future attacks to the security vcp we're

1025
00:39:19,839 --> 00:39:22,320
not we're not like we're still reviewing

1026
00:39:22,320 --> 00:39:24,480
the document like why do you want to

1027
00:39:24,480 --> 00:39:27,040
wait for a new version of bcp like

1028
00:39:27,040 --> 00:39:28,079
because it

1029
00:39:28,079 --> 00:39:31,359
usually um entails a lot of

1030
00:39:31,359 --> 00:39:35,920
discussion um and probably delay in the

1031
00:39:35,920 --> 00:39:40,480
already quite late document

1032
00:39:40,560 --> 00:39:44,079
so i i think as as justin mentioned like

1033
00:39:44,079 --> 00:39:46,000
we these are well-known things right

1034
00:39:46,000 --> 00:39:48,079
it's nothing nothing really new if we

1035
00:39:48,079 --> 00:39:49,280
just

1036
00:39:49,280 --> 00:39:51,359
capture this just make sure implementers

1037
00:39:51,359 --> 00:39:53,520
understand this

1038
00:39:53,520 --> 00:39:55,280
it's

1039
00:39:55,280 --> 00:39:56,960
just waiting for

1040
00:39:56,960 --> 00:40:00,640
a completely new bcp it's it's uh i mean

1041
00:40:00,640 --> 00:40:03,200
if we can really quickly agree on

1042
00:40:03,200 --> 00:40:05,200
attacks to add then it would probably be

1043
00:40:05,200 --> 00:40:07,280
fine but we shouldn't be waiting with

1044
00:40:07,280 --> 00:40:10,720
the bcp for this change okay okay thank

1045
00:40:10,720 --> 00:40:13,279
you daniel

1046
00:40:16,720 --> 00:40:19,280
anybody else any comments

1047
00:40:19,280 --> 00:40:22,000
good day mike

1048
00:40:22,160 --> 00:40:24,079
mike jones microsoft speaking to

1049
00:40:24,079 --> 00:40:25,839
daniel's remark

1050
00:40:25,839 --> 00:40:28,240
um we still have to go through itf

1051
00:40:28,240 --> 00:40:30,560
review we still have to go through isg

1052
00:40:30,560 --> 00:40:32,000
review

1053
00:40:32,000 --> 00:40:35,200
there's a lot of opportunity to

1054
00:40:35,200 --> 00:40:38,079
add a couple paragraphs

1055
00:40:38,079 --> 00:40:40,480
prudently i think

1056
00:40:40,480 --> 00:40:42,640
those who care should

1057
00:40:42,640 --> 00:40:44,319
find a room

1058
00:40:44,319 --> 00:40:46,319
write two paragraphs

1059
00:40:46,319 --> 00:40:47,119
and

1060
00:40:47,119 --> 00:40:50,800
leave this week with mission

1061
00:40:50,839 --> 00:40:52,720
accomplished yeah

1062
00:40:52,720 --> 00:40:54,400
we have those side meetings too right we

1063
00:40:54,400 --> 00:40:57,680
can you can see if we can discuss those

1064
00:40:57,680 --> 00:41:00,800
during that time okay

1065
00:41:00,800 --> 00:41:01,760
any

1066
00:41:01,760 --> 00:41:02,640
other

1067
00:41:02,640 --> 00:41:06,359
comments questions

1068
00:41:06,960 --> 00:41:08,480
okay

1069
00:41:08,480 --> 00:41:10,079
thank you all that that was that was

1070
00:41:10,079 --> 00:41:12,160
good feedback appreciate it

1071
00:41:12,160 --> 00:41:15,160
okay

1072
00:41:36,160 --> 00:41:38,560
apparently i'm the shortest one here

1073
00:41:38,560 --> 00:41:39,520
okay

1074
00:41:39,520 --> 00:41:42,480
um hi aaron peraki from octa

1075
00:41:42,480 --> 00:41:43,440
um

1076
00:41:43,440 --> 00:41:44,960
slides there i don't get a clicker right

1077
00:41:44,960 --> 00:41:47,359
no no yeah okay

1078
00:41:47,359 --> 00:41:49,599
fantastic what about you

1079
00:41:49,599 --> 00:41:51,359
so uh thank you

1080
00:41:51,359 --> 00:41:53,200
i'm gonna give an update on oauth 2.1

1081
00:41:53,200 --> 00:41:55,680
and talk about um

1082
00:41:55,680 --> 00:41:56,960
some of the

1083
00:41:56,960 --> 00:41:58,880
things that have changed since the last

1084
00:41:58,880 --> 00:42:01,760
time we've talked about it some of the

1085
00:42:01,760 --> 00:42:03,920
plan changes and then i've identified a

1086
00:42:03,920 --> 00:42:06,880
couple of issues to

1087
00:42:06,880 --> 00:42:08,480
discuss either

1088
00:42:08,480 --> 00:42:10,079
here since apparently we have quite a

1089
00:42:10,079 --> 00:42:12,240
lot of time left or during the side

1090
00:42:12,240 --> 00:42:14,319
meetings for

1091
00:42:14,319 --> 00:42:17,680
more faster paced discussion if needed

1092
00:42:17,680 --> 00:42:22,800
so um since last time we met which was

1093
00:42:22,800 --> 00:42:24,720
virtually and i believe october or

1094
00:42:24,720 --> 00:42:26,000
november or so

1095
00:42:26,000 --> 00:42:28,400
uh we've gone we've

1096
00:42:28,400 --> 00:42:30,800
we identified some things there and have

1097
00:42:30,800 --> 00:42:34,240
done many of those updates so

1098
00:42:34,240 --> 00:42:37,040
uh thanks to several people who have

1099
00:42:37,040 --> 00:42:39,359
contributed to the document to help make

1100
00:42:39,359 --> 00:42:40,640
all that possible

1101
00:42:40,640 --> 00:42:44,160
um the tls has is now mandatory for

1102
00:42:44,160 --> 00:42:46,400
redirect urls except for loopback

1103
00:42:46,400 --> 00:42:48,319
interfaces so that was a nice update to

1104
00:42:48,319 --> 00:42:49,920
see we've talked about that before

1105
00:42:49,920 --> 00:42:52,079
hopefully not a surprise

1106
00:42:52,079 --> 00:42:54,160
there was a big re-org

1107
00:42:54,160 --> 00:42:57,119
in the language used to talk about tls

1108
00:42:57,119 --> 00:42:59,119
because it was scattered through many

1109
00:42:59,119 --> 00:43:01,200
different parts referencing

1110
00:43:01,200 --> 00:43:03,599
kept referencing that tls was like a

1111
00:43:03,599 --> 00:43:05,440
good idea and a new thing that maybe we

1112
00:43:05,440 --> 00:43:08,079
should do and

1113
00:43:09,119 --> 00:43:10,560
so that's all now

1114
00:43:10,560 --> 00:43:12,000
consolidated and it's kind of just

1115
00:43:12,000 --> 00:43:14,160
assumed uh right at the beginning and

1116
00:43:14,160 --> 00:43:15,440
then instead of repeated all the way

1117
00:43:15,440 --> 00:43:16,720
throughout

1118
00:43:16,720 --> 00:43:18,640
there's been a lot more

1119
00:43:18,640 --> 00:43:21,119
editorial clarification clarifications

1120
00:43:21,119 --> 00:43:22,720
um based on

1121
00:43:22,720 --> 00:43:24,560
vittorio and justin's

1122
00:43:24,560 --> 00:43:27,040
extensive feedback as well as some

1123
00:43:27,040 --> 00:43:28,400
additional pull requests that were

1124
00:43:28,400 --> 00:43:30,160
submitted by other people in the

1125
00:43:30,160 --> 00:43:33,040
community so that's wonderful

1126
00:43:33,040 --> 00:43:36,880
another big reorg that happened is or

1127
00:43:36,880 --> 00:43:39,280
is ongoing it's not finished yet we've

1128
00:43:39,280 --> 00:43:41,599
been pulling out

1129
00:43:41,599 --> 00:43:43,040
from the security considerations it

1130
00:43:43,040 --> 00:43:44,400
turns out there was a lot of things in

1131
00:43:44,400 --> 00:43:46,240
there that was actually normative and

1132
00:43:46,240 --> 00:43:47,520
that's not really a good place for

1133
00:43:47,520 --> 00:43:48,960
normative text so we've been pulling

1134
00:43:48,960 --> 00:43:51,599
that into the appropriate spot in the

1135
00:43:51,599 --> 00:43:53,200
main document

1136
00:43:53,200 --> 00:43:55,119
and that counts both texts from the

1137
00:43:55,119 --> 00:43:58,000
security considerations of 6749 as well

1138
00:43:58,000 --> 00:43:59,200
as other

1139
00:43:59,200 --> 00:44:01,359
drafts that were extensions so that's

1140
00:44:01,359 --> 00:44:05,520
hopefully easier to see now as well

1141
00:44:05,839 --> 00:44:08,079
uh the another change was the refresh

1142
00:44:08,079 --> 00:44:10,000
token guidance so that now matches the

1143
00:44:10,000 --> 00:44:12,319
security bcp which has

1144
00:44:12,319 --> 00:44:14,400
had already updated its guidance

1145
00:44:14,400 --> 00:44:16,400
previously so we're trying to keep that

1146
00:44:16,400 --> 00:44:17,760
in sync and i guess that's going to go

1147
00:44:17,760 --> 00:44:18,960
for

1148
00:44:18,960 --> 00:44:20,400
the discussion we'll have this week as

1149
00:44:20,400 --> 00:44:23,839
well about these redirection

1150
00:44:23,839 --> 00:44:26,079
issues so i'll have to

1151
00:44:26,079 --> 00:44:28,240
roll that up too

1152
00:44:28,240 --> 00:44:30,800
i do i do think that it makes the most

1153
00:44:30,800 --> 00:44:32,240
sense to

1154
00:44:32,240 --> 00:44:34,160
essentially wait on the security bcp

1155
00:44:34,160 --> 00:44:36,240
until that's more or less final and

1156
00:44:36,240 --> 00:44:38,079
anything that goes into that gets pulled

1157
00:44:38,079 --> 00:44:40,240
pulled into 2.1

1158
00:44:40,240 --> 00:44:43,760
um and then a there is a new section

1159
00:44:43,760 --> 00:44:46,160
which is now in there which explicitly

1160
00:44:46,160 --> 00:44:47,839
mentions the implicit flow because there

1161
00:44:47,839 --> 00:44:49,599
have previously been no reference to it

1162
00:44:49,599 --> 00:44:50,400
at all

1163
00:44:50,400 --> 00:44:52,079
there's a new section in there talking

1164
00:44:52,079 --> 00:44:53,760
specifically about it

1165
00:44:53,760 --> 00:44:55,599
explicitly in relation to

1166
00:44:55,599 --> 00:44:57,200
openid connect

1167
00:44:57,200 --> 00:45:00,000
it is essentially saying that

1168
00:45:00,000 --> 00:45:01,920
the implicit flow

1169
00:45:01,920 --> 00:45:05,119
the the oauth issuing tokens from the

1170
00:45:05,119 --> 00:45:07,359
authorization endpoint is what is being

1171
00:45:07,359 --> 00:45:10,800
removed from the spec rather than

1172
00:45:10,800 --> 00:45:12,720
something called the implicit flow and

1173
00:45:12,720 --> 00:45:14,480
uh that leaves the room open for

1174
00:45:14,480 --> 00:45:17,359
opendconnect to still define the

1175
00:45:17,359 --> 00:45:19,680
response type id token which is a form

1176
00:45:19,680 --> 00:45:22,480
of an implicit flow in openid connect so

1177
00:45:22,480 --> 00:45:23,920
hopefully that is now clear for people

1178
00:45:23,920 --> 00:45:25,280
who are wondering why is there no

1179
00:45:25,280 --> 00:45:27,920
implicit flow is because specifically

1180
00:45:27,920 --> 00:45:31,040
it's the oauth one that we don't want

1181
00:45:31,040 --> 00:45:33,839
um next slide please

1182
00:45:33,839 --> 00:45:36,480
so um this is a lot of work there's

1183
00:45:36,480 --> 00:45:40,079
still more to do and i have been going

1184
00:45:40,079 --> 00:45:41,520
through

1185
00:45:41,520 --> 00:45:43,760
victoria and justin's feedback

1186
00:45:43,760 --> 00:45:46,480
have made it through about sections part

1187
00:45:46,480 --> 00:45:47,839
way through section eight now we're

1188
00:45:47,839 --> 00:45:50,160
getting into 9 10 11 12 and 13. so

1189
00:45:50,160 --> 00:45:52,400
there's still a few more sections left

1190
00:45:52,400 --> 00:45:54,480
um some of that is started some of that

1191
00:45:54,480 --> 00:45:56,160
is still remaining

1192
00:45:56,160 --> 00:45:58,960
and uh that is

1193
00:45:58,960 --> 00:46:00,640
hopefully we'll go through that um

1194
00:46:00,640 --> 00:46:02,480
there's still more normative text in the

1195
00:46:02,480 --> 00:46:03,839
security considerations which still

1196
00:46:03,839 --> 00:46:05,760
needs to get pulled in in line

1197
00:46:05,760 --> 00:46:07,599
again i've just been sort of doing that

1198
00:46:07,599 --> 00:46:09,119
slowly as i've been going through the

1199
00:46:09,119 --> 00:46:10,480
doc

1200
00:46:10,480 --> 00:46:12,400
um there's the issue we identified at

1201
00:46:12,400 --> 00:46:15,040
the last meeting which is expanding the

1202
00:46:15,040 --> 00:46:16,640
uh there's a section in there called

1203
00:46:16,640 --> 00:46:18,480
differences from oauth 2

1204
00:46:18,480 --> 00:46:19,359
and

1205
00:46:19,359 --> 00:46:21,680
as we discussed at the last session

1206
00:46:21,680 --> 00:46:25,920
we intend to be more explicit about

1207
00:46:25,920 --> 00:46:26,880
the

1208
00:46:26,880 --> 00:46:29,200
changes that are causing certain roles

1209
00:46:29,200 --> 00:46:31,200
to do things differently and documenting

1210
00:46:31,200 --> 00:46:32,560
exactly what

1211
00:46:32,560 --> 00:46:34,560
is breaking for who

1212
00:46:34,560 --> 00:46:37,280
since a lot of the later extensions do

1213
00:46:37,280 --> 00:46:40,480
modify behavior of uh compared to 6749

1214
00:46:40,480 --> 00:46:43,280
by itself

1215
00:46:43,280 --> 00:46:45,680
there are a handful of open issues that

1216
00:46:45,680 --> 00:46:48,079
is the link to them so please

1217
00:46:48,079 --> 00:46:49,520
go there and read them essentially what

1218
00:46:49,520 --> 00:46:51,280
i've been doing is

1219
00:46:51,280 --> 00:46:54,160
as i've been going through the reviews

1220
00:46:54,160 --> 00:46:55,040
from

1221
00:46:55,040 --> 00:46:57,680
mainly from justin vittorio um

1222
00:46:57,680 --> 00:46:58,960
i have been

1223
00:46:58,960 --> 00:47:00,560
making a lot of the suggested changes

1224
00:47:00,560 --> 00:47:02,960
that are relatively straightforward and

1225
00:47:02,960 --> 00:47:04,640
what i believe are not controversial at

1226
00:47:04,640 --> 00:47:06,960
all mostly it's been editorial stuff

1227
00:47:06,960 --> 00:47:08,319
anytime there's been something in there

1228
00:47:08,319 --> 00:47:09,760
that is

1229
00:47:09,760 --> 00:47:11,359
something that is there is not a clear

1230
00:47:11,359 --> 00:47:12,800
resolution to

1231
00:47:12,800 --> 00:47:13,920
i've been

1232
00:47:13,920 --> 00:47:15,760
pulling it out as an issue so that we

1233
00:47:15,760 --> 00:47:17,280
can actually

1234
00:47:17,280 --> 00:47:19,200
uh track it better and

1235
00:47:19,200 --> 00:47:21,119
and make sure we get around to talking

1236
00:47:21,119 --> 00:47:23,599
about it so there there are a handful of

1237
00:47:23,599 --> 00:47:24,480
those

1238
00:47:24,480 --> 00:47:26,800
in the github right now which we still

1239
00:47:26,800 --> 00:47:29,200
need to process

1240
00:47:29,200 --> 00:47:32,160
um some of that can happen

1241
00:47:32,160 --> 00:47:33,359
here in the room something that can

1242
00:47:33,359 --> 00:47:34,880
happen during the site sessions some of

1243
00:47:34,880 --> 00:47:36,079
it is probably better for the mailing

1244
00:47:36,079 --> 00:47:36,960
list

1245
00:47:36,960 --> 00:47:39,440
so or the github thread um

1246
00:47:39,440 --> 00:47:40,720
so please

1247
00:47:40,720 --> 00:47:43,359
feel free to jump in on those uh next

1248
00:47:43,359 --> 00:47:45,598
slide

1249
00:47:45,839 --> 00:47:47,760
so uh for

1250
00:47:47,760 --> 00:47:49,839
the

1251
00:47:49,839 --> 00:47:51,760
i guess i should i guess i should pause

1252
00:47:51,760 --> 00:47:53,760
since what i have left for this is a

1253
00:47:53,760 --> 00:47:56,160
couple of i think it's three issues

1254
00:47:56,160 --> 00:47:57,839
i identified as things that would

1255
00:47:57,839 --> 00:47:59,920
probably be a good good issues to talk

1256
00:47:59,920 --> 00:48:02,240
about in a larger setting synchronously

1257
00:48:02,240 --> 00:48:03,119
now

1258
00:48:03,119 --> 00:48:05,680
um but before i go and describe those

1259
00:48:05,680 --> 00:48:07,760
and actually get dig into this

1260
00:48:07,760 --> 00:48:09,280
do we have any comments or questions

1261
00:48:09,280 --> 00:48:10,960
about the

1262
00:48:10,960 --> 00:48:13,839
progress so far

1263
00:48:18,000 --> 00:48:20,559
hey aaron uh justin richard uh first off

1264
00:48:20,559 --> 00:48:22,720
great work it is no small task pulling

1265
00:48:22,720 --> 00:48:24,400
all of this text together and making it

1266
00:48:24,400 --> 00:48:26,640
make sense um

1267
00:48:26,640 --> 00:48:28,800
uh i just wanted to

1268
00:48:28,800 --> 00:48:30,720
um

1269
00:48:30,720 --> 00:48:32,160
uh if we could go back a slide i just

1270
00:48:32,160 --> 00:48:33,280
wanted to

1271
00:48:33,280 --> 00:48:35,280
bring to light a very very important

1272
00:48:35,280 --> 00:48:38,559
point here on number 97 that

1273
00:48:38,559 --> 00:48:40,160
that might have been elighted a little

1274
00:48:40,160 --> 00:48:42,960
bit and that's that uh the notion of

1275
00:48:42,960 --> 00:48:45,200
what is backwards compatibility

1276
00:48:45,200 --> 00:48:46,800
um in

1277
00:48:46,800 --> 00:48:50,079
the tech in the in the context of oauth

1278
00:48:50,079 --> 00:48:51,280
2.1

1279
00:48:51,280 --> 00:48:53,359
is going to vary depending on whether

1280
00:48:53,359 --> 00:48:54,960
you're talking about compatible for a

1281
00:48:54,960 --> 00:48:56,000
client

1282
00:48:56,000 --> 00:48:57,920
for an as whether you've got a 2o client

1283
00:48:57,920 --> 00:49:01,520
talking to a 208 or to a 2 1 as or vice

1284
00:49:01,520 --> 00:49:03,440
versa or something like that

1285
00:49:03,440 --> 00:49:05,280
and so i'm i'm

1286
00:49:05,280 --> 00:49:07,839
very very glad that that is a focus that

1287
00:49:07,839 --> 00:49:09,920
is also something i'm going to

1288
00:49:09,920 --> 00:49:11,839
i wanted to point this out so that when

1289
00:49:11,839 --> 00:49:13,760
people are reviewing this text

1290
00:49:13,760 --> 00:49:16,079
especially the bits that say don't do

1291
00:49:16,079 --> 00:49:17,760
this thing anymore

1292
00:49:17,760 --> 00:49:20,319
keep in mind what that means to all of

1293
00:49:20,319 --> 00:49:22,400
the different parties in the ecosystem

1294
00:49:22,400 --> 00:49:24,400
because there are some types of

1295
00:49:24,400 --> 00:49:26,800
breaking backwards compatibility that

1296
00:49:26,800 --> 00:49:28,720
we're actually okay with

1297
00:49:28,720 --> 00:49:30,559
because certain combinations of those

1298
00:49:30,559 --> 00:49:32,480
versions were okay with that actually

1299
00:49:32,480 --> 00:49:35,960
not working anymore

1300
00:49:45,280 --> 00:49:47,599
okay um

1301
00:49:47,599 --> 00:49:50,960
then let's go ahead and move on to

1302
00:49:50,960 --> 00:49:53,440
number five

1303
00:49:53,440 --> 00:49:54,720
yes

1304
00:49:54,720 --> 00:49:57,839
so um at the last meeting we had brought

1305
00:49:57,839 --> 00:50:01,040
up this issue which is

1306
00:50:01,040 --> 00:50:02,319
this new

1307
00:50:02,319 --> 00:50:06,160
mechanism the iss response parameter

1308
00:50:06,160 --> 00:50:07,599
that was a

1309
00:50:07,599 --> 00:50:09,920
fledgling idea at the time

1310
00:50:09,920 --> 00:50:12,720
and the consensus at the time during the

1311
00:50:12,720 --> 00:50:14,800
last session was let's not touch it

1312
00:50:14,800 --> 00:50:17,200
until it's reached rfc status because

1313
00:50:17,200 --> 00:50:18,720
we're supposed to be rolling up best

1314
00:50:18,720 --> 00:50:20,559
practices

1315
00:50:20,559 --> 00:50:23,440
surprise it is now an rfc as of like

1316
00:50:23,440 --> 00:50:24,839
three days ago i think

1317
00:50:24,839 --> 00:50:28,240
so congrats um

1318
00:50:28,240 --> 00:50:29,599
so now we have to have the discussion

1319
00:50:29,599 --> 00:50:31,520
again so

1320
00:50:31,520 --> 00:50:34,800
the idea with this is it is a

1321
00:50:34,800 --> 00:50:36,319
security

1322
00:50:36,319 --> 00:50:39,040
fix for clients that talk to multiple

1323
00:50:39,040 --> 00:50:40,480
authorization servers

1324
00:50:40,480 --> 00:50:42,400
it is a pretty straightforward mechanism

1325
00:50:42,400 --> 00:50:44,559
which is i believe why it

1326
00:50:44,559 --> 00:50:46,160
it breezed right through the whole

1327
00:50:46,160 --> 00:50:48,960
process and moved through pretty quickly

1328
00:50:48,960 --> 00:50:51,280
um it and it only applies to clients

1329
00:50:51,280 --> 00:50:52,480
that talk

1330
00:50:52,480 --> 00:50:55,200
to multiple as's so if you are only

1331
00:50:55,200 --> 00:50:57,040
talking to one as then you can pretty

1332
00:50:57,040 --> 00:50:59,119
much ignore this draft completely and

1333
00:50:59,119 --> 00:51:00,720
don't worry about it

1334
00:51:00,720 --> 00:51:03,280
uh so the question now is now that it is

1335
00:51:03,280 --> 00:51:06,000
an rfc is it considered best practice

1336
00:51:06,000 --> 00:51:08,880
and if so do we

1337
00:51:08,880 --> 00:51:11,839
bring it into 2.1 or at the very least

1338
00:51:11,839 --> 00:51:14,720
reference it from 2.1 as either a

1339
00:51:14,720 --> 00:51:16,880
requirement or a

1340
00:51:16,880 --> 00:51:20,160
possibility or um etc etc there are now

1341
00:51:20,160 --> 00:51:23,440
these these questions to have so

1342
00:51:23,440 --> 00:51:28,400
um that is the first first issue any

1343
00:51:28,400 --> 00:51:29,599
thoughts

1344
00:51:29,599 --> 00:51:33,000
from the room

1345
00:51:45,119 --> 00:51:46,559
mike jones

1346
00:51:46,559 --> 00:51:48,319
microsoft

1347
00:51:48,319 --> 00:51:49,839
out of fairness i was one of the people

1348
00:51:49,839 --> 00:51:51,920
who said wait

1349
00:51:51,920 --> 00:51:52,800
um

1350
00:51:52,800 --> 00:51:54,960
it's now an rfc

1351
00:51:54,960 --> 00:51:56,480
i'm fine

1352
00:51:56,480 --> 00:51:58,640
folding in

1353
00:51:58,640 --> 00:52:00,240
guidance at least

1354
00:52:00,240 --> 00:52:01,359
saying

1355
00:52:01,359 --> 00:52:03,200
if you're going to talk to multiple

1356
00:52:03,200 --> 00:52:05,200
authorization servers

1357
00:52:05,200 --> 00:52:07,200
do yourself a favor and present them

1358
00:52:07,200 --> 00:52:10,799
prevent the mix-up attack

1359
00:52:11,520 --> 00:52:14,960
i'd be glad to review text

1360
00:52:16,319 --> 00:52:18,800
um so along those lines

1361
00:52:18,800 --> 00:52:21,040
is it a better idea to

1362
00:52:21,040 --> 00:52:24,880
incorporate the text of the rfc into 2.1

1363
00:52:24,880 --> 00:52:26,400
or

1364
00:52:26,400 --> 00:52:28,079
in the appropriate place reference out

1365
00:52:28,079 --> 00:52:30,079
to it saying

1366
00:52:30,079 --> 00:52:32,079
here are some conditions go read the

1367
00:52:32,079 --> 00:52:34,800
mechanism over there

1368
00:52:34,800 --> 00:52:38,400
as a sometimes editor i'll say

1369
00:52:38,400 --> 00:52:41,520
include an example of using it

1370
00:52:41,520 --> 00:52:44,319
in the normative text but i'd be fine

1371
00:52:44,319 --> 00:52:46,240
referencing it rather than pulling it

1372
00:52:46,240 --> 00:52:48,640
all in i realize there's attention but

1373
00:52:48,640 --> 00:52:49,760
because you're

1374
00:52:49,760 --> 00:52:51,520
you and the co-authors are correctly

1375
00:52:51,520 --> 00:52:52,880
trying to

1376
00:52:52,880 --> 00:52:55,520
create something that's more readable

1377
00:52:55,520 --> 00:52:56,400
and

1378
00:52:56,400 --> 00:52:58,480
i've gotten some additional feedback

1379
00:52:58,480 --> 00:53:01,280
that it is more readable so you know

1380
00:53:01,280 --> 00:53:04,160
good for you and good for us

1381
00:53:04,160 --> 00:53:08,118
but it's a judgment call

1382
00:53:26,480 --> 00:53:29,200
i'm not in the queue because i'm

1383
00:53:29,200 --> 00:53:30,559
now i am there you go okay you can't

1384
00:53:30,559 --> 00:53:32,160
figure it out okay so

1385
00:53:32,160 --> 00:53:34,400
daniel here from yes.com

1386
00:53:34,400 --> 00:53:34,810
um

1387
00:53:34,810 --> 00:53:36,480
[Music]

1388
00:53:36,480 --> 00:53:39,280
yeah so i would um also support what

1389
00:53:39,280 --> 00:53:42,880
mike said so um including very brief

1390
00:53:42,880 --> 00:53:46,720
guidance uh that you should do that and

1391
00:53:46,720 --> 00:53:48,640
maybe also the

1392
00:53:48,640 --> 00:53:51,599
like the most common case which is

1393
00:53:51,599 --> 00:53:53,359
pretty easy right you at the issuer

1394
00:53:53,359 --> 00:53:54,480
there

1395
00:53:54,480 --> 00:53:57,599
but in the rc we also have um some

1396
00:53:57,599 --> 00:53:59,440
guidance around what you do

1397
00:53:59,440 --> 00:54:02,720
when you don't um have this

1398
00:54:02,720 --> 00:54:06,319
idea of an issuer in your oauth um

1399
00:54:06,319 --> 00:54:08,319
deployment and so on so there's

1400
00:54:08,319 --> 00:54:10,880
there's a lot more guidance

1401
00:54:10,880 --> 00:54:13,440
around some corner cases there or

1402
00:54:13,440 --> 00:54:15,280
like combination with jam or something

1403
00:54:15,280 --> 00:54:16,400
like that

1404
00:54:16,400 --> 00:54:18,480
um so therefore it would probably make

1405
00:54:18,480 --> 00:54:20,960
sense to to describe the common case and

1406
00:54:20,960 --> 00:54:23,440
then refer to the rfc for the other

1407
00:54:23,440 --> 00:54:25,839
cases

1408
00:54:26,240 --> 00:54:28,720
okay i'm happy with that

1409
00:54:28,720 --> 00:54:31,280
um for my own sake later did that get

1410
00:54:31,280 --> 00:54:33,599
captured in the notes

1411
00:54:33,599 --> 00:54:34,720
brian

1412
00:54:34,720 --> 00:54:38,839
brian has a comment okay

1413
00:54:42,640 --> 00:54:44,960
sort of more of a question of brian

1414
00:54:44,960 --> 00:54:47,680
campbell from paying identity

1415
00:54:47,680 --> 00:54:48,480
um

1416
00:54:48,480 --> 00:54:49,920
as you mentioned it's

1417
00:54:49,920 --> 00:54:51,440
it doesn't apply to most clients that

1418
00:54:51,440 --> 00:54:53,920
are just talking to 1as but

1419
00:54:53,920 --> 00:54:56,480
the actual mechanism of doing it is

1420
00:54:56,480 --> 00:54:59,280
something the as has to do

1421
00:54:59,280 --> 00:55:02,000
so i'm i'm a little i was maybe

1422
00:55:02,000 --> 00:55:03,359
wondering if you could

1423
00:55:03,359 --> 00:55:05,440
clarify or start thinking about how you

1424
00:55:05,440 --> 00:55:07,200
portray that in a document like this

1425
00:55:07,200 --> 00:55:08,799
where you

1426
00:55:08,799 --> 00:55:10,880
it's the optionality sort of condition

1427
00:55:10,880 --> 00:55:11,839
on

1428
00:55:11,839 --> 00:55:13,839
something the client's doing

1429
00:55:13,839 --> 00:55:15,520
whereas the as is the one that has to

1430
00:55:15,520 --> 00:55:17,359
support it or not or at least be on that

1431
00:55:17,359 --> 00:55:18,480
side of it

1432
00:55:18,480 --> 00:55:19,839
how are you going to resolve that that

1433
00:55:19,839 --> 00:55:22,400
is a very good point um

1434
00:55:22,400 --> 00:55:24,880
it seems like

1435
00:55:24,880 --> 00:55:26,559
probably the right way to handle it is

1436
00:55:26,559 --> 00:55:30,319
to describe the situation as if your as

1437
00:55:30,319 --> 00:55:32,480
is likely to be used by clients that

1438
00:55:32,480 --> 00:55:34,559
will support other asses

1439
00:55:34,559 --> 00:55:36,000
then then

1440
00:55:36,000 --> 00:55:38,079
you need to do this

1441
00:55:38,079 --> 00:55:39,280
because you're right it is something

1442
00:55:39,280 --> 00:55:40,400
that

1443
00:55:40,400 --> 00:55:43,680
the ais has to build support for

1444
00:55:43,680 --> 00:55:45,200
in order for in order for a client to

1445
00:55:45,200 --> 00:55:46,480
use it

1446
00:55:46,480 --> 00:55:47,440
okay

1447
00:55:47,440 --> 00:55:48,880
but i i also think that's actually

1448
00:55:48,880 --> 00:55:50,640
pretty realistic because i think

1449
00:55:50,640 --> 00:55:52,400
realistically

1450
00:55:52,400 --> 00:55:55,599
um or actually sorry there's another

1451
00:55:55,599 --> 00:55:57,680
condition or another

1452
00:55:57,680 --> 00:56:00,160
call out in the iss draft which is using

1453
00:56:00,160 --> 00:56:01,680
separate redirect uis per client is that

1454
00:56:01,680 --> 00:56:03,599
correct

1455
00:56:03,599 --> 00:56:05,599
or per as client can use multiple

1456
00:56:05,599 --> 00:56:09,040
redirect uris per aes

1457
00:56:10,079 --> 00:56:11,760
not a recommendation but it does solve

1458
00:56:11,760 --> 00:56:14,319
the problem

1459
00:56:14,319 --> 00:56:15,599
and in the my

1460
00:56:15,599 --> 00:56:18,240
mike mike

1461
00:56:18,799 --> 00:56:21,280
yeah daniel here um

1462
00:56:21,280 --> 00:56:23,040
if i remember correctly we mentioned

1463
00:56:23,040 --> 00:56:23,920
that

1464
00:56:23,920 --> 00:56:25,359
this

1465
00:56:25,359 --> 00:56:28,640
could be used in theory but um there's

1466
00:56:28,640 --> 00:56:30,480
i'm not sure if we even discuss this in

1467
00:56:30,480 --> 00:56:33,359
detail in the rfc it's in a security bcp

1468
00:56:33,359 --> 00:56:35,040
there's an example so

1469
00:56:35,040 --> 00:56:38,079
there's more discussion on uh

1470
00:56:38,079 --> 00:56:40,079
why you could use that to defend against

1471
00:56:40,079 --> 00:56:41,520
mix-up attacks

1472
00:56:41,520 --> 00:56:43,920
um but also why it's maybe not a good

1473
00:56:43,920 --> 00:56:45,760
idea so there's some

1474
00:56:45,760 --> 00:56:47,599
some subtle details there that you need

1475
00:56:47,599 --> 00:56:52,000
to take care of okay sorry so the iss uh

1476
00:56:52,000 --> 00:56:53,760
parameters really the only thing that i

1477
00:56:53,760 --> 00:56:55,359
would consider

1478
00:56:55,359 --> 00:56:57,599
a robust defense against up the text

1479
00:56:57,599 --> 00:56:58,720
sure sorry it was a little bit of a

1480
00:56:58,720 --> 00:57:00,640
tangent i was just thinking in

1481
00:57:00,640 --> 00:57:03,359
realistically deployments are going to

1482
00:57:03,359 --> 00:57:06,160
likely either like they tend to work as

1483
00:57:06,160 --> 00:57:09,680
a whole there's there tends to be

1484
00:57:09,680 --> 00:57:11,520
nas that someone is going to be using

1485
00:57:11,520 --> 00:57:13,119
and then a bunch of clients so i think

1486
00:57:13,119 --> 00:57:15,280
realistically it's not really a problem

1487
00:57:15,280 --> 00:57:18,319
uh in in saying the sort of like if your

1488
00:57:18,319 --> 00:57:20,240
ass is likely to be

1489
00:57:20,240 --> 00:57:22,079
one of many that a client works with in

1490
00:57:22,079 --> 00:57:24,960
practice then that's i i think it will

1491
00:57:24,960 --> 00:57:28,480
cover it realistically

1492
00:57:31,920 --> 00:57:35,119
uh mike again uh just thinking out loud

1493
00:57:35,119 --> 00:57:38,480
i would eventually get to this anyway

1494
00:57:38,480 --> 00:57:39,599
um

1495
00:57:39,599 --> 00:57:42,799
the iss parameter

1496
00:57:42,799 --> 00:57:45,839
was kind of motivated by

1497
00:57:45,839 --> 00:57:48,319
the openid connect issuer in the first

1498
00:57:48,319 --> 00:57:49,839
place

1499
00:57:49,839 --> 00:57:50,720
and

1500
00:57:50,720 --> 00:57:52,720
it's one of these cases if you're doing

1501
00:57:52,720 --> 00:57:55,599
pure oauth and you're not doing connect

1502
00:57:55,599 --> 00:57:57,359
all of the supplies if you're already

1503
00:57:57,359 --> 00:58:00,160
doing connect you already have an issuer

1504
00:58:00,160 --> 00:58:02,079
and so the parameter would be

1505
00:58:02,079 --> 00:58:04,559
duplicative

1506
00:58:04,559 --> 00:58:06,799
i'm not looking to make special cases

1507
00:58:06,799 --> 00:58:08,319
but

1508
00:58:08,319 --> 00:58:11,520
i'm also not looking to add stuff that

1509
00:58:11,520 --> 00:58:13,200
you already have

1510
00:58:13,200 --> 00:58:15,440
mike can you repeat that if you're doing

1511
00:58:15,440 --> 00:58:19,119
pure or not open id connect volster

1512
00:58:19,119 --> 00:58:21,599
if you're doing pure oauth you don't

1513
00:58:21,599 --> 00:58:25,280
have an issuer without this parameter

1514
00:58:25,280 --> 00:58:27,520
whereas if what you're doing is always

1515
00:58:27,520 --> 00:58:31,040
open id connect and not pure oauth

1516
00:58:31,040 --> 00:58:32,400
or

1517
00:58:32,400 --> 00:58:35,359
open id connect on top of oauth 2 you

1518
00:58:35,359 --> 00:58:37,839
always already have an issuer

1519
00:58:37,839 --> 00:58:40,000
in the id in the id token

1520
00:58:40,000 --> 00:58:42,720
so there's no need to also

1521
00:58:42,720 --> 00:58:46,000
included in the response

1522
00:58:46,880 --> 00:58:48,960
i believe that's mentioned in the draft

1523
00:58:48,960 --> 00:58:52,160
as well right yeah getting nods okay

1524
00:58:52,160 --> 00:58:54,480
it could be i'm just

1525
00:58:54,480 --> 00:58:57,040
talking out loud about

1526
00:58:57,040 --> 00:59:00,559
where this is really needed and where it

1527
00:59:00,559 --> 00:59:02,480
isn't

1528
00:59:02,480 --> 00:59:04,079
this is all definitely making me think

1529
00:59:04,079 --> 00:59:07,280
it's much better plan to mention some

1530
00:59:07,280 --> 00:59:08,880
simple examples and reference out for

1531
00:59:08,880 --> 00:59:10,720
the details since the draft mentions all

1532
00:59:10,720 --> 00:59:13,440
the details oh good yeah

1533
00:59:13,440 --> 00:59:15,680
great

1534
00:59:22,720 --> 00:59:25,359
i'm very excited uh i seem to remember

1535
00:59:25,359 --> 00:59:28,160
that the part of the discussion was that

1536
00:59:28,160 --> 00:59:29,119
um

1537
00:59:29,119 --> 00:59:31,839
you want to have a effort in the request

1538
00:59:31,839 --> 00:59:34,000
without having to dig inside the id

1539
00:59:34,000 --> 00:59:36,480
token and there was some reason for that

1540
00:59:36,480 --> 00:59:38,319
because like there are situations in

1541
00:59:38,319 --> 00:59:40,240
which really talk and it might you might

1542
00:59:40,240 --> 00:59:42,720
have to wait until you decrypt it and

1543
00:59:42,720 --> 00:59:45,119
instead having the issue in the request

1544
00:59:45,119 --> 00:59:48,079
even in the case of open id was useful

1545
00:59:48,079 --> 00:59:49,760
because then you were able for example

1546
00:59:49,760 --> 00:59:52,480
to know what key you need to use for um

1547
00:59:52,480 --> 00:59:54,640
actually going inside ready talking i

1548
00:59:54,640 --> 00:59:55,920
don't remember the details but i

1549
00:59:55,920 --> 00:59:57,839
remember the part that

1550
00:59:57,839 --> 00:59:59,599
there was specifically the desire to

1551
00:59:59,599 --> 01:00:01,680
have these in the request without ready

1552
01:00:01,680 --> 01:00:04,559
talking just wanted to modify what mike

1553
01:00:04,559 --> 01:00:06,799
said

1554
01:00:12,559 --> 01:00:15,599
benefit um

1555
01:00:15,599 --> 01:00:18,240
so you mentioned that in pure auth

1556
01:00:18,240 --> 01:00:21,520
there's no issue um right but i'm also

1557
01:00:21,520 --> 01:00:23,200
that's probably a separate topic but i'm

1558
01:00:23,200 --> 01:00:25,440
also strongly advocating for always

1559
01:00:25,440 --> 01:00:28,559
having metadata in auth 2.1 which would

1560
01:00:28,559 --> 01:00:30,480
mean that you would also have

1561
01:00:30,480 --> 01:00:32,240
an issuer

1562
01:00:32,240 --> 01:00:33,680
so that might

1563
01:00:33,680 --> 01:00:37,119
make things easier again

1564
01:00:37,119 --> 01:00:39,680
because you can rely on that issue so

1565
01:00:39,680 --> 01:00:41,200
maybe some corner cases that are

1566
01:00:41,200 --> 01:00:44,640
discussed in the rfc are not relevant

1567
01:00:44,640 --> 01:00:48,240
just saying got it yeah

1568
01:00:49,920 --> 01:00:52,480
philips kokan octa

1569
01:00:52,480 --> 01:00:55,520
echoing vittorio's comment about asking

1570
01:00:55,520 --> 01:00:59,680
to have the iss in the response

1571
01:00:59,920 --> 01:01:02,480
one of the reasons to

1572
01:01:02,480 --> 01:01:04,000
use that

1573
01:01:04,000 --> 01:01:06,160
before relying on open id connect is

1574
01:01:06,160 --> 01:01:07,599
that it is actually available in the

1575
01:01:07,599 --> 01:01:09,680
response i don't have to make the code

1576
01:01:09,680 --> 01:01:11,040
call

1577
01:01:11,040 --> 01:01:13,119
to get my id token because even that

1578
01:01:13,119 --> 01:01:16,880
code call if i make it it's part of the

1579
01:01:16,880 --> 01:01:18,720
mix-up attack

1580
01:01:18,720 --> 01:01:19,839
surface

1581
01:01:19,839 --> 01:01:22,839
yeah

1582
01:01:26,000 --> 01:01:28,799
okay well it sounds like

1583
01:01:28,799 --> 01:01:29,839
yeah

1584
01:01:29,839 --> 01:01:31,119
sounds like

1585
01:01:31,119 --> 01:01:34,559
we more or less agree on that so i will

1586
01:01:34,559 --> 01:01:36,480
work on that and

1587
01:01:36,480 --> 01:01:39,680
report back

1588
01:01:39,680 --> 01:01:42,558
so yes next

1589
01:01:43,760 --> 01:01:47,119
uh okay number 101 on github um this is

1590
01:01:47,119 --> 01:01:48,240
something i

1591
01:01:48,240 --> 01:01:49,680
discovered as i was reading through the

1592
01:01:49,680 --> 01:01:53,200
text i was copying and editing um

1593
01:01:53,200 --> 01:01:55,920
technically rfc 6750

1594
01:01:55,920 --> 01:01:57,200
requires

1595
01:01:57,200 --> 01:01:58,880
but it's in the security considerations

1596
01:01:58,880 --> 01:02:00,000
section

1597
01:02:00,000 --> 01:02:03,200
that access tokens must have a limited

1598
01:02:03,200 --> 01:02:05,039
lifetime

1599
01:02:05,039 --> 01:02:08,400
that is uh not ambiguous

1600
01:02:08,400 --> 01:02:09,839
however

1601
01:02:09,839 --> 01:02:11,520
i know for a fact that many deployments

1602
01:02:11,520 --> 01:02:13,599
do not expire access tokens for various

1603
01:02:13,599 --> 01:02:15,520
reasons

1604
01:02:15,520 --> 01:02:16,799
which means they're technically not

1605
01:02:16,799 --> 01:02:20,000
following oauth 2.0 right now

1606
01:02:20,000 --> 01:02:21,039
so

1607
01:02:21,039 --> 01:02:23,760
this is uh the reality today

1608
01:02:23,760 --> 01:02:26,000
and the question is what do we do to

1609
01:02:26,000 --> 01:02:28,079
reconcile that because it seems kind of

1610
01:02:28,079 --> 01:02:31,280
weird to publish a new document that

1611
01:02:31,280 --> 01:02:34,400
is going to even more clearly

1612
01:02:34,400 --> 01:02:35,680
state that this is not allowed because

1613
01:02:35,680 --> 01:02:37,359
essentially what the reason i found this

1614
01:02:37,359 --> 01:02:38,559
was i was going through the security

1615
01:02:38,559 --> 01:02:40,559
considerations pulling out normative

1616
01:02:40,559 --> 01:02:41,440
text

1617
01:02:41,440 --> 01:02:42,880
in line into the higher up in the docs

1618
01:02:42,880 --> 01:02:44,799
so people actually read it

1619
01:02:44,799 --> 01:02:46,319
and this is one of those things which i

1620
01:02:46,319 --> 01:02:48,240
think people didn't read and then have

1621
01:02:48,240 --> 01:02:49,920
just ignored because it was was in

1622
01:02:49,920 --> 01:02:52,240
security considerations so

1623
01:02:52,240 --> 01:02:53,890
maybe the question is um

1624
01:02:53,890 --> 01:02:54,960
[Music]

1625
01:02:54,960 --> 01:02:56,960
was this in security

1626
01:02:56,960 --> 01:02:59,440
security considerations because it was

1627
01:02:59,440 --> 01:03:03,839
not intended to be a real must

1628
01:03:04,160 --> 01:03:06,400
or is this was this always intended to

1629
01:03:06,400 --> 01:03:07,920
be a real must and people have just

1630
01:03:07,920 --> 01:03:09,280
ignored it which means maybe we should

1631
01:03:09,280 --> 01:03:12,240
just not enforce it because people

1632
01:03:12,240 --> 01:03:14,160
ignored it anyway so i don't know what

1633
01:03:14,160 --> 01:03:18,319
to do here thoughts are welcome

1634
01:03:19,359 --> 01:03:20,240
so

1635
01:03:20,240 --> 01:03:24,079
as the primary editor of 6750

1636
01:03:24,079 --> 01:03:25,920
mike jones speaking

1637
01:03:25,920 --> 01:03:28,319
i'll say that i inherited a bunch of

1638
01:03:28,319 --> 01:03:30,880
text from another aaron

1639
01:03:30,880 --> 01:03:33,599
and i did with it what seemed best at

1640
01:03:33,599 --> 01:03:34,960
the time but

1641
01:03:34,960 --> 01:03:38,160
i remember no intent to

1642
01:03:38,160 --> 01:03:41,440
have a normative must even be in

1643
01:03:41,440 --> 01:03:44,079
security considerations in fact stuff

1644
01:03:44,079 --> 01:03:46,799
i've edited since that i've tried to

1645
01:03:46,799 --> 01:03:49,680
avoid ever doing that but the isg didn't

1646
01:03:49,680 --> 01:03:51,520
call me out on it

1647
01:03:51,520 --> 01:03:52,480
so

1648
01:03:52,480 --> 01:03:54,480
take that for what you will but there's

1649
01:03:54,480 --> 01:03:55,680
nothing

1650
01:03:55,680 --> 01:03:59,558
conscious about this

1651
01:04:01,920 --> 01:04:04,240
justin richard um

1652
01:04:04,240 --> 01:04:06,880
to me this really

1653
01:04:06,880 --> 01:04:08,720
like the paragraph is still decent

1654
01:04:08,720 --> 01:04:11,599
advice and it should be phrased as

1655
01:04:11,599 --> 01:04:12,960
advice

1656
01:04:12,960 --> 01:04:14,640
if you have bearer tokens which is what

1657
01:04:14,640 --> 01:04:16,400
this whole section is about

1658
01:04:16,400 --> 01:04:18,160
then it's a good idea to not have them

1659
01:04:18,160 --> 01:04:19,680
live forever

1660
01:04:19,680 --> 01:04:20,880
and

1661
01:04:20,880 --> 01:04:22,480
um

1662
01:04:22,480 --> 01:04:25,039
that can be

1663
01:04:25,039 --> 01:04:26,799
reasonably interpreted in a number of

1664
01:04:26,799 --> 01:04:30,000
ways um including having a time-based

1665
01:04:30,000 --> 01:04:32,079
expiration but also as you mentioned

1666
01:04:32,079 --> 01:04:34,160
down at the bottom lifetime doesn't need

1667
01:04:34,160 --> 01:04:38,480
to necessarily mean that it's time-based

1668
01:04:38,480 --> 01:04:41,359
uh like you know you can expire based on

1669
01:04:41,359 --> 01:04:43,680
in or you can be revoked based on an

1670
01:04:43,680 --> 01:04:46,640
event or on suspicion or on client

1671
01:04:46,640 --> 01:04:48,559
deregistration or any number of other

1672
01:04:48,559 --> 01:04:50,160
things

1673
01:04:50,160 --> 01:04:52,720
that's not clear from this text and so i

1674
01:04:52,720 --> 01:04:54,400
agree in expanding that

1675
01:04:54,400 --> 01:04:57,039
i don't think that this should have any

1676
01:04:57,039 --> 01:04:59,039
normative weight at all though because

1677
01:04:59,039 --> 01:05:02,640
this is this is security advice

1678
01:05:02,640 --> 01:05:04,960
about you know this is the thing about

1679
01:05:04,960 --> 01:05:07,760
bearer tokens and one way to

1680
01:05:07,760 --> 01:05:11,359
to limit the attack surface is to

1681
01:05:11,359 --> 01:05:13,280
limit the lifetime

1682
01:05:13,280 --> 01:05:16,640
and so i say get rid of this don't don't

1683
01:05:16,640 --> 01:05:19,280
call it a must or a should or anything

1684
01:05:19,280 --> 01:05:22,640
this is just contextual advice for how

1685
01:05:22,640 --> 01:05:24,319
to deal with some of the inherent

1686
01:05:24,319 --> 01:05:27,839
problems of bearer tokens

1687
01:05:29,520 --> 01:05:31,839
george

1688
01:05:32,559 --> 01:05:35,280
wow will it work you guys hear me yeah

1689
01:05:35,280 --> 01:05:36,480
yes

1690
01:05:36,480 --> 01:05:40,480
wow kind of fun um i guess the thing

1691
01:05:40,480 --> 01:05:42,319
you know a little bit to dustin's point

1692
01:05:42,319 --> 01:05:45,359
that i'm sort of struggling with here is

1693
01:05:45,359 --> 01:05:47,200
half of what we're trying to do in oauth

1694
01:05:47,200 --> 01:05:50,799
2.1 is remove things that are security

1695
01:05:50,799 --> 01:05:52,799
you know bad practice

1696
01:05:52,799 --> 01:05:55,440
right i mean otherwise we could say put

1697
01:05:55,440 --> 01:05:57,839
don't use implicit flow in the security

1698
01:05:57,839 --> 01:05:59,200
considerations

1699
01:05:59,200 --> 01:06:01,760
and leave it there so

1700
01:06:01,760 --> 01:06:03,039
if we

1701
01:06:03,039 --> 01:06:04,400
think that

1702
01:06:04,400 --> 01:06:05,200
um

1703
01:06:05,200 --> 01:06:06,559
allowing

1704
01:06:06,559 --> 01:06:10,240
forever access tokens is a bad idea

1705
01:06:10,240 --> 01:06:13,760
then it seems relevant to me that we

1706
01:06:13,760 --> 01:06:16,559
put some normative language around that

1707
01:06:16,559 --> 01:06:20,640
in the the text i mean as justin pointed

1708
01:06:20,640 --> 01:06:22,319
out it does you know you could limit it

1709
01:06:22,319 --> 01:06:23,119
to

1710
01:06:23,119 --> 01:06:26,319
end uses or any number of other things

1711
01:06:26,319 --> 01:06:29,359
um it doesn't have to be time based but

1712
01:06:29,359 --> 01:06:31,760
i worry about just leaving it open and

1713
01:06:31,760 --> 01:06:34,000
allowing you know bad practice to

1714
01:06:34,000 --> 01:06:36,400
continue

1715
01:06:37,760 --> 01:06:39,039
go ahead justin

1716
01:06:39,039 --> 01:06:42,319
oh justin richard uh just to victoria i

1717
01:06:42,319 --> 01:06:44,640
think you were yeah okay

1718
01:06:44,640 --> 01:06:46,880
fine uh i was just gonna say if this

1719
01:06:46,880 --> 01:06:48,960
does remain a normative requirement i

1720
01:06:48,960 --> 01:06:50,079
guarantee

1721
01:06:50,079 --> 01:06:52,160
that i am not going to follow it

1722
01:06:52,160 --> 01:06:55,359
um because i have active

1723
01:06:55,359 --> 01:06:57,599
i i mike says that i am a bad person

1724
01:06:57,599 --> 01:06:58,960
that's irrelevant to this part of the

1725
01:06:58,960 --> 01:07:01,200
conversation

1726
01:07:01,200 --> 01:07:02,000
um

1727
01:07:02,000 --> 01:07:03,680
no so uh

1728
01:07:03,680 --> 01:07:06,079
i have a number of

1729
01:07:06,079 --> 01:07:07,920
um sort of

1730
01:07:07,920 --> 01:07:10,480
you know larger system use cases where

1731
01:07:10,480 --> 01:07:12,559
access tokens are taking the place of

1732
01:07:12,559 --> 01:07:14,000
what we would have traditionally called

1733
01:07:14,000 --> 01:07:15,839
api keys

1734
01:07:15,839 --> 01:07:18,160
right we're not issuing them in the same

1735
01:07:18,160 --> 01:07:20,240
type of you know oauth going to a client

1736
01:07:20,240 --> 01:07:22,400
type of thing but from the 6750

1737
01:07:22,400 --> 01:07:24,960
perspective they are oauth tokens and

1738
01:07:24,960 --> 01:07:27,039
they're being configured in software and

1739
01:07:27,039 --> 01:07:28,720
those get rotated

1740
01:07:28,720 --> 01:07:31,280
when software gets redeployed or

1741
01:07:31,280 --> 01:07:33,440
somebody just needs to

1742
01:07:33,440 --> 01:07:35,359
you know re-bump their configuration or

1743
01:07:35,359 --> 01:07:37,039
something like that but they're not

1744
01:07:37,039 --> 01:07:38,160
being

1745
01:07:38,160 --> 01:07:41,200
requested in the sort of dynamic fashion

1746
01:07:41,200 --> 01:07:43,839
that we normally think of

1747
01:07:43,839 --> 01:07:46,640
we're okay with this because of the way

1748
01:07:46,640 --> 01:07:48,720
that we have a very sort of

1749
01:07:48,720 --> 01:07:51,200
very very limited space in which these

1750
01:07:51,200 --> 01:07:52,720
tokens get

1751
01:07:52,720 --> 01:07:55,520
uh that get issued they're not issued

1752
01:07:55,520 --> 01:07:58,960
using 6749 tooling at all

1753
01:07:58,960 --> 01:07:59,920
right

1754
01:07:59,920 --> 01:08:02,240
and so that's a case where we looked at

1755
01:08:02,240 --> 01:08:03,359
this

1756
01:08:03,359 --> 01:08:04,480
and

1757
01:08:04,480 --> 01:08:08,319
we actually decided to implement these

1758
01:08:08,319 --> 01:08:11,839
quote-unquote forever access tokens for

1759
01:08:11,839 --> 01:08:14,160
use in this system

1760
01:08:14,160 --> 01:08:16,799
because within our security model it

1761
01:08:16,799 --> 01:08:18,880
actually makes sense for that very very

1762
01:08:18,880 --> 01:08:20,319
limited case

1763
01:08:20,319 --> 01:08:22,080
so that's that's one of the reasons why

1764
01:08:22,080 --> 01:08:24,960
to me this needs to be contextual advice

1765
01:08:24,960 --> 01:08:27,279
and non-normative requirement

1766
01:08:27,279 --> 01:08:28,799
i absolutely understand where george is

1767
01:08:28,799 --> 01:08:30,880
coming from

1768
01:08:30,880 --> 01:08:32,880
this should be giving all of the best

1769
01:08:32,880 --> 01:08:34,399
advice and

1770
01:08:34,399 --> 01:08:37,279
that is good default advice

1771
01:08:37,279 --> 01:08:38,719
but you should be able to read and

1772
01:08:38,719 --> 01:08:40,640
understand that and say

1773
01:08:40,640 --> 01:08:42,479
i'm pretty sure i know

1774
01:08:42,479 --> 01:08:45,198
why this doesn't apply

1775
01:08:45,198 --> 01:08:47,120
that's fair i may also say that if you

1776
01:08:47,120 --> 01:08:49,600
are not using any of the 6749 tooling to

1777
01:08:49,600 --> 01:08:51,920
get the access token then really it is

1778
01:08:51,920 --> 01:08:55,198
an api key not a no auth bearer token

1779
01:08:55,198 --> 01:08:56,560
in which case

1780
01:08:56,560 --> 01:08:58,880
n a

1781
01:09:01,120 --> 01:09:04,479
so a largely a victorio octa i largely

1782
01:09:04,479 --> 01:09:07,120
agree with the spirit that has been

1783
01:09:07,120 --> 01:09:09,600
expressed so far i think that the intent

1784
01:09:09,600 --> 01:09:10,880
there is good

1785
01:09:10,880 --> 01:09:13,600
but the way in which it's expressed is

1786
01:09:13,600 --> 01:09:17,040
uh anachronistic and a bit simplistic

1787
01:09:17,040 --> 01:09:18,399
in today's world in which it's

1788
01:09:18,399 --> 01:09:19,679
fashionable to do continuous

1789
01:09:19,679 --> 01:09:22,479
authentication as long as you are on top

1790
01:09:22,479 --> 01:09:24,719
of a reason for which you are still okay

1791
01:09:24,719 --> 01:09:26,960
with that particular token the token can

1792
01:09:26,960 --> 01:09:30,080
technically live forever let's say that

1793
01:09:30,080 --> 01:09:32,158
again they want to use fashionable stuff

1794
01:09:32,158 --> 01:09:34,719
like zero trust and similar but if you

1795
01:09:34,719 --> 01:09:37,198
are using uh introspection for example

1796
01:09:37,198 --> 01:09:39,359
or any other mechanism in which you can

1797
01:09:39,359 --> 01:09:41,600
deal with a revocation of tokens one

1798
01:09:41,600 --> 01:09:44,000
circumstances allow or circumstances

1799
01:09:44,000 --> 01:09:46,640
suggest that it's time to do it as long

1800
01:09:46,640 --> 01:09:48,880
as those circumstances never arise and

1801
01:09:48,880 --> 01:09:51,040
you are still okay with the security

1802
01:09:51,040 --> 01:09:53,600
posture of the color that stuff

1803
01:09:53,600 --> 01:09:56,320
technically can live forever i do agree

1804
01:09:56,320 --> 01:09:58,560
with george but i think about it

1805
01:09:58,560 --> 01:10:00,960
well i don't know if we can have a

1806
01:10:00,960 --> 01:10:03,199
normative text because of the nature of

1807
01:10:03,199 --> 01:10:04,640
what i just described

1808
01:10:04,640 --> 01:10:07,440
it might be difficult to describe in

1809
01:10:07,440 --> 01:10:08,880
formal terms

1810
01:10:08,880 --> 01:10:11,440
what that means but i do think that we

1811
01:10:11,440 --> 01:10:13,760
need to help people understand that they

1812
01:10:13,760 --> 01:10:15,920
do need to do the work that we shouldn't

1813
01:10:15,920 --> 01:10:18,400
just like do a fire and forget like here

1814
01:10:18,400 --> 01:10:20,239
is the talk and use it forever it's more

1815
01:10:20,239 --> 01:10:23,199
of a make sure that you have a

1816
01:10:23,199 --> 01:10:25,600
sensible criteria to decide whether this

1817
01:10:25,600 --> 01:10:28,080
thing should still be allowed to operate

1818
01:10:28,080 --> 01:10:30,800
or if instead circumstances has changed

1819
01:10:30,800 --> 01:10:32,400
but i do agree that

1820
01:10:32,400 --> 01:10:35,040
that sentence is just not applicable in

1821
01:10:35,040 --> 01:10:37,679
a variety of scenarios like the one that

1822
01:10:37,679 --> 01:10:39,520
justin just mentioned it sounds like

1823
01:10:39,520 --> 01:10:42,159
what you're saying is the as

1824
01:10:42,159 --> 01:10:45,440
must have a way to revoke a token if it

1825
01:10:45,440 --> 01:10:46,560
wants to

1826
01:10:46,560 --> 01:10:48,960
under its own criteria that was one

1827
01:10:48,960 --> 01:10:50,480
example of

1828
01:10:50,480 --> 01:10:52,640
a token that lives forever because

1829
01:10:52,640 --> 01:10:53,760
somehow

1830
01:10:53,760 --> 01:10:56,080
uh like you don't know what you maybe

1831
01:10:56,080 --> 01:10:58,080
your user has done something that

1832
01:10:58,080 --> 01:11:00,000
suggests that the circumstances are

1833
01:11:00,000 --> 01:11:02,640
still yeah i'm still trusting this thing

1834
01:11:02,640 --> 01:11:05,360
but uh it's just one example like the

1835
01:11:05,360 --> 01:11:07,120
the example that justin brought up is

1836
01:11:07,120 --> 01:11:08,320
different but

1837
01:11:08,320 --> 01:11:10,480
just as valid so that's why i'm saying

1838
01:11:10,480 --> 01:11:12,000
it's going to be difficult to find a

1839
01:11:12,000 --> 01:11:14,560
normative language that will encompass

1840
01:11:14,560 --> 01:11:16,080
all of this stuff well i was i was

1841
01:11:16,080 --> 01:11:18,000
trying to find something normative that

1842
01:11:18,000 --> 01:11:20,480
is also

1843
01:11:20,560 --> 01:11:23,920
least less specific to particular cases

1844
01:11:23,920 --> 01:11:27,040
so that like what you're asking for is

1845
01:11:27,040 --> 01:11:27,920
don't

1846
01:11:27,920 --> 01:11:30,480
don't hard code these keys such that

1847
01:11:30,480 --> 01:11:31,840
they're just hard-coded everywhere like

1848
01:11:31,840 --> 01:11:33,199
make sure that you're building a way to

1849
01:11:33,199 --> 01:11:35,679
revoke them but the particular reason

1850
01:11:35,679 --> 01:11:37,199
for revocation

1851
01:11:37,199 --> 01:11:38,640
is not something we can normatively

1852
01:11:38,640 --> 01:11:41,120
require like say or the mechanism that

1853
01:11:41,120 --> 01:11:43,600
you use to perform the thing is kind of

1854
01:11:43,600 --> 01:11:45,760
like maybe we can enumerate a couple to

1855
01:11:45,760 --> 01:11:47,920
give people ideas but we can't enforce

1856
01:11:47,920 --> 01:11:50,080
and

1857
01:11:51,199 --> 01:11:53,360
like for example introspection is a good

1858
01:11:53,360 --> 01:11:54,719
way of saying

1859
01:11:54,719 --> 01:11:57,280
you must call home or if you don't want

1860
01:11:57,280 --> 01:11:59,040
to do introspection but you want to have

1861
01:11:59,040 --> 01:12:00,719
i don't know uh

1862
01:12:00,719 --> 01:12:04,239
um allow lists or block lists for your

1863
01:12:04,239 --> 01:12:07,040
their tokens like ultimately i don't

1864
01:12:07,040 --> 01:12:09,520
feel that we can be in a position of

1865
01:12:09,520 --> 01:12:12,080
imposing to people what's best for their

1866
01:12:12,080 --> 01:12:13,360
architecture

1867
01:12:13,360 --> 01:12:15,760
it's more of a matter of like make sure

1868
01:12:15,760 --> 01:12:17,440
that you don't paint yourself in a

1869
01:12:17,440 --> 01:12:20,320
corner and give tokens that once out

1870
01:12:20,320 --> 01:12:21,920
they are out of your control and they

1871
01:12:21,920 --> 01:12:24,960
can be used forever

1872
01:12:26,320 --> 01:12:28,239
seeing some nodding from george okay

1873
01:12:28,239 --> 01:12:29,760
george

1874
01:12:29,760 --> 01:12:31,679
yeah so i think

1875
01:12:31,679 --> 01:12:34,080
my biggest concern is sort of what you

1876
01:12:34,080 --> 01:12:36,080
stumbled across aaron which is this is

1877
01:12:36,080 --> 01:12:37,920
in the security considerations and

1878
01:12:37,920 --> 01:12:40,400
probably nobody ready so

1879
01:12:40,400 --> 01:12:43,120
i i i i'm you know

1880
01:12:43,120 --> 01:12:45,679
i'm hearing the the difficulty of coming

1881
01:12:45,679 --> 01:12:48,080
up with normative texts to sort of imply

1882
01:12:48,080 --> 01:12:50,320
the correct security behavior but

1883
01:12:50,320 --> 01:12:52,400
somehow i think we have to make it more

1884
01:12:52,400 --> 01:12:53,600
clear

1885
01:12:53,600 --> 01:12:56,239
in the default section

1886
01:12:56,239 --> 01:12:58,000
of 2.1

1887
01:12:58,000 --> 01:12:59,920
here are all these you know here's some

1888
01:12:59,920 --> 01:13:01,199
examples

1889
01:13:01,199 --> 01:13:02,560
effectively you need to protect the

1890
01:13:02,560 --> 01:13:05,199
access tokens as vittorio just said and

1891
01:13:05,199 --> 01:13:07,040
here's some you know different ways that

1892
01:13:07,040 --> 01:13:08,719
you can do that right

1893
01:13:08,719 --> 01:13:11,679
there isn't you know just a reference to

1894
01:13:11,679 --> 01:13:13,199
go read the section in the security

1895
01:13:13,199 --> 01:13:16,560
considerations um so that we hopefully

1896
01:13:16,560 --> 01:13:18,800
do a little bit better education even if

1897
01:13:18,800 --> 01:13:21,760
it's non-normative

1898
01:13:22,480 --> 01:13:23,360
okay

1899
01:13:23,360 --> 01:13:24,480
peter

1900
01:13:24,480 --> 01:13:27,199
peter castleman microsoft

1901
01:13:27,199 --> 01:13:27,920
so

1902
01:13:27,920 --> 01:13:29,040
i

1903
01:13:29,040 --> 01:13:30,560
i don't have a particular problem with

1904
01:13:30,560 --> 01:13:32,400
this idea that the lifetime of the token

1905
01:13:32,400 --> 01:13:34,400
must be limited i actually think it's

1906
01:13:34,400 --> 01:13:36,320
good because if you don't have the

1907
01:13:36,320 --> 01:13:38,880
notion of an end state you have no way

1908
01:13:38,880 --> 01:13:40,159
to get there

1909
01:13:40,159 --> 01:13:42,719
so to vittorio's point

1910
01:13:42,719 --> 01:13:44,159
uh

1911
01:13:44,159 --> 01:13:45,760
by defining an end state you have to

1912
01:13:45,760 --> 01:13:47,520
define mechanisms to get there right so

1913
01:13:47,520 --> 01:13:49,920
it's revocation mechanisms it's events

1914
01:13:49,920 --> 01:13:52,159
uh it may be expiration times right

1915
01:13:52,159 --> 01:13:55,440
there may be a number of those ways

1916
01:13:55,440 --> 01:13:57,199
you may want to consider giving guidance

1917
01:13:57,199 --> 01:13:59,520
on what limit it means right so that

1918
01:13:59,520 --> 01:14:00,880
could be

1919
01:14:00,880 --> 01:14:04,159
defined or enacted in a number of ways

1920
01:14:04,159 --> 01:14:06,800
but i think if you omit it forever is an

1921
01:14:06,800 --> 01:14:09,920
incredibly long time right and and often

1922
01:14:09,920 --> 01:14:11,840
doesn't last more than say a year or

1923
01:14:11,840 --> 01:14:13,600
five years or something like that right

1924
01:14:13,600 --> 01:14:14,640
so

1925
01:14:14,640 --> 01:14:16,480
um

1926
01:14:16,480 --> 01:14:18,080
so i think i actually don't have problem

1927
01:14:18,080 --> 01:14:19,840
with that statement it's more about how

1928
01:14:19,840 --> 01:14:22,000
you define limited and giving guidance

1929
01:14:22,000 --> 01:14:23,600
to the implementers around how they

1930
01:14:23,600 --> 01:14:25,280
construct policies

1931
01:14:25,280 --> 01:14:28,560
but having the ability to revoke

1932
01:14:28,560 --> 01:14:30,640
in case something goes wrong

1933
01:14:30,640 --> 01:14:31,920
if you don't have that you're going to

1934
01:14:31,920 --> 01:14:36,360
find yourself in a really nasty place

1935
01:14:42,320 --> 01:14:44,960
okay that's it again

1936
01:14:44,960 --> 01:14:46,239
good

1937
01:14:46,239 --> 01:14:48,400
yeah okay i think i think that's

1938
01:14:48,400 --> 01:14:50,320
i think that's enough on that um that

1939
01:14:50,320 --> 01:14:52,960
was helpful i will

1940
01:14:52,960 --> 01:14:55,520
add that to my list and get back to

1941
01:14:55,520 --> 01:14:57,040
report back on the mailing list i guess

1942
01:14:57,040 --> 01:14:59,360
awesome yeah absolutely okay i think we

1943
01:14:59,360 --> 01:15:01,920
have one more

1944
01:15:03,440 --> 01:15:05,360
ah yes

1945
01:15:05,360 --> 01:15:08,719
uh this was identified

1946
01:15:08,719 --> 01:15:10,880
opened as an issue on github so this may

1947
01:15:10,880 --> 01:15:12,159
be the first time people are aware of

1948
01:15:12,159 --> 01:15:14,640
this um

1949
01:15:14,640 --> 01:15:17,440
the from the native apps bcp which has

1950
01:15:17,440 --> 01:15:19,520
now been pulled into

1951
01:15:19,520 --> 01:15:21,520
uh oauth 2.1

1952
01:15:21,520 --> 01:15:24,080
it actually has a requirement that

1953
01:15:24,080 --> 01:15:25,679
authorization servers that support the

1954
01:15:25,679 --> 01:15:27,840
native apps bcp

1955
01:15:27,840 --> 01:15:30,560
all support support all three of these

1956
01:15:30,560 --> 01:15:32,800
redirect uri methods for native apps

1957
01:15:32,800 --> 01:15:34,960
which is private ui schemes so that's

1958
01:15:34,960 --> 01:15:36,159
claiming uh

1959
01:15:36,159 --> 01:15:38,719
or defining your own url scheme and it

1960
01:15:38,719 --> 01:15:40,640
gives some examples of ideally using

1961
01:15:40,640 --> 01:15:43,040
like reverse dns based ones but that's

1962
01:15:43,040 --> 01:15:45,280
not a requirement either um claiming

1963
01:15:45,280 --> 01:15:47,280
https urls which is a feature that ios

1964
01:15:47,280 --> 01:15:49,840
and android platforms support

1965
01:15:49,840 --> 01:15:52,400
and also the loopback interface of just

1966
01:15:52,400 --> 01:15:55,040
opening up a port on the device

1967
01:15:55,040 --> 01:15:58,320
and authorization servers must offer at

1968
01:15:58,320 --> 01:16:01,120
least these three

1969
01:16:01,120 --> 01:16:02,320
and then it was pointed out that there

1970
01:16:02,320 --> 01:16:04,640
are many times that a for a particular

1971
01:16:04,640 --> 01:16:06,239
deployment

1972
01:16:06,239 --> 01:16:07,520
you actually

1973
01:16:07,520 --> 01:16:10,480
don't want to allow any one of these

1974
01:16:10,480 --> 01:16:11,840
in particular

1975
01:16:11,840 --> 01:16:14,080
for various reasons

1976
01:16:14,080 --> 01:16:15,760
for example

1977
01:16:15,760 --> 01:16:17,600
fabi actually goes and prohibits

1978
01:16:17,600 --> 01:16:20,159
prohibits private url ui schemes because

1979
01:16:20,159 --> 01:16:22,480
they are not nearly as secure as

1980
01:16:22,480 --> 01:16:25,120
registered https urls

1981
01:16:25,120 --> 01:16:28,080
so technically if you follow fappy you

1982
01:16:28,080 --> 01:16:29,600
also are not following the native apps

1983
01:16:29,600 --> 01:16:30,880
pcp

1984
01:16:30,880 --> 01:16:31,760
so

1985
01:16:31,760 --> 01:16:33,520
that is the current

1986
01:16:33,520 --> 01:16:35,600
that is currently the way that it is

1987
01:16:35,600 --> 01:16:37,280
written um

1988
01:16:37,280 --> 01:16:39,199
so now that this gets brought into oauth

1989
01:16:39,199 --> 01:16:41,040
2.1

1990
01:16:41,040 --> 01:16:43,040
it seems a little bit weird again to say

1991
01:16:43,040 --> 01:16:44,480
that if you're following

1992
01:16:44,480 --> 01:16:46,080
tapi's rules which are meant to be more

1993
01:16:46,080 --> 01:16:49,040
secure that you're then also not able to

1994
01:16:49,040 --> 01:16:51,679
follow 2.1 so

1995
01:16:51,679 --> 01:16:53,600
again we have the sort of conflict that

1996
01:16:53,600 --> 01:16:54,800
needs to get

1997
01:16:54,800 --> 01:16:57,040
reconciled somehow

1998
01:16:57,040 --> 01:16:58,600
daniel

1999
01:16:58,600 --> 01:17:00,159
danielfatiers.com

2000
01:17:00,159 --> 01:17:01,360
i'm not sure if there's actually

2001
01:17:01,360 --> 01:17:03,280
conflict there because it hinges on

2002
01:17:03,280 --> 01:17:04,960
whether you want to support native apps

2003
01:17:04,960 --> 01:17:06,080
at all

2004
01:17:06,080 --> 01:17:08,480
um and i know a couple of deployments

2005
01:17:08,480 --> 01:17:09,760
that don't

2006
01:17:09,760 --> 01:17:11,280
intend so that intentionally don't

2007
01:17:11,280 --> 01:17:13,520
support native apps i think the same

2008
01:17:13,520 --> 01:17:15,440
applies to floppy

2009
01:17:15,440 --> 01:17:16,800
so

2010
01:17:16,800 --> 01:17:18,239
one could say that if you want to

2011
01:17:18,239 --> 01:17:20,080
support native apps then you have to

2012
01:17:20,080 --> 01:17:20,960
offer

2013
01:17:20,960 --> 01:17:23,679
some of these options at least

2014
01:17:23,679 --> 01:17:25,920
but you can also just say not to support

2015
01:17:25,920 --> 01:17:27,920
native apps

2016
01:17:27,920 --> 01:17:32,080
but fappy native apps can also use fappy

2017
01:17:32,080 --> 01:17:33,520
so right

2018
01:17:33,520 --> 01:17:35,440
yeah that's where the conflict

2019
01:17:35,440 --> 01:17:37,759
happens

2020
01:17:38,400 --> 01:17:40,400
yes um

2021
01:17:40,400 --> 01:17:41,920
so i'm i'm

2022
01:17:41,920 --> 01:17:43,920
not sure what the exact wording is in

2023
01:17:43,920 --> 01:17:46,800
puppy right now but

2024
01:17:47,440 --> 01:17:49,679
yeah so probably it's a good idea to

2025
01:17:49,679 --> 01:17:54,440
leave the door for not supporting this

2026
01:18:02,719 --> 01:18:04,719
i know for sure that there are customers

2027
01:18:04,719 --> 01:18:07,520
that want to get caught dead supporting

2028
01:18:07,520 --> 01:18:09,600
the loopback interface

2029
01:18:09,600 --> 01:18:11,280
so having a mask that includes the

2030
01:18:11,280 --> 01:18:13,199
finger will automatically means that

2031
01:18:13,199 --> 01:18:16,000
those people will be out of compliance

2032
01:18:16,000 --> 01:18:18,480
so i'm strongly in favor on not having a

2033
01:18:18,480 --> 01:18:20,000
must in there

2034
01:18:20,000 --> 01:18:21,600
we could get rid of a loopback that

2035
01:18:21,600 --> 01:18:23,199
would be fantastic but i know it would

2036
01:18:23,199 --> 01:18:25,600
be too good so at the very least i would

2037
01:18:25,600 --> 01:18:26,560
not

2038
01:18:26,560 --> 01:18:28,400
force people to implement it if they

2039
01:18:28,400 --> 01:18:31,759
want to do a native client

2040
01:18:32,960 --> 01:18:35,360
brian

2041
01:18:39,679 --> 01:18:41,360
i'm not sure what i was going to say now

2042
01:18:41,360 --> 01:18:43,760
i get closer to the mic

2043
01:18:43,760 --> 01:18:45,840
i don't think there's neces it's not

2044
01:18:45,840 --> 01:18:48,640
uncommon for profiles like fappy or

2045
01:18:48,640 --> 01:18:51,120
otherwise to

2046
01:18:51,120 --> 01:18:53,360
further narrow what's allowed based on

2047
01:18:53,360 --> 01:18:54,400
other things

2048
01:18:54,400 --> 01:18:57,679
i mean for example fappy disallows

2049
01:18:57,679 --> 01:18:59,040
client secret

2050
01:18:59,040 --> 01:19:00,800
authentication

2051
01:19:00,800 --> 01:19:02,560
which is required by the base so i don't

2052
01:19:02,560 --> 01:19:04,000
know that there's inherently a

2053
01:19:04,000 --> 01:19:05,840
contradiction

2054
01:19:05,840 --> 01:19:07,199
that said though i

2055
01:19:07,199 --> 01:19:10,000
i think the way that this text is being

2056
01:19:10,000 --> 01:19:12,560
pulled from a bcp about a very narrow

2057
01:19:12,560 --> 01:19:13,920
context

2058
01:19:13,920 --> 01:19:16,480
and over it would probably be

2059
01:19:16,480 --> 01:19:20,080
better to somehow qualify it with

2060
01:19:20,080 --> 01:19:22,640
not must or under the conditions that

2061
01:19:22,640 --> 01:19:25,040
you're supporting native apps you should

2062
01:19:25,040 --> 01:19:27,760
do these things

2063
01:19:28,000 --> 01:19:30,320
yeah so it's both it's both okay and i

2064
01:19:30,320 --> 01:19:32,159
think you should change it

2065
01:19:32,159 --> 01:19:36,920
great if that makes if that makes sense

2066
01:19:38,400 --> 01:19:42,239
um yeah dave tong money hub um yeah i i

2067
01:19:42,239 --> 01:19:43,600
kind of agree with what brian's saying i

2068
01:19:43,600 --> 01:19:45,120
definitely think the wording needs to be

2069
01:19:45,120 --> 01:19:46,880
changed i mean if i understand

2070
01:19:46,880 --> 01:19:49,280
compliance you know it's only if i

2071
01:19:49,280 --> 01:19:50,960
fully support native apps i need to

2072
01:19:50,960 --> 01:19:52,480
rough all three so maybe if i want to

2073
01:19:52,480 --> 01:19:55,280
support not fully native apps i get a

2074
01:19:55,280 --> 01:19:56,560
new support too so i think it definitely

2075
01:19:56,560 --> 01:19:58,560
needs the wording is a bit strange i

2076
01:19:58,560 --> 01:20:00,800
also i think it's highly unlikely that

2077
01:20:00,800 --> 01:20:03,280
any authorization servers

2078
01:20:03,280 --> 01:20:04,719
you know many of them will just not be

2079
01:20:04,719 --> 01:20:06,400
compliant with the security bcp because

2080
01:20:06,400 --> 01:20:07,600
i don't i don't think that's the

2081
01:20:07,600 --> 01:20:10,000
intention surely it must be that these

2082
01:20:10,000 --> 01:20:11,600
are three different ways of doing it

2083
01:20:11,600 --> 01:20:13,520
which you could support

2084
01:20:13,520 --> 01:20:15,679
so yeah that would just be my suggestion

2085
01:20:15,679 --> 01:20:16,960
and i

2086
01:20:16,960 --> 01:20:18,400
but also if we're trying to make things

2087
01:20:18,400 --> 01:20:20,800
more secure um

2088
01:20:20,800 --> 01:20:22,880
unless there are is a good reason to

2089
01:20:22,880 --> 01:20:25,920
support the the pri uh private uri

2090
01:20:25,920 --> 01:20:26,800
scheme

2091
01:20:26,800 --> 01:20:28,880
then maybe that that should be excluded

2092
01:20:28,880 --> 01:20:31,280
because you know the reason we exclude

2093
01:20:31,280 --> 01:20:32,960
it in fappy was because of you know the

2094
01:20:32,960 --> 01:20:35,679
fact that in you know many the mobile

2095
01:20:35,679 --> 01:20:37,679
systems you know different apps could

2096
01:20:37,679 --> 01:20:40,400
claim the same private uri scheme so i

2097
01:20:40,400 --> 01:20:42,000
mean my the starting point i would say

2098
01:20:42,000 --> 01:20:43,600
is to remove that unless there's a good

2099
01:20:43,600 --> 01:20:47,320
reason to keep it in

2100
01:20:47,840 --> 01:20:50,239
yeah that's another option is to

2101
01:20:50,239 --> 01:20:51,840
to

2102
01:20:51,840 --> 01:20:53,040
require

2103
01:20:53,040 --> 01:20:55,920
claimed url schemes and loopback

2104
01:20:55,920 --> 01:20:57,280
and

2105
01:20:57,280 --> 01:20:58,880
make the private uri scheme optional

2106
01:20:58,880 --> 01:21:01,440
just mention that it's a possibility

2107
01:21:01,440 --> 01:21:02,400
or

2108
01:21:02,400 --> 01:21:05,440
just not require

2109
01:21:05,520 --> 01:21:09,120
not require any of them i'm i i'm kind

2110
01:21:09,120 --> 01:21:10,639
of curious what the reason actually was

2111
01:21:10,639 --> 01:21:12,960
for the requirement of offering all

2112
01:21:12,960 --> 01:21:15,120
three of them in the first place and i

2113
01:21:15,120 --> 01:21:16,880
kind of suspect it was

2114
01:21:16,880 --> 01:21:18,639
a

2115
01:21:18,639 --> 01:21:22,000
optimistic attempt at interoperability

2116
01:21:22,000 --> 01:21:23,199
which

2117
01:21:23,199 --> 01:21:24,800
kind of seems like maybe that wasn't the

2118
01:21:24,800 --> 01:21:29,239
right goal for that feature

2119
01:21:31,040 --> 01:21:33,280
george

2120
01:21:33,280 --> 01:21:34,639
yeah so i'm

2121
01:21:34,639 --> 01:21:37,760
uh i think i'm in favor of not

2122
01:21:37,760 --> 01:21:40,320
explicitly forcing authorization servers

2123
01:21:40,320 --> 01:21:43,120
to support all these mechanisms

2124
01:21:43,120 --> 01:21:45,440
and i am in favor

2125
01:21:45,440 --> 01:21:46,480
sorry

2126
01:21:46,480 --> 01:21:48,320
i am in favor of

2127
01:21:48,320 --> 01:21:50,080
ordering them by

2128
01:21:50,080 --> 01:21:52,960
best security practices right so we

2129
01:21:52,960 --> 01:21:54,800
should be telling people

2130
01:21:54,800 --> 01:21:56,639
use the claimed http

2131
01:21:56,639 --> 01:21:59,040
https urls

2132
01:21:59,040 --> 01:22:00,000
um

2133
01:22:00,000 --> 01:22:01,520
right and

2134
01:22:01,520 --> 01:22:03,679
and unless you have a really good reason

2135
01:22:03,679 --> 01:22:06,320
to do something else just don't

2136
01:22:06,320 --> 01:22:08,960
right um you know if you have to support

2137
01:22:08,960 --> 01:22:11,760
some you know legacy version of os that

2138
01:22:11,760 --> 01:22:13,760
maybe doesn't support it or whatever

2139
01:22:13,760 --> 01:22:15,840
well then you know maybe you have to

2140
01:22:15,840 --> 01:22:17,280
right and you have a really good reason

2141
01:22:17,280 --> 01:22:18,480
for it but

2142
01:22:18,480 --> 01:22:20,239
otherwise i think we should be pushing

2143
01:22:20,239 --> 01:22:22,719
people toward the secure options which

2144
01:22:22,719 --> 01:22:25,280
at this point is you know claim

2145
01:22:25,280 --> 01:22:28,800
https urls um and you know whether we

2146
01:22:28,800 --> 01:22:30,320
want to put other

2147
01:22:30,320 --> 01:22:31,600
you know

2148
01:22:31,600 --> 01:22:34,159
guidance in here around other ways you

2149
01:22:34,159 --> 01:22:36,159
know that the os's are now supporting

2150
01:22:36,159 --> 01:22:38,159
you know to get app at the stations

2151
01:22:38,159 --> 01:22:40,480
that's probably a different topic but

2152
01:22:40,480 --> 01:22:43,678
in this particular case

2153
01:22:43,760 --> 01:22:45,920
i would much prefer we sort of push

2154
01:22:45,920 --> 01:22:50,199
people toward the secure solution

2155
01:22:59,440 --> 01:23:01,840
okay

2156
01:23:01,840 --> 01:23:05,440
any other comments any

2157
01:23:05,600 --> 01:23:07,199
okay

2158
01:23:07,199 --> 01:23:08,239
so

2159
01:23:08,239 --> 01:23:10,320
let's try to summarize this one it

2160
01:23:10,320 --> 01:23:12,239
sounds like

2161
01:23:12,239 --> 01:23:15,440
sounds like we're going to

2162
01:23:17,120 --> 01:23:20,719
in the draft reorder the the list uh

2163
01:23:20,719 --> 01:23:21,679
claimed

2164
01:23:21,679 --> 01:23:24,080
https urls first loop back second

2165
01:23:24,080 --> 01:23:26,480
private private url schemes third

2166
01:23:26,480 --> 01:23:27,840
just at least make sure they're ordered

2167
01:23:27,840 --> 01:23:29,490
that way

2168
01:23:29,490 --> 01:23:32,529
[Music]

2169
01:23:32,840 --> 01:23:35,520
um and then

2170
01:23:35,520 --> 01:23:38,320
just remove the sentence that says

2171
01:23:38,320 --> 01:23:40,400
that they must the as must support the

2172
01:23:40,400 --> 01:23:41,920
three

2173
01:23:41,920 --> 01:23:44,560
um because

2174
01:23:44,560 --> 01:23:46,400
nobody cares about that requirement

2175
01:23:46,400 --> 01:23:49,679
apparently is what i'm hearing

2176
01:23:49,679 --> 01:23:50,800
um

2177
01:23:50,800 --> 01:23:52,880
and then maybe some fiddling about

2178
01:23:52,880 --> 01:23:54,400
explaining why they're in a certain

2179
01:23:54,400 --> 01:23:57,199
order or whatever but

2180
01:23:57,360 --> 01:23:59,440
i'm seeing some

2181
01:23:59,440 --> 01:24:02,879
just removing the the

2182
01:24:04,400 --> 01:24:06,719
url first loopback second

2183
01:24:06,719 --> 01:24:09,600
private ui scheme at the bottom

2184
01:24:09,600 --> 01:24:11,679
um

2185
01:24:11,679 --> 01:24:13,920
maybe even adding in some text about why

2186
01:24:13,920 --> 01:24:17,840
you would want to support it at all

2187
01:24:18,080 --> 01:24:20,639
just to better set the context

2188
01:24:20,639 --> 01:24:22,480
um yeah

2189
01:24:22,480 --> 01:24:25,360
i'm happy with that okay good

2190
01:24:25,360 --> 01:24:27,920
i believe that's the last slide no one

2191
01:24:27,920 --> 01:24:28,880
more

2192
01:24:28,880 --> 01:24:30,719
oh just okay

2193
01:24:30,719 --> 01:24:32,719
um yes so those are the three that i

2194
01:24:32,719 --> 01:24:34,080
want to talk about today i felt like

2195
01:24:34,080 --> 01:24:35,360
they were

2196
01:24:35,360 --> 01:24:36,239
more

2197
01:24:36,239 --> 01:24:38,480
complicated than a lot of the other ones

2198
01:24:38,480 --> 01:24:41,839
and requires more

2199
01:24:42,880 --> 01:24:44,719
joint thinking power so there are

2200
01:24:44,719 --> 01:24:47,760
however a lot more things to talk about

2201
01:24:47,760 --> 01:24:49,199
this is not done

2202
01:24:49,199 --> 01:24:51,280
um and i would very much appreciate more

2203
01:24:51,280 --> 01:24:53,280
of the discussion happening

2204
01:24:53,280 --> 01:24:55,600
um asynchronously on those

2205
01:24:55,600 --> 01:24:58,639
so the list i'm keeping track of is here

2206
01:24:58,639 --> 01:25:00,560
that is where anything that's open is

2207
01:25:00,560 --> 01:25:01,600
still

2208
01:25:01,600 --> 01:25:03,840
i'm going to close it at some point one

2209
01:25:03,840 --> 01:25:05,360
way or another but before this is

2210
01:25:05,360 --> 01:25:06,719
considered

2211
01:25:06,719 --> 01:25:07,679
done

2212
01:25:07,679 --> 01:25:08,960
um

2213
01:25:08,960 --> 01:25:10,560
if you want to

2214
01:25:10,560 --> 01:25:12,639
to chat on github that makes it very

2215
01:25:12,639 --> 01:25:14,080
easy for the editors to keep track of

2216
01:25:14,080 --> 01:25:16,320
the discussion i appreciate that if you

2217
01:25:16,320 --> 01:25:17,440
are would rather discuss it on the

2218
01:25:17,440 --> 01:25:19,440
mailing list that's fine too we'll pull

2219
01:25:19,440 --> 01:25:21,280
it in

2220
01:25:21,280 --> 01:25:24,480
but yes please

2221
01:25:24,960 --> 01:25:26,239
we would all appreciate some help with

2222
01:25:26,239 --> 01:25:27,520
this there's still quite a bit more to

2223
01:25:27,520 --> 01:25:28,560
go

2224
01:25:28,560 --> 01:25:30,400
so yeah typically we want to

2225
01:25:30,400 --> 01:25:32,159
have those discussions on the mailing

2226
01:25:32,159 --> 01:25:34,480
list just for the records right and and

2227
01:25:34,480 --> 01:25:36,960
that's a idf process

2228
01:25:36,960 --> 01:25:39,360
but yeah you can send those also to to

2229
01:25:39,360 --> 01:25:42,560
the mailing list just so for people can

2230
01:25:42,560 --> 01:25:44,560
go and take a look at the

2231
01:25:44,560 --> 01:25:46,239
github and see what's going on there

2232
01:25:46,239 --> 01:25:48,400
okay yeah i'm happy to uh sort of post

2233
01:25:48,400 --> 01:25:50,480
the state of the state of the draft to

2234
01:25:50,480 --> 01:25:52,480
the mailing list um to let people know

2235
01:25:52,480 --> 01:25:53,920
what's going on and call out some of

2236
01:25:53,920 --> 01:25:55,440
those issues i do feel like some of the

2237
01:25:55,440 --> 01:25:57,199
issues are

2238
01:25:57,199 --> 01:25:59,840
relatively minor so i'm less concerned

2239
01:25:59,840 --> 01:26:02,400
about about the the whole

2240
01:26:02,400 --> 01:26:04,480
mailing list record for some of them uh

2241
01:26:04,480 --> 01:26:05,760
obviously some of them are a little bit

2242
01:26:05,760 --> 01:26:06,639
more

2243
01:26:06,639 --> 01:26:10,560
substantive okay brian

2244
01:26:13,199 --> 01:26:14,960
sort of following along not and i only

2245
01:26:14,960 --> 01:26:16,560
sent an email this morning about it but

2246
01:26:16,560 --> 01:26:18,080
the the idea

2247
01:26:18,080 --> 01:26:20,320
closer to michael damn it sorry

2248
01:26:20,320 --> 01:26:21,280
yeah

2249
01:26:21,280 --> 01:26:22,960
only just followed up this morning but

2250
01:26:22,960 --> 01:26:24,719
back at the end of last year there was a

2251
01:26:24,719 --> 01:26:26,560
threat on the mailing list about

2252
01:26:26,560 --> 01:26:29,840
the credentialed client type and

2253
01:26:29,840 --> 01:26:31,520
kind of nothing ever happened and it was

2254
01:26:31,520 --> 01:26:33,679
not nothing was done in the latest draft

2255
01:26:33,679 --> 01:26:35,440
about it and so i wasn't sure if that

2256
01:26:35,440 --> 01:26:37,199
was a

2257
01:26:37,199 --> 01:26:39,360
forgotten about or a

2258
01:26:39,360 --> 01:26:41,599
um

2259
01:26:42,719 --> 01:26:44,639
i'm most i'm mostly just wondering if

2260
01:26:44,639 --> 01:26:46,719
should i put an issue so it's followed

2261
01:26:46,719 --> 01:26:51,280
were you gonna tell me to screw off

2262
01:26:51,280 --> 01:26:53,679
did it just get forgotten

2263
01:26:53,679 --> 01:26:55,920
yeah

2264
01:26:56,000 --> 01:26:58,080
how should i proceed in general i guess

2265
01:26:58,080 --> 01:27:00,159
um no they want to talk about it now i

2266
01:27:00,159 --> 01:27:01,520
had completely forgotten about that

2267
01:27:01,520 --> 01:27:03,840
issue um i guess my recollection of that

2268
01:27:03,840 --> 01:27:05,040
thread was that there was some

2269
01:27:05,040 --> 01:27:07,840
discussion and no real

2270
01:27:07,840 --> 01:27:09,520
resolution to the mailing list thread

2271
01:27:09,520 --> 01:27:10,400
either

2272
01:27:10,400 --> 01:27:12,880
uh so i think that's why it sort of died

2273
01:27:12,880 --> 01:27:14,239
out was

2274
01:27:14,239 --> 01:27:15,760
it just got lost

2275
01:27:15,760 --> 01:27:18,480
right having an issue uh wouldn't hurt

2276
01:27:18,480 --> 01:27:21,360
right yeah you have to avoid uh if you

2277
01:27:21,360 --> 01:27:23,600
sort of like yeah yeah

2278
01:27:23,600 --> 01:27:25,760
definitely definitely um it's so hard to

2279
01:27:25,760 --> 01:27:27,440
go back to the mailing list and find all

2280
01:27:27,440 --> 01:27:28,480
of the

2281
01:27:28,480 --> 01:27:30,719
threads that are relevant to this draft

2282
01:27:30,719 --> 01:27:31,840
so

2283
01:27:31,840 --> 01:27:33,760
yeah if you want to file it as an issue

2284
01:27:33,760 --> 01:27:35,920
then we'll it'll make sure that it's

2285
01:27:35,920 --> 01:27:38,560
tracked it's tracked okay um and then we

2286
01:27:38,560 --> 01:27:39,760
can pick up the mailing list site again

2287
01:27:39,760 --> 01:27:41,280
too if you want to talk about it there

2288
01:27:41,280 --> 01:27:42,880
um or we can talk about it now because

2289
01:27:42,880 --> 01:27:45,840
we i think we still have yeah like if

2290
01:27:45,840 --> 01:27:48,239
you guys uh when i go ahead all right no

2291
01:27:48,239 --> 01:27:49,440
problem for what it's worth my

2292
01:27:49,440 --> 01:27:52,000
recollection is that the issue was put

2293
01:27:52,000 --> 01:27:53,440
up on the screen it was more or less

2294
01:27:53,440 --> 01:27:55,920
closed so i i was expecting some action

2295
01:27:55,920 --> 01:27:57,679
but that could bias me because that's

2296
01:27:57,679 --> 01:27:58,840
what i wanted to

2297
01:27:58,840 --> 01:28:01,199
happen so it doesn't mean that it really

2298
01:28:01,199 --> 01:28:04,080
was resolved that way but okay

2299
01:28:04,080 --> 01:28:06,960
um so where would that issue be brian

2300
01:28:06,960 --> 01:28:09,920
sent an email today yesterday so to

2301
01:28:09,920 --> 01:28:12,000
check the archives and it should be

2302
01:28:12,000 --> 01:28:13,520
pretty recent at the top and hopefully

2303
01:28:13,520 --> 01:28:15,600
that's in reply to the original one or

2304
01:28:15,600 --> 01:28:18,000
not no of course not oh okay

2305
01:28:18,000 --> 01:28:20,080
why would you use a mailing list with it

2306
01:28:20,080 --> 01:28:22,800
but i think that i did link it so you

2307
01:28:22,800 --> 01:28:23,679
could

2308
01:28:23,679 --> 01:28:25,040
follow through

2309
01:28:25,040 --> 01:28:27,360
so is it in the mailing list

2310
01:28:27,360 --> 01:28:29,120
yeah yeah it would be at the top of the

2311
01:28:29,120 --> 01:28:31,840
mail unless i just quickly to summarize

2312
01:28:31,840 --> 01:28:34,080
there's there have been some

2313
01:28:34,080 --> 01:28:36,639
i think confusion about what the term

2314
01:28:36,639 --> 01:28:39,360
credential client really meant

2315
01:28:39,360 --> 01:28:41,280
um and then on further inspection the

2316
01:28:41,280 --> 01:28:43,679
actual

2317
01:28:43,679 --> 01:28:45,760
normative requirements around it outside

2318
01:28:45,760 --> 01:28:48,400
of the section that it was defined

2319
01:28:48,400 --> 01:28:51,840
qualifies every single usage of it is

2320
01:28:51,840 --> 01:28:54,159
confidential or credentialed client must

2321
01:28:54,159 --> 01:28:55,920
do this confidential or credential

2322
01:28:55,920 --> 01:28:58,480
client has to authenticate so they are

2323
01:28:58,480 --> 01:29:00,800
treated uh as synonymous throughout the

2324
01:29:00,800 --> 01:29:02,719
document just with

2325
01:29:02,719 --> 01:29:04,159
more words

2326
01:29:04,159 --> 01:29:06,560
um so i the suggestion from me and i

2327
01:29:06,560 --> 01:29:08,800
think others sort of backed it up was to

2328
01:29:08,800 --> 01:29:12,080
get rid of the distinction entirely

2329
01:29:12,080 --> 01:29:14,080
and provide some somewhere any

2330
01:29:14,080 --> 01:29:16,080
discussion around the various levels of

2331
01:29:16,080 --> 01:29:17,360
trust and establishment and

2332
01:29:17,360 --> 01:29:19,760
pre-registration and so forth in that i

2333
01:29:19,760 --> 01:29:22,480
forget what it is 2.4 section

2334
01:29:22,480 --> 01:29:24,880
describe the the nature of it but keep

2335
01:29:24,880 --> 01:29:28,560
the two types as they are um so okay i

2336
01:29:28,560 --> 01:29:30,239
remember this i remember this thread now

2337
01:29:30,239 --> 01:29:31,440
um

2338
01:29:31,440 --> 01:29:33,199
yeah because we need to

2339
01:29:33,199 --> 01:29:35,040
we're gonna try to try to find it for

2340
01:29:35,040 --> 01:29:36,960
the for the screen

2341
01:29:36,960 --> 01:29:39,040
because otherwise everyone is lost

2342
01:29:39,040 --> 01:29:40,480
oh right no he did a good summary of it

2343
01:29:40,480 --> 01:29:41,280
though

2344
01:29:41,280 --> 01:29:42,880
um

2345
01:29:42,880 --> 01:29:43,920
yeah

2346
01:29:43,920 --> 01:29:46,920
um

2347
01:30:08,639 --> 01:30:11,639
oh

2348
01:30:23,679 --> 01:30:26,679
um

2349
01:30:57,600 --> 01:30:59,040
oh

2350
01:30:59,040 --> 01:31:00,320
you have to restart your browser for

2351
01:31:00,320 --> 01:31:03,520
that one no kidding okay

2352
01:31:03,520 --> 01:31:04,719
um

2353
01:31:04,719 --> 01:31:07,040
well okay that's not gonna work

2354
01:31:07,040 --> 01:31:08,159
um

2355
01:31:08,159 --> 01:31:09,120
the

2356
01:31:09,120 --> 01:31:10,719
brian did a very good summary of the of

2357
01:31:10,719 --> 01:31:12,080
the state of the issue anyway that was

2358
01:31:12,080 --> 01:31:15,440
um that was a good recap of it um

2359
01:31:15,440 --> 01:31:17,920
my so

2360
01:31:17,920 --> 01:31:20,239
the original text that's in there

2361
01:31:20,239 --> 01:31:21,920
every time you see the

2362
01:31:21,920 --> 01:31:23,840
or credentialed and the new text

2363
01:31:23,840 --> 01:31:26,800
previously said confidential clients or

2364
01:31:26,800 --> 01:31:29,360
clients with credentials

2365
01:31:29,360 --> 01:31:30,560
which

2366
01:31:30,560 --> 01:31:32,639
i i personally thought was more

2367
01:31:32,639 --> 01:31:34,560
confusing because

2368
01:31:34,560 --> 01:31:36,159
elsewhere it says confidential clients

2369
01:31:36,159 --> 01:31:37,600
have credentials otherwise a public

2370
01:31:37,600 --> 01:31:39,120
client doesn't

2371
01:31:39,120 --> 01:31:40,080
so

2372
01:31:40,080 --> 01:31:41,920
that was what it was trying to reconcile

2373
01:31:41,920 --> 01:31:42,880
was

2374
01:31:42,880 --> 01:31:43,679
there

2375
01:31:43,679 --> 01:31:45,520
is like there is something between the

2376
01:31:45,520 --> 01:31:47,440
two because

2377
01:31:47,440 --> 01:31:49,440
apparently we can have confidential

2378
01:31:49,440 --> 01:31:51,120
clients or clients that have credentials

2379
01:31:51,120 --> 01:31:52,960
that are not confidential clients and

2380
01:31:52,960 --> 01:31:54,719
that's already in the original draft so

2381
01:31:54,719 --> 01:31:56,840
that's what it was trying to do so

2382
01:31:56,840 --> 01:32:00,400
if i agree that maybe the like it could

2383
01:32:00,400 --> 01:32:02,639
use some more clarification around the

2384
01:32:02,639 --> 01:32:04,800
conditions under which a client may have

2385
01:32:04,800 --> 01:32:06,880
credentials that are not

2386
01:32:06,880 --> 01:32:08,400
it's not a confidential client that

2387
01:32:08,400 --> 01:32:09,600
clearly needs to be explained better

2388
01:32:09,600 --> 01:32:10,719
because

2389
01:32:10,719 --> 01:32:13,120
that is not obvious in either draft at

2390
01:32:13,120 --> 01:32:14,239
the moment

2391
01:32:14,239 --> 01:32:16,800
but i don't think just reverting back is

2392
01:32:16,800 --> 01:32:20,080
going to solve the actual problem

2393
01:32:22,320 --> 01:32:24,159
justin

2394
01:32:24,159 --> 01:32:27,760
justin richards so um

2395
01:32:27,760 --> 01:32:30,400
brian's not entirely wrong

2396
01:32:30,400 --> 01:32:31,920
um

2397
01:32:31,920 --> 01:32:32,880
the

2398
01:32:32,880 --> 01:32:34,880
the term is a

2399
01:32:34,880 --> 01:32:38,480
is definitely a bit confusing that said

2400
01:32:38,480 --> 01:32:39,360
uh

2401
01:32:39,360 --> 01:32:43,199
aaron is 100 correct that we have more

2402
01:32:43,199 --> 01:32:44,960
than just

2403
01:32:44,960 --> 01:32:46,639
confidential client

2404
01:32:46,639 --> 01:32:50,080
which in the 67 49

2405
01:32:50,080 --> 01:32:52,000
days was

2406
01:32:52,000 --> 01:32:54,880
statically configured you know hand

2407
01:32:54,880 --> 01:32:57,280
registered somebody called a sysadmin to

2408
01:32:57,280 --> 01:32:59,760
go set up a config file somewhere type

2409
01:32:59,760 --> 01:33:01,360
of client

2410
01:33:01,360 --> 01:33:03,520
and then public client which was just

2411
01:33:03,520 --> 01:33:05,600
you get a client id by calling the

2412
01:33:05,600 --> 01:33:07,360
sysadmin and having them set that up

2413
01:33:07,360 --> 01:33:09,199
without a client id

2414
01:33:09,199 --> 01:33:10,480
and that's it

2415
01:33:10,480 --> 01:33:12,239
we don't live in that world anymore and

2416
01:33:12,239 --> 01:33:14,159
i think it is very very important for

2417
01:33:14,159 --> 01:33:16,480
oauth 2.1 to

2418
01:33:16,480 --> 01:33:18,800
not only acknowledge that but also to

2419
01:33:18,800 --> 01:33:21,280
like embrace that

2420
01:33:21,280 --> 01:33:23,760
i personally kind of like the

2421
01:33:23,760 --> 01:33:26,719
direction of credentialed client as sort

2422
01:33:26,719 --> 01:33:29,679
of being situated in between

2423
01:33:29,679 --> 01:33:32,080
that said i think

2424
01:33:32,080 --> 01:33:34,560
we may want to

2425
01:33:34,560 --> 01:33:36,400
approach this

2426
01:33:36,400 --> 01:33:39,280
um in a slightly different way

2427
01:33:39,280 --> 01:33:41,520
in that

2428
01:33:41,520 --> 01:33:44,320
if the definition of confidential client

2429
01:33:44,320 --> 01:33:45,120
is

2430
01:33:45,120 --> 01:33:46,400
simply

2431
01:33:46,400 --> 01:33:49,120
a client that has

2432
01:33:49,120 --> 01:33:50,480
a secret

2433
01:33:50,480 --> 01:33:52,880
that it can keep

2434
01:33:52,880 --> 01:33:55,520
right so a a client secret or a key set

2435
01:33:55,520 --> 01:33:57,520
or something like that

2436
01:33:57,520 --> 01:33:59,760
and public client does not

2437
01:33:59,760 --> 01:34:01,280
so it's a bit of an expansion and

2438
01:34:01,280 --> 01:34:02,560
clarification of the original

2439
01:34:02,560 --> 01:34:06,000
definitions without all the assumptions

2440
01:34:06,000 --> 01:34:07,520
then there is

2441
01:34:07,520 --> 01:34:09,840
an orthogonal dimension

2442
01:34:09,840 --> 01:34:11,520
of how

2443
01:34:11,520 --> 01:34:13,360
that

2444
01:34:13,360 --> 01:34:14,960
confidential client making sure i'm

2445
01:34:14,960 --> 01:34:16,239
using the right terms how that

2446
01:34:16,239 --> 01:34:19,040
confidential client came into possession

2447
01:34:19,040 --> 01:34:20,239
of its secrets and under what

2448
01:34:20,239 --> 01:34:21,840
circumstances

2449
01:34:21,840 --> 01:34:23,280
that's what i think credential client

2450
01:34:23,280 --> 01:34:26,159
was trying to capture but by putting it

2451
01:34:26,159 --> 01:34:29,679
on that same dimension i think

2452
01:34:29,679 --> 01:34:32,080
may have been a little confusing

2453
01:34:32,080 --> 01:34:34,560
so i think we might actually

2454
01:34:34,560 --> 01:34:36,639
be able to have a better and more

2455
01:34:36,639 --> 01:34:38,480
thorough discussion

2456
01:34:38,480 --> 01:34:40,799
by

2457
01:34:41,040 --> 01:34:41,920
sort of

2458
01:34:41,920 --> 01:34:43,760
expanding the

2459
01:34:43,760 --> 01:34:45,679
the reach of what confidential client

2460
01:34:45,679 --> 01:34:48,400
actually means

2461
01:34:48,400 --> 01:34:50,400
and making sure that when we're talking

2462
01:34:50,400 --> 01:34:52,960
about condo financial clients

2463
01:34:52,960 --> 01:34:55,760
if we mean one specific sub category of

2464
01:34:55,760 --> 01:34:58,719
that then we name that subcategory

2465
01:34:58,719 --> 01:35:00,080
because there are different security

2466
01:35:00,080 --> 01:35:01,600
considerations

2467
01:35:01,600 --> 01:35:03,440
that you have for statically

2468
01:35:03,440 --> 01:35:05,360
pre-registered web servers

2469
01:35:05,360 --> 01:35:06,480
versus

2470
01:35:06,480 --> 01:35:09,360
a um a mobile app that gets a secret

2471
01:35:09,360 --> 01:35:12,159
provisioned on install as part of you

2472
01:35:12,159 --> 01:35:14,080
know an install framework versus

2473
01:35:14,080 --> 01:35:15,280
something that does a full

2474
01:35:15,280 --> 01:35:18,080
off-the-street dynamic registration

2475
01:35:18,080 --> 01:35:20,400
versus the whatever the

2476
01:35:20,400 --> 01:35:22,080
you know moderna

2477
01:35:22,080 --> 01:35:24,320
ecosystem does and open banking and

2478
01:35:24,320 --> 01:35:25,520
stuff with the

2479
01:35:25,520 --> 01:35:28,480
they're basically they reinvented cas

2480
01:35:28,480 --> 01:35:30,639
anyway

2481
01:35:30,639 --> 01:35:32,159
all of these are very different takes on

2482
01:35:32,159 --> 01:35:34,080
how to get to that state

2483
01:35:34,080 --> 01:35:35,920
with the goal still being to get to the

2484
01:35:35,920 --> 01:35:38,320
state where an individual instance of a

2485
01:35:38,320 --> 01:35:40,960
piece of client software

2486
01:35:40,960 --> 01:35:43,520
has access to a secret

2487
01:35:43,520 --> 01:35:45,040
that can

2488
01:35:45,040 --> 01:35:46,639
authenticate that instance of client

2489
01:35:46,639 --> 01:35:48,960
software

2490
01:35:48,960 --> 01:35:51,280
and so

2491
01:35:51,280 --> 01:35:53,440
i think what we might be able to do

2492
01:35:53,440 --> 01:35:54,800
is to

2493
01:35:54,800 --> 01:35:57,679
back off in all of the places that say

2494
01:35:57,679 --> 01:36:00,080
um you know confidential or credentialed

2495
01:36:00,080 --> 01:36:01,119
or whatever

2496
01:36:01,119 --> 01:36:02,800
just say confidential in all of those

2497
01:36:02,800 --> 01:36:04,000
places

2498
01:36:04,000 --> 01:36:05,679
and then in our definition and

2499
01:36:05,679 --> 01:36:07,920
discussion of what confidential means

2500
01:36:07,920 --> 01:36:10,719
and how you get there we expand that

2501
01:36:10,719 --> 01:36:12,800
discussion significantly

2502
01:36:12,800 --> 01:36:15,119
i i like that for sure um one of the

2503
01:36:15,119 --> 01:36:16,880
other implications of that is there are

2504
01:36:16,880 --> 01:36:18,880
also many places to talk about

2505
01:36:18,880 --> 01:36:20,719
considerations for confidential clients

2506
01:36:20,719 --> 01:36:22,960
that would need to get qualified further

2507
01:36:22,960 --> 01:36:24,880
yes because it would no longer

2508
01:36:24,880 --> 01:36:27,520
apply to all confidential clients yes

2509
01:36:27,520 --> 01:36:29,600
absolutely and bike shedding all of

2510
01:36:29,600 --> 01:36:32,480
those categories is going to be a mess

2511
01:36:32,480 --> 01:36:33,840
there i don't think there's any way

2512
01:36:33,840 --> 01:36:35,280
around that um

2513
01:36:35,280 --> 01:36:38,800
i think that uh having named categories

2514
01:36:38,800 --> 01:36:40,000
is

2515
01:36:40,000 --> 01:36:42,800
going to be very helpful for all of

2516
01:36:42,800 --> 01:36:45,520
those and credentialed client was

2517
01:36:45,520 --> 01:36:47,840
it was a good stab at that um

2518
01:36:47,840 --> 01:36:52,280
to help some of that differentiation

2519
01:36:52,719 --> 01:36:53,840
okay i see where you're going with that

2520
01:36:53,840 --> 01:36:56,000
for sure um i think that's

2521
01:36:56,000 --> 01:36:58,639
i think that's doable

2522
01:36:58,639 --> 01:37:01,639
brian

2523
01:37:06,719 --> 01:37:07,840
i

2524
01:37:07,840 --> 01:37:09,840
i think justin proposed more or less the

2525
01:37:09,840 --> 01:37:11,920
same thing that i was proposing which is

2526
01:37:11,920 --> 01:37:13,199
strange because i thought he was going

2527
01:37:13,199 --> 01:37:16,080
to disagree with me

2528
01:37:16,880 --> 01:37:18,320
but i do think i think the names are

2529
01:37:18,320 --> 01:37:20,480
pretty bad public and

2530
01:37:20,480 --> 01:37:22,320
confidential but we're sort of stuck

2531
01:37:22,320 --> 01:37:23,679
with them and i know personally i've

2532
01:37:23,679 --> 01:37:26,480
used them in other documents

2533
01:37:26,480 --> 01:37:28,560
that will still be applicable to 2.1 so

2534
01:37:28,560 --> 01:37:29,760
i would

2535
01:37:29,760 --> 01:37:31,440
unfortunately for what they are i'd

2536
01:37:31,440 --> 01:37:33,440
prefer them not to be changed

2537
01:37:33,440 --> 01:37:35,600
and then it comes down to

2538
01:37:35,600 --> 01:37:37,840
just better explaining them and i think

2539
01:37:37,840 --> 01:37:41,040
that orthogonal access of trust that

2540
01:37:41,040 --> 01:37:43,119
that justin described um

2541
01:37:43,119 --> 01:37:44,880
works and gives people the knowledge

2542
01:37:44,880 --> 01:37:47,840
that they need but it's not like you

2543
01:37:47,840 --> 01:37:49,600
wouldn't authenticate a client with

2544
01:37:49,600 --> 01:37:51,440
credentials just because

2545
01:37:51,440 --> 01:37:53,280
of the way it was

2546
01:37:53,280 --> 01:37:54,880
initially established you're still going

2547
01:37:54,880 --> 01:37:56,560
to check those credentials you're still

2548
01:37:56,560 --> 01:37:58,320
going to um

2549
01:37:58,320 --> 01:37:59,520
so it doesn't

2550
01:37:59,520 --> 01:38:00,639
back to what i said before it doesn't

2551
01:38:00,639 --> 01:38:02,080
change sort of the functional places

2552
01:38:02,080 --> 01:38:03,840
where you refer both of them and say

2553
01:38:03,840 --> 01:38:06,000
they have to authenticate but just a

2554
01:38:06,000 --> 01:38:07,199
description of how sort of the

2555
01:38:07,199 --> 01:38:08,400
provenance or the trust and the

2556
01:38:08,400 --> 01:38:09,600
application

2557
01:38:09,600 --> 01:38:11,920
or client comes to be um

2558
01:38:11,920 --> 01:38:13,119
as that

2559
01:38:13,119 --> 01:38:15,840
orthogonal access of of

2560
01:38:15,840 --> 01:38:16,719
yeah

2561
01:38:16,719 --> 01:38:18,080
words that you'll come up with that are

2562
01:38:18,080 --> 01:38:19,840
better than what i'm saying one of the

2563
01:38:19,840 --> 01:38:22,000
one of the other attributes is around

2564
01:38:22,000 --> 01:38:23,360
whether or not the user gets prompted

2565
01:38:23,360 --> 01:38:25,520
for consent there's an explicit mention

2566
01:38:25,520 --> 01:38:26,719
that says

2567
01:38:26,719 --> 01:38:28,480
public clients

2568
01:38:28,480 --> 01:38:32,000
should be should always be prompted even

2569
01:38:32,000 --> 01:38:33,520
if it's like a first party client if

2570
01:38:33,520 --> 01:38:35,280
there's something around those lines um

2571
01:38:35,280 --> 01:38:36,320
or was the other way around of

2572
01:38:36,320 --> 01:38:38,400
confidential clients might want to skip

2573
01:38:38,400 --> 01:38:39,840
the consent phase i don't know which one

2574
01:38:39,840 --> 01:38:42,000
it was and now uh but it's it's not just

2575
01:38:42,000 --> 01:38:44,080
about the authentication of the client

2576
01:38:44,080 --> 01:38:46,880
it's about other implications of

2577
01:38:46,880 --> 01:38:48,239
how much that client is essentially

2578
01:38:48,239 --> 01:38:50,719
trusted by the as based on

2579
01:38:50,719 --> 01:38:54,239
various things one of which is it's

2580
01:38:54,239 --> 01:38:56,239
how was how that credential was

2581
01:38:56,239 --> 01:38:58,960
established so

2582
01:38:58,960 --> 01:39:00,560
but i think you're saying more i think

2583
01:39:00,560 --> 01:39:02,080
we're saying the same thing and i the

2584
01:39:02,080 --> 01:39:03,679
areas i looked at were the credentialed

2585
01:39:03,679 --> 01:39:05,440
not for the other scope so yeah there's

2586
01:39:05,440 --> 01:39:07,199
probably more touch points for clarity

2587
01:39:07,199 --> 01:39:09,360
but but the same thing applies i think

2588
01:39:09,360 --> 01:39:10,239
you know

2589
01:39:10,239 --> 01:39:11,679
a client that's registered through an

2590
01:39:11,679 --> 01:39:12,880
open

2591
01:39:12,880 --> 01:39:13,920
portal

2592
01:39:13,920 --> 01:39:15,760
anybody can is no different than a

2593
01:39:15,760 --> 01:39:17,920
client that's registered via open

2594
01:39:17,920 --> 01:39:20,080
dynamic client registration versus

2595
01:39:20,080 --> 01:39:21,679
dynamic client registration that's done

2596
01:39:21,679 --> 01:39:23,360
through some sort of

2597
01:39:23,360 --> 01:39:25,520
um you know bespoke access token

2598
01:39:25,520 --> 01:39:27,199
issuance to get in there in the first

2599
01:39:27,199 --> 01:39:28,800
place is more trusted maybe then

2600
01:39:28,800 --> 01:39:30,239
absolutely so there's

2601
01:39:30,239 --> 01:39:31,760
yeah and that kind of touches on the

2602
01:39:31,760 --> 01:39:34,080
redirect issue it does really right as

2603
01:39:34,080 --> 01:39:35,360
well it does

2604
01:39:35,360 --> 01:39:37,679
um so yeah i think i'm agreeing yeah

2605
01:39:37,679 --> 01:39:38,480
okay

2606
01:39:38,480 --> 01:39:41,119
thanks

2607
01:39:41,119 --> 01:39:43,040
um yeah dave song money hub yeah i'm

2608
01:39:43,040 --> 01:39:44,800
basically just just to agree we we had a

2609
01:39:44,800 --> 01:39:46,719
few issues and people asking okay what

2610
01:39:46,719 --> 01:39:48,400
what is this credential client and

2611
01:39:48,400 --> 01:39:49,600
trying to look through the current draft

2612
01:39:49,600 --> 01:39:50,960
to see what you actually have to do

2613
01:39:50,960 --> 01:39:52,880
differently and and

2614
01:39:52,880 --> 01:39:54,960
apart from that initial do you trust the

2615
01:39:54,960 --> 01:39:56,080
identity

2616
01:39:56,080 --> 01:39:58,159
that seemed to be only the only thing as

2617
01:39:58,159 --> 01:39:59,920
far as i could see so yeah i just very

2618
01:39:59,920 --> 01:40:01,280
much agree i think if we can keep it

2619
01:40:01,280 --> 01:40:03,679
simple and then just call out this you

2620
01:40:03,679 --> 01:40:05,440
know i think brian made a really good

2621
01:40:05,440 --> 01:40:07,920
point it's not all confidential clients

2622
01:40:07,920 --> 01:40:10,239
are are equal either in terms of you

2623
01:40:10,239 --> 01:40:12,239
know how much trust there is whether

2624
01:40:12,239 --> 01:40:14,000
they're just yeah registering so yeah

2625
01:40:14,000 --> 01:40:16,480
very much agree with what's said before

2626
01:40:16,480 --> 01:40:18,239
great

2627
01:40:18,239 --> 01:40:20,159
george

2628
01:40:20,159 --> 01:40:23,280
i'll just add i i'm in agreement um the

2629
01:40:23,280 --> 01:40:26,239
dynamic client registration's back um

2630
01:40:26,239 --> 01:40:28,960
57-91

2631
01:40:28,960 --> 01:40:32,560
no sorry 75-91 i'm dyslexic this morning

2632
01:40:32,560 --> 01:40:33,920
um

2633
01:40:33,920 --> 01:40:36,320
basically implies that when you go

2634
01:40:36,320 --> 01:40:38,000
through dynamic client registration you

2635
01:40:38,000 --> 01:40:40,000
have a confidential client that uses the

2636
01:40:40,000 --> 01:40:42,639
word confidential client in a few places

2637
01:40:42,639 --> 01:40:44,880
based on the response so

2638
01:40:44,880 --> 01:40:47,199
um you know i think potentially to

2639
01:40:47,199 --> 01:40:49,840
brian's point keeping those words to

2640
01:40:49,840 --> 01:40:52,239
represent those class of clients makes

2641
01:40:52,239 --> 01:40:54,480
sense so that we don't introduce a new

2642
01:40:54,480 --> 01:40:56,320
term

2643
01:40:56,320 --> 01:40:58,159
but all of the other points are super

2644
01:40:58,159 --> 01:40:59,440
valid right just because you have a

2645
01:40:59,440 --> 01:41:01,600
confidential client doesn't mean

2646
01:41:01,600 --> 01:41:03,840
that it's trusted it just means that it

2647
01:41:03,840 --> 01:41:04,719
can

2648
01:41:04,719 --> 01:41:07,040
you know accurately authenticate itself

2649
01:41:07,040 --> 01:41:08,000
um

2650
01:41:08,000 --> 01:41:10,239
and you know the other things like you

2651
01:41:10,239 --> 01:41:13,040
know should you show consent or not um

2652
01:41:13,040 --> 01:41:15,119
you know probably could apply even to

2653
01:41:15,119 --> 01:41:17,520
some kind of confidential clients if

2654
01:41:17,520 --> 01:41:19,280
they're not trusted

2655
01:41:19,280 --> 01:41:21,520
in the sense of an open you know dcr

2656
01:41:21,520 --> 01:41:23,360
kind of a model so there's a lot of

2657
01:41:23,360 --> 01:41:26,159
implications there

2658
01:41:26,960 --> 01:41:29,920
okay david

2659
01:41:31,360 --> 01:41:34,239
uh i just wanted to remark that

2660
01:41:34,239 --> 01:41:36,560
it could be that it's better to find the

2661
01:41:36,560 --> 01:41:39,520
mutant can you can you speak up david

2662
01:41:39,520 --> 01:41:42,239
can you speak up please

2663
01:41:42,239 --> 01:41:44,239
get closer to the mind maybe i just

2664
01:41:44,239 --> 01:41:45,840
wanted to say that it may be better to

2665
01:41:45,840 --> 01:41:49,679
find new terms possibly in axes

2666
01:41:49,679 --> 01:41:52,960
we can barely hear you

2667
01:41:56,800 --> 01:41:59,280
that's funny i hear myself and feedback

2668
01:41:59,280 --> 01:42:02,639
pretty loudly actually

2669
01:42:03,840 --> 01:42:06,159
better

2670
01:42:06,880 --> 01:42:09,119
keep going david keep going i just

2671
01:42:09,119 --> 01:42:10,880
wanted to say that it might be better to

2672
01:42:10,880 --> 01:42:13,280
define new terms possibly multiple terms

2673
01:42:13,280 --> 01:42:15,760
to define different facets

2674
01:42:15,760 --> 01:42:17,280
because otherwise everywhere we use

2675
01:42:17,280 --> 01:42:19,520
public and confidential we're going to

2676
01:42:19,520 --> 01:42:21,840
have to revisit those such as

2677
01:42:21,840 --> 01:42:23,280
registration

2678
01:42:23,280 --> 01:42:24,880
to make sure

2679
01:42:24,880 --> 01:42:25,600
the

2680
01:42:25,600 --> 01:42:27,920
older term breaking anything to work on

2681
01:42:27,920 --> 01:42:30,159
them

2682
01:42:32,960 --> 01:42:35,280
i didn't get that

2683
01:42:35,280 --> 01:42:36,239
um

2684
01:42:36,239 --> 01:42:39,280
david can you send that in in a message

2685
01:42:39,280 --> 01:42:41,280
to to them

2686
01:42:41,280 --> 01:42:42,800
in the chat

2687
01:42:42,800 --> 01:42:45,040
or did you get i think i got it i was

2688
01:42:45,040 --> 01:42:46,800
going to okay go ahead brian and then

2689
01:42:46,800 --> 01:42:49,520
argue against it at the same time

2690
01:42:49,520 --> 01:42:51,920
i believe that dw was saying that it

2691
01:42:51,920 --> 01:42:53,920
would be better to introduce completely

2692
01:42:53,920 --> 01:42:55,840
new terms because

2693
01:42:55,840 --> 01:42:57,600
the existing terms are used throughout

2694
01:42:57,600 --> 01:42:59,920
different documents

2695
01:42:59,920 --> 01:43:02,560
and possibly multiple access these terms

2696
01:43:02,560 --> 01:43:04,080
to to

2697
01:43:04,080 --> 01:43:05,679
cover these things i

2698
01:43:05,679 --> 01:43:07,600
speak up now maybe if i'm wrong about

2699
01:43:07,600 --> 01:43:08,840
that

2700
01:43:08,840 --> 01:43:11,360
david um and i would

2701
01:43:11,360 --> 01:43:14,159
i would flip it the other way because

2702
01:43:14,159 --> 01:43:15,840
these terms are used throughout a number

2703
01:43:15,840 --> 01:43:17,679
of documents that are not touched

2704
01:43:17,679 --> 01:43:19,920
directly by oauth 2.1

2705
01:43:19,920 --> 01:43:22,400
but will still be compatible with 2.1

2706
01:43:22,400 --> 01:43:24,560
and it's all of its framework um

2707
01:43:24,560 --> 01:43:26,560
as bad as the names are i think they

2708
01:43:26,560 --> 01:43:27,840
should remain the same so that they

2709
01:43:27,840 --> 01:43:29,679
don't introduce further breakage or

2710
01:43:29,679 --> 01:43:33,199
confusion with with those documents

2711
01:43:33,199 --> 01:43:34,400
david

2712
01:43:34,400 --> 01:43:37,879
do you have any comment

2713
01:43:41,600 --> 01:43:44,480
okay i don't see david and mike again

2714
01:43:44,480 --> 01:43:47,440
okay vitoria

2715
01:43:49,840 --> 01:43:53,600
um i am a bit concerned about uh

2716
01:43:53,600 --> 01:43:56,159
post-hoc uh redefining some of those

2717
01:43:56,159 --> 01:43:57,280
terms

2718
01:43:57,280 --> 01:43:58,080
um

2719
01:43:58,080 --> 01:44:00,480
although it would be handy to say

2720
01:44:00,480 --> 01:44:02,400
anything that has a credential is

2721
01:44:02,400 --> 01:44:04,320
confidential

2722
01:44:04,320 --> 01:44:06,880
in a practical user many systems are

2723
01:44:06,880 --> 01:44:08,239
predicated on the idea that a

2724
01:44:08,239 --> 01:44:11,280
confidential client is a singleton

2725
01:44:11,280 --> 01:44:14,719
and the infrastructure and the service

2726
01:44:14,719 --> 01:44:16,400
and the programming model which is

2727
01:44:16,400 --> 01:44:18,719
offered to the developers is based on

2728
01:44:18,719 --> 01:44:19,520
that

2729
01:44:19,520 --> 01:44:22,719
and in fact the confusion tied to that

2730
01:44:22,719 --> 01:44:25,760
uh is also observable when people try to

2731
01:44:25,760 --> 01:44:28,639
use such systems for iot or similar in

2732
01:44:28,639 --> 01:44:30,639
which they try to distribute the

2733
01:44:30,639 --> 01:44:33,360
credential to clients but to a scale

2734
01:44:33,360 --> 01:44:35,920
which wasn't designed for so long story

2735
01:44:35,920 --> 01:44:40,400
short i think that uh if we decide to uh

2736
01:44:40,400 --> 01:44:42,719
generalize the term of confidential

2737
01:44:42,719 --> 01:44:45,600
client to anything that has a credential

2738
01:44:45,600 --> 01:44:48,159
with no regard with whoever is singleton

2739
01:44:48,159 --> 01:44:49,520
or not however

2740
01:44:49,520 --> 01:44:51,360
the assignment of this credential was

2741
01:44:51,360 --> 01:44:53,440
done in a circumstance in which you

2742
01:44:53,440 --> 01:44:54,320
would have

2743
01:44:54,320 --> 01:44:57,679
some i'd say extra insurance that you

2744
01:44:57,679 --> 01:45:00,639
knew something about the registrar

2745
01:45:00,639 --> 01:45:03,600
then i think that um we we needed to

2746
01:45:03,600 --> 01:45:05,199
like

2747
01:45:05,199 --> 01:45:07,520
convince ourselves that we will not

2748
01:45:07,520 --> 01:45:10,000
break or that we will not create even

2749
01:45:10,000 --> 01:45:13,440
further confusion and uh potentially uh

2750
01:45:13,440 --> 01:45:15,679
contradict ourselves because like

2751
01:45:15,679 --> 01:45:17,520
although we never said i believe

2752
01:45:17,520 --> 01:45:19,199
anywhere that this thing represents a

2753
01:45:19,199 --> 01:45:20,719
single tone

2754
01:45:20,719 --> 01:45:23,199
originally this thing was websites which

2755
01:45:23,199 --> 01:45:25,840
were naturally and then everything else

2756
01:45:25,840 --> 01:45:28,560
was somewhat derived from that

2757
01:45:28,560 --> 01:45:29,280
so

2758
01:45:29,280 --> 01:45:31,199
long story short i guess i'm saying uh

2759
01:45:31,199 --> 01:45:33,520
i'm a bit worried about making that

2760
01:45:33,520 --> 01:45:36,719
sweeping uh generalization because of

2761
01:45:36,719 --> 01:45:38,800
the potential side effects and given

2762
01:45:38,800 --> 01:45:41,360
that have a mic i'll also say that to me

2763
01:45:41,360 --> 01:45:45,119
it's odd that we might uh say excuse

2764
01:45:45,119 --> 01:45:47,199
confidential clients from showing

2765
01:45:47,199 --> 01:45:50,320
consent but instead asking to uh public

2766
01:45:50,320 --> 01:45:52,480
clients to do so because uh public

2767
01:45:52,480 --> 01:45:54,560
clients today unless you use the tricks

2768
01:45:54,560 --> 01:45:57,280
like urls uh claim the urls and similar

2769
01:45:57,280 --> 01:45:58,800
very travesty

2770
01:45:58,800 --> 01:46:00,880
like you can use whatever client id you

2771
01:46:00,880 --> 01:46:03,760
want and pretend to be someone else so

2772
01:46:03,760 --> 01:46:05,840
asking for a consent in that particular

2773
01:46:05,840 --> 01:46:07,600
case in which you have very little

2774
01:46:07,600 --> 01:46:09,600
confidence that the bits that are

2775
01:46:09,600 --> 01:46:12,080
running are actually representing the

2776
01:46:12,080 --> 01:46:14,560
thing that was registered as a client

2777
01:46:14,560 --> 01:46:16,960
seems somewhat contradictory

2778
01:46:16,960 --> 01:46:18,800
but that was an

2779
01:46:18,800 --> 01:46:21,760
aside the tldr is uh

2780
01:46:21,760 --> 01:46:24,080
let's be careful about generalizing what

2781
01:46:24,080 --> 01:46:27,840
the confidential client is

2782
01:46:30,880 --> 01:46:33,280
brian

2783
01:46:34,800 --> 01:46:37,040
i understand what was just said but the

2784
01:46:37,040 --> 01:46:40,960
generalization matches the reality of i

2785
01:46:40,960 --> 01:46:42,920
i believe what was written in

2786
01:46:42,920 --> 01:46:44,480
6749

2787
01:46:44,480 --> 01:46:46,560
some of those cases you discussed are

2788
01:46:46,560 --> 01:46:48,800
due to some of the prior weirdness of

2789
01:46:48,800 --> 01:46:49,600
the

2790
01:46:49,600 --> 01:46:51,600
various editors and taking over and so

2791
01:46:51,600 --> 01:46:52,800
forth

2792
01:46:52,800 --> 01:46:54,800
i think it's it's pretty widely accepted

2793
01:46:54,800 --> 01:46:56,320
that confidential clients are those with

2794
01:46:56,320 --> 01:46:57,920
credentials regardless of how they've

2795
01:46:57,920 --> 01:46:59,119
gotten them

2796
01:46:59,119 --> 01:47:01,040
and again i've certainly written a

2797
01:47:01,040 --> 01:47:03,440
number of documents that say that and

2798
01:47:03,440 --> 01:47:05,360
rely specifically on that so i don't

2799
01:47:05,360 --> 01:47:07,520
think we're redefining anything

2800
01:47:07,520 --> 01:47:10,239
and provenance of trust and chris

2801
01:47:10,239 --> 01:47:12,000
like the reason

2802
01:47:12,000 --> 01:47:14,320
right or wrong the reason that

2803
01:47:14,320 --> 01:47:16,159
lack of consent has allowed for

2804
01:47:16,159 --> 01:47:19,679
confidential clients is because the

2805
01:47:19,679 --> 01:47:21,360
picking up of the actual what's

2806
01:47:21,360 --> 01:47:22,719
consented the access tokens is

2807
01:47:22,719 --> 01:47:24,639
restricted to that client yes the

2808
01:47:24,639 --> 01:47:26,080
initial authorization request can be

2809
01:47:26,080 --> 01:47:27,520
anything

2810
01:47:27,520 --> 01:47:29,280
but because they have to authenticate

2811
01:47:29,280 --> 01:47:31,440
because the callback only goes to a

2812
01:47:31,440 --> 01:47:33,040
registered url that's why they're

2813
01:47:33,040 --> 01:47:34,639
allowing for that

2814
01:47:34,639 --> 01:47:36,719
that part to be skipped at least in the

2815
01:47:36,719 --> 01:47:38,320
text i believe is what it said so it's

2816
01:47:38,320 --> 01:47:40,719
not quite the right

2817
01:47:40,719 --> 01:47:44,400
comparison unless i'm missing something

2818
01:47:44,400 --> 01:47:47,280
but yeah go

2819
01:47:48,840 --> 01:47:50,960
ahead thank you

2820
01:47:50,960 --> 01:47:53,760
um so on the whether it matches the

2821
01:47:53,760 --> 01:47:56,719
reality i'm not sure let's say that

2822
01:47:56,719 --> 01:47:59,040
that's what we might have a place on the

2823
01:47:59,040 --> 01:48:01,600
specs but if you look at practical usage

2824
01:48:01,600 --> 01:48:03,920
for example if you look at what some of

2825
01:48:03,920 --> 01:48:05,679
the twitter clients do when you install

2826
01:48:05,679 --> 01:48:08,080
it on windows that's a public client as

2827
01:48:08,080 --> 01:48:10,080
in it has the same id in every

2828
01:48:10,080 --> 01:48:12,320
installation but then in the moment in

2829
01:48:12,320 --> 01:48:14,480
which you install this thing you get a

2830
01:48:14,480 --> 01:48:15,360
key

2831
01:48:15,360 --> 01:48:18,880
so you still have one entry but and it

2832
01:48:18,880 --> 01:48:20,400
behaves like a public kind it is a

2833
01:48:20,400 --> 01:48:22,800
public client is a native uh thing

2834
01:48:22,800 --> 01:48:25,119
running on the desktop but you do get a

2835
01:48:25,119 --> 01:48:28,560
key so although we might not have uh to

2836
01:48:28,560 --> 01:48:30,880
say formalize that particular flow but

2837
01:48:30,880 --> 01:48:33,600
that thing behaves just like the

2838
01:48:33,600 --> 01:48:35,840
credentialed client that you attempted

2839
01:48:35,840 --> 01:48:38,239
to place into that one so

2840
01:48:38,239 --> 01:48:40,159
i think it's a bit more advanced than

2841
01:48:40,159 --> 01:48:42,800
the reality is um

2842
01:48:42,800 --> 01:48:44,000
like that

2843
01:48:44,000 --> 01:48:46,080
anything that has a credential is a

2844
01:48:46,080 --> 01:48:48,560
confidential client in reality in fact

2845
01:48:48,560 --> 01:48:49,760
like i think there are a number of

2846
01:48:49,760 --> 01:48:51,760
practical example in which that is not

2847
01:48:51,760 --> 01:48:53,920
the case only the other one about the

2848
01:48:53,920 --> 01:48:56,239
consent i don't want her at home so we

2849
01:48:56,239 --> 01:48:58,800
can discuss offline

2850
01:48:58,800 --> 01:49:01,119
i think the uh i think

2851
01:49:01,119 --> 01:49:03,600
what you just said was actually relevant

2852
01:49:03,600 --> 01:49:05,600
to the thing that justin mentioned which

2853
01:49:05,600 --> 01:49:06,960
is that

2854
01:49:06,960 --> 01:49:08,719
the

2855
01:49:08,719 --> 01:49:11,679
the other factors of what the system is

2856
01:49:11,679 --> 01:49:14,320
doing with this client is what's

2857
01:49:14,320 --> 01:49:17,119
dependent on how that that secret was

2858
01:49:17,119 --> 01:49:18,239
obtained

2859
01:49:18,239 --> 01:49:19,040
and

2860
01:49:19,040 --> 01:49:20,800
the fact is that it has a secret and

2861
01:49:20,800 --> 01:49:22,800
most of the things in the spec are

2862
01:49:22,800 --> 01:49:25,119
things like if you have a secret use it

2863
01:49:25,119 --> 01:49:27,040
things like that so

2864
01:49:27,040 --> 01:49:29,840
uh i

2865
01:49:31,040 --> 01:49:33,679
was i who's who's left on the queue

2866
01:49:33,679 --> 01:49:35,280
george george

2867
01:49:35,280 --> 01:49:37,599
go ahead okay

2868
01:49:37,599 --> 01:49:40,560
so i i guess um

2869
01:49:40,560 --> 01:49:42,639
i don't want public clients and maybe

2870
01:49:42,639 --> 01:49:43,840
i'm misunderstanding what you were

2871
01:49:43,840 --> 01:49:45,599
saying victorio but i don't want public

2872
01:49:45,599 --> 01:49:47,520
client definition to me

2873
01:49:47,520 --> 01:49:49,040
a native app

2874
01:49:49,040 --> 01:49:52,560
right because if my client on the native

2875
01:49:52,560 --> 01:49:53,440
app

2876
01:49:53,440 --> 01:49:55,360
can basically create a public private

2877
01:49:55,360 --> 01:49:57,040
key pair where the private key isn't

2878
01:49:57,040 --> 01:49:59,679
stored in the tpm of the device

2879
01:49:59,679 --> 01:50:00,880
right

2880
01:50:00,880 --> 01:50:03,119
and and then it can use that for proving

2881
01:50:03,119 --> 01:50:05,520
its identity when it makes calls i don't

2882
01:50:05,520 --> 01:50:07,360
think that should be considered a public

2883
01:50:07,360 --> 01:50:08,639
client

2884
01:50:08,639 --> 01:50:09,679
um

2885
01:50:09,679 --> 01:50:12,239
in in that context right it's something

2886
01:50:12,239 --> 01:50:13,280
different

2887
01:50:13,280 --> 01:50:15,920
and i worry about labeling that

2888
01:50:15,920 --> 01:50:17,679
as a public client

2889
01:50:17,679 --> 01:50:18,960
um so

2890
01:50:18,960 --> 01:50:21,440
if if we're basically just saying public

2891
01:50:21,440 --> 01:50:23,520
clients are i always

2892
01:50:23,520 --> 01:50:24,400
for me

2893
01:50:24,400 --> 01:50:25,840
in going through this over the last

2894
01:50:25,840 --> 01:50:27,520
bunch of years right i always looked at

2895
01:50:27,520 --> 01:50:29,920
public clients as those clients that

2896
01:50:29,920 --> 01:50:32,000
can't protect a secret

2897
01:50:32,000 --> 01:50:33,840
and a confidential client is a client

2898
01:50:33,840 --> 01:50:35,760
that can protect a secret

2899
01:50:35,760 --> 01:50:38,239
so if the client can protect a secret

2900
01:50:38,239 --> 01:50:39,840
and when we were talking about dynamic

2901
01:50:39,840 --> 01:50:41,599
client registration you know the

2902
01:50:41,599 --> 01:50:44,239
expectation was the secret is instant

2903
01:50:44,239 --> 01:50:45,440
specific

2904
01:50:45,440 --> 01:50:48,159
and therefore it can kind of protect it

2905
01:50:48,159 --> 01:50:50,239
because it's the secret itself is not

2906
01:50:50,239 --> 01:50:52,560
embedded in the binary

2907
01:50:52,560 --> 01:50:54,000
someone to get it would have to

2908
01:50:54,000 --> 01:50:56,480
jailbreak the device itself to get

2909
01:50:56,480 --> 01:51:00,159
access to the instant specific piece

2910
01:51:00,159 --> 01:51:01,440
then that would be considered a

2911
01:51:01,440 --> 01:51:03,760
confidential client so you know maybe

2912
01:51:03,760 --> 01:51:05,520
the problem we have here is that we have

2913
01:51:05,520 --> 01:51:07,119
a bunch of

2914
01:51:07,119 --> 01:51:08,800
you know different interpretations of

2915
01:51:08,800 --> 01:51:10,400
what these terms mean

2916
01:51:10,400 --> 01:51:12,400
and you know we're trying to sort that

2917
01:51:12,400 --> 01:51:15,040
out and it has ripple effects as brian's

2918
01:51:15,040 --> 01:51:17,520
pointed out against existing specs

2919
01:51:17,520 --> 01:51:19,360
but i you know

2920
01:51:19,360 --> 01:51:20,960
that has been my interpretation

2921
01:51:20,960 --> 01:51:23,119
confidential clients are ones that can

2922
01:51:23,119 --> 01:51:25,280
successfully protect the secret public

2923
01:51:25,280 --> 01:51:27,199
clients are ones who can't regardless of

2924
01:51:27,199 --> 01:51:29,839
where they're running

2925
01:51:30,960 --> 01:51:33,280
go advertor great so

2926
01:51:33,280 --> 01:51:35,599
i think that this this discussion is

2927
01:51:35,599 --> 01:51:38,639
really an excellent example of

2928
01:51:38,639 --> 01:51:41,040
clearly we have different uh points of

2929
01:51:41,040 --> 01:51:43,280
view and different interpretation of how

2930
01:51:43,280 --> 01:51:45,920
this thing went because for me being

2931
01:51:45,920 --> 01:51:48,000
very pragmatic and having to deal from

2932
01:51:48,000 --> 01:51:50,719
the developer side the main difference

2933
01:51:50,719 --> 01:51:52,000
is that

2934
01:51:52,000 --> 01:51:54,480
there is only one twitter website

2935
01:51:54,480 --> 01:51:57,520
but there are millions of twitter

2936
01:51:57,520 --> 01:52:00,400
installations like everyone on the phone

2937
01:52:00,400 --> 01:52:03,520
everyone instance and then whoever

2938
01:52:03,520 --> 01:52:05,119
tweeter decides that they want to

2939
01:52:05,119 --> 01:52:08,000
identify a particular instance or not

2940
01:52:08,000 --> 01:52:10,880
it's up to them so i can model the

2941
01:52:10,880 --> 01:52:13,840
twitter client using a public client and

2942
01:52:13,840 --> 01:52:16,400
then if i want some extra guarantee

2943
01:52:16,400 --> 01:52:19,599
i can find a way of also assigning a key

2944
01:52:19,599 --> 01:52:21,440
so that although i still have the same

2945
01:52:21,440 --> 01:52:23,280
client id and the current id is the

2946
01:52:23,280 --> 01:52:25,440
thing that deals with the nature of a

2947
01:52:25,440 --> 01:52:27,679
client i have those extra guarantees in

2948
01:52:27,679 --> 01:52:30,960
which i can recognize the instance now

2949
01:52:30,960 --> 01:52:33,360
i can't claim that this is a normative

2950
01:52:33,360 --> 01:52:34,159
because

2951
01:52:34,159 --> 01:52:36,480
this stuff is not covered all i'm saying

2952
01:52:36,480 --> 01:52:38,400
is this is the way in which i've been

2953
01:52:38,400 --> 01:52:41,040
operating and helping customers model

2954
01:52:41,040 --> 01:52:44,239
things or observing others modeling

2955
01:52:44,239 --> 01:52:46,480
their own system to me this just points

2956
01:52:46,480 --> 01:52:48,719
to the fact that if we go in the

2957
01:52:48,719 --> 01:52:51,199
direction of saying no now we formally

2958
01:52:51,199 --> 01:52:52,960
want to say that anything that has a

2959
01:52:52,960 --> 01:52:55,920
credential is a confidential client then

2960
01:52:55,920 --> 01:52:58,480
we need to be explicit and saying okay

2961
01:52:58,480 --> 01:53:00,320
if you were doing the thing that i just

2962
01:53:00,320 --> 01:53:02,159
described in which you have those

2963
01:53:02,159 --> 01:53:05,520
enhanced public clients in which you can

2964
01:53:05,520 --> 01:53:07,920
recognize the instances of a client but

2965
01:53:07,920 --> 01:53:10,080
we all have the same client id you need

2966
01:53:10,080 --> 01:53:12,239
to distinguish these from singletons in

2967
01:53:12,239 --> 01:53:15,520
which when you have a website then uh

2968
01:53:15,520 --> 01:53:18,080
it's just one and so

2969
01:53:18,080 --> 01:53:19,599
let's use it a different way let's call

2970
01:53:19,599 --> 01:53:22,480
it the confidential client plus plus

2971
01:53:22,480 --> 01:53:25,840
or max or 365 depending on the company

2972
01:53:25,840 --> 01:53:27,520
but like yeah

2973
01:53:27,520 --> 01:53:31,840
perfect so yeah just wanted to qualify

2974
01:53:33,280 --> 01:53:35,360
active client no mike

2975
01:53:35,360 --> 01:53:37,759
um

2976
01:53:38,960 --> 01:53:42,080
oh the microsoft jokes in this room um

2977
01:53:42,080 --> 01:53:44,480
uh justin richard once again uh

2978
01:53:44,480 --> 01:53:48,400
i think victoria uh that

2979
01:53:48,400 --> 01:53:50,320
sorry you were saying all

2980
01:53:50,320 --> 01:53:51,760
lunch about how everybody gets your name

2981
01:53:51,760 --> 01:53:53,199
wrong and i've known you for years i

2982
01:53:53,199 --> 01:53:55,199
think vittorio and i actually

2983
01:53:55,199 --> 01:53:57,360
do agree violently in different

2984
01:53:57,360 --> 01:53:58,639
directions

2985
01:53:58,639 --> 01:54:00,159
um

2986
01:54:00,159 --> 01:54:01,040
so

2987
01:54:01,040 --> 01:54:03,920
everything that he just described about

2988
01:54:03,920 --> 01:54:06,639
how you have the special class of a

2989
01:54:06,639 --> 01:54:08,239
public client that's not acting like a

2990
01:54:08,239 --> 01:54:10,239
public client i would call that a

2991
01:54:10,239 --> 01:54:11,840
confidential client that's not acting

2992
01:54:11,840 --> 01:54:13,199
like a statically registered

2993
01:54:13,199 --> 01:54:15,119
confidential client

2994
01:54:15,119 --> 01:54:16,800
and that's why i really think we do need

2995
01:54:16,800 --> 01:54:18,960
this this different dimension in order

2996
01:54:18,960 --> 01:54:20,960
to talk about these things

2997
01:54:20,960 --> 01:54:24,000
um i'm with george and with the

2998
01:54:24,000 --> 01:54:26,000
the language that we have in dynamic

2999
01:54:26,000 --> 01:54:28,800
registration that said once you get the

3000
01:54:28,800 --> 01:54:30,080
credential

3001
01:54:30,080 --> 01:54:31,040
then

3002
01:54:31,040 --> 01:54:33,520
you are a confidential client like that

3003
01:54:33,520 --> 01:54:34,560
was

3004
01:54:34,560 --> 01:54:36,800
that was one of the the selling points

3005
01:54:36,800 --> 01:54:39,280
of dynamic registration was it was take

3006
01:54:39,280 --> 01:54:40,880
your public client and turn it into a

3007
01:54:40,880 --> 01:54:43,440
confidential client in a way that oauth

3008
01:54:43,440 --> 01:54:44,880
could actually think about it being a

3009
01:54:44,880 --> 01:54:46,639
confidential client with all the

3010
01:54:46,639 --> 01:54:48,560
security caveats that this is not the

3011
01:54:48,560 --> 01:54:50,800
same as a statically registered one

3012
01:54:50,800 --> 01:54:52,480
and then with software statements and

3013
01:54:52,480 --> 01:54:53,920
registration jots and all of that other

3014
01:54:53,920 --> 01:54:55,760
stuff people have bootstrapped a lot of

3015
01:54:55,760 --> 01:54:58,159
other layers of trust on on top of that

3016
01:54:58,159 --> 01:55:00,400
as well to have even more

3017
01:55:00,400 --> 01:55:01,840
gradients here

3018
01:55:01,840 --> 01:55:03,440
of trust

3019
01:55:03,440 --> 01:55:05,840
however at the end of the day

3020
01:55:05,840 --> 01:55:08,000
it is presenting

3021
01:55:08,000 --> 01:55:08,880
a

3022
01:55:08,880 --> 01:55:10,639
credential of some type be it a client

3023
01:55:10,639 --> 01:55:13,280
secret or something else

3024
01:55:13,280 --> 01:55:16,480
now i do think that it is interesting

3025
01:55:16,480 --> 01:55:20,239
if you vary the client id

3026
01:55:20,239 --> 01:55:22,639
per instance or not

3027
01:55:22,639 --> 01:55:24,480
and what that actually means that should

3028
01:55:24,480 --> 01:55:26,159
be part of this discussion that should

3029
01:55:26,159 --> 01:55:29,040
however not be part i would argue of the

3030
01:55:29,040 --> 01:55:33,119
definition of what makes a public or

3031
01:55:33,119 --> 01:55:36,159
confidential client

3032
01:55:36,159 --> 01:55:38,800
right because if i decide to give

3033
01:55:38,800 --> 01:55:41,760
everybody the same client id everybody

3034
01:55:41,760 --> 01:55:44,159
in the world the exact same client id

3035
01:55:44,159 --> 01:55:45,920
and differentiate them based on their

3036
01:55:45,920 --> 01:55:46,800
keys

3037
01:55:46,800 --> 01:55:48,080
instead

3038
01:55:48,080 --> 01:55:50,239
i could write that system it's kind of a

3039
01:55:50,239 --> 01:55:52,880
dumb idea in oauth world because so much

3040
01:55:52,880 --> 01:55:55,679
is leveraged on the client id that

3041
01:55:55,679 --> 01:55:59,360
public identifier what's that

3042
01:55:59,360 --> 01:56:00,960
yeah that's what twitter did that's what

3043
01:56:00,960 --> 01:56:03,119
that's what a bunch of other uh things

3044
01:56:03,119 --> 01:56:04,560
out there have done and

3045
01:56:04,560 --> 01:56:05,840
um

3046
01:56:05,840 --> 01:56:07,840
google did google did that back in the

3047
01:56:07,840 --> 01:56:10,800
oauth one days as well with their weird

3048
01:56:10,800 --> 01:56:12,800
ex-off extension thing

3049
01:56:12,800 --> 01:56:14,800
whatever that was called uh

3050
01:56:14,800 --> 01:56:16,560
regardless the point being that i don't

3051
01:56:16,560 --> 01:56:18,880
think that this should be wrapped around

3052
01:56:18,880 --> 01:56:21,760
the client identifier at all

3053
01:56:21,760 --> 01:56:24,320
um i do think that it does make sense to

3054
01:56:24,320 --> 01:56:26,320
collapse down to these two categories if

3055
01:56:26,320 --> 01:56:29,040
we can then have this larger discussion

3056
01:56:29,040 --> 01:56:32,960
about how you got into that category

3057
01:56:32,960 --> 01:56:34,560
that is really what i'm hearing is that

3058
01:56:34,560 --> 01:56:36,000
there's a lot of

3059
01:56:36,000 --> 01:56:38,560
factors about clients that you want to

3060
01:56:38,560 --> 01:56:40,080
treat differently depending on a lot of

3061
01:56:40,080 --> 01:56:41,679
different things

3062
01:56:41,679 --> 01:56:43,199
none of which have to do with whether or

3063
01:56:43,199 --> 01:56:46,480
not it has a secret yes exactly and it

3064
01:56:46,480 --> 01:56:48,159
applies to both clients with and without

3065
01:56:48,159 --> 01:56:50,880
a secret all those factors apply to both

3066
01:56:50,880 --> 01:56:52,719
clients so

3067
01:56:52,719 --> 01:56:54,480
i don't know it seems like it seems like

3068
01:56:54,480 --> 01:56:55,679
there's two different issues going on

3069
01:56:55,679 --> 01:56:57,199
one

3070
01:56:57,199 --> 01:57:00,320
i agree let's let's simplify the terms

3071
01:57:00,320 --> 01:57:01,920
and then two there's a lot of stuff we

3072
01:57:01,920 --> 01:57:03,920
need to talk about like there's more

3073
01:57:03,920 --> 01:57:05,280
things to add

3074
01:57:05,280 --> 01:57:07,599
about these different considerations and

3075
01:57:07,599 --> 01:57:09,280
everything that i've heard is definitely

3076
01:57:09,280 --> 01:57:13,040
like a good thing to to bring in as a

3077
01:57:13,040 --> 01:57:15,840
hey if you know you have the situation

3078
01:57:15,840 --> 01:57:17,599
and i think some of that exists in the

3079
01:57:17,599 --> 01:57:20,639
current draft but it was

3080
01:57:20,639 --> 01:57:22,639
more more tied to the public or

3081
01:57:22,639 --> 01:57:24,960
confidential type which

3082
01:57:24,960 --> 01:57:26,159
as we've seen is not actually the

3083
01:57:26,159 --> 01:57:28,800
correct place to tie it right

3084
01:57:28,800 --> 01:57:29,840
so

3085
01:57:29,840 --> 01:57:31,679
yeah we should be making we should be

3086
01:57:31,679 --> 01:57:33,440
making distinctions when there actually

3087
01:57:33,440 --> 01:57:35,840
is a difference between things

3088
01:57:35,840 --> 01:57:38,239
and in a lot of the discussion that i've

3089
01:57:38,239 --> 01:57:40,080
noticed here today a lot of the

3090
01:57:40,080 --> 01:57:42,639
decisions being made are actually

3091
01:57:42,639 --> 01:57:44,560
decisions that are on top of the oauth

3092
01:57:44,560 --> 01:57:46,639
protocol and not within the oauth

3093
01:57:46,639 --> 01:57:48,400
protocol itself

3094
01:57:48,400 --> 01:57:50,000
you know back to aaron's point of any

3095
01:57:50,000 --> 01:57:52,080
time uh that it shows up in the text

3096
01:57:52,080 --> 01:57:53,440
it's basically saying if you have

3097
01:57:53,440 --> 01:57:56,000
credentials present them and verify them

3098
01:57:56,000 --> 01:57:58,960
and then what you do from that point is

3099
01:57:58,960 --> 01:58:00,639
a different question

3100
01:58:00,639 --> 01:58:01,760
that you answer with different

3101
01:58:01,760 --> 01:58:04,320
information

3102
01:58:05,119 --> 01:58:08,080
so vittorio's concern was ripple effects

3103
01:58:08,080 --> 01:58:10,159
of redefining the term and i think

3104
01:58:10,159 --> 01:58:11,920
that's something that's worth paying

3105
01:58:11,920 --> 01:58:13,599
attention to but i don't necessarily

3106
01:58:13,599 --> 01:58:15,280
think it's

3107
01:58:15,280 --> 01:58:17,280
uh a deal breaker i don't think it's

3108
01:58:17,280 --> 01:58:18,480
something that's good that we should

3109
01:58:18,480 --> 01:58:19,520
stop

3110
01:58:19,520 --> 01:58:22,080
and revert this plan so

3111
01:58:22,080 --> 01:58:24,239
proceed with caution

3112
01:58:24,239 --> 01:58:27,280
uh and i'm happy to

3113
01:58:27,280 --> 01:58:29,440
keep that in mind as we work on these

3114
01:58:29,440 --> 01:58:31,920
changes okay we have two minutes here

3115
01:58:31,920 --> 01:58:34,480
and uh i want to allow george to

3116
01:58:34,480 --> 01:58:36,719
get into the mic george

3117
01:58:36,719 --> 01:58:38,960
sure i'll be real quick i think victoria

3118
01:58:38,960 --> 01:58:40,560
your model is a really interesting one

3119
01:58:40,560 --> 01:58:41,920
and actually

3120
01:58:41,920 --> 01:58:44,239
surprisingly one i heard

3121
01:58:44,239 --> 01:58:45,920
right when i think about dynamic client

3122
01:58:45,920 --> 01:58:47,520
registration i always think about

3123
01:58:47,520 --> 01:58:49,679
issuing each instance of a client its

3124
01:58:49,679 --> 01:58:52,480
own client id and specifically

3125
01:58:52,480 --> 01:58:55,360
that so that i can block that particular

3126
01:58:55,360 --> 01:58:57,119
client instance

3127
01:58:57,119 --> 01:58:59,199
um separated now you could do that by

3128
01:58:59,199 --> 01:59:00,880
the key as well right so

3129
01:59:00,880 --> 01:59:03,360
i would like you know i guess for me the

3130
01:59:03,360 --> 01:59:04,800
question is where do we have these

3131
01:59:04,800 --> 01:59:07,280
larger conversations about models um

3132
01:59:07,280 --> 01:59:08,719
because i think it's super important

3133
01:59:08,719 --> 01:59:10,159
right we probably have some best

3134
01:59:10,159 --> 01:59:12,560
practices or some patterns for the way

3135
01:59:12,560 --> 01:59:15,199
things are implemented and you know does

3136
01:59:15,199 --> 01:59:17,040
that go into a spec do we pull that out

3137
01:59:17,040 --> 01:59:18,800
into something else but i think that

3138
01:59:18,800 --> 01:59:20,719
would be really helpful for developers

3139
01:59:20,719 --> 01:59:22,239
to understand that there are multiple

3140
01:59:22,239 --> 01:59:23,280
models

3141
01:59:23,280 --> 01:59:25,840
and um and you know the pros and cons of

3142
01:59:25,840 --> 01:59:30,000
doing you know things one way or another

3143
01:59:30,000 --> 01:59:32,239
okay

3144
01:59:32,960 --> 01:59:34,000
honey

3145
01:59:34,000 --> 01:59:36,159
you wanna wrap up i'm that's it i'm

3146
01:59:36,159 --> 01:59:37,840
happy with this discussion thank you

3147
01:59:37,840 --> 01:59:39,920
it's very productive um i've got my

3148
01:59:39,920 --> 01:59:42,960
homework cut out for me awesome

3149
01:59:42,960 --> 01:59:45,119
good thanks aaron

3150
01:59:45,119 --> 01:59:48,000
yeah great discussion thank you all

3151
01:59:48,000 --> 01:59:51,199
uh we are done for today um but we still

3152
01:59:51,199 --> 01:59:53,679
have three more sessions

3153
01:59:53,679 --> 01:59:56,320
so two side meetings and we have

3154
01:59:56,320 --> 01:59:58,960
thursday also as an official

3155
01:59:58,960 --> 02:00:01,520
meeting okay see you there

3156
02:00:01,520 --> 02:00:03,119
go ahead mike

3157
02:00:03,119 --> 02:00:05,440
last last minute mike jones are the side

3158
02:00:05,440 --> 02:00:07,440
meetings on the list

3159
02:00:07,440 --> 02:00:10,159
or if not could you do that i i sent it

3160
02:00:10,159 --> 02:00:11,040
to

3161
02:00:11,040 --> 02:00:12,560
the list

3162
02:00:12,560 --> 02:00:16,080
i think i i will send it to the nest

3163
02:00:16,080 --> 02:00:17,599
yeah that's fine

3164
02:00:17,599 --> 02:00:18,560
okay

3165
02:00:18,560 --> 02:00:21,800
thank you

3166
02:00:37,599 --> 02:00:38,960
yeah

3167
02:00:38,960 --> 02:00:41,360
as long as it doesn't say confidentially

3168
02:00:41,360 --> 02:00:44,320
do not clear

3169
02:00:44,960 --> 02:00:48,679
you're good you're good

3170
02:01:06,400 --> 02:01:09,400
oh

3171
02:01:19,760 --> 02:01:22,760
okay

3172
02:01:29,440 --> 02:01:32,440
okay

3173
02:02:29,040 --> 02:02:32,040
one

3174
02:02:32,159 --> 02:02:34,239
you

