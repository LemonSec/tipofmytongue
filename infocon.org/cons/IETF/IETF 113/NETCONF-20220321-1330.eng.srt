1
00:00:14,920 --> 00:00:18,560
yeah all right it's uh

2
00:00:18,560 --> 00:00:21,600
time for the net count working group

3
00:00:21,600 --> 00:00:24,960
session so let's get started

4
00:00:24,960 --> 00:00:26,000
um

5
00:00:26,000 --> 00:00:28,400
this is the first hybrid meeting for all

6
00:00:28,400 --> 00:00:30,640
of us and i'm sure we're all trying to

7
00:00:30,640 --> 00:00:33,200
get used to the system a little bit so

8
00:00:33,200 --> 00:00:35,440
bear with us if not everything quite

9
00:00:35,440 --> 00:00:39,120
works perfectly as you would expect

10
00:00:39,120 --> 00:00:39,920
okay

11
00:00:39,920 --> 00:00:40,879
um

12
00:00:40,879 --> 00:00:45,440
this is the 113 meeting for netconf

13
00:00:45,440 --> 00:00:48,640
here is the familiar notewell

14
00:00:48,640 --> 00:00:50,879
i'll give you a moment to just quickly

15
00:00:50,879 --> 00:00:53,440
glance through it

16
00:00:53,440 --> 00:00:54,320
there

17
00:00:54,320 --> 00:00:57,120
is also a link at the bottom

18
00:00:57,120 --> 00:00:58,320
in case you

19
00:00:58,320 --> 00:01:01,840
want to read it in more detail

20
00:01:09,600 --> 00:01:10,560
okay

21
00:01:10,560 --> 00:01:12,799
moving on

22
00:01:12,799 --> 00:01:14,640
um

23
00:01:14,640 --> 00:01:17,520
a couple of administrative things for

24
00:01:17,520 --> 00:01:18,479
people

25
00:01:18,479 --> 00:01:21,920
who are in the room first

26
00:01:21,920 --> 00:01:25,280
do remember that you need to sign in to

27
00:01:25,280 --> 00:01:27,840
meet echo

28
00:01:27,920 --> 00:01:30,400
for it for you to not only speak to the

29
00:01:30,400 --> 00:01:31,920
mic

30
00:01:31,920 --> 00:01:34,400
but also to be registered as a

31
00:01:34,400 --> 00:01:36,880
participant in blue sheets

32
00:01:36,880 --> 00:01:38,880
so make sure you do that there are a

33
00:01:38,880 --> 00:01:40,880
couple of qr codes around the room that

34
00:01:40,880 --> 00:01:44,240
you can use to log in

35
00:01:44,240 --> 00:01:45,680
also

36
00:01:45,680 --> 00:01:47,840
even though you're in the room

37
00:01:47,840 --> 00:01:49,520
you're supposed to join the queue in

38
00:01:49,520 --> 00:01:50,880
meet echo

39
00:01:50,880 --> 00:01:52,479
before you

40
00:01:52,479 --> 00:01:54,720
speak into

41
00:01:54,720 --> 00:01:56,079
the

42
00:01:56,079 --> 00:01:58,000
microphone

43
00:01:58,000 --> 00:02:01,439
so do remember to do that

44
00:02:02,399 --> 00:02:04,320
for

45
00:02:04,320 --> 00:02:06,880
remote participants

46
00:02:06,880 --> 00:02:10,160
do turn off your audio and video unless

47
00:02:10,160 --> 00:02:11,599
you're presenting

48
00:02:11,599 --> 00:02:13,760
or asking a question

49
00:02:13,760 --> 00:02:15,040
and using

50
00:02:15,040 --> 00:02:20,480
a use of a headset is highly recommended

51
00:02:20,640 --> 00:02:23,920
blue sheets we already talked about

52
00:02:23,920 --> 00:02:26,160
we do have a chat window which you'll

53
00:02:26,160 --> 00:02:27,920
see next to the attendee list on the

54
00:02:27,920 --> 00:02:29,040
left

55
00:02:29,040 --> 00:02:32,080
you can use that to communicate

56
00:02:32,080 --> 00:02:34,160
um

57
00:02:34,160 --> 00:02:36,319
there is also

58
00:02:36,319 --> 00:02:37,920
a notes window

59
00:02:37,920 --> 00:02:39,840
that you can

60
00:02:39,840 --> 00:02:42,400
open into a separate tab from the menu

61
00:02:42,400 --> 00:02:44,879
bar at the top right

62
00:02:44,879 --> 00:02:46,480
and

63
00:02:46,480 --> 00:02:48,800
while some of us here in the room will

64
00:02:48,800 --> 00:02:50,959
be taking some notes i would highly

65
00:02:50,959 --> 00:02:51,920
encourage

66
00:02:51,920 --> 00:02:54,560
people sitting remotely

67
00:02:54,560 --> 00:02:56,560
if they could add their

68
00:02:56,560 --> 00:02:58,959
understanding of what's happening

69
00:02:58,959 --> 00:03:01,040
to the notes section

70
00:03:01,040 --> 00:03:03,360
it's been pre-populated with

71
00:03:03,360 --> 00:03:07,120
the agenda for netcast

72
00:03:08,080 --> 00:03:11,680
jabber if anybody is on jabber they're

73
00:03:11,680 --> 00:03:13,760
whatever they type should

74
00:03:13,760 --> 00:03:18,959
show up in the chat window of meet echo

75
00:03:18,959 --> 00:03:21,280
all right

76
00:03:22,080 --> 00:03:25,040
we have a two-hour slot for today

77
00:03:25,040 --> 00:03:27,760
we'll try to help the presenters along

78
00:03:27,760 --> 00:03:29,840
with the counter that will show at the

79
00:03:29,840 --> 00:03:31,440
bottom of the

80
00:03:31,440 --> 00:03:33,920
screen for them to know when their time

81
00:03:33,920 --> 00:03:35,680
is up

82
00:03:35,680 --> 00:03:37,120
we don't expect

83
00:03:37,120 --> 00:03:38,400
to use

84
00:03:38,400 --> 00:03:40,799
to have to cut off anyone either on

85
00:03:40,799 --> 00:03:42,799
presentation or questions

86
00:03:42,799 --> 00:03:46,640
but if we have to use it we'll use it

87
00:03:46,640 --> 00:03:49,519
we talked about the queue

88
00:03:49,519 --> 00:03:52,319
to remember to cue yourself in miteko

89
00:03:52,319 --> 00:03:55,119
before speaking

90
00:03:55,360 --> 00:03:57,920
to speak use the icon with the play

91
00:03:57,920 --> 00:03:59,120
symbol

92
00:03:59,120 --> 00:04:01,599
and remember to remove yourself from the

93
00:04:01,599 --> 00:04:05,119
queue once you're done speaking

94
00:04:05,599 --> 00:04:07,120
we talked a little bit about the note

95
00:04:07,120 --> 00:04:09,439
taking

96
00:04:09,439 --> 00:04:11,200
if you don't have the link i have put

97
00:04:11,200 --> 00:04:14,720
that at the bottom the last bullet

98
00:04:14,720 --> 00:04:17,040
but it's also available in the menu bar

99
00:04:17,040 --> 00:04:18,798
on the top

100
00:04:18,798 --> 00:04:21,679
of me takeo

101
00:04:22,639 --> 00:04:25,280
all right so status of liaisons and at

102
00:04:25,280 --> 00:04:28,320
this point let me hand it over to kent

103
00:04:28,320 --> 00:04:30,320
to talk a little bit about the liaison

104
00:04:30,320 --> 00:04:32,639
statement with ieee

105
00:04:32,639 --> 00:04:35,440
yes uh thank you mahesh

106
00:04:35,440 --> 00:04:38,880
um so ieee

107
00:04:38,880 --> 00:04:41,440
802.1

108
00:04:41,440 --> 00:04:44,479
reached out to netconf working group

109
00:04:44,479 --> 00:04:46,000
about

110
00:04:46,000 --> 00:04:47,520
half a year ago

111
00:04:47,520 --> 00:04:50,880
with regards to the keystore draft

112
00:04:50,880 --> 00:04:54,000
and in particular some language with

113
00:04:54,000 --> 00:04:55,360
regards to

114
00:04:55,360 --> 00:04:58,400
promoting or copying private keys

115
00:04:58,400 --> 00:04:59,520
from

116
00:04:59,520 --> 00:05:00,479
a

117
00:05:00,479 --> 00:05:02,320
built-in or system

118
00:05:02,320 --> 00:05:03,440
data store

119
00:05:03,440 --> 00:05:06,320
to running data store

120
00:05:06,320 --> 00:05:07,680
and

121
00:05:07,680 --> 00:05:09,280
just

122
00:05:09,280 --> 00:05:11,680
on a couple weeks ago

123
00:05:11,680 --> 00:05:15,120
rob wilton and myself attended the

124
00:05:15,120 --> 00:05:16,800
youngsters meeting

125
00:05:16,800 --> 00:05:19,039
on march the 10th which is during the

126
00:05:19,039 --> 00:05:23,360
ieee 802.1 plenary

127
00:05:23,360 --> 00:05:26,080
and we had a good discussion i thought

128
00:05:26,080 --> 00:05:28,639
it lasted for about 10 minutes or so

129
00:05:28,639 --> 00:05:30,639
and which the action items that came

130
00:05:30,639 --> 00:05:33,039
from that was one first for rob to send

131
00:05:33,039 --> 00:05:35,280
a liaison response

132
00:05:35,280 --> 00:05:37,120
with regards to

133
00:05:37,120 --> 00:05:38,720
general conformance

134
00:05:38,720 --> 00:05:41,199
when dealing with multiple standards or

135
00:05:41,199 --> 00:05:44,160
standard spanning multiple sdos

136
00:05:44,160 --> 00:05:45,840
there's three

137
00:05:45,840 --> 00:05:47,600
items for myself

138
00:05:47,600 --> 00:05:50,160
one to ensure the keystore keystore

139
00:05:50,160 --> 00:05:52,560
draft adequately indicates what kind of

140
00:05:52,560 --> 00:05:53,680
key is being referred to on a

141
00:05:53,680 --> 00:05:55,280
case-by-case basis

142
00:05:55,280 --> 00:05:57,280
second to amend the keysword draft to

143
00:05:57,280 --> 00:05:59,520
indicate that built-in keys should not

144
00:05:59,520 --> 00:06:00,880
be clear text

145
00:06:00,880 --> 00:06:03,280
and lastly to ensure that the crypto

146
00:06:03,280 --> 00:06:05,600
type strap adequately defines what is

147
00:06:05,600 --> 00:06:08,080
meant as a hidden key

148
00:06:08,080 --> 00:06:09,440
and then lastly

149
00:06:09,440 --> 00:06:13,120
mick seaman from ieee would ensure that

150
00:06:13,120 --> 00:06:14,720
those draft updates addressed his

151
00:06:14,720 --> 00:06:16,479
concerns

152
00:06:16,479 --> 00:06:18,400
so the actual impact would be of course

153
00:06:18,400 --> 00:06:20,319
the updating of the keystore draft and

154
00:06:20,319 --> 00:06:23,120
potentially also the crypto types draft

155
00:06:23,120 --> 00:06:25,039
so that's all i wanted to say about this

156
00:06:25,039 --> 00:06:27,840
uh but i know that scott mansfield

157
00:06:27,840 --> 00:06:30,080
who's part of the ieee group is in the

158
00:06:30,080 --> 00:06:32,000
room and maybe would like to say

159
00:06:32,000 --> 00:06:36,800
something as well or yes go ahead scott

160
00:06:37,360 --> 00:06:38,720
i don't want to

161
00:06:38,720 --> 00:06:41,440
bust in line uh rob has something to say

162
00:06:41,440 --> 00:06:43,840
first and then i can close off

163
00:06:43,840 --> 00:06:45,280
sorry i didn't see the queue order

164
00:06:45,280 --> 00:06:47,440
you're right go ahead rob

165
00:06:47,440 --> 00:06:49,599
yeah go ahead and use that uh euro

166
00:06:49,599 --> 00:06:52,800
robles from cisco so um yes i think kent

167
00:06:52,800 --> 00:06:54,000
sums it up well i think was a good

168
00:06:54,000 --> 00:06:56,400
discussion in terms of laser response i

169
00:06:56,400 --> 00:07:00,560
raised this with um the isg and iab

170
00:07:00,560 --> 00:07:02,080
suggesting that i'd write this response

171
00:07:02,080 --> 00:07:03,280
they're quite happy with that so i think

172
00:07:03,280 --> 00:07:04,720
that's fine i think it might end up

173
00:07:04,720 --> 00:07:06,080
coming from the working group but i'm

174
00:07:06,080 --> 00:07:08,479
happy to work on the text and then uh

175
00:07:08,479 --> 00:07:10,560
work out what the exact process is and

176
00:07:10,560 --> 00:07:12,880
probably we can run it by scott and mick

177
00:07:12,880 --> 00:07:14,160
beforehand to check that they can be

178
00:07:14,160 --> 00:07:15,440
happy with what we're writing there as

179
00:07:15,440 --> 00:07:16,479
well

180
00:07:16,479 --> 00:07:18,000
thanks

181
00:07:18,000 --> 00:07:19,520
perfect

182
00:07:19,520 --> 00:07:22,560
scott did you watch or add something

183
00:07:22,560 --> 00:07:25,120
yes scott mansfield erickson

184
00:07:25,120 --> 00:07:29,120
also works on liaison and such the

185
00:07:29,120 --> 00:07:32,639
first off wanted to really thank rob and

186
00:07:32,639 --> 00:07:34,960
ken for reaching out and trying to get

187
00:07:34,960 --> 00:07:35,919
this

188
00:07:35,919 --> 00:07:37,440
issue resolved

189
00:07:37,440 --> 00:07:38,319
the

190
00:07:38,319 --> 00:07:40,240
ietf

191
00:07:40,240 --> 00:07:44,000
ieee liaison officer i believe is russ

192
00:07:44,000 --> 00:07:46,560
housely so we should include him to make

193
00:07:46,560 --> 00:07:48,000
sure that it goes through the right

194
00:07:48,000 --> 00:07:50,160
proper channels

195
00:07:50,160 --> 00:07:52,080
if you need any help from me since it is

196
00:07:52,080 --> 00:07:54,800
an 802.1 specific thing i can also help

197
00:07:54,800 --> 00:07:57,440
with the wording or help get it to the

198
00:07:57,440 --> 00:07:59,919
right people but other than that it was

199
00:07:59,919 --> 00:08:01,919
a great discussion the next youngsters

200
00:08:01,919 --> 00:08:03,680
meeting for those that care will be on

201
00:08:03,680 --> 00:08:05,599
the 29th of march

202
00:08:05,599 --> 00:08:07,440
so if you if there's any follow-up or

203
00:08:07,440 --> 00:08:09,759
questions please feel free to join that

204
00:08:09,759 --> 00:08:13,400
meeting thank you

205
00:08:15,680 --> 00:08:17,120
all right

206
00:08:17,120 --> 00:08:20,560
um so continuing

207
00:08:21,120 --> 00:08:23,520
the chair status um

208
00:08:23,520 --> 00:08:24,720
so this

209
00:08:24,720 --> 00:08:27,360
with the chartered work group items

210
00:08:27,360 --> 00:08:30,319
the yang push notifications as an rfc

211
00:08:30,319 --> 00:08:33,599
congratulations to the authors

212
00:08:33,599 --> 00:08:37,159
rfc 9196

213
00:08:38,240 --> 00:08:39,279
the

214
00:08:39,279 --> 00:08:41,519
rest of the workgroup items

215
00:08:41,519 --> 00:08:44,560
we have sztp csr draft

216
00:08:44,560 --> 00:08:47,839
that is passed iesg review

217
00:08:47,839 --> 00:08:50,000
i believe it's in the rfc editor queue

218
00:08:50,000 --> 00:08:52,240
at this point

219
00:08:52,240 --> 00:08:56,000
the https nordicdraft um is waiting for

220
00:08:56,000 --> 00:08:57,279
a write-up

221
00:08:57,279 --> 00:09:00,160
and i guess should is it fair to say

222
00:09:00,160 --> 00:09:02,160
that the shepherd has been identified

223
00:09:02,160 --> 00:09:04,720
i'm asking robby here

224
00:09:04,720 --> 00:09:06,640
uh robert yes i've got a shepherd lined

225
00:09:06,640 --> 00:09:08,000
up so that's good

226
00:09:08,000 --> 00:09:09,120
and i needed the write-up so it's just

227
00:09:09,120 --> 00:09:10,640
waiting on me so i will try and get to

228
00:09:10,640 --> 00:09:13,519
that soon this week hopefully

229
00:09:13,519 --> 00:09:15,279
thanks rob

230
00:09:15,279 --> 00:09:16,560
um

231
00:09:16,560 --> 00:09:18,880
the client service suite of drafts

232
00:09:18,880 --> 00:09:22,560
have completed work group last call

233
00:09:22,560 --> 00:09:25,040
there are a couple of uh last call

234
00:09:25,040 --> 00:09:27,040
issues that are being resolved as we

235
00:09:27,040 --> 00:09:28,720
speak

236
00:09:28,720 --> 00:09:30,800
the european order draft is work in

237
00:09:30,800 --> 00:09:32,080
progress

238
00:09:32,080 --> 00:09:34,720
will be discussed in this meeting

239
00:09:34,720 --> 00:09:37,760
and the distributed notif uh is that

240
00:09:37,760 --> 00:09:39,279
version three

241
00:09:39,279 --> 00:09:41,839
and there's been very little discussion

242
00:09:41,839 --> 00:09:44,560
on the list

243
00:09:45,600 --> 00:09:46,399
so

244
00:09:46,399 --> 00:09:50,000
here is the agenda for today

245
00:09:50,000 --> 00:09:52,800
um we have

246
00:09:52,800 --> 00:09:54,480
of course kent with

247
00:09:54,480 --> 00:09:56,800
the client server suite of drafts

248
00:09:56,800 --> 00:09:58,560
and

249
00:09:58,560 --> 00:10:01,200
udp notif they uh sorry udp based

250
00:10:01,200 --> 00:10:02,320
transport

251
00:10:02,320 --> 00:10:04,320
for configured is all the other work

252
00:10:04,320 --> 00:10:05,680
group

253
00:10:05,680 --> 00:10:08,079
chartered item

254
00:10:08,079 --> 00:10:10,160
on the non-chartered item list we have a

255
00:10:10,160 --> 00:10:11,920
few presentations

256
00:10:11,920 --> 00:10:13,279
um so

257
00:10:13,279 --> 00:10:16,640
it should be a fairly packed session

258
00:10:16,640 --> 00:10:19,040
with enough time for questions at the

259
00:10:19,040 --> 00:10:20,959
end

260
00:10:20,959 --> 00:10:24,560
right i think that's pretty much it for

261
00:10:24,560 --> 00:10:29,000
the chair presentations any questions

262
00:10:39,360 --> 00:10:41,440
go ahead scott

263
00:10:41,440 --> 00:10:42,720
hi it's uh

264
00:10:42,720 --> 00:10:44,959
maybe it's just me because i am remote

265
00:10:44,959 --> 00:10:47,040
but mahesh you sound it sounds like he's

266
00:10:47,040 --> 00:10:49,040
underwater or something i don't know if

267
00:10:49,040 --> 00:10:50,880
i just need to turn up my volume but i

268
00:10:50,880 --> 00:10:53,920
have no trouble hearing kent or rob or

269
00:10:53,920 --> 00:10:56,560
anyone else so just wanted to raise that

270
00:10:56,560 --> 00:10:57,600
thanks

271
00:10:57,600 --> 00:11:01,519
okay is this any better

272
00:11:01,519 --> 00:11:04,640
yes it is better when you face them

273
00:11:04,640 --> 00:11:08,720
all right i'll try to speak into the mic

274
00:11:09,600 --> 00:11:10,480
okay

275
00:11:10,480 --> 00:11:12,399
all right um mahesh i'm going to revoke

276
00:11:12,399 --> 00:11:14,880
yours oh you did it yourself fine let me

277
00:11:14,880 --> 00:11:16,480
start sharing the next

278
00:11:16,480 --> 00:11:19,200
slides

279
00:11:21,040 --> 00:11:22,480
okay so

280
00:11:22,480 --> 00:11:24,720
my name is kent i'm presenting the

281
00:11:24,720 --> 00:11:27,360
client service with the drafts

282
00:11:27,360 --> 00:11:31,120
um this has been a long project for the

283
00:11:31,120 --> 00:11:33,600
working group and we're almost to the to

284
00:11:33,600 --> 00:11:36,079
the end of it

285
00:11:36,560 --> 00:11:38,320
this is actually the first time that the

286
00:11:38,320 --> 00:11:39,680
client service suited drafts has been

287
00:11:39,680 --> 00:11:42,880
presented since itf 110

288
00:11:42,880 --> 00:11:45,920
though they were touched on as chair

289
00:11:45,920 --> 00:11:48,160
slides amendment or you know notes

290
00:11:48,160 --> 00:11:50,399
during the chair slides in previous

291
00:11:50,399 --> 00:11:51,839
ietf sessions

292
00:11:51,839 --> 00:11:54,560
so uh on this time i'll just do a little

293
00:11:54,560 --> 00:11:57,360
bit recap going back to 110 it's not

294
00:11:57,360 --> 00:11:59,279
much actually because we've just been

295
00:11:59,279 --> 00:12:00,880
doing uh fit and finish for the most

296
00:12:00,880 --> 00:12:02,000
part

297
00:12:02,000 --> 00:12:04,399
um but for the crypto types draft we did

298
00:12:04,399 --> 00:12:06,720
accommodate some sector review comments

299
00:12:06,720 --> 00:12:10,240
from valerie simslove and we added the

300
00:12:10,240 --> 00:12:12,959
hidden keys feature uh i mean so the

301
00:12:12,959 --> 00:12:14,560
hidden concept of hidden keys existed

302
00:12:14,560 --> 00:12:17,200
before just the the feature statement

303
00:12:17,200 --> 00:12:20,000
hidden keys didn't exist before

304
00:12:20,000 --> 00:12:22,880
in the trust anchors draft we added

305
00:12:22,880 --> 00:12:25,600
prefixes to the path statements on a per

306
00:12:25,600 --> 00:12:28,160
trust anchor issue um

307
00:12:28,160 --> 00:12:29,680
regarding that issue

308
00:12:29,680 --> 00:12:32,240
and we renamed the trustpillar supported

309
00:12:32,240 --> 00:12:34,800
uh feature to central trustor supported

310
00:12:34,800 --> 00:12:37,120
that was from jurgen i believe

311
00:12:37,120 --> 00:12:39,360
we removed two unnecessary slash

312
00:12:39,360 --> 00:12:42,880
unwanted min element 1

313
00:12:42,880 --> 00:12:46,560
statements and added a present statement

314
00:12:46,560 --> 00:12:49,200
and we added an informative reference to

315
00:12:49,200 --> 00:12:53,839
the mos netmod with systemdraft

316
00:12:53,839 --> 00:12:56,320
so with regards to built-in keys at the

317
00:12:56,320 --> 00:12:59,040
time that we wrote the text for built-in

318
00:12:59,040 --> 00:13:00,639
keys and trust anchors

319
00:13:00,639 --> 00:13:03,120
we only had operational data store but

320
00:13:03,120 --> 00:13:04,160
now

321
00:13:04,160 --> 00:13:06,000
there's this introduction of a system

322
00:13:06,000 --> 00:13:08,160
data store so those things could show up

323
00:13:08,160 --> 00:13:10,639
there as well and so an informative

324
00:13:10,639 --> 00:13:12,880
reference made sense

325
00:13:12,880 --> 00:13:16,079
for the keystore draft we also the same

326
00:13:16,079 --> 00:13:18,480
note about adding prefixes to path

327
00:13:18,480 --> 00:13:19,519
statements

328
00:13:19,519 --> 00:13:22,399
and again we renamed the feature from

329
00:13:22,399 --> 00:13:24,399
keystore supported to central keystore

330
00:13:24,399 --> 00:13:25,600
supported

331
00:13:25,600 --> 00:13:27,600
and we added feature statements for

332
00:13:27,600 --> 00:13:30,000
asymmetric keys and symmetric keys

333
00:13:30,000 --> 00:13:32,560
and lastly an informative reference to

334
00:13:32,560 --> 00:13:34,560
the with system draft

335
00:13:34,560 --> 00:13:36,000
you'll notice that on the right hand

336
00:13:36,000 --> 00:13:38,639
side it does mention that the key store

337
00:13:38,639 --> 00:13:41,519
is the liaison we just discussed

338
00:13:41,519 --> 00:13:43,360
and

339
00:13:43,360 --> 00:13:45,920
so next slide we had a tcp client server

340
00:13:45,920 --> 00:13:46,959
draft

341
00:13:46,959 --> 00:13:50,320
we removed the tcp connection grouping

342
00:13:50,320 --> 00:13:52,880
grouping um and so now we just use the

343
00:13:52,880 --> 00:13:54,480
tcp common grouping directly that was

344
00:13:54,480 --> 00:13:55,839
actually done quite a while that was

345
00:13:55,839 --> 00:13:58,079
back in the 110 time frame it was done a

346
00:13:58,079 --> 00:13:59,920
while ago we added a security

347
00:13:59,920 --> 00:14:01,920
consideration section for the local

348
00:14:01,920 --> 00:14:04,160
binding supported feature

349
00:14:04,160 --> 00:14:06,160
and then for ssh client server draft we

350
00:14:06,160 --> 00:14:08,320
removed the supported authentication

351
00:14:08,320 --> 00:14:09,680
methods

352
00:14:09,680 --> 00:14:13,279
from the client authentication grouping

353
00:14:13,279 --> 00:14:15,839
and we moved algorithms

354
00:14:15,839 --> 00:14:17,440
away from

355
00:14:17,440 --> 00:14:20,800
the ietf ssh common module to a more

356
00:14:20,800 --> 00:14:23,360
general iana maintain modules and this

357
00:14:23,360 --> 00:14:25,440
is kind of a big thing we also did it in

358
00:14:25,440 --> 00:14:27,920
the tls client server graph but

359
00:14:27,920 --> 00:14:30,639
essentially the same update where

360
00:14:30,639 --> 00:14:32,959
we're going to the iana maintained

361
00:14:32,959 --> 00:14:36,000
registries for algorithms

362
00:14:36,000 --> 00:14:38,560
once for ssh and then separately again

363
00:14:38,560 --> 00:14:40,000
for tls

364
00:14:40,000 --> 00:14:42,959
and converting those registries

365
00:14:42,959 --> 00:14:44,720
into gang modules

366
00:14:44,720 --> 00:14:47,360
that can be henceforth maintained by

367
00:14:47,360 --> 00:14:48,959
ayanna

368
00:14:48,959 --> 00:14:51,120
so that's what that item there is

369
00:14:51,120 --> 00:14:53,600
we also added a config false list for

370
00:14:53,600 --> 00:14:55,839
the algorithm supported so

371
00:14:55,839 --> 00:14:58,480
while they're in iana registry defines

372
00:14:58,480 --> 00:15:01,360
hundreds of algorithms a particular

373
00:15:01,360 --> 00:15:03,040
server may only

374
00:15:03,040 --> 00:15:05,920
support a subset of them so this config

375
00:15:05,920 --> 00:15:08,720
false list enables them to identify the

376
00:15:08,720 --> 00:15:11,040
server identify which subset they

377
00:15:11,040 --> 00:15:12,800
support

378
00:15:12,800 --> 00:15:14,720
and we also added

379
00:15:14,720 --> 00:15:16,560
to be discussed in this slide

380
00:15:16,560 --> 00:15:19,680
presentation a generate public key

381
00:15:19,680 --> 00:15:22,079
rpc and so we'll be discussing that in a

382
00:15:22,079 --> 00:15:23,279
moment

383
00:15:23,279 --> 00:15:26,240
for the tls client server craft we again

384
00:15:26,240 --> 00:15:28,480
moved algorithms and we have now the

385
00:15:28,480 --> 00:15:30,800
iana maintained modules

386
00:15:30,800 --> 00:15:32,320
and again we

387
00:15:32,320 --> 00:15:34,399
added a config false list for the

388
00:15:34,399 --> 00:15:36,480
algorithm supported by the server

389
00:15:36,480 --> 00:15:39,199
and then lastly we made a major update

390
00:15:39,199 --> 00:15:41,600
to this draft and specifically to the

391
00:15:41,600 --> 00:15:45,920
yang modules to support tos 1 3

392
00:15:45,920 --> 00:15:48,959
mostly in reaction to comments made by

393
00:15:48,959 --> 00:15:53,120
tom patch over of course the last year

394
00:15:53,120 --> 00:15:55,680
with regards to how cls13 was quite

395
00:15:55,680 --> 00:15:56,800
different

396
00:15:56,800 --> 00:15:58,959
and shortly uh we'll be presenting that

397
00:15:58,959 --> 00:16:01,360
as well

398
00:16:01,360 --> 00:16:02,880
so

399
00:16:02,880 --> 00:16:04,720
moving on uh there were really no

400
00:16:04,720 --> 00:16:06,560
updates to the http client server draft

401
00:16:06,560 --> 00:16:09,680
in these past a year just nits

402
00:16:09,680 --> 00:16:12,240
in the netconf client server draft

403
00:16:12,240 --> 00:16:15,600
we did augment in a mapping required

404
00:16:15,600 --> 00:16:18,959
flag into the client identity mappings

405
00:16:18,959 --> 00:16:21,120
only for the ssh transport

406
00:16:21,120 --> 00:16:22,399
and so

407
00:16:22,399 --> 00:16:26,000
just locking things down making the

408
00:16:26,000 --> 00:16:28,480
the validation more correct

409
00:16:28,480 --> 00:16:31,839
and then lastly we removed appendix a

410
00:16:31,839 --> 00:16:34,320
which was having before fully expanded

411
00:16:34,320 --> 00:16:36,399
tree diagrams but those tree diagrams

412
00:16:36,399 --> 00:16:38,399
were enormous i mean literally the tree

413
00:16:38,399 --> 00:16:40,800
diagram itself spanned uh five pages i

414
00:16:40,800 --> 00:16:42,959
think and so we just removed those

415
00:16:42,959 --> 00:16:44,720
foliage and once they fully expanded i

416
00:16:44,720 --> 00:16:47,440
mean all the groups have been expanded

417
00:16:47,440 --> 00:16:49,279
so the uses statements have been

418
00:16:49,279 --> 00:16:51,920
expanded uh so now only uh both the

419
00:16:51,920 --> 00:16:54,000
netcomf server netconf and rescon client

420
00:16:54,000 --> 00:16:56,560
server drafts have just the unexpanded

421
00:16:56,560 --> 00:16:58,800
uh where the grouping are displayed as

422
00:16:58,800 --> 00:17:01,040
users

423
00:17:01,040 --> 00:17:03,440
that's what so those are the updates of

424
00:17:03,440 --> 00:17:05,119
sense 110.

425
00:17:05,119 --> 00:17:06,720
i did mention a couple items that we're

426
00:17:06,720 --> 00:17:08,240
going to circle back on the first is

427
00:17:08,240 --> 00:17:11,119
this generate public key rpc which is an

428
00:17:11,119 --> 00:17:13,599
open issue and i'm hoping to get some

429
00:17:13,599 --> 00:17:16,720
discussion uh so about three years ago

430
00:17:16,720 --> 00:17:19,679
folks may remember that the crypto types

431
00:17:19,679 --> 00:17:22,640
draft attempted to define actions for

432
00:17:22,640 --> 00:17:24,799
generating private keys

433
00:17:24,799 --> 00:17:28,079
and after much discussion we abandoned

434
00:17:28,079 --> 00:17:30,080
these action statements when it became

435
00:17:30,080 --> 00:17:32,640
not possible to define a set of

436
00:17:32,640 --> 00:17:35,440
algorithm identifiers that span protocol

437
00:17:35,440 --> 00:17:39,440
stacks so for instance ssh and tls

438
00:17:39,440 --> 00:17:40,960
each of these

439
00:17:40,960 --> 00:17:43,760
protocols are their own

440
00:17:43,760 --> 00:17:46,160
crypto silos if you will having their

441
00:17:46,160 --> 00:17:49,679
own iana maintained registries and

442
00:17:49,679 --> 00:17:52,320
trying to get the security

443
00:17:52,320 --> 00:17:55,440
directorate or area to unify to come

444
00:17:55,440 --> 00:17:56,720
with a unified set of algorithm

445
00:17:56,720 --> 00:17:59,440
identifiers expand these protocols

446
00:17:59,440 --> 00:18:02,880
proved difficult to say the least

447
00:18:02,880 --> 00:18:06,160
so we did abandon that idea about three

448
00:18:06,160 --> 00:18:07,200
years ago

449
00:18:07,200 --> 00:18:10,240
but uh since then um as mentioned

450
00:18:10,240 --> 00:18:12,400
earlier both the client the ssh client

451
00:18:12,400 --> 00:18:14,400
server and tls client server drafts now

452
00:18:14,400 --> 00:18:16,160
have their own

453
00:18:16,160 --> 00:18:18,480
iana maintained algorithm identifiers

454
00:18:18,480 --> 00:18:19,919
they're being pulled from iana

455
00:18:19,919 --> 00:18:21,840
maintained registries

456
00:18:21,840 --> 00:18:23,840
and so it becomes possible again to

457
00:18:23,840 --> 00:18:25,200
maybe define

458
00:18:25,200 --> 00:18:27,679
um an rpc but this time make it be

459
00:18:27,679 --> 00:18:31,360
protocol specific rpcs in each draft

460
00:18:31,360 --> 00:18:33,039
so i've already made this update to the

461
00:18:33,039 --> 00:18:35,679
ssh draft which i'll on the next slide

462
00:18:35,679 --> 00:18:37,760
i'll show and the slide after is

463
00:18:37,760 --> 00:18:39,520
regarding the tls draft which is where

464
00:18:39,520 --> 00:18:42,400
the discussion comes into play

465
00:18:42,400 --> 00:18:44,960
so for the ssh draft you can see it's

466
00:18:44,960 --> 00:18:48,160
just an rpc it's very straightforward

467
00:18:48,160 --> 00:18:49,679
their input but notice that the

468
00:18:49,679 --> 00:18:51,280
algorithm at the very top on the right

469
00:18:51,280 --> 00:18:52,320
hand side

470
00:18:52,320 --> 00:18:54,720
in yellow it's a it's an algorithm

471
00:18:54,720 --> 00:18:57,919
identifier identity reference so that is

472
00:18:57,919 --> 00:18:59,360
a reference to

473
00:18:59,360 --> 00:19:01,520
and you can see it ssh of course the

474
00:19:01,520 --> 00:19:05,440
protocol ssh pka stands for public key

475
00:19:05,440 --> 00:19:06,799
algorithm

476
00:19:06,799 --> 00:19:09,120
so in ssh there's four different kinds

477
00:19:09,120 --> 00:19:11,840
of algorithm

478
00:19:12,080 --> 00:19:14,960
identities based classes pka is one of

479
00:19:14,960 --> 00:19:15,919
the four

480
00:19:15,919 --> 00:19:17,600
and is the only one that really matters

481
00:19:17,600 --> 00:19:19,919
when it comes to generating private keys

482
00:19:19,919 --> 00:19:22,160
so it's a reference to that public key

483
00:19:22,160 --> 00:19:23,840
identifier

484
00:19:23,840 --> 00:19:25,520
as basically what is the kind of

485
00:19:25,520 --> 00:19:26,720
algorithm or what kind of key do you

486
00:19:26,720 --> 00:19:27,919
want to generate

487
00:19:27,919 --> 00:19:31,039
there is a bit so how long of a key

488
00:19:31,039 --> 00:19:32,720
and then and then there's a little bit

489
00:19:32,720 --> 00:19:34,480
of how do you want it to be encoded do

490
00:19:34,480 --> 00:19:36,240
you want the key to be returned as clear

491
00:19:36,240 --> 00:19:37,120
text

492
00:19:37,120 --> 00:19:39,440
or should it be encrypted by another key

493
00:19:39,440 --> 00:19:41,440
or would you like in fact the system to

494
00:19:41,440 --> 00:19:43,360
hide the key like it becomes a built-in

495
00:19:43,360 --> 00:19:44,640
key

496
00:19:44,640 --> 00:19:45,520
not

497
00:19:45,520 --> 00:19:47,679
ever visible to the outside

498
00:19:47,679 --> 00:19:49,600
outside the server

499
00:19:49,600 --> 00:19:51,039
and the response

500
00:19:51,039 --> 00:19:53,919
is uh effectively exactly the same as

501
00:19:53,919 --> 00:19:56,240
what you'd find inside keystore but in

502
00:19:56,240 --> 00:19:59,440
the form of output for rpc response so

503
00:19:59,440 --> 00:20:02,159
the format of the key how's it been

504
00:20:02,159 --> 00:20:03,200
encoded

505
00:20:03,200 --> 00:20:04,799
and then of course if it's different

506
00:20:04,799 --> 00:20:06,320
kinds of key if it's clear text you just

507
00:20:06,320 --> 00:20:08,320
get the key if it's hidden then it's

508
00:20:08,320 --> 00:20:10,000
just an empty you don't really get the

509
00:20:10,000 --> 00:20:12,000
key it just says it's empty and if it's

510
00:20:12,000 --> 00:20:13,520
encrypted you get back the encrypted

511
00:20:13,520 --> 00:20:15,520
data but also a reference to the other

512
00:20:15,520 --> 00:20:17,840
key that it was encrypted by

513
00:20:17,840 --> 00:20:19,280
so that's all very straightforward and

514
00:20:19,280 --> 00:20:21,840
it's easy i mean doing this rpc took me

515
00:20:21,840 --> 00:20:25,200
no more than 45 minutes probably to put

516
00:20:25,200 --> 00:20:27,280
together very straightforward then i

517
00:20:27,280 --> 00:20:30,159
moved on to tls to try to do the same

518
00:20:30,159 --> 00:20:33,520
there and discovered some complication

519
00:20:33,520 --> 00:20:36,159
the issue is that with tls there's only

520
00:20:36,159 --> 00:20:38,559
one registry and that registry defines

521
00:20:38,559 --> 00:20:40,480
what's called cipher suites

522
00:20:40,480 --> 00:20:42,320
so these cipher suites are you know

523
00:20:42,320 --> 00:20:44,000
they're not standalone private key

524
00:20:44,000 --> 00:20:46,240
algorithm like ssh it's it's more of a

525
00:20:46,240 --> 00:20:48,960
combination of a private key algorithm

526
00:20:48,960 --> 00:20:53,039
an encryption algorithm blocking padding

527
00:20:53,039 --> 00:20:55,799
and so an example would be for instance

528
00:20:55,799 --> 00:20:59,120
tls-rsa-with aes1256

529
00:20:59,120 --> 00:21:02,320
cbc sha-256 so you can just see how many

530
00:21:02,320 --> 00:21:04,080
different algorithms have been encoded

531
00:21:04,080 --> 00:21:06,799
in there but the main thing is rsa so

532
00:21:06,799 --> 00:21:08,880
this is in fact an rsa key and if you

533
00:21:08,880 --> 00:21:11,120
were to ask the system to generate a key

534
00:21:11,120 --> 00:21:13,120
for that cypher suite it would be

535
00:21:13,120 --> 00:21:15,360
expected that the system could say oh

536
00:21:15,360 --> 00:21:17,600
what you want me to do is inherit an rsa

537
00:21:17,600 --> 00:21:18,559
key

538
00:21:18,559 --> 00:21:20,000
anyway but it's a little bit it's not

539
00:21:20,000 --> 00:21:22,159
perfect right it's not like with ssh so

540
00:21:22,159 --> 00:21:24,240
the question and and again i'm hoping

541
00:21:24,240 --> 00:21:25,840
for some discussion

542
00:21:25,840 --> 00:21:28,159
is should we

543
00:21:28,159 --> 00:21:30,240
move forward should we continue and and

544
00:21:30,240 --> 00:21:32,559
and define this rpc passing in a cypher

545
00:21:32,559 --> 00:21:34,799
suite algorithm uh assuming that the

546
00:21:34,799 --> 00:21:36,720
server can identify which private key

547
00:21:36,720 --> 00:21:38,320
and generate the appropriate key from

548
00:21:38,320 --> 00:21:39,360
there

549
00:21:39,360 --> 00:21:42,240
or should we just back out of i mean i'm

550
00:21:42,240 --> 00:21:43,760
kind of adding in this generating a

551
00:21:43,760 --> 00:21:46,000
private key at the last uh at the last

552
00:21:46,000 --> 00:21:49,039
hour um again it was removed about three

553
00:21:49,039 --> 00:21:50,159
years ago

554
00:21:50,159 --> 00:21:52,240
at that time it was uh author's

555
00:21:52,240 --> 00:21:55,280
preference and at the i decided i prefer

556
00:21:55,280 --> 00:21:56,880
not to move forward with it it's kind of

557
00:21:56,880 --> 00:21:58,880
what i was thinking at that time but now

558
00:21:58,880 --> 00:22:00,799
it's been it's so easy because the iron

559
00:22:00,799 --> 00:22:02,480
had defined registry so i'm willing to

560
00:22:02,480 --> 00:22:04,320
give it another small go

561
00:22:04,320 --> 00:22:05,840
if people um

562
00:22:05,840 --> 00:22:07,520
can help me get past this one issue any

563
00:22:07,520 --> 00:22:11,000
comments on this

564
00:22:14,960 --> 00:22:17,280
okay i don't see anyone in the room

565
00:22:17,280 --> 00:22:21,360
joe's on the cube go ahead joe

566
00:22:21,360 --> 00:22:23,840
uh yeah

567
00:22:23,840 --> 00:22:26,000
um joe clark cisco i don't really i

568
00:22:26,000 --> 00:22:28,080
don't can you go back a couple of slides

569
00:22:28,080 --> 00:22:30,080
i i didn't actually have a comment here

570
00:22:30,080 --> 00:22:33,120
it was just reading okay one more up

571
00:22:33,120 --> 00:22:35,280
so is it generating the public key or is

572
00:22:35,280 --> 00:22:37,679
it generating the public private key i

573
00:22:37,679 --> 00:22:40,400
just found the name of the rpc

574
00:22:40,400 --> 00:22:41,760
yes it's

575
00:22:41,760 --> 00:22:43,200
confusing

576
00:22:43,200 --> 00:22:45,039
okay well it's generating the private

577
00:22:45,039 --> 00:22:47,919
key but in doing so it also generates

578
00:22:47,919 --> 00:22:49,120
the public key

579
00:22:49,120 --> 00:22:51,520
and in the key store itself it stores

580
00:22:51,520 --> 00:22:52,720
both

581
00:22:52,720 --> 00:22:55,360
and since this was a mimic of what is

582
00:22:55,360 --> 00:22:57,919
stored in the key store then also the

583
00:22:57,919 --> 00:23:00,240
output the contains both the public key

584
00:23:00,240 --> 00:23:01,840
and the private key

585
00:23:01,840 --> 00:23:03,760
but that the main thing that's coming

586
00:23:03,760 --> 00:23:05,440
back is the private key

587
00:23:05,440 --> 00:23:07,280
brian and so i was thinking would

588
00:23:07,280 --> 00:23:09,200
generate key pair or something along

589
00:23:09,200 --> 00:23:12,000
those lines be clearer um i just think

590
00:23:12,000 --> 00:23:14,960
of like analogous to ssh key gen

591
00:23:14,960 --> 00:23:16,640
um

592
00:23:16,640 --> 00:23:18,960
something that is unambiguous that

593
00:23:18,960 --> 00:23:20,840
you're do you're actually generating

594
00:23:20,840 --> 00:23:25,120
both okay um possibly i i the actual

595
00:23:25,120 --> 00:23:27,760
name of this rpc generate public key i

596
00:23:27,760 --> 00:23:29,520
think i stole from

597
00:23:29,520 --> 00:23:31,440
open ssh

598
00:23:31,440 --> 00:23:34,480
and uh it mimicked their language and

599
00:23:34,480 --> 00:23:36,400
remember mean i mentioned the ssh has

600
00:23:36,400 --> 00:23:38,880
four different kinds of key elements

601
00:23:38,880 --> 00:23:40,720
sorry algorithm identifiers so this is

602
00:23:40,720 --> 00:23:42,559
the public key algorithm it's actually

603
00:23:42,559 --> 00:23:44,400
called quote public key

604
00:23:44,400 --> 00:23:47,200
so um i was trying to leverage that but

605
00:23:47,200 --> 00:23:49,279
you'd make a good point uh we don't have

606
00:23:49,279 --> 00:23:50,559
to necessarily we would just say

607
00:23:50,559 --> 00:23:51,600
generate

608
00:23:51,600 --> 00:23:53,760
key pair a symmetric keypair that would

609
00:23:53,760 --> 00:23:56,080
be an option yes okay sorry i didn't

610
00:23:56,080 --> 00:23:57,840
have a response to the other one but

611
00:23:57,840 --> 00:23:59,520
this one was i was scratching my head

612
00:23:59,520 --> 00:24:01,120
because it it seemed like you were doing

613
00:24:01,120 --> 00:24:03,200
both thanks

614
00:24:03,200 --> 00:24:08,159
okay anyone else any other comments

615
00:24:10,320 --> 00:24:13,840
are crypto experts in the room

616
00:24:15,360 --> 00:24:17,360
well how about this is anyone feel like

617
00:24:17,360 --> 00:24:19,120
we should not pursue this

618
00:24:19,120 --> 00:24:21,760
again it's sort of being added should we

619
00:24:21,760 --> 00:24:22,880
just

620
00:24:22,880 --> 00:24:25,200
close down the idea of i mean it's best

621
00:24:25,200 --> 00:24:26,799
practice for a server to generate

622
00:24:26,799 --> 00:24:29,279
private key

623
00:24:29,279 --> 00:24:31,440
okay we do have one person coming up to

624
00:24:31,440 --> 00:24:33,279
the mic diego

625
00:24:33,279 --> 00:24:34,960
lopez

626
00:24:34,960 --> 00:24:38,880
i forgot to register on the uh

627
00:24:39,200 --> 00:24:41,600
i was checking that uh i remember on the

628
00:24:41,600 --> 00:24:42,720
in the

629
00:24:42,720 --> 00:24:45,039
good old days there was sifer suites

630
00:24:45,039 --> 00:24:47,679
that were allowed to have a new value

631
00:24:47,679 --> 00:24:49,120
for some of the

632
00:24:49,120 --> 00:24:52,080
i i know that they are not valid for tls

633
00:24:52,080 --> 00:24:54,559
but you could either you could use a

634
00:24:54,559 --> 00:24:56,559
cipher suite only to identify one

635
00:24:56,559 --> 00:24:58,559
particular part of the

636
00:24:58,559 --> 00:25:02,240
of the suite is here this is the

637
00:25:02,240 --> 00:25:04,240
the relevant part that would be uh

638
00:25:04,240 --> 00:25:06,080
doable i'm not sure this has been

639
00:25:06,080 --> 00:25:09,440
deprecated by the people in the tls but

640
00:25:09,440 --> 00:25:12,080
if the uh in the tls group but if the

641
00:25:12,080 --> 00:25:14,400
purpose is to identify

642
00:25:14,400 --> 00:25:16,240
a concrete

643
00:25:16,240 --> 00:25:18,159
private key for example

644
00:25:18,159 --> 00:25:19,760
i think it would be valid

645
00:25:19,760 --> 00:25:22,159
valid for the intention not valid as a

646
00:25:22,159 --> 00:25:26,000
tls acceptable cipher suite anyway

647
00:25:26,000 --> 00:25:27,679
okay thank you

648
00:25:27,679 --> 00:25:30,000
we can confirm with the tls chairs as

649
00:25:30,000 --> 00:25:31,440
well

650
00:25:31,440 --> 00:25:33,200
okay moving forward

651
00:25:33,200 --> 00:25:35,600
thank you everyone for those comments

652
00:25:35,600 --> 00:25:38,400
um i'm going to transition now to

653
00:25:38,400 --> 00:25:40,159
slides for

654
00:25:40,159 --> 00:25:43,360
the update to the tls and um i have a

655
00:25:43,360 --> 00:25:46,000
co-presenter jeff hartley who's joining

656
00:25:46,000 --> 00:25:48,080
me and uh jeff yeah perfect i see he's

657
00:25:48,080 --> 00:25:50,720
joined the microphone queue and so jeff

658
00:25:50,720 --> 00:25:52,640
i'm going to let actually if you'd like

659
00:25:52,640 --> 00:25:55,120
i'm going to pass slide control to you

660
00:25:55,120 --> 00:25:57,360
which you now have if you hit your right

661
00:25:57,360 --> 00:25:58,720
left mouse button you should be able to

662
00:25:58,720 --> 00:26:00,240
increment the slides

663
00:26:00,240 --> 00:26:02,320
gotcha just checking the audio there i

664
00:26:02,320 --> 00:26:04,000
see the graph showing up in the

665
00:26:04,000 --> 00:26:05,200
interface just want to make sure it's

666
00:26:05,200 --> 00:26:07,520
audible over these sessions

667
00:26:07,520 --> 00:26:10,400
you sound perfect to me

668
00:26:10,400 --> 00:26:12,640
okay

669
00:26:16,799 --> 00:26:18,799
so just a quick summary try not to take

670
00:26:18,799 --> 00:26:21,279
too much time here um

671
00:26:21,279 --> 00:26:24,320
some feedback had arrived via previous

672
00:26:24,320 --> 00:26:25,760
chatter parts by

673
00:26:25,760 --> 00:26:27,200
joining the team

674
00:26:27,200 --> 00:26:29,600
uh think of me as an informal liaison

675
00:26:29,600 --> 00:26:32,000
from bbf we have a lot of client server

676
00:26:32,000 --> 00:26:34,159
type applications that we're looking at

677
00:26:34,159 --> 00:26:36,400
uh rolling out in the next year or two

678
00:26:36,400 --> 00:26:38,880
and some of our own standards and uh

679
00:26:38,880 --> 00:26:40,559
having a

680
00:26:40,559 --> 00:26:42,400
standards-based framework for

681
00:26:42,400 --> 00:26:43,760
integrating those would be perfect

682
00:26:43,760 --> 00:26:46,720
things like grpc kafka https transport

683
00:26:46,720 --> 00:26:48,559
things like that so some of the chatter

684
00:26:48,559 --> 00:26:51,120
that had been active at the time that

685
00:26:51,120 --> 00:26:54,000
i threw some time over the wall here was

686
00:26:54,000 --> 00:26:57,200
that uh tls one two and tls one three's

687
00:26:57,200 --> 00:27:00,400
usage of the term psk

688
00:27:00,400 --> 00:27:02,640
uh are vastly different and that proved

689
00:27:02,640 --> 00:27:04,159
to be the case

690
00:27:04,159 --> 00:27:04,960
so

691
00:27:04,960 --> 00:27:06,400
in the uh

692
00:27:06,400 --> 00:27:07,679
original

693
00:27:07,679 --> 00:27:09,520
specifications there of course was

694
00:27:09,520 --> 00:27:11,840
already a psk in place

695
00:27:11,840 --> 00:27:13,919
uh and it sort of had the assumptions of

696
00:27:13,919 --> 00:27:16,080
tls 1.2 and going

697
00:27:16,080 --> 00:27:17,840
before that

698
00:27:17,840 --> 00:27:18,640
so

699
00:27:18,640 --> 00:27:20,559
it was quickly deemed necessary to split

700
00:27:20,559 --> 00:27:22,880
that out designate which one was one two

701
00:27:22,880 --> 00:27:25,440
which one was one three in fact this

702
00:27:25,440 --> 00:27:28,799
notion of an external psk is prevalent

703
00:27:28,799 --> 00:27:31,679
throughout the tls 1.3 rfc

704
00:27:31,679 --> 00:27:33,600
so in fact i would dare say it's not

705
00:27:33,600 --> 00:27:37,279
really a tls v 1.3 psk it's a tlsb 1.3

706
00:27:37,279 --> 00:27:39,760
epsk

707
00:27:39,760 --> 00:27:43,600
one noteworthy change uh is this notion

708
00:27:43,600 --> 00:27:47,120
of zero round trip time as they call it

709
00:27:47,120 --> 00:27:48,960
and it's that

710
00:27:48,960 --> 00:27:50,000
the

711
00:27:50,000 --> 00:27:52,000
entire handshake

712
00:27:52,000 --> 00:27:54,320
once the client has authenticated itself

713
00:27:54,320 --> 00:27:56,080
and the server's accepted that

714
00:27:56,080 --> 00:27:58,880
and they they effectively agree upon the

715
00:27:58,880 --> 00:28:01,600
parameters embedded in the external psk

716
00:28:01,600 --> 00:28:03,520
they can immediately start sending data

717
00:28:03,520 --> 00:28:04,960
the server can immediately start

718
00:28:04,960 --> 00:28:07,039
fulfilling requests and while that's a

719
00:28:07,039 --> 00:28:08,720
gross oversimplification of the full

720
00:28:08,720 --> 00:28:10,480
description which you can of course find

721
00:28:10,480 --> 00:28:12,480
in one three

722
00:28:12,480 --> 00:28:15,120
it it really did need some attention and

723
00:28:15,120 --> 00:28:17,120
call out here

724
00:28:17,120 --> 00:28:18,799
so the

725
00:28:18,799 --> 00:28:21,440
the action items as described uh just

726
00:28:21,440 --> 00:28:24,320
split 1.2 and 1.3 psks apart from each

727
00:28:24,320 --> 00:28:25,120
other

728
00:28:25,120 --> 00:28:29,120
a few additional identities and features

729
00:28:29,120 --> 00:28:30,960
of course so we could use a feature

730
00:28:30,960 --> 00:28:33,440
statements uh to just apply some

731
00:28:33,440 --> 00:28:34,799
constraints to them

732
00:28:34,799 --> 00:28:37,039
but uh nothing too earth shattering

733
00:28:37,039 --> 00:28:38,159
beyond that

734
00:28:38,159 --> 00:28:40,880
uh hopefully the font is legible but i i

735
00:28:40,880 --> 00:28:43,440
kept only sort of the the main body you

736
00:28:43,440 --> 00:28:45,919
can see the full text of these drafts uh

737
00:28:45,919 --> 00:28:47,679
via kent's

738
00:28:47,679 --> 00:28:49,440
github and that sort of thing

739
00:28:49,440 --> 00:28:50,960
so all the all the descriptions and

740
00:28:50,960 --> 00:28:53,360
references i assure you are there uh in

741
00:28:53,360 --> 00:28:56,720
fact a couple of the uh the notes are

742
00:28:56,720 --> 00:28:59,440
are pretty handy reading i would say

743
00:28:59,440 --> 00:29:01,120
so in the case of the

744
00:29:01,120 --> 00:29:04,159
tls one two psk that was the original

745
00:29:04,159 --> 00:29:06,159
structure it really is unchanged it's

746
00:29:06,159 --> 00:29:09,440
just renamed uh the the original psk

747
00:29:09,440 --> 00:29:11,200
there and you'll notice that you're

748
00:29:11,200 --> 00:29:14,000
going to see the the concept of identity

749
00:29:14,000 --> 00:29:15,520
hints and things like that which don't

750
00:29:15,520 --> 00:29:17,760
exist in one three when we get into the

751
00:29:17,760 --> 00:29:20,320
one three e p s k

752
00:29:20,320 --> 00:29:22,559
right and again the those of us who are

753
00:29:22,559 --> 00:29:24,080
our sticklers for syntax will notice

754
00:29:24,080 --> 00:29:26,159
that the e p s k is different than the

755
00:29:26,159 --> 00:29:27,600
psk above it

756
00:29:27,600 --> 00:29:29,840
i assure you that's consistent with the

757
00:29:29,840 --> 00:29:32,559
rfcs and it helps really point out the

758
00:29:32,559 --> 00:29:33,840
difference that there's no parity

759
00:29:33,840 --> 00:29:35,039
between these things and how they're

760
00:29:35,039 --> 00:29:36,399
used

761
00:29:36,399 --> 00:29:37,840
um the

762
00:29:37,840 --> 00:29:40,399
uh the actual cryptography underneath it

763
00:29:40,399 --> 00:29:42,880
was was really not the

764
00:29:42,880 --> 00:29:44,880
the big challenge here in order in other

765
00:29:44,880 --> 00:29:45,679
words

766
00:29:45,679 --> 00:29:48,000
we could still reuse this notion of

767
00:29:48,000 --> 00:29:50,480
keystore as canton companies draft

768
00:29:50,480 --> 00:29:52,880
cesari had already defined it so that

769
00:29:52,880 --> 00:29:54,559
part wasn't so bad but you're going to

770
00:29:54,559 --> 00:29:56,640
notice that there's some leaves in here

771
00:29:56,640 --> 00:29:58,720
that are dissimilar to what had come

772
00:29:58,720 --> 00:30:00,000
before

773
00:30:00,000 --> 00:30:01,520
of course the

774
00:30:01,520 --> 00:30:03,600
the actual

775
00:30:03,600 --> 00:30:05,440
hash itself

776
00:30:05,440 --> 00:30:07,520
you can see right there there's a new

777
00:30:07,520 --> 00:30:09,279
type for that like what hash algorithm

778
00:30:09,279 --> 00:30:10,640
you're going to use there's a limit of

779
00:30:10,640 --> 00:30:12,880
exactly two that are currently defined

780
00:30:12,880 --> 00:30:14,960
uh that being an identity could be

781
00:30:14,960 --> 00:30:16,880
extended pretty easily in the future

782
00:30:16,880 --> 00:30:17,760
should

783
00:30:17,760 --> 00:30:20,320
tls13 add additional types of hashes

784
00:30:20,320 --> 00:30:21,679
supported

785
00:30:21,679 --> 00:30:23,520
and a lot of this is sort of context

786
00:30:23,520 --> 00:30:25,840
specific there's the the actual leaf for

787
00:30:25,840 --> 00:30:27,039
context

788
00:30:27,039 --> 00:30:29,520
uh target protocol for example if you

789
00:30:29,520 --> 00:30:30,480
had

790
00:30:30,480 --> 00:30:31,279
say

791
00:30:31,279 --> 00:30:33,440
an https client

792
00:30:33,440 --> 00:30:35,520
right or if you had some other form of

793
00:30:35,520 --> 00:30:37,039
client that is

794
00:30:37,039 --> 00:30:39,760
effectively manipulating this then that

795
00:30:39,760 --> 00:30:41,840
information can be populated uh and the

796
00:30:41,840 --> 00:30:43,679
key derivation function is another

797
00:30:43,679 --> 00:30:45,760
mandatory piece in here again the

798
00:30:45,760 --> 00:30:47,440
descriptive text had to be trimmed to

799
00:30:47,440 --> 00:30:50,880
fit on the slides but uh but this is the

800
00:30:50,880 --> 00:30:52,640
structure of what was added and

801
00:30:52,640 --> 00:30:55,279
differentiated from the tls12 and prior

802
00:30:55,279 --> 00:30:56,799
psks

803
00:30:56,799 --> 00:30:58,640
uh the server of course when we're

804
00:30:58,640 --> 00:31:00,240
looking at the client the server is is

805
00:31:00,240 --> 00:31:02,880
the inverse of the clients

806
00:31:02,880 --> 00:31:04,960
and it simply specifies hey

807
00:31:04,960 --> 00:31:07,679
which of these if features are you going

808
00:31:07,679 --> 00:31:09,200
to support when you're talking to a

809
00:31:09,200 --> 00:31:12,080
particular server

810
00:31:12,159 --> 00:31:13,679
if you look at the server it's of course

811
00:31:13,679 --> 00:31:15,600
the inverse of the client

812
00:31:15,600 --> 00:31:18,720
the exact same structures right with uh

813
00:31:18,720 --> 00:31:20,559
opposite positioning so

814
00:31:20,559 --> 00:31:22,799
the tls server grouping

815
00:31:22,799 --> 00:31:24,240
contains the case statements that we're

816
00:31:24,240 --> 00:31:25,600
just speaking of

817
00:31:25,600 --> 00:31:26,960
and the

818
00:31:26,960 --> 00:31:28,320
container specifying what client

819
00:31:28,320 --> 00:31:30,159
altercation authentication it will

820
00:31:30,159 --> 00:31:32,480
support in terms of psk's

821
00:31:32,480 --> 00:31:33,760
is there

822
00:31:33,760 --> 00:31:36,399
and i believe kent did i have the i did

823
00:31:36,399 --> 00:31:38,159
i did include the

824
00:31:38,159 --> 00:31:39,679
additional uh

825
00:31:39,679 --> 00:31:41,360
identities here there was a bit of a

826
00:31:41,360 --> 00:31:44,480
nomenclature clean up there

827
00:31:44,480 --> 00:31:47,200
we went for the most simplistic

828
00:31:47,200 --> 00:31:49,840
uh structure of just tls one two tls one

829
00:31:49,840 --> 00:31:52,000
three uh that got cleaned up throughout

830
00:31:52,000 --> 00:31:53,200
the files

831
00:31:53,200 --> 00:31:56,080
and we talked about the new uh the new

832
00:31:56,080 --> 00:31:59,360
type def for epsk supported hashes

833
00:31:59,360 --> 00:32:01,440
that's easily extensible i had said

834
00:32:01,440 --> 00:32:04,399
identity earlier but uh type def

835
00:32:04,399 --> 00:32:05,440
for that

836
00:32:05,440 --> 00:32:06,320
and

837
00:32:06,320 --> 00:32:08,640
that's about it the references it's

838
00:32:08,640 --> 00:32:11,360
really the same three references in most

839
00:32:11,360 --> 00:32:14,559
of the fields we talked about there

840
00:32:14,559 --> 00:32:18,080
and you can see those listed here

841
00:32:18,240 --> 00:32:20,000
i'll pause here and

842
00:32:20,000 --> 00:32:21,519
see if folks want to line up with any

843
00:32:21,519 --> 00:32:22,799
questions there might be a couple of

844
00:32:22,799 --> 00:32:24,559
folks in on the chat or in the room

845
00:32:24,559 --> 00:32:26,640
whose previous comments were directly

846
00:32:26,640 --> 00:32:28,559
addressed by this or at least i hope

847
00:32:28,559 --> 00:32:31,760
we're directly addressed by this

848
00:32:36,640 --> 00:32:39,840
i do not see tom patch on meet echo

849
00:32:39,840 --> 00:32:40,640
so

850
00:32:40,640 --> 00:32:42,640
if we're waiting for him to respond i

851
00:32:42,640 --> 00:32:45,120
don't think we're gonna get that

852
00:32:45,120 --> 00:32:48,000
okay well then i'll end my section by

853
00:32:48,000 --> 00:32:50,320
just stating that if folks do have time

854
00:32:50,320 --> 00:32:51,519
to look at these later and they like to

855
00:32:51,519 --> 00:32:53,840
make comments uh i do

856
00:32:53,840 --> 00:32:57,200
participate in the netcoff mailer so

857
00:32:57,200 --> 00:32:59,519
thanks

858
00:33:04,320 --> 00:33:05,120
oh

859
00:33:05,120 --> 00:33:08,240
oh i think i killed slides

860
00:33:08,240 --> 00:33:09,600
sorry about that

861
00:33:09,600 --> 00:33:11,840
um

862
00:33:13,919 --> 00:33:16,559
oh hold on

863
00:33:16,720 --> 00:33:17,840
no no

864
00:33:17,840 --> 00:33:19,440
because we're not supposed to be we're

865
00:33:19,440 --> 00:33:23,320
sharing these slides just yet

866
00:33:29,279 --> 00:33:31,519
ah okay here we go sorry about that

867
00:33:31,519 --> 00:33:33,679
zooming ahead to the end

868
00:33:33,679 --> 00:33:36,240
thank you jeff and by the way um jeff

869
00:33:36,240 --> 00:33:38,960
was just absolutely awesome

870
00:33:38,960 --> 00:33:40,720
we worked together i think over the

871
00:33:40,720 --> 00:33:43,279
course of maybe three months and

872
00:33:43,279 --> 00:33:45,840
possibly meeting every other week

873
00:33:45,840 --> 00:33:48,559
on all this so a really huge

874
00:33:48,559 --> 00:33:52,159
contribution thank you jeff

875
00:33:52,159 --> 00:33:55,360
last slide for me uh next steps uh

876
00:33:55,360 --> 00:33:57,120
we mentioned uh so jeff just talked

877
00:33:57,120 --> 00:33:59,760
about updates to the tls we you know we

878
00:33:59,760 --> 00:34:01,519
need we should definitely be validating

879
00:34:01,519 --> 00:34:03,279
the correctness of these updates

880
00:34:03,279 --> 00:34:06,720
um significant uh security

881
00:34:06,720 --> 00:34:08,639
you know related update

882
00:34:08,639 --> 00:34:11,359
it would be good for sector to take a

883
00:34:11,359 --> 00:34:13,679
look at it i do know that that sector

884
00:34:13,679 --> 00:34:15,119
takes a look at

885
00:34:15,119 --> 00:34:16,719
all drafts as they're being published so

886
00:34:16,719 --> 00:34:18,719
perhaps we do it just as a part of the

887
00:34:18,719 --> 00:34:19,839
normal

888
00:34:19,839 --> 00:34:23,839
ietf publication process or if rob ad

889
00:34:23,839 --> 00:34:27,359
would like to have a proactive

890
00:34:27,359 --> 00:34:29,679
you know sector review beforehand before

891
00:34:29,679 --> 00:34:32,879
doing that we could discuss that as well

892
00:34:32,879 --> 00:34:35,280
as mentioned also there's the ieee

893
00:34:35,280 --> 00:34:38,079
liaison some minor updates need to be

894
00:34:38,079 --> 00:34:40,480
made there and lastly resolving the

895
00:34:40,480 --> 00:34:42,879
generatekey rpc action issue that we

896
00:34:42,879 --> 00:34:44,320
just discussed

897
00:34:44,320 --> 00:34:46,560
and then we're done i i mean amazingly

898
00:34:46,560 --> 00:34:48,560
uh working group chairs can publish the

899
00:34:48,560 --> 00:34:51,440
entire set to a.d at this point in just

900
00:34:51,440 --> 00:34:52,719
a few weeks

901
00:34:52,719 --> 00:34:55,359
and i'll be noting here we started this

902
00:34:55,359 --> 00:34:58,480
work in 2014 so eight years ago this has

903
00:34:58,480 --> 00:35:00,960
been a large long effort

904
00:35:00,960 --> 00:35:03,280
and uh happy to be near the end

905
00:35:03,280 --> 00:35:04,560
and that's it for this presentation

906
00:35:04,560 --> 00:35:07,280
thank you oh i do see rob in the queue

907
00:35:07,280 --> 00:35:10,960
go ahead rob like you up the next thing

908
00:35:10,960 --> 00:35:13,520
so just uh robleton cisco i was just

909
00:35:13,520 --> 00:35:15,839
going to ask in terms of an early sec

910
00:35:15,839 --> 00:35:17,520
dear review have you been working quite

911
00:35:17,520 --> 00:35:19,359
closely with the security folks anyway i

912
00:35:19,359 --> 00:35:22,079
understand so i think you're probably

913
00:35:22,079 --> 00:35:23,440
pretty good to do that just as part of

914
00:35:23,440 --> 00:35:25,040
the general reviews i'm not sure we need

915
00:35:25,040 --> 00:35:27,040
an early review here unless you think

916
00:35:27,040 --> 00:35:28,560
otherwise

917
00:35:28,560 --> 00:35:30,640
i don't actually think otherwise

918
00:35:30,640 --> 00:35:32,640
i think it'd be okay to push it you know

919
00:35:32,640 --> 00:35:34,800
do as part of the normal process

920
00:35:34,800 --> 00:35:35,920
so i think that's that's what i would

921
00:35:35,920 --> 00:35:37,200
suggest

922
00:35:37,200 --> 00:35:39,280
what i would do rob is uh in your

923
00:35:39,280 --> 00:35:41,760
write-up just bring note to it so some

924
00:35:41,760 --> 00:35:43,040
extra attention is brought to that

925
00:35:43,040 --> 00:35:44,560
section just

926
00:35:44,560 --> 00:35:46,320
i think it's reasonable to just have

927
00:35:46,320 --> 00:35:48,320
people take an extra careful look at the

928
00:35:48,320 --> 00:35:50,960
way the tls-13 is supported

929
00:35:50,960 --> 00:35:53,200
uh yep happy to flag that

930
00:35:53,200 --> 00:35:55,839
okay thank you

931
00:35:57,520 --> 00:35:58,560
okay

932
00:35:58,560 --> 00:36:00,079
and now we're

933
00:36:00,079 --> 00:36:01,920
moving to the next presentation this is

934
00:36:01,920 --> 00:36:03,040
udp

935
00:36:03,040 --> 00:36:04,960
based uh transport for configured

936
00:36:04,960 --> 00:36:07,200
subscriptions

937
00:36:07,200 --> 00:36:09,680
yes thank you alex please go ahead oh

938
00:36:09,680 --> 00:36:11,359
let me pass you control over the key of

939
00:36:11,359 --> 00:36:14,000
the slides as well

940
00:36:14,000 --> 00:36:16,400
if i can

941
00:36:16,880 --> 00:36:19,280
i'm not able to so uh just tell me when

942
00:36:19,280 --> 00:36:21,280
you want to see next slide oh i hear it

943
00:36:21,280 --> 00:36:24,720
i can't do it sorry about that

944
00:36:25,359 --> 00:36:27,040
okay you can increment your own slides

945
00:36:27,040 --> 00:36:31,119
now hit right button left button

946
00:36:31,599 --> 00:36:35,119
yes it's working yes thank you

947
00:36:35,119 --> 00:36:39,440
um so this is alex wang from insalion

948
00:36:39,440 --> 00:36:42,320
and i am presenting today the few

949
00:36:42,320 --> 00:36:44,960
changes we did on the dash

950
00:36:44,960 --> 00:36:46,400
o5

951
00:36:46,400 --> 00:36:49,839
of udp native draft

952
00:36:52,079 --> 00:36:56,720
on the agenda i will explain shortly

953
00:36:56,720 --> 00:37:00,320
the div we made on this new draft and we

954
00:37:00,320 --> 00:37:03,119
would like to start a discussion on

955
00:37:03,119 --> 00:37:06,560
uh how to configure dtls from the young

956
00:37:06,560 --> 00:37:07,599
module

957
00:37:07,599 --> 00:37:08,560
which

958
00:37:08,560 --> 00:37:10,960
we got a little feedback on the mailing

959
00:37:10,960 --> 00:37:13,200
list

960
00:37:15,920 --> 00:37:18,560
so the few changes

961
00:37:18,560 --> 00:37:21,119
during the last ietf

962
00:37:21,119 --> 00:37:23,680
we got feedback

963
00:37:23,680 --> 00:37:24,720
from

964
00:37:24,720 --> 00:37:26,720
rob i think

965
00:37:26,720 --> 00:37:29,759
that we should

966
00:37:30,320 --> 00:37:34,640
specify the rfcs of the encoding types

967
00:37:34,640 --> 00:37:38,160
of json and cyborg because they they

968
00:37:38,160 --> 00:37:40,400
they had multiple

969
00:37:40,400 --> 00:37:42,800
uh rfcs

970
00:37:42,800 --> 00:37:46,720
uh we at the end uh decided uh that

971
00:37:46,720 --> 00:37:50,320
instead of just specifying the rfc we

972
00:37:50,320 --> 00:37:51,440
could

973
00:37:51,440 --> 00:37:52,480
just

974
00:37:52,480 --> 00:37:56,160
referencing the media type instead

975
00:37:56,160 --> 00:37:59,359
so the registry would reference directly

976
00:37:59,359 --> 00:38:01,920
to the already standardized

977
00:38:01,920 --> 00:38:05,839
of the jana media types

978
00:38:06,960 --> 00:38:08,720
after that

979
00:38:08,720 --> 00:38:12,880
we modified a little young model

980
00:38:12,880 --> 00:38:14,880
the module

981
00:38:14,880 --> 00:38:16,320
we added

982
00:38:16,320 --> 00:38:19,760
a feature in code seaboard leaf in the

983
00:38:19,760 --> 00:38:21,520
young module

984
00:38:21,520 --> 00:38:24,480
and then also change all the encoding

985
00:38:24,480 --> 00:38:27,440
type references to be aligned

986
00:38:27,440 --> 00:38:31,400
with the whole draft

987
00:38:33,200 --> 00:38:34,320
um

988
00:38:34,320 --> 00:38:36,079
we also

989
00:38:36,079 --> 00:38:40,000
uh have been talking with the chairs uh

990
00:38:40,000 --> 00:38:41,920
for the dtls

991
00:38:41,920 --> 00:38:45,599
encryption part of this draft

992
00:38:45,599 --> 00:38:47,940
we got feedback that it should be

993
00:38:47,940 --> 00:38:49,440
[Music]

994
00:38:49,440 --> 00:38:52,079
it should make it good for the security

995
00:38:52,079 --> 00:38:55,200
review having the gtls part in in this

996
00:38:55,200 --> 00:38:57,440
draft

997
00:38:57,440 --> 00:38:58,839
and then

998
00:38:58,839 --> 00:39:03,440
lastly some days ago i would say

999
00:39:03,440 --> 00:39:06,640
that we got some feedback

1000
00:39:06,640 --> 00:39:09,280
that if we

1001
00:39:09,280 --> 00:39:11,599
would

1002
00:39:12,079 --> 00:39:13,280
add

1003
00:39:13,280 --> 00:39:16,720
the dtls part in the young module to be

1004
00:39:16,720 --> 00:39:19,359
configured configurable

1005
00:39:19,359 --> 00:39:23,040
from the router directly

1006
00:39:23,359 --> 00:39:26,320
so we would like to start actually a

1007
00:39:26,320 --> 00:39:29,200
discussion on this meeting that

1008
00:39:29,200 --> 00:39:31,200
if it is

1009
00:39:31,200 --> 00:39:34,480
something that it is expected for for

1010
00:39:34,480 --> 00:39:36,560
from the community

1011
00:39:36,560 --> 00:39:39,839
i would guess yes

1012
00:39:40,160 --> 00:39:43,200
but and then if just

1013
00:39:43,200 --> 00:39:44,960
importing the

1014
00:39:44,960 --> 00:39:48,640
i we saw that in the draft net conf

1015
00:39:48,640 --> 00:39:51,760
tls client server there are some uh

1016
00:39:51,760 --> 00:39:54,000
young modules implemented

1017
00:39:54,000 --> 00:39:57,760
and if just importing them it's it would

1018
00:39:57,760 --> 00:39:59,920
be enough

1019
00:39:59,920 --> 00:40:00,800
or

1020
00:40:00,800 --> 00:40:03,200
but what starting the discussion on on

1021
00:40:03,200 --> 00:40:05,759
this meeting

1022
00:40:05,920 --> 00:40:06,490
and

1023
00:40:06,490 --> 00:40:09,040
[Music]

1024
00:40:09,040 --> 00:40:12,560
i would say that would be all uh

1025
00:40:12,560 --> 00:40:15,280
just a quick uh

1026
00:40:15,280 --> 00:40:17,920
quick uh presentation too

1027
00:40:17,920 --> 00:40:22,480
about the distributed native draft

1028
00:40:23,359 --> 00:40:25,920
we changed a lead so we we did some

1029
00:40:25,920 --> 00:40:28,960
minor changes on the young model and we

1030
00:40:28,960 --> 00:40:29,839
also

1031
00:40:29,839 --> 00:40:33,119
uh think that uh the draft is already

1032
00:40:33,119 --> 00:40:34,800
pretty stable

1033
00:40:34,800 --> 00:40:35,839
and

1034
00:40:35,839 --> 00:40:38,560
that we would like to last call

1035
00:40:38,560 --> 00:40:43,680
when when this udp notifies last called

1036
00:40:44,319 --> 00:40:46,480
so that would

1037
00:40:46,480 --> 00:40:49,599
that would be from from my part and we

1038
00:40:49,599 --> 00:40:53,800
we could start this discussion

1039
00:40:57,200 --> 00:41:00,160
so can't

1040
00:41:00,319 --> 00:41:02,319
thank you

1041
00:41:02,319 --> 00:41:05,440
sorry so yes it is a good idea to

1042
00:41:05,440 --> 00:41:08,400
modify the configuration model so that

1043
00:41:08,400 --> 00:41:11,760
the actual tls part of dtls can be

1044
00:41:11,760 --> 00:41:13,520
configured

1045
00:41:13,520 --> 00:41:16,079
i mean so we're asking the

1046
00:41:16,079 --> 00:41:17,760
server to

1047
00:41:17,760 --> 00:41:22,079
in some cases initiate the outbound tls

1048
00:41:22,079 --> 00:41:25,280
connection to a remote tls server

1049
00:41:25,280 --> 00:41:27,280
and you know how does it authenticate

1050
00:41:27,280 --> 00:41:29,520
that server certificate

1051
00:41:29,520 --> 00:41:31,599
does it need to authenticate itself to

1052
00:41:31,599 --> 00:41:33,040
the server

1053
00:41:33,040 --> 00:41:35,520
you know where is the configuration for

1054
00:41:35,520 --> 00:41:38,880
these things uh specified it is uh

1055
00:41:38,880 --> 00:41:40,800
necessary it's not it cannot i don't

1056
00:41:40,800 --> 00:41:44,079
believe be just a flag like dtls is on

1057
00:41:44,079 --> 00:41:46,000
and there's a configuration that has to

1058
00:41:46,000 --> 00:41:48,319
be specified and i think that's the

1059
00:41:48,319 --> 00:41:51,839
request so uh yes exactly what it would

1060
00:41:51,839 --> 00:41:53,119
come down to

1061
00:41:53,119 --> 00:41:56,000
is the yang module that is in this draft

1062
00:41:56,000 --> 00:41:56,880
would

1063
00:41:56,880 --> 00:42:00,160
import the tls

1064
00:42:00,160 --> 00:42:01,359
client

1065
00:42:01,359 --> 00:42:02,480
um

1066
00:42:02,480 --> 00:42:05,760
module and maybe also the tls server

1067
00:42:05,760 --> 00:42:08,400
module if it turns out that it needs to

1068
00:42:08,400 --> 00:42:10,880
actually listen to uh connections as

1069
00:42:10,880 --> 00:42:11,920
well

1070
00:42:11,920 --> 00:42:14,240
and then um that should be most of it

1071
00:42:14,240 --> 00:42:16,240
you would want to also add examples that

1072
00:42:16,240 --> 00:42:17,359
illustrate

1073
00:42:17,359 --> 00:42:19,280
those configurations being

1074
00:42:19,280 --> 00:42:21,839
set and

1075
00:42:21,839 --> 00:42:23,680
i think that's the ask

1076
00:42:23,680 --> 00:42:25,760
does it make sense

1077
00:42:25,760 --> 00:42:28,000
yeah i think so yes

1078
00:42:28,000 --> 00:42:31,000
okay

1079
00:42:31,599 --> 00:42:34,160
thank you all right so i had similar

1080
00:42:34,160 --> 00:42:36,079
comments uh

1081
00:42:36,079 --> 00:42:39,599
uh as kent for the udp native but

1082
00:42:39,599 --> 00:42:42,079
also for the distributed native

1083
00:42:42,079 --> 00:42:44,480
i would love to see some examples

1084
00:42:44,480 --> 00:42:46,400
of

1085
00:42:46,400 --> 00:42:48,400
the configuration aspect i know there

1086
00:42:48,400 --> 00:42:50,319
are some examples of

1087
00:42:50,319 --> 00:42:52,720
subscribe notifications but the actual

1088
00:42:52,720 --> 00:42:54,640
configuration part

1089
00:42:54,640 --> 00:42:57,200
examples i did

1090
00:42:57,200 --> 00:42:58,880
at least the last version i didn't think

1091
00:42:58,880 --> 00:43:00,160
i saw

1092
00:43:00,160 --> 00:43:02,160
anything in particular

1093
00:43:02,160 --> 00:43:04,400
so that would be nice to have

1094
00:43:04,400 --> 00:43:06,319
and then um

1095
00:43:06,319 --> 00:43:07,920
in summary would you say that the

1096
00:43:07,920 --> 00:43:10,079
distributed node of draft is really

1097
00:43:10,079 --> 00:43:11,839
about

1098
00:43:11,839 --> 00:43:14,960
having this id that identifies the node

1099
00:43:14,960 --> 00:43:17,040
from where the

1100
00:43:17,040 --> 00:43:18,960
notifications are coming from because

1101
00:43:18,960 --> 00:43:21,119
that's pretty much the summary

1102
00:43:21,119 --> 00:43:26,200
of that what i understood of the draft

1103
00:43:29,040 --> 00:43:30,079
um

1104
00:43:30,079 --> 00:43:31,920
sorry can you repeat the last question i

1105
00:43:31,920 --> 00:43:34,000
did not get

1106
00:43:34,000 --> 00:43:35,680
um

1107
00:43:35,680 --> 00:43:36,640
so

1108
00:43:36,640 --> 00:43:37,839
with the

1109
00:43:37,839 --> 00:43:40,839
um

1110
00:43:41,760 --> 00:43:44,240
what i s what i remember seeing the last

1111
00:43:44,240 --> 00:43:46,240
version of the draft

1112
00:43:46,240 --> 00:43:46,960
uh

1113
00:43:46,960 --> 00:43:49,599
essentially what you're trying to do is

1114
00:43:49,599 --> 00:43:51,839
put in i don't remember the name you you

1115
00:43:51,839 --> 00:43:53,520
gave to it but it's

1116
00:43:53,520 --> 00:43:56,800
a node id that identifies where the

1117
00:43:56,800 --> 00:43:59,680
notification is coming from

1118
00:43:59,680 --> 00:44:01,280
is that i guess this

1119
00:44:01,280 --> 00:44:04,000
yeah the subscription id

1120
00:44:04,000 --> 00:44:06,720
yeah maybe it's the subscription id so

1121
00:44:06,720 --> 00:44:09,359
is that the summary of really that whole

1122
00:44:09,359 --> 00:44:11,759
draft

1123
00:44:12,880 --> 00:44:14,880
that you're essentially providing a

1124
00:44:14,880 --> 00:44:17,839
subscription id

1125
00:44:18,000 --> 00:44:23,560
uh maybe thomas or pf who dots or that

1126
00:44:33,599 --> 00:44:36,599
yes

1127
00:44:39,040 --> 00:44:41,359
okay thomas you're kind of breaking up

1128
00:44:41,359 --> 00:44:44,480
on at least at our end

1129
00:44:44,480 --> 00:44:47,280
okay is it now better

1130
00:44:47,280 --> 00:44:48,839
yes

1131
00:44:48,839 --> 00:44:51,119
okay uh domain

1132
00:44:51,119 --> 00:44:53,520
id is basically identifier which

1133
00:44:53,520 --> 00:44:56,480
identifies export process on the route

1134
00:44:56,480 --> 00:44:59,040
if more than one

1135
00:44:59,040 --> 00:45:02,839
and this is needed for the segmentation

1136
00:45:02,839 --> 00:45:04,960
of okay

1137
00:45:04,960 --> 00:45:07,599
in a nutshell that's what distributed

1138
00:45:07,599 --> 00:45:10,480
notif is and sits its uh transport

1139
00:45:10,480 --> 00:45:12,880
agnostic uh we need to describe that in

1140
00:45:12,880 --> 00:45:15,599
a safe director

1141
00:45:17,280 --> 00:45:21,599
okay uh so the uh the comment on the uh

1142
00:45:21,599 --> 00:45:24,560
it being transport independent

1143
00:45:24,560 --> 00:45:25,680
would you

1144
00:45:25,680 --> 00:45:27,760
still say that you don't want to talk

1145
00:45:27,760 --> 00:45:30,079
about whether the underlying

1146
00:45:30,079 --> 00:45:33,359
whether the transport is

1147
00:45:33,359 --> 00:45:35,839
tcp based or udp based

1148
00:45:35,839 --> 00:45:36,880
or you

1149
00:45:36,880 --> 00:45:39,520
give particular examples for each one

1150
00:45:39,520 --> 00:45:42,079
each type of transport that you're going

1151
00:45:42,079 --> 00:45:45,240
to use

1152
00:45:47,520 --> 00:45:50,800
which is uh basically where we can

1153
00:45:50,800 --> 00:45:53,920
implement that it's not implemented in

1154
00:45:53,920 --> 00:45:56,160
https

1155
00:45:56,160 --> 00:45:58,800
but for future drafts

1156
00:45:58,800 --> 00:46:01,280
that's why

1157
00:46:03,680 --> 00:46:04,960
and this

1158
00:46:04,960 --> 00:46:07,200
concept is not something which is coming

1159
00:46:07,200 --> 00:46:09,839
from that country is actually also being

1160
00:46:09,839 --> 00:46:14,279
applied the same way in it

1161
00:46:15,119 --> 00:46:16,880
okay i'll i'll

1162
00:46:16,880 --> 00:46:19,200
um send you the comments on the mailing

1163
00:46:19,200 --> 00:46:20,640
list

1164
00:46:20,640 --> 00:46:22,319
sure because we are having some problems

1165
00:46:22,319 --> 00:46:25,800
at our end

1166
00:46:34,319 --> 00:46:35,280
should we move on to the next

1167
00:46:35,280 --> 00:46:38,160
presentation now

1168
00:46:38,640 --> 00:46:40,000
yeah

1169
00:46:40,000 --> 00:46:41,760
okay

1170
00:46:41,760 --> 00:46:43,200
and um

1171
00:46:43,200 --> 00:46:46,720
why don't you uh or just i mean let

1172
00:46:46,720 --> 00:46:48,480
people okay there's a small agenda

1173
00:46:48,480 --> 00:46:49,440
bashing

1174
00:46:49,440 --> 00:46:53,200
while we were uh between slides here

1175
00:46:53,200 --> 00:46:54,839
and we've moved the adaptive

1176
00:46:54,839 --> 00:46:58,160
subscription presentation to the end

1177
00:46:58,160 --> 00:47:00,720
everything else will be the same

1178
00:47:00,720 --> 00:47:01,839
so

1179
00:47:01,839 --> 00:47:04,880
next is per node capabilities

1180
00:47:04,880 --> 00:47:08,760
for optimal data collection

1181
00:47:11,440 --> 00:47:13,520
i think benoit is in the room we'll be

1182
00:47:13,520 --> 00:47:15,520
presenting

1183
00:47:15,520 --> 00:47:17,119
yes i am

1184
00:47:17,119 --> 00:47:18,560
perfect

1185
00:47:18,560 --> 00:47:20,640
so let me present this

1186
00:47:20,640 --> 00:47:22,800
so as you introduce this this is like

1187
00:47:22,800 --> 00:47:25,119
the per node capabilities for optimum

1188
00:47:25,119 --> 00:47:26,880
operational data collection

1189
00:47:26,880 --> 00:47:29,920
so that's a draft that started about two

1190
00:47:29,920 --> 00:47:31,440
years ago

1191
00:47:31,440 --> 00:47:34,160
and the goal today is to see if there is

1192
00:47:34,160 --> 00:47:37,440
still interest to continue on this draft

1193
00:47:37,440 --> 00:47:40,800
so disclaimer i have not updated it just

1194
00:47:40,800 --> 00:47:42,559
a refresh

1195
00:47:42,559 --> 00:47:45,040
so if you go to the next slide

1196
00:47:45,040 --> 00:47:46,480
there is just

1197
00:47:46,480 --> 00:47:49,680
you know if we're looking at automation

1198
00:47:49,680 --> 00:47:52,400
we know that in the end automation is as

1199
00:47:52,400 --> 00:47:55,599
good as your data models

1200
00:47:55,599 --> 00:47:59,520
so we created many models in the itf and

1201
00:47:59,520 --> 00:48:01,839
in different places in industry

1202
00:48:01,839 --> 00:48:04,160
so we're going to write track over there

1203
00:48:04,160 --> 00:48:06,480
so your automation is as good as your

1204
00:48:06,480 --> 00:48:08,000
tool chain

1205
00:48:08,000 --> 00:48:10,160
and we worked on the tool chain in

1206
00:48:10,160 --> 00:48:12,160
hackathon different places

1207
00:48:12,160 --> 00:48:13,599
is it perfect

1208
00:48:13,599 --> 00:48:14,319
no

1209
00:48:14,319 --> 00:48:16,559
but it's getting there

1210
00:48:16,559 --> 00:48:19,200
your automation is as good as your young

1211
00:48:19,200 --> 00:48:21,200
model's metadata

1212
00:48:21,200 --> 00:48:23,040
and we work on the young catalog where

1213
00:48:23,040 --> 00:48:24,880
we've got metadata about those young

1214
00:48:24,880 --> 00:48:26,079
models

1215
00:48:26,079 --> 00:48:28,319
the standard this implemented it is

1216
00:48:28,319 --> 00:48:30,800
service model orders

1217
00:48:30,800 --> 00:48:32,880
the last point is the per node

1218
00:48:32,880 --> 00:48:35,119
capabilities because if you want to

1219
00:48:35,119 --> 00:48:36,880
configure something in your network you

1220
00:48:36,880 --> 00:48:39,119
want to know if a specific node that you

1221
00:48:39,119 --> 00:48:40,880
want to configure let's say for

1222
00:48:40,880 --> 00:48:44,160
telemetry has some capabilities

1223
00:48:44,160 --> 00:48:48,118
now if you go to the next slide

1224
00:48:49,280 --> 00:48:51,839
this is what we did with this new rfc

1225
00:48:51,839 --> 00:48:53,599
9196

1226
00:48:53,599 --> 00:48:56,800
that mahaj presented in the in the intro

1227
00:48:56,800 --> 00:48:59,280
what we have in there is two young

1228
00:48:59,280 --> 00:49:00,240
models

1229
00:49:00,240 --> 00:49:02,640
the first one is the placeholder

1230
00:49:02,640 --> 00:49:04,400
and the second one offers some

1231
00:49:04,400 --> 00:49:06,480
capabilities so if i look at the last

1232
00:49:06,480 --> 00:49:08,720
four entries on the slides

1233
00:49:08,720 --> 00:49:11,599
it tell us per nodes what is the minimum

1234
00:49:11,599 --> 00:49:13,359
update period that you could have on

1235
00:49:13,359 --> 00:49:17,520
telemetry right for a specific object

1236
00:49:17,520 --> 00:49:20,079
it tell us uh what are the support

1237
00:49:20,079 --> 00:49:22,480
update period whether on change is

1238
00:49:22,480 --> 00:49:24,800
supported right let's say you want to do

1239
00:49:24,800 --> 00:49:26,800
telemetry with unchanged

1240
00:49:26,800 --> 00:49:29,359
it's key to understand if that specific

1241
00:49:29,359 --> 00:49:33,119
note supports it or not

1242
00:49:33,119 --> 00:49:35,760
and the minimum dampening period

1243
00:49:35,760 --> 00:49:36,640
so

1244
00:49:36,640 --> 00:49:38,960
we've produced that rfc and that's also

1245
00:49:38,960 --> 00:49:41,280
a reason why we have not updated our

1246
00:49:41,280 --> 00:49:44,319
draft because it's linked

1247
00:49:44,319 --> 00:49:47,599
so if you go to the next slide now

1248
00:49:49,520 --> 00:49:52,960
so this draft is about updating this

1249
00:49:52,960 --> 00:49:55,359
list of yang objects

1250
00:49:55,359 --> 00:49:56,839
so per

1251
00:49:56,839 --> 00:49:58,640
node

1252
00:49:58,640 --> 00:50:00,160
and

1253
00:50:00,160 --> 00:50:02,960
we provide to our pc

1254
00:50:02,960 --> 00:50:05,520
just to be able to retrieve them easily

1255
00:50:05,520 --> 00:50:07,760
to see if those nodes that we're looking

1256
00:50:07,760 --> 00:50:09,839
for are capable of doing

1257
00:50:09,839 --> 00:50:11,280
what we want

1258
00:50:11,280 --> 00:50:13,440
okay

1259
00:50:13,440 --> 00:50:14,720
as i mentioned

1260
00:50:14,720 --> 00:50:16,960
the draft has not been updated but now

1261
00:50:16,960 --> 00:50:18,880
that we've got the previous rfc it's

1262
00:50:18,880 --> 00:50:21,760
time to decide what you want to do

1263
00:50:21,760 --> 00:50:23,520
so let's go over the

1264
00:50:23,520 --> 00:50:24,880
the couple of

1265
00:50:24,880 --> 00:50:27,760
examples

1266
00:50:27,760 --> 00:50:30,800
so next slide please

1267
00:50:32,000 --> 00:50:34,800
so the first one is like

1268
00:50:34,800 --> 00:50:36,559
the suggested

1269
00:50:36,559 --> 00:50:38,079
observation

1270
00:50:38,079 --> 00:50:41,839
observable period right

1271
00:50:41,839 --> 00:50:45,359
it's like yeah maybe the router supports

1272
00:50:45,359 --> 00:50:47,119
all these different

1273
00:50:47,119 --> 00:50:49,920
periods for observation observation

1274
00:50:49,920 --> 00:50:52,240
but maybe there is one which is the one

1275
00:50:52,240 --> 00:50:55,359
that the vendor suggests

1276
00:50:55,359 --> 00:50:56,720
right

1277
00:50:56,720 --> 00:50:58,880
and

1278
00:50:58,880 --> 00:51:00,720
it's different different at the minimum

1279
00:51:00,720 --> 00:51:01,520
one

1280
00:51:01,520 --> 00:51:04,000
because maybe the minimum one is like

1281
00:51:04,000 --> 00:51:05,920
one millisecond

1282
00:51:05,920 --> 00:51:08,559
but maybe it's not very practical or the

1283
00:51:08,559 --> 00:51:10,319
router will have some problem to sustain

1284
00:51:10,319 --> 00:51:12,480
it

1285
00:51:12,559 --> 00:51:15,520
the second one is that well

1286
00:51:15,520 --> 00:51:17,119
if let's say i want to stream the

1287
00:51:17,119 --> 00:51:19,680
flipped content

1288
00:51:19,680 --> 00:51:21,599
we could say the minimum one is one

1289
00:51:21,599 --> 00:51:24,559
millisecond one second but actually it

1290
00:51:24,559 --> 00:51:27,839
depends how big your fib is

1291
00:51:27,839 --> 00:51:29,680
right so just giving something like a

1292
00:51:29,680 --> 00:51:33,280
generic answer is not always practical

1293
00:51:33,280 --> 00:51:34,880
so telling

1294
00:51:34,880 --> 00:51:37,359
like the router

1295
00:51:37,359 --> 00:51:40,319
under these conditions

1296
00:51:40,319 --> 00:51:42,880
knowing the number of entries in the fip

1297
00:51:42,880 --> 00:51:44,400
as one example

1298
00:51:44,400 --> 00:51:47,200
we advise you to stream it every

1299
00:51:47,200 --> 00:51:49,760
five minutes or whatever

1300
00:51:49,760 --> 00:51:51,680
but the point is that it's these are

1301
00:51:51,680 --> 00:51:54,160
characters that are depending on a note

1302
00:51:54,160 --> 00:51:57,118
per node basis

1303
00:51:58,079 --> 00:52:00,880
next slide please

1304
00:52:03,440 --> 00:52:06,400
the next one is the optimize measurement

1305
00:52:06,400 --> 00:52:08,240
point

1306
00:52:08,240 --> 00:52:09,920
so typically

1307
00:52:09,920 --> 00:52:12,079
in a in a router

1308
00:52:12,079 --> 00:52:14,000
let's say you want to stream a specific

1309
00:52:14,000 --> 00:52:15,200
interface

1310
00:52:15,200 --> 00:52:17,680
counter number of packets

1311
00:52:17,680 --> 00:52:19,200
all right

1312
00:52:19,200 --> 00:52:21,440
now

1313
00:52:21,440 --> 00:52:23,599
internally in a router you might have a

1314
00:52:23,599 --> 00:52:25,760
structure with all the interface

1315
00:52:25,760 --> 00:52:27,359
counters

1316
00:52:27,359 --> 00:52:29,760
so going and taking a single entry in

1317
00:52:29,760 --> 00:52:33,440
the structure structure to stream it

1318
00:52:33,440 --> 00:52:34,880
might be more

1319
00:52:34,880 --> 00:52:37,040
might be less efficient than just

1320
00:52:37,040 --> 00:52:40,000
streaming the entire structure

1321
00:52:40,000 --> 00:52:41,440
from a router point of view not

1322
00:52:41,440 --> 00:52:43,280
bandwidth right

1323
00:52:43,280 --> 00:52:45,359
but then on the character side you could

1324
00:52:45,359 --> 00:52:46,800
just be filtering out what you don't

1325
00:52:46,800 --> 00:52:49,280
care about

1326
00:52:49,280 --> 00:52:52,079
so in this example of the interface

1327
00:52:52,079 --> 00:52:54,319
number of packet interface

1328
00:52:54,319 --> 00:52:55,760
maybe

1329
00:52:55,760 --> 00:52:57,599
this value will tell you well just

1330
00:52:57,599 --> 00:53:00,160
observe the entire

1331
00:53:00,160 --> 00:53:02,720
three which is interface

1332
00:53:02,720 --> 00:53:04,959
right

1333
00:53:05,440 --> 00:53:07,760
so this is the idea behind that one

1334
00:53:07,760 --> 00:53:10,720
on the next slide

1335
00:53:13,839 --> 00:53:16,079
this one is about

1336
00:53:16,079 --> 00:53:17,920
the corresponding

1337
00:53:17,920 --> 00:53:23,200
yang object and mip or id if we know it

1338
00:53:23,200 --> 00:53:24,000
right

1339
00:53:24,000 --> 00:53:26,240
so

1340
00:53:26,960 --> 00:53:29,440
we know snmp still works

1341
00:53:29,440 --> 00:53:30,480
right

1342
00:53:30,480 --> 00:53:33,359
we know it's not going to be replaced

1343
00:53:33,359 --> 00:53:34,240
so

1344
00:53:34,240 --> 00:53:36,720
sometimes just knowing that a specific

1345
00:53:36,720 --> 00:53:39,599
kang objects refer to no id

1346
00:53:39,599 --> 00:53:41,599
is interesting now you could say i'm

1347
00:53:41,599 --> 00:53:43,440
going to do it offline

1348
00:53:43,440 --> 00:53:45,599
and i tried

1349
00:53:45,599 --> 00:53:46,880
now here's the thing if we take

1350
00:53:46,880 --> 00:53:48,880
interface that we all know

1351
00:53:48,880 --> 00:53:50,880
it seems like very simple

1352
00:53:50,880 --> 00:53:53,040
but

1353
00:53:53,040 --> 00:53:56,400
interface in snmp we know this admin

1354
00:53:56,400 --> 00:53:58,960
administrator superstatus if we come to

1355
00:53:58,960 --> 00:54:00,880
yang it depends because we could have

1356
00:54:00,880 --> 00:54:02,000
like

1357
00:54:02,000 --> 00:54:04,319
the interface young module which is pre

1358
00:54:04,319 --> 00:54:07,200
and mda with two different containers no

1359
00:54:07,200 --> 00:54:08,720
one container

1360
00:54:08,720 --> 00:54:11,280
we could have the young module

1361
00:54:11,280 --> 00:54:13,839
nmda which is one container

1362
00:54:13,839 --> 00:54:15,760
but different data stores

1363
00:54:15,760 --> 00:54:17,839
we could have the open conflict which is

1364
00:54:17,839 --> 00:54:19,520
yet a different one

1365
00:54:19,520 --> 00:54:21,839
we could have like a proprietary one so

1366
00:54:21,839 --> 00:54:23,839
there is not a single mapping but from

1367
00:54:23,839 --> 00:54:25,599
the router point of view

1368
00:54:25,599 --> 00:54:28,240
if you know you support one or two

1369
00:54:28,240 --> 00:54:32,079
then you just give the mapping for those

1370
00:54:32,079 --> 00:54:34,319
right

1371
00:54:35,599 --> 00:54:39,160
on the next slide

1372
00:54:40,559 --> 00:54:44,079
it's something similar to the

1373
00:54:44,160 --> 00:54:47,680
admin status and upper status right

1374
00:54:47,680 --> 00:54:49,680
how do you know that it's an mp

1375
00:54:49,680 --> 00:54:51,760
one is the intended and one is the

1376
00:54:51,760 --> 00:54:52,960
applied

1377
00:54:52,960 --> 00:54:55,040
because you know it right in yang we try

1378
00:54:55,040 --> 00:54:56,960
to solve that one

1379
00:54:56,960 --> 00:54:58,960
by adding different data stores but in

1380
00:54:58,960 --> 00:55:01,359
case you have like

1381
00:55:01,359 --> 00:55:04,319
non-open config or non nmda

1382
00:55:04,319 --> 00:55:06,880
you don't know that so there are things

1383
00:55:06,880 --> 00:55:08,480
you could be telling

1384
00:55:08,480 --> 00:55:11,040
that this one relates to that one this

1385
00:55:11,040 --> 00:55:12,960
is the id between the written notes over

1386
00:55:12,960 --> 00:55:15,200
there

1387
00:55:15,440 --> 00:55:17,520
so these are and i believe this is the

1388
00:55:17,520 --> 00:55:19,359
last one i want to show you

1389
00:55:19,359 --> 00:55:22,400
these are examples of the things we were

1390
00:55:22,400 --> 00:55:23,680
thinking about

1391
00:55:23,680 --> 00:55:27,280
at the same time that the rfc 9196 was

1392
00:55:27,280 --> 00:55:28,400
done

1393
00:55:28,400 --> 00:55:30,160
and initially in there there was one

1394
00:55:30,160 --> 00:55:32,400
that was unchanged just or no it was

1395
00:55:32,400 --> 00:55:35,440
moving to the other draft

1396
00:55:35,440 --> 00:55:37,520
now the question is and if you go to the

1397
00:55:37,520 --> 00:55:40,240
next slide please

1398
00:55:41,440 --> 00:55:43,680
oh by the way there is also

1399
00:55:43,680 --> 00:55:46,319
two rpcs to directly get the information

1400
00:55:46,319 --> 00:55:47,920
from the router before you configure

1401
00:55:47,920 --> 00:55:48,880
them

1402
00:55:48,880 --> 00:55:51,200
okay

1403
00:55:51,520 --> 00:55:54,799
and on the next slides

1404
00:55:55,520 --> 00:55:57,440
i'll skip the open issues because they

1405
00:55:57,440 --> 00:55:58,720
are

1406
00:55:58,720 --> 00:56:00,319
not so important for now but i want to

1407
00:56:00,319 --> 00:56:02,880
go to the last slide which is okay what

1408
00:56:02,880 --> 00:56:05,040
do we do now

1409
00:56:05,040 --> 00:56:08,400
we have this brand new rfc 9196

1410
00:56:08,400 --> 00:56:10,400
it does its job

1411
00:56:10,400 --> 00:56:13,760
right but do we have a need

1412
00:56:13,760 --> 00:56:16,960
do we still have a need for the new

1413
00:56:16,960 --> 00:56:20,079
object i mentioned here

1414
00:56:20,400 --> 00:56:23,760
if the answer is no because it's or not

1415
00:56:23,760 --> 00:56:25,760
now that's fine

1416
00:56:25,760 --> 00:56:27,920
if there are some use cases

1417
00:56:27,920 --> 00:56:30,480
well we work again on those

1418
00:56:30,480 --> 00:56:33,359
this is the status where i'm right now

1419
00:56:33,359 --> 00:56:36,240
with the quarters

1420
00:56:36,319 --> 00:56:40,319
so the floor is yours for

1421
00:56:42,839 --> 00:56:46,640
feedback so we could um uh try to do a

1422
00:56:46,640 --> 00:56:48,400
show of hands if that's what you're

1423
00:56:48,400 --> 00:56:50,480
interested to find out if there's

1424
00:56:50,480 --> 00:56:51,599
interest

1425
00:56:51,599 --> 00:56:52,799
feedback of

1426
00:56:52,799 --> 00:56:54,559
show fans or you know interesting

1427
00:56:54,559 --> 00:56:56,400
whatever you

1428
00:56:56,400 --> 00:56:58,960
okay there's a couple on the queue yeah

1429
00:56:58,960 --> 00:57:03,040
and maybe tim you want to go first

1430
00:57:07,040 --> 00:57:08,400
hello

1431
00:57:08,400 --> 00:57:09,760
yep hear you

1432
00:57:09,760 --> 00:57:11,520
good uh so

1433
00:57:11,520 --> 00:57:14,960
i will say uh meanwhile that um we have

1434
00:57:14,960 --> 00:57:16,640
seen in the past

1435
00:57:16,640 --> 00:57:19,440
uh similar uh problems that you're that

1436
00:57:19,440 --> 00:57:20,799
you're um

1437
00:57:20,799 --> 00:57:23,359
talking about with like the mibo id

1438
00:57:23,359 --> 00:57:25,680
uh but actually for other protocols as

1439
00:57:25,680 --> 00:57:28,880
well like for uh ipfix for example the

1440
00:57:28,880 --> 00:57:30,640
the ie number there

1441
00:57:30,640 --> 00:57:33,200
that would be assigned to the node so um

1442
00:57:33,200 --> 00:57:35,680
you know we do see some usefulness

1443
00:57:35,680 --> 00:57:37,760
for for those features to be able to

1444
00:57:37,760 --> 00:57:39,520
have the source

1445
00:57:39,520 --> 00:57:42,880
correlate it back with other

1446
00:57:42,880 --> 00:57:45,119
identifiers for other protocols

1447
00:57:45,119 --> 00:57:47,440
um but when you do that if you could if

1448
00:57:47,440 --> 00:57:49,200
we could somehow make that kind of a

1449
00:57:49,200 --> 00:57:50,240
list

1450
00:57:50,240 --> 00:57:53,440
uh and allow for you know um you know

1451
00:57:53,440 --> 00:57:55,359
the the identities

1452
00:57:55,359 --> 00:57:59,040
uh to be done for uh or for you know one

1453
00:57:59,040 --> 00:58:01,200
or more types of things you can do you

1454
00:58:01,200 --> 00:58:03,760
know ipfix or snmp or both right you

1455
00:58:03,760 --> 00:58:05,200
know where you're giving annoyed or or

1456
00:58:05,200 --> 00:58:07,040
the i can fix number

1457
00:58:07,040 --> 00:58:09,839
for for whatever purposes that the

1458
00:58:09,839 --> 00:58:12,480
system needs

1459
00:58:13,920 --> 00:58:15,920
very good thank you tim

1460
00:58:15,920 --> 00:58:18,880
uh for the iphic is slightly more

1461
00:58:18,880 --> 00:58:21,119
complex because there is semantic behind

1462
00:58:21,119 --> 00:58:23,359
it depending on your key field

1463
00:58:23,359 --> 00:58:24,960
definitions

1464
00:58:24,960 --> 00:58:26,799
uh so there is not always a one-to-one

1465
00:58:26,799 --> 00:58:27,839
mapping

1466
00:58:27,839 --> 00:58:30,240
i could go into more details later uh

1467
00:58:30,240 --> 00:58:32,640
it's slightly more complex or flows

1468
00:58:32,640 --> 00:58:35,119
than yeah but it's for the same

1469
00:58:35,119 --> 00:58:36,880
the same problem right that you're

1470
00:58:36,880 --> 00:58:39,839
trying to do in it exactly so i think we

1471
00:58:39,839 --> 00:58:41,599
if we can address that i know that

1472
00:58:41,599 --> 00:58:44,960
there's needs in the market for that

1473
00:58:44,960 --> 00:58:46,640
very good thank you

1474
00:58:46,640 --> 00:58:49,280
so before rob comes on there is a poll

1475
00:58:49,280 --> 00:58:53,280
out there right now for you to vote on

1476
00:58:53,280 --> 00:58:55,200
the answer is if you raise hand you're

1477
00:58:55,200 --> 00:58:58,319
saying showing interest in the work

1478
00:58:58,319 --> 00:59:00,799
if you're not raising your hand you have

1479
00:59:00,799 --> 00:59:05,079
either no interest or have no comment

1480
00:59:07,119 --> 00:59:09,839
oh on the online tool uh

1481
00:59:09,839 --> 00:59:11,839
is there an ability on the phone

1482
00:59:11,839 --> 00:59:15,960
yes i believe there is

1483
00:59:18,960 --> 00:59:21,920
okay go ahead rob

1484
00:59:25,599 --> 00:59:27,839
um

1485
00:59:29,200 --> 00:59:30,640
thanks very much it's very interesting

1486
00:59:30,640 --> 00:59:32,880
so i had one comment on the

1487
00:59:32,880 --> 00:59:35,760
on the idea of sort of a recommended

1488
00:59:35,760 --> 00:59:37,680
polling interval rather than a minimum i

1489
00:59:37,680 --> 00:59:39,440
definitely think that makes sense in in

1490
00:59:39,440 --> 00:59:41,760
the context that as you say

1491
00:59:41,760 --> 00:59:43,920
a minimum polling until doesn't always

1492
00:59:43,920 --> 00:59:45,520
make sense depending on the capacity and

1493
00:59:45,520 --> 00:59:47,839
things one of the things that even with

1494
00:59:47,839 --> 00:59:50,160
the recommended one is it might depend

1495
00:59:50,160 --> 00:59:51,520
on what other subscriptions you are at

1496
00:59:51,520 --> 00:59:52,799
the same time so if you've only got a

1497
00:59:52,799 --> 00:59:54,880
subscription against the variable the

1498
00:59:54,880 --> 00:59:56,480
fib then that might give you one

1499
00:59:56,480 --> 00:59:58,079
interval whereas if you're pulling

1500
00:59:58,079 --> 01:00:00,000
polling pulling off a lot of other data

1501
01:00:00,000 --> 01:00:02,079
at the same time then that will change

1502
01:00:02,079 --> 01:00:04,160
and i think that's one aspect that's

1503
01:00:04,160 --> 01:00:06,559
also related to like the adaptive

1504
01:00:06,559 --> 01:00:08,400
telemetry drafts the same issues how do

1505
01:00:08,400 --> 01:00:09,520
you

1506
01:00:09,520 --> 01:00:11,760
how do you advertise not just what you

1507
01:00:11,760 --> 01:00:14,559
can do at the extreme but what you can

1508
01:00:14,559 --> 01:00:16,960
do in a sort of more generalized sense

1509
01:00:16,960 --> 01:00:19,280
um i think that's an interesting problem

1510
01:00:19,280 --> 01:00:20,880
i don't know whether

1511
01:00:20,880 --> 01:00:22,240
the recommended one because that would

1512
01:00:22,240 --> 01:00:24,400
change dynamically is is what you want

1513
01:00:24,400 --> 01:00:26,319
or or whether you need something to be

1514
01:00:26,319 --> 01:00:27,680
able to say these are all the

1515
01:00:27,680 --> 01:00:30,079
subscriptions i'm interested in

1516
01:00:30,079 --> 01:00:32,079
tell me what you can do here and it's

1517
01:00:32,079 --> 01:00:35,119
interesting that what gmy does here is

1518
01:00:35,119 --> 01:00:37,520
they have an option of saying

1519
01:00:37,520 --> 01:00:40,400
um just do the best so it's just

1520
01:00:40,400 --> 01:00:42,799
whatever the server can provide

1521
01:00:42,799 --> 01:00:45,200
but again if more subscriptions come

1522
01:00:45,200 --> 01:00:47,200
along does that then it will then change

1523
01:00:47,200 --> 01:00:49,359
over time and how does the client adjust

1524
01:00:49,359 --> 01:00:51,200
to that or not so i think there's some

1525
01:00:51,200 --> 01:00:52,400
interesting here

1526
01:00:52,400 --> 01:00:53,839
interesting stuff

1527
01:00:53,839 --> 01:00:55,200
your other question is are you

1528
01:00:55,200 --> 01:00:57,440
interested in this now i've not i've not

1529
01:00:57,440 --> 01:00:59,920
put my hand up by the way i i don't know

1530
01:00:59,920 --> 01:01:01,920
there's some interesting aspects here

1531
01:01:01,920 --> 01:01:03,760
whether we would implement this at this

1532
01:01:03,760 --> 01:01:05,839
time i'm not sure but down the line i

1533
01:01:05,839 --> 01:01:08,319
think so

1534
01:01:09,359 --> 01:01:11,920
thank you rob good feedback so somehow

1535
01:01:11,920 --> 01:01:14,240
your mansion your whenever you mentioned

1536
01:01:14,240 --> 01:01:16,319
do your best this is

1537
01:01:16,319 --> 01:01:18,559
this is what we want to do right because

1538
01:01:18,559 --> 01:01:20,480
the router is left to route packets from

1539
01:01:20,480 --> 01:01:22,400
time to time so do your best is what we

1540
01:01:22,400 --> 01:01:24,880
want now we want to slightly formalize

1541
01:01:24,880 --> 01:01:28,079
this because if at an example of flows

1542
01:01:28,079 --> 01:01:31,680
you know ipfix you do sampling great

1543
01:01:31,680 --> 01:01:33,599
you're able to get your sampling rate

1544
01:01:33,599 --> 01:01:35,760
back to your flow collector so that you

1545
01:01:35,760 --> 01:01:37,680
could do your own computation

1546
01:01:37,680 --> 01:01:40,160
now in this world of adaptive where you

1547
01:01:40,160 --> 01:01:41,440
do your best

1548
01:01:41,440 --> 01:01:43,440
if you don't know

1549
01:01:43,440 --> 01:01:45,760
what the best is and it keeps changing

1550
01:01:45,760 --> 01:01:47,520
if you don't advertise this

1551
01:01:47,520 --> 01:01:49,440
to your data collection system

1552
01:01:49,440 --> 01:01:51,359
then you cannot reconcile information

1553
01:01:51,359 --> 01:01:53,520
easily if you speak about some data

1554
01:01:53,520 --> 01:01:55,200
that's fine because you could kind of

1555
01:01:55,200 --> 01:01:56,880
average that if we speak about

1556
01:01:56,880 --> 01:01:58,880
multiplying counters because you are

1557
01:01:58,880 --> 01:02:00,559
doing some sort of sampling

1558
01:02:00,559 --> 01:02:02,960
then we have a problem but this is this

1559
01:02:02,960 --> 01:02:04,960
is the idea do your best

1560
01:02:04,960 --> 01:02:06,720
based on what you could do

1561
01:02:06,720 --> 01:02:08,880
now and send me the information by the

1562
01:02:08,880 --> 01:02:10,960
way because i need to get the context

1563
01:02:10,960 --> 01:02:14,000
that will follow the data

1564
01:02:15,520 --> 01:02:18,680
all right

1565
01:02:26,480 --> 01:02:28,559
yeah this is charles but i'm channeling

1566
01:02:28,559 --> 01:02:30,079
a question from jurgen because we

1567
01:02:30,079 --> 01:02:32,000
weren't able to confirm with him

1568
01:02:32,000 --> 01:02:33,520
about asking it

1569
01:02:33,520 --> 01:02:36,079
but uh he just asked us the nodes tag

1570
01:02:36,079 --> 01:02:37,760
work and netmod

1571
01:02:37,760 --> 01:02:40,000
provide the means to obtain the metadata

1572
01:02:40,000 --> 01:02:44,039
do we really need a new rpc

1573
01:02:48,480 --> 01:02:51,359
do you want to take the mic

1574
01:02:51,839 --> 01:02:53,520
jorgen short answer i don't know yet

1575
01:02:53,520 --> 01:02:56,480
i'll look into that

1576
01:02:58,480 --> 01:03:00,559
all right thank you charles

1577
01:03:00,559 --> 01:03:03,359
and joe's in the queue next

1578
01:03:03,359 --> 01:03:05,760
you have a question joe

1579
01:03:05,760 --> 01:03:06,799
uh not a

1580
01:03:06,799 --> 01:03:08,880
joe clark cisco not a question uh

1581
01:03:08,880 --> 01:03:10,559
comment um

1582
01:03:10,559 --> 01:03:12,960
so i think i raised my virtual hand i

1583
01:03:12,960 --> 01:03:15,039
think it's interesting i'm kind of

1584
01:03:15,039 --> 01:03:17,280
curious and i can leave more details on

1585
01:03:17,280 --> 01:03:18,319
email

1586
01:03:18,319 --> 01:03:19,280
like

1587
01:03:19,280 --> 01:03:21,359
some of that you think the the what rob

1588
01:03:21,359 --> 01:03:23,520
said about the polling yes

1589
01:03:23,520 --> 01:03:26,480
the snmp oid i mean you and i know

1590
01:03:26,480 --> 01:03:27,520
useful

1591
01:03:27,520 --> 01:03:28,480
but

1592
01:03:28,480 --> 01:03:30,319
there's a lot of challenges there like

1593
01:03:30,319 --> 01:03:32,319
just knowing the oid alone doesn't

1594
01:03:32,319 --> 01:03:34,880
really help me i need to have the index

1595
01:03:34,880 --> 01:03:37,359
mapping and that's on a per instance i

1596
01:03:37,359 --> 01:03:39,200
just wonder if if

1597
01:03:39,200 --> 01:03:40,720
there's

1598
01:03:40,720 --> 01:03:43,119
it sounds useful is it going to be

1599
01:03:43,119 --> 01:03:46,079
doable enough to actually make

1600
01:03:46,079 --> 01:03:48,079
to to spend the time to do the work i

1601
01:03:48,079 --> 01:03:49,760
guess that's what i'm getting this kind

1602
01:03:49,760 --> 01:03:53,039
of rosetta stone would be amazing um

1603
01:03:53,039 --> 01:03:55,599
tim brought up another i just don't know

1604
01:03:55,599 --> 01:03:59,799
how practical it would all be

1605
01:04:00,319 --> 01:04:03,359
the very good point uh joe actually

1606
01:04:03,359 --> 01:04:05,359
i tend to agree with you because it's

1607
01:04:05,359 --> 01:04:06,960
whenever i will go in the details of

1608
01:04:06,960 --> 01:04:09,920
getting an index in the map or actually

1609
01:04:09,920 --> 01:04:12,640
multiple indices and then we've got like

1610
01:04:12,640 --> 01:04:15,599
a yang which has different indices and

1611
01:04:15,599 --> 01:04:17,920
it's going to be complex so this one was

1612
01:04:17,920 --> 01:04:20,079
put in there because we want i do want

1613
01:04:20,079 --> 01:04:22,720
to store that when we arrive i'm not

1614
01:04:22,720 --> 01:04:25,200
sure so maybe if if we have to do things

1615
01:04:25,200 --> 01:04:28,720
in step might be the right answer

1616
01:04:30,319 --> 01:04:32,720
i was trying to raise my hands and go to

1617
01:04:32,720 --> 01:04:35,200
the queue at the same time and it's not

1618
01:04:35,200 --> 01:04:36,079
well

1619
01:04:36,079 --> 01:04:38,720
yeah it's uh simply that i mean this is

1620
01:04:38,720 --> 01:04:40,960
the kind of feature that we have been uh

1621
01:04:40,960 --> 01:04:43,440
demanding quite often i'm talking among

1622
01:04:43,440 --> 01:04:45,440
us precisely because it would be

1623
01:04:45,440 --> 01:04:48,000
really helpful in precisely warrantying

1624
01:04:48,000 --> 01:04:50,160
uh

1625
01:04:50,640 --> 01:04:53,200
well i would not say comfortable but

1626
01:04:53,200 --> 01:04:55,520
reasonable path for migration and for

1627
01:04:55,520 --> 01:04:58,079
integrating different elements that

1628
01:04:58,079 --> 01:05:00,000
instead of using what we are using right

1629
01:05:00,000 --> 01:05:02,559
now that is the best guess or whatever

1630
01:05:02,559 --> 01:05:05,200
we get fall from uh

1631
01:05:05,200 --> 01:05:07,359
from experience or from interaction with

1632
01:05:07,359 --> 01:05:09,039
the uh

1633
01:05:09,039 --> 01:05:11,359
with the with the manufacturers this is

1634
01:05:11,359 --> 01:05:13,039
quite useful in the sense that you can

1635
01:05:13,039 --> 01:05:16,799
integrate this in a in a whole

1636
01:05:16,960 --> 01:05:19,200
life cycle of the of what you're doing

1637
01:05:19,200 --> 01:05:20,319
so

1638
01:05:20,319 --> 01:05:22,640
you have my my hands were my hand was

1639
01:05:22,640 --> 01:05:26,240
raised for for a long time so i

1640
01:05:26,240 --> 01:05:28,880
just uh so they were like go ahead take

1641
01:05:28,880 --> 01:05:30,079
the mic

1642
01:05:30,079 --> 01:05:32,720
sorry so because i want to to clarify so

1643
01:05:32,720 --> 01:05:35,039
there is like map or id

1644
01:05:35,039 --> 01:05:37,119
there is like a

1645
01:05:37,119 --> 01:05:40,240
proposed observation uh collection etc

1646
01:05:40,240 --> 01:05:43,359
so it's a race and for everything or you

1647
01:05:43,359 --> 01:05:45,119
have things that you need now and we

1648
01:05:45,119 --> 01:05:48,079
could do some later

1649
01:05:48,400 --> 01:05:50,319
in principle if you're asking me well is

1650
01:05:50,319 --> 01:05:52,000
it the letter to santa claus for

1651
01:05:52,000 --> 01:05:54,079
everything come on

1652
01:05:54,079 --> 01:05:56,400
no no

1653
01:05:56,400 --> 01:05:59,440
seriously no if we had to to experiment

1654
01:05:59,440 --> 01:06:02,400
with something personally i found i mean

1655
01:06:02,400 --> 01:06:05,200
from my experience not the the purely

1656
01:06:05,200 --> 01:06:07,440
operational language people for me but i

1657
01:06:07,440 --> 01:06:10,160
or the oid will be probably more

1658
01:06:10,160 --> 01:06:12,000
interested the one about the related

1659
01:06:12,000 --> 01:06:14,400
note is something that interests me

1660
01:06:14,400 --> 01:06:17,039
personally more but i would say that the

1661
01:06:17,039 --> 01:06:18,880
that the migration pass

1662
01:06:18,880 --> 01:06:20,319
probably will be the most interesting

1663
01:06:20,319 --> 01:06:22,079
for the real uh the people that are

1664
01:06:22,079 --> 01:06:24,799
running the real networks

1665
01:06:24,799 --> 01:06:26,160
thank you

1666
01:06:26,160 --> 01:06:28,000
we do have one more question but just to

1667
01:06:28,000 --> 01:06:29,920
let everyone know we

1668
01:06:29,920 --> 01:06:32,960
i ended the poll and we had 29

1669
01:06:32,960 --> 01:06:35,680
participants with 24 saying they had

1670
01:06:35,680 --> 01:06:37,920
some interest

1671
01:06:37,920 --> 01:06:38,720
um

1672
01:06:38,720 --> 01:06:41,440
and we have balaz in the queue

1673
01:06:41,440 --> 01:06:44,760
go ahead bolas

1674
01:06:46,880 --> 01:06:48,480
actually just quickly before blood

1675
01:06:48,480 --> 01:06:50,640
starts speaking uh that was uh diego

1676
01:06:50,640 --> 01:06:53,520
lopez who was at the mic just last time

1677
01:06:53,520 --> 01:06:55,359
he didn't introduce himself

1678
01:06:55,359 --> 01:06:57,520
yeah

1679
01:06:57,839 --> 01:07:01,160
go ahead blush

1680
01:07:03,760 --> 01:07:07,760
let's make sure you unmute your

1681
01:07:08,240 --> 01:07:10,160
mic do you hear me

1682
01:07:10,160 --> 01:07:11,039
yes

1683
01:07:11,039 --> 01:07:14,160
okay so besides oh ids and ipfix

1684
01:07:14,160 --> 01:07:15,760
references

1685
01:07:15,760 --> 01:07:18,559
we also deal with three gpp management

1686
01:07:18,559 --> 01:07:20,640
systems using distinguished names so

1687
01:07:20,640 --> 01:07:22,400
that could be another reference that

1688
01:07:22,400 --> 01:07:24,000
would be very good to map to yank

1689
01:07:24,000 --> 01:07:26,640
sometimes

1690
01:07:26,640 --> 01:07:28,480
thank you

1691
01:07:28,480 --> 01:07:31,599
very good thank you

1692
01:07:34,319 --> 01:07:36,799
all right uh for those who did comment

1693
01:07:36,799 --> 01:07:37,680
uh

1694
01:07:37,680 --> 01:07:39,520
go ahead to the notes

1695
01:07:39,520 --> 01:07:42,880
page and do add your comments for binva

1696
01:07:42,880 --> 01:07:45,200
please

1697
01:07:48,960 --> 01:07:51,119
all right next presentation will be the

1698
01:07:51,119 --> 01:07:54,799
um transaction id jan lim blood

1699
01:07:54,799 --> 01:07:58,240
let me get the slides cued up

1700
01:08:00,400 --> 01:08:01,440
and

1701
01:08:01,440 --> 01:08:03,920
yawn i'm going to make you the

1702
01:08:03,920 --> 01:08:06,240
controller so left right mouse button

1703
01:08:06,240 --> 01:08:10,000
should do it for you go ahead thank you

1704
01:08:10,000 --> 01:08:11,839
so this is a

1705
01:08:11,839 --> 01:08:13,200
update what's going on with the

1706
01:08:13,200 --> 01:08:14,880
transaction id that some of you may have

1707
01:08:14,880 --> 01:08:17,359
followed earlier

1708
01:08:17,359 --> 01:08:18,880
so i wanted to go

1709
01:08:18,880 --> 01:08:21,520
do a quick problem and solution recap

1710
01:08:21,520 --> 01:08:22,799
and then talk about the simulated

1711
01:08:22,799 --> 01:08:24,799
results that we have since earlier

1712
01:08:24,799 --> 01:08:26,479
and then mentioned a few words about

1713
01:08:26,479 --> 01:08:29,679
what's in the works right now

1714
01:08:29,679 --> 01:08:30,880
so

1715
01:08:30,880 --> 01:08:32,960
this work is trying to address three

1716
01:08:32,960 --> 01:08:34,719
problems

1717
01:08:34,719 --> 01:08:37,120
one is the get config

1718
01:08:37,120 --> 01:08:39,600
it's a slow and costly operation

1719
01:08:39,600 --> 01:08:40,880
and if you want to use it for change

1720
01:08:40,880 --> 01:08:43,120
detection on the server if it's clients

1721
01:08:43,120 --> 01:08:46,000
wants to know if the server has changed

1722
01:08:46,000 --> 01:08:47,040
this is

1723
01:08:47,040 --> 01:08:49,520
an expensive way to do that

1724
01:08:49,520 --> 01:08:51,279
so you do get config and you get a

1725
01:08:51,279 --> 01:08:52,799
response and then you do get complete

1726
01:08:52,799 --> 01:08:54,880
clear and check get a response

1727
01:08:54,880 --> 01:08:56,799
and see if it looks the same

1728
01:08:56,799 --> 01:08:59,520
but it's consuming both the cpu on both

1729
01:08:59,520 --> 01:09:02,399
sides and a lot of network bandwidth

1730
01:09:02,399 --> 01:09:06,358
to find out that nothing happened

1731
01:09:08,640 --> 01:09:12,238
uh the second problem is with jan kush

1732
01:09:12,238 --> 01:09:13,759
so if a

1733
01:09:13,759 --> 01:09:16,080
client is subscribing

1734
01:09:16,080 --> 01:09:18,479
to updates on some parts of the server

1735
01:09:18,479 --> 01:09:20,399
configuration

1736
01:09:20,399 --> 01:09:21,759
and then getting

1737
01:09:21,759 --> 01:09:23,759
updates after that

1738
01:09:23,759 --> 01:09:26,000
when something happens in the server

1739
01:09:26,000 --> 01:09:27,600
that's of course great but what happens

1740
01:09:27,600 --> 01:09:29,520
is that if the client is configuring the

1741
01:09:29,520 --> 01:09:30,479
server

1742
01:09:30,479 --> 01:09:32,238
he will get updates about his own change

1743
01:09:32,238 --> 01:09:33,279
as well

1744
01:09:33,279 --> 01:09:34,399
and it kind of

1745
01:09:34,399 --> 01:09:36,000
unnecessary and it takes a lot of

1746
01:09:36,000 --> 01:09:37,439
computations to figure out oh actually

1747
01:09:37,439 --> 01:09:39,439
this i i already knew this because i

1748
01:09:39,439 --> 01:09:40,719
said it

1749
01:09:40,719 --> 01:09:42,640
so if there was a way to identify those

1750
01:09:42,640 --> 01:09:44,719
updates as being what you already know

1751
01:09:44,719 --> 01:09:48,279
that would be good

1752
01:09:48,399 --> 01:09:50,799
and the third thing uh

1753
01:09:50,799 --> 01:09:51,759
well

1754
01:09:51,759 --> 01:09:53,920
actually more more than cpu consumption

1755
01:09:53,920 --> 01:09:56,400
and the network bandwidth consumption a

1756
01:09:56,400 --> 01:09:58,719
problem is uh that's important for in

1757
01:09:58,719 --> 01:10:01,520
many cases is that we want to detect

1758
01:10:01,520 --> 01:10:02,560
when

1759
01:10:02,560 --> 01:10:05,440
multiple clients are making changes uh

1760
01:10:05,440 --> 01:10:08,320
at the same time and to the same server

1761
01:10:08,320 --> 01:10:10,080
so that if they are clobbering each

1762
01:10:10,080 --> 01:10:13,199
other they would want to know

1763
01:10:13,199 --> 01:10:15,280
and the the current method of using get

1764
01:10:15,280 --> 01:10:17,120
config is

1765
01:10:17,120 --> 01:10:19,840
both costly and

1766
01:10:19,840 --> 01:10:23,040
it has a hole right you can do a get

1767
01:10:23,040 --> 01:10:25,280
config but before you are able to send

1768
01:10:25,280 --> 01:10:27,199
the edit config that follows to make

1769
01:10:27,199 --> 01:10:29,280
your change there's a window of

1770
01:10:29,280 --> 01:10:30,960
vulnerability if somebody else is doing

1771
01:10:30,960 --> 01:10:32,400
an edit config

1772
01:10:32,400 --> 01:10:33,920
in that window you would still be

1773
01:10:33,920 --> 01:10:36,480
clobbering

1774
01:10:36,560 --> 01:10:38,800
uh you can of course take the lock but

1775
01:10:38,800 --> 01:10:41,360
since getconfig can take several minutes

1776
01:10:41,360 --> 01:10:44,239
you don't want to take locks that are so

1777
01:10:44,239 --> 01:10:47,040
so prolonged

1778
01:10:48,400 --> 01:10:50,159
so a lot of people have talked about

1779
01:10:50,159 --> 01:10:51,840
yeah let's introduce a sort of

1780
01:10:51,840 --> 01:10:54,640
simplistic top level transaction id

1781
01:10:54,640 --> 01:10:55,679
where

1782
01:10:55,679 --> 01:10:58,800
every server keeps track of for example

1783
01:10:58,800 --> 01:11:00,640
the timestamp when it was last changed

1784
01:11:00,640 --> 01:11:03,840
or some sort of global number at the top

1785
01:11:03,840 --> 01:11:06,080
that reflects the contents so that i

1786
01:11:06,080 --> 01:11:07,600
didn't get confident you can ask what's

1787
01:11:07,600 --> 01:11:09,840
your transaction id and when you get the

1788
01:11:09,840 --> 01:11:12,080
content forget config you'll also get

1789
01:11:12,080 --> 01:11:14,640
that number like 4 7 11.

1790
01:11:14,640 --> 01:11:16,239
many servers have implemented this

1791
01:11:16,239 --> 01:11:19,120
already but not in a standard way but in

1792
01:11:19,120 --> 01:11:22,719
each vendor in a proprietary way

1793
01:11:22,719 --> 01:11:24,480
and then that could reduce the amount of

1794
01:11:24,480 --> 01:11:26,960
traffic in cpu considerably

1795
01:11:26,960 --> 01:11:29,440
for some use cases

1796
01:11:29,440 --> 01:11:30,239
but

1797
01:11:30,239 --> 01:11:32,159
what we have found is that

1798
01:11:32,159 --> 01:11:33,280
many of the use cases that are

1799
01:11:33,280 --> 01:11:35,440
interesting are not like that

1800
01:11:35,440 --> 01:11:37,040
you would actually have more

1801
01:11:37,040 --> 01:11:38,560
applications more clients that are

1802
01:11:38,560 --> 01:11:40,239
interested in certain subparts of the

1803
01:11:40,239 --> 01:11:41,920
configuration of servers

1804
01:11:41,920 --> 01:11:43,679
let's say we have a vpn client a

1805
01:11:43,679 --> 01:11:45,840
security client and an underlay client

1806
01:11:45,840 --> 01:11:48,080
that that care mostly about different

1807
01:11:48,080 --> 01:11:50,719
parts of the config of the server

1808
01:11:50,719 --> 01:11:53,040
and if you all you get is this top level

1809
01:11:53,040 --> 01:11:56,880
e tag number 471 there and the changes

1810
01:11:56,880 --> 01:11:58,560
these clients they don't know

1811
01:11:58,560 --> 01:12:00,239
if something that affects them or they

1812
01:12:00,239 --> 01:12:02,480
care about has changed or not

1813
01:12:02,480 --> 01:12:05,199
and in many cases that e-tag number is

1814
01:12:05,199 --> 01:12:06,719
changing so frequently because of

1815
01:12:06,719 --> 01:12:09,280
changes that are going on on this device

1816
01:12:09,280 --> 01:12:11,520
that there's no point in trying to track

1817
01:12:11,520 --> 01:12:13,280
that at all so we have found that many

1818
01:12:13,280 --> 01:12:14,800
of our customers

1819
01:12:14,800 --> 01:12:17,040
are turning off that feature even for

1820
01:12:17,040 --> 01:12:18,560
the devices that support this top level

1821
01:12:18,560 --> 01:12:19,679
thing

1822
01:12:19,679 --> 01:12:23,040
so that's why we think a transaction id

1823
01:12:23,040 --> 01:12:25,440
or e-tag mechanism that goes deeper into

1824
01:12:25,440 --> 01:12:27,520
the tree is very valuable so that you

1825
01:12:27,520 --> 01:12:29,040
can synchronize

1826
01:12:29,040 --> 01:12:30,960
the part of the configuration or track

1827
01:12:30,960 --> 01:12:32,400
changes to the partial configuration

1828
01:12:32,400 --> 01:12:34,719
that your that you actually care about

1829
01:12:34,719 --> 01:12:36,719
and the draft is also talking about the

1830
01:12:36,719 --> 01:12:39,040
edit conflict mechanism is lock free and

1831
01:12:39,040 --> 01:12:42,239
uh detects clobbering without any sort

1832
01:12:42,239 --> 01:12:42,960
of

1833
01:12:42,960 --> 01:12:46,640
vulnerable window vulnerability windows

1834
01:12:46,640 --> 01:12:47,920
so this is something that you might have

1835
01:12:47,920 --> 01:12:50,000
already known because we talked about it

1836
01:12:50,000 --> 01:12:52,719
before is nothing new here but just to

1837
01:12:52,719 --> 01:12:54,400
remind you what we are talking about

1838
01:12:54,400 --> 01:12:56,559
here

1839
01:12:58,000 --> 01:13:00,800
in order to measure what we what this

1840
01:13:00,800 --> 01:13:02,480
draft would give you

1841
01:13:02,480 --> 01:13:04,640
we did a measurement on a real world

1842
01:13:04,640 --> 01:13:06,400
application that was running in one of

1843
01:13:06,400 --> 01:13:08,480
our labs for an hour

1844
01:13:08,480 --> 01:13:11,040
uh and this application was then doing a

1845
01:13:11,040 --> 01:13:12,880
lot of management of devices in the

1846
01:13:12,880 --> 01:13:14,159
network

1847
01:13:14,159 --> 01:13:15,840
and it was

1848
01:13:15,840 --> 01:13:18,560
doing 569 round trips

1849
01:13:18,560 --> 01:13:21,040
that means get configs and edit configs

1850
01:13:21,040 --> 01:13:23,199
and all sorts of

1851
01:13:23,199 --> 01:13:25,520
messages that they were sending

1852
01:13:25,520 --> 01:13:27,199
to the server

1853
01:13:27,199 --> 01:13:28,239
and

1854
01:13:28,239 --> 01:13:31,520
it was sending about one megabyte of net

1855
01:13:31,520 --> 01:13:32,400
conf

1856
01:13:32,400 --> 01:13:33,920
traffic

1857
01:13:33,920 --> 01:13:36,880
during that time

1858
01:13:36,880 --> 01:13:39,040
but if we implemented the sort of

1859
01:13:39,040 --> 01:13:40,480
mechanism that we talked about in this

1860
01:13:40,480 --> 01:13:41,679
draft

1861
01:13:41,679 --> 01:13:44,400
those 569 would go down to 378 round

1862
01:13:44,400 --> 01:13:47,199
trips so about one third would be

1863
01:13:47,199 --> 01:13:49,199
gone and that of course removes both

1864
01:13:49,199 --> 01:13:51,760
network load and delay in applications

1865
01:13:51,760 --> 01:13:54,480
because round trips take a lot of time

1866
01:13:54,480 --> 01:13:57,360
and uh reducing the amount of traffic

1867
01:13:57,360 --> 01:13:59,920
from one megabyte to just a little more

1868
01:13:59,920 --> 01:14:01,520
than a half megabyte

1869
01:14:01,520 --> 01:14:03,280
which again reduces network load and

1870
01:14:03,280 --> 01:14:06,320
processing time on both sides

1871
01:14:06,320 --> 01:14:08,719
and this is now then a mechanism that

1872
01:14:08,719 --> 01:14:10,960
doesn't require any sort of locking

1873
01:14:10,960 --> 01:14:12,480
and it removes this

1874
01:14:12,480 --> 01:14:15,520
window of vulnerability

1875
01:14:15,520 --> 01:14:17,440
so if you think this is interesting we

1876
01:14:17,440 --> 01:14:20,400
can continue working on this together to

1877
01:14:20,400 --> 01:14:21,760
look at how we implement things and

1878
01:14:21,760 --> 01:14:23,360
there are a few open questions in this

1879
01:14:23,360 --> 01:14:25,599
work

1880
01:14:25,920 --> 01:14:27,600
the thing that we are looking at right

1881
01:14:27,600 --> 01:14:29,520
now is to

1882
01:14:29,520 --> 01:14:31,360
add text for

1883
01:14:31,360 --> 01:14:34,880
how yang push should integrate into this

1884
01:14:34,880 --> 01:14:37,040
it's uh something that is not mentioned

1885
01:14:37,040 --> 01:14:41,199
in the current dash one version at all

1886
01:14:41,199 --> 01:14:43,600
and we are looking at

1887
01:14:43,600 --> 01:14:44,719
in-house

1888
01:14:44,719 --> 01:14:46,560
doing prototype implementations of this

1889
01:14:46,560 --> 01:14:48,640
just to verify this with a broader class

1890
01:14:48,640 --> 01:14:50,480
of use cases than this

1891
01:14:50,480 --> 01:14:53,519
simulation that we did

1892
01:14:55,360 --> 01:14:57,360
that's all i had to say any comments or

1893
01:14:57,360 --> 01:14:59,759
questions

1894
01:15:02,880 --> 01:15:05,600
uh yeah did you want a poll to see if

1895
01:15:05,600 --> 01:15:08,719
there was interest in the work

1896
01:15:08,719 --> 01:15:11,120
that could be a good idea yeah

1897
01:15:11,120 --> 01:15:14,239
if you can arrange that please

1898
01:15:14,320 --> 01:15:16,800
before the poll maybe some questions

1899
01:15:16,800 --> 01:15:18,320
at least i have a question

1900
01:15:18,320 --> 01:15:21,199
um yeah go ahead and set up the poll

1901
01:15:21,199 --> 01:15:22,320
okay great

1902
01:15:22,320 --> 01:15:25,520
um jan so um i i'm highly supportive of

1903
01:15:25,520 --> 01:15:27,440
this work but first can you just clarify

1904
01:15:27,440 --> 01:15:29,600
you didn't use the word rest conf in

1905
01:15:29,600 --> 01:15:32,719
your presentation but this by and large

1906
01:15:32,719 --> 01:15:33,920
in my mind

1907
01:15:33,920 --> 01:15:37,120
is uh enabling that conf to have feature

1908
01:15:37,120 --> 01:15:39,520
parody with rescue

1909
01:15:39,520 --> 01:15:42,159
at least in terms of uh the e-tag and

1910
01:15:42,159 --> 01:15:45,840
maybe also the modification time on a uh

1911
01:15:45,840 --> 01:15:47,840
you know within the tree uh deep in the

1912
01:15:47,840 --> 01:15:49,840
tree um is it is that a fair

1913
01:15:49,840 --> 01:15:52,159
characterization it's a as a effectively

1914
01:15:52,159 --> 01:15:54,800
enabling that contact feature parity to

1915
01:15:54,800 --> 01:15:56,640
rest conf in that regard

1916
01:15:56,640 --> 01:15:59,440
yes and then if you read the the draft

1917
01:15:59,440 --> 01:16:01,440
you will actually see rest confirmation

1918
01:16:01,440 --> 01:16:03,520
in there and exactly how it would work

1919
01:16:03,520 --> 01:16:05,520
and it is i would definitely say it's

1920
01:16:05,520 --> 01:16:07,440
feature parody but it also goes beyond

1921
01:16:07,440 --> 01:16:08,800
that

1922
01:16:08,800 --> 01:16:11,840
yeah and that's that's that's uh going

1923
01:16:11,840 --> 01:16:14,560
beyond is also applicable to rest conf

1924
01:16:14,560 --> 01:16:17,679
okay and then my second question is on

1925
01:16:17,679 --> 01:16:19,840
your first bullet point in this slide

1926
01:16:19,840 --> 01:16:22,880
you talk about integration to yang push

1927
01:16:22,880 --> 01:16:24,800
it doesn't even occur to me what can you

1928
01:16:24,800 --> 01:16:26,640
just say a few words more about what is

1929
01:16:26,640 --> 01:16:28,560
the nature of that integration that

1930
01:16:28,560 --> 01:16:30,800
might be needed

1931
01:16:30,800 --> 01:16:33,199
yeah i mean we have this

1932
01:16:33,199 --> 01:16:35,440
let's see i can actually go back here

1933
01:16:35,440 --> 01:16:37,600
in the slides

1934
01:16:37,600 --> 01:16:39,360
you know i have this pole in front of me

1935
01:16:39,360 --> 01:16:40,960
so i can't really see the slide very

1936
01:16:40,960 --> 01:16:44,239
well but okay so when you subscribe to

1937
01:16:44,239 --> 01:16:46,320
uh configuration updates using young

1938
01:16:46,320 --> 01:16:48,080
push for a part of the tree that you're

1939
01:16:48,080 --> 01:16:49,280
interested in

1940
01:16:49,280 --> 01:16:51,360
whatever you the client itself is

1941
01:16:51,360 --> 01:16:53,120
pushing to that part of the tree will be

1942
01:16:53,120 --> 01:16:55,280
echoed back to him

1943
01:16:55,280 --> 01:16:57,760
but it's uh difficult to understand if

1944
01:16:57,760 --> 01:17:00,080
this is another update from some other

1945
01:17:00,080 --> 01:17:02,640
transaction that happened on this server

1946
01:17:02,640 --> 01:17:05,600
or if it is my own thing

1947
01:17:05,600 --> 01:17:07,520
since there's there's no way of knowing

1948
01:17:07,520 --> 01:17:08,800
you have to actually parse this whole

1949
01:17:08,800 --> 01:17:10,320
thing and say yeah actually it matches

1950
01:17:10,320 --> 01:17:13,599
exactly what they already had so

1951
01:17:14,159 --> 01:17:16,239
yeah this may be an echo of your problem

1952
01:17:16,239 --> 01:17:17,600
number one i forget if it was or not but

1953
01:17:17,600 --> 01:17:19,440
you mentioned uh the server getting back

1954
01:17:19,440 --> 01:17:22,000
a notification for something that it had

1955
01:17:22,000 --> 01:17:23,199
already

1956
01:17:23,199 --> 01:17:24,960
it knows it did it so why would it need

1957
01:17:24,960 --> 01:17:27,679
to get a notification for it um and as

1958
01:17:27,679 --> 01:17:29,679
you were saying that i was thinking to

1959
01:17:29,679 --> 01:17:32,080
myself that maybe it's not so bad i mean

1960
01:17:32,080 --> 01:17:33,120
if

1961
01:17:33,120 --> 01:17:34,560
if if the

1962
01:17:34,560 --> 01:17:36,880
bandwidth and you know processing isn't

1963
01:17:36,880 --> 01:17:37,840
huge

1964
01:17:37,840 --> 01:17:40,480
it's still probably valuable to have a

1965
01:17:40,480 --> 01:17:43,280
record of the thing having occurred and

1966
01:17:43,280 --> 01:17:45,040
so in that regard i probably would say

1967
01:17:45,040 --> 01:17:46,960
it's not a big deal so if it's the same

1968
01:17:46,960 --> 01:17:50,239
issue then maybe it's not a big deal

1969
01:17:50,239 --> 01:17:52,400
i think that actually if you look

1970
01:17:52,400 --> 01:17:53,600
into how we could do this with the

1971
01:17:53,600 --> 01:17:55,840
transaction id you could do exactly that

1972
01:17:55,840 --> 01:17:57,840
but much more efficient than getting the

1973
01:17:57,840 --> 01:17:59,600
full data back and

1974
01:17:59,600 --> 01:18:01,440
having to process it and compare and all

1975
01:18:01,440 --> 01:18:04,239
that so getting the the update is great

1976
01:18:04,239 --> 01:18:06,159
but if you have the young push

1977
01:18:06,159 --> 01:18:07,920
mechanism integrated with transaction

1978
01:18:07,920 --> 01:18:08,880
ids

1979
01:18:08,880 --> 01:18:10,800
you could do that

1980
01:18:10,800 --> 01:18:13,199
okay thank you that was just

1981
01:18:13,199 --> 01:18:14,960
that was and again this is kent as a

1982
01:18:14,960 --> 01:18:17,040
contributor thank you

1983
01:18:17,040 --> 01:18:19,679
that's it for me

1984
01:18:22,800 --> 01:18:24,800
okay i think those numbers are quite

1985
01:18:24,800 --> 01:18:26,719
impressive

1986
01:18:26,719 --> 01:18:29,120
yes so

1987
01:18:29,120 --> 01:18:30,320
um

1988
01:18:30,320 --> 01:18:33,440
oh i see them now okay

1989
01:18:34,000 --> 01:18:37,040
so we had 23 who participated and 22

1990
01:18:37,040 --> 01:18:41,560
said they would see the work interesting

1991
01:18:44,560 --> 01:18:46,400
very good

1992
01:18:46,400 --> 01:18:48,080
so i think we can move into an adoption

1993
01:18:48,080 --> 01:18:50,640
call shortly

1994
01:18:51,040 --> 01:18:54,600
excellent thank you

1995
01:19:01,040 --> 01:19:04,560
any other comments or questions

1996
01:19:06,159 --> 01:19:08,960
we have none in the queue

1997
01:19:08,960 --> 01:19:12,199
thank you

1998
01:19:34,640 --> 01:19:36,719
changing the order just a little bit so

1999
01:19:36,719 --> 01:19:38,480
next is going to be

2000
01:19:38,480 --> 01:19:40,879
jamming

2001
01:19:46,400 --> 01:19:48,960
as i understand it this draft actually

2002
01:19:48,960 --> 01:19:51,679
pretend presents the use cases for the

2003
01:19:51,679 --> 01:19:54,000
adaptive subscription uh presentation

2004
01:19:54,000 --> 01:19:58,960
which is after this one is xiaomi here

2005
01:20:00,159 --> 01:20:02,400
who's presenting this

2006
01:20:02,400 --> 01:20:05,839
should be xiaomi

2007
01:20:11,520 --> 01:20:12,880
okay

2008
01:20:12,880 --> 01:20:15,840
i don't see so marky fog do you think

2009
01:20:15,840 --> 01:20:20,080
you could present on behalf of

2010
01:20:20,080 --> 01:20:22,559
germany

2011
01:20:27,600 --> 01:20:30,080
i think i can't represent him to present

2012
01:20:30,080 --> 01:20:32,639
this work

2013
01:20:41,040 --> 01:20:43,040
yes or no

2014
01:20:43,040 --> 01:20:46,880
no sorry i can't really represent them

2015
01:20:46,880 --> 01:20:49,040
okay fine

2016
01:20:49,040 --> 01:20:51,199
um all right well then

2017
01:20:51,199 --> 01:20:52,320
i guess we'll just skip this

2018
01:20:52,320 --> 01:20:54,880
presentation if he's no one's here to

2019
01:20:54,880 --> 01:20:56,480
present it

2020
01:20:56,480 --> 01:20:57,360
so

2021
01:20:57,360 --> 01:20:58,400
we will

2022
01:20:58,400 --> 01:21:00,080
kill these fines

2023
01:21:00,080 --> 01:21:02,080
i shouldn't use that word

2024
01:21:02,080 --> 01:21:03,840
but bring out the next slice adaptive

2025
01:21:03,840 --> 01:21:06,080
subscription

2026
01:21:06,080 --> 01:21:09,600
uh yeah i think i can drive this slide

2027
01:21:09,600 --> 01:21:11,679
okay i'll pass the control to you

2028
01:21:11,679 --> 01:21:15,600
as soon as they come up

2029
01:21:15,600 --> 01:21:18,159
okay there you go thank you

2030
01:21:18,159 --> 01:21:19,040
thanks

2031
01:21:19,040 --> 01:21:19,900
so uh

2032
01:21:19,900 --> 01:21:21,520
[Music]

2033
01:21:21,520 --> 01:21:22,320
okay

2034
01:21:22,320 --> 01:21:25,120
on behalf the authors and contributors i

2035
01:21:25,120 --> 01:21:27,520
would like to give a presentation about

2036
01:21:27,520 --> 01:21:30,159
the adaptive subscription to young

2037
01:21:30,159 --> 01:21:32,639
notification

2038
01:21:32,639 --> 01:21:34,880
so

2039
01:21:35,840 --> 01:21:37,679
for people who are not familiar with

2040
01:21:37,679 --> 01:21:40,960
this work um usually a high frequency

2041
01:21:40,960 --> 01:21:43,679
debt collection leads to more resource

2042
01:21:43,679 --> 01:21:45,760
consumption while low frequency debt

2043
01:21:45,760 --> 01:21:48,560
collection is insufficient for

2044
01:21:48,560 --> 01:21:50,960
for photo nuclear neglection and people

2045
01:21:50,960 --> 01:21:53,760
sometimes may find it hard to

2046
01:21:53,760 --> 01:21:56,320
balance the need between expensive data

2047
01:21:56,320 --> 01:21:59,840
management cost and better fidelity for

2048
01:21:59,840 --> 01:22:01,840
troubleshooting so

2049
01:22:01,840 --> 01:22:04,719
this is exactly what we want to do and

2050
01:22:04,719 --> 01:22:06,400
our main idea

2051
01:22:06,400 --> 01:22:09,040
is to install the adaptive subscription

2052
01:22:09,040 --> 01:22:12,159
policy which is built on top of young

2053
01:22:12,159 --> 01:22:14,239
push mechanism

2054
01:22:14,239 --> 01:22:16,639
and allow the servers to switch to

2055
01:22:16,639 --> 01:22:19,440
different update intervals based on the

2056
01:22:19,440 --> 01:22:21,760
network condition chains

2057
01:22:21,760 --> 01:22:24,400
so about the document status

2058
01:22:24,400 --> 01:22:27,199
this work was first proposed about two

2059
01:22:27,199 --> 01:22:28,560
years ago

2060
01:22:28,560 --> 01:22:31,520
and we have received a lot of comments

2061
01:22:31,520 --> 01:22:33,760
over the past two years

2062
01:22:33,760 --> 01:22:35,679
about two months ago

2063
01:22:35,679 --> 01:22:38,239
the working group adoption call was

2064
01:22:38,239 --> 01:22:40,960
initiated and we have received different

2065
01:22:40,960 --> 01:22:42,719
opinions i think

2066
01:22:42,719 --> 01:22:45,679
we got a lot of support and also

2067
01:22:45,679 --> 01:22:48,880
received concerns and objections from

2068
01:22:48,880 --> 01:22:51,440
andy and the poor and some of the

2069
01:22:51,440 --> 01:22:54,880
objections about the problem statement

2070
01:22:54,880 --> 01:22:57,600
while others is about the evaluation of

2071
01:22:57,600 --> 01:22:59,840
the x-path expression

2072
01:22:59,840 --> 01:23:02,400
like the usage of the watermark

2073
01:23:02,400 --> 01:23:06,800
evaluation of expat external evaluation

2074
01:23:06,800 --> 01:23:09,920
etc so

2075
01:23:10,000 --> 01:23:12,800
the authors investigate these concerns

2076
01:23:12,800 --> 01:23:15,520
very carefully and update the draft

2077
01:23:15,520 --> 01:23:18,400
accordingly which includes the the

2078
01:23:18,400 --> 01:23:21,360
following chance like we have defined

2079
01:23:21,360 --> 01:23:23,760
new rpc errors

2080
01:23:23,760 --> 01:23:26,880
in last itf meeting i think it's rob rob

2081
01:23:26,880 --> 01:23:29,600
has suggested us to define a new rpc

2082
01:23:29,600 --> 01:23:32,560
error to report when a server cannot

2083
01:23:32,560 --> 01:23:36,000
pass the expat syntax defined in the

2084
01:23:36,000 --> 01:23:39,280
x-pass evaluation expression which is

2085
01:23:39,280 --> 01:23:42,239
more complicated than it can handle

2086
01:23:42,239 --> 01:23:45,280
and andy asked us what if multiple

2087
01:23:45,280 --> 01:23:48,800
expats criteria conflict so we have

2088
01:23:48,800 --> 01:23:52,800
defined three rpc errors so far to show

2089
01:23:52,800 --> 01:23:55,679
adaptive subscription unsupported

2090
01:23:55,679 --> 01:23:58,719
and exposed syntax defined in the x-pass

2091
01:23:58,719 --> 01:24:01,520
external evaluation unsupported

2092
01:24:01,520 --> 01:24:04,480
and the multiple expat criteria conflict

2093
01:24:04,480 --> 01:24:06,159
respectively

2094
01:24:06,159 --> 01:24:09,040
and we admit that the watermark leaf

2095
01:24:09,040 --> 01:24:11,760
defined in the module is confusing

2096
01:24:11,760 --> 01:24:14,400
so we have removed this parameter and

2097
01:24:14,400 --> 01:24:16,800
there are also some other questions

2098
01:24:16,800 --> 01:24:20,000
asked by andy like how to evaluate the

2099
01:24:20,000 --> 01:24:21,840
x-path expression

2100
01:24:21,840 --> 01:24:24,960
how to compare a targeted data object in

2101
01:24:24,960 --> 01:24:27,360
a specific list entry

2102
01:24:27,360 --> 01:24:29,600
uh how often does the server checks if

2103
01:24:29,600 --> 01:24:32,960
the period should change

2104
01:24:33,159 --> 01:24:34,800
clarifications

2105
01:24:34,800 --> 01:24:37,520
in the updated draft has been met and i

2106
01:24:37,520 --> 01:24:38,719
will also

2107
01:24:38,719 --> 01:24:43,040
explain some of the later in my slide

2108
01:24:43,040 --> 01:24:46,080
and another progress we have met is that

2109
01:24:46,080 --> 01:24:48,800
we have proposed a hacksaw project in

2110
01:24:48,800 --> 01:24:51,760
this itf meeting to provide some

2111
01:24:51,760 --> 01:24:53,679
implementation results

2112
01:24:53,679 --> 01:24:56,159
we monitor the kpi chains at different

2113
01:24:56,159 --> 01:24:58,560
frequencies of data collection

2114
01:24:58,560 --> 01:25:01,440
and also evaluated the performance of

2115
01:25:01,440 --> 01:25:03,760
adaptive subscription

2116
01:25:03,760 --> 01:25:06,159
so i i will introduce the hacksaw

2117
01:25:06,159 --> 01:25:07,280
project

2118
01:25:07,280 --> 01:25:10,880
briefly and then clarify the open issues

2119
01:25:10,880 --> 01:25:13,840
so this is about the our exome text

2120
01:25:13,840 --> 01:25:17,360
environment setup we use the grpc-based

2121
01:25:17,360 --> 01:25:19,840
telemetry to collect data from

2122
01:25:19,840 --> 01:25:22,320
different access points the network

2123
01:25:22,320 --> 01:25:24,480
devices in our campus

2124
01:25:24,480 --> 01:25:27,040
and we have evaluated the following

2125
01:25:27,040 --> 01:25:29,360
different data collection methods

2126
01:25:29,360 --> 01:25:32,639
a high frequency periodic telemetry a

2127
01:25:32,639 --> 01:25:35,120
low from quickly periodic telemetry and

2128
01:25:35,120 --> 01:25:38,320
an adaptive frequency telemetry

2129
01:25:38,320 --> 01:25:41,199
and for each debt collection method two

2130
01:25:41,199 --> 01:25:44,960
cases are evaluated one is to report the

2131
01:25:44,960 --> 01:25:48,000
rssi values so as to detect the real

2132
01:25:48,000 --> 01:25:48,880
time

2133
01:25:48,880 --> 01:25:51,280
whether roaming events across different

2134
01:25:51,280 --> 01:25:54,480
aps and the other is to stream the bytes

2135
01:25:54,480 --> 01:25:58,000
sent from the ap uplink so as to detect

2136
01:25:58,000 --> 01:25:58,719
the

2137
01:25:58,719 --> 01:26:00,560
potential congestion

2138
01:26:00,560 --> 01:26:03,120
and we also use the elk to collect

2139
01:26:03,120 --> 01:26:08,000
analyze filter and visualize the data

2140
01:26:08,000 --> 01:26:10,719
so in in this case

2141
01:26:10,719 --> 01:26:13,440
uh we tried to

2142
01:26:13,440 --> 01:26:14,400
we have

2143
01:26:14,400 --> 01:26:17,600
collected and aggregated the rssi signal

2144
01:26:17,600 --> 01:26:18,880
data from

2145
01:26:18,880 --> 01:26:22,639
different aps and the usually the issi

2146
01:26:22,639 --> 01:26:24,719
is a measurement of how well the

2147
01:26:24,719 --> 01:26:26,239
terminal devices

2148
01:26:26,239 --> 01:26:29,920
can receive a signal from an ap or a

2149
01:26:29,920 --> 01:26:31,040
router

2150
01:26:31,040 --> 01:26:32,080
so

2151
01:26:32,080 --> 01:26:34,880
usually the default roaming rssi thread

2152
01:26:34,880 --> 01:26:38,159
hold is the negative 65 and if the

2153
01:26:38,159 --> 01:26:40,800
actual signal stress is length is less

2154
01:26:40,800 --> 01:26:43,360
than the threshold the then the terminal

2155
01:26:43,360 --> 01:26:45,840
devices will search another ap to

2156
01:26:45,840 --> 01:26:47,840
attempt roaming

2157
01:26:47,840 --> 01:26:50,400
so in this case we try to figure out

2158
01:26:50,400 --> 01:26:52,800
when a with a roaming event happens

2159
01:26:52,800 --> 01:26:54,560
during the movement of the terminal

2160
01:26:54,560 --> 01:26:55,679
devices

2161
01:26:55,679 --> 01:26:58,239
and also identify

2162
01:26:58,239 --> 01:27:00,320
try to identify continuous signal

2163
01:27:00,320 --> 01:27:01,840
degeneration

2164
01:27:01,840 --> 01:27:04,000
so we tried different methods to collect

2165
01:27:04,000 --> 01:27:06,159
the same metric and the results show

2166
01:27:06,159 --> 01:27:07,120
that

2167
01:27:07,120 --> 01:27:10,159
a very high frequency debt collection at

2168
01:27:10,159 --> 01:27:12,560
a two second interval is easy to

2169
01:27:12,560 --> 01:27:16,159
identify when a roaming event happens

2170
01:27:16,159 --> 01:27:17,440
and

2171
01:27:17,440 --> 01:27:20,239
signal degeneration but

2172
01:27:20,239 --> 01:27:21,520
also

2173
01:27:21,520 --> 01:27:23,920
but it also at the cost app

2174
01:27:23,920 --> 01:27:27,120
at the cost of a greater volume of data

2175
01:27:27,120 --> 01:27:28,000
and

2176
01:27:28,000 --> 01:27:30,400
unsurprisingly a low frequency

2177
01:27:30,400 --> 01:27:33,280
collection at the 13 second interval can

2178
01:27:33,280 --> 01:27:35,920
greatly reduce the data volume but it's

2179
01:27:35,920 --> 01:27:38,320
hard to detect the important events and

2180
01:27:38,320 --> 01:27:39,199
data

2181
01:27:39,199 --> 01:27:41,920
and we also tried adaptive subscription

2182
01:27:41,920 --> 01:27:43,679
which is on the

2183
01:27:43,679 --> 01:27:46,239
right side of the slide

2184
01:27:46,239 --> 01:27:48,800
if the rssi value is less than the

2185
01:27:48,800 --> 01:27:51,440
negative 65 we set the period to be

2186
01:27:51,440 --> 01:27:54,639
every 2 seconds otherwise switch to 13

2187
01:27:54,639 --> 01:27:57,280
seconds at the interval

2188
01:27:57,280 --> 01:27:59,520
so since the condition can also be

2189
01:27:59,520 --> 01:28:01,920
evaluated at the subscriber side the

2190
01:28:01,920 --> 01:28:05,360
subscriber evaluated the received rssi

2191
01:28:05,360 --> 01:28:08,400
value and manage the decision whether it

2192
01:28:08,400 --> 01:28:12,400
needs to modify the period so

2193
01:28:12,400 --> 01:28:14,639
while our proposal is to configure the

2194
01:28:14,639 --> 01:28:17,440
adaptive policy into the server and

2195
01:28:17,440 --> 01:28:19,600
allow the server to switch to different

2196
01:28:19,600 --> 01:28:21,679
intervals automatically so we have

2197
01:28:21,679 --> 01:28:24,320
compared these two different ways and

2198
01:28:24,320 --> 01:28:26,960
the results show that for the first way

2199
01:28:26,960 --> 01:28:28,960
for the condition evaluated by the

2200
01:28:28,960 --> 01:28:30,400
subscriber

2201
01:28:30,400 --> 01:28:33,199
uh the low frequency at a 30-second

2202
01:28:33,199 --> 01:28:35,679
interval that collection prevents the

2203
01:28:35,679 --> 01:28:38,320
subscriber from capturing roaming events

2204
01:28:38,320 --> 01:28:41,040
which lasts only two to four seconds

2205
01:28:41,040 --> 01:28:43,440
because the subscriber can only use the

2206
01:28:43,440 --> 01:28:46,239
data collected every 13 seconds as the

2207
01:28:46,239 --> 01:28:49,600
input of the condition evaluation and it

2208
01:28:49,600 --> 01:28:51,920
will realize to

2209
01:28:51,920 --> 01:28:54,000
increase the frequency only when it

2210
01:28:54,000 --> 01:28:56,960
happens to receive or as

2211
01:28:56,960 --> 01:28:59,920
as i value which is less than the

2212
01:28:59,920 --> 01:29:02,719
threshold but for the the second

2213
01:29:02,719 --> 01:29:04,400
adaptive way

2214
01:29:04,400 --> 01:29:06,560
the server will evaluate the condition

2215
01:29:06,560 --> 01:29:08,480
at the end of each high frequency

2216
01:29:08,480 --> 01:29:10,960
interval which is two seconds in this

2217
01:29:10,960 --> 01:29:13,840
case so it will check whether it needs

2218
01:29:13,840 --> 01:29:16,960
to switch to another frequency every two

2219
01:29:16,960 --> 01:29:18,880
seconds even it's during the low

2220
01:29:18,880 --> 01:29:20,800
frequency streaming now

2221
01:29:20,800 --> 01:29:24,000
so any there is no no important events

2222
01:29:24,000 --> 01:29:26,320
and the data will be missed in our

2223
01:29:26,320 --> 01:29:29,199
proposed way

2224
01:29:29,840 --> 01:29:32,560
another case we have tried is to stream

2225
01:29:32,560 --> 01:29:35,920
the bytes sent from the ap uplink so as

2226
01:29:35,920 --> 01:29:39,040
to detect the possible uplink congestion

2227
01:29:39,040 --> 01:29:41,679
and similarly adaptive frequency debt

2228
01:29:41,679 --> 01:29:43,520
collection is able to

2229
01:29:43,520 --> 01:29:47,360
capture as many traffic but as possible

2230
01:29:47,360 --> 01:29:49,600
while when the monitored operational

2231
01:29:49,600 --> 01:29:51,920
data is normal the frequency can also be

2232
01:29:51,920 --> 01:29:53,280
decreased

2233
01:29:53,280 --> 01:29:54,239
the

2234
01:29:54,239 --> 01:29:55,920
the light charge at the bottom right

2235
01:29:55,920 --> 01:29:58,639
side of the slide we can see that the

2236
01:29:58,639 --> 01:30:01,199
adaptive subscription can greatly reduce

2237
01:30:01,199 --> 01:30:04,239
the amount of transmitted data compared

2238
01:30:04,239 --> 01:30:07,280
with high frequency debt collection

2239
01:30:07,280 --> 01:30:09,760
so this is about the the hacksaw

2240
01:30:09,760 --> 01:30:12,320
projects

2241
01:30:12,560 --> 01:30:15,840
and regarding the issues clarification i

2242
01:30:15,840 --> 01:30:20,560
i think that the very first one is that

2243
01:30:20,560 --> 01:30:22,400
young push supports the adaptive

2244
01:30:22,400 --> 01:30:24,800
subscription already

2245
01:30:24,800 --> 01:30:27,040
yes i think it's true it's true that the

2246
01:30:27,040 --> 01:30:30,000
subscriber can monitor the targeted that

2247
01:30:30,000 --> 01:30:33,120
object change and modify the period for

2248
01:30:33,120 --> 01:30:35,199
an existing subscription

2249
01:30:35,199 --> 01:30:37,520
but we think that it takes time and

2250
01:30:37,520 --> 01:30:40,719
resources for the subscriber to to

2251
01:30:40,719 --> 01:30:43,600
analyze the network status and send the

2252
01:30:43,600 --> 01:30:45,520
modification request

2253
01:30:45,520 --> 01:30:48,159
and it also takes time and resources for

2254
01:30:48,159 --> 01:30:50,719
the server to receive the modification

2255
01:30:50,719 --> 01:30:53,040
and react to it

2256
01:30:53,040 --> 01:30:55,520
and sending modification requests to

2257
01:30:55,520 --> 01:30:58,560
switch to from the low frequency to half

2258
01:30:58,560 --> 01:31:01,360
increases streaming cannot capture all

2259
01:31:01,360 --> 01:31:03,920
important events and data due to

2260
01:31:03,920 --> 01:31:05,679
the low frequency debt collection

2261
01:31:05,679 --> 01:31:09,520
interval as i showed in the rssi signal

2262
01:31:09,520 --> 01:31:11,040
use case

2263
01:31:11,040 --> 01:31:13,920
use case with when it is low in low

2264
01:31:13,920 --> 01:31:16,000
frequency debt collection the subscriber

2265
01:31:16,000 --> 01:31:18,960
can only use the that collected every 13

2266
01:31:18,960 --> 01:31:20,960
seconds as the basis

2267
01:31:20,960 --> 01:31:24,080
input for the condition evaluation and

2268
01:31:24,080 --> 01:31:26,639
such a time interval is very likely to

2269
01:31:26,639 --> 01:31:29,280
cause the loss of important data

2270
01:31:29,280 --> 01:31:32,560
and also the third point is that when

2271
01:31:32,560 --> 01:31:35,440
tens of thousands network devices need

2272
01:31:35,440 --> 01:31:38,080
need to be managed the frequent frequent

2273
01:31:38,080 --> 01:31:42,239
modifications are prone to errors

2274
01:31:42,239 --> 01:31:44,639
then people may ask about

2275
01:31:44,639 --> 01:31:47,040
uh how about the proposed server driven

2276
01:31:47,040 --> 01:31:49,520
method how often does the server check

2277
01:31:49,520 --> 01:31:52,400
if the period should change

2278
01:31:52,400 --> 01:31:53,440
um

2279
01:31:53,440 --> 01:31:55,360
i think it sounds more like an

2280
01:31:55,360 --> 01:31:57,920
implementation decision because the more

2281
01:31:57,920 --> 01:31:59,920
from the condition evaluations are

2282
01:31:59,920 --> 01:32:02,800
performed the faster the server can

2283
01:32:02,800 --> 01:32:05,520
react to the network condition change

2284
01:32:05,520 --> 01:32:08,800
but it's recommended that

2285
01:32:08,800 --> 01:32:10,719
it's recommended to be at the end of

2286
01:32:10,719 --> 01:32:13,120
each high frequency streaming update

2287
01:32:13,120 --> 01:32:14,239
period

2288
01:32:14,239 --> 01:32:16,880
and which means that the data is

2289
01:32:16,880 --> 01:32:19,440
reported at a high frequency only when

2290
01:32:19,440 --> 01:32:22,000
the network suffers but the server

2291
01:32:22,000 --> 01:32:24,800
should periodically detect the condition

2292
01:32:24,800 --> 01:32:27,760
change at this high frequency even its

2293
01:32:27,760 --> 01:32:30,239
reporting data to the collector in a low

2294
01:32:30,239 --> 01:32:32,480
low frequency currently

2295
01:32:32,480 --> 01:32:35,679
and this to reduce the frequency of the

2296
01:32:35,679 --> 01:32:38,719
evaluation the server can also choose to

2297
01:32:38,719 --> 01:32:41,520
check the targeted object change at

2298
01:32:41,520 --> 01:32:44,159
every multiple update periods

2299
01:32:44,159 --> 01:32:47,839
so that's also fine i think

2300
01:32:49,840 --> 01:32:51,199
okay then

2301
01:32:51,199 --> 01:32:52,719
it's about the

2302
01:32:52,719 --> 01:32:56,560
and another issue is about the

2303
01:32:56,560 --> 01:32:59,600
expat instance information

2304
01:32:59,600 --> 01:33:02,880
um yes it's it

2305
01:33:02,880 --> 01:33:05,120
we think that the the question how to

2306
01:33:05,120 --> 01:33:07,679
select no more than when entry if there

2307
01:33:07,679 --> 01:33:11,760
are this instance to handle

2308
01:33:13,280 --> 01:33:16,159
we think that xpath itself can be used

2309
01:33:16,159 --> 01:33:18,880
to identify a particular instance

2310
01:33:18,880 --> 01:33:21,440
and it's true that there may be a desire

2311
01:33:21,440 --> 01:33:24,639
to select an object inside a list

2312
01:33:24,639 --> 01:33:27,840
and but the the expats itself

2313
01:33:27,840 --> 01:33:29,840
supposed to identify a particular

2314
01:33:29,840 --> 01:33:32,159
instance inside a list already which is

2315
01:33:32,159 --> 01:33:36,400
defined as a abbreviated syntax in xpath

2316
01:33:36,400 --> 01:33:41,120
1.0 w3c specification so we don't really

2317
01:33:41,120 --> 01:33:43,360
think this is a problem

2318
01:33:43,360 --> 01:33:46,320
and the last issue is still about the

2319
01:33:46,320 --> 01:33:48,560
expat capability

2320
01:33:48,560 --> 01:33:50,880
the problem statement seems to be

2321
01:33:50,880 --> 01:33:52,639
limited to

2322
01:33:52,639 --> 01:33:55,360
absolute values of specific leaf or leaf

2323
01:33:55,360 --> 01:33:58,560
list and usually at least a rate is

2324
01:33:58,560 --> 01:34:00,480
needed

2325
01:34:00,480 --> 01:34:04,239
well in maybe in itf 111 i can't really

2326
01:34:04,239 --> 01:34:06,960
really remember it but maybe there is

2327
01:34:06,960 --> 01:34:09,120
there used to be a concern about

2328
01:34:09,120 --> 01:34:12,560
arbitrary expat complexity so we think

2329
01:34:12,560 --> 01:34:15,199
in order to reduce the complexity we

2330
01:34:15,199 --> 01:34:16,800
have recommended

2331
01:34:16,800 --> 01:34:19,520
the implementers to use the comparison

2332
01:34:19,520 --> 01:34:22,719
of the specific that object value and

2333
01:34:22,719 --> 01:34:25,440
the threshold but for the server with

2334
01:34:25,440 --> 01:34:28,159
more powerful capabilities to handle a

2335
01:34:28,159 --> 01:34:31,040
complex express syntax we think that

2336
01:34:31,040 --> 01:34:32,960
it's okay to use the mathematic

2337
01:34:32,960 --> 01:34:35,760
operations in the expression

2338
01:34:35,760 --> 01:34:36,880
so it

2339
01:34:36,880 --> 01:34:39,600
so i think the x partition text supports

2340
01:34:39,600 --> 01:34:40,960
it to

2341
01:34:40,960 --> 01:34:42,639
use a red

2342
01:34:42,639 --> 01:34:44,560
we did not really limit that

2343
01:34:44,560 --> 01:34:48,639
capability but our current focus on the

2344
01:34:48,639 --> 01:34:50,480
smart field cases

2345
01:34:50,480 --> 01:34:53,440
which means like the monitor data object

2346
01:34:53,440 --> 01:34:56,719
exists a specific threshold it this is

2347
01:34:56,719 --> 01:34:59,040
the recommended way but we do not really

2348
01:34:59,040 --> 01:35:02,560
limit that capability

2349
01:35:02,960 --> 01:35:05,520
okay so

2350
01:35:05,760 --> 01:35:07,679
any comments and

2351
01:35:07,679 --> 01:35:11,880
questions about this

2352
01:35:21,280 --> 01:35:23,679
yeah go ahead adopt

2353
01:35:23,679 --> 01:35:26,159
uh robinson's cisco uh speak as a

2354
01:35:26,159 --> 01:35:27,199
contributor and i should have say that

2355
01:35:27,199 --> 01:35:28,480
when i was responding to benoit as well

2356
01:35:28,480 --> 01:35:31,679
speak as a contributor so i i still have

2357
01:35:31,679 --> 01:35:33,840
concerns about the sort of complexity

2358
01:35:33,840 --> 01:35:35,280
that we're pushing

2359
01:35:35,280 --> 01:35:37,199
onto the devices to do this sort of

2360
01:35:37,199 --> 01:35:38,880
continuous monitoring

2361
01:35:38,880 --> 01:35:42,719
and the xpath evaluation um it just

2362
01:35:42,719 --> 01:35:44,480
feels to me like it's a very

2363
01:35:44,480 --> 01:35:46,320
computationally expensive solution to

2364
01:35:46,320 --> 01:35:48,320
this problem so i think one of the

2365
01:35:48,320 --> 01:35:49,760
things that i'd be interested in and

2366
01:35:49,760 --> 01:35:51,679
maybe the other presentation on the sort

2367
01:35:51,679 --> 01:35:54,159
of use cases if that's related to this

2368
01:35:54,159 --> 01:35:56,880
might be interesting is is

2369
01:35:56,880 --> 01:35:59,199
how many cases do we actually have of

2370
01:35:59,199 --> 01:36:01,760
solving this generically are there a few

2371
01:36:01,760 --> 01:36:04,159
point cases that we're trying to solve

2372
01:36:04,159 --> 01:36:05,920
and would it be better to build

2373
01:36:05,920 --> 01:36:08,239
solutions and concrete data models to

2374
01:36:08,239 --> 01:36:10,880
solve those particular cases rather than

2375
01:36:10,880 --> 01:36:12,880
building a generic infrastructure here

2376
01:36:12,880 --> 01:36:13,760
so

2377
01:36:13,760 --> 01:36:15,199
i guess what i'm saying is i don't know

2378
01:36:15,199 --> 01:36:16,639
exactly what you were monitoring there

2379
01:36:16,639 --> 01:36:18,880
in terms of your your site but could you

2380
01:36:18,880 --> 01:36:20,480
build a data model that does that

2381
01:36:20,480 --> 01:36:23,679
sampling at a high rate and

2382
01:36:23,679 --> 01:36:25,679
build up either aggregated statistics or

2383
01:36:25,679 --> 01:36:27,360
something with a decay

2384
01:36:27,360 --> 01:36:29,679
and then you can monitor that a high

2385
01:36:29,679 --> 01:36:31,199
frequency and then and leave it at the

2386
01:36:31,199 --> 01:36:33,679
server to respond so i still have

2387
01:36:33,679 --> 01:36:35,840
questions as to what data you're trying

2388
01:36:35,840 --> 01:36:38,320
to capture do you actually need all this

2389
01:36:38,320 --> 01:36:40,239
data at a high rate or are you just

2390
01:36:40,239 --> 01:36:42,400
trying to pick out when

2391
01:36:42,400 --> 01:36:44,320
these particular events are occurring

2392
01:36:44,320 --> 01:36:45,760
more generally

2393
01:36:45,760 --> 01:36:47,840
and and hence if you had a summarized

2394
01:36:47,840 --> 01:36:50,000
value in the data model that might might

2395
01:36:50,000 --> 01:36:52,159
give you the same solution with far less

2396
01:36:52,159 --> 01:36:54,960
complexity

2397
01:36:55,119 --> 01:36:57,759
that's my comments

2398
01:36:58,400 --> 01:37:01,600
okay well for your your first question

2399
01:37:01,600 --> 01:37:02,880
um

2400
01:37:02,880 --> 01:37:06,480
i think i have the slide to

2401
01:37:06,480 --> 01:37:09,280
yeah for the adaptive subscription the

2402
01:37:09,280 --> 01:37:11,520
condition can evaluated at the

2403
01:37:11,520 --> 01:37:14,639
subscriber side and also at the server

2404
01:37:14,639 --> 01:37:16,239
side and

2405
01:37:16,239 --> 01:37:17,520
if we

2406
01:37:17,520 --> 01:37:20,560
want to leave the complexity with the

2407
01:37:20,560 --> 01:37:22,639
subscriber then we

2408
01:37:22,639 --> 01:37:25,119
it's maybe we have some issues to

2409
01:37:25,119 --> 01:37:27,040
collect the

2410
01:37:27,040 --> 01:37:28,960
enough data to

2411
01:37:28,960 --> 01:37:31,600
identify the important events and and

2412
01:37:31,600 --> 01:37:33,199
data and

2413
01:37:33,199 --> 01:37:36,159
and for the the second where the

2414
01:37:36,159 --> 01:37:39,119
adaptive subscription evaluated the

2415
01:37:39,119 --> 01:37:41,520
condition at the server side we can

2416
01:37:41,520 --> 01:37:43,520
collect enough data but

2417
01:37:43,520 --> 01:37:45,040
yes we did

2418
01:37:45,040 --> 01:37:47,920
add some complexity to the server we

2419
01:37:47,920 --> 01:37:49,920
don't really have a

2420
01:37:49,920 --> 01:37:52,080
uh

2421
01:37:52,159 --> 01:37:54,719
performance statistics about the network

2422
01:37:54,719 --> 01:37:57,440
devices load to implement this adaptive

2423
01:37:57,440 --> 01:38:00,159
subscription but the results show that

2424
01:38:00,159 --> 01:38:03,840
it seems okay because it the server only

2425
01:38:03,840 --> 01:38:05,360
adds some

2426
01:38:05,360 --> 01:38:06,800
some if then

2427
01:38:06,800 --> 01:38:10,000
logical programming codes on the

2428
01:38:10,000 --> 01:38:13,119
adaptive subscription and there don't

2429
01:38:13,119 --> 01:38:14,800
really have so much load than we

2430
01:38:14,800 --> 01:38:17,360
expected and also

2431
01:38:17,360 --> 01:38:18,719
about the

2432
01:38:18,719 --> 01:38:21,600
the stream data in this case with the

2433
01:38:21,600 --> 01:38:26,000
evaluation data is the issi signal data

2434
01:38:26,000 --> 01:38:29,040
which is defined as a leaf better node

2435
01:38:29,040 --> 01:38:30,400
in our

2436
01:38:30,400 --> 01:38:33,440
the module in the draft appendix section

2437
01:38:33,440 --> 01:38:38,159
so the rssi is the the stream data and

2438
01:38:38,159 --> 01:38:40,960
and it's also the evaluated data so this

2439
01:38:40,960 --> 01:38:42,159
is

2440
01:38:42,159 --> 01:38:44,560
the the filtered about the

2441
01:38:44,560 --> 01:38:47,199
these and i i think that for adaptive

2442
01:38:47,199 --> 01:38:50,320
subscription uh the rssi signal data

2443
01:38:50,320 --> 01:38:52,800
streaming to identify the terminal

2444
01:38:52,800 --> 01:38:56,159
devices roaming events maybe is the most

2445
01:38:56,159 --> 01:38:56,960
uh

2446
01:38:56,960 --> 01:38:59,119
solid use case for

2447
01:38:59,119 --> 01:39:02,000
for for for this draft and i also know

2448
01:39:02,000 --> 01:39:04,239
that there is another draft

2449
01:39:04,239 --> 01:39:07,520
of a dedicated discussion about the use

2450
01:39:07,520 --> 01:39:10,080
case and the problem statement about

2451
01:39:10,080 --> 01:39:12,400
adaptive subscription but i

2452
01:39:12,400 --> 01:39:15,760
uh we can we we can see that uh

2453
01:39:15,760 --> 01:39:18,480
uh um i i think that it seems more like

2454
01:39:18,480 --> 01:39:20,080
to focus on the

2455
01:39:20,080 --> 01:39:21,840
data collection

2456
01:39:21,840 --> 01:39:23,760
the traffic debt collection but our

2457
01:39:23,760 --> 01:39:27,280
focus is about the the young push

2458
01:39:27,280 --> 01:39:30,719
mechanism which is to stream data from a

2459
01:39:30,719 --> 01:39:32,800
particular young data store

2460
01:39:32,800 --> 01:39:35,119
so but we can see that whether the use

2461
01:39:35,119 --> 01:39:37,920
cases dropped can fit in

2462
01:39:37,920 --> 01:39:40,800
some use cases in this in this one we

2463
01:39:40,800 --> 01:39:42,159
can see that

2464
01:39:42,159 --> 01:39:44,159
so so just to

2465
01:39:44,159 --> 01:39:47,040
to concrete examples i could think of is

2466
01:39:47,040 --> 01:39:48,639
for like interface

2467
01:39:48,639 --> 01:39:51,280
statistics um often

2468
01:39:51,280 --> 01:39:52,960
i don't know the idf yangon has this

2469
01:39:52,960 --> 01:39:55,280
don't think it does but other ones um

2470
01:39:55,280 --> 01:39:56,560
other vendors have this is you have like

2471
01:39:56,560 --> 01:39:58,000
a rate calculation that's telling you

2472
01:39:58,000 --> 01:40:00,080
what the current load is on that

2473
01:40:00,080 --> 01:40:02,320
interface and that decays over time so

2474
01:40:02,320 --> 01:40:04,960
it's giving you sort of a point

2475
01:40:04,960 --> 01:40:07,040
load value and you could potentially

2476
01:40:07,040 --> 01:40:09,440
sample that a reasonable frequency and

2477
01:40:09,440 --> 01:40:12,719
an another case i can think of um is to

2478
01:40:12,719 --> 01:40:14,960
do with like interface flaps if you

2479
01:40:14,960 --> 01:40:17,600
monitor the the link layer flaps at the

2480
01:40:17,600 --> 01:40:18,719
very low

2481
01:40:18,719 --> 01:40:21,040
hardware layers you may be getting

2482
01:40:21,040 --> 01:40:23,119
thousands of interrupts per second

2483
01:40:23,119 --> 01:40:24,400
coming through but you don't want to

2484
01:40:24,400 --> 01:40:26,159
notify all of those

2485
01:40:26,159 --> 01:40:28,239
instead you could notify a counter of

2486
01:40:28,239 --> 01:40:30,400
how many flaps have occurred each point

2487
01:40:30,400 --> 01:40:32,239
of time so you can still you can still

2488
01:40:32,239 --> 01:40:33,280
spot

2489
01:40:33,280 --> 01:40:35,360
when these flaps are occurring and you

2490
01:40:35,360 --> 01:40:37,360
can still spot it occurring at high

2491
01:40:37,360 --> 01:40:38,880
frequency or not but you don't

2492
01:40:38,880 --> 01:40:41,440
necessarily have to notify every single

2493
01:40:41,440 --> 01:40:43,119
flap that occurs so you're reducing the

2494
01:40:43,119 --> 01:40:45,199
amount of data you're pushing off the

2495
01:40:45,199 --> 01:40:47,678
device

2496
01:40:48,719 --> 01:40:51,520
okay thank you i i i will look into that

2497
01:40:51,520 --> 01:40:52,639
and

2498
01:40:52,639 --> 01:40:54,800
and try to give some more implementation

2499
01:40:54,800 --> 01:40:56,719
results about their mission the use

2500
01:40:56,719 --> 01:40:58,080
cases

2501
01:40:58,080 --> 01:40:59,600
thank you

2502
01:40:59,600 --> 01:41:01,840
yeah

2503
01:41:03,040 --> 01:41:07,520
okay if there are no other comments um

2504
01:41:07,520 --> 01:41:10,000
suddenly there is interest in

2505
01:41:10,000 --> 01:41:10,800
the

2506
01:41:10,800 --> 01:41:13,119
use case draft i think we would have

2507
01:41:13,119 --> 01:41:16,159
really liked to hear that today but

2508
01:41:16,159 --> 01:41:17,280
um

2509
01:41:17,280 --> 01:41:18,960
considering the author is not here to

2510
01:41:18,960 --> 01:41:20,639
talk about it

2511
01:41:20,639 --> 01:41:23,520
one other way that uh

2512
01:41:23,520 --> 01:41:25,040
actually

2513
01:41:25,040 --> 01:41:26,560
i'm sorry

2514
01:41:26,560 --> 01:41:29,600
um i did receive a private chat message

2515
01:41:29,600 --> 01:41:32,880
from xinwu who says that

2516
01:41:32,880 --> 01:41:36,400
the presenter xiaomin will be

2517
01:41:36,400 --> 01:41:38,320
presenting or joining

2518
01:41:38,320 --> 01:41:41,280
shortly to present

2519
01:41:41,360 --> 01:41:43,280
imminently i'm hoping

2520
01:41:43,280 --> 01:41:45,440
so this may still happen

2521
01:41:45,440 --> 01:41:47,679
um

2522
01:41:47,679 --> 01:41:48,400
so

2523
01:41:48,400 --> 01:41:50,960
in the meantime you want to go ahead and

2524
01:41:50,960 --> 01:41:52,320
propose

2525
01:41:52,320 --> 01:41:55,519
a poll on

2526
01:41:55,679 --> 01:41:57,760
okay shin says he's online

2527
01:41:57,760 --> 01:41:59,520
no i want to hold off and doing the poll

2528
01:41:59,520 --> 01:42:02,000
until after we have this other

2529
01:42:02,000 --> 01:42:04,159
presentation if possible because it may

2530
01:42:04,159 --> 01:42:07,360
it may answer some questions

2531
01:42:07,360 --> 01:42:11,119
um but i don't see shin

2532
01:42:11,119 --> 01:42:14,119
yet

2533
01:42:15,119 --> 01:42:16,960
i'm probably saying the wrong

2534
01:42:16,960 --> 01:42:19,840
shout i'm saying

2535
01:42:20,719 --> 01:42:22,639
hello

2536
01:42:22,639 --> 01:42:24,080
hello

2537
01:42:24,080 --> 01:42:25,520
yeah can you hear me

2538
01:42:25,520 --> 01:42:27,760
i hear you jim

2539
01:42:27,760 --> 01:42:28,800
yeah this is

2540
01:42:28,800 --> 01:42:30,800
actually i do see uh

2541
01:42:30,800 --> 01:42:33,119
online and i did talk with him and he

2542
01:42:33,119 --> 01:42:35,759
will present

2543
01:42:38,719 --> 01:42:42,080
is he in the neck of

2544
01:42:54,159 --> 01:42:56,000
okay i'm gonna cancel this presentation

2545
01:42:56,000 --> 01:42:59,920
and bring up the next presentation then

2546
01:43:02,239 --> 01:43:07,879
xiaomi can you queue up to be a speaker

2547
01:43:12,800 --> 01:43:16,159
you have to raise your hand

2548
01:43:22,639 --> 01:43:24,400
all right charming uh

2549
01:43:24,400 --> 01:43:27,280
if you see your name on the top okay

2550
01:43:27,280 --> 01:43:29,040
you see that

2551
01:43:29,040 --> 01:43:31,760
yes okay

2552
01:43:34,000 --> 01:43:36,320
hello yes hi we hear you

2553
01:43:36,320 --> 01:43:38,159
i'm gonna oh

2554
01:43:38,159 --> 01:43:39,920
i'm going to pass control slide control

2555
01:43:39,920 --> 01:43:42,159
to you you can increment uh the slides

2556
01:43:42,159 --> 01:43:43,920
between the red or left right mouse

2557
01:43:43,920 --> 01:43:46,320
buttons

2558
01:43:46,560 --> 01:43:47,520
okay

2559
01:43:47,520 --> 01:43:49,760
let me uh let me introduce

2560
01:43:49,760 --> 01:43:50,840
this

2561
01:43:50,840 --> 01:43:53,679
draft problem statement and the use

2562
01:43:53,679 --> 01:43:56,320
cases of adaptive traffic that con

2563
01:43:56,320 --> 01:43:58,320
collections

2564
01:43:58,320 --> 01:44:01,599
next one list

2565
01:44:03,119 --> 01:44:04,960
you should be able to hit your right

2566
01:44:04,960 --> 01:44:06,800
mouse button or right keyboard button

2567
01:44:06,800 --> 01:44:09,600
and increment it

2568
01:44:09,760 --> 01:44:12,800
okay please please turn to

2569
01:44:12,800 --> 01:44:15,679
the left kg

2570
01:44:16,480 --> 01:44:17,840
okay i'm going to take back slide

2571
01:44:17,840 --> 01:44:20,320
control and just tell me when you need

2572
01:44:20,320 --> 01:44:23,519
to have the slides incremented

2573
01:44:25,280 --> 01:44:27,040
sorry about that

2574
01:44:27,040 --> 01:44:30,560
okay next slide go ahead

2575
01:44:32,960 --> 01:44:36,639
oh okay okay

2576
01:44:37,400 --> 01:44:40,719
motivation and objective

2577
01:44:40,719 --> 01:44:42,000
motivation

2578
01:44:42,000 --> 01:44:44,239
idea career network can lead to

2579
01:44:44,239 --> 01:44:46,400
providing real-time traffic visibility

2580
01:44:46,400 --> 01:44:48,560
to have network upgrades

2581
01:44:48,560 --> 01:44:50,480
quickly and

2582
01:44:50,480 --> 01:44:52,080
accurately look at the network

2583
01:44:52,080 --> 01:44:54,480
congestion and packed loss

2584
01:44:54,480 --> 01:44:57,119
make timeline pass adjustment for

2585
01:44:57,119 --> 01:44:59,280
deterministic services to avoid

2586
01:44:59,280 --> 01:45:00,880
congestion

2587
01:45:00,880 --> 01:45:03,760
as this trendstyle assembly

2588
01:45:03,760 --> 01:45:07,520
i mean second intervals will generate

2589
01:45:07,520 --> 01:45:09,520
generate a constant variable amount of

2590
01:45:09,520 --> 01:45:12,159
data which might claim too much

2591
01:45:12,159 --> 01:45:14,800
transport by the way's resource

2592
01:45:14,800 --> 01:45:16,880
will be load the service for get

2593
01:45:16,880 --> 01:45:22,080
collection storage knowledge and lab

2594
01:45:22,960 --> 01:45:24,400
release

2595
01:45:24,400 --> 01:45:25,840
objective

2596
01:45:25,840 --> 01:45:28,639
explore the adaptive traffic

2597
01:45:28,639 --> 01:45:31,280
data collection mechanism so as to

2598
01:45:31,280 --> 01:45:33,440
capture real-time network state at

2599
01:45:33,440 --> 01:45:37,839
meaning minimal resource consumption

2600
01:45:38,080 --> 01:45:39,040
please

2601
01:45:39,040 --> 01:45:42,440
next page

2602
01:45:55,119 --> 01:45:57,360
okay

2603
01:45:57,360 --> 01:45:59,920
problem statement

2604
01:45:59,920 --> 01:46:02,239
if network use of

2605
01:46:02,239 --> 01:46:04,960
traffic-based calculators tickets after

2606
01:46:04,960 --> 01:46:06,159
a long time

2607
01:46:06,159 --> 01:46:08,960
operates have obtained obtained traffic

2608
01:46:08,960 --> 01:46:11,360
vicinity from ms

2609
01:46:11,360 --> 01:46:13,600
which cannot reflect this kind of base

2610
01:46:13,600 --> 01:46:15,760
calculations

2611
01:46:15,760 --> 01:46:18,400
first to observe it observing the

2612
01:46:18,400 --> 01:46:20,639
evolution network traffic

2613
01:46:20,639 --> 01:46:23,040
my excuse the calculator's tickets are

2614
01:46:23,040 --> 01:46:27,199
for traffic based game direct smt is

2615
01:46:27,199 --> 01:46:29,840
widely employed to collect

2616
01:46:29,840 --> 01:46:31,920
network traffic at five minutes

2617
01:46:31,920 --> 01:46:33,440
intervals

2618
01:46:33,440 --> 01:46:36,239
second in spite of low

2619
01:46:36,239 --> 01:46:39,679
links usage such as setting

2620
01:46:39,679 --> 01:46:43,520
to 14 percent final base utilization

2621
01:46:43,520 --> 01:46:44,639
mailing

2622
01:46:44,639 --> 01:46:47,040
billing time plans have still been

2623
01:46:47,040 --> 01:46:50,880
received about four k in delivery

2624
01:46:50,880 --> 01:46:54,400
application based the sense same

2625
01:46:54,400 --> 01:46:55,920
sensitivity

2626
01:46:55,920 --> 01:46:59,199
of the delay and the pipeline loss

2627
01:46:59,199 --> 01:47:01,760
large quality of laboratory data and

2628
01:47:01,760 --> 01:47:04,560
evolutionary object medicare diet and

2629
01:47:04,560 --> 01:47:08,719
microbes but belong below lab because

2630
01:47:08,719 --> 01:47:11,199
frequently he operates calorie little

2631
01:47:11,199 --> 01:47:14,080
workers such as ip brain

2632
01:47:14,080 --> 01:47:17,280
antimatter measuring quality little work

2633
01:47:17,280 --> 01:47:20,639
actually backbone little work and

2634
01:47:20,639 --> 01:47:21,440
in the

2635
01:47:21,440 --> 01:47:23,760
data centers

2636
01:47:23,760 --> 01:47:25,840
families of television television

2637
01:47:25,840 --> 01:47:28,239
indicates we can capture their company

2638
01:47:28,239 --> 01:47:31,040
that's packets of macrophage traffic

2639
01:47:31,040 --> 01:47:32,080
however

2640
01:47:32,080 --> 01:47:35,040
it is an impractical to gain

2641
01:47:35,040 --> 01:47:37,760
the real-time traffic visibility at cost

2642
01:47:37,760 --> 01:47:41,360
of persisting this time same thing at

2643
01:47:41,360 --> 01:47:44,880
milliseconds in the wales

2644
01:47:45,040 --> 01:47:49,400
please the next page

2645
01:47:59,760 --> 01:48:03,840
scenarios of effective traffic that

2646
01:48:03,840 --> 01:48:06,639
use case one

2647
01:48:08,639 --> 01:48:10,960
dimensional real-time portrait of

2648
01:48:10,960 --> 01:48:13,840
interface traffic characteristics

2649
01:48:13,840 --> 01:48:16,080
real-time traffic visibility can help

2650
01:48:16,080 --> 01:48:18,480
operate but understand

2651
01:48:18,480 --> 01:48:22,400
network performance so as to achieve sla

2652
01:48:22,400 --> 01:48:25,440
guarantees for latest and low and lost

2653
01:48:25,440 --> 01:48:26,239
in

2654
01:48:26,239 --> 01:48:29,520
sensitive sensitive applications

2655
01:48:29,520 --> 01:48:32,960
i'm telling the hardship and genuine

2656
01:48:32,960 --> 01:48:35,600
characteristics of interface traffic is

2657
01:48:35,600 --> 01:48:38,000
also a basic requirement for the

2658
01:48:38,000 --> 01:48:40,719
statistical multiplexing model of iit

2659
01:48:40,719 --> 01:48:44,719
network which is of great significance

2660
01:48:44,719 --> 01:48:47,840
for traffic prediction network planning

2661
01:48:47,840 --> 01:48:49,520
to work habit

2662
01:48:49,520 --> 01:48:53,199
capacity expansion and the network

2663
01:48:53,199 --> 01:48:56,239
optimization and so on

2664
01:48:56,239 --> 01:48:59,119
it is essential to expand the

2665
01:48:59,119 --> 01:49:01,040
adaptive traffic data collection

2666
01:49:01,040 --> 01:49:03,440
techniques to depict

2667
01:49:03,440 --> 01:49:04,480
not

2668
01:49:04,480 --> 01:49:05,440
multi

2669
01:49:05,440 --> 01:49:07,679
dimensional real-time portrait of

2670
01:49:07,679 --> 01:49:08,880
interface

2671
01:49:08,880 --> 01:49:11,440
traffic categoristic is at a

2672
01:49:11,440 --> 01:49:15,719
minimum resource consumption

2673
01:49:16,480 --> 01:49:20,199
next page please

2674
01:49:28,639 --> 01:49:30,960
this gets to

2675
01:49:30,960 --> 01:49:32,560
make the best traffic

2676
01:49:32,560 --> 01:49:35,920
detectors not the best traffic as a

2677
01:49:35,920 --> 01:49:37,360
intense

2678
01:49:37,360 --> 01:49:39,840
instantaneous congestion phenomena

2679
01:49:39,840 --> 01:49:42,719
occurring like united kingdom network

2680
01:49:42,719 --> 01:49:44,800
will cause political

2681
01:49:44,800 --> 01:49:48,159
detention and impact laws which will

2682
01:49:48,159 --> 01:49:50,719
stimulate the effect accurately of late

2683
01:49:50,719 --> 01:49:54,000
transcendent lost sentence applications

2684
01:49:54,000 --> 01:49:56,639
the ability of detecting market-based

2685
01:49:56,639 --> 01:49:59,520
traffic of inter interface where network

2686
01:49:59,520 --> 01:50:02,800
operates quickly and equally equitably

2687
01:50:02,800 --> 01:50:04,560
located network

2688
01:50:04,560 --> 01:50:07,040
tangency and the factory loss and make

2689
01:50:07,040 --> 01:50:09,280
timely has adjustment for for

2690
01:50:09,280 --> 01:50:12,560
deterministic delay services in order to

2691
01:50:12,560 --> 01:50:15,520
avoid the congested load and links

2692
01:50:15,520 --> 01:50:17,840
triggered by the events such as packet

2693
01:50:17,840 --> 01:50:18,960
loss

2694
01:50:18,960 --> 01:50:21,280
cure depends beyond the

2695
01:50:21,280 --> 01:50:23,599
threshold which is the detective

2696
01:50:23,599 --> 01:50:26,400
families assembly sector must be

2697
01:50:26,400 --> 01:50:29,280
timing turning to milliseconds to

2698
01:50:29,280 --> 01:50:33,440
capture a magnifier of interface

2699
01:50:36,800 --> 01:50:39,840
the next page please

2700
01:50:48,320 --> 01:50:51,840
use cases please congestion event

2701
01:50:51,840 --> 01:50:56,560
for deterministic and domestic services

2702
01:50:56,560 --> 01:50:58,480
the real-time check visibility is based

2703
01:50:58,480 --> 01:51:02,159
on the adaptive traffic that collection

2704
01:51:02,159 --> 01:51:05,119
techniques can accurately predict the

2705
01:51:05,119 --> 01:51:07,760
time congestion and quickly have shared

2706
01:51:07,760 --> 01:51:09,960
their

2707
01:51:09,960 --> 01:51:12,400
instantaneous congestion

2708
01:51:12,400 --> 01:51:14,560
of inter interface

2709
01:51:14,560 --> 01:51:16,159
and millions of delivery time traffic

2710
01:51:16,159 --> 01:51:19,679
visibility the automatic

2711
01:51:19,679 --> 01:51:22,239
of optimization tool brings up your ai

2712
01:51:22,239 --> 01:51:24,960
can make timely path adjustment for case

2713
01:51:24,960 --> 01:51:27,199
type flows

2714
01:51:27,199 --> 01:51:31,480
the next page please

2715
01:51:41,119 --> 01:51:43,199
this case four

2716
01:51:43,199 --> 01:51:45,119
parts can imagine based on adaptive

2717
01:51:45,119 --> 01:51:48,159
traffic assemblies

2718
01:51:48,159 --> 01:51:50,639
adaptive approach can be used based on

2719
01:51:50,639 --> 01:51:53,199
the network condition to analytically

2720
01:51:53,199 --> 01:51:56,000
adjust the sampling threat

2721
01:51:56,000 --> 01:51:58,639
in low mail network stated a low

2722
01:51:58,639 --> 01:52:00,960
sampling rate is enough to develop

2723
01:52:00,960 --> 01:52:03,679
reflect network performance in case of

2724
01:52:03,679 --> 01:52:06,800
network congestion family just practiced

2725
01:52:06,800 --> 01:52:10,080
something related at a very high level

2726
01:52:10,080 --> 01:52:12,000
so as soon as to

2727
01:52:12,000 --> 01:52:14,480
acquire real-time measurement data such

2728
01:52:14,480 --> 01:52:18,638
as latency data and packet loss

2729
01:52:19,040 --> 01:52:22,159
the next page please

2730
01:52:25,599 --> 01:52:27,119
next steps

2731
01:52:27,119 --> 01:52:29,840
solid state conveys and refine the draft

2732
01:52:29,840 --> 01:52:31,280
accordingly

2733
01:52:31,280 --> 01:52:34,239
population will overcome

2734
01:52:34,239 --> 01:52:37,920
possible implementation and verification

2735
01:52:37,920 --> 01:52:42,599
as well thank you thank you

2736
01:52:51,679 --> 01:52:55,599
does anybody have comments questions

2737
01:52:55,840 --> 01:52:57,280
sorry

2738
01:52:57,280 --> 01:52:58,719
no i was saying the same thing that's

2739
01:52:58,719 --> 01:53:01,040
perfect

2740
01:53:01,920 --> 01:53:05,119
yes benoit please

2741
01:53:08,159 --> 01:53:10,239
so vanuatu please so thank you for

2742
01:53:10,239 --> 01:53:12,880
coming to the itf to express your

2743
01:53:12,880 --> 01:53:15,599
problems now something

2744
01:53:15,599 --> 01:53:18,080
so when i read the slide it seems it's

2745
01:53:18,080 --> 01:53:20,960
mainly about data plane monitoring

2746
01:53:20,960 --> 01:53:23,280
right and about and sometimes i mean it

2747
01:53:23,280 --> 01:53:24,159
would be

2748
01:53:24,159 --> 01:53:26,400
easier for me to know if we speak about

2749
01:53:26,400 --> 01:53:29,679
data plane and then like in ban oem like

2750
01:53:29,679 --> 01:53:31,360
what you described in the last use case

2751
01:53:31,360 --> 01:53:33,199
or if you speak about flows if you speak

2752
01:53:33,199 --> 01:53:35,440
about something else as opposed to you

2753
01:53:35,440 --> 01:53:36,719
know

2754
01:53:36,719 --> 01:53:40,760
uh just telemetry

2755
01:53:41,280 --> 01:53:44,480
periodic updates this is where

2756
01:53:44,480 --> 01:53:47,280
the use case should be likely more

2757
01:53:47,280 --> 01:53:51,000
structured i believe

2758
01:54:00,320 --> 01:54:02,639
all right thank you um i don't believe

2759
01:54:02,639 --> 01:54:04,800
there are any other comments

2760
01:54:04,800 --> 01:54:07,520
so just uh so we did have to take these

2761
01:54:07,520 --> 01:54:10,239
last two presentations out of order

2762
01:54:10,239 --> 01:54:12,719
the idea was that this presentation was

2763
01:54:12,719 --> 01:54:15,040
going to provide the use cases

2764
01:54:15,040 --> 01:54:17,440
that would help

2765
01:54:17,440 --> 01:54:21,119
justify the potential adoption of the

2766
01:54:21,119 --> 01:54:22,800
adaptive subscription draft which was

2767
01:54:22,800 --> 01:54:25,119
the the previous presentation

2768
01:54:25,119 --> 01:54:26,159
um

2769
01:54:26,159 --> 01:54:27,920
but now that we have

2770
01:54:27,920 --> 01:54:30,480
had this presentation i know

2771
01:54:30,480 --> 01:54:32,800
uh so it required i know there were some

2772
01:54:32,800 --> 01:54:35,040
objections that were raised previously

2773
01:54:35,040 --> 01:54:36,480
on list

2774
01:54:36,480 --> 01:54:39,440
by andy and also per

2775
01:54:39,440 --> 01:54:41,080
with regards to

2776
01:54:41,080 --> 01:54:42,560
[Music]

2777
01:54:42,560 --> 01:54:44,639
concerns with the adapter's description

2778
01:54:44,639 --> 01:54:45,679
draft

2779
01:54:45,679 --> 01:54:48,719
and andy's not online i don't know

2780
01:54:48,719 --> 01:54:51,119
i think i see her if um

2781
01:54:51,119 --> 01:54:54,560
if the use case or other um oh jan is

2782
01:54:54,560 --> 01:54:56,159
joining the queue perfect

2783
01:54:56,159 --> 01:54:59,559
go ahead and john

2784
01:55:04,080 --> 01:55:07,280
yes jan please go ahead

2785
01:55:10,560 --> 01:55:12,960
make sure

2786
01:55:13,679 --> 01:55:16,000
uh yeah perry is not able to speak at

2787
01:55:16,000 --> 01:55:17,920
this moment but we are working together

2788
01:55:17,920 --> 01:55:19,599
so

2789
01:55:19,599 --> 01:55:21,199
i think it's perhaps better to discuss

2790
01:55:21,199 --> 01:55:23,840
the details on the list if it's possible

2791
01:55:23,840 --> 01:55:25,040
but

2792
01:55:25,040 --> 01:55:26,880
i think many of the

2793
01:55:26,880 --> 01:55:29,040
concerns we have are still still

2794
01:55:29,040 --> 01:55:31,440
relevant

2795
01:55:31,440 --> 01:55:33,119
okay

2796
01:55:33,119 --> 01:55:35,440
all right thank you uh so i do want to

2797
01:55:35,440 --> 01:55:38,800
put a show of hands

2798
01:55:38,800 --> 01:55:40,560
pull

2799
01:55:40,560 --> 01:55:42,400
to the working group

2800
01:55:42,400 --> 01:55:46,360
it's on screen now

2801
01:56:26,560 --> 01:56:28,719
okay i think we've gotten i don't see

2802
01:56:28,719 --> 01:56:33,520
any new oh there's one more participant

2803
01:56:34,960 --> 01:56:36,480
all right i'm gonna

2804
01:56:36,480 --> 01:56:39,119
end the poll now because it's

2805
01:56:39,119 --> 01:56:41,520
pretty pretty much good enough um

2806
01:56:41,520 --> 01:56:45,520
so we did we we just got 24

2807
01:56:45,520 --> 01:56:47,760
participants in that

2808
01:56:47,760 --> 01:56:49,679
poll um

2809
01:56:49,679 --> 01:56:52,560
it's about half half in terms of whether

2810
01:56:52,560 --> 01:56:54,239
or not the working group should

2811
01:56:54,239 --> 01:56:57,599
you know continue um looking at adopting

2812
01:56:57,599 --> 01:57:01,599
this as a proposed standard versus um

2813
01:57:01,599 --> 01:57:04,159
an experimental message

2814
01:57:04,159 --> 01:57:07,040
uh sorry experimental um draft

2815
01:57:07,040 --> 01:57:09,280
and uh so so again this is not an

2816
01:57:09,280 --> 01:57:11,840
adoption call on either on either front

2817
01:57:11,840 --> 01:57:13,920
but uh it looks like we'll hold the door

2818
01:57:13,920 --> 01:57:16,960
open uh longer for the possibility of it

2819
01:57:16,960 --> 01:57:19,679
being proposed standard i think as jan

2820
01:57:19,679 --> 01:57:21,040
just mentioned

2821
01:57:21,040 --> 01:57:24,239
more discussion on list needs to occur

2822
01:57:24,239 --> 01:57:26,480
to try to resolve the concerns of those

2823
01:57:26,480 --> 01:57:28,480
that have raised them

2824
01:57:28,480 --> 01:57:29,360
and

2825
01:57:29,360 --> 01:57:31,440
i think that's it for for that

2826
01:57:31,440 --> 01:57:33,119
presentation

2827
01:57:33,119 --> 01:57:35,520
so thank you very much everyone

2828
01:57:35,520 --> 01:57:37,520
and also i believe that's the end of the

2829
01:57:37,520 --> 01:57:39,840
meeting

2830
01:57:42,960 --> 01:57:46,239
we're at the end of our agenda now

2831
01:57:46,239 --> 01:57:49,598
yes with three minutes to spare

2832
01:57:50,080 --> 01:57:51,440
all right anyway

2833
01:57:51,440 --> 01:57:54,239
thanks everyone

2834
01:57:55,520 --> 01:57:57,199
yes thank you everyone for joining the

2835
01:57:57,199 --> 01:58:00,480
necron uh 113 session

2836
01:58:00,480 --> 01:58:02,159
wish i could be there in person

2837
01:58:02,159 --> 01:58:05,040
see you in philadelphia right

2838
01:58:05,040 --> 01:58:06,800
that is correct

2839
01:58:06,800 --> 01:58:09,800
okay

2840
01:58:53,440 --> 01:58:56,440
yes

2841
01:59:04,320 --> 01:59:07,320
um

2842
01:59:32,800 --> 01:59:36,040
i think

