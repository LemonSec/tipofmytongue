1
00:00:07,359 --> 00:00:09,519
i can see i can see some names slowly

2
00:00:09,519 --> 00:00:12,840
ticking in

3
00:00:17,760 --> 00:00:19,520
hello daniel

4
00:00:19,520 --> 00:00:21,760
good morning

5
00:00:21,760 --> 00:00:22,720
yes

6
00:00:22,720 --> 00:00:23,840
one of those

7
00:00:23,840 --> 00:00:25,920
good morning good afternoon

8
00:00:25,920 --> 00:00:27,599
it is

9
00:00:27,599 --> 00:00:30,560
i think i generally count 5 a.m as being

10
00:00:30,560 --> 00:00:32,479
more morning than night but it is it's

11
00:00:32,479 --> 00:00:35,040
certainly on the cusp isn't it

12
00:00:35,040 --> 00:00:36,719
it's hard to have to tell which one it

13
00:00:36,719 --> 00:00:37,760
is

14
00:00:37,760 --> 00:00:40,320
welcome to the calex session first

15
00:00:40,320 --> 00:00:42,840
session of the day here on tuesday

16
00:00:42,840 --> 00:00:44,640
at

17
00:00:44,640 --> 00:00:46,559
what did i put the wrong date on that i

18
00:00:46,559 --> 00:00:47,840
did

19
00:00:47,840 --> 00:00:49,280
there you go

20
00:00:49,280 --> 00:00:52,000
that's yesterday

21
00:00:52,160 --> 00:00:53,440
it's still yesterday somewhere in the

22
00:00:53,440 --> 00:00:55,280
world

23
00:00:55,280 --> 00:00:56,160
um

24
00:00:56,160 --> 00:00:59,440
right let's move on nobody saw that this

25
00:00:59,440 --> 00:01:01,520
is the noteworld where i believe

26
00:01:01,520 --> 00:01:03,039
everyone in this room is very familiar

27
00:01:03,039 --> 00:01:05,119
with the noteworld and probably everyone

28
00:01:05,119 --> 00:01:07,760
remotely as well um we have

29
00:01:07,760 --> 00:01:09,680
a a small

30
00:01:09,680 --> 00:01:12,799
but high quality group of people here

31
00:01:12,799 --> 00:01:16,320
so yes note the noteworld

32
00:01:16,479 --> 00:01:18,479
some tips for this one

33
00:01:18,479 --> 00:01:20,799
if you're in the room please

34
00:01:20,799 --> 00:01:24,000
scan the qr code or pop into the data

35
00:01:24,000 --> 00:01:26,560
tracker and get online in meet echo

36
00:01:26,560 --> 00:01:28,640
somehow that is how you get blue sheeted

37
00:01:28,640 --> 00:01:30,479
and how we know you are here and we'll

38
00:01:30,479 --> 00:01:32,079
allow you to speak because if you don't

39
00:01:32,079 --> 00:01:33,680
if you don't follow the process exactly

40
00:01:33,680 --> 00:01:36,799
there's no speaking for you

41
00:01:36,799 --> 00:01:38,720
all right some resources whatever that's

42
00:01:38,720 --> 00:01:41,280
just on the hi barry you can talk no you

43
00:01:41,280 --> 00:01:43,200
can't

44
00:01:43,200 --> 00:01:46,240
here's the agenda as you can see it is

45
00:01:46,240 --> 00:01:47,680
long and detailed with very many

46
00:01:47,680 --> 00:01:49,759
documents but this is

47
00:01:49,759 --> 00:01:51,439
we don't have to stick to this

48
00:01:51,439 --> 00:01:52,720
um

49
00:01:52,720 --> 00:01:54,799
whoever feels like speaking let me know

50
00:01:54,799 --> 00:01:56,719
pop up do your thing

51
00:01:56,719 --> 00:01:57,680
we have

52
00:01:57,680 --> 00:02:00,240
lots of time and i don't know if we'll

53
00:02:00,240 --> 00:02:03,439
use it all but we might

54
00:02:03,439 --> 00:02:06,399
any other business before we hit the new

55
00:02:06,399 --> 00:02:09,719
charter discussion

56
00:02:11,360 --> 00:02:14,160
i'm seeing a lack of hands i'm gonna

57
00:02:14,160 --> 00:02:17,040
just share

58
00:02:18,640 --> 00:02:23,000
it's not very often that you have

59
00:02:26,400 --> 00:02:27,520
ah

60
00:02:27,520 --> 00:02:30,080
that's alexi um breaking protocol not

61
00:02:30,080 --> 00:02:32,400
standing in the microphone

62
00:02:32,400 --> 00:02:34,800
sitting drinking his tea with no mask on

63
00:02:34,800 --> 00:02:37,519
disgraceful and giving me giving me crap

64
00:02:37,519 --> 00:02:39,280
from the heckling from the back row of

65
00:02:39,280 --> 00:02:40,800
this room which for those of you who are

66
00:02:40,800 --> 00:02:43,519
remote is three rows deep so it's not

67
00:02:43,519 --> 00:02:46,400
very not very remote all right

68
00:02:46,400 --> 00:02:48,640
we have a new charter congratulations

69
00:02:48,640 --> 00:02:49,599
everybody

70
00:02:49,599 --> 00:02:52,319
we are now the maintenance working group

71
00:02:52,319 --> 00:02:56,879
for everything calendar contacts and and

72
00:02:56,879 --> 00:02:59,360
related enough to to

73
00:02:59,360 --> 00:03:01,599
stick itself into this pile as well

74
00:03:01,599 --> 00:03:04,560
um i think everyone's seen

75
00:03:04,560 --> 00:03:07,360
this charter we we say we're going to be

76
00:03:07,360 --> 00:03:09,360
maintaining the existing standards

77
00:03:09,360 --> 00:03:10,879
the important thing here is that we

78
00:03:10,879 --> 00:03:12,000
expect everything to be backwards

79
00:03:12,000 --> 00:03:14,000
compatible uh one thing that's come out

80
00:03:14,000 --> 00:03:16,720
of this is that any work on i calendar

81
00:03:16,720 --> 00:03:19,120
or js calendar is required to

82
00:03:19,120 --> 00:03:21,280
update the mapping document and update

83
00:03:21,280 --> 00:03:23,200
the other things there

84
00:03:23,200 --> 00:03:24,560
so

85
00:03:24,560 --> 00:03:26,640
please keep that in mind

86
00:03:26,640 --> 00:03:28,640
for any documents that are in progress

87
00:03:28,640 --> 00:03:29,840
or

88
00:03:29,840 --> 00:03:32,080
that we do from now on we have to make

89
00:03:32,080 --> 00:03:34,480
sure we do both those formats

90
00:03:34,480 --> 00:03:36,080
and i suspect that the same thing is

91
00:03:36,080 --> 00:03:38,720
going to happen with vcard and jscontact

92
00:03:38,720 --> 00:03:40,560
as they come along

93
00:03:40,560 --> 00:03:42,400
because it says with the existing

94
00:03:42,400 --> 00:03:44,720
standards it doesn't specify what

95
00:03:44,720 --> 00:03:46,879
specifies in fact for those those two

96
00:03:46,879 --> 00:03:48,480
that we expect things but yeah anything

97
00:03:48,480 --> 00:03:51,120
where we have multiple representations

98
00:03:51,120 --> 00:03:52,799
we're expected to update the model and

99
00:03:52,799 --> 00:03:56,319
then update the representation in both

100
00:03:56,319 --> 00:03:58,720
cool uh

101
00:03:58,720 --> 00:04:00,720
this was basically just a summary for

102
00:04:00,720 --> 00:04:02,640
for the hundreds of people who came in

103
00:04:02,640 --> 00:04:04,400
to check out what's happening

104
00:04:04,400 --> 00:04:06,159
and who the millions who are going to

105
00:04:06,159 --> 00:04:08,159
watch this on youtube when it goes viral

106
00:04:08,159 --> 00:04:09,439
so

107
00:04:09,439 --> 00:04:11,200
welcome everybody

108
00:04:11,200 --> 00:04:13,519
shall we move on

109
00:04:13,519 --> 00:04:14,560
excellent

110
00:04:14,560 --> 00:04:16,639
woohoo

111
00:04:16,639 --> 00:04:17,600
uh

112
00:04:17,600 --> 00:04:20,639
according to the agenda

113
00:04:20,639 --> 00:04:22,960
next things were the the new work no

114
00:04:22,960 --> 00:04:25,759
hang on next thing was the

115
00:04:25,759 --> 00:04:28,400
let me pull up my chair slides again

116
00:04:28,400 --> 00:04:30,320
the work that's actually at the isg

117
00:04:30,320 --> 00:04:33,199
which is ical relations

118
00:04:33,199 --> 00:04:35,360
uh mike did you want to

119
00:04:35,360 --> 00:04:38,160
say anything about

120
00:04:40,840 --> 00:04:43,199
this you hear me

121
00:04:43,199 --> 00:04:44,240
yeah

122
00:04:44,240 --> 00:04:45,040
good

123
00:04:45,040 --> 00:04:46,400
um

124
00:04:46,400 --> 00:04:48,160
i guess i guess the only

125
00:04:48,160 --> 00:04:51,199
there's i uploaded once uh you know a

126
00:04:51,199 --> 00:04:53,520
small slide deck for that

127
00:04:53,520 --> 00:04:55,120
and because there's only one slide for

128
00:04:55,120 --> 00:04:58,240
it and uh

129
00:04:58,960 --> 00:05:01,599
there was one

130
00:05:02,000 --> 00:05:03,919
remaining

131
00:05:03,919 --> 00:05:07,039
yes it's next the next one i think yeah

132
00:05:07,039 --> 00:05:09,199
there's a section um

133
00:05:09,199 --> 00:05:11,680
there's a section

134
00:05:11,680 --> 00:05:12,560
where

135
00:05:12,560 --> 00:05:16,080
um using existing link relations

136
00:05:16,080 --> 00:05:17,919
and

137
00:05:17,919 --> 00:05:19,440
um

138
00:05:19,440 --> 00:05:22,320
whether there should be some text to say

139
00:05:22,320 --> 00:05:24,160
you really need to write an rfc if

140
00:05:24,160 --> 00:05:26,160
you're going to use existing link

141
00:05:26,160 --> 00:05:27,919
relations to say how you're going to use

142
00:05:27,919 --> 00:05:29,680
them and so other people know what

143
00:05:29,680 --> 00:05:30,960
you're doing

144
00:05:30,960 --> 00:05:32,960
there's no text as such at the moment

145
00:05:32,960 --> 00:05:35,199
other than to say

146
00:05:35,199 --> 00:05:37,440
you can use existing link relations

147
00:05:37,440 --> 00:05:40,800
i'm a little uneasy about having nothing

148
00:05:40,800 --> 00:05:43,120
so there's some suggestion from benjamin

149
00:05:43,120 --> 00:05:46,240
suggested something of that kind

150
00:05:46,240 --> 00:05:48,240
at the bottom

151
00:05:48,240 --> 00:05:50,880
and i guess the other question is

152
00:05:50,880 --> 00:05:53,440
um

153
00:05:53,440 --> 00:05:56,160
does this need a section on

154
00:05:56,160 --> 00:06:01,360
um does it need js calendar examples

155
00:06:02,080 --> 00:06:05,120
it sort of started off before and one of

156
00:06:05,120 --> 00:06:08,080
the reasons for getting this um

157
00:06:08,080 --> 00:06:10,160
moved along is because it's sort of used

158
00:06:10,160 --> 00:06:12,880
by the js calendar

159
00:06:12,880 --> 00:06:15,039
mapping

160
00:06:15,039 --> 00:06:17,599
draft

161
00:06:18,400 --> 00:06:20,080
hey michael don't we get to see your

162
00:06:20,080 --> 00:06:22,319
face

163
00:06:22,319 --> 00:06:25,759
oh five in the morning

164
00:06:26,800 --> 00:06:28,240
there's no law that says you have to

165
00:06:28,240 --> 00:06:29,440
show your face

166
00:06:29,440 --> 00:06:31,680
yeah i'll show my face for a short while

167
00:06:31,680 --> 00:06:35,120
there you go good morning

168
00:06:41,840 --> 00:06:44,720
um so so that's they're the two

169
00:06:44,720 --> 00:06:46,880
questions i think it's pretty much done

170
00:06:46,880 --> 00:06:48,800
um

171
00:06:48,800 --> 00:06:52,240
it sort of started before um

172
00:06:52,240 --> 00:06:53,280
the new

173
00:06:53,280 --> 00:06:56,319
new charter um and it's

174
00:06:56,319 --> 00:06:57,759
so

175
00:06:57,759 --> 00:06:59,759
do you think i should i should put in

176
00:06:59,759 --> 00:07:02,000
some js calendar stuff or is it going to

177
00:07:02,000 --> 00:07:03,840
be covered by the mapping drone actually

178
00:07:03,840 --> 00:07:05,680
if you want to speak first or because

179
00:07:05,680 --> 00:07:06,960
you were in the queue okay go for it

180
00:07:06,960 --> 00:07:08,880
again

181
00:07:08,880 --> 00:07:11,199
this is cameron so mike if if this is

182
00:07:11,199 --> 00:07:12,160
going to

183
00:07:12,160 --> 00:07:13,680
go out the door before the mapping

184
00:07:13,680 --> 00:07:14,960
document i would suggest the mapping

185
00:07:14,960 --> 00:07:17,280
docking mapping document

186
00:07:17,280 --> 00:07:20,880
deal with relations itself

187
00:07:20,880 --> 00:07:22,639
it'll be good

188
00:07:22,639 --> 00:07:24,479
yeah i'd prefer not to hold it up as

189
00:07:24,479 --> 00:07:27,360
well francesca

190
00:07:27,360 --> 00:07:30,639
yeah hi i don't have a like opinion

191
00:07:30,639 --> 00:07:32,960
about that but i just wanted to mention

192
00:07:32,960 --> 00:07:34,000
that

193
00:07:34,000 --> 00:07:36,479
the isg is changing

194
00:07:36,479 --> 00:07:39,840
tomorrow so we will lose some ballots

195
00:07:39,840 --> 00:07:41,759
and i

196
00:07:41,759 --> 00:07:42,960
was

197
00:07:42,960 --> 00:07:45,759
hoping to kind of so the document is all

198
00:07:45,759 --> 00:07:47,360
green which means that it could be

199
00:07:47,360 --> 00:07:48,479
approved

200
00:07:48,479 --> 00:07:51,039
but i know we're waiting for this uh

201
00:07:51,039 --> 00:07:52,639
small update

202
00:07:52,639 --> 00:07:55,039
and so i was thinking of changing its

203
00:07:55,039 --> 00:07:58,160
status to approve approved announcement

204
00:07:58,160 --> 00:07:59,440
to be sent

205
00:07:59,440 --> 00:08:02,000
revised that he needed to kind of like

206
00:08:02,000 --> 00:08:05,120
uh freeze the fact that it's approved

207
00:08:05,120 --> 00:08:07,039
but small changes

208
00:08:07,039 --> 00:08:10,240
are quite so very uh nodding so

209
00:08:10,240 --> 00:08:12,160
yeah i will do that so we don't lose the

210
00:08:12,160 --> 00:08:14,000
balance it should still be enough

211
00:08:14,000 --> 00:08:15,280
balance but

212
00:08:15,280 --> 00:08:17,680
yeah never know

213
00:08:17,680 --> 00:08:19,759
great yeah i mean it's only a minor

214
00:08:19,759 --> 00:08:22,800
change anyway so so i think uh

215
00:08:22,800 --> 00:08:25,120
it doesn't really change the uh

216
00:08:25,120 --> 00:08:28,240
any specification

217
00:08:29,120 --> 00:08:33,039
it could be considered editorial i guess

218
00:08:34,320 --> 00:08:36,880
hey this is robert speaking so um

219
00:08:36,880 --> 00:08:38,000
for

220
00:08:38,000 --> 00:08:40,640
link in terms of link relations i see

221
00:08:40,640 --> 00:08:42,799
that we are currently doing duplicate

222
00:08:42,799 --> 00:08:45,839
work uh for defining link relations both

223
00:08:45,839 --> 00:08:46,959
in the

224
00:08:46,959 --> 00:08:50,080
i js calendar icalendar mapping document

225
00:08:50,080 --> 00:08:53,040
and in the um in this draft

226
00:08:53,040 --> 00:08:56,160
so um we should certainly just make sure

227
00:08:56,160 --> 00:08:58,080
that we're using

228
00:08:58,080 --> 00:09:00,800
one of these options and not introducing

229
00:09:00,800 --> 00:09:02,240
two options to do the same thing

230
00:09:02,240 --> 00:09:04,880
basically

231
00:09:05,120 --> 00:09:06,959
we might come back to this discussion

232
00:09:06,959 --> 00:09:08,480
when we discuss the gs calendar i

233
00:09:08,480 --> 00:09:11,120
calendar mapping graph

234
00:09:11,120 --> 00:09:14,120
okay

235
00:09:23,519 --> 00:09:25,440
so just putting the notes in there all

236
00:09:25,440 --> 00:09:27,120
right so

237
00:09:27,120 --> 00:09:29,519
i think i think everything's agreed on

238
00:09:29,519 --> 00:09:32,480
this yes daniel

239
00:09:35,200 --> 00:09:36,399
yeah

240
00:09:36,399 --> 00:09:38,399
so so basically

241
00:09:38,399 --> 00:09:40,080
there is one one thing we don't have to

242
00:09:40,080 --> 00:09:41,600
do in that document which is the

243
00:09:41,600 --> 00:09:45,120
document in gs calendar

244
00:09:45,360 --> 00:09:47,600
yeah so we decided that because the js

245
00:09:47,600 --> 00:09:49,279
calendar icalendar mapping document's

246
00:09:49,279 --> 00:09:50,959
not done yet that would document it in

247
00:09:50,959 --> 00:09:52,000
that one

248
00:09:52,000 --> 00:09:53,600
for this draft rather than the other way

249
00:09:53,600 --> 00:09:54,959
around

250
00:09:54,959 --> 00:09:56,160
because this one's going to go through

251
00:09:56,160 --> 00:09:58,480
first

252
00:09:58,880 --> 00:10:01,279
so this one is almost baked

253
00:10:01,279 --> 00:10:04,279
yeah

254
00:10:07,200 --> 00:10:09,200
do you think mike do you think you you

255
00:10:09,200 --> 00:10:11,839
will be able to do that um this week for

256
00:10:11,839 --> 00:10:14,320
example

257
00:10:17,600 --> 00:10:19,839
yeah i think um

258
00:10:19,839 --> 00:10:22,240
i mean this is the only the only it's

259
00:10:22,240 --> 00:10:24,160
really just adding this one sec

260
00:10:24,160 --> 00:10:26,640
sentence to the to the text and

261
00:10:26,640 --> 00:10:27,920
it could just be

262
00:10:27,920 --> 00:10:30,880
left as part of the editorial process so

263
00:10:30,880 --> 00:10:32,320
i think it's pretty much it's pretty

264
00:10:32,320 --> 00:10:33,519
much done

265
00:10:33,519 --> 00:10:35,440
it's really this only there's one

266
00:10:35,440 --> 00:10:37,839
question

267
00:10:42,800 --> 00:10:46,519
it's okay good so

268
00:10:47,920 --> 00:10:51,040
so it's it's time aim um let's target

269
00:10:51,040 --> 00:10:53,120
that we we

270
00:10:53,120 --> 00:10:55,839
this draft is going to be done by uh

271
00:10:55,839 --> 00:10:58,800
um by this week

272
00:10:58,800 --> 00:11:01,279
yeah i was i was gonna i was gonna um

273
00:11:01,279 --> 00:11:03,040
put some text in there last night but i

274
00:11:03,040 --> 00:11:04,560
thought i might as well leave it till

275
00:11:04,560 --> 00:11:06,480
till with at least a chance to talk

276
00:11:06,480 --> 00:11:08,800
about it

277
00:11:08,800 --> 00:11:10,880
okay good awesome

278
00:11:10,880 --> 00:11:12,880
so francesca's going to approve it

279
00:11:12,880 --> 00:11:15,040
mike's going to add the text and we're

280
00:11:15,040 --> 00:11:16,480
done

281
00:11:16,480 --> 00:11:18,800
fantastic

282
00:11:18,800 --> 00:11:20,640
all right and mike you had one more

283
00:11:20,640 --> 00:11:22,160
slide

284
00:11:22,160 --> 00:11:23,920
yeah i thought i could do a subscription

285
00:11:23,920 --> 00:11:25,839
upgrade um

286
00:11:25,839 --> 00:11:29,200
i took i took another look at this um

287
00:11:29,200 --> 00:11:30,880
and i think i think actually it's pretty

288
00:11:30,880 --> 00:11:33,920
much ready uh i did i did see as i say

289
00:11:33,920 --> 00:11:36,079
here that um i was referring to the

290
00:11:36,079 --> 00:11:37,279
wrong

291
00:11:37,279 --> 00:11:40,720
uh spec because this has some um

292
00:11:40,720 --> 00:11:43,279
link relations um

293
00:11:43,279 --> 00:11:45,440
uses link relations as well

294
00:11:45,440 --> 00:11:47,120
um

295
00:11:47,120 --> 00:11:49,120
so i need to i need to update it to

296
00:11:49,120 --> 00:11:51,360
reference the right spec

297
00:11:51,360 --> 00:11:53,839
and and i did also notice that somehow

298
00:11:53,839 --> 00:11:56,320
the privacy section that

299
00:11:56,320 --> 00:11:59,040
got its header screwed up so it got

300
00:11:59,040 --> 00:12:00,959
tagged onto the end of the security

301
00:12:00,959 --> 00:12:03,360
section but apart from that it looks

302
00:12:03,360 --> 00:12:04,880
pretty much

303
00:12:04,880 --> 00:12:07,040
uh we've had a certain amount of

304
00:12:07,040 --> 00:12:11,240
discussion about already online

305
00:12:11,279 --> 00:12:12,639
and this is another one i think which is

306
00:12:12,639 --> 00:12:15,440
pretty much done

307
00:12:16,639 --> 00:12:19,680
cool um so does this sound like

308
00:12:19,680 --> 00:12:21,519
you push a new copy with that fixed and

309
00:12:21,519 --> 00:12:23,760
i do a working group last call on it

310
00:12:23,760 --> 00:12:27,200
that's where i think we're at yes

311
00:12:28,000 --> 00:12:29,920
and i can probably get that done as well

312
00:12:29,920 --> 00:12:32,880
um the next two three days

313
00:12:32,880 --> 00:12:35,360
fantastic

314
00:12:35,360 --> 00:12:37,839
well we're making good progress then

315
00:12:37,839 --> 00:12:40,399
thanks mike

316
00:12:40,399 --> 00:12:43,680
all right next on our list um

317
00:12:43,680 --> 00:12:46,880
let's do one of the js contact

318
00:12:46,880 --> 00:12:50,000
things so i'll pop up

319
00:12:50,000 --> 00:12:53,399
robert slides

320
00:13:01,360 --> 00:13:04,720
oh wow that is fancy

321
00:13:05,120 --> 00:13:07,120
we robert's just hacked together the

322
00:13:07,120 --> 00:13:08,160
thing we've got in the bigger rooms

323
00:13:08,160 --> 00:13:09,600
where there's a tv in front of him by

324
00:13:09,600 --> 00:13:11,680
putting his laptop on a chair for those

325
00:13:11,680 --> 00:13:13,680
of you who can't see

326
00:13:13,680 --> 00:13:17,120
take a photo of this little approach

327
00:13:19,519 --> 00:13:20,720
beautiful

328
00:13:20,720 --> 00:13:24,160
mostly just a barry

329
00:13:24,320 --> 00:13:26,399
all right so um

330
00:13:26,399 --> 00:13:29,120
uh let's discuss j's contact and the gs

331
00:13:29,120 --> 00:13:31,600
js contact v card mapping drafts uh

332
00:13:31,600 --> 00:13:34,800
together um next slides please

333
00:13:34,800 --> 00:13:35,680
um

334
00:13:35,680 --> 00:13:37,519
so yeah

335
00:13:37,519 --> 00:13:39,360
both of these drafts are now adopted by

336
00:13:39,360 --> 00:13:41,600
calyx which is a great thing because uh

337
00:13:41,600 --> 00:13:43,040
now we can

338
00:13:43,040 --> 00:13:45,199
can make sure to be

339
00:13:45,199 --> 00:13:47,360
better aligned also with the existing

340
00:13:47,360 --> 00:13:51,920
vcard and i calendar vcard drafts

341
00:13:52,160 --> 00:13:53,920
the

342
00:13:53,920 --> 00:13:56,880
the main open item that we had

343
00:13:56,880 --> 00:13:59,680
at the last session was that we were

344
00:13:59,680 --> 00:14:03,600
discussing options how to

345
00:14:03,600 --> 00:14:05,199
how to define

346
00:14:05,199 --> 00:14:08,320
gender related properties within js

347
00:14:08,320 --> 00:14:10,880
contact

348
00:14:11,600 --> 00:14:15,040
scoped to the use case of knowing how to

349
00:14:15,040 --> 00:14:17,120
address a contact

350
00:14:17,120 --> 00:14:18,079
um

351
00:14:18,079 --> 00:14:21,920
so we we we were not keen on reproducing

352
00:14:21,920 --> 00:14:22,880
the

353
00:14:22,880 --> 00:14:25,440
gender property definition of vcard

354
00:14:25,440 --> 00:14:28,480
which in our understanding um is not

355
00:14:28,480 --> 00:14:32,079
appropriate for um

356
00:14:32,079 --> 00:14:34,480
for use in terms of um

357
00:14:34,480 --> 00:14:37,600
it defined the biological sex

358
00:14:37,600 --> 00:14:39,120
um which

359
00:14:39,120 --> 00:14:42,160
and it defined a free text for gender

360
00:14:42,160 --> 00:14:43,600
and both

361
00:14:43,600 --> 00:14:45,839
understanding current gender studies

362
00:14:45,839 --> 00:14:48,160
advancements are not really appropriate

363
00:14:48,160 --> 00:14:50,480
um to either

364
00:14:50,480 --> 00:14:53,120
know knowing how to address a person in

365
00:14:53,120 --> 00:14:56,079
languages that require a grammatical

366
00:14:56,079 --> 00:14:58,240
gender

367
00:14:58,240 --> 00:15:00,880
and and and also the free text for

368
00:15:00,880 --> 00:15:02,639
gender

369
00:15:02,639 --> 00:15:05,199
was not deemed to be um

370
00:15:05,199 --> 00:15:07,360
the right approach and we are waiting

371
00:15:07,360 --> 00:15:10,079
for defining uh gender identities we are

372
00:15:10,079 --> 00:15:11,279
waiting for

373
00:15:11,279 --> 00:15:13,440
people who have knowledge in this area

374
00:15:13,440 --> 00:15:15,680
to come up with an additional proposal

375
00:15:15,680 --> 00:15:18,000
but that's not going to be part of the

376
00:15:18,000 --> 00:15:20,800
core js contact specification what we

377
00:15:20,800 --> 00:15:22,399
did defined was

378
00:15:22,399 --> 00:15:23,920
a new property

379
00:15:23,920 --> 00:15:25,760
called speak to us

380
00:15:25,760 --> 00:15:28,079
the speak to us property is scoped to

381
00:15:28,079 --> 00:15:31,040
define the grammatical gender

382
00:15:31,040 --> 00:15:33,600
and it allows a free text field for

383
00:15:33,600 --> 00:15:36,560
pronouns um typically used in english

384
00:15:36,560 --> 00:15:39,519
like they slash them but it's really up

385
00:15:39,519 --> 00:15:41,120
to the user to

386
00:15:41,120 --> 00:15:43,920
um to enter whatever they want there um

387
00:15:43,920 --> 00:15:46,079
there is no um

388
00:15:46,079 --> 00:15:48,240
this also means that it's more

389
00:15:48,240 --> 00:15:50,320
informative to the people looking at the

390
00:15:50,320 --> 00:15:52,079
card it's

391
00:15:52,079 --> 00:15:56,480
not not that useful for um machines to

392
00:15:56,480 --> 00:15:57,680
like like

393
00:15:57,680 --> 00:15:59,920
it's it's it's not that easy then to use

394
00:15:59,920 --> 00:16:02,160
this information in an automated way in

395
00:16:02,160 --> 00:16:03,440
in any

396
00:16:03,440 --> 00:16:06,480
um in any situations but um this is um

397
00:16:06,480 --> 00:16:08,560
what we've seen in other proprietary

398
00:16:08,560 --> 00:16:11,199
formats being used as well for example

399
00:16:11,199 --> 00:16:13,759
google the google people api

400
00:16:13,759 --> 00:16:16,399
also uses a free text feed only and we

401
00:16:16,399 --> 00:16:19,120
figured we go with that

402
00:16:19,120 --> 00:16:19,920
um

403
00:16:19,920 --> 00:16:22,079
yesterday there were two discussions so

404
00:16:22,079 --> 00:16:24,560
basically we we we didn't see any

405
00:16:24,560 --> 00:16:27,120
further discussion on js contact um but

406
00:16:27,120 --> 00:16:29,519
yesterday two topics were brought up and

407
00:16:29,519 --> 00:16:30,399
uh

408
00:16:30,399 --> 00:16:33,040
we'll be happy to discuss them here now

409
00:16:33,040 --> 00:16:35,839
uh one is around there this and these

410
00:16:35,839 --> 00:16:38,320
concern context and labor properties in

411
00:16:38,320 --> 00:16:40,240
contact resources

412
00:16:40,240 --> 00:16:41,120
um

413
00:16:41,120 --> 00:16:43,360
but before we go into this discussion uh

414
00:16:43,360 --> 00:16:45,759
then our next step is really interop

415
00:16:45,759 --> 00:16:46,800
testing

416
00:16:46,800 --> 00:16:48,000
um

417
00:16:48,000 --> 00:16:51,199
so mario the co-author um who's in the

418
00:16:51,199 --> 00:16:54,880
chat um has an existing implementation

419
00:16:54,880 --> 00:16:57,279
um i'm working on an implementation at

420
00:16:57,279 --> 00:17:00,079
fast mail and i understand that um

421
00:17:00,079 --> 00:17:02,320
also other vendors um rodrigo for

422
00:17:02,320 --> 00:17:04,400
example have their um

423
00:17:04,400 --> 00:17:05,919
already have an experimental

424
00:17:05,919 --> 00:17:07,839
implementation so that's going along

425
00:17:07,839 --> 00:17:10,000
well in my understanding

426
00:17:10,000 --> 00:17:12,240
and we target for uh

427
00:17:12,240 --> 00:17:15,119
for a lot of working group last call

428
00:17:15,119 --> 00:17:20,958
before or at the next itf in philly

429
00:17:21,520 --> 00:17:24,400
next slide please

430
00:17:24,559 --> 00:17:25,760
the

431
00:17:25,760 --> 00:17:29,280
the topics that came up very recently is

432
00:17:29,280 --> 00:17:33,679
one is the context property so

433
00:17:33,679 --> 00:17:35,039
in

434
00:17:35,039 --> 00:17:38,080
at a couple of places in the js contact

435
00:17:38,080 --> 00:17:39,840
properties

436
00:17:39,840 --> 00:17:42,720
we have specific object types say for

437
00:17:42,720 --> 00:17:45,600
telephone numbers for

438
00:17:45,600 --> 00:17:49,120
online accounts um for email addresses

439
00:17:49,120 --> 00:17:50,960
and all these have a

440
00:17:50,960 --> 00:17:52,640
share a property which is called

441
00:17:52,640 --> 00:17:55,600
contexts which allows to define in which

442
00:17:55,600 --> 00:17:57,600
context this contact method should be

443
00:17:57,600 --> 00:17:59,200
used so the example i've been giving

444
00:17:59,200 --> 00:18:01,200
here you can have a phone number you can

445
00:18:01,200 --> 00:18:03,280
say this is my this should be used for

446
00:18:03,280 --> 00:18:06,559
work related stuff or for private stuff

447
00:18:06,559 --> 00:18:08,160
at the moment we only have work and

448
00:18:08,160 --> 00:18:10,480
private um

449
00:18:10,480 --> 00:18:13,120
we if i recall correctly we originally

450
00:18:13,120 --> 00:18:16,400
also had the value other

451
00:18:16,400 --> 00:18:17,200
but

452
00:18:17,200 --> 00:18:19,600
in one of the latest

453
00:18:19,600 --> 00:18:24,160
versions i removed all mentions of any

454
00:18:24,160 --> 00:18:27,440
any enum value that was called other

455
00:18:27,440 --> 00:18:30,000
because it's really it doesn't tell

456
00:18:30,000 --> 00:18:32,320
anything at all so

457
00:18:32,320 --> 00:18:34,240
um

458
00:18:34,240 --> 00:18:36,080
the

459
00:18:36,080 --> 00:18:37,440
i now came to understand that some

460
00:18:37,440 --> 00:18:39,440
address book applications still use this

461
00:18:39,440 --> 00:18:41,520
like

462
00:18:41,520 --> 00:18:43,440
using a like a

463
00:18:43,440 --> 00:18:45,600
a generic value if there is really not

464
00:18:45,600 --> 00:18:48,799
much known um else about it

465
00:18:48,799 --> 00:18:49,919
um

466
00:18:49,919 --> 00:18:52,160
i do not think we should do that in js

467
00:18:52,160 --> 00:18:54,640
contact but i'm open for discussion what

468
00:18:54,640 --> 00:18:56,799
the benefits of allowing like a

469
00:18:56,799 --> 00:18:59,120
catch-all value would be

470
00:18:59,120 --> 00:19:00,799
um

471
00:19:00,799 --> 00:19:02,799
the options that are on the table of

472
00:19:02,799 --> 00:19:06,240
course are to extend the enum um which

473
00:19:06,240 --> 00:19:09,120
would then also go through ayanna

474
00:19:09,120 --> 00:19:10,559
at least for the ones that we don't

475
00:19:10,559 --> 00:19:12,000
define in

476
00:19:12,000 --> 00:19:13,679
in the course back

477
00:19:13,679 --> 00:19:16,799
um or if we really should just allow a

478
00:19:16,799 --> 00:19:19,360
free text value with the

479
00:19:19,360 --> 00:19:21,919
benefit of being that people are really

480
00:19:21,919 --> 00:19:24,240
able to put in whatever they want but of

481
00:19:24,240 --> 00:19:25,440
course

482
00:19:25,440 --> 00:19:27,160
that might degrade

483
00:19:27,160 --> 00:19:29,440
interoperability so

484
00:19:29,440 --> 00:19:32,080
um i don't know if there are opinions

485
00:19:32,080 --> 00:19:34,480
around here alexi did you want to pop up

486
00:19:34,480 --> 00:19:37,880
here in the key

487
00:19:38,080 --> 00:19:40,080
yeah hello alexis monica good question

488
00:19:40,080 --> 00:19:42,320
uh

489
00:19:42,320 --> 00:19:44,480
what are the other values that people do

490
00:19:44,480 --> 00:19:46,559
want to use it for other than work and

491
00:19:46,559 --> 00:19:48,240
private

492
00:19:48,240 --> 00:19:50,160
yeah that's that's the main question at

493
00:19:50,160 --> 00:19:51,440
the moment i

494
00:19:51,440 --> 00:19:53,919
i don't know um that's why we restricted

495
00:19:53,919 --> 00:19:56,160
it to work in private um if there are

496
00:19:56,160 --> 00:19:58,240
other use cases uh of course we can add

497
00:19:58,240 --> 00:20:00,080
them to the spec now

498
00:20:00,080 --> 00:20:01,840
um

499
00:20:01,840 --> 00:20:02,640
but

500
00:20:02,640 --> 00:20:03,520
most

501
00:20:03,520 --> 00:20:06,480
maybe we will never be able to catch

502
00:20:06,480 --> 00:20:08,960
to identify all situations and so the

503
00:20:08,960 --> 00:20:11,200
question then is should we

504
00:20:11,200 --> 00:20:14,159
expect implementers to

505
00:20:14,159 --> 00:20:17,600
register the new enum um at diana or

506
00:20:17,600 --> 00:20:19,200
should we just allow to put in

507
00:20:19,200 --> 00:20:21,200
everything personally i

508
00:20:21,200 --> 00:20:23,440
i lean towards

509
00:20:23,440 --> 00:20:26,240
defining an enum with restricted values

510
00:20:26,240 --> 00:20:29,440
because then we can define semantics for

511
00:20:29,440 --> 00:20:32,080
each of the enum values

512
00:20:32,080 --> 00:20:34,159
yeah i would like to try to find out

513
00:20:34,159 --> 00:20:36,400
what people using other form at the

514
00:20:36,400 --> 00:20:37,760
moment no

515
00:20:37,760 --> 00:20:40,559
is it uh

516
00:20:40,880 --> 00:20:42,720
because you know like yeah we can add

517
00:20:42,720 --> 00:20:45,600
the iron registry but if it's unclear

518
00:20:45,600 --> 00:20:47,679
whether it will ever be extended what's

519
00:20:47,679 --> 00:20:49,280
the point and you can just defer it

520
00:20:49,280 --> 00:20:51,919
until the point when you know

521
00:20:51,919 --> 00:20:54,320
that you need extra values but if you

522
00:20:54,320 --> 00:20:57,039
know now or suspect now that it's a you

523
00:20:57,039 --> 00:20:58,640
probably will need to extend them just

524
00:20:58,640 --> 00:21:01,280
to the registry so i hope it helps cool

525
00:21:01,280 --> 00:21:03,840
oh we got a whole list here here okay

526
00:21:03,840 --> 00:21:05,760
hi i'm yours um

527
00:21:05,760 --> 00:21:08,000
yeah for us it's just we we saw that in

528
00:21:08,000 --> 00:21:10,000
several systems that they

529
00:21:10,000 --> 00:21:11,919
are currently using other

530
00:21:11,919 --> 00:21:15,360
and it might be a more generic question

531
00:21:15,360 --> 00:21:19,760
how to map that to js contact

532
00:21:19,760 --> 00:21:22,720
as long as the the information as long

533
00:21:22,720 --> 00:21:24,640
as it's possible to transfer it to js

534
00:21:24,640 --> 00:21:27,360
contact and back to vcards

535
00:21:27,360 --> 00:21:30,080
doesn't necessarily need to be an

536
00:21:30,080 --> 00:21:33,039
official value maybe but just

537
00:21:33,039 --> 00:21:35,600
it should be mentioned somewhere in the

538
00:21:35,600 --> 00:21:38,720
in the conversion spec a question to

539
00:21:38,720 --> 00:21:39,919
that please so

540
00:21:39,919 --> 00:21:42,320
if these applications allow other do

541
00:21:42,320 --> 00:21:43,280
these

542
00:21:43,280 --> 00:21:47,280
also allow to not set the context so

543
00:21:47,280 --> 00:21:49,679
okay so then basically since the context

544
00:21:49,679 --> 00:21:52,640
is i think optional in js contact if not

545
00:21:52,640 --> 00:21:53,840
it should be

546
00:21:53,840 --> 00:21:55,919
then um

547
00:21:55,919 --> 00:21:58,159
a non-existing context would be would

548
00:21:58,159 --> 00:22:00,400
map to other in

549
00:22:00,400 --> 00:22:03,039
in in other

550
00:22:03,039 --> 00:22:04,320
applications

551
00:22:04,320 --> 00:22:08,399
or of application formats actually

552
00:22:09,200 --> 00:22:10,960
okay

553
00:22:10,960 --> 00:22:12,720
what of course would be very interesting

554
00:22:12,720 --> 00:22:13,919
is um

555
00:22:13,919 --> 00:22:16,000
if there are contexts

556
00:22:16,000 --> 00:22:17,679
that we can like

557
00:22:17,679 --> 00:22:18,559
that are

558
00:22:18,559 --> 00:22:20,799
scoped to some specific context that

559
00:22:20,799 --> 00:22:22,960
would be really interesting but

560
00:22:22,960 --> 00:22:24,480
yeah for other i would just say the

561
00:22:24,480 --> 00:22:28,960
absence of context describes it

562
00:22:29,120 --> 00:22:32,240
as good as yes yeah okay

563
00:22:32,240 --> 00:22:35,840
makes sense to me okay

564
00:22:36,799 --> 00:22:37,760
barry

565
00:22:37,760 --> 00:22:39,840
this is barry lieber what what is the

566
00:22:39,840 --> 00:22:43,360
substantive difference between an enum

567
00:22:43,360 --> 00:22:45,440
that and and

568
00:22:45,440 --> 00:22:47,200
any arbitrary string that has to be

569
00:22:47,200 --> 00:22:49,520
registered with diana i don't understand

570
00:22:49,520 --> 00:22:52,159
oh no maybe i i

571
00:22:52,159 --> 00:22:52,960
so

572
00:22:52,960 --> 00:22:55,600
what i've tried to say is um

573
00:22:55,600 --> 00:22:58,559
we should register enums at iana that

574
00:22:58,559 --> 00:23:00,480
can be extended but i wouldn't say that

575
00:23:00,480 --> 00:23:01,600
i mean

576
00:23:01,600 --> 00:23:04,159
free texts registering at diana doesn't

577
00:23:04,159 --> 00:23:06,799
make sense so i i wanted to say either

578
00:23:06,799 --> 00:23:09,600
it should be an extendable list of enums

579
00:23:09,600 --> 00:23:11,360
but the extension must go through the

580
00:23:11,360 --> 00:23:12,480
regular

581
00:23:12,480 --> 00:23:13,600
iana

582
00:23:13,600 --> 00:23:16,400
registry process of adding another value

583
00:23:16,400 --> 00:23:18,799
or it should be a free text value that

584
00:23:18,799 --> 00:23:20,799
at json level it's going to be a string

585
00:23:20,799 --> 00:23:23,039
value either way right so that's fine i

586
00:23:23,039 --> 00:23:24,799
mean i think the right answer is to have

587
00:23:24,799 --> 00:23:26,799
uh the context registered with ayanna

588
00:23:26,799 --> 00:23:29,520
with specification required

589
00:23:29,520 --> 00:23:31,280
yes yes that's what i'm trying to get

590
00:23:31,280 --> 00:23:32,159
yeah

591
00:23:32,159 --> 00:23:34,320
that's maybe i i was

592
00:23:34,320 --> 00:23:36,400
not saying it correctly and then that

593
00:23:36,400 --> 00:23:37,919
gives you the ability to in the

594
00:23:37,919 --> 00:23:40,000
specification to say that this is just a

595
00:23:40,000 --> 00:23:41,919
meaningless string or that this has the

596
00:23:41,919 --> 00:23:44,159
following semantics

597
00:23:44,159 --> 00:23:45,760
and you can go either way depending on

598
00:23:45,760 --> 00:23:47,200
the registration and then there's an

599
00:23:47,200 --> 00:23:50,000
expert reviewer

600
00:23:51,760 --> 00:23:53,679
all right hello this is here

601
00:23:53,679 --> 00:23:56,000
um so maybe to shed some light on this

602
00:23:56,000 --> 00:23:57,760
other thing a little bit from what i

603
00:23:57,760 --> 00:23:59,679
know so historically i think it was

604
00:23:59,679 --> 00:24:02,240
exchange introducing this uh word home

605
00:24:02,240 --> 00:24:04,000
other so they just have three fields for

606
00:24:04,000 --> 00:24:05,520
addresses for

607
00:24:05,520 --> 00:24:07,039
email for everything so that's the

608
00:24:07,039 --> 00:24:09,120
scheme they just had and a lot of

609
00:24:09,120 --> 00:24:10,880
systems followed that approach yeah and

610
00:24:10,880 --> 00:24:11,760
then

611
00:24:11,760 --> 00:24:14,000
some systems came i think maybe for

612
00:24:14,000 --> 00:24:15,679
instance google started with that like

613
00:24:15,679 --> 00:24:17,279
they resolved all that and allowed you

614
00:24:17,279 --> 00:24:19,039
to do more than three email addresses

615
00:24:19,039 --> 00:24:20,720
more than three postal addresses and so

616
00:24:20,720 --> 00:24:23,279
on and they basically came on with a

617
00:24:23,279 --> 00:24:25,600
more or less free form context thing

618
00:24:25,600 --> 00:24:27,200
yeah so you could basically define

619
00:24:27,200 --> 00:24:29,440
everything so the question now if we

620
00:24:29,440 --> 00:24:31,919
need in terms of together with work and

621
00:24:31,919 --> 00:24:33,840
home other yeah actually it's not really

622
00:24:33,840 --> 00:24:36,080
defined it's just legacy thing because

623
00:24:36,080 --> 00:24:38,320
there were just those three fields yeah

624
00:24:38,320 --> 00:24:40,000
my point would be there is a lot of

625
00:24:40,000 --> 00:24:42,159
applications based on that a little bit

626
00:24:42,159 --> 00:24:43,919
because it's long it's there for quite

627
00:24:43,919 --> 00:24:44,960
some time

628
00:24:44,960 --> 00:24:48,159
so that in my opinion would be maybe one

629
00:24:48,159 --> 00:24:50,480
reason to consider this as a as a

630
00:24:50,480 --> 00:24:51,840
standard field as well because it's

631
00:24:51,840 --> 00:24:53,520
super established in a lot of

632
00:24:53,520 --> 00:24:56,000
applications um already

633
00:24:56,000 --> 00:24:58,240
um that is for the why there is other

634
00:24:58,240 --> 00:25:00,000
also i mean there's not so much magic

635
00:25:00,000 --> 00:25:01,760
beyond that around it actually and

636
00:25:01,760 --> 00:25:04,159
probably you won't lose so much

637
00:25:04,159 --> 00:25:06,159
else but you would probably make a life

638
00:25:06,159 --> 00:25:08,400
a little easier for people adopting jmap

639
00:25:08,400 --> 00:25:10,480
of with existing tools because they

640
00:25:10,480 --> 00:25:12,000
already have this

641
00:25:12,000 --> 00:25:12,880
you know

642
00:25:12,880 --> 00:25:15,039
standard model of those three context

643
00:25:15,039 --> 00:25:17,360
properties baked in

644
00:25:17,360 --> 00:25:19,279
um to your second question with the hana

645
00:25:19,279 --> 00:25:21,440
registry i would probably say in my

646
00:25:21,440 --> 00:25:22,960
opinion

647
00:25:22,960 --> 00:25:24,559
um

648
00:25:24,559 --> 00:25:26,240
i mean as far as i know for instance if

649
00:25:26,240 --> 00:25:28,480
you do it in in google or something like

650
00:25:28,480 --> 00:25:30,960
that you can even add free form

651
00:25:30,960 --> 00:25:33,760
um connect properties and i think people

652
00:25:33,760 --> 00:25:34,720
use it

653
00:25:34,720 --> 00:25:36,320
more like a keyword thing or something

654
00:25:36,320 --> 00:25:38,480
like that so probably a hana registry to

655
00:25:38,480 --> 00:25:40,559
do it really formally

656
00:25:40,559 --> 00:25:43,120
specify what a certain value means

657
00:25:43,120 --> 00:25:45,200
beyond these work home and private

658
00:25:45,200 --> 00:25:47,679
private work private and other probably

659
00:25:47,679 --> 00:25:49,120
over engineering

660
00:25:49,120 --> 00:25:50,720
and make it too slow as a process

661
00:25:50,720 --> 00:25:53,120
because i think nobody might do the work

662
00:25:53,120 --> 00:25:57,719
on submitting it to a inaudible

663
00:25:57,840 --> 00:25:59,760
it sounds like the the biggest challenge

664
00:25:59,760 --> 00:26:01,520
here is going to be round tripping

665
00:26:01,520 --> 00:26:02,720
between

666
00:26:02,720 --> 00:26:04,480
a v card that has these additional

667
00:26:04,480 --> 00:26:06,960
things that someone's entered and and js

668
00:26:06,960 --> 00:26:08,720
contact there needs to be a way to to

669
00:26:08,720 --> 00:26:11,120
round trip it through so they don't lose

670
00:26:11,120 --> 00:26:14,799
information they've added so um

671
00:26:14,799 --> 00:26:15,840
there is

672
00:26:15,840 --> 00:26:17,679
for every property

673
00:26:17,679 --> 00:26:18,720
in

674
00:26:18,720 --> 00:26:21,440
or any type in js contact it has a

675
00:26:21,440 --> 00:26:24,559
context or contexts actually

676
00:26:24,559 --> 00:26:27,840
uh there is also a free text label field

677
00:26:27,840 --> 00:26:30,159
and this is um

678
00:26:30,159 --> 00:26:31,200
um

679
00:26:31,200 --> 00:26:33,919
and the in in earlier drafts we had i

680
00:26:33,919 --> 00:26:36,080
think this other context but it

681
00:26:36,080 --> 00:26:39,279
basically meant um if you write other in

682
00:26:39,279 --> 00:26:41,760
here put the free text value whatever

683
00:26:41,760 --> 00:26:44,240
you want into label but you can still do

684
00:26:44,240 --> 00:26:47,600
that so i don't think i mean

685
00:26:47,600 --> 00:26:50,640
for if there is the specific

686
00:26:50,640 --> 00:26:53,840
value of other i really do not see how

687
00:26:53,840 --> 00:26:55,919
that would differ from not defining a

688
00:26:55,919 --> 00:26:58,480
context at all and just writing into the

689
00:26:58,480 --> 00:27:01,120
label whatever you whatever free text

690
00:27:01,120 --> 00:27:03,200
you want i don't disagree with you i

691
00:27:03,200 --> 00:27:04,799
think the the magic here would then be

692
00:27:04,799 --> 00:27:06,000
just to be very clear on that in the

693
00:27:06,000 --> 00:27:07,840
mapping yes yes people know what to do

694
00:27:07,840 --> 00:27:09,600
for because it's a common case so people

695
00:27:09,600 --> 00:27:11,600
will want to know how to deal with it

696
00:27:11,600 --> 00:27:13,279
and probably we should give them a

697
00:27:13,279 --> 00:27:16,000
guidance on how this is to be done in

698
00:27:16,000 --> 00:27:18,720
a jazz content yes yes so we need to be

699
00:27:18,720 --> 00:27:20,320
very clear and that would be super clear

700
00:27:20,320 --> 00:27:22,159
obviously if it's in the right in the

701
00:27:22,159 --> 00:27:24,640
top level spec but i agree with you

702
00:27:24,640 --> 00:27:26,159
writing in the future something which

703
00:27:26,159 --> 00:27:27,919
has been weird in the past

704
00:27:27,919 --> 00:27:30,000
not necessarily makes it better all

705
00:27:30,000 --> 00:27:30,880
right

706
00:27:30,880 --> 00:27:34,520
okay thank you

707
00:27:34,799 --> 00:27:36,320
this is ken again i just wanted to say

708
00:27:36,320 --> 00:27:38,880
plus one to the idea of other being lack

709
00:27:38,880 --> 00:27:41,520
of context

710
00:27:44,159 --> 00:27:47,039
okay then um i suggest we go to the next

711
00:27:47,039 --> 00:27:49,520
slide please

712
00:27:49,520 --> 00:27:51,360
okay and that's um that's bringing us to

713
00:27:51,360 --> 00:27:54,320
the label property so um

714
00:27:54,320 --> 00:27:56,640
the as i said before the label is a free

715
00:27:56,640 --> 00:27:59,120
text value that you can assign to any

716
00:27:59,120 --> 00:28:01,039
contact method um

717
00:28:01,039 --> 00:28:03,679
it's basically meant to

718
00:28:03,679 --> 00:28:04,480
to

719
00:28:04,480 --> 00:28:06,559
accommodate for the use case that in

720
00:28:06,559 --> 00:28:08,240
several um

721
00:28:08,240 --> 00:28:10,720
uh applications you can like add

722
00:28:10,720 --> 00:28:13,360
additional information like a free text

723
00:28:13,360 --> 00:28:14,799
value

724
00:28:14,799 --> 00:28:16,960
to a telephone number or whatever and

725
00:28:16,960 --> 00:28:18,880
the expectation is that usually this

726
00:28:18,880 --> 00:28:21,200
will be used by applications to display

727
00:28:21,200 --> 00:28:23,760
to the user so it's more informative to

728
00:28:23,760 --> 00:28:26,720
user rather than informative to the

729
00:28:26,720 --> 00:28:28,320
implementations

730
00:28:28,320 --> 00:28:29,440
um

731
00:28:29,440 --> 00:28:32,480
however the current js contact vcard

732
00:28:32,480 --> 00:28:35,360
mapping document um uses under some

733
00:28:35,360 --> 00:28:37,679
circumstances the labor property to

734
00:28:37,679 --> 00:28:40,320
contain um

735
00:28:40,320 --> 00:28:42,559
information that's relevant for mapping

736
00:28:42,559 --> 00:28:44,799
between js calling the js calendar and

737
00:28:44,799 --> 00:28:46,559
icalendar so notably

738
00:28:46,559 --> 00:28:50,640
if you have a cal uri property in vcard

739
00:28:50,640 --> 00:28:53,360
that defines the calendar address for

740
00:28:53,360 --> 00:28:55,440
this contact then that's currently

741
00:28:55,440 --> 00:28:58,640
mapped with the label property set to

742
00:28:58,640 --> 00:29:00,000
cal uri

743
00:29:00,000 --> 00:29:01,840
um

744
00:29:01,840 --> 00:29:05,039
now as you can see in this example um

745
00:29:05,039 --> 00:29:07,760
a resource has a type and that's again a

746
00:29:07,760 --> 00:29:09,600
restricted

747
00:29:09,600 --> 00:29:11,679
enumeration of values one of them being

748
00:29:11,679 --> 00:29:13,120
uri

749
00:29:13,120 --> 00:29:15,360
so

750
00:29:15,440 --> 00:29:17,440
i would suggest that we not use the

751
00:29:17,440 --> 00:29:19,919
label property for

752
00:29:19,919 --> 00:29:22,799
defining any mapping related information

753
00:29:22,799 --> 00:29:24,159
because that's really

754
00:29:24,159 --> 00:29:26,000
useful for the machine but not useful

755
00:29:26,000 --> 00:29:28,880
for the for the for the for the user

756
00:29:28,880 --> 00:29:31,600
so we should rather extend the type

757
00:29:31,600 --> 00:29:32,960
um

758
00:29:32,960 --> 00:29:36,559
enumeration values if uri is too generic

759
00:29:36,559 --> 00:29:40,240
to convey the specific type of

760
00:29:40,240 --> 00:29:43,279
to convey the specific type of of of uri

761
00:29:43,279 --> 00:29:46,080
or the context where it's used um

762
00:29:46,080 --> 00:29:47,679
the alternative would be a sub-type

763
00:29:47,679 --> 00:29:50,559
property but that might go too far in my

764
00:29:50,559 --> 00:29:52,840
under in my opinion

765
00:29:52,840 --> 00:29:57,039
um however um this shows that there is

766
00:29:57,039 --> 00:29:59,440
the necessity

767
00:29:59,440 --> 00:30:02,559
since we are mapping a couple of vcard

768
00:30:02,559 --> 00:30:04,960
of distinct vcard properties into the

769
00:30:04,960 --> 00:30:07,039
same object type in

770
00:30:07,039 --> 00:30:09,600
in js calendar and and using the label

771
00:30:09,600 --> 00:30:11,200
in the current mapping document clearly

772
00:30:11,200 --> 00:30:12,880
shows that we are lacking

773
00:30:12,880 --> 00:30:14,720
a way to uh

774
00:30:14,720 --> 00:30:17,039
convey to to um

775
00:30:17,039 --> 00:30:19,440
to keep the information which property

776
00:30:19,440 --> 00:30:20,960
was mapped to where

777
00:30:20,960 --> 00:30:22,880
so i'd rather

778
00:30:22,880 --> 00:30:25,279
suggest we look into defining a january

779
00:30:25,279 --> 00:30:26,320
scheme

780
00:30:26,320 --> 00:30:30,159
where we can define for um

781
00:30:30,159 --> 00:30:32,480
for these situations which property

782
00:30:32,480 --> 00:30:37,039
mapped to where this could be um

783
00:30:37,039 --> 00:30:40,159
an extension property on on the js

784
00:30:40,159 --> 00:30:42,960
calendar object type um

785
00:30:42,960 --> 00:30:45,600
sorry the js contact object type which

786
00:30:45,600 --> 00:30:48,080
like tells okay i came from this vcard

787
00:30:48,080 --> 00:30:50,480
property

788
00:30:50,480 --> 00:30:52,080
or probably we come up with other

789
00:30:52,080 --> 00:30:54,640
schemes but i would say i would not use

790
00:30:54,640 --> 00:30:56,480
um

791
00:30:56,480 --> 00:30:59,840
free text values to

792
00:30:59,919 --> 00:31:02,000
to to use that especially not something

793
00:31:02,000 --> 00:31:05,120
that's shown to the user any opinions on

794
00:31:05,120 --> 00:31:07,919
that i strongly agree

795
00:31:07,919 --> 00:31:10,640
keep the the user and the structure

796
00:31:10,640 --> 00:31:12,640
separate you use the data instructions

797
00:31:12,640 --> 00:31:14,720
separate okay so what it shows that we

798
00:31:14,720 --> 00:31:17,120
are lacking this uh this

799
00:31:17,120 --> 00:31:19,440
this way to um

800
00:31:19,440 --> 00:31:20,399
keep

801
00:31:20,399 --> 00:31:22,960
information for the mapping

802
00:31:22,960 --> 00:31:25,600
and this

803
00:31:25,919 --> 00:31:28,399
we have the exact same situation in

804
00:31:28,399 --> 00:31:30,720
chairs calendar anyway

805
00:31:30,720 --> 00:31:31,519
so

806
00:31:31,519 --> 00:31:34,960
at the best we can come up with

807
00:31:34,960 --> 00:31:36,880
with a scheme that's appropriate for

808
00:31:36,880 --> 00:31:37,679
both

809
00:31:37,679 --> 00:31:38,960
mappings

810
00:31:38,960 --> 00:31:40,799
and i highly insist that we should use

811
00:31:40,799 --> 00:31:42,399
one scheme for both

812
00:31:42,399 --> 00:31:44,559
uh

813
00:31:44,840 --> 00:31:47,120
performance all right that's um that's

814
00:31:47,120 --> 00:31:48,720
the last slide

815
00:31:48,720 --> 00:31:50,080
are there any

816
00:31:50,080 --> 00:31:54,480
topics to discuss in terms of js contact

817
00:31:57,919 --> 00:31:58,960
in the queue

818
00:31:58,960 --> 00:32:01,600
nope nobody's in the key right so then

819
00:32:01,600 --> 00:32:04,159
i'd say that's it for cheers contact

820
00:32:04,159 --> 00:32:05,440
cool so

821
00:32:05,440 --> 00:32:07,039
you already said upfront that the plan

822
00:32:07,039 --> 00:32:08,559
is to have it ready for working group

823
00:32:08,559 --> 00:32:09,919
last call

824
00:32:09,919 --> 00:32:10,720
um

825
00:32:10,720 --> 00:32:12,720
by next atf are there any other

826
00:32:12,720 --> 00:32:15,120
intermediate steps we should be tracking

827
00:32:15,120 --> 00:32:17,279
along the way

828
00:32:17,279 --> 00:32:19,600
um

829
00:32:19,679 --> 00:32:21,679
i mean

830
00:32:21,679 --> 00:32:24,080
the next important step is to to do

831
00:32:24,080 --> 00:32:25,760
interop testing

832
00:32:25,760 --> 00:32:27,679
um i don't know if that

833
00:32:27,679 --> 00:32:30,799
if that should be a step within itf that

834
00:32:30,799 --> 00:32:34,158
we should track um

835
00:32:34,320 --> 00:32:36,480
there's also a virtual cal connect

836
00:32:36,480 --> 00:32:37,760
coming up somewhere in between isn't

837
00:32:37,760 --> 00:32:39,039
there so

838
00:32:39,039 --> 00:32:41,919
yes um i think that's next month already

839
00:32:41,919 --> 00:32:44,559
so we might not be ready to do that

840
00:32:44,559 --> 00:32:46,159
though

841
00:32:46,159 --> 00:32:48,399
cool

842
00:32:48,399 --> 00:32:50,320
it's may okay

843
00:32:50,320 --> 00:32:52,960
that could work

844
00:32:54,399 --> 00:32:56,559
so do we are we going to do an interim

845
00:32:56,559 --> 00:32:58,240
then at calco next

846
00:32:58,240 --> 00:32:59,919
we probably will do an interim meeting

847
00:32:59,919 --> 00:33:03,279
at cal connect yeah okay we normally do

848
00:33:03,279 --> 00:33:06,279
great

849
00:33:10,559 --> 00:33:12,000
cool all right thanks robert thank you

850
00:33:12,000 --> 00:33:14,240
um

851
00:33:15,440 --> 00:33:17,360
let's see

852
00:33:17,360 --> 00:33:19,760
we're going to maybe do do some more of

853
00:33:19,760 --> 00:33:23,120
mike's stuff just so that we don't have

854
00:33:23,120 --> 00:33:25,840
all the same person all the same time

855
00:33:25,840 --> 00:33:30,000
so let's maybe skip ahead in the agenda

856
00:33:30,000 --> 00:33:30,960
to

857
00:33:30,960 --> 00:33:34,679
what do we got their tasks

858
00:33:48,000 --> 00:33:50,240
now mike i can hand you control of the

859
00:33:50,240 --> 00:33:51,840
slides if you like you should now be

860
00:33:51,840 --> 00:33:52,880
able to

861
00:33:52,880 --> 00:33:54,720
to drive it yourself

862
00:33:54,720 --> 00:33:57,360
oh well arrows

863
00:33:57,360 --> 00:33:58,960
yep

864
00:33:58,960 --> 00:34:01,840
let me try that

865
00:34:05,120 --> 00:34:07,840
nothing's happening

866
00:34:07,840 --> 00:34:10,639
oh you did that

867
00:34:10,639 --> 00:34:12,879
amazing

868
00:34:12,879 --> 00:34:14,480
technology

869
00:34:14,480 --> 00:34:16,320
isn't that great

870
00:34:16,320 --> 00:34:18,639
so um

871
00:34:18,639 --> 00:34:20,719
the the um

872
00:34:20,719 --> 00:34:22,399
when we when we

873
00:34:22,399 --> 00:34:23,440
when we

874
00:34:23,440 --> 00:34:25,679
were originally putting this this uh

875
00:34:25,679 --> 00:34:27,440
this spec together we were still

876
00:34:27,440 --> 00:34:29,520
frightened of using new components some

877
00:34:29,520 --> 00:34:30,800
reason

878
00:34:30,800 --> 00:34:32,239
um

879
00:34:32,239 --> 00:34:34,560
and i was taking a look through it

880
00:34:34,560 --> 00:34:35,679
um

881
00:34:35,679 --> 00:34:36,719
once i

882
00:34:36,719 --> 00:34:38,560
resurrected this thing

883
00:34:38,560 --> 00:34:40,560
and realized that

884
00:34:40,560 --> 00:34:42,719
a lot of the stuff we've done was to try

885
00:34:42,719 --> 00:34:44,159
and group

886
00:34:44,159 --> 00:34:46,560
properties together

887
00:34:46,560 --> 00:34:49,119
uh so you could actually express more

888
00:34:49,119 --> 00:34:51,520
information about about something and in

889
00:34:51,520 --> 00:34:53,520
particular it was

890
00:34:53,520 --> 00:34:54,879
adding

891
00:34:54,879 --> 00:34:59,119
uh more information about uh

892
00:34:59,119 --> 00:35:00,839
status and

893
00:35:00,839 --> 00:35:02,560
um

894
00:35:02,560 --> 00:35:04,880
and and attendees said the actors in the

895
00:35:04,880 --> 00:35:07,440
in in a task

896
00:35:07,440 --> 00:35:08,560
so it

897
00:35:08,560 --> 00:35:10,560
um

898
00:35:10,560 --> 00:35:12,480
i decided to

899
00:35:12,480 --> 00:35:15,359
invent a v status component which would

900
00:35:15,359 --> 00:35:18,400
be a we should encapsulate information

901
00:35:18,400 --> 00:35:21,839
about about a status and um

902
00:35:21,839 --> 00:35:23,520
probably the three main

903
00:35:23,520 --> 00:35:25,920
um things is is to have

904
00:35:25,920 --> 00:35:29,520
with that would go within a v status are

905
00:35:29,520 --> 00:35:32,079
the current status property

906
00:35:32,079 --> 00:35:33,040
um

907
00:35:33,040 --> 00:35:34,960
most likely a comment because that's

908
00:35:34,960 --> 00:35:37,119
what it was largely about is what what

909
00:35:37,119 --> 00:35:39,440
happened what why did the status change

910
00:35:39,440 --> 00:35:41,040
or whatever

911
00:35:41,040 --> 00:35:42,400
and a um

912
00:35:42,400 --> 00:35:44,880
and a dates down

913
00:35:44,880 --> 00:35:46,800
um there could be other

914
00:35:46,800 --> 00:35:48,800
other properties but those are the main

915
00:35:48,800 --> 00:35:50,079
ones that we were trying to group

916
00:35:50,079 --> 00:35:51,280
together

917
00:35:51,280 --> 00:35:52,640
um

918
00:35:52,640 --> 00:35:55,200
the idea with with this uh all these

919
00:35:55,200 --> 00:35:57,280
updates was originally was to try and

920
00:35:57,280 --> 00:35:59,119
express things

921
00:35:59,119 --> 00:36:02,000
that go on in in in

922
00:36:02,000 --> 00:36:03,839
processes and

923
00:36:03,839 --> 00:36:06,000
tracking this in particular interest for

924
00:36:06,000 --> 00:36:08,400
the the other author was was of cm

925
00:36:08,400 --> 00:36:09,520
because he's

926
00:36:09,520 --> 00:36:12,079
dhl was was tracking packages and things

927
00:36:12,079 --> 00:36:13,280
of that kind

928
00:36:13,280 --> 00:36:15,839
through a system so um

929
00:36:15,839 --> 00:36:18,400
so i've i actually added a v status

930
00:36:18,400 --> 00:36:20,240
property to the last one i published and

931
00:36:20,240 --> 00:36:22,560
this is largely what what is likely to

932
00:36:22,560 --> 00:36:25,839
change as a result and mostly it's

933
00:36:25,839 --> 00:36:28,560
um did i jump to there

934
00:36:28,560 --> 00:36:30,480
no

935
00:36:30,480 --> 00:36:32,720
um

936
00:36:33,040 --> 00:36:36,800
we had a reason parameter which was

937
00:36:36,800 --> 00:36:39,040
indicating why there was a

938
00:36:39,040 --> 00:36:40,880
change in status

939
00:36:40,880 --> 00:36:42,640
um

940
00:36:42,640 --> 00:36:44,720
so that could be a new

941
00:36:44,720 --> 00:36:46,720
property i was sort of toying in my mind

942
00:36:46,720 --> 00:36:48,240
over the last couple would that just be

943
00:36:48,240 --> 00:36:49,839
a summary or could we actually have a

944
00:36:49,839 --> 00:36:51,440
new reason

945
00:36:51,440 --> 00:36:52,720
property

946
00:36:52,720 --> 00:36:54,640
um for

947
00:36:54,640 --> 00:36:57,520
tying these things together in

948
00:36:57,520 --> 00:36:59,119
with an attendee

949
00:36:59,119 --> 00:37:00,640
i think the thing to use there is the

950
00:37:00,640 --> 00:37:02,000
participant

951
00:37:02,000 --> 00:37:04,480
component and um

952
00:37:04,480 --> 00:37:05,440
the

953
00:37:05,440 --> 00:37:07,040
what was the event pub draft and a

954
00:37:07,040 --> 00:37:10,160
comment on the rfc which defines the

955
00:37:10,160 --> 00:37:14,000
participant component has a way of tying

956
00:37:14,000 --> 00:37:16,480
it to the attendee so you can sort of

957
00:37:16,480 --> 00:37:19,280
add metadata about attendees though

958
00:37:19,280 --> 00:37:21,760
that's already covered so um if we

959
00:37:21,760 --> 00:37:24,079
invent a new reason

960
00:37:24,079 --> 00:37:25,920
property you should just be

961
00:37:25,920 --> 00:37:28,000
free text

962
00:37:28,000 --> 00:37:30,240
um i think that covers what was being

963
00:37:30,240 --> 00:37:32,079
done this draft it's it's certainly

964
00:37:32,079 --> 00:37:34,079
simpler in pro

965
00:37:34,079 --> 00:37:34,839
in

966
00:37:34,839 --> 00:37:37,760
concept um i did wonder the summary

967
00:37:37,760 --> 00:37:39,680
meant the same thing but i don't i don't

968
00:37:39,680 --> 00:37:42,879
think it's quite the same thing

969
00:37:43,520 --> 00:37:45,920
um

970
00:37:48,240 --> 00:37:50,720
and we had a modified parameter

971
00:37:50,720 --> 00:37:53,920
which really is just a dt stamp so that

972
00:37:53,920 --> 00:37:56,800
that would disappear

973
00:37:56,880 --> 00:37:59,200
um

974
00:38:00,560 --> 00:38:03,040
this seems to be there's a delay or i

975
00:38:03,040 --> 00:38:05,520
don't know here we go

976
00:38:05,520 --> 00:38:07,680
um

977
00:38:07,680 --> 00:38:09,760
and in the text of the

978
00:38:09,760 --> 00:38:11,599
thing it defines uh the idea of a

979
00:38:11,599 --> 00:38:14,640
substate parameter

980
00:38:14,640 --> 00:38:16,800
and and has some text around that i

981
00:38:16,800 --> 00:38:18,240
think again that would just be turned

982
00:38:18,240 --> 00:38:20,480
into into a property to go inside the v

983
00:38:20,480 --> 00:38:23,040
status

984
00:38:28,560 --> 00:38:30,160
take two presses

985
00:38:30,160 --> 00:38:32,079
and the attendee changes yeah these are

986
00:38:32,079 --> 00:38:33,520
just i mean there's so many slides

987
00:38:33,520 --> 00:38:35,599
because these are partly my my noting

988
00:38:35,599 --> 00:38:37,119
this stuff down as i went through the

989
00:38:37,119 --> 00:38:37,839
thing

990
00:38:37,839 --> 00:38:38,880
um

991
00:38:38,880 --> 00:38:41,440
again as i said with the 10d we just use

992
00:38:41,440 --> 00:38:43,200
the participant component and show

993
00:38:43,200 --> 00:38:45,359
everything inside that which means we

994
00:38:45,359 --> 00:38:46,560
get rid of

995
00:38:46,560 --> 00:38:47,440
this

996
00:38:47,440 --> 00:38:50,000
group parameter that we were we

997
00:38:50,000 --> 00:38:52,560
invented

998
00:38:53,120 --> 00:38:55,280
[Music]

999
00:38:55,280 --> 00:38:57,680
uh there we go

1000
00:38:57,680 --> 00:39:00,640
uh we had yes and we had some

1001
00:39:00,640 --> 00:39:02,640
changes section 142 was changed to

1002
00:39:02,640 --> 00:39:04,400
comment which to add

1003
00:39:04,400 --> 00:39:06,720
um

1004
00:39:06,720 --> 00:39:08,480
some of the bits and pieces that were

1005
00:39:08,480 --> 00:39:10,160
before with grouping we don't need that

1006
00:39:10,160 --> 00:39:12,640
anymore so that section would just

1007
00:39:12,640 --> 00:39:15,200
disappear this way

1008
00:39:15,200 --> 00:39:17,200
um

1009
00:39:17,200 --> 00:39:20,879
again another section that would drop

1010
00:39:21,760 --> 00:39:23,520
and that was a quick first pass that i

1011
00:39:23,520 --> 00:39:25,760
shoved in there um

1012
00:39:25,760 --> 00:39:27,599
before i put to see what it looks like

1013
00:39:27,599 --> 00:39:29,760
it'll need some updating if to add the

1014
00:39:29,760 --> 00:39:33,119
reason properly but uh

1015
00:39:34,560 --> 00:39:37,280
apart from that

1016
00:39:37,280 --> 00:39:39,920
it greatly simplifies the spec

1017
00:39:39,920 --> 00:39:41,520
and um

1018
00:39:41,520 --> 00:39:43,440
and the other question was

1019
00:39:43,440 --> 00:39:45,440
do we need to do a v calendar mapping

1020
00:39:45,440 --> 00:39:47,920
because some of this uh js canon i think

1021
00:39:47,920 --> 00:39:51,040
some of this stuff is um referred to in

1022
00:39:51,040 --> 00:39:54,240
the js calendar mapping

1023
00:39:54,320 --> 00:39:56,000
so that was another reason i was trying

1024
00:39:56,000 --> 00:39:58,800
to get this thing um moved along

1025
00:39:58,800 --> 00:40:00,960
for that

1026
00:40:00,960 --> 00:40:02,640
and

1027
00:40:02,640 --> 00:40:04,480
let's just take two button presses to

1028
00:40:04,480 --> 00:40:06,160
get something to happen or maybe i've

1029
00:40:06,160 --> 00:40:07,280
hit the end

1030
00:40:07,280 --> 00:40:09,440
maybe that's the end

1031
00:40:09,440 --> 00:40:12,560
so that's that's uh that's um

1032
00:40:12,560 --> 00:40:14,800
where my thoughts were going

1033
00:40:14,800 --> 00:40:17,440
it's adding the b status just seems to

1034
00:40:17,440 --> 00:40:20,079
making it a lot cleaner and simpler

1035
00:40:20,079 --> 00:40:24,640
all right ken did you want to pop up

1036
00:40:24,640 --> 00:40:27,520
this is ken again yes yeah so mike um

1037
00:40:27,520 --> 00:40:29,440
if my recollection is is correct a lot

1038
00:40:29,440 --> 00:40:32,560
of those parameters were just mirroring

1039
00:40:32,560 --> 00:40:33,839
properties

1040
00:40:33,839 --> 00:40:37,680
at a per attendee basis correct

1041
00:40:37,680 --> 00:40:40,079
they were they were largely to try

1042
00:40:40,079 --> 00:40:41,599
they would the thing i wanted to try and

1043
00:40:41,599 --> 00:40:43,359
get rid of was that group parameter

1044
00:40:43,359 --> 00:40:45,359
which is which is to try and

1045
00:40:45,359 --> 00:40:48,480
group things together understood

1046
00:40:48,480 --> 00:40:50,880
yep basically i was going to say i'm all

1047
00:40:50,880 --> 00:40:52,640
in favor of moving

1048
00:40:52,640 --> 00:40:54,160
these per

1049
00:40:54,160 --> 00:40:56,079
uh participant

1050
00:40:56,079 --> 00:40:57,520
parameters

1051
00:40:57,520 --> 00:40:59,119
into properties within participant

1052
00:40:59,119 --> 00:41:02,720
itself and same thing with v status

1053
00:41:02,720 --> 00:41:04,000
as far as

1054
00:41:04,000 --> 00:41:06,400
where to put the mapping

1055
00:41:06,400 --> 00:41:08,079
my gut is

1056
00:41:08,079 --> 00:41:08,960
we should

1057
00:41:08,960 --> 00:41:10,319
this is we're gonna have some churn on

1058
00:41:10,319 --> 00:41:12,319
this draft so my gut is to put the

1059
00:41:12,319 --> 00:41:14,880
mapping in this draft and pull it out of

1060
00:41:14,880 --> 00:41:16,560
what robert's currently working on or

1061
00:41:16,560 --> 00:41:18,319
you and robert are currently working on

1062
00:41:18,319 --> 00:41:21,520
so at least we have a example of how

1063
00:41:21,520 --> 00:41:26,480
future specs need to include a mapping

1064
00:41:28,160 --> 00:41:29,440
that makes yeah that makes sense and

1065
00:41:29,440 --> 00:41:31,119
that's why i asked the question

1066
00:41:31,119 --> 00:41:33,040
you know the relations draft is so far

1067
00:41:33,040 --> 00:41:35,119
along it didn't seem to make sense there

1068
00:41:35,119 --> 00:41:38,240
but this one is not quite that far

1069
00:41:38,240 --> 00:41:39,520
right

1070
00:41:39,520 --> 00:41:41,119
so

1071
00:41:41,119 --> 00:41:43,440
i'm happy to add a section

1072
00:41:43,440 --> 00:41:45,680
on

1073
00:41:47,440 --> 00:41:48,560
um

1074
00:41:48,560 --> 00:41:50,079
so

1075
00:41:50,079 --> 00:41:51,599
i'm not sure

1076
00:41:51,599 --> 00:41:53,839
what mapping the

1077
00:41:53,839 --> 00:41:55,920
draft currently discussed uh would

1078
00:41:55,920 --> 00:41:58,079
include for participant is the idea that

1079
00:41:58,079 --> 00:41:59,599
it defines

1080
00:41:59,599 --> 00:42:01,680
but the all the mapping for the

1081
00:42:01,680 --> 00:42:04,160
participant or just the parts that are

1082
00:42:04,160 --> 00:42:07,839
relevant to this draft

1083
00:42:08,720 --> 00:42:11,040
probably parts that are relevant i think

1084
00:42:11,040 --> 00:42:12,319
what's going to hap this is going to run

1085
00:42:12,319 --> 00:42:14,000
in parallel with what we're doing with

1086
00:42:14,000 --> 00:42:16,480
with the the js calendar mapping so we

1087
00:42:16,480 --> 00:42:18,400
can probably work out

1088
00:42:18,400 --> 00:42:20,800
exactly what goes where

1089
00:42:20,800 --> 00:42:23,040
as we as we do the two

1090
00:42:23,040 --> 00:42:24,079
steps

1091
00:42:24,079 --> 00:42:25,839
that what that is

1092
00:42:25,839 --> 00:42:28,800
what i would uh appreciate um

1093
00:42:28,800 --> 00:42:31,680
and i would rather say the the general

1094
00:42:31,680 --> 00:42:33,920
mapping of the participant component to

1095
00:42:33,920 --> 00:42:37,119
js calendar and the other way around

1096
00:42:37,119 --> 00:42:39,680
should be in the js calendar icalendar

1097
00:42:39,680 --> 00:42:42,640
draft that we are working on um because

1098
00:42:42,640 --> 00:42:44,640
i think there should be there should be

1099
00:42:44,640 --> 00:42:48,160
one document uh that explains how

1100
00:42:48,160 --> 00:42:49,040
the

1101
00:42:49,040 --> 00:42:52,160
existing rfc8984

1102
00:42:52,160 --> 00:42:54,240
can be mapped to icalendar and the other

1103
00:42:54,240 --> 00:42:56,560
way around and any extension that then

1104
00:42:56,560 --> 00:42:59,680
should go into into other drafts

1105
00:42:59,680 --> 00:43:02,079
yeah my concern when i started on the

1106
00:43:02,079 --> 00:43:04,079
work with the js calendar mapping was i

1107
00:43:04,079 --> 00:43:06,400
realized that we were we had something

1108
00:43:06,400 --> 00:43:09,680
that was um related to this this

1109
00:43:09,680 --> 00:43:12,880
spec and i didn't want to see um

1110
00:43:12,880 --> 00:43:15,119
us end up hanging around waiting for

1111
00:43:15,119 --> 00:43:17,760
this spec or having to pull stuff out

1112
00:43:17,760 --> 00:43:19,520
so i think i think they're going to move

1113
00:43:19,520 --> 00:43:22,319
along together we'll figure out any um

1114
00:43:22,319 --> 00:43:24,880
okay great

1115
00:43:30,160 --> 00:43:31,359
all right

1116
00:43:31,359 --> 00:43:34,079
yeah one thing i'd like to to avoid is

1117
00:43:34,079 --> 00:43:34,960
that

1118
00:43:34,960 --> 00:43:37,200
um

1119
00:43:37,200 --> 00:43:41,359
the mapping introduced in the ical gs

1120
00:43:41,359 --> 00:43:44,880
format um translation some complexity

1121
00:43:44,880 --> 00:43:46,800
so that when we read the main document

1122
00:43:46,800 --> 00:43:48,400
we don't really understand where this

1123
00:43:48,400 --> 00:43:50,400
complexity come from

1124
00:43:50,400 --> 00:43:51,200
so

1125
00:43:51,200 --> 00:43:54,439
but um

1126
00:43:54,480 --> 00:43:56,640
that's uh that's the only thing i'm i'd

1127
00:43:56,640 --> 00:43:58,560
like to avoid but um

1128
00:43:58,560 --> 00:44:01,520
um a lot of i mean um

1129
00:44:01,520 --> 00:44:03,760
um a lot of the reference should be from

1130
00:44:03,760 --> 00:44:06,720
the main document which is the ical gs

1131
00:44:06,720 --> 00:44:10,160
but um i suppose we will still have some

1132
00:44:10,160 --> 00:44:12,079
small adaptation or

1133
00:44:12,079 --> 00:44:14,079
things like that

1134
00:44:14,079 --> 00:44:15,760
in that document

1135
00:44:15,760 --> 00:44:19,480
in the task document

1136
00:44:22,800 --> 00:44:25,520
yeah i i would like to see us reach a

1137
00:44:25,520 --> 00:44:27,440
point fairly soon

1138
00:44:27,440 --> 00:44:28,400
where

1139
00:44:28,400 --> 00:44:30,560
we have

1140
00:44:30,560 --> 00:44:32,560
every everything in

1141
00:44:32,560 --> 00:44:34,480
js calendar representable in our

1142
00:44:34,480 --> 00:44:36,720
calendar and vice versa and this

1143
00:44:36,720 --> 00:44:39,280
document's certainly part of that

1144
00:44:39,280 --> 00:44:40,800
and then get to the point where all new

1145
00:44:40,800 --> 00:44:43,119
documents just define both and we don't

1146
00:44:43,119 --> 00:44:45,119
have to we don't have a separate

1147
00:44:45,119 --> 00:44:47,839
mapping stage happening so the question

1148
00:44:47,839 --> 00:44:49,760
really is how many documents do we need

1149
00:44:49,760 --> 00:44:52,160
to complete that we we reach that

1150
00:44:52,160 --> 00:44:54,240
milestone where everything's

1151
00:44:54,240 --> 00:44:57,680
everything's representable in both

1152
00:44:57,760 --> 00:44:58,560
so

1153
00:44:58,560 --> 00:45:00,319
i don't really care which document each

1154
00:45:00,319 --> 00:45:02,640
thing goes in but it it may even be more

1155
00:45:02,640 --> 00:45:04,560
sensible for this one to not mention the

1156
00:45:04,560 --> 00:45:07,280
djs calendar at all and have the mapping

1157
00:45:07,280 --> 00:45:10,000
document be the one place that

1158
00:45:10,000 --> 00:45:11,680
gives us that basis yeah

1159
00:45:11,680 --> 00:45:13,440
i think that i think they'll come clear

1160
00:45:13,440 --> 00:45:15,520
as we work through the um

1161
00:45:15,520 --> 00:45:16,240
the

1162
00:45:16,240 --> 00:45:20,240
things we'll um but i mean it's only the

1163
00:45:20,240 --> 00:45:22,960
only thing it might make sense to have

1164
00:45:22,960 --> 00:45:24,240
the uh

1165
00:45:24,240 --> 00:45:25,119
the

1166
00:45:25,119 --> 00:45:27,119
show how the v status component is

1167
00:45:27,119 --> 00:45:32,160
mapped um in this spec but um

1168
00:45:32,160 --> 00:45:34,240
we can make that decision

1169
00:45:34,240 --> 00:45:36,879
down the road

1170
00:45:37,280 --> 00:45:38,480
cool

1171
00:45:38,480 --> 00:45:40,000
all right thanks mike

1172
00:45:40,000 --> 00:45:41,760
um anything else

1173
00:45:41,760 --> 00:45:44,319
on this document what's our expected

1174
00:45:44,319 --> 00:45:47,920
next step timing here

1175
00:45:47,920 --> 00:45:49,280
um

1176
00:45:49,280 --> 00:45:51,280
i i think that the first thing i can do

1177
00:45:51,280 --> 00:45:54,160
is is is is make those changes i i

1178
00:45:54,160 --> 00:45:59,040
outlined is is drop the um

1179
00:45:59,040 --> 00:46:02,400
the group and um modified parameters and

1180
00:46:02,400 --> 00:46:06,880
um create add a reasoned a reason

1181
00:46:06,880 --> 00:46:09,040
a reason property

1182
00:46:09,040 --> 00:46:12,160
and then redo the the spec along those

1183
00:46:12,160 --> 00:46:14,720
lines which shouldn't take very long

1184
00:46:14,720 --> 00:46:18,560
and i could bring i could i could

1185
00:46:18,560 --> 00:46:20,240
publish that draft

1186
00:46:20,240 --> 00:46:23,759
and then we can move from there

1187
00:46:24,240 --> 00:46:27,119
i'm i'm keen not to load you with

1188
00:46:27,119 --> 00:46:29,599
too many tasks all of which then take

1189
00:46:29,599 --> 00:46:30,960
longer because because we don't have an

1190
00:46:30,960 --> 00:46:32,400
ordering on them

1191
00:46:32,400 --> 00:46:34,960
so far they're all relatively

1192
00:46:34,960 --> 00:46:38,079
so far they're all relatively um

1193
00:46:38,079 --> 00:46:40,000
quick and easy things so at the very

1194
00:46:40,000 --> 00:46:41,440
least i should get this

1195
00:46:41,440 --> 00:46:43,839
now

1196
00:46:44,880 --> 00:46:47,119
cool

1197
00:46:47,599 --> 00:46:49,760
all right

1198
00:46:49,760 --> 00:46:51,760
so just one thing is that we have the

1199
00:46:51,760 --> 00:46:54,400
explanation how to move from v car to gs

1200
00:46:54,400 --> 00:46:55,520
uh

1201
00:46:55,520 --> 00:46:58,160
vtask to gstask

1202
00:46:58,160 --> 00:47:00,240
the other thing is that we do have a gs

1203
00:47:00,240 --> 00:47:02,560
example in the document and i think it's

1204
00:47:02,560 --> 00:47:03,680
also

1205
00:47:03,680 --> 00:47:05,760
good that someone that is only

1206
00:47:05,760 --> 00:47:08,560
considering json is able to start from

1207
00:47:08,560 --> 00:47:10,560
that document as well

1208
00:47:10,560 --> 00:47:13,040
so if we have at least an example or

1209
00:47:13,040 --> 00:47:14,880
something

1210
00:47:14,880 --> 00:47:16,160
tangible

1211
00:47:16,160 --> 00:47:20,078
i think that would be great to have

1212
00:47:23,040 --> 00:47:25,839
cool

1213
00:47:34,240 --> 00:47:37,200
looking back at the agenda we've

1214
00:47:37,200 --> 00:47:38,960
moved through very fast so far we're

1215
00:47:38,960 --> 00:47:41,200
what 47 minutes in

1216
00:47:41,200 --> 00:47:42,559
we have

1217
00:47:42,559 --> 00:47:44,800
we've done the js contact work we've got

1218
00:47:44,800 --> 00:47:47,760
js calendar i calendar still to go

1219
00:47:47,760 --> 00:47:49,920
um and then there was i calendar series

1220
00:47:49,920 --> 00:47:52,960
and server side subscription and vpol

1221
00:47:52,960 --> 00:47:54,559
are drafts in progress but i don't think

1222
00:47:54,559 --> 00:47:56,800
we have slides for all of those so

1223
00:47:56,800 --> 00:47:58,480
we might skim over the remaining ones at

1224
00:47:58,480 --> 00:48:00,480
the end

1225
00:48:00,480 --> 00:48:02,640
uh

1226
00:48:02,640 --> 00:48:04,720
under that slide

1227
00:48:04,720 --> 00:48:08,919
put up the jazz calendar our calendar

1228
00:48:22,480 --> 00:48:24,559
all right so yeah like the previous

1229
00:48:24,559 --> 00:48:27,359
discussions already have shown um

1230
00:48:27,359 --> 00:48:30,640
we quite have the need for

1231
00:48:30,800 --> 00:48:33,359
defining finally defining on how to map

1232
00:48:33,359 --> 00:48:39,200
the gs the rfc8984 uh to i calendar

1233
00:48:39,200 --> 00:48:42,960
and that it's not being done is

1234
00:48:42,960 --> 00:48:45,280
to a good part also on me that um i

1235
00:48:45,280 --> 00:48:48,640
didn't have the bandwidth to work on it

1236
00:48:48,640 --> 00:48:49,760
but it now

1237
00:48:49,760 --> 00:48:51,839
it it clearly showed in the last weeks

1238
00:48:51,839 --> 00:48:54,400
uh already months actually that it's um

1239
00:48:54,400 --> 00:48:55,920
that we really should get this now out

1240
00:48:55,920 --> 00:48:58,880
of the door as soon as possible and um

1241
00:48:58,880 --> 00:49:02,720
that's now my top priority to do

1242
00:49:02,720 --> 00:49:05,520
next slide please

1243
00:49:06,160 --> 00:49:08,000
so

1244
00:49:08,000 --> 00:49:10,880
before going to the mapping we have

1245
00:49:10,880 --> 00:49:12,400
we have

1246
00:49:12,400 --> 00:49:15,359
an errata for 8984

1247
00:49:15,359 --> 00:49:17,760
i think i covered it on the next slide

1248
00:49:17,760 --> 00:49:20,079
we have implementations experimental

1249
00:49:20,079 --> 00:49:22,160
implementations of the mapping in cyprus

1250
00:49:22,160 --> 00:49:24,400
imap and betawork

1251
00:49:24,400 --> 00:49:26,160
in cyrus imac we actually have two

1252
00:49:26,160 --> 00:49:28,880
mappings the the one that

1253
00:49:28,880 --> 00:49:31,359
proprietary mapping using lots of x

1254
00:49:31,359 --> 00:49:34,640
properties in icalendar

1255
00:49:34,640 --> 00:49:36,480
that's very stable

1256
00:49:36,480 --> 00:49:38,400
but of course not the thing we want to

1257
00:49:38,400 --> 00:49:40,559
keep for the future

1258
00:49:40,559 --> 00:49:42,480
and there is an experimental mapping

1259
00:49:42,480 --> 00:49:44,800
that's not yet complete that i'm working

1260
00:49:44,800 --> 00:49:45,599
on

1261
00:49:45,599 --> 00:49:48,079
i do have the plan to

1262
00:49:48,079 --> 00:49:52,640
implement the standard mapping

1263
00:49:52,640 --> 00:49:55,359
outside of cyrus imap and

1264
00:49:55,359 --> 00:49:58,720
if the icalc project agrees to

1265
00:49:58,720 --> 00:50:00,960
integrate it directly in there

1266
00:50:00,960 --> 00:50:03,119
this should make it also possible for

1267
00:50:03,119 --> 00:50:04,880
other applications that are building on

1268
00:50:04,880 --> 00:50:06,319
lib ical to

1269
00:50:06,319 --> 00:50:10,319
use the mapping out of the box

1270
00:50:11,760 --> 00:50:13,680
for the mapping we now have a better

1271
00:50:13,680 --> 00:50:15,920
understanding on where we where the

1272
00:50:15,920 --> 00:50:18,960
formats are lacking to map in one or the

1273
00:50:18,960 --> 00:50:20,640
other direction and i'm going to present

1274
00:50:20,640 --> 00:50:23,359
uh quite a number of properties uh that

1275
00:50:23,359 --> 00:50:25,760
we want to introduce for either icon.js

1276
00:50:25,760 --> 00:50:28,000
calendar today

1277
00:50:28,000 --> 00:50:30,480
and apart from that we do have the need

1278
00:50:30,480 --> 00:50:31,680
to

1279
00:50:31,680 --> 00:50:34,559
still then decide on how to map

1280
00:50:34,559 --> 00:50:37,119
properties for for which there is for

1281
00:50:37,119 --> 00:50:39,040
which we have no specific

1282
00:50:39,040 --> 00:50:41,040
mapping defined

1283
00:50:41,040 --> 00:50:43,280
mainly that's going to be

1284
00:50:43,280 --> 00:50:46,079
the x properties that we see might see

1285
00:50:46,079 --> 00:50:48,880
in icalendar and it and the equivalent

1286
00:50:48,880 --> 00:50:50,559
of those are the

1287
00:50:50,559 --> 00:50:52,000
vendored

1288
00:50:52,000 --> 00:50:54,000
properties in the vendor extension

1289
00:50:54,000 --> 00:50:56,000
properties in js calendar

1290
00:50:56,000 --> 00:50:58,800
which look like uh like a domain name

1291
00:50:58,800 --> 00:51:00,880
controlled by the vendor slash and then

1292
00:51:00,880 --> 00:51:02,559
the property name

1293
00:51:02,559 --> 00:51:03,839
um

1294
00:51:03,839 --> 00:51:05,119
we definitely need to come up with

1295
00:51:05,119 --> 00:51:07,200
something to map these and

1296
00:51:07,200 --> 00:51:08,720
that's also what has been discussed

1297
00:51:08,720 --> 00:51:11,200
before already shortly uh for vcard

1298
00:51:11,200 --> 00:51:14,880
where we have the exact same need

1299
00:51:14,880 --> 00:51:17,119
um next slide please

1300
00:51:17,119 --> 00:51:19,760
so the rata very shortly um

1301
00:51:19,760 --> 00:51:22,640
there was a mistake in the definition of

1302
00:51:22,640 --> 00:51:24,559
um so

1303
00:51:24,559 --> 00:51:26,240
let me step one

1304
00:51:26,240 --> 00:51:29,359
one step back so

1305
00:51:29,359 --> 00:51:30,160
in

1306
00:51:30,160 --> 00:51:33,200
by default a js event uh

1307
00:51:33,200 --> 00:51:35,040
the properties of a chase event all are

1308
00:51:35,040 --> 00:51:38,240
visible but you one can define

1309
00:51:38,240 --> 00:51:40,480
js event to be private in which case

1310
00:51:40,480 --> 00:51:42,160
only a subset

1311
00:51:42,160 --> 00:51:43,359
of the

1312
00:51:43,359 --> 00:51:46,480
of the properties are visible namely

1313
00:51:46,480 --> 00:51:48,960
there is no information included which

1314
00:51:48,960 --> 00:51:51,200
conveys the

1315
00:51:51,200 --> 00:51:54,079
the contexts or meanings um

1316
00:51:54,079 --> 00:51:56,240
of this event it's more that you know

1317
00:51:56,240 --> 00:51:58,480
when it happens um but you don't know

1318
00:51:58,480 --> 00:52:00,640
very much more than that

1319
00:52:00,640 --> 00:52:02,720
um and we uh

1320
00:52:02,720 --> 00:52:04,880
there is a list of properties that can

1321
00:52:04,880 --> 00:52:07,440
be shown for private events

1322
00:52:07,440 --> 00:52:09,040
uh but there was the mistake that we

1323
00:52:09,040 --> 00:52:11,520
didn't include all recurrence related

1324
00:52:11,520 --> 00:52:12,720
properties

1325
00:52:12,720 --> 00:52:14,720
um and we now added the errata to

1326
00:52:14,720 --> 00:52:16,640
include all recurrence properties so

1327
00:52:16,640 --> 00:52:17,760
that

1328
00:52:17,760 --> 00:52:20,160
if it's a recurring event

1329
00:52:20,160 --> 00:52:22,480
the the implementation that looks at the

1330
00:52:22,480 --> 00:52:24,559
private event can still know

1331
00:52:24,559 --> 00:52:26,240
for all occurrences when they are

1332
00:52:26,240 --> 00:52:28,559
occurring

1333
00:52:28,559 --> 00:52:31,280
the secondary router that we filed is

1334
00:52:31,280 --> 00:52:34,160
also related to recurrences

1335
00:52:34,160 --> 00:52:36,000
we mistakenly

1336
00:52:36,000 --> 00:52:37,760
constrained

1337
00:52:37,760 --> 00:52:39,200
that

1338
00:52:39,200 --> 00:52:42,400
events that have a recurrence id set so

1339
00:52:42,400 --> 00:52:44,240
which are an instance of a recurring

1340
00:52:44,240 --> 00:52:46,960
event must have a recurrence id timezone

1341
00:52:46,960 --> 00:52:49,119
set but that's wrong because an

1342
00:52:49,119 --> 00:52:50,400
occurrence

1343
00:52:50,400 --> 00:52:53,119
is an instance of a of a recurring event

1344
00:52:53,119 --> 00:52:55,119
in floating time still is in floating

1345
00:52:55,119 --> 00:52:57,359
time there is no time zone bound to that

1346
00:52:57,359 --> 00:52:59,200
so um

1347
00:52:59,200 --> 00:53:01,040
these are

1348
00:53:01,040 --> 00:53:03,200
i don't know about this exact status of

1349
00:53:03,200 --> 00:53:05,839
these if they are like um accepted

1350
00:53:05,839 --> 00:53:07,920
already or um

1351
00:53:07,920 --> 00:53:09,920
yeah

1352
00:53:09,920 --> 00:53:11,760
yes they are verified

1353
00:53:11,760 --> 00:53:15,839
that okay yeah thank you

1354
00:53:16,559 --> 00:53:18,559
um yeah

1355
00:53:18,559 --> 00:53:21,839
any comments on the errata

1356
00:53:21,839 --> 00:53:25,680
i guess not so then next slide please

1357
00:53:26,240 --> 00:53:28,400
all right and this brings me now to a

1358
00:53:28,400 --> 00:53:30,640
couple of property definitions that we

1359
00:53:30,640 --> 00:53:32,800
would want to discuss um

1360
00:53:32,800 --> 00:53:34,880
that have been shown to be lacking

1361
00:53:34,880 --> 00:53:36,640
currently in the js calendar icalendar

1362
00:53:36,640 --> 00:53:38,480
mapping so the first thing is the

1363
00:53:38,480 --> 00:53:41,599
geoproperty in icalendar the property in

1364
00:53:41,599 --> 00:53:45,040
icalendar is defined to be

1365
00:53:45,040 --> 00:53:47,920
two float values specifying latitude and

1366
00:53:47,920 --> 00:53:51,760
longitude separated by a semicolon

1367
00:53:51,760 --> 00:53:55,440
however in js calendar we allow

1368
00:53:55,440 --> 00:53:58,400
we set the geoproperty to a geo uri

1369
00:53:58,400 --> 00:53:59,920
defined in

1370
00:53:59,920 --> 00:54:02,319
rfc 5870

1371
00:54:02,319 --> 00:54:03,599
and this is

1372
00:54:03,599 --> 00:54:05,520
this is much richer information about

1373
00:54:05,520 --> 00:54:06,960
the geolocation

1374
00:54:06,960 --> 00:54:09,760
so what we propose is that

1375
00:54:09,760 --> 00:54:10,720
that

1376
00:54:10,720 --> 00:54:11,520
we

1377
00:54:11,520 --> 00:54:13,839
extend the value types allowed for the

1378
00:54:13,839 --> 00:54:16,640
geoproperty to be a uri are restricted

1379
00:54:16,640 --> 00:54:19,759
to a geo uri

1380
00:54:20,160 --> 00:54:22,839
the alternative would be

1381
00:54:22,839 --> 00:54:26,160
to um

1382
00:54:26,160 --> 00:54:28,319
do not extend the value type of a

1383
00:54:28,319 --> 00:54:30,640
geoproperty and keep it with the two

1384
00:54:30,640 --> 00:54:31,760
floats

1385
00:54:31,760 --> 00:54:35,280
but at the high fidelity resolution in

1386
00:54:35,280 --> 00:54:36,839
the alt wrap

1387
00:54:36,839 --> 00:54:40,640
parameter however

1388
00:54:40,880 --> 00:54:42,799
it seems better to us to extend the

1389
00:54:42,799 --> 00:54:44,640
value type which breaks backward

1390
00:54:44,640 --> 00:54:47,520
compatibility with implementations than

1391
00:54:47,520 --> 00:54:50,240
having two probably conflicting values

1392
00:54:50,240 --> 00:54:54,319
in parameter and value of the property

1393
00:55:03,680 --> 00:55:07,240
yeah uri

1394
00:55:19,040 --> 00:55:20,559
is to stop people sitting in the back

1395
00:55:20,559 --> 00:55:22,400
right there's all these states

1396
00:55:22,400 --> 00:55:24,480
so this is jerk so it's basically a

1397
00:55:24,480 --> 00:55:26,400
question if i understood it correctly so

1398
00:55:26,400 --> 00:55:28,000
what you propose is in order to have

1399
00:55:28,000 --> 00:55:30,960
some mapping set up to retrospectively

1400
00:55:30,960 --> 00:55:31,839
um

1401
00:55:31,839 --> 00:55:33,760
modify the icon on the spec in order to

1402
00:55:33,760 --> 00:55:35,359
be able to

1403
00:55:35,359 --> 00:55:37,200
use a more rich geo representation

1404
00:55:37,200 --> 00:55:40,160
within i can alright yes

1405
00:55:40,160 --> 00:55:41,119
um

1406
00:55:41,119 --> 00:55:42,960
okay i mean i would have a little bit to

1407
00:55:42,960 --> 00:55:44,799
concern your race by yourself with

1408
00:55:44,799 --> 00:55:46,559
respect to back backwards compatibility

1409
00:55:46,559 --> 00:55:48,480
and my question would be isn't it just

1410
00:55:48,480 --> 00:55:49,599
possible

1411
00:55:49,599 --> 00:55:53,520
um to um you know um derives the value

1412
00:55:53,520 --> 00:55:56,079
for the legacy geo property within i

1413
00:55:56,079 --> 00:55:57,359
calendar from that more rich

1414
00:55:57,359 --> 00:55:59,200
presentation

1415
00:55:59,200 --> 00:56:00,880
yeah that direction works the other

1416
00:56:00,880 --> 00:56:03,119
direction won't

1417
00:56:03,119 --> 00:56:03,760
you

1418
00:56:03,760 --> 00:56:04,559
okay

1419
00:56:04,559 --> 00:56:06,480
why is it so

1420
00:56:06,480 --> 00:56:08,319
for example if you look at the example

1421
00:56:08,319 --> 00:56:10,960
on the slide of for the downloads for

1422
00:56:10,960 --> 00:56:13,839
the uri the geo ui you see it has

1423
00:56:13,839 --> 00:56:16,160
latitude and longitude what you don't

1424
00:56:16,160 --> 00:56:17,760
see in the example it could also have

1425
00:56:17,760 --> 00:56:20,160
altitude so it's already one dimension

1426
00:56:20,160 --> 00:56:21,200
more

1427
00:56:21,200 --> 00:56:22,400
it also

1428
00:56:22,400 --> 00:56:24,559
allows to explicitly define the

1429
00:56:24,559 --> 00:56:26,400
coordinate reference system that's the

1430
00:56:26,400 --> 00:56:29,359
crs parameter and it also for example

1431
00:56:29,359 --> 00:56:31,920
allows to set the uncertainty so it's

1432
00:56:31,920 --> 00:56:34,720
like a 40 that's actually um the address

1433
00:56:34,720 --> 00:56:36,720
of a church in vienna okay which has

1434
00:56:36,720 --> 00:56:39,119
like a 40 meter um

1435
00:56:39,119 --> 00:56:41,200
radius but would it be allowed to leave

1436
00:56:41,200 --> 00:56:43,359
these parameters away or is that is it

1437
00:56:43,359 --> 00:56:46,880
specified in that um

1438
00:56:47,440 --> 00:56:50,160
okay yes they are optional how would we

1439
00:56:50,160 --> 00:56:52,400
preserve them then in eye calendar so

1440
00:56:52,400 --> 00:56:53,520
yeah okay you would lose them you're

1441
00:56:53,520 --> 00:56:56,000
right okay

1442
00:56:56,640 --> 00:56:57,440
so

1443
00:56:57,440 --> 00:57:01,520
this is barry uh the the problem with

1444
00:57:01,520 --> 00:57:03,520
you can add another

1445
00:57:03,520 --> 00:57:05,520
another parameter another field whatever

1446
00:57:05,520 --> 00:57:07,520
that that lets you specify the richer

1447
00:57:07,520 --> 00:57:09,599
information i don't think it's worth it

1448
00:57:09,599 --> 00:57:11,520
i think it's better to

1449
00:57:11,520 --> 00:57:13,520
break the backward compatibility in this

1450
00:57:13,520 --> 00:57:14,880
case

1451
00:57:14,880 --> 00:57:18,720
yeah yeah i i have to sorry alex just i

1452
00:57:18,720 --> 00:57:20,799
have to say the geo property rarely is

1453
00:57:20,799 --> 00:57:22,559
used anyway

1454
00:57:22,559 --> 00:57:24,000
so

1455
00:57:24,000 --> 00:57:25,280
yeah i'm also

1456
00:57:25,280 --> 00:57:28,400
in favor of your eyes um

1457
00:57:28,400 --> 00:57:29,920
that seems just

1458
00:57:29,920 --> 00:57:31,760
it's also the way you extend it is a is

1459
00:57:31,760 --> 00:57:33,119
a genetic way you extend other

1460
00:57:33,119 --> 00:57:34,799
properties so i mean it's kind of in

1461
00:57:34,799 --> 00:57:36,960
spirit of

1462
00:57:36,960 --> 00:57:40,640
original format right so yep um

1463
00:57:40,640 --> 00:57:43,040
um as far as

1464
00:57:43,040 --> 00:57:45,440
um

1465
00:57:45,599 --> 00:57:48,000
i i think saying that it has to be jio

1466
00:57:48,000 --> 00:57:50,960
uri is probably fine but maybe not

1467
00:57:50,960 --> 00:57:51,920
saying

1468
00:57:51,920 --> 00:57:54,720
completely that you know nothing else

1469
00:57:54,720 --> 00:57:56,799
can ever been be used there in the sense

1470
00:57:56,799 --> 00:57:58,720
of you know who knows maybe somebody

1471
00:57:58,720 --> 00:58:01,599
invents a better uri representation for

1472
00:58:01,599 --> 00:58:02,640
this

1473
00:58:02,640 --> 00:58:05,359
so in the gs deal but in the cheers

1474
00:58:05,359 --> 00:58:06,960
candle spec

1475
00:58:06,960 --> 00:58:11,440
we currently require a geo uri so for

1476
00:58:11,440 --> 00:58:14,400
if we allow here generic uris we

1477
00:58:14,400 --> 00:58:16,000
we would need to also define that in the

1478
00:58:16,000 --> 00:58:17,359
other spec

1479
00:58:17,359 --> 00:58:21,359
so maybe yeah sir

1480
00:58:24,160 --> 00:58:26,399
okay

1481
00:58:27,040 --> 00:58:28,960
all right that was very same thing jio

1482
00:58:28,960 --> 00:58:30,319
from his seat by the way for those of

1483
00:58:30,319 --> 00:58:32,079
you who are remote

1484
00:58:32,079 --> 00:58:33,440
okay

1485
00:58:33,440 --> 00:58:34,960
final remarks that

1486
00:58:34,960 --> 00:58:36,079
bringing a little bit of the devil's

1487
00:58:36,079 --> 00:58:37,760
advocate so

1488
00:58:37,760 --> 00:58:39,280
since you're arguing not so many people

1489
00:58:39,280 --> 00:58:41,040
are using it anyway yeah

1490
00:58:41,040 --> 00:58:43,119
so why um

1491
00:58:43,119 --> 00:58:46,000
you know doing the effort of uh you know

1492
00:58:46,000 --> 00:58:48,400
even improving it in a way i mean well i

1493
00:58:48,400 --> 00:58:49,359
think

1494
00:58:49,359 --> 00:58:51,839
if we do that we might it might get even

1495
00:58:51,839 --> 00:58:53,839
used more than it currently is for

1496
00:58:53,839 --> 00:58:56,960
example um apple have their have a next

1497
00:58:56,960 --> 00:58:59,440
property x appreciate location which

1498
00:58:59,440 --> 00:59:01,359
basically is like when you use their

1499
00:59:01,359 --> 00:59:04,079
clients and you select you give it

1500
00:59:04,079 --> 00:59:06,160
you enter an address and it picks it on

1501
00:59:06,160 --> 00:59:08,640
the apple maps that's going to be a geo

1502
00:59:08,640 --> 00:59:10,400
uri in the x approach structured

1503
00:59:10,400 --> 00:59:13,520
location so okay

1504
00:59:13,680 --> 00:59:15,359
i'll put myself in the queue here

1505
00:59:15,359 --> 00:59:16,839
because i have

1506
00:59:16,839 --> 00:59:19,920
a question upper layer here this

1507
00:59:19,920 --> 00:59:22,000
document is currently slated to be an

1508
00:59:22,000 --> 00:59:24,240
informational draft

1509
00:59:24,240 --> 00:59:27,280
so if we are planning to update

1510
00:59:27,280 --> 00:59:29,359
uh anything in our calendar we might

1511
00:59:29,359 --> 00:59:31,920
need to do a proposed standard level

1512
00:59:31,920 --> 00:59:34,240
document defining those changes to

1513
00:59:34,240 --> 00:59:35,599
icalendar

1514
00:59:35,599 --> 00:59:38,079
um as a separate document so is that the

1515
00:59:38,079 --> 00:59:40,079
intention here just to do it i think we

1516
00:59:40,079 --> 00:59:42,160
even had already agreed earlier that it

1517
00:59:42,160 --> 00:59:44,000
should be a standard document so maybe i

1518
00:59:44,000 --> 00:59:46,160
just didn't update the document properly

1519
00:59:46,160 --> 00:59:48,240
okay so is the mapping document going to

1520
00:59:48,240 --> 00:59:50,079
be a standard document in that case then

1521
00:59:50,079 --> 00:59:51,520
or are we going to do one that's just in

1522
00:59:51,520 --> 00:59:53,119
our calendar update and then build the

1523
00:59:53,119 --> 00:59:55,920
mapping document

1524
00:59:56,000 --> 00:59:58,160
cool

1525
00:59:58,880 --> 01:00:02,400
this is barry being as i'm

1526
01:00:02,640 --> 01:00:04,400
yeah being as i'm in the queue i'll just

1527
01:00:04,400 --> 01:00:05,760
i'll comment on that i think it should

1528
01:00:05,760 --> 01:00:07,359
be standard

1529
01:00:07,359 --> 01:00:09,520
uh standard track

1530
01:00:09,520 --> 01:00:11,680
the the other thing about usage of the

1531
01:00:11,680 --> 01:00:14,880
field is um that

1532
01:00:14,880 --> 01:00:17,680
if we had this more detailed information

1533
01:00:17,680 --> 01:00:20,720
i would i would make more use of it

1534
01:00:20,720 --> 01:00:23,200
so i can support that what what uh

1535
01:00:23,200 --> 01:00:25,920
robert just said because uh

1536
01:00:25,920 --> 01:00:27,359
well for instance i'm i don't want to

1537
01:00:27,359 --> 01:00:30,240
put my home address in my id card

1538
01:00:30,240 --> 01:00:32,799
but if i could use the uncertainty i

1539
01:00:32,799 --> 01:00:34,960
would be happy to put it in with a broad

1540
01:00:34,960 --> 01:00:37,359
level of uncertainty that that just got

1541
01:00:37,359 --> 01:00:39,200
it into my town without giving me the

1542
01:00:39,200 --> 01:00:41,520
specific address so

1543
01:00:41,520 --> 01:00:45,440
um just to uh specify this is for

1544
01:00:45,440 --> 01:00:49,040
calendar event information um but um we

1545
01:00:49,040 --> 01:00:50,400
might discuss the same thing for the

1546
01:00:50,400 --> 01:00:52,000
same yeah

1547
01:00:52,000 --> 01:00:55,040
same with both yeah

1548
01:00:55,760 --> 01:00:58,000
all right so then let's see

1549
01:00:58,000 --> 01:01:01,599
we go to the next property please

1550
01:01:02,240 --> 01:01:04,319
ah which is uh

1551
01:01:04,319 --> 01:01:07,119
the chainmap id property and parameter

1552
01:01:07,119 --> 01:01:08,839
um

1553
01:01:08,839 --> 01:01:11,520
so the chain map course base

1554
01:01:11,520 --> 01:01:13,040
specifications

1555
01:01:13,040 --> 01:01:16,000
uh defines the id type and the id type

1556
01:01:16,000 --> 01:01:18,240
uh is restricted to

1557
01:01:18,240 --> 01:01:23,119
um base64 url uh characters with a given

1558
01:01:23,119 --> 01:01:25,839
with the maximum length of 255

1559
01:01:25,839 --> 01:01:27,760
um octets

1560
01:01:27,760 --> 01:01:29,440
and uh

1561
01:01:29,440 --> 01:01:32,079
we currently do not have a standard way

1562
01:01:32,079 --> 01:01:32,880
to

1563
01:01:32,880 --> 01:01:36,000
preserve these in icalendar uh icalendar

1564
01:01:36,000 --> 01:01:38,799
has the notion of using uids typically

1565
01:01:38,799 --> 01:01:42,160
for unique identifiers but the unit uid

1566
01:01:42,160 --> 01:01:43,200
property

1567
01:01:43,200 --> 01:01:46,480
is defined as a utf-8

1568
01:01:46,480 --> 01:01:48,559
text value of any length and any

1569
01:01:48,559 --> 01:01:49,920
characters

1570
01:01:49,920 --> 01:01:51,359
so um

1571
01:01:51,359 --> 01:01:55,760
and we typically see these also being

1572
01:01:55,760 --> 01:01:56,559
non

1573
01:01:56,559 --> 01:01:59,200
uh chip id

1574
01:01:59,200 --> 01:02:03,119
strings in in practice so a couple of

1575
01:02:03,119 --> 01:02:05,520
implementations for example append to

1576
01:02:05,520 --> 01:02:09,520
each uid they append their um

1577
01:02:09,520 --> 01:02:10,960
their domain

1578
01:02:10,960 --> 01:02:11,760
um

1579
01:02:11,760 --> 01:02:13,760
if you're looking at the

1580
01:02:13,760 --> 01:02:17,039
v calendar from itf for this for this

1581
01:02:17,039 --> 01:02:18,960
session for example we see that it's

1582
01:02:18,960 --> 01:02:22,079
like um itf 113

1583
01:02:22,079 --> 01:02:24,559
and then like it's a safe id but it's

1584
01:02:24,559 --> 01:02:27,039
like a semantic id

1585
01:02:27,039 --> 01:02:29,920
so uh we are going to need a way to keep

1586
01:02:29,920 --> 01:02:33,280
the chain map id uh which typically are

1587
01:02:33,280 --> 01:02:34,400
only

1588
01:02:34,400 --> 01:02:36,880
which are always only scoped within a

1589
01:02:36,880 --> 01:02:39,359
jmap object like if you have

1590
01:02:39,359 --> 01:02:41,599
three locations they could be called

1591
01:02:41,599 --> 01:02:43,920
location one location two location three

1592
01:02:43,920 --> 01:02:47,280
in chain in in chase in a chase event so

1593
01:02:47,280 --> 01:02:49,440
we want to preserve these

1594
01:02:49,440 --> 01:02:50,400
um

1595
01:02:50,400 --> 01:02:52,559
and the suggestion is that we allow that

1596
01:02:52,559 --> 01:02:54,400
we lose both properties and parameters

1597
01:02:54,400 --> 01:02:57,440
that have this exact same

1598
01:02:57,440 --> 01:03:00,799
requirements as a chemical specification

1599
01:03:00,799 --> 01:03:02,799
um and for example as you see in the

1600
01:03:02,799 --> 01:03:05,680
example this is coming from an idea how

1601
01:03:05,680 --> 01:03:08,400
to map this to a relocation a v location

1602
01:03:08,400 --> 01:03:10,799
in i calendar has a uid property we

1603
01:03:10,799 --> 01:03:13,680
would just tack on the chain map id as a

1604
01:03:13,680 --> 01:03:16,160
parameter on the uid

1605
01:03:16,160 --> 01:03:18,559
which also allows us if

1606
01:03:18,559 --> 01:03:21,119
and the idea for example is if the uid

1607
01:03:21,119 --> 01:03:22,400
would be

1608
01:03:22,400 --> 01:03:26,319
a safe jmap id then we could just omit

1609
01:03:26,319 --> 01:03:28,480
this parameter at all and just use the

1610
01:03:28,480 --> 01:03:32,160
uid and the other way around

1611
01:03:33,039 --> 01:03:36,079
any thoughts to that

1612
01:03:36,960 --> 01:03:38,240
all right

1613
01:03:38,240 --> 01:03:41,279
so then next please

1614
01:03:43,200 --> 01:03:46,640
all right the content id parameter so um

1615
01:03:46,640 --> 01:03:47,760
uh

1616
01:03:47,760 --> 01:03:50,960
in js events or js calendar objects it's

1617
01:03:50,960 --> 01:03:55,599
also gs task we have link objects a link

1618
01:03:55,599 --> 01:03:59,039
yeah a link is basically an attachment

1619
01:03:59,039 --> 01:04:01,119
uh to the uh

1620
01:04:01,119 --> 01:04:04,960
to this up to this js event for example

1621
01:04:04,960 --> 01:04:06,160
um

1622
01:04:06,160 --> 01:04:07,280
in

1623
01:04:07,280 --> 01:04:11,359
js events we have we allow the text

1624
01:04:11,359 --> 01:04:14,240
description of a js event to not only be

1625
01:04:14,240 --> 01:04:16,319
plain text but also to be

1626
01:04:16,319 --> 01:04:18,160
html or

1627
01:04:18,160 --> 01:04:20,160
any

1628
01:04:20,160 --> 01:04:23,039
any subtype of the text

1629
01:04:23,039 --> 01:04:25,440
mime type actually

1630
01:04:25,440 --> 01:04:27,839
especially for html though

1631
01:04:27,839 --> 01:04:30,319
we tried to replicate in js calendar

1632
01:04:30,319 --> 01:04:32,319
what's being done in

1633
01:04:32,319 --> 01:04:34,799
my messages with content id so that you

1634
01:04:34,799 --> 01:04:39,280
can have that you can in an html

1635
01:04:39,280 --> 01:04:42,160
text can reference a content

1636
01:04:42,160 --> 01:04:45,200
an attachment by content id to embed the

1637
01:04:45,200 --> 01:04:48,160
html and for js calendar the idea is

1638
01:04:48,160 --> 01:04:49,280
that the

1639
01:04:49,280 --> 01:04:50,799
application

1640
01:04:50,799 --> 01:04:53,119
does that looks up in the links the

1641
01:04:53,119 --> 01:04:55,119
content id of the one referenced in the

1642
01:04:55,119 --> 01:04:56,880
html description

1643
01:04:56,880 --> 01:04:58,000
for that

1644
01:04:58,000 --> 01:05:00,319
we propose to introduce the content id

1645
01:05:00,319 --> 01:05:01,760
parameter

1646
01:05:01,760 --> 01:05:03,839
which follows the exact same semantics

1647
01:05:03,839 --> 01:05:05,200
as defined

1648
01:05:05,200 --> 01:05:10,319
for the cid scheme in the respective rfc

1649
01:05:11,119 --> 01:05:13,280
oh yeah and we suggest to

1650
01:05:13,280 --> 01:05:15,520
allow this to be attached to

1651
01:05:15,520 --> 01:05:18,000
attach and image properties

1652
01:05:18,000 --> 01:05:18,960
um

1653
01:05:18,960 --> 01:05:21,200
mike i'm not sure if that should also

1654
01:05:21,200 --> 01:05:23,119
go on a link

1655
01:05:23,119 --> 01:05:24,160
properly

1656
01:05:24,160 --> 01:05:25,119
um

1657
01:05:25,119 --> 01:05:27,359
probably

1658
01:05:27,359 --> 01:05:28,400
i don't know

1659
01:05:28,400 --> 01:05:31,200
up to you will

1660
01:05:35,680 --> 01:05:38,799
um no i'd have to dive look at the speck

1661
01:05:38,799 --> 01:05:40,640
and think about it

1662
01:05:40,640 --> 01:05:42,480
okay

1663
01:05:42,480 --> 01:05:45,839
uh any other thoughts on that

1664
01:05:45,839 --> 01:05:49,200
great so then uh continue please cool um

1665
01:05:49,200 --> 01:05:50,880
alexia and i will probably be coming

1666
01:05:50,880 --> 01:05:52,720
along and trying to attack a digest in

1667
01:05:52,720 --> 01:05:54,799
here as well with our large file

1668
01:05:54,799 --> 01:05:57,599
thing so that you can have a url and a

1669
01:05:57,599 --> 01:05:59,839
digest so you can say fetch it from over

1670
01:05:59,839 --> 01:06:03,038
here but here's what it should be

1671
01:06:03,280 --> 01:06:05,839
i suspect

1672
01:06:06,240 --> 01:06:08,240
all right and that brings us to what has

1673
01:06:08,240 --> 01:06:11,039
been brought up already in the relations

1674
01:06:11,039 --> 01:06:12,480
draft um

1675
01:06:12,480 --> 01:06:14,960
where i said we might risk duplicate

1676
01:06:14,960 --> 01:06:16,160
work here

1677
01:06:16,160 --> 01:06:16,960
so

1678
01:06:16,960 --> 01:06:19,359
um again the link object in a js

1679
01:06:19,359 --> 01:06:21,359
calendar object um

1680
01:06:21,359 --> 01:06:24,640
has a rel parameter which is restricted

1681
01:06:24,640 --> 01:06:25,760
to the

1682
01:06:25,760 --> 01:06:27,680
to the same iana

1683
01:06:27,680 --> 01:06:30,559
uh registered link relations that are

1684
01:06:30,559 --> 01:06:32,079
currently used

1685
01:06:32,079 --> 01:06:33,200
in

1686
01:06:33,200 --> 01:06:36,160
html contexts

1687
01:06:36,160 --> 01:06:38,480
so the really link relation parameter

1688
01:06:38,480 --> 01:06:42,079
that we propose here is

1689
01:06:42,079 --> 01:06:44,240
is again attached to an attach or image

1690
01:06:44,240 --> 01:06:46,880
properly to keep that information

1691
01:06:46,880 --> 01:06:48,640
i do see that

1692
01:06:48,640 --> 01:06:50,960
the link rel parameter that you

1693
01:06:50,960 --> 01:06:53,280
introduced mike in the

1694
01:06:53,280 --> 01:06:55,839
relations document allows for more it

1695
01:06:55,839 --> 01:07:00,559
also allows the value to be a uri or the

1696
01:07:00,559 --> 01:07:02,400
hard-coded value

1697
01:07:02,400 --> 01:07:03,839
source

1698
01:07:03,839 --> 01:07:06,720
so i do not know

1699
01:07:06,720 --> 01:07:09,440
how we best handle that

1700
01:07:09,440 --> 01:07:11,440
if

1701
01:07:11,440 --> 01:07:14,240
if if we go with the link rel definition

1702
01:07:14,240 --> 01:07:16,400
which could be perfectly fine we would

1703
01:07:16,400 --> 01:07:18,640
need to update the js

1704
01:07:18,640 --> 01:07:21,440
calendar link object that the

1705
01:07:21,440 --> 01:07:25,839
rel values are not restricted only to

1706
01:07:25,839 --> 01:07:28,559
the registry defined in a288

1707
01:07:28,559 --> 01:07:30,640
but i do not know if the

1708
01:07:30,640 --> 01:07:33,440
if that's appropriate um

1709
01:07:33,440 --> 01:07:34,960
because the source

1710
01:07:34,960 --> 01:07:37,680
string value relation

1711
01:07:37,680 --> 01:07:40,559
seems to be very explicitly defined that

1712
01:07:40,559 --> 01:07:43,520
the link is the event that this relation

1713
01:07:43,520 --> 01:07:45,839
is linking to but that's not something

1714
01:07:45,839 --> 01:07:47,920
one would

1715
01:07:47,920 --> 01:07:50,960
store in a link relation in js calendar

1716
01:07:50,960 --> 01:07:54,799
so i see that there might be some

1717
01:07:55,039 --> 01:07:56,559
that there might be semantics for the

1718
01:07:56,559 --> 01:07:58,720
link rail parameter that wouldn't be

1719
01:07:58,720 --> 01:08:00,880
covered by the current js calendar rail

1720
01:08:00,880 --> 01:08:03,119
i don't know how we should address this

1721
01:08:03,119 --> 01:08:03,760
i

1722
01:08:03,760 --> 01:08:05,119
i mean the

1723
01:08:05,119 --> 01:08:06,640
the point of

1724
01:08:06,640 --> 01:08:09,920
of the link relations is they point to

1725
01:08:09,920 --> 01:08:10,799
um

1726
01:08:10,799 --> 01:08:13,039
metadata about the

1727
01:08:13,039 --> 01:08:14,319
about the

1728
01:08:14,319 --> 01:08:16,880
object that's that's doing the pointing

1729
01:08:16,880 --> 01:08:18,880
so in the in this case this is just

1730
01:08:18,880 --> 01:08:20,158
adding

1731
01:08:20,158 --> 01:08:21,359
um

1732
01:08:21,359 --> 01:08:23,439
a link relation which says

1733
01:08:23,439 --> 01:08:26,479
this this is where the the event was

1734
01:08:26,479 --> 01:08:28,640
derived from this is the source of the

1735
01:08:28,640 --> 01:08:30,960
event it's a particular kind of

1736
01:08:30,960 --> 01:08:32,399
relationship

1737
01:08:32,399 --> 01:08:34,319
um and if you look through all the link

1738
01:08:34,319 --> 01:08:36,238
relations they're all they're all like

1739
01:08:36,238 --> 01:08:38,080
that and in fact eight eight two eight

1740
01:08:38,080 --> 01:08:40,080
eight is where it defines the idea of

1741
01:08:40,080 --> 01:08:42,640
using uri

1742
01:08:42,640 --> 01:08:46,880
um that's for unregistered um

1743
01:08:46,880 --> 01:08:48,319
link relations

1744
01:08:48,319 --> 01:08:49,600
so isn't that

1745
01:08:49,600 --> 01:08:53,279
that covered by the related to property

1746
01:08:53,279 --> 01:08:56,560
in js calendar and

1747
01:08:56,560 --> 01:09:00,238
likewise no no related related to point

1748
01:09:00,238 --> 01:09:04,000
um very specifically

1749
01:09:04,080 --> 01:09:04,839
used

1750
01:09:04,839 --> 01:09:06,799
uids

1751
01:09:06,799 --> 01:09:09,198
yeah but

1752
01:09:09,279 --> 01:09:10,238
i mean

1753
01:09:10,238 --> 01:09:12,399
yeah

1754
01:09:12,479 --> 01:09:14,479
yes you could you could i mean if we

1755
01:09:14,479 --> 01:09:16,960
started all over again from scratch we

1756
01:09:16,960 --> 01:09:18,479
probably wouldn't have had a related to

1757
01:09:18,479 --> 01:09:19,920
property we would have had just link

1758
01:09:19,920 --> 01:09:21,040
relations

1759
01:09:21,040 --> 01:09:22,158
and and

1760
01:09:22,158 --> 01:09:24,640
perhaps extended that enough to do what

1761
01:09:24,640 --> 01:09:26,479
related to does

1762
01:09:26,479 --> 01:09:30,080
but um related to exists

1763
01:09:30,080 --> 01:09:33,520
already did but um

1764
01:09:33,520 --> 01:09:36,000
so could it be that we are just using

1765
01:09:36,000 --> 01:09:38,880
the same words for different things then

1766
01:09:38,880 --> 01:09:41,120
um

1767
01:09:41,600 --> 01:09:43,040
yeah

1768
01:09:43,040 --> 01:09:45,279
i i very explicitly

1769
01:09:45,279 --> 01:09:48,479
said in the in the in to draft that you

1770
01:09:48,479 --> 01:09:49,359
don't

1771
01:09:49,359 --> 01:09:51,839
um use a link relation

1772
01:09:51,839 --> 01:09:54,400
to um

1773
01:09:54,400 --> 01:09:56,880
to handle what we treat as attachments

1774
01:09:56,880 --> 01:10:01,120
now specifically because attachments are

1775
01:10:01,120 --> 01:10:03,679
are not metadata as such they're just a

1776
01:10:03,679 --> 01:10:06,000
they're they're a bunch of data like the

1777
01:10:06,000 --> 01:10:08,080
agenda or something like that attached

1778
01:10:08,080 --> 01:10:09,040
to the

1779
01:10:09,040 --> 01:10:11,360
to the to the event and there's this

1780
01:10:11,360 --> 01:10:14,880
whole thing about managed attachments in

1781
01:10:14,880 --> 01:10:17,040
in

1782
01:10:17,760 --> 01:10:19,679
which which

1783
01:10:19,679 --> 01:10:21,199
sort of puts makes puts them on a

1784
01:10:21,199 --> 01:10:23,600
different level

1785
01:10:23,600 --> 01:10:24,400
okay

1786
01:10:24,400 --> 01:10:26,560
so um

1787
01:10:26,560 --> 01:10:28,400
and i don't know how that's going to be

1788
01:10:28,400 --> 01:10:30,800
you know i mean

1789
01:10:30,800 --> 01:10:32,400
the question is how that's going to work

1790
01:10:32,400 --> 01:10:34,000
in js calendar

1791
01:10:34,000 --> 01:10:36,000
what happens if you have a huge

1792
01:10:36,000 --> 01:10:39,199
object pointed to by a link

1793
01:10:39,199 --> 01:10:39,920
yes

1794
01:10:39,920 --> 01:10:42,840
it sounds to me as if um

1795
01:10:42,840 --> 01:10:46,480
the the link property and the link rel

1796
01:10:46,480 --> 01:10:49,520
parameter defined in the ical relations

1797
01:10:49,520 --> 01:10:51,679
uh draft

1798
01:10:51,679 --> 01:10:53,040
um

1799
01:10:53,040 --> 01:10:54,640
is something that

1800
01:10:54,640 --> 01:10:57,360
it might be currently missing in 3s

1801
01:10:57,360 --> 01:10:58,880
calendar

1802
01:10:58,880 --> 01:11:00,000
um

1803
01:11:00,000 --> 01:11:01,760
so that we might need to

1804
01:11:01,760 --> 01:11:04,000
introduce new properties to the gs

1805
01:11:04,000 --> 01:11:05,600
calendar

1806
01:11:05,600 --> 01:11:06,880
in

1807
01:11:06,880 --> 01:11:09,440
as part of publishing the iq relations

1808
01:11:09,440 --> 01:11:11,120
draft probably

1809
01:11:11,120 --> 01:11:12,719
um

1810
01:11:12,719 --> 01:11:15,360
and we might then need to figure out if

1811
01:11:15,360 --> 01:11:17,679
the link rel parameter should get

1812
01:11:17,679 --> 01:11:19,679
another name because it

1813
01:11:19,679 --> 01:11:21,920
obviously means something else

1814
01:11:21,920 --> 01:11:22,880
then the

1815
01:11:22,880 --> 01:11:27,199
relation parameter proposed here right

1816
01:11:27,199 --> 01:11:29,519
um

1817
01:11:33,440 --> 01:11:34,960
i mean the alternative would be to

1818
01:11:34,960 --> 01:11:37,120
define just the link rail or the link

1819
01:11:37,120 --> 01:11:38,800
relation parameter whatever the name

1820
01:11:38,800 --> 01:11:41,520
then is with the

1821
01:11:41,520 --> 01:11:44,320
value types that is required for the

1822
01:11:44,320 --> 01:11:45,679
relations

1823
01:11:45,679 --> 01:11:48,320
ical relations rfc

1824
01:11:48,320 --> 01:11:50,480
but

1825
01:11:51,120 --> 01:11:52,560
restricting

1826
01:11:52,560 --> 01:11:55,600
the values that make sense for a js can

1827
01:11:55,600 --> 01:11:57,280
the link object to

1828
01:11:57,280 --> 01:12:00,960
the ones defined at iana for

1829
01:12:00,960 --> 01:12:03,360
i say actual link relations in in the

1830
01:12:03,360 --> 01:12:07,480
meaning of what rfc8288

1831
01:12:14,159 --> 01:12:17,040
yes the js calendar spec uh currently

1832
01:12:17,040 --> 01:12:18,719
defines for link

1833
01:12:18,719 --> 01:12:20,000
object

1834
01:12:20,000 --> 01:12:21,199
um

1835
01:12:21,199 --> 01:12:23,840
for the rel property to be restricted to

1836
01:12:23,840 --> 01:12:26,719
the values defined by the link relations

1837
01:12:26,719 --> 01:12:29,600
rfc the 88288

1838
01:12:29,600 --> 01:12:31,760
i think that's that's exactly what link

1839
01:12:31,760 --> 01:12:36,239
rail is in in the relations draft

1840
01:12:36,239 --> 01:12:39,679
no um i see that in the in the draft

1841
01:12:39,679 --> 01:12:42,239
it defines also it allows the values of

1842
01:12:42,239 --> 01:12:44,640
eight to eight eight but it also allows

1843
01:12:44,640 --> 01:12:48,560
the value to be a new uri or to be

1844
01:12:48,560 --> 01:12:51,600
uh the hard-coded string source

1845
01:12:51,600 --> 01:12:53,280
if i misread it that's right now that's

1846
01:12:53,280 --> 01:12:55,760
the source the sources extend is is

1847
01:12:55,760 --> 01:13:00,760
registering a new value with h8288

1848
01:13:00,960 --> 01:13:02,800
yeah that's that's all it's doing it's

1849
01:13:02,800 --> 01:13:05,280
just it's just registering a new value

1850
01:13:05,280 --> 01:13:08,239
okay great um then that um that solves

1851
01:13:08,239 --> 01:13:11,120
that so the only remaining value not

1852
01:13:11,120 --> 01:13:13,679
covered in js calendar for rel would be

1853
01:13:13,679 --> 01:13:16,159
a generic uri

1854
01:13:16,159 --> 01:13:19,120
and i think um i'd have to look back at

1855
01:13:19,120 --> 01:13:21,520
8 28 but i think i think in eight to

1856
01:13:21,520 --> 01:13:23,600
eight eight it's that's that's how it

1857
01:13:23,600 --> 01:13:26,480
recommends you specify an unregistered

1858
01:13:26,480 --> 01:13:28,719
link relation

1859
01:13:28,719 --> 01:13:30,159
okay

1860
01:13:30,159 --> 01:13:31,920
okay i mean i i was pretty much

1861
01:13:31,920 --> 01:13:33,679
following the the eight to eight eight

1862
01:13:33,679 --> 01:13:35,280
spec

1863
01:13:35,280 --> 01:13:37,040
okay then then um

1864
01:13:37,040 --> 01:13:39,280
i might have seen an issue that is not

1865
01:13:39,280 --> 01:13:41,840
an issue so in in any case we should

1866
01:13:41,840 --> 01:13:43,760
just introduce one parameter and not

1867
01:13:43,760 --> 01:13:46,560
have two doing the same thing yeah the

1868
01:13:46,560 --> 01:13:48,000
link real parameter could be used

1869
01:13:48,000 --> 01:13:51,679
elsewhere uh it's just that i i

1870
01:13:51,679 --> 01:13:54,560
i think we need to look at how this is

1871
01:13:54,560 --> 01:13:55,920
gonna

1872
01:13:55,920 --> 01:13:58,840
work with things like managed

1873
01:13:58,840 --> 01:14:01,600
attachments okay

1874
01:14:01,600 --> 01:14:03,440
and that's more a matter of of looking

1875
01:14:03,440 --> 01:14:06,239
back at js calendar i guess because that

1876
01:14:06,239 --> 01:14:08,480
that sort of got got

1877
01:14:08,480 --> 01:14:10,000
ignored

1878
01:14:10,000 --> 01:14:13,040
in that there's no special attachment

1879
01:14:13,040 --> 01:14:14,960
um

1880
01:14:14,960 --> 01:14:16,320
you know object

1881
01:14:16,320 --> 01:14:18,239
so how do you figure out that you need

1882
01:14:18,239 --> 01:14:21,280
to actually manage it

1883
01:14:21,840 --> 01:14:24,320
yes agreed so um

1884
01:14:24,320 --> 01:14:26,640
if it if the link rail parameter then

1885
01:14:26,640 --> 01:14:30,000
comes um with the iq if the iq relations

1886
01:14:30,000 --> 01:14:32,320
document is published sooner than the js

1887
01:14:32,320 --> 01:14:34,239
kind of the icon mapping then

1888
01:14:34,239 --> 01:14:36,320
then you just use the link just use this

1889
01:14:36,320 --> 01:14:39,199
one for the mapping yeah

1890
01:14:39,199 --> 01:14:42,839
neil do you want to speak

1891
01:14:50,800 --> 01:14:51,600
for

1892
01:14:51,600 --> 01:14:55,360
links that are attachments

1893
01:14:55,440 --> 01:14:58,560
i think we say in the spec

1894
01:14:58,560 --> 01:15:02,800
that's only if rail equals attach

1895
01:15:02,800 --> 01:15:05,120
sorry rel of enclosure

1896
01:15:05,120 --> 01:15:06,960
i've got the spec in front of me now uh

1897
01:15:06,960 --> 01:15:08,480
linked with the relevant enclosure must

1898
01:15:08,480 --> 01:15:09,920
be considered by the client to be

1899
01:15:09,920 --> 01:15:11,920
attachments

1900
01:15:11,920 --> 01:15:14,159
so specifically that kind of link

1901
01:15:14,159 --> 01:15:15,760
all right that that

1902
01:15:15,760 --> 01:15:18,400
then we probably should say

1903
01:15:18,400 --> 01:15:19,679
we probably should have said something

1904
01:15:19,679 --> 01:15:25,040
about managed attachments um but um

1905
01:15:25,040 --> 01:15:26,080
well

1906
01:15:26,080 --> 01:15:28,159
jmap calendars will talk about managed

1907
01:15:28,159 --> 01:15:30,400
attachments but js calendar can't

1908
01:15:30,400 --> 01:15:33,599
because it's just the data format

1909
01:15:34,000 --> 01:15:36,719
yeah yeah that's true up here okay

1910
01:15:36,719 --> 01:15:39,440
in that case it sounds like it's gonna

1911
01:15:39,440 --> 01:15:42,639
it's gonna be possible to cover it

1912
01:15:43,679 --> 01:15:46,960
okay great so in my understanding um

1913
01:15:46,960 --> 01:15:49,280
if ever there has been an issue it's

1914
01:15:49,280 --> 01:15:51,679
solved now anyway so

1915
01:15:51,679 --> 01:15:56,000
let's continue to the next slide please

1916
01:15:56,800 --> 01:16:00,480
so they're related to property um

1917
01:16:00,480 --> 01:16:03,520
that we have already in icalendar um

1918
01:16:03,520 --> 01:16:05,120
we

1919
01:16:05,120 --> 01:16:08,320
in js calendar we have a location

1920
01:16:08,320 --> 01:16:10,400
um object type

1921
01:16:10,400 --> 01:16:13,280
and the location object type can

1922
01:16:13,280 --> 01:16:15,120
can also define

1923
01:16:15,120 --> 01:16:19,040
if it relates to the start or end of the

1924
01:16:19,040 --> 01:16:21,120
um embedding

1925
01:16:21,120 --> 01:16:24,239
object that being either

1926
01:16:24,239 --> 01:16:26,480
an event or a task

1927
01:16:26,480 --> 01:16:28,159
um so

1928
01:16:28,159 --> 01:16:30,320
an option would be that we

1929
01:16:30,320 --> 01:16:32,560
extend the value the allowed values for

1930
01:16:32,560 --> 01:16:35,199
the related property to also

1931
01:16:35,199 --> 01:16:37,760
allow these exact to define temporal

1932
01:16:37,760 --> 01:16:40,640
relations in the related to property

1933
01:16:40,640 --> 01:16:43,760
and that would be start or end

1934
01:16:43,760 --> 01:16:49,360
that would map cleanly to js calendar um

1935
01:16:49,360 --> 01:16:50,560
the

1936
01:16:50,560 --> 01:16:53,280
alternative thought could be if if one

1937
01:16:53,280 --> 01:16:56,480
could define um

1938
01:16:56,800 --> 01:16:59,199
any temporal

1939
01:16:59,199 --> 01:17:02,320
relation in between started and two um

1940
01:17:02,320 --> 01:17:03,920
that would then deviate from what's

1941
01:17:03,920 --> 01:17:06,320
currently defined in js calendar

1942
01:17:06,320 --> 01:17:07,440
um

1943
01:17:07,440 --> 01:17:10,239
but it might if there is the need to

1944
01:17:10,239 --> 01:17:12,239
define for a location

1945
01:17:12,239 --> 01:17:14,159
that it

1946
01:17:14,159 --> 01:17:16,640
that it relates to sometime in between

1947
01:17:16,640 --> 01:17:18,719
the start and the end of the event if

1948
01:17:18,719 --> 01:17:20,640
you have like i don't know

1949
01:17:20,640 --> 01:17:21,840
i don't know how to say in english like

1950
01:17:21,840 --> 01:17:23,520
a schnitzel act like if you are like

1951
01:17:23,520 --> 01:17:26,159
running around and collecting clues uh

1952
01:17:26,159 --> 01:17:27,760
for a puzzle you have to solve or

1953
01:17:27,760 --> 01:17:29,040
whatever

1954
01:17:29,040 --> 01:17:31,679
um we didn't cover that in js calendar

1955
01:17:31,679 --> 01:17:33,600
we mainly introduced the

1956
01:17:33,600 --> 01:17:37,600
the relation um to allow an end relation

1957
01:17:37,600 --> 01:17:39,920
to be set on a location because that

1958
01:17:39,920 --> 01:17:41,920
would then would be the

1959
01:17:41,920 --> 01:17:45,520
time zone identifier of the btn property

1960
01:17:45,520 --> 01:17:48,560
in my calendar

1961
01:17:48,560 --> 01:17:50,560
but the question now is should we just

1962
01:17:50,560 --> 01:17:54,239
introduce start and end or should we

1963
01:17:54,560 --> 01:17:56,719
extend the definition

1964
01:17:56,719 --> 01:17:59,679
right now i don't

1965
01:17:59,679 --> 01:18:02,000
this is only this is only for locations

1966
01:18:02,000 --> 01:18:04,800
isn't it that's only for locations yes

1967
01:18:04,800 --> 01:18:07,280
i'm more inclined to

1968
01:18:07,280 --> 01:18:11,360
to find a new property to go inside a

1969
01:18:11,360 --> 01:18:13,520
v location i mean it just seems a bit

1970
01:18:13,520 --> 01:18:15,760
odd to extend

1971
01:18:15,760 --> 01:18:17,280
related to

1972
01:18:17,280 --> 01:18:18,480
just for this

1973
01:18:18,480 --> 01:18:20,719
particular case it just seems like a

1974
01:18:20,719 --> 01:18:23,120
property with a value of start or end or

1975
01:18:23,120 --> 01:18:24,480
or something else that you wanted to

1976
01:18:24,480 --> 01:18:26,640
have yeah works equally fine for me i

1977
01:18:26,640 --> 01:18:28,159
think we had discussed this a couple of

1978
01:18:28,159 --> 01:18:30,480
weeks ago to go with related to but i'm

1979
01:18:30,480 --> 01:18:32,239
equally fine to just introduce a new

1980
01:18:32,239 --> 01:18:34,320
property yeah i think i think it's it's

1981
01:18:34,320 --> 01:18:37,120
it's simpler and it um it seems odd too

1982
01:18:37,120 --> 01:18:39,199
complicated related to for

1983
01:18:39,199 --> 01:18:41,679
this one case

1984
01:18:41,679 --> 01:18:43,440
all right that works for me and then we

1985
01:18:43,440 --> 01:18:45,360
are going to restrict it to the exact

1986
01:18:45,360 --> 01:18:47,120
values that we also allowing js calendar

1987
01:18:47,120 --> 01:18:49,040
so that should be straightforward yeah

1988
01:18:49,040 --> 01:18:50,080
yeah

1989
01:18:50,080 --> 01:18:51,440
okay

1990
01:18:51,440 --> 01:18:55,239
uh next slide please

1991
01:18:56,080 --> 01:18:59,440
oh yeah um and that's bringing up a

1992
01:18:59,440 --> 01:19:02,159
specific question that then might later

1993
01:19:02,159 --> 01:19:05,120
be discussed as a generic question so

1994
01:19:05,120 --> 01:19:07,760
with the relocation component and the

1995
01:19:07,760 --> 01:19:09,840
participant component in i calendar

1996
01:19:09,840 --> 01:19:11,760
having a uid

1997
01:19:11,760 --> 01:19:12,800
um

1998
01:19:12,800 --> 01:19:14,400
we

1999
01:19:14,400 --> 01:19:16,800
we will need we might need to introduce

2000
01:19:16,800 --> 01:19:18,640
the uiv property

2001
01:19:18,640 --> 01:19:21,199
also on the location participant objects

2002
01:19:21,199 --> 01:19:24,239
in js calendar

2003
01:19:24,560 --> 01:19:28,880
these would be optional in js calendar

2004
01:19:29,120 --> 01:19:33,040
and if one would map from

2005
01:19:33,040 --> 01:19:36,239
js calendar location to i calendar where

2006
01:19:36,239 --> 01:19:39,679
there is no uid defined by the client

2007
01:19:39,679 --> 01:19:41,920
the implementation would just generate a

2008
01:19:41,920 --> 01:19:45,040
uh uid that it from then on uses for

2009
01:19:45,040 --> 01:19:46,400
both

2010
01:19:46,400 --> 01:19:48,159
um

2011
01:19:48,159 --> 01:19:49,520
are there any

2012
01:19:49,520 --> 01:19:51,600
and the generic question will come up

2013
01:19:51,600 --> 01:19:54,080
very soon on the slides later is how to

2014
01:19:54,080 --> 01:19:55,360
map

2015
01:19:55,360 --> 01:19:58,960
how we can typically map um

2016
01:19:58,960 --> 01:20:01,920
properties for which we already have a

2017
01:20:01,920 --> 01:20:04,480
well-defined mapping

2018
01:20:04,480 --> 01:20:07,440
to js calendar but in other contexts for

2019
01:20:07,440 --> 01:20:10,639
example we already have a uid property

2020
01:20:10,639 --> 01:20:13,360
in in js calendar defined for the for

2021
01:20:13,360 --> 01:20:16,000
the main for the event and the task and

2022
01:20:16,000 --> 01:20:16,960
this

2023
01:20:16,960 --> 01:20:19,120
the question came up during work on the

2024
01:20:19,120 --> 01:20:21,280
on the mapping document

2025
01:20:21,280 --> 01:20:24,239
how we should deal with well let me get

2026
01:20:24,239 --> 01:20:26,000
back to this then so first of all are

2027
01:20:26,000 --> 01:20:27,840
there any any specific

2028
01:20:27,840 --> 01:20:30,600
uh points to discuss for uid in this

2029
01:20:30,600 --> 01:20:34,000
context yeah

2030
01:20:34,080 --> 01:20:36,880
yes please yeah i just wanted to ask is

2031
01:20:36,880 --> 01:20:38,320
this

2032
01:20:38,320 --> 01:20:41,280
meant to be an id that's consistent if

2033
01:20:41,280 --> 01:20:42,239
you have

2034
01:20:42,239 --> 01:20:44,480
say a location in one event and are

2035
01:20:44,480 --> 01:20:46,960
located another event

2036
01:20:46,960 --> 01:20:49,120
so you know that they are the same

2037
01:20:49,120 --> 01:20:51,600
yeah so the uid property and icalendar

2038
01:20:51,600 --> 01:20:54,639
is defined to to mean a globally unique

2039
01:20:54,639 --> 01:20:57,280
id so in in that sense

2040
01:20:57,280 --> 01:20:58,719
yes um

2041
01:20:58,719 --> 01:21:01,920
if i get i i'm just trying to chest

2042
01:21:01,920 --> 01:21:05,440
so check how this is different to the id

2043
01:21:05,440 --> 01:21:08,400
in like the locations object in js

2044
01:21:08,400 --> 01:21:10,000
calendar because it's a

2045
01:21:10,000 --> 01:21:12,000
id to location object

2046
01:21:12,000 --> 01:21:16,000
so in js calendar the id um that we use

2047
01:21:16,000 --> 01:21:17,280
in the

2048
01:21:17,280 --> 01:21:18,880
in the in the

2049
01:21:18,880 --> 01:21:21,600
in the map of all locations within that

2050
01:21:21,600 --> 01:21:22,480
event

2051
01:21:22,480 --> 01:21:24,639
the id

2052
01:21:24,639 --> 01:21:27,600
only needs to be unique within

2053
01:21:27,600 --> 01:21:28,880
that

2054
01:21:28,880 --> 01:21:32,000
locations property

2055
01:21:32,080 --> 01:21:35,280
whereas a uid property in icalendar is

2056
01:21:35,280 --> 01:21:36,159
is

2057
01:21:36,159 --> 01:21:38,880
meant to be globally unique

2058
01:21:38,880 --> 01:21:40,320
so

2059
01:21:40,320 --> 01:21:43,360
they cover different scopes um

2060
01:21:43,360 --> 01:21:44,960
and so

2061
01:21:44,960 --> 01:21:46,320
yes

2062
01:21:46,320 --> 01:21:48,719
one would expect a uid property of

2063
01:21:48,719 --> 01:21:50,880
location for the same location to be the

2064
01:21:50,880 --> 01:21:51,920
same

2065
01:21:51,920 --> 01:21:53,360
um if that's

2066
01:21:53,360 --> 01:21:55,120
really done in practice

2067
01:21:55,120 --> 01:21:59,519
i would very much doubt um but

2068
01:22:00,239 --> 01:22:03,440
i guess then you could map it to just

2069
01:22:03,440 --> 01:22:04,800
the id

2070
01:22:04,800 --> 01:22:06,639
in js calendar

2071
01:22:06,639 --> 01:22:08,840
like obviously a uid is already a valid

2072
01:22:08,840 --> 01:22:11,920
id yeah we can't do that in all cases

2073
01:22:11,920 --> 01:22:14,719
because the uid might contain characters

2074
01:22:14,719 --> 01:22:17,840
that are not available jmap id

2075
01:22:17,840 --> 01:22:19,280
sure but you could define a consistent

2076
01:22:19,280 --> 01:22:21,679
mapping

2077
01:22:22,960 --> 01:22:25,199
i mean i guess you could take a digest

2078
01:22:25,199 --> 01:22:27,520
that's always short enough

2079
01:22:27,520 --> 01:22:29,760
um you can't guarantee a two-way mapping

2080
01:22:29,760 --> 01:22:30,800
because the

2081
01:22:30,800 --> 01:22:33,280
uid might also be longer than

2082
01:22:33,280 --> 01:22:36,000
255 characters

2083
01:22:36,000 --> 01:22:39,400
yeah that's true

2084
01:22:39,440 --> 01:22:42,960
and i don't know if because we we

2085
01:22:42,960 --> 01:22:46,719
we discussed that um the

2086
01:22:46,719 --> 01:22:49,520
ids in a js calendar event

2087
01:22:49,520 --> 01:22:51,840
should persist

2088
01:22:51,840 --> 01:22:54,480
in the same in the same js calendar

2089
01:22:54,480 --> 01:22:56,800
object instance at least so

2090
01:22:56,800 --> 01:22:58,880
i i don't know if applications are going

2091
01:22:58,880 --> 01:23:00,960
to

2092
01:23:00,960 --> 01:23:04,000
have their own idea what what ids they

2093
01:23:04,000 --> 01:23:05,360
generate

2094
01:23:05,360 --> 01:23:08,639
um which might not necessarily then

2095
01:23:08,639 --> 01:23:09,920
map to a

2096
01:23:09,920 --> 01:23:11,600
might not necessarily would be a good

2097
01:23:11,600 --> 01:23:14,960
choice for a uid property because it

2098
01:23:14,960 --> 01:23:17,440
might just not be unique enough or

2099
01:23:17,440 --> 01:23:19,520
something like that so if we keep them

2100
01:23:19,520 --> 01:23:21,600
separate i think we have the least

2101
01:23:21,600 --> 01:23:22,960
friction

2102
01:23:22,960 --> 01:23:23,920
uh

2103
01:23:23,920 --> 01:23:25,840
when mapping between icalend and js

2104
01:23:25,840 --> 01:23:28,320
calendar

2105
01:23:32,840 --> 01:23:35,600
again this is ken so

2106
01:23:35,600 --> 01:23:38,080
i i forget what the current spec is what

2107
01:23:38,080 --> 01:23:40,960
are we doing when a v alarm has a uid

2108
01:23:40,960 --> 01:23:42,560
property how are we mapping that into

2109
01:23:42,560 --> 01:23:44,239
the alerts

2110
01:23:44,239 --> 01:23:45,440
if we already do that we should just use

2111
01:23:45,440 --> 01:23:47,120
the same mechanism

2112
01:23:47,120 --> 01:23:50,719
well for v alarms

2113
01:23:51,199 --> 01:23:52,560
the thing is

2114
01:23:52,560 --> 01:23:56,159
an alert in gs calendar is

2115
01:23:56,159 --> 01:23:59,120
is not as sophisticated as it is in the

2116
01:23:59,120 --> 01:24:01,199
alarm and i do not think that we

2117
01:24:01,199 --> 01:24:03,760
currently preserve the uid

2118
01:24:03,760 --> 01:24:05,199
that there is the need to preserve the

2119
01:24:05,199 --> 01:24:07,199
uae at all um

2120
01:24:07,199 --> 01:24:09,040
we might need to i need to check our

2121
01:24:09,040 --> 01:24:11,280
implementation what we are doing

2122
01:24:11,280 --> 01:24:13,520
but then

2123
01:24:13,520 --> 01:24:15,679
i can't recall that there is a uid

2124
01:24:15,679 --> 01:24:17,920
property in the in an alert currently

2125
01:24:17,920 --> 01:24:20,159
yeah in order to round trip this you

2126
01:24:20,159 --> 01:24:21,199
could have

2127
01:24:21,199 --> 01:24:23,199
snoozed vr alarms that

2128
01:24:23,199 --> 01:24:25,440
refer to the main

2129
01:24:25,440 --> 01:24:27,760
uh alarm by uid

2130
01:24:27,760 --> 01:24:29,120
so i think we'd want to preserve that

2131
01:24:29,120 --> 01:24:31,760
yeah yeah we should to be very honest i

2132
01:24:31,760 --> 01:24:33,120
don't know at the moment

2133
01:24:33,120 --> 01:24:34,400
fair enough just wanted to raise the

2134
01:24:34,400 --> 01:24:36,239
question yeah and

2135
01:24:36,239 --> 01:24:38,080
if we choose this mechanism or something

2136
01:24:38,080 --> 01:24:39,199
different for alerts we should use the

2137
01:24:39,199 --> 01:24:40,960
same mechanism across because

2138
01:24:40,960 --> 01:24:43,120
the

2139
01:24:43,120 --> 01:24:45,120
calendar currently

2140
01:24:45,120 --> 01:24:46,560
any different component should have its

2141
01:24:46,560 --> 01:24:48,239
own uid yes so those are going to be

2142
01:24:48,239 --> 01:24:50,159
mapped some way shape or form yeah i

2143
01:24:50,159 --> 01:24:51,600
mean that's that's

2144
01:24:51,600 --> 01:24:53,840
sorry please go ahead mike

2145
01:24:53,840 --> 01:24:55,520
no i just i was i was just trying to

2146
01:24:55,520 --> 01:24:57,679
recall the conversation way back when

2147
01:24:57,679 --> 01:24:59,920
cyrus was um

2148
01:24:59,920 --> 01:25:02,080
he said he basically expressed the

2149
01:25:02,080 --> 01:25:03,920
opinion that he wishes we'd always put

2150
01:25:03,920 --> 01:25:06,719
uids inside components because

2151
01:25:06,719 --> 01:25:08,400
that's why they added it to the alarm

2152
01:25:08,400 --> 01:25:10,239
because the difficulty of identifying

2153
01:25:10,239 --> 01:25:11,520
things

2154
01:25:11,520 --> 01:25:13,920
so that's why these new components had

2155
01:25:13,920 --> 01:25:16,159
have a uid properties because we've

2156
01:25:16,159 --> 01:25:17,840
found in practice it's better to have

2157
01:25:17,840 --> 01:25:20,080
one

2158
01:25:21,120 --> 01:25:22,320
yeah and

2159
01:25:22,320 --> 01:25:25,120
this discussion uh leads

2160
01:25:25,120 --> 01:25:27,360
already kind of to the to the

2161
01:25:27,360 --> 01:25:30,239
next discussion point i think but let's

2162
01:25:30,239 --> 01:25:32,560
if we scope it just to you eddie

2163
01:25:32,560 --> 01:25:34,239
the more we

2164
01:25:34,239 --> 01:25:38,400
introduce icalendar components that are

2165
01:25:38,400 --> 01:25:42,080
uh that have a mapping to a js calendar

2166
01:25:42,080 --> 01:25:45,280
object type be that allocation a link a

2167
01:25:45,280 --> 01:25:47,199
participant whatever

2168
01:25:47,199 --> 01:25:48,480
um

2169
01:25:48,480 --> 01:25:49,760
we will

2170
01:25:49,760 --> 01:25:51,760
we will always need uh

2171
01:25:51,760 --> 01:25:55,120
uids or also for v alarms

2172
01:25:55,120 --> 01:25:55,840
so

2173
01:25:55,840 --> 01:25:57,840
the question then remains should we

2174
01:25:57,840 --> 01:25:59,679
define

2175
01:25:59,679 --> 01:26:02,480
the uid property explicitly for all

2176
01:26:02,480 --> 01:26:04,080
these object types

2177
01:26:04,080 --> 01:26:06,400
or should there rather be allowed to be

2178
01:26:06,400 --> 01:26:08,400
a uid set on any

2179
01:26:08,400 --> 01:26:09,920
um

2180
01:26:09,920 --> 01:26:13,199
on any on any js calendar type um

2181
01:26:13,199 --> 01:26:16,879
probably ron if you could

2182
01:26:16,960 --> 01:26:18,719
show the next slide please i think that

2183
01:26:18,719 --> 01:26:20,880
already

2184
01:26:20,880 --> 01:26:22,719
maybe you can skip this slide and we get

2185
01:26:22,719 --> 01:26:25,600
back to this and this

2186
01:26:25,600 --> 01:26:26,960
because

2187
01:26:26,960 --> 01:26:28,960
what we would like to discuss is um

2188
01:26:28,960 --> 01:26:31,120
currently there are like um

2189
01:26:31,120 --> 01:26:32,800
different understandings how to deal

2190
01:26:32,800 --> 01:26:34,480
with properties and

2191
01:26:34,480 --> 01:26:36,480
and component definitions in icl energy

2192
01:26:36,480 --> 01:26:39,679
is kind of in js calendar we explicitly

2193
01:26:39,679 --> 01:26:42,480
register at iana an explicit list of

2194
01:26:42,480 --> 01:26:45,040
things allowed in an object if you want

2195
01:26:45,040 --> 01:26:47,840
to put more in it either register diana

2196
01:26:47,840 --> 01:26:51,199
or use a vendor extension properly

2197
01:26:51,199 --> 01:26:52,800
in icalendar

2198
01:26:52,800 --> 01:26:55,040
we

2199
01:26:55,040 --> 01:26:58,159
for almost any definition of a component

2200
01:26:58,159 --> 01:27:01,199
the last thing always will be ianaprop

2201
01:27:01,199 --> 01:27:03,679
and that means you can stuff anything

2202
01:27:03,679 --> 01:27:05,760
anywhere in a component that's defined

2203
01:27:05,760 --> 01:27:07,120
somewhere else

2204
01:27:07,120 --> 01:27:10,400
um and we don't really like as you see

2205
01:27:10,400 --> 01:27:13,360
with uid for example we now run in this

2206
01:27:13,360 --> 01:27:15,280
situation that there might be stuff in

2207
01:27:15,280 --> 01:27:16,960
an icalendar object

2208
01:27:16,960 --> 01:27:18,560
for which we

2209
01:27:18,560 --> 01:27:20,639
didn't make

2210
01:27:20,639 --> 01:27:23,360
room in a js calendar object

2211
01:27:23,360 --> 01:27:24,159
um

2212
01:27:24,159 --> 01:27:25,120
and

2213
01:27:25,120 --> 01:27:27,679
this is going to come up more and more

2214
01:27:27,679 --> 01:27:30,480
the more and more stuff we met

2215
01:27:30,480 --> 01:27:33,760
so um i would like to discuss the

2216
01:27:33,760 --> 01:27:36,159
general options that we have to

2217
01:27:36,159 --> 01:27:37,760
um to do that

2218
01:27:37,760 --> 01:27:39,520
um maybe on the on the next slide i

2219
01:27:39,520 --> 01:27:41,920
think i i introduced a couple of

2220
01:27:41,920 --> 01:27:43,040
approaches

2221
01:27:43,040 --> 01:27:46,960
yeah so the the one thing is whenever we

2222
01:27:46,960 --> 01:27:51,520
see something not being able to map

2223
01:27:51,520 --> 01:27:54,639
to a jscanda object type for example the

2224
01:27:54,639 --> 01:27:57,520
uad we could just define it there or the

2225
01:27:57,520 --> 01:27:58,880
other way around like we did with

2226
01:27:58,880 --> 01:28:00,480
chainmap id

2227
01:28:00,480 --> 01:28:01,360
um

2228
01:28:01,360 --> 01:28:02,719
that's

2229
01:28:02,719 --> 01:28:05,040
in a way that always will make clear

2230
01:28:05,040 --> 01:28:06,719
what's the exact purpose of this

2231
01:28:06,719 --> 01:28:09,520
property um

2232
01:28:09,520 --> 01:28:11,199
the um

2233
01:28:11,199 --> 01:28:13,679
lexan version of that this would be like

2234
01:28:13,679 --> 01:28:16,239
that we define if there is already a

2235
01:28:16,239 --> 01:28:19,520
well-defined mapping for example for the

2236
01:28:19,520 --> 01:28:22,639
dt stamp in a v event we mapped it to an

2237
01:28:22,639 --> 01:28:26,719
updated property in the js event

2238
01:28:26,719 --> 01:28:29,040
we could say okay if the dt stamp shows

2239
01:28:29,040 --> 01:28:30,719
up in a v location

2240
01:28:30,719 --> 01:28:32,960
then map that to the

2241
01:28:32,960 --> 01:28:36,080
to an updated property of the js

2242
01:28:36,080 --> 01:28:37,120
calendar

2243
01:28:37,120 --> 01:28:39,360
location object type although the

2244
01:28:39,360 --> 01:28:42,560
current spec doesn't allow that

2245
01:28:42,560 --> 01:28:43,760
um

2246
01:28:43,760 --> 01:28:46,000
and

2247
01:28:46,000 --> 01:28:47,600
that still

2248
01:28:47,600 --> 01:28:49,760
then

2249
01:28:49,760 --> 01:28:51,199
that still doesn't cover everything

2250
01:28:51,199 --> 01:28:52,719
because there might still be stuff that

2251
01:28:52,719 --> 01:28:55,280
we don't know how to map from icalendar

2252
01:28:55,280 --> 01:28:58,800
to gs canada and for the for this part

2253
01:28:58,800 --> 01:29:01,520
in any case we need to come up with a

2254
01:29:01,520 --> 01:29:03,360
mapping that somehow

2255
01:29:03,360 --> 01:29:04,639
um

2256
01:29:04,639 --> 01:29:06,400
it somehow preserves

2257
01:29:06,400 --> 01:29:08,840
preserves mapping related

2258
01:29:08,840 --> 01:29:11,199
information uh what was the source of

2259
01:29:11,199 --> 01:29:14,000
this property if we want to be able

2260
01:29:14,000 --> 01:29:16,639
if we want to be able to

2261
01:29:16,639 --> 01:29:18,880
always be able to convert back and forth

2262
01:29:18,880 --> 01:29:20,639
between the two formats

2263
01:29:20,639 --> 01:29:22,880
and that's the third point is the thing

2264
01:29:22,880 --> 01:29:25,840
that um also came up before for vcard

2265
01:29:25,840 --> 01:29:27,760
mapping actually so

2266
01:29:27,760 --> 01:29:29,360
where i said we should

2267
01:29:29,360 --> 01:29:31,040
use the same scheme

2268
01:29:31,040 --> 01:29:33,679
whatever we use

2269
01:29:33,679 --> 01:29:35,840
um mike i think you you wanted to

2270
01:29:35,840 --> 01:29:38,719
discuss this point anyway or are you

2271
01:29:38,719 --> 01:29:39,760
yeah

2272
01:29:39,760 --> 01:29:42,639
do you yeah please

2273
01:29:42,639 --> 01:29:44,880
um

2274
01:29:44,880 --> 01:29:48,320
i i just i i i felt

2275
01:29:48,320 --> 01:29:50,880
that it was like to lead to a more

2276
01:29:50,880 --> 01:29:52,400
robust

2277
01:29:52,400 --> 01:29:54,080
mapping process

2278
01:29:54,080 --> 01:29:56,400
is if we allow

2279
01:29:56,400 --> 01:29:58,239
if you recognize the property i mean

2280
01:29:58,239 --> 01:29:59,360
clearly

2281
01:29:59,360 --> 01:30:01,600
i think your example there is you know

2282
01:30:01,600 --> 01:30:04,639
dt stamp to to update it

2283
01:30:04,639 --> 01:30:05,760
somewhere you're going to know that if

2284
01:30:05,760 --> 01:30:07,199
you get a dt stamp you're going to

2285
01:30:07,199 --> 01:30:09,920
create a js calendar updated

2286
01:30:09,920 --> 01:30:11,280
property

2287
01:30:11,280 --> 01:30:12,320
the only thing we're talking about is

2288
01:30:12,320 --> 01:30:14,000
whether that's supposed to be allowed

2289
01:30:14,000 --> 01:30:15,760
within the the um

2290
01:30:15,760 --> 01:30:18,840
the the object you're translating

2291
01:30:18,840 --> 01:30:21,920
and um

2292
01:30:21,920 --> 01:30:24,880
i i'm inclined to just allow it and just

2293
01:30:24,880 --> 01:30:26,400
just put it in there

2294
01:30:26,400 --> 01:30:28,639
it just seems a bit weird to to turn

2295
01:30:28,639 --> 01:30:30,239
them all into vendor properties just

2296
01:30:30,239 --> 01:30:32,480
because you you somewhere

2297
01:30:32,480 --> 01:30:34,320
it says you shouldn't have that in this

2298
01:30:34,320 --> 01:30:37,520
particular um object

2299
01:30:37,520 --> 01:30:39,040
uh because you're going to end up with

2300
01:30:39,040 --> 01:30:41,040
the situations where

2301
01:30:41,040 --> 01:30:41,920
um

2302
01:30:41,920 --> 01:30:43,840
you're not keeping up with the current

2303
01:30:43,840 --> 01:30:46,000
state of the registry

2304
01:30:46,000 --> 01:30:48,719
and and so something will turn up

2305
01:30:48,719 --> 01:30:51,520
with this property in it and you won't

2306
01:30:51,520 --> 01:30:53,520
in your code you won't recognize that

2307
01:30:53,520 --> 01:30:55,440
supposed to be in that in that object

2308
01:30:55,440 --> 01:30:57,360
but it in reality it is it's just you're

2309
01:30:57,360 --> 01:30:59,440
out of date

2310
01:30:59,440 --> 01:31:01,120
um

2311
01:31:01,120 --> 01:31:03,840
it it just seems more robust to to allow

2312
01:31:03,840 --> 01:31:06,800
these things to to go in there

2313
01:31:06,800 --> 01:31:09,520
um and there were places where

2314
01:31:09,520 --> 01:31:11,040
um

2315
01:31:11,040 --> 01:31:15,760
back in i calendar where the the um

2316
01:31:15,760 --> 01:31:16,480
the

2317
01:31:16,480 --> 01:31:19,280
um i think you have of say um

2318
01:31:19,280 --> 01:31:21,040
availability

2319
01:31:21,040 --> 01:31:23,840
where it has this this construct it it

2320
01:31:23,840 --> 01:31:25,760
has a certain number of properties which

2321
01:31:25,760 --> 01:31:26,719
which are

2322
01:31:26,719 --> 01:31:28,960
called out in the spec because they have

2323
01:31:28,960 --> 01:31:31,679
some particular um meaning in the

2324
01:31:31,679 --> 01:31:34,239
context of availability and then it says

2325
01:31:34,239 --> 01:31:36,239
you put anything else you like inside

2326
01:31:36,239 --> 01:31:37,040
there

2327
01:31:37,040 --> 01:31:39,600
and and the reason for that was that you

2328
01:31:39,600 --> 01:31:41,840
might want to say certain things about

2329
01:31:41,840 --> 01:31:44,000
that available time like it has a

2330
01:31:44,000 --> 01:31:45,679
particular location

2331
01:31:45,679 --> 01:31:49,280
or it has some other characteristic

2332
01:31:49,280 --> 01:31:50,159
um

2333
01:31:50,159 --> 01:31:51,360
and and

2334
01:31:51,360 --> 01:31:53,280
restricting it didn't allow

2335
01:31:53,280 --> 01:31:56,000
all sorts of use cases to to

2336
01:31:56,000 --> 01:31:56,800
you know

2337
01:31:56,800 --> 01:31:58,719
so i

2338
01:31:58,719 --> 01:32:01,040
i just just feel

2339
01:32:01,040 --> 01:32:02,639
we shouldn't necessarily

2340
01:32:02,639 --> 01:32:04,719
we should if we can if we have a mapping

2341
01:32:04,719 --> 01:32:07,199
for the property we should just do it

2342
01:32:07,199 --> 01:32:09,840
even if it's not in the current

2343
01:32:09,840 --> 01:32:12,840
spec

2344
01:32:13,280 --> 01:32:15,840
yeah i mean

2345
01:32:16,639 --> 01:32:20,960
yes i agree um with caveats

2346
01:32:20,960 --> 01:32:22,159
i mean for

2347
01:32:22,159 --> 01:32:24,960
metadata like created and updated for

2348
01:32:24,960 --> 01:32:27,920
example or comment probably also

2349
01:32:27,920 --> 01:32:29,600
that

2350
01:32:29,600 --> 01:32:31,760
that makes sense to me

2351
01:32:31,760 --> 01:32:34,000
um

2352
01:32:34,000 --> 01:32:34,719
but

2353
01:32:34,719 --> 01:32:36,800
somehow we need to update the js

2354
01:32:36,800 --> 01:32:39,840
calendar spec because it currently would

2355
01:32:39,840 --> 01:32:41,120
reject

2356
01:32:41,120 --> 01:32:44,719
such uh such properties as invalid

2357
01:32:44,719 --> 01:32:45,679
so

2358
01:32:45,679 --> 01:32:48,320
and the question then is

2359
01:32:48,320 --> 01:32:50,239
should we define like again a

2360
01:32:50,239 --> 01:32:52,840
well-defined list of stuff that can go

2361
01:32:52,840 --> 01:32:55,760
anywhere um

2362
01:32:55,760 --> 01:32:58,880
no you can contain uh the the

2363
01:32:58,880 --> 01:33:01,199
the type of stuff that can go anywhere

2364
01:33:01,199 --> 01:33:03,760
or should we really allow like okay

2365
01:33:03,760 --> 01:33:06,320
we just provide the generic mapping and

2366
01:33:06,320 --> 01:33:08,800
if it ever shows up anywhere just put it

2367
01:33:08,800 --> 01:33:10,480
to the appropriate place if you don't

2368
01:33:10,480 --> 01:33:13,600
know any better like just for an example

2369
01:33:13,600 --> 01:33:17,040
if we find a geo uri in and

2370
01:33:17,040 --> 01:33:18,639
participant

2371
01:33:18,639 --> 01:33:21,760
we would not map that to a

2372
01:33:21,760 --> 01:33:24,560
she coordinates property probably in a

2373
01:33:24,560 --> 01:33:25,920
participant we would map it to a

2374
01:33:25,920 --> 01:33:28,960
location and that is referenced as it

2375
01:33:28,960 --> 01:33:31,120
currently is possible

2376
01:33:31,120 --> 01:33:35,120
by this uh js calendar participant then

2377
01:33:35,120 --> 01:33:36,639
i think there's the difference between

2378
01:33:36,639 --> 01:33:41,520
you know wanting to validate a a um

2379
01:33:41,600 --> 01:33:44,159
an object you know a calendar object or

2380
01:33:44,159 --> 01:33:46,400
whatever and actually just accept it so

2381
01:33:46,400 --> 01:33:48,159
you can process it

2382
01:33:48,159 --> 01:33:49,199
and

2383
01:33:49,199 --> 01:33:51,679
strict adherence to what you believe the

2384
01:33:51,679 --> 01:33:54,000
standard to be at a time leads to

2385
01:33:54,000 --> 01:33:56,080
problems because you're inevitably going

2386
01:33:56,080 --> 01:33:58,880
to get um an object that is actually

2387
01:33:58,880 --> 01:34:00,400
adhering to the spec it's just you're

2388
01:34:00,400 --> 01:34:02,159
not up to date with it

2389
01:34:02,159 --> 01:34:03,040
um

2390
01:34:03,040 --> 01:34:06,239
and somebody did uh raise exactly that

2391
01:34:06,239 --> 01:34:08,159
problem on on the um

2392
01:34:08,159 --> 01:34:10,719
ical4j list where they they got a

2393
01:34:10,719 --> 01:34:12,800
property and because they got strict

2394
01:34:12,800 --> 01:34:14,080
validation

2395
01:34:14,080 --> 01:34:16,400
running on their at their end it

2396
01:34:16,400 --> 01:34:18,239
rejected this thing because it had a

2397
01:34:18,239 --> 01:34:20,000
property they didn't recognize which is

2398
01:34:20,000 --> 01:34:22,880
actually in a spec

2399
01:34:22,880 --> 01:34:24,320
so

2400
01:34:24,320 --> 01:34:26,000
the the

2401
01:34:26,000 --> 01:34:27,760
because of this um

2402
01:34:27,760 --> 01:34:29,520
i mean there are ways to avoid having to

2403
01:34:29,520 --> 01:34:31,199
do all this stuff

2404
01:34:31,199 --> 01:34:32,880
if um

2405
01:34:32,880 --> 01:34:35,199
as i was saying to the other day

2406
01:34:35,199 --> 01:34:37,040
part of the reason for having to do this

2407
01:34:37,040 --> 01:34:38,880
complete transformation and trying to

2408
01:34:38,880 --> 01:34:40,560
get as complete as possible is because

2409
01:34:40,560 --> 01:34:43,199
we have this um

2410
01:34:43,199 --> 01:34:44,639
this

2411
01:34:44,639 --> 01:34:48,239
update by replacement thing going on

2412
01:34:48,239 --> 01:34:50,800
if everything was done through patching

2413
01:34:50,800 --> 01:34:51,679
and

2414
01:34:51,679 --> 01:34:54,800
and you know incremental updates you

2415
01:34:54,800 --> 01:34:56,000
this probably wouldn't be as much of a

2416
01:34:56,000 --> 01:34:57,119
problem as it

2417
01:34:57,119 --> 01:35:00,519
as it is

2418
01:35:00,800 --> 01:35:04,880
so i i'm inclined to just allow

2419
01:35:04,880 --> 01:35:06,960
um properties that you don't recognize

2420
01:35:06,960 --> 01:35:11,280
as being part of the object simply for

2421
01:35:12,840 --> 01:35:15,760
robustness i think needless in the queue

2422
01:35:15,760 --> 01:35:18,719
yep go ahead neil

2423
01:35:24,239 --> 01:35:26,719
sorry if i was that was by accident

2424
01:35:26,719 --> 01:35:28,080
yeah that's why you've been there for a

2425
01:35:28,080 --> 01:35:30,559
long time

2426
01:35:30,880 --> 01:35:34,320
oh okay alexi

2427
01:35:36,320 --> 01:35:38,080
i think i tend to agree with michael

2428
01:35:38,080 --> 01:35:41,040
that it looks like

2429
01:35:41,040 --> 01:35:44,320
the original js calendar restriction

2430
01:35:44,320 --> 01:35:46,800
is not useful anymore

2431
01:35:46,800 --> 01:35:49,360
or at least you know for interrupt

2432
01:35:49,360 --> 01:35:53,280
for you know um by direction conversions

2433
01:35:53,280 --> 01:35:55,760
so you need some mechanism of converging

2434
01:35:55,760 --> 01:35:58,880
arbitrary properties

2435
01:36:00,480 --> 01:36:02,480
requiring them all of them need to be

2436
01:36:02,480 --> 01:36:04,239
added to iron registry before they can

2437
01:36:04,239 --> 01:36:07,440
be converted that's a bit

2438
01:36:08,880 --> 01:36:10,960
it doesn't seem practical

2439
01:36:10,960 --> 01:36:13,840
yeah so you need some kind of variant

2440
01:36:13,840 --> 01:36:16,639
whether it's magic uh prefix like vendor

2441
01:36:16,639 --> 01:36:17,840
extension

2442
01:36:17,840 --> 01:36:18,960
or

2443
01:36:18,960 --> 01:36:20,960
no extension which is what michael is

2444
01:36:20,960 --> 01:36:24,400
talking about i think

2445
01:36:24,400 --> 01:36:26,800
you need a generic mechanism

2446
01:36:26,800 --> 01:36:28,719
i think if you recognize the property

2447
01:36:28,719 --> 01:36:30,800
then just convert it if you don't then

2448
01:36:30,800 --> 01:36:32,400
then you get to some sort of vendor

2449
01:36:32,400 --> 01:36:35,440
extension thing yes

2450
01:36:35,760 --> 01:36:36,480
so

2451
01:36:36,480 --> 01:36:39,040
yeah i think the distinction sorry into

2452
01:36:39,040 --> 01:36:40,719
interrupt but i think the distinction

2453
01:36:40,719 --> 01:36:43,440
should be made between stuff where

2454
01:36:43,440 --> 01:36:45,280
we already know

2455
01:36:45,280 --> 01:36:47,600
a well-defined mapping for example for

2456
01:36:47,600 --> 01:36:49,520
the time yeah absolutely i understand we

2457
01:36:49,520 --> 01:36:51,119
certainly need this

2458
01:36:51,119 --> 01:36:52,400
vendor extension

2459
01:36:52,400 --> 01:36:53,840
mapping

2460
01:36:53,840 --> 01:36:55,280
always because there will always be

2461
01:36:55,280 --> 01:36:58,400
stuff we don't know anything about okay

2462
01:36:58,400 --> 01:37:01,400
yeah

2463
01:37:06,320 --> 01:37:08,320
this is ken um yeah i was going to

2464
01:37:08,320 --> 01:37:09,600
suggest that

2465
01:37:09,600 --> 01:37:11,920
and neil might

2466
01:37:11,920 --> 01:37:14,400
throw up when he hears my suggestion but

2467
01:37:14,400 --> 01:37:17,360
um perhaps we just come up with a

2468
01:37:17,360 --> 01:37:19,440
json representation of a generic high

2469
01:37:19,440 --> 01:37:21,119
calendar parameter property and

2470
01:37:21,119 --> 01:37:22,239
component

2471
01:37:22,239 --> 01:37:23,600
and for everything we don't understand

2472
01:37:23,600 --> 01:37:25,760
we create an object or an array

2473
01:37:25,760 --> 01:37:28,000
over these particular things

2474
01:37:28,000 --> 01:37:30,960
yes um the idea of this vendor extension

2475
01:37:30,960 --> 01:37:33,360
thing would actually

2476
01:37:33,360 --> 01:37:36,080
and it's just an idea to to to uh use

2477
01:37:36,080 --> 01:37:38,800
json of course as a value but uh use a

2478
01:37:38,800 --> 01:37:41,840
gs cal so which allows like a direct

2479
01:37:41,840 --> 01:37:43,040
mapping

2480
01:37:43,040 --> 01:37:43,760
yeah

2481
01:37:43,760 --> 01:37:44,639
it's good

2482
01:37:44,639 --> 01:37:48,440
the jcal foreign

2483
01:37:54,400 --> 01:37:56,000
that's why i said you know neil might

2484
01:37:56,000 --> 01:37:57,199
not

2485
01:37:57,199 --> 01:37:58,560
like my suggestion

2486
01:37:58,560 --> 01:38:03,719
um yeah but yeah jkl's fine

2487
01:38:04,480 --> 01:38:05,360
yeah

2488
01:38:05,360 --> 01:38:07,760
so i think the open discussion point

2489
01:38:07,760 --> 01:38:09,760
still is um

2490
01:38:09,760 --> 01:38:12,159
what to do with

2491
01:38:12,159 --> 01:38:14,719
stuff that

2492
01:38:15,040 --> 01:38:16,880
that we could just map because we have

2493
01:38:16,880 --> 01:38:18,560
the mapping defined already somewhere

2494
01:38:18,560 --> 01:38:21,040
else so in in the term of we have some

2495
01:38:21,040 --> 01:38:23,199
generic well-defined properties

2496
01:38:23,199 --> 01:38:25,119
as i said off the top of my head created

2497
01:38:25,119 --> 01:38:26,800
updated command

2498
01:38:26,800 --> 01:38:29,199
um probably i'm sure there is other

2499
01:38:29,199 --> 01:38:32,080
stuff um

2500
01:38:32,880 --> 01:38:35,040
if we if we need to if we should

2501
01:38:35,040 --> 01:38:38,000
register these ordered iana that is the

2502
01:38:38,000 --> 01:38:40,159
current scheme or if we allow a generic

2503
01:38:40,159 --> 01:38:41,600
map

2504
01:38:41,600 --> 01:38:44,000
that's tricky because if we if we don't

2505
01:38:44,000 --> 01:38:45,679
register everything up front then you'll

2506
01:38:45,679 --> 01:38:47,600
get implementations that do different

2507
01:38:47,600 --> 01:38:48,960
levels of

2508
01:38:48,960 --> 01:38:51,360
quality of mapping here okay um but if

2509
01:38:51,360 --> 01:38:53,520
we don't register if we don't have a

2510
01:38:53,520 --> 01:38:55,040
specific list of things that are the

2511
01:38:55,040 --> 01:38:57,040
ones you should map then

2512
01:38:57,040 --> 01:38:59,119
yeah the question is what what do you do

2513
01:38:59,119 --> 01:39:00,960
with and what don't you do this with

2514
01:39:00,960 --> 01:39:02,320
maybe we should just say everything

2515
01:39:02,320 --> 01:39:04,480
that's not specifically defined gets

2516
01:39:04,480 --> 01:39:07,678
this jkl treatment

2517
01:39:07,760 --> 01:39:09,119
and that way

2518
01:39:09,119 --> 01:39:11,360
everyone will will have the same

2519
01:39:11,360 --> 01:39:13,600
representations i think for i calendar

2520
01:39:13,600 --> 01:39:15,679
she has kind of mapping i think that's

2521
01:39:15,679 --> 01:39:17,280
uh i also

2522
01:39:17,280 --> 01:39:19,520
would like to go with that approach

2523
01:39:19,520 --> 01:39:21,840
um that still leaves the point that mike

2524
01:39:21,840 --> 01:39:25,440
proud brought up like um

2525
01:39:25,440 --> 01:39:27,520
that implementations currently that

2526
01:39:27,520 --> 01:39:29,040
implement like

2527
01:39:29,040 --> 01:39:32,239
one snapshot of the state of js calendar

2528
01:39:32,239 --> 01:39:35,360
rfcs would reject

2529
01:39:35,360 --> 01:39:37,360
js events that

2530
01:39:37,360 --> 01:39:38,840
use properties

2531
01:39:38,840 --> 01:39:42,000
um of later

2532
01:39:42,000 --> 01:39:43,679
it's the same it's the same it's the

2533
01:39:43,679 --> 01:39:45,199
same thing whether whether whether

2534
01:39:45,199 --> 01:39:47,600
you're doing a mapping or whether you're

2535
01:39:47,600 --> 01:39:51,360
accepting js calendar into your system

2536
01:39:51,360 --> 01:39:52,239
it's

2537
01:39:52,239 --> 01:39:55,280
if it's a recognized if it's a known

2538
01:39:55,280 --> 01:39:56,960
js calendar

2539
01:39:56,960 --> 01:39:59,119
um property

2540
01:39:59,119 --> 01:40:00,560
um

2541
01:40:00,560 --> 01:40:02,239
when you're doing the mapping then just

2542
01:40:02,239 --> 01:40:04,239
convert it to that known js calendar

2543
01:40:04,239 --> 01:40:06,960
property even if the spec that the other

2544
01:40:06,960 --> 01:40:08,960
end is using doesn't recognize that as

2545
01:40:08,960 --> 01:40:10,880
being valid within that object you may

2546
01:40:10,880 --> 01:40:13,199
as well just just put it there

2547
01:40:13,199 --> 01:40:14,719
i don't think you should map that to

2548
01:40:14,719 --> 01:40:17,600
this to to some

2549
01:40:17,600 --> 01:40:18,880
because you're going to get the same

2550
01:40:18,880 --> 01:40:20,880
situation if you're accepting js

2551
01:40:20,880 --> 01:40:22,960
calendar the other end may be more up to

2552
01:40:22,960 --> 01:40:24,880
date than you are

2553
01:40:24,880 --> 01:40:27,119
that's what i what i understood you

2554
01:40:27,119 --> 01:40:29,760
saying is that yeah but i don't think

2555
01:40:29,760 --> 01:40:31,600
some property should be ignored not

2556
01:40:31,600 --> 01:40:34,000
rejected right

2557
01:40:34,000 --> 01:40:35,440
yeah if you don't know about it you just

2558
01:40:35,440 --> 01:40:38,400
ignore it yes and um which is sort of

2559
01:40:38,400 --> 01:40:41,280
what we do in in our calendar i don't

2560
01:40:41,280 --> 01:40:43,280
think there's a distinction between them

2561
01:40:43,280 --> 01:40:45,280
as us doing the mapping

2562
01:40:45,280 --> 01:40:47,520
particularly and and

2563
01:40:47,520 --> 01:40:48,960
we just do the same thing there you've

2564
01:40:48,960 --> 01:40:51,280
got a property that you recognize then

2565
01:40:51,280 --> 01:40:53,199
map it

2566
01:40:53,199 --> 01:40:55,440
and

2567
01:40:55,840 --> 01:40:58,960
the other end will ignore it

2568
01:41:00,800 --> 01:41:02,480
just saying that if you need to change

2569
01:41:02,480 --> 01:41:04,560
the semantic from you know ignoring

2570
01:41:04,560 --> 01:41:06,960
instead of rejecting unknown stuff

2571
01:41:06,960 --> 01:41:08,800
do it early

2572
01:41:08,800 --> 01:41:10,639
do it in a draft so hopefully whoever

2573
01:41:10,639 --> 01:41:12,159
follows the discussion now will

2574
01:41:12,159 --> 01:41:14,880
implement the new semantic

2575
01:41:14,880 --> 01:41:16,560
if it makes sense

2576
01:41:16,560 --> 01:41:18,560
good as early as possible and then

2577
01:41:18,560 --> 01:41:21,760
you'll figure out the exactly

2578
01:41:21,760 --> 01:41:22,880
so um

2579
01:41:22,880 --> 01:41:24,960
from what i gather from this here is

2580
01:41:24,960 --> 01:41:27,840
that uh we won't be able to

2581
01:41:27,840 --> 01:41:30,800
come to an agreement within this session

2582
01:41:30,800 --> 01:41:33,119
uh there are too many unknowns and it's

2583
01:41:33,119 --> 01:41:35,440
up to mike and me to

2584
01:41:35,440 --> 01:41:37,600
now write up a proposal

2585
01:41:37,600 --> 01:41:39,760
well i'm we are writing the draft anyway

2586
01:41:39,760 --> 01:41:40,960
already so

2587
01:41:40,960 --> 01:41:41,840
um

2588
01:41:41,840 --> 01:41:43,280
yeah we should

2589
01:41:43,280 --> 01:41:44,480
we should come up with something and

2590
01:41:44,480 --> 01:41:46,719
then sent to the list or

2591
01:41:46,719 --> 01:41:47,679
um

2592
01:41:47,679 --> 01:41:49,440
and or um

2593
01:41:49,440 --> 01:41:52,320
present in the interim in

2594
01:41:52,320 --> 01:41:54,880
when is it in may yeah uh the second

2595
01:41:54,880 --> 01:41:57,600
week of may okay um

2596
01:41:57,600 --> 01:42:00,000
next slide please i think we are yeah we

2597
01:42:00,000 --> 01:42:01,600
skipped over a couple in a way as well

2598
01:42:01,600 --> 01:42:03,040
yeah but

2599
01:42:03,040 --> 01:42:05,920
there are more specific mapping that

2600
01:42:05,920 --> 01:42:08,480
doesn't need to be discussed properly

2601
01:42:08,480 --> 01:42:10,639
probably now yeah so next steps are in

2602
01:42:10,639 --> 01:42:12,840
top

2603
01:42:12,840 --> 01:42:17,040
testing and or as i already wrote um

2604
01:42:17,040 --> 01:42:18,960
we need to define

2605
01:42:18,960 --> 01:42:20,080
um

2606
01:42:20,080 --> 01:42:22,800
how to how to to map these new

2607
01:42:22,800 --> 01:42:24,800
properties

2608
01:42:24,800 --> 01:42:26,960
what did i ask this i can't have a

2609
01:42:26,960 --> 01:42:29,040
shared set of test cases for this that

2610
01:42:29,040 --> 01:42:33,040
all the all the implementations use yeah

2611
01:42:33,040 --> 01:42:34,159
um

2612
01:42:34,159 --> 01:42:36,400
the question i i brought up here also

2613
01:42:36,400 --> 01:42:38,560
then is if we do should we define

2614
01:42:38,560 --> 01:42:41,280
separate rfcs for the i calendar and the

2615
01:42:41,280 --> 01:42:43,360
js calendar extensions or should this

2616
01:42:43,360 --> 01:42:45,280
all go into one

2617
01:42:45,280 --> 01:42:47,679
draft

2618
01:42:47,920 --> 01:42:49,920
this is kind of i was getting up to make

2619
01:42:49,920 --> 01:42:51,360
a suggestion

2620
01:42:51,360 --> 01:42:53,119
the given effect we're going to change

2621
01:42:53,119 --> 01:42:55,119
the mapping document from informational

2622
01:42:55,119 --> 01:42:57,040
to standards track

2623
01:42:57,040 --> 01:42:59,600
and we're also extending js calendar a

2624
01:42:59,600 --> 01:43:00,880
little bit

2625
01:43:00,880 --> 01:43:02,800
and we have two errata already for js

2626
01:43:02,800 --> 01:43:05,280
calendar that perhaps we refresh that at

2627
01:43:05,280 --> 01:43:07,760
the same time we're doing the mapping

2628
01:43:07,760 --> 01:43:11,440
and send them to the editor as a group

2629
01:43:11,440 --> 01:43:13,199
and then they'll have consecutive rfc

2630
01:43:13,199 --> 01:43:15,040
numbers as well so they're easy to find

2631
01:43:15,040 --> 01:43:18,320
if somebody goes to use them yeah

2632
01:43:18,320 --> 01:43:20,320
sounds good i i raised this

2633
01:43:20,320 --> 01:43:22,800
i think what uh the other thing i

2634
01:43:22,800 --> 01:43:25,360
suggested um

2635
01:43:25,360 --> 01:43:27,119
a fusion when we started talking about

2636
01:43:27,119 --> 01:43:28,480
the geo

2637
01:43:28,480 --> 01:43:30,560
and allowing a new uri

2638
01:43:30,560 --> 01:43:32,800
i was sort of favoring the idea of

2639
01:43:32,800 --> 01:43:35,199
splitting that out into a separate rfc

2640
01:43:35,199 --> 01:43:36,840
updating

2641
01:43:36,840 --> 01:43:39,600
5545 largely because it just makes it

2642
01:43:39,600 --> 01:43:41,760
more visible and and the the idea of

2643
01:43:41,760 --> 01:43:44,960
using um a uri value

2644
01:43:44,960 --> 01:43:47,760
for the geo thing is something that

2645
01:43:47,760 --> 01:43:50,080
is of general

2646
01:43:50,080 --> 01:43:53,760
usefulness just in the icalendar world

2647
01:43:53,760 --> 01:43:54,880
so

2648
01:43:54,880 --> 01:43:56,960
it just seemed wrong to hide it away

2649
01:43:56,960 --> 01:44:00,800
inside the mapping spec

2650
01:44:01,840 --> 01:44:03,760
this is kind of i stood back up to say

2651
01:44:03,760 --> 01:44:05,760
that if we are going to refresh js

2652
01:44:05,760 --> 01:44:07,119
calendar

2653
01:44:07,119 --> 01:44:09,119
i would volunteer to be editor on that

2654
01:44:09,119 --> 01:44:10,480
if no one else wants to do it i know you

2655
01:44:10,480 --> 01:44:12,080
guys are already busy and similarly if

2656
01:44:12,080 --> 01:44:13,600
we decide to split out

2657
01:44:13,600 --> 01:44:16,880
the updating geoproperty uh to take a

2658
01:44:16,880 --> 01:44:20,159
uri i'd also be willing to do that work

2659
01:44:20,159 --> 01:44:22,719
take that off your guys plate

2660
01:44:22,719 --> 01:44:25,760
um one um

2661
01:44:25,760 --> 01:44:28,159
one rfc candidate we haven't talked

2662
01:44:28,159 --> 01:44:31,119
about in this session is uh

2663
01:44:31,119 --> 01:44:33,440
we also were having the idea for

2664
01:44:33,440 --> 01:44:36,480
allowing sub-second uh precision in i

2665
01:44:36,480 --> 01:44:40,080
calendar time values and i i recorded we

2666
01:44:40,080 --> 01:44:42,719
agreed on having that in a separate area

2667
01:44:42,719 --> 01:44:43,679
as well

2668
01:44:43,679 --> 01:44:46,639
yeah i think i think so because i i did

2669
01:44:46,639 --> 01:44:49,760
i did create that draft um

2670
01:44:49,760 --> 01:44:53,199
fractional thing that it was based on on

2671
01:44:53,199 --> 01:44:54,480
what we originally talked about but then

2672
01:44:54,480 --> 01:44:56,320
i realized

2673
01:44:56,320 --> 01:44:58,239
um part of the problem with the whole

2674
01:44:58,239 --> 01:45:00,320
thing is negotiation do you know

2675
01:45:00,320 --> 01:45:02,960
somebody can accept fractional um

2676
01:45:02,960 --> 01:45:05,199
seconds or whatever there is a demand

2677
01:45:05,199 --> 01:45:06,080
for it

2678
01:45:06,080 --> 01:45:08,320
but it's it's not

2679
01:45:08,320 --> 01:45:10,639
something that is generally

2680
01:45:10,639 --> 01:45:12,480
needed it's it's more for people doing

2681
01:45:12,480 --> 01:45:14,960
things like process control or things of

2682
01:45:14,960 --> 01:45:17,199
that kind so i was more inclined to just

2683
01:45:17,199 --> 01:45:20,800
do that as a as a separate rfc which um

2684
01:45:20,800 --> 01:45:23,040
because it touches on so many things is

2685
01:45:23,040 --> 01:45:24,880
simply extend the things so you accept

2686
01:45:24,880 --> 01:45:28,000
fractional stuff everywhere okay but it

2687
01:45:28,000 --> 01:45:29,920
it occurs you know it's recurrences and

2688
01:45:29,920 --> 01:45:32,159
things of that kind

2689
01:45:32,159 --> 01:45:34,000
yeah um

2690
01:45:34,000 --> 01:45:37,360
i generally agree but it if if we don't

2691
01:45:37,360 --> 01:45:40,400
have that then uh the conversion from gs

2692
01:45:40,400 --> 01:45:44,000
calendar to icalendar is probably lossy

2693
01:45:44,000 --> 01:45:44,800
um

2694
01:45:44,800 --> 01:45:46,960
it will be yeah but but you're going to

2695
01:45:46,960 --> 01:45:49,199
break things anyway if you try and and

2696
01:45:49,199 --> 01:45:51,360
carry across all the fractional stuff so

2697
01:45:51,360 --> 01:45:53,040
it just seemed i think i think i

2698
01:45:53,040 --> 01:45:54,960
actually updated the spec to say you

2699
01:45:54,960 --> 01:45:57,679
should just uh round it down to the to

2700
01:45:57,679 --> 01:45:59,119
the nearest second

2701
01:45:59,119 --> 01:46:01,440
yep this sounds good to me

2702
01:46:01,440 --> 01:46:02,719
um

2703
01:46:02,719 --> 01:46:05,199
but still

2704
01:46:05,600 --> 01:46:08,400
yeah so then we would not be able to

2705
01:46:08,400 --> 01:46:09,840
map

2706
01:46:09,840 --> 01:46:12,000
in fact the the yeah the just kind of

2707
01:46:12,000 --> 01:46:14,000
spec is actually not quite

2708
01:46:14,000 --> 01:46:16,719
um fully capable of doing fractional

2709
01:46:16,719 --> 01:46:18,800
seconds either because there's something

2710
01:46:18,800 --> 01:46:21,840
missing i forgot what it is now

2711
01:46:21,840 --> 01:46:23,600
probably it's in the r rule i think we

2712
01:46:23,600 --> 01:46:26,880
don't have something to do with ideas

2713
01:46:26,880 --> 01:46:28,800
frequency or something like that there's

2714
01:46:28,800 --> 01:46:31,520
something of that yeah yeah

2715
01:46:31,520 --> 01:46:33,600
okay so just to

2716
01:46:33,600 --> 01:46:35,119
note down what i'm hearing here sounds

2717
01:46:35,119 --> 01:46:37,119
like we've got four documents

2718
01:46:37,119 --> 01:46:39,920
in total we've got the sub second time

2719
01:46:39,920 --> 01:46:41,520
we've got the

2720
01:46:41,520 --> 01:46:43,760
update for geo and potentially a couple

2721
01:46:43,760 --> 01:46:46,000
of other little bits and pieces for five

2722
01:46:46,000 --> 01:46:48,880
five four five we've got a refresh of js

2723
01:46:48,880 --> 01:46:51,280
calendar and we've got the js calendar

2724
01:46:51,280 --> 01:46:54,080
icalendar mapping document um we're

2725
01:46:54,080 --> 01:46:56,320
going to keep this for do we refresh js

2726
01:46:56,320 --> 01:46:59,840
calendar and put the mapping in it

2727
01:47:02,080 --> 01:47:04,159
i don't know much about the process what

2728
01:47:04,159 --> 01:47:05,920
the difference between a refresh and the

2729
01:47:05,920 --> 01:47:08,000
new rfc is um

2730
01:47:08,000 --> 01:47:10,080
it's new rfc it's just it's replacing

2731
01:47:10,080 --> 01:47:12,400
the old one oh okay

2732
01:47:12,400 --> 01:47:13,679
i forgot to check in this this is kind

2733
01:47:13,679 --> 01:47:15,280
of i i still think they should be

2734
01:47:15,280 --> 01:47:17,040
separate documents personally but i'm

2735
01:47:17,040 --> 01:47:18,560
not gonna die in that hill if the group

2736
01:47:18,560 --> 01:47:22,119
decides otherwise

2737
01:47:29,840 --> 01:47:32,719
yeah i tend to think that like it is

2738
01:47:32,719 --> 01:47:35,360
between a director working group chair

2739
01:47:35,360 --> 01:47:37,600
and editor

2740
01:47:37,600 --> 01:47:39,520
as in you know

2741
01:47:39,520 --> 01:47:41,360
if you have a preference for whatever

2742
01:47:41,360 --> 01:47:44,719
reason you know stated

2743
01:47:44,960 --> 01:47:46,719
i don't have a strong preference either

2744
01:47:46,719 --> 01:47:49,360
way um i do think that if we're going to

2745
01:47:49,360 --> 01:47:50,480
do that

2746
01:47:50,480 --> 01:47:53,119
then it's probably not worth blocking

2747
01:47:53,119 --> 01:47:54,480
tasks

2748
01:47:54,480 --> 01:47:56,560
on having a js calendar representation

2749
01:47:56,560 --> 01:47:58,239
in it we're better off

2750
01:47:58,239 --> 01:47:59,679
doing tasks

2751
01:47:59,679 --> 01:48:01,920
as maybe the fifth of this series of

2752
01:48:01,920 --> 01:48:04,000
documents which is another icon to

2753
01:48:04,000 --> 01:48:04,880
update

2754
01:48:04,880 --> 01:48:07,520
and then do the js calendar keeping that

2755
01:48:07,520 --> 01:48:08,719
in mind

2756
01:48:08,719 --> 01:48:10,080
and then that becomes our alignment

2757
01:48:10,080 --> 01:48:11,679
point

2758
01:48:11,679 --> 01:48:13,520
so just to be sure that we already

2759
01:48:13,520 --> 01:48:16,400
defined it js task in the js calendar in

2760
01:48:16,400 --> 01:48:18,320
the nine eight four already includes a

2761
01:48:18,320 --> 01:48:20,159
definition yeah yeah but if we're

2762
01:48:20,159 --> 01:48:23,520
refreshing it anyway um maybe we should

2763
01:48:23,520 --> 01:48:25,440
do the i calendar dot just referencing

2764
01:48:25,440 --> 01:48:27,360
our calendar and not referencing that

2765
01:48:27,360 --> 01:48:30,000
and then have our two js calendar

2766
01:48:30,000 --> 01:48:31,199
documents

2767
01:48:31,199 --> 01:48:33,679
be the alignment point together and then

2768
01:48:33,679 --> 01:48:34,880
we can make sure everything's fully

2769
01:48:34,880 --> 01:48:36,800
aligned across those documents yes that

2770
01:48:36,800 --> 01:48:39,199
sounds very good to me

2771
01:48:39,199 --> 01:48:41,519
okay

2772
01:48:44,639 --> 01:48:45,679
all right

2773
01:48:45,679 --> 01:48:46,800
excellent

2774
01:48:46,800 --> 01:48:49,360
we have 12 minutes left in this session

2775
01:48:49,360 --> 01:48:51,119
go ahead

2776
01:48:51,119 --> 01:48:53,360
the the only the only thing i i raised i

2777
01:48:53,360 --> 01:48:56,080
raised a point with um uh robert the

2778
01:48:56,080 --> 01:48:59,040
other day that the mapping the mapping

2779
01:48:59,040 --> 01:49:01,280
um

2780
01:49:01,280 --> 01:49:03,199
document and and carrying out this

2781
01:49:03,199 --> 01:49:05,520
mapping it depends on the context you're

2782
01:49:05,520 --> 01:49:08,000
in and i was i was suggesting we should

2783
01:49:08,000 --> 01:49:10,480
have an initial section in the mapping

2784
01:49:10,480 --> 01:49:11,679
document

2785
01:49:11,679 --> 01:49:16,480
if you're if you're doing um imip

2786
01:49:16,480 --> 01:49:19,280
um the mapping can be a lot simpler

2787
01:49:19,280 --> 01:49:21,679
because you you really don't have to

2788
01:49:21,679 --> 01:49:24,800
have a full representation of

2789
01:49:24,800 --> 01:49:26,639
um

2790
01:49:26,639 --> 01:49:28,639
what's in the js calendar

2791
01:49:28,639 --> 01:49:30,560
um document and the replies that come

2792
01:49:30,560 --> 01:49:31,760
back in

2793
01:49:31,760 --> 01:49:33,440
only the only thing you need to pay any

2794
01:49:33,440 --> 01:49:36,480
attention to are the parts that and and

2795
01:49:36,480 --> 01:49:37,840
other things so

2796
01:49:37,840 --> 01:49:40,320
if you're if you have

2797
01:49:40,320 --> 01:49:42,400
it it seemed that it might be worth

2798
01:49:42,400 --> 01:49:44,320
having an imp

2799
01:49:44,320 --> 01:49:46,799
section

2800
01:49:46,960 --> 01:49:48,960
um which would

2801
01:49:48,960 --> 01:49:51,199
be a lot easier to do to

2802
01:49:51,199 --> 01:49:52,800
to do

2803
01:49:52,800 --> 01:49:55,760
yeah so about that i think

2804
01:49:55,760 --> 01:49:59,599
i would prefer a separate rfc

2805
01:49:59,599 --> 01:50:02,080
we didn't cover the

2806
01:50:02,080 --> 01:50:04,880
scheduling parts in terms of the

2807
01:50:04,880 --> 01:50:07,679
protocols involved at all

2808
01:50:07,679 --> 01:50:09,360
and i think there's

2809
01:50:09,360 --> 01:50:10,880
there's still

2810
01:50:10,880 --> 01:50:12,880
quite some stuff we need to figure out

2811
01:50:12,880 --> 01:50:14,400
in there so

2812
01:50:14,400 --> 01:50:17,119
in terms of timeline i very much would

2813
01:50:17,119 --> 01:50:21,199
rather just define the format mapping

2814
01:50:21,199 --> 01:50:24,480
without any protocol specific

2815
01:50:24,480 --> 01:50:26,880
um editions because otherwise it

2816
01:50:26,880 --> 01:50:28,880
i have the fear that it will just drag

2817
01:50:28,880 --> 01:50:31,119
on and on as a draft and i think we

2818
01:50:31,119 --> 01:50:32,560
should get it published to chase

2819
01:50:32,560 --> 01:50:34,480
calendar i killed the mapping

2820
01:50:34,480 --> 01:50:38,519
as soon as possible now

2821
01:50:41,840 --> 01:50:43,760
all right uh we have 10 minutes left in

2822
01:50:43,760 --> 01:50:45,440
this session

2823
01:50:45,440 --> 01:50:47,440
is there anything else on this document

2824
01:50:47,440 --> 01:50:50,080
now or is it uh keep working on it

2825
01:50:50,080 --> 01:50:53,840
it's keep working on it

2826
01:50:56,560 --> 01:50:57,679
cool

2827
01:50:57,679 --> 01:50:59,280
thank you

2828
01:50:59,280 --> 01:51:02,080
all right popping back to

2829
01:51:02,080 --> 01:51:05,320
our agenda

2830
01:51:06,400 --> 01:51:08,560
i think that's everything

2831
01:51:08,560 --> 01:51:11,280
um that i had slides for

2832
01:51:11,280 --> 01:51:13,360
but there were also

2833
01:51:13,360 --> 01:51:15,598
um

2834
01:51:15,840 --> 01:51:17,760
a calendar series server side

2835
01:51:17,760 --> 01:51:19,920
subscription and vpol potentially to

2836
01:51:19,920 --> 01:51:21,840
discuss mike did you have anything any

2837
01:51:21,840 --> 01:51:24,719
progress no not not at this stage um v

2838
01:51:24,719 --> 01:51:27,040
poll i'm trying to upgrade my

2839
01:51:27,040 --> 01:51:29,280
implementation but uh

2840
01:51:29,280 --> 01:51:30,560
um

2841
01:51:30,560 --> 01:51:31,840
i think we should just leave that until

2842
01:51:31,840 --> 01:51:33,679
next time maybe other stuff will be out

2843
01:51:33,679 --> 01:51:36,960
the way then so well

2844
01:51:38,560 --> 01:51:40,639
this is ken mike uh rather than send you

2845
01:51:40,639 --> 01:51:42,560
an email or text or what have you i i

2846
01:51:42,560 --> 01:51:43,520
read

2847
01:51:43,520 --> 01:51:45,280
a service type subscription and vpol

2848
01:51:45,280 --> 01:51:46,320
this morning

2849
01:51:46,320 --> 01:51:47,599
uh the example in server side

2850
01:51:47,599 --> 01:51:49,920
subscription is supposed to be a make

2851
01:51:49,920 --> 01:51:52,000
collection example and it's actually a

2852
01:51:52,000 --> 01:51:55,360
post so it just needs to be fixed

2853
01:51:55,360 --> 01:51:57,360
and as far as vpol

2854
01:51:57,360 --> 01:52:00,400
um i don't recall the discussions about

2855
01:52:00,400 --> 01:52:03,199
the actual pulse status method

2856
01:52:03,199 --> 01:52:05,599
and i'm wondering why we needed a

2857
01:52:05,599 --> 01:52:07,599
separate method as just as opposed as

2858
01:52:07,599 --> 01:52:09,119
using request

2859
01:52:09,119 --> 01:52:10,719
to refresh

2860
01:52:10,719 --> 01:52:13,280
the voters with the current vote

2861
01:52:13,280 --> 01:52:17,040
do you call why that is

2862
01:52:17,040 --> 01:52:19,360
at this stage no

2863
01:52:19,360 --> 01:52:20,400
yeah because

2864
01:52:20,400 --> 01:52:22,320
we we send the initial poll out with a

2865
01:52:22,320 --> 01:52:24,960
request we send the final result as a

2866
01:52:24,960 --> 01:52:26,320
request

2867
01:52:26,320 --> 01:52:29,280
but updating the existing

2868
01:52:29,280 --> 01:52:31,920
uh voters with the current status we

2869
01:52:31,920 --> 01:52:33,599
have a separate method

2870
01:52:33,599 --> 01:52:36,080
which seems contrary to what we do with

2871
01:52:36,080 --> 01:52:37,520
events

2872
01:52:37,520 --> 01:52:39,440
where we use requests for both the

2873
01:52:39,440 --> 01:52:42,480
initial event and any updates well

2874
01:52:42,480 --> 01:52:44,480
including just updating part stats i

2875
01:52:44,480 --> 01:52:47,679
think probably because is it okay uh i i

2876
01:52:47,679 --> 01:52:49,840
mean we we can we can certainly take

2877
01:52:49,840 --> 01:52:51,199
this offline it's just something that

2878
01:52:51,199 --> 01:52:52,560
something yeah

2879
01:52:52,560 --> 01:52:55,119
yep okay

2880
01:52:57,599 --> 01:52:59,599
cool all right i'm going to pop up the

2881
01:52:59,599 --> 01:53:01,440
milestones so we can have a glance

2882
01:53:01,440 --> 01:53:02,960
through them and then i think that will

2883
01:53:02,960 --> 01:53:06,920
basically be all our time

2884
01:53:18,080 --> 01:53:19,440
all right here's our shiny new

2885
01:53:19,440 --> 01:53:20,800
milestones

2886
01:53:20,800 --> 01:53:23,199
um submit task draft asg that's the

2887
01:53:23,199 --> 01:53:24,480
first one on the list it was supposed to

2888
01:53:24,480 --> 01:53:26,800
be january this year

2889
01:53:26,800 --> 01:53:30,080
where do we think we're at with that

2890
01:53:32,320 --> 01:53:33,679
um

2891
01:53:33,679 --> 01:53:36,480
i think so i mean i'll i'll

2892
01:53:36,480 --> 01:53:39,440
make those updates today

2893
01:53:39,440 --> 01:53:41,840
outlined and resubmit

2894
01:53:41,840 --> 01:53:43,679
possibly this week

2895
01:53:43,679 --> 01:53:47,119
cool so put that for april

2896
01:53:48,320 --> 01:53:51,440
uh it probably is the the

2897
01:53:51,440 --> 01:53:55,000
let's see if

2898
01:53:56,000 --> 01:53:58,719
it may be that the name has changed yep

2899
01:53:58,719 --> 01:54:01,520
sorry i'll change that

2900
01:54:01,520 --> 01:54:04,239
cool so target for april maybe for may

2901
01:54:04,239 --> 01:54:05,760
actually if we do a working group last

2902
01:54:05,760 --> 01:54:06,800
call

2903
01:54:06,800 --> 01:54:09,040
yep

2904
01:54:09,920 --> 01:54:11,360
it'll take about that long all right

2905
01:54:11,360 --> 01:54:12,719
good

2906
01:54:12,719 --> 01:54:15,119
uh subscription upgrade

2907
01:54:15,119 --> 01:54:17,440
was also going to be that's probably

2908
01:54:17,440 --> 01:54:19,199
even faster because that's got less work

2909
01:54:19,199 --> 01:54:20,320
to do

2910
01:54:20,320 --> 01:54:21,440
yep

2911
01:54:21,440 --> 01:54:23,840
js calendar mapping document that's a

2912
01:54:23,840 --> 01:54:25,840
little way down the line robert

2913
01:54:25,840 --> 01:54:27,679
rough estimate

2914
01:54:27,679 --> 01:54:29,679
um

2915
01:54:29,679 --> 01:54:31,760
i want to have that down for the next

2916
01:54:31,760 --> 01:54:32,880
fight here

2917
01:54:32,880 --> 01:54:34,560
all right

2918
01:54:34,560 --> 01:54:39,760
so july uh jason contact

2919
01:54:39,760 --> 01:54:42,159
same

2920
01:54:42,880 --> 01:54:45,840
people we're kicking down the road we're

2921
01:54:45,840 --> 01:54:48,400
gonna push that right out to december

2922
01:54:48,400 --> 01:54:50,320
set aside subscription kicking down the

2923
01:54:50,320 --> 01:54:52,880
road as well

2924
01:54:53,040 --> 01:54:54,800
and i calendar series we're kicking down

2925
01:54:54,800 --> 01:54:57,199
the road

2926
01:54:57,840 --> 01:54:59,599
do we have other milestones we need to

2927
01:54:59,599 --> 01:55:02,400
add here almost definitely

2928
01:55:02,400 --> 01:55:05,400
um

2929
01:55:06,560 --> 01:55:07,760
what did we what did we have in our

2930
01:55:07,760 --> 01:55:10,400
document there

2931
01:55:10,400 --> 01:55:13,598
we're going to refresh psk

2932
01:55:13,840 --> 01:55:16,080
yeah

2933
01:55:16,400 --> 01:55:19,400
um

2934
01:55:20,400 --> 01:55:22,719
yeah relations basically done that is

2935
01:55:22,719 --> 01:55:24,719
the main thing it's just kind of i can't

2936
01:55:24,719 --> 01:55:28,400
all right i'll leave that for now um

2937
01:55:29,040 --> 01:55:31,520
just put these ones through i think

2938
01:55:31,520 --> 01:55:33,760
there were errors yes because i added a

2939
01:55:33,760 --> 01:55:35,599
field that i need to remove now how do i

2940
01:55:35,599 --> 01:55:36,960
do that

2941
01:55:36,960 --> 01:55:39,760
delete i guess

2942
01:55:41,920 --> 01:55:43,599
done

2943
01:55:43,599 --> 01:55:45,280
all right uh anything else in our last

2944
01:55:45,280 --> 01:55:47,840
five minutes

2945
01:55:50,000 --> 01:55:52,080
i'll add a new milestone for the refresh

2946
01:55:52,080 --> 01:55:54,800
dock once we

2947
01:55:54,800 --> 01:55:56,480
issue that once we

2948
01:55:56,480 --> 01:55:59,280
send out a call for adoption on that

2949
01:55:59,280 --> 01:56:01,040
and i'll do a corporate option for the

2950
01:56:01,040 --> 01:56:03,199
the geodock and the

2951
01:56:03,199 --> 01:56:05,440
um

2952
01:56:05,920 --> 01:56:09,199
sub second time as well

2953
01:56:09,520 --> 01:56:12,480
all right thanks everybody

2954
01:56:12,480 --> 01:56:15,920
see you in early may for the the interim

2955
01:56:15,920 --> 01:56:16,800
and then

2956
01:56:16,800 --> 01:56:19,920
in july in philly

2957
01:56:19,920 --> 01:56:21,840
all righty

2958
01:56:21,840 --> 01:56:23,040
bye then

2959
01:56:23,040 --> 01:56:25,040
bye

2960
01:56:25,040 --> 01:56:28,040
inception

2961
01:56:39,520 --> 01:56:42,520
okay

2962
01:56:43,199 --> 01:56:44,400
all right

2963
01:56:44,400 --> 01:56:45,679
i've made my way through both those

2964
01:56:45,679 --> 01:56:48,159
water bottles

2965
01:56:48,159 --> 01:56:53,239
so while you guys are both here yeah um

2966
01:57:08,400 --> 01:57:11,040
they sent us a v4 card with the uid

2967
01:57:11,040 --> 01:57:13,119
changed from a text value to the url

2968
01:57:13,119 --> 01:57:14,159
using

2969
01:57:14,159 --> 01:57:15,119
our

2970
01:57:15,119 --> 01:57:16,960
new id as the url

2971
01:57:16,960 --> 01:57:19,280
all right and we're refusing it because

2972
01:57:19,280 --> 01:57:22,560
technically they're changing ui yeah

2973
01:57:22,560 --> 01:57:25,800
i'm sure

