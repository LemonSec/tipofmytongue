1
00:06:54,620 --> 00:07:00,300
<font color="#E5E5E5">check-check</font>

2
00:06:56,160 --> 00:07:05,640
there we go<font color="#E5E5E5"> all right well welcome to</font>

3
00:07:00,300 --> 00:07:07,740
see<font color="#CCCCCC"> Bohr um</font><font color="#E5E5E5"> anybody</font><font color="#CCCCCC"> who</font><font color="#E5E5E5"> is going to</font>

4
00:07:05,640 --> 00:07:09,300
<font color="#E5E5E5">participate you might want to come a</font>

5
00:07:07,740 --> 00:07:12,890
little bit closer to the<font color="#CCCCCC"> front so</font><font color="#E5E5E5"> you</font>

6
00:07:09,300 --> 00:07:12,890
don't have<font color="#E5E5E5"> to trot up to the microphone</font>

7
00:07:12,980 --> 00:07:17,840
can<font color="#E5E5E5"> you hear me through the mic</font><font color="#CCCCCC"> alright</font>

8
00:07:17,870 --> 00:07:30,419
um<font color="#CCCCCC"> so I'm Joe Hildebrand and this is</font>

9
00:07:22,740 --> 00:07:33,870
Francesca Palin<font color="#CCCCCC"> beany and</font><font color="#E5E5E5"> so here's the</font>

10
00:07:30,419 --> 00:07:37,430
coordinates to participate do we have

11
00:07:33,870 --> 00:07:37,430
any remote participants on<font color="#CCCCCC"> jabber</font>

12
00:07:38,060 --> 00:07:46,320
<font color="#E5E5E5">Christian</font><font color="#CCCCCC"> okay all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> um if your</font>

13
00:07:44,040 --> 00:07:48,120
remote<font color="#E5E5E5"> and you can hear me and you need</font>

14
00:07:46,320 --> 00:07:49,740
something related to the microphone

15
00:07:48,120 --> 00:07:54,180
we've got<font color="#E5E5E5"> somebody who will do that for</font>

16
00:07:49,740 --> 00:07:57,390
<font color="#E5E5E5">you prefix</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> your jabber with</font><font color="#CCCCCC"> em IC :</font>

17
00:07:54,180 --> 00:08:00,000
and he will relay it<font color="#E5E5E5"> for you</font>

18
00:07:57,390 --> 00:08:01,890
that'll be Dave<font color="#E5E5E5"> Dale are doing that the</font>

19
00:08:00,000 --> 00:08:09,320
<font color="#CCCCCC">etherpad is on here I</font><font color="#E5E5E5"> think that now</font>

20
00:08:01,890 --> 00:08:09,320
<font color="#E5E5E5">this URL should work great all right</font>

21
00:08:09,440 --> 00:08:14,250
<font color="#CCCCCC">please note well hopefully you have seen</font>

22
00:08:12,660 --> 00:08:17,910
this more than once already this<font color="#E5E5E5"> week</font>

23
00:08:14,250 --> 00:08:25,040
<font color="#E5E5E5">but they're participating here you have</font>

24
00:08:17,910 --> 00:08:27,570
certain<font color="#E5E5E5"> IPR and other requirements</font><font color="#CCCCCC"> too</font>

25
00:08:25,040 --> 00:08:28,979
<font color="#CCCCCC">so bye-bye please read this and</font>

26
00:08:27,570 --> 00:08:31,190
understand it<font color="#E5E5E5"> and make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you're</font>

27
00:08:28,979 --> 00:08:31,190
following

28
00:08:33,700 --> 00:08:41,710
agenda<font color="#E5E5E5"> so this introduction bit</font><font color="#CCCCCC"> we'll</font>

29
00:08:38,980 --> 00:08:43,000
<font color="#E5E5E5">talk about cuddle for a while for about</font>

30
00:08:41,710 --> 00:08:45,070
<font color="#E5E5E5">a half an hour</font>

31
00:08:43,000 --> 00:08:49,120
we'll talk about the<font color="#CCCCCC"> status of the</font>

32
00:08:45,070 --> 00:08:54,880
<font color="#CCCCCC">Seaboard draft and then we've</font><font color="#E5E5E5"> got the</font>

33
00:08:49,120 --> 00:08:57,520
<font color="#CCCCCC">oid draft and a techhdarre</font><font color="#E5E5E5"> draft to talk</font>

34
00:08:54,880 --> 00:09:00,189
through<font color="#E5E5E5"> and then there's one</font><font color="#CCCCCC"> that I</font>

35
00:08:57,520 --> 00:09:03,670
haven't read and should<font color="#E5E5E5"> called time tags</font>

36
00:09:00,190 --> 00:09:07,320
and then we'll wrap up anything<font color="#E5E5E5"> else</font>

37
00:09:03,670 --> 00:09:07,319
that people<font color="#E5E5E5"> want to put on this list</font>

38
00:09:07,980 --> 00:09:14,370
<font color="#E5E5E5">anything that people think we ought not</font>

39
00:09:10,150 --> 00:09:20,740
talk<font color="#E5E5E5"> about great I'm gonna take that as</font>

40
00:09:14,370 --> 00:09:24,810
good then<font color="#E5E5E5"> all right so do you want</font><font color="#CCCCCC"> to</font>

41
00:09:20,740 --> 00:09:24,810
talk<font color="#E5E5E5"> about status</font><font color="#CCCCCC"> jam</font><font color="#E5E5E5"> you keep talking</font>

42
00:09:25,560 --> 00:09:33,780
just a quick<font color="#E5E5E5"> status update since</font><font color="#CCCCCC"> Prague</font>

43
00:09:29,440 --> 00:09:36,010
so<font color="#E5E5E5"> CDL was updated after Prague and</font>

44
00:09:33,780 --> 00:09:38,829
<font color="#E5E5E5">Caston</font><font color="#CCCCCC"> and Hank</font><font color="#E5E5E5"> are gonna present some</font>

45
00:09:36,010 --> 00:09:42,040
<font color="#CCCCCC">issues that they would like the working</font>

46
00:09:38,830 --> 00:09:47,560
group to decide on then about the

47
00:09:42,040 --> 00:09:49,060
<font color="#CCCCCC">Seaboard</font><font color="#E5E5E5"> it was recently updated and to</font>

48
00:09:47,560 --> 00:09:51,130
check that you can also check<font color="#CCCCCC"> the github</font>

49
00:09:49,060 --> 00:09:53,890
<font color="#CCCCCC">because that's where the latest version</font>

50
00:09:51,130 --> 00:09:57,250
is<font color="#E5E5E5"> there is still the implementation</font>

51
00:09:53,890 --> 00:10:03,250
matrix to fill<font color="#E5E5E5"> I I have pink the main</font>

52
00:09:57,250 --> 00:10:06,970
list the<font color="#CCCCCC"> only one feeling</font><font color="#E5E5E5"> in was</font><font color="#CCCCCC"> Jo so I</font>

53
00:10:03,250 --> 00:10:10,840
think Karsten<font color="#E5E5E5"> is gonna is gonna talk</font>

54
00:10:06,970 --> 00:10:12,580
<font color="#E5E5E5">about that a little bit but please come</font>

55
00:10:10,840 --> 00:10:15,460
forward<font color="#E5E5E5"> if you have implementations and</font>

56
00:10:12,580 --> 00:10:23,910
<font color="#E5E5E5">please go to the to the wiki and and</font>

57
00:10:15,460 --> 00:10:26,050
filled it in<font color="#CCCCCC"> so it's pretty bad if I'm</font>

58
00:10:23,910 --> 00:10:28,300
the only<font color="#E5E5E5"> one</font><font color="#CCCCCC"> who's</font><font color="#E5E5E5"> actually done that</font>

59
00:10:26,050 --> 00:10:33,069
work because<font color="#E5E5E5"> I haven't done a whole</font><font color="#CCCCCC"> lot</font>

60
00:10:28,300 --> 00:10:37,650
else<font color="#E5E5E5"> so there is JavaScript in my notes</font>

61
00:10:33,070 --> 00:10:40,450
<font color="#E5E5E5">Ybor that will generate the HTML output</font>

62
00:10:37,650 --> 00:10:44,770
<font color="#CCCCCC">if you want to use that as a starting</font>

63
00:10:40,450 --> 00:10:45,880
point so<font color="#E5E5E5"> it didn't take me that long I</font>

64
00:10:44,770 --> 00:10:46,870
think<font color="#E5E5E5"> it took me maybe an hour and a</font>

65
00:10:45,880 --> 00:10:48,630
half including<font color="#CCCCCC"> getting all the</font>

66
00:10:46,870 --> 00:10:50,910
<font color="#CCCCCC">formatting</font>

67
00:10:48,630 --> 00:10:53,730
so there are<font color="#CCCCCC"> some tests in</font><font color="#E5E5E5"> there that</font>

68
00:10:50,910 --> 00:10:55,529
you can<font color="#CCCCCC"> use as you know</font><font color="#E5E5E5"> here are some</font>

69
00:10:53,730 --> 00:11:00,000
inputs and if you can process those

70
00:10:55,529 --> 00:11:02,189
inputs then you're probably in good

71
00:11:00,000 --> 00:11:06,209
shape<font color="#CCCCCC"> now I</font><font color="#E5E5E5"> don't implement all the</font>

72
00:11:02,190 --> 00:11:08,940
entire set<font color="#CCCCCC"> of extensions</font><font color="#E5E5E5"> and tags so</font>

73
00:11:06,209 --> 00:11:12,109
hopefully you know<font color="#E5E5E5"> somebody else will</font>

74
00:11:08,940 --> 00:11:12,110
<font color="#E5E5E5">have implemented</font><font color="#CCCCCC"> things that I haven't</font>

75
00:11:14,930 --> 00:11:22,649
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> about the tax documents so this is</font>

76
00:11:19,190 --> 00:11:24,480
so there are two two drafts<font color="#CCCCCC"> and about</font>

77
00:11:22,649 --> 00:11:27,329
tags that are in the Charter and now

78
00:11:24,480 --> 00:11:29,220
so the<font color="#CCCCCC"> CDL and</font><font color="#E5E5E5"> see bore our working</font>

79
00:11:27,329 --> 00:11:32,579
group documents<font color="#E5E5E5"> right now and the tags</font>

80
00:11:29,220 --> 00:11:34,440
are not<font color="#E5E5E5"> yet working group documents so</font>

81
00:11:32,579 --> 00:11:37,170
<font color="#E5E5E5">we need to talk</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> and we need</font>

82
00:11:34,440 --> 00:11:40,560
to see what is what's<font color="#E5E5E5"> the status for</font>

83
00:11:37,170 --> 00:11:43,199
those and here I just<font color="#E5E5E5"> reported what you</font>

84
00:11:40,560 --> 00:11:45,719
can see the data tracker about when

85
00:11:43,200 --> 00:11:47,339
where<font color="#CCCCCC"> these documents last update and</font>

86
00:11:45,720 --> 00:11:49,529
then we would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to hear from the</font>

87
00:11:47,339 --> 00:11:54,529
<font color="#E5E5E5">authors about what they</font><font color="#CCCCCC"> think they need</font>

88
00:11:49,529 --> 00:11:58,860
<font color="#E5E5E5">it's still needed to go for adoption and</font>

89
00:11:54,529 --> 00:12:02,459
<font color="#CCCCCC">and/or then</font><font color="#E5E5E5"> working group last call so</font>

90
00:11:58,860 --> 00:12:05,730
for the OID tags<font color="#CCCCCC"> there has been no</font>

91
00:12:02,459 --> 00:12:08,189
<font color="#E5E5E5">update since March so this document</font>

92
00:12:05,730 --> 00:12:12,510
probably needs feedback<font color="#E5E5E5"> we have asked</font>

93
00:12:08,190 --> 00:12:17,880
<font color="#CCCCCC">for it and we even yeah the past couple</font>

94
00:12:12,510 --> 00:12:21,060
of meetings<font color="#E5E5E5"> so talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that and about</font>

95
00:12:17,880 --> 00:12:24,180
<font color="#E5E5E5">the array tags</font><font color="#CCCCCC"> it was updated after</font>

96
00:12:21,060 --> 00:12:26,609
<font color="#CCCCCC">Prague</font><font color="#E5E5E5"> still needs still need reviews I</font>

97
00:12:24,180 --> 00:12:28,560
was going through the minutes for<font color="#E5E5E5"> the</font>

98
00:12:26,610 --> 00:12:30,449
past meetings and noticed noticed that

99
00:12:28,560 --> 00:12:33,810
some people promised reviews last

100
00:12:30,449 --> 00:12:36,569
meeting did<font color="#E5E5E5"> not provide maybe forgot so</font>

101
00:12:33,810 --> 00:12:39,540
<font color="#E5E5E5">I'm just gonna remind it here Jim and</font>

102
00:12:36,570 --> 00:12:41,550
Paul promised reviews on<font color="#E5E5E5"> this document</font>

103
00:12:39,540 --> 00:12:43,769
<font color="#E5E5E5">it's it's short</font>

104
00:12:41,550 --> 00:12:47,609
<font color="#CCCCCC">it shouldn't you</font><font color="#E5E5E5"> shouldn't take you long</font>

105
00:12:43,769 --> 00:12:52,410
but yeah so we'll talk<font color="#E5E5E5"> about this one</font>

106
00:12:47,610 --> 00:12:55,550
<font color="#CCCCCC">too</font><font color="#E5E5E5"> I think that's it from us and I'm</font>

107
00:12:52,410 --> 00:12:55,550
<font color="#E5E5E5">going to start with</font><font color="#CCCCCC"> CTL</font>

108
00:13:01,690 --> 00:13:04,739
[Music]

109
00:13:19,079 --> 00:13:36,040
<font color="#CCCCCC">if I tip over you have to catch me</font>

110
00:13:23,139 --> 00:13:40,120
okay<font color="#E5E5E5"> so</font><font color="#CCCCCC"> um what's this no no it actually</font>

111
00:13:36,040 --> 00:13:51,069
works does anybody know how<font color="#CCCCCC"> to run this</font>

112
00:13:40,120 --> 00:14:04,870
on<font color="#CCCCCC"> you has something to</font><font color="#E5E5E5"> do with it not</font>

113
00:13:51,069 --> 00:14:07,120
<font color="#CCCCCC">being switched on okay so if you can try</font>

114
00:14:04,870 --> 00:14:10,389
<font color="#E5E5E5">switching it out it worked after</font>

115
00:14:07,120 --> 00:14:12,009
<font color="#E5E5E5">switching it on in the</font><font color="#CCCCCC"> car</font><font color="#E5E5E5"> meeting so I</font>

116
00:14:10,389 --> 00:14:17,680
think it<font color="#CCCCCC"> really just needs to research</font>

117
00:14:12,009 --> 00:14:21,220
on okay so just reminder of what this

118
00:14:17,680 --> 00:14:25,300
group is about<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> supposed</font><font color="#CCCCCC"> to take</font>

119
00:14:21,220 --> 00:14:27,040
our<font color="#E5E5E5"> c7</font><font color="#CCCCCC"> 349</font><font color="#E5E5E5"> to standards level we are</font>

120
00:14:25,300 --> 00:14:31,389
<font color="#E5E5E5">supposed to standardize the standardized</font>

121
00:14:27,040 --> 00:14:33,779
CDL and do a few tag structure<font color="#E5E5E5"> nuts so</font>

122
00:14:31,389 --> 00:14:39,730
that's what's currently the Charter and

123
00:14:33,779 --> 00:14:45,029
I run through this in three<font color="#CCCCCC"> parts</font><font color="#E5E5E5"> the</font>

124
00:14:39,730 --> 00:14:47,709
first<font color="#CCCCCC"> one is about CD</font><font color="#E5E5E5"> DL</font><font color="#CCCCCC"> so I'm not</font><font color="#E5E5E5"> sure</font>

125
00:14:45,029 --> 00:14:51,660
<font color="#E5E5E5">Hank is here because he</font><font color="#CCCCCC"> has a</font><font color="#E5E5E5"> conflict</font>

126
00:14:47,709 --> 00:14:56,739
with net conf so I'm not<font color="#E5E5E5"> sure you can</font>

127
00:14:51,660 --> 00:15:00,819
make<font color="#CCCCCC"> this</font><font color="#E5E5E5"> meeting and and</font><font color="#CCCCCC"> christophe is</font>

128
00:14:56,740 --> 00:15:02,620
in raven unfortunately<font color="#E5E5E5"> so just to remind</font>

129
00:15:00,819 --> 00:15:04,540
<font color="#E5E5E5">people what</font><font color="#CCCCCC"> CDL is about and give a</font>

130
00:15:02,620 --> 00:15:06,939
<font color="#E5E5E5">little</font><font color="#CCCCCC"> bit of a tutorial that is</font>

131
00:15:04,540 --> 00:15:10,630
probably needed<font color="#CCCCCC"> to talk about the</font><font color="#E5E5E5"> actual</font>

132
00:15:06,939 --> 00:15:17,339
issue that we should<font color="#E5E5E5"> discuss today</font><font color="#CCCCCC"> we</font>

133
00:15:10,630 --> 00:15:20,680
have been using<font color="#E5E5E5"> BNF since RFC 40 so that</font>

134
00:15:17,339 --> 00:15:22,540
comes quite well together with being at

135
00:15:20,680 --> 00:15:27,250
ITF 100 this has a

136
00:15:22,540 --> 00:15:31,060
tradition<font color="#E5E5E5"> and for about</font><font color="#CCCCCC"> forty years</font><font color="#E5E5E5"> we</font>

137
00:15:27,250 --> 00:15:34,300
have<font color="#E5E5E5"> been using a BNF the Augmented BNF</font>

138
00:15:31,060 --> 00:15:38,829
that can<font color="#CCCCCC"> hair</font><font color="#E5E5E5"> enstein developed for the</font>

139
00:15:34,300 --> 00:15:41,050
mail<font color="#CCCCCC"> every day</font><font color="#E5E5E5"> I think so this is</font>

140
00:15:38,830 --> 00:15:46,000
something<font color="#CCCCCC"> we have some</font><font color="#E5E5E5"> experience with</font>

141
00:15:41,050 --> 00:15:48,729
and there are 750<font color="#E5E5E5"> to</font><font color="#CCCCCC"> overseas that</font>

142
00:15:46,000 --> 00:15:51,370
reference<font color="#CCCCCC"> the the a B and</font><font color="#E5E5E5"> F standards</font>

143
00:15:48,730 --> 00:15:53,590
<font color="#CCCCCC">RFC so one could say this is</font><font color="#E5E5E5"> a</font>

144
00:15:51,370 --> 00:15:55,470
<font color="#CCCCCC">successful</font><font color="#E5E5E5"> our see it's even more</font>

145
00:15:53,590 --> 00:15:58,510
successful<font color="#E5E5E5"> than yang which is currently</font>

146
00:15:55,470 --> 00:16:02,980
<font color="#CCCCCC">referenced by 160 ourseives</font>

147
00:15:58,510 --> 00:16:05,830
there is some tool support<font color="#E5E5E5"> it hit the</font><font color="#CCCCCC"> a</font>

148
00:16:02,980 --> 00:16:09,850
B<font color="#CCCCCC"> and F</font><font color="#E5E5E5"> form it hasn't taken the world</font>

149
00:16:05,830 --> 00:16:13,840
by storm<font color="#CCCCCC"> but there is support</font><font color="#E5E5E5"> we have</font>

150
00:16:09,850 --> 00:16:19,870
our own tools like<font color="#E5E5E5"> Bill</font><font color="#CCCCCC"> feni's</font><font color="#E5E5E5"> a bap and</font>

151
00:16:13,840 --> 00:16:23,050
a B and F<font color="#CCCCCC"> Gen</font><font color="#E5E5E5"> but also will establish</font>

152
00:16:19,870 --> 00:16:26,650
<font color="#E5E5E5">pathogen</font><font color="#CCCCCC"> rater towards like endler</font><font color="#E5E5E5"> as</font>

153
00:16:23,050 --> 00:16:29,349
supported and it's just normal<font color="#CCCCCC"> in the</font>

154
00:16:26,650 --> 00:16:34,060
IDF<font color="#E5E5E5"> if you do a text-based protocol you</font>

155
00:16:29,350 --> 00:16:37,890
write in a<font color="#E5E5E5"> BNF spec so this is our role</font>

156
00:16:34,060 --> 00:16:41,199
model here<font color="#E5E5E5"> we want to be like a</font><font color="#CCCCCC"> BNF and</font>

157
00:16:37,890 --> 00:16:43,030
actually<font color="#E5E5E5"> that not only works on on a</font>

158
00:16:41,200 --> 00:16:46,780
high<font color="#CCCCCC"> level</font><font color="#E5E5E5"> but also on a technical level</font>

159
00:16:43,030 --> 00:16:49,390
<font color="#E5E5E5">a B&F is composed of productions so you</font>

160
00:16:46,780 --> 00:16:51,910
have<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like an address</font>

161
00:16:49,390 --> 00:16:54,370
specification and that is a local part

162
00:16:51,910 --> 00:16:58,420
followed by an<font color="#CCCCCC"> ad side @ sign followed</font>

163
00:16:54,370 --> 00:17:00,880
by a domain<font color="#E5E5E5"> so what these a B and F</font>

164
00:16:58,420 --> 00:17:03,550
<font color="#CCCCCC">routes do they give names for</font>

165
00:17:00,880 --> 00:17:06,310
sublanguage<font color="#CCCCCC"> 'as and then you have two</font>

166
00:17:03,550 --> 00:17:09,220
kinds<font color="#CCCCCC"> of composition you can compose by</font>

167
00:17:06,310 --> 00:17:11,260
concatenation like like this does<font color="#CCCCCC"> here</font>

168
00:17:09,220 --> 00:17:14,560
from<font color="#CCCCCC"> catenate in a local party net sign</font>

169
00:17:11,260 --> 00:17:19,750
<font color="#E5E5E5">in a domain</font><font color="#CCCCCC"> all you can compose by</font>

170
00:17:14,560 --> 00:17:22,839
choice and<font color="#E5E5E5"> this nesting structure then</font>

171
00:17:19,750 --> 00:17:27,310
at some point terminates at literals

172
00:17:22,839 --> 00:17:29,709
like the<font color="#CCCCCC"> add sign here</font><font color="#E5E5E5"> or we add a B and</font>

173
00:17:27,310 --> 00:17:33,879
F notations for literal so this just

174
00:17:29,710 --> 00:17:35,020
means all<font color="#E5E5E5"> ASCII characters between 33</font>

175
00:17:33,880 --> 00:17:40,000
decimal

176
00:17:35,020 --> 00:17:43,330
and<font color="#E5E5E5"> 90</font><font color="#CCCCCC"> Jason okay so this</font><font color="#E5E5E5"> production</font>

177
00:17:40,000 --> 00:17:46,240
based way of constructing languages of

178
00:17:43,330 --> 00:17:49,449
<font color="#E5E5E5">course has been with us in computer</font>

179
00:17:46,240 --> 00:17:52,320
science<font color="#E5E5E5"> since the late 50s</font><font color="#CCCCCC"> when John</font>

180
00:17:49,450 --> 00:17:56,590
<font color="#E5E5E5">Becker's invented it for for Fortran and</font>

181
00:17:52,320 --> 00:17:59,590
what we need<font color="#E5E5E5"> to do to use the same</font>

182
00:17:56,590 --> 00:18:02,860
technology<font color="#CCCCCC"> for</font><font color="#E5E5E5"> Jason and see</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> our</font>

183
00:17:59,590 --> 00:18:07,590
data structures is to<font color="#E5E5E5"> apply it to</font><font color="#CCCCCC"> trees</font>

184
00:18:02,860 --> 00:18:11,679
- trees of data and not to text<font color="#E5E5E5"> strings</font>

185
00:18:07,590 --> 00:18:15,310
<font color="#CCCCCC">so given that the data that we are using</font>

186
00:18:11,680 --> 00:18:17,350
are integers text strings binary strings

187
00:18:15,310 --> 00:18:21,340
<font color="#E5E5E5">floating-point and so on we have to add</font>

188
00:18:17,350 --> 00:18:23,409
literals<font color="#E5E5E5"> for those primitive types we</font>

189
00:18:21,340 --> 00:18:26,470
not only have text<font color="#CCCCCC"> strings we</font><font color="#E5E5E5"> have these</font>

190
00:18:23,410 --> 00:18:30,010
<font color="#E5E5E5">other</font><font color="#CCCCCC"> things as well and we have</font>

191
00:18:26,470 --> 00:18:32,080
<font color="#E5E5E5">conveyed constructors for the</font><font color="#CCCCCC"> to</font>

192
00:18:30,010 --> 00:18:35,290
container types we<font color="#CCCCCC"> have in</font><font color="#E5E5E5"> JSON and</font><font color="#CCCCCC"> C</font>

193
00:18:32,080 --> 00:18:38,500
were the<font color="#E5E5E5"> V arrays and maps and the whole</font>

194
00:18:35,290 --> 00:18:40,870
thing<font color="#E5E5E5"> is inspired by relax ng which was</font>

195
00:18:38,500 --> 00:18:44,160
the the schema<font color="#CCCCCC"> language for</font><font color="#E5E5E5"> exam is done</font>

196
00:18:40,870 --> 00:18:47,260
right<font color="#E5E5E5"> you probably know another one and</font>

197
00:18:44,160 --> 00:18:49,690
yeah I'm not going to comment on<font color="#E5E5E5"> that</font>

198
00:18:47,260 --> 00:18:54,370
<font color="#E5E5E5">one but relax and G has done some some</font>

199
00:18:49,690 --> 00:18:59,380
<font color="#CCCCCC">interesting work here too so in CDL</font>

200
00:18:54,370 --> 00:19:02,830
rural names<font color="#E5E5E5"> are types you can write</font>

201
00:18:59,380 --> 00:19:05,680
something<font color="#E5E5E5"> like boolean is either a false</font>

202
00:19:02,830 --> 00:19:08,320
or<font color="#E5E5E5"> true and then you have a boolean</font><font color="#CCCCCC"> type</font>

203
00:19:05,680 --> 00:19:12,670
followed<font color="#E5E5E5"> by the way is</font><font color="#CCCCCC"> also a type which</font>

204
00:19:08,320 --> 00:19:14,800
has<font color="#E5E5E5"> just one number the value</font><font color="#CCCCCC"> falls you</font>

205
00:19:12,670 --> 00:19:17,350
could have something like<font color="#E5E5E5"> label which</font><font color="#CCCCCC"> is</font>

206
00:19:14,800 --> 00:19:20,590
either a<font color="#E5E5E5"> text or an integer this would</font>

207
00:19:17,350 --> 00:19:23,679
be an application<font color="#CCCCCC"> specific type or an</font>

208
00:19:20,590 --> 00:19:26,980
integer is actually either an unsigned

209
00:19:23,680 --> 00:19:29,850
integer<font color="#CCCCCC"> or a negative integer in C bar</font>

210
00:19:26,980 --> 00:19:35,110
<font color="#E5E5E5">so types are just sets of potential</font>

211
00:19:29,850 --> 00:19:38,320
values and<font color="#E5E5E5"> literal is just a very small</font>

212
00:19:35,110 --> 00:19:41,290
type so this little one here is a type

213
00:19:38,320 --> 00:19:43,750
with the<font color="#E5E5E5"> one member in it which</font><font color="#CCCCCC"> is the</font>

214
00:19:41,290 --> 00:19:46,629
number<font color="#E5E5E5"> one and then there are there</font><font color="#CCCCCC"> are</font>

215
00:19:43,750 --> 00:19:48,600
<font color="#CCCCCC">other ways of writing these types for</font>

216
00:19:46,630 --> 00:19:51,479
instance one<font color="#CCCCCC"> two</font>

217
00:19:48,600 --> 00:19:56,939
actually means<font color="#E5E5E5"> a type that contains the</font>

218
00:19:51,479 --> 00:20:00,479
numbers one two and<font color="#E5E5E5"> three</font><font color="#CCCCCC"> so that's one</font>

219
00:19:56,940 --> 00:20:04,830
part the<font color="#CCCCCC"> other part that</font><font color="#E5E5E5"> feels a bit</font>

220
00:20:00,479 --> 00:20:07,700
more<font color="#E5E5E5"> like an ABN F grammar is the groups</font>

221
00:20:04,830 --> 00:20:12,809
the groups allow you to write down

222
00:20:07,700 --> 00:20:16,320
sequences<font color="#E5E5E5"> of items and these sequences</font>

223
00:20:12,809 --> 00:20:22,349
of<font color="#E5E5E5"> items can then be</font><font color="#CCCCCC"> used within</font><font color="#E5E5E5"> arrays</font>

224
00:20:16,320 --> 00:20:25,590
or within<font color="#E5E5E5"> maps so the interesting thing</font>

225
00:20:22,349 --> 00:20:27,869
<font color="#CCCCCC">about the group construct</font><font color="#E5E5E5"> is that there</font>

226
00:20:25,590 --> 00:20:30,599
is a single construct for both defining

227
00:20:27,869 --> 00:20:35,869
<font color="#CCCCCC">maps and arrays</font><font color="#E5E5E5"> and of course maps and</font>

228
00:20:30,599 --> 00:20:39,840
arrays are very different<font color="#CCCCCC"> maps have a</font>

229
00:20:35,869 --> 00:20:42,809
label the label is ignored when you use

230
00:20:39,840 --> 00:20:47,009
the group within<font color="#E5E5E5"> an</font><font color="#CCCCCC"> array</font><font color="#E5E5E5"> and on the</font>

231
00:20:42,809 --> 00:20:52,080
other hand<font color="#E5E5E5"> arrays have a sequence which</font>

232
00:20:47,009 --> 00:20:56,070
is ignored<font color="#E5E5E5"> within maps so groups are</font>

233
00:20:52,080 --> 00:20:58,649
grammars<font color="#CCCCCC"> for</font><font color="#E5E5E5"> key value pairs</font><font color="#CCCCCC"> and keys</font>

234
00:20:56,070 --> 00:21:01,710
<font color="#CCCCCC">and values are types so this is where</font>

235
00:20:58,649 --> 00:21:04,168
the circle closes you compose groups of

236
00:21:01,710 --> 00:21:07,889
types<font color="#E5E5E5"> and you compose types if they</font>

237
00:21:04,169 --> 00:21:09,979
contain arrays or<font color="#E5E5E5"> maps</font><font color="#CCCCCC"> out of groups</font><font color="#E5E5E5"> so</font>

238
00:21:07,889 --> 00:21:14,340
that's essentially<font color="#E5E5E5"> the whole</font><font color="#CCCCCC"> technology</font>

239
00:21:09,979 --> 00:21:17,159
behind<font color="#CCCCCC"> CD DL and the result is that</font><font color="#E5E5E5"> you</font>

240
00:21:14,340 --> 00:21:19,289
<font color="#CCCCCC">can write something like this this was</font>

241
00:21:17,159 --> 00:21:23,279
one of<font color="#E5E5E5"> the first examples when we read</font>

242
00:21:19,289 --> 00:21:26,309
RFC 1771<font color="#E5E5E5"> we were annoyed that they had</font>

243
00:21:23,279 --> 00:21:29,489
to define<font color="#E5E5E5"> a special stylized form of</font>

244
00:21:26,309 --> 00:21:32,039
<font color="#E5E5E5">English to define their</font><font color="#CCCCCC"> JSON data type</font>

245
00:21:29,489 --> 00:21:35,609
which takes<font color="#E5E5E5"> I don't know four or five</font>

246
00:21:32,039 --> 00:21:40,849
<font color="#E5E5E5">pages and so this is the technical</font>

247
00:21:35,609 --> 00:21:43,918
<font color="#CCCCCC">content of RFC</font><font color="#E5E5E5"> 7:07</font><font color="#CCCCCC"> one on one slide so</font>

248
00:21:40,849 --> 00:21:46,678
<font color="#CCCCCC">what we have here is a name</font><font color="#E5E5E5"> for a type</font>

249
00:21:43,919 --> 00:21:52,109
the type is reputation<font color="#E5E5E5"> object we have</font>

250
00:21:46,679 --> 00:21:55,529
the map or JSON object<font color="#CCCCCC"> braces and then</font>

251
00:21:52,109 --> 00:21:58,109
what's in here is a group which says you

252
00:21:55,529 --> 00:21:59,480
can have the label<font color="#E5E5E5"> application with a</font>

253
00:21:58,109 --> 00:22:02,000
value of text

254
00:21:59,480 --> 00:22:04,159
and<font color="#CCCCCC"> I'll show you</font><font color="#E5E5E5"> you must have because</font>

255
00:22:02,000 --> 00:22:08,240
there's no<font color="#E5E5E5"> question</font><font color="#CCCCCC"> marks there and you</font>

256
00:22:04,159 --> 00:22:11,720
<font color="#E5E5E5">must have</font><font color="#CCCCCC"> labeled reputations which has</font>

257
00:22:08,240 --> 00:22:14,450
an array of zero or more refuge ins<font color="#E5E5E5"> in</font>

258
00:22:11,720 --> 00:22:17,720
it<font color="#E5E5E5"> and the refuge one is this thing with</font>

259
00:22:14,450 --> 00:22:22,250
some mandatory parts and some optional

260
00:22:17,720 --> 00:22:24,440
parts and a<font color="#CCCCCC"> wild-card at the</font><font color="#E5E5E5"> end that is</font>

261
00:22:22,250 --> 00:22:27,380
there to express<font color="#E5E5E5"> the extensibility</font><font color="#CCCCCC"> and</font>

262
00:22:24,440 --> 00:22:31,399
<font color="#CCCCCC">that's really the heart is</font><font color="#E5E5E5"> the one thing</font>

263
00:22:27,380 --> 00:22:36,460
<font color="#E5E5E5">we have to</font><font color="#CCCCCC"> talk about so yeah these</font>

264
00:22:31,399 --> 00:22:39,139
groups get<font color="#E5E5E5"> names like types get names</font><font color="#CCCCCC"> so</font>

265
00:22:36,460 --> 00:22:40,519
when you look at<font color="#CCCCCC"> it</font><font color="#E5E5E5"> CDA documents</font>

266
00:22:39,139 --> 00:22:43,070
superficially you may not always be

267
00:22:40,519 --> 00:22:45,710
aware<font color="#E5E5E5"> which name is</font><font color="#CCCCCC"> a group and which</font>

268
00:22:43,070 --> 00:22:51,408
name is<font color="#E5E5E5"> a type but generally that that</font>

269
00:22:45,710 --> 00:22:53,899
becomes clear<font color="#E5E5E5"> from the context so just</font>

270
00:22:51,409 --> 00:22:56,240
to give an example<font color="#CCCCCC"> of why we</font><font color="#E5E5E5"> want to</font>

271
00:22:53,899 --> 00:22:57,889
<font color="#E5E5E5">finish this now there is this draft in</font>

272
00:22:56,240 --> 00:23:01,370
<font color="#CCCCCC">the RFC editor queue which</font><font color="#E5E5E5"> is called</font>

273
00:22:57,889 --> 00:23:05,000
draft<font color="#CCCCCC"> IETF</font><font color="#E5E5E5"> enema</font><font color="#CCCCCC"> grasped 15 dot text</font><font color="#E5E5E5"> and</font>

274
00:23:01,370 --> 00:23:08,510
that draft<font color="#E5E5E5"> is done and it's</font><font color="#CCCCCC"> just waiting</font>

275
00:23:05,000 --> 00:23:11,860
<font color="#E5E5E5">for for CDH to get published so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> we</font>

276
00:23:08,510 --> 00:23:15,169
already have<font color="#E5E5E5"> specs out there that have</font>

277
00:23:11,860 --> 00:23:16,760
references to CDL some<font color="#E5E5E5"> informative</font>

278
00:23:15,169 --> 00:23:18,919
because<font color="#CCCCCC"> they</font><font color="#E5E5E5"> just repeat the</font>

279
00:23:16,760 --> 00:23:21,080
specification<font color="#E5E5E5"> and some normative like</font>

280
00:23:18,919 --> 00:23:23,480
the grasp specification and<font color="#E5E5E5"> we want to</font>

281
00:23:21,080 --> 00:23:27,649
make<font color="#CCCCCC"> sure that we don't destroy this</font>

282
00:23:23,480 --> 00:23:34,100
specification<font color="#E5E5E5"> by a changing CDL in in a</font>

283
00:23:27,649 --> 00:23:37,668
major way<font color="#CCCCCC"> and there are a few more the</font>

284
00:23:34,100 --> 00:23:42,949
<font color="#E5E5E5">FC SDI was outside the IGF</font><font color="#CCCCCC"> which cannot</font>

285
00:23:37,669 --> 00:23:47,059
be named in this room<font color="#CCCCCC"> but you</font><font color="#E5E5E5"> can guess</font>

286
00:23:42,950 --> 00:23:48,340
<font color="#CCCCCC">three letter and longer acronym</font><font color="#E5E5E5"> who that</font>

287
00:23:47,059 --> 00:23:54,110
might be

288
00:23:48,340 --> 00:23:56,379
<font color="#E5E5E5">so yeah we don't want to break it</font><font color="#CCCCCC"> and we</font>

289
00:23:54,110 --> 00:24:01,370
<font color="#E5E5E5">don't want to put in the kitchen</font><font color="#CCCCCC"> thing</font>

290
00:23:56,380 --> 00:24:05,299
but currently is one of the<font color="#E5E5E5"> two focuses</font>

291
00:24:01,370 --> 00:24:09,049
is getting the definition of the

292
00:24:05,299 --> 00:24:12,559
semantics of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> language unambiguous so</font>

293
00:24:09,049 --> 00:24:13,250
tool vendors<font color="#E5E5E5"> come in and say yes we can</font>

294
00:24:12,559 --> 00:24:17,000
<font color="#E5E5E5">implement that</font>

295
00:24:13,250 --> 00:24:20,210
and one new<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> which isn't in the</font>

296
00:24:17,000 --> 00:24:24,380
internet draft<font color="#E5E5E5"> yet it's in the topic</font>

297
00:24:20,210 --> 00:24:31,220
branch<font color="#E5E5E5"> in the github is</font><font color="#CCCCCC"> appendix</font><font color="#E5E5E5"> B that</font>

298
00:24:24,380 --> 00:24:35,539
is called matching<font color="#CCCCCC"> and it</font><font color="#E5E5E5"> summarizes</font><font color="#CCCCCC"> the</font>

299
00:24:31,220 --> 00:24:38,780
matching<font color="#E5E5E5"> words that are used</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> CD types</font>

300
00:24:35,539 --> 00:24:43,039
and groups<font color="#E5E5E5"> in a short way it essentially</font>

301
00:24:38,780 --> 00:24:44,870
<font color="#CCCCCC">just goes through</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ABN F of course</font><font color="#E5E5E5"> CD</font>

302
00:24:43,039 --> 00:24:47,600
<font color="#E5E5E5">DL as if it's a texture language as</font>

303
00:24:44,870 --> 00:24:51,620
defined in a B and F<font color="#E5E5E5"> and it goes through</font>

304
00:24:47,600 --> 00:24:54,439
that<font color="#E5E5E5"> a B and F and for</font><font color="#CCCCCC"> every CD I</font>

305
00:24:51,620 --> 00:24:57,979
construct<font color="#E5E5E5"> that exists it concisely</font>

306
00:24:54,440 --> 00:25:00,530
<font color="#E5E5E5">summarizes the</font><font color="#CCCCCC"> CDR it semantics</font><font color="#E5E5E5"> and what</font>

307
00:24:57,980 --> 00:25:03,320
we need<font color="#E5E5E5"> to find out is whether that new</font>

308
00:25:00,530 --> 00:25:06,889
appendix is useful<font color="#E5E5E5"> whether it is correct</font>

309
00:25:03,320 --> 00:25:08,450
<font color="#CCCCCC">and whether</font><font color="#E5E5E5"> it is complete so that's</font>

310
00:25:06,890 --> 00:25:12,620
something where where it would<font color="#E5E5E5"> be really</font>

311
00:25:08,450 --> 00:25:14,240
useful<font color="#CCCCCC"> to get reuse on so if people</font>

312
00:25:12,620 --> 00:25:15,649
<font color="#E5E5E5">think it's useful and I think</font><font color="#CCCCCC"> the</font>

313
00:25:14,240 --> 00:25:18,470
mailing list has had pretty much<font color="#E5E5E5"> a</font>

314
00:25:15,650 --> 00:25:21,610
consensus that<font color="#E5E5E5"> it is useful we would put</font>

315
00:25:18,470 --> 00:25:25,970
this<font color="#E5E5E5"> into the next version</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> draft</font>

316
00:25:21,610 --> 00:25:28,309
so that's one<font color="#CCCCCC"> area of</font><font color="#E5E5E5"> work the other</font>

317
00:25:25,970 --> 00:25:32,659
area<font color="#CCCCCC"> of work is</font><font color="#E5E5E5"> actually making</font>

318
00:25:28,309 --> 00:25:36,620
<font color="#CCCCCC">technical changes</font><font color="#E5E5E5"> and so far the</font>

319
00:25:32,659 --> 00:25:38,720
appetite<font color="#CCCCCC"> for that has</font><font color="#E5E5E5"> been limited</font><font color="#CCCCCC"> so</font>

320
00:25:36,620 --> 00:25:41,209
they have been few people who said I

321
00:25:38,720 --> 00:25:47,470
have said we would like to<font color="#E5E5E5"> change this</font>

322
00:25:41,210 --> 00:25:51,080
and<font color="#CCCCCC"> Dad except for one area and the</font>

323
00:25:47,470 --> 00:25:56,120
problem comes<font color="#E5E5E5"> in when you add a</font><font color="#CCCCCC"> wildcard</font>

324
00:25:51,080 --> 00:25:59,928
to some existing<font color="#E5E5E5"> map definition that's</font>

325
00:25:56,120 --> 00:26:02,539
why it was discussed under<font color="#E5E5E5"> the heading</font>

326
00:25:59,929 --> 00:26:06,169
map validation but it's actually a more

327
00:26:02,539 --> 00:26:08,809
general issue<font color="#E5E5E5"> so since this is a</font>

328
00:26:06,169 --> 00:26:13,370
productive<font color="#CCCCCC"> language based on the same</font>

329
00:26:08,809 --> 00:26:18,289
<font color="#E5E5E5">concepts as a B and F these two parts of</font>

330
00:26:13,370 --> 00:26:19,850
the group are taken separately<font color="#E5E5E5"> they are</font>

331
00:26:18,289 --> 00:26:21,740
<font color="#E5E5E5">not interpreted together they are just</font>

332
00:26:19,850 --> 00:26:23,539
interpreted as they are and the language

333
00:26:21,740 --> 00:26:26,660
is then constructed by taking<font color="#E5E5E5"> these two</font>

334
00:26:23,539 --> 00:26:31,460
two parts together like like in a

335
00:26:26,660 --> 00:26:34,210
<font color="#CCCCCC">because now</font><font color="#E5E5E5"> nonfarm you</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> so this</font>

336
00:26:31,460 --> 00:26:37,910
has we might have an entry in the map

337
00:26:34,210 --> 00:26:42,740
<font color="#E5E5E5">with a key of</font><font color="#CCCCCC"> four and a value of type</font>

338
00:26:37,910 --> 00:26:47,150
text<font color="#CCCCCC"> and we might have any kind of entry</font>

339
00:26:42,740 --> 00:26:49,820
<font color="#CCCCCC">that has an unsigned integer as</font><font color="#E5E5E5"> the key</font>

340
00:26:47,150 --> 00:26:53,020
<font color="#E5E5E5">and any data type because we don't know</font>

341
00:26:49,820 --> 00:26:59,059
yet how we will extend things<font color="#E5E5E5"> as a value</font>

342
00:26:53,020 --> 00:27:01,250
so that's generally<font color="#CCCCCC"> fine however really</font>

343
00:26:59,059 --> 00:27:04,158
what what like one what one would like

344
00:27:01,250 --> 00:27:07,970
<font color="#CCCCCC">to explain here to express</font><font color="#E5E5E5"> here is that</font>

345
00:27:04,159 --> 00:27:10,730
the fall is taken so<font color="#E5E5E5"> we don't really</font>

346
00:27:07,970 --> 00:27:13,940
<font color="#CCCCCC">want</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> other guy here to say oh by</font>

347
00:27:10,730 --> 00:27:16,640
the way you also can have<font color="#CCCCCC"> a key of four</font>

348
00:27:13,940 --> 00:27:21,700
<font color="#E5E5E5">and any value because the the falls</font>

349
00:27:16,640 --> 00:27:23,750
already taken with<font color="#E5E5E5"> us now a grammar</font>

350
00:27:21,700 --> 00:27:26,020
<font color="#E5E5E5">mathematician will tell you oh you are</font>

351
00:27:23,750 --> 00:27:28,610
<font color="#E5E5E5">making the grammar context-sensitive</font><font color="#CCCCCC"> and</font>

352
00:27:26,020 --> 00:27:32,389
that's exactly<font color="#E5E5E5"> the reason why we haven't</font>

353
00:27:28,610 --> 00:27:34,330
<font color="#E5E5E5">done this yet context-free grammars have</font>

354
00:27:32,390 --> 00:27:38,090
advantages of a<font color="#E5E5E5"> context-sensitive</font>

355
00:27:34,330 --> 00:27:40,189
grammars<font color="#E5E5E5"> but the</font><font color="#CCCCCC"> discussion on the</font>

356
00:27:38,090 --> 00:27:41,990
mailing list<font color="#E5E5E5"> was this is really a</font>

357
00:27:40,190 --> 00:27:45,559
feature we would like to<font color="#E5E5E5"> have it would</font>

358
00:27:41,990 --> 00:27:49,130
really be useful<font color="#CCCCCC"> if we get an instance</font>

359
00:27:45,559 --> 00:27:51,710
that<font color="#E5E5E5"> has a key of four and a value of</font>

360
00:27:49,130 --> 00:27:54,110
floating point would really be good<font color="#E5E5E5"> to</font>

361
00:27:51,710 --> 00:27:56,210
<font color="#E5E5E5">have a validator throw an error for</font><font color="#CCCCCC"> that</font>

362
00:27:54,110 --> 00:28:00,559
instead<font color="#CCCCCC"> of just</font><font color="#E5E5E5"> accepting it because</font>

363
00:27:56,210 --> 00:28:04,220
it's captured by the wild card now how

364
00:28:00,559 --> 00:28:06,830
do we fix this there is<font color="#E5E5E5"> one possible</font>

365
00:28:04,220 --> 00:28:09,650
answer and this is a slide I have used

366
00:28:06,830 --> 00:28:13,100
last time<font color="#E5E5E5"> in the list of kitchen things</font>

367
00:28:09,650 --> 00:28:18,250
saying things we might<font color="#CCCCCC"> want to add which</font>

368
00:28:13,100 --> 00:28:21,590
is cuts cuts is something that is it was

369
00:28:18,250 --> 00:28:24,890
initially defined by the Prolog

370
00:28:21,590 --> 00:28:28,129
programming language<font color="#E5E5E5"> and recently has</font>

371
00:28:24,890 --> 00:28:31,130
become<font color="#CCCCCC"> an item</font><font color="#E5E5E5"> of interest for</font><font color="#CCCCCC"> people</font>

372
00:28:28,130 --> 00:28:35,630
who do<font color="#CCCCCC"> pause expression grammar pauses</font>

373
00:28:31,130 --> 00:28:37,700
so<font color="#E5E5E5"> BNF started out just as</font><font color="#CCCCCC"> a language</font>

374
00:28:35,630 --> 00:28:41,180
<font color="#CCCCCC">for</font><font color="#E5E5E5"> defining things then the theory</font>

375
00:28:37,700 --> 00:28:44,870
was built around that<font color="#E5E5E5"> and two theories</font>

376
00:28:41,180 --> 00:28:46,490
emerged<font color="#E5E5E5"> one was way too complicated</font><font color="#CCCCCC"> way</font>

377
00:28:44,870 --> 00:28:48,800
too expensive<font color="#E5E5E5"> to implement the past</font>

378
00:28:46,490 --> 00:28:52,820
expression grammars<font color="#E5E5E5"> so the theory veered</font>

379
00:28:48,800 --> 00:28:54,350
off<font color="#E5E5E5"> into LR and pauses and so on but in</font>

380
00:28:52,820 --> 00:28:57,500
<font color="#E5E5E5">the meantime people have started to do a</font>

381
00:28:54,350 --> 00:29:01,370
<font color="#E5E5E5">pause expression grammars again and the</font>

382
00:28:57,500 --> 00:29:04,100
example here<font color="#E5E5E5"> is we have</font><font color="#CCCCCC"> a data type</font><font color="#E5E5E5"> a</font>

383
00:29:01,370 --> 00:29:08,600
which is either an ant or a cat or<font color="#E5E5E5"> an</font>

384
00:29:04,100 --> 00:29:11,090
egg<font color="#CCCCCC"> and the ant is an array with the</font>

385
00:29:08,600 --> 00:29:14,169
<font color="#E5E5E5">first element being ant and the second</font>

386
00:29:11,090 --> 00:29:20,300
<font color="#E5E5E5">being an unsigned integer</font><font color="#CCCCCC"> cat text</font><font color="#E5E5E5"> egg</font>

387
00:29:14,170 --> 00:29:32,570
float<font color="#E5E5E5"> no the yes yes</font>

388
00:29:20,300 --> 00:29:35,330
oh yeah<font color="#E5E5E5"> this should</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> okay that were</font>

389
00:29:32,570 --> 00:29:36,310
true then this would be right<font color="#CCCCCC"> so</font><font color="#E5E5E5"> sorry</font>

390
00:29:35,330 --> 00:29:40,220
about<font color="#E5E5E5"> that</font>

391
00:29:36,310 --> 00:29:44,929
so the<font color="#E5E5E5"> reason why we</font><font color="#CCCCCC"> started talking</font>

392
00:29:40,220 --> 00:29:46,760
about<font color="#E5E5E5"> cuts in the office team was that</font>

393
00:29:44,930 --> 00:29:50,420
<font color="#CCCCCC">we wanted</font><font color="#E5E5E5"> to have better error messages</font>

394
00:29:46,760 --> 00:29:53,270
<font color="#E5E5E5">because</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> now when you put this into</font>

395
00:29:50,420 --> 00:29:55,250
the CDL tree<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> really have a</font>

396
00:29:53,270 --> 00:29:59,180
good<font color="#E5E5E5"> way</font><font color="#CCCCCC"> to tell you what went wrong</font>

397
00:29:55,250 --> 00:30:01,640
it just says this is not an<font color="#E5E5E5"> a it is not</font>

398
00:29:59,180 --> 00:30:03,730
going<font color="#E5E5E5"> to tell you oh you said and and</font>

399
00:30:01,640 --> 00:30:06,680
after<font color="#CCCCCC"> an end you really</font><font color="#E5E5E5"> should have put</font>

400
00:30:03,730 --> 00:30:09,100
an unsigned integer<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is what</font>

401
00:30:06,680 --> 00:30:12,320
these cuts are doing they essentially

402
00:30:09,100 --> 00:30:15,110
<font color="#E5E5E5">committing to a choice that has been</font>

403
00:30:12,320 --> 00:30:17,840
made<font color="#E5E5E5"> they are cutting down the rest of</font>

404
00:30:15,110 --> 00:30:20,570
the search<font color="#E5E5E5"> tree by saying oh if you</font>

405
00:30:17,840 --> 00:30:22,189
actually saw<font color="#CCCCCC"> the word and then really</font>

406
00:30:20,570 --> 00:30:24,500
all<font color="#CCCCCC"> the other rules that</font><font color="#E5E5E5"> are in this</font>

407
00:30:22,190 --> 00:30:27,620
choice don't<font color="#E5E5E5"> matter because this is the</font>

408
00:30:24,500 --> 00:30:30,400
one you<font color="#E5E5E5"> should</font><font color="#CCCCCC"> be choosing</font><font color="#E5E5E5"> so that means</font>

409
00:30:27,620 --> 00:30:35,929
if<font color="#E5E5E5"> you get anything but a you ain't</font>

410
00:30:30,400 --> 00:30:38,330
<font color="#E5E5E5">after the end you know this is wrong and</font>

411
00:30:35,930 --> 00:30:41,060
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can say there should be a you end</font>

412
00:30:38,330 --> 00:30:43,970
there so<font color="#CCCCCC"> that was the the reason we</font>

413
00:30:41,060 --> 00:30:46,250
wanted<font color="#CCCCCC"> to do cuts</font><font color="#E5E5E5"> and that was a good</font>

414
00:30:43,970 --> 00:30:49,340
<font color="#E5E5E5">reason but maybe not good enough for for</font>

415
00:30:46,250 --> 00:30:51,530
putting it in now the interesting<font color="#CCCCCC"> thing</font>

416
00:30:49,340 --> 00:30:57,040
is we can<font color="#CCCCCC"> use the same construct</font>

417
00:30:51,530 --> 00:31:00,379
<font color="#E5E5E5">to handle the met validation issue by</font>

418
00:30:57,040 --> 00:31:03,770
essentially inserting cuts between<font color="#CCCCCC"> the</font>

419
00:31:00,380 --> 00:31:06,830
keys and the values of an item<font color="#E5E5E5"> in a</font>

420
00:31:03,770 --> 00:31:09,680
group so this would<font color="#CCCCCC"> mean if you match</font>

421
00:31:06,830 --> 00:31:12,280
the number<font color="#CCCCCC"> four</font><font color="#E5E5E5"> and you can ignore all</font>

422
00:31:09,680 --> 00:31:17,600
<font color="#E5E5E5">the other alternatives for</font><font color="#CCCCCC"> matching this</font>

423
00:31:12,280 --> 00:31:19,790
particular<font color="#CCCCCC"> video pier in the map you</font><font color="#E5E5E5"> are</font>

424
00:31:17,600 --> 00:31:29,560
done<font color="#E5E5E5"> and the only value</font><font color="#CCCCCC"> that is allowed</font>

425
00:31:19,790 --> 00:31:29,560
<font color="#CCCCCC">here is X so that's the this button</font><font color="#E5E5E5"> okay</font>

426
00:31:29,590 --> 00:31:38,000
thank you<font color="#E5E5E5"> so this is of course a little</font>

427
00:31:35,510 --> 00:31:42,010
<font color="#CCCCCC">bit noisy so this would come with a</font>

428
00:31:38,000 --> 00:31:47,030
<font color="#E5E5E5">proposal to</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> the existing : shortcut</font>

429
00:31:42,010 --> 00:31:50,030
<font color="#CCCCCC">include</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> cut so when you say</font><font color="#E5E5E5"> for :</font>

430
00:31:47,030 --> 00:31:52,639
text this means you really mean the<font color="#CCCCCC"> for</font>

431
00:31:50,030 --> 00:31:56,240
is taken by this particular<font color="#CCCCCC"> production</font>

432
00:31:52,640 --> 00:31:59,570
<font color="#E5E5E5">about this particular part of it so</font>

433
00:31:56,240 --> 00:32:01,880
that's the proposal<font color="#E5E5E5"> now this needs to be</font>

434
00:31:59,570 --> 00:32:04,490
<font color="#E5E5E5">fully defined</font><font color="#CCCCCC"> those</font><font color="#E5E5E5"> people who know</font>

435
00:32:01,880 --> 00:32:07,340
about the theory<font color="#CCCCCC"> know that when you do a</font>

436
00:32:04,490 --> 00:32:09,740
cut to reach up<font color="#E5E5E5"> the tree and you</font>

437
00:32:07,340 --> 00:32:11,750
<font color="#CCCCCC">actually find how far</font><font color="#E5E5E5"> you reach up it</font>

438
00:32:09,740 --> 00:32:14,240
may<font color="#E5E5E5"> seem obvious here</font><font color="#CCCCCC"> but in more</font>

439
00:32:11,750 --> 00:32:16,700
<font color="#E5E5E5">complicated examples it has to be fully</font>

440
00:32:14,240 --> 00:32:18,440
defined<font color="#E5E5E5"> that's one thing the second</font>

441
00:32:16,700 --> 00:32:22,430
thing<font color="#CCCCCC"> we want to do is checking for</font>

442
00:32:18,440 --> 00:32:23,840
breakage that this change makes and the

443
00:32:22,430 --> 00:32:28,610
third thing<font color="#E5E5E5"> of course you want</font><font color="#CCCCCC"> to do is</font>

444
00:32:23,840 --> 00:32:32,209
<font color="#E5E5E5">implement it</font><font color="#CCCCCC"> to make sure</font><font color="#E5E5E5"> it works so</font>

445
00:32:28,610 --> 00:32:34,810
this<font color="#E5E5E5"> is probably month of</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> that is</font>

446
00:32:32,210 --> 00:32:37,730
needed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make this happen</font>

447
00:32:34,810 --> 00:32:40,370
<font color="#CCCCCC">can L demand from the floor uh do</font><font color="#E5E5E5"> you</font>

448
00:32:37,730 --> 00:32:41,240
have other proposals or is this<font color="#CCCCCC"> the is</font>

449
00:32:40,370 --> 00:32:44,149
this<font color="#E5E5E5"> the only one you've got</font>

450
00:32:41,240 --> 00:32:45,740
I don't want to start<font color="#E5E5E5"> I da ting if</font>

451
00:32:44,150 --> 00:32:48,260
you've got other<font color="#CCCCCC"> things you</font><font color="#E5E5E5"> want to also</font>

452
00:32:45,740 --> 00:32:52,400
<font color="#E5E5E5">suggest instead no this is really the</font>

453
00:32:48,260 --> 00:32:54,020
main part<font color="#E5E5E5"> of this segment</font><font color="#CCCCCC"> so I mean if</font>

454
00:32:52,400 --> 00:32:55,910
what you're really<font color="#E5E5E5"> trying to do</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> get</font>

455
00:32:54,020 --> 00:33:00,080
the extensibility bit and you're having

456
00:32:55,910 --> 00:33:02,990
<font color="#CCCCCC">a sort of retrofit this in just for</font>

457
00:33:00,080 --> 00:33:07,399
extensibility like I get the<font color="#CCCCCC"> the</font>

458
00:33:02,990 --> 00:33:11,090
the<font color="#CCCCCC"> aunt</font><font color="#E5E5E5"> example you've got there</font><font color="#CCCCCC"> but</font>

459
00:33:07,399 --> 00:33:14,689
like do you want the<font color="#E5E5E5"> aunt example enough</font>

460
00:33:11,090 --> 00:33:16,250
to make extensibility<font color="#CCCCCC"> it seems</font>

461
00:33:14,690 --> 00:33:21,440
relatively complicated from<font color="#E5E5E5"> a</font>

462
00:33:16,250 --> 00:33:23,600
theoretical perspective compared<font color="#E5E5E5"> to like</font>

463
00:33:21,440 --> 00:33:25,340
the cognitive load associated<font color="#CCCCCC"> with this</font>

464
00:33:23,600 --> 00:33:28,549
<font color="#E5E5E5">is relatively high compared to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> rest</font>

465
00:33:25,340 --> 00:33:30,799
of<font color="#E5E5E5"> the document yeah because we're</font>

466
00:33:28,549 --> 00:33:32,990
<font color="#CCCCCC">leaving the</font><font color="#E5E5E5"> context-free part and</font>

467
00:33:30,799 --> 00:33:34,399
<font color="#CCCCCC">entries I mean but there are other</font>

468
00:33:32,990 --> 00:33:38,270
things you<font color="#E5E5E5"> could do to</font><font color="#CCCCCC"> get extensibility</font>

469
00:33:34,399 --> 00:33:41,510
if you just wanted extensibility<font color="#E5E5E5"> so for</font>

470
00:33:38,270 --> 00:33:43,279
<font color="#E5E5E5">example at the</font><font color="#CCCCCC"> end of the the end</font><font color="#E5E5E5"> curly</font>

471
00:33:41,510 --> 00:33:44,629
<font color="#E5E5E5">bracket you could put something else at</font>

472
00:33:43,279 --> 00:33:50,570
the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> says by the</font><font color="#E5E5E5"> way this is</font>

473
00:33:44,630 --> 00:33:52,100
<font color="#E5E5E5">extensible in some way like</font><font color="#CCCCCC"> in for</font>

474
00:33:50,570 --> 00:33:56,510
example<font color="#CCCCCC"> you could you could have in</font>

475
00:33:52,100 --> 00:33:58,850
parens<font color="#E5E5E5"> after it some sort of type</font>

476
00:33:56,510 --> 00:34:04,760
statement that says what you how you're

477
00:33:58,850 --> 00:34:07,490
allowed to extend<font color="#E5E5E5"> okay hi Sean Leonard</font>

478
00:34:04,760 --> 00:34:09,050
<font color="#CCCCCC">so uh a couple of</font><font color="#E5E5E5"> proposal I want</font><font color="#CCCCCC"> to</font>

479
00:34:07,490 --> 00:34:11,599
bring but<font color="#E5E5E5"> I want to first address this</font>

480
00:34:09,050 --> 00:34:14,389
pretty clearly<font color="#E5E5E5"> so I think it's valuable</font>

481
00:34:11,599 --> 00:34:18,349
<font color="#CCCCCC">as</font><font color="#E5E5E5"> discussed on the mailing list</font><font color="#CCCCCC"> to have</font>

482
00:34:14,389 --> 00:34:21,460
some way to either cut or constrain the

483
00:34:18,349 --> 00:34:24,980
type<font color="#E5E5E5"> Carson and I actually worked on a</font>

484
00:34:21,460 --> 00:34:28,520
related problem with this<font color="#E5E5E5"> in the context</font>

485
00:34:24,980 --> 00:34:31,599
of a B and<font color="#CCCCCC"> F</font><font color="#E5E5E5"> and I would like to</font><font color="#CCCCCC"> propose</font>

486
00:34:28,520 --> 00:34:36,770
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we consider an alternative way</font><font color="#CCCCCC"> to</font>

487
00:34:31,599 --> 00:34:39,320
get the same results<font color="#E5E5E5"> namely allowing the</font>

488
00:34:36,770 --> 00:34:42,409
broader<font color="#E5E5E5"> definition right the mapping</font>

489
00:34:39,320 --> 00:34:44,540
from the broad type<font color="#CCCCCC"> to to anything but</font>

490
00:34:42,409 --> 00:34:46,760
<font color="#E5E5E5">then also have this subtype that's more</font>

491
00:34:44,540 --> 00:34:48,409
constrained right so one way<font color="#E5E5E5"> to do it</font><font color="#CCCCCC"> is</font>

492
00:34:46,760 --> 00:34:51,619
cuts and that's already been<font color="#CCCCCC"> presented</font>

493
00:34:48,409 --> 00:34:55,820
another way to do it<font color="#E5E5E5"> would be to have a</font>

494
00:34:51,619 --> 00:34:58,849
constraint<font color="#E5E5E5"> notation so that</font><font color="#CCCCCC"> you have you</font>

495
00:34:55,820 --> 00:35:01,400
int<font color="#CCCCCC"> maps</font><font color="#E5E5E5"> any</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> in the map but then</font>

496
00:34:58,849 --> 00:35:05,020
as a subclass or as a<font color="#E5E5E5"> constraint of that</font>

497
00:35:01,400 --> 00:35:08,480
it's possible<font color="#CCCCCC"> to define specific</font>

498
00:35:05,020 --> 00:35:11,900
<font color="#E5E5E5">instances</font><font color="#CCCCCC"> of the U nth such as for and</font>

499
00:35:08,480 --> 00:35:13,700
then the<font color="#E5E5E5"> matching type on essentially</font>

500
00:35:11,900 --> 00:35:14,810
the<font color="#E5E5E5"> right hand side and the difference</font>

501
00:35:13,700 --> 00:35:18,980
is<font color="#CCCCCC"> that with</font>

502
00:35:14,810 --> 00:35:20,750
<font color="#E5E5E5">a cut as I understand it</font><font color="#CCCCCC"> it's it's a way</font>

503
00:35:18,980 --> 00:35:22,490
to<font color="#CCCCCC"> essentially to produce</font><font color="#E5E5E5"> better error</font>

504
00:35:20,750 --> 00:35:25,700
messages right because you you take<font color="#E5E5E5"> that</font>

505
00:35:22,490 --> 00:35:26,990
point of the parser of the tree<font color="#E5E5E5"> you</font>

506
00:35:25,700 --> 00:35:28,819
output the error message and then<font color="#E5E5E5"> you</font>

507
00:35:26,990 --> 00:35:30,859
<font color="#CCCCCC">backup</font><font color="#E5E5E5"> right essentially so then it</font>

508
00:35:28,820 --> 00:35:34,300
<font color="#CCCCCC">doesn't match</font><font color="#E5E5E5"> however another way to</font>

509
00:35:30,860 --> 00:35:38,150
<font color="#E5E5E5">look at it is</font><font color="#CCCCCC"> that the data production</font>

510
00:35:34,300 --> 00:35:40,370
<font color="#CCCCCC">still does match</font><font color="#E5E5E5"> the broader type you</font>

511
00:35:38,150 --> 00:35:44,870
went to<font color="#E5E5E5"> any okay but it just doesn't</font>

512
00:35:40,370 --> 00:35:47,150
<font color="#E5E5E5">match the subtype so then a parser on</font>

513
00:35:44,870 --> 00:35:48,770
the fly or during production<font color="#E5E5E5"> will know</font>

514
00:35:47,150 --> 00:35:50,810
<font color="#CCCCCC">that it matched the</font><font color="#E5E5E5"> broader type but not</font>

515
00:35:48,770 --> 00:35:53,270
<font color="#E5E5E5">the subtype and then the application can</font>

516
00:35:50,810 --> 00:35:54,500
treat that<font color="#E5E5E5"> as either an error or as</font>

517
00:35:53,270 --> 00:35:59,060
<font color="#E5E5E5">something that's potentially recoverable</font>

518
00:35:54,500 --> 00:36:02,840
where the consumer can then just realize

519
00:35:59,060 --> 00:36:04,009
<font color="#E5E5E5">okay we have the broad match but not</font><font color="#CCCCCC"> the</font>

520
00:36:02,840 --> 00:36:08,390
subtype that<font color="#CCCCCC"> we were looking for</font>

521
00:36:04,010 --> 00:36:10,670
therefore the data item is in is

522
00:36:08,390 --> 00:36:14,950
deficient<font color="#E5E5E5"> basically and get the same</font>

523
00:36:10,670 --> 00:36:18,140
result<font color="#CCCCCC"> so do you know that would be</font>

524
00:36:14,950 --> 00:36:22,009
<font color="#E5E5E5">there is another control operator that</font>

525
00:36:18,140 --> 00:36:25,040
<font color="#CCCCCC">is in</font><font color="#E5E5E5"> CD DL</font><font color="#CCCCCC"> now called</font><font color="#E5E5E5"> within or and so</font>

526
00:36:22,010 --> 00:36:27,830
it would<font color="#E5E5E5"> behave in a</font><font color="#CCCCCC"> similar way</font><font color="#E5E5E5"> I guess</font>

527
00:36:25,040 --> 00:36:30,140
I can propose another<font color="#E5E5E5"> way to look at</font>

528
00:36:27,830 --> 00:36:32,930
this<font color="#CCCCCC"> I have a draft in the</font><font color="#E5E5E5"> a B and F</font>

529
00:36:30,140 --> 00:36:34,730
context which<font color="#CCCCCC"> is a draft chantek</font>

530
00:36:32,930 --> 00:36:37,069
constrained<font color="#E5E5E5"> a B and F which ironically</font>

531
00:36:34,730 --> 00:36:39,080
<font color="#E5E5E5">uses the</font><font color="#CCCCCC"> Hat</font><font color="#E5E5E5"> so it's very similar</font>

532
00:36:37,070 --> 00:36:42,980
notation<font color="#E5E5E5"> but the notation would be</font>

533
00:36:39,080 --> 00:36:46,970
<font color="#CCCCCC">something akin to</font><font color="#E5E5E5"> you int map to any and</font>

534
00:36:42,980 --> 00:36:50,660
then hat and then your list of specific

535
00:36:46,970 --> 00:36:53,569
matches such as<font color="#E5E5E5"> for :</font><font color="#CCCCCC"> text 3 :</font><font color="#E5E5E5"> whatever</font>

536
00:36:50,660 --> 00:36:55,720
and so forth<font color="#E5E5E5"> that could be</font><font color="#CCCCCC"> one we do and</font>

537
00:36:53,570 --> 00:36:58,280
while still<font color="#E5E5E5"> keeping it a context-free</font>

538
00:36:55,720 --> 00:37:01,240
grammar<font color="#E5E5E5"> that's that's also that you</font>

539
00:36:58,280 --> 00:37:03,620
would wrote the the<font color="#E5E5E5"> controller first</font>

540
00:37:01,240 --> 00:37:06,410
yeah you you would write the catch-all

541
00:37:03,620 --> 00:37:08,750
first<font color="#E5E5E5"> and then you write</font><font color="#CCCCCC"> the specific</font>

542
00:37:06,410 --> 00:37:11,810
instances<font color="#E5E5E5"> that also match</font><font color="#CCCCCC"> the catch-all</font>

543
00:37:08,750 --> 00:37:14,960
<font color="#E5E5E5">so you're constraining the generic</font>

544
00:37:11,810 --> 00:37:17,480
production to these<font color="#E5E5E5"> specific instances</font>

545
00:37:14,960 --> 00:37:20,240
<font color="#CCCCCC">of interest</font><font color="#E5E5E5"> and if it</font><font color="#CCCCCC"> doesn't match the</font>

546
00:37:17,480 --> 00:37:22,490
specific<font color="#E5E5E5"> instances</font><font color="#CCCCCC"> of interest then</font>

547
00:37:20,240 --> 00:37:24,620
that's a condition<font color="#CCCCCC"> that then of course a</font>

548
00:37:22,490 --> 00:37:25,879
program can can process<font color="#E5E5E5"> or deal</font><font color="#CCCCCC"> with</font>

549
00:37:24,620 --> 00:37:27,200
that it<font color="#E5E5E5"> match the</font><font color="#CCCCCC"> general</font><font color="#E5E5E5"> thing but not</font>

550
00:37:25,880 --> 00:37:28,549
the specific<font color="#CCCCCC"> thing so it's in the</font>

551
00:37:27,200 --> 00:37:30,109
catch-all

552
00:37:28,549 --> 00:37:33,259
<font color="#E5E5E5">it would be interesting</font><font color="#CCCCCC"> to see a</font>

553
00:37:30,109 --> 00:37:35,299
proposal<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now my cognitive load</font>

554
00:37:33,259 --> 00:37:39,380
gets up because I suddenly have

555
00:37:35,299 --> 00:37:41,329
something in CBD<font color="#CCCCCC"> area</font><font color="#E5E5E5"> where the thing</font>

556
00:37:39,380 --> 00:37:43,009
that comes<font color="#E5E5E5"> later has a higher priority</font>

557
00:37:41,329 --> 00:37:45,079
<font color="#E5E5E5">than</font><font color="#CCCCCC"> the thing that comes earlier</font>

558
00:37:43,009 --> 00:37:49,819
everything<font color="#CCCCCC"> else in</font><font color="#E5E5E5"> CBL is the other way</font>

559
00:37:45,079 --> 00:37:52,189
<font color="#CCCCCC">round but yeah that could be done okay</font>

560
00:37:49,819 --> 00:37:54,829
good<font color="#E5E5E5"> so maybe we should work on</font><font color="#CCCCCC"> that</font>

561
00:37:52,189 --> 00:37:57,140
then as we look<font color="#CCCCCC"> at alternatives to this</font>

562
00:37:54,829 --> 00:37:58,969
because<font color="#E5E5E5"> I do see that there is a use you</font>

563
00:37:57,140 --> 00:38:01,069
know that's<font color="#E5E5E5"> broadly applicable to a</font>

564
00:37:58,969 --> 00:38:06,559
variety<font color="#CCCCCC"> of users</font><font color="#E5E5E5"> the problem is that</font>

565
00:38:01,069 --> 00:38:11,989
<font color="#CCCCCC">that</font><font color="#E5E5E5"> this type here without the</font><font color="#CCCCCC"> Hat is</font>

566
00:38:06,559 --> 00:38:15,140
<font color="#CCCCCC">not</font><font color="#E5E5E5"> matching</font><font color="#CCCCCC"> so if you subtract this</font>

567
00:38:11,989 --> 00:38:18,679
type from that type then then<font color="#CCCCCC"> four</font>

568
00:38:15,140 --> 00:38:21,199
column float<font color="#E5E5E5"> is still in</font><font color="#CCCCCC"> my the</font>

569
00:38:18,679 --> 00:38:24,319
parameters right to process this type

570
00:38:21,199 --> 00:38:27,140
and remove the<font color="#E5E5E5"> video information</font><font color="#CCCCCC"> and</font>

571
00:38:24,319 --> 00:38:30,558
just<font color="#E5E5E5"> keep the key information before you</font>

572
00:38:27,140 --> 00:38:33,140
can<font color="#E5E5E5"> construct the the remainder type</font>

573
00:38:30,559 --> 00:38:35,059
that you are<font color="#CCCCCC"> subtracting from from the</font>

574
00:38:33,140 --> 00:38:37,640
<font color="#CCCCCC">katralla type right I don't know how to</font>

575
00:38:35,059 --> 00:38:41,119
do that right that<font color="#E5E5E5"> makes sense</font><font color="#CCCCCC"> although</font>

576
00:38:37,640 --> 00:38:42,589
<font color="#CCCCCC">if the</font><font color="#E5E5E5"> remainder type also matches all</font>

577
00:38:41,119 --> 00:38:44,329
<font color="#E5E5E5">of the other specific types you can</font>

578
00:38:42,589 --> 00:38:46,279
<font color="#E5E5E5">first match the remainder type which</font>

579
00:38:44,329 --> 00:38:48,349
presumably would<font color="#E5E5E5"> also be relatively</font>

580
00:38:46,279 --> 00:38:50,539
cheap relative relative to going<font color="#E5E5E5"> through</font>

581
00:38:48,349 --> 00:38:52,369
the list of specific matches and then

582
00:38:50,539 --> 00:38:54,079
going to<font color="#E5E5E5"> the specific</font><font color="#CCCCCC"> match</font><font color="#E5E5E5"> the cup is</font>

583
00:38:52,369 --> 00:38:57,709
essentially<font color="#E5E5E5"> a way</font><font color="#CCCCCC"> to construct</font><font color="#E5E5E5"> that</font>

584
00:38:54,079 --> 00:38:59,989
remainder type right so<font color="#E5E5E5"> we would need it</font>

585
00:38:57,709 --> 00:39:03,109
in that case<font color="#E5E5E5"> as well so we</font><font color="#CCCCCC"> can be</font>

586
00:38:59,989 --> 00:39:05,479
willing to write this in a<font color="#E5E5E5"> pool request</font>

587
00:39:03,109 --> 00:39:10,699
or something<font color="#CCCCCC"> in the github</font><font color="#E5E5E5"> I can yeah I</font>

588
00:39:05,479 --> 00:39:14,769
can<font color="#E5E5E5"> try at least that</font><font color="#CCCCCC"> yeah and actually</font>

589
00:39:10,699 --> 00:39:16,609
<font color="#E5E5E5">I want to take this to remind people to</font>

590
00:39:14,769 --> 00:39:19,149
<font color="#E5E5E5">participate in the mailing list because</font>

591
00:39:16,609 --> 00:39:22,538
<font color="#E5E5E5">we've seen very little participation</font><font color="#CCCCCC"> and</font>

592
00:39:19,150 --> 00:39:25,519
the working group seems interested and

593
00:39:22,539 --> 00:39:27,650
active but in the face-to-face<font color="#E5E5E5"> but then</font>

594
00:39:25,519 --> 00:39:30,049
I would like to see more discussion in

595
00:39:27,650 --> 00:39:32,959
the<font color="#E5E5E5"> main unless then I cannot keep like</font>

596
00:39:30,049 --> 00:39:36,049
for like<font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> get people to talk</font>

597
00:39:32,959 --> 00:39:38,299
you need<font color="#CCCCCC"> to him so I have I have other</font>

598
00:39:36,049 --> 00:39:41,799
proposals<font color="#E5E5E5"> but before I get</font><font color="#CCCCCC"> to those</font>

599
00:39:38,299 --> 00:39:41,799
proposals I'll step to the back

600
00:39:43,110 --> 00:39:51,490
Jim shot<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> problem I have with</font>

601
00:39:48,970 --> 00:39:55,209
this is you all<font color="#E5E5E5"> sudden became extremely</font>

602
00:39:51,490 --> 00:39:58,240
order dependent which means no bill

603
00:39:55,210 --> 00:40:02,830
<font color="#CCCCCC">radula</font><font color="#E5E5E5"> hi we already</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> this is a</font>

604
00:39:58,240 --> 00:40:08,609
<font color="#CCCCCC">puzzle</font><font color="#E5E5E5"> expression Grima</font><font color="#CCCCCC"> it does not</font>

605
00:40:02,830 --> 00:40:12,850
matter<font color="#E5E5E5"> in the current grammar if I do</font>

606
00:40:08,610 --> 00:40:15,040
<font color="#E5E5E5">the star first or the</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> first that</font>

607
00:40:12,850 --> 00:40:18,330
that<font color="#E5E5E5"> there those would be equivalent in</font>

608
00:40:15,040 --> 00:40:21,580
the grammar<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not true anymore</font><font color="#CCCCCC"> and</font>

609
00:40:18,330 --> 00:40:25,450
<font color="#CCCCCC">even worse</font><font color="#E5E5E5"> than this is you now</font><font color="#CCCCCC"> have the</font>

610
00:40:21,580 --> 00:40:28,450
question of if you have group one which

611
00:40:25,450 --> 00:40:31,390
ends in the star int you<font color="#E5E5E5"> int points to</font>

612
00:40:28,450 --> 00:40:35,319
any and then you say and now append

613
00:40:31,390 --> 00:40:37,060
group<font color="#E5E5E5"> two to it all of the cuts in group</font>

614
00:40:35,320 --> 00:40:43,720
two won't ever be seen because<font color="#E5E5E5"> you'll</font>

615
00:40:37,060 --> 00:40:45,340
hit the<font color="#E5E5E5"> star you end yes</font><font color="#CCCCCC"> we cut bit and</font>

616
00:40:43,720 --> 00:40:48,819
that's because of the order<font color="#E5E5E5"> dependence a</font>

617
00:40:45,340 --> 00:40:49,930
look<font color="#CCCCCC"> so that's the first problem</font><font color="#E5E5E5"> I have</font>

618
00:40:48,820 --> 00:40:53,350
with with<font color="#CCCCCC"> all of this</font>

619
00:40:49,930 --> 00:40:57,250
the second problem I have is I don't

620
00:40:53,350 --> 00:41:01,210
<font color="#E5E5E5">understand why this needs to be</font>

621
00:40:57,250 --> 00:41:04,180
expressed<font color="#E5E5E5"> in the grammar and cannot be</font>

622
00:41:01,210 --> 00:41:04,990
expressed in semantics<font color="#E5E5E5"> this is commonly</font>

623
00:41:04,180 --> 00:41:09,240
<font color="#CCCCCC">done today</font>

624
00:41:04,990 --> 00:41:12,939
for example if you have an email headers

625
00:41:09,240 --> 00:41:15,250
<font color="#CCCCCC">I can't remember for sure but I believe</font>

626
00:41:12,940 --> 00:41:18,490
<font color="#CCCCCC">that they</font><font color="#E5E5E5"> leave part of the grammar says</font>

627
00:41:15,250 --> 00:41:20,310
you can't have<font color="#E5E5E5"> two of these that's not</font>

628
00:41:18,490 --> 00:41:22,419
in<font color="#CCCCCC"> the grammar that's in the semantics</font>

629
00:41:20,310 --> 00:41:24,790
so I don't see why this can't just be

630
00:41:22,420 --> 00:41:27,940
expressed in semantics rather than the

631
00:41:24,790 --> 00:41:30,610
grammar<font color="#E5E5E5"> but actually the the you can't</font>

632
00:41:27,940 --> 00:41:33,400
have two of these semantics<font color="#E5E5E5"> of maps also</font>

633
00:41:30,610 --> 00:41:35,920
is<font color="#E5E5E5"> expressed in English and not in the</font>

634
00:41:33,400 --> 00:41:38,350
<font color="#CCCCCC">Rima but I'm not and don't know how</font><font color="#E5E5E5"> to</font>

635
00:41:35,920 --> 00:41:40,420
do this<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> if somebody would come up</font>

636
00:41:38,350 --> 00:41:47,380
<font color="#CCCCCC">with a</font><font color="#E5E5E5"> reasonable proposal that actually</font>

637
00:41:40,420 --> 00:41:52,090
<font color="#E5E5E5">works that</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> be great I think an</font>

638
00:41:47,380 --> 00:41:53,530
edit<font color="#E5E5E5"> of this document um first of all if</font>

639
00:41:52,090 --> 00:41:55,030
there<font color="#E5E5E5"> are good proposals and</font><font color="#CCCCCC"> it's</font>

640
00:41:53,530 --> 00:41:56,460
basically what you just said so busy

641
00:41:55,030 --> 00:41:58,500
<font color="#CCCCCC">took some</font><font color="#E5E5E5"> of the words</font>

642
00:41:56,460 --> 00:42:02,369
my mouth<font color="#CCCCCC"> that can express this as</font><font color="#E5E5E5"> a</font>

643
00:41:58,500 --> 00:42:04,650
<font color="#E5E5E5">control to this type definition very</font>

644
00:42:02,369 --> 00:42:07,260
interested<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see your proposals for</font>

645
00:42:04,650 --> 00:42:10,260
that and then coming<font color="#CCCCCC"> back to</font><font color="#E5E5E5"> Joe's</font>

646
00:42:07,260 --> 00:42:13,050
comment<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is why it looks like this</font>

647
00:42:10,260 --> 00:42:16,680
<font color="#CCCCCC">is about extensibility it isn't it is</font>

648
00:42:13,050 --> 00:42:20,000
about the<font color="#E5E5E5"> fact that sometimes we have</font>

649
00:42:16,680 --> 00:42:23,129
<font color="#CCCCCC">the problem that there are more very</font>

650
00:42:20,000 --> 00:42:25,650
defined keys and less<font color="#E5E5E5"> defined keys and</font>

651
00:42:23,130 --> 00:42:28,560
maps<font color="#E5E5E5"> if it would be about extensibility</font>

652
00:42:25,650 --> 00:42:30,330
we would use the<font color="#CCCCCC"> extension points there</font>

653
00:42:28,560 --> 00:42:32,820
<font color="#E5E5E5">are extension points to our</font><font color="#CCCCCC"> choices</font>

654
00:42:30,330 --> 00:42:35,220
<font color="#CCCCCC">there we could use extension points here</font>

655
00:42:32,820 --> 00:42:37,589
<font color="#E5E5E5">we could</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> as we could you'll end with</font>

656
00:42:35,220 --> 00:42:41,160
an extension point just as you<font color="#E5E5E5"> proposed</font>

657
00:42:37,589 --> 00:42:42,960
<font color="#E5E5E5">it is already in CDL but that is not</font>

658
00:42:41,160 --> 00:42:47,069
what this is<font color="#E5E5E5"> about this is about</font><font color="#CCCCCC"> effect</font>

659
00:42:42,960 --> 00:42:49,800
<font color="#CCCCCC">that we have sometimes</font><font color="#E5E5E5"> layers that are</font>

660
00:42:47,070 --> 00:42:54,480
less<font color="#E5E5E5"> specified than others and those</font>

661
00:42:49,800 --> 00:42:57,690
would<font color="#CCCCCC"> be basically gobble up all the</font>

662
00:42:54,480 --> 00:43:00,000
voyage<font color="#E5E5E5"> identified</font><font color="#CCCCCC"> Labor's so if this can</font>

663
00:42:57,690 --> 00:43:03,450
<font color="#CCCCCC">be soft Bob via a</font><font color="#E5E5E5"> control and we were</font>

664
00:43:00,000 --> 00:43:05,339
already considering that actually<font color="#E5E5E5"> we're</font>

665
00:43:03,450 --> 00:43:08,819
really happy to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a proposal for that</font>

666
00:43:05,339 --> 00:43:11,430
<font color="#E5E5E5">and compare it but after a really</font><font color="#CCCCCC"> long</font>

667
00:43:08,820 --> 00:43:14,609
<font color="#E5E5E5">time of discussions we basically ended</font>

668
00:43:11,430 --> 00:43:16,560
up with making the<font color="#E5E5E5"> :</font><font color="#CCCCCC"> they explode</font>

669
00:43:14,609 --> 00:43:18,180
something to you if<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> it sure can you</font>

670
00:43:16,560 --> 00:43:20,369
solve through the control yeah that's

671
00:43:18,180 --> 00:43:21,779
easy<font color="#E5E5E5"> yeah hard part is solving it with</font>

672
00:43:20,369 --> 00:43:23,609
<font color="#E5E5E5">the control in such a way that you don't</font>

673
00:43:21,780 --> 00:43:24,180
have to write everything twice<font color="#CCCCCC"> yes yes</font>

674
00:43:23,609 --> 00:43:26,240
exactly

675
00:43:24,180 --> 00:43:28,649
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is that is why we did this</font>

676
00:43:26,240 --> 00:43:31,529
<font color="#E5E5E5">redundant one of the design principle is</font>

677
00:43:28,650 --> 00:43:32,970
less noisy and this is way less noisy

678
00:43:31,530 --> 00:43:35,760
<font color="#CCCCCC">because it's basically</font><font color="#E5E5E5"> looking like</font>

679
00:43:32,970 --> 00:43:46,169
before<font color="#E5E5E5"> it just has some</font><font color="#CCCCCC"> added</font><font color="#E5E5E5"> semantics</font>

680
00:43:35,760 --> 00:43:48,839
<font color="#E5E5E5">Jim - okay great</font><font color="#CCCCCC"> sean leonard</font><font color="#E5E5E5"> all right</font>

681
00:43:46,170 --> 00:43:51,180
<font color="#CCCCCC">um</font><font color="#E5E5E5"> I did want to draw the working groups</font>

682
00:43:48,839 --> 00:43:54,330
attention to a couple<font color="#CCCCCC"> of other proposals</font>

683
00:43:51,180 --> 00:43:57,690
<font color="#E5E5E5">that have</font><font color="#CCCCCC"> come up with regard to see</font><font color="#E5E5E5"> DDL</font>

684
00:43:54,330 --> 00:43:59,839
and and the grammar<font color="#CCCCCC"> specifically the</font>

685
00:43:57,690 --> 00:44:04,349
proposal<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I wanted</font><font color="#CCCCCC"> to make or</font>

686
00:43:59,839 --> 00:44:06,599
discuss<font color="#E5E5E5"> had to do with regular</font>

687
00:44:04,349 --> 00:44:09,200
<font color="#CCCCCC">expressions so I did bring</font><font color="#E5E5E5"> up on the</font>

688
00:44:06,599 --> 00:44:10,490
list<font color="#E5E5E5"> a few months ago the issue that</font>

689
00:44:09,200 --> 00:44:13,759
regular

690
00:44:10,490 --> 00:44:15,799
currently are defined as pcre<font color="#E5E5E5"> which is</font>

691
00:44:13,760 --> 00:44:17,869
great because I think pcre is a great

692
00:44:15,800 --> 00:44:19,610
<font color="#E5E5E5">regular expression implementation and</font>

693
00:44:17,869 --> 00:44:22,310
everything else<font color="#E5E5E5"> but there isn't a</font>

694
00:44:19,610 --> 00:44:24,650
normative<font color="#E5E5E5"> reference in CDL or in</font>

695
00:44:22,310 --> 00:44:26,869
seaboard<font color="#CCCCCC"> to that and I think that that</font>

696
00:44:24,650 --> 00:44:28,610
is<font color="#CCCCCC"> something that should be addressed in</font>

697
00:44:26,869 --> 00:44:30,490
both documents<font color="#E5E5E5"> because both of</font><font color="#CCCCCC"> them do</font>

698
00:44:28,610 --> 00:44:33,980
in fact reference regular expressions

699
00:44:30,490 --> 00:44:36,500
<font color="#CCCCCC">then because</font><font color="#E5E5E5"> of the power that regular</font>

700
00:44:33,980 --> 00:44:39,110
expressions have to identify<font color="#CCCCCC"> and</font>

701
00:44:36,500 --> 00:44:42,320
constrain the different data productions

702
00:44:39,110 --> 00:44:44,930
<font color="#CCCCCC">I feel strongly that regular</font><font color="#E5E5E5"> expression</font>

703
00:44:42,320 --> 00:44:48,410
should be<font color="#CCCCCC"> first-class syntactic elements</font>

704
00:44:44,930 --> 00:44:51,140
inside of<font color="#CCCCCC"> CDL</font><font color="#E5E5E5"> so for example just as you</font>

705
00:44:48,410 --> 00:44:52,819
can do in Perl or in JavaScript<font color="#E5E5E5"> the way</font>

706
00:44:51,140 --> 00:44:54,500
you write a regular expression<font color="#E5E5E5"> is you do</font>

707
00:44:52,820 --> 00:44:57,410
slash and then<font color="#E5E5E5"> the regular session</font>

708
00:44:54,500 --> 00:45:01,070
content and then slash and then usually

709
00:44:57,410 --> 00:45:03,680
<font color="#E5E5E5">if you have a editor that its language</font>

710
00:45:01,070 --> 00:45:05,690
aware<font color="#E5E5E5"> it'll color</font><font color="#CCCCCC"> the regular</font><font color="#E5E5E5"> expression</font>

711
00:45:03,680 --> 00:45:08,000
and<font color="#CCCCCC"> show you</font><font color="#E5E5E5"> interesting stuff about it</font>

712
00:45:05,690 --> 00:45:10,580
and and<font color="#E5E5E5"> so forth so technology</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> all</font>

713
00:45:08,000 --> 00:45:12,320
there<font color="#E5E5E5"> right now though it's defined in a</font>

714
00:45:10,580 --> 00:45:14,180
string<font color="#E5E5E5"> and the problem is that</font><font color="#CCCCCC"> when it's</font>

715
00:45:12,320 --> 00:45:16,520
<font color="#E5E5E5">in a string there's a ton of escaping</font>

716
00:45:14,180 --> 00:45:19,490
<font color="#E5E5E5">right of back slashing that you have to</font>

717
00:45:16,520 --> 00:45:21,590
do to make that<font color="#E5E5E5"> work</font><font color="#CCCCCC"> so I wanted to</font>

718
00:45:19,490 --> 00:45:24,410
<font color="#E5E5E5">bring that up to make regular</font>

719
00:45:21,590 --> 00:45:26,420
expressions<font color="#E5E5E5"> a first-class syntactic</font>

720
00:45:24,410 --> 00:45:28,490
element another advantage<font color="#E5E5E5"> of doing it</font>

721
00:45:26,420 --> 00:45:33,140
<font color="#CCCCCC">that</font><font color="#E5E5E5"> way is</font><font color="#CCCCCC"> that then</font><font color="#E5E5E5"> you can add the</font>

722
00:45:28,490 --> 00:45:35,839
flags<font color="#E5E5E5"> or the modifiers such as I and X</font>

723
00:45:33,140 --> 00:45:38,390
and so forth on the end of it

724
00:45:35,840 --> 00:45:40,520
yeah<font color="#E5E5E5"> because otherwise you essentially</font>

725
00:45:38,390 --> 00:45:44,180
have<font color="#CCCCCC"> to construct two strings</font><font color="#E5E5E5"> and then</font>

726
00:45:40,520 --> 00:45:45,920
put them together and then it's it<font color="#E5E5E5"> just</font>

727
00:45:44,180 --> 00:45:48,618
doesn't<font color="#CCCCCC"> look it</font><font color="#E5E5E5"> it doesn't look</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> and</font>

728
00:45:45,920 --> 00:45:50,780
that that alone the conciseness<font color="#CCCCCC"> will</font>

729
00:45:48,619 --> 00:45:53,510
will help<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> a lot with readability</font>

730
00:45:50,780 --> 00:45:57,650
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it'll help</font><font color="#E5E5E5"> identify and catch errors</font>

731
00:45:53,510 --> 00:46:01,280
<font color="#E5E5E5">and such so yeah so that's sort of on</font>

732
00:45:57,650 --> 00:46:03,440
the table<font color="#E5E5E5"> Joe Hildebrand from the floor</font>

733
00:46:01,280 --> 00:46:05,780
I like<font color="#E5E5E5"> the idea of slashes as a</font>

734
00:46:03,440 --> 00:46:09,470
syntactic element and promoting<font color="#CCCCCC"> regular</font>

735
00:46:05,780 --> 00:46:10,820
expressions<font color="#E5E5E5"> first class</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> we think</font>

736
00:46:09,470 --> 00:46:13,189
they're going to be used enough to

737
00:46:10,820 --> 00:46:15,820
warrant that it's a it's a nice

738
00:46:13,190 --> 00:46:15,820
affordance

739
00:46:17,150 --> 00:46:22,549
carpenter user of<font color="#E5E5E5"> cedar Dale</font><font color="#CCCCCC"> I think</font>

740
00:46:20,599 --> 00:46:24,950
these<font color="#CCCCCC"> are all great ideas Percy DDL</font>

741
00:46:22,549 --> 00:46:28,069
version<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> I would</font><font color="#CCCCCC"> like see</font><font color="#E5E5E5"> detail</font>

742
00:46:24,950 --> 00:46:30,980
version<font color="#E5E5E5"> 1 as a normative reference next</font>

743
00:46:28,069 --> 00:46:34,220
week please<font color="#E5E5E5"> so I wonder if you could</font>

744
00:46:30,980 --> 00:46:40,910
think<font color="#CCCCCC"> about taking</font><font color="#E5E5E5"> that approach yes I</font>

745
00:46:34,220 --> 00:46:43,640
did<font color="#E5E5E5"> and then I</font><font color="#CCCCCC"> found this</font><font color="#E5E5E5"> I sympathize</font>

746
00:46:40,910 --> 00:46:47,058
with<font color="#E5E5E5"> you wanting to do this but I also</font>

747
00:46:43,640 --> 00:46:49,249
<font color="#CCCCCC">then but you're a co-author on the draft</font>

748
00:46:47,059 --> 00:46:51,349
that's waiting<font color="#CCCCCC"> for it right so</font><font color="#E5E5E5"> you see</font>

749
00:46:49,249 --> 00:46:53,029
the point<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> if you can if you</font><font color="#CCCCCC"> can</font>

750
00:46:51,349 --> 00:46:54,619
think<font color="#E5E5E5"> about</font><font color="#CCCCCC"> doing this as a version 2</font>

751
00:46:53,029 --> 00:46:57,049
effort that I think that<font color="#E5E5E5"> would actually</font>

752
00:46:54,619 --> 00:46:58,700
<font color="#CCCCCC">be probably better for seeded</font><font color="#E5E5E5"> Yale</font>

753
00:46:57,049 --> 00:47:02,809
<font color="#E5E5E5">because it gives it a place in the world</font>

754
00:46:58,700 --> 00:47:08,029
<font color="#E5E5E5">and you can then work on</font><font color="#CCCCCC"> improvements</font><font color="#E5E5E5"> so</font>

755
00:47:02,809 --> 00:47:11,420
<font color="#CCCCCC">the question first it was this</font><font color="#E5E5E5"> point to</font>

756
00:47:08,029 --> 00:47:14,269
the this the<font color="#CCCCCC"> carsten</font><font color="#E5E5E5"> were custom</font>

757
00:47:11,420 --> 00:47:18,829
presented<font color="#E5E5E5"> proposal and what then was</font>

758
00:47:14,269 --> 00:47:20,328
this a comment to Sean well both of<font color="#CCCCCC"> them</font>

759
00:47:18,829 --> 00:47:22,160
really<font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean I don't see</font><font color="#CCCCCC"> any of these</font>

760
00:47:20,329 --> 00:47:24,680
of not being backwards compatible with

761
00:47:22,160 --> 00:47:29,149
<font color="#E5E5E5">existing CDLs</font><font color="#CCCCCC"> so it wouldn't invalidate</font>

762
00:47:24,680 --> 00:47:31,700
existing<font color="#E5E5E5"> CDL files it would be additions</font>

763
00:47:29,150 --> 00:47:33,289
<font color="#E5E5E5">so as long as it's strictly backwards</font>

764
00:47:31,700 --> 00:47:34,098
compatible<font color="#E5E5E5"> I you know I think you</font>

765
00:47:33,289 --> 00:47:36,470
conversion it

766
00:47:34,099 --> 00:47:39,799
<font color="#E5E5E5">any day you want you can say today</font><font color="#CCCCCC"> is</font>

767
00:47:36,470 --> 00:47:41,959
the<font color="#E5E5E5"> day we version it and and then put</font>

768
00:47:39,799 --> 00:47:43,970
the next<font color="#CCCCCC"> lot round of things in version</font>

769
00:47:41,960 --> 00:47:51,319
<font color="#CCCCCC">2 so it's really a choice when you do</font>

770
00:47:43,970 --> 00:47:53,180
that<font color="#CCCCCC"> ok Sean Leonard related to the -</font>

771
00:47:51,319 --> 00:47:57,819
all the<font color="#CCCCCC"> things that</font><font color="#E5E5E5"> were just mentioned</font>

772
00:47:53,180 --> 00:48:02,239
<font color="#CCCCCC">is a concern I have with the control</font>

773
00:47:57,819 --> 00:48:03,950
<font color="#E5E5E5">syntax or control operators and how I</font>

774
00:48:02,239 --> 00:48:06,099
<font color="#CCCCCC">think they could be made better both by</font>

775
00:48:03,950 --> 00:48:08,749
the regular expression syntax and

776
00:48:06,099 --> 00:48:13,309
address<font color="#E5E5E5"> I think some of</font><font color="#CCCCCC"> these kind</font><font color="#E5E5E5"> of CD</font>

777
00:48:08,749 --> 00:48:16,009
<font color="#E5E5E5">DL v-0 v1 issues so I clearly see the</font>

778
00:48:13,309 --> 00:48:19,069
value<font color="#CCCCCC"> of</font><font color="#E5E5E5"> having the control operators</font>

779
00:48:16,009 --> 00:48:22,579
that are<font color="#E5E5E5"> currently defined in the draft</font>

780
00:48:19,069 --> 00:48:25,190
<font color="#CCCCCC">right for example the bits the bits is</font>

781
00:48:22,579 --> 00:48:27,920
it it is control operators<font color="#CCCCCC"> write bits</font>

782
00:48:25,190 --> 00:48:30,600
regular expression and then<font color="#E5E5E5"> size and a</font>

783
00:48:27,920 --> 00:48:35,970
few other<font color="#CCCCCC"> things but in some ways</font>

784
00:48:30,600 --> 00:48:40,290
<font color="#E5E5E5">they're too extensive</font><font color="#CCCCCC"> and they're not</font>

785
00:48:35,970 --> 00:48:43,200
<font color="#E5E5E5">powerful enough</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> base however</font><font color="#CCCCCC"> I've</font>

786
00:48:40,290 --> 00:48:45,390
read a<font color="#E5E5E5"> number of</font><font color="#CCCCCC"> CDL specs in drafts and</font>

787
00:48:43,200 --> 00:48:50,060
<font color="#CCCCCC">RFC's or whatever that have floated</font>

788
00:48:45,390 --> 00:48:52,650
around<font color="#E5E5E5"> I'm not</font><font color="#CCCCCC"> aware of standards or</font>

789
00:48:50,060 --> 00:48:55,380
specifications<font color="#CCCCCC"> out there yet that are</font>

790
00:48:52,650 --> 00:48:57,810
relying<font color="#E5E5E5"> on them normatively we're</font>

791
00:48:55,380 --> 00:48:59,960
removing them or taking them out and

792
00:48:57,810 --> 00:49:03,720
<font color="#CCCCCC">tweaking them is going</font><font color="#E5E5E5"> to cause real</font>

793
00:48:59,960 --> 00:49:06,360
interoperability problems<font color="#CCCCCC"> one point</font>

794
00:49:03,720 --> 00:49:08,730
about<font color="#CCCCCC"> the control operators I want to</font>

795
00:49:06,360 --> 00:49:10,560
point<font color="#E5E5E5"> out is the size control operator</font>

796
00:49:08,730 --> 00:49:13,470
so right now with size you can define it

797
00:49:10,560 --> 00:49:15,180
as a single<font color="#E5E5E5"> size or you can define a</font>

798
00:49:13,470 --> 00:49:17,759
range<font color="#CCCCCC"> I believe right so it can be like</font>

799
00:49:15,180 --> 00:49:20,850
<font color="#CCCCCC">three to 63 bytes in length or whatever</font>

800
00:49:17,760 --> 00:49:22,530
it is<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> fine but I have</font><font color="#CCCCCC"> use</font>

801
00:49:20,850 --> 00:49:25,259
cases where<font color="#E5E5E5"> I want to be able to</font>

802
00:49:22,530 --> 00:49:29,490
constrain<font color="#E5E5E5"> the size of a string or a byte</font>

803
00:49:25,260 --> 00:49:31,410
string<font color="#E5E5E5"> to basically mod</font><font color="#CCCCCC"> to like</font><font color="#E5E5E5"> only</font>

804
00:49:29,490 --> 00:49:34,020
even numbers or only<font color="#E5E5E5"> powers of two or</font>

805
00:49:31,410 --> 00:49:36,000
whatever<font color="#E5E5E5"> okay just because</font><font color="#CCCCCC"> that's those</font>

806
00:49:34,020 --> 00:49:38,250
<font color="#CCCCCC">are the increments of the data items I</font>

807
00:49:36,000 --> 00:49:40,740
can<font color="#CCCCCC"> do well interestingly if I use a</font>

808
00:49:38,250 --> 00:49:43,350
regular<font color="#E5E5E5"> expression constraint</font><font color="#CCCCCC"> I can</font>

809
00:49:40,740 --> 00:49:45,990
<font color="#CCCCCC">actually do</font><font color="#E5E5E5"> that very powerfully by just</font>

810
00:49:43,350 --> 00:49:48,029
saying<font color="#E5E5E5"> regular expression has multiples</font>

811
00:49:45,990 --> 00:49:50,609
of<font color="#E5E5E5"> two right a group of two characters</font>

812
00:49:48,030 --> 00:49:53,730
or bytes<font color="#E5E5E5"> and then plus essentially or</font>

813
00:49:50,610 --> 00:49:57,890
multiples of two I can't do that with

814
00:49:53,730 --> 00:49:59,850
size and I think as a result<font color="#E5E5E5"> if we adopt</font>

815
00:49:57,890 --> 00:50:02,160
regular expressions in<font color="#CCCCCC"> their more</font>

816
00:49:59,850 --> 00:50:04,830
powerful form<font color="#E5E5E5"> right with the slash</font>

817
00:50:02,160 --> 00:50:08,399
notation<font color="#E5E5E5"> and whatnot we can actually</font>

818
00:50:04,830 --> 00:50:11,549
find that there will<font color="#CCCCCC"> be control</font>

819
00:50:08,400 --> 00:50:14,220
operators that may be superfluous<font color="#E5E5E5"> so we</font>

820
00:50:11,550 --> 00:50:17,130
<font color="#E5E5E5">don't need them at all and we might want</font>

821
00:50:14,220 --> 00:50:20,129
<font color="#E5E5E5">to you</font><font color="#CCCCCC"> know make all these control</font>

822
00:50:17,130 --> 00:50:22,020
operators<font color="#E5E5E5"> simplified and just say just</font>

823
00:50:20,130 --> 00:50:24,960
use regular expressions and<font color="#E5E5E5"> here's like</font>

824
00:50:22,020 --> 00:50:26,280
<font color="#E5E5E5">a handful of very</font><font color="#CCCCCC"> powerful ones that</font>

825
00:50:24,960 --> 00:50:29,930
you're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to commonly use for</font><font color="#CCCCCC"> these</font>

826
00:50:26,280 --> 00:50:32,190
sorts of patterns<font color="#E5E5E5"> um</font><font color="#CCCCCC"> so with that</font><font color="#E5E5E5"> said</font>

827
00:50:29,930 --> 00:50:34,109
that's<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of another proposal</font><font color="#E5E5E5"> on the</font>

828
00:50:32,190 --> 00:50:36,120
<font color="#E5E5E5">table</font><font color="#CCCCCC"> not to remove the</font><font color="#E5E5E5"> control</font>

829
00:50:34,110 --> 00:50:38,760
operators but to<font color="#E5E5E5"> recognize that there</font>

830
00:50:36,120 --> 00:50:43,630
<font color="#CCCCCC">are perhaps more powerful simpler ways</font>

831
00:50:38,760 --> 00:50:46,900
of annotating<font color="#CCCCCC"> the same thing</font><font color="#E5E5E5"> and if</font>

832
00:50:43,630 --> 00:50:50,640
people really really<font color="#E5E5E5"> want a v-0 or a v1</font>

833
00:50:46,900 --> 00:50:52,900
of<font color="#E5E5E5"> CD DL we can consider you know</font>

834
00:50:50,640 --> 00:50:58,180
dealing with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> control operator issue</font>

835
00:50:52,900 --> 00:50:59,620
<font color="#CCCCCC">after the publication of that</font><font color="#E5E5E5"> so let me</font>

836
00:50:58,180 --> 00:51:04,500
answer<font color="#CCCCCC"> that because it's really</font>

837
00:50:59,620 --> 00:51:07,180
confusing<font color="#E5E5E5"> right now ring exposed rings</font>

838
00:51:04,500 --> 00:51:11,710
<font color="#E5E5E5">okay so yeah so I wanted to point out as</font>

839
00:51:07,180 --> 00:51:13,660
well<font color="#E5E5E5"> reg axes are</font><font color="#CCCCCC"> for sequences of code</font>

840
00:51:11,710 --> 00:51:15,760
units so you can just have a binary

841
00:51:13,660 --> 00:51:18,879
regular expression<font color="#E5E5E5"> that operates on</font><font color="#CCCCCC"> a</font>

842
00:51:15,760 --> 00:51:20,940
<font color="#CCCCCC">tetes</font><font color="#E5E5E5"> from 0 to 255</font><font color="#CCCCCC"> as opposed to</font>

843
00:51:18,880 --> 00:51:25,950
regular<font color="#CCCCCC"> expressions that operate on</font>

844
00:51:20,940 --> 00:51:31,060
<font color="#CCCCCC">Unicode code points</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> 0 to 10 ffff</font>

845
00:51:25,950 --> 00:51:35,259
<font color="#E5E5E5">yes right no</font><font color="#CCCCCC"> ringer</font><font color="#E5E5E5"> for Strings</font><font color="#CCCCCC"> right my</font>

846
00:51:31,060 --> 00:51:40,840
view actually is<font color="#E5E5E5"> that reg X's could be</font>

847
00:51:35,260 --> 00:51:43,450
applied<font color="#CCCCCC"> to both byte strings and text</font>

848
00:51:40,840 --> 00:51:44,890
strings and<font color="#E5E5E5"> that and</font><font color="#CCCCCC"> that they you know</font>

849
00:51:43,450 --> 00:51:47,759
they just<font color="#E5E5E5"> have a different</font><font color="#CCCCCC"> domain</font><font color="#E5E5E5"> in the</font>

850
00:51:44,890 --> 00:51:53,290
case<font color="#E5E5E5"> of</font><font color="#CCCCCC"> oxides it's</font><font color="#E5E5E5"> zero</font><font color="#CCCCCC"> to achieve</font><font color="#E5E5E5"> this</font>

851
00:51:47,760 --> 00:51:55,630
<font color="#CCCCCC">and what we have tried to do is not turn</font>

852
00:51:53,290 --> 00:51:58,060
CDL<font color="#CCCCCC"> Interpol</font>

853
00:51:55,630 --> 00:52:01,450
so<font color="#CCCCCC"> reg X is are there</font><font color="#E5E5E5"> for the few</font><font color="#CCCCCC"> cases</font>

854
00:51:58,060 --> 00:52:03,430
where<font color="#CCCCCC"> they actually</font><font color="#E5E5E5"> add something but</font>

855
00:52:01,450 --> 00:52:06,399
they are traditionally<font color="#CCCCCC"> not</font><font color="#E5E5E5"> a way in</font>

856
00:52:03,430 --> 00:52:08,589
which we specify the strings in<font color="#E5E5E5"> the IDF</font>

857
00:52:06,400 --> 00:52:12,220
<font color="#E5E5E5">now one way to solve this problem would</font>

858
00:52:08,590 --> 00:52:14,710
have<font color="#CCCCCC"> been</font><font color="#E5E5E5"> to add a B and F to a CDL and</font>

859
00:52:12,220 --> 00:52:20,589
<font color="#E5E5E5">maybe in C Drive version 2 we will do</font>

860
00:52:14,710 --> 00:52:21,940
that but<font color="#E5E5E5"> I think reg X therefore for a</font>

861
00:52:20,590 --> 00:52:24,820
narrow domain and they should stay that

862
00:52:21,940 --> 00:52:28,630
<font color="#E5E5E5">way and I</font><font color="#CCCCCC"> don't know how to do a grandma</font>

863
00:52:24,820 --> 00:52:30,880
<font color="#CCCCCC">that does this</font><font color="#E5E5E5"> such thing</font><font color="#CCCCCC"> so I have to</font>

864
00:52:28,630 --> 00:52:33,880
pass on that<font color="#CCCCCC"> okay I guess I would just</font>

865
00:52:30,880 --> 00:52:35,770
<font color="#E5E5E5">say that regular expressions are a part</font>

866
00:52:33,880 --> 00:52:38,260
of C DDL and they're a part of C<font color="#E5E5E5"> bore</font>

867
00:52:35,770 --> 00:52:41,590
<font color="#E5E5E5">too because they're in you know</font><font color="#CCCCCC"> RC</font><font color="#E5E5E5"> 70 49</font>

868
00:52:38,260 --> 00:52:43,990
<font color="#E5E5E5">so and a lot of people do in fact use</font>

869
00:52:41,590 --> 00:52:46,870
them<font color="#E5E5E5"> so although it's true the</font><font color="#CCCCCC"> ietf has</font>

870
00:52:43,990 --> 00:52:49,839
not defined them that way<font color="#CCCCCC"> I'd first</font>

871
00:52:46,870 --> 00:52:51,400
question do you really<font color="#CCCCCC"> need</font><font color="#E5E5E5"> I maybe I</font>

872
00:52:49,840 --> 00:52:53,590
should ask the group or you know

873
00:52:51,400 --> 00:52:56,410
whatever<font color="#E5E5E5"> have people</font><font color="#CCCCCC"> been using the</font>

874
00:52:53,590 --> 00:52:57,480
control operators to constrain their

875
00:52:56,410 --> 00:53:00,009
specifications

876
00:52:57,480 --> 00:53:02,410
important critical way where it's like

877
00:53:00,010 --> 00:53:04,839
actually normative and have they<font color="#CCCCCC"> used</font>

878
00:53:02,410 --> 00:53:06,549
regular expressions<font color="#E5E5E5"> in that way as well</font>

879
00:53:04,839 --> 00:53:09,540
<font color="#E5E5E5">because</font><font color="#CCCCCC"> regular sessions do in fact</font>

880
00:53:06,550 --> 00:53:23,740
appear with some frequency in other

881
00:53:09,540 --> 00:53:26,890
specifications<font color="#CCCCCC"> users Jim or no</font><font color="#E5E5E5"> too hard</font>

882
00:53:23,740 --> 00:53:33,759
<font color="#CCCCCC">he says um this is</font><font color="#E5E5E5"> Hank as a user and</font>

883
00:53:26,890 --> 00:53:37,089
yes<font color="#E5E5E5"> I have used controls from</font><font color="#CCCCCC"> the</font>

884
00:53:33,760 --> 00:53:39,510
working<font color="#E5E5E5"> group</font><font color="#CCCCCC"> so I think Shawn had</font>

885
00:53:37,089 --> 00:53:43,808
raised this before in the mailing<font color="#E5E5E5"> list</font>

886
00:53:39,510 --> 00:53:51,720
but please<font color="#E5E5E5"> take it up again and we will</font>

887
00:53:43,809 --> 00:53:51,720
and users please respond<font color="#E5E5E5"> to</font><font color="#CCCCCC"> this email</font>

888
00:53:52,410 --> 00:53:56,950
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> then why</font><font color="#E5E5E5"> why I stepped up to the</font>

889
00:53:54,730 --> 00:54:00,089
mic<font color="#CCCCCC"> the first place was that</font><font color="#E5E5E5"> I had a</font>

890
00:53:56,950 --> 00:54:04,200
difficult<font color="#CCCCCC"> time to parse the statement</font>

891
00:54:00,089 --> 00:54:04,200
<font color="#E5E5E5">powerful and simple</font>

892
00:54:04,619 --> 00:54:12,540
so my question really is you don't want

893
00:54:08,109 --> 00:54:17,430
to<font color="#E5E5E5"> do this now take take this leg out of</font>

894
00:54:12,540 --> 00:54:17,430
<font color="#E5E5E5">vacation and</font><font color="#CCCCCC"> they fix</font><font color="#E5E5E5"> it to the head</font>

895
00:54:18,450 --> 00:54:27,669
even<font color="#E5E5E5"> is this useful</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> people think this</font>

896
00:54:22,960 --> 00:54:29,740
<font color="#E5E5E5">is useful then the next question</font><font color="#CCCCCC"> is the</font>

897
00:54:27,670 --> 00:54:33,040
<font color="#E5E5E5">proposal that</font><font color="#CCCCCC"> Shawn</font><font color="#E5E5E5"> just made about</font>

898
00:54:29,740 --> 00:54:35,799
<font color="#CCCCCC">record then and then we can talk</font><font color="#E5E5E5"> about</font>

899
00:54:33,040 --> 00:54:39,670
<font color="#E5E5E5">is this something to do right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> how</font>

900
00:54:35,799 --> 00:54:41,520
<font color="#E5E5E5">long would this take and if this should</font>

901
00:54:39,670 --> 00:54:44,680
be something<font color="#CCCCCC"> for</font><font color="#E5E5E5"> next version or not</font>

902
00:54:41,520 --> 00:54:46,599
right<font color="#E5E5E5"> so in response to simple and</font>

903
00:54:44,680 --> 00:54:48,848
<font color="#E5E5E5">powerful how can that work right well</font>

904
00:54:46,599 --> 00:54:50,380
there's always a holy<font color="#E5E5E5"> grail of computer</font>

905
00:54:48,849 --> 00:54:51,940
science<font color="#CCCCCC"> you say something simple</font><font color="#E5E5E5"> and</font>

906
00:54:50,380 --> 00:54:53,920
powerful and then it turns<font color="#E5E5E5"> out to be one</font>

907
00:54:51,940 --> 00:54:58,510
or<font color="#E5E5E5"> the</font><font color="#CCCCCC"> other or</font><font color="#E5E5E5"> whatever and the answer</font>

908
00:54:53,920 --> 00:55:00,549
is regular expressions are simple<font color="#E5E5E5"> when</font>

909
00:54:58,510 --> 00:55:03,790
they're simple and they're powerful<font color="#E5E5E5"> when</font>

910
00:55:00,549 --> 00:55:07,930
they're powerful<font color="#E5E5E5"> right but they are a</font>

911
00:55:03,790 --> 00:55:10,839
<font color="#E5E5E5">part up to now of CDL</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> C bore right</font>

912
00:55:07,930 --> 00:55:11,230
the existence of<font color="#CCCCCC"> C DDL in its current</font>

913
00:55:10,839 --> 00:55:15,869
draft

914
00:55:11,230 --> 00:55:18,220
form assumes that<font color="#CCCCCC"> AC DDL generator or</font><font color="#E5E5E5"> a</font>

915
00:55:15,869 --> 00:55:21,940
parser or validator of some kind<font color="#CCCCCC"> that</font>

916
00:55:18,220 --> 00:55:23,980
can form suspect<font color="#E5E5E5"> will do</font><font color="#CCCCCC"> something with</font>

917
00:55:21,940 --> 00:55:26,020
<font color="#CCCCCC">the regular</font><font color="#E5E5E5"> expression right so that</font>

918
00:55:23,980 --> 00:55:29,650
basically<font color="#E5E5E5"> assumes that pcre is lying</font>

919
00:55:26,020 --> 00:55:31,090
around<font color="#E5E5E5"> does that make sense</font><font color="#CCCCCC"> so assuming</font>

920
00:55:29,650 --> 00:55:35,350
that you<font color="#E5E5E5"> have this piece</font><font color="#CCCCCC"> of machinery</font>

921
00:55:31,090 --> 00:55:39,490
that's part of<font color="#E5E5E5"> C bore</font><font color="#CCCCCC"> because it's in</font>

922
00:55:35,350 --> 00:55:41,650
the the<font color="#CCCCCC"> specs right</font><font color="#E5E5E5"> then that's what you</font>

923
00:55:39,490 --> 00:55:45,069
got so you<font color="#E5E5E5"> may as well make</font><font color="#CCCCCC"> the most use</font>

924
00:55:41,650 --> 00:55:47,260
<font color="#CCCCCC">of it does that make does that make</font>

925
00:55:45,070 --> 00:55:48,730
sense<font color="#E5E5E5"> yeah and one question that I don't</font>

926
00:55:47,260 --> 00:55:54,070
have<font color="#E5E5E5"> on the slides that maybe Aleksic</font>

927
00:55:48,730 --> 00:55:56,560
and can answer<font color="#E5E5E5"> so PCR II is not defined</font>

928
00:55:54,070 --> 00:55:59,830
in a normative document that we can use

929
00:55:56,560 --> 00:56:02,859
it also is<font color="#E5E5E5"> the right spec to reference</font>

930
00:55:59,830 --> 00:56:07,210
here as shown<font color="#E5E5E5"> probably correctly as</font>

931
00:56:02,859 --> 00:56:09,220
identified so I'm not<font color="#CCCCCC"> sure whether I</font>

932
00:56:07,210 --> 00:56:12,310
want to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a guinea pig for the</font><font color="#E5E5E5"> new</font>

933
00:56:09,220 --> 00:56:15,368
let's reference over<font color="#E5E5E5"> source projects</font>

934
00:56:12,310 --> 00:56:17,740
policy of the<font color="#E5E5E5"> is G but this</font><font color="#CCCCCC"> is where it</font>

935
00:56:15,369 --> 00:56:19,960
actually<font color="#E5E5E5"> would should I need to check</font>

936
00:56:17,740 --> 00:56:24,569
I vaguely remember there was one of the

937
00:56:19,960 --> 00:56:29,310
<font color="#E5E5E5">save documents that has regex extension</font>

938
00:56:24,570 --> 00:56:32,710
so<font color="#E5E5E5"> I can find out what it used there</font><font color="#CCCCCC"> so</font>

939
00:56:29,310 --> 00:56:34,630
if you were willing<font color="#E5E5E5"> to take a slightly</font>

940
00:56:32,710 --> 00:56:36,970
less powerful version you could

941
00:56:34,630 --> 00:56:39,369
reference<font color="#CCCCCC"> one of the ACMA</font><font color="#E5E5E5"> Docs and use</font>

942
00:56:36,970 --> 00:56:43,060
<font color="#CCCCCC">Java the</font><font color="#E5E5E5"> JavaScript version they</font><font color="#CCCCCC"> are</font>

943
00:56:39,369 --> 00:56:46,150
adding look behind<font color="#E5E5E5"> and so you could for</font>

944
00:56:43,060 --> 00:56:48,400
example take that that<font color="#CCCCCC"> there's some</font>

945
00:56:46,150 --> 00:56:52,060
rather weird Unicode stuff going on with

946
00:56:48,400 --> 00:56:55,210
<font color="#E5E5E5">those so if we can avoid reference that</font>

947
00:56:52,060 --> 00:56:56,950
I'm just<font color="#E5E5E5"> saying that they are a there's</font>

948
00:56:55,210 --> 00:57:00,640
there's there are<font color="#CCCCCC"> standards Docs</font><font color="#E5E5E5"> to</font>

949
00:56:56,950 --> 00:57:04,390
point<font color="#E5E5E5"> you there which is better</font><font color="#CCCCCC"> then not</font>

950
00:57:00,640 --> 00:57:07,750
<font color="#CCCCCC">having something to reference</font><font color="#E5E5E5"> let me try</font>

951
00:57:04,390 --> 00:57:09,520
<font color="#E5E5E5">to find the document and</font><font color="#CCCCCC"> and then we can</font>

952
00:57:07,750 --> 00:57:13,740
have a look whether it's a good example

953
00:57:09,520 --> 00:57:13,740
<font color="#CCCCCC">or you know at least it's an</font><font color="#E5E5E5"> example</font>

954
00:57:16,069 --> 00:57:22,670
yeah and finally my concern<font color="#E5E5E5"> with having</font>

955
00:57:20,199 --> 00:57:27,049
<font color="#CCCCCC">accepted the let's assume we exchange</font>

956
00:57:22,670 --> 00:57:31,910
controls<font color="#CCCCCC"> in general</font><font color="#E5E5E5"> the powerful and</font>

957
00:57:27,049 --> 00:57:36,190
simple<font color="#E5E5E5"> reg X we are talking about</font><font color="#CCCCCC"> a</font>

958
00:57:31,910 --> 00:57:39,890
<font color="#E5E5E5">domain where if we are ever</font><font color="#CCCCCC"> going to do</font>

959
00:57:36,190 --> 00:57:42,469
message validation actually that's

960
00:57:39,890 --> 00:57:46,779
<font color="#E5E5E5">that's kind of kind of true a bunch of</font>

961
00:57:42,469 --> 00:57:49,969
an overhead<font color="#E5E5E5"> maybe and that domain so um</font>

962
00:57:46,779 --> 00:57:53,989
<font color="#CCCCCC">I would be very careful about the</font><font color="#E5E5E5"> pole</font>

963
00:57:49,969 --> 00:57:56,390
for stuff and that domain<font color="#E5E5E5"> yeah so the</font>

964
00:57:53,989 --> 00:57:59,269
way<font color="#CCCCCC"> forward</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> Alexei finds</font><font color="#E5E5E5"> out we</font>

965
00:57:56,390 --> 00:58:01,160
cannot do this<font color="#E5E5E5"> records currently linked</font>

966
00:57:59,269 --> 00:58:04,578
into<font color="#CCCCCC"> the document using an extension</font>

967
00:58:01,160 --> 00:58:07,420
point and we can<font color="#CCCCCC"> just</font><font color="#E5E5E5"> throw out</font><font color="#CCCCCC"> vague</font>

968
00:58:04,579 --> 00:58:10,039
excerpts<font color="#E5E5E5"> out of this current document</font>

969
00:58:07,420 --> 00:58:12,829
<font color="#CCCCCC">finish it and write a second document</font>

970
00:58:10,039 --> 00:58:15,109
<font color="#CCCCCC">that has the regs reference</font><font color="#E5E5E5"> in it and</font>

971
00:58:12,829 --> 00:58:17,499
let that<font color="#E5E5E5"> sit in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> internet drafts</font>

972
00:58:15,109 --> 00:58:19,788
directory until we find out how<font color="#E5E5E5"> to do it</font>

973
00:58:17,499 --> 00:58:23,569
<font color="#E5E5E5">all right we should</font><font color="#CCCCCC"> move on other things</font>

974
00:58:19,789 --> 00:58:25,339
<font color="#CCCCCC">okay yeah i</font><font color="#E5E5E5"> okay that that sounds good I</font>

975
00:58:23,569 --> 00:58:27,709
would just say as I pointed<font color="#E5E5E5"> out not just</font>

976
00:58:25,339 --> 00:58:29,299
reg<font color="#E5E5E5"> X but all of control operators if</font>

977
00:58:27,709 --> 00:58:31,368
not because<font color="#E5E5E5"> they're not useful but</font>

978
00:58:29,299 --> 00:58:35,630
because maybe we don't need them<font color="#CCCCCC"> right</font>

979
00:58:31,369 --> 00:58:37,459
<font color="#CCCCCC">now there is no control operator that</font>

980
00:58:35,630 --> 00:58:39,259
it's not used by at least one<font color="#E5E5E5"> it's you</font>

981
00:58:37,459 --> 00:58:42,469
know I know you want<font color="#CCCCCC"> to stop this but</font>

982
00:58:39,259 --> 00:58:44,599
I'm confused by something<font color="#E5E5E5"> it ultimately</font>

983
00:58:42,469 --> 00:58:47,180
<font color="#E5E5E5">the validator</font><font color="#CCCCCC"> I want to be in my</font>

984
00:58:44,599 --> 00:58:50,660
embedded device<font color="#CCCCCC"> oh sorry Dave</font><font color="#E5E5E5"> Robin</font>

985
00:58:47,180 --> 00:58:52,549
maker of embedded devices<font color="#CCCCCC"> I want to get</font>

986
00:58:50,660 --> 00:58:54,589
a<font color="#CCCCCC"> c-more message in I want to be able to</font>

987
00:58:52,549 --> 00:58:57,410
validate<font color="#E5E5E5"> it based on some compiler</font><font color="#CCCCCC"> that</font>

988
00:58:54,589 --> 00:58:59,808
looked at the CDL<font color="#CCCCCC"> and told my device how</font>

989
00:58:57,410 --> 00:59:02,420
to<font color="#CCCCCC"> validate it now if you can say</font>

990
00:58:59,809 --> 00:59:06,859
everything<font color="#E5E5E5"> can be replaced by</font><font color="#CCCCCC"> one</font>

991
00:59:02,420 --> 00:59:08,599
gigantic reg X<font color="#E5E5E5"> expression then I'm going</font>

992
00:59:06,859 --> 00:59:10,670
to give it<font color="#E5E5E5"> to a human to figure out how</font>

993
00:59:08,599 --> 00:59:12,670
<font color="#E5E5E5">to</font><font color="#CCCCCC"> actually write the code to</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> that</font>

994
00:59:10,670 --> 00:59:15,369
validation<font color="#CCCCCC"> because I don't have a reg X</font>

995
00:59:12,670 --> 00:59:18,349
interpreter in<font color="#CCCCCC"> the embedded environment</font>

996
00:59:15,369 --> 00:59:20,509
so let's not go overboard<font color="#E5E5E5"> and say we</font>

997
00:59:18,349 --> 00:59:23,150
don't<font color="#CCCCCC"> need CDD Allah just one big reg X</font>

998
00:59:20,509 --> 00:59:25,309
<font color="#E5E5E5">expression so the the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> opt the</font>

999
00:59:23,150 --> 00:59:28,069
constraints are easily turned into

1000
00:59:25,309 --> 00:59:29,750
<font color="#E5E5E5">embedded rules don't go crazy with</font>

1001
00:59:28,069 --> 00:59:31,279
things that<font color="#E5E5E5"> can</font>

1002
00:59:29,750 --> 00:59:32,900
<font color="#E5E5E5">per set those constraints those</font>

1003
00:59:31,280 --> 00:59:41,900
constraints can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> easily turned</font><font color="#E5E5E5"> into</font>

1004
00:59:32,900 --> 00:59:45,650
embedded rules next<font color="#E5E5E5"> so the CBO</font>

1005
00:59:41,900 --> 00:59:49,550
specification itself<font color="#CCCCCC"> as you know our</font><font color="#E5E5E5"> job</font>

1006
00:59:45,650 --> 00:59:52,010
is<font color="#CCCCCC"> to take this to</font><font color="#E5E5E5"> standards level and</font>

1007
00:59:49,550 --> 00:59:55,790
there are several things we need<font color="#CCCCCC"> to do</font>

1008
00:59:52,010 --> 00:59:58,850
and there is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> process you find in RFC</font>

1009
00:59:55,790 --> 01:00:01,990
64<font color="#CCCCCC"> 10 for</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> that so those are you</font>

1010
00:59:58,850 --> 01:00:07,520
<font color="#E5E5E5">who</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> not familiar with</font><font color="#CCCCCC"> that process</font>

1011
01:00:01,990 --> 01:00:09,799
<font color="#CCCCCC">please have a look yeah we have some</font><font color="#E5E5E5"> 45</font>

1012
01:00:07,520 --> 01:00:11,990
implementations so it should not<font color="#CCCCCC"> be too</font>

1013
01:00:09,800 --> 01:00:13,940
hard<font color="#E5E5E5"> to point out to independent</font>

1014
01:00:11,990 --> 01:00:15,770
implementations<font color="#E5E5E5"> whether they are</font>

1015
01:00:13,940 --> 01:00:18,200
<font color="#CCCCCC">interoperable that that's what we need</font>

1016
01:00:15,770 --> 01:00:21,050
to find out is as<font color="#E5E5E5"> Joyce said we have</font>

1017
01:00:18,200 --> 01:00:23,299
fixed the errata<font color="#E5E5E5"> while looking at</font>

1018
01:00:21,050 --> 01:00:25,880
interval<font color="#CCCCCC"> T we can look at whether we</font>

1019
01:00:23,300 --> 01:00:28,870
have unused features<font color="#E5E5E5"> and as far as I</font>

1020
01:00:25,880 --> 01:00:33,620
know we don't<font color="#CCCCCC"> have any patent claims</font>

1021
01:00:28,870 --> 01:00:36,560
that are known so<font color="#E5E5E5"> far so the status of</font>

1022
01:00:33,620 --> 01:00:41,230
the document<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> they're</font><font color="#CCCCCC"> zero zero</font>

1023
01:00:36,560 --> 01:00:45,230
had already fixed<font color="#E5E5E5"> the errata and -</font><font color="#CCCCCC"> l1</font>

1024
01:00:41,230 --> 01:00:48,250
has reacted to a few comments<font color="#CCCCCC"> that have</font>

1025
01:00:45,230 --> 01:00:52,130
been made by<font color="#E5E5E5"> implementers one is that</font>

1026
01:00:48,250 --> 01:00:53,150
the<font color="#E5E5E5"> the way the simple types like false</font>

1027
01:00:52,130 --> 01:00:58,520
true null and so on

1028
01:00:53,150 --> 01:01:02,600
<font color="#CCCCCC">I encoded is said again</font><font color="#E5E5E5"> in another place</font>

1029
01:00:58,520 --> 01:01:06,380
so it's harder to miss the way they are

1030
01:01:02,600 --> 01:01:08,870
defined<font color="#E5E5E5"> we added a changes section maybe</font>

1031
01:01:06,380 --> 01:01:12,710
in the<font color="#E5E5E5"> next version we will separate</font>

1032
01:01:08,870 --> 01:01:15,650
editorial changes<font color="#E5E5E5"> fixes and a new</font>

1033
01:01:12,710 --> 01:01:19,850
information<font color="#E5E5E5"> from each other and the only</font>

1034
01:01:15,650 --> 01:01:22,790
<font color="#E5E5E5">real new material is the new section</font>

1035
01:01:19,850 --> 01:01:27,560
<font color="#CCCCCC">about SIBO data months and</font><font color="#E5E5E5"> there we</font>

1036
01:01:22,790 --> 01:01:30,170
<font color="#E5E5E5">shall quickly talk</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> so those</font>

1037
01:01:27,560 --> 01:01:33,500
<font color="#E5E5E5">people who have worked with Jason and we</font>

1038
01:01:30,170 --> 01:01:35,150
<font color="#CCCCCC">like</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> however it's not always clear</font>

1039
01:01:33,500 --> 01:01:39,780
what the data model<font color="#CCCCCC"> actually is that is</font>

1040
01:01:35,150 --> 01:01:41,970
being derived from<font color="#CCCCCC"> a JSON instance</font>

1041
01:01:39,780 --> 01:01:45,000
and if you<font color="#E5E5E5"> really paid</font><font color="#CCCCCC"> attention you</font>

1042
01:01:41,970 --> 01:01:48,899
<font color="#CCCCCC">could infer</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> SIBO data model</font><font color="#E5E5E5"> from our</font>

1043
01:01:45,000 --> 01:01:52,650
<font color="#CCCCCC">c7 t49 but</font><font color="#E5E5E5"> maybe it's better to</font><font color="#CCCCCC"> actually</font>

1044
01:01:48,900 --> 01:01:55,920
<font color="#E5E5E5">make this very explicit</font><font color="#CCCCCC"> so there is a</font>

1045
01:01:52,650 --> 01:01:58,770
proposal<font color="#E5E5E5"> for a</font><font color="#CCCCCC"> new section 2.5 which is</font>

1046
01:01:55,920 --> 01:02:00,990
called<font color="#E5E5E5"> generic data model generic</font>

1047
01:01:58,770 --> 01:02:03,180
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it's not about a specific data</font>

1048
01:02:00,990 --> 01:02:06,830
model a specific application<font color="#E5E5E5"> might be</font>

1049
01:02:03,180 --> 01:02:11,069
using<font color="#E5E5E5"> but it's about the complete set of</font>

1050
01:02:06,830 --> 01:02:13,980
instances<font color="#E5E5E5"> that can be realized in</font><font color="#CCCCCC"> recibo</font>

1051
01:02:11,070 --> 01:02:18,150
and that generic<font color="#E5E5E5"> data model comes in two</font>

1052
01:02:13,980 --> 01:02:21,150
parts<font color="#E5E5E5"> one is the unexpended basic data</font>

1053
01:02:18,150 --> 01:02:24,480
model and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> half is the</font>

1054
01:02:21,150 --> 01:02:26,040
extension points of course<font color="#E5E5E5"> given</font><font color="#CCCCCC"> that</font>

1055
01:02:24,480 --> 01:02:28,740
the<font color="#E5E5E5"> extension points are</font><font color="#CCCCCC"> therefore</font>

1056
01:02:26,040 --> 01:02:31,170
<font color="#E5E5E5">extending</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> that data model is not</font>

1057
01:02:28,740 --> 01:02:35,430
closed<font color="#E5E5E5"> people can come in and define new</font>

1058
01:02:31,170 --> 01:02:37,280
parts of that data model but this<font color="#CCCCCC"> simple</font>

1059
01:02:35,430 --> 01:02:44,370
document<font color="#CCCCCC"> already comes with</font><font color="#E5E5E5"> 18</font>

1060
01:02:37,280 --> 01:02:47,100
<font color="#E5E5E5">predefined tags and</font><font color="#CCCCCC"> for simple items</font>

1061
01:02:44,370 --> 01:02:50,690
<font color="#E5E5E5">falls through now undefined and of</font>

1062
01:02:47,100 --> 01:02:56,850
course there<font color="#CCCCCC"> are now a couple</font><font color="#E5E5E5"> of dozen</font>

1063
01:02:50,690 --> 01:03:01,850
<font color="#CCCCCC">tags defined in an Ayanna registry so</font>

1064
01:02:56,850 --> 01:03:05,250
this is probably a useful<font color="#CCCCCC"> thing because</font>

1065
01:03:01,850 --> 01:03:09,720
<font color="#E5E5E5">the generic data model makes it more</font>

1066
01:03:05,250 --> 01:03:12,570
explicit what we actually<font color="#CCCCCC"> expect from an</font>

1067
01:03:09,720 --> 01:03:14,490
implementer of generic encoders and

1068
01:03:12,570 --> 01:03:16,320
decoders because<font color="#CCCCCC"> an encoder decoder</font>

1069
01:03:14,490 --> 01:03:18,810
translates<font color="#CCCCCC"> between the data model</font><font color="#E5E5E5"> and</font>

1070
01:03:16,320 --> 01:03:21,560
<font color="#E5E5E5">the serialization</font><font color="#CCCCCC"> and it's not enough to</font>

1071
01:03:18,810 --> 01:03:24,600
just specify<font color="#CCCCCC"> the serialization</font><font color="#E5E5E5"> if you</font>

1072
01:03:21,560 --> 01:03:27,779
expect generic encoders and decoders to

1073
01:03:24,600 --> 01:03:29,990
interoperate<font color="#CCCCCC"> and an</font><font color="#E5E5E5"> ecosystem of such</font>

1074
01:03:27,780 --> 01:03:32,630
<font color="#E5E5E5">generic and coastal decoders makes</font>

1075
01:03:29,990 --> 01:03:35,160
interrogatory so much more likely and

1076
01:03:32,630 --> 01:03:37,020
also guides the definition of specific

1077
01:03:35,160 --> 01:03:39,390
<font color="#E5E5E5">data models because you won't define</font>

1078
01:03:37,020 --> 01:03:42,480
<font color="#E5E5E5">data models in such a way that generic</font>

1079
01:03:39,390 --> 01:03:48,870
<font color="#E5E5E5">encoders and decoders have problems with</font>

1080
01:03:42,480 --> 01:03:51,420
<font color="#E5E5E5">that so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is one</font><font color="#CCCCCC"> edition which could</font>

1081
01:03:48,870 --> 01:03:52,779
be called editorial<font color="#E5E5E5"> except there there's</font>

1082
01:03:51,420 --> 01:03:55,030
also a little<font color="#CCCCCC"> bit of text</font>

1083
01:03:52,780 --> 01:03:59,950
in there that clarifies<font color="#CCCCCC"> some</font>

1084
01:03:55,030 --> 01:04:04,690
expectations and the<font color="#CCCCCC"> batteries included</font>

1085
01:03:59,950 --> 01:04:08,129
aspect of<font color="#CCCCCC"> our FC</font><font color="#E5E5E5"> 1749 is not not</font>

1086
01:04:04,690 --> 01:04:10,900
appropriate if you need to ship C<font color="#CCCCCC"> bar by</font>

1087
01:04:08,130 --> 01:04:13,630
<font color="#CCCCCC">ma so sometimes you have to leave</font><font color="#E5E5E5"> out</font>

1088
01:04:10,900 --> 01:04:15,790
the batteries<font color="#E5E5E5"> and the question is which</font>

1089
01:04:13,630 --> 01:04:18,640
batteries<font color="#E5E5E5"> do we really want to have</font>

1090
01:04:15,790 --> 01:04:21,610
<font color="#E5E5E5">India which of the pre extensions by the</font>

1091
01:04:18,640 --> 01:04:24,640
document are really basic<font color="#E5E5E5"> and</font><font color="#CCCCCC"> section</font>

1092
01:04:21,610 --> 01:04:28,600
<font color="#CCCCCC">two</font><font color="#E5E5E5"> five now clarifies that the three</font>

1093
01:04:24,640 --> 01:04:30,220
simple data items false true null<font color="#CCCCCC"> do</font>

1094
01:04:28,600 --> 01:04:32,529
come in through an extension point but

1095
01:04:30,220 --> 01:04:36,189
they are really<font color="#E5E5E5"> not</font><font color="#CCCCCC"> an extension they</font>

1096
01:04:32,530 --> 01:04:38,110
are part of<font color="#E5E5E5"> what is expected</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

1097
01:04:36,190 --> 01:04:40,330
provided in a generic<font color="#E5E5E5"> encoder and</font>

1098
01:04:38,110 --> 01:04:42,640
decoder<font color="#CCCCCC"> that still doesn't mean that a</font>

1099
01:04:40,330 --> 01:04:45,700
data<font color="#E5E5E5"> model that you define using</font><font color="#CCCCCC"> SIBO</font>

1100
01:04:42,640 --> 01:04:47,980
has to use them but it means<font color="#E5E5E5"> if you</font>

1101
01:04:45,700 --> 01:04:51,040
write a generic<font color="#E5E5E5"> encoder decoder</font><font color="#CCCCCC"> please</font>

1102
01:04:47,980 --> 01:04:54,370
include false true or not<font color="#E5E5E5"> and everything</font>

1103
01:04:51,040 --> 01:04:57,700
else is truly optional<font color="#E5E5E5"> and a matter of</font>

1104
01:04:54,370 --> 01:05:00,430
implementation quality<font color="#E5E5E5"> so that's a</font>

1105
01:04:57,700 --> 01:05:02,890
statement<font color="#E5E5E5"> and that's probably a state</font>

1106
01:05:00,430 --> 01:05:05,200
where<font color="#E5E5E5"> we want to be very clear about in</font>

1107
01:05:02,890 --> 01:05:08,259
this<font color="#CCCCCC"> working or</font><font color="#E5E5E5"> whether that's what we</font>

1108
01:05:05,200 --> 01:05:10,270
expect from<font color="#CCCCCC"> generically coders</font><font color="#E5E5E5"> so again</font>

1109
01:05:08,260 --> 01:05:12,820
this is a relevant<font color="#E5E5E5"> vent for</font>

1110
01:05:10,270 --> 01:05:15,610
<font color="#E5E5E5">interoperability because this</font><font color="#CCCCCC"> ecosystem</font>

1111
01:05:12,820 --> 01:05:18,220
of generic encoders and decoders<font color="#E5E5E5"> helps</font>

1112
01:05:15,610 --> 01:05:23,740
<font color="#CCCCCC">gain gaining interoperability</font><font color="#E5E5E5"> but it's</font>

1113
01:05:18,220 --> 01:05:27,279
not a<font color="#CCCCCC"> 2119</font><font color="#E5E5E5"> type of must or must not it's</font>

1114
01:05:23,740 --> 01:05:29,200
just an expectation and we<font color="#E5E5E5"> historically</font>

1115
01:05:27,280 --> 01:05:32,410
have<font color="#CCCCCC"> had a</font><font color="#E5E5E5"> little bit of a problem in</font><font color="#CCCCCC"> in</font>

1116
01:05:29,200 --> 01:05:34,390
<font color="#E5E5E5">the IDF managing these expectations</font><font color="#CCCCCC"> so</font>

1117
01:05:32,410 --> 01:05:40,660
it's a<font color="#E5E5E5"> little bit of an unusual</font><font color="#CCCCCC"> way of</font>

1118
01:05:34,390 --> 01:05:44,020
specifying<font color="#E5E5E5"> yes okay</font>

1119
01:05:40,660 --> 01:05:45,370
so if you have any comment on<font color="#E5E5E5"> that</font>

1120
01:05:44,020 --> 01:05:47,370
<font color="#E5E5E5">that would be something that</font><font color="#CCCCCC"> that would</font>

1121
01:05:45,370 --> 01:05:51,490
<font color="#E5E5E5">be really</font><font color="#CCCCCC"> useful on the mailing list</font><font color="#E5E5E5"> or</font>

1122
01:05:47,370 --> 01:05:54,190
<font color="#E5E5E5">on the microphone but I don't get maybe</font>

1123
01:05:51,490 --> 01:05:55,810
it's just a type of Sean Leonard<font color="#CCCCCC"> in your</font>

1124
01:05:54,190 --> 01:05:58,180
slide it says anything<font color="#E5E5E5"> else</font><font color="#CCCCCC"> including</font>

1125
01:05:55,810 --> 01:06:00,640
undefined is truly optional<font color="#E5E5E5"> but in draft</font>

1126
01:05:58,180 --> 01:06:03,040
<font color="#CCCCCC">oh one which is posted undefined is</font>

1127
01:06:00,640 --> 01:06:06,250
actually in the<font color="#CCCCCC"> third category of it has</font>

1128
01:06:03,040 --> 01:06:09,850
to<font color="#E5E5E5"> be supported yeah at least that's</font>

1129
01:06:06,250 --> 01:06:11,740
what<font color="#E5E5E5"> I just</font><font color="#CCCCCC"> chant</font><font color="#E5E5E5"> fix that but</font><font color="#CCCCCC"> so which</font>

1130
01:06:09,850 --> 01:06:14,140
one are you<font color="#E5E5E5"> proposing</font><font color="#CCCCCC"> because it seems</font>

1131
01:06:11,740 --> 01:06:18,580
that<font color="#CCCCCC"> posing false true and no just these</font>

1132
01:06:14,140 --> 01:06:22,930
three as<font color="#E5E5E5"> core elements and</font><font color="#CCCCCC"> everything</font>

1133
01:06:18,580 --> 01:06:25,810
including undefined<font color="#E5E5E5"> as option okay I</font>

1134
01:06:22,930 --> 01:06:27,549
think<font color="#CCCCCC"> I think undefined is is useful to</font>

1135
01:06:25,810 --> 01:06:34,600
in the prior category<font color="#E5E5E5"> that's just my two</font>

1136
01:06:27,550 --> 01:06:36,160
cents<font color="#CCCCCC"> for I guess there's a difference</font>

1137
01:06:34,600 --> 01:06:38,080
between null and undefined especially

1138
01:06:36,160 --> 01:06:41,560
when undefined is used for items<font color="#E5E5E5"> that</font>

1139
01:06:38,080 --> 01:06:44,290
<font color="#CCCCCC">didn't decode properly or whatever you</font>

1140
01:06:41,560 --> 01:06:47,470
know it is where as null is like

1141
01:06:44,290 --> 01:06:49,480
explicit no<font color="#E5E5E5"> I probably have a</font>

1142
01:06:47,470 --> 01:06:51,490
<font color="#E5E5E5">recommended set I would give to an</font>

1143
01:06:49,480 --> 01:06:53,980
implementer that includes a<font color="#E5E5E5"> couple of</font>

1144
01:06:51,490 --> 01:06:55,990
those tags and and undefined and<font color="#E5E5E5"> a few</font>

1145
01:06:53,980 --> 01:06:58,570
more things<font color="#CCCCCC"> that they should be doing</font>

1146
01:06:55,990 --> 01:07:02,229
<font color="#CCCCCC">but this is trying to</font><font color="#E5E5E5"> say we</font><font color="#CCCCCC"> really</font>

1147
01:06:58,570 --> 01:07:07,450
expect people<font color="#E5E5E5"> to do the</font><font color="#CCCCCC"> jason-3 false</font>

1148
01:07:02,230 --> 01:07:09,970
true and so if<font color="#CCCCCC"> people</font><font color="#E5E5E5"> don't other people</font>

1149
01:07:07,450 --> 01:07:13,299
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> room have comments right</font><font color="#CCCCCC"> now</font>

1150
01:07:09,970 --> 01:07:20,640
otherwise<font color="#E5E5E5"> we can move this to</font><font color="#CCCCCC"> the main</font>

1151
01:07:13,300 --> 01:07:24,310
<font color="#E5E5E5">list and hopefully get feedback there</font>

1152
01:07:20,640 --> 01:07:26,140
<font color="#E5E5E5">okay the the other thing that came up as</font>

1153
01:07:24,310 --> 01:07:28,180
you<font color="#E5E5E5"> know we have a few implementations</font>

1154
01:07:26,140 --> 01:07:35,650
<font color="#CCCCCC">out there last</font><font color="#E5E5E5"> time I looked at it</font><font color="#CCCCCC"> was</font>

1155
01:07:28,180 --> 01:07:40,259
45<font color="#CCCCCC"> it's changing every week now</font><font color="#E5E5E5"> and we</font>

1156
01:07:35,650 --> 01:07:43,600
<font color="#E5E5E5">haven't got a lot</font><font color="#CCCCCC"> of feedback about</font>

1157
01:07:40,260 --> 01:07:48,190
<font color="#E5E5E5">interoperability problems but we do have</font>

1158
01:07:43,600 --> 01:07:51,598
one<font color="#E5E5E5"> and that is really not a problem in</font>

1159
01:07:48,190 --> 01:07:54,890
<font color="#CCCCCC">SIBO</font><font color="#E5E5E5"> it's a problem in the world</font>

1160
01:07:51,599 --> 01:07:57,960
we are<font color="#CCCCCC"> bridging two which is the base64</font>

1161
01:07:54,890 --> 01:08:00,930
<font color="#E5E5E5">world that has had a little</font><font color="#CCCCCC"> bit of an</font>

1162
01:07:57,960 --> 01:08:04,109
evolution since base64 was first defined

1163
01:08:00,930 --> 01:08:07,618
for mine and we probably<font color="#E5E5E5"> haven't</font><font color="#CCCCCC"> been</font>

1164
01:08:04,109 --> 01:08:10,799
tracking<font color="#CCCCCC"> that</font><font color="#E5E5E5"> evolution very well so we</font>

1165
01:08:07,619 --> 01:08:14,790
have four tags defined that have

1166
01:08:10,799 --> 01:08:17,130
<font color="#E5E5E5">something to do with basics default</font><font color="#CCCCCC"> two</font>

1167
01:08:14,790 --> 01:08:21,179
of them<font color="#CCCCCC"> alpha</font><font color="#E5E5E5"> basically for us which is</font>

1168
01:08:17,130 --> 01:08:24,420
<font color="#CCCCCC">what you would</font><font color="#E5E5E5"> use today and two of them</font>

1169
01:08:21,179 --> 01:08:26,640
<font color="#CCCCCC">are for base64 classic and there is no</font>

1170
01:08:24,420 --> 01:08:30,029
known problem with the basics before URL

1171
01:08:26,640 --> 01:08:34,410
once but with basic<font color="#E5E5E5"> C for classic it's a</font>

1172
01:08:30,029 --> 01:08:37,170
little bit more fuzzy<font color="#E5E5E5"> and right now we</font>

1173
01:08:34,410 --> 01:08:39,649
are<font color="#CCCCCC"> very clear in the definition of K 21</font>

1174
01:08:37,170 --> 01:08:42,480
that<font color="#CCCCCC"> basically for URL is being used</font>

1175
01:08:39,649 --> 01:08:46,318
without<font color="#E5E5E5"> padding we are not saying that</font>

1176
01:08:42,479 --> 01:08:52,830
<font color="#E5E5E5">explicitly for</font><font color="#CCCCCC"> tag 33</font><font color="#E5E5E5"> so that may be a</font>

1177
01:08:46,319 --> 01:08:56,910
problem<font color="#CCCCCC"> but then</font><font color="#E5E5E5"> RFC 4646 about that the</font>

1178
01:08:52,830 --> 01:09:01,818
<font color="#CCCCCC">basic C</font><font color="#E5E5E5"> for classic tags 22 and 34 they</font>

1179
01:08:56,910 --> 01:09:05,040
reference 46 48 but 46<font color="#E5E5E5"> 48 only has</font>

1180
01:09:01,819 --> 01:09:09,179
essentially decision criteria<font color="#E5E5E5"> if you are</font>

1181
01:09:05,040 --> 01:09:11,939
using<font color="#CCCCCC"> base 64</font><font color="#E5E5E5"> those are the reasons</font><font color="#CCCCCC"> why</font>

1182
01:09:09,179 --> 01:09:13,739
<font color="#E5E5E5">you would might want to use heading and</font>

1183
01:09:11,939 --> 01:09:20,399
those are the reasons<font color="#CCCCCC"> why</font><font color="#E5E5E5"> you might not</font>

1184
01:09:13,738 --> 01:09:25,559
<font color="#CCCCCC">want to use it yeah so what we have to</font>

1185
01:09:20,399 --> 01:09:27,870
decide first<font color="#E5E5E5"> do we really mean</font><font color="#CCCCCC"> tag 33 to</font>

1186
01:09:25,560 --> 01:09:31,259
also be limited<font color="#CCCCCC"> to basics before</font><font color="#E5E5E5"> you are</font>

1187
01:09:27,870 --> 01:09:34,979
without padding and I'm pretty<font color="#CCCCCC"> sure that</font>

1188
01:09:31,259 --> 01:09:39,029
we do want to do<font color="#E5E5E5"> that but we merge short</font>

1189
01:09:34,979 --> 01:09:43,948
make a conscious<font color="#E5E5E5"> decision</font><font color="#CCCCCC"> and on the</font><font color="#E5E5E5"> the</font>

1190
01:09:39,029 --> 01:09:46,259
<font color="#CCCCCC">base 64 classic side we have to do a few</font>

1191
01:09:43,948 --> 01:09:49,559
<font color="#E5E5E5">no-brainers like saying</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't really</font>

1192
01:09:46,259 --> 01:09:53,189
<font color="#CCCCCC">expect whitespace in there or we</font><font color="#E5E5E5"> don't</font>

1193
01:09:49,560 --> 01:09:56,360
expect line<font color="#CCCCCC"> length limitations which</font>

1194
01:09:53,189 --> 01:09:59,129
some basics before implementations have

1195
01:09:56,360 --> 01:10:03,239
<font color="#E5E5E5">but it's probably not sufficient to</font><font color="#CCCCCC"> just</font>

1196
01:09:59,130 --> 01:10:05,039
say anything<font color="#E5E5E5"> goes in particular tag 21</font>

1197
01:10:03,239 --> 01:10:08,940
and 22

1198
01:10:05,039 --> 01:10:11,400
intended<font color="#E5E5E5"> to be acted</font><font color="#CCCCCC"> upon by a civil to</font>

1199
01:10:08,940 --> 01:10:14,280
<font color="#CCCCCC">jason converter</font><font color="#E5E5E5"> which might be generic</font>

1200
01:10:11,400 --> 01:10:18,329
<font color="#E5E5E5">so it has no idea what the application</font>

1201
01:10:14,280 --> 01:10:21,090
requirements<font color="#CCCCCC"> on that base 64 are</font><font color="#E5E5E5"> so we</font>

1202
01:10:18,329 --> 01:10:23,130
have<font color="#CCCCCC"> to tell this generic converter</font><font color="#E5E5E5"> what</font>

1203
01:10:21,090 --> 01:10:25,920
kind<font color="#E5E5E5"> of basics before it's</font><font color="#CCCCCC"> supposed to</font>

1204
01:10:23,130 --> 01:10:29,010
generate<font color="#E5E5E5"> so the problem is</font><font color="#CCCCCC"> really urgent</font>

1205
01:10:25,920 --> 01:10:30,510
<font color="#CCCCCC">for the</font><font color="#E5E5E5"> tag 22 because people cannot</font>

1206
01:10:29,010 --> 01:10:33,599
implement this right now without<font color="#E5E5E5"> the</font>

1207
01:10:30,510 --> 01:10:35,820
<font color="#E5E5E5">knowledge</font><font color="#CCCCCC"> they have to pick a choice and</font>

1208
01:10:33,599 --> 01:10:39,869
<font color="#E5E5E5">you shouldn't they implemented big</font>

1209
01:10:35,820 --> 01:10:43,650
something<font color="#E5E5E5"> and the second thing is yeah</font>

1210
01:10:39,869 --> 01:10:46,530
<font color="#CCCCCC">tag 33 and 34 just say</font><font color="#E5E5E5"> Jesus here is</font><font color="#CCCCCC"> a</font>

1211
01:10:43,650 --> 01:10:50,518
<font color="#E5E5E5">text string and by the way the semantics</font>

1212
01:10:46,530 --> 01:10:55,380
of<font color="#E5E5E5"> the text string is a 64 a 64 URL</font><font color="#CCCCCC"> or</font>

1213
01:10:50,519 --> 01:10:57,739
basics before<font color="#E5E5E5"> classic now this could be</font>

1214
01:10:55,380 --> 01:11:00,750
interpreted<font color="#CCCCCC"> in a more permissive way</font>

1215
01:10:57,739 --> 01:11:04,199
because the<font color="#CCCCCC"> tank just provides</font>

1216
01:11:00,750 --> 01:11:07,530
information and<font color="#E5E5E5"> we could be happy with</font>

1217
01:11:04,199 --> 01:11:09,509
<font color="#E5E5E5">that information</font><font color="#CCCCCC"> being</font><font color="#E5E5E5"> it's some kind of</font>

1218
01:11:07,530 --> 01:11:13,530
basics<font color="#E5E5E5"> to follow we are not going to</font>

1219
01:11:09,510 --> 01:11:15,539
<font color="#E5E5E5">tell you which one but then it also is a</font>

1220
01:11:13,530 --> 01:11:20,460
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> harder to do a conversion</font>

1221
01:11:15,539 --> 01:11:23,639
conversion through<font color="#CCCCCC"> JSON where the</font><font color="#E5E5E5"> JSON</font>

1222
01:11:20,460 --> 01:11:27,829
data model on the<font color="#E5E5E5"> other side might have</font>

1223
01:11:23,639 --> 01:11:30,989
more strict requirements<font color="#E5E5E5"> on the base64</font>

1224
01:11:27,829 --> 01:11:34,799
<font color="#E5E5E5">so these are two different</font><font color="#CCCCCC"> but</font>

1225
01:11:30,989 --> 01:11:38,339
interrelated<font color="#CCCCCC"> sets of problems and this</font>

1226
01:11:34,800 --> 01:11:40,650
of course<font color="#E5E5E5"> should</font><font color="#CCCCCC"> be guided by how</font><font color="#E5E5E5"> a 64</font>

1227
01:11:38,340 --> 01:11:41,150
classic and URL are being used in

1228
01:11:40,650 --> 01:11:45,089
<font color="#E5E5E5">practice</font>

1229
01:11:41,150 --> 01:11:47,940
now basics before URL is almost always

1230
01:11:45,090 --> 01:11:51,360
<font color="#CCCCCC">used without heading and remember having</font>

1231
01:11:47,940 --> 01:11:52,799
seen once a version with<font color="#CCCCCC"> padding but</font><font color="#E5E5E5"> I'm</font>

1232
01:11:51,360 --> 01:11:55,889
not even<font color="#CCCCCC"> sure that that was standards</font>

1233
01:11:52,800 --> 01:11:59,070
compliant so<font color="#CCCCCC"> into ability might benefit</font>

1234
01:11:55,889 --> 01:12:02,010
from really nailing this one down<font color="#E5E5E5"> and on</font>

1235
01:11:59,070 --> 01:12:04,768
<font color="#E5E5E5">the basics default side it's pretty much</font>

1236
01:12:02,010 --> 01:12:10,050
a bike shed<font color="#E5E5E5"> so it's not really possible</font>

1237
01:12:04,769 --> 01:12:13,530
to decide this well<font color="#E5E5E5"> yeah so we could be</font>

1238
01:12:10,050 --> 01:12:18,750
more explicit<font color="#E5E5E5"> about</font><font color="#CCCCCC"> tag</font><font color="#E5E5E5"> 33</font><font color="#CCCCCC"> we could</font><font color="#E5E5E5"> be</font>

1239
01:12:13,530 --> 01:12:20,340
<font color="#E5E5E5">fine tag 22 and 34</font><font color="#CCCCCC"> as with or without</font>

1240
01:12:18,750 --> 01:12:23,100
we could also go<font color="#CCCCCC"> ahead and define</font>

1241
01:12:20,340 --> 01:12:25,770
additional tags base64 classic<font color="#CCCCCC"> with</font>

1242
01:12:23,100 --> 01:12:27,420
<font color="#CCCCCC">Betty without padding with up to 70</font>

1243
01:12:25,770 --> 01:12:30,990
characters<font color="#E5E5E5"> per line</font>

1244
01:12:27,420 --> 01:12:33,120
probably not<font color="#CCCCCC"> and oh by the way there's</font>

1245
01:12:30,990 --> 01:12:36,360
also a question<font color="#E5E5E5"> that that occasionally</font>

1246
01:12:33,120 --> 01:12:37,860
comes out<font color="#E5E5E5"> about</font><font color="#CCCCCC"> base-16 so you can write</font>

1247
01:12:36,360 --> 01:12:42,139
hex<font color="#CCCCCC"> strings in uppercase and lowercase</font>

1248
01:12:37,860 --> 01:12:46,200
but<font color="#E5E5E5"> that's the side track right now</font><font color="#CCCCCC"> so</font>

1249
01:12:42,140 --> 01:12:50,310
my proposal<font color="#E5E5E5"> would be to</font><font color="#CCCCCC"> actually read 46</font>

1250
01:12:46,200 --> 01:12:52,920
<font color="#CCCCCC">48</font><font color="#E5E5E5"> which tells us heading was designed</font>

1251
01:12:50,310 --> 01:12:56,040
<font color="#CCCCCC">to help with situations in which the</font>

1252
01:12:52,920 --> 01:13:00,450
decoder<font color="#E5E5E5"> isn't quite sure about what the</font>

1253
01:12:56,040 --> 01:13:03,330
length<font color="#E5E5E5"> is</font><font color="#CCCCCC"> in C bar we always know the</font>

1254
01:13:00,450 --> 01:13:06,809
length so it's really the no<font color="#E5E5E5"> padding</font>

1255
01:13:03,330 --> 01:13:10,470
case from 46 48 that we have here now

1256
01:13:06,810 --> 01:13:12,420
<font color="#CCCCCC">again</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> J's inside of a potential</font>

1257
01:13:10,470 --> 01:13:14,730
automatic conversion<font color="#E5E5E5"> might have other</font>

1258
01:13:12,420 --> 01:13:16,980
constraints so maybe the JSON side then

1259
01:13:14,730 --> 01:13:18,269
next converts into a<font color="#CCCCCC"> mind message or</font>

1260
01:13:16,980 --> 01:13:20,959
<font color="#CCCCCC">something like</font><font color="#E5E5E5"> that</font>

1261
01:13:18,270 --> 01:13:23,790
so this is not not a perfect argument

1262
01:13:20,960 --> 01:13:29,070
<font color="#E5E5E5">but it's an argument that might be used</font>

1263
01:13:23,790 --> 01:13:33,960
to<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of that bike shed</font><font color="#CCCCCC"> so my</font><font color="#E5E5E5"> proposal</font>

1264
01:13:29,070 --> 01:13:37,469
would be to<font color="#E5E5E5"> go for no padding with basic</font>

1265
01:13:33,960 --> 01:13:40,590
C for classic<font color="#CCCCCC"> - but add some</font><font color="#E5E5E5"> language</font>

1266
01:13:37,470 --> 01:13:42,630
<font color="#CCCCCC">documentation note that this was only</font>

1267
01:13:40,590 --> 01:13:45,810
<font color="#E5E5E5">edit this clarification was only added</font>

1268
01:13:42,630 --> 01:13:47,100
<font color="#CCCCCC">now and asking implementers to</font><font color="#E5E5E5"> be</font>

1269
01:13:45,810 --> 01:13:53,370
<font color="#E5E5E5">particularly liberal</font>

1270
01:13:47,100 --> 01:14:03,110
about what they<font color="#E5E5E5"> accept with this room</font>

1271
01:13:53,370 --> 01:14:08,700
<font color="#E5E5E5">cares about</font><font color="#CCCCCC"> may</font><font color="#E5E5E5"> 64</font><font color="#CCCCCC"> Sean Leonard</font><font color="#E5E5E5"> so I</font>

1272
01:14:03,110 --> 01:14:10,679
<font color="#E5E5E5">think the core issue</font><font color="#CCCCCC"> here is that</font><font color="#E5E5E5"> you</font>

1273
01:14:08,700 --> 01:14:12,990
want<font color="#E5E5E5"> different implementations to</font><font color="#CCCCCC"> emit</font>

1274
01:14:10,680 --> 01:14:15,000
<font color="#E5E5E5">the</font><font color="#CCCCCC"> same basic the same sequence of</font>

1275
01:14:12,990 --> 01:14:16,590
characters right for<font color="#CCCCCC"> base64 whether its</font>

1276
01:14:15,000 --> 01:14:19,380
<font color="#CCCCCC">upper case lower case</font><font color="#E5E5E5"> padding or</font>

1277
01:14:16,590 --> 01:14:23,610
whatever right so first of<font color="#E5E5E5"> all our</font>

1278
01:14:19,380 --> 01:14:25,020
question<font color="#E5E5E5"> is why</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> is there</font><font color="#CCCCCC"> at light</font>

1279
01:14:23,610 --> 01:14:27,929
and when I say why I mean is there like

1280
01:14:25,020 --> 01:14:29,160
<font color="#E5E5E5">a canonicalization issue where you</font>

1281
01:14:27,930 --> 01:14:31,170
really need<font color="#CCCCCC"> it that way because</font>

1282
01:14:29,160 --> 01:14:32,370
<font color="#E5E5E5">otherwise some</font><font color="#CCCCCC"> digital signature or</font><font color="#E5E5E5"> hash</font>

1283
01:14:31,170 --> 01:14:34,440
is not going to compute

1284
01:14:32,370 --> 01:14:37,349
<font color="#CCCCCC">a</font><font color="#E5E5E5"> or something like that or what is it</font>

1285
01:14:34,440 --> 01:14:39,120
<font color="#E5E5E5">and then the second is there is I'm not</font>

1286
01:14:37,350 --> 01:14:41,040
saying we<font color="#CCCCCC"> should do this but</font><font color="#E5E5E5"> another</font>

1287
01:14:39,120 --> 01:14:43,110
possibility<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> consider all the</font>

1288
01:14:41,040 --> 01:14:45,960
<font color="#CCCCCC">different permutations</font><font color="#E5E5E5"> and you just</font>

1289
01:14:43,110 --> 01:14:49,139
register lots of<font color="#CCCCCC"> hi tag numbers for</font><font color="#E5E5E5"> all</font>

1290
01:14:45,960 --> 01:14:51,630
them so I think<font color="#E5E5E5"> that that's not a good</font>

1291
01:14:49,140 --> 01:14:52,890
<font color="#CCCCCC">idea but that is a way to like deal with</font>

1292
01:14:51,630 --> 01:14:54,660
<font color="#CCCCCC">it and we just</font><font color="#E5E5E5"> pick something</font>

1293
01:14:52,890 --> 01:15:00,240
arbitrarily for the current ones that we

1294
01:14:54,660 --> 01:15:00,660
believe is<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be the most common take</font>

1295
01:15:00,240 --> 01:15:03,570
Taylor

1296
01:15:00,660 --> 01:15:05,340
so I'm partly<font color="#CCCCCC"> appeared to respond to</font>

1297
01:15:03,570 --> 01:15:09,299
Joe's question<font color="#CCCCCC"> does anybody</font><font color="#E5E5E5"> care about</font>

1298
01:15:05,340 --> 01:15:11,100
base64<font color="#CCCCCC"> in the so ocf is one of the</font>

1299
01:15:09,300 --> 01:15:12,720
organizations<font color="#CCCCCC"> that</font><font color="#E5E5E5"> has dependencies on</font>

1300
01:15:11,100 --> 01:15:15,840
<font color="#E5E5E5">Seaborg right and I just</font><font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> to</font>

1301
01:15:12,720 --> 01:15:19,950
<font color="#CCCCCC">report that</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> ocf you to express</font>

1302
01:15:15,840 --> 01:15:23,040
schemas right they use both<font color="#CCCCCC"> rommel and</font>

1303
01:15:19,950 --> 01:15:26,790
<font color="#E5E5E5">json schema and now moving</font><font color="#CCCCCC"> towards</font>

1304
01:15:23,040 --> 01:15:28,590
swagger<font color="#E5E5E5"> and both json schema and swagger</font>

1305
01:15:26,790 --> 01:15:31,500
have the property<font color="#CCCCCC"> of defining</font><font color="#E5E5E5"> a type for</font>

1306
01:15:28,590 --> 01:15:34,290
base64 and not defining a type 4 base64

1307
01:15:31,500 --> 01:15:37,170
URL and so that means<font color="#E5E5E5"> that</font><font color="#CCCCCC"> they use</font>

1308
01:15:34,290 --> 01:15:38,460
base64 URL not because they want<font color="#E5E5E5"> to even</font>

1309
01:15:37,170 --> 01:15:40,800
though they're using<font color="#E5E5E5"> super on the wire</font>

1310
01:15:38,460 --> 01:15:42,960
<font color="#E5E5E5">but because of other external</font>

1311
01:15:40,800 --> 01:15:45,000
dependencies they're using base64 so

1312
01:15:42,960 --> 01:15:46,860
yeah and so the implementation they're

1313
01:15:45,000 --> 01:15:48,450
using is tiny<font color="#E5E5E5"> sea</font><font color="#CCCCCC"> bore</font><font color="#E5E5E5"> and I</font><font color="#CCCCCC"> don't know</font>

1314
01:15:46,860 --> 01:15:49,799
what that<font color="#E5E5E5"> does</font><font color="#CCCCCC"> but offhand I'm guessing</font>

1315
01:15:48,450 --> 01:15:52,620
your proposal would be fine I have to

1316
01:15:49,800 --> 01:15:55,650
check<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> tiny sea bore author but</font>

1317
01:15:52,620 --> 01:15:57,180
<font color="#E5E5E5">yep</font><font color="#CCCCCC"> ocf would care and offhand</font><font color="#E5E5E5"> I'm</font>

1318
01:15:55,650 --> 01:16:01,530
guessing your proposal<font color="#CCCCCC"> would be fine but</font>

1319
01:15:57,180 --> 01:16:07,260
I will have<font color="#E5E5E5"> to check that's a very sad</font>

1320
01:16:01,530 --> 01:16:09,269
<font color="#CCCCCC">thing that you just reported but the</font>

1321
01:16:07,260 --> 01:16:11,820
tiny sea bore offer really laments the

1322
01:16:09,270 --> 01:16:13,470
<font color="#E5E5E5">fact that he can't use</font><font color="#CCCCCC"> the base64 URL</font>

1323
01:16:11,820 --> 01:16:15,870
<font color="#CCCCCC">buts in the tiny</font><font color="#E5E5E5"> zebra implementation</font>

1324
01:16:13,470 --> 01:16:17,580
for<font color="#CCCCCC"> ocf because there's no reason other</font>

1325
01:16:15,870 --> 01:16:20,070
<font color="#E5E5E5">than the specification language having</font>

1326
01:16:17,580 --> 01:16:22,559
to use previously<font color="#CCCCCC"> json schema and now</font>

1327
01:16:20,070 --> 01:16:24,960
<font color="#E5E5E5">swagger</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if we could get both of</font>

1328
01:16:22,560 --> 01:16:28,970
<font color="#E5E5E5">those or should say either of those fix</font>

1329
01:16:24,960 --> 01:16:28,970
the tiny<font color="#CCCCCC"> co-author would be very elated</font>

1330
01:16:30,680 --> 01:16:41,580
so<font color="#CCCCCC"> Matthew Miller um so for</font><font color="#E5E5E5"> me</font>

1331
01:16:39,420 --> 01:16:44,130
<font color="#E5E5E5">the time it's it's base64 URL and not</font>

1332
01:16:41,580 --> 01:16:46,080
base64<font color="#E5E5E5"> where it is</font><font color="#CCCCCC"> basics t4</font><font color="#E5E5E5"> it's</font>

1333
01:16:44,130 --> 01:16:49,290
because of trying<font color="#E5E5E5"> to interoperate with</font>

1334
01:16:46,080 --> 01:16:51,960
existing<font color="#E5E5E5"> tools which will spit out</font>

1335
01:16:49,290 --> 01:16:54,600
whatever they spit out but the parsing

1336
01:16:51,960 --> 01:16:57,480
of that usually they're accepting of

1337
01:16:54,600 --> 01:17:00,780
things is usually pretty permissive in

1338
01:16:57,480 --> 01:17:02,759
the first place<font color="#CCCCCC"> so I think I don't so I</font>

1339
01:17:00,780 --> 01:17:08,519
think it's worth<font color="#CCCCCC"> moving in that</font>

1340
01:17:02,760 --> 01:17:11,280
direction for the the<font color="#E5E5E5"> 30x set of tags</font>

1341
01:17:08,520 --> 01:17:14,910
just let it let it<font color="#E5E5E5"> be pretty flexible</font>

1342
01:17:11,280 --> 01:17:18,300
there<font color="#CCCCCC"> we're but on the</font><font color="#E5E5E5"> other side just</font>

1343
01:17:14,910 --> 01:17:20,670
<font color="#E5E5E5">remove all the white space and the</font>

1344
01:17:18,300 --> 01:17:22,469
safest<font color="#CCCCCC"> I've seen for that is</font><font color="#E5E5E5"> also make</font>

1345
01:17:20,670 --> 01:17:25,530
sure<font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep the padding for base64</font>

1346
01:17:22,469 --> 01:17:28,620
versus base64 URL it's almost never

1347
01:17:25,530 --> 01:17:30,900
padding<font color="#E5E5E5"> but what's it's okay to be</font>

1348
01:17:28,620 --> 01:17:33,030
permissive on what what we take<font color="#E5E5E5"> but on</font>

1349
01:17:30,900 --> 01:17:36,299
what<font color="#E5E5E5"> you're going to generate just set</font>

1350
01:17:33,030 --> 01:17:39,889
some really strong limits<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> one</font>

1351
01:17:36,300 --> 01:17:47,070
vote for permissive on the<font color="#E5E5E5"> the 34 and</font>

1352
01:17:39,890 --> 01:17:49,140
defining<font color="#E5E5E5"> the 22 Joe Hildebrand</font><font color="#CCCCCC"> so I'm at</font>

1353
01:17:47,070 --> 01:17:51,059
all<font color="#E5E5E5"> I'm gonna argue for the complete</font>

1354
01:17:49,140 --> 01:17:53,010
other side<font color="#E5E5E5"> which is to remove all four</font>

1355
01:17:51,060 --> 01:17:54,570
of these tags from<font color="#CCCCCC"> sea</font><font color="#E5E5E5"> bore because I'd</font>

1356
01:17:53,010 --> 01:17:58,739
find them useless<font color="#E5E5E5"> you should just use</font>

1357
01:17:54,570 --> 01:18:00,480
byte strings so that<font color="#CCCCCC"> ship having sailed</font>

1358
01:17:58,739 --> 01:18:03,199
<font color="#CCCCCC">I frankly don't care what</font><font color="#E5E5E5"> goes into</font>

1359
01:18:00,480 --> 01:18:05,250
<font color="#E5E5E5">these because</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> they're useless</font>

1360
01:18:03,199 --> 01:18:07,589
<font color="#E5E5E5">yeah sounds good to me</font>

1361
01:18:05,250 --> 01:18:09,510
they are<font color="#E5E5E5"> register take so they are not</font>

1362
01:18:07,590 --> 01:18:15,150
<font color="#E5E5E5">going</font><font color="#CCCCCC"> away</font><font color="#E5E5E5"> but we could take them away</font>

1363
01:18:09,510 --> 01:18:16,440
from<font color="#CCCCCC"> the standard okay so that's</font><font color="#E5E5E5"> Kirsten</font>

1364
01:18:15,150 --> 01:18:19,320
can<font color="#E5E5E5"> you start</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> thread</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> this one</font>

1365
01:18:16,440 --> 01:18:22,469
remaining<font color="#CCCCCC"> list and</font><font color="#E5E5E5"> people also those who</font>

1366
01:18:19,320 --> 01:18:25,019
have talked here please respond<font color="#E5E5E5"> to the</font>

1367
01:18:22,469 --> 01:18:27,750
thread and we'll take a quick decision

1368
01:18:25,020 --> 01:18:29,310
because it seems<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> is just</font>

1369
01:18:27,750 --> 01:18:36,120
<font color="#E5E5E5">something that needs</font><font color="#CCCCCC"> to be decided on</font>

1370
01:18:29,310 --> 01:18:38,520
and it's<font color="#E5E5E5"> not really controversial so Joe</font>

1371
01:18:36,120 --> 01:18:39,780
already mentioned that<font color="#E5E5E5"> we have to do</font>

1372
01:18:38,520 --> 01:18:42,300
work<font color="#E5E5E5"> on the implementation</font><font color="#CCCCCC"> matrix</font>

1373
01:18:39,780 --> 01:18:45,719
exactly<font color="#E5E5E5"> to put a link on your code on</font>

1374
01:18:42,300 --> 01:18:50,120
the slide<font color="#E5E5E5"> so maybe you can send it again</font>

1375
01:18:45,719 --> 01:18:52,829
<font color="#E5E5E5">to the mailing list</font><font color="#CCCCCC"> so right now again</font>

1376
01:18:50,120 --> 01:18:59,010
<font color="#CCCCCC">Joe has done</font><font color="#E5E5E5"> his homework</font>

1377
01:18:52,829 --> 01:19:03,389
and yeah<font color="#CCCCCC"> is anyone in this room who can</font>

1378
01:18:59,010 --> 01:19:07,349
<font color="#E5E5E5">do their</font><font color="#CCCCCC"> homework on this Jim can do</font>

1379
01:19:03,389 --> 01:19:08,579
that<font color="#E5E5E5"> Carsten</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> sir a season so which</font>

1380
01:19:07,349 --> 01:19:14,909
implementation<font color="#E5E5E5"> would you do that</font>

1381
01:19:08,579 --> 01:19:22,579
homework<font color="#E5E5E5"> for</font><font color="#CCCCCC"> okay Peter's Peter</font><font color="#E5E5E5"> however</font>

1382
01:19:14,909 --> 01:19:30,989
<font color="#CCCCCC">you yes okay so that</font><font color="#E5E5E5"> that said please do</font>

1383
01:19:22,579 --> 01:19:32,460
so I poked myself<font color="#CCCCCC"> and let's do we then</font>

1384
01:19:30,989 --> 01:19:35,848
we<font color="#E5E5E5"> have four so</font><font color="#CCCCCC"> that that's already a</font>

1385
01:19:32,460 --> 01:19:37,710
<font color="#E5E5E5">good thing but if we have more that so</font>

1386
01:19:35,849 --> 01:19:46,860
just<font color="#CCCCCC"> for the record they said that you</font>

1387
01:19:37,710 --> 01:19:49,159
could do<font color="#E5E5E5"> for tiny</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> thank you okay</font>

1388
01:19:46,860 --> 01:19:53,820
that's all I had<font color="#E5E5E5"> on the syllabus</font>

1389
01:19:49,159 --> 01:19:57,119
document<font color="#E5E5E5"> now the the last set of items</font>

1390
01:19:53,820 --> 01:20:02,728
on the agenda is C bar tags<font color="#CCCCCC"> very</font><font color="#E5E5E5"> civil</font>

1391
01:19:57,119 --> 01:20:05,699
<font color="#E5E5E5">tag documents and again</font><font color="#CCCCCC"> our c70 49</font>

1392
01:20:02,729 --> 01:20:09,840
pretty<font color="#CCCCCC"> finds</font><font color="#E5E5E5"> 18 tags maybe it's 14 when</font>

1393
01:20:05,699 --> 01:20:12,478
we're done today<font color="#E5E5E5"> there's stuff in there</font>

1394
01:20:09,840 --> 01:20:14,369
<font color="#CCCCCC">but the point is</font><font color="#E5E5E5"> it's it's easy to</font>

1395
01:20:12,479 --> 01:20:18,929
register<font color="#E5E5E5"> your own</font><font color="#CCCCCC"> sea boat eggs that may</font>

1396
01:20:14,369 --> 01:20:21,239
even<font color="#CCCCCC"> be too easy at the moment</font><font color="#E5E5E5"> and there</font>

1397
01:20:18,929 --> 01:20:23,190
are more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> twenty more tags</font>

1398
01:20:21,239 --> 01:20:27,388
<font color="#E5E5E5">some of them defined by the</font><font color="#CCCCCC"> IGF for</font>

1399
01:20:23,190 --> 01:20:29,699
instance<font color="#CCCCCC"> they're cozy</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> CWT tags</font><font color="#E5E5E5"> but</font>

1400
01:20:27,389 --> 01:20:32,429
people have come in and done tags for

1401
01:20:29,699 --> 01:20:35,268
<font color="#CCCCCC">Perl support for Haskell support</font><font color="#E5E5E5"> I'm</font>

1402
01:20:32,429 --> 01:20:38,249
going<font color="#E5E5E5"> to talk about</font><font color="#CCCCCC"> that in a minute</font>

1403
01:20:35,269 --> 01:20:41,130
<font color="#CCCCCC">tagged language tag string which is</font>

1404
01:20:38,249 --> 01:20:45,599
really an important addition compression

1405
01:20:41,130 --> 01:20:47,849
and so on so just as one example<font color="#CCCCCC"> what's</font>

1406
01:20:45,599 --> 01:20:49,829
going<font color="#E5E5E5"> to be completed very soon is the</font>

1407
01:20:47,849 --> 01:20:52,489
see what we're talking<font color="#E5E5E5"> which is</font>

1408
01:20:49,829 --> 01:20:55,949
essentially the the<font color="#E5E5E5"> JSON web token</font>

1409
01:20:52,489 --> 01:21:00,440
<font color="#E5E5E5">translated to see</font><font color="#CCCCCC"> ball that packages a</font>

1410
01:20:55,949 --> 01:21:04,678
claim set into JSON<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you can</font>

1411
01:21:00,440 --> 01:21:08,789
apply a Cosi<font color="#E5E5E5"> security to that</font>

1412
01:21:04,679 --> 01:21:11,550
in various forms<font color="#E5E5E5"> so here we have tag 61</font>

1413
01:21:08,789 --> 01:21:13,139
assigned<font color="#E5E5E5"> already we didn't even have to</font>

1414
01:21:11,550 --> 01:21:16,650
do an earlier location for that<font color="#E5E5E5"> because</font>

1415
01:21:13,139 --> 01:21:20,039
<font color="#E5E5E5">the the registration policy right now is</font>

1416
01:21:16,650 --> 01:21:22,650
<font color="#E5E5E5">very liberal and the working last</font><font color="#CCCCCC"> call</font>

1417
01:21:20,039 --> 01:21:25,709
for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> CEO we're talking completed in</font>

1418
01:21:22,650 --> 01:21:29,009
the IGF<font color="#E5E5E5"> iceburg group and we'll go into</font>

1419
01:21:25,709 --> 01:21:31,679
<font color="#E5E5E5">ITF last</font><font color="#CCCCCC"> card</font><font color="#E5E5E5"> so that's an example</font><font color="#CCCCCC"> for a</font>

1420
01:21:29,010 --> 01:21:34,889
<font color="#CCCCCC">tag document that we are</font><font color="#E5E5E5"> doing because</font>

1421
01:21:31,679 --> 01:21:38,999
we<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> standard that that</font><font color="#CCCCCC"> actually</font>

1422
01:21:34,889 --> 01:21:42,809
uses<font color="#E5E5E5"> that we also have some</font><font color="#CCCCCC"> other tags</font>

1423
01:21:38,999 --> 01:21:45,840
<font color="#CCCCCC">draft</font><font color="#E5E5E5"> that are not necessarily being</font>

1424
01:21:42,809 --> 01:21:48,179
motivated by specific standards<font color="#E5E5E5"> but are</font>

1425
01:21:45,840 --> 01:21:51,059
being motivated<font color="#E5E5E5"> by wanting to do a</font>

1426
01:21:48,179 --> 01:21:54,239
specification work that references

1427
01:21:51,059 --> 01:21:57,179
certain types of data structures so one

1428
01:21:54,239 --> 01:21:59,928
<font color="#CCCCCC">of this is</font><font color="#E5E5E5"> the OID draft and at some</font>

1429
01:21:57,179 --> 01:22:02,760
point shown it I have to sit down<font color="#E5E5E5"> and</font>

1430
01:21:59,929 --> 01:22:04,170
see<font color="#CCCCCC"> what we actually</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to push</font>

1431
01:22:02,760 --> 01:22:05,999
<font color="#E5E5E5">through here at the moment</font><font color="#CCCCCC"> and what</font>

1432
01:22:04,170 --> 01:22:08,189
maybe should<font color="#CCCCCC"> go into</font><font color="#E5E5E5"> a separate a</font>

1433
01:22:05,999 --> 01:22:10,559
document but<font color="#E5E5E5"> if you have feedback on</font>

1434
01:22:08,189 --> 01:22:13,619
that document<font color="#CCCCCC"> that would be useful but</font>

1435
01:22:10,559 --> 01:22:17,610
<font color="#E5E5E5">I'm not going to talk about it today the</font>

1436
01:22:13,619 --> 01:22:19,348
second one is the array tags draft which

1437
01:22:17,610 --> 01:22:23,009
has been out for<font color="#E5E5E5"> a while</font><font color="#CCCCCC"> and has been</font>

1438
01:22:19,349 --> 01:22:25,019
pretty stable<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a while that is still</font>

1439
01:22:23,010 --> 01:22:27,420
<font color="#CCCCCC">waiting for</font><font color="#E5E5E5"> a working group adoption</font><font color="#CCCCCC"> I</font>

1440
01:22:25,019 --> 01:22:30,749
will talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that in a minute the</font>

1441
01:22:27,420 --> 01:22:34,709
third one<font color="#E5E5E5"> is the time tag which</font><font color="#CCCCCC"> is off</font>

1442
01:22:30,749 --> 01:22:37,469
<font color="#E5E5E5">charter and essentially is is completed</font>

1443
01:22:34,709 --> 01:22:41,309
<font color="#E5E5E5">process wise because the IANA has</font>

1444
01:22:37,469 --> 01:22:45,959
registered in an<font color="#E5E5E5"> FCFS tag for it</font><font color="#CCCCCC"> the</font>

1445
01:22:41,309 --> 01:22:47,729
1001<font color="#E5E5E5"> but maybe we actually want to turn</font>

1446
01:22:45,959 --> 01:22:50,400
this into<font color="#CCCCCC"> an</font><font color="#E5E5E5"> RFC and I'd like to</font>

1447
01:22:47,729 --> 01:22:52,579
understand what<font color="#E5E5E5"> this working group when</font>

1448
01:22:50,400 --> 01:22:56,518
it<font color="#CCCCCC"> has completed its current</font><font color="#E5E5E5"> charter</font>

1449
01:22:52,579 --> 01:23:01,619
<font color="#CCCCCC">wants</font><font color="#E5E5E5"> to do with us that's the care or</font>

1450
01:22:56,519 --> 01:23:03,479
<font color="#E5E5E5">not then we have the the template tag</font>

1451
01:23:01,619 --> 01:23:06,209
but that's really<font color="#E5E5E5"> something that that is</font>

1452
01:23:03,479 --> 01:23:08,429
<font color="#E5E5E5">over</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> LP</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> and not year so maybe</font>

1453
01:23:06,209 --> 01:23:10,110
<font color="#E5E5E5">this should be any other group of tanks</font>

1454
01:23:08,429 --> 01:23:13,289
motivated by standardization activities

1455
01:23:10,110 --> 01:23:15,869
<font color="#CCCCCC">and then maybe at some point we</font><font color="#E5E5E5"> may want</font>

1456
01:23:13,289 --> 01:23:18,240
to do a<font color="#E5E5E5"> useful tags document because</font>

1457
01:23:15,869 --> 01:23:21,389
some of those registered

1458
01:23:18,240 --> 01:23:22,980
eggs are actually very useful<font color="#E5E5E5"> and it</font>

1459
01:23:21,390 --> 01:23:25,950
would be good to collect their

1460
01:23:22,980 --> 01:23:28,469
specifications into<font color="#E5E5E5"> an RFC so people</font>

1461
01:23:25,950 --> 01:23:30,809
have an easier<font color="#E5E5E5"> way</font><font color="#CCCCCC"> of referencing</font><font color="#E5E5E5"> those</font>

1462
01:23:28,470 --> 01:23:33,480
and we don't have down<font color="#E5E5E5"> refs for document</font>

1463
01:23:30,810 --> 01:23:35,460
<font color="#E5E5E5">that use that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that useful check</font>

1464
01:23:33,480 --> 01:23:38,459
document<font color="#CCCCCC"> actually could swallow the time</font>

1465
01:23:35,460 --> 01:23:43,350
<font color="#CCCCCC">tag as well if we</font><font color="#E5E5E5"> consider that useful</font>

1466
01:23:38,460 --> 01:23:47,160
<font color="#E5E5E5">so that's one way of handling this is</font>

1467
01:23:43,350 --> 01:23:51,870
about<font color="#E5E5E5"> that okay then let's go into the</font>

1468
01:23:47,160 --> 01:23:55,110
array<font color="#E5E5E5"> tag</font><font color="#CCCCCC"> that is currently in version o</font>

1469
01:23:51,870 --> 01:23:57,980
<font color="#E5E5E5">six but they haven't</font><font color="#CCCCCC"> been many technical</font>

1470
01:23:55,110 --> 01:24:02,429
changes<font color="#E5E5E5"> there have been small editorial</font>

1471
01:23:57,980 --> 01:24:08,599
adjustments<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the last draft</font><font color="#E5E5E5"> and this</font>

1472
01:24:02,430 --> 01:24:12,080
is inspired by JavaScript<font color="#CCCCCC"> it defines</font><font color="#E5E5E5"> 24</font>

1473
01:24:08,600 --> 01:24:16,350
contiguous tags in the<font color="#E5E5E5"> two byte space</font>

1474
01:24:12,080 --> 01:24:19,950
<font color="#E5E5E5">and</font><font color="#CCCCCC"> also defines two more tags for other</font>

1475
01:24:16,350 --> 01:24:23,550
homogeneous arrays which is useful<font color="#E5E5E5"> in a</font>

1476
01:24:19,950 --> 01:24:26,280
decoder if you know ahead of<font color="#CCCCCC"> time</font><font color="#E5E5E5"> this</font>

1477
01:24:23,550 --> 01:24:28,470
array of<font color="#E5E5E5"> 4,000 elements you are finding</font>

1478
01:24:26,280 --> 01:24:31,080
is actually homogeneous so you can map

1479
01:24:28,470 --> 01:24:33,630
it to a whatever<font color="#CCCCCC"> genius you have in your</font>

1480
01:24:31,080 --> 01:24:36,269
language and<font color="#E5E5E5"> a tag</font><font color="#CCCCCC"> for multi-dimensional</font>

1481
01:24:33,630 --> 01:24:39,330
<font color="#CCCCCC">array so when you get the the elements</font>

1482
01:24:36,270 --> 01:24:40,770
enumerated<font color="#E5E5E5"> you know how many columns and</font>

1483
01:24:39,330 --> 01:24:42,510
<font color="#CCCCCC">how</font><font color="#E5E5E5"> many rows there</font><font color="#CCCCCC"> are</font>

1484
01:24:40,770 --> 01:24:45,570
so I think these are pretty

1485
01:24:42,510 --> 01:24:52,560
non-controversial<font color="#CCCCCC"> but for those</font><font color="#E5E5E5"> of</font>

1486
01:24:45,570 --> 01:24:55,559
<font color="#E5E5E5">course eating up 24 tags</font><font color="#CCCCCC"> is is</font><font color="#E5E5E5"> maybe a</font>

1487
01:24:52,560 --> 01:24:58,320
lot and eating them out of the<font color="#E5E5E5"> two white</font>

1488
01:24:55,560 --> 01:25:03,090
space is maybe even<font color="#CCCCCC"> more a lot</font>

1489
01:24:58,320 --> 01:25:06,509
we have<font color="#CCCCCC"> 232 there are about 20 taken at</font>

1490
01:25:03,090 --> 01:25:09,390
this point in time but<font color="#E5E5E5"> I mean this is</font>

1491
01:25:06,510 --> 01:25:11,520
about the size of the IP protocol number

1492
01:25:09,390 --> 01:25:15,390
space so we want to be a<font color="#E5E5E5"> little bit</font>

1493
01:25:11,520 --> 01:25:18,780
careful<font color="#E5E5E5"> about that and we have have had</font>

1494
01:25:15,390 --> 01:25:20,790
arguments on both sides<font color="#CCCCCC"> one is it would</font>

1495
01:25:18,780 --> 01:25:24,389
<font color="#CCCCCC">be a waste</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> space because</font><font color="#E5E5E5"> arrays can</font>

1496
01:25:20,790 --> 01:25:27,090
<font color="#CCCCCC">be large and large arrays obviously are</font>

1497
01:25:24,390 --> 01:25:30,210
fine with a<font color="#CCCCCC"> three by check</font><font color="#E5E5E5"> and the other</font>

1498
01:25:27,090 --> 01:25:32,280
argument is no<font color="#E5E5E5"> arrays can also be small</font>

1499
01:25:30,210 --> 01:25:36,450
and<font color="#E5E5E5"> one of the more</font>

1500
01:25:32,280 --> 01:25:40,710
likely usages<font color="#E5E5E5"> of this tank is for an RGB</font>

1501
01:25:36,450 --> 01:25:43,019
<font color="#CCCCCC">value which is</font><font color="#E5E5E5"> three bytes and yeah then</font>

1502
01:25:40,710 --> 01:25:45,930
you'll need<font color="#E5E5E5"> attending a three by tagged</font>

1503
01:25:43,020 --> 01:25:49,070
to a three byte value that that's maybe

1504
01:25:45,930 --> 01:25:53,550
not<font color="#E5E5E5"> so bright what we could do is</font>

1505
01:25:49,070 --> 01:25:57,240
partition those<font color="#E5E5E5"> 24 tags into those that</font>

1506
01:25:53,550 --> 01:26:01,290
are somehow big<font color="#E5E5E5"> and those that somehow</font>

1507
01:25:57,240 --> 01:26:04,830
<font color="#E5E5E5">not so big that's ugly</font><font color="#CCCCCC"> I'd rather spend</font>

1508
01:26:01,290 --> 01:26:07,290
those 24 tags at once<font color="#CCCCCC"> but</font><font color="#E5E5E5"> even more</font>

1509
01:26:04,830 --> 01:26:08,790
importantly I would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> this out</font>

1510
01:26:07,290 --> 01:26:11,910
of<font color="#E5E5E5"> the way</font><font color="#CCCCCC"> for some reason they said</font>

1511
01:26:08,790 --> 01:26:13,860
<font color="#E5E5E5">this has kept us from adopting this</font>

1512
01:26:11,910 --> 01:26:15,990
draft which<font color="#CCCCCC"> is weird because we usually</font>

1513
01:26:13,860 --> 01:26:18,750
<font color="#E5E5E5">end up droughts before we have</font><font color="#CCCCCC"> solved</font>

1514
01:26:15,990 --> 01:26:21,840
all<font color="#CCCCCC"> tanking issues with them so let's</font>

1515
01:26:18,750 --> 01:26:26,730
get this<font color="#E5E5E5"> all</font><font color="#CCCCCC"> over the</font><font color="#E5E5E5"> way Joe Hildebrand</font>

1516
01:26:21,840 --> 01:26:29,370
<font color="#CCCCCC">from the floor we this pattern comes</font><font color="#E5E5E5"> up</font>

1517
01:26:26,730 --> 01:26:32,549
<font color="#E5E5E5">relatively frequently where somebody has</font>

1518
01:26:29,370 --> 01:26:35,190
like one general concept that<font color="#E5E5E5"> they want</font>

1519
01:26:32,550 --> 01:26:37,080
<font color="#E5E5E5">to put</font><font color="#CCCCCC"> into a tag and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> bunch of</font>

1520
01:26:35,190 --> 01:26:39,120
different potential<font color="#E5E5E5"> ways it might be</font>

1521
01:26:37,080 --> 01:26:42,080
used<font color="#E5E5E5"> and one of the ways of dealing with</font>

1522
01:26:39,120 --> 01:26:45,420
that<font color="#CCCCCC"> is you assign a large</font><font color="#E5E5E5"> number of</font>

1523
01:26:42,080 --> 01:26:47,970
these sorts of tags<font color="#E5E5E5"> in order to make</font>

1524
01:26:45,420 --> 01:26:51,090
that<font color="#E5E5E5"> happen</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> possible that we could</font>

1525
01:26:47,970 --> 01:26:56,880
come<font color="#CCCCCC"> up</font><font color="#E5E5E5"> with a pattern for</font><font color="#CCCCCC"> parameterize</font>

1526
01:26:51,090 --> 01:27:02,640
<font color="#E5E5E5">tags effectively where you say here is a</font>

1527
01:26:56,880 --> 01:27:04,050
tag for a to a<font color="#E5E5E5"> to place array where the</font>

1528
01:27:02,640 --> 01:27:06,510
<font color="#E5E5E5">first thing in the array is the</font>

1529
01:27:04,050 --> 01:27:09,000
<font color="#E5E5E5">parameter and the second thing in the</font>

1530
01:27:06,510 --> 01:27:11,940
array is<font color="#CCCCCC"> the actual model that the</font>

1531
01:27:09,000 --> 01:27:14,010
actual thing that<font color="#CCCCCC"> the tag this human for</font>

1532
01:27:11,940 --> 01:27:18,839
instance this is exactly that<font color="#E5E5E5"> better</font>

1533
01:27:14,010 --> 01:27:21,810
<font color="#E5E5E5">yeah exactly</font><font color="#CCCCCC"> and so having that pattern</font>

1534
01:27:18,840 --> 01:27:24,350
<font color="#E5E5E5">more so sort of in our pocket and with a</font>

1535
01:27:21,810 --> 01:27:27,960
name that<font color="#CCCCCC"> we call whatever</font><font color="#E5E5E5"> this you know</font>

1536
01:27:24,350 --> 01:27:30,990
parameterised<font color="#E5E5E5"> tag for instance would</font>

1537
01:27:27,960 --> 01:27:33,180
allow us<font color="#CCCCCC"> to shorthand the discussion and</font>

1538
01:27:30,990 --> 01:27:35,070
then so my next question<font color="#E5E5E5"> here was well</font>

1539
01:27:33,180 --> 01:27:38,580
could<font color="#CCCCCC"> we do a parameterised tag for</font><font color="#E5E5E5"> this</font>

1540
01:27:35,070 --> 01:27:42,330
where we<font color="#CCCCCC"> have one tag specified in which</font>

1541
01:27:38,580 --> 01:27:45,240
case having<font color="#E5E5E5"> one in the one bite range</font>

1542
01:27:42,330 --> 01:27:50,269
even<font color="#E5E5E5"> might be fine</font>

1543
01:27:45,240 --> 01:27:55,440
and then you'd<font color="#CCCCCC"> have another bite</font><font color="#E5E5E5"> for the</font>

1544
01:27:50,270 --> 01:27:58,830
array so total of<font color="#E5E5E5"> two</font><font color="#CCCCCC"> bytes to describe</font>

1545
01:27:55,440 --> 01:28:03,469
the<font color="#E5E5E5"> whole thing three and then</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> one</font>

1546
01:27:58,830 --> 01:28:08,430
for the yes<font color="#E5E5E5"> so a total of three bytes</font>

1547
01:28:03,470 --> 01:28:12,300
<font color="#CCCCCC">for</font><font color="#E5E5E5"> this I don't know if that's too many</font>

1548
01:28:08,430 --> 01:28:16,970
bytes<font color="#CCCCCC"> if that's or is it too complicated</font>

1549
01:28:12,300 --> 01:28:20,400
etc<font color="#E5E5E5"> I do agree that having these set of</font>

1550
01:28:16,970 --> 01:28:27,680
JavaScript<font color="#CCCCCC"> types</font><font color="#E5E5E5"> expressible easily in</font><font color="#CCCCCC"> C</font>

1551
01:28:20,400 --> 01:28:30,929
<font color="#CCCCCC">world would be nice so okay</font><font color="#E5E5E5"> Sean Leonard</font>

1552
01:28:27,680 --> 01:28:34,260
<font color="#CCCCCC">so to continue off of Joe's point</font>

1553
01:28:30,930 --> 01:28:37,670
<font color="#E5E5E5">actually the Seaboard tags</font><font color="#CCCCCC"> OID draft</font>

1554
01:28:34,260 --> 01:28:40,290
<font color="#E5E5E5">actually discusses that premise of</font>

1555
01:28:37,670 --> 01:28:43,170
having stacked or parameterised tags

1556
01:28:40,290 --> 01:28:46,500
where you have a tag which<font color="#CCCCCC"> is small and</font>

1557
01:28:43,170 --> 01:28:48,120
then another identifier next to it which

1558
01:28:46,500 --> 01:28:50,040
could be another tag<font color="#E5E5E5"> because you can't</font>

1559
01:28:48,120 --> 01:28:52,170
in fact stack tags<font color="#E5E5E5"> you know on top of</font>

1560
01:28:50,040 --> 01:28:55,890
tag or an integer<font color="#CCCCCC"> it's worth pointing</font>

1561
01:28:52,170 --> 01:28:59,550
<font color="#E5E5E5">out</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> C bore</font><font color="#E5E5E5"> a tag is really just</font>

1562
01:28:55,890 --> 01:29:01,830
an unsigned<font color="#CCCCCC"> integer with major type six</font>

1563
01:28:59,550 --> 01:29:03,750
I believe instead<font color="#E5E5E5"> of major type zero</font>

1564
01:29:01,830 --> 01:29:05,640
<font color="#CCCCCC">otherwise they're like literally the</font>

1565
01:29:03,750 --> 01:29:07,890
same and the semantics of course are

1566
01:29:05,640 --> 01:29:09,810
that<font color="#E5E5E5"> you can put one thing after it</font>

1567
01:29:07,890 --> 01:29:13,530
which is the thing that's<font color="#E5E5E5"> being also has</font>

1568
01:29:09,810 --> 01:29:15,240
a correct correct yeah that's right

1569
01:29:13,530 --> 01:29:18,179
that's<font color="#E5E5E5"> correct yeah that's the</font>

1570
01:29:15,240 --> 01:29:19,860
difference<font color="#CCCCCC"> with regard to this</font>

1571
01:29:18,180 --> 01:29:21,810
particular<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> I think the draft</font>

1572
01:29:19,860 --> 01:29:23,580
<font color="#E5E5E5">should be adopted and I think all the</font>

1573
01:29:21,810 --> 01:29:24,090
tag<font color="#E5E5E5"> draft should be adopted</font><font color="#CCCCCC"> we just get</font>

1574
01:29:23,580 --> 01:29:29,610
it over<font color="#CCCCCC"> with</font>

1575
01:29:24,090 --> 01:29:32,250
<font color="#CCCCCC">I have</font><font color="#E5E5E5"> I think in Prior meetings</font>

1576
01:29:29,610 --> 01:29:34,530
<font color="#E5E5E5">Joe expressed let's put it in the three</font>

1577
01:29:32,250 --> 01:29:36,420
<font color="#E5E5E5">byte space I basically think for this</font>

1578
01:29:34,530 --> 01:29:39,780
block we should just put in<font color="#CCCCCC"> three bytes</font>

1579
01:29:36,420 --> 01:29:42,930
space and not<font color="#E5E5E5"> use the two byte space</font><font color="#CCCCCC"> but</font>

1580
01:29:39,780 --> 01:29:45,269
the<font color="#CCCCCC"> premise of allocating</font><font color="#E5E5E5"> blocks of tags</font>

1581
01:29:42,930 --> 01:29:47,160
to<font color="#E5E5E5"> take it or exploit mathematical</font>

1582
01:29:45,270 --> 01:29:48,990
properties like the fact that you know

1583
01:29:47,160 --> 01:29:50,430
these are interleaved<font color="#CCCCCC"> is a good thing</font>

1584
01:29:48,990 --> 01:29:52,830
especially<font color="#CCCCCC"> because</font><font color="#E5E5E5"> we are trying</font><font color="#CCCCCC"> to</font>

1585
01:29:50,430 --> 01:29:54,480
<font color="#CCCCCC">optimize for</font><font color="#E5E5E5"> IOT you know types of</font>

1586
01:29:52,830 --> 01:29:57,030
constrained devices<font color="#E5E5E5"> where then this can</font>

1587
01:29:54,480 --> 01:29:58,769
<font color="#E5E5E5">be part of a jump table effectively</font>

1588
01:29:57,030 --> 01:30:01,889
right with one subtract and then

1589
01:29:58,770 --> 01:30:06,000
<font color="#E5E5E5">to</font><font color="#CCCCCC"> wherever you</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> go with regard</font>

1590
01:30:01,890 --> 01:30:08,610
to<font color="#E5E5E5"> the bike shed issue of you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> three</font>

1591
01:30:06,000 --> 01:30:10,680
<font color="#CCCCCC">buy tags to buy tonight if we have if we</font>

1592
01:30:08,610 --> 01:30:13,769
literally have an<font color="#CCCCCC"> RGB value</font><font color="#E5E5E5"> that's three</font>

1593
01:30:10,680 --> 01:30:15,810
bytes we just give<font color="#E5E5E5"> it another tag for</font>

1594
01:30:13,770 --> 01:30:17,820
heaven's sakes<font color="#CCCCCC"> you know like if it's</font>

1595
01:30:15,810 --> 01:30:20,850
gonna be an array of lots and lots of

1596
01:30:17,820 --> 01:30:23,730
<font color="#E5E5E5">RGB values because it is the contents of</font>

1597
01:30:20,850 --> 01:30:25,950
a graphic buffer or whatever from one

1598
01:30:23,730 --> 01:30:27,629
computing device to another<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> gonna</font>

1599
01:30:25,950 --> 01:30:29,160
be a large array so the tags not<font color="#CCCCCC"> gonna</font>

1600
01:30:27,630 --> 01:30:32,130
<font color="#E5E5E5">contribute to</font><font color="#CCCCCC"> it and if it's just one</font>

1601
01:30:29,160 --> 01:30:33,840
just invent some RGB tag you<font color="#E5E5E5"> can put</font>

1602
01:30:32,130 --> 01:30:37,440
<font color="#CCCCCC">into one byte space</font><font color="#E5E5E5"> so two</font><font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> space</font>

1603
01:30:33,840 --> 01:30:40,020
or just just call<font color="#CCCCCC"> it a day you know</font><font color="#E5E5E5"> or</font>

1604
01:30:37,440 --> 01:30:42,299
or<font color="#CCCCCC"> I will point out this is a</font><font color="#E5E5E5"> good point</font>

1605
01:30:40,020 --> 01:30:44,100
to<font color="#CCCCCC"> point out you</font><font color="#E5E5E5"> don't actually have to</font>

1606
01:30:42,300 --> 01:30:46,200
tag anything at all if you're<font color="#E5E5E5"> really</font>

1607
01:30:44,100 --> 01:30:48,330
super space constrained on the<font color="#E5E5E5"> wire or</font>

1608
01:30:46,200 --> 01:30:51,150
whatever just don't tag it just have

1609
01:30:48,330 --> 01:30:53,370
some huge huge array<font color="#CCCCCC"> of integers or</font>

1610
01:30:51,150 --> 01:30:58,559
whatever that gets me<font color="#CCCCCC"> to the issue</font><font color="#E5E5E5"> of</font>

1611
01:30:53,370 --> 01:31:00,480
when should we tag and some of the<font color="#E5E5E5"> oid</font>

1612
01:30:58,560 --> 01:31:01,860
draft which<font color="#CCCCCC"> is admittedly</font><font color="#E5E5E5"> a bit of a</font>

1613
01:31:00,480 --> 01:31:03,719
kitchen<font color="#E5E5E5"> sink</font><font color="#CCCCCC"> does go</font><font color="#E5E5E5"> into those</font>

1614
01:31:01,860 --> 01:31:06,690
<font color="#E5E5E5">philosophical issues right when should</font>

1615
01:31:03,720 --> 01:31:09,960
we tag it<font color="#E5E5E5"> all the problem with things</font>

1616
01:31:06,690 --> 01:31:11,820
prior to<font color="#E5E5E5"> C bore like asn.1 which i'm</font>

1617
01:31:09,960 --> 01:31:14,430
unfortunately<font color="#E5E5E5"> intimately familiar with</font>

1618
01:31:11,820 --> 01:31:16,380
<font color="#E5E5E5">is that there are all these</font><font color="#CCCCCC"> options for</font>

1619
01:31:14,430 --> 01:31:18,150
tagging<font color="#E5E5E5"> you can make tagging explicit</font>

1620
01:31:16,380 --> 01:31:20,880
you can make it implicit you can make it

1621
01:31:18,150 --> 01:31:24,900
automatic<font color="#CCCCCC"> which nobody knows what does</font>

1622
01:31:20,880 --> 01:31:27,360
just the parser does whatever<font color="#E5E5E5"> right and</font>

1623
01:31:24,900 --> 01:31:28,889
you can reassign tags from one universal

1624
01:31:27,360 --> 01:31:31,259
class to another so something<font color="#CCCCCC"> that's</font>

1625
01:31:28,890 --> 01:31:33,060
labeled and a universal integer<font color="#CCCCCC"> maybe</font>

1626
01:31:31,260 --> 01:31:35,690
it's<font color="#E5E5E5"> not an integer maybe it's who knows</font>

1627
01:31:33,060 --> 01:31:38,580
<font color="#E5E5E5">whatever the heck it</font><font color="#CCCCCC"> is I think a real</font>

1628
01:31:35,690 --> 01:31:42,929
advantage<font color="#E5E5E5"> to</font><font color="#CCCCCC"> see bore which is not</font>

1629
01:31:38,580 --> 01:31:45,950
mandated<font color="#CCCCCC"> by RFC</font><font color="#E5E5E5"> 70</font><font color="#CCCCCC"> 49 but comes out</font><font color="#E5E5E5"> of</font>

1630
01:31:42,930 --> 01:31:50,610
it is that we've got this really awesome

1631
01:31:45,950 --> 01:31:52,950
<font color="#E5E5E5">large tag space and one registry where</font>

1632
01:31:50,610 --> 01:31:55,500
once you register<font color="#E5E5E5"> it that's it</font>

1633
01:31:52,950 --> 01:31:58,200
for<font color="#CCCCCC"> all applications</font><font color="#E5E5E5"> and so I'd</font><font color="#CCCCCC"> like to</font>

1634
01:31:55,500 --> 01:31:59,820
<font color="#E5E5E5">propose and volunteer to take some of</font>

1635
01:31:58,200 --> 01:32:02,910
the work I've done<font color="#E5E5E5"> on this and kind of</font>

1636
01:31:59,820 --> 01:32:05,009
develop<font color="#CCCCCC"> a philosophy of Seaboard tagging</font>

1637
01:32:02,910 --> 01:32:08,010
<font color="#E5E5E5">internet draft</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the working group</font>

1638
01:32:05,010 --> 01:32:09,870
<font color="#E5E5E5">look at and adopt so we can all say yeah</font>

1639
01:32:08,010 --> 01:32:12,820
you know<font color="#E5E5E5"> this is how you should</font><font color="#CCCCCC"> use tags</font>

1640
01:32:09,870 --> 01:32:15,050
<font color="#E5E5E5">which mostly is use them explicitly</font>

1641
01:32:12,820 --> 01:32:16,969
but if your application doesn't<font color="#E5E5E5"> need</font>

1642
01:32:15,050 --> 01:32:19,250
them<font color="#CCCCCC"> just</font><font color="#E5E5E5"> don't use tags at all and be</font>

1643
01:32:16,970 --> 01:32:21,620
<font color="#E5E5E5">okay with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and with</font><font color="#CCCCCC"> respect</font><font color="#E5E5E5"> to</font>

1644
01:32:19,250 --> 01:32:24,170
that's good<font color="#E5E5E5"> because if we agree as a</font>

1645
01:32:21,620 --> 01:32:26,030
whole<font color="#E5E5E5"> if we're gonna use tags in a</font>

1646
01:32:24,170 --> 01:32:27,620
<font color="#CCCCCC">specification it's</font><font color="#E5E5E5"> always everything's</font>

1647
01:32:26,030 --> 01:32:29,150
gonna be explicitly tagged necessary it

1648
01:32:27,620 --> 01:32:32,000
<font color="#E5E5E5">is it's gonna be great for debugging</font>

1649
01:32:29,150 --> 01:32:34,610
<font color="#CCCCCC">right cuz you get a Wireshark trace or</font>

1650
01:32:32,000 --> 01:32:36,140
whatever everything<font color="#CCCCCC"> is tagged right and</font>

1651
01:32:34,610 --> 01:32:37,940
they're<font color="#CCCCCC"> not that big</font><font color="#E5E5E5"> just couple of</font>

1652
01:32:36,140 --> 01:32:42,530
bytes but you know<font color="#E5E5E5"> exactly what it is</font>

1653
01:32:37,940 --> 01:32:45,679
<font color="#E5E5E5">it's that weird RGB thing for</font><font color="#CCCCCC"> Commodore</font>

1654
01:32:42,530 --> 01:32:47,389
64<font color="#E5E5E5"> or whatever back in the 80s</font><font color="#CCCCCC"> that's</font>

1655
01:32:45,680 --> 01:32:50,870
what it<font color="#CCCCCC"> is you know exactly what it is</font>

1656
01:32:47,390 --> 01:32:52,460
<font color="#E5E5E5">no big deal it's a four byte tag out and</font>

1657
01:32:50,870 --> 01:32:54,500
there's a billion<font color="#E5E5E5"> other different tags</font>

1658
01:32:52,460 --> 01:33:01,850
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> different numbers we're not</font>

1659
01:32:54,500 --> 01:33:03,020
running out so that's my proposal Joe

1660
01:33:01,850 --> 01:33:04,730
Hildebrand from the floor again<font color="#E5E5E5"> I think</font>

1661
01:33:03,020 --> 01:33:06,650
<font color="#CCCCCC">that</font><font color="#E5E5E5"> that would be a useful discussion</font>

1662
01:33:04,730 --> 01:33:09,259
<font color="#E5E5E5">for us to</font><font color="#CCCCCC"> have and having a draft to</font>

1663
01:33:06,650 --> 01:33:11,330
start from<font color="#CCCCCC"> i/o wherever Shawn went there</font>

1664
01:33:09,260 --> 01:33:14,000
you are<font color="#E5E5E5"> he's standing</font><font color="#CCCCCC"> my blind spot now</font>

1665
01:33:11,330 --> 01:33:15,320
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> sitting my blind spot having a draft</font>

1666
01:33:14,000 --> 01:33:21,130
<font color="#CCCCCC">to start</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> discussion I think would</font>

1667
01:33:15,320 --> 01:33:25,460
<font color="#E5E5E5">be used so coming back to this like if</font>

1668
01:33:21,130 --> 01:33:27,470
so again this is just<font color="#CCCCCC"> me speaking as an</font>

1669
01:33:25,460 --> 01:33:30,710
individual if you moved all this stuff

1670
01:33:27,470 --> 01:33:33,200
into<font color="#E5E5E5"> the three bytes space just to get</font>

1671
01:33:30,710 --> 01:33:35,680
us to the point<font color="#E5E5E5"> where it's adopted and</font>

1672
01:33:33,200 --> 01:33:38,410
then we could have a further<font color="#E5E5E5"> discussion</font>

1673
01:33:35,680 --> 01:33:45,350
<font color="#CCCCCC">that might be the</font><font color="#E5E5E5"> most expedient way</font>

1674
01:33:38,410 --> 01:33:48,500
okay to get past this so I don't<font color="#CCCCCC"> know if</font>

1675
01:33:45,350 --> 01:33:50,870
<font color="#CCCCCC">your from last meeting the point was</font>

1676
01:33:48,500 --> 01:33:54,740
many people<font color="#CCCCCC"> seven people around</font><font color="#E5E5E5"> seven</font>

1677
01:33:50,870 --> 01:33:56,960
people had read the draft<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the thing</font>

1678
01:33:54,740 --> 01:34:02,800
<font color="#CCCCCC">that was missing was</font><font color="#E5E5E5"> reviews and we had</font>

1679
01:33:56,960 --> 01:34:08,840
people volunteer but then<font color="#E5E5E5"> no reviews so</font>

1680
01:34:02,800 --> 01:34:10,970
<font color="#CCCCCC">we need to</font><font color="#E5E5E5"> get these reviews so on the</font>

1681
01:34:08,840 --> 01:34:12,440
philosophical<font color="#CCCCCC"> question of whether you</font>

1682
01:34:10,970 --> 01:34:16,250
<font color="#E5E5E5">want to have a cake with a parameter</font>

1683
01:34:12,440 --> 01:34:18,559
<font color="#CCCCCC">space or use tags with the mathematical</font>

1684
01:34:16,250 --> 01:34:20,990
property as an integer I agree<font color="#CCCCCC"> was shown</font>

1685
01:34:18,560 --> 01:34:23,210
<font color="#E5E5E5">that that's a good pattern</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have we</font>

1686
01:34:20,990 --> 01:34:26,349
<font color="#E5E5E5">have 18 trillion tags so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can do this</font>

1687
01:34:23,210 --> 01:34:29,620
a lot before<font color="#CCCCCC"> we run out</font>

1688
01:34:26,350 --> 01:34:32,770
in the particular<font color="#CCCCCC"> RGB example the tag</font><font color="#E5E5E5"> is</font>

1689
01:34:29,620 --> 01:34:35,559
actually<font color="#E5E5E5"> useful because you would use</font>

1690
01:34:32,770 --> 01:34:38,350
you<font color="#E5E5E5"> and eight if you</font><font color="#CCCCCC"> are in the</font>

1691
01:34:35,560 --> 01:34:41,230
classical RGB space<font color="#E5E5E5"> and you would use</font>

1692
01:34:38,350 --> 01:34:44,560
binary<font color="#CCCCCC"> sixteen if</font><font color="#E5E5E5"> you're using high</font>

1693
01:34:41,230 --> 01:34:46,509
dynamic range<font color="#CCCCCC"> so you actually need the</font>

1694
01:34:44,560 --> 01:34:57,430
tank to decide which of the two cases

1695
01:34:46,510 --> 01:34:59,590
<font color="#CCCCCC">you have good point or at that point</font>

1696
01:34:57,430 --> 01:35:04,150
yeah you<font color="#E5E5E5"> just you could have two tags at</font>

1697
01:34:59,590 --> 01:35:05,920
that point yeah yes<font color="#E5E5E5"> yes but why</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> we</font>

1698
01:35:04,150 --> 01:35:07,660
<font color="#E5E5E5">just provide those</font><font color="#CCCCCC"> 24 for the</font>

1699
01:35:05,920 --> 01:35:16,510
<font color="#E5E5E5">applications that beat this kind of</font>

1700
01:35:07,660 --> 01:35:18,809
thing and be<font color="#E5E5E5"> done</font><font color="#CCCCCC"> with Mike oh he said</font>

1701
01:35:16,510 --> 01:35:21,130
heap like<font color="#E5E5E5"> one tag you can do</font>

1702
01:35:18,810 --> 01:35:26,260
mathematical operations on<font color="#E5E5E5"> like jump</font>

1703
01:35:21,130 --> 01:35:28,060
tables<font color="#E5E5E5"> computation yeah yeah this</font>

1704
01:35:26,260 --> 01:35:29,800
computes on tanks but to be able<font color="#E5E5E5"> to</font>

1705
01:35:28,060 --> 01:35:33,460
<font color="#E5E5E5">compute on text you need several of them</font>

1706
01:35:29,800 --> 01:35:35,950
<font color="#E5E5E5">so I like Joe's suggestion for</font><font color="#CCCCCC"> to turn</font>

1707
01:35:33,460 --> 01:35:38,260
it into<font color="#E5E5E5"> three by tags for a week have it</font>

1708
01:35:35,950 --> 01:35:41,230
adopted and<font color="#E5E5E5"> then do the the actual</font>

1709
01:35:38,260 --> 01:35:45,180
discussion<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> that at least gets us</font>

1710
01:35:41,230 --> 01:35:49,629
past this sort of like philosophical

1711
01:35:45,180 --> 01:35:53,680
question and like advances us<font color="#E5E5E5"> from a</font>

1712
01:35:49,630 --> 01:35:55,270
<font color="#E5E5E5">process perspective and allows this this</font>

1713
01:35:53,680 --> 01:35:56,950
document<font color="#CCCCCC"> that Shawn was talking about</font><font color="#E5E5E5"> to</font>

1714
01:35:55,270 --> 01:36:00,810
get<font color="#E5E5E5"> written as a way for</font><font color="#CCCCCC"> us to explore</font>

1715
01:35:56,950 --> 01:36:04,389
our<font color="#CCCCCC"> feelings a little bit so just is</font>

1716
01:36:00,810 --> 01:36:10,000
<font color="#E5E5E5">just as another data point there are</font><font color="#CCCCCC"> a</font>

1717
01:36:04,390 --> 01:36:12,070
number of<font color="#CCCCCC"> ini registration requests</font>

1718
01:36:10,000 --> 01:36:15,280
lined up right now<font color="#CCCCCC"> that want to go into</font>

1719
01:36:12,070 --> 01:36:18,250
this space so<font color="#CCCCCC"> the</font><font color="#E5E5E5"> space wouldn't be</font>

1720
01:36:15,280 --> 01:36:21,480
available<font color="#E5E5E5"> if</font><font color="#CCCCCC"> we go for those</font>

1721
01:36:18,250 --> 01:36:25,000
registrations just as a data by

1722
01:36:21,480 --> 01:36:26,830
<font color="#CCCCCC">Alexandra here</font><font color="#E5E5E5"> so I really</font><font color="#CCCCCC"> like the idea</font>

1723
01:36:25,000 --> 01:36:28,750
<font color="#E5E5E5">about the document that says you know</font>

1724
01:36:26,830 --> 01:36:30,730
this<font color="#CCCCCC"> is the way we should be you</font><font color="#E5E5E5"> know</font>

1725
01:36:28,750 --> 01:36:33,070
creating tags this is in the way we

1726
01:36:30,730 --> 01:36:35,440
<font color="#CCCCCC">should be using</font><font color="#E5E5E5"> them so if</font><font color="#CCCCCC"> you go with</font>

1727
01:36:33,070 --> 01:36:37,239
this<font color="#E5E5E5"> I'll be willing to to review it</font>

1728
01:36:35,440 --> 01:36:39,940
<font color="#E5E5E5">Orion objects express some opinion so</font>

1729
01:36:37,239 --> 01:36:44,200
<font color="#E5E5E5">thanks if thanks for starting this</font>

1730
01:36:39,940 --> 01:36:46,809
and yeah<font color="#E5E5E5"> about</font><font color="#CCCCCC"> these tags</font><font color="#E5E5E5"> like I mean</font>

1731
01:36:44,200 --> 01:36:49,780
<font color="#E5E5E5">for me a tag is something that like its</font>

1732
01:36:46,810 --> 01:36:50,470
attack you don't attach like semantics

1733
01:36:49,780 --> 01:36:52,269
<font color="#E5E5E5">on it</font>

1734
01:36:50,470 --> 01:36:56,260
it's it's something<font color="#E5E5E5"> that says well the</font>

1735
01:36:52,270 --> 01:36:58,480
thing that<font color="#CCCCCC"> follows is this right</font><font color="#E5E5E5"> so I</font>

1736
01:36:56,260 --> 01:37:00,580
really like the idea<font color="#CCCCCC"> of being able to do</font>

1737
01:36:58,480 --> 01:37:03,129
some mathematical miracles with it and

1738
01:37:00,580 --> 01:37:06,070
do some jump tables or<font color="#CCCCCC"> something but I'm</font>

1739
01:37:03,130 --> 01:37:08,710
not<font color="#CCCCCC"> sure if this attaching semantics to</font>

1740
01:37:06,070 --> 01:37:12,070
the things it's not violating the idea

1741
01:37:08,710 --> 01:37:14,470
about<font color="#CCCCCC"> the tag itself</font><font color="#E5E5E5"> like for me a tag</font>

1742
01:37:12,070 --> 01:37:17,290
is like<font color="#E5E5E5"> it the fact</font><font color="#CCCCCC"> that it's a</font><font color="#E5E5E5"> number</font>

1743
01:37:14,470 --> 01:37:19,390
<font color="#E5E5E5">it it's just like an implementational</font>

1744
01:37:17,290 --> 01:37:22,600
detail<font color="#CCCCCC"> it could have been</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> a big</font>

1745
01:37:19,390 --> 01:37:26,880
string so having these things it could

1746
01:37:22,600 --> 01:37:31,870
could work right<font color="#CCCCCC"> but you know I I'm not</font>

1747
01:37:26,880 --> 01:37:33,430
<font color="#CCCCCC">sure it's it's something</font><font color="#E5E5E5"> we would</font><font color="#CCCCCC"> like</font>

1748
01:37:31,870 --> 01:37:35,980
to start<font color="#E5E5E5"> doing at some point because</font>

1749
01:37:33,430 --> 01:37:37,570
<font color="#E5E5E5">here now we have some you find some neat</font>

1750
01:37:35,980 --> 01:37:39,219
thing to<font color="#E5E5E5"> do with it and then maybe</font>

1751
01:37:37,570 --> 01:37:41,049
<font color="#E5E5E5">tomorrow we find some other new neat</font>

1752
01:37:39,220 --> 01:37:42,970
things<font color="#E5E5E5"> to do with some new tags so</font><font color="#CCCCCC"> we</font>

1753
01:37:41,050 --> 01:37:46,480
say<font color="#E5E5E5"> okay we have</font><font color="#CCCCCC"> some other</font><font color="#E5E5E5"> jump so we</font>

1754
01:37:42,970 --> 01:37:48,880
have starting code to the tags<font color="#E5E5E5"> and and</font>

1755
01:37:46,480 --> 01:37:51,400
you know<font color="#CCCCCC"> we example</font><font color="#E5E5E5"> with the</font><font color="#CCCCCC"> lgb so what</font>

1756
01:37:48,880 --> 01:37:53,440
happens if<font color="#E5E5E5"> okay you have you need</font><font color="#CCCCCC"> to</font>

1757
01:37:51,400 --> 01:37:56,049
make the distinction<font color="#E5E5E5"> between you int and</font>

1758
01:37:53,440 --> 01:37:58,150
<font color="#E5E5E5">binary</font><font color="#CCCCCC"> 16 to make sure that</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> RGB is</font>

1759
01:37:56,050 --> 01:38:00,310
in one<font color="#E5E5E5"> case or the other case like</font>

1760
01:37:58,150 --> 01:38:02,349
dynamic<font color="#E5E5E5"> range or non dynamic range so</font>

1761
01:38:00,310 --> 01:38:04,480
what happens if your application<font color="#E5E5E5"> doesn't</font>

1762
01:38:02,350 --> 01:38:06,910
use use tax<font color="#CCCCCC"> anymore at some point you</font>

1763
01:38:04,480 --> 01:38:08,650
say<font color="#E5E5E5"> okay well in some other case</font><font color="#CCCCCC"> you</font>

1764
01:38:06,910 --> 01:38:11,290
want to<font color="#E5E5E5"> be super efficient so you don't</font>

1765
01:38:08,650 --> 01:38:12,700
or we have some parser that<font color="#E5E5E5"> says okay</font>

1766
01:38:11,290 --> 01:38:18,750
I'm<font color="#E5E5E5"> just going</font><font color="#CCCCCC"> to strip tags because</font><font color="#E5E5E5"> you</font>

1767
01:38:12,700 --> 01:38:21,099
know it's not this is all you<font color="#E5E5E5"> can do and</font>

1768
01:38:18,750 --> 01:38:23,110
if we<font color="#E5E5E5"> define it this way</font>

1769
01:38:21,100 --> 01:38:25,780
then a specific<font color="#CCCCCC"> data model can just say</font>

1770
01:38:23,110 --> 01:38:28,900
<font color="#E5E5E5">an RGB value</font><font color="#CCCCCC"> as three numbers and and</font>

1771
01:38:25,780 --> 01:38:30,309
use one<font color="#CCCCCC"> of the tags that</font><font color="#E5E5E5"> is being</font>

1772
01:38:28,900 --> 01:38:33,219
<font color="#E5E5E5">defined here I mean they are still in a</font>

1773
01:38:30,310 --> 01:38:35,800
table<font color="#E5E5E5"> right so you don't have to do the</font>

1774
01:38:33,220 --> 01:38:36,730
arithmetic with<font color="#E5E5E5"> the tag if you only care</font>

1775
01:38:35,800 --> 01:38:38,980
for<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> of them</font>

1776
01:38:36,730 --> 01:38:40,959
it's<font color="#E5E5E5"> just expedient for</font><font color="#CCCCCC"> a generic</font>

1777
01:38:38,980 --> 01:38:43,480
encoder and decoder implementation to be

1778
01:38:40,960 --> 01:38:46,270
able<font color="#E5E5E5"> to use the table</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you would say</font>

1779
01:38:43,480 --> 01:38:48,400
<font color="#E5E5E5">an RGB</font><font color="#CCCCCC"> value is either a</font><font color="#E5E5E5"> triple of you</font>

1780
01:38:46,270 --> 01:38:50,760
and<font color="#CCCCCC"> eight-hour trouble</font><font color="#E5E5E5"> of binary</font><font color="#CCCCCC"> 16 and</font>

1781
01:38:48,400 --> 01:38:50,759
then<font color="#E5E5E5"> your</font>

1782
01:38:52,679 --> 01:38:57,550
<font color="#E5E5E5">okay I mean that's a support point from</font>

1783
01:38:55,630 --> 01:38:59,500
the one that wasn't<font color="#E5E5E5"> but what I say is</font>

1784
01:38:57,550 --> 01:39:01,420
that<font color="#E5E5E5"> in this case if you remove the tag</font>

1785
01:38:59,500 --> 01:39:03,280
then you cannot purse<font color="#E5E5E5"> anymore</font>

1786
01:39:01,420 --> 01:39:06,790
<font color="#E5E5E5">the you cannot make this distinction</font>

1787
01:39:03,280 --> 01:39:10,030
between<font color="#E5E5E5"> is it dynamic</font><font color="#CCCCCC"> range</font><font color="#E5E5E5"> or is it</font>

1788
01:39:06,790 --> 01:39:12,190
something fixed<font color="#E5E5E5"> so just just saying that</font>

1789
01:39:10,030 --> 01:39:13,900
<font color="#E5E5E5">that but that</font><font color="#CCCCCC"> that was like a minor</font>

1790
01:39:12,190 --> 01:39:15,519
point<font color="#CCCCCC"> that the other point was might be</font>

1791
01:39:13,900 --> 01:39:18,250
more important that<font color="#E5E5E5"> do we want to make</font>

1792
01:39:15,520 --> 01:39:24,610
this explicit like mathematical thing on

1793
01:39:18,250 --> 01:39:27,250
top of the text<font color="#CCCCCC"> Sean</font><font color="#E5E5E5"> Leonard</font><font color="#CCCCCC"> I think the</font>

1794
01:39:24,610 --> 01:39:29,440
general<font color="#E5E5E5"> design pattern is not specific</font>

1795
01:39:27,250 --> 01:39:33,489
to<font color="#E5E5E5"> seaboard</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> tags</font><font color="#CCCCCC"> it's just when you</font>

1796
01:39:29,440 --> 01:39:36,190
<font color="#CCCCCC">have when</font><font color="#E5E5E5"> you're computing right you can</font>

1797
01:39:33,489 --> 01:39:38,888
have<font color="#E5E5E5"> a huge if else</font><font color="#CCCCCC"> sequence of</font>

1798
01:39:36,190 --> 01:39:41,500
statements<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is not necessarily it</font>

1799
01:39:38,889 --> 01:39:44,100
may or may not<font color="#E5E5E5"> be parallelizable but if</font>

1800
01:39:41,500 --> 01:39:47,830
you can have<font color="#E5E5E5"> a large range of contiguous</font>

1801
01:39:44,100 --> 01:39:49,900
choices and then perform a single

1802
01:39:47,830 --> 01:39:54,280
<font color="#CCCCCC">mathematical operation and jump to the</font>

1803
01:39:49,900 --> 01:39:58,089
<font color="#E5E5E5">right place</font><font color="#CCCCCC"> or or you know compute that</font>

1804
01:39:54,280 --> 01:40:00,639
then things go a lot faster<font color="#CCCCCC"> and</font><font color="#E5E5E5"> can be</font>

1805
01:39:58,090 --> 01:40:03,610
done<font color="#E5E5E5"> in much less code so it's</font><font color="#CCCCCC"> just like</font>

1806
01:40:00,639 --> 01:40:06,760
a<font color="#CCCCCC"> general pattern</font><font color="#E5E5E5"> of allocating the same</font>

1807
01:40:03,610 --> 01:40:08,759
numbers in the<font color="#E5E5E5"> same block that do</font>

1808
01:40:06,760 --> 01:40:12,040
<font color="#E5E5E5">similar things</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the same reason that</font>

1809
01:40:08,760 --> 01:40:15,699
ASCII<font color="#E5E5E5"> 0 to 9 just happened to be</font><font color="#CCCCCC"> in the</font>

1810
01:40:12,040 --> 01:40:18,100
<font color="#E5E5E5">hex pattern 30 to 39 because if you'd</font>

1811
01:40:15,699 --> 01:40:19,780
subtract 48 from them then you actually

1812
01:40:18,100 --> 01:40:24,190
<font color="#E5E5E5">have the number in binary it's the same</font>

1813
01:40:19,780 --> 01:40:26,710
exact premise<font color="#CCCCCC"> okay but we seem to have</font>

1814
01:40:24,190 --> 01:40:28,330
consensus<font color="#E5E5E5"> on going for 3 by tags for the</font>

1815
01:40:26,710 --> 01:40:30,460
next version<font color="#CCCCCC"> during the eruption call</font>

1816
01:40:28,330 --> 01:40:32,320
and then we<font color="#E5E5E5"> complaining loudly to</font><font color="#CCCCCC"> the</font>

1817
01:40:30,460 --> 01:40:38,199
mailing<font color="#E5E5E5"> list that that should be</font><font color="#CCCCCC"> two by</font>

1818
01:40:32,320 --> 01:40:39,909
<font color="#E5E5E5">text</font><font color="#CCCCCC"> not quickly about the time tag just</font>

1819
01:40:38,199 --> 01:40:42,790
note now we have finished<font color="#CCCCCC"> with the</font>

1820
01:40:39,909 --> 01:40:44,040
chartered items and the time tag is

1821
01:40:42,790 --> 01:40:46,540
unchartered

1822
01:40:44,040 --> 01:40:48,940
thank you<font color="#E5E5E5"> yeah I already said that</font><font color="#CCCCCC"> but</font>

1823
01:40:46,540 --> 01:40:53,380
<font color="#E5E5E5">it's good to say that</font><font color="#CCCCCC"> again so the the</font>

1824
01:40:48,940 --> 01:40:55,869
time tag<font color="#E5E5E5"> came up because the the Haskell</font>

1825
01:40:53,380 --> 01:40:58,420
program programming language<font color="#CCCCCC"> has pretty</font>

1826
01:40:55,869 --> 01:41:01,089
much adopted<font color="#CCCCCC"> SIBO as their preferred</font>

1827
01:40:58,420 --> 01:41:06,139
binary serialization<font color="#E5E5E5"> technique and in</font>

1828
01:41:01,090 --> 01:41:09,920
Haskell<font color="#E5E5E5"> times are based on microseconds</font>

1829
01:41:06,139 --> 01:41:12,079
so<font color="#E5E5E5"> he needed a way</font><font color="#CCCCCC"> to represent</font><font color="#E5E5E5"> the time</font>

1830
01:41:09,920 --> 01:41:14,539
based on<font color="#E5E5E5"> time a seconds and the Afghan</font>

1831
01:41:12,079 --> 01:41:16,639
people wanted<font color="#CCCCCC"> to have tags</font><font color="#E5E5E5"> so they</font>

1832
01:41:14,539 --> 01:41:19,759
really<font color="#CCCCCC"> can see in the serialized data</font>

1833
01:41:16,639 --> 01:41:21,260
this<font color="#E5E5E5"> is a time and not</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> in any array</font>

1834
01:41:19,760 --> 01:41:25,670
of data or something<font color="#E5E5E5"> like that</font>

1835
01:41:21,260 --> 01:41:27,619
so they wrote up a document<font color="#CCCCCC"> and I helped</font>

1836
01:41:25,670 --> 01:41:33,579
<font color="#CCCCCC">them a little bit with with completing</font>

1837
01:41:27,619 --> 01:41:37,610
that and<font color="#E5E5E5"> they got</font><font color="#CCCCCC"> FCSS registration now</font>

1838
01:41:33,579 --> 01:41:42,650
<font color="#CCCCCC">we could document</font><font color="#E5E5E5"> this tag</font><font color="#CCCCCC"> if we</font><font color="#E5E5E5"> think</font>

1839
01:41:37,610 --> 01:41:45,139
it is<font color="#E5E5E5"> useful</font><font color="#CCCCCC"> we it's not only</font><font color="#E5E5E5"> useful for</font>

1840
01:41:42,650 --> 01:41:47,629
<font color="#E5E5E5">microseconds also be used for</font>

1841
01:41:45,139 --> 01:41:50,300
nanoseconds microseconds or milliseconds

1842
01:41:47,630 --> 01:41:54,559
so all the cases when you don't want<font color="#E5E5E5"> to</font>

1843
01:41:50,300 --> 01:41:57,739
do the computation<font color="#E5E5E5"> of converting one of</font>

1844
01:41:54,559 --> 01:42:00,889
these pairs of seconds and<font color="#E5E5E5"> a subunit of</font>

1845
01:41:57,739 --> 01:42:04,129
seconds into a single number it's<font color="#E5E5E5"> useful</font>

1846
01:42:00,889 --> 01:42:08,719
to to have this kind of a check so it's

1847
01:42:04,130 --> 01:42:11,030
pretty general<font color="#E5E5E5"> in its usage</font><font color="#CCCCCC"> and we could</font>

1848
01:42:08,719 --> 01:42:13,309
also go ahead<font color="#E5E5E5"> and add more</font><font color="#CCCCCC"> of what what</font>

1849
01:42:11,030 --> 01:42:17,000
was in the<font color="#E5E5E5"> original proposal for the</font>

1850
01:42:13,309 --> 01:42:19,130
time check<font color="#E5E5E5"> to it so there's there</font><font color="#CCCCCC"> were</font>

1851
01:42:17,000 --> 01:42:21,500
things<font color="#E5E5E5"> were things like time zones and</font>

1852
01:42:19,130 --> 01:42:24,289
other information<font color="#CCCCCC"> that could draw in</font>

1853
01:42:21,500 --> 01:42:28,250
<font color="#E5E5E5">there could not so these are all other</font>

1854
01:42:24,289 --> 01:42:31,280
ways of taking it forward<font color="#E5E5E5"> and I would</font>

1855
01:42:28,250 --> 01:42:33,019
<font color="#E5E5E5">just like to know should I talk</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

1856
01:42:31,280 --> 01:42:35,809
independent submissions<font color="#E5E5E5"> editor tomorrow</font>

1857
01:42:33,019 --> 01:42:38,360
and say this becomes<font color="#E5E5E5"> an RFC on its own</font>

1858
01:42:35,809 --> 01:42:39,800
if yes<font color="#E5E5E5"> he will come through</font><font color="#CCCCCC"> the work</font>

1859
01:42:38,360 --> 01:42:42,558
<font color="#E5E5E5">group and ask assist the run around</font>

1860
01:42:39,800 --> 01:42:44,380
through working<font color="#E5E5E5"> group and so the</font><font color="#CCCCCC"> work</font>

1861
01:42:42,559 --> 01:42:47,989
<font color="#E5E5E5">will have to have an opinion on that</font>

1862
01:42:44,380 --> 01:42:50,119
<font color="#E5E5E5">or should I wait for</font><font color="#CCCCCC"> the work group to</font>

1863
01:42:47,989 --> 01:42:52,820
complete its current<font color="#CCCCCC"> charter and then</font>

1864
01:42:50,119 --> 01:42:54,920
work on making<font color="#E5E5E5"> this</font><font color="#CCCCCC"> workgroup</font><font color="#E5E5E5"> document</font>

1865
01:42:52,820 --> 01:42:58,360
or including it in a set of useful tags

1866
01:42:54,920 --> 01:43:04,000
or but but<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> working work on it I</font>

1867
01:42:58,360 --> 01:43:04,000
would<font color="#CCCCCC"> like the opinion</font><font color="#E5E5E5"> of our ad on this</font>

1868
01:43:12,420 --> 01:43:19,200
I think I mostly have an<font color="#E5E5E5"> opinion whether</font>

1869
01:43:17,190 --> 01:43:23,070
you<font color="#E5E5E5"> should complete other work items</font>

1870
01:43:19,200 --> 01:43:24,870
before<font color="#E5E5E5"> this one but I have I have an</font>

1871
01:43:23,070 --> 01:43:26,940
opinion<font color="#E5E5E5"> upon whether you should complete</font>

1872
01:43:24,870 --> 01:43:29,820
other work items<font color="#E5E5E5"> first before accepting</font>

1873
01:43:26,940 --> 01:43:33,419
<font color="#E5E5E5">this but other than that you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> I</font>

1874
01:43:29,820 --> 01:43:35,549
think<font color="#E5E5E5"> it's very fair question if you</font>

1875
01:43:33,420 --> 01:43:37,680
want<font color="#CCCCCC"> to pole</font><font color="#E5E5E5"> hold the room to see how</font>

1876
01:43:35,550 --> 01:43:46,170
<font color="#CCCCCC">many people are</font><font color="#E5E5E5"> interested</font><font color="#CCCCCC"> in working</font><font color="#E5E5E5"> on</font>

1877
01:43:37,680 --> 01:43:53,400
this which can inform<font color="#CCCCCC"> Karstens decision</font>

1878
01:43:46,170 --> 01:43:56,550
<font color="#E5E5E5">you know which way</font><font color="#CCCCCC"> to take it okay Sean</font>

1879
01:43:53,400 --> 01:43:59,429
Leonard<font color="#E5E5E5"> so I think this is fine as a</font>

1880
01:43:56,550 --> 01:44:01,050
working group item with<font color="#CCCCCC"> Alexie's caveat</font>

1881
01:43:59,430 --> 01:44:03,870
that we<font color="#E5E5E5"> should work on the first things</font>

1882
01:44:01,050 --> 01:44:06,570
first that we are chartered for an

1883
01:44:03,870 --> 01:44:09,080
interesting bookkeeping question which I

1884
01:44:06,570 --> 01:44:12,599
believe is completely bike shedding is

1885
01:44:09,080 --> 01:44:15,510
do you want to allocate<font color="#E5E5E5"> a block for</font>

1886
01:44:12,600 --> 01:44:18,510
bookkeeping<font color="#E5E5E5"> purposes of seaboard tags</font>

1887
01:44:15,510 --> 01:44:21,870
<font color="#E5E5E5">just a time stuff so we just say one</font>

1888
01:44:18,510 --> 01:44:23,520
thousand one<font color="#CCCCCC"> to one eleven hundred</font><font color="#E5E5E5"> or</font>

1889
01:44:21,870 --> 01:44:25,590
<font color="#E5E5E5">whatever is all the time tags will ever</font>

1890
01:44:23,520 --> 01:44:28,500
need and then<font color="#E5E5E5"> somebody we have a</font><font color="#CCCCCC"> block</font>

1891
01:44:25,590 --> 01:44:31,560
of free tags for times periods and

1892
01:44:28,500 --> 01:44:33,690
<font color="#E5E5E5">intervals</font><font color="#CCCCCC"> of three</font><font color="#E5E5E5"> tags or of like three</font>

1893
01:44:31,560 --> 01:44:36,780
<font color="#E5E5E5">okay okay but I'm saying like we know we</font>

1894
01:44:33,690 --> 01:44:38,280
just just reserved 300 tags or just say

1895
01:44:36,780 --> 01:44:40,259
Oh somebody's<font color="#CCCCCC"> coming up with some weird</font>

1896
01:44:38,280 --> 01:44:42,179
time<font color="#CCCCCC"> format</font><font color="#E5E5E5"> or do we</font><font color="#CCCCCC"> have a block of</font>

1897
01:44:40,260 --> 01:44:44,070
tags for Haskell things<font color="#E5E5E5"> right so it's</font>

1898
01:44:42,180 --> 01:44:46,650
like<font color="#E5E5E5"> programming language specific like</font>

1899
01:44:44,070 --> 01:44:47,969
all the<font color="#CCCCCC"> pearl stuff is in 3000</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 4000</font>

1900
01:44:46,650 --> 01:44:50,370
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Haskell so I'll support that</font><font color="#E5E5E5"> but</font>

1901
01:44:47,970 --> 01:44:52,470
I<font color="#E5E5E5"> don't know I don't</font><font color="#CCCCCC"> know I can</font><font color="#E5E5E5"> include</font>

1902
01:44:50,370 --> 01:44:54,900
something<font color="#E5E5E5"> along that in the dock in the</font>

1903
01:44:52,470 --> 01:44:58,920
<font color="#E5E5E5">document philosophy of tagging if that's</font>

1904
01:44:54,900 --> 01:45:01,349
important<font color="#E5E5E5"> to people</font><font color="#CCCCCC"> I just see this</font><font color="#E5E5E5"> as</font>

1905
01:44:58,920 --> 01:45:04,290
<font color="#CCCCCC">there's an opportunity</font><font color="#E5E5E5"> to look at what</font>

1906
01:45:01,350 --> 01:45:07,910
<font color="#CCCCCC">are</font><font color="#E5E5E5"> the underlying things that motivate</font>

1907
01:45:04,290 --> 01:45:10,260
<font color="#E5E5E5">sea bores you know advantages over other</font>

1908
01:45:07,910 --> 01:45:13,050
serialization formats<font color="#E5E5E5"> and one of those</font>

1909
01:45:10,260 --> 01:45:15,000
is<font color="#E5E5E5"> efficiency of the encoders and</font>

1910
01:45:13,050 --> 01:45:17,910
decoders I believe that's<font color="#E5E5E5"> explicitly</font>

1911
01:45:15,000 --> 01:45:20,430
mentioned<font color="#CCCCCC"> in 1749 as the motivating case</font>

1912
01:45:17,910 --> 01:45:23,550
<font color="#E5E5E5">so to</font><font color="#CCCCCC"> the extent that we are</font><font color="#E5E5E5"> trying to</font>

1913
01:45:20,430 --> 01:45:24,120
<font color="#E5E5E5">support IOT devices resource constrained</font>

1914
01:45:23,550 --> 01:45:26,290
devices

1915
01:45:24,120 --> 01:45:29,380
you know devices that want to just

1916
01:45:26,290 --> 01:45:33,100
work<font color="#E5E5E5"> very</font><font color="#CCCCCC"> fast on data hopefully</font><font color="#E5E5E5"> that</font>

1917
01:45:29,380 --> 01:45:37,810
will inform whether we have a large

1918
01:45:33,100 --> 01:45:39,820
number<font color="#E5E5E5"> of time tags or whatever</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font>

1919
01:45:37,810 --> 01:45:42,760
the encoding<font color="#E5E5E5"> and decoding of these</font>

1920
01:45:39,820 --> 01:45:44,940
things faster for devices and easier<font color="#E5E5E5"> for</font>

1921
01:45:42,760 --> 01:45:49,720
devices<font color="#CCCCCC"> than and protocols that actually</font>

1922
01:45:44,940 --> 01:45:51,879
need to do them so yeah<font color="#E5E5E5"> with that said</font>

1923
01:45:49,720 --> 01:45:53,890
if we delve any more into time tags<font color="#E5E5E5"> I</font>

1924
01:45:51,880 --> 01:45:56,800
really want some subject matter<font color="#E5E5E5"> expert</font>

1925
01:45:53,890 --> 01:45:58,870
on this thing<font color="#E5E5E5"> because I'm not an</font><font color="#CCCCCC"> expert</font>

1926
01:45:56,800 --> 01:46:00,250
in time we got<font color="#CCCCCC"> an NTP</font><font color="#E5E5E5"> working group</font>

1927
01:45:58,870 --> 01:46:02,080
there's<font color="#E5E5E5"> gotta be some people</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> there</font>

1928
01:46:00,250 --> 01:46:04,750
who<font color="#E5E5E5"> know all about this time stuff much</font>

1929
01:46:02,080 --> 01:46:07,210
better than me<font color="#E5E5E5"> yeah it helped</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> Joe</font>

1930
01:46:04,750 --> 01:46:09,340
touch was writing a document<font color="#E5E5E5"> about times</font>

1931
01:46:07,210 --> 01:46:11,440
<font color="#E5E5E5">at the time that</font><font color="#CCCCCC"> they dressed this was</font>

1932
01:46:09,340 --> 01:46:19,870
discussed so this document<font color="#CCCCCC"> contains</font><font color="#E5E5E5"> a</font>

1933
01:46:11,440 --> 01:46:22,389
<font color="#CCCCCC">reference to it or touches okay so maybe</font>

1934
01:46:19,870 --> 01:46:27,130
we<font color="#E5E5E5"> can can take the power of who's</font>

1935
01:46:22,390 --> 01:46:31,300
actually interested<font color="#CCCCCC"> in working</font><font color="#E5E5E5"> on using</font>

1936
01:46:27,130 --> 01:46:36,730
<font color="#CCCCCC">this who will</font><font color="#E5E5E5"> be interested in this</font>

1937
01:46:31,300 --> 01:46:38,950
topic here to be clear who wants us to

1938
01:46:36,730 --> 01:46:41,080
<font color="#CCCCCC">do after we're done with our chartered</font>

1939
01:46:38,950 --> 01:46:43,720
items<font color="#CCCCCC"> who wants us</font><font color="#E5E5E5"> to do more work on</font>

1940
01:46:41,080 --> 01:46:46,690
time formats including this one<font color="#CCCCCC"> perhaps</font>

1941
01:46:43,720 --> 01:46:49,360
just time formats<font color="#E5E5E5"> in general let's start</font>

1942
01:46:46,690 --> 01:46:52,000
with that hands<font color="#E5E5E5"> who think we want to</font>

1943
01:46:49,360 --> 01:46:56,349
<font color="#E5E5E5">work on that ear</font><font color="#CCCCCC"> Hank you have to raise</font>

1944
01:46:52,000 --> 01:47:01,750
<font color="#E5E5E5">a nom if you have one</font><font color="#CCCCCC"> to spare</font><font color="#E5E5E5"> one all</font>

1945
01:46:56,350 --> 01:47:07,210
right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's two people</font><font color="#E5E5E5"> including one</font>

1946
01:47:01,750 --> 01:47:12,550
<font color="#CCCCCC">of Hanks eyebrows all right three</font><font color="#E5E5E5"> all</font>

1947
01:47:07,210 --> 01:47:14,560
right that's I<font color="#CCCCCC"> think useful</font><font color="#E5E5E5"> but not I</font>

1948
01:47:12,550 --> 01:47:17,650
<font color="#E5E5E5">mean this is not a this</font><font color="#CCCCCC"> is more of a</font>

1949
01:47:14,560 --> 01:47:19,960
strawpoll kind of question not<font color="#E5E5E5"> a don't</font>

1950
01:47:17,650 --> 01:47:21,809
work on this but I didn't see a large

1951
01:47:19,960 --> 01:47:24,790
thundering herd of folk<font color="#CCCCCC"> who were</font>

1952
01:47:21,810 --> 01:47:26,710
interested<font color="#E5E5E5"> in doing</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> there yes yeah</font>

1953
01:47:24,790 --> 01:47:28,210
I<font color="#CCCCCC"> think it's sort of an indicative but</font>

1954
01:47:26,710 --> 01:47:29,650
it doesn't have<font color="#E5E5E5"> to be binding you can</font>

1955
01:47:28,210 --> 01:47:34,930
ask the question once<font color="#E5E5E5"> you actually do</font>

1956
01:47:29,650 --> 01:47:37,719
those other things<font color="#CCCCCC"> right</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> do</font>

1957
01:47:34,930 --> 01:47:39,699
anything else there<font color="#E5E5E5"> all right</font>

1958
01:47:37,719 --> 01:47:42,430
<font color="#E5E5E5">all right so let's talk</font><font color="#CCCCCC"> just a little</font>

1959
01:47:39,699 --> 01:47:46,799
<font color="#E5E5E5">bit more about CD DL while we've</font><font color="#CCCCCC"> got</font>

1960
01:47:42,430 --> 01:47:50,260
<font color="#E5E5E5">everybody here</font><font color="#CCCCCC"> does anybody think that</font>

1961
01:47:46,800 --> 01:47:54,910
<font color="#CCCCCC">we ought to do a ton more work on CD DL</font>

1962
01:47:50,260 --> 01:47:56,590
before we publish<font color="#CCCCCC"> rev 0 any</font><font color="#E5E5E5"> any hands of</font>

1963
01:47:54,910 --> 01:47:59,489
people<font color="#CCCCCC"> who</font><font color="#E5E5E5"> think that we ought to do add</font>

1964
01:47:56,590 --> 01:48:04,600
a bunch<font color="#CCCCCC"> more stuff before</font><font color="#E5E5E5"> we publish</font>

1965
01:47:59,489 --> 01:48:05,949
<font color="#E5E5E5">there's a quizzical look I see do people</font>

1966
01:48:04,600 --> 01:48:07,330
think we ought I'm going to ask the

1967
01:48:05,949 --> 01:48:08,919
opposite question do<font color="#CCCCCC"> people think</font><font color="#E5E5E5"> that</font>

1968
01:48:07,330 --> 01:48:10,180
we're quite<font color="#E5E5E5"> pretty close we should go</font>

1969
01:48:08,920 --> 01:48:12,880
into<font color="#E5E5E5"> polish mode and just get the thing</font>

1970
01:48:10,180 --> 01:48:15,640
<font color="#E5E5E5">out the door like raise your hands if</font>

1971
01:48:12,880 --> 01:48:19,510
you<font color="#CCCCCC"> think we're there alright</font><font color="#E5E5E5"> so I see</font><font color="#CCCCCC"> a</font>

1972
01:48:15,640 --> 01:48:20,530
good<font color="#CCCCCC"> number of hands for that I see some</font>

1973
01:48:19,510 --> 01:48:30,420
people<font color="#E5E5E5"> raising two hands</font>

1974
01:48:20,530 --> 01:48:30,420
<font color="#CCCCCC">Alexia is going to clarify</font><font color="#E5E5E5"> I'm going to</font>

1975
01:48:30,480 --> 01:48:36,599
start<font color="#E5E5E5"> applying slight pressure as Area</font>

1976
01:48:34,000 --> 01:48:41,260
<font color="#E5E5E5">Director</font><font color="#CCCCCC"> I'm any document that</font>

1977
01:48:36,600 --> 01:48:43,120
<font color="#E5E5E5">normatively reference</font><font color="#CCCCCC"> EDD L</font><font color="#E5E5E5"> is not going</font>

1978
01:48:41,260 --> 01:48:46,840
to you know<font color="#E5E5E5"> it either has</font><font color="#CCCCCC"> to have a</font>

1979
01:48:43,120 --> 01:48:49,769
<font color="#E5E5E5">normative reference or it will have a</font>

1980
01:48:46,840 --> 01:48:55,510
discussing it so<font color="#E5E5E5"> okay that's so I think</font>

1981
01:48:49,770 --> 01:48:59,710
<font color="#CCCCCC">we should I do want to point out one of</font>

1982
01:48:55,510 --> 01:49:03,460
the other<font color="#CCCCCC"> ADEs asked me about</font><font color="#E5E5E5"> using CD</font>

1983
01:48:59,710 --> 01:49:08,280
DL for JSON and he hadn't seen appendix

1984
01:49:03,460 --> 01:49:10,210
<font color="#CCCCCC">e</font><font color="#E5E5E5"> out of the the current CD DL spec so</font>

1985
01:49:08,280 --> 01:49:12,009
<font color="#CCCCCC">alexei if you could</font><font color="#E5E5E5"> just keep</font><font color="#CCCCCC"> your eyes</font>

1986
01:49:10,210 --> 01:49:14,410
<font color="#E5E5E5">open for people questioning if they're</font>

1987
01:49:12,010 --> 01:49:18,370
allowed to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> CD</font><font color="#E5E5E5"> DL for JSON whatever</font>

1988
01:49:14,410 --> 01:49:24,519
allowed means there is that<font color="#E5E5E5"> appendix in</font>

1989
01:49:18,370 --> 01:49:28,269
the current CD DL<font color="#CCCCCC"> draft well he does now</font>

1990
01:49:24,520 --> 01:49:30,489
because<font color="#CCCCCC"> I sent him the link</font><font color="#E5E5E5"> so if</font>

1991
01:49:28,270 --> 01:49:33,160
there's anybody else that<font color="#CCCCCC"> wants</font><font color="#E5E5E5"> us to do</font>

1992
01:49:30,489 --> 01:49:36,519
more work there before we're done enough

1993
01:49:33,160 --> 01:49:38,290
and<font color="#E5E5E5"> I</font><font color="#CCCCCC"> used air quotes there</font><font color="#E5E5E5"> before we're</font>

1994
01:49:36,520 --> 01:49:40,719
<font color="#E5E5E5">done enough for people to use this in</font>

1995
01:49:38,290 --> 01:49:43,630
their JSON specs<font color="#E5E5E5"> then the iesg should</font>

1996
01:49:40,719 --> 01:49:45,940
let us<font color="#CCCCCC"> know</font><font color="#E5E5E5"> because if we're going</font><font color="#CCCCCC"> to</font>

1997
01:49:43,630 --> 01:49:48,100
move into quick<font color="#CCCCCC"> polish and get it out</font>

1998
01:49:45,940 --> 01:49:50,809
mode we're not going<font color="#E5E5E5"> to add anything</font>

1999
01:49:48,100 --> 01:49:55,980
else<font color="#E5E5E5"> other than what's in that</font>

2000
01:49:50,810 --> 01:49:58,200
in that appendix<font color="#E5E5E5"> talking about JSON so</font>

2001
01:49:55,980 --> 01:50:00,059
this is a hey if you would mind

2002
01:49:58,200 --> 01:50:01,460
<font color="#E5E5E5">mentioning this the rest of the iesg you</font>

2003
01:50:00,060 --> 01:50:09,890
see if anybody else<font color="#E5E5E5"> has an issue</font>

2004
01:50:01,460 --> 01:50:09,890
<font color="#E5E5E5">otherwise we're</font><font color="#CCCCCC"> just gonna plow ahead</font><font color="#E5E5E5"> so</font>

2005
01:50:09,980 --> 01:50:16,349
<font color="#E5E5E5">you know no no what I'm saying is that I</font>

2006
01:50:13,560 --> 01:50:20,220
<font color="#CCCCCC">think we believe and I'm that Appendix</font>

2007
01:50:16,350 --> 01:50:25,020
<font color="#CCCCCC">II is enough to motivate using</font><font color="#E5E5E5"> CD DL for</font>

2008
01:50:20,220 --> 01:50:26,910
describing JSON protocols if the iesg

2009
01:50:25,020 --> 01:50:29,190
wants something<font color="#E5E5E5"> more than that</font>

2010
01:50:26,910 --> 01:50:31,080
<font color="#E5E5E5">appendix</font><font color="#CCCCCC"> say something</font><font color="#E5E5E5"> that feels a</font>

2011
01:50:29,190 --> 01:50:33,000
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more normative</font><font color="#E5E5E5"> or a separate</font>

2012
01:50:31,080 --> 01:50:35,010
<font color="#CCCCCC">doc that describes how to do it or</font>

2013
01:50:33,000 --> 01:50:38,490
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> like that we would like them to</font>

2014
01:50:35,010 --> 01:50:40,110
<font color="#CCCCCC">speak up immediately and give us a</font>

2015
01:50:38,490 --> 01:50:42,300
little bit<font color="#E5E5E5"> more direction other than</font>

2016
01:50:40,110 --> 01:50:43,440
<font color="#E5E5E5">without hearing anything like that we're</font>

2017
01:50:42,300 --> 01:50:45,480
going to move<font color="#E5E5E5"> ahead</font>

2018
01:50:43,440 --> 01:50:51,690
assuming that<font color="#E5E5E5"> appendix</font><font color="#CCCCCC"> B is roughly</font>

2019
01:50:45,480 --> 01:50:53,280
exactly what's needed<font color="#E5E5E5"> okay sorry because</font>

2020
01:50:51,690 --> 01:50:56,070
I haven't<font color="#E5E5E5"> actually looked at</font><font color="#CCCCCC"> Appendix C</font>

2021
01:50:53,280 --> 01:50:57,420
I<font color="#E5E5E5"> cannot provide a useful personal</font>

2022
01:50:56,070 --> 01:50:59,040
comment and I'm not asking<font color="#CCCCCC"> for you to</font>

2023
01:50:57,420 --> 01:51:00,870
tell<font color="#E5E5E5"> me the</font><font color="#CCCCCC"> answer to</font><font color="#E5E5E5"> this right</font><font color="#CCCCCC"> now I'm</font>

2024
01:50:59,040 --> 01:51:04,920
asking<font color="#E5E5E5"> if over the</font><font color="#CCCCCC"> course of</font><font color="#E5E5E5"> maybe</font>

2025
01:51:00,870 --> 01:51:06,300
tomorrow and yes<font color="#CCCCCC"> or at</font><font color="#E5E5E5"> least point</font>

2026
01:51:04,920 --> 01:51:07,710
<font color="#CCCCCC">people to it and tell them that that's</font>

2027
01:51:06,300 --> 01:51:09,450
what it's<font color="#E5E5E5"> going to be unless they tell</font>

2028
01:51:07,710 --> 01:51:11,210
us something different<font color="#CCCCCC"> okay did</font><font color="#E5E5E5"> there's</font>

2029
01:51:09,450 --> 01:51:13,610
already one I receive public that

2030
01:51:11,210 --> 01:51:16,610
<font color="#CCCCCC">reference is City dairy</font><font color="#E5E5E5"> for Jason</font>

2031
01:51:13,610 --> 01:51:16,610
informatively

2032
01:51:21,450 --> 01:51:31,570
<font color="#CCCCCC">- be careful when you give me</font><font color="#E5E5E5"> action</font>

2033
01:51:23,560 --> 01:51:33,820
items I give<font color="#E5E5E5"> them back</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> anybody</font>

2034
01:51:31,570 --> 01:51:35,889
<font color="#CCCCCC">have any other concerns like if we're</font>

2035
01:51:33,820 --> 01:51:37,509
gonna put<font color="#E5E5E5"> CD DL on this short</font><font color="#CCCCCC"> timeframe</font>

2036
01:51:35,890 --> 01:51:39,310
which sounds<font color="#E5E5E5"> like we really</font><font color="#CCCCCC"> ought to at</font>

2037
01:51:37,510 --> 01:51:42,210
this point<font color="#E5E5E5"> does anybody else have any</font>

2038
01:51:39,310 --> 01:51:44,440
<font color="#CCCCCC">other concerns</font><font color="#E5E5E5"> or potential roadblocks</font>

2039
01:51:42,210 --> 01:51:49,360
<font color="#CCCCCC">things that we ought to aggressively</font>

2040
01:51:44,440 --> 01:51:50,919
pull out<font color="#E5E5E5"> in order to fix things</font><font color="#CCCCCC"> so</font>

2041
01:51:49,360 --> 01:51:53,769
<font color="#E5E5E5">they're like the regular expression</font>

2042
01:51:50,920 --> 01:51:55,720
thing like I would maybe put<font color="#CCCCCC"> that on the</font>

2043
01:51:53,770 --> 01:51:58,090
bubble if we don't have a normative

2044
01:51:55,720 --> 01:52:00,340
<font color="#E5E5E5">reference to point to for regular</font>

2045
01:51:58,090 --> 01:52:06,940
expressions<font color="#CCCCCC"> are</font><font color="#E5E5E5"> you are you okay with</font>

2046
01:52:00,340 --> 01:52:08,740
that Sean Sean Leonard so yeah so my

2047
01:52:06,940 --> 01:52:11,379
whole thing<font color="#CCCCCC"> is I don't want us to</font><font color="#E5E5E5"> be</font>

2048
01:52:08,740 --> 01:52:14,800
committed to<font color="#E5E5E5"> all these bucketload of</font>

2049
01:52:11,380 --> 01:52:16,870
features that<font color="#E5E5E5"> we may want to change you</font>

2050
01:52:14,800 --> 01:52:21,220
<font color="#CCCCCC">know or improve or whatever</font><font color="#E5E5E5"> later on so</font>

2051
01:52:16,870 --> 01:52:23,050
I so you know I am resigned to the fact

2052
01:52:21,220 --> 01:52:25,990
that we got to publish something<font color="#E5E5E5"> right</font>

2053
01:52:23,050 --> 01:52:27,370
and we<font color="#E5E5E5"> got to</font><font color="#CCCCCC"> keep people's work going</font>

2054
01:52:25,990 --> 01:52:28,900
there's no not really question that but

2055
01:52:27,370 --> 01:52:31,720
we need also<font color="#E5E5E5"> be clear it's version zero</font>

2056
01:52:28,900 --> 01:52:34,059
<font color="#E5E5E5">and we're trying to you</font><font color="#CCCCCC"> know add these</font>

2057
01:52:31,720 --> 01:52:37,570
<font color="#CCCCCC">useful things I mean all that I dunno</font>

2058
01:52:34,060 --> 01:52:39,970
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> gonna have to</font><font color="#CCCCCC"> basically start</font><font color="#E5E5E5"> that</font>

2059
01:52:37,570 --> 01:52:40,420
as soon as we get the first one<font color="#E5E5E5"> in the</font>

2060
01:52:39,970 --> 01:52:44,320
can

2061
01:52:40,420 --> 01:52:46,150
yeah<font color="#E5E5E5"> and so like the the mode here</font>

2062
01:52:44,320 --> 01:52:47,500
should be if we can't come to consensus

2063
01:52:46,150 --> 01:52:49,990
quickly on exactly what it ought to<font color="#E5E5E5"> look</font>

2064
01:52:47,500 --> 01:52:51,880
<font color="#CCCCCC">like if we don't</font><font color="#E5E5E5"> have a reference</font><font color="#CCCCCC"> for</font>

2065
01:52:49,990 --> 01:52:53,290
<font color="#E5E5E5">the thing for whatever reason will rip</font>

2066
01:52:51,880 --> 01:52:56,650
the feature out and we'll<font color="#E5E5E5"> put it back in</font>

2067
01:52:53,290 --> 01:52:58,870
and<font color="#E5E5E5"> this right right</font><font color="#CCCCCC"> and yeah like</font><font color="#E5E5E5"> I</font>

2068
01:52:56,650 --> 01:53:00,969
<font color="#CCCCCC">said my I have concerns about like I</font>

2069
01:52:58,870 --> 01:53:01,990
said the control operators in general

2070
01:53:00,970 --> 01:53:04,300
<font color="#CCCCCC">not because they're not</font><font color="#E5E5E5"> useful but</font>

2071
01:53:01,990 --> 01:53:06,580
because like is somebody<font color="#E5E5E5"> really using</font>

2072
01:53:04,300 --> 01:53:08,980
these now<font color="#CCCCCC"> and well I</font><font color="#E5E5E5"> know like</font><font color="#CCCCCC"> give us a</font>

2073
01:53:06,580 --> 01:53:10,840
few weeks<font color="#E5E5E5"> or</font><font color="#CCCCCC"> the virgin ones like give</font>

2074
01:53:08,980 --> 01:53:13,120
it<font color="#E5E5E5"> all out you</font><font color="#CCCCCC"> know Hank can you quickly</font>

2075
01:53:10,840 --> 01:53:14,470
comment with a certain<font color="#E5E5E5"> three</font><font color="#CCCCCC"> little is a</font>

2076
01:53:13,120 --> 01:53:22,960
<font color="#CCCCCC">ssin would have a problem with ray X</font>

2077
01:53:14,470 --> 01:53:27,700
being taking out do that later

2078
01:53:22,960 --> 01:53:30,310
yeah so do that<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the so all</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> saying</font>

2079
01:53:27,700 --> 01:53:34,150
is that<font color="#CCCCCC"> if we</font><font color="#E5E5E5"> can't come to consensus on</font>

2080
01:53:30,310 --> 01:53:35,770
<font color="#E5E5E5">these things quickly now I'm also now</font>

2081
01:53:34,150 --> 01:53:37,420
that we understand sort of what polish

2082
01:53:35,770 --> 01:53:38,800
mode would mean I'm also<font color="#CCCCCC"> okay with</font>

2083
01:53:37,420 --> 01:53:42,640
somebody going<font color="#E5E5E5"> up to Mike and saying</font><font color="#CCCCCC"> you</font>

2084
01:53:38,800 --> 01:53:45,210
<font color="#CCCCCC">know we're</font><font color="#E5E5E5"> not quite ready</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that I'm</font>

2085
01:53:42,640 --> 01:53:50,140
<font color="#E5E5E5">not seeing anybody running to the mic</font>

2086
01:53:45,210 --> 01:54:00,750
<font color="#E5E5E5">all right so this is</font><font color="#CCCCCC"> just hey we need to</font>

2087
01:53:50,140 --> 01:54:04,690
be able<font color="#CCCCCC"> to finish okay chabi relay from</font>

2088
01:54:00,750 --> 01:54:07,239
<font color="#E5E5E5">kuru Maeda or some variation</font><font color="#CCCCCC"> of that</font>

2089
01:54:04,690 --> 01:54:09,610
<font color="#CCCCCC">pronunciation reg X is good at finding</font>

2090
01:54:07,239 --> 01:54:12,159
something matches<font color="#E5E5E5"> however bad at</font>

2091
01:54:09,610 --> 01:54:14,580
detecting<font color="#E5E5E5"> something does not match bad</font>

2092
01:54:12,159 --> 01:54:17,440
<font color="#CCCCCC">Greg X patterns might lead to a dos</font>

2093
01:54:14,580 --> 01:54:22,330
relying on reg x4 validator could be

2094
01:54:17,440 --> 01:54:26,860
risky please send that<font color="#E5E5E5"> to the list</font><font color="#CCCCCC"> that</font>

2095
01:54:22,330 --> 01:54:28,420
is an entire separate discussion<font color="#CCCCCC"> one of</font>

2096
01:54:26,860 --> 01:54:30,820
<font color="#CCCCCC">the</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> Shawn that we probably ought</font>

2097
01:54:28,420 --> 01:54:35,020
to<font color="#E5E5E5"> put in the dock that</font><font color="#CCCCCC"> you proposed is</font>

2098
01:54:30,820 --> 01:54:36,849
a talk<font color="#E5E5E5"> about how much these sorts of</font>

2099
01:54:35,020 --> 01:54:41,020
things<font color="#CCCCCC"> should be used</font><font color="#E5E5E5"> for generating</font>

2100
01:54:36,850 --> 01:54:45,100
validators at<font color="#E5E5E5"> runtime versus being used</font>

2101
01:54:41,020 --> 01:54:48,400
as a mechanism of documenting what the

2102
01:54:45,100 --> 01:54:50,710
<font color="#CCCCCC">validators ought to do and I</font><font color="#E5E5E5"> know that</font>

2103
01:54:48,400 --> 01:54:52,870
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is a place where</font><font color="#E5E5E5"> timbre</font><font color="#CCCCCC"> and</font>

2104
01:54:50,710 --> 01:54:54,670
<font color="#CCCCCC">particulars had very strong opinions in</font>

2105
01:54:52,870 --> 01:54:56,920
the past and the way<font color="#E5E5E5"> that we got to</font>

2106
01:54:54,670 --> 01:54:58,679
being able<font color="#E5E5E5"> to do some of the</font><font color="#CCCCCC"> CDL workers</font>

2107
01:54:56,920 --> 01:55:00,580
was talking about<font color="#E5E5E5"> it in</font><font color="#CCCCCC"> terms of</font>

2108
01:54:58,679 --> 01:55:02,409
<font color="#E5E5E5">describing what the</font><font color="#CCCCCC"> interoperability</font>

2109
01:55:00,580 --> 01:55:05,650
properties should be and<font color="#E5E5E5"> not about</font>

2110
01:55:02,409 --> 01:55:07,780
generating<font color="#E5E5E5"> values right so Joe this is</font>

2111
01:55:05,650 --> 01:55:09,460
Sean Leonard<font color="#E5E5E5"> so just a question</font><font color="#CCCCCC"> are you</font>

2112
01:55:07,780 --> 01:55:13,030
referring to the philosophy of tagging

2113
01:55:09,460 --> 01:55:15,130
document that was oh<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> okay yeah</font>

2114
01:55:13,030 --> 01:55:20,860
because<font color="#E5E5E5"> that your comment was addressed</font>

2115
01:55:15,130 --> 01:55:23,050
more to<font color="#E5E5E5"> CD DL right</font><font color="#CCCCCC"> okay in my mind it</font>

2116
01:55:20,860 --> 01:55:25,589
<font color="#CCCCCC">was one big philosophy document okay no</font>

2117
01:55:23,050 --> 01:55:28,390
<font color="#CCCCCC">problem yeah</font><font color="#E5E5E5"> cuz I'm I am of the view</font>

2118
01:55:25,590 --> 01:55:31,360
<font color="#CCCCCC">opinion that it's more descriptive than</font>

2119
01:55:28,390 --> 01:55:33,550
about validation<font color="#CCCCCC"> I'm also I</font><font color="#E5E5E5"> recognized</font>

2120
01:55:31,360 --> 01:55:37,960
<font color="#E5E5E5">people will</font><font color="#CCCCCC"> wanna validate things</font><font color="#E5E5E5"> but</font>

2121
01:55:33,550 --> 01:55:39,699
the point is to<font color="#E5E5E5"> describe and we want to</font>

2122
01:55:37,960 --> 01:55:43,000
<font color="#CCCCCC">emphasize that and one</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> to do that is</font>

2123
01:55:39,699 --> 01:55:45,580
to kind<font color="#E5E5E5"> of put</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> focus on the fact</font>

2124
01:55:43,000 --> 01:55:47,460
that if stuff doesn't<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> have data</font>

2125
01:55:45,580 --> 01:55:51,660
that<font color="#E5E5E5"> doesn't conform</font>

2126
01:55:47,460 --> 01:55:54,450
<font color="#E5E5E5">to the CD</font><font color="#CCCCCC"> DL</font><font color="#E5E5E5"> it's not necessarily a</font>

2127
01:55:51,660 --> 01:55:56,550
fatal error<font color="#CCCCCC"> okay this is not XML land</font>

2128
01:55:54,450 --> 01:55:58,980
<font color="#CCCCCC">it's more like markdown land</font><font color="#E5E5E5"> if it</font>

2129
01:55:56,550 --> 01:56:03,900
doesn't quite fit that's<font color="#E5E5E5"> okay</font>

2130
01:55:58,980 --> 01:56:06,780
still work with it<font color="#E5E5E5"> that's not the way we</font>

2131
01:56:03,900 --> 01:56:08,879
use this use<font color="#CCCCCC"> this for defining protocols</font>

2132
01:56:06,780 --> 01:56:09,269
<font color="#E5E5E5">and if the protocol is</font><font color="#CCCCCC"> not being</font>

2133
01:56:08,880 --> 01:56:12,780
followed

2134
01:56:09,270 --> 01:56:14,480
then you have an error<font color="#E5E5E5"> all right so</font>

2135
01:56:12,780 --> 01:56:16,739
let's not bogged down in<font color="#CCCCCC"> that particular</font>

2136
01:56:14,480 --> 01:56:18,870
philosophical<font color="#CCCCCC"> whole there are different</font>

2137
01:56:16,739 --> 01:56:21,150
ways<font color="#E5E5E5"> of using app so the</font><font color="#CCCCCC"> sean's way is</font>

2138
01:56:18,870 --> 01:56:24,180
also<font color="#E5E5E5"> another way of</font><font color="#CCCCCC"> using it</font><font color="#E5E5E5"> all right</font>

2139
01:56:21,150 --> 01:56:27,210
<font color="#E5E5E5">let me go back</font><font color="#CCCCCC"> to what I was</font><font color="#E5E5E5"> talking</font>

2140
01:56:24,180 --> 01:56:29,940
<font color="#CCCCCC">about with CD DL so let's make sure</font><font color="#E5E5E5"> that</font>

2141
01:56:27,210 --> 01:56:32,219
<font color="#CCCCCC">anything that</font><font color="#E5E5E5"> we don't have pretty good</font>

2142
01:56:29,940 --> 01:56:33,989
consensus on or<font color="#CCCCCC"> anything that we don't</font>

2143
01:56:32,219 --> 01:56:36,210
<font color="#E5E5E5">have good</font><font color="#CCCCCC"> references or or anything</font>

2144
01:56:33,989 --> 01:56:38,400
that's<font color="#E5E5E5"> not done we can start ripping</font>

2145
01:56:36,210 --> 01:56:40,110
that<font color="#E5E5E5"> stuff out get a version</font><font color="#CCCCCC"> zero out</font>

2146
01:56:38,400 --> 01:56:42,750
the door so that other people can refer

2147
01:56:40,110 --> 01:56:44,309
<font color="#CCCCCC">to</font><font color="#E5E5E5"> it that should be a pretty high</font>

2148
01:56:42,750 --> 01:56:49,980
priority<font color="#CCCCCC"> for</font><font color="#E5E5E5"> us over the next several</font>

2149
01:56:44,310 --> 01:56:51,540
weeks<font color="#E5E5E5"> and I don't see me but</font><font color="#CCCCCC"> this I see</font>

2150
01:56:49,980 --> 01:56:53,639
some nodding heads I don't see anybody

2151
01:56:51,540 --> 01:56:55,680
shaking their head<font color="#CCCCCC"> I don't see anybody</font>

2152
01:56:53,640 --> 01:56:58,110
jumping up to<font color="#E5E5E5"> the mic all right go ahead</font>

2153
01:56:55,680 --> 01:56:59,820
<font color="#E5E5E5">jump up</font><font color="#CCCCCC"> to the right as Dave Robin</font><font color="#E5E5E5"> I was</font>

2154
01:56:58,110 --> 01:57:01,019
just gonna say with the exception<font color="#CCCCCC"> of reg</font>

2155
01:56:59,820 --> 01:57:02,610
X which gets into<font color="#CCCCCC"> the whole</font>

2156
01:57:01,020 --> 01:57:04,160
<font color="#CCCCCC">philosophical about</font><font color="#E5E5E5"> it what's it used</font>

2157
01:57:02,610 --> 01:57:06,630
for it can it be used<font color="#E5E5E5"> for generating</font>

2158
01:57:04,160 --> 01:57:08,700
validators<font color="#CCCCCC"> I think if you take that</font><font color="#E5E5E5"> out</font>

2159
01:57:06,630 --> 01:57:11,010
<font color="#CCCCCC">and you</font><font color="#E5E5E5"> look at the rest of it I can</font>

2160
01:57:08,700 --> 01:57:13,559
easily<font color="#E5E5E5"> make a validator code out</font><font color="#CCCCCC"> of it</font>

2161
01:57:11,010 --> 01:57:15,870
<font color="#E5E5E5">it's it's it's fairly strict</font><font color="#CCCCCC"> I mean we</font>

2162
01:57:13,560 --> 01:57:17,820
had some matching questions<font color="#E5E5E5"> J year that</font>

2163
01:57:15,870 --> 01:57:21,330
we talked<font color="#CCCCCC"> about but for</font><font color="#E5E5E5"> the most</font><font color="#CCCCCC"> part I</font>

2164
01:57:17,820 --> 01:57:25,019
can automate about a validator<font color="#CCCCCC"> from that</font>

2165
01:57:21,330 --> 01:57:27,690
so I'm just<font color="#CCCCCC"> saying that's</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> okay</font>

2166
01:57:25,020 --> 01:57:29,670
with the<font color="#CCCCCC"> Reg X is more of a explaining</font>

2167
01:57:27,690 --> 01:57:31,500
to a human to give to my coder<font color="#CCCCCC"> to write</font>

2168
01:57:29,670 --> 01:57:33,390
some rules<font color="#E5E5E5"> and that that breaks</font>

2169
01:57:31,500 --> 01:57:35,010
everything<font color="#E5E5E5"> all right so let's have let's</font>

2170
01:57:33,390 --> 01:57:35,750
<font color="#E5E5E5">finish off that discussion on</font><font color="#CCCCCC"> the</font>

2171
01:57:35,010 --> 01:57:39,000
<font color="#E5E5E5">mailing list</font>

2172
01:57:35,750 --> 01:57:41,880
<font color="#E5E5E5">thanks about to jump up because he sees</font>

2173
01:57:39,000 --> 01:57:44,430
<font color="#E5E5E5">the way the winds blowing</font><font color="#CCCCCC"> in regard to</font>

2174
01:57:41,880 --> 01:57:49,380
the<font color="#CCCCCC"> three-letter</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> true man suo reg X is</font>

2175
01:57:44,430 --> 01:57:54,600
not by<font color="#CCCCCC"> to within as what is</font><font color="#E5E5E5"> within</font>

2176
01:57:49,380 --> 01:57:56,310
control<font color="#E5E5E5"> within all right well maybe</font>

2177
01:57:54,600 --> 01:57:58,620
<font color="#E5E5E5">that's that's</font>

2178
01:57:56,310 --> 01:58:02,240
a quick way<font color="#CCCCCC"> out of this for</font><font color="#E5E5E5"> the short</font>

2179
01:57:58,620 --> 01:58:05,910
<font color="#E5E5E5">term is would be</font><font color="#CCCCCC"> to remove</font><font color="#E5E5E5"> that regex</font>

2180
01:58:02,240 --> 01:58:07,860
control<font color="#E5E5E5"> does anybody else gonna</font><font color="#CCCCCC"> have</font>

2181
01:58:05,910 --> 01:58:09,450
heartburn<font color="#E5E5E5"> from that did you say that all</font>

2182
01:58:07,860 --> 01:58:11,219
<font color="#E5E5E5">right so we're gonna</font><font color="#CCCCCC"> Val we're</font><font color="#E5E5E5"> going to</font>

2183
01:58:09,450 --> 01:58:12,389
talk about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a list</font><font color="#E5E5E5"> see if</font><font color="#CCCCCC"> anybody</font>

2184
01:58:11,220 --> 01:58:13,800
has an issue with<font color="#E5E5E5"> it that would be a way</font>

2185
01:58:12,390 --> 01:58:15,990
for us<font color="#E5E5E5"> to move forward</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> the thing out</font>

2186
01:58:13,800 --> 01:58:17,580
the door<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> can add regex back in</font><font color="#CCCCCC"> in</font>

2187
01:58:15,990 --> 01:58:28,170
version<font color="#CCCCCC"> 1 or version 2 or</font><font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> going</font>

2188
01:58:17,580 --> 01:58:31,230
<font color="#CCCCCC">to call it</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right two</font><font color="#E5E5E5"> minutes just</font>

2189
01:58:28,170 --> 01:58:34,170
remind<font color="#CCCCCC"> again please participate in no</font>

2190
01:58:31,230 --> 01:58:36,139
meaningless<font color="#CCCCCC"> SUBSCRIBE and I would be</font>

2191
01:58:34,170 --> 01:58:39,290
personally<font color="#E5E5E5"> interested to hear about</font>

2192
01:58:36,140 --> 01:58:44,280
people that are using CD<font color="#CCCCCC"> dl4 CDL and</font>

2193
01:58:39,290 --> 01:58:46,650
<font color="#E5E5E5">implementers of C</font><font color="#CCCCCC"> bore</font><font color="#E5E5E5"> so I see a lot of</font>

2194
01:58:44,280 --> 01:58:49,950
<font color="#E5E5E5">people</font><font color="#CCCCCC"> here that</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> I have not seen in</font>

2195
01:58:46,650 --> 01:58:55,559
the<font color="#CCCCCC"> mailing list talked a lot so please</font>

2196
01:58:49,950 --> 01:58:58,500
<font color="#E5E5E5">make sure you're in</font><font color="#CCCCCC"> the main list all</font>

2197
01:58:55,560 --> 01:59:00,600
<font color="#CCCCCC">right any last comments</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> there anybody</font>

2198
01:58:58,500 --> 01:59:02,130
<font color="#CCCCCC">that didn't get</font><font color="#E5E5E5"> the blue sheets do we</font>

2199
01:59:00,600 --> 01:59:03,930
have the other<font color="#CCCCCC"> blue sheet handy can</font>

2200
01:59:02,130 --> 01:59:06,480
<font color="#E5E5E5">somebody raise it up for me somewhere</font>

2201
01:59:03,930 --> 01:59:41,390
<font color="#E5E5E5">where I can see</font><font color="#CCCCCC"> it thank you</font><font color="#E5E5E5"> all right</font>

2202
01:59:06,480 --> 01:59:41,389
thanks everybody<font color="#E5E5E5"> that's all yes so</font>

2203
01:59:44,490 --> 01:59:49,750
all they have done great<font color="#E5E5E5"> it to a comment</font>

2204
01:59:47,380 --> 01:59:51,850
<font color="#E5E5E5">hi there was a bit of misunderstanding</font><font color="#CCCCCC"> I</font>

2205
01:59:49,750 --> 01:59:55,900
thought you guys did<font color="#E5E5E5"> wasn't quite right</font>

2206
01:59:51,850 --> 02:00:06,520
a strategic yes because<font color="#CCCCCC"> you are updated</font>

2207
01:59:55,900 --> 02:00:08,530
the definition and sort<font color="#E5E5E5"> of war spirit I</font>

2208
02:00:06,520 --> 02:00:12,130
<font color="#E5E5E5">initially thought</font><font color="#CCCCCC"> it was wrong as in</font>

2209
02:00:08,530 --> 02:00:14,320
<font color="#E5E5E5">Euro defined</font><font color="#CCCCCC"> linked relations</font><font color="#E5E5E5"> instead of</font>

2210
02:00:12,130 --> 02:00:18,430
defining<font color="#CCCCCC"> you once but mark explained</font>

2211
02:00:14,320 --> 02:00:20,530
<font color="#E5E5E5">that actuates now</font><font color="#CCCCCC"> your but but</font><font color="#E5E5E5"> because</font>

2212
02:00:18,430 --> 02:00:24,450
<font color="#CCCCCC">Europe</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of just doing</font><font color="#E5E5E5"> by</font>

2213
02:00:20,530 --> 02:00:24,450
reference you if it is<font color="#CCCCCC"> a text</font>

