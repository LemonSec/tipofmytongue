1
00:00:58,359 --> 00:01:08,090
the game is fine so good<font color="#CCCCCC"> morning so it's</font>

2
00:01:04,550 --> 00:01:12,440
officially time to start this fantasy

3
00:01:08,090 --> 00:01:14,480
tools make sales make yourself

4
00:01:12,440 --> 00:01:39,140
comfortable and<font color="#E5E5E5"> we can start a session</font>

5
00:01:14,480 --> 00:01:43,340
right now<font color="#CCCCCC"> okay good so this is the</font><font color="#E5E5E5"> L</font>

6
00:01:39,140 --> 00:01:49,610
week session<font color="#E5E5E5"> yet I have 19 7 and make</font>

7
00:01:43,340 --> 00:01:52,010
<font color="#CCCCCC">sure you're in the right room so because</font>

8
00:01:49,610 --> 00:01:54,140
it is ITF walking group meeting so

9
00:01:52,010 --> 00:02:00,380
please be aware of the<font color="#CCCCCC"> rules of the</font>

10
00:01:54,140 --> 00:02:05,090
process of the IDF we will use basically

11
00:02:00,380 --> 00:02:08,239
the collaborative<font color="#E5E5E5"> note taking on the</font>

12
00:02:05,090 --> 00:02:12,829
etherpad please visit the link to note

13
00:02:08,239 --> 00:02:18,189
working ABS say to ring meeting and but

14
00:02:12,829 --> 00:02:18,189
we leave someone who can at least

15
00:02:18,470 --> 00:02:31,470
lead<font color="#E5E5E5"> to the editing under etherpad who</font>

16
00:02:23,579 --> 00:02:35,670
can help<font color="#CCCCCC"> okay thank you</font><font color="#E5E5E5"> rock with it a</font>

17
00:02:31,470 --> 00:02:39,930
jabber scrubber I'm because on the meet

18
00:02:35,670 --> 00:02:45,839
a co who can you<font color="#E5E5E5"> know forward Christine</font>

19
00:02:39,930 --> 00:02:48,180
Xander yeah okay Thank<font color="#E5E5E5"> You Jean</font><font color="#CCCCCC"> ok I</font>

20
00:02:45,840 --> 00:02:54,840
will<font color="#E5E5E5"> hand over the blue sheet it's very</font>

21
00:02:48,180 --> 00:02:58,470
important<font color="#CCCCCC"> in Sidon so we can start we</font>

22
00:02:54,840 --> 00:03:00,299
<font color="#E5E5E5">have updated milestones so basically you</font>

23
00:02:58,470 --> 00:03:04,290
can check the many nice and the

24
00:03:00,299 --> 00:03:06,239
chartered text on that we do have we do

25
00:03:04,290 --> 00:03:07,980
have a<font color="#E5E5E5"> lot of walking anthem that fail</font>

26
00:03:06,239 --> 00:03:10,650
to have come<font color="#CCCCCC"> out with</font><font color="#E5E5E5"> the walking of</font>

27
00:03:07,980 --> 00:03:16,018
last call because of the lake of the

28
00:03:10,650 --> 00:03:20,099
views but we are anyway we<font color="#E5E5E5"> are we</font><font color="#CCCCCC"> ask</font>

29
00:03:16,019 --> 00:03:22,949
the 80s how to process on this but

30
00:03:20,099 --> 00:03:26,429
hopefully the are coming document we can

31
00:03:22,949 --> 00:03:33,870
have a<font color="#CCCCCC"> little bit more smooth move them</font>

32
00:03:26,430 --> 00:03:35,849
forward so here<font color="#E5E5E5"> is the agenda today so</font>

33
00:03:33,870 --> 00:03:38,340
basically we have their first talk from

34
00:03:35,849 --> 00:03:44,638
the<font color="#E5E5E5"> carlos on tcp / constrained notice</font>

35
00:03:38,340 --> 00:03:46,799
has bigger a draft I think this<font color="#CCCCCC"> is</font>

36
00:03:44,639 --> 00:03:50,250
second version of these drops we have

37
00:03:46,799 --> 00:03:51,810
some discussion today because suppose

38
00:03:50,250 --> 00:03:54,690
they are<font color="#E5E5E5"> witnessed the home of</font><font color="#CCCCCC"> these two</font>

39
00:03:51,810 --> 00:03:57,209
draft and the second<font color="#E5E5E5"> Hawk is from is a</font>

40
00:03:54,690 --> 00:03:58,919
update we prefer more heat on the light

41
00:03:57,209 --> 00:04:03,329
when immigration experience of the

42
00:03:58,919 --> 00:04:07,199
crypto on sensors and the sir talk is

43
00:04:03,329 --> 00:04:11,280
from Rahu chedva Jeff a which is<font color="#CCCCCC"> a</font>

44
00:04:07,199 --> 00:04:14,849
relevant topic but there's not a no

45
00:04:11,280 --> 00:04:17,099
<font color="#CCCCCC">mapping</font><font color="#E5E5E5"> draft yet but at the issues as</font>

46
00:04:14,849 --> 00:04:18,750
that will<font color="#E5E5E5"> be discussed today will be</font>

47
00:04:17,099 --> 00:04:23,240
relevant to the implementation guidance

48
00:04:18,750 --> 00:04:28,880
gear so that's why we<font color="#E5E5E5"> have a small</font><font color="#CCCCCC"> feel</font>

49
00:04:23,240 --> 00:04:28,880
any question to the<font color="#E5E5E5"> agenda</font>

50
00:04:29,750 --> 00:04:42,900
<font color="#E5E5E5">okay so</font><font color="#CCCCCC"> far so</font><font color="#E5E5E5"> good so we can head over</font>

51
00:04:32,460 --> 00:05:06,690
to<font color="#CCCCCC"> Carlo sounder first talk you can use</font>

52
00:04:42,900 --> 00:05:09,330
this one ok hello good morning my name

53
00:05:06,690 --> 00:05:12,960
is Carlos Gomez and I'm going<font color="#E5E5E5"> to present</font>

54
00:05:09,330 --> 00:05:15,659
the status and lasted dates made to the

55
00:05:12,960 --> 00:05:19,530
draft entitled tcp / constrain node

56
00:05:15,659 --> 00:05:21,030
networks and my culture is<font color="#CCCCCC"> John</font>

57
00:05:19,530 --> 00:05:25,020
<font color="#CCCCCC">crowcroft</font><font color="#E5E5E5"> from the University</font><font color="#CCCCCC"> of</font>

58
00:05:21,030 --> 00:05:27,508
Cambridge so first of all let's take a

59
00:05:25,020 --> 00:05:29,340
look at<font color="#E5E5E5"> the status of the document the</font>

60
00:05:27,509 --> 00:05:31,860
<font color="#E5E5E5">initial version of this draft was</font>

61
00:05:29,340 --> 00:05:34,380
presented in berlin in two working

62
00:05:31,860 --> 00:05:36,330
groups that we can also TC p.m. at<font color="#CCCCCC"> that</font>

63
00:05:34,380 --> 00:05:39,120
moment we didn't happy at a confirmation

64
00:05:36,330 --> 00:05:42,000
of which would be the home working group

65
00:05:39,120 --> 00:05:45,210
for<font color="#CCCCCC"> this document however in Berlin</font>

66
00:05:42,000 --> 00:05:47,639
itself we got this confirmation that<font color="#CCCCCC"> L</font>

67
00:05:45,210 --> 00:05:52,138
week would be<font color="#E5E5E5"> the working group for</font><font color="#CCCCCC"> the</font>

68
00:05:47,639 --> 00:05:55,800
draft and we submitted an initial 00

69
00:05:52,139 --> 00:05:57,830
version of the draft including a week in

70
00:05:55,800 --> 00:06:00,030
the<font color="#E5E5E5"> name of the file which however</font>

71
00:05:57,830 --> 00:06:04,198
didn't include any other modifications

72
00:06:00,030 --> 00:06:08,698
and all the actual updates that we have

73
00:06:04,199 --> 00:06:12,780
applied are in in version 01 by the way

74
00:06:08,699 --> 00:06:15,900
these updates try to address most of the

75
00:06:12,780 --> 00:06:17,969
comments that appeared after the initial

76
00:06:15,900 --> 00:06:20,190
publication of that draft and I'd<font color="#E5E5E5"> like</font>

77
00:06:17,969 --> 00:06:23,550
<font color="#CCCCCC">to</font><font color="#E5E5E5"> thank everyone for the great feedback</font>

78
00:06:20,190 --> 00:06:28,180
that we got

79
00:06:23,550 --> 00:06:29,820
so let's take a minute<font color="#CCCCCC"> to remember which</font>

80
00:06:28,180 --> 00:06:32,350
is the motivation for<font color="#E5E5E5"> this document</font>

81
00:06:29,820 --> 00:06:34,420
today we have that there are<font color="#E5E5E5"> several</font>

82
00:06:32,350 --> 00:06:38,500
application layer protocols which are

83
00:06:34,420 --> 00:06:39,790
being used for IOT scenarios for example

84
00:06:38,500 --> 00:06:42,730
we have the<font color="#CCCCCC"> constrained application</font>

85
00:06:39,790 --> 00:06:45,690
protocol which was originally designed /

86
00:06:42,730 --> 00:06:48,070
UDP however there's a co-op<font color="#E5E5E5"> of</font><font color="#CCCCCC"> TCP</font>

87
00:06:45,690 --> 00:06:50,620
specification in progress motivated

88
00:06:48,070 --> 00:06:55,330
mainly by the need to overcome with a

89
00:06:50,620 --> 00:06:59,290
box problems then also we have HTTP<font color="#CCCCCC"> two</font>

90
00:06:55,330 --> 00:07:01,539
and<font color="#E5E5E5"> even HTTP one dot one which are in</font>

91
00:06:59,290 --> 00:07:07,419
some cases being used and considered for

92
00:07:01,540 --> 00:07:11,620
IOT also exempt EP is used in some<font color="#E5E5E5"> IOT</font>

93
00:07:07,419 --> 00:07:14,140
scenarios and for<font color="#CCCCCC"> example MQTT is a non</font>

94
00:07:11,620 --> 00:07:16,720
IETF application layer protocol which is

95
00:07:14,140 --> 00:07:21,969
however popular and all of these

96
00:07:16,720 --> 00:07:24,400
protocols are using TCP so while TCP

97
00:07:21,970 --> 00:07:27,340
have been little<font color="#E5E5E5"> bit neglected or even</font>

98
00:07:24,400 --> 00:07:30,099
criticized regarding<font color="#CCCCCC"> it's possible use</font>

99
00:07:27,340 --> 00:07:33,609
in IOT scenarios we have that it's

100
00:07:30,100 --> 00:07:36,100
actually being or will be used in many

101
00:07:33,610 --> 00:07:40,000
IOT scenarios so the purpose<font color="#E5E5E5"> of this</font>

102
00:07:36,100 --> 00:07:41,710
<font color="#E5E5E5">document is to offer simple measures for</font>

103
00:07:40,000 --> 00:07:45,990
suitable<font color="#E5E5E5"> TCP implementation and</font>

104
00:07:41,710 --> 00:07:49,299
operation over constraint node networks

105
00:07:45,990 --> 00:07:54,130
so let's go<font color="#CCCCCC"> through the</font><font color="#E5E5E5"> updates in</font>

106
00:07:49,300 --> 00:07:58,150
version 01 first of all<font color="#E5E5E5"> our C 2119</font>

107
00:07:54,130 --> 00:08:00,250
language has been removed so the idea is

108
00:07:58,150 --> 00:08:03,989
that the purpose of the document is to

109
00:08:00,250 --> 00:08:07,450
explain how TCP can be used in

110
00:08:03,990 --> 00:08:09,490
constrained networks so what we are<font color="#E5E5E5"> not</font>

111
00:08:07,450 --> 00:08:13,979
<font color="#E5E5E5">trying to do is something like proposing</font>

112
00:08:09,490 --> 00:08:16,900
a new<font color="#E5E5E5"> TCP variant in the introduction</font>

113
00:08:13,979 --> 00:08:18,969
XMPP has been added to<font color="#E5E5E5"> the list of</font>

114
00:08:16,900 --> 00:08:23,320
application layer protocols used in

115
00:08:18,970 --> 00:08:25,840
CNN's which are using TCP then in in

116
00:08:23,320 --> 00:08:27,780
section 2 which shows the

117
00:08:25,840 --> 00:08:31,299
characteristics of CNN's which are

118
00:08:27,780 --> 00:08:34,360
relevant for<font color="#CCCCCC"> TCP one detail has been</font>

119
00:08:31,300 --> 00:08:36,120
added which is the fact that often the

120
00:08:34,360 --> 00:08:38,510
link layers which are

121
00:08:36,120 --> 00:08:41,729
used in<font color="#E5E5E5"> this kind of scenarios are</font>

122
00:08:38,510 --> 00:08:44,520
offering low transmission rates this can

123
00:08:41,729 --> 00:08:47,160
be roughly categorized as typically

124
00:08:44,520 --> 00:08:51,510
below one minute per second this is

125
00:08:47,160 --> 00:08:54,689
relevant in the fact that this gives<font color="#E5E5E5"> the</font>

126
00:08:51,510 --> 00:08:57,000
idea<font color="#E5E5E5"> that throughput is typically not</font>

127
00:08:54,690 --> 00:09:01,860
<font color="#E5E5E5">the main concern in this kind of</font>

128
00:08:57,000 --> 00:09:05,460
scenarios we have<font color="#CCCCCC"> added a new</font><font color="#E5E5E5"> section</font>

129
00:09:01,860 --> 00:09:07,770
called<font color="#E5E5E5"> scenario section</font><font color="#CCCCCC"> three where we</font>

130
00:09:05,460 --> 00:09:11,760
try to illustrate which is the main

131
00:09:07,770 --> 00:09:14,960
scenario that we are considering for the

132
00:09:11,760 --> 00:09:18,089
use of tcp / constrain node networks and

133
00:09:14,960 --> 00:09:20,670
what we have is the scenario comprises

134
00:09:18,089 --> 00:09:24,770
constrained devices which communicate

135
00:09:20,670 --> 00:09:27,270
with some other unconstrained device

136
00:09:24,770 --> 00:09:30,839
possibly for example as part of cloud

137
00:09:27,270 --> 00:09:33,240
infrastructure so these would be the<font color="#E5E5E5"> two</font>

138
00:09:30,839 --> 00:09:38,220
<font color="#CCCCCC">TCP endpoints the constraint device and</font>

139
00:09:33,240 --> 00:09:41,760
the unconstrained device and often we

140
00:09:38,220 --> 00:09:44,430
have to<font color="#E5E5E5"> overcome we have to traverse a</font>

141
00:09:41,760 --> 00:09:46,140
middle box which may be in<font color="#CCCCCC"> between the</font>

142
00:09:44,430 --> 00:09:47,880
constraint device and the unconstrained

143
00:09:46,140 --> 00:09:51,029
device this kind<font color="#CCCCCC"> of scenario is</font>

144
00:09:47,880 --> 00:09:53,459
symmetric in several aspects first of

145
00:09:51,029 --> 00:09:56,000
all there's the<font color="#E5E5E5"> obvious difference in</font>

146
00:09:53,459 --> 00:09:57,890
terms of resource availability in

147
00:09:56,000 --> 00:10:01,290
comparing constrained and unconstrained

148
00:09:57,890 --> 00:10:03,839
devices and on the other<font color="#E5E5E5"> hand assuming</font>

149
00:10:01,290 --> 00:10:07,199
that<font color="#CCCCCC"> the majority of constrained devices</font>

150
00:10:03,839 --> 00:10:09,690
will probably be sensors then the amount

151
00:10:07,200 --> 00:10:12,000
<font color="#E5E5E5">of data sent by the constrained devices</font>

152
00:10:09,690 --> 00:10:14,220
is probably going to<font color="#E5E5E5"> be greater than the</font>

153
00:10:12,000 --> 00:10:18,540
<font color="#E5E5E5">amount of data received by these</font>

154
00:10:14,220 --> 00:10:21,060
constrained devices then section 4

155
00:10:18,540 --> 00:10:24,949
provides the recommendations and

156
00:10:21,060 --> 00:10:28,640
guidance on tcp / this kind of scenarios

157
00:10:24,950 --> 00:10:32,820
we have added<font color="#E5E5E5"> a subsection for that one</font>

158
00:10:28,640 --> 00:10:34,770
which explains<font color="#E5E5E5"> that typically the TCP</font>

159
00:10:32,820 --> 00:10:38,010
connection would be initiated<font color="#CCCCCC"> by the</font>

160
00:10:34,770 --> 00:10:40,319
constrained device this is in order to

161
00:10:38,010 --> 00:10:45,560
better support the energy conservation

162
00:10:40,320 --> 00:10:48,020
techniques by the constraint device

163
00:10:45,560 --> 00:10:50,060
then in<font color="#CCCCCC"> Subsection for the two we have</font>

164
00:10:48,020 --> 00:10:53,000
the text that discusses about the

165
00:10:50,060 --> 00:10:55,130
<font color="#E5E5E5">maximum segment size and we have other</font>

166
00:10:53,000 --> 00:10:58,600
text explaining that if there's a<font color="#E5E5E5"> lean</font>

167
00:10:55,130 --> 00:11:01,580
layer which offers a not so constrain

168
00:10:58,600 --> 00:11:05,029
MTU so for<font color="#CCCCCC"> example an empty or greater</font>

169
00:11:01,580 --> 00:11:08,660
than 280 bytes it's still good<font color="#CCCCCC"> to set</font>

170
00:11:05,029 --> 00:11:11,150
the MSS so that the ipv6 Datagram size

171
00:11:08,660 --> 00:11:14,719
does not exceed the twelve hundred and

172
00:11:11,150 --> 00:11:17,420
eighty bite threshold so the<font color="#E5E5E5"> idea here</font>

173
00:11:14,720 --> 00:11:22,150
is to avoid issues with internet links

174
00:11:17,420 --> 00:11:27,969
which might not<font color="#E5E5E5"> have an MTU greater than</font>

175
00:11:22,150 --> 00:11:30,650
280 bytes subsection for the three

176
00:11:27,970 --> 00:11:32,630
focuses on the window size in<font color="#CCCCCC"> the</font>

177
00:11:30,650 --> 00:11:36,740
previous version<font color="#CCCCCC"> of the document we were</font>

178
00:11:32,630 --> 00:11:39,890
kind<font color="#CCCCCC"> of mandating the use of</font><font color="#E5E5E5"> stop</font><font color="#CCCCCC"> and</font>

179
00:11:36,740 --> 00:11:43,520
<font color="#E5E5E5">wait approach now we have relaxed that</font>

180
00:11:39,890 --> 00:11:45,550
and we are recommending a single MSS

181
00:11:43,520 --> 00:11:49,120
window for receive and transmit

182
00:11:45,550 --> 00:11:51,949
operations as a lightweight approach

183
00:11:49,120 --> 00:11:53,870
however<font color="#E5E5E5"> we also explained</font><font color="#CCCCCC"> that if a</font>

184
00:11:51,950 --> 00:11:58,040
device can afford it for example because

185
00:11:53,870 --> 00:12:01,880
<font color="#E5E5E5">it has enough memory and processing</font>

186
00:11:58,040 --> 00:12:04,480
power a<font color="#CCCCCC"> five MSS window could be</font>

187
00:12:01,880 --> 00:12:09,170
suitable because this might allow to use

188
00:12:04,480 --> 00:12:12,950
fast retransmit and fast recovery then

189
00:12:09,170 --> 00:12:16,400
in<font color="#E5E5E5"> Subsection for that for this focuses</font>

190
00:12:12,950 --> 00:12:19,780
on the retransmission time out here well

191
00:12:16,400 --> 00:12:24,170
we have actually kind of a question

192
00:12:19,780 --> 00:12:28,939
because we would like to to recommend

193
00:12:24,170 --> 00:12:32,329
the use of an<font color="#CCCCCC"> alternative RTO estimation</font>

194
00:12:28,940 --> 00:12:34,459
algorithm so the<font color="#E5E5E5"> idea would be to use</font>

195
00:12:32,330 --> 00:12:39,020
<font color="#E5E5E5">something different from what is the</font>

196
00:12:34,459 --> 00:12:43,400
actual RTO scheme used in in TCP which

197
00:12:39,020 --> 00:12:48,050
is defined in RFC 62 98 we have some

198
00:12:43,400 --> 00:12:50,750
experience with cocoa which is the an

199
00:12:48,050 --> 00:12:53,029
adaptive congestion control algorithm

200
00:12:50,750 --> 00:12:55,640
which is now a working group document in

201
00:12:53,029 --> 00:12:58,430
the<font color="#E5E5E5"> core working group and this has been</font>

202
00:12:55,640 --> 00:12:59,400
designed specifically considering some

203
00:12:58,430 --> 00:13:01,469
of the

204
00:12:59,400 --> 00:13:03,810
characteristics found in constraint node

205
00:13:01,470 --> 00:13:06,000
networks and we believe that we<font color="#E5E5E5"> have</font>

206
00:13:03,810 --> 00:13:13,109
<font color="#E5E5E5">some evidence</font><font color="#CCCCCC"> that this is working</font>

207
00:13:06,000 --> 00:13:15,600
<font color="#E5E5E5">better then approaches based on 62 98 so</font>

208
00:13:13,110 --> 00:13:18,990
here<font color="#E5E5E5"> we have a question</font><font color="#CCCCCC"> which I</font><font color="#E5E5E5"> don't</font>

209
00:13:15,600 --> 00:13:22,170
<font color="#E5E5E5">know when or</font><font color="#CCCCCC"> where should this actually</font>

210
00:13:18,990 --> 00:13:25,080
be resolved but we'd like to to find out

211
00:13:22,170 --> 00:13:28,380
how to proceed because<font color="#E5E5E5"> the use of cocoa</font>

212
00:13:25,080 --> 00:13:30,600
is actually conflicting with several TCP

213
00:13:28,380 --> 00:13:35,340
specifications with several masts such

214
00:13:30,600 --> 00:13:37,770
as for instance RFC 62 98 and also in

215
00:13:35,340 --> 00:13:39,120
cocoa we are using weaker titties so

216
00:13:37,770 --> 00:13:41,730
this<font color="#CCCCCC"> is in conflict with the current</font>

217
00:13:39,120 --> 00:13:47,220
algorithm so this<font color="#E5E5E5"> is something that will</font>

218
00:13:41,730 --> 00:13:49,680
need to find out how to proceed then

219
00:13:47,220 --> 00:13:51,420
about the<font color="#E5E5E5"> TCP connection lifetime in</font>

220
00:13:49,680 --> 00:13:54,239
Subsection followed<font color="#E5E5E5"> 5 we have</font>

221
00:13:51,420 --> 00:13:58,110
restructured a little bit the section

222
00:13:54,240 --> 00:14:01,700
and we have added subsection here so the

223
00:13:58,110 --> 00:14:06,270
main<font color="#CCCCCC"> idea was that in order to minimize</font>

224
00:14:01,700 --> 00:14:08,730
the overhead in the communication the

225
00:14:06,270 --> 00:14:11,730
best the ideal situation<font color="#CCCCCC"> would</font><font color="#E5E5E5"> be to</font>

226
00:14:08,730 --> 00:14:14,820
have permanently open tcp connection

227
00:14:11,730 --> 00:14:18,410
between the two<font color="#CCCCCC"> TCP endpoints however</font>

228
00:14:14,820 --> 00:14:21,180
this is<font color="#E5E5E5"> probably not going to be</font>

229
00:14:18,410 --> 00:14:24,510
feasible considering that<font color="#E5E5E5"> often will</font>

230
00:14:21,180 --> 00:14:27,300
have middleboxes such as firewalls which

231
00:14:24,510 --> 00:14:29,640
may perform deletion of filter state

232
00:14:27,300 --> 00:14:34,310
records let's say early earlier than

233
00:14:29,640 --> 00:14:38,400
expected and this might lead to breaking

234
00:14:34,310 --> 00:14:40,229
participe connection so in addition<font color="#E5E5E5"> we</font>

235
00:14:38,400 --> 00:14:41,790
have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> TCP keep alives are probably</font>

236
00:14:40,230 --> 00:14:45,420
not going<font color="#CCCCCC"> to be useful to solve this</font>

237
00:14:41,790 --> 00:14:47,939
issue since the default timeout for<font color="#E5E5E5"> the</font>

238
00:14:45,420 --> 00:14:52,349
tip life is two hours<font color="#E5E5E5"> and it cannot be</font>

239
00:14:47,940 --> 00:14:54,330
lower than that so possible approaches

240
00:14:52,350 --> 00:14:57,270
rely on having application layer

241
00:14:54,330 --> 00:14:59,340
heartbeat messages and then there's

242
00:14:57,270 --> 00:15:02,630
another approach which was suggested by

243
00:14:59,340 --> 00:15:07,290
a vision on<font color="#CCCCCC"> the list which is</font><font color="#E5E5E5"> the use of</font>

244
00:15:02,630 --> 00:15:10,310
<font color="#E5E5E5">TCP first open the idea here would be ok</font>

245
00:15:07,290 --> 00:15:12,689
if<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a middle box which is</font>

246
00:15:10,310 --> 00:15:16,109
<font color="#E5E5E5">creating these problems</font>

247
00:15:12,690 --> 00:15:18,510
then okay we can try to initiate a new

248
00:15:16,110 --> 00:15:21,240
connection every time we have to send

249
00:15:18,510 --> 00:15:24,720
new data however if we use<font color="#E5E5E5"> TCP first</font>

250
00:15:21,240 --> 00:15:27,360
open this would<font color="#CCCCCC"> be good in terms of low</font>

251
00:15:24,720 --> 00:15:30,750
overhead because data can be carried in

252
00:15:27,360 --> 00:15:32,910
scene scene and scenic segments and also

253
00:15:30,750 --> 00:15:35,850
be processed immediately by the

254
00:15:32,910 --> 00:15:37,800
receiving entity and however there's

255
00:15:35,850 --> 00:15:40,080
something to take intagram that is that

256
00:15:37,800 --> 00:15:43,170
for security<font color="#E5E5E5"> reasons a cookie must be</font>

257
00:15:40,080 --> 00:15:46,320
obtained by the device which is<font color="#E5E5E5"> going to</font>

258
00:15:43,170 --> 00:15:49,469
initiate the connection and this cookie

259
00:15:46,320 --> 00:15:52,080
which may have<font color="#CCCCCC"> 4 or</font><font color="#E5E5E5"> 16 bytes has to be</font>

260
00:15:49,470 --> 00:15:54,470
<font color="#CCCCCC">included them in sin segments and also</font>

261
00:15:52,080 --> 00:15:59,340
it has to be refreshed from time to time

262
00:15:54,470 --> 00:16:03,300
so here we should try to compare what is

263
00:15:59,340 --> 00:16:04,800
better to<font color="#CCCCCC"> use TCP first open</font><font color="#E5E5E5"> even if we</font>

264
00:16:03,300 --> 00:16:08,430
have the cookie and it has<font color="#CCCCCC"> to be</font>

265
00:16:04,800 --> 00:16:11,790
refreshed or to open a new connection

266
00:16:08,430 --> 00:16:14,030
every time we have to send<font color="#E5E5E5"> new data with</font>

267
00:16:11,790 --> 00:16:17,610
the traditional three-way handshake and

268
00:16:14,030 --> 00:16:20,640
we did some calculations and what we

269
00:16:17,610 --> 00:16:24,210
found is that as long<font color="#CCCCCC"> as the cookie</font>

270
00:16:20,640 --> 00:16:27,030
refresh rate is below the new connection

271
00:16:24,210 --> 00:16:34,770
rate then it is really more efficient to

272
00:16:27,030 --> 00:16:37,589
use TCP first open then in<font color="#E5E5E5"> Subsection</font>

273
00:16:34,770 --> 00:16:41,819
<font color="#E5E5E5">for that seven we've discussed TCP</font>

274
00:16:37,590 --> 00:16:45,260
options and the text has<font color="#E5E5E5"> been modified a</font>

275
00:16:41,820 --> 00:16:47,670
little now explain that for single MSS

276
00:16:45,260 --> 00:16:50,670
for devices that use a single MSS

277
00:16:47,670 --> 00:16:53,880
receive or transmit window the<font color="#E5E5E5"> IDS not</font>

278
00:16:50,670 --> 00:16:58,170
to support<font color="#CCCCCC"> Windows scale TCP times</font>

279
00:16:53,880 --> 00:17:00,470
thumbs and<font color="#CCCCCC"> sac</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> sac permitted and to</font>

280
00:16:58,170 --> 00:17:05,250
ignore these options if it received

281
00:17:00,470 --> 00:17:07,290
however for less constrained devices for

282
00:17:05,250 --> 00:17:11,189
example with more memory allowing for a

283
00:17:07,290 --> 00:17:13,680
greater window then it<font color="#E5E5E5"> is that selective</font>

284
00:17:11,189 --> 00:17:16,860
<font color="#E5E5E5">acknowledgement may be positive may be</font>

285
00:17:13,680 --> 00:17:20,280
good since they can avoid<font color="#CCCCCC"> necessary</font>

286
00:17:16,859 --> 00:17:22,500
retries and they may allow reducing

287
00:17:20,280 --> 00:17:24,540
latency band with an energy consumption

288
00:17:22,500 --> 00:17:25,829
we have to take<font color="#E5E5E5"> into account that we are</font>

289
00:17:24,540 --> 00:17:29,129
<font color="#E5E5E5">dealing with lossy</font>

290
00:17:25,829 --> 00:17:34,980
scenarios and therefore sack selective

291
00:17:29,130 --> 00:17:38,000
acknowledgments may be useful<font color="#CCCCCC"> here we</font>

292
00:17:34,980 --> 00:17:41,130
have added a new subsection which

293
00:17:38,000 --> 00:17:44,159
discusses delayed acknowledgments the

294
00:17:41,130 --> 00:17:46,529
idea<font color="#E5E5E5"> is that on the one hand a device</font>

295
00:17:44,159 --> 00:17:49,260
that advertises a single MSS receive

296
00:17:46,529 --> 00:17:52,140
window actually needs to avoid

297
00:17:49,260 --> 00:17:55,019
supporting delayed acknowledgments in

298
00:17:52,140 --> 00:17:57,330
order<font color="#E5E5E5"> to avoid contributing some extra</font>

299
00:17:55,019 --> 00:18:00,720
delay to the<font color="#CCCCCC"> rtt</font><font color="#E5E5E5"> this additional delay</font>

300
00:17:57,330 --> 00:18:02,610
might be up to 500<font color="#E5E5E5"> milliseconds and in</font>

301
00:18:00,720 --> 00:18:04,620
general delay that knowledge<font color="#E5E5E5"> months</font>

302
00:18:02,610 --> 00:18:07,949
would not be really recommended in

303
00:18:04,620 --> 00:18:10,889
constrain not networks since<font color="#E5E5E5"> traffic is</font>

304
00:18:07,950 --> 00:18:14,399
mostly of transactional type with a

305
00:18:10,889 --> 00:18:18,178
transaction size often below or maybe in

306
00:18:14,399 --> 00:18:21,389
the order of the MSS however it's true

307
00:18:18,179 --> 00:18:23,100
also that it could be<font color="#E5E5E5"> useful to to use</font>

308
00:18:21,389 --> 00:18:25,949
delay acknowledgments to reduce the

309
00:18:23,100 --> 00:18:28,439
number of acknowledgments involved in

310
00:18:25,950 --> 00:18:31,200
about transfers for instance in<font color="#E5E5E5"> firmware</font>

311
00:18:28,440 --> 00:18:34,289
update however this kind of interactions

312
00:18:31,200 --> 00:18:39,600
are relatively infrequent compared with

313
00:18:34,289 --> 00:18:41,940
the rest of transactions then in section

314
00:18:39,600 --> 00:18:44,908
section 5 we have security

315
00:18:41,940 --> 00:18:48,269
considerations which is still fairly

316
00:18:44,909 --> 00:18:50,880
empty however we have included<font color="#CCCCCC"> that if</font>

317
00:18:48,269 --> 00:18:53,039
<font color="#E5E5E5">TCP first open is used security</font>

318
00:18:50,880 --> 00:18:58,710
considerations of its specification

319
00:18:53,039 --> 00:19:00,809
which is RFC 74 13 apply finally we have

320
00:18:58,710 --> 00:19:04,080
added an annex to the document the

321
00:19:00,809 --> 00:19:06,720
purpose<font color="#CCCCCC"> here is to document which other</font>

322
00:19:04,080 --> 00:19:09,000
<font color="#E5E5E5">characteristics of existing TCP</font>

323
00:19:06,720 --> 00:19:12,809
implementations for<font color="#CCCCCC"> constrained devices</font>

324
00:19:09,000 --> 00:19:14,940
so we have subsections for<font color="#CCCCCC"> micra p for</font>

325
00:19:12,809 --> 00:19:18,360
lightweight IP and a placeholder for

326
00:19:14,940 --> 00:19:20,580
riot and for the moment we<font color="#E5E5E5"> have an</font>

327
00:19:18,360 --> 00:19:25,830
overview for my crappy and lightweight

328
00:19:20,580 --> 00:19:29,580
IP so for the first one<font color="#E5E5E5"> my cry p is a</font>

329
00:19:25,830 --> 00:19:33,720
tcp/ip implementation intended for 8 and

330
00:19:29,580 --> 00:19:36,270
16-bit<font color="#CCCCCC"> CPUs with a code size around five</font>

331
00:19:33,720 --> 00:19:38,550
kilobytes which comprises checksum in

332
00:19:36,270 --> 00:19:41,220
IPS MP and<font color="#CCCCCC"> TCP</font>

333
00:19:38,550 --> 00:19:43,649
and here there's a global single packet

334
00:19:41,220 --> 00:19:45,990
size buffer for incoming packets however

335
00:19:43,650 --> 00:19:49,920
there's no buffer for outgoing data and

336
00:19:45,990 --> 00:19:52,160
<font color="#E5E5E5">this means that applications that might</font>

337
00:19:49,920 --> 00:19:56,100
need to perform retransmissions have to

338
00:19:52,160 --> 00:19:59,490
be<font color="#E5E5E5"> responsible themselves for this kind</font>

339
00:19:56,100 --> 00:20:03,139
of function on the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> hand the MSS is</font>

340
00:19:59,490 --> 00:20:05,340
not modifying during a connection and

341
00:20:03,140 --> 00:20:07,730
the<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> is that a stop and wait</font>

342
00:20:05,340 --> 00:20:10,679
approach is used which in addition to

343
00:20:07,730 --> 00:20:13,410
other advantages in terms of simplicity

344
00:20:10,680 --> 00:20:16,830
that we have discussed this also avoids

345
00:20:13,410 --> 00:20:20,220
sliding window operations which use

346
00:20:16,830 --> 00:20:25,889
32-bit arithmetic expensively which are

347
00:20:20,220 --> 00:20:28,080
however expensive on 8-bit CPUs<font color="#E5E5E5"> rahul</font>

348
00:20:25,890 --> 00:20:30,780
shadow from hobby so can<font color="#E5E5E5"> you please</font><font color="#CCCCCC"> yeah</font>

349
00:20:28,080 --> 00:20:34,530
<font color="#E5E5E5">so you mentioned know before out doing</font>

350
00:20:30,780 --> 00:20:36,990
data so i think i<font color="#E5E5E5"> would have</font><font color="#CCCCCC"> to</font>

351
00:20:34,530 --> 00:20:40,740
contradict here because i feel there<font color="#CCCCCC"> are</font>

352
00:20:36,990 --> 00:20:44,600
two buffers used in you IP as compared

353
00:20:40,740 --> 00:20:49,020
to one buffer in UDP for you IP tcp so

354
00:20:44,600 --> 00:20:50,639
the reason<font color="#E5E5E5"> being that you cannot really</font>

355
00:20:49,020 --> 00:20:53,040
application doesn't have any control

356
00:20:50,640 --> 00:20:55,440
over the sequence numbers or emesis

357
00:20:53,040 --> 00:20:57,600
values at the TCP layer so it has<font color="#CCCCCC"> to</font>

358
00:20:55,440 --> 00:21:00,990
keep the buffer and that buffer is kept

359
00:20:57,600 --> 00:21:04,469
in to you IP connection structure yeah

360
00:21:00,990 --> 00:21:07,200
so<font color="#E5E5E5"> I would agree with</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> I think maybe</font>

361
00:21:04,470 --> 00:21:11,190
what we might need to write might need

362
00:21:07,200 --> 00:21:14,130
to do is to check maybe there's a matter

363
00:21:11,190 --> 00:21:17,610
related with versions of micro a so I

364
00:21:14,130 --> 00:21:21,090
suspect that the data here refers to

365
00:21:17,610 --> 00:21:23,100
maybe some older version this in

366
00:21:21,090 --> 00:21:24,810
quantity<font color="#E5E5E5"> to</font><font color="#CCCCCC"> dirt sex there was a single</font>

367
00:21:23,100 --> 00:21:26,939
<font color="#CCCCCC">buffer used for incoming as well as</font>

368
00:21:24,810 --> 00:21:28,889
outgoing data the IP above but at<font color="#CCCCCC"> the</font>

369
00:21:26,940 --> 00:21:31,260
same time quantity 2 dot<font color="#E5E5E5"> 7 introduced</font>

370
00:21:28,890 --> 00:21:32,700
another<font color="#E5E5E5"> a you</font><font color="#CCCCCC"> happy</font><font color="#E5E5E5"> connection on /</font>

371
00:21:31,260 --> 00:21:34,320
socket basis then I introduce another

372
00:21:32,700 --> 00:21:36,150
buffer because there was no way possible

373
00:21:34,320 --> 00:21:37,770
for you know application to maintain<font color="#CCCCCC"> the</font>

374
00:21:36,150 --> 00:21:40,530
sequence number and a<font color="#CCCCCC"> message by it so</font>

375
00:21:37,770 --> 00:21:42,870
okay yeah so thanks for<font color="#E5E5E5"> the common and</font>

376
00:21:40,530 --> 00:21:46,879
definitely we have to be careful<font color="#E5E5E5"> and</font>

377
00:21:42,870 --> 00:21:53,219
address these subsequent revisions

378
00:21:46,880 --> 00:21:56,060
so um yeah so for lightweight IP this is

379
00:21:53,220 --> 00:22:00,510
a tcp/ip implementation also for 8 and

380
00:21:56,060 --> 00:22:02,879
16-bit CPUs however this is not so

381
00:22:00,510 --> 00:22:05,040
constrained actually the code size is

382
00:22:02,880 --> 00:22:08,880
greater depending on<font color="#CCCCCC"> the platform it</font>

383
00:22:05,040 --> 00:22:12,000
could be between 14 and 22 kilobytes out

384
00:22:08,880 --> 00:22:15,810
of which<font color="#E5E5E5"> the tcp code size is between 9</font>

385
00:22:12,000 --> 00:22:17,910
and 14<font color="#E5E5E5"> kilobyte so here we</font><font color="#CCCCCC"> have a</font>

386
00:22:15,810 --> 00:22:20,760
buffering of incoming and outgoing data

387
00:22:17,910 --> 00:22:22,530
so applications don't have to well can

388
00:22:20,760 --> 00:22:25,350
be decoupled from the network stack and

389
00:22:22,530 --> 00:22:27,410
a transmission window greater<font color="#E5E5E5"> than a</font>

390
00:22:25,350 --> 00:22:30,120
single segment is supported and

391
00:22:27,410 --> 00:22:32,310
<font color="#E5E5E5">functions such as slowstar congestion</font>

392
00:22:30,120 --> 00:22:35,760
avoidance funds fast retransmit and fast

393
00:22:32,310 --> 00:22:38,040
recovery are also supported also we have

394
00:22:35,760 --> 00:22:40,740
some issue here about possibly the

395
00:22:38,040 --> 00:22:43,350
<font color="#E5E5E5">versions of</font><font color="#CCCCCC"> the implementation because</font>

396
00:22:40,740 --> 00:22:45,270
in some older version of lightweight<font color="#CCCCCC"> ap</font>

397
00:22:43,350 --> 00:22:48,090
selective<font color="#E5E5E5"> acknowledgement and</font><font color="#CCCCCC"> windows</font>

398
00:22:45,270 --> 00:22:51,750
scale are not implemented however in a

399
00:22:48,090 --> 00:22:54,149
more recent version these are supported

400
00:22:51,750 --> 00:22:56,310
as mentioned for instance by the chair

401
00:22:54,150 --> 00:23:01,020
on the<font color="#E5E5E5"> list so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is something we'll</font>

402
00:22:56,310 --> 00:23:08,010
need to solve in subsequent versions of

403
00:23:01,020 --> 00:23:10,920
the track from Java yeah from<font color="#E5E5E5"> java my</font>

404
00:23:08,010 --> 00:23:16,470
course job and there's a question<font color="#E5E5E5"> speak</font>

405
00:23:10,920 --> 00:23:19,110
<font color="#CCCCCC">to</font><font color="#E5E5E5"> Mike sorry</font><font color="#CCCCCC"> okay so the question from</font>

406
00:23:16,470 --> 00:23:22,230
<font color="#CCCCCC">my co chef and the question is</font><font color="#E5E5E5"> why the</font>

407
00:23:19,110 --> 00:23:27,120
document recommends a lot of aspects not

408
00:23:22,230 --> 00:23:31,440
<font color="#E5E5E5">followed</font><font color="#CCCCCC"> by a double a keys back well I</font>

409
00:23:27,120 --> 00:23:37,469
think we it depends for instance in riot

410
00:23:31,440 --> 00:23:40,350
which is texted this to be provided in

411
00:23:37,470 --> 00:23:42,510
subsequent versions<font color="#E5E5E5"> I know there has</font>

412
00:23:40,350 --> 00:23:46,290
been an implementation which is really

413
00:23:42,510 --> 00:23:49,790
using<font color="#CCCCCC"> the single window single MSS</font>

414
00:23:46,290 --> 00:23:52,110
window so<font color="#E5E5E5"> it depends I understand that</font>

415
00:23:49,790 --> 00:23:53,909
possibly for subsequent versions of the

416
00:23:52,110 --> 00:23:56,370
draft it would be good to try to

417
00:23:53,910 --> 00:23:57,780
determine<font color="#E5E5E5"> which recommendations would be</font>

418
00:23:56,370 --> 00:24:00,469
more suitable for instance for +1

419
00:23:57,780 --> 00:24:03,770
devices which might be<font color="#E5E5E5"> better for class</font>

420
00:24:00,470 --> 00:24:05,720
devices and so on so<font color="#E5E5E5"> I think possibly we</font>

421
00:24:03,770 --> 00:24:08,150
can try to do this this exercise and

422
00:24:05,720 --> 00:24:10,549
instead instead of providing this broad

423
00:24:08,150 --> 00:24:13,130
rough recommendations try to be a little

424
00:24:10,549 --> 00:24:14,840
bit<font color="#E5E5E5"> more accurate and precise and say</font>

425
00:24:13,130 --> 00:24:16,760
okay this thing<font color="#CCCCCC"> would be useful for</font>

426
00:24:14,840 --> 00:24:22,010
class 1 this would be good for class to

427
00:24:16,760 --> 00:24:24,770
something<font color="#E5E5E5"> like that okay so</font><font color="#CCCCCC"> um yeah as</font>

428
00:24:22,010 --> 00:24:29,530
shown here we plan to add some text

429
00:24:24,770 --> 00:24:29,530
about the<font color="#E5E5E5"> TCP implementation in riot and</font>

430
00:24:29,620 --> 00:24:34,789
yeah so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the end of the</font>

431
00:24:32,090 --> 00:24:38,000
presentation and actually we would like

432
00:24:34,789 --> 00:24:41,390
<font color="#CCCCCC">to ask to the</font><font color="#E5E5E5"> working group whether you</font>

433
00:24:38,000 --> 00:24:44,960
would be in favor of adopting this draft

434
00:24:41,390 --> 00:24:51,309
as a working group document so any any

435
00:24:44,960 --> 00:24:54,230
any more comments suresh krisshnan Sadie

436
00:24:51,309 --> 00:24:55,610
so have you run it by TC p.m. after

437
00:24:54,230 --> 00:24:57,740
you've made the modifications to the

438
00:24:55,610 --> 00:25:01,610
draft have you had a chance<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> to</font>

439
00:24:57,740 --> 00:25:04,309
<font color="#CCCCCC">the TC</font><font color="#E5E5E5"> p.m. people after you publish new</font>

440
00:25:01,610 --> 00:25:07,600
<font color="#E5E5E5">Rev well actually</font><font color="#CCCCCC"> Michael Sheriff well</font>

441
00:25:04,309 --> 00:25:10,820
the draft<font color="#CCCCCC"> was published on both lists</font>

442
00:25:07,600 --> 00:25:13,340
<font color="#E5E5E5">list the notification and michael</font>

443
00:25:10,820 --> 00:25:16,549
provided several comments which we still

444
00:25:13,340 --> 00:25:19,220
have to to actually<font color="#E5E5E5"> address</font><font color="#CCCCCC"> okay ah but</font>

445
00:25:16,549 --> 00:25:22,580
we do plan to take<font color="#E5E5E5"> into account his</font>

446
00:25:19,220 --> 00:25:24,559
feedback which is very useful for us so

447
00:25:22,580 --> 00:25:26,120
<font color="#E5E5E5">I</font><font color="#CCCCCC"> think it would</font><font color="#E5E5E5"> be good like so go</font>

448
00:25:24,559 --> 00:25:27,590
ahead with the adoption call that he won

449
00:25:26,120 --> 00:25:28,969
but before you submit as working<font color="#E5E5E5"> group</font>

450
00:25:27,590 --> 00:25:30,649
document like you know please make sure

451
00:25:28,970 --> 00:25:33,320
that Michaels comments are address at

452
00:25:30,650 --> 00:25:37,610
least yes<font color="#E5E5E5"> okay thanks definitely okay</font>

453
00:25:33,320 --> 00:25:41,780
<font color="#E5E5E5">great so yes I'm</font><font color="#CCCCCC"> sweet a quick note</font>

454
00:25:37,610 --> 00:25:43,250
about the riot so the TCP implementation

455
00:25:41,780 --> 00:25:45,320
is in the testing phase in the moment

456
00:25:43,250 --> 00:25:47,120
and it should be<font color="#E5E5E5"> released in the next</font>

457
00:25:45,320 --> 00:25:52,809
should<font color="#E5E5E5"> be in the</font><font color="#CCCCCC"> next release which is</font>

458
00:25:47,120 --> 00:25:55,280
early next year so thanks the Trinity I

459
00:25:52,809 --> 00:25:58,158
guess you're<font color="#CCCCCC"> from</font><font color="#E5E5E5"> Minnesota I one</font><font color="#CCCCCC"> of the</font>

460
00:25:55,280 --> 00:26:00,260
coachella<font color="#CCCCCC"> TCP and working group so um I</font>

461
00:25:58,159 --> 00:26:02,179
wondering you know addressing no comment

462
00:26:00,260 --> 00:26:03,919
<font color="#CCCCCC">Marquez comment is ok but somehow you</font>

463
00:26:02,179 --> 00:26:06,590
know do we continuously debut in the

464
00:26:03,919 --> 00:26:11,630
drug from<font color="#CCCCCC"> TCPS point of tcp in this</font>

465
00:26:06,590 --> 00:26:12,709
point is any ID so description again so

466
00:26:11,630 --> 00:26:14,899
lie

467
00:26:12,710 --> 00:26:16,850
ma if this document gets adopted here I

468
00:26:14,899 --> 00:26:19,459
would<font color="#E5E5E5"> really like to run the working of</font>

469
00:26:16,850 --> 00:26:21,020
glass calls on both the group's doesn't

470
00:26:19,460 --> 00:26:23,750
make sense so like you know you won't

471
00:26:21,020 --> 00:26:25,668
have any<font color="#CCCCCC"> sink for a little bit right but</font>

472
00:26:23,750 --> 00:26:26,840
when<font color="#CCCCCC"> the document the when the voting</font>

473
00:26:25,669 --> 00:26:28,730
group feels the document is ready we

474
00:26:26,840 --> 00:26:31,870
gonna bring it back to TC p.m. to check

475
00:26:28,730 --> 00:26:34,880
if everything still<font color="#CCCCCC"> okay okay thank you</font>

476
00:26:31,870 --> 00:26:36,860
yes I<font color="#E5E5E5"> think we have the</font><font color="#CCCCCC"> Nullah example</font>

477
00:26:34,880 --> 00:26:40,549
that we can then from 4 p-7 there is a

478
00:26:36,860 --> 00:26:43,100
TCP queuing for the<font color="#CCCCCC"> HTTP</font><font color="#E5E5E5"> working go for</font>

479
00:26:40,549 --> 00:26:45,799
HTTP draft which is actually handled and

480
00:26:43,100 --> 00:26:47,658
in the HTTP<font color="#E5E5E5"> piece working group but</font>

481
00:26:45,799 --> 00:26:50,418
actually asking the<font color="#E5E5E5"> NASCAR is also</font>

482
00:26:47,659 --> 00:26:52,730
handling on both working groups so I

483
00:26:50,419 --> 00:26:56,799
think<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> a pre experience on that</font>

484
00:26:52,730 --> 00:27:00,649
so we can just follow the examples there

485
00:26:56,799 --> 00:27:02,600
so uh at least<font color="#E5E5E5"> I can ask how many people</font>

486
00:27:00,649 --> 00:27:09,408
how to read any wersching of this draft

487
00:27:02,600 --> 00:27:16,010
uh yeah about ten good any people want

488
00:27:09,409 --> 00:27:22,850
to continue with you this draft<font color="#E5E5E5"> okay 55</font>

489
00:27:16,010 --> 00:27:28,029
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> Curry County six great so let's</font>

490
00:27:22,850 --> 00:27:34,480
handle<font color="#E5E5E5"> to list</font><font color="#CCCCCC"> okay good play thank you</font>

491
00:27:28,029 --> 00:27:34,480
next talk is mohit please be quick

492
00:27:54,830 --> 00:28:00,050
okay so

493
00:27:57,650 --> 00:28:02,270
<font color="#E5E5E5">run</font><font color="#CCCCCC"> I'm Mohit and i'll be presenting our</font>

494
00:28:00,050 --> 00:28:04,520
draft on practical experiences with

495
00:28:02,270 --> 00:28:07,370
public key cryptography on 8-bit

496
00:28:04,520 --> 00:28:09,620
microprocessors and this was work done

497
00:28:07,370 --> 00:28:13,399
together with my co-authors GRE re and

498
00:28:09,620 --> 00:28:16,610
haydee so I I did present this draft in

499
00:28:13,400 --> 00:28:19,610
in Berlin but just<font color="#E5E5E5"> for the benefit of</font>

500
00:28:16,610 --> 00:28:21,679
those of you who are not there I'll very

501
00:28:19,610 --> 00:28:25,729
briefly and quickly go through what what

502
00:28:21,680 --> 00:28:28,130
the draft is all about so our goal for

503
00:28:25,730 --> 00:28:30,050
<font color="#CCCCCC">this work was to see how hard it is to</font>

504
00:28:28,130 --> 00:28:32,720
do public key cryptography on very small

505
00:28:30,050 --> 00:28:35,330
devices so we wanted to<font color="#E5E5E5"> see three things</font>

506
00:28:32,720 --> 00:28:38,630
so as as a developer what kind of

507
00:28:35,330 --> 00:28:40,490
libraries I have are they easily

508
00:28:38,630 --> 00:28:43,670
available is there some open source

509
00:28:40,490 --> 00:28:46,850
libraries available are and so on then

510
00:28:43,670 --> 00:28:48,950
then the next goal was how hard it is to

511
00:28:46,850 --> 00:28:50,870
actually use them so how much hacking

512
00:28:48,950 --> 00:28:53,900
does it require from from me as a

513
00:28:50,870 --> 00:28:55,459
developer and and once that is done it's

514
00:28:53,900 --> 00:28:58,670
up and running what kind of performance

515
00:28:55,460 --> 00:29:00,650
<font color="#E5E5E5">can I get so what kind of performance</font>

516
00:28:58,670 --> 00:29:03,620
numbers can I expect from from these

517
00:29:00,650 --> 00:29:06,440
libraries so for<font color="#E5E5E5"> all the work that we</font>

518
00:29:03,620 --> 00:29:09,860
did we used arduino mega bored it has a

519
00:29:06,440 --> 00:29:12,920
atmel 2560 processor so<font color="#E5E5E5"> it's 8-bit</font>

520
00:29:09,860 --> 00:29:17,780
processor has about 8 kilobytes of RAM

521
00:29:12,920 --> 00:29:20,750
in total so yeah so the first thing<font color="#E5E5E5"> that</font>

522
00:29:17,780 --> 00:29:23,690
we did was see the<font color="#E5E5E5"> performance of RSA</font>

523
00:29:20,750 --> 00:29:25,640
and and no surprises there for smaller

524
00:29:23,690 --> 00:29:29,590
key sizes you were able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font>

525
00:29:25,640 --> 00:29:32,030
reasonable performance but for anything

526
00:29:29,590 --> 00:29:35,270
for four biggest key sizes the

527
00:29:32,030 --> 00:29:37,399
performance was was undies undesirably

528
00:29:35,270 --> 00:29:40,520
slow so you you<font color="#CCCCCC"> wouldn't probably use</font>

529
00:29:37,400 --> 00:29:44,350
that and it took quite a while and<font color="#CCCCCC"> a lot</font>

530
00:29:40,520 --> 00:29:47,150
<font color="#E5E5E5">of memory to to do RSA for reasonable a</font>

531
00:29:44,350 --> 00:29:49,120
key size that you would use<font color="#E5E5E5"> so something</font>

532
00:29:47,150 --> 00:29:51,650
like 2048 which is what is recommended

533
00:29:49,120 --> 00:29:53,659
the execution time was so large that

534
00:29:51,650 --> 00:29:57,140
probably you won't want<font color="#E5E5E5"> to use it</font><font color="#CCCCCC"> in in</font>

535
00:29:53,660 --> 00:29:58,670
any real scenario and then we found for

536
00:29:57,140 --> 00:30:00,620
libraries that the elliptic curve

537
00:29:58,670 --> 00:30:02,240
cryptography in particular we looked at

538
00:30:00,620 --> 00:30:05,449
elliptic curve digital signature

539
00:30:02,240 --> 00:30:07,940
algorithm and again no surprises here

540
00:30:05,450 --> 00:30:10,520
elliptic curves perform much faster than

541
00:30:07,940 --> 00:30:11,539
RSA use smaller key sizes smaller

542
00:30:10,520 --> 00:30:14,570
signatures

543
00:30:11,539 --> 00:30:17,389
and one interesting<font color="#CCCCCC"> thing to note was</font>

544
00:30:14,570 --> 00:30:19,158
that if<font color="#E5E5E5"> you really you know get down to</font>

545
00:30:17,389 --> 00:30:20,869
implementing things on these small

546
00:30:19,159 --> 00:30:24,200
devices you can actually<font color="#CCCCCC"> do a lot of</font>

547
00:30:20,869 --> 00:30:28,549
thing so for example<font color="#E5E5E5"> for one of the</font>

548
00:30:24,200 --> 00:30:31,129
curves some of the math was implemented

549
00:30:28,549 --> 00:30:33,470
in assembly there was for<font color="#E5E5E5"> that 8-bit</font>

550
00:30:31,129 --> 00:30:36,019
microprocessor and<font color="#CCCCCC"> you were able to do</font>

551
00:30:33,470 --> 00:30:39,190
signature hash the message and sign it

552
00:30:36,019 --> 00:30:42,289
<font color="#CCCCCC">within 2 61</font><font color="#E5E5E5"> milliseconds which for many</font>

553
00:30:39,190 --> 00:30:44,330
IOT devices<font color="#E5E5E5"> to 61 milliseconds is</font>

554
00:30:42,289 --> 00:30:47,690
reasonable performance and this was

555
00:30:44,330 --> 00:30:50,149
within 33 thousand bytes of<font color="#E5E5E5"> RAM so you</font>

556
00:30:47,690 --> 00:30:55,489
can get reasonable performance even even

557
00:30:50,149 --> 00:30:58,719
on the small smallest devices then of

558
00:30:55,489 --> 00:31:02,149
course<font color="#CCCCCC"> now that I</font><font color="#E5E5E5"> RTF is working on on</font>

559
00:30:58,720 --> 00:31:03,889
specifying new<font color="#E5E5E5"> Edwards curve digital</font>

560
00:31:02,149 --> 00:31:06,619
signature algorithm and I think this is

561
00:31:03,889 --> 00:31:07,879
what is<font color="#CCCCCC"> recommended for for IOT devices</font>

562
00:31:06,619 --> 00:31:11,840
when they are implementing new

563
00:31:07,879 --> 00:31:13,399
applications and we found again like two

564
00:31:11,840 --> 00:31:16,428
libraries are available in the public

565
00:31:13,399 --> 00:31:20,748
domain<font color="#CCCCCC"> knakal and my Chronicle and they</font>

566
00:31:16,429 --> 00:31:23,450
<font color="#CCCCCC">they do performance on the</font><font color="#E5E5E5"> same bored</font>

567
00:31:20,749 --> 00:31:25,279
and and you can do signing in about one

568
00:31:23,450 --> 00:31:28,639
and a half seconds<font color="#E5E5E5"> and verification of</font>

569
00:31:25,279 --> 00:31:31,519
signatures in about two seconds so again

570
00:31:28,639 --> 00:31:33,379
depending on your use case and it might

571
00:31:31,519 --> 00:31:35,119
be<font color="#CCCCCC"> too slow or it might be reasonable</font>

572
00:31:33,379 --> 00:31:37,189
performance so if you<font color="#CCCCCC"> think of a sensor</font>

573
00:31:35,119 --> 00:31:40,369
that wakes up once in a while and<font color="#E5E5E5"> sense</font>

574
00:31:37,190 --> 00:31:42,979
assigned update maybe this is maybe<font color="#E5E5E5"> this</font>

575
00:31:40,369 --> 00:31:44,809
is<font color="#E5E5E5"> acceptable and of</font><font color="#CCCCCC"> course like if you</font>

576
00:31:42,979 --> 00:31:46,820
really want to reduce it further

577
00:31:44,809 --> 00:31:49,158
probably if you implement things in

578
00:31:46,820 --> 00:31:53,450
assembly you can<font color="#E5E5E5"> probably even reduce</font>

579
00:31:49,159 --> 00:31:55,549
these numbers further so the<font color="#CCCCCC"> reason why</font>

580
00:31:53,450 --> 00:31:57,440
we wanted to<font color="#E5E5E5"> do it was we wanted to</font>

581
00:31:55,549 --> 00:32:00,168
<font color="#E5E5E5">build an example application where you</font>

582
00:31:57,440 --> 00:32:02,479
wake up once in a while and send<font color="#E5E5E5"> a</font>

583
00:32:00,169 --> 00:32:04,909
<font color="#E5E5E5">signed update to the proxy so instead</font><font color="#CCCCCC"> of</font>

584
00:32:02,479 --> 00:32:06,710
instead of this sensor device acting as

585
00:32:04,909 --> 00:32:08,840
a server the sensor device actually

586
00:32:06,710 --> 00:32:11,119
sends<font color="#E5E5E5"> a signed update to the proxy and</font>

587
00:32:08,840 --> 00:32:13,369
any client that is interested in the

588
00:32:11,119 --> 00:32:16,070
<font color="#E5E5E5">data will go and then fetch it from from</font>

589
00:32:13,369 --> 00:32:17,809
the mirror proxy and you would still<font color="#E5E5E5"> get</font>

590
00:32:16,070 --> 00:32:19,970
end-to-end data authenticity and

591
00:32:17,809 --> 00:32:23,450
integrity so we implemented this whole

592
00:32:19,970 --> 00:32:25,250
application on the<font color="#E5E5E5"> same platform and</font>

593
00:32:23,450 --> 00:32:28,640
here<font color="#CCCCCC"> are some number</font>

594
00:32:25,250 --> 00:32:30,860
so implementing co-op implementing all

595
00:32:28,640 --> 00:32:33,230
the crypto implementing all the UDP

596
00:32:30,860 --> 00:32:37,459
everything was less<font color="#CCCCCC"> than five thousand</font>

597
00:32:33,230 --> 00:32:40,250
bytes and yeah I mean we didn't<font color="#E5E5E5"> really</font>

598
00:32:37,460 --> 00:32:42,470
try to<font color="#E5E5E5"> optimize the flash memory</font>

599
00:32:40,250 --> 00:32:44,270
consumption but if you want<font color="#E5E5E5"> to you could</font>

600
00:32:42,470 --> 00:32:49,550
probably get rid<font color="#E5E5E5"> of lot of lines of code</font>

601
00:32:44,270 --> 00:32:51,889
even even there so what we learned well

602
00:32:49,550 --> 00:32:54,560
the<font color="#E5E5E5"> first thing was that we chose this</font>

603
00:32:51,890 --> 00:32:56,480
platform was on purpose it was

604
00:32:54,560 --> 00:32:58,399
unnecessarily restrictive so what we

605
00:32:56,480 --> 00:33:01,370
wanted to show was that<font color="#E5E5E5"> if you can do it</font>

606
00:32:58,400 --> 00:33:03,380
on a 8-bit device you can for surely do

607
00:33:01,370 --> 00:33:06,350
it much more easily on a 16-bit and<font color="#E5E5E5"> a</font>

608
00:33:03,380 --> 00:33:08,690
32-bit microprocessor and just because

609
00:33:06,350 --> 00:33:11,090
of economies of scale probably you would

610
00:33:08,690 --> 00:33:12,920
use a 32-bit processor because they are

611
00:33:11,090 --> 00:33:16,310
actually<font color="#E5E5E5"> cheaper than then they'd wit</font>

612
00:33:12,920 --> 00:33:18,080
devices these days the<font color="#CCCCCC"> next thing was it</font>

613
00:33:16,310 --> 00:33:21,040
it's actually<font color="#CCCCCC"> may</font><font color="#E5E5E5"> it actually makes</font>

614
00:33:18,080 --> 00:33:24,230
sense<font color="#CCCCCC"> to do computation on the processor</font>

615
00:33:21,040 --> 00:33:26,780
because it consumes more energy to turn

616
00:33:24,230 --> 00:33:28,790
on the<font color="#CCCCCC"> radio and send packets on the</font>

617
00:33:26,780 --> 00:33:31,340
radio and there is no reason<font color="#CCCCCC"> why you</font>

618
00:33:28,790 --> 00:33:33,200
wouldn't choose a platform that that

619
00:33:31,340 --> 00:33:38,510
lets you do the security<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you need</font>

620
00:33:33,200 --> 00:33:41,300
so yeah then the draft has like lot of

621
00:33:38,510 --> 00:33:43,690
details on feasibility of public key

622
00:33:41,300 --> 00:33:46,430
crypto how do you do message freshness

623
00:33:43,690 --> 00:33:49,220
if the sensor only wakes up once in a

624
00:33:46,430 --> 00:33:51,440
while and cents cents a message sign

625
00:33:49,220 --> 00:33:53,330
message how do you protect against

626
00:33:51,440 --> 00:33:55,730
replay attacks so how do you still use

627
00:33:53,330 --> 00:33:57,199
sequence numbers or<font color="#E5E5E5"> timestamps and</font>

628
00:33:55,730 --> 00:33:59,630
things like that especially in this

629
00:33:57,200 --> 00:34:03,080
unidirectional communication there's

630
00:33:59,630 --> 00:34:04,970
discussion on a symmetric key verses

631
00:34:03,080 --> 00:34:07,220
asymmetric crypto and whether you<font color="#E5E5E5"> do</font>

632
00:34:04,970 --> 00:34:08,690
<font color="#CCCCCC">krypton Link Network transport or</font>

633
00:34:07,220 --> 00:34:11,570
application layer and what are the

634
00:34:08,690 --> 00:34:13,129
trade-offs and whether you<font color="#E5E5E5"> do it on one</font>

635
00:34:11,570 --> 00:34:16,100
<font color="#CCCCCC">of the layers or all of the layers and</font>

636
00:34:13,129 --> 00:34:18,110
how does it combined so I I won't go

637
00:34:16,100 --> 00:34:22,790
into the details<font color="#E5E5E5"> but come to what has</font>

638
00:34:18,110 --> 00:34:24,590
changed since the last version so in the

639
00:34:22,790 --> 00:34:27,590
ITF in<font color="#E5E5E5"> Berlin we had a working group</font>

640
00:34:24,590 --> 00:34:28,879
<font color="#CCCCCC">reduction call in the group and there</font>

641
00:34:27,590 --> 00:34:31,129
was interest and this was later

642
00:34:28,879 --> 00:34:32,870
confirmed on the mailing list I got a

643
00:34:31,129 --> 00:34:35,060
lot of feedback boats on the<font color="#E5E5E5"> mailing</font>

644
00:34:32,870 --> 00:34:37,909
list and off the mailing lists out Thank

645
00:34:35,060 --> 00:34:38,500
Akbar Rahul Daniels John a vegan friends

646
00:34:37,909 --> 00:34:43,090
Owen

647
00:34:38,500 --> 00:34:45,070
endre one big reference was to this<font color="#CCCCCC"> DTLS</font>

648
00:34:43,090 --> 00:34:48,580
group keys and we have removed that

649
00:34:45,070 --> 00:34:50,500
reference so there was a mistake on our

650
00:34:48,580 --> 00:34:52,989
part from<font color="#CCCCCC"> the author so that</font><font color="#E5E5E5"> reference</font>

651
00:34:50,500 --> 00:34:54,909
<font color="#E5E5E5">is</font><font color="#CCCCCC"> it's removed there was a ton of</font>

652
00:34:52,989 --> 00:34:57,850
editorial<font color="#CCCCCC"> suggestions so we have fixed</font>

653
00:34:54,909 --> 00:34:59,320
<font color="#E5E5E5">that also we refer</font><font color="#CCCCCC"> to the mirror proxy</font>

654
00:34:57,850 --> 00:35:01,390
draft and it would probably<font color="#E5E5E5"> make sense</font>

655
00:34:59,320 --> 00:35:05,650
to update it with the pub sub broker

656
00:35:01,390 --> 00:35:07,870
draft so that that we would do then

657
00:35:05,650 --> 00:35:10,510
another comment we got was we show<font color="#CCCCCC"> a lot</font>

658
00:35:07,870 --> 00:35:13,270
<font color="#E5E5E5">of numbers for four key sizes that are</font>

659
00:35:10,510 --> 00:35:15,850
not<font color="#E5E5E5"> necessarily secure and that</font><font color="#CCCCCC"> is just</font>

660
00:35:13,270 --> 00:35:18,520
done to give you a perspective or more

661
00:35:15,850 --> 00:35:21,310
of a reference<font color="#CCCCCC"> so at no point do we</font>

662
00:35:18,520 --> 00:35:24,190
recommend using<font color="#E5E5E5"> anything that's not</font>

663
00:35:21,310 --> 00:35:26,020
secure and we already<font color="#CCCCCC"> do state that but</font>

664
00:35:24,190 --> 00:35:28,930
we will state that even more explicitly

665
00:35:26,020 --> 00:35:30,580
so don't use smaller key sizes those are

666
00:35:28,930 --> 00:35:34,180
<font color="#E5E5E5">just there to give you an idea of how</font>

667
00:35:30,580 --> 00:35:37,299
fast and slow is it based<font color="#E5E5E5"> on the key</font>

668
00:35:34,180 --> 00:35:40,419
size so of course<font color="#E5E5E5"> the author thinks that</font>

669
00:35:37,300 --> 00:35:43,150
it's ready<font color="#E5E5E5"> for working group last call</font>

670
00:35:40,420 --> 00:35:46,390
but we need like a<font color="#E5E5E5"> couple of thorough</font>

671
00:35:43,150 --> 00:35:59,350
reviews<font color="#E5E5E5"> to to iron out any minor issues</font>

672
00:35:46,390 --> 00:36:01,960
that remain yeah custom<font color="#E5E5E5"> Owen um we're</font>

673
00:35:59,350 --> 00:36:04,900
seeing all these faster<font color="#CCCCCC"> cpus but I think</font>

674
00:36:01,960 --> 00:36:06,670
one one other interesting thing<font color="#CCCCCC"> that has</font>

675
00:36:04,900 --> 00:36:09,430
<font color="#CCCCCC">been happening in the last couple of</font>

676
00:36:06,670 --> 00:36:15,250
years or three years is we are seeing

677
00:36:09,430 --> 00:36:19,180
much lower power radios so i'm<font color="#E5E5E5"> not</font><font color="#CCCCCC"> sure</font>

678
00:36:15,250 --> 00:36:24,970
that the the conventional wisdom which

679
00:36:19,180 --> 00:36:29,730
was avoid radio usage at any cost you

680
00:36:24,970 --> 00:36:32,259
can use a lot of computation<font color="#CCCCCC"> for that</font>

681
00:36:29,730 --> 00:36:35,680
whether that isn't actually shifting

682
00:36:32,260 --> 00:36:38,320
back a little bit so<font color="#E5E5E5"> i think it would be</font>

683
00:36:35,680 --> 00:36:41,440
nice to have<font color="#E5E5E5"> some some more more current</font>

684
00:36:38,320 --> 00:36:43,030
numbers on this<font color="#E5E5E5"> i think most of the</font>

685
00:36:41,440 --> 00:36:48,550
numbers we have on this are with with

686
00:36:43,030 --> 00:36:49,890
2005 style radios and people have we

687
00:36:48,550 --> 00:36:52,610
been

688
00:36:49,890 --> 00:36:56,759
very good at reducing the power

689
00:36:52,610 --> 00:37:00,120
requirements of<font color="#CCCCCC"> radios recently so</font>

690
00:36:56,760 --> 00:37:02,280
dating numbers would help or do you

691
00:37:00,120 --> 00:37:04,890
think<font color="#CCCCCC"> we should</font><font color="#E5E5E5"> so I'm asking you for</font>

692
00:37:02,280 --> 00:37:07,590
suggestions is it numbers or do we tone

693
00:37:04,890 --> 00:37:09,870
down or do we say that it might<font color="#E5E5E5"> be</font>

694
00:37:07,590 --> 00:37:12,330
faster<font color="#CCCCCC"> than then sending packets on the</font>

695
00:37:09,870 --> 00:37:15,480
radio in some cases but<font color="#E5E5E5"> not all cases or</font>

696
00:37:12,330 --> 00:37:17,670
so what kind of radios would it<font color="#E5E5E5"> be I'd</font>

697
00:37:15,480 --> 00:37:22,680
rather<font color="#E5E5E5"> send a packet then ended my cpu</font>

698
00:37:17,670 --> 00:37:24,960
run for two seconds<font color="#CCCCCC"> okay so there is a</font>

699
00:37:22,680 --> 00:37:30,089
trade-off there and then the old wisdom

700
00:37:24,960 --> 00:37:32,760
was it's almost always a better to avoid

701
00:37:30,090 --> 00:37:34,770
sending a packet and that is getting<font color="#E5E5E5"> a</font>

702
00:37:32,760 --> 00:37:37,920
little bit different so having numbers

703
00:37:34,770 --> 00:37:41,070
for that would be great<font color="#E5E5E5"> but maybe if we</font>

704
00:37:37,920 --> 00:37:43,440
don't have that just saying that tone it

705
00:37:41,070 --> 00:37:46,190
down a baby the conventional wisdom<font color="#CCCCCC"> is</font>

706
00:37:43,440 --> 00:37:49,890
being modified a little bit by a recent

707
00:37:46,190 --> 00:37:51,990
chips would also<font color="#E5E5E5"> be useful sure is it is</font>

708
00:37:49,890 --> 00:37:54,029
there any particular radio that you want

709
00:37:51,990 --> 00:37:56,490
us to look I mean not not just for this

710
00:37:54,030 --> 00:37:59,730
<font color="#E5E5E5">raft but for me like personally to know</font>

711
00:37:56,490 --> 00:38:01,740
like the experiment in future like I

712
00:37:59,730 --> 00:38:04,410
have played around with zig be on the

713
00:38:01,740 --> 00:38:09,959
same board but I mean those are still

714
00:38:04,410 --> 00:38:11,609
like old zippy radios often on chips

715
00:38:09,960 --> 00:38:15,510
that have been designed to in here's ago

716
00:38:11,610 --> 00:38:17,610
so yeah I kick it<font color="#CCCCCC"> I can look up with a</font>

717
00:38:15,510 --> 00:38:21,420
shark in<font color="#E5E5E5"> fucka</font><font color="#CCCCCC"> okay but thanks for the</font>

718
00:38:17,610 --> 00:38:23,880
suggestion so anyone else who<font color="#E5E5E5"> wants to</font>

719
00:38:21,420 --> 00:38:26,730
<font color="#E5E5E5">review the draft please I'm happy</font><font color="#CCCCCC"> to</font>

720
00:38:23,880 --> 00:38:32,910
receive feedback before this goes into

721
00:38:26,730 --> 00:38:35,730
last call yes any any<font color="#E5E5E5"> expert to view the</font>

722
00:38:32,910 --> 00:38:38,149
drafts if we head for a walking boob

723
00:38:35,730 --> 00:38:38,150
<font color="#CCCCCC">lasko</font>

724
00:38:42,160 --> 00:38:48,040
I just have to arm twist them into

725
00:38:44,260 --> 00:38:55,590
sending their reviews probably they have

726
00:38:48,040 --> 00:38:58,270
<font color="#E5E5E5">already into that hell I'll ask again</font>

727
00:38:55,590 --> 00:39:00,520
okay so yeah we will<font color="#E5E5E5"> ask her on the list</font>

728
00:38:58,270 --> 00:39:04,990
we don't want to be sad and during the

729
00:39:00,520 --> 00:39:23,110
war you must call yep okay thank<font color="#E5E5E5"> you so</font>

730
00:39:04,990 --> 00:39:23,890
it's rock we shorten so this is another

731
00:39:23,110 --> 00:39:26,410
charter

732
00:39:23,890 --> 00:39:31,470
but i<font color="#E5E5E5"> think that the scope the</font><font color="#CCCCCC"> work is</font>

733
00:39:26,410 --> 00:39:31,470
related<font color="#E5E5E5"> to implementation experience and</font>

734
00:39:31,619 --> 00:39:37,990
guidance stuff so that's why we we heard

735
00:39:35,079 --> 00:39:40,329
this talk no I'm Rahul shadow from

736
00:39:37,990 --> 00:39:44,200
Huawei and the presentation<font color="#CCCCCC"> is about</font>

737
00:39:40,329 --> 00:39:45,970
neighbor management policies<font color="#E5E5E5"> no there</font>

738
00:39:44,200 --> 00:39:47,500
has been some discussion that happened

739
00:39:45,970 --> 00:39:50,019
on mailing<font color="#CCCCCC"> lists on roll mailing lists</font>

740
00:39:47,500 --> 00:39:53,260
as soon you know if the node density is

741
00:39:50,019 --> 00:39:55,899
higher how do you control the neighbor

742
00:39:53,260 --> 00:39:59,559
<font color="#E5E5E5">cache or the neighbor neighbor table so</font>

743
00:39:55,900 --> 00:40:01,450
what this presentation describes is how

744
00:39:59,559 --> 00:40:04,480
is it handled currently in different

745
00:40:01,450 --> 00:40:08,288
open sources some literature analysis as

746
00:40:04,480 --> 00:40:10,539
in what does the literature say and what

747
00:40:08,289 --> 00:40:15,220
we eventually ended<font color="#E5E5E5"> up doing in one of</font>

748
00:40:10,539 --> 00:40:17,500
our practical deployments so the

749
00:40:15,220 --> 00:40:20,410
challenge is that<font color="#E5E5E5"> the network size can</font>

750
00:40:17,500 --> 00:40:22,029
be huge<font color="#E5E5E5"> and even though the network size</font>

751
00:40:20,410 --> 00:40:23,680
is ug there is some control over the

752
00:40:22,029 --> 00:40:25,569
maximum<font color="#CCCCCC"> number of devices</font><font color="#E5E5E5"> that can be</font>

753
00:40:23,680 --> 00:40:27,129
<font color="#CCCCCC">connected in the network or can be</font>

754
00:40:25,569 --> 00:40:29,769
attached in the network but there<font color="#E5E5E5"> is</font>

755
00:40:27,130 --> 00:40:32,079
absolutely no control over the maximum

756
00:40:29,769 --> 00:40:36,098
density the node density varies from

757
00:40:32,079 --> 00:40:39,160
deployment to deployment if you if you

758
00:40:36,099 --> 00:40:41,529
<font color="#E5E5E5">keep a neighbor cache of 30 entries well</font>

759
00:40:39,160 --> 00:40:43,660
if the neighbor node density is 100 then

760
00:40:41,529 --> 00:40:46,680
it's<font color="#E5E5E5"> going to overflow for sure in that</font>

761
00:40:43,660 --> 00:40:49,299
case which<font color="#E5E5E5"> are the best entries to evict</font>

762
00:40:46,680 --> 00:40:52,000
now that is the<font color="#CCCCCC"> decision that an</font><font color="#E5E5E5"> n play</font>

763
00:40:49,299 --> 00:40:53,529
<font color="#E5E5E5">and implementation has to take now there</font>

764
00:40:52,000 --> 00:40:56,950
is one sample policy that we have

765
00:40:53,529 --> 00:40:58,150
described<font color="#E5E5E5"> in this presentation so some</font>

766
00:40:56,950 --> 00:41:00,250
of the current neighbor management

767
00:40:58,150 --> 00:41:03,339
techniques or policies that are followed

768
00:41:00,250 --> 00:41:05,980
for example by quantity<font color="#CCCCCC"> Quantic uses</font>

769
00:41:03,339 --> 00:41:10,240
least eviction policy of removing the

770
00:41:05,980 --> 00:41:12,309
least recently used entry so the<font color="#CCCCCC"> the</font>

771
00:41:10,240 --> 00:41:15,308
biggest<font color="#CCCCCC"> problem with this is you will</font>

772
00:41:12,309 --> 00:41:17,140
get or you might get route that route

773
00:41:15,309 --> 00:41:20,079
down time so the traffic will be

774
00:41:17,140 --> 00:41:23,019
impacted if the node density is higher

775
00:41:20,079 --> 00:41:25,180
than<font color="#CCCCCC"> the neighbor cache size riot riot</font>

776
00:41:23,019 --> 00:41:26,640
does it on first<font color="#E5E5E5"> come first serve basis</font>

777
00:41:25,180 --> 00:41:29,529
the problem with this approach is

778
00:41:26,640 --> 00:41:32,440
typically in a in a wireless network<font color="#CCCCCC"> you</font>

779
00:41:29,529 --> 00:41:33,880
have diu<font color="#CCCCCC"> storm now for the sake of this</font>

780
00:41:32,440 --> 00:41:36,670
presentation I am going to make use of

781
00:41:33,880 --> 00:41:37,680
our pure ripple oriented network or

782
00:41:36,670 --> 00:41:40,650
ripple based near

783
00:41:37,680 --> 00:41:42,839
routing protocol and a key management

784
00:41:40,650 --> 00:41:44,640
protocol also<font color="#E5E5E5"> so we take a holistic</font>

785
00:41:42,839 --> 00:41:49,170
approach towards solving this neighbor

786
00:41:44,640 --> 00:41:50,640
management protocol<font color="#E5E5E5"> ec so what is the</font>

787
00:41:49,170 --> 00:41:53,300
expectation of the<font color="#E5E5E5"> neighbor management</font>

788
00:41:50,640 --> 00:41:56,089
policy eventually so it's expected that

789
00:41:53,300 --> 00:41:59,250
yeah you will end up<font color="#E5E5E5"> in a suboptimal</font>

790
00:41:56,089 --> 00:42:00,480
behavior or sub optimal performance but

791
00:41:59,250 --> 00:42:02,430
it should be<font color="#E5E5E5"> there should be some</font>

792
00:42:00,480 --> 00:42:03,809
deterministic way of you know allowing

793
00:42:02,430 --> 00:42:08,460
all the routes to be<font color="#E5E5E5"> established in the</font>

794
00:42:03,809 --> 00:42:09,960
network finally so the the expectation

795
00:42:08,460 --> 00:42:12,180
is<font color="#E5E5E5"> that finally the network should be</font>

796
00:42:09,960 --> 00:42:16,170
<font color="#CCCCCC">form so</font><font color="#E5E5E5"> currently it's very difficult in</font>

797
00:42:12,180 --> 00:42:18,180
quantity or have not I've<font color="#E5E5E5"> only reviewed</font>

798
00:42:16,170 --> 00:42:20,480
the code of riot but in quantity<font color="#CCCCCC"> it's</font>

799
00:42:18,180 --> 00:42:22,740
not possible to have a node density

800
00:42:20,480 --> 00:42:26,690
which is higher than the<font color="#E5E5E5"> neighbor cache</font>

801
00:42:22,740 --> 00:42:29,669
table so some of the literature

802
00:42:26,690 --> 00:42:31,079
literature analysis that I did so most

803
00:42:29,670 --> 00:42:33,390
of<font color="#E5E5E5"> the literature talks about the link</font>

804
00:42:31,079 --> 00:42:36,750
estimation techniques so how do you

805
00:42:33,390 --> 00:42:38,368
compare the link quality of two

806
00:42:36,750 --> 00:42:40,440
<font color="#E5E5E5">neighbors and then prioritize one</font>

807
00:42:38,369 --> 00:42:44,670
neighbor over other other but in case of

808
00:42:40,440 --> 00:42:47,160
<font color="#E5E5E5">dense deployment this will seldom come</font>

809
00:42:44,670 --> 00:42:49,049
into picture because the well the

810
00:42:47,160 --> 00:42:50,848
network is dense all the neighbors<font color="#CCCCCC"> are</font>

811
00:42:49,049 --> 00:42:53,339
close to<font color="#CCCCCC"> each other so the signal</font>

812
00:42:50,849 --> 00:42:55,410
quality is going to be good anyways so

813
00:42:53,339 --> 00:42:57,359
it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> only about the link estimation</font>

814
00:42:55,410 --> 00:43:03,269
per<font color="#E5E5E5"> say here but also about prioritizing</font>

815
00:42:57,359 --> 00:43:05,249
the neighbors so

816
00:43:03,269 --> 00:43:07,859
probably seen more a little bit faster

817
00:43:05,249 --> 00:43:11,368
<font color="#CCCCCC">to Lee some time for discussion oh sure</font>

818
00:43:07,859 --> 00:43:13,529
sure all right I'll try<font color="#E5E5E5"> to so so we try</font>

819
00:43:11,369 --> 00:43:16,140
<font color="#E5E5E5">to take a holistic approach here we</font>

820
00:43:13,529 --> 00:43:18,929
tried neighbor management policy in

821
00:43:16,140 --> 00:43:20,999
context to a ripple based network plus

822
00:43:18,929 --> 00:43:24,119
the<font color="#CCCCCC"> panna based k authentic</font><font color="#E5E5E5"> key</font>

823
00:43:20,999 --> 00:43:26,819
management protocol so so essentially we

824
00:43:24,119 --> 00:43:29,729
we<font color="#CCCCCC"> used expand our mechanism for key</font>

825
00:43:26,819 --> 00:43:31,979
management which is used by wisin so the

826
00:43:29,729 --> 00:43:35,729
deployment the deployment that we have

827
00:43:31,979 --> 00:43:38,038
targeted is<font color="#CCCCCC"> a mi network here so cases</font>

828
00:43:35,729 --> 00:43:40,259
now usually the neighbor the neighbor

829
00:43:38,039 --> 00:43:42,390
cache table is populated using neighbor

830
00:43:40,259 --> 00:43:43,739
discovery mechanisms such as<font color="#E5E5E5"> NS any but</font>

831
00:43:42,390 --> 00:43:46,078
in case of<font color="#E5E5E5"> constraint networks most</font>

832
00:43:43,739 --> 00:43:48,119
likely this this signaling is avoided

833
00:43:46,079 --> 00:43:50,279
and the neighbor table is popular

834
00:43:48,119 --> 00:43:52,019
populated using one of the existing

835
00:43:50,279 --> 00:43:55,589
messages from key management protocols

836
00:43:52,019 --> 00:43:57,508
for example the discovery protocol for

837
00:43:55,589 --> 00:44:00,749
key management or based on the relay

838
00:43:57,509 --> 00:44:03,859
messages ripple messages so there<font color="#E5E5E5"> are</font>

839
00:44:00,749 --> 00:44:03,859
three cases in which

840
00:44:05,100 --> 00:44:08,549
<font color="#E5E5E5">the first case in which the neighbor</font>

841
00:44:06,270 --> 00:44:10,230
table update happens is while<font color="#CCCCCC"> pyaari</font>

842
00:44:08,550 --> 00:44:12,450
selection is been done by<font color="#E5E5E5"> PSC so PA</font>

843
00:44:10,230 --> 00:44:14,400
c-span a client p re is the panera

844
00:44:12,450 --> 00:44:18,000
laylamon so there are<font color="#CCCCCC"> different names to</font>

845
00:44:14,400 --> 00:44:21,180
this<font color="#CCCCCC"> I just came from 60 and nanima</font>

846
00:44:18,000 --> 00:44:26,370
working group meetings and they call it

847
00:44:21,180 --> 00:44:28,919
join j ay and GCE join assistance and

848
00:44:26,370 --> 00:44:30,750
assistant and<font color="#E5E5E5"> join coordination element</font>

849
00:44:28,920 --> 00:44:34,020
so join coordination element essentially

850
00:44:30,750 --> 00:44:35,820
is this this is the<font color="#CCCCCC"> j j a join assistant</font>

851
00:44:34,020 --> 00:44:37,200
and I will element as it is called here

852
00:44:35,820 --> 00:44:40,140
and<font color="#E5E5E5"> this is the panic line the new</font>

853
00:44:37,200 --> 00:44:42,240
joining node so these<font color="#E5E5E5"> are the cases in</font>

854
00:44:40,140 --> 00:44:44,370
which the neighbor table updates here so

855
00:44:42,240 --> 00:44:48,660
there is an example table given over

856
00:44:44,370 --> 00:44:52,560
here for n 3 so it has four entries so

857
00:44:48,660 --> 00:44:56,700
two entries n1 and n2 are ripple parents

858
00:44:52,560 --> 00:44:58,950
and five is the<font color="#E5E5E5"> ripple direct child now</font>

859
00:44:56,700 --> 00:45:00,390
this distinguishing is this it<font color="#E5E5E5"> is very</font>

860
00:44:58,950 --> 00:45:02,460
<font color="#E5E5E5">important to distinguish this fact that</font>

861
00:45:00,390 --> 00:45:03,750
it's a direct child because only the

862
00:45:02,460 --> 00:45:05,670
neighbor entry for the direct child is

863
00:45:03,750 --> 00:45:08,610
stored so through<font color="#CCCCCC"> an five and</font><font color="#E5E5E5"> six and</font>

864
00:45:05,670 --> 00:45:10,110
seven are are going to throw n three but

865
00:45:08,610 --> 00:45:12,060
these entries and six and seven of

866
00:45:10,110 --> 00:45:15,390
course are not their own<font color="#CCCCCC"> n three so NY</font>

867
00:45:12,060 --> 00:45:18,660
is the direct child for<font color="#E5E5E5"> n 3 and the</font>

868
00:45:15,390 --> 00:45:21,029
state for pack or the<font color="#CCCCCC"> connect land is</font>

869
00:45:18,660 --> 00:45:23,040
authentication in progress so this relay

870
00:45:21,030 --> 00:45:25,710
element at any point of time does not

871
00:45:23,040 --> 00:45:27,779
know the state at which the

872
00:45:25,710 --> 00:45:29,010
authentication signaling is it so it

873
00:45:27,780 --> 00:45:31,770
does not<font color="#E5E5E5"> know whether the authentication</font>

874
00:45:29,010 --> 00:45:34,440
is completed is it in is it in isn't it

875
00:45:31,770 --> 00:45:37,160
access phase or join face it's not aware

876
00:45:34,440 --> 00:45:37,160
of that at all

877
00:45:38,589 --> 00:45:42,609
so the insertion so what are the

878
00:45:41,289 --> 00:45:44,079
different neighbor management operations

879
00:45:42,609 --> 00:45:46,089
that have to be done insertion eviction

880
00:45:44,079 --> 00:45:48,219
and reinforcement so insertion how do

881
00:45:46,089 --> 00:45:49,808
you insert<font color="#CCCCCC"> the simple logic of the table</font>

882
00:45:48,219 --> 00:45:52,450
space is available you insert<font color="#CCCCCC"> the</font>

883
00:45:49,809 --> 00:45:54,369
neighbor entry now well that's that's

884
00:45:52,450 --> 00:45:56,968
that's going to cause problems in case

885
00:45:54,369 --> 00:45:59,259
<font color="#CCCCCC">where repulse di</font><font color="#E5E5E5"> strong is going to is</font>

886
00:45:56,969 --> 00:46:02,769
going to cause all the neighbor table

887
00:45:59,259 --> 00:46:04,839
entries to get full parent selection

888
00:46:02,769 --> 00:46:06,160
procedure may result in case of ripple

889
00:46:04,839 --> 00:46:08,319
the parent selection procedure may

890
00:46:06,160 --> 00:46:10,118
result in the<font color="#CCCCCC"> same parent been selected</font>

891
00:46:08,319 --> 00:46:12,849
by all the child nodes so in which case

892
00:46:10,119 --> 00:46:15,239
all the<font color="#CCCCCC"> Dow's will go through the same</font>

893
00:46:12,849 --> 00:46:17,769
parent so there is another problem there

894
00:46:15,239 --> 00:46:19,690
similarly the neighborhood discovery the

895
00:46:17,769 --> 00:46:20,979
PRI discoveries of the<font color="#CCCCCC"> pap</font><font color="#E5E5E5"> and I element</font>

896
00:46:19,690 --> 00:46:22,930
is covering me result in the same<font color="#CCCCCC"> PRI</font>

897
00:46:20,979 --> 00:46:27,009
<font color="#CCCCCC">been made use of by all all the pana</font>

898
00:46:22,930 --> 00:46:28,419
clients for eviction they the issue one

899
00:46:27,009 --> 00:46:31,749
of the biggest issue<font color="#E5E5E5"> with the eviction</font>

900
00:46:28,420 --> 00:46:33,849
is a routing child direct child it<font color="#CCCCCC"> is</font>

901
00:46:31,749 --> 00:46:36,669
difficult to evicted because there might

902
00:46:33,849 --> 00:46:38,109
be dependent child based on the<font color="#CCCCCC"> routing</font>

903
00:46:36,670 --> 00:46:41,920
direct charge for example in the

904
00:46:38,109 --> 00:46:43,779
previous slide we saw that if enfa is

905
00:46:41,920 --> 00:46:46,180
evicted it has direct impact on n 6 and

906
00:46:43,779 --> 00:46:50,079
n<font color="#E5E5E5"> 7 as well so it's very difficult to</font>

907
00:46:46,180 --> 00:46:52,180
edit such a such a neighbor evicting

908
00:46:50,079 --> 00:46:54,190
non-preferred parent information is

909
00:46:52,180 --> 00:46:56,859
usually possible<font color="#CCCCCC"> without much immediate</font>

910
00:46:54,190 --> 00:46:58,869
implications<font color="#E5E5E5"> so this is this is one of</font>

911
00:46:56,859 --> 00:47:01,569
<font color="#E5E5E5">the key point that is highlighted here</font>

912
00:46:58,869 --> 00:47:06,380
is that it is possible<font color="#CCCCCC"> to evict a</font>

913
00:47:01,569 --> 00:47:08,000
non-preferred pattern for example

914
00:47:06,380 --> 00:47:11,060
now one can have it the<font color="#E5E5E5"> least effective</font>

915
00:47:08,000 --> 00:47:12,980
parent entry from neighbor table the

916
00:47:11,060 --> 00:47:15,200
third<font color="#E5E5E5"> the third part is reinforcement so</font>

917
00:47:12,980 --> 00:47:16,790
you have the link estimation but you

918
00:47:15,200 --> 00:47:18,259
have to keep updating it so whenever you

919
00:47:16,790 --> 00:47:20,950
get a message<font color="#E5E5E5"> you have to keep updating</font>

920
00:47:18,260 --> 00:47:23,570
the estimation<font color="#CCCCCC"> the quality parameters so</font>

921
00:47:20,950 --> 00:47:25,160
yeah so it's it can be done based on

922
00:47:23,570 --> 00:47:26,780
whenever you get the next di message or

923
00:47:25,160 --> 00:47:31,490
any traffic packet from from the

924
00:47:26,780 --> 00:47:33,830
neighbor the other thing<font color="#CCCCCC"> is how do</font><font color="#E5E5E5"> you</font>

925
00:47:31,490 --> 00:47:35,689
how do you take back the neighbor table

926
00:47:33,830 --> 00:47:37,790
entries so how do you clear the neighbor

927
00:47:35,690 --> 00:47:39,650
table entries so one of the problem is

928
00:47:37,790 --> 00:47:41,110
there the routing<font color="#CCCCCC"> invalidation is very</font>

929
00:47:39,650 --> 00:47:44,720
important because if the routes are

930
00:47:41,110 --> 00:47:45,920
still<font color="#CCCCCC"> throughout the steel droughts may</font>

931
00:47:44,720 --> 00:47:49,189
cause major problems<font color="#E5E5E5"> with the neighbor</font>

932
00:47:45,920 --> 00:47:51,710
table entries the<font color="#E5E5E5"> pyaari neighbors now</font>

933
00:47:49,190 --> 00:47:53,660
I've mentioned this already that the P

934
00:47:51,710 --> 00:47:55,850
re neighbors the<font color="#CCCCCC"> P re by itself is</font>

935
00:47:53,660 --> 00:47:59,120
stateless it does<font color="#E5E5E5"> not keep any state</font>

936
00:47:55,850 --> 00:48:01,490
with regards to pen a client so it is<font color="#CCCCCC"> no</font>

937
00:47:59,120 --> 00:48:03,500
way possible for the<font color="#CCCCCC"> P re to know when</font>

938
00:48:01,490 --> 00:48:06,080
the authentication signal is finished so

939
00:48:03,500 --> 00:48:07,580
<font color="#CCCCCC">there</font><font color="#E5E5E5"> is no wait knows when to clear how</font>

940
00:48:06,080 --> 00:48:11,680
soon to clear the neighbor table entry

941
00:48:07,580 --> 00:48:14,630
for the corresponding entry for the pc

942
00:48:11,680 --> 00:48:17,240
now some of<font color="#CCCCCC"> the recommendations that we</font>

943
00:48:14,630 --> 00:48:20,330
have done or you know some of the

944
00:48:17,240 --> 00:48:24,229
observations that<font color="#CCCCCC"> we had is it's better</font>

945
00:48:20,330 --> 00:48:26,720
that to reserve route make a<font color="#CCCCCC"> reservation</font>

946
00:48:24,230 --> 00:48:28,370
for routing direct charts and 4p

947
00:48:26,720 --> 00:48:29,750
re-authentication signal<font color="#E5E5E5"> no now this is</font>

948
00:48:28,370 --> 00:48:32,150
<font color="#CCCCCC">the most easiest approach that</font><font color="#E5E5E5"> can be</font>

949
00:48:29,750 --> 00:48:34,400
followed a reservation policy but<font color="#E5E5E5"> the</font>

950
00:48:32,150 --> 00:48:36,230
best<font color="#E5E5E5"> part here is if these entries are</font>

951
00:48:34,400 --> 00:48:38,270
not occupied the are tripled parent

952
00:48:36,230 --> 00:48:41,120
neighbors can still occupy these entries

953
00:48:38,270 --> 00:48:42,710
because the important fact here is that

954
00:48:41,120 --> 00:48:46,130
the parent node entries can be inserted

955
00:48:42,710 --> 00:48:49,790
at will and can be<font color="#CCCCCC"> removed if</font><font color="#E5E5E5"> necessary</font>

956
00:48:46,130 --> 00:48:51,440
can be evicted if necessary there are

957
00:48:49,790 --> 00:48:55,009
some mechanisms in ripple already

958
00:48:51,440 --> 00:48:57,380
introduced already present to reject<font color="#CCCCCC"> the</font>

959
00:48:55,010 --> 00:48:59,620
routing direct child<font color="#CCCCCC"> dowse so if</font><font color="#E5E5E5"> it now</font>

960
00:48:57,380 --> 00:49:03,050
is sent from a direct child then you can

961
00:48:59,620 --> 00:49:06,020
reject it using a knack similarly for

962
00:49:03,050 --> 00:49:09,200
<font color="#E5E5E5">panic line the result or that there are</font>

963
00:49:06,020 --> 00:49:12,920
ways to reject<font color="#CCCCCC"> the neighboring entry by</font>

964
00:49:09,200 --> 00:49:14,450
using a result code AVP

965
00:49:12,920 --> 00:49:17,870
so<font color="#E5E5E5"> essentially this</font><font color="#CCCCCC"> is the way in which</font>

966
00:49:14,450 --> 00:49:19,310
so we finally<font color="#E5E5E5"> ended up reserving routing</font>

967
00:49:17,870 --> 00:49:20,710
direct child entries and Pru

968
00:49:19,310 --> 00:49:22,820
authentication so maximum number of

969
00:49:20,710 --> 00:49:24,350
authentication sessions that can be in

970
00:49:22,820 --> 00:49:29,960
progress at any point of time is

971
00:49:24,350 --> 00:49:31,520
determined<font color="#E5E5E5"> by</font><font color="#CCCCCC"> this number so what</font><font color="#E5E5E5"> is the</font>

972
00:49:29,960 --> 00:49:35,210
impact of neighbor this neighbor table

973
00:49:31,520 --> 00:49:36,950
management policy so so we had so<font color="#E5E5E5"> we'll</font>

974
00:49:35,210 --> 00:49:38,120
if we don't assume that there is<font color="#E5E5E5"> any</font>

975
00:49:36,950 --> 00:49:41,509
restriction on<font color="#CCCCCC"> the neighbor table size</font>

976
00:49:38,120 --> 00:49:43,190
ideally we might get this network but<font color="#E5E5E5"> if</font>

977
00:49:41,510 --> 00:49:45,020
with neighbor with assuming that the max

978
00:49:43,190 --> 00:49:46,490
neighbor table entries are three you

979
00:49:45,020 --> 00:49:49,970
will end up getting this sort<font color="#E5E5E5"> of network</font>

980
00:49:46,490 --> 00:49:52,220
now so the<font color="#E5E5E5"> point that I want to mention</font>

981
00:49:49,970 --> 00:49:54,410
<font color="#E5E5E5">here is now this is a suboptimal</font>

982
00:49:52,220 --> 00:49:58,459
behavior if<font color="#CCCCCC"> you see n 3 now has to pass</font>

983
00:49:54,410 --> 00:49:59,839
its packet through into<font color="#CCCCCC"> 2 BR but here so</font>

984
00:49:58,460 --> 00:50:01,970
there<font color="#CCCCCC"> is one</font><font color="#E5E5E5"> extra transmission here so</font>

985
00:49:59,840 --> 00:50:03,290
it is suboptimal but then there is a

986
00:50:01,970 --> 00:50:05,680
trade-off here because the memory is not

987
00:50:03,290 --> 00:50:05,680
<font color="#E5E5E5">available</font>

988
00:50:06,619 --> 00:50:08,680
you

989
00:50:10,040 --> 00:50:15,320
yeah so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the problem that we</font>

990
00:50:12,380 --> 00:50:22,750
faced in our deployment and apply pilot

991
00:50:15,320 --> 00:50:25,300
program<font color="#CCCCCC"> michael richards</font>

992
00:50:22,750 --> 00:50:27,700
all this great work um is<font color="#E5E5E5"> there you're</font>

993
00:50:25,300 --> 00:50:30,820
<font color="#E5E5E5">going to be draft attached to this I was</font>

994
00:50:27,700 --> 00:50:33,310
looking for<font color="#E5E5E5"> more details and well yeah</font>

995
00:50:30,820 --> 00:50:35,380
so the idea why I presented this peep it

996
00:50:33,310 --> 00:50:37,000
is yeah to check if<font color="#E5E5E5"> there is already any</font>

997
00:50:35,380 --> 00:50:39,580
work being done in<font color="#E5E5E5"> this context you know</font>

998
00:50:37,000 --> 00:50:42,250
<font color="#E5E5E5">okay yeah and if necessary then I would</font>

999
00:50:39,580 --> 00:50:43,750
work on the<font color="#E5E5E5"> draft so basically I there</font>

1000
00:50:42,250 --> 00:50:45,190
<font color="#E5E5E5">are already implementation if there is</font>

1001
00:50:43,750 --> 00:50:47,650
any other implementation available which

1002
00:50:45,190 --> 00:50:50,530
solves a problem in a different way<font color="#E5E5E5"> I I</font>

1003
00:50:47,650 --> 00:50:53,260
think we<font color="#CCCCCC"> should have a draft then I</font>

1004
00:50:50,530 --> 00:50:56,140
don't think I think it may be very

1005
00:50:53,260 --> 00:50:57,940
<font color="#CCCCCC">welcome in ripple as enroll can you go</font>

1006
00:50:56,140 --> 00:50:59,410
back a couple slides sure I just had a

1007
00:50:57,940 --> 00:51:03,130
couple<font color="#E5E5E5"> of questions understanding your</font>

1008
00:50:59,410 --> 00:51:06,399
your analysis go back sorry couple more

1009
00:51:03,130 --> 00:51:10,150
more more of the diagram that one one

1010
00:51:06,400 --> 00:51:13,030
who<font color="#E5E5E5"> does n 3 did you are you thinking</font>

1011
00:51:10,150 --> 00:51:16,140
<font color="#E5E5E5">that n 3 was in radio distance of n 6</font>

1012
00:51:13,030 --> 00:51:19,330
and n seven so it might have heard them

1013
00:51:16,140 --> 00:51:21,400
but that they didn't pick it as a parent

1014
00:51:19,330 --> 00:51:23,620
<font color="#CCCCCC">but no</font><font color="#E5E5E5"> here the assumption is n Phi is</font>

1015
00:51:21,400 --> 00:51:28,930
only reachable entries only reachable 2

1016
00:51:23,620 --> 00:51:31,870
and Phi<font color="#E5E5E5"> right but but I'm saying a</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 6</font>

1017
00:51:28,930 --> 00:51:36,490
<font color="#CCCCCC">and n seven</font><font color="#E5E5E5"> could well have heard a DI</font>

1018
00:51:31,870 --> 00:51:38,560
Oh<font color="#E5E5E5"> from n 3 but the DAO from n5 was much</font>

1019
00:51:36,490 --> 00:51:42,100
better link quality so they picked<font color="#E5E5E5"> it</font>

1020
00:51:38,560 --> 00:51:45,610
yes right well yeah and so and also in a

1021
00:51:42,100 --> 00:51:50,140
storing network at least n 3 would know

1022
00:51:45,610 --> 00:51:52,540
that n 6 and n seven are attached to

1023
00:51:50,140 --> 00:51:54,609
<font color="#E5E5E5">that direct child and so could bump the</font>

1024
00:51:52,540 --> 00:51:55,690
priority of keeping that direct<font color="#E5E5E5"> child</font>

1025
00:51:54,610 --> 00:52:00,820
<font color="#CCCCCC">you you're saying we always want to keep</font>

1026
00:51:55,690 --> 00:52:03,010
direct child anyway but that the number

1027
00:52:00,820 --> 00:52:05,470
of things below there could also ranked

1028
00:52:03,010 --> 00:52:08,260
the direct child's if you ever found

1029
00:52:05,470 --> 00:52:10,600
that you have to do it to push direct

1030
00:52:08,260 --> 00:52:14,170
children out<font color="#E5E5E5"> okay which would be</font>

1031
00:52:10,600 --> 00:52:16,540
terrible to do but you know it might

1032
00:52:14,170 --> 00:52:18,430
cause the network to rebalance yeah okay

1033
00:52:16,540 --> 00:52:20,140
if you did that but but<font color="#E5E5E5"> that would tell</font>

1034
00:52:18,430 --> 00:52:21,609
you how bad it was in terms of the

1035
00:52:20,140 --> 00:52:23,890
different things non storing load we

1036
00:52:21,610 --> 00:52:25,720
have no idea yeah but yeah yeah yeah

1037
00:52:23,890 --> 00:52:28,569
<font color="#E5E5E5">that's a that's a rally point you know</font>

1038
00:52:25,720 --> 00:52:30,160
yes and you also<font color="#E5E5E5"> said that you didn't</font>

1039
00:52:28,570 --> 00:52:35,630
<font color="#CCCCCC">think that you could tell when the auth</font>

1040
00:52:30,160 --> 00:52:40,910
was done right on the bay area so if

1041
00:52:35,630 --> 00:52:40,910
you looked at a panna system and and<font color="#E5E5E5"> i'm</font>

1042
00:52:41,060 --> 00:52:46,140
i'm not actually<font color="#E5E5E5"> I actually think that's</font>

1043
00:52:43,860 --> 00:52:48,060
not true because I think<font color="#CCCCCC"> that if you're</font>

1044
00:52:46,140 --> 00:52:52,440
doing pana in the way that I think<font color="#CCCCCC"> that</font>

1045
00:52:48,060 --> 00:52:57,509
<font color="#CCCCCC">it's being done that n3 actually will</font>

1046
00:52:52,440 --> 00:52:59,850
receive from the auth server a key set

1047
00:52:57,510 --> 00:53:02,870
that it's supposed<font color="#E5E5E5"> to that it gets one</font>

1048
00:52:59,850 --> 00:53:05,970
part<font color="#E5E5E5"> of a key and the the as the as the</font>

1049
00:53:02,870 --> 00:53:07,259
authenticator and the the<font color="#E5E5E5"> PA</font><font color="#CCCCCC"> see then</font>

1050
00:53:05,970 --> 00:53:09,299
you<font color="#E5E5E5"> know gets the other part of the key</font>

1051
00:53:07,260 --> 00:53:10,890
so it actually will hear when that thing

1052
00:53:09,300 --> 00:53:15,330
is things it's going to have a new key

1053
00:53:10,890 --> 00:53:17,400
if not if it's not pana right then the

1054
00:53:15,330 --> 00:53:19,470
<font color="#E5E5E5">Keith then to one of two things will</font>

1055
00:53:17,400 --> 00:53:22,020
happen either the new node will

1056
00:53:19,470 --> 00:53:25,200
negotiate a key using I don't know mesh

1057
00:53:22,020 --> 00:53:27,450
link exchange or 59 or something so

1058
00:53:25,200 --> 00:53:29,430
actually<font color="#CCCCCC"> it would know that there's a</font>

1059
00:53:27,450 --> 00:53:33,660
the new node has now established a key

1060
00:53:29,430 --> 00:53:35,850
and is no longer indicating<font color="#E5E5E5"> okay yeah so</font>

1061
00:53:33,660 --> 00:53:37,410
that separate signaling but so does it

1062
00:53:35,850 --> 00:53:39,029
separate signaling there's other clues

1063
00:53:37,410 --> 00:53:41,100
in there what I'm saying is other clues

1064
00:53:39,030 --> 00:53:43,080
in there that can feed that right what's

1065
00:53:41,100 --> 00:53:45,120
going<font color="#E5E5E5"> on and the key thing is that the</font>

1066
00:53:43,080 --> 00:53:48,000
neighbor table has some other pieces

1067
00:53:45,120 --> 00:53:50,609
that there and but very clearly you mean

1068
00:53:48,000 --> 00:53:53,640
it needs to reserve a slaughter to for

1069
00:53:50,610 --> 00:53:56,550
authentication right but it also<font color="#E5E5E5"> needs</font>

1070
00:53:53,640 --> 00:54:00,000
to limit in how<font color="#E5E5E5"> many it's willing to</font>

1071
00:53:56,550 --> 00:54:02,160
spend because<font color="#E5E5E5"> that it's a denial service</font>

1072
00:54:00,000 --> 00:54:03,540
that's right right so I think<font color="#CCCCCC"> it'd be</font>

1073
00:54:02,160 --> 00:54:06,120
<font color="#CCCCCC">very interesting it would be very</font>

1074
00:54:03,540 --> 00:54:08,220
<font color="#CCCCCC">interesting to</font><font color="#E5E5E5"> write this up as a as a</font>

1075
00:54:06,120 --> 00:54:11,190
document i would be very<font color="#E5E5E5"> excited to work</font>

1076
00:54:08,220 --> 00:54:12,240
on<font color="#E5E5E5"> that mean way thank you yeah so thank</font>

1077
00:54:11,190 --> 00:54:14,340
you thank you for those comments yeah

1078
00:54:12,240 --> 00:54:16,589
that is if there is some<font color="#CCCCCC"> informational</font>

1079
00:54:14,340 --> 00:54:18,210
<font color="#E5E5E5">Richardson there is some information</font>

1080
00:54:16,590 --> 00:54:20,400
available yes that can be<font color="#E5E5E5"> made use of</font>

1081
00:54:18,210 --> 00:54:21,960
you that's very<font color="#E5E5E5"> good so there are some</font>

1082
00:54:20,400 --> 00:54:23,510
limitations to<font color="#E5E5E5"> this policy you know that</font>

1083
00:54:21,960 --> 00:54:26,310
<font color="#E5E5E5">I have not mentioned in this</font>

1084
00:54:23,510 --> 00:54:28,410
presentation but there<font color="#CCCCCC"> are limitations</font>

1085
00:54:26,310 --> 00:54:30,360
to this policy you know it in certain

1086
00:54:28,410 --> 00:54:33,450
<font color="#E5E5E5">cases certain nodes may not be able to</font>

1087
00:54:30,360 --> 00:54:37,110
<font color="#E5E5E5">join the network ever so for example if</font>

1088
00:54:33,450 --> 00:54:38,730
a new node comes up over here let's say

1089
00:54:37,110 --> 00:54:40,560
an N seven node comes up over here and

1090
00:54:38,730 --> 00:54:41,850
<font color="#E5E5E5">it tries to attach to the border outer</font>

1091
00:54:40,560 --> 00:54:44,190
border router has only three neighbor

1092
00:54:41,850 --> 00:54:46,799
table entries then it's going<font color="#E5E5E5"> to get</font>

1093
00:54:44,190 --> 00:54:48,549
rejected<font color="#E5E5E5"> always there is no alternate so</font>

1094
00:54:46,800 --> 00:54:51,089
there are<font color="#E5E5E5"> lot of assumptions Syria</font>

1095
00:54:48,549 --> 00:54:55,630
so it assumes that the net desert is

1096
00:54:51,089 --> 00:54:58,929
sufficiently<font color="#E5E5E5"> okay to work with so those</font>

1097
00:54:55,630 --> 00:55:01,989
boats also unique some some entries on /

1098
00:54:58,929 --> 00:55:05,979
<font color="#CCCCCC">outer yeah so the only eviction that can</font>

1099
00:55:01,989 --> 00:55:08,949
be done is for the parent nodes but as

1100
00:55:05,979 --> 00:55:10,149
Michael mentioned you know evicting a

1101
00:55:08,949 --> 00:55:13,119
direct child will have a ripple effect

1102
00:55:10,150 --> 00:55:14,949
you know<font color="#E5E5E5"> eventually all the other it</font>

1103
00:55:13,119 --> 00:55:17,109
<font color="#E5E5E5">will result in complete the complete</font>

1104
00:55:14,949 --> 00:55:19,509
<font color="#E5E5E5">load or the subdue dag getting</font>

1105
00:55:17,109 --> 00:55:21,069
rebalanced so that is something<font color="#E5E5E5"> which</font>

1106
00:55:19,509 --> 00:55:27,549
has to<font color="#CCCCCC"> be avoided because it will result</font>

1107
00:55:21,069 --> 00:55:29,949
<font color="#E5E5E5">in a larger control over it since how</font>

1108
00:55:27,549 --> 00:55:31,989
again so<font color="#CCCCCC"> I think this case because it</font>

1109
00:55:29,949 --> 00:55:34,119
<font color="#CCCCCC">Bora is</font><font color="#E5E5E5"> supposed to have a larger memory</font>

1110
00:55:31,989 --> 00:55:37,269
right so the problem you just described

1111
00:55:34,119 --> 00:55:41,410
actually is not well in you<font color="#CCCCCC"> you know</font>

1112
00:55:37,269 --> 00:55:43,029
what yeah let's I in this case<font color="#E5E5E5"> maybe in</font>

1113
00:55:41,410 --> 00:55:45,428
some cases border router has a larger

1114
00:55:43,029 --> 00:55:48,670
memory not in not necessarily in all the

1115
00:55:45,429 --> 00:55:50,890
cases for example in my case and the<font color="#E5E5E5"> the</font>

1116
00:55:48,670 --> 00:55:53,319
pilot program that<font color="#E5E5E5"> I am</font><font color="#CCCCCC"> working on the</font>

1117
00:55:50,890 --> 00:55:55,299
border router the platform used here is

1118
00:55:53,319 --> 00:55:58,029
<font color="#E5E5E5">exactly same as any of the other node it</font>

1119
00:55:55,299 --> 00:56:01,029
has<font color="#E5E5E5"> the same ax so it just has a USB</font>

1120
00:55:58,029 --> 00:56:03,130
connectivity to linux here or or some

1121
00:56:01,029 --> 00:56:04,900
other platform here but this platform

1122
00:56:03,130 --> 00:56:07,839
remains the same as these platter but

1123
00:56:04,900 --> 00:56:15,960
yeah this depends upon deployment to

1124
00:56:07,839 --> 00:56:17,700
deployment you know mohit

1125
00:56:15,960 --> 00:56:20,780
I do think<font color="#E5E5E5"> we should have a draft on</font>

1126
00:56:17,700 --> 00:56:24,169
this just just to get all<font color="#CCCCCC"> the details</font>

1127
00:56:20,780 --> 00:56:24,170
should thank you

1128
00:56:27,010 --> 00:56:39,410
okay so any<font color="#E5E5E5"> more comments so thank you</font>

1129
00:56:33,860 --> 00:56:46,270
so thank you oh yeah oh pretty up five

1130
00:56:39,410 --> 00:56:52,120
minutes earlier let's get you any more

1131
00:56:46,270 --> 00:56:56,540
question comments or suggestions know

1132
00:56:52,120 --> 00:56:59,960
anymore anybody doesn't sign their blue

1133
00:56:56,540 --> 00:57:05,590
 I can pass it through then the

1134
00:56:59,960 --> 00:57:05,590
<font color="#CCCCCC">meeting is a zoom thank you thank you</font>

1135
00:58:08,190 --> 00:58:10,250
you

