1
00:00:48,480 --> 00:00:57,099
<font color="#E5E5E5">okay have you everybody</font><font color="#CCCCCC"> we're ready to</font>

2
00:00:52,090 --> 00:01:08,860
<font color="#E5E5E5">start the session</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> people would need</font>

3
00:00:57,100 --> 00:01:12,509
<font color="#E5E5E5">to sit</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> be quiet so I guess like</font>

4
00:01:08,860 --> 00:01:14,729
micro just volunteer to be note-taker

5
00:01:12,509 --> 00:01:17,320
<font color="#E5E5E5">network well great</font>

6
00:01:14,729 --> 00:01:21,160
thank you very<font color="#E5E5E5"> much</font><font color="#CCCCCC"> Aaron is a</font>

7
00:01:17,320 --> 00:01:23,320
JavaScript and Spencer is unfortunately

8
00:01:21,160 --> 00:01:25,890
not<font color="#CCCCCC"> here but I</font><font color="#E5E5E5"> already beaten into the</font>

9
00:01:23,320 --> 00:01:29,669
room<font color="#E5E5E5"> so he will co-chair from the</font>

10
00:01:25,890 --> 00:01:29,670
<font color="#CCCCCC">meteorite day I guess</font>

11
00:01:31,119 --> 00:01:35,380
yeah and we're ready<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start the</font>

12
00:01:33,130 --> 00:01:48,490
session and this<font color="#E5E5E5"> to tease the area</font>

13
00:01:35,380 --> 00:01:53,439
session and<font color="#CCCCCC"> ietf</font><font color="#E5E5E5"> 102 it is working do</font>

14
00:01:48,490 --> 00:02:01,240
you<font color="#E5E5E5"> have to eat</font><font color="#CCCCCC"> it or no so</font><font color="#E5E5E5"> welcome</font>

15
00:01:53,439 --> 00:02:03,399
again<font color="#CCCCCC"> this is a note well it also</font>

16
00:02:01,240 --> 00:02:06,610
applies to<font color="#E5E5E5"> t3 area even so there might</font>

17
00:02:03,400 --> 00:02:07,689
be less document discussions but

18
00:02:06,610 --> 00:02:13,360
probably you've seen<font color="#CCCCCC"> it already this</font>

19
00:02:07,689 --> 00:02:16,030
week this<font color="#CCCCCC"> is the agenda</font><font color="#E5E5E5"> for today yet</font>

20
00:02:13,360 --> 00:02:19,410
<font color="#CCCCCC">again thank you for airing</font><font color="#E5E5E5"> to scribe for</font>

21
00:02:16,030 --> 00:02:23,320
<font color="#CCCCCC">Java thank you for</font><font color="#E5E5E5"> taking notes Michael</font>

22
00:02:19,410 --> 00:02:25,690
<font color="#CCCCCC">we have 15 minutes for the t's VAV</font>

23
00:02:23,320 --> 00:02:27,190
overview<font color="#E5E5E5"> because we have the</font><font color="#CCCCCC"> overview</font>

24
00:02:25,690 --> 00:02:31,150
<font color="#CCCCCC">and we also want to</font><font color="#E5E5E5"> talk a little bit</font>

25
00:02:27,190 --> 00:02:33,250
about<font color="#CCCCCC"> m80 experience and what like what</font>

26
00:02:31,150 --> 00:02:35,019
we do in<font color="#E5E5E5"> our daily life so you can get</font>

27
00:02:33,250 --> 00:02:37,000
an impression<font color="#E5E5E5"> and then Kenny date for</font>

28
00:02:35,019 --> 00:02:41,410
the next<font color="#E5E5E5"> eighty position that's</font>

29
00:02:37,000 --> 00:02:47,530
available<font color="#E5E5E5"> in March and after that part</font>

30
00:02:41,410 --> 00:02:50,470
we have three presentations and we kind

31
00:02:47,530 --> 00:02:53,950
of cluster them all into<font color="#E5E5E5"> like deployment</font>

32
00:02:50,470 --> 00:02:56,230
issues and considerations<font color="#CCCCCC"> the first one</font>

33
00:02:53,950 --> 00:02:57,940
is from<font color="#CCCCCC"> Christopher ash on</font><font color="#E5E5E5"> magic</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> CCP</font>

34
00:02:56,230 --> 00:03:00,988
and<font color="#E5E5E5"> like the</font><font color="#CCCCCC"> difficulties to</font><font color="#E5E5E5"> bring</font><font color="#CCCCCC"> this</font>

35
00:02:57,940 --> 00:03:00,989
into the<font color="#E5E5E5"> Linux</font><font color="#CCCCCC"> kernel</font>

36
00:03:01,030 --> 00:03:06,939
then we have actually a presentation

37
00:03:05,530 --> 00:03:10,150
<font color="#CCCCCC">from Ian who which has a</font><font color="#E5E5E5"> different title</font>

38
00:03:06,939 --> 00:03:11,859
now and I didn't update<font color="#E5E5E5"> this light so</font>

39
00:03:10,150 --> 00:03:15,220
this<font color="#E5E5E5"> is on quick deployment challenges</font>

40
00:03:11,860 --> 00:03:18,610
and then the<font color="#CCCCCC"> cert presentation is on</font>

41
00:03:15,220 --> 00:03:22,180
<font color="#E5E5E5">wire images and passing else on from</font>

42
00:03:18,610 --> 00:03:24,280
Brian and<font color="#E5E5E5"> tete which considers two</font>

43
00:03:22,180 --> 00:03:27,190
<font color="#E5E5E5">documents which are under discussion</font><font color="#CCCCCC"> in</font>

44
00:03:24,280 --> 00:03:28,690
<font color="#E5E5E5">the IAB and then if everything runs</font><font color="#CCCCCC"> well</font>

45
00:03:27,190 --> 00:03:38,560
we<font color="#E5E5E5"> still have</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> minutes open mic at</font>

46
00:03:28,690 --> 00:03:42,220
the end<font color="#E5E5E5"> any agenda bashing okay um as</font>

47
00:03:38,560 --> 00:03:45,010
always a big thank you to our review

48
00:03:42,220 --> 00:03:46,720
team<font color="#E5E5E5"> and we're still kind of</font><font color="#CCCCCC"> trying to</font>

49
00:03:45,010 --> 00:03:48,700
get everything up to speed but we see

50
00:03:46,720 --> 00:03:50,170
more<font color="#CCCCCC"> views and we see those</font><font color="#E5E5E5"> videos in a</font>

51
00:03:48,700 --> 00:03:54,369
timely manner which is<font color="#E5E5E5"> really important</font>

52
00:03:50,170 --> 00:03:56,230
<font color="#E5E5E5">for us so thank you for</font><font color="#CCCCCC"> that but we also</font>

53
00:03:54,370 --> 00:03:59,859
still try to figure<font color="#E5E5E5"> out how to</font><font color="#CCCCCC"> optimize</font>

54
00:03:56,230 --> 00:04:02,409
the workflow<font color="#E5E5E5"> and kind of the videos so</font>

55
00:03:59,859 --> 00:04:06,519
in case you're interested<font color="#E5E5E5"> to become a</font>

56
00:04:02,409 --> 00:04:09,340
transport area<font color="#E5E5E5"> reviewer you</font><font color="#CCCCCC"> can talk to</font>

57
00:04:06,519 --> 00:04:16,120
<font color="#E5E5E5">us or</font><font color="#CCCCCC"> you might</font><font color="#E5E5E5"> talk to you at some</font>

58
00:04:09,340 --> 00:04:21,639
point Spencer if you have any comments

59
00:04:16,120 --> 00:04:23,620
interrupt me right yeah sure<font color="#CCCCCC"> and this is</font>

60
00:04:21,639 --> 00:04:25,930
the<font color="#CCCCCC"> useless light we have on the working</font>

61
00:04:23,620 --> 00:04:28,660
<font color="#CCCCCC">group status</font><font color="#E5E5E5"> from like the</font><font color="#CCCCCC"> 80 per</font>

62
00:04:25,930 --> 00:04:30,699
spective<font color="#E5E5E5"> it's a very brief high-level</font>

63
00:04:28,660 --> 00:04:36,099
view<font color="#E5E5E5"> so if you're chairing you disagree</font>

64
00:04:30,699 --> 00:04:38,169
don't worry<font color="#CCCCCC"> or talk to</font><font color="#E5E5E5"> us from my side I</font>

65
00:04:36,099 --> 00:04:39,610
have a couple<font color="#E5E5E5"> of working groups which</font>

66
00:04:38,169 --> 00:04:41,680
which are wrapping up their<font color="#CCCCCC"> Charter</font>

67
00:04:39,610 --> 00:04:44,139
which is very<font color="#CCCCCC"> positive I think so we get</font>

68
00:04:41,680 --> 00:04:46,000
some work done there<font color="#E5E5E5"> and then I have</font>

69
00:04:44,139 --> 00:04:48,699
also some more<font color="#CCCCCC"> long lasting</font><font color="#E5E5E5"> working</font>

70
00:04:46,000 --> 00:04:50,110
groups which make good progress<font color="#CCCCCC"> the</font><font color="#E5E5E5"> only</font>

71
00:04:48,699 --> 00:04:52,539
thing I would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to mention here is</font>

72
00:04:50,110 --> 00:04:54,909
<font color="#CCCCCC">that we change responsibilities for I</font>

73
00:04:52,539 --> 00:04:57,130
<font color="#CCCCCC">ppm so</font><font color="#E5E5E5"> that was Spencer's group</font><font color="#CCCCCC"> grooving</font>

74
00:04:54,909 --> 00:04:59,800
now it's my group<font color="#E5E5E5"> and Spencer do</font><font color="#CCCCCC"> you</font>

75
00:04:57,130 --> 00:05:02,110
want to comment<font color="#E5E5E5"> on your groups</font><font color="#CCCCCC"> just to</font>

76
00:04:59,800 --> 00:05:06,909
say that the connection ID for quick is

77
00:05:02,110 --> 00:05:08,889
really hard and<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> the other thing</font>

78
00:05:06,909 --> 00:05:12,130
to mention is<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know we</font><font color="#E5E5E5"> are looking at</font>

79
00:05:08,889 --> 00:05:13,930
several groups that<font color="#CCCCCC"> are you know</font>

80
00:05:12,130 --> 00:05:16,509
<font color="#E5E5E5">finishing up milestones so</font>

81
00:05:13,930 --> 00:05:20,039
we're kind of getting<font color="#E5E5E5"> close to recharter</font>

82
00:05:16,509 --> 00:05:22,870
or conclude for several working groups

83
00:05:20,039 --> 00:05:25,539
<font color="#CCCCCC">so just kind of keeping that the back</font><font color="#E5E5E5"> of</font>

84
00:05:22,870 --> 00:05:32,110
our minds<font color="#E5E5E5"> are you saying we're looking</font>

85
00:05:25,539 --> 00:05:34,539
<font color="#E5E5E5">for more work</font><font color="#CCCCCC"> I'm not sure what I well</font>

86
00:05:32,110 --> 00:05:37,449
<font color="#E5E5E5">okay I think well I think I think what</font>

87
00:05:34,539 --> 00:05:39,190
I'm saying<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> though then it would</font>

88
00:05:37,449 --> 00:05:41,380
be good if<font color="#CCCCCC"> we did not get it my</font>

89
00:05:39,190 --> 00:05:44,410
replacement starting in March and then

90
00:05:41,380 --> 00:05:49,120
all the buffer quest requests are<font color="#E5E5E5"> start</font>

91
00:05:44,410 --> 00:05:54,550
arriving in April very true any

92
00:05:49,120 --> 00:05:57,789
questions on this part um yeah we have

93
00:05:54,550 --> 00:05:59,620
also done<font color="#CCCCCC"> some work I think this is</font>

94
00:05:57,789 --> 00:06:01,870
actually<font color="#CCCCCC"> less documents than for example</font>

95
00:05:59,620 --> 00:06:04,990
last<font color="#CCCCCC"> time but that's</font><font color="#E5E5E5"> like I think</font><font color="#CCCCCC"> in the</font>

96
00:06:01,870 --> 00:06:07,169
normal variation<font color="#E5E5E5"> also there are a couple</font>

97
00:06:04,990 --> 00:06:09,490
of<font color="#E5E5E5"> documents which are under I used</font>

98
00:06:07,169 --> 00:06:12,900
evaluation currently so that's the

99
00:06:09,490 --> 00:06:12,900
<font color="#CCCCCC">progress</font><font color="#E5E5E5"> we make since the last meeting</font>

100
00:06:12,960 --> 00:06:22,448
um yes Spencer do you want to go on<font color="#E5E5E5"> this</font>

101
00:06:16,780 --> 00:06:27,900
<font color="#CCCCCC">one yeah so we were contracted by Kemp</font>

102
00:06:22,449 --> 00:06:31,690
to talk basically the BBF has been

103
00:06:27,900 --> 00:06:34,750
relying on TLS keepalive mechanisms in

104
00:06:31,690 --> 00:06:37,270
<font color="#E5E5E5">the</font><font color="#CCCCCC"> net comp server</font><font color="#E5E5E5"> and everybody post</font>

105
00:06:34,750 --> 00:06:40,409
heartbleed<font color="#CCCCCC"> is removing support for</font><font color="#E5E5E5"> that</font>

106
00:06:37,270 --> 00:06:43,650
as fast<font color="#E5E5E5"> as they can tithe</font><font color="#CCCCCC"> they were the</font>

107
00:06:40,409 --> 00:06:47,409
suggestion was<font color="#CCCCCC"> made over around</font><font color="#E5E5E5"> in the</font>

108
00:06:43,650 --> 00:06:51,039
<font color="#CCCCCC">that cough world about</font><font color="#E5E5E5"> using TCP keep</font>

109
00:06:47,409 --> 00:06:53,009
lives and the<font color="#E5E5E5"> sec</font><font color="#CCCCCC"> hey these were</font><font color="#E5E5E5"> not</font>

110
00:06:51,039 --> 00:06:55,150
happy about<font color="#CCCCCC"> Playtex</font>

111
00:06:53,009 --> 00:06:56,860
mechanism for keep alive so we were not

112
00:06:55,150 --> 00:06:59,739
happy<font color="#CCCCCC"> about encouraging transport only</font>

113
00:06:56,860 --> 00:07:03,639
<font color="#E5E5E5">keep alive</font><font color="#CCCCCC"> for several reasons so we had</font>

114
00:06:59,740 --> 00:07:07,419
a couple<font color="#CCCCCC"> of couple of</font><font color="#E5E5E5"> proposals there</font>

115
00:07:03,639 --> 00:07:11,289
one was you know could they could they

116
00:07:07,419 --> 00:07:15,549
actually<font color="#E5E5E5"> talk people into not removing</font>

117
00:07:11,289 --> 00:07:17,440
<font color="#E5E5E5">RC 6520 support which is humanly</font>

118
00:07:15,550 --> 00:07:19,270
possible but<font color="#CCCCCC"> I wouldn't</font><font color="#E5E5E5"> bet on it the</font>

119
00:07:17,440 --> 00:07:21,009
other one<font color="#E5E5E5"> is just basically saying</font><font color="#CCCCCC"> that</font>

120
00:07:19,270 --> 00:07:23,460
they need<font color="#CCCCCC"> to do application level keep</font>

121
00:07:21,009 --> 00:07:25,900
lives<font color="#E5E5E5"> anyway because that's what matters</font>

122
00:07:23,460 --> 00:07:27,638
<font color="#CCCCCC">more</font><font color="#E5E5E5"> broadly we've been asked about</font>

123
00:07:25,900 --> 00:07:29,679
providing<font color="#E5E5E5"> some kind of</font>

124
00:07:27,639 --> 00:07:31,749
consensus guidance<font color="#E5E5E5"> about this that's</font><font color="#CCCCCC"> not</font>

125
00:07:29,680 --> 00:07:35,259
just you know<font color="#CCCCCC"> me</font><font color="#E5E5E5"> and Maria</font><font color="#CCCCCC"> and a couple</font>

126
00:07:31,749 --> 00:07:36,759
of second<font color="#CCCCCC"> ease opinions so you know</font>

127
00:07:35,259 --> 00:07:39,249
<font color="#E5E5E5">basically a statement that would</font>

128
00:07:36,759 --> 00:07:41,680
recommend against<font color="#CCCCCC"> using</font><font color="#E5E5E5"> plain text</font><font color="#CCCCCC"> keep</font>

129
00:07:39,249 --> 00:07:44,439
<font color="#CCCCCC">alive mechanisms for secure transport</font>

130
00:07:41,680 --> 00:07:47,770
sessions recommend using<font color="#E5E5E5"> application</font>

131
00:07:44,439 --> 00:07:51,759
<font color="#E5E5E5">level keep lives</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually test</font>

132
00:07:47,770 --> 00:07:54,279
<font color="#E5E5E5">liveness</font><font color="#CCCCCC"> there's a there's a thread ESP</font>

133
00:07:51,759 --> 00:07:56,770
aerialist<font color="#CCCCCC"> call</font><font color="#E5E5E5"> statement regarding and</font>

134
00:07:54,279 --> 00:07:58,330
keep lives and we would<font color="#E5E5E5"> you know there's</font>

135
00:07:56,770 --> 00:07:59,830
<font color="#E5E5E5">minutes of discussion under that thread</font>

136
00:07:58,330 --> 00:08:04,240
already we would be<font color="#E5E5E5"> interested</font><font color="#CCCCCC"> in</font>

137
00:07:59,830 --> 00:08:05,919
hearing more so I<font color="#E5E5E5"> think</font><font color="#CCCCCC"> Ken Watson who</font>

138
00:08:04,240 --> 00:08:07,960
<font color="#CCCCCC">asserted this reticence room</font><font color="#E5E5E5"> do you</font><font color="#CCCCCC"> want</font>

139
00:08:05,919 --> 00:08:11,620
to stand<font color="#E5E5E5"> up for a second can see you and</font>

140
00:08:07,960 --> 00:08:13,270
if they want<font color="#E5E5E5"> to talk to you</font><font color="#CCCCCC"> so one</font>

141
00:08:11,620 --> 00:08:15,419
question we also have is what to do with

142
00:08:13,270 --> 00:08:17,740
this statement<font color="#E5E5E5"> right is this something</font>

143
00:08:15,419 --> 00:08:20,258
which we<font color="#E5E5E5"> just need to write</font><font color="#CCCCCC"> down and</font>

144
00:08:17,740 --> 00:08:22,779
send an email somewhere is this a BCP<font color="#CCCCCC"> is</font>

145
00:08:20,259 --> 00:08:24,909
something the IAB should figure<font color="#E5E5E5"> out what</font>

146
00:08:22,779 --> 00:08:31,060
to do<font color="#E5E5E5"> with like any feedback</font><font color="#CCCCCC"> on that is</font>

147
00:08:24,909 --> 00:08:33,338
welcome yeah thank<font color="#E5E5E5"> you all</font><font color="#CCCCCC"> I can't</font><font color="#E5E5E5"> from</font>

148
00:08:31,060 --> 00:08:35,380
<font color="#E5E5E5">juniper just added that it's not just a</font>

149
00:08:33,339 --> 00:08:37,000
statement<font color="#E5E5E5"> about not using the</font><font color="#CCCCCC"> T speaking</font>

150
00:08:35,380 --> 00:08:39,689
level<font color="#CCCCCC"> keep a</font><font color="#E5E5E5"> lives but also a</font>

151
00:08:37,000 --> 00:08:42,099
recommendation for protocol designers to

152
00:08:39,690 --> 00:08:45,190
include<font color="#CCCCCC"> keepalive</font><font color="#E5E5E5"> mechanisms inside</font>

153
00:08:42,099 --> 00:08:53,050
their protocols which is many<font color="#CCCCCC"> times an</font>

154
00:08:45,190 --> 00:08:56,230
oversight right<font color="#E5E5E5"> thank you okay</font>

155
00:08:53,050 --> 00:08:58,260
I go to the next<font color="#CCCCCC"> slide yeah this is also</font>

156
00:08:56,230 --> 00:09:01,329
<font color="#E5E5E5">related work we want to point the</font>

157
00:08:58,260 --> 00:09:02,980
transport area<font color="#CCCCCC"> to</font><font color="#E5E5E5"> so that's a congestion</font>

158
00:09:01,329 --> 00:09:06,699
<font color="#E5E5E5">control mechanism that was or is</font>

159
00:09:02,980 --> 00:09:10,029
developed for<font color="#CCCCCC"> cope and mainly discussed</font>

160
00:09:06,699 --> 00:09:11,410
in the core working group and but<font color="#E5E5E5"> be</font>

161
00:09:10,029 --> 00:09:13,269
<font color="#E5E5E5">given given</font><font color="#CCCCCC"> this is a congestion control</font>

162
00:09:11,410 --> 00:09:15,430
scheme there will be presentation in<font color="#E5E5E5"> ICC</font>

163
00:09:13,269 --> 00:09:19,410
<font color="#CCCCCC">oh geez so a transport feedback is</font>

164
00:09:15,430 --> 00:09:21,579
highly<font color="#CCCCCC"> appreciated in ICC Archie</font><font color="#E5E5E5"> on</font>

165
00:09:19,410 --> 00:09:27,130
tomorrow afternoon<font color="#CCCCCC"> I thoughts and Friday</font>

166
00:09:21,579 --> 00:09:32,829
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> tomorrow good yeah thank you in</font>

167
00:09:27,130 --> 00:09:34,930
advance<font color="#E5E5E5"> so I'm still the outgoing</font>

168
00:09:32,829 --> 00:09:38,979
transport<font color="#E5E5E5"> area director my term ends in</font>

169
00:09:34,930 --> 00:09:40,989
March<font color="#CCCCCC"> Martin and Mary and I have</font><font color="#E5E5E5"> been</font>

170
00:09:38,980 --> 00:09:41,649
<font color="#E5E5E5">working since 2013 to make the job</font>

171
00:09:40,990 --> 00:09:44,529
doable

172
00:09:41,649 --> 00:09:46,809
and there's a link<font color="#E5E5E5"> in the presentation</font>

173
00:09:44,529 --> 00:09:48,610
for what we told<font color="#E5E5E5"> Malcolm</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> is</font>

174
00:09:46,809 --> 00:09:51,160
actually<font color="#E5E5E5"> pretty close to what Nam Kham</font>

175
00:09:48,610 --> 00:09:53,559
is using for their position descriptions

176
00:09:51,160 --> 00:09:57,129
if you just look<font color="#E5E5E5"> this up on the NomCom</font>

177
00:09:53,559 --> 00:09:59,019
page please nominate freely and please

178
00:09:57,129 --> 00:10:01,779
give lots of<font color="#CCCCCC"> feedback on willing</font>

179
00:09:59,019 --> 00:10:02,920
nominees<font color="#CCCCCC"> because this</font><font color="#E5E5E5"> really matters</font><font color="#CCCCCC"> if</font>

180
00:10:01,779 --> 00:10:04,779
you have any questions about the

181
00:10:02,920 --> 00:10:06,670
<font color="#CCCCCC">position please ask you could ask here</font>

182
00:10:04,779 --> 00:10:08,619
now<font color="#CCCCCC"> Marius in the hallways asked the saw</font>

183
00:10:06,670 --> 00:10:11,529
<font color="#E5E5E5">the TSV area list that would be fine or</font>

184
00:10:08,619 --> 00:10:16,420
in<font color="#CCCCCC"> private email and again thanks for</font>

185
00:10:11,529 --> 00:10:17,980
<font color="#E5E5E5">thanks in advance yeah and I also</font><font color="#CCCCCC"> saw ty</font>

186
00:10:16,420 --> 00:10:20,649
<font color="#E5E5E5">talk a little bit more about what doable</font>

187
00:10:17,980 --> 00:10:24,040
means<font color="#CCCCCC"> you should be a conscious people</font>

188
00:10:20,649 --> 00:10:25,269
<font color="#CCCCCC">to my Pecha Kucha</font><font color="#E5E5E5"> but in this case maybe</font>

189
00:10:24,040 --> 00:10:27,969
more information might be<font color="#E5E5E5"> interesting</font>

190
00:10:25,269 --> 00:10:29,920
<font color="#CCCCCC">for you so I mean</font><font color="#E5E5E5"> what does the the</font>

191
00:10:27,970 --> 00:10:32,649
daily life<font color="#E5E5E5"> or</font><font color="#CCCCCC"> from 80 nowadays or</font>

192
00:10:29,920 --> 00:10:34,899
transport 80 look like and I think<font color="#CCCCCC"> those</font>

193
00:10:32,649 --> 00:10:38,379
spent<font color="#CCCCCC"> and I will</font><font color="#E5E5E5"> spend like 15 to 20</font>

194
00:10:34,899 --> 00:10:40,839
hours<font color="#CCCCCC"> a week might be</font><font color="#E5E5E5"> sometimes more</font>

195
00:10:38,379 --> 00:10:42,850
might be<font color="#E5E5E5"> less the only problem I</font>

196
00:10:40,839 --> 00:10:44,800
sometimes have is that's really<font color="#E5E5E5"> 20 15 to</font>

197
00:10:42,850 --> 00:10:47,230
20 hours<font color="#E5E5E5"> every week so if I go to a</font>

198
00:10:44,800 --> 00:10:50,019
conference I will be more<font color="#CCCCCC"> hours the next</font>

199
00:10:47,230 --> 00:10:52,420
week<font color="#CCCCCC"> but yeah it's still a reasonable</font>

200
00:10:50,019 --> 00:10:55,209
<font color="#E5E5E5">amount</font><font color="#CCCCCC"> most of this time is really</font>

201
00:10:52,420 --> 00:10:57,069
reviewing<font color="#E5E5E5"> in I use G evaluations so it's</font>

202
00:10:55,209 --> 00:10:59,969
reading<font color="#E5E5E5"> drafts of all different</font><font color="#CCCCCC"> areas</font>

203
00:10:57,069 --> 00:11:03,790
<font color="#CCCCCC">trying to understand as much</font><font color="#E5E5E5"> as possible</font>

204
00:10:59,970 --> 00:11:06,819
<font color="#CCCCCC">but</font><font color="#E5E5E5"> and it's about it like we have now a</font>

205
00:11:03,790 --> 00:11:08,279
limit of<font color="#E5E5E5"> 400 pages for each telecheck so</font>

206
00:11:06,819 --> 00:11:11,079
there's a<font color="#CCCCCC"> telecheck every two weeks</font>

207
00:11:08,279 --> 00:11:14,230
which is<font color="#E5E5E5"> about like 10 to 20 drafts</font>

208
00:11:11,079 --> 00:11:16,059
usually<font color="#CCCCCC"> but I mean also</font><font color="#E5E5E5"> you know drafts</font>

209
00:11:14,230 --> 00:11:17,319
<font color="#CCCCCC">right if you have a 10-page draft is</font>

210
00:11:16,059 --> 00:11:18,639
there any<font color="#E5E5E5"> kind of five pages you</font>

211
00:11:17,319 --> 00:11:20,829
actually have to<font color="#E5E5E5"> read because it's front</font>

212
00:11:18,639 --> 00:11:22,449
and pacinator and whatever<font color="#E5E5E5"> and then</font>

213
00:11:20,829 --> 00:11:25,449
sometimes yang models where<font color="#E5E5E5"> you also</font>

214
00:11:22,449 --> 00:11:29,799
don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to read</font><font color="#E5E5E5"> every line</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> 400</font>

215
00:11:25,449 --> 00:11:32,559
pages<font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> realistic here</font><font color="#CCCCCC"> if the</font>

216
00:11:29,799 --> 00:11:34,899
draft is short<font color="#CCCCCC"> enough and like not not</font>

217
00:11:32,559 --> 00:11:38,230
very<font color="#E5E5E5"> related to transport</font><font color="#CCCCCC"> I can do like</font>

218
00:11:34,899 --> 00:11:39,730
<font color="#CCCCCC">a draft in</font><font color="#E5E5E5"> 30 minutes</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> like if</font><font color="#CCCCCC"> there</font>

219
00:11:38,230 --> 00:11:41,199
actually<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> problem and I have to</font>

220
00:11:39,730 --> 00:11:44,019
understand<font color="#E5E5E5"> thing and it of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> takes</font>

221
00:11:41,199 --> 00:11:45,670
<font color="#E5E5E5">longer still um</font>

222
00:11:44,019 --> 00:11:46,929
<font color="#E5E5E5">then there's also of course a little bit</font>

223
00:11:45,670 --> 00:11:49,540
load that is related<font color="#E5E5E5"> to the working</font>

224
00:11:46,929 --> 00:11:51,399
groups but<font color="#CCCCCC"> we in transport only have</font><font color="#E5E5E5"> 12</font>

225
00:11:49,540 --> 00:11:54,429
working<font color="#CCCCCC"> groups so it's like six working</font>

226
00:11:51,399 --> 00:11:55,170
groups per ad<font color="#E5E5E5"> and I actually looked at</font><font color="#CCCCCC"> a</font>

227
00:11:54,429 --> 00:11:58,050
<font color="#E5E5E5">published</font>

228
00:11:55,170 --> 00:11:59,849
<font color="#CCCCCC">25 are seized last year</font><font color="#E5E5E5"> that's also a</font>

229
00:11:58,050 --> 00:12:03,060
reasonable<font color="#E5E5E5"> load and many of them was</font>

230
00:11:59,850 --> 00:12:04,500
actually<font color="#E5E5E5"> on Spencer because a big</font>

231
00:12:03,060 --> 00:12:06,060
<font color="#E5E5E5">working group which was wrapping up a</font>

232
00:12:04,500 --> 00:12:08,510
lot of<font color="#E5E5E5"> work so it's actually even a</font>

233
00:12:06,060 --> 00:12:11,069
little<font color="#E5E5E5"> bit less than that</font>

234
00:12:08,510 --> 00:12:13,350
some steering is involved<font color="#E5E5E5"> from time to</font>

235
00:12:11,070 --> 00:12:15,420
time but<font color="#E5E5E5"> we</font><font color="#CCCCCC"> also have very good</font>

236
00:12:13,350 --> 00:12:17,850
experience chairs<font color="#E5E5E5"> who know what they're</font>

237
00:12:15,420 --> 00:12:19,620
doing<font color="#CCCCCC"> so it's some steering coordination</font>

238
00:12:17,850 --> 00:12:23,220
some feedback<font color="#CCCCCC"> but it's not like a huge</font>

239
00:12:19,620 --> 00:12:25,410
amount<font color="#CCCCCC"> of</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> are other things</font>

240
00:12:23,220 --> 00:12:28,709
the<font color="#CCCCCC"> IHG is doing like everything related</font>

241
00:12:25,410 --> 00:12:30,899
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> IETF process itself and we need</font>

242
00:12:28,709 --> 00:12:32,430
<font color="#E5E5E5">people doing this in the I use</font><font color="#CCCCCC"> qi but</font>

243
00:12:30,899 --> 00:12:33,930
usually it really depends a little bit

244
00:12:32,430 --> 00:12:36,180
on who's interested<font color="#E5E5E5"> in the topic who has</font>

245
00:12:33,930 --> 00:12:37,888
time<font color="#CCCCCC"> to do it so</font><font color="#E5E5E5"> like I myself don't</font>

246
00:12:36,180 --> 00:12:39,540
take up a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these additional</font>

247
00:12:37,889 --> 00:12:42,449
responsibilities it really depends on

248
00:12:39,540 --> 00:12:44,699
<font color="#E5E5E5">your Co time commitment there's one</font>

249
00:12:42,449 --> 00:12:47,069
thing<font color="#E5E5E5"> transport is responsible for in</font>

250
00:12:44,699 --> 00:12:48,630
<font color="#CCCCCC">that support registry</font><font color="#E5E5E5"> and usually that</font>

251
00:12:47,070 --> 00:12:50,310
works<font color="#E5E5E5"> on it earrings we</font><font color="#CCCCCC"> have very</font><font color="#E5E5E5"> good</font>

252
00:12:48,630 --> 00:12:52,139
<font color="#E5E5E5">reviews there but sometimes there is a</font>

253
00:12:50,310 --> 00:12:56,939
question and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you have to care about</font>

254
00:12:52,139 --> 00:12:59,160
<font color="#E5E5E5">it but it's like</font><font color="#CCCCCC"> in terms of time</font>

255
00:12:56,940 --> 00:13:05,430
commitment<font color="#CCCCCC"> is it's also not a huge thing</font>

256
00:12:59,160 --> 00:13:07,010
right<font color="#CCCCCC"> yes so that's</font><font color="#E5E5E5"> my my day</font><font color="#CCCCCC"> any</font>

257
00:13:05,430 --> 00:13:11,459
<font color="#E5E5E5">question</font>

258
00:13:07,010 --> 00:13:13,740
<font color="#CCCCCC">Erin Faulk for a brief unhappy period I</font>

259
00:13:11,459 --> 00:13:15,630
<font color="#E5E5E5">was on the iesg mailing list fortunately</font>

260
00:13:13,740 --> 00:13:21,570
somebody fixed that<font color="#E5E5E5"> how much</font><font color="#CCCCCC"> of your</font>

261
00:13:15,630 --> 00:13:24,990
<font color="#E5E5E5">time you spend reading is</font><font color="#CCCCCC"> Gmail so I</font>

262
00:13:21,570 --> 00:13:27,060
actually try to<font color="#E5E5E5"> manage to keep my I 80</font>

263
00:13:24,990 --> 00:13:30,060
work on like two days a<font color="#E5E5E5"> week so it's</font>

264
00:13:27,060 --> 00:13:31,410
usually Monday Thursday and sometimes I

265
00:13:30,060 --> 00:13:37,079
<font color="#E5E5E5">don't read those emails the other days</font>

266
00:13:31,410 --> 00:13:38,640
or I have a very quick<font color="#E5E5E5"> look</font><font color="#CCCCCC"> but I mean</font>

267
00:13:37,079 --> 00:13:41,040
after<font color="#CCCCCC"> all it's also it's</font><font color="#E5E5E5"> not that you</font>

268
00:13:38,640 --> 00:13:43,380
<font color="#CCCCCC">have to</font><font color="#E5E5E5"> read all the emails because</font><font color="#CCCCCC"> it's</font>

269
00:13:41,040 --> 00:13:44,699
like it's<font color="#CCCCCC"> it reviews</font><font color="#E5E5E5"> its comments</font><font color="#CCCCCC"> to</font>

270
00:13:43,380 --> 00:13:45,990
reviews<font color="#E5E5E5"> on</font><font color="#CCCCCC"> oh I don't</font><font color="#E5E5E5"> know everything is</font>

271
00:13:44,699 --> 00:13:47,130
<font color="#E5E5E5">weatherman</font><font color="#CCCCCC"> for you so figuring out</font>

272
00:13:45,990 --> 00:13:48,449
what's<font color="#E5E5E5"> relevant for you takes a little</font>

273
00:13:47,130 --> 00:13:50,760
<font color="#E5E5E5">bit of time but</font><font color="#CCCCCC"> still it's like</font><font color="#E5E5E5"> you</font>

274
00:13:48,449 --> 00:13:53,819
don't<font color="#E5E5E5"> have to read everything right so</font>

275
00:13:50,760 --> 00:13:57,360
it's I guess it's an hour every morning

276
00:13:53,819 --> 00:14:01,199
<font color="#E5E5E5">I</font><font color="#CCCCCC"> don't know if I could yeah so what I</font>

277
00:13:57,360 --> 00:14:04,230
<font color="#E5E5E5">ended up doing</font><font color="#CCCCCC"> was bullying my ISG email</font>

278
00:14:01,199 --> 00:14:07,140
into documents that I was<font color="#E5E5E5"> responsible</font>

279
00:14:04,230 --> 00:14:08,940
for documents<font color="#CCCCCC"> that I was not responsible</font>

280
00:14:07,140 --> 00:14:11,670
<font color="#E5E5E5">for on intelligence</font>

281
00:14:08,940 --> 00:14:13,500
and kind of<font color="#CCCCCC"> everything</font><font color="#E5E5E5"> else so that</font>

282
00:14:11,670 --> 00:14:16,140
<font color="#E5E5E5">allows that</font><font color="#CCCCCC"> allows me to</font><font color="#E5E5E5"> prioritize a</font>

283
00:14:13,500 --> 00:14:17,240
bit<font color="#E5E5E5"> the other</font><font color="#CCCCCC"> thing I would say you know</font>

284
00:14:16,140 --> 00:14:22,199
Maria

285
00:14:17,240 --> 00:14:24,030
Maria's prefer referred to this<font color="#E5E5E5"> a couple</font>

286
00:14:22,200 --> 00:14:26,850
of times but there are things<font color="#E5E5E5"> that the</font>

287
00:14:24,030 --> 00:14:29,069
<font color="#CCCCCC">isg needs to do things that the ice tree</font>

288
00:14:26,850 --> 00:14:31,950
needs<font color="#E5E5E5"> to worry about but we don't need</font>

289
00:14:29,070 --> 00:14:35,280
15 people<font color="#E5E5E5"> worrying about them so you</font>

290
00:14:31,950 --> 00:14:37,920
know<font color="#E5E5E5"> that would not actually help so you</font>

291
00:14:35,280 --> 00:14:39,689
know<font color="#E5E5E5"> basically if you find some topic</font>

292
00:14:37,920 --> 00:14:41,729
that you're the right person<font color="#E5E5E5"> to work on</font>

293
00:14:39,690 --> 00:14:43,560
or there are three people<font color="#E5E5E5"> that</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to</font>

294
00:14:41,730 --> 00:14:46,320
<font color="#E5E5E5">come up with a proposal for something</font>

295
00:14:43,560 --> 00:14:51,270
<font color="#E5E5E5">you know you spend time on those if if</font>

296
00:14:46,320 --> 00:14:52,650
<font color="#CCCCCC">they date you</font><font color="#E5E5E5"> usually don't so I have to</font>

297
00:14:51,270 --> 00:14:59,100
say like at the beginning<font color="#CCCCCC"> and</font><font color="#E5E5E5"> freak me</font>

298
00:14:52,650 --> 00:15:07,860
out a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> to see all</font><font color="#CCCCCC"> this park</font>

299
00:14:59,100 --> 00:15:10,200
<font color="#CCCCCC">mail is your friend yes so that's</font><font color="#E5E5E5"> this</font>

300
00:15:07,860 --> 00:15:13,260
pretty<font color="#E5E5E5"> I mean like now would</font><font color="#CCCCCC"> be a chance</font>

301
00:15:10,200 --> 00:15:15,870
<font color="#E5E5E5">to ask more questions or you can just</font>

302
00:15:13,260 --> 00:15:19,560
talk to<font color="#CCCCCC"> me in the</font><font color="#E5E5E5"> hallway I guess if you</font>

303
00:15:15,870 --> 00:15:22,980
catch me and<font color="#CCCCCC"> seriously there's there's</font>

304
00:15:19,560 --> 00:15:24,689
we we are we have limitless interest in

305
00:15:22,980 --> 00:15:30,960
<font color="#E5E5E5">talking to people and answering</font>

306
00:15:24,690 --> 00:15:34,250
questions<font color="#E5E5E5"> so please don't be shy</font><font color="#CCCCCC"> okay</font>

307
00:15:30,960 --> 00:15:53,250
then<font color="#E5E5E5"> we start</font><font color="#CCCCCC"> with our</font><font color="#E5E5E5"> first talk</font>

308
00:15:34,250 --> 00:15:55,320
<font color="#E5E5E5">Christophe is coming great and just as</font>

309
00:15:53,250 --> 00:15:57,360
we're<font color="#CCCCCC"> talking as we're</font><font color="#E5E5E5"> starting this I'm</font>

310
00:15:55,320 --> 00:16:01,140
gonna<font color="#E5E5E5"> go ahead and beam off here so</font><font color="#CCCCCC"> that</font>

311
00:15:57,360 --> 00:16:03,210
<font color="#E5E5E5">people can use the mic line if anybody</font>

312
00:16:01,140 --> 00:16:05,750
needs<font color="#E5E5E5"> to talk to</font><font color="#CCCCCC"> me just yell and I'll</font>

313
00:16:03,210 --> 00:16:05,750
raise<font color="#CCCCCC"> my hand</font>

314
00:16:10,460 --> 00:16:19,010
hello<font color="#CCCCCC"> so this is a modified version of a</font>

315
00:16:14,649 --> 00:16:21,020
talk that<font color="#E5E5E5"> we have been giving last week</font>

316
00:16:19,010 --> 00:16:25,550
at the<font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> Network Developers</font>

317
00:16:21,020 --> 00:16:27,050
Conference<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is work where we</font><font color="#CCCCCC"> are</font>

318
00:16:25,550 --> 00:16:29,359
<font color="#CCCCCC">working together with a bunch of people</font>

319
00:16:27,050 --> 00:16:31,729
<font color="#CCCCCC">there is</font><font color="#E5E5E5"> Matt</font><font color="#CCCCCC"> Martino and Peter</font>

320
00:16:29,360 --> 00:16:36,470
<font color="#CCCCCC">crushed-up from Intel</font><font color="#E5E5E5"> much about from</font>

321
00:16:31,730 --> 00:16:38,330
<font color="#CCCCCC">casares and myself and so the</font><font color="#E5E5E5"> bow met</font>

322
00:16:36,470 --> 00:16:40,970
and<font color="#CCCCCC"> matured they presented</font><font color="#E5E5E5"> that last</font>

323
00:16:38,330 --> 00:16:42,470
week at<font color="#CCCCCC"> Linux Network developers and I'm</font>

324
00:16:40,970 --> 00:16:45,440
presenting<font color="#CCCCCC"> here</font><font color="#E5E5E5"> a slightly modified</font>

325
00:16:42,470 --> 00:16:48,470
<font color="#CCCCCC">version that shows more the IETF and</font>

326
00:16:45,440 --> 00:16:53,270
protocol design impact on<font color="#CCCCCC"> up streaming</font>

327
00:16:48,470 --> 00:16:55,910
<font color="#E5E5E5">MB TCP as most of you know</font><font color="#CCCCCC"> MB TSP has</font>

328
00:16:53,270 --> 00:16:59,000
been<font color="#CCCCCC"> our experimental</font><font color="#E5E5E5"> standard for I</font>

329
00:16:55,910 --> 00:17:01,670
think<font color="#CCCCCC"> maybe a few years and we since</font>

330
00:16:59,000 --> 00:17:03,830
beginning we always<font color="#E5E5E5"> had linings</font>

331
00:17:01,670 --> 00:17:05,928
implementation that was implemented in a

332
00:17:03,830 --> 00:17:08,000
standard<font color="#E5E5E5"> however it is still not</font>

333
00:17:05,929 --> 00:17:10,699
upstream<font color="#CCCCCC"> inlets from Linux kernel and</font>

334
00:17:08,000 --> 00:17:14,300
some are surprised<font color="#E5E5E5"> by that and there are</font>

335
00:17:10,699 --> 00:17:17,870
<font color="#E5E5E5">various reasons for that and I</font><font color="#CCCCCC"> will talk</font>

336
00:17:14,300 --> 00:17:19,879
to<font color="#CCCCCC"> one of the some of</font><font color="#E5E5E5"> those now so the</font>

337
00:17:17,869 --> 00:17:24,979
question is one is<font color="#CCCCCC"> wise</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> string</font><font color="#E5E5E5"> MPGs</font>

338
00:17:19,880 --> 00:17:27,230
<font color="#CCCCCC">be</font><font color="#E5E5E5"> actually so complicated well first of</font>

339
00:17:24,980 --> 00:17:30,200
all<font color="#E5E5E5"> for those of you who know the Linux</font>

340
00:17:27,230 --> 00:17:33,470
kernel the TCP stack<font color="#CCCCCC"> it is highly</font>

341
00:17:30,200 --> 00:17:35,059
optimized<font color="#E5E5E5"> right they can go up to almost</font>

342
00:17:33,470 --> 00:17:40,510
<font color="#E5E5E5">now I don't know I finger Hahnel Giga</font>

343
00:17:35,059 --> 00:17:42,889
bits per seconds for a TCP stream any

344
00:17:40,510 --> 00:17:44,780
addition of<font color="#E5E5E5"> additional fields in</font>

345
00:17:42,890 --> 00:17:47,210
structures incurs additional cache

346
00:17:44,780 --> 00:17:49,190
misses which basically kills performance

347
00:17:47,210 --> 00:17:51,290
and if statement<font color="#CCCCCC"> will introduce</font>

348
00:17:49,190 --> 00:17:53,000
additional branching they are very

349
00:17:51,290 --> 00:17:54,800
<font color="#E5E5E5">sensitive to all of this the maintainer</font>

350
00:17:53,000 --> 00:17:59,870
<font color="#E5E5E5">of the Linux</font><font color="#CCCCCC"> kernel networking stack</font>

351
00:17:54,800 --> 00:18:02,450
right<font color="#CCCCCC"> and because of this the stack</font><font color="#E5E5E5"> has</font>

352
00:17:59,870 --> 00:18:05,239
become extremely optimized<font color="#E5E5E5"> so every</font>

353
00:18:02,450 --> 00:18:09,230
change in<font color="#E5E5E5"> the Linux TCP fast path is</font>

354
00:18:05,240 --> 00:18:11,510
being scrutinized heavily then there's

355
00:18:09,230 --> 00:18:14,270
also the original<font color="#CCCCCC"> implementation</font><font color="#E5E5E5"> the one</font>

356
00:18:11,510 --> 00:18:17,090
where<font color="#E5E5E5"> everything started off with that</font>

357
00:18:14,270 --> 00:18:19,070
we<font color="#E5E5E5"> created back in</font><font color="#CCCCCC"> the days when</font><font color="#E5E5E5"> that</font>

358
00:18:17,090 --> 00:18:21,110
Sebastia body actually<font color="#CCCCCC"> began</font><font color="#E5E5E5"> in days for</font>

359
00:18:19,070 --> 00:18:24,210
those who know him

360
00:18:21,110 --> 00:18:26,520
and that I took<font color="#E5E5E5"> over then and this</font>

361
00:18:24,210 --> 00:18:28,290
implementation<font color="#E5E5E5"> the goal was a bit</font>

362
00:18:26,520 --> 00:18:31,320
<font color="#E5E5E5">different our goal was not to upstream</font>

363
00:18:28,290 --> 00:18:33,720
<font color="#E5E5E5">it immediately</font><font color="#CCCCCC"> the goal was basically</font><font color="#E5E5E5"> to</font>

364
00:18:31,320 --> 00:18:35,520
<font color="#E5E5E5">have a way to quickly iterate and</font>

365
00:18:33,720 --> 00:18:37,460
implement<font color="#E5E5E5"> the standard as the standard</font>

366
00:18:35,520 --> 00:18:41,790
was evolving as the<font color="#E5E5E5"> draft was evolving</font>

367
00:18:37,460 --> 00:18:44,130
<font color="#CCCCCC">we</font><font color="#E5E5E5"> wanted to be able to experiment to</font>

368
00:18:41,790 --> 00:18:46,500
get<font color="#E5E5E5"> quickly numbers out</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> currency</font>

369
00:18:44,130 --> 00:18:50,070
<font color="#E5E5E5">empties the implementation to see how</font>

370
00:18:46,500 --> 00:18:53,460
certain decisions<font color="#CCCCCC"> in the protocol</font><font color="#E5E5E5"> would</font>

371
00:18:50,070 --> 00:18:57,870
affect the performance of<font color="#E5E5E5"> MP DCP</font><font color="#CCCCCC"> so our</font>

372
00:18:53,460 --> 00:19:00,600
goal<font color="#E5E5E5"> was basically to have a non-generic</font>

373
00:18:57,870 --> 00:19:03,750
stack and be<font color="#E5E5E5"> quickly at iterating at the</font>

374
00:19:00,600 --> 00:19:05,610
time and<font color="#E5E5E5"> also we were researchers so our</font>

375
00:19:03,750 --> 00:19:07,350
goal was also to write papers<font color="#CCCCCC"> and</font><font color="#E5E5E5"> not</font>

376
00:19:05,610 --> 00:19:10,560
necessarily<font color="#E5E5E5"> to upstream code to the</font>

377
00:19:07,350 --> 00:19:13,590
<font color="#E5E5E5">Linux kernel</font><font color="#CCCCCC"> now over time this</font>

378
00:19:10,560 --> 00:19:15,060
<font color="#E5E5E5">implementation has evolved into a more</font>

379
00:19:13,590 --> 00:19:18,209
<font color="#CCCCCC">stable version and actually nowadays</font>

380
00:19:15,060 --> 00:19:20,690
<font color="#E5E5E5">there</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> millions of devices</font><font color="#CCCCCC"> that</font>

381
00:19:18,210 --> 00:19:23,940
are<font color="#E5E5E5"> using it people have heard of</font>

382
00:19:20,690 --> 00:19:26,010
<font color="#E5E5E5">Samsung deploying it in Korea and all of</font>

383
00:19:23,940 --> 00:19:28,230
this is based on this particular<font color="#E5E5E5"> stack</font>

384
00:19:26,010 --> 00:19:30,600
<font color="#E5E5E5">but all of those</font><font color="#CCCCCC"> deployments that</font><font color="#E5E5E5"> are</font>

385
00:19:28,230 --> 00:19:33,680
currently out<font color="#CCCCCC"> there there</font><font color="#E5E5E5"> are still very</font>

386
00:19:30,600 --> 00:19:36,300
special purpose deployments where the

387
00:19:33,680 --> 00:19:38,910
one the<font color="#E5E5E5"> system administrator was</font>

388
00:19:36,300 --> 00:19:43,800
deploying it has tight<font color="#E5E5E5"> control over how</font>

389
00:19:38,910 --> 00:19:46,050
<font color="#CCCCCC">MPTP is being used</font><font color="#E5E5E5"> now we want to evolve</font>

390
00:19:43,800 --> 00:19:48,930
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> MPSP implementation</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Alana's</font>

391
00:19:46,050 --> 00:19:52,230
kernels<font color="#CCCCCC"> so that we can actually even</font>

392
00:19:48,930 --> 00:19:54,390
<font color="#E5E5E5">more easily be integrated into the Linux</font>

393
00:19:52,230 --> 00:19:56,490
<font color="#E5E5E5">kernel and that means we have a few</font>

394
00:19:54,390 --> 00:19:58,680
limitations<font color="#CCCCCC"> first of</font><font color="#E5E5E5"> all that means they</font>

395
00:19:56,490 --> 00:20:01,050
are<font color="#E5E5E5"> not there can't be any performance</font>

396
00:19:58,680 --> 00:20:05,070
regressions<font color="#CCCCCC"> in a regular TCP stack</font>

397
00:20:01,050 --> 00:20:06,899
<font color="#E5E5E5">that's the non plus</font><font color="#CCCCCC"> ultra condition</font><font color="#E5E5E5"> the</font>

398
00:20:05,070 --> 00:20:09,720
certain second one is we want<font color="#CCCCCC"> it</font><font color="#E5E5E5"> to be</font>

399
00:20:06,900 --> 00:20:11,610
maintainable<font color="#E5E5E5"> and configurable the</font>

400
00:20:09,720 --> 00:20:15,690
current like<font color="#E5E5E5"> special-purpose</font>

401
00:20:11,610 --> 00:20:17,939
way of deploying<font color="#CCCCCC"> MPSP</font><font color="#E5E5E5"> can't be done in</font><font color="#CCCCCC"> a</font>

402
00:20:15,690 --> 00:20:19,650
generic implementation that might be

403
00:20:17,940 --> 00:20:22,980
used<font color="#E5E5E5"> by</font><font color="#CCCCCC"> android and many other systems</font>

404
00:20:19,650 --> 00:20:25,640
<font color="#E5E5E5">and so we</font><font color="#CCCCCC"> won't so want it to be</font>

405
00:20:22,980 --> 00:20:29,340
deployable<font color="#E5E5E5"> in a variety of deployments</font>

406
00:20:25,640 --> 00:20:31,380
so an ideal implementation would

407
00:20:29,340 --> 00:20:33,270
basically look<font color="#CCCCCC"> like that right you</font><font color="#E5E5E5"> have</font>

408
00:20:31,380 --> 00:20:34,650
<font color="#E5E5E5">the socket layer below that you</font><font color="#CCCCCC"> have an</font>

409
00:20:33,270 --> 00:20:36,570
MP TCP socket

410
00:20:34,650 --> 00:20:39,450
and then you have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> TCP sub flows</font><font color="#E5E5E5"> over</font>

411
00:20:36,570 --> 00:20:40,830
this that would be we<font color="#CCCCCC"> have a clean</font>

412
00:20:39,450 --> 00:20:43,080
interface between the different layers

413
00:20:40,830 --> 00:20:44,909
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> would just basically send data</font>

414
00:20:43,080 --> 00:20:48,500
<font color="#E5E5E5">either over one</font><font color="#CCCCCC"> or the other</font>

415
00:20:44,910 --> 00:20:50,970
<font color="#E5E5E5">TCP sub flow and receive it as well</font><font color="#CCCCCC"> that</font>

416
00:20:48,500 --> 00:20:53,220
<font color="#E5E5E5">that is the</font><font color="#CCCCCC"> ideal empties p.m.</font>

417
00:20:50,970 --> 00:20:55,980
temptation<font color="#E5E5E5"> however the reality looks</font>

418
00:20:53,220 --> 00:20:57,900
rather<font color="#E5E5E5"> like this we have data structures</font>

419
00:20:55,980 --> 00:21:01,170
sitting at each layer we have callbacks

420
00:20:57,900 --> 00:21:04,410
<font color="#E5E5E5">from up and</font><font color="#CCCCCC"> down from</font><font color="#E5E5E5"> one sub floor to</font>

421
00:21:01,170 --> 00:21:07,200
the other sub flow<font color="#E5E5E5"> and all of those</font>

422
00:21:04,410 --> 00:21:08,880
different interactions<font color="#E5E5E5"> data structures</font>

423
00:21:07,200 --> 00:21:13,170
and calls are making the upstream very

424
00:21:08,880 --> 00:21:14,790
complex and I will show<font color="#E5E5E5"> you how some</font><font color="#CCCCCC"> of</font>

425
00:21:13,170 --> 00:21:16,350
the protocol design decisions<font color="#CCCCCC"> that were</font>

426
00:21:14,790 --> 00:21:19,080
made have<font color="#CCCCCC"> basically influenced</font><font color="#E5E5E5"> this</font>

427
00:21:16,350 --> 00:21:22,649
design and have led us<font color="#CCCCCC"> to end up in</font><font color="#E5E5E5"> this</font>

428
00:21:19,080 --> 00:21:25,230
<font color="#CCCCCC">situation so that brings</font><font color="#E5E5E5"> me to the</font>

429
00:21:22,650 --> 00:21:27,540
protocol challenges<font color="#E5E5E5"> and I must say this</font>

430
00:21:25,230 --> 00:21:30,210
is<font color="#E5E5E5"> not to like kind of put the blame on</font>

431
00:21:27,540 --> 00:21:31,830
<font color="#E5E5E5">one or the other it's just like well</font>

432
00:21:30,210 --> 00:21:34,080
<font color="#E5E5E5">because I mean I was also</font><font color="#CCCCCC"> part of</font><font color="#E5E5E5"> the</font>

433
00:21:31,830 --> 00:21:38,689
protocol design so it's kind of we all

434
00:21:34,080 --> 00:21:41,490
we all are kind<font color="#E5E5E5"> of part of this and</font><font color="#CCCCCC"> also</font>

435
00:21:38,690 --> 00:21:44,370
this is<font color="#CCCCCC"> just how one part of the</font>

436
00:21:41,490 --> 00:21:46,710
protocol specification kind of

437
00:21:44,370 --> 00:21:48,689
<font color="#CCCCCC">influenced</font><font color="#E5E5E5"> influences certain decisions</font>

438
00:21:46,710 --> 00:21:52,050
that need to<font color="#CCCCCC"> be made inside an</font>

439
00:21:48,690 --> 00:21:53,910
implementation so first protocol

440
00:21:52,050 --> 00:21:56,340
challenge<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the data sequence</font>

441
00:21:53,910 --> 00:21:59,430
numbers and the mappings<font color="#E5E5E5"> right for those</font>

442
00:21:56,340 --> 00:22:01,709
<font color="#E5E5E5">of you who know MP TCP right we have the</font>

443
00:21:59,430 --> 00:22:05,460
<font color="#CCCCCC">two sequence number spaces there's one</font>

444
00:22:01,710 --> 00:22:08,220
sequence number space for the data that

445
00:22:05,460 --> 00:22:11,360
<font color="#CCCCCC">is being sent and the sequence number</font>

446
00:22:08,220 --> 00:22:13,800
<font color="#CCCCCC">spaces in the individual TCP sub flows</font>

447
00:22:11,360 --> 00:22:15,929
<font color="#CCCCCC">and</font><font color="#E5E5E5"> for example the data sequence space</font>

448
00:22:13,800 --> 00:22:19,139
let's<font color="#E5E5E5"> say</font><font color="#CCCCCC"> here in this example goes from</font>

449
00:22:15,930 --> 00:22:22,050
<font color="#CCCCCC">one two three four five</font><font color="#E5E5E5"> and we are</font>

450
00:22:19,140 --> 00:22:24,750
sending<font color="#E5E5E5"> segments and let's say we send</font>

451
00:22:22,050 --> 00:22:27,960
the gray<font color="#E5E5E5"> part of the data we send it on</font>

452
00:22:24,750 --> 00:22:29,700
<font color="#E5E5E5">the left sub flow and yellow part of</font><font color="#CCCCCC"> the</font>

453
00:22:27,960 --> 00:22:32,310
data<font color="#E5E5E5"> we send an on the right part of the</font>

454
00:22:29,700 --> 00:22:35,730
<font color="#CCCCCC">subfloor in the right sub flow so this</font>

455
00:22:32,310 --> 00:22:37,710
means for every<font color="#CCCCCC"> segment that we send</font><font color="#E5E5E5"> we</font>

456
00:22:35,730 --> 00:22:41,070
need to specify the data<font color="#E5E5E5"> sequence</font>

457
00:22:37,710 --> 00:22:45,870
mapping in side as part<font color="#E5E5E5"> of the segment</font>

458
00:22:41,070 --> 00:22:48,418
the<font color="#CCCCCC"> MPT protocol says that this kind of</font>

459
00:22:45,870 --> 00:22:51,359
DSS mapping is

460
00:22:48,419 --> 00:22:52,919
to<font color="#E5E5E5"> fight inside a TCP option that is</font>

461
00:22:51,359 --> 00:22:55,408
seems<font color="#CCCCCC"> like a very</font><font color="#E5E5E5"> obvious design</font>

462
00:22:52,919 --> 00:22:56,789
<font color="#E5E5E5">decision and it was at the time when we</font>

463
00:22:55,409 --> 00:23:00,299
were<font color="#CCCCCC"> designing the</font><font color="#E5E5E5"> protocols seems</font>

464
00:22:56,789 --> 00:23:02,759
seemed like a good<font color="#E5E5E5"> approach now however</font>

465
00:23:00,299 --> 00:23:05,489
<font color="#E5E5E5">if we want to implement this</font><font color="#CCCCCC"> it becomes</font>

466
00:23:02,759 --> 00:23:08,309
a little bit tricky<font color="#E5E5E5"> one of the problems</font>

467
00:23:05,489 --> 00:23:10,739
is so we have<font color="#CCCCCC"> the</font><font color="#E5E5E5"> empty</font><font color="#CCCCCC"> space</font><font color="#E5E5E5"> socket</font>

468
00:23:08,309 --> 00:23:12,710
<font color="#CCCCCC">who's basically</font><font color="#E5E5E5"> holding data and then we</font>

469
00:23:10,739 --> 00:23:15,179
<font color="#CCCCCC">are pushing data down on once up flow</font>

470
00:23:12,710 --> 00:23:18,059
now if we have a clean interface between

471
00:23:15,179 --> 00:23:21,600
both right<font color="#E5E5E5"> we are basically pushing</font><font color="#CCCCCC"> data</font>

472
00:23:18,059 --> 00:23:24,178
down<font color="#E5E5E5"> this just memory allocation now we</font>

473
00:23:21,600 --> 00:23:27,209
need to kind<font color="#E5E5E5"> of add to</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> tell the TCP</font>

474
00:23:24,179 --> 00:23:30,690
stack a I would like you to write was

475
00:23:27,210 --> 00:23:33,090
this segment<font color="#E5E5E5"> this particular TCP option</font>

476
00:23:30,690 --> 00:23:35,190
and so the TCP stack would need kind of

477
00:23:33,090 --> 00:23:37,168
<font color="#E5E5E5">to ask call back into the empty speech</font>

478
00:23:35,190 --> 00:23:40,409
tag and ask hey<font color="#CCCCCC"> what kind of</font><font color="#E5E5E5"> TSS option</font>

479
00:23:37,169 --> 00:23:42,419
<font color="#E5E5E5">right should I write but this introduces</font>

480
00:23:40,409 --> 00:23:46,409
a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> peg and</font><font color="#E5E5E5"> force between the</font>

481
00:23:42,419 --> 00:23:49,289
layers<font color="#CCCCCC"> so</font><font color="#E5E5E5"> the other solution</font><font color="#CCCCCC"> that we</font>

482
00:23:46,409 --> 00:23:51,960
would<font color="#E5E5E5"> want to do is well why not</font><font color="#CCCCCC"> just</font>

483
00:23:49,289 --> 00:23:54,989
<font color="#E5E5E5">simply add this information</font><font color="#CCCCCC"> well to DSS</font>

484
00:23:51,960 --> 00:23:57,779
option as part<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> metadata that</font>

485
00:23:54,989 --> 00:24:00,419
<font color="#E5E5E5">comes with the data and if you know the</font>

486
00:23:57,779 --> 00:24:02,879
Linux kernel it has basically<font color="#E5E5E5"> the memory</font>

487
00:24:00,419 --> 00:24:04,889
region that is holding the data<font color="#E5E5E5"> and then</font>

488
00:24:02,879 --> 00:24:08,189
<font color="#E5E5E5">you have what is called</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> SK</font><font color="#CCCCCC"> buff</font>

489
00:24:04,889 --> 00:24:09,928
which<font color="#E5E5E5"> is holding the</font><font color="#CCCCCC"> metadata so the</font>

490
00:24:08,190 --> 00:24:12,330
obvious<font color="#CCCCCC"> approach</font><font color="#E5E5E5"> would</font><font color="#CCCCCC"> be well let's</font>

491
00:24:09,929 --> 00:24:15,739
<font color="#E5E5E5">simply add the DSS mapping inside the SK</font>

492
00:24:12,330 --> 00:24:19,350
buff<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> problematic for few reasons</font>

493
00:24:15,739 --> 00:24:20,639
<font color="#CCCCCC">the first</font><font color="#E5E5E5"> reason is that we can't just</font>

494
00:24:19,350 --> 00:24:23,488
simply increase the size<font color="#E5E5E5"> of this</font>

495
00:24:20,639 --> 00:24:25,859
<font color="#CCCCCC">structure</font><font color="#E5E5E5"> because the TCP stack is so</font>

496
00:24:23,489 --> 00:24:28,830
highly optimized adding fields<font color="#E5E5E5"> into a</font>

497
00:24:25,859 --> 00:24:32,249
structure means potentially more cache

498
00:24:28,830 --> 00:24:35,309
misses<font color="#E5E5E5"> and</font><font color="#CCCCCC"> a cache miss</font><font color="#E5E5E5"> can go anywhere</font>

499
00:24:32,249 --> 00:24:37,799
<font color="#CCCCCC">from up to</font><font color="#E5E5E5"> two knots CPU cycles and</font><font color="#CCCCCC"> that</font>

500
00:24:35,309 --> 00:24:40,320
will simply kill the performance so it

501
00:24:37,799 --> 00:24:42,779
is basically forbidden to add anything

502
00:24:40,320 --> 00:24:44,279
<font color="#E5E5E5">inside this kind</font><font color="#CCCCCC"> of a structure except</font>

503
00:24:42,779 --> 00:24:48,059
if you<font color="#CCCCCC"> managed to do</font><font color="#E5E5E5"> it in a cache</font>

504
00:24:44,279 --> 00:24:50,700
neutral way the second reason why<font color="#E5E5E5"> even</font>

505
00:24:48,059 --> 00:24:54,029
if we would manage<font color="#CCCCCC"> to</font><font color="#E5E5E5"> somehow add this</font>

506
00:24:50,700 --> 00:24:55,619
information into the<font color="#CCCCCC"> sk buff such that</font>

507
00:24:54,029 --> 00:24:58,379
there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> no additional cash line misses</font>

508
00:24:55,619 --> 00:25:01,230
<font color="#E5E5E5">there's still a problem is because the</font>

509
00:24:58,379 --> 00:25:02,189
TCP stack can at any point decide<font color="#E5E5E5"> to</font>

510
00:25:01,230 --> 00:25:04,110
split<font color="#E5E5E5"> the segment</font>

511
00:25:02,190 --> 00:25:07,220
and split them<font color="#E5E5E5"> in multiple</font><font color="#CCCCCC"> parts merge</font>

512
00:25:04,110 --> 00:25:10,918
it with<font color="#E5E5E5"> others</font><font color="#CCCCCC"> when he has always used</font>

513
00:25:07,220 --> 00:25:12,539
<font color="#E5E5E5">and it receives the sack the Lennox</font><font color="#CCCCCC"> TSP</font>

514
00:25:10,919 --> 00:25:14,759
<font color="#E5E5E5">stag is going to split those segments in</font>

515
00:25:12,539 --> 00:25:17,210
different pieces<font color="#CCCCCC"> and might merge them</font>

516
00:25:14,759 --> 00:25:19,950
<font color="#CCCCCC">back with others so what that means</font>

517
00:25:17,210 --> 00:25:21,779
<font color="#E5E5E5">anywhere in the TCP code where</font><font color="#CCCCCC"> we are</font>

518
00:25:19,950 --> 00:25:24,120
splitting<font color="#E5E5E5"> and merging segments we need</font>

519
00:25:21,779 --> 00:25:26,360
to make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that the DSS mapping is</font>

520
00:25:24,120 --> 00:25:29,189
propagated through the metadata as well

521
00:25:26,360 --> 00:25:36,750
again meaning more if statements into

522
00:25:29,190 --> 00:25:40,399
<font color="#E5E5E5">the TCP stack another issue of challenge</font>

523
00:25:36,750 --> 00:25:43,799
that<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> facing is that</font><font color="#CCCCCC"> we are</font>

524
00:25:40,399 --> 00:25:47,219
<font color="#CCCCCC">transmitting signals</font><font color="#E5E5E5"> on TCP options and</font>

525
00:25:43,799 --> 00:25:50,190
there's no clean<font color="#E5E5E5"> interface in the TCP</font>

526
00:25:47,220 --> 00:25:53,539
stack to basically propagate TCP options

527
00:25:50,190 --> 00:25:57,779
up to other layers usually TCP options

528
00:25:53,539 --> 00:26:00,120
<font color="#E5E5E5">have only a notification locally inside</font>

529
00:25:57,779 --> 00:26:03,120
the TCP stack<font color="#E5E5E5"> right let's take the</font>

530
00:26:00,120 --> 00:26:05,129
example<font color="#CCCCCC"> of sack the sack option will be</font>

531
00:26:03,120 --> 00:26:07,979
treated will be taken<font color="#CCCCCC"> care of by the TCP</font>

532
00:26:05,129 --> 00:26:11,158
stack only<font color="#CCCCCC"> same for these same for the</font>

533
00:26:07,980 --> 00:26:12,870
<font color="#CCCCCC">timestamp</font><font color="#E5E5E5"> option same for all the other</font>

534
00:26:11,159 --> 00:26:16,620
option<font color="#CCCCCC"> all most options</font><font color="#E5E5E5"> that we can</font>

535
00:26:12,870 --> 00:26:19,860
<font color="#E5E5E5">think about</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> let me give you an</font>

536
00:26:16,620 --> 00:26:22,459
example<font color="#E5E5E5"> of</font><font color="#CCCCCC"> how the use of TCP options</font>

537
00:26:19,860 --> 00:26:26,459
for cross layer signaling as a problem

538
00:26:22,460 --> 00:26:29,850
let's say we have an<font color="#CCCCCC"> MPD</font><font color="#E5E5E5"> speak</font>

539
00:26:26,460 --> 00:26:32,460
connection with<font color="#E5E5E5"> to TCP sub flows</font><font color="#CCCCCC"> and one</font>

540
00:26:29,850 --> 00:26:34,889
<font color="#E5E5E5">of them has basically</font><font color="#CCCCCC"> notification my</font>

541
00:26:32,460 --> 00:26:38,789
interface goes down at this<font color="#E5E5E5"> point the</font>

542
00:26:34,889 --> 00:26:40,529
TCP socket will be destroyed<font color="#CCCCCC"> and we now</font>

543
00:26:38,789 --> 00:26:43,080
need to<font color="#E5E5E5"> send a remove address on the</font>

544
00:26:40,529 --> 00:26:44,789
other sub flow so<font color="#CCCCCC"> that means first</font><font color="#E5E5E5"> there</font>

545
00:26:43,080 --> 00:26:48,899
<font color="#E5E5E5">is a notification coming up to the MP</font>

546
00:26:44,789 --> 00:26:51,000
TCP stack and then we need<font color="#E5E5E5"> to push an</font>

547
00:26:48,899 --> 00:26:54,600
information down on another TCP stack

548
00:26:51,000 --> 00:26:56,340
and telling the other TCP stack<font color="#E5E5E5"> I want</font>

549
00:26:54,600 --> 00:26:59,480
you to<font color="#E5E5E5"> send an acknowledgment with a</font>

550
00:26:56,340 --> 00:27:02,279
very particular<font color="#E5E5E5"> TCP option right</font>

551
00:26:59,480 --> 00:27:04,860
<font color="#E5E5E5">currently there is no no clean interface</font>

552
00:27:02,279 --> 00:27:07,379
<font color="#E5E5E5">for those kind of things usually an</font>

553
00:27:04,860 --> 00:27:09,959
application<font color="#E5E5E5"> that is sitting on</font><font color="#CCCCCC"> top of</font>

554
00:27:07,379 --> 00:27:12,059
the TCP stack never tells<font color="#CCCCCC"> this</font><font color="#E5E5E5"> piece</font>

555
00:27:09,960 --> 00:27:15,419
<font color="#E5E5E5">like hey send an act with this</font><font color="#CCCCCC"> option</font>

556
00:27:12,059 --> 00:27:15,970
<font color="#E5E5E5">right so that is something that is new</font>

557
00:27:15,419 --> 00:27:17,980
and

558
00:27:15,970 --> 00:27:23,980
needs<font color="#E5E5E5"> to be built and added into the</font><font color="#CCCCCC"> TSP</font>

559
00:27:17,980 --> 00:27:26,050
<font color="#E5E5E5">into the Linux kernel another problem</font>

560
00:27:23,980 --> 00:27:28,270
known you can see this on the<font color="#E5E5E5"> receivers</font>

561
00:27:26,050 --> 00:27:31,330
site when we are receiving<font color="#E5E5E5"> TCP options</font>

562
00:27:28,270 --> 00:27:33,820
right<font color="#E5E5E5"> we for example we receive</font><font color="#CCCCCC"> the</font>

563
00:27:31,330 --> 00:27:37,659
remove address option<font color="#CCCCCC"> which</font><font color="#E5E5E5"> means you</font>

564
00:27:33,820 --> 00:27:39,639
need<font color="#CCCCCC"> to kill the other TCP sub flow so</font>

565
00:27:37,660 --> 00:27:42,610
receive a<font color="#CCCCCC"> TCP egg with a particular</font><font color="#E5E5E5"> TCP</font>

566
00:27:39,640 --> 00:27:44,890
option first of all this<font color="#CCCCCC"> TSP Ike looks</font>

567
00:27:42,610 --> 00:27:47,320
like it like a duplicate<font color="#CCCCCC"> ACK and usually</font>

568
00:27:44,890 --> 00:27:50,620
gets simply<font color="#CCCCCC"> dropped ibid TSP stack</font><font color="#E5E5E5"> so we</font>

569
00:27:47,320 --> 00:27:53,260
need to already cut down<font color="#E5E5E5"> cut this</font>

570
00:27:50,620 --> 00:27:54,929
behavior and<font color="#E5E5E5"> in the stack then we need</font>

571
00:27:53,260 --> 00:27:58,150
to pass the remove address<font color="#CCCCCC"> option and</font>

572
00:27:54,930 --> 00:28:00,790
propagate it up to the<font color="#CCCCCC"> MPSP layer so</font>

573
00:27:58,150 --> 00:28:04,330
that ultimately then the MPSP layer can

574
00:28:00,790 --> 00:28:05,980
kill the other TCP connection so again

575
00:28:04,330 --> 00:28:09,070
we need cross layer signaling between

576
00:28:05,980 --> 00:28:14,830
<font color="#CCCCCC">the layers that are is originating from</font>

577
00:28:09,070 --> 00:28:19,540
<font color="#E5E5E5">a</font><font color="#CCCCCC"> TCP option so there</font><font color="#E5E5E5"> are many of those</font>

578
00:28:14,830 --> 00:28:21,850
<font color="#E5E5E5">signals in inside and M TCP inside</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> MDM</font>

579
00:28:19,540 --> 00:28:24,600
<font color="#CCCCCC">PT specific specification and each</font><font color="#E5E5E5"> of</font>

580
00:28:21,850 --> 00:28:27,189
them need needs different<font color="#E5E5E5"> kind of</font>

581
00:28:24,600 --> 00:28:29,620
different<font color="#E5E5E5"> kinds of behaviors</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a</font>

582
00:28:27,190 --> 00:28:31,780
different layers in<font color="#E5E5E5"> the stack and so</font>

583
00:28:29,620 --> 00:28:33,669
<font color="#CCCCCC">it's kind of tricky to make sure</font><font color="#E5E5E5"> that</font>

584
00:28:31,780 --> 00:28:34,450
all of<font color="#E5E5E5"> this gets consolidated into a</font>

585
00:28:33,670 --> 00:28:37,120
<font color="#CCCCCC">single point</font>

586
00:28:34,450 --> 00:28:39,100
all those cross layer signaling<font color="#E5E5E5"> are</font>

587
00:28:37,120 --> 00:28:43,840
basically major pain point for<font color="#CCCCCC"> the NP</font>

588
00:28:39,100 --> 00:28:47,020
TSP implementation so how<font color="#CCCCCC"> we'll have we</font>

589
00:28:43,840 --> 00:28:50,310
<font color="#E5E5E5">are we trying to fit the</font><font color="#CCCCCC"> amputees piece</font>

590
00:28:47,020 --> 00:28:53,050
back<font color="#E5E5E5"> into the networking stack in Linux</font>

591
00:28:50,310 --> 00:28:55,780
so first of all<font color="#E5E5E5"> having this layered</font>

592
00:28:53,050 --> 00:28:59,200
approach is very<font color="#E5E5E5"> clean</font><font color="#CCCCCC"> it fits very</font>

593
00:28:55,780 --> 00:29:02,100
<font color="#E5E5E5">nicely into the existing stack we can</font>

594
00:28:59,200 --> 00:29:04,840
<font color="#E5E5E5">create a socket with a certain type</font><font color="#CCCCCC"> that</font>

595
00:29:02,100 --> 00:29:08,070
basically is sitting like a shim layer

596
00:29:04,840 --> 00:29:11,409
between the<font color="#E5E5E5"> TCP flows and the</font>

597
00:29:08,070 --> 00:29:13,780
application there are<font color="#E5E5E5"> some</font><font color="#CCCCCC"> internal</font>

598
00:29:11,410 --> 00:29:16,450
<font color="#E5E5E5">interfaces that allow to send data</font>

599
00:29:13,780 --> 00:29:20,220
together<font color="#E5E5E5"> with the meta meta data with</font>

600
00:29:16,450 --> 00:29:23,530
the<font color="#E5E5E5"> SK buff and also to read it as</font><font color="#CCCCCC"> well</font>

601
00:29:20,220 --> 00:29:27,580
<font color="#CCCCCC">this</font><font color="#E5E5E5"> kind of design fits very well</font><font color="#CCCCCC"> the</font>

602
00:29:23,530 --> 00:29:29,740
challenge<font color="#E5E5E5"> comes later on nor for the for</font>

603
00:29:27,580 --> 00:29:32,639
the cross layer interactions one more

604
00:29:29,740 --> 00:29:36,610
obviously<font color="#E5E5E5"> obvious obviously think that</font>

605
00:29:32,640 --> 00:29:40,330
adding<font color="#E5E5E5"> this like indirect list for</font>

606
00:29:36,610 --> 00:29:42,580
indirect costs<font color="#CCCCCC"> because that allows</font><font color="#E5E5E5"> to</font>

607
00:29:40,330 --> 00:29:45,399
have a generic<font color="#CCCCCC"> approach it allows</font><font color="#E5E5E5"> to</font>

608
00:29:42,580 --> 00:29:47,889
make the TCP stack not MPGs be specific

609
00:29:45,399 --> 00:29:50,979
which is<font color="#E5E5E5"> something an operating system</font>

610
00:29:47,890 --> 00:29:53,020
<font color="#E5E5E5">always tries</font><font color="#CCCCCC"> to avoid</font><font color="#E5E5E5"> however since</font>

611
00:29:50,980 --> 00:29:56,110
<font color="#CCCCCC">spectra and meltdown indirect costs have</font>

612
00:29:53,020 --> 00:29:58,629
become increasingly<font color="#E5E5E5"> extremely costly and</font>

613
00:29:56,110 --> 00:30:00,219
so the<font color="#E5E5E5"> Linux kernel developers and</font>

614
00:29:58,630 --> 00:30:03,100
maintainer<font color="#E5E5E5"> are basically avoiding</font>

615
00:30:00,220 --> 00:30:07,960
<font color="#E5E5E5">indirect costs so annoyed</font><font color="#CCCCCC"> calls are no</font>

616
00:30:03,100 --> 00:30:10,480
more solution<font color="#E5E5E5"> to have an generic</font>

617
00:30:07,960 --> 00:30:12,700
implementation and the other problem

618
00:30:10,480 --> 00:30:15,880
that<font color="#E5E5E5"> I already mentioned</font><font color="#CCCCCC"> is the sk</font><font color="#E5E5E5"> bath</font>

619
00:30:12,700 --> 00:30:19,990
<font color="#E5E5E5">non extensibility</font><font color="#CCCCCC"> if we want</font><font color="#E5E5E5"> to add any</font>

620
00:30:15,880 --> 00:30:22,659
<font color="#E5E5E5">kind of metadata to to a packet or</font>

621
00:30:19,990 --> 00:30:24,580
<font color="#E5E5E5">segment</font><font color="#CCCCCC"> that is being sent it needs to</font>

622
00:30:22,659 --> 00:30:26,919
be done<font color="#E5E5E5"> in such</font><font color="#CCCCCC"> a way without increasing</font>

623
00:30:24,580 --> 00:30:32,678
the<font color="#E5E5E5"> size of the structures which is very</font>

624
00:30:26,919 --> 00:30:36,130
tricky so what are the<font color="#E5E5E5"> next</font><font color="#CCCCCC"> steps for</font><font color="#E5E5E5"> us</font>

625
00:30:32,679 --> 00:30:38,289
<font color="#E5E5E5">to target up streaming so together with</font>

626
00:30:36,130 --> 00:30:40,960
<font color="#E5E5E5">the</font><font color="#CCCCCC"> people from</font><font color="#E5E5E5"> Intel and</font><font color="#CCCCCC"> Tessa rice we</font>

627
00:30:38,289 --> 00:30:43,990
have<font color="#E5E5E5"> been now been working roughly for</font>

628
00:30:40,960 --> 00:30:46,210
one year on it<font color="#E5E5E5"> and last week we</font>

629
00:30:43,990 --> 00:30:48,549
presented our plan and our challenges

630
00:30:46,210 --> 00:30:51,549
that we are facing in a more detailed

631
00:30:48,549 --> 00:30:53,080
presentation than the one here<font color="#E5E5E5"> today we</font>

632
00:30:51,549 --> 00:30:56,379
received very supportive<font color="#E5E5E5"> feedback from</font>

633
00:30:53,080 --> 00:30:58,658
the<font color="#E5E5E5"> Native</font><font color="#CCCCCC"> community</font><font color="#E5E5E5"> telling us that the</font>

634
00:30:56,380 --> 00:31:01,600
TSP maintainer<font color="#E5E5E5"> said that he actually</font>

635
00:30:58,659 --> 00:31:03,130
<font color="#E5E5E5">really wants MP TSP to be upstream so</font>

636
00:31:01,600 --> 00:31:05,320
<font color="#CCCCCC">that was</font><font color="#E5E5E5"> very positive feedback for us</font>

637
00:31:03,130 --> 00:31:07,539
and he gave us also<font color="#E5E5E5"> some suggestions on</font>

638
00:31:05,320 --> 00:31:11,770
<font color="#CCCCCC">how</font><font color="#E5E5E5"> to handle for example</font><font color="#CCCCCC"> certain issues</font>

639
00:31:07,539 --> 00:31:14,950
like the escape of non extensibility<font color="#CCCCCC"> we</font>

640
00:31:11,770 --> 00:31:18,549
started to reduce<font color="#CCCCCC"> MPT speed to the least</font>

641
00:31:14,950 --> 00:31:22,020
minimal viable implementation moving all

642
00:31:18,549 --> 00:31:24,490
the features just making em participe

643
00:31:22,020 --> 00:31:26,559
<font color="#E5E5E5">bringing it all</font><font color="#CCCCCC"> the way down to the</font>

644
00:31:24,490 --> 00:31:28,539
bones<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that it can</font><font color="#E5E5E5"> just interoperate</font>

645
00:31:26,559 --> 00:31:33,158
with another implementation<font color="#E5E5E5"> but without</font>

646
00:31:28,539 --> 00:31:35,610
supporting any feature<font color="#CCCCCC"> the</font><font color="#E5E5E5"> cross layer</font>

647
00:31:33,159 --> 00:31:38,200
interactions we are trying<font color="#CCCCCC"> very hard to</font>

648
00:31:35,610 --> 00:31:41,350
consolidate together in one single<font color="#CCCCCC"> coil</font>

649
00:31:38,200 --> 00:31:42,669
so that<font color="#CCCCCC"> reduce those scars layer</font>

650
00:31:41,350 --> 00:31:44,559
interactions

651
00:31:42,669 --> 00:31:46,960
we hope<font color="#CCCCCC"> that we can make them in an</font>

652
00:31:44,559 --> 00:31:50,499
<font color="#E5E5E5">asynchronous way so</font><font color="#CCCCCC"> that we don't need</font>

653
00:31:46,960 --> 00:31:53,769
to basically block on those kind<font color="#CCCCCC"> of</font>

654
00:31:50,499 --> 00:31:56,859
<font color="#E5E5E5">calls and we received a</font><font color="#CCCCCC"> suggest on how</font>

655
00:31:53,769 --> 00:32:00,850
to do the<font color="#CCCCCC"> sk</font><font color="#E5E5E5"> buff extension in a cache</font>

656
00:31:56,859 --> 00:32:04,119
line agnostic way<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> project</font><font color="#CCCCCC"> there</font>

657
00:32:00,850 --> 00:32:09,399
are<font color="#CCCCCC"> a few links are out here on the on</font>

658
00:32:04,119 --> 00:32:10,509
this slide<font color="#E5E5E5"> and you can</font><font color="#CCCCCC"> check</font><font color="#E5E5E5"> it out yeah</font>

659
00:32:09,399 --> 00:32:14,229
go<font color="#E5E5E5"> ahead</font>

660
00:32:10,509 --> 00:32:16,539
I don't let<font color="#E5E5E5"> you finish do you have more</font>

661
00:32:14,230 --> 00:32:20,379
<font color="#CCCCCC">oh just one slide for lessons alone</font><font color="#E5E5E5"> I</font>

662
00:32:16,539 --> 00:32:24,190
mean<font color="#CCCCCC"> okay okay so in terms of lessons</font>

663
00:32:20,379 --> 00:32:28,449
<font color="#CCCCCC">learned</font><font color="#E5E5E5"> in specific specifically with</font>

664
00:32:24,190 --> 00:32:30,820
regard to<font color="#E5E5E5"> standardization here's what in</font>

665
00:32:28,450 --> 00:32:33,419
my opinion<font color="#CCCCCC"> is</font><font color="#E5E5E5"> one of the things that we</font>

666
00:32:30,820 --> 00:32:36,519
<font color="#E5E5E5">should maybe keep in mind in the future</font>

667
00:32:33,419 --> 00:32:37,899
<font color="#CCCCCC">one is</font><font color="#E5E5E5"> obviously the protocol design has</font>

668
00:32:36,519 --> 00:32:40,499
a direct impact<font color="#E5E5E5"> on the implementation</font>

669
00:32:37,899 --> 00:32:43,109
<font color="#CCCCCC">right</font><font color="#E5E5E5"> any decision</font><font color="#CCCCCC"> that is being made</font>

670
00:32:40,499 --> 00:32:46,019
<font color="#CCCCCC">can impact the upstream ability or the</font>

671
00:32:43,109 --> 00:32:49,658
widespread deployment of the protocol

672
00:32:46,019 --> 00:32:52,419
<font color="#CCCCCC">one thing that is very tricky</font><font color="#E5E5E5"> in my</font>

673
00:32:49,659 --> 00:32:55,389
<font color="#E5E5E5">opinion is</font><font color="#CCCCCC"> that TCP options should only</font>

674
00:32:52,419 --> 00:32:58,359
be useful<font color="#E5E5E5"> let's call it unreliable</font>

675
00:32:55,389 --> 00:33:00,488
signals<font color="#E5E5E5"> and not for signals that are</font>

676
00:32:58,359 --> 00:33:02,590
linked<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the payload because in an</font>

677
00:33:00,489 --> 00:33:05,980
implementation it<font color="#E5E5E5"> is extremely difficult</font>

678
00:33:02,590 --> 00:33:08,019
to<font color="#E5E5E5"> make this metadata move along with</font>

679
00:33:05,980 --> 00:33:09,609
<font color="#E5E5E5">the payload because the payload in the</font>

680
00:33:08,019 --> 00:33:11,499
end inside<font color="#E5E5E5"> the</font><font color="#CCCCCC"> DSP stagette can get</font>

681
00:33:09,609 --> 00:33:14,080
<font color="#E5E5E5">splayed it can only get merged with</font>

682
00:33:11,499 --> 00:33:17,940
other with other segments and so many

683
00:33:14,080 --> 00:33:21,460
TCP stacks don't have a real notion of

684
00:33:17,940 --> 00:33:23,529
fragments or segments right<font color="#E5E5E5"> and so it's</font>

685
00:33:21,460 --> 00:33:26,200
best the TCP options are best<font color="#E5E5E5"> used for</font>

686
00:33:23,529 --> 00:33:28,419
<font color="#E5E5E5">just unreliable signals like a sec</font>

687
00:33:26,200 --> 00:33:31,119
option right it<font color="#CCCCCC"> there's no relation to</font>

688
00:33:28,419 --> 00:33:34,269
<font color="#E5E5E5">the data itself it's just purely related</font>

689
00:33:31,119 --> 00:33:35,559
to the TCP header cross layer

690
00:33:34,269 --> 00:33:38,739
interactions should at best be

691
00:33:35,559 --> 00:33:41,889
asynchronous<font color="#E5E5E5"> so that it</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> signal that</font>

692
00:33:38,739 --> 00:33:44,200
<font color="#CCCCCC">is coming in through the TCP option can</font>

693
00:33:41,889 --> 00:33:46,570
basically be queued and can be read out

694
00:33:44,200 --> 00:33:48,909
<font color="#CCCCCC">of the TCP stack later on if it's</font>

695
00:33:46,570 --> 00:33:52,980
asynchronous it simplifies the<font color="#CCCCCC"> layer</font>

696
00:33:48,909 --> 00:33:56,039
separation between the different stacks

697
00:33:52,980 --> 00:33:57,869
<font color="#CCCCCC">also one lesson</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> I learned</font>

698
00:33:56,039 --> 00:33:59,340
<font color="#CCCCCC">I was very</font><font color="#E5E5E5"> much involved in the</font>

699
00:33:57,869 --> 00:34:01,259
prototyping at the beginning of the

700
00:33:59,340 --> 00:34:03,449
linings<font color="#E5E5E5"> and empties the implementation</font>

701
00:34:01,259 --> 00:34:06,509
is that<font color="#E5E5E5"> the prototyping is very</font>

702
00:34:03,450 --> 00:34:09,510
different from<font color="#E5E5E5"> widespread deployment and</font>

703
00:34:06,509 --> 00:34:12,839
integration in an upstream<font color="#E5E5E5"> car</font><font color="#CCCCCC"> product</font>

704
00:34:09,510 --> 00:34:14,909
during prototyping<font color="#E5E5E5"> you try to be quick</font>

705
00:34:12,839 --> 00:34:17,040
<font color="#CCCCCC">you try to iterate fast you do</font><font color="#E5E5E5"> short</font>

706
00:34:14,909 --> 00:34:20,220
<font color="#E5E5E5">cuts</font><font color="#CCCCCC"> you do sometimes nasty things</font>

707
00:34:17,040 --> 00:34:21,750
because you want<font color="#CCCCCC"> to finish paper</font><font color="#E5E5E5"> before</font>

708
00:34:20,219 --> 00:34:23,578
the<font color="#E5E5E5"> deadline and you want to get some</font>

709
00:34:21,750 --> 00:34:25,530
<font color="#CCCCCC">numbers out of out of the implementation</font>

710
00:34:23,579 --> 00:34:27,359
and so all<font color="#E5E5E5"> of this is</font><font color="#CCCCCC"> extremely</font>

711
00:34:25,530 --> 00:34:31,440
different from<font color="#E5E5E5"> the deployment in a real</font>

712
00:34:27,359 --> 00:34:35,819
<font color="#E5E5E5">in a</font><font color="#CCCCCC"> large-scale and in a real</font><font color="#E5E5E5"> generic</font>

713
00:34:31,440 --> 00:34:39,750
way<font color="#E5E5E5"> and now I thank you very interesting</font>

714
00:34:35,819 --> 00:34:41,429
<font color="#CCCCCC">I</font><font color="#E5E5E5"> learned quite a bit</font><font color="#CCCCCC"> I would I</font><font color="#E5E5E5"> don't</font>

715
00:34:39,750 --> 00:34:42,750
know if I would replace your first

716
00:34:41,429 --> 00:34:45,359
bullet but I would<font color="#CCCCCC"> certainly add a</font>

717
00:34:42,750 --> 00:34:47,129
second bullet that says the the<font color="#CCCCCC"> converse</font>

718
00:34:45,359 --> 00:34:49,440
which is implementations directly impact

719
00:34:47,129 --> 00:34:51,389
protocol design it seems to me that what

720
00:34:49,440 --> 00:34:53,339
you learned what<font color="#E5E5E5"> your the the</font><font color="#CCCCCC"> story that</font>

721
00:34:51,389 --> 00:34:56,760
<font color="#CCCCCC">you're telling is that there are a</font><font color="#E5E5E5"> bunch</font>

722
00:34:53,339 --> 00:34:58,619
<font color="#CCCCCC">of constraints</font><font color="#E5E5E5"> design constraints on the</font>

723
00:34:56,760 --> 00:35:00,599
protocol<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you didn't know when</font><font color="#E5E5E5"> you</font>

724
00:34:58,619 --> 00:35:03,119
are designing MPT CP that you discovered

725
00:35:00,599 --> 00:35:06,480
late on and that<font color="#CCCCCC"> caused you have to do a</font>

726
00:35:03,119 --> 00:35:12,109
bunch<font color="#E5E5E5"> of rework so would you</font><font color="#CCCCCC"> agree with</font>

727
00:35:06,480 --> 00:35:14,010
<font color="#CCCCCC">that so</font><font color="#E5E5E5"> you mean that in</font><font color="#CCCCCC"> the end the</font>

728
00:35:12,109 --> 00:35:15,598
implementation shape the protocol as

729
00:35:14,010 --> 00:35:18,000
well<font color="#E5E5E5"> I'm saying that you learn things</font>

730
00:35:15,599 --> 00:35:20,250
like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> like the</font><font color="#CCCCCC"> the buffer the cache</font>

731
00:35:18,000 --> 00:35:22,530
access efficiency was a constraint<font color="#E5E5E5"> and</font>

732
00:35:20,250 --> 00:35:23,730
you<font color="#CCCCCC"> needed to</font><font color="#E5E5E5"> change your design</font><font color="#CCCCCC"> to</font>

733
00:35:22,530 --> 00:35:25,920
accommodate<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and maybe if you've</font>

734
00:35:23,730 --> 00:35:27,119
known<font color="#CCCCCC"> that earlier on and what you might</font>

735
00:35:25,920 --> 00:35:28,950
<font color="#E5E5E5">have made</font><font color="#CCCCCC"> different design decisions so</font>

736
00:35:27,119 --> 00:35:30,990
I guess let me<font color="#E5E5E5"> ask it differently if</font><font color="#CCCCCC"> you</font>

737
00:35:28,950 --> 00:35:32,730
<font color="#CCCCCC">had known then what you know now about</font>

738
00:35:30,990 --> 00:35:34,649
<font color="#E5E5E5">the constraints would you have designed</font>

739
00:35:32,730 --> 00:35:37,500
the protocol differently<font color="#E5E5E5"> yes absolutely</font>

740
00:35:34,650 --> 00:35:39,089
<font color="#E5E5E5">okay so is there is that</font><font color="#CCCCCC"> are those</font>

741
00:35:37,500 --> 00:35:40,380
constraints written down<font color="#CCCCCC"> anywhere and do</font>

742
00:35:39,089 --> 00:35:42,890
you think<font color="#CCCCCC"> they</font><font color="#E5E5E5"> could be written down and</font>

743
00:35:40,380 --> 00:35:45,359
do you<font color="#E5E5E5"> think you could write them down</font>

744
00:35:42,890 --> 00:35:47,578
not<font color="#E5E5E5"> that I am aware</font><font color="#CCCCCC"> of they</font><font color="#E5E5E5"> are mostly</font>

745
00:35:45,359 --> 00:35:48,328
<font color="#E5E5E5">on mailing</font><font color="#CCCCCC"> lists on feedback</font><font color="#E5E5E5"> coming from</font>

746
00:35:47,579 --> 00:35:51,089
the maintainer

747
00:35:48,329 --> 00:35:54,960
right so I'm<font color="#E5E5E5"> not aware of any like</font>

748
00:35:51,089 --> 00:35:56,308
written down list of<font color="#E5E5E5"> constraints</font><font color="#CCCCCC"> might</font>

749
00:35:54,960 --> 00:35:59,069
be worth to write them down

750
00:35:56,309 --> 00:36:00,780
I agree<font color="#CCCCCC"> seems for people who want to get</font>

751
00:35:59,069 --> 00:36:02,009
the<font color="#E5E5E5"> technology I mean we spend a</font><font color="#CCCCCC"> lot of</font>

752
00:36:00,780 --> 00:36:03,150
time in the ITF these days<font color="#E5E5E5"> talking about</font>

753
00:36:02,010 --> 00:36:04,650
making<font color="#CCCCCC"> our</font><font color="#E5E5E5"> stuff deployable</font>

754
00:36:03,150 --> 00:36:05,849
right that's one of the reasons we're

755
00:36:04,650 --> 00:36:07,980
talking about<font color="#E5E5E5"> github right</font><font color="#CCCCCC"> we want to</font>

756
00:36:05,849 --> 00:36:09,359
sort<font color="#E5E5E5"> of reduce</font><font color="#CCCCCC"> the distance</font><font color="#E5E5E5"> between us</font>

757
00:36:07,980 --> 00:36:11,400
and<font color="#E5E5E5"> actually rolling</font>

758
00:36:09,359 --> 00:36:13,200
things out and I think<font color="#E5E5E5"> you've identified</font>

759
00:36:11,400 --> 00:36:15,839
a pretty big issue<font color="#E5E5E5"> here which is like</font>

760
00:36:13,200 --> 00:36:18,180
we're designing stuff that you know<font color="#E5E5E5"> that</font>

761
00:36:15,839 --> 00:36:21,390
the maintainer may look at and say yeah

762
00:36:18,180 --> 00:36:23,220
you can't do that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you know that's a</font>

763
00:36:21,390 --> 00:36:24,989
real impediment<font color="#E5E5E5"> getting it out there so</font>

764
00:36:23,220 --> 00:36:26,939
it's a<font color="#E5E5E5"> good point</font><font color="#CCCCCC"> one question I would</font>

765
00:36:24,989 --> 00:36:28,289
have<font color="#E5E5E5"> Dennis then like those kind of</font>

766
00:36:26,940 --> 00:36:30,960
constraints are very<font color="#CCCCCC"> olynyk's</font><font color="#E5E5E5"> but</font>

767
00:36:28,289 --> 00:36:32,999
specific other implementations like like

768
00:36:30,960 --> 00:36:34,380
in iOS<font color="#CCCCCC"> we don't have that problem</font><font color="#E5E5E5"> we</font>

769
00:36:32,999 --> 00:36:38,009
don't because we<font color="#E5E5E5"> kind of don't care</font>

770
00:36:34,380 --> 00:36:40,019
<font color="#E5E5E5">right so well there are certain</font><font color="#CCCCCC"> things</font>

771
00:36:38,009 --> 00:36:42,480
where we can<font color="#E5E5E5"> say</font><font color="#CCCCCC"> okay the benefit of</font>

772
00:36:40,019 --> 00:36:52,769
<font color="#CCCCCC">adding empties be</font><font color="#E5E5E5"> over weights the cost</font>

773
00:36:42,480 --> 00:36:54,150
that<font color="#E5E5E5"> it is introducing hi Brian Trammell</font>

774
00:36:52,769 --> 00:36:56,038
I guess we're just<font color="#E5E5E5"> gonna go down these</font>

775
00:36:54,150 --> 00:36:58,470
<font color="#E5E5E5">bullet points</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> I have I want to make a</font>

776
00:36:56,039 --> 00:37:01,140
point on point<font color="#CCCCCC"> too I expect two</font><font color="#E5E5E5"> more</font>

777
00:36:58,470 --> 00:37:03,419
<font color="#E5E5E5">people</font><font color="#CCCCCC"> to get in line behind me so this</font>

778
00:37:01,140 --> 00:37:04,680
<font color="#E5E5E5">is a really interesting a really</font>

779
00:37:03,420 --> 00:37:06,269
interesting lesson learnt easy options

780
00:37:04,680 --> 00:37:08,279
best used<font color="#E5E5E5"> for on reliable signals right</font>

781
00:37:06,269 --> 00:37:12,149
<font color="#E5E5E5">like so the</font><font color="#CCCCCC"> further</font><font color="#E5E5E5"> away</font><font color="#CCCCCC"> you are from</font>

782
00:37:08,279 --> 00:37:14,489
<font color="#E5E5E5">the core specification</font><font color="#CCCCCC"> the less you can</font>

783
00:37:12,150 --> 00:37:16,349
rely on it<font color="#E5E5E5"> working everywhere and I</font>

784
00:37:14,489 --> 00:37:17,880
<font color="#CCCCCC">think we</font><font color="#E5E5E5"> kind of know</font><font color="#CCCCCC"> that in you</font><font color="#E5E5E5"> know I</font>

785
00:37:16,349 --> 00:37:19,559
mean<font color="#E5E5E5"> like we have you know</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> hops and</font>

786
00:37:17,880 --> 00:37:21,869
<font color="#E5E5E5">the map</font><font color="#CCCCCC"> party stuff we've dug into that</font>

787
00:37:19,559 --> 00:37:23,819
<font color="#E5E5E5">these things we're measuring more and</font>

788
00:37:21,869 --> 00:37:26,910
more I<font color="#CCCCCC"> think sort of</font><font color="#E5E5E5"> a lot of middle box</font>

789
00:37:23,819 --> 00:37:29,160
measurement work was<font color="#E5E5E5"> actually um spurred</font>

790
00:37:26,910 --> 00:37:30,960
on by<font color="#E5E5E5"> MP TCP right because that's what</font>

791
00:37:29,160 --> 00:37:32,368
it turned it started as a let's extend

792
00:37:30,960 --> 00:37:34,200
the protocol and<font color="#E5E5E5"> it turned</font><font color="#CCCCCC"> into a whole</font>

793
00:37:32,369 --> 00:37:36,059
<font color="#E5E5E5">bunch of work on how metal boxes</font><font color="#CCCCCC"> break</font>

794
00:37:34,200 --> 00:37:38,489
<font color="#E5E5E5">the protocol there seems to be kind</font><font color="#CCCCCC"> of a</font>

795
00:37:36,059 --> 00:37:42,569
<font color="#CCCCCC">there's needs to</font><font color="#E5E5E5"> be like a protocol</font>

796
00:37:38,489 --> 00:37:43,859
architecture<font color="#CCCCCC"> truth hiding behind this</font>

797
00:37:42,569 --> 00:37:47,970
<font color="#E5E5E5">and it's something we</font><font color="#CCCCCC"> we should probably</font>

798
00:37:43,859 --> 00:37:49,109
consider moving forward when we're

799
00:37:47,970 --> 00:37:52,140
talking about extensibility<font color="#CCCCCC"> and</font><font color="#E5E5E5"> quick</font>

800
00:37:49,109 --> 00:37:54,749
<font color="#CCCCCC">for example</font><font color="#E5E5E5"> so thanks I've learned a</font><font color="#CCCCCC"> lot</font>

801
00:37:52,140 --> 00:37:57,239
<font color="#CCCCCC">too</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know one</font><font color="#E5E5E5"> question is like if</font>

802
00:37:54,749 --> 00:37:59,788
when we start<font color="#CCCCCC"> adding multipath</font><font color="#E5E5E5"> into</font>

803
00:37:57,239 --> 00:38:03,119
<font color="#E5E5E5">quake</font><font color="#CCCCCC"> and there will already</font><font color="#E5E5E5"> be a bunch</font>

804
00:37:59,789 --> 00:38:06,329
of implementations out there and will

805
00:38:03,119 --> 00:38:08,279
they will need<font color="#CCCCCC"> to remain stable and</font>

806
00:38:06,329 --> 00:38:10,410
performant<font color="#E5E5E5"> will we be able to add</font>

807
00:38:08,279 --> 00:38:12,420
multipath into quick<font color="#E5E5E5"> easily that's a</font>

808
00:38:10,410 --> 00:38:14,460
<font color="#CCCCCC">question I think</font><font color="#E5E5E5"> so because we can</font>

809
00:38:12,420 --> 00:38:16,259
actually<font color="#E5E5E5"> design you know I mean there's</font>

810
00:38:14,460 --> 00:38:17,849
<font color="#E5E5E5">been a lot of thought now in what we</font>

811
00:38:16,259 --> 00:38:21,989
found<font color="#CCCCCC"> out this morning</font><font color="#E5E5E5"> is probably</font><font color="#CCCCCC"> gonna</font>

812
00:38:17,849 --> 00:38:23,130
<font color="#E5E5E5">be called version two so that when we go</font>

813
00:38:21,989 --> 00:38:27,180
into version

814
00:38:23,130 --> 00:38:28,590
three that we were<font color="#E5E5E5"> Lance on the ground</font>

815
00:38:27,180 --> 00:38:36,750
work now and see<font color="#E5E5E5"> IDs make it easier for</font>

816
00:38:28,590 --> 00:38:42,390
example<font color="#CCCCCC"> trait so possibly difficult</font>

817
00:38:36,750 --> 00:38:45,150
question radically<font color="#E5E5E5"> so um I how much how</font>

818
00:38:42,390 --> 00:38:48,299
<font color="#E5E5E5">much of the stuff would</font><font color="#CCCCCC"> you say is</font><font color="#E5E5E5"> is</font>

819
00:38:45,150 --> 00:38:49,680
specific to<font color="#E5E5E5"> Escobar Farsi you and all</font>

820
00:38:48,300 --> 00:38:51,420
<font color="#E5E5E5">the stuff that's specific to the Linux</font>

821
00:38:49,680 --> 00:38:53,310
kernel like how like if you if you were

822
00:38:51,420 --> 00:38:56,970
to<font color="#E5E5E5"> take these learnings and you take</font>

823
00:38:53,310 --> 00:38:58,320
them to the<font color="#CCCCCC"> iOS user space networking</font>

824
00:38:56,970 --> 00:39:00,299
<font color="#E5E5E5">team how different are they</font>

825
00:38:58,320 --> 00:39:03,690
I mean how directly applicable are they

826
00:39:00,300 --> 00:39:06,210
<font color="#CCCCCC">is this</font><font color="#E5E5E5"> something that we</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> so there</font>

827
00:39:03,690 --> 00:39:08,130
could be I<font color="#CCCCCC"> could see two things first of</font>

828
00:39:06,210 --> 00:39:09,720
<font color="#E5E5E5">all you write all this down and</font><font color="#CCCCCC"> you come</font>

829
00:39:08,130 --> 00:39:11,520
<font color="#E5E5E5">here and</font><font color="#CCCCCC"> people don't</font><font color="#E5E5E5"> believe you</font><font color="#CCCCCC"> unlike</font>

830
00:39:09,720 --> 00:39:13,350
that<font color="#CCCCCC"> they</font><font color="#E5E5E5"> don't believe you anyway so</font><font color="#CCCCCC"> ok</font>

831
00:39:11,520 --> 00:39:17,009
so<font color="#E5E5E5"> but at least you're right but if you</font>

832
00:39:13,350 --> 00:39:19,170
<font color="#E5E5E5">write it down but but if you write it</font>

833
00:39:17,010 --> 00:39:21,480
down<font color="#CCCCCC"> and</font><font color="#E5E5E5"> he says look dude like in my</font>

834
00:39:19,170 --> 00:39:22,920
<font color="#CCCCCC">implementation it's entirely</font><font color="#E5E5E5"> different</font>

835
00:39:21,480 --> 00:39:24,360
like the<font color="#CCCCCC"> shed um</font><font color="#E5E5E5"> constraints I have a</font>

836
00:39:22,920 --> 00:39:25,500
completely different<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't have this</font>

837
00:39:24,360 --> 00:39:26,910
locality problem because my

838
00:39:25,500 --> 00:39:29,040
architectures I have something else

839
00:39:26,910 --> 00:39:30,089
<font color="#E5E5E5">right have you compared notes with the</font>

840
00:39:29,040 --> 00:39:31,470
people working<font color="#E5E5E5"> on the use of space</font>

841
00:39:30,090 --> 00:39:32,760
implementation to see because if you

842
00:39:31,470 --> 00:39:34,740
even if<font color="#E5E5E5"> you like if you take this and</font>

843
00:39:32,760 --> 00:39:37,110
<font color="#E5E5E5">you take it into DP</font><font color="#CCCCCC"> D K</font><font color="#E5E5E5"> maybe it's</font>

844
00:39:34,740 --> 00:39:38,640
entirely<font color="#E5E5E5"> different again or</font><font color="#CCCCCC"> if use a</font><font color="#E5E5E5"> FX</font>

845
00:39:37,110 --> 00:39:41,400
DP to do it in user<font color="#CCCCCC"> space which you</font>

846
00:39:38,640 --> 00:39:46,529
<font color="#CCCCCC">maybe</font><font color="#E5E5E5"> can do in 4:17 actually have you</font>

847
00:39:41,400 --> 00:39:47,970
consider actually agree with<font color="#CCCCCC"> you that</font>

848
00:39:46,530 --> 00:39:50,550
<font color="#E5E5E5">like different implementations have</font>

849
00:39:47,970 --> 00:39:53,299
different<font color="#E5E5E5"> contexts and it's not that</font>

850
00:39:50,550 --> 00:39:57,150
<font color="#E5E5E5">easy to to generalize all of that right</font>

851
00:39:53,300 --> 00:39:58,980
<font color="#CCCCCC">Eric Kinnear Apple very briefly</font><font color="#E5E5E5"> yes we</font>

852
00:39:57,150 --> 00:40:01,380
have compared notes<font color="#E5E5E5"> we're all the same</font>

853
00:39:58,980 --> 00:40:03,240
<font color="#E5E5E5">team but I think your point still stands</font>

854
00:40:01,380 --> 00:40:04,290
in general is<font color="#E5E5E5"> it would be really nice if</font>

855
00:40:03,240 --> 00:40:08,220
<font color="#CCCCCC">we</font><font color="#E5E5E5"> could take some</font><font color="#CCCCCC"> of the stuff that</font>

856
00:40:04,290 --> 00:40:10,140
<font color="#E5E5E5">we've learned and seen and kind of put</font>

857
00:40:08,220 --> 00:40:11,910
that<font color="#E5E5E5"> out there as more of a as we go</font>

858
00:40:10,140 --> 00:40:14,700
forward in the<font color="#CCCCCC"> future and</font><font color="#E5E5E5"> look at MP</font>

859
00:40:11,910 --> 00:40:17,029
quick or other areas<font color="#CCCCCC"> of</font><font color="#E5E5E5"> protocol</font>

860
00:40:14,700 --> 00:40:20,250
extension or even just first time<font color="#E5E5E5"> design</font>

861
00:40:17,030 --> 00:40:23,880
<font color="#E5E5E5">where is that kind</font><font color="#CCCCCC"> of things</font><font color="#E5E5E5"> exactly how</font>

862
00:40:20,250 --> 00:40:25,380
can<font color="#E5E5E5"> that apply the yeah we wish if we</font>

863
00:40:23,880 --> 00:40:27,660
write something<font color="#E5E5E5"> like this down I think</font>

864
00:40:25,380 --> 00:40:31,560
<font color="#CCCCCC">we</font><font color="#E5E5E5"> should try to make it implementation</font>

865
00:40:27,660 --> 00:40:33,660
agnostic and try to yeah not make it

866
00:40:31,560 --> 00:40:36,090
specific<font color="#E5E5E5"> to Linux iOS or whichever</font>

867
00:40:33,660 --> 00:40:36,640
static yes<font color="#CCCCCC"> right Google</font><font color="#E5E5E5"> I had one</font>

868
00:40:36,090 --> 00:40:38,350
comment on

869
00:40:36,640 --> 00:40:40,960
<font color="#CCCCCC">DMP quick thing we</font><font color="#E5E5E5"> actually tried to</font>

870
00:40:38,350 --> 00:40:42,040
<font color="#CCCCCC">take a whack at that early on and it</font>

871
00:40:40,960 --> 00:40:44,200
turns<font color="#CCCCCC"> out if you have your software</font>

872
00:40:42,040 --> 00:40:47,340
structured well it's it's<font color="#E5E5E5"> not overly</font>

873
00:40:44,200 --> 00:40:49,629
complex and<font color="#E5E5E5"> you may be at max</font>

874
00:40:47,340 --> 00:40:52,240
introducing won't like one extra pointer

875
00:40:49,630 --> 00:40:53,890
<font color="#CCCCCC">drf in the</font><font color="#E5E5E5"> worst case scenario but like</font>

876
00:40:52,240 --> 00:40:55,450
overall the fact that<font color="#E5E5E5"> in quick you're</font>

877
00:40:53,890 --> 00:40:57,940
acknowledging packets with packet

878
00:40:55,450 --> 00:41:00,580
numbers instead of segments in sequence

879
00:40:57,940 --> 00:41:02,200
<font color="#E5E5E5">pace means that the type of data</font>

880
00:41:00,580 --> 00:41:04,390
<font color="#E5E5E5">structure that</font><font color="#CCCCCC"> is conducive to multi</font>

881
00:41:02,200 --> 00:41:06,430
path quick more looks more like<font color="#CCCCCC"> two</font>

882
00:41:04,390 --> 00:41:08,170
entire sets of<font color="#CCCCCC"> basket buffs</font><font color="#E5E5E5"> and so you</font>

883
00:41:06,430 --> 00:41:10,810
don't need<font color="#E5E5E5"> to add things</font><font color="#CCCCCC"> the sk box you</font>

884
00:41:08,170 --> 00:41:23,050
<font color="#CCCCCC">just need</font><font color="#E5E5E5"> two parallel data structures</font>

885
00:41:10,810 --> 00:41:25,299
each<font color="#CCCCCC"> indexed by packet number no no no</font>

886
00:41:23,050 --> 00:41:26,980
no<font color="#CCCCCC"> not from TCP for quick I'm saying</font>

887
00:41:25,300 --> 00:41:28,510
<font color="#CCCCCC">employ it's easier to implement and</font>

888
00:41:26,980 --> 00:41:30,100
quick because<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> natural packet</font>

889
00:41:28,510 --> 00:41:34,270
number versus a sequence number

890
00:41:30,100 --> 00:41:36,460
difference that's and

891
00:41:34,270 --> 00:41:41,290
<font color="#CCCCCC">Lorenz could be a</font><font color="#E5E5E5"> difficult question now</font>

892
00:41:36,460 --> 00:41:43,390
<font color="#CCCCCC">that you're here how much of this do you</font>

893
00:41:41,290 --> 00:41:44,710
<font color="#E5E5E5">think is due to the fact that you know</font>

894
00:41:43,390 --> 00:41:46,270
decisions are right in the past that

895
00:41:44,710 --> 00:41:48,670
were absolutely<font color="#E5E5E5"> in the best interests of</font>

896
00:41:46,270 --> 00:41:50,350
the Linux TCP stack and it's gone really

897
00:41:48,670 --> 00:41:52,570
really really<font color="#E5E5E5"> far down the path of being</font>

898
00:41:50,350 --> 00:41:55,509
<font color="#E5E5E5">highly optimized and all those decisions</font>

899
00:41:52,570 --> 00:41:57,400
<font color="#E5E5E5">like if you'd had like multi path in</font>

900
00:41:55,510 --> 00:41:59,080
mind at each of the decisions points

901
00:41:57,400 --> 00:42:00,790
like how much do you think you know

902
00:41:59,080 --> 00:42:02,529
would<font color="#E5E5E5"> have it would have cost more</font>

903
00:42:00,790 --> 00:42:03,790
<font color="#E5E5E5">because like I can imagine</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> at some</font>

904
00:42:02,530 --> 00:42:05,800
point<font color="#CCCCCC"> they</font><font color="#E5E5E5"> were faced for the trade off</font>

905
00:42:03,790 --> 00:42:07,090
and<font color="#E5E5E5"> if they'd had multi path in mind</font>

906
00:42:05,800 --> 00:42:08,710
they would<font color="#E5E5E5"> have picked a instead of B</font>

907
00:42:07,090 --> 00:42:11,290
and they you<font color="#CCCCCC"> know but they</font><font color="#E5E5E5"> pick B</font>

908
00:42:08,710 --> 00:42:14,260
because it's like well and how much you

909
00:42:11,290 --> 00:42:16,630
think that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> and yeah it's</font><font color="#CCCCCC"> a difficult</font>

910
00:42:14,260 --> 00:42:18,520
<font color="#E5E5E5">question like you said yeah it's hard to</font>

911
00:42:16,630 --> 00:42:18,990
<font color="#E5E5E5">know how much this has been involved</font>

912
00:42:18,520 --> 00:42:21,190
<font color="#CCCCCC">yeah</font>

913
00:42:18,990 --> 00:42:23,020
influenced those decisions but<font color="#E5E5E5"> yeah</font>

914
00:42:21,190 --> 00:42:26,380
would have<font color="#E5E5E5"> been interesting if</font><font color="#CCCCCC"> we would</font>

915
00:42:23,020 --> 00:42:28,390
<font color="#E5E5E5">have gone directly upstream and and yeah</font>

916
00:42:26,380 --> 00:42:33,400
<font color="#E5E5E5">taking all those things into account</font>

917
00:42:28,390 --> 00:42:34,750
<font color="#E5E5E5">I guess should does this mean that we</font>

918
00:42:33,400 --> 00:42:37,930
should if we want it<font color="#E5E5E5"> to be deployable</font>

919
00:42:34,750 --> 00:42:40,990
should this mean should we be saying oh

920
00:42:37,930 --> 00:42:43,240
that<font color="#CCCCCC"> should we should we not ever or try</font>

921
00:42:40,990 --> 00:42:44,649
ever not ever<font color="#E5E5E5"> to say oh this is just an</font>

922
00:42:43,240 --> 00:42:46,390
<font color="#E5E5E5">extension or an existing protocol so</font>

923
00:42:44,650 --> 00:42:47,770
it's gonna be easy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> implement right</font>

924
00:42:46,390 --> 00:42:49,029
because because<font color="#CCCCCC"> we</font><font color="#E5E5E5"> might have said like</font>

925
00:42:47,770 --> 00:42:50,380
you know<font color="#E5E5E5"> well it's already there right</font>

926
00:42:49,030 --> 00:42:52,570
the code is already there but<font color="#E5E5E5"> if you</font>

927
00:42:50,380 --> 00:42:53,710
if you have<font color="#E5E5E5"> the structural problem then</font>

928
00:42:52,570 --> 00:42:55,330
you can't get<font color="#E5E5E5"> into a real-world</font>

929
00:42:53,710 --> 00:42:56,650
<font color="#E5E5E5">implementation because you're trying</font><font color="#CCCCCC"> to</font>

930
00:42:55,330 --> 00:42:57,850
you have a<font color="#CCCCCC"> chicken-and-egg problem and</font>

931
00:42:56,650 --> 00:42:59,350
the people who<font color="#CCCCCC"> maintain that</font>

932
00:42:57,850 --> 00:43:02,799
<font color="#E5E5E5">implementation is like no you can't make</font>

933
00:42:59,350 --> 00:43:04,210
me<font color="#CCCCCC"> 3% slower</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> you know because it</font>

934
00:43:02,800 --> 00:43:06,280
cost me a<font color="#E5E5E5"> lot of blood sweat and tears</font>

935
00:43:04,210 --> 00:43:15,210
to<font color="#E5E5E5"> get that 3% and took me a year right</font>

936
00:43:06,280 --> 00:43:18,220
<font color="#E5E5E5">so yeah my name is Tim</font><font color="#CCCCCC"> Sheppard</font><font color="#E5E5E5"> I</font>

937
00:43:15,210 --> 00:43:20,200
actually<font color="#E5E5E5"> just reading this I know you</font>

938
00:43:18,220 --> 00:43:21,370
mentioned Linux a little bit but<font color="#CCCCCC"> just</font>

939
00:43:20,200 --> 00:43:23,529
reading<font color="#E5E5E5"> the slide I was actually</font>

940
00:43:21,370 --> 00:43:25,299
<font color="#CCCCCC">thinking this is more</font><font color="#E5E5E5"> about decisions</font>

941
00:43:23,530 --> 00:43:29,020
<font color="#E5E5E5">that were made in the</font><font color="#CCCCCC"> NP TCP working</font>

942
00:43:25,300 --> 00:43:30,160
group which might have been<font color="#E5E5E5"> made</font>

943
00:43:29,020 --> 00:43:32,009
differently<font color="#E5E5E5"> and I think you said</font>

944
00:43:30,160 --> 00:43:35,890
something<font color="#E5E5E5"> along those lines</font>

945
00:43:32,010 --> 00:43:38,530
yes this is<font color="#E5E5E5"> about D like for example</font>

946
00:43:35,890 --> 00:43:40,480
defect that the TCP options<font color="#E5E5E5"> that we are</font>

947
00:43:38,530 --> 00:43:42,430
currently<font color="#E5E5E5"> using</font><font color="#CCCCCC"> right are linked to the</font>

948
00:43:40,480 --> 00:43:44,650
payload<font color="#CCCCCC"> itself makes things hard so</font>

949
00:43:42,430 --> 00:43:47,290
<font color="#E5E5E5">that's was a working group decision to</font>

950
00:43:44,650 --> 00:43:49,030
design<font color="#CCCCCC"> the protocol that way and that</font>

951
00:43:47,290 --> 00:43:51,850
<font color="#E5E5E5">makes the implementation very difficult</font>

952
00:43:49,030 --> 00:43:53,470
I remember there was<font color="#CCCCCC"> a</font><font color="#E5E5E5"> MPT</font><font color="#CCCCCC"> CD working</font>

953
00:43:51,850 --> 00:43:56,410
group meeting which I was sitting there

954
00:43:53,470 --> 00:44:00,700
<font color="#E5E5E5">listening to where they were deciding to</font>

955
00:43:56,410 --> 00:44:03,759
either<font color="#E5E5E5"> use TCP options or put stuff in</font>

956
00:44:00,700 --> 00:44:05,649
the<font color="#E5E5E5"> data stream of the sub flows and it</font>

957
00:44:03,760 --> 00:44:08,290
was<font color="#E5E5E5"> the people in the room it was</font>

958
00:44:05,650 --> 00:44:10,930
overwhelming<font color="#E5E5E5"> use options but there was</font>

959
00:44:08,290 --> 00:44:13,000
one person I can't remember who was I

960
00:44:10,930 --> 00:44:15,460
think<font color="#CCCCCC"> Michael</font><font color="#E5E5E5"> Shaw okay</font><font color="#CCCCCC"> thank you for</font>

961
00:44:13,000 --> 00:44:19,230
<font color="#CCCCCC">remembering that and I thought</font><font color="#E5E5E5"> he had</font>

962
00:44:15,460 --> 00:44:23,860
compelling arguments but essentially

963
00:44:19,230 --> 00:44:25,750
very<font color="#E5E5E5"> few people I mean a lot of people</font>

964
00:44:23,860 --> 00:44:27,100
<font color="#E5E5E5">shrugged I think I was the one other</font>

965
00:44:25,750 --> 00:44:30,700
ones shrugging even though I<font color="#E5E5E5"> found his</font>

966
00:44:27,100 --> 00:44:32,560
arguments compelling and but there was a

967
00:44:30,700 --> 00:44:34,089
<font color="#E5E5E5">very large</font><font color="#CCCCCC"> number of</font><font color="#E5E5E5"> people who are like</font>

968
00:44:32,560 --> 00:44:36,430
oh we're definitely going<font color="#CCCCCC"> to use options</font>

969
00:44:34,090 --> 00:44:38,230
because that's<font color="#E5E5E5"> because it's a because</font>

970
00:44:36,430 --> 00:44:38,710
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> multipath TCP and so it should use</font>

971
00:44:38,230 --> 00:44:42,340
him

972
00:44:38,710 --> 00:44:46,990
TCP options so that's and the decision

973
00:44:42,340 --> 00:44:54,130
was made<font color="#E5E5E5"> and and here we are and I'm</font>

974
00:44:46,990 --> 00:44:56,919
wondering could we<font color="#E5E5E5"> think about MPT</font><font color="#CCCCCC"> zbb</font><font color="#E5E5E5"> -</font>

975
00:44:54,130 --> 00:44:58,750
that doesn't try<font color="#CCCCCC"> to do it all in options</font>

976
00:44:56,920 --> 00:45:02,440
I think we have something<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do in</font><font color="#CCCCCC"> your</font>

977
00:44:58,750 --> 00:45:05,020
working<font color="#E5E5E5"> group date but the thing is like</font>

978
00:45:02,440 --> 00:45:07,690
<font color="#E5E5E5">the option story is not the only problem</font>

979
00:45:05,020 --> 00:45:09,880
right<font color="#CCCCCC"> it's not like</font><font color="#E5E5E5"> business like has</font>

980
00:45:07,690 --> 00:45:11,350
doomed<font color="#CCCCCC"> MPT CP</font><font color="#E5E5E5"> or anything it's just one</font>

981
00:45:09,880 --> 00:45:23,770
<font color="#CCCCCC">of those things that makes</font><font color="#E5E5E5"> it kind</font><font color="#CCCCCC"> of</font>

982
00:45:11,350 --> 00:45:26,200
tricky for<font color="#CCCCCC"> up streaming using</font><font color="#E5E5E5"> option</font>

983
00:45:23,770 --> 00:45:27,790
yeah<font color="#E5E5E5"> because performance is not</font><font color="#CCCCCC"> only</font>

984
00:45:26,200 --> 00:45:30,009
focus of the<font color="#E5E5E5"> film we designed the</font>

985
00:45:27,790 --> 00:45:33,490
protocol<font color="#CCCCCC"> in my understanding so</font><font color="#E5E5E5"> yeah</font>

986
00:45:30,010 --> 00:45:35,920
<font color="#CCCCCC">Thomas is not</font><font color="#E5E5E5"> when we make on MPT we</font>

987
00:45:33,490 --> 00:45:38,350
think<font color="#E5E5E5"> other factors as well that's a</font>

988
00:45:35,920 --> 00:45:40,450
result<font color="#CCCCCC"> right and then that's the</font><font color="#E5E5E5"> one</font>

989
00:45:38,350 --> 00:45:43,540
<font color="#CCCCCC">common and then the other comment is</font>

990
00:45:40,450 --> 00:45:45,700
then a new design<font color="#CCCCCC"> MPCP</font>

991
00:45:43,540 --> 00:45:47,259
from scratch<font color="#E5E5E5"> you want to put the</font>

992
00:45:45,700 --> 00:45:51,580
information in the<font color="#E5E5E5"> payroll that's your</font>

993
00:45:47,260 --> 00:45:54,010
conclusion<font color="#CCCCCC"> I would put a DSS sequence</font>

994
00:45:51,580 --> 00:45:58,980
number in the payload<font color="#E5E5E5"> the data arc in</font>

995
00:45:54,010 --> 00:45:58,980
the option right

996
00:46:02,070 --> 00:46:09,310
redesigning<font color="#CCCCCC"> mbcp to the energy working</font>

997
00:46:04,990 --> 00:46:10,600
group at this point a move<font color="#E5E5E5"> on because</font>

998
00:46:09,310 --> 00:46:12,070
we're running<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little bit out of</font><font color="#E5E5E5"> time</font>

999
00:46:10,600 --> 00:46:21,040
<font color="#CCCCCC">but</font><font color="#E5E5E5"> I'm happy that people are interested</font>

1000
00:46:12,070 --> 00:46:23,220
<font color="#E5E5E5">thank you very much so in your</font><font color="#CCCCCC"> slides</font>

1001
00:46:21,040 --> 00:46:23,220
<font color="#CCCCCC">are</font>

1002
00:46:32,250 --> 00:46:40,630
perfect<font color="#E5E5E5"> okay nope</font>

1003
00:46:37,410 --> 00:46:44,649
as<font color="#CCCCCC"> this says I'm slide</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> am Ian sweat</font>

1004
00:46:40,630 --> 00:46:46,630
from<font color="#E5E5E5"> Google so this is actually taken</font>

1005
00:46:44,650 --> 00:46:48,450
also<font color="#E5E5E5"> from</font><font color="#CCCCCC"> Annette dev</font><font color="#E5E5E5"> talk but this is</font>

1006
00:46:46,630 --> 00:46:50,920
much more truncated<font color="#E5E5E5"> the net dev talk</font>

1007
00:46:48,450 --> 00:46:53,230
talked quite a bit about the<font color="#E5E5E5"> history of</font>

1008
00:46:50,920 --> 00:46:56,230
deploying quick including a few more

1009
00:46:53,230 --> 00:46:57,579
performance numbers<font color="#CCCCCC"> and some of the</font>

1010
00:46:56,230 --> 00:46:58,809
other data but that<font color="#CCCCCC"> all all that</font>

1011
00:46:57,579 --> 00:47:01,240
<font color="#E5E5E5">information pretty much has</font><font color="#CCCCCC"> risen</font>

1012
00:46:58,809 --> 00:47:04,540
presented at the<font color="#CCCCCC"> ITF either in the form</font>

1013
00:47:01,240 --> 00:47:06,669
<font color="#CCCCCC">of a bath or some other kind of working</font>

1014
00:47:04,540 --> 00:47:08,890
group activities<font color="#E5E5E5"> quick working group or</font>

1015
00:47:06,670 --> 00:47:11,710
otherwise<font color="#CCCCCC"> so here I'm actually</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

1016
00:47:08,890 --> 00:47:14,710
<font color="#E5E5E5">focus mostly on kind of deployment</font><font color="#CCCCCC"> in</font>

1017
00:47:11,710 --> 00:47:16,599
<font color="#CCCCCC">terms of like</font><font color="#E5E5E5"> CPU and software</font>

1018
00:47:14,710 --> 00:47:20,230
<font color="#E5E5E5">architecture and interacting with Linux</font>

1019
00:47:16,599 --> 00:47:24,730
<font color="#CCCCCC">and</font><font color="#E5E5E5"> kind of some of the similar issues</font>

1020
00:47:20,230 --> 00:47:28,030
that that Christophe alluded you<font color="#CCCCCC"> so at</font>

1021
00:47:24,730 --> 00:47:30,640
the<font color="#CCCCCC"> beginning as an overview quic is a</font>

1022
00:47:28,030 --> 00:47:32,349
protocol for<font color="#E5E5E5"> HTTP transport at least</font>

1023
00:47:30,640 --> 00:47:34,078
that's how<font color="#CCCCCC"> Google had it deployed</font>

1024
00:47:32,349 --> 00:47:36,670
starting in 2014

1025
00:47:34,079 --> 00:47:39,369
between Google services and<font color="#CCCCCC"> Chrome and</font>

1026
00:47:36,670 --> 00:47:41,319
mobile apps<font color="#CCCCCC"> there's some rebuffering</font>

1027
00:47:39,369 --> 00:47:43,960
improvements some search latency

1028
00:47:41,319 --> 00:47:47,950
movements<font color="#CCCCCC"> it's about a third of Google's</font>

1029
00:47:43,960 --> 00:47:50,440
traffic as of sigcomm in 2017<font color="#CCCCCC"> 7% of the</font>

1030
00:47:47,950 --> 00:47:53,828
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> and obviously there is a quick</font>

1031
00:47:50,440 --> 00:47:55,180
working group<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> very active</font><font color="#E5E5E5"> you</font>

1032
00:47:53,829 --> 00:47:57,520
<font color="#E5E5E5">know so all of this is good motivation</font>

1033
00:47:55,180 --> 00:48:00,730
<font color="#CCCCCC">for us to plan this more widely</font><font color="#E5E5E5"> but</font>

1034
00:47:57,520 --> 00:48:02,380
<font color="#E5E5E5">there are challenges with that so here's</font>

1035
00:48:00,730 --> 00:48:04,569
our ramp up<font color="#E5E5E5"> over time from the sitcom</font>

1036
00:48:02,380 --> 00:48:06,880
paper but um the<font color="#E5E5E5"> thing I want to call</font>

1037
00:48:04,569 --> 00:48:10,180
out<font color="#CCCCCC"> here is during the March to August</font>

1038
00:48:06,880 --> 00:48:12,040
<font color="#CCCCCC">time frame</font><font color="#E5E5E5"> where it was all flat and</font>

1039
00:48:10,180 --> 00:48:13,750
<font color="#CCCCCC">there was no</font><font color="#E5E5E5"> increase in</font><font color="#CCCCCC"> rollout</font><font color="#E5E5E5"> we were</font>

1040
00:48:12,040 --> 00:48:16,150
<font color="#E5E5E5">just furiously working</font><font color="#CCCCCC"> on CPU</font>

1041
00:48:13,750 --> 00:48:17,710
improvements<font color="#CCCCCC"> so some of these were</font>

1042
00:48:16,150 --> 00:48:20,799
kernel related many of them<font color="#CCCCCC"> were just</font>

1043
00:48:17,710 --> 00:48:22,540
internally in<font color="#E5E5E5"> our own software</font><font color="#CCCCCC"> and</font>

1044
00:48:20,799 --> 00:48:25,079
that's why you keep kind<font color="#E5E5E5"> of see a long</font>

1045
00:48:22,540 --> 00:48:27,308
period of<font color="#E5E5E5"> a flat and then a huge jump</font>

1046
00:48:25,079 --> 00:48:29,589
<font color="#CCCCCC">read</font><font color="#E5E5E5"> afterwards where it goes from you</font>

1047
00:48:27,309 --> 00:48:33,400
know about<font color="#CCCCCC"> 15% of our traffic to 30 in</font>

1048
00:48:29,589 --> 00:48:34,990
the course of<font color="#E5E5E5"> a month or so and so</font>

1049
00:48:33,400 --> 00:48:37,390
<font color="#CCCCCC">I'm going to talk a little bit about how</font>

1050
00:48:34,990 --> 00:48:39,430
we how we did<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> how we're</font>

1051
00:48:37,390 --> 00:48:43,299
continuing to<font color="#CCCCCC"> work on new things</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> make</font>

1052
00:48:39,430 --> 00:48:46,600
<font color="#E5E5E5">things even better</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> initially the</font>

1053
00:48:43,300 --> 00:48:47,980
major sources of<font color="#E5E5E5"> CPU</font><font color="#CCCCCC"> crypto is a fairly</font>

1054
00:48:46,600 --> 00:48:49,569
<font color="#E5E5E5">large one although</font><font color="#CCCCCC"> certainly not as</font>

1055
00:48:47,980 --> 00:48:52,180
large assume the other ones but<font color="#CCCCCC"> cha-cha</font>

1056
00:48:49,570 --> 00:48:53,980
<font color="#E5E5E5">20 at the time was was fairly slow</font>

1057
00:48:52,180 --> 00:48:56,620
originally and we<font color="#E5E5E5"> did not have the avx2</font>

1058
00:48:53,980 --> 00:48:59,830
assembly and<font color="#CCCCCC"> that seems</font><font color="#E5E5E5"> to make a ton of</font>

1059
00:48:56,620 --> 00:49:01,420
difference<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you know just FYI</font><font color="#CCCCCC"> like</font>

1060
00:48:59,830 --> 00:49:03,549
cha-cha doesn't have to be slow but you

1061
00:49:01,420 --> 00:49:07,060
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> need a relatively modern</font>

1062
00:49:03,550 --> 00:49:09,460
<font color="#E5E5E5">Intel processor</font><font color="#CCCCCC"> and so that's exactly</font>

1063
00:49:07,060 --> 00:49:11,380
<font color="#CCCCCC">what we did the</font><font color="#E5E5E5"> other thing</font><font color="#CCCCCC"> we did</font><font color="#E5E5E5"> is</font>

1064
00:49:09,460 --> 00:49:14,920
<font color="#CCCCCC">actually we're using</font><font color="#E5E5E5"> in-place encryption</font>

1065
00:49:11,380 --> 00:49:16,270
at least for the sending<font color="#CCCCCC"> pad</font><font color="#E5E5E5"> that you</font>

1066
00:49:14,920 --> 00:49:18,550
know consumes a little bit less memory

1067
00:49:16,270 --> 00:49:21,220
<font color="#CCCCCC">and bandwidth and appears to actually</font>

1068
00:49:18,550 --> 00:49:22,990
have a few percent<font color="#E5E5E5"> CPU gain so a bit</font>

1069
00:49:21,220 --> 00:49:24,399
surprised<font color="#CCCCCC"> that it's true but but</font><font color="#E5E5E5"> it</font>

1070
00:49:22,990 --> 00:49:26,109
turns<font color="#E5E5E5"> out to be true</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> haven't tried it</font>

1071
00:49:24,400 --> 00:49:28,570
on the<font color="#E5E5E5"> received path yet but I suspect</font>

1072
00:49:26,110 --> 00:49:31,630
<font color="#E5E5E5">it would work equally well</font><font color="#CCCCCC"> we thought</font>

1073
00:49:28,570 --> 00:49:33,520
<font color="#E5E5E5">about doing scatter gather and you know</font>

1074
00:49:31,630 --> 00:49:35,440
kind of copy and<font color="#E5E5E5"> encrypt all in one</font>

1075
00:49:33,520 --> 00:49:37,630
operation<font color="#CCCCCC"> it turns out the api's</font><font color="#E5E5E5"> for</font>

1076
00:49:35,440 --> 00:49:41,800
that are more complicated than doing in

1077
00:49:37,630 --> 00:49:47,020
place<font color="#E5E5E5"> so we stuck with in place</font><font color="#CCCCCC"> just FYI</font>

1078
00:49:41,800 --> 00:49:49,680
so<font color="#E5E5E5"> sending and receiving this is where</font>

1079
00:49:47,020 --> 00:49:52,900
like the vast majority<font color="#CCCCCC"> of the cost goes</font>

1080
00:49:49,680 --> 00:49:55,810
so on<font color="#E5E5E5"> Linux it's not uncommon for this</font>

1081
00:49:52,900 --> 00:49:59,370
to<font color="#E5E5E5"> be sending</font><font color="#CCCCCC"> to be something on the</font>

1082
00:49:55,810 --> 00:50:03,700
order of<font color="#CCCCCC"> 25% of CPU</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> machine</font>

1083
00:49:59,370 --> 00:50:05,740
<font color="#E5E5E5">receiving maybe like</font><font color="#CCCCCC"> 5% 10%</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> worst</font>

1084
00:50:03,700 --> 00:50:08,410
<font color="#CCCCCC">case</font><font color="#E5E5E5"> scenario on Android I've seen</font>

1085
00:50:05,740 --> 00:50:12,310
numbers<font color="#CCCCCC"> over 50%</font><font color="#E5E5E5"> presenting</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> also</font>

1086
00:50:08,410 --> 00:50:17,549
seen<font color="#E5E5E5"> that on iOS</font><font color="#CCCCCC"> so it can be pretty</font>

1087
00:50:12,310 --> 00:50:20,529
<font color="#E5E5E5">huge</font><font color="#CCCCCC"> currently our two biggest</font><font color="#E5E5E5"> kind of</font>

1088
00:50:17,550 --> 00:50:22,300
one is new and one is older the<font color="#CCCCCC"> older</font>

1089
00:50:20,530 --> 00:50:24,820
one is<font color="#E5E5E5"> packet</font><font color="#CCCCCC"> rx ring which is a receive</font>

1090
00:50:22,300 --> 00:50:27,660
side optimization that allows<font color="#CCCCCC"> us to</font>

1091
00:50:24,820 --> 00:50:30,250
share<font color="#E5E5E5"> a memory buffer with the kernel</font>

1092
00:50:27,660 --> 00:50:32,170
<font color="#CCCCCC">packets get</font><font color="#E5E5E5"> very efficiently read into</font>

1093
00:50:30,250 --> 00:50:34,120
that buffer<font color="#E5E5E5"> and then we just get an up</font>

1094
00:50:32,170 --> 00:50:36,580
call<font color="#CCCCCC"> and says like here's a ton of data</font>

1095
00:50:34,120 --> 00:50:37,960
like go at it<font color="#E5E5E5"> and then when we're done</font>

1096
00:50:36,580 --> 00:50:40,690
of<font color="#E5E5E5"> course we give it back to the kernel</font>

1097
00:50:37,960 --> 00:50:43,660
<font color="#E5E5E5">and rinse and repeat</font><font color="#CCCCCC"> so at least</font><font color="#E5E5E5"> in</font>

1098
00:50:40,690 --> 00:50:46,180
<font color="#CCCCCC">terms</font><font color="#E5E5E5"> of profiles this is not quite free</font>

1099
00:50:43,660 --> 00:50:48,339
but shockingly cheap<font color="#CCCCCC"> I don't know why</font>

1100
00:50:46,180 --> 00:50:50,259
<font color="#E5E5E5">but it is super</font>

1101
00:50:48,340 --> 00:50:52,660
so when it's<font color="#CCCCCC"> available it's it's quite</font>

1102
00:50:50,260 --> 00:50:54,790
<font color="#E5E5E5">appealing</font><font color="#CCCCCC"> UDP</font><font color="#E5E5E5"> receive in general is</font>

1103
00:50:52,660 --> 00:50:56,230
actually not<font color="#E5E5E5"> that expensive</font><font color="#CCCCCC"> it was more</font>

1104
00:50:54,790 --> 00:50:59,500
expensive<font color="#E5E5E5"> when we started the quick</font>

1105
00:50:56,230 --> 00:51:01,150
project but<font color="#E5E5E5"> Willem and</font><font color="#CCCCCC"> Eric doomsday</font>

1106
00:50:59,500 --> 00:51:03,250
<font color="#E5E5E5">made some really nice optimizations on</font>

1107
00:51:01,150 --> 00:51:05,620
the UDP received path over the last few

1108
00:51:03,250 --> 00:51:08,020
<font color="#CCCCCC">years and</font><font color="#E5E5E5"> so when we've done recent</font>

1109
00:51:05,620 --> 00:51:10,509
benchmarks<font color="#CCCCCC"> it was only a few percent</font>

1110
00:51:08,020 --> 00:51:11,980
difference between our<font color="#CCCCCC"> x-raying and UDP</font>

1111
00:51:10,510 --> 00:51:13,600
<font color="#CCCCCC">received where is probably more like a</font>

1112
00:51:11,980 --> 00:51:17,140
<font color="#CCCCCC">10 percent difference</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> we first</font>

1113
00:51:13,600 --> 00:51:20,080
launched it<font color="#CCCCCC"> the other thing that has</font>

1114
00:51:17,140 --> 00:51:23,650
<font color="#E5E5E5">been added more recently about May time</font>

1115
00:51:20,080 --> 00:51:24,910
frame<font color="#E5E5E5"> is something called UDP</font><font color="#CCCCCC"> GSO</font><font color="#E5E5E5"> and</font>

1116
00:51:23,650 --> 00:51:27,370
that allows the kernel to do

1117
00:51:24,910 --> 00:51:30,129
segmentation<font color="#E5E5E5"> not fragmentation but</font>

1118
00:51:27,370 --> 00:51:32,049
segmentation where you give it a very

1119
00:51:30,130 --> 00:51:34,090
<font color="#E5E5E5">large UDP packet and it basically</font>

1120
00:51:32,050 --> 00:51:36,760
segments it for you now you have<font color="#E5E5E5"> to do</font>

1121
00:51:34,090 --> 00:51:37,960
everything<font color="#E5E5E5"> correctly because it's</font><font color="#CCCCCC"> very</font>

1122
00:51:36,760 --> 00:51:40,300
important that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> quic packet</font>

1123
00:51:37,960 --> 00:51:41,680
boundaries line up exactly<font color="#E5E5E5"> with where</font>

1124
00:51:40,300 --> 00:51:44,200
it's going<font color="#CCCCCC"> to segment it otherwise you</font>

1125
00:51:41,680 --> 00:51:45,399
end<font color="#E5E5E5"> up with like</font><font color="#CCCCCC"> Internet garbage but it</font>

1126
00:51:44,200 --> 00:51:47,259
<font color="#CCCCCC">turns out</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> isn't super hard to</font>

1127
00:51:45,400 --> 00:51:48,940
implement<font color="#CCCCCC"> you just you know you have a</font>

1128
00:51:47,260 --> 00:51:52,720
<font color="#E5E5E5">mass packet size and you put that in and</font>

1129
00:51:48,940 --> 00:51:54,460
like everything works<font color="#CCCCCC"> and of course</font><font color="#E5E5E5"> you</font>

1130
00:51:52,720 --> 00:51:57,129
know we we haven't<font color="#E5E5E5"> really been exploring</font>

1131
00:51:54,460 --> 00:51:58,510
it too much but<font color="#CCCCCC"> kernel bypass is still</font><font color="#E5E5E5"> a</font>

1132
00:51:57,130 --> 00:52:01,270
potential<font color="#CCCCCC"> option especially</font><font color="#E5E5E5"> on the</font>

1133
00:51:58,510 --> 00:52:02,680
receive side and I<font color="#E5E5E5"> know that like we've</font>

1134
00:52:01,270 --> 00:52:05,110
been talking<font color="#CCCCCC"> with Apple about some of</font>

1135
00:52:02,680 --> 00:52:09,790
their newer<font color="#E5E5E5"> api's particularly for iOS</font>

1136
00:52:05,110 --> 00:52:11,500
<font color="#E5E5E5">11 or is it 12 12 sorry</font><font color="#CCCCCC"> and some of</font>

1137
00:52:09,790 --> 00:52:13,600
those look<font color="#CCCCCC"> very promising from</font><font color="#E5E5E5"> a</font>

1138
00:52:11,500 --> 00:52:17,860
performance perspective in terms of

1139
00:52:13,600 --> 00:52:20,049
<font color="#CCCCCC">client-side performance so a journalist</font>

1140
00:52:17,860 --> 00:52:22,330
<font color="#CCCCCC">take</font><font color="#E5E5E5"> all of</font><font color="#CCCCCC"> the issues that were</font>

1141
00:52:20,050 --> 00:52:23,740
highlighted<font color="#E5E5E5"> before about about multipath</font>

1142
00:52:22,330 --> 00:52:26,380
<font color="#CCCCCC">and the challenges</font><font color="#E5E5E5"> of getting multi path</font>

1143
00:52:23,740 --> 00:52:27,970
in our<font color="#CCCCCC"> data structures are</font><font color="#E5E5E5"> not nearly as</font>

1144
00:52:26,380 --> 00:52:30,010
optimized<font color="#CCCCCC"> is the nice</font><font color="#E5E5E5"> kernel as you</font>

1145
00:52:27,970 --> 00:52:31,959
might expect<font color="#E5E5E5"> because we have been around</font>

1146
00:52:30,010 --> 00:52:35,320
<font color="#E5E5E5">for four or</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> and gone</font><font color="#E5E5E5"> through</font>

1147
00:52:31,960 --> 00:52:38,020
<font color="#E5E5E5">over 40 quick versions and they've been</font>

1148
00:52:35,320 --> 00:52:39,550
<font color="#E5E5E5">around for 40 years or so</font><font color="#CCCCCC"> you know maybe</font>

1149
00:52:38,020 --> 00:52:41,380
not<font color="#E5E5E5"> quite that</font><font color="#CCCCCC"> long</font><font color="#E5E5E5"> but a very long time</font>

1150
00:52:39,550 --> 00:52:45,100
and<font color="#E5E5E5"> had a lot</font><font color="#CCCCCC"> of people working</font><font color="#E5E5E5"> on it</font>

1151
00:52:41,380 --> 00:52:47,770
<font color="#E5E5E5">for a long</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> so we're still working</font>

1152
00:52:45,100 --> 00:52:49,360
<font color="#E5E5E5">on improving cache efficiency improving</font>

1153
00:52:47,770 --> 00:52:51,009
<font color="#CCCCCC">your data structures and</font><font color="#E5E5E5"> minimizing</font>

1154
00:52:49,360 --> 00:52:53,340
copies and allocations<font color="#E5E5E5"> we're pretty good</font>

1155
00:52:51,010 --> 00:52:56,020
<font color="#CCCCCC">on copies and allocations at this moment</font>

1156
00:52:53,340 --> 00:52:57,400
cache efficiency is actually still I

1157
00:52:56,020 --> 00:52:59,050
made your problem like there's<font color="#E5E5E5"> still</font>

1158
00:52:57,400 --> 00:53:00,040
some pointer following and visitors<font color="#E5E5E5"> and</font>

1159
00:52:59,050 --> 00:53:02,770
such

1160
00:53:00,040 --> 00:53:04,270
and I<font color="#E5E5E5"> think we pretty much gotten rid</font><font color="#CCCCCC"> of</font>

1161
00:53:02,770 --> 00:53:06,700
<font color="#E5E5E5">all the linked lists or anything else</font>

1162
00:53:04,270 --> 00:53:09,160
that's you know<font color="#E5E5E5"> of that nature in our</font>

1163
00:53:06,700 --> 00:53:11,649
<font color="#E5E5E5">code because pretty much you want as</font>

1164
00:53:09,160 --> 00:53:14,980
much<font color="#E5E5E5"> as possible to be in you know</font>

1165
00:53:11,650 --> 00:53:16,450
<font color="#E5E5E5">contingent</font><font color="#CCCCCC"> our coherent memory that's</font>

1166
00:53:14,980 --> 00:53:17,980
like you<font color="#CCCCCC"> know in large blocks</font><font color="#E5E5E5"> and you do</font>

1167
00:53:16,450 --> 00:53:22,569
not want<font color="#CCCCCC"> to be like following pointers</font>

1168
00:53:17,980 --> 00:53:25,240
to pointers to pointers okay

1169
00:53:22,569 --> 00:53:28,329
so the<font color="#E5E5E5"> last quirk is quick has encrypted</font>

1170
00:53:25,240 --> 00:53:30,098
acknowledgments unlike TCP<font color="#CCCCCC"> that does</font>

1171
00:53:28,329 --> 00:53:32,859
defeat some<font color="#E5E5E5"> of TCP is kind of receive</font>

1172
00:53:30,099 --> 00:53:35,470
side<font color="#E5E5E5"> aggregation that</font><font color="#CCCCCC"> I can do I believe</font>

1173
00:53:32,859 --> 00:53:37,089
that's<font color="#CCCCCC"> our the giro mechanism if I</font>

1174
00:53:35,470 --> 00:53:39,549
remember correctly<font color="#E5E5E5"> or at the very least</font>

1175
00:53:37,089 --> 00:53:42,460
<font color="#CCCCCC">some middle boxes do it for you whether</font>

1176
00:53:39,549 --> 00:53:44,130
they you<font color="#E5E5E5"> ask them to or not</font><font color="#CCCCCC"> and so do</font>

1177
00:53:42,460 --> 00:53:47,890
some<font color="#E5E5E5"> Wi-Fi access points promoting here</font>

1178
00:53:44,130 --> 00:53:48,849
<font color="#CCCCCC">and so you know in general it's possible</font>

1179
00:53:47,890 --> 00:53:49,960
<font color="#E5E5E5">and quick to get</font><font color="#CCCCCC"> to fewer</font>

1180
00:53:48,849 --> 00:53:51,670
acknowledgments but also more

1181
00:53:49,960 --> 00:53:54,640
<font color="#E5E5E5">importantly you don't have to do</font>

1182
00:53:51,670 --> 00:53:58,059
decryption and<font color="#E5E5E5"> they're relatively simple</font>

1183
00:53:54,640 --> 00:54:02,440
to process<font color="#CCCCCC"> so our</font><font color="#E5E5E5"> solution</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font>

1184
00:53:58,059 --> 00:54:03,880
we<font color="#CCCCCC"> send ax</font><font color="#E5E5E5"> less often</font><font color="#CCCCCC"> so by</font><font color="#E5E5E5"> default</font>

1185
00:54:02,440 --> 00:54:06,270
<font color="#CCCCCC">right now we are sending ax every</font>

1186
00:54:03,880 --> 00:54:07,960
quarter<font color="#CCCCCC"> RTT</font><font color="#E5E5E5"> or every</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> packets</font>

1187
00:54:06,270 --> 00:54:10,930
whichever comes first

1188
00:54:07,960 --> 00:54:12,030
so at least with<font color="#CCCCCC"> PBR that turns out</font><font color="#E5E5E5"> to</font>

1189
00:54:10,930 --> 00:54:14,558
<font color="#E5E5E5">work rather nicely</font>

1190
00:54:12,030 --> 00:54:16,390
<font color="#CCCCCC">it doesn't actually give you better</font>

1191
00:54:14,559 --> 00:54:18,940
congestion control by itself<font color="#E5E5E5"> but it</font>

1192
00:54:16,390 --> 00:54:20,109
saves enough<font color="#E5E5E5"> CPU in the</font><font color="#CCCCCC"> client-side that</font>

1193
00:54:18,940 --> 00:54:23,440
you end<font color="#E5E5E5"> up actually</font><font color="#CCCCCC"> with a slight</font>

1194
00:54:20,109 --> 00:54:29,910
increase<font color="#CCCCCC"> in bandwidth it's kind of crazy</font>

1195
00:54:23,440 --> 00:54:32,799
<font color="#E5E5E5">but it's true it turns out that if you</font>

1196
00:54:29,910 --> 00:54:34,899
if you send one act per packet or<font color="#E5E5E5"> run it</font>

1197
00:54:32,799 --> 00:54:36,609
for<font color="#CCCCCC"> two packets</font><font color="#E5E5E5"> and you're</font><font color="#CCCCCC"> receiving</font>

1198
00:54:34,900 --> 00:54:40,030
very fast on Wi-Fi you run out of

1199
00:54:36,609 --> 00:54:41,740
transmit opportunities and so<font color="#E5E5E5"> estimation</font>

1200
00:54:40,030 --> 00:54:46,809
actually really helps<font color="#E5E5E5"> even</font><font color="#CCCCCC"> though you're</font>

1201
00:54:41,740 --> 00:54:48,279
doing<font color="#CCCCCC"> nothing else wrong so and the</font>

1202
00:54:46,809 --> 00:54:49,630
<font color="#CCCCCC">other side of the coin is you know</font>

1203
00:54:48,280 --> 00:54:51,910
<font color="#E5E5E5">people have tried to get that into</font>

1204
00:54:49,630 --> 00:54:53,530
upstream<font color="#E5E5E5"> Linux as</font><font color="#CCCCCC"> well as like a we</font>

1205
00:54:51,910 --> 00:54:56,740
<font color="#E5E5E5">don't have this problem</font><font color="#CCCCCC"> data centers go</font>

1206
00:54:53,530 --> 00:54:59,230
away and so we need something<font color="#CCCCCC"> that order</font>

1207
00:54:56,740 --> 00:55:00,660
<font color="#E5E5E5">Tunes</font><font color="#CCCCCC"> so I guess that's one of the</font>

1208
00:54:59,230 --> 00:55:05,290
advantages<font color="#CCCCCC"> of doing it out of the curl</font>

1209
00:55:00,660 --> 00:55:08,230
yeah<font color="#CCCCCC"> so</font><font color="#E5E5E5"> ever want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk a</font><font color="#CCCCCC"> little bit</font>

1210
00:55:05,290 --> 00:55:09,670
<font color="#CCCCCC">about how we're using sockets we've gone</font>

1211
00:55:08,230 --> 00:55:10,900
back and<font color="#E5E5E5"> forth with</font><font color="#CCCCCC"> our kernel team</font>

1212
00:55:09,670 --> 00:55:13,060
about<font color="#E5E5E5"> kind of what the recommended</font>

1213
00:55:10,900 --> 00:55:14,740
approach<font color="#E5E5E5"> is and</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> server side</font>

1214
00:55:13,060 --> 00:55:15,970
application it's not clear that<font color="#E5E5E5"> this</font>

1215
00:55:14,740 --> 00:55:17,950
should be<font color="#CCCCCC"> the recommended approach for</font>

1216
00:55:15,970 --> 00:55:21,490
everyone<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's it's sort of what they</font>

1217
00:55:17,950 --> 00:55:24,279
came<font color="#CCCCCC"> up with so the approach is to use</font>

1218
00:55:21,490 --> 00:55:26,470
the socket<font color="#CCCCCC"> per thread sorry I should</font>

1219
00:55:24,280 --> 00:55:29,500
clarify<font color="#E5E5E5"> a receive socket and a sense of</font>

1220
00:55:26,470 --> 00:55:32,770
separate<font color="#CCCCCC"> lis per thread with s eries</font>

1221
00:55:29,500 --> 00:55:35,530
port for<font color="#CCCCCC"> the receive socket so it splits</font>

1222
00:55:32,770 --> 00:55:37,390
all the traffic<font color="#E5E5E5"> kind of stabili for you</font>

1223
00:55:35,530 --> 00:55:39,069
<font color="#E5E5E5">into you the number of threads obviously</font>

1224
00:55:37,390 --> 00:55:40,868
you can't change the number<font color="#E5E5E5"> of threads</font>

1225
00:55:39,069 --> 00:55:46,029
after you start up the<font color="#CCCCCC"> server but that's</font>

1226
00:55:40,869 --> 00:55:47,740
<font color="#E5E5E5">usually not a huge constraint we do use</font>

1227
00:55:46,030 --> 00:55:51,099
our<font color="#E5E5E5"> X ring but you still and think end</font>

1228
00:55:47,740 --> 00:55:57,040
up having actually well with our<font color="#CCCCCC"> exit</font>

1229
00:55:51,099 --> 00:55:58,420
ring I guess<font color="#CCCCCC"> breezing a PPF but I think</font>

1230
00:55:57,040 --> 00:56:01,810
I<font color="#CCCCCC"> say reuse port works with our extreme</font>

1231
00:55:58,420 --> 00:56:04,859
<font color="#CCCCCC">- you can't remember because our</font>

1232
00:56:01,810 --> 00:56:07,180
<font color="#E5E5E5">experiencers packet sockets</font><font color="#CCCCCC"> so the app</font>

1233
00:56:04,859 --> 00:56:09,430
<font color="#E5E5E5">dispatcher is based on quick connection</font>

1234
00:56:07,180 --> 00:56:10,540
ID<font color="#E5E5E5"> so you know it gets all these random</font>

1235
00:56:09,430 --> 00:56:12,720
packets for various<font color="#CCCCCC"> different</font>

1236
00:56:10,540 --> 00:56:15,009
connections<font color="#E5E5E5"> dispatches the correct</font>

1237
00:56:12,720 --> 00:56:19,569
connection you know hash table instead

1238
00:56:15,010 --> 00:56:21,460
<font color="#CCCCCC">red stuff and you know at</font><font color="#E5E5E5"> least</font>

1239
00:56:19,569 --> 00:56:23,500
initially what we<font color="#E5E5E5"> did is</font><font color="#CCCCCC"> we just</font><font color="#E5E5E5"> had</font>

1240
00:56:21,460 --> 00:56:26,200
used straight as a<font color="#CCCCCC"> respawn</font><font color="#E5E5E5"> and if a</font>

1241
00:56:23,500 --> 00:56:28,839
packet landed on the wrong<font color="#E5E5E5"> thread we</font>

1242
00:56:26,200 --> 00:56:30,328
would just toss it to another<font color="#E5E5E5"> thread</font><font color="#CCCCCC"> so</font>

1243
00:56:28,839 --> 00:56:33,849
that<font color="#E5E5E5"> adds a fair amount of contention</font>

1244
00:56:30,329 --> 00:56:35,410
<font color="#CCCCCC">but</font><font color="#E5E5E5"> now rebinding is</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> connection</font>

1245
00:56:33,849 --> 00:56:36,790
migration together are much much less

1246
00:56:35,410 --> 00:56:39,520
than<font color="#CCCCCC"> 1% of</font><font color="#E5E5E5"> all connections</font>

1247
00:56:36,790 --> 00:56:42,220
<font color="#E5E5E5">so if you're doing this for</font><font color="#CCCCCC"> you know 0.5</font>

1248
00:56:39,520 --> 00:56:45,490
or<font color="#E5E5E5"> 0.4 percent of all your packets</font><font color="#CCCCCC"> it's</font>

1249
00:56:42,220 --> 00:56:47,200
it's somewhat acceptable in the world if

1250
00:56:45,490 --> 00:56:49,328
we<font color="#E5E5E5"> if we thought we were mostly going to</font>

1251
00:56:47,200 --> 00:56:52,919
have connections<font color="#E5E5E5"> that were longer lived</font>

1252
00:56:49,329 --> 00:56:55,440
or a lot more connection<font color="#E5E5E5"> migration then</font>

1253
00:56:52,920 --> 00:56:58,660
that<font color="#CCCCCC"> birch might be a</font><font color="#E5E5E5"> little less viable</font>

1254
00:56:55,440 --> 00:57:00,760
<font color="#E5E5E5">so and then the other thing I kind of</font>

1255
00:56:58,660 --> 00:57:03,368
that<font color="#CCCCCC"> renzo got out of me is</font><font color="#E5E5E5"> that yes</font><font color="#CCCCCC"> you</font>

1256
00:57:00,760 --> 00:57:06,690
can<font color="#E5E5E5"> also use a</font><font color="#CCCCCC"> PPF</font><font color="#E5E5E5"> for connection ID</font>

1257
00:57:03,369 --> 00:57:06,690
based earring<font color="#E5E5E5"> and that's pretty simple</font>

1258
00:57:09,390 --> 00:57:15,640
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> so reason the socket bird thread for</font>

1259
00:57:12,010 --> 00:57:17,650
sending a<font color="#E5E5E5"> sending socket per connection</font>

1260
00:57:15,640 --> 00:57:19,420
<font color="#E5E5E5">is mostly impractical from what we've</font>

1261
00:57:17,650 --> 00:57:21,339
tried<font color="#CCCCCC"> together we</font><font color="#E5E5E5"> actually been going</font>

1262
00:57:19,420 --> 00:57:24,069
back and forth this week on kind<font color="#E5E5E5"> of what</font>

1263
00:57:21,339 --> 00:57:25,390
the<font color="#E5E5E5"> right API for that would be but at</font>

1264
00:57:24,069 --> 00:57:26,839
least my current understanding is that

1265
00:57:25,390 --> 00:57:29,390
in Linux

1266
00:57:26,839 --> 00:57:31,250
none of the API is<font color="#E5E5E5"> do quite what you</font>

1267
00:57:29,390 --> 00:57:34,640
would like so you can't<font color="#E5E5E5"> kind of follow</font>

1268
00:57:31,250 --> 00:57:37,430
the standard TCP<font color="#E5E5E5"> accept and then</font><font color="#CCCCCC"> create</font>

1269
00:57:34,640 --> 00:57:39,828
<font color="#E5E5E5">a new socket sort of like pattern</font><font color="#CCCCCC"> that</font>

1270
00:57:37,430 --> 00:57:43,190
that<font color="#CCCCCC"> pattern doesn't</font><font color="#E5E5E5"> quite work for sort</font>

1271
00:57:39,829 --> 00:57:44,809
of<font color="#CCCCCC"> connection oriented UDP sockets if</font>

1272
00:57:43,190 --> 00:57:46,309
I'm wrong then then please correct me

1273
00:57:44,809 --> 00:57:47,539
but<font color="#E5E5E5"> this was certainly true</font><font color="#CCCCCC"> when we kind</font>

1274
00:57:46,309 --> 00:57:49,599
<font color="#CCCCCC">of</font><font color="#E5E5E5"> started this project three or four</font>

1275
00:57:47,539 --> 00:57:51,829
years<font color="#CCCCCC"> ago</font>

1276
00:57:49,599 --> 00:57:53,059
also<font color="#E5E5E5"> it turns out like a socket /</font>

1277
00:57:51,829 --> 00:57:55,369
connection is not necessarily that

1278
00:57:53,059 --> 00:57:58,069
<font color="#E5E5E5">beneficial there's a fair amount of like</font>

1279
00:57:55,369 --> 00:57:59,779
state overhead in such per socket<font color="#CCCCCC"> and</font>

1280
00:57:58,069 --> 00:58:01,160
we're<font color="#E5E5E5"> not really using it for anything</font>

1281
00:57:59,779 --> 00:58:03,680
at the moment<font color="#CCCCCC"> we're not</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> like</font>

1282
00:58:01,160 --> 00:58:05,990
pacing<font color="#CCCCCC"> offload or anything like</font><font color="#E5E5E5"> that and</font>

1283
00:58:03,680 --> 00:58:07,609
so<font color="#CCCCCC"> it's just</font><font color="#E5E5E5"> a basically we're</font><font color="#CCCCCC"> just</font>

1284
00:58:05,990 --> 00:58:09,348
looking<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the cheapest way</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get a</font>

1285
00:58:07,609 --> 00:58:14,990
packet<font color="#E5E5E5"> onto the</font><font color="#CCCCCC"> Nick as quickly as</font>

1286
00:58:09,349 --> 00:58:17,480
humanly possible oh I should mention

1287
00:58:14,990 --> 00:58:18,348
since we're sharing<font color="#E5E5E5"> socket among all of</font>

1288
00:58:17,480 --> 00:58:21,349
these<font color="#E5E5E5"> threads and all of these</font>

1289
00:58:18,349 --> 00:58:23,660
<font color="#CCCCCC">connections we do use application layer</font>

1290
00:58:21,349 --> 00:58:24,980
<font color="#CCCCCC">pacing</font><font color="#E5E5E5"> and we only paste 1 millisecond</font>

1291
00:58:23,660 --> 00:58:26,629
into the future which is<font color="#CCCCCC"> fairly</font>

1292
00:58:24,980 --> 00:58:29,599
comparable to what Linux does<font color="#E5E5E5"> internally</font>

1293
00:58:26,630 --> 00:58:31,789
<font color="#CCCCCC">in the FQ</font><font color="#E5E5E5"> pacing acutest</font><font color="#CCCCCC"> and that allows</font>

1294
00:58:29,599 --> 00:58:34,670
us<font color="#E5E5E5"> to</font><font color="#CCCCCC"> not have an insanely large socket</font>

1295
00:58:31,789 --> 00:58:36,619
buffer<font color="#CCCCCC"> otherwise if we</font><font color="#E5E5E5"> send you know 10</font>

1296
00:58:34,670 --> 00:58:38,660
or<font color="#E5E5E5"> 20 milliseconds in the future we</font>

1297
00:58:36,619 --> 00:58:41,119
would<font color="#CCCCCC"> need multiple megabytes probably</font>

1298
00:58:38,660 --> 00:58:43,160
in the order<font color="#CCCCCC"> of 10 to</font><font color="#E5E5E5"> 20 megabytes per</font>

1299
00:58:41,119 --> 00:58:45,589
thread of socket buffer just<font color="#E5E5E5"> to hold all</font>

1300
00:58:43,160 --> 00:58:46,819
the packets but bouquets were only

1301
00:58:45,589 --> 00:58:50,029
sending<font color="#CCCCCC"> one millisecond in the</font><font color="#E5E5E5"> feature</font>

1302
00:58:46,819 --> 00:58:52,089
it's more on the<font color="#E5E5E5"> order</font><font color="#CCCCCC"> of like</font><font color="#E5E5E5"> 256 K to</font>

1303
00:58:50,029 --> 00:58:56,180
a Meg depending on the circumstance

1304
00:58:52,089 --> 00:58:57,859
<font color="#CCCCCC">Spence Minich yes but we still do</font><font color="#E5E5E5"> have</font>

1305
00:58:56,180 --> 00:59:01,069
to use<font color="#CCCCCC"> a</font><font color="#E5E5E5"> larger than like default socket</font>

1306
00:58:57,859 --> 00:59:03,230
buffer<font color="#CCCCCC"> one</font><font color="#E5E5E5"> issue</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we do have with</font>

1307
00:59:01,069 --> 00:59:05,180
the setup<font color="#E5E5E5"> is the fqq disk creates some</font>

1308
00:59:03,230 --> 00:59:06,829
unfairness between<font color="#E5E5E5"> quick and</font><font color="#CCCCCC"> tcp so if</font>

1309
00:59:05,180 --> 00:59:09,770
you do get into<font color="#CCCCCC"> a situation where</font><font color="#E5E5E5"> your</font>

1310
00:59:06,829 --> 00:59:12,079
<font color="#E5E5E5">NIC limited quick will sort of suffer</font>

1311
00:59:09,770 --> 00:59:13,788
<font color="#E5E5E5">relative to TCP because all the</font><font color="#CCCCCC"> quic</font>

1312
00:59:12,079 --> 00:59:17,329
flows get as much egress out<font color="#E5E5E5"> of the box</font>

1313
00:59:13,789 --> 00:59:20,150
<font color="#E5E5E5">as every each individual TCP flows flow</font>

1314
00:59:17,329 --> 00:59:22,390
so you know you're<font color="#CCCCCC"> basically getting in</font>

1315
00:59:20,150 --> 00:59:26,450
the worst case scenario<font color="#CCCCCC"> maybe I 100x</font>

1316
00:59:22,390 --> 00:59:29,170
less<font color="#E5E5E5"> throughput</font><font color="#CCCCCC"> then then needs to</font><font color="#E5E5E5"> be in</font>

1317
00:59:26,450 --> 00:59:31,700
<font color="#E5E5E5">practice you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to run your your box</font>

1318
00:59:29,170 --> 00:59:33,170
stupid or your<font color="#E5E5E5"> neck rather stupidly hot</font>

1319
00:59:31,700 --> 00:59:34,848
for<font color="#E5E5E5"> this to ever become a practical</font>

1320
00:59:33,170 --> 00:59:40,000
issue<font color="#E5E5E5"> in any kind</font><font color="#CCCCCC"> of longer-term</font>

1321
00:59:34,849 --> 00:59:40,000
perspective but something would<font color="#E5E5E5"> be aware</font>

1322
00:59:44,670 --> 00:59:51,010
so packet sockets<font color="#E5E5E5"> packet sockets with</font>

1323
00:59:49,750 --> 00:59:53,140
<font color="#CCCCCC">chaired membered ring Eric's</font><font color="#E5E5E5"> ring as I</font>

1324
00:59:51,010 --> 00:59:56,500
said<font color="#E5E5E5"> are a nice improvement over</font>

1325
00:59:53,140 --> 00:59:58,960
standard UDP sockets<font color="#CCCCCC"> we tried out TX</font>

1326
00:59:56,500 --> 01:00:00,490
ring<font color="#CCCCCC"> which</font><font color="#E5E5E5"> is a memory</font><font color="#CCCCCC"> act transmitted</font>

1327
00:59:58,960 --> 01:00:02,980
version it's kind of very<font color="#E5E5E5"> very similar</font>

1328
01:00:00,490 --> 01:00:05,080
<font color="#E5E5E5">to our</font><font color="#CCCCCC"> experiment just the opposite and</font>

1329
01:00:02,980 --> 01:00:07,890
<font color="#CCCCCC">we couldn't get really large</font><font color="#E5E5E5"> CPU went</font>

1330
01:00:05,080 --> 01:00:11,230
out of them<font color="#E5E5E5"> it's not really clear why</font>

1331
01:00:07,890 --> 01:00:12,490
they should work<font color="#E5E5E5"> quite well</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> a more</font>

1332
01:00:11,230 --> 01:00:14,500
important point<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> they are very</font>

1333
01:00:12,490 --> 01:00:16,000
very<font color="#CCCCCC"> difficult to</font><font color="#E5E5E5"> deploy so packet</font>

1334
01:00:14,500 --> 01:00:18,880
<font color="#E5E5E5">sockets on the receive side basically</font>

1335
01:00:16,000 --> 01:00:20,530
<font color="#E5E5E5">only require you to have cap net raw and</font>

1336
01:00:18,880 --> 01:00:22,330
then<font color="#E5E5E5"> you're you're good to go</font><font color="#CCCCCC"> you don't</font>

1337
01:00:20,530 --> 01:00:24,310
really need a<font color="#E5E5E5"> whole</font><font color="#CCCCCC"> lot of you know</font>

1338
01:00:22,330 --> 01:00:26,890
<font color="#E5E5E5">intelligence</font><font color="#CCCCCC"> and software complexity</font><font color="#E5E5E5"> on</font>

1339
01:00:24,310 --> 01:00:28,240
<font color="#CCCCCC">the send side</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> are bypassing</font><font color="#E5E5E5"> an awful</font>

1340
01:00:26,890 --> 01:00:29,890
lot of<font color="#E5E5E5"> awesome cool stuff</font><font color="#CCCCCC"> that the</font>

1341
01:00:28,240 --> 01:00:36,459
<font color="#CCCCCC">kernel is doing for you and you will</font>

1342
01:00:29,890 --> 01:00:38,500
hate yourself yeah I mean it's just

1343
01:00:36,460 --> 01:00:41,650
shocking<font color="#CCCCCC"> like</font><font color="#E5E5E5"> you're like oh I can do</font>

1344
01:00:38,500 --> 01:00:44,740
<font color="#E5E5E5">this and you</font><font color="#CCCCCC"> just it will</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> a bad</font><font color="#E5E5E5"> like</font>

1345
01:00:41,650 --> 01:00:46,900
<font color="#E5E5E5">here</font><font color="#CCCCCC"> so we spent a lot</font><font color="#E5E5E5"> of time trying to</font>

1346
01:00:44,740 --> 01:00:49,419
<font color="#CCCCCC">one-by-one fix all these</font><font color="#E5E5E5"> issues before</font>

1347
01:00:46,900 --> 01:00:51,580
realizing that there's a foolish idea

1348
01:00:49,420 --> 01:00:55,570
<font color="#E5E5E5">and that we never should have gone there</font>

1349
01:00:51,580 --> 01:00:57,160
<font color="#CCCCCC">and we gave up</font><font color="#E5E5E5"> there was a very small</font>

1350
01:00:55,570 --> 01:00:58,870
<font color="#CCCCCC">CPU benefit as well the difference</font>

1351
01:00:57,160 --> 01:01:02,620
<font color="#CCCCCC">between like raw sockets</font><font color="#E5E5E5"> and packet</font>

1352
01:00:58,870 --> 01:01:04,060
sockets but it was not<font color="#E5E5E5"> that big and it</font>

1353
01:01:02,620 --> 01:01:05,770
<font color="#E5E5E5">was not worth the</font><font color="#CCCCCC"> fact</font><font color="#E5E5E5"> that every once</font>

1354
01:01:04,060 --> 01:01:08,730
in a while<font color="#E5E5E5"> users had like terrible</font>

1355
01:01:05,770 --> 01:01:08,730
terrible things happen<font color="#CCCCCC"> to</font><font color="#E5E5E5"> them</font>

1356
01:01:10,360 --> 01:01:16,270
UDP<font color="#CCCCCC"> GSO</font><font color="#E5E5E5"> so you know at least according</font>

1357
01:01:13,990 --> 01:01:18,549
<font color="#E5E5E5">to Williams recent benchmarks UDP</font><font color="#CCCCCC"> gso</font>

1358
01:01:16,270 --> 01:01:22,090
achieves performance that's around the

1359
01:01:18,550 --> 01:01:26,200
<font color="#CCCCCC">same as TCP for send performance it's</font>

1360
01:01:22,090 --> 01:01:30,100
around 3x faster than what UDP is today

1361
01:01:26,200 --> 01:01:31,779
so the the<font color="#E5E5E5"> one quark is it does release</font>

1362
01:01:30,100 --> 01:01:35,620
all the data grams that innocent<font color="#CCCCCC"> call at</font>

1363
01:01:31,780 --> 01:01:37,840
once and<font color="#E5E5E5"> so in order to get the full CPU</font>

1364
01:01:35,620 --> 01:01:39,790
savings<font color="#E5E5E5"> assuming you really wanted a one</font>

1365
01:01:37,840 --> 01:01:42,900
millisecond<font color="#CCCCCC"> pace and granularity you</font>

1366
01:01:39,790 --> 01:01:46,900
<font color="#CCCCCC">have to have bandwidth the 512 mega bits</font>

1367
01:01:42,900 --> 01:01:48,790
which<font color="#E5E5E5"> is a bit of a bummer</font><font color="#CCCCCC"> so you kind</font>

1368
01:01:46,900 --> 01:01:50,800
of have to<font color="#E5E5E5"> trade off between like how</font>

1369
01:01:48,790 --> 01:01:52,440
bursty and lumpy am<font color="#E5E5E5"> I going to go versus</font>

1370
01:01:50,800 --> 01:01:54,270
how much<font color="#E5E5E5"> CPU savings</font>

1371
01:01:52,440 --> 01:01:58,290
<font color="#CCCCCC">but it does definitely save a</font>

1372
01:01:54,270 --> 01:01:59,819
<font color="#CCCCCC">substantial amount of CPU</font><font color="#E5E5E5"> so ideally the</font>

1373
01:01:58,290 --> 01:02:03,930
<font color="#E5E5E5">segment could be split</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> in some way to</font>

1374
01:01:59,819 --> 01:02:05,369
<font color="#CCCCCC">really reduce loss but you know it's</font>

1375
01:02:03,930 --> 01:02:06,868
it's still<font color="#E5E5E5"> a great addition</font><font color="#CCCCCC"> and</font>

1376
01:02:05,369 --> 01:02:09,150
especially<font color="#E5E5E5"> on high bandwidth connections</font>

1377
01:02:06,869 --> 01:02:10,500
<font color="#E5E5E5">either you know in the future</font><font color="#CCCCCC"> maybe</font>

1378
01:02:09,150 --> 01:02:12,060
<font color="#CCCCCC">client-side uploads that</font><font color="#E5E5E5"> are high</font>

1379
01:02:10,500 --> 01:02:14,280
bandwidth or in<font color="#E5E5E5"> data center of sort of</font>

1380
01:02:12,060 --> 01:02:16,140
applications<font color="#E5E5E5"> it's pretty easy to get to</font>

1381
01:02:14,280 --> 01:02:17,609
a point where<font color="#CCCCCC"> like this is a big CPU</font>

1382
01:02:16,140 --> 01:02:22,770
<font color="#E5E5E5">when and you're getting either all of</font>

1383
01:02:17,609 --> 01:02:25,319
<font color="#CCCCCC">the majority of</font><font color="#E5E5E5"> the to benefit packet</font>

1384
01:02:22,770 --> 01:02:27,810
<font color="#E5E5E5">pacing</font><font color="#CCCCCC"> so for those who are at net dev</font>

1385
01:02:25,319 --> 01:02:30,119
which is not too many<font color="#E5E5E5"> people</font><font color="#CCCCCC"> van spent a</font>

1386
01:02:27,810 --> 01:02:32,940
nice hour talking<font color="#E5E5E5"> van Jacobson</font><font color="#CCCCCC"> spent a</font>

1387
01:02:30,119 --> 01:02:35,520
nice hour<font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> released</font>

1388
01:02:32,940 --> 01:02:38,099
<font color="#E5E5E5">time-based packet pacing and how he was</font>

1389
01:02:35,520 --> 01:02:40,589
<font color="#CCCCCC">a big fan of this I am also</font><font color="#E5E5E5"> the kind of</font>

1390
01:02:38,099 --> 01:02:41,670
this<font color="#E5E5E5"> it really</font><font color="#CCCCCC"> makes it</font><font color="#E5E5E5"> easy to</font>

1391
01:02:40,589 --> 01:02:43,799
<font color="#E5E5E5">integrate it with your congestion</font>

1392
01:02:41,670 --> 01:02:45,230
control it's easy to reason<font color="#E5E5E5"> about when</font>

1393
01:02:43,800 --> 01:02:47,099
the packet actually it's the wire

1394
01:02:45,230 --> 01:02:48,990
<font color="#CCCCCC">admittedly the packet might go out a</font>

1395
01:02:47,099 --> 01:02:51,810
little<font color="#E5E5E5"> bit late but you know you can</font>

1396
01:02:48,990 --> 01:02:53,729
basically consider<font color="#CCCCCC"> Nick queuing delay is</font>

1397
01:02:51,810 --> 01:02:57,810
just part of the the path<font color="#CCCCCC"> RT</font><font color="#E5E5E5"> to you for</font>

1398
01:02:53,730 --> 01:02:59,520
that purpose<font color="#CCCCCC"> it would allow us</font><font color="#E5E5E5"> to you</font>

1399
01:02:57,810 --> 01:03:02,819
<font color="#CCCCCC">know use our shared socket approach but</font>

1400
01:02:59,520 --> 01:03:06,150
<font color="#CCCCCC">also control pacing in theory</font><font color="#E5E5E5"> so like if</font>

1401
01:03:02,819 --> 01:03:08,250
<font color="#E5E5E5">the fqq</font><font color="#CCCCCC"> disc</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> I had a</font><font color="#E5E5E5"> release</font>

1402
01:03:06,150 --> 01:03:10,500
<font color="#E5E5E5">time based pacing module which</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> I've</font>

1403
01:03:08,250 --> 01:03:14,369
been told it should in the nourish

1404
01:03:10,500 --> 01:03:17,609
feature<font color="#CCCCCC"> then it would actually allow</font><font color="#E5E5E5"> us</font>

1405
01:03:14,369 --> 01:03:20,910
<font color="#E5E5E5">to share that socket and also pace to</font>

1406
01:03:17,609 --> 01:03:22,980
the<font color="#E5E5E5"> socket</font><font color="#CCCCCC"> at the same time unlike a</font>

1407
01:03:20,910 --> 01:03:24,930
rate<font color="#E5E5E5"> based pacer where if you try to</font>

1408
01:03:22,980 --> 01:03:26,520
share a single socket<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you use a rate</font>

1409
01:03:24,930 --> 01:03:30,480
based<font color="#E5E5E5"> pacer there's just no correct</font><font color="#CCCCCC"> rate</font>

1410
01:03:26,520 --> 01:03:32,490
that you can<font color="#CCCCCC"> set for multiple flows so</font>

1411
01:03:30,480 --> 01:03:34,859
disabling pacing<font color="#CCCCCC"> can save us up to 30%</font>

1412
01:03:32,490 --> 01:03:37,649
<font color="#E5E5E5">of our CPU which is a pretty insane</font>

1413
01:03:34,859 --> 01:03:40,259
number the actual pacing CPU cost<font color="#E5E5E5"> in a</font>

1414
01:03:37,650 --> 01:03:42,329
profile is like 1%<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know in terms of</font>

1415
01:03:40,260 --> 01:03:44,400
timers and all<font color="#E5E5E5"> that</font><font color="#CCCCCC"> junk</font><font color="#E5E5E5"> so it's not the</font>

1416
01:03:42,329 --> 01:03:46,980
direct cost it's actually the indirect

1417
01:03:44,400 --> 01:03:48,540
cost it's the fact that you're bringing

1418
01:03:46,980 --> 01:03:50,640
in a<font color="#CCCCCC"> huge amount of</font><font color="#E5E5E5"> connections day</font>

1419
01:03:48,540 --> 01:03:52,440
<font color="#E5E5E5">you're sending one packet and then</font>

1420
01:03:50,640 --> 01:03:55,980
<font color="#E5E5E5">you're tossing it all out and you</font><font color="#CCCCCC"> just</font>

1421
01:03:52,440 --> 01:03:59,099
like trashed your entire<font color="#E5E5E5"> CPU cache and</font>

1422
01:03:55,980 --> 01:04:01,440
so<font color="#CCCCCC"> you know by sending</font><font color="#E5E5E5"> say like eight</font>

1423
01:03:59,099 --> 01:04:03,720
packets<font color="#E5E5E5"> at once or like some larger</font>

1424
01:04:01,440 --> 01:04:05,910
number<font color="#E5E5E5"> you're bringing connections in</font>

1425
01:04:03,720 --> 01:04:06,930
less often you

1426
01:04:05,910 --> 01:04:08,640
you're getting better cache locality

1427
01:04:06,930 --> 01:04:10,500
when they are kind of in<font color="#E5E5E5"> cash because</font>

1428
01:04:08,640 --> 01:04:11,759
you just sent a packet so you're kind of

1429
01:04:10,500 --> 01:04:13,740
doing<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> thing over and</font><font color="#E5E5E5"> over again</font>

1430
01:04:11,760 --> 01:04:15,420
<font color="#E5E5E5">it's fairly likely that if your men</font>

1431
01:04:13,740 --> 01:04:17,520
copying from<font color="#E5E5E5"> data that</font><font color="#CCCCCC"> your men copying</font>

1432
01:04:15,420 --> 01:04:19,109
from<font color="#E5E5E5"> the adjacent chunk of data like a</font>

1433
01:04:17,520 --> 01:04:20,579
moment<font color="#CCCCCC"> later</font><font color="#E5E5E5"> all these things kind of</font>

1434
01:04:19,109 --> 01:04:25,230
start<font color="#CCCCCC"> working for</font><font color="#E5E5E5"> you instead of against</font>

1435
01:04:20,579 --> 01:04:26,970
you so yeah<font color="#CCCCCC"> but it yeah it also does</font>

1436
01:04:25,230 --> 01:04:29,970
<font color="#E5E5E5">retrain increased retransmit rates about</font>

1437
01:04:26,970 --> 01:04:35,609
<font color="#CCCCCC">50%</font><font color="#E5E5E5"> which does cost CPU but not as much</font>

1438
01:04:29,970 --> 01:04:36,899
<font color="#E5E5E5">as the cache locality stuff so I added</font>

1439
01:04:35,609 --> 01:04:39,328
<font color="#CCCCCC">some links</font><font color="#E5E5E5"> to some patches there's</font>

1440
01:04:36,900 --> 01:04:41,730
reason sport for TX time which is

1441
01:04:39,329 --> 01:04:44,099
released<font color="#CCCCCC"> time-based pacing</font><font color="#E5E5E5"> it was added</font>

1442
01:04:41,730 --> 01:04:45,809
to a non a different<font color="#E5E5E5"> cue desk I can't</font>

1443
01:04:44,099 --> 01:04:47,849
remember<font color="#E5E5E5"> which</font><font color="#CCCCCC"> one but you take a look</font>

1444
01:04:45,809 --> 01:04:50,880
and there's now code in Chrome<font color="#CCCCCC"> for</font>

1445
01:04:47,849 --> 01:04:53,160
pacing<font color="#E5E5E5"> off load said the chromium quick</font>

1446
01:04:50,880 --> 01:04:54,630
<font color="#CCCCCC">implementation will will do pacing off</font>

1447
01:04:53,160 --> 01:05:00,509
load if we have a release<font color="#E5E5E5"> time based</font>

1448
01:04:54,630 --> 01:05:02,430
pacer available all right<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is</font>

1449
01:05:00,510 --> 01:05:03,630
<font color="#E5E5E5">kind of my dream of sending and it's a</font>

1450
01:05:02,430 --> 01:05:05,669
very approximate dream because there are

1451
01:05:03,630 --> 01:05:08,460
a<font color="#E5E5E5"> lot of details that I'm I'm completely</font>

1452
01:05:05,670 --> 01:05:09,839
leaving out<font color="#CCCCCC"> but it kind of gives you</font><font color="#E5E5E5"> an</font>

1453
01:05:08,460 --> 01:05:12,299
<font color="#E5E5E5">idea of where I think things are heading</font>

1454
01:05:09,839 --> 01:05:14,430
in the<font color="#E5E5E5"> future so you have quick</font><font color="#CCCCCC"> as an</font>

1455
01:05:12,299 --> 01:05:15,960
<font color="#E5E5E5">application</font><font color="#CCCCCC"> there's some set of shared</font>

1456
01:05:14,430 --> 01:05:18,118
<font color="#E5E5E5">memory pages</font>

1457
01:05:15,960 --> 01:05:20,460
<font color="#E5E5E5">it's handing over to the networking</font>

1458
01:05:18,119 --> 01:05:21,390
stack<font color="#CCCCCC"> a symmetric key to potentially do</font>

1459
01:05:20,460 --> 01:05:24,359
crypto offload

1460
01:05:21,390 --> 01:05:26,038
it's sending over a release time<font color="#E5E5E5"> so we</font>

1461
01:05:24,359 --> 01:05:29,069
can<font color="#E5E5E5"> you know allow the packet to</font><font color="#CCCCCC"> be</font>

1462
01:05:26,039 --> 01:05:30,510
released and encrypted later<font color="#E5E5E5"> and some</font>

1463
01:05:29,069 --> 01:05:32,490
efficient data<font color="#E5E5E5"> structure</font><font color="#CCCCCC"> says there's a</font>

1464
01:05:30,510 --> 01:05:34,589
<font color="#CCCCCC">timing wheel is inside the networking</font>

1465
01:05:32,490 --> 01:05:37,470
<font color="#E5E5E5">stack and potentially even interacts</font>

1466
01:05:34,589 --> 01:05:40,619
with you know a hardware sort of like

1467
01:05:37,470 --> 01:05:43,618
<font color="#E5E5E5">pacer depending on kind of how the the</font>

1468
01:05:40,619 --> 01:05:46,140
<font color="#CCCCCC">roles are split</font><font color="#E5E5E5"> and then you can offload</font>

1469
01:05:43,619 --> 01:05:48,839
crypto as well<font color="#CCCCCC"> to the rack if if things</font>

1470
01:05:46,140 --> 01:05:50,730
were working<font color="#E5E5E5"> out so the the</font><font color="#CCCCCC"> thing that's</font>

1471
01:05:48,839 --> 01:05:52,980
<font color="#CCCCCC">hand-wavy</font><font color="#E5E5E5"> about this is there</font><font color="#CCCCCC"> are an</font>

1472
01:05:50,730 --> 01:05:54,750
awful lot<font color="#CCCCCC"> of details about exactly what</font>

1473
01:05:52,980 --> 01:05:57,630
these<font color="#E5E5E5"> API</font><font color="#CCCCCC"> should look at look like</font>

1474
01:05:54,750 --> 01:05:58,950
rather and I think that's what I and a

1475
01:05:57,630 --> 01:06:01,010
<font color="#E5E5E5">variety of other people</font><font color="#CCCCCC"> are trying to</font>

1476
01:05:58,950 --> 01:06:05,058
<font color="#E5E5E5">figure out in the next few months</font>

1477
01:06:01,010 --> 01:06:07,140
did you reduce your sentence<font color="#CCCCCC"> than that</font>

1478
01:06:05,059 --> 01:06:08,880
<font color="#E5E5E5">suppose I know I was just wondering what</font>

1479
01:06:07,140 --> 01:06:11,339
your<font color="#CCCCCC"> thoughts are bound so currently</font>

1480
01:06:08,880 --> 01:06:13,710
<font color="#E5E5E5">when you do the pacing and</font><font color="#CCCCCC"> chromium you</font>

1481
01:06:11,339 --> 01:06:17,130
<font color="#CCCCCC">delay the time</font><font color="#E5E5E5"> at which</font><font color="#CCCCCC"> you create the</font>

1482
01:06:13,710 --> 01:06:19,170
packet as a result of facing<font color="#CCCCCC"> versus this</font>

1483
01:06:17,130 --> 01:06:21,839
would<font color="#E5E5E5"> change to a model where you</font>

1484
01:06:19,170 --> 01:06:23,640
<font color="#E5E5E5">the time you send the packet so for</font>

1485
01:06:21,839 --> 01:06:26,279
going away<font color="#CCCCCC"> those two different models</font>

1486
01:06:23,640 --> 01:06:29,460
are<font color="#CCCCCC"> effacing</font><font color="#E5E5E5"> and which one would you</font>

1487
01:06:26,280 --> 01:06:31,170
<font color="#E5E5E5">lose some efficiencies as a result in</font>

1488
01:06:29,460 --> 01:06:33,359
applications where<font color="#CCCCCC"> you think things</font><font color="#E5E5E5"> like</font>

1489
01:06:31,170 --> 01:06:36,089
<font color="#CCCCCC">cancellation are</font><font color="#E5E5E5"> going to be very likely</font>

1490
01:06:33,359 --> 01:06:38,040
then you<font color="#E5E5E5"> you could lose a fair amount or</font>

1491
01:06:36,089 --> 01:06:39,960
cases<font color="#CCCCCC"> where you're extremely</font><font color="#E5E5E5"> sensitive</font>

1492
01:06:38,040 --> 01:06:42,779
<font color="#CCCCCC">to recovery time and</font><font color="#E5E5E5"> so the in fact that</font>

1493
01:06:39,960 --> 01:06:44,160
like no I can't send out a

1494
01:06:42,780 --> 01:06:45,569
retransmission until<font color="#CCCCCC"> where I've like</font>

1495
01:06:44,160 --> 01:06:47,308
cleared the buffer of<font color="#E5E5E5"> the things that I</font>

1496
01:06:45,569 --> 01:06:48,660
already<font color="#E5E5E5"> send out</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are</font>

1497
01:06:47,309 --> 01:06:51,780
circumstances where it actually<font color="#E5E5E5"> could be</font>

1498
01:06:48,660 --> 01:06:53,160
measurably costly<font color="#CCCCCC"> so you have to kind of</font>

1499
01:06:51,780 --> 01:06:55,980
balance like how far in the<font color="#CCCCCC"> future</font><font color="#E5E5E5"> you</font>

1500
01:06:53,160 --> 01:06:59,250
want<font color="#E5E5E5"> to allow yourself to pace</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> CPU</font>

1501
01:06:55,980 --> 01:07:01,470
performance with these other application

1502
01:06:59,250 --> 01:07:03,420
metrics but<font color="#E5E5E5"> I think for so far in our</font>

1503
01:07:01,470 --> 01:07:05,339
initial testing for YouTube<font color="#E5E5E5"> we haven't</font>

1504
01:07:03,420 --> 01:07:07,349
seen any QE changes when<font color="#CCCCCC"> we we've done</font>

1505
01:07:05,339 --> 01:07:13,619
<font color="#CCCCCC">it well as long</font><font color="#E5E5E5"> as we haven't screwed up</font>

1506
01:07:07,349 --> 01:07:15,030
<font color="#CCCCCC">paying</font><font color="#E5E5E5"> out of curiosity you see time</font>

1507
01:07:13,619 --> 01:07:17,309
stamping happening on the left<font color="#E5E5E5"> or on the</font>

1508
01:07:15,030 --> 01:07:20,670
right or it doesn't<font color="#E5E5E5"> matter</font><font color="#CCCCCC"> I see the</font>

1509
01:07:17,309 --> 01:07:22,140
time coming from quick and then<font color="#E5E5E5"> the net</font>

1510
01:07:20,670 --> 01:07:25,260
stack actually<font color="#E5E5E5"> being</font><font color="#CCCCCC"> responsible for</font>

1511
01:07:22,140 --> 01:07:27,690
<font color="#E5E5E5">releasing it</font><font color="#CCCCCC"> yes okay so the</font><font color="#E5E5E5"> congestion</font>

1512
01:07:25,260 --> 01:07:29,130
for<font color="#CCCCCC"> a while</font><font color="#E5E5E5"> then the time stamps</font>

1513
01:07:27,690 --> 01:07:32,430
inaccurate<font color="#E5E5E5"> and that that doesn't matter</font>

1514
01:07:29,130 --> 01:07:34,319
<font color="#E5E5E5">right sorry what if the nest</font><font color="#CCCCCC"> egg sits on</font>

1515
01:07:32,430 --> 01:07:37,529
it for a while as it<font color="#E5E5E5"> releases it and you</font>

1516
01:07:34,319 --> 01:07:40,980
know paste<font color="#CCCCCC"> the timestamp gets stale but</font>

1517
01:07:37,530 --> 01:07:42,180
presumably<font color="#CCCCCC"> yet doesn't matter these</font><font color="#E5E5E5"> cuz</font>

1518
01:07:40,980 --> 01:07:43,799
you generate the time time on the<font color="#CCCCCC"> left</font>

1519
01:07:42,180 --> 01:07:45,390
if the wheel if the pacing wheel like

1520
01:07:43,799 --> 01:07:46,920
sits there<font color="#E5E5E5"> it's the release time so</font>

1521
01:07:45,390 --> 01:07:50,250
usually it's in<font color="#CCCCCC"> the future</font><font color="#E5E5E5"> right so like</font>

1522
01:07:46,920 --> 01:07:51,960
it's intended<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be okay it's into the</font>

1523
01:07:50,250 --> 01:07:56,730
<font color="#E5E5E5">net stack is intended to sit on it for a</font>

1524
01:07:51,960 --> 01:07:58,170
<font color="#E5E5E5">little bit</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are quite a few</font>

1525
01:07:56,730 --> 01:08:01,440
things<font color="#E5E5E5"> that</font><font color="#CCCCCC"> still remain to be to be</font>

1526
01:07:58,170 --> 01:08:04,049
done<font color="#E5E5E5"> there's a possibility of doing some</font>

1527
01:08:01,440 --> 01:08:06,329
receive<font color="#E5E5E5"> side optimizations</font><font color="#CCCCCC"> we've gone</font>

1528
01:08:04,049 --> 01:08:08,130
back and<font color="#E5E5E5"> forth on UDP gr</font><font color="#CCCCCC"> o net</font><font color="#E5E5E5"> dev</font>

1529
01:08:06,329 --> 01:08:09,720
people in<font color="#E5E5E5"> that dev had differing</font>

1530
01:08:08,130 --> 01:08:12,990
opinions as to<font color="#E5E5E5"> whether that was a good</font>

1531
01:08:09,720 --> 01:08:15,118
<font color="#CCCCCC">idea at</font><font color="#E5E5E5"> all there's the question of what</font>

1532
01:08:12,990 --> 01:08:16,889
<font color="#CCCCCC">actually is</font><font color="#E5E5E5"> the API for you know crypto</font>

1533
01:08:15,119 --> 01:08:19,679
offload<font color="#E5E5E5"> when we whenever we do that</font>

1534
01:08:16,890 --> 01:08:21,150
<font color="#CCCCCC">that's pretty wide open</font><font color="#E5E5E5"> at this</font><font color="#CCCCCC"> point</font>

1535
01:08:19,679 --> 01:08:24,569
and they're<font color="#E5E5E5"> pretty expensive topic I</font>

1536
01:08:21,149 --> 01:08:26,969
think KD<font color="#E5E5E5"> K TLS hopefully at least gives</font>

1537
01:08:24,569 --> 01:08:28,980
us an architecture for where to start<font color="#CCCCCC"> in</font>

1538
01:08:26,969 --> 01:08:30,660
<font color="#E5E5E5">that process but I don't know if we're</font>

1539
01:08:28,979 --> 01:08:32,818
<font color="#CCCCCC">gonna actually</font><font color="#E5E5E5"> adopt you know extremely</font>

1540
01:08:30,660 --> 01:08:36,330
<font color="#E5E5E5">similar API or not</font>

1541
01:08:32,819 --> 01:08:39,330
and yeah<font color="#E5E5E5"> some way to to do multi</font>

1542
01:08:36,330 --> 01:08:41,729
<font color="#CCCCCC">Datagram</font><font color="#E5E5E5"> UDP</font><font color="#CCCCCC"> sins</font><font color="#E5E5E5"> and actually have them</font>

1543
01:08:39,330 --> 01:08:43,380
split out this<font color="#CCCCCC"> sort of a</font><font color="#E5E5E5"> critical issue</font>

1544
01:08:41,729 --> 01:08:47,339
at the<font color="#CCCCCC"> moment whether it's</font><font color="#E5E5E5"> euro</font><font color="#CCCCCC"> or some</font>

1545
01:08:43,380 --> 01:08:49,799
other<font color="#E5E5E5"> mechanism</font><font color="#CCCCCC"> I think that's it oh</font>

1546
01:08:47,339 --> 01:08:51,479
yeah and thank you<font color="#CCCCCC"> I want to thank all</font>

1547
01:08:49,799 --> 01:08:54,089
the<font color="#E5E5E5"> people who have contributed to</font>

1548
01:08:51,479 --> 01:08:59,459
making the<font color="#E5E5E5"> kernel better for for quick</font>

1549
01:08:54,089 --> 01:09:02,309
and for<font color="#E5E5E5"> other UDP applications</font><font color="#CCCCCC"> just one</font>

1550
01:08:59,460 --> 01:09:04,439
comment on<font color="#E5E5E5"> the previous slide I do</font>

1551
01:09:02,310 --> 01:09:06,770
so for receive<font color="#CCCCCC"> pass depending</font><font color="#E5E5E5"> on whether</font>

1552
01:09:04,439 --> 01:09:11,629
crypto is<font color="#CCCCCC"> the is the bottleneck</font><font color="#E5E5E5"> or</font>

1553
01:09:06,770 --> 01:09:14,069
kernel stack time is the<font color="#E5E5E5"> bottleneck</font><font color="#CCCCCC"> with</font>

1554
01:09:11,630 --> 01:09:16,200
with the right<font color="#E5E5E5"> flags in the Nick you're</font>

1555
01:09:14,069 --> 01:09:17,670
supposed to be able<font color="#E5E5E5"> to get using AF</font><font color="#CCCCCC"> x DP</font>

1556
01:09:16,200 --> 01:09:22,889
<font color="#E5E5E5">you're supposed to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to get</font><font color="#CCCCCC"> zero</font>

1557
01:09:17,670 --> 01:09:24,990
<font color="#CCCCCC">zero copy</font><font color="#E5E5E5"> receive</font><font color="#CCCCCC"> pass so basically like</font>

1558
01:09:22,890 --> 01:09:27,120
packet<font color="#CCCCCC"> rx ring but packet rx ring is one</font>

1559
01:09:24,990 --> 01:09:29,580
copy yeah<font color="#CCCCCC"> so you're</font><font color="#E5E5E5"> suppose so</font>

1560
01:09:27,120 --> 01:09:31,080
it'd<font color="#CCCCCC"> be</font><font color="#E5E5E5"> interesting to see like how what</font>

1561
01:09:29,580 --> 01:09:32,460
benefit like do you get by<font color="#E5E5E5"> that kind of</font>

1562
01:09:31,080 --> 01:09:34,260
<font color="#E5E5E5">a floating versus the benefit of</font><font color="#CCCCCC"> a</font>

1563
01:09:32,460 --> 01:09:37,109
floating<font color="#CCCCCC"> crypt islands</font><font color="#E5E5E5"> a bit curious if</font>

1564
01:09:34,260 --> 01:09:38,460
you have an<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the answer yeah I</font>

1565
01:09:37,109 --> 01:09:40,650
<font color="#CCCCCC">don't think I have any idea of what the</font>

1566
01:09:38,460 --> 01:09:42,600
<font color="#CCCCCC">answer is</font><font color="#E5E5E5"> at the moment except I can say</font>

1567
01:09:40,649 --> 01:09:44,939
that as long<font color="#CCCCCC"> as</font><font color="#E5E5E5"> the acceleration on a</font>

1568
01:09:42,600 --> 01:09:46,589
given platform<font color="#E5E5E5"> is working well</font><font color="#CCCCCC"> whether</font>

1569
01:09:44,939 --> 01:09:48,809
it's a s<font color="#E5E5E5"> and I or otherwise for crypto</font>

1570
01:09:46,589 --> 01:09:50,130
crypto<font color="#CCCCCC"> it's pretty cheap so it's it</font>

1571
01:09:48,810 --> 01:09:52,140
doesn't<font color="#E5E5E5"> seem to be the worst part about</font>

1572
01:09:50,130 --> 01:09:54,270
<font color="#E5E5E5">cocoa is you have to touch the memory so</font>

1573
01:09:52,140 --> 01:09:55,710
like you know in all of this like if you

1574
01:09:54,270 --> 01:09:57,780
can<font color="#E5E5E5"> just not touch the memory that</font>

1575
01:09:55,710 --> 01:10:01,250
you're trying to<font color="#E5E5E5"> move</font><font color="#CCCCCC"> around like that's</font>

1576
01:09:57,780 --> 01:10:04,370
that's golden<font color="#E5E5E5"> that's that's worth a lot</font>

1577
01:10:01,250 --> 01:10:04,370
thank you

1578
01:10:17,900 --> 01:10:29,360
yeah yeah so hi I'm Brian<font color="#E5E5E5"> and here comes</font>

1579
01:10:22,790 --> 01:10:31,460
Ted and we are going<font color="#E5E5E5"> to spend the next</font>

1580
01:10:29,360 --> 01:10:34,370
<font color="#E5E5E5">15 to 20 minutes talking</font><font color="#CCCCCC"> about a bunch</font>

1581
01:10:31,460 --> 01:10:38,150
<font color="#E5E5E5">of things that are blindingly obvious</font><font color="#CCCCCC"> so</font>

1582
01:10:34,370 --> 01:10:41,420
<font color="#E5E5E5">we'll go fast coming up this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> Ted</font>

1583
01:10:38,150 --> 01:10:45,259
<font color="#CCCCCC">I Ted that's</font><font color="#E5E5E5"> Ryan I'm Ted and this is</font>

1584
01:10:41,420 --> 01:10:58,160
the worst<font color="#CCCCCC"> episode of Family Guy ever</font><font color="#E5E5E5"> all</font>

1585
01:10:45,260 --> 01:10:59,570
<font color="#E5E5E5">right</font><font color="#CCCCCC"> hey at least</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not one of</font><font color="#E5E5E5"> the</font>

1586
01:10:58,160 --> 01:11:04,190
musical episodes you don't want to hear

1587
01:10:59,570 --> 01:11:05,960
<font color="#E5E5E5">us sing</font><font color="#CCCCCC"> alright so everyone here should</font>

1588
01:11:04,190 --> 01:11:07,490
remember the 1990s this is what

1589
01:11:05,960 --> 01:11:10,520
transport protocols looked like back

1590
01:11:07,490 --> 01:11:12,980
then<font color="#CCCCCC"> you had</font><font color="#E5E5E5"> transport headers for end</font>

1591
01:11:10,520 --> 01:11:14,450
operation it turns out<font color="#E5E5E5"> that we built a</font>

1592
01:11:12,980 --> 01:11:16,280
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> that also</font><font color="#E5E5E5"> used the</font>

1593
01:11:14,450 --> 01:11:17,990
transport headers<font color="#CCCCCC"> like</font><font color="#E5E5E5"> you know</font>

1594
01:11:16,280 --> 01:11:19,670
<font color="#CCCCCC">in-network</font><font color="#E5E5E5"> inspection</font><font color="#CCCCCC"> forwarding</font><font color="#E5E5E5"> I know</font>

1595
01:11:17,990 --> 01:11:22,130
that we didn't<font color="#E5E5E5"> like to say the word</font><font color="#CCCCCC"> NAT</font>

1596
01:11:19,670 --> 01:11:22,580
in the ietf in the 1990s but it happened

1597
01:11:22,130 --> 01:11:24,560
<font color="#E5E5E5">anyway</font>

1598
01:11:22,580 --> 01:11:27,410
<font color="#E5E5E5">you know filtering measure</font><font color="#CCCCCC"> oh there's</font>

1599
01:11:24,560 --> 01:11:30,020
not there's<font color="#E5E5E5"> a modification</font><font color="#CCCCCC"> you know</font>

1600
01:11:27,410 --> 01:11:32,120
various sorts of nasty<font color="#CCCCCC"> and acceleration</font>

1601
01:11:30,020 --> 01:11:34,010
things like delaying acts and<font color="#CCCCCC"> spoofing</font>

1602
01:11:32,120 --> 01:11:36,080
<font color="#E5E5E5">acts and doubling packets and doing</font>

1603
01:11:34,010 --> 01:11:38,090
<font color="#CCCCCC">other sets of medical</font><font color="#E5E5E5"> stuff and then</font>

1604
01:11:36,080 --> 01:11:39,950
because there was no crypto there was a

1605
01:11:38,090 --> 01:11:41,660
lot of<font color="#E5E5E5"> deep packet inspection and random</font>

1606
01:11:39,950 --> 01:11:45,800
payload modification and everyone was

1607
01:11:41,660 --> 01:11:47,900
sad<font color="#E5E5E5"> so then we invented security but we</font>

1608
01:11:45,800 --> 01:11:49,430
put what we<font color="#E5E5E5"> called transport layer</font>

1609
01:11:47,900 --> 01:11:51,259
security around the<font color="#CCCCCC"> application layer</font>

1610
01:11:49,430 --> 01:11:53,330
headers and payloads just to confuse

1611
01:11:51,260 --> 01:11:54,680
<font color="#E5E5E5">everyone</font><font color="#CCCCCC"> I still have the transport</font>

1612
01:11:53,330 --> 01:11:56,059
headers for<font color="#CCCCCC"> antenna operation you can</font>

1613
01:11:54,680 --> 01:11:58,580
still do<font color="#E5E5E5"> all that</font><font color="#CCCCCC"> wonderful in network</font>

1614
01:11:56,060 --> 01:12:01,420
inspection modification<font color="#E5E5E5"> on the transport</font>

1615
01:11:58,580 --> 01:12:03,590
headers but now you have to<font color="#E5E5E5"> do</font>

1616
01:12:01,420 --> 01:12:04,820
pre-shared keys or man-in-the-middle or

1617
01:12:03,590 --> 01:12:06,530
other things<font color="#E5E5E5"> that will get you yelled</font>

1618
01:12:04,820 --> 01:12:09,980
down<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tls working group in order to</font>

1619
01:12:06,530 --> 01:12:13,309
actually do deep packet inspection<font color="#E5E5E5"> this</font>

1620
01:12:09,980 --> 01:12:15,650
is where we are<font color="#CCCCCC"> today you know this is</font>

1621
01:12:13,310 --> 01:12:17,720
what an encrypted transport protocol

1622
01:12:15,650 --> 01:12:19,400
<font color="#E5E5E5">design looks like so quick</font><font color="#CCCCCC"> is an</font><font color="#E5E5E5"> example</font>

1623
01:12:17,720 --> 01:12:19,850
of this it's<font color="#CCCCCC"> like the example of this</font>

1624
01:12:19,400 --> 01:12:23,150
right<font color="#CCCCCC"> now</font>

1625
01:12:19,850 --> 01:12:24,940
but<font color="#E5E5E5"> it's a general pattern</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have kind</font>

1626
01:12:23,150 --> 01:12:28,009
of the function of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> transport headers</font>

1627
01:12:24,940 --> 01:12:29,540
is now<font color="#E5E5E5"> split between outer transport</font>

1628
01:12:28,010 --> 01:12:31,010
headers and inner transport headers

1629
01:12:29,540 --> 01:12:32,030
<font color="#CCCCCC">right like so in the outer transport</font>

1630
01:12:31,010 --> 01:12:33,590
headers in quick<font color="#CCCCCC"> are</font>

1631
01:12:32,030 --> 01:12:36,769
as little information as you can

1632
01:12:33,590 --> 01:12:38,120
<font color="#E5E5E5">possibly expose</font><font color="#CCCCCC"> we've spent a lot of</font>

1633
01:12:36,770 --> 01:12:41,090
time<font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> little that</font>

1634
01:12:38,120 --> 01:12:42,290
should be<font color="#E5E5E5"> and then the inter transport</font>

1635
01:12:41,090 --> 01:12:43,670
headers<font color="#E5E5E5"> are all of you know sort of the</font>

1636
01:12:42,290 --> 01:12:46,190
<font color="#E5E5E5">acknowledgement so on and so forth and</font>

1637
01:12:43,670 --> 01:12:47,990
those<font color="#E5E5E5"> are all encrypted so you get the</font>

1638
01:12:46,190 --> 01:12:50,179
end end operation on the inner transport

1639
01:12:47,990 --> 01:12:51,740
headers<font color="#CCCCCC"> you can do in network inspection</font>

1640
01:12:50,180 --> 01:12:54,080
on the outer transport headers but no

1641
01:12:51,740 --> 01:12:57,080
modification because<font color="#E5E5E5"> the transport layer</font>

1642
01:12:54,080 --> 01:12:58,550
<font color="#CCCCCC">security can also be used to</font><font color="#E5E5E5"> do Integra</font>

1643
01:12:57,080 --> 01:13:01,910
<font color="#E5E5E5">in DES and integrity protection</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those</font>

1644
01:12:58,550 --> 01:13:03,560
headers<font color="#E5E5E5"> this is the wire image right</font>

1645
01:13:01,910 --> 01:13:05,330
it's just<font color="#CCCCCC"> this blue box</font><font color="#E5E5E5"> everything</font>

1646
01:13:03,560 --> 01:13:07,970
inside<font color="#E5E5E5"> the blue box is static this</font><font color="#CCCCCC"> is</font>

1647
01:13:05,330 --> 01:13:09,500
<font color="#E5E5E5">this is all of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> stuff that we used</font>

1648
01:13:07,970 --> 01:13:13,730
to have in<font color="#E5E5E5"> the 90s this is the gripping</font>

1649
01:13:09,500 --> 01:13:15,680
surface<font color="#E5E5E5"> what's there</font><font color="#CCCCCC"> the obvious part</font><font color="#E5E5E5"> is</font>

1650
01:13:13,730 --> 01:13:17,030
like any<font color="#E5E5E5"> information that is carried in</font>

1651
01:13:15,680 --> 01:13:19,970
<font color="#CCCCCC">the unencrypted bits in the protocol</font>

1652
01:13:17,030 --> 01:13:21,440
headers there are a few<font color="#E5E5E5"> other</font><font color="#CCCCCC"> things</font>

1653
01:13:19,970 --> 01:13:23,180
here<font color="#CCCCCC"> right lakes are the length and the</font>

1654
01:13:21,440 --> 01:13:25,160
entropy of<font color="#E5E5E5"> all of the bits in the packet</font>

1655
01:13:23,180 --> 01:13:26,810
that<font color="#E5E5E5"> essentially provides an upper bound</font>

1656
01:13:25,160 --> 01:13:29,120
<font color="#E5E5E5">on information content</font><font color="#CCCCCC"> even for the</font>

1657
01:13:26,810 --> 01:13:31,400
encrypted<font color="#E5E5E5"> bits um it does not provide a</font>

1658
01:13:29,120 --> 01:13:33,430
lower bound right so much of<font color="#E5E5E5"> sort of</font>

1659
01:13:31,400 --> 01:13:35,599
<font color="#E5E5E5">traffic analysis resistance goes into</font>

1660
01:13:33,430 --> 01:13:36,980
adding length and<font color="#E5E5E5"> entropy to all of the</font>

1661
01:13:35,600 --> 01:13:41,090
bits and<font color="#CCCCCC"> all of these packets so that</font>

1662
01:13:36,980 --> 01:13:43,429
the<font color="#E5E5E5"> upper bound is is um not</font><font color="#CCCCCC"> driven</font><font color="#E5E5E5"> by</font>

1663
01:13:41,090 --> 01:13:44,630
<font color="#CCCCCC">the traffic</font><font color="#E5E5E5"> dynamics it's driven by the</font>

1664
01:13:43,430 --> 01:13:47,240
dynamics that thing doing the

1665
01:13:44,630 --> 01:13:49,310
obfuscation<font color="#CCCCCC"> um you can also</font><font color="#E5E5E5"> do timing of</font>

1666
01:13:47,240 --> 01:13:50,630
packet and<font color="#E5E5E5"> observation so transmission</font>

1667
01:13:49,310 --> 01:13:51,860
arrival<font color="#E5E5E5"> and these things that gives you</font>

1668
01:13:50,630 --> 01:13:53,360
information<font color="#E5E5E5"> about what the sender is</font>

1669
01:13:51,860 --> 01:13:56,299
<font color="#E5E5E5">doing and you can maybe fingerprint the</font>

1670
01:13:53,360 --> 01:13:57,950
center based on that<font color="#E5E5E5"> why am I going</font>

1671
01:13:56,300 --> 01:14:01,700
through<font color="#E5E5E5"> all of this review why does this</font>

1672
01:13:57,950 --> 01:14:04,490
matter<font color="#CCCCCC"> um</font><font color="#E5E5E5"> we are used</font><font color="#CCCCCC"> to how the</font>

1673
01:14:01,700 --> 01:14:08,030
protocol operates being what you<font color="#E5E5E5"> see on</font>

1674
01:14:04,490 --> 01:14:12,080
the wire and when you have a wire image

1675
01:14:08,030 --> 01:14:13,849
that you can design<font color="#E5E5E5"> explicitly the</font>

1676
01:14:12,080 --> 01:14:15,260
protocols and<font color="#CCCCCC"> end operation is separate</font>

1677
01:14:13,850 --> 01:14:16,970
from<font color="#E5E5E5"> its</font><font color="#CCCCCC"> appearance</font><font color="#E5E5E5"> on the wire and it's</font>

1678
01:14:15,260 --> 01:14:18,830
separate from<font color="#E5E5E5"> how the intermediate</font>

1679
01:14:16,970 --> 01:14:20,570
<font color="#CCCCCC">devices interact</font><font color="#E5E5E5"> with it and this is new</font>

1680
01:14:18,830 --> 01:14:23,600
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> so Ted said this at a plenary</font>

1681
01:14:20,570 --> 01:14:25,759
at one point and I was like this is new

1682
01:14:23,600 --> 01:14:28,130
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> different this is novel</font><font color="#CCCCCC"> you've</font>

1683
01:14:25,760 --> 01:14:32,570
got to go in the other direction<font color="#CCCCCC"> cuz I</font>

1684
01:14:28,130 --> 01:14:34,070
want to go back to timing so<font color="#E5E5E5"> I will</font>

1685
01:14:32,570 --> 01:14:36,620
point out<font color="#CCCCCC"> that</font><font color="#E5E5E5"> timing a packet</font>

1686
01:14:34,070 --> 01:14:38,630
observation may not depend solely on<font color="#E5E5E5"> the</font>

1687
01:14:36,620 --> 01:14:40,309
protocol<font color="#CCCCCC"> but may depend on something</font>

1688
01:14:38,630 --> 01:14:41,960
<font color="#E5E5E5">else derived from the sender's behavior</font>

1689
01:14:40,310 --> 01:14:43,580
you may have seen<font color="#CCCCCC"> that there was a study</font>

1690
01:14:41,960 --> 01:14:45,740
<font color="#CCCCCC">a while back where somebody was</font><font color="#E5E5E5"> able to</font>

1691
01:14:43,580 --> 01:14:47,720
<font color="#CCCCCC">demonstrate that</font><font color="#E5E5E5"> they could determine</font>

1692
01:14:45,740 --> 01:14:54,380
what somebody<font color="#E5E5E5"> was looking at from</font><font color="#CCCCCC"> the</font>

1693
01:14:47,720 --> 01:14:56,780
Netflix<font color="#E5E5E5"> of a select number of Netflix</font>

1694
01:14:54,380 --> 01:14:59,300
<font color="#E5E5E5">series or movies because there was a</font>

1695
01:14:56,780 --> 01:15:03,380
characteristic packet<font color="#E5E5E5"> inter arrival time</font>

1696
01:14:59,300 --> 01:15:07,670
and<font color="#E5E5E5"> packets</font><font color="#CCCCCC"> size so it isn't just the</font>

1697
01:15:03,380 --> 01:15:10,460
packet<font color="#CCCCCC"> where image from a protocol</font>

1698
01:15:07,670 --> 01:15:12,850
perspective that<font color="#E5E5E5"> has to be examined here</font>

1699
01:15:10,460 --> 01:15:16,850
<font color="#E5E5E5">but really some of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> wire image is</font>

1700
01:15:12,850 --> 01:15:18,410
derived from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> senders behavior or the</font>

1701
01:15:16,850 --> 01:15:20,510
recipients behavior<font color="#E5E5E5"> an</font><font color="#CCCCCC"> acknowledgment</font>

1702
01:15:18,410 --> 01:15:22,930
<font color="#E5E5E5">that's still visible on the wire and</font>

1703
01:15:20,510 --> 01:15:27,140
<font color="#E5E5E5">that</font><font color="#CCCCCC"> turns out to be important because</font>

1704
01:15:22,930 --> 01:15:30,920
of<font color="#E5E5E5"> path signals</font><font color="#CCCCCC"> we talked about this at</font>

1705
01:15:27,140 --> 01:15:33,380
<font color="#E5E5E5">a</font><font color="#CCCCCC"> ball field shall not be named but</font><font color="#E5E5E5"> in</font>

1706
01:15:30,920 --> 01:15:35,630
essence when transports used to transmit

1707
01:15:33,380 --> 01:15:37,640
clear text data on path devices read it

1708
01:15:35,630 --> 01:15:39,560
<font color="#E5E5E5">and</font><font color="#CCCCCC"> use it to</font><font color="#E5E5E5"> create state manage</font>

1709
01:15:37,640 --> 01:15:41,900
resources<font color="#E5E5E5"> and in for permission that is</font>

1710
01:15:39,560 --> 01:15:43,810
we had<font color="#CCCCCC"> Nats we had firewalls and a whole</font>

1711
01:15:41,900 --> 01:15:46,040
<font color="#CCCCCC">bunch of</font><font color="#E5E5E5"> there and if</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> cousins</font>

1712
01:15:43,810 --> 01:15:50,110
<font color="#E5E5E5">consumed the metadata as if it was</font>

1713
01:15:46,040 --> 01:15:52,370
intended<font color="#E5E5E5"> to a signal to them so what are</font>

1714
01:15:50,110 --> 01:15:54,980
explicit path signals

1715
01:15:52,370 --> 01:15:56,830
so when transports use encryption<font color="#E5E5E5"> for</font>

1716
01:15:54,980 --> 01:15:58,490
metadata<font color="#E5E5E5"> like packet numbers those</font>

1717
01:15:56,830 --> 01:16:00,830
<font color="#E5E5E5">inferences fail</font>

1718
01:15:58,490 --> 01:16:03,410
Nats firewalls and<font color="#E5E5E5"> their</font><font color="#CCCCCC"> kins fall back</font>

1719
01:16:00,830 --> 01:16:05,690
to default parameters or and this<font color="#E5E5E5"> is</font>

1720
01:16:03,410 --> 01:16:07,910
where it gets even<font color="#CCCCCC"> worse</font><font color="#E5E5E5"> they start to</font>

1721
01:16:05,690 --> 01:16:09,950
<font color="#CCCCCC">use the other characteristics</font><font color="#E5E5E5"> of the</font>

1722
01:16:07,910 --> 01:16:12,710
wire image like packet<font color="#CCCCCC"> inter arrival</font>

1723
01:16:09,950 --> 01:16:15,860
<font color="#E5E5E5">time</font><font color="#CCCCCC"> which may actually be content</font><font color="#E5E5E5"> or</font>

1724
01:16:12,710 --> 01:16:18,380
sender behavior specific and<font color="#E5E5E5"> that has</font>

1725
01:16:15,860 --> 01:16:20,089
some scary consequences<font color="#E5E5E5"> because if I'm</font>

1726
01:16:18,380 --> 01:16:22,460
willing<font color="#E5E5E5"> to give you one set of content</font>

1727
01:16:20,090 --> 01:16:24,140
<font color="#E5E5E5">fast but because I can tell</font><font color="#CCCCCC"> that you're</font>

1728
01:16:22,460 --> 01:16:25,880
looking at a<font color="#E5E5E5"> different set of content</font>

1729
01:16:24,140 --> 01:16:27,920
based on packet<font color="#E5E5E5"> inter arrival time I</font>

1730
01:16:25,880 --> 01:16:30,320
give that to<font color="#CCCCCC"> you slow and paste it out</font>

1731
01:16:27,920 --> 01:16:32,240
differently there are some<font color="#E5E5E5"> interesting</font>

1732
01:16:30,320 --> 01:16:35,179
policy issues around<font color="#E5E5E5"> that we don't want</font>

1733
01:16:32,240 --> 01:16:36,950
to go to what we'd rather see then

1734
01:16:35,180 --> 01:16:38,660
<font color="#E5E5E5">people go out</font><font color="#CCCCCC"> and build very expensive</font>

1735
01:16:36,950 --> 01:16:40,160
inferences boxes that<font color="#E5E5E5"> are based on</font>

1736
01:16:38,660 --> 01:16:43,190
<font color="#E5E5E5">things that we don't really</font><font color="#CCCCCC"> want them to</font>

1737
01:16:40,160 --> 01:16:45,139
infer from is<font color="#E5E5E5"> that we switch to explicit</font>

1738
01:16:43,190 --> 01:16:48,290
<font color="#CCCCCC">pass signals</font><font color="#E5E5E5"> where we send data that you</font>

1739
01:16:45,140 --> 01:16:50,750
intend for<font color="#E5E5E5"> the path to consume now where</font>

1740
01:16:48,290 --> 01:16:52,910
does<font color="#CCCCCC"> that signal go in the information</font>

1741
01:16:50,750 --> 01:16:54,620
to the path<font color="#E5E5E5"> well you could use internet</font>

1742
01:16:52,910 --> 01:16:56,360
layer facilities to send the signals you

1743
01:16:54,620 --> 01:16:58,820
<font color="#CCCCCC">could send these signals onto</font><font color="#E5E5E5"> each</font>

1744
01:16:56,360 --> 01:17:02,059
transport<font color="#E5E5E5"> or you could do</font><font color="#CCCCCC"> nothing</font>

1745
01:16:58,820 --> 01:17:08,150
<font color="#E5E5E5">wait</font><font color="#CCCCCC"> given where we</font><font color="#E5E5E5"> are you may know</font>

1746
01:17:02,060 --> 01:17:11,600
what our intention is hint not<font color="#E5E5E5"> internet</font>

1747
01:17:08,150 --> 01:17:13,250
area facility<font color="#CCCCCC"> okay so the example</font><font color="#E5E5E5"> we</font>

1748
01:17:11,600 --> 01:17:15,800
talked about quick before is the<font color="#E5E5E5"> example</font>

1749
01:17:13,250 --> 01:17:19,190
of an encrypted right image<font color="#CCCCCC"> the latency</font>

1750
01:17:15,800 --> 01:17:22,340
spin bit is a quick example<font color="#CCCCCC"> of an</font>

1751
01:17:19,190 --> 01:17:24,980
experimental<font color="#E5E5E5"> piece of explicit signaling</font>

1752
01:17:22,340 --> 01:17:27,080
the<font color="#E5E5E5"> bit is set by the client and echoed</font>

1753
01:17:24,980 --> 01:17:29,509
by the server the client changes<font color="#E5E5E5"> the bit</font>

1754
01:17:27,080 --> 01:17:32,210
once per a round-trip time and<font color="#E5E5E5"> integrity</font>

1755
01:17:29,510 --> 01:17:34,730
is protected by each side this<font color="#E5E5E5"> exposes</font>

1756
01:17:32,210 --> 01:17:38,210
the round-trip time to on path observers

1757
01:17:34,730 --> 01:17:41,360
without<font color="#E5E5E5"> exposing session state when the</font>

1758
01:17:38,210 --> 01:17:44,090
client chooses<font color="#E5E5E5"> to that's what makes it</font>

1759
01:17:41,360 --> 01:17:46,339
explicit<font color="#CCCCCC"> it isn't a default in the</font>

1760
01:17:44,090 --> 01:17:48,500
protocol<font color="#CCCCCC"> that this is always</font><font color="#E5E5E5"> done but</font>

1761
01:17:46,340 --> 01:17:50,360
the client chooses<font color="#E5E5E5"> whether to start</font>

1762
01:17:48,500 --> 01:17:52,720
sending<font color="#CCCCCC"> the spin bit and the server</font>

1763
01:17:50,360 --> 01:17:56,299
chooses whether or not to echo it back

1764
01:17:52,720 --> 01:17:58,190
so there is unfortunately<font color="#E5E5E5"> not linked to</font>

1765
01:17:56,300 --> 01:17:59,600
<font color="#E5E5E5">here but some work that was recently</font>

1766
01:17:58,190 --> 01:18:01,610
shared over<font color="#E5E5E5"> in the quick working group</font>

1767
01:17:59,600 --> 01:18:04,250
on some tests<font color="#E5E5E5"> would show that</font><font color="#CCCCCC"> this is</font>

1768
01:18:01,610 --> 01:18:07,009
relatively effective<font color="#E5E5E5"> except in the case</font>

1769
01:18:04,250 --> 01:18:08,540
of<font color="#CCCCCC"> pretty extreme reordering</font><font color="#E5E5E5"> and even in</font>

1770
01:18:07,010 --> 01:18:10,730
the case<font color="#CCCCCC"> of pretty extreme reordering</font>

1771
01:18:08,540 --> 01:18:14,120
<font color="#E5E5E5">there are some heuristics</font><font color="#CCCCCC"> that you can</font>

1772
01:18:10,730 --> 01:18:16,879
use to to determine<font color="#E5E5E5"> that the the cause</font>

1773
01:18:14,120 --> 01:18:18,830
of the the<font color="#E5E5E5"> failure is reordering rather</font>

1774
01:18:16,880 --> 01:18:21,350
than a failure<font color="#CCCCCC"> of the spin bit itself I</font>

1775
01:18:18,830 --> 01:18:25,010
direct you<font color="#CCCCCC"> over to the</font><font color="#E5E5E5"> quick working</font>

1776
01:18:21,350 --> 01:18:26,710
group I think Oh<font color="#CCCCCC"> Marcus oh sorry I</font>

1777
01:18:25,010 --> 01:18:29,180
didn't see<font color="#E5E5E5"> you</font>

1778
01:18:26,710 --> 01:18:30,350
<font color="#E5E5E5">Marcus guest-starring on today's image</font>

1779
01:18:29,180 --> 01:18:32,330
with the<font color="#CCCCCC"> family guy</font>

1780
01:18:30,350 --> 01:18:33,560
so this<font color="#E5E5E5"> exposes the round-trip time to</font>

1781
01:18:32,330 --> 01:18:37,790
own<font color="#E5E5E5"> path observers without exposing</font>

1782
01:18:33,560 --> 01:18:40,370
<font color="#E5E5E5">session state note every single bit has</font>

1783
01:18:37,790 --> 01:18:42,680
<font color="#CCCCCC">to be designed and considered this</font><font color="#E5E5E5"> is</font>

1784
01:18:40,370 --> 01:18:45,080
explicitly added to the protocol by the

1785
01:18:42,680 --> 01:18:47,420
designers of<font color="#E5E5E5"> the protocol and</font><font color="#CCCCCC"> the use of</font>

1786
01:18:45,080 --> 01:18:49,220
it has to<font color="#E5E5E5"> be explicitly considered when</font>

1787
01:18:47,420 --> 01:18:51,800
you're using<font color="#E5E5E5"> the protocol there's no</font>

1788
01:18:49,220 --> 01:18:53,960
default for what signals to send<font color="#E5E5E5"> it</font>

1789
01:18:51,800 --> 01:18:56,240
needs to be determined<font color="#CCCCCC"> per transport</font><font color="#E5E5E5"> and</font>

1790
01:18:53,960 --> 01:18:58,520
so the use cases of specific transports

1791
01:18:56,240 --> 01:19:00,440
may never use<font color="#E5E5E5"> this if you're inside a</font>

1792
01:18:58,520 --> 01:19:02,150
data center<font color="#E5E5E5"> and you're using quick and</font>

1793
01:19:00,440 --> 01:19:04,549
you turn<font color="#CCCCCC"> on the latency spin bit</font>

1794
01:19:02,150 --> 01:19:06,920
everything is going<font color="#E5E5E5"> to be so quick it's</font>

1795
01:19:04,550 --> 01:19:09,410
not going to<font color="#E5E5E5"> change</font><font color="#CCCCCC"> your behavior note</font>

1796
01:19:06,920 --> 01:19:11,630
the extra<font color="#CCCCCC"> K on the last quick</font>

1797
01:19:09,410 --> 01:19:13,400
and it needs to<font color="#CCCCCC"> be optional if a client</font>

1798
01:19:11,630 --> 01:19:14,990
or server don't want to send that<font color="#CCCCCC"> signal</font>

1799
01:19:13,400 --> 01:19:17,269
it can't be needed for session<font color="#CCCCCC"> state</font>

1800
01:19:14,990 --> 01:19:19,070
<font color="#E5E5E5">remember the whole point of this is this</font>

1801
01:19:17,270 --> 01:19:27,110
is<font color="#E5E5E5"> going in the outer part that that</font>

1802
01:19:19,070 --> 01:19:29,240
<font color="#CCCCCC">blue bit here</font><font color="#E5E5E5"> so that it can't affect</font>

1803
01:19:27,110 --> 01:19:31,460
<font color="#CCCCCC">the actual</font><font color="#E5E5E5"> functioning of the transport</font>

1804
01:19:29,240 --> 01:19:33,260
headers as seen from<font color="#E5E5E5"> the internal it has</font>

1805
01:19:31,460 --> 01:19:39,710
to be purely<font color="#E5E5E5"> optional for this to work</font>

1806
01:19:33,260 --> 01:19:42,110
<font color="#CCCCCC">so there</font><font color="#E5E5E5"> are two</font><font color="#CCCCCC"> IAB drafts on this</font>

1807
01:19:39,710 --> 01:19:45,020
topic draft IV<font color="#CCCCCC"> pass</font><font color="#E5E5E5"> signals and they</font>

1808
01:19:42,110 --> 01:19:47,210
soon to be renamed<font color="#E5E5E5"> draft IAB Tremmel and</font>

1809
01:19:45,020 --> 01:19:49,490
<font color="#E5E5E5">slash wire image currently</font><font color="#CCCCCC"> tremolo soon</font>

1810
01:19:47,210 --> 01:19:51,740
<font color="#CCCCCC">to be</font><font color="#E5E5E5"> draft by EB</font><font color="#CCCCCC"> we were looking for</font>

1811
01:19:49,490 --> 01:19:59,420
comments<font color="#CCCCCC"> on</font><font color="#E5E5E5"> both of those drafts or at</font>

1812
01:19:51,740 --> 01:20:00,650
the mic line<font color="#E5E5E5"> today do we have a specific</font>

1813
01:19:59,420 --> 01:20:03,680
<font color="#CCCCCC">meeting do you want to send these</font>

1814
01:20:00,650 --> 01:20:07,969
comments<font color="#E5E5E5"> to architecture discuss or</font>

1815
01:20:03,680 --> 01:20:10,040
stack<font color="#CCCCCC"> EVO at IAB org</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> sorry-sorry</font>

1816
01:20:07,970 --> 01:20:15,440
stack<font color="#E5E5E5"> evo discuss that</font><font color="#CCCCCC"> IB dot org would</font>

1817
01:20:10,040 --> 01:20:24,350
also be<font color="#CCCCCC"> fun yes they have already put</font>

1818
01:20:15,440 --> 01:20:26,389
<font color="#CCCCCC">the cookies</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> Ron even just to note</font>

1819
01:20:24,350 --> 01:20:28,960
that one<font color="#CCCCCC"> of the issue</font><font color="#E5E5E5"> about doing</font><font color="#CCCCCC"> this</font>

1820
01:20:26,390 --> 01:20:31,820
explicit is<font color="#CCCCCC"> to verify</font><font color="#E5E5E5"> that there are no</font>

1821
01:20:28,960 --> 01:20:33,470
<font color="#CCCCCC">security or privacy</font><font color="#E5E5E5"> issue related</font><font color="#CCCCCC"> to</font>

1822
01:20:31,820 --> 01:20:35,450
that and<font color="#E5E5E5"> that's important part of this</font>

1823
01:20:33,470 --> 01:20:37,430
explicit signal<font color="#E5E5E5"> yeah that</font><font color="#CCCCCC"> actually</font>

1824
01:20:35,450 --> 01:20:39,019
<font color="#E5E5E5">should be a third point on the future</font>

1825
01:20:37,430 --> 01:20:42,970
<font color="#E5E5E5">version</font><font color="#CCCCCC"> of this slide is you</font><font color="#E5E5E5"> actually</font>

1826
01:20:39,020 --> 01:20:46,220
<font color="#E5E5E5">have to</font><font color="#CCCCCC"> think not only about how the</font>

1827
01:20:42,970 --> 01:20:47,450
signal is to be used but how it could be

1828
01:20:46,220 --> 01:20:48,620
misused right because you're basically

1829
01:20:47,450 --> 01:20:49,849
<font color="#CCCCCC">you're putting you're putting</font>

1830
01:20:48,620 --> 01:20:55,280
information out<font color="#E5E5E5"> there the nice thing is</font>

1831
01:20:49,850 --> 01:20:59,750
<font color="#CCCCCC">because of this</font><font color="#E5E5E5"> separation here you're</font>

1832
01:20:55,280 --> 01:21:01,550
not forced<font color="#E5E5E5"> to leak</font><font color="#CCCCCC"> inner information out</font>

1833
01:20:59,750 --> 01:21:03,230
<font color="#CCCCCC">to the path</font><font color="#E5E5E5"> however if you're not</font>

1834
01:21:01,550 --> 01:21:06,740
<font color="#E5E5E5">careful about what you put out here it</font>

1835
01:21:03,230 --> 01:21:08,660
might<font color="#E5E5E5"> be</font><font color="#CCCCCC"> just as bad</font><font color="#E5E5E5"> right so in the</font>

1836
01:21:06,740 --> 01:21:10,160
case<font color="#E5E5E5"> of the round trip time</font><font color="#CCCCCC"> discussion</font>

1837
01:21:08,660 --> 01:21:11,690
for example<font color="#CCCCCC"> we actually had a design</font>

1838
01:21:10,160 --> 01:21:13,700
team<font color="#CCCCCC"> and quick that</font><font color="#E5E5E5"> went off and looked</font>

1839
01:21:11,690 --> 01:21:15,769
at what what could possibly be leaked by

1840
01:21:13,700 --> 01:21:18,500
a spin<font color="#E5E5E5"> bit and spent a good bit of time</font>

1841
01:21:15,770 --> 01:21:20,480
<font color="#CCCCCC">most of it Brian's trying to work out</font>

1842
01:21:18,500 --> 01:21:21,920
whether it could leak<font color="#E5E5E5"> geolocation</font>

1843
01:21:20,480 --> 01:21:25,250
information

1844
01:21:21,920 --> 01:21:27,530
and determined that<font color="#E5E5E5"> the the fidelity of</font>

1845
01:21:25,250 --> 01:21:30,890
the<font color="#E5E5E5"> geolocation</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> could</font>

1846
01:21:27,530 --> 01:21:32,840
potentially<font color="#E5E5E5"> leak was so poor compared to</font>

1847
01:21:30,890 --> 01:21:35,330
<font color="#E5E5E5">geolocation information you could get in</font>

1848
01:21:32,840 --> 01:21:37,190
many other<font color="#CCCCCC"> ways</font><font color="#E5E5E5"> that it was not an</font>

1849
01:21:35,330 --> 01:21:38,990
effective leak<font color="#CCCCCC"> you know one of</font><font color="#E5E5E5"> the</font>

1850
01:21:37,190 --> 01:21:40,519
difficult things<font color="#CCCCCC"> about any leakage is</font>

1851
01:21:38,990 --> 01:21:42,019
there's always the possibility somebody

1852
01:21:40,520 --> 01:21:46,940
will be<font color="#E5E5E5"> able to put something together</font>

1853
01:21:42,020 --> 01:21:48,800
with other data and make make no

1854
01:21:46,940 --> 01:21:50,059
<font color="#E5E5E5">inferences that you weren't expecting if</font>

1855
01:21:48,800 --> 01:21:51,560
they're<font color="#E5E5E5"> still in the mode of</font><font color="#CCCCCC"> making</font>

1856
01:21:50,060 --> 01:21:54,800
inferences which is one<font color="#E5E5E5"> of the reasons</font>

1857
01:21:51,560 --> 01:21:56,180
the use of it has to<font color="#E5E5E5"> be optional</font><font color="#CCCCCC"> if in</font>

1858
01:21:54,800 --> 01:21:58,250
the future<font color="#CCCCCC"> somebody discovered some</font>

1859
01:21:56,180 --> 01:22:00,910
fingerprinting aspect of it<font color="#CCCCCC"> that we were</font>

1860
01:21:58,250 --> 01:22:03,350
not aware<font color="#CCCCCC"> of</font><font color="#E5E5E5"> when we ran the design team</font>

1861
01:22:00,910 --> 01:22:05,900
<font color="#CCCCCC">devices could not send could decide not</font>

1862
01:22:03,350 --> 01:22:08,480
<font color="#CCCCCC">to set it and the result would still be</font>

1863
01:22:05,900 --> 01:22:13,150
correct<font color="#E5E5E5"> protocol in operation from the</font>

1864
01:22:08,480 --> 01:22:16,219
<font color="#E5E5E5">point of view</font><font color="#CCCCCC"> of the endpoints then I</font>

1865
01:22:13,150 --> 01:22:18,769
really<font color="#E5E5E5"> like</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> fact that we're taking</font>

1866
01:22:16,220 --> 01:22:23,750
<font color="#E5E5E5">this pin bit as an example for</font><font color="#CCCCCC"> the</font>

1867
01:22:18,770 --> 01:22:25,430
explicit<font color="#CCCCCC"> signaling and and and I</font><font color="#E5E5E5"> really</font>

1868
01:22:23,750 --> 01:22:29,840
hope<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> can accelerate</font><font color="#E5E5E5"> for other</font>

1869
01:22:25,430 --> 01:22:32,630
bits<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> future my only concern is</font>

1870
01:22:29,840 --> 01:22:36,100
that<font color="#E5E5E5"> if we start doing one bit per use</font>

1871
01:22:32,630 --> 01:22:39,560
case we can end up<font color="#CCCCCC"> with pretty</font>

1872
01:22:36,100 --> 01:22:43,670
fragmented frameworks<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't want to</font>

1873
01:22:39,560 --> 01:22:46,600
rush the design to something that

1874
01:22:43,670 --> 01:22:49,640
<font color="#CCCCCC">potentially we</font><font color="#E5E5E5"> can we can think of more</font>

1875
01:22:46,600 --> 01:22:54,230
extensible framework that doesn't need

1876
01:22:49,640 --> 01:22:55,790
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> you know one use case</font><font color="#CCCCCC"> per</font><font color="#E5E5E5"> bird so</font>

1877
01:22:54,230 --> 01:22:57,320
it turns out<font color="#E5E5E5"> that one bit</font><font color="#CCCCCC"> per use case</font>

1878
01:22:55,790 --> 01:22:58,940
is actually<font color="#E5E5E5"> difficult because when</font>

1879
01:22:57,320 --> 01:23:01,490
you're talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> doing the analysis</font>

1880
01:22:58,940 --> 01:23:02,480
to<font color="#E5E5E5"> figure out what yeah so basically</font>

1881
01:23:01,490 --> 01:23:04,040
when you're when you're<font color="#CCCCCC"> doing this</font>

1882
01:23:02,480 --> 01:23:05,660
you're explicitly taking stuff that

1883
01:23:04,040 --> 01:23:07,160
could<font color="#E5E5E5"> be down here</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you're moving</font><font color="#CCCCCC"> it</font>

1884
01:23:05,660 --> 01:23:08,690
up here into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> obvious part</font><font color="#E5E5E5"> right</font>

1885
01:23:07,160 --> 01:23:11,930
which<font color="#E5E5E5"> means the information is more</font>

1886
01:23:08,690 --> 01:23:14,509
<font color="#CCCCCC">accessible and when you're when you're</font>

1887
01:23:11,930 --> 01:23:16,550
<font color="#E5E5E5">looking at how that information is</font>

1888
01:23:14,510 --> 01:23:17,840
exposed in the wire image explicitly you

1889
01:23:16,550 --> 01:23:19,400
<font color="#CCCCCC">also have to consider</font><font color="#E5E5E5"> how it interacts</font>

1890
01:23:17,840 --> 01:23:21,470
<font color="#CCCCCC">with</font><font color="#E5E5E5"> other information</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is exposed</font>

1891
01:23:19,400 --> 01:23:24,049
explicitly<font color="#E5E5E5"> in the wire image right so so</font>

1892
01:23:21,470 --> 01:23:25,640
this spin bit like the amount<font color="#CCCCCC"> of effort</font>

1893
01:23:24,050 --> 01:23:26,930
<font color="#E5E5E5">that we went to on the spin bit that's</font>

1894
01:23:25,640 --> 01:23:28,460
been bit looking at<font color="#E5E5E5"> that was easy</font>

1895
01:23:26,930 --> 01:23:29,240
because<font color="#E5E5E5"> there were no other explicit</font>

1896
01:23:28,460 --> 01:23:31,520
bits that we had to<font color="#E5E5E5"> consider</font>

1897
01:23:29,240 --> 01:23:33,139
interactions with right so when you

1898
01:23:31,520 --> 01:23:36,010
throw the larger the<font color="#CCCCCC"> surface that</font><font color="#E5E5E5"> you're</font>

1899
01:23:33,140 --> 01:23:40,040
adding<font color="#E5E5E5"> the more sort of degrees of free</font>

1900
01:23:36,010 --> 01:23:43,040
I just feel<font color="#E5E5E5"> like we can do the analysis</font>

1901
01:23:40,040 --> 01:23:45,889
on<font color="#CCCCCC"> a1 one by</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> the security</font><font color="#E5E5E5"> and the</font>

1902
01:23:43,040 --> 01:23:48,980
<font color="#E5E5E5">privacy analysis but at some</font><font color="#CCCCCC"> point we</font>

1903
01:23:45,889 --> 01:23:51,829
can<font color="#E5E5E5"> we can figure out a better way to to</font>

1904
01:23:48,980 --> 01:24:00,169
put it into a common framework<font color="#E5E5E5"> that's</font>

1905
01:23:51,829 --> 01:24:01,579
that's all my<font color="#E5E5E5"> name is Tim</font><font color="#CCCCCC"> Sheppard and</font><font color="#E5E5E5"> I</font>

1906
01:24:00,170 --> 01:24:05,090
<font color="#E5E5E5">listen</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> some of the discussion about</font>

1907
01:24:01,579 --> 01:24:06,349
<font color="#E5E5E5">the spin</font><font color="#CCCCCC"> bed at the London</font><font color="#E5E5E5"> IETF both in</font>

1908
01:24:05,090 --> 01:24:07,340
the quick working group and in<font color="#E5E5E5"> the</font>

1909
01:24:06,349 --> 01:24:11,090
hallway afterwards

1910
01:24:07,340 --> 01:24:12,500
<font color="#CCCCCC">and I what I hadn't thought of had</font>

1911
01:24:11,090 --> 01:24:15,290
learned about there was that people had

1912
01:24:12,500 --> 01:24:16,940
privacy<font color="#E5E5E5"> concerns about the existence of</font>

1913
01:24:15,290 --> 01:24:23,030
this<font color="#E5E5E5"> been bit because it reveals</font><font color="#CCCCCC"> the</font>

1914
01:24:16,940 --> 01:24:24,949
<font color="#CCCCCC">round trip time</font><font color="#E5E5E5"> to be passive observers</font>

1915
01:24:23,030 --> 01:24:26,630
of the traffic on<font color="#E5E5E5"> the net can the can</font>

1916
01:24:24,949 --> 01:24:28,250
discover the<font color="#CCCCCC"> round trip time of a user</font>

1917
01:24:26,630 --> 01:24:31,099
more easily<font color="#CCCCCC"> I guess they could probably</font>

1918
01:24:28,250 --> 01:24:32,540
do<font color="#E5E5E5"> it anyway</font><font color="#CCCCCC"> but what I just realized</font>

1919
01:24:31,099 --> 01:24:34,400
sitting here and you<font color="#E5E5E5"> must have thought</font>

1920
01:24:32,540 --> 01:24:37,040
<font color="#E5E5E5">of this already is</font><font color="#CCCCCC"> that this design</font>

1921
01:24:34,400 --> 01:24:38,989
leaves open the possibility for<font color="#CCCCCC"> a client</font>

1922
01:24:37,040 --> 01:24:40,639
to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> deceptive in its setting of the</font>

1923
01:24:38,989 --> 01:24:42,348
spend vet to<font color="#E5E5E5"> make it appear that you</font>

1924
01:24:40,639 --> 01:24:43,730
<font color="#CCCCCC">have a</font><font color="#E5E5E5"> longer</font><font color="#CCCCCC"> or shorter round-trip time</font>

1925
01:24:42,349 --> 01:24:45,260
you could set<font color="#E5E5E5"> it every half round-trip</font>

1926
01:24:43,730 --> 01:24:47,598
<font color="#E5E5E5">timer a third round trip time for every</font>

1927
01:24:45,260 --> 01:24:49,719
two round-trip times if for some reason

1928
01:24:47,599 --> 01:24:53,329
you thought that<font color="#E5E5E5"> was useful</font><font color="#CCCCCC"> I don't know</font>

1929
01:24:49,719 --> 01:24:55,159
if we should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> concerned or happy so</font>

1930
01:24:53,329 --> 01:24:57,139
there's so like in you know<font color="#E5E5E5"> and we did</font>

1931
01:24:55,159 --> 01:24:58,909
<font color="#E5E5E5">that work and there's a bunch of there's</font>

1932
01:24:57,139 --> 01:25:01,040
<font color="#E5E5E5">some</font><font color="#CCCCCC"> text in the drafts</font><font color="#E5E5E5"> about okay about</font>

1933
01:24:58,909 --> 01:25:01,940
<font color="#E5E5E5">sort of the model and I won't really go</font>

1934
01:25:01,040 --> 01:25:03,800
into<font color="#E5E5E5"> it</font><font color="#CCCCCC"> here because</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> don't really</font>

1935
01:25:01,940 --> 01:25:06,230
<font color="#CCCCCC">want to</font><font color="#E5E5E5"> talk about the spin bit we do</font>

1936
01:25:03,800 --> 01:25:08,210
want to talk<font color="#E5E5E5"> about is sort of the</font>

1937
01:25:06,230 --> 01:25:10,790
<font color="#E5E5E5">general principle there</font><font color="#CCCCCC"> is that yes so</font>

1938
01:25:08,210 --> 01:25:15,250
when you when you separate the

1939
01:25:10,790 --> 01:25:18,139
information here<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> operation here</font>

1940
01:25:15,250 --> 01:25:19,699
<font color="#CCCCCC">you now have like you don't even have to</font>

1941
01:25:18,139 --> 01:25:21,050
have an<font color="#E5E5E5"> encrypted side channel you have</font>

1942
01:25:19,699 --> 01:25:23,360
an<font color="#E5E5E5"> encrypted channel that everyone can</font>

1943
01:25:21,050 --> 01:25:26,860
see<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can coordinate</font><font color="#E5E5E5"> here to lie</font>

1944
01:25:23,360 --> 01:25:26,860
about<font color="#CCCCCC"> out there yeah that's</font><font color="#E5E5E5"> a general</font>

1945
01:25:31,869 --> 01:25:39,320
<font color="#CCCCCC">Ben Schwartz</font><font color="#E5E5E5"> so I want to ask about how</font>

1946
01:25:36,139 --> 01:25:41,840
you generally<font color="#CCCCCC"> think clients</font><font color="#E5E5E5"> will go</font>

1947
01:25:39,320 --> 01:25:44,558
about making the decision to use

1948
01:25:41,840 --> 01:25:47,270
optional explicit wire image features

1949
01:25:44,559 --> 01:25:49,040
<font color="#CCCCCC">those sort of</font><font color="#E5E5E5"> reasons they might choose</font>

1950
01:25:47,270 --> 01:25:51,970
to<font color="#CCCCCC"> enable those features</font>

1951
01:25:49,040 --> 01:25:57,220
and and any result in pressures or

1952
01:25:51,970 --> 01:25:59,540
ecosystem interactions so I think the

1953
01:25:57,220 --> 01:26:01,430
decision<font color="#CCCCCC"> by</font><font color="#E5E5E5"> the client will depend on</font>

1954
01:25:59,540 --> 01:26:02,480
what the bid is doing right<font color="#E5E5E5"> and so one</font>

1955
01:26:01,430 --> 01:26:05,210
of<font color="#E5E5E5"> the things I think you have to</font>

1956
01:26:02,480 --> 01:26:06,830
consider<font color="#CCCCCC"> is whether</font><font color="#E5E5E5"> a particular</font><font color="#CCCCCC"> bit</font>

1957
01:26:05,210 --> 01:26:09,440
that you're proposing<font color="#E5E5E5"> to send is</font>

1958
01:26:06,830 --> 01:26:13,580
explicit signal to the path<font color="#E5E5E5"> is valuable</font>

1959
01:26:09,440 --> 01:26:15,200
<font color="#E5E5E5">for</font><font color="#CCCCCC"> the client to expose or not and so</font>

1960
01:26:13,580 --> 01:26:16,970
one of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> questions</font><font color="#E5E5E5"> you might ask</font>

1961
01:26:15,200 --> 01:26:20,540
<font color="#CCCCCC">yourself for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> and setting a bit</font>

1962
01:26:16,970 --> 01:26:23,540
about round trip time is whether the the

1963
01:26:20,540 --> 01:26:25,400
<font color="#E5E5E5">client cares that the network on path</font>

1964
01:26:23,540 --> 01:26:27,080
observers know the round-trip time and

1965
01:26:25,400 --> 01:26:29,269
in this particular<font color="#E5E5E5"> case</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the</font>

1966
01:26:27,080 --> 01:26:31,550
reasons a client might care is it turns

1967
01:26:29,270 --> 01:26:34,400
out that that that is being<font color="#E5E5E5"> used in</font>

1968
01:26:31,550 --> 01:26:36,950
state maintenance<font color="#CCCCCC"> by</font><font color="#E5E5E5"> devices on</font><font color="#CCCCCC"> path</font>

1969
01:26:34,400 --> 01:26:39,559
which<font color="#E5E5E5"> are doing net for example so if</font>

1970
01:26:36,950 --> 01:26:42,200
you're running ipv4<font color="#CCCCCC"> you may want</font><font color="#E5E5E5"> to</font>

1971
01:26:39,560 --> 01:26:45,440
expose<font color="#E5E5E5"> round-trip time in order</font><font color="#CCCCCC"> that the</font>

1972
01:26:42,200 --> 01:26:48,920
state in that's not<font color="#E5E5E5"> aged rapidly without</font>

1973
01:26:45,440 --> 01:26:51,620
you having to<font color="#E5E5E5"> send heartbeat packets to</font>

1974
01:26:48,920 --> 01:26:53,270
keep the stat fresh so<font color="#CCCCCC"> um so there</font>

1975
01:26:51,620 --> 01:26:56,300
there's a variety<font color="#E5E5E5"> of reasons</font><font color="#CCCCCC"> you might</font>

1976
01:26:53,270 --> 01:26:58,100
actually design a client to enable

1977
01:26:56,300 --> 01:26:59,360
somebody<font color="#E5E5E5"> in the network to have access</font>

1978
01:26:58,100 --> 01:27:00,620
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the state but it's going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font>

1979
01:26:59,360 --> 01:27:03,170
<font color="#E5E5E5">different depending on what it is you're</font>

1980
01:27:00,620 --> 01:27:04,580
<font color="#E5E5E5">exposing and you may find that there are</font>

1981
01:27:03,170 --> 01:27:06,710
<font color="#E5E5E5">cases where you're like hey I'm running</font>

1982
01:27:04,580 --> 01:27:09,500
<font color="#E5E5E5">ipv6 there should be no net in the state</font>

1983
01:27:06,710 --> 01:27:11,510
between<font color="#CCCCCC"> me and and the rest of the world</font>

1984
01:27:09,500 --> 01:27:12,980
so that<font color="#E5E5E5"> reason doesn't exist</font><font color="#CCCCCC"> so you</font>

1985
01:27:11,510 --> 01:27:15,740
might set<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and won't address family</font>

1986
01:27:12,980 --> 01:27:17,389
<font color="#E5E5E5">and not in another</font><font color="#CCCCCC"> again the whole</font>

1987
01:27:15,740 --> 01:27:20,090
design here is<font color="#E5E5E5"> that with any of these</font>

1988
01:27:17,390 --> 01:27:23,150
explicit<font color="#CCCCCC"> past signals the client has</font><font color="#E5E5E5"> to</font>

1989
01:27:20,090 --> 01:27:25,400
make the decision<font color="#CCCCCC"> to set it</font><font color="#E5E5E5"> and it can't</font>

1990
01:27:23,150 --> 01:27:27,230
affect<font color="#E5E5E5"> the the</font><font color="#CCCCCC"> correct operation of the</font>

1991
01:27:25,400 --> 01:27:31,759
protocol from<font color="#E5E5E5"> the in systems</font><font color="#CCCCCC"> perspective</font>

1992
01:27:27,230 --> 01:27:34,700
<font color="#E5E5E5">if it is not set so let me add to</font><font color="#CCCCCC"> that I</font>

1993
01:27:31,760 --> 01:27:36,710
think<font color="#E5E5E5"> you know so the work that</font><font color="#CCCCCC"> I do in</font>

1994
01:27:34,700 --> 01:27:38,059
this is explicitly<font color="#CCCCCC"> focused on</font>

1995
01:27:36,710 --> 01:27:39,980
measurability and a lot of<font color="#E5E5E5"> what's</font>

1996
01:27:38,060 --> 01:27:43,400
interesting<font color="#E5E5E5"> about measurability is the</font>

1997
01:27:39,980 --> 01:27:45,019
<font color="#E5E5E5">ability</font><font color="#CCCCCC"> to do diagnosis Freight so</font><font color="#E5E5E5"> I</font>

1998
01:27:43,400 --> 01:27:47,750
would see in a lot of cases there's a

1999
01:27:45,020 --> 01:27:49,880
<font color="#CCCCCC">checkbox in</font><font color="#E5E5E5"> the browser that says hey</font>

2000
01:27:47,750 --> 01:27:52,580
I'm having trouble you<font color="#E5E5E5"> know you go you</font>

2001
01:27:49,880 --> 01:27:55,010
call the<font color="#E5E5E5"> whoever's looking at your path</font>

2002
01:27:52,580 --> 01:27:57,080
and they say click<font color="#E5E5E5"> this box on for your</font>

2003
01:27:55,010 --> 01:27:58,940
right now or open a window that's in in

2004
01:27:57,080 --> 01:28:01,190
debug mode<font color="#E5E5E5"> and then try to</font><font color="#CCCCCC"> write or</font><font color="#E5E5E5"> run</font>

2005
01:27:58,940 --> 01:28:02,869
it and then the<font color="#CCCCCC"> device</font><font color="#E5E5E5"> is along the path</font>

2006
01:28:01,190 --> 01:28:04,579
<font color="#E5E5E5">can look at the information</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> deep</font>

2007
01:28:02,869 --> 01:28:07,159
<font color="#CCCCCC">right like</font><font color="#E5E5E5"> so for things that are</font>

2008
01:28:04,579 --> 01:28:08,329
explicitly<font color="#CCCCCC"> looking at Diagnostics</font><font color="#E5E5E5"> you</font>

2009
01:28:07,159 --> 01:28:10,009
can essentially have sort of<font color="#E5E5E5"> like in</font>

2010
01:28:08,329 --> 01:28:13,009
<font color="#E5E5E5">been Diagnostics targeted and then in</font>

2011
01:28:10,010 --> 01:28:13,909
that case you you you<font color="#E5E5E5"> would expect in</font>

2012
01:28:13,010 --> 01:28:15,439
<font color="#E5E5E5">that case you're adding a little bit</font>

2013
01:28:13,909 --> 01:28:17,449
<font color="#CCCCCC">more information than just</font><font color="#E5E5E5"> one bit</font><font color="#CCCCCC"> and</font>

2014
01:28:15,439 --> 01:28:20,629
then you would usually<font color="#E5E5E5"> leave it all</font>

2015
01:28:17,449 --> 01:28:21,619
right<font color="#E5E5E5"> so they're different different</font>

2016
01:28:20,629 --> 01:28:25,959
bits different<font color="#E5E5E5"> complexes</font><font color="#CCCCCC"> of bits</font>

2017
01:28:21,619 --> 01:28:27,889
<font color="#E5E5E5">different use cases</font><font color="#CCCCCC"> you know the he</font>

2018
01:28:25,959 --> 01:28:29,389
sometimes the<font color="#CCCCCC"> decision goes</font><font color="#E5E5E5"> up to UI</font>

2019
01:28:27,889 --> 01:28:30,709
<font color="#CCCCCC">some sentence decision</font><font color="#E5E5E5"> is a system model</font>

2020
01:28:29,389 --> 01:28:32,030
decision sometimes decision is an

2021
01:28:30,709 --> 01:28:36,019
implementation decision that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> just</font>

2022
01:28:32,030 --> 01:28:37,398
<font color="#E5E5E5">after case by case thank you both I want</font>

2023
01:28:36,019 --> 01:28:42,260
to<font color="#CCCCCC"> correct my question slightly I should</font>

2024
01:28:37,399 --> 01:28:43,189
have said<font color="#E5E5E5"> end point probably</font><font color="#CCCCCC"> yeah I know</font>

2025
01:28:42,260 --> 01:28:44,780
you said<font color="#CCCCCC"> you don't want to talk about</font>

2026
01:28:43,189 --> 01:28:47,840
the spin<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> I'm sure there are long</font>

2027
01:28:44,780 --> 01:28:50,570
<font color="#CCCCCC">queues at mics and lots of</font><font color="#E5E5E5"> text but the</font>

2028
01:28:47,840 --> 01:28:51,769
thing that's from the benefit of

2029
01:28:50,570 --> 01:28:54,289
somebody who knows<font color="#CCCCCC"> nothing about this</font>

2030
01:28:51,769 --> 01:28:57,320
<font color="#E5E5E5">have having</font><font color="#CCCCCC"> that perspective seems</font><font color="#E5E5E5"> to me</font>

2031
01:28:54,289 --> 01:29:00,169
the<font color="#CCCCCC"> the spin that's actually very opaque</font>

2032
01:28:57,320 --> 01:29:03,409
<font color="#E5E5E5">and hard to understand and so because</font>

2033
01:29:00,169 --> 01:29:04,879
<font color="#E5E5E5">like if nobody if you don't look into</font>

2034
01:29:03,409 --> 01:29:05,989
<font color="#E5E5E5">like the exact details of why</font><font color="#CCCCCC"> that's</font>

2035
01:29:04,879 --> 01:29:07,879
<font color="#CCCCCC">been</font><font color="#E5E5E5"> that gives you these properties</font>

2036
01:29:05,989 --> 01:29:10,549
<font color="#E5E5E5">it's kind of hard to understand why and</font>

2037
01:29:07,879 --> 01:29:14,360
I<font color="#E5E5E5"> think so I guess the</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> is if</font>

2038
01:29:10,550 --> 01:29:15,530
you<font color="#E5E5E5"> wanted to expose the</font><font color="#CCCCCC"> rtt</font><font color="#E5E5E5"> presumably</font>

2039
01:29:14,360 --> 01:29:17,478
there was a reason<font color="#E5E5E5"> why you could have</font>

2040
01:29:15,530 --> 01:29:19,489
<font color="#E5E5E5">said okay the spin bits one bit if I</font>

2041
01:29:17,479 --> 01:29:22,610
want<font color="#CCCCCC"> to if I want</font><font color="#E5E5E5"> to express the</font><font color="#CCCCCC"> RTT as</font>

2042
01:29:19,489 --> 01:29:24,619
<font color="#E5E5E5">whatever</font><font color="#CCCCCC"> twelve bits I can't do it once</font>

2043
01:29:22,610 --> 01:29:29,239
<font color="#CCCCCC">every 12 packets as a 12 bit number</font><font color="#E5E5E5"> and</font>

2044
01:29:24,619 --> 01:29:30,679
I guess that<font color="#CCCCCC"> kind of goes</font><font color="#E5E5E5"> I'm not</font>

2045
01:29:29,239 --> 01:29:32,329
interested<font color="#E5E5E5"> in that particular</font>

2046
01:29:30,679 --> 01:29:35,209
engineering<font color="#E5E5E5"> trade-off but what it means</font>

2047
01:29:32,329 --> 01:29:39,558
<font color="#E5E5E5">is like how clear does that blue have to</font>

2048
01:29:35,209 --> 01:29:42,019
be right in the outer layer<font color="#E5E5E5"> right and if</font>

2049
01:29:39,559 --> 01:29:45,050
it was<font color="#CCCCCC"> really</font><font color="#E5E5E5"> more explicit like this is</font>

2050
01:29:42,019 --> 01:29:47,360
the<font color="#CCCCCC"> RTT would</font><font color="#E5E5E5"> people making for example</font>

2051
01:29:45,050 --> 01:29:49,189
<font color="#CCCCCC">policy decisions</font><font color="#E5E5E5"> around that like do</font><font color="#CCCCCC"> I</font>

2052
01:29:47,360 --> 01:29:51,739
expose<font color="#CCCCCC"> this or</font><font color="#E5E5E5"> not would they understand</font>

2053
01:29:49,189 --> 01:29:53,119
better<font color="#CCCCCC"> and what that better map to the</font>

2054
01:29:51,739 --> 01:29:58,999
policy outcomes that you<font color="#CCCCCC"> want to achieve</font>

2055
01:29:53,119 --> 01:30:00,438
it it could indeed<font color="#E5E5E5"> um but we have so far</font>

2056
01:29:58,999 --> 01:30:03,260
<font color="#CCCCCC">not been successful in coming up</font><font color="#E5E5E5"> with a</font>

2057
01:30:00,439 --> 01:30:04,639
framework that would allow us<font color="#E5E5E5"> to express</font>

2058
01:30:03,260 --> 01:30:07,159
<font color="#E5E5E5">that in a way</font><font color="#CCCCCC"> that you could</font><font color="#E5E5E5"> actually</font>

2059
01:30:04,639 --> 01:30:09,590
<font color="#E5E5E5">have a vocabulary of those things work</font>

2060
01:30:07,159 --> 01:30:11,780
continues the<font color="#CCCCCC"> other thing to recognize</font>

2061
01:30:09,590 --> 01:30:14,309
is if if you wanted to send an explicit

2062
01:30:11,780 --> 01:30:16,650
<font color="#CCCCCC">RTT as seen by the</font>

2063
01:30:14,309 --> 01:30:18,599
by the<font color="#E5E5E5"> endpoint to the path and simply</font>

2064
01:30:16,650 --> 01:30:20,429
<font color="#E5E5E5">Express at every end packets you have</font>

2065
01:30:18,599 --> 01:30:21,749
different engineering<font color="#E5E5E5"> trade-offs</font><font color="#CCCCCC"> to make</font>

2066
01:30:20,429 --> 01:30:23,489
there and some<font color="#CCCCCC"> of those engineering</font>

2067
01:30:21,749 --> 01:30:25,519
trade-offs is now the packet format<font color="#E5E5E5"> has</font>

2068
01:30:23,489 --> 01:30:28,558
to deal with<font color="#CCCCCC"> that amount</font><font color="#E5E5E5"> of variability</font>

2069
01:30:25,519 --> 01:30:30,749
<font color="#CCCCCC">which is something that may not</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> easy</font>

2070
01:30:28,559 --> 01:30:32,789
<font color="#CCCCCC">for certain packets</font><font color="#E5E5E5"> and formats to deal</font>

2071
01:30:30,749 --> 01:30:34,650
with and you<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> deal</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> loss if</font>

2072
01:30:32,789 --> 01:30:38,639
that particular<font color="#E5E5E5"> packet gets lost or</font>

2073
01:30:34,650 --> 01:30:40,679
suppressed<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so there's a a set of</font>

2074
01:30:38,639 --> 01:30:42,059
issues<font color="#E5E5E5"> around this where when you're</font>

2075
01:30:40,679 --> 01:30:44,729
doing the design that<font color="#E5E5E5"> the protocol you</font>

2076
01:30:42,059 --> 01:30:47,280
have<font color="#CCCCCC"> to think about</font><font color="#E5E5E5"> what the again what</font>

2077
01:30:44,729 --> 01:30:50,579
the the<font color="#E5E5E5"> the client</font><font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to get from</font>

2078
01:30:47,280 --> 01:30:54,570
this knowledge<font color="#E5E5E5"> being available in the in</font>

2079
01:30:50,579 --> 01:30:56,429
the path<font color="#E5E5E5"> and from the</font><font color="#CCCCCC"> paths devices</font>

2080
01:30:54,570 --> 01:30:58,920
perspective how easy it's going<font color="#CCCCCC"> to be to</font>

2081
01:30:56,429 --> 01:31:00,599
read and from both<font color="#E5E5E5"> sides perspective</font>

2082
01:30:58,920 --> 01:31:03,059
what the parsing characteristics are so

2083
01:31:00,599 --> 01:31:04,829
there's a good<font color="#E5E5E5"> bit of work</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go into to</font>

2084
01:31:03,059 --> 01:31:06,630
the<font color="#E5E5E5"> he about the design and you're</font>

2085
01:31:04,829 --> 01:31:09,179
<font color="#E5E5E5">probably right</font><font color="#CCCCCC"> there's also probably</font>

2086
01:31:06,630 --> 01:31:11,280
<font color="#CCCCCC">some marketing and we're probably not</font>

2087
01:31:09,179 --> 01:31:15,690
great for<font color="#CCCCCC"> having chosen to market it as</font>

2088
01:31:11,280 --> 01:31:16,949
spin bit instead<font color="#E5E5E5"> of</font><font color="#CCCCCC"> RTT bit where the</font>

2089
01:31:15,690 --> 01:31:23,579
spinning characteristic is how you

2090
01:31:16,949 --> 01:31:25,259
derive the<font color="#CCCCCC"> RTT but don't consider that</font>

2091
01:31:23,579 --> 01:31:28,139
probably derive<font color="#E5E5E5"> something else from it</font>

2092
01:31:25,260 --> 01:31:30,780
as well and if it was just<font color="#CCCCCC"> the RTT maybe</font>

2093
01:31:28,139 --> 01:31:32,099
you couldn't<font color="#E5E5E5"> I don't know also it seems</font>

2094
01:31:30,780 --> 01:31:33,840
to me the<font color="#E5E5E5"> client gets actually</font><font color="#CCCCCC"> nothing</font>

2095
01:31:32,099 --> 01:31:36,090
out of<font color="#E5E5E5"> this</font><font color="#CCCCCC"> only the network does but</font>

2096
01:31:33,840 --> 01:31:37,679
yeah well so the client does get

2097
01:31:36,090 --> 01:31:39,449
something out of this in<font color="#E5E5E5"> the case where</font>

2098
01:31:37,679 --> 01:31:41,969
the network is maintaining state because

2099
01:31:39,449 --> 01:31:44,009
if the network stops failing to maintain

2100
01:31:41,969 --> 01:31:46,260
<font color="#E5E5E5">state the clients experience is better</font>

2101
01:31:44,010 --> 01:31:48,420
or if the client no longer<font color="#CCCCCC"> has to send</font>

2102
01:31:46,260 --> 01:31:50,400
<font color="#CCCCCC">packets</font><font color="#E5E5E5"> to maintain network state the</font>

2103
01:31:48,420 --> 01:31:52,050
clients experience<font color="#E5E5E5"> gets better</font><font color="#CCCCCC"> Network</font>

2104
01:31:50,400 --> 01:31:53,549
state doesn't doesn't<font color="#E5E5E5"> get cleared on the</font>

2105
01:31:52,050 --> 01:31:55,170
order<font color="#E5E5E5"> of milliseconds it gets it gets</font>

2106
01:31:53,550 --> 01:31:56,789
<font color="#E5E5E5">cleared on the order of tens of seconds</font>

2107
01:31:55,170 --> 01:31:58,440
<font color="#CCCCCC">you</font><font color="#E5E5E5"> you said that this is what you said</font>

2108
01:31:56,789 --> 01:32:01,590
<font color="#E5E5E5">about the net time</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> earlier well so</font>

2109
01:31:58,440 --> 01:32:03,239
it depends on what and actually there's

2110
01:32:01,590 --> 01:32:05,159
a good bit<font color="#CCCCCC"> of stuff in in in the</font>

2111
01:32:03,239 --> 01:32:06,739
analysis<font color="#E5E5E5"> we did for the spin bed on what</font>

2112
01:32:05,159 --> 01:32:08,759
the<font color="#CCCCCC"> particular</font><font color="#E5E5E5"> application</font>

2113
01:32:06,739 --> 01:32:10,199
characteristics are and if you'd<font color="#E5E5E5"> like to</font>

2114
01:32:08,760 --> 01:32:12,840
talk about that offline I'm happy to do

2115
01:32:10,199 --> 01:32:14,579
that but one of<font color="#E5E5E5"> the things is is there</font>

2116
01:32:12,840 --> 01:32:16,260
are application characteristics<font color="#E5E5E5"> where</font>

2117
01:32:14,579 --> 01:32:18,808
you don't expect<font color="#CCCCCC"> the packet trained to</font>

2118
01:32:16,260 --> 01:32:20,789
be milliseconds but<font color="#E5E5E5"> maybe many seconds</font>

2119
01:32:18,809 --> 01:32:22,949
before one particular side sends<font color="#E5E5E5"> and</font>

2120
01:32:20,789 --> 01:32:25,228
that's actually<font color="#E5E5E5"> something</font><font color="#CCCCCC"> you have to</font>

2121
01:32:22,949 --> 01:32:26,848
<font color="#E5E5E5">consider in in this is are</font><font color="#CCCCCC"> there</font>

2122
01:32:25,229 --> 01:32:29,129
application forms

2123
01:32:26,849 --> 01:32:32,999
what you would get out<font color="#CCCCCC"> of what you are</font>

2124
01:32:29,129 --> 01:32:34,709
analyzing<font color="#CCCCCC"> is hiding</font><font color="#E5E5E5"> something about the</font>

2125
01:32:32,999 --> 01:32:37,499
network in behavior that's<font color="#E5E5E5"> actually</font>

2126
01:32:34,709 --> 01:32:39,358
<font color="#CCCCCC">coming from</font><font color="#E5E5E5"> an application what -</font><font color="#CCCCCC"> two</font>

2127
01:32:37,499 --> 01:32:44,159
<font color="#E5E5E5">minutes</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> get to be very negatively</font>

2128
01:32:39,359 --> 01:32:46,590
quick<font color="#CCCCCC"> it's Christine Hutchison just say</font>

2129
01:32:44,159 --> 01:32:49,739
I'm supportive of this<font color="#E5E5E5"> I</font><font color="#CCCCCC"> where an</font>

2130
01:32:46,590 --> 01:32:51,719
operator<font color="#E5E5E5"> I'd rather have a few bits of</font>

2131
01:32:49,739 --> 01:32:54,438
<font color="#CCCCCC">information explicitly and optionally</font>

2132
01:32:51,719 --> 01:32:57,059
stated but that I have<font color="#E5E5E5"> confidence in</font>

2133
01:32:54,439 --> 01:32:58,889
rather than doing something relatively

2134
01:32:57,059 --> 01:33:00,359
<font color="#E5E5E5">expensive and computationally heuristic</font>

2135
01:32:58,889 --> 01:33:03,329
<font color="#CCCCCC">ly to infer</font><font color="#E5E5E5"> things which you're</font><font color="#CCCCCC"> never</font>

2136
01:33:00,359 --> 01:33:06,090
quite sure about so it's better<font color="#E5E5E5"> to I</font>

2137
01:33:03,329 --> 01:33:09,659
mean it<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> going back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> Lorenzo's</font>

2138
01:33:06,090 --> 01:33:13,999
point<font color="#CCCCCC"> what's in it for the end clients</font>

2139
01:33:09,659 --> 01:33:13,999
is is a<font color="#CCCCCC"> better</font><font color="#E5E5E5"> managed cheaper</font><font color="#CCCCCC"> network</font>

2140
01:33:14,659 --> 01:33:18,780
thank you<font color="#E5E5E5"> very much everybody for coming</font>

2141
01:33:16,769 --> 01:33:23,039
<font color="#E5E5E5">I believe there</font><font color="#CCCCCC"> are snacks and drinks</font>

2142
01:33:18,780 --> 01:33:24,659
<font color="#CCCCCC">outside so thank you for my</font><font color="#E5E5E5"> site we</font>

2143
01:33:23,039 --> 01:33:25,829
don't have an open mic<font color="#CCCCCC"> anymore I</font><font color="#E5E5E5"> mean if</font>

2144
01:33:24,659 --> 01:33:27,299
you want<font color="#E5E5E5"> to ask me questions you can</font>

2145
01:33:25,829 --> 01:33:28,829
still<font color="#E5E5E5"> come in</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> some questions but</font>

2146
01:33:27,300 --> 01:33:31,639
like other<font color="#E5E5E5"> than that enjoy your cookies</font>

2147
01:33:28,829 --> 01:33:31,639
<font color="#E5E5E5">thank you everybody</font>

2148
01:33:57,320 --> 01:34:01,530
[Laughter]

