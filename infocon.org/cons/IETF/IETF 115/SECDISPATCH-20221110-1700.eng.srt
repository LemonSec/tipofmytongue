1
00:00:12,080 --> 00:00:15,080
thank you

2
00:00:35,520 --> 00:00:37,760
foreign

3
00:00:38,100 --> 00:00:41,100
okay

4
00:00:41,640 --> 00:00:45,000
hello everyone let's get going can you

5
00:00:45,000 --> 00:00:48,020
please take your seat

6
00:00:49,079 --> 00:00:50,700
gentlemen

7
00:00:50,700 --> 00:00:53,420
we're gonna start

8
00:00:54,239 --> 00:00:55,379
okay

9
00:00:55,379 --> 00:00:56,820
welcome everyone

10
00:00:56,820 --> 00:00:57,420
um

11
00:00:57,420 --> 00:00:59,899
my name is

12
00:01:00,480 --> 00:01:04,199
the new co-chair along with the Kathleen

13
00:01:04,199 --> 00:01:05,339
and Richard

14
00:01:05,339 --> 00:01:09,000
and that are remote this time

15
00:01:09,000 --> 00:01:12,680
and let's get going

16
00:01:14,820 --> 00:01:16,979
the note well applies here obviously so

17
00:01:16,979 --> 00:01:18,659
if you're not familiar with this make

18
00:01:18,659 --> 00:01:20,159
sure

19
00:01:20,159 --> 00:01:21,360
um to

20
00:01:21,360 --> 00:01:24,180
um familiarize yourself with this

21
00:01:24,180 --> 00:01:25,860
because this covers everything that we

22
00:01:25,860 --> 00:01:28,759
do at the IDF

23
00:01:28,979 --> 00:01:31,560
tips if you're

24
00:01:31,560 --> 00:01:33,900
um in person please use the

25
00:01:33,900 --> 00:01:36,780
um the on-site tool client

26
00:01:36,780 --> 00:01:40,380
um this replaces our blue sheets and

27
00:01:40,380 --> 00:01:44,040
allows you to get into the queue

28
00:01:44,040 --> 00:01:44,640
um

29
00:01:44,640 --> 00:01:48,780
and keep your audio and video off

30
00:01:48,780 --> 00:01:51,420
for remote people please make sure audio

31
00:01:51,420 --> 00:01:54,000
and video are off and unless you were

32
00:01:54,000 --> 00:01:56,759
talking and highly recommend that you

33
00:01:56,759 --> 00:01:59,780
use a headset

34
00:02:00,060 --> 00:02:02,759
a code of conduct please be nice to each

35
00:02:02,759 --> 00:02:04,880
other

36
00:02:05,759 --> 00:02:09,239
um just a reminder the sick dispatch

37
00:02:09,239 --> 00:02:12,599
um just recommends next steps

38
00:02:12,599 --> 00:02:15,599
um it doesn't adopt any draft

39
00:02:15,599 --> 00:02:18,599
and there are a number of possible

40
00:02:18,599 --> 00:02:20,640
outcomes here they're listed here I'm

41
00:02:20,640 --> 00:02:23,340
not going to go through this

42
00:02:23,340 --> 00:02:26,340
so our agenda here um

43
00:02:26,340 --> 00:02:30,360
we have four presentations and we will

44
00:02:30,360 --> 00:02:33,360
allocate 15 minutes for the three the

45
00:02:33,360 --> 00:02:35,040
first three of them

46
00:02:35,040 --> 00:02:37,560
and the last one will have maybe five

47
00:02:37,560 --> 00:02:38,900
minutes

48
00:02:38,900 --> 00:02:41,340
if we have time

49
00:02:41,340 --> 00:02:45,840
and then um maybe at the end a little

50
00:02:45,840 --> 00:02:49,200
bit of summary from the chairs and a few

51
00:02:49,200 --> 00:02:53,540
minutes from the ad at the end

52
00:02:53,640 --> 00:02:57,440
um any comments questions about this

53
00:02:57,840 --> 00:03:02,360
okay we will start with httpa go ahead

54
00:03:02,360 --> 00:03:04,519
thank you

55
00:03:04,519 --> 00:03:06,660
I would just like to inject one comment

56
00:03:06,660 --> 00:03:07,920
to thank refund for stepping up to

57
00:03:07,920 --> 00:03:09,720
co-chair here I appreciate uh your

58
00:03:09,720 --> 00:03:12,180
willingness sir no worries thanks

59
00:03:12,180 --> 00:03:13,560
Richard yeah

60
00:03:13,560 --> 00:03:15,239
okay

61
00:03:15,239 --> 00:03:17,780
let me

62
00:03:19,440 --> 00:03:22,440
know sure

63
00:03:23,220 --> 00:03:25,140
okay

64
00:03:25,140 --> 00:03:27,959
um and it's sorry I just wanted to

65
00:03:27,959 --> 00:03:30,360
mentioned that tarot is taking notes for

66
00:03:30,360 --> 00:03:33,480
us and thank you taro

67
00:03:33,480 --> 00:03:34,980
um

68
00:03:34,980 --> 00:03:37,920
okay who's gonna present is it on sounds

69
00:03:37,920 --> 00:03:39,060
fine

70
00:03:39,060 --> 00:03:41,459
uh yes laser Heights can you hear me

71
00:03:41,459 --> 00:03:43,319
okay

72
00:03:43,319 --> 00:03:45,959
uh let me give you control maybe do you

73
00:03:45,959 --> 00:03:48,780
wanna drive it from your side

74
00:03:48,780 --> 00:03:50,760
uh you you can hear me click on the

75
00:03:50,760 --> 00:03:53,659
slides fine yeah

76
00:03:56,480 --> 00:03:58,940
started

77
00:03:58,940 --> 00:04:02,519
you can drive from there

78
00:04:02,519 --> 00:04:05,400
go ahead yeah thank you thank you yeah

79
00:04:05,400 --> 00:04:06,959
hello this is Hans for joining from

80
00:04:06,959 --> 00:04:09,120
Intel and I'll quickly talk about the

81
00:04:09,120 --> 00:04:11,819
future possibility to initiate uh

82
00:04:11,819 --> 00:04:13,260
building trust for the modern internet

83
00:04:13,260 --> 00:04:16,640
and next slide please

84
00:04:19,500 --> 00:04:21,540
okay hold on

85
00:04:21,540 --> 00:04:24,500
takes life back

86
00:04:24,600 --> 00:04:28,620
okay go ahead yeah so um in the modern

87
00:04:28,620 --> 00:04:30,780
Internet it's common to see end user's

88
00:04:30,780 --> 00:04:33,060
identity are not well protected and

89
00:04:33,060 --> 00:04:35,220
third party can easily access private

90
00:04:35,220 --> 00:04:38,340
content under the end identity and sub

91
00:04:38,340 --> 00:04:40,860
identities of the user for its purpose

92
00:04:40,860 --> 00:04:44,280
lack of trust is a big problem and we

93
00:04:44,280 --> 00:04:45,900
hope our work can draw attention

94
00:04:45,900 --> 00:04:48,600
initialism discussion and accelerate the

95
00:04:48,600 --> 00:04:50,880
transformation towards the perfect

96
00:04:50,880 --> 00:04:53,040
vision which is the trustworthy internet

97
00:04:53,040 --> 00:04:55,560
I think in the long-term future so

98
00:04:55,560 --> 00:04:58,020
following the end-to-end principle here

99
00:04:58,020 --> 00:05:00,660
we are proposing an L7 protocol to help

100
00:05:00,660 --> 00:05:03,540
achieve trustworthy web services we call

101
00:05:03,540 --> 00:05:07,820
that the testable HTTP or httpa

102
00:05:07,820 --> 00:05:11,699
httpa is simply an HTTP extension for

103
00:05:11,699 --> 00:05:14,400
binding remote adaptation messages to

104
00:05:14,400 --> 00:05:18,660
http headers and it establishes secure

105
00:05:18,660 --> 00:05:21,120
communication for web services running

106
00:05:21,120 --> 00:05:23,940
inside the trusted execution environment

107
00:05:23,940 --> 00:05:27,180
or I call that t or tee

108
00:05:27,180 --> 00:05:29,880
T is a security area of the main

109
00:05:29,880 --> 00:05:32,639
processor to guarantee codes data inside

110
00:05:32,639 --> 00:05:35,940
to be protected with confidentiality and

111
00:05:35,940 --> 00:05:37,620
integrity

112
00:05:37,620 --> 00:05:40,199
T is also considered an emerging

113
00:05:40,199 --> 00:05:42,900
Computing resource for web services for

114
00:05:42,900 --> 00:05:44,400
commercialization

115
00:05:44,400 --> 00:05:48,419
however HEPA protocol is not specific to

116
00:05:48,419 --> 00:05:50,340
T endpoint

117
00:05:50,340 --> 00:05:54,120
by extending Hep we are proposing a

118
00:05:54,120 --> 00:05:58,139
fundamental method called Hep a test

119
00:05:58,139 --> 00:06:00,500
and a set of a test

120
00:06:00,500 --> 00:06:03,180
dash star head aligned for a

121
00:06:03,180 --> 00:06:05,460
standardization

122
00:06:05,460 --> 00:06:08,220
DPA workflow includes four major

123
00:06:08,220 --> 00:06:11,880
transactions including wide attached

124
00:06:11,880 --> 00:06:15,720
handshake a test secure provisioning and

125
00:06:15,720 --> 00:06:17,720
most importantly The Trusted transaction

126
00:06:17,720 --> 00:06:20,940
from right for more details you're

127
00:06:20,940 --> 00:06:22,979
welcome to check the internet draft we

128
00:06:22,979 --> 00:06:24,560
submitted

129
00:06:24,560 --> 00:06:28,020
agpa can stand alone to build its own

130
00:06:28,020 --> 00:06:30,479
secure communication we call that L7

131
00:06:30,479 --> 00:06:33,780
trusted end-to-end communication and L7

132
00:06:33,780 --> 00:06:37,259
secure communication on the attested

133
00:06:37,259 --> 00:06:40,020
this can not only be used for unilateral

134
00:06:40,020 --> 00:06:43,919
httpa but also Mutual httpa for the

135
00:06:43,919 --> 00:06:48,258
mutual Trust next slide please

136
00:06:50,580 --> 00:06:53,580
yeah and here is some background

137
00:06:53,580 --> 00:06:56,759
information we have a market demand for

138
00:06:56,759 --> 00:06:59,580
secure web services however web services

139
00:06:59,580 --> 00:07:03,600
are mostly not attested also notice that

140
00:07:03,600 --> 00:07:06,240
we're sailing into the new era not just

141
00:07:06,240 --> 00:07:08,780
protecting data in transit or storage

142
00:07:08,780 --> 00:07:12,060
but also protecting data and use in

143
00:07:12,060 --> 00:07:13,259
addition

144
00:07:13,259 --> 00:07:16,020
a great example is T which is an

145
00:07:16,020 --> 00:07:18,660
emerging technology that we've proposed

146
00:07:18,660 --> 00:07:21,780
to protect data and use and is a

147
00:07:21,780 --> 00:07:24,000
reasonable endpoint for HTTP message

148
00:07:24,000 --> 00:07:25,680
exchanges

149
00:07:25,680 --> 00:07:28,199
T is an emerging resource for web

150
00:07:28,199 --> 00:07:31,259
applications uh mostly it goes very well

151
00:07:31,259 --> 00:07:34,680
with the CPU for application developers

152
00:07:34,680 --> 00:07:36,120
to Leverage

153
00:07:36,120 --> 00:07:38,940
hence uh we think that there is a strong

154
00:07:38,940 --> 00:07:42,180
need for unifying remote adaptation on T

155
00:07:42,180 --> 00:07:45,240
for HTTP protocols so that in the future

156
00:07:45,240 --> 00:07:47,580
application developers can easily

157
00:07:47,580 --> 00:07:49,800
leverage team resources for their

158
00:07:49,800 --> 00:07:50,940
purpose

159
00:07:50,940 --> 00:07:54,199
next slide please

160
00:07:55,919 --> 00:07:58,620
and here's a quick comparison between

161
00:07:58,620 --> 00:08:01,680
https and agpi

162
00:08:01,680 --> 00:08:04,740
although both of them have provide

163
00:08:04,740 --> 00:08:06,479
end-to-end security

164
00:08:06,479 --> 00:08:08,819
they have different granularity levels

165
00:08:08,819 --> 00:08:12,360
for defining an endpoint

166
00:08:12,360 --> 00:08:15,599
each GPS needs certificate Authority or

167
00:08:15,599 --> 00:08:19,319
CA to verify the identity of the website

168
00:08:19,319 --> 00:08:22,500
and by website it means in practice is

169
00:08:22,500 --> 00:08:25,740
most likely the website good way not the

170
00:08:25,740 --> 00:08:27,360
web service itself

171
00:08:27,360 --> 00:08:30,479
in this scenario if the web service is

172
00:08:30,479 --> 00:08:32,760
the endpoint that there is a violation

173
00:08:32,760 --> 00:08:35,099
in the num principle that middleman

174
00:08:35,099 --> 00:08:38,159
including CSP or someone else can access

175
00:08:38,159 --> 00:08:40,620
the communication content or Secrets

176
00:08:40,620 --> 00:08:43,500
easily and you will have to access your

177
00:08:43,500 --> 00:08:45,600
network you will have to accept in

178
00:08:45,600 --> 00:08:47,399
network processing that interposed

179
00:08:47,399 --> 00:08:49,860
functions in the traffic if the web

180
00:08:49,860 --> 00:08:52,380
service it's not the end point we have a

181
00:08:52,380 --> 00:08:54,540
room to advance our technology to reduce

182
00:08:54,540 --> 00:08:56,700
the trust boundary further

183
00:08:56,700 --> 00:08:59,760
currently in agps the whole website

184
00:08:59,760 --> 00:09:02,519
behind the gateway is the endpoint

185
00:09:02,519 --> 00:09:06,300
now let's take a look at httpi there are

186
00:09:06,300 --> 00:09:08,720
actually two scenarios for HPI

187
00:09:08,720 --> 00:09:12,660
unilateral GPI for one-way hdbi between

188
00:09:12,660 --> 00:09:15,240
the web service inside the T and the

189
00:09:15,240 --> 00:09:19,740
user ID at the end and mutual agpi

190
00:09:19,740 --> 00:09:22,800
between two T's in this picture we only

191
00:09:22,800 --> 00:09:25,620
show the first case of unilateral hdbi

192
00:09:25,620 --> 00:09:28,279
just for a simple explanation

193
00:09:28,279 --> 00:09:31,080
hevi works with child State's authority

194
00:09:31,080 --> 00:09:34,980
to verify a collection of identities of

195
00:09:34,980 --> 00:09:37,380
the web service run inside the T

196
00:09:37,380 --> 00:09:40,100
directly including genuine Hardware

197
00:09:40,100 --> 00:09:43,320
software software vendors Etc

198
00:09:43,320 --> 00:09:46,140
HBA can also provide a simple and

199
00:09:46,140 --> 00:09:48,839
unified way for users to authenticate

200
00:09:48,839 --> 00:09:52,200
the web services to build trust by

201
00:09:52,200 --> 00:09:54,120
remote adaptation

202
00:09:54,120 --> 00:09:56,940
remote hesitation is the key method we

203
00:09:56,940 --> 00:09:59,760
propose to verify all sorts of identity

204
00:09:59,760 --> 00:10:00,660
set

205
00:10:00,660 --> 00:10:04,260
for including software hardware for

206
00:10:04,260 --> 00:10:07,440
Final Ground Lottery Authentication

207
00:10:07,440 --> 00:10:09,720
and that's what I mentioned previously

208
00:10:09,720 --> 00:10:12,779
previously the new HTTP method we are

209
00:10:12,779 --> 00:10:15,360
proposing HTTP a test

210
00:10:15,360 --> 00:10:18,720
so that user can expect the thing what

211
00:10:18,720 --> 00:10:21,420
happened as it is in the remaining HTTP

212
00:10:21,420 --> 00:10:23,700
transactions anxiety

213
00:10:23,700 --> 00:10:27,360
in this scenario of a GPI

214
00:10:27,360 --> 00:10:30,720
web service is the endpoint middleman

215
00:10:30,720 --> 00:10:33,660
between the web service and users cannot

216
00:10:33,660 --> 00:10:36,000
access the encrypted content

217
00:10:36,000 --> 00:10:39,300
uh even in the situation without TLS

218
00:10:39,300 --> 00:10:42,060
protection and they cannot Forge the

219
00:10:42,060 --> 00:10:45,420
identity either because hdpa allows an

220
00:10:45,420 --> 00:10:47,579
endpoint to select the part of the

221
00:10:47,579 --> 00:10:49,980
message for encryption we call that

222
00:10:49,980 --> 00:10:52,440
selected privacy and the whole

223
00:10:52,440 --> 00:10:54,600
communication between endpoints will be

224
00:10:54,600 --> 00:10:56,579
protected with authentication and

225
00:10:56,579 --> 00:10:59,459
integrity guarantee through the T

226
00:10:59,459 --> 00:11:03,540
in some strong T users can only rely on

227
00:11:03,540 --> 00:11:05,760
the web service itself for their

228
00:11:05,760 --> 00:11:07,980
sensitive data with even without the

229
00:11:07,980 --> 00:11:10,260
need to worry about the potential

230
00:11:10,260 --> 00:11:12,959
interposition fundamental boxes

231
00:11:12,959 --> 00:11:16,140
even though middle boxes are most mostly

232
00:11:16,140 --> 00:11:18,779
benign and useful

233
00:11:18,779 --> 00:11:21,839
um such as an application Gateway yeah

234
00:11:21,839 --> 00:11:24,959
sorry there are a number of people in

235
00:11:24,959 --> 00:11:27,000
the queue here and do you want to take

236
00:11:27,000 --> 00:11:28,680
this comments right now

237
00:11:28,680 --> 00:11:32,519
okay uh sure okay Roman yeah

238
00:11:32,519 --> 00:11:34,500
hi room engineer Carnegie Mellon

239
00:11:34,500 --> 00:11:37,500
University uh no hat just to kind of

240
00:11:37,500 --> 00:11:39,899
clarify I'm sorry I came up and down

241
00:11:39,899 --> 00:11:41,940
because I was trying to understand that

242
00:11:41,940 --> 00:11:44,160
the setup here so it really isn't about

243
00:11:44,160 --> 00:11:46,440
how many middle boxes are here whether

244
00:11:46,440 --> 00:11:48,660
it's an application Gateway or the fact

245
00:11:48,660 --> 00:11:52,019
that the tee is on a box the setup is

246
00:11:52,019 --> 00:11:54,540
you want to tunnel from the te

247
00:11:54,540 --> 00:11:56,579
irrespective of how many middle boxes

248
00:11:56,579 --> 00:11:58,680
are there to the user that's the

249
00:11:58,680 --> 00:12:00,839
motivation for the extra headers

250
00:12:00,839 --> 00:12:03,560
yes

251
00:12:03,600 --> 00:12:06,060
yes okay thanks

252
00:12:06,060 --> 00:12:09,420
harness hi honest traffic

253
00:12:09,420 --> 00:12:10,019
um

254
00:12:10,019 --> 00:12:13,740
in general uh if you put a TLS Gateway

255
00:12:13,740 --> 00:12:15,360
somewhere in front of your web services

256
00:12:15,360 --> 00:12:17,700
the expectation is that you would

257
00:12:17,700 --> 00:12:20,339
offload the TLs service that's why you

258
00:12:20,339 --> 00:12:22,560
put that in front of it um so I think

259
00:12:22,560 --> 00:12:24,720
from that deployment point of view

260
00:12:24,720 --> 00:12:27,839
nothing changes uh if you don't want

261
00:12:27,839 --> 00:12:30,839
that offload then let your TLS go all

262
00:12:30,839 --> 00:12:32,579
the way to the end

263
00:12:32,579 --> 00:12:35,279
having said that you could

264
00:12:35,279 --> 00:12:36,120
um

265
00:12:36,120 --> 00:12:38,160
probably if you want to truly have it

266
00:12:38,160 --> 00:12:40,079
end to end uh you could put something

267
00:12:40,079 --> 00:12:42,060
into the application layer which would

268
00:12:42,060 --> 00:12:43,740
be simpler and wouldn't require

269
00:12:43,740 --> 00:12:45,839
modifications to the HTTP protocol

270
00:12:45,839 --> 00:12:47,399
itself

271
00:12:47,399 --> 00:12:52,019
which um and uh you could also

272
00:12:52,019 --> 00:12:53,760
sort of layer

273
00:12:53,760 --> 00:12:57,060
different sort of TLS protocol on top of

274
00:12:57,060 --> 00:12:59,700
the application as well if you want so

275
00:12:59,700 --> 00:13:02,579
I'm I'm curious on why you don't want to

276
00:13:02,579 --> 00:13:05,639
just go the simplest route which is um

277
00:13:05,639 --> 00:13:07,740
if an application needs it put that

278
00:13:07,740 --> 00:13:09,860
information into the application

279
00:13:09,860 --> 00:13:12,300
and by the way certificate Authority

280
00:13:12,300 --> 00:13:15,920
should be certification Authority

281
00:13:17,579 --> 00:13:19,920
great hands

282
00:13:19,920 --> 00:13:21,240
um

283
00:13:21,240 --> 00:13:24,200
hold on Jonathan just one second

284
00:13:24,200 --> 00:13:26,100
do you have

285
00:13:26,100 --> 00:13:28,440
an answer to what do you want to answer

286
00:13:28,440 --> 00:13:30,620
honest

287
00:13:30,620 --> 00:13:34,200
okay Jonathan uh Jonathan hoyland's

288
00:13:34,200 --> 00:13:35,579
crowd player

289
00:13:35,579 --> 00:13:36,600
um

290
00:13:36,600 --> 00:13:39,660
so your httpa communication is giving

291
00:13:39,660 --> 00:13:42,240
you uh confidentiality Integrity all the

292
00:13:42,240 --> 00:13:43,560
things you want

293
00:13:43,560 --> 00:13:46,079
why have a TLS Channel at all

294
00:13:46,079 --> 00:13:48,180
right you you can just do this over like

295
00:13:48,180 --> 00:13:51,959
raw internet packets and adding the TLs

296
00:13:51,959 --> 00:13:54,000
channel is just sort of

297
00:13:54,000 --> 00:13:56,100
adding noise it doesn't really help

298
00:13:56,100 --> 00:13:58,639
anything

299
00:14:01,260 --> 00:14:03,480
what's the security guarantee you want

300
00:14:03,480 --> 00:14:05,700
from the TLs Channel why aren't you just

301
00:14:05,700 --> 00:14:07,139
doing this over

302
00:14:07,139 --> 00:14:09,380
raw internet

303
00:14:09,380 --> 00:14:14,760
yes so for the to as channels it's not

304
00:14:14,760 --> 00:14:17,779
necessary for httpi and we don't

305
00:14:17,779 --> 00:14:20,579
necessarily need that

306
00:14:20,579 --> 00:14:22,560
um so this is the kind of things need

307
00:14:22,560 --> 00:14:25,380
more discussion I think that essentially

308
00:14:25,380 --> 00:14:28,100
the users the interest

309
00:14:28,100 --> 00:14:30,600
that what they are interested into a

310
00:14:30,600 --> 00:14:32,639
verifying the identity is that a website

311
00:14:32,639 --> 00:14:35,579
or the web service itself that's kind of

312
00:14:35,579 --> 00:14:38,399
the question why trying to enter and if

313
00:14:38,399 --> 00:14:40,800
it's the web service itself nothing

314
00:14:40,800 --> 00:14:43,139
really related to the website then

315
00:14:43,139 --> 00:14:46,380
probably httpa is good enough

316
00:14:46,380 --> 00:14:48,779
however you know most of most of the

317
00:14:48,779 --> 00:14:51,000
scenarios we're still we have a

318
00:14:51,000 --> 00:14:55,380
ingrained trust in the hdls and

319
00:14:55,380 --> 00:14:57,959
and we need some experiment part you see

320
00:14:57,959 --> 00:15:00,959
we only have the pure hdpi and what

321
00:15:00,959 --> 00:15:03,420
that's that in that perfect scenario um

322
00:15:03,420 --> 00:15:06,240
what the spirit is like so it's just

323
00:15:06,240 --> 00:15:07,740
flicking through your draft I didn't

324
00:15:07,740 --> 00:15:10,920
read it in detail and I I just noticed

325
00:15:10,920 --> 00:15:11,880
that there's

326
00:15:11,880 --> 00:15:15,720
there's no attempt to bind

327
00:15:15,720 --> 00:15:20,940
the httpa or the the the te to the TLs

328
00:15:20,940 --> 00:15:22,860
channel so I really think it isn't doing

329
00:15:22,860 --> 00:15:26,480
anything at all I think it's just noise

330
00:15:26,519 --> 00:15:29,339
yeah you can put it that way

331
00:15:29,339 --> 00:15:33,500
um it doesn't rely on TLS

332
00:15:34,019 --> 00:15:36,660
so just a question here we have about

333
00:15:36,660 --> 00:15:39,899
five minutes left in the slots we would

334
00:15:39,899 --> 00:15:41,820
like to have some discussion and get

335
00:15:41,820 --> 00:15:44,040
dispatch outcome here

336
00:15:44,040 --> 00:15:46,079
um so I don't know if you want to go

337
00:15:46,079 --> 00:15:47,940
over in the feedback now or represent a

338
00:15:47,940 --> 00:15:50,760
few more slides but if you could kind of

339
00:15:50,760 --> 00:15:52,079
get to it in the presentation has some

340
00:15:52,079 --> 00:15:54,600
time for feedback that'd be great

341
00:15:54,600 --> 00:15:56,519
yeah I was gonna say that like maybe

342
00:15:56,519 --> 00:15:58,500
like we're going to have any discussion

343
00:15:58,500 --> 00:16:00,060
we need to like have like no more slides

344
00:16:00,060 --> 00:16:02,040
or one more at the most so um I'm happy

345
00:16:02,040 --> 00:16:04,440
to have to wait for it but like

346
00:16:04,440 --> 00:16:07,260
what would shares like to do

347
00:16:07,260 --> 00:16:09,779
sorry what was that yeah I said if we're

348
00:16:09,779 --> 00:16:10,920
going to discuss this we have to like

349
00:16:10,920 --> 00:16:12,300
have this presentation end very very

350
00:16:12,300 --> 00:16:14,100
soon so like what do the chairs want to

351
00:16:14,100 --> 00:16:15,360
do

352
00:16:15,360 --> 00:16:17,160
yeah

353
00:16:17,160 --> 00:16:19,079
slides do you have how many further

354
00:16:19,079 --> 00:16:20,399
slides do you have

355
00:16:20,399 --> 00:16:22,920
this is the last line it's the last

356
00:16:22,920 --> 00:16:24,500
slide

357
00:16:24,500 --> 00:16:26,880
there's another last live trying to

358
00:16:26,880 --> 00:16:28,680
discuss where do we go but this is

359
00:16:28,680 --> 00:16:32,000
probably the last live for the content

360
00:16:33,180 --> 00:16:36,120
oh good okay yeah

361
00:16:36,120 --> 00:16:37,259
so

362
00:16:37,259 --> 00:16:39,779
yeah I think this is the wrong layer

363
00:16:39,779 --> 00:16:40,860
um my question is somewhat like

364
00:16:40,860 --> 00:16:42,600
Jonathan's but I think perhaps more

365
00:16:42,600 --> 00:16:44,459
straightforward the right place is the

366
00:16:44,459 --> 00:16:47,759
TLs layer um not at the HTTP layer

367
00:16:47,759 --> 00:16:50,040
um like uh I understand you like want to

368
00:16:50,040 --> 00:16:52,079
have like a Gateway but like this is

369
00:16:52,079 --> 00:16:53,220
going to create all kinds of confusion

370
00:16:53,220 --> 00:16:54,480
about the situation

371
00:16:54,480 --> 00:16:56,220
um in terms of like what can the Gateway

372
00:16:56,220 --> 00:16:57,839
do and what the game we cannot do if you

373
00:16:57,839 --> 00:16:58,800
have a lot of selective encryption or

374
00:16:58,800 --> 00:17:00,180
selective signature like there's been

375
00:17:00,180 --> 00:17:01,380
like all like history of enormous

376
00:17:01,380 --> 00:17:02,959
amounts of shenanigans with a slice of

377
00:17:02,959 --> 00:17:04,679
signature it's like the right way to

378
00:17:04,679 --> 00:17:05,880
solve this problem is to like have this

379
00:17:05,880 --> 00:17:07,859
like terminate on the TLs server if like

380
00:17:07,859 --> 00:17:09,839
if this problem need to be solved at all

381
00:17:09,839 --> 00:17:12,000
um which I am like somewhat skeptical of

382
00:17:12,000 --> 00:17:13,980
um um and I think so saying that maybe

383
00:17:13,980 --> 00:17:15,419
that so maybe I'll even back up and ask

384
00:17:15,419 --> 00:17:16,919
the question how do you envision this

385
00:17:16,919 --> 00:17:19,319
being deployed so do this is this for

386
00:17:19,319 --> 00:17:21,919
the web for instance

387
00:17:21,919 --> 00:17:24,480
uh we're envisioning this for the web

388
00:17:24,480 --> 00:17:26,880
instance yes so how would it how would a

389
00:17:26,880 --> 00:17:27,780
browser consume this information

390
00:17:27,780 --> 00:17:30,000
presented to the user

391
00:17:30,000 --> 00:17:33,540
but let us stipulate this all worked

392
00:17:33,540 --> 00:17:36,000
was that let us stipulate this was

393
00:17:36,000 --> 00:17:37,740
perfect how would the browser consume

394
00:17:37,740 --> 00:17:38,820
this information and present it to the

395
00:17:38,820 --> 00:17:40,799
user

396
00:17:40,799 --> 00:17:44,160
yeah so this requires um like we need to

397
00:17:44,160 --> 00:17:46,559
build some share library and then have

398
00:17:46,559 --> 00:17:49,500
some browser plugin that will have some

399
00:17:49,500 --> 00:17:51,900
browser plugin to pass it to pass that

400
00:17:51,900 --> 00:17:54,539
information for this complication no no

401
00:17:54,539 --> 00:17:56,820
I I'm not asking how the how the

402
00:17:56,820 --> 00:17:58,260
protocol works I'm asking what the

403
00:17:58,260 --> 00:18:00,299
browser shows the user but actually but

404
00:18:00,299 --> 00:18:01,440
that's that even brings me another

405
00:18:01,440 --> 00:18:03,360
question is any browser interested in

406
00:18:03,360 --> 00:18:05,059
this

407
00:18:05,059 --> 00:18:08,760
uh so far I'm not quite sure yet

408
00:18:08,760 --> 00:18:11,100
um this is still kind of a concept so

409
00:18:11,100 --> 00:18:12,840
far okay so I think that I think that's

410
00:18:12,840 --> 00:18:14,160
the for me that we the predicate

411
00:18:14,160 --> 00:18:16,020
question for taking this up for ITF

412
00:18:16,020 --> 00:18:17,940
um so I think um the answer from my

413
00:18:17,940 --> 00:18:19,260
perspective and perhaps other browser

414
00:18:19,260 --> 00:18:21,059
vendors have similar ways is come back

415
00:18:21,059 --> 00:18:22,320
when someone's some browser is

416
00:18:22,320 --> 00:18:23,760
interested

417
00:18:23,760 --> 00:18:26,840
okay Mark

418
00:18:31,380 --> 00:18:33,179
see this is the problem when you can sit

419
00:18:33,179 --> 00:18:34,980
down and be in the queue

420
00:18:34,980 --> 00:18:37,919
um so I I have significant concerns

421
00:18:37,919 --> 00:18:39,660
about how this uses HTTP I think it's

422
00:18:39,660 --> 00:18:41,220
maybe an extension of ecker's comments

423
00:18:41,220 --> 00:18:44,220
that about the layering um I'm not at

424
00:18:44,220 --> 00:18:45,720
all sure that this is an appropriate

425
00:18:45,720 --> 00:18:48,480
candidate for a new HTTP method and I

426
00:18:48,480 --> 00:18:50,160
encourage you to read both the HTTP

427
00:18:50,160 --> 00:18:53,039
semantics uh document on HTTP methods

428
00:18:53,039 --> 00:18:54,179
and what the requirements for them are

429
00:18:54,179 --> 00:18:57,360
as well as BCP 56.

430
00:18:57,360 --> 00:18:59,460
um I also I think I've communicated this

431
00:18:59,460 --> 00:19:02,460
poor it this is not a good name https

432
00:19:02,460 --> 00:19:05,460
was probably a mistake I think this is

433
00:19:05,460 --> 00:19:08,340
an extension if it's how did that happen

434
00:19:08,340 --> 00:19:09,600
exactly

435
00:19:09,600 --> 00:19:12,360
uh uh if this is going to come in at the

436
00:19:12,360 --> 00:19:14,700
HBO later which I think is a big if

437
00:19:14,700 --> 00:19:17,400
it's an extension to http it is not a

438
00:19:17,400 --> 00:19:19,980
new named HTTP

439
00:19:19,980 --> 00:19:21,299
um but I think what really needs to

440
00:19:21,299 --> 00:19:22,500
happen is the community needs to have

441
00:19:22,500 --> 00:19:25,020
discussion about use cases requirements

442
00:19:25,020 --> 00:19:26,820
what is the right layer to have this

443
00:19:26,820 --> 00:19:28,620
come in at rather than just having a

444
00:19:28,620 --> 00:19:30,000
solution saying look here's a new HTTP

445
00:19:30,000 --> 00:19:31,620
method so let's have that discussion if

446
00:19:31,620 --> 00:19:33,179
there's interest in that discussion okay

447
00:19:33,179 --> 00:19:36,900
we have one minute here so Ben please go

448
00:19:36,900 --> 00:19:39,240
ahead quickly

449
00:19:39,240 --> 00:19:44,700
hi uh I just wanted to encourage you to

450
00:19:44,700 --> 00:19:48,299
look at the existing multi-layer work in

451
00:19:48,299 --> 00:19:52,799
HTTP particularly HTTP connect

452
00:19:52,799 --> 00:19:54,840
UDP or math

453
00:19:54,840 --> 00:19:57,780
and web transport

454
00:19:57,780 --> 00:20:00,480
um that seem like they can probably

455
00:20:00,480 --> 00:20:03,240
Express this in a more natural way where

456
00:20:03,240 --> 00:20:05,580
there's a a TLS session to the Gateway

457
00:20:05,580 --> 00:20:08,039
if there's Gateway level logic and then

458
00:20:08,039 --> 00:20:11,100
an end-to-end TLS session into the

459
00:20:11,100 --> 00:20:15,559
trusted environment inside that

460
00:20:16,140 --> 00:20:19,740
thanks Ted uh dispatch outcome I

461
00:20:19,740 --> 00:20:21,840
recommend no action at this time I

462
00:20:21,840 --> 00:20:23,280
strongly agree with all of what Mark

463
00:20:23,280 --> 00:20:25,440
Nottingham said about its use of HTTP I

464
00:20:25,440 --> 00:20:28,559
think the method is completely

465
00:20:28,559 --> 00:20:30,960
um in in need of a rethink and I think

466
00:20:30,960 --> 00:20:32,520
some discussion as well about how it's

467
00:20:32,520 --> 00:20:34,559
using the headers if it stays at the

468
00:20:34,559 --> 00:20:37,559
HTTP layer it needs to start over and I

469
00:20:37,559 --> 00:20:39,000
think Mark is correct that it doesn't

470
00:20:39,000 --> 00:20:41,220
belong there and so I think no action

471
00:20:41,220 --> 00:20:44,720
thanks Ted Danielle

472
00:20:45,600 --> 00:20:47,880
um I agree with the no action from other

473
00:20:47,880 --> 00:20:49,679
people I also think that there are some

474
00:20:49,679 --> 00:20:51,419
pretty serious privacy concerns if this

475
00:20:51,419 --> 00:20:55,020
would actually apply uh if the server

476
00:20:55,020 --> 00:20:57,059
could request attention from the client

477
00:20:57,059 --> 00:20:59,400
I heard bi-directional early on and this

478
00:20:59,400 --> 00:21:01,740
strikes me as uh some kind of Mega

479
00:21:01,740 --> 00:21:03,419
cookie of like having been approved that

480
00:21:03,419 --> 00:21:05,940
I am this particular device

481
00:21:05,940 --> 00:21:08,700
um so I I think no action there's a lot

482
00:21:08,700 --> 00:21:10,799
of unanswered questions here and I don't

483
00:21:10,799 --> 00:21:12,720
think it's fully big enough freedom to

484
00:21:12,720 --> 00:21:14,840
start

485
00:21:15,299 --> 00:21:18,620
all right so just to wrap up the

486
00:21:18,620 --> 00:21:21,299
dispatch outcome here sounds like

487
00:21:21,299 --> 00:21:22,919
there's pretty good consensus there's no

488
00:21:22,919 --> 00:21:25,020
action for now and there's some good

489
00:21:25,020 --> 00:21:26,880
feedback that there's needs to be a

490
00:21:26,880 --> 00:21:28,380
little bit more thought of how this fits

491
00:21:28,380 --> 00:21:31,620
in with the TLs the web transport uh

492
00:21:31,620 --> 00:21:34,140
sort of architecture so thanks for the

493
00:21:34,140 --> 00:21:35,400
presentation Hans

494
00:21:35,400 --> 00:21:39,360
um and next up is thank you

495
00:21:39,360 --> 00:21:41,940
security

496
00:21:41,940 --> 00:21:46,159
yep and Milling

497
00:21:49,620 --> 00:21:52,219
okay

498
00:21:52,500 --> 00:21:56,039
is me kneeling around

499
00:21:56,039 --> 00:22:00,080
either remote over here

500
00:22:02,280 --> 00:22:05,360
doesn't look like it

501
00:22:05,640 --> 00:22:09,780
no one oh no I don't see her on the in

502
00:22:09,780 --> 00:22:11,280
Meet Echo

503
00:22:11,280 --> 00:22:14,340
okay let's move on

504
00:22:14,340 --> 00:22:16,740
next one is

505
00:22:16,740 --> 00:22:21,260
sign public key let's see

506
00:22:22,559 --> 00:22:25,760
okay gram

507
00:22:27,360 --> 00:22:30,740
yummy to hand you control

508
00:22:32,640 --> 00:22:35,460
yeah okay so let me

509
00:22:35,460 --> 00:22:37,320
hi my name is Graham leggetts I'm brand

510
00:22:37,320 --> 00:22:39,659
new so please be nice to me and don't

511
00:22:39,659 --> 00:22:41,340
jump on me

512
00:22:41,340 --> 00:22:42,179
um

513
00:22:42,179 --> 00:22:44,940
yeah I can as long as as long as no one

514
00:22:44,940 --> 00:22:46,919
bites me that's fine

515
00:22:46,919 --> 00:22:47,840
um

516
00:22:47,840 --> 00:22:50,760
I wear a number of hats I come from

517
00:22:50,760 --> 00:22:52,980
Apache software Foundation did a number

518
00:22:52,980 --> 00:22:54,860
of a lot of work on

519
00:22:54,860 --> 00:22:57,780
httpd way back when

520
00:22:57,780 --> 00:22:59,880
um further to the present there's a

521
00:22:59,880 --> 00:23:01,620
project called a red wax project which

522
00:23:01,620 --> 00:23:03,080
is aiming to put a whole lot of

523
00:23:03,080 --> 00:23:05,760
web-based Technologies

524
00:23:05,760 --> 00:23:07,740
um anything anything that crosses

525
00:23:07,740 --> 00:23:11,100
Security in the web like Skip and this

526
00:23:11,100 --> 00:23:13,740
sign public key and challenge

527
00:23:13,740 --> 00:23:16,500
um we're trying to find things that are

528
00:23:16,500 --> 00:23:19,500
broken and fix them and one thing that's

529
00:23:19,500 --> 00:23:21,840
broken is this

530
00:23:21,840 --> 00:23:23,940
so if you can jump to the next slide

531
00:23:23,940 --> 00:23:26,299
quickly

532
00:23:30,179 --> 00:23:32,280
it's not working for you

533
00:23:32,280 --> 00:23:35,580
um no am I okay let me dig back I'll

534
00:23:35,580 --> 00:23:38,100
I'll drive this yeah okay

535
00:23:38,100 --> 00:23:39,539
go ahead it's reading from my notes

536
00:23:39,539 --> 00:23:42,480
sorry about that so what is it

537
00:23:42,480 --> 00:23:45,179
um it's an asn1 structure

538
00:23:45,179 --> 00:23:48,419
it contains a public key and a challenge

539
00:23:48,419 --> 00:23:51,480
as you would imagine from the title and

540
00:23:51,480 --> 00:23:55,020
they're signed and that's basically it

541
00:23:55,020 --> 00:23:57,900
um if you jump to the next slide what

542
00:23:57,900 --> 00:24:00,900
I'll do is go into some history

543
00:24:00,900 --> 00:24:03,179
um some people might be old enough to

544
00:24:03,179 --> 00:24:05,780
remember the 1990s

545
00:24:05,780 --> 00:24:09,240
there was a company called Netscape

546
00:24:09,240 --> 00:24:10,799
and they invented a thing called a web

547
00:24:10,799 --> 00:24:12,419
browser some people might be familiar

548
00:24:12,419 --> 00:24:15,600
with that and in inside that web browser

549
00:24:15,600 --> 00:24:18,240
was a thing called the Keygen tag what

550
00:24:18,240 --> 00:24:20,640
the Keygen tag did is if you embedded

551
00:24:20,640 --> 00:24:22,980
that on a web page what the web page

552
00:24:22,980 --> 00:24:27,179
would do is generate a key pair for you

553
00:24:27,179 --> 00:24:30,900
and then submit proof of possession of

554
00:24:30,900 --> 00:24:33,419
that key that private key would send it

555
00:24:33,419 --> 00:24:35,760
over to the server and if you were a

556
00:24:35,760 --> 00:24:37,440
certificate Authority you could then use

557
00:24:37,440 --> 00:24:39,299
that mechanism to hand out certificates

558
00:24:39,299 --> 00:24:44,220
and that worked for about 20-ish years

559
00:24:44,220 --> 00:24:46,140
um the key gen mechanism eventually

560
00:24:46,140 --> 00:24:49,980
became part of the HTML5 specification

561
00:24:49,980 --> 00:24:53,780
you can jump to the next slide quickly

562
00:24:53,780 --> 00:24:57,419
so at the same time also in the 1990s

563
00:24:57,419 --> 00:24:58,860
there's another company called Microsoft

564
00:24:58,860 --> 00:25:00,840
that people might have heard of they

565
00:25:00,840 --> 00:25:02,700
invented a different mechanism there was

566
00:25:02,700 --> 00:25:04,260
a big fight between the Netscape people

567
00:25:04,260 --> 00:25:07,380
and the Internet Explorer people uh same

568
00:25:07,380 --> 00:25:09,900
problem being solved problem being that

569
00:25:09,900 --> 00:25:12,419
the private key was generated in the

570
00:25:12,419 --> 00:25:14,340
browser and never left the user's

571
00:25:14,340 --> 00:25:15,299
possession

572
00:25:15,299 --> 00:25:17,880
their decision on how to solve it was to

573
00:25:17,880 --> 00:25:19,919
use a certificate signed request and

574
00:25:19,919 --> 00:25:21,840
that was the thing that went over the

575
00:25:21,840 --> 00:25:24,539
Internet this still exists you can have

576
00:25:24,539 --> 00:25:27,000
it it's called it's it's exists inside

577
00:25:27,000 --> 00:25:29,820
Internet Explorer compatibility mode if

578
00:25:29,820 --> 00:25:33,000
you use Microsoft Edge

579
00:25:33,000 --> 00:25:33,840
um

580
00:25:33,840 --> 00:25:35,580
anyway we jumped forward if we jump

581
00:25:35,580 --> 00:25:37,140
forward one slide

582
00:25:37,140 --> 00:25:39,900
and about 15 years Firefox and Google in

583
00:25:39,900 --> 00:25:43,140
the mid 2010s said yeah now we're going

584
00:25:43,140 --> 00:25:45,779
to take this out and specifically they

585
00:25:45,779 --> 00:25:48,299
took out key gen from the browsers and

586
00:25:48,299 --> 00:25:52,200
they took Keygen out of the HTML5

587
00:25:52,200 --> 00:25:55,380
specification uh justification quite

588
00:25:55,380 --> 00:25:58,500
valid really first one the message

589
00:25:58,500 --> 00:26:00,419
format that I described a very short

590
00:26:00,419 --> 00:26:03,120
while ago was never written down it

591
00:26:03,120 --> 00:26:05,520
existed it was widely deployed but no

592
00:26:05,520 --> 00:26:08,279
one ever standardized it and it's now

593
00:26:08,279 --> 00:26:10,340
code that is lying around

594
00:26:10,340 --> 00:26:13,500
openssl it lies around inside NSS that

595
00:26:13,500 --> 00:26:15,779
lies around all sorts of places

596
00:26:15,779 --> 00:26:17,940
um it is not a standard and for that

597
00:26:17,940 --> 00:26:20,039
reason I'm standing here now I hope to

598
00:26:20,039 --> 00:26:22,200
make it a standard just so that at the

599
00:26:22,200 --> 00:26:24,779
very least we can we can put a bit of

600
00:26:24,779 --> 00:26:27,720
History under this piece of the internet

601
00:26:27,720 --> 00:26:29,100
um the

602
00:26:29,100 --> 00:26:32,700
Sophie jump to the next next slide we

603
00:26:32,700 --> 00:26:34,200
get to the point of why bother doing

604
00:26:34,200 --> 00:26:36,900
this work in the first place

605
00:26:36,900 --> 00:26:40,140
um the first reason is that code exists

606
00:26:40,140 --> 00:26:44,279
it exists in openssl exists in NSS it

607
00:26:44,279 --> 00:26:46,820
exists various places on the internet

608
00:26:46,820 --> 00:26:50,100
and this code allows you to create a

609
00:26:50,100 --> 00:26:52,200
message and that message allows you to

610
00:26:52,200 --> 00:26:55,860
prove that you possess a private key we

611
00:26:55,860 --> 00:26:57,840
don't like throwing away good code it's

612
00:26:57,840 --> 00:27:00,539
been there for 20 to 30 years it's

613
00:27:00,539 --> 00:27:02,279
widely deployed in all sorts of

614
00:27:02,279 --> 00:27:04,100
operating systems all sorts of libraries

615
00:27:04,100 --> 00:27:07,080
throwing it away is a waste in addition

616
00:27:07,080 --> 00:27:09,720
we still want to prove that we possess

617
00:27:09,720 --> 00:27:12,240
private keys and we don't necessarily

618
00:27:12,240 --> 00:27:13,980
want certificates to be involved because

619
00:27:13,980 --> 00:27:16,980
things like Dane and dkim and so on

620
00:27:16,980 --> 00:27:19,620
exist and they don't necessarily cover

621
00:27:19,620 --> 00:27:21,419
certificates

622
00:27:21,419 --> 00:27:25,020
um so there is a there is still a need

623
00:27:25,020 --> 00:27:27,179
for this problem to be solved

624
00:27:27,179 --> 00:27:30,120
so if we jump to the next slide

625
00:27:30,120 --> 00:27:33,179
the goals of this if I zoom in on my

626
00:27:33,179 --> 00:27:35,460
phone because I can't see properly the

627
00:27:35,460 --> 00:27:37,700
goals of this is to formally Define the

628
00:27:37,700 --> 00:27:40,679
spkoc format properly to the standards

629
00:27:40,679 --> 00:27:43,740
of the ITF and then go to each of the

630
00:27:43,740 --> 00:27:45,960
implementations out there openssl is one

631
00:27:45,960 --> 00:27:47,520
that's already been done but there are

632
00:27:47,520 --> 00:27:50,220
others and update those implementations

633
00:27:50,220 --> 00:27:52,440
to make sure that they are clearly

634
00:27:52,440 --> 00:27:55,080
indicated as following a standard and

635
00:27:55,080 --> 00:27:58,020
fix any shortcomings in them the big

636
00:27:58,020 --> 00:28:00,299
shortcoming that did exist in openssl

637
00:28:00,299 --> 00:28:03,480
was that despite signed public key and

638
00:28:03,480 --> 00:28:06,059
challenge not depending on any

639
00:28:06,059 --> 00:28:09,299
particular kind of hash uh the guys who

640
00:28:09,299 --> 00:28:11,820
came up with key gen said md5 is good

641
00:28:11,820 --> 00:28:13,799
enough for everybody and they hard-coded

642
00:28:13,799 --> 00:28:16,080
that into keychain obviously that is

643
00:28:16,080 --> 00:28:17,460
evil

644
00:28:17,460 --> 00:28:20,220
um and in this particular spec we've

645
00:28:20,220 --> 00:28:23,159
we've updated it to indicate

646
00:28:23,159 --> 00:28:25,380
um 2020's practice

647
00:28:25,380 --> 00:28:27,419
and don't hard code your

648
00:28:27,419 --> 00:28:29,340
um your hashes

649
00:28:29,340 --> 00:28:32,400
and the end goal ultimately is we want

650
00:28:32,400 --> 00:28:34,260
people to be able to use this message to

651
00:28:34,260 --> 00:28:36,600
prove they're in possession of a private

652
00:28:36,600 --> 00:28:37,500
key

653
00:28:37,500 --> 00:28:40,320
if we jump to the next slide

654
00:28:40,320 --> 00:28:42,659
we get our non-goals

655
00:28:42,659 --> 00:28:44,400
so one of the things in the

656
00:28:44,400 --> 00:28:46,980
specification is that yes there was a

657
00:28:46,980 --> 00:28:48,480
lot of history

658
00:28:48,480 --> 00:28:51,240
um Netscape Microsoft Etc at the end of

659
00:28:51,240 --> 00:28:53,279
the day this particular speaker

660
00:28:53,279 --> 00:28:57,120
specification only focuses on proving

661
00:28:57,120 --> 00:29:00,059
you have a private key it doesn't go

662
00:29:00,059 --> 00:29:03,120
into Keygen it doesn't go into a search

663
00:29:03,120 --> 00:29:04,679
enroll which was the name of the

664
00:29:04,679 --> 00:29:06,480
Microsoft implementation

665
00:29:06,480 --> 00:29:08,700
that is a little history of where it

666
00:29:08,700 --> 00:29:11,340
came from and how we got here

667
00:29:11,340 --> 00:29:13,200
um however that ultimately isn't

668
00:29:13,200 --> 00:29:15,720
important in the spec we do not want to

669
00:29:15,720 --> 00:29:18,960
change the format it works entirely fine

670
00:29:18,960 --> 00:29:21,480
as it is so if you jump to the next

671
00:29:21,480 --> 00:29:22,799
slide

672
00:29:22,799 --> 00:29:25,620
where next is the question that we're

673
00:29:25,620 --> 00:29:30,439
asking at this point okay Michael

674
00:29:32,340 --> 00:29:34,620
St John's um one of the things we

675
00:29:34,620 --> 00:29:35,940
encountered

676
00:29:35,940 --> 00:29:39,179
fairly recently was the issue about

677
00:29:39,179 --> 00:29:42,360
dealing with proving possession of

678
00:29:42,360 --> 00:29:45,360
non-signing keys

679
00:29:45,360 --> 00:29:47,520
is that something you just don't want to

680
00:29:47,520 --> 00:29:48,480
do here

681
00:29:48,480 --> 00:29:49,799
it's

682
00:29:49,799 --> 00:29:51,000
the

683
00:29:51,000 --> 00:29:54,539
that is another problem so we would like

684
00:29:54,539 --> 00:29:58,320
to solve other problems but our primary

685
00:29:58,320 --> 00:30:02,340
thing is to make what exists today a

686
00:30:02,340 --> 00:30:04,799
standard because it's I'm quite sure

687
00:30:04,799 --> 00:30:06,899
that whoever invented it in 1990

688
00:30:06,899 --> 00:30:10,140
whenever intended it to be a standard

689
00:30:10,140 --> 00:30:12,299
and they didn't get that far

690
00:30:12,299 --> 00:30:14,880
so we're sort of coming decades later

691
00:30:14,880 --> 00:30:17,240
and sort of finishing the job

692
00:30:17,240 --> 00:30:19,500
there are certain things that we're

693
00:30:19,500 --> 00:30:22,200
probably not going to solve or maybe we

694
00:30:22,200 --> 00:30:25,980
can solve in a further iteration

695
00:30:25,980 --> 00:30:30,360
of this but certainly the first goal out

696
00:30:30,360 --> 00:30:31,980
of the door is to standardize what's

697
00:30:31,980 --> 00:30:34,440
there so that people can then use the

698
00:30:34,440 --> 00:30:36,000
code confidently knowing that it's not

699
00:30:36,000 --> 00:30:39,899
going to get ripped out of openssl so on

700
00:30:39,899 --> 00:30:42,240
okay Eric so as I understand it you

701
00:30:42,240 --> 00:30:43,559
don't want to change the format at all

702
00:30:43,559 --> 00:30:45,360
right that is correct so the correct

703
00:30:45,360 --> 00:30:47,159
venue for that is an informational RSC

704
00:30:47,159 --> 00:30:49,679
published for 80 sponsorship

705
00:30:49,679 --> 00:30:52,140
um uh so um I will say I have some

706
00:30:52,140 --> 00:30:53,760
doubts about the merits of this idea but

707
00:30:53,760 --> 00:30:55,440
like fortunately we don't debate those

708
00:30:55,440 --> 00:30:57,419
um I agree documenting is some value and

709
00:30:57,419 --> 00:30:58,860
the correct menu for that is the v80

710
00:30:58,860 --> 00:31:01,200
sponsorship if you want to start if you

711
00:31:01,200 --> 00:31:02,880
want to screw with it then we can talk

712
00:31:02,880 --> 00:31:05,820
about standardizing it but but um if

713
00:31:05,820 --> 00:31:07,020
we're just gonna like rubber stamp it

714
00:31:07,020 --> 00:31:07,980
write it down somewhere that's already

715
00:31:07,980 --> 00:31:10,919
okay Jonathan

716
00:31:10,919 --> 00:31:14,340
uh I I agree with Eric obviously the uh

717
00:31:14,340 --> 00:31:15,720
connect correct thing is just

718
00:31:15,720 --> 00:31:17,880
informational RFC

719
00:31:17,880 --> 00:31:19,860
um but if you are

720
00:31:19,860 --> 00:31:22,380
changing something I.E changing the use

721
00:31:22,380 --> 00:31:25,799
of md5 then you are not documenting

722
00:31:25,799 --> 00:31:27,840
current practice

723
00:31:27,840 --> 00:31:31,200
so md5 has historical practice and its

724
00:31:31,200 --> 00:31:33,000
practice of someone who made an

725
00:31:33,000 --> 00:31:36,059
implementation where this was part of an

726
00:31:36,059 --> 00:31:37,799
implementation is there an

727
00:31:37,799 --> 00:31:40,860
implementation that exists today that is

728
00:31:40,860 --> 00:31:45,059
not using md5 yes so openssl is fixed it

729
00:31:45,059 --> 00:31:48,059
cannot use md5

730
00:31:48,059 --> 00:31:50,100
um anybody who implements Keygen today

731
00:31:50,100 --> 00:31:52,740
would need to have a field that says

732
00:31:52,740 --> 00:31:54,779
what kind of hash would you like to give

733
00:31:54,779 --> 00:31:57,299
me this in as opposed to just because

734
00:31:57,299 --> 00:31:58,980
previously it was an oversight whoever

735
00:31:58,980 --> 00:32:01,559
did this 20 years ago they just

736
00:32:01,559 --> 00:32:03,480
hard-coded mt5 because it's good enough

737
00:32:03,480 --> 00:32:05,820
for everybody so all it needed was a

738
00:32:05,820 --> 00:32:09,960
hash equals name of hash so this isn't a

739
00:32:09,960 --> 00:32:11,460
huge

740
00:32:11,460 --> 00:32:13,140
um it isn't a huge blocker because

741
00:32:13,140 --> 00:32:15,720
there's nothing in spkc that says you

742
00:32:15,720 --> 00:32:17,940
have to use a particular hash there's a

743
00:32:17,940 --> 00:32:19,679
field that just says what hash did you

744
00:32:19,679 --> 00:32:21,179
use

745
00:32:21,179 --> 00:32:23,460
um so from that perspective I think it

746
00:32:23,460 --> 00:32:25,380
is quite we have to be quite I mean we

747
00:32:25,380 --> 00:32:27,539
as the Royal we of writing the spec have

748
00:32:27,539 --> 00:32:30,740
to be quite careful about not conflating

749
00:32:30,740 --> 00:32:33,899
misuse in the past where someone uh

750
00:32:33,899 --> 00:32:37,260
hard-coded a hash to what this spec

751
00:32:37,260 --> 00:32:39,299
um tries to achieve and that's just here

752
00:32:39,299 --> 00:32:40,799
is a message format

753
00:32:40,799 --> 00:32:43,020
the message format doesn't

754
00:32:43,020 --> 00:32:45,600
yeah so a hash to you you can you can

755
00:32:45,600 --> 00:32:48,960
write an informational RFC document it

756
00:32:48,960 --> 00:32:51,179
um if if you want to change it there are

757
00:32:51,179 --> 00:32:52,679
about a billion and one different

758
00:32:52,679 --> 00:32:55,620
options that already exist today that do

759
00:32:55,620 --> 00:32:57,120
basically this

760
00:32:57,120 --> 00:33:00,000
yeah so we don't want to change it okay

761
00:33:00,000 --> 00:33:01,980
Robert

762
00:33:01,980 --> 00:33:05,539
in the point of not wanting to change it

763
00:33:05,539 --> 00:33:08,640
there are a couple things probably which

764
00:33:08,640 --> 00:33:10,679
make an awful lot of sense that should

765
00:33:10,679 --> 00:33:13,140
be there which are not for instance a

766
00:33:13,140 --> 00:33:15,539
time stamp so I would recommend that

767
00:33:15,539 --> 00:33:18,240
your document say not just we're

768
00:33:18,240 --> 00:33:21,299
following the format not changing it but

769
00:33:21,299 --> 00:33:25,019
also how you deal with or or or accept

770
00:33:25,019 --> 00:33:27,600
that you don't have those other fields

771
00:33:27,600 --> 00:33:29,760
that you're accepting that this format

772
00:33:29,760 --> 00:33:32,399
doesn't have them and why it is an

773
00:33:32,399 --> 00:33:36,659
acceptable practice not to have them

774
00:33:36,659 --> 00:33:40,500
yes I think that this sort of so we have

775
00:33:40,500 --> 00:33:44,039
code that exists today we've specified

776
00:33:44,039 --> 00:33:46,320
the specification of how the code works

777
00:33:46,320 --> 00:33:48,899
today this is a very compelling reason

778
00:33:48,899 --> 00:33:51,360
to change it what would be great is to

779
00:33:51,360 --> 00:33:52,860
change it in such a way that it is

780
00:33:52,860 --> 00:33:54,779
backwards compatible

781
00:33:54,779 --> 00:33:57,360
um but certainly yes and I what I would

782
00:33:57,360 --> 00:33:59,700
like to do is get your guidance as to

783
00:33:59,700 --> 00:34:02,340
where we go next in the long term yeah

784
00:34:02,340 --> 00:34:04,980
yeah it's like uh your doc I would

785
00:34:04,980 --> 00:34:07,200
really would like if you if you

786
00:34:07,200 --> 00:34:09,179
take a couple of these key points and

787
00:34:09,179 --> 00:34:11,399
say yes it would be nice if we had them

788
00:34:11,399 --> 00:34:12,899
we're not having and here's why it's

789
00:34:12,899 --> 00:34:15,359
it's reasonably okay to move forward

790
00:34:15,359 --> 00:34:17,040
without them

791
00:34:17,040 --> 00:34:19,500
yes okay because essentially The

792
00:34:19,500 --> 00:34:21,119
Challenge part I think the idea behind

793
00:34:21,119 --> 00:34:23,040
the challenge was that that was your

794
00:34:23,040 --> 00:34:24,719
your

795
00:34:24,719 --> 00:34:27,179
um we're not going to we're not going to

796
00:34:27,179 --> 00:34:30,239
replay this somebody else may replay it

797
00:34:30,239 --> 00:34:33,480
yeah so I think a potential possible

798
00:34:33,480 --> 00:34:35,820
challenge could be a combination of

799
00:34:35,820 --> 00:34:38,219
something and a timestamp but it's a

800
00:34:38,219 --> 00:34:40,320
potential challenge so

801
00:34:40,320 --> 00:34:44,339
whether we add an explicit timestamp or

802
00:34:44,339 --> 00:34:45,899
whether we just say if you would like a

803
00:34:45,899 --> 00:34:47,219
timestamp put it in the challenge

804
00:34:47,219 --> 00:34:48,899
because the challenge is just a straight

805
00:34:48,899 --> 00:34:51,418
so this I get as an example there's

806
00:34:51,418 --> 00:34:52,859
probably more that I don't know about

807
00:34:52,859 --> 00:34:54,599
and would be good if you had text

808
00:34:54,599 --> 00:34:57,420
discussing that yes I definitely

809
00:34:57,420 --> 00:34:59,280
feedback is something we'd like at this

810
00:34:59,280 --> 00:35:00,960
point yeah

811
00:35:00,960 --> 00:35:02,820
so I just want to ask a couple questions

812
00:35:02,820 --> 00:35:03,960
this Inc

813
00:35:03,960 --> 00:35:05,520
this thing I don't know no it does not

814
00:35:05,520 --> 00:35:08,040
include not include Keygen okay so then

815
00:35:08,040 --> 00:35:10,560
I'm not interested

816
00:35:10,560 --> 00:35:11,880
Daniel

817
00:35:11,880 --> 00:35:14,700
I I am interested in kitchen but in

818
00:35:14,700 --> 00:35:16,800
terms of this specification

819
00:35:16,800 --> 00:35:20,540
it's it's separate

820
00:35:20,640 --> 00:35:23,099
um I just wanted to I know I'm not

821
00:35:23,099 --> 00:35:25,020
getting Keygen back I that's that's the

822
00:35:25,020 --> 00:35:26,820
thing that right but Keygen is the thing

823
00:35:26,820 --> 00:35:28,800
I need but I know I'm not getting it so

824
00:35:28,800 --> 00:35:33,119
it's okay so Daniel go ahead sorry

825
00:35:33,119 --> 00:35:34,440
um so

826
00:35:34,440 --> 00:35:36,599
uh this is for dispatch questions this

827
00:35:36,599 --> 00:35:39,240
is clearly uh informational because No

828
00:35:39,240 --> 00:35:40,740
One's Gonna Get actual Change Control if

829
00:35:40,740 --> 00:35:43,020
the goal is just to write it down and I

830
00:35:43,020 --> 00:35:44,760
really think I mean I'm going to agree

831
00:35:44,760 --> 00:35:47,760
with Bob that the lack of context for

832
00:35:47,760 --> 00:35:50,339
this uh challenge protocol is pretty

833
00:35:50,339 --> 00:35:51,960
problematic from what we currently know

834
00:35:51,960 --> 00:35:53,880
about how to design protocols but I'm

835
00:35:53,880 --> 00:35:55,020
going to disagree with Bob that the

836
00:35:55,020 --> 00:35:56,880
thing to do is to write down here's how

837
00:35:56,880 --> 00:35:58,680
to do it right within this I think the

838
00:35:58,680 --> 00:35:59,700
thing to write down is security

839
00:35:59,700 --> 00:36:02,040
considerations that say here it's

840
00:36:02,040 --> 00:36:03,720
missing all this context we know better

841
00:36:03,720 --> 00:36:05,820
than how to do this today you shouldn't

842
00:36:05,820 --> 00:36:07,500
use this you should use some other

843
00:36:07,500 --> 00:36:09,839
protocol uh if it's going to be written

844
00:36:09,839 --> 00:36:10,800
down I really think the security

845
00:36:10,800 --> 00:36:12,480
consideration need to call out the fact

846
00:36:12,480 --> 00:36:14,640
that this is is missing stuff we've

847
00:36:14,640 --> 00:36:16,500
learned the hard way over the last 15

848
00:36:16,500 --> 00:36:18,599
years

849
00:36:18,599 --> 00:36:20,820
okay Stephen all right so Stephen

850
00:36:20,820 --> 00:36:23,520
Farrell I'm still confused so you say

851
00:36:23,520 --> 00:36:26,460
this kijan is not part of this is it for

852
00:36:26,460 --> 00:36:29,099
something else or is it only for I just

853
00:36:29,099 --> 00:36:31,500
I'm confused so key gen key gen is a

854
00:36:31,500 --> 00:36:35,460
superset of spkc so spk C Keygen is the

855
00:36:35,460 --> 00:36:37,140
I understand that over overarching

856
00:36:37,140 --> 00:36:41,040
overarching process of browsers and and

857
00:36:41,040 --> 00:36:43,640
requests sure the keys we generated Etc

858
00:36:43,640 --> 00:36:46,980
spkc is purely the message that gets

859
00:36:46,980 --> 00:36:48,780
sent from the browser to the same thing

860
00:36:48,780 --> 00:36:51,119
I possess the private but if you don't

861
00:36:51,119 --> 00:36:53,579
want to use it for a key gen what do you

862
00:36:53,579 --> 00:36:55,380
wanted to use it for I I'm just confused

863
00:36:55,380 --> 00:36:57,060
and I the dispatch answer is different

864
00:36:57,060 --> 00:36:59,220
depending on the answer so it depends

865
00:36:59,220 --> 00:37:01,680
that there's certain things like if you

866
00:37:01,680 --> 00:37:04,020
have an app of some kind probably not a

867
00:37:04,020 --> 00:37:05,339
browser because generally the browsers

868
00:37:05,339 --> 00:37:06,960
don't let you do this but if you had an

869
00:37:06,960 --> 00:37:09,420
app of some kind that told

870
00:37:09,420 --> 00:37:12,780
that said to your your DNS provider your

871
00:37:12,780 --> 00:37:14,640
Dane provider I would like to roll over

872
00:37:14,640 --> 00:37:17,760
my key and I would like to prove that I

873
00:37:17,760 --> 00:37:19,619
possess the old key I'm going to tell

874
00:37:19,619 --> 00:37:21,720
you a new key here's proof of possession

875
00:37:21,720 --> 00:37:24,240
of my old key please update my new key

876
00:37:24,240 --> 00:37:27,420
this could potentially be used in a in a

877
00:37:27,420 --> 00:37:30,119
in a system like that without inventing

878
00:37:30,119 --> 00:37:33,480
from scratch a mechanism to prove that

879
00:37:33,480 --> 00:37:37,380
you possess a key so this this code this

880
00:37:37,380 --> 00:37:39,599
ability is built into libraries all of

881
00:37:39,599 --> 00:37:41,579
the rest of it if you wanted if you had

882
00:37:41,579 --> 00:37:45,180
that use case and I certainly will do in

883
00:37:45,180 --> 00:37:48,480
the future is is the ability to go I

884
00:37:48,480 --> 00:37:50,460
have this key and I can prove it and I

885
00:37:50,460 --> 00:37:52,800
don't need to write that from scratch I

886
00:37:52,800 --> 00:37:53,880
need I can just use this Library

887
00:37:53,880 --> 00:37:56,760
function which depends upon this I get

888
00:37:56,760 --> 00:37:58,560
it now so I think on that basis I would

889
00:37:58,560 --> 00:38:00,420
say no action because we have lots of

890
00:38:00,420 --> 00:38:02,099
choices to do this whether you have just

891
00:38:02,099 --> 00:38:03,619
as many implementations as far as I know

892
00:38:03,619 --> 00:38:07,020
or even more so that I would think no

893
00:38:07,020 --> 00:38:09,359
action on that basis

894
00:38:09,359 --> 00:38:10,820
okay

895
00:38:10,820 --> 00:38:13,020
thank you

896
00:38:13,020 --> 00:38:17,099
good Richard do you have a comment

897
00:38:17,099 --> 00:38:19,380
no I was just gonna summarize the

898
00:38:19,380 --> 00:38:20,700
discussion so far and then hand it off

899
00:38:20,700 --> 00:38:21,900
to Roman

900
00:38:21,900 --> 00:38:23,280
um yeah Stephen Stephen's closing

901
00:38:23,280 --> 00:38:24,480
comment and understanding it seems like

902
00:38:24,480 --> 00:38:26,700
there's general you know the general

903
00:38:26,700 --> 00:38:28,680
direction of the room is toward um you

904
00:38:28,680 --> 00:38:30,300
know open estate his sponsorship at the

905
00:38:30,300 --> 00:38:32,099
informational level but I'll let Roman

906
00:38:32,099 --> 00:38:34,619
uh comment on his uh willingness to

907
00:38:34,619 --> 00:38:36,300
sponsor it

908
00:38:36,300 --> 00:38:39,320
hi Roman Julio one of the Securities

909
00:38:39,320 --> 00:38:43,140
yeah in the spirit of making sure open

910
00:38:43,140 --> 00:38:45,119
source implementations of crypto stuff

911
00:38:45,119 --> 00:38:47,460
are well documented in interop and this

912
00:38:47,460 --> 00:38:49,320
is a small document and as we talked on

913
00:38:49,320 --> 00:38:51,420
the list that we are documenting an ASM

914
00:38:51,420 --> 00:38:54,119
one format and providing good advice on

915
00:38:54,119 --> 00:38:55,859
top of that and nothing more I'll be

916
00:38:55,859 --> 00:38:57,599
sponsored as information

917
00:38:57,599 --> 00:39:00,260
thank you

918
00:39:00,260 --> 00:39:03,000
one thing I'll also capture in the

919
00:39:03,000 --> 00:39:04,320
summary for the minutes though is that

920
00:39:04,320 --> 00:39:05,760
it's going to be important to get the

921
00:39:05,760 --> 00:39:07,200
security considerations right here I

922
00:39:07,200 --> 00:39:08,700
think there's a bunch of notes in the

923
00:39:08,700 --> 00:39:12,180
chat and it was um raised by by Bob and

924
00:39:12,180 --> 00:39:12,900
um

925
00:39:12,900 --> 00:39:15,780
I forget who else have been like um that

926
00:39:15,780 --> 00:39:18,060
yeah this is clearly something that has

927
00:39:18,060 --> 00:39:19,680
sharp edges and then you know if you're

928
00:39:19,680 --> 00:39:21,540
going to integrated a new app that you

929
00:39:21,540 --> 00:39:24,180
should be very careful with it so I

930
00:39:24,180 --> 00:39:26,400
think that's I hope the the authors can

931
00:39:26,400 --> 00:39:28,200
take that feedback and adjust

932
00:39:28,200 --> 00:39:31,040
accordingly

933
00:39:31,260 --> 00:39:35,160
okay good thank you thank you very much

934
00:39:35,160 --> 00:39:37,819
Tom

935
00:39:39,420 --> 00:39:43,079
hello everyone my name is Tom Franco I'm

936
00:39:43,079 --> 00:39:45,540
affiliated with arpa2.net

937
00:39:45,540 --> 00:39:47,339
um I'm also new here so thanks for the

938
00:39:47,339 --> 00:39:49,800
opportunity to uh have some time here to

939
00:39:49,800 --> 00:39:52,020
pitch our draft

940
00:39:52,020 --> 00:39:54,599
um we have been working uh next slide

941
00:39:54,599 --> 00:39:57,540
please uh on a draft about a TLS

942
00:39:57,540 --> 00:40:00,660
extension called TLS kbh

943
00:40:00,660 --> 00:40:03,359
um I don't have the time to go into all

944
00:40:03,359 --> 00:40:05,700
the technical details but I really would

945
00:40:05,700 --> 00:40:09,119
like to have some feedback on the idea

946
00:40:09,119 --> 00:40:11,359
in general Is it feasible or not

947
00:40:11,359 --> 00:40:14,339
and where it should land either in a

948
00:40:14,339 --> 00:40:15,960
work group or in an independent stream

949
00:40:15,960 --> 00:40:18,660
or not at all so feel free to roast me

950
00:40:18,660 --> 00:40:22,020
if it's bogus so I'm going to give you a

951
00:40:22,020 --> 00:40:24,480
short introduction into TLS kdh what it

952
00:40:24,480 --> 00:40:25,380
is

953
00:40:25,380 --> 00:40:28,560
um describe some abstract use cases and

954
00:40:28,560 --> 00:40:31,200
then have a short discussion next slide

955
00:40:31,200 --> 00:40:33,379
please

956
00:40:33,540 --> 00:40:36,240
so we've been drafting a specification

957
00:40:36,240 --> 00:40:39,260
on a TLS extension that enables

958
00:40:39,260 --> 00:40:42,960
kerberos-based authentication for TLS we

959
00:40:42,960 --> 00:40:45,140
call it kerberized diffie-hellman

960
00:40:45,140 --> 00:40:48,000
and we basically combine the worlds of

961
00:40:48,000 --> 00:40:50,300
Kerberos and TLS

962
00:40:50,300 --> 00:40:52,859
without going into all the details the

963
00:40:52,859 --> 00:40:55,859
idea is that you get your ticket from

964
00:40:55,859 --> 00:40:57,200
the KDC

965
00:40:57,200 --> 00:41:01,400
and use that in a TLS handshake

966
00:41:01,400 --> 00:41:04,800
to get a nice Channel binding and and

967
00:41:04,800 --> 00:41:07,500
use the ticket to mutually authenticate

968
00:41:07,500 --> 00:41:11,160
both parties next slide please

969
00:41:11,160 --> 00:41:13,339
thank you

970
00:41:13,880 --> 00:41:17,640
so we've defined two modes of operation

971
00:41:17,640 --> 00:41:21,240
um kdh only that means that you use only

972
00:41:21,240 --> 00:41:23,640
the the client ticket to a mutually

973
00:41:23,640 --> 00:41:25,740
authenticate the server and the the

974
00:41:25,740 --> 00:41:27,720
client

975
00:41:27,720 --> 00:41:30,180
um and KDA enhanced that means that you

976
00:41:30,180 --> 00:41:32,640
have a regular server to client

977
00:41:32,640 --> 00:41:34,680
authentication based on a certificate

978
00:41:34,680 --> 00:41:37,800
for example x509 and you enhance that

979
00:41:37,800 --> 00:41:40,740
with a client ticket to have Cobra's

980
00:41:40,740 --> 00:41:42,359
authentication as well

981
00:41:42,359 --> 00:41:45,740
next slide base please

982
00:41:46,079 --> 00:41:48,240
so what could be potential use cases

983
00:41:48,240 --> 00:41:51,240
without going into much of the concrete

984
00:41:51,240 --> 00:41:52,920
cases

985
00:41:52,920 --> 00:41:55,380
kdh so Kerber space authentication could

986
00:41:55,380 --> 00:41:58,880
be an alternative to a pki

987
00:41:58,880 --> 00:42:01,920
as well as pre-shaped keys

988
00:42:01,920 --> 00:42:04,560
so it depends what what you need what

989
00:42:04,560 --> 00:42:06,660
your security requirements are but there

990
00:42:06,660 --> 00:42:08,280
are certain use cases where you want the

991
00:42:08,280 --> 00:42:11,040
centrally managed system where you have

992
00:42:11,040 --> 00:42:14,900
a KDC to to manage your users

993
00:42:15,599 --> 00:42:17,280
um a nice side effect of of

994
00:42:17,280 --> 00:42:19,079
kerberos-based authentication and the

995
00:42:19,079 --> 00:42:20,700
channel binding that we have achieved is

996
00:42:20,700 --> 00:42:23,220
that you also Harden your TLS channel

997
00:42:23,220 --> 00:42:25,280
for for Quantum Computing attacks

998
00:42:25,280 --> 00:42:27,540
because you can see that with a

999
00:42:27,540 --> 00:42:29,460
symmetric entropy

1000
00:42:29,460 --> 00:42:31,380
so that could also be an interesting use

1001
00:42:31,380 --> 00:42:33,420
case

1002
00:42:33,420 --> 00:42:35,940
um the other way around we can protect

1003
00:42:35,940 --> 00:42:39,000
the Kerberos sessions with TLS and then

1004
00:42:39,000 --> 00:42:41,339
achieve perfect forward secrecy which

1005
00:42:41,339 --> 00:42:43,619
was also not possible currently

1006
00:42:43,619 --> 00:42:47,400
and we could use TLS kvh as a spinago

1007
00:42:47,400 --> 00:42:49,880
alternative or replacement

1008
00:42:49,880 --> 00:42:52,619
whatever you want

1009
00:42:52,619 --> 00:42:55,260
um because we we achieved basically

1010
00:42:55,260 --> 00:42:57,119
um this this authentication on the

1011
00:42:57,119 --> 00:43:00,000
transport level instead of on the

1012
00:43:00,000 --> 00:43:01,980
application Level

1013
00:43:01,980 --> 00:43:04,380
next slide please

1014
00:43:04,380 --> 00:43:06,960
so there was it in a nutshell

1015
00:43:06,960 --> 00:43:07,800
um

1016
00:43:07,800 --> 00:43:10,200
the question is is this a viable idea is

1017
00:43:10,200 --> 00:43:12,599
it is it feasible is applicable we have

1018
00:43:12,599 --> 00:43:15,180
our own ideas about this but your

1019
00:43:15,180 --> 00:43:18,119
experienced um

1020
00:43:18,119 --> 00:43:21,000
input is very welcome

1021
00:43:21,000 --> 00:43:24,240
um and if we should proceed

1022
00:43:24,240 --> 00:43:26,339
where should we go and if we should not

1023
00:43:26,339 --> 00:43:28,319
proceed then

1024
00:43:28,319 --> 00:43:30,240
too bad

1025
00:43:30,240 --> 00:43:31,680
hey Eric

1026
00:43:31,680 --> 00:43:33,720
um I I don't know yet if it's viable um

1027
00:43:33,720 --> 00:43:35,339
it should go to TLS

1028
00:43:35,339 --> 00:43:37,200
um so I mean I I skim this draft and

1029
00:43:37,200 --> 00:43:38,819
like I was sufficiently like unsure

1030
00:43:38,819 --> 00:43:40,920
about some of the details that like that

1031
00:43:40,920 --> 00:43:42,420
that may become an illusion they should

1032
00:43:42,420 --> 00:43:43,920
go to TLS if you go anywhere just like

1033
00:43:43,920 --> 00:43:45,960
you know like so the the bit where

1034
00:43:45,960 --> 00:43:46,980
you're like we're like doing your own

1035
00:43:46,980 --> 00:43:48,720
signature with like the with like the

1036
00:43:48,720 --> 00:43:49,980
Mac on the keys and stuff it's like

1037
00:43:49,980 --> 00:43:51,180
maybe it's right maybe it's wrong but

1038
00:43:51,180 --> 00:43:52,800
like it's got to be like we have to look

1039
00:43:52,800 --> 00:43:55,319
at it more carefully so um I I guess you

1040
00:43:55,319 --> 00:43:58,500
know uh my question would be like

1041
00:43:58,500 --> 00:44:01,800
I I I think I think now when this comes

1042
00:44:01,800 --> 00:44:02,700
to say you lost my particular question

1043
00:44:02,700 --> 00:44:04,500
will be he was interested um so I think

1044
00:44:04,500 --> 00:44:06,240
like you know when you completely lost

1045
00:44:06,240 --> 00:44:07,260
you should be prepared to say like these

1046
00:44:07,260 --> 00:44:08,339
are the following implementers and they

1047
00:44:08,339 --> 00:44:09,839
want to use it but um I mean

1048
00:44:09,839 --> 00:44:11,220
conceptually there's no problem with the

1049
00:44:11,220 --> 00:44:13,020
Kerberos CLS binding and as you know

1050
00:44:13,020 --> 00:44:14,160
we've done them before

1051
00:44:14,160 --> 00:44:15,540
um the details obviously matter and so

1052
00:44:15,540 --> 00:44:16,800
the question of whether ITF should

1053
00:44:16,800 --> 00:44:18,599
bother to like invest in it it kind of

1054
00:44:18,599 --> 00:44:20,520
comes down to like um uh you know

1055
00:44:20,520 --> 00:44:22,020
because it has done interest

1056
00:44:22,020 --> 00:44:23,520
um I will say that it's possible you can

1057
00:44:23,520 --> 00:44:25,859
get it down I mean I mean I think of the

1058
00:44:25,859 --> 00:44:26,940
problem a little bit um and it's

1059
00:44:26,940 --> 00:44:28,079
possible you can get it down to be a

1060
00:44:28,079 --> 00:44:29,220
very small extension in which case maybe

1061
00:44:29,220 --> 00:44:30,420
you could do it just on your own without

1062
00:44:30,420 --> 00:44:31,980
a Taos review

1063
00:44:31,980 --> 00:44:33,599
um but if it's as complicated as this

1064
00:44:33,599 --> 00:44:35,339
document is ends up having to be then it

1065
00:44:35,339 --> 00:44:36,900
will have to be in TLS

1066
00:44:36,900 --> 00:44:39,800
all right Alex

1067
00:44:41,940 --> 00:44:44,640
hi Alex shanahovsky I was curious if you

1068
00:44:44,640 --> 00:44:46,260
were using this for authentication or

1069
00:44:46,260 --> 00:44:48,300
authorization or both because I think

1070
00:44:48,300 --> 00:44:50,160
that somewhat changes what I think about

1071
00:44:50,160 --> 00:44:51,599
this

1072
00:44:51,599 --> 00:44:54,240
well primarily authentication but of

1073
00:44:54,240 --> 00:44:55,500
course you can also do authorization

1074
00:44:55,500 --> 00:44:59,280
with with uh uh Kerberos

1075
00:44:59,280 --> 00:45:01,140
um but that's up to the the end

1076
00:45:01,140 --> 00:45:03,480
applications so basically you can use

1077
00:45:03,480 --> 00:45:05,700
the authenticated channel to to do

1078
00:45:05,700 --> 00:45:07,200
Kerberos things

1079
00:45:07,200 --> 00:45:08,040
um

1080
00:45:08,040 --> 00:45:10,079
right I I don't think you should try to

1081
00:45:10,079 --> 00:45:11,819
use this for authorization because that

1082
00:45:11,819 --> 00:45:13,800
works very poorly with the web like the

1083
00:45:13,800 --> 00:45:15,420
whole browser model which is why client

1084
00:45:15,420 --> 00:45:17,160
search are disfavored is because you end

1085
00:45:17,160 --> 00:45:19,319
up with really bad user experience so

1086
00:45:19,319 --> 00:45:20,940
like I'm kind of curious if you want

1087
00:45:20,940 --> 00:45:22,079
this for machine to machine

1088
00:45:22,079 --> 00:45:23,640
communication or if you're looking at

1089
00:45:23,640 --> 00:45:25,319
this for like end user to server

1090
00:45:25,319 --> 00:45:27,540
communication because I think that if

1091
00:45:27,540 --> 00:45:29,880
you're looking at it for like end user

1092
00:45:29,880 --> 00:45:31,079
to machine communication you're

1093
00:45:31,079 --> 00:45:32,280
basically going to run into the same

1094
00:45:32,280 --> 00:45:33,599
problems that we had with just happy and

1095
00:45:33,599 --> 00:45:35,220
espnego and I would say that this is not

1096
00:45:35,220 --> 00:45:36,839
worthwhile but if you're looking at it

1097
00:45:36,839 --> 00:45:38,640
from machine to machine my immediate

1098
00:45:38,640 --> 00:45:40,140
question is why aren't you using the

1099
00:45:40,140 --> 00:45:41,579
existing just happy Channel binding

1100
00:45:41,579 --> 00:45:44,099
mechanisms with TLS and like let TLS do

1101
00:45:44,099 --> 00:45:46,400
TLS stuff

1102
00:45:46,400 --> 00:45:49,800
that's a good question

1103
00:45:49,800 --> 00:45:50,880
I

1104
00:45:50,880 --> 00:45:53,160
I don't have a direct answer to that we

1105
00:45:53,160 --> 00:45:54,839
can have a discussion about about that

1106
00:45:54,839 --> 00:45:57,980
offline thank you

1107
00:45:59,220 --> 00:46:03,119
yes so uh lots of years ago ipsec had a

1108
00:46:03,119 --> 00:46:06,000
similar proposal and uh you have the

1109
00:46:06,000 --> 00:46:09,180
Kink RFC 4430 uh kerberized initiation

1110
00:46:09,180 --> 00:46:12,359
of keys is kind of an alternative to the

1111
00:46:12,359 --> 00:46:15,420
internet's key exchange and this saw

1112
00:46:15,420 --> 00:46:16,740
really

1113
00:46:16,740 --> 00:46:19,319
close to zero implementation and close

1114
00:46:19,319 --> 00:46:22,140
to zero uh use because nobody really

1115
00:46:22,140 --> 00:46:23,880
wanted it so

1116
00:46:23,880 --> 00:46:27,359
um for this proposal is there any uh

1117
00:46:27,359 --> 00:46:29,280
real I don't know customers people who

1118
00:46:29,280 --> 00:46:32,579
really want to use TLS with the Kerber

1119
00:46:32,579 --> 00:46:34,200
squeeze

1120
00:46:34,200 --> 00:46:35,819
yeah that's of course a very valid

1121
00:46:35,819 --> 00:46:36,960
question

1122
00:46:36,960 --> 00:46:39,060
um we within our own project we have

1123
00:46:39,060 --> 00:46:41,339
some some use cases for this

1124
00:46:41,339 --> 00:46:43,859
um we also heard some some interest from

1125
00:46:43,859 --> 00:46:46,319
the the radius group

1126
00:46:46,319 --> 00:46:48,420
um they're also looking for Alternatives

1127
00:46:48,420 --> 00:46:50,520
um and Kerberos was was a was an

1128
00:46:50,520 --> 00:46:53,400
interesting idea they said and we also

1129
00:46:53,400 --> 00:46:55,920
reached out to Microsoft because they're

1130
00:46:55,920 --> 00:46:57,420
doing a lot with active directory

1131
00:46:57,420 --> 00:46:58,700
Kerberos

1132
00:46:58,700 --> 00:47:01,560
single sign-on applications so we're

1133
00:47:01,560 --> 00:47:04,500
still discussing that but we do think

1134
00:47:04,500 --> 00:47:06,900
there there is a group of users that

1135
00:47:06,900 --> 00:47:09,119
might be interested

1136
00:47:09,119 --> 00:47:10,500
thank you

1137
00:47:10,500 --> 00:47:13,700
okay Jonathan

1138
00:47:13,800 --> 00:47:16,980
so the the obvious dispatch method would

1139
00:47:16,980 --> 00:47:19,980
be sent to uh TLS

1140
00:47:19,980 --> 00:47:23,040
um but having just looked at the spec

1141
00:47:23,040 --> 00:47:25,560
this this does changes to the TLs key

1142
00:47:25,560 --> 00:47:27,480
schedule and

1143
00:47:27,480 --> 00:47:30,540
um changes it breaks some of the

1144
00:47:30,540 --> 00:47:31,740
assumptions used in order of the

1145
00:47:31,740 --> 00:47:33,060
security proofs

1146
00:47:33,060 --> 00:47:36,480
so if you do do want to do this

1147
00:47:36,480 --> 00:47:38,760
um can you come with like a formal

1148
00:47:38,760 --> 00:47:40,079
analysis and a proof that you haven't

1149
00:47:40,079 --> 00:47:42,359
broken everything because I don't want

1150
00:47:42,359 --> 00:47:45,119
to have to redo that to ages yeah that's

1151
00:47:45,119 --> 00:47:46,859
also a very valid point

1152
00:47:46,859 --> 00:47:48,240
um and it was one of the details I

1153
00:47:48,240 --> 00:47:49,680
didn't want to go into right now because

1154
00:47:49,680 --> 00:47:52,560
indeed we have an alternative for TLS

1155
00:47:52,560 --> 00:47:55,619
one too and for TLS one three because

1156
00:47:55,619 --> 00:47:57,300
it's the key schedule is completely

1157
00:47:57,300 --> 00:47:59,220
different

1158
00:47:59,220 --> 00:47:59,819
um

1159
00:47:59,819 --> 00:48:03,180
um we don't think we break the break uh

1160
00:48:03,180 --> 00:48:05,819
any any security but of course a formal

1161
00:48:05,819 --> 00:48:07,560
verification would be nice

1162
00:48:07,560 --> 00:48:09,900
um you you break the security proof

1163
00:48:09,900 --> 00:48:12,060
right so there's a proof that TLS is one

1164
00:48:12,060 --> 00:48:13,980
secure is secure

1165
00:48:13,980 --> 00:48:16,859
you definitely break the proof

1166
00:48:16,859 --> 00:48:19,020
um so you'd be using something you don't

1167
00:48:19,020 --> 00:48:20,640
know is secure which is not the same as

1168
00:48:20,640 --> 00:48:23,339
is not secure yeah no that's true and

1169
00:48:23,339 --> 00:48:25,140
that that should be checked of course

1170
00:48:25,140 --> 00:48:28,500
and for TLS one three uh we we

1171
00:48:28,500 --> 00:48:31,200
generalize the mechanism that we used uh

1172
00:48:31,200 --> 00:48:32,760
such that it can also be used for other

1173
00:48:32,760 --> 00:48:36,420
mechanisms than than tlskdh to to

1174
00:48:36,420 --> 00:48:38,339
provide entropy

1175
00:48:38,339 --> 00:48:41,040
um so that would require proof for every

1176
00:48:41,040 --> 00:48:43,500
every new mechanism

1177
00:48:43,500 --> 00:48:45,359
um but that's definitely something we

1178
00:48:45,359 --> 00:48:48,240
will look into and uh

1179
00:48:48,240 --> 00:48:50,640
uh we also have capacity within our

1180
00:48:50,640 --> 00:48:53,339
project to do so yeah yeah so um the

1181
00:48:53,339 --> 00:48:55,560
other thing I would say is I have a now

1182
00:48:55,560 --> 00:48:58,980
expired draft on uh TLS

1183
00:48:58,980 --> 00:49:00,839
uh extended key schedule

1184
00:49:00,839 --> 00:49:02,819
which lets you inject stuff into the key

1185
00:49:02,819 --> 00:49:04,380
schedule with a proof that you're not

1186
00:49:04,380 --> 00:49:07,560
breaking anything so maybe like consider

1187
00:49:07,560 --> 00:49:08,579
using that

1188
00:49:08,579 --> 00:49:11,400
yeah thank you

1189
00:49:11,400 --> 00:49:13,619
okay Richard do you want to summarize

1190
00:49:13,619 --> 00:49:14,940
this

1191
00:49:14,940 --> 00:49:16,800
yeah so that brings us to the end of the

1192
00:49:16,800 --> 00:49:17,940
queue thanks to everyone for your

1193
00:49:17,940 --> 00:49:19,380
comments

1194
00:49:19,380 --> 00:49:21,900
um sounds like our outcome here is is no

1195
00:49:21,900 --> 00:49:25,200
immediate action um this um if if there

1196
00:49:25,200 --> 00:49:28,440
is some work to do here it'll be in TLS

1197
00:49:28,440 --> 00:49:30,960
um and questions are heard that we would

1198
00:49:30,960 --> 00:49:32,579
we need to address in the TLs working

1199
00:49:32,579 --> 00:49:34,079
group or you know

1200
00:49:34,079 --> 00:49:35,700
is there an audience for this what's

1201
00:49:35,700 --> 00:49:37,980
what's the market for it as it were and

1202
00:49:37,980 --> 00:49:39,420
you know how do we verify that it's

1203
00:49:39,420 --> 00:49:40,500
secure so

1204
00:49:40,500 --> 00:49:42,119
it sounds like some good feedback I

1205
00:49:42,119 --> 00:49:43,260
think that kind of indicates the next

1206
00:49:43,260 --> 00:49:45,180
steps is to um start some discussion on

1207
00:49:45,180 --> 00:49:47,280
the TLs list

1208
00:49:47,280 --> 00:49:50,599
so thanks for the presentation

1209
00:49:50,760 --> 00:49:52,740
thanks Tom and any other comments from

1210
00:49:52,740 --> 00:49:53,940
you Tom

1211
00:49:53,940 --> 00:49:55,740
you're good no thank you very much for

1212
00:49:55,740 --> 00:49:58,020
all the feedback and we will follow up

1213
00:49:58,020 --> 00:50:00,540
yeah thank you

1214
00:50:00,540 --> 00:50:02,819
uh Richard do you know

1215
00:50:02,819 --> 00:50:05,640
provide a summary and and then I'll let

1216
00:50:05,640 --> 00:50:09,300
Roman kind of wrap it up here for us

1217
00:50:09,300 --> 00:50:11,160
sounds good so

1218
00:50:11,160 --> 00:50:14,640
by my notes uh our outcomes today on

1219
00:50:14,640 --> 00:50:16,440
httpa

1220
00:50:16,440 --> 00:50:19,140
um there is no action for now you need

1221
00:50:19,140 --> 00:50:20,400
some some more thinking about how to

1222
00:50:20,400 --> 00:50:23,160
integrate with the the stack and on you

1223
00:50:23,160 --> 00:50:24,660
know who needs to be engaged on that so

1224
00:50:24,660 --> 00:50:27,240
no action for now on httpa

1225
00:50:27,240 --> 00:50:29,520
secure routingly skips because uh we

1226
00:50:29,520 --> 00:50:31,020
didn't have a presenter

1227
00:50:31,020 --> 00:50:35,700
um s p k c a i think there is an a at

1228
00:50:35,700 --> 00:50:39,660
the s p k a c there we go that's proof

1229
00:50:39,660 --> 00:50:41,339
of possession thing

1230
00:50:41,339 --> 00:50:44,579
um we agreed to send that to over to the

1231
00:50:44,579 --> 00:50:48,059
ads for 80 sponsorship as informational

1232
00:50:48,059 --> 00:50:49,680
um with a bunch of notes about security

1233
00:50:49,680 --> 00:50:52,020
considerations and use of this and new

1234
00:50:52,020 --> 00:50:53,280
stuff

1235
00:50:53,280 --> 00:50:55,380
um and on tlskdh the feedback was that

1236
00:50:55,380 --> 00:50:58,440
this is uh work should happen in TLS if

1237
00:50:58,440 --> 00:51:00,540
anywhere so uh discussion should happen

1238
00:51:00,540 --> 00:51:01,980
on the TLs list

1239
00:51:01,980 --> 00:51:05,240
so that over room

1240
00:51:05,339 --> 00:51:09,180
okay thank you Richard and

1241
00:51:09,180 --> 00:51:11,099
Ron

1242
00:51:11,099 --> 00:51:13,500
hi everyone Roman genillio uh and so I'm

1243
00:51:13,500 --> 00:51:15,240
kind of speaking on behalf of kind of

1244
00:51:15,240 --> 00:51:18,000
polymy uh probably uh I think two weeks

1245
00:51:18,000 --> 00:51:20,040
ago you saw an announcement on the SEC

1246
00:51:20,040 --> 00:51:22,020
dispatch list about how we are

1247
00:51:22,020 --> 00:51:24,720
rethinking the approach to leadership

1248
00:51:24,720 --> 00:51:27,300
sect dispatch is one of those standing

1249
00:51:27,300 --> 00:51:29,940
working groups it will endure hopefully

1250
00:51:29,940 --> 00:51:31,619
forever it's been quite a bit of a

1251
00:51:31,619 --> 00:51:33,359
success in helping us manage the

1252
00:51:33,359 --> 00:51:35,640
portfolio of things coming in to the to

1253
00:51:35,640 --> 00:51:37,800
the SEC area we hope it's been made it a

1254
00:51:37,800 --> 00:51:40,500
little bit easier to bring new ideas

1255
00:51:40,500 --> 00:51:42,300
kind of for those proponents that may

1256
00:51:42,300 --> 00:51:44,400
not know what the entry point is what we

1257
00:51:44,400 --> 00:51:46,079
didn't want of course is for those in

1258
00:51:46,079 --> 00:51:47,460
the leadership team to have to be there

1259
00:51:47,460 --> 00:51:51,119
kind of permanently uh and so what we've

1260
00:51:51,119 --> 00:51:53,400
defined is a rotation kind of schedule

1261
00:51:53,400 --> 00:51:55,740
that that we published and so notionally

1262
00:51:55,740 --> 00:51:57,960
going forward the thinking was that we

1263
00:51:57,960 --> 00:51:59,760
would be looking at terms pushing around

1264
00:51:59,760 --> 00:52:02,040
kind of four four years time and those

1265
00:52:02,040 --> 00:52:04,740
chairs would rotate as as that occurred

1266
00:52:04,740 --> 00:52:06,480
of course if something changed they

1267
00:52:06,480 --> 00:52:09,119
could step out earlier so we made some

1268
00:52:09,119 --> 00:52:10,260
kind of announcements kind of relative

1269
00:52:10,260 --> 00:52:13,559
to that so welcome to rifat uh kind of

1270
00:52:13,559 --> 00:52:14,940
thank you so much for your willingness

1271
00:52:14,940 --> 00:52:17,760
uh willingness to serve I wanted to

1272
00:52:17,760 --> 00:52:20,160
again thank publicly Mohit Who had who

1273
00:52:20,160 --> 00:52:21,900
had stepped out a little bit earlier due

1274
00:52:21,900 --> 00:52:23,760
to his uh really great new job

1275
00:52:23,760 --> 00:52:24,900
opportunities

1276
00:52:24,900 --> 00:52:27,420
uh and with the rotation that we've set

1277
00:52:27,420 --> 00:52:29,520
up uh exiting out of this working group

1278
00:52:29,520 --> 00:52:32,280
will be Richard please flip your uh your

1279
00:52:32,280 --> 00:52:35,160
video on and the long-term plan uh

1280
00:52:35,160 --> 00:52:36,780
starting kind of this time sorry

1281
00:52:36,780 --> 00:52:39,359
mid-summer next year at ITF 117. uh

1282
00:52:39,359 --> 00:52:40,859
Kathleen will be approaching your

1283
00:52:40,859 --> 00:52:43,140
foreign so whoever the ads at the time

1284
00:52:43,140 --> 00:52:45,119
will make the next selection and we hope

1285
00:52:45,119 --> 00:52:47,280
that this really creates that pipeline

1286
00:52:47,280 --> 00:52:50,400
of rotation into the organization

1287
00:52:50,400 --> 00:52:52,619
what I want to say here kind of enclose

1288
00:52:52,619 --> 00:52:55,619
is Richard please get on the video uh I

1289
00:52:55,619 --> 00:52:58,140
wanted to say thank you to Richard uh I

1290
00:52:58,140 --> 00:53:00,180
think the SEC dispatch process has been

1291
00:53:00,180 --> 00:53:02,760
really an amazing addition to to this to

1292
00:53:02,760 --> 00:53:04,680
SEC process I know as an idea it's been

1293
00:53:04,680 --> 00:53:06,599
invaluable to get your community kind of

1294
00:53:06,599 --> 00:53:08,819
feedback and I think from what I've

1295
00:53:08,819 --> 00:53:10,319
heard from folks trying to bring new

1296
00:53:10,319 --> 00:53:12,000
work here this is very much to help them

1297
00:53:12,000 --> 00:53:14,339
that does not happen in a vacuum that

1298
00:53:14,339 --> 00:53:15,780
really starts with kind of strong

1299
00:53:15,780 --> 00:53:18,000
facilitation by the chairs and Richard

1300
00:53:18,000 --> 00:53:19,859
you've been here since the beginning and

1301
00:53:19,859 --> 00:53:21,780
helping us first launch that process and

1302
00:53:21,780 --> 00:53:24,000
really show us how it's done in the

1303
00:53:24,000 --> 00:53:25,680
since we since we started almost four

1304
00:53:25,680 --> 00:53:27,540
and a half years ago so as you step down

1305
00:53:27,540 --> 00:53:28,980
I wanted to kind of say thank you for

1306
00:53:28,980 --> 00:53:30,540
your leadership and helping us manage

1307
00:53:30,540 --> 00:53:32,099
the area so you're not in the room but

1308
00:53:32,099 --> 00:53:35,540
we're gonna clap for you anyway

1309
00:53:36,900 --> 00:53:39,480
I I appreciate it Roman back when I was

1310
00:53:39,480 --> 00:53:42,780
uh art ad I was a beneficiary of the

1311
00:53:42,780 --> 00:53:45,180
dispatch process in the art uh our art

1312
00:53:45,180 --> 00:53:47,700
area so I definitely was supportive of

1313
00:53:47,700 --> 00:53:49,680
having a similar thing in the security

1314
00:53:49,680 --> 00:53:51,059
area and was definitely to help set that

1315
00:53:51,059 --> 00:53:54,420
up so happy to help and happy to have uh

1316
00:53:54,420 --> 00:53:55,920
new leadership here so thanks again to

1317
00:53:55,920 --> 00:53:57,420
your thought for stocking up and to

1318
00:53:57,420 --> 00:53:58,859
those of you in the crowd

1319
00:53:58,859 --> 00:53:59,819
um you know I think we're going to have

1320
00:53:59,819 --> 00:54:02,099
another role here in a year or so start

1321
00:54:02,099 --> 00:54:03,660
thinking about uh whether this might be

1322
00:54:03,660 --> 00:54:05,460
of interest to you

1323
00:54:05,460 --> 00:54:07,619
awesome thanks Richard

1324
00:54:07,619 --> 00:54:10,940
any other business

1325
00:54:12,540 --> 00:54:16,319
okay and I also want to thank Richard as

1326
00:54:16,319 --> 00:54:18,359
a as a co-chair for the last few years

1327
00:54:18,359 --> 00:54:20,400
so thank you very much

1328
00:54:20,400 --> 00:54:24,740
awesome okay thank you everyone

1329
00:54:25,020 --> 00:54:27,559
you're done

1330
00:54:52,380 --> 00:54:54,980
all right

1331
00:55:00,420 --> 00:55:03,680
so yes

1332
00:55:13,740 --> 00:55:17,720
yeah you didn't respond yet

1333
00:57:02,700 --> 00:57:05,660
foreign

