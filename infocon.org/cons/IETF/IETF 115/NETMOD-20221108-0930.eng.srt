1
00:00:06,440 --> 00:00:09,000
yeah and I'll we'll say that in the

2
00:00:09,000 --> 00:00:13,259
intro uh although uh

3
00:00:13,259 --> 00:00:15,420
we didn't synchronize that with Kent so

4
00:00:15,420 --> 00:00:17,100
we should do that even though it's time

5
00:00:17,100 --> 00:00:18,480
to start so we'll start and I'll

6
00:00:18,480 --> 00:00:20,939
interrupt cat

7
00:00:20,939 --> 00:00:23,960
CH let's begin

8
00:00:30,740 --> 00:00:34,440
Kent oh I'm gonna be I'm sorry I was

9
00:00:34,440 --> 00:00:36,899
thinking uh you were presenting

10
00:00:36,899 --> 00:00:39,899
um it is time to start the session

11
00:00:39,899 --> 00:00:44,460
I am uh Lou Burger Kent uh Watson is my

12
00:00:44,460 --> 00:00:47,760
co-chair he is uh remote and uh so

13
00:00:47,760 --> 00:00:49,739
you'll see a little bit more exposed to

14
00:00:49,739 --> 00:00:51,239
how we work things because we're not

15
00:00:51,239 --> 00:00:53,520
sitting next to each other

16
00:00:53,520 --> 00:00:56,160
um uh you'll notice that we have some

17
00:00:56,160 --> 00:00:59,100
changes in our working group structure

18
00:00:59,100 --> 00:01:01,860
or management the first is uh Joel

19
00:01:01,860 --> 00:01:05,760
jegley is uh has been has moved on as

20
00:01:05,760 --> 00:01:08,100
chair we really appreciate his service

21
00:01:08,100 --> 00:01:10,799
to the group uh recognize that thank him

22
00:01:10,799 --> 00:01:13,799
uh

23
00:01:15,080 --> 00:01:18,659
and equally we appreciate Jason who's

24
00:01:18,659 --> 00:01:20,640
sitting here uh with me who's

25
00:01:20,640 --> 00:01:23,040
volunteered to be act as our secretary

26
00:01:23,040 --> 00:01:25,700
and is already helping out

27
00:01:25,700 --> 00:01:30,119
yes okay uh thanks to both of you I

28
00:01:30,119 --> 00:01:32,340
really appreciate it

29
00:01:32,340 --> 00:01:35,659
um with that next slide

30
00:01:37,439 --> 00:01:39,540
so this is our note well uh we're the

31
00:01:39,540 --> 00:01:41,100
second day of the ietf maybe you're

32
00:01:41,100 --> 00:01:43,439
familiar with it hopefully you are if

33
00:01:43,439 --> 00:01:45,060
you're not take a look at the link on

34
00:01:45,060 --> 00:01:48,360
the bottom or go to the ietf page and uh

35
00:01:48,360 --> 00:01:50,520
look at uh make sure you're familiar

36
00:01:50,520 --> 00:01:53,220
with this it governs how we operate and

37
00:01:53,220 --> 00:01:55,680
contribute at the ietf and basically

38
00:01:55,680 --> 00:01:57,960
everything you say here or on the list

39
00:01:57,960 --> 00:02:00,000
becomes per part of our permanent record

40
00:02:00,000 --> 00:02:02,880
and is a formal contribution uh to the

41
00:02:02,880 --> 00:02:05,658
group next

42
00:02:06,000 --> 00:02:09,419
we also uh would like to remind everyone

43
00:02:09,419 --> 00:02:13,319
that we have a code of conduct that

44
00:02:13,319 --> 00:02:15,180
governs how we interact with each other

45
00:02:15,180 --> 00:02:17,340
and basically be respectful be

46
00:02:17,340 --> 00:02:19,800
professional it's okay to have a good

47
00:02:19,800 --> 00:02:22,680
technical discussion but uh remember

48
00:02:22,680 --> 00:02:25,080
that you know to work in an appropriate

49
00:02:25,080 --> 00:02:27,900
way with your peers

50
00:02:27,900 --> 00:02:32,360
and there's a BCP on that of course next

51
00:02:33,599 --> 00:02:36,120
uh for those that are in person we ask

52
00:02:36,120 --> 00:02:37,319
you two things and they're both

53
00:02:37,319 --> 00:02:40,080
highlighted on the slides on the on the

54
00:02:40,080 --> 00:02:42,180
left the screen on the left first please

55
00:02:42,180 --> 00:02:44,040
scan in

56
00:02:44,040 --> 00:02:47,099
um that covers blue sheet it also allows

57
00:02:47,099 --> 00:02:50,040
you to participate in any polling that

58
00:02:50,040 --> 00:02:51,540
we do and we will be doing that we're

59
00:02:51,540 --> 00:02:54,000
not doing hums or hands because we want

60
00:02:54,000 --> 00:02:57,000
to be fair to those who are online and

61
00:02:57,000 --> 00:02:59,340
so we'll be using the the tool so it's

62
00:02:59,340 --> 00:03:02,640
very important that you scan in the

63
00:03:02,640 --> 00:03:06,180
other is uh the policy of the ietf and

64
00:03:06,180 --> 00:03:08,819
of this meeting is you are to wear a

65
00:03:08,819 --> 00:03:10,379
mask if you are not at the front

66
00:03:10,379 --> 00:03:15,300
speaking so we uh remind you that you

67
00:03:15,300 --> 00:03:17,760
are asked to wear a mask fully and

68
00:03:17,760 --> 00:03:19,260
properly and if you need a mask they're

69
00:03:19,260 --> 00:03:20,640
at the front

70
00:03:20,640 --> 00:03:22,980
uh for those of you that are remote

71
00:03:22,980 --> 00:03:25,140
um uh you figured out where you are

72
00:03:25,140 --> 00:03:26,700
because you're you're online so that's

73
00:03:26,700 --> 00:03:28,920
great uh the only other thing is please

74
00:03:28,920 --> 00:03:31,080
keep yourself muted uh if you're not

75
00:03:31,080 --> 00:03:32,580
speaking

76
00:03:32,580 --> 00:03:35,420
uh next

77
00:03:37,260 --> 00:03:42,299
uh we will be using the uh meat Echo for

78
00:03:42,299 --> 00:03:45,180
Q control both remote and local uh

79
00:03:45,180 --> 00:03:47,400
that's to be Equitable to those who are

80
00:03:47,400 --> 00:03:49,860
uh to remote

81
00:03:49,860 --> 00:03:50,580
um

82
00:03:50,580 --> 00:03:53,099
we also ask that you join us for joint

83
00:03:53,099 --> 00:03:55,080
minute taking the link is in the the

84
00:03:55,080 --> 00:03:58,920
meet Echo chat uh it's also on the uh

85
00:03:58,920 --> 00:04:01,140
every one of our materials pages

86
00:04:01,140 --> 00:04:04,440
uh really helps to make sure that your

87
00:04:04,440 --> 00:04:07,019
comments are appropriately captured so

88
00:04:07,019 --> 00:04:08,400
if you make a comment

89
00:04:08,400 --> 00:04:10,560
please go take a look at the the notes

90
00:04:10,560 --> 00:04:11,700
and make sure

91
00:04:11,700 --> 00:04:15,360
we've got uh what you meant down

92
00:04:15,360 --> 00:04:16,680
um

93
00:04:16,680 --> 00:04:19,220
next

94
00:04:20,220 --> 00:04:24,360
uh we have uh some good discussion time

95
00:04:24,360 --> 00:04:28,020
available to us today on the uh the Hot

96
00:04:28,020 --> 00:04:29,820
Topic that we've been working on for a

97
00:04:29,820 --> 00:04:32,400
while on versioning that's the bulk

98
00:04:32,400 --> 00:04:34,500
that's the biggest session and there's

99
00:04:34,500 --> 00:04:36,960
uh three uh there's actually going to be

100
00:04:36,960 --> 00:04:39,300
three different uh speakers during that

101
00:04:39,300 --> 00:04:41,759
slot we are going to move that a little

102
00:04:41,759 --> 00:04:44,040
bit later in the session because our ID

103
00:04:44,040 --> 00:04:46,460
has to step out for about 10-15 minutes

104
00:04:46,460 --> 00:04:49,860
so when when he goes

105
00:04:49,860 --> 00:04:51,840
um uh we're gonna wait for him to come

106
00:04:51,840 --> 00:04:53,940
back to hit that very important

107
00:04:53,940 --> 00:04:56,580
discussion so uh

108
00:04:56,580 --> 00:05:00,720
uh chiffon uh uh and Oscar I don't know

109
00:05:00,720 --> 00:05:01,919
if you're both in the room hopefully

110
00:05:01,919 --> 00:05:03,720
you're both in the room

111
00:05:03,720 --> 00:05:04,979
um

112
00:05:04,979 --> 00:05:07,560
see Oscar oh perfect thank you so you

113
00:05:07,560 --> 00:05:08,940
might go a little early

114
00:05:08,940 --> 00:05:10,800
so just be prepared

115
00:05:10,800 --> 00:05:16,160
uh thank you thank you for that uh next

116
00:05:17,759 --> 00:05:21,300
so where do we stand on documents

117
00:05:21,300 --> 00:05:22,740
um

118
00:05:22,740 --> 00:05:24,900
I'm not sure I want to read through all

119
00:05:24,900 --> 00:05:28,259
of these we have uh uh I'll highlight

120
00:05:28,259 --> 00:05:30,900
the post last call ones

121
00:05:30,900 --> 00:05:32,580
um the first one is actually on the

122
00:05:32,580 --> 00:05:34,919
agenda which is great to see it's been

123
00:05:34,919 --> 00:05:36,479
stuck for a little while so that's

124
00:05:36,479 --> 00:05:38,880
awesome we need to still work out on how

125
00:05:38,880 --> 00:05:41,460
to get the second one unstuck

126
00:05:41,460 --> 00:05:42,600
um and I don't know if you want to say

127
00:05:42,600 --> 00:05:45,840
anything uh Rob or or not don't if you

128
00:05:45,840 --> 00:05:47,759
think it's good

129
00:05:47,759 --> 00:05:49,880
okay

130
00:05:52,560 --> 00:05:55,380
so uh Robertson so I'm to blame for

131
00:05:55,380 --> 00:05:58,139
these and I'd like to thank both uh

132
00:05:58,139 --> 00:06:00,120
Scott uh and Don Fussell to helping out

133
00:06:00,120 --> 00:06:01,919
pick up and they'll edit but I think the

134
00:06:01,919 --> 00:06:03,360
planner said in both of these documents

135
00:06:03,360 --> 00:06:04,979
and the plan is to try and do the first

136
00:06:04,979 --> 00:06:06,780
one first and then once that one's out

137
00:06:06,780 --> 00:06:08,100
of the way

138
00:06:08,100 --> 00:06:09,419
um we're lost well then the second one

139
00:06:09,419 --> 00:06:11,699
won't go through uh so I think there is

140
00:06:11,699 --> 00:06:13,080
a plan it's just sort of getting that

141
00:06:13,080 --> 00:06:14,880
together so it's still a strong desire

142
00:06:14,880 --> 00:06:16,080
to get these done

143
00:06:16,080 --> 00:06:18,120
okay great that's awesome

144
00:06:18,120 --> 00:06:19,380
um the next document we're going to talk

145
00:06:19,380 --> 00:06:20,880
about a little bit more I believe on the

146
00:06:20,880 --> 00:06:22,139
next slide if I remember the slides

147
00:06:22,139 --> 00:06:24,539
right and

148
00:06:24,539 --> 00:06:26,659
um

149
00:06:26,759 --> 00:06:30,720
uh the other two we've been uh we're

150
00:06:30,720 --> 00:06:32,340
actually gonna are on the agenda also so

151
00:06:32,340 --> 00:06:35,340
we're not gonna have to go with that and

152
00:06:35,340 --> 00:06:38,819
um so on the syslog uh model there's

153
00:06:38,819 --> 00:06:41,699
been an update and the question to the

154
00:06:41,699 --> 00:06:43,979
authors or what's left

155
00:06:43,979 --> 00:06:47,400
hi Joe Clark uh Cisco um good to see you

156
00:06:47,400 --> 00:06:48,900
there Jason

157
00:06:48,900 --> 00:06:51,900
um and thanks Joel the uh what's left so

158
00:06:51,900 --> 00:06:55,380
uh we think just open up a new last call

159
00:06:55,380 --> 00:06:56,940
um where we know there's some pending

160
00:06:56,940 --> 00:07:00,000
things to do but we're uh they're minor

161
00:07:00,000 --> 00:07:01,979
um and we're just holding off to get

162
00:07:01,979 --> 00:07:04,080
some last call comments

163
00:07:04,080 --> 00:07:06,180
um so I think I thought Kent you were

164
00:07:06,180 --> 00:07:08,940
going to uh open this up I I don't think

165
00:07:08,940 --> 00:07:11,280
there's anything pending on a Mahesh or

166
00:07:11,280 --> 00:07:13,860
my side but that's where we stand right

167
00:07:13,860 --> 00:07:15,979
now

168
00:07:16,020 --> 00:07:18,319
uh cancer

169
00:07:18,319 --> 00:07:21,240
sorry just quickly Joe

170
00:07:21,240 --> 00:07:24,120
um I saw a comment from Rashad regarding

171
00:07:24,120 --> 00:07:27,300
the feasibility of the solution was

172
00:07:27,300 --> 00:07:28,800
there any thoughts to what we should do

173
00:07:28,800 --> 00:07:31,139
with that comment

174
00:07:31,139 --> 00:07:34,380
um so the oh man

175
00:07:34,380 --> 00:07:36,060
I need more coffee

176
00:07:36,060 --> 00:07:39,599
um the we were talking about

177
00:07:39,599 --> 00:07:40,199
um

178
00:07:40,199 --> 00:07:42,660
ah we were talking about bringing in

179
00:07:42,660 --> 00:07:44,660
um more of the the kind of the the

180
00:07:44,660 --> 00:07:48,419
overall TCP structure um or or like

181
00:07:48,419 --> 00:07:51,240
bringing in things like proxy uh the the

182
00:07:51,240 --> 00:07:54,000
authors spoke the consensus seem to be

183
00:07:54,000 --> 00:07:56,460
that that might be Overkill uh for what

184
00:07:56,460 --> 00:07:58,620
we want to do with syslog there didn't

185
00:07:58,620 --> 00:08:01,139
seem to be a need for that but that's

186
00:08:01,139 --> 00:08:03,960
something I think for to bring up in in

187
00:08:03,960 --> 00:08:06,180
the last call what does what does the

188
00:08:06,180 --> 00:08:07,800
working group think

189
00:08:07,800 --> 00:08:09,479
um as it stands right now we weren't

190
00:08:09,479 --> 00:08:13,139
going to make that change yet we were

191
00:08:13,139 --> 00:08:14,940
just going to leave things where they

192
00:08:14,940 --> 00:08:17,460
were where we just have a uh a

193
00:08:17,460 --> 00:08:19,440
destination and a port

194
00:08:19,440 --> 00:08:22,400
okay thank you

195
00:08:26,520 --> 00:08:28,680
all right great thank you

196
00:08:28,680 --> 00:08:30,419
um

197
00:08:30,419 --> 00:08:32,700
similarly we'd like to ask if there's

198
00:08:32,700 --> 00:08:35,520
any authors online or in the room to

199
00:08:35,520 --> 00:08:38,580
give us a update on node tags and answer

200
00:08:38,580 --> 00:08:40,979
what what they think is left

201
00:08:40,979 --> 00:08:43,919
yeah for this one actually we I'm sorry

202
00:08:43,919 --> 00:08:45,420
I didn't hear your name and I can't hear

203
00:08:45,420 --> 00:08:47,940
you very well either can you hear me

204
00:08:47,940 --> 00:08:51,779
okay yeah for No Tag actually we already

205
00:08:51,779 --> 00:08:53,940
have walking group law school I think we

206
00:08:53,940 --> 00:08:57,720
adjust all the comments from uh from

207
00:08:57,720 --> 00:08:59,760
from the issue raised by the yugun

208
00:08:59,760 --> 00:09:03,420
actually we also think is nothing left

209
00:09:03,420 --> 00:09:06,000
we want to move forward but for the

210
00:09:06,000 --> 00:09:09,600
change we proposed actually uh maybe we

211
00:09:09,600 --> 00:09:11,940
need to Solitude see this some feedback

212
00:09:11,940 --> 00:09:15,240
from uh you can again haven't got a

213
00:09:15,240 --> 00:09:18,720
feedback yet yeah but the form our side

214
00:09:18,720 --> 00:09:22,519
icing is ready to move forward

215
00:09:23,339 --> 00:09:26,540
all right thank you very much

216
00:09:27,360 --> 00:09:29,640
all right uh

217
00:09:29,640 --> 00:09:32,899
uh let's move on

218
00:09:34,380 --> 00:09:36,420
Kent do you want to speak to this or you

219
00:09:36,420 --> 00:09:38,719
want me to

220
00:09:39,899 --> 00:09:41,399
um you're in the room but we work on

221
00:09:41,399 --> 00:09:44,160
this slide together okay that's

222
00:09:44,160 --> 00:09:46,080
all right so

223
00:09:46,080 --> 00:09:52,380
um there is a open issue uh on uh uh on

224
00:09:52,380 --> 00:09:53,540
the

225
00:09:53,540 --> 00:09:58,320
69.91 this the uh Kent sent mail on this

226
00:09:58,320 --> 00:10:00,540
you can go look at the link archive

227
00:10:00,540 --> 00:10:02,459
that's a little hard to type in I

228
00:10:02,459 --> 00:10:05,040
believe that was in September

229
00:10:05,040 --> 00:10:07,740
um basically there were a few points

230
00:10:07,740 --> 00:10:12,899
open we think this slide captures uh uh

231
00:10:12,899 --> 00:10:15,120
what's left and we have a proposal on

232
00:10:15,120 --> 00:10:17,760
how to move forward and not if we don't

233
00:10:17,760 --> 00:10:19,980
hear objections our intent is to move

234
00:10:19,980 --> 00:10:21,779
forward so now is your opportunity to

235
00:10:21,779 --> 00:10:23,880
object if you uh have an issue with

236
00:10:23,880 --> 00:10:26,940
what's on the slides uh the first is is

237
00:10:26,940 --> 00:10:29,399
on the with regard to the address no

238
00:10:29,399 --> 00:10:31,260
Zone discussion

239
00:10:31,260 --> 00:10:34,800
um we're going to add

240
00:10:34,800 --> 00:10:36,839
uh I'm not sure why there's a question

241
00:10:36,839 --> 00:10:39,060
mark there on that number two

242
00:10:39,060 --> 00:10:40,560
um we're going to add an IP address with

243
00:10:40,560 --> 00:10:43,380
Zone and deprecate IP address so right

244
00:10:43,380 --> 00:10:46,320
now IP address has a Zone in it that's

245
00:10:46,320 --> 00:10:49,079
caused huge amounts of confusion

246
00:10:49,079 --> 00:10:51,300
um we think the right answer is that one

247
00:10:51,300 --> 00:10:54,660
should go away and it should be replaced

248
00:10:54,660 --> 00:10:55,800
with

249
00:10:55,800 --> 00:10:57,480
uh with Zone

250
00:10:57,480 --> 00:11:01,200
yeah sorry with a name that's more

251
00:11:01,200 --> 00:11:03,000
explicit with a name that's more

252
00:11:03,000 --> 00:11:04,380
explicit

253
00:11:04,380 --> 00:11:06,660
so yes instead of being an implicit

254
00:11:06,660 --> 00:11:08,880
becomes explicit but we deprecate the

255
00:11:08,880 --> 00:11:11,339
Legacy one so it's not uh we don't break

256
00:11:11,339 --> 00:11:14,300
backwards compatibility

257
00:11:16,380 --> 00:11:17,660
um similarly

258
00:11:17,660 --> 00:11:21,180
we would like to do the same thing uh

259
00:11:21,180 --> 00:11:24,180
with date and time so we have some

260
00:11:24,180 --> 00:11:26,399
consistency there

261
00:11:26,399 --> 00:11:29,339
um between the different types

262
00:11:29,339 --> 00:11:32,700
and uh there was a discussion about a

263
00:11:32,700 --> 00:11:36,000
language tag and the conclusion was

264
00:11:36,000 --> 00:11:38,339
there wasn't really consensus in the

265
00:11:38,339 --> 00:11:41,100
working group and because there's no

266
00:11:41,100 --> 00:11:42,480
consensus we think we're going to leave

267
00:11:42,480 --> 00:11:46,140
if we recommend leaving it as is if you

268
00:11:46,140 --> 00:11:50,160
disagree or have uh any objections we

269
00:11:50,160 --> 00:11:52,260
would love to hear it now but we'd also

270
00:11:52,260 --> 00:11:54,600
like to hear it on the list

271
00:11:54,600 --> 00:11:56,579
um so you know people may not have time

272
00:11:56,579 --> 00:11:58,680
have had time today to think about it

273
00:11:58,680 --> 00:12:00,720
and react you don't have to react right

274
00:12:00,720 --> 00:12:03,180
now but if you have a reaction please

275
00:12:03,180 --> 00:12:06,319
feel free to join the queue

276
00:12:07,680 --> 00:12:09,420
that's the type of reaction we like

277
00:12:09,420 --> 00:12:11,100
because we're going to keep moving

278
00:12:11,100 --> 00:12:13,380
forward with this and we'll coordinate

279
00:12:13,380 --> 00:12:16,680
with uh Jorgen to get an update

280
00:12:16,680 --> 00:12:18,720
uh Kent you want to say anything else

281
00:12:18,720 --> 00:12:21,600
before we move on oh great no no that's

282
00:12:21,600 --> 00:12:23,339
great uh well I mean other than uh I

283
00:12:23,339 --> 00:12:25,440
mean you said but give people time to

284
00:12:25,440 --> 00:12:27,480
think about it but as you mentioned uh

285
00:12:27,480 --> 00:12:29,279
that I did send an email on September

286
00:12:29,279 --> 00:12:31,380
13th so it's been out there I think now

287
00:12:31,380 --> 00:12:33,899
for a couple months and plenty of time

288
00:12:33,899 --> 00:12:35,760
for people to think about it

289
00:12:35,760 --> 00:12:39,500
yes let's move on to the next slide

290
00:12:39,959 --> 00:12:42,899
so we had an incoming liaison from uh

291
00:12:42,899 --> 00:12:45,720
Oran we actually talked about it a

292
00:12:45,720 --> 00:12:48,300
little bit at the last meeting and then

293
00:12:48,300 --> 00:12:51,839
we never completed the action on it

294
00:12:51,839 --> 00:12:57,180
um and so uh uh there was a uh a

295
00:12:57,180 --> 00:12:58,920
proposal sent to the list I think Jason

296
00:12:58,920 --> 00:13:01,079
can you send it or you commented on it

297
00:13:01,079 --> 00:13:03,980
but we're going to continue to work to

298
00:13:03,980 --> 00:13:07,500
uh to get this out to get a response out

299
00:13:07,500 --> 00:13:10,139
and if you'd like to

300
00:13:10,139 --> 00:13:12,600
um uh contribute to it feel free to send

301
00:13:12,600 --> 00:13:15,779
a message to the list or to the chairs

302
00:13:15,779 --> 00:13:19,579
uh Alias next

303
00:13:19,680 --> 00:13:21,360
to Joanna Jason started I could just

304
00:13:21,360 --> 00:13:22,800
comment on that so that the authors

305
00:13:22,800 --> 00:13:25,079
group is actively discussing what we

306
00:13:25,079 --> 00:13:27,240
think is reasonable timeline for that so

307
00:13:27,240 --> 00:13:28,860
we are we are working to try to figure

308
00:13:28,860 --> 00:13:30,000
out a

309
00:13:30,000 --> 00:13:32,959
an estimate on that

310
00:13:36,300 --> 00:13:38,519
this is our usual slide about you know

311
00:13:38,519 --> 00:13:40,079
we've been working remote for quite a

312
00:13:40,079 --> 00:13:42,000
while we continue to do that we have

313
00:13:42,000 --> 00:13:45,000
resources available virtual meetings

314
00:13:45,000 --> 00:13:48,740
um WebEx is open open informal meetings

315
00:13:48,740 --> 00:13:51,540
uh just want everyone to be aware that

316
00:13:51,540 --> 00:13:53,399
those continue to go on and if you would

317
00:13:53,399 --> 00:13:54,480
like to participate you're always

318
00:13:54,480 --> 00:13:56,700
welcome and if you have a topic that you

319
00:13:56,700 --> 00:13:59,279
would like to start a new discussion on

320
00:13:59,279 --> 00:14:01,440
uh that's all the the working group

321
00:14:01,440 --> 00:14:03,180
resources are available to you just

322
00:14:03,180 --> 00:14:08,040
contact the uh the uh chairs Alias and

323
00:14:08,040 --> 00:14:10,860
one of us will will help you out

324
00:14:10,860 --> 00:14:13,560
and with that I think I've hit the last

325
00:14:13,560 --> 00:14:15,480
slide next

326
00:14:15,480 --> 00:14:18,019
yes

327
00:14:18,240 --> 00:14:20,040
and so we're going to move on to Scott

328
00:14:20,040 --> 00:14:23,279
Mansfield uh are we are we doing that

329
00:14:23,279 --> 00:14:26,100
now or is Rob still in the room no we're

330
00:14:26,100 --> 00:14:28,380
going we're going to Scott

331
00:14:28,380 --> 00:14:30,480
and then we're going to skip versioning

332
00:14:30,480 --> 00:14:33,019
okay

333
00:14:37,220 --> 00:14:40,940
and Scott I passed through control

334
00:14:40,940 --> 00:14:44,040
okay now I just have to figure out how

335
00:14:44,040 --> 00:14:47,339
to do that uh right keypad button

336
00:14:47,339 --> 00:14:49,620
oh okay well that's

337
00:14:49,620 --> 00:14:51,600
what thanks very much I assume that uh

338
00:14:51,600 --> 00:14:53,760
you can hear me because I'm mumbling so

339
00:14:53,760 --> 00:14:56,399
thank you very much for providing me

340
00:14:56,399 --> 00:14:59,880
with a few minutes of agenda time for

341
00:14:59,880 --> 00:15:03,060
this topic uh hopefully it will be very

342
00:15:03,060 --> 00:15:03,899
quick

343
00:15:03,899 --> 00:15:07,019
the um this is about both of the drafts

344
00:15:07,019 --> 00:15:09,540
the interface extensions Yang and the

345
00:15:09,540 --> 00:15:11,699
sub interface VLAN yang

346
00:15:11,699 --> 00:15:15,000
so I click this button I go to the next

347
00:15:15,000 --> 00:15:18,300
slide look at that so both of these

348
00:15:18,300 --> 00:15:22,860
drafts expired in January of 2021 and I

349
00:15:22,860 --> 00:15:26,220
provided the links to the data tracker

350
00:15:26,220 --> 00:15:28,560
on the previous page was the links to

351
00:15:28,560 --> 00:15:31,199
the GitHub these are the links to the

352
00:15:31,199 --> 00:15:32,760
expired drafts

353
00:15:32,760 --> 00:15:36,300
and then so last ietf there was a desire

354
00:15:36,300 --> 00:15:40,260
to progress these so Rob talked to

355
00:15:40,260 --> 00:15:44,100
Don and I about taking this up so what

356
00:15:44,100 --> 00:15:47,699
we've done so far is we've progressed

357
00:15:47,699 --> 00:15:49,199
the work on the common interface

358
00:15:49,199 --> 00:15:51,959
extension Yang there's a few things that

359
00:15:51,959 --> 00:15:54,720
that I need support on

360
00:15:54,720 --> 00:15:58,260
um uh one is I need to hear from the

361
00:15:58,260 --> 00:16:00,480
existing authors and Rob has reply to an

362
00:16:00,480 --> 00:16:02,760
email on this already but I would like

363
00:16:02,760 --> 00:16:04,800
to contact the existing authors that are

364
00:16:04,800 --> 00:16:06,300
on the draft and find out if they want

365
00:16:06,300 --> 00:16:09,180
to remain on the draft and then uh Don

366
00:16:09,180 --> 00:16:11,519
and I would be editors because we didn't

367
00:16:11,519 --> 00:16:13,560
really create the content necessarily

368
00:16:13,560 --> 00:16:15,480
we're just modifying it

369
00:16:15,480 --> 00:16:19,199
and then I also need to talk to someone

370
00:16:19,199 --> 00:16:21,959
about how we how we can get access to

371
00:16:21,959 --> 00:16:24,540
the repository and the C Camp working

372
00:16:24,540 --> 00:16:27,300
group I'm I'm using GitHub and I can

373
00:16:27,300 --> 00:16:31,019
think directly in uh but I don't have

374
00:16:31,019 --> 00:16:34,699
access to do that to these uh to the

375
00:16:34,699 --> 00:16:38,160
GitHub for these net mod drafts so

376
00:16:38,160 --> 00:16:41,399
anyone that has an idea how to do that

377
00:16:41,399 --> 00:16:43,740
uh please I'll take care of it and

378
00:16:43,740 --> 00:16:44,880
hopefully have it done before you're

379
00:16:44,880 --> 00:16:47,579
done speaking excellent that would be

380
00:16:47,579 --> 00:16:51,720
fabulous and so the next thing is

381
00:16:51,720 --> 00:16:54,180
uh they're in the common interface

382
00:16:54,180 --> 00:16:56,519
extension draft we're trying to use get

383
00:16:56,519 --> 00:16:58,259
the way it was meant to be used so we

384
00:16:58,259 --> 00:17:00,120
have issues

385
00:17:00,120 --> 00:17:02,459
um written down there are six open

386
00:17:02,459 --> 00:17:05,280
issues I've put them all here and

387
00:17:05,280 --> 00:17:07,679
provided notes on on the ones that we've

388
00:17:07,679 --> 00:17:10,859
accepted the ones we haven't accepted I

389
00:17:10,859 --> 00:17:13,199
have created a new draft but it's in my

390
00:17:13,199 --> 00:17:16,380
local my local clone and once I have

391
00:17:16,380 --> 00:17:19,740
access I can push it up and then I can

392
00:17:19,740 --> 00:17:20,400
um

393
00:17:20,400 --> 00:17:23,280
uh create a new version of that draft

394
00:17:23,280 --> 00:17:26,160
and send it out and so

395
00:17:26,160 --> 00:17:27,660
um please take a look at if you're

396
00:17:27,660 --> 00:17:29,340
interested in this draft please take a

397
00:17:29,340 --> 00:17:31,380
look at the resolutions here once I get

398
00:17:31,380 --> 00:17:33,360
it pushed up you'll be able to read the

399
00:17:33,360 --> 00:17:35,280
draft and see the changes that we've

400
00:17:35,280 --> 00:17:37,559
made there's a couple of things here

401
00:17:37,559 --> 00:17:39,960
that there's like we need some more

402
00:17:39,960 --> 00:17:43,260
description on something so looking for

403
00:17:43,260 --> 00:17:45,660
the experts to provide a little more

404
00:17:45,660 --> 00:17:47,900
input on that

405
00:17:47,900 --> 00:17:51,780
next slide is on the sub interface VLAN

406
00:17:51,780 --> 00:17:54,240
we have I think there's also six issues

407
00:17:54,240 --> 00:17:55,919
on this one we haven't progressed any

408
00:17:55,919 --> 00:17:57,600
work on that I want to finish the work

409
00:17:57,600 --> 00:18:00,120
like Rob said finish the work on the one

410
00:18:00,120 --> 00:18:03,059
and then contact the authors and get

411
00:18:03,059 --> 00:18:05,460
permission so that's the same thing for

412
00:18:05,460 --> 00:18:07,860
that draft as well so our plan is to

413
00:18:07,860 --> 00:18:09,960
progress the drafts communicate with the

414
00:18:09,960 --> 00:18:12,539
authors and and hopefully have great

415
00:18:12,539 --> 00:18:16,320
news to report in iitf 116. that's all I

416
00:18:16,320 --> 00:18:18,740
had thanks

417
00:18:19,020 --> 00:18:21,480
uh that's awesome thank you uh please

418
00:18:21,480 --> 00:18:23,880
type at me your GitHub ID

419
00:18:23,880 --> 00:18:27,419
and uh I'll take care of that um

420
00:18:27,419 --> 00:18:29,940
administrative action with that we are

421
00:18:29,940 --> 00:18:33,380
going to skip over versioning

422
00:18:33,380 --> 00:18:36,419
and uh chiffon

423
00:18:36,419 --> 00:18:39,919
I think you are going to be next

424
00:18:42,840 --> 00:18:46,459
so Kent number four perfect

425
00:18:52,200 --> 00:18:53,940
and if I mispronounced your name I would

426
00:18:53,940 --> 00:18:56,299
apologize

427
00:18:56,820 --> 00:18:59,400
so hello everyone and this is Susan from

428
00:18:59,400 --> 00:19:02,520
Huawei and this presentation is about

429
00:19:02,520 --> 00:19:04,980
the young station and mental annotations

430
00:19:04,980 --> 00:19:08,120
or immutable flag

431
00:19:09,960 --> 00:19:13,740
uh yeah so to give a very brief recap

432
00:19:13,740 --> 00:19:16,919
the use cases we are focusing on this

433
00:19:16,919 --> 00:19:20,220
work is about their uh two kinds of use

434
00:19:20,220 --> 00:19:24,299
cases the first one that there are some

435
00:19:24,299 --> 00:19:27,000
conflict true data nodes which are

436
00:19:27,000 --> 00:19:29,820
immutable and I said in immutable I mean

437
00:19:29,820 --> 00:19:33,299
that is not not allowed to be created

438
00:19:33,299 --> 00:19:37,500
deleted or updated and is independent of

439
00:19:37,500 --> 00:19:42,539
how it is how is instantiated and the

440
00:19:42,539 --> 00:19:45,900
Second Use case is that when some data

441
00:19:45,900 --> 00:19:48,900
nodes they exist in multiple instances

442
00:19:48,900 --> 00:19:52,200
in the data tree for example is a list

443
00:19:52,200 --> 00:19:54,419
or leave list that is not while some of

444
00:19:54,419 --> 00:19:56,760
their instances are read only While

445
00:19:56,760 --> 00:20:00,840
others are not so our objective is

446
00:20:00,840 --> 00:20:03,559
reading about the documentation

447
00:20:03,559 --> 00:20:07,740
availability so we'd like to define a

448
00:20:07,740 --> 00:20:09,900
standard magnetum to allow the server

449
00:20:09,900 --> 00:20:13,039
over to document their existing

450
00:20:13,039 --> 00:20:16,260
immutable configuration data so provide

451
00:20:16,260 --> 00:20:19,200
more readability about their immutable

452
00:20:19,200 --> 00:20:22,440
ability characteristic but we need to

453
00:20:22,440 --> 00:20:25,260
emphasize that this work is doesn't mean

454
00:20:25,260 --> 00:20:28,740
that we are encouraging such adding the

455
00:20:28,740 --> 00:20:31,620
immutable flag behavior for thorough

456
00:20:31,620 --> 00:20:35,840
implementation so next slide please

457
00:20:36,000 --> 00:20:39,840
yeah before we are trying to get into

458
00:20:39,840 --> 00:20:43,020
the solution and I like to mention that

459
00:20:43,020 --> 00:20:45,720
there is a definition about the

460
00:20:45,720 --> 00:20:48,480
immutable here and I said immutable we

461
00:20:48,480 --> 00:20:50,760
mean that there is a schema or instance

462
00:20:50,760 --> 00:20:53,820
node property indicating that the

463
00:20:53,820 --> 00:20:56,640
configuration data is not allowed to be

464
00:20:56,640 --> 00:20:59,760
created deleted or updated I know that

465
00:20:59,760 --> 00:21:02,240
it might be a little different

466
00:21:02,240 --> 00:21:05,760
from our understanding of this immutable

467
00:21:05,760 --> 00:21:08,220
world so the question for the working

468
00:21:08,220 --> 00:21:10,080
group is that can we do better about

469
00:21:10,080 --> 00:21:11,760
this terminology

470
00:21:11,760 --> 00:21:15,419
so the solution we have we have defined

471
00:21:15,419 --> 00:21:19,200
a immutable Young's tension and immune

472
00:21:19,200 --> 00:21:21,780
for Magneton notation and for the young

473
00:21:21,780 --> 00:21:25,440
extension there is an argument statement

474
00:21:25,440 --> 00:21:29,159
named exceptions which is defined to

475
00:21:29,159 --> 00:21:32,159
indicate that specific operations are

476
00:21:32,159 --> 00:21:33,440
permitted

477
00:21:33,440 --> 00:21:37,740
and the operations I mean create update

478
00:21:37,740 --> 00:21:40,500
and delete for example if a

479
00:21:40,500 --> 00:21:44,460
configuration data it can only created a

480
00:21:44,460 --> 00:21:47,159
be creative and deleted and

481
00:21:47,159 --> 00:21:49,500
and modification is not allowed so you

482
00:21:49,500 --> 00:21:52,620
can say that immutable and create and

483
00:21:52,620 --> 00:21:55,500
delete it and for the immutablement data

484
00:21:55,500 --> 00:21:56,539
annotation

485
00:21:56,539 --> 00:21:59,520
currently will Define this annotation as

486
00:21:59,520 --> 00:22:03,500
a type of Boolean and is indicate that

487
00:22:03,500 --> 00:22:07,740
once a particular instance data node is

488
00:22:07,740 --> 00:22:10,980
created then the client cannot update or

489
00:22:10,980 --> 00:22:13,799
delete it and we have restricted that

490
00:22:13,799 --> 00:22:17,760
this this annotation is only applied to

491
00:22:17,760 --> 00:22:20,340
the leave a list or leave list entries

492
00:22:20,340 --> 00:22:23,700
or instance inside a particular entries

493
00:22:23,700 --> 00:22:27,020
okay next slide please

494
00:22:27,480 --> 00:22:30,059
okay so about the document updates

495
00:22:30,059 --> 00:22:33,120
according to the comments we received in

496
00:22:33,120 --> 00:22:36,480
last ITF meeting so we had met several

497
00:22:36,480 --> 00:22:39,539
updates for example we refreshed the

498
00:22:39,539 --> 00:22:43,260
document and avoid using some statement

499
00:22:43,260 --> 00:22:46,559
like servers must reject which seems

500
00:22:46,559 --> 00:22:48,539
like we are adding some more

501
00:22:48,539 --> 00:22:52,020
restrictions just trying to clarify that

502
00:22:52,020 --> 00:22:54,240
this document aims to provide more

503
00:22:54,240 --> 00:22:57,059
visibility into their server exist

504
00:22:57,059 --> 00:23:00,120
immutable Behavior and the second one is

505
00:23:00,120 --> 00:23:02,240
that clarifying

506
00:23:02,240 --> 00:23:05,159
explicitly in the draft that the

507
00:23:05,159 --> 00:23:07,500
decision to an immutable node in running

508
00:23:07,500 --> 00:23:10,620
which is instantiated in system and

509
00:23:10,620 --> 00:23:12,900
copied into running should always be

510
00:23:12,900 --> 00:23:15,900
allowed because from the device

511
00:23:15,900 --> 00:23:18,600
perspective it even it is deleted from

512
00:23:18,600 --> 00:23:21,600
running and can still prevent it in

513
00:23:21,600 --> 00:23:23,179
system and

514
00:23:23,179 --> 00:23:27,080
present in operationality in use so

515
00:23:27,080 --> 00:23:30,360
there is nowhere to actually delete the

516
00:23:30,360 --> 00:23:33,720
configuration in system so that's okay

517
00:23:33,720 --> 00:23:36,720
for a clients to delete that in running

518
00:23:36,720 --> 00:23:39,960
and we also clarify that right access

519
00:23:39,960 --> 00:23:42,960
restriction due to the general young

520
00:23:42,960 --> 00:23:45,299
rules has no need to be marked as

521
00:23:45,299 --> 00:23:49,080
immutable for example okay live in a

522
00:23:49,080 --> 00:23:52,260
list you cannot modify it or dedicate if

523
00:23:52,260 --> 00:23:54,600
the instance by the instance is created

524
00:23:54,600 --> 00:23:56,880
but there's no need to remark as

525
00:23:56,880 --> 00:23:58,200
immutable

526
00:23:58,200 --> 00:24:01,080
and also clarify that how the immute

527
00:24:01,080 --> 00:24:04,080
both lag interacts with the neck

528
00:24:04,080 --> 00:24:05,760
magnetome

529
00:24:05,760 --> 00:24:09,179
if a specified data node for instance is

530
00:24:09,179 --> 00:24:11,340
marked as immutable we think that neck

531
00:24:11,340 --> 00:24:14,100
cannot override it to create the delete

532
00:24:14,100 --> 00:24:15,960
or update access

533
00:24:15,960 --> 00:24:20,600
yeah so next slide please

534
00:24:21,960 --> 00:24:24,720
yeah and another app that is that we

535
00:24:24,720 --> 00:24:27,659
have add a new section to discuss the

536
00:24:27,659 --> 00:24:31,440
inheritance of immutability so the draft

537
00:24:31,440 --> 00:24:34,320
teacher said that only unless otherwise

538
00:24:34,320 --> 00:24:37,080
specified through the immutability in

539
00:24:37,080 --> 00:24:39,539
the hierarchy just is inherited

540
00:24:39,539 --> 00:24:41,760
downwards towards the leaf or the list

541
00:24:41,760 --> 00:24:45,299
of terminal notes but you need to

542
00:24:45,299 --> 00:24:47,220
mention that if a node has a child

543
00:24:47,220 --> 00:24:50,220
element then the non-modification to

544
00:24:50,220 --> 00:24:52,980
that node just means that is any child

545
00:24:52,980 --> 00:24:55,500
elements is not allowed to be created

546
00:24:55,500 --> 00:24:57,900
update or deleted

547
00:24:57,900 --> 00:25:01,260
uh however there might be a desire to

548
00:25:01,260 --> 00:25:04,799
override the immutability of a

549
00:25:04,799 --> 00:25:07,679
particular descendant node so we do

550
00:25:07,679 --> 00:25:10,500
allow it to be overrated

551
00:25:10,500 --> 00:25:13,620
if this container node would have a

552
00:25:13,620 --> 00:25:16,860
different immutability with its access

553
00:25:16,860 --> 00:25:19,740
to node so for example it's a list

554
00:25:19,740 --> 00:25:23,280
definition and with immutable

555
00:25:23,280 --> 00:25:26,520
youngstation which means that this list

556
00:25:26,520 --> 00:25:29,700
instance is not allowed to be created

557
00:25:29,700 --> 00:25:33,120
updated or deleted by the client but

558
00:25:33,120 --> 00:25:35,760
there is only if an important number it

559
00:25:35,760 --> 00:25:38,820
has a immutable with the exceptions for

560
00:25:38,820 --> 00:25:42,360
create updated deleted so in this case

561
00:25:42,360 --> 00:25:44,760
the part number instance is allowed to

562
00:25:44,760 --> 00:25:49,140
be created updated in the list entry so

563
00:25:49,140 --> 00:25:52,440
this is about it override

564
00:25:52,440 --> 00:25:56,400
okay just in the queue oh yeah

565
00:25:56,400 --> 00:25:58,320
um just a question if

566
00:25:58,320 --> 00:26:00,860
um if it's inherited is The annotation

567
00:26:00,860 --> 00:26:03,179
when you fetch the data is The

568
00:26:03,179 --> 00:26:05,279
annotation then

569
00:26:05,279 --> 00:26:06,299
um

570
00:26:06,299 --> 00:26:08,100
not the extension but The annotation on

571
00:26:08,100 --> 00:26:10,740
the data is it's inherited as well would

572
00:26:10,740 --> 00:26:12,299
it only be shown at the top or is it

573
00:26:12,299 --> 00:26:14,760
would be shown for every sub element

574
00:26:14,760 --> 00:26:17,700
uh yeah currently we are thinking that

575
00:26:17,700 --> 00:26:20,700
these inheritance are only applied to

576
00:26:20,700 --> 00:26:24,240
the the youngstation mode defined in the

577
00:26:24,240 --> 00:26:27,600
young module and because it might be a

578
00:26:27,600 --> 00:26:29,940
too strict way if we just

579
00:26:29,940 --> 00:26:32,880
if we just defined as a metadata

580
00:26:32,880 --> 00:26:35,159
annotation and there's no way to

581
00:26:35,159 --> 00:26:37,919
override this limitability of this

582
00:26:37,919 --> 00:26:40,799
descendant node so just well right now

583
00:26:40,799 --> 00:26:43,159
we are only considered applied to the

584
00:26:43,159 --> 00:26:45,539
youngstation about this inheritance

585
00:26:45,539 --> 00:26:47,640
sorry I wasn't I wasn't talking about

586
00:26:47,640 --> 00:26:50,580
the um the override it was more

587
00:26:50,580 --> 00:26:54,120
um if if an object in the schema if at

588
00:26:54,120 --> 00:26:56,159
the list entry it's immutable and you

589
00:26:56,159 --> 00:26:57,840
read the data are you going to see The

590
00:26:57,840 --> 00:27:00,419
annotation against every leaf in the

591
00:27:00,419 --> 00:27:03,120
list or just

592
00:27:03,120 --> 00:27:04,919
when you read the data are you going to

593
00:27:04,919 --> 00:27:06,419
see The annotation against every item in

594
00:27:06,419 --> 00:27:07,380
the list

595
00:27:07,380 --> 00:27:09,000
every leaf in the list or just against

596
00:27:09,000 --> 00:27:11,820
the list entry at the top and this entry

597
00:27:11,820 --> 00:27:14,940
at the top just the top yeah yeah

598
00:27:14,940 --> 00:27:18,260
so next slide please

599
00:27:20,100 --> 00:27:23,460
yeah so uh for the next step of this

600
00:27:23,460 --> 00:27:26,159
work the authors think that this work

601
00:27:26,159 --> 00:27:28,679
has been cooked for a little while and

602
00:27:28,679 --> 00:27:33,320
we and there is a real word and common

603
00:27:33,320 --> 00:27:36,720
issues about this work so we'd like to

604
00:27:36,720 --> 00:27:38,940
request to the working group for

605
00:27:38,940 --> 00:27:40,260
adoption

606
00:27:40,260 --> 00:27:41,520
okay

607
00:27:41,520 --> 00:27:44,658
so next slide please

608
00:27:46,159 --> 00:27:49,580
go ahead and gun

609
00:27:51,600 --> 00:27:53,159
thank you but maybe I should wait today

610
00:27:53,159 --> 00:27:54,960
and I thought they was getting close to

611
00:27:54,960 --> 00:27:57,539
that I wait for for a minute yeah I I

612
00:27:57,539 --> 00:28:00,059
think this is my last

613
00:28:00,059 --> 00:28:02,520
all right yeah go ahead

614
00:28:02,520 --> 00:28:05,279
so I mean it's always nice to see that

615
00:28:05,279 --> 00:28:06,840
we are documenting the behavior of

616
00:28:06,840 --> 00:28:08,340
service and all that so that's I mean

617
00:28:08,340 --> 00:28:10,740
the basic stance here this is not ideal

618
00:28:10,740 --> 00:28:12,360
but we want to describe to the world how

619
00:28:12,360 --> 00:28:14,520
things work let's let's go to

620
00:28:14,520 --> 00:28:18,299
but uh I'm

621
00:28:18,299 --> 00:28:20,039
I have concerned that this is getting

622
00:28:20,039 --> 00:28:22,080
closer to the SNMP world where there are

623
00:28:22,080 --> 00:28:23,820
lots of special rules and tricks and

624
00:28:23,820 --> 00:28:26,580
stuff you have to I mean you can't write

625
00:28:26,580 --> 00:28:29,820
an SNMP client that can manage a device

626
00:28:29,820 --> 00:28:32,100
uh automatically you have to have

627
00:28:32,100 --> 00:28:34,260
hand-coded sort of as an MP5 script that

628
00:28:34,260 --> 00:28:35,640
knows about all the restrictions and

629
00:28:35,640 --> 00:28:38,100
constraints and the impossibilities

630
00:28:38,100 --> 00:28:40,320
so okay immutable eyes I think that's

631
00:28:40,320 --> 00:28:41,460
fine but

632
00:28:41,460 --> 00:28:43,320
when you say that something can might be

633
00:28:43,320 --> 00:28:45,600
possible to create but not delete or

634
00:28:45,600 --> 00:28:47,520
delete but not create I don't believe

635
00:28:47,520 --> 00:28:50,159
you there is no such thing that can if

636
00:28:50,159 --> 00:28:51,480
you create it it can never be deleted

637
00:28:51,480 --> 00:28:53,220
it's just that you have to jump some

638
00:28:53,220 --> 00:28:55,440
through some other Hoops oh in that case

639
00:28:55,440 --> 00:28:56,940
you have to delete the entire list or

640
00:28:56,940 --> 00:28:58,020
you have to do something else to

641
00:28:58,020 --> 00:28:59,520
actually get back to the factory state

642
00:28:59,520 --> 00:29:01,380
but you can if you have created

643
00:29:01,380 --> 00:29:03,480
something you can in fact delete it in

644
00:29:03,480 --> 00:29:04,380
some way

645
00:29:04,380 --> 00:29:07,919
not just the north direct way so if we

646
00:29:07,919 --> 00:29:09,600
are to have

647
00:29:09,600 --> 00:29:11,400
annotations like this in the model to

648
00:29:11,400 --> 00:29:13,159
say that oh this one cannot be deleted

649
00:29:13,159 --> 00:29:16,200
uh we have to tell the controller so how

650
00:29:16,200 --> 00:29:17,700
what do I need to do in order to

651
00:29:17,700 --> 00:29:19,140
actually delete it and should I go to

652
00:29:19,140 --> 00:29:20,880
the top level list or should I go to

653
00:29:20,880 --> 00:29:22,919
factory reset what is it I need to do

654
00:29:22,919 --> 00:29:24,960
because if we are leaving this as a sort

655
00:29:24,960 --> 00:29:27,419
of English description somewhere I don't

656
00:29:27,419 --> 00:29:28,679
think we are talking about netconf

657
00:29:28,679 --> 00:29:30,179
anymore than we are talking about as an

658
00:29:30,179 --> 00:29:32,399
MP or nothing else

659
00:29:32,399 --> 00:29:34,559
so I want this interface to be clear

660
00:29:34,559 --> 00:29:37,200
what can how does every case how does it

661
00:29:37,200 --> 00:29:38,880
manager get from one configuration state

662
00:29:38,880 --> 00:29:40,320
to another

663
00:29:40,320 --> 00:29:42,240
in every case I mean there needs to be a

664
00:29:42,240 --> 00:29:46,100
programmatic way to figure it out

665
00:29:46,200 --> 00:29:48,120
do you understand what I mean yeah thank

666
00:29:48,120 --> 00:29:48,840
you

667
00:29:48,840 --> 00:29:50,760
so blush do you want to

668
00:29:50,760 --> 00:29:53,039
I have one spot for it because you said

669
00:29:53,039 --> 00:29:54,360
something was immutable but okay let's

670
00:29:54,360 --> 00:29:56,100
say if somebody wants to do a replace of

671
00:29:56,100 --> 00:29:59,279
the entire data store is that invalid

672
00:29:59,279 --> 00:30:02,100
sorry pardon if you do a replays for the

673
00:30:02,100 --> 00:30:03,779
entire data store including those things

674
00:30:03,779 --> 00:30:06,179
that were immutable can I can I do that

675
00:30:06,179 --> 00:30:08,399
yeah

676
00:30:08,399 --> 00:30:09,240
about

677
00:30:09,240 --> 00:30:10,919
so you can configure things create

678
00:30:10,919 --> 00:30:12,899
things as long as they are the same as

679
00:30:12,899 --> 00:30:17,000
they were always there yeah yeah

680
00:30:21,860 --> 00:30:25,919
first of all I think by documenting this

681
00:30:25,919 --> 00:30:29,059
existing Behavior that's why what allows

682
00:30:29,059 --> 00:30:30,899
systems to

683
00:30:30,899 --> 00:30:33,419
work in a model driven way instead of

684
00:30:33,419 --> 00:30:36,179
doing separate scripts and separate

685
00:30:36,179 --> 00:30:39,899
Hoops for every special bit of data the

686
00:30:39,899 --> 00:30:43,320
other thing is also as a participant in

687
00:30:43,320 --> 00:30:46,919
3gp psa5 which has I don't know some

688
00:30:46,919 --> 00:30:50,159
hundred or well around 100 yank models

689
00:30:50,159 --> 00:30:50,820
now

690
00:30:50,820 --> 00:30:53,520
this is existing behavior for the last I

691
00:30:53,520 --> 00:30:55,919
don't know 20 years their question is

692
00:30:55,919 --> 00:30:58,080
about this can we document this in a

693
00:30:58,080 --> 00:31:00,360
standard way or do we have to do it in a

694
00:31:00,360 --> 00:31:03,120
3gpp way so there are very strong use

695
00:31:03,120 --> 00:31:05,220
cases for this already

696
00:31:05,220 --> 00:31:07,740
back to your question it is stated in

697
00:31:07,740 --> 00:31:09,600
the draft that if you already have a

698
00:31:09,600 --> 00:31:12,419
value immutable unchangeable value let's

699
00:31:12,419 --> 00:31:16,940
say five you can set it to five again

700
00:31:24,240 --> 00:31:26,100
while Rob is coming up I'm going to

701
00:31:26,100 --> 00:31:29,820
start a poll on adoption and we actually

702
00:31:29,820 --> 00:31:32,279
have three states here you can raise

703
00:31:32,279 --> 00:31:34,799
your hands you can answer and lower your

704
00:31:34,799 --> 00:31:37,799
hands or you cannot answer and so we've

705
00:31:37,799 --> 00:31:38,700
asked

706
00:31:38,700 --> 00:31:41,340
um so if you raise your hand you think

707
00:31:41,340 --> 00:31:43,799
it means it's time to adopt you do not

708
00:31:43,799 --> 00:31:45,600
raise your hand it means you don't if

709
00:31:45,600 --> 00:31:47,520
you don't participate you don't have an

710
00:31:47,520 --> 00:31:48,840
opinion

711
00:31:48,840 --> 00:31:53,159
so please uh go online and uh start

712
00:31:53,159 --> 00:31:55,140
thinking about your response uh Rob

713
00:31:55,140 --> 00:31:57,000
please uh so robots since this guy

714
00:31:57,000 --> 00:31:58,860
speaking as a participant so I'm

715
00:31:58,860 --> 00:32:00,360
concerned with this same sort of concern

716
00:32:00,360 --> 00:32:02,820
that Yang Yan has in terms of I wonder

717
00:32:02,820 --> 00:32:04,620
the sort of fundamentally changing the

718
00:32:04,620 --> 00:32:07,260
contract between a client and a device

719
00:32:07,260 --> 00:32:08,580
in terms of what you're allowed to

720
00:32:08,580 --> 00:32:10,080
configure and the fact you're

721
00:32:10,080 --> 00:32:12,539
controlling that configuration

722
00:32:12,539 --> 00:32:13,799
um at the same time I also understand

723
00:32:13,799 --> 00:32:15,960
where bellage is coming from saying real

724
00:32:15,960 --> 00:32:17,580
systems are doing this today they're

725
00:32:17,580 --> 00:32:19,620
already blocking this configuration so

726
00:32:19,620 --> 00:32:21,600
in some senses pretending it's not

727
00:32:21,600 --> 00:32:22,980
happening

728
00:32:22,980 --> 00:32:25,320
um is also not putting us in a in a

729
00:32:25,320 --> 00:32:28,500
better place so I don't know how how you

730
00:32:28,500 --> 00:32:30,360
really balance those two things to say

731
00:32:30,360 --> 00:32:33,419
this is like this is maybe documentation

732
00:32:33,419 --> 00:32:34,980
but perhaps it's a matter of saying in

733
00:32:34,980 --> 00:32:37,080
the draft that this is not a recommended

734
00:32:37,080 --> 00:32:38,580
way of managing the configuration it's

735
00:32:38,580 --> 00:32:40,799
like we don't we don't recommend this

736
00:32:40,799 --> 00:32:42,419
but if you are doing this this is the

737
00:32:42,419 --> 00:32:44,520
way you document it I I don't know I'm

738
00:32:44,520 --> 00:32:47,220
conflicted on this one

739
00:32:47,220 --> 00:32:50,720
uh Andy please go ahead

740
00:32:51,240 --> 00:32:53,159
all right I was probably the only one

741
00:32:53,159 --> 00:32:57,059
who said not to adopt but uh I think

742
00:32:57,059 --> 00:32:58,980
this is

743
00:32:58,980 --> 00:33:02,460
just a special case of a deviation

744
00:33:02,460 --> 00:33:06,059
really and it's about the implementation

745
00:33:06,059 --> 00:33:09,720
so it's appropriate to use a deviation I

746
00:33:09,720 --> 00:33:12,539
don't see where a standard module or any

747
00:33:12,539 --> 00:33:15,299
kind of published module would have this

748
00:33:15,299 --> 00:33:16,440
this

749
00:33:16,440 --> 00:33:19,320
um extension in it to

750
00:33:19,320 --> 00:33:21,679
to

751
00:33:21,679 --> 00:33:25,580
predict it this way

752
00:33:26,820 --> 00:33:29,519
um I guess it also could be done with

753
00:33:29,519 --> 00:33:30,779
nakum

754
00:33:30,779 --> 00:33:34,140
just more knocking rules but

755
00:33:34,140 --> 00:33:38,640
it's it has some some uses I agree but

756
00:33:38,640 --> 00:33:41,460
it's it's also got some issues that were

757
00:33:41,460 --> 00:33:43,740
just mentioned that I also agree with so

758
00:33:43,740 --> 00:33:46,760
that's it

759
00:33:48,539 --> 00:33:51,419
okay thanks Andy I'll note that uh Kent

760
00:33:51,419 --> 00:33:55,140
has uh had a supporting comment to

761
00:33:55,140 --> 00:33:57,720
Balaji in the chat

762
00:33:57,720 --> 00:34:00,140
okay

763
00:34:00,140 --> 00:34:03,179
I don't think.com is the good place for

764
00:34:03,179 --> 00:34:05,100
this big first of all not come can be

765
00:34:05,100 --> 00:34:06,179
switched off

766
00:34:06,179 --> 00:34:08,940
this is more a property of the data

767
00:34:08,940 --> 00:34:12,060
model what you can and cannot do with

768
00:34:12,060 --> 00:34:15,418
this Anakin is about allowing things in

769
00:34:15,418 --> 00:34:17,339
some cases not allowing it in other

770
00:34:17,339 --> 00:34:18,418
cases

771
00:34:18,418 --> 00:34:22,759
but also nakum can be switched off

772
00:34:22,859 --> 00:34:25,139
so I uh

773
00:34:25,139 --> 00:34:26,040
no

774
00:34:26,040 --> 00:34:28,500
you say that you can't imagine published

775
00:34:28,500 --> 00:34:29,699
models

776
00:34:29,699 --> 00:34:32,460
there are published models in 3gpp but I

777
00:34:32,460 --> 00:34:33,960
think in other places so it's not

778
00:34:33,960 --> 00:34:36,599
whether we imagine it or not they exist

779
00:34:36,599 --> 00:34:41,300
already in not in not one but many

780
00:34:42,599 --> 00:34:44,399
okay thank you

781
00:34:44,399 --> 00:34:48,319
uh Andy are you still in queue

782
00:34:50,339 --> 00:34:51,899
I'm gonna remove you from the queue if

783
00:34:51,899 --> 00:34:53,280
you want to come back in and just read

784
00:34:53,280 --> 00:34:56,760
oh I think uh

785
00:34:56,760 --> 00:35:00,180
I should have just clicked it off sorry

786
00:35:00,180 --> 00:35:03,599
uh so so Rob Wilson Cisco so

787
00:35:03,599 --> 00:35:05,460
um just think about a little bit more I

788
00:35:05,460 --> 00:35:06,780
know in open config at the moment

789
00:35:06,780 --> 00:35:08,820
they're having a suggestion that devices

790
00:35:08,820 --> 00:35:11,220
don't um validate Leaf riffs for example

791
00:35:11,220 --> 00:35:12,839
so they're sort of changing the behavior

792
00:35:12,839 --> 00:35:15,180
of Yang in a slightly different way to

793
00:35:15,180 --> 00:35:17,400
say it's a slight different variation of

794
00:35:17,400 --> 00:35:19,680
yan and it feels the same thing sort of

795
00:35:19,680 --> 00:35:21,780
happening with hit with this is it's

796
00:35:21,780 --> 00:35:23,460
like another variation of network

797
00:35:23,460 --> 00:35:25,380
management or Yang and it's changing for

798
00:35:25,380 --> 00:35:27,599
where we are to different variants and I

799
00:35:27,599 --> 00:35:29,579
wonder whether that helps or in the

800
00:35:29,579 --> 00:35:31,680
standardization

801
00:35:31,680 --> 00:35:34,859
so I I'll definitely have to speak with

802
00:35:34,859 --> 00:35:37,320
Kent uh offline we usually like whisper

803
00:35:37,320 --> 00:35:38,940
things up here but we can't it's a

804
00:35:38,940 --> 00:35:41,520
little difficult uh my read and again I

805
00:35:41,520 --> 00:35:43,140
haven't consulted with Kent on this is

806
00:35:43,140 --> 00:35:45,480
that it's pretty split you know you have

807
00:35:45,480 --> 00:35:47,880
people that are interested but not a lot

808
00:35:47,880 --> 00:35:50,520
a lot more than think that this isn't

809
00:35:50,520 --> 00:35:53,700
ready uh based on the comments perhaps

810
00:35:53,700 --> 00:35:56,760
you could put more in the draft about

811
00:35:56,760 --> 00:35:58,920
what is not possible what you can do

812
00:35:58,920 --> 00:36:01,140
with existing mechanisms and why you

813
00:36:01,140 --> 00:36:04,260
think a new mechanism is needed and that

814
00:36:04,260 --> 00:36:06,660
might help uh those who have said no to

815
00:36:06,660 --> 00:36:09,359
understand why you think we have to do

816
00:36:09,359 --> 00:36:11,099
an exception

817
00:36:11,099 --> 00:36:14,660
or addition sorry thank you

818
00:36:15,180 --> 00:36:17,520
oh so we were going to do versioning but

819
00:36:17,520 --> 00:36:20,040
I see Rob is now leaving the room so

820
00:36:20,040 --> 00:36:21,720
we're not going to do versioning sorry

821
00:36:21,720 --> 00:36:23,700
about that

822
00:36:23,700 --> 00:36:26,579
um instead we're going to go on to Oscar

823
00:36:26,579 --> 00:36:30,200
I think Oscar is still here

824
00:36:31,440 --> 00:36:35,040
now he's stepped out for a moment

825
00:36:35,040 --> 00:36:38,220
so we're going to try to go on to the

826
00:36:38,220 --> 00:36:41,820
second Access Control uh chin

827
00:36:41,820 --> 00:36:44,540
woo

828
00:36:45,720 --> 00:36:47,579
so we're really going out of order here

829
00:36:47,579 --> 00:36:49,760
thank you for everyone's flexibility

830
00:36:49,760 --> 00:36:52,619
we'll give moment

831
00:36:52,619 --> 00:36:56,820
um so uh we're gonna move on to the

832
00:36:56,820 --> 00:37:00,720
draft ma yeah you got it

833
00:37:00,720 --> 00:37:02,099
thanks again

834
00:37:02,099 --> 00:37:04,920
good morning everyone my name is so I

835
00:37:04,920 --> 00:37:07,079
want to introduce this idea the policy

836
00:37:07,079 --> 00:37:09,960
based Nano access control so this is Ops

837
00:37:09,960 --> 00:37:12,900
a WT uh zero zero routine chapter the

838
00:37:12,900 --> 00:37:14,520
reason we come here because the

839
00:37:14,520 --> 00:37:17,579
basically the Pacer model is developed

840
00:37:17,579 --> 00:37:19,500
in another mode a working group or we

841
00:37:19,500 --> 00:37:21,420
also have ACL extension proposed by

842
00:37:21,420 --> 00:37:24,240
Oscar admander so we want to you know

843
00:37:24,240 --> 00:37:27,480
sort of feedback for this one yeah next

844
00:37:27,480 --> 00:37:28,980
foreign

845
00:37:28,980 --> 00:37:31,079
so what is the problem statement

846
00:37:31,079 --> 00:37:32,160
actually

847
00:37:32,160 --> 00:37:34,619
usually in the Enterprise or campus

848
00:37:34,619 --> 00:37:39,260
Network scenarios we actually use Access

849
00:37:39,260 --> 00:37:42,660
Control list to you know provide network

850
00:37:42,660 --> 00:37:45,240
access control especially for the fixed

851
00:37:45,240 --> 00:37:49,920
device user and at the uh sometimes

852
00:37:49,920 --> 00:37:52,500
these kind of Acer actually has some

853
00:37:52,500 --> 00:37:55,260
limitation it is usually it's a IP

854
00:37:55,260 --> 00:37:58,320
address based network access control or

855
00:37:58,320 --> 00:38:01,680
Mac address based access control so for

856
00:38:01,680 --> 00:38:05,880
Summer mobile device users they may move

857
00:38:05,880 --> 00:38:08,000
from one location to another location so

858
00:38:08,000 --> 00:38:12,599
so use Acer actually has its limitation

859
00:38:12,599 --> 00:38:15,180
in some other scenario actually we

860
00:38:15,180 --> 00:38:18,480
really want to install more uh you know

861
00:38:18,480 --> 00:38:22,260
flexible security policy actually one

862
00:38:22,260 --> 00:38:24,480
example we have the attribute based

863
00:38:24,480 --> 00:38:26,940
access control so we really want to you

864
00:38:26,940 --> 00:38:29,460
know apply the access control policy to

865
00:38:29,460 --> 00:38:32,460
a set of the user under the different

866
00:38:32,460 --> 00:38:36,300
circumstance you could be based on user

867
00:38:36,300 --> 00:38:38,160
location or user row or it could be

868
00:38:38,160 --> 00:38:40,800
based on the time of day or type of the

869
00:38:40,800 --> 00:38:43,079
network device to be used

870
00:38:43,079 --> 00:38:46,079
next

871
00:38:46,320 --> 00:38:48,060
so we really want to solve this

872
00:38:48,060 --> 00:38:51,000
limitation of the

873
00:38:51,000 --> 00:38:54,119
network access control so what do we

874
00:38:54,119 --> 00:38:58,380
propose actually to provide you know a

875
00:38:58,380 --> 00:39:00,839
more fine granularity Access Control

876
00:39:00,839 --> 00:39:03,119
policy based on the user group identity

877
00:39:03,119 --> 00:39:07,740
so here we give a some example you may

878
00:39:07,740 --> 00:39:09,839
need to restrict some of

879
00:39:09,839 --> 00:39:15,060
uh user or a group of uh user in a

880
00:39:15,060 --> 00:39:16,800
specific you know department for the

881
00:39:16,800 --> 00:39:18,380
financial department

882
00:39:18,380 --> 00:39:22,619
to uh to restrict access to the service

883
00:39:22,619 --> 00:39:26,520
or resource uh for a specific time

884
00:39:26,520 --> 00:39:30,540
period so you can uh you know uh you

885
00:39:30,540 --> 00:39:34,260
need to design uh the access control

886
00:39:34,260 --> 00:39:37,740
policy to you know to uh meet these

887
00:39:37,740 --> 00:39:40,560
requirements so the user approval here

888
00:39:40,560 --> 00:39:43,380
could be the you know a set of grouper

889
00:39:43,380 --> 00:39:46,339
user from financial department or from

890
00:39:46,339 --> 00:39:48,780
IMD Department actually they will

891
00:39:48,780 --> 00:39:51,599
represent a connective identity of the

892
00:39:51,599 --> 00:39:54,900
proofer user so this user can uh you

893
00:39:54,900 --> 00:39:59,300
know uh can have commonly you can access

894
00:39:59,300 --> 00:40:02,579
the network or consume specific network

895
00:40:02,579 --> 00:40:04,920
service or resource

896
00:40:04,920 --> 00:40:07,579
next

897
00:40:08,280 --> 00:40:11,640
so here is our model design overview

898
00:40:11,640 --> 00:40:13,339
actually you can see actually we really

899
00:40:13,339 --> 00:40:17,640
extend a0 based model and to introduce

900
00:40:17,640 --> 00:40:21,300
additional uh attribute you know uh you

901
00:40:21,300 --> 00:40:26,220
can see the Red Dot uh uh rectangle

902
00:40:26,220 --> 00:40:28,920
diagram and you we can support actually

903
00:40:28,920 --> 00:40:31,680
Four type of access control for example

904
00:40:31,680 --> 00:40:34,260
we can provide a user group to use a

905
00:40:34,260 --> 00:40:36,119
group access or we can provide access

906
00:40:36,119 --> 00:40:39,420
from One Source app here to as a prefix

907
00:40:39,420 --> 00:40:42,300
to the destination RP prefix address

908
00:40:42,300 --> 00:40:45,119
we also can support you know User Group

909
00:40:45,119 --> 00:40:48,359
to RP prefix access or the other way

910
00:40:48,359 --> 00:40:50,160
around RP prefix to the YouTube group

911
00:40:50,160 --> 00:40:50,960
access

912
00:40:50,960 --> 00:40:54,560
so we give the example of the user group

913
00:40:54,560 --> 00:40:58,200
based ACL example you can see uh you

914
00:40:58,200 --> 00:41:01,980
know we allow you know uh different set

915
00:41:01,980 --> 00:41:04,140
of grouper user for example from cell

916
00:41:04,140 --> 00:41:07,020
group or they can you know communicate

917
00:41:07,020 --> 00:41:09,900
with the Financial Group within uh in

918
00:41:09,900 --> 00:41:13,920
the destination uh youth group and in

919
00:41:13,920 --> 00:41:16,500
addition we actually can restrict a set

920
00:41:16,500 --> 00:41:19,140
of users at the four specific time

921
00:41:19,140 --> 00:41:21,079
period so we introduce

922
00:41:21,079 --> 00:41:23,640
time range type we can support a

923
00:41:23,640 --> 00:41:27,780
periodic range or absolutely ranji so so

924
00:41:27,780 --> 00:41:29,119
you can name it

925
00:41:29,119 --> 00:41:32,940
a Google user you know for a specific

926
00:41:32,940 --> 00:41:35,820
time period in the Working Day

927
00:41:35,820 --> 00:41:38,820
comments

928
00:41:42,960 --> 00:41:44,160
question

929
00:41:44,160 --> 00:41:46,859
um I you submitted this to opsog and I I

930
00:41:46,859 --> 00:41:49,260
was looking at it then and and the

931
00:41:49,260 --> 00:41:51,420
biggest question I have is

932
00:41:51,420 --> 00:41:54,119
what is a user group so so you have a

933
00:41:54,119 --> 00:41:56,700
string user group name and it was just I

934
00:41:56,700 --> 00:41:58,200
was just scratching my head how does

935
00:41:58,200 --> 00:42:02,099
this resolve like like what what do I do

936
00:42:02,099 --> 00:42:05,520
with this I mean conceptually I get it

937
00:42:05,520 --> 00:42:06,540
um

938
00:42:06,540 --> 00:42:08,579
Cisco was not allowed to talk to wallet

939
00:42:08,579 --> 00:42:10,440
let's say he's an example of user groups

940
00:42:10,440 --> 00:42:12,480
but how does that actually resolve to

941
00:42:12,480 --> 00:42:14,700
something that the network understands

942
00:42:14,700 --> 00:42:16,680
yeah there didn't seem to be a lot of

943
00:42:16,680 --> 00:42:19,079
prescription in there around that

944
00:42:19,079 --> 00:42:22,500
I actually have a slice the obviously as

945
00:42:22,500 --> 00:42:24,300
well actually to expand where you really

946
00:42:24,300 --> 00:42:25,859
want to establish the mapping between

947
00:42:25,859 --> 00:42:28,680
the group of ID with the IP address so

948
00:42:28,680 --> 00:42:31,200
you use this mapping so you can install

949
00:42:31,200 --> 00:42:33,300
these policies so these need to you know

950
00:42:33,300 --> 00:42:35,760
translate like a user group ID into a

951
00:42:35,760 --> 00:42:39,420
set of the uh IP address or prefix

952
00:42:39,420 --> 00:42:42,839
but but shouldn't there be more

953
00:42:42,839 --> 00:42:43,680
um

954
00:42:43,680 --> 00:42:46,980
structure around the the user group like

955
00:42:46,980 --> 00:42:50,520
like keying and and like it's a string

956
00:42:50,520 --> 00:42:52,740
um which feels to me kind of arbitrary

957
00:42:52,740 --> 00:42:55,980
shouldn't there be some more referential

958
00:42:55,980 --> 00:42:58,500
um mapping to to really understand that

959
00:42:58,500 --> 00:43:02,160
this user group means something

960
00:43:02,160 --> 00:43:04,619
um and maybe I just need to see more

961
00:43:04,619 --> 00:43:07,560
more implementation on uh but but that

962
00:43:07,560 --> 00:43:09,720
was a little of my confusion it just

963
00:43:09,720 --> 00:43:13,680
seemed kind of arbitrary and and it it

964
00:43:13,680 --> 00:43:15,300
was tough to really wrap my head around

965
00:43:15,300 --> 00:43:18,599
how I would actually implement this yeah

966
00:43:18,599 --> 00:43:20,579
I think one of the requirements from the

967
00:43:20,579 --> 00:43:22,800
Acer extension job they really wanted

968
00:43:22,800 --> 00:43:24,720
for Acer are not tied to a specific

969
00:43:24,720 --> 00:43:26,640
interface over the device so they won't

970
00:43:26,640 --> 00:43:29,339
even apply to settle the device so these

971
00:43:29,339 --> 00:43:30,720
are you know it's tension really

972
00:43:30,720 --> 00:43:32,760
targeted to solve this so I also have a

973
00:43:32,760 --> 00:43:35,040
next slide to explain how this how it

974
00:43:35,040 --> 00:43:37,079
works oh okay okay

975
00:43:37,079 --> 00:43:39,839
yeah move to the neck so this is

976
00:43:39,839 --> 00:43:43,140
actually provided you know how we you

977
00:43:43,140 --> 00:43:45,480
know resolve these actually we this kind

978
00:43:45,480 --> 00:43:48,720
of HCL is it seems you know not a diff

979
00:43:48,720 --> 00:43:51,839
it's kind of different from the a0 based

980
00:43:51,839 --> 00:43:53,760
model actually you introduce these kind

981
00:43:53,760 --> 00:43:56,400
of group IDs so so we really want to you

982
00:43:56,400 --> 00:43:58,859
know uh establish the mapping between

983
00:43:58,859 --> 00:44:00,900
the group ID and RP address so how we

984
00:44:00,900 --> 00:44:03,480
can do this actually for user it can be

985
00:44:03,480 --> 00:44:05,579
the fixed device the user can be mobile

986
00:44:05,579 --> 00:44:08,819
uh device user so uh during the network

987
00:44:08,819 --> 00:44:11,160
access actually you need to you know

988
00:44:11,160 --> 00:44:13,859
involve some uh Triple A maximum to

989
00:44:13,859 --> 00:44:16,500
provide network access authorization

990
00:44:16,500 --> 00:44:19,380
after authorization you can establish

991
00:44:19,380 --> 00:44:21,480
the mapping between the group ID and the

992
00:44:21,480 --> 00:44:25,079
IP address so with this uh mapping you

993
00:44:25,079 --> 00:44:29,400
can really can control uh the provided

994
00:44:29,400 --> 00:44:31,740
restrict access to the mobile user or

995
00:44:31,740 --> 00:44:37,500
maybe BYOD device user so uh so you so

996
00:44:37,500 --> 00:44:40,099
here we just show you example for this

997
00:44:40,099 --> 00:44:45,060
uh the the the mapping table what a

998
00:44:45,060 --> 00:44:47,280
mapping table looks like you can see we

999
00:44:47,280 --> 00:44:49,260
have the group ID or we have RP address

1000
00:44:49,260 --> 00:44:51,960
and then we also had some other

1001
00:44:51,960 --> 00:44:53,700
attributes so these are really targeted

1002
00:44:53,700 --> 00:44:56,280
to the actual build-based access control

1003
00:44:56,280 --> 00:44:58,500
so so you can provide more fine

1004
00:44:58,500 --> 00:45:00,599
granularity and Nano upside control for

1005
00:45:00,599 --> 00:45:04,079
for the user so we actually have two use

1006
00:45:04,079 --> 00:45:08,400
cases so uh the the the in the left

1007
00:45:08,400 --> 00:45:11,160
actually we uh assume actually you know

1008
00:45:11,160 --> 00:45:13,500
policy enforcement Point actually will

1009
00:45:13,500 --> 00:45:16,560
co-locate with Chevrolet device in the

1010
00:45:16,560 --> 00:45:18,839
network node actually so you can easily

1011
00:45:18,839 --> 00:45:21,000
to establish this kind of mapping when

1012
00:45:21,000 --> 00:45:23,339
you pass through this kind of network

1013
00:45:23,339 --> 00:45:25,980
access authorization but for second Noah

1014
00:45:25,980 --> 00:45:28,500
you may separate a policy enforcement

1015
00:45:28,500 --> 00:45:31,260
point from the you know geography client

1016
00:45:31,260 --> 00:45:33,240
the Chevrolet client can be in the

1017
00:45:33,240 --> 00:45:35,819
network node so you uh the Chevrolet

1018
00:45:35,819 --> 00:45:37,560
client can establish that can imagine

1019
00:45:37,560 --> 00:45:41,220
they can you know uh you know uh export

1020
00:45:41,220 --> 00:45:42,780
is kind of map into the controller or

1021
00:45:42,780 --> 00:45:44,579
controller can retrieve this kind of

1022
00:45:44,579 --> 00:45:46,859
mapping from Triple A server from some

1023
00:45:46,859 --> 00:45:49,140
kind of you know repository so the

1024
00:45:49,140 --> 00:45:51,240
policy enforcement component can you

1025
00:45:51,240 --> 00:45:53,760
know grab the the mapping from the

1026
00:45:53,760 --> 00:45:56,180
controller so you can you know easily to

1027
00:45:56,180 --> 00:45:59,640
pass or interpret this kind of uh

1028
00:45:59,640 --> 00:46:03,300
network access policy so this is a basic

1029
00:46:03,300 --> 00:46:06,000
idea we show high level for more detail

1030
00:46:06,000 --> 00:46:08,819
you can see see the draft

1031
00:46:08,819 --> 00:46:12,119
so I'm not sure I answer joke last

1032
00:46:12,119 --> 00:46:14,359
question

1033
00:46:16,740 --> 00:46:19,140
kind of I I I'll I'll dig a Little

1034
00:46:19,140 --> 00:46:22,380
Deeper it seems like okay so I log in

1035
00:46:22,380 --> 00:46:25,140
and at the time the device would resolve

1036
00:46:25,140 --> 00:46:28,619
my user ID to AAA

1037
00:46:28,619 --> 00:46:31,260
um group ID and then

1038
00:46:31,260 --> 00:46:34,560
I still where did where does my IP come

1039
00:46:34,560 --> 00:46:35,880
from

1040
00:46:35,880 --> 00:46:38,700
um because I I cannot I can't imagine

1041
00:46:38,700 --> 00:46:42,720
that every packet I generate is going to

1042
00:46:42,720 --> 00:46:46,200
do that whole dance so it's unlike flow

1043
00:46:46,200 --> 00:46:47,579
establishment

1044
00:46:47,579 --> 00:46:51,480
you resolved to my IP and then the ACL

1045
00:46:51,480 --> 00:46:54,420
works at that level yeah that's good

1046
00:46:54,420 --> 00:46:55,920
question actually usually in the

1047
00:46:55,920 --> 00:46:57,900
Enterprise and then oh campus nanoid

1048
00:46:57,900 --> 00:47:00,660
scenario you may have policy server you

1049
00:47:00,660 --> 00:47:03,480
may actually already have uh do some

1050
00:47:03,480 --> 00:47:05,819
planning actually to uh you know you you

1051
00:47:05,819 --> 00:47:07,319
have financial department you have ID

1052
00:47:07,319 --> 00:47:10,020
department and these need to you know

1053
00:47:10,020 --> 00:47:12,960
set a specific rules so these so they

1054
00:47:12,960 --> 00:47:15,180
can actually establish this kind of

1055
00:47:15,180 --> 00:47:17,400
policy in and install in the policy

1056
00:47:17,400 --> 00:47:19,200
server or can be co-located with the

1057
00:47:19,200 --> 00:47:22,859
Chevrolet server so some other scenario

1058
00:47:22,859 --> 00:47:25,380
actually maybe for the BYOD user this

1059
00:47:25,380 --> 00:47:27,300
kind of device you know unload to the

1060
00:47:27,300 --> 00:47:29,760
network actually but you can have this

1061
00:47:29,760 --> 00:47:32,940
kind of pre-configure uh the the access

1062
00:47:32,940 --> 00:47:35,520
control rules so you can you know

1063
00:47:35,520 --> 00:47:37,619
restrict the access to this unknown

1064
00:47:37,619 --> 00:47:40,020
device this is maybe attack you know so

1065
00:47:40,020 --> 00:47:43,500
this is ideally we have okay I'll I'll

1066
00:47:43,500 --> 00:47:46,440
read more before okay thank you

1067
00:47:46,440 --> 00:47:48,420
just as a heads up for your over time

1068
00:47:48,420 --> 00:47:50,760
but we have a little slop in the

1069
00:47:50,760 --> 00:47:52,980
schedule so we've given you until two

1070
00:47:52,980 --> 00:47:54,420
and a half more minutes but then we

1071
00:47:54,420 --> 00:47:55,980
really need to move on after that okay

1072
00:47:55,980 --> 00:47:59,099
thank you hi uh Bill Fenner Arista

1073
00:47:59,099 --> 00:48:01,020
networks uh can you go back to slide

1074
00:48:01,020 --> 00:48:04,680
four I want to comment on the periodic

1075
00:48:04,680 --> 00:48:06,060
time

1076
00:48:06,060 --> 00:48:08,339
um this is a very simplistic view of

1077
00:48:08,339 --> 00:48:09,599
time

1078
00:48:09,599 --> 00:48:11,400
um you might want to look at the work

1079
00:48:11,400 --> 00:48:13,800
that the calendaring working group has

1080
00:48:13,800 --> 00:48:18,420
done on uh repeating rules uh

1081
00:48:18,420 --> 00:48:21,900
the recurrence rules that are called and

1082
00:48:21,900 --> 00:48:25,140
um they can express all sorts of things

1083
00:48:25,140 --> 00:48:27,839
like the first Tuesday of every month

1084
00:48:27,839 --> 00:48:30,960
Etc and once you give something like

1085
00:48:30,960 --> 00:48:32,640
this people are going to want something

1086
00:48:32,640 --> 00:48:35,460
like that so look into what the I

1087
00:48:35,460 --> 00:48:37,740
calendar work has done on recurrence

1088
00:48:37,740 --> 00:48:41,040
rules okay thank you maybe send a link

1089
00:48:41,040 --> 00:48:45,440
to us that way we can see thank you

1090
00:48:45,440 --> 00:48:48,839
oh that's it okay so last slide yeah so

1091
00:48:48,839 --> 00:48:52,020
uh we note that this is uh listed as an

1092
00:48:52,020 --> 00:48:54,780
Ops area working group document so thank

1093
00:48:54,780 --> 00:48:57,480
you for letting us know about it and

1094
00:48:57,480 --> 00:48:59,900
we'll look for the work to proceed there

1095
00:48:59,900 --> 00:49:03,420
unless the working group chairs like Joe

1096
00:49:03,420 --> 00:49:05,940
who may or may not be listening uh

1097
00:49:05,940 --> 00:49:07,920
decide that they need they want to send

1098
00:49:07,920 --> 00:49:09,540
it back here but until it's sent back

1099
00:49:09,540 --> 00:49:12,599
here you know the general uh rule is you

1100
00:49:12,599 --> 00:49:13,859
come to that mod only when there's

1101
00:49:13,859 --> 00:49:15,599
nothing no other working group can work

1102
00:49:15,599 --> 00:49:17,400
on the end okay thank you all right

1103
00:49:17,400 --> 00:49:19,200
thank you yeah

1104
00:49:19,200 --> 00:49:22,200
uh we're gonna do the other ACL uh

1105
00:49:22,200 --> 00:49:24,740
document

1106
00:49:26,579 --> 00:49:28,859
hello Oscar

1107
00:49:28,859 --> 00:49:30,780
what are these for before no worries I

1108
00:49:30,780 --> 00:49:32,599
have to present them

1109
00:49:32,599 --> 00:49:35,160
we have a lot of juggling and reflecting

1110
00:49:35,160 --> 00:49:36,420
working groups which is why we're

1111
00:49:36,420 --> 00:49:39,260
shifting our schedule

1112
00:49:47,060 --> 00:49:49,380
so just first of

1113
00:49:49,380 --> 00:49:50,700
um there's a little bit of context

1114
00:49:50,700 --> 00:49:54,020
reminder so we presented a few itfs ago

1115
00:49:54,020 --> 00:49:58,260
a some some extensions to the model so

1116
00:49:58,260 --> 00:50:03,000
just to recap the hfc 8519 defines the

1117
00:50:03,000 --> 00:50:04,980
access control list and model so there

1118
00:50:04,980 --> 00:50:06,420
you can configure which is the

1119
00:50:06,420 --> 00:50:08,460
forwarding behavior of the device and

1120
00:50:08,460 --> 00:50:11,460
they find entries matches and actions

1121
00:50:11,460 --> 00:50:15,839
okay so in some three ideas ago we

1122
00:50:15,839 --> 00:50:18,240
presented which were their problems that

1123
00:50:18,240 --> 00:50:20,339
we detected so it was based on

1124
00:50:20,339 --> 00:50:22,440
operational experiences of protein ACLS

1125
00:50:22,440 --> 00:50:25,920
in in production that was was used in in

1126
00:50:25,920 --> 00:50:29,280
our Network and there we wanted to see

1127
00:50:29,280 --> 00:50:32,220
what was the the best approach if if we

1128
00:50:32,220 --> 00:50:35,520
have a new version of the HL model or do

1129
00:50:35,520 --> 00:50:38,160
augmentations on existing models okay

1130
00:50:38,160 --> 00:50:40,260
and try to remain the other one and

1131
00:50:40,260 --> 00:50:42,859
touch so

1132
00:50:44,660 --> 00:50:47,940
yeah so we picked a choice to move

1133
00:50:47,940 --> 00:50:50,579
forward so we can the feedback was okay

1134
00:50:50,579 --> 00:50:53,460
do some jump code and and present it and

1135
00:50:53,460 --> 00:50:55,740
see see how we're going and we started

1136
00:50:55,740 --> 00:50:57,720
working with augmentation so don't touch

1137
00:50:57,720 --> 00:51:01,079
existing RFC and they are work on that

1138
00:51:01,079 --> 00:51:03,720
so here these were all the all the

1139
00:51:03,720 --> 00:51:06,540
problems were when analyzed and here we

1140
00:51:06,540 --> 00:51:08,520
are going to go one by one of those that

1141
00:51:08,520 --> 00:51:11,339
are covered by by the current proportion

1142
00:51:11,339 --> 00:51:14,040
okay so we didn't cover 100 of them in

1143
00:51:14,040 --> 00:51:16,559
the in this let's go to the next slide

1144
00:51:16,559 --> 00:51:18,300
and then we can start

1145
00:51:18,300 --> 00:51:22,680
so first of all there was one problem

1146
00:51:22,680 --> 00:51:24,359
that we detected in terms of

1147
00:51:24,359 --> 00:51:26,819
manageability of the of the access

1148
00:51:26,819 --> 00:51:32,400
control list matches at a we required in

1149
00:51:32,400 --> 00:51:36,900
many cases a much against uh some set of

1150
00:51:36,900 --> 00:51:41,460
prefixes of set of ports okay so in

1151
00:51:41,460 --> 00:51:44,700
current model you could not add those

1152
00:51:44,700 --> 00:51:46,920
those lists okay so the idea is to

1153
00:51:46,920 --> 00:51:47,960
maintain

1154
00:51:47,960 --> 00:51:51,000
these these sets is the same thing that

1155
00:51:51,000 --> 00:51:52,859
you have in the

1156
00:51:52,859 --> 00:51:55,440
in the routing okay so in the routing

1157
00:51:55,440 --> 00:51:58,440
policies you already have a list of

1158
00:51:58,440 --> 00:52:02,099
prefix ranges and here in the years to

1159
00:52:02,099 --> 00:52:04,800
that in this model we also have prefix

1160
00:52:04,800 --> 00:52:07,440
sets protocol sets for number sets icmp

1161
00:52:07,440 --> 00:52:10,140
sets and well these are the sets that we

1162
00:52:10,140 --> 00:52:12,780
came came upon but you could have more

1163
00:52:12,780 --> 00:52:16,380
so the so we proposed to have at the top

1164
00:52:16,380 --> 00:52:19,980
level of the ACL have a placeholder and

1165
00:52:19,980 --> 00:52:24,599
Define set to their list all the or

1166
00:52:24,599 --> 00:52:27,359
create and manage all these sets so then

1167
00:52:27,359 --> 00:52:30,720
these sets can be reused across a

1168
00:52:30,720 --> 00:52:34,220
multiple multiple ACLS also

1169
00:52:34,220 --> 00:52:36,900
and multiple entries so the the good

1170
00:52:36,900 --> 00:52:39,180
thing there is that they can be managed

1171
00:52:39,180 --> 00:52:41,040
separately so for us in our case in

1172
00:52:41,040 --> 00:52:42,300
telefonica we have our security

1173
00:52:42,300 --> 00:52:47,819
department that just updates these the

1174
00:52:47,819 --> 00:52:49,859
specifics list for example and they

1175
00:52:49,859 --> 00:52:52,380
updated periodically or or daily and

1176
00:52:52,380 --> 00:52:54,140
it's

1177
00:52:54,140 --> 00:52:56,640
so here this is documentation proposed

1178
00:52:56,640 --> 00:53:00,720
okay so next next slide so here in

1179
00:53:00,720 --> 00:53:05,160
we can we can show the how the full tree

1180
00:53:05,160 --> 00:53:08,339
would look like so we have the based on

1181
00:53:08,339 --> 00:53:11,460
the feedback that we had separated ipv4

1182
00:53:11,460 --> 00:53:15,780
and ipv and IPv6 prefixes so we are just

1183
00:53:15,780 --> 00:53:20,280
playing lists ports protocols on the

1184
00:53:20,280 --> 00:53:23,940
icmp base field okay so with with all of

1185
00:53:23,940 --> 00:53:26,400
the forces are reusable for both the TCP

1186
00:53:26,400 --> 00:53:29,400
and USB all and any protocol that would

1187
00:53:29,400 --> 00:53:32,579
use new sports and we could also

1188
00:53:32,579 --> 00:53:36,240
consider other ports for example we

1189
00:53:36,240 --> 00:53:39,599
could also consider matching a mpls

1190
00:53:39,599 --> 00:53:42,480
labels for example that is a also one

1191
00:53:42,480 --> 00:53:44,339
there are some at least some Hardware

1192
00:53:44,339 --> 00:53:45,900
that is able to do the machine against

1193
00:53:45,900 --> 00:53:48,300
mpls label so you could also create

1194
00:53:48,300 --> 00:53:51,059
those those sets Okay so next slide

1195
00:53:51,059 --> 00:53:52,440
please

1196
00:53:52,440 --> 00:53:55,920
or participants in the cube Jason please

1197
00:53:55,920 --> 00:53:58,020
yeah unless he wants to take it at the

1198
00:53:58,020 --> 00:53:59,160
end do you want to take it at the end no

1199
00:53:59,160 --> 00:54:01,559
no we can okay you can do you mind going

1200
00:54:01,559 --> 00:54:05,540
back one slide please Jason Stern

1201
00:54:06,359 --> 00:54:09,059
um on the first augmentation

1202
00:54:09,059 --> 00:54:11,760
uh from what it's showing there it looks

1203
00:54:11,760 --> 00:54:14,640
like it's inside the ACL list so are

1204
00:54:14,640 --> 00:54:15,780
these only

1205
00:54:15,780 --> 00:54:18,960
intended to be shared within rules of

1206
00:54:18,960 --> 00:54:21,119
one ACL

1207
00:54:21,119 --> 00:54:23,400
or is this supposed to be shared across

1208
00:54:23,400 --> 00:54:26,579
different ACLS no it is at the top level

1209
00:54:26,579 --> 00:54:29,940
of ACLS okay so it's I meant to be

1210
00:54:29,940 --> 00:54:33,960
shared across all uh all ACLS that you

1211
00:54:33,960 --> 00:54:36,420
define okay so it's okay I think I think

1212
00:54:36,420 --> 00:54:38,040
maybe it should be at the container then

1213
00:54:38,040 --> 00:54:41,660
not not inside the list

1214
00:54:41,720 --> 00:54:43,800
one of the precisely one of the

1215
00:54:43,800 --> 00:54:45,599
questions that we have at the end is

1216
00:54:45,599 --> 00:54:47,700
what is the best place to position the

1217
00:54:47,700 --> 00:54:50,760
Define sets or even uh we have the

1218
00:54:50,760 --> 00:54:53,040
question at the end even if if we put it

1219
00:54:53,040 --> 00:54:54,599
at a completely new container outside

1220
00:54:54,599 --> 00:54:58,760
HCL okay so this is a an open question

1221
00:54:58,760 --> 00:55:01,920
I just I think maybe maybe you meant to

1222
00:55:01,920 --> 00:55:04,680
put it in the acl's container but we can

1223
00:55:04,680 --> 00:55:08,240
talk more detail yeah okay

1224
00:55:09,140 --> 00:55:13,220
okay and Mahesh

1225
00:55:20,599 --> 00:55:24,480
Mahesh Arcus Networks so I'm I was

1226
00:55:24,480 --> 00:55:25,920
actually going to wait for my question

1227
00:55:25,920 --> 00:55:27,420
to laugh it was done with the

1228
00:55:27,420 --> 00:55:28,859
presentation you can wait till the end

1229
00:55:28,859 --> 00:55:30,900
there's no problem right but the to

1230
00:55:30,900 --> 00:55:33,599
Jason's comment I do agree with him that

1231
00:55:33,599 --> 00:55:36,480
I think if you're going to add

1232
00:55:36,480 --> 00:55:39,059
um sort of Define sets you want to do it

1233
00:55:39,059 --> 00:55:42,180
inside the ACLS complete

1234
00:55:42,180 --> 00:55:47,520
okay so a couple of slides more

1235
00:55:47,520 --> 00:55:50,520
yeah so then another of the problems

1236
00:55:50,520 --> 00:55:52,920
that we had is the the handling of TCP

1237
00:55:52,920 --> 00:55:56,760
flux right now you could Define just one

1238
00:55:56,760 --> 00:55:58,680
bit and match against that bit so the

1239
00:55:58,680 --> 00:56:01,619
proposal here is to add the capability

1240
00:56:01,619 --> 00:56:04,260
to define a bit mask and an operation

1241
00:56:04,260 --> 00:56:07,500
over that business and that bitmask then

1242
00:56:07,500 --> 00:56:12,000
you are way more flexible and you can

1243
00:56:12,000 --> 00:56:15,540
support all the bdp flow spec matching

1244
00:56:15,540 --> 00:56:18,420
operations okay it is it is good to be

1245
00:56:18,420 --> 00:56:21,780
consistent across IDF Technologies

1246
00:56:21,780 --> 00:56:24,180
so here is the example of how it would

1247
00:56:24,180 --> 00:56:27,919
look like so next slide please

1248
00:56:28,520 --> 00:56:32,160
another thing is we needed a better way

1249
00:56:32,160 --> 00:56:35,099
to to handle fragments okay so this is

1250
00:56:35,099 --> 00:56:38,520
why with the uh we Define the a fragment

1251
00:56:38,520 --> 00:56:42,599
container for both ipv4 and an IPv6 and

1252
00:56:42,599 --> 00:56:44,520
to be able to match for example it just

1253
00:56:44,520 --> 00:56:46,859
if there is if there is a fragment or if

1254
00:56:46,859 --> 00:56:48,300
it's the first fragment it is the last

1255
00:56:48,300 --> 00:56:50,579
fragment so for example you could create

1256
00:56:50,579 --> 00:56:56,220
a rule to discard all incoming fragments

1257
00:56:56,220 --> 00:56:59,220
okay so that is also a common common

1258
00:56:59,220 --> 00:57:03,200
operation so next one please

1259
00:57:04,140 --> 00:57:08,359
a another thing is that in current ACLS

1260
00:57:08,359 --> 00:57:13,559
oracles you had the accept dropped and

1261
00:57:13,559 --> 00:57:16,800
reject the actions okay so you accept it

1262
00:57:16,800 --> 00:57:18,359
or you when you drop it you notify or

1263
00:57:18,359 --> 00:57:21,119
not be honest images but uh we saw that

1264
00:57:21,119 --> 00:57:24,359
it is also common that in some cases

1265
00:57:24,359 --> 00:57:26,220
when you detect you don't want to fully

1266
00:57:26,220 --> 00:57:28,680
drop so you you might want extra policy

1267
00:57:28,680 --> 00:57:31,619
so for example a a red limiting policy

1268
00:57:31,619 --> 00:57:35,220
so uh we propose that it is interesting

1269
00:57:35,220 --> 00:57:36,960
to add also

1270
00:57:36,960 --> 00:57:39,660
um that you can in addition to accepting

1271
00:57:39,660 --> 00:57:40,980
the

1272
00:57:40,980 --> 00:57:43,440
have a an action in the forwarding

1273
00:57:43,440 --> 00:57:45,780
Behavior to have another forwarding

1274
00:57:45,780 --> 00:57:47,880
behavior that is limiting the regulation

1275
00:57:47,880 --> 00:57:50,880
so for example in this case you you

1276
00:57:50,880 --> 00:57:55,559
could limit the rate of 20 20 okay so

1277
00:57:55,559 --> 00:57:57,359
next slide and then we can have some

1278
00:57:57,359 --> 00:58:00,859
time for for discussion

1279
00:58:03,960 --> 00:58:08,880
yeah so here so first is should we

1280
00:58:08,880 --> 00:58:12,180
maintain this augmentation approach as

1281
00:58:12,180 --> 00:58:15,720
we are having here or we incorporate

1282
00:58:15,720 --> 00:58:18,180
them into a into this version of the of

1283
00:58:18,180 --> 00:58:21,780
the Apple model this augmentation but

1284
00:58:21,780 --> 00:58:24,180
the structure is easier to parasitia to

1285
00:58:24,180 --> 00:58:29,660
to do the but we need to do some

1286
00:58:29,660 --> 00:58:31,740
it's a little bit sometimes challenging

1287
00:58:31,740 --> 00:58:33,300
when creating those augmentations and

1288
00:58:33,300 --> 00:58:35,280
sometimes we are finding some

1289
00:58:35,280 --> 00:58:39,359
limitations okay and sometimes what if

1290
00:58:39,359 --> 00:58:41,280
you go to this approach we could be more

1291
00:58:41,280 --> 00:58:44,339
clean and even maybe some some things

1292
00:58:44,339 --> 00:58:45,780
could be fit together in the same

1293
00:58:45,780 --> 00:58:47,640
structure instead of having to replicate

1294
00:58:47,640 --> 00:58:50,040
the structures and the second question I

1295
00:58:50,040 --> 00:58:51,420
think that was related also to your your

1296
00:58:51,420 --> 00:58:54,720
comments that that we had is where to

1297
00:58:54,720 --> 00:58:57,900
position the defined sets Okay so they

1298
00:58:57,900 --> 00:59:00,900
Define sets uh the thing is then they

1299
00:59:00,900 --> 00:59:04,200
are references in the matches okay so it

1300
00:59:04,200 --> 00:59:08,280
it has a it has impact especially if

1301
00:59:08,280 --> 00:59:11,640
other modules import the packet fields

1302
00:59:11,640 --> 00:59:15,240
for example and and they want to to or

1303
00:59:15,240 --> 00:59:16,799
they import for example the packet match

1304
00:59:16,799 --> 00:59:18,599
in another place should it happen I

1305
00:59:18,599 --> 00:59:20,400
don't know if it happens in in many

1306
00:59:20,400 --> 00:59:22,680
places but if someone Imports it and it

1307
00:59:22,680 --> 00:59:26,339
is referencing to the Apple okay so we

1308
00:59:26,339 --> 00:59:28,740
it could be a standalone in a new model

1309
00:59:28,740 --> 00:59:31,559
so in any model just have a separate

1310
00:59:31,559 --> 00:59:33,140
module for the

1311
00:59:33,140 --> 00:59:36,000
for the prefix sets or for the sets and

1312
00:59:36,000 --> 00:59:38,460
you just reference and finally question

1313
00:59:38,460 --> 00:59:40,980
is okay this is the right place to work

1314
00:59:40,980 --> 00:59:43,920
on it the net mode is oops we didn't

1315
00:59:43,920 --> 00:59:46,260
know which was the best place but as ACL

1316
00:59:46,260 --> 00:59:47,760
model was done here we thought it was

1317
00:59:47,760 --> 00:59:50,180
here so

1318
00:59:50,220 --> 00:59:51,980
so I'm going to start with the easy one

1319
00:59:51,980 --> 00:59:54,359
uh which working group you know as you

1320
00:59:54,359 --> 00:59:57,240
said this is built on top of ACL so it

1321
00:59:57,240 --> 01:00:00,059
seems like the right place to do it uh

1322
01:00:00,059 --> 01:00:02,220
Kent isn't here you know for me to

1323
01:00:02,220 --> 01:00:04,200
whisper again so if he disagrees he was

1324
01:00:04,200 --> 01:00:06,180
the shepherd on that document so of

1325
01:00:06,180 --> 01:00:07,740
course if he disagrees I actually will

1326
01:00:07,740 --> 01:00:09,839
refer to him uh but to me this seems

1327
01:00:09,839 --> 01:00:12,780
like the right place and

1328
01:00:12,780 --> 01:00:17,280
um uh in in terms of uh this or

1329
01:00:17,280 --> 01:00:20,400
augmentation I think it goes more to uh

1330
01:00:20,400 --> 01:00:22,380
what's going to be the common use if the

1331
01:00:22,380 --> 01:00:24,000
common use is you're going to be doing

1332
01:00:24,000 --> 01:00:25,920
the full set my personal preference not

1333
01:00:25,920 --> 01:00:27,359
his chair but my personal preference

1334
01:00:27,359 --> 01:00:29,339
would be this

1335
01:00:29,339 --> 01:00:33,240
um if it's uh if a common usage could be

1336
01:00:33,240 --> 01:00:34,980
either then I would go for the

1337
01:00:34,980 --> 01:00:37,500
augmentation uh again this is just my

1338
01:00:37,500 --> 01:00:38,700
personal preference trying to give

1339
01:00:38,700 --> 01:00:40,740
people something to think about uh to

1340
01:00:40,740 --> 01:00:43,319
express their offer you're in queue and

1341
01:00:43,319 --> 01:00:45,960
I thought you might have been left over

1342
01:00:45,960 --> 01:00:47,400
but it looks like you want to say

1343
01:00:47,400 --> 01:00:49,200
something

1344
01:00:49,200 --> 01:00:52,680
all right because Smith looks

1345
01:00:52,680 --> 01:00:54,660
um as the original author of The ACL

1346
01:00:54,660 --> 01:00:57,780
young model I am glad to see that

1347
01:00:57,780 --> 01:00:59,460
there's some work going on and trying to

1348
01:00:59,460 --> 01:01:01,440
see where it was on the gaps that we

1349
01:01:01,440 --> 01:01:03,240
missed in the first version

1350
01:01:03,240 --> 01:01:05,400
so absolutely uh let the work group

1351
01:01:05,400 --> 01:01:07,200
decide whether they want to

1352
01:01:07,200 --> 01:01:09,720
do it as an augmentation not a best we

1353
01:01:09,720 --> 01:01:12,420
can a little group decide that

1354
01:01:12,420 --> 01:01:15,359
uh specifically my question is actually

1355
01:01:15,359 --> 01:01:17,040
a couple of slides back on the rate

1356
01:01:17,040 --> 01:01:18,540
action

1357
01:01:18,540 --> 01:01:20,640
if we could go back

1358
01:01:20,640 --> 01:01:22,740
I think it's the slide before this yes

1359
01:01:22,740 --> 01:01:25,819
great limit actions I would suggest that

1360
01:01:25,819 --> 01:01:29,280
this is not the right Yang model for

1361
01:01:29,280 --> 01:01:31,799
rate limit action I would suggest that

1362
01:01:31,799 --> 01:01:34,020
you look at the qos Yang model

1363
01:01:34,020 --> 01:01:36,359
because the moment you put any kind of a

1364
01:01:36,359 --> 01:01:37,319
rate limit

1365
01:01:37,319 --> 01:01:39,299
you also need to have some metering

1366
01:01:39,299 --> 01:01:42,359
capability in the same module It

1367
01:01:42,359 --> 01:01:44,760
generally is not the case so if you're

1368
01:01:44,760 --> 01:01:46,619
looking for Q I have some kind of

1369
01:01:46,619 --> 01:01:49,140
metering look at the model I think the

1370
01:01:49,140 --> 01:01:51,660
Curious model already addresses this in

1371
01:01:51,660 --> 01:01:55,079
terms of ability to drop packets when it

1372
01:01:55,079 --> 01:01:57,119
exceeds a certain amount of rate so

1373
01:01:57,119 --> 01:01:59,819
that's one suggestion

1374
01:01:59,819 --> 01:02:02,299
Joe

1375
01:02:02,599 --> 01:02:05,220
collect Cisco real quick on the last

1376
01:02:05,220 --> 01:02:06,180
question

1377
01:02:06,180 --> 01:02:08,520
um so I I would

1378
01:02:08,520 --> 01:02:11,880
say it would be nice to have this in a

1379
01:02:11,880 --> 01:02:14,220
standalone container because I can see

1380
01:02:14,220 --> 01:02:16,380
thinking of some implementations that

1381
01:02:16,380 --> 01:02:19,020
might use this there's other things I

1382
01:02:19,020 --> 01:02:21,420
could see these um groupings being used

1383
01:02:21,420 --> 01:02:25,079
for and besides just ACLS so I think it

1384
01:02:25,079 --> 01:02:27,059
would make it easier to import into that

1385
01:02:27,059 --> 01:02:29,540
other work

1386
01:02:29,700 --> 01:02:33,359
okay so this has been talked about a

1387
01:02:33,359 --> 01:02:36,119
couple of times now uh the last time was

1388
01:02:36,119 --> 01:02:37,619
a little bit ago wasn't the last meeting

1389
01:02:37,619 --> 01:02:40,200
but we thought it would be good to ask

1390
01:02:40,200 --> 01:02:41,880
the same question we asked for the

1391
01:02:41,880 --> 01:02:44,339
previous one so same sort of guidelines

1392
01:02:44,339 --> 01:02:46,380
and

1393
01:02:46,380 --> 01:02:48,299
um you know for some they may not be

1394
01:02:48,299 --> 01:02:50,640
aware of the document so this might by a

1395
01:02:50,640 --> 01:02:52,859
hard ask uh

1396
01:02:52,859 --> 01:02:55,380
and you know we just like the previous

1397
01:02:55,380 --> 01:02:58,559
one it doesn't mean uh no doesn't mean

1398
01:02:58,559 --> 01:03:01,980
never we won't discuss it again uh

1399
01:03:01,980 --> 01:03:05,040
uh but if you have an opinion

1400
01:03:05,040 --> 01:03:09,500
um it'd be good to voice it

1401
01:03:14,040 --> 01:03:17,359
we'll just pause for a minute

1402
01:03:21,960 --> 01:03:24,240
Mahesh

1403
01:03:24,240 --> 01:03:25,680
and we're gonna just so you know we have

1404
01:03:25,680 --> 01:03:27,119
about a minute left before we have to

1405
01:03:27,119 --> 01:03:28,920
move to the next

1406
01:03:28,920 --> 01:03:32,579
yeah so this is more a response to Joe

1407
01:03:32,579 --> 01:03:34,500
um the idea of I like the idea of

1408
01:03:34,500 --> 01:03:36,960
grouping but I notice you can have the

1409
01:03:36,960 --> 01:03:38,940
grouping and still be part of the model

1410
01:03:38,940 --> 01:03:41,540
where it can be used by other

1411
01:03:41,540 --> 01:03:43,740
ones but I'm putting just a grouping

1412
01:03:43,740 --> 01:03:46,920
leaving the instance both in this model

1413
01:03:46,920 --> 01:03:50,059
and in other models

1414
01:03:54,240 --> 01:03:55,619
okay

1415
01:03:55,619 --> 01:03:59,880
um I'm gonna uh close that session I'll

1416
01:03:59,880 --> 01:04:03,119
note that a few people you know a a

1417
01:04:03,119 --> 01:04:05,160
small percentage of the people in the

1418
01:04:05,160 --> 01:04:08,160
room uh participated but everyone who

1419
01:04:08,160 --> 01:04:10,619
participated was supportive of adopting

1420
01:04:10,619 --> 01:04:13,380
so I think this one that's a pretty good

1421
01:04:13,380 --> 01:04:15,480
indication that there's you're headed in

1422
01:04:15,480 --> 01:04:16,500
the right direction people are

1423
01:04:16,500 --> 01:04:18,900
interested in this uh but it's still new

1424
01:04:18,900 --> 01:04:20,520
to them so I'll talk with Kent

1425
01:04:20,520 --> 01:04:23,040
afterwards and we may see a poll we may

1426
01:04:23,040 --> 01:04:25,440
want to wait another meeting it'll be

1427
01:04:25,440 --> 01:04:28,500
based on offline discussion thank you

1428
01:04:28,500 --> 01:04:33,480
so now we're going to move to versioning

1429
01:04:48,839 --> 01:04:50,040
okay

1430
01:04:50,040 --> 01:04:51,119
um

1431
01:04:51,119 --> 01:04:54,619
yeah go to slide two please

1432
01:04:54,839 --> 01:04:57,119
okay so there's actually three parts to

1433
01:04:57,119 --> 01:04:59,460
this presentation uh so first I'll just

1434
01:04:59,460 --> 01:05:01,079
be doing a bit of an overview because

1435
01:05:01,079 --> 01:05:02,460
there's a set of five drafts we're

1436
01:05:02,460 --> 01:05:04,140
working on related to Yang versioning

1437
01:05:04,140 --> 01:05:05,819
work

1438
01:05:05,819 --> 01:05:08,280
um then I'm going to present on kind of

1439
01:05:08,280 --> 01:05:09,900
the base fundamental draft which is

1440
01:05:09,900 --> 01:05:12,119
module versioning and Joe is going to

1441
01:05:12,119 --> 01:05:16,040
present on the Yang sember draft

1442
01:05:16,079 --> 01:05:18,480
um for anyone who just wants to ramp up

1443
01:05:18,480 --> 01:05:20,940
again on what this work is fundamentally

1444
01:05:20,940 --> 01:05:23,520
about you can always flip to the last

1445
01:05:23,520 --> 01:05:25,559
four slides of this presentation I'm

1446
01:05:25,559 --> 01:05:27,480
presenting now that gives you a very

1447
01:05:27,480 --> 01:05:29,400
quick overview of what the work is about

1448
01:05:29,400 --> 01:05:32,220
with a few nice pictures and things

1449
01:05:32,220 --> 01:05:33,660
I'm not going to go over those today

1450
01:05:33,660 --> 01:05:34,559
though

1451
01:05:34,559 --> 01:05:37,579
okay next slide please

1452
01:05:37,579 --> 01:05:41,640
so we're working on kind of a broad set

1453
01:05:41,640 --> 01:05:45,000
of proposals to deal with uh some

1454
01:05:45,000 --> 01:05:47,460
Evolution and yang versioning

1455
01:05:47,460 --> 01:05:50,280
um there's five separate drafts uh I'm

1456
01:05:50,280 --> 01:05:51,599
not going to walk through all of these

1457
01:05:51,599 --> 01:05:55,079
at the moment but a big Focus has been

1458
01:05:55,079 --> 01:05:58,200
on number one and number two here to try

1459
01:05:58,200 --> 01:06:00,960
to get those uh standardized now as

1460
01:06:00,960 --> 01:06:03,839
quickly as we can we've uh been seeing

1461
01:06:03,839 --> 01:06:06,079
increased demand to wrap that work up

1462
01:06:06,079 --> 01:06:09,000
but we do plan on bringing all of this

1463
01:06:09,000 --> 01:06:14,599
work to RFC uh in a phase manner

1464
01:06:14,940 --> 01:06:18,059
okay next slide

1465
01:06:18,059 --> 01:06:20,280
uh this this is just for reference for

1466
01:06:20,280 --> 01:06:22,079
so you have easy links to the drafts

1467
01:06:22,079 --> 01:06:24,680
next slide

1468
01:06:24,960 --> 01:06:26,339
so

1469
01:06:26,339 --> 01:06:28,559
um a fair bit of this work is happening

1470
01:06:28,559 --> 01:06:30,960
on a weekly call uh Tuesday Mornings

1471
01:06:30,960 --> 01:06:33,180
everybody's welcome to join those at any

1472
01:06:33,180 --> 01:06:35,339
time and don't feel bad if you're not

1473
01:06:35,339 --> 01:06:36,780
fully ramped up or not in the middle of

1474
01:06:36,780 --> 01:06:38,640
discussions with some people who just

1475
01:06:38,640 --> 01:06:40,440
come and go occasionally it's great to

1476
01:06:40,440 --> 01:06:42,839
get other opinions on this work uh so

1477
01:06:42,839 --> 01:06:45,299
please feel free to join it's important

1478
01:06:45,299 --> 01:06:47,760
we get a big cross-section of people and

1479
01:06:47,760 --> 01:06:49,440
we're always really trying to especially

1480
01:06:49,440 --> 01:06:52,559
get more users and operators in these

1481
01:06:52,559 --> 01:06:54,539
meetings it's pretty heavily vendor

1482
01:06:54,539 --> 01:06:57,180
focused it is a broad set of people

1483
01:06:57,180 --> 01:06:58,440
though so it's a it's a good

1484
01:06:58,440 --> 01:07:01,020
cross-section but we can always use more

1485
01:07:01,020 --> 01:07:02,400
opinions more inputs on this work

1486
01:07:02,400 --> 01:07:04,380
there's a lot of kind of issues to try

1487
01:07:04,380 --> 01:07:05,700
to decide

1488
01:07:05,700 --> 01:07:07,920
uh currently it's every Tuesday morning

1489
01:07:07,920 --> 01:07:12,420
at nine Eastern uh to UK time

1490
01:07:12,420 --> 01:07:14,339
and I send out minutes for that Weekly

1491
01:07:14,339 --> 01:07:16,500
with links to the to the meetings so

1492
01:07:16,500 --> 01:07:18,359
please feel free to join in

1493
01:07:18,359 --> 01:07:21,140
next slide

1494
01:07:21,839 --> 01:07:25,440
okay so what have we done since last ITF

1495
01:07:25,440 --> 01:07:28,799
uh time is kind of high and uh we're

1496
01:07:28,799 --> 01:07:30,839
never quite getting as much done as we

1497
01:07:30,839 --> 01:07:33,240
kind of originally hoped but um so a

1498
01:07:33,240 --> 01:07:36,180
really big Focus was uh something that

1499
01:07:36,180 --> 01:07:37,799
was brought up on the list as part of

1500
01:07:37,799 --> 01:07:39,900
the last working group Last Call on this

1501
01:07:39,900 --> 01:07:43,260
Dock and that was looking at kind of an

1502
01:07:43,260 --> 01:07:47,099
alternative to our top level uh version

1503
01:07:47,099 --> 01:07:48,839
and non-backwards compatible markings

1504
01:07:48,839 --> 01:07:51,119
and that was looking at per node

1505
01:07:51,119 --> 01:07:52,559
markings I don't know what happened to

1506
01:07:52,559 --> 01:07:54,780
our lights here interesting all right I

1507
01:07:54,780 --> 01:07:55,799
don't know if a spotlight's about to

1508
01:07:55,799 --> 01:07:57,299
come on but there's no dancing about to

1509
01:07:57,299 --> 01:07:59,160
happen all right

1510
01:07:59,160 --> 01:08:00,180
um

1511
01:08:00,180 --> 01:08:04,020
so we d uh we discussed this in a lot of

1512
01:08:04,020 --> 01:08:06,480
detail it pretty much uh it was really

1513
01:08:06,480 --> 01:08:08,220
the focus of all our time since the last

1514
01:08:08,220 --> 01:08:10,740
meeting so we have gone and defined

1515
01:08:10,740 --> 01:08:13,799
these per node annotations you can Mark

1516
01:08:13,799 --> 01:08:15,660
individual nodes as okay this one was

1517
01:08:15,660 --> 01:08:18,000
non-backwards compatible in this release

1518
01:08:18,000 --> 01:08:21,299
Etc but we have decided not to include

1519
01:08:21,299 --> 01:08:23,759
it as part of the base draft

1520
01:08:23,759 --> 01:08:25,738
so uh there's more details on that

1521
01:08:25,738 --> 01:08:28,380
coming up in the next presentation but

1522
01:08:28,380 --> 01:08:30,179
uh it's not going to be part of the base

1523
01:08:30,179 --> 01:08:33,238
draft or at least that's our proposal

1524
01:08:33,238 --> 01:08:35,939
um the second thing that uh really was a

1525
01:08:35,939 --> 01:08:38,759
focus is there's quite a bit of feedback

1526
01:08:38,759 --> 01:08:40,620
from the last call in these first two

1527
01:08:40,620 --> 01:08:43,198
documents a lot of issues raised a lot

1528
01:08:43,198 --> 01:08:45,540
of good discussions a lot of Gray Zone

1529
01:08:45,540 --> 01:08:47,339
decisions we had debate about in the

1530
01:08:47,339 --> 01:08:48,660
weekly calls

1531
01:08:48,660 --> 01:08:50,880
we think we're pretty much done that now

1532
01:08:50,880 --> 01:08:54,479
uh every issue was tracked in the GitHub

1533
01:08:54,479 --> 01:08:56,819
um we kind of debated them all down to

1534
01:08:56,819 --> 01:08:58,738
an answer amongst the weekly call group

1535
01:08:58,738 --> 01:09:00,899
and authors and we've replied back to a

1536
01:09:00,899 --> 01:09:02,339
list about pretty much every one of

1537
01:09:02,339 --> 01:09:05,160
those so we feel that that is pretty

1538
01:09:05,160 --> 01:09:07,380
much done we've made some updates to the

1539
01:09:07,380 --> 01:09:09,660
drafts and we're going to there's still

1540
01:09:09,660 --> 01:09:12,000
a few updates left to go but we think

1541
01:09:12,000 --> 01:09:13,679
we've closed most of the process from

1542
01:09:13,679 --> 01:09:16,880
the first working group last call

1543
01:09:16,979 --> 01:09:19,020
um we really did not get to looking at

1544
01:09:19,020 --> 01:09:21,238
schema comparison packages or version

1545
01:09:21,238 --> 01:09:24,000
selection drafts since last ITF

1546
01:09:24,000 --> 01:09:26,779
next slide

1547
01:09:27,540 --> 01:09:30,060
okay so next steps at the high level

1548
01:09:30,060 --> 01:09:32,580
here are we want to finish the remaining

1549
01:09:32,580 --> 01:09:34,859
updates to our first two drafts module

1550
01:09:34,859 --> 01:09:37,259
versioning and the Ang sember with a few

1551
01:09:37,259 --> 01:09:39,420
issues still to wrap up

1552
01:09:39,420 --> 01:09:41,399
um mainly about just trying to get the

1553
01:09:41,399 --> 01:09:43,679
right text for them

1554
01:09:43,679 --> 01:09:45,779
so we've got a set of people helping out

1555
01:09:45,779 --> 01:09:48,420
on our calls

1556
01:09:48,420 --> 01:09:50,819
um then the plan is to submit those two

1557
01:09:50,819 --> 01:09:51,899
drafts

1558
01:09:51,899 --> 01:09:55,739
to uh a on second and what we're

1559
01:09:55,739 --> 01:09:57,300
thinking is hopefully final working

1560
01:09:57,300 --> 01:09:59,880
group last call and the intention is to

1561
01:09:59,880 --> 01:10:02,940
try to move those forward to RFC so

1562
01:10:02,940 --> 01:10:03,960
we're not going to wait for the last

1563
01:10:03,960 --> 01:10:05,640
three drafts we're going to try to drive

1564
01:10:05,640 --> 01:10:08,280
forward to completion on these two

1565
01:10:08,280 --> 01:10:10,260
um the work's been taking a long time to

1566
01:10:10,260 --> 01:10:12,060
converge I apologize but trust me

1567
01:10:12,060 --> 01:10:14,280
there's a lot of hours I've gone into

1568
01:10:14,280 --> 01:10:15,719
this it's not because we're sitting

1569
01:10:15,719 --> 01:10:18,060
around and not getting to it

1570
01:10:18,060 --> 01:10:20,159
um Oram specifically asked to have these

1571
01:10:20,159 --> 01:10:22,140
two completed and we've heard the same

1572
01:10:22,140 --> 01:10:23,940
message informally from a lot of other

1573
01:10:23,940 --> 01:10:26,460
people who are interested in this work

1574
01:10:26,460 --> 01:10:28,500
and then we'll phase work on the

1575
01:10:28,500 --> 01:10:30,239
remaining documents after that the

1576
01:10:30,239 --> 01:10:32,820
schema comparison packages and version

1577
01:10:32,820 --> 01:10:35,520
selection and there's still a lot of uh

1578
01:10:35,520 --> 01:10:37,679
work to be done on those as well okay

1579
01:10:37,679 --> 01:10:40,260
next slide

1580
01:10:40,260 --> 01:10:43,020
okay so we'll skip these and Kent if you

1581
01:10:43,020 --> 01:10:45,120
don't mind I'll go to the next deck

1582
01:10:45,120 --> 01:10:47,300
please

1583
01:10:52,320 --> 01:10:55,320
okay so now this presentation is just

1584
01:10:55,320 --> 01:10:57,060
about the very first fundamental base

1585
01:10:57,060 --> 01:10:58,860
draft of the versioning work

1586
01:10:58,860 --> 01:11:02,040
called module uh module versioning

1587
01:11:02,040 --> 01:11:06,120
module versioning draft next slide

1588
01:11:06,120 --> 01:11:08,940
okay here's a little bit of a summary

1589
01:11:08,940 --> 01:11:11,940
based on working group last call and

1590
01:11:11,940 --> 01:11:13,620
some updated text these are some of the

1591
01:11:13,620 --> 01:11:16,380
changes we've made to the draft so we

1592
01:11:16,380 --> 01:11:18,860
released version seven

1593
01:11:18,860 --> 01:11:22,020
we reworked the introduction from some

1594
01:11:22,020 --> 01:11:24,300
of the feedback we included a summary of

1595
01:11:24,300 --> 01:11:25,440
the five drafts right in the

1596
01:11:25,440 --> 01:11:27,480
introduction there it helps reduce

1597
01:11:27,480 --> 01:11:31,020
dependency on the uh on another kind of

1598
01:11:31,020 --> 01:11:33,060
overview informational draft that we had

1599
01:11:33,060 --> 01:11:35,100
so that's more contained just in this

1600
01:11:35,100 --> 01:11:37,260
first draft

1601
01:11:37,260 --> 01:11:38,100
um

1602
01:11:38,100 --> 01:11:40,080
as part of the work where we created the

1603
01:11:40,080 --> 01:11:43,980
per node backwards compatible tags we

1604
01:11:43,980 --> 01:11:45,900
rename the top level one just to make it

1605
01:11:45,900 --> 01:11:47,820
really clear that it's different so it's

1606
01:11:47,820 --> 01:11:49,980
that new top level tag is now called

1607
01:11:49,980 --> 01:11:52,620
non-backwards compatible revision just

1608
01:11:52,620 --> 01:11:54,480
be really explicit that applies to the

1609
01:11:54,480 --> 01:11:57,860
entire revision of the module

1610
01:11:58,800 --> 01:11:59,580
um

1611
01:11:59,580 --> 01:12:03,420
we removed the bullet in section 311

1612
01:12:03,420 --> 01:12:04,800
which is the list

1613
01:12:04,800 --> 01:12:07,320
where we take we took 79.50 and all the

1614
01:12:07,320 --> 01:12:10,020
rules in 79.50 about what is compatible

1615
01:12:10,020 --> 01:12:12,000
and what's non-compatible and we've made

1616
01:12:12,000 --> 01:12:15,300
a very small number of updates to that

1617
01:12:15,300 --> 01:12:17,880
one of the updates was that we were

1618
01:12:17,880 --> 01:12:20,219
originally going to allow reordering of

1619
01:12:20,219 --> 01:12:22,440
Yang's statements outside of input and

1620
01:12:22,440 --> 01:12:25,320
output sections but we decided against

1621
01:12:25,320 --> 01:12:27,480
that in the end so as part of this work

1622
01:12:27,480 --> 01:12:29,400
we're not going to open the door to

1623
01:12:29,400 --> 01:12:31,020
reordering we're going to keep

1624
01:12:31,020 --> 01:12:33,360
reordering as a non-backage compatible

1625
01:12:33,360 --> 01:12:37,260
change as per 79.50 everywhere

1626
01:12:37,260 --> 01:12:39,540
there's a number of places we had to

1627
01:12:39,540 --> 01:12:41,219
make we made decisions like this where

1628
01:12:41,219 --> 01:12:43,199
there's things we could kind of optimize

1629
01:12:43,199 --> 01:12:46,080
and change but overall in the end we've

1630
01:12:46,080 --> 01:12:47,640
tried to kind of minimize them and just

1631
01:12:47,640 --> 01:12:50,460
stick with most of 79.50 other than try

1632
01:12:50,460 --> 01:12:53,159
to fix the really the big problems

1633
01:12:53,159 --> 01:12:55,020
there's lots of other little

1634
01:12:55,020 --> 01:12:57,420
optimizations we could make to things

1635
01:12:57,420 --> 01:12:59,400
that maybe are kind of backwards

1636
01:12:59,400 --> 01:13:00,900
compatible maybe we could allow in the

1637
01:13:00,900 --> 01:13:03,659
future but uh that's that was slowing

1638
01:13:03,659 --> 01:13:06,120
down the work wasn't critical and if

1639
01:13:06,120 --> 01:13:07,739
something could be rediscussed in a Yang

1640
01:13:07,739 --> 01:13:11,400
2.0 or future work

1641
01:13:11,400 --> 01:13:12,300
um

1642
01:13:12,300 --> 01:13:14,699
we also as part of this kind of

1643
01:13:14,699 --> 01:13:18,060
Simplicity and getting the work done

1644
01:13:18,060 --> 01:13:21,060
we also decided that changes to import

1645
01:13:21,060 --> 01:13:23,940
statements are going to be classified as

1646
01:13:23,940 --> 01:13:25,560
backwards compatible

1647
01:13:25,560 --> 01:13:29,340
so if you change for example in an

1648
01:13:29,340 --> 01:13:31,980
import which version you're importing

1649
01:13:31,980 --> 01:13:33,960
the idea is we're not going to kind of

1650
01:13:33,960 --> 01:13:36,420
carry through changes that that might

1651
01:13:36,420 --> 01:13:38,400
mean into the current module we're just

1652
01:13:38,400 --> 01:13:39,780
going to call that backwards compatible

1653
01:13:39,780 --> 01:13:42,900
so if different modules import each

1654
01:13:42,900 --> 01:13:43,860
other

1655
01:13:43,860 --> 01:13:46,140
a server and client can know about

1656
01:13:46,140 --> 01:13:48,120
changes by looking at each individual

1657
01:13:48,120 --> 01:13:50,040
module and saying has that module

1658
01:13:50,040 --> 01:13:52,500
changed as the flag the indicator that

1659
01:13:52,500 --> 01:13:56,120
something in the data model has changed

1660
01:13:56,940 --> 01:13:58,140
um

1661
01:13:58,140 --> 01:14:00,300
we clarified some things around the file

1662
01:14:00,300 --> 01:14:01,800
name format

1663
01:14:01,800 --> 01:14:05,940
so as many of you know there's a current

1664
01:14:05,940 --> 01:14:09,360
a current format kind of recommended in

1665
01:14:09,360 --> 01:14:10,500
the guidelines

1666
01:14:10,500 --> 01:14:13,080
that has the the at symbol and a date

1667
01:14:13,080 --> 01:14:15,179
but what we're saying is that if you're

1668
01:14:15,179 --> 01:14:17,219
using labeling we're recommending that

1669
01:14:17,219 --> 01:14:19,620
instead you start using a hash and the

1670
01:14:19,620 --> 01:14:20,580
label

1671
01:14:20,580 --> 01:14:21,540
okay

1672
01:14:21,540 --> 01:14:24,239
if the label is available

1673
01:14:24,239 --> 01:14:27,060
and then we also clarified some text on

1674
01:14:27,060 --> 01:14:28,739
what it means to

1675
01:14:28,739 --> 01:14:31,140
reduce the value set of a leaf so a

1676
01:14:31,140 --> 01:14:32,640
little more clear around that saying

1677
01:14:32,640 --> 01:14:34,080
that um

1678
01:14:34,080 --> 01:14:36,179
as long as all the values that were

1679
01:14:36,179 --> 01:14:37,860
previously accepted are still accepted

1680
01:14:37,860 --> 01:14:42,080
then you're not reducing value space

1681
01:14:42,080 --> 01:14:44,340
so those are the main changes let me

1682
01:14:44,340 --> 01:14:47,300
skip to the next slide please

1683
01:14:48,659 --> 01:14:50,100
so

1684
01:14:50,100 --> 01:14:52,500
as I mentioned a big part of the work we

1685
01:14:52,500 --> 01:14:55,920
did since the last ITF was to fully

1686
01:14:55,920 --> 01:14:57,780
invest in defining these per node

1687
01:14:57,780 --> 01:15:00,420
compatibility indicators we weren't sure

1688
01:15:00,420 --> 01:15:03,420
three months ago for sure whether we

1689
01:15:03,420 --> 01:15:05,280
were going to include these as part of

1690
01:15:05,280 --> 01:15:07,500
module versioning or not

1691
01:15:07,500 --> 01:15:09,300
uh but we want to do the work to Define

1692
01:15:09,300 --> 01:15:11,640
them in either case so

1693
01:15:11,640 --> 01:15:14,100
we've gone through and defined them

1694
01:15:14,100 --> 01:15:15,900
um there's basically three indicators

1695
01:15:15,900 --> 01:15:18,179
and they're all optional

1696
01:15:18,179 --> 01:15:20,219
so the key is at the top level of the

1697
01:15:20,219 --> 01:15:21,360
module

1698
01:15:21,360 --> 01:15:23,100
it's kind of mandatory if you've made a

1699
01:15:23,100 --> 01:15:24,420
non-backwards compatible change

1700
01:15:24,420 --> 01:15:26,460
somewhere in the module and you want to

1701
01:15:26,460 --> 01:15:27,960
document that for the users of the

1702
01:15:27,960 --> 01:15:30,840
module so you have to mark the module

1703
01:15:30,840 --> 01:15:33,060
overall the revision as non-backwards

1704
01:15:33,060 --> 01:15:34,080
compatible

1705
01:15:34,080 --> 01:15:37,980
optionally if you wish you can Mark what

1706
01:15:37,980 --> 01:15:40,440
what this work says is you can Mark

1707
01:15:40,440 --> 01:15:42,719
individual nodes saying well it was

1708
01:15:42,719 --> 01:15:45,179
actually this node that changed and you

1709
01:15:45,179 --> 01:15:46,980
can keep a whole history if you would

1710
01:15:46,980 --> 01:15:49,560
like in the right in the details of the

1711
01:15:49,560 --> 01:15:51,719
API

1712
01:15:51,719 --> 01:15:54,239
um there's pros and cons of that

1713
01:15:54,239 --> 01:15:57,239
um but it is an optional marker it's

1714
01:15:57,239 --> 01:16:00,960
particularly useful when a tool or even

1715
01:16:00,960 --> 01:16:04,020
a user might assume that A Change Is

1716
01:16:04,020 --> 01:16:06,000
would be classified in a different way

1717
01:16:06,000 --> 01:16:10,199
than you might expect so for example

1718
01:16:10,199 --> 01:16:13,380
um a pattern change is often very hard

1719
01:16:13,380 --> 01:16:14,699
to interpret

1720
01:16:14,699 --> 01:16:16,560
depending how complex the pattern is the

1721
01:16:16,560 --> 01:16:19,140
regex so this allows an author to say I

1722
01:16:19,140 --> 01:16:21,420
know this looks like a change but you

1723
01:16:21,420 --> 01:16:22,739
could tag it saying this is actually

1724
01:16:22,739 --> 01:16:24,239
backwards compatible I've just

1725
01:16:24,239 --> 01:16:27,239
reformatted reformulated my regex

1726
01:16:27,239 --> 01:16:31,679
uh another use case is you might reduce

1727
01:16:31,679 --> 01:16:34,260
a range in a configuration Leaf which

1728
01:16:34,260 --> 01:16:36,540
normally is non-backwards compatible

1729
01:16:36,540 --> 01:16:39,120
but if you're for example a vendor and

1730
01:16:39,120 --> 01:16:41,460
your implementation never accepted some

1731
01:16:41,460 --> 01:16:43,320
of the values that you had in your range

1732
01:16:43,320 --> 01:16:46,679
you're just doing a bug fix to fix your

1733
01:16:46,679 --> 01:16:48,600
module so it more correctly documents

1734
01:16:48,600 --> 01:16:50,900
the constraints that always were there

1735
01:16:50,900 --> 01:16:54,960
so if you had a range 100 whoops my

1736
01:16:54,960 --> 01:16:58,020
implementation only accepts 1 to 50.

1737
01:16:58,020 --> 01:17:00,120
the server never would have accepted the

1738
01:17:00,120 --> 01:17:02,520
value 75 so you fix the module

1739
01:17:02,520 --> 01:17:04,020
officially that's a non-backage

1740
01:17:04,020 --> 01:17:05,640
compatible change but you could mark it

1741
01:17:05,640 --> 01:17:07,980
here that specific one no that was

1742
01:17:07,980 --> 01:17:10,140
backwards compatible so there's a few

1743
01:17:10,140 --> 01:17:12,900
use cases for this

1744
01:17:12,900 --> 01:17:16,980
um but in the end it is still there's a

1745
01:17:16,980 --> 01:17:18,000
number of reasons we don't want to

1746
01:17:18,000 --> 01:17:20,280
include it in the base draft

1747
01:17:20,280 --> 01:17:24,300
um so one one thing is at the module

1748
01:17:24,300 --> 01:17:26,699
level the top level we need that no

1749
01:17:26,699 --> 01:17:28,199
matter what it's kind of the fundamental

1750
01:17:28,199 --> 01:17:30,900
marker just to indicate an NBC change

1751
01:17:30,900 --> 01:17:32,880
has occurred that's the one that has

1752
01:17:32,880 --> 01:17:35,159
broad interest we're already seeing it

1753
01:17:35,159 --> 01:17:36,600
actually used in the industry with open

1754
01:17:36,600 --> 01:17:39,600
config I think some vendors are actually

1755
01:17:39,600 --> 01:17:41,040
already kind of using proprietary

1756
01:17:41,040 --> 01:17:43,739
versions of it so we know that one is

1757
01:17:43,739 --> 01:17:45,600
simple well understood and there's

1758
01:17:45,600 --> 01:17:48,719
already has interest in adoption

1759
01:17:48,719 --> 01:17:51,900
the per node ones are useful they are

1760
01:17:51,900 --> 01:17:54,480
more complex so you can look in the

1761
01:17:54,480 --> 01:17:56,100
schema comparison draft for the text

1762
01:17:56,100 --> 01:17:58,199
sounds very simple but when you start

1763
01:17:58,199 --> 01:17:59,760
looking at some Corner cases what

1764
01:17:59,760 --> 01:18:02,219
happens when something's removed

1765
01:18:02,219 --> 01:18:03,719
it does get a little bit more

1766
01:18:03,719 --> 01:18:05,239
complicated

1767
01:18:05,239 --> 01:18:09,239
so we really felt that is is an optional

1768
01:18:09,239 --> 01:18:11,880
extension to this work not part of the

1769
01:18:11,880 --> 01:18:14,179
base work

1770
01:18:14,179 --> 01:18:16,440
it also the per node markers we

1771
01:18:16,440 --> 01:18:18,659
definitely found fit better with the

1772
01:18:18,659 --> 01:18:20,640
schema comparison discussions and the

1773
01:18:20,640 --> 01:18:22,739
tooling topic so we think there's a good

1774
01:18:22,739 --> 01:18:24,600
fit there with the schema comparison

1775
01:18:24,600 --> 01:18:27,060
draft

1776
01:18:27,060 --> 01:18:29,400
um and we also felt that

1777
01:18:29,400 --> 01:18:30,060
um

1778
01:18:30,060 --> 01:18:32,640
at least within the weekly call group

1779
01:18:32,640 --> 01:18:34,739
we kind of like the idea that the body

1780
01:18:34,739 --> 01:18:38,340
the module is really just the API it's

1781
01:18:38,340 --> 01:18:40,140
not a whole bunch it's not littered with

1782
01:18:40,140 --> 01:18:41,820
a whole bunch of history about how the

1783
01:18:41,820 --> 01:18:44,100
API has changed over time it's just

1784
01:18:44,100 --> 01:18:46,260
here's my version three of the module

1785
01:18:46,260 --> 01:18:49,699
the body of it describes the API and it

1786
01:18:49,699 --> 01:18:51,840
sometimes maybe it's better to leave all

1787
01:18:51,840 --> 01:18:53,460
the history annotation to the top

1788
01:18:53,460 --> 01:18:55,860
separate so

1789
01:18:55,860 --> 01:18:57,900
those are some of the reasons we decided

1790
01:18:57,900 --> 01:18:59,880
that uh we don't want to include it as

1791
01:18:59,880 --> 01:19:01,380
part of the of the base module version

1792
01:19:01,380 --> 01:19:03,120
and graph

1793
01:19:03,120 --> 01:19:06,920
okay go on to the next slide

1794
01:19:08,100 --> 01:19:10,620
okay so what are the outstanding issues

1795
01:19:10,620 --> 01:19:12,239
for this draft

1796
01:19:12,239 --> 01:19:13,620
we're really trying to drive this to

1797
01:19:13,620 --> 01:19:15,179
completion

1798
01:19:15,179 --> 01:19:17,760
um there is still one fairly significant

1799
01:19:17,760 --> 01:19:20,219
one and that is we're debating what to

1800
01:19:20,219 --> 01:19:22,320
do with the revision or derive the

1801
01:19:22,320 --> 01:19:24,420
import by revision or drive so we've got

1802
01:19:24,420 --> 01:19:26,580
some comments on the list

1803
01:19:26,580 --> 01:19:28,679
um we're looking at maybe making it less

1804
01:19:28,679 --> 01:19:31,679
strict as a hint instead of a absolute

1805
01:19:31,679 --> 01:19:33,659
strict rule

1806
01:19:33,659 --> 01:19:35,760
um and I do have a slide on that moment

1807
01:19:35,760 --> 01:19:37,679
there's about a half dozen more minor

1808
01:19:37,679 --> 01:19:39,420
updates required based on the working

1809
01:19:39,420 --> 01:19:41,100
group previous working group last call

1810
01:19:41,100 --> 01:19:42,960
we have the captured in GitHub issues

1811
01:19:42,960 --> 01:19:44,640
and we're just trying to make fix the

1812
01:19:44,640 --> 01:19:46,739
text for those

1813
01:19:46,739 --> 01:19:49,739
and

1814
01:19:49,920 --> 01:19:51,659
I already talked about the third bullet

1815
01:19:51,659 --> 01:19:54,300
the the per no compatibility extensions

1816
01:19:54,300 --> 01:19:56,460
next slide

1817
01:19:56,460 --> 01:19:58,140
Okay so

1818
01:19:58,140 --> 01:20:02,159
softening of revision or drive so

1819
01:20:02,159 --> 01:20:04,800
we uh as part of the module versioning

1820
01:20:04,800 --> 01:20:08,820
work we are trying to improve how

1821
01:20:08,820 --> 01:20:12,239
imports are described so a Yang module

1822
01:20:12,239 --> 01:20:15,120
can can import another Yang module in

1823
01:20:15,120 --> 01:20:17,580
7950 you can do that by saying I want to

1824
01:20:17,580 --> 01:20:19,739
import a very specific version

1825
01:20:19,739 --> 01:20:21,780
but there's definitely been consensus in

1826
01:20:21,780 --> 01:20:23,219
the working group that that importing by

1827
01:20:23,219 --> 01:20:25,260
specific reversion aversion doesn't

1828
01:20:25,260 --> 01:20:28,500
really work it Bri it's too brittle and

1829
01:20:28,500 --> 01:20:31,739
as soon as you churn the imported module

1830
01:20:31,739 --> 01:20:33,239
you got to go find all the importing

1831
01:20:33,239 --> 01:20:35,219
modules and go update those to say oh

1832
01:20:35,219 --> 01:20:37,140
actually I want the new version now so

1833
01:20:37,140 --> 01:20:40,080
it doesn't really work very well

1834
01:20:40,080 --> 01:20:42,239
um so we've introduced this concept

1835
01:20:42,239 --> 01:20:44,100
which is

1836
01:20:44,100 --> 01:20:47,640
uh it's not perfect either but it's what

1837
01:20:47,640 --> 01:20:51,840
we believe is the best uh way forward to

1838
01:20:51,840 --> 01:20:54,600
solve the kind of worst of the problems

1839
01:20:54,600 --> 01:20:56,820
and that is to allow Yang module to say

1840
01:20:56,820 --> 01:20:59,520
hey I want to import at least this

1841
01:20:59,520 --> 01:21:00,420
version

1842
01:21:00,420 --> 01:21:02,520
okay and it could be this version or

1843
01:21:02,520 --> 01:21:05,100
anything after it because I know at

1844
01:21:05,100 --> 01:21:07,260
least I have the new definitions of this

1845
01:21:07,260 --> 01:21:10,739
grouping or I have a 6991 bits I need

1846
01:21:10,739 --> 01:21:12,780
this new whatever one of the new things

1847
01:21:12,780 --> 01:21:15,420
that we're putting in the 6591 is

1848
01:21:15,420 --> 01:21:17,040
um and you can say I want that version

1849
01:21:17,040 --> 01:21:19,380
onwards

1850
01:21:19,380 --> 01:21:20,219
um

1851
01:21:20,219 --> 01:21:21,840
where we're struggling a little bit and

1852
01:21:21,840 --> 01:21:25,020
still a bit of an open issue is how

1853
01:21:25,020 --> 01:21:29,040
strict we want to be about that so

1854
01:21:29,040 --> 01:21:32,880
um today uh today the language in the

1855
01:21:32,880 --> 01:21:36,239
draft is somewhat strict it says You

1856
01:21:36,239 --> 01:21:38,179
must import

1857
01:21:38,179 --> 01:21:41,580
a version that is at least this version

1858
01:21:41,580 --> 01:21:45,840
or is a descendant of it we're looking

1859
01:21:45,840 --> 01:21:49,800
at maybe softening that and

1860
01:21:49,800 --> 01:21:51,780
it's a little bit to do with trying to

1861
01:21:51,780 --> 01:21:52,800
be

1862
01:21:52,800 --> 01:21:53,400
um

1863
01:21:53,400 --> 01:21:57,000
more compatible with current tools and

1864
01:21:57,000 --> 01:21:59,820
the way current tool current tools will

1865
01:21:59,820 --> 01:22:02,400
work which allows more flexibility in

1866
01:22:02,400 --> 01:22:03,840
what version is used so if you don't

1867
01:22:03,840 --> 01:22:07,440
specify a specific version

1868
01:22:07,440 --> 01:22:09,420
um a tool or a client is allowed to kind

1869
01:22:09,420 --> 01:22:10,739
of

1870
01:22:10,739 --> 01:22:13,860
it's a bit inconsistent in the standards

1871
01:22:13,860 --> 01:22:15,840
right now some places say you have to

1872
01:22:15,840 --> 01:22:17,159
grab the latest

1873
01:22:17,159 --> 01:22:20,040
some say it's kind of undefined

1874
01:22:20,040 --> 01:22:22,739
um so what we want to do is a la allow

1875
01:22:22,739 --> 01:22:25,500
that to maintain

1876
01:22:25,500 --> 01:22:26,520
um

1877
01:22:26,520 --> 01:22:28,739
allow that behavior to be maintained so

1878
01:22:28,739 --> 01:22:30,540
it's more we're looking up to be a

1879
01:22:30,540 --> 01:22:33,360
suggestion saying hey if this version or

1880
01:22:33,360 --> 01:22:35,580
derived version is around we'd recommend

1881
01:22:35,580 --> 01:22:37,920
you pick it up

1882
01:22:37,920 --> 01:22:39,420
um but if you don't have that version

1883
01:22:39,420 --> 01:22:41,520
available to you you're allowed to make

1884
01:22:41,520 --> 01:22:44,040
a decision like the current 7950 rules

1885
01:22:44,040 --> 01:22:46,620
allow you to make as in pick up whatever

1886
01:22:46,620 --> 01:22:48,719
arbitrary version is available or pick

1887
01:22:48,719 --> 01:22:51,199
up the latest

1888
01:22:51,480 --> 01:22:52,800
um

1889
01:22:52,800 --> 01:22:54,659
part of the part of the thing we're

1890
01:22:54,659 --> 01:22:58,199
scratching our heads about as well is

1891
01:22:58,199 --> 01:23:02,100
when you have a an import statement by

1892
01:23:02,100 --> 01:23:05,100
by version in a Yang module

1893
01:23:05,100 --> 01:23:07,620
how is that used what users or tools

1894
01:23:07,620 --> 01:23:10,020
actually use that when you picture a

1895
01:23:10,020 --> 01:23:12,360
server and a server advertises to you in

1896
01:23:12,360 --> 01:23:14,460
Yang Library here's the modules and the

1897
01:23:14,460 --> 01:23:16,560
versions I support well those are the

1898
01:23:16,560 --> 01:23:18,780
versions it supports so

1899
01:23:18,780 --> 01:23:21,420
if whatever the constraint says on the

1900
01:23:21,420 --> 01:23:23,640
import statement the server is telling

1901
01:23:23,640 --> 01:23:26,040
you what it's supporting

1902
01:23:26,040 --> 01:23:28,679
so unless there's ambiguity and what the

1903
01:23:28,679 --> 01:23:30,420
server is reporting if the server is

1904
01:23:30,420 --> 01:23:33,659
reporting multiple versions which is

1905
01:23:33,659 --> 01:23:36,199
only allowed for import only

1906
01:23:36,199 --> 01:23:38,640
modules it's only allowed to implement

1907
01:23:38,640 --> 01:23:42,780
one module one version of a module so

1908
01:23:42,780 --> 01:23:44,280
um

1909
01:23:44,280 --> 01:23:46,320
I mean the client at that point knows

1910
01:23:46,320 --> 01:23:49,199
what the server is telling it is to be

1911
01:23:49,199 --> 01:23:50,820
used so

1912
01:23:50,820 --> 01:23:53,820
we're also in the middle of debating uh

1913
01:23:53,820 --> 01:23:56,760
exactly how is this import by version

1914
01:23:56,760 --> 01:24:00,719
used like what uses it it

1915
01:24:00,719 --> 01:24:02,699
especially given a server is going to

1916
01:24:02,699 --> 01:24:05,040
advertise what what versions it's using

1917
01:24:05,040 --> 01:24:06,000
so

1918
01:24:06,000 --> 01:24:07,860
apologize if that isn't clear we're

1919
01:24:07,860 --> 01:24:09,900
still actually trying to hit our heads

1920
01:24:09,900 --> 01:24:12,120
around what we should do on this one and

1921
01:24:12,120 --> 01:24:14,540
uh it's a little bit of a complex one

1922
01:24:14,540 --> 01:24:16,679
any feedback here if people have

1923
01:24:16,679 --> 01:24:19,920
thoughts is great but also uh please

1924
01:24:19,920 --> 01:24:22,320
join the weekly calls if you have some

1925
01:24:22,320 --> 01:24:25,159
ideas or thoughts around how this import

1926
01:24:25,159 --> 01:24:28,820
should or could work

1927
01:24:30,659 --> 01:24:34,159
okay we'll go to the next slide

1928
01:24:35,159 --> 01:24:36,960
uh no okay so that's it for this

1929
01:24:36,960 --> 01:24:39,239
presentation I'm gonna hand over to Joe

1930
01:24:39,239 --> 01:24:43,339
then to talk about uh Yang's number

1931
01:24:46,699 --> 01:24:49,380
thanks for keeping us up to date on

1932
01:24:49,380 --> 01:24:52,620
where the document stands uh clearly

1933
01:24:52,620 --> 01:24:54,840
this is uh getting a lot of interest

1934
01:24:54,840 --> 01:24:58,980
from uh the community and from uh users

1935
01:24:58,980 --> 01:25:01,380
and implementers if you haven't been

1936
01:25:01,380 --> 01:25:03,960
tracking uh it's a good time to go read

1937
01:25:03,960 --> 01:25:06,840
the document we are closing on just a

1938
01:25:06,840 --> 01:25:09,420
few more issues and then uh expect to do

1939
01:25:09,420 --> 01:25:12,120
a second last call

1940
01:25:12,120 --> 01:25:16,280
I look like Rob looks confused

1941
01:25:17,120 --> 01:25:19,620
I sure hope not

1942
01:25:19,620 --> 01:25:21,900
everyone I'm Joe Clark I'll be

1943
01:25:21,900 --> 01:25:25,320
presenting Yang simver and uh I I had to

1944
01:25:25,320 --> 01:25:27,780
laugh because on the um Jason's slide it

1945
01:25:27,780 --> 01:25:30,719
had capital S capital V after Yang and

1946
01:25:30,719 --> 01:25:32,940
as you'll see in a a minute we we were

1947
01:25:32,940 --> 01:25:35,940
very prescriptive in how we write things

1948
01:25:35,940 --> 01:25:37,920
and it shouldn't have been with the

1949
01:25:37,920 --> 01:25:40,140
capital V anyway

1950
01:25:40,140 --> 01:25:40,739
um

1951
01:25:40,739 --> 01:25:43,199
next slide please

1952
01:25:43,199 --> 01:25:46,320
so what happened between last time and

1953
01:25:46,320 --> 01:25:50,760
this time we released a REV uh 0.0008

1954
01:25:50,760 --> 01:25:53,219
um which finalizes the working group

1955
01:25:53,219 --> 01:25:56,219
last call comments from way back when uh

1956
01:25:56,219 --> 01:25:58,739
from uh Jurgen and Andy or we think we

1957
01:25:58,739 --> 01:26:01,320
hope uh we we finalized it

1958
01:26:01,320 --> 01:26:03,239
um let me talk about that

1959
01:26:03,239 --> 01:26:06,600
um sember thing so in our in in the

1960
01:26:06,600 --> 01:26:09,659
draft it talks about the December 2.0

1961
01:26:09,659 --> 01:26:12,600
and if you go to December 2.0.0 and if

1962
01:26:12,600 --> 01:26:15,179
you go to semver.org you will see that

1963
01:26:15,179 --> 01:26:17,040
the way they write it is capital S

1964
01:26:17,040 --> 01:26:18,600
capital V

1965
01:26:18,600 --> 01:26:21,840
we wanted to disambiguate ourselves as

1966
01:26:21,840 --> 01:26:24,120
much as possible so that this draft

1967
01:26:24,120 --> 01:26:26,400
describes a revision labeling scheme

1968
01:26:26,400 --> 01:26:28,920
that we call Yang simver as a proper

1969
01:26:28,920 --> 01:26:31,139
noun and we Define that in our

1970
01:26:31,139 --> 01:26:33,840
terminology section uh we differentiate

1971
01:26:33,840 --> 01:26:36,420
between capital S capital V sember

1972
01:26:36,420 --> 01:26:39,480
December 2.0.0 which we reference in

1973
01:26:39,480 --> 01:26:40,620
that document

1974
01:26:40,620 --> 01:26:43,080
that said there is a relationship

1975
01:26:43,080 --> 01:26:44,840
between the two

1976
01:26:44,840 --> 01:26:49,560
we augment so to speak or we extend the

1977
01:26:49,560 --> 01:26:53,460
base rules of simver 2.0.0 with our own

1978
01:26:53,460 --> 01:26:57,659
semantics but our our scheme can be

1979
01:26:57,659 --> 01:27:00,659
backwards compatible or or if you do not

1980
01:27:00,659 --> 01:27:03,179
use our modifiers that we have you end

1981
01:27:03,179 --> 01:27:05,699
up with something that obeys the simver

1982
01:27:05,699 --> 01:27:07,800
2.0.0 rules

1983
01:27:07,800 --> 01:27:10,199
so we clarified some of that with

1984
01:27:10,199 --> 01:27:12,500
additional text within the document

1985
01:27:12,500 --> 01:27:16,080
we also defined what is meant by an

1986
01:27:16,080 --> 01:27:18,480
editorial change there was some text in

1987
01:27:18,480 --> 01:27:20,280
there already but we kind of pulled it

1988
01:27:20,280 --> 01:27:22,860
out and made it a little bit clearer

1989
01:27:22,860 --> 01:27:25,679
um there was a discussion in working

1990
01:27:25,679 --> 01:27:29,100
group last call about when one should uh

1991
01:27:29,100 --> 01:27:30,960
as you're doing like pre-release you're

1992
01:27:30,960 --> 01:27:33,900
doing module or draft development with a

1993
01:27:33,900 --> 01:27:36,360
Yang module in it when should you if

1994
01:27:36,360 --> 01:27:38,520
you're going to use the Yang Simba rules

1995
01:27:38,520 --> 01:27:42,719
and uh we and the I we think is the as

1996
01:27:42,719 --> 01:27:45,900
the people on the call that we should

1997
01:27:45,900 --> 01:27:48,780
push for uh Yang simvar to be used as a

1998
01:27:48,780 --> 01:27:51,000
revision label scheme for ietf modules

1999
01:27:51,000 --> 01:27:53,219
so when you're doing that ietf module

2000
01:27:53,219 --> 01:27:56,460
development when do you have to bump

2001
01:27:56,460 --> 01:27:59,940
that uh that uh semver uh or the the

2002
01:27:59,940 --> 01:28:01,320
revision label

2003
01:28:01,320 --> 01:28:03,360
um so we clarified when that happens and

2004
01:28:03,360 --> 01:28:05,580
in fact because we did make some changes

2005
01:28:05,580 --> 01:28:07,380
to the Yang module that's in this

2006
01:28:07,380 --> 01:28:09,659
document this is a time where we did

2007
01:28:09,659 --> 01:28:12,600
bump that so the current revision label

2008
01:28:12,600 --> 01:28:15,360
for the module within this document now

2009
01:28:15,360 --> 01:28:18,239
does match 08. and then there were some

2010
01:28:18,239 --> 01:28:20,699
ID knit problems some long lines and

2011
01:28:20,699 --> 01:28:22,620
whatnot so we got things kind of Tidy

2012
01:28:22,620 --> 01:28:26,219
for that second working group last call

2013
01:28:26,219 --> 01:28:28,199
next slide please

2014
01:28:28,199 --> 01:28:31,560
one of the things that came up both in

2015
01:28:31,560 --> 01:28:33,120
working group last call there's been

2016
01:28:33,120 --> 01:28:35,460
some discussion about it and we kind of

2017
01:28:35,460 --> 01:28:37,139
raised it I don't remember who first

2018
01:28:37,139 --> 01:28:40,699
raised it on on the Tuesday call was

2019
01:28:40,699 --> 01:28:43,860
what about these things that might be

2020
01:28:43,860 --> 01:28:46,800
considered bad trees or bad version

2021
01:28:46,800 --> 01:28:48,080
lineages

2022
01:28:48,080 --> 01:28:51,239
we might need additional text to cover

2023
01:28:51,239 --> 01:28:53,880
what is allowed and what isn't allowed

2024
01:28:53,880 --> 01:28:55,620
so some of the things that have been

2025
01:28:55,620 --> 01:28:58,139
said on list and that we've talked about

2026
01:28:58,139 --> 01:29:00,480
and Jason mentioned this whole idea of

2027
01:29:00,480 --> 01:29:03,659
lineage in his presentation that the

2028
01:29:03,659 --> 01:29:05,639
revision label is kind of like an alias

2029
01:29:05,639 --> 01:29:07,980
it's a reference it says

2030
01:29:07,980 --> 01:29:10,620
given this revision label it points to a

2031
01:29:10,620 --> 01:29:12,600
revision and once we know the revision

2032
01:29:12,600 --> 01:29:15,239
we can work our way up and we can find

2033
01:29:15,239 --> 01:29:18,300
where this where our current module

2034
01:29:18,300 --> 01:29:21,179
where it descended from who was its its

2035
01:29:21,179 --> 01:29:23,100
its parent or grandparent and so on and

2036
01:29:23,100 --> 01:29:25,199
so forth and that's all well and good

2037
01:29:25,199 --> 01:29:27,780
that's I have the Alias I can find my

2038
01:29:27,780 --> 01:29:29,699
revision I can work my way back in the

2039
01:29:29,699 --> 01:29:32,219
history uh and I know whether or not I

2040
01:29:32,219 --> 01:29:34,440
was derived from this other module

2041
01:29:34,440 --> 01:29:37,560
but there are implied rules with semver

2042
01:29:37,560 --> 01:29:40,260
that the human brain just latches on to

2043
01:29:40,260 --> 01:29:43,679
that says that if I have something that

2044
01:29:43,679 --> 01:29:48,420
is 3.5 dot two let's say and I have

2045
01:29:48,420 --> 01:29:49,639
something that's

2046
01:29:49,639 --> 01:29:52,800
3.5.1 or let's do something better if I

2047
01:29:52,800 --> 01:29:54,900
have something 3.7 and I have something

2048
01:29:54,900 --> 01:29:59,760
that's 3.6 I might assume that 3.7 uh is

2049
01:29:59,760 --> 01:30:01,980
backwards compatible with 3.6 just

2050
01:30:01,980 --> 01:30:03,960
because that's how my brain thinks about

2051
01:30:03,960 --> 01:30:07,020
simver but what we realized was there

2052
01:30:07,020 --> 01:30:10,020
was no text in the document that really

2053
01:30:10,020 --> 01:30:12,120
said that that was the case that you

2054
01:30:12,120 --> 01:30:15,300
could that you we wanted 3.7 to be

2055
01:30:15,300 --> 01:30:17,820
backwards compatible with 3.6 so we

2056
01:30:17,820 --> 01:30:20,040
started to explore what is starting on

2057
01:30:20,040 --> 01:30:21,840
the next slide please

2058
01:30:21,840 --> 01:30:25,199
what are good and and bad lineages or

2059
01:30:25,199 --> 01:30:28,560
good and bad trees so here is the bad

2060
01:30:28,560 --> 01:30:31,800
tree and this is the text that we added

2061
01:30:31,800 --> 01:30:33,719
um around this I'm not going to read the

2062
01:30:33,719 --> 01:30:35,520
whole text there it's up on the slide

2063
01:30:35,520 --> 01:30:38,400
it's in the draft but let's say

2064
01:30:38,400 --> 01:30:41,159
you had a 3.5.0

2065
01:30:41,159 --> 01:30:45,120
and you went and added a 3.6.0 where you

2066
01:30:45,120 --> 01:30:48,659
added a leaf called Foo to 3.6.0

2067
01:30:48,659 --> 01:30:52,739
but then you decided to create a 3.20.0

2068
01:30:52,739 --> 01:30:56,219
later on and you added a leaf bar but

2069
01:30:56,219 --> 01:31:00,000
instead of descending from 3.6.0 you

2070
01:31:00,000 --> 01:31:03,179
descend it again from 3.5.0

2071
01:31:03,179 --> 01:31:05,280
well if you just look at this from the

2072
01:31:05,280 --> 01:31:08,460
whole a sem a yang symbol is a revision

2073
01:31:08,460 --> 01:31:10,920
label which is an alias to a revision

2074
01:31:10,920 --> 01:31:13,080
you would look up the revision and you

2075
01:31:13,080 --> 01:31:15,659
could find that 3.20 did in fact not

2076
01:31:15,659 --> 01:31:18,719
descend from 3.6 great

2077
01:31:18,719 --> 01:31:21,659
so it it obeys Yang versioning what

2078
01:31:21,659 --> 01:31:24,600
Jason described but from a Yang simmer

2079
01:31:24,600 --> 01:31:26,280
standpoint

2080
01:31:26,280 --> 01:31:28,860
this is kind of weird right you would

2081
01:31:28,860 --> 01:31:33,000
assume that 3.20.0 and 3.6.0 would have

2082
01:31:33,000 --> 01:31:34,880
a relationship that there would be some

2083
01:31:34,880 --> 01:31:37,980
backwards compatibility there but if you

2084
01:31:37,980 --> 01:31:41,060
were a user of Lee Fu and you went the

2085
01:31:41,060 --> 01:31:44,580
3.20.0 assuming that well it's just a

2086
01:31:44,580 --> 01:31:47,040
minor revision Leaf Fu should be there

2087
01:31:47,040 --> 01:31:50,159
you might be surprised that it's not and

2088
01:31:50,159 --> 01:31:52,820
that there is no backwards compatibility

2089
01:31:52,820 --> 01:31:56,100
this type of revision

2090
01:31:56,100 --> 01:31:58,320
this type of changes from a revision

2091
01:31:58,320 --> 01:32:00,600
standpoint it's perfectly legal

2092
01:32:00,600 --> 01:32:02,639
we're not saying that it isn't

2093
01:32:02,639 --> 01:32:05,460
the text that we added however says that

2094
01:32:05,460 --> 01:32:07,440
if you're going to do something like

2095
01:32:07,440 --> 01:32:08,639
this

2096
01:32:08,639 --> 01:32:10,980
you can't use Yang Simba as a revision

2097
01:32:10,980 --> 01:32:13,440
label scheme Yang simber has some

2098
01:32:13,440 --> 01:32:16,620
additional implications that says you

2099
01:32:16,620 --> 01:32:18,060
need to follow those rules the human

2100
01:32:18,060 --> 01:32:20,719
brain should look at this and say yep

2101
01:32:20,719 --> 01:32:23,699
3.20.0 naturally it's backwards

2102
01:32:23,699 --> 01:32:27,120
compatible with 3.6.0 so in this case I

2103
01:32:27,120 --> 01:32:29,400
wouldn't be able to use Yang simver if

2104
01:32:29,400 --> 01:32:31,500
this is the the kind of branching that I

2105
01:32:31,500 --> 01:32:32,880
have

2106
01:32:32,880 --> 01:32:35,760
uh not supported in this revision label

2107
01:32:35,760 --> 01:32:39,560
scheme next slide please

2108
01:32:40,620 --> 01:32:42,600
this naturally

2109
01:32:42,600 --> 01:32:45,300
um precipitated other questions so are

2110
01:32:45,300 --> 01:32:47,940
these so so Jason brought up

2111
01:32:47,940 --> 01:32:49,980
um because he he does this everything

2112
01:32:49,980 --> 01:32:51,840
seems like okay we've got it where we

2113
01:32:51,840 --> 01:32:53,340
need it to be he's like well what about

2114
01:32:53,340 --> 01:32:56,580
this so what about these other trees are

2115
01:32:56,580 --> 01:32:58,199
they allowed

2116
01:32:58,199 --> 01:33:01,320
um in this case an A in the A1 case uh

2117
01:33:01,320 --> 01:33:05,420
we have a 3.5.0 and we move to a 3.51

2118
01:33:05,420 --> 01:33:08,340
compatible and we did that because it

2119
01:33:08,340 --> 01:33:11,400
was a an editorial or patch change where

2120
01:33:11,400 --> 01:33:14,280
we added a leaf food so we have to use

2121
01:33:14,280 --> 01:33:16,920
um our modifier compatible and later on

2122
01:33:16,920 --> 01:33:21,120
we added a 3.20.0 that added Leaf bar in

2123
01:33:21,120 --> 01:33:23,100
this case we think yes this is allowed

2124
01:33:23,100 --> 01:33:26,040
because as you read the text uh with

2125
01:33:26,040 --> 01:33:28,679
those modifiers uh compatible not not

2126
01:33:28,679 --> 01:33:31,260
compatible all bets are off when you

2127
01:33:31,260 --> 01:33:33,780
start adding compatible that when you

2128
01:33:33,780 --> 01:33:36,060
start adding those modifiers all bets

2129
01:33:36,060 --> 01:33:37,560
are off and we think this is more of a

2130
01:33:37,560 --> 01:33:39,719
corner case because we think in general

2131
01:33:39,719 --> 01:33:42,179
a lot of development would not

2132
01:33:42,179 --> 01:33:44,820
necessarily use the modifiers and then

2133
01:33:44,820 --> 01:33:48,420
he created an A2 which is like A1 but

2134
01:33:48,420 --> 01:33:49,920
with additional

2135
01:33:49,920 --> 01:33:50,760
um

2136
01:33:50,760 --> 01:33:54,420
qualification for time but still we

2137
01:33:54,420 --> 01:33:57,480
think that both A1 and A1 Prime are A2

2138
01:33:57,480 --> 01:33:59,880
those would be allowed

2139
01:33:59,880 --> 01:34:03,179
uh next slide please

2140
01:34:03,179 --> 01:34:07,139
so A3 is this allowed so in this case we

2141
01:34:07,139 --> 01:34:11,280
have a patch or editorial change 2.3.5

2142
01:34:11,280 --> 01:34:14,820
and we created a new 2.3.6 maybe we

2143
01:34:14,820 --> 01:34:16,380
fixed the spelling of the word

2144
01:34:16,380 --> 01:34:18,000
registered which I did in our draft

2145
01:34:18,000 --> 01:34:20,699
because I forgot an e and then later on

2146
01:34:20,699 --> 01:34:23,760
we create a 2.3.20 again a patch

2147
01:34:23,760 --> 01:34:26,840
revision or editorial descendant from

2148
01:34:26,840 --> 01:34:30,840
2.3.5 we think this is also legal

2149
01:34:30,840 --> 01:34:33,120
because in this case there is

2150
01:34:33,120 --> 01:34:35,580
backwards compatibility because of the

2151
01:34:35,580 --> 01:34:37,860
definition of what those patch without a

2152
01:34:37,860 --> 01:34:39,719
modifier what those patch revision

2153
01:34:39,719 --> 01:34:43,440
changes mean anyone using 2.3.20 will

2154
01:34:43,440 --> 01:34:47,100
not be surprised if that e is is somehow

2155
01:34:47,100 --> 01:34:50,219
missing from a description

2156
01:34:50,219 --> 01:34:53,179
next slide please

2157
01:34:53,639 --> 01:34:56,219
oh God I love this one

2158
01:34:56,219 --> 01:34:59,400
um A4 this one is actually generating

2159
01:34:59,400 --> 01:35:01,860
some uh more discussion on list I think

2160
01:35:01,860 --> 01:35:05,040
Rob has some opinions on this

2161
01:35:05,040 --> 01:35:07,620
um it's an A so we there are some of us

2162
01:35:07,620 --> 01:35:10,260
who think this isn't a loud thing

2163
01:35:10,260 --> 01:35:12,719
um but really what's Happening Here is

2164
01:35:12,719 --> 01:35:16,320
you're uh with in time you're you're

2165
01:35:16,320 --> 01:35:20,520
creating this this 10 uh major revision

2166
01:35:20,520 --> 01:35:23,639
10 that goes to Major revision 11 and

2167
01:35:23,639 --> 01:35:26,280
then you have a new mate a new major

2168
01:35:26,280 --> 01:35:29,400
revision 20 which descends from 10 not

2169
01:35:29,400 --> 01:35:32,460
11 and then a 30 from 20.

2170
01:35:32,460 --> 01:35:34,440
I think this is allowed personally

2171
01:35:34,440 --> 01:35:36,960
because once you get to Major revision

2172
01:35:36,960 --> 01:35:39,659
changes we document the human brain

2173
01:35:39,659 --> 01:35:42,300
thinks uh Here Comes Rob to tell me I'm

2174
01:35:42,300 --> 01:35:43,320
wrong

2175
01:35:43,320 --> 01:35:45,600
um that that these are not backwards

2176
01:35:45,600 --> 01:35:48,000
compatible 10 and 11 aren't backwards

2177
01:35:48,000 --> 01:35:50,340
compatible 20 and 11 aren't backwards

2178
01:35:50,340 --> 01:35:52,620
compatible 20 and 10 aren't backwards

2179
01:35:52,620 --> 01:35:54,719
compatible and there are other

2180
01:35:54,719 --> 01:35:57,239
development things that we feel would

2181
01:35:57,239 --> 01:35:59,880
fit into this so we I think the

2182
01:35:59,880 --> 01:36:02,760
consensus is this isn't a loud tree but

2183
01:36:02,760 --> 01:36:04,320
Rob please

2184
01:36:04,320 --> 01:36:07,560
uh robots and Cisco as a contributed to

2185
01:36:07,560 --> 01:36:10,020
this work so I I think this probably is

2186
01:36:10,020 --> 01:36:12,060
allowed I think sort of against in my

2187
01:36:12,060 --> 01:36:13,920
mind against the spirit of what what

2188
01:36:13,920 --> 01:36:15,960
semba tries to achieve which is you're

2189
01:36:15,960 --> 01:36:17,760
trying to always update the head of the

2190
01:36:17,760 --> 01:36:19,380
the main development branch and that's

2191
01:36:19,380 --> 01:36:21,420
where you update the number so

2192
01:36:21,420 --> 01:36:23,040
um so I don't think we should disallow

2193
01:36:23,040 --> 01:36:25,739
this it just feels to me I would suggest

2194
01:36:25,739 --> 01:36:27,840
that people shouldn't not not in the

2195
01:36:27,840 --> 01:36:29,219
documents they shouldn't do this I don't

2196
01:36:29,219 --> 01:36:31,199
feel that if I was implementing I would

2197
01:36:31,199 --> 01:36:32,639
steer people away from doing this but I

2198
01:36:32,639 --> 01:36:34,080
don't think they should be disallowed

2199
01:36:34,080 --> 01:36:36,360
but actually I'd like to back a slide

2200
01:36:36,360 --> 01:36:39,120
vote please I'll back a slide please

2201
01:36:39,120 --> 01:36:41,820
so so this one though I do have more

2202
01:36:41,820 --> 01:36:43,440
concerns with I don't think this should

2203
01:36:43,440 --> 01:36:47,219
be allowed because the two three 2.3.20

2204
01:36:47,219 --> 01:36:50,540
also should be backwards compatible to

2205
01:36:50,540 --> 01:36:53,580
2.3.6 so depending on what changes have

2206
01:36:53,580 --> 01:36:55,920
gone into that and maybe if it's if it's

2207
01:36:55,920 --> 01:36:57,239
a patch change maybe it's nothing

2208
01:36:57,239 --> 01:36:58,800
significant and it doesn't matter I

2209
01:36:58,800 --> 01:37:01,199
don't know uh but again back the same

2210
01:37:01,199 --> 01:37:02,699
things with Simba I expect these things

2211
01:37:02,699 --> 01:37:04,860
are always uh sort of mainly adding to

2212
01:37:04,860 --> 01:37:07,320
the head of the branch and we have the

2213
01:37:07,320 --> 01:37:10,020
the sort of non-compatible and

2214
01:37:10,020 --> 01:37:11,820
compatible extensions to try and have

2215
01:37:11,820 --> 01:37:14,520
that limited branching but I I do also

2216
01:37:14,520 --> 01:37:16,920
admit that Simba itself is not

2217
01:37:16,920 --> 01:37:18,960
brilliantly specified as exactly what

2218
01:37:18,960 --> 01:37:20,940
the rules are which doesn't really help

2219
01:37:20,940 --> 01:37:23,100
but we can be tighter

2220
01:37:23,100 --> 01:37:25,500
I I this isn't the hill I'm willing to

2221
01:37:25,500 --> 01:37:27,600
die on I and I agree with you and I

2222
01:37:27,600 --> 01:37:29,880
think it in in software where this might

2223
01:37:29,880 --> 01:37:34,260
be a bug fix like hey I stopped I I

2224
01:37:34,260 --> 01:37:36,900
fixed this off by one error or pointer

2225
01:37:36,900 --> 01:37:39,000
arithmetic problem I would agree with

2226
01:37:39,000 --> 01:37:41,460
you so uh but Jason you're in the queue

2227
01:37:41,460 --> 01:37:44,940
yeah um so for this one here

2228
01:37:44,940 --> 01:37:45,780
um

2229
01:37:45,780 --> 01:37:48,420
I'm on the fence and not don't care too

2230
01:37:48,420 --> 01:37:50,400
much either but one thing to point out

2231
01:37:50,400 --> 01:37:52,739
is I think this one probably is okay

2232
01:37:52,739 --> 01:37:54,900
because don't forget the minor digit

2233
01:37:54,900 --> 01:37:56,280
hasn't changed here so they're still

2234
01:37:56,280 --> 01:37:58,860
compatible it's only editorial fixes

2235
01:37:58,860 --> 01:38:00,600
that are the difference between these so

2236
01:38:00,600 --> 01:38:02,760
I don't know if we want to restrict this

2237
01:38:02,760 --> 01:38:05,940
and say it's not allowed versus the

2238
01:38:05,940 --> 01:38:07,380
other variant to this that Joe started

2239
01:38:07,380 --> 01:38:09,239
the presentation with were the minor

2240
01:38:09,239 --> 01:38:10,679
digit changes it can actually cause

2241
01:38:10,679 --> 01:38:13,880
compatibility problems

2242
01:38:14,460 --> 01:38:18,900
so yeah I I think for me the thing that

2243
01:38:18,900 --> 01:38:21,239
I'm thinking about the whole thing is is

2244
01:38:21,239 --> 01:38:23,400
the level of complexity complexity that

2245
01:38:23,400 --> 01:38:25,620
we have and that we're introducing and

2246
01:38:25,620 --> 01:38:27,719
where we can try and minimize that

2247
01:38:27,719 --> 01:38:30,540
complexity I think that is worth it even

2248
01:38:30,540 --> 01:38:33,300
if we potentially disallow some of these

2249
01:38:33,300 --> 01:38:34,980
cases it feels to me that we should be

2250
01:38:34,980 --> 01:38:36,540
trying to drive complexity down because

2251
01:38:36,540 --> 01:38:39,360
otherwise I I think people are going to

2252
01:38:39,360 --> 01:38:40,440
struggle to understand what the rules

2253
01:38:40,440 --> 01:38:41,820
are we should try and simplify it there

2254
01:38:41,820 --> 01:38:43,679
might be a few things we rule out but

2255
01:38:43,679 --> 01:38:45,060
that's okay that's the right compromise

2256
01:38:45,060 --> 01:38:49,080
to make so I agree with you I and I I'm

2257
01:38:49,080 --> 01:38:50,760
wondering though are you saying we

2258
01:38:50,760 --> 01:38:52,860
should or should not add text either

2259
01:38:52,860 --> 01:38:55,500
direction on this or we just have

2260
01:38:55,500 --> 01:38:58,020
something that says

2261
01:38:58,020 --> 01:38:59,460
I don't even know if I want to add

2262
01:38:59,460 --> 01:39:01,020
anything that says you should obey the

2263
01:39:01,020 --> 01:39:03,060
rules of some of our

2264
01:39:03,060 --> 01:39:05,639
um what are you suggesting what might I

2265
01:39:05,639 --> 01:39:07,860
need to check the document again I I

2266
01:39:07,860 --> 01:39:09,600
thought actually there was enough

2267
01:39:09,600 --> 01:39:11,699
technology here that says this is the

2268
01:39:11,699 --> 01:39:14,480
rule to how you move along and this is

2269
01:39:14,480 --> 01:39:16,980
Jason Jason's give me an indication he

2270
01:39:16,980 --> 01:39:18,360
thinks more clarity might be required

2271
01:39:18,360 --> 01:39:20,280
but I think we I can check the document

2272
01:39:20,280 --> 01:39:22,380
again I'll fly to C but I'm not sure I

2273
01:39:22,380 --> 01:39:23,820
need more text or text change I'm just

2274
01:39:23,820 --> 01:39:25,860
saying in terms of this if somebody that

2275
01:39:25,860 --> 01:39:28,320
I like well that's not great I think the

2276
01:39:28,320 --> 01:39:31,080
problem is when we say we don't want

2277
01:39:31,080 --> 01:39:33,900
this or especially A4 I don't know if

2278
01:39:33,900 --> 01:39:35,639
you had a slide after A4 that showed the

2279
01:39:35,639 --> 01:39:38,880
alternative if you don't support A4

2280
01:39:38,880 --> 01:39:42,179
and if someone needs to describe this

2281
01:39:42,179 --> 01:39:44,639
branching scenario the alternative for

2282
01:39:44,639 --> 01:39:47,159
what they put may look worse so that's

2283
01:39:47,159 --> 01:39:49,199
something we should consider uh when

2284
01:39:49,199 --> 01:39:51,060
we're because it's not just don't do

2285
01:39:51,060 --> 01:39:54,300
this it's okay and I think I had I

2286
01:39:54,300 --> 01:39:56,280
showed an alternative to this A4 in the

2287
01:39:56,280 --> 01:39:58,620
email thread that show us how you would

2288
01:39:58,620 --> 01:40:01,020
do it if you don't do it this way and I

2289
01:40:01,020 --> 01:40:03,239
think it's a lot worse so we should talk

2290
01:40:03,239 --> 01:40:05,460
about what it means to drive complexity

2291
01:40:05,460 --> 01:40:07,620
out it may actually be harder to use if

2292
01:40:07,620 --> 01:40:09,900
we don't allow this so and to be clear

2293
01:40:09,900 --> 01:40:11,520
I'm not trying to say the document

2294
01:40:11,520 --> 01:40:13,800
should specify you can't do this I'm

2295
01:40:13,800 --> 01:40:15,960
just I I think it's more I shouldn't

2296
01:40:15,960 --> 01:40:18,080
encourage it so it should be maybe left

2297
01:40:18,080 --> 01:40:20,639
ambiguous that's horrible but

2298
01:40:20,639 --> 01:40:23,100
not right

2299
01:40:23,100 --> 01:40:25,920
so my mother has any with swisscom I

2300
01:40:25,920 --> 01:40:28,679
have a bit more fundamental question

2301
01:40:28,679 --> 01:40:31,679
here so here this is the reflection of

2302
01:40:31,679 --> 01:40:33,000
the development history of the version

2303
01:40:33,000 --> 01:40:35,280
right this is not about the versioning

2304
01:40:35,280 --> 01:40:36,120
itself

2305
01:40:36,120 --> 01:40:38,580
uh you know whatever telling you clearly

2306
01:40:38,580 --> 01:40:40,440
if you have measure upgrade measure

2307
01:40:40,440 --> 01:40:42,420
revision you have a new version and

2308
01:40:42,420 --> 01:40:44,219
they're not that good compatible so

2309
01:40:44,219 --> 01:40:45,719
whether I don't understand what's the

2310
01:40:45,719 --> 01:40:47,280
point here to keep track of the history

2311
01:40:47,280 --> 01:40:49,460
if you have any way

2312
01:40:49,460 --> 01:40:51,060
non-compatible

2313
01:40:51,060 --> 01:40:53,639
are virgins you can do for version 20

2314
01:40:53,639 --> 01:40:56,880
you can do the diff against 10 or 11. it

2315
01:40:56,880 --> 01:40:58,560
doesn't matter so this is the nature

2316
01:40:58,560 --> 01:40:59,880
development history which should be

2317
01:40:59,880 --> 01:41:02,340
different than a software that deciding

2318
01:41:02,340 --> 01:41:03,780
whether I can understand this version

2319
01:41:03,780 --> 01:41:06,000
operate on it or not

2320
01:41:06,000 --> 01:41:07,760
yeah the the

2321
01:41:07,760 --> 01:41:11,340
fundamental reason for somewhere here or

2322
01:41:11,340 --> 01:41:13,139
or having this is a revision label

2323
01:41:13,139 --> 01:41:16,320
scheme is to give that consumer the user

2324
01:41:16,320 --> 01:41:21,179
a a hint to say okay now I downloaded or

2325
01:41:21,179 --> 01:41:23,400
this device is now supporting this

2326
01:41:23,400 --> 01:41:25,980
version of the module oh I'm currently

2327
01:41:25,980 --> 01:41:28,560
using 10 and now this device wants to

2328
01:41:28,560 --> 01:41:31,500
use 20. I need to do more work because

2329
01:41:31,500 --> 01:41:34,440
this is likely going to impact the way I

2330
01:41:34,440 --> 01:41:36,420
the tooling that I have and how that

2331
01:41:36,420 --> 01:41:37,920
tooling interacts with this device

2332
01:41:37,920 --> 01:41:39,300
exactly but they're going to do the

2333
01:41:39,300 --> 01:41:42,060
difference 10 or 20 uh 20 or 11 in this

2334
01:41:42,060 --> 01:41:44,400
case it doesn't exactly and so this is

2335
01:41:44,400 --> 01:41:46,080
like the history yeah of the software

2336
01:41:46,080 --> 01:41:47,699
which is complicated right and we try to

2337
01:41:47,699 --> 01:41:50,100
codify it which is pretty hard and and I

2338
01:41:50,100 --> 01:41:53,340
I I totally agree I think we would a lot

2339
01:41:53,340 --> 01:41:55,560
this might be the

2340
01:41:55,560 --> 01:41:57,780
the not the best development practice to

2341
01:41:57,780 --> 01:42:01,080
do but we should not limit ourselves the

2342
01:42:01,080 --> 01:42:02,639
the user's still going to get what they

2343
01:42:02,639 --> 01:42:05,780
want out of out of it

2344
01:42:06,420 --> 01:42:08,940
next slide please looks like I've got a

2345
01:42:08,940 --> 01:42:10,619
few more left I don't think I have your

2346
01:42:10,619 --> 01:42:13,260
alternative now I move into illegal bad

2347
01:42:13,260 --> 01:42:15,659
trees try not to use the word illegal in

2348
01:42:15,659 --> 01:42:17,940
the draft I don't think I did

2349
01:42:17,940 --> 01:42:21,060
um but X1 is

2350
01:42:21,060 --> 01:42:24,600
um here you have major versions uh 20 uh

2351
01:42:24,600 --> 01:42:27,179
or two to four to six and then

2352
01:42:27,179 --> 01:42:29,219
descendant off of

2353
01:42:29,219 --> 01:42:29,880
um

2354
01:42:29,880 --> 01:42:33,600
uh two you have three and five I this is

2355
01:42:33,600 --> 01:42:36,719
one where I I kind of uh disagree with

2356
01:42:36,719 --> 01:42:39,360
the college they they say illegal or bad

2357
01:42:39,360 --> 01:42:43,139
not allowed uh I say it's major versions

2358
01:42:43,139 --> 01:42:44,580
so it's

2359
01:42:44,580 --> 01:42:49,020
to ahmed's point uh major versions uh I

2360
01:42:49,020 --> 01:42:51,119
I'm still going to assume non-backwards

2361
01:42:51,119 --> 01:42:52,980
compatible anyway

2362
01:42:52,980 --> 01:42:54,600
um and and two

2363
01:42:54,600 --> 01:42:57,719
um Rob's point I would rather not add

2364
01:42:57,719 --> 01:42:59,300
more

2365
01:42:59,300 --> 01:43:02,280
example text of what's illegal I think

2366
01:43:02,280 --> 01:43:04,920
the one case we called out where your

2367
01:43:04,920 --> 01:43:07,440
brain assumes backwards compatibility

2368
01:43:07,440 --> 01:43:09,659
and it's not there that makes sense to

2369
01:43:09,659 --> 01:43:10,800
call out

2370
01:43:10,800 --> 01:43:12,119
um here

2371
01:43:12,119 --> 01:43:15,060
maybe bad development practice but I

2372
01:43:15,060 --> 01:43:16,920
don't think it's necessarily something

2373
01:43:16,920 --> 01:43:19,440
we need to call out which is why I have

2374
01:43:19,440 --> 01:43:21,840
the question mark the question marks

2375
01:43:21,840 --> 01:43:24,719
here are do we need to add text for

2376
01:43:24,719 --> 01:43:26,760
either allowing or disallowing these

2377
01:43:26,760 --> 01:43:27,960
things

2378
01:43:27,960 --> 01:43:31,260
uh next slide please oh ken

2379
01:43:31,260 --> 01:43:33,239
Kent as a contributor

2380
01:43:33,239 --> 01:43:35,699
um so as others have said I think it's

2381
01:43:35,699 --> 01:43:38,100
technically okay to for those kinds of

2382
01:43:38,100 --> 01:43:41,460
trees I agree it's bad bad form and

2383
01:43:41,460 --> 01:43:43,260
probably wouldn't occur in practice but

2384
01:43:43,260 --> 01:43:46,500
technically should be allowed thanks

2385
01:43:46,500 --> 01:43:49,980
uh next slide please while I've got you

2386
01:43:49,980 --> 01:43:54,060
uh okay uh another illegal tree again I

2387
01:43:54,060 --> 01:43:57,540
think okay

2388
01:43:57,659 --> 01:44:00,119
um if you want to go from 2.0 to 10.0

2389
01:44:00,119 --> 01:44:02,760
back to 8.0

2390
01:44:02,760 --> 01:44:05,580
maybe your cotton reverse causal loop I

2391
01:44:05,580 --> 01:44:06,780
don't know

2392
01:44:06,780 --> 01:44:09,780
um but uh it's not the best practice but

2393
01:44:09,780 --> 01:44:12,360
because it's major version numbers I

2394
01:44:12,360 --> 01:44:14,699
don't want to add I wouldn't my

2395
01:44:14,699 --> 01:44:16,679
preference would be not to add text to

2396
01:44:16,679 --> 01:44:19,380
disallow this it just feels it just

2397
01:44:19,380 --> 01:44:21,300
feels like it's bad practice but Rob's

2398
01:44:21,300 --> 01:44:23,040
clicking so maybe he's joining the queue

2399
01:44:23,040 --> 01:44:26,580
oh Kent is and I'm Rob is as well Kent

2400
01:44:26,580 --> 01:44:28,679
yes Kent is a contributor again and I

2401
01:44:28,679 --> 01:44:31,260
beat Rob by click oh I think this should

2402
01:44:31,260 --> 01:44:33,659
be not allowed because software is going

2403
01:44:33,659 --> 01:44:35,100
to want to do

2404
01:44:35,100 --> 01:44:36,659
um comparisons

2405
01:44:36,659 --> 01:44:38,760
um you know integer comparisons much

2406
01:44:38,760 --> 01:44:40,800
greater than less than I don't know how

2407
01:44:40,800 --> 01:44:42,360
software would be able to reason through

2408
01:44:42,360 --> 01:44:45,500
this if we if we don't um

2409
01:44:45,500 --> 01:44:49,760
enforce monotonically increasing numbers

2410
01:44:50,100 --> 01:44:51,960
or okay sorry take back the word

2411
01:44:51,960 --> 01:44:53,940
monoponically just simply use increasing

2412
01:44:53,940 --> 01:44:55,920
numbers

2413
01:44:55,920 --> 01:44:57,420
Robert's participant they agree with

2414
01:44:57,420 --> 01:44:59,520
Kent I I'm not sure we need text to

2415
01:44:59,520 --> 01:45:01,380
disallow this but but don't do this yeah

2416
01:45:01,380 --> 01:45:02,940
don't do that I think we should do this

2417
01:45:02,940 --> 01:45:05,520
if somebody comes does this well that's

2418
01:45:05,520 --> 01:45:06,780
their choice effectively but I think the

2419
01:45:06,780 --> 01:45:08,460
doctor needs to say don't do it I think

2420
01:45:08,460 --> 01:45:11,699
it should be obvious to me yes

2421
01:45:11,699 --> 01:45:14,280
I can't imagine why one would

2422
01:45:14,280 --> 01:45:17,780
um okay next slide please

2423
01:45:19,380 --> 01:45:21,659
um and this one is

2424
01:45:21,659 --> 01:45:24,719
again an interesting one because we're

2425
01:45:24,719 --> 01:45:26,840
using modifiers now and we say that

2426
01:45:26,840 --> 01:45:30,420
3.5.1 descent compatible uh which means

2427
01:45:30,420 --> 01:45:33,060
that a something was added let's say uh

2428
01:45:33,060 --> 01:45:35,340
Leaf Foo was added to 3.5 to 1

2429
01:45:35,340 --> 01:45:39,060
compatible and then we created a 3.5.2

2430
01:45:39,060 --> 01:45:42,840
compatible from uh descendant from 3.5.0

2431
01:45:42,840 --> 01:45:45,300
which adds Leaf bar let's say

2432
01:45:45,300 --> 01:45:48,480
um so 3.5.2 compatible is not backwards

2433
01:45:48,480 --> 01:45:52,320
compatible with 3.5.1 compatible

2434
01:45:52,320 --> 01:45:55,880
um in in

2435
01:45:55,880 --> 01:45:58,460
a human's brain that might be

2436
01:45:58,460 --> 01:46:01,080
counter-intuitive but with these

2437
01:46:01,080 --> 01:46:03,139
modifiers

2438
01:46:03,139 --> 01:46:06,239
bets are off we we document that that

2439
01:46:06,239 --> 01:46:09,840
these are are sticky and and they

2440
01:46:09,840 --> 01:46:12,719
um it's the support that that wacky set

2441
01:46:12,719 --> 01:46:14,219
of branching

2442
01:46:14,219 --> 01:46:17,760
um so here I'm I'm conflicted whether or

2443
01:46:17,760 --> 01:46:19,320
not we need to add text whether or not

2444
01:46:19,320 --> 01:46:21,179
this should be allowed I I would say

2445
01:46:21,179 --> 01:46:22,860
don't do this

2446
01:46:22,860 --> 01:46:24,239
um just like we've said on some of the

2447
01:46:24,239 --> 01:46:27,000
other X's but I I don't know if we need

2448
01:46:27,000 --> 01:46:30,179
to call this out as a counter example or

2449
01:46:30,179 --> 01:46:32,639
something not to do or that we would not

2450
01:46:32,639 --> 01:46:36,199
allow with with Yang Simba

2451
01:46:38,340 --> 01:46:40,619
might as well just uh

2452
01:46:40,619 --> 01:46:43,800
build a house I thought Mike and Rob

2453
01:46:43,800 --> 01:46:46,380
uh Robertson is assistant same answer as

2454
01:46:46,380 --> 01:46:48,480
before so don't do this I think but I

2455
01:46:48,480 --> 01:46:50,340
don't think you need text

2456
01:46:50,340 --> 01:46:52,440
thanks

2457
01:46:52,440 --> 01:46:54,840
and last slide please

2458
01:46:54,840 --> 01:46:58,560
great oh sorry sorry again

2459
01:46:58,560 --> 01:47:00,360
yeah I'm part of the Tuesday groups I'm

2460
01:47:00,360 --> 01:47:02,400
all quite often but uh

2461
01:47:02,400 --> 01:47:05,159
maybe the word compatible actually in

2462
01:47:05,159 --> 01:47:06,840
this case is a bit of a problem where

2463
01:47:06,840 --> 01:47:08,940
people may be learned to believe that

2464
01:47:08,940 --> 01:47:11,280
just by saying 351 compatible followed

2465
01:47:11,280 --> 01:47:13,500
by 3.2 compatible we are suggesting that

2466
01:47:13,500 --> 01:47:15,000
something is compatible while it isn't

2467
01:47:15,000 --> 01:47:16,980
so I mean we could just look for a

2468
01:47:16,980 --> 01:47:19,080
different word I I don't hate to bring

2469
01:47:19,080 --> 01:47:22,739
this up this time in the process but

2470
01:47:22,739 --> 01:47:24,480
maybe something else branched or

2471
01:47:24,480 --> 01:47:26,460
something like that 351 Branch 352

2472
01:47:26,460 --> 01:47:28,679
Branch doesn't quite as well suggest

2473
01:47:28,679 --> 01:47:31,380
that they are compatible thank you it's

2474
01:47:31,380 --> 01:47:33,179
something we I mean we we went back and

2475
01:47:33,179 --> 01:47:35,159
forth a lot on these modifiers as you

2476
01:47:35,159 --> 01:47:40,080
know so maybe something to discuss uh

2477
01:47:40,080 --> 01:47:42,000
I I don't know that we want to change it

2478
01:47:42,000 --> 01:47:43,260
now but

2479
01:47:43,260 --> 01:47:46,080
we we've um it can certainly be brought

2480
01:47:46,080 --> 01:47:49,440
up and and bannered around on the list

2481
01:47:49,440 --> 01:47:52,440
last slide please which is really a

2482
01:47:52,440 --> 01:47:54,239
anti-climatic

2483
01:47:54,239 --> 01:47:56,520
um we think the next steps are to to

2484
01:47:56,520 --> 01:47:59,219
conduct that second uh last call to to

2485
01:47:59,219 --> 01:48:02,159
really bring out the the next round of

2486
01:48:02,159 --> 01:48:04,080
uh comments

2487
01:48:04,080 --> 01:48:05,840
um and we think

2488
01:48:05,840 --> 01:48:07,860
irrespective of what we've discussed

2489
01:48:07,860 --> 01:48:10,320
here uh it's ready for that

2490
01:48:10,320 --> 01:48:12,540
um it passes all ID nits and yang

2491
01:48:12,540 --> 01:48:15,179
validations for the most part um there's

2492
01:48:15,179 --> 01:48:18,119
some pending Yang stuff uh but we we

2493
01:48:18,119 --> 01:48:19,139
don't think there's any major

2494
01:48:19,139 --> 01:48:22,880
substantive changes yet to come

2495
01:48:23,360 --> 01:48:26,820
so we just went over two documents we

2496
01:48:26,820 --> 01:48:29,159
start out by saying we're going to try

2497
01:48:29,159 --> 01:48:31,080
to last call both of them again and move

2498
01:48:31,080 --> 01:48:33,000
them forward together

2499
01:48:33,000 --> 01:48:34,920
do you and you said this one's ready but

2500
01:48:34,920 --> 01:48:36,600
the prior one is not

2501
01:48:36,600 --> 01:48:38,460
so what do you want to do

2502
01:48:38,460 --> 01:48:40,619
I think we have to bring them together I

2503
01:48:40,619 --> 01:48:43,739
I would say that we bring them both

2504
01:48:43,739 --> 01:48:45,600
together I think we're ready on both

2505
01:48:45,600 --> 01:48:48,060
Jason

2506
01:48:48,060 --> 01:48:49,619
I think our intention is to bring them

2507
01:48:49,619 --> 01:48:51,420
together it's just some results

2508
01:48:51,420 --> 01:48:53,580
we converged on it a little a little bit

2509
01:48:53,580 --> 01:48:55,860
faster than the other one so so when

2510
01:48:55,860 --> 01:48:58,020
they're both ready authors please send a

2511
01:48:58,020 --> 01:48:59,940
message to the list I think I heard you

2512
01:48:59,940 --> 01:49:02,100
two disagree just now but that's okay

2513
01:49:02,100 --> 01:49:03,960
just be explicit on the list we're ready

2514
01:49:03,960 --> 01:49:06,619
to go okay

2515
01:49:06,659 --> 01:49:09,960
thanks all right great uh thanks I'm

2516
01:49:09,960 --> 01:49:11,760
amazed that we're after all this time

2517
01:49:11,760 --> 01:49:14,280
we're like a minute ahead of schedule so

2518
01:49:14,280 --> 01:49:16,500
with that we're going to go to uh the

2519
01:49:16,500 --> 01:49:18,980
last slot

2520
01:49:19,199 --> 01:49:21,000
and I should say to the versioning team

2521
01:49:21,000 --> 01:49:23,340
and all the authors uh thank you so much

2522
01:49:23,340 --> 01:49:25,800
for some excellent work it's it's super

2523
01:49:25,800 --> 01:49:28,440
important work and we know it's really

2524
01:49:28,440 --> 01:49:31,020
tough and it's taken a lot of effort so

2525
01:49:31,020 --> 01:49:33,239
uh thank you

2526
01:49:33,239 --> 01:49:35,580
and so I'm Nigel Davis Sienna thanks the

2527
01:49:35,580 --> 01:49:37,860
opportunity to present us um I'm going

2528
01:49:37,860 --> 01:49:39,060
to look at

2529
01:49:39,060 --> 01:49:42,780
um modeling and some challenges we've

2530
01:49:42,780 --> 01:49:44,639
had in certain areas of modeling and

2531
01:49:44,639 --> 01:49:46,380
suggestions that I'm going to suggest

2532
01:49:46,380 --> 01:49:49,500
that we may need to extend

2533
01:49:49,500 --> 01:49:52,500
um meta models extend techniques and

2534
01:49:52,500 --> 01:49:54,179
methodologies and so on so that's what

2535
01:49:54,179 --> 01:49:56,639
I'm aiming for here I'll go to the first

2536
01:49:56,639 --> 01:49:58,260
if you know the first slides I'll move

2537
01:49:58,260 --> 01:50:01,739
on thanks next slide

2538
01:50:01,739 --> 01:50:03,480
next one

2539
01:50:03,480 --> 01:50:06,480
so

2540
01:50:10,380 --> 01:50:11,159
um

2541
01:50:11,159 --> 01:50:13,679
uh it's there's a I've got an idea and

2542
01:50:13,679 --> 01:50:15,420
I've put in so there's the references in

2543
01:50:15,420 --> 01:50:16,560
here I'm going to go through this very

2544
01:50:16,560 --> 01:50:17,520
briefly

2545
01:50:17,520 --> 01:50:19,739
um terminology is a challenge in this

2546
01:50:19,739 --> 01:50:21,420
area so we've come up with a new term

2547
01:50:21,420 --> 01:50:22,920
which I'll talk about

2548
01:50:22,920 --> 01:50:24,780
um which tries to tries to help us

2549
01:50:24,780 --> 01:50:26,760
discuss the thing I've been grappling in

2550
01:50:26,760 --> 01:50:28,380
this for a long time

2551
01:50:28,380 --> 01:50:30,360
um and it's I keep running into the same

2552
01:50:30,360 --> 01:50:32,820
problem so a number of us agree there's

2553
01:50:32,820 --> 01:50:34,380
there's potentially an issue here so we

2554
01:50:34,380 --> 01:50:35,580
thought we'd present

2555
01:50:35,580 --> 01:50:38,340
next slide thanks

2556
01:50:38,340 --> 01:50:39,780
so

2557
01:50:39,780 --> 01:50:42,060
um this gives us sort of an overview of

2558
01:50:42,060 --> 01:50:44,340
where the the challenge appears to lie

2559
01:50:44,340 --> 01:50:47,340
so as we look at Advanced um uh

2560
01:50:47,340 --> 01:50:49,260
Solutions we we come across a number of

2561
01:50:49,260 --> 01:50:51,900
things intent capability expression uh

2562
01:50:51,900 --> 01:50:53,280
where we're looking at the capability of

2563
01:50:53,280 --> 01:50:56,280
the underlying um devices and so on uh

2564
01:50:56,280 --> 01:50:58,199
challenges partial visibility where we

2565
01:50:58,199 --> 01:51:00,179
there may be a noisy environment and we

2566
01:51:00,179 --> 01:51:02,159
can't we can't actually

2567
01:51:02,159 --> 01:51:05,040
um see the full view of the detector all

2568
01:51:05,040 --> 01:51:06,480
the time or something of this sort so

2569
01:51:06,480 --> 01:51:10,199
maybe I don't know the precise value

2570
01:51:10,199 --> 01:51:14,040
um in policy those constraints uh

2571
01:51:14,040 --> 01:51:17,219
present so these are all constraint or

2572
01:51:17,219 --> 01:51:19,920
range statement things in the

2573
01:51:19,920 --> 01:51:22,020
negotiation where I I might start with a

2574
01:51:22,020 --> 01:51:24,060
very vague expression of something and

2575
01:51:24,060 --> 01:51:26,040
gradually narrow down to a point where I

2576
01:51:26,040 --> 01:51:28,320
have a more precise expression

2577
01:51:28,320 --> 01:51:30,659
so these these all appear to as I said

2578
01:51:30,659 --> 01:51:32,580
on the second board it'll appear to be

2579
01:51:32,580 --> 01:51:34,920
um requires some kind of development

2580
01:51:34,920 --> 01:51:36,659
through a recursive or Progressive

2581
01:51:36,659 --> 01:51:38,940
narrowing of things so with my ss7

2582
01:51:38,940 --> 01:51:41,100
negotiation I start with a very vague

2583
01:51:41,100 --> 01:51:42,960
expression of something I gradually

2584
01:51:42,960 --> 01:51:44,820
narrowed down to a more precise one

2585
01:51:44,820 --> 01:51:47,460
there's no specific number of steps I

2586
01:51:47,460 --> 01:51:50,880
might take here so we you might think of

2587
01:51:50,880 --> 01:51:54,540
um a process of metamodel model instance

2588
01:51:54,540 --> 01:51:56,100
but no there's no number of specific

2589
01:51:56,100 --> 01:51:58,500
steps we go through here and I just stop

2590
01:51:58,500 --> 01:51:59,940
at the right level for the Viewpoint so

2591
01:51:59,940 --> 01:52:02,219
maybe I get right down to a set of very

2592
01:52:02,219 --> 01:52:04,380
specific values it maybe I get to just a

2593
01:52:04,380 --> 01:52:06,179
set of constraints depending upon where

2594
01:52:06,179 --> 01:52:08,280
I'm trying and that I stop and that's my

2595
01:52:08,280 --> 01:52:09,900
expression

2596
01:52:09,900 --> 01:52:13,500
so um we coined this term occurrence

2597
01:52:13,500 --> 01:52:15,300
because we couldn't find any other words

2598
01:52:15,300 --> 01:52:16,980
I've tried to use various other terms

2599
01:52:16,980 --> 01:52:18,900
for this but each one of these

2600
01:52:18,900 --> 01:52:20,340
narrowings it comes up with an

2601
01:52:20,340 --> 01:52:21,900
occurrence of something the occurrence

2602
01:52:21,900 --> 01:52:26,219
is a mixture always of of statements of

2603
01:52:26,219 --> 01:52:27,300
of

2604
01:52:27,300 --> 01:52:29,100
um what look like specification of type

2605
01:52:29,100 --> 01:52:32,280
with ranges and so on and also

2606
01:52:32,280 --> 01:52:34,739
statements of precise value so the the

2607
01:52:34,739 --> 01:52:36,960
the process we seem to be going through

2608
01:52:36,960 --> 01:52:39,300
often is to tighten towards this

2609
01:52:39,300 --> 01:52:41,040
instance whether even the instance may

2610
01:52:41,040 --> 01:52:43,320
have expressions of range in it because

2611
01:52:43,320 --> 01:52:45,239
I'm dealing with an instance in a

2612
01:52:45,239 --> 01:52:46,679
control plan environment where the

2613
01:52:46,679 --> 01:52:48,540
device below is able to deal with the

2614
01:52:48,540 --> 01:52:51,540
range input so whereas in a normal

2615
01:52:51,540 --> 01:52:53,159
instance statement I might have a value

2616
01:52:53,159 --> 01:52:55,679
as an integer where I see a single value

2617
01:52:55,679 --> 01:52:57,360
what actually might happen is instead of

2618
01:52:57,360 --> 01:52:58,619
the single value although it's an

2619
01:52:58,619 --> 01:53:00,540
integer field I want to be able to say

2620
01:53:00,540 --> 01:53:03,239
between and normally say between seven

2621
01:53:03,239 --> 01:53:04,619
and nine and of course eight is between

2622
01:53:04,619 --> 01:53:07,320
so I'll try harder between 7 and 13 or

2623
01:53:07,320 --> 01:53:09,239
something where there's a range of

2624
01:53:09,239 --> 01:53:11,219
possible values that that entity can

2625
01:53:11,219 --> 01:53:13,139
take and I've got a little example of

2626
01:53:13,139 --> 01:53:15,960
that so um

2627
01:53:15,960 --> 01:53:19,320
and if I look at this process when I'm

2628
01:53:19,320 --> 01:53:23,340
building a a system I assemble

2629
01:53:23,340 --> 01:53:26,100
um different occurrences the same

2630
01:53:26,100 --> 01:53:29,100
original thing into an assembly and I'll

2631
01:53:29,100 --> 01:53:30,659
try I'll try and describe that in a few

2632
01:53:30,659 --> 01:53:33,179
minutes as well so

2633
01:53:33,179 --> 01:53:34,380
um if you go on to the next slide

2634
01:53:34,380 --> 01:53:36,179
actually I'll end up running out of time

2635
01:53:36,179 --> 01:53:38,159
on it so the the

2636
01:53:38,159 --> 01:53:39,719
um just to re-emphasize the modeling

2637
01:53:39,719 --> 01:53:42,000
approach appears to be one of recursive

2638
01:53:42,000 --> 01:53:43,980
narrowing that we seem to need to get to

2639
01:53:43,980 --> 01:53:45,420
where

2640
01:53:45,420 --> 01:53:48,900
um any model of the thing can be

2641
01:53:48,900 --> 01:53:50,639
considered as being An Occurrence at

2642
01:53:50,639 --> 01:53:52,199
that level even if I get down to an

2643
01:53:52,199 --> 01:53:54,480
instance That's Just An Occurrence so

2644
01:53:54,480 --> 01:53:56,159
everything appears to be occurrences and

2645
01:53:56,159 --> 01:53:57,960
everything appears to be a progression

2646
01:53:57,960 --> 01:54:00,719
towards this narrow and narrower thing

2647
01:54:00,719 --> 01:54:03,420
um and the the properties are defined in

2648
01:54:03,420 --> 01:54:05,340
terms of constraints even a single value

2649
01:54:05,340 --> 01:54:07,139
you know the integer is five it's still

2650
01:54:07,139 --> 01:54:08,880
just a constraint on that integer it's

2651
01:54:08,880 --> 01:54:12,119
just a very very very tight one and

2652
01:54:12,119 --> 01:54:15,179
um the the method then requires an

2653
01:54:15,179 --> 01:54:17,940
expression that mixes types and in

2654
01:54:17,940 --> 01:54:19,980
instance values together and

2655
01:54:19,980 --> 01:54:21,360
conventional modeling techniques don't

2656
01:54:21,360 --> 01:54:23,280
appear to do this for us so we then

2657
01:54:23,280 --> 01:54:25,260
struggle inventing things in the middle

2658
01:54:25,260 --> 01:54:27,360
somewhere and hence this suggestion that

2659
01:54:27,360 --> 01:54:29,880
there may be a methodology and a meta

2660
01:54:29,880 --> 01:54:33,719
model requirement but looking at Yang

2661
01:54:33,719 --> 01:54:35,639
with I've played around in the in the

2662
01:54:35,639 --> 01:54:37,679
back of the draft with some in an

2663
01:54:37,679 --> 01:54:40,980
appendix with some variant of Yang it

2664
01:54:40,980 --> 01:54:43,260
appears I could potentially use Yang if

2665
01:54:43,260 --> 01:54:45,659
I in a particular way to be able to do

2666
01:54:45,659 --> 01:54:47,219
this it looks like Yang might be

2667
01:54:47,219 --> 01:54:50,040
extensible to this although the thing I

2668
01:54:50,040 --> 01:54:52,920
do is very strange to do it so let's get

2669
01:54:52,920 --> 01:54:55,739
on the next slide please thanks

2670
01:54:55,739 --> 01:54:58,320
so uh just to emphasize these things so

2671
01:54:58,320 --> 01:54:59,580
the things I was talking about obviously

2672
01:54:59,580 --> 01:55:03,060
in the idea use um expectation intention

2673
01:55:03,060 --> 01:55:04,980
uh because I like to look at intentions

2674
01:55:04,980 --> 01:55:06,780
being a two-sided thing where one of the

2675
01:55:06,780 --> 01:55:08,760
client expects and the provider intends

2676
01:55:08,760 --> 01:55:11,040
to do something but

2677
01:55:11,040 --> 01:55:12,960
um that's the desired outcome in terms

2678
01:55:12,960 --> 01:55:15,300
of constraints capabilities opportunity

2679
01:55:15,300 --> 01:55:17,280
for Behavior exhibitive which again is a

2680
01:55:17,280 --> 01:55:19,800
set of constraints on a limited bounded

2681
01:55:19,800 --> 01:55:22,800
thing and the partial partial visibility

2682
01:55:22,800 --> 01:55:25,139
thing is I'm expressing that I can only

2683
01:55:25,139 --> 01:55:27,420
see something within some kind of

2684
01:55:27,420 --> 01:55:29,219
precise range I can't tell you exactly

2685
01:55:29,219 --> 01:55:30,300
what the temperature is somewhere

2686
01:55:30,300 --> 01:55:31,980
between 30 and 50 but I can't say

2687
01:55:31,980 --> 01:55:34,440
precisely or I might not know or I might

2688
01:55:34,440 --> 01:55:36,420
you know be um

2689
01:55:36,420 --> 01:55:38,760
currently unsure but you know eventually

2690
01:55:38,760 --> 01:55:40,920
short so it Narrows and broadens you can

2691
01:55:40,920 --> 01:55:42,060
go to the next slide please that'd be

2692
01:55:42,060 --> 01:55:43,739
great thanks

2693
01:55:43,739 --> 01:55:46,860
okay so here's a sort of an example of

2694
01:55:46,860 --> 01:55:48,300
some narrowing I start off with a

2695
01:55:48,300 --> 01:55:50,400
standard where I'm expressing something

2696
01:55:50,400 --> 01:55:53,340
as a in in a as a constraint is

2697
01:55:53,340 --> 01:55:56,100
boundless it's an integer it's randomly

2698
01:55:56,100 --> 01:55:57,360
chosen

2699
01:55:57,360 --> 01:56:00,300
um uh uh bit rate for example and then

2700
01:56:00,300 --> 01:56:01,800
in a particular event the solution this

2701
01:56:01,800 --> 01:56:03,239
there's a specification to this where

2702
01:56:03,239 --> 01:56:05,400
that many solutions able to operate

2703
01:56:05,400 --> 01:56:08,340
between 10 and 10 and 100 gigs another

2704
01:56:08,340 --> 01:56:10,500
same vendor another solution they've got

2705
01:56:10,500 --> 01:56:11,880
where there's a piece of Hardware may be

2706
01:56:11,880 --> 01:56:14,040
constrained by pricing and technology is

2707
01:56:14,040 --> 01:56:16,980
able to operate between 5 and 50 gigs

2708
01:56:16,980 --> 01:56:20,100
and then I have an application a where

2709
01:56:20,100 --> 01:56:22,739
the requirements between 10 and 50 so

2710
01:56:22,739 --> 01:56:24,239
clearly both those things will work but

2711
01:56:24,239 --> 01:56:26,280
because I can see the subset of the

2712
01:56:26,280 --> 01:56:28,619
specification then at some particular

2713
01:56:28,619 --> 01:56:32,400
Point 30 50 some other specific time at

2714
01:56:32,400 --> 01:56:35,100
some particular Point 50 gigs only so

2715
01:56:35,100 --> 01:56:36,840
these things are different statements of

2716
01:56:36,840 --> 01:56:38,699
range on that particular property when I

2717
01:56:38,699 --> 01:56:40,440
want to be able to express those ranges

2718
01:56:40,440 --> 01:56:42,300
the final one being in that list a

2719
01:56:42,300 --> 01:56:43,500
single value

2720
01:56:43,500 --> 01:56:45,420
and then I might have some fruitful

2721
01:56:45,420 --> 01:56:46,619
concept where I convert it to a

2722
01:56:46,619 --> 01:56:48,960
numeration I only have have uh three

2723
01:56:48,960 --> 01:56:51,239
particular values and then a particular

2724
01:56:51,239 --> 01:56:53,219
case within that proof of concept was

2725
01:56:53,219 --> 01:56:55,320
only one and so on and then even the

2726
01:56:55,320 --> 01:56:57,119
instance at the end there the intent

2727
01:56:57,119 --> 01:56:59,400
instance because I'm applying this to

2728
01:56:59,400 --> 01:57:02,280
some control plane I've got a range of

2729
01:57:02,280 --> 01:57:03,900
values whereas the final one it's an

2730
01:57:03,900 --> 01:57:05,699
absolute value you can do the next slide

2731
01:57:05,699 --> 01:57:07,860
but

2732
01:57:07,860 --> 01:57:09,000
so

2733
01:57:09,000 --> 01:57:10,739
um I'll I'll skim this because I think

2734
01:57:10,739 --> 01:57:12,540
I've only got just over two minutes left

2735
01:57:12,540 --> 01:57:16,139
but uh here I might uh this is saying

2736
01:57:16,139 --> 01:57:18,239
that when I'm assembling a system I

2737
01:57:18,239 --> 01:57:20,280
might have a set of what I might

2738
01:57:20,280 --> 01:57:23,159
consider as um uh classes piece Parts

2739
01:57:23,159 --> 01:57:24,420
I'm going to assemble but each

2740
01:57:24,420 --> 01:57:26,360
particular application of those parts

2741
01:57:26,360 --> 01:57:29,040
that a particular part is subtly

2742
01:57:29,040 --> 01:57:31,139
different it's a different it's a

2743
01:57:31,139 --> 01:57:33,000
different it minimally is a different

2744
01:57:33,000 --> 01:57:35,760
instance what I think about some memory

2745
01:57:35,760 --> 01:57:38,460
and building a memory chip I've got the

2746
01:57:38,460 --> 01:57:40,199
same cell repeated over and over and

2747
01:57:40,199 --> 01:57:41,760
over again but they're not identically

2748
01:57:41,760 --> 01:57:43,260
placed clearly because then they'd be

2749
01:57:43,260 --> 01:57:44,880
the same thing or sell and they're not

2750
01:57:44,880 --> 01:57:46,440
they're not the same instance so I've

2751
01:57:46,440 --> 01:57:49,260
got this subtle variety across this set

2752
01:57:49,260 --> 01:57:51,000
of same things when I'm building a

2753
01:57:51,000 --> 01:57:53,820
system I have to I seem to have to reuse

2754
01:57:53,820 --> 01:57:55,800
Parts but where each part is subtly

2755
01:57:55,800 --> 01:57:57,780
different from the pre another usage and

2756
01:57:57,780 --> 01:57:59,580
that's that same level and of course

2757
01:57:59,580 --> 01:58:01,679
they may have a mod this may be a module

2758
01:58:01,679 --> 01:58:03,659
that I then install another system and

2759
01:58:03,659 --> 01:58:05,340
again I've got the same Parts being

2760
01:58:05,340 --> 01:58:08,040
reused with again subtle Variety in them

2761
01:58:08,040 --> 01:58:10,679
the particular picture here is a it's

2762
01:58:10,679 --> 01:58:12,780
taken from some INF work we're doing

2763
01:58:12,780 --> 01:58:14,639
where we're looking at some

2764
01:58:14,639 --> 01:58:17,880
defining a a management hierarchy in

2765
01:58:17,880 --> 01:58:19,440
talking about View mappings and so on

2766
01:58:19,440 --> 01:58:22,199
but uh it shows there we're finding it

2767
01:58:22,199 --> 01:58:24,000
we find it in all of the other

2768
01:58:24,000 --> 01:58:26,340
um specs of system assemblies we're

2769
01:58:26,340 --> 01:58:27,540
trying to do and clearly they're not

2770
01:58:27,540 --> 01:58:28,739
instances because it's not a real

2771
01:58:28,739 --> 01:58:29,940
running thing

2772
01:58:29,940 --> 01:58:33,000
can you go to the next slide please

2773
01:58:33,000 --> 01:58:36,239
thanks and this uh just the the work

2774
01:58:36,239 --> 01:58:37,980
we're looking at seems to overlap

2775
01:58:37,980 --> 01:58:40,320
severely with the compatibility and also

2776
01:58:40,320 --> 01:58:42,900
versioning so um I think it plays well

2777
01:58:42,900 --> 01:58:44,580
into what you're doing in that area I'm

2778
01:58:44,580 --> 01:58:45,780
not going to describe this like it's

2779
01:58:45,780 --> 01:58:47,699
kind of the the actual descriptions and

2780
01:58:47,699 --> 01:58:49,560
the and the ID but I see I've got almost

2781
01:58:49,560 --> 01:58:51,300
no time left so I'll have the question

2782
01:58:51,300 --> 01:58:53,580
so I'll go into the next next slide

2783
01:58:53,580 --> 01:58:56,040
which I think is the final one too

2784
01:58:56,040 --> 01:58:58,860
uh so so what we we're looking at here

2785
01:58:58,860 --> 01:59:01,440
um it seems there isn't any readily

2786
01:59:01,440 --> 01:59:03,780
available terminology to deal with the

2787
01:59:03,780 --> 01:59:05,639
notion of the currents other than this

2788
01:59:05,639 --> 01:59:08,040
word we've now used ourselves

2789
01:59:08,040 --> 01:59:10,980
um and but but it it it may be that

2790
01:59:10,980 --> 01:59:13,199
there is and so hence I'm looking across

2791
01:59:13,199 --> 01:59:17,400
the I presented this on um on the um an

2792
01:59:17,400 --> 01:59:19,619
MRG yesterday again and I'm also we're

2793
01:59:19,619 --> 01:59:22,020
looking for assistance to identify an

2794
01:59:22,020 --> 01:59:23,580
existing set of techniques or

2795
01:59:23,580 --> 01:59:25,199
terminology that might fit with us I'll

2796
01:59:25,199 --> 01:59:26,280
take the question at the end if that's

2797
01:59:26,280 --> 01:59:27,719
what we've done you know why

2798
01:59:27,719 --> 01:59:30,659
so um improving terminology trying to

2799
01:59:30,659 --> 01:59:32,820
homing on on other areas where this has

2800
01:59:32,820 --> 01:59:35,099
been just determined and used

2801
01:59:35,099 --> 01:59:36,960
um it seems to be no good language to

2802
01:59:36,960 --> 01:59:39,239
describe this so um as I said it maybe

2803
01:59:39,239 --> 01:59:41,520
we can take Yang and refine it in

2804
01:59:41,520 --> 01:59:43,380
certain areas to help us do this solve

2805
01:59:43,380 --> 01:59:45,599
this particular problem and and hence

2806
01:59:45,599 --> 01:59:48,000
bringing this here maybe we could work

2807
01:59:48,000 --> 01:59:49,440
together to evolve young to be able to

2808
01:59:49,440 --> 01:59:51,780
deal more with these um specifications

2809
01:59:51,780 --> 01:59:54,119
and these definitions of in town where

2810
01:59:54,119 --> 01:59:55,980
we have this sort of constraint problem

2811
01:59:55,980 --> 01:59:58,619
okay so that's what I wanted to say I've

2812
01:59:58,619 --> 02:00:00,360
got I can see everyone question

2813
02:00:00,360 --> 02:00:02,400
uh Robles and Cisco

2814
02:00:02,400 --> 02:00:04,619
um no hats on so thank you for bringing

2815
02:00:04,619 --> 02:00:05,880
this work here I think I think it's

2816
02:00:05,880 --> 02:00:07,260
really interesting what you're doing

2817
02:00:07,260 --> 02:00:10,380
here so it's interesting I do I do

2818
02:00:10,380 --> 02:00:12,119
wonder I'm not sure I've found the the

2819
02:00:12,119 --> 02:00:13,860
example use case to you that compelling

2820
02:00:13,860 --> 02:00:15,119
in terms of why you wouldn't just like

2821
02:00:15,119 --> 02:00:16,800
use Like A Min and Max for those two

2822
02:00:16,800 --> 02:00:19,260
values to solve them so I'm struggling

2823
02:00:19,260 --> 02:00:20,940
to see it's it's it was severely

2824
02:00:20,940 --> 02:00:22,560
simplified to allow me to describe it

2825
02:00:22,560 --> 02:00:24,239
during the presentations for 10 minutes

2826
02:00:24,239 --> 02:00:26,639
unfortunately so that's all I had done

2827
02:00:26,639 --> 02:00:27,960
and I thought bringing a very simple

2828
02:00:27,960 --> 02:00:29,520
example might just give the idea of the

2829
02:00:29,520 --> 02:00:31,320
range and that's all but you're right

2830
02:00:31,320 --> 02:00:33,119
it's it's actually a lot deeper than us

2831
02:00:33,119 --> 02:00:34,739
on a lot more challenging in many areas

2832
02:00:34,739 --> 02:00:36,119
where I've got into related properties

2833
02:00:36,119 --> 02:00:37,619
which I wanted to describe the

2834
02:00:37,619 --> 02:00:40,020
interrelationship as as I narrow them

2835
02:00:40,020 --> 02:00:42,060
they don't just simply narrow I mean the

2836
02:00:42,060 --> 02:00:44,040
the the example I've seen which is

2837
02:00:44,040 --> 02:00:45,179
probably a simple one again is

2838
02:00:45,179 --> 02:00:47,760
temperance humidity Behavior where the

2839
02:00:47,760 --> 02:00:50,580
humidity acceptable humidity varies with

2840
02:00:50,580 --> 02:00:52,860
temperature and so as you you sort of

2841
02:00:52,860 --> 02:00:55,080
get an area described so although

2842
02:00:55,080 --> 02:00:56,280
temperature and humidity you initially

2843
02:00:56,280 --> 02:00:58,560
finders in individual isolated values

2844
02:00:58,560 --> 02:01:00,960
and they seem to be independent nice big

2845
02:01:00,960 --> 02:01:02,520
broad range than any any particular

2846
02:01:02,520 --> 02:01:04,440
application they don't play separately

2847
02:01:04,440 --> 02:01:06,239
they play together and I don't want to

2848
02:01:06,239 --> 02:01:07,380
be able to describe that sort of

2849
02:01:07,380 --> 02:01:10,320
restriction so you can actually see even

2850
02:01:10,320 --> 02:01:11,940
that within yanuku there's like a

2851
02:01:11,940 --> 02:01:13,260
grouping to tie those things together so

2852
02:01:13,260 --> 02:01:14,460
I think it's a question whether you're

2853
02:01:14,460 --> 02:01:16,800
trying to model a given value in the

2854
02:01:16,800 --> 02:01:18,480
tree is having this range or whether you

2855
02:01:18,480 --> 02:01:20,340
expose those ranges I'm not saying it's

2856
02:01:20,340 --> 02:01:22,980
right or wrong but yeah it's the sort of

2857
02:01:22,980 --> 02:01:25,500
um because I think trying to explain

2858
02:01:25,500 --> 02:01:27,300
more the exact problems you're trying to

2859
02:01:27,300 --> 02:01:28,739
solve would be helpful for the working

2860
02:01:28,739 --> 02:01:30,960
group to understand is is this too

2861
02:01:30,960 --> 02:01:32,639
complex this is it you know out of scope

2862
02:01:32,639 --> 02:01:35,099
or not uh and I've lost my other

2863
02:01:35,099 --> 02:01:36,480
suggestions I've gonna say anyway so

2864
02:01:36,480 --> 02:01:38,219
that's great nice thanks yeah I can I

2865
02:01:38,219 --> 02:01:39,599
can work through more there's a few more

2866
02:01:39,599 --> 02:01:40,920
things in the idea and I can work

2867
02:01:40,920 --> 02:01:42,480
through some of my myself obviously

2868
02:01:42,480 --> 02:01:44,580
follow up with that as well thanks for

2869
02:01:44,580 --> 02:01:46,800
the guidance

2870
02:01:46,800 --> 02:01:48,420
Bernard class and I'm going to be very

2871
02:01:48,420 --> 02:01:49,860
quick because I see new eyes that you

2872
02:01:49,860 --> 02:01:52,320
have to cut the line so thanks Angel for

2873
02:01:52,320 --> 02:01:53,760
bringing this this work this has been on

2874
02:01:53,760 --> 02:01:55,560
my mind for quite some time I I see

2875
02:01:55,560 --> 02:01:57,659
those problems from multiple angles from

2876
02:01:57,659 --> 02:02:00,420
intent from config from personal data

2877
02:02:00,420 --> 02:02:03,119
there is no perfect answer but we need

2878
02:02:03,119 --> 02:02:04,800
to continue working on this because I

2879
02:02:04,800 --> 02:02:06,719
see all of these problems thanks okay

2880
02:02:06,719 --> 02:02:08,940
great thank you

2881
02:02:08,940 --> 02:02:10,380
yeah thank you very much for this

2882
02:02:10,380 --> 02:02:12,119
interesting work look forward to hearing

2883
02:02:12,119 --> 02:02:15,360
more as it matures uh definitely uh

2884
02:02:15,360 --> 02:02:16,800
interesting

2885
02:02:16,800 --> 02:02:18,119
um with that we're actually a few

2886
02:02:18,119 --> 02:02:20,940
minutes over time and thank you all for

2887
02:02:20,940 --> 02:02:22,800
participating in a I think a very good

2888
02:02:22,800 --> 02:02:26,040
session and look forward to seeing you

2889
02:02:26,040 --> 02:02:28,820
the rest of the week

2890
02:02:29,780 --> 02:02:32,099
and thank you all to those who

2891
02:02:32,099 --> 02:02:35,060
participated remotely

