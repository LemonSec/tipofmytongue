1
00:00:04,980 --> 00:00:07,280
foreign

2
00:00:07,280 --> 00:00:12,660
okay it's time it is time go for it

3
00:00:12,660 --> 00:00:16,040
oh yeah

4
00:00:17,520 --> 00:00:19,020
okay

5
00:00:19,020 --> 00:00:22,380
good afternoon everybody Welcome to jmap

6
00:00:22,380 --> 00:00:25,380
and in a little while extra

7
00:00:25,380 --> 00:00:27,960
um happy to happy to see so many people

8
00:00:27,960 --> 00:00:29,820
in person here

9
00:00:29,820 --> 00:00:33,300
so as uh uh as is usual we're going to

10
00:00:33,300 --> 00:00:35,820
start with the the note well slide I'm

11
00:00:35,820 --> 00:00:37,559
hoping that all of you are very familiar

12
00:00:37,559 --> 00:00:40,379
with this but I will continue to narrate

13
00:00:40,379 --> 00:00:44,100
a little bit about it anyway uh it's uh

14
00:00:44,100 --> 00:00:45,780
of course important that we make sure

15
00:00:45,780 --> 00:00:47,520
that everybody's on the same page with

16
00:00:47,520 --> 00:00:49,500
respect to things like intellectual

17
00:00:49,500 --> 00:00:51,660
property rights and definitely with the

18
00:00:51,660 --> 00:00:54,120
code of conduct as well and so if you

19
00:00:54,120 --> 00:00:55,739
have not read this in detail already

20
00:00:55,739 --> 00:00:58,500
many times I I would encourage you to do

21
00:00:58,500 --> 00:01:00,800
it again

22
00:01:01,199 --> 00:01:03,920
next slide

23
00:01:06,360 --> 00:01:09,360
so um we're going to start with uh

24
00:01:09,360 --> 00:01:12,060
uh updates on uh

25
00:01:12,060 --> 00:01:14,040
oh well this is the very top level

26
00:01:14,040 --> 00:01:17,880
agenda isn't it yeah so um

27
00:01:17,880 --> 00:01:21,360
uh we're gonna start with on the on the

28
00:01:21,360 --> 00:01:23,400
jmap side we're going to cover a couple

29
00:01:23,400 --> 00:01:26,340
of drafts that are in uh last call or

30
00:01:26,340 --> 00:01:29,759
otherwise submitted to iesg and then we

31
00:01:29,759 --> 00:01:31,920
have uh about a half a dozen uh

32
00:01:31,920 --> 00:01:34,140
different uh discussions about about

33
00:01:34,140 --> 00:01:37,439
various uh gmap drafts on calendars

34
00:01:37,439 --> 00:01:39,840
contacts quotas sharing and tasks and

35
00:01:39,840 --> 00:01:43,200
sender and S Prime Center extensions

36
00:01:43,200 --> 00:01:45,299
baby

37
00:01:45,299 --> 00:01:48,439
there'll be a couple days

38
00:01:48,780 --> 00:01:50,700
please hop straight up and talk if you'd

39
00:01:50,700 --> 00:01:53,000
like to

40
00:01:53,460 --> 00:01:55,860
is this a time for agenda bashing yeah

41
00:01:55,860 --> 00:01:58,640
oh I just want to say that the the the

42
00:01:58,640 --> 00:02:01,500
migration data portability is not on the

43
00:02:01,500 --> 00:02:04,619
agenda right now it's on the copy the

44
00:02:04,619 --> 00:02:06,000
gender and not on my slides because I

45
00:02:06,000 --> 00:02:07,860
didn't

46
00:02:07,860 --> 00:02:11,119
perfect thank you

47
00:02:13,620 --> 00:02:14,940
okay

48
00:02:14,940 --> 00:02:17,340
and then uh

49
00:02:17,340 --> 00:02:19,020
I don't know are we bashing the agenda

50
00:02:19,020 --> 00:02:20,640
for you for extra as well at this point

51
00:02:20,640 --> 00:02:23,000
uh

52
00:02:25,080 --> 00:02:29,120
there's the agenda for extra which

53
00:02:29,580 --> 00:02:32,520
I am less familiar with not being yeah I

54
00:02:32,520 --> 00:02:34,560
think the only bashing we had for this

55
00:02:34,560 --> 00:02:36,900
is that stiff knows it's your process

56
00:02:36,900 --> 00:02:39,959
I'm basically have had no progress since

57
00:02:39,959 --> 00:02:42,840
last iacf but maybe president was

58
00:02:42,840 --> 00:02:44,760
supposed to go to last four so we'll

59
00:02:44,760 --> 00:02:46,080
we'll deal with that when we get there

60
00:02:46,080 --> 00:02:48,660
closer to the microphone sure

61
00:02:48,660 --> 00:02:50,700
um yeah so we we think that Civ process

62
00:02:50,700 --> 00:02:52,200
I met was probably supposed to go to

63
00:02:52,200 --> 00:02:53,220
last call and can't remember what

64
00:02:53,220 --> 00:02:54,660
happened with that but we have had no

65
00:02:54,660 --> 00:02:56,220
progress on either of them since last

66
00:02:56,220 --> 00:02:57,959
meeting so we'll we'll glance through

67
00:02:57,959 --> 00:03:01,160
the state of them when we get there

68
00:03:04,620 --> 00:03:07,080
okay did you catch the agenda bash for

69
00:03:07,080 --> 00:03:09,239
the minutes or

70
00:03:09,239 --> 00:03:11,720
I wasn't doing that yes

71
00:03:11,720 --> 00:03:14,879
okay thanks

72
00:03:14,879 --> 00:03:17,879
I hadn't uh realize that went by quickly

73
00:03:17,879 --> 00:03:20,099
we're doing this double X very well I

74
00:03:20,099 --> 00:03:22,500
mean should we get straight into the

75
00:03:22,500 --> 00:03:25,620
first item on the agenda which is uh

76
00:03:25,620 --> 00:03:29,099
blob I don't have any slides for blob I

77
00:03:29,099 --> 00:03:32,280
had one review from sector which I have

78
00:03:32,280 --> 00:03:34,440
replied to and I've submitted a new

79
00:03:34,440 --> 00:03:37,800
version with the fixes from that

80
00:03:37,800 --> 00:03:39,239
um I don't think there's anything else

81
00:03:39,239 --> 00:03:41,879
to say unless our area director has any

82
00:03:41,879 --> 00:03:45,260
comments on

83
00:03:48,480 --> 00:03:50,580
no

84
00:03:50,580 --> 00:03:52,440
I'm just I'm just getting set up and I

85
00:03:52,440 --> 00:03:54,780
want to if I say no now I might come

86
00:03:54,780 --> 00:03:56,400
back to it in a couple of minutes but if

87
00:03:56,400 --> 00:03:57,720
cool I don't I can't think of anything

88
00:03:57,720 --> 00:04:00,260
off topic

89
00:04:01,860 --> 00:04:05,819
excellent uh next item here is the sieve

90
00:04:05,819 --> 00:04:08,099
which is also

91
00:04:08,099 --> 00:04:11,899
has been Alexi please

92
00:04:14,400 --> 00:04:18,060
yeah so Murray uh had some AG review

93
00:04:18,060 --> 00:04:21,120
comments which one on blocking I'm sorry

94
00:04:21,120 --> 00:04:24,979
I didn't get to them but I will

95
00:04:29,840 --> 00:04:31,680
they didn't seem particularly

96
00:04:31,680 --> 00:04:34,880
controversial I think so

97
00:04:36,800 --> 00:04:39,000
Okay so

98
00:04:39,000 --> 00:04:41,340
yep we are we're up to save now

99
00:04:41,340 --> 00:04:44,160
yes Save action registration yeah yes

100
00:04:44,160 --> 00:04:46,380
yep

101
00:04:46,380 --> 00:04:47,720
no

102
00:04:47,720 --> 00:04:49,860
we're doing great here

103
00:04:49,860 --> 00:04:52,820
okay rewind

104
00:04:52,820 --> 00:04:55,740
Brawn is responsible for blob

105
00:04:55,740 --> 00:04:59,580
I'm responsible for safe actions

106
00:04:59,580 --> 00:05:02,240
with Cam

107
00:05:03,720 --> 00:05:06,560
really because

108
00:05:07,400 --> 00:05:11,599
started Alaska also

109
00:05:15,000 --> 00:05:17,040
this is kind of I think Alexi's getting

110
00:05:17,040 --> 00:05:18,780
ahead of himself I think Civic action

111
00:05:18,780 --> 00:05:20,340
registry is part of the extra session

112
00:05:20,340 --> 00:05:23,759
this is the jmap this is jmap for Civ oh

113
00:05:23,759 --> 00:05:26,960
I'm stealing your document I'm sorry

114
00:05:27,060 --> 00:05:30,240
Ken uh yeah so I don't know if people

115
00:05:30,240 --> 00:05:34,860
notice there is a an email to the list

116
00:05:34,860 --> 00:05:37,800
um someone had requested uh two other

117
00:05:37,800 --> 00:05:39,240
items in there which I think were

118
00:05:39,240 --> 00:05:42,000
probably better off as extensions uh I

119
00:05:42,000 --> 00:05:43,320
forgot to tell my head what they were oh

120
00:05:43,320 --> 00:05:46,320
one of them they wanted ability to

121
00:05:46,320 --> 00:05:47,520
uh

122
00:05:47,520 --> 00:05:50,699
uh recall failed action why why an

123
00:05:50,699 --> 00:05:53,699
action had failed through this protocol

124
00:05:53,699 --> 00:05:55,560
uh I think it's probably too far along

125
00:05:55,560 --> 00:05:58,080
to add that now it seems right for an

126
00:05:58,080 --> 00:06:00,120
extension if somebody wants that the

127
00:06:00,120 --> 00:06:01,500
only other issue that was brought up

128
00:06:01,500 --> 00:06:04,560
that might want to be discussed here uh

129
00:06:04,560 --> 00:06:07,740
currently to uh deactivate a script you

130
00:06:07,740 --> 00:06:10,620
basically use the uh activate script

131
00:06:10,620 --> 00:06:14,039
with a empty string the request was to

132
00:06:14,039 --> 00:06:18,479
have a second another property which

133
00:06:18,479 --> 00:06:20,699
specifically disables a script as

134
00:06:20,699 --> 00:06:22,740
opposed to using enable with an empty

135
00:06:22,740 --> 00:06:25,319
string which follows what manage Civ did

136
00:06:25,319 --> 00:06:28,080
I have no strong opinion either way I'll

137
00:06:28,080 --> 00:06:29,580
leave it up to the group to decide if we

138
00:06:29,580 --> 00:06:30,960
want to add that at this point or just

139
00:06:30,960 --> 00:06:33,360
leave it as is it's it's functionally

140
00:06:33,360 --> 00:06:37,220
equivalent it's just a separate property

141
00:06:38,479 --> 00:06:42,300
anybody want to comment on this

142
00:06:42,300 --> 00:06:45,199
sheet is open

143
00:06:56,100 --> 00:06:57,840
Alexi

144
00:06:57,840 --> 00:07:00,660
yeah push the button

145
00:07:00,660 --> 00:07:02,340
if you don't follow the process we won't

146
00:07:02,340 --> 00:07:03,660
know who's talking

147
00:07:03,660 --> 00:07:07,340
okay so uh

148
00:07:07,440 --> 00:07:09,600
now I'm with you on the right save

149
00:07:09,600 --> 00:07:11,400
document

150
00:07:11,400 --> 00:07:13,919
um yeah I bought the activation that was

151
00:07:13,919 --> 00:07:15,060
a bit of a

152
00:07:15,060 --> 00:07:17,880
bike shed I think but

153
00:07:17,880 --> 00:07:20,600
I'm kind of

154
00:07:22,080 --> 00:07:24,360
I don't really care you know just tell

155
00:07:24,360 --> 00:07:26,039
tell me what either what's the meaning

156
00:07:26,039 --> 00:07:28,199
of empty string is or what's how to

157
00:07:28,199 --> 00:07:30,479
deactivate so I don't mind

158
00:07:30,479 --> 00:07:33,240
yeah the the spec as I wrote it was

159
00:07:33,240 --> 00:07:35,639
following the model outlined by manage

160
00:07:35,639 --> 00:07:38,699
Civ uh for better for worse uh and this

161
00:07:38,699 --> 00:07:40,860
model is exactly what that does

162
00:07:40,860 --> 00:07:43,199
again if people feel strongly about

163
00:07:43,199 --> 00:07:45,780
having another property I'm willing to

164
00:07:45,780 --> 00:07:48,120
do it but at this late in the game if

165
00:07:48,120 --> 00:07:49,500
there aren't strong opinions I'm

166
00:07:49,500 --> 00:07:52,919
inclined is to leave it as is

167
00:07:52,919 --> 00:07:55,580
Neil

168
00:08:00,900 --> 00:08:03,318
hello

169
00:08:03,539 --> 00:08:06,120
first of all it shouldn't accept empty

170
00:08:06,120 --> 00:08:08,460
string the spec actually says or null

171
00:08:08,460 --> 00:08:10,259
it's ID or null

172
00:08:10,259 --> 00:08:12,060
um and an empty string is not an ID and

173
00:08:12,060 --> 00:08:14,160
it is not null so

174
00:08:14,160 --> 00:08:16,380
that that should be an invalid argument

175
00:08:16,380 --> 00:08:18,240
so if you sent that

176
00:08:18,240 --> 00:08:19,520
um

177
00:08:19,520 --> 00:08:22,020
the advantage to having a separate

178
00:08:22,020 --> 00:08:26,699
property you I could see would be if um

179
00:08:26,699 --> 00:08:28,259
if you don't want it to change you don't

180
00:08:28,259 --> 00:08:29,879
have to admit to the whole thing you can

181
00:08:29,879 --> 00:08:33,299
always submit not every argument uh

182
00:08:33,299 --> 00:08:36,179
which I could see being potentially

183
00:08:36,179 --> 00:08:38,580
a thing for strictly typed languages in

184
00:08:38,580 --> 00:08:40,080
particular it might be awkward to have

185
00:08:40,080 --> 00:08:42,539
to admit something rather than provide a

186
00:08:42,539 --> 00:08:43,440
default

187
00:08:43,440 --> 00:08:46,620
but other than that I don't you're too

188
00:08:46,620 --> 00:08:49,560
strongly either way but I would say yes

189
00:08:49,560 --> 00:08:51,540
definitely no rather than empty string

190
00:08:51,540 --> 00:08:54,860
if you're keeping it

191
00:08:57,540 --> 00:09:01,320
um sorry the chairs just disorganized

192
00:09:01,320 --> 00:09:02,880
here go ahead

193
00:09:02,880 --> 00:09:04,740
um yeah so

194
00:09:04,740 --> 00:09:08,100
it you're suggesting that we do add a

195
00:09:08,100 --> 00:09:10,700
separate property

196
00:09:12,540 --> 00:09:15,060
I could see the advantage of that for

197
00:09:15,060 --> 00:09:18,660
yeah not having um

198
00:09:18,660 --> 00:09:21,959
to to deal with this yet like you know

199
00:09:21,959 --> 00:09:23,459
you can consider like an argument to a

200
00:09:23,459 --> 00:09:25,620
method and there's no value you can pass

201
00:09:25,620 --> 00:09:29,959
here that would not do something

202
00:09:30,899 --> 00:09:33,660
um if it's with with the current spec

203
00:09:33,660 --> 00:09:35,339
which is perhaps slightly weird you have

204
00:09:35,339 --> 00:09:37,980
to omit it

205
00:09:37,980 --> 00:09:39,959
so I think probably I would lean towards

206
00:09:39,959 --> 00:09:41,880
adding a separate

207
00:09:41,880 --> 00:09:43,939
um

208
00:09:46,440 --> 00:09:48,540
can

209
00:09:48,540 --> 00:09:49,980
happy

210
00:09:49,980 --> 00:09:51,779
you want to take her home whatever it

211
00:09:51,779 --> 00:09:54,380
doesn't matter to me

212
00:09:54,839 --> 00:09:56,700
and well you're the author if you're

213
00:09:56,700 --> 00:09:58,680
happy to do it then

214
00:09:58,680 --> 00:10:01,219
yep

215
00:10:01,800 --> 00:10:04,080
that's Ken saying no big deal he will do

216
00:10:04,080 --> 00:10:06,260
it

217
00:10:06,899 --> 00:10:08,700
excellent um I don't think we're gonna

218
00:10:08,700 --> 00:10:10,260
need to do a new working group last call

219
00:10:10,260 --> 00:10:14,100
for this it's a small change

220
00:10:14,100 --> 00:10:16,320
yes

221
00:10:16,320 --> 00:10:19,640
okay go ahead

222
00:10:20,040 --> 00:10:22,560
hi assistant York

223
00:10:22,560 --> 00:10:25,680
um I remember Ken that is quite some

224
00:10:25,680 --> 00:10:27,360
time ago I think we had a very small

225
00:10:27,360 --> 00:10:30,120
exchange on a minor topic on this civ4j

226
00:10:30,120 --> 00:10:32,220
map thing and I just relooked it because

227
00:10:32,220 --> 00:10:34,500
it somehow went dormant a little bit and

228
00:10:34,500 --> 00:10:36,120
it's related to what we discussed in

229
00:10:36,120 --> 00:10:38,760
Vienna about Sif in

230
00:10:38,760 --> 00:10:41,820
um in non-j map context with um you know

231
00:10:41,820 --> 00:10:45,420
how people build safe rules together as

232
00:10:45,420 --> 00:10:48,779
a system from what's coming basically

233
00:10:48,779 --> 00:10:51,300
um and I think my concern with respect

234
00:10:51,300 --> 00:10:53,519
to Civ for J map was that it would be

235
00:10:53,519 --> 00:10:55,500
nice to actually have a mechanism to

236
00:10:55,500 --> 00:10:57,600
know which was the or is the underlying

237
00:10:57,600 --> 00:11:00,600
system which um you know owns a server

238
00:11:00,600 --> 00:11:01,800
software

239
00:11:01,800 --> 00:11:03,899
so I wonder if this is something that

240
00:11:03,899 --> 00:11:05,940
could go into a property here or is it

241
00:11:05,940 --> 00:11:07,320
something I'm not quite sure that could

242
00:11:07,320 --> 00:11:10,740
be derived from the jmap

243
00:11:10,740 --> 00:11:12,540
um overall response I'm not sure if

244
00:11:12,540 --> 00:11:14,279
there's somewhere seven meter data I

245
00:11:14,279 --> 00:11:17,540
think that isn't right now right

246
00:11:19,339 --> 00:11:21,540
yeah so the background of the question

247
00:11:21,540 --> 00:11:24,120
is so there is so the observation is

248
00:11:24,120 --> 00:11:25,860
that empirically in practice

249
00:11:25,860 --> 00:11:27,660
um Sif is

250
00:11:27,660 --> 00:11:30,300
um very much structured by the use of

251
00:11:30,300 --> 00:11:32,700
the underlying software so there is for

252
00:11:32,700 --> 00:11:34,620
instance certain web mailers that have a

253
00:11:34,620 --> 00:11:36,480
very clear structure of the Sif rules

254
00:11:36,480 --> 00:11:38,519
which they create

255
00:11:38,519 --> 00:11:40,620
and it's helpful for a consuming client

256
00:11:40,620 --> 00:11:43,380
to know that and typically when you use

257
00:11:43,380 --> 00:11:45,420
manage sift directly you have a greeting

258
00:11:45,420 --> 00:11:47,760
so you know actually this is coming from

259
00:11:47,760 --> 00:11:49,440
certain server implementation like a

260
00:11:49,440 --> 00:11:51,120
Zimbra or whatever kind of thing and you

261
00:11:51,120 --> 00:11:52,680
can do actually apply your changes

262
00:11:52,680 --> 00:11:54,899
sometimes you have it within the sift

263
00:11:54,899 --> 00:11:59,399
script but in case of jmap I think it

264
00:11:59,399 --> 00:12:01,800
might be the case that search for jmap

265
00:12:01,800 --> 00:12:03,720
might be wrapping existing underlying

266
00:12:03,720 --> 00:12:05,220
skim servers

267
00:12:05,220 --> 00:12:07,860
so that information somehow is currently

268
00:12:07,860 --> 00:12:09,720
not able to be retrieved in my opinion

269
00:12:09,720 --> 00:12:10,980
and it would be good to have maybe a

270
00:12:10,980 --> 00:12:13,200
mechanism for that ideally it would be

271
00:12:13,200 --> 00:12:16,260
the server head of via HTTP I guess but

272
00:12:16,260 --> 00:12:18,319
um

273
00:12:20,459 --> 00:12:22,560
if this is important we could we could

274
00:12:22,560 --> 00:12:24,620
add a another property to the capability

275
00:12:24,620 --> 00:12:27,360
which lists the implementation but my

276
00:12:27,360 --> 00:12:28,860
guess is that

277
00:12:28,860 --> 00:12:31,980
some sites might want to suppress that

278
00:12:31,980 --> 00:12:34,560
and not leak what their what their

279
00:12:34,560 --> 00:12:37,980
implementation or version is

280
00:12:37,980 --> 00:12:41,180
but I can certainly add it

281
00:12:42,000 --> 00:12:44,160
all right um can I ask maybe that we

282
00:12:44,160 --> 00:12:47,420
discussed this on the list

283
00:12:47,820 --> 00:12:50,820
is

284
00:12:52,320 --> 00:12:55,260
cool excellent

285
00:12:55,260 --> 00:12:58,139
then let's move on to

286
00:12:58,139 --> 00:13:00,540
calendar which is the next item on the

287
00:13:00,540 --> 00:13:02,579
list Neil did you want to drive the

288
00:13:02,579 --> 00:13:04,800
slides I think I think if you request

289
00:13:04,800 --> 00:13:07,200
slide control

290
00:13:07,200 --> 00:13:09,360
um you can just take them directly from

291
00:13:09,360 --> 00:13:12,500
the pre-loaded slides

292
00:13:13,320 --> 00:13:17,160
where would I do that uh top left hand

293
00:13:17,160 --> 00:13:19,500
side there's a share pre-loaded slides

294
00:13:19,500 --> 00:13:21,860
button

295
00:13:22,620 --> 00:13:26,300
is wow

296
00:13:26,710 --> 00:13:27,899
[Music]

297
00:13:27,899 --> 00:13:29,899
um

298
00:13:31,800 --> 00:13:33,000
yeah

299
00:13:33,000 --> 00:13:35,360
yeah

300
00:13:37,740 --> 00:13:39,600
cool

301
00:13:39,600 --> 00:13:41,760
clever

302
00:13:41,760 --> 00:13:44,880
so I think uh this was hopefully going

303
00:13:44,880 --> 00:13:47,579
to be fairly brief so we can

304
00:13:47,579 --> 00:13:48,600
um

305
00:13:48,600 --> 00:13:52,920
move us along uh I published uh version

306
00:13:52,920 --> 00:13:55,440
nine draft about a month ago

307
00:13:55,440 --> 00:13:59,040
um which had a few updates in it

308
00:13:59,040 --> 00:14:02,579
um so the probably the biggest one is

309
00:14:02,579 --> 00:14:03,779
um we've had this big discussion I've

310
00:14:03,779 --> 00:14:07,200
been calyx about adding schedule ID to

311
00:14:07,200 --> 00:14:10,139
JS calendar to participants

312
00:14:10,139 --> 00:14:13,680
um which identifies that participant

313
00:14:13,680 --> 00:14:15,440
kind of globally

314
00:14:15,440 --> 00:14:18,000
uh this would often just be essentially

315
00:14:18,000 --> 00:14:20,279
a mail to URI with someone's email

316
00:14:20,279 --> 00:14:22,920
address uh or something like that but

317
00:14:22,920 --> 00:14:25,980
basically separating out the ID of a

318
00:14:25,980 --> 00:14:27,959
participant from the methods of

319
00:14:27,959 --> 00:14:29,579
contacting them which is in the sanitary

320
00:14:29,579 --> 00:14:30,420
property

321
00:14:30,420 --> 00:14:32,519
uh and why this is important for jmap

322
00:14:32,519 --> 00:14:35,760
calendars is we need uh to be able to

323
00:14:35,760 --> 00:14:37,620
look at an event and go which of these

324
00:14:37,620 --> 00:14:39,839
participants is you the logged in user

325
00:14:39,839 --> 00:14:42,060
and before we were looking through all

326
00:14:42,060 --> 00:14:44,579
of the send to options and going would I

327
00:14:44,579 --> 00:14:46,680
received any of these but this kind of

328
00:14:46,680 --> 00:14:48,000
simplifies that because we can now just

329
00:14:48,000 --> 00:14:49,740
look at the schedule ID and go is this

330
00:14:49,740 --> 00:14:52,620
I'd ID one of the user schedule IDs you

331
00:14:52,620 --> 00:14:53,699
may have multiple because you might have

332
00:14:53,699 --> 00:14:54,899
like different email addresses that

333
00:14:54,899 --> 00:14:57,959
aliases they're all you but it's still

334
00:14:57,959 --> 00:14:59,279
comparing

335
00:14:59,279 --> 00:15:01,920
um you're not doing a nested Loop kind

336
00:15:01,920 --> 00:15:04,380
of comparison so it's it's a simplifies

337
00:15:04,380 --> 00:15:06,720
things but I think so

338
00:15:06,720 --> 00:15:07,680
um

339
00:15:07,680 --> 00:15:09,300
that was the biggest change we also

340
00:15:09,300 --> 00:15:11,519
added this uh is origin Property we

341
00:15:11,519 --> 00:15:14,100
discussed this at the last uh ITF

342
00:15:14,100 --> 00:15:16,139
meeting which is just the server

343
00:15:16,139 --> 00:15:18,720
notifying uh putting a property on the

344
00:15:18,720 --> 00:15:20,399
event to say it is the authoritative

345
00:15:20,399 --> 00:15:21,779
source for this event so if you make

346
00:15:21,779 --> 00:15:23,579
changes it's going to send out it

347
00:15:23,579 --> 00:15:25,620
messages to all the other participants

348
00:15:25,620 --> 00:15:28,560
and expect to receive RSVPs

349
00:15:28,560 --> 00:15:29,940
um as opposed to if that's of course

350
00:15:29,940 --> 00:15:31,680
then you've received this from someone

351
00:15:31,680 --> 00:15:33,839
else and you'll be sending out RSVPs

352
00:15:33,839 --> 00:15:35,420
back to them

353
00:15:35,420 --> 00:15:38,279
uh finally the other kind of bigger

354
00:15:38,279 --> 00:15:40,320
change was moving this Sherry's actors

355
00:15:40,320 --> 00:15:43,380
property which simplified the spec we

356
00:15:43,380 --> 00:15:44,699
added this originally to give

357
00:15:44,699 --> 00:15:46,079
flexibility

358
00:15:46,079 --> 00:15:47,100
um

359
00:15:47,100 --> 00:15:49,860
for kind of different modes of sharing

360
00:15:49,860 --> 00:15:52,380
but we looked around it didn't seem that

361
00:15:52,380 --> 00:15:54,240
the the two modes were not that

362
00:15:54,240 --> 00:15:56,040
different and didn't seem anyone

363
00:15:56,040 --> 00:15:58,680
actually needed both and from existing

364
00:15:58,680 --> 00:16:01,740
implementations and removing complexity

365
00:16:01,740 --> 00:16:05,639
is I think a worthwhile thing so we took

366
00:16:05,639 --> 00:16:08,339
that out uh and then I added quite a few

367
00:16:08,339 --> 00:16:12,060
API examples so with that I believe

368
00:16:12,060 --> 00:16:14,899
that I'll mute the next slide

369
00:16:14,899 --> 00:16:18,959
this is basically finished I need to fix

370
00:16:18,959 --> 00:16:20,399
up some editorial stuff including

371
00:16:20,399 --> 00:16:21,839
section references that are missing and

372
00:16:21,839 --> 00:16:23,880
just say section XXX rather than

373
00:16:23,880 --> 00:16:26,579
property linking but do all that and

374
00:16:26,579 --> 00:16:28,560
we're gonna definitely need to wait to

375
00:16:28,560 --> 00:16:30,480
ensure the JS Canada schedule ID stuff

376
00:16:30,480 --> 00:16:31,920
is finalized

377
00:16:31,920 --> 00:16:32,519
um

378
00:16:32,519 --> 00:16:34,680
because we can't have that critical to

379
00:16:34,680 --> 00:16:35,940
how a lot of this works so we can't have

380
00:16:35,940 --> 00:16:37,259
that changing underneath us if that

381
00:16:37,259 --> 00:16:39,540
doesn't end up doing what we think it's

382
00:16:39,540 --> 00:16:40,980
going to do

383
00:16:40,980 --> 00:16:43,800
um so hopefully though we can publish

384
00:16:43,800 --> 00:16:45,839
this soon probably with the JS calendar

385
00:16:45,839 --> 00:16:46,860
this

386
00:16:46,860 --> 00:16:50,040
um whenever that comes along

387
00:16:50,040 --> 00:16:52,079
um so I do encourage you to have a look

388
00:16:52,079 --> 00:16:53,940
if you want to make any fire you know

389
00:16:53,940 --> 00:16:59,480
further comments on it uh jorus

390
00:17:01,440 --> 00:17:04,020
hi this is Joe's bomb

391
00:17:04,020 --> 00:17:06,359
um yeah so

392
00:17:06,359 --> 00:17:09,480
um I recently synced the JS the Gemma

393
00:17:09,480 --> 00:17:11,699
tasks draft with your changes from

394
00:17:11,699 --> 00:17:15,299
calendar because yes there are a lot of

395
00:17:15,299 --> 00:17:17,099
um commonalities

396
00:17:17,099 --> 00:17:21,000
yeah so one thing I stumbled upon is the

397
00:17:21,000 --> 00:17:24,480
calendar preferences object for now I

398
00:17:24,480 --> 00:17:27,599
rev refrain from

399
00:17:27,599 --> 00:17:31,679
um tagging along here so

400
00:17:31,679 --> 00:17:32,520
um

401
00:17:32,520 --> 00:17:35,760
my take on this in in jmap mail there's

402
00:17:35,760 --> 00:17:38,100
a role property right what the folder is

403
00:17:38,100 --> 00:17:40,740
supposed to be is it an inbox is it a

404
00:17:40,740 --> 00:17:41,580
draft

405
00:17:41,580 --> 00:17:45,900
and for calendars this also was there do

406
00:17:45,900 --> 00:17:48,360
you have the role property of a of a

407
00:17:48,360 --> 00:17:51,179
calendar folder was it I think it was

408
00:17:51,179 --> 00:17:52,500
inbox

409
00:17:52,500 --> 00:17:55,200
only for now right

410
00:17:55,200 --> 00:17:57,660
um basically to to say this is the

411
00:17:57,660 --> 00:17:58,640
default

412
00:17:58,640 --> 00:18:00,780
folder of a user

413
00:18:00,780 --> 00:18:03,480
and in the newest version you move this

414
00:18:03,480 --> 00:18:06,720
to a separate object so

415
00:18:06,720 --> 00:18:09,780
um I just wanted to to understand the

416
00:18:09,780 --> 00:18:11,940
so what I don't really like about this

417
00:18:11,940 --> 00:18:14,039
that we now have two approaches one is

418
00:18:14,039 --> 00:18:16,380
in in mail this is inside the folder

419
00:18:16,380 --> 00:18:19,020
object it's it's a it's a one property

420
00:18:19,020 --> 00:18:22,220
and in calendars this is a separate

421
00:18:22,220 --> 00:18:24,539
object yeah

422
00:18:24,539 --> 00:18:26,220
um I just wanted to know the reasoning

423
00:18:26,220 --> 00:18:28,860
behind that before I tag along here sure

424
00:18:28,860 --> 00:18:30,960
so I think we did discuss this at the

425
00:18:30,960 --> 00:18:32,880
previous idea the the big difference

426
00:18:32,880 --> 00:18:34,679
with the mail stuff is that that's

427
00:18:34,679 --> 00:18:36,360
immutable there whereas this is

428
00:18:36,360 --> 00:18:38,940
something that can move around

429
00:18:38,940 --> 00:18:40,980
um and so the trouble is you're trying

430
00:18:40,980 --> 00:18:42,780
to enforce that

431
00:18:42,780 --> 00:18:47,640
at most one of the calendars is the

432
00:18:47,640 --> 00:18:49,440
default because it doesn't really make

433
00:18:49,440 --> 00:18:53,580
sense if you had multiple and so

434
00:18:53,580 --> 00:18:55,020
you get

435
00:18:55,020 --> 00:18:57,120
um

436
00:18:57,120 --> 00:18:59,820
I think a

437
00:18:59,820 --> 00:19:02,820
it's kind of easier to kind of

438
00:19:02,820 --> 00:19:05,220
enforce that with a single object where

439
00:19:05,220 --> 00:19:07,860
it's just there there is no way of

440
00:19:07,860 --> 00:19:10,440
specifying multiple uh so I think that's

441
00:19:10,440 --> 00:19:14,059
why we changed it but um

442
00:19:14,460 --> 00:19:16,260
that's my recollection I don't know uh

443
00:19:16,260 --> 00:19:18,240
Robert you're NICU maybe you remember

444
00:19:18,240 --> 00:19:20,580
better you go and then I'll come back to

445
00:19:20,580 --> 00:19:21,720
it

446
00:19:21,720 --> 00:19:25,200
it's Robert yeah

447
00:19:26,039 --> 00:19:29,220
yeah so um

448
00:19:29,220 --> 00:19:31,980
regarding the in short Chase kind of

449
00:19:31,980 --> 00:19:33,720
work is finished part

450
00:19:33,720 --> 00:19:37,320
um and the dependency now of uh gmap

451
00:19:37,320 --> 00:19:39,539
calendars requiring scheduler D to be

452
00:19:39,539 --> 00:19:42,900
defined for JS calendar so on Tuesday at

453
00:19:42,900 --> 00:19:46,380
calex we were setting the deadline for

454
00:19:46,380 --> 00:19:50,460
GS cannabis to Summer next year

455
00:19:50,460 --> 00:19:51,260
um

456
00:19:51,260 --> 00:19:55,559
and so I and and this was done when we

457
00:19:55,559 --> 00:19:57,120
were under the assumption that there is

458
00:19:57,120 --> 00:20:01,020
no hard dependency of jmf calendars on

459
00:20:01,020 --> 00:20:03,539
JS calendar base

460
00:20:03,539 --> 00:20:05,880
um but now I think it is there is we

461
00:20:05,880 --> 00:20:07,799
might want to revisit yeah I think we

462
00:20:07,799 --> 00:20:10,260
agreed that we would just hold GM

463
00:20:10,260 --> 00:20:12,059
calendars until Jess calendar best

464
00:20:12,059 --> 00:20:14,160
Publishers but have it ready to go

465
00:20:14,160 --> 00:20:15,120
together

466
00:20:15,120 --> 00:20:16,620
okay

467
00:20:16,620 --> 00:20:18,720
yeah

468
00:20:18,720 --> 00:20:22,220
all right yeah okay well then

469
00:20:22,220 --> 00:20:25,260
yeah was the the

470
00:20:25,260 --> 00:20:29,400
role versus references

471
00:20:30,179 --> 00:20:31,320
um

472
00:20:31,320 --> 00:20:33,299
sorry I was not completely following the

473
00:20:33,299 --> 00:20:34,799
discussion shortly because I looked at

474
00:20:34,799 --> 00:20:36,240
another thing so what's what's the

475
00:20:36,240 --> 00:20:38,580
question there

476
00:20:38,580 --> 00:20:41,039
so it's about why we changed from having

477
00:20:41,039 --> 00:20:43,740
kind of uh a property for like is

478
00:20:43,740 --> 00:20:46,140
default or actually had roll its inbox

479
00:20:46,140 --> 00:20:48,600
but on the count object having the

480
00:20:48,600 --> 00:20:51,539
calendar preferences separate object the

481
00:20:51,539 --> 00:20:53,820
reference them

482
00:20:53,820 --> 00:20:55,380
um

483
00:20:55,380 --> 00:20:58,080
well we because we said we only want to

484
00:20:58,080 --> 00:21:00,120
have one default um one of the reasons

485
00:21:00,120 --> 00:21:01,559
was that it is that it was more

486
00:21:01,559 --> 00:21:03,419
straightforward to us to have one

487
00:21:03,419 --> 00:21:04,980
property where this is defined rather

488
00:21:04,980 --> 00:21:08,039
than implementations requiring to

489
00:21:08,039 --> 00:21:08,580
um

490
00:21:08,580 --> 00:21:11,280
look at all the roles of their calendars

491
00:21:11,280 --> 00:21:13,559
and make sure that their requirements

492
00:21:13,559 --> 00:21:15,720
are satisfied

493
00:21:15,720 --> 00:21:18,120
um I mean we do already need to do that

494
00:21:18,120 --> 00:21:22,620
for for jmap mailbox but um

495
00:21:22,620 --> 00:21:25,799
but other than that I don't I don't have

496
00:21:25,799 --> 00:21:28,020
a strong opinion on either

497
00:21:28,020 --> 00:21:29,460
um so

498
00:21:29,460 --> 00:21:30,260
if

499
00:21:30,260 --> 00:21:32,280
sounds like we'll have time if we want

500
00:21:32,280 --> 00:21:34,080
to reopen that on the main list that's a

501
00:21:34,080 --> 00:21:39,059
smaller yeah topic Josh so so one

502
00:21:39,059 --> 00:21:41,280
insurance so on

503
00:21:41,280 --> 00:21:43,620
um crazy thing one could do is basically

504
00:21:43,620 --> 00:21:46,200
have both you know like it's uh the

505
00:21:46,200 --> 00:21:47,880
calendar preferences object is already

506
00:21:47,880 --> 00:21:50,580
defined as an extension to the core

507
00:21:50,580 --> 00:21:52,140
calendar spec

508
00:21:52,140 --> 00:21:56,039
so the system could say Okay

509
00:21:56,039 --> 00:21:59,159
um I have this I only implement the core

510
00:21:59,159 --> 00:22:02,520
capabilities and I only have the role

511
00:22:02,520 --> 00:22:05,100
inside the as a property inside the

512
00:22:05,100 --> 00:22:07,799
folder or you could say oh I also have

513
00:22:07,799 --> 00:22:10,440
this fancy Kanda preferences object and

514
00:22:10,440 --> 00:22:12,659
you don't need to

515
00:22:12,659 --> 00:22:15,059
go through all the calendar folders to

516
00:22:15,059 --> 00:22:16,799
find out what's the default you just

517
00:22:16,799 --> 00:22:19,380
fetch the counter preferences object

518
00:22:19,380 --> 00:22:22,080
it's I I don't have actually strong

519
00:22:22,080 --> 00:22:25,080
feelings regarding that just for our use

520
00:22:25,080 --> 00:22:26,640
case it would be easier if it's inside

521
00:22:26,640 --> 00:22:29,640
the folder for your use case probably

522
00:22:29,640 --> 00:22:32,460
it's easier if it's a separate object

523
00:22:32,460 --> 00:22:34,140
yeah

524
00:22:34,140 --> 00:22:35,820
it might make sense to take this to a

525
00:22:35,820 --> 00:22:39,600
list yeah but just an idea of mine

526
00:22:39,600 --> 00:22:41,280
or do you do you have any feedback on

527
00:22:41,280 --> 00:22:43,140
having both because it's it might be

528
00:22:43,140 --> 00:22:45,299
kind of weird as well definitely rather

529
00:22:45,299 --> 00:22:47,460
not have both I think I think one or the

530
00:22:47,460 --> 00:22:48,419
other

531
00:22:48,419 --> 00:22:49,440
um

532
00:22:49,440 --> 00:22:52,320
it's gonna get confusing people only

533
00:22:52,320 --> 00:22:53,880
look at one and not realize there's

534
00:22:53,880 --> 00:22:55,500
another one or which will only work in

535
00:22:55,500 --> 00:22:57,480
some places or something like that

536
00:22:57,480 --> 00:23:00,000
if it's in two different places so I

537
00:23:00,000 --> 00:23:01,860
think I think one's better

538
00:23:01,860 --> 00:23:03,780
yeah I'm fine with taking it to a list

539
00:23:03,780 --> 00:23:05,700
thank you

540
00:23:05,700 --> 00:23:08,240
thanks

541
00:23:08,520 --> 00:23:10,980
hi this is Sans York um I didn't have

542
00:23:10,980 --> 00:23:12,659
the time to look it up direct Kings back

543
00:23:12,659 --> 00:23:14,100
and I don't know it by heart maybe it's

544
00:23:14,100 --> 00:23:15,780
inside but it sounded a little bit like

545
00:23:15,780 --> 00:23:17,760
what Robert said like the default folder

546
00:23:17,760 --> 00:23:19,500
you see only role you have in mind here

547
00:23:19,500 --> 00:23:22,640
for calendars is it correct

548
00:23:22,919 --> 00:23:24,720
that there's just one such role which

549
00:23:24,720 --> 00:23:26,400
you currently consider

550
00:23:26,400 --> 00:23:28,260
yeah I mean we we it's not called roll

551
00:23:28,260 --> 00:23:32,179
anymore it's it's default calendars

552
00:23:32,780 --> 00:23:36,059
so point I would like to make is that

553
00:23:36,059 --> 00:23:38,039
Sam might also encounters be other roads

554
00:23:38,039 --> 00:23:39,179
like you know you have this kind of

555
00:23:39,179 --> 00:23:42,600
auto-generated birthday calendars

556
00:23:42,600 --> 00:23:43,980
um and there is I think two or three

557
00:23:43,980 --> 00:23:45,299
other examples I would need to look that

558
00:23:45,299 --> 00:23:48,299
up so probably that would speak more for

559
00:23:48,299 --> 00:23:50,340
World Properties and if there's multiple

560
00:23:50,340 --> 00:23:53,640
ones then you know having a fixed set of

561
00:23:53,640 --> 00:23:55,760
properties in the calendar

562
00:23:55,760 --> 00:23:58,559
preferences which you had to extend I

563
00:23:58,559 --> 00:24:00,539
don't know I need to look it up but just

564
00:24:00,539 --> 00:24:01,919
want to make the point

565
00:24:01,919 --> 00:24:04,140
already generated birthdays is something

566
00:24:04,140 --> 00:24:06,059
that's quite common a Fastenal has one

567
00:24:06,059 --> 00:24:09,059
as well so whether you need a role for

568
00:24:09,059 --> 00:24:11,220
instance matter but yeah if you did then

569
00:24:11,220 --> 00:24:13,260
yeah so there's a reason why is that

570
00:24:13,260 --> 00:24:14,580
neutral supplies that could be helpful

571
00:24:14,580 --> 00:24:15,840
to asset as a royal calendar it's

572
00:24:15,840 --> 00:24:17,520
because in some systems you are not

573
00:24:17,520 --> 00:24:19,320
permitted to interact with these

574
00:24:19,320 --> 00:24:20,460
calendars because they are just

575
00:24:20,460 --> 00:24:21,840
auto-generated

576
00:24:21,840 --> 00:24:24,240
uh well that would be exposed by the

577
00:24:24,240 --> 00:24:26,460
permissions you have like if you could

578
00:24:26,460 --> 00:24:28,980
be exposed as a read-only calendar yes

579
00:24:28,980 --> 00:24:31,140
but what I mean I mean it's a special

580
00:24:31,140 --> 00:24:34,260
purpose calendar so that means okay the

581
00:24:34,260 --> 00:24:36,240
ACLS are part of it but some systems

582
00:24:36,240 --> 00:24:38,039
also displays them differently and so on

583
00:24:38,039 --> 00:24:39,000
and so on

584
00:24:39,000 --> 00:24:41,700
that's true I mean I think that kind of

585
00:24:41,700 --> 00:24:43,760
thing

586
00:24:45,059 --> 00:24:47,460
right like yeah you know this is a

587
00:24:47,460 --> 00:24:50,039
birthday calendar and it's a synced from

588
00:24:50,039 --> 00:24:52,559
elsewhere counter I don't know like once

589
00:24:52,559 --> 00:24:54,299
you have greater than one

590
00:24:54,299 --> 00:24:57,539
like different options you kind of

591
00:24:57,539 --> 00:24:59,700
yeah I actually checks out how different

592
00:24:59,700 --> 00:25:01,440
systems do it like I can't but I need to

593
00:25:01,440 --> 00:25:02,520
look it up

594
00:25:02,520 --> 00:25:05,900
sure okay

595
00:25:14,039 --> 00:25:16,860
all right so that's what I have

596
00:25:16,860 --> 00:25:19,919
um for actions for this

597
00:25:19,919 --> 00:25:22,500
where I have role versus preference

598
00:25:22,500 --> 00:25:25,320
discussions to list any other actions

599
00:25:25,320 --> 00:25:28,320
for now for jam up calendars

600
00:25:28,320 --> 00:25:30,840
other than please review which is the

601
00:25:30,840 --> 00:25:34,699
the perennial topic

602
00:25:35,340 --> 00:25:36,840
no

603
00:25:36,840 --> 00:25:38,700
all right we might as well just keep

604
00:25:38,700 --> 00:25:39,900
going with sharing Neil since you

605
00:25:39,900 --> 00:25:41,279
already you already have the slides up

606
00:25:41,279 --> 00:25:42,960
great sure

607
00:25:42,960 --> 00:25:44,340
um I mean this has even less to say

608
00:25:44,340 --> 00:25:45,419
about it because

609
00:25:45,419 --> 00:25:46,260
um

610
00:25:46,260 --> 00:25:48,779
it's basically I did publish an update

611
00:25:48,779 --> 00:25:50,520
but it was mainly kind of going to and

612
00:25:50,520 --> 00:25:52,380
doing copy edits there was only one

613
00:25:52,380 --> 00:25:55,380
actual change I think which was adding

614
00:25:55,380 --> 00:25:57,779
this accounts property which is uh to

615
00:25:57,779 --> 00:25:59,460
the principal object and basically this

616
00:25:59,460 --> 00:26:01,740
was about I realized if you were

617
00:26:01,740 --> 00:26:03,059
the

618
00:26:03,059 --> 00:26:04,860
sharing

619
00:26:04,860 --> 00:26:05,640
um

620
00:26:05,640 --> 00:26:08,279
information from calendars and mail and

621
00:26:08,279 --> 00:26:10,919
like you know different things they were

622
00:26:10,919 --> 00:26:12,659
all duplicating this whole account

623
00:26:12,659 --> 00:26:16,260
object inside them uh which was getting

624
00:26:16,260 --> 00:26:18,600
messy and you know needless duplication

625
00:26:18,600 --> 00:26:20,880
so kind of move that up to top level

626
00:26:20,880 --> 00:26:22,380
property that the other ones could just

627
00:26:22,380 --> 00:26:23,940
reference the idea of

628
00:26:23,940 --> 00:26:25,980
um that's that's it and I think you know

629
00:26:25,980 --> 00:26:28,200
this is a fairly much simpler spec in

630
00:26:28,200 --> 00:26:30,000
some ways it was extracted out of

631
00:26:30,000 --> 00:26:31,380
calendars because we were so it was

632
00:26:31,380 --> 00:26:32,400
pretty generic across the different

633
00:26:32,400 --> 00:26:34,559
things you could do sharing with

634
00:26:34,559 --> 00:26:38,520
um I think that one's pretty ready uh to

635
00:26:38,520 --> 00:26:39,659
be honest

636
00:26:39,659 --> 00:26:42,419
um but again we probably want to publish

637
00:26:42,419 --> 00:26:45,779
at the same time as as GM calendars um

638
00:26:45,779 --> 00:26:49,640
we could publish in advance I guess but

639
00:26:50,279 --> 00:26:51,720
um yeah I don't know if anyone has any

640
00:26:51,720 --> 00:26:54,799
other comments in this one

641
00:26:55,500 --> 00:26:58,279
Q's Open

642
00:27:02,159 --> 00:27:04,140
nobody looks particularly excited is

643
00:27:04,140 --> 00:27:06,620
there any reason

644
00:27:06,779 --> 00:27:10,200
I guess to hold it up can

645
00:27:10,200 --> 00:27:14,520
joke was first actually yep go ahead

646
00:27:14,520 --> 00:27:16,559
this is Ken my only question would be if

647
00:27:16,559 --> 00:27:18,539
this applies to

648
00:27:18,539 --> 00:27:20,460
jmap email then I say go ahead and

649
00:27:20,460 --> 00:27:22,200
publish it whenever it's ready if it

650
00:27:22,200 --> 00:27:23,760
only applies to calendars and contacts

651
00:27:23,760 --> 00:27:25,260
the emails away

652
00:27:25,260 --> 00:27:27,600
so it kind of

653
00:27:27,600 --> 00:27:29,960
it's a slightly abstract spec it defines

654
00:27:29,960 --> 00:27:32,940
the things that are common that you also

655
00:27:32,940 --> 00:27:34,980
have to say I'm going to share this

656
00:27:34,980 --> 00:27:36,840
stuff because you have to Define

657
00:27:36,840 --> 00:27:38,039
some things

658
00:27:38,039 --> 00:27:38,760
um

659
00:27:38,760 --> 00:27:40,980
but you certainly could apply to mail

660
00:27:40,980 --> 00:27:42,600
but that would actually be a separate

661
00:27:42,600 --> 00:27:44,940
spec in terms of letting you manage your

662
00:27:44,940 --> 00:27:48,419
mailbox sharing using this model

663
00:27:48,419 --> 00:27:49,440
um

664
00:27:49,440 --> 00:27:51,059
but yeah I think it definitely could be

665
00:27:51,059 --> 00:27:52,799
published actually because it's it's not

666
00:27:52,799 --> 00:27:54,299
dependent on it's the other way around

667
00:27:54,299 --> 00:27:57,539
calendars one is dependent on this one

668
00:27:57,539 --> 00:27:59,279
uh then I'd suggest we probably should

669
00:27:59,279 --> 00:28:01,020
publish it first

670
00:28:01,020 --> 00:28:04,220
sounds good okay

671
00:28:04,260 --> 00:28:06,120
I'll look at fixing all the editorial

672
00:28:06,120 --> 00:28:08,940
stuff from that first all right so first

673
00:28:08,940 --> 00:28:12,720
action is Neil to fix editorial

674
00:28:12,720 --> 00:28:16,440
and then we go ahead and do a last call

675
00:28:16,440 --> 00:28:19,520
yeah I think so

676
00:28:20,700 --> 00:28:23,220
can I ask you to take that one Jim when

677
00:28:23,220 --> 00:28:26,840
it's sure cool

678
00:28:27,059 --> 00:28:29,059
um

679
00:28:29,460 --> 00:28:31,260
cool

680
00:28:31,260 --> 00:28:33,659
you mean Shepherd

681
00:28:33,659 --> 00:28:35,640
yeah did the working group last call and

682
00:28:35,640 --> 00:28:40,460
Shepherd sure ready cool thank you

683
00:28:40,640 --> 00:28:43,260
and with that

684
00:28:43,260 --> 00:28:45,720
I think thank you Neil that's that's

685
00:28:45,720 --> 00:28:49,279
your two topics wasn't it

686
00:28:49,320 --> 00:28:53,580
so gem for quotas is the next one in the

687
00:28:53,580 --> 00:28:54,960
list

688
00:28:54,960 --> 00:28:58,260
according to this Renee if you want to

689
00:28:58,260 --> 00:29:01,279
pop in line

690
00:29:04,140 --> 00:29:08,940
hello sure hello uh turn off on my

691
00:29:08,940 --> 00:29:10,799
screen yeah

692
00:29:10,799 --> 00:29:14,940
hello guys uh this is Renee uh so I've

693
00:29:14,940 --> 00:29:17,520
been about Gemma coupon actually it's in

694
00:29:17,520 --> 00:29:19,620
last call as well so it's gonna be a

695
00:29:19,620 --> 00:29:22,260
pretty uh quick

696
00:29:22,260 --> 00:29:26,460
uh uh so yeah there is uh some minor

697
00:29:26,460 --> 00:29:30,539
tapos to to fix uh Murray thanks for

698
00:29:30,539 --> 00:29:34,380
reviewing it I think I will uh I will

699
00:29:34,380 --> 00:29:36,779
push something before the end of the of

700
00:29:36,779 --> 00:29:38,220
the week

701
00:29:38,220 --> 00:29:39,650
uh

702
00:29:39,650 --> 00:29:40,860
[Music]

703
00:29:40,860 --> 00:29:43,020
then yeah we're just saying as well we

704
00:29:43,020 --> 00:29:46,320
started uh doing a first uh partial

705
00:29:46,320 --> 00:29:49,260
implementation of gmatical in uh in

706
00:29:49,260 --> 00:29:50,460
James

707
00:29:50,460 --> 00:29:53,159
so for no just could I get method

708
00:29:53,159 --> 00:29:56,039
uh the rest will follow soon enough

709
00:29:56,039 --> 00:29:59,580
uh if people want I could show a little

710
00:29:59,580 --> 00:30:04,020
demo I mean that depends on you

711
00:30:04,020 --> 00:30:08,760
sure we've got time sir all right uh

712
00:30:08,760 --> 00:30:09,919
questions

713
00:30:09,919 --> 00:30:16,080
cream yep I'll just unslide and then go

714
00:30:16,080 --> 00:30:18,379
okay

715
00:30:23,700 --> 00:30:26,279
all right so I just recorded the video I

716
00:30:26,279 --> 00:30:27,899
want to be sure to not have problems and

717
00:30:27,899 --> 00:30:29,880
make it fast

718
00:30:29,880 --> 00:30:31,380
because we know how it goes right during

719
00:30:31,380 --> 00:30:33,480
demos

720
00:30:33,480 --> 00:30:37,320
in real time uh so yeah just a user with

721
00:30:37,320 --> 00:30:42,120
his mailbox uh uh just uh so getting his

722
00:30:42,120 --> 00:30:45,659
quotas uh he has nokutas for no defined

723
00:30:45,659 --> 00:30:47,340
the list is empty

724
00:30:47,340 --> 00:30:49,279
uh doing a good

725
00:30:49,279 --> 00:30:54,480
uh so checking with the uh just a web

726
00:30:54,480 --> 00:30:56,399
admin uh

727
00:30:56,399 --> 00:30:58,799
uh from the server side that there is no

728
00:30:58,799 --> 00:31:00,659
quota setup

729
00:31:00,659 --> 00:31:03,840
then we're gonna set the coton

730
00:31:03,840 --> 00:31:07,140
sorry this user yes can you probably

731
00:31:07,140 --> 00:31:09,240
Zoom it in your application because it's

732
00:31:09,240 --> 00:31:12,179
very hard to read here on the production

733
00:31:12,179 --> 00:31:13,679
is it

734
00:31:13,679 --> 00:31:16,620
uh uh I mean I'm sharing my old screen I

735
00:31:16,620 --> 00:31:20,039
don't know how it works okay so if it's

736
00:31:20,039 --> 00:31:21,539
a browser

737
00:31:21,539 --> 00:31:24,299
I don't know it's a video here sorry

738
00:31:24,299 --> 00:31:27,779
yeah uh yeah it's great it's clear it's

739
00:31:27,779 --> 00:31:29,280
clear on this one

740
00:31:29,280 --> 00:31:32,840
[Laughter]

741
00:31:32,840 --> 00:31:35,760
uh so yeah

742
00:31:35,760 --> 00:31:38,580
okay I continue so we just set up a cuta

743
00:31:38,580 --> 00:31:41,820
for that user and then uh then we check

744
00:31:41,820 --> 00:31:44,640
through the server the web admin there

745
00:31:44,640 --> 00:31:45,899
is

746
00:31:45,899 --> 00:31:48,779
uh then yeah we we do a Qatar get

747
00:31:48,779 --> 00:31:51,179
through J map again and so yeah we see

748
00:31:51,179 --> 00:31:54,179
that we set it up two cutas uh one with

749
00:31:54,179 --> 00:31:57,480
count in the account and one with uh

750
00:31:57,480 --> 00:32:00,200
octet

751
00:32:00,899 --> 00:32:04,100
on mail

752
00:32:04,200 --> 00:32:06,899
uh and then I just like send a quick

753
00:32:06,899 --> 00:32:09,480
clear mail to show that uh

754
00:32:09,480 --> 00:32:11,159
to myself to show that there is an

755
00:32:11,159 --> 00:32:16,700
update in the in the quota content size

756
00:32:17,700 --> 00:32:20,399
this is just quick

757
00:32:20,399 --> 00:32:23,120
but

758
00:32:29,220 --> 00:32:31,559
then yeah checking again and then we see

759
00:32:31,559 --> 00:32:35,460
that the Contour increased so

760
00:32:35,460 --> 00:32:36,500
yeah

761
00:32:36,500 --> 00:32:38,820
that's pretty much it

762
00:32:38,820 --> 00:32:40,320
would be good

763
00:32:40,320 --> 00:32:42,860
thanks

764
00:32:42,860 --> 00:32:46,200
uh and then that's pretty much

765
00:32:46,200 --> 00:32:51,419
it for good so after I I wanted to uh

766
00:32:51,419 --> 00:32:53,580
share something with identities but I

767
00:32:53,580 --> 00:32:56,520
don't know if you want to wait uh at the

768
00:32:56,520 --> 00:32:58,860
end yeah let's do it

769
00:32:58,860 --> 00:33:03,419
let's do it now okay yeah uh sure so uh

770
00:33:03,419 --> 00:33:06,360
regarding gemap identities uh when our

771
00:33:06,360 --> 00:33:08,520
front-end team uh started uh

772
00:33:08,520 --> 00:33:11,580
implementing uh the identities uh with

773
00:33:11,580 --> 00:33:13,700
their with the mobile application

774
00:33:13,700 --> 00:33:17,640
uh uh they ask us uh yeah we don't see

775
00:33:17,640 --> 00:33:18,779
uh

776
00:33:18,779 --> 00:33:21,480
anything to get the foot identity to

777
00:33:21,480 --> 00:33:23,519
show it like the users have multiple

778
00:33:23,519 --> 00:33:26,580
identities and after checking against

779
00:33:26,580 --> 00:33:28,620
the spec realized that Yes actually

780
00:33:28,620 --> 00:33:31,559
there is a nothing defined in jmap for

781
00:33:31,559 --> 00:33:32,360
that

782
00:33:32,360 --> 00:33:35,700
uh so we pulled it a little bit and uh

783
00:33:35,700 --> 00:33:38,640
what we think uh is just adding uh salt

784
00:33:38,640 --> 00:33:41,820
or the field uh like for the mailbox for

785
00:33:41,820 --> 00:33:44,700
example where uh I mean the lowest

786
00:33:44,700 --> 00:33:48,179
number would be uh your first identity

787
00:33:48,179 --> 00:33:50,220
so it would be the default one to show

788
00:33:50,220 --> 00:33:53,640
and then the higher it goes and you get

789
00:33:53,640 --> 00:33:56,220
the list of identity depending on the of

790
00:33:56,220 --> 00:33:58,700
the ore

791
00:33:58,700 --> 00:34:02,519
uh so uh so I mean that that would be

792
00:34:02,519 --> 00:34:07,580
the proposition uh uh we want to make

793
00:34:07,580 --> 00:34:10,859
I see some people have questions

794
00:34:10,859 --> 00:34:13,619
yeah just I actually didn't want to

795
00:34:13,619 --> 00:34:14,940
interrupt I just wanted to get in the

796
00:34:14,940 --> 00:34:16,139
queue but

797
00:34:16,139 --> 00:34:18,179
um yeah we also had a look at that and

798
00:34:18,179 --> 00:34:20,339
we also saw the same thing that there

799
00:34:20,339 --> 00:34:23,099
are okay a lot of systems that have a

800
00:34:23,099 --> 00:34:25,440
default signature

801
00:34:25,440 --> 00:34:27,359
um so actually we also came up with our

802
00:34:27,359 --> 00:34:30,060
own thing I'm gonna post it in the chat

803
00:34:30,060 --> 00:34:32,760
um oh sure okay yeah it's just an in

804
00:34:32,760 --> 00:34:34,639
that you know there's not nothing

805
00:34:34,639 --> 00:34:39,480
ITF it's just our own extension

806
00:34:39,480 --> 00:34:42,060
um we actually have identified signature

807
00:34:42,060 --> 00:34:43,859
name

808
00:34:43,859 --> 00:34:45,719
um that sometimes that's missing in the

809
00:34:45,719 --> 00:34:47,760
spec and there's also some systems have

810
00:34:47,760 --> 00:34:51,119
a default for new signature for a reply

811
00:34:51,119 --> 00:34:53,280
signature forward signature

812
00:34:53,280 --> 00:34:56,099
uh yeah just wanted to say that there

813
00:34:56,099 --> 00:34:57,300
are there are additional properties

814
00:34:57,300 --> 00:35:00,780
missing as well for some systems yeah

815
00:35:00,780 --> 00:35:03,060
could maybe discuss that more under this

816
00:35:03,060 --> 00:35:05,640
uh I mean we did as well have uh we do

817
00:35:05,640 --> 00:35:09,960
as well have a custom extension for

818
00:35:09,960 --> 00:35:14,579
that sort all the field extra property

819
00:35:14,579 --> 00:35:16,820
hmm

820
00:35:16,820 --> 00:35:20,300
thank you as well

821
00:35:22,140 --> 00:35:26,400
yes Neil yeah so just joining the I

822
00:35:26,400 --> 00:35:28,920
think saw order may not be the right way

823
00:35:28,920 --> 00:35:30,480
to do this because if

824
00:35:30,480 --> 00:35:32,520
okay if you have to order property that

825
00:35:32,520 --> 00:35:34,380
would imply to me that

826
00:35:34,380 --> 00:35:36,180
you expect me to be able to manually

827
00:35:36,180 --> 00:35:37,980
order these things

828
00:35:37,980 --> 00:35:41,280
I mean we can do that in your product

829
00:35:41,280 --> 00:35:43,079
but that would be surprising to me like

830
00:35:43,079 --> 00:35:45,000
I've not like I've seen lots of things

831
00:35:45,000 --> 00:35:46,380
let you drag and drop mailboxes around

832
00:35:46,380 --> 00:35:48,900
to to find a custom sort order but when

833
00:35:48,900 --> 00:35:50,579
you have a list of like things or

834
00:35:50,579 --> 00:35:52,440
identities generally they just sorted

835
00:35:52,440 --> 00:35:56,220
alphabetical or whatever by a client um

836
00:35:56,220 --> 00:35:57,960
so if you're not going to support that

837
00:35:57,960 --> 00:36:01,020
that seems adding I guess I mean

838
00:36:01,020 --> 00:36:03,140
I guess maybe the the the

839
00:36:03,140 --> 00:36:06,839
like the client who could want uh to

840
00:36:06,839 --> 00:36:09,180
have as a default Identity or something

841
00:36:09,180 --> 00:36:12,359
that is not alphabetically uh sorted you

842
00:36:12,359 --> 00:36:15,300
know or sure so but so specifying

843
00:36:15,300 --> 00:36:17,520
default is fine but that would just be

844
00:36:17,520 --> 00:36:18,839
like we were discussing with the

845
00:36:18,839 --> 00:36:20,400
calendar stuff like a single property as

846
00:36:20,400 --> 00:36:23,160
opposed to a sort of defect means that

847
00:36:23,160 --> 00:36:26,460
every single identity you have has some

848
00:36:26,460 --> 00:36:28,560
you know ordering that's strictly

849
00:36:28,560 --> 00:36:30,720
defined and that starts to quite context

850
00:36:30,720 --> 00:36:32,280
I think probably more than it's that's

851
00:36:32,280 --> 00:36:36,320
very important that's fair okay

852
00:36:37,619 --> 00:36:41,220
cool and yeah dkg go ahead

853
00:36:41,220 --> 00:36:43,859
uh hi there just wanted to

854
00:36:43,859 --> 00:36:46,619
um plus one the last two folks and sort

855
00:36:46,619 --> 00:36:48,780
of synthesize them a little bit there

856
00:36:48,780 --> 00:36:51,660
are potentials for multiple

857
00:36:51,660 --> 00:36:55,380
types of defaults right like the default

858
00:36:55,380 --> 00:36:58,440
for a particular reply I think was

859
00:36:58,440 --> 00:37:00,000
mentioned before but there's other like

860
00:37:00,000 --> 00:37:02,280
I might want a different default when

861
00:37:02,280 --> 00:37:05,160
I'm replying to a particular person

862
00:37:05,160 --> 00:37:07,079
um I mean they start to get a little bit

863
00:37:07,079 --> 00:37:08,760
fiddly and I'm not saying that you want

864
00:37:08,760 --> 00:37:10,920
to specify all of these things

865
00:37:10,920 --> 00:37:13,020
um but but but really what you want is

866
00:37:13,020 --> 00:37:15,540
you want default and non-default in a

867
00:37:15,540 --> 00:37:17,400
given context and so I think you could

868
00:37:17,400 --> 00:37:19,020
say here's the generic context if you

869
00:37:19,020 --> 00:37:20,400
don't know what context you're in here's

870
00:37:20,400 --> 00:37:22,859
the default specify that here it's just

871
00:37:22,859 --> 00:37:25,140
a flag and then that leaves room for

872
00:37:25,140 --> 00:37:26,760
somebody to say oh I want to fly I want

873
00:37:26,760 --> 00:37:28,140
to make a default for some other context

874
00:37:28,140 --> 00:37:29,820
they can figure out how to specify that

875
00:37:29,820 --> 00:37:31,740
in a separate document

876
00:37:31,740 --> 00:37:33,540
thanks for doing this work

877
00:37:33,540 --> 00:37:36,720
okay uh yeah that sounds interesting as

878
00:37:36,720 --> 00:37:37,560
well

879
00:37:37,560 --> 00:37:39,359
um I think just a flag for the default

880
00:37:39,359 --> 00:37:42,300
and I guess for the for just at least

881
00:37:42,300 --> 00:37:44,940
soldering it uh like Neil said could

882
00:37:44,940 --> 00:37:46,680
just be by alphabetical order for the

883
00:37:46,680 --> 00:37:49,520
rest or uh

884
00:37:50,900 --> 00:37:54,060
certainly has more complex ability to

885
00:37:54,060 --> 00:37:54,900
say

886
00:37:54,900 --> 00:37:56,579
um if you're in a particular folder to

887
00:37:56,579 --> 00:37:59,099
use particular identities or replying to

888
00:37:59,099 --> 00:38:00,900
particular people to select the identity

889
00:38:00,900 --> 00:38:03,240
that matches the address that you was

890
00:38:03,240 --> 00:38:05,280
sent to so if you're applying from a

891
00:38:05,280 --> 00:38:06,240
particular

892
00:38:06,240 --> 00:38:07,619
just something of a central particular

893
00:38:07,619 --> 00:38:10,680
address it goes back to that Neil

894
00:38:10,680 --> 00:38:11,359
yeah

895
00:38:11,359 --> 00:38:14,940
briefly say the reason I believe we

896
00:38:14,940 --> 00:38:18,420
didn't specify this in general mail this

897
00:38:18,420 --> 00:38:22,079
because it can get complex and different

898
00:38:22,079 --> 00:38:24,359
clients quite recently want might want

899
00:38:24,359 --> 00:38:26,339
to do different behaviors and so it was

900
00:38:26,339 --> 00:38:27,839
hard to specify something that really

901
00:38:27,839 --> 00:38:30,060
kind of would be universally in trouble

902
00:38:30,060 --> 00:38:32,640
for people okay yeah

903
00:38:32,640 --> 00:38:35,160
okay I get it it can be like different

904
00:38:35,160 --> 00:38:36,660
uh

905
00:38:36,660 --> 00:38:40,440
uh ways uh someone would use the the

906
00:38:40,440 --> 00:38:43,680
identities uh but I think maybe yeah

907
00:38:43,680 --> 00:38:45,599
just at least a flag

908
00:38:45,599 --> 00:38:47,760
saying like this is a default one like

909
00:38:47,760 --> 00:38:50,339
something simple uh then if you want to

910
00:38:50,339 --> 00:38:51,660
do something more complex maybe an

911
00:38:51,660 --> 00:38:55,400
extension I don't know uh

912
00:38:55,400 --> 00:38:58,140
we can

913
00:38:58,140 --> 00:38:59,700
I think it would have to be an extension

914
00:38:59,700 --> 00:39:01,260
anyway like you can't I don't think we

915
00:39:01,260 --> 00:39:02,700
can add this property as navrata it's

916
00:39:02,700 --> 00:39:05,899
not a okay okay

917
00:39:17,660 --> 00:39:19,800
I I didn't catch what this was mentioned

918
00:39:19,800 --> 00:39:23,460
or not but a very common case is uh in

919
00:39:23,460 --> 00:39:25,380
in the same organization in the same

920
00:39:25,380 --> 00:39:28,619
domain or outside where inside you might

921
00:39:28,619 --> 00:39:30,900
have you know an extension number listed

922
00:39:30,900 --> 00:39:32,280
and outside you might have a full phone

923
00:39:32,280 --> 00:39:35,339
number or something of that sort

924
00:39:35,339 --> 00:39:37,940
huh

925
00:39:38,460 --> 00:39:40,980
okay

926
00:39:40,980 --> 00:39:43,619
okay

927
00:39:43,619 --> 00:39:46,500
okay all right thank you what action are

928
00:39:46,500 --> 00:39:48,060
we looking at here do we take this to

929
00:39:48,060 --> 00:39:50,300
the mailing list to discuss

930
00:39:50,300 --> 00:39:53,599
what to do

931
00:39:53,700 --> 00:39:55,920
right I mean we can

932
00:39:55,920 --> 00:39:58,380
I think we can take it to the mailing

933
00:39:58,380 --> 00:40:00,540
lists uh

934
00:40:00,540 --> 00:40:03,119
sure is sorry I just wanted to mention

935
00:40:03,119 --> 00:40:06,420
one thing for for user as it is right

936
00:40:06,420 --> 00:40:08,940
now in jmap you you could just come up

937
00:40:08,940 --> 00:40:10,560
with your own extension right your own

938
00:40:10,560 --> 00:40:14,460
capability and then uh yeah do that um

939
00:40:14,460 --> 00:40:16,560
but yeah of course if there's interest

940
00:40:16,560 --> 00:40:18,119
that makes sort of I think it makes

941
00:40:18,119 --> 00:40:20,640
sense to discuss it in the IDF context

942
00:40:20,640 --> 00:40:22,560
to come up with a well-defined thing

943
00:40:22,560 --> 00:40:24,540
yeah just want to mention that

944
00:40:24,540 --> 00:40:27,920
possibility in case some people

945
00:40:30,960 --> 00:40:33,119
all right uh so do you want to start the

946
00:40:33,119 --> 00:40:35,339
discussion on the Middle Eastern Renee

947
00:40:35,339 --> 00:40:37,619
okay

948
00:40:37,619 --> 00:40:41,060
I will maybe send something to more

949
00:40:41,060 --> 00:40:43,440
in a minute for you

950
00:40:43,440 --> 00:40:46,800
all right uh thank you if no other

951
00:40:46,800 --> 00:40:49,800
questions and um that lives

952
00:40:49,800 --> 00:40:51,780
to sit to the next

953
00:40:51,780 --> 00:40:52,920
cool

954
00:40:52,920 --> 00:40:55,380
all right we'll connect on our agenda I

955
00:40:55,380 --> 00:40:59,900
believe is gemap for tasks

956
00:41:00,780 --> 00:41:02,579
you can come up to the front microphone

957
00:41:02,579 --> 00:41:05,060
if you like

958
00:41:07,320 --> 00:41:09,000
you can see the nice screen

959
00:41:09,000 --> 00:41:11,220
oh yeah and much nicer from seeing the

960
00:41:11,220 --> 00:41:12,960
other one we're doing we're doing great

961
00:41:12,960 --> 00:41:15,140
here

962
00:41:16,640 --> 00:41:18,720
but the microphones

963
00:41:18,720 --> 00:41:21,119
like this okay okay probably pick the

964
00:41:21,119 --> 00:41:24,480
microphone hey

965
00:41:25,140 --> 00:41:28,740
okay so tasks yeah

966
00:41:28,740 --> 00:41:32,220
um version five is the current version

967
00:41:32,220 --> 00:41:34,320
so next slide please

968
00:41:34,320 --> 00:41:37,200
I'm George Baum from odriga by the way

969
00:41:37,200 --> 00:41:40,920
um so yeah as a reminder like every time

970
00:41:40,920 --> 00:41:43,079
um the idea here for tasks is to make it

971
00:41:43,079 --> 00:41:46,020
a common standard not only for grouper

972
00:41:46,020 --> 00:41:48,720
systems focused on mail but also for

973
00:41:48,720 --> 00:41:51,240
kanban boards or issue trackers

974
00:41:51,240 --> 00:41:53,520
this is one of the core things we're

975
00:41:53,520 --> 00:41:56,400
working on but of course we also want to

976
00:41:56,400 --> 00:42:00,260
include grouper next slide please

977
00:42:00,900 --> 00:42:03,720
yeah so what's new in the newest version

978
00:42:03,720 --> 00:42:06,380
as I said before I

979
00:42:06,380 --> 00:42:08,700
tagged along with most changes in

980
00:42:08,700 --> 00:42:11,820
calendars then I worked in some feedback

981
00:42:11,820 --> 00:42:14,400
from the last ITF one of them was that

982
00:42:14,400 --> 00:42:17,700
estimated work should only mention the

983
00:42:17,700 --> 00:42:19,500
direction and not

984
00:42:19,500 --> 00:42:22,079
I don't know what did I have Fibonacci

985
00:42:22,079 --> 00:42:23,339
scale or something

986
00:42:23,339 --> 00:42:26,280
um so now it's only defined larger means

987
00:42:26,280 --> 00:42:28,500
more work for the estimated work

988
00:42:28,500 --> 00:42:31,800
property which is a property of a task

989
00:42:31,800 --> 00:42:33,599
another thing that was mentioned at last

990
00:42:33,599 --> 00:42:37,800
ITF was that there are

991
00:42:37,800 --> 00:42:41,160
now we the the tasks back now has a

992
00:42:41,160 --> 00:42:45,060
bunch of new extensions defined or or

993
00:42:45,060 --> 00:42:47,640
capabilities defined

994
00:42:47,640 --> 00:42:49,200
that's

995
00:42:49,200 --> 00:42:51,359
brexit or that's a bit different from

996
00:42:51,359 --> 00:42:52,800
from in this respect it's a bit

997
00:42:52,800 --> 00:42:55,260
different from jmap calendar

998
00:42:55,260 --> 00:42:55,800
um

999
00:42:55,800 --> 00:42:58,680
so we have a bunch of groups

1000
00:42:58,680 --> 00:43:00,780
um for

1001
00:43:00,780 --> 00:43:03,960
use cases that are using a common

1002
00:43:03,960 --> 00:43:06,660
feature set and basically the ideas that

1003
00:43:06,660 --> 00:43:09,420
implementers can then choose which group

1004
00:43:09,420 --> 00:43:11,420
they want to implement

1005
00:43:11,420 --> 00:43:15,540
and last ITF there it came up that there

1006
00:43:15,540 --> 00:43:16,940
was some some

1007
00:43:16,940 --> 00:43:19,020
clarification needed so now the text

1008
00:43:19,020 --> 00:43:21,420
also includes

1009
00:43:21,420 --> 00:43:24,440
um it or mentions that in case

1010
00:43:24,440 --> 00:43:26,839
a capability

1011
00:43:26,839 --> 00:43:29,280
what happens when a client is using an

1012
00:43:29,280 --> 00:43:31,140
unsupported capability

1013
00:43:31,140 --> 00:43:34,200
then the server should throw an unknown

1014
00:43:34,200 --> 00:43:36,300
capability errors or it's just as it's

1015
00:43:36,300 --> 00:43:38,819
defined in the in the jmap calls back

1016
00:43:38,819 --> 00:43:40,920
already it's just mentioned again in

1017
00:43:40,920 --> 00:43:42,480
this spec

1018
00:43:42,480 --> 00:43:43,079
um

1019
00:43:43,079 --> 00:43:47,839
yeah and what happens if a client uses

1020
00:43:47,839 --> 00:43:50,040
extensions that the server doesn't

1021
00:43:50,040 --> 00:43:53,339
understand in this case the server

1022
00:43:53,339 --> 00:43:55,579
should store those

1023
00:43:55,579 --> 00:43:58,380
properties and just ignore them that's

1024
00:43:58,380 --> 00:44:02,880
yeah how I extended the spec

1025
00:44:02,880 --> 00:44:05,960
or that's I clarify that in respect okay

1026
00:44:05,960 --> 00:44:09,060
next slide please

1027
00:44:09,060 --> 00:44:11,880
so one thing I want to discuss about

1028
00:44:11,880 --> 00:44:15,119
today is what could be new in Jama for

1029
00:44:15,119 --> 00:44:17,099
tasks version 6.

1030
00:44:17,099 --> 00:44:21,240
um here you can see a task from Trello

1031
00:44:21,240 --> 00:44:24,060
um and it contains actually two

1032
00:44:24,060 --> 00:44:26,640
checklists that are inside this task

1033
00:44:26,640 --> 00:44:29,220
uh one checklist is called keep in mind

1034
00:44:29,220 --> 00:44:31,079
and then you see two checklist items

1035
00:44:31,079 --> 00:44:34,079
that are not done yet and the other one

1036
00:44:34,079 --> 00:44:37,980
is another checklist with two other

1037
00:44:37,980 --> 00:44:40,740
check those items here so you there are

1038
00:44:40,740 --> 00:44:42,960
actually systems where you can have this

1039
00:44:42,960 --> 00:44:45,900
as a feature and actually widely used

1040
00:44:45,900 --> 00:44:50,119
systems next slide please

1041
00:44:50,339 --> 00:44:53,160
yeah so it would be nice to have that

1042
00:44:53,160 --> 00:44:55,740
also in general tasks

1043
00:44:55,740 --> 00:44:58,380
um we see that in Google workspace

1044
00:44:58,380 --> 00:45:00,839
Microsoft to do planner Factor click up

1045
00:45:00,839 --> 00:45:03,720
a lot of systems use checklists

1046
00:45:03,720 --> 00:45:05,540
not a lot of views

1047
00:45:05,540 --> 00:45:08,460
multiple named checklists assigned to a

1048
00:45:08,460 --> 00:45:11,700
single task so as I here I have the

1049
00:45:11,700 --> 00:45:13,380
observed features

1050
00:45:13,380 --> 00:45:14,280
um

1051
00:45:14,280 --> 00:45:17,480
in those systems

1052
00:45:17,780 --> 00:45:20,760
for now I only found those that feature

1053
00:45:20,760 --> 00:45:22,980
within Trello but Trello is an important

1054
00:45:22,980 --> 00:45:25,980
server

1055
00:45:26,099 --> 00:45:26,700
um

1056
00:45:26,700 --> 00:45:31,140
most most systems have a title for

1057
00:45:31,140 --> 00:45:32,359
checklists

1058
00:45:32,359 --> 00:45:36,020
or that's actually a checklist item

1059
00:45:36,020 --> 00:45:38,420
that has a title

1060
00:45:38,420 --> 00:45:40,980
or all I'll check this items have a

1061
00:45:40,980 --> 00:45:42,599
title actually so all Checkers items

1062
00:45:42,599 --> 00:45:44,400
have a simple done or not done State

1063
00:45:44,400 --> 00:45:47,160
there's a position last modified stamp

1064
00:45:47,160 --> 00:45:49,140
that's only visible in the UI usually

1065
00:45:49,140 --> 00:45:53,099
and an sine is also sometimes used so we

1066
00:45:53,099 --> 00:45:54,900
have a bunch of features

1067
00:45:54,900 --> 00:45:58,500
for this functionality that are

1068
00:45:58,500 --> 00:46:02,099
very common common or not so common but

1069
00:46:02,099 --> 00:46:05,780
still important next slide please

1070
00:46:06,660 --> 00:46:09,900
so the question here is how to

1071
00:46:09,900 --> 00:46:12,420
actually support that

1072
00:46:12,420 --> 00:46:15,660
um here is an example how to do that in

1073
00:46:15,660 --> 00:46:18,720
I calendar somehow

1074
00:46:18,720 --> 00:46:19,440
um

1075
00:46:19,440 --> 00:46:21,780
this is from feedback that we got from

1076
00:46:21,780 --> 00:46:24,480
one of the task list the task system

1077
00:46:24,480 --> 00:46:25,980
vendors so

1078
00:46:25,980 --> 00:46:29,040
on the left side we see the first

1079
00:46:29,040 --> 00:46:32,099
vehicle in the item which is basically a

1080
00:46:32,099 --> 00:46:33,660
checklist

1081
00:46:33,660 --> 00:46:38,640
um that is in relation to another

1082
00:46:38,640 --> 00:46:39,359
um

1083
00:46:39,359 --> 00:46:41,220
another task

1084
00:46:41,220 --> 00:46:43,500
uh another oh sorry it's not a v event

1085
00:46:43,500 --> 00:46:46,800
that's my mistake it's a v to do

1086
00:46:46,800 --> 00:46:47,520
um

1087
00:46:47,520 --> 00:46:50,180
that's in relation to another to-do item

1088
00:46:50,180 --> 00:46:54,180
which is a checklist item so what you

1089
00:46:54,180 --> 00:46:56,220
can use in iconetter right now is to

1090
00:46:56,220 --> 00:46:58,740
have related to basically and then you

1091
00:46:58,740 --> 00:47:01,200
have the checklist

1092
00:47:01,200 --> 00:47:04,500
as a special kind of task that is

1093
00:47:04,500 --> 00:47:06,319
actually a folder

1094
00:47:06,319 --> 00:47:11,700
that's related to much simpler tasks in

1095
00:47:11,700 --> 00:47:14,579
a parent-child relationship

1096
00:47:14,579 --> 00:47:15,560
okay

1097
00:47:15,560 --> 00:47:18,960
the question is can we do better than or

1098
00:47:18,960 --> 00:47:21,240
as and also there's this X type thing

1099
00:47:21,240 --> 00:47:24,900
that also defines is it a checklist or

1100
00:47:24,900 --> 00:47:26,400
not

1101
00:47:26,400 --> 00:47:27,660
um so the questions can we do better

1102
00:47:27,660 --> 00:47:30,660
than that and basically the idea here is

1103
00:47:30,660 --> 00:47:32,819
to find out how do we do that in jmap

1104
00:47:32,819 --> 00:47:34,440
tasks if you have some opinions on that

1105
00:47:34,440 --> 00:47:37,280
so next slide please

1106
00:47:38,599 --> 00:47:42,180
so my first proposal is to

1107
00:47:42,180 --> 00:47:44,700
since checklists are so simple basically

1108
00:47:44,700 --> 00:47:47,280
and check items are also very simple we

1109
00:47:47,280 --> 00:47:48,300
could just

1110
00:47:48,300 --> 00:47:49,859
have a

1111
00:47:49,859 --> 00:47:52,380
tasks on the right hand side

1112
00:47:52,380 --> 00:47:55,500
um and we could just say a task can also

1113
00:47:55,500 --> 00:47:58,260
contain most one or more checklists

1114
00:47:58,260 --> 00:48:00,839
basically which is an own object

1115
00:48:00,839 --> 00:48:04,079
and this checklist can then contain all

1116
00:48:04,079 --> 00:48:06,420
objects on itself on its own which are

1117
00:48:06,420 --> 00:48:09,420
check items and so both of them are very

1118
00:48:09,420 --> 00:48:11,040
simple objects

1119
00:48:11,040 --> 00:48:14,400
and the task can have those inside the

1120
00:48:14,400 --> 00:48:17,220
checklist property basically

1121
00:48:17,220 --> 00:48:19,579
first

1122
00:48:19,579 --> 00:48:22,500
suggestions or you can see there's a

1123
00:48:22,500 --> 00:48:23,640
task

1124
00:48:23,640 --> 00:48:25,619
has a checklist with the title this is a

1125
00:48:25,619 --> 00:48:27,780
checklist and has a one check item with

1126
00:48:27,780 --> 00:48:30,300
this is an item on the checklist

1127
00:48:30,300 --> 00:48:31,980
next slide please I have another one

1128
00:48:31,980 --> 00:48:34,940
another proposal

1129
00:48:35,160 --> 00:48:38,760
very good yeah so this is basically to

1130
00:48:38,760 --> 00:48:41,480
model it somehow like I calendar already

1131
00:48:41,480 --> 00:48:43,980
like it's somewhere already possibly

1132
00:48:43,980 --> 00:48:46,500
with an iCloud Calendar just use the

1133
00:48:46,500 --> 00:48:51,060
relation deal related to field and uh in

1134
00:48:51,060 --> 00:48:53,700
this case I add I added a new relation

1135
00:48:53,700 --> 00:48:56,520
type which is like a checklist child or

1136
00:48:56,520 --> 00:48:58,800
a checklist parent or a check item

1137
00:48:58,800 --> 00:49:01,260
parent check item child

1138
00:49:01,260 --> 00:49:03,000
um to the relation

1139
00:49:03,000 --> 00:49:04,619
um so on the left hand side you see a

1140
00:49:04,619 --> 00:49:06,180
task in the middle you see a checklist

1141
00:49:06,180 --> 00:49:08,700
and on the right hand side you can see a

1142
00:49:08,700 --> 00:49:10,760
checklist item

1143
00:49:10,760 --> 00:49:12,480
yeah

1144
00:49:12,480 --> 00:49:14,339
so that's like basically the second

1145
00:49:14,339 --> 00:49:16,140
proposal

1146
00:49:16,140 --> 00:49:17,400
um

1147
00:49:17,400 --> 00:49:20,339
yeah I also there's also an alternative

1148
00:49:20,339 --> 00:49:22,740
that you could add another

1149
00:49:22,740 --> 00:49:26,220
add type maybe as well so it's not just

1150
00:49:26,220 --> 00:49:28,980
a simple task then it's it's the whole

1151
00:49:28,980 --> 00:49:32,520
the whole task object then gets uh

1152
00:49:32,520 --> 00:49:36,180
checklist object as an as a type or a

1153
00:49:36,180 --> 00:49:39,359
checklist item object as a type just

1154
00:49:39,359 --> 00:49:42,060
yeah but I'm not sure about this idea

1155
00:49:42,060 --> 00:49:44,280
just put it on there so next slide

1156
00:49:44,280 --> 00:49:46,740
please now the question

1157
00:49:46,740 --> 00:49:48,660
do you have any preference between those

1158
00:49:48,660 --> 00:49:50,579
two things I hope

1159
00:49:50,579 --> 00:49:53,660
you were able to follow

1160
00:49:55,079 --> 00:49:56,280
um

1161
00:49:56,280 --> 00:49:59,420
if not okay

1162
00:50:01,619 --> 00:50:06,000
so I I haven't Robert said but I haven't

1163
00:50:06,000 --> 00:50:09,359
given much thought on which which of

1164
00:50:09,359 --> 00:50:11,640
either I would prefer uh because I

1165
00:50:11,640 --> 00:50:12,359
haven't

1166
00:50:12,359 --> 00:50:13,500
um

1167
00:50:13,500 --> 00:50:16,859
um thought through the use case fully

1168
00:50:16,859 --> 00:50:20,160
yet but for the this example with the

1169
00:50:20,160 --> 00:50:24,180
list I want so I wonder like if it's

1170
00:50:24,180 --> 00:50:26,700
already a list why is there a sort order

1171
00:50:26,700 --> 00:50:28,079
property

1172
00:50:28,079 --> 00:50:30,300
and it's the list

1173
00:50:30,300 --> 00:50:33,240
rather than this

1174
00:50:33,240 --> 00:50:35,520
idiom that we typically use in chain map

1175
00:50:35,520 --> 00:50:40,680
like a map of ID to something

1176
00:50:40,680 --> 00:50:44,779
um was that on purpose not chosen here

1177
00:50:45,560 --> 00:50:47,819
well I don't know I think it's a bit

1178
00:50:47,819 --> 00:50:50,480
simpler if it's just a simple

1179
00:50:50,480 --> 00:50:52,079
list

1180
00:50:52,079 --> 00:50:54,720
so um there can be good reasons why to

1181
00:50:54,720 --> 00:50:56,160
use Listia I just wanted to understand

1182
00:50:56,160 --> 00:50:59,640
if if that was a deliberate Choice

1183
00:50:59,640 --> 00:51:03,540
um using this more this key value

1184
00:51:03,540 --> 00:51:06,780
um idiom that we use allows for simpler

1185
00:51:06,780 --> 00:51:09,599
patching basically so like removing uh

1186
00:51:09,599 --> 00:51:11,400
or adding stuff because you don't have

1187
00:51:11,400 --> 00:51:13,980
to send the full list again oh yeah um

1188
00:51:13,980 --> 00:51:15,780
well that makes sense yeah that's a good

1189
00:51:15,780 --> 00:51:17,339
suggestion if you want to preserve the

1190
00:51:17,339 --> 00:51:18,599
order

1191
00:51:18,599 --> 00:51:21,599
then in the list then I think the sort

1192
00:51:21,599 --> 00:51:25,079
order property would um wouldn't be of

1193
00:51:25,079 --> 00:51:27,599
use anymore right so

1194
00:51:27,599 --> 00:51:28,800
yeah

1195
00:51:28,800 --> 00:51:32,700
yeah but as I said in so in terms of

1196
00:51:32,700 --> 00:51:35,760
preference the second uh proposal

1197
00:51:35,760 --> 00:51:37,559
um looked more

1198
00:51:37,559 --> 00:51:40,440
familiar to me in terms of how other

1199
00:51:40,440 --> 00:51:44,220
types are specified in in jmap objects

1200
00:51:44,220 --> 00:51:46,680
but um as I said that can be very well

1201
00:51:46,680 --> 00:51:49,200
reasons to do it like this um okay

1202
00:51:49,200 --> 00:51:53,040
that's nice feedback thank you very much

1203
00:51:53,040 --> 00:51:55,079
foreign

1204
00:51:55,079 --> 00:51:57,599
so Jim Fenton is participant

1205
00:51:57,599 --> 00:52:00,780
um less about the representation of

1206
00:52:00,780 --> 00:52:02,460
multiple checklists but more about how

1207
00:52:02,460 --> 00:52:04,619
they're going to be handled as a under

1208
00:52:04,619 --> 00:52:06,540
if I understood the introduction

1209
00:52:06,540 --> 00:52:09,359
properly there are some clients that

1210
00:52:09,359 --> 00:52:11,339
support multiple checklists and others

1211
00:52:11,339 --> 00:52:13,800
that do not

1212
00:52:13,800 --> 00:52:16,200
all I was talking mainly about the

1213
00:52:16,200 --> 00:52:19,020
service server software um

1214
00:52:19,020 --> 00:52:23,640
didn't try to use clients with a Trello

1215
00:52:23,640 --> 00:52:26,940
right so right but but yeah they have an

1216
00:52:26,940 --> 00:52:29,940
API as well yeah so yeah but but we we

1217
00:52:29,940 --> 00:52:32,640
need to consider in terms of the server

1218
00:52:32,640 --> 00:52:34,500
capabilities need to consider what the

1219
00:52:34,500 --> 00:52:38,220
what the clients can render yes and

1220
00:52:38,220 --> 00:52:39,839
definitely so if you have a client that

1221
00:52:39,839 --> 00:52:41,700
only that does not support multiple

1222
00:52:41,700 --> 00:52:44,400
checklists yeah do we have a way of

1223
00:52:44,400 --> 00:52:47,280
determining the client capabilities and

1224
00:52:47,280 --> 00:52:49,740
somehow handling that or does do like

1225
00:52:49,740 --> 00:52:52,380
the the second and subsequent checklists

1226
00:52:52,380 --> 00:52:55,079
just disappear or or what I mean that

1227
00:52:55,079 --> 00:52:56,819
that would seem to be bad it would be

1228
00:52:56,819 --> 00:52:58,680
better if you could even take them

1229
00:52:58,680 --> 00:53:01,319
multiple checklists and and merge them

1230
00:53:01,319 --> 00:53:04,380
together somehow for representation if

1231
00:53:04,380 --> 00:53:06,000
the client doesn't have that capability

1232
00:53:06,000 --> 00:53:08,760
you don't want to just lose the lose the

1233
00:53:08,760 --> 00:53:11,460
other checklists yeah that makes sense

1234
00:53:11,460 --> 00:53:13,559
well that I would say that's up to the

1235
00:53:13,559 --> 00:53:16,859
client how to how to handle that and

1236
00:53:16,859 --> 00:53:19,920
yeah so yeah I'm I'm not clear on

1237
00:53:19,920 --> 00:53:21,540
whether that's a client responsibility

1238
00:53:21,540 --> 00:53:24,480
or or a server response you know you

1239
00:53:24,480 --> 00:53:26,640
could kind of think of it as a an

1240
00:53:26,640 --> 00:53:29,280
interoperability capability to

1241
00:53:29,280 --> 00:53:31,440
interoperate between clients that do and

1242
00:53:31,440 --> 00:53:35,780
do not support multiple checklists

1243
00:53:36,119 --> 00:53:37,559
I think

1244
00:53:37,559 --> 00:53:40,800
the question here is how fine-grained we

1245
00:53:40,800 --> 00:53:42,300
want this

1246
00:53:42,300 --> 00:53:45,000
capability mechan but okay what we could

1247
00:53:45,000 --> 00:53:47,940
do maybe is have uh

1248
00:53:47,940 --> 00:53:50,579
like like a flag of the capability to

1249
00:53:50,579 --> 00:53:53,099
say oh I'm a server and I'm using

1250
00:53:53,099 --> 00:53:55,440
multiple checklists by the way so

1251
00:53:55,440 --> 00:53:57,599
please

1252
00:53:57,599 --> 00:53:58,200
um

1253
00:53:58,200 --> 00:54:00,119
make sure make sure you handle this

1254
00:54:00,119 --> 00:54:02,819
somehow this is what I can imagine here

1255
00:54:02,819 --> 00:54:04,440
in this scenario

1256
00:54:04,440 --> 00:54:07,339
and then the client sees that

1257
00:54:07,339 --> 00:54:10,380
that flag and then says okay

1258
00:54:10,380 --> 00:54:13,740
or or does the client have uh okay

1259
00:54:13,740 --> 00:54:16,500
advertise its capabilities and if it

1260
00:54:16,500 --> 00:54:18,059
doesn't say that it supports multiple

1261
00:54:18,059 --> 00:54:20,160
checklists then you know we do something

1262
00:54:20,160 --> 00:54:22,559
magical in terms of not trying to uh

1263
00:54:22,559 --> 00:54:25,319
force that on them

1264
00:54:25,319 --> 00:54:27,558
foreign

1265
00:54:36,500 --> 00:54:41,540
but yeah it's a valid point definitely

1266
00:54:45,420 --> 00:54:47,700
Robert stapping again

1267
00:54:47,700 --> 00:54:49,559
um the other thing I was wondering about

1268
00:54:49,559 --> 00:54:53,040
is are the assignee and is complete

1269
00:54:53,040 --> 00:54:54,300
properties

1270
00:54:54,300 --> 00:54:57,000
um in your proposes

1271
00:54:57,000 --> 00:55:00,240
um so what's the difference between an

1272
00:55:00,240 --> 00:55:03,020
assignee uh and a

1273
00:55:03,020 --> 00:55:06,000
participant that already is defined for

1274
00:55:06,000 --> 00:55:08,700
tasks it's just yeah that's the thing

1275
00:55:08,700 --> 00:55:11,099
like a checklist item would then be much

1276
00:55:11,099 --> 00:55:14,220
simpler right so I try to keep it

1277
00:55:14,220 --> 00:55:16,559
as simple as possible in this checklist

1278
00:55:16,559 --> 00:55:18,059
item

1279
00:55:18,059 --> 00:55:21,359
um to not pull in the whole complexity

1280
00:55:21,359 --> 00:55:23,040
of

1281
00:55:23,040 --> 00:55:27,000
big blown task basically so

1282
00:55:27,000 --> 00:55:28,140
yeah

1283
00:55:28,140 --> 00:55:29,760
um well it's just much simpler the

1284
00:55:29,760 --> 00:55:33,119
assignee is just a user I uh

1285
00:55:33,119 --> 00:55:35,579
user ID actually needs to be a

1286
00:55:35,579 --> 00:55:38,040
participant then right yeah you're right

1287
00:55:38,040 --> 00:55:40,920
that's or it's a

1288
00:55:40,920 --> 00:55:42,319
yeah

1289
00:55:42,319 --> 00:55:44,460
anyway the goal is to make it much

1290
00:55:44,460 --> 00:55:47,160
simpler it's not perfectly written down

1291
00:55:47,160 --> 00:55:49,079
yet I didn't put it in the spec yet it's

1292
00:55:49,079 --> 00:55:50,460
it's uh

1293
00:55:50,460 --> 00:55:53,280
yeah try to gather some feedback on how

1294
00:55:53,280 --> 00:55:54,900
I approached it so on the on the left

1295
00:55:54,900 --> 00:55:56,940
hand side I'm not sure if I actually

1296
00:55:56,940 --> 00:55:58,740
explained that well

1297
00:55:58,740 --> 00:55:59,579
um

1298
00:55:59,579 --> 00:56:00,900
each

1299
00:56:00,900 --> 00:56:03,900
the task the checklist to check this

1300
00:56:03,900 --> 00:56:05,819
item it's it's each a full-blown task

1301
00:56:05,819 --> 00:56:07,920
basically you know the big difference is

1302
00:56:07,920 --> 00:56:09,960
the relation between them and on the

1303
00:56:09,960 --> 00:56:12,839
right hand side uh the checklist item is

1304
00:56:12,839 --> 00:56:15,540
much simpler it's not a full-blown task

1305
00:56:15,540 --> 00:56:17,160
you cannot do all the things with it

1306
00:56:17,160 --> 00:56:18,960
that you can do with a task

1307
00:56:18,960 --> 00:56:21,420
you know that's the and typically that's

1308
00:56:21,420 --> 00:56:23,280
how it's implemented and you don't want

1309
00:56:23,280 --> 00:56:25,800
all the features of a normal task in a

1310
00:56:25,800 --> 00:56:27,540
checklist

1311
00:56:27,540 --> 00:56:29,400
yeah that's that's one of the main

1312
00:56:29,400 --> 00:56:31,260
differences here right hand side much

1313
00:56:31,260 --> 00:56:35,160
simpler left hand side full complexity

1314
00:56:35,160 --> 00:56:36,960
so that's why the assignee also is

1315
00:56:36,960 --> 00:56:38,819
different and the is complete is also

1316
00:56:38,819 --> 00:56:40,800
different it's just a Boolean it's not a

1317
00:56:40,800 --> 00:56:42,000
progress

1318
00:56:42,000 --> 00:56:45,720
yeah so um I'm biased obviously I would

1319
00:56:45,720 --> 00:56:47,880
think that um the left hand side so

1320
00:56:47,880 --> 00:56:49,619
using a full plan task

1321
00:56:49,619 --> 00:56:50,700
um

1322
00:56:50,700 --> 00:56:52,980
would allow for all of that that you

1323
00:56:52,980 --> 00:56:55,940
want to achieve with checklist minus the

1324
00:56:55,940 --> 00:57:00,359
uh Simplicity or ease of implementation

1325
00:57:00,359 --> 00:57:02,880
um but probably there is a middle ground

1326
00:57:02,880 --> 00:57:03,960
where

1327
00:57:03,960 --> 00:57:06,839
um one can Define what parts of the

1328
00:57:06,839 --> 00:57:08,819
scheduling

1329
00:57:08,819 --> 00:57:13,260
of a task must be implemented for uh to

1330
00:57:13,260 --> 00:57:15,359
achieve checklist for example so maybe

1331
00:57:15,359 --> 00:57:18,059
one could still use the the already

1332
00:57:18,059 --> 00:57:22,559
defined scheduling properties and um

1333
00:57:22,559 --> 00:57:25,079
just not require applications to

1334
00:57:25,079 --> 00:57:27,119
implement all of scheduling if I

1335
00:57:27,119 --> 00:57:29,520
understand this that this might be too

1336
00:57:29,520 --> 00:57:30,599
much

1337
00:57:30,599 --> 00:57:33,680
for some applications

1338
00:57:33,960 --> 00:57:35,700
I mean yeah I mean if you already

1339
00:57:35,700 --> 00:57:38,160
Implement scheduling for normal tasks

1340
00:57:38,160 --> 00:57:40,980
and you should not be far away from it

1341
00:57:40,980 --> 00:57:43,559
from using it for check items as well

1342
00:57:43,559 --> 00:57:45,780
that's my thoughts yeah there's a

1343
00:57:45,780 --> 00:57:48,599
capability that you can say I have the

1344
00:57:48,599 --> 00:57:49,559
scheduling

1345
00:57:49,559 --> 00:57:51,839
I support scheduling or I don't that's

1346
00:57:51,839 --> 00:57:54,780
already in the tasks back

1347
00:57:54,780 --> 00:57:57,180
um yeah I understood that you might that

1348
00:57:57,180 --> 00:57:59,579
you might want to support checklists

1349
00:57:59,579 --> 00:58:03,960
with the signees for applications that

1350
00:58:03,960 --> 00:58:06,240
that do not Implement scheduling but

1351
00:58:06,240 --> 00:58:09,180
still would like to assign checklist

1352
00:58:09,180 --> 00:58:11,940
tasks to to someone

1353
00:58:11,940 --> 00:58:13,380
for example yeah

1354
00:58:13,380 --> 00:58:16,380
yeah okay

1355
00:58:18,900 --> 00:58:20,700
this is santiarc

1356
00:58:20,700 --> 00:58:21,660
um

1357
00:58:21,660 --> 00:58:24,480
two Jim's uh question

1358
00:58:24,480 --> 00:58:26,460
um I think actually the Trello case was

1359
00:58:26,460 --> 00:58:28,920
a multiple checklist seems to be like

1360
00:58:28,920 --> 00:58:31,200
yours at a little bit of a particular

1361
00:58:31,200 --> 00:58:33,240
special case within those supporting

1362
00:58:33,240 --> 00:58:35,819
checklists at all

1363
00:58:35,819 --> 00:58:37,680
um I probably personally not over

1364
00:58:37,680 --> 00:58:40,020
engineered here in that extent so I

1365
00:58:40,020 --> 00:58:41,579
don't think we necessarily need to have

1366
00:58:41,579 --> 00:58:42,960
a capability or something like that in

1367
00:58:42,960 --> 00:58:44,819
the standard I think what you need to

1368
00:58:44,819 --> 00:58:46,079
consider a little bit we are typically

1369
00:58:46,079 --> 00:58:47,819
coming as Rodrigo from the portability

1370
00:58:47,819 --> 00:58:50,339
side so we see this also as in

1371
00:58:50,339 --> 00:58:52,260
from the data format as an exchange

1372
00:58:52,260 --> 00:58:54,240
format that you can use to import export

1373
00:58:54,240 --> 00:58:55,680
data from different systems so

1374
00:58:55,680 --> 00:58:57,540
interoperability

1375
00:58:57,540 --> 00:58:58,859
um between different systems is

1376
00:58:58,859 --> 00:59:00,839
obviously something you can also later

1377
00:59:00,839 --> 00:59:02,700
on the news with that what is actually

1378
00:59:02,700 --> 00:59:05,280
where is initially coming from

1379
00:59:05,280 --> 00:59:06,900
um so we sometimes might have a slightly

1380
00:59:06,900 --> 00:59:08,339
different perspective where we think

1381
00:59:08,339 --> 00:59:09,420
about

1382
00:59:09,420 --> 00:59:11,520
um I would then see this as an issue for

1383
00:59:11,520 --> 00:59:13,079
the client so if you are a client

1384
00:59:13,079 --> 00:59:15,420
supporting checklists and suspect states

1385
00:59:15,420 --> 00:59:17,579
there can be two checklists either you

1386
00:59:17,579 --> 00:59:19,619
extend your product or you write a

1387
00:59:19,619 --> 00:59:21,839
message to the user how it works I would

1388
00:59:21,839 --> 00:59:23,339
say I mean this is then maybe a little

1389
00:59:23,339 --> 00:59:25,740
inconvenient what would happen in our

1390
00:59:25,740 --> 00:59:28,020
portability case typically is you know

1391
00:59:28,020 --> 00:59:30,059
we are even a third party usually in the

1392
00:59:30,059 --> 00:59:31,619
middle so we have said very often that

1393
00:59:31,619 --> 00:59:33,180
we migrate from systems that support

1394
00:59:33,180 --> 00:59:35,339
whatever infinite number of phone

1395
00:59:35,339 --> 00:59:37,020
numbers whereas many systems only

1396
00:59:37,020 --> 00:59:39,059
support three of them or something like

1397
00:59:39,059 --> 00:59:40,440
that

1398
00:59:40,440 --> 00:59:41,700
um and then we do something like you

1399
00:59:41,700 --> 00:59:43,260
suggested we merge it together or

1400
00:59:43,260 --> 00:59:45,660
something like that so but this is

1401
00:59:45,660 --> 00:59:47,280
nothing that strictly I think needs to

1402
00:59:47,280 --> 00:59:49,260
be within the spec it's it's up to the

1403
00:59:49,260 --> 00:59:51,480
import export mechanism at stage stage

1404
00:59:51,480 --> 00:59:54,780
okay that was to Jim

1405
00:59:54,780 --> 00:59:57,420
um to that slide yours just one or two

1406
00:59:57,420 --> 00:59:58,740
short comments so first of all I think

1407
00:59:58,740 --> 01:00:00,480
it's necessary to have definitely a

1408
01:00:00,480 --> 01:00:01,859
checklist type in a way because

1409
01:00:01,859 --> 01:00:04,799
otherwise client might be tempted to add

1410
01:00:04,799 --> 01:00:06,660
properties for tasks which are not

1411
01:00:06,660 --> 01:00:08,960
actually for checklists

1412
01:00:08,960 --> 01:00:12,480
tasks dedicated I'm sorry and with

1413
01:00:12,480 --> 01:00:14,880
respect to if to reference it or if to

1414
01:00:14,880 --> 01:00:18,059
group it within one item

1415
01:00:18,059 --> 01:00:21,540
um probably not a strong opinion but

1416
01:00:21,540 --> 01:00:24,180
um the problem I see with references

1417
01:00:24,180 --> 01:00:25,980
sometimes is that in order to put it

1418
01:00:25,980 --> 01:00:27,480
together as a client you need to have

1419
01:00:27,480 --> 01:00:29,280
more or less a full list from the server

1420
01:00:29,280 --> 01:00:30,540
in order to make sure you have all the

1421
01:00:30,540 --> 01:00:32,220
items returned and find your references

1422
01:00:32,220 --> 01:00:34,380
within it so that's a similar thing

1423
01:00:34,380 --> 01:00:36,780
sometimes in a calendaring when you have

1424
01:00:36,780 --> 01:00:38,760
modified events and so on in the Stream

1425
01:00:38,760 --> 01:00:41,339
of all instances so that's sometimes a

1426
01:00:41,339 --> 01:00:42,839
little bit tedious from a client side

1427
01:00:42,839 --> 01:00:46,260
I'm not sure if the jmap batch API would

1428
01:00:46,260 --> 01:00:49,020
support for instance currently to

1429
01:00:49,020 --> 01:00:51,660
retrieve something like a task and its

1430
01:00:51,660 --> 01:00:53,280
related items that would be an

1431
01:00:53,280 --> 01:00:55,380
interesting question to people that know

1432
01:00:55,380 --> 01:01:01,160
more about the nested gmf stuff here

1433
01:01:03,900 --> 01:01:05,460
okay thank you

1434
01:01:05,460 --> 01:01:07,380
next on this list

1435
01:01:07,380 --> 01:01:08,700
um so yeah

1436
01:01:08,700 --> 01:01:10,859
what we've done for similar types of

1437
01:01:10,859 --> 01:01:12,299
things I think this came up in JS

1438
01:01:12,299 --> 01:01:14,160
contact for the names as well if you

1439
01:01:14,160 --> 01:01:15,240
don't know what all the different parts

1440
01:01:15,240 --> 01:01:18,059
are there's still an array of items kind

1441
01:01:18,059 --> 01:01:20,220
of in order and it seems to find us as

1442
01:01:20,220 --> 01:01:21,960
what they are

1443
01:01:21,960 --> 01:01:25,500
the the idea of again having if if you

1444
01:01:25,500 --> 01:01:26,819
have multiple checklists in a single

1445
01:01:26,819 --> 01:01:28,319
document having this a single list of

1446
01:01:28,319 --> 01:01:30,599
check items with a grouping

1447
01:01:30,599 --> 01:01:32,280
information with them allows a client

1448
01:01:32,280 --> 01:01:34,319
that doesn't understand about them to to

1449
01:01:34,319 --> 01:01:35,880
still see it just as one big checklist

1450
01:01:35,880 --> 01:01:37,920
with all the items in it from all the

1451
01:01:37,920 --> 01:01:40,380
different checklists and then if that

1452
01:01:40,380 --> 01:01:42,059
client adds a new item it appears

1453
01:01:42,059 --> 01:01:44,280
without a grouping because it it gets

1454
01:01:44,280 --> 01:01:46,559
added without that grouping parent ID as

1455
01:01:46,559 --> 01:01:49,380
part of it but they can patch an item so

1456
01:01:49,380 --> 01:01:50,819
Mark something as checked without

1457
01:01:50,819 --> 01:01:52,140
affecting

1458
01:01:52,140 --> 01:01:55,079
the representation for for clients that

1459
01:01:55,079 --> 01:01:56,220
are more capable

1460
01:01:56,220 --> 01:01:58,140
because you're just patching that one

1461
01:01:58,140 --> 01:02:00,240
item I think that that's a good reason

1462
01:02:00,240 --> 01:02:03,359
to use the object and ID rather than the

1463
01:02:03,359 --> 01:02:05,579
full list is that you can then patch an

1464
01:02:05,579 --> 01:02:08,280
individual you can say I'm checking this

1465
01:02:08,280 --> 01:02:09,299
box

1466
01:02:09,299 --> 01:02:10,680
but I don't want to change anything else

1467
01:02:10,680 --> 01:02:12,119
about the representation because I don't

1468
01:02:12,119 --> 01:02:14,940
know what everything else means that I

1469
01:02:14,940 --> 01:02:16,799
think that's a good good design pattern

1470
01:02:16,799 --> 01:02:17,819
to use

1471
01:02:17,819 --> 01:02:19,799
yeah so you're referring to the right

1472
01:02:19,799 --> 01:02:22,799
hand side right the check item as a as

1473
01:02:22,799 --> 01:02:25,920
an more more generically to yeah this

1474
01:02:25,920 --> 01:02:29,640
style of apis right so no no so no big

1475
01:02:29,640 --> 01:02:32,220
preference on either Solutions right

1476
01:02:32,220 --> 01:02:35,640
okay just to double check thank you ah

1477
01:02:35,640 --> 01:02:38,598
there's still one

1478
01:02:39,619 --> 01:02:41,280
all right

1479
01:02:41,280 --> 01:02:43,460
thanks for all the uh

1480
01:02:43,460 --> 01:02:47,099
ah Daryl Miller go ahead I snuck in one

1481
01:02:47,099 --> 01:02:48,359
extra data point

1482
01:02:48,359 --> 01:02:50,160
um for supporting the multiple checklist

1483
01:02:50,160 --> 01:02:52,140
because initially I was like yeah why do

1484
01:02:52,140 --> 01:02:54,000
why would you need that but uh GitHub

1485
01:02:54,000 --> 01:02:56,099
issues would allow you to create

1486
01:02:56,099 --> 01:02:57,900
multiple

1487
01:02:57,900 --> 01:03:00,180
um checklists within a single issue

1488
01:03:00,180 --> 01:03:03,059
which matters to the task and list of

1489
01:03:03,059 --> 01:03:06,079
checklists thanks a lot

1490
01:03:06,660 --> 01:03:08,460
all right

1491
01:03:08,460 --> 01:03:10,440
thanks for all the feedback um next

1492
01:03:10,440 --> 01:03:13,440
slide I forgot what hey it's been a

1493
01:03:13,440 --> 01:03:15,240
while is there us oh yeah future work

1494
01:03:15,240 --> 01:03:18,420
yeah right so I didn't yet touch the

1495
01:03:18,420 --> 01:03:19,680
task list

1496
01:03:19,680 --> 01:03:20,520
um

1497
01:03:20,520 --> 01:03:22,500
still need to refine that that's the

1498
01:03:22,500 --> 01:03:23,760
future work

1499
01:03:23,760 --> 01:03:27,000
um also the icon the task spec brings a

1500
01:03:27,000 --> 01:03:28,619
grouping mechanism

1501
01:03:28,619 --> 01:03:29,819
um

1502
01:03:29,819 --> 01:03:32,700
that might be beneficial for the jmap

1503
01:03:32,700 --> 01:03:34,380
tasks back as well

1504
01:03:34,380 --> 01:03:35,460
um

1505
01:03:35,460 --> 01:03:36,720
uh

1506
01:03:36,720 --> 01:03:39,960
yeah still wanted to to keep track how

1507
01:03:39,960 --> 01:03:42,740
you know I didn't want to

1508
01:03:42,740 --> 01:03:46,680
redefine it and look how it so and kind

1509
01:03:46,680 --> 01:03:49,920
of waiting for it to to settle here

1510
01:03:49,920 --> 01:03:51,000
um

1511
01:03:51,000 --> 01:03:54,540
also comments are still one major thing

1512
01:03:54,540 --> 01:03:56,880
um I want to add and yeah got them

1513
01:03:56,880 --> 01:03:58,500
gather more feedback

1514
01:03:58,500 --> 01:04:01,680
and gather more information on existing

1515
01:04:01,680 --> 01:04:03,660
systems so

1516
01:04:03,660 --> 01:04:07,319
still a bunch of work to do is what this

1517
01:04:07,319 --> 01:04:11,299
slide is basically wants to say

1518
01:04:12,480 --> 01:04:15,020
thanks

1519
01:04:15,780 --> 01:04:17,690
cool

1520
01:04:17,690 --> 01:04:19,020
[Music]

1521
01:04:19,020 --> 01:04:21,180
uh what's the next

1522
01:04:21,180 --> 01:04:24,000
that's all what's the next action that's

1523
01:04:24,000 --> 01:04:26,839
going to happen here

1524
01:04:28,079 --> 01:04:31,500
um yeah basically work on the future

1525
01:04:31,500 --> 01:04:34,200
tasks I would say the future work

1526
01:04:34,200 --> 01:04:34,980
um

1527
01:04:34,980 --> 01:04:37,859
see how far I get I would say

1528
01:04:37,859 --> 01:04:39,240
cool I guess we'll come back to this

1529
01:04:39,240 --> 01:04:40,859
when we get to the Milestone section to

1530
01:04:40,859 --> 01:04:44,040
see where you're expecting to to move on

1531
01:04:44,040 --> 01:04:45,780
to thank you

1532
01:04:45,780 --> 01:04:48,119
anything else on this before we move on

1533
01:04:48,119 --> 01:04:49,559
to the next section

1534
01:04:49,559 --> 01:04:53,059
last comments on tasks

1535
01:04:53,520 --> 01:04:54,900
cool

1536
01:04:54,900 --> 01:04:56,880
uh let's go back to the chair slides and

1537
01:04:56,880 --> 01:04:59,460
see if we've got anything else I still

1538
01:04:59,460 --> 01:05:02,480
have my um

1539
01:05:04,099 --> 01:05:06,720
it's the the migration thing is still

1540
01:05:06,720 --> 01:05:09,119
yep so the migration thing and there was

1541
01:05:09,119 --> 01:05:11,160
s man sender there's is there anything

1542
01:05:11,160 --> 01:05:14,180
new on that Alexi

1543
01:05:17,400 --> 01:05:21,540
uh s mime sender extensions

1544
01:05:21,540 --> 01:05:23,880
not cool all right then let's do the

1545
01:05:23,880 --> 01:05:24,900
other thing

1546
01:05:24,900 --> 01:05:26,940
let me

1547
01:05:26,940 --> 01:05:28,799
share the slides

1548
01:05:28,799 --> 01:05:31,140
so how are we on time not so good right

1549
01:05:31,140 --> 01:05:33,780
uh we're fine okay perfect we've got so

1550
01:05:33,780 --> 01:05:37,079
I don't need to hurry yes so last ITF we

1551
01:05:37,079 --> 01:05:38,940
already teasered

1552
01:05:38,940 --> 01:05:41,760
um Gemma for migration data portability

1553
01:05:41,760 --> 01:05:44,040
um we don't have a draft just yet I just

1554
01:05:44,040 --> 01:05:46,619
wanted to give you a short update that

1555
01:05:46,619 --> 01:05:48,000
we're still on it

1556
01:05:48,000 --> 01:05:51,359
we want to make a draft and here are

1557
01:05:51,359 --> 01:05:53,819
some things that we

1558
01:05:53,819 --> 01:05:55,740
think about including in the draft and

1559
01:05:55,740 --> 01:05:57,000
you might have some feedback on that

1560
01:05:57,000 --> 01:05:59,780
next slide please

1561
01:06:02,460 --> 01:06:03,599
yeah

1562
01:06:03,599 --> 01:06:05,760
um so again

1563
01:06:05,760 --> 01:06:07,799
from last time basically what is the

1564
01:06:07,799 --> 01:06:11,280
motivation why are we doing this we um

1565
01:06:11,280 --> 01:06:15,480
basically when our business or our use

1566
01:06:15,480 --> 01:06:17,819
case is moving existing user data

1567
01:06:17,819 --> 01:06:20,220
between systems or virtual generic API

1568
01:06:20,220 --> 01:06:22,440
this is or this is actually what we're

1569
01:06:22,440 --> 01:06:25,440
looking for so yeah we found J map which

1570
01:06:25,440 --> 01:06:28,200
is really nice for that

1571
01:06:28,200 --> 01:06:29,700
um what would we also want to do we

1572
01:06:29,700 --> 01:06:32,280
would like to give an apis back to

1573
01:06:32,280 --> 01:06:34,619
developers of Legacy systems which

1574
01:06:34,619 --> 01:06:36,359
currently don't have a

1575
01:06:36,359 --> 01:06:40,740
appropriate API for doing exactly that

1576
01:06:40,740 --> 01:06:42,420
um

1577
01:06:42,420 --> 01:06:47,039
yeah and also we have ran into some

1578
01:06:47,039 --> 01:06:49,380
migration portability related problems

1579
01:06:49,380 --> 01:06:51,440
here and there and wanted to provide

1580
01:06:51,440 --> 01:06:55,079
some guidance in General on all those

1581
01:06:55,079 --> 01:06:56,460
three things

1582
01:06:56,460 --> 01:06:59,640
so what should the spec provide that we

1583
01:06:59,640 --> 01:07:02,280
still don't have yet guidance on how to

1584
01:07:02,280 --> 01:07:05,539
develop a jmap API in a very simple way

1585
01:07:05,539 --> 01:07:08,400
so we want to have low requirements here

1586
01:07:08,400 --> 01:07:10,039
we want to have

1587
01:07:10,039 --> 01:07:13,619
propose a reduced jmap feature set like

1588
01:07:13,619 --> 01:07:16,559
the minimum that

1589
01:07:16,559 --> 01:07:20,579
implementers need to do and also some

1590
01:07:20,579 --> 01:07:22,559
further extensions for migration rate

1591
01:07:22,559 --> 01:07:26,240
problems next slide please

1592
01:07:27,960 --> 01:07:32,700
yeah so first of all uh the the we call

1593
01:07:32,700 --> 01:07:35,220
it the central profile

1594
01:07:35,220 --> 01:07:37,740
um for Rapid development basically

1595
01:07:37,740 --> 01:07:40,200
um the idea is how do you quick start

1596
01:07:40,200 --> 01:07:43,079
gen web API development so we want to

1597
01:07:43,079 --> 01:07:46,380
define a bare minimum for

1598
01:07:46,380 --> 01:07:51,119
like the one time use actually so it's

1599
01:07:51,119 --> 01:07:53,579
um it's a bit weird word or a bit weird

1600
01:07:53,579 --> 01:07:55,920
wording so our use case sometimes people

1601
01:07:55,920 --> 01:07:57,780
have a legacy system and they won't just

1602
01:07:57,780 --> 01:07:59,640
want to migrate the data away once and

1603
01:07:59,640 --> 01:08:00,960
then they want to shut down the system

1604
01:08:00,960 --> 01:08:03,299
so for this they need something really

1605
01:08:03,299 --> 01:08:04,319
simple

1606
01:08:04,319 --> 01:08:07,680
uh really easy to implement and we want

1607
01:08:07,680 --> 01:08:09,599
to give some guidance on Basics to start

1608
01:08:09,599 --> 01:08:12,839
with so people will more easily be able

1609
01:08:12,839 --> 01:08:14,940
to dive into the jmap world and then

1610
01:08:14,940 --> 01:08:19,020
extend upon this bare minimum

1611
01:08:19,020 --> 01:08:20,939
um yeah so rough outline is here as I

1612
01:08:20,939 --> 01:08:23,160
already had it last time basically only

1613
01:08:23,160 --> 01:08:25,920
focus on key objects skip a session

1614
01:08:25,920 --> 01:08:28,198
object in case the username equals the

1615
01:08:28,198 --> 01:08:29,160
account

1616
01:08:29,160 --> 01:08:31,439
uh introduce a simplified request as

1617
01:08:31,439 --> 01:08:33,479
already teased last time and also no

1618
01:08:33,479 --> 01:08:35,880
batching uh

1619
01:08:35,880 --> 01:08:40,439
yeah for now as a first step basically

1620
01:08:40,439 --> 01:08:43,460
okay next slide please

1621
01:08:43,679 --> 01:08:45,359
yeah so again here's the simplified

1622
01:08:45,359 --> 01:08:47,819
request from last time last time there

1623
01:08:47,819 --> 01:08:50,779
was a suggestion from

1624
01:08:50,779 --> 01:08:53,939
prawn to to have more like a path based

1625
01:08:53,939 --> 01:08:57,600
approach for now

1626
01:08:57,600 --> 01:08:59,279
I would not

1627
01:08:59,279 --> 01:09:01,198
go that route because it would add

1628
01:09:01,198 --> 01:09:03,540
another requirement for people to

1629
01:09:03,540 --> 01:09:06,238
implement which would be like a routing

1630
01:09:06,238 --> 01:09:09,479
mechanism when we just use queries and a

1631
01:09:09,479 --> 01:09:11,819
URI it should be

1632
01:09:11,819 --> 01:09:15,719
even simpler to implement

1633
01:09:15,719 --> 01:09:19,279
all right next slide please

1634
01:09:21,600 --> 01:09:23,279
yes and there's

1635
01:09:23,279 --> 01:09:25,799
um one of the extensions that we

1636
01:09:25,799 --> 01:09:30,060
think are also good in our in this um

1637
01:09:30,060 --> 01:09:34,198
in this informational draft which is uh

1638
01:09:34,198 --> 01:09:36,540
jmap debug is what we call it so

1639
01:09:36,540 --> 01:09:39,000
basically we already have like

1640
01:09:39,000 --> 01:09:40,580
uh

1641
01:09:40,580 --> 01:09:43,319
documentation about about this extension

1642
01:09:43,319 --> 01:09:47,339
on our own website so the problem we ran

1643
01:09:47,339 --> 01:09:50,520
into we have an API software is running

1644
01:09:50,520 --> 01:09:54,360
also the jmap API software

1645
01:09:54,360 --> 01:09:56,699
is running that that you write yourself

1646
01:09:56,699 --> 01:09:58,320
is running on a third-party

1647
01:09:58,320 --> 01:10:01,860
infrastructure but the log messages

1648
01:10:01,860 --> 01:10:03,719
from this third-party infrastructure

1649
01:10:03,719 --> 01:10:05,520
cannot be sent to a logging service that

1650
01:10:05,520 --> 01:10:07,020
you can use yourself

1651
01:10:07,020 --> 01:10:08,580
so

1652
01:10:08,580 --> 01:10:10,679
um but what you can do you have a

1653
01:10:10,679 --> 01:10:12,420
clearly client that has access to the

1654
01:10:12,420 --> 01:10:15,060
Gmail API so how do you get access to

1655
01:10:15,060 --> 01:10:17,460
the logs or to more information to see

1656
01:10:17,460 --> 01:10:19,739
what's happening on the server side you

1657
01:10:19,739 --> 01:10:22,219
can just send logs alongside the

1658
01:10:22,219 --> 01:10:25,860
response to your Gmail client

1659
01:10:25,860 --> 01:10:29,820
and then read those yeah sorry my Wi-Fi

1660
01:10:29,820 --> 01:10:32,719
dropped off for some reason so I guess

1661
01:10:32,719 --> 01:10:36,800
has just logged me yeah

1662
01:10:37,860 --> 01:10:40,500
yeah I'm reconnecting now

1663
01:10:40,500 --> 01:10:43,739
no worries it's pretty impressive that

1664
01:10:43,739 --> 01:10:45,540
it drops the slides I guess that makes

1665
01:10:45,540 --> 01:10:46,640
sense

1666
01:10:46,640 --> 01:10:48,980
somewhere so

1667
01:10:48,980 --> 01:10:51,780
it's basically the idea is basically to

1668
01:10:51,780 --> 01:10:54,300
send logs

1669
01:10:54,300 --> 01:10:56,520
to send logs alongside the Gmail

1670
01:10:56,520 --> 01:11:01,199
response no that's so yeah so yes so

1671
01:11:01,199 --> 01:11:03,420
there might be some other use cases so

1672
01:11:03,420 --> 01:11:05,340
here you can see how we currently

1673
01:11:05,340 --> 01:11:08,219
implement it it's it's like an initial

1674
01:11:08,219 --> 01:11:11,219
start so we have actually uh log lines

1675
01:11:11,219 --> 01:11:12,600
here

1676
01:11:12,600 --> 01:11:14,159
um

1677
01:11:14,159 --> 01:11:17,699
um in the response and you see files

1678
01:11:17,699 --> 01:11:21,739
like a file a log level which log line

1679
01:11:21,739 --> 01:11:24,840
message and so on as you can imagine

1680
01:11:24,840 --> 01:11:27,480
it's like need to take care that this is

1681
01:11:27,480 --> 01:11:30,060
a secure Channel with restricted access

1682
01:11:30,060 --> 01:11:32,159
because it's logs it's sensitive

1683
01:11:32,159 --> 01:11:33,719
information

1684
01:11:33,719 --> 01:11:36,900
um and yeah it's it's for now it's just

1685
01:11:36,900 --> 01:11:39,900
our own extension but we might want to

1686
01:11:39,900 --> 01:11:41,580
include this

1687
01:11:41,580 --> 01:11:44,159
like a more generic more

1688
01:11:44,159 --> 01:11:47,600
a better version in in this

1689
01:11:47,600 --> 01:11:49,739
migration draft

1690
01:11:49,739 --> 01:11:52,080
and there might be other uses use cases

1691
01:11:52,080 --> 01:11:54,360
for example the in the thief case

1692
01:11:54,360 --> 01:11:58,440
uh you could also say uh I run the

1693
01:11:58,440 --> 01:12:01,199
runtime I'm I mean the runtime errors

1694
01:12:01,199 --> 01:12:04,500
that were an issue with a thief draft

1695
01:12:04,500 --> 01:12:06,060
you could also

1696
01:12:06,060 --> 01:12:10,620
expose them via as log lines maybe uh

1697
01:12:10,620 --> 01:12:12,480
with a J members within the jmap

1698
01:12:12,480 --> 01:12:14,880
response maybe yeah

1699
01:12:14,880 --> 01:12:19,140
okay so next slide please

1700
01:12:19,140 --> 01:12:21,199
um

1701
01:12:23,100 --> 01:12:25,440
yes so backend info is basically to what

1702
01:12:25,440 --> 01:12:28,679
Hunter was saying before uh so no no so

1703
01:12:28,679 --> 01:12:31,800
we have the issue as a client supporting

1704
01:12:31,800 --> 01:12:33,060
a lot of servers

1705
01:12:33,060 --> 01:12:35,219
that no server software is perfect even

1706
01:12:35,219 --> 01:12:37,020
though they say they implement the same

1707
01:12:37,020 --> 01:12:40,100
thing they they have their own quirks

1708
01:12:40,100 --> 01:12:43,140
and we want to be able to handle that in

1709
01:12:43,140 --> 01:12:44,940
an automated fashion so we need to

1710
01:12:44,940 --> 01:12:46,320
identify

1711
01:12:46,320 --> 01:12:49,140
which server is what I don't know is a

1712
01:12:49,140 --> 01:12:51,780
version two is it version 2.1

1713
01:12:51,780 --> 01:12:53,699
things like that

1714
01:12:53,699 --> 01:12:56,300
and so basically to be able to handle

1715
01:12:56,300 --> 01:12:59,640
also like small bugs in server-side

1716
01:12:59,640 --> 01:13:02,219
software that people will not just not

1717
01:13:02,219 --> 01:13:04,800
fix themselves

1718
01:13:04,800 --> 01:13:06,420
um yeah so what what do we need to do

1719
01:13:06,420 --> 01:13:07,980
before we can do that we need to get

1720
01:13:07,980 --> 01:13:10,080
information what software is actually

1721
01:13:10,080 --> 01:13:12,840
running on those servers without that

1722
01:13:12,840 --> 01:13:14,880
info we cannot do that

1723
01:13:14,880 --> 01:13:17,159
Next Step please

1724
01:13:17,159 --> 01:13:20,580
so here's a proposal basically how to do

1725
01:13:20,580 --> 01:13:22,980
that within the session object one could

1726
01:13:22,980 --> 01:13:24,920
just after login

1727
01:13:24,920 --> 01:13:28,699
server could just expose which back-end

1728
01:13:28,699 --> 01:13:31,679
uh which software basically is running

1729
01:13:31,679 --> 01:13:33,179
on

1730
01:13:33,179 --> 01:13:36,120
it or which so which

1731
01:13:36,120 --> 01:13:38,159
software versions it's using so for

1732
01:13:38,159 --> 01:13:41,520
example we have PHP we have harder

1733
01:13:41,520 --> 01:13:44,280
versions here or then we also have the

1734
01:13:44,280 --> 01:13:47,640
sieve script type this is just a very

1735
01:13:47,640 --> 01:13:50,460
rough first idea we want to include in

1736
01:13:50,460 --> 01:13:52,679
this draft and I think the main question

1737
01:13:52,679 --> 01:13:54,120
I have is

1738
01:13:54,120 --> 01:13:56,659
does it make sense to

1739
01:13:56,659 --> 01:14:00,719
compile everything in this initial draft

1740
01:14:00,719 --> 01:14:03,719
I probably as a first iteration yes I

1741
01:14:03,719 --> 01:14:05,159
would say

1742
01:14:05,159 --> 01:14:07,080
um if you have some feedback on that

1743
01:14:07,080 --> 01:14:10,739
feel free if not yeah

1744
01:14:10,739 --> 01:14:14,959
I'm also fine so thank you

1745
01:14:16,980 --> 01:14:19,140
yeah this is my check um I've just one

1746
01:14:19,140 --> 01:14:21,000
clarification for explanation I think

1747
01:14:21,000 --> 01:14:23,219
houses came into place during the

1748
01:14:23,219 --> 01:14:26,280
discussion in itf114

1749
01:14:26,280 --> 01:14:27,840
um so the motivation behind this or what

1750
01:14:27,840 --> 01:14:29,820
we are doing here mainly is we consider

1751
01:14:29,820 --> 01:14:31,920
jmap a very good choice to wrap an

1752
01:14:31,920 --> 01:14:34,560
existing Legacy data store yeah and we

1753
01:14:34,560 --> 01:14:35,940
see that probably other people want to

1754
01:14:35,940 --> 01:14:38,040
use it as well yeah so we see very often

1755
01:14:38,040 --> 01:14:40,140
customers coming to us with some

1756
01:14:40,140 --> 01:14:42,900
dump of emails somewhere some mail dear

1757
01:14:42,900 --> 01:14:45,659
folder something like that and

1758
01:14:45,659 --> 01:14:48,480
um we are increasingly considering a

1759
01:14:48,480 --> 01:14:51,659
list of Sif files stored there and we

1760
01:14:51,659 --> 01:14:53,400
are increasingly seeing jmap as a very

1761
01:14:53,400 --> 01:14:56,340
good option to lift those on an HTTP

1762
01:14:56,340 --> 01:14:59,460
level for migration purposes and so that

1763
01:14:59,460 --> 01:15:01,500
is basically the background of all these

1764
01:15:01,500 --> 01:15:03,179
proposals here you know that for people

1765
01:15:03,179 --> 01:15:04,860
that have a similar use case in a

1766
01:15:04,860 --> 01:15:06,480
similar situation

1767
01:15:06,480 --> 01:15:09,239
um that might find that also very useful

1768
01:15:09,239 --> 01:15:11,760
um obviously like Ken already discuss

1769
01:15:11,760 --> 01:15:13,679
this is not necessarily for public

1770
01:15:13,679 --> 01:15:16,140
exposure of a jmap service to normal

1771
01:15:16,140 --> 01:15:20,340
customers but for restricted usage in a

1772
01:15:20,340 --> 01:15:23,699
very specific scenario

1773
01:15:23,699 --> 01:15:25,879
foreign

1774
01:15:28,699 --> 01:15:31,199
what do we want to do with this I guess

1775
01:15:31,199 --> 01:15:36,320
is the next question create a draft cool

1776
01:15:39,659 --> 01:15:42,300
excellent we'll we'll uh add an action

1777
01:15:42,300 --> 01:15:44,100
point for that too I think

1778
01:15:44,100 --> 01:15:46,440
that's the end of the jmap stuff so

1779
01:15:46,440 --> 01:15:48,600
let's do the

1780
01:15:48,600 --> 01:15:49,380
um

1781
01:15:49,380 --> 01:15:52,280
the jmap

1782
01:15:52,620 --> 01:15:56,280
Milestone work now just so that

1783
01:15:56,280 --> 01:15:57,960
we can then move on to extra without

1784
01:15:57,960 --> 01:15:59,880
having to come back do we have any other

1785
01:15:59,880 --> 01:16:02,100
business pajama before we're

1786
01:16:02,100 --> 01:16:05,239
waiting around here

1787
01:16:09,540 --> 01:16:12,380
I guess not

1788
01:16:18,480 --> 01:16:22,159
here are the milestones

1789
01:16:24,300 --> 01:16:27,960
submit gmf quotas document to iesg

1790
01:16:27,960 --> 01:16:31,219
that is done

1791
01:16:34,080 --> 01:16:39,260
submit document for blobs to ASG is done

1792
01:16:42,080 --> 01:16:46,080
submit sieve document to ASG is not done

1793
01:16:46,080 --> 01:16:48,360
and we will do that in hopefully

1794
01:16:48,360 --> 01:16:51,739
December this year

1795
01:16:52,199 --> 01:16:55,440
submit S9 sender extensions document to

1796
01:16:55,440 --> 01:16:57,840
ASG

1797
01:16:57,840 --> 01:17:00,000
Alexi

1798
01:17:00,000 --> 01:17:03,000
uh

1799
01:17:06,420 --> 01:17:09,300
like in March and I was very good cool

1800
01:17:09,300 --> 01:17:11,159
that would be great

1801
01:17:11,159 --> 01:17:11,699
um

1802
01:17:11,699 --> 01:17:14,940
there's a bunch of interest in s mime

1803
01:17:14,940 --> 01:17:17,699
out in the world at the moment

1804
01:17:17,699 --> 01:17:19,020
um a lot of the big companies are

1805
01:17:19,020 --> 01:17:20,760
planning to do stuff with encrypted

1806
01:17:20,760 --> 01:17:21,840
email

1807
01:17:21,840 --> 01:17:24,060
there was some discussion at morgue

1808
01:17:24,060 --> 01:17:25,860
about that and they seem to be

1809
01:17:25,860 --> 01:17:27,719
standardizing last time so we might see

1810
01:17:27,719 --> 01:17:30,179
it becoming a lot more popular

1811
01:17:30,179 --> 01:17:32,280
we've got things like dance for key

1812
01:17:32,280 --> 01:17:35,960
distribution as well yeah

1813
01:17:36,440 --> 01:17:40,020
uh a document defining gem access to

1814
01:17:40,020 --> 01:17:41,880
address books

1815
01:17:41,880 --> 01:17:45,420
we don't yet have a document for this

1816
01:17:45,420 --> 01:17:47,480
um

1817
01:17:50,640 --> 01:17:52,199
oh sorry Jaws bomb isn't a German

1818
01:17:52,199 --> 01:17:55,679
context isn't that the JS contact is

1819
01:17:55,679 --> 01:17:58,080
there Jammer jam it for contacts as well

1820
01:17:58,080 --> 01:18:00,360
I think Neil posted it in the work in

1821
01:18:00,360 --> 01:18:02,699
the mailing list okay let me see if we

1822
01:18:02,699 --> 01:18:05,040
actually have that

1823
01:18:05,040 --> 01:18:07,500
in there yet maybe maybe I've been

1824
01:18:07,500 --> 01:18:08,940
paying so little attention to my own

1825
01:18:08,940 --> 01:18:10,140
working group I don't even know what

1826
01:18:10,140 --> 01:18:11,640
documents we have

1827
01:18:11,640 --> 01:18:14,300
Neil

1828
01:18:14,880 --> 01:18:17,659
so it is

1829
01:18:24,060 --> 01:18:27,060
resolved

1830
01:18:27,960 --> 01:18:30,140
done

1831
01:18:30,140 --> 01:18:33,179
informational document let's kick that

1832
01:18:33,179 --> 01:18:35,100
can down the road

1833
01:18:35,100 --> 01:18:36,840
to

1834
01:18:36,840 --> 01:18:40,580
along with all the other fun stuff

1835
01:18:41,460 --> 01:18:44,460
submit Jammer calendars document to ASG

1836
01:18:44,460 --> 01:18:46,020
we're thinking is going to be happening

1837
01:18:46,020 --> 01:18:48,239
along with everything else July next

1838
01:18:48,239 --> 01:18:50,540
year

1839
01:18:51,900 --> 01:18:54,179
jam up sharing document we're going to

1840
01:18:54,179 --> 01:18:55,980
do do you think we'll have that ready

1841
01:18:55,980 --> 01:18:58,879
for next month Neil

1842
01:19:01,620 --> 01:19:06,060
um maybe yeah maybe all right let's say

1843
01:19:06,060 --> 01:19:08,040
yes jam out tasks it's currently

1844
01:19:08,040 --> 01:19:10,020
February 2023 do we think that's

1845
01:19:10,020 --> 01:19:12,120
realistic

1846
01:19:12,120 --> 01:19:16,460
July as well cool

1847
01:19:17,159 --> 01:19:19,440
all right and then we have I think some

1848
01:19:19,440 --> 01:19:22,800
extra Milestones to add to this

1849
01:19:22,800 --> 01:19:23,900
um

1850
01:19:23,900 --> 01:19:25,739
adopt

1851
01:19:25,739 --> 01:19:28,580
uh draft

1852
01:19:28,860 --> 01:19:32,000
for migration

1853
01:19:39,300 --> 01:19:42,840
and point something like that

1854
01:19:42,840 --> 01:19:46,940
next month early next year

1855
01:19:48,120 --> 01:19:51,080
probably next year

1856
01:19:52,320 --> 01:19:53,640
because you have to ride it then we have

1857
01:19:53,640 --> 01:19:55,199
to call for adoption that seems

1858
01:19:55,199 --> 01:19:56,640
reasonable

1859
01:19:56,640 --> 01:20:01,880
uh what else do we have in our list here

1860
01:20:02,640 --> 01:20:04,920
tasks is a thing that's got stuff

1861
01:20:04,920 --> 01:20:07,080
already

1862
01:20:07,080 --> 01:20:09,860
uh identities

1863
01:20:09,860 --> 01:20:13,080
we're going to start discussion on

1864
01:20:13,080 --> 01:20:15,000
mailing lists I guess we can we can add

1865
01:20:15,000 --> 01:20:16,679
a milestone for that when we decide to

1866
01:20:16,679 --> 01:20:18,120
do something

1867
01:20:18,120 --> 01:20:20,460
quota sharing their all things we

1868
01:20:20,460 --> 01:20:22,380
already have milestones for calendars we

1869
01:20:22,380 --> 01:20:23,820
have math stands for

1870
01:20:23,820 --> 01:20:26,340
I think

1871
01:20:26,340 --> 01:20:27,420
good

1872
01:20:27,420 --> 01:20:29,159
then I think let me move that's

1873
01:20:29,159 --> 01:20:30,239
everything

1874
01:20:30,239 --> 01:20:32,100
any other Milestone things people want

1875
01:20:32,100 --> 01:20:34,020
to add

1876
01:20:34,020 --> 01:20:35,640
no

1877
01:20:35,640 --> 01:20:38,780
review changes

1878
01:20:43,860 --> 01:20:46,380
looks good yeah okay I'll just delete

1879
01:20:46,380 --> 01:20:47,460
that one

1880
01:20:47,460 --> 01:20:50,280
I know I can't have that review changes

1881
01:20:50,280 --> 01:20:52,380
again

1882
01:20:52,380 --> 01:20:54,679
foreign

1883
01:20:55,460 --> 01:20:57,600
thank you everybody that's the end of

1884
01:20:57,600 --> 01:20:59,460
the jam up section let's start the extra

1885
01:20:59,460 --> 01:21:01,620
section do we want to switch chairs or

1886
01:21:01,620 --> 01:21:03,300
just hang out where you are

1887
01:21:03,300 --> 01:21:05,880
to both look happy all right rolling

1888
01:21:05,880 --> 01:21:06,960
into

1889
01:21:06,960 --> 01:21:09,960
the extra now I think we only have a

1890
01:21:09,960 --> 01:21:12,060
couple of sets of slides for this so

1891
01:21:12,060 --> 01:21:15,300
let's just go back and have a look at

1892
01:21:15,300 --> 01:21:18,360
go away keep using at the chair slides

1893
01:21:18,360 --> 01:21:21,920
and see what was on our agenda for extra

1894
01:21:25,620 --> 01:21:29,460
all right I'm at partial is with ISJ I

1895
01:21:29,460 --> 01:21:31,940
think there's nothing

1896
01:21:31,940 --> 01:21:33,659
Alexi

1897
01:21:33,659 --> 01:21:35,340
on

1898
01:21:35,340 --> 01:21:38,340
these two documents

1899
01:21:38,340 --> 01:21:40,980
yeah so there were some minor comments

1900
01:21:40,980 --> 01:21:44,100
from Murray and I believe I addressed

1901
01:21:44,100 --> 01:21:46,020
them in my copy

1902
01:21:46,020 --> 01:21:48,060
and they replied the editorials so I

1903
01:21:48,060 --> 01:21:50,540
think that's fine

1904
01:21:55,320 --> 01:21:59,280
so next step is uh for Alexi to to

1905
01:21:59,280 --> 01:22:01,020
publish

1906
01:22:01,020 --> 01:22:04,620
when the last call finishes then I'll um

1907
01:22:04,620 --> 01:22:08,480
and there was uh

1908
01:22:08,580 --> 01:22:10,980
no that's the other one never mind

1909
01:22:10,980 --> 01:22:11,580
um

1910
01:22:11,580 --> 01:22:13,500
but should be finishing kind of now I

1911
01:22:13,500 --> 01:22:15,679
think

1912
01:22:17,280 --> 01:22:20,219
yeah okay okay that's great cool all

1913
01:22:20,219 --> 01:22:21,540
right

1914
01:22:21,540 --> 01:22:23,460
um and the other thing with Civ action

1915
01:22:23,460 --> 01:22:24,600
registry

1916
01:22:24,600 --> 01:22:27,420
that's the one I was talking about

1917
01:22:27,420 --> 01:22:30,020
um an hour ago when I was confused yep

1918
01:22:30,020 --> 01:22:33,060
what did you say then I didn't copy the

1919
01:22:33,060 --> 01:22:35,460
notes down um I just replied to Maurice

1920
01:22:35,460 --> 01:22:38,400
you know he asked about the one column

1921
01:22:38,400 --> 01:22:41,580
and a table uh again kind of editorial

1922
01:22:41,580 --> 01:22:43,080
thing but we'll need to decide how to

1923
01:22:43,080 --> 01:22:44,400
handle this

1924
01:22:44,400 --> 01:22:45,780
um I think his comments are

1925
01:22:45,780 --> 01:22:49,219
non-controversial cool

1926
01:22:49,800 --> 01:22:54,260
so again YouTube publish changes

1927
01:22:57,360 --> 01:22:58,500
cool

1928
01:22:58,500 --> 01:23:01,620
um yeah I think I got Jenna's review uh

1929
01:23:01,620 --> 01:23:04,080
on it with no comments so that was good

1930
01:23:04,080 --> 01:23:05,699
yeah

1931
01:23:05,699 --> 01:23:08,460
all right so next thing on here is

1932
01:23:08,460 --> 01:23:10,020
message limits

1933
01:23:10,020 --> 01:23:13,340
you again Alexi

1934
01:23:13,500 --> 01:23:16,800
right uh let me show your slides

1935
01:23:16,800 --> 01:23:19,500
don't want me to be in the front

1936
01:23:19,500 --> 01:23:22,460
sure coming up

1937
01:23:29,580 --> 01:23:33,199
so next slide

1938
01:23:34,739 --> 01:23:35,880
so yeah

1939
01:23:35,880 --> 01:23:37,320
um

1940
01:23:37,320 --> 01:23:41,219
I think the history of this is basically

1941
01:23:41,219 --> 01:23:45,300
bronze started last call in July August

1942
01:23:45,300 --> 01:23:47,760
uh Barry had a look and said oh there is

1943
01:23:47,760 --> 01:23:49,199
a bunch of comments that you haven't

1944
01:23:49,199 --> 01:23:51,179
addressed I said okay

1945
01:23:51,179 --> 01:23:53,280
partial seems to be done let me split it

1946
01:23:53,280 --> 01:23:55,440
off and this is the other part of it

1947
01:23:55,440 --> 01:23:57,480
yeah which still have open issues we'll

1948
01:23:57,480 --> 01:24:00,080
need to discuss

1949
01:24:00,239 --> 01:24:04,940
um so yeah basically the idea here is

1950
01:24:05,520 --> 01:24:09,000
um message limit is a way for mail

1951
01:24:09,000 --> 01:24:12,120
stores that have limitations on how many

1952
01:24:12,120 --> 01:24:13,920
messages can be handled at any given

1953
01:24:13,920 --> 01:24:15,000
time

1954
01:24:15,000 --> 01:24:17,100
for you know performance or workload

1955
01:24:17,100 --> 01:24:18,719
reasons

1956
01:24:18,719 --> 01:24:22,820
to be able to express this restriction

1957
01:24:24,060 --> 01:24:27,060
so

1958
01:24:27,239 --> 01:24:30,320
next slide please

1959
01:24:31,100 --> 01:24:34,739
so one of the main thing that we still

1960
01:24:34,739 --> 01:24:38,599
need to discuss uh is

1961
01:24:40,560 --> 01:24:43,560
um is the issue with message limit

1962
01:24:43,560 --> 01:24:46,560
changing

1963
01:24:47,480 --> 01:24:50,400
requirements on copy in particular and

1964
01:24:50,400 --> 01:24:53,040
uid copy saying that

1965
01:24:53,040 --> 01:24:55,440
the base spec says that copy and UAG

1966
01:24:55,440 --> 01:24:57,960
copy are Atomic so either all messages

1967
01:24:57,960 --> 01:24:59,940
are copied or

1968
01:24:59,940 --> 01:25:02,600
they'll fail to copy

1969
01:25:02,600 --> 01:25:05,580
and message limit deliberately was

1970
01:25:05,580 --> 01:25:07,679
saying that

1971
01:25:07,679 --> 01:25:10,080
well you ask to copy 10 000 messages and

1972
01:25:10,080 --> 01:25:12,060
the message limit is 1000 you will only

1973
01:25:12,060 --> 01:25:15,000
copy 1000 and then kind of give a

1974
01:25:15,000 --> 01:25:18,199
partial error

1975
01:25:18,540 --> 01:25:20,100
so

1976
01:25:20,100 --> 01:25:22,080
um

1977
01:25:22,080 --> 01:25:24,960
because the requirement on

1978
01:25:24,960 --> 01:25:29,420
copy and uid copy is the base pack

1979
01:25:31,500 --> 01:25:34,460
basically

1980
01:25:34,800 --> 01:25:37,440
for the client to support this client

1981
01:25:37,440 --> 01:25:39,000
needs to opt-in

1982
01:25:39,000 --> 01:25:40,860
and I think the mechanism for the client

1983
01:25:40,860 --> 01:25:44,040
to obtain is to use enable

1984
01:25:44,040 --> 01:25:44,640
yeah

1985
01:25:44,640 --> 01:25:45,840
um

1986
01:25:45,840 --> 01:25:47,699
I think there is quite a bit a big

1987
01:25:47,699 --> 01:25:49,860
desire to be able to do this without

1988
01:25:49,860 --> 01:25:52,080
client opting in but you know if we can

1989
01:25:52,080 --> 01:25:53,940
find another way

1990
01:25:53,940 --> 01:25:54,960
um

1991
01:25:54,960 --> 01:25:57,540
and probably next next slide would be

1992
01:25:57,540 --> 01:26:01,699
better next slide yep

1993
01:26:02,340 --> 01:26:05,780
right so

1994
01:26:06,960 --> 01:26:09,020
um

1995
01:26:09,900 --> 01:26:12,799
basically

1996
01:26:14,820 --> 01:26:17,880
uh previous version of the document was

1997
01:26:17,880 --> 01:26:20,159
saying that the top example is what's

1998
01:26:20,159 --> 01:26:22,320
going to happen

1999
01:26:22,320 --> 01:26:26,040
so the copy command still succeeds

2000
01:26:26,040 --> 01:26:28,280
and there is untagged

2001
01:26:28,280 --> 01:26:31,199
no with message limit saying that some

2002
01:26:31,199 --> 01:26:34,440
messages won't copied

2003
01:26:34,440 --> 01:26:37,280
and

2004
01:26:38,699 --> 01:26:42,120
this is what will happen now if enable

2005
01:26:42,120 --> 01:26:44,820
message limit is issued

2006
01:26:44,820 --> 01:26:47,400
if enable message limit is not issued

2007
01:26:47,400 --> 01:26:48,600
then the

2008
01:26:48,600 --> 01:26:50,400
second

2009
01:26:50,400 --> 01:26:52,980
case should happen yes

2010
01:26:52,980 --> 01:26:55,800
uid copy fails with no and you get

2011
01:26:55,800 --> 01:26:59,000
message limit Response Code

2012
01:27:02,239 --> 01:27:04,080
so

2013
01:27:04,080 --> 01:27:06,139
um

2014
01:27:06,540 --> 01:27:08,880
what I really struggle with and I keep

2015
01:27:08,880 --> 01:27:11,219
kind of uh flipping back and forth on

2016
01:27:11,219 --> 01:27:13,820
this is

2017
01:27:14,100 --> 01:27:16,800
this extension is very useful for the

2018
01:27:16,800 --> 01:27:18,420
servers because servers have this

2019
01:27:18,420 --> 01:27:20,159
restriction

2020
01:27:20,159 --> 01:27:22,260
what's the motivation for the client to

2021
01:27:22,260 --> 01:27:23,400
opt in

2022
01:27:23,400 --> 01:27:25,679
and I don't have a good answer to this

2023
01:27:25,679 --> 01:27:29,280
yeah because the difficulty is that if

2024
01:27:29,280 --> 01:27:31,860
copy is not atomic and the clients

2025
01:27:31,860 --> 01:27:33,600
support this extension then the client

2026
01:27:33,600 --> 01:27:34,739
can

2027
01:27:34,739 --> 01:27:37,739
it has to do more work basically it does

2028
01:27:37,739 --> 01:27:39,000
copy

2029
01:27:39,000 --> 01:27:42,780
10 000 messages get a partial response

2030
01:27:42,780 --> 01:27:45,179
it's nice okay so I need to remove this

2031
01:27:45,179 --> 01:27:47,400
thousand messages that got copied and

2032
01:27:47,400 --> 01:27:48,960
keep repeating the command until it

2033
01:27:48,960 --> 01:27:50,400
succeeds eventually

2034
01:27:50,400 --> 01:27:52,320
obviously it's more complicated code

2035
01:27:52,320 --> 01:27:54,480
more difficult to debug and all the rest

2036
01:27:54,480 --> 01:27:56,520
what's the actual benefit for the server

2037
01:27:56,520 --> 01:27:59,340
right this is uh this is barely but that

2038
01:27:59,340 --> 01:28:01,620
was why I

2039
01:28:01,620 --> 01:28:03,960
got into the queue

2040
01:28:03,960 --> 01:28:05,219
um

2041
01:28:05,219 --> 01:28:07,860
a client that wants to copy 10 000

2042
01:28:07,860 --> 01:28:09,960
messages when the message limit is a

2043
01:28:09,960 --> 01:28:11,639
thousand is just going to do it with 10

2044
01:28:11,639 --> 01:28:13,739
copy commands so where does the server

2045
01:28:13,739 --> 01:28:17,159
win on this uh you wound up making the

2046
01:28:17,159 --> 01:28:19,139
client more complicated and the server

2047
01:28:19,139 --> 01:28:21,659
does not ultimately have to do any less

2048
01:28:21,659 --> 01:28:23,639
work in the process

2049
01:28:23,639 --> 01:28:25,860
so I don't understand the benefit of

2050
01:28:25,860 --> 01:28:29,699
this I hmm

2051
01:28:29,699 --> 01:28:32,400
maybe the crime he should be in uh in

2052
01:28:32,400 --> 01:28:35,699
the call will reply to this I think

2053
01:28:35,699 --> 01:28:38,159
copying might be a kind of outlier and

2054
01:28:38,159 --> 01:28:40,020
maybe we decide to do something else for

2055
01:28:40,020 --> 01:28:40,860
that

2056
01:28:40,860 --> 01:28:44,580
the uh more more useful cases might be

2057
01:28:44,580 --> 01:28:47,699
Fetch and search absolutely that's fine

2058
01:28:47,699 --> 01:28:49,199
that I get

2059
01:28:49,199 --> 01:28:52,679
but but Fetch and search don't have this

2060
01:28:52,679 --> 01:28:55,020
problem of atomicity that which is

2061
01:28:55,020 --> 01:28:57,659
making everything more complicated so if

2062
01:28:57,659 --> 01:29:00,120
we just say it only applies to fetch and

2063
01:29:00,120 --> 01:29:02,100
search then I'm I think we're all good

2064
01:29:02,100 --> 01:29:04,880
and uh

2065
01:29:10,760 --> 01:29:13,980
primarily we do need this on uh Fetch

2066
01:29:13,980 --> 01:29:16,860
and search but we also see problems on

2067
01:29:16,860 --> 01:29:20,159
copy so the problem happens is clients

2068
01:29:20,159 --> 01:29:22,199
most of the time don't understand that

2069
01:29:22,199 --> 01:29:23,000
uh

2070
01:29:23,000 --> 01:29:25,199
they have like a large set of messages

2071
01:29:25,199 --> 01:29:28,380
they give this one colon star always and

2072
01:29:28,380 --> 01:29:31,620
that ends up uh creating timeouts on the

2073
01:29:31,620 --> 01:29:33,000
server

2074
01:29:33,000 --> 01:29:35,580
I'm sorry I just I did not follow that

2075
01:29:35,580 --> 01:29:36,920
just

2076
01:29:36,920 --> 01:29:40,080
so usually the client some most of some

2077
01:29:40,080 --> 01:29:41,699
of the clients that we have are really

2078
01:29:41,699 --> 01:29:44,219
really I should not say that but it's a

2079
01:29:44,219 --> 01:29:48,360
dump they end up saying okay uh oh let

2080
01:29:48,360 --> 01:29:51,480
me copy over this uh 20 000 messages but

2081
01:29:51,480 --> 01:29:53,699
copying over 20 000 messages takes a

2082
01:29:53,699 --> 01:29:56,480
long time for us

2083
01:29:59,000 --> 01:30:01,560
and that is not really good for the

2084
01:30:01,560 --> 01:30:02,580
clients

2085
01:30:02,580 --> 01:30:05,940
so you want the client to have to do

2086
01:30:05,940 --> 01:30:09,260
that using 10 copy commands

2087
01:30:09,260 --> 01:30:12,900
they happen in smaller batch I get okay

2088
01:30:12,900 --> 01:30:15,000
I get it I get it

2089
01:30:15,000 --> 01:30:18,360
so can I actually if we just want to

2090
01:30:18,360 --> 01:30:20,460
solve the copy timing out there are

2091
01:30:20,460 --> 01:30:23,219
other mechanisms right we can send

2092
01:30:23,219 --> 01:30:24,739
untagged

2093
01:30:24,739 --> 01:30:27,420
response in the middle of copy and

2094
01:30:27,420 --> 01:30:29,520
actually I know that some servers do it

2095
01:30:29,520 --> 01:30:32,280
every within a minute to make sure that

2096
01:30:32,280 --> 01:30:35,219
the client doesn't time out Cyrus server

2097
01:30:35,219 --> 01:30:36,960
does that so

2098
01:30:36,960 --> 01:30:39,480
if we just want to address this that is

2099
01:30:39,480 --> 01:30:42,780
fixable in a different way okay sounds

2100
01:30:42,780 --> 01:30:45,060
good I we were primarily interested in

2101
01:30:45,060 --> 01:30:48,360
pitch and search copy was yeah we can do

2102
01:30:48,360 --> 01:30:52,920
it uh yeah yeah so if we don't make copy

2103
01:30:52,920 --> 01:30:56,040
um sorry yeah all right if we don't do

2104
01:30:56,040 --> 01:30:57,540
this bit to copy and we just make them

2105
01:30:57,540 --> 01:31:00,540
fetch that's a lot safer yes

2106
01:31:00,540 --> 01:31:03,120
and and what I'm thinking that we might

2107
01:31:03,120 --> 01:31:05,100
do with copy is have it sort of a

2108
01:31:05,100 --> 01:31:07,739
checkpointable uh it might be part of

2109
01:31:07,739 --> 01:31:10,440
this it could be a separate uh document

2110
01:31:10,440 --> 01:31:12,480
but

2111
01:31:12,480 --> 01:31:15,659
um where the the server the server just

2112
01:31:15,659 --> 01:31:17,580
sends a checkpoint every thousand

2113
01:31:17,580 --> 01:31:19,920
messages or something that says these

2114
01:31:19,920 --> 01:31:22,199
were copied okay these were copied okay

2115
01:31:22,199 --> 01:31:24,540
so the client doesn't have to retry it

2116
01:31:24,540 --> 01:31:26,880
but if there's a problem and it crashes

2117
01:31:26,880 --> 01:31:29,280
in the middle the client knows some of

2118
01:31:29,280 --> 01:31:32,100
the messages were successfully copied so

2119
01:31:32,100 --> 01:31:34,139
we can have that kind of thing that

2120
01:31:34,139 --> 01:31:36,120
doesn't require the client to go keep

2121
01:31:36,120 --> 01:31:38,820
sending command after command but lets

2122
01:31:38,820 --> 01:31:40,260
it be recoverable

2123
01:31:40,260 --> 01:31:42,179
okay so in order to work on something

2124
01:31:42,179 --> 01:31:45,179
right so the proposal is not to break

2125
01:31:45,179 --> 01:31:48,120
copy command atomicity and invent the

2126
01:31:48,120 --> 01:31:49,679
different mechanism just to report the

2127
01:31:49,679 --> 01:31:52,020
state partial status yeah we might think

2128
01:31:52,020 --> 01:31:54,300
about that and so then this would only

2129
01:31:54,300 --> 01:31:56,219
apply to fetch and search and we'd come

2130
01:31:56,219 --> 01:31:59,460
up with a different solution for copy

2131
01:31:59,460 --> 01:32:02,420
yeah yeah

2132
01:32:03,360 --> 01:32:05,520
anyway let's say so I've said what I

2133
01:32:05,520 --> 01:32:07,260
need okay

2134
01:32:07,260 --> 01:32:09,960
yeah this is kind of I I want to clarify

2135
01:32:09,960 --> 01:32:11,880
we are still going to allow a server to

2136
01:32:11,880 --> 01:32:14,880
return no message limit on a copy if

2137
01:32:14,880 --> 01:32:16,560
it's too large for the server to handle

2138
01:32:16,560 --> 01:32:17,520
correct

2139
01:32:17,520 --> 01:32:19,560
I know we're not going to do the client

2140
01:32:19,560 --> 01:32:22,260
side weirdness where we can do part of

2141
01:32:22,260 --> 01:32:24,060
the copy but the server can still say

2142
01:32:24,060 --> 01:32:25,739
I'm not doing this because you've asked

2143
01:32:25,739 --> 01:32:27,659
for too many copies and return this

2144
01:32:27,659 --> 01:32:30,120
message okay I think we we are going

2145
01:32:30,120 --> 01:32:33,239
back to the second option uit copy will

2146
01:32:33,239 --> 01:32:35,159
fail with no message limit copying

2147
01:32:35,159 --> 01:32:38,219
nothing correct so the atomicity uh

2148
01:32:38,219 --> 01:32:39,900
promises not

2149
01:32:39,900 --> 01:32:42,600
violated and it's much quicker to abort

2150
01:32:42,600 --> 01:32:44,460
the yeah I just want to clarify that the

2151
01:32:44,460 --> 01:32:46,560
the Response Code will still apply to

2152
01:32:46,560 --> 01:32:49,199
copy yes

2153
01:32:49,199 --> 01:32:51,239
I think for consistency is right it has

2154
01:32:51,239 --> 01:32:52,679
to right and then it's just that the

2155
01:32:52,679 --> 01:32:54,659
client would have to figure out how to

2156
01:32:54,659 --> 01:32:56,940
get around it yeah

2157
01:32:56,940 --> 01:32:58,980
okay that's right and and we will think

2158
01:32:58,980 --> 01:32:59,880
about

2159
01:32:59,880 --> 01:33:02,400
an alternative for copy that works out

2160
01:33:02,400 --> 01:33:05,400
better for vikram's uh right and in

2161
01:33:05,400 --> 01:33:07,380
theory we can probably take out the

2162
01:33:07,380 --> 01:33:10,679
enable message limit because it's no

2163
01:33:10,679 --> 01:33:14,000
needed if we go this way

2164
01:33:14,280 --> 01:33:16,679
okay so what we are saying is we are

2165
01:33:16,679 --> 01:33:19,440
just going to the copy will either fail

2166
01:33:19,440 --> 01:33:20,960
or succeed

2167
01:33:20,960 --> 01:33:24,420
copyables fail right with message limits

2168
01:33:24,420 --> 01:33:28,020
so the uid copy no message limit

2169
01:33:28,020 --> 01:33:29,880
so it will always fail and it will fail

2170
01:33:29,880 --> 01:33:32,460
quickly and the client will need to to

2171
01:33:32,460 --> 01:33:34,159
do in smaller chunks

2172
01:33:34,159 --> 01:33:37,560
it'll be up to the client to send

2173
01:33:37,560 --> 01:33:40,560
smaller copies which if they're using

2174
01:33:40,560 --> 01:33:42,840
uids may be a little harder for them to

2175
01:33:42,840 --> 01:33:44,880
figure out the range the size of the

2176
01:33:44,880 --> 01:33:46,620
range but it shouldn't be a big deal

2177
01:33:46,620 --> 01:33:48,780
okay no no client should be able to

2178
01:33:48,780 --> 01:33:50,940
figure out with for the uid ranges is

2179
01:33:50,940 --> 01:33:53,820
what we think because McLean should

2180
01:33:53,820 --> 01:33:55,920
already have all the uids downloaded so

2181
01:33:55,920 --> 01:33:57,540
they should know the range when they are

2182
01:33:57,540 --> 01:34:00,360
asking for it well not necessarily the

2183
01:34:00,360 --> 01:34:03,420
client may not have fetched all of it

2184
01:34:03,420 --> 01:34:06,300
so the client knows the client knows how

2185
01:34:06,300 --> 01:34:07,920
many message IDs there are but it

2186
01:34:07,920 --> 01:34:10,679
doesn't know uh the uid range is

2187
01:34:10,679 --> 01:34:12,780
necessarily most of them do but they

2188
01:34:12,780 --> 01:34:14,100
don't have to

2189
01:34:14,100 --> 01:34:16,620
but that's okay I mean the client will

2190
01:34:16,620 --> 01:34:19,159
just have to be able to figure that out

2191
01:34:19,159 --> 01:34:22,920
sure okay okay so

2192
01:34:22,920 --> 01:34:24,659
hold on I'm just trying to make sure

2193
01:34:24,659 --> 01:34:28,020
that we all uh recovered all the basis

2194
01:34:28,020 --> 01:34:29,159
um

2195
01:34:29,159 --> 01:34:31,800
basically unextended client will be

2196
01:34:31,800 --> 01:34:33,900
unable to copy Lodge

2197
01:34:33,900 --> 01:34:36,659
message sets right

2198
01:34:36,659 --> 01:34:39,600
and that's annoying but it's kind of a

2199
01:34:39,600 --> 01:34:43,159
safer Behavior anyway

2200
01:34:43,320 --> 01:34:45,480
you okay with that

2201
01:34:45,480 --> 01:34:49,320
yeah we are okay yeah we can make that

2202
01:34:49,320 --> 01:34:52,020
we need to be partial it's easier for us

2203
01:34:52,020 --> 01:34:54,440
as well

2204
01:34:55,080 --> 01:34:57,420
and then independently we can also do

2205
01:34:57,420 --> 01:34:59,820
the thing that for but that actually can

2206
01:34:59,820 --> 01:35:02,040
be a separate thing anyway because it's

2207
01:35:02,040 --> 01:35:04,380
it can be used without without message

2208
01:35:04,380 --> 01:35:05,760
limit

2209
01:35:05,760 --> 01:35:07,920
foreign

2210
01:35:07,920 --> 01:35:10,920
okay yeah I suppose so

2211
01:35:10,920 --> 01:35:14,520
well more drafts you know great

2212
01:35:14,520 --> 01:35:16,739
okay

2213
01:35:16,739 --> 01:35:20,340
uh well thank you all I think this was

2214
01:35:20,340 --> 01:35:23,000
useful

2215
01:35:25,940 --> 01:35:28,679
there are actually a few more things

2216
01:35:28,679 --> 01:35:30,780
that I just discovered

2217
01:35:30,780 --> 01:35:34,020
okay well we kind of covered this uh uh

2218
01:35:34,020 --> 01:35:36,719
next slide please after that after this

2219
01:35:36,719 --> 01:35:40,080
one yeah already uh said that yeah keep

2220
01:35:40,080 --> 01:35:41,760
saying

2221
01:35:41,760 --> 01:35:43,260
um

2222
01:35:43,260 --> 01:35:45,840
well

2223
01:35:45,840 --> 01:35:48,060
this is something strictly speaking we

2224
01:35:48,060 --> 01:35:49,679
don't need to do this but this is kind

2225
01:35:49,679 --> 01:35:51,000
of cute

2226
01:35:51,000 --> 01:35:53,100
Maybe

2227
01:35:53,100 --> 01:35:54,000
um

2228
01:35:54,000 --> 01:35:56,060
and

2229
01:35:56,060 --> 01:35:59,040
guess what I found this keyword uh

2230
01:35:59,040 --> 01:36:03,120
actually such criteria in imaps

2231
01:36:03,120 --> 01:36:06,019
version three

2232
01:36:06,120 --> 01:36:07,080
um

2233
01:36:07,080 --> 01:36:08,940
so somebody already thought of this you

2234
01:36:08,940 --> 01:36:12,620
know years ago next slide

2235
01:36:12,719 --> 01:36:14,300
well

2236
01:36:14,300 --> 01:36:17,280
there is example ah

2237
01:36:17,280 --> 01:36:21,360
okay it might be a bit obscure but

2238
01:36:21,360 --> 01:36:23,400
um

2239
01:36:23,400 --> 01:36:27,620
basically at the moment

2240
01:36:28,020 --> 01:36:30,960
uh if there is no uid before uid after

2241
01:36:30,960 --> 01:36:32,880
what you need to do is

2242
01:36:32,880 --> 01:36:35,580
uh let's say you want to you know find

2243
01:36:35,580 --> 01:36:37,560
the message based on criteria and then

2244
01:36:37,560 --> 01:36:40,739
do a page from it either

2245
01:36:40,739 --> 01:36:42,840
so the bottom of the mailbox or to the

2246
01:36:42,840 --> 01:36:43,980
top

2247
01:36:43,980 --> 01:36:46,620
you can you have to do this by doing a

2248
01:36:46,620 --> 01:36:48,300
search

2249
01:36:48,300 --> 01:36:51,360
getting uh the uid back from the server

2250
01:36:51,360 --> 01:36:52,620
as a number

2251
01:36:52,620 --> 01:36:54,480
then constructing another search

2252
01:36:54,480 --> 01:36:58,260
obviously you cannot pipeline it

2253
01:36:58,260 --> 01:36:59,520
um

2254
01:36:59,520 --> 01:37:01,800
with this you can actually pipeline the

2255
01:37:01,800 --> 01:37:03,840
two searches command you say

2256
01:37:03,840 --> 01:37:05,520
first you get the you know whatever

2257
01:37:05,520 --> 01:37:06,960
you're searching for you find your

2258
01:37:06,960 --> 01:37:09,199
message

2259
01:37:09,239 --> 01:37:12,239
uh using the save option you say that

2260
01:37:12,239 --> 01:37:14,159
dollar becomes this message that you

2261
01:37:14,159 --> 01:37:15,900
found

2262
01:37:15,900 --> 01:37:20,059
and then you can say well I want

2263
01:37:22,380 --> 01:37:24,420
all the uids from the beginning of

2264
01:37:24,420 --> 01:37:26,880
mailbox up to this one but actually

2265
01:37:26,880 --> 01:37:29,219
because you say partial you you only say

2266
01:37:29,219 --> 01:37:32,280
I only want 50. of these

2267
01:37:32,280 --> 01:37:34,199
so it's kind of a you know slightly

2268
01:37:34,199 --> 01:37:37,380
funny way of doing the range

2269
01:37:37,380 --> 01:37:39,500
um

2270
01:37:44,280 --> 01:37:47,420
do we want to do this

2271
01:37:48,840 --> 01:37:51,659
yeah but do we want is the question I I

2272
01:37:51,659 --> 01:37:53,520
probably can construct an easy example

2273
01:37:53,520 --> 01:37:55,860
than this you know it looks clever

2274
01:37:55,860 --> 01:37:57,780
yeah is anybody really going to

2275
01:37:57,780 --> 01:37:59,460
implement this and care about it so

2276
01:37:59,460 --> 01:38:01,380
that's really the question

2277
01:38:01,380 --> 01:38:03,659
all right what happened

2278
01:38:03,659 --> 01:38:04,380
um

2279
01:38:04,380 --> 01:38:06,719
I'm writing Webmail server and actually

2280
01:38:06,719 --> 01:38:10,860
the way we do it is sometimes

2281
01:38:10,860 --> 01:38:14,040
I find actually the lowest message

2282
01:38:14,040 --> 01:38:17,340
which is non-deleted non-junk

2283
01:38:17,340 --> 01:38:19,739
I get your idea of it and then I get a

2284
01:38:19,739 --> 01:38:22,459
page from it

2285
01:38:22,500 --> 01:38:24,420
that would be an easier way of doing

2286
01:38:24,420 --> 01:38:26,639
this

2287
01:38:26,639 --> 01:38:29,340
again it's kind of cute you know can be

2288
01:38:29,340 --> 01:38:31,800
a separate extension uh

2289
01:38:31,800 --> 01:38:34,820
what do people think

2290
01:38:37,260 --> 01:38:39,420
I I don't object to it if there are

2291
01:38:39,420 --> 01:38:40,620
clients who are going to want to

2292
01:38:40,620 --> 01:38:43,380
implement it but that's that's the

2293
01:38:43,380 --> 01:38:45,360
question are we going to just write this

2294
01:38:45,360 --> 01:38:48,000
up because it's cool and then no clients

2295
01:38:48,000 --> 01:38:50,040
are going to bother with it

2296
01:38:50,040 --> 01:38:51,840
in which case I would say we shouldn't

2297
01:38:51,840 --> 01:38:54,440
waste our time

2298
01:38:58,020 --> 01:38:59,820
okay how about

2299
01:38:59,820 --> 01:39:01,920
um I'll play with this and if I find

2300
01:39:01,920 --> 01:39:04,139
that it's useful with my you know server

2301
01:39:04,139 --> 01:39:05,820
and the client then I will write it up

2302
01:39:05,820 --> 01:39:08,100
but at the moment not as a part of this

2303
01:39:08,100 --> 01:39:09,840
document so maybe it will be a separate

2304
01:39:09,840 --> 01:39:11,960
one

2305
01:39:12,060 --> 01:39:14,400
cool

2306
01:39:14,400 --> 01:39:17,420
next slide

2307
01:39:19,620 --> 01:39:21,780
oh yes

2308
01:39:21,780 --> 01:39:23,940
the wonders of IMAP there are so many

2309
01:39:23,940 --> 01:39:25,560
extensions there are always so many

2310
01:39:25,560 --> 01:39:27,540
interactions between them

2311
01:39:27,540 --> 01:39:30,179
so as it happened actually I just

2312
01:39:30,179 --> 01:39:31,920
realized after writing this example I

2313
01:39:31,920 --> 01:39:34,440
realized message limit and search res or

2314
01:39:34,440 --> 01:39:37,320
IMAP 4f to have an interaction

2315
01:39:37,320 --> 01:39:38,699
because What's

2316
01:39:38,699 --> 01:39:40,500
um

2317
01:39:40,500 --> 01:39:42,719
the way message limit is written at the

2318
01:39:42,719 --> 01:39:43,920
moment

2319
01:39:43,920 --> 01:39:47,280
if you do a search and include partial

2320
01:39:47,280 --> 01:39:49,440
but the range is bigger than the message

2321
01:39:49,440 --> 01:39:50,520
limit

2322
01:39:50,520 --> 01:39:54,080
the search will succeed

2323
01:39:54,420 --> 01:39:56,340
actually I'm missing some results you

2324
01:39:56,340 --> 01:39:57,900
know returning

2325
01:39:57,900 --> 01:39:59,280
um

2326
01:39:59,280 --> 01:40:00,840
but it will return message limit

2327
01:40:00,840 --> 01:40:03,239
Response Code

2328
01:40:03,239 --> 01:40:06,120
I think basically I would like to say

2329
01:40:06,120 --> 01:40:08,460
that the save option in this case

2330
01:40:08,460 --> 01:40:10,260
interact with message limit by

2331
01:40:10,260 --> 01:40:12,239
truncating the result to the message

2332
01:40:12,239 --> 01:40:15,739
limit to make it clear

2333
01:40:16,620 --> 01:40:18,120
again

2334
01:40:18,120 --> 01:40:19,500
if you're only implementing message

2335
01:40:19,500 --> 01:40:21,600
limit and not search rest then you don't

2336
01:40:21,600 --> 01:40:23,159
care

2337
01:40:23,159 --> 01:40:26,400
or vice versa

2338
01:40:26,400 --> 01:40:29,219
yeah it seems to me that you save what

2339
01:40:29,219 --> 01:40:31,139
you found so if you return to partial

2340
01:40:31,139 --> 01:40:32,400
thing you say if there are the partial

2341
01:40:32,400 --> 01:40:34,620
thing that you returned right and if you

2342
01:40:34,620 --> 01:40:36,480
reject if you fail this uh the search

2343
01:40:36,480 --> 01:40:38,520
then you don't save anything but so it's

2344
01:40:38,520 --> 01:40:40,260
very consistent with how search was

2345
01:40:40,260 --> 01:40:42,179
written so yeah

2346
01:40:42,179 --> 01:40:43,320
okay

2347
01:40:43,320 --> 01:40:45,920
next

2348
01:40:48,360 --> 01:40:51,840
so obviously the the last thing I just

2349
01:40:51,840 --> 01:40:54,060
talked about needs to be fixed in this

2350
01:40:54,060 --> 01:40:56,300
pack

2351
01:40:56,760 --> 01:41:00,380
um are people interested in implementing

2352
01:41:02,159 --> 01:41:04,380
well I know that Yahoo has an

2353
01:41:04,380 --> 01:41:06,840
implementation but uh

2354
01:41:06,840 --> 01:41:08,820
I might play it play with the client

2355
01:41:08,820 --> 01:41:10,500
side as well but it kind of would be

2356
01:41:10,500 --> 01:41:13,460
interesting to know if

2357
01:41:18,000 --> 01:41:19,920
do you get the client said oh you want

2358
01:41:19,920 --> 01:41:22,760
to do the server side

2359
01:41:26,219 --> 01:41:28,320
will have a use for this or is it again

2360
01:41:28,320 --> 01:41:31,699
like kind of performance thing

2361
01:41:36,800 --> 01:41:39,300
this is Ken we could certainly have been

2362
01:41:39,300 --> 01:41:40,619
letting the Cyrus server I don't think

2363
01:41:40,619 --> 01:41:42,300
we'd be using it as FastMail at least

2364
01:41:42,300 --> 01:41:45,300
not in the short term unless some client

2365
01:41:45,300 --> 01:41:46,860
comes along that's just bombarding us

2366
01:41:46,860 --> 01:41:48,840
with huge requests

2367
01:41:48,840 --> 01:41:50,580
so inside us is just going to be an

2368
01:41:50,580 --> 01:41:52,139
option that you enable and then you say

2369
01:41:52,139 --> 01:41:55,020
message yeah it'd be admin configurable

2370
01:41:55,020 --> 01:41:56,699
option that says you know we're gonna

2371
01:41:56,699 --> 01:41:58,860
openly limit it to a thousand or ten

2372
01:41:58,860 --> 01:42:00,239
thousand or what have you

2373
01:42:00,239 --> 01:42:04,380
yeah if you if you can't do it uh

2374
01:42:04,380 --> 01:42:06,480
reasonably soon and provide some

2375
01:42:06,480 --> 01:42:08,520
feedback whether you find any uh

2376
01:42:08,520 --> 01:42:10,320
anything wrong with this pack that would

2377
01:42:10,320 --> 01:42:12,000
be great I think I'm gonna have a fairly

2378
01:42:12,000 --> 01:42:13,920
light load between Thanksgiving and

2379
01:42:13,920 --> 01:42:15,659
Christmas so I can probably throw it in

2380
01:42:15,659 --> 01:42:17,040
there just make sure you ping me and

2381
01:42:17,040 --> 01:42:18,300
remind me

2382
01:42:18,300 --> 01:42:20,780
okay

2383
01:42:20,940 --> 01:42:24,980
is your boss agreeing to this yeah sure

2384
01:42:25,139 --> 01:42:28,940
it's awesome it's boss's boss

2385
01:42:29,940 --> 01:42:31,500
I've got eight hours on the plane back

2386
01:42:31,500 --> 01:42:34,739
I'll make a little do it then okay

2387
01:42:34,739 --> 01:42:36,420
sounds good to me

2388
01:42:36,420 --> 01:42:38,060
yeah

2389
01:42:38,060 --> 01:42:42,540
uh the action is for Alexa I guess next

2390
01:42:42,540 --> 01:42:44,460
do another revision then wait for

2391
01:42:44,460 --> 01:42:46,080
implementations

2392
01:42:46,080 --> 01:42:47,820
yes so

2393
01:42:47,820 --> 01:42:51,480
um I think I suggested to Vikram that uh

2394
01:42:51,480 --> 01:42:53,880
we do some interrupt testing

2395
01:42:53,880 --> 01:42:56,159
in early December

2396
01:42:56,159 --> 01:42:59,580
yeah we already scheduled one

2397
01:42:59,580 --> 01:43:02,520
yeah so uh and I think

2398
01:43:02,520 --> 01:43:04,199
some other companies will have

2399
01:43:04,199 --> 01:43:07,260
client-side implementations right if you

2400
01:43:07,260 --> 01:43:09,360
want to announce it more widely you can

2401
01:43:09,360 --> 01:43:11,159
but or not

2402
01:43:11,159 --> 01:43:14,460
or later we'll figure it out okay sounds

2403
01:43:14,460 --> 01:43:17,040
good thank you

2404
01:43:17,040 --> 01:43:19,500
okay all right

2405
01:43:19,500 --> 01:43:22,280
all right thank you

2406
01:43:24,000 --> 01:43:26,400
back on

2407
01:43:26,400 --> 01:43:30,119
chair slides again I think this

2408
01:43:30,119 --> 01:43:32,900
we should at least briefly talk through

2409
01:43:32,900 --> 01:43:38,000
Civ snooze and see if process imip

2410
01:43:39,360 --> 01:43:42,540
uh uh I will address process I'm at

2411
01:43:42,540 --> 01:43:44,400
first because I don't think there's any

2412
01:43:44,400 --> 01:43:47,580
else any issues we've got running code

2413
01:43:47,580 --> 01:43:49,619
in production I think at least

2414
01:43:49,619 --> 01:43:51,060
functionally it does what we want it to

2415
01:43:51,060 --> 01:43:52,320
do

2416
01:43:52,320 --> 01:43:54,060
um so I'm I'm ready to go to ask a call

2417
01:43:54,060 --> 01:43:55,619
on that unless there's

2418
01:43:55,619 --> 01:43:58,080
different opinions in the room

2419
01:43:58,080 --> 01:44:01,139
um as far as sifts news goes I don't see

2420
01:44:01,139 --> 01:44:03,659
Pete in the room but he he had an issue

2421
01:44:03,659 --> 01:44:05,280
with a presentation of my colleague Rick

2422
01:44:05,280 --> 01:44:08,460
did about implementing snooze via IMAP

2423
01:44:08,460 --> 01:44:11,760
uh in regards to having a special

2424
01:44:11,760 --> 01:44:13,679
purpose mailbox

2425
01:44:13,679 --> 01:44:16,860
and that is kind of what Sif snooze is

2426
01:44:16,860 --> 01:44:19,380
doing and I asked Pete to review that

2427
01:44:19,380 --> 01:44:21,540
document I don't know if he has and if

2428
01:44:21,540 --> 01:44:23,940
he has I haven't heard back so I will

2429
01:44:23,940 --> 01:44:26,760
bother him in email core about that

2430
01:44:26,760 --> 01:44:30,440
and see where we stand

2431
01:44:31,199 --> 01:44:32,760
that's all I have on those unless

2432
01:44:32,760 --> 01:44:34,500
there's questions on either of those two

2433
01:44:34,500 --> 01:44:36,800
dress

2434
01:44:39,179 --> 01:44:41,940
all right thank you I've got an action

2435
01:44:41,940 --> 01:44:44,639
to do the last call for process Summit

2436
01:44:44,639 --> 01:44:47,880
uh the last thing that we had on the

2437
01:44:47,880 --> 01:44:50,880
agenda is from me which is the jmf

2438
01:44:50,880 --> 01:44:53,480
upgrade pass

2439
01:44:53,699 --> 01:44:58,159
so I have created some slides for this

2440
01:45:00,239 --> 01:45:02,219
and I'm just going to do it from here

2441
01:45:02,219 --> 01:45:05,159
so basically the problem here is that

2442
01:45:05,159 --> 01:45:06,600
there's millions of existing IMAP

2443
01:45:06,600 --> 01:45:08,340
clients out there which connect to IMAP

2444
01:45:08,340 --> 01:45:10,500
servers and people are accessing their

2445
01:45:10,500 --> 01:45:12,540
email through them we would love them to

2446
01:45:12,540 --> 01:45:15,060
upgrade to Jam app and we would not love

2447
01:45:15,060 --> 01:45:17,119
them to have to read credential

2448
01:45:17,119 --> 01:45:19,199
re-authenticate refiddle with their

2449
01:45:19,199 --> 01:45:20,580
settings ideally

2450
01:45:20,580 --> 01:45:22,739
also

2451
01:45:22,739 --> 01:45:24,840
for quite a while probably people will

2452
01:45:24,840 --> 01:45:27,719
have these clients connecting to servers

2453
01:45:27,719 --> 01:45:30,600
that may support both IMAP and jmap

2454
01:45:30,600 --> 01:45:33,420
and may want to add new features

2455
01:45:33,420 --> 01:45:36,239
by making a jam up call to access the

2456
01:45:36,239 --> 01:45:37,860
new feature without replacing their

2457
01:45:37,860 --> 01:45:40,139
existing IMAP synchronization code which

2458
01:45:40,139 --> 01:45:41,639
is working perfectly and beautifully and

2459
01:45:41,639 --> 01:45:43,580
has zero bugs

2460
01:45:43,580 --> 01:45:46,500
to that end

2461
01:45:46,500 --> 01:45:48,119
I've been looking at what you would do

2462
01:45:48,119 --> 01:45:49,020
here

2463
01:45:49,020 --> 01:45:50,940
if your IMAP server had object ID

2464
01:45:50,940 --> 01:45:52,739
support and you already knew the IDS for

2465
01:45:52,739 --> 01:45:54,719
every single email which there might be

2466
01:45:54,719 --> 01:45:56,219
some things that you would want to do

2467
01:45:56,219 --> 01:45:58,199
via jmap

2468
01:45:58,199 --> 01:46:00,420
to manipulate those messages while still

2469
01:46:00,420 --> 01:46:03,119
keeping the synchronization code and

2470
01:46:03,119 --> 01:46:04,860
that means you need some way of of

2471
01:46:04,860 --> 01:46:07,380
saying how to access this same mailbox

2472
01:46:07,380 --> 01:46:10,139
you can take this thing off via

2473
01:46:10,139 --> 01:46:12,480
jmap as well

2474
01:46:12,480 --> 01:46:14,639
um another good use case here is that

2475
01:46:14,639 --> 01:46:16,980
IMAP doesn't have a good way to get

2476
01:46:16,980 --> 01:46:19,139
changes across your entire set of

2477
01:46:19,139 --> 01:46:23,340
mailboxes uh so you could use jmap just

2478
01:46:23,340 --> 01:46:25,320
for the push connected by jam up say

2479
01:46:25,320 --> 01:46:27,179
credit push subscription send me

2480
01:46:27,179 --> 01:46:30,119
messages about changes this mailbox and

2481
01:46:30,119 --> 01:46:31,920
then if you get a triggered through that

2482
01:46:31,920 --> 01:46:33,600
saying something's changed then do an

2483
01:46:33,600 --> 01:46:35,219
IMAP synchronization rather than having

2484
01:46:35,219 --> 01:46:37,860
to keep an idle connection open and

2485
01:46:37,860 --> 01:46:39,420
obviously the final case is the full

2486
01:46:39,420 --> 01:46:41,100
upgrade if you have a server that

2487
01:46:41,100 --> 01:46:43,260
supports both IMAP and jmap and you

2488
01:46:43,260 --> 01:46:44,639
already have an existing IMAP connection

2489
01:46:44,639 --> 01:46:46,800
to it you might want to change that to a

2490
01:46:46,800 --> 01:46:48,900
jam up connection I know there are

2491
01:46:48,900 --> 01:46:50,280
clients that already do that kind of

2492
01:46:50,280 --> 01:46:52,380
thing with some IMAP servers where they

2493
01:46:52,380 --> 01:46:54,060
switch from having a password to having

2494
01:46:54,060 --> 01:46:56,040
an oauth connection and they ask the

2495
01:46:56,040 --> 01:46:59,040
server using proprietary methods to say

2496
01:46:59,040 --> 01:47:00,780
please convert this password into an

2497
01:47:00,780 --> 01:47:03,000
oauth token and then I'll save that and

2498
01:47:03,000 --> 01:47:04,560
go ahead with that

2499
01:47:04,560 --> 01:47:06,239
um

2500
01:47:06,239 --> 01:47:08,340
so there's a few possibilities for what

2501
01:47:08,340 --> 01:47:10,800
you could do here you could have a a URI

2502
01:47:10,800 --> 01:47:12,900
for jmap that has all the entropy in it

2503
01:47:12,900 --> 01:47:15,659
already so rather than having to

2504
01:47:15,659 --> 01:47:17,460
authenticate against it at all it's just

2505
01:47:17,460 --> 01:47:19,800
a secret URI

2506
01:47:19,800 --> 01:47:22,679
um you could require oauth for the IMAP

2507
01:47:22,679 --> 01:47:25,500
and just say use the same token via jmap

2508
01:47:25,500 --> 01:47:27,360
as well

2509
01:47:27,360 --> 01:47:29,699
or you could have the connection return

2510
01:47:29,699 --> 01:47:33,420
both the URI and a token and say connect

2511
01:47:33,420 --> 01:47:36,000
this URI using this token and do jmap

2512
01:47:36,000 --> 01:47:37,500
with that

2513
01:47:37,500 --> 01:47:39,060
and then this question of whether you

2514
01:47:39,060 --> 01:47:41,820
need to pop up a consent screen

2515
01:47:41,820 --> 01:47:45,480
um and have some will you allow this

2516
01:47:45,480 --> 01:47:47,520
client to connect

2517
01:47:47,520 --> 01:47:49,860
using the same way that you do with any

2518
01:47:49,860 --> 01:47:51,540
other OS connection

2519
01:47:51,540 --> 01:47:54,300
um because it may actually appear as a

2520
01:47:54,300 --> 01:47:56,340
connected device in in the UI of your

2521
01:47:56,340 --> 01:47:58,619
server if it depending how it stores

2522
01:47:58,619 --> 01:48:01,320
things so is there any confusion there

2523
01:48:01,320 --> 01:48:03,239
that's kind of an unanswered question at

2524
01:48:03,239 --> 01:48:04,860
this point for that

2525
01:48:04,860 --> 01:48:06,480
Barry

2526
01:48:06,480 --> 01:48:09,659
just uh what what's the benefit of

2527
01:48:09,659 --> 01:48:12,840
basically the URI is a bearer token

2528
01:48:12,840 --> 01:48:15,540
yeah so what's the benefit of having two

2529
01:48:15,540 --> 01:48:19,080
Bearer tokens uh if you don't give a

2530
01:48:19,080 --> 01:48:21,360
special URI per user

2531
01:48:21,360 --> 01:48:22,080
um

2532
01:48:22,080 --> 01:48:24,119
and you just send people to the regular

2533
01:48:24,119 --> 01:48:26,280
jmap URI

2534
01:48:26,280 --> 01:48:27,960
and give them a token instead there's

2535
01:48:27,960 --> 01:48:31,199
some examples that's that's two right

2536
01:48:31,199 --> 01:48:32,580
because

2537
01:48:32,580 --> 01:48:34,920
what what is number three number three

2538
01:48:34,920 --> 01:48:37,020
is like number two but instead of saying

2539
01:48:37,020 --> 01:48:39,360
that you have to use oauth via IMAP with

2540
01:48:39,360 --> 01:48:41,100
a bearer token that you're using for

2541
01:48:41,100 --> 01:48:42,780
IMAP connection use that same token

2542
01:48:42,780 --> 01:48:45,239
instead in number three you return a

2543
01:48:45,239 --> 01:48:47,159
token and say use this one which may be

2544
01:48:47,159 --> 01:48:48,840
the same token or it may be something

2545
01:48:48,840 --> 01:48:51,780
generated specifically if you have a

2546
01:48:51,780 --> 01:48:53,460
password connection number three is

2547
01:48:53,460 --> 01:48:56,159
certainly the the most flexible of the

2548
01:48:56,159 --> 01:48:58,139
token based one and number one is the

2549
01:48:58,139 --> 01:49:00,840
easiest because you're creating a URL

2550
01:49:00,840 --> 01:49:02,820
with a token in it

2551
01:49:02,820 --> 01:49:05,159
um then the client needs no smarts at

2552
01:49:05,159 --> 01:49:06,659
all just go here

2553
01:49:06,659 --> 01:49:09,719
and and make a call

2554
01:49:09,719 --> 01:49:12,860
all right so

2555
01:49:15,480 --> 01:49:17,580
one possibility is to separate things

2556
01:49:17,580 --> 01:49:19,800
out and to say

2557
01:49:19,800 --> 01:49:22,080
um in the IMAP connection or via some

2558
01:49:22,080 --> 01:49:24,060
other endpoint I have this username and

2559
01:49:24,060 --> 01:49:25,800
password please convert it into an oauth

2560
01:49:25,800 --> 01:49:28,260
token for me so you could just say get

2561
01:49:28,260 --> 01:49:30,659
oauth or whatever in your own connection

2562
01:49:30,659 --> 01:49:33,060
and it returns saying this username this

2563
01:49:33,060 --> 01:49:36,840
token you have an oauth token

2564
01:49:36,840 --> 01:49:38,699
and then I've done some examples for

2565
01:49:38,699 --> 01:49:41,699
gmap loss if that's readable up there

2566
01:49:41,699 --> 01:49:44,880
you could say no you could say yes

2567
01:49:44,880 --> 01:49:47,639
here's that example number one his his

2568
01:49:47,639 --> 01:49:49,440
uh a path

2569
01:49:49,440 --> 01:49:51,119
with

2570
01:49:51,119 --> 01:49:54,360
the token at number two I see a rather

2571
01:49:54,360 --> 01:49:57,540
than just giving the the gem up URI I

2572
01:49:57,540 --> 01:49:59,880
gave both which yeah okay that's wrong

2573
01:49:59,880 --> 01:50:01,920
that should just be slash Jam app in

2574
01:50:01,920 --> 01:50:02,760
that case

2575
01:50:02,760 --> 01:50:05,460
and then the third one was just use your

2576
01:50:05,460 --> 01:50:07,020
same token please

2577
01:50:07,020 --> 01:50:09,360
so that those examples are reversed this

2578
01:50:09,360 --> 01:50:10,500
is what I get for writing the slides

2579
01:50:10,500 --> 01:50:13,460
five minutes beforehand

2580
01:50:13,500 --> 01:50:15,480
some examples anyway different ways this

2581
01:50:15,480 --> 01:50:17,699
could be done

2582
01:50:17,699 --> 01:50:21,420
do people think this is worthwhile work

2583
01:50:21,420 --> 01:50:23,880
um should we do a separate get the oauth

2584
01:50:23,880 --> 01:50:27,600
token or should we return both together

2585
01:50:27,600 --> 01:50:30,420
uh should it be inbound in IMAP or using

2586
01:50:30,420 --> 01:50:32,760
some different endpoint these are the

2587
01:50:32,760 --> 01:50:35,780
big questions can

2588
01:50:37,020 --> 01:50:40,679
this is Ken I I think it's worthwhile I

2589
01:50:40,679 --> 01:50:42,239
don't want to do too much bike shedding

2590
01:50:42,239 --> 01:50:43,619
here I'm just wondering is there any

2591
01:50:43,619 --> 01:50:46,980
reason to not just put the URI in the

2592
01:50:46,980 --> 01:50:49,860
capabilities post IMAP authentication as

2593
01:50:49,860 --> 01:50:52,440
opposed to having a separate command for

2594
01:50:52,440 --> 01:50:55,339
the client to fetch it

2595
01:50:56,400 --> 01:50:58,739
that it's a good question certainly if

2596
01:50:58,739 --> 01:50:59,940
it's

2597
01:50:59,940 --> 01:51:03,060
if you need to generate something for it

2598
01:51:03,060 --> 01:51:05,400
um then it's an expensive thing to

2599
01:51:05,400 --> 01:51:06,659
create if you don't know if it's wanted

2600
01:51:06,659 --> 01:51:09,840
or not uh if someone's logging in with a

2601
01:51:09,840 --> 01:51:11,340
username password you may be generating

2602
01:51:11,340 --> 01:51:13,560
an oauth session for them at the point

2603
01:51:13,560 --> 01:51:14,880
they request one of these things you

2604
01:51:14,880 --> 01:51:16,080
don't want to do one of them for every

2605
01:51:16,080 --> 01:51:19,159
single IMAP connection

2606
01:51:19,860 --> 01:51:21,659
hi assistant York

2607
01:51:21,659 --> 01:51:23,760
um yeah this is kind of interesting I

2608
01:51:23,760 --> 01:51:26,219
mean I um

2609
01:51:26,219 --> 01:51:30,300
and it rang a bell with me I mean I have

2610
01:51:30,300 --> 01:51:32,040
actually a different use case for that I

2611
01:51:32,040 --> 01:51:33,719
mean of course I see your use case here

2612
01:51:33,719 --> 01:51:35,159
but you know you have generally the use

2613
01:51:35,159 --> 01:51:36,659
case when you have a platform migration

2614
01:51:36,659 --> 01:51:39,000
and people switching um for instance to

2615
01:51:39,000 --> 01:51:39,960
another

2616
01:51:39,960 --> 01:51:42,000
um migrated server or something like

2617
01:51:42,000 --> 01:51:44,159
that so I wonder a little bit if there

2618
01:51:44,159 --> 01:51:45,600
is actually a little bit of a bigger

2619
01:51:45,600 --> 01:51:47,880
picture to this than this very specific

2620
01:51:47,880 --> 01:51:50,219
image to jmap use case and if it's worth

2621
01:51:50,219 --> 01:51:53,639
thinking about that in more detail

2622
01:51:53,639 --> 01:51:56,100
do you have any more right now or is

2623
01:51:56,100 --> 01:51:59,840
this whoa no I I need to

2624
01:51:59,840 --> 01:52:02,699
maybe first question is so what is the

2625
01:52:02,699 --> 01:52:04,920
goal of this so I I guess I mean you you

2626
01:52:04,920 --> 01:52:06,300
made up in the slides a little bit of a

2627
01:52:06,300 --> 01:52:09,179
bigger picture but I assume it's rather

2628
01:52:09,179 --> 01:52:11,280
smaller particular changes to the IMF

2629
01:52:11,280 --> 01:52:13,080
protocol like the gmap or also what you

2630
01:52:13,080 --> 01:52:15,719
suggest as an outcome of this right so

2631
01:52:15,719 --> 01:52:18,540
the the motivation behind this is that

2632
01:52:18,540 --> 01:52:20,340
there's a bunch of clients now who

2633
01:52:20,340 --> 01:52:22,800
support IMAP and would like to enable

2634
01:52:22,800 --> 01:52:24,659
some of the features that are J map only

2635
01:52:24,659 --> 01:52:26,460
but don't want to replace their entire

2636
01:52:26,460 --> 01:52:29,100
synchronization stack straight away so

2637
01:52:29,100 --> 01:52:31,739
this is a step in that direction so I

2638
01:52:31,739 --> 01:52:33,840
can add jmap support and

2639
01:52:33,840 --> 01:52:36,239
create the new features using jmap calls

2640
01:52:36,239 --> 01:52:38,219
without replacing their entire IMAP

2641
01:52:38,219 --> 01:52:40,260
stack immediately yeah okay but I mean

2642
01:52:40,260 --> 01:52:42,540
the general idea here is not so far away

2643
01:52:42,540 --> 01:52:44,100
from what I was thinking about maybe I

2644
01:52:44,100 --> 01:52:45,420
just need to think about it and come

2645
01:52:45,420 --> 01:52:46,860
back it on it on a meeting list or

2646
01:52:46,860 --> 01:52:49,460
something cool

2647
01:52:52,020 --> 01:52:52,940
um

2648
01:52:52,940 --> 01:52:54,900
aleximonic of a couple of random

2649
01:52:54,900 --> 01:52:59,460
questions uh comments one is uh IMAP had

2650
01:52:59,460 --> 01:53:00,900
the referral

2651
01:53:00,900 --> 01:53:04,440
extension which has a URI

2652
01:53:04,440 --> 01:53:08,340
that was like from 20 years ago

2653
01:53:08,340 --> 01:53:10,699
yeah

2654
01:53:10,699 --> 01:53:13,260
there is a server and there is a mailbox

2655
01:53:13,260 --> 01:53:16,440
and if it's a server one

2656
01:53:16,440 --> 01:53:18,300
we can just say

2657
01:53:18,300 --> 01:53:21,960
https URI is now legal

2658
01:53:21,960 --> 01:53:24,600
go there

2659
01:53:24,600 --> 01:53:25,679
um

2660
01:53:25,679 --> 01:53:27,960
so again I don't know whether it's a

2661
01:53:27,960 --> 01:53:29,360
good idea or not but we can have a look

2662
01:53:29,360 --> 01:53:33,199
the other thing is

2663
01:53:34,460 --> 01:53:37,679
if we are going there you automatically

2664
01:53:37,679 --> 01:53:41,840
generate all token when requested

2665
01:53:42,239 --> 01:53:44,239
um

2666
01:53:44,820 --> 01:53:47,100
I'm kind of a bit worried about this

2667
01:53:47,100 --> 01:53:50,219
because I think it goes against their

2668
01:53:50,219 --> 01:53:52,020
old philosophy

2669
01:53:52,020 --> 01:53:53,940
because if there is a user interaction

2670
01:53:53,940 --> 01:53:56,780
that is needed

2671
01:53:57,179 --> 01:53:58,980
How uh

2672
01:53:58,980 --> 01:54:01,260
what you're saying you always will get a

2673
01:54:01,260 --> 01:54:04,860
token or it will fail and then the user

2674
01:54:04,860 --> 01:54:07,739
might never see the

2675
01:54:07,739 --> 01:54:11,100
nice page saying that

2676
01:54:11,100 --> 01:54:12,960
you're connecting to this branded

2677
01:54:12,960 --> 01:54:15,300
service and all of the rest so I'm kind

2678
01:54:15,300 --> 01:54:17,960
of um

2679
01:54:18,540 --> 01:54:20,760
I'm not entirely sure whether it's in

2680
01:54:20,760 --> 01:54:22,860
spirit with oauth to be honest yeah that

2681
01:54:22,860 --> 01:54:24,179
was my question of whether we needed to

2682
01:54:24,179 --> 01:54:26,460
pop up the consent screen

2683
01:54:26,460 --> 01:54:29,820
that you do this

2684
01:54:29,820 --> 01:54:32,520
in which case in which case you are

2685
01:54:32,520 --> 01:54:34,139
actually what you're doing is you're

2686
01:54:34,139 --> 01:54:37,020
implementing just such a loss

2687
01:54:37,020 --> 01:54:39,300
and you know

2688
01:54:39,300 --> 01:54:41,520
and if you do then you will get a token

2689
01:54:41,520 --> 01:54:43,380
anyway so why do you need to stick it

2690
01:54:43,380 --> 01:54:46,520
there in in the first place

2691
01:54:46,739 --> 01:54:48,780
unless you maybe need to want to put

2692
01:54:48,780 --> 01:54:50,780
some or specific

2693
01:54:50,780 --> 01:54:53,280
configuration information in Amma

2694
01:54:53,280 --> 01:54:54,480
protocol because it's not always

2695
01:54:54,480 --> 01:54:56,040
available and you want to make it

2696
01:54:56,040 --> 01:54:58,619
workable with lots of clients and yeah

2697
01:54:58,619 --> 01:55:00,780
which like that sounds like an argument

2698
01:55:00,780 --> 01:55:03,420
for having the case that you have to be

2699
01:55:03,420 --> 01:55:05,760
using an oauth via IMAP already in which

2700
01:55:05,760 --> 01:55:08,040
case you can use the same token via jmap

2701
01:55:08,040 --> 01:55:11,719
as well yep yep

2702
01:55:12,600 --> 01:55:15,179
all right

2703
01:55:15,179 --> 01:55:18,780
hunts York again migration enthusiast

2704
01:55:18,780 --> 01:55:21,659
um hey we've got it's a very

2705
01:55:21,659 --> 01:55:24,659
enthusiastic iotf isn't it yes

2706
01:55:24,659 --> 01:55:28,139
um so um what Alex said just said yeah

2707
01:55:28,139 --> 01:55:29,880
um maybe there is a slight relation to

2708
01:55:29,880 --> 01:55:32,520
that draft presented in the I think HTTP

2709
01:55:32,520 --> 01:55:36,239
API working group by Benny Derry

2710
01:55:36,239 --> 01:55:38,520
Schwartz I think about

2711
01:55:38,520 --> 01:55:40,199
or off

2712
01:55:40,199 --> 01:55:43,199
um by command line applications

2713
01:55:43,199 --> 01:55:47,639
yeah yeah just I don't know maybe keep

2714
01:55:47,639 --> 01:55:49,619
in mind yeah

2715
01:55:49,619 --> 01:55:51,420
um and to your further questions you

2716
01:55:51,420 --> 01:55:53,159
know like what could this imply on a

2717
01:55:53,159 --> 01:55:55,560
larger scale so for instance what I mean

2718
01:55:55,560 --> 01:55:56,880
here I mean you look at the very

2719
01:55:56,880 --> 01:55:58,560
specific thing now like getting from a

2720
01:55:58,560 --> 01:56:00,480
password based to an auto space author

2721
01:56:00,480 --> 01:56:02,580
so the question would be what if for

2722
01:56:02,580 --> 01:56:04,080
some reason another provider would

2723
01:56:04,080 --> 01:56:05,280
change from

2724
01:56:05,280 --> 01:56:08,159
X to Y authentication scheme so would it

2725
01:56:08,159 --> 01:56:10,139
be worth thinking about supporting that

2726
01:56:10,139 --> 01:56:12,659
in a in a general fashion

2727
01:56:12,659 --> 01:56:14,760
um and for instance also in terms of

2728
01:56:14,760 --> 01:56:16,980
like for instance a provider deciding to

2729
01:56:16,980 --> 01:56:19,980
shut down the iPad

2730
01:56:19,980 --> 01:56:22,260
um service or whatever else service and

2731
01:56:22,260 --> 01:56:24,119
this is also something that might be

2732
01:56:24,119 --> 01:56:26,100
communicated so that for instance a

2733
01:56:26,100 --> 01:56:28,020
client then can say the user okay you

2734
01:56:28,020 --> 01:56:29,400
need to know

2735
01:56:29,400 --> 01:56:31,920
do that or something like that and

2736
01:56:31,920 --> 01:56:34,500
question related to that also I think I

2737
01:56:34,500 --> 01:56:35,880
didn't quite understand that from the

2738
01:56:35,880 --> 01:56:37,199
slides is that something the client

2739
01:56:37,199 --> 01:56:39,600
needs to be or you envision that the

2740
01:56:39,600 --> 01:56:41,820
client does do this implicitly on behalf

2741
01:56:41,820 --> 01:56:44,219
of the user or is there any

2742
01:56:44,219 --> 01:56:46,679
um you know confirmation the user needs

2743
01:56:46,679 --> 01:56:48,960
to do for this change I I think that's

2744
01:56:48,960 --> 01:56:51,600
an open question still whether the the

2745
01:56:51,600 --> 01:56:53,760
user needs to explicitly opt into this

2746
01:56:53,760 --> 01:56:57,780
uh ideally for me a client that adds say

2747
01:56:57,780 --> 01:56:59,760
snooze as a feature rather than trying

2748
01:56:59,760 --> 01:57:03,239
to to back Port snooze from Jam app into

2749
01:57:03,239 --> 01:57:05,400
IMAP they could just say if I'm going to

2750
01:57:05,400 --> 01:57:07,320
snooze this message then I'll make a

2751
01:57:07,320 --> 01:57:10,679
snooze call with the object ID email ID

2752
01:57:10,679 --> 01:57:13,260
that I fetched via IMAP and say please

2753
01:57:13,260 --> 01:57:14,820
snooze this message to the server and

2754
01:57:14,820 --> 01:57:16,920
the server will then make the changes to

2755
01:57:16,920 --> 01:57:18,119
mailbox and then the regular

2756
01:57:18,119 --> 01:57:20,940
synchronization code will notice

2757
01:57:20,940 --> 01:57:23,940
okay so that's that's how I Envision it

2758
01:57:23,940 --> 01:57:25,440
working whether the user needs to opt

2759
01:57:25,440 --> 01:57:27,599
into that or it's just this client now

2760
01:57:27,599 --> 01:57:29,520
supports snooze your IMAP connection

2761
01:57:29,520 --> 01:57:32,159
will automatically support it if the

2762
01:57:32,159 --> 01:57:34,860
server supports it I mean the problem I

2763
01:57:34,860 --> 01:57:37,139
see here if so it is supposed to gain

2764
01:57:37,139 --> 01:57:39,060
adoption with clients which is certainly

2765
01:57:39,060 --> 01:57:41,880
is a goal in a certain way yeah um I

2766
01:57:41,880 --> 01:57:43,260
think there needs to be some clear

2767
01:57:43,260 --> 01:57:45,000
guidance I mean on on the first or

2768
01:57:45,000 --> 01:57:46,320
second slide you've had there was quite

2769
01:57:46,320 --> 01:57:47,219
some

2770
01:57:47,219 --> 01:57:50,280
different things you proposed and I'm

2771
01:57:50,280 --> 01:57:51,599
not sure for instance if clients were

2772
01:57:51,599 --> 01:57:53,820
willing to implement all of these like

2773
01:57:53,820 --> 01:57:56,280
you know just a tiny bit of JM app it's

2774
01:57:56,280 --> 01:57:58,619
a full switch to J map or at least that

2775
01:57:58,619 --> 01:58:00,960
needs to be somehow explained to them in

2776
01:58:00,960 --> 01:58:02,639
a better way but yeah of course not

2777
01:58:02,639 --> 01:58:04,440
something for normally

2778
01:58:04,440 --> 01:58:06,719
yeah this is this is kind of I think

2779
01:58:06,719 --> 01:58:07,619
we're getting a little bit too far in

2780
01:58:07,619 --> 01:58:08,880
the weeds I think the question still

2781
01:58:08,880 --> 01:58:10,739
stands do we want to adopt this as work

2782
01:58:10,739 --> 01:58:13,380
and I'm still in favor of doing so it

2783
01:58:13,380 --> 01:58:14,400
sounds like there's other people in the

2784
01:58:14,400 --> 01:58:17,480
room that feel the same way

2785
01:58:18,659 --> 01:58:20,940
anyone want to speak against adopting I

2786
01:58:20,940 --> 01:58:22,080
guess

2787
01:58:22,080 --> 01:58:24,199
um

2788
01:58:31,139 --> 01:58:33,780
okay I will

2789
01:58:33,780 --> 01:58:35,880
carefully board this

2790
01:58:35,880 --> 01:58:37,080
um

2791
01:58:37,080 --> 01:58:39,360
I think there is enough interest in the

2792
01:58:39,360 --> 01:58:42,780
room to investigate this problem

2793
01:58:42,780 --> 01:58:46,320
it's you know the reason why me and once

2794
01:58:46,320 --> 01:58:48,780
you're arguing is probably because we're

2795
01:58:48,780 --> 01:58:50,820
kind of interested in addressing this

2796
01:58:50,820 --> 01:58:52,020
sort of problem

2797
01:58:52,020 --> 01:58:53,940
but I don't think the proposal on the

2798
01:58:53,940 --> 01:58:55,619
table is cooked

2799
01:58:55,619 --> 01:58:56,880
enough

2800
01:58:56,880 --> 01:58:58,920
to be adopted

2801
01:58:58,920 --> 01:59:01,199
is this Fair

2802
01:59:01,199 --> 01:59:03,678
yep

2803
01:59:04,139 --> 01:59:06,260
um

2804
01:59:07,260 --> 01:59:10,440
oh hell with it

2805
01:59:10,440 --> 01:59:12,840
too fussy to do the thing uh this is

2806
01:59:12,840 --> 01:59:15,119
Barry uh I don't agree with that because

2807
01:59:15,119 --> 01:59:17,099
I I don't think things need to be fully

2808
01:59:17,099 --> 01:59:19,800
baked to be adopted I think that the

2809
01:59:19,800 --> 01:59:22,860
idea is that there's enough here to get

2810
01:59:22,860 --> 01:59:27,119
us thinking and then we can use that to

2811
01:59:27,119 --> 01:59:29,460
develop the document there everything is

2812
01:59:29,460 --> 01:59:32,420
still up for grabs

2813
01:59:32,699 --> 01:59:34,920
the whole discussion about oauth might

2814
01:59:34,920 --> 01:59:37,020
be you just don't need to do anything

2815
01:59:37,020 --> 01:59:38,699
you already all the mechanisms already

2816
01:59:38,699 --> 01:59:42,599
there so it's like kind of pointless

2817
01:59:42,599 --> 01:59:45,000
sure and so then it can be removed from

2818
01:59:45,000 --> 01:59:49,020
the document you know if we just if we

2819
01:59:49,020 --> 01:59:51,980
decide that we want to work on this

2820
01:59:51,980 --> 01:59:55,920
it doesn't matter I'm I'm I'm battling

2821
01:59:55,920 --> 01:59:58,080
yeah in which case just becomes an

2822
01:59:58,080 --> 02:00:00,239
advice document server should specify

2823
02:00:00,239 --> 02:00:03,659
jmap is found here somehow

2824
02:00:03,659 --> 02:00:04,920
because there needs to be something that

2825
02:00:04,920 --> 02:00:06,780
tells you where the jam up place to

2826
02:00:06,780 --> 02:00:08,280
connect to is to get the same mailbox

2827
02:00:08,280 --> 02:00:11,219
okay let me throw it to the phrases is

2828
02:00:11,219 --> 02:00:13,260
there a draft no

2829
02:00:13,260 --> 02:00:16,139
do you have enough information

2830
02:00:16,139 --> 02:00:17,580
getting there

2831
02:00:17,580 --> 02:00:19,020
okay

2832
02:00:19,020 --> 02:00:21,080
so I I think

2833
02:00:21,080 --> 02:00:25,040
we can talk yep

2834
02:00:26,340 --> 02:00:29,280
okay and uh I think

2835
02:00:29,280 --> 02:00:31,460
um

2836
02:00:31,860 --> 02:00:34,739
you certainly alerted me to the

2837
02:00:34,739 --> 02:00:36,780
interesting problem so we'll be paying

2838
02:00:36,780 --> 02:00:38,280
attention now

2839
02:00:38,280 --> 02:00:40,199
excellent

2840
02:00:40,199 --> 02:00:41,179
um

2841
02:00:41,179 --> 02:00:43,440
anyone else want to work with me on a

2842
02:00:43,440 --> 02:00:45,559
draft

2843
02:00:46,139 --> 02:00:49,139
too

2844
02:00:50,639 --> 02:00:52,860
all right we will chat straight after

2845
02:00:52,860 --> 02:00:55,159
this

2846
02:00:56,960 --> 02:01:02,580
I believe we are down to milestones

2847
02:01:04,260 --> 02:01:06,119
any other business for the extra working

2848
02:01:06,119 --> 02:01:09,500
group before we do that

2849
02:01:11,340 --> 02:01:12,659
all right

2850
02:01:12,659 --> 02:01:16,980
uh let me share my screen John

2851
02:01:16,980 --> 02:01:19,820
foreign

2852
02:01:19,820 --> 02:01:22,260
I just have a question

2853
02:01:22,260 --> 02:01:25,020
um I have a draft to revivify the

2854
02:01:25,020 --> 02:01:27,719
expires header for mail messages and

2855
02:01:27,719 --> 02:01:29,280
someone this morning asked does that

2856
02:01:29,280 --> 02:01:31,199
mean we can have an expires keyword in

2857
02:01:31,199 --> 02:01:33,780
IMAP so that people can tell it can ask

2858
02:01:33,780 --> 02:01:35,280
for the messages that are expired or not

2859
02:01:35,280 --> 02:01:37,020
and I said I don't know but we have a

2860
02:01:37,020 --> 02:01:39,300
meeting and I can find out so assuming

2861
02:01:39,300 --> 02:01:40,860
that people use this header which I

2862
02:01:40,860 --> 02:01:42,119
think is fairly likely because there was

2863
02:01:42,119 --> 02:01:44,219
a lot of interest in it MOG

2864
02:01:44,219 --> 02:01:46,020
um would it be worth adding an expires

2865
02:01:46,020 --> 02:01:48,060
flag expired flag just so you can pick

2866
02:01:48,060 --> 02:01:49,500
the messages that have expired or not

2867
02:01:49,500 --> 02:01:50,940
and if there's some interest I can write

2868
02:01:50,940 --> 02:01:53,239
a draft

2869
02:01:53,820 --> 02:01:57,239
uh she's open anyone want to comment on

2870
02:01:57,239 --> 02:01:59,480
this

2871
02:02:05,480 --> 02:02:08,780
well it's complicated

2872
02:02:08,780 --> 02:02:11,699
the problem is that

2873
02:02:11,699 --> 02:02:14,940
thanks Murray in the Bayside map flags

2874
02:02:14,940 --> 02:02:16,619
are Boolean things

2875
02:02:16,619 --> 02:02:20,598
and what you're asking is not Boolean

2876
02:02:20,760 --> 02:02:22,619
oh is it yeah we are it is yeah I mean

2877
02:02:22,619 --> 02:02:24,900
the expired the expires header has a

2878
02:02:24,900 --> 02:02:27,179
time stamp so you're basically asking

2879
02:02:27,179 --> 02:02:28,500
for oh

2880
02:02:28,500 --> 02:02:30,599
are you going to

2881
02:02:30,599 --> 02:02:32,880
are you trying to make the server

2882
02:02:32,880 --> 02:02:34,739
annotate the messages that beyond the

2883
02:02:34,739 --> 02:02:37,218
expiry

2884
02:02:37,500 --> 02:02:41,300
with a flag with a Boolean flag

2885
02:02:42,000 --> 02:02:44,400
yeah it's basically once it's expired

2886
02:02:44,400 --> 02:02:46,619
maybe server sent or even clients that

2887
02:02:46,619 --> 02:02:48,659
you Market as expired and then it just

2888
02:02:48,659 --> 02:02:51,540
stays is it what you're asking yeah

2889
02:02:51,540 --> 02:02:54,719
I think that's what I'm asking

2890
02:02:54,719 --> 02:02:56,840
um

2891
02:02:57,360 --> 02:03:00,360
that will be doable yes

2892
02:03:00,360 --> 02:03:02,340
so if you're asking for something other

2893
02:03:02,340 --> 02:03:04,080
than the Boolean flag

2894
02:03:04,080 --> 02:03:07,139
it depends on other extensions

2895
02:03:07,139 --> 02:03:09,360
that some some implementations might or

2896
02:03:09,360 --> 02:03:10,860
might not have

2897
02:03:10,860 --> 02:03:12,780
yeah the point of the expired header is

2898
02:03:12,780 --> 02:03:13,920
just like it's either you're past the

2899
02:03:13,920 --> 02:03:15,840
date or you aren't it really is just a

2900
02:03:15,840 --> 02:03:18,199
Boolean

2901
02:03:18,679 --> 02:03:21,000
cool yep

2902
02:03:21,000 --> 02:03:22,219
to the list

2903
02:03:22,219 --> 02:03:25,139
excellent uh Milestones very very

2904
02:03:25,139 --> 02:03:27,619
quickly

2905
02:03:28,860 --> 02:03:30,780
yes I don't want to share my screen no

2906
02:03:30,780 --> 02:03:33,960
I've not changed my mind let's roll

2907
02:03:33,960 --> 02:03:37,020
allowed it's really quite a theft takes

2908
02:03:37,020 --> 02:03:38,940
three or four seconds

2909
02:03:38,940 --> 02:03:40,500
documents

2910
02:03:40,500 --> 02:03:43,159
extra

2911
02:03:44,099 --> 02:03:48,920
yeah come on data tracker you can do it

2912
02:03:50,880 --> 02:03:54,260
edit milestones

2913
02:03:56,219 --> 02:03:57,739
done done done

2914
02:03:57,739 --> 02:04:00,599
adopt a document for air I would save

2915
02:04:00,599 --> 02:04:02,940
and submit a document with AIA are the

2916
02:04:02,940 --> 02:04:04,260
only things that we have in our

2917
02:04:04,260 --> 02:04:07,080
Milestone list that seems really not

2918
02:04:07,080 --> 02:04:09,739
what's going on

2919
02:04:10,800 --> 02:04:12,800
um

2920
02:04:14,340 --> 02:04:17,540
submit message limit

2921
02:04:17,940 --> 02:04:21,619
when's that going to happen Alexi

2922
02:04:23,880 --> 02:04:24,679
um

2923
02:04:24,679 --> 02:04:28,219
uh there isn't one

2924
02:04:32,760 --> 02:04:35,420
February

2925
02:04:45,659 --> 02:04:47,400
data tracker really is going

2926
02:04:47,400 --> 02:04:49,920
particularly slowly at the moment

2927
02:04:49,920 --> 02:04:51,960
this is this is

2928
02:04:51,960 --> 02:04:53,940
uncomfortable it isn't like you're the

2929
02:04:53,940 --> 02:04:57,540
only person yeah well yeah but who else

2930
02:04:57,540 --> 02:05:00,840
is it's just the end of a session

2931
02:05:00,840 --> 02:05:05,099
all right uh other Milestones Ken yeah I

2932
02:05:05,099 --> 02:05:06,900
uh I think back in September I submitted

2933
02:05:06,900 --> 02:05:10,560
a draft for uh uh returning metadata in

2934
02:05:10,560 --> 02:05:12,599
the list responses

2935
02:05:12,599 --> 02:05:14,820
I don't believe I received any feedback

2936
02:05:14,820 --> 02:05:16,080
but

2937
02:05:16,080 --> 02:05:19,040
um can we have a call for adoption

2938
02:05:19,040 --> 02:05:20,940
soonish on that

2939
02:05:20,940 --> 02:05:24,239
I think there was interests at 114 so

2940
02:05:24,239 --> 02:05:27,379
that's why I wrote the draft

2941
02:05:34,380 --> 02:05:36,000
all right we'll call for adoption for

2942
02:05:36,000 --> 02:05:39,719
that now November

2943
02:05:45,360 --> 02:05:47,760
there's many things called metadata here

2944
02:05:47,760 --> 02:05:50,099
maybe I should search for like Murchison

2945
02:05:50,099 --> 02:05:51,300
or something

2946
02:05:51,300 --> 02:05:54,980
draft purchasing lists

2947
02:05:55,560 --> 02:05:57,659
I'm at least metadata

2948
02:05:57,659 --> 02:06:00,179
I've done

2949
02:06:00,179 --> 02:06:01,890
all right

2950
02:06:01,890 --> 02:06:02,400
[Music]

2951
02:06:02,400 --> 02:06:03,780
um

2952
02:06:03,780 --> 02:06:06,679
if anything else

2953
02:06:09,480 --> 02:06:11,580
what else we've got that's got IMAP in

2954
02:06:11,580 --> 02:06:13,560
the name that's that's been proposed and

2955
02:06:13,560 --> 02:06:16,040
it's not

2956
02:06:16,860 --> 02:06:19,500
many many things that say I'm up okay

2957
02:06:19,500 --> 02:06:23,280
that's ridiculous uh

2958
02:06:23,820 --> 02:06:25,560
let's have a look at our notes and see

2959
02:06:25,560 --> 02:06:28,380
what we said we're going to do

2960
02:06:28,380 --> 02:06:30,060
a sessional shut at some point but

2961
02:06:30,060 --> 02:06:33,800
that's fine as long as my screen's still

2962
02:06:33,960 --> 02:06:36,300
uh process imip we don't have a

2963
02:06:36,300 --> 02:06:38,580
milestone for process IMAP

2964
02:06:38,580 --> 02:06:41,940
so submit that to

2965
02:06:41,940 --> 02:06:45,360
last call is going to be a thing

2966
02:06:45,360 --> 02:06:48,239
where are we yeah

2967
02:06:48,239 --> 02:06:50,299
yeah

2968
02:06:54,060 --> 02:06:59,179
G is going to happen in November

2969
02:07:02,520 --> 02:07:05,659
is it one word or two

2970
02:07:06,659 --> 02:07:10,679
that's the one got you

2971
02:07:10,679 --> 02:07:12,800
um

2972
02:07:18,119 --> 02:07:21,199
Steve snares

2973
02:07:22,440 --> 02:07:25,699
to OSG

2974
02:07:25,860 --> 02:07:29,360
December January

2975
02:07:30,420 --> 02:07:32,340
cool

2976
02:07:32,340 --> 02:07:35,239
sneeze

2977
02:07:36,719 --> 02:07:38,340
clearly we didn't get around to this

2978
02:07:38,340 --> 02:07:40,020
last meeting although would it be

2979
02:07:40,020 --> 02:07:44,540
additional milestones in there already

2980
02:07:49,679 --> 02:07:51,719
message limit we've got a thing for

2981
02:07:51,719 --> 02:07:54,080
already

2982
02:07:54,540 --> 02:07:57,840
action registry partial's been submitted

2983
02:07:57,840 --> 02:08:00,780
already migration we're back in German

2984
02:08:00,780 --> 02:08:01,800
now

2985
02:08:01,800 --> 02:08:03,179
good

2986
02:08:03,179 --> 02:08:08,099
and there's no Milestones yet for the is

2987
02:08:08,099 --> 02:08:12,840
expired stuff or my thing because we

2988
02:08:12,840 --> 02:08:14,639
don't have anything ready to adopt yet

2989
02:08:14,639 --> 02:08:18,179
cool then I think we might be at the end

2990
02:08:18,179 --> 02:08:20,940
of our Milestones list

2991
02:08:20,940 --> 02:08:23,780
fabulous

2992
02:08:24,300 --> 02:08:27,560
review changes

2993
02:08:35,219 --> 02:08:37,679
cool anything else we're well over time

2994
02:08:37,679 --> 02:08:39,840
thank you everybody

2995
02:08:39,840 --> 02:08:43,460
have a great rest of your ITF

2996
02:08:44,099 --> 02:08:45,840
let's go have some snacks and I'll see

2997
02:08:45,840 --> 02:08:49,280
you all an email call No Doubt

2998
02:08:55,320 --> 02:08:57,559
yeah

2999
02:08:58,159 --> 02:09:01,339
all right

3000
02:09:08,820 --> 02:09:11,360
foreign

