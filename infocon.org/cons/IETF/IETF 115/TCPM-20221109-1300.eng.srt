1
00:00:04,860 --> 00:00:09,680
so but we have a lot of ideas

2
00:00:09,800 --> 00:00:13,460
but it's a challenge

3
00:00:37,380 --> 00:00:40,380
changes

4
00:00:56,219 --> 00:00:58,219
um

5
00:01:07,439 --> 00:01:10,100
thank you

6
00:01:21,240 --> 00:01:23,000
one

7
00:01:23,000 --> 00:01:26,240
more minute

8
00:02:18,300 --> 00:02:20,540
foreign

9
00:02:33,590 --> 00:02:36,680
[Music]

10
00:02:47,459 --> 00:02:50,459
no

11
00:03:00,120 --> 00:03:02,730
well we waited for you

12
00:03:02,730 --> 00:03:06,070
[Laughter]

13
00:03:17,890 --> 00:03:21,010
[Music]

14
00:03:29,720 --> 00:03:32,780
at least

15
00:03:37,080 --> 00:03:42,319
we both are talking that's why

16
00:03:45,120 --> 00:03:48,680
yeah we can move it yeah

17
00:03:54,540 --> 00:03:57,540
foreign

18
00:04:05,640 --> 00:04:07,860
thank you for noting

19
00:04:07,860 --> 00:04:10,940
I would not have checked out

20
00:04:24,500 --> 00:04:28,040
somebody wants to share

21
00:04:28,380 --> 00:04:32,120
I loaded up in the data tracker

22
00:04:36,240 --> 00:04:38,220
got it

23
00:04:38,220 --> 00:04:40,340
yeah

24
00:04:40,740 --> 00:04:44,000
I have no idea

25
00:04:48,180 --> 00:04:51,060
um yeah I can stop presenting

26
00:04:51,060 --> 00:04:54,740
oh is it showing up then there

27
00:04:56,160 --> 00:04:57,840
I will stop

28
00:04:57,840 --> 00:04:59,880
there you go

29
00:04:59,880 --> 00:05:01,979
you're welcome

30
00:05:01,979 --> 00:05:04,460
it is

31
00:05:06,600 --> 00:05:10,220
always at the door but yes

32
00:05:12,479 --> 00:05:15,540
if uh folks could sit down and uh also

33
00:05:15,540 --> 00:05:17,100
make sure to register your attendance uh

34
00:05:17,100 --> 00:05:18,960
either scan the QR code here or at the

35
00:05:18,960 --> 00:05:20,100
door

36
00:05:20,100 --> 00:05:22,440
um or log in uh all those things seem to

37
00:05:22,440 --> 00:05:24,740
work well

38
00:05:36,120 --> 00:05:38,780
thanks

39
00:05:39,479 --> 00:05:43,280
I think now we have the reason

40
00:05:43,979 --> 00:05:45,720
I think it takes I think it just shows

41
00:05:45,720 --> 00:05:47,759
up in a moment doesn't it

42
00:05:47,759 --> 00:05:49,199
I think

43
00:05:49,199 --> 00:05:51,419
if I wait like three minutes it'll just

44
00:05:51,419 --> 00:05:52,680
be there I can start with the tour

45
00:05:52,680 --> 00:05:55,500
slides now yeah

46
00:05:55,500 --> 00:05:59,039
hello everybody this is tcpm

47
00:05:59,039 --> 00:05:59,759
um

48
00:05:59,759 --> 00:06:01,680
we have three co-chairs my name is

49
00:06:01,680 --> 00:06:03,960
Michael turkson

50
00:06:03,960 --> 00:06:07,039
my name is Ian Swift

51
00:06:07,139 --> 00:06:10,860
and Yoshi is remote

52
00:06:10,860 --> 00:06:13,080
okay so

53
00:06:13,080 --> 00:06:16,219
um next slide

54
00:06:19,639 --> 00:06:21,840
this is the note well

55
00:06:21,840 --> 00:06:26,239
you should have seen it next slide

56
00:06:27,060 --> 00:06:27,960
um

57
00:06:27,960 --> 00:06:29,819
the session is being recorded the

58
00:06:29,819 --> 00:06:31,979
session has been being recorded this is

59
00:06:31,979 --> 00:06:32,780
an

60
00:06:32,780 --> 00:06:35,520
important information Richard was so

61
00:06:35,520 --> 00:06:37,500
nice to

62
00:06:37,500 --> 00:06:41,460
do then do uh act as a note taker

63
00:06:41,460 --> 00:06:44,460
Yoshi is doing a JavaScript and if

64
00:06:44,460 --> 00:06:46,080
you're submitting in the future a

65
00:06:46,080 --> 00:06:49,259
document where you think tcpm should be

66
00:06:49,259 --> 00:06:52,800
interested in please put tcpm in the

67
00:06:52,800 --> 00:06:54,660
name of the document so it shows up in

68
00:06:54,660 --> 00:06:55,560
our

69
00:06:55,560 --> 00:06:59,940
view in the data tracker next slide

70
00:06:59,940 --> 00:07:03,120
so this is the agenda

71
00:07:03,120 --> 00:07:07,020
um we will provide a an overview about

72
00:07:07,020 --> 00:07:09,000
the working group status we have one

73
00:07:09,000 --> 00:07:10,740
presentation for

74
00:07:10,740 --> 00:07:13,380
working with documents basically it's an

75
00:07:13,380 --> 00:07:16,680
uh current status and overview about the

76
00:07:16,680 --> 00:07:19,020
document being

77
00:07:19,020 --> 00:07:21,479
um considered for going into working

78
00:07:21,479 --> 00:07:23,400
group last score next

79
00:07:23,400 --> 00:07:25,319
and then we have a couple of other items

80
00:07:25,319 --> 00:07:28,580
one is future status of Roc

81
00:07:28,580 --> 00:07:33,240
3465 which is ABC we have TCP ACC rate

82
00:07:33,240 --> 00:07:35,819
request which we have seen the present a

83
00:07:35,819 --> 00:07:37,860
couple of presentations already

84
00:07:37,860 --> 00:07:41,099
a new one TCP service Affinity option

85
00:07:41,099 --> 00:07:43,680
um Yoshi is talking about a new document

86
00:07:43,680 --> 00:07:45,479
describing the differences

87
00:07:45,479 --> 00:07:48,060
between standard congestion controls and

88
00:07:48,060 --> 00:07:52,500
if time permits I wanted to talk about

89
00:07:52,500 --> 00:07:55,080
um whether 120 seconds is still the

90
00:07:55,080 --> 00:07:56,759
correct value for

91
00:07:56,759 --> 00:08:00,660
um MSL and TCP timeout

92
00:08:00,660 --> 00:08:03,300
agenda bashing anyone wants to change

93
00:08:03,300 --> 00:08:06,080
anything here

94
00:08:07,080 --> 00:08:09,660
uh Martin Duke just I um I've been using

95
00:08:09,660 --> 00:08:12,780
this slot in working groups to to show

96
00:08:12,780 --> 00:08:14,880
for the congestion control working group

97
00:08:14,880 --> 00:08:17,699
side meeting at 5 pm on

98
00:08:17,699 --> 00:08:19,740
Thursday that's tomorrow

99
00:08:19,740 --> 00:08:21,180
um we will be bashing the proposed

100
00:08:21,180 --> 00:08:23,819
Charter uh the tsvr actually this list

101
00:08:23,819 --> 00:08:25,979
has an announcement with like links and

102
00:08:25,979 --> 00:08:27,539
so on if people are interested thanks

103
00:08:27,539 --> 00:08:30,620
yeah thank you

104
00:08:31,080 --> 00:08:33,839
so I think we go with the second next

105
00:08:33,839 --> 00:08:36,140
slide

106
00:08:37,740 --> 00:08:39,779
so these are the documents

107
00:08:39,779 --> 00:08:42,899
um we have finished since last ITF the

108
00:08:42,899 --> 00:08:47,279
TCP base back it's now RC 9293

109
00:08:47,279 --> 00:08:50,640
um thanks to Wes for for doing this work

110
00:08:50,640 --> 00:08:53,880
we have the Yang document and the RC

111
00:08:53,880 --> 00:08:56,580
editor queue it's there it's it's done

112
00:08:56,580 --> 00:08:59,399
but it's uh in a misref state

113
00:08:59,399 --> 00:09:01,560
we have high start plus plus

114
00:09:01,560 --> 00:09:04,019
after the working group last call the ad

115
00:09:04,019 --> 00:09:07,140
had some uh

116
00:09:07,140 --> 00:09:10,140
issues editorial questions and one

117
00:09:10,140 --> 00:09:12,779
question regarding how to handle the L

118
00:09:12,779 --> 00:09:14,580
well you mentioned there

119
00:09:14,580 --> 00:09:17,339
and uh there was a new revision

120
00:09:17,339 --> 00:09:20,760
submitted yesterday I think

121
00:09:20,760 --> 00:09:22,920
um which basically

122
00:09:22,920 --> 00:09:26,580
says use l equals eight if you're not

123
00:09:26,580 --> 00:09:29,940
placing use l equals infinity if you are

124
00:09:29,940 --> 00:09:32,640
pacing with mandatory language

125
00:09:32,640 --> 00:09:34,320
and

126
00:09:34,320 --> 00:09:36,420
um the process is that

127
00:09:36,420 --> 00:09:38,940
this is discussed between the ad and the

128
00:09:38,940 --> 00:09:41,820
authors and once it's finished it comes

129
00:09:41,820 --> 00:09:44,279
back to the working group for a short

130
00:09:44,279 --> 00:09:46,380
working group last call about this

131
00:09:46,380 --> 00:09:47,339
change

132
00:09:47,339 --> 00:09:49,680
yes there there's there's normative

133
00:09:49,680 --> 00:09:52,500
stuff so it does matter

134
00:09:52,500 --> 00:09:55,920
um I think my the agenda item I have

135
00:09:55,920 --> 00:09:58,140
about 3465 will make it clear what this

136
00:09:58,140 --> 00:10:00,240
substantive issue is so we'll just point

137
00:10:00,240 --> 00:10:03,000
for that yep

138
00:10:03,000 --> 00:10:05,820
the next one is

139
00:10:05,820 --> 00:10:08,220
um cubic and Yoshi is the document

140
00:10:08,220 --> 00:10:11,700
Shepard so yeah she will give you an

141
00:10:11,700 --> 00:10:14,540
update on that document

142
00:10:15,300 --> 00:10:19,620
uh could be we already submit an ISD and

143
00:10:19,620 --> 00:10:22,019
then uh right now the status is device

144
00:10:22,019 --> 00:10:25,140
ID needed so I think we are waiting for

145
00:10:25,140 --> 00:10:28,939
the new revised version

146
00:10:32,459 --> 00:10:36,060
the next document is prr which is in

147
00:10:36,060 --> 00:10:37,920
working group last call and here she is

148
00:10:37,920 --> 00:10:42,079
also the document Shepherd for that

149
00:10:44,399 --> 00:10:46,740
um so this is right now a working group

150
00:10:46,740 --> 00:10:50,220
let's go and we got some comments and

151
00:10:50,220 --> 00:10:53,880
then I see some YouTube is responding so

152
00:10:53,880 --> 00:10:57,480
um so if you have any more feedback uh

153
00:10:57,480 --> 00:10:59,700
present to the mailing list as soon as

154
00:10:59,700 --> 00:11:02,000
possible

155
00:11:02,760 --> 00:11:04,380
yes sir

156
00:11:04,380 --> 00:11:06,660
if you we will close the working of last

157
00:11:06,660 --> 00:11:09,060
call soon but if you have any issues

158
00:11:09,060 --> 00:11:11,579
bring them up now

159
00:11:11,579 --> 00:11:14,519
the next three documents which are

160
00:11:14,519 --> 00:11:16,440
um in our list of Milestones is accurate

161
00:11:16,440 --> 00:11:21,240
ecn which is the document

162
00:11:21,240 --> 00:11:23,700
um we want to last call next

163
00:11:23,700 --> 00:11:26,700
after that generalized ecn

164
00:11:26,700 --> 00:11:29,399
um we I think we decided that I'll be

165
00:11:29,399 --> 00:11:31,200
the document Shepherd on accurate ecn

166
00:11:31,200 --> 00:11:32,120
and

167
00:11:32,120 --> 00:11:35,339
i i n is the generalized CCN document

168
00:11:35,339 --> 00:11:36,660
Shepard

169
00:11:36,660 --> 00:11:40,079
and uh then we have TCP Edo

170
00:11:40,079 --> 00:11:41,459
um I recently

171
00:11:41,459 --> 00:11:43,620
updated the Milestones of the discussion

172
00:11:43,620 --> 00:11:45,720
with Martin

173
00:11:45,720 --> 00:11:49,019
um and uh moved dark Milestones being in

174
00:11:49,019 --> 00:11:52,320
the past to uh realistic thing I moved

175
00:11:52,320 --> 00:11:55,920
it to the December 2023

176
00:11:55,920 --> 00:11:57,839
um but we recently got an email from Joe

177
00:11:57,839 --> 00:11:59,160
that

178
00:11:59,160 --> 00:12:01,980
he thinks TCP Edo is ready for working

179
00:12:01,980 --> 00:12:04,320
group last call and he also has a

180
00:12:04,320 --> 00:12:06,839
another document about

181
00:12:06,839 --> 00:12:11,339
um extending this the uh the sin segment

182
00:12:11,339 --> 00:12:14,040
uh which is right now not a milestone

183
00:12:14,040 --> 00:12:16,320
so for the second one the chairs are

184
00:12:16,320 --> 00:12:18,120
still discussing whether

185
00:12:18,120 --> 00:12:20,100
how to handle this

186
00:12:20,100 --> 00:12:20,760
um

187
00:12:20,760 --> 00:12:22,980
is the working group had if any feedback

188
00:12:22,980 --> 00:12:26,040
on TCP Edo being last called

189
00:12:26,040 --> 00:12:28,579
soon

190
00:12:30,600 --> 00:12:33,000
a specific question I want to ask was

191
00:12:33,000 --> 00:12:34,980
whether there was implementation

192
00:12:34,980 --> 00:12:38,220
experience of any sort and if not how

193
00:12:38,220 --> 00:12:40,200
does the working group feel about

194
00:12:40,200 --> 00:12:42,360
standardizing something

195
00:12:42,360 --> 00:12:45,139
that has done

196
00:12:48,240 --> 00:12:50,220
so the intended status is proposed

197
00:12:50,220 --> 00:12:52,579
senator

198
00:12:53,720 --> 00:12:58,040
hi Lars that good I don't know

199
00:12:58,200 --> 00:13:00,260
I think you need just to eat the mic

200
00:13:00,260 --> 00:13:03,240
okay yeah you have to actually go right

201
00:13:03,240 --> 00:13:04,920
there with the mask

202
00:13:04,920 --> 00:13:07,260
um so not having read this in a very

203
00:13:07,260 --> 00:13:08,760
long time

204
00:13:08,760 --> 00:13:10,380
um I mean we have this Grand Edition in

205
00:13:10,380 --> 00:13:12,480
tcpm of publishing things on the charts

206
00:13:12,480 --> 00:13:14,399
on the standard strike that they have no

207
00:13:14,399 --> 00:13:15,779
implementation but I probably had sort

208
00:13:15,779 --> 00:13:17,760
of managed to get away from this a

209
00:13:17,760 --> 00:13:19,380
little bit so I'm

210
00:13:19,380 --> 00:13:22,320
not thrilled right but you can make the

211
00:13:22,320 --> 00:13:24,959
cases we've done it before many times

212
00:13:24,959 --> 00:13:27,959
I'd feel better if there was one though

213
00:13:27,959 --> 00:13:29,160
foreign

214
00:13:29,160 --> 00:13:31,740
as a personal note I think

215
00:13:31,740 --> 00:13:34,560
past choices should not reflect upon

216
00:13:34,560 --> 00:13:36,480
future ones I think we should do the

217
00:13:36,480 --> 00:13:39,959
right thing as Spencer Dawkins would say

218
00:13:39,959 --> 00:13:43,500
gory so so

219
00:13:43,500 --> 00:13:45,899
um Edo is what standard status at the

220
00:13:45,899 --> 00:13:46,860
moment

221
00:13:46,860 --> 00:13:49,079
the intended status is proposed standard

222
00:13:49,079 --> 00:13:52,079
yeah and so I would expect quite a lot

223
00:13:52,079 --> 00:13:54,240
of people to want to use this even if

224
00:13:54,240 --> 00:13:57,180
there was no implementation because kind

225
00:13:57,180 --> 00:14:00,560
of like wise into axp

226
00:14:00,720 --> 00:14:03,800
have a good one

227
00:14:05,279 --> 00:14:06,440
um

228
00:14:06,440 --> 00:14:09,660
great I believe you said why do the RFC

229
00:14:09,660 --> 00:14:11,940
if no one's going to is that correct

230
00:14:11,940 --> 00:14:14,240
oh sorry I apologize

231
00:14:14,240 --> 00:14:16,680
we just lost you for you kind of turned

232
00:14:16,680 --> 00:14:18,480
away from the mic right at that very end

233
00:14:18,480 --> 00:14:20,399
yeah it's a stupid must thing I get the

234
00:14:20,399 --> 00:14:21,899
protocol wrong

235
00:14:21,899 --> 00:14:24,480
um so I said I presumed quite a lot of

236
00:14:24,480 --> 00:14:26,279
people said they wanted to use this in

237
00:14:26,279 --> 00:14:28,260
some way and if they did then maybe PS

238
00:14:28,260 --> 00:14:31,019
is okay because there's a intent to

239
00:14:31,019 --> 00:14:32,820
implement but if there's no intent to

240
00:14:32,820 --> 00:14:34,320
implement and there's no implementations

241
00:14:34,320 --> 00:14:38,300
then perhaps it's just EXP

242
00:14:39,360 --> 00:14:41,100
yep

243
00:14:41,100 --> 00:14:43,620
thank you very that's good feedback

244
00:14:43,620 --> 00:14:45,480
okay this is

245
00:14:45,480 --> 00:14:48,060
killing me so I'm in the queue please

246
00:14:48,060 --> 00:14:50,220
um uh

247
00:14:50,220 --> 00:14:51,720
as an individual

248
00:14:51,720 --> 00:14:52,920
um

249
00:14:52,920 --> 00:14:54,720
yeah like

250
00:14:54,720 --> 00:14:56,339
I don't see a reason not to do it exp

251
00:14:56,339 --> 00:14:58,560
but um maybe I asked the broader

252
00:14:58,560 --> 00:14:59,880
question why are we continue to progress

253
00:14:59,880 --> 00:15:01,740
this draft if no one has any intention

254
00:15:01,740 --> 00:15:03,660
of implementing much just much less

255
00:15:03,660 --> 00:15:05,839
deploying it

256
00:15:05,839 --> 00:15:08,339
I think one of the reason if I remember

257
00:15:08,339 --> 00:15:10,079
it correctly if one of the one of the

258
00:15:10,079 --> 00:15:11,940
reasons is that

259
00:15:11,940 --> 00:15:14,519
and not only Define it describes the way

260
00:15:14,519 --> 00:15:17,639
how to extend it but also how other

261
00:15:17,639 --> 00:15:19,380
Solutions

262
00:15:19,380 --> 00:15:22,139
are and why they don't work so it's kind

263
00:15:22,139 --> 00:15:22,980
of a

264
00:15:22,980 --> 00:15:24,660
you know it's also kind of a

265
00:15:24,660 --> 00:15:28,860
documentation thing uh that's great

266
00:15:28,860 --> 00:15:32,480
that's an informational RFC

267
00:15:34,440 --> 00:15:35,579
um

268
00:15:35,579 --> 00:15:39,000
can you remind me if the code plan can

269
00:15:39,000 --> 00:15:41,240
be assigned if it's experimental

270
00:15:41,240 --> 00:15:45,620
it wants it wants an option number right

271
00:15:45,839 --> 00:15:48,120
what I don't I should I should remember

272
00:15:48,120 --> 00:15:50,100
this but I don't is it is a

273
00:15:50,100 --> 00:15:52,560
specification required RC required

274
00:15:52,560 --> 00:15:55,199
standards action or I guess any of the

275
00:15:55,199 --> 00:15:57,060
other options they would be good to

276
00:15:57,060 --> 00:15:58,260
check right because if we make an

277
00:15:58,260 --> 00:15:59,459
experimental and you can't get the code

278
00:15:59,459 --> 00:16:02,279
point it's sort of yeah

279
00:16:02,279 --> 00:16:04,399
um

280
00:16:05,040 --> 00:16:09,380
one exception is mptcp

281
00:16:13,199 --> 00:16:15,120
but I think we can check on the list but

282
00:16:15,120 --> 00:16:17,399
there is there's an intention to

283
00:16:17,399 --> 00:16:19,980
implement yeah

284
00:16:19,980 --> 00:16:21,480
here we go

285
00:16:21,480 --> 00:16:22,860
all right

286
00:16:22,860 --> 00:16:25,139
um with that uh shall we move to the

287
00:16:25,139 --> 00:16:29,839
first presenter yep Bob you're up

288
00:16:31,019 --> 00:16:33,360
sorry a beautiful hand Michael

289
00:16:33,360 --> 00:16:36,139
I just want to make sure

290
00:16:37,259 --> 00:16:38,639
sorry yes

291
00:16:38,639 --> 00:16:39,899
uh

292
00:16:39,899 --> 00:16:42,540
well somehow you are not showing

293
00:16:42,540 --> 00:16:45,199
in the middle

294
00:16:45,680 --> 00:16:48,839
sorry pardon

295
00:16:48,839 --> 00:16:53,000
you are not but in a participant list

296
00:16:53,459 --> 00:16:57,060
oh that could be yeah I can change that

297
00:16:57,060 --> 00:16:59,699
oh yes I didn't realize that all right

298
00:16:59,699 --> 00:17:03,120
Bob please okay

299
00:17:03,120 --> 00:17:04,199
right

300
00:17:04,199 --> 00:17:05,880
um this is

301
00:17:05,880 --> 00:17:09,000
more accurate DC and feedback in TCP

302
00:17:09,000 --> 00:17:11,819
and that still looks like an old slide

303
00:17:11,819 --> 00:17:14,939
um okay let me I will refresh it's only

304
00:17:14,939 --> 00:17:17,699
I uploaded the new ones we got

305
00:17:17,699 --> 00:17:19,439
in the last moment

306
00:17:19,439 --> 00:17:21,179
but I think we have to refresh all

307
00:17:21,179 --> 00:17:23,099
what's happened is the job number has

308
00:17:23,099 --> 00:17:26,760
gone up two instead of one because

309
00:17:26,760 --> 00:17:28,500
when I submitted it I did it in two

310
00:17:28,500 --> 00:17:32,220
stages so the RFC XML formatting changes

311
00:17:32,220 --> 00:17:34,500
wouldn't poison the diff Bob do you know

312
00:17:34,500 --> 00:17:36,120
if this is

313
00:17:36,120 --> 00:17:38,039
that looks like the old one still but it

314
00:17:38,039 --> 00:17:40,559
doesn't matter I can explain I I can let

315
00:17:40,559 --> 00:17:42,240
me just realize and reload the whole

316
00:17:42,240 --> 00:17:44,460
thing and if that fixes it then great

317
00:17:44,460 --> 00:17:46,440
and if not then yeah I'll let you talk

318
00:17:46,440 --> 00:17:48,620
through

319
00:17:51,120 --> 00:17:52,320
yeah

320
00:17:52,320 --> 00:17:55,260
um it should say 22 not 21 that's the

321
00:17:55,260 --> 00:17:58,380
only difference in 20 20 to 21 was a

322
00:17:58,380 --> 00:18:02,100
sort of null change in 21 to 22 was

323
00:18:02,100 --> 00:18:02,640
um

324
00:18:02,640 --> 00:18:05,820
the actual change and it's still minor

325
00:18:05,820 --> 00:18:07,200
anyway

326
00:18:07,200 --> 00:18:09,919
are we there

327
00:18:12,120 --> 00:18:15,739
let's have this one so

328
00:18:16,320 --> 00:18:18,419
still being shared

329
00:18:18,419 --> 00:18:22,820
no never mind okay next slide

330
00:18:23,940 --> 00:18:25,740
all right so

331
00:18:25,740 --> 00:18:26,580
um

332
00:18:26,580 --> 00:18:28,320
yeah the substantive change is actually

333
00:18:28,320 --> 00:18:31,500
21 to 22 and it's not very substantive

334
00:18:31,500 --> 00:18:32,880
in fact

335
00:18:32,880 --> 00:18:34,679
um Richard while we were doing interrupt

336
00:18:34,679 --> 00:18:37,860
testing noticed that um there was no

337
00:18:37,860 --> 00:18:39,360
nothing in the spec about what happens

338
00:18:39,360 --> 00:18:41,760
if multiple sins arrive or at least what

339
00:18:41,760 --> 00:18:43,620
it says what happens if they arrive but

340
00:18:43,620 --> 00:18:45,179
it didn't say

341
00:18:45,179 --> 00:18:48,600
um which one you do the feedback for

342
00:18:48,600 --> 00:18:51,960
um it did on the other hand handle a

343
00:18:51,960 --> 00:18:54,000
case of multiple synacs and so we just

344
00:18:54,000 --> 00:18:54,840
added

345
00:18:54,840 --> 00:18:56,760
some text saying you should feedback the

346
00:18:56,760 --> 00:18:58,679
latest one

347
00:18:58,679 --> 00:19:00,299
um if anyone wants to think about

348
00:19:00,299 --> 00:19:02,940
whether maybe you should feed back the

349
00:19:02,940 --> 00:19:05,039
most serious feedback

350
00:19:05,039 --> 00:19:07,799
you could do that but we figured it's

351
00:19:07,799 --> 00:19:09,780
better to feedback latest feedback

352
00:19:09,780 --> 00:19:11,580
rather than stale

353
00:19:11,580 --> 00:19:13,620
feedback yeah

354
00:19:13,620 --> 00:19:16,500
okay and we recorded the guy on early

355
00:19:16,500 --> 00:19:18,900
registrations that's it you can you can

356
00:19:18,900 --> 00:19:21,179
move on

357
00:19:21,179 --> 00:19:22,440
um so

358
00:19:22,440 --> 00:19:25,080
um the chairs asked if we would do a

359
00:19:25,080 --> 00:19:26,160
sort of

360
00:19:26,160 --> 00:19:26,720
um

361
00:19:26,720 --> 00:19:30,419
retrospective on the whole of accurate

362
00:19:30,419 --> 00:19:31,980
ecn for this session given we're about

363
00:19:31,980 --> 00:19:33,660
to go to working group last call I

364
00:19:33,660 --> 00:19:35,039
believe

365
00:19:35,039 --> 00:19:37,380
um so this is a bit of a road map on the

366
00:19:37,380 --> 00:19:39,000
on the next few slot about the next few

367
00:19:39,000 --> 00:19:40,620
slides

368
00:19:40,620 --> 00:19:42,419
um the goal and the approach the

369
00:19:42,419 --> 00:19:44,460
relation to other activities where it

370
00:19:44,460 --> 00:19:47,160
sits in the stack what aspects you will

371
00:19:47,160 --> 00:19:48,480
need to look out for when you're

372
00:19:48,480 --> 00:19:50,039
reviewing it and the implementation

373
00:19:50,039 --> 00:19:52,760
state is next

374
00:19:53,580 --> 00:19:56,400
so the goal is to feed back the extent

375
00:19:56,400 --> 00:19:58,620
of congestion not just his existence

376
00:19:58,620 --> 00:20:01,080
within a round trip so that um

377
00:20:01,080 --> 00:20:03,660
congestion controls that use that have

378
00:20:03,660 --> 00:20:06,179
have the mechanism in the base feedback

379
00:20:06,179 --> 00:20:07,860
of TCP

380
00:20:07,860 --> 00:20:10,799
it's I guess very similar to the concept

381
00:20:10,799 --> 00:20:13,380
behind Sac for drop

382
00:20:13,380 --> 00:20:15,960
but translated to ecn

383
00:20:15,960 --> 00:20:17,039
yeah

384
00:20:17,039 --> 00:20:18,660
um

385
00:20:18,660 --> 00:20:21,840
and um the goal for doing that the

386
00:20:21,840 --> 00:20:24,480
immediate goal for doing that is to

387
00:20:24,480 --> 00:20:27,840
allow congestion control to achieve very

388
00:20:27,840 --> 00:20:30,120
low queuing delay of the order of those

389
00:20:30,120 --> 00:20:33,360
numbers next

390
00:20:34,080 --> 00:20:35,760
so

391
00:20:35,760 --> 00:20:38,820
um the problem was that RFC 3168 ecn

392
00:20:38,820 --> 00:20:41,520
feedback that was added to TCP back in

393
00:20:41,520 --> 00:20:43,559
2001

394
00:20:43,559 --> 00:20:48,419
um when any number of CE marks hit the

395
00:20:48,419 --> 00:20:52,440
receiver it started it latched up

396
00:20:52,440 --> 00:20:54,720
um Echo congestion experienced and

397
00:20:54,720 --> 00:20:56,640
started feeding that back

398
00:20:56,640 --> 00:20:59,580
for a liability and then only stopped

399
00:20:59,580 --> 00:21:02,400
when the sender sent congestion window

400
00:21:02,400 --> 00:21:05,760
reduced back to the receiver again which

401
00:21:05,760 --> 00:21:09,000
meant that you if you got one or 10 or

402
00:21:09,000 --> 00:21:11,520
300 C marks you got the same signal

403
00:21:11,520 --> 00:21:14,039
going backwards so

404
00:21:14,039 --> 00:21:15,000
um

405
00:21:15,000 --> 00:21:17,940
that was the

406
00:21:17,940 --> 00:21:21,419
um meaning of congestion existence so we

407
00:21:21,419 --> 00:21:23,460
need to move on to extent I've put a

408
00:21:23,460 --> 00:21:25,559
table there of

409
00:21:25,559 --> 00:21:27,720
um ecn stuff if you don't know it but I

410
00:21:27,720 --> 00:21:29,220
hope anyone in this room will know about

411
00:21:29,220 --> 00:21:30,659
ecn

412
00:21:30,659 --> 00:21:33,000
okay next

413
00:21:33,000 --> 00:21:36,120
so the solution to that we

414
00:21:36,120 --> 00:21:38,100
um adopted was to

415
00:21:38,100 --> 00:21:40,260
use

416
00:21:40,260 --> 00:21:42,780
the two bits that were already or two

417
00:21:42,780 --> 00:21:45,840
flags that were already in the main TCP

418
00:21:45,840 --> 00:21:49,320
header for ecn to override them once the

419
00:21:49,320 --> 00:21:51,360
three-way handshake had

420
00:21:51,360 --> 00:21:56,520
um got started and use actually a third

421
00:21:56,520 --> 00:21:59,520
bit that was also used a um historically

422
00:21:59,520 --> 00:22:02,820
for the ucn nonce well used in quotes

423
00:22:02,820 --> 00:22:03,840
because

424
00:22:03,840 --> 00:22:07,080
it wasn't clear whether it was used

425
00:22:07,080 --> 00:22:09,059
um so we we have a loaded them and made

426
00:22:09,059 --> 00:22:11,700
them into a three-bit counter

427
00:22:11,700 --> 00:22:13,500
um and that

428
00:22:13,500 --> 00:22:15,960
um would be essential

429
00:22:15,960 --> 00:22:18,240
and always used and then there was an

430
00:22:18,240 --> 00:22:21,179
optional TCP option that you could also

431
00:22:21,179 --> 00:22:23,520
add for extra Precision

432
00:22:23,520 --> 00:22:26,820
um with 24-bit counters for the bytes

433
00:22:26,820 --> 00:22:29,220
and the ace field counted just packets

434
00:22:29,220 --> 00:22:32,820
and the Act and the option we

435
00:22:32,820 --> 00:22:36,900
um counts bytes fed back next Bob I may

436
00:22:36,900 --> 00:22:38,880
ask a question as an individual just a

437
00:22:38,880 --> 00:22:41,580
clear um I'm curious what do you think

438
00:22:41,580 --> 00:22:43,820
is the likely deployment ratio between

439
00:22:43,820 --> 00:22:46,980
uh the option and the core Ace

440
00:22:46,980 --> 00:22:48,600
functionality I'm just like as an

441
00:22:48,600 --> 00:22:50,460
individual um do you think it's going to

442
00:22:50,460 --> 00:22:52,620
be dependent on use case or what are

443
00:22:52,620 --> 00:22:54,240
your thoughts

444
00:22:54,240 --> 00:22:58,799
um I I think that possibly more in data

445
00:22:58,799 --> 00:23:00,659
centers you might not need the option

446
00:23:00,659 --> 00:23:02,820
I think you might need the option more

447
00:23:02,820 --> 00:23:05,700
where you've got middle boxes and stuff

448
00:23:05,700 --> 00:23:07,799
um essentially

449
00:23:07,799 --> 00:23:09,419
um doing a lot of that correlating and

450
00:23:09,419 --> 00:23:10,919
things like that so the three-bit field

451
00:23:10,919 --> 00:23:13,200
might rap too fast

452
00:23:13,200 --> 00:23:15,179
um but well you know

453
00:23:15,179 --> 00:23:18,000
that that's my feeling I don't know

454
00:23:18,000 --> 00:23:19,500
what might happen

455
00:23:19,500 --> 00:23:22,500
thank you I appreciate it yep okay

456
00:23:22,500 --> 00:23:24,980
next

457
00:23:27,960 --> 00:23:29,159
right

458
00:23:29,159 --> 00:23:30,480
um so

459
00:23:30,480 --> 00:23:31,980
there's

460
00:23:31,980 --> 00:23:34,320
quite a lot in the introduction about

461
00:23:34,320 --> 00:23:35,880
what the relation is to other activities

462
00:23:35,880 --> 00:23:40,320
first of all dctcp was the if you like

463
00:23:40,320 --> 00:23:43,380
post a child of extent based feedback

464
00:23:43,380 --> 00:23:45,360
um and

465
00:23:45,360 --> 00:23:47,760
that was where we learned that it was

466
00:23:47,760 --> 00:23:49,320
useful

467
00:23:49,320 --> 00:23:52,080
um the problem was that dctcp didn't

468
00:23:52,080 --> 00:23:54,179
negotiate this new form of feedback so

469
00:23:54,179 --> 00:23:56,820
you potentially had one end doing one

470
00:23:56,820 --> 00:23:58,080
form of feedback and the other thinking

471
00:23:58,080 --> 00:23:59,760
it was doing the other

472
00:23:59,760 --> 00:24:01,919
um that was fine in a data center that

473
00:24:01,919 --> 00:24:05,059
was administered by one sysadmin

474
00:24:05,059 --> 00:24:08,220
and it could that since admin could

475
00:24:08,220 --> 00:24:10,140
ensure that everything was configured

476
00:24:10,140 --> 00:24:13,320
correctly but um on the public internet

477
00:24:13,320 --> 00:24:15,720
that's a bit more problematic because

478
00:24:15,720 --> 00:24:17,520
there isn't ones this admin I believe

479
00:24:17,520 --> 00:24:19,980
still

480
00:24:19,980 --> 00:24:21,720
um

481
00:24:21,720 --> 00:24:23,580
so

482
00:24:23,580 --> 00:24:26,159
um we have added this negotiation phase

483
00:24:26,159 --> 00:24:29,400
during the three-way handshake

484
00:24:29,400 --> 00:24:31,140
and in fact

485
00:24:31,140 --> 00:24:32,100
um

486
00:24:32,100 --> 00:24:36,480
it it will fall back to the old form if

487
00:24:36,480 --> 00:24:39,179
one end doesn't support the new form of

488
00:24:39,179 --> 00:24:42,240
ACN and indeed if one end doesn't

489
00:24:42,240 --> 00:24:44,100
support any ecn at all it will fall back

490
00:24:44,100 --> 00:24:45,600
to just using drop

491
00:24:45,600 --> 00:24:48,240
so both ends have to support it

492
00:24:48,240 --> 00:24:51,059
um in the Linux implementation we have

493
00:24:51,059 --> 00:24:52,260
actually

494
00:24:52,260 --> 00:24:54,720
um written in a way for it to use the

495
00:24:54,720 --> 00:24:57,900
DCP TCP style of ecn feedback which is

496
00:24:57,900 --> 00:25:00,659
different the sort of toggling

497
00:25:00,659 --> 00:25:02,580
um case

498
00:25:02,580 --> 00:25:05,400
um but that's not in respect right so

499
00:25:05,400 --> 00:25:07,740
but that can be used internally in data

500
00:25:07,740 --> 00:25:10,200
centers and privately

501
00:25:10,200 --> 00:25:11,400
um

502
00:25:11,400 --> 00:25:13,020
so

503
00:25:13,020 --> 00:25:15,080
um

504
00:25:15,960 --> 00:25:18,900
the next thing it relates to is other

505
00:25:18,900 --> 00:25:20,460
congestion controls

506
00:25:20,460 --> 00:25:22,260
now

507
00:25:22,260 --> 00:25:24,360
now accurate Asian is pure the the spec

508
00:25:24,360 --> 00:25:27,179
is purely about the the feedback

509
00:25:27,179 --> 00:25:29,039
um mechanism and the wire protocol for

510
00:25:29,039 --> 00:25:30,659
doing that

511
00:25:30,659 --> 00:25:32,460
um it's still as clear as saying

512
00:25:32,460 --> 00:25:35,460
anything about congestion response

513
00:25:35,460 --> 00:25:36,539
um

514
00:25:36,539 --> 00:25:39,000
well I think it mentions the words but

515
00:25:39,000 --> 00:25:40,380
you know it doesn't doesn't say we've

516
00:25:40,380 --> 00:25:41,820
got to do about it

517
00:25:41,820 --> 00:25:43,919
um so

518
00:25:43,919 --> 00:25:45,900
um

519
00:25:45,900 --> 00:25:49,140
really feedback is architecturally below

520
00:25:49,140 --> 00:25:51,600
the congestion control

521
00:25:51,600 --> 00:25:53,640
um and so the congestion control depends

522
00:25:53,640 --> 00:25:55,860
on it and that means you can use

523
00:25:55,860 --> 00:25:58,380
accurate ecn feedback for any congestion

524
00:25:58,380 --> 00:26:01,740
control algorithm and that includes the

525
00:26:01,740 --> 00:26:04,799
the ones that don't need the higher

526
00:26:04,799 --> 00:26:07,200
accuracy you know that only want extent

527
00:26:07,200 --> 00:26:10,500
and not existence like Reno and cubic

528
00:26:10,500 --> 00:26:11,640
um so the callbacks in the

529
00:26:11,640 --> 00:26:13,860
implementation but still work just the

530
00:26:13,860 --> 00:26:15,779
same whether you use old or new so it is

531
00:26:15,779 --> 00:26:18,299
a replacement for

532
00:26:18,299 --> 00:26:21,840
um the existing TCP ecn feedback not a

533
00:26:21,840 --> 00:26:23,520
just a you don't have to choose which

534
00:26:23,520 --> 00:26:25,230
one you you use

535
00:26:25,230 --> 00:26:25,860
[Music]

536
00:26:25,860 --> 00:26:26,700
um

537
00:26:26,700 --> 00:26:29,760
the the other thing this relates to uh

538
00:26:29,760 --> 00:26:32,340
is the LPS experiment

539
00:26:32,340 --> 00:26:35,700
um which you you know is a probably the

540
00:26:35,700 --> 00:26:38,520
first example of something that uses it

541
00:26:38,520 --> 00:26:41,340
um hopefully not the last it is intended

542
00:26:41,340 --> 00:26:44,039
to be generic feedback

543
00:26:44,039 --> 00:26:45,360
um

544
00:26:45,360 --> 00:26:46,679
and

545
00:26:46,679 --> 00:26:49,200
um obviously

546
00:26:49,200 --> 00:26:51,120
um

547
00:26:51,120 --> 00:26:53,580
both ends have have to be able to use

548
00:26:53,580 --> 00:26:55,799
accurate ecn in order to get that

549
00:26:55,799 --> 00:26:58,020
accurate feedback but only one end needs

550
00:26:58,020 --> 00:27:01,020
to actually be Alpha SK people as far

551
00:27:01,020 --> 00:27:03,539
because l4s is a Ascender congestion

552
00:27:03,539 --> 00:27:06,179
control thing whereas the feedback is a

553
00:27:06,179 --> 00:27:07,320
end-to-end

554
00:27:07,320 --> 00:27:08,940
agreement

555
00:27:08,940 --> 00:27:11,520
and finally it relates to another draft

556
00:27:11,520 --> 00:27:13,860
ecn plus plus

557
00:27:13,860 --> 00:27:15,720
um that's what the title calls it now

558
00:27:15,720 --> 00:27:18,360
but the draft name is there and that

559
00:27:18,360 --> 00:27:22,080
removes the rule in 3168 ucn uh about

560
00:27:22,080 --> 00:27:24,659
not using ecn on

561
00:27:24,659 --> 00:27:29,480
CCP control packets and re-transmissions

562
00:27:30,260 --> 00:27:34,260
spec recommends using ECM plus plus I

563
00:27:34,260 --> 00:27:35,700
think that's okay to do that even though

564
00:27:35,700 --> 00:27:38,039
ECM plus plus is experimental and the

565
00:27:38,039 --> 00:27:41,779
accurate ecn's package proposed standard

566
00:27:42,260 --> 00:27:44,520
yeah okay

567
00:27:44,520 --> 00:27:46,919
and and the other way around

568
00:27:46,919 --> 00:27:50,039
um the there are also aspects in the ECM

569
00:27:50,039 --> 00:27:52,140
plus plus spec that you can't use unless

570
00:27:52,140 --> 00:27:56,539
you're using Acura ACN okay thanks

571
00:27:57,960 --> 00:28:00,779
so where does it fit in this stack just

572
00:28:00,779 --> 00:28:04,380
just to explain the diagram that's not

573
00:28:04,380 --> 00:28:06,659
an implementation diagram that's what

574
00:28:06,659 --> 00:28:08,760
works over what right

575
00:28:08,760 --> 00:28:11,220
um and

576
00:28:11,220 --> 00:28:14,460
um the idea is you've got IP at the

577
00:28:14,460 --> 00:28:15,600
bottom there

578
00:28:15,600 --> 00:28:17,880
and ECM plus plus is really about

579
00:28:17,880 --> 00:28:20,520
whether you set

580
00:28:20,520 --> 00:28:23,400
um the ecn field in the IP header so

581
00:28:23,400 --> 00:28:26,580
it's it's really about below TCP even

582
00:28:26,580 --> 00:28:29,400
though it's in tcpm and then the TCP

583
00:28:29,400 --> 00:28:32,039
layer I've split there into two

584
00:28:32,039 --> 00:28:35,460
sub layers for the

585
00:28:35,460 --> 00:28:36,480
um

586
00:28:36,480 --> 00:28:38,940
feedback and then the congestion control

587
00:28:38,940 --> 00:28:40,080
above it

588
00:28:40,080 --> 00:28:43,080
and um I think I've I've mostly

589
00:28:43,080 --> 00:28:44,600
explained all this on the previous slide

590
00:28:44,600 --> 00:28:48,419
you have to enable accurate ecn and it

591
00:28:48,419 --> 00:28:49,799
will fall back

592
00:28:49,799 --> 00:28:51,539
uh you have to enable it on both

593
00:28:51,539 --> 00:28:53,520
endpoints it will fall back otherwise

594
00:28:53,520 --> 00:28:57,240
no dependency on anything in the network

595
00:28:57,240 --> 00:28:59,760
um and as I said it replaces rather than

596
00:28:59,760 --> 00:29:02,039
and extends

597
00:29:02,039 --> 00:29:05,700
um the 3168 tcpn feedback

598
00:29:05,700 --> 00:29:08,640
um rather than being an alternative

599
00:29:08,640 --> 00:29:11,400
and also importantly out of scope in the

600
00:29:11,400 --> 00:29:13,140
Acura ecn spec

601
00:29:13,140 --> 00:29:15,179
is there's nothing about what the sender

602
00:29:15,179 --> 00:29:17,220
puts in the ecn field at the start it's

603
00:29:17,220 --> 00:29:18,899
only about the feedback of it and

604
00:29:18,899 --> 00:29:20,399
there's nothing about the sender's

605
00:29:20,399 --> 00:29:24,199
congestion response thanks

606
00:29:24,480 --> 00:29:25,740
so

607
00:29:25,740 --> 00:29:27,840
um these are the sort of

608
00:29:27,840 --> 00:29:29,279
um

609
00:29:29,279 --> 00:29:31,500
parts that

610
00:29:31,500 --> 00:29:33,539
um really need looking at closely if

611
00:29:33,539 --> 00:29:34,860
you're going to review this for working

612
00:29:34,860 --> 00:29:36,720
group last call

613
00:29:36,720 --> 00:29:38,880
um or if you already have

614
00:29:38,880 --> 00:29:40,080
um hopefully you've looked at these

615
00:29:40,080 --> 00:29:41,340
things

616
00:29:41,340 --> 00:29:43,159
negotiation phase

617
00:29:43,159 --> 00:29:45,419
there's a lot of

618
00:29:45,419 --> 00:29:47,840
um stuff in there particularly about

619
00:29:47,840 --> 00:29:51,120
detecting mangling through middle boxes

620
00:29:51,120 --> 00:29:53,010
and such like

621
00:29:53,010 --> 00:29:54,240
[Music]

622
00:29:54,240 --> 00:29:56,220
um and backward compatibility with old

623
00:29:56,220 --> 00:29:57,779
schemes forward compatibility with

624
00:29:57,779 --> 00:30:00,120
potential new schemes

625
00:30:00,120 --> 00:30:01,679
um fullback contingencies and things

626
00:30:01,679 --> 00:30:03,419
like that so that's that's quite a sort

627
00:30:03,419 --> 00:30:05,710
of sensitive area to have a look at

628
00:30:05,710 --> 00:30:06,299
[Music]

629
00:30:06,299 --> 00:30:06,960
um

630
00:30:06,960 --> 00:30:09,240
then

631
00:30:09,240 --> 00:30:12,000
um there's resilience against Atlas and

632
00:30:12,000 --> 00:30:13,320
coalescing and things like that please

633
00:30:13,320 --> 00:30:15,360
have a look at that

634
00:30:15,360 --> 00:30:16,799
um and

635
00:30:16,799 --> 00:30:18,899
implications of TCP wire protocol

636
00:30:18,899 --> 00:30:20,100
changes

637
00:30:20,100 --> 00:30:21,539
on

638
00:30:21,539 --> 00:30:23,520
either

639
00:30:23,520 --> 00:30:26,039
implications of middle boxes on there or

640
00:30:26,039 --> 00:30:29,100
implications of that on middle boxes

641
00:30:29,100 --> 00:30:29,880
um

642
00:30:29,880 --> 00:30:31,860
because anything you change on The Wire

643
00:30:31,860 --> 00:30:34,440
could be could affect that

644
00:30:34,440 --> 00:30:36,740
and then there's a section on

645
00:30:36,740 --> 00:30:39,899
interaction with TCP variants so if one

646
00:30:39,899 --> 00:30:41,279
of those is your favorite variant

647
00:30:41,279 --> 00:30:43,200
favorite variant

648
00:30:43,200 --> 00:30:46,559
um I think we've considered all all the

649
00:30:46,559 --> 00:30:49,500
combinations but please have a look and

650
00:30:49,500 --> 00:30:51,059
finally in security considerations

651
00:30:51,059 --> 00:30:52,919
there's all stuff about flooding attacks

652
00:30:52,919 --> 00:30:55,080
feedback Integrity downgrade attacks and

653
00:30:55,080 --> 00:30:56,220
things like that

654
00:30:56,220 --> 00:30:57,419
so

655
00:30:57,419 --> 00:30:59,700
I'm nearly there

656
00:30:59,700 --> 00:31:01,860
um the implementation we've got two

657
00:31:01,860 --> 00:31:04,919
slides on this what um we've been doing

658
00:31:04,919 --> 00:31:07,260
interrupt testing all this week down in

659
00:31:07,260 --> 00:31:09,720
the hack demo area

660
00:31:09,720 --> 00:31:16,020
um of l4s and Acura ecn and um the Linux

661
00:31:16,020 --> 00:31:18,299
implementation the ilpo

662
00:31:18,299 --> 00:31:20,840
primarily did Neil has

663
00:31:20,840 --> 00:31:24,600
updated to be based off the 515 Linux

664
00:31:24,600 --> 00:31:28,200
kernel and um there's a pull request I

665
00:31:28,200 --> 00:31:29,820
think hasn't quite happened yet but it's

666
00:31:29,820 --> 00:31:30,960
still a minute

667
00:31:30,960 --> 00:31:33,059
um to go into the l4s

668
00:31:33,059 --> 00:31:35,520
um repo as well

669
00:31:35,520 --> 00:31:37,679
um also the packet drill tests

670
00:31:37,679 --> 00:31:41,520
Neil has updated then Richard here has

671
00:31:41,520 --> 00:31:42,240
um

672
00:31:42,240 --> 00:31:44,700
uh been implementing it on FreeBSD he's

673
00:31:44,700 --> 00:31:47,580
that would be in free freebsd14 I

674
00:31:47,580 --> 00:31:50,700
believe that's great yep but without the

675
00:31:50,700 --> 00:31:54,120
optional TCP option and Richard's done a

676
00:31:54,120 --> 00:31:55,860
lot of the coding around that but still

677
00:31:55,860 --> 00:31:59,399
the parts of the TCP option

678
00:31:59,399 --> 00:32:01,260
um well there's there's some heuristic

679
00:32:01,260 --> 00:32:03,600
stuff not to do with the TCP option left

680
00:32:03,600 --> 00:32:05,100
and

681
00:32:05,100 --> 00:32:07,260
um some details of the TCP option as

682
00:32:07,260 --> 00:32:10,380
well and so far it passes all the packet

683
00:32:10,380 --> 00:32:14,159
drug tests that um I mentioned above

684
00:32:14,159 --> 00:32:15,779
that uh

685
00:32:15,779 --> 00:32:18,480
except except one to do with the TCP

686
00:32:18,480 --> 00:32:19,860
option obviously because it's not

687
00:32:19,860 --> 00:32:23,279
implemented right okay

688
00:32:23,279 --> 00:32:25,799
and moving on uh second slide about

689
00:32:25,799 --> 00:32:29,220
implementation Apple platforms now

690
00:32:29,220 --> 00:32:31,020
um also implement

691
00:32:31,020 --> 00:32:33,659
the um Acura ecn

692
00:32:33,659 --> 00:32:36,779
but only the reflector side so that we

693
00:32:36,779 --> 00:32:39,659
can test it against ascender

694
00:32:39,659 --> 00:32:41,880
all right so that means that

695
00:32:41,880 --> 00:32:44,220
um it will not

696
00:32:44,220 --> 00:32:47,700
really work as a sender but it will it

697
00:32:47,700 --> 00:32:49,679
will allow you to use accurate ECM

698
00:32:49,679 --> 00:32:52,559
between the two it's off by default in

699
00:32:52,559 --> 00:32:55,320
Mac OS iOS and all the other you know

700
00:32:55,320 --> 00:32:58,679
I iPad I watch I

701
00:32:58,679 --> 00:33:01,620
um think I therefore I am or whatever

702
00:33:01,620 --> 00:33:02,399
um

703
00:33:02,399 --> 00:33:05,178
the

704
00:33:05,399 --> 00:33:08,399
the um way to turn it on is written

705
00:33:08,399 --> 00:33:10,919
there net on it TCP accurate ecn assist

706
00:33:10,919 --> 00:33:12,960
control

707
00:33:12,960 --> 00:33:15,299
um and finally as I said all that has

708
00:33:15,299 --> 00:33:16,679
been being

709
00:33:16,679 --> 00:33:18,220
um interrupt tested

710
00:33:18,220 --> 00:33:18,899
[Music]

711
00:33:18,899 --> 00:33:19,500
um

712
00:33:19,500 --> 00:33:23,940
fairly extensively over the last week

713
00:33:23,940 --> 00:33:25,620
um which is how Richard found the

714
00:33:25,620 --> 00:33:27,419
problem in the spec

715
00:33:27,419 --> 00:33:29,820
um the the little thing about the

716
00:33:29,820 --> 00:33:32,279
multiple sins

717
00:33:32,279 --> 00:33:35,100
it's also been which is also um patched

718
00:33:35,100 --> 00:33:38,159
TCP dump but that hasn't got through yet

719
00:33:38,159 --> 00:33:41,340
but it's it's been submitted and

720
00:33:41,340 --> 00:33:43,140
um

721
00:33:43,140 --> 00:33:46,559
the Wireshark Michael has got that

722
00:33:46,559 --> 00:33:49,559
patched through so it's now in 4.0 uh it

723
00:33:49,559 --> 00:33:52,200
will show you the correct accuracy and

724
00:33:52,200 --> 00:33:54,179
Flags

725
00:33:54,179 --> 00:33:57,620
I think that's getting close to it

726
00:34:00,240 --> 00:34:05,179
yeah okay so are there any questions

727
00:34:11,219 --> 00:34:13,980
hey Bob um surely in your

728
00:34:13,980 --> 00:34:16,500
copious or Forest experimentation you

729
00:34:16,500 --> 00:34:18,480
have data on how often the option makes

730
00:34:18,480 --> 00:34:19,980
it through the internet

731
00:34:19,980 --> 00:34:21,780
I assume and if so could you share the

732
00:34:21,780 --> 00:34:23,940
results actually no because all the

733
00:34:23,940 --> 00:34:24,960
interrupt testing at the moment is

734
00:34:24,960 --> 00:34:26,639
testbed based

735
00:34:26,639 --> 00:34:29,399
so we can have have none of that oh I

736
00:34:29,399 --> 00:34:31,440
see okay yep

737
00:34:31,440 --> 00:34:34,679
so we actually did some tests

738
00:34:34,679 --> 00:34:37,619
um what was it from my lab from a

739
00:34:37,619 --> 00:34:40,440
FreeBSD machine in my University's lab

740
00:34:40,440 --> 00:34:43,739
to to the internet and figure out that

741
00:34:43,739 --> 00:34:47,099
um the net module and FreeBSD

742
00:34:47,099 --> 00:34:50,760
uh clears the AE bit

743
00:34:50,760 --> 00:34:51,599
um

744
00:34:51,599 --> 00:34:54,480
it will be fixed but it was one of the

745
00:34:54,480 --> 00:34:56,699
results the the options went through at

746
00:34:56,699 --> 00:34:58,800
least on that path

747
00:34:58,800 --> 00:35:03,060
yeah I mean for the IE bit we did

748
00:35:03,060 --> 00:35:05,160
um many years ago actually testing on

749
00:35:05,160 --> 00:35:06,359
that but yes we haven't done recent

750
00:35:06,359 --> 00:35:09,420
testing we did a massive set of tests so

751
00:35:09,420 --> 00:35:14,240
um that was Marcelo banulo and um

752
00:35:15,540 --> 00:35:18,000
um and there's a paper on that

753
00:35:18,000 --> 00:35:20,040
um that's referenced after the draft but

754
00:35:20,040 --> 00:35:23,760
the option wasn't like it is now when we

755
00:35:23,760 --> 00:35:26,119
did that

756
00:35:28,680 --> 00:35:32,040
again and we didn't actually find that

757
00:35:32,040 --> 00:35:33,000
problem

758
00:35:33,000 --> 00:35:35,220
on your I guess

759
00:35:35,220 --> 00:35:37,260
we were we we did you know mobile

760
00:35:37,260 --> 00:35:38,880
networks and we did it on fixed networks

761
00:35:38,880 --> 00:35:39,780
but

762
00:35:39,780 --> 00:35:41,400
um didn't see that problem in our BSD

763
00:35:41,400 --> 00:35:44,579
net well it's it's in that module from

764
00:35:44,579 --> 00:35:48,180
IPFW if you use that then right it uses

765
00:35:48,180 --> 00:35:50,160
that bit for internal things sets it

766
00:35:50,160 --> 00:35:51,839
internally and clears it because it

767
00:35:51,839 --> 00:35:55,220
thoughts no one uses it

768
00:35:55,560 --> 00:35:57,240
oh

769
00:35:57,240 --> 00:35:58,560
there's um

770
00:35:58,560 --> 00:36:00,839
questions in the queue Bob let's go okay

771
00:36:00,839 --> 00:36:04,920
oh today oh Craig sorry Christian I just

772
00:36:04,920 --> 00:36:06,180
removed you accidentally instead of

773
00:36:06,180 --> 00:36:07,619
letting you present

774
00:36:07,619 --> 00:36:09,480
um could you get back in the cute oh

775
00:36:09,480 --> 00:36:10,680
Christian can you go back in the queue

776
00:36:10,680 --> 00:36:12,420
so I can allow you to present I

777
00:36:12,420 --> 00:36:14,900
apologize

778
00:36:27,720 --> 00:36:30,720
foreign

779
00:36:34,500 --> 00:36:36,839
I completely forgot where the button is

780
00:36:36,839 --> 00:36:39,420
I'm feeling very silly right now

781
00:36:39,420 --> 00:36:41,700
Christian can you just I think you can

782
00:36:41,700 --> 00:36:44,040
just graph the mic yes okay

783
00:36:44,040 --> 00:36:46,980
yes do you hear me now

784
00:36:46,980 --> 00:36:50,400
yes yes good yes I have a question

785
00:36:50,400 --> 00:36:53,760
um in the in this easier negotiation

786
00:36:53,760 --> 00:36:54,900
option

787
00:36:54,900 --> 00:36:58,200
what happens if there is a past change

788
00:36:58,200 --> 00:37:01,640
during the connection

789
00:37:02,520 --> 00:37:05,520
that is suppose that you are doing easy

790
00:37:05,520 --> 00:37:08,599
and fine and then the writing changes

791
00:37:08,599 --> 00:37:11,640
and somehow you start going through a

792
00:37:11,640 --> 00:37:13,800
box that washes

793
00:37:13,800 --> 00:37:17,220
in the ecn bits

794
00:37:17,220 --> 00:37:19,980
or even whilst the AC beats so what

795
00:37:19,980 --> 00:37:22,560
happens then right

796
00:37:22,560 --> 00:37:24,720
um what what is the

797
00:37:24,720 --> 00:37:26,760
um first out there without watching the

798
00:37:26,760 --> 00:37:28,380
IP layer

799
00:37:28,380 --> 00:37:32,160
um yes the the Acura ecn

800
00:37:32,160 --> 00:37:34,920
um negotiation checks for mangling

801
00:37:34,920 --> 00:37:36,540
during the handshake but it doesn't

802
00:37:36,540 --> 00:37:39,660
continue to check for it but there are

803
00:37:39,660 --> 00:37:40,800
um

804
00:37:40,800 --> 00:37:43,140
there are statements in the in the

805
00:37:43,140 --> 00:37:46,560
spec about implementations may I think I

806
00:37:46,560 --> 00:37:48,480
can't remember exactly

807
00:37:48,480 --> 00:37:50,880
um you know check that things are still

808
00:37:50,880 --> 00:37:52,680
continuing but

809
00:37:52,680 --> 00:37:55,740
um the idea being that the idea for me

810
00:37:55,740 --> 00:37:57,180
being that you don't really want to have

811
00:37:57,180 --> 00:37:59,040
everything continually checked all the

812
00:37:59,040 --> 00:38:00,540
time when you're in in the in the fast

813
00:38:00,540 --> 00:38:02,820
path if you like so

814
00:38:02,820 --> 00:38:03,780
um

815
00:38:03,780 --> 00:38:05,700
and and you know I don't want to make

816
00:38:05,700 --> 00:38:08,280
people check things for years to come

817
00:38:08,280 --> 00:38:09,119
um

818
00:38:09,119 --> 00:38:12,000
I think that that sort of depends on

819
00:38:12,000 --> 00:38:14,880
How likely it is to happen

820
00:38:14,880 --> 00:38:17,220
um at the moment

821
00:38:17,220 --> 00:38:19,260
from from our testing any bleaching

822
00:38:19,260 --> 00:38:21,420
tended to be at the first hop

823
00:38:21,420 --> 00:38:24,060
so it's sort of less likely that a path

824
00:38:24,060 --> 00:38:26,640
change will will lose the first or

825
00:38:26,640 --> 00:38:28,619
change the first hop

826
00:38:28,619 --> 00:38:29,940
but um

827
00:38:29,940 --> 00:38:31,740
yes it could happen

828
00:38:31,740 --> 00:38:33,780
and and all I can say is that Equity

829
00:38:33,780 --> 00:38:36,900
stand is a lot better than ecn 3168 TCM

830
00:38:36,900 --> 00:38:40,339
which did no checking at all so um

831
00:38:40,339 --> 00:38:43,079
it's a it's a compromise between how

832
00:38:43,079 --> 00:38:46,040
often you check these things

833
00:38:46,800 --> 00:38:50,640
and ultimately if your ecn is mangled

834
00:38:50,640 --> 00:38:54,060
um if you if you fill up a a buffer

835
00:38:54,060 --> 00:38:55,619
somewhere you'll get a loss and then you

836
00:38:55,619 --> 00:38:58,820
respond to that you know so

837
00:39:00,300 --> 00:39:02,400
just a quick clarification when you say

838
00:39:02,400 --> 00:39:04,200
first top do you mean first hop at

839
00:39:04,200 --> 00:39:06,060
either end or do you mean specifically

840
00:39:06,060 --> 00:39:08,880
on the sender side

841
00:39:08,880 --> 00:39:11,520
we well we were we were testing from

842
00:39:11,520 --> 00:39:14,220
clients so it was the first hop from the

843
00:39:14,220 --> 00:39:19,260
client was was um tending to be where

844
00:39:19,260 --> 00:39:20,940
um any any bleaching of ECM was

845
00:39:20,940 --> 00:39:24,300
happening so either easier for quick I

846
00:39:24,300 --> 00:39:26,220
found a case where it was the last hop

847
00:39:26,220 --> 00:39:30,180
right towards the server that marked

848
00:39:30,180 --> 00:39:33,319
with the bits okay

849
00:39:33,900 --> 00:39:36,119
yeah then a path change might well if

850
00:39:36,119 --> 00:39:37,980
what if the service manages to move its

851
00:39:37,980 --> 00:39:39,960
state it might yeah

852
00:39:39,960 --> 00:39:41,280
um Richard I think it's your turn if

853
00:39:41,280 --> 00:39:42,300
you'd like to

854
00:39:42,300 --> 00:39:45,440
could you read your thoughts

855
00:39:47,220 --> 00:39:49,560
so I just wanted to uh expand on the

856
00:39:49,560 --> 00:39:51,240
interrupt of testing across the internet

857
00:39:51,240 --> 00:39:53,400
I just wanted to expand on the intro

858
00:39:53,400 --> 00:39:56,099
testing across the internet and that was

859
00:39:56,099 --> 00:39:59,460
done last time uh between Linux box that

860
00:39:59,460 --> 00:40:02,579
danil provided in two different uh

861
00:40:02,579 --> 00:40:04,380
hyperscalers one of which did actually

862
00:40:04,380 --> 00:40:07,500
the bleaching the other one did not and

863
00:40:07,500 --> 00:40:09,540
we did also do these tests with the

864
00:40:09,540 --> 00:40:11,520
accuracy an option basically

865
00:40:11,520 --> 00:40:13,800
reconfirming what we have found early on

866
00:40:13,800 --> 00:40:16,980
like eight years ago then we did some

867
00:40:16,980 --> 00:40:19,140
some real serious investigation about

868
00:40:19,140 --> 00:40:22,440
the viability of the acquisition option

869
00:40:22,440 --> 00:40:25,320
and the bids to Traverse the internet so

870
00:40:25,320 --> 00:40:28,880
no no big surprises there really

871
00:40:30,960 --> 00:40:33,240
thank you Richard great

872
00:40:33,240 --> 00:40:34,980
and Cory will be the last speaker on

873
00:40:34,980 --> 00:40:36,900
this uh because we are just about to run

874
00:40:36,900 --> 00:40:39,300
out of time can I just say that on on

875
00:40:39,300 --> 00:40:40,800
mangling

876
00:40:40,800 --> 00:40:42,780
um you know I'm sure there will be a

877
00:40:42,780 --> 00:40:44,700
problem somewhere or however much you

878
00:40:44,700 --> 00:40:46,800
test you won't find everything you know

879
00:40:46,800 --> 00:40:48,480
it's

880
00:40:48,480 --> 00:40:50,880
yeah uh gory first to remember is going

881
00:40:50,880 --> 00:40:53,280
through the mangling test and how often

882
00:40:53,280 --> 00:40:54,720
we talk about this and the rest of in

883
00:40:54,720 --> 00:40:56,640
the draft it's a bit complicated the

884
00:40:56,640 --> 00:40:57,660
draft

885
00:40:57,660 --> 00:40:59,400
but I guess answer to Christian is

886
00:40:59,400 --> 00:41:01,079
please read that draft and figure out

887
00:41:01,079 --> 00:41:02,460
whether the text actually says it

888
00:41:02,460 --> 00:41:04,200
because we need to make sure it's right

889
00:41:04,200 --> 00:41:07,879
yeah but there is text in there

890
00:41:08,760 --> 00:41:12,140
thank you very much Bob

891
00:41:15,060 --> 00:41:18,440
Martin yeah up next

892
00:41:21,540 --> 00:41:23,339
good afternoon I wanted to get a sense

893
00:41:23,339 --> 00:41:25,020
from the group about

894
00:41:25,020 --> 00:41:27,660
um appropriate by counting in RFC 3465

895
00:41:27,660 --> 00:41:29,820
it's been inspired by some recent uh

896
00:41:29,820 --> 00:41:31,140
events

897
00:41:31,140 --> 00:41:33,060
um I've worked like many of you have

898
00:41:33,060 --> 00:41:35,280
worked on TCP for a long time

899
00:41:35,280 --> 00:41:36,960
um if you had asked me a couple years

900
00:41:36,960 --> 00:41:39,660
ago like what is the last word in the RC

901
00:41:39,660 --> 00:41:41,640
series about ABC I would say oh well

902
00:41:41,640 --> 00:41:43,980
it's RFC 3465 and isn't it annoying it

903
00:41:43,980 --> 00:41:46,200
that's experimental and that's actually

904
00:41:46,200 --> 00:41:47,940
because you know for document reasons

905
00:41:47,940 --> 00:41:50,280
but that um turns out not to be true and

906
00:41:50,280 --> 00:41:51,660
I think we should take a look at it next

907
00:41:51,660 --> 00:41:54,078
slide please

908
00:41:54,119 --> 00:41:56,760
so um in the beginning this is what was

909
00:41:56,760 --> 00:41:58,380
in that in that document there was a

910
00:41:58,380 --> 00:42:00,420
question avoidance thing and a slow

911
00:42:00,420 --> 00:42:03,000
start thing uh and for a slow start we

912
00:42:03,000 --> 00:42:04,859
had this value L which is the maximum

913
00:42:04,859 --> 00:42:07,260
number of MSS as you would act in a

914
00:42:07,260 --> 00:42:09,660
single act or that you would accept this

915
00:42:09,660 --> 00:42:11,460
act for congest control purposes and

916
00:42:11,460 --> 00:42:13,980
that was set to no more than two next

917
00:42:13,980 --> 00:42:16,339
slide

918
00:42:16,500 --> 00:42:18,240
um now that whole congestion avoidant

919
00:42:18,240 --> 00:42:19,980
bit avoidance bit actually if you go

920
00:42:19,980 --> 00:42:23,099
look at RFC 50 5681 it takes that and

921
00:42:23,099 --> 00:42:25,440
recommends it so that 5681 is of course

922
00:42:25,440 --> 00:42:28,140
the like the main standards track Reno

923
00:42:28,140 --> 00:42:30,119
congestion control document so this is

924
00:42:30,119 --> 00:42:32,220
completely taken care of this is now in

925
00:42:32,220 --> 00:42:34,980
the standards Corpus

926
00:42:34,980 --> 00:42:38,099
um 5681 also took slow start uh the slow

927
00:42:38,099 --> 00:42:40,740
start Behavior but limited L to one and

928
00:42:40,740 --> 00:42:42,599
so uh

929
00:42:42,599 --> 00:42:45,420
um so if you were doing L equals one you

930
00:42:45,420 --> 00:42:47,280
were completely standards track if you

931
00:42:47,280 --> 00:42:48,839
were doing L equals two you were doing

932
00:42:48,839 --> 00:42:50,640
an experimental thing and if you're over

933
00:42:50,640 --> 00:42:52,200
two which by the way the links kernel

934
00:42:52,200 --> 00:42:54,599
does by default if I'm not mistaken here

935
00:42:54,599 --> 00:42:56,820
we go again uh then then I guess you're

936
00:42:56,820 --> 00:42:58,560
off the you know completely out of

937
00:42:58,560 --> 00:43:01,200
bounds of of ietf land but you know we

938
00:43:01,200 --> 00:43:04,759
know how that goes next slide

939
00:43:04,800 --> 00:43:07,200
so what is what has changed recently is

940
00:43:07,200 --> 00:43:09,060
this High start thing and this is what

941
00:43:09,060 --> 00:43:11,099
we alluded to briefly uh in the document

942
00:43:11,099 --> 00:43:12,480
review

943
00:43:12,480 --> 00:43:15,180
um but in my opinion in the ad review

944
00:43:15,180 --> 00:43:17,280
what the document originally said was a

945
00:43:17,280 --> 00:43:18,180
little bit

946
00:43:18,180 --> 00:43:19,740
um

947
00:43:19,740 --> 00:43:22,680
it was trying to massage the the need to

948
00:43:22,680 --> 00:43:25,020
refer to a experimental document a down

949
00:43:25,020 --> 00:43:27,000
ref in a way that was uh a little bit

950
00:43:27,000 --> 00:43:29,220
Elusive and so what I pushed them to do

951
00:43:29,220 --> 00:43:30,060
is actually just go ahead and

952
00:43:30,060 --> 00:43:32,040
standardize

953
00:43:32,040 --> 00:43:34,560
um when that when you were running slow

954
00:43:34,560 --> 00:43:37,560
start in conjunction with highstar plus

955
00:43:37,560 --> 00:43:39,900
plus that you just you can do ABC and

956
00:43:39,900 --> 00:43:42,000
there's no limit on L which is what they

957
00:43:42,000 --> 00:43:44,880
actually you know tested in the internet

958
00:43:44,880 --> 00:43:47,460
um and so right so so the current so

959
00:43:47,460 --> 00:43:49,680
assuming that the working group is fine

960
00:43:49,680 --> 00:43:52,260
with that when we do this um not last

961
00:43:52,260 --> 00:43:54,359
call but this second pass through the

962
00:43:54,359 --> 00:43:55,980
group consensus call through the group

963
00:43:55,980 --> 00:43:57,720
then this will move on onto the

964
00:43:57,720 --> 00:43:59,220
standards track and so the status will

965
00:43:59,220 --> 00:44:00,660
be what you see in this table here in

966
00:44:00,660 --> 00:44:02,819
the lower right that um

967
00:44:02,819 --> 00:44:04,859
well again the congestion avoidance is

968
00:44:04,859 --> 00:44:06,900
has always been standards for a long

969
00:44:06,900 --> 00:44:07,680
time

970
00:44:07,680 --> 00:44:08,700
um if you're doing High start plus plus

971
00:44:08,700 --> 00:44:10,680
you can sort of do essentially whatever

972
00:44:10,680 --> 00:44:12,960
you want they're probably with any value

973
00:44:12,960 --> 00:44:14,160
of L

974
00:44:14,160 --> 00:44:15,839
um if you are not running High start

975
00:44:15,839 --> 00:44:18,599
plus plus then um depending on your

976
00:44:18,599 --> 00:44:20,579
value of L you were either in proposed

977
00:44:20,579 --> 00:44:22,140
standard land you were in experimental

978
00:44:22,140 --> 00:44:24,420
land or you're once again out in in the

979
00:44:24,420 --> 00:44:27,000
wild is there another slide

980
00:44:27,000 --> 00:44:28,619
yes

981
00:44:28,619 --> 00:44:31,079
okay so there are a few options here uh

982
00:44:31,079 --> 00:44:32,760
one is you could just do nothing

983
00:44:32,760 --> 00:44:36,319
um it's always an option uh

984
00:44:36,319 --> 00:44:38,460
certainly you know there's always a case

985
00:44:38,460 --> 00:44:39,980
that that a lot of these

986
00:44:39,980 --> 00:44:42,240
non-interoperable issues that don't

987
00:44:42,240 --> 00:44:44,400
resolve don't relate to interoperability

988
00:44:44,400 --> 00:44:47,400
can be safely ignored but um you know I

989
00:44:47,400 --> 00:44:49,260
I have the misperception I was probably

990
00:44:49,260 --> 00:44:51,060
not the only one and I think it is

991
00:44:51,060 --> 00:44:52,859
misleading to people to point to this

992
00:44:52,859 --> 00:44:53,819
document

993
00:44:53,819 --> 00:44:56,579
uh a second like intermediate difficulty

994
00:44:56,579 --> 00:44:58,800
option is for me to initiate a document

995
00:44:58,800 --> 00:45:02,099
action which makes 3465 historic

996
00:45:02,099 --> 00:45:04,020
um and just say look as a community our

997
00:45:04,020 --> 00:45:06,420
best practice so there's there's a thing

998
00:45:06,420 --> 00:45:08,160
called slow start and it includes High

999
00:45:08,160 --> 00:45:10,020
start plus plus and so if you're doing

1000
00:45:10,020 --> 00:45:11,099
something other than that you're not

1001
00:45:11,099 --> 00:45:13,380
following the best practice anymore

1002
00:45:13,380 --> 00:45:15,480
um and that means that uh some things

1003
00:45:15,480 --> 00:45:17,280
are not unspecified but does leave a

1004
00:45:17,280 --> 00:45:20,280
nice tombstone in 3465 that says by the

1005
00:45:20,280 --> 00:45:21,720
way this has been standardized in these

1006
00:45:21,720 --> 00:45:24,000
following other RCS so you need not do

1007
00:45:24,000 --> 00:45:25,619
this experimental thing anymore which is

1008
00:45:25,619 --> 00:45:27,900
achieving my objective at least

1009
00:45:27,900 --> 00:45:29,700
and then the last option is we think

1010
00:45:29,700 --> 00:45:32,300
that one corner where um

1011
00:45:32,300 --> 00:45:36,119
non-high start plus plus with ABC L

1012
00:45:36,119 --> 00:45:37,740
greater than one is important we could

1013
00:45:37,740 --> 00:45:41,400
do a new tiny PS to to kind of sanctify

1014
00:45:41,400 --> 00:45:43,319
that in a standard

1015
00:45:43,319 --> 00:45:44,460
um

1016
00:45:44,460 --> 00:45:47,040
I whether that is worth doing or not

1017
00:45:47,040 --> 00:45:48,480
that's kind of what I want to ask the

1018
00:45:48,480 --> 00:45:52,680
community uh it uh I know Ian

1019
00:45:52,680 --> 00:45:54,359
Ian sweat as an individual I have a

1020
00:45:54,359 --> 00:45:55,680
question which is

1021
00:45:55,680 --> 00:45:56,400
um

1022
00:45:56,400 --> 00:45:58,859
at some point presumably bbr will

1023
00:45:58,859 --> 00:46:00,960
finally be standardized and bbr's

1024
00:46:00,960 --> 00:46:02,880
current startup is not high start plus

1025
00:46:02,880 --> 00:46:06,540
plus it is a notably different algorithm

1026
00:46:06,540 --> 00:46:09,300
um I've implemented both of them yeah

1027
00:46:09,300 --> 00:46:11,819
um what will we do about that are we

1028
00:46:11,819 --> 00:46:14,040
going to just throw the same text we

1029
00:46:14,040 --> 00:46:16,020
threw into high cert plus plus into bbr

1030
00:46:16,020 --> 00:46:18,180
start up and just say like it's

1031
00:46:18,180 --> 00:46:20,579
duplicated but we don't really care

1032
00:46:20,579 --> 00:46:23,099
um or or do we feel bad about that and

1033
00:46:23,099 --> 00:46:24,839
do we think that

1034
00:46:24,839 --> 00:46:26,760
well I'm duck and start saying the same

1035
00:46:26,760 --> 00:46:27,839
thing over and over again that is

1036
00:46:27,839 --> 00:46:30,480
duplicative or does bbr just reference

1037
00:46:30,480 --> 00:46:32,400
High start plus plus and say this isn't

1038
00:46:32,400 --> 00:46:34,260
High start plus plus but like

1039
00:46:34,260 --> 00:46:36,420
if you're doing bbr then this also

1040
00:46:36,420 --> 00:46:38,400
applies well well first of all I think

1041
00:46:38,400 --> 00:46:40,079
we're fairly far from bbr being

1042
00:46:40,079 --> 00:46:43,280
standards track but um

1043
00:46:43,280 --> 00:46:46,500
but when that time comes

1044
00:46:46,500 --> 00:46:49,619
um my understanding of bvr is it will be

1045
00:46:49,619 --> 00:46:51,839
like pretty new like

1046
00:46:51,839 --> 00:46:54,060
this whole like congestion avoidance so

1047
00:46:54,060 --> 00:46:56,040
slow start models is really creaky and

1048
00:46:56,040 --> 00:46:57,480
maybe breaking and you really ought to

1049
00:46:57,480 --> 00:46:59,099
write down what you're doing

1050
00:46:59,099 --> 00:47:01,140
like when you receive an ack which

1051
00:47:01,140 --> 00:47:03,180
presumably have some ABC elements in it

1052
00:47:03,180 --> 00:47:05,160
so you can have as a separate standards

1053
00:47:05,160 --> 00:47:07,859
track document that is um

1054
00:47:07,859 --> 00:47:09,180
that is like writing down what you're

1055
00:47:09,180 --> 00:47:10,740
doing and if that makes the process it

1056
00:47:10,740 --> 00:47:11,819
makes you the process you don't need to

1057
00:47:11,819 --> 00:47:15,240
rely on these other documents to to

1058
00:47:15,240 --> 00:47:16,619
um do that

1059
00:47:16,619 --> 00:47:19,200
Michael would you like to go next uh

1060
00:47:19,200 --> 00:47:20,760
microphone Michael Jackson from the

1061
00:47:20,760 --> 00:47:22,800
floor not being able to get into that

1062
00:47:22,800 --> 00:47:24,000
queue

1063
00:47:24,000 --> 00:47:26,819
um similar point is is I'm brought up

1064
00:47:26,819 --> 00:47:30,480
with what to do in PBR

1065
00:47:30,480 --> 00:47:33,420
um what if in the future high stat plus

1066
00:47:33,420 --> 00:47:35,700
plus is people are using different

1067
00:47:35,700 --> 00:47:39,500
things so I would prefer some

1068
00:47:39,500 --> 00:47:41,819
future-proof solution which is not tied

1069
00:47:41,819 --> 00:47:46,440
to using a particular algorithm we are

1070
00:47:46,440 --> 00:47:49,200
having now on the table

1071
00:47:49,200 --> 00:47:52,680
more or less by accident I mean it's the

1072
00:47:52,680 --> 00:47:54,359
document we have right now so we want to

1073
00:47:54,359 --> 00:47:56,040
shift something in but there is no

1074
00:47:56,040 --> 00:47:58,200
guarantee that in two years nothing else

1075
00:47:58,200 --> 00:48:01,079
comes up or so

1076
00:48:01,079 --> 00:48:03,780
so do we so is the group's consensus

1077
00:48:03,780 --> 00:48:04,980
that high start is not actually

1078
00:48:04,980 --> 00:48:08,040
necessarily best practice but

1079
00:48:08,040 --> 00:48:09,960
um kind of maybe an optional thing that

1080
00:48:09,960 --> 00:48:13,380
you can do no it's right now but what if

1081
00:48:13,380 --> 00:48:15,900
in two years or I mean BBI uses

1082
00:48:15,900 --> 00:48:19,079
something else so so again I think if we

1083
00:48:19,079 --> 00:48:22,260
specify a new slow start ish thing

1084
00:48:22,260 --> 00:48:22,980
um

1085
00:48:22,980 --> 00:48:24,720
that that is going to be standards track

1086
00:48:24,720 --> 00:48:26,579
then there's no there's no like document

1087
00:48:26,579 --> 00:48:28,800
downref issue it will just specify what

1088
00:48:28,800 --> 00:48:30,660
the new behavior is

1089
00:48:30,660 --> 00:48:32,819
um uh if you mess with a slow start you

1090
00:48:32,819 --> 00:48:34,140
mess with slow start and you have other

1091
00:48:34,140 --> 00:48:35,339
things

1092
00:48:35,339 --> 00:48:37,980
um there's not it doesn't

1093
00:48:37,980 --> 00:48:40,619
I think new standards new crash control

1094
00:48:40,619 --> 00:48:42,240
standards are neither here nor there in

1095
00:48:42,240 --> 00:48:45,078
this discussion

1096
00:48:46,339 --> 00:48:49,500
I didn't get the last sentence so I I

1097
00:48:49,500 --> 00:48:51,540
think it's just an orthogonal I don't I

1098
00:48:51,540 --> 00:48:54,180
don't think that the state of New

1099
00:48:54,180 --> 00:48:56,819
new slow start ish proposals in the

1100
00:48:56,819 --> 00:48:58,140
standards track is affected by this one

1101
00:48:58,140 --> 00:48:59,220
or the other because they will simply

1102
00:48:59,220 --> 00:49:01,619
specify what to do which may not include

1103
00:49:01,619 --> 00:49:04,079
include appropriate byte counting

1104
00:49:04,079 --> 00:49:06,560
um and if there's no need to reference

1105
00:49:06,560 --> 00:49:09,960
3465 or any or high stock plus plus or

1106
00:49:09,960 --> 00:49:11,220
any of the other documents they're just

1107
00:49:11,220 --> 00:49:12,960
going to State what they do and if they

1108
00:49:12,960 --> 00:49:14,579
meet if they have consensus they become

1109
00:49:14,579 --> 00:49:16,200
a standard

1110
00:49:16,200 --> 00:49:21,020
okay and they specify whatever they want

1111
00:49:21,020 --> 00:49:23,579
okay now if someone has a credential

1112
00:49:23,579 --> 00:49:27,420
control and they want to refer to 5681

1113
00:49:27,420 --> 00:49:28,140
um

1114
00:49:28,140 --> 00:49:29,880
slow start like without really

1115
00:49:29,880 --> 00:49:31,800
specifying it then they're stuck with

1116
00:49:31,800 --> 00:49:34,680
5681 slow start but I mean it's just a

1117
00:49:34,680 --> 00:49:36,359
paragraph to add to the document saying

1118
00:49:36,359 --> 00:49:39,780
Oh but you can also do this other thing

1119
00:49:39,780 --> 00:49:42,720
uh yeah yeah so I I think I'm going

1120
00:49:42,720 --> 00:49:43,980
selecting the same direction as Michael

1121
00:49:43,980 --> 00:49:46,560
but maybe from from the top rather in

1122
00:49:46,560 --> 00:49:48,300
the bottom so so there's another option

1123
00:49:48,300 --> 00:49:50,880
here that is like open up 5681 and do a

1124
00:49:50,880 --> 00:49:53,579
bigger lift and a more principled you

1125
00:49:53,579 --> 00:49:57,780
know discussion of this whole Space

1126
00:49:57,780 --> 00:49:59,280
um it's a big lift

1127
00:49:59,280 --> 00:50:01,440
so where's West Eddie who needs has free

1128
00:50:01,440 --> 00:50:03,660
time now to write a documents for us but

1129
00:50:03,660 --> 00:50:05,880
it'll be it'll be not quite as heavy as

1130
00:50:05,880 --> 00:50:09,180
as the 793 is but it will be

1131
00:50:09,180 --> 00:50:10,619
significant right and the question is

1132
00:50:10,619 --> 00:50:12,359
worth it but that I think it's an option

1133
00:50:12,359 --> 00:50:14,400
and it would solve some of these things

1134
00:50:14,400 --> 00:50:15,480
right

1135
00:50:15,480 --> 00:50:17,940
uh yes that is a even

1136
00:50:17,940 --> 00:50:19,619
um

1137
00:50:19,619 --> 00:50:22,140
yeah that's that's that's cranking this

1138
00:50:22,140 --> 00:50:25,680
scale of work up to 11. um if somebody

1139
00:50:25,680 --> 00:50:28,859
has it into them write a 56 any one best

1140
00:50:28,859 --> 00:50:33,240
zero zero um I would I think everyone

1141
00:50:33,240 --> 00:50:34,859
would welcome that there's always some

1142
00:50:34,859 --> 00:50:36,599
tweaks to be done

1143
00:50:36,599 --> 00:50:39,119
um but I I unless somebody stands up I

1144
00:50:39,119 --> 00:50:41,099
don't know that that's like I mean I

1145
00:50:41,099 --> 00:50:43,020
could write out any of these without

1146
00:50:43,020 --> 00:50:45,619
you know in a day and start the process

1147
00:50:45,619 --> 00:50:49,700
5681 this is a much bigger project

1148
00:50:50,460 --> 00:50:54,260
is a Christian yeah

1149
00:51:03,119 --> 00:51:04,920
Christian I can't hear you if you're

1150
00:51:04,920 --> 00:51:06,180
trying to talk

1151
00:51:06,180 --> 00:51:08,899
Christian

1152
00:51:09,000 --> 00:51:12,000
uh I'm gonna let gory go first in the

1153
00:51:12,000 --> 00:51:13,260
sake of time but we'll come back to you

1154
00:51:13,260 --> 00:51:14,220
Christian if you can get your audio

1155
00:51:14,220 --> 00:51:15,180
working

1156
00:51:15,180 --> 00:51:17,880
yeah gory Fair hist at the mic uh and

1157
00:51:17,880 --> 00:51:20,339
Christian here Christian go ahead

1158
00:51:20,339 --> 00:51:23,640
yes I'm sorry I mean uh yeah

1159
00:51:23,640 --> 00:51:27,059
I was I'm too old I forgot to unmute I'm

1160
00:51:27,059 --> 00:51:29,700
sorry I mean at some point in a few

1161
00:51:29,700 --> 00:51:32,819
years my brain will turn into mush and

1162
00:51:32,819 --> 00:51:34,800
and you won't have that problem because

1163
00:51:34,800 --> 00:51:37,800
the situation will be clear but in

1164
00:51:37,800 --> 00:51:39,599
between

1165
00:51:39,599 --> 00:51:43,980
um I am with loss and Michael on this

1166
00:51:43,980 --> 00:51:45,059
discussion

1167
00:51:45,059 --> 00:51:47,400
uh it's a

1168
00:51:47,400 --> 00:51:52,380
I think it's a mistake for the IDF to

1169
00:51:52,380 --> 00:51:55,800
specify implementations

1170
00:51:55,800 --> 00:51:59,460
in that case rather than specify rules

1171
00:51:59,460 --> 00:52:02,220
and desires I mean

1172
00:52:02,220 --> 00:52:04,440
for example clearly the rule for slow

1173
00:52:04,440 --> 00:52:07,920
start is that you shall not

1174
00:52:07,920 --> 00:52:12,260
um create big

1175
00:52:12,599 --> 00:52:15,720
um overflow and and end up with a lot of

1176
00:52:15,720 --> 00:52:18,900
losses because that's bad okay

1177
00:52:18,900 --> 00:52:23,099
and it's clear that high start does that

1178
00:52:23,099 --> 00:52:26,059
it's not the only way to do that I mean

1179
00:52:26,059 --> 00:52:28,940
I unpointed the different solution bbo

1180
00:52:28,940 --> 00:52:31,740
there is also a lot of research on

1181
00:52:31,740 --> 00:52:33,420
shopping

1182
00:52:33,420 --> 00:52:38,339
which will make a a quick assessment of

1183
00:52:38,339 --> 00:52:40,740
the the bandwidth and it's particularly

1184
00:52:40,740 --> 00:52:43,319
useful for long delay links

1185
00:52:43,319 --> 00:52:46,619
and so I think it would be much better

1186
00:52:46,619 --> 00:52:48,540
to have principles

1187
00:52:48,540 --> 00:52:50,460
rather than reference to specific

1188
00:52:50,460 --> 00:52:51,839
Solutions

1189
00:52:51,839 --> 00:52:54,480
if we are to make some kind of best

1190
00:52:54,480 --> 00:52:56,780
practice

1191
00:52:57,440 --> 00:53:01,700
as a referencing hey

1192
00:53:04,040 --> 00:53:06,900
not alone

1193
00:53:06,900 --> 00:53:09,480
so I mean I guess by myself

1194
00:53:09,480 --> 00:53:12,480
um yeah

1195
00:53:13,260 --> 00:53:15,180
so large proposed option four so maybe

1196
00:53:15,180 --> 00:53:17,880
option 3.5 is just to rev flow start

1197
00:53:17,880 --> 00:53:20,819
specifically and along the lines of

1198
00:53:20,819 --> 00:53:23,760
maybe something that that uh

1199
00:53:23,760 --> 00:53:25,859
that Christian outlined and that's

1200
00:53:25,859 --> 00:53:28,200
certainly fine I I don't have the

1201
00:53:28,200 --> 00:53:29,880
bandwidth to do that personally whereas

1202
00:53:29,880 --> 00:53:31,020
these are the things I do at the

1203
00:53:31,020 --> 00:53:32,400
bandwidth to do so I think that's a

1204
00:53:32,400 --> 00:53:34,079
concern as well

1205
00:53:34,079 --> 00:53:35,160
um

1206
00:53:35,160 --> 00:53:37,319
unless someone is volunteering today or

1207
00:53:37,319 --> 00:53:40,920
soon uh Corey

1208
00:53:40,920 --> 00:53:43,319
hey Gary first I don't normally do this

1209
00:53:43,319 --> 00:53:46,079
I don't like option two and I might

1210
00:53:46,079 --> 00:53:48,420
prefer option one of your list at this

1211
00:53:48,420 --> 00:53:49,980
moment and we were just in a side

1212
00:53:49,980 --> 00:53:52,559
meeting talking about satellite systems

1213
00:53:52,559 --> 00:53:54,480
but I suspect other systems also are

1214
00:53:54,480 --> 00:53:56,040
playing around with high star plus plus

1215
00:53:56,040 --> 00:53:58,200
and you know the algorithm is an

1216
00:53:58,200 --> 00:54:00,839
algorithm it interacts maybe we will

1217
00:54:00,839 --> 00:54:01,859
come up with something slightly

1218
00:54:01,859 --> 00:54:03,780
different in the short term maybe it'll

1219
00:54:03,780 --> 00:54:05,099
be wise I don't know what the actual

1220
00:54:05,099 --> 00:54:06,900
recommendation is so I just wonder

1221
00:54:06,900 --> 00:54:08,460
whether we're just kind of a little bit

1222
00:54:08,460 --> 00:54:10,260
ahead we know we need to do something

1223
00:54:10,260 --> 00:54:12,000
but I'm not sure we know exactly what we

1224
00:54:12,000 --> 00:54:13,680
should write at this moment

1225
00:54:13,680 --> 00:54:15,180
okay

1226
00:54:15,180 --> 00:54:17,899
thank you gory

1227
00:54:18,000 --> 00:54:19,140
hello

1228
00:54:19,140 --> 00:54:20,359
um

1229
00:54:20,359 --> 00:54:23,460
I would like to propose it I mean it

1230
00:54:23,460 --> 00:54:26,040
might be a simple way out of this

1231
00:54:26,040 --> 00:54:28,619
which which is in fact option three but

1232
00:54:28,619 --> 00:54:30,540
using a shot

1233
00:54:30,540 --> 00:54:33,059
I mean the point is that uh what are

1234
00:54:33,059 --> 00:54:34,800
whether we have high start or not you

1235
00:54:34,800 --> 00:54:36,540
know whatever mechanism we have it's

1236
00:54:36,540 --> 00:54:37,980
probably never going to be a fantastic

1237
00:54:37,980 --> 00:54:40,619
idea to have a huge burst

1238
00:54:40,619 --> 00:54:44,339
or a set of huge bursts right and we

1239
00:54:44,339 --> 00:54:45,839
could include the number two in the

1240
00:54:45,839 --> 00:54:47,160
short instead of the number one that

1241
00:54:47,160 --> 00:54:50,040
probably won't make the world melt but

1242
00:54:50,040 --> 00:54:52,740
it is a principle thing to avoid having

1243
00:54:52,740 --> 00:54:54,960
bursts and if you have good reasons

1244
00:54:54,960 --> 00:54:56,099
against that and it could be text

1245
00:54:56,099 --> 00:54:58,859
explaining right that algorithms in the

1246
00:54:58,859 --> 00:55:00,240
style of high start could be a reason

1247
00:55:00,240 --> 00:55:01,740
against that decision so you wouldn't

1248
00:55:01,740 --> 00:55:04,500
you know but make it a shot so what is

1249
00:55:04,500 --> 00:55:07,020
what is in highstar plus plus is may

1250
00:55:07,020 --> 00:55:09,059
choose any value for l

1251
00:55:09,059 --> 00:55:11,160
should choose Infinity if you have

1252
00:55:11,160 --> 00:55:15,119
pacing and without pacing um and if you

1253
00:55:15,119 --> 00:55:16,980
pick a pick whatever number if you are

1254
00:55:16,980 --> 00:55:18,000
smart enough to do it if you don't know

1255
00:55:18,000 --> 00:55:19,619
just pick eight that's what's that's

1256
00:55:19,619 --> 00:55:22,140
what's in that document right now I

1257
00:55:22,140 --> 00:55:24,780
think it specifies it focuses on eight

1258
00:55:24,780 --> 00:55:27,480
it's not any number it's eight has a

1259
00:55:27,480 --> 00:55:28,920
special position there

1260
00:55:28,920 --> 00:55:31,079
yes it is should choose eight unless you

1261
00:55:31,079 --> 00:55:33,680
understand what you were doing uh like

1262
00:55:33,680 --> 00:55:36,119
people have disagreed about this but I

1263
00:55:36,119 --> 00:55:38,280
think it is important to give the naive

1264
00:55:38,280 --> 00:55:40,619
implementer some number to grab

1265
00:55:40,619 --> 00:55:43,260
as a magic number uh rather than just

1266
00:55:43,260 --> 00:55:44,940
say no just go find a PhD to tell you

1267
00:55:44,940 --> 00:55:46,680
what your L should be

1268
00:55:46,680 --> 00:55:48,799
um

1269
00:55:49,140 --> 00:55:50,579
other people could disagree about that

1270
00:55:50,579 --> 00:55:51,839
we could have that comment on the list

1271
00:55:51,839 --> 00:55:54,660
that discussion on the list but um and

1272
00:55:54,660 --> 00:55:56,339
we'll have an opportunity in review for

1273
00:55:56,339 --> 00:55:58,920
the high start document

1274
00:55:58,920 --> 00:56:02,460
yeah so are we done thank you yeah we're

1275
00:56:02,460 --> 00:56:03,599
out of time um thank you very much

1276
00:56:03,599 --> 00:56:06,599
thanks

1277
00:56:10,619 --> 00:56:11,760
so

1278
00:56:11,760 --> 00:56:13,980
um that was not that was not the um

1279
00:56:13,980 --> 00:56:15,900
incredible encouragement I had hoped to

1280
00:56:15,900 --> 00:56:19,800
find so I I so I I I I think I mean we

1281
00:56:19,800 --> 00:56:21,000
should probably conclude with an action

1282
00:56:21,000 --> 00:56:24,839
item and um I guess the option is to do

1283
00:56:24,839 --> 00:56:28,680
nothing at this time but but to like be

1284
00:56:28,680 --> 00:56:30,480
more annoying about asking for somebody

1285
00:56:30,480 --> 00:56:33,420
to drop to draft this new standards

1286
00:56:33,420 --> 00:56:36,180
track document do people want to poll

1287
00:56:36,180 --> 00:56:37,020
okay

1288
00:56:37,020 --> 00:56:39,960
show him hands okay okay

1289
00:56:39,960 --> 00:56:41,960
um

1290
00:56:56,540 --> 00:57:00,180
and oh that's the question

1291
00:57:00,180 --> 00:57:01,680
is there no are there not three-way

1292
00:57:01,680 --> 00:57:03,240
polls

1293
00:57:03,240 --> 00:57:05,819
no oh

1294
00:57:05,819 --> 00:57:07,440
now we have to do like a game theory

1295
00:57:07,440 --> 00:57:09,540
tree

1296
00:57:09,540 --> 00:57:11,520
um

1297
00:57:11,520 --> 00:57:13,920
okay what what do you think you would

1298
00:57:13,920 --> 00:57:16,440
like um so so the consensus from before

1299
00:57:16,440 --> 00:57:19,200
was let's do a PS document so so maybe

1300
00:57:19,200 --> 00:57:20,940
like that's the question should we do a

1301
00:57:20,940 --> 00:57:22,079
PS document

1302
00:57:22,079 --> 00:57:23,640
and then uh if we want to have a show of

1303
00:57:23,640 --> 00:57:25,140
hands on who's willing to help co-author

1304
00:57:25,140 --> 00:57:26,940
that that would be amazing but um we can

1305
00:57:26,940 --> 00:57:29,220
see how that goes

1306
00:57:29,220 --> 00:57:31,680
I have open phone

1307
00:57:31,680 --> 00:57:33,359
would you like there to be one is the

1308
00:57:33,359 --> 00:57:35,359
first question right

1309
00:57:35,359 --> 00:57:37,440
is it is it would you would you like

1310
00:57:37,440 --> 00:57:39,240
there to be one or would you like to do

1311
00:57:39,240 --> 00:57:42,359
it oh sorry that is

1312
00:57:42,359 --> 00:57:44,940
okay please answer that as though like

1313
00:57:44,940 --> 00:57:46,859
would you like to the working group to

1314
00:57:46,859 --> 00:57:49,079
do would you like there to be a new PS

1315
00:57:49,079 --> 00:57:50,640
document that you're not necessarily

1316
00:57:50,640 --> 00:57:55,279
committing to right that is the question

1317
00:57:55,380 --> 00:57:57,079
I can't edit it

1318
00:57:57,079 --> 00:57:59,040
I don't want to create three polls and

1319
00:57:59,040 --> 00:58:02,839
have them all turn away that's uh

1320
00:58:04,800 --> 00:58:09,260
um I'll give folks like 20 more seconds

1321
00:58:09,599 --> 00:58:10,980
because I do want to keep things moving

1322
00:58:10,980 --> 00:58:12,839
but

1323
00:58:12,839 --> 00:58:14,839
um

1324
00:58:22,400 --> 00:58:25,380
I'm not seeing any new votes so um

1325
00:58:25,380 --> 00:58:28,200
I'm gonna I'm gonna end the session

1326
00:58:28,200 --> 00:58:29,400
there we go

1327
00:58:29,400 --> 00:58:30,780
um and we have

1328
00:58:30,780 --> 00:58:32,460
uh

1329
00:58:32,460 --> 00:58:33,780
nine people

1330
00:58:33,780 --> 00:58:35,520
nine people raise their hand

1331
00:58:35,520 --> 00:58:38,099
uh three people did not raise their hand

1332
00:58:38,099 --> 00:58:40,920
with a total of 12 people it's quite a

1333
00:58:40,920 --> 00:58:42,839
few fewer than it is in this room let

1334
00:58:42,839 --> 00:58:44,640
her learn this session

1335
00:58:44,640 --> 00:58:46,619
um I'm not sure if that's

1336
00:58:46,619 --> 00:58:49,200
an indication of lack of Interest or

1337
00:58:49,200 --> 00:58:51,660
what but um that's the information we

1338
00:58:51,660 --> 00:58:53,779
have

1339
00:58:55,559 --> 00:58:58,319
okay so um

1340
00:58:58,319 --> 00:59:00,839
cherish do you think we have a

1341
00:59:00,839 --> 00:59:02,520
well actually can anyone who says we

1342
00:59:02,520 --> 00:59:06,000
should not do that like stand up and

1343
00:59:06,000 --> 00:59:08,220
like object or or like propose a

1344
00:59:08,220 --> 00:59:09,960
different course of action because no

1345
00:59:09,960 --> 00:59:12,839
one spoke up for two option two

1346
00:59:12,839 --> 00:59:15,240
as long as I think there's sort of no

1347
00:59:15,240 --> 00:59:17,400
sense of urgency which is sort of what

1348
00:59:17,400 --> 00:59:19,440
what I think is is motivating a lot of

1349
00:59:19,440 --> 00:59:23,599
the passiveness right it's just not

1350
00:59:24,599 --> 00:59:26,940
that that's my read

1351
00:59:26,940 --> 00:59:28,859
all right that's reasonable

1352
00:59:28,859 --> 00:59:30,920
um

1353
00:59:34,440 --> 00:59:37,160
go for it Christian

1354
00:59:43,020 --> 00:59:44,520
you've been letting the queue so if

1355
00:59:44,520 --> 00:59:47,180
you'd like to speak

1356
00:59:50,099 --> 00:59:52,680
it seems to take a long time for him to

1357
00:59:52,680 --> 00:59:54,839
start up his session

1358
00:59:54,839 --> 00:59:57,020
foreign

1359
01:00:01,559 --> 01:00:03,000
I think we're going to move on just in

1360
01:00:03,000 --> 01:00:05,579
the sake of time uh Mary didn't yeah he

1361
01:00:05,579 --> 01:00:07,559
said his connection got interrupted

1362
01:00:07,559 --> 01:00:08,940
earlier and like maybe the question is

1363
01:00:08,940 --> 01:00:10,260
in the chat is the one he wants to say

1364
01:00:10,260 --> 01:00:13,460
should this be in Congress

1365
01:00:13,740 --> 01:00:15,900
oh well it could be yeah I'm assuming

1366
01:00:15,900 --> 01:00:17,400
that working group stands up oh that

1367
01:00:17,400 --> 01:00:18,960
would be a great place for it

1368
01:00:18,960 --> 01:00:19,799
um

1369
01:00:19,799 --> 01:00:23,040
uh although probably like the people who

1370
01:00:23,040 --> 01:00:24,720
would write it are in this room anyway I

1371
01:00:24,720 --> 01:00:27,420
would guess but all right so um I guess

1372
01:00:27,420 --> 01:00:29,520
a sort of I mean you guys can judge the

1373
01:00:29,520 --> 01:00:31,559
consensus it's not my role for in this

1374
01:00:31,559 --> 01:00:33,480
case but um I I think we're gonna have

1375
01:00:33,480 --> 01:00:34,980
to punt this to

1376
01:00:34,980 --> 01:00:37,380
without a proper decision the chairs can

1377
01:00:37,380 --> 01:00:38,400
discuss it on the side and then we'll

1378
01:00:38,400 --> 01:00:40,859
decide like what to do next yeah so um I

1379
01:00:40,859 --> 01:00:42,359
guess I will not move forward with doing

1380
01:00:42,359 --> 01:00:45,299
anything myself and um and we will have

1381
01:00:45,299 --> 01:00:47,280
to discuss this more thank you uh we

1382
01:00:47,280 --> 01:00:49,740
need to move on

1383
01:00:49,740 --> 01:00:52,740
TCP act request

1384
01:00:52,740 --> 01:00:58,040
and if you can be quick it's appreciated

1385
01:01:03,200 --> 01:01:06,180
okay hello everyone my name is Carlos

1386
01:01:06,180 --> 01:01:07,859
Gomez and I'm going to present the last

1387
01:01:07,859 --> 01:01:10,200
update of the draft entitled TCP a great

1388
01:01:10,200 --> 01:01:12,059
request it's our option

1389
01:01:12,059 --> 01:01:14,339
thanks please you also may take off your

1390
01:01:14,339 --> 01:01:16,319
mask if you want to if it's easier okay

1391
01:01:16,319 --> 01:01:18,839
if as long as people hear me okay yeah I

1392
01:01:18,839 --> 01:01:20,400
just want to make sure you know okay

1393
01:01:20,400 --> 01:01:23,579
so um first of all the review of the

1394
01:01:23,579 --> 01:01:26,520
motivation for the draft delay Dax is a

1395
01:01:26,520 --> 01:01:28,440
widely used mechanism which is intended

1396
01:01:28,440 --> 01:01:31,319
to reduce protocol overhead however in

1397
01:01:31,319 --> 01:01:32,940
some cases it may also contribute to

1398
01:01:32,940 --> 01:01:34,859
sub-optimal Performance

1399
01:01:34,859 --> 01:01:36,900
for example there are so-called large

1400
01:01:36,900 --> 01:01:39,240
congestion window scenarios meaning a

1401
01:01:39,240 --> 01:01:41,160
congestion window size much greater than

1402
01:01:41,160 --> 01:01:43,559
the MSS where saving up to one of every

1403
01:01:43,559 --> 01:01:45,599
two acts may be insufficient

1404
01:01:45,599 --> 01:01:47,819
uh for example when there may be

1405
01:01:47,819 --> 01:01:49,619
performance limitations due to highly

1406
01:01:49,619 --> 01:01:52,440
asymmetric path capacity or when we may

1407
01:01:52,440 --> 01:01:55,020
want to further reduce the computational

1408
01:01:55,020 --> 01:01:58,020
cost and network load of too many acts

1409
01:01:58,020 --> 01:02:00,599
there is also so-called small congestive

1410
01:02:00,599 --> 01:02:02,819
window scenarios where the congesting

1411
01:02:02,819 --> 01:02:04,680
window size would be up to the order of

1412
01:02:04,680 --> 01:02:07,920
around one MSS such as in data centers

1413
01:02:07,920 --> 01:02:09,780
where the bandwidth delay product may be

1414
01:02:09,780 --> 01:02:12,119
up to the order of one MSS in that case

1415
01:02:12,119 --> 01:02:15,720
delete X will incur utterly much greater

1416
01:02:15,720 --> 01:02:18,839
than the RTD and also in transactional

1417
01:02:18,839 --> 01:02:20,700
data exchanges or when the congestion

1418
01:02:20,700 --> 01:02:22,680
window decreases the ability of

1419
01:02:22,680 --> 01:02:25,079
requesting immediate acts may help avoid

1420
01:02:25,079 --> 01:02:27,900
idle times or allow a faster congestion

1421
01:02:27,900 --> 01:02:31,099
window growth next please

1422
01:02:31,619 --> 01:02:33,920
foreign

1423
01:02:34,859 --> 01:02:37,980
so on the status of the draft perhaps

1424
01:02:37,980 --> 01:02:39,780
you may recall that there was before the

1425
01:02:39,780 --> 01:02:41,400
creation of this document there was some

1426
01:02:41,400 --> 01:02:43,380
prior discussion in the area of Center

1427
01:02:43,380 --> 01:02:46,140
control of TCP acts which appeared to

1428
01:02:46,140 --> 01:02:48,119
converge to defining a new TCP option

1429
01:02:48,119 --> 01:02:51,240
serving two purposes providing a sender

1430
01:02:51,240 --> 01:02:52,920
with the ability of requesting and give

1431
01:02:52,920 --> 01:02:55,680
an upgrade or requesting immediate acts

1432
01:02:55,680 --> 01:02:58,859
while keeping the steady state pack rate

1433
01:02:58,859 --> 01:03:01,140
so today I'm presenting the updates in

1434
01:03:01,140 --> 01:03:03,240
version zero six which aims to address

1435
01:03:03,240 --> 01:03:05,339
the comments from the last meeting next

1436
01:03:05,339 --> 01:03:06,960
please

1437
01:03:06,960 --> 01:03:09,780
so uh let's go through the updates the

1438
01:03:09,780 --> 01:03:12,540
first one is in the main format of the

1439
01:03:12,540 --> 01:03:14,520
option the one that conveys the

1440
01:03:14,520 --> 01:03:17,400
requested act rate value

1441
01:03:17,400 --> 01:03:19,859
so after comments in the last meeting we

1442
01:03:19,859 --> 01:03:22,380
are going back from a size of six bytes

1443
01:03:22,380 --> 01:03:25,099
to five bytes because there were

1444
01:03:25,099 --> 01:03:28,140
commands that there's this lack of space

1445
01:03:28,140 --> 01:03:31,020
for TCP options especially in syn

1446
01:03:31,020 --> 01:03:32,040
packets

1447
01:03:32,040 --> 01:03:35,760
so now with the current format the R

1448
01:03:35,760 --> 01:03:37,440
Field which is the one that carries the

1449
01:03:37,440 --> 01:03:39,720
binary encoding of the upgrade would be

1450
01:03:39,720 --> 01:03:42,180
of seven bits the maximum value that

1451
01:03:42,180 --> 01:03:45,299
could be encoded here is 127 and we

1452
01:03:45,299 --> 01:03:47,940
still have one reserved bit which might

1453
01:03:47,940 --> 01:03:51,900
be useful for future users for perhaps

1454
01:03:51,900 --> 01:03:54,660
future encodings or values of R if

1455
01:03:54,660 --> 01:03:57,660
needed next please

1456
01:03:57,660 --> 01:04:00,480
the other main update in this last

1457
01:04:00,480 --> 01:04:03,559
version is the addition of appendix a

1458
01:04:03,559 --> 01:04:06,900
after a comment by Bob because he

1459
01:04:06,900 --> 01:04:08,400
mentioned that perhaps star was

1460
01:04:08,400 --> 01:04:11,579
converging somehow to something similar

1461
01:04:11,579 --> 01:04:15,299
to RFC 5690 which is also known as axcc

1462
01:04:15,299 --> 01:04:18,660
so we tried to clarify to provide some

1463
01:04:18,660 --> 01:04:21,299
comparison here to clarify the potential

1464
01:04:21,299 --> 01:04:23,099
similarities and differences between the

1465
01:04:23,099 --> 01:04:24,660
two documents

1466
01:04:24,660 --> 01:04:26,520
so first about the main goals and

1467
01:04:26,520 --> 01:04:27,960
features

1468
01:04:27,960 --> 01:04:32,099
see is an informational RFC to our best

1469
01:04:32,099 --> 01:04:33,920
knowledge it has not been implemented

1470
01:04:33,920 --> 01:04:37,020
the goal in this document is reducing

1471
01:04:37,020 --> 01:04:39,119
act traffic when there is congestion on

1472
01:04:39,119 --> 01:04:40,859
the reverse path so it is to apply

1473
01:04:40,859 --> 01:04:43,020
congestion control on Ax

1474
01:04:43,020 --> 01:04:46,859
and it is somehow relatively complex

1475
01:04:46,859 --> 01:04:49,380
mechanism which has different components

1476
01:04:49,380 --> 01:04:52,200
a component to detect lost an ecn marked

1477
01:04:52,200 --> 01:04:54,359
pure ax a mechanism for calculating the

1478
01:04:54,359 --> 01:04:57,059
ACT ratio a mechanism to announce access

1479
01:04:57,059 --> 01:04:59,339
support that means of a new TCP option

1480
01:04:59,339 --> 01:05:02,940
and a method to indicate new ratio

1481
01:05:02,940 --> 01:05:05,880
that's indicated by means of second new

1482
01:05:05,880 --> 01:05:07,460
TCP option

1483
01:05:07,460 --> 01:05:10,740
regarding tar the intended status is

1484
01:05:10,740 --> 01:05:13,260
experimental and the focus is a bit

1485
01:05:13,260 --> 01:05:15,420
different it's rather on end-to-end

1486
01:05:15,420 --> 01:05:17,520
performance and also and system resource

1487
01:05:17,520 --> 01:05:19,020
conservation

1488
01:05:19,020 --> 01:05:21,000
it is the tar allows the sender to

1489
01:05:21,000 --> 01:05:22,260
request a given aggression from the

1490
01:05:22,260 --> 01:05:24,240
receiver an immediate act while keeping

1491
01:05:24,240 --> 01:05:26,760
the steady state act ratio and dar

1492
01:05:26,760 --> 01:05:29,220
appears to be a quite simple tool which

1493
01:05:29,220 --> 01:05:31,260
perhaps could be a component of other

1494
01:05:31,260 --> 01:05:34,260
more complex mechanisms including but

1495
01:05:34,260 --> 01:05:36,780
not limited to a mechanism for AC

1496
01:05:36,780 --> 01:05:38,520
congestion control but also including

1497
01:05:38,520 --> 01:05:41,579
the different benefits in different

1498
01:05:41,579 --> 01:05:43,020
scenarios that I mentioned at the

1499
01:05:43,020 --> 01:05:45,000
beginning of the presentation

1500
01:05:45,000 --> 01:05:47,780
next please

1501
01:05:47,880 --> 01:05:50,819
so regarding how the new TCP options

1502
01:05:50,819 --> 01:05:54,000
would be defined in these two documents

1503
01:05:54,000 --> 01:05:58,140
um regarding xcc it defines two TCP

1504
01:05:58,140 --> 01:06:00,119
options one intended to announce access

1505
01:06:00,119 --> 01:06:02,880
support which is always present in syn

1506
01:06:02,880 --> 01:06:05,099
packets another one intended to

1507
01:06:05,099 --> 01:06:07,380
communicate the ACT ratio

1508
01:06:07,380 --> 01:06:11,220
and as far as I know there is no TCP

1509
01:06:11,220 --> 01:06:13,260
option kind value assigned by Ayana for

1510
01:06:13,260 --> 01:06:18,240
this and about tar which is well has

1511
01:06:18,240 --> 01:06:20,339
been defined more recently

1512
01:06:20,339 --> 01:06:21,780
um and also it has the experimental

1513
01:06:21,780 --> 01:06:24,660
intended status it uses a single TCP

1514
01:06:24,660 --> 01:06:26,700
experimental option kind value so it

1515
01:06:26,700 --> 01:06:29,579
follows RFC 6994

1516
01:06:29,579 --> 01:06:32,099
so this single option kind value is used

1517
01:06:32,099 --> 01:06:34,619
to announce support of tar and also to

1518
01:06:34,619 --> 01:06:37,319
request the upgrade by the way uh

1519
01:06:37,319 --> 01:06:39,660
announcing the support of tar may be

1520
01:06:39,660 --> 01:06:41,400
done in syn packets but it doesn't have

1521
01:06:41,400 --> 01:06:44,520
to be okay and then there is one

1522
01:06:44,520 --> 01:06:46,740
experimental ID value which is zero zero

1523
01:06:46,740 --> 01:06:49,920
AC which has been allocated by Ayana

1524
01:06:49,920 --> 01:06:51,900
next please

1525
01:06:51,900 --> 01:06:55,200
so uh wondering about next steps and

1526
01:06:55,200 --> 01:06:56,940
considering the current state of the

1527
01:06:56,940 --> 01:06:57,900
document

1528
01:06:57,900 --> 01:07:00,000
the authors feel that the document is

1529
01:07:00,000 --> 01:07:02,400
somehow getting stable the purpose and

1530
01:07:02,400 --> 01:07:04,920
methods should hopefully be clear there

1531
01:07:04,920 --> 01:07:07,440
is even some uh initial code of a

1532
01:07:07,440 --> 01:07:09,539
prototype implementation started by

1533
01:07:09,539 --> 01:07:14,099
Michael uh led by Michael for FreeBSD so

1534
01:07:14,099 --> 01:07:16,140
we would like to ask the working group

1535
01:07:16,140 --> 01:07:18,599
whether the document is perhaps ready

1536
01:07:18,599 --> 01:07:21,420
for working group adoption

1537
01:07:21,420 --> 01:07:25,640
any comments questions

1538
01:07:31,260 --> 01:07:34,500
I just started the poll uh pre-request

1539
01:07:34,500 --> 01:07:37,559
um and so now I'll give you one minute

1540
01:07:37,559 --> 01:07:40,500
answer if you would like to adopt this

1541
01:07:40,500 --> 01:07:43,640
draft into the working group

1542
01:08:04,559 --> 01:08:06,539
foreign

1543
01:08:06,539 --> 01:08:09,059
you want to say something

1544
01:08:09,059 --> 01:08:12,140
just go to the mic

1545
01:08:12,599 --> 01:08:15,420
can you eat the mic please I mean not

1546
01:08:15,420 --> 01:08:17,839
really right

1547
01:08:23,299 --> 01:08:25,859
can you explain a little bit why you

1548
01:08:25,859 --> 01:08:28,080
need that so because I mean you say data

1549
01:08:28,080 --> 01:08:29,660
center

1550
01:08:29,660 --> 01:08:32,100
inefficient but application or TCP

1551
01:08:32,100 --> 01:08:35,160
implementation just put push frag right

1552
01:08:35,160 --> 01:08:39,299
so the it can kind of explicitly

1553
01:08:39,299 --> 01:08:43,500
uh the ask for immediate Act

1554
01:08:43,500 --> 01:08:45,779
right so

1555
01:08:45,779 --> 01:08:47,580
can you explain a bit about what the

1556
01:08:47,580 --> 01:08:48,839
exact programming data center

1557
01:08:48,839 --> 01:08:50,460
applications

1558
01:08:50,460 --> 01:08:52,620
yes

1559
01:08:52,620 --> 01:08:55,198
there is there is one DNS related

1560
01:08:55,198 --> 01:08:57,238
document which is referenced in the in

1561
01:08:57,238 --> 01:08:59,939
the draft which describes this sort of

1562
01:08:59,939 --> 01:09:03,000
issue where uh you may send the packet

1563
01:09:03,000 --> 01:09:07,219
then you will have a delay until you get

1564
01:09:07,219 --> 01:09:11,040
the response which is just introduced by

1565
01:09:11,040 --> 01:09:13,859
the client send some data and then

1566
01:09:13,859 --> 01:09:17,460
server waits for next packet

1567
01:09:17,460 --> 01:09:20,040
so I I think the interaction the issue

1568
01:09:20,040 --> 01:09:21,960
there it's obviously 8 000 something

1569
01:09:21,960 --> 01:09:23,640
it's about DNS

1570
01:09:23,640 --> 01:09:26,819
so um there was some interaction where

1571
01:09:26,819 --> 01:09:30,660
uh an endpoint was sending a packet and

1572
01:09:30,660 --> 01:09:32,819
then the response was delayed just

1573
01:09:32,819 --> 01:09:35,160
because of the presence of uh the

1574
01:09:35,160 --> 01:09:38,520
delayed tax so why does the center just

1575
01:09:38,520 --> 01:09:41,339
put sprag on that sorry the push flag

1576
01:09:41,339 --> 01:09:46,278
usually TCP receiver we're interested

1577
01:09:48,120 --> 01:09:49,080
um

1578
01:09:49,080 --> 01:09:51,420
this was discussed in initial

1579
01:09:51,420 --> 01:09:53,939
presentations of this effort and it

1580
01:09:53,939 --> 01:09:56,640
seemed like it was not exactly that we

1581
01:09:56,640 --> 01:10:00,120
could actually just push for this wow

1582
01:10:00,120 --> 01:10:03,660
I mean um the the answer was still

1583
01:10:03,660 --> 01:10:06,420
delayed I think I don't remember all the

1584
01:10:06,420 --> 01:10:09,360
the details but I

1585
01:10:09,360 --> 01:10:11,520
may ask that um just in the interest of

1586
01:10:11,520 --> 01:10:12,420
time

1587
01:10:12,420 --> 01:10:14,100
um it might be this might be a good side

1588
01:10:14,100 --> 01:10:15,900
conversation since this has been

1589
01:10:15,900 --> 01:10:17,219
discussed in the past but I'd like

1590
01:10:17,219 --> 01:10:18,719
Michael to talk

1591
01:10:18,719 --> 01:10:21,480
yeah so the point is that on the

1592
01:10:21,480 --> 01:10:23,640
receiver side it's not specified that

1593
01:10:23,640 --> 01:10:25,500
you send an egg immediately when you

1594
01:10:25,500 --> 01:10:27,120
receive a push flight some

1595
01:10:27,120 --> 01:10:29,880
implementations do but you can't rely on

1596
01:10:29,880 --> 01:10:33,800
that ESD for example does not

1597
01:10:34,820 --> 01:10:38,520
so what is the reason why the receiver

1598
01:10:38,520 --> 01:10:41,640
does not respond immediately in case of

1599
01:10:41,640 --> 01:10:45,199
receiving push flag packets

1600
01:10:45,600 --> 01:10:47,460
I'm going to argue that's out of scope

1601
01:10:47,460 --> 01:10:49,980
for this draft because that's an

1602
01:10:49,980 --> 01:10:52,879
implementation choice

1603
01:10:53,159 --> 01:10:55,440
I mean it's all a good reason not to

1604
01:10:55,440 --> 01:10:57,420
implement that immediate act for post

1605
01:10:57,420 --> 01:10:59,159
frag then the

1606
01:10:59,159 --> 01:11:01,440
that everyone just should do that isn't

1607
01:11:01,440 --> 01:11:05,400
it instead of defining new TCP options

1608
01:11:05,400 --> 01:11:08,280
just a very brief answer that is not the

1609
01:11:08,280 --> 01:11:10,199
purpose of the push flag

1610
01:11:10,199 --> 01:11:13,380
this has a different purpose hey

1611
01:11:13,380 --> 01:11:14,820
um Corey technically you're next on the

1612
01:11:14,820 --> 01:11:17,900
Queue sorry Mira

1613
01:11:22,159 --> 01:11:24,480
So Korea

1614
01:11:24,480 --> 01:11:26,219
I'm just a little bit concerned that

1615
01:11:26,219 --> 01:11:28,080
perhaps there are other things in the

1616
01:11:28,080 --> 01:11:30,420
network doing three four four nine on

1617
01:11:30,420 --> 01:11:33,540
other act mindling and we have offload

1618
01:11:33,540 --> 01:11:36,000
like with it with quick we understand

1619
01:11:36,000 --> 01:11:39,239
the fact probably with TCP I'm less sure

1620
01:11:39,239 --> 01:11:41,699
so is there information about how the

1621
01:11:41,699 --> 01:11:43,500
network responds when you kind of do

1622
01:11:43,500 --> 01:11:45,000
this and what result you get when you

1623
01:11:45,000 --> 01:11:46,980
try and do something at the receiver and

1624
01:11:46,980 --> 01:11:50,120
the Network's also doing something

1625
01:11:50,820 --> 01:11:54,060
sorry could you repeat the last yeah you

1626
01:11:54,060 --> 01:11:55,560
can put you can put it in notes I'll

1627
01:11:55,560 --> 01:11:57,420
send an email and we can discuss so I'm

1628
01:11:57,420 --> 01:11:58,980
looking for information about the

1629
01:11:58,980 --> 01:12:00,900
combination of what the network does in

1630
01:12:00,900 --> 01:12:04,020
RSC 3449 and offload and what this

1631
01:12:04,020 --> 01:12:05,580
mechanism will do when you combine them

1632
01:12:05,580 --> 01:12:07,560
okay and looking for data and please

1633
01:12:07,560 --> 01:12:10,520
discuss that on the list

1634
01:12:10,560 --> 01:12:13,500
yeah so I would like to keep using the

1635
01:12:13,500 --> 01:12:16,020
my queue at least as we're not saying

1636
01:12:16,020 --> 01:12:17,520
our names something like that would be

1637
01:12:17,520 --> 01:12:19,020
helpful to keep the MyQ for everybody

1638
01:12:19,020 --> 01:12:22,140
but I'm here to relay Christian

1639
01:12:22,140 --> 01:12:23,580
um that's why I ended the queue he said

1640
01:12:23,580 --> 01:12:25,199
in the chat if we do something for

1641
01:12:25,199 --> 01:12:27,120
controlling accurate and TCP should we

1642
01:12:27,120 --> 01:12:28,620
try to keep common concepts with the

1643
01:12:28,620 --> 01:12:31,199
delayed option and quick this would be

1644
01:12:31,199 --> 01:12:33,179
very this would help building common

1645
01:12:33,179 --> 01:12:35,719
experience

1646
01:12:38,460 --> 01:12:41,040
thank you for relaying mirror

1647
01:12:41,040 --> 01:12:43,380
so we got the result and make a decision

1648
01:12:43,380 --> 01:12:47,880
based on also for email feedback

1649
01:12:47,880 --> 01:12:50,239
thanks I'm going to move on to the next

1650
01:12:50,239 --> 01:12:53,100
and that's right

1651
01:12:53,100 --> 01:12:55,679
yeah

1652
01:12:55,679 --> 01:12:58,020
uh oh that's actually what's on the

1653
01:12:58,020 --> 01:12:59,880
slide there's like there's a big expat

1654
01:12:59,880 --> 01:13:02,820
on my slide it must not work

1655
01:13:02,820 --> 01:13:04,940
um

1656
01:13:07,880 --> 01:13:11,580
oh I I I'm sorry I think it was 21 in

1657
01:13:11,580 --> 01:13:12,780
favor

1658
01:13:12,780 --> 01:13:16,500
21 raise the hand three did not so we

1659
01:13:16,500 --> 01:13:19,620
had 24 people

1660
01:13:19,620 --> 01:13:22,699
giving an opinion

1661
01:13:24,659 --> 01:13:26,219
please go

1662
01:13:26,219 --> 01:13:29,460
uh hi everyone I'm William from China

1663
01:13:29,460 --> 01:13:33,300
Telecom and I will give the presentation

1664
01:13:33,300 --> 01:13:36,900
of this draft on behalf of the co-oplers

1665
01:13:36,900 --> 01:13:40,280
next slide please

1666
01:13:44,179 --> 01:13:48,540
first of all I will introduce our uh the

1667
01:13:48,540 --> 01:13:51,679
background and motivation of this draft

1668
01:13:51,679 --> 01:13:54,960
with the rapidly increasing of the

1669
01:13:54,960 --> 01:13:57,179
customer number and the service

1670
01:13:57,179 --> 01:13:59,460
requirements uh

1671
01:13:59,460 --> 01:14:05,480
the service we need a more flexible and

1672
01:14:05,480 --> 01:14:10,080
scalable Network and the increasing of

1673
01:14:10,080 --> 01:14:14,460
the age resource plots uh makes the

1674
01:14:14,460 --> 01:14:17,880
service note that provides the same

1675
01:14:17,880 --> 01:14:20,460
service functions can be deployed

1676
01:14:20,460 --> 01:14:24,560
deployed in different resource ports and

1677
01:14:24,560 --> 01:14:29,460
use the same anycast IP address and as

1678
01:14:29,460 --> 01:14:34,199
the scenario shown in the figure the R1

1679
01:14:34,199 --> 01:14:40,140
was is the increase router and R2 R3 and

1680
01:14:40,140 --> 01:14:44,520
R4 are equals routers each EOS router

1681
01:14:44,520 --> 01:14:48,900
connects to a service node and the three

1682
01:14:48,900 --> 01:14:51,540
service nodes provides the same service

1683
01:14:51,540 --> 01:14:53,000
function

1684
01:14:53,000 --> 01:14:56,580
and when the customer a accesses to the

1685
01:14:56,580 --> 01:15:01,920
service it will send a okay to R1 and R1

1686
01:15:01,920 --> 01:15:05,400
will determine the optimal service notes

1687
01:15:05,400 --> 01:15:08,100
for the customer a based on the

1688
01:15:08,100 --> 01:15:10,520
Network's status

1689
01:15:10,520 --> 01:15:14,659
and since the uh

1690
01:15:15,199 --> 01:15:19,080
since the network status is constantly

1691
01:15:19,080 --> 01:15:22,679
changing so different customers may be

1692
01:15:22,679 --> 01:15:25,500
scheduled to different service nodes but

1693
01:15:25,500 --> 01:15:28,560
for the customers who have established

1694
01:15:28,560 --> 01:15:32,219
the connections of the service not that

1695
01:15:32,219 --> 01:15:35,460
provides the service must remain

1696
01:15:35,460 --> 01:15:38,340
unchanged and that's why please

1697
01:15:38,340 --> 01:15:41,960
Lars do you have a question oh

1698
01:15:44,820 --> 01:15:49,980
oh yes uh to keep the established

1699
01:15:49,980 --> 01:15:54,600
connections uh unchanged uh the uh the

1700
01:15:54,600 --> 01:15:57,900
current uh Solutions need to maintain

1701
01:15:57,900 --> 01:16:00,480
the customer based connections data

1702
01:16:00,480 --> 01:16:05,040
tables in English and English rotors uh

1703
01:16:05,040 --> 01:16:08,760
this is a lake of flexibility and

1704
01:16:08,760 --> 01:16:13,020
scalability we proposed a solution for

1705
01:16:13,020 --> 01:16:16,280
the service Affinity between client and

1706
01:16:16,280 --> 01:16:20,040
server based on one newly defined TCP

1707
01:16:20,040 --> 01:16:25,199
options and this options can realize the

1708
01:16:25,199 --> 01:16:27,480
comprehensive scheduling based on

1709
01:16:27,480 --> 01:16:30,239
real-time Network status

1710
01:16:30,239 --> 01:16:34,380
this solution can eliminate the needs to

1711
01:16:34,380 --> 01:16:38,719
uh to maintain such tables in the

1712
01:16:38,719 --> 01:16:42,120
networked devices and can improve the

1713
01:16:42,120 --> 01:16:45,179
flexibility and scalability of

1714
01:16:45,179 --> 01:16:47,940
large-scale deployment of any class

1715
01:16:47,940 --> 01:16:50,580
Services scheduling

1716
01:16:50,580 --> 01:16:53,780
necessary please

1717
01:16:54,300 --> 01:16:59,460
uh a way we think we also need a new

1718
01:16:59,460 --> 01:17:02,940
flag uh we call this ICF Flex to

1719
01:17:02,940 --> 01:17:07,560
identify the center uh can support the

1720
01:17:07,560 --> 01:17:10,800
TCP service Affinity options

1721
01:17:10,800 --> 01:17:13,940
uh one the custom a

1722
01:17:13,940 --> 01:17:17,340
accesses to the service it will send a

1723
01:17:17,340 --> 01:17:22,739
TCP package which uh in which the x y n

1724
01:17:22,739 --> 01:17:27,780
and saf Flex are set and the destination

1725
01:17:27,780 --> 01:17:31,620
address of this package is set to the

1726
01:17:31,620 --> 01:17:35,360
anycast IP address of the service

1727
01:17:35,360 --> 01:17:41,340
and the well R1 received the package it

1728
01:17:41,340 --> 01:17:44,420
will schedule the request and determines

1729
01:17:44,420 --> 01:17:48,360
that serve is not behind R4 will provide

1730
01:17:48,360 --> 01:17:51,380
the service and it will forwarding this

1731
01:17:51,380 --> 01:17:55,920
uh TCP package to R4 or to the service

1732
01:17:55,920 --> 01:18:00,360
node uh through R4 and the service node

1733
01:18:00,360 --> 01:18:03,480
will return its IP address and Port

1734
01:18:03,480 --> 01:18:07,320
information through the service Affinity

1735
01:18:07,320 --> 01:18:11,699
options to the customer a and finally

1736
01:18:11,699 --> 01:18:13,640
customer a will

1737
01:18:13,640 --> 01:18:16,440
established the connection to service

1738
01:18:16,440 --> 01:18:18,600
now behind R4

1739
01:18:18,600 --> 01:18:21,480
and that's left please

1740
01:18:21,480 --> 01:18:25,620
oh this is the encoding of the newly

1741
01:18:25,620 --> 01:18:29,239
defined TCP option and this option can

1742
01:18:29,239 --> 01:18:31,640
identify the

1743
01:18:31,640 --> 01:18:35,460
equivalent for or ipa6 address and

1744
01:18:35,460 --> 01:18:37,679
support information owned by the service

1745
01:18:37,679 --> 01:18:42,780
node which provides the service and this

1746
01:18:42,780 --> 01:18:45,260
option is carried in the TCP event

1747
01:18:45,260 --> 01:18:46,880
package

1748
01:18:46,880 --> 01:18:50,000
sending by the service node

1749
01:18:50,000 --> 01:18:54,800
uh after receiving the TCP flm package

1750
01:18:54,800 --> 01:18:58,800
if the the newly defined option is

1751
01:18:58,800 --> 01:19:02,280
included the customer will establish the

1752
01:19:02,280 --> 01:19:05,520
connection to the address specified in

1753
01:19:05,520 --> 01:19:09,980
this option and next slide please

1754
01:19:10,199 --> 01:19:13,199
yes since this is the first time for us

1755
01:19:13,199 --> 01:19:16,400
to give the presentation of sales draft

1756
01:19:16,400 --> 01:19:20,159
and any comments or suggestions are

1757
01:19:20,159 --> 01:19:22,320
welcome and we will update it

1758
01:19:22,320 --> 01:19:25,020
accordingly thank you

1759
01:19:25,020 --> 01:19:27,900
uh Lars hi last second uh thanks for the

1760
01:19:27,900 --> 01:19:30,179
presentation that was very clear

1761
01:19:30,179 --> 01:19:30,840
um

1762
01:19:30,840 --> 01:19:33,540
I really feel this is the wrong level to

1763
01:19:33,540 --> 01:19:35,520
solve that problem at because you're

1764
01:19:35,520 --> 01:19:38,040
basically asking all TCP client Stacks

1765
01:19:38,040 --> 01:19:40,520
to change so that the server side can

1766
01:19:40,520 --> 01:19:42,780
optimize some load balancing right so

1767
01:19:42,780 --> 01:19:44,640
hey you have the problem it's never

1768
01:19:44,640 --> 01:19:46,739
really going to happen to all clients so

1769
01:19:46,739 --> 01:19:48,000
you need to continuously be able to

1770
01:19:48,000 --> 01:19:49,380
handle the case that some clients won't

1771
01:19:49,380 --> 01:19:53,699
do this it also introduces sort of

1772
01:19:53,699 --> 01:19:55,260
the other way to say this is why

1773
01:19:55,260 --> 01:19:56,520
wouldn't you do this rather at the

1774
01:19:56,520 --> 01:19:58,320
application layer where you can

1775
01:19:58,320 --> 01:20:00,300
basically deploy this you can deploy

1776
01:20:00,300 --> 01:20:02,219
this with TLS because this information

1777
01:20:02,219 --> 01:20:04,860
wouldn't be secure it can be changed in

1778
01:20:04,860 --> 01:20:05,820
the network

1779
01:20:05,820 --> 01:20:07,800
so you can imagine an attacker might

1780
01:20:07,800 --> 01:20:09,719
want to rewrite those things

1781
01:20:09,719 --> 01:20:12,659
and have the clients go over there

1782
01:20:12,659 --> 01:20:15,060
um or just like route them somewhere

1783
01:20:15,060 --> 01:20:17,460
where there's no um response so that

1784
01:20:17,460 --> 01:20:18,840
there's a whole bunch of things here I

1785
01:20:18,840 --> 01:20:20,640
think that come together

1786
01:20:20,640 --> 01:20:22,500
um that make me sort of think that you

1787
01:20:22,500 --> 01:20:24,060
probably want to solve this at a higher

1788
01:20:24,060 --> 01:20:26,400
layer rather than at the TCP level thank

1789
01:20:26,400 --> 01:20:27,600
you

1790
01:20:27,600 --> 01:20:31,920
thank you we do this a large balances

1791
01:20:31,920 --> 01:20:34,699
aren't uh

1792
01:20:35,420 --> 01:20:39,360
transmit layer is because we think uh

1793
01:20:39,360 --> 01:20:43,560
the application layer uh have difficult

1794
01:20:43,560 --> 01:20:48,300
in obtain the network status in real

1795
01:20:48,300 --> 01:20:52,500
time and so we think away can uh push

1796
01:20:52,500 --> 01:20:53,960
this

1797
01:20:53,960 --> 01:20:56,000
push this

1798
01:20:56,000 --> 01:20:59,060
function in the

1799
01:20:59,060 --> 01:21:02,719
transmission layer

1800
01:21:03,179 --> 01:21:04,620
um did you want to address that question

1801
01:21:04,620 --> 01:21:08,159
yeah um so I I'm a closer and uh next

1802
01:21:08,159 --> 01:21:10,920
time I explained you know there are two

1803
01:21:10,920 --> 01:21:13,199
ways uh currently there are two ways to

1804
01:21:13,199 --> 01:21:16,320
explore uh and accomplish the such aim

1805
01:21:16,320 --> 01:21:18,659
the first is the application letter only

1806
01:21:18,659 --> 01:21:22,140
so but for application letter uh the

1807
01:21:22,140 --> 01:21:28,260
either Mr uh has said uh the client or

1808
01:21:28,260 --> 01:21:31,320
the server cannot know the network

1809
01:21:31,320 --> 01:21:32,239
status

1810
01:21:32,239 --> 01:21:37,020
so we think under the network cannot do

1811
01:21:37,020 --> 01:21:40,020
any help for the optimized of the

1812
01:21:40,020 --> 01:21:42,320
traffic so uh

1813
01:21:42,320 --> 01:21:46,340
I think our solution is align with the

1814
01:21:46,340 --> 01:21:48,500
coming

1815
01:21:48,500 --> 01:21:51,659
concept for the Computing and network

1816
01:21:51,659 --> 01:21:56,280
convergency Trend so uh you know the the

1817
01:21:56,280 --> 01:21:59,520
network can't get the service status and

1818
01:21:59,520 --> 01:22:03,719
they can optimize the traffic

1819
01:22:03,719 --> 01:22:06,080
um by the uh

1820
01:22:06,080 --> 01:22:09,480
for the client traffic so by the way we

1821
01:22:09,480 --> 01:22:11,760
cannot depend solely on the network to

1822
01:22:11,760 --> 01:22:14,699
do such thing because to keep the

1823
01:22:14,699 --> 01:22:16,560
service Affinity the network device

1824
01:22:16,560 --> 01:22:19,100
Master

1825
01:22:20,120 --> 01:22:24,360
uh stop much status table on the device

1826
01:22:24,360 --> 01:22:30,000
so our solution is a hybrid solution and

1827
01:22:30,000 --> 01:22:32,640
they depend partly for the network

1828
01:22:32,640 --> 01:22:36,239
device to select the optimal application

1829
01:22:36,239 --> 01:22:39,960
server and we depend on the client and

1830
01:22:39,960 --> 01:22:43,320
server to do something for the for the

1831
01:22:43,320 --> 01:22:44,760
service affinity

1832
01:22:44,760 --> 01:22:47,159
this is our aim okay

1833
01:22:47,159 --> 01:22:49,639
pop

1834
01:22:50,159 --> 01:22:52,860
please be quick yeah hi

1835
01:22:52,860 --> 01:22:53,719
um

1836
01:22:53,719 --> 01:22:56,520
before last said what he said

1837
01:22:56,520 --> 01:22:58,920
um I I hadn't thought of that and I tend

1838
01:22:58,920 --> 01:23:01,199
to agree with him but just I'll say what

1839
01:23:01,199 --> 01:23:02,760
I was going to say anyway

1840
01:23:02,760 --> 01:23:05,280
um because I'm not I'm completely

1841
01:23:05,280 --> 01:23:07,800
thought about all this and that was that

1842
01:23:07,800 --> 01:23:09,659
um it might be better to first of all

1843
01:23:09,659 --> 01:23:12,420
hash this information and just have like

1844
01:23:12,420 --> 01:23:14,940
a cookie in this option

1845
01:23:14,940 --> 01:23:16,260
um so you're not

1846
01:23:16,260 --> 01:23:18,600
um you know as it says

1847
01:23:18,600 --> 01:23:21,000
um and then that that reminds me of

1848
01:23:21,000 --> 01:23:23,640
something that um I was involved in

1849
01:23:23,640 --> 01:23:28,199
doing earlier which is a a thin cookie

1850
01:23:28,199 --> 01:23:29,820
but it allows you to have more

1851
01:23:29,820 --> 01:23:32,400
information in the Zen cookie than than

1852
01:23:32,400 --> 01:23:35,159
currently possible in that space so it's

1853
01:23:35,159 --> 01:23:37,620
it's a very similar

1854
01:23:37,620 --> 01:23:39,360
um thing that gives you effectively a

1855
01:23:39,360 --> 01:23:41,280
bit of connection State a soft State

1856
01:23:41,280 --> 01:23:43,860
moving with the packets

1857
01:23:43,860 --> 01:23:45,300
um so there may be other things you

1858
01:23:45,300 --> 01:23:47,219
could sort of fold into it to make it

1859
01:23:47,219 --> 01:23:49,199
more useful so that clients do use it

1860
01:23:49,199 --> 01:23:50,940
which might

1861
01:23:50,940 --> 01:23:53,280
um mitigate some of the reasons last

1862
01:23:53,280 --> 01:23:54,960
said it wouldn't happen

1863
01:23:54,960 --> 01:23:57,739
thank you

1864
01:23:58,980 --> 01:24:02,159
uh Ian sweat as an individual um I agree

1865
01:24:02,159 --> 01:24:04,080
with Lars that I think this is probably

1866
01:24:04,080 --> 01:24:06,140
the wrong layer to put it up but I think

1867
01:24:06,140 --> 01:24:08,760
regardless I think there are some

1868
01:24:08,760 --> 01:24:10,620
potentially serious privacy concerns

1869
01:24:10,620 --> 01:24:12,900
about the way you structure this and I

1870
01:24:12,900 --> 01:24:14,820
think an opaque field along the lines of

1871
01:24:14,820 --> 01:24:17,520
what uh the quick LB draft proposes is

1872
01:24:17,520 --> 01:24:19,500
more aligned with like the current

1873
01:24:19,500 --> 01:24:21,300
values of the ITF

1874
01:24:21,300 --> 01:24:22,980
um so something like an opaque sin

1875
01:24:22,980 --> 01:24:24,900
cookie would at least be a preferable

1876
01:24:24,900 --> 01:24:26,100
option

1877
01:24:26,100 --> 01:24:28,080
um I don't think I want to design this

1878
01:24:28,080 --> 01:24:30,120
right now but I think I think for the

1879
01:24:30,120 --> 01:24:31,739
ITF to adopt this I suspect it would

1880
01:24:31,739 --> 01:24:33,000
have to be substantially changed in

1881
01:24:33,000 --> 01:24:35,100
order to kind of conform to the standard

1882
01:24:35,100 --> 01:24:37,020
privacy policies of like what we see

1883
01:24:37,020 --> 01:24:38,460
today

1884
01:24:38,460 --> 01:24:40,679
thank you please continue the discussion

1885
01:24:40,679 --> 01:24:42,120
on the list

1886
01:24:42,120 --> 01:24:44,880
we are running out of time here

1887
01:24:44,880 --> 01:24:47,480
thank you

1888
01:24:48,120 --> 01:24:51,239
Yoshi you have the remaining six minutes

1889
01:24:51,239 --> 01:24:55,159
instead of 15 sorry about that

1890
01:25:04,560 --> 01:25:07,820
can I yeah

1891
01:25:07,980 --> 01:25:10,519
okay

1892
01:25:15,600 --> 01:25:19,620
okay so I just took up I just would like

1893
01:25:19,620 --> 01:25:21,360
to talk about analysis what the

1894
01:25:21,360 --> 01:25:23,699
difference between standard condition

1895
01:25:23,699 --> 01:25:28,460
control schemes moving on to the right

1896
01:25:30,900 --> 01:25:34,020
okay so what's in this draft so

1897
01:25:34,020 --> 01:25:38,880
basically uh this uh draft provide a

1898
01:25:38,880 --> 01:25:40,500
risk for the difference between three

1899
01:25:40,500 --> 01:25:42,840
condition control standards first one is

1900
01:25:42,840 --> 01:25:43,820
Arena

1901
01:25:43,820 --> 01:25:47,340
and the next one is quick cleaner and

1902
01:25:47,340 --> 01:25:49,199
the last one is cubic

1903
01:25:49,199 --> 01:25:52,380
and then I have basically three houses

1904
01:25:52,380 --> 01:25:55,380
have three motivation to write this kind

1905
01:25:55,380 --> 01:25:58,440
of draft and first one is uh during the

1906
01:25:58,440 --> 01:26:00,600
cubic discussion we have a lot of

1907
01:26:00,600 --> 01:26:03,239
productive nice comments for the acute

1908
01:26:03,239 --> 01:26:06,120
experience so having this kind of

1909
01:26:06,120 --> 01:26:09,000
document maybe uh you know with the

1910
01:26:09,000 --> 01:26:11,219
record for that you know really

1911
01:26:11,219 --> 01:26:15,960
productive discussion oh pretty good

1912
01:26:15,960 --> 01:26:18,080
the previous slide

1913
01:26:18,080 --> 01:26:21,780
then another motivation for me is uh it

1914
01:26:21,780 --> 01:26:24,060
can be as a useful reference for the

1915
01:26:24,060 --> 01:26:25,739
future discussion with the congestion

1916
01:26:25,739 --> 01:26:28,620
control principles so right now there

1917
01:26:28,620 --> 01:26:30,360
are some difference between these three

1918
01:26:30,360 --> 01:26:34,860
standard but uh it might be better that

1919
01:26:34,860 --> 01:26:36,840
this instance three standards have the

1920
01:26:36,840 --> 01:26:39,420
same congestion control principles and

1921
01:26:39,420 --> 01:26:43,320
if we move to that direction uh this

1922
01:26:43,320 --> 01:26:45,120
kind of document may be a good starting

1923
01:26:45,120 --> 01:26:47,159
point for the discussion

1924
01:26:47,159 --> 01:26:50,100
and then sudden motivation for me is you

1925
01:26:50,100 --> 01:26:52,440
know uh having this kind of document May

1926
01:26:52,440 --> 01:26:55,139
encourage further analysis uh because

1927
01:26:55,139 --> 01:26:56,760
you know some difference in the draft

1928
01:26:56,760 --> 01:26:59,880
may require some more large-scale

1929
01:26:59,880 --> 01:27:01,860
experiment or something like that

1930
01:27:01,860 --> 01:27:04,380
and then what is autofocus for this

1931
01:27:04,380 --> 01:27:06,780
draft is the evaluation for the

1932
01:27:06,780 --> 01:27:08,639
differences so there are some

1933
01:27:08,639 --> 01:27:10,920
differences but this product does not

1934
01:27:10,920 --> 01:27:13,260
give this difference is big or small

1935
01:27:13,260 --> 01:27:16,020
something like that the purpose of this

1936
01:27:16,020 --> 01:27:19,199
document is to provide the list that's

1937
01:27:19,199 --> 01:27:23,639
that's it the because as I said it may

1938
01:27:23,639 --> 01:27:26,880
take time to evaluate these differences

1939
01:27:26,880 --> 01:27:29,940
okay please move on to the next slide

1940
01:27:29,940 --> 01:27:32,880
and then I just sort of like to quickly

1941
01:27:32,880 --> 01:27:35,100
overview of the difference between the

1942
01:27:35,100 --> 01:27:37,500
draft and the I would like to start from

1943
01:27:37,500 --> 01:27:40,560
Reno and the quick cleaner and there are

1944
01:27:40,560 --> 01:27:42,719
several parameter differences like an

1945
01:27:42,719 --> 01:27:46,380
initial window is different and lost

1946
01:27:46,380 --> 01:27:48,600
Windows difference and then those

1947
01:27:48,600 --> 01:27:50,060
detection scheme is a little different

1948
01:27:50,060 --> 01:27:53,880
and then the my thing it might be the

1949
01:27:53,880 --> 01:27:56,000
minor defense parties of X performance

1950
01:27:56,000 --> 01:27:59,280
so you might need to sort it out to some

1951
01:27:59,280 --> 01:28:01,980
extent maybe on to the next slide

1952
01:28:01,980 --> 01:28:04,699
please

1953
01:28:06,480 --> 01:28:10,260
okay and then also uh the thrusters

1954
01:28:10,260 --> 01:28:12,060
threshold of the packet loss is

1955
01:28:12,060 --> 01:28:16,500
different Inc 9002 uh through threshold

1956
01:28:16,500 --> 01:28:19,020
after packet loss is the half value of

1957
01:28:19,020 --> 01:28:21,179
congestion window then packet loss is

1958
01:28:21,179 --> 01:28:25,159
detected but uh on the other hand uh

1959
01:28:25,159 --> 01:28:27,300
5681 says

1960
01:28:27,300 --> 01:28:30,360
it is the half value of right side

1961
01:28:30,360 --> 01:28:33,120
instead of congestion window and then

1962
01:28:33,120 --> 01:28:38,639
also uh LX 58 5681 basically prohibit to

1963
01:28:38,639 --> 01:28:41,100
use congestion window here because it

1964
01:28:41,100 --> 01:28:44,460
says an easy mistake to make is the

1965
01:28:44,460 --> 01:28:46,860
simple use congestion window rather than

1966
01:28:46,860 --> 01:28:50,159
flight size so to some extent these two

1967
01:28:50,159 --> 01:28:52,139
documents seems to be contradict to each

1968
01:28:52,139 --> 01:28:52,980
other

1969
01:28:52,980 --> 01:28:55,620
please move on to the next slide

1970
01:28:55,620 --> 01:28:58,860
and so another difference between Dino

1971
01:28:58,860 --> 01:29:01,020
and the quick cleaner is window growth

1972
01:29:01,020 --> 01:29:04,139
in slow start this may be overlap that

1973
01:29:04,139 --> 01:29:08,580
mating talks in 9002 congestion window

1974
01:29:08,580 --> 01:29:10,699
can be increased by the number of

1975
01:29:10,699 --> 01:29:14,040
acknowledged by acknowledged by it in a

1976
01:29:14,040 --> 01:29:17,940
sub packet but in case of 5681 zero

1977
01:29:17,940 --> 01:29:21,179
limit so it can increase at most one

1978
01:29:21,179 --> 01:29:23,540
segment

1979
01:29:23,780 --> 01:29:27,120
and that's the difference okay now I'm

1980
01:29:27,120 --> 01:29:30,540
moving on to the okay let's go to them

1981
01:29:30,540 --> 01:29:33,600
now I'm moving on to the next one uh the

1982
01:29:33,600 --> 01:29:36,020
rosary caballer algorithm is different

1983
01:29:36,020 --> 01:29:38,520
uh so definition of the loss recovery

1984
01:29:38,520 --> 01:29:42,840
algorithm is different in 9002 it can

1985
01:29:42,840 --> 01:29:45,239
exit recovery period of and one of any

1986
01:29:45,239 --> 01:29:47,760
packet sent during the recovery period

1987
01:29:47,760 --> 01:29:53,159
is acknowledgment uh in 5681 it can end

1988
01:29:53,159 --> 01:29:55,260
the recovery field all those segments

1989
01:29:55,260 --> 01:29:56,880
found before recovery period are

1990
01:29:56,880 --> 01:30:00,000
acknowledgment so in case of 9002 is

1991
01:30:00,000 --> 01:30:02,460
just one bit transmission packet has

1992
01:30:02,460 --> 01:30:04,800
been sent and Arc and then it can end

1993
01:30:04,800 --> 01:30:07,260
the recovery also there is another rust

1994
01:30:07,260 --> 01:30:10,040
packet on the other hand

1995
01:30:10,040 --> 01:30:14,159
5681 if we have a product packet then

1996
01:30:14,159 --> 01:30:16,980
our packet has been detransmitted and

1997
01:30:16,980 --> 01:30:19,440
should be asked otherwise it cannot end

1998
01:30:19,440 --> 01:30:21,480
recovery period that's the difference

1999
01:30:21,480 --> 01:30:24,480
between the genome and the quick cleaner

2000
01:30:24,480 --> 01:30:27,360
okay moving on to the next slide please

2001
01:30:27,360 --> 01:30:29,699
and then this there are some difference

2002
01:30:29,699 --> 01:30:33,120
between Dino and the cubic draft the big

2003
01:30:33,120 --> 01:30:35,639
difference is multiplicative Windows

2004
01:30:35,639 --> 01:30:39,800
decrease factor 5681 is 0.5

2005
01:30:39,800 --> 01:30:43,460
83 12 bits of this 0.7

2006
01:30:43,460 --> 01:30:46,500
0.7 minor bit too aggressive but it

2007
01:30:46,500 --> 01:30:50,460
might not be very fair with uh 5681 okay

2008
01:30:50,460 --> 01:30:52,380
moving on to the next one

2009
01:30:52,380 --> 01:30:54,360
and

2010
01:30:54,360 --> 01:30:56,940
then another difference is a linear

2011
01:30:56,940 --> 01:30:59,520
friendly model and as we have a wrong

2012
01:30:59,520 --> 01:31:03,480
discussion uh there are some you know uh

2013
01:31:03,480 --> 01:31:06,659
skeptical skepticism about you know

2014
01:31:06,659 --> 01:31:10,199
buried validity of this model so this is

2015
01:31:10,199 --> 01:31:12,480
also the discussion Point moving on to

2016
01:31:12,480 --> 01:31:13,920
the next libraries

2017
01:31:13,920 --> 01:31:16,800
so this is my last slide so discussion

2018
01:31:16,800 --> 01:31:19,260
point of this class is uh these

2019
01:31:19,260 --> 01:31:21,719
differences accessible what needs to be

2020
01:31:21,719 --> 01:31:24,300
sorted out if it's needed to be sorted

2021
01:31:24,300 --> 01:31:27,179
out how do we proceed uh do we want to

2022
01:31:27,179 --> 01:31:30,840
update 5681 or do we have another way to

2023
01:31:30,840 --> 01:31:33,600
do it and their final discussion point

2024
01:31:33,600 --> 01:31:36,420
is uh is it worth publishing this

2025
01:31:36,420 --> 01:31:39,300
document as a reference why not that's a

2026
01:31:39,300 --> 01:31:41,219
feedback I would like to get from the

2027
01:31:41,219 --> 01:31:42,800
community

2028
01:31:42,800 --> 01:31:44,940
we're out of time so I will let Martin

2029
01:31:44,940 --> 01:31:46,320
Duke and Lars go and then we'll wrap

2030
01:31:46,320 --> 01:31:48,560
this up okay yeah um

2031
01:31:48,560 --> 01:31:52,199
uh usually obvious didn't coordinate

2032
01:31:52,199 --> 01:31:55,560
um so like as for the 5681 versus

2033
01:31:55,560 --> 01:31:58,020
um 9002 stuff I would say 9002 probably

2034
01:31:58,020 --> 01:31:59,940
reflects I mean aside from very quick

2035
01:31:59,940 --> 01:32:01,739
specific things is mostly kind of the

2036
01:32:01,739 --> 01:32:03,179
the best current practice that would

2037
01:32:03,179 --> 01:32:05,880
properly agree on and that rather than

2038
01:32:05,880 --> 01:32:07,620
do something like this I mean you've

2039
01:32:07,620 --> 01:32:09,540
created a checklist for 5681 best so

2040
01:32:09,540 --> 01:32:12,179
let's do 5681 best rather than have an

2041
01:32:12,179 --> 01:32:14,340
intermediate document uh for cubic stuff

2042
01:32:14,340 --> 01:32:15,900
uh

2043
01:32:15,900 --> 01:32:19,580
I don't I don't know thanks

2044
01:32:20,120 --> 01:32:22,260
for doing good

2045
01:32:22,260 --> 01:32:24,239
thanks for doing the legwork uh this is

2046
01:32:24,239 --> 01:32:26,580
a nice summary of all the differences uh

2047
01:32:26,580 --> 01:32:28,260
so thanks for doing that

2048
01:32:28,260 --> 01:32:30,239
um for 9002 specifically I think we

2049
01:32:30,239 --> 01:32:31,920
actually discussed all those sort of

2050
01:32:31,920 --> 01:32:34,620
pretty we deliberated them and they all

2051
01:32:34,620 --> 01:32:36,900
deliberately changed us and and they all

2052
01:32:36,900 --> 01:32:39,060
were last called and so um there's a

2053
01:32:39,060 --> 01:32:41,340
difference and we can sort of uh decide

2054
01:32:41,340 --> 01:32:44,400
what we want to do here I would sort of

2055
01:32:44,400 --> 01:32:46,020
um I argue that 9000 is the newer

2056
01:32:46,020 --> 01:32:48,120
document and therefore more uh uh

2057
01:32:48,120 --> 01:32:51,120
accurately reflect current thinking um

2058
01:32:51,120 --> 01:32:52,440
but you know it's a discussion for

2059
01:32:52,440 --> 01:32:53,880
another day but but thanks this is an

2060
01:32:53,880 --> 01:32:55,800
excellent starting point for future work

2061
01:32:55,800 --> 01:32:58,800
as an individual I had one comment that

2062
01:32:58,800 --> 01:33:01,380
um the congestion control working group

2063
01:33:01,380 --> 01:33:03,420
if it was created might be the right

2064
01:33:03,420 --> 01:33:06,179
place to ensure consistency going

2065
01:33:06,179 --> 01:33:07,020
forward

2066
01:33:07,020 --> 01:33:09,120
uh and with that this is the end of the

2067
01:33:09,120 --> 01:33:10,739
tcpm session thank you for being patient

2068
01:33:10,739 --> 01:33:13,860
and going three minutes over

2069
01:33:13,860 --> 01:33:15,840
I can't can I make one last comment

2070
01:33:15,840 --> 01:33:18,540
sorry

2071
01:33:18,540 --> 01:33:20,580
yeah okay go ahead

2072
01:33:20,580 --> 01:33:24,179
okay sorry just make quick so about 9002

2073
01:33:24,179 --> 01:33:26,820
so I'm okay with you know using two

2074
01:33:26,820 --> 01:33:29,880
tools of this parameter for 9002 but to

2075
01:33:29,880 --> 01:33:32,159
be fair with TCP on the quick I think

2076
01:33:32,159 --> 01:33:34,080
then if we quickly use this parameter

2077
01:33:34,080 --> 01:33:36,600
then one argument is TCP might be used

2078
01:33:36,600 --> 01:33:39,480
the same parameter

2079
01:33:39,480 --> 01:33:41,760
yeah

2080
01:33:41,760 --> 01:33:44,600
thank you yeah exactly so

2081
01:33:44,600 --> 01:33:47,580
56 so 5681 Bish should be probably more

2082
01:33:47,580 --> 01:33:50,780
like 9002 yes

2083
01:33:53,480 --> 01:33:56,580
okay thank you Yoshi

2084
01:33:56,580 --> 01:33:58,860
bye

2085
01:33:58,860 --> 01:34:01,460
thank you

2086
01:34:08,699 --> 01:34:11,299
thank you

2087
01:34:28,080 --> 01:34:30,679
I mean that is

2088
01:34:35,400 --> 01:34:37,879
okay

