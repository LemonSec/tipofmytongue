1
00:00:06,000 --> 00:00:09,000
foreign

2
00:00:33,540 --> 00:00:35,940
right

3
00:00:35,940 --> 00:00:38,340
all of the administrivia playing with

4
00:00:38,340 --> 00:00:40,200
the data tracker playing with the data

5
00:00:40,200 --> 00:00:42,440
tracker

6
00:00:45,960 --> 00:00:48,960
yes

7
00:00:53,039 --> 00:00:55,079
yeah all right great you've got

8
00:00:55,079 --> 00:00:59,300
structured headers structured fields

9
00:00:59,879 --> 00:01:02,579
with you want them or not yeah yeah but

10
00:01:02,579 --> 00:01:04,619
a few groups have them some of the

11
00:01:04,619 --> 00:01:06,320
bigger ones

12
00:01:06,320 --> 00:01:09,780
and this is also because yeah

13
00:01:09,780 --> 00:01:11,939
Daryl's first time at the its senior

14
00:01:11,939 --> 00:01:13,560
chair also so

15
00:01:13,560 --> 00:01:15,920
what

16
00:01:17,760 --> 00:01:20,119
yeah

17
00:01:20,400 --> 00:01:24,180
he doesn't know about the ceremony

18
00:01:24,180 --> 00:01:25,740
he doesn't know about the ceremonial

19
00:01:25,740 --> 00:01:28,880
dunking in the Thames yet

20
00:01:32,159 --> 00:01:35,939
so we are done we are let us begin

21
00:01:35,939 --> 00:01:37,140
okay

22
00:01:37,140 --> 00:01:40,280
everyone good morning

23
00:01:40,439 --> 00:01:45,619
welcome to the HTTP API working group

24
00:01:45,840 --> 00:01:48,900
yeah oh okay all right

25
00:01:48,900 --> 00:01:51,000
all right is this better okay good

26
00:01:51,000 --> 00:01:54,720
welcome to the HTTP API working group uh

27
00:01:54,720 --> 00:01:57,600
contrary to other ITF acronyms that is

28
00:01:57,600 --> 00:01:59,520
not easily pronounceable

29
00:01:59,520 --> 00:02:01,320
uh it's

30
00:02:01,320 --> 00:02:04,560
Say it'll you know like Bronx cheers as

31
00:02:04,560 --> 00:02:06,479
they say okay can we confirm people

32
00:02:06,479 --> 00:02:08,160
online from here yeah can somebody

33
00:02:08,160 --> 00:02:10,739
online please like get on the Queue and

34
00:02:10,739 --> 00:02:13,620
then leave we have 23 people well

35
00:02:13,620 --> 00:02:16,940
including locals

36
00:02:17,700 --> 00:02:20,520
all right so Francesca rad okay so

37
00:02:20,520 --> 00:02:24,800
people come people came and left so good

38
00:02:25,560 --> 00:02:30,300
I have a cold uh only a cold so oh and

39
00:02:30,300 --> 00:02:33,800
people are screaming it so

40
00:02:33,959 --> 00:02:36,180
all right

41
00:02:36,180 --> 00:02:36,959
um

42
00:02:36,959 --> 00:02:39,599
this is Tuesday Morning you should have

43
00:02:39,599 --> 00:02:42,480
seen the QR codes they are outside also

44
00:02:42,480 --> 00:02:44,459
up there have your phone please Point

45
00:02:44,459 --> 00:02:47,400
your phone to it that will get you the

46
00:02:47,400 --> 00:02:49,680
lightweight client if you want to talk

47
00:02:49,680 --> 00:02:51,780
you will have to press a button on that

48
00:02:51,780 --> 00:02:54,660
client to or Tap a button on that client

49
00:02:54,660 --> 00:02:57,900
to get entered into the queue

50
00:02:57,900 --> 00:03:00,060
we will manage the queue through mid

51
00:03:00,060 --> 00:03:02,480
Echo

52
00:03:04,260 --> 00:03:06,660
all right everyone's

53
00:03:06,660 --> 00:03:08,879
feels like a rock concert influence you

54
00:03:08,879 --> 00:03:11,580
know holding their phones up yep

55
00:03:11,580 --> 00:03:13,920
okay

56
00:03:13,920 --> 00:03:15,180
shall we get

57
00:03:15,180 --> 00:03:18,800
we should go for it

58
00:03:23,879 --> 00:03:28,620
uh oh I'm sure I can do this one I'm

59
00:03:28,620 --> 00:03:31,019
sure we'll use a scene by now uh the net

60
00:03:31,019 --> 00:03:31,520
well

61
00:03:31,520 --> 00:03:32,940
[Music]

62
00:03:32,940 --> 00:03:35,879
here it is once again please

63
00:03:35,879 --> 00:03:37,700
follow these rules

64
00:03:37,700 --> 00:03:40,980
uh yeah I think Richard said most of

65
00:03:40,980 --> 00:03:42,720
these things the only other thing did

66
00:03:42,720 --> 00:03:45,720
you mention the mask burn in the room

67
00:03:45,720 --> 00:03:47,159
unless you're at the mic please keep

68
00:03:47,159 --> 00:03:49,700
hurting us

69
00:03:52,140 --> 00:03:54,980
and

70
00:03:56,040 --> 00:04:01,140
we need a volunteer to take the minutes

71
00:04:01,140 --> 00:04:03,540
of the meeting do we have evolved here

72
00:04:03,540 --> 00:04:04,799
please

73
00:04:04,799 --> 00:04:06,980
foreign

74
00:04:12,420 --> 00:04:14,519
I can do it

75
00:04:14,519 --> 00:04:17,519
sure

76
00:04:17,699 --> 00:04:20,299
okay

77
00:04:20,699 --> 00:04:22,919
so uh

78
00:04:22,919 --> 00:04:26,280
I shall let Rich get to the place in the

79
00:04:26,280 --> 00:04:27,479
notes

80
00:04:27,479 --> 00:04:31,860
and then uh Ben are you ready to do your

81
00:04:31,860 --> 00:04:34,400
presentation

82
00:04:34,919 --> 00:04:36,720
he says not being able to see the chat

83
00:04:36,720 --> 00:04:39,000
there and then on that video

84
00:04:39,000 --> 00:04:42,020
good morning good morning

85
00:04:48,720 --> 00:04:50,580
just give rich just a moment

86
00:04:50,580 --> 00:04:53,340
we started thank you to the chairs for

87
00:04:53,340 --> 00:04:56,460
letting me uh put this presentation at

88
00:04:56,460 --> 00:04:58,380
the top of the session of course it's 4

89
00:04:58,380 --> 00:05:00,060
30 in the morning here so I don't know

90
00:05:00,060 --> 00:05:03,419
how great that really is but uh I had a

91
00:05:03,419 --> 00:05:05,460
conflict with another working group so

92
00:05:05,460 --> 00:05:08,100
this is not a top priority item for HTTP

93
00:05:08,100 --> 00:05:10,919
API it's just scheduled here due to a

94
00:05:10,919 --> 00:05:14,120
time and conflict

95
00:05:14,759 --> 00:05:16,080
okay

96
00:05:16,080 --> 00:05:19,039
floor is yours

97
00:05:19,080 --> 00:05:23,359
uh I've requested slide access

98
00:05:32,280 --> 00:05:34,320
I am looking

99
00:05:34,320 --> 00:05:37,400
you want to try that again

100
00:05:41,340 --> 00:05:45,240
where is I do you see it

101
00:05:45,240 --> 00:05:48,380
I don't see it

102
00:05:48,600 --> 00:05:50,660
um

103
00:05:51,180 --> 00:05:55,080
yeah all right here we go okay got it

104
00:05:55,080 --> 00:05:58,400
thank you thank you

105
00:06:01,080 --> 00:06:04,620
so uh this is the same slide deck for

106
00:06:04,620 --> 00:06:06,120
consistency sake this is the same

107
00:06:06,120 --> 00:06:08,880
presentation that I I gave to oauth

108
00:06:08,880 --> 00:06:10,259
yesterday

109
00:06:10,259 --> 00:06:11,820
um I will be saying some slightly

110
00:06:11,820 --> 00:06:15,060
different things uh but the these are

111
00:06:15,060 --> 00:06:16,919
the same slides that you saw in oauth so

112
00:06:16,919 --> 00:06:18,300
feel free to

113
00:06:18,300 --> 00:06:22,139
uh you know to to eat your croissant if

114
00:06:22,139 --> 00:06:23,340
you're

115
00:06:23,340 --> 00:06:24,240
um

116
00:06:24,240 --> 00:06:27,539
if you were already in oauth yesterday

117
00:06:27,539 --> 00:06:28,680
so

118
00:06:28,680 --> 00:06:30,960
uh interactive authentication of

119
00:06:30,960 --> 00:06:32,759
non-interactive HTTP requests that's a

120
00:06:32,759 --> 00:06:34,500
mouthful I call this pop-up

121
00:06:34,500 --> 00:06:37,400
Authentication

122
00:06:38,460 --> 00:06:40,259
and the

123
00:06:40,259 --> 00:06:42,780
the key idea is this the the web today

124
00:06:42,780 --> 00:06:47,100
has a rich login experience there's a

125
00:06:47,100 --> 00:06:49,080
whole panopoly of different ways that

126
00:06:49,080 --> 00:06:50,940
you can log into a website you can use

127
00:06:50,940 --> 00:06:54,720
complicated single sign-on things to use

128
00:06:54,720 --> 00:06:57,300
one account from one web service with a

129
00:06:57,300 --> 00:06:59,580
different web service and then when

130
00:06:59,580 --> 00:07:01,199
you're actually logging in maybe you can

131
00:07:01,199 --> 00:07:05,220
use a Yuba key or a pass key or any

132
00:07:05,220 --> 00:07:07,800
number of other tricky second Factor

133
00:07:07,800 --> 00:07:09,300
things that give you a lot of extra

134
00:07:09,300 --> 00:07:12,120
security there are password recovery

135
00:07:12,120 --> 00:07:14,220
flows if you've forgotten your password

136
00:07:14,220 --> 00:07:17,639
and all sorts of great stuff

137
00:07:17,639 --> 00:07:20,639
uh and this is what login looks like if

138
00:07:20,639 --> 00:07:22,740
you're trying to use HTTP and you're not

139
00:07:22,740 --> 00:07:26,000
actually on the web

140
00:07:26,000 --> 00:07:27,840
there's a

141
00:07:27,840 --> 00:07:30,419
a server address field maybe and there's

142
00:07:30,419 --> 00:07:33,560
a username and a password

143
00:07:33,660 --> 00:07:36,599
so basically if you're outside of the

144
00:07:36,599 --> 00:07:39,240
web login is stuck in 1996. we don't

145
00:07:39,240 --> 00:07:40,680
even have

146
00:07:40,680 --> 00:07:42,660
we don't even have a password recovery

147
00:07:42,660 --> 00:07:45,780
option we don't we don't even have any

148
00:07:45,780 --> 00:07:48,000
reasonable way to rotate these passwords

149
00:07:48,000 --> 00:07:50,340
which are usually hard coded into the

150
00:07:50,340 --> 00:07:53,359
settings and forgotten

151
00:07:54,560 --> 00:07:59,639
uh and oauth uh doesn't really today get

152
00:07:59,639 --> 00:08:01,259
us what we want

153
00:08:01,259 --> 00:08:03,960
because oauth is designed for a client

154
00:08:03,960 --> 00:08:06,060
that's registered with a specific

155
00:08:06,060 --> 00:08:09,860
service that already knows some

156
00:08:09,860 --> 00:08:11,759
proprietary details about how to

157
00:08:11,759 --> 00:08:14,340
communicate with a specific service in

158
00:08:14,340 --> 00:08:16,860
advance and what we are really trying to

159
00:08:16,860 --> 00:08:19,039
get to here

160
00:08:19,039 --> 00:08:23,520
is a way for clients like that caldav

161
00:08:23,520 --> 00:08:25,919
client that I mentioned that I showed on

162
00:08:25,919 --> 00:08:30,120
the previous slide to be able to

163
00:08:30,120 --> 00:08:34,979
speak a standardized protocol to

164
00:08:34,979 --> 00:08:36,539
uh

165
00:08:36,539 --> 00:08:40,760
to any compatible origin

166
00:08:44,279 --> 00:08:47,279
so

167
00:08:47,339 --> 00:08:49,800
uh

168
00:08:49,800 --> 00:08:52,500
this is the kind of user experience that

169
00:08:52,500 --> 00:08:55,080
I'm imagining we could achieve

170
00:08:55,080 --> 00:08:56,940
imagine that

171
00:08:56,940 --> 00:08:59,580
you have some service configured on your

172
00:08:59,580 --> 00:09:01,279
system

173
00:09:01,279 --> 00:09:04,140
uh you've configured it basically by

174
00:09:04,140 --> 00:09:07,320
dropping a URL into some settings field

175
00:09:07,320 --> 00:09:08,459
probably

176
00:09:08,459 --> 00:09:11,040
and then this service says actually I

177
00:09:11,040 --> 00:09:14,459
need authentication so your system pops

178
00:09:14,459 --> 00:09:17,040
up a little notice uh that you're going

179
00:09:17,040 --> 00:09:18,899
to need to authenticate and then takes

180
00:09:18,899 --> 00:09:23,040
you to a browser like authentication

181
00:09:23,040 --> 00:09:26,160
experience that shows you whatever that

182
00:09:26,160 --> 00:09:28,200
service wants to do maybe it's a captcha

183
00:09:28,200 --> 00:09:30,360
maybe it's single sign-on maybe it

184
00:09:30,360 --> 00:09:31,820
bounces you through a couple different

185
00:09:31,820 --> 00:09:34,800
Origins before determining that you're

186
00:09:34,800 --> 00:09:36,420
authenticated and then you know

187
00:09:36,420 --> 00:09:38,880
eventually that browser closes itself

188
00:09:38,880 --> 00:09:41,160
when it's done and you see a

189
00:09:41,160 --> 00:09:43,320
notification that authentication is

190
00:09:43,320 --> 00:09:44,519
complete

191
00:09:44,519 --> 00:09:46,500
you know

192
00:09:46,500 --> 00:09:50,339
so this is the the draft protocol that's

193
00:09:50,339 --> 00:09:51,959
listed in the document but I should say

194
00:09:51,959 --> 00:09:52,920
that

195
00:09:52,920 --> 00:09:58,440
um Aaron perecki of uh of oauth

196
00:09:58,440 --> 00:10:00,360
uh helped me out yesterday to understand

197
00:10:00,360 --> 00:10:02,580
a bunch of oauthings and actually added

198
00:10:02,580 --> 00:10:04,920
a bunch of slides here to describe how

199
00:10:04,920 --> 00:10:06,839
this would work in oauth

200
00:10:06,839 --> 00:10:08,580
um so I'll try to keep this very brief

201
00:10:08,580 --> 00:10:11,100
but the idea here is

202
00:10:11,100 --> 00:10:13,040
um the client tries to do something

203
00:10:13,040 --> 00:10:15,899
protocol specific like this is a an

204
00:10:15,899 --> 00:10:18,839
initial caldav request it gets back in

205
00:10:18,839 --> 00:10:21,779
HTTP 401 and it gets back some kind of

206
00:10:21,779 --> 00:10:24,899
nude www authenticate response that

207
00:10:24,899 --> 00:10:28,620
indicates uh no open away I know you're

208
00:10:28,620 --> 00:10:30,240
not allowed to do this and you can

209
00:10:30,240 --> 00:10:32,700
authenticate by opening this web page

210
00:10:32,700 --> 00:10:35,700
and then so this web page is open now in

211
00:10:35,700 --> 00:10:37,500
a different essentially by a different

212
00:10:37,500 --> 00:10:40,560
user agent in a browser

213
00:10:40,560 --> 00:10:43,440
and then the user again gets a 401

214
00:10:43,440 --> 00:10:45,060
unauthorized in this in this version

215
00:10:45,060 --> 00:10:47,640
they get a 401 unauthorized

216
00:10:47,640 --> 00:10:50,519
uh and then they do some other stuff

217
00:10:50,519 --> 00:10:52,680
um maybe get a cookie for that

218
00:10:52,680 --> 00:10:55,680
get a 200 response that that is

219
00:10:55,680 --> 00:10:58,500
interpreted as meaning you can close the

220
00:10:58,500 --> 00:11:00,060
browser you've successfully retrieved

221
00:11:00,060 --> 00:11:05,459
that authentication resource and then uh

222
00:11:05,459 --> 00:11:07,140
in again in this version of the protocol

223
00:11:07,140 --> 00:11:09,480
the

224
00:11:09,480 --> 00:11:11,640
um the sort of non-interactive client

225
00:11:11,640 --> 00:11:13,079
you can think of it as like a command

226
00:11:13,079 --> 00:11:16,500
line utility maybe steals the cookie

227
00:11:16,500 --> 00:11:18,899
um reaches into the browser browser

228
00:11:18,899 --> 00:11:22,320
State steals that cookie out and uh and

229
00:11:22,320 --> 00:11:24,720
then uses it to successfully reach the

230
00:11:24,720 --> 00:11:26,579
cow Dev server

231
00:11:26,579 --> 00:11:29,160
um so I don't want to focus too much on

232
00:11:29,160 --> 00:11:31,260
this specified procedure except to say

233
00:11:31,260 --> 00:11:33,779
that it has this it's based on this idea

234
00:11:33,779 --> 00:11:36,660
that the client in question can sort of

235
00:11:36,660 --> 00:11:38,640
spin up a browser context into which it

236
00:11:38,640 --> 00:11:42,079
has privileged access

237
00:11:43,740 --> 00:11:48,860
cells of the requests and responses okay

238
00:11:59,000 --> 00:12:03,440
yep I'm sure we'll come back in a sec

239
00:12:06,920 --> 00:12:09,779
hey my my network connection to meet

240
00:12:09,779 --> 00:12:12,300
Echo has been somewhat unstable uh can

241
00:12:12,300 --> 00:12:15,260
you reapprove thank you

242
00:12:15,890 --> 00:12:19,080
[Music]

243
00:12:19,380 --> 00:12:23,100
so uh that's this version and I'm going

244
00:12:23,100 --> 00:12:26,579
to skip the details of that spec so the

245
00:12:26,579 --> 00:12:28,140
bottom line is that I want to solve this

246
00:12:28,140 --> 00:12:29,820
use case

247
00:12:29,820 --> 00:12:32,399
um and let me Skip One More slide ahead

248
00:12:32,399 --> 00:12:34,740
and I'll come back so this slide is from

249
00:12:34,740 --> 00:12:36,480
Aaron

250
00:12:36,480 --> 00:12:39,680
um who proposes a an alternative

251
00:12:39,680 --> 00:12:42,380
approach here which essentially takes

252
00:12:42,380 --> 00:12:44,600
oauth 2.0

253
00:12:44,600 --> 00:12:47,880
and a couple more extensions beyond what

254
00:12:47,880 --> 00:12:50,100
exists today in oauth 2.0 so we would

255
00:12:50,100 --> 00:12:53,040
have to write at least one or two oauth

256
00:12:53,040 --> 00:12:54,240
extensions

257
00:12:54,240 --> 00:12:56,060
to Define

258
00:12:56,060 --> 00:12:58,680
specifically the new thing here is this

259
00:12:58,680 --> 00:13:01,380
location parameter which just like

260
00:13:01,380 --> 00:13:04,079
before tells the recipient I need you to

261
00:13:04,079 --> 00:13:05,639
authenticate and here's the web page

262
00:13:05,639 --> 00:13:07,019
that you can open to be able to

263
00:13:07,019 --> 00:13:09,600
authenticate

264
00:13:09,600 --> 00:13:11,639
so

265
00:13:11,639 --> 00:13:13,700
um

266
00:13:14,399 --> 00:13:18,060
so I think really and we can I can just

267
00:13:18,060 --> 00:13:19,380
briefly

268
00:13:19,380 --> 00:13:22,079
um show you that this is a now looks

269
00:13:22,079 --> 00:13:25,019
more or less like an ordinary oauth flow

270
00:13:25,019 --> 00:13:27,200
um and

271
00:13:27,200 --> 00:13:31,519
uh and again this opens an oauth context

272
00:13:31,519 --> 00:13:34,920
that eventually

273
00:13:34,920 --> 00:13:39,360
um that will result in a the in the

274
00:13:39,360 --> 00:13:41,399
original request the in this case the

275
00:13:41,399 --> 00:13:43,380
caldav request

276
00:13:43,380 --> 00:13:47,639
carrying a bearer authorization token

277
00:13:47,639 --> 00:13:49,320
so

278
00:13:49,320 --> 00:13:51,000
the main thing I want to present to the

279
00:13:51,000 --> 00:13:55,440
working group is is this function do you

280
00:13:55,440 --> 00:13:58,380
do you essentially view this as

281
00:13:58,380 --> 00:13:59,639
being

282
00:13:59,639 --> 00:14:02,600
something that's best thought of as

283
00:14:02,600 --> 00:14:06,839
essentially a very strange oauth variant

284
00:14:06,839 --> 00:14:09,420
where we solve this using oauth and a

285
00:14:09,420 --> 00:14:12,300
bunch of oauth extensions to to get to a

286
00:14:12,300 --> 00:14:14,339
very special oauth behavior

287
00:14:14,339 --> 00:14:17,820
or is this actually kind of a core HTTP

288
00:14:17,820 --> 00:14:20,399
function and we should basically Define

289
00:14:20,399 --> 00:14:25,440
a very simple HTTP extension that that

290
00:14:25,440 --> 00:14:29,120
gets us to to this ability

291
00:14:29,279 --> 00:14:31,980
um and so I'm seeking adoption but

292
00:14:31,980 --> 00:14:34,500
um I think which working group this goes

293
00:14:34,500 --> 00:14:36,480
in definitely depends on on the

294
00:14:36,480 --> 00:14:40,620
technical aspects of the the solution

295
00:14:40,620 --> 00:14:43,160
Martin

296
00:14:45,620 --> 00:14:47,820
so Martin Thompson I think you probably

297
00:14:47,820 --> 00:14:49,500
skipped a step there

298
00:14:49,500 --> 00:14:50,579
um

299
00:14:50,579 --> 00:14:52,380
I I'd like to talk a little bit about

300
00:14:52,380 --> 00:14:54,060
the use case before we start talking

301
00:14:54,060 --> 00:14:56,459
about how we might sort of address that

302
00:14:56,459 --> 00:14:58,440
sort of thing when I first did this

303
00:14:58,440 --> 00:15:00,060
draft

304
00:15:00,060 --> 00:15:02,040
it was pretty horrifying I have to say

305
00:15:02,040 --> 00:15:04,199
to have the the notion that you might

306
00:15:04,199 --> 00:15:06,800
have arbitrary pieces of code that that

307
00:15:06,800 --> 00:15:09,779
might pop up browsers in in various

308
00:15:09,779 --> 00:15:13,139
contexts is a little bit scary

309
00:15:13,139 --> 00:15:15,300
um we spent a lot of time trying very

310
00:15:15,300 --> 00:15:18,000
very carefully not to have pop-ups

311
00:15:18,000 --> 00:15:21,060
appear in in various contexts and this

312
00:15:21,060 --> 00:15:24,240
seems like a pretty smooth path to that

313
00:15:24,240 --> 00:15:25,560
for someone who wants that that

314
00:15:25,560 --> 00:15:27,720
capability that said

315
00:15:27,720 --> 00:15:30,060
there may be some ways in which you can

316
00:15:30,060 --> 00:15:31,320
frame this that might make that a little

317
00:15:31,320 --> 00:15:32,519
bit more

318
00:15:32,519 --> 00:15:35,279
um acceptable for for people I I don't

319
00:15:35,279 --> 00:15:38,040
know uh I I didn't see any sort of

320
00:15:38,040 --> 00:15:40,500
discussion of sort of abuse or any of

321
00:15:40,500 --> 00:15:41,779
those sorts of other things have you

322
00:15:41,779 --> 00:15:45,360
yeah well so my here's my um

323
00:15:45,360 --> 00:15:47,880
here here's my sort of Nod to the abuse

324
00:15:47,880 --> 00:15:49,440
problem

325
00:15:49,440 --> 00:15:53,880
um that anytime this happens uh in my

326
00:15:53,880 --> 00:15:56,820
proposed ux here you are directed to uh

327
00:15:56,820 --> 00:15:59,100
you're presented with a pop-up that

328
00:15:59,100 --> 00:16:00,720
gives you the option to actually accept

329
00:16:00,720 --> 00:16:04,260
this pop-up or to basically go to the

330
00:16:04,260 --> 00:16:06,899
settings that is triggering this and get

331
00:16:06,899 --> 00:16:08,339
rid of this thing that is sending you

332
00:16:08,339 --> 00:16:09,860
pop-ups

333
00:16:09,860 --> 00:16:11,480
yeah

334
00:16:11,480 --> 00:16:14,820
so you're gonna pop up to manage the

335
00:16:14,820 --> 00:16:17,760
pop-ups status yeah this is exactly the

336
00:16:17,760 --> 00:16:19,260
sort of thing that I think is is really

337
00:16:19,260 --> 00:16:22,380
important to discuss because these sorts

338
00:16:22,380 --> 00:16:24,839
of interaction models uh are difficult

339
00:16:24,839 --> 00:16:26,160
to understand I think there's there's a

340
00:16:26,160 --> 00:16:27,959
number of use cases in which this sort

341
00:16:27,959 --> 00:16:31,139
of behavior would be very very useful I

342
00:16:31,139 --> 00:16:34,560
I just uh published a rust crate this

343
00:16:34,560 --> 00:16:36,600
morning and

344
00:16:36,600 --> 00:16:37,259
um

345
00:16:37,259 --> 00:16:39,360
I haven't used this machine to publish

346
00:16:39,360 --> 00:16:41,160
them before and and there's a command

347
00:16:41,160 --> 00:16:43,800
line process that ultimately asked me to

348
00:16:43,800 --> 00:16:46,620
go off to a web page and copy and paste

349
00:16:46,620 --> 00:16:48,420
a token from the web page and that sort

350
00:16:48,420 --> 00:16:51,360
of error prone and fraught and and and

351
00:16:51,360 --> 00:16:53,160
concentrating on that use case would be

352
00:16:53,160 --> 00:16:56,040
I think reasonable uh in that context

353
00:16:56,040 --> 00:16:58,019
you would probably just fire up the

354
00:16:58,019 --> 00:17:00,959
browser and everything would be fine but

355
00:17:00,959 --> 00:17:02,160
um

356
00:17:02,160 --> 00:17:04,559
I'm not sure that

357
00:17:04,559 --> 00:17:06,780
um that's the end of the story here I

358
00:17:06,780 --> 00:17:07,980
think we need to talk about what it

359
00:17:07,980 --> 00:17:10,140
means to fire up a browser context in

360
00:17:10,140 --> 00:17:12,959
this in this whether or not

361
00:17:12,959 --> 00:17:14,579
you really do want to have the

362
00:17:14,579 --> 00:17:16,859
application in control of the browser

363
00:17:16,859 --> 00:17:18,720
context to the extent necessary to do

364
00:17:18,720 --> 00:17:19,859
the sorts of things that you're talking

365
00:17:19,859 --> 00:17:21,480
about here or whether there is something

366
00:17:21,480 --> 00:17:23,819
else that is uh more appropriate for

367
00:17:23,819 --> 00:17:26,459
signaling back to the application I

368
00:17:26,459 --> 00:17:28,860
think there's probably more to be said

369
00:17:28,860 --> 00:17:32,280
also about the nature of the the signal

370
00:17:32,280 --> 00:17:34,679
that you use to determine that the

371
00:17:34,679 --> 00:17:37,020
authentication process is complete as

372
00:17:37,020 --> 00:17:37,799
well

373
00:17:37,799 --> 00:17:40,020
so those those are the sorts of things

374
00:17:40,020 --> 00:17:41,600
that I think we we should probably

375
00:17:41,600 --> 00:17:43,799
concentrate on before we sort of talk

376
00:17:43,799 --> 00:17:45,900
about whether there's whether this is

377
00:17:45,900 --> 00:17:48,059
oauth or not I think perhaps I'm leaning

378
00:17:48,059 --> 00:17:49,620
toward an HTTP thing but that's because

379
00:17:49,620 --> 00:17:51,480
I'm an HTTP

380
00:17:51,480 --> 00:17:54,419
um familiar person and not no off person

381
00:17:54,419 --> 00:17:57,120
uh it seems more General

382
00:17:57,120 --> 00:18:00,059
interesting so thanks thank you Martin

383
00:18:00,059 --> 00:18:02,160
um I'll just say that I'm I was just

384
00:18:02,160 --> 00:18:03,720
slightly surprised by your your last

385
00:18:03,720 --> 00:18:05,700
note because your other comments sound

386
00:18:05,700 --> 00:18:07,980
actually a lot like what I what I think

387
00:18:07,980 --> 00:18:09,539
of as sort of the oauth perspective

388
00:18:09,539 --> 00:18:12,179
where um oauth has spent a lot of time

389
00:18:12,179 --> 00:18:14,880
thinking about the the ux of

390
00:18:14,880 --> 00:18:16,200
transitioning between these different

391
00:18:16,200 --> 00:18:19,500
contexts about uh the different signals

392
00:18:19,500 --> 00:18:21,600
that indicate termination

393
00:18:21,600 --> 00:18:24,059
um that's that's all I've been sort of

394
00:18:24,059 --> 00:18:25,980
discussed extensively in the oauth

395
00:18:25,980 --> 00:18:28,340
context

396
00:18:28,860 --> 00:18:30,080
right

397
00:18:30,080 --> 00:18:32,400
uh Mike

398
00:18:32,400 --> 00:18:34,320
uh Mike Bishop

399
00:18:34,320 --> 00:18:35,640
um

400
00:18:35,640 --> 00:18:37,799
I'm sympathetic to the abuse concern

401
00:18:37,799 --> 00:18:39,480
although

402
00:18:39,480 --> 00:18:41,340
presumably this is a context in which

403
00:18:41,340 --> 00:18:42,720
you would have gotten a pop-up anyway

404
00:18:42,720 --> 00:18:45,179
asking for username and password so

405
00:18:45,179 --> 00:18:47,760
we're swapping one pop-up for another

406
00:18:47,760 --> 00:18:50,580
so as long as an app is already able to

407
00:18:50,580 --> 00:18:53,520
do that pop-up I'm not particularly

408
00:18:53,520 --> 00:18:55,140
concerned about them being able to do

409
00:18:55,140 --> 00:18:58,200
this pop-up instead

410
00:18:58,200 --> 00:19:00,840
um I'm a little less happy about the

411
00:19:00,840 --> 00:19:02,400
whole reach into the browser and extract

412
00:19:02,400 --> 00:19:04,679
the cookie part

413
00:19:04,679 --> 00:19:06,780
uh I

414
00:19:06,780 --> 00:19:08,640
correctly if I'm wrong but I think the

415
00:19:08,640 --> 00:19:10,919
current way to do this if you need a

416
00:19:10,919 --> 00:19:12,539
rich sign-in

417
00:19:12,539 --> 00:19:16,260
is to launch the browser to it oauth and

418
00:19:16,260 --> 00:19:18,900
give it the completion URL or something

419
00:19:18,900 --> 00:19:21,600
on the local machine is that correct

420
00:19:21,600 --> 00:19:23,940
uh yeah so one of the standard patterns

421
00:19:23,940 --> 00:19:26,160
for this is is to say there's something

422
00:19:26,160 --> 00:19:28,380
called a redirect URI which you declare

423
00:19:28,380 --> 00:19:31,559
to be a server running on localhost and

424
00:19:31,559 --> 00:19:34,260
that's how you get a signal back from

425
00:19:34,260 --> 00:19:36,660
the login flow

426
00:19:36,660 --> 00:19:39,620
so

427
00:19:40,140 --> 00:19:42,360
I'm so I'm trying to understand what

428
00:19:42,360 --> 00:19:44,820
this solves that that doesn't is it

429
00:19:44,820 --> 00:19:47,580
simply that the the thing that's

430
00:19:47,580 --> 00:19:49,620
launching the pop-up doesn't want to

431
00:19:49,620 --> 00:19:51,320
have to host its own server on localhost

432
00:19:51,320 --> 00:19:56,520
so in in oauth today uh your client has

433
00:19:56,520 --> 00:19:59,600
to know out of band

434
00:19:59,600 --> 00:20:03,840
what the authentication flow is for the

435
00:20:03,840 --> 00:20:05,640
service that it's using oauth does not

436
00:20:05,640 --> 00:20:09,240
standardize that okay so uh like for

437
00:20:09,240 --> 00:20:11,940
example in it imagined in like a I don't

438
00:20:11,940 --> 00:20:13,440
know if you've run across J map it's

439
00:20:13,440 --> 00:20:16,679
like you know kind of HTTP API for

440
00:20:16,679 --> 00:20:19,559
foreign you have a general purpose jmap

441
00:20:19,559 --> 00:20:22,559
client how do you configure it uh you

442
00:20:22,559 --> 00:20:24,419
know ideally you would just put in a URL

443
00:20:24,419 --> 00:20:28,320
for a jmap endpoint but now you need a

444
00:20:28,320 --> 00:20:31,440
way to log into that service

445
00:20:31,440 --> 00:20:33,960
um you know currently I think you would

446
00:20:33,960 --> 00:20:37,140
you would have to your client would have

447
00:20:37,140 --> 00:20:40,440
to have out of band awareness of the

448
00:20:40,440 --> 00:20:42,900
specific authorization

449
00:20:42,900 --> 00:20:46,620
page that's used for any given jmap

450
00:20:46,620 --> 00:20:49,380
service in addition to the jmap URL

451
00:20:49,380 --> 00:20:51,919
so

452
00:20:52,080 --> 00:20:54,000
that really feels like you just need a

453
00:20:54,000 --> 00:20:56,100
way to pass the URL then

454
00:20:56,100 --> 00:20:59,460
oh wait so win test URL on a way to deal

455
00:20:59,460 --> 00:21:03,380
with the the redirect URI when it's done

456
00:21:03,380 --> 00:21:06,720
yeah and and we can if we sort of go all

457
00:21:06,720 --> 00:21:09,900
in on an oauth model then uh then we can

458
00:21:09,900 --> 00:21:12,660
just use the oauth redirect URI stuff

459
00:21:12,660 --> 00:21:16,679
and uh and maybe that's all we need

460
00:21:16,679 --> 00:21:19,799
so to me that feels like the the

461
00:21:19,799 --> 00:21:22,440
simplest way to get to this UI which I

462
00:21:22,440 --> 00:21:24,480
agree this is this is a UI I would want

463
00:21:24,480 --> 00:21:27,000
to enable for more things

464
00:21:27,000 --> 00:21:28,860
um that feels like the simplest path so

465
00:21:28,860 --> 00:21:30,360
I'd kind of like to see this land a new

466
00:21:30,360 --> 00:21:32,600
off

467
00:21:40,340 --> 00:21:43,679
from the oauth group um

468
00:21:43,679 --> 00:21:45,240
yeah I just wanted to say can you

469
00:21:45,240 --> 00:21:46,500
actually go to that slide the first

470
00:21:46,500 --> 00:21:48,480
slide that I sent you

471
00:21:48,480 --> 00:21:50,159
um so after

472
00:21:50,159 --> 00:21:52,200
uh after Ben presented this to the oauth

473
00:21:52,200 --> 00:21:54,419
group yesterday I was uh looking at it

474
00:21:54,419 --> 00:21:56,760
and I said I feel like we have almost

475
00:21:56,760 --> 00:21:59,340
all the pieces already put together in

476
00:21:59,340 --> 00:22:02,159
oauth itself except for this one piece

477
00:22:02,159 --> 00:22:05,100
which is driving the location of where

478
00:22:05,100 --> 00:22:07,919
to go log in given the location of the

479
00:22:07,919 --> 00:22:09,780
server you're trying to access so in

480
00:22:09,780 --> 00:22:11,340
this example it's dropping a calendar

481
00:22:11,340 --> 00:22:13,020
URL

482
00:22:13,020 --> 00:22:14,460
to the client and that's the only thing

483
00:22:14,460 --> 00:22:16,200
that you plug into the client and then

484
00:22:16,200 --> 00:22:18,179
you need to sort of Drive the login from

485
00:22:18,179 --> 00:22:22,320
that so this is essentially the only

486
00:22:22,320 --> 00:22:25,740
thing you need in order to then just use

487
00:22:25,740 --> 00:22:27,960
the rest of oauth to do the flow

488
00:22:27,960 --> 00:22:30,240
and I totally agree that there are

489
00:22:30,240 --> 00:22:32,900
security concerns and issues around

490
00:22:32,900 --> 00:22:35,700
pop-ups and phishing and all sorts of

491
00:22:35,700 --> 00:22:38,100
things that need to get sorted out but a

492
00:22:38,100 --> 00:22:39,179
lot of that work has already been done

493
00:22:39,179 --> 00:22:40,500
in the oauth group and thought about

494
00:22:40,500 --> 00:22:41,760
there and a lot of that experience is

495
00:22:41,760 --> 00:22:43,740
there so I don't think it's an

496
00:22:43,740 --> 00:22:46,500
unsolvable problem and I think there's a

497
00:22:46,500 --> 00:22:47,280
lot of

498
00:22:47,280 --> 00:22:50,039
experience there to draw from so

499
00:22:50,039 --> 00:22:52,200
that's why I put this sequence together

500
00:22:52,200 --> 00:22:53,940
showing

501
00:22:53,940 --> 00:22:55,320
um what it would look like to just to

502
00:22:55,320 --> 00:22:57,000
leverage the rest of oauth to do this

503
00:22:57,000 --> 00:22:59,400
and oauth has the answers for things

504
00:22:59,400 --> 00:23:01,260
like what if you're you don't want to

505
00:23:01,260 --> 00:23:02,700
spin up a local host server for your

506
00:23:02,700 --> 00:23:04,679
redirect URL it answers things like how

507
00:23:04,679 --> 00:23:07,320
do you know that the flow is done what's

508
00:23:07,320 --> 00:23:08,640
the signal for that like all that stuff

509
00:23:08,640 --> 00:23:11,280
is already done there so it's not it's

510
00:23:11,280 --> 00:23:13,140
not these aren't particularly new

511
00:23:13,140 --> 00:23:16,440
problems really so that is why I um

512
00:23:16,440 --> 00:23:18,000
wanted to

513
00:23:18,000 --> 00:23:19,679
put a sort of alternate proposal

514
00:23:19,679 --> 00:23:21,240
together that gets to the same end

515
00:23:21,240 --> 00:23:23,280
result here

516
00:23:23,280 --> 00:23:25,080
and I guess I should mention there is

517
00:23:25,080 --> 00:23:27,780
one other piece of this that does that

518
00:23:27,780 --> 00:23:29,460
would need to get solved which is the

519
00:23:29,460 --> 00:23:32,100
fact that these clients would be

520
00:23:32,100 --> 00:23:34,260
previously unknown to the authorization

521
00:23:34,260 --> 00:23:36,780
server as in you download a random

522
00:23:36,780 --> 00:23:38,760
calendar app talking to a random caldav

523
00:23:38,760 --> 00:23:40,620
server and

524
00:23:40,620 --> 00:23:41,880
um they don't know about each other

525
00:23:41,880 --> 00:23:44,520
ahead of time which is like been

526
00:23:44,520 --> 00:23:47,159
mentioned not normal in the oauth world

527
00:23:47,159 --> 00:23:48,840
in the oauth world things kind of get

528
00:23:48,840 --> 00:23:53,039
deployed all as a cohesive system that's

529
00:23:53,039 --> 00:23:54,960
why I put this note on here about the

530
00:23:54,960 --> 00:23:57,120
client ID where

531
00:23:57,120 --> 00:23:57,659
um

532
00:23:57,659 --> 00:23:59,640
in some scenarios actually the client ID

533
00:23:59,640 --> 00:24:00,960
could be pre-registered and there'll be

534
00:24:00,960 --> 00:24:02,159
plenty of scenarios where that would

535
00:24:02,159 --> 00:24:04,260
work just fine and in other situations

536
00:24:04,260 --> 00:24:06,480
you may need to do something more

537
00:24:06,480 --> 00:24:08,220
dynamic or more

538
00:24:08,220 --> 00:24:10,500
um on the fly or just straight up

539
00:24:10,500 --> 00:24:13,380
Anonymous and there are also starting to

540
00:24:13,380 --> 00:24:15,299
be some proposals for that kind of thing

541
00:24:15,299 --> 00:24:18,059
in the oauth group coming as well so

542
00:24:18,059 --> 00:24:21,059
again it feels very suited for for that

543
00:24:21,059 --> 00:24:24,080
uh that world

544
00:24:24,299 --> 00:24:27,299
foreign

545
00:24:30,320 --> 00:24:34,020
group I mostly I think my one option

546
00:24:34,020 --> 00:24:36,120
observation around this is just be very

547
00:24:36,120 --> 00:24:38,280
very thoughtful on the security side to

548
00:24:38,280 --> 00:24:40,500
re-emphasize some of the other call uh

549
00:24:40,500 --> 00:24:42,419
call outs

550
00:24:42,419 --> 00:24:44,580
um one of the areas that I really focus

551
00:24:44,580 --> 00:24:47,340
on is the human factor side we see that

552
00:24:47,340 --> 00:24:49,740
as a very big Vector for attacks and

553
00:24:49,740 --> 00:24:52,020
exploits and I think the moment this

554
00:24:52,020 --> 00:24:54,179
gets uh this proposal if it gets

555
00:24:54,179 --> 00:24:56,400
connected to the oauth universe there's

556
00:24:56,400 --> 00:24:58,200
sort of all sorts of other interesting

557
00:24:58,200 --> 00:25:00,900
opportunities now for lateral moves and

558
00:25:00,900 --> 00:25:03,120
attacks right so if this becomes an

559
00:25:03,120 --> 00:25:04,559
entry point where I can trick somebody

560
00:25:04,559 --> 00:25:07,980
to give authorization I can use that set

561
00:25:07,980 --> 00:25:10,440
of authorization to start moving and

562
00:25:10,440 --> 00:25:12,360
doing lateral attacks and I think these

563
00:25:12,360 --> 00:25:13,679
are the kinds of things that I'd really

564
00:25:13,679 --> 00:25:16,320
encourage you to explore very

565
00:25:16,320 --> 00:25:17,640
thoughtfully

566
00:25:17,640 --> 00:25:20,820
um you know you're not only and I'm also

567
00:25:20,820 --> 00:25:22,140
sympathetic with the fact that there's

568
00:25:22,140 --> 00:25:24,299
already a big

569
00:25:24,299 --> 00:25:26,279
um uh you know there are some there's

570
00:25:26,279 --> 00:25:28,919
already pop-ups coming up but just

571
00:25:28,919 --> 00:25:31,799
thinking about thinking through that and

572
00:25:31,799 --> 00:25:33,720
see if there's an opportunity to

573
00:25:33,720 --> 00:25:35,940
actually make it better in general my

574
00:25:35,940 --> 00:25:38,279
Guidance with this would be one if you

575
00:25:38,279 --> 00:25:40,260
can avoid having the customer make a

576
00:25:40,260 --> 00:25:42,720
decision or avoid having the end User

577
00:25:42,720 --> 00:25:45,840
make a decision please do so if they're

578
00:25:45,840 --> 00:25:47,640
making a decision give them the best

579
00:25:47,640 --> 00:25:49,440
possible information to make that in

580
00:25:49,440 --> 00:25:52,500
decision with and then they will make

581
00:25:52,500 --> 00:25:55,500
bad decisions please do you know in your

582
00:25:55,500 --> 00:25:59,400
design make sure that there is stop gaps

583
00:25:59,400 --> 00:26:02,520
and mitigations for when the end user

584
00:26:02,520 --> 00:26:04,340
makes a poor decision because they will

585
00:26:04,340 --> 00:26:07,140
I think what we're seeing

586
00:26:07,140 --> 00:26:10,260
um is incredible cleverness on the side

587
00:26:10,260 --> 00:26:12,960
of attackers into using these pop-up

588
00:26:12,960 --> 00:26:15,720
type experiences to really confuse the

589
00:26:15,720 --> 00:26:20,820
user to engage in social engineering and

590
00:26:20,820 --> 00:26:23,279
it's actually become a major entry point

591
00:26:23,279 --> 00:26:25,380
people are not so much attacking the

592
00:26:25,380 --> 00:26:28,919
protocol as the end user so just use

593
00:26:28,919 --> 00:26:30,600
this opportunity and and be be

594
00:26:30,600 --> 00:26:32,640
thoughtful of that

595
00:26:32,640 --> 00:26:35,360
thank you

596
00:26:37,260 --> 00:26:40,380
uh Eric Kinnear Apple so

597
00:26:40,380 --> 00:26:41,700
I would

598
00:26:41,700 --> 00:26:43,679
I'm a little bit curious as to what

599
00:26:43,679 --> 00:26:46,559
mechanism we're trying to Define here uh

600
00:26:46,559 --> 00:26:48,600
we actually do something almost

601
00:26:48,600 --> 00:26:50,159
identical to the flow that you had on

602
00:26:50,159 --> 00:26:52,559
the slide earlier uh if you go in the

603
00:26:52,559 --> 00:26:55,140
mail app on your Mac and you ask to add

604
00:26:55,140 --> 00:26:56,940
a Gmail account it will pop up a thing

605
00:26:56,940 --> 00:27:00,000
that uses oauth uses a custom URL scheme

606
00:27:00,000 --> 00:27:01,860
as the redirect URI that causes it to

607
00:27:01,860 --> 00:27:03,179
deliver everything back into the app

608
00:27:03,179 --> 00:27:04,679
without having to go through weird

609
00:27:04,679 --> 00:27:07,860
localhost localhost bounces

610
00:27:07,860 --> 00:27:10,980
um so I don't know that like having the

611
00:27:10,980 --> 00:27:12,960
user put in a particular URL or

612
00:27:12,960 --> 00:27:14,460
identifying it that way is as

613
00:27:14,460 --> 00:27:15,840
interesting as having the user be able

614
00:27:15,840 --> 00:27:17,460
to just use their normal flow which is

615
00:27:17,460 --> 00:27:21,419
what it already does uh so I think the

616
00:27:21,419 --> 00:27:25,020
the the distinction here is that instead

617
00:27:25,020 --> 00:27:28,559
of uh having the client know that it's

618
00:27:28,559 --> 00:27:30,179
um it can talk to Gmail and having a

619
00:27:30,179 --> 00:27:32,460
button that says Gmail

620
00:27:32,460 --> 00:27:34,860
um I'm imagining a world where in in the

621
00:27:34,860 --> 00:27:37,520
mail example we have a j map rest API

622
00:27:37,520 --> 00:27:41,720
for communication between mail apps and

623
00:27:41,720 --> 00:27:46,440
uh and male backends and and so the user

624
00:27:46,440 --> 00:27:49,380
paste in just once an identifier of

625
00:27:49,380 --> 00:27:51,419
their mail server instead of Gmail

626
00:27:51,419 --> 00:27:53,580
whoever is providing mail for them and

627
00:27:53,580 --> 00:27:55,320
now I want exactly the same kind of

628
00:27:55,320 --> 00:27:57,840
magical authentication flow potentially

629
00:27:57,840 --> 00:28:01,080
still with single sign-on through Google

630
00:28:01,080 --> 00:28:03,419
um but now using that to cross

631
00:28:03,419 --> 00:28:05,400
authenticate into whoever their actual

632
00:28:05,400 --> 00:28:07,860
mail provider is uh and then using a

633
00:28:07,860 --> 00:28:10,200
standard uh protocol for that

634
00:28:10,200 --> 00:28:11,580
communication

635
00:28:11,580 --> 00:28:13,620
excellent yeah so being able to have

636
00:28:13,620 --> 00:28:15,600
anybody put that in I think one of the

637
00:28:15,600 --> 00:28:17,460
things that would make this super

638
00:28:17,460 --> 00:28:19,679
compelling is if there's a way to reduce

639
00:28:19,679 --> 00:28:22,140
that kind of bouncing around

640
00:28:22,140 --> 00:28:24,000
um and maybe that's hard because by

641
00:28:24,000 --> 00:28:25,740
definition we've kind of defined this as

642
00:28:25,740 --> 00:28:27,360
a pop-up

643
00:28:27,360 --> 00:28:28,919
um but

644
00:28:28,919 --> 00:28:30,299
to the comments around social

645
00:28:30,299 --> 00:28:32,580
engineering even just from a user

646
00:28:32,580 --> 00:28:34,320
confusion like suddenly I'm in settings

647
00:28:34,320 --> 00:28:36,539
suddenly I'm in a browser suddenly I'm

648
00:28:36,539 --> 00:28:37,700
somewhere else

649
00:28:37,700 --> 00:28:39,840
if there's a way that we could do this

650
00:28:39,840 --> 00:28:41,400
that doesn't mean we have to bounce

651
00:28:41,400 --> 00:28:42,900
through several different screens really

652
00:28:42,900 --> 00:28:45,059
quickly especially screens that involve

653
00:28:45,059 --> 00:28:46,260
putting in my password for something

654
00:28:46,260 --> 00:28:49,340
that would be really really cool

655
00:28:52,980 --> 00:28:54,360
all right

656
00:28:54,360 --> 00:28:57,299
um so Peter reminded me that this is far

657
00:28:57,299 --> 00:29:00,179
more challenging than than even I had

658
00:29:00,179 --> 00:29:01,260
first thought

659
00:29:01,260 --> 00:29:03,840
uh when

660
00:29:03,840 --> 00:29:06,360
when I have an application that's asking

661
00:29:06,360 --> 00:29:07,860
for this permission that goes off to the

662
00:29:07,860 --> 00:29:09,480
website

663
00:29:09,480 --> 00:29:10,380
um

664
00:29:10,380 --> 00:29:13,799
what is the website know about who is

665
00:29:13,799 --> 00:29:14,760
asking

666
00:29:14,760 --> 00:29:16,740
in this context we're talking about a

667
00:29:16,740 --> 00:29:19,080
random application that's sitting on

668
00:29:19,080 --> 00:29:21,020
localhost

669
00:29:21,020 --> 00:29:23,880
or a random application that is

670
00:29:23,880 --> 00:29:25,440
essentially

671
00:29:25,440 --> 00:29:27,720
uh an arbitrary binary that's running on

672
00:29:27,720 --> 00:29:29,760
your machine and and to Peter's Point

673
00:29:29,760 --> 00:29:32,159
earlier I think that's really scary

674
00:29:32,159 --> 00:29:35,460
and I think there's probably a case here

675
00:29:35,460 --> 00:29:39,799
to be made for uh simply saying that um

676
00:29:39,799 --> 00:29:41,940
that this requires some sort of server

677
00:29:41,940 --> 00:29:43,380
infrastructure so that the server knows

678
00:29:43,380 --> 00:29:46,020
who it's talking to and then um

679
00:29:46,020 --> 00:29:49,200
for example in the cargo publish example

680
00:29:49,200 --> 00:29:50,820
that I was talking about before the the

681
00:29:50,820 --> 00:29:54,899
cargo published binary knows me and can

682
00:29:54,899 --> 00:29:57,779
talk to crates.io which is their server

683
00:29:57,779 --> 00:29:59,100
infrastructure and can authenticate to

684
00:29:59,100 --> 00:30:00,840
that and it's crates.io that's receiving

685
00:30:00,840 --> 00:30:03,720
the authorization token in this case and

686
00:30:03,720 --> 00:30:05,580
then it passes it back down to the

687
00:30:05,580 --> 00:30:07,399
command line client in that case

688
00:30:07,399 --> 00:30:10,020
otherwise that is that is essentially

689
00:30:10,020 --> 00:30:12,360
the the architecture that I imagine

690
00:30:12,360 --> 00:30:14,279
um you know one thing not what I'm

691
00:30:14,279 --> 00:30:15,299
saying here

692
00:30:15,299 --> 00:30:18,960
okay okay um so one thing that I wanted

693
00:30:18,960 --> 00:30:21,600
to note here is that the in this version

694
00:30:21,600 --> 00:30:23,279
of The Proposal

695
00:30:23,279 --> 00:30:26,580
um the the location of the of the

696
00:30:26,580 --> 00:30:28,200
authorization page is only given as a

697
00:30:28,200 --> 00:30:30,360
path so it's meant to be on the same

698
00:30:30,360 --> 00:30:34,200
origin as the as the actual service

699
00:30:34,200 --> 00:30:35,520
you're trying to reach and from there

700
00:30:35,520 --> 00:30:37,860
maybe you'll go through some series of

701
00:30:37,860 --> 00:30:39,899
redirections to get you through a single

702
00:30:39,899 --> 00:30:42,779
sign-on type flow but

703
00:30:42,779 --> 00:30:45,720
um but what your your authenticity too

704
00:30:45,720 --> 00:30:48,799
is is whatever you started with

705
00:30:48,799 --> 00:30:51,899
so so that that doesn't necessarily help

706
00:30:51,899 --> 00:30:54,899
because the application that the server

707
00:30:54,899 --> 00:30:56,399
thinks that it's that that it might be

708
00:30:56,399 --> 00:30:58,740
providing this information to and the

709
00:30:58,740 --> 00:31:00,539
application that the information

710
00:31:00,539 --> 00:31:02,520
ultimately ends up in may be two

711
00:31:02,520 --> 00:31:04,860
different things because uh let's just

712
00:31:04,860 --> 00:31:07,320
say that I managed to get some some bad

713
00:31:07,320 --> 00:31:09,960
software on your machine and then the

714
00:31:09,960 --> 00:31:12,659
service handing out for that instead yes

715
00:31:12,659 --> 00:31:15,240
well so if you believe in open source uh

716
00:31:15,240 --> 00:31:17,880
you know then uh unless you're going to

717
00:31:17,880 --> 00:31:20,059
invoke some kind of like client-side

718
00:31:20,059 --> 00:31:24,840
attestation trusted platform stuff uh

719
00:31:24,840 --> 00:31:27,240
you know the the server no server ever

720
00:31:27,240 --> 00:31:30,480
actually knows what uh what software is

721
00:31:30,480 --> 00:31:31,860
running on the client client to server

722
00:31:31,860 --> 00:31:35,100
oauth uh always has some version of this

723
00:31:35,100 --> 00:31:37,140
problem and this is also how the web

724
00:31:37,140 --> 00:31:39,539
works right like servers don't get an

725
00:31:39,539 --> 00:31:42,000
attestation proving what browser is

726
00:31:42,000 --> 00:31:45,299
being used to access gmail.com

727
00:31:45,299 --> 00:31:47,640
um we just that's just the world as we

728
00:31:47,640 --> 00:31:49,919
accept it is this is sort of a web-like

729
00:31:49,919 --> 00:31:53,399
view of non-web stuff that's that's not

730
00:31:53,399 --> 00:31:55,200
really the the sort of problem that I'm

731
00:31:55,200 --> 00:31:58,200
looking to to address here you've got

732
00:31:58,200 --> 00:31:59,640
um

733
00:31:59,640 --> 00:32:02,460
you have clients authenticating to

734
00:32:02,460 --> 00:32:04,020
servers all the time this is this is not

735
00:32:04,020 --> 00:32:06,539
a particular particular challenge

736
00:32:06,539 --> 00:32:09,299
um but what you're if this was the only

737
00:32:09,299 --> 00:32:11,700
way in which you're authenticating to to

738
00:32:11,700 --> 00:32:13,380
the server and then

739
00:32:13,380 --> 00:32:15,659
um because you're using the the

740
00:32:15,659 --> 00:32:17,340
interactive session in order to

741
00:32:17,340 --> 00:32:19,620
authenticate the user to the server the

742
00:32:19,620 --> 00:32:20,520
service storm doesn't know anything

743
00:32:20,520 --> 00:32:22,020
about the application that it's

744
00:32:22,020 --> 00:32:24,779
providing this token to and to the

745
00:32:24,779 --> 00:32:27,419
phishing point earlier that that becomes

746
00:32:27,419 --> 00:32:29,880
fraught whereas if you had a scenario

747
00:32:29,880 --> 00:32:32,760
where you have an application where a

748
00:32:32,760 --> 00:32:34,740
user is authenticated to a server and

749
00:32:34,740 --> 00:32:36,360
they're looking to access

750
00:32:36,360 --> 00:32:38,340
secondary resources on others other

751
00:32:38,340 --> 00:32:39,899
services then this becomes a little bit

752
00:32:39,899 --> 00:32:41,220
more interesting because then you can

753
00:32:41,220 --> 00:32:43,740
use that first authentication session as

754
00:32:43,740 --> 00:32:47,520
the basis for knowing that the this is a

755
00:32:47,520 --> 00:32:48,659
particular user that's receiving

756
00:32:48,659 --> 00:32:50,220
information and then then you're talking

757
00:32:50,220 --> 00:32:52,440
about interactions between the two

758
00:32:52,440 --> 00:32:54,299
different servers and then it becomes a

759
00:32:54,299 --> 00:32:56,460
little bit easier for the the server

760
00:32:56,460 --> 00:32:58,980
that's giving out that token to

761
00:32:58,980 --> 00:33:01,559
to to be assured of where it's going as

762
00:33:01,559 --> 00:33:03,539
opposed to random pop-up that someone

763
00:33:03,539 --> 00:33:04,440
just

764
00:33:04,440 --> 00:33:07,200
happens to

765
00:33:07,200 --> 00:33:09,899
to spawn off on the on the um on the

766
00:33:09,899 --> 00:33:11,640
server

767
00:33:11,640 --> 00:33:14,340
so so maybe to close this conversation I

768
00:33:14,340 --> 00:33:16,559
think there's two questions here to this

769
00:33:16,559 --> 00:33:18,840
group is HQ API

770
00:33:18,840 --> 00:33:21,120
um is there a concernses that this would

771
00:33:21,120 --> 00:33:24,240
be useful to http API

772
00:33:24,240 --> 00:33:26,940
uh world

773
00:33:26,940 --> 00:33:30,000
um then the second question is but it's

774
00:33:30,000 --> 00:33:32,159
probably the old folks that have all the

775
00:33:32,159 --> 00:33:33,659
security knowledge to make this work

776
00:33:33,659 --> 00:33:36,200
securely

777
00:33:38,519 --> 00:33:39,980
and so

778
00:33:39,980 --> 00:33:43,140
Aaron Ben probably you're the best folks

779
00:33:43,140 --> 00:33:45,840
to talk more about

780
00:33:45,840 --> 00:33:48,299
um how to move this forward but but

781
00:33:48,299 --> 00:33:50,399
there's an interest I think in the HP

782
00:33:50,399 --> 00:33:54,120
API space it's just I think the a lot of

783
00:33:54,120 --> 00:33:55,380
folks

784
00:33:55,380 --> 00:33:58,440
have the tools to make this happen

785
00:33:58,440 --> 00:34:00,299
if it can happen

786
00:34:00,299 --> 00:34:01,799
okay

787
00:34:01,799 --> 00:34:05,159
uh well so yeah I think the most likely

788
00:34:05,159 --> 00:34:08,399
outcome here is that Aaron and I will

789
00:34:08,399 --> 00:34:10,980
um hopefully try to put together a now a

790
00:34:10,980 --> 00:34:13,619
more oauth flavored version of the

791
00:34:13,619 --> 00:34:14,960
protocol

792
00:34:14,960 --> 00:34:19,918
and uh and we will probably try to to

793
00:34:19,918 --> 00:34:22,020
run that by oauth again I'm sure that

794
00:34:22,020 --> 00:34:24,540
oauth as always will will be looking

795
00:34:24,540 --> 00:34:28,139
very closely at questions about

796
00:34:28,139 --> 00:34:30,899
um user confusion and and leakage of

797
00:34:30,899 --> 00:34:33,980
tokens and that sort of thing

798
00:34:34,560 --> 00:34:36,899
so I I did lock the queue you you were

799
00:34:36,899 --> 00:34:38,760
in the Q Aaron since I kind of handed it

800
00:34:38,760 --> 00:34:40,020
over to you do you want to have last

801
00:34:40,020 --> 00:34:42,320
word

802
00:34:45,179 --> 00:34:46,739
sure I just wanted to respond to some of

803
00:34:46,739 --> 00:34:49,500
the stuff to Martin's I agree that there

804
00:34:49,500 --> 00:34:51,480
are concerns around

805
00:34:51,480 --> 00:34:54,659
unknown software talking to unknown

806
00:34:54,659 --> 00:34:57,780
servers um that is the kind of thing

807
00:34:57,780 --> 00:34:59,400
that gets discussed in the oauth group

808
00:34:59,400 --> 00:35:00,540
and

809
00:35:00,540 --> 00:35:03,780
there are valid use cases for that and

810
00:35:03,780 --> 00:35:05,400
there are also valid use cases to

811
00:35:05,400 --> 00:35:07,320
prevent that and both of those are

812
00:35:07,320 --> 00:35:10,020
deployment level decisions to get made

813
00:35:10,020 --> 00:35:12,000
all all the time

814
00:35:12,000 --> 00:35:13,260
if you look at what Google's done

815
00:35:13,260 --> 00:35:15,599
they've locked down they've really

816
00:35:15,599 --> 00:35:18,420
locked down who can get access to be

817
00:35:18,420 --> 00:35:19,980
able to do an oauth flow at all and

818
00:35:19,980 --> 00:35:21,300
depending on the scope you're requesting

819
00:35:21,300 --> 00:35:23,760
so they've gone like super hard on that

820
00:35:23,760 --> 00:35:26,400
in the Enterprise world it's extremely

821
00:35:26,400 --> 00:35:28,260
locked down only the Enterprise admin

822
00:35:28,260 --> 00:35:30,839
can create a client ID in the system

823
00:35:30,839 --> 00:35:33,119
both of those scenarios would work with

824
00:35:33,119 --> 00:35:35,040
the oauth version of The Proposal both

825
00:35:35,040 --> 00:35:37,079
those are enabled by it so if you want

826
00:35:37,079 --> 00:35:38,460
those policies you can still have those

827
00:35:38,460 --> 00:35:39,599
policies

828
00:35:39,599 --> 00:35:42,180
if you want to open it up and allow your

829
00:35:42,180 --> 00:35:45,839
random calendar app developer to publish

830
00:35:45,839 --> 00:35:48,119
an open source piece of software that's

831
00:35:48,119 --> 00:35:50,160
you know lives on GitHub that someone

832
00:35:50,160 --> 00:35:52,980
downloads and there's no binary signing

833
00:35:52,980 --> 00:35:53,880
anywhere

834
00:35:53,880 --> 00:35:56,220
that's great and if the server wants to

835
00:35:56,220 --> 00:35:58,099
enable that to happen that's also cool

836
00:35:58,099 --> 00:36:00,599
and think think of also the WordPress

837
00:36:00,599 --> 00:36:02,160
model anybody can set up a WordPress

838
00:36:02,160 --> 00:36:04,500
server anybody can write an app to use

839
00:36:04,500 --> 00:36:07,079
the WordPress API obviously there's no

840
00:36:07,079 --> 00:36:10,260
prior link between the two Developers

841
00:36:10,260 --> 00:36:11,820
there's no registration that can happen

842
00:36:11,820 --> 00:36:13,320
out of band there's no signing that can

843
00:36:13,320 --> 00:36:16,260
happen but that is a useful use case if

844
00:36:16,260 --> 00:36:18,300
you're okay with the assumptions that or

845
00:36:18,300 --> 00:36:20,579
the the consideration is there so I just

846
00:36:20,579 --> 00:36:21,599
think

847
00:36:21,599 --> 00:36:23,460
writing that all down and capturing that

848
00:36:23,460 --> 00:36:25,619
as like here's the assumptions here's

849
00:36:25,619 --> 00:36:27,660
how you can deploy this in ways that

850
00:36:27,660 --> 00:36:29,820
make sense for you that's also stuff

851
00:36:29,820 --> 00:36:32,700
that can be worked out in this draft

852
00:36:32,700 --> 00:36:35,400
cool so we should move on do you have a

853
00:36:35,400 --> 00:36:37,440
very quick comment yeah just a quick

854
00:36:37,440 --> 00:36:39,320
comments

855
00:36:39,320 --> 00:36:41,640
group chair

856
00:36:41,640 --> 00:36:43,800
um I agree with the with the with that

857
00:36:43,800 --> 00:36:45,839
with Aaron others that this is probably

858
00:36:45,839 --> 00:36:48,300
fits nicely into the earthquake group

859
00:36:48,300 --> 00:36:51,180
they and and then got great feedback

860
00:36:51,180 --> 00:36:53,040
from their group work group interested

861
00:36:53,040 --> 00:36:55,380
in this one so this is the right place

862
00:36:55,380 --> 00:36:56,280
for it

863
00:36:56,280 --> 00:36:58,079
excellent

864
00:36:58,079 --> 00:37:00,119
thank you very much Ben

865
00:37:00,119 --> 00:37:02,099
okay and thank you for staying up until

866
00:37:02,099 --> 00:37:03,780
the middle of the night to come talk to

867
00:37:03,780 --> 00:37:04,500
us

868
00:37:04,500 --> 00:37:08,180
these kind of newborn he's used to it

869
00:37:09,960 --> 00:37:12,660
okay

870
00:37:12,660 --> 00:37:16,279
see if I can

871
00:37:16,800 --> 00:37:20,599
navigate my way through here

872
00:37:23,760 --> 00:37:25,920
actually rather than me sharing my

873
00:37:25,920 --> 00:37:28,619
screen and then Roberto are you going to

874
00:37:28,619 --> 00:37:31,400
be sharing your screen

875
00:37:31,820 --> 00:37:35,640
hi can you hear me yes we can

876
00:37:35,640 --> 00:37:38,760
okay I'm trying to share my screen

877
00:37:38,760 --> 00:37:39,720
okay

878
00:37:39,720 --> 00:37:42,379
it's coming

879
00:37:44,579 --> 00:37:47,820
so it's a very quick presentation the

880
00:37:47,820 --> 00:37:50,780
yaml media type is almost

881
00:37:50,780 --> 00:37:53,839
uh complete

882
00:37:53,839 --> 00:37:57,780
can you see everyone can see it right

883
00:37:57,780 --> 00:38:01,099
the Yemen media type is almost complete

884
00:38:01,099 --> 00:38:04,200
it's a very important specification

885
00:38:04,200 --> 00:38:06,119
because it allows

886
00:38:06,119 --> 00:38:09,000
other media type registration to be

887
00:38:09,000 --> 00:38:13,079
filed the Json schema of an API and Json

888
00:38:13,079 --> 00:38:17,700
LD media types will be addressed uh

889
00:38:17,700 --> 00:38:20,099
subsequently

890
00:38:20,099 --> 00:38:21,660
so

891
00:38:21,660 --> 00:38:23,240
um

892
00:38:23,240 --> 00:38:28,079
structured syntax suffix is complete

893
00:38:28,079 --> 00:38:31,500
it is in word group plus call and there

894
00:38:31,500 --> 00:38:33,900
is positive feedback from the media type

895
00:38:33,900 --> 00:38:35,160
folks

896
00:38:35,160 --> 00:38:40,040
uh we changed

897
00:38:40,520 --> 00:38:44,460
just one thing actually we specified

898
00:38:44,460 --> 00:38:46,800
that that yaml is the preferred

899
00:38:46,800 --> 00:38:51,780
extension while yml is the Legacy one

900
00:38:51,780 --> 00:38:53,100
and

901
00:38:53,100 --> 00:38:53,460
[Music]

902
00:38:53,460 --> 00:38:55,040
um

903
00:38:55,040 --> 00:38:58,560
we acknowledge that the relation with

904
00:38:58,560 --> 00:39:02,460
median and suffixes does not require any

905
00:39:02,460 --> 00:39:03,780
changes

906
00:39:03,780 --> 00:39:07,320
for the rest API we need more feedback

907
00:39:07,320 --> 00:39:10,800
so we are not addressing in this uh in

908
00:39:10,800 --> 00:39:12,720
this meeting

909
00:39:12,720 --> 00:39:17,579
we just have one open issue that is

910
00:39:17,579 --> 00:39:22,099
related from a clipboard identifier for

911
00:39:22,099 --> 00:39:25,339
Windows and Macross

912
00:39:25,339 --> 00:39:30,000
what we propose is to eventually merge

913
00:39:30,000 --> 00:39:32,520
pull request 70

914
00:39:32,520 --> 00:39:36,680
that addresses the

915
00:39:36,680 --> 00:39:40,760
Windows clipboard identifier

916
00:39:40,760 --> 00:39:48,200
and Skip for now but it can be addressed

917
00:39:51,900 --> 00:39:54,440
all right

918
00:39:59,339 --> 00:40:05,640
Apple folks so we really think that we

919
00:40:05,640 --> 00:40:08,160
need to publish this specification that

920
00:40:08,160 --> 00:40:11,700
is complete we have positive feedback

921
00:40:11,700 --> 00:40:17,099
and well let us know what should we do

922
00:40:17,099 --> 00:40:21,000
with a program 70

923
00:40:21,119 --> 00:40:24,599
uh well that's it thanks from me and the

924
00:40:24,599 --> 00:40:26,160
other editors

925
00:40:26,160 --> 00:40:28,619
and what

926
00:40:28,619 --> 00:40:31,880
questions welcome

927
00:40:33,780 --> 00:40:35,880
this is Greg I'm glad to see we're

928
00:40:35,880 --> 00:40:37,380
making progress on this one and it was

929
00:40:37,380 --> 00:40:39,060
probably a good idea to do that split

930
00:40:39,060 --> 00:40:41,700
that we did uh from the other media

931
00:40:41,700 --> 00:40:43,320
types because they seem like they have a

932
00:40:43,320 --> 00:40:46,200
few more things to sort out does anybody

933
00:40:46,200 --> 00:40:49,260
have any questions or feedback

934
00:40:49,260 --> 00:40:52,700
on the ammo media type

935
00:40:53,400 --> 00:40:55,859
uh

936
00:40:55,859 --> 00:40:59,420
see somebody walking to the mic

937
00:41:02,880 --> 00:41:07,260
Alexi hi Alex yeah um I had to look at

938
00:41:07,260 --> 00:41:11,180
this um need to double check the

939
00:41:11,400 --> 00:41:15,300
um the template itself uh it looks fine

940
00:41:15,300 --> 00:41:17,760
in regards to things like clipboard

941
00:41:17,760 --> 00:41:21,119
names and and you know this sort of

942
00:41:21,119 --> 00:41:24,180
information is useful if you know it but

943
00:41:24,180 --> 00:41:25,800
I understand there aren't that many

944
00:41:25,800 --> 00:41:28,500
experts for this so if you can find out

945
00:41:28,500 --> 00:41:31,980
what should go there included

946
00:41:31,980 --> 00:41:33,960
if not I don't think it's going to be a

947
00:41:33,960 --> 00:41:35,280
big deal

948
00:41:35,280 --> 00:41:38,099
yes I did try reaching out to Folks at

949
00:41:38,099 --> 00:41:40,079
Microsoft and looked around with the

950
00:41:40,079 --> 00:41:42,300
clipboard registry and it was seems like

951
00:41:42,300 --> 00:41:44,640
it's kind of a first come first serve

952
00:41:44,640 --> 00:41:52,140
and yaml is a fairly unique word so uh

953
00:41:52,140 --> 00:41:56,339
it doesn't appear to already be used so

954
00:41:56,339 --> 00:41:58,859
are you saying that there has to be an

955
00:41:58,859 --> 00:42:01,140
action with Microsoft there doesn't

956
00:42:01,140 --> 00:42:03,240
appear to be any action right with

957
00:42:03,240 --> 00:42:05,220
Microsoft at all uh with regards to

958
00:42:05,220 --> 00:42:09,140
clipboard identifiers okay

959
00:42:12,680 --> 00:42:15,180
I'm looking forward to

960
00:42:15,180 --> 00:42:19,160
approving this excellent

961
00:42:20,700 --> 00:42:25,939
okay uh thank you Roberto

962
00:42:26,160 --> 00:42:28,619
after we match these two reverse

963
00:42:28,619 --> 00:42:31,320
eventually we can just uh start the

964
00:42:31,320 --> 00:42:34,260
publication procedure

965
00:42:34,260 --> 00:42:38,220
yes and I I have already started writing

966
00:42:38,220 --> 00:42:42,020
up the beginning the shepherd document

967
00:42:45,300 --> 00:42:47,900
okay

968
00:42:48,300 --> 00:42:50,960
so

969
00:43:11,940 --> 00:43:14,880
there we go

970
00:43:14,880 --> 00:43:19,680
okay uh so the next part of this we are

971
00:43:19,680 --> 00:43:22,200
going to just go through the other

972
00:43:22,200 --> 00:43:24,599
um working group documents

973
00:43:24,599 --> 00:43:26,700
um and have some discussion around the

974
00:43:26,700 --> 00:43:29,400
open issues uh

975
00:43:29,400 --> 00:43:31,319
of course because I shared a window I

976
00:43:31,319 --> 00:43:33,380
can't just change it I have to

977
00:43:33,380 --> 00:43:36,780
re-share the other in the tab give me a

978
00:43:36,780 --> 00:43:38,900
second

979
00:43:39,300 --> 00:43:45,079
not used to working with only one window

980
00:43:47,640 --> 00:43:50,640
yes

981
00:43:52,680 --> 00:43:56,720
ah let's just go into our screen

982
00:43:59,220 --> 00:44:02,220
and

983
00:44:04,460 --> 00:44:08,460
so uh

984
00:44:08,940 --> 00:44:12,240
go up there okay so we keep track of in

985
00:44:12,240 --> 00:44:14,880
the HP API working group we keep track

986
00:44:14,880 --> 00:44:18,359
of the issues uh via the GitHub repos

987
00:44:18,359 --> 00:44:20,880
and there is this common project that

988
00:44:20,880 --> 00:44:23,640
lists all of the different uh documents

989
00:44:23,640 --> 00:44:26,700
that we are working on uh that surfaces

990
00:44:26,700 --> 00:44:28,920
all the various issues and we have

991
00:44:28,920 --> 00:44:31,500
status here to give us an indication of

992
00:44:31,500 --> 00:44:37,020
where these uh issues are within our

993
00:44:37,020 --> 00:44:38,880
um shepherded pipeline

994
00:44:38,880 --> 00:44:42,420
uh the deprecation header unfortunately

995
00:44:42,420 --> 00:44:46,140
Eric was not able to join today unless

996
00:44:46,140 --> 00:44:49,619
uh unless he is on the call

997
00:44:49,619 --> 00:44:52,680
so I didn't see him on the call and I

998
00:44:52,680 --> 00:44:54,240
tried to get rid of those windows that

999
00:44:54,240 --> 00:44:57,560
appear at the bottom and I can't

1000
00:44:58,740 --> 00:45:02,460
so they'll stay there uh the one open

1001
00:45:02,460 --> 00:45:06,720
issue that comes still really remaining

1002
00:45:06,720 --> 00:45:10,619
from uh ietf 114 is we ran into

1003
00:45:10,619 --> 00:45:12,900
challenges with regards to the

1004
00:45:12,900 --> 00:45:17,040
formatting of the date field in the uh

1005
00:45:17,040 --> 00:45:20,480
deprecation header which

1006
00:45:20,480 --> 00:45:23,400
amongst the suggestions to move to

1007
00:45:23,400 --> 00:45:25,260
structured headers also ran into a

1008
00:45:25,260 --> 00:45:27,119
challenge with well we want the

1009
00:45:27,119 --> 00:45:29,880
deprecation field to also be consistent

1010
00:45:29,880 --> 00:45:32,460
with the sunset header as the two work

1011
00:45:32,460 --> 00:45:37,020
in parallel uh the outcome of that was

1012
00:45:37,020 --> 00:45:39,300
well should we instead of having two

1013
00:45:39,300 --> 00:45:41,220
separate Fields just have one life cycle

1014
00:45:41,220 --> 00:45:43,800
header

1015
00:45:43,800 --> 00:45:47,520
um and I believe the some of the last

1016
00:45:47,520 --> 00:45:50,160
words from itf14 is oh that would be a

1017
00:45:50,160 --> 00:45:51,780
really easy PR to write it shouldn't

1018
00:45:51,780 --> 00:45:53,640
require a whole lot of changes do you

1019
00:45:53,640 --> 00:45:56,598
remember that comment mark

1020
00:45:59,520 --> 00:46:01,640
thank you

1021
00:46:02,099 --> 00:46:05,540
Mark Nottingham

1022
00:46:05,640 --> 00:46:08,359
yes

1023
00:46:08,640 --> 00:46:09,900
but

1024
00:46:09,900 --> 00:46:12,300
we didn't actually decide to do that

1025
00:46:12,300 --> 00:46:15,900
okay so in that conversation I maintain

1026
00:46:15,900 --> 00:46:18,839
my position excellent uh are you aware

1027
00:46:18,839 --> 00:46:20,700
of any discussions that has happened

1028
00:46:20,700 --> 00:46:25,399
around uh whether we should do that

1029
00:46:25,440 --> 00:46:28,380
no excellent well there we go that is

1030
00:46:28,380 --> 00:46:32,160
the status on deprecation header so

1031
00:46:32,160 --> 00:46:33,839
to avoid this happening again in

1032
00:46:33,839 --> 00:46:36,240
Yokohama yes we should probably have the

1033
00:46:36,240 --> 00:46:38,400
discussion now

1034
00:46:38,400 --> 00:46:40,500
let's have that discussion now

1035
00:46:40,500 --> 00:46:41,700
cool

1036
00:46:41,700 --> 00:46:45,060
awesome uh

1037
00:46:45,060 --> 00:46:47,819
one head or two headers do folks have an

1038
00:46:47,819 --> 00:46:51,180
opinion in so far as whether or not it

1039
00:46:51,180 --> 00:46:53,400
would be valuable for us to be able to

1040
00:46:53,400 --> 00:46:55,319
have a

1041
00:46:55,319 --> 00:46:58,319
let's say a dictionary style header for

1042
00:46:58,319 --> 00:47:01,140
life cycle to be able to maintain the

1043
00:47:01,140 --> 00:47:02,520
states of

1044
00:47:02,520 --> 00:47:05,880
an API over its life cycle or do we

1045
00:47:05,880 --> 00:47:08,099
stick with Sunset and have a new

1046
00:47:08,099 --> 00:47:09,839
deprecation header does anybody have any

1047
00:47:09,839 --> 00:47:10,980
opinions

1048
00:47:10,980 --> 00:47:14,180
that they would like to share

1049
00:47:24,260 --> 00:47:28,220
nobody has any opinions

1050
00:47:33,480 --> 00:47:36,900
Mark go ahead

1051
00:47:36,900 --> 00:47:39,619
I

1052
00:47:39,839 --> 00:47:41,359
I

1053
00:47:41,359 --> 00:47:43,740
think it's worth trying

1054
00:47:43,740 --> 00:47:47,220
I think the worst case we come up with a

1055
00:47:47,220 --> 00:47:49,020
life cycle header and people still use

1056
00:47:49,020 --> 00:47:52,440
the sunset header but my impression is

1057
00:47:52,440 --> 00:47:53,940
that the sunset header isn't terribly

1058
00:47:53,940 --> 00:47:55,859
widely deployed yet

1059
00:47:55,859 --> 00:47:57,780
and so

1060
00:47:57,780 --> 00:47:59,760
if we're going to do it don't get sooner

1061
00:47:59,760 --> 00:48:01,800
rather than later would be good so that

1062
00:48:01,800 --> 00:48:04,260
we can capture some of that adoption

1063
00:48:04,260 --> 00:48:07,200
got it before you go back Mark I have

1064
00:48:07,200 --> 00:48:09,839
one other question for you there was

1065
00:48:09,839 --> 00:48:12,839
some conversation with regards to the

1066
00:48:12,839 --> 00:48:15,720
date header and whether it would be a

1067
00:48:15,720 --> 00:48:18,000
human readable textable Type Thing

1068
00:48:18,000 --> 00:48:23,640
versus uh a Deepak based integer oh that

1069
00:48:23,640 --> 00:48:26,220
yes that yes

1070
00:48:26,220 --> 00:48:29,339
um so the

1071
00:48:29,339 --> 00:48:32,280
as I understand it the consensus in the

1072
00:48:32,280 --> 00:48:34,680
HTTP working group is that we will be

1073
00:48:34,680 --> 00:48:37,020
creating a structured date type

1074
00:48:37,020 --> 00:48:41,040
it will be inserted into a revision of

1075
00:48:41,040 --> 00:48:43,920
the structured Fields specification so

1076
00:48:43,920 --> 00:48:46,260
we're going to revise the entire RFC to

1077
00:48:46,260 --> 00:48:48,119
add it

1078
00:48:48,119 --> 00:48:51,960
um and it will its representation in

1079
00:48:51,960 --> 00:48:58,319
HTTP 1.1 text will be uh a an at symbol

1080
00:48:58,319 --> 00:49:00,420
followed by an integer

1081
00:49:00,420 --> 00:49:04,500
and that integer is a Delta from the

1082
00:49:04,500 --> 00:49:09,300
common Epoch January 1st 1970.

1083
00:49:09,300 --> 00:49:10,380
um

1084
00:49:10,380 --> 00:49:12,480
there was a discussion about other

1085
00:49:12,480 --> 00:49:14,819
textual representations

1086
00:49:14,819 --> 00:49:18,420
uh there were uh

1087
00:49:18,420 --> 00:49:20,880
personally I I think that a more human

1088
00:49:20,880 --> 00:49:22,680
readable one would be a little

1089
00:49:22,680 --> 00:49:24,900
friendlier but that's because I'm

1090
00:49:24,900 --> 00:49:26,160
very

1091
00:49:26,160 --> 00:49:28,200
bullish on binary structured headers

1092
00:49:28,200 --> 00:49:30,420
where that in the efficiency loss isn't

1093
00:49:30,420 --> 00:49:31,800
so so great

1094
00:49:31,800 --> 00:49:33,720
and it's not at all clear that binary

1095
00:49:33,720 --> 00:49:34,980
structure headers are actually going to

1096
00:49:34,980 --> 00:49:35,760
happen

1097
00:49:35,760 --> 00:49:39,599
sorry Fields sorry Julian Fields

1098
00:49:39,599 --> 00:49:40,980
um

1099
00:49:40,980 --> 00:49:45,000
so uh uh the the Feeling by far was that

1100
00:49:45,000 --> 00:49:47,819
by by using an integer it would improve

1101
00:49:47,819 --> 00:49:50,819
not only efficiency but also uh remove a

1102
00:49:50,819 --> 00:49:52,740
lot of chances for errors date parsing

1103
00:49:52,740 --> 00:49:54,660
is is nasty

1104
00:49:54,660 --> 00:49:58,500
and uh uh adds a lot of questions that

1105
00:49:58,500 --> 00:50:00,420
people thought weren't needed so it was

1106
00:50:00,420 --> 00:50:02,160
a fairly strong feeling that it should

1107
00:50:02,160 --> 00:50:04,980
be an integer and so that's I think what

1108
00:50:04,980 --> 00:50:07,380
it's going to be

1109
00:50:07,380 --> 00:50:09,839
now I shopped that around uh with the

1110
00:50:09,839 --> 00:50:12,240
folks discussing I think both the

1111
00:50:12,240 --> 00:50:14,099
deprecation I think that yeah the

1112
00:50:14,099 --> 00:50:17,579
deprecation header and uh

1113
00:50:17,579 --> 00:50:19,380
was a little surprised to hear that that

1114
00:50:19,380 --> 00:50:21,000
that seemed like it was okay if I

1115
00:50:21,000 --> 00:50:22,740
interpreted the responses correctly that

1116
00:50:22,740 --> 00:50:26,160
having one way to do it and having uh

1117
00:50:26,160 --> 00:50:28,140
that integer representation would be

1118
00:50:28,140 --> 00:50:29,400
adequate

1119
00:50:29,400 --> 00:50:31,859
could be wrong so is it a fair to say

1120
00:50:31,859 --> 00:50:32,819
that

1121
00:50:32,819 --> 00:50:36,060
if HTTP API folks in the future want to

1122
00:50:36,060 --> 00:50:38,099
use the date in a header that is

1123
00:50:38,099 --> 00:50:40,440
readable then structured Fields is not

1124
00:50:40,440 --> 00:50:42,859
an option

1125
00:50:43,220 --> 00:50:45,660
I that's

1126
00:50:45,660 --> 00:50:48,660
jumping to a number of conclusions

1127
00:50:48,660 --> 00:50:51,180
um first of all that it's not readable

1128
00:50:51,180 --> 00:50:52,740
as an integer I think that in some

1129
00:50:52,740 --> 00:50:54,300
contexts it is

1130
00:50:54,300 --> 00:50:57,059
I think that tooling will eventually

1131
00:50:57,059 --> 00:50:59,160
present that as a more readable in a

1132
00:50:59,160 --> 00:51:00,480
more readable form

1133
00:51:00,480 --> 00:51:02,160
I think that tooling will emerge

1134
00:51:02,160 --> 00:51:03,839
especially as we get more headers using

1135
00:51:03,839 --> 00:51:04,740
it

1136
00:51:04,740 --> 00:51:08,760
and uh if if you do want to have a

1137
00:51:08,760 --> 00:51:11,280
textual header that on the wire or the

1138
00:51:11,280 --> 00:51:13,920
bits on HTTP 1.1 mind to HP one point

1139
00:51:13,920 --> 00:51:16,260
I'm sorry 2.0 and three if you look at

1140
00:51:16,260 --> 00:51:17,160
the bits in the water you're going to

1141
00:51:17,160 --> 00:51:19,859
see gibberish no matter what you do uh

1142
00:51:19,859 --> 00:51:22,500
in in age to be 1.1 if you want to see

1143
00:51:22,500 --> 00:51:25,020
an actual you know human friendly Sunday

1144
00:51:25,020 --> 00:51:28,440
comma December 5th you know uh you could

1145
00:51:28,440 --> 00:51:31,440
put that in a string if you wanted to

1146
00:51:31,440 --> 00:51:33,720
it just wouldn't have a date type yes

1147
00:51:33,720 --> 00:51:35,700
and you'd have to specify in detail the

1148
00:51:35,700 --> 00:51:37,200
parsing and serialization of that date

1149
00:51:37,200 --> 00:51:39,900
as well as error handling

1150
00:51:39,900 --> 00:51:41,220
see that's why I asked the question

1151
00:51:41,220 --> 00:51:43,200
because I knew you would clarify it

1152
00:51:43,200 --> 00:51:47,099
thank you I'm here to serve

1153
00:51:47,099 --> 00:51:48,960
okay so that's where we are with the

1154
00:51:48,960 --> 00:51:50,520
application header

1155
00:51:50,520 --> 00:51:53,040
um I Heard it let's try it we shall talk

1156
00:51:53,040 --> 00:51:55,800
with the editors and uh

1157
00:51:55,800 --> 00:51:58,800
uh and get this easy PR done so that we

1158
00:51:58,800 --> 00:52:00,359
have a life cycle header and get

1159
00:52:00,359 --> 00:52:05,180
feedback on it if I yes

1160
00:52:09,180 --> 00:52:12,000
could you join the queue

1161
00:52:12,000 --> 00:52:13,980
Roberto please

1162
00:52:13,980 --> 00:52:17,940
yeah I I think that for life cycle the

1163
00:52:17,940 --> 00:52:20,160
point for me internally is that it

1164
00:52:20,160 --> 00:52:23,359
should be human readable so

1165
00:52:23,359 --> 00:52:30,440
if uh it will be if we decide not to use

1166
00:52:30,440 --> 00:52:33,359
to move to um

1167
00:52:33,359 --> 00:52:36,960
uh structure fields I think the value

1168
00:52:36,960 --> 00:52:38,780
should anyway

1169
00:52:38,780 --> 00:52:42,480
not uh should not use a non-humor

1170
00:52:42,480 --> 00:52:43,500
readable

1171
00:52:43,500 --> 00:52:46,339
serialization

1172
00:52:47,480 --> 00:52:51,480
Mark's gonna reply to that so um we had

1173
00:52:51,480 --> 00:52:52,920
a discussion about this and I thought

1174
00:52:52,920 --> 00:52:54,720
that that I didn't see any other

1175
00:52:54,720 --> 00:52:57,180
feedback to that effect that people felt

1176
00:52:57,180 --> 00:52:58,559
that an integer would be adequate but

1177
00:52:58,559 --> 00:53:00,240
we'll we'll have to have that discussion

1178
00:53:00,240 --> 00:53:03,059
when we look at the pr

1179
00:53:03,059 --> 00:53:05,880
um I I think their arguments to be had

1180
00:53:05,880 --> 00:53:07,200
but we need to come to some sort of

1181
00:53:07,200 --> 00:53:08,640
consensus on it

1182
00:53:08,640 --> 00:53:10,800
keeping in mind if if we do choose not

1183
00:53:10,800 --> 00:53:14,300
to use a structured field type that is

1184
00:53:14,300 --> 00:53:16,559
tailor-made for this use case we'd

1185
00:53:16,559 --> 00:53:17,700
better have a good explanation when we

1186
00:53:17,700 --> 00:53:20,700
go to the isg uh in last call about it

1187
00:53:20,700 --> 00:53:22,980
because whilst we might get consensus in

1188
00:53:22,980 --> 00:53:24,540
this room for one way or another the

1189
00:53:24,540 --> 00:53:26,220
larger consensus of the ITF may be

1190
00:53:26,220 --> 00:53:27,720
different and we need to be able to

1191
00:53:27,720 --> 00:53:30,000
defend that I got up originally just to

1192
00:53:30,000 --> 00:53:31,380
say could you please assign that issue

1193
00:53:31,380 --> 00:53:33,059
to me so that I can remember to do the

1194
00:53:33,059 --> 00:53:34,140
pr

1195
00:53:34,140 --> 00:53:36,180
and if you don't see a PR for me in

1196
00:53:36,180 --> 00:53:38,220
about two weeks can you ping me because

1197
00:53:38,220 --> 00:53:40,380
my mind is going yes

1198
00:53:40,380 --> 00:53:44,000
I can definitely do that

1199
00:53:53,640 --> 00:53:57,000
and and just to remember to just to you

1200
00:53:57,000 --> 00:53:58,440
know reiterate what Mark said I think

1201
00:53:58,440 --> 00:54:01,559
that the important thing there is

1202
00:54:01,559 --> 00:54:04,740
um we are moving into a world where you

1203
00:54:04,740 --> 00:54:07,099
don't look at HP headers

1204
00:54:07,099 --> 00:54:09,780
uh without using some kind of tooling

1205
00:54:09,780 --> 00:54:13,680
that does presentation and it is it with

1206
00:54:13,680 --> 00:54:16,440
the value of structured headers and the

1207
00:54:16,440 --> 00:54:19,079
at symbol indicating this is a date it

1208
00:54:19,079 --> 00:54:20,819
can definitely present those headers in

1209
00:54:20,819 --> 00:54:22,859
a human readable format so

1210
00:54:22,859 --> 00:54:25,800
we our our world is Shifting underneath

1211
00:54:25,800 --> 00:54:28,920
us uh in this space

1212
00:54:28,920 --> 00:54:33,559
okay moving on to item potency

1213
00:54:33,559 --> 00:54:39,900
uh we have one minor uh issue that is

1214
00:54:39,900 --> 00:54:42,660
left here uh there's been a number of

1215
00:54:42,660 --> 00:54:44,400
issues that have been closed just

1216
00:54:44,400 --> 00:54:47,940
recently uh and this particular request

1217
00:54:47,940 --> 00:54:50,700
I believe uh was just

1218
00:54:50,700 --> 00:54:51,720
um

1219
00:54:51,720 --> 00:54:54,540
resolved yesterday and so this should be

1220
00:54:54,540 --> 00:54:56,460
closed up which will close all of our

1221
00:54:56,460 --> 00:55:01,260
issues on uh the item potency header

1222
00:55:01,260 --> 00:55:03,780
um does anybody have any feedback have

1223
00:55:03,780 --> 00:55:05,520
had a chance to review the adminton

1224
00:55:05,520 --> 00:55:07,319
theater and want to share any comments

1225
00:55:07,319 --> 00:55:10,400
with editors

1226
00:55:13,579 --> 00:55:16,079
just as a sense of the room is there

1227
00:55:16,079 --> 00:55:17,700
other folks in the room who feel that

1228
00:55:17,700 --> 00:55:19,920
they would be interested in using this

1229
00:55:19,920 --> 00:55:21,960
uh ad impotency header or see it as a

1230
00:55:21,960 --> 00:55:24,500
valuable thing

1231
00:55:27,119 --> 00:55:30,720
I've got a few kind of yeah maybe sort

1232
00:55:30,720 --> 00:55:32,940
of

1233
00:55:32,940 --> 00:55:36,200
won't do any harm

1234
00:55:37,140 --> 00:55:39,420
I think we have a

1235
00:55:39,420 --> 00:55:42,559
person coming to the mic

1236
00:55:45,180 --> 00:55:46,440
uh

1237
00:55:46,440 --> 00:55:48,480
Mouse collider

1238
00:55:48,480 --> 00:55:51,180
um with the HTTP working group we're

1239
00:55:51,180 --> 00:55:53,700
working on resumable uploads and we're

1240
00:55:53,700 --> 00:55:55,800
thinking about maybe using the item

1241
00:55:55,800 --> 00:55:57,960
potency key here there in there it's

1242
00:55:57,960 --> 00:56:00,900
still like only a proposal and there

1243
00:56:00,900 --> 00:56:02,460
hasn't been a lot of discussion if we

1244
00:56:02,460 --> 00:56:04,800
actually end up using it but it looked

1245
00:56:04,800 --> 00:56:06,780
really interesting for the problem we're

1246
00:56:06,780 --> 00:56:08,640
trying to solve so

1247
00:56:08,640 --> 00:56:10,319
yeah we're definitely

1248
00:56:10,319 --> 00:56:12,780
like to see where this is going

1249
00:56:12,780 --> 00:56:16,760
excellent it's great to hear

1250
00:56:16,859 --> 00:56:19,460
thank you

1251
00:56:21,000 --> 00:56:23,520
which brings us to the link template

1252
00:56:23,520 --> 00:56:24,720
header

1253
00:56:24,720 --> 00:56:26,400
um I have not seen a whole lot of

1254
00:56:26,400 --> 00:56:29,300
feedback on this draft from Mark which

1255
00:56:29,300 --> 00:56:31,920
means either it is wonderful or nobody

1256
00:56:31,920 --> 00:56:33,900
cares

1257
00:56:33,900 --> 00:56:34,859
um

1258
00:56:34,859 --> 00:56:39,059
there is uh one I see it has been moved

1259
00:56:39,059 --> 00:56:40,200
to structured Fields that's great

1260
00:56:40,200 --> 00:56:42,059
there's a PR I added a tiny little

1261
00:56:42,059 --> 00:56:44,099
comment on there Mark

1262
00:56:44,099 --> 00:56:46,680
um and so then the only open issue is

1263
00:56:46,680 --> 00:56:50,000
this anchor parameter in URI templates

1264
00:56:50,000 --> 00:56:52,920
which is an interesting problem that we

1265
00:56:52,920 --> 00:56:54,660
have run into a number of times in the

1266
00:56:54,660 --> 00:56:57,540
past you have thoughts

1267
00:56:57,540 --> 00:57:00,480
um I I think I'm probably gonna do this

1268
00:57:00,480 --> 00:57:02,579
and unless it doesn't you know there's

1269
00:57:02,579 --> 00:57:04,920
some unforeseen problem I just I frankly

1270
00:57:04,920 --> 00:57:06,599
haven't gotten to it I've been a little

1271
00:57:06,599 --> 00:57:09,119
busy with other stuff but yeah I think

1272
00:57:09,119 --> 00:57:11,160
once these two things are done we can go

1273
00:57:11,160 --> 00:57:13,020
ahead and do a working group last call I

1274
00:57:13,020 --> 00:57:14,220
still from time to time hear people

1275
00:57:14,220 --> 00:57:15,780
saying yes I'd really like to use that

1276
00:57:15,780 --> 00:57:17,160
so

1277
00:57:17,160 --> 00:57:18,900
we'll see

1278
00:57:18,900 --> 00:57:21,559
excellent

1279
00:57:22,020 --> 00:57:24,900
we're just ripping along here

1280
00:57:24,900 --> 00:57:27,480
uh so we've already talked about media

1281
00:57:27,480 --> 00:57:30,359
types from the media type yaml uh both

1282
00:57:30,359 --> 00:57:35,640
the yaml RFC and the restful media types

1283
00:57:35,640 --> 00:57:38,099
for Jason scheme an open API are two

1284
00:57:38,099 --> 00:57:39,780
different documents in the same repo so

1285
00:57:39,780 --> 00:57:41,940
they're kind of mixed we are still

1286
00:57:41,940 --> 00:57:43,260
waiting on a whole bunch of feedback

1287
00:57:43,260 --> 00:57:45,960
from the Jason schema folks uh fragment

1288
00:57:45,960 --> 00:57:48,660
identifiers get a little funky uh and

1289
00:57:48,660 --> 00:57:50,160
the Jason schema world so they're

1290
00:57:50,160 --> 00:57:53,460
working to resolve those and

1291
00:57:53,460 --> 00:57:55,859
um there's a need for security

1292
00:57:55,859 --> 00:57:58,619
considerations for the open API spec

1293
00:57:58,619 --> 00:58:01,800
which we have had conversations uh in

1294
00:58:01,800 --> 00:58:04,260
the open API initiative about this and

1295
00:58:04,260 --> 00:58:06,960
we will be writing those up and they'll

1296
00:58:06,960 --> 00:58:08,640
largely be

1297
00:58:08,640 --> 00:58:11,599
um what the Jason schema says Plus

1298
00:58:11,599 --> 00:58:15,900
uh so uh expect to see

1299
00:58:15,900 --> 00:58:18,420
hopefully we'll get these resolved uh in

1300
00:58:18,420 --> 00:58:20,460
a few months but we're kind of locked on

1301
00:58:20,460 --> 00:58:22,319
the Jason schema Folks at this point in

1302
00:58:22,319 --> 00:58:24,558
time

1303
00:58:25,160 --> 00:58:29,339
uh right which brings us to uh actually

1304
00:58:29,339 --> 00:58:31,140
before we do rate limit headers because

1305
00:58:31,140 --> 00:58:33,480
I'm feeling that will have us a bit of a

1306
00:58:33,480 --> 00:58:39,299
conversation uh 7807 uh is going through

1307
00:58:39,299 --> 00:58:43,140
area review is that the right term

1308
00:58:43,140 --> 00:58:46,260
um and I see uh there was a whole load

1309
00:58:46,260 --> 00:58:49,020
of issues that were opened up yesterday

1310
00:58:49,020 --> 00:58:50,700
um hence why I don't have any status on

1311
00:58:50,700 --> 00:58:52,260
these things

1312
00:58:52,260 --> 00:58:54,240
um

1313
00:58:54,240 --> 00:58:56,339
Mark you have more things that have been

1314
00:58:56,339 --> 00:58:58,920
added to your plate

1315
00:58:58,920 --> 00:59:01,079
um so but

1316
00:59:01,079 --> 00:59:03,059
many of these issues I think that have

1317
00:59:03,059 --> 00:59:05,040
been brought up have previously been

1318
00:59:05,040 --> 00:59:08,339
discussed so uh

1319
00:59:08,339 --> 00:59:10,200
hopefully we'll be able to resolve these

1320
00:59:10,200 --> 00:59:12,799
I didn't see any in here that were

1321
00:59:12,799 --> 00:59:14,480
tremendously

1322
00:59:14,480 --> 00:59:17,280
controversial more than they have been

1323
00:59:17,280 --> 00:59:18,660
in the past

1324
00:59:18,660 --> 00:59:20,819
and we've solved them in the past

1325
00:59:20,819 --> 00:59:22,380
okay which brings us to rate limit

1326
00:59:22,380 --> 00:59:25,500
headers and uh

1327
00:59:25,500 --> 00:59:30,059
if that this is possibly one of the

1328
00:59:30,059 --> 00:59:32,280
larger GitHub issues that I've seen in a

1329
00:59:32,280 --> 00:59:36,119
while uh and it boils down to structured

1330
00:59:36,119 --> 00:59:38,579
headers at the moment

1331
00:59:38,579 --> 00:59:39,900
um

1332
00:59:39,900 --> 00:59:44,160
the rate limit headers are defined as

1333
00:59:44,160 --> 00:59:46,260
separate fields

1334
00:59:46,260 --> 00:59:49,760
uh with a separate field for rate limit

1335
00:59:49,760 --> 00:59:52,740
remaining rate limit reset and rate

1336
00:59:52,740 --> 00:59:54,000
limit

1337
00:59:54,000 --> 00:59:57,359
limit and there is a proposal or there

1338
00:59:57,359 --> 00:59:59,160
is a conversation that's happening about

1339
00:59:59,160 --> 01:00:02,099
can we move this into a single header

1340
01:00:02,099 --> 01:00:06,680
but there is a disagreement and

1341
01:00:06,680 --> 01:00:09,299
there has been feedback from the

1342
01:00:09,299 --> 01:00:11,700
community that they like really simple

1343
01:00:11,700 --> 01:00:15,119
headers that are just scalar values

1344
01:00:15,119 --> 01:00:17,460
but there is also

1345
01:00:17,460 --> 01:00:20,339
the future where of structured headers

1346
01:00:20,339 --> 01:00:24,480
and uh there is a

1347
01:00:24,480 --> 01:00:26,640
there's also the value of them being in

1348
01:00:26,640 --> 01:00:28,079
a single header as they are related

1349
01:00:28,079 --> 01:00:30,420
values and so

1350
01:00:30,420 --> 01:00:31,020
um

1351
01:00:31,020 --> 01:00:33,720
there is not consensus

1352
01:00:33,720 --> 01:00:35,940
uh I don't know I'm trying to find a

1353
01:00:35,940 --> 01:00:37,740
particular issue that

1354
01:00:37,740 --> 01:00:41,180
summarizes that best

1355
01:00:43,619 --> 01:00:47,220
here was an so this is how it is

1356
01:00:47,220 --> 01:00:49,619
currently used in the wild

1357
01:00:49,619 --> 01:00:51,480
with rate limit limit rate limit

1358
01:00:51,480 --> 01:00:54,480
remaining rate limit reset

1359
01:00:54,480 --> 01:00:57,599
um and there's a desire from some folks

1360
01:00:57,599 --> 01:00:59,760
to merge it into a single header

1361
01:00:59,760 --> 01:01:02,220
we're using structured Fields

1362
01:01:02,220 --> 01:01:03,540
um

1363
01:01:03,540 --> 01:01:06,599
Roberta you have opinions I know do you

1364
01:01:06,599 --> 01:01:09,540
want to um Make Your Case

1365
01:01:09,540 --> 01:01:13,440
yes the problem here is that the

1366
01:01:13,440 --> 01:01:18,000
industry works with three fields in a

1367
01:01:18,000 --> 01:01:21,780
previous release with of this draft we

1368
01:01:21,780 --> 01:01:25,380
tried to conflate to to combine uh some

1369
01:01:25,380 --> 01:01:28,339
of the provided information in one field

1370
01:01:28,339 --> 01:01:33,420
and folks ask to roll back this kind of

1371
01:01:33,420 --> 01:01:36,740
change and provide different information

1372
01:01:36,740 --> 01:01:41,460
in different fields one of the issue in

1373
01:01:41,460 --> 01:01:44,240
general is that

1374
01:01:44,240 --> 01:01:48,920
intermediaries API gateways and proxies

1375
01:01:48,920 --> 01:01:54,839
do not have a natively the ability to

1376
01:01:54,839 --> 01:01:59,819
process structured content and since

1377
01:01:59,819 --> 01:02:03,180
many of these kind of mangling is done

1378
01:02:03,180 --> 01:02:09,779
by configuration and not by development

1379
01:02:10,079 --> 01:02:12,740
the current tooling

1380
01:02:12,740 --> 01:02:18,420
makes uh very difficult to work with

1381
01:02:18,420 --> 01:02:23,000
information that is combined in

1382
01:02:23,000 --> 01:02:25,920
in a single field

1383
01:02:25,920 --> 01:02:29,520
we have even one case for example it is

1384
01:02:29,520 --> 01:02:32,819
the Kong API Gateway where they adopted

1385
01:02:32,819 --> 01:02:37,880
our internet draft but still

1386
01:02:37,880 --> 01:02:41,760
provide the information we combine in in

1387
01:02:41,760 --> 01:02:43,619
the policy header

1388
01:02:43,619 --> 01:02:47,119
in different fields because

1389
01:02:47,119 --> 01:02:49,200
they prefer

1390
01:02:49,200 --> 01:02:50,160
for

1391
01:02:50,160 --> 01:02:52,200
[Music]

1392
01:02:52,200 --> 01:02:54,599
this kind of information

1393
01:02:54,599 --> 01:02:58,740
to be split and managed atomically

1394
01:02:58,740 --> 01:03:02,339
because it's how the the current tooling

1395
01:03:02,339 --> 01:03:05,339
it's what the current tooling support

1396
01:03:05,339 --> 01:03:10,940
so the risk we see in combining

1397
01:03:10,940 --> 01:03:15,359
Fields free fields in just one field

1398
01:03:15,359 --> 01:03:18,619
is that we will release a specification

1399
01:03:18,619 --> 01:03:22,400
that has that is significantly different

1400
01:03:22,400 --> 01:03:26,660
from the industry practice and that

1401
01:03:26,660 --> 01:03:31,220
nobody will use since

1402
01:03:31,220 --> 01:03:35,780
it is not what the current tools support

1403
01:03:35,780 --> 01:03:39,960
this is the the the main the main issue

1404
01:03:39,960 --> 01:03:43,520
we want to standardize we don't want to

1405
01:03:43,520 --> 01:03:48,839
uh make the the 14 standards out of the

1406
01:03:48,839 --> 01:03:51,960
13 that exist before

1407
01:03:51,960 --> 01:03:54,140
so and this is

1408
01:03:54,140 --> 01:03:58,200
the reason uh we created this

1409
01:03:58,200 --> 01:04:00,000
specification

1410
01:04:00,000 --> 01:04:03,619
thank you Roberto uh Chris

1411
01:04:04,380 --> 01:04:07,260
so you say that

1412
01:04:07,260 --> 01:04:09,059
um intermediaries don't have the ability

1413
01:04:09,059 --> 01:04:13,380
to parse uh structured content uh but

1414
01:04:13,380 --> 01:04:15,480
that's what headers are I mean headers

1415
01:04:15,480 --> 01:04:17,160
are structured content they're keys and

1416
01:04:17,160 --> 01:04:19,079
their values and you split them up and

1417
01:04:19,079 --> 01:04:21,839
you parse them and so an intermediary

1418
01:04:21,839 --> 01:04:24,020
that has tooling that can parse

1419
01:04:24,020 --> 01:04:27,119
structured content uh we're dispelling

1420
01:04:27,119 --> 01:04:28,619
the structured content in a different

1421
01:04:28,619 --> 01:04:29,760
way

1422
01:04:29,760 --> 01:04:33,119
and so I think

1423
01:04:33,119 --> 01:04:35,579
I I'm sympathetic to the point that

1424
01:04:35,579 --> 01:04:38,339
intermediaries may not currently have

1425
01:04:38,339 --> 01:04:41,640
exactly the parsers that we want them to

1426
01:04:41,640 --> 01:04:43,140
have

1427
01:04:43,140 --> 01:04:46,380
um but I don't know that I'm persuaded

1428
01:04:46,380 --> 01:04:51,119
entirely that uh they won't and that if

1429
01:04:51,119 --> 01:04:54,119
we spell it this way uh

1430
01:04:54,119 --> 01:04:55,559
they're just going to throw up their

1431
01:04:55,559 --> 01:04:58,260
hands and say well that uses semicolon

1432
01:04:58,260 --> 01:05:00,119
instead of equals and I I just don't

1433
01:05:00,119 --> 01:05:02,839
know what to do with that

1434
01:05:04,500 --> 01:05:07,099
mark

1435
01:05:07,680 --> 01:05:10,740
uh yeah Mark Nottingham uh with all

1436
01:05:10,740 --> 01:05:13,559
respect I think Roberto is focusing far

1437
01:05:13,559 --> 01:05:15,660
too much on the

1438
01:05:15,660 --> 01:05:18,420
very short-term uh deployment of the

1439
01:05:18,420 --> 01:05:20,900
specification and and the path to that

1440
01:05:20,900 --> 01:05:23,880
rfcs are supposed to be relatively

1441
01:05:23,880 --> 01:05:25,859
long-lived documents we're supposed to

1442
01:05:25,859 --> 01:05:27,599
be creating infrastructure that lasts a

1443
01:05:27,599 --> 01:05:30,359
long time and and and if we focus too

1444
01:05:30,359 --> 01:05:32,460
much on on the the exact current

1445
01:05:32,460 --> 01:05:36,059
deployment patterns down to syntax we're

1446
01:05:36,059 --> 01:05:38,460
going to be so constrained uh that we're

1447
01:05:38,460 --> 01:05:40,079
not going to be able to function I I I

1448
01:05:40,079 --> 01:05:41,940
just I I think it's just a different

1449
01:05:41,940 --> 01:05:45,480
Viewpoint I think uh for for internet

1450
01:05:45,480 --> 01:05:47,160
standards we need to be focused on

1451
01:05:47,160 --> 01:05:48,839
what's the right long-term pattern to

1452
01:05:48,839 --> 01:05:50,400
have here

1453
01:05:50,400 --> 01:05:52,140
um and then you know I look at this I

1454
01:05:52,140 --> 01:05:53,819
look at the what's on the screen and I

1455
01:05:53,819 --> 01:05:55,200
think well if we'd taken the approach

1456
01:05:55,200 --> 01:05:56,940
that Roberto was talking about for the

1457
01:05:56,940 --> 01:05:59,520
cache control header we would have cache

1458
01:05:59,520 --> 01:06:03,119
control max age colon 30. cash control

1459
01:06:03,119 --> 01:06:05,220
private cash control you know and and it

1460
01:06:05,220 --> 01:06:07,920
would lead to an absurd design just just

1461
01:06:07,920 --> 01:06:10,260
putting aside the issue of deployment

1462
01:06:10,260 --> 01:06:11,640
ease of deployment putting aside the

1463
01:06:11,640 --> 01:06:13,619
issue of structured fields and whether

1464
01:06:13,619 --> 01:06:15,480
you know we should use them in in what

1465
01:06:15,480 --> 01:06:17,240
fashion we should use them

1466
01:06:17,240 --> 01:06:20,339
as as just as header Design This just is

1467
01:06:20,339 --> 01:06:22,799
really you know you're spreading the

1468
01:06:22,799 --> 01:06:24,420
smearingness information across multiple

1469
01:06:24,420 --> 01:06:26,400
headers you're having the chance for it

1470
01:06:26,400 --> 01:06:29,700
to be uh desynchronized it doesn't make

1471
01:06:29,700 --> 01:06:32,460
any sense to me now if if there are

1472
01:06:32,460 --> 01:06:34,920
legitimate use cases where you have

1473
01:06:34,920 --> 01:06:36,780
multiple parties touching these fields

1474
01:06:36,780 --> 01:06:38,579
and they're and and so that there are

1475
01:06:38,579 --> 01:06:40,680
slightly different semantics to them by

1476
01:06:40,680 --> 01:06:42,000
all means split them into separate

1477
01:06:42,000 --> 01:06:43,440
headers but let's have a discussion

1478
01:06:43,440 --> 01:06:44,420
about

1479
01:06:44,420 --> 01:06:46,680
semantically what makes sense to put in

1480
01:06:46,680 --> 01:06:48,240
the same header versus different headers

1481
01:06:48,240 --> 01:06:49,859
rather than just saying let's put every

1482
01:06:49,859 --> 01:06:51,599
discrete value in a separate header

1483
01:06:51,599 --> 01:06:55,440
because that's it's not good design

1484
01:06:55,440 --> 01:06:59,099
so so Roberto in this issue you added a

1485
01:06:59,099 --> 01:07:02,940
a comment here where you talked about a

1486
01:07:02,940 --> 01:07:05,460
Gateway that is trying to modify a

1487
01:07:05,460 --> 01:07:07,200
single field

1488
01:07:07,200 --> 01:07:08,940
um could you just talk more about this

1489
01:07:08,940 --> 01:07:11,280
scenario where there's an origin server

1490
01:07:11,280 --> 01:07:13,500
that defines uh some kind of right limit

1491
01:07:13,500 --> 01:07:16,680
header and then a gateway then wants to

1492
01:07:16,680 --> 01:07:18,539
modify that rate limit header before

1493
01:07:18,539 --> 01:07:20,700
returning to the client what is what is

1494
01:07:20,700 --> 01:07:23,220
the use case for that

1495
01:07:23,220 --> 01:07:25,740
for example if you haven't

1496
01:07:25,740 --> 01:07:29,099
um if you have an application that is

1497
01:07:29,099 --> 01:07:31,200
served through

1498
01:07:31,200 --> 01:07:33,539
together as one external and one

1499
01:07:33,539 --> 01:07:37,079
internal maybe those two getaways want

1500
01:07:37,079 --> 01:07:38,839
to adjust

1501
01:07:38,839 --> 01:07:41,720
the published direct limit

1502
01:07:41,720 --> 01:07:44,640
depending on the client and assign

1503
01:07:44,640 --> 01:07:47,940
different scales different proportion of

1504
01:07:47,940 --> 01:07:50,940
the complete quota of a single

1505
01:07:50,940 --> 01:07:53,579
application one for external traffic and

1506
01:07:53,579 --> 01:07:56,539
one from kernel but

1507
01:07:56,539 --> 01:08:00,599
again the point is that this kind of

1508
01:08:00,599 --> 01:08:04,380
field is are actually used

1509
01:08:04,380 --> 01:08:07,640
in in industry and infrastructures

1510
01:08:07,640 --> 01:08:12,299
in many possible ways that we don't even

1511
01:08:12,299 --> 01:08:13,640
know

1512
01:08:13,640 --> 01:08:15,199
and

1513
01:08:15,199 --> 01:08:19,380
my concern is that if we

1514
01:08:19,380 --> 01:08:24,660
um make some distance from uh if we

1515
01:08:24,660 --> 01:08:27,120
diverge from how something that is

1516
01:08:27,120 --> 01:08:29,479
actually used

1517
01:08:29,479 --> 01:08:33,660
in different ways that we may know or we

1518
01:08:33,660 --> 01:08:34,819
may not know

1519
01:08:34,819 --> 01:08:37,979
uh and that is already present in the

1520
01:08:37,979 --> 01:08:39,920
industry

1521
01:08:39,920 --> 01:08:43,439
we take the risk of creating a

1522
01:08:43,439 --> 01:08:46,198
specification that is not adopted

1523
01:08:46,198 --> 01:08:49,439
because currently people already use

1524
01:08:49,439 --> 01:08:55,439
custom weight limit fields and

1525
01:08:55,439 --> 01:08:58,620
we should provide some selling points

1526
01:08:58,620 --> 01:09:02,219
for them to adopt this specification

1527
01:09:02,219 --> 01:09:04,560
which is the selling point

1528
01:09:04,560 --> 01:09:07,679
if they don't change if they don't need

1529
01:09:07,679 --> 01:09:10,679
to change anything they are sold and

1530
01:09:10,679 --> 01:09:13,319
actually they have been already sold to

1531
01:09:13,319 --> 01:09:16,020
different gateways because they just had

1532
01:09:16,020 --> 01:09:17,160
to change

1533
01:09:17,160 --> 01:09:20,939
the field name but if we need to change

1534
01:09:20,939 --> 01:09:23,600
if we ask them to change the structure

1535
01:09:23,600 --> 01:09:28,738
we don't know if they buy them so we can

1536
01:09:28,738 --> 01:09:31,020
take the risk of providing a

1537
01:09:31,020 --> 01:09:33,738
specification that is

1538
01:09:33,738 --> 01:09:39,600
not adopt not adopted uh

1539
01:09:39,600 --> 01:09:43,738
easily but I really would like to have

1540
01:09:43,738 --> 01:09:46,698
some feedback from implementer

1541
01:09:46,698 --> 01:09:51,000
that say okay for me it's um it doesn't

1542
01:09:51,000 --> 01:09:55,020
take me any effort to change the new

1543
01:09:55,020 --> 01:09:56,699
structure field

1544
01:09:56,699 --> 01:09:59,880
and I will do it because the problem is

1545
01:09:59,880 --> 01:10:02,100
that we have an implemented

1546
01:10:02,100 --> 01:10:07,260
will they follow us if we change the

1547
01:10:07,260 --> 01:10:09,960
syntax these I don't know

1548
01:10:09,960 --> 01:10:12,739
for current exchanges

1549
01:10:12,739 --> 01:10:17,400
my feedback was generally that they are

1550
01:10:17,400 --> 01:10:20,300
not interested to change

1551
01:10:20,300 --> 01:10:22,800
significantly they're actually deployed

1552
01:10:22,800 --> 01:10:25,739
code but if you have some feedback from

1553
01:10:25,739 --> 01:10:28,739
implementers that say okay I will follow

1554
01:10:28,739 --> 01:10:31,920
you in structure fields and they do it

1555
01:10:31,920 --> 01:10:36,719
for me it will be okay but we need I I

1556
01:10:36,719 --> 01:10:40,219
would really see this feedback okay

1557
01:10:40,219 --> 01:10:44,179
Chris or do you want to go yeah I so

1558
01:10:44,179 --> 01:10:47,340
hi Rich Saul's no hats

1559
01:10:47,340 --> 01:10:49,320
um right now the industry is apparently

1560
01:10:49,320 --> 01:10:52,199
using x dash rate limit they're going to

1561
01:10:52,199 --> 01:10:54,420
have to make a change anyway you're

1562
01:10:54,420 --> 01:10:57,780
argument is or your concern is two

1563
01:10:57,780 --> 01:10:59,340
characters is a lot easier than

1564
01:10:59,340 --> 01:11:01,500
supporting structured fields

1565
01:11:01,500 --> 01:11:04,679
but structured fields are coming anyway

1566
01:11:04,679 --> 01:11:06,080
um there's nothing that prevents

1567
01:11:06,080 --> 01:11:09,060
existing applications from using x dash

1568
01:11:09,060 --> 01:11:12,000
rate limit a b c d e

1569
01:11:12,000 --> 01:11:14,580
um the future direction of HTTP is

1570
01:11:14,580 --> 01:11:18,840
clearly structured Fields I'm hoping

1571
01:11:18,840 --> 01:11:21,780
more than hoping not with my head on I

1572
01:11:21,780 --> 01:11:23,760
think the working group should adopt

1573
01:11:23,760 --> 01:11:25,980
something that is headed toward the

1574
01:11:25,980 --> 01:11:28,320
future direction of the HTTP

1575
01:11:28,320 --> 01:11:30,060
specification

1576
01:11:30,060 --> 01:11:31,739
we'll have to take a working group

1577
01:11:31,739 --> 01:11:34,260
consensus call and of course Roberto

1578
01:11:34,260 --> 01:11:36,060
thanks for emphasizing that you will do

1579
01:11:36,060 --> 01:11:38,640
what the working group suggests

1580
01:11:38,640 --> 01:11:41,400
because that's your job and our job is

1581
01:11:41,400 --> 01:11:42,600
to figure out what the working group

1582
01:11:42,600 --> 01:11:46,260
suggests and wants but clearly the

1583
01:11:46,260 --> 01:11:49,500
advice we've gotten from HTTP is

1584
01:11:49,500 --> 01:11:51,860
structured fields are the future

1585
01:11:51,860 --> 01:11:55,140
so uh with that

1586
01:11:55,140 --> 01:11:57,360
Chris Chris

1587
01:11:57,360 --> 01:11:59,940
I think I may be reiterating points

1588
01:11:59,940 --> 01:12:02,940
everyone else is making but we need to

1589
01:12:02,940 --> 01:12:04,800
decide whether what we're doing is

1590
01:12:04,800 --> 01:12:08,000
documenting Uh current practice

1591
01:12:08,000 --> 01:12:11,699
or designing something for the future

1592
01:12:11,699 --> 01:12:13,500
and we should be really specific about

1593
01:12:13,500 --> 01:12:14,880
what we're doing and why we're doing

1594
01:12:14,880 --> 01:12:16,440
that

1595
01:12:16,440 --> 01:12:18,919
mark

1596
01:12:24,719 --> 01:12:27,500
foreign

1597
01:12:32,179 --> 01:12:34,500
we can do that

1598
01:12:34,500 --> 01:12:37,820
I will let you lead that

1599
01:12:38,520 --> 01:12:39,900
okay

1600
01:12:39,900 --> 01:12:43,199
we have discussed this a couple of times

1601
01:12:43,199 --> 01:12:45,000
I think everybody

1602
01:12:45,000 --> 01:12:47,880
has made has had a chance to express

1603
01:12:47,880 --> 01:12:49,679
their viewpoints

1604
01:12:49,679 --> 01:12:51,360
so

1605
01:12:51,360 --> 01:12:52,140
um

1606
01:12:52,140 --> 01:12:54,000
I don't know do we do the poll tool or

1607
01:12:54,000 --> 01:12:55,860
the hum tool

1608
01:12:55,860 --> 01:12:58,640
there's a difference

1609
01:12:58,640 --> 01:13:01,560
yeah okay we're gonna home in the room

1610
01:13:01,560 --> 01:13:04,140
and we will take it to the mailing list

1611
01:13:04,140 --> 01:13:06,780
just because I miss not humming after

1612
01:13:06,780 --> 01:13:09,840
two and a half years so the questions

1613
01:13:09,840 --> 01:13:12,239
are the question is there are three

1614
01:13:12,239 --> 01:13:13,260
parts

1615
01:13:13,260 --> 01:13:15,360
do you prefer

1616
01:13:15,360 --> 01:13:19,440
simple do you prefer three Fields with a

1617
01:13:19,440 --> 01:13:20,760
numeric value

1618
01:13:20,760 --> 01:13:23,580
or structured fields in a com compound

1619
01:13:23,580 --> 01:13:27,600
header field whatever or do not know yet

1620
01:13:27,600 --> 01:13:31,199
so first please hum if you are in favor

1621
01:13:31,199 --> 01:13:34,460
of three headers

1622
01:13:35,820 --> 01:13:38,940
please hum if you are in favor of a

1623
01:13:38,940 --> 01:13:43,099
structured header field Style

1624
01:13:44,699 --> 01:13:48,840
thank you please hum if you are not sure

1625
01:13:48,840 --> 01:13:51,199
yet

1626
01:13:52,800 --> 01:13:56,940
okay so we had very strong consensus to

1627
01:13:56,940 --> 01:13:59,460
go with header Fields some are still not

1628
01:13:59,460 --> 01:14:02,100
sure structured Fields some are still

1629
01:14:02,100 --> 01:14:03,840
not sure and we will take that to the

1630
01:14:03,840 --> 01:14:06,420
list to confirm

1631
01:14:06,420 --> 01:14:09,199
thank you

1632
01:14:10,020 --> 01:14:12,600
thank you very much everybody

1633
01:14:12,600 --> 01:14:15,500
um okay

1634
01:14:19,440 --> 01:14:21,840
are we saying that the decision is that

1635
01:14:21,840 --> 01:14:23,699
to go with structure field or are we

1636
01:14:23,699 --> 01:14:25,679
going to discuss still because some

1637
01:14:25,679 --> 01:14:28,679
people are not yeah clearance so

1638
01:14:28,679 --> 01:14:29,640
the

1639
01:14:29,640 --> 01:14:32,640
the way we'll phrase the question is in

1640
01:14:32,640 --> 01:14:35,100
the room we had strong consensus does

1641
01:14:35,100 --> 01:14:37,739
anyone have concerns or questions about

1642
01:14:37,739 --> 01:14:39,239
that

1643
01:14:39,239 --> 01:14:41,780
okay

1644
01:14:44,600 --> 01:14:47,100
and could I suggest that that because

1645
01:14:47,100 --> 01:14:48,239
there are some people who are uncertain

1646
01:14:48,239 --> 01:14:50,040
you know

1647
01:14:50,040 --> 01:14:52,080
let's go ahead and decide the question

1648
01:14:52,080 --> 01:14:55,080
get to PR and get it in you know and if

1649
01:14:55,080 --> 01:14:57,000
people who were uncertain before have

1650
01:14:57,000 --> 01:14:59,580
you know new information to bring we can

1651
01:14:59,580 --> 01:15:00,600
always consider new information

1652
01:15:00,600 --> 01:15:03,000
afterwards but let's see it in action

1653
01:15:03,000 --> 01:15:06,500
let's get it going and yeah

1654
01:15:09,480 --> 01:15:13,320
okay I I think that is the uh that was

1655
01:15:13,320 --> 01:15:15,420
really the main issue that was holding

1656
01:15:15,420 --> 01:15:18,780
up the the rate limit header work

1657
01:15:18,780 --> 01:15:20,880
um

1658
01:15:20,880 --> 01:15:22,920
if we can get an answer to that we can

1659
01:15:22,920 --> 01:15:25,739
definitely move forward with it and

1660
01:15:25,739 --> 01:15:28,560
that brings us to the end of the working

1661
01:15:28,560 --> 01:15:31,199
group documents that are

1662
01:15:31,199 --> 01:15:33,800
yes Rebecca I apologize

1663
01:15:33,800 --> 01:15:37,920
no no problem uh I it would be great to

1664
01:15:37,920 --> 01:15:41,580
have some help with the by um the other

1665
01:15:41,580 --> 01:15:46,940
folks to reach out implementers

1666
01:15:46,940 --> 01:15:54,080
in ensuring that the structure fields

1667
01:15:54,199 --> 01:15:59,159
is a sensible Choice even for them since

1668
01:15:59,159 --> 01:16:01,699
I think there is people from cloudflare

1669
01:16:01,699 --> 01:16:05,719
and other all right Roberto

1670
01:16:05,719 --> 01:16:08,040
correct this is the working group is

1671
01:16:08,040 --> 01:16:10,320
open to all this is the working group

1672
01:16:10,320 --> 01:16:13,980
decision if somebody wishes to propose

1673
01:16:13,980 --> 01:16:16,620
something else they should this is the

1674
01:16:16,620 --> 01:16:18,980
venue to participate

1675
01:16:18,980 --> 01:16:22,440
so I understand your concern and I we

1676
01:16:22,440 --> 01:16:25,080
the ITF wants to make standards that are

1677
01:16:25,080 --> 01:16:26,760
used

1678
01:16:26,760 --> 01:16:30,360
but uh we're not going to reach out to

1679
01:16:30,360 --> 01:16:33,300
Industry it will be vague you know if

1680
01:16:33,300 --> 01:16:34,920
you have people in Industry who will

1681
01:16:34,920 --> 01:16:37,380
feel strongly about this they should

1682
01:16:37,380 --> 01:16:41,060
read the pr and comment

1683
01:16:42,600 --> 01:16:45,260
thank you

1684
01:16:48,360 --> 01:16:52,199
okay and with that uh let me just I

1685
01:16:52,199 --> 01:16:55,440
believe we have a any other business

1686
01:16:55,440 --> 01:16:58,199
uh agenda item does anybody have any

1687
01:16:58,199 --> 01:16:59,640
other business

1688
01:16:59,640 --> 01:17:02,219
you want to show your workflow thing uh

1689
01:17:02,219 --> 01:17:06,679
I can do that uh just as a

1690
01:17:06,679 --> 01:17:10,620
uh informational thing if you now go to

1691
01:17:10,620 --> 01:17:12,060
the

1692
01:17:12,060 --> 01:17:15,960
uh let me figure out where I'm going if

1693
01:17:15,960 --> 01:17:19,140
you go to the website that corresponds

1694
01:17:19,140 --> 01:17:21,500
to

1695
01:17:22,320 --> 01:17:25,320
the HPA working group HP API working

1696
01:17:25,320 --> 01:17:26,880
group

1697
01:17:26,880 --> 01:17:30,900
um we now have a little kind of flow

1698
01:17:30,900 --> 01:17:35,400
diagrams that attempt to indicate where

1699
01:17:35,400 --> 01:17:38,760
in the process uh the each of the

1700
01:17:38,760 --> 01:17:42,239
working group documents are we have a

1701
01:17:42,239 --> 01:17:44,820
lot of people in the HP API Community

1702
01:17:44,820 --> 01:17:47,940
who are not necessarily familiar with

1703
01:17:47,940 --> 01:17:50,400
how the ietf works

1704
01:17:50,400 --> 01:17:52,440
um these diagrams and I will try and

1705
01:17:52,440 --> 01:17:54,900
find a way of changing the color the

1706
01:17:54,900 --> 01:17:58,739
circle currently indicates where this

1707
01:17:58,739 --> 01:18:02,100
um document is in the flow but it's a

1708
01:18:02,100 --> 01:18:04,020
little too subtle so once I figure out

1709
01:18:04,020 --> 01:18:05,940
how to apply styling to these mermaid

1710
01:18:05,940 --> 01:18:07,560
diagrams

1711
01:18:07,560 --> 01:18:09,239
um we'll be able to make that a little

1712
01:18:09,239 --> 01:18:11,100
bit clearer but you can see here the

1713
01:18:11,100 --> 01:18:12,780
yaml media type is in working group last

1714
01:18:12,780 --> 01:18:15,840
call and the status of the other uh

1715
01:18:15,840 --> 01:18:20,219
media types and so uh this is a way for

1716
01:18:20,219 --> 01:18:22,020
us to help communicate to the broader

1717
01:18:22,020 --> 01:18:24,600
community see the process and make it

1718
01:18:24,600 --> 01:18:27,900
clear to them also that even when we say

1719
01:18:27,900 --> 01:18:30,780
working glue glass call there's a whole

1720
01:18:30,780 --> 01:18:33,300
bunch of things Downstream uh because

1721
01:18:33,300 --> 01:18:35,040
there is an expectation that yep we're

1722
01:18:35,040 --> 01:18:37,500
done and then there's lots of other

1723
01:18:37,500 --> 01:18:39,960
review that happens that is as I'm

1724
01:18:39,960 --> 01:18:43,080
learning extremely valuable uh from from

1725
01:18:43,080 --> 01:18:46,199
Upstream folks and so uh yes you can you

1726
01:18:46,199 --> 01:18:50,100
can see this uh on our GitHub i o

1727
01:18:50,100 --> 01:18:52,940
website

1728
01:18:55,500 --> 01:18:58,800
any other comments from you rich nope

1729
01:18:58,800 --> 01:19:00,659
then we should consider ourselves

1730
01:19:00,659 --> 01:19:03,840
adjourned thank you everybody for coming

1731
01:19:03,840 --> 01:19:07,520
thank you for a very productive session

1732
01:19:07,860 --> 01:19:10,639
have a good week

1733
01:19:11,780 --> 01:19:14,580
thank you all thank you for the chats

1734
01:19:14,580 --> 01:19:19,820
bye bye thanks Roberto hi Roberto

1735
01:19:25,739 --> 01:19:27,739
um

1736
01:19:31,440 --> 01:19:33,919
everyone

1737
01:19:35,820 --> 01:19:37,080
yeah

1738
01:19:37,080 --> 01:19:39,600
I figured I should play the bad guy but

1739
01:19:39,600 --> 01:19:42,420
I need to learn how to use the hammer

1740
01:19:42,420 --> 01:19:45,420
hey

1741
01:19:53,040 --> 01:19:55,460
yeah

1742
01:19:56,239 --> 01:19:58,560
it's kind of really cool you just

1743
01:19:58,560 --> 01:20:01,020
specify the black dependencies like

1744
01:20:01,020 --> 01:20:03,060
different printers automatically this

1745
01:20:03,060 --> 01:20:05,880
one I did add an eye on a review

1746
01:20:05,880 --> 01:20:08,880
is

1747
01:20:16,739 --> 01:20:19,080
yes no yeah everything goes here and

1748
01:20:19,080 --> 01:20:20,699
most of the reviews are nothing for us

1749
01:20:20,699 --> 01:20:22,980
to do here

1750
01:20:22,980 --> 01:20:25,280
uh yeah

1751
01:20:25,640 --> 01:20:28,440
no I mean Ayanna says there's nothing

1752
01:20:28,440 --> 01:20:29,699
for us

1753
01:20:29,699 --> 01:20:32,839
to be stupid

1754
01:20:33,440 --> 01:20:36,500
all right

1755
01:20:37,199 --> 01:20:40,199
welcome

1756
01:20:41,820 --> 01:20:44,719
this is

1757
01:20:45,120 --> 01:20:47,480
yeah

1758
01:20:48,260 --> 01:20:51,800
sort of seeing

