1
00:00:32,399 --> 00:00:35,399
problems

2
00:00:42,559 --> 00:00:45,960
so a lot of people I know that of course

3
00:00:45,960 --> 00:00:48,480
I know we need to start talking about I

4
00:00:48,480 --> 00:00:50,700
mean 10 years you know avoiding a state

5
00:00:50,700 --> 00:00:53,399
like these positive problems notice the

6
00:00:53,399 --> 00:00:55,379
horse is natural to compare living here

7
00:00:55,379 --> 00:00:57,980
because that's right

8
00:01:00,120 --> 00:01:03,120
intentionally

9
00:01:03,979 --> 00:01:06,600
thank you

10
00:01:06,600 --> 00:01:08,600
um

11
00:01:35,640 --> 00:01:38,640
experience

12
00:01:42,540 --> 00:01:45,540
hello

13
00:01:56,240 --> 00:01:59,289
[Music]

14
00:02:05,659 --> 00:02:08,098
the coffee machine in our hotel was

15
00:02:08,098 --> 00:02:09,598
broken this morning so there was no

16
00:02:09,598 --> 00:02:12,500
traffic to wake up

17
00:02:15,420 --> 00:02:18,060
I can introduce you to my colleague here

18
00:02:18,060 --> 00:02:20,900
and she was yesterday

19
00:02:26,180 --> 00:02:29,660
in a few days

20
00:02:33,140 --> 00:02:35,459
because like we have to have to work

21
00:02:35,459 --> 00:02:38,459
okay

22
00:02:44,780 --> 00:02:46,739
people and

23
00:02:46,739 --> 00:02:49,220
yeah

24
00:02:49,760 --> 00:02:52,980
properly we can say okay this will scare

25
00:02:52,980 --> 00:02:54,959
them in this study we don't have

26
00:02:54,959 --> 00:02:57,180
recovery

27
00:02:57,180 --> 00:03:00,260
yeah but it's trying to be out front

28
00:03:00,260 --> 00:03:03,019
Okay

29
00:03:03,019 --> 00:03:06,500
I think that's fair

30
00:03:07,560 --> 00:03:11,000
I'm gonna do this again

31
00:03:11,599 --> 00:03:14,700
yeah and we'll drive it from here and

32
00:03:14,700 --> 00:03:15,720
you go

33
00:03:15,720 --> 00:03:17,640
yeah and we're about times we should

34
00:03:17,640 --> 00:03:20,000
probably yeah

35
00:03:20,280 --> 00:03:22,800
uh yeah

36
00:03:22,800 --> 00:03:24,300
I wonder how many people they have

37
00:03:24,300 --> 00:03:26,940
online yeah

38
00:03:26,940 --> 00:03:30,859
you could join too and see

39
00:03:30,920 --> 00:03:34,819
I'll take that one yeah

40
00:03:36,019 --> 00:03:40,440
maybe I can do that Vienna yeah

41
00:03:40,440 --> 00:03:43,819
can we see it there

42
00:03:44,959 --> 00:03:47,299
over there

43
00:03:47,299 --> 00:03:49,560
so that was

44
00:03:49,560 --> 00:03:51,799
great

45
00:03:56,159 --> 00:03:58,920
but yeah I can certainly do you do that

46
00:03:58,920 --> 00:03:59,879
here

47
00:03:59,879 --> 00:04:02,220
yeah I'll log into this computer too so

48
00:04:02,220 --> 00:04:05,840
we can yeah but I like to do it here

49
00:04:11,480 --> 00:04:14,580
it is time you're right well especially

50
00:04:14,580 --> 00:04:16,440
because I have three grandkids now so I

51
00:04:16,440 --> 00:04:18,720
gotta add another one in there

52
00:04:18,720 --> 00:04:20,899
like you just change the number

53
00:04:20,899 --> 00:04:24,859
140 to 150 nothing else

54
00:04:25,199 --> 00:04:26,400
and maybe we don't need the pictures

55
00:04:26,400 --> 00:04:29,239
anymore actually

56
00:04:31,199 --> 00:04:32,660
thank you

57
00:04:32,660 --> 00:04:36,320
I am not online

58
00:04:49,680 --> 00:04:52,680
foreign

59
00:05:22,199 --> 00:05:24,979
you know

60
00:05:25,139 --> 00:05:29,300
they already did it but yeah

61
00:05:30,780 --> 00:05:33,890
[Music]

62
00:05:54,960 --> 00:05:57,960
foreign

63
00:06:12,820 --> 00:06:15,880
[Music]

64
00:06:28,039 --> 00:06:31,400
just do this

65
00:06:34,560 --> 00:06:37,440
I think yeah got the slides the thing

66
00:06:37,440 --> 00:06:39,180
right yeah this is where the so they're

67
00:06:39,180 --> 00:06:41,220
now they're now sharing we can start

68
00:06:41,220 --> 00:06:43,759
okay

69
00:06:49,080 --> 00:06:51,840
okay yeah go ahead yeah I'll tell you

70
00:06:51,840 --> 00:06:54,000
yeah just keep an eye on the key over

71
00:06:54,000 --> 00:06:56,060
there

72
00:06:56,060 --> 00:06:59,160
all right everyone welcome welcome to

73
00:06:59,160 --> 00:07:00,539
Pim

74
00:07:00,539 --> 00:07:03,240
might be our shortest meeting in a long

75
00:07:03,240 --> 00:07:05,400
time I mean smallest meeting

76
00:07:05,400 --> 00:07:07,020
not sure how many people we have online

77
00:07:07,020 --> 00:07:09,539
right now

78
00:07:09,539 --> 00:07:11,039
um

79
00:07:11,039 --> 00:07:13,380
so hope you all have uh signed the blue

80
00:07:13,380 --> 00:07:14,759
sheets or

81
00:07:14,759 --> 00:07:18,660
well rather scan the QR code or

82
00:07:18,660 --> 00:07:21,840
yeah register online

83
00:07:21,840 --> 00:07:24,479
um it's a note well

84
00:07:24,479 --> 00:07:25,919
um let's see I guess you need to drag

85
00:07:25,919 --> 00:07:28,340
that yeah

86
00:07:28,380 --> 00:07:30,180
yeah you should you should all have read

87
00:07:30,180 --> 00:07:31,500
the note well

88
00:07:31,500 --> 00:07:35,160
nothing new I think

89
00:07:35,160 --> 00:07:38,599
then we have the agenda

90
00:07:39,300 --> 00:07:42,780
so yeah we'll go through some working

91
00:07:42,780 --> 00:07:45,780
group status first and then

92
00:07:45,780 --> 00:07:47,880
we have Pim light that we had before and

93
00:07:47,880 --> 00:07:49,620
then there's some some various new

94
00:07:49,620 --> 00:07:54,500
presentations any comments on the agenda

95
00:07:55,440 --> 00:07:56,350
all right

96
00:07:56,350 --> 00:07:56,759
[Music]

97
00:07:56,759 --> 00:07:57,599
um

98
00:07:57,599 --> 00:08:00,900
okay for the working group status

99
00:08:00,900 --> 00:08:03,060
so uh

100
00:08:03,060 --> 00:08:05,400
we have made some progress a couple of

101
00:08:05,400 --> 00:08:08,220
new rfcs since last time

102
00:08:08,220 --> 00:08:10,319
so you have the young model has been

103
00:08:10,319 --> 00:08:13,500
published and some IBM pmld extensions

104
00:08:13,500 --> 00:08:16,560
and published

105
00:08:16,560 --> 00:08:17,759
um

106
00:08:17,759 --> 00:08:19,919
and yeah at the bottom here we have

107
00:08:19,919 --> 00:08:21,599
three jobs that they have requested

108
00:08:21,599 --> 00:08:23,340
publication for

109
00:08:23,340 --> 00:08:24,180
um

110
00:08:24,180 --> 00:08:27,240
I start packing needs revised draft I

111
00:08:27,240 --> 00:08:29,160
got some good comments there

112
00:08:29,160 --> 00:08:32,159
um and the other two are in the queue

113
00:08:32,159 --> 00:08:36,539
for the Dr Improvement then backup Dr

114
00:08:36,539 --> 00:08:39,740
not really making much progress there um

115
00:08:39,740 --> 00:08:43,140
Cisco Systems so Pim bider it is not

116
00:08:43,140 --> 00:08:44,760
biter bdr

117
00:08:44,760 --> 00:08:47,519
it is under progress right now and I

118
00:08:47,519 --> 00:08:49,620
think the new version I'll be publishing

119
00:08:49,620 --> 00:08:51,959
in next few weeks

120
00:08:51,959 --> 00:08:56,100
and then that should make progress okay

121
00:08:56,100 --> 00:09:00,060
um so by the way we um going forwards

122
00:09:00,060 --> 00:09:02,220
we're trying to have Shepherds for all

123
00:09:02,220 --> 00:09:05,339
our working group documents and uh

124
00:09:05,339 --> 00:09:07,920
ideally at the time of adoption we think

125
00:09:07,920 --> 00:09:10,560
we should try to have a shepherd so the

126
00:09:10,560 --> 00:09:13,200
shepherd can help you know make sure

127
00:09:13,200 --> 00:09:15,420
that he offers are making progress make

128
00:09:15,420 --> 00:09:16,980
sure that discussions in the working

129
00:09:16,980 --> 00:09:18,959
group gets Incorporated in the document

130
00:09:18,959 --> 00:09:21,180
and so on and

131
00:09:21,180 --> 00:09:24,300
also check if the document is ready for

132
00:09:24,300 --> 00:09:25,440
last call

133
00:09:25,440 --> 00:09:26,459
um

134
00:09:26,459 --> 00:09:29,820
so including the droughts if if anyone

135
00:09:29,820 --> 00:09:31,860
is interested in being a Shepherd please

136
00:09:31,860 --> 00:09:35,040
let us know

137
00:09:35,040 --> 00:09:36,839
um

138
00:09:36,839 --> 00:09:39,300
so uh yeah we probably won't be able to

139
00:09:39,300 --> 00:09:40,980
find a separate for all our documents

140
00:09:40,980 --> 00:09:43,680
right away but uh at least when we do

141
00:09:43,680 --> 00:09:45,180
our last call we would like to have a

142
00:09:45,180 --> 00:09:47,540
shepherd

143
00:09:48,180 --> 00:09:49,200
um

144
00:09:49,200 --> 00:09:51,540
so second part of the status we have a

145
00:09:51,540 --> 00:09:53,220
number of documents that are not being

146
00:09:53,220 --> 00:09:55,019
discussed today

147
00:09:55,019 --> 00:09:56,279
um

148
00:09:56,279 --> 00:09:58,740
so we have the um

149
00:09:58,740 --> 00:10:01,500
ibmp mld-biz documents there's like

150
00:10:01,500 --> 00:10:04,019
three documents related to that here

151
00:10:04,019 --> 00:10:05,220
um

152
00:10:05,220 --> 00:10:07,080
and um

153
00:10:07,080 --> 00:10:09,480
we can probably do Last Call on those

154
00:10:09,480 --> 00:10:10,860
soon

155
00:10:10,860 --> 00:10:12,839
let's check with Brian Haber man who's

156
00:10:12,839 --> 00:10:14,580
been working on that what the state this

157
00:10:14,580 --> 00:10:17,399
is uh if he feels stare dumb

158
00:10:17,399 --> 00:10:18,240
um

159
00:10:18,240 --> 00:10:22,140
we just adopted the 3228 bits that you

160
00:10:22,140 --> 00:10:23,820
see near the bottom there

161
00:10:23,820 --> 00:10:24,540
um

162
00:10:24,540 --> 00:10:27,540
so we did an adoption call we didn't get

163
00:10:27,540 --> 00:10:31,080
much input and we decided as chairs to

164
00:10:31,080 --> 00:10:33,060
adopt it anyway

165
00:10:33,060 --> 00:10:35,040
um it's basically just Ayana

166
00:10:35,040 --> 00:10:37,140
considerations for igmp so it's

167
00:10:37,140 --> 00:10:38,940
something that we need to do

168
00:10:38,940 --> 00:10:40,080
um

169
00:10:40,080 --> 00:10:42,180
we want our help to

170
00:10:42,180 --> 00:10:44,820
help see if it's ready for last calls in

171
00:10:44,820 --> 00:10:46,860
the

172
00:10:46,860 --> 00:10:49,079
we need the we need working group input

173
00:10:49,079 --> 00:10:52,279
for for last call

174
00:10:52,440 --> 00:10:54,630
um okay what else

175
00:10:54,630 --> 00:10:55,260
[Music]

176
00:10:55,260 --> 00:10:57,260
um

177
00:10:58,019 --> 00:11:00,560
yeah for the point-to-point mult yeah

178
00:11:00,560 --> 00:11:05,579
multiplied policy and uh policy ping uh

179
00:11:05,579 --> 00:11:07,680
come on do you have any comments on

180
00:11:07,680 --> 00:11:09,600
those or

181
00:11:09,600 --> 00:11:11,760
what do you feel like the status is are

182
00:11:11,760 --> 00:11:14,579
they almost done or

183
00:11:14,579 --> 00:11:16,560
um yeah there were some discussions on

184
00:11:16,560 --> 00:11:19,500
the spring uh they wanted us to clarify

185
00:11:19,500 --> 00:11:21,660
some stuff on their replication policy

186
00:11:21,660 --> 00:11:23,700
uh replication

187
00:11:23,700 --> 00:11:27,060
uh policy and I think we submitted the

188
00:11:27,060 --> 00:11:31,019
clarifications uh to the spring and we

189
00:11:31,019 --> 00:11:32,339
are just waiting for last call again

190
00:11:32,339 --> 00:11:34,800
that's where it is standing okay great

191
00:11:34,800 --> 00:11:37,140
yeah thanks

192
00:11:37,140 --> 00:11:39,959
yeah we've also had this this draft that

193
00:11:39,959 --> 00:11:40,860
uh

194
00:11:40,860 --> 00:11:43,920
I'm an off-ro so as an author I

195
00:11:43,920 --> 00:11:46,260
hope it can go to last call soon but

196
00:11:46,260 --> 00:11:51,200
I'll defer to Mike in the working group

197
00:11:51,540 --> 00:11:54,839
yeah and uh

198
00:11:54,839 --> 00:11:57,720
yeah also let's see

199
00:11:57,720 --> 00:11:59,339
um

200
00:11:59,339 --> 00:12:01,680
yeah I think that's pretty much what we

201
00:12:01,680 --> 00:12:04,200
have for status I just got one comment

202
00:12:04,200 --> 00:12:06,540
about the going back to human sorry the

203
00:12:06,540 --> 00:12:08,880
um point to multi-point policy peeing I

204
00:12:08,880 --> 00:12:09,899
finally remember I need to check my

205
00:12:09,899 --> 00:12:11,700
emails again but I think I remember

206
00:12:11,700 --> 00:12:13,740
the spring chairs telling stick and I to

207
00:12:13,740 --> 00:12:15,779
hold off progressing these until the

208
00:12:15,779 --> 00:12:17,399
replication segment draft and spring

209
00:12:17,399 --> 00:12:20,339
progresses is that true yeah I I have to

210
00:12:20,339 --> 00:12:22,860
apologize I I was running around trying

211
00:12:22,860 --> 00:12:24,420
to find my way through the staircase so

212
00:12:24,420 --> 00:12:27,300
my mind was a little bit foggy here uh

213
00:12:27,300 --> 00:12:31,380
so the the comments that I gave was for

214
00:12:31,380 --> 00:12:35,579
the uh point to multiply and policy uh

215
00:12:35,579 --> 00:12:39,060
draft in in Pim so there is a ping and

216
00:12:39,060 --> 00:12:41,279
then there is a policy itself so my

217
00:12:41,279 --> 00:12:42,779
comments with regard to the point to

218
00:12:42,779 --> 00:12:45,060
multiply and policy with regard to the

219
00:12:45,060 --> 00:12:49,320
Ping uh last I send out I did some

220
00:12:49,320 --> 00:12:52,620
modifications to the draft I did send uh

221
00:12:52,620 --> 00:12:54,380
send the email to the

222
00:12:54,380 --> 00:12:57,779
mpls working group because they had some

223
00:12:57,779 --> 00:12:59,519
comments to ensure that they're okay

224
00:12:59,519 --> 00:13:02,220
with the changes and I did ask for a

225
00:13:02,220 --> 00:13:06,260
early adoption early allocation of Ina

226
00:13:06,260 --> 00:13:10,079
sub tlv which I never got any response

227
00:13:10,079 --> 00:13:12,360
for that but I did trigger all this

228
00:13:12,360 --> 00:13:15,540
stuff on the on the working groups but

229
00:13:15,540 --> 00:13:17,700
so far I have not got any response I

230
00:13:17,700 --> 00:13:19,880
would imagine if we can get that early

231
00:13:19,880 --> 00:13:23,459
allocation of the sub tlv that would

232
00:13:23,459 --> 00:13:26,279
generate some response from mpls working

233
00:13:26,279 --> 00:13:28,560
group perhaps okay so if you think it

234
00:13:28,560 --> 00:13:31,920
could help Stig and I maybe could help

235
00:13:31,920 --> 00:13:34,380
maybe ask

236
00:13:34,380 --> 00:13:37,500
the mpls chairs to help us I I would

237
00:13:37,500 --> 00:13:39,600
definitely appreciate that yeah okay why

238
00:13:39,600 --> 00:13:41,519
don't we put that as an action I

239
00:13:41,519 --> 00:13:44,480
appreciate it thank you very much

240
00:13:45,480 --> 00:13:46,860
and I think you're right I think that's

241
00:13:46,860 --> 00:13:49,200
it yeah

242
00:13:49,200 --> 00:13:52,620
all right so that was the Steelers uh

243
00:13:52,620 --> 00:13:54,839
any comments

244
00:13:54,839 --> 00:13:57,779
thoughts on that

245
00:13:57,779 --> 00:13:58,870
but yeah if

246
00:13:58,870 --> 00:14:00,240
[Music]

247
00:14:00,240 --> 00:14:02,880
you might be interested in shepherding a

248
00:14:02,880 --> 00:14:05,940
document uh please get in touch with us

249
00:14:05,940 --> 00:14:08,160
otherwise we might start getting in

250
00:14:08,160 --> 00:14:09,779
touch with uh

251
00:14:09,779 --> 00:14:11,459
I guess

252
00:14:11,459 --> 00:14:13,800
various participants and see if they can

253
00:14:13,800 --> 00:14:15,360
please help out

254
00:14:15,360 --> 00:14:17,100
there anyone would be welcome to

255
00:14:17,100 --> 00:14:18,660
Shepherd

256
00:14:18,660 --> 00:14:20,760
it's a good way to learn about the iitf

257
00:14:20,760 --> 00:14:22,620
process

258
00:14:22,620 --> 00:14:23,360
okay

259
00:14:23,360 --> 00:14:24,120
[Music]

260
00:14:24,120 --> 00:14:24,899
um

261
00:14:24,899 --> 00:14:28,079
so then I guess hormone was first with

262
00:14:28,079 --> 00:14:30,859
the 10 lights

263
00:14:40,260 --> 00:14:42,240
okay so uh

264
00:14:42,240 --> 00:14:45,060
I think the the giraffe what what's

265
00:14:45,060 --> 00:14:47,639
adopted by the the working group so

266
00:14:47,639 --> 00:14:49,800
thank you for very much for that we had

267
00:14:49,800 --> 00:14:52,639
some very good feedback from

268
00:14:52,639 --> 00:14:58,320
uh Sandy and uh tanmoy from Nokia so I

269
00:14:58,320 --> 00:15:00,600
tried to summarize all this feedback in

270
00:15:00,600 --> 00:15:04,260
this slide uh to see what other work

271
00:15:04,260 --> 00:15:07,560
needs to be done any other obviously

272
00:15:07,560 --> 00:15:09,660
feedback is greatly appreciated so we

273
00:15:09,660 --> 00:15:12,120
can push this through the last call and

274
00:15:12,120 --> 00:15:15,480
maybe uh start looking at the because so

275
00:15:15,480 --> 00:15:18,300
everybody is aware of this draft one of

276
00:15:18,300 --> 00:15:21,720
the ties that it has is in the beer site

277
00:15:21,720 --> 00:15:25,380
for PIM signaling over a beer domain and

278
00:15:25,380 --> 00:15:27,959
this is where how it was born so any

279
00:15:27,959 --> 00:15:30,300
extra comments that can come along to

280
00:15:30,300 --> 00:15:32,459
push this draft through would be greatly

281
00:15:32,459 --> 00:15:35,719
appreciated next slide please

282
00:15:38,540 --> 00:15:42,060
all right so uh first the comment was

283
00:15:42,060 --> 00:15:44,220
that let's make sure that it's very

284
00:15:44,220 --> 00:15:46,440
clear that which message types we are

285
00:15:46,440 --> 00:15:50,160
going to support so uh looking at Ina n

286
00:15:50,160 --> 00:15:52,260
a which I always have a hard time saying

287
00:15:52,260 --> 00:15:54,420
it but anyway there are 12 message types

288
00:15:54,420 --> 00:15:56,820
this seems like 4pm and we only gonna

289
00:15:56,820 --> 00:16:00,600
support the message type 3 which is the

290
00:16:00,600 --> 00:16:04,560
join and the prune and basically the the

291
00:16:04,560 --> 00:16:07,019
trick here is that most of this message

292
00:16:07,019 --> 00:16:09,480
type you need to have a Pim adjacency

293
00:16:09,480 --> 00:16:13,380
via Pim hellos before the router the pin

294
00:16:13,380 --> 00:16:16,500
router accept the message uh most of

295
00:16:16,500 --> 00:16:18,199
these 12 message types for that matter

296
00:16:18,199 --> 00:16:21,899
and one of the exceptions for the PM

297
00:16:21,899 --> 00:16:23,760
light interface is that you do not need

298
00:16:23,760 --> 00:16:27,540
to have this pm adjacency and back and

299
00:16:27,540 --> 00:16:29,820
forth of the hello messages for the

300
00:16:29,820 --> 00:16:33,959
router to accept the Pim join and prune

301
00:16:33,959 --> 00:16:37,019
message type 3. so that was one thing

302
00:16:37,019 --> 00:16:40,199
that we clarify quite you know Chris are

303
00:16:40,199 --> 00:16:42,060
clear that there is no other message

304
00:16:42,060 --> 00:16:43,920
type that is supported the the second

305
00:16:43,920 --> 00:16:47,100
thing was the PMS Parts mode again just

306
00:16:47,100 --> 00:16:48,779
because there's no hello adjacencies

307
00:16:48,779 --> 00:16:51,899
that means that all the goodies for the

308
00:16:51,899 --> 00:16:55,380
Pim SM need to be within the pin domain

309
00:16:55,380 --> 00:16:57,300
what that means is that you are not

310
00:16:57,300 --> 00:17:00,420
going to be able to have a RP or a Dr on

311
00:17:00,420 --> 00:17:02,579
the other side of the team light domain

312
00:17:02,579 --> 00:17:04,439
so if there are two pin domains that are

313
00:17:04,439 --> 00:17:08,099
attached through a Pim light domain you

314
00:17:08,099 --> 00:17:12,419
cannot mix and match your RPS and and

315
00:17:12,419 --> 00:17:14,699
designated router over the PM light

316
00:17:14,699 --> 00:17:16,859
domain so we did the clarification on

317
00:17:16,859 --> 00:17:17,760
that one

318
00:17:17,760 --> 00:17:22,199
uh we also put a bunch of texts around

319
00:17:22,199 --> 00:17:24,720
the fact that the lack of Hello message

320
00:17:24,720 --> 00:17:28,140
means to Pim light routers

321
00:17:28,140 --> 00:17:30,360
and one of the things was the join

322
00:17:30,360 --> 00:17:32,100
attribute that we might get in some of

323
00:17:32,100 --> 00:17:33,620
the join messages

324
00:17:33,620 --> 00:17:37,200
obviously there is a

325
00:17:37,200 --> 00:17:38,940
I guess there's a flag I can't remember

326
00:17:38,940 --> 00:17:41,100
quite well maybe the experts know better

327
00:17:41,100 --> 00:17:43,080
than I do or there was a soft tlv that

328
00:17:43,080 --> 00:17:45,419
was communicated in the Hello message

329
00:17:45,419 --> 00:17:48,980
saying that the router supports the join

330
00:17:48,980 --> 00:17:52,140
attribute with the lack of the Hello

331
00:17:52,140 --> 00:17:54,120
message basically it comes down to the

332
00:17:54,120 --> 00:17:56,640
fact that if the software on the router

333
00:17:56,640 --> 00:17:59,280
does support join attributes they need

334
00:17:59,280 --> 00:18:01,380
to be able to process it if they don't

335
00:18:01,380 --> 00:18:04,740
then they won't process it and the last

336
00:18:04,740 --> 00:18:07,280
but not least is the Dr selection

337
00:18:07,280 --> 00:18:09,720
again obviously that needs a Hello

338
00:18:09,720 --> 00:18:14,100
message and uh with PM light uh the Dr

339
00:18:14,100 --> 00:18:16,440
selection needs to be within the Pim

340
00:18:16,440 --> 00:18:19,860
domain it not it cannot happen over the

341
00:18:19,860 --> 00:18:22,980
Pim light interfaces or across beam

342
00:18:22,980 --> 00:18:26,400
light routers to do that Dr selection

343
00:18:26,400 --> 00:18:29,900
next slide please

344
00:18:30,059 --> 00:18:33,480
uh so with regard to the failures of the

345
00:18:33,480 --> 00:18:35,280
Pim light interface

346
00:18:35,280 --> 00:18:35,880
um

347
00:18:35,880 --> 00:18:38,940
uh today usually when the hello

348
00:18:38,940 --> 00:18:41,700
adjacency goes down we withdraw a bunch

349
00:18:41,700 --> 00:18:45,660
of multicast routes from the uh the the

350
00:18:45,660 --> 00:18:49,320
routing table uh in this case we are

351
00:18:49,320 --> 00:18:50,880
kind of suggesting that there could be

352
00:18:50,880 --> 00:18:53,179
other type of protocols that can be used

353
00:18:53,179 --> 00:18:56,820
to detect that epim light interface has

354
00:18:56,820 --> 00:18:57,780
gone down

355
00:18:57,780 --> 00:18:59,520
as an example if you have a Pim light

356
00:18:59,520 --> 00:19:03,620
interface over a layer 2 uh Network

357
00:19:03,620 --> 00:19:06,539
where there are multi-hop away from each

358
00:19:06,539 --> 00:19:08,700
other then you can use a protocol like

359
00:19:08,700 --> 00:19:11,220
BFD as an example to ensure that there

360
00:19:11,220 --> 00:19:12,840
is connectivity on your Pim light

361
00:19:12,840 --> 00:19:17,580
interface and if PFD goes down then that

362
00:19:17,580 --> 00:19:21,919
the interface is withdrawn from the

363
00:19:21,919 --> 00:19:25,620
multicast route and that oif is erased

364
00:19:25,620 --> 00:19:28,200
from the multicast raft and this will

365
00:19:28,200 --> 00:19:32,340
kind of manage the the uh the traffic

366
00:19:32,340 --> 00:19:34,919
the downstream traffic going out of the

367
00:19:34,919 --> 00:19:36,720
multicastra

368
00:19:36,720 --> 00:19:38,820
so these are all the stuff that we added

369
00:19:38,820 --> 00:19:41,520
to the draft uh again if there are some

370
00:19:41,520 --> 00:19:44,179
other comments

371
00:19:44,539 --> 00:19:48,120
totally sacred so um

372
00:19:48,120 --> 00:19:51,900
I would really like to see that we don't

373
00:19:51,900 --> 00:19:54,720
use standard pin but that this all would

374
00:19:54,720 --> 00:19:58,799
be running over TCP RFC 6559 Port right

375
00:19:58,799 --> 00:20:00,720
because we've seen especially when this

376
00:20:00,720 --> 00:20:02,640
is used together with beer we're

377
00:20:02,640 --> 00:20:04,140
supposed to be able to much easier

378
00:20:04,140 --> 00:20:06,120
support really large amount of state

379
00:20:06,120 --> 00:20:08,220
right because the state isn't in the

380
00:20:08,220 --> 00:20:10,740
core anymore but we're doing egress to

381
00:20:10,740 --> 00:20:13,320
Ingress PE signaling

382
00:20:13,320 --> 00:20:15,419
in all of the large-scale multicast

383
00:20:15,419 --> 00:20:17,280
deployments that I hear was always the

384
00:20:17,280 --> 00:20:18,960
problem of how to get the reliable big

385
00:20:18,960 --> 00:20:21,240
burst under reconvergence right so

386
00:20:21,240 --> 00:20:22,860
you're sending you know ten thousands of

387
00:20:22,860 --> 00:20:26,220
Pim joints uh or Pim leaves right so um

388
00:20:26,220 --> 00:20:28,080
and uh it's it's just terrible right I

389
00:20:28,080 --> 00:20:30,660
mean the everybody you know as a vendor

390
00:20:30,660 --> 00:20:32,580
is making smart for trying to to make

391
00:20:32,580 --> 00:20:34,320
that work well and then we finally gave

392
00:20:34,320 --> 00:20:36,660
in and said okay let's let's have what

393
00:20:36,660 --> 00:20:39,120
we did with mldp why people were using

394
00:20:39,120 --> 00:20:42,240
bgp as one of the factors and so when

395
00:20:42,240 --> 00:20:44,160
we're now redoing Pim can we please you

396
00:20:44,160 --> 00:20:46,140
know pick up our own

397
00:20:46,140 --> 00:20:48,480
stuff which was simply you know use it

398
00:20:48,480 --> 00:20:51,299
over TCP and uh then here this is the

399
00:20:51,299 --> 00:20:53,100
simplification and I think that should

400
00:20:53,100 --> 00:20:55,260
make using TCP

401
00:20:55,260 --> 00:20:57,600
um as we did find in 6559 even a lot

402
00:20:57,600 --> 00:21:00,240
less difficult

403
00:21:00,240 --> 00:21:02,700
okay yeah I appreciate that um just

404
00:21:02,700 --> 00:21:04,740
taking a step back

405
00:21:04,740 --> 00:21:05,460
um

406
00:21:05,460 --> 00:21:07,320
again I want to remind how this thing

407
00:21:07,320 --> 00:21:09,179
was born this thing was born as you know

408
00:21:09,179 --> 00:21:12,740
through the beer right and

409
00:21:12,740 --> 00:21:15,059
some of the ideas we were toying around

410
00:21:15,059 --> 00:21:17,820
on on the beer side was that we made it

411
00:21:17,820 --> 00:21:20,400
very clear on the beer side that this

412
00:21:20,400 --> 00:21:23,580
joins and prunes are only being used for

413
00:21:23,580 --> 00:21:26,400
signaling they are not something that

414
00:21:26,400 --> 00:21:29,700
are part of the pin protocol and I think

415
00:21:29,700 --> 00:21:32,400
at that point of time the decision was

416
00:21:32,400 --> 00:21:36,780
made between some parties that we need

417
00:21:36,780 --> 00:21:39,419
to grab the pin and kind of water it

418
00:21:39,419 --> 00:21:40,620
down

419
00:21:40,620 --> 00:21:43,080
to become distressed that's fine I have

420
00:21:43,080 --> 00:21:45,900
no issue with going over TCP but then

421
00:21:45,900 --> 00:21:47,220
that definitely going to change the

422
00:21:47,220 --> 00:21:49,679
message type of the join and and the

423
00:21:49,679 --> 00:21:52,679
prunes to be over TCP right so I I don't

424
00:21:52,679 --> 00:21:55,320
remember exactly what we did in 6559 I

425
00:21:55,320 --> 00:21:56,640
need to remember that as well I thought

426
00:21:56,640 --> 00:21:58,140
it is pretty much you know the pin

427
00:21:58,140 --> 00:22:00,720
messages without any changes okay and

428
00:22:00,720 --> 00:22:02,220
just uh you know the problem of the

429
00:22:02,220 --> 00:22:04,080
hellos which I guess we're not going to

430
00:22:04,080 --> 00:22:07,980
have anyhow and the discovery so um but

431
00:22:07,980 --> 00:22:09,960
um just because it's kind of overlay

432
00:22:09,960 --> 00:22:11,820
used doesn't change the problem of

433
00:22:11,820 --> 00:22:13,919
diversity Behavior which is that we're

434
00:22:13,919 --> 00:22:15,659
triggering all these join when there's a

435
00:22:15,659 --> 00:22:18,539
route change right and that can result

436
00:22:18,539 --> 00:22:21,419
in thousands of messages and TCP nicely

437
00:22:21,419 --> 00:22:24,120
takes care of that in reliable uh doing

438
00:22:24,120 --> 00:22:25,860
that whereas in all the implementations

439
00:22:25,860 --> 00:22:27,480
you need to start having really large

440
00:22:27,480 --> 00:22:29,159
buffers which you otherwise don't want

441
00:22:29,159 --> 00:22:31,799
to to buffer these messages or you're

442
00:22:31,799 --> 00:22:33,240
going to have to wait for the 60 seconds

443
00:22:33,240 --> 00:22:35,100
to resend it and all the crap that you

444
00:22:35,100 --> 00:22:37,500
know the datagram architecture of Pim

445
00:22:37,500 --> 00:22:40,200
had given us okay I need to read that

446
00:22:40,200 --> 00:22:42,000
draft honestly I haven't read it so I'm

447
00:22:42,000 --> 00:22:44,039
I'm not aware okay so on camera Cisco

448
00:22:44,039 --> 00:22:46,380
Systems so just to give update the with

449
00:22:46,380 --> 00:22:48,419
respect to this particular draft I think

450
00:22:48,419 --> 00:22:50,520
it is completely agnostic to whether we

451
00:22:50,520 --> 00:22:54,840
do it over TCP or UDP so whatever spec

452
00:22:54,840 --> 00:22:56,520
we are defining in this draft that is

453
00:22:56,520 --> 00:22:59,820
more to clarify the base Pim Behavior

454
00:22:59,820 --> 00:23:02,220
where we always wanted that hellos are

455
00:23:02,220 --> 00:23:03,659
coming before even we could do any

456
00:23:03,659 --> 00:23:06,179
signaling over that interface

457
00:23:06,179 --> 00:23:09,900
no and and hopefully it is exactly

458
00:23:09,900 --> 00:23:12,480
um that way but then I think we should

459
00:23:12,480 --> 00:23:15,600
still have a Pim light implementations

460
00:23:15,600 --> 00:23:18,500
must support a default to Port right

461
00:23:18,500 --> 00:23:21,780
26559 right so that we finally get a

462
00:23:21,780 --> 00:23:24,419
good reason to to to get Port deployed

463
00:23:24,419 --> 00:23:28,140
right for it being Pim over TCP right so

464
00:23:28,140 --> 00:23:30,480
uh that was the marketing name that we

465
00:23:30,480 --> 00:23:32,280
gave it right so

466
00:23:32,280 --> 00:23:34,919
um there's there's no reason to say we

467
00:23:34,919 --> 00:23:37,320
we should continue to have a Pim

468
00:23:37,320 --> 00:23:39,240
datagram as the default for for

469
00:23:39,240 --> 00:23:41,960
something like this

470
00:23:43,860 --> 00:23:46,679
okay uh I'll read that draft and I'll

471
00:23:46,679 --> 00:23:49,580
open up a conversation

472
00:23:56,820 --> 00:23:59,039
6.5 nine

473
00:23:59,039 --> 00:24:00,600
um other than that running they just uh

474
00:24:00,600 --> 00:24:03,539
process observation

475
00:24:03,539 --> 00:24:06,120
um I know that Sandy did the adoption

476
00:24:06,120 --> 00:24:07,440
call

477
00:24:07,440 --> 00:24:11,400
please reflect that in the data tracker

478
00:24:11,400 --> 00:24:14,820
Lister as the shepherd make her a

479
00:24:14,820 --> 00:24:17,039
delegate in the working group

480
00:24:17,039 --> 00:24:19,260
so she can push all the buttons this is

481
00:24:19,260 --> 00:24:20,520
because both of both the chairs are

482
00:24:20,520 --> 00:24:22,980
authors in this draft so yeah we need to

483
00:24:22,980 --> 00:24:24,299
make sure that everything looks

484
00:24:24,299 --> 00:24:27,480
correctly so please just make sure that

485
00:24:27,480 --> 00:24:29,340
everyone knows that it's Sandy the one

486
00:24:29,340 --> 00:24:31,500
who's driving

487
00:24:31,500 --> 00:24:34,220
um everything here

488
00:24:35,880 --> 00:24:38,820
um next slide please

489
00:24:38,820 --> 00:24:40,980
yeah so uh

490
00:24:40,980 --> 00:24:43,440
I think we covered this is like two uh I

491
00:24:43,440 --> 00:24:44,640
was looking for comments and stuff like

492
00:24:44,640 --> 00:24:45,659
that so

493
00:24:45,659 --> 00:24:48,780
um that's all good

494
00:24:48,780 --> 00:24:51,678
okay thank you

495
00:24:56,159 --> 00:24:59,059
are you on Nate

496
00:25:06,539 --> 00:25:09,360
yes can you hear me yes we can hear you

497
00:25:09,360 --> 00:25:10,320
good

498
00:25:10,320 --> 00:25:11,940
right can you see this light can you see

499
00:25:11,940 --> 00:25:12,960
the slides

500
00:25:12,960 --> 00:25:16,080
I can perfect great you're on I'll flip

501
00:25:16,080 --> 00:25:17,460
the slides for you

502
00:25:17,460 --> 00:25:20,960
all right thanks good morning everybody

503
00:25:21,059 --> 00:25:24,240
um so just an intro slide and this is a

504
00:25:24,240 --> 00:25:26,760
link to the uh the draft document that

505
00:25:26,760 --> 00:25:29,880
we have out there currently

506
00:25:29,880 --> 00:25:32,340
um go ahead and flip

507
00:25:32,340 --> 00:25:35,159
so just to uh kind of go through the

508
00:25:35,159 --> 00:25:38,039
problem that we're looking at here again

509
00:25:38,039 --> 00:25:42,020
um this is primarily for boat networks

510
00:25:42,020 --> 00:25:45,659
and these are kind of characterized by

511
00:25:45,659 --> 00:25:48,659
everything is on a single subnet um we

512
00:25:48,659 --> 00:25:51,779
have displays and sensors and structure

513
00:25:51,779 --> 00:25:54,059
devices all kind of connected with each

514
00:25:54,059 --> 00:25:57,600
other typically there's no internet

515
00:25:57,600 --> 00:25:59,400
connection available to these devices

516
00:25:59,400 --> 00:26:01,080
and the problem we're trying to face is

517
00:26:01,080 --> 00:26:02,120
that

518
00:26:02,120 --> 00:26:04,799
in a situation like this you might have

519
00:26:04,799 --> 00:26:06,900
a one gigabit sensor

520
00:26:06,900 --> 00:26:11,460
um on a network with several other lower

521
00:26:11,460 --> 00:26:14,159
speed sensors maybe 100 megabit sensor

522
00:26:14,159 --> 00:26:17,059
and if you have that gigabit sensor

523
00:26:17,059 --> 00:26:19,860
streaming multicast data then it a

524
00:26:19,860 --> 00:26:22,860
standard switch will output that

525
00:26:22,860 --> 00:26:25,799
multicast data and overwhelm the link to

526
00:26:25,799 --> 00:26:29,220
that 100 megabit sensor there

527
00:26:29,220 --> 00:26:32,059
um so go ahead and flip

528
00:26:32,159 --> 00:26:34,559
so the solution here is to use multicast

529
00:26:34,559 --> 00:26:37,919
snooping to prevent those streams from

530
00:26:37,919 --> 00:26:40,380
going out to the 100 megabit sensor

531
00:26:40,380 --> 00:26:41,820
there

532
00:26:41,820 --> 00:26:45,000
and that forwards that causes a switch

533
00:26:45,000 --> 00:26:47,580
to only forward uh the packets to

534
00:26:47,580 --> 00:26:51,960
devices on ports that request them

535
00:26:51,960 --> 00:26:54,860
go ahead and flip

536
00:26:55,020 --> 00:26:57,779
so kind of a review of some of the the

537
00:26:57,779 --> 00:26:59,159
multicast

538
00:26:59,159 --> 00:27:02,520
um or some of the IPv6 addresses that

539
00:27:02,520 --> 00:27:04,080
will kind of build up

540
00:27:04,080 --> 00:27:05,820
to the problem that we're facing with

541
00:27:05,820 --> 00:27:07,440
this um

542
00:27:07,440 --> 00:27:08,960
based off of our

543
00:27:08,960 --> 00:27:11,580
c4291 this is the definition of a

544
00:27:11,580 --> 00:27:13,500
unicast address and you'll see that the

545
00:27:13,500 --> 00:27:17,100
least significant 64 bits is uh known as

546
00:27:17,100 --> 00:27:19,980
the interface ID or IID

547
00:27:19,980 --> 00:27:22,760
flip

548
00:27:25,320 --> 00:27:29,460
so to build up multicast address over

549
00:27:29,460 --> 00:27:31,799
time this has kind of evolved starting

550
00:27:31,799 --> 00:27:33,539
with uh

551
00:27:33,539 --> 00:27:36,539
1884

552
00:27:37,039 --> 00:27:40,140
2.91 and then from there you have kind

553
00:27:40,140 --> 00:27:42,539
of a definition of the unicab unicast

554
00:27:42,539 --> 00:27:45,000
prefix based multicast address where

555
00:27:45,000 --> 00:27:47,279
you've got the 64-bit Network prefix

556
00:27:47,279 --> 00:27:49,260
there and a group ID is a least

557
00:27:49,260 --> 00:27:52,640
significant 32 bits and then finally RFC

558
00:27:52,640 --> 00:27:57,179
4489 provides a mechanism for generating

559
00:27:57,179 --> 00:28:00,299
a link scoped IPv6 multicast address so

560
00:28:00,299 --> 00:28:02,279
basically any

561
00:28:02,279 --> 00:28:06,419
um uh link local IP address comes with a

562
00:28:06,419 --> 00:28:08,539
block of

563
00:28:08,539 --> 00:28:11,400
uh multicast addresses that it can

564
00:28:11,400 --> 00:28:14,820
assign based off of its link local

565
00:28:14,820 --> 00:28:18,299
address so based off of this that 64

566
00:28:18,299 --> 00:28:20,700
bits from the link local address goes

567
00:28:20,700 --> 00:28:23,820
into the network prefix there

568
00:28:23,820 --> 00:28:26,039
kind of that middle 64 bits and then the

569
00:28:26,039 --> 00:28:27,360
least significant

570
00:28:27,360 --> 00:28:31,340
uh 32-bits are the group ID

571
00:28:32,220 --> 00:28:35,059
next slide

572
00:28:35,640 --> 00:28:38,580
so for the group IDs these are assigned

573
00:28:38,580 --> 00:28:44,940
based off of RFC 3307 section 4.

574
00:28:44,940 --> 00:28:48,059
4.1 talks about permanent IPv6 multicast

575
00:28:48,059 --> 00:28:50,400
addresses and and there's the range for

576
00:28:50,400 --> 00:28:51,260
those

577
00:28:51,260 --> 00:28:54,059
4.2 talks about the multicast group

578
00:28:54,059 --> 00:28:57,179
identifiers allocated by

579
00:28:57,179 --> 00:28:59,220
Ayanna again there's a range for that

580
00:28:59,220 --> 00:29:02,039
and then 4.3 has a range specific for

581
00:29:02,039 --> 00:29:05,460
dynamic multicast addresses from

582
00:29:05,460 --> 00:29:10,500
hex 800 all the way through FF

583
00:29:10,500 --> 00:29:13,279
next slide

584
00:29:14,820 --> 00:29:16,980
so the problem is when you go to

585
00:29:16,980 --> 00:29:19,200
transmit these multicast addresses on

586
00:29:19,200 --> 00:29:20,399
ethernet

587
00:29:20,399 --> 00:29:22,459
um

588
00:29:23,159 --> 00:29:25,679
what can happen is the the group ID

589
00:29:25,679 --> 00:29:29,460
being in the least significant 32 bits

590
00:29:29,460 --> 00:29:32,279
um on ethernet you only have 48 bits and

591
00:29:32,279 --> 00:29:34,080
so the first two octets are three three

592
00:29:34,080 --> 00:29:36,360
three three and then the last four

593
00:29:36,360 --> 00:29:39,179
octets are the least significant

594
00:29:39,179 --> 00:29:41,820
32 bits which is the group ID there

595
00:29:41,820 --> 00:29:43,740
and so what can happen here is even

596
00:29:43,740 --> 00:29:46,380
though your link scoped IPv6 multicast

597
00:29:46,380 --> 00:29:51,240
address is unique the 128-bit address is

598
00:29:51,240 --> 00:29:55,320
unique when that goes out on ethernet if

599
00:29:55,320 --> 00:29:58,200
different nodes choose the same group ID

600
00:29:58,200 --> 00:30:01,020
then you end up with different link

601
00:30:01,020 --> 00:30:02,820
local addresses with

602
00:30:02,820 --> 00:30:03,360
um

603
00:30:03,360 --> 00:30:06,419
sending the same uh Ethernet Mac address

604
00:30:06,419 --> 00:30:10,020
and you can get collisions there

605
00:30:10,020 --> 00:30:12,799
next slide

606
00:30:13,620 --> 00:30:15,720
so we have a number of requirements for

607
00:30:15,720 --> 00:30:17,880
the solution here first it has to be

608
00:30:17,880 --> 00:30:19,980
zero configuration most of the customers

609
00:30:19,980 --> 00:30:21,779
do not have expertise on network

610
00:30:21,779 --> 00:30:23,640
configuration

611
00:30:23,640 --> 00:30:25,679
and they're primarily there to use the

612
00:30:25,679 --> 00:30:26,880
products

613
00:30:26,880 --> 00:30:28,620
they don't they don't know much about

614
00:30:28,620 --> 00:30:30,899
networking in general no internet

615
00:30:30,899 --> 00:30:32,520
connection networks are typically a

616
00:30:32,520 --> 00:30:33,779
single subnet

617
00:30:33,779 --> 00:30:36,120
uh and then we need a unique ethernet

618
00:30:36,120 --> 00:30:40,140
destination address RFC 4541 which talks

619
00:30:40,140 --> 00:30:42,720
about multicast snooping it had kind of

620
00:30:42,720 --> 00:30:44,940
a survey on switch vendors and their

621
00:30:44,940 --> 00:30:47,399
products and based off of that most

622
00:30:47,399 --> 00:30:49,740
switch vendors do not support looking at

623
00:30:49,740 --> 00:30:52,140
the IPv6 destination address or only

624
00:30:52,140 --> 00:30:54,600
looking at the ethernet address

625
00:30:54,600 --> 00:30:56,399
furthermore the switch parts at the

626
00:30:56,399 --> 00:30:58,320
desired price point for these products

627
00:30:58,320 --> 00:31:00,539
they do not support Source specific

628
00:31:00,539 --> 00:31:03,059
multicast so what we really need here is

629
00:31:03,059 --> 00:31:06,600
a unique destination Mac address for

630
00:31:06,600 --> 00:31:09,299
every individual multicast stream on the

631
00:31:09,299 --> 00:31:10,559
network

632
00:31:10,559 --> 00:31:12,600
we also need it to be a decentralized

633
00:31:12,600 --> 00:31:14,279
solution so that we can avoid a single

634
00:31:14,279 --> 00:31:15,500
point of failure

635
00:31:15,500 --> 00:31:19,860
which is common on networks that kind of

636
00:31:19,860 --> 00:31:23,340
rely on that that provide safety an

637
00:31:23,340 --> 00:31:25,020
operation of a vehicle

638
00:31:25,020 --> 00:31:27,539
so the existing solution for dynamic

639
00:31:27,539 --> 00:31:31,200
assignment madcap discussed in RFC 2730

640
00:31:31,200 --> 00:31:33,899
that relies on a server so that's a

641
00:31:33,899 --> 00:31:35,640
central point of failure and so we

642
00:31:35,640 --> 00:31:37,260
cannot use that directly

643
00:31:37,260 --> 00:31:38,940
and then we also want to provide for

644
00:31:38,940 --> 00:31:40,799
multiple streams coming from the same

645
00:31:40,799 --> 00:31:41,960
host

646
00:31:41,960 --> 00:31:44,460
so there may be different applications

647
00:31:44,460 --> 00:31:46,260
all running on the same host that all

648
00:31:46,260 --> 00:31:49,799
need to send and without some sort of

649
00:31:49,799 --> 00:31:52,200
back Channel communication we need to

650
00:31:52,200 --> 00:31:55,559
have a solution that will allow them to

651
00:31:55,559 --> 00:31:58,500
negotiate with themselves at the same

652
00:31:58,500 --> 00:31:59,940
time that they're negotiating with the

653
00:31:59,940 --> 00:32:02,059
network

654
00:32:03,000 --> 00:32:06,659
um previously we talked about zmap

655
00:32:06,659 --> 00:32:09,539
AAP as there was a draft out there that

656
00:32:09,539 --> 00:32:10,440
would

657
00:32:10,440 --> 00:32:11,100
um

658
00:32:11,100 --> 00:32:12,779
sought to uh

659
00:32:12,779 --> 00:32:15,059
solve this problem but that wasn't

660
00:32:15,059 --> 00:32:17,640
Advanced Beyond draft state so we had

661
00:32:17,640 --> 00:32:18,659
talked about

662
00:32:18,659 --> 00:32:21,720
um kind of resurrecting that but uh

663
00:32:21,720 --> 00:32:24,600
ultimately decided against that so go

664
00:32:24,600 --> 00:32:27,620
ahead and flip to the next slide

665
00:32:27,960 --> 00:32:30,299
so instead we have a solution that we

666
00:32:30,299 --> 00:32:32,940
proposed in this draft up there and

667
00:32:32,940 --> 00:32:35,520
here's kind of an overview of what that

668
00:32:35,520 --> 00:32:37,799
solution entails so if you kind of look

669
00:32:37,799 --> 00:32:40,740
at the next four bullet points is a

670
00:32:40,740 --> 00:32:42,779
steps one through four

671
00:32:42,779 --> 00:32:46,460
so we would update that table or that

672
00:32:46,460 --> 00:32:50,340
section in RFC 3307

673
00:32:50,340 --> 00:32:51,720
um

674
00:32:51,720 --> 00:32:55,380
section 4.3 was specifically for dynamic

675
00:32:55,380 --> 00:32:58,559
allocations and allocated basically half

676
00:32:58,559 --> 00:33:01,080
the range of group IDs to host based

677
00:33:01,080 --> 00:33:03,240
allocations

678
00:33:03,240 --> 00:33:06,539
um and so the idea there is to kind of

679
00:33:06,539 --> 00:33:08,460
subdivide that further and designate a

680
00:33:08,460 --> 00:33:09,840
range specifically for zero

681
00:33:09,840 --> 00:33:12,240
configuration allocations

682
00:33:12,240 --> 00:33:13,919
um and we'll go into specifics on on the

683
00:33:13,919 --> 00:33:15,360
next slide

684
00:33:15,360 --> 00:33:17,220
um kind of step two would be the

685
00:33:17,220 --> 00:33:18,779
application that wants to send a

686
00:33:18,779 --> 00:33:20,460
multicast stream would generate a random

687
00:33:20,460 --> 00:33:23,340
group ID in the zero configuration range

688
00:33:23,340 --> 00:33:25,860
and then step three would be that that

689
00:33:25,860 --> 00:33:28,140
application uses mdns

690
00:33:28,140 --> 00:33:31,440
multicast DNS to ensure that the group

691
00:33:31,440 --> 00:33:34,679
ID is unique just to note there that NBN

692
00:33:34,679 --> 00:33:37,799
s is a zero configuration technology and

693
00:33:37,799 --> 00:33:40,260
that as part of using nbns we would both

694
00:33:40,260 --> 00:33:41,940
be probing

695
00:33:41,940 --> 00:33:45,840
um uh the the multicast DNS records

696
00:33:45,840 --> 00:33:47,820
before the initial use and also

697
00:33:47,820 --> 00:33:50,820
continuously monitor those mdns records

698
00:33:50,820 --> 00:33:52,559
in case somebody else decided that they

699
00:33:52,559 --> 00:33:54,299
were going to use it and and their

700
00:33:54,299 --> 00:33:56,760
probing had somehow failed

701
00:33:56,760 --> 00:33:58,740
uh and then kind of the last step there

702
00:33:58,740 --> 00:34:00,600
is that the application uses the group

703
00:34:00,600 --> 00:34:04,200
by ID to generate the link scoped IPv6

704
00:34:04,200 --> 00:34:06,720
multicast address and then uh goes ahead

705
00:34:06,720 --> 00:34:07,380
and

706
00:34:07,380 --> 00:34:09,719
transmits so in the next two slides

707
00:34:09,719 --> 00:34:11,960
we're going to focus on specifically on

708
00:34:11,960 --> 00:34:17,699
that update to RFC 3307 and um use of

709
00:34:17,699 --> 00:34:21,418
multicast DNS the the random group ID

710
00:34:21,418 --> 00:34:23,760
and then using the group ID to generate

711
00:34:23,760 --> 00:34:25,980
the links go multicast addresses

712
00:34:25,980 --> 00:34:30,980
um fairly straightforward next slide

713
00:34:31,379 --> 00:34:36,300
okay so RFC 3307 section 4.3 it

714
00:34:36,300 --> 00:34:39,800
specifies kind of two ranges in

715
00:34:39,800 --> 00:34:42,418
4.3.1 it talks about server-based

716
00:34:42,418 --> 00:34:46,020
allocations which would be madcap and

717
00:34:46,020 --> 00:34:48,418
then 4.3.2 talks about host based

718
00:34:48,418 --> 00:34:50,159
allocations and in both cases they

719
00:34:50,159 --> 00:34:54,739
specify the range there 800 through FFF

720
00:34:54,739 --> 00:34:58,200
for both of those and the proposal here

721
00:34:58,200 --> 00:35:01,800
is to subdivide that and say half of

722
00:35:01,800 --> 00:35:03,300
that

723
00:35:03,300 --> 00:35:07,500
800 through b ffff would be for madcap

724
00:35:07,500 --> 00:35:10,440
or server-based allocation and then to

725
00:35:10,440 --> 00:35:11,820
to take

726
00:35:11,820 --> 00:35:12,540
um

727
00:35:12,540 --> 00:35:17,160
a range c0 through cff and say that is a

728
00:35:17,160 --> 00:35:19,020
reserved for an mdns base is your

729
00:35:19,020 --> 00:35:21,540
configuration algorithm um

730
00:35:21,540 --> 00:35:25,920
and d00 through Fe FFF that's reserved

731
00:35:25,920 --> 00:35:28,260
for future zero configuration or host

732
00:35:28,260 --> 00:35:31,079
based allocations in case there's other

733
00:35:31,079 --> 00:35:33,660
ones in the future and then

734
00:35:33,660 --> 00:35:35,880
um something that was kind of left out

735
00:35:35,880 --> 00:35:38,760
of our c3307 that I think is important

736
00:35:38,760 --> 00:35:41,339
to note here is that the range ff00

737
00:35:41,339 --> 00:35:45,119
through ffff is for solicited node

738
00:35:45,119 --> 00:35:46,859
multicast addresses and so we wouldn't

739
00:35:46,859 --> 00:35:49,920
want to uh to allocate those or indicate

740
00:35:49,920 --> 00:35:52,500
that those are available for a

741
00:35:52,500 --> 00:35:55,320
a dynamic allocation and that should be

742
00:35:55,320 --> 00:35:57,839
reflected in the table

743
00:35:57,839 --> 00:36:00,799
next slide please

744
00:36:01,440 --> 00:36:03,420
um so kind of two slides here talking

745
00:36:03,420 --> 00:36:05,579
about how we would use mdns to ensure

746
00:36:05,579 --> 00:36:08,460
that group ID is unique first a note on

747
00:36:08,460 --> 00:36:12,480
on how DNS uses PTR records to perform

748
00:36:12,480 --> 00:36:14,520
reverse lookups and we see the same

749
00:36:14,520 --> 00:36:19,460
pattern in mdns as well so RFC 8501

750
00:36:19,460 --> 00:36:22,380
has these examples here so if you want

751
00:36:22,380 --> 00:36:24,599
to provide a reverse lookup record for

752
00:36:24,599 --> 00:36:26,660
the IP address

753
00:36:26,660 --> 00:36:30,300
192.0.2.1 you create you create a PTR

754
00:36:30,300 --> 00:36:34,280
record with the name

755
00:36:36,740 --> 00:36:38,300
1.2.0.192.in

756
00:36:38,300 --> 00:36:43,400
adder.arpa and that in-adder dot arpa is

757
00:36:43,400 --> 00:36:47,160
specifically for ipv4 addresses and note

758
00:36:47,160 --> 00:36:49,800
that the the octets are listed there in

759
00:36:49,800 --> 00:36:52,859
reverse order least significant octet

760
00:36:52,859 --> 00:36:56,119
first similarly when you go to IPv6

761
00:36:56,119 --> 00:36:59,160
you're taking your IPv6 address and

762
00:36:59,160 --> 00:37:01,740
you're you're taking each hexadecimal

763
00:37:01,740 --> 00:37:02,660
number

764
00:37:02,660 --> 00:37:05,460
and putting it there starting with the

765
00:37:05,460 --> 00:37:07,440
least significant and putting a dot in

766
00:37:07,440 --> 00:37:09,960
between and then you end with ip6 DOT

767
00:37:09,960 --> 00:37:11,280
Arbor

768
00:37:11,280 --> 00:37:13,740
so the proposal uses a PTR record for

769
00:37:13,740 --> 00:37:15,500
layer 2 addresses

770
00:37:15,500 --> 00:37:18,540
and this specifically focus on on

771
00:37:18,540 --> 00:37:20,700
ethernet addresses if there are other

772
00:37:20,700 --> 00:37:22,260
layer 2

773
00:37:22,260 --> 00:37:23,339
um

774
00:37:23,339 --> 00:37:25,200
technologies that we need to support we

775
00:37:25,200 --> 00:37:28,560
would need to have separate arpa domains

776
00:37:28,560 --> 00:37:30,240
for those but in this case the example

777
00:37:30,240 --> 00:37:33,359
being your your Mac address there which

778
00:37:33,359 --> 00:37:36,240
is a IPv6 multicast address because it

779
00:37:36,240 --> 00:37:39,660
starts with 3333 that again takes the

780
00:37:39,660 --> 00:37:42,780
least significant hex digit and

781
00:37:42,780 --> 00:37:46,760
separates it by dots and ends with eth

782
00:37:46,760 --> 00:37:51,599
Dash adder.arpa so that eth Adder is a

783
00:37:51,599 --> 00:37:54,500
new allocation in the arpa

784
00:37:54,500 --> 00:37:57,420
reserve table

785
00:37:57,420 --> 00:38:00,300
um so once the uh the application it

786
00:38:00,300 --> 00:38:04,079
generates its random group ID and it it

787
00:38:04,079 --> 00:38:06,180
determines the ethernet address from

788
00:38:06,180 --> 00:38:07,560
there

789
00:38:07,560 --> 00:38:10,800
um and it then probes the network for

790
00:38:10,800 --> 00:38:14,460
for a PTR record with that name

791
00:38:14,460 --> 00:38:17,099
and it uses the mdns probing algorithm

792
00:38:17,099 --> 00:38:21,119
described in RC oh in the multi-sd and

793
00:38:21,119 --> 00:38:24,359
srfc in section 8.1 it sets up a

794
00:38:24,359 --> 00:38:28,140
continuous query for that PTR record

795
00:38:28,140 --> 00:38:28,920
um

796
00:38:28,920 --> 00:38:31,380
and continuous query means that if

797
00:38:31,380 --> 00:38:33,060
anybody else also generates that and

798
00:38:33,060 --> 00:38:35,820
starts advertising it then then your

799
00:38:35,820 --> 00:38:39,180
multi-gast DNS or ndns responder

800
00:38:39,180 --> 00:38:41,280
software will let you know

801
00:38:41,280 --> 00:38:44,180
next slide please

802
00:38:45,119 --> 00:38:47,220
so if the programming algorithm

803
00:38:47,220 --> 00:38:49,260
completes without any conflict then the

804
00:38:49,260 --> 00:38:51,180
application begins advertising its own

805
00:38:51,180 --> 00:38:53,460
PTR record using that name

806
00:38:53,460 --> 00:38:56,760
and the uh the the format of the PTR

807
00:38:56,760 --> 00:38:59,160
records there's a ptrd name field in

808
00:38:59,160 --> 00:39:02,099
there and that would be the uh the

809
00:39:02,099 --> 00:39:05,940
device's hostname a colon and the source

810
00:39:05,940 --> 00:39:07,859
Port of the multicast stream um so

811
00:39:07,859 --> 00:39:10,400
there's an example there my

812
00:39:10,400 --> 00:39:12,800
host.localcolon

813
00:39:12,800 --> 00:39:14,540
56296

814
00:39:14,540 --> 00:39:16,859
and just wanted to note there that the

815
00:39:16,859 --> 00:39:18,240
reason that the source code is

816
00:39:18,240 --> 00:39:19,680
integrated in this matter that allows

817
00:39:19,680 --> 00:39:21,960
for multiple applications to be on the

818
00:39:21,960 --> 00:39:23,760
same host

819
00:39:23,760 --> 00:39:26,880
um and so if if you had two applications

820
00:39:26,880 --> 00:39:28,680
that on the same host that happened to

821
00:39:28,680 --> 00:39:31,440
generate the same PTR record there would

822
00:39:31,440 --> 00:39:34,079
be no way to know that without including

823
00:39:34,079 --> 00:39:36,599
that that Source Port there this way

824
00:39:36,599 --> 00:39:39,720
your multicast software will tell you oh

825
00:39:39,720 --> 00:39:43,680
hey I found this record and it's

826
00:39:43,680 --> 00:39:45,420
it's using the same Source Port that

827
00:39:45,420 --> 00:39:47,400
you're advertising therefore it is you

828
00:39:47,400 --> 00:39:51,560
and not somebody else on the same host

829
00:39:51,660 --> 00:39:54,660
um and then the existing draft

830
00:39:54,660 --> 00:39:57,119
basically has a recommendation that the

831
00:39:57,119 --> 00:39:58,859
application should retain that group ID

832
00:39:58,859 --> 00:40:00,780
value in long-term storage and use it

833
00:40:00,780 --> 00:40:02,400
the next time the multicast stream is

834
00:40:02,400 --> 00:40:03,900
transmitted

835
00:40:03,900 --> 00:40:06,000
um so this when you first set up a

836
00:40:06,000 --> 00:40:07,980
network there may be some conflicts that

837
00:40:07,980 --> 00:40:10,920
occur but by storing the group ID value

838
00:40:10,920 --> 00:40:12,599
and long-term storage and reusing it

839
00:40:12,599 --> 00:40:15,720
next time that basically ensures that

840
00:40:15,720 --> 00:40:18,240
your you're you're only going to run

841
00:40:18,240 --> 00:40:20,520
into that conflict the first time the

842
00:40:20,520 --> 00:40:22,320
network has started up or anytime you

843
00:40:22,320 --> 00:40:24,119
you might add a new device to the

844
00:40:24,119 --> 00:40:26,880
network after that that conflicts

845
00:40:26,880 --> 00:40:28,740
shouldn't happen and your network won't

846
00:40:28,740 --> 00:40:31,079
have to go through that

847
00:40:31,079 --> 00:40:33,240
um that conflict resolution process

848
00:40:33,240 --> 00:40:34,980
where you have to generate a new group

849
00:40:34,980 --> 00:40:40,140
ID probe again and transmit or register

850
00:40:40,140 --> 00:40:42,839
that PTR record

851
00:40:42,839 --> 00:40:45,920
next slide

852
00:40:45,960 --> 00:40:48,540
so that's that's basically it

853
00:40:48,540 --> 00:40:52,579
um wanted to open up for any questions

854
00:40:56,760 --> 00:40:59,160
hi Nate this is Dino

855
00:40:59,160 --> 00:41:01,800
um I have a question you said the source

856
00:41:01,800 --> 00:41:03,540
could have multiple applications running

857
00:41:03,540 --> 00:41:06,180
can the receiver have multiple

858
00:41:06,180 --> 00:41:07,980
applications running as well

859
00:41:07,980 --> 00:41:09,300
foreign

860
00:41:09,300 --> 00:41:12,720
yes okay and could you go to the last

861
00:41:12,720 --> 00:41:13,980
slide

862
00:41:13,980 --> 00:41:16,079
you said you have to advertise the port

863
00:41:16,079 --> 00:41:18,839
number uh you probably should advertise

864
00:41:18,839 --> 00:41:21,480
the port number with the multicast

865
00:41:21,480 --> 00:41:23,760
address so you know which port to use

866
00:41:23,760 --> 00:41:27,060
with which multicast address because

867
00:41:27,060 --> 00:41:28,680
there could a source that's running

868
00:41:28,680 --> 00:41:30,900
multiple applications needs to use

869
00:41:30,900 --> 00:41:34,400
multiple ports correct

870
00:41:35,720 --> 00:41:37,980
are you going to use the same port with

871
00:41:37,980 --> 00:41:39,300
multiple different

872
00:41:39,300 --> 00:41:40,619
um addresses

873
00:41:40,619 --> 00:41:42,060
foreign

874
00:41:42,060 --> 00:41:44,640
so in this case uh are you meaning like

875
00:41:44,640 --> 00:41:46,500
the destination port or the source Port

876
00:41:46,500 --> 00:41:49,680
this 56 296 on this slide however you

877
00:41:49,680 --> 00:41:52,260
intend to use that

878
00:41:52,260 --> 00:41:54,000
what are you using that for Destination

879
00:41:54,000 --> 00:41:56,220
port or a source port or both source and

880
00:41:56,220 --> 00:41:58,920
destination or the same port

881
00:41:58,920 --> 00:42:01,560
uh so the the source and destination are

882
00:42:01,560 --> 00:42:03,780
going to be different ports uh the the

883
00:42:03,780 --> 00:42:07,740
exam or the the record here contains the

884
00:42:07,740 --> 00:42:09,660
source Port of the Stream

885
00:42:09,660 --> 00:42:10,859
and then you're going to use a

886
00:42:10,859 --> 00:42:12,720
well-known destination port

887
00:42:12,720 --> 00:42:15,060
that's correct yeah okay

888
00:42:15,060 --> 00:42:18,119
so um so answer my question then the if

889
00:42:18,119 --> 00:42:19,820
the source is running two applications

890
00:42:19,820 --> 00:42:22,920
56 296 is being run for one application

891
00:42:22,920 --> 00:42:25,380
are you advertising another port for the

892
00:42:25,380 --> 00:42:27,660
other application

893
00:42:27,660 --> 00:42:30,060
right so what we would hope to see here

894
00:42:30,060 --> 00:42:31,800
is that the two different applications

895
00:42:31,800 --> 00:42:34,619
generate different group IDs and so the

896
00:42:34,619 --> 00:42:37,619
the name of the PTR record

897
00:42:37,619 --> 00:42:41,040
um is going to be uh different um it

898
00:42:41,040 --> 00:42:43,079
would have a different uh set of

899
00:42:43,079 --> 00:42:46,460
different address dot

900
00:42:46,460 --> 00:42:49,500
adder.arpa would be the the name of the

901
00:42:49,500 --> 00:42:52,320
record and then the ptrd name would also

902
00:42:52,320 --> 00:42:54,740
be different

903
00:42:55,680 --> 00:42:57,599
that's fine but that means you're going

904
00:42:57,599 --> 00:42:59,280
to use the same source and destination

905
00:42:59,280 --> 00:43:01,440
port for the different streams I don't

906
00:43:01,440 --> 00:43:02,940
think you can open up a socket to do

907
00:43:02,940 --> 00:43:03,599
that

908
00:43:03,599 --> 00:43:04,680
I think you have to have a different

909
00:43:04,680 --> 00:43:06,540
Source Port per stream

910
00:43:06,540 --> 00:43:09,599
well yes that's correct so so in this

911
00:43:09,599 --> 00:43:11,099
case if you have two different

912
00:43:11,099 --> 00:43:13,260
applications they're they're the record

913
00:43:13,260 --> 00:43:15,240
name would be different because the the

914
00:43:15,240 --> 00:43:16,980
address the destination address would be

915
00:43:16,980 --> 00:43:18,720
different and the source Port would also

916
00:43:18,720 --> 00:43:20,880
be different

917
00:43:20,880 --> 00:43:23,040
okay so there's a list of these my host

918
00:43:23,040 --> 00:43:24,720
dot local

919
00:43:24,720 --> 00:43:28,319
port numbers that'll be advertised right

920
00:43:28,319 --> 00:43:30,060
right

921
00:43:30,060 --> 00:43:32,400
it's less about advertising those and

922
00:43:32,400 --> 00:43:35,780
more about advertising the address

923
00:43:38,160 --> 00:43:40,440
okay then why then why do you have to

924
00:43:40,440 --> 00:43:42,240
advertise the report if the if the other

925
00:43:42,240 --> 00:43:43,560
side's just going to listen on the

926
00:43:43,560 --> 00:43:45,720
well-known Port then you don't need to

927
00:43:45,720 --> 00:43:48,420
advertise the source port

928
00:43:48,420 --> 00:43:51,060
right so what can

929
00:43:51,060 --> 00:43:53,160
I would say

930
00:43:53,160 --> 00:43:54,420
okay

931
00:43:54,420 --> 00:43:56,540
um

932
00:43:58,440 --> 00:44:00,119
yeah we can see if there's any other

933
00:44:00,119 --> 00:44:01,500
questions and if not I'll answer that

934
00:44:01,500 --> 00:44:02,400
one

935
00:44:02,400 --> 00:44:06,000
okay yeah let's just dig

936
00:44:06,000 --> 00:44:08,760
um it's one thing about the column I

937
00:44:08,760 --> 00:44:11,040
don't think that's allowed in a domain

938
00:44:11,040 --> 00:44:12,359
name

939
00:44:12,359 --> 00:44:15,240
could be wrong but uh

940
00:44:15,240 --> 00:44:17,880
yeah I'm not so sure if you can use that

941
00:44:17,880 --> 00:44:19,680
um but otherwise

942
00:44:19,680 --> 00:44:22,500
um if you're assuming that any any

943
00:44:22,500 --> 00:44:24,599
application using a group ID in this

944
00:44:24,599 --> 00:44:27,960
range would use this scheme right

945
00:44:27,960 --> 00:44:30,599
that's right yeah okay

946
00:44:30,599 --> 00:44:31,619
um

947
00:44:31,619 --> 00:44:34,200
so we are not sure what the Mad cap

948
00:44:34,200 --> 00:44:36,900
status is if if it's being used for IPv6

949
00:44:36,900 --> 00:44:40,140
today but um we may have to update you

950
00:44:40,140 --> 00:44:42,420
know madcap RFC or something like that

951
00:44:42,420 --> 00:44:45,839
since we are constraining you know what

952
00:44:45,839 --> 00:44:48,359
range they can use

953
00:44:48,359 --> 00:44:50,400
uh we probably need some review of this

954
00:44:50,400 --> 00:44:54,319
I think from people working on mdns or

955
00:44:54,319 --> 00:44:59,520
possibly not sure some IPv6 experts as

956
00:44:59,520 --> 00:45:01,700
well

957
00:45:02,099 --> 00:45:04,260
but let's show that it works well for us

958
00:45:04,260 --> 00:45:05,940
you know that we have a design that

959
00:45:05,940 --> 00:45:09,660
works for your use case first of all

960
00:45:09,660 --> 00:45:14,180
okay that's my comments Alvaro

961
00:45:16,520 --> 00:45:19,740
algorithm I was going to try and do some

962
00:45:19,740 --> 00:45:21,180
of the same points that Stig is making

963
00:45:21,180 --> 00:45:23,220
about

964
00:45:23,220 --> 00:45:24,540
um you know what you're doing in this

965
00:45:24,540 --> 00:45:26,160
draft uh if I understood correctly

966
00:45:26,160 --> 00:45:29,640
you're not really changing mdns

967
00:45:29,640 --> 00:45:32,700
you're using mdns that's correct you

968
00:45:32,700 --> 00:45:34,380
know distribution and all this stuff and

969
00:45:34,380 --> 00:45:36,060
then the other thing we're doing here is

970
00:45:36,060 --> 00:45:40,680
you're changing the ranges in 33

971
00:45:40,680 --> 00:45:42,599
whatever

972
00:45:42,599 --> 00:45:43,560
um

973
00:45:43,560 --> 00:45:44,940
right

974
00:45:44,940 --> 00:45:46,920
yeah 3307.

975
00:45:46,920 --> 00:45:49,140
so you know it sounds like the working

976
00:45:49,140 --> 00:45:50,940
group in general even though you I don't

977
00:45:50,940 --> 00:45:52,800
think have asked for adoption

978
00:45:52,800 --> 00:45:55,440
uh things that this is you know a fine

979
00:45:55,440 --> 00:45:57,660
solution uh there's some questions that

980
00:45:57,660 --> 00:45:58,980
you can you know maybe address or

981
00:45:58,980 --> 00:46:00,060
whatever

982
00:46:00,060 --> 00:46:01,800
um the question that I have not for you

983
00:46:01,800 --> 00:46:03,180
but for

984
00:46:03,180 --> 00:46:06,780
the chairs mostly and is

985
00:46:06,780 --> 00:46:07,859
um

986
00:46:07,859 --> 00:46:09,960
should we do this work

987
00:46:09,960 --> 00:46:12,599
uh meaning this is really an application

988
00:46:12,599 --> 00:46:17,160
of mdns and an update of an Ina registry

989
00:46:17,160 --> 00:46:20,339
so what I would probably want to ask you

990
00:46:20,339 --> 00:46:23,700
guys uh stegan and Mike is to figure out

991
00:46:23,700 --> 00:46:25,500
with

992
00:46:25,500 --> 00:46:29,160
um probably the I think it's the DNS is

993
00:46:29,160 --> 00:46:31,319
the working group that does some DNS

994
00:46:31,319 --> 00:46:33,839
and maybe six men

995
00:46:33,839 --> 00:46:36,960
to figure out what do we do right I mean

996
00:46:36,960 --> 00:46:38,579
it's probably okay for us to process

997
00:46:38,579 --> 00:46:39,900
this document

998
00:46:39,900 --> 00:46:41,579
since it's a multicast application in

999
00:46:41,579 --> 00:46:43,079
the end

1000
00:46:43,079 --> 00:46:44,099
um

1001
00:46:44,099 --> 00:46:46,160
but we'll need to coordinate with them

1002
00:46:46,160 --> 00:46:51,060
the RC that 3307 was produced by working

1003
00:46:51,060 --> 00:46:54,060
group that doesn't exist anymore

1004
00:46:54,060 --> 00:46:58,400
um and so we need to figure out who

1005
00:46:58,760 --> 00:47:02,460
who uh you know still owns that um and

1006
00:47:02,460 --> 00:47:03,900
and

1007
00:47:03,900 --> 00:47:05,940
um how can we really modify the registry

1008
00:47:05,940 --> 00:47:08,099
if uh six men or whoever they appear six

1009
00:47:08,099 --> 00:47:10,800
guys uh who are going to own this are

1010
00:47:10,800 --> 00:47:13,859
okay with that and and how do we get uh

1011
00:47:13,859 --> 00:47:16,200
to that so we'll need an awkward Nation

1012
00:47:16,200 --> 00:47:18,839
with with those other working groups uh

1013
00:47:18,839 --> 00:47:20,760
it might be that you know given that

1014
00:47:20,760 --> 00:47:22,619
we're saying that this is a good

1015
00:47:22,619 --> 00:47:26,520
multi-ass solution that we can uh you'll

1016
00:47:26,520 --> 00:47:28,740
let mdns or uh the NSD for example

1017
00:47:28,740 --> 00:47:30,480
process a document so we need to figure

1018
00:47:30,480 --> 00:47:31,920
that out

1019
00:47:31,920 --> 00:47:33,720
um and and you know the the less

1020
00:47:33,720 --> 00:47:37,440
overhead that Nate can see the better

1021
00:47:37,440 --> 00:47:40,920
uh so you guys do all the work and let

1022
00:47:40,920 --> 00:47:42,720
me know if you need anything from you

1023
00:47:42,720 --> 00:47:46,200
know we have now thanks yeah I think uh

1024
00:47:46,200 --> 00:47:48,060
this is Mike mcbradick stig's gonna have

1025
00:47:48,060 --> 00:47:49,319
to drive that part because I'm on the

1026
00:47:49,319 --> 00:47:51,420
draft and I think it's a good idea so um

1027
00:47:51,420 --> 00:47:53,400
Stig will will drive that Brian hiberman

1028
00:47:53,400 --> 00:47:57,060
is the one and only author of 3307 so

1029
00:47:57,060 --> 00:47:58,740
I don't see him on the Queue but we'll

1030
00:47:58,740 --> 00:48:00,300
make sure that he's involved in this as

1031
00:48:00,300 --> 00:48:02,819
well and last comment is is magma that

1032
00:48:02,819 --> 00:48:03,900
working group you were talking about

1033
00:48:03,900 --> 00:48:07,040
that no longer exists

1034
00:48:07,200 --> 00:48:11,760
so 307 was done in malloc Malik which

1035
00:48:11,760 --> 00:48:13,319
sounded like multicast allocation or

1036
00:48:13,319 --> 00:48:15,420
something which I just looked and it

1037
00:48:15,420 --> 00:48:17,339
happened to be in the transport area for

1038
00:48:17,339 --> 00:48:19,140
some reason okay

1039
00:48:19,140 --> 00:48:20,940
um I don't know why

1040
00:48:20,940 --> 00:48:23,599
um so it

1041
00:48:23,599 --> 00:48:25,980
we probably could ask Brian because it

1042
00:48:25,980 --> 00:48:28,619
turns out that the Registries are expert

1043
00:48:28,619 --> 00:48:31,560
review registries

1044
00:48:31,560 --> 00:48:33,780
um I looked at the Ayanna page and

1045
00:48:33,780 --> 00:48:36,660
there's no expert assigned I would have

1046
00:48:36,660 --> 00:48:37,619
assumed that maybe you would have been

1047
00:48:37,619 --> 00:48:40,380
Brian since he wrote the RFC

1048
00:48:40,380 --> 00:48:43,079
um but uh you know so we need to to

1049
00:48:43,079 --> 00:48:45,240
probably talk to

1050
00:48:45,240 --> 00:48:48,660
um also uh Eric

1051
00:48:48,660 --> 00:48:50,760
Clive well Eric Sarah Klein and Gregory

1052
00:48:50,760 --> 00:48:52,440
Frank to figure out because they're

1053
00:48:52,440 --> 00:48:53,579
probably going to have to get an expert

1054
00:48:53,579 --> 00:48:55,140
which would be great if it was Brian

1055
00:48:55,140 --> 00:48:57,060
because he's already you know maybe

1056
00:48:57,060 --> 00:48:58,680
familiar with this and has at least in

1057
00:48:58,680 --> 00:48:59,579
the draft

1058
00:48:59,579 --> 00:49:02,040
and and all he needs to do is approve if

1059
00:49:02,040 --> 00:49:03,960
it's okay for the range to be different

1060
00:49:03,960 --> 00:49:08,040
right not the application itself

1061
00:49:08,040 --> 00:49:10,800
um so I mean this is just a bunch of

1062
00:49:10,800 --> 00:49:12,660
different parts that we don't control

1063
00:49:12,660 --> 00:49:14,099
that we need to just make sure that

1064
00:49:14,099 --> 00:49:16,440
they're okay right yeah I think we also

1065
00:49:16,440 --> 00:49:18,300
may have to look at madcap you know

1066
00:49:18,300 --> 00:49:20,819
other implementations are they today

1067
00:49:20,819 --> 00:49:23,040
using that large arrange

1068
00:49:23,040 --> 00:49:25,740
but yeah well into that and contact

1069
00:49:25,740 --> 00:49:27,240
people you know

1070
00:49:27,240 --> 00:49:29,220
thanks so

1071
00:49:29,220 --> 00:49:31,920
um to respond to your comment

1072
00:49:31,920 --> 00:49:33,900
um you know we live in a decentralized

1073
00:49:33,900 --> 00:49:36,780
world now and uh we need unique group

1074
00:49:36,780 --> 00:49:38,640
allocation for applications in general

1075
00:49:38,640 --> 00:49:41,220
the problem needs to be solved it turns

1076
00:49:41,220 --> 00:49:43,260
out this solution is solving it only for

1077
00:49:43,260 --> 00:49:45,720
a layer two Network I think we need to

1078
00:49:45,720 --> 00:49:47,280
generalize it and do it for layer three

1079
00:49:47,280 --> 00:49:49,800
as well so

1080
00:49:49,800 --> 00:49:52,260
um so when you talk about it in that

1081
00:49:52,260 --> 00:49:54,359
context then this working group should

1082
00:49:54,359 --> 00:49:57,660
work on it yeah yes uh Stig again yeah I

1083
00:49:57,660 --> 00:49:59,819
agree and and that's actually one of my

1084
00:49:59,819 --> 00:50:02,280
concerns with this maybe is if you come

1085
00:50:02,280 --> 00:50:04,560
up with something like site local or or

1086
00:50:04,560 --> 00:50:06,839
more Global you need to make sure that

1087
00:50:06,839 --> 00:50:08,760
they don't conflict with each other

1088
00:50:08,760 --> 00:50:12,060
I'm also wondering today if someone uses

1089
00:50:12,060 --> 00:50:14,460
a group address in this range just by

1090
00:50:14,460 --> 00:50:17,339
chance or whatever how do we gracefully

1091
00:50:17,339 --> 00:50:21,119
you know detect that or or how does what

1092
00:50:21,119 --> 00:50:22,680
does it work well that's that's why he

1093
00:50:22,680 --> 00:50:24,480
wants to do an allocation that's

1094
00:50:24,480 --> 00:50:26,880
dedicated to to this so nobody else

1095
00:50:26,880 --> 00:50:29,099
should use it just like Nate is staying

1096
00:50:29,099 --> 00:50:30,960
away from the existing allocations that

1097
00:50:30,960 --> 00:50:32,400
also means that you know someone

1098
00:50:32,400 --> 00:50:34,560
deploying an app or just choosing a

1099
00:50:34,560 --> 00:50:36,000
random address that need to be aware

1100
00:50:36,000 --> 00:50:37,619
that they should stay away from this

1101
00:50:37,619 --> 00:50:40,619
range or yeah yeah I I have the same

1102
00:50:40,619 --> 00:50:42,599
concern you do because

1103
00:50:42,599 --> 00:50:44,579
um this solution is using multicast to

1104
00:50:44,579 --> 00:50:47,280
allocate a multicast uh address and the

1105
00:50:47,280 --> 00:50:49,140
reason it works is because it's on Layer

1106
00:50:49,140 --> 00:50:50,160
Two

1107
00:50:50,160 --> 00:50:52,140
but one thing I just want to draft that

1108
00:50:52,140 --> 00:50:54,359
will help us so is that you know

1109
00:50:54,359 --> 00:50:57,119
if an application receives packets to

1110
00:50:57,119 --> 00:50:58,859
this group that is not coming from the

1111
00:50:58,859 --> 00:51:01,440
correct Source then you should stop

1112
00:51:01,440 --> 00:51:03,780
using it so that that should help

1113
00:51:03,780 --> 00:51:06,200
okay

1114
00:51:07,140 --> 00:51:08,880
um yeah also thank you very much for the

1115
00:51:08,880 --> 00:51:10,980
draft and I also don't know yet what to

1116
00:51:10,980 --> 00:51:12,720
think about the technical solution but

1117
00:51:12,720 --> 00:51:16,859
you know as as much as as as I likely

1118
00:51:16,859 --> 00:51:19,619
may also run into it to issues of how

1119
00:51:19,619 --> 00:51:22,260
good it is in the end right I mean this

1120
00:51:22,260 --> 00:51:23,760
is not the first time that the best

1121
00:51:23,760 --> 00:51:25,980
thing we we were able to actually manage

1122
00:51:25,980 --> 00:51:28,260
to get done isn't the best thing we

1123
00:51:28,260 --> 00:51:30,780
would like to see and you know and in

1124
00:51:30,780 --> 00:51:33,000
doubt I would rather err on the side of

1125
00:51:33,000 --> 00:51:34,800
getting something useful deployed than

1126
00:51:34,800 --> 00:51:37,740
waiting out for something much better we

1127
00:51:37,740 --> 00:51:40,399
can't figure out

1128
00:51:41,099 --> 00:51:43,220
yeah

1129
00:51:43,680 --> 00:51:47,160
all right okay thanks uh yeah so I think

1130
00:51:47,160 --> 00:51:50,240
I'll uh reach out to to Brian and

1131
00:51:50,240 --> 00:51:52,559
potentially some other people and get

1132
00:51:52,559 --> 00:51:54,599
some input and uh

1133
00:51:54,599 --> 00:51:56,940
taking a working group we yeah we would

1134
00:51:56,940 --> 00:51:58,380
like you all to

1135
00:51:58,380 --> 00:52:00,480
read this and you know see if you like

1136
00:52:00,480 --> 00:52:02,400
the idea see if you can come up with

1137
00:52:02,400 --> 00:52:05,579
something better or improvements to this

1138
00:52:05,579 --> 00:52:07,079
um

1139
00:52:07,079 --> 00:52:08,880
so

1140
00:52:08,880 --> 00:52:10,740
yeah I kind of wonder how many people

1141
00:52:10,740 --> 00:52:12,240
have read this

1142
00:52:12,240 --> 00:52:13,680
um

1143
00:52:13,680 --> 00:52:15,839
I don't think we're ready to adopt yet

1144
00:52:15,839 --> 00:52:20,280
but uh kind of curious just if

1145
00:52:20,280 --> 00:52:22,500
you know if mostly have read it or if

1146
00:52:22,500 --> 00:52:26,180
it's mostly new to the working group

1147
00:52:26,339 --> 00:52:28,559
I guess we needed that Paul if you want

1148
00:52:28,559 --> 00:52:31,800
to check that yeah

1149
00:52:31,800 --> 00:52:34,500
um yeah so just to get some quick idea

1150
00:52:34,500 --> 00:52:36,480
and just want to do a quick pause to see

1151
00:52:36,480 --> 00:52:41,720
how many people have read this documents

1152
00:53:26,099 --> 00:53:28,200
yeah think we're okay then we don't need

1153
00:53:28,200 --> 00:53:31,619
to know exact numbers but I suffer see

1154
00:53:31,619 --> 00:53:33,599
six people I've read it and six people

1155
00:53:33,599 --> 00:53:37,079
have not read it so that's really good

1156
00:53:37,079 --> 00:53:39,780
um yeah so please

1157
00:53:39,780 --> 00:53:42,119
please read this document if you're

1158
00:53:42,119 --> 00:53:44,339
interested and any feedback on the list

1159
00:53:44,339 --> 00:53:46,260
would be great

1160
00:53:46,260 --> 00:53:48,359
and in the meantime before the next

1161
00:53:48,359 --> 00:53:51,839
meeting I'll uh yeah reach out to some

1162
00:53:51,839 --> 00:53:56,058
external people and see what we can do

1163
00:53:57,300 --> 00:53:58,920
um

1164
00:53:58,920 --> 00:54:01,099
all right

1165
00:54:01,099 --> 00:54:05,160
Oh I thought I did I thought I canceled

1166
00:54:05,160 --> 00:54:07,640
it but

1167
00:54:10,500 --> 00:54:13,380
oh wait I just need to go back I think

1168
00:54:13,380 --> 00:54:15,119
you just need to go back to

1169
00:54:15,119 --> 00:54:16,440
um

1170
00:54:16,440 --> 00:54:19,160
you know

1171
00:54:23,700 --> 00:54:27,740
I don't know I don't know either yeah

1172
00:54:30,800 --> 00:54:35,300
you're gonna stop sharing and yeah

1173
00:54:35,339 --> 00:54:37,559
okay so that's stuck on there that's not

1174
00:54:37,559 --> 00:54:38,760
me anymore

1175
00:54:38,760 --> 00:54:42,480
right so I was thinking

1176
00:54:42,480 --> 00:54:45,119
huh what

1177
00:54:45,119 --> 00:54:50,300
is your pool closed yeah let me see

1178
00:54:51,000 --> 00:54:55,260
yeah you know as it's reopened but

1179
00:54:55,260 --> 00:54:58,440
but this is on the that's it's not on

1180
00:54:58,440 --> 00:55:00,920
your computer

1181
00:55:04,319 --> 00:55:09,200
you can try to reopen and close it again

1182
00:55:09,839 --> 00:55:12,000
or maybe I did this Miss slapping to end

1183
00:55:12,000 --> 00:55:13,800
session

1184
00:55:13,800 --> 00:55:16,740
okay I think that's something okay very

1185
00:55:16,740 --> 00:55:19,879
good okay

1186
00:55:19,920 --> 00:55:22,619
yeah I think this misses just get it off

1187
00:55:22,619 --> 00:55:24,599
my screen but then session is actually

1188
00:55:24,599 --> 00:55:26,819
ending in the poll okay thank you Nate

1189
00:55:26,819 --> 00:55:30,240
appreciate your time go to bed it's late

1190
00:55:30,240 --> 00:55:33,319
and hungry

1191
00:55:38,460 --> 00:55:41,180
see online

1192
00:55:42,240 --> 00:55:47,400
hi hi Mike can you hear me yeah go ahead

1193
00:55:47,400 --> 00:55:51,359
okay uh hello everyone I'm hung ji from

1194
00:55:51,359 --> 00:55:54,300
erosion uh now let me today let me

1195
00:55:54,300 --> 00:55:58,099
introduce the new individual draft about

1196
00:55:58,099 --> 00:56:01,260
European multicast young model

1197
00:56:01,260 --> 00:56:04,220
on that space

1198
00:56:05,420 --> 00:56:07,980
this is the first version for

1199
00:56:07,980 --> 00:56:11,700
presentation another and the effort is

1200
00:56:11,700 --> 00:56:14,400
from when it comes the young design team

1201
00:56:14,400 --> 00:56:18,119
we are from Arizona sales call IBM

1202
00:56:18,119 --> 00:56:20,760
Channel mobile and Juniper

1203
00:56:20,760 --> 00:56:23,660
next please

1204
00:56:25,079 --> 00:56:27,599
and now let me introduce some background

1205
00:56:27,599 --> 00:56:29,180
about this draft

1206
00:56:29,180 --> 00:56:33,240
there is a class ATF based European

1207
00:56:33,240 --> 00:56:37,619
young it defines ITF young data model

1208
00:56:37,619 --> 00:56:40,319
for internet VPN services

1209
00:56:40,319 --> 00:56:44,220
and it covers the following uh five

1210
00:56:44,220 --> 00:56:49,460
types of European root are defined in RC

1211
00:56:49,460 --> 00:56:53,599
7 4 3 2 and

1212
00:56:53,599 --> 00:56:59,760
rc9136 uh the type 1 is the internet Out

1213
00:56:59,760 --> 00:57:03,200
Auto Discovery root Tab 2

1214
00:57:03,200 --> 00:57:07,260
the Mac API what has been root it helps

1215
00:57:07,260 --> 00:57:09,680
reading inclusive

1216
00:57:09,680 --> 00:57:13,400
multicast United root

1217
00:57:13,400 --> 00:57:17,760
the abbreviations is is the ml root and

1218
00:57:17,760 --> 00:57:21,480
therefore the inner segment root and

1219
00:57:21,480 --> 00:57:25,940
I've file the IP prefix root uh

1220
00:57:25,940 --> 00:57:29,180
nice please

1221
00:57:31,079 --> 00:57:35,540
and this year uh the RFC

1222
00:57:35,540 --> 00:57:39,680
9251 was published

1223
00:57:39,680 --> 00:57:44,400
in June this year in this uh

1224
00:57:44,400 --> 00:57:48,480
and this RFC document describes the hmp

1225
00:57:48,480 --> 00:57:53,640
MLD proxy for European it defines three

1226
00:57:53,640 --> 00:57:57,240
new European root types to carry the

1227
00:57:57,240 --> 00:58:03,180
hmpl MMD membership reports uh

1228
00:58:03,599 --> 00:58:05,579
so

1229
00:58:05,579 --> 00:58:09,059
they are the type things from type 6 to

1230
00:58:09,059 --> 00:58:14,700
type 7 2 type 8 times 6 is the selective

1231
00:58:14,700 --> 00:58:18,059
money cards the ethernet type root uh

1232
00:58:18,059 --> 00:58:21,900
the abbreviation is the Smart root the

1233
00:58:21,900 --> 00:58:25,020
purpose of this route is to distribute

1234
00:58:25,020 --> 00:58:29,460
the host intent to receive the multicast

1235
00:58:29,460 --> 00:58:31,680
traffic for certain

1236
00:58:31,680 --> 00:58:34,160
uh Matt has a roof

1237
00:58:34,160 --> 00:58:36,619
America's Grove

1238
00:58:36,619 --> 00:58:40,260
the tab Tab 7 type 7 is the moneycast

1239
00:58:40,260 --> 00:58:44,339
membership report sync root and type

1240
00:58:44,339 --> 00:58:48,540
eight tablet is uh Mike has losing root

1241
00:58:48,540 --> 00:58:50,040
uh

1242
00:58:50,040 --> 00:58:51,780
that the

1243
00:58:51,780 --> 00:58:55,440
the title type 7 and 8 are optional and

1244
00:58:55,440 --> 00:58:58,140
they are used to optimize the multicast

1245
00:58:58,140 --> 00:59:00,859
access segment

1246
00:59:00,859 --> 00:59:05,180
currently this has these types of rules

1247
00:59:05,180 --> 00:59:09,000
haven't been covered in any a young

1248
00:59:09,000 --> 00:59:12,980
model assault we Define the new

1249
00:59:12,980 --> 00:59:16,799
ITF UV multicast model

1250
00:59:16,799 --> 00:59:21,319
uh it extends the ITF uvn data model to

1251
00:59:21,319 --> 00:59:23,940
configure and show the even if your

1252
00:59:23,940 --> 00:59:25,619
money has service

1253
00:59:25,619 --> 00:59:28,819
and that's great

1254
00:59:30,920 --> 00:59:35,160
here is a here is the structure we

1255
00:59:35,160 --> 00:59:36,859
augment the

1256
00:59:36,859 --> 00:59:39,000
uapi instance

1257
00:59:39,000 --> 00:59:44,400
and add three new attributes about the

1258
00:59:44,400 --> 00:59:48,559
about the new new three European rules

1259
00:59:48,559 --> 00:59:51,780
the first one the cell multi

1260
00:59:51,780 --> 00:59:55,619
advertisement if it is enabled with the

1261
00:59:55,619 --> 00:59:59,240
PVP code public

1262
00:59:59,339 --> 01:00:01,500
and

1263
01:00:01,500 --> 01:00:07,619
next uh the UV itmp proxy if if it is

1264
01:00:07,619 --> 01:00:10,859
enabled it will trigger image root

1265
01:00:10,859 --> 01:00:11,960
update

1266
01:00:11,960 --> 01:00:16,260
with the Marcus Flags extended community

1267
01:00:16,260 --> 01:00:17,720
and the

1268
01:00:17,720 --> 01:00:22,319
agency process is set it means the igmp

1269
01:00:22,319 --> 01:00:26,720
policy for evapia is enabled

1270
01:00:26,780 --> 01:00:30,180
the if you remember the process is

1271
01:00:30,180 --> 01:00:34,140
similar as the above one it's a if if if

1272
01:00:34,140 --> 01:00:37,260
it is enabled it will trigger ml rule

1273
01:00:37,260 --> 01:00:40,500
update and that means the mlde proxy for

1274
01:00:40,500 --> 01:00:43,020
us here is is set

1275
01:00:43,020 --> 01:00:46,460
uh that's a piece

1276
01:00:47,540 --> 01:00:51,660
uh this is the details about Australian

1277
01:00:51,660 --> 01:00:55,859
European roots and we augmented the

1278
01:00:55,859 --> 01:01:01,440
division instance rules slash rules uh

1279
01:01:01,440 --> 01:01:04,440
and the first block is the Smart route

1280
01:01:04,440 --> 01:01:08,640
the information about of the smile root

1281
01:01:08,640 --> 01:01:12,240
and root RT and RT information are

1282
01:01:12,240 --> 01:01:16,380
similar as other equation rules and the

1283
01:01:16,380 --> 01:01:19,920
internet tag is the item is used to

1284
01:01:19,920 --> 01:01:23,880
identify a broadcast domain

1285
01:01:23,880 --> 01:01:27,420
and the second block is the moneycast is

1286
01:01:27,420 --> 01:01:30,619
a Type 3 Type 7

1287
01:01:30,619 --> 01:01:34,020
root and the

1288
01:01:34,020 --> 01:01:39,780
in Ethernet segment identifier is the

1289
01:01:39,780 --> 01:01:41,220
ESI information

1290
01:01:41,220 --> 01:01:45,359
uh the last block is the Minecraft Leo

1291
01:01:45,359 --> 01:01:46,859
sync root

1292
01:01:46,859 --> 01:01:47,640
um

1293
01:01:47,640 --> 01:01:51,660
most of the attributes are similar as as

1294
01:01:51,660 --> 01:01:52,880
the

1295
01:01:52,880 --> 01:01:57,420
monkhouse membership reports in root

1296
01:01:57,420 --> 01:02:00,720
the max response time and the max

1297
01:02:00,720 --> 01:02:04,819
response time is the value to be used

1298
01:02:04,819 --> 01:02:08,640
while sending a query as defined in the

1299
01:02:08,640 --> 01:02:11,839
hmp protocol

1300
01:02:11,839 --> 01:02:13,700
okay

1301
01:02:13,700 --> 01:02:16,400
how the

1302
01:02:16,400 --> 01:02:19,859
UV rules are written like

1303
01:02:19,859 --> 01:02:22,759
next week

1304
01:02:22,980 --> 01:02:25,920
okay this is a

1305
01:02:25,920 --> 01:02:29,420
the transfer is

1306
01:02:30,319 --> 01:02:33,599
and we will welcome uh more comments and

1307
01:02:33,599 --> 01:02:36,020
thank you

1308
01:02:37,859 --> 01:02:41,819
uh yeah hi it's the Stig here so um

1309
01:02:41,819 --> 01:02:46,140
the uh evpn bgp routes what I should say

1310
01:02:46,140 --> 01:02:48,839
that you are you know describing here

1311
01:02:48,839 --> 01:02:52,819
they are all specified and best right

1312
01:02:52,920 --> 01:02:55,079
yes

1313
01:02:55,079 --> 01:02:57,720
so have you uh have you tried to get

1314
01:02:57,720 --> 01:02:59,460
this presented in in the best working

1315
01:02:59,460 --> 01:03:01,760
group

1316
01:03:02,640 --> 01:03:06,660
um I saw that this stuff is used to

1317
01:03:06,660 --> 01:03:09,920
handle the European multicast service

1318
01:03:09,920 --> 01:03:13,980
include igmp packets or the MLG package

1319
01:03:13,980 --> 01:03:16,980
so I made the first uh present

1320
01:03:16,980 --> 01:03:20,940
presentation in our pin working group in

1321
01:03:20,940 --> 01:03:22,880
the P Morgan group

1322
01:03:22,880 --> 01:03:27,059
dosing is better to make a presentation

1323
01:03:27,059 --> 01:03:30,240
on the best working group

1324
01:03:30,240 --> 01:03:32,880
uh I would say

1325
01:03:32,880 --> 01:03:35,460
um at least it's it's it relies heavily

1326
01:03:35,460 --> 01:03:37,020
on

1327
01:03:37,020 --> 01:03:38,099
um you know

1328
01:03:38,099 --> 01:03:41,640
um an RFC from best so

1329
01:03:41,640 --> 01:03:43,859
so yeah I think it's good to present it

1330
01:03:43,859 --> 01:03:45,299
there

1331
01:03:45,299 --> 01:03:46,740
I guess you have to think about which

1332
01:03:46,740 --> 01:03:49,440
working group it would you know fit fit

1333
01:03:49,440 --> 01:03:51,000
you know you know what which working

1334
01:03:51,000 --> 01:03:52,680
group should be the home or the document

1335
01:03:52,680 --> 01:03:55,680
or owner of the document but uh

1336
01:03:55,680 --> 01:03:57,299
but yeah it's probably good to get it

1337
01:03:57,299 --> 01:03:59,099
presented there at least

1338
01:03:59,099 --> 01:04:02,660
get input from people invests

1339
01:04:02,660 --> 01:04:04,700
here

1340
01:04:04,700 --> 01:04:09,799
yeah yeah maybe a man has some thoughts

1341
01:04:09,799 --> 01:04:13,260
system so I think you already made that

1342
01:04:13,260 --> 01:04:16,079
comment that this belongs mostly in best

1343
01:04:16,079 --> 01:04:18,180
because even though multicast terms

1344
01:04:18,180 --> 01:04:20,700
being used the whole evpn infrastructure

1345
01:04:20,700 --> 01:04:24,480
with bgp it is being done in the bus

1346
01:04:24,480 --> 01:04:27,839
itself and on top of that the base evpn

1347
01:04:27,839 --> 01:04:31,020
Yang model itself are on hold for now in

1348
01:04:31,020 --> 01:04:31,920
this

1349
01:04:31,920 --> 01:04:34,140
so I don't think it may be a good idea

1350
01:04:34,140 --> 01:04:36,660
to do something which is beyond the base

1351
01:04:36,660 --> 01:04:38,400
evpn itself

1352
01:04:38,400 --> 01:04:41,339
so it has to be done either along with

1353
01:04:41,339 --> 01:04:44,940
the basic VPN or after that since this

1354
01:04:44,940 --> 01:04:47,700
model somehow inheriting or extending

1355
01:04:47,700 --> 01:04:51,059
parts so the other model or yes I guess

1356
01:04:51,059 --> 01:04:53,480
so yeah

1357
01:04:53,880 --> 01:04:56,339
yeah so I think we yeah we can

1358
01:04:56,339 --> 01:04:58,200
definitely talk to the

1359
01:04:58,200 --> 01:05:01,799
best shares but yeah it sounds like uh

1360
01:05:01,799 --> 01:05:03,299
sounds like one of the best chairs

1361
01:05:03,299 --> 01:05:04,319
anyway things that should be done in

1362
01:05:04,319 --> 01:05:06,059
bets right is that what you just said

1363
01:05:06,059 --> 01:05:07,319
it is

1364
01:05:07,319 --> 01:05:09,420
you think that this draft that was just

1365
01:05:09,420 --> 01:05:12,119
presented should be in best yes okay

1366
01:05:12,119 --> 01:05:14,480
okay

1367
01:05:16,200 --> 01:05:18,980
kind of makes it easier

1368
01:05:24,420 --> 01:05:25,980
oh

1369
01:05:25,980 --> 01:05:29,460
okay oh okay okay all right so Stig and

1370
01:05:29,460 --> 01:05:32,339
I will talk we'll reach out to the

1371
01:05:32,339 --> 01:05:34,980
to all the chairs and we'll uh we'll

1372
01:05:34,980 --> 01:05:36,480
help you out hanji

1373
01:05:36,480 --> 01:05:38,700
to know where to take this

1374
01:05:38,700 --> 01:05:43,040
okay thank you thank you

1375
01:05:46,680 --> 01:05:49,260
is Lenny on

1376
01:05:49,260 --> 01:05:54,859
okay I am very good thank you buddy

1377
01:05:55,200 --> 01:05:58,939
do you want me to um

1378
01:05:59,040 --> 01:06:02,460
just tell me all the slides or uh do you

1379
01:06:02,460 --> 01:06:04,140
want me to just tell you tell me when to

1380
01:06:04,140 --> 01:06:05,339
flip

1381
01:06:05,339 --> 01:06:06,839
okay

1382
01:06:06,839 --> 01:06:08,760
how's how's my audio can you hear me

1383
01:06:08,760 --> 01:06:11,400
okay yeah it's great

1384
01:06:11,400 --> 01:06:14,119
all right

1385
01:06:15,000 --> 01:06:18,059
um so this is a draft uh that

1386
01:06:18,059 --> 01:06:21,299
um I presented in um

1387
01:06:21,299 --> 01:06:23,880
in mops on Monday

1388
01:06:23,880 --> 01:06:26,339
um also going to present this uh in

1389
01:06:26,339 --> 01:06:28,500
mbone D

1390
01:06:28,500 --> 01:06:29,400
um

1391
01:06:29,400 --> 01:06:33,000
there seem to be support in uh mops uh

1392
01:06:33,000 --> 01:06:35,700
to adopt this on Monday looked um uh

1393
01:06:35,700 --> 01:06:37,319
pretty good

1394
01:06:37,319 --> 01:06:39,420
um in preliminary

1395
01:06:39,420 --> 01:06:41,160
polling

1396
01:06:41,160 --> 01:06:44,220
um but I'll also going to present an M

1397
01:06:44,220 --> 01:06:45,660
bone D

1398
01:06:45,660 --> 01:06:48,599
um in case uh that's another relevant

1399
01:06:48,599 --> 01:06:50,579
working group on this but wanted to

1400
01:06:50,579 --> 01:06:53,460
share this with this group because

1401
01:06:53,460 --> 01:06:55,440
um this treaty end

1402
01:06:55,440 --> 01:06:59,520
is a model that um that utilizes uh the

1403
01:06:59,520 --> 01:07:01,920
protocols that Pim has been developing

1404
01:07:01,920 --> 01:07:03,480
um and uh

1405
01:07:03,480 --> 01:07:05,280
some some protocols that come has been

1406
01:07:05,280 --> 01:07:07,500
developing and wanted to share this with

1407
01:07:07,500 --> 01:07:10,319
folks and Tim the

1408
01:07:10,319 --> 01:07:11,099
um

1409
01:07:11,099 --> 01:07:14,579
make people aware and get some uh some

1410
01:07:14,579 --> 01:07:18,420
feedback so tree DN is a it's a it's a

1411
01:07:18,420 --> 01:07:21,420
model for um it's a tree based CDN model

1412
01:07:21,420 --> 01:07:23,280
that's optimized for live streaming to

1413
01:07:23,280 --> 01:07:25,579
mass audiences

1414
01:07:25,579 --> 01:07:28,859
and the the problem

1415
01:07:28,859 --> 01:07:30,780
that we're trying to solve with treaty n

1416
01:07:30,780 --> 01:07:32,880
is um

1417
01:07:32,880 --> 01:07:37,200
with uh live audience sizes beginning to

1418
01:07:37,200 --> 01:07:40,038
approach critical mass

1419
01:07:40,200 --> 01:07:42,780
as combined with increasing bit rates

1420
01:07:42,780 --> 01:07:45,780
for things like 4K AK and augmented

1421
01:07:45,780 --> 01:07:47,160
reality

1422
01:07:47,160 --> 01:07:47,190
um

1423
01:07:47,190 --> 01:07:48,420
[Music]

1424
01:07:48,420 --> 01:07:51,839
are we at an inflection point for

1425
01:07:51,839 --> 01:07:55,260
the amount of resources that live

1426
01:07:55,260 --> 01:07:59,160
streaming is consuming on on the network

1427
01:07:59,160 --> 01:08:00,839
um

1428
01:08:00,839 --> 01:08:03,539
the perfect example of you know the uh

1429
01:08:03,539 --> 01:08:05,579
the more the most recent example of this

1430
01:08:05,579 --> 01:08:07,559
is um Thursday Night Football

1431
01:08:07,559 --> 01:08:11,160
um American football the NFL is uh is um

1432
01:08:11,160 --> 01:08:15,119
for the first time uh being

1433
01:08:15,119 --> 01:08:17,759
um exclusively live streamed uh by

1434
01:08:17,759 --> 01:08:19,738
Amazon Prime that started about two

1435
01:08:19,738 --> 01:08:22,319
months ago uh and the first

1436
01:08:22,319 --> 01:08:24,000
the first night

1437
01:08:24,000 --> 01:08:27,960
um uh of that Amazon announced uh

1438
01:08:27,960 --> 01:08:30,540
there's about 11 over 11 million uh

1439
01:08:30,540 --> 01:08:32,100
streams

1440
01:08:32,100 --> 01:08:33,839
um and this is pretty

1441
01:08:33,839 --> 01:08:36,238
High interest

1442
01:08:36,238 --> 01:08:38,160
NFL football is kind of like the

1443
01:08:38,160 --> 01:08:39,660
national religion it was the closest

1444
01:08:39,660 --> 01:08:41,819
thing to a national religion that there

1445
01:08:41,819 --> 01:08:44,160
is in the United States

1446
01:08:44,160 --> 01:08:46,979
um so uh

1447
01:08:46,979 --> 01:08:48,439
given

1448
01:08:48,439 --> 01:08:50,580
increasing audience sizes and increasing

1449
01:08:50,580 --> 01:08:52,319
bit rates you know are we at an

1450
01:08:52,319 --> 01:08:54,479
inflection point now

1451
01:08:54,479 --> 01:08:57,120
um if not now will we ever be and if the

1452
01:08:57,120 --> 01:08:58,439
answer to either of these questions is

1453
01:08:58,439 --> 01:09:00,660
yes question is what what should we do

1454
01:09:00,660 --> 01:09:01,640
about it

1455
01:09:01,640 --> 01:09:03,779
one thing to keep in mind is that live

1456
01:09:03,779 --> 01:09:06,359
streaming is not the same as on-demand

1457
01:09:06,359 --> 01:09:07,439
streaming

1458
01:09:07,439 --> 01:09:09,420
there are some people who

1459
01:09:09,420 --> 01:09:11,279
have kind of suggested uh what's the

1460
01:09:11,279 --> 01:09:12,299
difference

1461
01:09:12,299 --> 01:09:13,979
um you know streaming is streaming if

1462
01:09:13,979 --> 01:09:15,660
people aren't watching a live stream

1463
01:09:15,660 --> 01:09:17,399
they'd probably just be watching a

1464
01:09:17,399 --> 01:09:19,679
Netflix movie

1465
01:09:19,679 --> 01:09:22,799
um so it's uh and that's been working

1466
01:09:22,799 --> 01:09:24,359
just fine

1467
01:09:24,359 --> 01:09:25,799
um a key thing to keep in mind is that

1468
01:09:25,799 --> 01:09:28,439
live stream uh is different it has

1469
01:09:28,439 --> 01:09:30,299
different requirements the most notable

1470
01:09:30,299 --> 01:09:34,439
is expectations for latency

1471
01:09:34,439 --> 01:09:35,160
um

1472
01:09:35,160 --> 01:09:38,279
you can't have for for things like

1473
01:09:38,279 --> 01:09:40,020
sporting events

1474
01:09:40,020 --> 01:09:42,960
um you want the latency budget is is

1475
01:09:42,960 --> 01:09:45,179
kind of the goal is about 10 seconds

1476
01:09:45,179 --> 01:09:46,859
that kind of matches what traditional

1477
01:09:46,859 --> 01:09:49,500
broadcast television has been

1478
01:09:49,500 --> 01:09:52,259
um if you go much longer than that you

1479
01:09:52,259 --> 01:09:54,420
run the risk that

1480
01:09:54,420 --> 01:09:57,239
um you know you end up receiving uh you

1481
01:09:57,239 --> 01:09:58,380
could get a text message from your

1482
01:09:58,380 --> 01:10:00,719
friend about the game-winning score

1483
01:10:00,719 --> 01:10:03,179
a minute before it happens a minute

1484
01:10:03,179 --> 01:10:05,160
before you see it or you hear

1485
01:10:05,160 --> 01:10:07,080
your neighbors or the bar across the

1486
01:10:07,080 --> 01:10:09,239
street everybody's cheering uh for

1487
01:10:09,239 --> 01:10:11,340
something that you know you you end up

1488
01:10:11,340 --> 01:10:12,239
seeing

1489
01:10:12,239 --> 01:10:15,179
uh a minute later

1490
01:10:15,179 --> 01:10:18,000
um and if for if you want to do things

1491
01:10:18,000 --> 01:10:20,400
like micro betting or in-game betting

1492
01:10:20,400 --> 01:10:24,360
where you can um actually bet on you

1493
01:10:24,360 --> 01:10:26,940
know uh we'll we'll what's the next

1494
01:10:26,940 --> 01:10:28,980
pitch going to be like or you know will

1495
01:10:28,980 --> 01:10:31,980
will they score well the team score in

1496
01:10:31,980 --> 01:10:33,719
this possession

1497
01:10:33,719 --> 01:10:34,320
um

1498
01:10:34,320 --> 01:10:36,179
the the latency requirements are even

1499
01:10:36,179 --> 01:10:39,840
you know far far less far lower for that

1500
01:10:39,840 --> 01:10:41,760
uh another key thing to keep in mind is

1501
01:10:41,760 --> 01:10:44,219
join rates are vastly different

1502
01:10:44,219 --> 01:10:46,500
um you know if you look at the graphs

1503
01:10:46,500 --> 01:10:48,420
for on-demand streaming it's it's

1504
01:10:48,420 --> 01:10:49,920
predictable it looks about the same

1505
01:10:49,920 --> 01:10:50,940
every night

1506
01:10:50,940 --> 01:10:52,560
um and it's fairly smooth kind of

1507
01:10:52,560 --> 01:10:54,060
increases

1508
01:10:54,060 --> 01:10:55,620
you know around eight o'clock and

1509
01:10:55,620 --> 01:10:57,900
decreases around midnight

1510
01:10:57,900 --> 01:11:00,360
um when it comes to live streaming

1511
01:11:00,360 --> 01:11:02,340
events things like uh you know sporting

1512
01:11:02,340 --> 01:11:04,500
events it's more like a step function uh

1513
01:11:04,500 --> 01:11:05,940
with everybody joining all at the same

1514
01:11:05,940 --> 01:11:07,140
time

1515
01:11:07,140 --> 01:11:09,920
next slide

1516
01:11:12,300 --> 01:11:14,640
in terms of you know network-based

1517
01:11:14,640 --> 01:11:15,780
reputation

1518
01:11:15,780 --> 01:11:18,000
um you know multicast has been around

1519
01:11:18,000 --> 01:11:19,800
for a while uh it's been fairly

1520
01:11:19,800 --> 01:11:21,600
successful in some places it's you know

1521
01:11:21,600 --> 01:11:24,780
absolutely vital on financial Networks

1522
01:11:24,780 --> 01:11:26,580
um and it's widely used on video

1523
01:11:26,580 --> 01:11:28,620
distribution Networks

1524
01:11:28,620 --> 01:11:31,980
and VPN service providers it's it's it's

1525
01:11:31,980 --> 01:11:34,739
a a checkbox requirement

1526
01:11:34,739 --> 01:11:38,040
and um it's also uh used pretty widely

1527
01:11:38,040 --> 01:11:40,980
on some Enterprise Networks

1528
01:11:40,980 --> 01:11:43,620
uh when it comes to internet multicast

1529
01:11:43,620 --> 01:11:47,100
um not so much you know successful

1530
01:11:47,100 --> 01:11:48,960
um so it's worth it's worth asking you

1531
01:11:48,960 --> 01:11:50,880
know what and and that's really you know

1532
01:11:50,880 --> 01:11:52,920
what we're talking about here this is

1533
01:11:52,920 --> 01:11:54,600
kind of an internet multicast use case

1534
01:11:54,600 --> 01:11:57,420
over the top use case

1535
01:11:57,420 --> 01:11:59,699
um so it's worth looking at uh you know

1536
01:11:59,699 --> 01:12:01,679
what went wrong with internet multicast

1537
01:12:01,679 --> 01:12:04,699
next slide

1538
01:12:06,600 --> 01:12:09,179
so you can get lots of opinions from

1539
01:12:09,179 --> 01:12:10,620
different folks about what went wrong

1540
01:12:10,620 --> 01:12:12,600
with internet multicast but um I think

1541
01:12:12,600 --> 01:12:15,719
the the three biggest ones

1542
01:12:15,719 --> 01:12:17,640
um three most impactful

1543
01:12:17,640 --> 01:12:19,560
issues are you know the All or Nothing

1544
01:12:19,560 --> 01:12:20,640
problem

1545
01:12:20,640 --> 01:12:22,260
um that is every every layer three hop

1546
01:12:22,260 --> 01:12:23,820
between source and destination must be

1547
01:12:23,820 --> 01:12:25,679
multicast enabled

1548
01:12:25,679 --> 01:12:27,120
um essentially every

1549
01:12:27,120 --> 01:12:29,280
interface on every single router and

1550
01:12:29,280 --> 01:12:31,080
firewall on the internet needs to be

1551
01:12:31,080 --> 01:12:33,000
running some type of multicast routing

1552
01:12:33,000 --> 01:12:35,280
protocol in order for it to work and if

1553
01:12:35,280 --> 01:12:38,159
any if if any of those links aren't then

1554
01:12:38,159 --> 01:12:40,380
multicast won't work right I think we're

1555
01:12:40,380 --> 01:12:43,580
all too familiar with this problem

1556
01:12:43,739 --> 01:12:46,199
um likewise there's the it's too complex

1557
01:12:46,199 --> 01:12:47,820
problem

1558
01:12:47,820 --> 01:12:49,679
um operators have been complaining for

1559
01:12:49,679 --> 01:12:51,540
for decades that multicast is just too

1560
01:12:51,540 --> 01:12:53,100
difficult too

1561
01:12:53,100 --> 01:12:56,820
and complex to deploy troubleshoot

1562
01:12:56,820 --> 01:12:59,159
operate manage

1563
01:12:59,159 --> 01:13:00,540
um and then there's a chicken and egg

1564
01:13:00,540 --> 01:13:01,320
problem

1565
01:13:01,320 --> 01:13:03,120
um there's no multicast content because

1566
01:13:03,120 --> 01:13:04,500
there's no multicast audience and

1567
01:13:04,500 --> 01:13:05,880
there's no multicast audience because

1568
01:13:05,880 --> 01:13:08,460
there's no multicast content

1569
01:13:08,460 --> 01:13:10,380
so these have been kind of the the three

1570
01:13:10,380 --> 01:13:11,760
big things that have plagued internet

1571
01:13:11,760 --> 01:13:13,020
multicast

1572
01:13:13,020 --> 01:13:14,580
the good news is

1573
01:13:14,580 --> 01:13:15,840
um

1574
01:13:15,840 --> 01:13:17,219
you know this isn't your your

1575
01:13:17,219 --> 01:13:19,860
grandfather's multicast uh anymore we

1576
01:13:19,860 --> 01:13:22,620
have uh some technologies that have

1577
01:13:22,620 --> 01:13:24,900
evolved and advanced

1578
01:13:24,900 --> 01:13:27,239
um to address these problems and and

1579
01:13:27,239 --> 01:13:29,340
we're in pretty good shape uh that

1580
01:13:29,340 --> 01:13:30,239
perhaps

1581
01:13:30,239 --> 01:13:31,679
that I think the folks in this room

1582
01:13:31,679 --> 01:13:34,199
might know about but but outside of this

1583
01:13:34,199 --> 01:13:35,040
room

1584
01:13:35,040 --> 01:13:38,400
um they're not as well widely understood

1585
01:13:38,400 --> 01:13:41,120
next slide

1586
01:13:41,940 --> 01:13:43,620
so treaty end

1587
01:13:43,620 --> 01:13:47,100
um is a tree based cdns

1588
01:13:47,100 --> 01:13:48,840
um and

1589
01:13:48,840 --> 01:13:51,060
it leverages

1590
01:13:51,060 --> 01:13:52,260
um

1591
01:13:52,260 --> 01:13:55,560
native and as well as overlay Concepts

1592
01:13:55,560 --> 01:13:57,620
to deliver a service

1593
01:13:57,620 --> 01:14:01,380
for end users and it can be delivered

1594
01:14:01,380 --> 01:14:04,380
regardless of uh even when certain parts

1595
01:14:04,380 --> 01:14:06,060
of the network uh don't support

1596
01:14:06,060 --> 01:14:07,320
multicast

1597
01:14:07,320 --> 01:14:09,900
so there's the native piece think of

1598
01:14:09,900 --> 01:14:11,580
this as on net

1599
01:14:11,580 --> 01:14:13,020
um this is the the part of the network

1600
01:14:13,020 --> 01:14:15,480
that is multicast enabled

1601
01:14:15,480 --> 01:14:18,540
and the key thing uh the the the key

1602
01:14:18,540 --> 01:14:20,760
component of this is simply SSM you know

1603
01:14:20,760 --> 01:14:22,500
we I think we all we all know what SSM

1604
01:14:22,500 --> 01:14:24,120
is in this room

1605
01:14:24,120 --> 01:14:27,120
um but maybe outside of this room again

1606
01:14:27,120 --> 01:14:29,280
um a lot of people have made up their

1607
01:14:29,280 --> 01:14:31,140
mind and made decisions about multicast

1608
01:14:31,140 --> 01:14:34,199
and it was based on the ASM model and a

1609
01:14:34,199 --> 01:14:36,179
lot of you here a lot of opinions are

1610
01:14:36,179 --> 01:14:37,800
based on

1611
01:14:37,800 --> 01:14:39,540
things that are no longer relevant or

1612
01:14:39,540 --> 01:14:41,520
were only relevant 15 years ago with the

1613
01:14:41,520 --> 01:14:44,280
ASM model the key thing about the key

1614
01:14:44,280 --> 01:14:46,739
benefit of SSM is it vastly simplifies

1615
01:14:46,739 --> 01:14:48,719
deployment

1616
01:14:48,719 --> 01:14:49,500
um

1617
01:14:49,500 --> 01:14:52,739
with SSM you can get rid of

1618
01:14:52,739 --> 01:14:58,320
data driven State creation RPS msdp Pim

1619
01:14:58,320 --> 01:15:01,199
register messages in cap and dcap share

1620
01:15:01,199 --> 01:15:04,199
trees tree switch over all of these

1621
01:15:04,199 --> 01:15:05,000
things

1622
01:15:05,000 --> 01:15:08,400
that that contribute the complexity you

1623
01:15:08,400 --> 01:15:09,840
know I'd say over 90 percent of the

1624
01:15:09,840 --> 01:15:12,300
complexity of multicast is Asm

1625
01:15:12,300 --> 01:15:14,940
you take away when you when you move to

1626
01:15:14,940 --> 01:15:17,340
SSM you eliminate

1627
01:15:17,340 --> 01:15:20,340
the vast bulk of that complexity

1628
01:15:20,340 --> 01:15:23,219
so that kind of addresses the the it's

1629
01:15:23,219 --> 01:15:25,140
too complex problem

1630
01:15:25,140 --> 01:15:27,300
in terms of SSM it can be realized

1631
01:15:27,300 --> 01:15:31,140
typically realized with Pim uh SSM but

1632
01:15:31,140 --> 01:15:33,840
could also you know in any

1633
01:15:33,840 --> 01:15:35,940
any protocol control plane protocol or

1634
01:15:35,940 --> 01:15:37,860
data plane protocol whether it be mlbp

1635
01:15:37,860 --> 01:15:43,320
GTM uh bgp and VPN beer srmpls uh could

1636
01:15:43,320 --> 01:15:48,060
be leveraged uh to support SSM

1637
01:15:48,060 --> 01:15:50,340
so that's the native piece and then

1638
01:15:50,340 --> 01:15:52,800
there's the overlay and the key

1639
01:15:52,800 --> 01:15:55,699
component of the overlay is AMT

1640
01:15:55,699 --> 01:16:00,659
which dynamically builds tunnels uh to

1641
01:16:00,659 --> 01:16:02,219
end hosts

1642
01:16:02,219 --> 01:16:05,699
um or or even application layer uh to

1643
01:16:05,699 --> 01:16:07,380
hop over

1644
01:16:07,380 --> 01:16:10,560
the unicast only parts of the network

1645
01:16:10,560 --> 01:16:13,560
um it's it's most valuable at The Last

1646
01:16:13,560 --> 01:16:15,480
Mile where the last mile doesn't support

1647
01:16:15,480 --> 01:16:17,400
multicast you can just tunnel over that

1648
01:16:17,400 --> 01:16:19,980
part but

1649
01:16:19,980 --> 01:16:22,920
it can it could be in theory be used to

1650
01:16:22,920 --> 01:16:25,260
support middle mile or um or first mile

1651
01:16:25,260 --> 01:16:26,400
problems

1652
01:16:26,400 --> 01:16:27,960
um pretty much anywhere where multicast

1653
01:16:27,960 --> 01:16:31,260
isn't natively available uh AMT can

1654
01:16:31,260 --> 01:16:33,719
provide that bridge

1655
01:16:33,719 --> 01:16:34,500
um

1656
01:16:34,500 --> 01:16:37,020
on The Last Mile it's uh a nice benefit

1657
01:16:37,020 --> 01:16:39,659
is it simplifies you can avoid some of

1658
01:16:39,659 --> 01:16:42,239
the Wi-Fi uh the issues of Wi-Fi and

1659
01:16:42,239 --> 01:16:43,440
multicast

1660
01:16:43,440 --> 01:16:46,380
um I think like you you know this well

1661
01:16:46,380 --> 01:16:49,020
and there's been some work on this and

1662
01:16:49,020 --> 01:16:50,880
as well as other in-home issues that

1663
01:16:50,880 --> 01:16:53,940
might make multicast challenging so AMT

1664
01:16:53,940 --> 01:16:56,219
comma

1665
01:16:56,219 --> 01:16:59,699
um hops over those uh places and and you

1666
01:16:59,699 --> 01:17:02,400
know from a service provider perspective

1667
01:17:02,400 --> 01:17:04,080
um you just push it out to your border

1668
01:17:04,080 --> 01:17:05,880
and then you know send it tunnel it and

1669
01:17:05,880 --> 01:17:09,120
send it to the end user

1670
01:17:09,120 --> 01:17:11,820
um and uh and they take care of it from

1671
01:17:11,820 --> 01:17:13,380
there

1672
01:17:13,380 --> 01:17:15,780
so uh the key thing about these overlays

1673
01:17:15,780 --> 01:17:18,300
and you know specifically um AMT is it

1674
01:17:18,300 --> 01:17:21,300
it solves the All or Nothing problem

1675
01:17:21,300 --> 01:17:23,280
um now we can hop over those parts of

1676
01:17:23,280 --> 01:17:25,199
the network that don't support multicast

1677
01:17:25,199 --> 01:17:26,820
also solves the chicken and egg problem

1678
01:17:26,820 --> 01:17:30,080
because in theory with AMT

1679
01:17:30,080 --> 01:17:34,500
in theory any host on the internet uh

1680
01:17:34,500 --> 01:17:37,400
can be a potential audience number

1681
01:17:37,400 --> 01:17:40,920
talked about AMT but any overlay

1682
01:17:40,920 --> 01:17:43,440
networking technology uh that you know

1683
01:17:43,440 --> 01:17:46,500
enables multicast could be leveraged and

1684
01:17:46,500 --> 01:17:49,560
lisp is a good example so

1685
01:17:49,560 --> 01:17:52,500
AMT is probably the most common in uh

1686
01:17:52,500 --> 01:17:55,380
use case just because it it's it was

1687
01:17:55,380 --> 01:17:56,880
designed to solve this last mile problem

1688
01:17:56,880 --> 01:17:58,560
and it can be integrated

1689
01:17:58,560 --> 01:18:01,380
into the host or the app or the

1690
01:18:01,380 --> 01:18:03,239
even a home Gateway

1691
01:18:03,239 --> 01:18:06,900
um uh but but lisp you know has some

1692
01:18:06,900 --> 01:18:08,760
nice benefits it can it can help on the

1693
01:18:08,760 --> 01:18:10,980
actually on the sourcing side

1694
01:18:10,980 --> 01:18:13,140
um which is something that AMT can't uh

1695
01:18:13,140 --> 01:18:15,600
doesn't doesn't support

1696
01:18:15,600 --> 01:18:17,400
um another nice really you know benefit

1697
01:18:17,400 --> 01:18:20,640
uh is incremental deployment it this

1698
01:18:20,640 --> 01:18:22,020
treaty you know the treaty end model

1699
01:18:22,020 --> 01:18:25,320
supports this concept of uh of

1700
01:18:25,320 --> 01:18:26,520
incremental deployment which is

1701
01:18:26,520 --> 01:18:28,679
something that

1702
01:18:28,679 --> 01:18:32,040
um hasn't been available in the past uh

1703
01:18:32,040 --> 01:18:34,679
with um with multicast Technologies it's

1704
01:18:34,679 --> 01:18:36,120
been kind of like I said an All or

1705
01:18:36,120 --> 01:18:39,380
Nothing problem next slide

1706
01:18:39,900 --> 01:18:42,239
so here's kind of like a 30 000 foot

1707
01:18:42,239 --> 01:18:43,500
view

1708
01:18:43,500 --> 01:18:44,159
um

1709
01:18:44,159 --> 01:18:48,719
of of what treaty M looks like uh

1710
01:18:48,719 --> 01:18:50,699
you know within the broader

1711
01:18:50,699 --> 01:18:52,860
um internet

1712
01:18:52,860 --> 01:18:55,920
um and uh so you see kind of the the big

1713
01:18:55,920 --> 01:18:57,360
eye internet

1714
01:18:57,360 --> 01:18:59,159
um within that is you know the multicast

1715
01:18:59,159 --> 01:19:01,380
enabled portion of the network call this

1716
01:19:01,380 --> 01:19:03,920
the the M bone multicast backbone

1717
01:19:03,920 --> 01:19:06,360
and this is where a treaty end provider

1718
01:19:06,360 --> 01:19:07,199
can

1719
01:19:07,199 --> 01:19:09,120
take content from a content provider

1720
01:19:09,120 --> 01:19:10,800
multicast content and deliver it

1721
01:19:10,800 --> 01:19:14,820
natively to uh Native receivers or to

1722
01:19:14,820 --> 01:19:17,340
off net receivers those are receivers

1723
01:19:17,340 --> 01:19:18,840
not connected to the multicast

1724
01:19:18,840 --> 01:19:20,580
infrastructure that are online

1725
01:19:20,580 --> 01:19:24,659
unicast only networks we use AMT to

1726
01:19:24,659 --> 01:19:26,580
Tunnel it so

1727
01:19:26,580 --> 01:19:28,080
treaty end isn't really anything new

1728
01:19:28,080 --> 01:19:30,719
it's kind of the synthesis of old things

1729
01:19:30,719 --> 01:19:32,520
but put together in a way that can

1730
01:19:32,520 --> 01:19:35,179
deliver and derive the service

1731
01:19:35,179 --> 01:19:37,980
so you get uh you know treaty n is

1732
01:19:37,980 --> 01:19:41,419
really SSM plus AMT

1733
01:19:42,120 --> 01:19:45,239
um Stig you have a question

1734
01:19:45,239 --> 01:19:45,960
um

1735
01:19:45,960 --> 01:19:49,380
yeah I was saying that uh

1736
01:19:49,380 --> 01:19:51,960
this is new right but this is kind of

1737
01:19:51,960 --> 01:19:53,640
what we've been telling people that they

1738
01:19:53,640 --> 01:19:56,460
can deploy this for quite some time now

1739
01:19:56,460 --> 01:19:58,140
but I guess we don't have a document

1740
01:19:58,140 --> 01:20:01,980
that explains it all in one one place

1741
01:20:01,980 --> 01:20:03,840
yeah there's there's um there's really

1742
01:20:03,840 --> 01:20:05,520
nothing new here

1743
01:20:05,520 --> 01:20:08,880
um uh in from technological standpoint

1744
01:20:08,880 --> 01:20:11,040
it's just it's the combination of really

1745
01:20:11,040 --> 01:20:13,500
SSM and AMT

1746
01:20:13,500 --> 01:20:17,280
um to you know describe a you know

1747
01:20:17,280 --> 01:20:19,679
essentially a CDN architecture

1748
01:20:19,679 --> 01:20:22,020
um and uh

1749
01:20:22,020 --> 01:20:24,600
yeah in the next few slides kind of you

1750
01:20:24,600 --> 01:20:27,060
know uh explain you know why now why why

1751
01:20:27,060 --> 01:20:30,179
give this a name okay sure but yeah it

1752
01:20:30,179 --> 01:20:32,520
might help us reach the Right audience

1753
01:20:32,520 --> 01:20:34,860
hopefully well one thing I just want to

1754
01:20:34,860 --> 01:20:37,199
add is you don't have it here but of

1755
01:20:37,199 --> 01:20:38,640
course often you might have a content

1756
01:20:38,640 --> 01:20:41,880
provider and static tunnels to various

1757
01:20:41,880 --> 01:20:44,640
other networks and stuff like that so

1758
01:20:44,640 --> 01:20:46,620
there's some like content provider here

1759
01:20:46,620 --> 01:20:48,480
could potentially be you know some

1760
01:20:48,480 --> 01:20:51,179
router receiving multicast from some

1761
01:20:51,179 --> 01:20:52,440
other

1762
01:20:52,440 --> 01:20:54,719
provided that it's the actual content

1763
01:20:54,719 --> 01:20:57,360
provider I guess

1764
01:20:57,360 --> 01:20:59,760
yep um yeah I mean you could substitute

1765
01:20:59,760 --> 01:21:02,820
just Source you know the content Source

1766
01:21:02,820 --> 01:21:04,080
yeah

1767
01:21:04,080 --> 01:21:05,880
okay thanks

1768
01:21:05,880 --> 01:21:07,380
Dina

1769
01:21:07,380 --> 01:21:09,719
um hey Larry um yeah I want to Echo that

1770
01:21:09,719 --> 01:21:12,239
comment from stick because we have an

1771
01:21:12,239 --> 01:21:14,340
AMT document that describes the protocol

1772
01:21:14,340 --> 01:21:17,400
but we need something like a Last Mile

1773
01:21:17,400 --> 01:21:21,000
multicast document that basically says

1774
01:21:21,000 --> 01:21:24,540
that this slide can be done and um and

1775
01:21:24,540 --> 01:21:26,040
it's basically everything that you've

1776
01:21:26,040 --> 01:21:28,020
been saying for quite a long time is um

1777
01:21:28,020 --> 01:21:30,120
you know the sources are inside the data

1778
01:21:30,120 --> 01:21:32,340
multicast cloud and you reach receivers

1779
01:21:32,340 --> 01:21:34,080
that are inside of there or receivers

1780
01:21:34,080 --> 01:21:36,080
that can

1781
01:21:36,080 --> 01:21:39,120
attach using the AMT Gateway so it's

1782
01:21:39,120 --> 01:21:40,920
it's like we need some kind of usage

1783
01:21:40,920 --> 01:21:42,600
document maybe that's an embodian not

1784
01:21:42,600 --> 01:21:45,300
here I don't know but it's it's a it's a

1785
01:21:45,300 --> 01:21:47,760
good it's it's a deployment document of

1786
01:21:47,760 --> 01:21:49,380
some sort and I think it could be rather

1787
01:21:49,380 --> 01:21:50,820
short too

1788
01:21:50,820 --> 01:21:52,739
yeah and that could also be included in

1789
01:21:52,739 --> 01:21:55,800
the Lessons Learned draft that uh will

1790
01:21:55,800 --> 01:21:58,520
be discussed next

1791
01:21:58,679 --> 01:22:00,300
um I think that's different once a

1792
01:22:00,300 --> 01:22:01,800
historical document and one's a

1793
01:22:01,800 --> 01:22:03,480
deployment recommendation doctor okay

1794
01:22:03,480 --> 01:22:05,900
yeah yeah

1795
01:22:11,760 --> 01:22:14,100
um Lenny two two remarks here maybe to

1796
01:22:14,100 --> 01:22:16,800
incorporate also the work that Jake has

1797
01:22:16,800 --> 01:22:19,560
done uh for mbon D maybe it's also

1798
01:22:19,560 --> 01:22:21,780
interesting to point out that the

1799
01:22:21,780 --> 01:22:25,020
content provider could be of net and

1800
01:22:25,020 --> 01:22:28,620
um uh connected via the AMT uh

1801
01:22:28,620 --> 01:22:32,040
Gateway not relay Gateway service and

1802
01:22:32,040 --> 01:22:35,520
the relay could also be pushed out

1803
01:22:35,520 --> 01:22:38,460
towards an edge cloud or something

1804
01:22:38,460 --> 01:22:40,620
um also if you don't want to incorporate

1805
01:22:40,620 --> 01:22:42,900
it directly onto the routers I think

1806
01:22:42,900 --> 01:22:45,420
with the virtual routers and Edge

1807
01:22:45,420 --> 01:22:49,159
Computing this could also be use case

1808
01:22:50,219 --> 01:22:53,280
yeah that's um so so the document does

1809
01:22:53,280 --> 01:22:56,520
talk about you know overlay it speaks at

1810
01:22:56,520 --> 01:22:59,159
a high level about overlays and and

1811
01:22:59,159 --> 01:23:01,980
the focus here is on Last Mile and you

1812
01:23:01,980 --> 01:23:03,540
know to address the off net receivers

1813
01:23:03,540 --> 01:23:06,239
but um but it does talk about how it can

1814
01:23:06,239 --> 01:23:08,100
it can solve the middle Mile and first

1815
01:23:08,100 --> 01:23:10,620
mile problems which I think Jake's um

1816
01:23:10,620 --> 01:23:14,159
Jake's documents uh have done a good job

1817
01:23:14,159 --> 01:23:16,080
um so it kind of

1818
01:23:16,080 --> 01:23:18,600
in a hand wavy fashion kind of addresses

1819
01:23:18,600 --> 01:23:20,460
that at a high level

1820
01:23:20,460 --> 01:23:23,159
okay fair point but the last remark

1821
01:23:23,159 --> 01:23:25,020
regarding relay in the edge Cloud could

1822
01:23:25,020 --> 01:23:29,159
also be is also about the last mile

1823
01:23:29,159 --> 01:23:31,920
yeah so that's an interesting idea

1824
01:23:31,920 --> 01:23:34,620
um and uh I would invite you to come to

1825
01:23:34,620 --> 01:23:37,320
uh mbone D next um

1826
01:23:37,320 --> 01:23:38,880
and uh there's going to be an

1827
01:23:38,880 --> 01:23:40,140
interesting presentation kind of an

1828
01:23:40,140 --> 01:23:40,980
update

1829
01:23:40,980 --> 01:23:43,320
um on the multicast menu uh that Lauren

1830
01:23:43,320 --> 01:23:45,060
is going to give

1831
01:23:45,060 --> 01:23:47,100
um and uh

1832
01:23:47,100 --> 01:23:48,900
it kind of

1833
01:23:48,900 --> 01:23:49,580
um

1834
01:23:49,580 --> 01:23:51,420
graphically Illustrated there's going to

1835
01:23:51,420 --> 01:23:53,640
be a demo of that so um

1836
01:23:53,640 --> 01:23:56,820
it's a teaser for M Bundy

1837
01:23:56,820 --> 01:23:59,040
uh just one real brief comment so that's

1838
01:23:59,040 --> 01:24:01,980
a good point that Neil's just made that

1839
01:24:01,980 --> 01:24:03,960
the source could be off net the

1840
01:24:03,960 --> 01:24:06,360
receivers could be off net so it's not

1841
01:24:06,360 --> 01:24:09,300
just a last mile

1842
01:24:09,300 --> 01:24:10,080
um

1843
01:24:10,080 --> 01:24:12,560
solution it's also a first Nile solution

1844
01:24:12,560 --> 01:24:15,239
and it could be a middle mile solution

1845
01:24:15,239 --> 01:24:17,520
too meaning there's no native multicast

1846
01:24:17,520 --> 01:24:20,940
anywhere and do we want to you but by

1847
01:24:20,940 --> 01:24:23,460
having a pure overlay that does it all

1848
01:24:23,460 --> 01:24:26,040
um is yet another example

1849
01:24:26,040 --> 01:24:28,620
um and uh you might want to do that just

1850
01:24:28,620 --> 01:24:30,600
because

1851
01:24:30,600 --> 01:24:32,719
um

1852
01:24:33,000 --> 01:24:35,699
you may not have multicast so it you

1853
01:24:35,699 --> 01:24:37,800
still you want to deliver the IP

1854
01:24:37,800 --> 01:24:40,679
multicast Service uh via you know this

1855
01:24:40,679 --> 01:24:43,320
large content so all these combinations

1856
01:24:43,320 --> 01:24:44,580
should be worked in some kind of

1857
01:24:44,580 --> 01:24:47,000
document

1858
01:24:47,460 --> 01:24:50,219
yeah agreed and and you know one way to

1859
01:24:50,219 --> 01:24:52,199
think of this is you know the overlay is

1860
01:24:52,199 --> 01:24:54,120
it may not be a destination I think that

1861
01:24:54,120 --> 01:24:56,580
you know it's kind of um you bring up a

1862
01:24:56,580 --> 01:24:58,080
great Point

1863
01:24:58,080 --> 01:24:59,179
um

1864
01:24:59,179 --> 01:25:00,780
uh

1865
01:25:00,780 --> 01:25:03,060
it could start out with you know this

1866
01:25:03,060 --> 01:25:04,800
green Network this green blob in the

1867
01:25:04,800 --> 01:25:06,960
middle could be really really small uh

1868
01:25:06,960 --> 01:25:09,719
but over time as as people begin to see

1869
01:25:09,719 --> 01:25:12,540
more and more value to multicast it

1870
01:25:12,540 --> 01:25:13,500
grows

1871
01:25:13,500 --> 01:25:16,080
um so you know ideally the the goal and

1872
01:25:16,080 --> 01:25:17,460
the most efficient

1873
01:25:17,460 --> 01:25:18,120
um

1874
01:25:18,120 --> 01:25:22,260
scenario is is native and seeing this uh

1875
01:25:22,260 --> 01:25:23,780
grow over time

1876
01:25:23,780 --> 01:25:27,120
but you know the overlays

1877
01:25:27,120 --> 01:25:30,420
uh essentially provide that bridge that

1878
01:25:30,420 --> 01:25:33,360
gets you from the green to the non-green

1879
01:25:33,360 --> 01:25:35,940
and and that grain may be smaller it may

1880
01:25:35,940 --> 01:25:39,179
be big right now it's small but it

1881
01:25:39,179 --> 01:25:42,000
allows it's it's it's a it's an

1882
01:25:42,000 --> 01:25:44,100
architecture that

1883
01:25:44,100 --> 01:25:46,320
kind of gets more and more optimal the

1884
01:25:46,320 --> 01:25:48,900
bigger the green gets and it also

1885
01:25:48,900 --> 01:25:52,140
provides a level of incentive uh for

1886
01:25:52,140 --> 01:25:54,360
providers to become more and more green

1887
01:25:54,360 --> 01:25:57,300
but um you're not

1888
01:25:57,300 --> 01:25:58,800
you know what multicast has always

1889
01:25:58,800 --> 01:26:00,780
suffered from is you're bounded

1890
01:26:00,780 --> 01:26:03,420
the value of multicast is bounded by the

1891
01:26:03,420 --> 01:26:05,100
size of the green

1892
01:26:05,100 --> 01:26:08,760
um so if you can if you can you know

1893
01:26:08,760 --> 01:26:11,340
um uh you know this this benefit of an

1894
01:26:11,340 --> 01:26:12,840
incremental deployment

1895
01:26:12,840 --> 01:26:16,139
um makes that green get bigger

1896
01:26:16,139 --> 01:26:20,460
ice yep hey Ice uh Arcus

1897
01:26:20,460 --> 01:26:22,620
um doing SSM over the internet I think

1898
01:26:22,620 --> 01:26:25,020
another deployment uh hurdle there is

1899
01:26:25,020 --> 01:26:27,360
the source Discovery right because the

1900
01:26:27,360 --> 01:26:30,780
source needs to be uh fed into the the

1901
01:26:30,780 --> 01:26:32,460
first stop router and it has to be known

1902
01:26:32,460 --> 01:26:34,139
by the application are you going to

1903
01:26:34,139 --> 01:26:35,820
discuss that as well how to sort of get

1904
01:26:35,820 --> 01:26:38,840
the source Discovery going

1905
01:26:39,659 --> 01:26:42,239
um well we're I mean this this document

1906
01:26:42,239 --> 01:26:44,820
prescribes SSM which says you know don't

1907
01:26:44,820 --> 01:26:46,440
do network-based Source Discovery you

1908
01:26:46,440 --> 01:26:48,540
know search in SSM

1909
01:26:48,540 --> 01:26:50,820
Source discoveries handle that about at

1910
01:26:50,820 --> 01:26:52,679
a band you know typically by the

1911
01:26:52,679 --> 01:26:54,840
application layer so that's

1912
01:26:54,840 --> 01:26:56,400
um I think one of the one of the great

1913
01:26:56,400 --> 01:26:58,020
lessons learned and

1914
01:26:58,020 --> 01:27:00,780
yeah I'm not sure

1915
01:27:00,780 --> 01:27:02,940
yeah and not suggesting that we do

1916
01:27:02,940 --> 01:27:04,560
invent Source Discovery because we all

1917
01:27:04,560 --> 01:27:06,300
know that you know that's much more

1918
01:27:06,300 --> 01:27:08,760
complicated but by planting it to say

1919
01:27:08,760 --> 01:27:10,260
the application has to do it that's

1920
01:27:10,260 --> 01:27:12,659
great but if they don't then we cannot

1921
01:27:12,659 --> 01:27:15,120
do SSM

1922
01:27:15,120 --> 01:27:18,960
right yeah so this this model says do

1923
01:27:18,960 --> 01:27:19,800
that

1924
01:27:19,800 --> 01:27:23,219
um you know punting to the

1925
01:27:23,219 --> 01:27:26,520
um uh application layer is or some type

1926
01:27:26,520 --> 01:27:28,679
of out-of-band mechanism um application

1927
01:27:28,679 --> 01:27:32,159
layers is probably the best um most

1928
01:27:32,159 --> 01:27:33,960
effective place to do it

1929
01:27:33,960 --> 01:27:35,340
um uh

1930
01:27:35,340 --> 01:27:37,739
but but yeah I mean this this you know

1931
01:27:37,739 --> 01:27:40,080
we narrow the scope and and we you know

1932
01:27:40,080 --> 01:27:42,239
make the value judgment of

1933
01:27:42,239 --> 01:27:44,400
yeah and and this has already been done

1934
01:27:44,400 --> 01:27:47,699
I mean there's the RFC uh

1935
01:27:47,699 --> 01:27:49,860
I forget what the RFC is but essentially

1936
01:27:49,860 --> 01:27:52,199
interdomain ASM has been deprecated

1937
01:27:52,199 --> 01:27:54,300
um and uh you know it says essentially

1938
01:27:54,300 --> 01:27:57,080
use SSM

1939
01:27:57,080 --> 01:27:59,760
so you know we're following those

1940
01:27:59,760 --> 01:28:01,860
guidelines

1941
01:28:01,860 --> 01:28:03,659
well I mean just a quick point this is

1942
01:28:03,659 --> 01:28:04,739
Dino again

1943
01:28:04,739 --> 01:28:06,840
um with respect to Growing this green

1944
01:28:06,840 --> 01:28:09,000
cloud like you said you know if you

1945
01:28:09,000 --> 01:28:11,580
started with an overlay to solve the All

1946
01:28:11,580 --> 01:28:14,100
or Nothing problem and head-end

1947
01:28:14,100 --> 01:28:16,500
replication kind of hits the wall then

1948
01:28:16,500 --> 01:28:19,020
uh providers now have the customers

1949
01:28:19,020 --> 01:28:20,760
coming out and they have to solve the

1950
01:28:20,760 --> 01:28:22,980
problem and so they have to they'll be

1951
01:28:22,980 --> 01:28:25,139
forced to to use the green Cloud because

1952
01:28:25,139 --> 01:28:27,239
it'll scale better so I think it would

1953
01:28:27,239 --> 01:28:29,400
it would naturally come out now you want

1954
01:28:29,400 --> 01:28:32,040
to be able to do this gracefully but

1955
01:28:32,040 --> 01:28:33,480
um that's how you break the chicken and

1956
01:28:33,480 --> 01:28:36,000
egg problem as well

1957
01:28:36,000 --> 01:28:40,320
yeah exactly yep

1958
01:28:41,219 --> 01:28:43,920
uh okay now next so so this is this is

1959
01:28:43,920 --> 01:28:45,719
the 30 000 foot view um here's kind of

1960
01:28:45,719 --> 01:28:47,820
like you know circling into the the

1961
01:28:47,820 --> 01:28:49,620
green part

1962
01:28:49,620 --> 01:28:51,960
um so this is a CDN without multicast

1963
01:28:51,960 --> 01:28:53,400
um you know there's different models for

1964
01:28:53,400 --> 01:28:56,760
cdns if you uh

1965
01:28:56,760 --> 01:28:58,020
hit next

1966
01:28:58,020 --> 01:29:01,440
um Mike uh yeah there you go so there's

1967
01:29:01,440 --> 01:29:03,420
different models for cdns but typically

1968
01:29:03,420 --> 01:29:05,340
you have these CDN boxes and you know

1969
01:29:05,340 --> 01:29:07,199
you have a source that goes to one of

1970
01:29:07,199 --> 01:29:09,480
them and it they distribute to the other

1971
01:29:09,480 --> 01:29:12,960
CDN boxes and the CDN boxes kind of

1972
01:29:12,960 --> 01:29:16,260
uh support local uh receivers from there

1973
01:29:16,260 --> 01:29:19,380
so the benefit of this is you know

1974
01:29:19,380 --> 01:29:21,600
it just works um you don't have you

1975
01:29:21,600 --> 01:29:23,159
don't need multicast routing protocols

1976
01:29:23,159 --> 01:29:24,659
to work to get this working so that's

1977
01:29:24,659 --> 01:29:26,760
why cdns are popular

1978
01:29:26,760 --> 01:29:27,420
um

1979
01:29:27,420 --> 01:29:30,800
but uh next slide

1980
01:29:31,320 --> 01:29:35,699
this is cdns with multicast treaty ends

1981
01:29:35,699 --> 01:29:36,960
um

1982
01:29:36,960 --> 01:29:39,900
the first thing uh so hit one more time

1983
01:29:39,900 --> 01:29:42,500
Mike

1984
01:29:42,780 --> 01:29:43,560
um

1985
01:29:43,560 --> 01:29:45,780
one more

1986
01:29:45,780 --> 01:29:48,300
yeah so the first thing we do is we

1987
01:29:48,300 --> 01:29:50,760
replace those CDN boxes with AMT relays

1988
01:29:50,760 --> 01:29:52,980
we push them

1989
01:29:52,980 --> 01:29:54,960
all the way out to the border of the

1990
01:29:54,960 --> 01:29:56,940
multicast enabled Network

1991
01:29:56,940 --> 01:29:59,940
um and uh we send traffic only to

1992
01:29:59,940 --> 01:30:02,520
receivers that have two relays that have

1993
01:30:02,520 --> 01:30:04,800
um local receivers so that's one

1994
01:30:04,800 --> 01:30:06,900
optimization but the key optimization

1995
01:30:06,900 --> 01:30:09,600
here compared to cdns without multicast

1996
01:30:09,600 --> 01:30:11,639
is

1997
01:30:11,639 --> 01:30:17,280
um if these AMT relays uh are deployed

1998
01:30:17,280 --> 01:30:19,500
on existing Network infrastructure that

1999
01:30:19,500 --> 01:30:22,920
is if you have routers uh or network

2000
01:30:22,920 --> 01:30:24,000
devices

2001
01:30:24,000 --> 01:30:25,800
already in your network that do support

2002
01:30:25,800 --> 01:30:27,540
AMT relay

2003
01:30:27,540 --> 01:30:29,040
um and there are you know a number of

2004
01:30:29,040 --> 01:30:31,020
platforms from another different vendors

2005
01:30:31,020 --> 01:30:34,320
that do support AMT relays natively you

2006
01:30:34,320 --> 01:30:36,199
essentially have a CDN on a chip

2007
01:30:36,199 --> 01:30:38,880
so you can

2008
01:30:38,880 --> 01:30:42,239
as a service provider as a comp as a

2009
01:30:42,239 --> 01:30:43,800
service provider as an operator deliver

2010
01:30:43,800 --> 01:30:46,500
this service for essentially zero capex

2011
01:30:46,500 --> 01:30:49,920
um it's it's uh if it's built into the

2012
01:30:49,920 --> 01:30:54,840
forwarding plane of the uh of the router

2013
01:30:54,840 --> 01:30:57,199
you can essentially offer this service

2014
01:30:57,199 --> 01:31:00,420
at zero capex as opposed to typically

2015
01:31:00,420 --> 01:31:02,880
with you know CDN boxes it's a it's a

2016
01:31:02,880 --> 01:31:05,940
rack of x86 servers that have to get

2017
01:31:05,940 --> 01:31:10,440
racked and powered up and plugged into

2018
01:31:10,440 --> 01:31:13,020
Revenue generating routers

2019
01:31:13,020 --> 01:31:15,300
um you know kind of as Barnacles

2020
01:31:15,300 --> 01:31:17,040
um that this is something that's

2021
01:31:17,040 --> 01:31:18,540
actually built into the infrastructure

2022
01:31:18,540 --> 01:31:21,719
so uh it should be you know dramatically

2023
01:31:21,719 --> 01:31:25,340
uh cheaper and you know indications

2024
01:31:25,340 --> 01:31:27,600
folks who kind of look at this model as

2025
01:31:27,600 --> 01:31:29,900
it you know it could be

2026
01:31:29,900 --> 01:31:33,300
significantly uh uh less expensive to

2027
01:31:33,300 --> 01:31:35,600
offer this service than traditional cdns

2028
01:31:35,600 --> 01:31:38,580
so that's zero cap access just a couple

2029
01:31:38,580 --> 01:31:40,620
lines of config and you can even argue

2030
01:31:40,620 --> 01:31:42,360
with zero Opex because you don't have to

2031
01:31:42,360 --> 01:31:44,520
plug in boxes that need to be powered

2032
01:31:44,520 --> 01:31:46,320
and racked and stacked and plugged into

2033
01:31:46,320 --> 01:31:47,580
routers

2034
01:31:47,580 --> 01:31:50,300
next slide

2035
01:31:51,659 --> 01:31:53,520
all right so key benefits

2036
01:31:53,520 --> 01:31:54,480
um

2037
01:31:54,480 --> 01:31:56,520
you know you get more efficient Network

2038
01:31:56,520 --> 01:31:59,520
utilization right this not only for

2039
01:31:59,520 --> 01:32:02,820
Content that's there today

2040
01:32:02,820 --> 01:32:03,360
um

2041
01:32:03,360 --> 01:32:06,300
but uh it's it's really the real benefit

2042
01:32:06,300 --> 01:32:09,060
is it makes possible new content from

2043
01:32:09,060 --> 01:32:11,100
new contributors it makes it more viable

2044
01:32:11,100 --> 01:32:13,020
so uh things that we can't imagine

2045
01:32:13,020 --> 01:32:14,580
things that don't exist on the internet

2046
01:32:14,580 --> 01:32:16,080
today

2047
01:32:16,080 --> 01:32:18,840
um things you know a good example is uh

2048
01:32:18,840 --> 01:32:20,940
augmented reality live streaming to mass

2049
01:32:20,940 --> 01:32:23,280
audiences what if what if you could

2050
01:32:23,280 --> 01:32:25,380
have that instead of just watching a

2051
01:32:25,380 --> 01:32:27,179
game the way we've always watched it on

2052
01:32:27,179 --> 01:32:30,139
television what if you could um

2053
01:32:30,139 --> 01:32:33,540
uh have an AR experience where you feel

2054
01:32:33,540 --> 01:32:35,040
like you're in the front row Center

2055
01:32:35,040 --> 01:32:37,440
Court and you can look side to side and

2056
01:32:37,440 --> 01:32:39,000
see the celebrities sitting next to you

2057
01:32:39,000 --> 01:32:41,580
and and you can hear them talking and

2058
01:32:41,580 --> 01:32:44,219
you can have a real immersive experience

2059
01:32:44,219 --> 01:32:45,540
um things that aren't really you know

2060
01:32:45,540 --> 01:32:47,520
could you do that today could you have

2061
01:32:47,520 --> 01:32:51,540
an AR live stream of a sporting event

2062
01:32:51,540 --> 01:32:54,600
um maybe that's a 200 Meg or maybe one

2063
01:32:54,600 --> 01:32:57,780
gigabit stream uh and deliver that to

2064
01:32:57,780 --> 01:32:59,940
you know tens of thousands hundreds of

2065
01:32:59,940 --> 01:33:01,260
thousands and perhaps millions of

2066
01:33:01,260 --> 01:33:03,360
interested receivers can the internet do

2067
01:33:03,360 --> 01:33:04,920
that today

2068
01:33:04,920 --> 01:33:06,360
I don't know

2069
01:33:06,360 --> 01:33:08,400
um if it can it certainly probably would

2070
01:33:08,400 --> 01:33:10,860
be really really expensive but this is

2071
01:33:10,860 --> 01:33:13,920
pretty trivial uh for a multicast

2072
01:33:13,920 --> 01:33:15,960
enabled world

2073
01:33:15,960 --> 01:33:17,040
um

2074
01:33:17,040 --> 01:33:20,219
and uh it allows um service providers to

2075
01:33:20,219 --> 01:33:23,040
offer a new service

2076
01:33:23,040 --> 01:33:24,360
um you know replication as a service

2077
01:33:24,360 --> 01:33:26,159
send us your content we'll deliver it

2078
01:33:26,159 --> 01:33:27,840
we'll push out that replication point to

2079
01:33:27,840 --> 01:33:31,199
the most efficient point in the network

2080
01:33:31,199 --> 01:33:33,239
um so like I said it uh if you're if

2081
01:33:33,239 --> 01:33:34,800
you're existing infrastructure supports

2082
01:33:34,800 --> 01:33:37,139
multicast you can deliver this at

2083
01:33:37,139 --> 01:33:40,199
essentially zero additional cost

2084
01:33:40,199 --> 01:33:41,639
um the nice part about this is it's it's

2085
01:33:41,639 --> 01:33:43,620
this is an open standards-based

2086
01:33:43,620 --> 01:33:45,000
architecture that's using widely

2087
01:33:45,000 --> 01:33:47,699
available and understood

2088
01:33:47,699 --> 01:33:50,280
um protocols this isn't a you know a

2089
01:33:50,280 --> 01:33:53,280
proprietary CDN technology that you know

2090
01:33:53,280 --> 01:33:54,900
only

2091
01:33:54,900 --> 01:33:57,840
uh that that that is uh proprietary and

2092
01:33:57,840 --> 01:33:59,760
doesn't necessarily interoperate um

2093
01:33:59,760 --> 01:34:02,940
amongst between different um cdns

2094
01:34:02,940 --> 01:34:05,400
it also has far less coordination

2095
01:34:05,400 --> 01:34:07,139
required

2096
01:34:07,139 --> 01:34:08,639
um between the content provider and the

2097
01:34:08,639 --> 01:34:10,260
CDN provider

2098
01:34:10,260 --> 01:34:12,659
um you know some traditional unicast

2099
01:34:12,659 --> 01:34:15,179
based cdns can often have essentially

2100
01:34:15,179 --> 01:34:16,800
storage requirements so you have to deal

2101
01:34:16,800 --> 01:34:18,960
with data storage protection

2102
01:34:18,960 --> 01:34:21,360
um some cases Key Management

2103
01:34:21,360 --> 01:34:22,920
um with treaty end you're just

2104
01:34:22,920 --> 01:34:24,800
forwarding packets so you don't have to

2105
01:34:24,800 --> 01:34:28,380
deal with those issues when it comes to

2106
01:34:28,380 --> 01:34:30,480
the interaction between the content

2107
01:34:30,480 --> 01:34:33,000
provider and the CDN provider it's just

2108
01:34:33,000 --> 01:34:34,560
those interactions just happen between

2109
01:34:34,560 --> 01:34:37,679
the content provider and the end user

2110
01:34:37,679 --> 01:34:39,659
the other nice thing is this is this is

2111
01:34:39,659 --> 01:34:42,900
a decentralized uh and democratizing

2112
01:34:42,900 --> 01:34:46,139
Technology essentially uh decentralizes

2113
01:34:46,139 --> 01:34:48,360
and democratizes content sourcing um you

2114
01:34:48,360 --> 01:34:50,159
know is it healthy for the internet and

2115
01:34:50,159 --> 01:34:53,040
society that um only a small handful of

2116
01:34:53,040 --> 01:34:55,620
companies kind of control uh nearly all

2117
01:34:55,620 --> 01:34:57,540
content distribution this is a is an

2118
01:34:57,540 --> 01:35:00,040
architecture that enables

2119
01:35:00,040 --> 01:35:00,360
[Music]

2120
01:35:00,360 --> 01:35:01,340
um

2121
01:35:01,340 --> 01:35:03,900
uh us to get back to our decentralized

2122
01:35:03,900 --> 01:35:06,000
routes for the internet and um you know

2123
01:35:06,000 --> 01:35:06,980
potentially

2124
01:35:06,980 --> 01:35:10,560
uh enable and and reduce the costs and

2125
01:35:10,560 --> 01:35:12,120
the uh

2126
01:35:12,120 --> 01:35:13,620
for

2127
01:35:13,620 --> 01:35:16,159
smaller entities to deliver content

2128
01:35:16,159 --> 01:35:18,840
without uh you know

2129
01:35:18,840 --> 01:35:21,540
large intermediaries

2130
01:35:21,540 --> 01:35:24,380
next slide

2131
01:35:25,500 --> 01:35:27,480
so in terms of use cases I've spoken

2132
01:35:27,480 --> 01:35:29,699
mostly about you know video that's

2133
01:35:29,699 --> 01:35:31,199
that's kind of the sexiest and most

2134
01:35:31,199 --> 01:35:32,880
obvious use case

2135
01:35:32,880 --> 01:35:34,679
um but uh

2136
01:35:34,679 --> 01:35:36,420
there's more to it than that

2137
01:35:36,420 --> 01:35:38,880
um you know it's really the use case is

2138
01:35:38,880 --> 01:35:41,639
any multi-destination traffic this could

2139
01:35:41,639 --> 01:35:42,960
be audio it could be video like I've

2140
01:35:42,960 --> 01:35:44,760
talked about could be ar it could be

2141
01:35:44,760 --> 01:35:46,260
Telemetry data

2142
01:35:46,260 --> 01:35:48,360
um you know I invite you guys also to

2143
01:35:48,360 --> 01:35:52,199
here's another teaser come to uh M Bundy

2144
01:35:52,199 --> 01:35:53,520
and there's going to be a presentation

2145
01:35:53,520 --> 01:35:57,540
and a talk from a a provider that's

2146
01:35:57,540 --> 01:35:59,340
actually doing this and they're they're

2147
01:35:59,340 --> 01:36:02,639
delivering they're doing treaty in uh

2148
01:36:02,639 --> 01:36:04,080
with um

2149
01:36:04,080 --> 01:36:07,679
for uh weather satellites atmospheric

2150
01:36:07,679 --> 01:36:08,940
weather satellites that are delivering

2151
01:36:08,940 --> 01:36:10,860
real-time Telemetry data to research

2152
01:36:10,860 --> 01:36:13,320
institutions uh that are looking at this

2153
01:36:13,320 --> 01:36:15,900
atmospheric Telemetry so that's a use

2154
01:36:15,900 --> 01:36:18,000
case doesn't have to be video or it

2155
01:36:18,000 --> 01:36:21,540
could be um large file software updates

2156
01:36:21,540 --> 01:36:25,139
um this is uh less sexy but probably a

2157
01:36:25,139 --> 01:36:27,239
more acutely painful issue this is

2158
01:36:27,239 --> 01:36:28,500
something that Jake has been working on

2159
01:36:28,500 --> 01:36:30,480
for and talked about for years

2160
01:36:30,480 --> 01:36:32,400
um you know the idea of like iOS updates

2161
01:36:32,400 --> 01:36:34,320
things that you know need to get pushed

2162
01:36:34,320 --> 01:36:37,380
out overnight to tens of millions

2163
01:36:37,380 --> 01:36:38,940
hundreds of millions devices and you

2164
01:36:38,940 --> 01:36:41,460
know multi-gigabit files so that's

2165
01:36:41,460 --> 01:36:44,100
that's certainly uh an applicable use

2166
01:36:44,100 --> 01:36:47,120
case next slide

2167
01:36:47,940 --> 01:36:49,860
so to summarize

2168
01:36:49,860 --> 01:36:52,440
um you know we're we may be at a Nexus

2169
01:36:52,440 --> 01:36:54,420
point uh for live streaming on the

2170
01:36:54,420 --> 01:36:56,400
internet when it comes to kind of the

2171
01:36:56,400 --> 01:36:58,500
crossing of supply and demand curves the

2172
01:36:58,500 --> 01:37:01,320
demand is being fueled by exploding live

2173
01:37:01,320 --> 01:37:03,360
stream audience sizes you know in the

2174
01:37:03,360 --> 01:37:05,460
tens of millions now that you know that

2175
01:37:05,460 --> 01:37:07,020
wasn't necessarily the case

2176
01:37:07,020 --> 01:37:08,820
we have that on a weekly basis right now

2177
01:37:08,820 --> 01:37:10,380
and that wasn't the case you know prior

2178
01:37:10,380 --> 01:37:12,239
to two months ago

2179
01:37:12,239 --> 01:37:16,500
um and increasing bit rates um 4K knar

2180
01:37:16,500 --> 01:37:19,380
uh combine that with the supply uh

2181
01:37:19,380 --> 01:37:20,820
previously multicast was complex and

2182
01:37:20,820 --> 01:37:21,900
difficult

2183
01:37:21,900 --> 01:37:24,780
um you know 10 15 years ago but we've

2184
01:37:24,780 --> 01:37:26,159
been working at it folks in this room

2185
01:37:26,159 --> 01:37:28,800
and folks in mbone day we've been

2186
01:37:28,800 --> 01:37:31,679
working to improve and make network

2187
01:37:31,679 --> 01:37:34,980
based replication easier and more

2188
01:37:34,980 --> 01:37:36,420
available than ever

2189
01:37:36,420 --> 01:37:38,219
so when you combine those two things

2190
01:37:38,219 --> 01:37:40,320
multicast is easier to deploy easier to

2191
01:37:40,320 --> 01:37:43,199
operate and more valuable and useful

2192
01:37:43,199 --> 01:37:46,020
because it can work out anywhere with

2193
01:37:46,020 --> 01:37:48,600
combine that with this new you know

2194
01:37:48,600 --> 01:37:50,880
bursting demand

2195
01:37:50,880 --> 01:37:52,739
um we're kind of at a you know perhaps a

2196
01:37:52,739 --> 01:37:54,179
Nexus point where

2197
01:37:54,179 --> 01:37:56,760
um we're we're at this model

2198
01:37:56,760 --> 01:37:59,760
um you know multicast paced uh cdns

2199
01:37:59,760 --> 01:38:01,560
becomes uh much more viable and that's

2200
01:38:01,560 --> 01:38:03,600
that's what treaty end is it describes a

2201
01:38:03,600 --> 01:38:05,100
CDN model that's optimized to address

2202
01:38:05,100 --> 01:38:08,040
this um the increasing strain that live

2203
01:38:08,040 --> 01:38:09,659
stream is putting on the network

2204
01:38:09,659 --> 01:38:11,580
not only for the content today but also

2205
01:38:11,580 --> 01:38:12,960
enabling

2206
01:38:12,960 --> 01:38:15,780
new content that we couldn't imagine

2207
01:38:15,780 --> 01:38:18,120
in terms of next steps um we're seeking

2208
01:38:18,120 --> 01:38:19,739
working group adoption

2209
01:38:19,739 --> 01:38:21,300
um

2210
01:38:21,300 --> 01:38:24,659
it kind of fits between mbon D and mops

2211
01:38:24,659 --> 01:38:26,520
um I think mops is probably the better

2212
01:38:26,520 --> 01:38:28,860
place because there's more expertise uh

2213
01:38:28,860 --> 01:38:31,139
on the CDN side

2214
01:38:31,139 --> 01:38:33,239
um but uh I'm also going to be talking

2215
01:38:33,239 --> 01:38:35,280
about this in MMD so

2216
01:38:35,280 --> 01:38:36,659
um I wanted to share it with this group

2217
01:38:36,659 --> 01:38:39,659
uh let people be aware of it um perhaps

2218
01:38:39,659 --> 01:38:40,920
a little teaser for

2219
01:38:40,920 --> 01:38:43,139
their conversation next slide and the

2220
01:38:43,139 --> 01:38:46,500
next um uh the next meeting but um would

2221
01:38:46,500 --> 01:38:47,760
welcome any feedback and thoughts

2222
01:38:47,760 --> 01:38:50,480
anybody might have

2223
01:39:02,719 --> 01:39:05,040
thank you for our presentation I think

2224
01:39:05,040 --> 01:39:07,199
this is a really very interesting topic

2225
01:39:07,199 --> 01:39:12,840
just a very uh quick to clarification

2226
01:39:12,840 --> 01:39:15,780
questions for the scenario the first one

2227
01:39:15,780 --> 01:39:18,420
is whether the source of the live

2228
01:39:18,420 --> 01:39:21,020
streaming in this scenario will be very

2229
01:39:21,020 --> 01:39:24,980
Dynamic I mean it can be anywhere in the

2230
01:39:24,980 --> 01:39:28,860
network and whether it can be a problem

2231
01:39:28,860 --> 01:39:34,139
for setting up uh for example uh setting

2232
01:39:34,139 --> 01:39:37,320
up a multi p2mp path and another

2233
01:39:37,320 --> 01:39:39,600
question is whether the receivers will

2234
01:39:39,600 --> 01:39:43,280
be very Dynamic it also influence the

2235
01:39:43,280 --> 01:39:46,860
convergence of the multicaster tree it's

2236
01:39:46,860 --> 01:39:49,940
just for clarification

2237
01:39:50,219 --> 01:39:52,920
yeah so uh yes

2238
01:39:52,920 --> 01:39:55,679
um you can have ephemeral receivers um

2239
01:39:55,679 --> 01:39:57,540
coming and going

2240
01:39:57,540 --> 01:39:58,260
um

2241
01:39:58,260 --> 01:40:00,300
I think that's kind of the nature you

2242
01:40:00,300 --> 01:40:02,100
know this is optimized for

2243
01:40:02,100 --> 01:40:05,460
over the top uh receivers um so that's

2244
01:40:05,460 --> 01:40:07,320
uh that's that's certainly a use case

2245
01:40:07,320 --> 01:40:10,440
and um in terms of sourcing yes they can

2246
01:40:10,440 --> 01:40:12,540
I mean that that's a feature of this if

2247
01:40:12,540 --> 01:40:14,100
the sources could be anywhere

2248
01:40:14,100 --> 01:40:15,600
um and that's that's the beauty of a

2249
01:40:15,600 --> 01:40:18,420
decentralized model sources can come can

2250
01:40:18,420 --> 01:40:20,040
pop up anywhere you don't necessarily

2251
01:40:20,040 --> 01:40:22,920
have to go through a handful of the

2252
01:40:22,920 --> 01:40:24,659
large you know

2253
01:40:24,659 --> 01:40:27,840
content uh hyperscalers that that kind

2254
01:40:27,840 --> 01:40:30,860
of deliver content today

2255
01:40:30,860 --> 01:40:34,560
uh okay if if the source and receivers

2256
01:40:34,560 --> 01:40:37,679
are all uh very uh Dynamic do you think

2257
01:40:37,679 --> 01:40:40,199
the existing multicast protocol is

2258
01:40:40,199 --> 01:40:44,699
enough to uh settle this case

2259
01:40:44,699 --> 01:40:46,980
I sure hope so we've been working at it

2260
01:40:46,980 --> 01:40:49,679
for 25 30 years or so

2261
01:40:49,679 --> 01:40:51,420
um sure I mean that's what Pim does

2262
01:40:51,420 --> 01:40:52,679
right

2263
01:40:52,679 --> 01:40:56,159
um uh so um

2264
01:40:56,159 --> 01:40:59,400
uh I I think that's what it's there for

2265
01:40:59,400 --> 01:41:00,780
um that's what the multicast writing

2266
01:41:00,780 --> 01:41:02,520
Protocols are there for the the magic of

2267
01:41:02,520 --> 01:41:04,199
this working group has been to to to

2268
01:41:04,199 --> 01:41:08,100
support uh this kind of uh dynamicity

2269
01:41:08,100 --> 01:41:12,620
sure thank you Dino do you agree

2270
01:41:12,840 --> 01:41:15,420
well I wanted to respond um

2271
01:41:15,420 --> 01:41:18,960
um using the AMT gateways certainly the

2272
01:41:18,960 --> 01:41:20,520
receivers could move around quite a bit

2273
01:41:20,520 --> 01:41:22,860
and they'll just attach to a new relay

2274
01:41:22,860 --> 01:41:24,900
uh if the relay already has other

2275
01:41:24,900 --> 01:41:26,580
gateways then the tree's already built

2276
01:41:26,580 --> 01:41:28,440
through the native multicast Cloud so

2277
01:41:28,440 --> 01:41:30,840
there's no joint latency there from the

2278
01:41:30,840 --> 01:41:33,719
sources point of view the the vision

2279
01:41:33,719 --> 01:41:35,699
that Lenny has is let's have the sources

2280
01:41:35,699 --> 01:41:38,159
in the multicast cloud so whatever the

2281
01:41:38,159 --> 01:41:40,500
convergence of a source moving well

2282
01:41:40,500 --> 01:41:43,199
Source Mobility with multicast hasn't

2283
01:41:43,199 --> 01:41:45,360
been done that much and that's something

2284
01:41:45,360 --> 01:41:47,460
to look at but the source is pretty much

2285
01:41:47,460 --> 01:41:50,340
stationary now if the source is coming

2286
01:41:50,340 --> 01:41:52,800
in through AMT

2287
01:41:52,800 --> 01:41:54,960
um it's the same thing is that if it

2288
01:41:54,960 --> 01:41:56,580
hits a relay

2289
01:41:56,580 --> 01:41:59,639
um that is already using that Source

2290
01:41:59,639 --> 01:42:01,320
address and the tree is built we're good

2291
01:42:01,320 --> 01:42:03,420
to go likely it's not because it's

2292
01:42:03,420 --> 01:42:05,699
coming into a new location so that means

2293
01:42:05,699 --> 01:42:07,800
there's kind of an RPF change that goes

2294
01:42:07,800 --> 01:42:10,440
through to the new relay

2295
01:42:10,440 --> 01:42:12,320
um so

2296
01:42:12,320 --> 01:42:15,540
so Looney I guess the message here or

2297
01:42:15,540 --> 01:42:16,920
something for all of us to think about

2298
01:42:16,920 --> 01:42:21,239
is as AMT sources and AMT receivers move

2299
01:42:21,239 --> 01:42:23,580
around will the tree inside the native

2300
01:42:23,580 --> 01:42:25,980
multicast Cloud have to change and if it

2301
01:42:25,980 --> 01:42:27,300
doesn't It's a Wonderful scaling

2302
01:42:27,300 --> 01:42:29,719
property

2303
01:42:30,900 --> 01:42:31,679
um

2304
01:42:31,679 --> 01:42:33,840
yes tiger also

2305
01:42:33,840 --> 01:42:35,520
um if this horse address changes

2306
01:42:35,520 --> 01:42:37,920
throughout the application must somehow

2307
01:42:37,920 --> 01:42:40,080
figure out some way of Distributing or

2308
01:42:40,080 --> 01:42:42,360
updating what the new source address is

2309
01:42:42,360 --> 01:42:45,719
probably yeah great point stick see I

2310
01:42:45,719 --> 01:42:46,980
didn't think that because I always think

2311
01:42:46,980 --> 01:42:48,480
in lisp and I say the source address

2312
01:42:48,480 --> 01:42:51,420
never changes sorry

2313
01:42:51,420 --> 01:42:53,040
foreign

2314
01:42:53,040 --> 01:42:56,340
yeah so um I think this is where lispin

2315
01:42:56,340 --> 01:42:58,380
can have a play to be honest with you

2316
01:42:58,380 --> 01:43:01,320
you know AMT does not support sourcing

2317
01:43:01,320 --> 01:43:04,380
behind an AMT Gateway

2318
01:43:04,380 --> 01:43:06,780
um and and that not to be mistaken for

2319
01:43:06,780 --> 01:43:08,280
what you know the work that Jake has

2320
01:43:08,280 --> 01:43:10,440
been doing uh that that's been mostly

2321
01:43:10,440 --> 01:43:11,880
more middle mile

2322
01:43:11,880 --> 01:43:13,980
um where you have multicast Network

2323
01:43:13,980 --> 01:43:16,020
multicast networks separated by a

2324
01:43:16,020 --> 01:43:19,800
unicast network and uh and using AMT to

2325
01:43:19,800 --> 01:43:21,540
kind of tunnel between two multicast

2326
01:43:21,540 --> 01:43:23,040
islands

2327
01:43:23,040 --> 01:43:26,820
um what this uh what what when you have

2328
01:43:26,820 --> 01:43:29,880
a source sitting off net and the source

2329
01:43:29,880 --> 01:43:31,860
is perhaps unicast or the source is on

2330
01:43:31,860 --> 01:43:33,840
you know another Network

2331
01:43:33,840 --> 01:43:35,100
um you know that that might be where

2332
01:43:35,100 --> 01:43:38,460
lisp uh is is a really good fit because

2333
01:43:38,460 --> 01:43:40,860
um you know list has the ability lisp

2334
01:43:40,860 --> 01:43:42,480
has the ability to support multicast

2335
01:43:42,480 --> 01:43:45,659
sourcing much better than AMT so

2336
01:43:45,659 --> 01:43:47,880
um you know I I think we can

2337
01:43:47,880 --> 01:43:50,040
we could just hand wave and say overlay

2338
01:43:50,040 --> 01:43:51,300
networking

2339
01:43:51,300 --> 01:43:53,699
um uh and advances in Tech different

2340
01:43:53,699 --> 01:43:56,639
overlay Network to Technologies can be

2341
01:43:56,639 --> 01:43:59,040
used to solve the problem of getting

2342
01:43:59,040 --> 01:44:02,219
multicast from into uh

2343
01:44:02,219 --> 01:44:04,080
uh wherever it needs to go even over

2344
01:44:04,080 --> 01:44:05,639
points of the network that aren't

2345
01:44:05,639 --> 01:44:07,679
multicast enabled

2346
01:44:07,679 --> 01:44:11,159
yeah a good point so having said that I

2347
01:44:11,159 --> 01:44:12,540
mean all the the points that you and

2348
01:44:12,540 --> 01:44:14,760
stigmate means that if you bring the

2349
01:44:14,760 --> 01:44:16,080
source in

2350
01:44:16,080 --> 01:44:19,020
um to the multicast cloud via lisp then

2351
01:44:19,020 --> 01:44:20,400
the source address doesn't have to

2352
01:44:20,400 --> 01:44:21,900
change so you don't have to change the

2353
01:44:21,900 --> 01:44:24,719
applications but as the source moves it

2354
01:44:24,719 --> 01:44:27,600
could always attach to the same point of

2355
01:44:27,600 --> 01:44:29,639
the multicast cloud so the S comma G

2356
01:44:29,639 --> 01:44:31,800
tree that's built inside the multicast

2357
01:44:31,800 --> 01:44:33,840
cloud doesn't have to change either so

2358
01:44:33,840 --> 01:44:36,600
that's wonderful as well

2359
01:44:36,600 --> 01:44:39,080
okay

2360
01:44:40,440 --> 01:44:42,659
yeah and to be honest with you you know

2361
01:44:42,659 --> 01:44:44,639
anything's possible but I I don't

2362
01:44:44,639 --> 01:44:46,080
necessarily see the source address

2363
01:44:46,080 --> 01:44:48,239
changing much for for these use cases I

2364
01:44:48,239 --> 01:44:50,340
mean if you think think it through you

2365
01:44:50,340 --> 01:44:51,840
know why would the source address need

2366
01:44:51,840 --> 01:44:53,760
to change usually it's a stationary

2367
01:44:53,760 --> 01:44:56,340
Source um or even if it's a drone maybe

2368
01:44:56,340 --> 01:44:58,980
it's hopping around but in a relatively

2369
01:44:58,980 --> 01:45:01,500
bounded area but anyway sorry I think

2370
01:45:01,500 --> 01:45:02,760
I've probably taken up too much yeah I

2371
01:45:02,760 --> 01:45:04,440
think we need to move on then but but

2372
01:45:04,440 --> 01:45:08,759
thanks for a good discussion sure

2373
01:45:09,360 --> 01:45:15,019
all right yeah like last one here

2374
01:45:18,540 --> 01:45:20,159
we're gonna go the full two hours after

2375
01:45:20,159 --> 01:45:21,000
all

2376
01:45:21,000 --> 01:45:25,020
right so last this past summer there was

2377
01:45:25,020 --> 01:45:26,940
a interim

2378
01:45:26,940 --> 01:45:29,159
I think it was semantic routing interim

2379
01:45:29,159 --> 01:45:32,159
and the chat during the interim got

2380
01:45:32,159 --> 01:45:33,960
pretty busy with people talking about

2381
01:45:33,960 --> 01:45:35,880
multicast

2382
01:45:35,880 --> 01:45:37,679
and somebody brought the point that you

2383
01:45:37,679 --> 01:45:39,600
know it'd really be helpful to have a

2384
01:45:39,600 --> 01:45:41,699
document that kind of just went over the

2385
01:45:41,699 --> 01:45:43,860
history of multicast to see where we've

2386
01:45:43,860 --> 01:45:47,460
been to see why we're at where we are

2387
01:45:47,460 --> 01:45:49,020
and maybe to have something about

2388
01:45:49,020 --> 01:45:50,940
Lessons Learned so

2389
01:45:50,940 --> 01:45:54,480
um I reached out to Dino and Lenny

2390
01:45:54,480 --> 01:45:56,760
um long time multicasters

2391
01:45:56,760 --> 01:45:59,100
I think it's been like 25 years or so

2392
01:45:59,100 --> 01:46:01,860
ago that I worked at Cisco with Dino he

2393
01:46:01,860 --> 01:46:04,440
was developer and I was a tester of the

2394
01:46:04,440 --> 01:46:06,719
code that he developed and

2395
01:46:06,719 --> 01:46:08,400
um a lot of respect for both these guys

2396
01:46:08,400 --> 01:46:10,260
and so I just picked their brain and so

2397
01:46:10,260 --> 01:46:11,940
I got a lot of feedback from both of

2398
01:46:11,940 --> 01:46:13,320
them about just some things that we've

2399
01:46:13,320 --> 01:46:15,420
learned over the last 30 years of

2400
01:46:15,420 --> 01:46:18,239
multicast development so we put this

2401
01:46:18,239 --> 01:46:20,100
together admittedly there's a lot of

2402
01:46:20,100 --> 01:46:22,260
work that needs to be done if this is a

2403
01:46:22,260 --> 01:46:24,540
useful document but

2404
01:46:24,540 --> 01:46:25,199
um

2405
01:46:25,199 --> 01:46:28,199
that's why we're here and if this is

2406
01:46:28,199 --> 01:46:30,960
useful it may be either be done here

2407
01:46:30,960 --> 01:46:33,420
since it talks about protocols or

2408
01:46:33,420 --> 01:46:35,820
nmbon D next slide thing if you can hit

2409
01:46:35,820 --> 01:46:37,920
that space yeah

2410
01:46:37,920 --> 01:46:40,260
all right so um this is the background

2411
01:46:40,260 --> 01:46:42,540
that I just I just mentioned we did

2412
01:46:42,540 --> 01:46:46,020
discuss the three of us in the last ITF

2413
01:46:46,020 --> 01:46:48,600
came up with this draft it's not

2414
01:46:48,600 --> 01:46:51,480
intended to be a BCP just uh kind of a

2415
01:46:51,480 --> 01:46:53,639
historical document to help us

2416
01:46:53,639 --> 01:46:54,600
understand some of the previous

2417
01:46:54,600 --> 01:46:56,460
development work

2418
01:46:56,460 --> 01:46:57,119
um

2419
01:46:57,119 --> 01:46:59,699
to help us understand the current work

2420
01:46:59,699 --> 01:47:01,560
and we're hopeful that this will help

2421
01:47:01,560 --> 01:47:02,760
people that are not familiar with

2422
01:47:02,760 --> 01:47:04,260
multicast unders better understand

2423
01:47:04,260 --> 01:47:07,199
multicast because it still amazes me

2424
01:47:07,199 --> 01:47:10,260
that I talk with people fairly regularly

2425
01:47:10,260 --> 01:47:12,900
that just say that multicast is very

2426
01:47:12,900 --> 01:47:15,540
complicated to the point that Lenny just

2427
01:47:15,540 --> 01:47:17,940
discussed in his document so um

2428
01:47:17,940 --> 01:47:19,679
hopefully this may help

2429
01:47:19,679 --> 01:47:22,560
and we do start with dvmrp one of the

2430
01:47:22,560 --> 01:47:24,360
first multicast writing protocols

2431
01:47:24,360 --> 01:47:25,679
because that's really how we've it

2432
01:47:25,679 --> 01:47:28,639
started we solved some problems with the

2433
01:47:28,639 --> 01:47:32,400
dvmrp and made some design choices Dino

2434
01:47:32,400 --> 01:47:34,380
and others made some design choices

2435
01:47:34,380 --> 01:47:38,280
Elisa Cisco and we progress from various

2436
01:47:38,280 --> 01:47:41,280
different versions of igmp

2437
01:47:41,280 --> 01:47:43,860
to where we are today with ignb V3 and

2438
01:47:43,860 --> 01:47:45,300
MLD

2439
01:47:45,300 --> 01:47:47,760
and then a variety of Pim writing

2440
01:47:47,760 --> 01:47:49,800
protocols that developed throughout the

2441
01:47:49,800 --> 01:47:52,760
years next slide

2442
01:47:53,040 --> 01:47:55,020
so I just chose for this presentation

2443
01:47:55,020 --> 01:47:56,760
just to give you an idea if you haven't

2444
01:47:56,760 --> 01:47:59,040
read the draft of some of the protocols

2445
01:47:59,040 --> 01:48:01,380
there's some uh that I some of that I

2446
01:48:01,380 --> 01:48:02,820
did include that are in the draft are

2447
01:48:02,820 --> 01:48:05,820
things like Wi-Fi that Lenny mentioned

2448
01:48:05,820 --> 01:48:07,619
we have a document specifically on that

2449
01:48:07,619 --> 01:48:09,600
that talks about challenges of multicast

2450
01:48:09,600 --> 01:48:11,340
in a Wi-Fi environment

2451
01:48:11,340 --> 01:48:13,260
where there's no acknowledgments and it

2452
01:48:13,260 --> 01:48:15,659
there's a lot of drops

2453
01:48:15,659 --> 01:48:18,840
um I didn't get into uh the it was

2454
01:48:18,840 --> 01:48:20,940
pretty contentious many years ago with

2455
01:48:20,940 --> 01:48:22,080
uh

2456
01:48:22,080 --> 01:48:23,639
the um

2457
01:48:23,639 --> 01:48:27,119
mpls Wars at the time between Cisco and

2458
01:48:27,119 --> 01:48:30,780
Juniper mostly with mltp versus point to

2459
01:48:30,780 --> 01:48:33,060
multiple rsvte and then it kind of they

2460
01:48:33,060 --> 01:48:35,100
all kind of came together

2461
01:48:35,100 --> 01:48:37,199
so we included that in the draft but

2462
01:48:37,199 --> 01:48:40,080
just with dvmrp it was a flood and broom

2463
01:48:40,080 --> 01:48:42,659
it is a flood improved protocol good

2464
01:48:42,659 --> 01:48:45,060
initial solution but we quickly realized

2465
01:48:45,060 --> 01:48:47,940
that it just wouldn't scale with higher

2466
01:48:47,940 --> 01:48:50,159
bit rates

2467
01:48:50,159 --> 01:48:51,780
um and using the network to discover

2468
01:48:51,780 --> 01:48:54,480
sources as Lenny just mentioned was also

2469
01:48:54,480 --> 01:48:55,860
something we originally thought would be

2470
01:48:55,860 --> 01:48:58,440
a good idea it makes the network more

2471
01:48:58,440 --> 01:49:01,440
valuable but um discovered to be a bit

2472
01:49:01,440 --> 01:49:03,060
too intensive

2473
01:49:03,060 --> 01:49:05,400
and so we felt that it this protocol

2474
01:49:05,400 --> 01:49:07,139
worked good in small scale development

2475
01:49:07,139 --> 01:49:10,139
in deployments but uh began to suffer in

2476
01:49:10,139 --> 01:49:11,699
larger multicast environments so we

2477
01:49:11,699 --> 01:49:13,260
needed better Solutions

2478
01:49:13,260 --> 01:49:15,600
so we evolved from dmrp to some other

2479
01:49:15,600 --> 01:49:17,340
protocols next slide

2480
01:49:17,340 --> 01:49:20,159
I just have a couple more

2481
01:49:20,159 --> 01:49:23,420
um the shared and uh Source tree

2482
01:49:23,420 --> 01:49:26,400
development work the shared trees were

2483
01:49:26,400 --> 01:49:28,139
designed to reduce state

2484
01:49:28,139 --> 01:49:30,119
a lot of State discussion over the years

2485
01:49:30,119 --> 01:49:32,480
we still have those today

2486
01:49:32,480 --> 01:49:34,679
particularly at a time when memory was

2487
01:49:34,679 --> 01:49:36,719
scarce and expensive

2488
01:49:36,719 --> 01:49:37,679
um

2489
01:49:37,679 --> 01:49:39,719
and shortest patch trees were simpler

2490
01:49:39,719 --> 01:49:41,820
and more optimal but they consumed more

2491
01:49:41,820 --> 01:49:43,560
state

2492
01:49:43,560 --> 01:49:45,060
we did need to fix the flood and

2493
01:49:45,060 --> 01:49:47,820
protocol that Dave Murphy had

2494
01:49:47,820 --> 01:49:50,940
we did fix it but didn't provide any

2495
01:49:50,940 --> 01:49:53,280
explicit signaling from a source to

2496
01:49:53,280 --> 01:49:55,860
discover them

2497
01:49:55,860 --> 01:49:57,780
um so the multicast writing protocol

2498
01:49:57,780 --> 01:50:01,320
discovered the sources using Pim

2499
01:50:01,320 --> 01:50:04,440
switching from One Tree shared to the

2500
01:50:04,440 --> 01:50:06,000
other source was a difficult routing

2501
01:50:06,000 --> 01:50:07,560
problem problem

2502
01:50:07,560 --> 01:50:09,900
uh that again I didn't have to fix but

2503
01:50:09,900 --> 01:50:11,940
developers did

2504
01:50:11,940 --> 01:50:12,540
um

2505
01:50:12,540 --> 01:50:14,580
and because when you join the source

2506
01:50:14,580 --> 01:50:16,500
tree you had to prune that Source from

2507
01:50:16,500 --> 01:50:18,000
the share tree

2508
01:50:18,000 --> 01:50:19,920
so we could get into that a little bit

2509
01:50:19,920 --> 01:50:21,000
in the paper

2510
01:50:21,000 --> 01:50:24,980
the the draft next slide

2511
01:50:26,100 --> 01:50:28,320
uh Lenny already discussed in his

2512
01:50:28,320 --> 01:50:30,900
document the All or Nothing problem with

2513
01:50:30,900 --> 01:50:32,580
every layer three hop

2514
01:50:32,580 --> 01:50:34,619
between the source and receivers need to

2515
01:50:34,619 --> 01:50:37,639
support a multi-gas routing protocol

2516
01:50:37,639 --> 01:50:41,340
and that tends to create and it has a a

2517
01:50:41,340 --> 01:50:43,860
big barrier to deployment and so as he

2518
01:50:43,860 --> 01:50:45,780
just described there's a way that you

2519
01:50:45,780 --> 01:50:46,619
can

2520
01:50:46,619 --> 01:50:49,440
use overlay networking you can use AMT

2521
01:50:49,440 --> 01:50:51,540
to uh to get over that and we kind of

2522
01:50:51,540 --> 01:50:53,820
discussed that as well so

2523
01:50:53,820 --> 01:50:56,400
when people ask us about AMT we are

2524
01:50:56,400 --> 01:50:58,500
trying to share this document where

2525
01:50:58,500 --> 01:51:00,540
we've been to get to the point of why

2526
01:51:00,540 --> 01:51:03,060
AMT is necessary so they can understand

2527
01:51:03,060 --> 01:51:05,820
why these automatic tunnels are even

2528
01:51:05,820 --> 01:51:08,219
something that we created

2529
01:51:08,219 --> 01:51:11,119
uh next slide

2530
01:51:11,940 --> 01:51:13,560
so this is this is the last Light so

2531
01:51:13,560 --> 01:51:15,239
there's so many other protocols at the

2532
01:51:15,239 --> 01:51:16,739
beginning of the draft lists them all I

2533
01:51:16,739 --> 01:51:18,540
don't know like 15 20 protocols there's

2534
01:51:18,540 --> 01:51:19,980
many more

2535
01:51:19,980 --> 01:51:21,780
but we decided to just focus on the

2536
01:51:21,780 --> 01:51:23,159
major ones

2537
01:51:23,159 --> 01:51:23,760
um

2538
01:51:23,760 --> 01:51:25,080
and

2539
01:51:25,080 --> 01:51:27,540
uh again just we're hopeful that

2540
01:51:27,540 --> 01:51:29,639
something like this whether it's adopted

2541
01:51:29,639 --> 01:51:31,560
or not will be able to help people just

2542
01:51:31,560 --> 01:51:33,000
understand

2543
01:51:33,000 --> 01:51:36,420
the history of the last 30 years

2544
01:51:36,420 --> 01:51:37,800
um so the question we have is this is

2545
01:51:37,800 --> 01:51:40,080
this something that we should work on in

2546
01:51:40,080 --> 01:51:42,840
the ITF if it is should we work it on it

2547
01:51:42,840 --> 01:51:44,639
here in Pim or do you think Cambodia

2548
01:51:44,639 --> 01:51:45,780
would be better

2549
01:51:45,780 --> 01:51:48,719
I'll leave that to you and that's all I

2550
01:51:48,719 --> 01:51:50,840
got

2551
01:51:55,139 --> 01:51:59,400
and nobody really cares so

2552
01:51:59,580 --> 01:52:03,420
so uh is there anybody in the queue uh

2553
01:52:03,420 --> 01:52:07,699
yeah uh oh yeah

2554
01:52:07,800 --> 01:52:11,159
I think this is necessary especially for

2555
01:52:11,159 --> 01:52:13,380
anyone who is not familiar with the

2556
01:52:13,380 --> 01:52:16,500
history actually from my side when I uh

2557
01:52:16,500 --> 01:52:18,600
want to learn something about modcast I

2558
01:52:18,600 --> 01:52:24,300
will see uh pin and MPS p2mp and then

2559
01:52:24,300 --> 01:52:27,900
beer the a lot of protocols mentioned

2560
01:52:27,900 --> 01:52:31,560
here are also hmp and MLD for sure a lot

2561
01:52:31,560 --> 01:52:34,139
of protocols mentioned in the slides I I

2562
01:52:34,139 --> 01:52:36,960
am not familiar with so I think this is

2563
01:52:36,960 --> 01:52:38,820
a very good

2564
01:52:38,820 --> 01:52:41,400
um document to make people know what has

2565
01:52:41,400 --> 01:52:44,880
already happened and uh what could could

2566
01:52:44,880 --> 01:52:47,760
learn from it so I think it is good

2567
01:52:47,760 --> 01:52:50,100
talking thank you but I'm sorry I

2568
01:52:50,100 --> 01:52:52,739
haven't read it yet I will try to read

2569
01:52:52,739 --> 01:52:54,659
it yeah that's a good point it does

2570
01:52:54,659 --> 01:52:58,320
leave us to wonder if we need to include

2571
01:52:58,320 --> 01:52:59,639
a brief description of all these

2572
01:52:59,639 --> 01:53:02,460
protocols or not

2573
01:53:02,460 --> 01:53:04,139
so what are the problems we're having in

2574
01:53:04,139 --> 01:53:05,940
the ietf over

2575
01:53:05,940 --> 01:53:09,360
history is that I see young designers

2576
01:53:09,360 --> 01:53:12,480
developers and implementers making

2577
01:53:12,480 --> 01:53:15,060
um coming up with proposals and older

2578
01:53:15,060 --> 01:53:16,560
people are saying no that's not going to

2579
01:53:16,560 --> 01:53:18,659
work and they say well why not and they

2580
01:53:18,659 --> 01:53:21,719
say well we did that so far long ago and

2581
01:53:21,719 --> 01:53:23,760
these young people want to get

2582
01:53:23,760 --> 01:53:26,100
information in detail about what happens

2583
01:53:26,100 --> 01:53:29,219
so we have to document history otherwise

2584
01:53:29,219 --> 01:53:32,040
we'll repeat the mistakes so I you know

2585
01:53:32,040 --> 01:53:33,860
that's just a general comment

2586
01:53:33,860 --> 01:53:37,739
uh Ryan that's you yeah yeah just wanted

2587
01:53:37,739 --> 01:53:40,320
to Echo would love to see this document

2588
01:53:40,320 --> 01:53:42,420
produced haven't had a chance to read it

2589
01:53:42,420 --> 01:53:43,679
yet

2590
01:53:43,679 --> 01:53:45,420
um intend to read it and give you some

2591
01:53:45,420 --> 01:53:47,820
feedback I drift in and out of needing

2592
01:53:47,820 --> 01:53:49,980
to have multicast Proficiency in my role

2593
01:53:49,980 --> 01:53:51,719
as a operator my apologies I didn't

2594
01:53:51,719 --> 01:53:54,659
announce Brian Hoffman from Telus so

2595
01:53:54,659 --> 01:53:56,280
thank you for starting this work very

2596
01:53:56,280 --> 01:53:58,440
valuable work okay thank you

2597
01:53:58,440 --> 01:54:02,360
uh yeah I also think this is useful and

2598
01:54:02,360 --> 01:54:06,420
it might be good to discuss pin bider a

2599
01:54:06,420 --> 01:54:08,760
little bit as well but but basically

2600
01:54:08,760 --> 01:54:10,800
yeah people just look at all the working

2601
01:54:10,800 --> 01:54:13,440
group policies you know they can get

2602
01:54:13,440 --> 01:54:15,239
lost and they don't know which are the

2603
01:54:15,239 --> 01:54:17,040
core documents and

2604
01:54:17,040 --> 01:54:19,320
what what the options are so yeah I

2605
01:54:19,320 --> 01:54:21,659
think it's good

2606
01:54:21,659 --> 01:54:24,119
all right should we take should you take

2607
01:54:24,119 --> 01:54:25,260
it to the list or you want to ask people

2608
01:54:25,260 --> 01:54:27,540
right now uh

2609
01:54:27,540 --> 01:54:30,600
for adoption or yeah

2610
01:54:30,600 --> 01:54:33,440
uh

2611
01:54:34,139 --> 01:54:36,900
I think we can do an adoption column on

2612
01:54:36,900 --> 01:54:38,820
the list sounds good

2613
01:54:38,820 --> 01:54:42,239
um yeah um yeah we might discuss briefly

2614
01:54:42,239 --> 01:54:44,639
number on D as well I guess true what

2615
01:54:44,639 --> 01:54:48,619
the best home is for this but um

2616
01:54:48,900 --> 01:54:50,159
yeah

2617
01:54:50,159 --> 01:54:53,400
yeah we'll we'll check with the embodia

2618
01:54:53,400 --> 01:54:55,080
as well before me

2619
01:54:55,080 --> 01:54:58,020
consider adopting it but um

2620
01:54:58,020 --> 01:54:59,880
at least this seems like there's a fair

2621
01:54:59,880 --> 01:55:02,520
amount of Interest so yeah you have a

2622
01:55:02,520 --> 01:55:03,780
question Lenny

2623
01:55:03,780 --> 01:55:04,980
comment

2624
01:55:04,980 --> 01:55:06,980
um just uh

2625
01:55:06,980 --> 01:55:11,159
speaking for M bone D I guess um it's

2626
01:55:11,159 --> 01:55:13,739
really early so I'm I the the only ha

2627
01:55:13,739 --> 01:55:15,480
I'm not sure which hat I'm speaking with

2628
01:55:15,480 --> 01:55:19,260
is a Bundy chair or author or uh what

2629
01:55:19,260 --> 01:55:20,880
the only hat I know that I'm taking off

2630
01:55:20,880 --> 01:55:23,639
is my cogent hat because it's really

2631
01:55:23,639 --> 01:55:25,020
early

2632
01:55:25,020 --> 01:55:28,380
um but you know my thoughts would be if

2633
01:55:28,380 --> 01:55:31,260
this is lessons about

2634
01:55:31,260 --> 01:55:34,340
deployment it probably in operations

2635
01:55:34,340 --> 01:55:37,920
then it's m bone D if it's more lessons

2636
01:55:37,920 --> 01:55:40,139
about protocol development it would seem

2637
01:55:40,139 --> 01:55:42,840
like it would be more Pim this document

2638
01:55:42,840 --> 01:55:46,560
I think does a little of both

2639
01:55:46,560 --> 01:55:48,239
um so I think it kind of fits sort of in

2640
01:55:48,239 --> 01:55:52,380
between both but to me I think it's more

2641
01:55:52,380 --> 01:55:55,460
protocol lessons than deployment lessons

2642
01:55:55,460 --> 01:55:59,940
so I think that you know given that I

2643
01:55:59,940 --> 01:56:02,340
would think that Pim would be the better

2644
01:56:02,340 --> 01:56:04,980
fit but um you know I I would uh

2645
01:56:04,980 --> 01:56:07,020
probably defer to I would recuse myself

2646
01:56:07,020 --> 01:56:09,360
from that decision and let uh Greg Greg

2647
01:56:09,360 --> 01:56:11,940
make that call for officially for uh and

2648
01:56:11,940 --> 01:56:14,940
Bondi but um that's just kind of my my

2649
01:56:14,940 --> 01:56:17,460
thoughts in the middle of the night

2650
01:56:17,460 --> 01:56:20,960
what what it feels like

2651
01:56:21,000 --> 01:56:22,860
I think documenting

2652
01:56:22,860 --> 01:56:25,080
um history for both of those the

2653
01:56:25,080 --> 01:56:27,000
protocol development and deployment is

2654
01:56:27,000 --> 01:56:28,739
going to be useful the question is

2655
01:56:28,739 --> 01:56:30,540
should be put in one spec different spec

2656
01:56:30,540 --> 01:56:32,040
I think there's going to be more people

2657
01:56:32,040 --> 01:56:33,060
that are going to care about the

2658
01:56:33,060 --> 01:56:34,080
deployment because there's more

2659
01:56:34,080 --> 01:56:36,300
operators in the world than developers

2660
01:56:36,300 --> 01:56:37,679
so

2661
01:56:37,679 --> 01:56:40,440
I don't know if we want to put make this

2662
01:56:40,440 --> 01:56:44,100
to integrated or separate documents

2663
01:56:44,100 --> 01:56:46,619
um I have a feeling that the deployment

2664
01:56:46,619 --> 01:56:49,980
document would be much larger because

2665
01:56:49,980 --> 01:56:51,780
there's been I don't know if there's

2666
01:56:51,780 --> 01:56:54,119
enough people that could document it

2667
01:56:54,119 --> 01:56:56,580
accurately but you know

2668
01:56:56,580 --> 01:56:58,380
yeah I think it's better it's more

2669
01:56:58,380 --> 01:57:00,840
protocol design or protocol you know

2670
01:57:00,840 --> 01:57:03,780
advice for Designing protocols or if it

2671
01:57:03,780 --> 01:57:06,239
is for you how to deploy

2672
01:57:06,239 --> 01:57:08,880
ment and just um just uh before before

2673
01:57:08,880 --> 01:57:10,980
sorry of our start to jump in front of

2674
01:57:10,980 --> 01:57:13,440
you um but uh the other thing I forgot

2675
01:57:13,440 --> 01:57:16,020
to mention was uh this is going to be we

2676
01:57:16,020 --> 01:57:18,000
have a little bit of time in M Bundy to

2677
01:57:18,000 --> 01:57:19,320
cover this as well

2678
01:57:19,320 --> 01:57:21,060
um it's kind of at the tucked at the end

2679
01:57:21,060 --> 01:57:24,119
of the uh of the uh meeting so we may

2680
01:57:24,119 --> 01:57:26,219
not get to it but this will be discussed

2681
01:57:26,219 --> 01:57:28,080
in Bundy

2682
01:57:28,080 --> 01:57:31,260
of Earth and official Technologies

2683
01:57:31,260 --> 01:57:33,599
both types sounds interesting I I don't

2684
01:57:33,599 --> 01:57:36,540
know if history of deployment

2685
01:57:36,540 --> 01:57:39,239
and why mospf

2686
01:57:39,239 --> 01:57:42,780
failed or whatever uh is as interesting

2687
01:57:42,780 --> 01:57:45,179
as how do I take the tools that I have

2688
01:57:45,179 --> 01:57:46,380
today

2689
01:57:46,380 --> 01:57:49,520
and deploy them together

2690
01:57:49,800 --> 01:57:51,960
so in other words you know out of the

2691
01:57:51,960 --> 01:57:54,540
whatever number of RCs we have what are

2692
01:57:54,540 --> 01:57:56,280
the RCs that I need and how do I put

2693
01:57:56,280 --> 01:57:57,840
them together so that I can deploy the

2694
01:57:57,840 --> 01:57:58,920
gas Network

2695
01:57:58,920 --> 01:58:01,560
and and the old ones the ones that we

2696
01:58:01,560 --> 01:58:03,300
learn something from

2697
01:58:03,300 --> 01:58:05,580
uh we don't need to talk about those

2698
01:58:05,580 --> 01:58:07,260
right it might be more interesting in

2699
01:58:07,260 --> 01:58:09,119
having something of how do we move

2700
01:58:09,119 --> 01:58:11,820
forward I'm going to the plane ever what

2701
01:58:11,820 --> 01:58:12,719
do I do

2702
01:58:12,719 --> 01:58:16,020
not why it failed before I need to know

2703
01:58:16,020 --> 01:58:18,060
why it failed before to design a new

2704
01:58:18,060 --> 01:58:19,020
solution

2705
01:58:19,020 --> 01:58:20,820
right so so I don't know from my point

2706
01:58:20,820 --> 01:58:23,659
of view it sounds like the history of

2707
01:58:23,659 --> 01:58:26,580
protocols is more interesting than the

2708
01:58:26,580 --> 01:58:28,500
history of deployment and current

2709
01:58:28,500 --> 01:58:30,420
deployment is more interesting than

2710
01:58:30,420 --> 01:58:31,800
current technology which is already

2711
01:58:31,800 --> 01:58:34,460
documented

2712
01:58:40,099 --> 01:58:42,900
just a quick remark to that I generally

2713
01:58:42,900 --> 01:58:44,760
tend to agree to you overall

2714
01:58:44,760 --> 01:58:47,699
it's maybe more important but the

2715
01:58:47,699 --> 01:58:50,099
discussions that we had in iitf 114 and

2716
01:58:50,099 --> 01:58:52,980
115 was the Nautica solution for auto

2717
01:58:52,980 --> 01:58:55,139
configuration of multicast

2718
01:58:55,139 --> 01:58:57,840
showed that old drafts which has not

2719
01:58:57,840 --> 01:59:00,780
have not made it to RFC status were

2720
01:59:00,780 --> 01:59:02,820
pulled out again because the lessons

2721
01:59:02,820 --> 01:59:04,139
learned from why they weren't

2722
01:59:04,139 --> 01:59:06,119
implemented and why we thought it was a

2723
01:59:06,119 --> 01:59:08,219
bad idea to implement that were not

2724
01:59:08,219 --> 01:59:10,560
documented so

2725
01:59:10,560 --> 01:59:13,860
um I think it both has a valid point

2726
01:59:13,860 --> 01:59:16,080
um if you're looking at implementing new

2727
01:59:16,080 --> 01:59:18,360
stuff maybe it's good to find what is

2728
01:59:18,360 --> 01:59:20,159
the current standards that we should

2729
01:59:20,159 --> 01:59:22,380
look at but we should also have the

2730
01:59:22,380 --> 01:59:23,880
Lessons Learned documented while we

2731
01:59:23,880 --> 01:59:26,099
failed doing the other ones because it's

2732
01:59:26,099 --> 01:59:29,280
also quite a valid information base

2733
01:59:29,280 --> 01:59:31,500
hmm

2734
01:59:31,500 --> 01:59:34,500
yeah an example of that is dvmrp is in

2735
01:59:34,500 --> 01:59:36,300
the Cisco toolbox we want to tell people

2736
01:59:36,300 --> 01:59:39,560
not to use dvmrp

2737
01:59:40,500 --> 01:59:42,960
all right thank you all right yeah

2738
01:59:42,960 --> 01:59:46,679
that's the end of the meeting Mr Sunny

2739
01:59:46,679 --> 01:59:49,260
anything in the one let's bring up

2740
01:59:49,260 --> 01:59:51,780
all right thanks to everyone

2741
01:59:51,780 --> 01:59:54,960
and yeah please come to emblem the Fior

2742
01:59:54,960 --> 01:59:57,000
interested in multicast I guess that's

2743
01:59:57,000 --> 01:59:58,560
why we're here too

2744
01:59:58,560 --> 02:00:01,400
yeah thanks

2745
02:00:03,719 --> 02:00:05,900
foreign

