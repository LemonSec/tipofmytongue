1
00:00:06,600 --> 00:00:09,600
foreign

2
00:00:33,059 --> 00:00:35,599
thank you

3
00:01:00,000 --> 00:01:03,239
well I see one o'clock on my uh on my

4
00:01:03,239 --> 00:01:05,280
screen so I think we should probably

5
00:01:05,280 --> 00:01:07,020
make a start first off a quick audio

6
00:01:07,020 --> 00:01:08,880
check can you hear me successfully I'm

7
00:01:08,880 --> 00:01:11,100
going to take my mask off

8
00:01:11,100 --> 00:01:13,619
um because I'm speaking and just for

9
00:01:13,619 --> 00:01:15,780
clarity for remote participants I hope

10
00:01:15,780 --> 00:01:18,060
you don't mind it

11
00:01:18,060 --> 00:01:19,320
um

12
00:01:19,320 --> 00:01:23,220
hello welcome to ietf 115 dtn working

13
00:01:23,220 --> 00:01:25,860
group meeting so uh just for clarity

14
00:01:25,860 --> 00:01:27,360
this session is being recorded we're

15
00:01:27,360 --> 00:01:29,520
doing this through me Techo uh it will

16
00:01:29,520 --> 00:01:31,080
obviously excitingly all be on YouTube

17
00:01:31,080 --> 00:01:34,860
afterwards so uh you can show what you

18
00:01:34,860 --> 00:01:36,540
did at ietf to your friends and

19
00:01:36,540 --> 00:01:38,280
colleagues when you get back home

20
00:01:38,280 --> 00:01:41,280
uh next slide please

21
00:01:41,280 --> 00:01:45,119
ah so as this is an ietf meeting this is

22
00:01:45,119 --> 00:01:47,700
covered under the note 12. so I'm

23
00:01:47,700 --> 00:01:50,460
assuming most of you have uh attended an

24
00:01:50,460 --> 00:01:53,539
ietf meeting before

25
00:01:53,579 --> 00:01:56,159
oh okay good

26
00:01:56,159 --> 00:01:59,159
um if you have not you need to read the

27
00:01:59,159 --> 00:02:02,340
note well this covers IPR this covers

28
00:02:02,340 --> 00:02:05,159
your participation at the microphone in

29
00:02:05,159 --> 00:02:06,659
the chat and within the meeting in

30
00:02:06,659 --> 00:02:10,258
general it also covers your basic

31
00:02:10,258 --> 00:02:12,660
Behavior Uh heated discussion is

32
00:02:12,660 --> 00:02:15,200
fantastic abuse and bullying is not

33
00:02:15,200 --> 00:02:18,360
there is a relevant codes of conduct

34
00:02:18,360 --> 00:02:20,099
relevant information on copyrights

35
00:02:20,099 --> 00:02:21,959
patents participations and the general

36
00:02:21,959 --> 00:02:24,300
standards process all documented in

37
00:02:24,300 --> 00:02:26,220
these very nicely written BCPS please

38
00:02:26,220 --> 00:02:27,540
follow the links if you have any

39
00:02:27,540 --> 00:02:28,520
questions

40
00:02:28,520 --> 00:02:32,160
as with most things you have been told

41
00:02:32,160 --> 00:02:34,140
about these things you can now no longer

42
00:02:34,140 --> 00:02:36,660
claim you are unaware of them but we're

43
00:02:36,660 --> 00:02:38,700
all grown ups and we will assume that

44
00:02:38,700 --> 00:02:40,020
we're going to behave them responsibly

45
00:02:40,020 --> 00:02:43,440
anyway next slide please so

46
00:02:43,440 --> 00:02:45,900
tips because we have a still have a

47
00:02:45,900 --> 00:02:47,099
large number of remote participants

48
00:02:47,099 --> 00:02:49,620
thanks to the tail end of covid please

49
00:02:49,620 --> 00:02:52,260
make sure you sign in to meet Echo

50
00:02:52,260 --> 00:02:54,780
remotely obviously but also in the room

51
00:02:54,780 --> 00:02:57,720
so we can operate a single queue there's

52
00:02:57,720 --> 00:02:59,760
a really nice raised hands button you

53
00:02:59,760 --> 00:03:02,819
can click to join the queue so please

54
00:03:02,819 --> 00:03:04,860
use that rather than just standing at

55
00:03:04,860 --> 00:03:05,819
the queue

56
00:03:05,819 --> 00:03:09,120
remote participants uh try to avoid some

57
00:03:09,120 --> 00:03:11,340
feedback by keeping your audio and video

58
00:03:11,340 --> 00:03:13,260
off unless you are actually presenting

59
00:03:13,260 --> 00:03:15,959
or sharing if you're asking a question

60
00:03:15,959 --> 00:03:18,420
obviously you will need audio video is

61
00:03:18,420 --> 00:03:20,220
optional

62
00:03:20,220 --> 00:03:22,800
um strongly recommend a headset to avoid

63
00:03:22,800 --> 00:03:24,980
the usual audio feedback problems

64
00:03:24,980 --> 00:03:27,300
hopefully after two and a bit years of

65
00:03:27,300 --> 00:03:29,459
covert we're all pretty good at remote

66
00:03:29,459 --> 00:03:31,620
meetings over video conference but

67
00:03:31,620 --> 00:03:32,940
problems happen

68
00:03:32,940 --> 00:03:35,159
next slide please

69
00:03:35,159 --> 00:03:39,480
so uh the agenda is at that URL we will

70
00:03:39,480 --> 00:03:40,799
also put it on the screen in a second

71
00:03:40,799 --> 00:03:42,780
the meet Echo information for those

72
00:03:42,780 --> 00:03:45,120
obviously who are not remote and can't

73
00:03:45,120 --> 00:03:46,980
see this but that information is there

74
00:03:46,980 --> 00:03:49,980
for your reference if you get stuck with

75
00:03:49,980 --> 00:03:52,080
uh anything during the meeting uh

76
00:03:52,080 --> 00:03:54,900
there's a URL there for a an FAQ which

77
00:03:54,900 --> 00:03:56,580
should hopefully help you dig out of

78
00:03:56,580 --> 00:03:59,700
that hole next slide please

79
00:03:59,700 --> 00:04:02,760
so the agenda um we are doing the first

80
00:04:02,760 --> 00:04:04,200
five minutes from the chairs well

81
00:04:04,200 --> 00:04:07,860
currently from me uh then we have a

82
00:04:07,860 --> 00:04:10,379
35-minute discussion on the ipn naming

83
00:04:10,379 --> 00:04:12,560
scheme update from myself

84
00:04:12,560 --> 00:04:15,780
uh then Brian C plus is going to present

85
00:04:15,780 --> 00:04:18,720
bpv7 administrative records we're going

86
00:04:18,720 --> 00:04:20,760
to do the Cozy BP SEC security context

87
00:04:20,760 --> 00:04:22,560
records again with Brian

88
00:04:22,560 --> 00:04:24,660
um we've given him 20 minutes to do both

89
00:04:24,660 --> 00:04:26,340
but

90
00:04:26,340 --> 00:04:29,340
um there's two topics in there then

91
00:04:29,340 --> 00:04:31,199
Sarah heiner is finally going to get a

92
00:04:31,199 --> 00:04:32,759
chance because she got bumped from the

93
00:04:32,759 --> 00:04:36,000
114 agenda to talk about the dtn

94
00:04:36,000 --> 00:04:39,060
management uh dtnma architecture I think

95
00:04:39,060 --> 00:04:40,500
that's double architecture if I think

96
00:04:40,500 --> 00:04:43,139
about it which is all about managing

97
00:04:43,139 --> 00:04:45,720
systems uh across delayed and disrupted

98
00:04:45,720 --> 00:04:48,540
networks a interesting piece

99
00:04:48,540 --> 00:04:51,419
and then Scott Johnson uh wants to give

100
00:04:51,419 --> 00:04:54,479
a demonstration which is always fun and

101
00:04:54,479 --> 00:04:55,919
we have real confidence it's all going

102
00:04:55,919 --> 00:04:58,199
to work remotely from from wherever he

103
00:04:58,199 --> 00:05:01,020
is in the US about IPv6 support for dtn

104
00:05:01,020 --> 00:05:02,400
so I'm actually really looking forward

105
00:05:02,400 --> 00:05:04,800
to that would be great as usual we will

106
00:05:04,800 --> 00:05:06,720
have a little bit of Open Mic at the end

107
00:05:06,720 --> 00:05:09,660
for any other business we will absorb

108
00:05:09,660 --> 00:05:12,419
that if any of these discussions get

109
00:05:12,419 --> 00:05:16,620
heated I would much rather discuss

110
00:05:16,620 --> 00:05:19,639
um things as they happen within reason

111
00:05:19,639 --> 00:05:22,320
uh rather than waiting to the very end

112
00:05:22,320 --> 00:05:24,660
and then to dominate the end of Scott's

113
00:05:24,660 --> 00:05:26,639
demo with talking about ipn for example

114
00:05:26,639 --> 00:05:30,539
so we may absorb that 15 minutes we may

115
00:05:30,539 --> 00:05:31,979
have to be quite tight on time if

116
00:05:31,979 --> 00:05:36,300
discussions run on next slide

117
00:05:36,300 --> 00:05:37,500
okay

118
00:05:37,500 --> 00:05:40,259
there is the shared markdown based

119
00:05:40,259 --> 00:05:43,020
notepad in Meet Echo uh although we have

120
00:05:43,020 --> 00:05:44,940
a secretary here Adam who furiously

121
00:05:44,940 --> 00:05:48,720
takes notes uh please help out please

122
00:05:48,720 --> 00:05:51,060
it's a collaborative thing particularly

123
00:05:51,060 --> 00:05:54,180
if your name is spelled wrong or I mean

124
00:05:54,180 --> 00:05:56,100
Adam types fast but occasionally

125
00:05:56,100 --> 00:05:58,259
keystrokes are missed or if you don't

126
00:05:58,259 --> 00:05:59,820
think he captured your point correctly

127
00:05:59,820 --> 00:06:03,120
please add to it it's fine equally to

128
00:06:03,120 --> 00:06:05,580
help Adam if you're in person can you

129
00:06:05,580 --> 00:06:07,320
state your name at the mic nice and

130
00:06:07,320 --> 00:06:08,940
clearly so he can capture that as well

131
00:06:08,940 --> 00:06:11,400
as usual this is an ITF working group we

132
00:06:11,400 --> 00:06:13,039
have a mailing list

133
00:06:13,039 --> 00:06:15,300
dtnitf.org also if you need to contact

134
00:06:15,300 --> 00:06:18,660
the chairs about anything administrative

135
00:06:18,660 --> 00:06:20,699
um subject matter stuff should really go

136
00:06:20,699 --> 00:06:22,740
to the normal dtn mailing list it's for

137
00:06:22,740 --> 00:06:24,240
the working group but if you have an

138
00:06:24,240 --> 00:06:26,759
admin issue or want to suggest something

139
00:06:26,759 --> 00:06:29,400
administrative there's The dtn Hyphen

140
00:06:29,400 --> 00:06:31,199
chairs mailing list which will go to Ed

141
00:06:31,199 --> 00:06:34,319
and myself and also our ad zahid who I

142
00:06:34,319 --> 00:06:35,880
believe I just saw come in and sat at

143
00:06:35,880 --> 00:06:36,900
the back of the room oh there he is he's

144
00:06:36,900 --> 00:06:38,639
over there great right so we have our ID

145
00:06:38,639 --> 00:06:41,460
with us as well which is great so one

146
00:06:41,460 --> 00:06:43,979
thing I did not do is give a 30 second

147
00:06:43,979 --> 00:06:46,259
chance for anyone to bash the agenda do

148
00:06:46,259 --> 00:06:50,360
you think we have missed something vital

149
00:06:50,699 --> 00:06:54,060
Brian is at the mic first go ahead Ryan

150
00:06:54,060 --> 00:06:55,319
hey

151
00:06:55,319 --> 00:06:58,259
Francis I actually had submitted some

152
00:06:58,259 --> 00:07:00,840
additional slides about CLA service

153
00:07:00,840 --> 00:07:03,720
definition if I shorten my other time

154
00:07:03,720 --> 00:07:05,580
will I be able to

155
00:07:05,580 --> 00:07:07,919
present on those as well if you can fit

156
00:07:07,919 --> 00:07:09,660
them into the two 10-minute sections

157
00:07:09,660 --> 00:07:12,539
you've got I I have no problem

158
00:07:12,539 --> 00:07:15,780
okay thank you yeah can you uh submit

159
00:07:15,780 --> 00:07:17,100
the slides to be updated and we'll get

160
00:07:17,100 --> 00:07:18,539
them into the into the agenda pack

161
00:07:18,539 --> 00:07:21,919
quickly that's fine sorry

162
00:07:22,259 --> 00:07:25,220
they're actually already in there

163
00:07:25,220 --> 00:07:29,240
we'll click the right button then

164
00:07:31,440 --> 00:07:33,660
um I'm sorry I'm still at Marcus

165
00:07:33,660 --> 00:07:35,400
struggling so Mark Blanche join the

166
00:07:35,400 --> 00:07:37,380
queue by all means go for it I I feel

167
00:07:37,380 --> 00:07:39,960
your pain thank you looks like sometimes

168
00:07:39,960 --> 00:07:42,960
in this room the wireless you know kind

169
00:07:42,960 --> 00:07:45,300
of Disconnect at least on my side

170
00:07:45,300 --> 00:07:47,039
um

171
00:07:47,039 --> 00:07:49,080
I don't know if it's an agenda at them

172
00:07:49,080 --> 00:07:53,699
but I just reposted a draft that I wrote

173
00:07:53,699 --> 00:07:55,520
a few years ago about

174
00:07:55,520 --> 00:07:58,919
service registry and kind of a

175
00:07:58,919 --> 00:08:01,620
application framework

176
00:08:01,620 --> 00:08:04,080
um I just want to know from the working

177
00:08:04,080 --> 00:08:05,460
group if

178
00:08:05,460 --> 00:08:08,340
this is interest to be done or not or

179
00:08:08,340 --> 00:08:11,220
you know so at the very end of the

180
00:08:11,220 --> 00:08:14,520
meeting if there's a few minutes left

181
00:08:14,520 --> 00:08:17,699
I wouldn't mind you know knowing if

182
00:08:17,699 --> 00:08:19,860
people are of Interest or the working

183
00:08:19,860 --> 00:08:22,440
group so that they kind of resume that

184
00:08:22,440 --> 00:08:25,280
we're on that

185
00:08:25,699 --> 00:08:29,039
absolutely yeah

186
00:08:29,039 --> 00:08:32,279
yeah share the mic oh that's it is

187
00:08:32,279 --> 00:08:35,339
Wireless so no completely agree uh don't

188
00:08:35,339 --> 00:08:36,839
have anything to add to Rick's excellent

189
00:08:36,839 --> 00:08:39,958
introduction and

190
00:08:39,958 --> 00:08:41,099
why don't we start with our first

191
00:08:41,099 --> 00:08:42,659
presentation

192
00:08:42,659 --> 00:08:45,319
which is Rick

193
00:08:48,360 --> 00:08:52,320
okay so for clarity

194
00:08:52,320 --> 00:08:54,899
I am most definitely taking my chair hat

195
00:08:54,899 --> 00:08:56,220
off during this presentation because

196
00:08:56,220 --> 00:08:58,019
this is my draft primarily I'm the

197
00:08:58,019 --> 00:09:00,000
primary author on this and so I will be

198
00:09:00,000 --> 00:09:02,519
representing myself and not acting as a

199
00:09:02,519 --> 00:09:04,500
chair of dtn so I want to make that

200
00:09:04,500 --> 00:09:07,320
abundantly clear and I may stand here

201
00:09:07,320 --> 00:09:09,180
for the whole of this q a as well to

202
00:09:09,180 --> 00:09:12,720
indicate I am not sharing this so um as

203
00:09:12,720 --> 00:09:15,180
many of you are probably aware I hope uh

204
00:09:15,180 --> 00:09:18,060
I have published three revisions of uh

205
00:09:18,060 --> 00:09:19,640
an ipn

206
00:09:19,640 --> 00:09:24,000
URI schema update draft that recently

207
00:09:24,000 --> 00:09:26,940
after the last call not last call the

208
00:09:26,940 --> 00:09:28,380
working group adoption call was

209
00:09:28,380 --> 00:09:31,019
successful after the interim we held

210
00:09:31,019 --> 00:09:33,779
between 114 and 115 is now being

211
00:09:33,779 --> 00:09:36,060
republished as a working group document

212
00:09:36,060 --> 00:09:39,000
so although I

213
00:09:39,000 --> 00:09:40,800
am the primary author on this this is

214
00:09:40,800 --> 00:09:42,600
now a working group document and is up

215
00:09:42,600 --> 00:09:44,760
for discussion and consensus within the

216
00:09:44,760 --> 00:09:46,560
working group okay

217
00:09:46,560 --> 00:09:48,680
next slide please

218
00:09:48,680 --> 00:09:50,760
so a little bit of background for those

219
00:09:50,760 --> 00:09:52,320
of you who haven't immediately read it

220
00:09:52,320 --> 00:09:55,260
or aren't familiar with the depths of it

221
00:09:55,260 --> 00:09:57,899
um this is all to do with the IPM scheme

222
00:09:57,899 --> 00:09:59,700
Uris so a little bit of background

223
00:09:59,700 --> 00:10:02,040
Within dtn

224
00:10:02,040 --> 00:10:05,459
sources destinations of bundles are

225
00:10:05,459 --> 00:10:08,279
described using a URI

226
00:10:08,279 --> 00:10:12,200
so this is the Uris just like HTTP URLs

227
00:10:12,200 --> 00:10:17,700
uuid Uris Etc but in both RFC 6260 which

228
00:10:17,700 --> 00:10:20,220
was bundle protocol version 6 and 9171

229
00:10:20,220 --> 00:10:22,980
which is bundle protocol version 7. the

230
00:10:22,980 --> 00:10:25,560
ipn schema is defined as node number

231
00:10:25,560 --> 00:10:28,620
which is an unsigned integer and service

232
00:10:28,620 --> 00:10:31,980
number also an unsigned integer

233
00:10:31,980 --> 00:10:34,500
there is explicit encoding instructions

234
00:10:34,500 --> 00:10:36,600
for how to take this general purpose

235
00:10:36,600 --> 00:10:39,360
text-based URI and turn it into the

236
00:10:39,360 --> 00:10:41,100
relevant encoding for both bundle

237
00:10:41,100 --> 00:10:42,959
protocol version 6 and bundle protocol

238
00:10:42,959 --> 00:10:45,720
version 7. so although we are talking

239
00:10:45,720 --> 00:10:48,300
about Uris there are specific encodings

240
00:10:48,300 --> 00:10:49,980
for the two bundle protocol versions

241
00:10:49,980 --> 00:10:52,019
that are in active use at the moment but

242
00:10:52,019 --> 00:10:54,540
I will just refer to them as Uris the

243
00:10:54,540 --> 00:10:57,300
discussion May touch on encoding but the

244
00:10:57,300 --> 00:10:59,820
format is the key point

245
00:10:59,820 --> 00:11:00,959
so

246
00:11:00,959 --> 00:11:05,579
as defined in 6260 and 91 and 71 and

247
00:11:05,579 --> 00:11:07,560
there is some weakness about that total

248
00:11:07,560 --> 00:11:10,740
definition but it's reasonably clear

249
00:11:10,740 --> 00:11:14,100
it's made of two parts the node number

250
00:11:14,100 --> 00:11:18,000
which is the unique identifier of the

251
00:11:18,000 --> 00:11:19,380
node on which a particular service

252
00:11:19,380 --> 00:11:22,440
endpoint is expected to exist and the

253
00:11:22,440 --> 00:11:24,660
service number which is the identifier

254
00:11:24,660 --> 00:11:28,620
of that service on the Node

255
00:11:28,620 --> 00:11:31,380
now the uniqueness constraint is really

256
00:11:31,380 --> 00:11:33,720
important so

257
00:11:33,720 --> 00:11:38,220
in both ppv6 but definitely in bpv7

258
00:11:38,220 --> 00:11:43,500
an endpoint identifier which is the URI

259
00:11:43,500 --> 00:11:47,160
must be unique for interoperability if

260
00:11:47,160 --> 00:11:49,200
you have a set of connected dtn nodes

261
00:11:49,200 --> 00:11:52,140
making a single dtn Network you cannot

262
00:11:52,140 --> 00:11:56,160
have duplicate endpoint IDs I.E

263
00:11:56,160 --> 00:11:59,399
sorry unicast endpoint IDs you can have

264
00:11:59,399 --> 00:12:01,920
multicast ones ipn does not support

265
00:12:01,920 --> 00:12:04,740
multicast so in the ipn it's all about

266
00:12:04,740 --> 00:12:07,500
unicast so therefore they must be unique

267
00:12:07,500 --> 00:12:10,680
otherwise you can't deliver the same you

268
00:12:10,680 --> 00:12:12,600
can't address the same bundles as to two

269
00:12:12,600 --> 00:12:14,519
things with the same name

270
00:12:14,519 --> 00:12:17,100
so the combination of node number and

271
00:12:17,100 --> 00:12:19,320
service number must be unique according

272
00:12:19,320 --> 00:12:21,959
to RFC 9171

273
00:12:21,959 --> 00:12:26,399
but in the descriptions in 6260 and 9171

274
00:12:26,399 --> 00:12:30,600
node number is also implied to be unique

275
00:12:30,600 --> 00:12:33,660
following the general pattern of IP

276
00:12:33,660 --> 00:12:36,720
address and port number so there is this

277
00:12:36,720 --> 00:12:40,200
is analogous but not identical

278
00:12:40,200 --> 00:12:43,339
next slide please

279
00:12:44,399 --> 00:12:46,620
so I I have

280
00:12:46,620 --> 00:12:49,079
in going through and trying to really

281
00:12:49,079 --> 00:12:51,360
understand what's going on with ipn I

282
00:12:51,360 --> 00:12:53,399
have read quite a lot of stuff and I

283
00:12:53,399 --> 00:12:55,019
have some perceived problems which I

284
00:12:55,019 --> 00:12:56,519
have attempted to address in this draft

285
00:12:56,519 --> 00:12:58,680
and they are primarily

286
00:12:58,680 --> 00:13:01,260
there is only one Ayana registry for

287
00:13:01,260 --> 00:13:03,420
node numbers at the moment it's called

288
00:13:03,420 --> 00:13:06,180
the cbhe registry which stands for

289
00:13:06,180 --> 00:13:09,180
compressed bundle headering coding which

290
00:13:09,180 --> 00:13:11,820
is a way you do the wire format for

291
00:13:11,820 --> 00:13:15,060
bundle protocol version six it predates

292
00:13:15,060 --> 00:13:17,339
bundle protocol version 7 and makes no

293
00:13:17,339 --> 00:13:19,800
reference to bundle protocol version 7.

294
00:13:19,800 --> 00:13:21,660
and compressed bundle header encoding

295
00:13:21,660 --> 00:13:23,160
isn't used for bundle protocol version

296
00:13:23,160 --> 00:13:25,440
7. so

297
00:13:25,440 --> 00:13:27,720
perhaps cbhg isn't the right name for

298
00:13:27,720 --> 00:13:30,420
the registry and renaming it is requires

299
00:13:30,420 --> 00:13:32,820
a document because it's good best

300
00:13:32,820 --> 00:13:34,260
practice and it's what Iona requires of

301
00:13:34,260 --> 00:13:35,459
us

302
00:13:35,459 --> 00:13:38,220
not a great issue second point there are

303
00:13:38,220 --> 00:13:41,420
some minor inconsistencies between 6260

304
00:13:41,420 --> 00:13:44,279
7116 which actually is the draft which

305
00:13:44,279 --> 00:13:46,320
introduces and Mark Blanche is one of

306
00:13:46,320 --> 00:13:47,639
the authors of that draft which

307
00:13:47,639 --> 00:13:49,800
introduces these Ayana Registries and

308
00:13:49,800 --> 00:13:51,839
makes the requests and backs them up but

309
00:13:51,839 --> 00:13:54,240
it doesn't change the spec much more

310
00:13:54,240 --> 00:13:56,040
from 60 to 60.

311
00:13:56,040 --> 00:14:00,839
and RFC 9171 inherits the ipn URI scheme

312
00:14:00,839 --> 00:14:02,820
because it was very much in use for V6

313
00:14:02,820 --> 00:14:06,480
seen as a very useful thing to have

314
00:14:06,480 --> 00:14:08,100
but because it's described in three

315
00:14:08,100 --> 00:14:09,899
different documents there are some

316
00:14:09,899 --> 00:14:11,700
inconsistencies there is some

317
00:14:11,700 --> 00:14:13,459
implementation

318
00:14:13,459 --> 00:14:16,260
knowledge that has emerged there are way

319
00:14:16,260 --> 00:14:17,880
people have interpreted these things

320
00:14:17,880 --> 00:14:21,060
into interoper into implemented networks

321
00:14:21,060 --> 00:14:23,300
where they slightly deviating behaviors

322
00:14:23,300 --> 00:14:26,160
for example the node number uniqueness

323
00:14:26,160 --> 00:14:29,160
isn't absolutely explicit it's just kind

324
00:14:29,160 --> 00:14:31,440
of assumed

325
00:14:31,440 --> 00:14:34,139
and really we should have nice clean

326
00:14:34,139 --> 00:14:36,480
clear specs for this

327
00:14:36,480 --> 00:14:38,760
and from my perspective I don't actually

328
00:14:38,760 --> 00:14:41,459
care what that spec says as long it is

329
00:14:41,459 --> 00:14:43,980
as it is abundantly clear what the

330
00:14:43,980 --> 00:14:45,959
correct behavior is so that we can

331
00:14:45,959 --> 00:14:47,579
achieve interoperability because that's

332
00:14:47,579 --> 00:14:50,040
the point of the ietf is to achieve

333
00:14:50,040 --> 00:14:52,320
interoperability between different

334
00:14:52,320 --> 00:14:54,420
people's systems if you're building your

335
00:14:54,420 --> 00:14:56,339
own thing do your own thing nobody

336
00:14:56,339 --> 00:14:58,680
really cares

337
00:14:58,680 --> 00:15:01,920
so the third perceived problem is the

338
00:15:01,920 --> 00:15:03,660
single flat numbering space for all log

339
00:15:03,660 --> 00:15:04,860
numbers

340
00:15:04,860 --> 00:15:07,560
so

341
00:15:07,560 --> 00:15:09,000
this goes back to the bungle protocol

342
00:15:09,000 --> 00:15:10,860
version six days where there were node

343
00:15:10,860 --> 00:15:12,480
numbers it was an unsigned two to the

344
00:15:12,480 --> 00:15:15,600
64-bit integer space great lots of room

345
00:15:15,600 --> 00:15:19,260
in there due to the way that um the wire

346
00:15:19,260 --> 00:15:20,519
representation in bundle protocol

347
00:15:20,519 --> 00:15:21,899
version six that could be encoded

348
00:15:21,899 --> 00:15:23,940
reasonably effectively

349
00:15:23,940 --> 00:15:25,079
um

350
00:15:25,079 --> 00:15:27,240
but there was still a penalty for the

351
00:15:27,240 --> 00:15:29,459
bigger the number the more bits need to

352
00:15:29,459 --> 00:15:31,680
be encoded on the wire and with seaboar

353
00:15:31,680 --> 00:15:34,680
that is definitely the case

354
00:15:34,680 --> 00:15:38,880
so there is if you got an early

355
00:15:38,880 --> 00:15:42,000
allocation from the single space you

356
00:15:42,000 --> 00:15:44,579
could encode your ipn numbers in six or

357
00:15:44,579 --> 00:15:46,920
I think it's seven octets

358
00:15:46,920 --> 00:15:49,680
if you tried to register one now and

359
00:15:49,680 --> 00:15:51,240
there aren't that many registrations but

360
00:15:51,240 --> 00:15:52,920
they're handed out in Big Blocks

361
00:15:52,920 --> 00:15:54,540
according to the registration policy

362
00:15:54,540 --> 00:15:57,060
which is perfectly valid because you

363
00:15:57,060 --> 00:15:59,279
probably do want a fairly big chunk

364
00:15:59,279 --> 00:16:02,940
you can end up with the minimum encoding

365
00:16:02,940 --> 00:16:06,779
being eight or nine octets and if you

366
00:16:06,779 --> 00:16:08,820
know if this gets

367
00:16:08,820 --> 00:16:11,100
allocated aggressively you could end up

368
00:16:11,100 --> 00:16:13,260
forced to have a minimum 10 octet

369
00:16:13,260 --> 00:16:15,000
encoding where

370
00:16:15,000 --> 00:16:17,339
if you could just use a low number you

371
00:16:17,339 --> 00:16:19,079
could get away with five and we're

372
00:16:19,079 --> 00:16:20,639
talking about deep space and constrained

373
00:16:20,639 --> 00:16:23,600
devices and having an IR and a registry

374
00:16:23,600 --> 00:16:27,720
force you to add five octets to your

375
00:16:27,720 --> 00:16:29,639
Source your destination and your report

376
00:16:29,639 --> 00:16:32,160
to fields in your bundle protocol header

377
00:16:32,160 --> 00:16:34,920
just to talk to between two devices

378
00:16:34,920 --> 00:16:38,579
within your own network seems unfair if

379
00:16:38,579 --> 00:16:41,339
I'm honest and undesirable

380
00:16:41,339 --> 00:16:44,040
and equally the other problem is in that

381
00:16:44,040 --> 00:16:46,560
original cbhe node number registration

382
00:16:46,560 --> 00:16:50,220
there wasn't actually anywhere for

383
00:16:50,220 --> 00:16:51,540
saying do you know what these really

384
00:16:51,540 --> 00:16:53,459
convenient short numbers like one two

385
00:16:53,459 --> 00:16:55,740
three four and five you know you build

386
00:16:55,740 --> 00:16:57,060
one of these things in your lab and you

387
00:16:57,060 --> 00:16:58,440
start numbering your nodes one two three

388
00:16:58,440 --> 00:17:00,540
four and five because you know they're

389
00:17:00,540 --> 00:17:02,600
they're easy

390
00:17:02,600 --> 00:17:06,419
those aren't reserved for that use

391
00:17:06,419 --> 00:17:08,160
they are actually reserved to be handed

392
00:17:08,160 --> 00:17:10,859
out to someone so if you then go and fly

393
00:17:10,859 --> 00:17:11,819
that

394
00:17:11,819 --> 00:17:13,679
because you built it and it's been

395
00:17:13,679 --> 00:17:15,179
signed off by the relevant authorities

396
00:17:15,179 --> 00:17:16,799
and you've put it on the top of a rocket

397
00:17:16,799 --> 00:17:18,599
and shut it off somewhere

398
00:17:18,599 --> 00:17:20,339
you're using someone else's license

399
00:17:20,339 --> 00:17:22,679
Spectrum or you're using spectrum that

400
00:17:22,679 --> 00:17:24,119
has not been and I'm putting this in

401
00:17:24,119 --> 00:17:25,679
radio terms because I know a lot of

402
00:17:25,679 --> 00:17:27,119
people understand that in the space

403
00:17:27,119 --> 00:17:29,940
Community you are using spectrum that

404
00:17:29,940 --> 00:17:31,679
has been reserved to be handed out to

405
00:17:31,679 --> 00:17:34,080
somebody else which means your equipment

406
00:17:34,080 --> 00:17:36,299
that is currently out there

407
00:17:36,299 --> 00:17:38,220
that Spectrum may be allocated to

408
00:17:38,220 --> 00:17:39,539
someone else so

409
00:17:39,539 --> 00:17:43,020
there is no official unlicensed Spectrum

410
00:17:43,020 --> 00:17:45,299
to use for experimentation and clear

411
00:17:45,299 --> 00:17:47,220
rules about its use and I also see that

412
00:17:47,220 --> 00:17:51,380
as a problem next slide please

413
00:17:51,780 --> 00:17:56,220
so the ipn update document attempts to

414
00:17:56,220 --> 00:17:58,500
provide solutions to these

415
00:17:58,500 --> 00:18:01,080
so the first one is to clarify the usage

416
00:18:01,080 --> 00:18:03,059
of the ipn scheme URI node numbers and

417
00:18:03,059 --> 00:18:04,320
service numbers with bundle protocol

418
00:18:04,320 --> 00:18:06,360
version 7. so that's collate all the

419
00:18:06,360 --> 00:18:09,179
information we've got between 6260 7116

420
00:18:09,179 --> 00:18:13,260
and 9171 draw it all together and say do

421
00:18:13,260 --> 00:18:15,059
you know what the rational superset of

422
00:18:15,059 --> 00:18:16,740
all of these rules or the rational

423
00:18:16,740 --> 00:18:19,200
intersection of all these rules is

424
00:18:19,200 --> 00:18:21,780
not as reserved for the administrative

425
00:18:21,780 --> 00:18:23,460
endpoint blah blah blah you know there's

426
00:18:23,460 --> 00:18:25,380
a it's a pretty short summary of this

427
00:18:25,380 --> 00:18:26,820
stuff and it tries to tackle the

428
00:18:26,820 --> 00:18:28,200
uniqueness constraint and I will go into

429
00:18:28,200 --> 00:18:29,520
these in a bit more detail in a second

430
00:18:29,520 --> 00:18:32,880
the second thing is to say the CVH node

431
00:18:32,880 --> 00:18:35,340
number registry is a misleading name and

432
00:18:35,340 --> 00:18:36,539
frankly it's quite difficult to look up

433
00:18:36,539 --> 00:18:38,220
and it's not very clear to see what it

434
00:18:38,220 --> 00:18:41,160
is anymore so let us

435
00:18:41,160 --> 00:18:43,919
rename and clone that repository into

436
00:18:43,919 --> 00:18:47,100
the registry into two Registries one we

437
00:18:47,100 --> 00:18:49,740
will call bundle protocol version 6 note

438
00:18:49,740 --> 00:18:52,200
numbers because it's full bunt bpv6 and

439
00:18:52,200 --> 00:18:53,700
it's the node numbers and it's exactly

440
00:18:53,700 --> 00:18:56,280
what the cbhc registry was but we'll

441
00:18:56,280 --> 00:18:58,080
call it bpv6 because that's what it is

442
00:18:58,080 --> 00:18:59,539
and the same applies to service numbers

443
00:18:59,539 --> 00:19:02,660
and we will make a copy of that called

444
00:19:02,660 --> 00:19:06,480
bpv7 note numbers and bpv seven service

445
00:19:06,480 --> 00:19:08,400
numbers and we'll tidy up the

446
00:19:08,400 --> 00:19:10,080
allocations a little bit to put in a bit

447
00:19:10,080 --> 00:19:12,900
of private space to make sure that we

448
00:19:12,900 --> 00:19:14,580
understand it and it's and it's there

449
00:19:14,580 --> 00:19:16,140
for people to use

450
00:19:16,140 --> 00:19:17,880
including and that's the third Point

451
00:19:17,880 --> 00:19:20,580
reserving load number low numbers in

452
00:19:20,580 --> 00:19:23,160
that range for private use so the

453
00:19:23,160 --> 00:19:25,919
efficiently encoded obviously used and

454
00:19:25,919 --> 00:19:28,200
we know people just use I've built a dtn

455
00:19:28,200 --> 00:19:29,760
network where I called my nodes one two

456
00:19:29,760 --> 00:19:33,120
three four and five because why not

457
00:19:33,120 --> 00:19:35,100
um that now becomes official unlicensed

458
00:19:35,100 --> 00:19:37,620
Spectrum that's fine I can do that and I

459
00:19:37,620 --> 00:19:39,360
understand its own license Spectrum

460
00:19:39,360 --> 00:19:41,520
which means I will Clash if I am not

461
00:19:41,520 --> 00:19:43,380
careful so don't go fly this where I

462
00:19:43,380 --> 00:19:45,600
expect it to be interoperable with other

463
00:19:45,600 --> 00:19:47,340
people it's just putting that

464
00:19:47,340 --> 00:19:49,559
clarification in there

465
00:19:49,559 --> 00:19:51,900
and the fourth point

466
00:19:51,900 --> 00:19:54,299
is to introduce a new numbering

467
00:19:54,299 --> 00:19:56,640
Authority let's introduce new numbering

468
00:19:56,640 --> 00:19:59,039
Authority prefixes to allow flexibility

469
00:19:59,039 --> 00:20:02,280
of allocation with efficient encoding so

470
00:20:02,280 --> 00:20:05,100
this is to address the problem with a

471
00:20:05,100 --> 00:20:08,460
single flat number range to say let's

472
00:20:08,460 --> 00:20:10,320
divide it up and make it a bit more

473
00:20:10,320 --> 00:20:12,720
hierarchical and I always mispronounce

474
00:20:12,720 --> 00:20:13,919
that word

475
00:20:13,919 --> 00:20:18,360
such that we can allow organizations to

476
00:20:18,360 --> 00:20:21,360
hand out numbers in a controlled way

477
00:20:21,360 --> 00:20:24,419
that are efficiently encodable

478
00:20:24,419 --> 00:20:27,240
and don't need to constantly batter

479
00:20:27,240 --> 00:20:29,520
Ayana for registrations or allocate

480
00:20:29,520 --> 00:20:31,620
great chunks out of a single number

481
00:20:31,620 --> 00:20:34,020
range and still maintain

482
00:20:34,020 --> 00:20:37,140
interoperability with probably more

483
00:20:37,140 --> 00:20:39,480
efficient encoding I say probably

484
00:20:39,480 --> 00:20:41,100
because you can still do dumb things and

485
00:20:41,100 --> 00:20:43,200
end up with inefficient encoding but

486
00:20:43,200 --> 00:20:46,500
it's your that is now delegated from the

487
00:20:46,500 --> 00:20:50,100
ietf to Regional numbering authorities

488
00:20:50,100 --> 00:20:51,660
who can make their own decisions about

489
00:20:51,660 --> 00:20:53,820
whether they want to be smart or dumb

490
00:20:53,820 --> 00:20:56,100
look

491
00:20:56,100 --> 00:20:59,600
look you've suddenly joined the cube

492
00:20:59,760 --> 00:21:01,200
I'm going to go into all these points in

493
00:21:01,200 --> 00:21:02,880
a lot more detail Slide by slide if you

494
00:21:02,880 --> 00:21:04,919
want to hold it but keep going we can

495
00:21:04,919 --> 00:21:06,360
take a question

496
00:21:06,360 --> 00:21:08,640
um yeah up to you

497
00:21:08,640 --> 00:21:09,419
um

498
00:21:09,419 --> 00:21:11,720
I just want to make sure because the

499
00:21:11,720 --> 00:21:15,299
registry actually has private use

500
00:21:15,299 --> 00:21:17,940
it's space it's just that it's not low

501
00:21:17,940 --> 00:21:19,620
numbers yeah it's way at the top end

502
00:21:19,620 --> 00:21:22,980
isn't it yeah then you know there's

503
00:21:22,980 --> 00:21:26,220
trade-offs here because

504
00:21:26,220 --> 00:21:29,400
um you know private use is typically you

505
00:21:29,400 --> 00:21:32,880
know in your lab or whatever therefore

506
00:21:32,880 --> 00:21:35,640
packet size you don't matter right

507
00:21:35,640 --> 00:21:37,940
bundle size or you know whatever

508
00:21:37,940 --> 00:21:40,200
in space

509
00:21:40,200 --> 00:21:44,340
or you know constraint networks those as

510
00:21:44,340 --> 00:21:47,100
you said those you know

511
00:21:47,100 --> 00:21:49,380
numbers are more important because

512
00:21:49,380 --> 00:21:53,100
they're smaller therefore those number

513
00:21:53,100 --> 00:21:55,620
are more precious to be used in

514
00:21:55,620 --> 00:21:58,860
production constraint networks than in

515
00:21:58,860 --> 00:22:02,100
the lab therefore I'm essentially at the

516
00:22:02,100 --> 00:22:05,159
opposite of the spectrum of you in the

517
00:22:05,159 --> 00:22:07,740
private one should be you know don't

518
00:22:07,740 --> 00:22:10,080
care I completely agree with that

519
00:22:10,080 --> 00:22:13,080
sentiment and without the introduction

520
00:22:13,080 --> 00:22:15,360
of numbering authorities to solve the

521
00:22:15,360 --> 00:22:17,460
encoding problem with a different

522
00:22:17,460 --> 00:22:21,840
approach I completely agree I I will add

523
00:22:21,840 --> 00:22:24,200
ignoring we have numbering authorities

524
00:22:24,200 --> 00:22:28,020
having numbers 1 to 24 is the best thing

525
00:22:28,020 --> 00:22:29,760
to have because we're using seaboor and

526
00:22:29,760 --> 00:22:32,940
that's one octet so if and I'm gonna I'm

527
00:22:32,940 --> 00:22:34,260
not intending to make it a political

528
00:22:34,260 --> 00:22:36,780
Point here but if Rose Cosmos and NASA

529
00:22:36,780 --> 00:22:40,559
both apply to Ayana for numbers 1 to 24

530
00:22:40,559 --> 00:22:44,640
how do we decide that

531
00:22:44,640 --> 00:22:46,320
I don't want to put that pressure on

532
00:22:46,320 --> 00:22:47,820
Ayanna and turn it into a massive

533
00:22:47,820 --> 00:22:50,899
geopolitical conversation

534
00:22:51,059 --> 00:22:54,000
that's a registry policy I understand

535
00:22:54,000 --> 00:22:55,799
it's a registry policy discussion but I

536
00:22:55,799 --> 00:22:57,900
think we can sidestep that we can we can

537
00:22:57,900 --> 00:23:00,960
type tied up the registry policy if we

538
00:23:00,960 --> 00:23:03,140
want but that's it comes kind of a uh

539
00:23:03,140 --> 00:23:05,039
can we come back to this at the end

540
00:23:05,039 --> 00:23:06,240
after I've brought in numbering

541
00:23:06,240 --> 00:23:07,740
authorities because I think it sidesteps

542
00:23:07,740 --> 00:23:09,860
it

543
00:23:11,050 --> 00:23:13,280
[Music]

544
00:23:13,280 --> 00:23:15,960
and in the issue that you brought up

545
00:23:15,960 --> 00:23:17,820
about the size of the header and the

546
00:23:17,820 --> 00:23:20,159
space and that have you looked at at all

547
00:23:20,159 --> 00:23:24,240
at LP wands static context header

548
00:23:24,240 --> 00:23:26,940
compression pronounce Chic and whether

549
00:23:26,940 --> 00:23:29,400
Chic is applicable in this particular

550
00:23:29,400 --> 00:23:30,720
case

551
00:23:30,720 --> 00:23:34,320
I have and one of the things I am not

552
00:23:34,320 --> 00:23:36,600
doing is altering wire protocols

553
00:23:36,600 --> 00:23:38,100
specified for bundle protocol version

554
00:23:38,100 --> 00:23:40,440
seven I do not want to start rewriting

555
00:23:40,440 --> 00:23:43,820
bpv7 that what I'm trying to do here is

556
00:23:43,820 --> 00:23:47,880
clarify text in bpv7 and introduce a

557
00:23:47,880 --> 00:23:50,220
smallest possible effects okay as long

558
00:23:50,220 --> 00:23:52,320
as you looked at it and evaluated and

559
00:23:52,320 --> 00:23:54,960
said bye yeah

560
00:23:54,960 --> 00:23:57,659
yeah it just it dropped out a scope in

561
00:23:57,659 --> 00:23:59,940
terms of pragmatism rather than any

562
00:23:59,940 --> 00:24:02,400
argument about whether Sheikh had a

563
00:24:02,400 --> 00:24:04,860
elegant encoding or not next slide

564
00:24:04,860 --> 00:24:05,880
please

565
00:24:05,880 --> 00:24:08,700
so quick one here we are what are the

566
00:24:08,700 --> 00:24:12,480
clarifications I am proposing for ipn as

567
00:24:12,480 --> 00:24:15,120
it currently stands for bpv7 and this is

568
00:24:15,120 --> 00:24:16,980
as I said the intersection between the

569
00:24:16,980 --> 00:24:19,080
three rfcs which talk about this trying

570
00:24:19,080 --> 00:24:21,900
to work out what actually the common

571
00:24:21,900 --> 00:24:23,520
not the lowest common denominator but

572
00:24:23,520 --> 00:24:25,559
the common intersection of behavior that

573
00:24:25,559 --> 00:24:27,659
kind of matches what people have assumed

574
00:24:27,659 --> 00:24:29,039
when they're reading it as far as I can

575
00:24:29,039 --> 00:24:30,960
work it out so

576
00:24:30,960 --> 00:24:34,080
they boil down to the value zero for the

577
00:24:34,080 --> 00:24:36,780
so remember node number component dot

578
00:24:36,780 --> 00:24:39,000
service number component the value for

579
00:24:39,000 --> 00:24:41,400
the node number component must the value

580
00:24:41,400 --> 00:24:44,520
0 must not be used except as part of the

581
00:24:44,520 --> 00:24:47,760
the magic ipn not DOT naught So within

582
00:24:47,760 --> 00:24:49,320
bundle protocol version seven there is

583
00:24:49,320 --> 00:24:51,240
this concept of the null endpoint

584
00:24:51,240 --> 00:24:56,220
identifier it's nowhere dtn none and in

585
00:24:56,220 --> 00:24:59,220
ipn that is the magic value not DOT

586
00:24:59,220 --> 00:25:01,559
naught so you can't use naught for

587
00:25:01,559 --> 00:25:04,919
anything else it just makes no sense it

588
00:25:04,919 --> 00:25:08,340
it would danger in my opinion so you

589
00:25:08,340 --> 00:25:10,799
can't have an ipn of notebook 2. service

590
00:25:10,799 --> 00:25:12,780
number two kind of on the null endpoint

591
00:25:12,780 --> 00:25:15,299
doesn't seem to make sense to me these

592
00:25:15,299 --> 00:25:17,400
are all open for discussion but that one

593
00:25:17,400 --> 00:25:19,500
hasn't proved to be contentious

594
00:25:19,500 --> 00:25:21,059
it's greater than or equal to two to the

595
00:25:21,059 --> 00:25:23,159
64 for the node number must not be used

596
00:25:23,159 --> 00:25:25,919
because you can't do it in a seaboard

597
00:25:25,919 --> 00:25:29,279
type zero unsigned integer encoding that

598
00:25:29,279 --> 00:25:32,340
will change the wire encoding of your

599
00:25:32,340 --> 00:25:35,279
Seaboard to use big numbers we don't

600
00:25:35,279 --> 00:25:38,039
want to go in there the current encoding

601
00:25:38,039 --> 00:25:40,860
as described in 9171 which introduces

602
00:25:40,860 --> 00:25:42,900
the Seaboard encoding says this will be

603
00:25:42,900 --> 00:25:44,700
an unsigned integer they have a natural

604
00:25:44,700 --> 00:25:47,100
limit of 2 to the 64. that's never

605
00:25:47,100 --> 00:25:49,500
actually written down it's implied by

606
00:25:49,500 --> 00:25:51,120
two statements which

607
00:25:51,120 --> 00:25:54,140
in combination say that so I'm just

608
00:25:54,140 --> 00:25:57,720
saying it so there's no confusion

609
00:25:57,720 --> 00:25:58,740
third

610
00:25:58,740 --> 00:26:00,659
and this is contentious

611
00:26:00,659 --> 00:26:03,539
all ipn scheme Uris for endpoints

612
00:26:03,539 --> 00:26:06,299
co-located on a single bundle processing

613
00:26:06,299 --> 00:26:09,600
node must share the same value for node

614
00:26:09,600 --> 00:26:12,120
number component

615
00:26:12,120 --> 00:26:13,200
and

616
00:26:13,200 --> 00:26:16,440
this is contentious because either you

617
00:26:16,440 --> 00:26:19,260
read this idea of note number dot

618
00:26:19,260 --> 00:26:22,380
service number as analogous to IP

619
00:26:22,380 --> 00:26:25,559
address colon port number

620
00:26:25,559 --> 00:26:28,020
and think well obviously I've got an

621
00:26:28,020 --> 00:26:30,480
address for my node and I discriminate

622
00:26:30,480 --> 00:26:35,039
on the service on my node and therefore

623
00:26:35,039 --> 00:26:37,559
my nodes have to be unique

624
00:26:37,559 --> 00:26:40,260
counter argument is no no no no

625
00:26:40,260 --> 00:26:42,240
bundle protocol version 7 makes it

626
00:26:42,240 --> 00:26:45,779
absolutely clear that the URI in

627
00:26:45,779 --> 00:26:49,320
totality is the unique element that's

628
00:26:49,320 --> 00:26:51,179
what has to be unique

629
00:26:51,179 --> 00:26:55,980
or you can have a service called ipn 2.1

630
00:26:55,980 --> 00:26:58,860
AIDS can have a service called ipn 2.2

631
00:26:58,860 --> 00:27:01,799
they are both unique

632
00:27:01,799 --> 00:27:03,299
and it doesn't matter that the node

633
00:27:03,299 --> 00:27:04,860
number's two

634
00:27:04,860 --> 00:27:06,980
personally

635
00:27:06,980 --> 00:27:10,080
I don't mind I think an argument can be

636
00:27:10,080 --> 00:27:12,600
made for both yeah if you allowed no

637
00:27:12,600 --> 00:27:15,840
numbers to not be actually the number of

638
00:27:15,840 --> 00:27:17,220
a node and we'll just call them last

639
00:27:17,220 --> 00:27:19,700
part or second last part and stop that

640
00:27:19,700 --> 00:27:21,960
implied inference that it's something to

641
00:27:21,960 --> 00:27:23,820
do with the number of the node

642
00:27:23,820 --> 00:27:25,799
and then for the uniqueness constraints

643
00:27:25,799 --> 00:27:27,840
apply this all works fine you can have

644
00:27:27,840 --> 00:27:29,580
allocation policies for them it's all

645
00:27:29,580 --> 00:27:31,320
good we're home and dry and we can do

646
00:27:31,320 --> 00:27:32,700
multi-homing and we can do Gateway

647
00:27:32,700 --> 00:27:34,380
devices and we can do all kinds of cool

648
00:27:34,380 --> 00:27:37,260
stuff we have a question from Eric and

649
00:27:37,260 --> 00:27:38,460
then we have a question from the chat

650
00:27:38,460 --> 00:27:40,559
oops sorry I can't see the thing go on

651
00:27:40,559 --> 00:27:41,580
here

652
00:27:41,580 --> 00:27:44,279
uh yeah clarifying question if I think

653
00:27:44,279 --> 00:27:46,740
what you just described doesn't

654
00:27:46,740 --> 00:27:48,480
match at all how I read bullet point

655
00:27:48,480 --> 00:27:50,100
three here

656
00:27:50,100 --> 00:27:52,679
yes so I put an absolute rule in there

657
00:27:52,679 --> 00:27:54,299
but I've had a number of people come

658
00:27:54,299 --> 00:27:55,500
back to me and say I don't agree with

659
00:27:55,500 --> 00:27:57,059
that I think that's wrong

660
00:27:57,059 --> 00:27:59,580
well so saying that

661
00:27:59,580 --> 00:28:02,580
um and two dot star has to be on a

662
00:28:02,580 --> 00:28:05,039
single node is different from

663
00:28:05,039 --> 00:28:08,760
uh everything on a single node can have

664
00:28:08,760 --> 00:28:11,720
only one node number

665
00:28:12,059 --> 00:28:14,039
those are two different things you're

666
00:28:14,039 --> 00:28:16,740
right and I meant what you've said and

667
00:28:16,740 --> 00:28:18,620
not what I've written

668
00:28:18,620 --> 00:28:23,760
uh uh so you meant that uh n dot star is

669
00:28:23,760 --> 00:28:26,039
always on node n and nowhere else yes

670
00:28:26,039 --> 00:28:27,179
okay

671
00:28:27,179 --> 00:28:31,380
that's about okay so we do we so 4.3 is

672
00:28:31,380 --> 00:28:33,179
not in fact

673
00:28:33,179 --> 00:28:35,820
correct as written at the moment

674
00:28:35,820 --> 00:28:37,980
endpoints collocated on a single bundle

675
00:28:37,980 --> 00:28:40,559
process processing node must share the

676
00:28:40,559 --> 00:28:41,820
same value for the node number because

677
00:28:41,820 --> 00:28:45,059
this implies that a node can't have node

678
00:28:45,059 --> 00:28:47,580
number two and also node number three

679
00:28:47,580 --> 00:28:49,320
you're saying they must have the same

680
00:28:49,320 --> 00:28:51,059
note number and that's like maybe not

681
00:28:51,059 --> 00:28:52,740
yeah okay that's that's an additional

682
00:28:52,740 --> 00:28:55,740
restriction yep a very valid point and

683
00:28:55,740 --> 00:28:58,140
and this is why this is the most this is

684
00:28:58,140 --> 00:28:59,580
why this is one of the things we need to

685
00:28:59,580 --> 00:29:02,100
discuss because the other point is

686
00:29:02,100 --> 00:29:03,360
no

687
00:29:03,360 --> 00:29:06,360
let's not do that let's say you can only

688
00:29:06,360 --> 00:29:08,340
have one node number it's your node

689
00:29:08,340 --> 00:29:09,600
number

690
00:29:09,600 --> 00:29:12,480
and therefore it's got to be unique for

691
00:29:12,480 --> 00:29:14,039
your node because then I can do

692
00:29:14,039 --> 00:29:17,220
something like C and endpoint of 2.7 and

693
00:29:17,220 --> 00:29:21,120
I know where 2.1 is so I can send it to

694
00:29:21,120 --> 00:29:23,460
2.1 because I believe it's the right

695
00:29:23,460 --> 00:29:25,740
node even if it's the wrong service so

696
00:29:25,740 --> 00:29:27,960
you're in adding routing and uh okay

697
00:29:27,960 --> 00:29:29,399
that's still technically a different

698
00:29:29,399 --> 00:29:31,460
thing okay yes it is

699
00:29:31,460 --> 00:29:34,140
of course yeah I can do that with three

700
00:29:34,140 --> 00:29:35,520
as well if you have two and two and

701
00:29:35,520 --> 00:29:38,159
three yeah exactly yeah okay so I'm so

702
00:29:38,159 --> 00:29:39,960
just sorry just to jump in from from a

703
00:29:39,960 --> 00:29:41,820
Time perspective I I think we'll have

704
00:29:41,820 --> 00:29:44,220
this conversation reopened again in a

705
00:29:44,220 --> 00:29:46,740
few slides so can we pause to that uh we

706
00:29:46,740 --> 00:29:48,720
did have one question uh from the chat

707
00:29:48,720 --> 00:29:51,659
uh which asked there is a must in this

708
00:29:51,659 --> 00:29:54,539
third bullet uh do we foresee an

709
00:29:54,539 --> 00:29:57,299
enforcement mechanism for any of these

710
00:29:57,299 --> 00:29:59,520
uniqueness constraints so the only

711
00:29:59,520 --> 00:30:01,500
enforcement mechanism I think we can say

712
00:30:01,500 --> 00:30:06,179
is here is an RFC with RFC 8176 language

713
00:30:06,179 --> 00:30:08,520
in it and if you write a specification

714
00:30:08,520 --> 00:30:11,580
to say your satellite system will comply

715
00:30:11,580 --> 00:30:13,620
to this RFC then it's abundantly clear

716
00:30:13,620 --> 00:30:16,620
are we having dtn police force who go

717
00:30:16,620 --> 00:30:18,899
out and check your implementation of

718
00:30:18,899 --> 00:30:20,100
course we're not

719
00:30:20,100 --> 00:30:23,460
um if people want to do interrupt trials

720
00:30:23,460 --> 00:30:25,080
I think the best we can do is say we

721
00:30:25,080 --> 00:30:26,760
will have a clear specification with

722
00:30:26,760 --> 00:30:28,740
clear ietf language about the correct

723
00:30:28,740 --> 00:30:30,720
Behavior such that people can go away

724
00:30:30,720 --> 00:30:32,340
and write their testing regimes and

725
00:30:32,340 --> 00:30:34,559
their QA and all that kind of stuff I

726
00:30:34,559 --> 00:30:36,000
don't think we're gonna

727
00:30:36,000 --> 00:30:37,740
we don't do enforcement we do

728
00:30:37,740 --> 00:30:40,440
specification okay okay thank you

729
00:30:40,440 --> 00:30:42,059
thank you so for service numbers

730
00:30:42,059 --> 00:30:45,059
um there was some confusion uh RC 6260

731
00:30:45,059 --> 00:30:48,480
and RFC 71 7116 both said the service

732
00:30:48,480 --> 00:30:50,039
number for the administrative endpoint

733
00:30:50,039 --> 00:30:52,620
or what it was called in bpv6 days it

734
00:30:52,620 --> 00:30:53,880
was called something else but it was

735
00:30:53,880 --> 00:30:56,220
fundamentally the same thing

736
00:30:56,220 --> 00:30:59,100
must be zero in bpv7 it got turned into

737
00:30:59,100 --> 00:31:00,480
a May

738
00:31:00,480 --> 00:31:02,580
I'm suggesting it should just go back to

739
00:31:02,580 --> 00:31:05,039
a must I don't see if we have a

740
00:31:05,039 --> 00:31:06,419
well-known service called the

741
00:31:06,419 --> 00:31:08,399
administrative endpoint why not just

742
00:31:08,399 --> 00:31:10,679
give it a number zero which everyone is

743
00:31:10,679 --> 00:31:12,539
kind of using as far as I can work out

744
00:31:12,539 --> 00:31:15,480
it's kind of a housekeeping thing and

745
00:31:15,480 --> 00:31:18,480
again 2-64 because sibo

746
00:31:18,480 --> 00:31:21,380
next slide please

747
00:31:23,039 --> 00:31:25,980
so the rename really simple this one uh

748
00:31:25,980 --> 00:31:28,380
cbh e node numbers becomes bpv6 node

749
00:31:28,380 --> 00:31:30,240
numbers cbhc service numbers becomes

750
00:31:30,240 --> 00:31:33,600
bpv6 URI service numbers no alteration

751
00:31:33,600 --> 00:31:36,240
to policy assignment nothing

752
00:31:36,240 --> 00:31:38,640
cut paste rename in fact I think it's

753
00:31:38,640 --> 00:31:39,840
just rename

754
00:31:39,840 --> 00:31:42,620
next slide

755
00:31:42,960 --> 00:31:45,779
clone them create new Registries for V7

756
00:31:45,779 --> 00:31:48,059
tweak them slightly

757
00:31:48,059 --> 00:31:50,340
call them the bundle protocol version 7

758
00:31:50,340 --> 00:31:53,520
ipn scheme URI null Authority node

759
00:31:53,520 --> 00:31:55,740
numbers registry and I will come back to

760
00:31:55,740 --> 00:31:59,340
what null Authority means

761
00:31:59,340 --> 00:32:01,559
all values and policies are copied from

762
00:32:01,559 --> 00:32:03,840
the cbhg node numbers registry except

763
00:32:03,840 --> 00:32:06,899
I've made the low numbers private use I

764
00:32:06,899 --> 00:32:09,120
am very happy to have that discussion

765
00:32:09,120 --> 00:32:11,960
I have kept the very top numbers as

766
00:32:11,960 --> 00:32:14,640
experimental again probably part of the

767
00:32:14,640 --> 00:32:16,020
same conversation let's have it on the

768
00:32:16,020 --> 00:32:16,740
list

769
00:32:16,740 --> 00:32:18,480
I don't mind there are pros and cons

770
00:32:18,480 --> 00:32:20,460
that's fine

771
00:32:20,460 --> 00:32:21,120
um

772
00:32:21,120 --> 00:32:22,740
there was a weird block between two to

773
00:32:22,740 --> 00:32:24,360
the 21 and 2 to the 28 which was

774
00:32:24,360 --> 00:32:25,980
reserved for private and experimental

775
00:32:25,980 --> 00:32:27,360
that's all part of that same

776
00:32:27,360 --> 00:32:29,700
conversation let's just work out what

777
00:32:29,700 --> 00:32:31,020
these things should be let's make sure

778
00:32:31,020 --> 00:32:32,820
the reservations are there this is our

779
00:32:32,820 --> 00:32:35,159
opportunity to do about housekeeping if

780
00:32:35,159 --> 00:32:36,779
required

781
00:32:36,779 --> 00:32:40,320
okay but the key point is by putting

782
00:32:40,320 --> 00:32:42,659
private use rather than private or

783
00:32:42,659 --> 00:32:44,640
experimental we are saying here is a

784
00:32:44,640 --> 00:32:47,520
chunk of unlicensed Spectrum which you

785
00:32:47,520 --> 00:32:49,799
clearly understand if it's for your own

786
00:32:49,799 --> 00:32:52,200
stuff go ahead and use it

787
00:32:52,200 --> 00:32:55,140
if you use it in the wild you probably

788
00:32:55,140 --> 00:32:56,820
will clash with other people if they're

789
00:32:56,820 --> 00:32:58,919
using it in the wild you do this is not

790
00:32:58,919 --> 00:33:01,919
your spectrum to use you are sharing it

791
00:33:01,919 --> 00:33:03,480
so we could develop protocols which

792
00:33:03,480 --> 00:33:04,799
handle this and live in this kind of

793
00:33:04,799 --> 00:33:06,600
unlicensed Spectrum I don't know someone

794
00:33:06,600 --> 00:33:08,820
else can do that work I'm I'm I have no

795
00:33:08,820 --> 00:33:11,279
idea how we start there but hey and it

796
00:33:11,279 --> 00:33:12,539
also gives the range of numbers back to

797
00:33:12,539 --> 00:33:15,120
the pool that aren't hugely high or or

798
00:33:15,120 --> 00:33:17,039
tiny that we can reallocate for that

799
00:33:17,039 --> 00:33:20,460
band okay we do have uh two people in

800
00:33:20,460 --> 00:33:24,000
the queue starting with Alberto

801
00:33:24,000 --> 00:33:27,779
thanks uh can you hear me well yes

802
00:33:27,779 --> 00:33:29,580
um thanks uh Rick forward explanation

803
00:33:29,580 --> 00:33:31,260
here a couple of couple of comments on

804
00:33:31,260 --> 00:33:33,960
this one the first one is a question

805
00:33:33,960 --> 00:33:37,380
um why creating a second registry why

806
00:33:37,380 --> 00:33:40,860
can we extend the existing registry to

807
00:33:40,860 --> 00:33:44,880
say it is a bpe CX plus the null uh a

808
00:33:44,880 --> 00:33:48,120
null identifier a normal Authority uh

809
00:33:48,120 --> 00:33:50,640
for bpv7

810
00:33:50,640 --> 00:33:53,940
purely because I wanted to separate and

811
00:33:53,940 --> 00:33:56,580
reorganize the current assignments to

812
00:33:56,580 --> 00:33:58,320
clarify the difference between private

813
00:33:58,320 --> 00:34:01,559
use and experimental however that I

814
00:34:01,559 --> 00:34:03,480
think that is a very valid point to have

815
00:34:03,480 --> 00:34:06,480
a discussion about what we do and if the

816
00:34:06,480 --> 00:34:08,820
answer is there is no change then we

817
00:34:08,820 --> 00:34:10,500
don't make the change that that's that's

818
00:34:10,500 --> 00:34:11,820
fine

819
00:34:11,820 --> 00:34:14,520
okay okay thank you um the second

820
00:34:14,520 --> 00:34:17,639
comment is about uh the the use of the

821
00:34:17,639 --> 00:34:20,580
term unlicensed Spectrum

822
00:34:20,580 --> 00:34:23,280
um this has huge implications when it

823
00:34:23,280 --> 00:34:25,800
comes to you know you build Technologies

824
00:34:25,800 --> 00:34:30,780
for coexist in this case you know I tend

825
00:34:30,780 --> 00:34:32,760
to agree with Mark that you know

826
00:34:32,760 --> 00:34:35,520
selecting the the golden uh identif

827
00:34:35,520 --> 00:34:38,280
numbers for private use would

828
00:34:38,280 --> 00:34:40,619
automatically potentially create issues

829
00:34:40,619 --> 00:34:42,780
that you know women don't want to have

830
00:34:42,780 --> 00:34:45,060
at the end of the day

831
00:34:45,060 --> 00:34:46,020
um

832
00:34:46,020 --> 00:34:48,418
um you know similar to IP addresses in

833
00:34:48,418 --> 00:34:50,159
this case

834
00:34:50,159 --> 00:34:52,199
um they need to coexist if they are in

835
00:34:52,199 --> 00:34:54,359
the same network and that would create

836
00:34:54,359 --> 00:34:56,820
definitely forwarding issues if if we

837
00:34:56,820 --> 00:34:58,619
don't create additional technology so I

838
00:34:58,619 --> 00:35:01,980
wonder why creating that issue now

839
00:35:01,980 --> 00:35:03,000
um

840
00:35:03,000 --> 00:35:06,000
two reasons one having some private use

841
00:35:06,000 --> 00:35:07,800
and I used analyzen spectrum in quotes

842
00:35:07,800 --> 00:35:09,420
just because I know people a lot of

843
00:35:09,420 --> 00:35:11,280
people come from an RF background but

844
00:35:11,280 --> 00:35:14,400
it's not a it's this is about private

845
00:35:14,400 --> 00:35:15,960
use allocation of numbers that's the

846
00:35:15,960 --> 00:35:17,640
correct phrase for it I went for low

847
00:35:17,640 --> 00:35:19,200
numbers because I happen to know someone

848
00:35:19,200 --> 00:35:20,760
is currently

849
00:35:20,760 --> 00:35:23,640
deployed a dtn node that they hope will

850
00:35:23,640 --> 00:35:25,800
be interoperable with other dtn networks

851
00:35:25,800 --> 00:35:27,000
that they hope will be interoperable

852
00:35:27,000 --> 00:35:28,320
with other people and they've numbered

853
00:35:28,320 --> 00:35:30,300
one two three four five

854
00:35:30,300 --> 00:35:32,700
and they didn't ask for that

855
00:35:32,700 --> 00:35:35,940
so but again

856
00:35:35,940 --> 00:35:37,800
as long as we have some private use

857
00:35:37,800 --> 00:35:39,300
space and people understand it's the

858
00:35:39,300 --> 00:35:41,400
free-for-all space

859
00:35:41,400 --> 00:35:43,020
and whether we combine that with the

860
00:35:43,020 --> 00:35:44,460
experimental or split it and there's a

861
00:35:44,460 --> 00:35:46,380
bit of nuance in the way Ayanna does its

862
00:35:46,380 --> 00:35:47,700
allocations that needs to just be

863
00:35:47,700 --> 00:35:49,920
checked and it's a slightly ietfe about

864
00:35:49,920 --> 00:35:50,820
it

865
00:35:50,820 --> 00:35:52,920
then it doesn't really matter where it

866
00:35:52,920 --> 00:35:54,960
is I just

867
00:35:54,960 --> 00:35:57,540
felt that moving load was useful

868
00:35:57,540 --> 00:35:58,980
thank you

869
00:35:58,980 --> 00:36:02,460
thank you Kevin Kevin just a really

870
00:36:02,460 --> 00:36:04,500
small question I think uh

871
00:36:04,500 --> 00:36:06,180
for this slide and the other one that

872
00:36:06,180 --> 00:36:08,460
mentioned uniqueness in the ipn scheme

873
00:36:08,460 --> 00:36:10,020
and if I want to

874
00:36:10,020 --> 00:36:12,359
essentially create an anycast style

875
00:36:12,359 --> 00:36:14,000
environment

876
00:36:14,000 --> 00:36:17,099
where do I go in terms of what

877
00:36:17,099 --> 00:36:20,160
allocations to use it's really clear

878
00:36:20,160 --> 00:36:21,140
okay

879
00:36:21,140 --> 00:36:26,480
9171 says you don't use ipn for that

880
00:36:26,480 --> 00:36:30,359
they are so apologies for remembering

881
00:36:30,359 --> 00:36:31,380
that but that seems pretty darn

882
00:36:31,380 --> 00:36:33,119
unfortunate

883
00:36:33,119 --> 00:36:35,160
yeah and I'm not trying to solve that

884
00:36:35,160 --> 00:36:38,339
okay all right that's fair

885
00:36:38,339 --> 00:36:41,119
Scott

886
00:36:41,700 --> 00:36:44,099
yeah uh can you hear me okay

887
00:36:44,099 --> 00:36:46,079
yes okay

888
00:36:46,079 --> 00:36:49,859
um my remark at this point is just that

889
00:36:49,859 --> 00:36:51,780
um if you do have

890
00:36:51,780 --> 00:36:53,520
um authorities

891
00:36:53,520 --> 00:36:56,579
um it seems to me that the reserving

892
00:36:56,579 --> 00:36:58,500
load numbers for private use is moved

893
00:36:58,500 --> 00:37:00,780
because the authority ought to be able

894
00:37:00,780 --> 00:37:04,200
to use the low numbers itself right and

895
00:37:04,200 --> 00:37:06,420
there's no

896
00:37:06,420 --> 00:37:09,780
um it's responsible itself for

897
00:37:09,780 --> 00:37:11,940
um ensuring there's no Clash on those

898
00:37:11,940 --> 00:37:13,920
numbers isn't that right

899
00:37:13,920 --> 00:37:16,680
I agree with you Scott yeah which is my

900
00:37:16,680 --> 00:37:18,660
answer to Mark originally about

901
00:37:18,660 --> 00:37:19,800
uh

902
00:37:19,800 --> 00:37:21,599
having them as low numbers it didn't

903
00:37:21,599 --> 00:37:23,460
really matter because it kind of once

904
00:37:23,460 --> 00:37:25,020
you've got authorities in place it kind

905
00:37:25,020 --> 00:37:26,700
of negates and moves around that a

906
00:37:26,700 --> 00:37:28,380
little bit can we take that one to the

907
00:37:28,380 --> 00:37:29,460
list because I think it's an interesting

908
00:37:29,460 --> 00:37:31,680
topic and yes the

909
00:37:31,680 --> 00:37:33,900
that's another aspect is if we've got

910
00:37:33,900 --> 00:37:35,520
Authority numbers do we really care

911
00:37:35,520 --> 00:37:36,720
about this and perhaps we should just

912
00:37:36,720 --> 00:37:39,780
leave it as it is it is exactly yeah

913
00:37:39,780 --> 00:37:40,640
yeah

914
00:37:40,640 --> 00:37:42,540
okay so

915
00:37:42,540 --> 00:37:44,339
anyone else

916
00:37:44,339 --> 00:37:48,359
okay uh next is Mark

917
00:37:48,359 --> 00:37:50,220
and then in the interest of time I will

918
00:37:50,220 --> 00:37:52,020
uh lock the queue yeah I was going to

919
00:37:52,020 --> 00:37:54,839
say you know it's fine if if you wanna

920
00:37:54,839 --> 00:37:57,300
have questions at the end but

921
00:37:57,300 --> 00:38:00,599
um two comments one is uh same as a

922
00:38:00,599 --> 00:38:01,500
um

923
00:38:01,500 --> 00:38:03,720
previous speaker and that's got the

924
00:38:03,720 --> 00:38:05,579
Alberto

925
00:38:05,579 --> 00:38:08,160
um I think I don't see the reason for

926
00:38:08,160 --> 00:38:09,900
having two registries

927
00:38:09,900 --> 00:38:11,220
it was only because I changed the

928
00:38:11,220 --> 00:38:12,540
allocations

929
00:38:12,540 --> 00:38:13,920
is there any reason

930
00:38:13,920 --> 00:38:17,099
yeah but you know then we're kind of out

931
00:38:17,099 --> 00:38:19,500
of sync if you know with someone yeah

932
00:38:19,500 --> 00:38:21,599
yeah it's like so so an important aspect

933
00:38:21,599 --> 00:38:24,480
is it's not the same protocol but yeah I

934
00:38:24,480 --> 00:38:25,740
don't know and they are completely into

935
00:38:25,740 --> 00:38:28,980
not interrupted yeah I know it's the

936
00:38:28,980 --> 00:38:31,980
same URL URI scheme can we take that one

937
00:38:31,980 --> 00:38:33,540
to the list yeah I think it's all

938
00:38:33,540 --> 00:38:34,859
relevant argument I think it's a really

939
00:38:34,859 --> 00:38:36,119
good discussion to have there and I

940
00:38:36,119 --> 00:38:37,079
think we can conclude something

941
00:38:37,079 --> 00:38:38,880
practical because it's it's not a major

942
00:38:38,880 --> 00:38:40,740
issue this we just get just let's just

943
00:38:40,740 --> 00:38:43,079
do the right thing yeah so it's fine I

944
00:38:43,079 --> 00:38:45,480
feel bad about having same Reggie for

945
00:38:45,480 --> 00:38:48,060
the same URI scheme with different

946
00:38:48,060 --> 00:38:50,359
numbers

947
00:38:50,820 --> 00:38:53,460
um the other point is uh I would like to

948
00:38:53,460 --> 00:38:54,359
be

949
00:38:54,359 --> 00:38:55,020
um

950
00:38:55,020 --> 00:38:57,720
uh to learn what you mean the difference

951
00:38:57,720 --> 00:38:59,700
between private use and experimental

952
00:38:59,700 --> 00:39:02,040
because you define it differently I

953
00:39:02,040 --> 00:39:04,560
haven't seen you know usually I in a you

954
00:39:04,560 --> 00:39:06,119
know Registries private user

955
00:39:06,119 --> 00:39:08,400
experimental is the same range which is

956
00:39:08,400 --> 00:39:11,040
I don't care and those numbers should

957
00:39:11,040 --> 00:39:12,839
not happen in production you know

958
00:39:12,839 --> 00:39:15,839
networks but I was entirely with you on

959
00:39:15,839 --> 00:39:17,700
this and then I went and read the very

960
00:39:17,700 --> 00:39:19,859
detailed RFC about how to write a

961
00:39:19,859 --> 00:39:21,240
registry properly because I thought if

962
00:39:21,240 --> 00:39:22,920
I'm going to do this I just and it draws

963
00:39:22,920 --> 00:39:24,300
them out and explains them differently

964
00:39:24,300 --> 00:39:25,560
and claims them to be different things

965
00:39:25,560 --> 00:39:27,780
however if we want to conflate them

966
00:39:27,780 --> 00:39:29,339
together and say for us it doesn't make

967
00:39:29,339 --> 00:39:30,960
any difference I'm happy to do that as

968
00:39:30,960 --> 00:39:33,300
well yeah because it's just you know

969
00:39:33,300 --> 00:39:34,920
yeah

970
00:39:34,920 --> 00:39:37,020
okay this is why this is a working group

971
00:39:37,020 --> 00:39:40,619
document and Stuart stew card critical

972
00:39:40,619 --> 00:39:42,000
Technologies

973
00:39:42,000 --> 00:39:44,160
um so two points the first one I think

974
00:39:44,160 --> 00:39:45,480
this might be a restatement of something

975
00:39:45,480 --> 00:39:47,339
that somebody else said but I want to

976
00:39:47,339 --> 00:39:48,420
use different words to make sure I'm

977
00:39:48,420 --> 00:39:51,480
clearing it that saying uniqueness means

978
00:39:51,480 --> 00:39:53,640
that every node number must point to one

979
00:39:53,640 --> 00:39:56,040
and only one node is different from

980
00:39:56,040 --> 00:39:58,800
uniqueness meaning that every node has

981
00:39:58,800 --> 00:40:01,920
one and only one node number so I hope

982
00:40:01,920 --> 00:40:03,420
we can tease that out in the text

983
00:40:03,420 --> 00:40:05,339
secondly

984
00:40:05,339 --> 00:40:08,040
um what's a node oh this craft a

985
00:40:08,040 --> 00:40:11,339
computer uh a core on a computer a

986
00:40:11,339 --> 00:40:14,220
virtual machine uh

987
00:40:14,220 --> 00:40:16,440
the closest I've come to that answer and

988
00:40:16,440 --> 00:40:18,180
I don't think it's satisfactory is

989
00:40:18,180 --> 00:40:20,460
things which share an administrative

990
00:40:20,460 --> 00:40:22,400
endpoint

991
00:40:22,400 --> 00:40:25,820
question mark

992
00:40:27,740 --> 00:40:32,460
there is a point maybe earlier about for

993
00:40:32,460 --> 00:40:35,339
private use why do we need

994
00:40:35,339 --> 00:40:38,400
um an authority authority for private

995
00:40:38,400 --> 00:40:41,160
nodes and to that

996
00:40:41,160 --> 00:40:43,260
um also say that

997
00:40:43,260 --> 00:40:45,480
um I don't know if it's a case in your

998
00:40:45,480 --> 00:40:50,220
environment but stealth mode development

999
00:40:50,220 --> 00:40:52,380
where somebody's developing something

1000
00:40:52,380 --> 00:40:53,880
that they don't want to share or

1001
00:40:53,880 --> 00:40:56,940
something else having the ability to get

1002
00:40:56,940 --> 00:41:00,240
numbers to work with without exposing

1003
00:41:00,240 --> 00:41:02,760
what they're doing is critical for those

1004
00:41:02,760 --> 00:41:06,359
sorts of operations so so push back on

1005
00:41:06,359 --> 00:41:09,540
any arguments against it because again I

1006
00:41:09,540 --> 00:41:10,800
don't know if there's such a thing in

1007
00:41:10,800 --> 00:41:12,900
your industry about Stealth development

1008
00:41:12,900 --> 00:41:14,099
that there's always a government

1009
00:41:14,099 --> 00:41:17,099
involved or something like that but uh

1010
00:41:17,099 --> 00:41:19,440
um so can I answer that question when we

1011
00:41:19,440 --> 00:41:20,760
get to the authorities so if you notice

1012
00:41:20,760 --> 00:41:23,160
this is the null Authority I you don't

1013
00:41:23,160 --> 00:41:24,780
have an authority you don't need to go

1014
00:41:24,780 --> 00:41:26,940
get an authority you just got some

1015
00:41:26,940 --> 00:41:28,200
numbers you can use and you don't have

1016
00:41:28,200 --> 00:41:30,240
to tell anyone about it that's why you

1017
00:41:30,240 --> 00:41:31,800
want because you have to be able to

1018
00:41:31,800 --> 00:41:34,500
support the stealth development I I

1019
00:41:34,500 --> 00:41:36,300
think that's absolutely something that

1020
00:41:36,300 --> 00:41:38,820
must be supported when however the final

1021
00:41:38,820 --> 00:41:41,940
text comes out thank you next slide I've

1022
00:41:41,940 --> 00:41:44,040
got eight seconds

1023
00:41:44,040 --> 00:41:46,020
uh so the service number's registry just

1024
00:41:46,020 --> 00:41:48,119
like I did with the v61 I cloned it

1025
00:41:48,119 --> 00:41:50,520
because I felt that it might be worth

1026
00:41:50,520 --> 00:41:53,040
jiggling it about to make the boundaries

1027
00:41:53,040 --> 00:41:56,520
work with C boring coding otherwise it's

1028
00:41:56,520 --> 00:41:59,400
pretty much the same

1029
00:41:59,400 --> 00:42:01,079
um I couldn't find any current

1030
00:42:01,079 --> 00:42:02,640
specifications for active well-known

1031
00:42:02,640 --> 00:42:05,160
bpv7 services that needed immediate

1032
00:42:05,160 --> 00:42:07,920
assignment they could be wrong if you

1033
00:42:07,920 --> 00:42:09,960
work for an agency and I'm kind of

1034
00:42:09,960 --> 00:42:12,960
addressing ccsds here who have things

1035
00:42:12,960 --> 00:42:14,760
that they consider well-known services

1036
00:42:14,760 --> 00:42:17,040
that are something that should be

1037
00:42:17,040 --> 00:42:19,079
globally interoperable and registered

1038
00:42:19,079 --> 00:42:21,000
with the ietf rather than just used

1039
00:42:21,000 --> 00:42:23,940
within their own sort of work uh speak

1040
00:42:23,940 --> 00:42:26,160
up let's get these ready to go into the

1041
00:42:26,160 --> 00:42:28,320
service registry to avoid clashes mark

1042
00:42:28,320 --> 00:42:30,060
blanche's draft on service members there

1043
00:42:30,060 --> 00:42:31,800
again Mark I did mention it

1044
00:42:31,800 --> 00:42:33,839
um I think is really good it was a

1045
00:42:33,839 --> 00:42:36,900
really timely up uplift of that uh draft

1046
00:42:36,900 --> 00:42:38,460
and republication of that draft it

1047
00:42:38,460 --> 00:42:40,260
introduces the Ping service or the echo

1048
00:42:40,260 --> 00:42:42,420
Service uh needs a well-known service

1049
00:42:42,420 --> 00:42:44,760
number just for General op stuff so you

1050
00:42:44,760 --> 00:42:46,560
can ping a node see if it is actually

1051
00:42:46,560 --> 00:42:49,200
there in a delay tolerant manner it's

1052
00:42:49,200 --> 00:42:51,060
going to need a well-known number

1053
00:42:51,060 --> 00:42:54,000
it doesn't have one at the moment this

1054
00:42:54,000 --> 00:42:56,579
is an opportunity to tidy up again

1055
00:42:56,579 --> 00:42:58,619
private use experimental use interesting

1056
00:42:58,619 --> 00:43:00,599
debate let's take it to the list

1057
00:43:00,599 --> 00:43:01,980
um that kind of stuff

1058
00:43:01,980 --> 00:43:03,599
next slide

1059
00:43:03,599 --> 00:43:04,859
because I just want to get to the

1060
00:43:04,859 --> 00:43:06,900
contentious stuff any questions so far

1061
00:43:06,900 --> 00:43:09,599
no move on

1062
00:43:09,599 --> 00:43:11,520
numbering authorities okay brace

1063
00:43:11,520 --> 00:43:12,480
yourself

1064
00:43:12,480 --> 00:43:14,280
so allocating from the flat number space

1065
00:43:14,280 --> 00:43:17,160
is inefficient it is that simple really

1066
00:43:17,160 --> 00:43:20,040
if you turn up late to the party you get

1067
00:43:20,040 --> 00:43:22,319
a more inefficient encoding for all your

1068
00:43:22,319 --> 00:43:24,599
node numbers tough

1069
00:43:24,599 --> 00:43:26,700
that's the current state of play

1070
00:43:26,700 --> 00:43:29,579
next slide please

1071
00:43:29,579 --> 00:43:31,380
The Proposal

1072
00:43:31,380 --> 00:43:33,480
let's put a prefix in front of this so

1073
00:43:33,480 --> 00:43:35,220
let's divide the space from a flat space

1074
00:43:35,220 --> 00:43:36,720
into a tree

1075
00:43:36,720 --> 00:43:39,660
so optionally

1076
00:43:39,660 --> 00:43:44,160
you can put an extra number dot in front

1077
00:43:44,160 --> 00:43:46,859
of your node number to say this node

1078
00:43:46,859 --> 00:43:50,280
number was assigned by this numbering

1079
00:43:50,280 --> 00:43:51,900
Authority

1080
00:43:51,900 --> 00:43:54,780
so a numbering Authority is an

1081
00:43:54,780 --> 00:43:56,220
organization and there's some question

1082
00:43:56,220 --> 00:43:58,440
mark about how we Define what the

1083
00:43:58,440 --> 00:44:00,660
credentials to be a numbering authority

1084
00:44:00,660 --> 00:44:03,060
to stop me going and grabbing two

1085
00:44:03,060 --> 00:44:06,240
personally for my entire Space Race

1086
00:44:06,240 --> 00:44:06,839
um

1087
00:44:06,839 --> 00:44:09,240
why not to stop but to ask serious

1088
00:44:09,240 --> 00:44:11,280
questions about why is Rick registering

1089
00:44:11,280 --> 00:44:13,079
all of two

1090
00:44:13,079 --> 00:44:15,420
but fundamentally you're saying

1091
00:44:15,420 --> 00:44:17,520
I can encode my numbering Authority

1092
00:44:17,520 --> 00:44:20,160
efficiently I can then as a numbering

1093
00:44:20,160 --> 00:44:22,560
Authority hand out all those precious

1094
00:44:22,560 --> 00:44:23,819
short

1095
00:44:23,819 --> 00:44:25,980
good encodings you know the one octet

1096
00:44:25,980 --> 00:44:28,920
two octet encodings according to my

1097
00:44:28,920 --> 00:44:31,560
policies without clashing with anyone

1098
00:44:31,560 --> 00:44:33,540
else from a number other numbering

1099
00:44:33,540 --> 00:44:36,240
Authority or from that registry of the

1100
00:44:36,240 --> 00:44:38,760
null Authority I.E the register used

1101
00:44:38,760 --> 00:44:40,740
when you don't have a numbering

1102
00:44:40,740 --> 00:44:44,220
Authority I can therefore get Global

1103
00:44:44,220 --> 00:44:48,420
uniqueness when I need it so this is for

1104
00:44:48,420 --> 00:44:50,880
interoperability

1105
00:44:50,880 --> 00:44:54,000
and it it just simply encodes shorter

1106
00:44:54,000 --> 00:44:56,220
and gives more flexibility to assignment

1107
00:44:56,220 --> 00:44:59,819
and if you are a vast if you are ccsds

1108
00:44:59,819 --> 00:45:02,280
and you are representing multiple Global

1109
00:45:02,280 --> 00:45:05,760
space agencies you can add naming

1110
00:45:05,760 --> 00:45:08,760
sub-authorities to give you even more

1111
00:45:08,760 --> 00:45:10,319
bits to play with

1112
00:45:10,319 --> 00:45:12,720
so you can then hand it up to two two to

1113
00:45:12,720 --> 00:45:14,880
the 64 sub-authorities I mean the big

1114
00:45:14,880 --> 00:45:16,260
ones come with a price

1115
00:45:16,260 --> 00:45:19,040
and they can then so you can have

1116
00:45:19,040 --> 00:45:23,339
ccsds.nasa or my Global program for

1117
00:45:23,339 --> 00:45:25,859
world for space domination dot project a

1118
00:45:25,859 --> 00:45:28,440
DOT Project B because I am a global

1119
00:45:28,440 --> 00:45:29,700
megacorp

1120
00:45:29,700 --> 00:45:31,140
it gives you that little bit of

1121
00:45:31,140 --> 00:45:33,000
flexibility but both of these components

1122
00:45:33,000 --> 00:45:35,400
are optional

1123
00:45:35,400 --> 00:45:38,760
the numbering the naming authorities or

1124
00:45:38,760 --> 00:45:40,920
numbering authorities and I need to be

1125
00:45:40,920 --> 00:45:42,300
clear about getting I've called it two

1126
00:45:42,300 --> 00:45:43,619
different things stupidly I've been

1127
00:45:43,619 --> 00:45:44,880
calling them numbering authorities in

1128
00:45:44,880 --> 00:45:48,060
the draft numbering authorities have a

1129
00:45:48,060 --> 00:45:50,880
global registry in Ayana

1130
00:45:50,880 --> 00:45:52,859
so you that maintains the

1131
00:45:52,859 --> 00:45:54,359
interoperability

1132
00:45:54,359 --> 00:45:56,160
but other than that they can hand out

1133
00:45:56,160 --> 00:45:58,740
their own numbers and I have added a

1134
00:45:58,740 --> 00:46:01,560
registration for them and

1135
00:46:01,560 --> 00:46:04,619
next slide please

1136
00:46:04,619 --> 00:46:07,440
okay reason for it

1137
00:46:07,440 --> 00:46:09,000
one of the arguments is people have been

1138
00:46:09,000 --> 00:46:11,040
saying oh how do I detect these things

1139
00:46:11,040 --> 00:46:12,839
oh hold on you're changing the wiring

1140
00:46:12,839 --> 00:46:14,280
coding for these things

1141
00:46:14,280 --> 00:46:17,700
um this should be a whole new URI schema

1142
00:46:17,700 --> 00:46:21,900
um no first off you can detect this in

1143
00:46:21,900 --> 00:46:23,520
your stream parser or your buffered

1144
00:46:23,520 --> 00:46:26,280
parser one octet later than you

1145
00:46:26,280 --> 00:46:27,960
currently detect it

1146
00:46:27,960 --> 00:46:30,720
so in the wire protocol when you receive

1147
00:46:30,720 --> 00:46:34,079
a c-bar encoded URI the first octet

1148
00:46:34,079 --> 00:46:37,200
indicates the type of the URI type

1149
00:46:37,200 --> 00:46:41,520
number two is ipn

1150
00:46:41,520 --> 00:46:43,920
following that is the length of the

1151
00:46:43,920 --> 00:46:46,079
array which contains the integers of

1152
00:46:46,079 --> 00:46:48,180
node number and service number currently

1153
00:46:48,180 --> 00:46:50,760
it should always be 2 because that's all

1154
00:46:50,760 --> 00:46:52,740
that's defined with this change that

1155
00:46:52,740 --> 00:46:55,020
number maybe three or four and that

1156
00:46:55,020 --> 00:46:56,460
tells you how many more you need to read

1157
00:46:56,460 --> 00:46:58,740
so you can detect these just as simply

1158
00:46:58,740 --> 00:47:01,560
but one architect later I consider that

1159
00:47:01,560 --> 00:47:02,640
a

1160
00:47:02,640 --> 00:47:04,500
easy

1161
00:47:04,500 --> 00:47:06,359
first compatibility they're optional you

1162
00:47:06,359 --> 00:47:07,800
don't need them there's a registry go do

1163
00:47:07,800 --> 00:47:09,599
what you always did that's fine

1164
00:47:09,599 --> 00:47:11,400
that's it

1165
00:47:11,400 --> 00:47:14,420
absolutely fine

1166
00:47:14,760 --> 00:47:17,280
and

1167
00:47:17,280 --> 00:47:19,140
yes and it also removes contention on

1168
00:47:19,140 --> 00:47:20,700
that registry so that's a no-brainer we

1169
00:47:20,700 --> 00:47:22,560
don't have everybody fighting for that

1170
00:47:22,560 --> 00:47:23,940
single numbering range for their

1171
00:47:23,940 --> 00:47:26,220
assignments they can just ask for a

1172
00:47:26,220 --> 00:47:27,839
number or look at the numbering

1173
00:47:27,839 --> 00:47:29,040
authorities that have registered

1174
00:47:29,040 --> 00:47:30,960
themselves and ring their closest who's

1175
00:47:30,960 --> 00:47:32,760
offering the best prices if you want to

1176
00:47:32,760 --> 00:47:35,339
use a commercial model you know

1177
00:47:35,339 --> 00:47:38,220
next slide please

1178
00:47:38,220 --> 00:47:40,619
that's it right

1179
00:47:40,619 --> 00:47:43,579
how big's the queue

1180
00:47:44,460 --> 00:47:46,079
the queue is a very good size right now

1181
00:47:46,079 --> 00:47:48,420
it is empty uh but but I know that we

1182
00:47:48,420 --> 00:47:49,560
had some

1183
00:47:49,560 --> 00:47:52,520
questions prior

1184
00:47:54,660 --> 00:47:57,480
so well I will I will I will bring back

1185
00:47:57,480 --> 00:48:00,420
up in in this instance

1186
00:48:00,420 --> 00:48:03,060
um oh well I'll let Scott go first and

1187
00:48:03,060 --> 00:48:05,819
then ask my question Scott go ahead

1188
00:48:05,819 --> 00:48:08,819
uh actually uh if if you want to go

1189
00:48:08,819 --> 00:48:10,140
ahead and ask a question first that's

1190
00:48:10,140 --> 00:48:12,359
fine with me I can why don't you start

1191
00:48:12,359 --> 00:48:17,280
sure okay uh in in reference to uh the

1192
00:48:17,280 --> 00:48:20,339
the understanding that different nodes

1193
00:48:20,339 --> 00:48:23,339
cannot have the same node number is a

1194
00:48:23,339 --> 00:48:25,980
different consideration than a single

1195
00:48:25,980 --> 00:48:28,440
node cannot have multiple node numbers

1196
00:48:28,440 --> 00:48:32,180
uh those are two separate constraints

1197
00:48:32,180 --> 00:48:36,060
is there can I call for opinions on

1198
00:48:36,060 --> 00:48:38,579
whether both of those constraints should

1199
00:48:38,579 --> 00:48:41,400
always exist

1200
00:48:41,400 --> 00:48:42,960
should there be a one-to-one

1201
00:48:42,960 --> 00:48:46,380
relationship between nodes and

1202
00:48:46,380 --> 00:48:49,319
numbering Authority sub Authority node

1203
00:48:49,319 --> 00:48:52,200
number you know that that set of

1204
00:48:52,200 --> 00:48:54,420
identification so I will toss that out

1205
00:48:54,420 --> 00:48:56,220
there in case anyone has opinions on

1206
00:48:56,220 --> 00:48:57,540
that if they would like to come up and

1207
00:48:57,540 --> 00:49:00,660
speak to it but then otherwise would go

1208
00:49:00,660 --> 00:49:03,799
back to Scott for his question

1209
00:49:04,560 --> 00:49:07,560
people

1210
00:49:07,800 --> 00:49:11,880
yes Scott it's it's to you okay uh well

1211
00:49:11,880 --> 00:49:15,180
uh I will start by

1212
00:49:15,180 --> 00:49:18,599
um uh responding to your question and uh

1213
00:49:18,599 --> 00:49:21,060
uh what I would point out here is that

1214
00:49:21,060 --> 00:49:23,940
both the IPM scheme and the DTM scheme

1215
00:49:23,940 --> 00:49:25,560
are

1216
00:49:25,560 --> 00:49:30,020
um uh valid and are defined in 9171 so

1217
00:49:30,020 --> 00:49:34,020
there is uh already a precedent for

1218
00:49:34,020 --> 00:49:37,579
having multiple uh unique node

1219
00:49:37,579 --> 00:49:41,220
identifiers uh for a single node that is

1220
00:49:41,220 --> 00:49:44,700
uh the ipn node number is not the only

1221
00:49:44,700 --> 00:49:47,099
is not necessarily the only unique

1222
00:49:47,099 --> 00:49:49,380
identifier for that note there there can

1223
00:49:49,380 --> 00:49:51,359
be a dtn

1224
00:49:51,359 --> 00:49:56,339
um node identifier as well and so

1225
00:49:56,339 --> 00:49:59,160
um the possibility of aliases in that

1226
00:49:59,160 --> 00:50:02,700
sense already exists and it stood I

1227
00:50:02,700 --> 00:50:05,700
would say difficult to legislate it away

1228
00:50:05,700 --> 00:50:08,819
um I I don't I think it's bad practice

1229
00:50:08,819 --> 00:50:10,140
for a single node to have multiple

1230
00:50:10,140 --> 00:50:14,099
little node numbers so I'm not opposed

1231
00:50:14,099 --> 00:50:16,220
to

1232
00:50:16,319 --> 00:50:20,220
um excluding that in a specification

1233
00:50:20,220 --> 00:50:21,020
um

1234
00:50:21,020 --> 00:50:24,900
I just want to point out that that there

1235
00:50:24,900 --> 00:50:26,700
are

1236
00:50:26,700 --> 00:50:28,020
um

1237
00:50:28,020 --> 00:50:30,240
their existing mechanisms that that can

1238
00:50:30,240 --> 00:50:32,400
frustrate that sort of uniqueness if we

1239
00:50:32,400 --> 00:50:34,980
want to and and those are difficult to

1240
00:50:34,980 --> 00:50:38,339
go to damage it it I definitely agree

1241
00:50:38,339 --> 00:50:39,359
that

1242
00:50:39,359 --> 00:50:41,160
um

1243
00:50:41,160 --> 00:50:45,060
um that the same node number uh should

1244
00:50:45,060 --> 00:50:49,079
not be used for multiple different nodes

1245
00:50:49,079 --> 00:50:51,900
and um and and that I think is an

1246
00:50:51,900 --> 00:50:54,119
important thing to uh document in the

1247
00:50:54,119 --> 00:50:56,160
specification I would also point out

1248
00:50:56,160 --> 00:50:57,119
that

1249
00:50:57,119 --> 00:51:01,319
uh node actually is a technical term uh

1250
00:51:01,319 --> 00:51:07,140
that is defined uh formally in RFC 9171

1251
00:51:07,140 --> 00:51:08,400
um

1252
00:51:08,400 --> 00:51:11,099
um the other thing I was going to bring

1253
00:51:11,099 --> 00:51:13,859
up at this point is

1254
00:51:13,859 --> 00:51:17,280
uh if

1255
00:51:17,280 --> 00:51:21,240
um if we say that there are authorities

1256
00:51:21,240 --> 00:51:24,359
and the absence of the

1257
00:51:24,359 --> 00:51:25,319
um

1258
00:51:25,319 --> 00:51:30,380
encoding of an authority in uh in an IPM

1259
00:51:30,380 --> 00:51:33,240
endpoint ID

1260
00:51:33,240 --> 00:51:34,400
um

1261
00:51:34,400 --> 00:51:40,020
implies a null of authority uh I would

1262
00:51:40,020 --> 00:51:43,020
suggest that that null Authority think

1263
00:51:43,020 --> 00:51:46,380
think of it as as an authority that that

1264
00:51:46,380 --> 00:51:50,099
uh is uh there's nobody

1265
00:51:50,099 --> 00:51:53,099
uh managing necessarily or or that

1266
00:51:53,099 --> 00:51:57,000
there's a an authority uh number zero

1267
00:51:57,000 --> 00:51:59,520
someplace that is in charge of it and

1268
00:51:59,520 --> 00:52:04,079
not even have a node number registry in

1269
00:52:04,079 --> 00:52:07,260
uh Ayanna uh since node numbers are

1270
00:52:07,260 --> 00:52:10,020
going to be assigned by authorities uh

1271
00:52:10,020 --> 00:52:11,040
anyway

1272
00:52:11,040 --> 00:52:14,220
um so if if you if you want to have a

1273
00:52:14,220 --> 00:52:17,760
formal central location for

1274
00:52:17,760 --> 00:52:20,579
um for assigning those uh node numbers

1275
00:52:20,579 --> 00:52:23,520
where there's no specified Authority I

1276
00:52:23,520 --> 00:52:25,380
think that's a the easiest way to do

1277
00:52:25,380 --> 00:52:27,240
that is for there to be a zero Authority

1278
00:52:27,240 --> 00:52:29,579
whose job it is to do that and then

1279
00:52:29,579 --> 00:52:31,800
everything is in the same model and you

1280
00:52:31,800 --> 00:52:33,300
can eliminate

1281
00:52:33,300 --> 00:52:34,980
Ayanna having to be responsible for

1282
00:52:34,980 --> 00:52:36,780
handing out node numbers

1283
00:52:36,780 --> 00:52:39,240
so Scott can I reply to that one

1284
00:52:39,240 --> 00:52:40,619
um of course

1285
00:52:40,619 --> 00:52:42,680
so

1286
00:52:42,680 --> 00:52:47,400
I think we are in effect creating a zero

1287
00:52:47,400 --> 00:52:50,160
naming Authority and it's called Ayana

1288
00:52:50,160 --> 00:52:52,140
and it's maintaining the registry of

1289
00:52:52,140 --> 00:52:53,760
things we've already handed out to

1290
00:52:53,760 --> 00:52:56,040
people so that they don't suddenly lose

1291
00:52:56,040 --> 00:52:58,020
their their allocation

1292
00:52:58,020 --> 00:52:59,880
but what we're also saying is because

1293
00:52:59,880 --> 00:53:02,099
it's zero and if you notice in the in

1294
00:53:02,099 --> 00:53:03,900
the in the draft I have reserved at the

1295
00:53:03,900 --> 00:53:06,000
number zero in the number naming

1296
00:53:06,000 --> 00:53:07,680
Authority you can't be you can't go

1297
00:53:07,680 --> 00:53:10,020
register zero it's it's held back all

1298
00:53:10,020 --> 00:53:11,880
we're saying is if your naming Authority

1299
00:53:11,880 --> 00:53:13,500
is zero you don't need to put it in

1300
00:53:13,500 --> 00:53:14,460
there

1301
00:53:14,460 --> 00:53:17,160
it's and and then things which are

1302
00:53:17,160 --> 00:53:19,079
currently not putting anything in there

1303
00:53:19,079 --> 00:53:22,319
and using that registry just work so I

1304
00:53:22,319 --> 00:53:25,260
think we're kind of agreeing here

1305
00:53:25,260 --> 00:53:28,020
uh yeah yeah I was

1306
00:53:28,020 --> 00:53:28,740
um

1307
00:53:28,740 --> 00:53:31,319
I was just arguing for

1308
00:53:31,319 --> 00:53:33,720
um having a uh uh

1309
00:53:33,720 --> 00:53:36,480
um something other than Ayanna handing

1310
00:53:36,480 --> 00:53:38,940
out the uh zero Authority node numbers

1311
00:53:38,940 --> 00:53:41,760
because I thought it might be uh easier

1312
00:53:41,760 --> 00:53:42,960
but

1313
00:53:42,960 --> 00:53:44,280
um I'm

1314
00:53:44,280 --> 00:53:49,079
um if if that's the the best choice

1315
00:53:49,079 --> 00:53:52,260
yeah so that just certainly by having

1316
00:53:52,260 --> 00:53:55,440
that the the existing behavior of

1317
00:53:55,440 --> 00:53:59,040
node.service is unchanged but if we feel

1318
00:53:59,040 --> 00:54:00,780
uh any differently about it I would say

1319
00:54:00,780 --> 00:54:02,520
let's let's take that particular part to

1320
00:54:02,520 --> 00:54:04,579
the list

1321
00:54:04,579 --> 00:54:08,819
uh and then the other thing of course

1322
00:54:08,819 --> 00:54:11,460
um I was uh certain to bring up is

1323
00:54:11,460 --> 00:54:15,839
um a a preference for

1324
00:54:15,839 --> 00:54:19,680
um limiting the size of authority

1325
00:54:19,680 --> 00:54:21,660
numbers and

1326
00:54:21,660 --> 00:54:23,099
um and the

1327
00:54:23,099 --> 00:54:24,380
um and and

1328
00:54:24,380 --> 00:54:28,260
uh no number assigned by an authority to

1329
00:54:28,260 --> 00:54:31,500
32 bits each so that they can be

1330
00:54:31,500 --> 00:54:36,540
combined into a 64-bit node number

1331
00:54:36,540 --> 00:54:41,040
um as they currently are and minimize

1332
00:54:41,040 --> 00:54:44,460
the impact on existing implementations

1333
00:54:44,460 --> 00:54:46,940
and deployments of

1334
00:54:46,940 --> 00:54:51,059
dtn that use the IPM scheme

1335
00:54:51,059 --> 00:54:53,520
so so Scott I got a response to that

1336
00:54:53,520 --> 00:54:56,099
which is

1337
00:54:56,099 --> 00:54:59,160
two-part first I don't want to now

1338
00:54:59,160 --> 00:55:01,140
reduce

1339
00:55:01,140 --> 00:55:04,619
the existing two to the 64 address space

1340
00:55:04,619 --> 00:55:06,480
that that is through the null Authority

1341
00:55:06,480 --> 00:55:08,220
that the step the behavior as it

1342
00:55:08,220 --> 00:55:09,599
currently stands which is you get two to

1343
00:55:09,599 --> 00:55:12,780
the 64 services and you get to the 64.

1344
00:55:12,780 --> 00:55:14,579
load numbers I don't I don't want to

1345
00:55:14,579 --> 00:55:15,839
suddenly say oh and with this change

1346
00:55:15,839 --> 00:55:18,000
we've just have not you know what I mean

1347
00:55:18,000 --> 00:55:19,440
we've gone down to half the number of

1348
00:55:19,440 --> 00:55:21,720
bits you're allowed now that that that's

1349
00:55:21,720 --> 00:55:23,880
a that's a real change

1350
00:55:23,880 --> 00:55:26,520
and also in in my implementation I'm

1351
00:55:26,520 --> 00:55:30,240
using AVX 512 bit wide uh multiplexing

1352
00:55:30,240 --> 00:55:32,760
instructions so I can load all four of

1353
00:55:32,760 --> 00:55:34,740
these numbers into into single registers

1354
00:55:34,740 --> 00:55:36,720
and do high performance math on it and I

1355
00:55:36,720 --> 00:55:39,000
don't want to lose that ability so and

1356
00:55:39,000 --> 00:55:42,180
that's an example where you what works

1357
00:55:42,180 --> 00:55:43,859
for one implementation doesn't work so

1358
00:55:43,859 --> 00:55:46,200
much for the other and kind of we're

1359
00:55:46,200 --> 00:55:49,260
supposed to as well we're looking at

1360
00:55:49,260 --> 00:55:50,880
implementation so I'm I don't know

1361
00:55:50,880 --> 00:55:54,300
wouldn't the 64-bit combined

1362
00:55:54,300 --> 00:55:57,359
um uh Authority and node number

1363
00:55:57,359 --> 00:56:00,119
um and and aggregated work just fine in

1364
00:56:00,119 --> 00:56:02,839
your environment and and conversely

1365
00:56:02,839 --> 00:56:07,680
128 or 192 bits uh would work very very

1366
00:56:07,680 --> 00:56:09,900
badly in

1367
00:56:09,900 --> 00:56:12,180
um in environments that are much more

1368
00:56:12,180 --> 00:56:15,020
constrained such as a lot of space

1369
00:56:15,020 --> 00:56:16,980
conceivably but I think it's less

1370
00:56:16,980 --> 00:56:19,140
important than Breaking backwards

1371
00:56:19,140 --> 00:56:21,240
compatibility I think that's more

1372
00:56:21,240 --> 00:56:23,720
dangerous

1373
00:56:23,819 --> 00:56:25,140
and said

1374
00:56:25,140 --> 00:56:27,119
um no in fact who is it it's basically

1375
00:56:27,119 --> 00:56:29,460
packets have number allocations outside

1376
00:56:29,460 --> 00:56:31,559
of the 2 to 32 range in the Ayana

1377
00:56:31,559 --> 00:56:33,300
registry and we're basically turned

1378
00:56:33,300 --> 00:56:35,700
around to them and say I'm sorry your

1379
00:56:35,700 --> 00:56:39,000
registration just got removed I I I we

1380
00:56:39,000 --> 00:56:42,000
can do that I'm confident that they took

1381
00:56:42,000 --> 00:56:43,559
that registration because that was the

1382
00:56:43,559 --> 00:56:48,420
rules uh for our allocations and I'm

1383
00:56:48,420 --> 00:56:49,859
confident that they don't want

1384
00:56:49,859 --> 00:56:52,619
necessarily numbers that are bigger than

1385
00:56:52,619 --> 00:56:55,460
32 bits

1386
00:56:59,839 --> 00:57:02,220
that that are much smaller than that and

1387
00:57:02,220 --> 00:57:05,280
I think that that in practice uh numbers

1388
00:57:05,280 --> 00:57:08,160
that are bigger than 32 bits are in

1389
00:57:08,160 --> 00:57:10,200
general not being used all right let's

1390
00:57:10,200 --> 00:57:12,119
let's stop this one here we do have a

1391
00:57:12,119 --> 00:57:13,680
couple of other people in the queue sky

1392
00:57:13,680 --> 00:57:15,839
is that you repost this to the list uh

1393
00:57:15,839 --> 00:57:16,980
so that we can have any remaining

1394
00:57:16,980 --> 00:57:19,380
conversation and I ask that as we go

1395
00:57:19,380 --> 00:57:21,180
forward we we get a chance to clear this

1396
00:57:21,180 --> 00:57:23,220
queue quickly so that folks like Scott

1397
00:57:23,220 --> 00:57:26,480
will have time at the end of the meeting

1398
00:57:26,940 --> 00:57:29,400
uh Alberto go ahead

1399
00:57:29,400 --> 00:57:30,900
thanks Ed

1400
00:57:30,900 --> 00:57:33,180
um quickly just to give my opinion on

1401
00:57:33,180 --> 00:57:36,480
the uniqueness of the node number

1402
00:57:36,480 --> 00:57:39,059
um I agree with this card on the on the

1403
00:57:39,059 --> 00:57:40,740
first one which is I I think we

1404
00:57:40,740 --> 00:57:42,839
shouldn't prevent a node having more

1405
00:57:42,839 --> 00:57:46,500
than one node number or or any or a

1406
00:57:46,500 --> 00:57:49,440
processing unit having more than um one

1407
00:57:49,440 --> 00:57:52,859
node number and then on the second one

1408
00:57:52,859 --> 00:57:55,859
uh I'm not sure we should be putting

1409
00:57:55,859 --> 00:57:58,380
imposing that limitation when we think

1410
00:57:58,380 --> 00:58:00,599
about the potential distributed

1411
00:58:00,599 --> 00:58:03,059
implementations in ground

1412
00:58:03,059 --> 00:58:05,280
um to you know to have uh you know

1413
00:58:05,280 --> 00:58:07,740
something closer to Edge processing that

1414
00:58:07,740 --> 00:58:10,500
my that might require

1415
00:58:10,500 --> 00:58:11,520
um you know depending on the

1416
00:58:11,520 --> 00:58:14,640
implementation that might require to

1417
00:58:14,640 --> 00:58:15,960
um

1418
00:58:15,960 --> 00:58:19,319
um you know the option to um have you

1419
00:58:19,319 --> 00:58:20,760
know that the same node number in

1420
00:58:20,760 --> 00:58:23,940
different uh processing units uh this

1421
00:58:23,940 --> 00:58:26,099
may be at the same Processing Unit

1422
00:58:26,099 --> 00:58:27,660
um but you know I'm curious about

1423
00:58:27,660 --> 00:58:29,640
whether that limitation would impose or

1424
00:58:29,640 --> 00:58:32,579
limit any of these implementations

1425
00:58:32,579 --> 00:58:35,339
and I'll bear to my request uh same as

1426
00:58:35,339 --> 00:58:37,140
Scott is if you could make a post to the

1427
00:58:37,140 --> 00:58:39,240
mailing list specific to that topic and

1428
00:58:39,240 --> 00:58:41,940
we could capture uh that what is likely

1429
00:58:41,940 --> 00:58:43,500
to be very good discussion around that

1430
00:58:43,500 --> 00:58:45,180
there

1431
00:58:45,180 --> 00:58:48,000
thanks I will do thanks sir

1432
00:58:48,000 --> 00:58:50,839
uh Brian

1433
00:58:51,180 --> 00:58:54,720
uh Brian cpcpl uh just mention and I'll

1434
00:58:54,720 --> 00:58:57,420
put this on the list too that uh IPv6

1435
00:58:57,420 --> 00:58:59,700
made the same kind of clarifying

1436
00:58:59,700 --> 00:59:02,400
distinctions between the node and what

1437
00:59:02,400 --> 00:59:03,780
they call the interface

1438
00:59:03,780 --> 00:59:05,640
for address assignments and the same

1439
00:59:05,640 --> 00:59:07,020
kind of thing could be done here to just

1440
00:59:07,020 --> 00:59:08,700
clarify what actually has the number

1441
00:59:08,700 --> 00:59:11,339
assigned and what is The Logical

1442
00:59:11,339 --> 00:59:13,339
aggregation

1443
00:59:13,339 --> 00:59:15,480
thank you Brian that's a very valid

1444
00:59:15,480 --> 00:59:18,480
point from my perspective we should be

1445
00:59:18,480 --> 00:59:21,720
identifying nodes and not interfaces I'm

1446
00:59:21,720 --> 00:59:24,299
with I'm with John Day on this that it's

1447
00:59:24,299 --> 00:59:26,940
it was a mistake I mean I see why it

1448
00:59:26,940 --> 00:59:29,579
happened but I I don't think we should

1449
00:59:29,579 --> 00:59:31,559
do that with dtn

1450
00:59:31,559 --> 00:59:33,839
because we don't have host names we just

1451
00:59:33,839 --> 00:59:36,119
don't have them so let's get that right

1452
00:59:36,119 --> 00:59:37,380
okay

1453
00:59:37,380 --> 00:59:39,240
and Rick you were in the queue I was in

1454
00:59:39,240 --> 00:59:40,740
the queue but I've already made my

1455
00:59:40,740 --> 00:59:43,680
comments so I will yield to Bob

1456
00:59:43,680 --> 00:59:47,040
um you were playing Ayanna some very

1457
00:59:47,040 --> 00:59:50,040
specific work have you done asked for an

1458
00:59:50,040 --> 00:59:52,559
early Ayanna review on this art craft we

1459
00:59:52,559 --> 00:59:54,180
will be very soon it's only just been

1460
00:59:54,180 --> 00:59:56,160
working group adopted and yes we will

1461
00:59:56,160 --> 00:59:58,740
okay I've also gone through early

1462
00:59:58,740 --> 01:00:01,319
reviews and they are extremely important

1463
01:00:01,319 --> 01:00:03,119
and valuable uh completely understood

1464
01:00:03,119 --> 01:00:05,160
and noted thank you

1465
01:00:05,160 --> 01:00:07,500
Felix

1466
01:00:07,500 --> 01:00:11,520
so this is Felix so I would like to go

1467
01:00:11,520 --> 01:00:13,680
for something for the IPA nameless teams

1468
01:00:13,680 --> 01:00:16,500
that you simply say the note is

1469
01:00:16,500 --> 01:00:18,480
something which has a signal and just a

1470
01:00:18,480 --> 01:00:20,460
single node number I think it will make

1471
01:00:20,460 --> 01:00:23,400
everything much easier to understand

1472
01:00:23,400 --> 01:00:25,980
I don't want to have a node number which

1473
01:00:25,980 --> 01:00:28,319
is failed across multiple nodes because

1474
01:00:28,319 --> 01:00:30,839
if I would like to place my routing on

1475
01:00:30,839 --> 01:00:33,720
node numbers it will not work anymore at

1476
01:00:33,720 --> 01:00:36,480
the same time I don't see a reason why a

1477
01:00:36,480 --> 01:00:39,000
a single node should have multiple node

1478
01:00:39,000 --> 01:00:40,980
numbers if I need multiple node numbers

1479
01:00:40,980 --> 01:00:43,980
I can just make multiple nodes I think

1480
01:00:43,980 --> 01:00:45,900
also the argument from Scott does not

1481
01:00:45,900 --> 01:00:47,460
really hold here because these are

1482
01:00:47,460 --> 01:00:49,140
really separate naming schemes so

1483
01:00:49,140 --> 01:00:52,140
there's no danger of confusion for

1484
01:00:52,140 --> 01:00:54,299
example regarding the service numbers so

1485
01:00:54,299 --> 01:00:56,640
if I see it as a kind of R yes I'm not

1486
01:00:56,640 --> 01:00:59,359
sure if I'm talking about an endpoint ID

1487
01:00:59,359 --> 01:01:02,339
1.2 and 2.2 whether it's actually the

1488
01:01:02,339 --> 01:01:04,859
same service in the end although that's

1489
01:01:04,859 --> 01:01:07,500
really separated the same is for me are

1490
01:01:07,500 --> 01:01:08,880
similar things regarding the

1491
01:01:08,880 --> 01:01:11,579
administrative element it's an alias it

1492
01:01:11,579 --> 01:01:13,740
would be the same it's not the areas I

1493
01:01:13,740 --> 01:01:15,299
would have a notice to administrative

1494
01:01:15,299 --> 01:01:18,180
elements so I think unless we've

1495
01:01:18,180 --> 01:01:20,339
identify clear use case we would say

1496
01:01:20,339 --> 01:01:22,980
single node multiple node numbers we

1497
01:01:22,980 --> 01:01:25,140
should not try to go that way because it

1498
01:01:25,140 --> 01:01:27,660
will really create in my mind it would

1499
01:01:27,660 --> 01:01:30,299
create difficult problems and I guess

1500
01:01:30,299 --> 01:01:33,119
these questions whether this note this

1501
01:01:33,119 --> 01:01:36,119
service 1.2 and 2.2 would be the same

1502
01:01:36,119 --> 01:01:38,220
would probably the outset could be

1503
01:01:38,220 --> 01:01:39,960
different answers in the room so it's

1504
01:01:39,960 --> 01:01:42,480
just confusing for me so unless we have

1505
01:01:42,480 --> 01:01:43,980
a very very clear reason we should not

1506
01:01:43,980 --> 01:01:45,119
do that

1507
01:01:45,119 --> 01:01:47,220
so thank you for the comment and also

1508
01:01:47,220 --> 01:01:50,280
ask that uh you reply uh with that uh

1509
01:01:50,280 --> 01:01:52,079
because the the best part of capturing

1510
01:01:52,079 --> 01:01:53,940
this is the traffic in the mailing list

1511
01:01:53,940 --> 01:01:56,520
so my final response to Phoenix and that

1512
01:01:56,520 --> 01:01:57,599
was the thing I remembered that I

1513
01:01:57,599 --> 01:01:58,740
yielded on

1514
01:01:58,740 --> 01:02:00,900
I actually think one of the beauties of

1515
01:02:00,900 --> 01:02:03,420
ipn is its Simplicity I mean yes I

1516
01:02:03,420 --> 01:02:05,099
turned around earlier and said you know

1517
01:02:05,099 --> 01:02:07,079
no any cast know this no that it's it's

1518
01:02:07,079 --> 01:02:09,000
unicast it's simple it's got basic

1519
01:02:09,000 --> 01:02:11,579
numbering it's it should be really tight

1520
01:02:11,579 --> 01:02:12,720
and Light

1521
01:02:12,720 --> 01:02:14,940
and that should could be a very good

1522
01:02:14,940 --> 01:02:16,680
reason to say of course we can do

1523
01:02:16,680 --> 01:02:18,720
multiple node numbers onto a single node

1524
01:02:18,720 --> 01:02:21,000
but that is perhaps going against the

1525
01:02:21,000 --> 01:02:22,559
spirit of ipn and remember we've got

1526
01:02:22,559 --> 01:02:25,980
this dtn URI which is very rich and

1527
01:02:25,980 --> 01:02:28,079
completely unspecified and and can be

1528
01:02:28,079 --> 01:02:29,579
used as a Dumping Ground for all this

1529
01:02:29,579 --> 01:02:32,819
cool stuff so why not keep ipn quite

1530
01:02:32,819 --> 01:02:34,500
simple

1531
01:02:34,500 --> 01:02:37,740
that's my closing comment thanks guys

1532
01:02:37,740 --> 01:02:40,500
thank you Rick uh next we have uh Brian

1533
01:02:40,500 --> 01:02:42,900
sipos Brian I'm going to ask instead of

1534
01:02:42,900 --> 01:02:45,180
the 30 minutes that we have allocated if

1535
01:02:45,180 --> 01:02:48,380
we could uh pull this down into 20 or so

1536
01:02:48,380 --> 01:02:51,180
and why don't we start with bpv7

1537
01:02:51,180 --> 01:02:54,000
administrative uh record uh quick

1538
01:02:54,000 --> 01:02:55,920
conversation

1539
01:02:55,920 --> 01:03:00,180
sure yes so I didn't prepare slides for

1540
01:03:00,180 --> 01:03:02,099
the administrative record topic only

1541
01:03:02,099 --> 01:03:04,440
because the document itself was not

1542
01:03:04,440 --> 01:03:07,680
changed it was only recently adopted by

1543
01:03:07,680 --> 01:03:09,119
the working group

1544
01:03:09,119 --> 01:03:11,400
um there have not been any substantial

1545
01:03:11,400 --> 01:03:14,640
uh feedback or comments yet on the the

1546
01:03:14,640 --> 01:03:16,740
document there was one editorial change

1547
01:03:16,740 --> 01:03:19,020
to clarify that it didn't

1548
01:03:19,020 --> 01:03:20,400
um

1549
01:03:20,400 --> 01:03:22,559
uh it didn't change the Ayana

1550
01:03:22,559 --> 01:03:24,480
registration policy so it's just

1551
01:03:24,480 --> 01:03:27,000
clarifying that there is no change in

1552
01:03:27,000 --> 01:03:30,119
the policy uh so that document has now

1553
01:03:30,119 --> 01:03:33,119
been uh adopted by the working group and

1554
01:03:33,119 --> 01:03:36,240
uh a new version has been uploaded uh

1555
01:03:36,240 --> 01:03:39,240
for the working group so really at this

1556
01:03:39,240 --> 01:03:41,220
point it's just soliciting feedback and

1557
01:03:41,220 --> 01:03:42,359
comments

1558
01:03:42,359 --> 01:03:45,000
well may I may I then ask the working

1559
01:03:45,000 --> 01:03:48,119
group uh to please take a moment and and

1560
01:03:48,119 --> 01:03:51,119
read this uh this newly adopted draft it

1561
01:03:51,119 --> 01:03:53,940
is short uh and uh please provide

1562
01:03:53,940 --> 01:03:55,500
comments on it if we don't get comments

1563
01:03:55,500 --> 01:03:58,440
on it uh within the next uh you know few

1564
01:03:58,440 --> 01:04:00,240
months then we will assume it is ready

1565
01:04:00,240 --> 01:04:04,619
to go into the next step in this process

1566
01:04:04,619 --> 01:04:07,559
and I will mention also that the Acme

1567
01:04:07,559 --> 01:04:09,839
working group and the security area

1568
01:04:09,839 --> 01:04:11,760
director

1569
01:04:11,760 --> 01:04:14,040
um are depending on this document to

1570
01:04:14,040 --> 01:04:16,680
progress to the iesg

1571
01:04:16,680 --> 01:04:20,058
for the other work to continue

1572
01:04:20,400 --> 01:04:22,859
so with that we can then move on to uh

1573
01:04:22,859 --> 01:04:25,200
the next presentation which are the Cosi

1574
01:04:25,200 --> 01:04:28,879
BP SEC security contacts

1575
01:04:29,700 --> 01:04:31,079
and Brian are you able to share your

1576
01:04:31,079 --> 01:04:33,260
screen

1577
01:04:33,720 --> 01:04:36,680
I

1578
01:04:36,900 --> 01:04:40,220
should be able to

1579
01:04:43,500 --> 01:04:46,440
do is there a way to get the slides

1580
01:04:46,440 --> 01:04:48,960
up I don't know that I can

1581
01:04:48,960 --> 01:04:50,400
actually so there's a little hi Brian

1582
01:04:50,400 --> 01:04:51,780
there's a there's a little button under

1583
01:04:51,780 --> 01:04:53,339
your name in the top left hand corner a

1584
01:04:53,339 --> 01:04:55,319
meet echo which says it's got another

1585
01:04:55,319 --> 01:04:57,000
kind of file icon that will share

1586
01:04:57,000 --> 01:04:59,099
previous slides for you and then you'll

1587
01:04:59,099 --> 01:05:03,359
get the thing at the bottom perfect okay

1588
01:05:03,359 --> 01:05:07,200
so uh this is uh discussing a an

1589
01:05:07,200 --> 01:05:09,299
individual draft currently

1590
01:05:09,299 --> 01:05:11,819
um that I would like to eventually bring

1591
01:05:11,819 --> 01:05:13,740
into the working group

1592
01:05:13,740 --> 01:05:17,280
um I've prepared previous slides and

1593
01:05:17,280 --> 01:05:19,079
these ones are very similar so I'm just

1594
01:05:19,079 --> 01:05:21,119
going to go through quickly as

1595
01:05:21,119 --> 01:05:27,480
background the context here is that the

1596
01:05:27,480 --> 01:05:30,839
bundle protocol already has

1597
01:05:30,839 --> 01:05:32,280
what are called the default security

1598
01:05:32,280 --> 01:05:35,220
context that gives some basic symmetric

1599
01:05:35,220 --> 01:05:39,799
keyed algorithms and they do their work

1600
01:05:39,799 --> 01:05:42,299
well but they're limited to the

1601
01:05:42,299 --> 01:05:44,700
symmetric key that are limited to some

1602
01:05:44,700 --> 01:05:46,859
narrow situations

1603
01:05:46,859 --> 01:05:48,260
and

1604
01:05:48,260 --> 01:05:51,599
for larger networks for internet-facing

1605
01:05:51,599 --> 01:05:52,700
nodes

1606
01:05:52,700 --> 01:05:55,680
and even for

1607
01:05:55,680 --> 01:05:57,720
currently envisioned networks that are

1608
01:05:57,720 --> 01:06:02,059
coming out of the uh ioag and NASA

1609
01:06:02,059 --> 01:06:05,160
there is a need for pki security and

1610
01:06:05,160 --> 01:06:07,380
this is just something that also falls

1611
01:06:07,380 --> 01:06:08,760
in with

1612
01:06:08,760 --> 01:06:12,680
the general overall best practices of

1613
01:06:12,680 --> 01:06:16,140
current Internet and network

1614
01:06:16,140 --> 01:06:17,220
um

1615
01:06:17,220 --> 01:06:21,059
authentication and security and we don't

1616
01:06:21,059 --> 01:06:22,740
want to have to reinvent the wheel for

1617
01:06:22,740 --> 01:06:25,859
how to do either pki or to do the

1618
01:06:25,859 --> 01:06:28,680
algorithms that rely on pki and so what

1619
01:06:28,680 --> 01:06:32,099
this is proposing is to use the cosay uh

1620
01:06:32,099 --> 01:06:33,539
message encoding

1621
01:06:33,539 --> 01:06:37,559
and algorithms in bpsec

1622
01:06:37,559 --> 01:06:41,039
and actually since these earlier slides

1623
01:06:41,039 --> 01:06:43,380
Jose has actually Advanced to internet

1624
01:06:43,380 --> 01:06:45,720
standard it was draft standard

1625
01:06:45,720 --> 01:06:47,579
previously

1626
01:06:47,579 --> 01:06:50,460
so the high level goals here are we

1627
01:06:50,460 --> 01:06:52,020
don't want to alter any of the BP sex

1628
01:06:52,020 --> 01:06:54,420
structures we don't want to alter any of

1629
01:06:54,420 --> 01:06:57,119
the existing pki infrastructure that

1630
01:06:57,119 --> 01:06:59,819
already exists and we want to reuse as

1631
01:06:59,819 --> 01:07:01,619
much as possible

1632
01:07:01,619 --> 01:07:04,859
both the tools and the protocols

1633
01:07:04,859 --> 01:07:07,079
and the other thing is that looking into

1634
01:07:07,079 --> 01:07:10,740
the future we want to get gains that

1635
01:07:10,740 --> 01:07:13,200
others are making in the domain of kosai

1636
01:07:13,200 --> 01:07:15,720
so kose already has working uh groups

1637
01:07:15,720 --> 01:07:18,480
for using more experimental things like

1638
01:07:18,480 --> 01:07:23,339
uh compressed uh pkx certificates and uh

1639
01:07:23,339 --> 01:07:25,920
post Quantum and hybrid cryptography so

1640
01:07:25,920 --> 01:07:28,920
the goal here is to eventually be able

1641
01:07:28,920 --> 01:07:30,480
to take those benefits with very little

1642
01:07:30,480 --> 01:07:34,980
tooling change in the bundle protocol

1643
01:07:34,980 --> 01:07:38,280
now the they're I'm not going to go into

1644
01:07:38,280 --> 01:07:40,140
all the details about the the current

1645
01:07:40,140 --> 01:07:43,079
Jose context but the the concept is that

1646
01:07:43,079 --> 01:07:45,720
it's reusing existing logical structures

1647
01:07:45,720 --> 01:07:47,460
and we're using existing encoding

1648
01:07:47,460 --> 01:07:50,880
structures so it's very little new uh

1649
01:07:50,880 --> 01:07:53,579
for this context

1650
01:07:53,579 --> 01:07:54,780
and

1651
01:07:54,780 --> 01:07:58,140
the key thing about making this work is

1652
01:07:58,140 --> 01:07:59,940
that we have an interoperability profile

1653
01:07:59,940 --> 01:08:01,619
cos a is more of a container for

1654
01:08:01,619 --> 01:08:03,900
security information it requires a

1655
01:08:03,900 --> 01:08:05,880
profile to be able to say here's what

1656
01:08:05,880 --> 01:08:09,839
actually is expected and required of the

1657
01:08:09,839 --> 01:08:12,180
message content so this minimum

1658
01:08:12,180 --> 01:08:14,400
interoperability profile and this is

1659
01:08:14,400 --> 01:08:16,439
something that we can negotiate and work

1660
01:08:16,439 --> 01:08:18,839
out what in here is actually required

1661
01:08:18,839 --> 01:08:20,819
what in here shouldn't be required

1662
01:08:20,819 --> 01:08:24,198
whether here might need to be prohibited

1663
01:08:24,198 --> 01:08:28,439
this is really the meat of what this

1664
01:08:28,439 --> 01:08:32,640
document is combining together

1665
01:08:32,640 --> 01:08:34,679
and the focus currently is on pki

1666
01:08:34,679 --> 01:08:38,100
algorithms and here you can see that the

1667
01:08:38,100 --> 01:08:41,219
elliptic curve algorithms RSA is

1668
01:08:41,219 --> 01:08:43,380
represented but things like more

1669
01:08:43,380 --> 01:08:45,960
experimental hpke and post Quantum stuff

1670
01:08:45,960 --> 01:08:48,540
doesn't exist here but in the future it

1671
01:08:48,540 --> 01:08:51,259
could be expanded

1672
01:08:52,439 --> 01:08:54,779
the the main goal though still is

1673
01:08:54,779 --> 01:08:58,380
to get uh bpsec working with current

1674
01:08:58,380 --> 01:09:00,319
existing pki

1675
01:09:00,319 --> 01:09:02,819
tools and systems

1676
01:09:02,819 --> 01:09:06,660
so that's the the push here and as it's

1677
01:09:06,660 --> 01:09:09,060
written as it currently stands this is a

1678
01:09:09,060 --> 01:09:11,580
mechanism that is usable today you could

1679
01:09:11,580 --> 01:09:12,660
actually

1680
01:09:12,660 --> 01:09:14,640
um use this with pre-existing

1681
01:09:14,640 --> 01:09:16,198
pki

1682
01:09:16,198 --> 01:09:18,238
and the existing certificate profile

1683
01:09:18,238 --> 01:09:22,019
that was established in 9174.

1684
01:09:24,000 --> 01:09:26,580
and that is the end of my presentation

1685
01:09:26,580 --> 01:09:32,219
so uh both feedback is welcome on this

1686
01:09:32,219 --> 01:09:34,759
document as well as

1687
01:09:34,759 --> 01:09:38,399
if it seems valuable enough to have it

1688
01:09:38,399 --> 01:09:41,660
adapted to the working group

1689
01:09:43,799 --> 01:09:46,439
so so is that then a request uh to the

1690
01:09:46,439 --> 01:09:48,660
working group to consider adoption

1691
01:09:48,660 --> 01:09:50,640
uh yes

1692
01:09:50,640 --> 01:09:52,799
we have one person in the queue uh

1693
01:09:52,799 --> 01:09:55,040
Stephen

1694
01:10:01,860 --> 01:10:03,840
Hey Stephen Farrell so I think this came

1695
01:10:03,840 --> 01:10:05,820
up when the Acme document was being

1696
01:10:05,820 --> 01:10:08,640
processed I guess was the extension

1697
01:10:08,640 --> 01:10:10,140
attacked me to automate validation of a

1698
01:10:10,140 --> 01:10:12,300
node ID

1699
01:10:12,300 --> 01:10:12,920
um

1700
01:10:12,920 --> 01:10:15,360
you said that's the next step do you

1701
01:10:15,360 --> 01:10:17,219
mean that thinking about that is the

1702
01:10:17,219 --> 01:10:19,140
next step or you have an answer in the

1703
01:10:19,140 --> 01:10:20,460
document in the document already I

1704
01:10:20,460 --> 01:10:21,840
haven't had a document sorry

1705
01:10:21,840 --> 01:10:24,600
oh no the the relationship here is that

1706
01:10:24,600 --> 01:10:25,340
um

1707
01:10:25,340 --> 01:10:29,219
the the Acme extension that is already

1708
01:10:29,219 --> 01:10:32,040
uh in that working group that is

1709
01:10:32,040 --> 01:10:33,960
intended to address where did these

1710
01:10:33,960 --> 01:10:35,820
certificates come from how does an

1711
01:10:35,820 --> 01:10:38,820
authority validate these identities this

1712
01:10:38,820 --> 01:10:41,460
uh document is saying how do we use the

1713
01:10:41,460 --> 01:10:44,880
certificates uh in bpsec currently the

1714
01:10:44,880 --> 01:10:47,820
certificates are profiled for TLS for

1715
01:10:47,820 --> 01:10:50,400
being used with the tcpcl

1716
01:10:50,400 --> 01:10:53,460
but this is saying we can use them also

1717
01:10:53,460 --> 01:10:56,219
for BP SEC so that we can get end-to-end

1718
01:10:56,219 --> 01:10:58,380
security

1719
01:10:58,380 --> 01:11:02,360
whereas tcpcl is single hub

1720
01:11:02,580 --> 01:11:05,940
okay so I guess the comment is I don't

1721
01:11:05,940 --> 01:11:08,699
think it's fully figured out how you

1722
01:11:08,699 --> 01:11:10,440
might do the equivalent

1723
01:11:10,440 --> 01:11:12,600
as to what let's say let's encrypt do a

1724
01:11:12,600 --> 01:11:16,199
dns-based uh domain validation

1725
01:11:16,199 --> 01:11:17,880
so I don't know that there exists an

1726
01:11:17,880 --> 01:11:20,219
equivalent to that that's useful and I

1727
01:11:20,219 --> 01:11:21,719
think that that's probably warrants Okay

1728
01:11:21,719 --> 01:11:22,800
so

1729
01:11:22,800 --> 01:11:25,440
so that actually is the other the other

1730
01:11:25,440 --> 01:11:27,840
document the Acme document that's the

1731
01:11:27,840 --> 01:11:29,340
intent of that

1732
01:11:29,340 --> 01:11:31,560
right but as I recall so I did a quick

1733
01:11:31,560 --> 01:11:32,640
review of that because somebody asked me

1734
01:11:32,640 --> 01:11:33,659
and

1735
01:11:33,659 --> 01:11:35,699
if I recall that that document just said

1736
01:11:35,699 --> 01:11:37,620
oh there's a problem there uh that we

1737
01:11:37,620 --> 01:11:39,060
don't really know how to solve but maybe

1738
01:11:39,060 --> 01:11:40,620
I'm mischaracterizing it

1739
01:11:40,620 --> 01:11:42,420
no it's it's actually gone through

1740
01:11:42,420 --> 01:11:45,179
working group last call and it does

1741
01:11:45,179 --> 01:11:47,760
have a specific explicit method of of

1742
01:11:47,760 --> 01:11:50,400
doing node ID validation

1743
01:11:50,400 --> 01:11:52,860
okay in that case my claim is that when

1744
01:11:52,860 --> 01:11:54,480
I reviewed it I didn't think it was that

1745
01:11:54,480 --> 01:11:55,620
convincing

1746
01:11:55,620 --> 01:11:58,219
okay

1747
01:11:58,800 --> 01:12:01,679
Stephen I I think that's resident in

1748
01:12:01,679 --> 01:12:03,719
Acme that's an Acme document so I mean

1749
01:12:03,719 --> 01:12:05,040
we'd love to see it happen if you want

1750
01:12:05,040 --> 01:12:07,320
to go and poke Acme to to get progress

1751
01:12:07,320 --> 01:12:09,000
on it we'd love that but it's I think

1752
01:12:09,000 --> 01:12:11,940
it's an accurately document that part

1753
01:12:11,940 --> 01:12:14,640
and based on I I do know based on your

1754
01:12:14,640 --> 01:12:17,100
feedback in the Acme working group and

1755
01:12:17,100 --> 01:12:19,560
for the purposes of Acme it is an

1756
01:12:19,560 --> 01:12:21,719
experimental method and an experimental

1757
01:12:21,719 --> 01:12:22,920
document

1758
01:12:22,920 --> 01:12:24,780
right so my recollection of the

1759
01:12:24,780 --> 01:12:28,679
resolution in the Acme working group was

1760
01:12:28,679 --> 01:12:29,219
um

1761
01:12:29,219 --> 01:12:32,280
we kind of notices that you know

1762
01:12:32,280 --> 01:12:34,199
acknowledging the lack of existence of

1763
01:12:34,199 --> 01:12:35,699
something like the main validation was

1764
01:12:35,699 --> 01:12:37,080
where that actually document seemed to

1765
01:12:37,080 --> 01:12:38,400
land

1766
01:12:38,400 --> 01:12:40,380
and what I'm saying is

1767
01:12:40,380 --> 01:12:41,760
if you want to figure out something

1768
01:12:41,760 --> 01:12:43,260
better

1769
01:12:43,260 --> 01:12:44,640
that's probably something to do here

1770
01:12:44,640 --> 01:12:46,679
because it's only here that you really

1771
01:12:46,679 --> 01:12:48,600
know how do you know how could you

1772
01:12:48,600 --> 01:12:50,460
meaningfully have some clue that the

1773
01:12:50,460 --> 01:12:53,940
node ID corresponds to some keeper

1774
01:12:53,940 --> 01:12:55,679
thank you

1775
01:12:55,679 --> 01:12:58,800
Bob I have a bit of a point of

1776
01:12:58,800 --> 01:13:00,719
information here as you're moving and

1777
01:13:00,719 --> 01:13:02,340
looking at pki

1778
01:13:02,340 --> 01:13:05,600
the international civil aviation

1779
01:13:05,600 --> 01:13:09,239
organization ikao

1780
01:13:09,239 --> 01:13:12,420
um has plans and development on an

1781
01:13:12,420 --> 01:13:15,179
international scale pki

1782
01:13:15,179 --> 01:13:18,420
they have a CP policy and the rest of it

1783
01:13:18,420 --> 01:13:21,239
the whole model for including all member

1784
01:13:21,239 --> 01:13:25,260
states in this pki all 179 signatures to

1785
01:13:25,260 --> 01:13:28,080
the Iko treaty and many of the

1786
01:13:28,080 --> 01:13:30,480
organizations like NASA and so forth

1787
01:13:30,480 --> 01:13:32,820
will end up being part of this for their

1788
01:13:32,820 --> 01:13:35,460
Aviation components

1789
01:13:35,460 --> 01:13:40,199
so I recommend that you look at this

1790
01:13:40,199 --> 01:13:42,780
particular pki and how you can

1791
01:13:42,780 --> 01:13:45,420
potentially leverage it and the policies

1792
01:13:45,420 --> 01:13:48,659
and the C organizations which be rolling

1793
01:13:48,659 --> 01:13:50,940
this out over the next couple years to

1794
01:13:50,940 --> 01:13:52,679
be able to to leverage and take

1795
01:13:52,679 --> 01:13:54,840
advantage instead of doing yet your own

1796
01:13:54,840 --> 01:13:57,900
PK and all the tremendous headaches that

1797
01:13:57,900 --> 01:14:00,000
that entails because for those of us

1798
01:14:00,000 --> 01:14:04,560
who've lived pki it hurts it hurts a lot

1799
01:14:04,560 --> 01:14:06,840
absolutely and and that is one of the

1800
01:14:06,840 --> 01:14:08,820
points of using these existing

1801
01:14:08,820 --> 01:14:12,360
structures is to not have to reinvent

1802
01:14:12,360 --> 01:14:15,360
the pki this this leverages all of the

1803
01:14:15,360 --> 01:14:20,460
existing x509 pki infrastructure yeah

1804
01:14:20,460 --> 01:14:22,920
you you also mentioned that you had a

1805
01:14:22,920 --> 01:14:25,380
short set of slides on an additional

1806
01:14:25,380 --> 01:14:28,320
topic can we go through those yes in

1807
01:14:28,320 --> 01:14:30,120
five or six minutes

1808
01:14:30,120 --> 01:14:33,960
yes okay yep

1809
01:14:33,960 --> 01:14:39,199
do I need to switch or change deck okay

1810
01:14:39,960 --> 01:14:43,739
uh so this short topic is about CLA

1811
01:14:43,739 --> 01:14:45,500
services and

1812
01:14:45,500 --> 01:14:48,900
the short background is that um there

1813
01:14:48,900 --> 01:14:50,520
were some earlier discussion on the

1814
01:14:50,520 --> 01:14:54,719
mailing list that about can we Define a

1815
01:14:54,719 --> 01:14:57,239
generic sort of abstract definition of

1816
01:14:57,239 --> 01:15:00,840
what a CLA is supposed to do in its

1817
01:15:00,840 --> 01:15:02,100
communication with the bundle protocol

1818
01:15:02,100 --> 01:15:03,060
agent

1819
01:15:03,060 --> 01:15:04,320
and

1820
01:15:04,320 --> 01:15:07,140
currently the lack of a common logical

1821
01:15:07,140 --> 01:15:09,960
interface has risks in that

1822
01:15:09,960 --> 01:15:12,060
implementations are free to completely

1823
01:15:12,060 --> 01:15:15,239
choose how a BPA and a CLA interact with

1824
01:15:15,239 --> 01:15:16,280
each other

1825
01:15:16,280 --> 01:15:19,140
this means that it's inevitably going to

1826
01:15:19,140 --> 01:15:21,960
result in in different terminology in

1827
01:15:21,960 --> 01:15:23,280
the CLA implementations different

1828
01:15:23,280 --> 01:15:24,900
terminology and the BP implementations

1829
01:15:24,900 --> 01:15:27,679
different configuration between the two

1830
01:15:27,679 --> 01:15:31,860
and potentially a lack of

1831
01:15:31,860 --> 01:15:34,800
inter interoperability of people's

1832
01:15:34,800 --> 01:15:37,140
understanding and configuration of

1833
01:15:37,140 --> 01:15:39,239
things so this is not talking about on

1834
01:15:39,239 --> 01:15:40,800
the wire interoperability but this is

1835
01:15:40,800 --> 01:15:42,000
talking about

1836
01:15:42,000 --> 01:15:42,600
um

1837
01:15:42,600 --> 01:15:45,840
when I say I've acknowledged when I say

1838
01:15:45,840 --> 01:15:48,300
A BPA has acknowledged reception what

1839
01:15:48,300 --> 01:15:49,620
does that really mean

1840
01:15:49,620 --> 01:15:51,480
right now there isn't really a clear

1841
01:15:51,480 --> 01:15:53,159
definition of that

1842
01:15:53,159 --> 01:15:55,739
and what this also does is it makes it

1843
01:15:55,739 --> 01:15:58,739
more difficult for a a node

1844
01:15:58,739 --> 01:16:02,400
implementation to swap out a BPA from a

1845
01:16:02,400 --> 01:16:05,460
CLA from an administrative element right

1846
01:16:05,460 --> 01:16:06,840
now those those three layers are

1847
01:16:06,840 --> 01:16:09,960
distinct in RFC 9171 but in

1848
01:16:09,960 --> 01:16:12,900
implementations it's not so easy to swap

1849
01:16:12,900 --> 01:16:15,239
out somebody else has a really good CLA

1850
01:16:15,239 --> 01:16:17,640
and I want to use it with my BPA if

1851
01:16:17,640 --> 01:16:19,440
they're not following the same service

1852
01:16:19,440 --> 01:16:21,060
model they're not going to be able to

1853
01:16:21,060 --> 01:16:23,340
work together and it becomes really

1854
01:16:23,340 --> 01:16:24,840
difficult

1855
01:16:24,840 --> 01:16:27,420
so um

1856
01:16:27,420 --> 01:16:29,219
I'm going to skip over the goals but the

1857
01:16:29,219 --> 01:16:31,679
the basic thing is that it's it's a

1858
01:16:31,679 --> 01:16:34,739
logical definition it's not an API uh

1859
01:16:34,739 --> 01:16:36,780
it's not talking about uh changings to

1860
01:16:36,780 --> 01:16:38,640
clas it's not talking about making

1861
01:16:38,640 --> 01:16:40,260
changes to to any of the existing

1862
01:16:40,260 --> 01:16:42,060
definitions it's trying to

1863
01:16:42,060 --> 01:16:44,520
come up with a a

1864
01:16:44,520 --> 01:16:46,199
harmonized definition of what's

1865
01:16:46,199 --> 01:16:48,480
happening in the same way that

1866
01:16:48,480 --> 01:16:49,679
um

1867
01:16:49,679 --> 01:16:52,080
when we talk about Network traffic

1868
01:16:52,080 --> 01:16:54,420
versus something like a posix socket

1869
01:16:54,420 --> 01:16:55,800
interface

1870
01:16:55,800 --> 01:16:56,460
um

1871
01:16:56,460 --> 01:16:58,620
it gives people a basis of how to think

1872
01:16:58,620 --> 01:17:00,000
about things

1873
01:17:00,000 --> 01:17:02,400
and helps understanding and

1874
01:17:02,400 --> 01:17:05,100
interoperability so this is a summary of

1875
01:17:05,100 --> 01:17:07,380
the current service listing

1876
01:17:07,380 --> 01:17:08,580
um for

1877
01:17:08,580 --> 01:17:11,100
for uh in relation to the current uh

1878
01:17:11,100 --> 01:17:14,159
udpcl tcpcl ltp CL

1879
01:17:14,159 --> 01:17:17,219
and Vibe and and the goal is to get

1880
01:17:17,219 --> 01:17:19,980
feedback on all kinds of strange clas

1881
01:17:19,980 --> 01:17:22,080
that people have been and plan on using

1882
01:17:22,080 --> 01:17:25,580
and how it fits in with this model

1883
01:17:27,900 --> 01:17:29,880
go ahead Rick

1884
01:17:29,880 --> 01:17:33,360
Rick Rick chair hat off

1885
01:17:33,360 --> 01:17:35,460
um I think this is great Brian I think

1886
01:17:35,460 --> 01:17:39,659
this is missing uh I I would love to uh

1887
01:17:39,659 --> 01:17:41,100
give you a better review and I will go

1888
01:17:41,100 --> 01:17:43,080
look it out when I get a spare moment I

1889
01:17:43,080 --> 01:17:44,940
think it is really important work I

1890
01:17:44,940 --> 01:17:47,580
think it also has use not only for CLA

1891
01:17:47,580 --> 01:17:49,620
implementers and BPA implementers I also

1892
01:17:49,620 --> 01:17:51,239
think it helps guide the working group

1893
01:17:51,239 --> 01:17:53,100
into understanding what we're doing with

1894
01:17:53,100 --> 01:17:54,120
forwarding

1895
01:17:54,120 --> 01:17:55,980
because forwarding fundamentally is

1896
01:17:55,980 --> 01:17:59,400
selecting clas understanding what a CLA

1897
01:17:59,400 --> 01:18:01,560
can do clearly will help us clearly

1898
01:18:01,560 --> 01:18:02,880
understand

1899
01:18:02,880 --> 01:18:05,100
how we express forwarding and how we get

1900
01:18:05,100 --> 01:18:06,540
on top of naming and addressing because

1901
01:18:06,540 --> 01:18:08,460
there is still some confusion

1902
01:18:08,460 --> 01:18:11,580
amongst all of us and some of it goes

1903
01:18:11,580 --> 01:18:13,560
back to the confusion about what a CLA

1904
01:18:13,560 --> 01:18:16,560
does doesn't do and fundamentally is so

1905
01:18:16,560 --> 01:18:18,540
I totally support getting it written

1906
01:18:18,540 --> 01:18:19,500
down

1907
01:18:19,500 --> 01:18:21,719
so and the other interesting thing on

1908
01:18:21,719 --> 01:18:24,659
that same topic is that there have

1909
01:18:24,659 --> 01:18:26,760
already been in the appendix a

1910
01:18:26,760 --> 01:18:29,040
discrepancies identified with the TCP

1911
01:18:29,040 --> 01:18:31,080
and the ltpcls and these are

1912
01:18:31,080 --> 01:18:33,179
discrepancies that are not necessarily

1913
01:18:33,179 --> 01:18:34,860
things that are wrong or incorrect about

1914
01:18:34,860 --> 01:18:36,120
the spec the things that are just left

1915
01:18:36,120 --> 01:18:39,000
open-ended that implementers are free to

1916
01:18:39,000 --> 01:18:41,940
do what they will but if they choose

1917
01:18:41,940 --> 01:18:44,219
different options they are losing some

1918
01:18:44,219 --> 01:18:47,360
aspects of interoperability

1919
01:18:47,520 --> 01:18:50,580
so part of this is just saying beware be

1920
01:18:50,580 --> 01:18:54,179
careful or negotiate you know different

1921
01:18:54,179 --> 01:18:55,860
implementations need to negotiate on

1922
01:18:55,860 --> 01:18:58,699
certain points that are not specified

1923
01:18:58,699 --> 01:19:00,260
cool

1924
01:19:00,260 --> 01:19:02,219
thank you

1925
01:19:02,219 --> 01:19:05,100
hey Brian any anything else before we

1926
01:19:05,100 --> 01:19:07,440
move on to the next presentation

1927
01:19:07,440 --> 01:19:11,520
uh only that uh feedback and

1928
01:19:11,520 --> 01:19:13,679
contributions are welcome uh this is not

1929
01:19:13,679 --> 01:19:15,000
being requested as a working group

1930
01:19:15,000 --> 01:19:17,340
adoption at the point but getting some

1931
01:19:17,340 --> 01:19:20,460
feedback is helpful thanks and just to

1932
01:19:20,460 --> 01:19:23,340
Echo Rick this is tremendously uh would

1933
01:19:23,340 --> 01:19:26,040
be a tremendously nice thing to have uh

1934
01:19:26,040 --> 01:19:28,020
and a request that that you also started

1935
01:19:28,020 --> 01:19:30,480
thread on the mailing list uh to so to

1936
01:19:30,480 --> 01:19:32,840
solicit those comments

1937
01:19:32,840 --> 01:19:35,520
and by extension a request from me to

1938
01:19:35,520 --> 01:19:37,260
the working group to say please join in

1939
01:19:37,260 --> 01:19:39,120
that discussion let's let's kind of get

1940
01:19:39,120 --> 01:19:42,679
this done I think it's handy

1941
01:19:44,219 --> 01:19:47,040
all right uh the next presentation uh is

1942
01:19:47,040 --> 01:19:49,080
uh Sarah heiner who is going to be

1943
01:19:49,080 --> 01:19:52,320
giving updates on the dtn management

1944
01:19:52,320 --> 01:19:54,840
architecture not the dtn management

1945
01:19:54,840 --> 01:19:58,159
architecture architecture

1946
01:20:06,320 --> 01:20:09,960
all right I think that's better

1947
01:20:09,960 --> 01:20:12,320
okay

1948
01:20:14,840 --> 01:20:18,420
so um Sarah heiner presenting the dtn

1949
01:20:18,420 --> 01:20:20,219
management architecture

1950
01:20:20,219 --> 01:20:25,920
um not dtan m-a-a oh okay sorry

1951
01:20:25,920 --> 01:20:28,440
I'll do my best but please remind me um

1952
01:20:28,440 --> 01:20:30,600
if you aren't hearing me well

1953
01:20:30,600 --> 01:20:32,820
um so I'm going to be talking to some of

1954
01:20:32,820 --> 01:20:34,560
the highlights

1955
01:20:34,560 --> 01:20:36,719
um and changes that we've made to this

1956
01:20:36,719 --> 01:20:37,739
document

1957
01:20:37,739 --> 01:20:40,380
um but there's of course not enough time

1958
01:20:40,380 --> 01:20:42,360
to address everything so I would

1959
01:20:42,360 --> 01:20:44,340
definitely encourage you to check out

1960
01:20:44,340 --> 01:20:46,739
the most up-to-date version which I

1961
01:20:46,739 --> 01:20:49,080
think is version three which is posted

1962
01:20:49,080 --> 01:20:50,940
online but we'll talk through the

1963
01:20:50,940 --> 01:20:53,699
problem space and then get into some of

1964
01:20:53,699 --> 01:20:55,380
the highlights like the reference model

1965
01:20:55,380 --> 01:20:58,699
and autonomy model

1966
01:21:00,380 --> 01:21:03,300
so as a quick sort of Rapid Fire

1967
01:21:03,300 --> 01:21:06,000
introduction to the dtnma you might

1968
01:21:06,000 --> 01:21:09,120
recognize it as the AMA which was the

1969
01:21:09,120 --> 01:21:11,239
asynchronous management architecture

1970
01:21:11,239 --> 01:21:14,100
we've renamed because asynchronous

1971
01:21:14,100 --> 01:21:16,920
doesn't capture that problem space the

1972
01:21:16,920 --> 01:21:19,679
way that we'd hoped to it wasn't the the

1973
01:21:19,679 --> 01:21:22,739
right term to be describing this work so

1974
01:21:22,739 --> 01:21:24,960
for now at least as a a useful

1975
01:21:24,960 --> 01:21:27,840
placeholder we've switched asynchronous

1976
01:21:27,840 --> 01:21:31,020
out for dtn dtn based management

1977
01:21:31,020 --> 01:21:32,820
architecture

1978
01:21:32,820 --> 01:21:36,060
and the three main components of the

1979
01:21:36,060 --> 01:21:37,920
dtnma

1980
01:21:37,920 --> 01:21:40,739
um is the response to needing to support

1981
01:21:40,739 --> 01:21:44,219
asynchronous Behavior so acknowledging

1982
01:21:44,219 --> 01:21:47,219
that you're managed and managing device

1983
01:21:47,219 --> 01:21:50,580
are not always going to be in constant

1984
01:21:50,580 --> 01:21:52,620
communication

1985
01:21:52,620 --> 01:21:55,560
um we need an autonomy engine to enable

1986
01:21:55,560 --> 01:21:58,820
self-management of those managed devices

1987
01:21:58,820 --> 01:22:02,219
and we need compact encodings that are

1988
01:22:02,219 --> 01:22:05,040
provided by our naming structures to

1989
01:22:05,040 --> 01:22:07,199
address the fact that we're operating in

1990
01:22:07,199 --> 01:22:10,380
a constrained environment so really high

1991
01:22:10,380 --> 01:22:12,300
level overview but we'll dig into these

1992
01:22:12,300 --> 01:22:14,659
pieces

1993
01:22:15,480 --> 01:22:16,260
foreign

1994
01:22:16,260 --> 01:22:18,300
so the first change that we made to the

1995
01:22:18,300 --> 01:22:20,460
document was defining the problem space

1996
01:22:20,460 --> 01:22:23,280
a bit better so we started by

1997
01:22:23,280 --> 01:22:26,219
identifying a dtn as a constrained

1998
01:22:26,219 --> 01:22:28,679
Network which emphasizes why we are

1999
01:22:28,679 --> 01:22:31,800
interested in Compact encodings and then

2000
01:22:31,800 --> 01:22:34,199
we refined that definition further to

2001
01:22:34,199 --> 01:22:37,080
say that a dtn is also a challenged

2002
01:22:37,080 --> 01:22:39,480
Network so that addresses the

2003
01:22:39,480 --> 01:22:42,620
asynchronous nature of the communication

2004
01:22:42,620 --> 01:22:44,940
and the fact that we have to deal with

2005
01:22:44,940 --> 01:22:47,940
challenges like disruptions and delays

2006
01:22:47,940 --> 01:22:51,960
which makes us focus on autonomy as a

2007
01:22:51,960 --> 01:22:56,060
way of responding to some of that

2008
01:22:57,360 --> 01:22:59,480
thank you

2009
01:23:00,560 --> 01:23:03,060
it's apparently a wonderful point that I

2010
01:23:03,060 --> 01:23:05,360
just made

2011
01:23:05,400 --> 01:23:08,100
so after we Define that problem space a

2012
01:23:08,100 --> 01:23:10,320
bit better we took a look at the

2013
01:23:10,320 --> 01:23:12,719
existing Network management work

2014
01:23:12,719 --> 01:23:15,420
um to see what could inform the design

2015
01:23:15,420 --> 01:23:18,260
and the structure of the dtnma

2016
01:23:18,260 --> 01:23:21,840
and as a quick review of some of that

2017
01:23:21,840 --> 01:23:25,560
research we took a look first at SNMP

2018
01:23:25,560 --> 01:23:28,640
and netconf and said that that

2019
01:23:28,640 --> 01:23:31,920
well-structured approach was good but

2020
01:23:31,920 --> 01:23:34,679
the low latency sessions that we need to

2021
01:23:34,679 --> 01:23:37,080
support an approach like that are not

2022
01:23:37,080 --> 01:23:40,140
something that we can guarantee in a dtn

2023
01:23:40,140 --> 01:23:42,900
we move to looking at rest conf which is

2024
01:23:42,900 --> 01:23:45,239
stateless but it still requires the huge

2025
01:23:45,239 --> 01:23:48,659
use of https and in some cases large

2026
01:23:48,659 --> 01:23:51,000
data transfers which again we can't

2027
01:23:51,000 --> 01:23:52,260
guarantee

2028
01:23:52,260 --> 01:23:55,260
and then core comp which is running over

2029
01:23:55,260 --> 01:23:57,659
coapp that provides the concise

2030
01:23:57,659 --> 01:24:00,840
encodings that we were looking towards

2031
01:24:00,840 --> 01:24:03,300
um because they use seawor for encoding

2032
01:24:03,300 --> 01:24:06,600
but they still require

2033
01:24:06,600 --> 01:24:09,840
um transfer of data using the Yang

2034
01:24:09,840 --> 01:24:13,320
schema and don't provide the autonomy

2035
01:24:13,320 --> 01:24:14,760
model that we thought we were looking

2036
01:24:14,760 --> 01:24:16,560
for

2037
01:24:16,560 --> 01:24:19,699
next slide please

2038
01:24:19,739 --> 01:24:22,860
so I've tried to distill that research

2039
01:24:22,860 --> 01:24:25,140
into a

2040
01:24:25,140 --> 01:24:27,120
something to let you visualize this

2041
01:24:27,120 --> 01:24:29,460
problem space but I will definitely

2042
01:24:29,460 --> 01:24:31,980
issue the disclaimer that this is an

2043
01:24:31,980 --> 01:24:35,219
oversimplified view into this problem

2044
01:24:35,219 --> 01:24:38,820
space so bear with me in trying to

2045
01:24:38,820 --> 01:24:41,219
justify how you should look at this

2046
01:24:41,219 --> 01:24:42,900
diagram

2047
01:24:42,900 --> 01:24:43,699
um

2048
01:24:43,699 --> 01:24:48,000
we think that the DT anime fits into the

2049
01:24:48,000 --> 01:24:50,300
intersection of these three circles

2050
01:24:50,300 --> 01:24:53,400
these three priorities for this network

2051
01:24:53,400 --> 01:24:56,100
management approach and we acknowledge

2052
01:24:56,100 --> 01:24:58,679
that there is existing good work in all

2053
01:24:58,679 --> 01:25:00,659
of these circles but we haven't found

2054
01:25:00,659 --> 01:25:03,900
something that lies at that intersection

2055
01:25:03,900 --> 01:25:07,340
so the dtnma for example prioritizes

2056
01:25:07,340 --> 01:25:11,219
autonomy there's work done in the anima

2057
01:25:11,219 --> 01:25:14,580
group here but this is for distributed

2058
01:25:14,580 --> 01:25:17,219
calculation of network data for data

2059
01:25:17,219 --> 01:25:21,060
centers it's not experiencing the same

2060
01:25:21,060 --> 01:25:24,860
constraints that we might in a dtn

2061
01:25:24,860 --> 01:25:27,960
similarly there is support for

2062
01:25:27,960 --> 01:25:31,440
asynchronous Behavior by Russ conf but

2063
01:25:31,440 --> 01:25:35,120
again requires running over https

2064
01:25:35,120 --> 01:25:37,500
using core comp we're getting those

2065
01:25:37,500 --> 01:25:41,400
efficient encodings but there is no

2066
01:25:41,400 --> 01:25:43,560
autonomy model that's associated with

2067
01:25:43,560 --> 01:25:44,580
that work

2068
01:25:44,580 --> 01:25:47,159
um because that was not the focus so

2069
01:25:47,159 --> 01:25:49,679
work in all of these three distinct

2070
01:25:49,679 --> 01:25:52,980
areas but how do we find a solution that

2071
01:25:52,980 --> 01:25:56,580
gives us all three uh autonomy support

2072
01:25:56,580 --> 01:25:59,280
for asynchronous behavior and those

2073
01:25:59,280 --> 01:26:02,599
efficient encodings

2074
01:26:06,420 --> 01:26:09,120
so following through on some of the

2075
01:26:09,120 --> 01:26:11,159
feedback that we got from the working

2076
01:26:11,159 --> 01:26:13,260
group one of the changes that we wanted

2077
01:26:13,260 --> 01:26:16,080
to make was to update the dtnma

2078
01:26:16,080 --> 01:26:19,679
reference model so on your left you'll

2079
01:26:19,679 --> 01:26:22,620
see the old AMA model

2080
01:26:22,620 --> 01:26:24,420
um and the feedback was that this was

2081
01:26:24,420 --> 01:26:26,760
just too generic in describing the

2082
01:26:26,760 --> 01:26:29,820
autonomy that we needed so we've updated

2083
01:26:29,820 --> 01:26:33,659
the DT anime model to show the use of an

2084
01:26:33,659 --> 01:26:36,060
autonomy engine and how that's

2085
01:26:36,060 --> 01:26:39,420
configured with policy and I promise

2086
01:26:39,420 --> 01:26:40,440
that

2087
01:26:40,440 --> 01:26:41,040
um

2088
01:26:41,040 --> 01:26:43,920
this figure will get a lot larger as we

2089
01:26:43,920 --> 01:26:46,560
dig into the details there so don't hurt

2090
01:26:46,560 --> 01:26:47,940
your eyes trying to look too closely

2091
01:26:47,940 --> 01:26:50,419
just yet

2092
01:26:52,320 --> 01:26:54,840
so before it gets even bigger I promise

2093
01:26:54,840 --> 01:26:57,060
we will actually talk to the details

2094
01:26:57,060 --> 01:26:59,340
here I just want to highlight the three

2095
01:26:59,340 --> 01:27:02,219
what I feel our main points for the

2096
01:27:02,219 --> 01:27:04,520
reference model that enable device

2097
01:27:04,520 --> 01:27:07,199
self-management which is ultimately what

2098
01:27:07,199 --> 01:27:09,719
we're trying to support with the dtnma

2099
01:27:09,719 --> 01:27:13,500
so first we are making use of pre-shared

2100
01:27:13,500 --> 01:27:16,800
definitions while I can't guarantee that

2101
01:27:16,800 --> 01:27:19,679
the managing and manage device are

2102
01:27:19,679 --> 01:27:21,900
always going to have a connection we

2103
01:27:21,900 --> 01:27:24,060
need to take advantage of the times

2104
01:27:24,060 --> 01:27:26,639
where they can have those brief periods

2105
01:27:26,639 --> 01:27:30,179
of connectivity so in that moment

2106
01:27:30,179 --> 01:27:33,000
um there is data and models that are

2107
01:27:33,000 --> 01:27:36,780
going to be pre-shared and the managing

2108
01:27:36,780 --> 01:27:40,320
and managed device are agreeing on data

2109
01:27:40,320 --> 01:27:43,560
definitions so that they can continue to

2110
01:27:43,560 --> 01:27:47,639
work when they are not connected

2111
01:27:47,639 --> 01:27:51,420
the second major piece is the dtnmas

2112
01:27:51,420 --> 01:27:55,560
agent self-management so this is where

2113
01:27:55,560 --> 01:27:58,560
that autonomy piece comes in that

2114
01:27:58,560 --> 01:28:01,080
managed device is often going to be

2115
01:28:01,080 --> 01:28:04,380
disconnected and it needs a way to act

2116
01:28:04,380 --> 01:28:07,380
on the policy sent over from the

2117
01:28:07,380 --> 01:28:10,800
managing device to tell it to react to

2118
01:28:10,800 --> 01:28:12,900
different events and how it should be

2119
01:28:12,900 --> 01:28:15,420
handling those different events

2120
01:28:15,420 --> 01:28:17,460
and then the third piece here is

2121
01:28:17,460 --> 01:28:20,400
command-based management so a command

2122
01:28:20,400 --> 01:28:23,340
and control interface that is provided

2123
01:28:23,340 --> 01:28:26,100
for that managing device to get

2124
01:28:26,100 --> 01:28:29,460
information like policy over to the

2125
01:28:29,460 --> 01:28:32,540
managed device since we can't support

2126
01:28:32,540 --> 01:28:35,760
bulk updates or moving large data stores

2127
01:28:35,760 --> 01:28:38,480
back and forth or instead using that

2128
01:28:38,480 --> 01:28:41,900
command-based management

2129
01:28:43,679 --> 01:28:47,100
okay so details as promised so we'll

2130
01:28:47,100 --> 01:28:51,360
start at the bottom of this diagram

2131
01:28:51,360 --> 01:28:53,880
um we're operating in a challenged

2132
01:28:53,880 --> 01:28:56,400
environment so real-time data

2133
01:28:56,400 --> 01:28:59,520
negotiation is not always guaranteed

2134
01:28:59,520 --> 01:29:01,820
um so we need to pre-share information

2135
01:29:01,820 --> 01:29:06,239
between the managing and managed device

2136
01:29:06,239 --> 01:29:08,520
and this includes information that

2137
01:29:08,520 --> 01:29:10,940
supports our autonomy model

2138
01:29:10,940 --> 01:29:15,060
also adms or the application data models

2139
01:29:15,060 --> 01:29:16,460
which are

2140
01:29:16,460 --> 01:29:20,159
standardized data sets that both the

2141
01:29:20,159 --> 01:29:25,040
managing and managed device agree on

2142
01:29:28,920 --> 01:29:31,260
and then we'll talk first through the

2143
01:29:31,260 --> 01:29:33,480
managing device and then move over to

2144
01:29:33,480 --> 01:29:36,960
the manage device so at the top of the

2145
01:29:36,960 --> 01:29:39,840
managing device are the applications and

2146
01:29:39,840 --> 01:29:43,560
services which are the source for policy

2147
01:29:43,560 --> 01:29:47,580
which informs autonomy so these

2148
01:29:47,580 --> 01:29:50,219
applications and services are creating

2149
01:29:50,219 --> 01:29:53,159
policy statements and they're also the

2150
01:29:53,159 --> 01:29:55,560
target for reports which are coming back

2151
01:29:55,560 --> 01:29:58,860
from that manage device

2152
01:29:58,860 --> 01:30:01,320
um they are operating with or without an

2153
01:30:01,320 --> 01:30:03,659
operator in the loop and this is an

2154
01:30:03,659 --> 01:30:07,940
example of an open loop control

2155
01:30:10,980 --> 01:30:14,880
the dtnma manager which sits on the

2156
01:30:14,880 --> 01:30:17,580
managing device serves as the interface

2157
01:30:17,580 --> 01:30:20,120
between those applications and services

2158
01:30:20,120 --> 01:30:23,960
and the dtnma agent

2159
01:30:23,960 --> 01:30:27,060
the DT anime manager will take the

2160
01:30:27,060 --> 01:30:28,739
policy statements from those

2161
01:30:28,739 --> 01:30:31,800
applications and services and translate

2162
01:30:31,800 --> 01:30:34,679
them into something that the detail

2163
01:30:34,679 --> 01:30:38,760
anime agent can understand so in this

2164
01:30:38,760 --> 01:30:41,340
case those are rules

2165
01:30:41,340 --> 01:30:44,460
the DT anime manager is also responsible

2166
01:30:44,460 --> 01:30:47,940
for reporting that's receiving reported

2167
01:30:47,940 --> 01:30:50,820
data back from the manage device and

2168
01:30:50,820 --> 01:30:52,800
then Distributing to the applications

2169
01:30:52,800 --> 01:30:55,679
and services that need it

2170
01:30:55,679 --> 01:30:56,900
and then

2171
01:30:56,900 --> 01:31:00,300
administrative configuration so keeping

2172
01:31:00,300 --> 01:31:04,340
track of things like agent mappings

2173
01:31:04,620 --> 01:31:07,260
and then if we move over to the manage

2174
01:31:07,260 --> 01:31:09,960
device we also have applications and

2175
01:31:09,960 --> 01:31:13,139
services sitting here and these are

2176
01:31:13,139 --> 01:31:16,320
being monitored by the agent which also

2177
01:31:16,320 --> 01:31:20,280
sits at the manage device

2178
01:31:20,280 --> 01:31:23,100
um and the agent is using a control

2179
01:31:23,100 --> 01:31:25,980
interface into these applications and

2180
01:31:25,980 --> 01:31:29,699
services to collect State information

2181
01:31:29,699 --> 01:31:32,340
um to alter the configuration of these

2182
01:31:32,340 --> 01:31:34,920
applications and also impact their

2183
01:31:34,920 --> 01:31:36,480
behavior

2184
01:31:36,480 --> 01:31:40,139
and we have one question from Rick

2185
01:31:40,139 --> 01:31:43,980
uh thank you Rick chat off and hack off

2186
01:31:43,980 --> 01:31:45,540
um you've got applications and services

2187
01:31:45,540 --> 01:31:47,040
on the managed device and I think I

2188
01:31:47,040 --> 01:31:48,719
understand what those are but you've

2189
01:31:48,719 --> 01:31:50,760
also got applications and services on

2190
01:31:50,760 --> 01:31:53,340
the managing device is that are they the

2191
01:31:53,340 --> 01:31:54,659
same ones and there's some kind of

2192
01:31:54,659 --> 01:31:56,580
mapping or do you have managing

2193
01:31:56,580 --> 01:31:58,500
applications and services that are

2194
01:31:58,500 --> 01:32:00,540
talking to applications and services

2195
01:32:00,540 --> 01:32:02,820
that are being managed

2196
01:32:02,820 --> 01:32:05,219
I've just got confused because it's the

2197
01:32:05,219 --> 01:32:06,900
same text in both places is are you

2198
01:32:06,900 --> 01:32:09,060
doing did you are you doing uh digital

2199
01:32:09,060 --> 01:32:10,800
twins

2200
01:32:10,800 --> 01:32:12,600
or are they just two different groups of

2201
01:32:12,600 --> 01:32:14,520
apps and services two two separate

2202
01:32:14,520 --> 01:32:17,219
groups thank you

2203
01:32:17,219 --> 01:32:22,100
thank you Rick and uh another question

2204
01:32:25,620 --> 01:32:27,960
Postgraduate School is a really helpful

2205
01:32:27,960 --> 01:32:29,400
talk to kind of frame a lot of this the

2206
01:32:29,400 --> 01:32:30,900
interface with application and services

2207
01:32:30,900 --> 01:32:33,060
going down to these controls

2208
01:32:33,060 --> 01:32:34,679
could you speak at all to some of the

2209
01:32:34,679 --> 01:32:36,120
the transport

2210
01:32:36,120 --> 01:32:38,520
uh control of that is there a

2211
01:32:38,520 --> 01:32:40,620
verification of delivery that's ever

2212
01:32:40,620 --> 01:32:42,780
done because obviously on uh dtn's

2213
01:32:42,780 --> 01:32:44,880
packet loss things not actually arriving

2214
01:32:44,880 --> 01:32:47,219
at the destination is a huge concern

2215
01:32:47,219 --> 01:32:51,260
sure absolutely and um

2216
01:32:51,840 --> 01:32:54,480
can I talk to you

2217
01:32:54,480 --> 01:32:57,000
yeah absolutely

2218
01:32:57,000 --> 01:33:00,600
um so the asynchronous which maybe is

2219
01:33:00,600 --> 01:33:02,219
still not the right word to use but the

2220
01:33:02,219 --> 01:33:04,320
asynchronous management protocol is

2221
01:33:04,320 --> 01:33:07,320
something that we've proposed to be

2222
01:33:07,320 --> 01:33:08,880
sending these controls back and forth

2223
01:33:08,880 --> 01:33:13,199
from the managing and managed device

2224
01:33:13,199 --> 01:33:14,940
um but I think that something that's

2225
01:33:14,940 --> 01:33:18,000
valuable about this approach here is

2226
01:33:18,000 --> 01:33:20,940
that that underlying transport to send

2227
01:33:20,940 --> 01:33:22,920
those controls I think that that is

2228
01:33:22,920 --> 01:33:25,980
still flexible we're not tied to what

2229
01:33:25,980 --> 01:33:29,340
we've chosen at this point

2230
01:33:29,340 --> 01:33:32,120
but

2231
01:33:32,460 --> 01:33:35,699
oh they both but was that the question

2232
01:33:35,699 --> 01:33:38,580
you were asking I guess it's uh if we

2233
01:33:38,580 --> 01:33:40,760
think of um you know it's like TCP

2234
01:33:40,760 --> 01:33:43,320
addressing everything delivering that

2235
01:33:43,320 --> 01:33:46,620
has a historically hard time on these uh

2236
01:33:46,620 --> 01:33:48,719
networks where the cause of packet loss

2237
01:33:48,719 --> 01:33:50,699
was not congestion

2238
01:33:50,699 --> 01:33:52,440
um and just you know this being the

2239
01:33:52,440 --> 01:33:53,520
working group that might have better

2240
01:33:53,520 --> 01:33:55,620
ideas of optimization for addressing

2241
01:33:55,620 --> 01:33:58,440
that in a tolerant Network so can I can

2242
01:33:58,440 --> 01:34:00,000
I just talk about this Rick chair hat on

2243
01:34:00,000 --> 01:34:03,679
I think the answer to this is

2244
01:34:03,679 --> 01:34:06,420
held elsewhere because what we've done

2245
01:34:06,420 --> 01:34:08,460
is tried to separate the reference model

2246
01:34:08,460 --> 01:34:10,020
for architecture

2247
01:34:10,020 --> 01:34:12,900
from the protocol specifications and the

2248
01:34:12,900 --> 01:34:14,820
recommendations for each of the lines

2249
01:34:14,820 --> 01:34:17,580
which actually do the communication so

2250
01:34:17,580 --> 01:34:20,340
if the communication between the

2251
01:34:20,340 --> 01:34:22,080
managing and managed device that was

2252
01:34:22,080 --> 01:34:24,600
running over dtn then the architecture

2253
01:34:24,600 --> 01:34:26,520
oh well ignoring what it runs over the

2254
01:34:26,520 --> 01:34:28,920
architecture will say you will need some

2255
01:34:28,920 --> 01:34:30,900
reliability or if you don't have

2256
01:34:30,900 --> 01:34:32,940
sufficient reliability here are things

2257
01:34:32,940 --> 01:34:35,100
that must be considered Etc so it's it's

2258
01:34:35,100 --> 01:34:36,960
describing a framework and reference

2259
01:34:36,960 --> 01:34:37,820
model

2260
01:34:37,820 --> 01:34:40,800
and I know somewhere in the pipeline

2261
01:34:40,800 --> 01:34:42,659
whether it exists as a draft or just in

2262
01:34:42,659 --> 01:34:44,880
people's heads at the moment saying and

2263
01:34:44,880 --> 01:34:46,800
here would be an implementation on top

2264
01:34:46,800 --> 01:34:51,060
of dtn possibly using custody transfer

2265
01:34:51,060 --> 01:34:53,280
bundling bundle in order to add that

2266
01:34:53,280 --> 01:34:56,460
reliability constraint a reliability uh

2267
01:34:56,460 --> 01:34:58,139
requirements to meet the requirement

2268
01:34:58,139 --> 01:35:00,780
from this reference model so it's kind

2269
01:35:00,780 --> 01:35:03,000
of where we're splitting a very big

2270
01:35:03,000 --> 01:35:05,760
piece of work into the bits which need

2271
01:35:05,760 --> 01:35:08,520
to be specified and standardized and

2272
01:35:08,520 --> 01:35:10,679
stuff which implementers can go away and

2273
01:35:10,679 --> 01:35:12,780
find Cool Tech that they have to fit the

2274
01:35:12,780 --> 01:35:15,300
gaps if that makes sense

2275
01:35:15,300 --> 01:35:17,280
yeah absolutely and thank you that

2276
01:35:17,280 --> 01:35:19,380
framework helps okay and and I would

2277
01:35:19,380 --> 01:35:21,840
just uh add a comment to Rick's comment

2278
01:35:21,840 --> 01:35:24,060
which is from from an acknowledgment

2279
01:35:24,060 --> 01:35:26,159
perspective because certainly one of the

2280
01:35:26,159 --> 01:35:29,100
questions is when policy is generated on

2281
01:35:29,100 --> 01:35:31,980
a managing device and is then sent in

2282
01:35:31,980 --> 01:35:34,320
some way to a managed device what is the

2283
01:35:34,320 --> 01:35:36,840
acknowledgment associated with that uh

2284
01:35:36,840 --> 01:35:39,780
some of that is uh considered and held

2285
01:35:39,780 --> 01:35:42,600
at a transport layer did the did the uh

2286
01:35:42,600 --> 01:35:44,940
policy actually get there to be

2287
01:35:44,940 --> 01:35:48,659
unwrapped uh alternatively some of the

2288
01:35:48,659 --> 01:35:51,540
policy in an open loop management system

2289
01:35:51,540 --> 01:35:55,139
could be when your policy has been

2290
01:35:55,139 --> 01:35:58,080
received one of your policy actions is

2291
01:35:58,080 --> 01:36:01,560
to produce and publish data associated

2292
01:36:01,560 --> 01:36:04,320
with this new update to the system

2293
01:36:04,320 --> 01:36:06,600
uh and so there are sort of a couple of

2294
01:36:06,600 --> 01:36:08,580
different ways in which a managed a

2295
01:36:08,580 --> 01:36:10,380
managing device could get information

2296
01:36:10,380 --> 01:36:13,020
back that's something it had sent prior

2297
01:36:13,020 --> 01:36:14,880
had been received either because there's

2298
01:36:14,880 --> 01:36:16,920
a transport acknowledgment that it was

2299
01:36:16,920 --> 01:36:19,679
received or there's new Behavior such as

2300
01:36:19,679 --> 01:36:21,420
additional reporting that comes back

2301
01:36:21,420 --> 01:36:23,280
from the device and then you know

2302
01:36:23,280 --> 01:36:25,860
because it is doing this new Behavior it

2303
01:36:25,860 --> 01:36:28,199
must have received its new policy

2304
01:36:28,199 --> 01:36:30,600
so there are a couple of layers where

2305
01:36:30,600 --> 01:36:34,760
that kind of question could be addressed

2306
01:36:36,719 --> 01:36:39,120
thank you

2307
01:36:39,120 --> 01:36:40,260
okay great

2308
01:36:40,260 --> 01:36:42,540
um so then next slide moving to the

2309
01:36:42,540 --> 01:36:46,100
dtnma agent

2310
01:36:49,159 --> 01:36:52,860
so the DT anime agent is

2311
01:36:52,860 --> 01:36:55,520
um interfacing with a few pieces here so

2312
01:36:55,520 --> 01:36:59,219
monitoring the state of the applications

2313
01:36:59,219 --> 01:37:02,639
and services that it knows and doing

2314
01:37:02,639 --> 01:37:05,340
that without a regular connection to the

2315
01:37:05,340 --> 01:37:07,920
managing device

2316
01:37:07,920 --> 01:37:10,980
um it's doing that uh by maintaining the

2317
01:37:10,980 --> 01:37:14,580
rules that are in its autonomy engine so

2318
01:37:14,580 --> 01:37:18,540
these rules are instructing it to act

2319
01:37:18,540 --> 01:37:21,120
based off of the state data that it's

2320
01:37:21,120 --> 01:37:23,760
sampling from these applications and

2321
01:37:23,760 --> 01:37:25,260
services

2322
01:37:25,260 --> 01:37:28,080
it's also performing data Fusion so

2323
01:37:28,080 --> 01:37:31,080
creating new data values or putting

2324
01:37:31,080 --> 01:37:33,659
together reports based off of the common

2325
01:37:33,659 --> 01:37:36,360
understanding of data definitions from

2326
01:37:36,360 --> 01:37:39,000
those pre-shared definitions at the

2327
01:37:39,000 --> 01:37:41,639
bottom of the diagram and then again

2328
01:37:41,639 --> 01:37:43,380
performing some administrative

2329
01:37:43,380 --> 01:37:46,320
configuration so keeping track of the

2330
01:37:46,320 --> 01:37:49,560
mapping to the managing devices for

2331
01:37:49,560 --> 01:37:51,719
example

2332
01:37:51,719 --> 01:37:54,239
looks like

2333
01:37:54,239 --> 01:37:56,520
so I've been saying autonomy quite a bit

2334
01:37:56,520 --> 01:37:58,860
but now we get the chance to dig into

2335
01:37:58,860 --> 01:38:02,040
the autonomy model a bit better

2336
01:38:02,040 --> 01:38:05,100
um and the autonomy model is important

2337
01:38:05,100 --> 01:38:08,400
because the manager and the agent again

2338
01:38:08,400 --> 01:38:11,760
will not be in constant communication so

2339
01:38:11,760 --> 01:38:14,400
how does the agent know what steps to

2340
01:38:14,400 --> 01:38:17,159
take based off of the data that it's

2341
01:38:17,159 --> 01:38:18,179
sampling

2342
01:38:18,179 --> 01:38:21,239
so if we start at the top of this

2343
01:38:21,239 --> 01:38:24,120
diagram here the manager is sending

2344
01:38:24,120 --> 01:38:27,840
policy Expressions to populate a rule

2345
01:38:27,840 --> 01:38:30,960
database that's local to the agent so

2346
01:38:30,960 --> 01:38:34,260
these rules are if a stimulus event

2347
01:38:34,260 --> 01:38:38,699
occurs then respond with this action

2348
01:38:38,699 --> 01:38:43,260
and those rules are informing the agent

2349
01:38:43,260 --> 01:38:47,159
of how it needs to be reacting

2350
01:38:47,159 --> 01:38:51,420
and the next slide to talk to the bottom

2351
01:38:51,420 --> 01:38:55,620
so when the agent is acknowledging one

2352
01:38:55,620 --> 01:38:57,840
of those stimulus events and needs to

2353
01:38:57,840 --> 01:39:00,360
react there are several ways that it can

2354
01:39:00,360 --> 01:39:04,020
do that it might impact the local rule

2355
01:39:04,020 --> 01:39:06,540
database itself

2356
01:39:06,540 --> 01:39:10,080
um the autonomy engine may also issue an

2357
01:39:10,080 --> 01:39:12,719
application control so in some way

2358
01:39:12,719 --> 01:39:16,040
impacting the behavior or configuration

2359
01:39:16,040 --> 01:39:18,840
of the applications that are being

2360
01:39:18,840 --> 01:39:19,920
managed

2361
01:39:19,920 --> 01:39:23,460
there might be a generation of a report

2362
01:39:23,460 --> 01:39:27,120
to get data then back to the manager

2363
01:39:27,120 --> 01:39:29,460
which is in charge of then Distributing

2364
01:39:29,460 --> 01:39:31,440
that further

2365
01:39:31,440 --> 01:39:34,080
um and it might also update the runtime

2366
01:39:34,080 --> 01:39:35,340
data store

2367
01:39:35,340 --> 01:39:39,420
which is local to that dtnma agent but

2368
01:39:39,420 --> 01:39:42,719
is updated as well by the manager in

2369
01:39:42,719 --> 01:39:45,600
times of connectivity so populating

2370
01:39:45,600 --> 01:39:48,600
information beyond the standard agreed

2371
01:39:48,600 --> 01:39:51,960
upon data definitions that are a part of

2372
01:39:51,960 --> 01:39:53,880
the adms

2373
01:39:53,880 --> 01:39:55,080
yeah

2374
01:39:55,080 --> 01:39:58,260
I think that that's my last slide so if

2375
01:39:58,260 --> 01:40:00,920
there are questions

2376
01:40:01,340 --> 01:40:02,699
[Music]

2377
01:40:02,699 --> 01:40:04,679
I'm gonna jump the queue because I'm set

2378
01:40:04,679 --> 01:40:06,060
in the chair

2379
01:40:06,060 --> 01:40:06,659
um

2380
01:40:06,659 --> 01:40:09,300
thank you Sarah I think this is really

2381
01:40:09,300 --> 01:40:10,920
good work and I know there's many other

2382
01:40:10,920 --> 01:40:12,000
people involved behind the scenes

2383
01:40:12,000 --> 01:40:14,100
getting this document put together I

2384
01:40:14,100 --> 01:40:15,780
think this goes back to my earlier

2385
01:40:15,780 --> 01:40:17,460
comment about framework having a

2386
01:40:17,460 --> 01:40:18,960
framework where we can talk and address

2387
01:40:18,960 --> 01:40:21,139
about these things in generalities

2388
01:40:21,139 --> 01:40:24,480
without getting caught up in a binary

2389
01:40:24,480 --> 01:40:26,280
representations and wire protocols and

2390
01:40:26,280 --> 01:40:28,440
all that exciting stuff and actually

2391
01:40:28,440 --> 01:40:29,760
understanding what we're trying to

2392
01:40:29,760 --> 01:40:32,760
achieve and and that very

2393
01:40:32,760 --> 01:40:33,600
um

2394
01:40:33,600 --> 01:40:35,820
simple but effective and non-turing

2395
01:40:35,820 --> 01:40:37,679
complete rules-based system that's very

2396
01:40:37,679 --> 01:40:40,920
clever stuff and uh yeah uh can I

2397
01:40:40,920 --> 01:40:42,120
request to the working group please

2398
01:40:42,120 --> 01:40:43,739
review this stuff this stuff is clever

2399
01:40:43,739 --> 01:40:45,900
and and it needs a lot of eyes over it

2400
01:40:45,900 --> 01:40:49,800
and it's an enjoyable read so thank you

2401
01:40:49,800 --> 01:40:52,580
Alberto

2402
01:40:53,280 --> 01:40:56,219
and uh and and so again uh there are

2403
01:40:56,219 --> 01:40:57,840
others for

2404
01:40:57,840 --> 01:41:00,000
um you know creating analypt in this

2405
01:41:00,000 --> 01:41:02,340
document it is it is a great read

2406
01:41:02,340 --> 01:41:05,280
um Echo your comments you know I

2407
01:41:05,280 --> 01:41:06,840
encourage every

2408
01:41:06,840 --> 01:41:09,480
single Latin need to to read the

2409
01:41:09,480 --> 01:41:12,060
document it's um it's very informative

2410
01:41:12,060 --> 01:41:14,940
and you know put a clear path to

2411
01:41:14,940 --> 01:41:16,739
implementation I have a few questions

2412
01:41:16,739 --> 01:41:19,139
I'll be sending all of them to the

2413
01:41:19,139 --> 01:41:21,960
mailer list but uh I think some of these

2414
01:41:21,960 --> 01:41:23,880
are interesting to the audience the

2415
01:41:23,880 --> 01:41:27,179
first one is uh why are you referring

2416
01:41:27,179 --> 01:41:28,340
directly to

2417
01:41:28,340 --> 01:41:31,679
bpv7 only in the documentation instead

2418
01:41:31,679 --> 01:41:36,679
of you know bpv7 and bpv6

2419
01:41:37,760 --> 01:41:41,280
well so I I can jump in on that uh just

2420
01:41:41,280 --> 01:41:42,900
for a moment to say that we actually

2421
01:41:42,900 --> 01:41:46,139
have users of potential users of this

2422
01:41:46,139 --> 01:41:48,900
model that aren't using either bpv6 or

2423
01:41:48,900 --> 01:41:52,560
bpv7 or BP at all so I I don't know that

2424
01:41:52,560 --> 01:41:56,219
that we specify or require bpv7 but I

2425
01:41:56,219 --> 01:41:57,840
kind of jumped ahead Sarah if you had an

2426
01:41:57,840 --> 01:42:00,480
answer to that oh I it was hard for me

2427
01:42:00,480 --> 01:42:01,920
to hear the answer to the question so

2428
01:42:01,920 --> 01:42:03,480
honestly I was just going to ask for a

2429
01:42:03,480 --> 01:42:06,719
repeat sorry hey yeah okay yeah it's not

2430
01:42:06,719 --> 01:42:08,699
mandated but there are you know even in

2431
01:42:08,699 --> 01:42:11,219
the in the abstract it goes straight to

2432
01:42:11,219 --> 01:42:13,320
bpv7 and

2433
01:42:13,320 --> 01:42:15,119
you know every time bundled protocol is

2434
01:42:15,119 --> 01:42:16,739
mentioned it goes straight to VP since I

2435
01:42:16,739 --> 01:42:19,679
was curious to see if there was you know

2436
01:42:19,679 --> 01:42:23,300
um any specifics there

2437
01:42:23,520 --> 01:42:25,980
um the second the second one is more a

2438
01:42:25,980 --> 01:42:28,020
comment you know I went to the document

2439
01:42:28,020 --> 01:42:31,199
the you know the use cases are fantastic

2440
01:42:31,199 --> 01:42:33,239
um one thing and this is you know

2441
01:42:33,239 --> 01:42:35,159
analogous to the discussion we had

2442
01:42:35,159 --> 01:42:38,219
around BP sex security context uh

2443
01:42:38,219 --> 01:42:40,739
it's that it doesn't talk about

2444
01:42:40,739 --> 01:42:43,739
coexistence with a non-challenged

2445
01:42:43,739 --> 01:42:46,260
segment of the network

2446
01:42:46,260 --> 01:42:47,340
um basically you know when we think

2447
01:42:47,340 --> 01:42:49,139
about etn networks and the ground

2448
01:42:49,139 --> 01:42:52,139
components how you know how you envision

2449
01:42:52,139 --> 01:42:55,320
the architecture could you know coexist

2450
01:42:55,320 --> 01:42:59,100
with other management implementations or

2451
01:42:59,100 --> 01:43:03,000
how you know DT anime would run on you

2452
01:43:03,000 --> 01:43:05,639
know scenarios that are you know a

2453
01:43:05,639 --> 01:43:08,820
segments that are not that challenge

2454
01:43:08,820 --> 01:43:11,340
sure that's a great point that um you

2455
01:43:11,340 --> 01:43:13,739
know we want to develop an architecture

2456
01:43:13,739 --> 01:43:16,380
that is robust enough that we're

2457
01:43:16,380 --> 01:43:19,020
handling the the challenges

2458
01:43:19,020 --> 01:43:21,480
um like I've mentioned with a dtn but at

2459
01:43:21,480 --> 01:43:24,360
the same time we don't want to be so

2460
01:43:24,360 --> 01:43:26,580
focused on addressing challenges that we

2461
01:43:26,580 --> 01:43:29,460
can't take advantage of the underlying

2462
01:43:29,460 --> 01:43:32,639
strengths of different network segments

2463
01:43:32,639 --> 01:43:35,360
um definitely an important point

2464
01:43:35,360 --> 01:43:38,100
awesome and and the last thing and this

2465
01:43:38,100 --> 01:43:39,840
is very responsiving there is a I'm

2466
01:43:39,840 --> 01:43:42,719
sorry go ahead but both Rick and I had

2467
01:43:42,719 --> 01:43:44,520
also a quick follow-up comment to that

2468
01:43:44,520 --> 01:43:47,880
one is uh several ietfs ago we had

2469
01:43:47,880 --> 01:43:49,800
someone present whose Master's thesis

2470
01:43:49,800 --> 01:43:54,239
was a netconf to amp Bridge uh to serve

2471
01:43:54,239 --> 01:43:56,460
uh that kind of boundary and and if you

2472
01:43:56,460 --> 01:43:58,860
can find that in the meeting minutes uh

2473
01:43:58,860 --> 01:44:01,139
you know for a past ITF uh please look

2474
01:44:01,139 --> 01:44:03,119
for it if not uh send me an email and I

2475
01:44:03,119 --> 01:44:05,839
can find it for you

2476
01:44:06,560 --> 01:44:09,659
my quick response was I'm not having had

2477
01:44:09,659 --> 01:44:11,159
to clarifying question my question

2478
01:44:11,159 --> 01:44:12,900
clarified earlier on the applications

2479
01:44:12,900 --> 01:44:15,600
and services on the managing devices one

2480
01:44:15,600 --> 01:44:17,520
of those or more of those could be

2481
01:44:17,520 --> 01:44:19,260
interoperable Bridges with existing

2482
01:44:19,260 --> 01:44:20,880
Management systems and that's how it

2483
01:44:20,880 --> 01:44:22,440
plugs into the model

2484
01:44:22,440 --> 01:44:25,080
so so you could you could view those as

2485
01:44:25,080 --> 01:44:28,820
Upstream management devices

2486
01:44:28,920 --> 01:44:31,980
okay awesome and and necessarily is one

2487
01:44:31,980 --> 01:44:34,320
thing that posted me a little bit on the

2488
01:44:34,320 --> 01:44:36,000
intermittent

2489
01:44:36,000 --> 01:44:37,619
um use case

2490
01:44:37,619 --> 01:44:41,820
and there is a sentence that says that

2491
01:44:41,820 --> 01:44:44,100
the you know in case of disconnections

2492
01:44:44,100 --> 01:44:48,540
the agent you know may store uh those uh

2493
01:44:48,540 --> 01:44:52,380
reports or may rely on the underlying

2494
01:44:52,380 --> 01:44:54,600
transport protocols some of it you know

2495
01:44:54,600 --> 01:44:56,820
I was a bit possible because I think the

2496
01:44:56,820 --> 01:44:59,520
whole idea was to rely on you know

2497
01:44:59,520 --> 01:45:02,460
bundled protocol type of networks but

2498
01:45:02,460 --> 01:45:04,080
then if we're imposing storage

2499
01:45:04,080 --> 01:45:05,820
constraints or

2500
01:45:05,820 --> 01:45:07,980
um not constraints but if we're inclined

2501
01:45:07,980 --> 01:45:10,320
that you may need to store messages I'm

2502
01:45:10,320 --> 01:45:12,780
not sure how this would uh you know

2503
01:45:12,780 --> 01:45:16,159
would help the whole architecture

2504
01:45:16,560 --> 01:45:19,460
sure

2505
01:45:19,820 --> 01:45:24,259
so if I could just jump in for a moment

2506
01:45:27,239 --> 01:45:32,340
I so so the concern is a Reliance on a

2507
01:45:32,340 --> 01:45:34,320
store and forward Network

2508
01:45:34,320 --> 01:45:36,480
um while we're also making the claim

2509
01:45:36,480 --> 01:45:39,179
that we are not dependent on running on

2510
01:45:39,179 --> 01:45:41,580
bpv7

2511
01:45:41,580 --> 01:45:44,159
is that your what is

2512
01:45:44,159 --> 01:45:46,199
you know it says that the agent May

2513
01:45:46,199 --> 01:45:49,440
store uh the message or their reports

2514
01:45:49,440 --> 01:45:52,199
until you know the link is available or

2515
01:45:52,199 --> 01:45:53,940
you know it could rely on the transport

2516
01:45:53,940 --> 01:45:56,100
protocol so I think that uh you know

2517
01:45:56,100 --> 01:45:57,900
that that post I mean a little bit

2518
01:45:57,900 --> 01:46:00,960
because the whole yeah at least that the

2519
01:46:00,960 --> 01:46:02,159
rest of the document

2520
01:46:02,159 --> 01:46:05,100
tends to imply that you know things like

2521
01:46:05,100 --> 01:46:08,719
a store and forward are you know

2522
01:46:13,440 --> 01:46:16,020
all right uh noted my only comment was

2523
01:46:16,020 --> 01:46:17,940
to say as well that there are some

2524
01:46:17,940 --> 01:46:21,179
instances of uh perhaps use of this

2525
01:46:21,179 --> 01:46:23,280
architecture uh in places that are not

2526
01:46:23,280 --> 01:46:26,400
running over bundle uh six or seven

2527
01:46:26,400 --> 01:46:28,440
but but certainly a bundle is there it

2528
01:46:28,440 --> 01:46:31,219
provides the service

2529
01:46:31,440 --> 01:46:33,900
okay thank you

2530
01:46:33,900 --> 01:46:36,540
uh thank you for the close read of the

2531
01:46:36,540 --> 01:46:40,159
the use cases and otherwise

2532
01:46:41,880 --> 01:46:44,040
so so thank you so much for the

2533
01:46:44,040 --> 01:46:45,840
presentation uh excellent presentation

2534
01:46:45,840 --> 01:46:48,179
my my request for the working group is

2535
01:46:48,179 --> 01:46:52,080
this document is a reef uh a an update

2536
01:46:52,080 --> 01:46:56,040
to the original AMA document and uh we

2537
01:46:56,040 --> 01:46:58,800
would like uh to finish it and so if you

2538
01:46:58,800 --> 01:47:00,360
have not had a chance to read it uh

2539
01:47:00,360 --> 01:47:02,880
please do please provide comments uh

2540
01:47:02,880 --> 01:47:05,159
back to uh the working group mailing

2541
01:47:05,159 --> 01:47:07,280
list

2542
01:47:07,800 --> 01:47:12,060
all right and next we have Scott Johnson

2543
01:47:12,060 --> 01:47:15,179
who wants to provide a a demo of IPv6

2544
01:47:15,179 --> 01:47:18,600
support for dtn Scott uh would you like

2545
01:47:18,600 --> 01:47:21,119
to uh have us present anything or would

2546
01:47:21,119 --> 01:47:23,760
you like to share your screen

2547
01:47:23,760 --> 01:47:25,380
um I think I'm going to go ahead and

2548
01:47:25,380 --> 01:47:27,420
share my screen if that's okay

2549
01:47:27,420 --> 01:47:28,560
sure

2550
01:47:28,560 --> 01:47:30,300
okay

2551
01:47:30,300 --> 01:47:35,239
um so I'm gonna go ahead and do that

2552
01:47:47,400 --> 01:47:49,100
foreign

2553
01:47:49,100 --> 01:47:53,580
Loop okay and so um hi everyone I'm

2554
01:47:53,580 --> 01:47:55,380
Scott Johnson and I'm presenting live

2555
01:47:55,380 --> 01:47:57,659
from inside uh hurricane Nicole as you

2556
01:47:57,659 --> 01:47:59,340
can see here

2557
01:47:59,340 --> 01:48:01,500
um I could tell you about myself at this

2558
01:48:01,500 --> 01:48:03,360
point but I I would rather talk about

2559
01:48:03,360 --> 01:48:05,699
ideas so I'm going to do this the

2560
01:48:05,699 --> 01:48:07,679
Hawaiian way and talk story a little bit

2561
01:48:07,679 --> 01:48:11,520
in lieu of uh autobiographical content

2562
01:48:11,520 --> 01:48:13,500
um the title of my talk today is

2563
01:48:13,500 --> 01:48:15,000
extending the reach of the delay

2564
01:48:15,000 --> 01:48:17,400
tolerant networking into IPv6 networks

2565
01:48:17,400 --> 01:48:20,699
or the ultimate Nat avoidance

2566
01:48:20,699 --> 01:48:23,159
as some here can attest from bearing

2567
01:48:23,159 --> 01:48:24,840
direct witness or their own personal

2568
01:48:24,840 --> 01:48:26,820
participation the internet was

2569
01:48:26,820 --> 01:48:28,560
conceptualized and designed to provide

2570
01:48:28,560 --> 01:48:30,719
end-to-end connectivity between any two

2571
01:48:30,719 --> 01:48:33,659
publicly numbered hosts between then and

2572
01:48:33,659 --> 01:48:36,239
now things have changed address scarcity

2573
01:48:36,239 --> 01:48:38,880
uh due to use and monetization has led

2574
01:48:38,880 --> 01:48:41,820
to the rise of that Scourge Nat in ipv4

2575
01:48:41,820 --> 01:48:44,219
Networks a spot check pins the going

2576
01:48:44,219 --> 01:48:46,739
market rate for IP address transfers at

2577
01:48:46,739 --> 01:48:49,020
approximately fifty dollars per ipv4

2578
01:48:49,020 --> 01:48:52,320
address between isps consequently retail

2579
01:48:52,320 --> 01:48:55,199
costs of the consumers has risen a

2580
01:48:55,199 --> 01:48:57,179
premium on static addresses to the

2581
01:48:57,179 --> 01:48:59,100
consumer further encourages the use of

2582
01:48:59,100 --> 01:49:01,260
that foul Kluge Nat and further breaks

2583
01:49:01,260 --> 01:49:04,500
the end-to-end design principle but hold

2584
01:49:04,500 --> 01:49:06,659
there is a way to restore this core

2585
01:49:06,659 --> 01:49:08,460
concept into the evolving growing

2586
01:49:08,460 --> 01:49:11,460
Network it is IPv6 and uh it holds the

2587
01:49:11,460 --> 01:49:13,080
promise of addresses of Plenty for all

2588
01:49:13,080 --> 01:49:15,840
just as it has for a couple of decades

2589
01:49:15,840 --> 01:49:18,360
now since we stood up the three ffe uh

2590
01:49:18,360 --> 01:49:20,100
six bone networks and put the protocol

2591
01:49:20,100 --> 01:49:21,900
through its paces

2592
01:49:21,900 --> 01:49:24,659
these days uh over 80 percent of mobile

2593
01:49:24,659 --> 01:49:26,760
networks are numbered uniquely only with

2594
01:49:26,760 --> 01:49:28,920
ibv6 according to your recent internet

2595
01:49:28,920 --> 01:49:31,560
Society study these Edge clients have a

2596
01:49:31,560 --> 01:49:33,420
particularly nasty strain of nat called

2597
01:49:33,420 --> 01:49:36,000
DS Lite used when connecting to ipv4

2598
01:49:36,000 --> 01:49:39,000
only hosts which makes an ipv4 and IPv6

2599
01:49:39,000 --> 01:49:40,739
tunnel two forward and added packets to

2600
01:49:40,739 --> 01:49:43,380
the client via dynamically allocated RFC

2601
01:49:43,380 --> 01:49:45,420
1918 address space

2602
01:49:45,420 --> 01:49:47,460
so in short we have

2603
01:49:47,460 --> 01:49:51,179
um IPv6 native mobile networks uh check

2604
01:49:51,179 --> 01:49:52,860
off of our list

2605
01:49:52,860 --> 01:49:55,980
the largest uh reaching eyes isps in the

2606
01:49:55,980 --> 01:49:58,320
Aaron region are now widely deploying

2607
01:49:58,320 --> 01:50:00,119
native IPv6 service to the client

2608
01:50:00,119 --> 01:50:04,500
devices via slack or dhcpv6 uh at the C8

2609
01:50:04,500 --> 01:50:05,940
at the CPE

2610
01:50:05,940 --> 01:50:07,560
from speaking with colleagues in other

2611
01:50:07,560 --> 01:50:10,080
rir regions similar or better deployment

2612
01:50:10,080 --> 01:50:12,300
is generally the case this tends to

2613
01:50:12,300 --> 01:50:13,860
restore the property of end-to-end

2614
01:50:13,860 --> 01:50:15,600
connectivity network-wide eliminating

2615
01:50:15,600 --> 01:50:17,280
the need for Nat and Nat traversal

2616
01:50:17,280 --> 01:50:18,659
techniques when trying to use the

2617
01:50:18,659 --> 01:50:20,639
internet as designed allowing

2618
01:50:20,639 --> 01:50:22,860
universally accessible services to be

2619
01:50:22,860 --> 01:50:25,679
offered if desired by client devices on

2620
01:50:25,679 --> 01:50:27,000
the edge of the network

2621
01:50:27,000 --> 01:50:29,760
adding to the tally IPv6 native fixed

2622
01:50:29,760 --> 01:50:32,580
access networks check

2623
01:50:32,580 --> 01:50:35,760
by adding IPv6 functions to Applications

2624
01:50:35,760 --> 01:50:37,980
previously only capable of ipv4

2625
01:50:37,980 --> 01:50:39,780
operation the reach of those

2626
01:50:39,780 --> 01:50:42,000
applications increases significantly all

2627
01:50:42,000 --> 01:50:43,260
the way to the modern terrestrial

2628
01:50:43,260 --> 01:50:44,460
Network Edge

2629
01:50:44,460 --> 01:50:46,619
this presents distinct opportunity for

2630
01:50:46,619 --> 01:50:50,219
the dtn community IPv6 enablement of bpv

2631
01:50:50,219 --> 01:50:53,460
BP based applications allows scalable

2632
01:50:53,460 --> 01:50:55,500
protocol stress testing and new

2633
01:50:55,500 --> 01:50:57,719
application development due to increased

2634
01:50:57,719 --> 01:50:59,580
use case scope for delayed tolerant

2635
01:50:59,580 --> 01:51:00,719
networking

2636
01:51:00,719 --> 01:51:03,179
in this light I have endeavored to add

2637
01:51:03,179 --> 01:51:06,600
uh ipv V6 support to the open source

2638
01:51:06,600 --> 01:51:08,880
branch of jpl's implementation of bundle

2639
01:51:08,880 --> 01:51:10,800
protocol and the associated software

2640
01:51:10,800 --> 01:51:12,480
suite ion

2641
01:51:12,480 --> 01:51:15,480
thus far the IPv6 enabled

2642
01:51:15,480 --> 01:51:20,219
UDP LD ltp over UDP and TCP convergence

2643
01:51:20,219 --> 01:51:22,320
layer adapters have been completed as

2644
01:51:22,320 --> 01:51:24,119
well as the new core Library functions

2645
01:51:24,119 --> 01:51:25,340
which they call

2646
01:51:25,340 --> 01:51:27,600
these convergence layer adapters have

2647
01:51:27,600 --> 01:51:28,980
been tested in both private land

2648
01:51:28,980 --> 01:51:30,960
environments and in Coast to Coast tests

2649
01:51:30,960 --> 01:51:33,960
on publicly numbered Networks

2650
01:51:33,960 --> 01:51:36,540
um as I demonstrate these three modes of

2651
01:51:36,540 --> 01:51:39,239
IPv6 operation running on a single node

2652
01:51:39,239 --> 01:51:41,400
concurrently for you I would ask that

2653
01:51:41,400 --> 01:51:43,139
you all consider uh which other

2654
01:51:43,139 --> 01:51:45,659
protocols that are implemented in ipv4

2655
01:51:45,659 --> 01:51:48,480
capable convergence layer adapters are

2656
01:51:48,480 --> 01:51:52,260
most desirable to be ported uh to IPv6

2657
01:51:52,260 --> 01:51:54,780
operation next

2658
01:51:54,780 --> 01:51:57,540
and so what you're seeing here is uh

2659
01:51:57,540 --> 01:51:59,820
five different nodes

2660
01:51:59,820 --> 01:52:00,480
um

2661
01:52:00,480 --> 01:52:04,320
on the top left the larger terminal is

2662
01:52:04,320 --> 01:52:05,699
um the primary node that I'm going to be

2663
01:52:05,699 --> 01:52:07,739
running the demonstration from the

2664
01:52:07,739 --> 01:52:09,500
remainder of the nodes will be receiving

2665
01:52:09,500 --> 01:52:13,739
uh bpings and responding uh knock on

2666
01:52:13,739 --> 01:52:15,960
wood because it's a live demonstration

2667
01:52:15,960 --> 01:52:18,540
I've written a small script here to

2668
01:52:18,540 --> 01:52:20,040
perform various functions to keep me

2669
01:52:20,040 --> 01:52:22,940
from having to type things

2670
01:52:27,300 --> 01:52:29,040
so here's a list of running a

2671
01:52:29,040 --> 01:52:31,260
convergence layer adapter protocols on

2672
01:52:31,260 --> 01:52:33,840
this node you can see we're using ltp

2673
01:52:33,840 --> 01:52:37,020
UDP and TCP and this is uh the command

2674
01:52:37,020 --> 01:52:41,880
BP admin L protocol uh showing this now

2675
01:52:41,880 --> 01:52:43,440
we need to press only the any key to

2676
01:52:43,440 --> 01:52:44,880
continue

2677
01:52:44,880 --> 01:52:46,980
uh here we're listing all bundle

2678
01:52:46,980 --> 01:52:49,440
protocol index on the Node you can see

2679
01:52:49,440 --> 01:52:51,960
we have an ltp node that is numbered

2680
01:52:51,960 --> 01:52:54,840
with basically packets allocation and

2681
01:52:54,840 --> 01:52:58,679
then we have a UTC UDP and TCP

2682
01:52:58,679 --> 01:53:01,679
um convergence layer adapters or index

2683
01:53:01,679 --> 01:53:04,080
rather that are listing on that IP

2684
01:53:04,080 --> 01:53:05,699
address

2685
01:53:05,699 --> 01:53:07,920
here the adducts for the node we have a

2686
01:53:07,920 --> 01:53:11,040
loopback on ltp and then two uh remote

2687
01:53:11,040 --> 01:53:12,719
nodes

2688
01:53:12,719 --> 01:53:15,139
um being two of these here on the screen

2689
01:53:15,139 --> 01:53:18,719
uh the UDP and TCP representations there

2690
01:53:18,719 --> 01:53:21,179
as well as the active TCP socket uh at

2691
01:53:21,179 --> 01:53:23,219
the bottom

2692
01:53:23,219 --> 01:53:26,760
here's the local ltp seat

2693
01:53:26,760 --> 01:53:29,280
that's running

2694
01:53:29,280 --> 01:53:33,619
here are the ltp spans that are running

2695
01:53:35,580 --> 01:53:38,900
and we're going to Ping

2696
01:53:39,300 --> 01:53:41,040
all these nodes to make sure we have

2697
01:53:41,040 --> 01:53:45,679
connectivity before we be ping test

2698
01:53:50,100 --> 01:53:52,980
it's worth noting that the top left uh

2699
01:53:52,980 --> 01:53:54,600
that's being now in the top right

2700
01:53:54,600 --> 01:53:56,580
terminal are running on the same host

2701
01:53:56,580 --> 01:54:00,320
under different user accounts

2702
01:54:01,139 --> 01:54:04,260
and both of those are running on a bgp

2703
01:54:04,260 --> 01:54:07,159
speaking router

2704
01:54:09,420 --> 01:54:12,679
which is announcing the ipv4 and IPv6

2705
01:54:12,679 --> 01:54:14,820
addresses that

2706
01:54:14,820 --> 01:54:16,199
um

2707
01:54:16,199 --> 01:54:19,040
are being used

2708
01:54:19,320 --> 01:54:23,780
here are the open sockets on the machine

2709
01:54:28,139 --> 01:54:29,820
and here we have our B pings you'll see

2710
01:54:29,820 --> 01:54:32,300
in the bottom left we have our

2711
01:54:32,300 --> 01:54:35,820
bundles being echoed back our visual

2712
01:54:35,820 --> 01:54:37,980
indication of the dots across the

2713
01:54:37,980 --> 01:54:40,280
terminal

2714
01:54:44,100 --> 01:54:46,020
and so that is from California to

2715
01:54:46,020 --> 01:54:48,060
Florida here in my data center which is

2716
01:54:48,060 --> 01:54:49,679
underneath the hurricane

2717
01:54:49,679 --> 01:54:53,760
uh this is locally on the same host from

2718
01:54:53,760 --> 01:54:55,440
one user account running a node to

2719
01:54:55,440 --> 01:54:58,020
another user account running a node and

2720
01:54:58,020 --> 01:55:00,540
this is over ltp by UDP the first test

2721
01:55:00,540 --> 01:55:03,860
was to Via UDP only

2722
01:55:11,340 --> 01:55:15,960
and here we are testing UDP uh ltp over

2723
01:55:15,960 --> 01:55:18,840
UDP Coast to Coast from California where

2724
01:55:18,840 --> 01:55:21,980
it's basicallypackets.com is uh residing

2725
01:55:21,980 --> 01:55:26,718
to my data center here in Florida

2726
01:55:30,179 --> 01:55:34,440
and finally TCP functionality between

2727
01:55:34,440 --> 01:55:38,719
Florida and California

2728
01:55:49,860 --> 01:55:52,199
and there we go

2729
01:55:52,199 --> 01:55:53,760
and so

2730
01:55:53,760 --> 01:55:55,820
um

2731
01:55:56,159 --> 01:55:59,400
once more or two or tally IPv6 enabled

2732
01:55:59,400 --> 01:56:02,340
delay tolerant networking check this

2733
01:56:02,340 --> 01:56:04,199
greatly broadens the terrestrial reach

2734
01:56:04,199 --> 01:56:05,880
of delay tolerant networks enabling

2735
01:56:05,880 --> 01:56:08,400
applications using BP to extend to the

2736
01:56:08,400 --> 01:56:09,900
true Network Edge

2737
01:56:09,900 --> 01:56:11,639
uh

2738
01:56:11,639 --> 01:56:13,880
I'll return you to my question what I

2739
01:56:13,880 --> 01:56:16,500
enabled convergence layer adapter should

2740
01:56:16,500 --> 01:56:21,800
have ipv V6 functionality added next

2741
01:56:24,060 --> 01:56:27,619
and I thank you all for your time

2742
01:56:30,840 --> 01:56:32,880
well first thank you very much uh and

2743
01:56:32,880 --> 01:56:35,219
second uh Rick

2744
01:56:35,219 --> 01:56:37,440
uh again thank you very much Scott I I'm

2745
01:56:37,440 --> 01:56:39,480
going to answer your question

2746
01:56:39,480 --> 01:56:41,940
um I think they all should I I think we

2747
01:56:41,940 --> 01:56:43,860
build conver any convergence layer that

2748
01:56:43,860 --> 01:56:46,020
runs on top of Ip should should support

2749
01:56:46,020 --> 01:56:49,080
V4 and V6 I I think that's a no-brainer

2750
01:56:49,080 --> 01:56:51,960
I'm not meaning

2751
01:56:51,960 --> 01:56:53,219
I think you've done a great piece of

2752
01:56:53,219 --> 01:56:55,020
work there it's great to see ion V6

2753
01:56:55,020 --> 01:56:55,980
native

2754
01:56:55,980 --> 01:56:57,719
um I think it's really good but the

2755
01:56:57,719 --> 01:57:00,360
answer is if we support IP we support V4

2756
01:57:00,360 --> 01:57:02,639
and V6 that's that's the way so great to

2757
01:57:02,639 --> 01:57:03,900
see that running thank you very much

2758
01:57:03,900 --> 01:57:06,600
it's always nice to see actual gtns

2759
01:57:06,600 --> 01:57:09,060
happening as a demo so

2760
01:57:09,060 --> 01:57:12,920
um thank you and enjoy the hurricane

2761
01:57:13,320 --> 01:57:15,540
thank you very much for uh for having me

2762
01:57:15,540 --> 01:57:17,880
and uh you know these these networks

2763
01:57:17,880 --> 01:57:19,560
that I operate here are designed to

2764
01:57:19,560 --> 01:57:22,320
withstand uh these hurricanes

2765
01:57:22,320 --> 01:57:23,880
um through many years of trial and error

2766
01:57:23,880 --> 01:57:25,739
that's why we wound up uh deploying our

2767
01:57:25,739 --> 01:57:28,320
own autonomous system for

2768
01:57:28,320 --> 01:57:30,960
um redundant routing

2769
01:57:30,960 --> 01:57:33,960
and and you have uh one more question uh

2770
01:57:33,960 --> 01:57:36,320
from Kevin

2771
01:57:36,960 --> 01:57:38,520
hi it's Kevin Paul it's really for

2772
01:57:38,520 --> 01:57:40,560
everyone um because it's it's been a

2773
01:57:40,560 --> 01:57:42,719
long time since I've put my nose into

2774
01:57:42,719 --> 01:57:45,239
this community so back in the day when

2775
01:57:45,239 --> 01:57:46,619
we were sort of thinking about different

2776
01:57:46,619 --> 01:57:48,960
clas and and uh

2777
01:57:48,960 --> 01:57:51,540
dare I say the FIB that we were that you

2778
01:57:51,540 --> 01:57:54,300
would do at the node

2779
01:57:54,300 --> 01:57:56,940
um the the vision was oh well the next

2780
01:57:56,940 --> 01:57:59,580
hop could be email the next cop could be

2781
01:57:59,580 --> 01:58:01,800
you know person on a bicycle with USB

2782
01:58:01,800 --> 01:58:04,679
key uh or one of my more favorites is

2783
01:58:04,679 --> 01:58:06,000
write the message up on the wall

2784
01:58:06,000 --> 01:58:08,280
somebody comes up later copies it down

2785
01:58:08,280 --> 01:58:10,139
and it goes on its way

2786
01:58:10,139 --> 01:58:11,280
um

2787
01:58:11,280 --> 01:58:14,639
you know this IP is obviously sort of in

2788
01:58:14,639 --> 01:58:16,619
the ietf but I'm wondering has there

2789
01:58:16,619 --> 01:58:18,780
been progress or work in any of those

2790
01:58:18,780 --> 01:58:21,719
more kind of wild ideas we had back in

2791
01:58:21,719 --> 01:58:24,900
the day so Rick chat on as far as I'm

2792
01:58:24,900 --> 01:58:27,060
aware that is still absolutely the

2793
01:58:27,060 --> 01:58:28,920
ambition uh

2794
01:58:28,920 --> 01:58:30,540
underwritten by the statements

2795
01:58:30,540 --> 01:58:32,400
convergence layer adapter that clear

2796
01:58:32,400 --> 01:58:35,219
separation between the act of creating

2797
01:58:35,219 --> 01:58:37,980
moving generating bundles and the things

2798
01:58:37,980 --> 01:58:40,139
which will do it so we keep that nice

2799
01:58:40,139 --> 01:58:42,599
layer separation I don't believe and I

2800
01:58:42,599 --> 01:58:44,040
would personally strongly push back

2801
01:58:44,040 --> 01:58:46,199
against anyone saying a CLA is always an

2802
01:58:46,199 --> 01:58:49,080
IP based service absolutely not never

2803
01:58:49,080 --> 01:58:50,940
intended to be no never a man on a

2804
01:58:50,940 --> 01:58:53,880
bicycle is a very valid cla a group of

2805
01:58:53,880 --> 01:58:55,860
them is probably more effective but yeah

2806
01:58:55,860 --> 01:58:59,159
I mean reindeer as CLA or reindeer as

2807
01:58:59,159 --> 01:59:00,719
transport I think has been rolled out

2808
01:59:00,719 --> 01:59:01,560
before

2809
01:59:01,560 --> 01:59:03,179
I see Scott got in the queue I mean

2810
01:59:03,179 --> 01:59:05,580
there was I recall years ago discussions

2811
01:59:05,580 --> 01:59:07,980
about a USB key is it a node or link for

2812
01:59:07,980 --> 01:59:09,960
example and it's you know

2813
01:59:09,960 --> 01:59:13,679
maybe it's a beer conversation but so we

2814
01:59:13,679 --> 01:59:15,840
have one one minute left I could I can

2815
01:59:15,840 --> 01:59:17,460
answer that actually

2816
01:59:17,460 --> 01:59:20,040
um there or or provide an answer to it

2817
01:59:20,040 --> 01:59:21,739
there is a um

2818
01:59:21,739 --> 01:59:25,320
uh member of the uh ipn Sig here with us

2819
01:59:25,320 --> 01:59:27,659
Sam agrasic who has just completed his

2820
01:59:27,659 --> 01:59:31,940
first uh uh running code for a uart

2821
01:59:31,940 --> 01:59:35,699
adapter uh so that's a Serial console

2822
01:59:35,699 --> 01:59:37,920
and that I believe he is using to

2823
01:59:37,920 --> 01:59:40,920
connect to Laura radios for

2824
01:59:40,920 --> 01:59:43,679
um uh long range Wireless uh terrestrial

2825
01:59:43,679 --> 01:59:45,480
connectivity but he can speak to that

2826
01:59:45,480 --> 01:59:47,659
more

2827
01:59:47,960 --> 01:59:50,820
hold on sorry Scott I'm gonna I'm gonna

2828
01:59:50,820 --> 01:59:52,320
call out there's a difference here

2829
01:59:52,320 --> 01:59:55,440
there's a difference between

2830
01:59:55,440 --> 01:59:56,880
putting

2831
01:59:56,880 --> 02:00:00,900
bits on the wire to carry things that

2832
02:00:00,900 --> 02:00:02,940
are built around a TCP streaming or a

2833
02:00:02,940 --> 02:00:05,760
UDP streaming packetized format and the

2834
02:00:05,760 --> 02:00:07,380
high layer concept which I think Kevin

2835
02:00:07,380 --> 02:00:10,260
was pointing at which is I can serialize

2836
02:00:10,260 --> 02:00:13,260
a bundle in some way and give it to a

2837
02:00:13,260 --> 02:00:15,900
thing which moves it

2838
02:00:15,900 --> 02:00:18,599
um it's great to see uh you know a patch

2839
02:00:18,599 --> 02:00:20,880
TCP or UDP running over over serial or

2840
02:00:20,880 --> 02:00:23,219
some kind of chunking that that moves

2841
02:00:23,219 --> 02:00:25,139
bundles over serial great great example

2842
02:00:25,139 --> 02:00:26,820
but I think Kevin's aiming at a much

2843
02:00:26,820 --> 02:00:28,560
higher concept which I agree with him of

2844
02:00:28,560 --> 02:00:31,260
if we can serialize it and move it

2845
02:00:31,260 --> 02:00:33,179
that's great

2846
02:00:33,179 --> 02:00:36,480
uh let me just uh interject here that uh

2847
02:00:36,480 --> 02:00:38,940
I think this is Laura uh it actually is

2848
02:00:38,940 --> 02:00:41,040
not tcpip

2849
02:00:41,040 --> 02:00:44,219
um it's uh it's it's native Laura uh and

2850
02:00:44,219 --> 02:00:47,040
and and the you're you're right other

2851
02:00:47,040 --> 02:00:50,340
clas that are not based on uh on IP are

2852
02:00:50,340 --> 02:00:52,440
certainly uh things we should be doing

2853
02:00:52,440 --> 02:00:55,440
and I'm gonna uh claim that we already

2854
02:00:55,440 --> 02:00:56,340
are

2855
02:00:56,340 --> 02:00:58,380
good

2856
02:00:58,380 --> 02:01:00,840
all right so with that uh we are at time

2857
02:01:00,840 --> 02:01:03,960
yes so thank you all very much again

2858
02:01:03,960 --> 02:01:07,139
please uh continue to use the mailing

2859
02:01:07,139 --> 02:01:09,719
list uh and if you were presenting

2860
02:01:09,719 --> 02:01:11,280
please make sure to post additional

2861
02:01:11,280 --> 02:01:13,080
questions and requests for review to

2862
02:01:13,080 --> 02:01:15,500
that list

2863
02:01:15,980 --> 02:01:18,300
otherwise thank you all very much speak

2864
02:01:18,300 --> 02:01:19,800
to you all in Yokohama if not on the

2865
02:01:19,800 --> 02:01:21,540
mailing list we might do an interim if

2866
02:01:21,540 --> 02:01:23,580
there's excitement about it

2867
02:01:23,580 --> 02:01:26,360
um enjoy

2868
02:01:27,840 --> 02:01:28,100
um

2869
02:01:28,100 --> 02:01:31,139
[Music]

2870
02:01:38,420 --> 02:01:41,219
have you not considered Tour de France

2871
02:01:41,219 --> 02:01:44,219
net yeah end of USB keys with the water

2872
02:01:44,219 --> 02:01:46,460
bottle

2873
02:01:49,219 --> 02:01:52,280
thank you

