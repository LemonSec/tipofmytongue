1
00:00:11,540 --> 00:00:14,540
thank you

2
00:00:36,899 --> 00:00:39,140
foreign

3
00:01:18,119 --> 00:01:20,240
thank you

4
00:01:21,299 --> 00:01:24,140
guys

5
00:01:41,400 --> 00:01:44,400
foreign

6
00:02:20,040 --> 00:02:22,579
okay

7
00:02:50,879 --> 00:02:53,720
oh yeah

8
00:03:51,599 --> 00:03:53,420
okay yeah

9
00:03:53,420 --> 00:03:56,780
so yeah

10
00:03:57,299 --> 00:04:01,340
I think maybe a couple of minutes yeah

11
00:04:01,560 --> 00:04:04,280
I go to

12
00:04:05,099 --> 00:04:08,238
the next slide

13
00:04:10,140 --> 00:04:11,280
yeah

14
00:04:11,280 --> 00:04:14,540
it's all done by uh

15
00:04:24,020 --> 00:04:27,198
and then

16
00:04:58,919 --> 00:05:01,919
Vietnam

17
00:05:25,680 --> 00:05:26,880
all right

18
00:05:26,880 --> 00:05:29,400
and if you want to be the first few or

19
00:05:29,400 --> 00:05:33,799
should I do that yeah yeah next time

20
00:05:36,720 --> 00:05:39,720
foreign

21
00:06:08,699 --> 00:06:10,680
yeah

22
00:06:10,680 --> 00:06:13,139
we'll go for right now the opinions were

23
00:06:13,139 --> 00:06:17,060
representing what's on here

24
00:06:22,139 --> 00:06:25,520
you can do that yeah

25
00:06:43,500 --> 00:06:45,800
foreign

26
00:07:35,300 --> 00:07:38,539
was hard

27
00:07:46,380 --> 00:07:48,860
no

28
00:07:58,080 --> 00:08:01,039
check some

29
00:08:01,800 --> 00:08:03,900
can you hear me for

30
00:08:03,900 --> 00:08:07,159
Lorenzo can you hear me

31
00:08:34,620 --> 00:08:36,919
foreign

32
00:08:42,059 --> 00:08:43,740
try again

33
00:08:43,740 --> 00:08:45,899
can you hear me

34
00:08:45,899 --> 00:08:48,060
yes okay I can eat you

35
00:08:48,060 --> 00:08:49,620
okay

36
00:08:49,620 --> 00:08:51,620
thank you

37
00:09:00,839 --> 00:09:03,000
all right

38
00:09:03,000 --> 00:09:04,500
ready to go

39
00:09:04,500 --> 00:09:07,440
okay

40
00:09:07,440 --> 00:09:10,200
all right well thanks everyone

41
00:09:10,200 --> 00:09:12,720
um as you know uh

42
00:09:12,720 --> 00:09:15,120
the the hackathon the whole thing is a

43
00:09:15,120 --> 00:09:17,459
bit of a a flurry of activity and

44
00:09:17,459 --> 00:09:19,800
getting things uh together quickly and

45
00:09:19,800 --> 00:09:22,560
that that goes for uh our the way we

46
00:09:22,560 --> 00:09:24,240
share the results and the recording of

47
00:09:24,240 --> 00:09:26,940
all that it's kind of always a a test

48
00:09:26,940 --> 00:09:29,820
and a a bit of an experiment so I think

49
00:09:29,820 --> 00:09:31,620
we're all set to go thanks for your help

50
00:09:31,620 --> 00:09:34,080
in getting the presentations uploaded

51
00:09:34,080 --> 00:09:36,180
and uh and we'll go ahead and get

52
00:09:36,180 --> 00:09:37,860
started I have a few things just to

53
00:09:37,860 --> 00:09:39,959
cover

54
00:09:39,959 --> 00:09:42,000
um first of all just a reminder I know

55
00:09:42,000 --> 00:09:43,260
some of you weren't here yesterday

56
00:09:43,260 --> 00:09:47,160
morning when we started but uh um we do

57
00:09:47,160 --> 00:09:49,080
have our our Mass policy you need to

58
00:09:49,080 --> 00:09:50,640
wear a mask when you're presenting up

59
00:09:50,640 --> 00:09:52,920
here you're free to take it off take it

60
00:09:52,920 --> 00:09:54,839
off as I have now

61
00:09:54,839 --> 00:09:56,399
um but when you're at your seat unless

62
00:09:56,399 --> 00:09:57,540
you're eating your drinking please

63
00:09:57,540 --> 00:09:58,980
please wear your mask and wear it

64
00:09:58,980 --> 00:10:01,860
properly uh just uh make everyone else

65
00:10:01,860 --> 00:10:03,839
safe and comfortable we'd appreciate

66
00:10:03,839 --> 00:10:05,760
that

67
00:10:05,760 --> 00:10:08,820
um a reminder of the note well uh the

68
00:10:08,820 --> 00:10:10,800
the presentations you'll be doing here

69
00:10:10,800 --> 00:10:13,080
uh do fall under the note well just like

70
00:10:13,080 --> 00:10:14,580
the work you do within the working group

71
00:10:14,580 --> 00:10:17,160
sessions and and whatnot so a reminder

72
00:10:17,160 --> 00:10:19,699
of that

73
00:10:20,279 --> 00:10:22,700
um this is where we are in the agenda

74
00:10:22,700 --> 00:10:25,980
and uh so again with these uh results

75
00:10:25,980 --> 00:10:27,959
presentations I think it's great that so

76
00:10:27,959 --> 00:10:29,459
many of you have put them together and

77
00:10:29,459 --> 00:10:31,800
you are doing them our goal is to be

78
00:10:31,800 --> 00:10:33,480
able to to get through them all

79
00:10:33,480 --> 00:10:36,300
relatively quickly we'll try to keep the

80
00:10:36,300 --> 00:10:39,720
uh things flowing uh smoothly up here to

81
00:10:39,720 --> 00:10:41,760
the best of our abilities and we really

82
00:10:41,760 --> 00:10:43,800
ask that you you keep your presentation

83
00:10:43,800 --> 00:10:46,200
to uh four minutes at the very very most

84
00:10:46,200 --> 00:10:48,660
I'll be running a timer there and I'll

85
00:10:48,660 --> 00:10:50,279
let you know when you're down to two

86
00:10:50,279 --> 00:10:52,260
minutes uh when you're down at one

87
00:10:52,260 --> 00:10:54,180
minute and when your time's up we're

88
00:10:54,180 --> 00:10:55,620
really going to have to cut you off

89
00:10:55,620 --> 00:10:57,480
unfortunately just just to leave time

90
00:10:57,480 --> 00:10:59,279
for everyone else

91
00:10:59,279 --> 00:11:01,260
um so sorry about that but please uh you

92
00:11:01,260 --> 00:11:03,000
know try to be brief and know that

93
00:11:03,000 --> 00:11:04,440
there's other opportunities including

94
00:11:04,440 --> 00:11:07,140
hack demo happy hour tomorrow where you

95
00:11:07,140 --> 00:11:08,700
can have much more in-depth

96
00:11:08,700 --> 00:11:11,640
conversations with everyone

97
00:11:11,640 --> 00:11:16,019
and uh with that uh oh one more thing if

98
00:11:16,019 --> 00:11:17,399
you haven't already uploaded your

99
00:11:17,399 --> 00:11:19,079
presentation please upload it into

100
00:11:19,079 --> 00:11:21,360
GitHub what's happened is behind the

101
00:11:21,360 --> 00:11:23,640
scenes all the presentations you've put

102
00:11:23,640 --> 00:11:26,820
there uh assuming there's a PDF file if

103
00:11:26,820 --> 00:11:28,620
you're able to get the PDF file there in

104
00:11:28,620 --> 00:11:30,480
time those have all been pulled into

105
00:11:30,480 --> 00:11:33,480
miteco and we can uh run through them

106
00:11:33,480 --> 00:11:36,240
directly from within me Techo

107
00:11:36,240 --> 00:11:39,420
um if you upload a file afterwards if

108
00:11:39,420 --> 00:11:41,459
you haven't don't have yours in yet be

109
00:11:41,459 --> 00:11:43,740
sure you convert it to PDF first then

110
00:11:43,740 --> 00:11:46,320
upload it and we'll do our best to you

111
00:11:46,320 --> 00:11:49,440
know get back to it again uh at the end

112
00:11:49,440 --> 00:11:50,940
otherwise we're just going to run

113
00:11:50,940 --> 00:11:54,240
through the presentations in order

114
00:11:54,240 --> 00:11:57,500
any questions about that

115
00:11:59,160 --> 00:12:00,480
okay

116
00:12:00,480 --> 00:12:02,040
um then I'm going to turn it over to one

117
00:12:02,040 --> 00:12:05,100
of my co-chairs here Beno to uh to help

118
00:12:05,100 --> 00:12:08,360
with running through the presentations

119
00:12:20,519 --> 00:12:23,519
oh

120
00:12:25,140 --> 00:12:28,100
there we go

121
00:12:31,380 --> 00:12:33,920
okay

122
00:12:37,620 --> 00:12:40,680
from top to down sorry hi welcome so

123
00:12:40,680 --> 00:12:42,779
we're running the presentation from top

124
00:12:42,779 --> 00:12:46,019
to down as they appear in the mid Echo

125
00:12:46,019 --> 00:12:48,660
so no no specific order maybe first come

126
00:12:48,660 --> 00:12:51,480
first serve so I would like to invite

127
00:12:51,480 --> 00:12:54,120
the first presenter of explicit flow

128
00:12:54,120 --> 00:12:55,320
measurements

129
00:12:55,320 --> 00:12:58,760
it's in the room thank you

130
00:13:07,560 --> 00:13:09,420
so you have four minutes we will

131
00:13:09,420 --> 00:13:12,420
indicate to one and then

132
00:13:12,420 --> 00:13:15,000
and you're allowed to if you're in time

133
00:13:15,000 --> 00:13:16,680
you can also ask some questions from the

134
00:13:16,680 --> 00:13:18,480
room but okay

135
00:13:18,480 --> 00:13:20,700
thanks

136
00:13:20,700 --> 00:13:23,339
left and right yeah

137
00:13:23,339 --> 00:13:25,579
okay

138
00:13:26,459 --> 00:13:27,839
okay

139
00:13:27,839 --> 00:13:30,360
um my name is maximonido from Telecom

140
00:13:30,360 --> 00:13:32,300
Italia's team

141
00:13:32,300 --> 00:13:35,820
okay yes

142
00:13:35,820 --> 00:13:38,880
and this presentation is about the

143
00:13:38,880 --> 00:13:41,100
results of uh spreadsheet for

144
00:13:41,100 --> 00:13:42,600
measurements

145
00:13:42,600 --> 00:13:46,440
and um in this particular is related to

146
00:13:46,440 --> 00:13:48,959
passive misordinates that use the

147
00:13:48,959 --> 00:13:51,600
customer traffic it's not artificial

148
00:13:51,600 --> 00:13:53,639
traffic

149
00:13:53,639 --> 00:13:56,639
what we try to understand in this

150
00:13:56,639 --> 00:14:00,360
hackathon if the quick speed is

151
00:14:00,360 --> 00:14:04,380
supported over internet by the mainly by

152
00:14:04,380 --> 00:14:07,500
the Ott or any kind of company web

153
00:14:07,500 --> 00:14:08,579
server

154
00:14:08,579 --> 00:14:10,740
and we made that implement we have

155
00:14:10,740 --> 00:14:13,019
already made an implementation of

156
00:14:13,019 --> 00:14:16,139
uh in our open source browser in this

157
00:14:16,139 --> 00:14:17,820
case is chromium

158
00:14:17,820 --> 00:14:20,399
and with the modification for support of

159
00:14:20,399 --> 00:14:22,459
the quick spin beat

160
00:14:22,459 --> 00:14:26,279
here we made some tests uh over the

161
00:14:26,279 --> 00:14:29,100
Internet versus the over the top web

162
00:14:29,100 --> 00:14:31,920
servers and mainly they doesn't support

163
00:14:31,920 --> 00:14:35,339
this uh spin beat because it's an

164
00:14:35,339 --> 00:14:38,480
optional parameter in the standard

165
00:14:38,480 --> 00:14:43,500
but we made some tests versus an openly

166
00:14:43,500 --> 00:14:46,320
speed web server that is an open source

167
00:14:46,320 --> 00:14:49,380
project and this is successful we got

168
00:14:49,380 --> 00:14:53,160
the spin bit running as you can say in

169
00:14:53,160 --> 00:14:55,339
the screenshot in the right

170
00:14:55,339 --> 00:14:58,440
bottom of the right the spin beat is

171
00:14:58,440 --> 00:15:02,100
spinning and we obtain some delay in

172
00:15:02,100 --> 00:15:05,699
solvents with a left LTT that is from

173
00:15:05,699 --> 00:15:08,220
the client side and on the right LTT

174
00:15:08,220 --> 00:15:11,880
runt replace it is related to the mainly

175
00:15:11,880 --> 00:15:14,040
on the internet side

176
00:15:14,040 --> 00:15:17,420
and is quite

177
00:15:17,600 --> 00:15:21,079
presses affordable

178
00:15:21,420 --> 00:15:24,620
this is the other thing that we try to

179
00:15:24,620 --> 00:15:28,199
investigate in this hackathon and we try

180
00:15:28,199 --> 00:15:29,940
to implement a new delay measurement

181
00:15:29,940 --> 00:15:31,440
technique

182
00:15:31,440 --> 00:15:34,019
and these new experimental technique

183
00:15:34,019 --> 00:15:37,459
that is a modification of the spin bit

184
00:15:37,459 --> 00:15:40,980
requires only the um the the

185
00:15:40,980 --> 00:15:44,220
modification of the client of the client

186
00:15:44,220 --> 00:15:45,480
side

187
00:15:45,480 --> 00:15:49,260
it's the realized on internal protocol

188
00:15:49,260 --> 00:15:53,399
LTT evaluation we always use okay we

189
00:15:53,399 --> 00:15:56,699
always use in this case the quick

190
00:15:56,699 --> 00:15:58,800
and the user the same square wave

191
00:15:58,800 --> 00:16:01,260
mechanism that is the with the alternate

192
00:16:01,260 --> 00:16:04,920
marking uh the of the spin beat

193
00:16:04,920 --> 00:16:07,199
with some preliminary tests which we've

194
00:16:07,199 --> 00:16:09,660
done here we obtained some good results

195
00:16:09,660 --> 00:16:13,320
that is we can obtain also the delay

196
00:16:13,320 --> 00:16:14,699
measurements

197
00:16:14,699 --> 00:16:18,019
and the mainly goal of this

198
00:16:18,019 --> 00:16:21,120
implementation of this method and we can

199
00:16:21,120 --> 00:16:22,160
use

200
00:16:22,160 --> 00:16:25,220
this this

201
00:16:25,220 --> 00:16:27,360
alternate technique for the delay

202
00:16:27,360 --> 00:16:30,959
instrument only by the modification of

203
00:16:30,959 --> 00:16:34,440
the client and so we don't need any way

204
00:16:34,440 --> 00:16:39,180
any anymore a support by the server side

205
00:16:39,180 --> 00:16:42,680
that is we don't doesn't need to have

206
00:16:42,680 --> 00:16:46,740
the the support from the reflection bit

207
00:16:46,740 --> 00:16:49,259
on the server side

208
00:16:49,259 --> 00:16:51,860
okay

209
00:16:53,279 --> 00:16:55,560
okay this is a screenshot of the user

210
00:16:55,560 --> 00:16:57,899
device and this is the team that you're

211
00:16:57,899 --> 00:17:01,399
working here okay

212
00:17:05,819 --> 00:17:10,339
if there is some question we are here

213
00:17:11,280 --> 00:17:14,160
okay no questions it's good

214
00:17:14,160 --> 00:17:18,380
thank you very much excellent

215
00:17:30,600 --> 00:17:33,600
foreign

216
00:17:37,500 --> 00:17:40,559
right I don't see your name yet

217
00:17:40,559 --> 00:17:43,020
yeah okay no

218
00:17:43,020 --> 00:17:46,440
pdmv PDM V2

219
00:17:46,440 --> 00:17:48,840
who can I invite to come up front oh

220
00:17:48,840 --> 00:17:51,918
there you are excellent

221
00:17:58,980 --> 00:18:01,520
thank you

222
00:18:02,580 --> 00:18:04,620
okay

223
00:18:04,620 --> 00:18:06,419
so I'll go through this

224
00:18:06,419 --> 00:18:09,080
click

225
00:18:09,840 --> 00:18:14,220
okay how do you do the next one oh this

226
00:18:14,220 --> 00:18:16,559
one okay thanks oops

227
00:18:16,559 --> 00:18:19,799
yep so we're working on three different

228
00:18:19,799 --> 00:18:23,940
um extension header testing uh things uh

229
00:18:23,940 --> 00:18:26,520
two of them will present him at V6 Ops

230
00:18:26,520 --> 00:18:30,240
and one of them at ippm we have quite a

231
00:18:30,240 --> 00:18:34,140
quite a crew working on this uh a number

232
00:18:34,140 --> 00:18:36,720
of students uh from

233
00:18:36,720 --> 00:18:40,080
um uh from India as well who who are

234
00:18:40,080 --> 00:18:43,380
working with us and so our plan we're

235
00:18:43,380 --> 00:18:45,840
trying to do some cloud provider testing

236
00:18:45,840 --> 00:18:48,539
at the hackathon decide on the

237
00:18:48,539 --> 00:18:50,880
registration protocol that we need for

238
00:18:50,880 --> 00:18:54,419
our encrypted PDM and then we did some

239
00:18:54,419 --> 00:18:57,960
presentations with ebpf and free router

240
00:18:57,960 --> 00:19:01,020
which the students in India were working

241
00:19:01,020 --> 00:19:03,780
on essentially the the the point of our

242
00:19:03,780 --> 00:19:06,660
project is to figure out if IPv6

243
00:19:06,660 --> 00:19:09,000
extension headers can be used on the

244
00:19:09,000 --> 00:19:10,140
internet

245
00:19:10,140 --> 00:19:13,919
and we did a presentation uh at iepg on

246
00:19:13,919 --> 00:19:15,539
them and we feel that it's really

247
00:19:15,539 --> 00:19:18,419
important that extension headers uh work

248
00:19:18,419 --> 00:19:21,240
because it is a very good way that we

249
00:19:21,240 --> 00:19:23,580
will have to measure uh encrypted

250
00:19:23,580 --> 00:19:27,240
Networks and uh what we've been doing is

251
00:19:27,240 --> 00:19:29,820
to figure out if they're being blocked

252
00:19:29,820 --> 00:19:32,520
exactly where are they being blocked and

253
00:19:32,520 --> 00:19:34,320
we will have a whole side meeting on

254
00:19:34,320 --> 00:19:37,440
Thursday an hour to talk about uh the

255
00:19:37,440 --> 00:19:40,620
the whole situation uh it seems to us

256
00:19:40,620 --> 00:19:42,799
that there's uh three different

257
00:19:42,799 --> 00:19:47,100
topologies involved uh bottom line

258
00:19:47,100 --> 00:19:49,380
if you're doing just client internet

259
00:19:49,380 --> 00:19:52,980
server things seem to work well if

260
00:19:52,980 --> 00:19:56,340
you're if you have a CDN provider or uh

261
00:19:56,340 --> 00:19:58,080
if you're in a cloud provider

262
00:19:58,080 --> 00:20:02,280
environment things work less well and so

263
00:20:02,280 --> 00:20:04,860
we need to uh work together with these

264
00:20:04,860 --> 00:20:08,039
people and uh the way we're doing our

265
00:20:08,039 --> 00:20:12,480
testing is we used ebpf to create a

266
00:20:12,480 --> 00:20:15,600
stack which will append an extension

267
00:20:15,600 --> 00:20:19,919
header of our choice to each packet uh

268
00:20:19,919 --> 00:20:22,700
going in and out of the system

269
00:20:22,700 --> 00:20:27,120
we are also making modifications to free

270
00:20:27,120 --> 00:20:30,900
router so that we can put in hop by hop

271
00:20:30,900 --> 00:20:34,140
headers and ideally position free

272
00:20:34,140 --> 00:20:37,380
routers at various places in the

273
00:20:37,380 --> 00:20:41,100
internet so we can see exactly where

274
00:20:41,100 --> 00:20:44,940
extension headers might be stopping

275
00:20:44,940 --> 00:20:47,220
uh we also did a great deal of

276
00:20:47,220 --> 00:20:49,559
discussion of our registration protocol

277
00:20:49,559 --> 00:20:52,380
for our encrypted PDM I'm not going to

278
00:20:52,380 --> 00:20:55,380
go through this thank goodness more

279
00:20:55,380 --> 00:20:58,440
breaking news as it happens Lots going

280
00:20:58,440 --> 00:21:01,320
on come join us and we'll be happy to

281
00:21:01,320 --> 00:21:03,299
talk your ear off

282
00:21:03,299 --> 00:21:05,520
questions

283
00:21:05,520 --> 00:21:07,390
yep great thank you

284
00:21:07,390 --> 00:21:14,269
[Applause]

285
00:21:16,380 --> 00:21:18,240
thank you

286
00:21:18,240 --> 00:21:24,080
next is the DNS hackathon results

287
00:21:24,539 --> 00:21:27,200
there you go

288
00:21:43,980 --> 00:21:47,520
yes so these are the results from the

289
00:21:47,520 --> 00:21:50,120
DNS table

290
00:21:50,280 --> 00:21:52,080
uh

291
00:21:52,080 --> 00:21:54,720
uh we worked mostly or there was a big

292
00:21:54,720 --> 00:21:58,140
group working on DNS air reporting

293
00:21:58,140 --> 00:22:01,380
so this is the draft which specifies

294
00:22:01,380 --> 00:22:06,360
that the builds upon extended DNS errors

295
00:22:06,360 --> 00:22:08,840
but instead of

296
00:22:08,840 --> 00:22:11,760
informing the query about what went

297
00:22:11,760 --> 00:22:15,900
wrong it's informing the operator or the

298
00:22:15,900 --> 00:22:17,820
owner of the domain

299
00:22:17,820 --> 00:22:21,059
and it's basically works as follows the

300
00:22:21,059 --> 00:22:22,460
authoritative

301
00:22:22,460 --> 00:22:26,280
sensor reports receiving agent in an

302
00:22:26,280 --> 00:22:29,000
edns option which is just a domain name

303
00:22:29,000 --> 00:22:32,960
and a resolver if it detects an error

304
00:22:32,960 --> 00:22:37,080
sends a query to the reporting receiving

305
00:22:37,080 --> 00:22:41,700
agent with the the error

306
00:22:41,700 --> 00:22:45,419
uh so Roy arens one of the authors of

307
00:22:45,419 --> 00:22:49,320
the uh dwarfs was at table two and we

308
00:22:49,320 --> 00:22:52,559
gave a lot of feedback uh we discussed

309
00:22:52,559 --> 00:22:55,620
that the care query type should be text

310
00:22:55,620 --> 00:22:57,200
instead of no

311
00:22:57,200 --> 00:23:00,539
uh so you could have different ttls for

312
00:23:00,539 --> 00:23:02,520
different errors

313
00:23:02,520 --> 00:23:05,400
and also the error code was moved

314
00:23:05,400 --> 00:23:09,059
towards the domain name to facilitate

315
00:23:09,059 --> 00:23:12,360
that as well we thought of a mnemonic

316
00:23:12,360 --> 00:23:17,460
for the edns option DRC DNS error

317
00:23:17,460 --> 00:23:20,760
reporting Channel and overall the the

318
00:23:20,760 --> 00:23:23,700
draft has better language now

319
00:23:23,700 --> 00:23:27,200
so there's implementation in inbound

320
00:23:27,200 --> 00:23:31,140
built upon Also earlier hackers of work

321
00:23:31,140 --> 00:23:34,799
you can find it in this GitHub tree we

322
00:23:34,799 --> 00:23:38,720
have a open testing resolver uh

323
00:23:38,720 --> 00:23:41,820
responding to the edns option

324
00:23:41,820 --> 00:23:44,539
there's also we also have a

325
00:23:44,539 --> 00:23:47,700
authoritative site sending option in

326
00:23:47,700 --> 00:23:50,880
ebpf which just works for any

327
00:23:50,880 --> 00:23:54,120
authoritative survey it augments the

328
00:23:54,120 --> 00:23:57,900
responses with this option

329
00:23:57,900 --> 00:24:01,559
uh there was a implementation done by

330
00:24:01,559 --> 00:24:04,559
Stefan bertzmeyer in the authoritative

331
00:24:04,559 --> 00:24:06,360
names of a drink

332
00:24:06,360 --> 00:24:09,539
it's a dynamic name server it can do

333
00:24:09,539 --> 00:24:14,400
stuff when it's queries for uh stuff

334
00:24:14,400 --> 00:24:17,000
and it's great for experimentation

335
00:24:17,000 --> 00:24:20,700
here's the GitHub link for it and

336
00:24:20,700 --> 00:24:24,600
besides sending the Eds option Stefan

337
00:24:24,600 --> 00:24:28,580
also started with doing DNS errors

338
00:24:28,580 --> 00:24:32,039
reporting processing so doing something

339
00:24:32,039 --> 00:24:34,320
with the reports

340
00:24:34,320 --> 00:24:36,600
so there's another authoritative

341
00:24:36,600 --> 00:24:40,140
implementation in the neighborhood

342
00:24:40,140 --> 00:24:42,179
authoritative names have called Trex

343
00:24:42,179 --> 00:24:45,960
which is ns1's proprietary authoritative

344
00:24:45,960 --> 00:24:50,100
server and it also worked it's tested it

345
00:24:50,100 --> 00:24:52,159
worked

346
00:24:52,159 --> 00:24:55,320
Mark Andrews submitted the tickets

347
00:24:55,320 --> 00:24:59,700
for uh about nine and also the

348
00:24:59,700 --> 00:25:03,020
authoritative site is already working

349
00:25:03,020 --> 00:25:07,260
uh another project was to create net DNS

350
00:25:07,260 --> 00:25:10,020
resolver inbound pull bindings for lib

351
00:25:10,020 --> 00:25:12,919
inbound and make that work with the

352
00:25:12,919 --> 00:25:15,840
resolver in an Adidas

353
00:25:15,840 --> 00:25:19,740
and last but not least they encrypted

354
00:25:19,740 --> 00:25:23,299
client hello uh

355
00:25:23,580 --> 00:25:26,940
thing in Connect by name a library that

356
00:25:26,940 --> 00:25:30,419
does ace happy eyeballs Dane and

357
00:25:30,419 --> 00:25:33,419
everything you need to shut up uh

358
00:25:33,419 --> 00:25:37,320
sessions uh securely and privately

359
00:25:37,320 --> 00:25:40,620
so we had a really good time the food

360
00:25:40,620 --> 00:25:44,100
was amazing DNS error reporting just

361
00:25:44,100 --> 00:25:45,360
walks

362
00:25:45,360 --> 00:25:49,459
so the these were the participants

363
00:25:52,320 --> 00:25:54,840
thank you

364
00:25:54,840 --> 00:26:00,439
thank you okay next up is

365
00:26:00,740 --> 00:26:03,659
let's see

366
00:26:03,659 --> 00:26:05,039
yeah

367
00:26:05,039 --> 00:26:08,720
drip d-rip

368
00:26:08,880 --> 00:26:10,200
there we go

369
00:26:10,200 --> 00:26:13,640
drone remote identification

370
00:26:16,380 --> 00:26:18,179
the chance will indicate about two

371
00:26:18,179 --> 00:26:20,360
minutes

372
00:26:21,120 --> 00:26:25,140
okay so uh I'm Stu and my affiliation

373
00:26:25,140 --> 00:26:26,520
for these purposes is a company called

374
00:26:26,520 --> 00:26:28,220
ax Enterprise

375
00:26:28,220 --> 00:26:32,059
and how am I advancing

376
00:26:32,520 --> 00:26:35,240
here we go

377
00:26:39,960 --> 00:26:43,320
yeah I tried that okay so what strip

378
00:26:43,320 --> 00:26:44,940
um wireless network based equivalent of

379
00:26:44,940 --> 00:26:47,940
a auto license plate for uh unmanned

380
00:26:47,940 --> 00:26:49,140
aircraft but the media love to call

381
00:26:49,140 --> 00:26:50,520
drones

382
00:26:50,520 --> 00:26:52,559
um the Baseline standards are external

383
00:26:52,559 --> 00:26:54,840
to ietf

384
00:26:54,840 --> 00:26:56,520
um but the problem is the Baseline

385
00:26:56,520 --> 00:26:58,380
standards are not well informed from the

386
00:26:58,380 --> 00:26:59,580
perspective of cryptographic network

387
00:26:59,580 --> 00:27:02,279
protocols so uh thus the drip working

388
00:27:02,279 --> 00:27:04,860
group which uh Builds on the Baseline

389
00:27:04,860 --> 00:27:07,320
external standards to um to provide

390
00:27:07,320 --> 00:27:08,880
those properties

391
00:27:08,880 --> 00:27:11,480
so

392
00:27:12,720 --> 00:27:16,159
arrow keys not working

393
00:27:18,000 --> 00:27:22,159
Okay Chrome Focus here

394
00:27:25,020 --> 00:27:26,820
no all right

395
00:27:26,820 --> 00:27:30,659
wrong votes here we go thanks

396
00:27:30,659 --> 00:27:31,860
so

397
00:27:31,860 --> 00:27:36,720
um the goals for yesterday and today we

398
00:27:36,720 --> 00:27:39,480
we've had to be fairly careful with our

399
00:27:39,480 --> 00:27:41,580
language in our graphs and so we have

400
00:27:41,580 --> 00:27:43,679
endorsements that are largely in the

401
00:27:43,679 --> 00:27:47,100
sense of the rats working group and

402
00:27:47,100 --> 00:27:49,740
um problem is a lot of the work that's

403
00:27:49,740 --> 00:27:52,320
been done uh by Adam and myself is for

404
00:27:52,320 --> 00:27:53,820
an employer who unfortunately will not

405
00:27:53,820 --> 00:27:56,279
release it as open source and so in the

406
00:27:56,279 --> 00:27:58,200
interests of moving this forward within

407
00:27:58,200 --> 00:28:01,200
ietf we want open source so

408
00:28:01,200 --> 00:28:03,120
um our volunteers worked on an

409
00:28:03,120 --> 00:28:05,340
independent implementation uh that will

410
00:28:05,340 --> 00:28:07,500
be released as open source it already

411
00:28:07,500 --> 00:28:11,279
been uploaded um and uh this will

412
00:28:11,279 --> 00:28:14,940
produce endorsements and

413
00:28:14,940 --> 00:28:17,340
um Import and Export them in the

414
00:28:17,340 --> 00:28:20,039
necessary formats for over the air did

415
00:28:20,039 --> 00:28:21,960
the work in Python to get it done in two

416
00:28:21,960 --> 00:28:25,500
days and also the linkaping university

417
00:28:25,500 --> 00:28:28,799
implementation which is open source of

418
00:28:28,799 --> 00:28:30,419
drip and open hip needed to be brought

419
00:28:30,419 --> 00:28:32,400
up to the latest

420
00:28:32,400 --> 00:28:36,720
draft level and yeah uh our volunteers

421
00:28:36,720 --> 00:28:39,960
got it done and uh demonstrated this

422
00:28:39,960 --> 00:28:42,179
morning interoperability with the uh

423
00:28:42,179 --> 00:28:44,400
closed Source uh implementation

424
00:28:44,400 --> 00:28:46,980
and the Lincoln University work is going

425
00:28:46,980 --> 00:28:48,240
to be more extensive than could have got

426
00:28:48,240 --> 00:28:50,340
done in two days but we figured out what

427
00:28:50,340 --> 00:28:52,939
needs to get done

428
00:28:53,400 --> 00:28:55,740
and

429
00:28:55,740 --> 00:28:58,320
so our new volunteers did need a little

430
00:28:58,320 --> 00:29:00,120
help from the folks who wrote the drafts

431
00:29:00,120 --> 00:29:01,679
which suggests that the drafts need some

432
00:29:01,679 --> 00:29:03,720
clarification we need to take the Json

433
00:29:03,720 --> 00:29:05,400
out of the drafts and replace it with

434
00:29:05,400 --> 00:29:08,400
cddl and we found some Corner cases that

435
00:29:08,400 --> 00:29:10,279
will be addressed

436
00:29:10,279 --> 00:29:12,539
and so our team leader was Adam wave

437
00:29:12,539 --> 00:29:15,000
your hand at him and our volunteers on

438
00:29:15,000 --> 00:29:17,100
site uh Philip and Marius with your

439
00:29:17,100 --> 00:29:18,120
hands

440
00:29:18,120 --> 00:29:20,159
and uh we also had the Lincoln

441
00:29:20,159 --> 00:29:23,100
University folks in remotely and Bob and

442
00:29:23,100 --> 00:29:25,500
I were here to uh kibbits and we really

443
00:29:25,500 --> 00:29:27,240
really really need reviewers for our

444
00:29:27,240 --> 00:29:28,320
drafts

445
00:29:28,320 --> 00:29:31,260
that's it questions

446
00:29:31,260 --> 00:29:33,040
nope next thanks

447
00:29:33,040 --> 00:29:39,799
[Applause]

448
00:29:40,919 --> 00:29:44,279
next is uh right quick handshake

449
00:29:44,279 --> 00:29:46,140
classification

450
00:29:46,140 --> 00:29:47,399
foreign

451
00:29:47,399 --> 00:29:50,539
yeah thank you

452
00:29:51,299 --> 00:29:54,059
Charles will indicate die okay thank you

453
00:29:54,059 --> 00:29:56,480
thank you

454
00:29:56,520 --> 00:29:59,159
okay perfect all right hey guys uh I

455
00:29:59,159 --> 00:30:01,140
imagine this is Jonas with a quick

456
00:30:01,140 --> 00:30:03,779
handshake classification API team and

457
00:30:03,779 --> 00:30:06,960
just to have a really quick uh or yeah

458
00:30:06,960 --> 00:30:09,899
short recap of what are the design goals

459
00:30:09,899 --> 00:30:12,179
of quick uh basically with two things we

460
00:30:12,179 --> 00:30:14,340
want to reduce the round trip times and

461
00:30:14,340 --> 00:30:17,399
optimally we have uh one-way round trip

462
00:30:17,399 --> 00:30:19,860
time and also we want to prevent the

463
00:30:19,860 --> 00:30:22,919
amplification attacks so uh the servers

464
00:30:22,919 --> 00:30:25,740
are only allowed to respond triple

465
00:30:25,740 --> 00:30:27,899
divides that the client sent to the

466
00:30:27,899 --> 00:30:31,020
server and we wanted to check whether

467
00:30:31,020 --> 00:30:33,779
during deployments actually comply with

468
00:30:33,779 --> 00:30:36,059
these design goals and obviously with

469
00:30:36,059 --> 00:30:37,200
the RFC

470
00:30:37,200 --> 00:30:40,559
and our starting point were two tools

471
00:30:40,559 --> 00:30:43,140
and we had quick reach and quiche which

472
00:30:43,140 --> 00:30:45,659
we both extended uh we extended quick

473
00:30:45,659 --> 00:30:48,000
reach by the retry support and we

474
00:30:48,000 --> 00:30:50,100
extended the keys to support all three

475
00:30:50,100 --> 00:30:53,279
TLS compression algorithms

476
00:30:53,279 --> 00:30:56,340
and in the end we wanted to have an API

477
00:30:56,340 --> 00:30:59,039
which basically uses these two tools to

478
00:30:59,039 --> 00:31:01,200
perform uh the checks we are interested

479
00:31:01,200 --> 00:31:02,760
in

480
00:31:02,760 --> 00:31:05,640
so um what do we got

481
00:31:05,640 --> 00:31:08,880
um basically we now have an API and also

482
00:31:08,880 --> 00:31:11,640
a website which uses this this API and

483
00:31:11,640 --> 00:31:14,100
you can enter any quick domain for

484
00:31:14,100 --> 00:31:16,559
example google.com and then you see the

485
00:31:16,559 --> 00:31:18,539
results how the quick handshakes behave

486
00:31:18,539 --> 00:31:21,120
so for example here now the quick

487
00:31:21,120 --> 00:31:23,399
handshake with Google takes multiple

488
00:31:23,399 --> 00:31:24,899
round trip times because of large

489
00:31:24,899 --> 00:31:26,460
certificates

490
00:31:26,460 --> 00:31:30,000
uh we have cloutra which has a slight

491
00:31:30,000 --> 00:31:33,779
amplification uh of four or a small

492
00:31:33,779 --> 00:31:35,700
amplification

493
00:31:35,700 --> 00:31:38,340
um then we also have uh the compression

494
00:31:38,340 --> 00:31:39,960
which I talked about so basically we

495
00:31:39,960 --> 00:31:43,799
show how efficient the the compression

496
00:31:43,799 --> 00:31:46,440
levels are so here in this example we

497
00:31:46,440 --> 00:31:49,679
save around 30 of data if we activate a

498
00:31:49,679 --> 00:31:52,799
certificate compression

499
00:31:52,799 --> 00:31:55,260
so in the end we have an open website

500
00:31:55,260 --> 00:31:57,179
which currently is under accessible

501
00:31:57,179 --> 00:31:59,700
under my private domain but you can also

502
00:31:59,700 --> 00:32:01,740
we are currently moving to understand

503
00:32:01,740 --> 00:32:06,240
the quake.net so uh please check out our

504
00:32:06,240 --> 00:32:08,940
tool our API and if there are any tests

505
00:32:08,940 --> 00:32:10,679
which you think are missing just talk

506
00:32:10,679 --> 00:32:14,520
with us and in the end uh we this is not

507
00:32:14,520 --> 00:32:16,380
about finger pointing we just want to

508
00:32:16,380 --> 00:32:18,419
Foster the discussions about quick

509
00:32:18,419 --> 00:32:21,600
handshakes and improve the deployments

510
00:32:21,600 --> 00:32:24,260
questions

511
00:32:27,960 --> 00:32:29,850
all right thank you very much

512
00:32:29,850 --> 00:32:35,969
[Applause]

513
00:32:42,480 --> 00:32:48,620
next up is young young automation tool

514
00:32:49,679 --> 00:32:51,779
are the presenters in the room

515
00:32:51,779 --> 00:32:54,480
yep I see

516
00:32:54,480 --> 00:32:57,500
can you hear me

517
00:32:58,500 --> 00:33:01,559
yeah I'm remote

518
00:33:01,559 --> 00:33:05,399
okay uh I'm functional from Power let me

519
00:33:05,399 --> 00:33:09,059
introduce our project yeah models to

520
00:33:09,059 --> 00:33:13,220
Automation and next please

521
00:33:13,919 --> 00:33:17,760
uh there are three modifications about

522
00:33:17,760 --> 00:33:22,860
my our project and firstly yankalaga Pro

523
00:33:22,860 --> 00:33:25,440
Wife online young customer meditation

524
00:33:25,440 --> 00:33:28,320
tool which can then data via modules

525
00:33:28,320 --> 00:33:31,760
regardless dependencies but there's no

526
00:33:31,760 --> 00:33:36,200
offline tool can do it second

527
00:33:36,200 --> 00:33:40,679
only provides some query interfaces it's

528
00:33:40,679 --> 00:33:42,960
difficult to fully meet the requirements

529
00:33:42,960 --> 00:33:45,659
of a young model of Automation and

530
00:33:45,659 --> 00:33:48,659
thirdly no two is a variable to compare

531
00:33:48,659 --> 00:33:51,620
two revisions of your model according to

532
00:33:51,620 --> 00:33:55,080
customize the compression rules our goal

533
00:33:55,080 --> 00:33:59,059
is developing a young automation tool to

534
00:33:59,059 --> 00:34:01,740
compare their models by reserving

535
00:34:01,740 --> 00:34:03,019
dependencies

536
00:34:03,019 --> 00:34:06,779
automatically and provide the product

537
00:34:06,779 --> 00:34:10,440
plugging system to all the customized

538
00:34:10,440 --> 00:34:13,320
functions for example for the youngster

539
00:34:13,320 --> 00:34:16,099
communication according to colonized

540
00:34:16,099 --> 00:34:19,619
conversion rule uh the related drugs and

541
00:34:19,619 --> 00:34:25,099
active and leave below next

542
00:34:26,460 --> 00:34:29,300
this figure

543
00:34:29,300 --> 00:34:32,460
shows the architecture of a young

544
00:34:32,460 --> 00:34:33,719
compiler

545
00:34:33,719 --> 00:34:37,918
the model to be compared as input and

546
00:34:37,918 --> 00:34:39,739
then compiler will

547
00:34:39,739 --> 00:34:43,320
search that the dependencies from a

548
00:34:43,320 --> 00:34:46,918
local recall if not found young Cabela

549
00:34:46,918 --> 00:34:50,520
will request the remote Ripple fetch the

550
00:34:50,520 --> 00:34:55,440
needle difference to a local repo and

551
00:34:55,440 --> 00:34:57,900
then after

552
00:34:57,900 --> 00:35:00,480
uh build building the young female

553
00:35:00,480 --> 00:35:03,020
contests young fellow Will

554
00:35:03,020 --> 00:35:06,800
will call the plugins to perform

555
00:35:06,800 --> 00:35:10,940
extended functions next

556
00:35:13,020 --> 00:35:15,599
uh this figure shows the workflow of

557
00:35:15,599 --> 00:35:18,140
young female accommodation plugin

558
00:35:18,140 --> 00:35:20,880
that will customize the compression

559
00:35:20,880 --> 00:35:22,579
drawers and

560
00:35:22,579 --> 00:35:25,680
two divisions of young modules aren't as

561
00:35:25,680 --> 00:35:31,560
Imports and the plugin will

562
00:35:31,640 --> 00:35:34,320
where I can compare them and get the

563
00:35:34,320 --> 00:35:35,760
differences

564
00:35:35,760 --> 00:35:40,140
under the customer azures will be

565
00:35:40,140 --> 00:35:43,200
applied on this difference and then

566
00:35:43,200 --> 00:35:47,000
output the the conversion without

567
00:35:47,000 --> 00:35:48,740
including

568
00:35:48,740 --> 00:35:53,220
compatibility adapt next

569
00:35:53,220 --> 00:35:56,660
you have one half minutes

570
00:35:56,880 --> 00:35:57,920
okay

571
00:35:57,920 --> 00:36:02,060
what do we learned

572
00:36:02,060 --> 00:36:05,339
yankovician and customize the

573
00:36:05,339 --> 00:36:07,619
compatibility Road can attempt different

574
00:36:07,619 --> 00:36:09,500
scenarios

575
00:36:09,500 --> 00:36:15,920
our next steps are listed below next

576
00:36:17,240 --> 00:36:22,560
I think our team members and we have two

577
00:36:22,560 --> 00:36:26,099
reports in GitHub if you have some some

578
00:36:26,099 --> 00:36:29,460
interesting on them and please visit any

579
00:36:29,460 --> 00:36:32,520
contribute a welcome

580
00:36:32,520 --> 00:36:35,839
thanks and oh

581
00:36:36,540 --> 00:36:38,220
thank you very much are there any

582
00:36:38,220 --> 00:36:39,839
questions

583
00:36:39,839 --> 00:36:46,040
no okay thanks thank you very much

584
00:36:49,200 --> 00:36:53,299
right there we go

585
00:36:54,359 --> 00:36:57,440
the next one is BMW

586
00:36:57,440 --> 00:37:00,599
G container benchmarking

587
00:37:00,599 --> 00:37:01,920
okay

588
00:37:01,920 --> 00:37:05,300
hello can you hear me

589
00:37:06,839 --> 00:37:08,339
uh hello everyone

590
00:37:08,339 --> 00:37:10,760
um I'm from the

591
00:37:10,760 --> 00:37:14,220
IRC from South Korea so uh our hackathon

592
00:37:14,220 --> 00:37:17,280
activities is to verify our

593
00:37:17,280 --> 00:37:19,500
consideration very much in their

594
00:37:19,500 --> 00:37:21,420
performance container infrastructure

595
00:37:21,420 --> 00:37:23,760
drive so we uh

596
00:37:23,760 --> 00:37:26,460
he's got a different considerations that

597
00:37:26,460 --> 00:37:28,099
can affect cutting a level performance

598
00:37:28,099 --> 00:37:30,900
including network access and model and

599
00:37:30,900 --> 00:37:32,280
different department configuration

600
00:37:32,280 --> 00:37:34,240
settings next slide please

601
00:37:34,240 --> 00:37:37,020
[Music]

602
00:37:37,020 --> 00:37:39,839
so in the previous cartoon we have

603
00:37:39,839 --> 00:37:43,079
already start initial tests of the pdpf

604
00:37:43,079 --> 00:37:46,320
a service model performance with the OBS

605
00:37:46,320 --> 00:37:49,380
if sdp support V switch and easy

606
00:37:49,380 --> 00:37:51,599
hackathon we continue to explore other

607
00:37:51,599 --> 00:37:54,480
variations of EPF acceleration model

608
00:37:54,480 --> 00:37:57,119
they are VDP V switch with a memory

609
00:37:57,119 --> 00:38:00,180
interface the Intel quality data plane

610
00:38:00,180 --> 00:38:03,599
with a coded I have HD plugin and a CD

611
00:38:03,599 --> 00:38:06,599
xip

612
00:38:08,040 --> 00:38:10,859
uh so this is the uh the architecture of

613
00:38:10,859 --> 00:38:14,460
the VPI sdp this week so the vpv suite

614
00:38:14,460 --> 00:38:16,619
info is a spray

615
00:38:16,619 --> 00:38:19,380
is a baby switch and it's called the

616
00:38:19,380 --> 00:38:22,740
package from the IMDb socket to the af's

617
00:38:22,740 --> 00:38:25,200
ADP promo driver for the champion

618
00:38:25,200 --> 00:38:27,480
between the V3 the container it use the

619
00:38:27,480 --> 00:38:31,940
same memory interface let's say please

620
00:38:32,700 --> 00:38:37,320
for the cndp and the Champions limited

621
00:38:37,320 --> 00:38:39,660
indicate users pay user hdb socket

622
00:38:39,660 --> 00:38:42,900
original one and the Chipmunk is

623
00:38:42,900 --> 00:38:45,720
displaying container using the their own

624
00:38:45,720 --> 00:38:48,380
communist plugin so these are plugin

625
00:38:48,380 --> 00:38:51,119
move the network device from the horse

626
00:38:51,119 --> 00:38:52,619
necklace ready to support network

627
00:38:52,619 --> 00:38:55,200
display directly attacked the network

628
00:38:55,200 --> 00:38:58,820
device support so the quad can

629
00:38:58,820 --> 00:39:03,260
socket next slide please

630
00:39:04,099 --> 00:39:07,440
for serums and Serum is the only one

631
00:39:07,440 --> 00:39:08,240
that

632
00:39:08,240 --> 00:39:11,280
utilize the EBP app for both north south

633
00:39:11,280 --> 00:39:14,339
and Eastward traffic acceleration the

634
00:39:14,339 --> 00:39:17,940
EPF at the network big drivers before

635
00:39:17,940 --> 00:39:20,820
the muscle and at the soccer layer for

636
00:39:20,820 --> 00:39:24,200
Israel next slide please

637
00:39:24,720 --> 00:39:28,440
so this is our test bets

638
00:39:28,440 --> 00:39:31,200
and so we use EPF support Nick and

639
00:39:31,200 --> 00:39:34,320
kernel with some cni that we mentioned

640
00:39:34,320 --> 00:39:38,359
interior side next side piece

641
00:39:38,640 --> 00:39:43,578
see that our configuration next type is

642
00:39:44,760 --> 00:39:46,980
this is why you learned so we compare

643
00:39:46,980 --> 00:39:51,000
OBS we host VP in a bit and cndp so VP

644
00:39:51,000 --> 00:39:53,520
outperform obvious because of the better

645
00:39:53,520 --> 00:39:56,160
performance of memory against the V host

646
00:39:56,160 --> 00:39:58,380
and the cndb auto will have different

647
00:39:58,380 --> 00:40:01,320
implementation of ETF you still cannot

648
00:40:01,320 --> 00:40:03,599
catch up the performance of PvP with

649
00:40:03,599 --> 00:40:04,980
Hyper package sign

650
00:40:04,980 --> 00:40:07,820
this service

651
00:40:08,940 --> 00:40:11,760
for the psyllium serums I have already

652
00:40:11,760 --> 00:40:13,560
published their own very much gain for

653
00:40:13,560 --> 00:40:16,859
their cni and this year you can simply

654
00:40:16,859 --> 00:40:20,579
refer to their result so the figure here

655
00:40:20,579 --> 00:40:23,220
so the most cell and Israel traffic

656
00:40:23,220 --> 00:40:27,060
acceleration using eppm on silu let's

657
00:40:27,060 --> 00:40:29,540
type in

658
00:40:30,000 --> 00:40:33,420
so for the future work we uh in finalize

659
00:40:33,420 --> 00:40:35,640
the Trap and I saw reviews we would like

660
00:40:35,640 --> 00:40:37,619
to welcome any questions comments and

661
00:40:37,619 --> 00:40:40,099
contribution to our draft to start the

662
00:40:40,099 --> 00:40:42,480
publishing adoption process

663
00:40:42,480 --> 00:40:45,260
the service

664
00:40:45,839 --> 00:40:48,000
this is our team member and we have

665
00:40:48,000 --> 00:40:51,420
project repository thank you

666
00:40:51,420 --> 00:40:54,440
thank you very much

667
00:40:57,720 --> 00:41:00,540
nice project are there any questions

668
00:41:00,540 --> 00:41:04,020
in the room no okay then I thank you for

669
00:41:04,020 --> 00:41:07,160
your presentation thanks

670
00:41:07,260 --> 00:41:14,240
next up is let's see where are we now

671
00:41:14,359 --> 00:41:16,740
satellite Network

672
00:41:16,740 --> 00:41:20,160
that's all I have for you for now but

673
00:41:20,160 --> 00:41:23,779
now we have a presenter excellent

674
00:41:28,160 --> 00:41:30,020
okay

675
00:41:30,020 --> 00:41:34,640
and Charles will indicate time okay okay

676
00:41:36,560 --> 00:41:39,300
and I will give

677
00:41:39,300 --> 00:41:42,859
me yeah okay okay

678
00:41:44,880 --> 00:41:47,880
and

679
00:41:53,780 --> 00:41:56,960
this we have two parts

680
00:41:56,960 --> 00:42:01,200
next okay and uh we have two parts of

681
00:42:01,200 --> 00:42:04,140
this work one is the capital platform of

682
00:42:04,140 --> 00:42:06,599
the simulation platform and the next is

683
00:42:06,599 --> 00:42:09,240
the uh our platform from Nanjing

684
00:42:09,240 --> 00:42:12,300
University and about the quality

685
00:42:12,300 --> 00:42:15,020
platform we have three passions

686
00:42:15,020 --> 00:42:18,020
and one is the generation of satellites

687
00:42:18,020 --> 00:42:21,480
uh the topology of the network and the

688
00:42:21,480 --> 00:42:23,880
second is we use the topology to

689
00:42:23,880 --> 00:42:27,540
calculate the routine in the N3 and the

690
00:42:27,540 --> 00:42:30,599
third part is we will give a resolution

691
00:42:30,599 --> 00:42:33,900
of the satellites

692
00:42:33,900 --> 00:42:36,200
and about the

693
00:42:36,200 --> 00:42:38,820
actual Star platform we have two parts

694
00:42:38,820 --> 00:42:40,820
one is the

695
00:42:40,820 --> 00:42:43,859
we can give our configuration and the

696
00:42:43,859 --> 00:42:45,839
basic condition we can have a solid

697
00:42:45,839 --> 00:42:48,599
topology and the next we can defect the

698
00:42:48,599 --> 00:42:54,200
seller's failure about the search okay

699
00:42:55,200 --> 00:42:58,319
okay uh our development is based on the

700
00:42:58,319 --> 00:43:02,400
uh Ubuntu links and use the pattern and

701
00:43:02,400 --> 00:43:06,599
the G and G CC okay

702
00:43:06,599 --> 00:43:10,460
and uh this is

703
00:43:10,460 --> 00:43:14,280
we have three yeah let's just introduce

704
00:43:14,280 --> 00:43:16,500
them before and

705
00:43:16,500 --> 00:43:18,780
and in the future maybe we have more

706
00:43:18,780 --> 00:43:21,960
work about the like the orbit Dynamic

707
00:43:21,960 --> 00:43:24,780
and the evaluation of the constellation

708
00:43:24,780 --> 00:43:28,579
performance and the simulation of ICT

709
00:43:28,579 --> 00:43:31,619
and other traffic performance in the

710
00:43:31,619 --> 00:43:34,079
future maybe we can do and there's a lot

711
00:43:34,079 --> 00:43:36,540
of balance and routine awesome

712
00:43:36,540 --> 00:43:39,500
look at this

713
00:43:39,720 --> 00:43:43,140
okay this is our demo result we have no

714
00:43:43,140 --> 00:43:46,520
we have three types

715
00:43:47,339 --> 00:43:49,980
and this is the actual star about the uh

716
00:43:49,980 --> 00:43:52,859
his tune about from the 19 University

717
00:43:52,859 --> 00:43:55,740
and this we have the topology Network

718
00:43:55,740 --> 00:43:58,279
management

719
00:43:59,520 --> 00:44:02,119
okay

720
00:44:02,160 --> 00:44:07,440
okay from the duties of the action we I

721
00:44:07,440 --> 00:44:09,180
think the simulation platform is very

722
00:44:09,180 --> 00:44:11,579
helpful to the solid solution Network

723
00:44:11,579 --> 00:44:16,319
and other maybe in other other area we

724
00:44:16,319 --> 00:44:19,140
can use the platform simulation another

725
00:44:19,140 --> 00:44:22,380
thing and in the future I think we will

726
00:44:22,380 --> 00:44:24,720
maybe we will have the adoption more

727
00:44:24,720 --> 00:44:26,700
routine hotels to the simulation

728
00:44:26,700 --> 00:44:29,160
platform and to the satellite networker

729
00:44:29,160 --> 00:44:30,619
and

730
00:44:30,619 --> 00:44:34,619
we have another TBR go phone yeah this

731
00:44:34,619 --> 00:44:38,940
is both and maybe we have some salad use

732
00:44:38,940 --> 00:44:41,240
case and to discuss

733
00:44:41,240 --> 00:44:45,599
in the off and maybe the topology change

734
00:44:45,599 --> 00:44:49,800
the period is a common use case and in

735
00:44:49,800 --> 00:44:51,720
the future maybe we have some courage

736
00:44:51,720 --> 00:44:56,400
with the funnel okay this is our members

737
00:44:56,400 --> 00:44:58,920
and we have an open community at GitHub

738
00:44:58,920 --> 00:45:01,740
if you have some investing and you can

739
00:45:01,740 --> 00:45:03,619
join us

740
00:45:03,619 --> 00:45:06,000
any problem

741
00:45:06,000 --> 00:45:08,960
thank you

742
00:45:11,220 --> 00:45:13,319
thank you very much

743
00:45:13,319 --> 00:45:15,960
there we go

744
00:45:15,960 --> 00:45:18,960
next

745
00:45:20,599 --> 00:45:25,260
alt BSG presentation

746
00:45:25,260 --> 00:45:28,700
it's here in the room or remote

747
00:45:33,359 --> 00:45:36,420
okay okay excellent

748
00:45:36,420 --> 00:45:38,240
you can use the arrows

749
00:45:38,240 --> 00:45:41,540
which also indicates

750
00:45:41,540 --> 00:45:45,359
good right uh thank you yep so I'm Jordi

751
00:45:45,359 --> 00:45:47,819
rajuwald I'm with Qualcomm and I'll be

752
00:45:47,819 --> 00:45:50,400
presenting our hackathon optimizing XR

753
00:45:50,400 --> 00:45:53,640
Flows In The Edge Cloud using Alton bald

754
00:45:53,640 --> 00:45:56,540
neck structure graphs

755
00:45:57,300 --> 00:46:00,180
yeah so the goal is to optimize XR flows

756
00:46:00,180 --> 00:46:01,920
the steering of XR Flows In The Edge

757
00:46:01,920 --> 00:46:04,980
cloud and the the idea of this hackathon

758
00:46:04,980 --> 00:46:07,079
is to use Alto to get the state of the

759
00:46:07,079 --> 00:46:09,119
network and complement that with

760
00:46:09,119 --> 00:46:10,680
bottleneck structure graphs which are

761
00:46:10,680 --> 00:46:12,540
currently not in the standard it's been

762
00:46:12,540 --> 00:46:14,819
discussed but it's not yet in the

763
00:46:14,819 --> 00:46:16,560
standard so it's exploratory in terms of

764
00:46:16,560 --> 00:46:19,560
being able to explore and leverage some

765
00:46:19,560 --> 00:46:21,000
of these capabilities from the DSG

766
00:46:21,000 --> 00:46:22,380
graphs

767
00:46:22,380 --> 00:46:24,839
um these are the the RCs and the

768
00:46:24,839 --> 00:46:26,880
including a draft and bond like a

769
00:46:26,880 --> 00:46:27,960
structure graphs

770
00:46:27,960 --> 00:46:30,180
um and so the the challenge here is

771
00:46:30,180 --> 00:46:33,119
about integrating end-to-end the whole

772
00:46:33,119 --> 00:46:36,599
workflow which I'm going to present next

773
00:46:36,599 --> 00:46:38,700
um yeah so that's the workflow so

774
00:46:38,700 --> 00:46:40,260
starting from a multi-domain network

775
00:46:40,260 --> 00:46:42,180
mostly The Edge Cloud which could be

776
00:46:42,180 --> 00:46:46,619
Wi-Fi 5G 4G and eventually 6G it is to

777
00:46:46,619 --> 00:46:48,180
close the loop so on the right side we

778
00:46:48,180 --> 00:46:50,220
have the host and the user equipment if

779
00:46:50,220 --> 00:46:52,380
you will uh running an XR application

780
00:46:52,380 --> 00:46:54,599
then you would have um you know some

781
00:46:54,599 --> 00:46:56,040
kind of source routing algorithm segment

782
00:46:56,040 --> 00:46:59,160
routing and then to close the loop

783
00:46:59,160 --> 00:47:01,740
um you know we have netflow or you could

784
00:47:01,740 --> 00:47:03,240
use also as flow

785
00:47:03,240 --> 00:47:05,640
then we have the computational

786
00:47:05,640 --> 00:47:07,920
bottleneck structure graphs here which

787
00:47:07,920 --> 00:47:10,859
is the what that's sort of the math and

788
00:47:10,859 --> 00:47:13,859
then we fit that into the alto server

789
00:47:13,859 --> 00:47:17,099
which is the the standard and then we

790
00:47:17,099 --> 00:47:18,780
have an auto client pulling from from

791
00:47:18,780 --> 00:47:20,280
the alpha server that information the

792
00:47:20,280 --> 00:47:21,540
state of the network and the bottleneck

793
00:47:21,540 --> 00:47:23,400
structure of the network and based on

794
00:47:23,400 --> 00:47:26,040
that we compute an optimize path that

795
00:47:26,040 --> 00:47:28,260
ensures maximal throughput while

796
00:47:28,260 --> 00:47:31,380
maintaining a latency requirement based

797
00:47:31,380 --> 00:47:33,300
on the bottleneck structure analysis and

798
00:47:33,300 --> 00:47:35,400
then we fit that into a path computation

799
00:47:35,400 --> 00:47:38,819
uh module that goes back into the source

800
00:47:38,819 --> 00:47:40,980
routing algorithm to help us steer the

801
00:47:40,980 --> 00:47:42,720
flow through the edge cloud and sort of

802
00:47:42,720 --> 00:47:44,700
at any point in time helping help it

803
00:47:44,700 --> 00:47:48,000
find the best the best path possible

804
00:47:48,000 --> 00:47:51,660
so uh yeah that's the the topology that

805
00:47:51,660 --> 00:47:53,700
we've been testing against it's a 5G

806
00:47:53,700 --> 00:47:54,680
topology

807
00:47:54,680 --> 00:47:57,720
uh it's actually extracted from an

808
00:47:57,720 --> 00:47:59,460
actual deployment in Philadelphia but

809
00:47:59,460 --> 00:48:00,780
it's uh everything is running in an

810
00:48:00,780 --> 00:48:02,940
emulation mode actually this

811
00:48:02,940 --> 00:48:05,579
um and um and here we have

812
00:48:05,579 --> 00:48:08,220
um you know there is an edge Computing

813
00:48:08,220 --> 00:48:10,200
resource here this could be this would

814
00:48:10,200 --> 00:48:13,200
be the XR server and then

815
00:48:13,200 --> 00:48:15,780
um a host running the actual application

816
00:48:15,780 --> 00:48:18,119
and then two possible paths to choose at

817
00:48:18,119 --> 00:48:19,260
any point in time based on the

818
00:48:19,260 --> 00:48:21,300
congestion dynamics of the of the

819
00:48:21,300 --> 00:48:23,220
network

820
00:48:23,220 --> 00:48:25,440
and this is the result of the demo that

821
00:48:25,440 --> 00:48:29,099
we are running uh so uh what we show

822
00:48:29,099 --> 00:48:31,200
here is um you know you start the Excel

823
00:48:31,200 --> 00:48:33,119
application it's getting getting 10

824
00:48:33,119 --> 00:48:35,220
units of bandwidth then congestion kicks

825
00:48:35,220 --> 00:48:37,740
in on that path and then while next

826
00:48:37,740 --> 00:48:39,839
structural graphs recompute in real time

827
00:48:39,839 --> 00:48:42,660
the the Dynamics of the system find that

828
00:48:42,660 --> 00:48:44,339
there's a better path that still

829
00:48:44,339 --> 00:48:46,079
maintains the latency requirements so

830
00:48:46,079 --> 00:48:49,020
and so as congestion builds up then

831
00:48:49,020 --> 00:48:50,880
eventually finds the better path and

832
00:48:50,880 --> 00:48:54,180
then switches back to to find to to

833
00:48:54,180 --> 00:48:55,980
higher throughput pass so the blue the

834
00:48:55,980 --> 00:48:58,319
blue flow here is the XR flow you know

835
00:48:58,319 --> 00:49:01,140
as congesting kicks in then uh

836
00:49:01,140 --> 00:49:02,819
eventually increases back to finding to

837
00:49:02,819 --> 00:49:05,460
reroute reroutes and finds a higher

838
00:49:05,460 --> 00:49:07,859
throughput path to maintain um you know

839
00:49:07,859 --> 00:49:09,420
at any point in time giving you the

840
00:49:09,420 --> 00:49:12,380
highest throughput available

841
00:49:12,960 --> 00:49:15,720
so what we learned uh yeah so bound next

842
00:49:15,720 --> 00:49:17,339
structures graphs as I mentioned are

843
00:49:17,339 --> 00:49:18,599
currently been discussing the alto

844
00:49:18,599 --> 00:49:19,619
working group they are not part of

845
00:49:19,619 --> 00:49:21,720
standard but this is a demo that allows

846
00:49:21,720 --> 00:49:25,680
us to sort of bring some uh some of the

847
00:49:25,680 --> 00:49:27,420
um the foundations or the understanding

848
00:49:27,420 --> 00:49:28,920
of how this would work in integrated

849
00:49:28,920 --> 00:49:30,780
end-to-end with with to close the loop

850
00:49:30,780 --> 00:49:32,160
you know integration with uh with that

851
00:49:32,160 --> 00:49:35,400
flow with um as flow and and Alto and

852
00:49:35,400 --> 00:49:37,079
the source routing algorithm

853
00:49:37,079 --> 00:49:39,119
uh the demo show that it's you know

854
00:49:39,119 --> 00:49:41,280
that's feasible to run this uh actually

855
00:49:41,280 --> 00:49:43,440
you know in real time finding the the

856
00:49:43,440 --> 00:49:45,660
you know the congestion dynamics of the

857
00:49:45,660 --> 00:49:48,780
problem uh we have actually a deployment

858
00:49:48,780 --> 00:49:50,579
of these introduction Network at the

859
00:49:50,579 --> 00:49:53,540
national research platform in the US

860
00:49:53,540 --> 00:49:56,160
uh and so the demo provides uh some

861
00:49:56,160 --> 00:49:58,260
practical uh feedback into the auto

862
00:49:58,260 --> 00:50:00,060
working group

863
00:50:00,060 --> 00:50:02,099
um the uh the idea is that bottom

864
00:50:02,099 --> 00:50:03,720
infrastructure graphs uh provide a

865
00:50:03,720 --> 00:50:05,520
compact and a scalable approach to

866
00:50:05,520 --> 00:50:06,599
incorporate traffic engineering

867
00:50:06,599 --> 00:50:08,520
information into the out of standard

868
00:50:08,520 --> 00:50:09,480
which is something that the ultra

869
00:50:09,480 --> 00:50:11,220
standard currently doesn't do but it's

870
00:50:11,220 --> 00:50:14,180
something that we're consuming

871
00:50:14,700 --> 00:50:17,819
and that's the theme uh so this is most

872
00:50:17,819 --> 00:50:21,319
people from Qualcomm uh Yale University

873
00:50:21,319 --> 00:50:24,480
Caltech uh UCSD

874
00:50:24,480 --> 00:50:27,720
um and Sichuan University and Huawei

875
00:50:27,720 --> 00:50:29,280
it's part of part of the alto working

876
00:50:29,280 --> 00:50:30,480
group

877
00:50:30,480 --> 00:50:33,260
and that's it

878
00:50:34,260 --> 00:50:39,660
[Applause]

879
00:50:39,660 --> 00:50:42,839
okay sorry

880
00:50:42,839 --> 00:50:45,859
your mask is

881
00:50:47,819 --> 00:50:51,540
up next we have

882
00:50:51,540 --> 00:50:53,520
uh let's see

883
00:50:53,520 --> 00:50:57,599
the right group over here close by

884
00:50:57,599 --> 00:50:59,720
yeah

885
00:51:00,000 --> 00:51:01,920
example

886
00:51:01,920 --> 00:51:04,700
there we go

887
00:51:05,520 --> 00:51:08,059
Charles

888
00:51:11,400 --> 00:51:13,920
okay uh yeah

889
00:51:13,920 --> 00:51:17,460
um yeah I present for right I'm a team

890
00:51:17,460 --> 00:51:19,920
um the other people that contributed to

891
00:51:19,920 --> 00:51:20,700
our

892
00:51:20,700 --> 00:51:23,220
several sub projects also listed there

893
00:51:23,220 --> 00:51:27,240
in total we had four sub-rex projects

894
00:51:27,240 --> 00:51:29,819
um the first one was about integrating

895
00:51:29,819 --> 00:51:32,339
the um platform security architecture

896
00:51:32,339 --> 00:51:35,040
for crypto interest

897
00:51:35,040 --> 00:51:37,800
um where four so uh four problems were

898
00:51:37,800 --> 00:51:40,079
worked on first of all the persistent

899
00:51:40,079 --> 00:51:42,800
storage for using PSA

900
00:51:42,800 --> 00:51:46,200
for that we have now a working pork and

901
00:51:46,200 --> 00:51:51,059
we can store AES keys in flash memory

902
00:51:51,059 --> 00:51:53,040
um then the integration of additional

903
00:51:53,040 --> 00:51:55,440
crypto backends um for that we also have

904
00:51:55,440 --> 00:51:58,740
a working park with the SD safe a secure

905
00:51:58,740 --> 00:52:01,680
element and it is possible now to switch

906
00:52:01,680 --> 00:52:05,160
between different secure elements

907
00:52:05,160 --> 00:52:08,520
then the third problem was the automatic

908
00:52:08,520 --> 00:52:10,319
selection of a crypto backend the

909
00:52:10,319 --> 00:52:13,800
pending of the hardware capabilities and

910
00:52:13,800 --> 00:52:15,240
that is now integrated into the build

911
00:52:15,240 --> 00:52:18,240
system of Riot with kconfig and make

912
00:52:18,240 --> 00:52:21,720
files and the problem of integrating the

913
00:52:21,720 --> 00:52:24,599
PSA architecture test suit was solved by

914
00:52:24,599 --> 00:52:27,000
integrating the test as a so-called Riot

915
00:52:27,000 --> 00:52:28,500
package

916
00:52:28,500 --> 00:52:31,079
um so we can now run the tests that are

917
00:52:31,079 --> 00:52:33,540
provided by um

918
00:52:33,540 --> 00:52:35,819
um the second project was to provide

919
00:52:35,819 --> 00:52:40,920
IPv6 support for uh IEEE 800 215 4E dsme

920
00:52:40,920 --> 00:52:44,099
using six lopen for that we have now a

921
00:52:44,099 --> 00:52:45,780
working implementation and the review

922
00:52:45,780 --> 00:52:48,540
process for merging that into the riot

923
00:52:48,540 --> 00:52:52,099
Mainline has started

924
00:52:52,800 --> 00:52:55,319
um then the third project we were

925
00:52:55,319 --> 00:52:58,559
working on is was a Schick plug test

926
00:52:58,559 --> 00:53:01,500
between the riot implementation which

927
00:53:01,500 --> 00:53:04,800
uses the external lipstick and openshik

928
00:53:04,800 --> 00:53:08,220
at the openshack table on Saturday we

929
00:53:08,220 --> 00:53:10,200
basically just did preparations and

930
00:53:10,200 --> 00:53:12,720
tried to find out what was possible and

931
00:53:12,720 --> 00:53:14,940
then we found out that on both sides

932
00:53:14,940 --> 00:53:17,099
with compression rules there's some

933
00:53:17,099 --> 00:53:19,980
handling that still needs work on the

934
00:53:19,980 --> 00:53:22,260
lipstick side it's basically the mapping

935
00:53:22,260 --> 00:53:24,140
between the offsets

936
00:53:24,140 --> 00:53:26,520
with abscess for example when we use

937
00:53:26,520 --> 00:53:29,660
Co-op types and when we try to compress

938
00:53:29,660 --> 00:53:32,400
Yuri components more than one Euro

939
00:53:32,400 --> 00:53:33,720
component

940
00:53:33,720 --> 00:53:36,000
that doesn't work either at the moment

941
00:53:36,000 --> 00:53:38,940
and on the openshift side uh etecs and

942
00:53:38,940 --> 00:53:41,160
blockwise options compression is not yet

943
00:53:41,160 --> 00:53:42,980
supported really

944
00:53:42,980 --> 00:53:47,220
so we agreed on some common chick rules

945
00:53:47,220 --> 00:53:51,059
um namely IPA ap6 icmp and UDP just then

946
00:53:51,059 --> 00:53:53,220
then use values based on our release

947
00:53:53,220 --> 00:53:55,920
specifications to find a common ground

948
00:53:55,920 --> 00:53:58,079
and then we did some plug testing today

949
00:53:58,079 --> 00:54:02,099
where we found out that the icmp header

950
00:54:02,099 --> 00:54:04,260
message parsing still needs some work

951
00:54:04,260 --> 00:54:07,140
and that it's probably a good idea to

952
00:54:07,140 --> 00:54:10,440
use coreconf to address to configure

953
00:54:10,440 --> 00:54:13,079
routing and neighbor The Neighbors which

954
00:54:13,079 --> 00:54:14,700
brings us to our last project for

955
00:54:14,700 --> 00:54:18,380
Quantum Riot where we now have a working

956
00:54:18,380 --> 00:54:20,059
implementation

957
00:54:20,059 --> 00:54:22,619
the discovery of available models is

958
00:54:22,619 --> 00:54:25,330
still missing and the problem

959
00:54:25,330 --> 00:54:26,480
[Music]

960
00:54:26,480 --> 00:54:29,180
that what is mandatory to implement

961
00:54:29,180 --> 00:54:32,700
where we refer to the response specs and

962
00:54:32,700 --> 00:54:34,440
how to discover the capabilities of

963
00:54:34,440 --> 00:54:36,079
constrained devices

964
00:54:36,079 --> 00:54:40,200
their response has a mechanism which is

965
00:54:40,200 --> 00:54:42,900
not available in corcoin Fiat and we

966
00:54:42,900 --> 00:54:45,240
there was some discussion to carry over

967
00:54:45,240 --> 00:54:49,020
RC mon uh over to corconf and uh yeah

968
00:54:49,020 --> 00:54:50,880
future work is then provide a pull

969
00:54:50,880 --> 00:54:52,559
request and by it

970
00:54:52,559 --> 00:54:56,059
thank you are there any questions

971
00:55:04,500 --> 00:55:06,599
thank you very much

972
00:55:06,599 --> 00:55:11,460
next we have let's see

973
00:55:11,460 --> 00:55:15,240
Riot and then SRV 6 data plane

974
00:55:15,240 --> 00:55:17,119
visibility

975
00:55:17,119 --> 00:55:19,079
there we are

976
00:55:19,079 --> 00:55:21,859
excellent

977
00:55:22,200 --> 00:55:26,359
so we can use left right

978
00:55:26,359 --> 00:55:28,500
okay very good

979
00:55:28,500 --> 00:55:30,859
uh hi everyone

980
00:55:30,859 --> 00:55:33,720
any books from swisscom and I have Alex

981
00:55:33,720 --> 00:55:36,780
I'm fine from inside University of Leon

982
00:55:36,780 --> 00:55:39,260
sorry

983
00:55:41,339 --> 00:55:43,920
okay

984
00:55:43,920 --> 00:55:46,380
yeah so it was about uh

985
00:55:46,380 --> 00:55:49,559
data plane visibility in srv6

986
00:55:49,559 --> 00:55:51,900
so basically the goal of our exercise

987
00:55:51,900 --> 00:55:55,200
was to validate and visualize to ipfix

988
00:55:55,200 --> 00:55:57,980
implementations of the

989
00:55:57,980 --> 00:56:00,900
srv6 SRH draft

990
00:56:00,900 --> 00:56:03,359
we got just in time one implementation

991
00:56:03,359 --> 00:56:06,960
for Huawei Huawei vrp and another

992
00:56:06,960 --> 00:56:12,980
implementation done by inza of the VPP

993
00:56:13,200 --> 00:56:15,059
so the first topology we built for the

994
00:56:15,059 --> 00:56:17,220
Huawei vrp uh

995
00:56:17,220 --> 00:56:21,359
topic was composed of eighth notes we

996
00:56:21,359 --> 00:56:22,200
see

997
00:56:22,200 --> 00:56:24,780
um the egress nodes on the left upper

998
00:56:24,780 --> 00:56:28,500
corner there where we configured three

999
00:56:28,500 --> 00:56:31,380
three different srv6 traffic engineering

1000
00:56:31,380 --> 00:56:34,859
policies where we push these City lists

1001
00:56:34,859 --> 00:56:36,720
which accomplished then the three

1002
00:56:36,720 --> 00:56:39,180
different colored paths which we want to

1003
00:56:39,180 --> 00:56:42,540
see then individually visualization at

1004
00:56:42,540 --> 00:56:46,160
the end of the pipeline later on

1005
00:56:46,319 --> 00:56:48,059
um yeah of course to get these flows

1006
00:56:48,059 --> 00:56:50,819
exported we had them to set up some

1007
00:56:50,819 --> 00:56:54,119
traffic across which we did from the

1008
00:56:54,119 --> 00:56:56,640
upper node there

1009
00:56:56,640 --> 00:57:00,059
uh the second topology yeah the second

1010
00:57:00,059 --> 00:57:04,079
topology we tested was uh the vpp1 uh so

1011
00:57:04,079 --> 00:57:06,900
we had the topology is a simpler one we

1012
00:57:06,900 --> 00:57:08,760
have only three nodes with a cement

1013
00:57:08,760 --> 00:57:10,619
routing policy between the first note

1014
00:57:10,619 --> 00:57:12,660
and the third one third one

1015
00:57:12,660 --> 00:57:15,059
and we are using traffic engineering to

1016
00:57:15,059 --> 00:57:18,119
send the packets uh so through the

1017
00:57:18,119 --> 00:57:20,400
topology the goal here was to

1018
00:57:20,400 --> 00:57:24,780
implementing the ipfix export uh of this

1019
00:57:24,780 --> 00:57:27,599
samaritin header so on each note at

1020
00:57:27,599 --> 00:57:29,819
ingers interface we are aggregating the

1021
00:57:29,819 --> 00:57:33,839
data for uh for each uh SM routing flow

1022
00:57:33,839 --> 00:57:38,240
and exposing it through ipfix

1023
00:57:38,839 --> 00:57:42,000
exactly so at the end of our pipeline

1024
00:57:42,000 --> 00:57:44,599
which actually had also to be uh um

1025
00:57:44,599 --> 00:57:48,359
enhanced to decode these new elements uh

1026
00:57:48,359 --> 00:57:50,400
we have this nice visualization where we

1027
00:57:50,400 --> 00:57:52,800
see uh you cannot see it but you can see

1028
00:57:52,800 --> 00:57:55,140
it if you download the PDF later on you

1029
00:57:55,140 --> 00:57:57,240
see in the first number the segment list

1030
00:57:57,240 --> 00:57:59,220
so which corresponds to the politics of

1031
00:57:59,220 --> 00:58:00,920
the three different policies we had

1032
00:58:00,920 --> 00:58:04,740
before and then for this you can just

1033
00:58:04,740 --> 00:58:08,040
raise the the path with the segment left

1034
00:58:08,040 --> 00:58:11,040
and you see also which active segment is

1035
00:58:11,040 --> 00:58:13,380
used for forwarding and of course you

1036
00:58:13,380 --> 00:58:16,079
see the peer episodes so from which node

1037
00:58:16,079 --> 00:58:19,280
this has been exported

1038
00:58:20,420 --> 00:58:23,520
yeah so to conclude what we achieved

1039
00:58:23,520 --> 00:58:26,339
through this hackathon was testing this

1040
00:58:26,339 --> 00:58:29,520
semi routing policy within different

1041
00:58:29,520 --> 00:58:33,420
topologies we validated the this ipfix

1042
00:58:33,420 --> 00:58:34,680
draft

1043
00:58:34,680 --> 00:58:39,740
and also testing the whole pipeline So

1044
00:58:39,740 --> 00:58:42,839
reading from the database the collected

1045
00:58:42,839 --> 00:58:46,799
data and a funny thing we we also tested

1046
00:58:46,799 --> 00:58:48,900
the actual use case we had two two

1047
00:58:48,900 --> 00:58:50,880
members of the team working on the

1048
00:58:50,880 --> 00:58:52,920
database and two members working on the

1049
00:58:52,920 --> 00:58:55,380
topology and the database team actually

1050
00:58:55,380 --> 00:58:58,380
saw these changes and oh there was a

1051
00:58:58,380 --> 00:59:00,480
change in the network

1052
00:59:00,480 --> 00:59:03,500
so for our next step we are working on

1053
00:59:03,500 --> 00:59:07,140
on task Telemetry which is addressed uh

1054
00:59:07,140 --> 00:59:09,119
who tries to export the delay between

1055
00:59:09,119 --> 00:59:10,859
every node

1056
00:59:10,859 --> 00:59:13,980
and then we we will try to also validate

1057
00:59:13,980 --> 00:59:17,520
this data planar visibility for srv6 uh

1058
00:59:17,520 --> 00:59:20,339
in l21 L3 evpns

1059
00:59:20,339 --> 00:59:23,760
and we just posted a new draft with

1060
00:59:23,760 --> 00:59:27,200
minor updates today

1061
00:59:27,780 --> 00:59:31,020
so what we learned so also thanks to our

1062
00:59:31,020 --> 00:59:34,799
hackathons networks our crowded team

1063
00:59:34,799 --> 00:59:39,240
where was able to invade other tables

1064
00:59:39,240 --> 00:59:42,500
and gain some power and space

1065
00:59:42,500 --> 00:59:46,020
uh as always beers are are always

1066
00:59:46,020 --> 00:59:47,640
welcome

1067
00:59:47,640 --> 00:59:52,740
and uh a bad thing is that in in our lab

1068
00:59:52,740 --> 00:59:55,500
access was a tricky thing

1069
00:59:55,500 --> 00:59:59,220
and uh yeah to wrap up that's our team

1070
00:59:59,220 --> 01:00:01,560
thank you very much

1071
01:00:01,560 --> 01:00:07,440
[Applause]

1072
01:00:07,440 --> 01:00:10,740
thank you oh thank you I want to thank

1073
01:00:10,740 --> 01:00:13,260
everyone also for keeping on the given

1074
01:00:13,260 --> 01:00:15,540
time slot for four minutes it's going

1075
01:00:15,540 --> 01:00:17,339
great thanks

1076
01:00:17,339 --> 01:00:22,619
next up we have let's see

1077
01:00:22,619 --> 01:00:25,920
it's Nesquik I've seen them somewhere

1078
01:00:25,920 --> 01:00:28,020
over there yeah there they are in this

1079
01:00:28,020 --> 01:00:30,140
Creek

1080
01:00:38,540 --> 01:00:42,119
that works the next week that's why

1081
01:00:42,119 --> 01:00:43,040
everyone

1082
01:00:43,040 --> 01:00:45,180
okay good

1083
01:00:45,180 --> 01:00:45,780
um

1084
01:00:45,780 --> 01:00:49,020
so um I'm Maxim this is Francois so

1085
01:00:49,020 --> 01:00:50,880
we're a PhD students from uh luva

1086
01:00:50,880 --> 01:00:53,760
working with our advisor officer Olivia

1087
01:00:53,760 --> 01:00:55,799
Bonaventure and so we've been working on

1088
01:00:55,799 --> 01:00:58,260
on Nesquik and Nesquik is not just a

1089
01:00:58,260 --> 01:01:01,200
cocoa powder that you've been seeing on

1090
01:01:01,200 --> 01:01:03,420
the table it's also a tool that we are

1091
01:01:03,420 --> 01:01:06,059
shaping up to do

1092
01:01:06,059 --> 01:01:08,099
um Network testing or internet

1093
01:01:08,099 --> 01:01:10,260
performance testing with quick so the

1094
01:01:10,260 --> 01:01:13,140
goal for the akaton uh was to try to do

1095
01:01:13,140 --> 01:01:17,220
quick measurements with mlab NDT so mlab

1096
01:01:17,220 --> 01:01:20,280
NDT is a tool from measurement lab if

1097
01:01:20,280 --> 01:01:22,920
you don't know this tool the easiest way

1098
01:01:22,920 --> 01:01:25,140
to access it is just Google speed test

1099
01:01:25,140 --> 01:01:27,240
and then you will find a pop-up that

1100
01:01:27,240 --> 01:01:29,160
prompts you if you would like to do

1101
01:01:29,160 --> 01:01:30,960
speed test and so that's part of the um

1102
01:01:30,960 --> 01:01:33,359
lab initiatives who is collecting which

1103
01:01:33,359 --> 01:01:37,500
is collecting so um uh speed tests from

1104
01:01:37,500 --> 01:01:39,420
all over all around the world with this

1105
01:01:39,420 --> 01:01:42,720
so our goal was to do was to try to

1106
01:01:42,720 --> 01:01:45,119
integrate quick measurements into this

1107
01:01:45,119 --> 01:01:49,200
tool and so we took a quick HTTP 3 and

1108
01:01:49,200 --> 01:01:51,420
web transport and tried to integrate all

1109
01:01:51,420 --> 01:01:54,599
that into the tools of mlab

1110
01:01:54,599 --> 01:01:55,920
so

1111
01:01:55,920 --> 01:01:57,900
um we did actually quite well so we have

1112
01:01:57,900 --> 01:02:00,000
a working prototype which integrates

1113
01:02:00,000 --> 01:02:02,339
quick go the the quick implementations

1114
01:02:02,339 --> 01:02:05,400
into the entity server

1115
01:02:05,400 --> 01:02:07,020
um and on the client side we have

1116
01:02:07,020 --> 01:02:08,520
switched from websockets to web

1117
01:02:08,520 --> 01:02:11,640
transport in the NDT JavaScript

1118
01:02:11,640 --> 01:02:13,400
client-side code

1119
01:02:13,400 --> 01:02:17,339
and so thanks to Google Chrome and

1120
01:02:17,339 --> 01:02:20,220
um and and web transfer go we were able

1121
01:02:20,220 --> 01:02:22,619
to make the two discuss together and so

1122
01:02:22,619 --> 01:02:25,520
now we have some proof of concept for

1123
01:02:25,520 --> 01:02:29,400
download and upload tests using HTTP 3

1124
01:02:29,400 --> 01:02:31,799
and quick right from the

1125
01:02:31,799 --> 01:02:33,839
um from the browser so

1126
01:02:33,839 --> 01:02:35,579
um that's just one of the first points

1127
01:02:35,579 --> 01:02:38,099
so why why are we doing this are we

1128
01:02:38,099 --> 01:02:40,880
interested into doing a quick internet

1129
01:02:40,880 --> 01:02:42,780
performance measurements because we

1130
01:02:42,780 --> 01:02:46,339
speak we can have much more precise

1131
01:02:46,339 --> 01:02:49,740
metrics about delays loss loss patterns

1132
01:02:49,740 --> 01:02:52,399
and stuff like that

1133
01:02:52,740 --> 01:02:55,559
um and then we will need to in that way

1134
01:02:55,559 --> 01:02:58,680
we will need to uh update also like how

1135
01:02:58,680 --> 01:03:00,839
we get metrics from the quick Stacks up

1136
01:03:00,839 --> 01:03:02,940
to the uh to this measurement

1137
01:03:02,940 --> 01:03:04,980
performance so look at what we can have

1138
01:03:04,980 --> 01:03:07,440
similar to TCP info

1139
01:03:07,440 --> 01:03:09,660
um and benefit from all that and to do

1140
01:03:09,660 --> 01:03:11,220
in end-to-end measurements over the

1141
01:03:11,220 --> 01:03:14,040
Internet because quick goes through any

1142
01:03:14,040 --> 01:03:16,440
path that is in the way uh so that's it

1143
01:03:16,440 --> 01:03:18,780
I guess if you're interested in that go

1144
01:03:18,780 --> 01:03:21,240
uh go come chat with us we will be

1145
01:03:21,240 --> 01:03:22,980
staying at the next quick table for for

1146
01:03:22,980 --> 01:03:25,260
a while thank you

1147
01:03:25,260 --> 01:03:28,260
foreign

1148
01:03:44,640 --> 01:03:48,740
all the impressive equipment over there

1149
01:04:02,460 --> 01:04:04,319
thank you

1150
01:04:04,319 --> 01:04:07,140
okay next two parents just arrows left

1151
01:04:07,140 --> 01:04:10,460
and right okay thank you okay

1152
01:04:10,500 --> 01:04:11,579
all right

1153
01:04:11,579 --> 01:04:14,339
hello thanks uh everyone um I'm Greg

1154
01:04:14,339 --> 01:04:17,760
white cable labs and joining me is

1155
01:04:17,760 --> 01:04:20,339
hi

1156
01:04:20,339 --> 01:04:23,040
um this is the second uh interop for the

1157
01:04:23,040 --> 01:04:26,460
l4s project at the iitf hackathon uh

1158
01:04:26,460 --> 01:04:28,680
first one was at iitf 114 in

1159
01:04:28,680 --> 01:04:30,180
Philadelphia

1160
01:04:30,180 --> 01:04:31,440
um

1161
01:04:31,440 --> 01:04:34,920
and uh l4s if you're not familiar stands

1162
01:04:34,920 --> 01:04:38,040
for low latency low loss and scalable

1163
01:04:38,040 --> 01:04:40,500
throughput it's a new congestion control

1164
01:04:40,500 --> 01:04:42,900
and active Q management architecture for

1165
01:04:42,900 --> 01:04:44,640
the internet

1166
01:04:44,640 --> 01:04:47,119
um there are three core drafts which are

1167
01:04:47,119 --> 01:04:50,339
currently in the RFC editor queue that

1168
01:04:50,339 --> 01:04:52,680
defining architecture and components

1169
01:04:52,680 --> 01:04:55,920
um there's also a fourth draft which

1170
01:04:55,920 --> 01:04:59,819
covers the congestion feedback for TCP

1171
01:04:59,819 --> 01:05:02,579
um as we referred to as act for dcn

1172
01:05:02,579 --> 01:05:04,020
there are three components to the

1173
01:05:04,020 --> 01:05:06,299
architecture the sender side congestion

1174
01:05:06,299 --> 01:05:09,000
control the congestion feedback in the

1175
01:05:09,000 --> 01:05:10,920
network of suggestion signaling in the

1176
01:05:10,920 --> 01:05:12,780
network and the feedback at the receiver

1177
01:05:12,780 --> 01:05:15,540
side to feedback that congestion signal

1178
01:05:15,540 --> 01:05:18,240
to the sender

1179
01:05:18,240 --> 01:05:20,099
so

1180
01:05:20,099 --> 01:05:22,740
so we have multiple implementations at

1181
01:05:22,740 --> 01:05:24,960
the table the long table in the back

1182
01:05:24,960 --> 01:05:27,720
there on the congestion control side we

1183
01:05:27,720 --> 01:05:31,680
have apple quick prod uh Linux TCP prog

1184
01:05:31,680 --> 01:05:34,680
Google bbr V2 is a TCP implementation

1185
01:05:34,680 --> 01:05:37,559
and two real-time congestion controllers

1186
01:05:37,559 --> 01:05:41,040
one from Nokia called RT prog and one

1187
01:05:41,040 --> 01:05:43,980
Erickson called scream and then there

1188
01:05:43,980 --> 01:05:46,079
are certainly five marking feedback

1189
01:05:46,079 --> 01:05:48,440
implementations at the receiver side

1190
01:05:48,440 --> 01:05:52,260
quick TCP and real-time

1191
01:05:52,260 --> 01:05:54,119
applications

1192
01:05:54,119 --> 01:05:56,520
there also are a couple of um some of

1193
01:05:56,520 --> 01:05:59,040
the testing we've been doing is using

1194
01:05:59,040 --> 01:06:01,280
um iperf to send TCP or quick traffic

1195
01:06:01,280 --> 01:06:04,500
but assuming testing also uses for the

1196
01:06:04,500 --> 01:06:06,599
real-time applications use video

1197
01:06:06,599 --> 01:06:09,119
streaming that adapts the video Codec

1198
01:06:09,119 --> 01:06:11,400
rate based on available capacity in the

1199
01:06:11,400 --> 01:06:13,319
path and maintaining ultra low latency

1200
01:06:13,319 --> 01:06:16,020
along the way

1201
01:06:16,020 --> 01:06:18,780
all right on the bottleneck side in the

1202
01:06:18,780 --> 01:06:20,220
network we've got four implementations

1203
01:06:20,220 --> 01:06:22,940
there wi-fi

1204
01:06:22,940 --> 01:06:26,940
and 5G and fixed network from Nokia as

1205
01:06:26,940 --> 01:06:29,940
well as a 5G Network American

1206
01:06:29,940 --> 01:06:32,460
that uh is running in the room and uh

1207
01:06:32,460 --> 01:06:37,680
we've been testing multiple links there

1208
01:06:37,680 --> 01:06:39,240
we've got done so far I'll hand it over

1209
01:06:39,240 --> 01:06:43,020
to June yeah so a lot of interrupt

1210
01:06:43,020 --> 01:06:45,539
testing has been done too much to uh

1211
01:06:45,539 --> 01:06:47,520
explain I think

1212
01:06:47,520 --> 01:06:50,220
um so with the mainly a lot of

1213
01:06:50,220 --> 01:06:52,319
congestion controls have been tested on

1214
01:06:52,319 --> 01:06:54,720
different platforms and also a lot of

1215
01:06:54,720 --> 01:06:56,400
congestion controls I've been testing

1216
01:06:56,400 --> 01:06:58,079
against each other whether they converge

1217
01:06:58,079 --> 01:06:59,640
to the same rates which is of course

1218
01:06:59,640 --> 01:07:02,280
important if multiple applications share

1219
01:07:02,280 --> 01:07:04,619
the same bottleneck that they're evenly

1220
01:07:04,619 --> 01:07:08,039
dividing the the flows and we still are

1221
01:07:08,039 --> 01:07:10,559
here for a few days more after the

1222
01:07:10,559 --> 01:07:14,339
hackathon to do further interrupt tests

1223
01:07:14,339 --> 01:07:17,940
going on maybe one of the results and to

1224
01:07:17,940 --> 01:07:19,260
show you why it's important to have

1225
01:07:19,260 --> 01:07:22,740
alpharettes on a typical 5G Network you

1226
01:07:22,740 --> 01:07:25,920
see at the top the latencies uh which

1227
01:07:25,920 --> 01:07:30,059
are with classic TCP up to 400 in

1228
01:07:30,059 --> 01:07:32,460
reality even above a second if you

1229
01:07:32,460 --> 01:07:34,799
really do downloads with detail for us

1230
01:07:34,799 --> 01:07:38,039
here we have a 99 that below a few

1231
01:07:38,039 --> 01:07:42,780
milliseconds two three uh 99.99 uh four

1232
01:07:42,780 --> 01:07:45,000
milliseconds you can see it in the

1233
01:07:45,000 --> 01:07:47,460
slides for the details

1234
01:07:47,460 --> 01:07:51,200
uh and I think then

1235
01:07:51,660 --> 01:07:52,980
sure so we have quite a number of

1236
01:07:52,980 --> 01:07:55,380
organizations participating this time

1237
01:07:55,380 --> 01:07:58,380
um this is on the slide I want to read

1238
01:07:58,380 --> 01:08:00,619
through them all but um

1239
01:08:00,619 --> 01:08:03,660
and uh in terms of actual individuals

1240
01:08:03,660 --> 01:08:06,660
listed here 21 folks that are joining us

1241
01:08:06,660 --> 01:08:08,339
most in or many in person there are a

1242
01:08:08,339 --> 01:08:09,839
few that are remote

1243
01:08:09,839 --> 01:08:12,359
um participating as well

1244
01:08:12,359 --> 01:08:14,700
and then finally to wrap up

1245
01:08:14,700 --> 01:08:16,020
um this isn't the end of

1246
01:08:16,020 --> 01:08:18,960
interoperability testing for l4s we

1247
01:08:18,960 --> 01:08:21,120
um this is actually this I mentioned the

1248
01:08:21,120 --> 01:08:23,399
second uh one at ietf there actually was

1249
01:08:23,399 --> 01:08:26,880
one in the interim between last IHF and

1250
01:08:26,880 --> 01:08:29,520
here that was hosted at cable labs in uh

1251
01:08:29,520 --> 01:08:32,819
in Denver we do plan a second one um in

1252
01:08:32,819 --> 01:08:35,580
Denver at uh in January and then we'll

1253
01:08:35,580 --> 01:08:39,060
look at scheduling uh at ihf116 at

1254
01:08:39,060 --> 01:08:40,439
Yokohama so if you're interested in

1255
01:08:40,439 --> 01:08:42,779
participating uh reach out to me

1256
01:08:42,779 --> 01:08:44,698
um and I'll help you get involved thank

1257
01:08:44,698 --> 01:08:46,818
you

1258
01:08:48,439 --> 01:08:51,660
thank you sorry you will be around for

1259
01:08:51,660 --> 01:08:54,000
the next couple of days in the year in

1260
01:08:54,000 --> 01:08:56,899
the hackathon room

1261
01:08:58,439 --> 01:09:01,859
okay excellent so people interested the

1262
01:09:01,859 --> 01:09:03,839
group will be working in that coroner

1263
01:09:03,839 --> 01:09:07,939
for the next week until Thursday

1264
01:09:08,040 --> 01:09:10,399
right

1265
01:09:12,120 --> 01:09:16,620
next up we have let's see

1266
01:09:16,620 --> 01:09:19,818
no no no no no no

1267
01:09:20,100 --> 01:09:23,219
oh sorry this almost 12 plus one the

1268
01:09:23,219 --> 01:09:25,198
open I don't know how to pronounce it

1269
01:09:25,198 --> 01:09:29,358
open c c h c

1270
01:09:31,140 --> 01:09:34,279
presenter here yeah

1271
01:09:36,479 --> 01:09:38,520
I just learned from Martin how to

1272
01:09:38,520 --> 01:09:40,319
pronounce it but I

1273
01:09:40,319 --> 01:09:42,319
don't know

1274
01:09:47,040 --> 01:09:49,560
um so this is the the work that we've

1275
01:09:49,560 --> 01:09:51,660
done at the open check table

1276
01:09:51,660 --> 01:09:54,980
in that corner over there

1277
01:09:55,199 --> 01:09:57,799
flights

1278
01:10:02,179 --> 01:10:05,580
okay just some dealing good

1279
01:10:05,580 --> 01:10:07,560
um so a little background which is shake

1280
01:10:07,560 --> 01:10:09,420
shake his header compression and

1281
01:10:09,420 --> 01:10:13,080
fragmentation for

1282
01:10:13,380 --> 01:10:16,620
um IP protocols over a very constrained

1283
01:10:16,620 --> 01:10:19,199
networks which are usually referred to

1284
01:10:19,199 --> 01:10:22,679
as LP ones you might have heard of Sig

1285
01:10:22,679 --> 01:10:25,739
vox01 for example if you know six low

1286
01:10:25,739 --> 01:10:28,020
band we're talking even more consuming

1287
01:10:28,020 --> 01:10:31,140
networks and six open we were targeting

1288
01:10:31,140 --> 01:10:34,679
payloads from 10 to 100 bytes and they

1289
01:10:34,679 --> 01:10:38,159
trades from 100 bits a second to a few

1290
01:10:38,159 --> 01:10:41,060
tens of kilobits a second that's our

1291
01:10:41,060 --> 01:10:44,040
area of operation

1292
01:10:44,040 --> 01:10:46,260
um the the work the specification work

1293
01:10:46,260 --> 01:10:48,420
is done at dlp1 working group in the

1294
01:10:48,420 --> 01:10:51,120
inter area and we've produced a few rses

1295
01:10:51,120 --> 01:10:53,699
already with more coming

1296
01:10:53,699 --> 01:10:54,420
um

1297
01:10:54,420 --> 01:10:57,360
and so uh over the years in the

1298
01:10:57,360 --> 01:10:59,340
architons and between the hackathons we

1299
01:10:59,340 --> 01:11:00,780
have developed an open source

1300
01:11:00,780 --> 01:11:04,679
implementation of this protocol

1301
01:11:04,679 --> 01:11:07,560
um in Python 3 and this project is

1302
01:11:07,560 --> 01:11:09,600
called open check

1303
01:11:09,600 --> 01:11:12,420
um and we're very happy that it was

1304
01:11:12,420 --> 01:11:15,179
adopted by the lower one Alliance as a

1305
01:11:15,179 --> 01:11:19,260
reference code to certify the IPO IPv6

1306
01:11:19,260 --> 01:11:24,540
overall R1 devices at the lower Alliance

1307
01:11:24,540 --> 01:11:25,739
um

1308
01:11:25,739 --> 01:11:28,800
okay I pressed the button and nothing

1309
01:11:28,800 --> 01:11:31,580
happened yes okay

1310
01:11:31,580 --> 01:11:35,940
suddenly so what have we achieved uh

1311
01:11:35,940 --> 01:11:38,280
over this weekend we cleaned up the the

1312
01:11:38,280 --> 01:11:40,620
GitHub repo for project merge a few

1313
01:11:40,620 --> 01:11:43,080
development branches cleaned up you know

1314
01:11:43,080 --> 01:11:46,620
a dead code Etc uh improved the

1315
01:11:46,620 --> 01:11:49,679
documentation we have a tutorial to go

1316
01:11:49,679 --> 01:11:52,860
with the the code which is a

1317
01:11:52,860 --> 01:11:55,679
step-by-step instructions on how to run

1318
01:11:55,679 --> 01:11:57,659
examples and get acquainted with the

1319
01:11:57,659 --> 01:11:59,100
code

1320
01:11:59,100 --> 01:11:59,760
um

1321
01:11:59,760 --> 01:12:02,940
we also had a newcomer experience

1322
01:12:02,940 --> 01:12:05,340
engineer but newcomer to the ietf and

1323
01:12:05,340 --> 01:12:07,800
the lp-1 work group who decided to

1324
01:12:07,800 --> 01:12:12,020
develop a new Clean Slate implementation

1325
01:12:12,020 --> 01:12:14,940
in micro python which is very handy for

1326
01:12:14,940 --> 01:12:17,120
constrained devices

1327
01:12:17,120 --> 01:12:20,520
we also had one participant designing a

1328
01:12:20,520 --> 01:12:23,640
connector between openshack and a real

1329
01:12:23,640 --> 01:12:26,880
Network server for sigfox Network so we

1330
01:12:26,880 --> 01:12:29,040
can exchange packets over a real radio

1331
01:12:29,040 --> 01:12:32,219
network and we did interrupt testing

1332
01:12:32,219 --> 01:12:34,260
with the riot team as was mentioned

1333
01:12:34,260 --> 01:12:36,060
before we exchanged a few compressed

1334
01:12:36,060 --> 01:12:39,719
packets both ways very simple it's a

1335
01:12:39,719 --> 01:12:43,380
start but good news and also working on

1336
01:12:43,380 --> 01:12:45,480
the interrupt between the micropy and

1337
01:12:45,480 --> 01:12:48,300
clean slate implementation and the

1338
01:12:48,300 --> 01:12:51,960
Legacy open check implementation

1339
01:12:51,960 --> 01:12:54,659
um and what we learned having a newcomer

1340
01:12:54,659 --> 01:12:57,540
with the rfc's uh you know the fresh

1341
01:12:57,540 --> 01:13:00,300
look is always refreshing lots of good

1342
01:13:00,300 --> 01:13:03,060
questions came up about you know how the

1343
01:13:03,060 --> 01:13:06,300
rfcs worded and also design choices

1344
01:13:06,300 --> 01:13:08,520
where did you do this this way or that

1345
01:13:08,520 --> 01:13:11,580
way and uh you know we could do things

1346
01:13:11,580 --> 01:13:13,739
in a slightly different way using the

1347
01:13:13,739 --> 01:13:15,920
same toolbox because it's a generic

1348
01:13:15,920 --> 01:13:19,800
protocol and so this led to some ideas

1349
01:13:19,800 --> 01:13:22,500
we might extend the young model do

1350
01:13:22,500 --> 01:13:24,840
little protocol extensions to do things

1351
01:13:24,840 --> 01:13:26,760
differently which might be better on a

1352
01:13:26,760 --> 01:13:29,100
very constraining device for example and

1353
01:13:29,100 --> 01:13:31,260
of course we'll bring that feedback to

1354
01:13:31,260 --> 01:13:33,360
the working group during the week or at

1355
01:13:33,360 --> 01:13:35,159
an interim later on

1356
01:13:35,159 --> 01:13:37,739
and that's it that's a team with two

1357
01:13:37,739 --> 01:13:39,480
newcomers and

1358
01:13:39,480 --> 01:13:42,960
happy to talk to you about open check if

1359
01:13:42,960 --> 01:13:45,620
you're interested

1360
01:13:45,830 --> 01:13:52,939
[Applause]

1361
01:14:01,040 --> 01:14:03,719
there we go

1362
01:14:03,719 --> 01:14:08,540
she goes project presentation

1363
01:14:16,500 --> 01:14:19,280
there we go

1364
01:14:24,900 --> 01:14:27,500
thank you

1365
01:14:28,440 --> 01:14:33,120
okay yeah so T cozy is a an

1366
01:14:33,120 --> 01:14:37,800
implementation of cozy cozy is a seaboor

1367
01:14:37,800 --> 01:14:40,380
object signing encryption a a new

1368
01:14:40,380 --> 01:14:42,719
message a new format for signing in

1369
01:14:42,719 --> 01:14:45,900
encrypting messages so tikosi stands for

1370
01:14:45,900 --> 01:14:48,679
trusted cozy uh it's a c implementation

1371
01:14:48,679 --> 01:14:53,340
of 1952 and 1953 suited for small

1372
01:14:53,340 --> 01:14:57,840
devices and small memory use it's aiming

1373
01:14:57,840 --> 01:14:59,340
for commercial quality

1374
01:14:59,340 --> 01:15:01,980
and it uses it can use either the open

1375
01:15:01,980 --> 01:15:07,519
SSL or embed TLS crypto libraries

1376
01:15:08,460 --> 01:15:10,260
so here's the

1377
01:15:10,260 --> 01:15:13,140
hackathon progress kind of relative to

1378
01:15:13,140 --> 01:15:17,219
what happened in 114 to 115 so

1379
01:15:17,219 --> 01:15:19,320
uh we

1380
01:15:19,320 --> 01:15:22,560
compared to one at 114 we we've got uh

1381
01:15:22,560 --> 01:15:26,040
Mac zero uh which is a it's a format for

1382
01:15:26,040 --> 01:15:30,840
Mac messages that is now uh kind of on

1383
01:15:30,840 --> 01:15:33,360
its a pretty well integrated into what

1384
01:15:33,360 --> 01:15:35,880
will be uh T cozy 2.0

1385
01:15:35,880 --> 01:15:38,880
uh we're supporting custom headers uh

1386
01:15:38,880 --> 01:15:41,340
that's pretty well integrated and uh

1387
01:15:41,340 --> 01:15:43,739
we're kind of halfway through uh because

1388
01:15:43,739 --> 01:15:46,620
they sign which is multiple signers and

1389
01:15:46,620 --> 01:15:48,960
uh probably halfway through maybe not

1390
01:15:48,960 --> 01:15:51,600
quite for kozay encrypt so that that's

1391
01:15:51,600 --> 01:15:55,560
because they encrypt uh with um hpke

1392
01:15:55,560 --> 01:15:58,620
which is a a bit of a moving Target at

1393
01:15:58,620 --> 01:15:59,880
this point

1394
01:15:59,880 --> 01:16:02,880
so that was our progress for the for the

1395
01:16:02,880 --> 01:16:04,320
hackathon and then

1396
01:16:04,320 --> 01:16:07,199
uh briefly uh there's other progress it

1397
01:16:07,199 --> 01:16:08,760
wasn't kind of really hackathon related

1398
01:16:08,760 --> 01:16:13,520
uh since uh 114 and that was

1399
01:16:13,520 --> 01:16:17,880
RSA in eddsa was integrated into uh

1400
01:16:17,880 --> 01:16:21,120
ticos a 1.0 that will eventually move to

1401
01:16:21,120 --> 01:16:22,980
ticos a 2.0

1402
01:16:22,980 --> 01:16:26,340
and uh just this GitHub project uh T

1403
01:16:26,340 --> 01:16:27,780
cozy so

1404
01:16:27,780 --> 01:16:29,820
happy for to use it or or contribute

1405
01:16:29,820 --> 01:16:32,400
thank you

1406
01:16:32,400 --> 01:16:40,020
[Applause]

1407
01:16:40,020 --> 01:16:42,679
all right

1408
01:16:42,679 --> 01:16:45,920
up next

1409
01:16:47,520 --> 01:16:51,780
so next is web RTC encounter media

1410
01:16:51,780 --> 01:16:54,000
here in the room ah there's

1411
01:16:54,000 --> 01:16:56,060
all right

1412
01:16:56,060 --> 01:16:59,520
you can just use the errors

1413
01:16:59,520 --> 01:17:02,100
so page down

1414
01:17:02,100 --> 01:17:03,420
okay

1415
01:17:03,420 --> 01:17:04,679
okay

1416
01:17:04,679 --> 01:17:06,600
this will be shorter isn't that much to

1417
01:17:06,600 --> 01:17:07,800
talk about

1418
01:17:07,800 --> 01:17:09,060
so

1419
01:17:09,060 --> 01:17:12,719
idea came up at the last T Pack

1420
01:17:12,719 --> 01:17:16,260
and September and WCC

1421
01:17:16,260 --> 01:17:19,380
that we should before we start defining

1422
01:17:19,380 --> 01:17:21,120
new apis we should really try to play

1423
01:17:21,120 --> 01:17:23,040
with them

1424
01:17:23,040 --> 01:17:25,020
so

1425
01:17:25,020 --> 01:17:27,360
they suggested to have take the

1426
01:17:27,360 --> 01:17:29,940
opportunity of a hackathon of course it

1427
01:17:29,940 --> 01:17:32,159
was a bit short because

1428
01:17:32,159 --> 01:17:34,920
well only I showed up here a couple of

1429
01:17:34,920 --> 01:17:36,840
others expressed interest but couldn't

1430
01:17:36,840 --> 01:17:39,300
make it in the weekend

1431
01:17:39,300 --> 01:17:42,120
but uh

1432
01:17:42,120 --> 01:17:44,760
they wanted to Define some apis

1433
01:17:44,760 --> 01:17:47,100
which is not what the IDF customer ID

1434
01:17:47,100 --> 01:17:49,080
does but uh

1435
01:17:49,080 --> 01:17:51,600
this apis manipulate stuff that is then

1436
01:17:51,600 --> 01:17:53,820
passed through IDF protocols so it kind

1437
01:17:53,820 --> 01:17:54,960
of

1438
01:17:54,960 --> 01:17:57,800
links to the ITF

1439
01:17:57,800 --> 01:18:02,040
and we got some working code done

1440
01:18:02,040 --> 01:18:05,580
this does this is totally unreadable

1441
01:18:05,580 --> 01:18:09,060
and so if you want to want to see what

1442
01:18:09,060 --> 01:18:11,280
it actually is then

1443
01:18:11,280 --> 01:18:13,860
just get a GitHub

1444
01:18:13,860 --> 01:18:16,560
that the source is available

1445
01:18:16,560 --> 01:18:19,140
I had fun and we got

1446
01:18:19,140 --> 01:18:22,080
a little bit further towards

1447
01:18:22,080 --> 01:18:24,360
figuring out what can be done

1448
01:18:24,360 --> 01:18:26,880
and what's what doesn't need to be part

1449
01:18:26,880 --> 01:18:29,699
of the specifications so

1450
01:18:29,699 --> 01:18:32,540
have fun

1451
01:18:37,380 --> 01:18:40,159
thank you Lord

1452
01:18:41,760 --> 01:18:46,940
all right so here we are in this

1453
01:18:47,520 --> 01:18:50,659
Auto visibility

1454
01:18:52,260 --> 01:18:54,960
open auto implementation press enter

1455
01:18:54,960 --> 01:18:56,219
here

1456
01:18:56,219 --> 01:18:57,960
and online

1457
01:18:57,960 --> 01:18:59,880
thank you

1458
01:18:59,880 --> 01:19:01,440
awesome

1459
01:19:01,440 --> 01:19:02,760
um so I want to talk briefly about

1460
01:19:02,760 --> 01:19:06,300
implementation deployment and LHC one

1461
01:19:06,300 --> 01:19:08,640
use cases for the open Alto project next

1462
01:19:08,640 --> 01:19:10,500
slide

1463
01:19:10,500 --> 01:19:12,659
so the open Alto project is an open

1464
01:19:12,659 --> 01:19:16,080
source implementation of iitf's Alto and

1465
01:19:16,080 --> 01:19:18,420
then we also worked on openoutso.org

1466
01:19:18,420 --> 01:19:20,640
which is a running deployment of this

1467
01:19:20,640 --> 01:19:24,679
open Alto project next slide

1468
01:19:25,199 --> 01:19:28,260
specifically open alto.org is used with

1469
01:19:28,260 --> 01:19:31,679
lhc1 a layer 3 VPN

1470
01:19:31,679 --> 01:19:36,380
for high energy physics data out of CERN

1471
01:19:36,600 --> 01:19:39,500
next slide please

1472
01:19:40,080 --> 01:19:41,580
so what we got done during this

1473
01:19:41,580 --> 01:19:43,800
hackathon was primarily focused on

1474
01:19:43,800 --> 01:19:46,380
visibility of lhc1 network routing

1475
01:19:46,380 --> 01:19:49,320
States and then we also briefly touched

1476
01:19:49,320 --> 01:19:50,420
on

1477
01:19:50,420 --> 01:19:52,860
alto-based replica sorting and

1478
01:19:52,860 --> 01:19:55,320
integrating this visibility into

1479
01:19:55,320 --> 01:19:57,540
dataflow orchestration

1480
01:19:57,540 --> 01:20:00,440
next slide please

1481
01:20:01,320 --> 01:20:02,880
so our first achievement on the

1482
01:20:02,880 --> 01:20:05,100
visibility side was geoip and

1483
01:20:05,100 --> 01:20:07,980
geo-distance and this quite simply was

1484
01:20:07,980 --> 01:20:10,320
allowing endpoints to use the standard

1485
01:20:10,320 --> 01:20:12,540
Alto endpoint cost service

1486
01:20:12,540 --> 01:20:17,780
to gain zero distance information

1487
01:20:18,300 --> 01:20:20,520
next slide please

1488
01:20:20,520 --> 01:20:22,800
please our second achievement was on

1489
01:20:22,800 --> 01:20:24,719
obtaining routing paths so there are

1490
01:20:24,719 --> 01:20:26,280
many ways to accomplish this but we

1491
01:20:26,280 --> 01:20:28,800
focused on the data plane using looking

1492
01:20:28,800 --> 01:20:31,020
glasses G2 snapshots and equivalent

1493
01:20:31,020 --> 01:20:34,820
classes next slide please

1494
01:20:35,400 --> 01:20:38,699
on the Looking Glass implementation we

1495
01:20:38,699 --> 01:20:40,199
were retrieving forwarding information

1496
01:20:40,199 --> 01:20:43,980
bases from looking glasses in CERN and

1497
01:20:43,980 --> 01:20:47,280
giant and were able to query the path

1498
01:20:47,280 --> 01:20:48,480
vector

1499
01:20:48,480 --> 01:20:52,400
through that next slide

1500
01:20:52,800 --> 01:20:55,020
for the data path sampling driven

1501
01:20:55,020 --> 01:20:57,600
implementation we were able to obtain

1502
01:20:57,600 --> 01:20:59,280
similar information using equivalent

1503
01:20:59,280 --> 01:21:01,980
classes and this was in reference to

1504
01:21:01,980 --> 01:21:04,020
National research platform

1505
01:21:04,020 --> 01:21:06,719
next slide please

1506
01:21:06,719 --> 01:21:09,659
our third achievement on which we made

1507
01:21:09,659 --> 01:21:11,940
good progress but was not completed by

1508
01:21:11,940 --> 01:21:14,659
the end of the hackathon is using open

1509
01:21:14,659 --> 01:21:17,100
alto.org as a global query orchestration

1510
01:21:17,100 --> 01:21:19,860
platform so the idea is that this allows

1511
01:21:19,860 --> 01:21:24,179
multi-domain query processes in lhc1

1512
01:21:24,179 --> 01:21:24,719
um

1513
01:21:24,719 --> 01:21:27,300
the process is generally looking up the

1514
01:21:27,300 --> 01:21:29,900
source IP in irr to obtain the source as

1515
01:21:29,900 --> 01:21:32,159
clearing the appropriate Alto server

1516
01:21:32,159 --> 01:21:34,380
associated with the source as to obtain

1517
01:21:34,380 --> 01:21:36,600
the as path and then refining that as

1518
01:21:36,600 --> 01:21:38,460
path into a general path representation

1519
01:21:38,460 --> 01:21:41,159
which I won't go into detail here but a

1520
01:21:41,159 --> 01:21:42,719
good description can be found in recent

1521
01:21:42,719 --> 01:21:44,040
working group email

1522
01:21:44,040 --> 01:21:46,020
next slide

1523
01:21:46,020 --> 01:21:47,880
one half minute

1524
01:21:47,880 --> 01:21:51,420
and then our final achievement was

1525
01:21:51,420 --> 01:21:53,820
integration of this visibility that we'd

1526
01:21:53,820 --> 01:21:56,699
established into russio Source selection

1527
01:21:56,699 --> 01:21:59,540
next slide please

1528
01:21:59,540 --> 01:22:01,860
so this first involved the configuration

1529
01:22:01,860 --> 01:22:04,679
of Alta resources to fetch information

1530
01:22:04,679 --> 01:22:07,080
about resume replicas and then

1531
01:22:07,080 --> 01:22:08,940
expressing how we needed these Russia

1532
01:22:08,940 --> 01:22:11,280
replicas to be sorted and final slide

1533
01:22:11,280 --> 01:22:13,460
please

1534
01:22:13,980 --> 01:22:17,340
and we're able to deploy this versio

1535
01:22:17,340 --> 01:22:19,739
implementation integration into mininet

1536
01:22:19,739 --> 01:22:21,420
that support that partially simulated

1537
01:22:21,420 --> 01:22:24,900
lhc1 networks and saw success in

1538
01:22:24,900 --> 01:22:26,699
disintegration

1539
01:22:26,699 --> 01:22:30,440
that's it thank you

1540
01:22:31,080 --> 01:22:34,570
thank you very much thank you Lauren

1541
01:22:34,570 --> 01:22:41,710
[Applause]

1542
01:22:44,640 --> 01:22:48,020
brings us up to

1543
01:22:50,699 --> 01:22:53,719
this one

1544
01:22:54,120 --> 01:22:56,219
I2 NSF

1545
01:22:56,219 --> 01:23:00,860
project presentation yep excellent

1546
01:23:01,320 --> 01:23:04,320
foreign

1547
01:23:19,280 --> 01:23:22,679
group so basically uh we want to propose

1548
01:23:22,679 --> 01:23:25,440
a new security facing interface for

1549
01:23:25,440 --> 01:23:30,000
itunesf for multi-domain environment

1550
01:23:30,000 --> 01:23:33,239
so this is the poster for our project

1551
01:23:33,239 --> 01:23:36,239
so basically this uh failure shows the

1552
01:23:36,239 --> 01:23:40,440
Premo of iTunes framework so

1553
01:23:40,440 --> 01:23:44,159
this time we want to implement ipsec Pro

1554
01:23:44,159 --> 01:23:47,699
protection based on sdn so basically RC

1555
01:23:47,699 --> 01:23:52,800
90 61 is for one domain IP stack upload

1556
01:23:52,800 --> 01:23:55,260
protection but this time we proposed

1557
01:23:55,260 --> 01:23:58,500
West and Easter Bond security facing

1558
01:23:58,500 --> 01:24:01,980
interface for multi-domain environment

1559
01:24:01,980 --> 01:24:05,340
so this figure you can see so we have

1560
01:24:05,340 --> 01:24:08,820
two of domain domain and B so security

1561
01:24:08,820 --> 01:24:12,300
control a carbon domain a and on the

1562
01:24:12,300 --> 01:24:14,640
other hand security control B carbon

1563
01:24:14,640 --> 01:24:17,640
domain B so basically nsf2 and another

1564
01:24:17,640 --> 01:24:20,460
three are belonging to uh two different

1565
01:24:20,460 --> 01:24:23,580
domains so we want to set up ipsec Pro

1566
01:24:23,580 --> 01:24:27,060
uh using ituna set so basically you can

1567
01:24:27,060 --> 01:24:30,120
see security uh controller B uh

1568
01:24:30,120 --> 01:24:33,540
providing um ipsec Ike so parameter

1569
01:24:33,540 --> 01:24:37,080
through security controller a and

1570
01:24:37,080 --> 01:24:41,400
finally an asset 2 also NH3 can get a

1571
01:24:41,400 --> 01:24:42,420
security

1572
01:24:42,420 --> 01:24:45,900
um related parameter can get from B so

1573
01:24:45,900 --> 01:24:49,440
this one can be done using our proposal

1574
01:24:49,440 --> 01:24:52,920
so this figure is p80

1575
01:24:52,920 --> 01:24:56,340
pure authorization database Ike and

1576
01:24:56,340 --> 01:24:59,940
security policy database we can snapshot

1577
01:24:59,940 --> 01:25:03,600
so this one or also snapshot so once uh

1578
01:25:03,600 --> 01:25:06,540
Ike wasn't to protocol exchange is done

1579
01:25:06,540 --> 01:25:10,080
and then you know ESP uh packet uh

1580
01:25:10,080 --> 01:25:13,199
traveled between two network security

1581
01:25:13,199 --> 01:25:16,380
functions so in the middle nobody can

1582
01:25:16,380 --> 01:25:18,300
catch the information because the ESP

1583
01:25:18,300 --> 01:25:21,239
packet delivered

1584
01:25:21,239 --> 01:25:25,860
okay so we got done uh so

1585
01:25:25,860 --> 01:25:29,159
during this hackathon we showed the IP

1586
01:25:29,159 --> 01:25:32,580
stack uh security Association uh can be

1587
01:25:32,580 --> 01:25:35,280
done using our itunesf extension and

1588
01:25:35,280 --> 01:25:37,739
next step we want to also implement the

1589
01:25:37,739 --> 01:25:40,260
icon list case which means security

1590
01:25:40,260 --> 01:25:43,560
control can generate uh sa parameters

1591
01:25:43,560 --> 01:25:46,440
instead of IQ button 2. so this is our

1592
01:25:46,440 --> 01:25:49,199
open source guitar this video clip and

1593
01:25:49,199 --> 01:25:51,239
this is our team thank you for your

1594
01:25:51,239 --> 01:25:52,199
attention

1595
01:25:52,199 --> 01:25:53,400
thank you

1596
01:25:53,400 --> 01:26:00,179
[Applause]

1597
01:26:00,179 --> 01:26:03,679
okay yeah

1598
01:26:07,679 --> 01:26:09,679
um

1599
01:26:10,639 --> 01:26:14,580
okay great this is efficient okay there

1600
01:26:14,580 --> 01:26:15,480
you go

1601
01:26:15,480 --> 01:26:17,520
okay hello oh this is the second

1602
01:26:17,520 --> 01:26:21,659
presentation the ipmont is a new uh Bob

1603
01:26:21,659 --> 01:26:25,020
I tried to introduce this buff

1604
01:26:25,020 --> 01:26:28,380
so the basically iPod 6 moving object

1605
01:26:28,380 --> 01:26:30,840
and networking is after ipoable working

1606
01:26:30,840 --> 01:26:35,060
group work so we want to provide the v2x

1607
01:26:35,060 --> 01:26:39,239
b2b2i among many kinds of moving beakers

1608
01:26:39,239 --> 01:26:42,840
such as a weaker thrusterial vehicle or

1609
01:26:42,840 --> 01:26:46,560
area vehicle drones also the Marine

1610
01:26:46,560 --> 01:26:49,560
Vehicles so this one based on our IP

1611
01:26:49,560 --> 01:26:51,540
wave working good problem statement this

1612
01:26:51,540 --> 01:26:55,040
is already almost ready

1613
01:26:55,040 --> 01:26:59,760
approved by IC almost okay so you can

1614
01:26:59,760 --> 01:27:03,239
see many kind of objects here so we want

1615
01:27:03,239 --> 01:27:06,780
to build the particular architecture uh

1616
01:27:06,780 --> 01:27:10,199
using many kinds of vehicles you can see

1617
01:27:10,199 --> 01:27:13,320
pedestrian terrestrial vehicle entrance

1618
01:27:13,320 --> 01:27:15,840
area vehicle and also Marine Vehicles

1619
01:27:15,840 --> 01:27:17,159
something like that so we also take

1620
01:27:17,159 --> 01:27:21,440
advantage of storage PP 5G v2x protocol

1621
01:27:21,440 --> 01:27:26,280
in addition to um OCB mode so this is a

1622
01:27:26,280 --> 01:27:27,239
poster

1623
01:27:27,239 --> 01:27:29,699
so basically uh we want to prove the

1624
01:27:29,699 --> 01:27:32,100
concept context aware navigation

1625
01:27:32,100 --> 01:27:34,020
protocol for IP based the particular

1626
01:27:34,020 --> 01:27:37,080
Network also we implemented our work

1627
01:27:37,080 --> 01:27:42,300
using omnip plus plus simulation and 5z

1628
01:27:42,300 --> 01:27:47,580
simu 5G for basically you can see so the

1629
01:27:47,580 --> 01:27:49,980
drones can communicate with each other

1630
01:27:49,980 --> 01:27:53,699
also deliver its position information to

1631
01:27:53,699 --> 01:27:56,280
server through the in the middle we have

1632
01:27:56,280 --> 01:28:00,000
a genoto b and connect to the server so

1633
01:28:00,000 --> 01:28:03,120
cover collect and then they provide some

1634
01:28:03,120 --> 01:28:04,440
efficient navigation for

1635
01:28:04,440 --> 01:28:07,320
three-dimensional drone paths

1636
01:28:07,320 --> 01:28:11,040
so what got done so we checked whether

1637
01:28:11,040 --> 01:28:15,540
our 5D stock can be implemented for uh

1638
01:28:15,540 --> 01:28:18,060
context of your navigation protocols so

1639
01:28:18,060 --> 01:28:22,020
we proved the 5G similarity can be uh

1640
01:28:22,020 --> 01:28:25,159
used also

1641
01:28:25,380 --> 01:28:29,460
so in the next step we try to implement

1642
01:28:29,460 --> 01:28:32,340
a multi-air address as configuration and

1643
01:28:32,340 --> 01:28:34,800
also loading efficiently this is open

1644
01:28:34,800 --> 01:28:37,860
source and this is a demonstration

1645
01:28:37,860 --> 01:28:39,960
so

1646
01:28:39,960 --> 01:28:43,500
um so we got some privacy free tracks is

1647
01:28:43,500 --> 01:28:47,100
a feature for ip16 networking this is my

1648
01:28:47,100 --> 01:28:48,540
team members so thank you for your

1649
01:28:48,540 --> 01:28:50,100
attention okay

1650
01:28:50,100 --> 01:28:51,170
thank you

1651
01:28:51,170 --> 01:28:57,329
[Applause]

1652
01:29:05,820 --> 01:29:09,620
and this one

1653
01:29:10,320 --> 01:29:11,460
thank you

1654
01:29:11,460 --> 01:29:14,219
post Quantum crypto

1655
01:29:14,219 --> 01:29:15,600
yeah

1656
01:29:15,600 --> 01:29:19,400
I'm correct excellent

1657
01:29:24,980 --> 01:29:29,120
you can use the arrows the arrows okay

1658
01:29:29,120 --> 01:29:33,540
okay hi I'm John Gray from entrust and

1659
01:29:33,540 --> 01:29:35,880
uh this is the first hackathon for

1660
01:29:35,880 --> 01:29:37,380
myself and I think pretty much everyone

1661
01:29:37,380 --> 01:29:38,760
on our table

1662
01:29:38,760 --> 01:29:42,120
so we had a lot of fun so our goals for

1663
01:29:42,120 --> 01:29:46,199
this event was essentially interrupt

1664
01:29:46,199 --> 01:29:50,520
testing of PQ Keys certificates pkcs 10

1665
01:29:50,520 --> 01:29:54,900
essentially x509 based artifacts and um

1666
01:29:54,900 --> 01:29:57,960
also using the new nist crypto

1667
01:29:57,960 --> 01:30:00,540
Primitives uh dilithium Falcon and

1668
01:30:00,540 --> 01:30:03,239
sphinx and also alone but also in

1669
01:30:03,239 --> 01:30:06,239
combination with uh and composite

1670
01:30:06,239 --> 01:30:09,179
combinations with traditional and uh

1671
01:30:09,179 --> 01:30:12,179
with traditional crypto as well also we

1672
01:30:12,179 --> 01:30:14,400
wanted to solve asn1 encoding issues to

1673
01:30:14,400 --> 01:30:17,880
help clarify specifications and obtain

1674
01:30:17,880 --> 01:30:20,699
experience using these new algorithms

1675
01:30:20,699 --> 01:30:23,300
and also provide an artifact repository

1676
01:30:23,300 --> 01:30:26,520
so that other people can also use these

1677
01:30:26,520 --> 01:30:28,260
artifacts for their own testing purposes

1678
01:30:28,260 --> 01:30:30,840
I just referenced some RFC drafts that

1679
01:30:30,840 --> 01:30:33,300
that we used there was a lot of them and

1680
01:30:33,300 --> 01:30:36,060
also there's been standards around x509

1681
01:30:36,060 --> 01:30:38,520
for like 25 years so we're also using

1682
01:30:38,520 --> 01:30:40,139
those

1683
01:30:40,139 --> 01:30:42,420
okay so what got done so we did create a

1684
01:30:42,420 --> 01:30:44,820
GitHub artifact repository that's

1685
01:30:44,820 --> 01:30:47,159
actually in the hackathon so you can see

1686
01:30:47,159 --> 01:30:48,600
There's the link right there it's called

1687
01:30:48,600 --> 01:30:51,080
pqc certificates so take a look

1688
01:30:51,080 --> 01:30:54,440
yeah we also defined a zip file format

1689
01:30:54,440 --> 01:30:56,340
just to make it easier for

1690
01:30:56,340 --> 01:30:58,139
interoperability testing between the

1691
01:30:58,139 --> 01:31:00,900
different artifacts that we each produce

1692
01:31:00,900 --> 01:31:03,179
um we also agreed on public and private

1693
01:31:03,179 --> 01:31:04,860
key encoding so a little bit more on

1694
01:31:04,860 --> 01:31:07,080
that later and the other thing we have

1695
01:31:07,080 --> 01:31:08,639
seven different implementations that

1696
01:31:08,639 --> 01:31:09,840
we're testing

1697
01:31:09,840 --> 01:31:11,340
um so I think this is a great success

1698
01:31:11,340 --> 01:31:14,219
for you know first time hackathon we

1699
01:31:14,219 --> 01:31:16,520
have um four vendor Implement

1700
01:31:16,520 --> 01:31:19,440
implementations and also three open

1701
01:31:19,440 --> 01:31:21,300
source implementations involved bouncy

1702
01:31:21,300 --> 01:31:24,120
castle openssl and python

1703
01:31:24,120 --> 01:31:26,639
so what we learned so there was a lot of

1704
01:31:26,639 --> 01:31:28,020
discussion in the mailing list about

1705
01:31:28,020 --> 01:31:30,300
octet string encodings but there's

1706
01:31:30,300 --> 01:31:32,940
actually it turns out there's a sec one

1707
01:31:32,940 --> 01:31:34,980
draft from a while ago that basically

1708
01:31:34,980 --> 01:31:38,580
says to to treat a bit string an octet

1709
01:31:38,580 --> 01:31:40,679
string identically so once you do that

1710
01:31:40,679 --> 01:31:42,480
it solves the problem you say four bytes

1711
01:31:42,480 --> 01:31:44,760
as well so you know over time four bytes

1712
01:31:44,760 --> 01:31:47,159
might save you know gigabytes of data so

1713
01:31:47,159 --> 01:31:49,440
anyway that was a good way to solve that

1714
01:31:49,440 --> 01:31:51,659
and we agreed with that for the private

1715
01:31:51,659 --> 01:31:54,420
key we also were having some issues with

1716
01:31:54,420 --> 01:31:56,880
octet strings wrapping octet strings we

1717
01:31:56,880 --> 01:31:58,440
decided there's no point in doing that

1718
01:31:58,440 --> 01:32:01,520
and we'll use the representation from

1719
01:32:01,520 --> 01:32:04,260
59.58 the other thing we talked about

1720
01:32:04,260 --> 01:32:07,800
was object IDs at this point there's no

1721
01:32:07,800 --> 01:32:10,320
standard object IDs we know this is

1722
01:32:10,320 --> 01:32:12,739
going to be um

1723
01:32:12,739 --> 01:32:15,300
standardizing them soon but until then

1724
01:32:15,300 --> 01:32:17,040
we need to be flexible at this point so

1725
01:32:17,040 --> 01:32:18,659
we've also need to make our

1726
01:32:18,659 --> 01:32:20,100
implementations flexible to read

1727
01:32:20,100 --> 01:32:22,260
different types of voids we also suggest

1728
01:32:22,260 --> 01:32:25,500
using an arc a version and a security

1729
01:32:25,500 --> 01:32:27,780
level so you can actually encode some

1730
01:32:27,780 --> 01:32:30,360
data into the oids and the most issues

1731
01:32:30,360 --> 01:32:32,760
found that we found anyway are not

1732
01:32:32,760 --> 01:32:35,400
related to the PQ algorithms

1733
01:32:35,400 --> 01:32:37,139
so the last slide I just wanted to wrap

1734
01:32:37,139 --> 01:32:39,600
up again this was pretty much a team of

1735
01:32:39,600 --> 01:32:42,420
first-timers there were 16 of us and

1736
01:32:42,420 --> 01:32:44,699
yeah we had a lot of fun we are planning

1737
01:32:44,699 --> 01:32:47,219
to continue to meet on a monthly basis

1738
01:32:47,219 --> 01:32:49,500
so the next meetings Monday December 5th

1739
01:32:49,500 --> 01:32:51,659
that 12 UTC time we actually have people

1740
01:32:51,659 --> 01:32:52,920
around the world all the way from

1741
01:32:52,920 --> 01:32:55,440
Australia yeah all over so if anyone

1742
01:32:55,440 --> 01:32:56,760
wants to join us you're welcome to do

1743
01:32:56,760 --> 01:32:58,920
that and we also plan to expand the

1744
01:32:58,920 --> 01:33:01,199
artifacts and go into protocols in the

1745
01:33:01,199 --> 01:33:04,580
future so thank you

1746
01:33:08,280 --> 01:33:10,679
I think good to see that was a good

1747
01:33:10,679 --> 01:33:14,360
first experience for you at hackathon

1748
01:33:19,400 --> 01:33:23,520
next one is

1749
01:33:23,520 --> 01:33:28,760
soaked stream if I pronounce it correct

1750
01:33:30,239 --> 01:33:33,239
it's a remote or on in person okay there

1751
01:33:33,239 --> 01:33:35,540
you are

1752
01:33:37,260 --> 01:33:40,260
foreign

1753
01:33:50,719 --> 01:33:52,860
I'm Stephen mcquiston from the

1754
01:33:52,860 --> 01:33:55,440
University of Glasgow and the project I

1755
01:33:55,440 --> 01:33:57,120
was working on was streamlining social

1756
01:33:57,120 --> 01:33:59,219
decision making for improved internet

1757
01:33:59,219 --> 01:34:00,960
standards so slightly different to the

1758
01:34:00,960 --> 01:34:03,380
talks we've had so far

1759
01:34:03,380 --> 01:34:06,360
now our plan at this hackathon was to

1760
01:34:06,360 --> 01:34:09,199
try and measure the sentiment on the ITF

1761
01:34:09,199 --> 01:34:12,480
itf.org list so using NLP techniques to

1762
01:34:12,480 --> 01:34:14,340
try and measure whether or not the tone

1763
01:34:14,340 --> 01:34:16,800
or the levels of toxicity on this

1764
01:34:16,800 --> 01:34:18,060
mailing list have been changing over

1765
01:34:18,060 --> 01:34:21,360
time identify people that are posting

1766
01:34:21,360 --> 01:34:24,120
negative or positive messages and and

1767
01:34:24,120 --> 01:34:26,159
basically to analyze Trends in that data

1768
01:34:26,159 --> 01:34:28,339
set

1769
01:34:28,560 --> 01:34:31,320
so what we got done is we ran all of the

1770
01:34:31,320 --> 01:34:33,659
emails sent on that list through a tool

1771
01:34:33,659 --> 01:34:36,360
called Vader and again that just gave us

1772
01:34:36,360 --> 01:34:38,639
scores in terms of how positive negative

1773
01:34:38,639 --> 01:34:41,040
or neutral each message was

1774
01:34:41,040 --> 01:34:43,320
we then started to plot the broad trends

1775
01:34:43,320 --> 01:34:46,080
that we could see in the data set both

1776
01:34:46,080 --> 01:34:48,659
over time and for individuals and and

1777
01:34:48,659 --> 01:34:50,820
answering other questions about the data

1778
01:34:50,820 --> 01:34:52,260
that we gathered

1779
01:34:52,260 --> 01:34:56,159
we developed some tooling previously and

1780
01:34:56,159 --> 01:34:58,139
during hackathon we identified places

1781
01:34:58,139 --> 01:34:59,520
where we could perhaps improve the

1782
01:34:59,520 --> 01:35:01,860
documentation or the packaging for that

1783
01:35:01,860 --> 01:35:04,280
tooling

1784
01:35:05,100 --> 01:35:07,800
so what we learned was that broadly the

1785
01:35:07,800 --> 01:35:11,100
ITF itf.org list is positive or neutral

1786
01:35:11,100 --> 01:35:13,920
so about 65 of messages are identified

1787
01:35:13,920 --> 01:35:15,719
as being positive

1788
01:35:15,719 --> 01:35:18,360
um about 15 or neutral and then the

1789
01:35:18,360 --> 01:35:20,219
remainder were identified as being

1790
01:35:20,219 --> 01:35:22,620
negative

1791
01:35:22,620 --> 01:35:24,120
um that's not really changed over time

1792
01:35:24,120 --> 01:35:26,760
it maybe feels like it has but according

1793
01:35:26,760 --> 01:35:28,920
to the data it hasn't we've got some

1794
01:35:28,920 --> 01:35:31,260
initial evidence of some slightly more

1795
01:35:31,260 --> 01:35:33,840
interesting trends

1796
01:35:33,840 --> 01:35:35,820
um again it's relatively low levels of

1797
01:35:35,820 --> 01:35:37,920
negativity that we found we found more

1798
01:35:37,920 --> 01:35:40,080
negativity on weekends

1799
01:35:40,080 --> 01:35:42,239
um we found that people using their

1800
01:35:42,239 --> 01:35:44,159
personal addresses versus perhaps

1801
01:35:44,159 --> 01:35:46,920
corporate addresses were more negative

1802
01:35:46,920 --> 01:35:48,659
and the people were strangely more

1803
01:35:48,659 --> 01:35:51,239
positive on Mondays um I don't know I

1804
01:35:51,239 --> 01:35:52,260
don't know why

1805
01:35:52,260 --> 01:35:54,320
um

1806
01:35:56,400 --> 01:35:59,340
the the uh the sort of other takeaway

1807
01:35:59,340 --> 01:36:01,199
that we had was that sentiment analysis

1808
01:36:01,199 --> 01:36:03,420
over technical uh language is pretty

1809
01:36:03,420 --> 01:36:05,340
difficult you know phrases like Drop

1810
01:36:05,340 --> 01:36:07,620
packets and kill process and abort

1811
01:36:07,620 --> 01:36:09,719
transmission are all on the face of it

1812
01:36:09,719 --> 01:36:12,300
negative using the tilling of course

1813
01:36:12,300 --> 01:36:13,980
there are fairly neutral phrases given

1814
01:36:13,980 --> 01:36:16,020
the given the context and we need to

1815
01:36:16,020 --> 01:36:17,400
work on that we need to build a lexicon

1816
01:36:17,400 --> 01:36:19,320
of these phrases that we can identify as

1817
01:36:19,320 --> 01:36:21,920
being neutral

1818
01:36:22,260 --> 01:36:25,080
now just to wrap up we had team members

1819
01:36:25,080 --> 01:36:26,699
from the University of Glasgow and from

1820
01:36:26,699 --> 01:36:28,860
Queen Mary University of London we've

1821
01:36:28,860 --> 01:36:30,300
got lots more information we've

1822
01:36:30,300 --> 01:36:32,400
published papers on various other data

1823
01:36:32,400 --> 01:36:35,520
sets around the ITF at that link if

1824
01:36:35,520 --> 01:36:37,020
you're interested in any of this there's

1825
01:36:37,020 --> 01:36:38,340
going to be a side meeting on

1826
01:36:38,340 --> 01:36:40,199
researching internet standards processes

1827
01:36:40,199 --> 01:36:42,600
on Thursday afternoon there's more

1828
01:36:42,600 --> 01:36:44,820
information at that link

1829
01:36:44,820 --> 01:36:48,060
just want to conclude with a request for

1830
01:36:48,060 --> 01:36:50,040
your help we're trying to build a tool

1831
01:36:50,040 --> 01:36:51,600
that will help working groups to

1832
01:36:51,600 --> 01:36:54,000
identify suitable reviewers for their

1833
01:36:54,000 --> 01:36:56,880
drafts that's based on context from

1834
01:36:56,880 --> 01:36:59,219
emails and from other data sources that

1835
01:36:59,219 --> 01:37:01,020
lets us know the interests of different

1836
01:37:01,020 --> 01:37:02,400
participants

1837
01:37:02,400 --> 01:37:04,500
we then scan the drafts to identify the

1838
01:37:04,500 --> 01:37:06,480
topics and then try and match the two up

1839
01:37:06,480 --> 01:37:08,580
we've got a tool that will let you look

1840
01:37:08,580 --> 01:37:10,920
at different drafts and to see if our

1841
01:37:10,920 --> 01:37:12,780
suggestions are correct so if you scan

1842
01:37:12,780 --> 01:37:15,120
that QR code or visit our website you

1843
01:37:15,120 --> 01:37:16,380
can use that tool and give us some

1844
01:37:16,380 --> 01:37:19,400
feedback on it thank you very much

1845
01:37:19,400 --> 01:37:25,260
[Applause]

1846
01:37:25,260 --> 01:37:27,600
I wondered why if you saw impact of the

1847
01:37:27,600 --> 01:37:31,400
power outage from the mailing list

1848
01:37:34,139 --> 01:37:38,040
let's see the next days

1849
01:37:38,040 --> 01:37:42,620
the vehicle on hackathon presentation

1850
01:37:45,239 --> 01:37:48,860
oh there you are yeah

1851
01:37:56,840 --> 01:37:59,540
yeah

1852
01:37:59,540 --> 01:38:02,159
great thank you

1853
01:38:02,159 --> 01:38:04,679
uh hello my name is Thomas

1854
01:38:04,679 --> 01:38:07,560
Dan and I worked on vcons

1855
01:38:07,560 --> 01:38:10,260
for this hackathon

1856
01:38:10,260 --> 01:38:12,540
I'd like to I'm sure vcons are new to

1857
01:38:12,540 --> 01:38:15,360
most of you a v-con is a Converse is a

1858
01:38:15,360 --> 01:38:18,000
container for a conversation

1859
01:38:18,000 --> 01:38:20,340
and it has four parts

1860
01:38:20,340 --> 01:38:22,020
um and I really love the sentiment

1861
01:38:22,020 --> 01:38:24,600
analysis of the last group I want to

1862
01:38:24,600 --> 01:38:27,120
remind them though that if you have a

1863
01:38:27,120 --> 01:38:29,219
model or a conclusion that you've used

1864
01:38:29,219 --> 01:38:31,860
for with customers data with people's

1865
01:38:31,860 --> 01:38:34,199
data if they take their data away you

1866
01:38:34,199 --> 01:38:36,360
have to retrain your model

1867
01:38:36,360 --> 01:38:39,540
what V cons help you do is keep track of

1868
01:38:39,540 --> 01:38:42,360
what data you used to create what

1869
01:38:42,360 --> 01:38:44,520
information Downstream for personal

1870
01:38:44,520 --> 01:38:47,100
privacy informations and to support

1871
01:38:47,100 --> 01:38:48,719
artificial intelligence and machine

1872
01:38:48,719 --> 01:38:50,880
learning

1873
01:38:50,880 --> 01:38:53,219
so what did we accomplish

1874
01:38:53,219 --> 01:38:56,880
um Dan and I uh redactions so be cons

1875
01:38:56,880 --> 01:38:58,699
carry the information of a conversation

1876
01:38:58,699 --> 01:39:00,960
and but not all the information that's

1877
01:39:00,960 --> 01:39:03,239
contained in it is appropriate for every

1878
01:39:03,239 --> 01:39:05,880
single business use for instance it

1879
01:39:05,880 --> 01:39:07,440
isn't there's no reason for a business

1880
01:39:07,440 --> 01:39:10,440
analyst to know what your birthday is

1881
01:39:10,440 --> 01:39:13,320
so uh what we did was we used vcons to

1882
01:39:13,320 --> 01:39:15,719
implement transcriptions and what we did

1883
01:39:15,719 --> 01:39:18,360
was we used open ai's whisper program to

1884
01:39:18,360 --> 01:39:19,620
transcribe it

1885
01:39:19,620 --> 01:39:22,080
then we also use Capital one's data

1886
01:39:22,080 --> 01:39:23,880
profile to identify which personal

1887
01:39:23,880 --> 01:39:26,940
information existed in the the uh the

1888
01:39:26,940 --> 01:39:29,100
transcript can we use those two those

1889
01:39:29,100 --> 01:39:32,760
two together to redact the transcript

1890
01:39:32,760 --> 01:39:34,500
um we could have used text-to-speech to

1891
01:39:34,500 --> 01:39:35,400
really

1892
01:39:35,400 --> 01:39:37,380
um depersonalize it or you wanted to

1893
01:39:37,380 --> 01:39:40,080
save something for ietf 116.

1894
01:39:40,080 --> 01:39:42,600
uh so what did we learn it basically

1895
01:39:42,600 --> 01:39:43,620
Works

1896
01:39:43,620 --> 01:39:46,139
um but we also learned that maybe

1897
01:39:46,139 --> 01:39:47,580
specifying

1898
01:39:47,580 --> 01:39:49,920
um and uh standardizing a transcription

1899
01:39:49,920 --> 01:39:52,020
object would allow us to use different

1900
01:39:52,020 --> 01:39:54,480
transcriptions engines and be able to

1901
01:39:54,480 --> 01:39:57,480
test them more reliably

1902
01:39:57,480 --> 01:39:59,699
um I want to show you uh

1903
01:39:59,699 --> 01:40:02,760
what we came out with so here's an

1904
01:40:02,760 --> 01:40:04,800
example of our of our work we use the at

1905
01:40:04,800 --> 01:40:06,719
sign for the redaction and this is

1906
01:40:06,719 --> 01:40:08,940
actually from my my particular job thank

1907
01:40:08,940 --> 01:40:11,639
you uh my my company sells new cars for

1908
01:40:11,639 --> 01:40:14,340
a living and we about a million times a

1909
01:40:14,340 --> 01:40:15,540
year we take people's personal

1910
01:40:15,540 --> 01:40:17,460
information and we're looking for better

1911
01:40:17,460 --> 01:40:20,159
ways to handle them here's a transcript

1912
01:40:20,159 --> 01:40:22,800
of a customer conversation a couple wins

1913
01:40:22,800 --> 01:40:26,159
a couple losses apparently the agent's

1914
01:40:26,159 --> 01:40:27,840
name is not private and of course that

1915
01:40:27,840 --> 01:40:30,300
it is but the but the car's name

1916
01:40:30,300 --> 01:40:32,639
apparently is considered to be private

1917
01:40:32,639 --> 01:40:34,320
and it's not

1918
01:40:34,320 --> 01:40:35,520
um but I will tell you one thing which

1919
01:40:35,520 --> 01:40:37,380
is really um the point behind the vcon

1920
01:40:37,380 --> 01:40:39,060
if you notice part of this conversation

1921
01:40:39,060 --> 01:40:41,219
he says I'm putting the volume up

1922
01:40:41,219 --> 01:40:43,560
because you're so loud

1923
01:40:43,560 --> 01:40:45,960
we have 100 agents that work all around

1924
01:40:45,960 --> 01:40:49,380
the the world and we have no idea what

1925
01:40:49,380 --> 01:40:51,900
the audio quality is between any two

1926
01:40:51,900 --> 01:40:54,600
participants in a call this told us that

1927
01:40:54,600 --> 01:40:57,120
for some reason before our agent got in

1928
01:40:57,120 --> 01:40:59,280
the phone it was a low volume call we

1929
01:40:59,280 --> 01:41:00,360
wouldn't have known that without looking

1930
01:41:00,360 --> 01:41:02,040
at the V con because we needed our

1931
01:41:02,040 --> 01:41:04,980
customer to tell us that

1932
01:41:04,980 --> 01:41:07,440
okay so for more information we have a

1933
01:41:07,440 --> 01:41:09,060
mailing list we've just submitted our

1934
01:41:09,060 --> 01:41:11,400
internet draft uh we're going to be at

1935
01:41:11,400 --> 01:41:14,280
the heart RFC later on today uh but the

1936
01:41:14,280 --> 01:41:16,020
best one is the vikon bar buff it's

1937
01:41:16,020 --> 01:41:17,639
going to be on Thursday if you're

1938
01:41:17,639 --> 01:41:19,800
thirsty or interested in vcons or just

1939
01:41:19,800 --> 01:41:22,500
thirsty come visit us at the uh at the

1940
01:41:22,500 --> 01:41:25,280
buff thank you

1941
01:41:25,320 --> 01:41:25,730
foreign

1942
01:41:25,730 --> 01:41:31,099
[Applause]

1943
01:41:34,340 --> 01:41:37,520
let's see

1944
01:41:37,800 --> 01:41:41,400
did he gone and okay

1945
01:41:41,400 --> 01:41:44,179
ntp

1946
01:41:44,460 --> 01:41:47,179
love it

1947
01:41:53,580 --> 01:41:58,080
you can use the arrows yeah

1948
01:41:58,080 --> 01:42:02,340
hello I'm David we spend together with a

1949
01:42:02,340 --> 01:42:04,560
few other people at the ntp table the

1950
01:42:04,560 --> 01:42:08,820
weekend uh working towards ntp uh the

1951
01:42:08,820 --> 01:42:12,300
plan was mainly to work towards ntpv5

1952
01:42:12,300 --> 01:42:15,080
um focusing on for now experimental

1953
01:42:15,080 --> 01:42:17,580
implementation see if we the

1954
01:42:17,580 --> 01:42:18,719
implementations we have are

1955
01:42:18,719 --> 01:42:21,540
interoperable and

1956
01:42:21,540 --> 01:42:24,600
see also what technical issues we still

1957
01:42:24,600 --> 01:42:29,040
run into in the draft as it stands

1958
01:42:29,040 --> 01:42:29,699
um

1959
01:42:29,699 --> 01:42:33,000
so what we've got done there is now to

1960
01:42:33,000 --> 01:42:35,400
two experimental implementations that

1961
01:42:35,400 --> 01:42:39,239
both are verified and drop horrible yay

1962
01:42:39,239 --> 01:42:42,300
um we did some work on draft

1963
01:42:42,300 --> 01:42:45,420
identification for ntpv5 so that once we

1964
01:42:45,420 --> 01:42:47,460
start to make a lot of revisions to

1965
01:42:47,460 --> 01:42:49,560
these drafts we can keep track which

1966
01:42:49,560 --> 01:42:52,199
implementations we use which drafts and

1967
01:42:52,199 --> 01:42:55,020
which servers you switch drafts so

1968
01:42:55,020 --> 01:42:57,540
that's nice uh We've identified a few

1969
01:42:57,540 --> 01:43:01,080
minor bugs in uh particularly the ntpd

1970
01:43:01,080 --> 01:43:04,619
RS implementation of nwv5 and we've had

1971
01:43:04,619 --> 01:43:06,119
a lot of discussions on time scales and

1972
01:43:06,119 --> 01:43:08,219
leap seconds because those are always

1973
01:43:08,219 --> 01:43:10,080
difficult

1974
01:43:10,080 --> 01:43:12,600
um there were two main takeaways that

1975
01:43:12,600 --> 01:43:16,619
we've got from the weekend that is that

1976
01:43:16,619 --> 01:43:18,780
time scale offshots will need a little

1977
01:43:18,780 --> 01:43:20,340
bit more attention particularly around

1978
01:43:20,340 --> 01:43:24,300
ut1 again because ut1 is currently

1979
01:43:24,300 --> 01:43:26,340
defined as being always within a second

1980
01:43:26,340 --> 01:43:30,060
of UTC but leap seconds may or may not

1981
01:43:30,060 --> 01:43:32,040
go away in the future and at that point

1982
01:43:32,040 --> 01:43:33,900
time differences might become too big

1983
01:43:33,900 --> 01:43:36,659
for the current data types and we've

1984
01:43:36,659 --> 01:43:39,360
identified that we still need to work a

1985
01:43:39,360 --> 01:43:41,280
little bit on the because of that

1986
01:43:41,280 --> 01:43:44,100
packaged mechanism for ntpv5 because

1987
01:43:44,100 --> 01:43:45,420
currently

1988
01:43:45,420 --> 01:43:47,460
um there's not sufficient mechanism for

1989
01:43:47,460 --> 01:43:50,520
that in the specification

1990
01:43:50,520 --> 01:43:51,420
um

1991
01:43:51,420 --> 01:43:54,420
so these are the people who worked on uh

1992
01:43:54,420 --> 01:43:56,880
the ntp stuff this weekend and some

1993
01:43:56,880 --> 01:43:59,520
links to both the nttp 5 draft and the

1994
01:43:59,520 --> 01:44:02,699
two experimental implementations are

1995
01:44:02,699 --> 01:44:05,178
there any questions

1996
01:44:06,420 --> 01:44:08,430
good

1997
01:44:08,430 --> 01:44:13,980
[Applause]

1998
01:44:13,980 --> 01:44:17,718
right so

1999
01:44:19,800 --> 01:44:24,060
um yeah erasing the ends

2000
01:44:24,060 --> 01:44:28,760
um the one tax API presentation

2001
01:44:28,980 --> 01:44:32,119
that's remote or

2002
01:44:32,119 --> 01:44:35,360
in person

2003
01:44:36,960 --> 01:44:40,920
all right can you hear me remote okay

2004
01:44:40,920 --> 01:44:42,480
okay

2005
01:44:42,480 --> 01:44:45,780
um so give a brief overview of some

2006
01:44:45,780 --> 01:44:47,400
stuff I looked at this weekend um next

2007
01:44:47,400 --> 01:44:49,759
slide please

2008
01:44:50,520 --> 01:44:56,040
so looking at RFC 8032 and

2009
01:44:56,040 --> 01:44:57,600
um one of the issues raised from the

2010
01:44:57,600 --> 01:45:00,000
last hackathon is that has been

2011
01:45:00,000 --> 01:45:02,699
suggested a new series of test vectors

2012
01:45:02,699 --> 01:45:06,900
which might give different results with

2013
01:45:06,900 --> 01:45:11,340
different implementations of adsa

2014
01:45:11,340 --> 01:45:14,360
next slide please

2015
01:45:15,380 --> 01:45:17,100
so

2016
01:45:17,100 --> 01:45:20,460
ideas to look at different libraries and

2017
01:45:20,460 --> 01:45:23,159
I guess this weekend I was just able to

2018
01:45:23,159 --> 01:45:24,619
look at NaCl

2019
01:45:24,619 --> 01:45:27,300
and there's been previous work on a port

2020
01:45:27,300 --> 01:45:30,239
of NaCl to JavaScript

2021
01:45:30,239 --> 01:45:30,900
um

2022
01:45:30,900 --> 01:45:32,580
and also found a few other libraries and

2023
01:45:32,580 --> 01:45:34,440
I guess one was mentioned earlier today

2024
01:45:34,440 --> 01:45:37,260
so if you look at that as well

2025
01:45:37,260 --> 01:45:40,040
um next slide please

2026
01:45:41,040 --> 01:45:44,400
and so I found is that uh NSL

2027
01:45:44,400 --> 01:45:46,619
implementation and C professional one

2028
01:45:46,619 --> 01:45:48,780
and the port to JavaScript pass and fill

2029
01:45:48,780 --> 01:45:51,119
the same tests

2030
01:45:51,119 --> 01:45:53,780
um next slide

2031
01:45:55,380 --> 01:45:57,360
and that's it

2032
01:45:57,360 --> 01:46:00,600
um so this is the neurotomy progress to

2033
01:46:00,600 --> 01:46:05,699
try and update this uh RFC thank you

2034
01:46:05,699 --> 01:46:08,340
thank you for your presentation thanks

2035
01:46:08,340 --> 01:46:13,499
[Applause]

2036
01:46:21,719 --> 01:46:23,840
um next one is

2037
01:46:23,840 --> 01:46:29,219
webrtc encoded the media presentation

2038
01:46:29,219 --> 01:46:31,760
remote

2039
01:46:32,460 --> 01:46:34,920
okay it's it's jumped to the to the

2040
01:46:34,920 --> 01:46:37,679
bottom line yeah

2041
01:46:37,679 --> 01:46:41,960
it's yours Harold okay

2042
01:46:42,239 --> 01:46:46,040
then we go to

2043
01:46:46,619 --> 01:46:49,440
let's see

2044
01:46:49,440 --> 01:46:52,519
no oh just

2045
01:46:55,080 --> 01:46:57,559
okay

2046
01:46:58,320 --> 01:47:00,600
it was a presentation without a title

2047
01:47:00,600 --> 01:47:05,540
probably uh you know sorry

2048
01:47:05,580 --> 01:47:09,540
okay next up is

2049
01:47:09,540 --> 01:47:12,540
okay

2050
01:47:14,040 --> 01:47:18,060
I think we have this already

2051
01:47:18,060 --> 01:47:22,699
okay okay so there's some doublers

2052
01:47:23,840 --> 01:47:27,199
hackathon this

2053
01:47:30,119 --> 01:47:33,739
okay so this is

2054
01:47:33,900 --> 01:47:36,960
yeah so there are some

2055
01:47:36,960 --> 01:47:40,320
some doubles here yeah I have one

2056
01:47:40,320 --> 01:47:42,300
tested TLS

2057
01:47:42,300 --> 01:47:44,280
presentation

2058
01:47:44,280 --> 01:47:45,659
yeah

2059
01:47:45,659 --> 01:47:48,138
okay

2060
01:48:02,340 --> 01:48:04,320
excellent yeah

2061
01:48:04,320 --> 01:48:07,440
you can use the arrows

2062
01:48:07,440 --> 01:48:10,440
great so uh I wanted to give a very

2063
01:48:10,440 --> 01:48:13,619
quick update on our work on a

2064
01:48:13,619 --> 01:48:17,520
testiculous so at the intersection of

2065
01:48:17,520 --> 01:48:20,219
yes for the bus uh the intersection of

2066
01:48:20,219 --> 01:48:22,860
rats and TLS working groups so we're

2067
01:48:22,860 --> 01:48:25,320
trying to introduce a new TLS extension

2068
01:48:25,320 --> 01:48:27,540
to add support for

2069
01:48:27,540 --> 01:48:29,820
attestation evidence and results as

2070
01:48:29,820 --> 01:48:33,360
first class credentials in TLS so

2071
01:48:33,360 --> 01:48:36,540
instead of x59 certificates

2072
01:48:36,540 --> 01:48:38,280
um our goal is to

2073
01:48:38,280 --> 01:48:39,960
support both

2074
01:48:39,960 --> 01:48:42,840
um background check and passport models

2075
01:48:42,840 --> 01:48:46,080
and to support both sides of the TLs

2076
01:48:46,080 --> 01:48:47,820
handshake to be able to adjust

2077
01:48:47,820 --> 01:48:50,820
themselves for Authentication

2078
01:48:50,820 --> 01:48:53,820
but for for the proof of concept that

2079
01:48:53,820 --> 01:48:56,159
we're actually working on we focus

2080
01:48:56,159 --> 01:48:58,380
mostly on the clients investing

2081
01:48:58,380 --> 01:48:59,480
themselves

2082
01:48:59,480 --> 01:49:03,060
and using the station

2083
01:49:03,060 --> 01:49:07,560
evidence as the credentials so we've

2084
01:49:07,560 --> 01:49:10,199
been working on a free funds essentially

2085
01:49:10,199 --> 01:49:13,739
so the first part is adding support

2086
01:49:13,739 --> 01:49:16,619
in embed TLS for the handshake so

2087
01:49:16,619 --> 01:49:18,540
trying to bring it up to speed with our

2088
01:49:18,540 --> 01:49:19,980
with our draft

2089
01:49:19,980 --> 01:49:22,920
then on the route of trust side we're

2090
01:49:22,920 --> 01:49:25,139
trying to use the TPM and we're trying

2091
01:49:25,139 --> 01:49:26,040
to

2092
01:49:26,040 --> 01:49:28,860
adapt parsec to produce the the correct

2093
01:49:28,860 --> 01:49:30,560
type of evidence

2094
01:49:30,560 --> 01:49:33,480
and then on the verifier side we're

2095
01:49:33,480 --> 01:49:36,540
trying to use Verizon and adding support

2096
01:49:36,540 --> 01:49:40,020
for um for the same kind of formats uh

2097
01:49:40,020 --> 01:49:42,450
that parsec is producing

2098
01:49:42,450 --> 01:49:44,040
[Music]

2099
01:49:44,040 --> 01:49:47,219
yeah so what we've learned mostly is

2100
01:49:47,219 --> 01:49:50,280
that we had some gaps in some of our

2101
01:49:50,280 --> 01:49:53,100
formats for example for in the in the

2102
01:49:53,100 --> 01:49:55,800
evidence we needed to include some

2103
01:49:55,800 --> 01:49:57,960
inbound reference to the verification

2104
01:49:57,960 --> 01:49:59,580
key the testing key

2105
01:49:59,580 --> 01:50:02,159
and also uh the interface between

2106
01:50:02,159 --> 01:50:06,480
Verizon and Matt TLS we needed to embed

2107
01:50:06,480 --> 01:50:08,900
some sort of

2108
01:50:08,900 --> 01:50:11,880
that's going to be used in our in the

2109
01:50:11,880 --> 01:50:13,440
TLs handshake

2110
01:50:13,440 --> 01:50:17,520
so yeah that's that's something to to do

2111
01:50:17,520 --> 01:50:20,600
and change the documentation as well

2112
01:50:20,600 --> 01:50:23,940
and yeah that's about it this this is

2113
01:50:23,940 --> 01:50:26,520
our team and we're trying to Harbor this

2114
01:50:26,520 --> 01:50:28,080
under the confidential Computing

2115
01:50:28,080 --> 01:50:29,699
Consortium

2116
01:50:29,699 --> 01:50:32,239
thank you

2117
01:50:36,840 --> 01:50:39,780
thank you so this is the final

2118
01:50:39,780 --> 01:50:42,300
presentation we have in the in the meter

2119
01:50:42,300 --> 01:50:44,760
Echo did we miss a present project

2120
01:50:44,760 --> 01:50:47,480
presentation

2121
01:50:47,940 --> 01:50:50,460
no okay

2122
01:50:50,460 --> 01:50:54,480
then I'll ask Charles to

2123
01:50:54,480 --> 01:50:57,440
the closing

2124
01:50:58,679 --> 01:51:00,840
I think

2125
01:51:00,840 --> 01:51:03,860
you want to go here

2126
01:51:11,119 --> 01:51:14,520
okay uh great well well thank you

2127
01:51:14,520 --> 01:51:16,139
everyone for those great presentations

2128
01:51:16,139 --> 01:51:18,960
been a fantastic job running through

2129
01:51:18,960 --> 01:51:20,820
them all uh may have been a record

2130
01:51:20,820 --> 01:51:23,940
number I'll have to go in and check our

2131
01:51:23,940 --> 01:51:27,300
previous totals but uh really appreciate

2132
01:51:27,300 --> 01:51:29,219
um all of you joining the hackathon all

2133
01:51:29,219 --> 01:51:31,380
the great work you did and and sharing

2134
01:51:31,380 --> 01:51:33,860
your results that was really fantastic

2135
01:51:33,860 --> 01:51:36,239
another thing I'd like to invite you to

2136
01:51:36,239 --> 01:51:39,900
do is tomorrow we have hack demo happy

2137
01:51:39,900 --> 01:51:44,219
hour it's from six to seven it'll be in

2138
01:51:44,219 --> 01:51:46,320
this room I think this room won't be

2139
01:51:46,320 --> 01:51:48,420
quite as large it'll be divided up but

2140
01:51:48,420 --> 01:51:51,600
we'll have some space here with tables

2141
01:51:51,600 --> 01:51:54,440
we'll have a cash bar

2142
01:51:54,440 --> 01:51:57,360
and so what you do is you sign up and

2143
01:51:57,360 --> 01:52:00,000
then you'll get some space where you're

2144
01:52:00,000 --> 01:52:02,840
welcome to set up uh laptops whatever

2145
01:52:02,840 --> 01:52:05,639
signboards and you can talk to people

2146
01:52:05,639 --> 01:52:08,400
about your projects in more detail right

2147
01:52:08,400 --> 01:52:10,380
you'll have a whole hour where you can

2148
01:52:10,380 --> 01:52:12,300
go a more in-depth conversation about

2149
01:52:12,300 --> 01:52:14,520
what you did and and discuss with them

2150
01:52:14,520 --> 01:52:17,219
some of the finer points around it so I

2151
01:52:17,219 --> 01:52:19,560
encourage any of you who are able and

2152
01:52:19,560 --> 01:52:21,480
wanting to to do that to take advantage

2153
01:52:21,480 --> 01:52:24,300
of that opportunity uh we usually get at

2154
01:52:24,300 --> 01:52:26,460
least 10 or so teams sign up and have a

2155
01:52:26,460 --> 01:52:28,800
good crowd of people coming through some

2156
01:52:28,800 --> 01:52:31,679
of who participated in the hackathon but

2157
01:52:31,679 --> 01:52:33,540
a lot of them who who aren't here who

2158
01:52:33,540 --> 01:52:35,639
are just arriving now and and maybe

2159
01:52:35,639 --> 01:52:38,340
heard about what you were doing so

2160
01:52:38,340 --> 01:52:39,900
um it usually ends up being a really

2161
01:52:39,900 --> 01:52:41,280
good opportunity a really good

2162
01:52:41,280 --> 01:52:43,139
experience

2163
01:52:43,139 --> 01:52:45,239
the other thing uh I think you heard the

2164
01:52:45,239 --> 01:52:48,000
l4s team is going to remain with their

2165
01:52:48,000 --> 01:52:50,159
stuff set up and they'll be continuing

2166
01:52:50,159 --> 01:52:52,500
to do some work during the week all of

2167
01:52:52,500 --> 01:52:54,179
you are welcome to do that we'll have

2168
01:52:54,179 --> 01:52:56,520
space in this room

2169
01:52:56,520 --> 01:52:58,980
um set up kind of as the the ITF Lounge

2170
01:52:58,980 --> 01:53:00,840
but also as the code Lounge a part of it

2171
01:53:00,840 --> 01:53:03,360
will be kind of separated off we'll make

2172
01:53:03,360 --> 01:53:05,699
sure we have ample power and whatnot for

2173
01:53:05,699 --> 01:53:08,460
you to come down uh if you want to you

2174
01:53:08,460 --> 01:53:11,040
can you don't need to reserve space or

2175
01:53:11,040 --> 01:53:14,460
anything like that but there is a a sign

2176
01:53:14,460 --> 01:53:16,440
up board where you can just advertise to

2177
01:53:16,440 --> 01:53:18,780
everyone else but when you plan to be

2178
01:53:18,780 --> 01:53:20,880
here just to help coordinate schedules a

2179
01:53:20,880 --> 01:53:23,639
bit so you can go to the the webpage

2180
01:53:23,639 --> 01:53:25,619
that's there you can sign up and you're

2181
01:53:25,619 --> 01:53:27,780
also free just to pop down here anytime

2182
01:53:27,780 --> 01:53:30,840
so that'll continue throughout the week

2183
01:53:30,840 --> 01:53:33,800
Monday through Friday

2184
01:53:35,600 --> 01:53:38,699
uh then uh mentioned this before but

2185
01:53:38,699 --> 01:53:40,619
also wanted to say it again we really do

2186
01:53:40,619 --> 01:53:43,260
appreciate our sponsors I think I know I

2187
01:53:43,260 --> 01:53:44,760
had many people tell me hey you know

2188
01:53:44,760 --> 01:53:46,679
like the the food and beverages here

2189
01:53:46,679 --> 01:53:48,239
that was really great they appreciated

2190
01:53:48,239 --> 01:53:50,110
that uh

2191
01:53:50,110 --> 01:53:56,460
[Applause]

2192
01:53:56,460 --> 01:53:59,699
so you know thanks to the uh

2193
01:53:59,699 --> 01:54:00,360
um

2194
01:54:00,360 --> 01:54:02,940
our our sponsors for that we were able

2195
01:54:02,940 --> 01:54:04,739
to to make that happen I think we all

2196
01:54:04,739 --> 01:54:07,320
appreciated it and for each hackathon we

2197
01:54:07,320 --> 01:54:10,500
always uh need new sponsors or are

2198
01:54:10,500 --> 01:54:12,119
looking for for new and additional

2199
01:54:12,119 --> 01:54:14,219
sponsors as you can see here we're able

2200
01:54:14,219 --> 01:54:15,900
to have more than one that we have

2201
01:54:15,900 --> 01:54:18,300
sponsorship at different levels

2202
01:54:18,300 --> 01:54:20,820
um so that's all very appreciated and

2203
01:54:20,820 --> 01:54:23,760
enables us to continue to to do this and

2204
01:54:23,760 --> 01:54:26,760
and to have a nice setup and all that so

2205
01:54:26,760 --> 01:54:28,860
um please encourage if you work for an

2206
01:54:28,860 --> 01:54:30,960
employer or anyone else who who might be

2207
01:54:30,960 --> 01:54:32,340
able to sponsor us in the future that'd

2208
01:54:32,340 --> 01:54:34,520
be great

2209
01:54:34,520 --> 01:54:38,040
and I want to give an early reminder for

2210
01:54:38,040 --> 01:54:40,320
the next opportunity the next hackathon

2211
01:54:40,320 --> 01:54:45,119
it'll be uh in Yokohama so what I have

2212
01:54:45,119 --> 01:54:47,100
up here are the dates of the entire iitf

2213
01:54:47,100 --> 01:54:49,080
meeting I guess uh the Saturday and the

2214
01:54:49,080 --> 01:54:50,940
Sunday it will be the hackathon so the

2215
01:54:50,940 --> 01:54:54,780
25th 26th that weekend of March uh maybe

2216
01:54:54,780 --> 01:54:57,239
mark your calendars and start planning

2217
01:54:57,239 --> 01:54:59,940
your uh your time so that you can you

2218
01:54:59,940 --> 01:55:02,760
can be there we'd love to have you there

2219
01:55:02,760 --> 01:55:04,980
and uh with that you know we're we're

2220
01:55:04,980 --> 01:55:08,219
wrapped up here but I do want to uh say

2221
01:55:08,219 --> 01:55:11,100
a big thanks to I think Barry had to run

2222
01:55:11,100 --> 01:55:12,840
for another commitment he was back there

2223
01:55:12,840 --> 01:55:15,119
until just about a minute ago

2224
01:55:15,119 --> 01:55:17,760
um but he was helping behind the scenes

2225
01:55:17,760 --> 01:55:20,219
with a lot of your requests to get added

2226
01:55:20,219 --> 01:55:22,619
to to mailing lists to get added to the

2227
01:55:22,619 --> 01:55:25,860
GitHub to upload your when you uploaded

2228
01:55:25,860 --> 01:55:27,960
your presentations to the GitHub he was

2229
01:55:27,960 --> 01:55:30,960
getting him into mitecho so that that no

2230
01:55:30,960 --> 01:55:32,880
could actually bring them up uh the

2231
01:55:32,880 --> 01:55:34,980
miteco folks were working really hard

2232
01:55:34,980 --> 01:55:36,480
because you know it's it's a lot of

2233
01:55:36,480 --> 01:55:38,400
presentations all coming together at one

2234
01:55:38,400 --> 01:55:40,320
time that's not a typical thing for a

2235
01:55:40,320 --> 01:55:43,619
meet Echo session and uh and I think it

2236
01:55:43,619 --> 01:55:46,139
worked uh relatively well so so thanks

2237
01:55:46,139 --> 01:55:47,460
to everyone who helped make that happen

2238
01:55:47,460 --> 01:55:50,159
also the Secretariat and the knock team

2239
01:55:50,159 --> 01:55:51,900
that's been helping us tremendously

2240
01:55:51,900 --> 01:55:54,179
throughout the whole day so thanks to

2241
01:55:54,179 --> 01:55:55,619
everyone congratulations on a great

2242
01:55:55,619 --> 01:55:57,900
event and I hope you have a fantastic

2243
01:55:57,900 --> 01:56:00,960
ietf week

2244
01:56:00,960 --> 01:56:03,960
foreign

