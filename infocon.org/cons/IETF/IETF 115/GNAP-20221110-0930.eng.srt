1
00:00:05,279 --> 00:00:08,279
foreign

2
00:00:36,079 --> 00:00:38,760
well it's a background image right it's

3
00:00:38,760 --> 00:00:41,940
it's the same kind of the same color as

4
00:00:41,940 --> 00:00:44,180
yeah

5
00:00:46,260 --> 00:00:50,360
all right it's the time

6
00:01:07,280 --> 00:01:10,460
resolved now

7
00:01:36,960 --> 00:01:39,060
all right good morning everybody let's

8
00:01:39,060 --> 00:01:41,479
get going

9
00:01:51,680 --> 00:01:54,899
let's get going

10
00:01:54,899 --> 00:01:57,899
um if we have a volunteer for no taker

11
00:01:57,899 --> 00:02:00,600
that'll be great otherwise

12
00:02:00,600 --> 00:02:03,500
it'll be left

13
00:02:09,179 --> 00:02:10,258
all right

14
00:02:10,258 --> 00:02:13,319
okay it's Thursday by now you should

15
00:02:13,319 --> 00:02:15,300
have seen the note 12 otherwise please

16
00:02:15,300 --> 00:02:17,879
take a look it still applies even though

17
00:02:17,879 --> 00:02:20,359
it's Thursday

18
00:02:22,080 --> 00:02:26,160
we are going to spend most of our time

19
00:02:26,160 --> 00:02:30,239
on the uh with the editors going through

20
00:02:30,239 --> 00:02:34,760
the latest changes major major changes

21
00:02:34,760 --> 00:02:38,940
to the main protocol in preparation for

22
00:02:38,940 --> 00:02:42,079
working group last call

23
00:02:42,239 --> 00:02:43,379
um

24
00:02:43,379 --> 00:02:47,480
we will also during this

25
00:02:47,480 --> 00:02:51,660
part of the session we will have 10 or

26
00:02:51,660 --> 00:02:52,819
15 minutes

27
00:02:52,819 --> 00:02:57,120
to speak about Adrian's human rights

28
00:02:57,120 --> 00:02:59,340
considerations

29
00:02:59,340 --> 00:03:02,280
somewhere near 11 o'clock

30
00:03:02,280 --> 00:03:05,879
then we will want to discuss a working

31
00:03:05,879 --> 00:03:07,760
group next steps

32
00:03:07,760 --> 00:03:11,220
specifically do we feel we're we're

33
00:03:11,220 --> 00:03:13,620
ready or almost ready for working group

34
00:03:13,620 --> 00:03:14,840
last call

35
00:03:14,840 --> 00:03:18,420
and what do we do with the main protocol

36
00:03:18,420 --> 00:03:21,659
and what do we do with the resource

37
00:03:21,659 --> 00:03:24,440
server protocol

38
00:03:26,220 --> 00:03:30,019
um anything else for the agenda

39
00:03:32,220 --> 00:03:35,879
all right so with that

40
00:03:35,879 --> 00:03:38,420
Justin

41
00:03:48,920 --> 00:03:52,700
that's it right okay

42
00:03:53,459 --> 00:03:55,200
that's it

43
00:03:55,200 --> 00:03:57,659
well it says it's loading oh

44
00:03:57,659 --> 00:04:01,040
is it the wrong deck again

45
00:04:03,120 --> 00:04:06,780
and Fabian should be online I think

46
00:04:06,780 --> 00:04:09,379
okay

47
00:04:13,980 --> 00:04:16,079
it's kind of amazing when it works there

48
00:04:16,079 --> 00:04:18,060
we go

49
00:04:18,060 --> 00:04:19,079
um

50
00:04:19,079 --> 00:04:21,739
all right

51
00:04:25,500 --> 00:04:27,060
yeah I was going to say we should make

52
00:04:27,060 --> 00:04:29,759
sure that Fabian is uh online because he

53
00:04:29,759 --> 00:04:32,160
can um

54
00:04:32,160 --> 00:04:34,040
all right fantastic

55
00:04:34,040 --> 00:04:37,500
fantastic great uh he and I are going to

56
00:04:37,500 --> 00:04:39,900
be uh trading off for uh

57
00:04:39,900 --> 00:04:43,919
for the editors update uh so I need to I

58
00:04:43,919 --> 00:04:46,680
need to request it again

59
00:04:46,680 --> 00:04:49,620
uh technology it's wonderful thank you

60
00:04:49,620 --> 00:04:52,020
good thing authorization is easy right

61
00:04:52,020 --> 00:04:55,440
all right all right so hi everybody uh

62
00:04:55,440 --> 00:04:59,940
welcome to the gnat meeting on ITF 115.

63
00:04:59,940 --> 00:05:00,660
um

64
00:05:00,660 --> 00:05:03,540
and I was inspired by some of the uh

65
00:05:03,540 --> 00:05:05,340
other presentations this week to include

66
00:05:05,340 --> 00:05:07,620
a local picture uh with some very rough

67
00:05:07,620 --> 00:05:09,600
Photoshop this morning so thank you to

68
00:05:09,600 --> 00:05:11,639
the chairs for helping me uh get that in

69
00:05:11,639 --> 00:05:14,280
at the last minute uh so everybody mind

70
00:05:14,280 --> 00:05:16,199
the gnat

71
00:05:16,199 --> 00:05:17,580
I know it's a little earlier for this

72
00:05:17,580 --> 00:05:19,380
pun but I love it just deal with me

73
00:05:19,380 --> 00:05:20,699
anyway

74
00:05:20,699 --> 00:05:21,540
um

75
00:05:21,540 --> 00:05:23,699
today we're going to be going through uh

76
00:05:23,699 --> 00:05:26,220
the chord changes the changes to the

77
00:05:26,220 --> 00:05:29,100
core document uh which there have been a

78
00:05:29,100 --> 00:05:30,960
lot uh Fabiana and I have been really

79
00:05:30,960 --> 00:05:33,240
busy over the last couple of months uh

80
00:05:33,240 --> 00:05:34,620
we're going to be grouping these into

81
00:05:34,620 --> 00:05:36,479
the editorial and the functional changes

82
00:05:36,479 --> 00:05:38,400
like we always do

83
00:05:38,400 --> 00:05:40,320
um there have been no updates to the RS

84
00:05:40,320 --> 00:05:42,240
draft but more discussion about that a

85
00:05:42,240 --> 00:05:44,940
little bit later and as the chairs

86
00:05:44,940 --> 00:05:46,259
mentioned we'll be talking about sort of

87
00:05:46,259 --> 00:05:48,660
the futures of the gnat protocol

88
00:05:48,660 --> 00:05:51,240
um and sort of where we go from here

89
00:05:51,240 --> 00:05:53,820
so first off uh if you pull down the

90
00:05:53,820 --> 00:05:55,560
slides all of these links are live you

91
00:05:55,560 --> 00:05:58,620
can go look at the uh RFC diff uh

92
00:05:58,620 --> 00:06:00,840
between the two to see the difference in

93
00:06:00,840 --> 00:06:04,440
tax changes we have merged 23 pull

94
00:06:04,440 --> 00:06:07,320
requests on core and one on the resource

95
00:06:07,320 --> 00:06:10,500
server draft over the last few months uh

96
00:06:10,500 --> 00:06:12,120
like I said we've been busy been a lot

97
00:06:12,120 --> 00:06:13,979
of changes

98
00:06:13,979 --> 00:06:17,460
um and we have closed 55 issues 56 if

99
00:06:17,460 --> 00:06:18,780
you count the one that Fabian closed

100
00:06:18,780 --> 00:06:20,400
this morning

101
00:06:20,400 --> 00:06:24,360
um and uh that leaves us with at this

102
00:06:24,360 --> 00:06:27,240
point only issues in the core draft that

103
00:06:27,240 --> 00:06:30,780
have come up after we publish draft 11.

104
00:06:30,780 --> 00:06:33,479
um what was that two weeks ago

105
00:06:33,479 --> 00:06:36,660
um so we were able to go through it this

106
00:06:36,660 --> 00:06:37,860
is the biggest news we were able to

107
00:06:37,860 --> 00:06:40,020
systematically go through every single

108
00:06:40,020 --> 00:06:42,000
issue and the tracker decide sort of

109
00:06:42,000 --> 00:06:45,479
what needed to be done you know uh and

110
00:06:45,479 --> 00:06:49,979
and execute a resolution for all of the

111
00:06:49,979 --> 00:06:52,020
outstanding issues including all of the

112
00:06:52,020 --> 00:06:54,660
issues that were have been labeled in

113
00:06:54,660 --> 00:06:57,300
the draft as like you know editor's note

114
00:06:57,300 --> 00:06:59,580
go think about this go take a look at

115
00:06:59,580 --> 00:07:01,199
this uh from the very beginning of the

116
00:07:01,199 --> 00:07:02,880
protocol

117
00:07:02,880 --> 00:07:04,979
um no closed issues on the RS draft

118
00:07:04,979 --> 00:07:06,840
we've opened up a couple more because as

119
00:07:06,840 --> 00:07:09,419
you'll see some of the uh some stuff has

120
00:07:09,419 --> 00:07:12,300
been shifted in that direction

121
00:07:12,300 --> 00:07:14,220
okay on the functional side and I'm

122
00:07:14,220 --> 00:07:15,660
going to go through each of these in

123
00:07:15,660 --> 00:07:18,419
more detail we have finally added key

124
00:07:18,419 --> 00:07:20,400
rotation after talking about it and how

125
00:07:20,400 --> 00:07:22,979
we might do it for a while we've got

126
00:07:22,979 --> 00:07:26,039
text on Cross user authorization

127
00:07:26,039 --> 00:07:27,840
um sort of more concrete text on Cross

128
00:07:27,840 --> 00:07:31,380
user authorization uh we have made some

129
00:07:31,380 --> 00:07:33,660
normative changes to the syntax but it's

130
00:07:33,660 --> 00:07:35,099
really ways that makes it more

131
00:07:35,099 --> 00:07:37,259
consistent within the protocol so you

132
00:07:37,259 --> 00:07:39,259
get the same kinds of structures between

133
00:07:39,259 --> 00:07:43,020
uh similar things uh again

134
00:07:43,020 --> 00:07:43,800
um

135
00:07:43,800 --> 00:07:46,080
we have finally gone in and added an

136
00:07:46,080 --> 00:07:48,419
Ianna section including

137
00:07:48,419 --> 00:07:50,699
um extensive guidance for how extensions

138
00:07:50,699 --> 00:07:52,380
to the core protocol would actually work

139
00:07:52,380 --> 00:07:54,120
if you want to go and build something

140
00:07:54,120 --> 00:07:56,819
new and build on top of this what is Our

141
00:07:56,819 --> 00:07:58,199
intention

142
00:07:58,199 --> 00:08:00,660
um as a working group for the extension

143
00:08:00,660 --> 00:08:02,340
points and how to exercise those

144
00:08:02,340 --> 00:08:04,440
extension points

145
00:08:04,440 --> 00:08:07,259
um and some smaller issues including uh

146
00:08:07,259 --> 00:08:09,360
noting that all Uris are intended to be

147
00:08:09,360 --> 00:08:11,160
absolute we just actually had to spell

148
00:08:11,160 --> 00:08:13,080
that out that's pretty much that entire

149
00:08:13,080 --> 00:08:14,580
issue

150
00:08:14,580 --> 00:08:17,819
um we expanded uh the error messages and

151
00:08:17,819 --> 00:08:19,319
the syntax around those that actually

152
00:08:19,319 --> 00:08:21,840
also fits into being consistent with the

153
00:08:21,840 --> 00:08:24,000
syntax between different uh different

154
00:08:24,000 --> 00:08:25,639
types of objects

155
00:08:25,639 --> 00:08:28,740
and there's an expanded bit on RS first

156
00:08:28,740 --> 00:08:30,000
discovery

157
00:08:30,000 --> 00:08:34,559
so the editorial changes uh uh once

158
00:08:34,559 --> 00:08:35,520
again we've expanded the security

159
00:08:35,520 --> 00:08:37,860
considerations uh this has happened to

160
00:08:37,860 --> 00:08:39,839
every single revision uh over the last

161
00:08:39,839 --> 00:08:42,000
year or so as you might expect for a

162
00:08:42,000 --> 00:08:44,640
security protocol uh We've explained

163
00:08:44,640 --> 00:08:48,180
class ID uh updated some definitions and

164
00:08:48,180 --> 00:08:50,660
we have uh finally included

165
00:08:50,660 --> 00:08:53,580
interoperability profiles which is uh

166
00:08:53,580 --> 00:08:55,860
our way of doing mandatory to implement

167
00:08:55,860 --> 00:08:58,560
considerations because gnap is such a

168
00:08:58,560 --> 00:09:01,560
sort of broadly reaching protocol with

169
00:09:01,560 --> 00:09:04,440
lots of different use cases uh the

170
00:09:04,440 --> 00:09:05,880
mandatory to implement considerations

171
00:09:05,880 --> 00:09:08,040
are if you are doing this kind of

172
00:09:08,040 --> 00:09:10,080
application this is what you expect if

173
00:09:10,080 --> 00:09:11,459
you're doing this type of application

174
00:09:11,459 --> 00:09:12,920
here's what you expect

175
00:09:12,920 --> 00:09:15,360
we've added two we could probably use

176
00:09:15,360 --> 00:09:17,519
some more uh in the core document by the

177
00:09:17,519 --> 00:09:20,760
time this hits uh final but uh you know

178
00:09:20,760 --> 00:09:23,160
this is this is the current approach uh

179
00:09:23,160 --> 00:09:25,200
We've added a list of implementations

180
00:09:25,200 --> 00:09:27,899
and would like more uh and we've done a

181
00:09:27,899 --> 00:09:30,600
lot of cleanup on the document itself uh

182
00:09:30,600 --> 00:09:33,060
so there were some sections that we

183
00:09:33,060 --> 00:09:35,459
thought we were going to add but never

184
00:09:35,459 --> 00:09:37,860
actually did and so we've cleaned up a

185
00:09:37,860 --> 00:09:41,300
lot of stuff uh in the cortex

186
00:09:41,519 --> 00:09:43,380
uh Fabian you want to talk about the

187
00:09:43,380 --> 00:09:46,019
Json schema

188
00:09:46,019 --> 00:09:48,240
hello everyone

189
00:09:48,240 --> 00:09:50,940
um so yes we it was planned for a long

190
00:09:50,940 --> 00:09:53,160
time it was an outstanding issue

191
00:09:53,160 --> 00:09:54,959
um and what we decided to do is to

192
00:09:54,959 --> 00:09:56,820
actually not put that into the core

193
00:09:56,820 --> 00:09:59,940
document but on the GitHub Wiki the main

194
00:09:59,940 --> 00:10:01,500
reason for that is that it's actually

195
00:10:01,500 --> 00:10:03,839
very lengthy

196
00:10:03,839 --> 00:10:07,080
um and so it's something that would add

197
00:10:07,080 --> 00:10:09,480
a lot of of length to the text which is

198
00:10:09,480 --> 00:10:11,940
already quite long and so we wanted to

199
00:10:11,940 --> 00:10:14,519
just add some resources for developers

200
00:10:14,519 --> 00:10:16,860
and implementers so that they could

201
00:10:16,860 --> 00:10:18,959
actually simplify their their

202
00:10:18,959 --> 00:10:21,360
developments

203
00:10:21,360 --> 00:10:23,519
um so the the nice thing with student

204
00:10:23,519 --> 00:10:25,380
schema is it's actually completely

205
00:10:25,380 --> 00:10:29,339
integrated uh with uh our way of

206
00:10:29,339 --> 00:10:31,500
approaching the nut protocol because

207
00:10:31,500 --> 00:10:33,480
everything is based on Json

208
00:10:33,480 --> 00:10:36,060
and so you can actually understand the

209
00:10:36,060 --> 00:10:37,860
mother it's it's kind of a nice summary

210
00:10:37,860 --> 00:10:41,580
of uh the data model for fog nap and

211
00:10:41,580 --> 00:10:43,019
then on top of that you can actually

212
00:10:43,019 --> 00:10:46,440
Implement verification uh at runtime for

213
00:10:46,440 --> 00:10:49,320
your different uh data that's rights

214
00:10:49,320 --> 00:10:50,820
changing

215
00:10:50,820 --> 00:10:53,640
um if you're interested into more about

216
00:10:53,640 --> 00:10:55,279
that you've got the

217
00:10:55,279 --> 00:10:58,380
jsonschema.org resource which is quite

218
00:10:58,380 --> 00:11:00,540
nice you've got a rich set of tools for

219
00:11:00,540 --> 00:11:02,940
well pretty much every language out

220
00:11:02,940 --> 00:11:04,320
there

221
00:11:04,320 --> 00:11:06,420
um so you can actually generate a code

222
00:11:06,420 --> 00:11:09,000
from that you can test with some some

223
00:11:09,000 --> 00:11:11,579
data and see whether your schema is fine

224
00:11:11,579 --> 00:11:15,120
and you can verify at runtime

225
00:11:15,120 --> 00:11:17,779
um we're actually using the latest draft

226
00:11:17,779 --> 00:11:21,320
for that we need a bit more test

227
00:11:21,320 --> 00:11:24,420
along along the line to actually make

228
00:11:24,420 --> 00:11:26,700
sure that the different settings are

229
00:11:26,700 --> 00:11:30,000
fine and it's actually implementing the

230
00:11:30,000 --> 00:11:32,040
the verification that we need in some

231
00:11:32,040 --> 00:11:34,320
cases it's not so easy because we've got

232
00:11:34,320 --> 00:11:37,380
some required sections but which depend

233
00:11:37,380 --> 00:11:40,320
on some specific conditions on on what

234
00:11:40,320 --> 00:11:42,380
you intend to do with a protocol

235
00:11:42,380 --> 00:11:44,820
so that's the kind of thing we need to

236
00:11:44,820 --> 00:11:47,640
to tune but in general you've got the

237
00:11:47,640 --> 00:11:49,800
the request and you've got the the

238
00:11:49,800 --> 00:11:51,600
response which are already available

239
00:11:51,600 --> 00:11:53,399
here

240
00:11:53,399 --> 00:11:56,459
um onto the the wiki on on the GitHub

241
00:11:56,459 --> 00:11:58,680
for napco protocol

242
00:11:58,680 --> 00:12:01,200
um so overall I think it should help you

243
00:12:01,200 --> 00:12:03,060
and and provide some guidance for

244
00:12:03,060 --> 00:12:05,160
implementers

245
00:12:05,160 --> 00:12:07,200
um and and we expect we'll expand on

246
00:12:07,200 --> 00:12:09,000
that uh over time

247
00:12:09,000 --> 00:12:14,240
so that's that's this part

248
00:12:16,200 --> 00:12:19,320
commenting as an individual and actually

249
00:12:19,320 --> 00:12:23,160
putting my now librarian head on the

250
00:12:23,160 --> 00:12:29,540
only way the ITF uh knows how to make a

251
00:12:29,540 --> 00:12:33,060
material available for the long term is

252
00:12:33,060 --> 00:12:35,660
through published rfcs unfortunately

253
00:12:35,660 --> 00:12:38,220
there's nothing else

254
00:12:38,220 --> 00:12:43,019
we can do for for our archival purposes

255
00:12:43,019 --> 00:12:45,180
so

256
00:12:45,180 --> 00:12:46,200
um

257
00:12:46,200 --> 00:12:49,500
one way to do it is to Simply add this

258
00:12:49,500 --> 00:12:52,220
material as an appendix to the document

259
00:12:52,220 --> 00:12:55,860
I'm not saying we must do that but

260
00:12:55,860 --> 00:12:57,899
please consider the long-term

261
00:12:57,899 --> 00:13:01,800
implications of having stuff on the wiki

262
00:13:01,800 --> 00:13:04,380
okay well not it will we'll have a look

263
00:13:04,380 --> 00:13:05,639
yeah

264
00:13:05,639 --> 00:13:07,620
uh yeah that's that's definitely a

265
00:13:07,620 --> 00:13:09,420
consideration one of the other things

266
00:13:09,420 --> 00:13:11,339
that um

267
00:13:11,339 --> 00:13:13,680
we've considered with having it outside

268
00:13:13,680 --> 00:13:16,320
the document is that as extensions are

269
00:13:16,320 --> 00:13:18,420
defined and stuff like that we would

270
00:13:18,420 --> 00:13:21,240
want the schema to be updated based on

271
00:13:21,240 --> 00:13:23,399
what's in the registry and you can't

272
00:13:23,399 --> 00:13:25,800
do that without doing a whole RFC

273
00:13:25,800 --> 00:13:29,160
publication cycle so it's I absolutely

274
00:13:29,160 --> 00:13:31,800
understand that um that from an ietf

275
00:13:31,800 --> 00:13:33,480
perspective that's the only archive

276
00:13:33,480 --> 00:13:37,139
that's available but on the other hand

277
00:13:37,139 --> 00:13:39,660
this is not quite the same type of

278
00:13:39,660 --> 00:13:41,399
document it's more of an implementation

279
00:13:41,399 --> 00:13:43,500
an implementer's resource

280
00:13:43,500 --> 00:13:46,320
so I don't know I I think there's good

281
00:13:46,320 --> 00:13:50,180
arguments to be made for both parts

282
00:13:56,240 --> 00:13:59,459
one option there might be to have a

283
00:13:59,459 --> 00:14:02,760
chord Json schema for your

284
00:14:02,760 --> 00:14:04,740
for what is in the dock and then use a

285
00:14:04,740 --> 00:14:07,019
vocabulary for the uh

286
00:14:07,019 --> 00:14:10,740
the registry so that part ends up being

287
00:14:10,740 --> 00:14:13,620
external but the core vocabulary is

288
00:14:13,620 --> 00:14:15,540
internal with vocabularies and Justice

289
00:14:15,540 --> 00:14:17,040
game you can do that

290
00:14:17,040 --> 00:14:18,720
that's a quick question for the authors

291
00:14:18,720 --> 00:14:19,740
do you guys

292
00:14:19,740 --> 00:14:21,779
um should we try to get some expert

293
00:14:21,779 --> 00:14:24,839
review from from I don't know that there

294
00:14:24,839 --> 00:14:26,880
is a Json director or or you know the

295
00:14:26,880 --> 00:14:29,160
ability to do things like

296
00:14:29,160 --> 00:14:32,160
um yaml there's a you can request expert

297
00:14:32,160 --> 00:14:34,920
reviews on yaml stuff and on on mips and

298
00:14:34,920 --> 00:14:37,500
stuff I don't know is there I I can I

299
00:14:37,500 --> 00:14:39,180
don't know whether you can do it but I

300
00:14:39,180 --> 00:14:40,620
don't know do we just call you with the

301
00:14:40,620 --> 00:14:43,079
Jason schema folks well we can ask right

302
00:14:43,079 --> 00:14:45,240
yeah we can ask

303
00:14:45,240 --> 00:14:46,980
I mean I figure we just call up Timbre

304
00:14:46,980 --> 00:14:49,880
and have him say it's fine

305
00:14:49,880 --> 00:14:52,440
all right

306
00:14:52,440 --> 00:14:55,199
um but yeah no that is uh that is uh

307
00:14:55,199 --> 00:14:56,820
another way to approach it as well uh

308
00:14:56,820 --> 00:14:58,620
like Fabian mentioned though this is a

309
00:14:58,620 --> 00:15:01,199
uh Json schema is very lengthy and very

310
00:15:01,199 --> 00:15:03,300
verbose it would add many pages to the

311
00:15:03,300 --> 00:15:05,760
document which is a consideration for an

312
00:15:05,760 --> 00:15:08,820
already long document uh not necessarily

313
00:15:08,820 --> 00:15:10,980
enough to definitely keep it out but

314
00:15:10,980 --> 00:15:13,860
it's it's a consideration

315
00:15:13,860 --> 00:15:15,360
okay

316
00:15:15,360 --> 00:15:16,620
um on to some more of the functional

317
00:15:16,620 --> 00:15:21,540
changes so uh previously our key formats

318
00:15:21,540 --> 00:15:24,060
um we had text in there that allowed you

319
00:15:24,060 --> 00:15:26,760
to publish Keys uh when you were sending

320
00:15:26,760 --> 00:15:28,320
Keys you could put them in multiple

321
00:15:28,320 --> 00:15:30,540
formats as long as they were the same

322
00:15:30,540 --> 00:15:33,959
key but somebody pointed out that the

323
00:15:33,959 --> 00:15:35,459
only reason for sending things in

324
00:15:35,459 --> 00:15:37,079
multiple formats was that you would

325
00:15:37,079 --> 00:15:40,199
expect the receiver to not know all of

326
00:15:40,199 --> 00:15:42,600
the formats and if the receiver doesn't

327
00:15:42,600 --> 00:15:44,399
know all of the formats and the receiver

328
00:15:44,399 --> 00:15:47,339
cannot guarantee that all of the keys

329
00:15:47,339 --> 00:15:48,720
are the same key

330
00:15:48,720 --> 00:15:50,940
and so this was apparently a very big

331
00:15:50,940 --> 00:15:53,220
foot gun that we didn't realize uh was

332
00:15:53,220 --> 00:15:55,019
quite in the spec which was very simply

333
00:15:55,019 --> 00:15:57,360
solved by saying that you can only use

334
00:15:57,360 --> 00:15:59,639
one key format

335
00:15:59,639 --> 00:16:02,579
um per request and if it's not the right

336
00:16:02,579 --> 00:16:04,320
format or if it's something that the

337
00:16:04,320 --> 00:16:07,560
receiver can't understand then you

338
00:16:07,560 --> 00:16:09,660
return an error

339
00:16:09,660 --> 00:16:13,699
um one of the uh

340
00:16:14,699 --> 00:16:16,079
sorry I forget where I was going with

341
00:16:16,079 --> 00:16:17,579
that sentence but

342
00:16:17,579 --> 00:16:20,279
um but basically uh when you're sending

343
00:16:20,279 --> 00:16:22,980
a message you can send it as a jwk you

344
00:16:22,980 --> 00:16:25,740
can send it as a certificate that uh key

345
00:16:25,740 --> 00:16:28,019
format is still extensible by a registry

346
00:16:28,019 --> 00:16:29,940
so if there are other future formats

347
00:16:29,940 --> 00:16:31,440
that people want to do you can

348
00:16:31,440 --> 00:16:33,660
absolutely uh extend it to do that if

349
00:16:33,660 --> 00:16:34,740
somebody wants to do some weird

350
00:16:34,740 --> 00:16:37,680
multi-base key string thing you could do

351
00:16:37,680 --> 00:16:40,139
that uh if you wanted to do keys by URI

352
00:16:40,139 --> 00:16:43,560
reference which we are uh as have we've

353
00:16:43,560 --> 00:16:45,180
previously discussed is not in the core

354
00:16:45,180 --> 00:16:47,519
document if somebody wants to do that we

355
00:16:47,519 --> 00:16:49,680
absolutely have a space where that can

356
00:16:49,680 --> 00:16:51,959
go and you're allowed to only have one

357
00:16:51,959 --> 00:16:56,060
type of key at a time

358
00:16:56,759 --> 00:16:59,160
key rotation is probably the biggest new

359
00:16:59,160 --> 00:17:00,480
feature

360
00:17:00,480 --> 00:17:02,279
um and this is something that we've been

361
00:17:02,279 --> 00:17:05,699
stewing on for a long time now

362
00:17:05,699 --> 00:17:06,480
um

363
00:17:06,480 --> 00:17:10,199
basically all tokens in gnat by default

364
00:17:10,199 --> 00:17:11,939
are bound to Keys you can get Bearer

365
00:17:11,939 --> 00:17:13,859
tokens but you have to specifically ask

366
00:17:13,859 --> 00:17:14,880
for them

367
00:17:14,880 --> 00:17:16,439
and when you have something that's bound

368
00:17:16,439 --> 00:17:18,299
to a key we would like to be able to

369
00:17:18,299 --> 00:17:20,400
rotate the key in case the artifact that

370
00:17:20,400 --> 00:17:22,919
it's bound to outlives the lifetime of

371
00:17:22,919 --> 00:17:25,020
the key itself

372
00:17:25,020 --> 00:17:25,819
um

373
00:17:25,819 --> 00:17:28,500
previously we had been trying to come up

374
00:17:28,500 --> 00:17:31,320
with a grand unified way of uh of

375
00:17:31,320 --> 00:17:34,140
representing key rotation and stuff like

376
00:17:34,140 --> 00:17:36,660
that but as discussed at the last

377
00:17:36,660 --> 00:17:39,780
meeting we figured out that you pretty

378
00:17:39,780 --> 00:17:41,700
much need to have this tied to the

379
00:17:41,700 --> 00:17:44,220
specific proofing mechanism so if you're

380
00:17:44,220 --> 00:17:46,200
using HTTP signatures you need a way to

381
00:17:46,200 --> 00:17:47,820
prove that you have access to the old

382
00:17:47,820 --> 00:17:49,320
key and access to the new key

383
00:17:49,320 --> 00:17:51,660
simultaneously in a way that they're

384
00:17:51,660 --> 00:17:54,360
layered on top of each other so that an

385
00:17:54,360 --> 00:17:56,100
attacker can't just take your existing

386
00:17:56,100 --> 00:17:58,500
signed message and sign it with their

387
00:17:58,500 --> 00:18:00,360
key and say no this is the new key it's

388
00:18:00,360 --> 00:18:02,700
totally fine trust me

389
00:18:02,700 --> 00:18:04,679
um and the way you do that layering is

390
00:18:04,679 --> 00:18:07,260
uh is a little complex but as long as

391
00:18:07,260 --> 00:18:08,460
you're following the same pattern

392
00:18:08,460 --> 00:18:11,460
everything works out pretty well

393
00:18:11,460 --> 00:18:13,260
um so each proof method defines its own

394
00:18:13,260 --> 00:18:16,020
way to do this the token management API

395
00:18:16,020 --> 00:18:19,260
so when you call for token rotation this

396
00:18:19,260 --> 00:18:21,120
is where key rotation actually shows up

397
00:18:21,120 --> 00:18:25,559
inside an app because everything in gnap

398
00:18:25,559 --> 00:18:27,000
is

399
00:18:27,000 --> 00:18:29,160
um is bound to

400
00:18:29,160 --> 00:18:31,620
a bound to an access token of some type

401
00:18:31,620 --> 00:18:33,720
so when you're doing grant continuation

402
00:18:33,720 --> 00:18:36,480
the grant continuation is bound to the

403
00:18:36,480 --> 00:18:38,520
continuation access token so if you want

404
00:18:38,520 --> 00:18:40,200
to rotate the key for your Grant request

405
00:18:40,200 --> 00:18:42,299
you're actually rotating it for the

406
00:18:42,299 --> 00:18:45,240
access token not for the grant

407
00:18:45,240 --> 00:18:47,039
um this sort of abstraction and

408
00:18:47,039 --> 00:18:49,200
simplification makes it much more

409
00:18:49,200 --> 00:18:50,760
consistent how you're managing Hue

410
00:18:50,760 --> 00:18:52,559
rotation throughout the protocol

411
00:18:52,559 --> 00:18:55,559
so what you do is you show up and say I

412
00:18:55,559 --> 00:18:57,299
want to rotate this token and I want to

413
00:18:57,299 --> 00:18:59,000
bind it to this new key

414
00:18:59,000 --> 00:19:01,620
we currently have a provision that you

415
00:19:01,620 --> 00:19:03,240
provide the previous key at the same

416
00:19:03,240 --> 00:19:05,100
time we're not sure if that's actually

417
00:19:05,100 --> 00:19:07,080
necessary because you should be able to

418
00:19:07,080 --> 00:19:10,020
look up the old key so that's that's

419
00:19:10,020 --> 00:19:12,360
kind of a maybe uh like I said this is

420
00:19:12,360 --> 00:19:14,400
brand new functionality

421
00:19:14,400 --> 00:19:16,799
um but but we think it works out pretty

422
00:19:16,799 --> 00:19:18,780
well

423
00:19:18,780 --> 00:19:20,640
um and anyway what you do is you sign

424
00:19:20,640 --> 00:19:23,160
the message with the old key and the new

425
00:19:23,160 --> 00:19:26,520
key so for HTTP signatures for example

426
00:19:26,520 --> 00:19:29,580
um HTTP Sig allows multiple signatures

427
00:19:29,580 --> 00:19:32,340
on a single HTTP message so you include

428
00:19:32,340 --> 00:19:34,740
the new key in your rotation message as

429
00:19:34,740 --> 00:19:37,559
shown it down at the bottom and then you

430
00:19:37,559 --> 00:19:40,020
sign the message with the old key so

431
00:19:40,020 --> 00:19:41,700
you're basically putting a signature

432
00:19:41,700 --> 00:19:44,460
around the new key using the old key

433
00:19:44,460 --> 00:19:46,799
which is basically declaring I the

434
00:19:46,799 --> 00:19:49,320
holder of the old key I'm okay with this

435
00:19:49,320 --> 00:19:52,799
new key as part of this but then you

436
00:19:52,799 --> 00:19:56,100
also have to sign that signature with

437
00:19:56,100 --> 00:19:57,900
the new key to prove that you actually

438
00:19:57,900 --> 00:20:00,000
have access to the new key

439
00:20:00,000 --> 00:20:02,460
because again uh this is we are assuming

440
00:20:02,460 --> 00:20:05,100
you are introducing a new key at runtime

441
00:20:05,100 --> 00:20:07,260
during this rotation mechanism

442
00:20:07,260 --> 00:20:09,179
now there can of course be out of band

443
00:20:09,179 --> 00:20:11,880
rotation mechanisms but you don't need a

444
00:20:11,880 --> 00:20:13,620
protocol to handle that that's that's

445
00:20:13,620 --> 00:20:16,140
handled out of band this is for the

446
00:20:16,140 --> 00:20:18,539
times when uh your client instance is

447
00:20:18,539 --> 00:20:20,460
saying I made up a new key and I want it

448
00:20:20,460 --> 00:20:23,400
tied to the Token so you prove that you

449
00:20:23,400 --> 00:20:25,620
have the uh the old key you prove that

450
00:20:25,620 --> 00:20:27,059
you have the new key and all of that

451
00:20:27,059 --> 00:20:29,280
wraps together and this is a signal to

452
00:20:29,280 --> 00:20:32,280
the as to say I need to swap out the key

453
00:20:32,280 --> 00:20:34,140
that's bound to this particular access

454
00:20:34,140 --> 00:20:36,200
token

455
00:20:36,200 --> 00:20:39,059
a very similar thing with uh with the

456
00:20:39,059 --> 00:20:41,460
Jose methods you put the new key in the

457
00:20:41,460 --> 00:20:43,320
message you sign the outer message with

458
00:20:43,320 --> 00:20:45,240
the old key and then you take that

459
00:20:45,240 --> 00:20:48,059
signed object and wrap it in it's

460
00:20:48,059 --> 00:20:50,640
another layer of jws because Jose

461
00:20:50,640 --> 00:20:54,000
doesn't quite do multiple signatures uh

462
00:20:54,000 --> 00:20:55,799
very cleanly

463
00:20:55,799 --> 00:20:58,799
um and then you send that as the signed

464
00:20:58,799 --> 00:21:00,419
message and there's a new jws object

465
00:21:00,419 --> 00:21:04,440
type that's defined in here to uh to

466
00:21:04,440 --> 00:21:06,179
signal that this wrapping is taking

467
00:21:06,179 --> 00:21:08,480
place

468
00:21:08,520 --> 00:21:11,760
um for mtls we quite frankly decided to

469
00:21:11,760 --> 00:21:13,140
kind of Punt on this one because there's

470
00:21:13,140 --> 00:21:16,200
no really good way to present multiple

471
00:21:16,200 --> 00:21:19,500
client certs in TLS uh that I'm aware of

472
00:21:19,500 --> 00:21:22,020
I know Acme is working on uh client

473
00:21:22,020 --> 00:21:25,320
certificate identity extensions that

474
00:21:25,320 --> 00:21:28,260
might be able to fit into this but uh we

475
00:21:28,260 --> 00:21:30,539
have not had the TLs expertise to be

476
00:21:30,539 --> 00:21:33,059
able to Define this so for now the

477
00:21:33,059 --> 00:21:36,240
course says that this is uh doing a

478
00:21:36,240 --> 00:21:38,400
dynamic rotation for TLS is out of scope

479
00:21:38,400 --> 00:21:40,440
because in a lot of cases you're going

480
00:21:40,440 --> 00:21:41,940
to be using some type of certificate

481
00:21:41,940 --> 00:21:45,120
management system to do that rotation uh

482
00:21:45,120 --> 00:21:47,640
in your infrastructure anyway uh and if

483
00:21:47,640 --> 00:21:48,659
you're not

484
00:21:48,659 --> 00:21:51,299
you know come make an extension that

485
00:21:51,299 --> 00:21:54,679
says how to do that at runtime

486
00:21:54,720 --> 00:21:55,620
um

487
00:21:55,620 --> 00:21:57,720
any questions on keys or key rotation

488
00:21:57,720 --> 00:22:01,020
before we move on

489
00:22:01,020 --> 00:22:03,480
in the queue all right

490
00:22:03,480 --> 00:22:05,640
all right cool uh so cross user

491
00:22:05,640 --> 00:22:07,440
asynchronous authorization is something

492
00:22:07,440 --> 00:22:09,659
that gnap has been able has been able to

493
00:22:09,659 --> 00:22:11,940
do from the beginning but was never

494
00:22:11,940 --> 00:22:13,559
quite fully fleshed out and we didn't

495
00:22:13,559 --> 00:22:16,320
actually have full examples

496
00:22:16,320 --> 00:22:19,140
um we set out to do that

497
00:22:19,140 --> 00:22:21,600
um during this round and we realized

498
00:22:21,600 --> 00:22:25,559
that we were actually missing a core bit

499
00:22:25,559 --> 00:22:27,900
of signaling in the protocol we had a

500
00:22:27,900 --> 00:22:29,700
way for the client to say this is who I

501
00:22:29,700 --> 00:22:32,220
think is here right now this is who I

502
00:22:32,220 --> 00:22:34,080
think the identity of the end user using

503
00:22:34,080 --> 00:22:37,380
the client software is we had a uh and

504
00:22:37,380 --> 00:22:40,080
we had a way for the client to ask for

505
00:22:40,080 --> 00:22:43,260
specific kinds of information about the

506
00:22:43,260 --> 00:22:44,460
resource owner

507
00:22:44,460 --> 00:22:47,340
but we did not have a way as it turned

508
00:22:47,340 --> 00:22:49,860
out for the client to identify who it

509
00:22:49,860 --> 00:22:51,299
thought the resource owner was

510
00:22:51,299 --> 00:22:53,159
especially in cases where that person

511
00:22:53,159 --> 00:22:55,740
was different from the end user at the

512
00:22:55,740 --> 00:22:58,679
client instance the classical case for

513
00:22:58,679 --> 00:23:02,000
this uh comes from openid connect siba

514
00:23:02,000 --> 00:23:05,039
where you have somebody with an

515
00:23:05,039 --> 00:23:06,500
authorized

516
00:23:06,500 --> 00:23:09,419
an authorized piece of software as the

517
00:23:09,419 --> 00:23:11,039
resource owner so the person in a call

518
00:23:11,039 --> 00:23:14,039
center and then you have uh sorry the

519
00:23:14,039 --> 00:23:16,600
resource owner is the

520
00:23:16,600 --> 00:23:17,159
[Music]

521
00:23:17,159 --> 00:23:18,659
um

522
00:23:18,659 --> 00:23:20,400
is the person calling into the call

523
00:23:20,400 --> 00:23:21,539
center

524
00:23:21,539 --> 00:23:23,700
and they have you know an onboarded

525
00:23:23,700 --> 00:23:26,159
official piece of software that the that

526
00:23:26,159 --> 00:23:28,799
the as can talk to them through and then

527
00:23:28,799 --> 00:23:31,080
you have the end user is the person in

528
00:23:31,080 --> 00:23:32,700
the call center that's making the

529
00:23:32,700 --> 00:23:33,720
request

530
00:23:33,720 --> 00:23:35,700
so now we have a way to very simply

531
00:23:35,700 --> 00:23:38,220
signal using uh structures that are

532
00:23:38,220 --> 00:23:40,799
parallel to the rest of the protocol hi

533
00:23:40,799 --> 00:23:42,600
this is who I think is here right now

534
00:23:42,600 --> 00:23:44,480
and this is who I want information about

535
00:23:44,480 --> 00:23:49,500
so as go find and ask that person if

536
00:23:49,500 --> 00:23:50,700
it's okay

537
00:23:50,700 --> 00:23:52,919
for this other person to know who they

538
00:23:52,919 --> 00:23:55,799
are it allows us to very explicitly

539
00:23:55,799 --> 00:23:58,620
separate those two uh those two parts of

540
00:23:58,620 --> 00:24:00,000
the protocol

541
00:24:00,000 --> 00:24:02,820
and so it was a uh it was an additional

542
00:24:02,820 --> 00:24:04,799
bit of syntax an additional bit of

543
00:24:04,799 --> 00:24:07,380
semantics to that but again it fits in

544
00:24:07,380 --> 00:24:08,760
parallel with everything that was

545
00:24:08,760 --> 00:24:10,020
already there dealing with subject

546
00:24:10,020 --> 00:24:12,120
information

547
00:24:12,120 --> 00:24:14,580
um we also added several examples

548
00:24:14,580 --> 00:24:16,620
including the call center example to the

549
00:24:16,620 --> 00:24:18,539
core document that talk about sort of

550
00:24:18,539 --> 00:24:20,220
how this information flows and what an

551
00:24:20,220 --> 00:24:23,100
as would be expected to do in this case

552
00:24:23,100 --> 00:24:26,100
um and some of this adds in adds on to

553
00:24:26,100 --> 00:24:28,140
the existing discussion we already had

554
00:24:28,140 --> 00:24:31,440
about asynchronous authorization many of

555
00:24:31,440 --> 00:24:34,380
those use cases come from the uh came

556
00:24:34,380 --> 00:24:36,240
from the Uma work in the Uma working

557
00:24:36,240 --> 00:24:38,480
group

558
00:24:38,840 --> 00:24:42,299
maybe maybe this makes sense in the

559
00:24:42,299 --> 00:24:45,840
context of the text but subject and user

560
00:24:45,840 --> 00:24:49,020
when you say it just like that seem like

561
00:24:49,020 --> 00:24:51,000
very generic words

562
00:24:51,000 --> 00:24:55,080
yeah so uh subject is who we're asking

563
00:24:55,080 --> 00:25:00,620
about and user is who we think there is

564
00:25:02,340 --> 00:25:05,400
right yeah no

565
00:25:05,400 --> 00:25:07,980
um yeah I agree the

566
00:25:07,980 --> 00:25:10,500
I'm not sure what better terms would be

567
00:25:10,500 --> 00:25:12,840
I'd be I'd be open to bike shed some of

568
00:25:12,840 --> 00:25:15,960
these terms at uh even at this point

569
00:25:15,960 --> 00:25:18,840
um subject was named subject uh because

570
00:25:18,840 --> 00:25:20,820
originally that was where you're putting

571
00:25:20,820 --> 00:25:22,500
information about what you're requesting

572
00:25:22,500 --> 00:25:24,179
the subject information that you're

573
00:25:24,179 --> 00:25:26,039
requesting so that's also where you put

574
00:25:26,039 --> 00:25:27,779
the subject identifier formats and the

575
00:25:27,779 --> 00:25:29,220
assertion formats and things like that

576
00:25:29,220 --> 00:25:32,159
in your request I mean that that's a

577
00:25:32,159 --> 00:25:33,779
it's a recognized term right data

578
00:25:33,779 --> 00:25:36,480
subject is also the legal termite right

579
00:25:36,480 --> 00:25:38,640
and again if we're bike shedding then

580
00:25:38,640 --> 00:25:40,440
one is data subject the other is

581
00:25:40,440 --> 00:25:43,039
Authentication

582
00:25:43,440 --> 00:25:45,299
well it's not even the authentication

583
00:25:45,299 --> 00:25:46,980
subject because the user is who's

584
00:25:46,980 --> 00:25:49,620
present at the client not necessarily

585
00:25:49,620 --> 00:25:53,479
who's present at the as so

586
00:25:53,580 --> 00:25:55,500
um but yeah

587
00:25:55,500 --> 00:25:56,880
all right

588
00:25:56,880 --> 00:25:59,940
so we oh sorry no I was just going to

589
00:25:59,940 --> 00:26:02,159
say that that I mean it's actually worth

590
00:26:02,159 --> 00:26:05,400
noting that that kind of practice is the

591
00:26:05,400 --> 00:26:07,320
is the

592
00:26:07,320 --> 00:26:09,600
I mean the a lot of

593
00:26:09,600 --> 00:26:13,440
like um cross media phishing attacks

594
00:26:13,440 --> 00:26:16,520
actually use this particular

595
00:26:16,520 --> 00:26:18,720
capability of some authentication

596
00:26:18,720 --> 00:26:22,500
systems out there right so it it is this

597
00:26:22,500 --> 00:26:26,820
is kind of uh a this is potentially a a

598
00:26:26,820 --> 00:26:30,360
gun right aimed at both of your feet

599
00:26:30,360 --> 00:26:33,840
um and so I I think it it is like if if

600
00:26:33,840 --> 00:26:35,760
this actually goes in there I think it's

601
00:26:35,760 --> 00:26:38,340
and this is speaking as a individual I

602
00:26:38,340 --> 00:26:40,980
think it has to be accompanied by

603
00:26:40,980 --> 00:26:42,360
um some something in the security

604
00:26:42,360 --> 00:26:43,799
section

605
00:26:43,799 --> 00:26:46,500
um but you know this is extremely

606
00:26:46,500 --> 00:26:48,900
dangerous and people actually get this

607
00:26:48,900 --> 00:26:51,720
is like a major source of fraud in in

608
00:26:51,720 --> 00:26:54,659
many jurisdictions yeah uh I agree we've

609
00:26:54,659 --> 00:26:56,159
got some text in there that we did add

610
00:26:56,159 --> 00:26:57,240
in

611
00:26:57,240 --> 00:26:59,400
um but I could probably stand to be

612
00:26:59,400 --> 00:27:00,720
expanded

613
00:27:00,720 --> 00:27:03,299
um fundamentally from the protocols

614
00:27:03,299 --> 00:27:06,480
perspective uh this capability is

615
00:27:06,480 --> 00:27:08,179
indistinguishable from a phishing attack

616
00:27:08,179 --> 00:27:11,100
exactly because you're exactly asking

617
00:27:11,100 --> 00:27:13,799
for information about somebody else the

618
00:27:13,799 --> 00:27:16,320
uh what this allows us to do what this

619
00:27:16,320 --> 00:27:18,059
syntax allows us to do is at least

620
00:27:18,059 --> 00:27:19,860
detect that this is what's happening

621
00:27:19,860 --> 00:27:21,720
that this is intentionally what's

622
00:27:21,720 --> 00:27:23,640
happening and you can put up enough

623
00:27:23,640 --> 00:27:27,900
barriers to make it less likely for that

624
00:27:27,900 --> 00:27:31,620
to uh to actually be propagated as a

625
00:27:31,620 --> 00:27:32,820
phishing attack

626
00:27:32,820 --> 00:27:36,360
so the as for example can say like

627
00:27:36,360 --> 00:27:37,620
you're asking for subject information

628
00:27:37,620 --> 00:27:40,860
with no interaction uh and a different

629
00:27:40,860 --> 00:27:43,200
user identifier well you better be a

630
00:27:43,200 --> 00:27:44,940
pre-registered client with a certificate

631
00:27:44,940 --> 00:27:47,580
that I issued otherwise I'm not gonna

632
00:27:47,580 --> 00:27:50,100
I'm not going to touch this one right so

633
00:27:50,100 --> 00:27:52,080
that that's the call center use case you

634
00:27:52,080 --> 00:27:54,900
know that's the we've pre-provisioned

635
00:27:54,900 --> 00:27:56,820
all of these client instances in our

636
00:27:56,820 --> 00:27:58,500
call center and we know that this

637
00:27:58,500 --> 00:28:01,620
software is authenticated to a specific

638
00:28:01,620 --> 00:28:03,720
user who's allowed to ask for this kind

639
00:28:03,720 --> 00:28:04,740
of thing

640
00:28:04,740 --> 00:28:07,020
so it's not perfect but

641
00:28:07,020 --> 00:28:09,720
yeah we we can at least put a safety on

642
00:28:09,720 --> 00:28:12,059
the foot gun

643
00:28:12,059 --> 00:28:15,620
to torture that metaphor

644
00:28:15,840 --> 00:28:18,059
okay so uh there were a bunch of small

645
00:28:18,059 --> 00:28:20,820
cleanups in the syntax where

646
00:28:20,820 --> 00:28:22,919
um we had we had things that were kind

647
00:28:22,919 --> 00:28:25,380
of awkwardly defined as it's an object

648
00:28:25,380 --> 00:28:27,179
but sometimes that object isn't an

649
00:28:27,179 --> 00:28:29,520
object and stuff like that we took a

650
00:28:29,520 --> 00:28:31,980
step back and realized that

651
00:28:31,980 --> 00:28:36,380
um we can drastically simplify this by

652
00:28:36,380 --> 00:28:39,360
basically taking a page out of the um

653
00:28:39,360 --> 00:28:41,520
out of Json schema and similar things

654
00:28:41,520 --> 00:28:43,380
and just declaring things in terms of

655
00:28:43,380 --> 00:28:44,279
type

656
00:28:44,279 --> 00:28:47,960
so uh for example the proofing methods

657
00:28:47,960 --> 00:28:51,419
uh can be sent as either an object or as

658
00:28:51,419 --> 00:28:54,120
a string now

659
00:28:54,120 --> 00:28:56,580
um except that those need to be defined

660
00:28:56,580 --> 00:29:00,059
separately so the object version has a

661
00:29:00,059 --> 00:29:02,279
required field name method

662
00:29:02,279 --> 00:29:04,260
and that is a string that comes from a

663
00:29:04,260 --> 00:29:05,400
registry

664
00:29:05,400 --> 00:29:07,500
and then that has required parameters

665
00:29:07,500 --> 00:29:09,419
for algorithm in the content digest

666
00:29:09,419 --> 00:29:10,640
algorithm

667
00:29:10,640 --> 00:29:13,020
the string version

668
00:29:13,020 --> 00:29:15,779
has to Define everything including all

669
00:29:15,779 --> 00:29:18,120
parameters because there's no space to

670
00:29:18,120 --> 00:29:20,940
put parameters it's just a string

671
00:29:20,940 --> 00:29:23,940
um so instead of uh you having to do

672
00:29:23,940 --> 00:29:25,740
jump through some hoops and saying like

673
00:29:25,740 --> 00:29:28,260
oh this you just put this into the

674
00:29:28,260 --> 00:29:29,940
method field and then you default a

675
00:29:29,940 --> 00:29:31,919
couple of fields and sort of do that

676
00:29:31,919 --> 00:29:34,020
kind of thing it is instead just very

677
00:29:34,020 --> 00:29:37,620
explicitly defined as you do this in

678
00:29:37,620 --> 00:29:39,600
this way and that is the only way that

679
00:29:39,600 --> 00:29:42,020
it works

680
00:29:42,659 --> 00:29:45,059
and we did we did this

681
00:29:45,059 --> 00:29:48,179
um for uh access rights previously the

682
00:29:48,179 --> 00:29:49,679
key proof methods interaction start

683
00:29:49,679 --> 00:29:53,159
methods uh error responses uh are all

684
00:29:53,159 --> 00:29:55,799
basically use the same uh the same kind

685
00:29:55,799 --> 00:29:58,940
of pattern throughout the protocol

686
00:29:59,419 --> 00:30:01,440
all right

687
00:30:01,440 --> 00:30:03,779
we have a lot of extended security uh

688
00:30:03,779 --> 00:30:05,760
considerations

689
00:30:05,760 --> 00:30:07,440
um specifically we wanted to call out

690
00:30:07,440 --> 00:30:10,799
referencing uh the BCPS for Key

691
00:30:10,799 --> 00:30:14,159
Management and also some informative

692
00:30:14,159 --> 00:30:18,720
references uh from uh how to manage

693
00:30:18,720 --> 00:30:22,200
things in TLS I'll let you guys go read

694
00:30:22,200 --> 00:30:25,020
those and in particular the TLs and Utah

695
00:30:25,020 --> 00:30:26,640
experts in the room should please go

696
00:30:26,640 --> 00:30:29,700
read those bits to make sure that uh

697
00:30:29,700 --> 00:30:31,260
that we actually are referencing those

698
00:30:31,260 --> 00:30:33,120
appropriately

699
00:30:33,120 --> 00:30:34,620
um

700
00:30:34,620 --> 00:30:36,419
and and there's other security

701
00:30:36,419 --> 00:30:39,720
considerations that were added in there

702
00:30:39,720 --> 00:30:42,480
all right client instances have a class

703
00:30:42,480 --> 00:30:45,360
identifier that class identifier allows

704
00:30:45,360 --> 00:30:47,520
you to say all of these to declare all

705
00:30:47,520 --> 00:30:49,980
of these instances of software are part

706
00:30:49,980 --> 00:30:51,720
of the same sort of

707
00:30:51,720 --> 00:30:55,559
piece of software so it's an app ID in

708
00:30:55,559 --> 00:30:59,100
an app store it's that kind of thing

709
00:30:59,100 --> 00:31:00,179
um

710
00:31:00,179 --> 00:31:02,059
we clarified

711
00:31:02,059 --> 00:31:05,220
uh the role of class ID in the system we

712
00:31:05,220 --> 00:31:06,600
didn't really change what it was or how

713
00:31:06,600 --> 00:31:08,640
it works we just clarified what it means

714
00:31:08,640 --> 00:31:12,600
so this is something that is uh decided

715
00:31:12,600 --> 00:31:16,560
by the as it has to be known to the as

716
00:31:16,560 --> 00:31:16,980
[Music]

717
00:31:16,980 --> 00:31:17,880
um

718
00:31:17,880 --> 00:31:20,399
and it could be pre-registered it could

719
00:31:20,399 --> 00:31:22,380
be issued by a third party it's really

720
00:31:22,380 --> 00:31:24,480
just a hint to the as that this software

721
00:31:24,480 --> 00:31:28,260
is claiming to be part of this class if

722
00:31:28,260 --> 00:31:30,299
you want a greater attestation to the

723
00:31:30,299 --> 00:31:32,880
membership of that class uh so you know

724
00:31:32,880 --> 00:31:34,620
that that attribute actually applies to

725
00:31:34,620 --> 00:31:37,260
this then you need software attestations

726
00:31:37,260 --> 00:31:40,620
which are a layer above and beyond uh

727
00:31:40,620 --> 00:31:42,419
what just a simple class ID string can

728
00:31:42,419 --> 00:31:43,320
give you

729
00:31:43,320 --> 00:31:45,179
so we clarified that this is a hint just

730
00:31:45,179 --> 00:31:47,159
like anything else that the client might

731
00:31:47,159 --> 00:31:49,440
dynamically send

732
00:31:49,440 --> 00:31:51,960
um but the text in there now says a

733
00:31:51,960 --> 00:31:53,520
little bit more how to apply that hint

734
00:31:53,520 --> 00:31:55,919
how to use that hint

735
00:31:55,919 --> 00:31:57,960
um oh and this is the kind of thing that

736
00:31:57,960 --> 00:32:00,000
uh in some cases is really going to act

737
00:32:00,000 --> 00:32:02,880
like a a browser agent string so it's

738
00:32:02,880 --> 00:32:04,200
just going to be

739
00:32:04,200 --> 00:32:07,260
kind of hard-coded in say a set-top box

740
00:32:07,260 --> 00:32:10,200
and say I'm this piece of Hardware with

741
00:32:10,200 --> 00:32:12,480
this version so you can really trust it

742
00:32:12,480 --> 00:32:14,580
about that much without other things

743
00:32:14,580 --> 00:32:17,299
strapped to it

744
00:32:19,500 --> 00:32:23,179
uh Fabian did you want to take this

745
00:32:23,960 --> 00:32:26,460
so as you were saying in the

746
00:32:26,460 --> 00:32:28,799
introduction we've got some work that

747
00:32:28,799 --> 00:32:30,299
has been done on the entire Webb

748
00:32:30,299 --> 00:32:33,059
profiles on especially on the mandatory

749
00:32:33,059 --> 00:32:34,320
to implement

750
00:32:34,320 --> 00:32:36,539
so here is it's again guidance for

751
00:32:36,539 --> 00:32:40,260
implementers since we're at the uh at

752
00:32:40,260 --> 00:32:43,200
the state where it becomes really

753
00:32:43,200 --> 00:32:44,880
um stable enough to to actually

754
00:32:44,880 --> 00:32:47,760
implement it uh so you've got two main

755
00:32:47,760 --> 00:32:50,580
uh profiles the one the first one is web

756
00:32:50,580 --> 00:32:53,820
profiles Illinois secondary profile

757
00:32:53,820 --> 00:32:54,480
um

758
00:32:54,480 --> 00:32:56,760
basically you'll see that most of the

759
00:32:56,760 --> 00:32:58,700
methods are actually similar

760
00:32:58,700 --> 00:33:01,740
the main difference obviously is there's

761
00:33:01,740 --> 00:33:04,200
some some case on the web profile where

762
00:33:04,200 --> 00:33:05,700
you actually redirect during your

763
00:33:05,700 --> 00:33:06,659
interaction

764
00:33:06,659 --> 00:33:08,940
while obviously for a secondary device

765
00:33:08,940 --> 00:33:11,640
your integration is actually based on a

766
00:33:11,640 --> 00:33:13,200
push so you're actually going to use

767
00:33:13,200 --> 00:33:15,240
either a user code or user code very

768
00:33:15,240 --> 00:33:17,880
which was discussed I think at the

769
00:33:17,880 --> 00:33:20,640
previous iitf meeting

770
00:33:20,640 --> 00:33:22,019
um so it's basically a different

771
00:33:22,019 --> 00:33:24,240
interaction so you've got both cases

772
00:33:24,240 --> 00:33:28,140
which are to be implemented and then

773
00:33:28,140 --> 00:33:30,360
based on that we actually just Define

774
00:33:30,360 --> 00:33:32,360
the minimal

775
00:33:32,360 --> 00:33:35,460
spec that needs to be implemented so

776
00:33:35,460 --> 00:33:37,799
that actually uh clients and

777
00:33:37,799 --> 00:33:39,480
authorization server can actually

778
00:33:39,480 --> 00:33:42,779
discuss on a minimal basis

779
00:33:42,779 --> 00:33:44,640
um so and that concerns everything

780
00:33:44,640 --> 00:33:46,980
related to key proofing the different

781
00:33:46,980 --> 00:33:50,240
Ash algorithms the different signatures

782
00:33:50,240 --> 00:33:53,760
algorithms and also the types of subject

783
00:33:53,760 --> 00:33:57,120
identifiers so for instance to take this

784
00:33:57,120 --> 00:33:57,899
one

785
00:33:57,899 --> 00:34:01,140
um we we could have said well go

786
00:34:01,140 --> 00:34:04,919
implement the entire SEC events back and

787
00:34:04,919 --> 00:34:07,559
you need to actually provide email and

788
00:34:07,559 --> 00:34:10,199
and you need to to also support deeds

789
00:34:10,199 --> 00:34:12,179
and and so on but obviously this comes

790
00:34:12,179 --> 00:34:15,659
at a bigger expense for implementers so

791
00:34:15,659 --> 00:34:17,460
we wanted to have something which is

792
00:34:17,460 --> 00:34:21,239
common to all implementations of nap and

793
00:34:21,239 --> 00:34:22,980
we think that for instance the OPEC

794
00:34:22,980 --> 00:34:27,000
version of it makes sense to be able to

795
00:34:27,000 --> 00:34:29,520
communicate between the systems

796
00:34:29,520 --> 00:34:32,239
same for our session formats

797
00:34:32,239 --> 00:34:34,320
currently in the text we've got ID

798
00:34:34,320 --> 00:34:37,080
tokens or summer V2

799
00:34:37,080 --> 00:34:37,800
um

800
00:34:37,800 --> 00:34:41,460
obviously the in in that word and of2

801
00:34:41,460 --> 00:34:43,918
word ID tokens are very widespread and

802
00:34:43,918 --> 00:34:45,839
so we think it makes sense to have that

803
00:34:45,839 --> 00:34:48,540
as a default that can be accepted for

804
00:34:48,540 --> 00:34:51,000
authentication on top of the map

805
00:34:51,000 --> 00:34:53,879
protocol so basically that's really a

806
00:34:53,879 --> 00:34:55,980
way to to make sure that we can actually

807
00:34:55,980 --> 00:34:59,520
understand ourselves in in the week and

808
00:34:59,520 --> 00:35:01,020
the last part

809
00:35:01,020 --> 00:35:05,339
um is is a key proofing method and we we

810
00:35:05,339 --> 00:35:07,980
suggest that we go for HTTP Sig which is

811
00:35:07,980 --> 00:35:10,800
clearly the most the most advanced way

812
00:35:10,800 --> 00:35:14,520
of of making sure that uh our key

813
00:35:14,520 --> 00:35:16,260
proofing is is actually implemented

814
00:35:16,260 --> 00:35:18,000
correctly

815
00:35:18,000 --> 00:35:20,099
um the only downside from that which

816
00:35:20,099 --> 00:35:22,440
which was discussed at that point is

817
00:35:22,440 --> 00:35:25,200
obviously it's a new method it's

818
00:35:25,200 --> 00:35:26,820
something new for for people to

819
00:35:26,820 --> 00:35:28,560
implement but we also think this

820
00:35:28,560 --> 00:35:31,980
significant upside in making sure that

821
00:35:31,980 --> 00:35:34,460
it can be implemented for instance what

822
00:35:34,460 --> 00:35:38,280
just in described earlier for ntlo us

823
00:35:38,280 --> 00:35:40,500
you've got additional infrastructure to

824
00:35:40,500 --> 00:35:42,900
put in place here it's it's different

825
00:35:42,900 --> 00:35:44,940
you can actually base that on your HTTP

826
00:35:44,940 --> 00:35:47,280
stack only and that's that's something

827
00:35:47,280 --> 00:35:50,820
that's we think is is worthwhile

828
00:35:50,820 --> 00:35:51,480
um

829
00:35:51,480 --> 00:35:53,520
so yes that's something we should

830
00:35:53,520 --> 00:35:56,040
obviously discuss together to make sure

831
00:35:56,040 --> 00:35:59,700
that this inter probability profile is

832
00:35:59,700 --> 00:36:02,760
something that we all agree on but

833
00:36:02,760 --> 00:36:06,140
that's our proposal so far

834
00:36:06,660 --> 00:36:08,280
right and I wanted to say one more thing

835
00:36:08,280 --> 00:36:11,160
about the uh the proofing method

836
00:36:11,160 --> 00:36:12,720
um because this was this was brought up

837
00:36:12,720 --> 00:36:15,000
in discussion

838
00:36:15,000 --> 00:36:18,480
um even though Jose is itself very well

839
00:36:18,480 --> 00:36:21,740
established applying Jose to an HTTP

840
00:36:21,740 --> 00:36:26,280
request in a robust way is not well

841
00:36:26,280 --> 00:36:28,500
established there's a lot of stuff that

842
00:36:28,500 --> 00:36:31,560
an app had to invent and sort of copy to

843
00:36:31,560 --> 00:36:37,980
get that to fit uh because Jose and http

844
00:36:37,980 --> 00:36:40,920
aren't the best of friends

845
00:36:40,920 --> 00:36:44,700
um so uh bringing that up because that's

846
00:36:44,700 --> 00:36:46,800
one thing on the surface that seems like

847
00:36:46,800 --> 00:36:48,480
it might have been a more obvious choice

848
00:36:48,480 --> 00:36:50,940
to use the Jose methods but it turns out

849
00:36:50,940 --> 00:36:52,820
that there's actually a lot of

850
00:36:52,820 --> 00:36:55,200
additional tooling that doesn't exist in

851
00:36:55,200 --> 00:36:57,359
toolkits today anyway so it's not as

852
00:36:57,359 --> 00:37:00,500
much of a win as you might think

853
00:37:02,359 --> 00:37:06,720
also yeah we also I did a section which

854
00:37:06,720 --> 00:37:09,540
will be removed when we actually publish

855
00:37:09,540 --> 00:37:11,700
the the spec but it's it's interesting

856
00:37:11,700 --> 00:37:14,160
for people to have a resource that

857
00:37:14,160 --> 00:37:15,720
centralized right now and the

858
00:37:15,720 --> 00:37:17,280
implementation status so we actually

859
00:37:17,280 --> 00:37:20,820
expect more in in the coming weeks uh so

860
00:37:20,820 --> 00:37:23,099
just for myself I'm actually working on

861
00:37:23,099 --> 00:37:25,619
on my rest implementation but we'd like

862
00:37:25,619 --> 00:37:27,780
to thank all the people that have

863
00:37:27,780 --> 00:37:30,060
actually committed to to implementing

864
00:37:30,060 --> 00:37:33,180
nap or at least the version of snap

865
00:37:33,180 --> 00:37:35,280
um and you see that there's already

866
00:37:35,280 --> 00:37:38,339
quite quite a bunch of them

867
00:37:38,339 --> 00:37:40,800
um either on the client or on the server

868
00:37:40,800 --> 00:37:43,320
and and you see that there's also a

869
00:37:43,320 --> 00:37:45,540
variety of languages out there you've

870
00:37:45,540 --> 00:37:51,359
got JavaScript roast Java python PHP

871
00:37:51,359 --> 00:37:53,700
um we we do see that it's actually

872
00:37:53,700 --> 00:37:56,579
implementable in in pretty much every

873
00:37:56,579 --> 00:37:59,040
every situation that's that's common

874
00:37:59,040 --> 00:38:00,480
today so

875
00:38:00,480 --> 00:38:02,339
that's really what we want to do

876
00:38:02,339 --> 00:38:05,280
obviously we are quite aware there's

877
00:38:05,280 --> 00:38:07,500
there's more to be done on the on the

878
00:38:07,500 --> 00:38:10,380
entire release side and we'd like to to

879
00:38:10,380 --> 00:38:13,920
actually get more uh so if you've got uh

880
00:38:13,920 --> 00:38:16,380
your implementation please let us know

881
00:38:16,380 --> 00:38:20,359
and we'll add that to to the draft

882
00:38:20,520 --> 00:38:22,380
right and I just want to add that these

883
00:38:22,380 --> 00:38:24,060
are the publicly available

884
00:38:24,060 --> 00:38:26,040
implementations there are a couple of

885
00:38:26,040 --> 00:38:27,540
other implementations floating around

886
00:38:27,540 --> 00:38:29,460
out there that are part of uh

887
00:38:29,460 --> 00:38:33,599
proprietary products so uh

888
00:38:33,599 --> 00:38:36,240
secure key which is now a vast which is

889
00:38:36,240 --> 00:38:38,940
now Norton did I get that right yeah

890
00:38:38,940 --> 00:38:41,099
okay all right

891
00:38:41,099 --> 00:38:42,599
where what now

892
00:38:42,599 --> 00:38:46,020
gent that's the first Monday that's the

893
00:38:46,020 --> 00:38:47,760
first I've heard that so

894
00:38:47,760 --> 00:38:50,880
whatever this company is called now the

895
00:38:50,880 --> 00:38:52,560
verified.me

896
00:38:52,560 --> 00:38:54,619
um

897
00:38:55,740 --> 00:38:58,020
the uh the verified.me product actually

898
00:38:58,020 --> 00:39:01,079
uh is also uh an implementation of gnat

899
00:39:01,079 --> 00:39:02,480
but that's sort of

900
00:39:02,480 --> 00:39:05,400
internal proprietary code and so I

901
00:39:05,400 --> 00:39:08,220
couldn't couldn't point to it here uh

902
00:39:08,220 --> 00:39:09,960
quite as easily I don't know if we're

903
00:39:09,960 --> 00:39:11,880
actually supposed to include stuff like

904
00:39:11,880 --> 00:39:14,760
that in the implementation list as an

905
00:39:14,760 --> 00:39:17,700
author of PCP whatever it is that

906
00:39:17,700 --> 00:39:20,099
specifies this session yes absolutely

907
00:39:20,099 --> 00:39:21,180
okay

908
00:39:21,180 --> 00:39:22,980
all right so we'll we'll add in the

909
00:39:22,980 --> 00:39:26,280
verified.me stuff then uh as well and um

910
00:39:26,280 --> 00:39:28,859
you know if there are any others then um

911
00:39:28,859 --> 00:39:33,119
then yeah please uh please get in touch

912
00:39:33,119 --> 00:39:35,280
and one more thing going back to the

913
00:39:35,280 --> 00:39:38,220
previous slide if

914
00:39:38,220 --> 00:39:40,500
yep uh

915
00:39:40,500 --> 00:39:43,579
do we have an actual security

916
00:39:43,579 --> 00:39:46,560
cryptography justification why we're

917
00:39:46,560 --> 00:39:51,720
using two different uh hash algorithms

918
00:39:51,720 --> 00:39:56,520
or is it just historic and if it is

919
00:39:56,520 --> 00:40:00,540
why don't we make it so 256 for both

920
00:40:00,540 --> 00:40:02,520
it's historic

921
00:40:02,520 --> 00:40:05,160
um I just kind of picked sha3 the first

922
00:40:05,160 --> 00:40:06,599
time because three is bigger than two

923
00:40:06,599 --> 00:40:09,240
and so it must be better and I picked

924
00:40:09,240 --> 00:40:12,000
that like three years ago and only one

925
00:40:12,000 --> 00:40:13,980
person complained and that's why we made

926
00:40:13,980 --> 00:40:17,700
Shaw to an option and that's that's

927
00:40:17,700 --> 00:40:18,960
where we are so if we wanted to make

928
00:40:18,960 --> 00:40:21,300
these both shop 256 I honestly think

929
00:40:21,300 --> 00:40:23,040
that that's fine given the uh the

930
00:40:23,040 --> 00:40:25,020
lifetime of the interaction hash is very

931
00:40:25,020 --> 00:40:28,079
short there's there's not a good reason

932
00:40:28,079 --> 00:40:31,619
to to do the additional level so I'm

933
00:40:31,619 --> 00:40:33,300
actually fine with that

934
00:40:33,300 --> 00:40:35,339
I think it's a

935
00:40:35,339 --> 00:40:38,220
it'll be easier for implementers even

936
00:40:38,220 --> 00:40:41,339
though we we already have so many still

937
00:40:41,339 --> 00:40:42,960
yeah

938
00:40:42,960 --> 00:40:45,599
um so I know I just remembered I should

939
00:40:45,599 --> 00:40:47,280
put Dimitri's

940
00:40:47,280 --> 00:40:50,099
um implementation on on this list I

941
00:40:50,099 --> 00:40:51,839
totally forgot to do that

942
00:40:51,839 --> 00:40:53,040
um because I know he was the one that

943
00:40:53,040 --> 00:40:55,320
actually asked for shot 256 because he

944
00:40:55,320 --> 00:40:56,880
was doing a pure in browser

945
00:40:56,880 --> 00:40:59,280
implementation and at the time didn't

946
00:40:59,280 --> 00:41:02,520
have a shot three uh in web crypto

947
00:41:02,520 --> 00:41:04,140
so

948
00:41:04,140 --> 00:41:04,800
um

949
00:41:04,800 --> 00:41:07,020
yeah I'm fine with that uh if anybody

950
00:41:07,020 --> 00:41:08,760
else has feedback on choosing the the

951
00:41:08,760 --> 00:41:11,460
hash algorithms please let us know

952
00:41:11,460 --> 00:41:13,560
um

953
00:41:13,560 --> 00:41:15,300
all right

954
00:41:15,300 --> 00:41:17,400
um so we only have a couple of open

955
00:41:17,400 --> 00:41:20,160
issues on the core document now

956
00:41:20,160 --> 00:41:22,800
um at least as far as I know as of this

957
00:41:22,800 --> 00:41:25,220
morning uh it should only be two

958
00:41:25,220 --> 00:41:28,619
uh during the key rotation uh somebody

959
00:41:28,619 --> 00:41:31,619
pointed out that we forgot to add new

960
00:41:31,619 --> 00:41:33,180
errors and forgot to mention this in

961
00:41:33,180 --> 00:41:34,560
Discovery

962
00:41:34,560 --> 00:41:37,560
absolutely true we forgot to do that so

963
00:41:37,560 --> 00:41:39,480
that'll get uh that'll get added in it's

964
00:41:39,480 --> 00:41:41,220
fairly mechanical

965
00:41:41,220 --> 00:41:42,599
um it's just getting stuff into the

966
00:41:42,599 --> 00:41:44,339
right spaces

967
00:41:44,339 --> 00:41:46,200
um you know not really a big deal just

968
00:41:46,200 --> 00:41:49,079
an oversight on on the editor's part

969
00:41:49,079 --> 00:41:52,800
um there's a second uh sort of more

970
00:41:52,800 --> 00:41:55,920
in-depth issue from uh some researchers

971
00:41:55,920 --> 00:41:58,140
actually building on Florian's

972
00:41:58,140 --> 00:42:01,380
um graduate thesis as it turns out

973
00:42:01,380 --> 00:42:05,280
um and uh they pointed out rightfully so

974
00:42:05,280 --> 00:42:09,660
that uh gnap is not entirely clear that

975
00:42:09,660 --> 00:42:11,760
the subject identifiers coming back are

976
00:42:11,760 --> 00:42:15,839
scoped to the as that is

977
00:42:15,839 --> 00:42:17,880
um that is releasing them even when it's

978
00:42:17,880 --> 00:42:19,440
a global identifier like an email

979
00:42:19,440 --> 00:42:20,640
address

980
00:42:20,640 --> 00:42:23,160
which is to say that I can stand up in a

981
00:42:23,160 --> 00:42:26,220
s that says that you know

982
00:42:26,220 --> 00:42:29,640
I am yarin and I can have it spit out

983
00:42:29,640 --> 00:42:33,740
yarn's email address for my account but

984
00:42:33,740 --> 00:42:37,980
you need to be able to trust that as for

985
00:42:37,980 --> 00:42:39,720
that specific account in order to

986
00:42:39,720 --> 00:42:42,060
actually have that make any sense you

987
00:42:42,060 --> 00:42:43,140
know just because it's a global

988
00:42:43,140 --> 00:42:44,820
identifier the fact that I'm asserting

989
00:42:44,820 --> 00:42:46,619
it does not mean that I have the right

990
00:42:46,619 --> 00:42:48,960
to assert that this is actually a really

991
00:42:48,960 --> 00:42:51,300
really really really common thing in

992
00:42:51,300 --> 00:42:54,420
Federated identity and in fact this is

993
00:42:54,420 --> 00:42:57,300
um uh this is completely enshrined in

994
00:42:57,300 --> 00:42:58,280
nist

995
00:42:58,280 --> 00:43:01,800
800-63c which uh has extensive

996
00:43:01,800 --> 00:43:03,359
discussion about this which we can

997
00:43:03,359 --> 00:43:07,200
reference directly uh here to say that

998
00:43:07,200 --> 00:43:08,640
pretty much if you're getting something

999
00:43:08,640 --> 00:43:11,040
back from an as you can only believe it

1000
00:43:11,040 --> 00:43:14,640
as far as that as told me this you can't

1001
00:43:14,640 --> 00:43:16,440
believe it beyond that there are no

1002
00:43:16,440 --> 00:43:19,079
globally Universal identifiers

1003
00:43:19,079 --> 00:43:21,960
and no dids don't count Justin yes it's

1004
00:43:21,960 --> 00:43:24,839
a historical note right the the for for

1005
00:43:24,839 --> 00:43:26,040
people who remember something called

1006
00:43:26,040 --> 00:43:27,540
shiblets right they introduced the

1007
00:43:27,540 --> 00:43:30,900
notion of scope in in 20 years ago to do

1008
00:43:30,900 --> 00:43:33,260
exactly this right

1009
00:43:33,260 --> 00:43:35,460
yep absolutely

1010
00:43:35,460 --> 00:43:37,800
yeah this is this is not a new issue we

1011
00:43:37,800 --> 00:43:40,680
have some text uh that already says this

1012
00:43:40,680 --> 00:43:43,140
but it's it's not that strong and it's

1013
00:43:43,140 --> 00:43:45,540
not it's not a normative requirement for

1014
00:43:45,540 --> 00:43:47,819
the client instance to process this with

1015
00:43:47,819 --> 00:43:50,579
a particular mindset and so that's why

1016
00:43:50,579 --> 00:43:52,619
the researchers in doing their formal

1017
00:43:52,619 --> 00:43:55,380
modeling was like you know you could run

1018
00:43:55,380 --> 00:43:58,319
away and get get all kinds of uh all

1019
00:43:58,319 --> 00:44:00,359
kinds of users confused uh if you if you

1020
00:44:00,359 --> 00:44:04,140
didn't do this so yeah Fair Point

1021
00:44:04,140 --> 00:44:05,280
foreign

1022
00:44:05,280 --> 00:44:08,400
all right I think this is our last slide

1023
00:44:08,400 --> 00:44:09,599
yeah

1024
00:44:09,599 --> 00:44:11,400
um so at this point Fabian and I have

1025
00:44:11,400 --> 00:44:13,079
gone through uh gone through the core

1026
00:44:13,079 --> 00:44:14,220
document

1027
00:44:14,220 --> 00:44:15,720
um as you saw we've been doing a lot of

1028
00:44:15,720 --> 00:44:18,599
work to fix things up and add in the

1029
00:44:18,599 --> 00:44:21,480
last handful of uh features that uh have

1030
00:44:21,480 --> 00:44:23,579
been talked about here for the last bit

1031
00:44:23,579 --> 00:44:25,319
but we think the core document is

1032
00:44:25,319 --> 00:44:26,760
basically ready

1033
00:44:26,760 --> 00:44:27,839
um yeah

1034
00:44:27,839 --> 00:44:29,400
hold off on this

1035
00:44:29,400 --> 00:44:31,020
all right

1036
00:44:31,020 --> 00:44:34,579
we will absolutely break here

1037
00:44:36,960 --> 00:44:39,960
absolutely makes sense so yep

1038
00:44:39,960 --> 00:44:41,460
all right

1039
00:44:41,460 --> 00:44:44,520
so I think that

1040
00:44:44,520 --> 00:44:47,280
cool and so we're gonna go to Adrian now

1041
00:44:47,280 --> 00:44:50,480
yes okay

1042
00:45:07,440 --> 00:45:11,640
okay thank you Adrian again

1043
00:45:11,640 --> 00:45:15,560
you might just be muted

1044
00:45:16,200 --> 00:45:19,098
all right

1045
00:45:25,859 --> 00:45:27,240
hello

1046
00:45:27,240 --> 00:45:29,720
yes

1047
00:45:31,500 --> 00:45:35,599
okay you are very faint

1048
00:45:36,839 --> 00:45:39,980
we hear you well

1049
00:45:40,260 --> 00:45:42,980
okay great

1050
00:45:43,380 --> 00:45:44,240
um

1051
00:45:44,240 --> 00:45:46,020
so

1052
00:45:46,020 --> 00:45:49,560
um I don't know exactly how much time uh

1053
00:45:49,560 --> 00:45:51,780
I have

1054
00:45:51,780 --> 00:45:53,960
um

1055
00:45:54,180 --> 00:45:58,020
okay that should be plenty I have uh

1056
00:45:58,020 --> 00:46:00,720
five slides uh hopefully I can go

1057
00:46:00,720 --> 00:46:04,079
through them in uh less than half that

1058
00:46:04,079 --> 00:46:06,960
time and

1059
00:46:06,960 --> 00:46:09,079
um

1060
00:46:09,420 --> 00:46:10,380
um

1061
00:46:10,380 --> 00:46:16,220
so let's see how do I uh present

1062
00:46:16,280 --> 00:46:16,920
[Music]

1063
00:46:16,920 --> 00:46:18,920
um

1064
00:46:20,180 --> 00:46:24,660
and uh share the screen

1065
00:46:24,660 --> 00:46:28,759
I think you got a request there you go

1066
00:46:33,660 --> 00:46:36,000
okay

1067
00:46:36,000 --> 00:46:39,960
uh are you seeing uh the slide

1068
00:46:39,960 --> 00:46:41,300
yes

1069
00:46:41,300 --> 00:46:44,359
Miracle amazing okay

1070
00:46:44,359 --> 00:46:52,619
uh so uh just uh slide two is a summary

1071
00:46:52,619 --> 00:46:54,540
of

1072
00:46:54,540 --> 00:46:55,440
um

1073
00:46:55,440 --> 00:46:59,460
what my uh point is that we need a

1074
00:46:59,460 --> 00:47:01,700
separate human rights consideration

1075
00:47:01,700 --> 00:47:05,099
and uh that some aspects of it might

1076
00:47:05,099 --> 00:47:08,819
need to be uh normative uh in the

1077
00:47:08,819 --> 00:47:14,540
protocol uh the reason is uh that uh

1078
00:47:14,540 --> 00:47:18,480
privacy by itself does not uh recognize

1079
00:47:18,480 --> 00:47:22,380
the asymmetry of power uh between uh the

1080
00:47:22,380 --> 00:47:25,020
resource owner typical individual and

1081
00:47:25,020 --> 00:47:26,940
the institutions that are playing the

1082
00:47:26,940 --> 00:47:29,640
other roles

1083
00:47:29,640 --> 00:47:33,359
um the concept of free association is

1084
00:47:33,359 --> 00:47:35,819
discussed at length in the hrpc

1085
00:47:35,819 --> 00:47:37,440
documents

1086
00:47:37,440 --> 00:47:41,880
uh and how it applies to

1087
00:47:41,880 --> 00:47:46,440
um as nrs's and clients again is not a

1088
00:47:46,440 --> 00:47:48,920
discussion we have time for today

1089
00:47:48,920 --> 00:47:51,359
necessarily except during the questions

1090
00:47:51,359 --> 00:47:53,339
of course

1091
00:47:53,339 --> 00:47:56,520
um so uh because privacy does not

1092
00:47:56,520 --> 00:47:58,980
consider delegation it ignores the power

1093
00:47:58,980 --> 00:48:04,819
asymmetry uh we now uh have to consider

1094
00:48:04,819 --> 00:48:09,359
in the hrpc uh context of force

1095
00:48:09,359 --> 00:48:11,160
Association

1096
00:48:11,160 --> 00:48:13,319
um what it is that we are doing and how

1097
00:48:13,319 --> 00:48:16,020
it can be mitigated

1098
00:48:16,020 --> 00:48:18,839
um and uh

1099
00:48:18,839 --> 00:48:21,180
and so

1100
00:48:21,180 --> 00:48:23,760
um the the problem uh without diving

1101
00:48:23,760 --> 00:48:25,380
into it I think is pretty well

1102
00:48:25,380 --> 00:48:29,220
understood at this point that uh forced

1103
00:48:29,220 --> 00:48:31,020
Association and oauth to the

1104
00:48:31,020 --> 00:48:34,619
authorization server uh has a lot of

1105
00:48:34,619 --> 00:48:37,260
convenience features but it also uh

1106
00:48:37,260 --> 00:48:40,440
comes with uh scaling uh uh problems

1107
00:48:40,440 --> 00:48:45,000
that uh are cause regulatory issues in

1108
00:48:45,000 --> 00:48:47,900
the human rights uh or privacy context

1109
00:48:47,900 --> 00:48:54,079
and so my recommendation is uh that uh

1110
00:48:54,079 --> 00:48:58,619
the resource owner must be allowed uh to

1111
00:48:58,619 --> 00:49:01,020
uh State who their preferred

1112
00:49:01,020 --> 00:49:03,240
authorization server is

1113
00:49:03,240 --> 00:49:08,240
uh slide three is a uh summary

1114
00:49:08,240 --> 00:49:09,839
of

1115
00:49:09,839 --> 00:49:11,760
um the Privacy interests that have been

1116
00:49:11,760 --> 00:49:13,920
mentioned in various issues uh for the

1117
00:49:13,920 --> 00:49:16,040
past whatever how long I've been around

1118
00:49:16,040 --> 00:49:19,920
uh I'm not gonna go through them

1119
00:49:19,920 --> 00:49:22,980
um there's obviously the the top issue

1120
00:49:22,980 --> 00:49:26,040
is who gets to choose the as the

1121
00:49:26,040 --> 00:49:28,560
resource server uh wants to limit their

1122
00:49:28,560 --> 00:49:32,460
liability and the resource owner wants

1123
00:49:32,460 --> 00:49:36,660
to limit both their lock-in and their

1124
00:49:36,660 --> 00:49:40,560
various uh risks of policy surveillance

1125
00:49:40,560 --> 00:49:44,240
traffic analysis spam Etc

1126
00:49:44,240 --> 00:49:47,520
uh and the requesting party as has been

1127
00:49:47,520 --> 00:49:50,220
discussed in some issues uh once data

1128
00:49:50,220 --> 00:49:53,400
minimization basically and uh their

1129
00:49:53,400 --> 00:49:56,400
ability to choose their client

1130
00:49:56,400 --> 00:50:00,420
um so uh in a PR that was requested at

1131
00:50:00,420 --> 00:50:02,940
the last meeting

1132
00:50:02,940 --> 00:50:07,140
um I suggested uh uh two options after

1133
00:50:07,140 --> 00:50:09,180
discussing this extensively with

1134
00:50:09,180 --> 00:50:13,260
capabilities experts uh two and three uh

1135
00:50:13,260 --> 00:50:16,380
I also added recently uh as part of the

1136
00:50:16,380 --> 00:50:18,540
issue that it could be as easy as number

1137
00:50:18,540 --> 00:50:21,420
one but number one is not easy it also

1138
00:50:21,420 --> 00:50:25,800
has issues and my point uh is that one

1139
00:50:25,800 --> 00:50:30,359
of these uh needs to uh be uh a must or

1140
00:50:30,359 --> 00:50:31,380
should

1141
00:50:31,380 --> 00:50:37,339
and then uh finally uh we have uh some

1142
00:50:37,339 --> 00:50:41,819
links uh around this argument that uh

1143
00:50:41,819 --> 00:50:44,359
people can

1144
00:50:44,359 --> 00:50:47,520
can access uh they're obvious there's

1145
00:50:47,520 --> 00:50:51,420
the pr itself uh the hrpc document which

1146
00:50:51,420 --> 00:50:53,760
I guess will be discussed tomorrow at

1147
00:50:53,760 --> 00:50:55,700
exactly the same time

1148
00:50:55,700 --> 00:50:58,559
and uh and so I intend to use these

1149
00:50:58,559 --> 00:51:03,680
slides tomorrow as well and uh that's it

1150
00:51:08,220 --> 00:51:11,099
all right thank you Adrian um so can we

1151
00:51:11,099 --> 00:51:14,880
get a show of hands here and in the

1152
00:51:14,880 --> 00:51:17,220
in the room who has

1153
00:51:17,220 --> 00:51:17,900
um

1154
00:51:17,900 --> 00:51:21,240
reviewed the um

1155
00:51:21,240 --> 00:51:24,480
uh the the pr looked at the proposed

1156
00:51:24,480 --> 00:51:25,800
text

1157
00:51:25,800 --> 00:51:27,359
Justin

1158
00:51:27,359 --> 00:51:28,020
um

1159
00:51:28,020 --> 00:51:30,480
anybody else

1160
00:51:30,480 --> 00:51:34,619
and if anybody online has done that

1161
00:51:34,619 --> 00:51:39,359
maybe say so Fabian has reviewed it uh

1162
00:51:39,359 --> 00:51:41,220
he says on chat

1163
00:51:41,220 --> 00:51:44,280
all right so we actually I think we need

1164
00:51:44,280 --> 00:51:46,559
a little bit more review on this um to

1165
00:51:46,559 --> 00:51:48,000
act on it but

1166
00:51:48,000 --> 00:51:50,220
um I don't know if any of the um any of

1167
00:51:50,220 --> 00:51:52,920
the core uh editors could step up and

1168
00:51:52,920 --> 00:51:55,380
give your impressions and

1169
00:51:55,380 --> 00:51:57,660
um sort of feedback

1170
00:51:57,660 --> 00:51:59,720
um

1171
00:52:01,020 --> 00:52:03,960
hi uh Justin richer speaking

1172
00:52:03,960 --> 00:52:08,300
um speaking as editor uh

1173
00:52:08,300 --> 00:52:12,359
one of the uh one of the problems with

1174
00:52:12,359 --> 00:52:14,400
the text as proposed

1175
00:52:14,400 --> 00:52:18,540
is that it places requirements on an app

1176
00:52:18,540 --> 00:52:20,880
as a specification and not on

1177
00:52:20,880 --> 00:52:23,280
implementers of canap

1178
00:52:23,280 --> 00:52:24,119
um

1179
00:52:24,119 --> 00:52:28,079
this brings up a lot of very important

1180
00:52:28,079 --> 00:52:30,359
um things that should be considered uh

1181
00:52:30,359 --> 00:52:32,579
during deployments

1182
00:52:32,579 --> 00:52:34,619
but

1183
00:52:34,619 --> 00:52:37,200
um it needs to be written such that

1184
00:52:37,200 --> 00:52:41,720
somebody making a deployment decision

1185
00:52:41,720 --> 00:52:44,300
knows the trade-offs

1186
00:52:44,300 --> 00:52:47,400
from the human rights perspective about

1187
00:52:47,400 --> 00:52:50,880
doing different things so what are the

1188
00:52:50,880 --> 00:52:53,099
trade-offs for example for allowing an

1189
00:52:53,099 --> 00:52:57,420
end user to specify which as is

1190
00:52:57,420 --> 00:53:00,180
associated with which are us

1191
00:53:00,180 --> 00:53:03,480
there are very clear security trade-offs

1192
00:53:03,480 --> 00:53:06,839
for doing that there are also privacy

1193
00:53:06,839 --> 00:53:08,880
trade-offs and human rights trade-offs

1194
00:53:08,880 --> 00:53:11,700
and this this needs to be written in

1195
00:53:11,700 --> 00:53:14,700
that way and not

1196
00:53:14,700 --> 00:53:19,559
with normative requirements on gnap as a

1197
00:53:19,559 --> 00:53:22,640
specification as in gnap must specify

1198
00:53:22,640 --> 00:53:26,160
this which is how it's uh it's the text

1199
00:53:26,160 --> 00:53:28,440
was currently proposed

1200
00:53:28,440 --> 00:53:32,280
um Fabian has moved a uh trimmed down

1201
00:53:32,280 --> 00:53:34,619
and edited version of this to the RS

1202
00:53:34,619 --> 00:53:37,680
draft because this is a lot about

1203
00:53:37,680 --> 00:53:39,420
um this the text was mostly about

1204
00:53:39,420 --> 00:53:42,599
association between RS and as and not

1205
00:53:42,599 --> 00:53:44,940
about uh sort of client to as client to

1206
00:53:44,940 --> 00:53:47,160
RS stuff that the core document is

1207
00:53:47,160 --> 00:53:48,599
focused on

1208
00:53:48,599 --> 00:53:50,280
um so we do think that it's a better fit

1209
00:53:50,280 --> 00:53:53,819
for that space anyway

1210
00:53:53,819 --> 00:53:56,819
um but it would need to be written

1211
00:53:56,819 --> 00:53:58,800
closer to the security and privacy

1212
00:53:58,800 --> 00:54:01,400
considerations

1213
00:54:03,240 --> 00:54:05,880
speaking as an individual

1214
00:54:05,880 --> 00:54:06,599
um

1215
00:54:06,599 --> 00:54:11,400
I haven't read the pr so the pr as is

1216
00:54:11,400 --> 00:54:15,240
may not be appropriate but I think

1217
00:54:15,240 --> 00:54:16,220
um

1218
00:54:16,220 --> 00:54:20,819
requiring that the spec should provide

1219
00:54:20,819 --> 00:54:22,920
capabilities

1220
00:54:22,920 --> 00:54:27,420
that allow good implementations I think

1221
00:54:27,420 --> 00:54:30,420
that makes total sense so I would

1222
00:54:30,420 --> 00:54:32,599
encourage the editors to look at

1223
00:54:32,599 --> 00:54:36,540
Adrian's three options and see which of

1224
00:54:36,540 --> 00:54:39,319
them can be reasonably implemented

1225
00:54:39,319 --> 00:54:43,200
within the current framework or maybe we

1226
00:54:43,200 --> 00:54:45,720
should add something to the framework to

1227
00:54:45,720 --> 00:54:49,440
allow them having said that

1228
00:54:49,440 --> 00:54:52,619
um anything that involves implementers

1229
00:54:52,619 --> 00:54:55,380
in my opinion again as an individual

1230
00:54:55,380 --> 00:54:58,020
should be guidelines trade-offs

1231
00:54:58,020 --> 00:55:02,720
considerations versus normative text

1232
00:55:08,599 --> 00:55:11,760
what Justin was saying um originally

1233
00:55:11,760 --> 00:55:14,640
well first I I want to thank Adrian for

1234
00:55:14,640 --> 00:55:16,680
for the contribution because it's I

1235
00:55:16,680 --> 00:55:18,960
think it's an important topic and I'm

1236
00:55:18,960 --> 00:55:21,420
going to be able to to participate

1237
00:55:21,420 --> 00:55:25,500
tomorrow uh at the hpsc meeting as well

1238
00:55:25,500 --> 00:55:28,140
um so that's the first thing the seventh

1239
00:55:28,140 --> 00:55:31,319
thing is initially there was a PR on the

1240
00:55:31,319 --> 00:55:35,280
core draft and actually moved it to the

1241
00:55:35,280 --> 00:55:37,020
arrest draft so I think that's already

1242
00:55:37,020 --> 00:55:39,839
the first discussion to have is what the

1243
00:55:39,839 --> 00:55:40,920
right place

1244
00:55:40,920 --> 00:55:45,240
for that specific text to to be I do

1245
00:55:45,240 --> 00:55:47,220
think the RS draft is a better place

1246
00:55:47,220 --> 00:55:49,260
because it's really where we've got the

1247
00:55:49,260 --> 00:55:51,720
requirements on the RS part

1248
00:55:51,720 --> 00:55:54,180
and it's also where the actual

1249
00:55:54,180 --> 00:55:57,559
mitigation can take place such as

1250
00:55:57,559 --> 00:56:00,900
integration for for the tokens and stuff

1251
00:56:00,900 --> 00:56:02,640
like that

1252
00:56:02,640 --> 00:56:03,599
um

1253
00:56:03,599 --> 00:56:06,059
now said that I think there's remaining

1254
00:56:06,059 --> 00:56:08,460
work to be done and we are very open to

1255
00:56:08,460 --> 00:56:11,160
actually get more feedback on the actual

1256
00:56:11,160 --> 00:56:14,339
text and not speaking now as an editor

1257
00:56:14,339 --> 00:56:16,460
but just from a personal point of view

1258
00:56:16,460 --> 00:56:20,220
I'm really not sure a shoot well most I

1259
00:56:20,220 --> 00:56:22,319
think is is really difficult to

1260
00:56:22,319 --> 00:56:24,839
implement and even a shoot

1261
00:56:24,839 --> 00:56:28,380
is something well when I try to take out

1262
00:56:28,380 --> 00:56:31,700
the the text from Adrian and actually

1263
00:56:31,700 --> 00:56:36,119
put that into the areas draft as a PR

1264
00:56:36,119 --> 00:56:39,660
um the actual way is to to do that from

1265
00:56:39,660 --> 00:56:42,240
a practical perspective really depends

1266
00:56:42,240 --> 00:56:44,220
on the situation

1267
00:56:44,220 --> 00:56:47,880
um and so that's why so far at least in

1268
00:56:47,880 --> 00:56:50,339
in the part I've put is there's no shoot

1269
00:56:50,339 --> 00:56:53,220
and no must because we'd like to before

1270
00:56:53,220 --> 00:56:56,220
doing that at least be sure that

1271
00:56:56,220 --> 00:56:58,740
something can be done in in practice but

1272
00:56:58,740 --> 00:57:02,598
that's it's funny thank you

1273
00:57:04,140 --> 00:57:06,960
um okay uh for my part first of all I

1274
00:57:06,960 --> 00:57:09,960
want to thank the uh the editors and and

1275
00:57:09,960 --> 00:57:13,559
the chairs for uh uh uh taking this uh

1276
00:57:13,559 --> 00:57:18,059
seriously and uh uh point out that uh

1277
00:57:18,059 --> 00:57:20,220
hopefully tomorrow

1278
00:57:20,220 --> 00:57:24,359
um we will see whether gnap is really

1279
00:57:24,359 --> 00:57:29,520
the the ideal example of a of a protocol

1280
00:57:29,520 --> 00:57:33,180
that hrpc and ietf wanted to address by

1281
00:57:33,180 --> 00:57:37,020
whatever process they had in mind

1282
00:57:37,020 --> 00:57:41,280
um I uh for this context as we discuss

1283
00:57:41,280 --> 00:57:44,240
whether this is an implementation issue

1284
00:57:44,240 --> 00:57:47,099
uh or not

1285
00:57:47,099 --> 00:57:50,520
um I just wanted to make the point uh to

1286
00:57:50,520 --> 00:57:53,460
stress the point that uh given a choice

1287
00:57:53,460 --> 00:57:57,980
uh we have very good evidence that

1288
00:57:57,980 --> 00:58:02,640
implementations will not give uh uh

1289
00:58:02,640 --> 00:58:05,880
resource owners uh this uh this

1290
00:58:05,880 --> 00:58:08,040
capability and that is true of any human

1291
00:58:08,040 --> 00:58:09,059
right

1292
00:58:09,059 --> 00:58:11,760
um to the extent that it's optional it

1293
00:58:11,760 --> 00:58:14,700
it does not happen and the bad thing

1294
00:58:14,700 --> 00:58:17,700
about that is that regulatory capture in

1295
00:58:17,700 --> 00:58:21,240
other contexts outside of our context

1296
00:58:21,240 --> 00:58:25,980
here basically denies Regulators a an

1297
00:58:25,980 --> 00:58:29,339
opportunity to to fix this uh this

1298
00:58:29,339 --> 00:58:33,720
hyperscaling problem on platforms uh so

1299
00:58:33,720 --> 00:58:36,359
um what I'm looking for is of course the

1300
00:58:36,359 --> 00:58:38,640
advice as was said of the editors as to

1301
00:58:38,640 --> 00:58:41,099
whether this can be done and how it can

1302
00:58:41,099 --> 00:58:45,559
be done uh and then

1303
00:58:48,059 --> 00:58:52,460
Adrian your audio dropped out

1304
00:58:52,740 --> 00:58:57,299
uh no it's back there we go okay and so

1305
00:58:57,299 --> 00:59:00,420
uh number one is the discussion that is

1306
00:59:00,420 --> 00:59:02,099
anticipated as to whether this is

1307
00:59:02,099 --> 00:59:06,240
possible and how uh and then uh what is

1308
00:59:06,240 --> 00:59:07,520
the process

1309
00:59:07,520 --> 00:59:14,040
uh that uh sort of uh the the the group

1310
00:59:14,040 --> 00:59:17,579
will use uh to determine whether it

1311
00:59:17,579 --> 00:59:21,059
should be uh a must or should uh thank

1312
00:59:21,059 --> 00:59:23,180
you

1313
00:59:25,700 --> 00:59:28,440
to make it clear that I'm speaking as an

1314
00:59:28,440 --> 00:59:30,359
individual so

1315
00:59:30,359 --> 00:59:32,400
um a couple of comments I I think uh

1316
00:59:32,400 --> 00:59:34,440
Adrian your your point is well made

1317
00:59:34,440 --> 00:59:36,839
maybe maybe not

1318
00:59:36,839 --> 00:59:39,900
um it worth repeating that like in in

1319
00:59:39,900 --> 00:59:42,540
society as a whole like free association

1320
00:59:42,540 --> 00:59:45,780
also comes with cost right it's not the

1321
00:59:45,780 --> 00:59:48,000
but we have chosen in society to

1322
00:59:48,000 --> 00:59:50,160
optimize too often right for for free

1323
00:59:50,160 --> 00:59:51,839
association and human rights over

1324
00:59:51,839 --> 00:59:54,000
security considerations I mean there are

1325
00:59:54,000 --> 00:59:56,760
security considerations with with free

1326
00:59:56,760 --> 00:59:59,059
association and some in some cases

1327
00:59:59,059 --> 01:00:01,859
Regulators actually come down on the on

1328
01:00:01,859 --> 01:00:03,660
the side of sort of against free

1329
01:00:03,660 --> 01:00:05,339
association

1330
01:00:05,339 --> 01:00:07,799
um but in in technology we've kind of

1331
01:00:07,799 --> 01:00:10,500
defaulted the other way because in in

1332
01:00:10,500 --> 01:00:13,559
large part we we're allowing as you put

1333
01:00:13,559 --> 01:00:15,359
it hyperscaler

1334
01:00:15,359 --> 01:00:17,460
um to to kind of govern what we do and I

1335
01:00:17,460 --> 01:00:21,240
think the the the way to deal with this

1336
01:00:21,240 --> 01:00:23,760
in or at least in this technology stack

1337
01:00:23,760 --> 01:00:27,240
is to make sure that Regulators that

1338
01:00:27,240 --> 01:00:30,540
let's flip this around to make sure that

1339
01:00:30,540 --> 01:00:32,400
um technology providers cannot hide

1340
01:00:32,400 --> 01:00:34,500
behind the lack of technical capability

1341
01:00:34,500 --> 01:00:37,440
to do the right thing and if the regular

1342
01:00:37,440 --> 01:00:39,900
is just Regulators choose

1343
01:00:39,900 --> 01:00:43,319
to to point at a particular instance of

1344
01:00:43,319 --> 01:00:45,599
deployment of technology and say this in

1345
01:00:45,599 --> 01:00:47,339
this particular instance we're going to

1346
01:00:47,339 --> 01:00:49,619
optimize for free association over

1347
01:00:49,619 --> 01:00:52,740
security and the technology itself

1348
01:00:52,740 --> 01:00:55,799
shouldn't sort of place restrictions the

1349
01:00:55,799 --> 01:00:58,559
capability should be there and I think

1350
01:00:58,559 --> 01:01:00,900
for for gnap that means that

1351
01:01:00,900 --> 01:01:03,180
sort of the the field should be there

1352
01:01:03,180 --> 01:01:06,720
but they don't necessarily have to be

1353
01:01:06,720 --> 01:01:09,200
um uh

1354
01:01:09,200 --> 01:01:11,760
judicious use of of sort of normative

1355
01:01:11,760 --> 01:01:13,740
language will be enough and we should

1356
01:01:13,740 --> 01:01:15,540
think about sort of the situations where

1357
01:01:15,540 --> 01:01:18,000
Regulators will come in and say no no in

1358
01:01:18,000 --> 01:01:20,160
this particular instance you know the

1359
01:01:20,160 --> 01:01:22,680
deployment of gnat must follow this

1360
01:01:22,680 --> 01:01:24,420
particular model and must be a must

1361
01:01:24,420 --> 01:01:27,240
allow for for the uh resource owner to

1362
01:01:27,240 --> 01:01:29,339
to control their as for instance if

1363
01:01:29,339 --> 01:01:31,740
that's what what kind of this this comes

1364
01:01:31,740 --> 01:01:33,720
down to to

1365
01:01:33,720 --> 01:01:36,240
um so so I think let's think carefully

1366
01:01:36,240 --> 01:01:38,339
about sort of what normative language we

1367
01:01:38,339 --> 01:01:40,680
put there to make sure that we give

1368
01:01:40,680 --> 01:01:43,980
Regulators kind of Maximum opportunity

1369
01:01:43,980 --> 01:01:46,980
to to do their job which is kind of to

1370
01:01:46,980 --> 01:01:49,559
govern uh the deployment of technology

1371
01:01:49,559 --> 01:01:52,020
and situations where where there is sort

1372
01:01:52,020 --> 01:01:54,000
of where human rights considerations

1373
01:01:54,000 --> 01:01:55,619
really actually matter

1374
01:01:55,619 --> 01:01:58,880
all right that's it

1375
01:02:02,579 --> 01:02:04,980
uh Justin richer this time speaking as

1376
01:02:04,980 --> 01:02:07,020
an individual not as an editor

1377
01:02:07,020 --> 01:02:10,260
um so uh one of the things about this

1378
01:02:10,260 --> 01:02:13,200
first off again echoing Fabian Singh and

1379
01:02:13,200 --> 01:02:15,720
uh thanking Adrian for bringing this in

1380
01:02:15,720 --> 01:02:17,160
um I do think that this is important

1381
01:02:17,160 --> 01:02:19,020
work and

1382
01:02:19,020 --> 01:02:20,640
um you know I remember a time in the

1383
01:02:20,640 --> 01:02:22,260
iitf where we didn't have privacy

1384
01:02:22,260 --> 01:02:24,420
consideration sections in uh in our

1385
01:02:24,420 --> 01:02:27,180
documents we do now they're required

1386
01:02:27,180 --> 01:02:30,240
um and that was that was a hard shift in

1387
01:02:30,240 --> 01:02:32,099
thinking for a lot of uh technology

1388
01:02:32,099 --> 01:02:33,480
nerds that just wanted to go build

1389
01:02:33,480 --> 01:02:35,220
protocols for things to talk to each

1390
01:02:35,220 --> 01:02:37,619
other so I get that this is that this is

1391
01:02:37,619 --> 01:02:39,299
a hard shift

1392
01:02:39,299 --> 01:02:42,900
um for for a lot of folks all that said

1393
01:02:42,900 --> 01:02:46,799
um I think that the considerations being

1394
01:02:46,799 --> 01:02:49,559
raised around free association and the

1395
01:02:49,559 --> 01:02:51,480
trade-offs they're in

1396
01:02:51,480 --> 01:02:53,880
um while those are very very important

1397
01:02:53,880 --> 01:02:57,059
we also need to keep in mind that

1398
01:02:57,059 --> 01:03:01,799
there's more than one solution to

1399
01:03:01,799 --> 01:03:03,480
providing this

1400
01:03:03,480 --> 01:03:06,299
so uh for example one of the things that

1401
01:03:06,299 --> 01:03:09,359
gnap has had as a fundamental pillar

1402
01:03:09,359 --> 01:03:13,079
from the beginning is the ability to get

1403
01:03:13,079 --> 01:03:15,599
more types of interaction more types of

1404
01:03:15,599 --> 01:03:16,980
information more types of things

1405
01:03:16,980 --> 01:03:20,599
expressed to the as by different parties

1406
01:03:20,599 --> 01:03:24,660
that would allow for a resource owner to

1407
01:03:24,660 --> 01:03:26,460
externalize their policies and express

1408
01:03:26,460 --> 01:03:28,319
them to the as which then turns that

1409
01:03:28,319 --> 01:03:31,319
into an access token without the RS and

1410
01:03:31,319 --> 01:03:33,480
as needing to have a loose coupling

1411
01:03:33,480 --> 01:03:34,740
between each other

1412
01:03:34,740 --> 01:03:37,680
so you can still have your RS be a very

1413
01:03:37,680 --> 01:03:40,319
simple dumb API that all it does is say

1414
01:03:40,319 --> 01:03:42,720
it's a token from somebody that I have

1415
01:03:42,720 --> 01:03:45,119
been hardwired to trust and that token

1416
01:03:45,119 --> 01:03:46,079
is good

1417
01:03:46,079 --> 01:03:48,000
and that is a level of abstraction that

1418
01:03:48,000 --> 01:03:49,559
we know from the technology side is

1419
01:03:49,559 --> 01:03:51,119
really really important

1420
01:03:51,119 --> 01:03:52,859
where this really starts to come into

1421
01:03:52,859 --> 01:03:54,900
play is what the as knows and what the

1422
01:03:54,900 --> 01:03:56,400
as can do

1423
01:03:56,400 --> 01:03:59,520
we're no longer in the oauth2 world of

1424
01:03:59,520 --> 01:04:02,339
assuming that somebody has an account

1425
01:04:02,339 --> 01:04:05,700
that they're logging into the as to

1426
01:04:05,700 --> 01:04:08,760
execute something we can go far beyond

1427
01:04:08,760 --> 01:04:11,940
that and that fits with what we've

1428
01:04:11,940 --> 01:04:13,859
presented many times here what the

1429
01:04:13,859 --> 01:04:15,299
editors have presented many times here

1430
01:04:15,299 --> 01:04:18,900
as the as a token Factory that is our

1431
01:04:18,900 --> 01:04:21,359
model this Factory can take in multiple

1432
01:04:21,359 --> 01:04:22,920
kinds of inputs it can take in

1433
01:04:22,920 --> 01:04:25,140
verifiable credentials it can take in

1434
01:04:25,140 --> 01:04:27,660
did documents it can take in zachimal if

1435
01:04:27,660 --> 01:04:30,359
you want it to all of those would be

1436
01:04:30,359 --> 01:04:32,700
extensions to connect its protocols

1437
01:04:32,700 --> 01:04:35,280
built on top of and around canap to

1438
01:04:35,280 --> 01:04:38,579
provide those things to the as

1439
01:04:38,579 --> 01:04:40,559
in order for it to be translated to the

1440
01:04:40,559 --> 01:04:44,700
RS and in doing that you could provide

1441
01:04:44,700 --> 01:04:47,819
the same kinds of Human Rights

1442
01:04:47,819 --> 01:04:51,319
considerations the same types of

1443
01:04:51,319 --> 01:04:52,880
blindings

1444
01:04:52,880 --> 01:04:55,920
uh that are that are talked about in the

1445
01:04:55,920 --> 01:05:00,180
pr without having to dissociate the As

1446
01:05:00,180 --> 01:05:03,119
and rs in the way that is proposed in

1447
01:05:03,119 --> 01:05:04,740
Adrian's text

1448
01:05:04,740 --> 01:05:07,260
so I do not I want to be very very sure

1449
01:05:07,260 --> 01:05:10,440
that we do not limit ourselves and limit

1450
01:05:10,440 --> 01:05:12,660
as they put the guidance to Regulators

1451
01:05:12,660 --> 01:05:15,599
to say only choose this only choose

1452
01:05:15,599 --> 01:05:19,020
bring your own as as the only option in

1453
01:05:19,020 --> 01:05:20,460
order to fulfill this

1454
01:05:20,460 --> 01:05:22,920
what we really want

1455
01:05:22,920 --> 01:05:26,640
is a system that allows these types of

1456
01:05:26,640 --> 01:05:29,940
sort of Human Rights pieces to be

1457
01:05:29,940 --> 01:05:31,440
addressed

1458
01:05:31,440 --> 01:05:34,619
and provide guidance on ways that that

1459
01:05:34,619 --> 01:05:37,500
can be accomplished and not necessarily

1460
01:05:37,500 --> 01:05:42,200
a single way to do that

1461
01:05:52,380 --> 01:05:54,599
you'll have to forgive me if this is a

1462
01:05:54,599 --> 01:05:56,160
little naive this isn't a space I've

1463
01:05:56,160 --> 01:05:58,980
spent a lot of time in but the concern I

1464
01:05:58,980 --> 01:06:01,740
have is you can solve this at a

1465
01:06:01,740 --> 01:06:04,260
technology problem and make the AIS

1466
01:06:04,260 --> 01:06:06,380
independent but

1467
01:06:06,380 --> 01:06:09,480
resource servers make a commitment to

1468
01:06:09,480 --> 01:06:12,839
the resource owners to protect

1469
01:06:12,839 --> 01:06:15,900
that data to a certain level

1470
01:06:15,900 --> 01:06:17,640
and

1471
01:06:17,640 --> 01:06:19,740
it's going to be very difficult for

1472
01:06:19,740 --> 01:06:21,540
resource servers to keep those

1473
01:06:21,540 --> 01:06:22,799
commitments

1474
01:06:22,799 --> 01:06:25,619
if they don't have control or they don't

1475
01:06:25,619 --> 01:06:27,299
have trust

1476
01:06:27,299 --> 01:06:31,740
of that uh the authorization server and

1477
01:06:31,740 --> 01:06:32,780
so

1478
01:06:32,780 --> 01:06:36,839
I even if it not made it possible

1479
01:06:36,839 --> 01:06:39,299
I'm not quite sure whether resource

1480
01:06:39,299 --> 01:06:40,920
servers would be able to continue making

1481
01:06:40,920 --> 01:06:42,780
those commitments to the resource owners

1482
01:06:42,780 --> 01:06:46,220
on protecting the data

1483
01:06:49,319 --> 01:06:52,859
um I I to that point I I that's also

1484
01:06:52,859 --> 01:06:54,720
actually turning into a regulatory thing

1485
01:06:54,720 --> 01:06:57,059
I mean we're we're seeing the EU

1486
01:06:57,059 --> 01:06:58,859
regulating sort of

1487
01:06:58,859 --> 01:07:01,079
um platform providers to force them to

1488
01:07:01,079 --> 01:07:04,200
provide sort of externalized mechanisms

1489
01:07:04,200 --> 01:07:08,460
for for data access etc etc so again

1490
01:07:08,460 --> 01:07:11,640
it's it's kind of it's not yes you're

1491
01:07:11,640 --> 01:07:13,680
right right to a certain extent you have

1492
01:07:13,680 --> 01:07:15,240
to be able to sort of trust all the

1493
01:07:15,240 --> 01:07:17,579
components in your system but again uh

1494
01:07:17,579 --> 01:07:20,640
it's all of that is up to a point

1495
01:07:20,640 --> 01:07:24,000
um you know trust is not absolute and in

1496
01:07:24,000 --> 01:07:27,000
the you know in in a situation where you

1497
01:07:27,000 --> 01:07:29,099
actually you have Regulators saying no

1498
01:07:29,099 --> 01:07:31,319
no you're you actually need to be able

1499
01:07:31,319 --> 01:07:33,960
to provide some externalized mechanism

1500
01:07:33,960 --> 01:07:36,780
for for injecting policy into your your

1501
01:07:36,780 --> 01:07:39,660
own resources which is happening today

1502
01:07:39,660 --> 01:07:42,059
right that kind of Regulation

1503
01:07:42,059 --> 01:07:45,119
um I I what I actually you know the the

1504
01:07:45,119 --> 01:07:47,280
trust issues may not actually be that

1505
01:07:47,280 --> 01:07:50,460
absolute right as as a as a resource

1506
01:07:50,460 --> 01:07:53,220
owner as a resource server you may

1507
01:07:53,220 --> 01:07:55,200
actually have to comply with legislation

1508
01:07:55,200 --> 01:07:58,079
saying all right here's a set of trusted

1509
01:07:58,079 --> 01:08:01,140
um independently provided resource

1510
01:08:01,140 --> 01:08:03,180
servers you know choose one right that's

1511
01:08:03,180 --> 01:08:05,940
another sort of mechanism for doing that

1512
01:08:05,940 --> 01:08:08,520
um and what I actually came up to this

1513
01:08:08,520 --> 01:08:11,520
comment was Justin and I you know yes

1514
01:08:11,520 --> 01:08:15,059
gnat provides a bunch of open a certain

1515
01:08:15,059 --> 01:08:16,920
amount of openness

1516
01:08:16,920 --> 01:08:18,000
um

1517
01:08:18,000 --> 01:08:20,460
you just have to make sure that all of

1518
01:08:20,460 --> 01:08:22,380
those capabilities that you're talking

1519
01:08:22,380 --> 01:08:24,719
about Justin are actually real and and

1520
01:08:24,719 --> 01:08:28,140
can't be sort of configured away easily

1521
01:08:28,140 --> 01:08:31,439
um so again I'm I'm all for providing I

1522
01:08:31,439 --> 01:08:33,120
think the the approach would be to

1523
01:08:33,120 --> 01:08:36,238
provide maximum amount of technological

1524
01:08:36,238 --> 01:08:37,738
Freedom

1525
01:08:37,738 --> 01:08:40,738
um in implementations but then allow The

1526
01:08:40,738 --> 01:08:43,859
Regulators to go and tell the resource

1527
01:08:43,859 --> 01:08:46,500
servers and the authorization servers

1528
01:08:46,500 --> 01:08:49,198
and and you know and here's how you must

1529
01:08:49,198 --> 01:08:51,479
behave in this particular context and

1530
01:08:51,479 --> 01:08:53,399
that should be possible and you know we

1531
01:08:53,399 --> 01:08:55,259
won't don't want the resource owners or

1532
01:08:55,259 --> 01:08:57,238
the authorization servers to come back

1533
01:08:57,238 --> 01:08:59,279
to us and say no we can't do it because

1534
01:08:59,279 --> 01:09:02,299
it's not in the spec

1535
01:09:07,259 --> 01:09:11,100
um so I just wanted to uh to close with

1536
01:09:11,100 --> 01:09:13,560
I think it's important that we don't

1537
01:09:13,560 --> 01:09:17,819
conflate the roles here

1538
01:09:17,819 --> 01:09:21,960
um I think that the uh the borders

1539
01:09:21,960 --> 01:09:24,660
around what we're calling a resource

1540
01:09:24,660 --> 01:09:27,540
server and a lot of this discussion

1541
01:09:27,540 --> 01:09:28,979
um is

1542
01:09:28,979 --> 01:09:31,040
getting fuzzy

1543
01:09:31,040 --> 01:09:32,939
and

1544
01:09:32,939 --> 01:09:36,238
um in practice the thing that the

1545
01:09:36,238 --> 01:09:38,279
resource owner trusts

1546
01:09:38,279 --> 01:09:41,339
is a combination of authorization server

1547
01:09:41,339 --> 01:09:43,799
and resource server

1548
01:09:43,799 --> 01:09:45,779
the abstraction of those two components

1549
01:09:45,779 --> 01:09:47,939
is a technological abstraction not an

1550
01:09:47,939 --> 01:09:49,920
ideological one

1551
01:09:49,920 --> 01:09:51,960
the authorization server is the

1552
01:09:51,960 --> 01:09:55,380
component that provides an artifact for

1553
01:09:55,380 --> 01:09:58,260
access the access token

1554
01:09:58,260 --> 01:09:59,900
and it is

1555
01:09:59,900 --> 01:10:04,219
the part of the resource protecting

1556
01:10:04,219 --> 01:10:07,080
ecosystem that does the translation

1557
01:10:07,080 --> 01:10:11,640
between policy and identity and context

1558
01:10:11,640 --> 01:10:14,580
into that access token

1559
01:10:14,580 --> 01:10:17,160
so I think a lot of this we're getting

1560
01:10:17,160 --> 01:10:20,219
hung up on the resource server is this

1561
01:10:20,219 --> 01:10:22,500
independent thing that somebody actually

1562
01:10:22,500 --> 01:10:24,840
has an account on and they stored their

1563
01:10:24,840 --> 01:10:27,360
data on and that's where they set their

1564
01:10:27,360 --> 01:10:29,520
policies and the authorization server is

1565
01:10:29,520 --> 01:10:31,140
something that's coming in and trying to

1566
01:10:31,140 --> 01:10:34,199
like you know wedge that open whereas

1567
01:10:34,199 --> 01:10:37,199
what's really the reality out there

1568
01:10:37,199 --> 01:10:40,199
is that what people think of as the

1569
01:10:40,199 --> 01:10:42,659
protected resource

1570
01:10:42,659 --> 01:10:45,840
at large is some combination of

1571
01:10:45,840 --> 01:10:48,420
authorization server and resource server

1572
01:10:48,420 --> 01:10:51,000
in oauth one we called it just the

1573
01:10:51,000 --> 01:10:53,460
server it was one component

1574
01:10:53,460 --> 01:10:55,560
in oauth 2 we allowed those to be

1575
01:10:55,560 --> 01:10:58,199
abstracted not for ideological reasons

1576
01:10:58,199 --> 01:11:00,239
but for technological reasons people

1577
01:11:00,239 --> 01:11:01,980
were building distributed systems and we

1578
01:11:01,980 --> 01:11:04,440
wanted standardized standardized ways to

1579
01:11:04,440 --> 01:11:07,339
connect those on The Wire

1580
01:11:08,100 --> 01:11:11,760
gnap is taking an app as a protocol

1581
01:11:11,760 --> 01:11:14,520
allows those two to be loosely

1582
01:11:14,520 --> 01:11:16,020
associated

1583
01:11:16,020 --> 01:11:20,400
but also allows the as to take in more

1584
01:11:20,400 --> 01:11:22,679
information like I was saying before

1585
01:11:22,679 --> 01:11:25,620
so that you can draw that line in

1586
01:11:25,620 --> 01:11:28,440
multiple ways depending on what makes

1587
01:11:28,440 --> 01:11:30,840
the most sense for your use case

1588
01:11:30,840 --> 01:11:33,120
and if we can provide better guidance

1589
01:11:33,120 --> 01:11:35,340
about what it means when you draw that

1590
01:11:35,340 --> 01:11:38,040
line in each of these places

1591
01:11:38,040 --> 01:11:40,980
then I think we should and I think that

1592
01:11:40,980 --> 01:11:42,719
this provides a good motivation for

1593
01:11:42,719 --> 01:11:44,940
doing that but it still remains an

1594
01:11:44,940 --> 01:11:47,719
implementer's choice

1595
01:11:48,659 --> 01:11:52,560
thank you Justin to wrap up this part of

1596
01:11:52,560 --> 01:11:54,960
the meeting Adrian if there's anything

1597
01:11:54,960 --> 01:11:58,020
you would like to close with

1598
01:11:58,020 --> 01:12:00,900
uh no thank you very much I think this

1599
01:12:00,900 --> 01:12:04,800
moves to a process question for hrpc

1600
01:12:04,800 --> 01:12:07,679
tomorrow and then uh back to the editors

1601
01:12:07,679 --> 01:12:10,699
in this group

1602
01:12:10,980 --> 01:12:14,400
thank you thank you Adrian

1603
01:12:14,400 --> 01:12:18,920
Justin back to your slide foreign

1604
01:12:19,320 --> 01:12:22,320
just put it up on the last slide that's

1605
01:12:22,320 --> 01:12:25,340
pretty much all we got

1606
01:12:25,920 --> 01:12:28,679
all right so um well that's well that's

1607
01:12:28,679 --> 01:12:30,060
popping up

1608
01:12:30,060 --> 01:12:32,179
um

1609
01:12:32,940 --> 01:12:37,020
basically uh the question is

1610
01:12:37,020 --> 01:12:39,120
what do we do now

1611
01:12:39,120 --> 01:12:41,100
um we've been working on gnap for a

1612
01:12:41,100 --> 01:12:43,679
couple of years now uh we've had a lot

1613
01:12:43,679 --> 01:12:44,820
of good work and a handful of

1614
01:12:44,820 --> 01:12:47,699
implementations on it

1615
01:12:47,699 --> 01:12:49,920
um at this point the editors think you

1616
01:12:49,920 --> 01:12:50,640
know

1617
01:12:50,640 --> 01:12:53,400
it's probably time to ship it uh it's

1618
01:12:53,400 --> 01:12:55,199
probably not perfect uh it would have

1619
01:12:55,199 --> 01:12:58,620
been nice to have had uh you know sort

1620
01:12:58,620 --> 01:12:59,340
of

1621
01:12:59,340 --> 01:13:02,520
more eyes and more things uh involved

1622
01:13:02,520 --> 01:13:04,199
here more features and things like that

1623
01:13:04,199 --> 01:13:09,179
but what we have is pretty solid and so

1624
01:13:09,179 --> 01:13:12,360
our proposal as editors is that we take

1625
01:13:12,360 --> 01:13:14,400
the document uh we take the core

1626
01:13:14,400 --> 01:13:15,600
document

1627
01:13:15,600 --> 01:13:18,239
and we move this into working group last

1628
01:13:18,239 --> 01:13:20,940
call Fabian and I started uh looking

1629
01:13:20,940 --> 01:13:24,239
through the document and you know I

1630
01:13:24,239 --> 01:13:26,159
could use a little bit of an editorial

1631
01:13:26,159 --> 01:13:30,179
dusting on the text but we think that

1632
01:13:30,179 --> 01:13:32,699
um conceptually the the core document

1633
01:13:32,699 --> 01:13:35,520
modulo the missing error messages that

1634
01:13:35,520 --> 01:13:37,199
we already know about

1635
01:13:37,199 --> 01:13:39,960
um is uh is ready for

1636
01:13:39,960 --> 01:13:43,080
a last uh set of last call reviews so

1637
01:13:43,080 --> 01:13:46,460
that's what we would like to do now

1638
01:13:47,880 --> 01:13:50,280
And to clarify that shows are fine with

1639
01:13:50,280 --> 01:13:52,519
that

1640
01:13:52,860 --> 01:13:56,400
so we are actively seeking feedback on

1641
01:13:56,400 --> 01:13:59,280
that decision from the working group and

1642
01:13:59,280 --> 01:14:03,300
uh if anybody wants to commit to doing a

1643
01:14:03,300 --> 01:14:06,360
last call review that would also be very

1644
01:14:06,360 --> 01:14:09,080
very good

1645
01:14:19,920 --> 01:14:21,840
everybody's rushing to the mic right now

1646
01:14:21,840 --> 01:14:25,040
I can I can feel it

1647
01:14:27,420 --> 01:14:31,320
thank you uh how would uh

1648
01:14:31,320 --> 01:14:35,400
uh how would this impact the uh process

1649
01:14:35,400 --> 01:14:38,520
by which something might be normatively

1650
01:14:38,520 --> 01:14:41,040
changed due to human rights uh

1651
01:14:41,040 --> 01:14:43,560
considerations

1652
01:14:43,560 --> 01:14:45,300
the editors do not anticipate any

1653
01:14:45,300 --> 01:14:46,679
normative changes due to the human

1654
01:14:46,679 --> 01:14:49,620
rights considerations as was just

1655
01:14:49,620 --> 01:14:52,099
discussed

1656
01:14:52,679 --> 01:14:55,020
I mean regardless of where that

1657
01:14:55,020 --> 01:14:57,960
discussion lands I I think we're

1658
01:14:57,960 --> 01:14:59,460
I think

1659
01:14:59,460 --> 01:15:01,620
um we we can deal with it during working

1660
01:15:01,620 --> 01:15:05,760
group last call I think what um this is

1661
01:15:05,760 --> 01:15:07,440
not uncommon for working groups that's

1662
01:15:07,440 --> 01:15:08,699
kind of

1663
01:15:08,699 --> 01:15:12,420
um that has a lot of sort of churn and

1664
01:15:12,420 --> 01:15:14,880
um limited resources that you kind of

1665
01:15:14,880 --> 01:15:17,159
need to push it into a working Loop

1666
01:15:17,159 --> 01:15:19,320
class called process in order to get

1667
01:15:19,320 --> 01:15:21,000
people to pay attention at the last

1668
01:15:21,000 --> 01:15:23,820
minute so even if it winds up being two

1669
01:15:23,820 --> 01:15:25,739
working group last calls so be it right

1670
01:15:25,739 --> 01:15:28,679
yeah it's better to kind of start

1671
01:15:28,679 --> 01:15:30,719
working on that and then commit to being

1672
01:15:30,719 --> 01:15:32,820
done I think

1673
01:15:32,820 --> 01:15:35,699
um I I wouldn't go so far as to say that

1674
01:15:35,699 --> 01:15:37,739
there will be absolutely we're sure

1675
01:15:37,739 --> 01:15:40,380
there's not going to be any uh

1676
01:15:40,380 --> 01:15:43,380
um normative language in there I I think

1677
01:15:43,380 --> 01:15:45,239
it's too soon to tell but I would

1678
01:15:45,239 --> 01:15:47,640
encourage like everybody to kind of just

1679
01:15:47,640 --> 01:15:50,219
Sprint to the Finish

1680
01:15:50,219 --> 01:15:52,020
right and to be clear

1681
01:15:52,020 --> 01:15:54,780
um what I said in case in case that

1682
01:15:54,780 --> 01:15:56,580
Precision was lost was that the editors

1683
01:15:56,580 --> 01:15:58,500
do not anticipate

1684
01:15:58,500 --> 01:16:02,400
any normative changes there might be but

1685
01:16:02,400 --> 01:16:05,159
considering what we've seen and what

1686
01:16:05,159 --> 01:16:06,780
we've read in the conversations we've

1687
01:16:06,780 --> 01:16:08,580
had so far we don't expect there to be

1688
01:16:08,580 --> 01:16:09,360
any

1689
01:16:09,360 --> 01:16:11,699
so that's that's that but yes I agree

1690
01:16:11,699 --> 01:16:13,800
with life that you can change things

1691
01:16:13,800 --> 01:16:16,580
during last call

1692
01:16:17,880 --> 01:16:20,820
I I have some of these very heavily

1693
01:16:20,820 --> 01:16:22,860
dependent on oauth 2 at the moment but

1694
01:16:22,860 --> 01:16:25,320
very ignorant of this as it has just

1695
01:16:25,320 --> 01:16:28,020
discovered it exists today I'm will

1696
01:16:28,020 --> 01:16:30,540
happily read through it and provide you

1697
01:16:30,540 --> 01:16:32,100
with feedback

1698
01:16:32,100 --> 01:16:34,739
as for what that's worth excellent no

1699
01:16:34,739 --> 01:16:37,940
that is worth a lot thank you

1700
01:16:40,380 --> 01:16:42,659
thank you and and for those in in the

1701
01:16:42,659 --> 01:16:45,000
room and those who are not

1702
01:16:45,000 --> 01:16:49,699
um people have implemented this protocol

1703
01:16:50,520 --> 01:16:53,400
if you implemented gnap you should have

1704
01:16:53,400 --> 01:16:55,920
a vested interest in getting this

1705
01:16:55,920 --> 01:16:59,100
protocol in in good shape into

1706
01:16:59,100 --> 01:17:02,659
publication so please give it a rate

1707
01:17:02,659 --> 01:17:05,580
the working group last call is the best

1708
01:17:05,580 --> 01:17:09,900
chance to get your feedback in

1709
01:17:09,900 --> 01:17:12,420
yeah Brent please tell Farley

1710
01:17:12,420 --> 01:17:15,080
thank you

1711
01:17:18,300 --> 01:17:19,620
all right

1712
01:17:19,620 --> 01:17:21,300
um the uh

1713
01:17:21,300 --> 01:17:24,659
uh the next uh part of this is that uh

1714
01:17:24,659 --> 01:17:27,000
of course a while ago we split gnap into

1715
01:17:27,000 --> 01:17:29,640
two main documents

1716
01:17:29,640 --> 01:17:31,980
um the resource servers draft deals with

1717
01:17:31,980 --> 01:17:34,320
the association oh sorry not to go there

1718
01:17:34,320 --> 01:17:37,500
yet okay sorry to interrupt do the

1719
01:17:37,500 --> 01:17:41,159
editors feel that the current version is

1720
01:17:41,159 --> 01:17:43,739
ready for last call or would you like to

1721
01:17:43,739 --> 01:17:47,280
make some I don't know minor changes

1722
01:17:47,280 --> 01:17:51,360
get get it to a more stable place and

1723
01:17:51,360 --> 01:17:54,000
then have a working group last call uh

1724
01:17:54,000 --> 01:17:56,100
let us get the um the errors and

1725
01:17:56,100 --> 01:17:58,620
Discovery bits for the open issues that

1726
01:17:58,620 --> 01:17:59,820
are in there I don't think that's going

1727
01:17:59,820 --> 01:18:01,560
to take very long

1728
01:18:01,560 --> 01:18:03,360
um I may even be able to do it like on

1729
01:18:03,360 --> 01:18:04,980
the plane

1730
01:18:04,980 --> 01:18:07,620
um but let us do that do one quick

1731
01:18:07,620 --> 01:18:09,120
revision

1732
01:18:09,120 --> 01:18:11,460
um and then I think from there that's

1733
01:18:11,460 --> 01:18:13,440
that's my take on it uh Fabian what do

1734
01:18:13,440 --> 01:18:15,060
you think

1735
01:18:15,060 --> 01:18:16,860
yes same

1736
01:18:16,860 --> 01:18:20,640
um I think we need to just have a read

1737
01:18:20,640 --> 01:18:23,040
for we need to get through that one more

1738
01:18:23,040 --> 01:18:24,840
time just to make sure that everything

1739
01:18:24,840 --> 01:18:27,719
is on good shape and and easy to read

1740
01:18:27,719 --> 01:18:31,140
for for people and then we can we can

1741
01:18:31,140 --> 01:18:33,380
achieve that yes so I think I would say

1742
01:18:33,380 --> 01:18:37,440
next week it should be it should be fine

1743
01:18:37,440 --> 01:18:39,360
yeah that sounds fair I think we can do

1744
01:18:39,360 --> 01:18:40,199
that

1745
01:18:40,199 --> 01:18:42,259
um

1746
01:18:43,920 --> 01:18:46,020
so that that'll be draft

1747
01:18:46,020 --> 01:18:50,360
12 then that'll end up being

1748
01:18:50,400 --> 01:18:53,400
all right excellent

1749
01:18:53,400 --> 01:18:55,920
um so the resource service draft

1750
01:18:55,920 --> 01:18:57,420
um this deals with the association

1751
01:18:57,420 --> 01:18:58,739
between resource servers and

1752
01:18:58,739 --> 01:19:00,420
authorization servers this is where we

1753
01:19:00,420 --> 01:19:03,480
have thing would have things like the uh

1754
01:19:03,480 --> 01:19:06,179
models of access tokens and sort of what

1755
01:19:06,179 --> 01:19:08,159
what these things mean and how you

1756
01:19:08,159 --> 01:19:10,440
communicate that

1757
01:19:10,440 --> 01:19:11,760
um

1758
01:19:11,760 --> 01:19:14,760
this hasn't really received a lot of a

1759
01:19:14,760 --> 01:19:17,340
lot of energy and a lot of attention uh

1760
01:19:17,340 --> 01:19:19,080
this is an open call to the working

1761
01:19:19,080 --> 01:19:21,000
group is there energy in the working

1762
01:19:21,000 --> 01:19:23,100
group at this point to also push the

1763
01:19:23,100 --> 01:19:24,840
resource server's draft over the finish

1764
01:19:24,840 --> 01:19:27,140
line

1765
01:19:30,179 --> 01:19:31,920
um the editors have spoken and we would

1766
01:19:31,920 --> 01:19:34,880
like there to be

1767
01:19:36,960 --> 01:19:40,320
so people in the room and local and

1768
01:19:40,320 --> 01:19:42,719
remote do are there people here who

1769
01:19:42,719 --> 01:19:44,840
would be willing to step up and do a a

1770
01:19:44,840 --> 01:19:47,880
review of the resource drafts in its

1771
01:19:47,880 --> 01:19:49,380
current form to kind of provide the

1772
01:19:49,380 --> 01:19:51,719
editors with a little bit of feedback on

1773
01:19:51,719 --> 01:19:55,040
kind of where where it needs work

1774
01:19:55,199 --> 01:19:56,159
yeah

1775
01:19:56,159 --> 01:19:59,520
yeah to be well we have a volunteer yeah

1776
01:19:59,520 --> 01:20:02,159
can I get your name for the record

1777
01:20:02,159 --> 01:20:03,960
Daryl Miller thank you that's much

1778
01:20:03,960 --> 01:20:07,040
appreciate appreciate it

1779
01:20:07,980 --> 01:20:09,659
yeah to be clear we know the resource

1780
01:20:09,659 --> 01:20:11,580
server draft needs work it has been

1781
01:20:11,580 --> 01:20:14,360
neglected

1782
01:20:16,260 --> 01:20:18,659
on this and on the last thing

1783
01:20:18,659 --> 01:20:21,120
of ask Norton Jen whatever we're called

1784
01:20:21,120 --> 01:20:25,640
is happy to continue reviewing

1785
01:20:25,800 --> 01:20:29,060
um okay could you repeat that name uh

1786
01:20:29,060 --> 01:20:34,460
Brent zondel gen digital okay

1787
01:20:49,620 --> 01:20:52,020
all right fantastic like the state of

1788
01:20:52,020 --> 01:20:54,600
the uh the RS draft is really going to

1789
01:20:54,600 --> 01:20:57,179
be dependent on the kind of input that

1790
01:20:57,179 --> 01:20:58,620
we get

1791
01:20:58,620 --> 01:21:01,140
um as it is right now it's a very

1792
01:21:01,140 --> 01:21:03,420
very drafty draft

1793
01:21:03,420 --> 01:21:06,239
um but we think there's potential to

1794
01:21:06,239 --> 01:21:08,880
kind of quickly bring this uh bring this

1795
01:21:08,880 --> 01:21:11,699
up in quality and uh also get this over

1796
01:21:11,699 --> 01:21:13,020
the line

1797
01:21:13,020 --> 01:21:14,460
um ideally

1798
01:21:14,460 --> 01:21:17,400
we would love to have the RS draft in a

1799
01:21:17,400 --> 01:21:20,460
state uh similar to what core is today

1800
01:21:20,460 --> 01:21:24,540
by ietf 116 Yokohama

1801
01:21:24,540 --> 01:21:26,880
it's a little aggressive but I honestly

1802
01:21:26,880 --> 01:21:28,500
think it's possible it's a shorter draft

1803
01:21:28,500 --> 01:21:30,659
uh there's there's

1804
01:21:30,659 --> 01:21:33,480
fewer moving Parts

1805
01:21:33,480 --> 01:21:34,280
um

1806
01:21:34,280 --> 01:21:38,460
but there's Le there's more unknown in

1807
01:21:38,460 --> 01:21:40,440
there right now so that's that's why we

1808
01:21:40,440 --> 01:21:43,320
need more eyes and more hands

1809
01:21:43,320 --> 01:21:46,560
I suggest we have an interim halfway

1810
01:21:46,560 --> 01:21:49,679
between now and Yokohama

1811
01:21:49,679 --> 01:21:52,739
where we look at the

1812
01:21:52,739 --> 01:21:55,560
situation with the code draft and make a

1813
01:21:55,560 --> 01:21:58,440
decision on the future of the Irish

1814
01:21:58,440 --> 01:22:00,179
draft

1815
01:22:00,179 --> 01:22:01,620
I think that that makes sense so we

1816
01:22:01,620 --> 01:22:03,900
would retarget like early January

1817
01:22:03,900 --> 01:22:09,799
probably thereabouts May January yeah

1818
01:22:13,920 --> 01:22:17,520
clarifying question isn't the uh the

1819
01:22:17,520 --> 01:22:19,860
this resource server drafted a fairly

1820
01:22:19,860 --> 01:22:22,040
critical part of actually being able to

1821
01:22:22,040 --> 01:22:24,960
allow people to do this

1822
01:22:24,960 --> 01:22:26,760
um interoperable

1823
01:22:26,760 --> 01:22:31,020
as and the fact that you could that they

1824
01:22:31,020 --> 01:22:33,120
can discover as capabilities is one of

1825
01:22:33,120 --> 01:22:34,920
the key parts of achieving this human

1826
01:22:34,920 --> 01:22:36,679
rights requirement

1827
01:22:36,679 --> 01:22:40,199
uh for the human rights side yes because

1828
01:22:40,199 --> 01:22:42,120
that's about association between the RS

1829
01:22:42,120 --> 01:22:44,520
and the as fundamentally so yes for that

1830
01:22:44,520 --> 01:22:45,840
aspect

1831
01:22:45,840 --> 01:22:49,020
um that's why Fabian moved Adrian's PR

1832
01:22:49,020 --> 01:22:51,900
with that consideration section to that

1833
01:22:51,900 --> 01:22:54,600
so for clarification

1834
01:22:54,600 --> 01:22:56,460
um I know you said you're you're new to

1835
01:22:56,460 --> 01:23:00,360
this space the core draft is about it's

1836
01:23:00,360 --> 01:23:01,920
really focusing on the client instance

1837
01:23:01,920 --> 01:23:03,840
and how that talks to the authorization

1838
01:23:03,840 --> 01:23:05,699
server and how that talks to the

1839
01:23:05,699 --> 01:23:08,040
resource server but it's a very sort of

1840
01:23:08,040 --> 01:23:10,860
client focused draft to how you make

1841
01:23:10,860 --> 01:23:14,000
those connections the core draft is

1842
01:23:14,000 --> 01:23:16,380
intentionally silent on how you connect

1843
01:23:16,380 --> 01:23:18,960
the RS and as together because by All

1844
01:23:18,960 --> 01:23:20,520
rights they could literally be in the

1845
01:23:20,520 --> 01:23:21,719
same box and reading from the same

1846
01:23:21,719 --> 01:23:23,219
database in which case you don't need

1847
01:23:23,219 --> 01:23:24,960
any interoperable way to connect them

1848
01:23:24,960 --> 01:23:26,400
they just

1849
01:23:26,400 --> 01:23:28,860
they're just on some internal backplane

1850
01:23:28,860 --> 01:23:31,260
and and that's how a lot of systems

1851
01:23:31,260 --> 01:23:33,060
actually work

1852
01:23:33,060 --> 01:23:35,040
um modern distributed systems though

1853
01:23:35,040 --> 01:23:37,199
need to have ways to communicate across

1854
01:23:37,199 --> 01:23:39,000
different nodes and so that's where you

1855
01:23:39,000 --> 01:23:40,320
get token introspection you get

1856
01:23:40,320 --> 01:23:42,179
structured tokens and that's where the

1857
01:23:42,179 --> 01:23:44,040
common token models and things like that

1858
01:23:44,040 --> 01:23:48,239
and the discovery of as capabilities uh

1859
01:23:48,239 --> 01:23:49,920
and stuff that the client never ever

1860
01:23:49,920 --> 01:23:52,620
sees or cares about that's where that is

1861
01:23:52,620 --> 01:23:55,860
and so what we did a while ago was take

1862
01:23:55,860 --> 01:23:58,020
those considerations which were all

1863
01:23:58,020 --> 01:24:00,179
originally just dumped into one big

1864
01:24:00,179 --> 01:24:02,820
document we took everything that was

1865
01:24:02,820 --> 01:24:04,739
about the connection between the RS and

1866
01:24:04,739 --> 01:24:05,699
the as

1867
01:24:05,699 --> 01:24:08,699
and move that into its own spec and so

1868
01:24:08,699 --> 01:24:11,460
any questions about that about how you

1869
01:24:11,460 --> 01:24:14,280
deploy that those belong in that draft

1870
01:24:14,280 --> 01:24:17,400
and so that that is key to the specific

1871
01:24:17,400 --> 01:24:19,380
human rights concerns that Adrian has

1872
01:24:19,380 --> 01:24:21,679
brought up

1873
01:24:26,340 --> 01:24:28,760
all right

1874
01:24:29,820 --> 01:24:33,000
okay all right so I think that brexit

1875
01:24:33,000 --> 01:24:35,460
yeah that's that's all we had um please

1876
01:24:35,460 --> 01:24:37,739
read the new draft there have been uh

1877
01:24:37,739 --> 01:24:40,739
quite a few changes in the actual text

1878
01:24:40,739 --> 01:24:44,340
and uh look for the new new draft uh

1879
01:24:44,340 --> 01:24:47,540
hopefully in about a week's time

1880
01:24:50,100 --> 01:24:52,560
okay Justin I think we we have a plan

1881
01:24:52,560 --> 01:24:53,820
for

1882
01:24:53,820 --> 01:24:56,340
uh the time period between now and

1883
01:24:56,340 --> 01:24:57,659
Yokohama

1884
01:24:57,659 --> 01:25:02,000
we do expect to meet in Yokohama

1885
01:25:02,159 --> 01:25:03,860
um

1886
01:25:03,860 --> 01:25:08,659
thank you left and uh thanks everyone

1887
01:25:08,760 --> 01:25:11,780
all right thank you all

1888
01:25:17,340 --> 01:25:20,540
right we're wrapped

1889
01:25:22,620 --> 01:25:25,580
thank you guys

1890
01:25:39,739 --> 01:25:43,199
something's coming out of the woodwork

1891
01:25:43,199 --> 01:25:48,739
well I was just looking over already

1892
01:25:48,980 --> 01:25:51,540
seems to be fairly complete I'm

1893
01:25:51,540 --> 01:25:55,040
presenting HD signatures

1894
01:25:57,980 --> 01:26:00,600
are you thinking for something pretty

1895
01:26:00,600 --> 01:26:03,600
specific but they they kind of read the

1896
01:26:03,600 --> 01:26:06,300
second did apparently

1897
01:26:06,300 --> 01:26:09,300
somebody

1898
01:26:21,540 --> 01:26:24,860
well right

1899
01:26:27,620 --> 01:26:30,800
all right

1900
01:26:31,639 --> 01:26:36,139
and it is running in production

1901
01:26:54,179 --> 01:26:57,179
used

1902
01:27:04,800 --> 01:27:08,179
to a certain yeah

1903
01:27:15,080 --> 01:27:19,519
if you're committing with How uh

1904
01:27:20,699 --> 01:27:22,980
well you you have you sometimes use

1905
01:27:22,980 --> 01:27:25,080
something called someone method to do

1906
01:27:25,080 --> 01:27:28,020
large mesh Federation okay aggregate

1907
01:27:28,020 --> 01:27:29,580
some of them

1908
01:27:29,580 --> 01:27:32,960
so we have an authorization sorry

1909
01:27:35,000 --> 01:27:39,840
gives you a token based on the uh your

1910
01:27:39,840 --> 01:27:42,540
IDP whether it's actually associated

1911
01:27:42,540 --> 01:27:44,100
with

1912
01:27:44,100 --> 01:27:46,340
us

1913
01:28:01,760 --> 01:28:04,699
[Music]

1914
01:28:04,699 --> 01:28:07,139
is perfect for this because it's so

1915
01:28:07,139 --> 01:28:10,320
configurable that you can do

1916
01:28:10,320 --> 01:28:12,320
um

1917
01:28:26,940 --> 01:28:29,940
foreign

