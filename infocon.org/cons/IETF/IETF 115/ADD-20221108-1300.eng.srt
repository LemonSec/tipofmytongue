1
00:00:15,020 --> 00:00:18,840
no we have slides Paul

2
00:00:18,840 --> 00:00:21,779
Paul the chairs have slide

3
00:00:21,779 --> 00:00:24,140
so

4
00:00:25,220 --> 00:00:27,740
is this is this python

5
00:00:27,740 --> 00:00:29,939
yeah hello

6
00:00:29,939 --> 00:00:31,320
good thing I've stopped saying bad

7
00:00:31,320 --> 00:00:33,300
things about you Glenn yeah of course of

8
00:00:33,300 --> 00:00:34,440
course Dave

9
00:00:34,440 --> 00:00:37,680
yeah so you you do have scribes Tim

10
00:00:37,680 --> 00:00:40,079
yes no no we have slides we have two we

11
00:00:40,079 --> 00:00:41,840
have two slides

12
00:00:41,840 --> 00:00:45,000
I'm willing to cover our add portion as

13
00:00:45,000 --> 00:00:45,899
well

14
00:00:45,899 --> 00:00:49,079
no no no slides not scribes posts oh

15
00:00:49,079 --> 00:00:50,640
slides

16
00:00:50,640 --> 00:00:54,539
yes you need a better mic man

17
00:00:54,539 --> 00:00:56,640
yeah I think I'm gonna have to let Brian

18
00:00:56,640 --> 00:00:58,980
do Drive the slides this is some kind of

19
00:00:58,980 --> 00:01:01,079
West Virginia problem isn't it

20
00:01:01,079 --> 00:01:04,079
okay

21
00:01:05,220 --> 00:01:08,900
come on David it's early for Tim yeah

22
00:01:08,900 --> 00:01:13,380
uh so I I guess I really do not want to

23
00:01:13,380 --> 00:01:15,360
have to resort to the crying I am an

24
00:01:15,360 --> 00:01:17,159
ugly crier who who will be our scribes

25
00:01:17,159 --> 00:01:20,340
please that that word with a c scribe

26
00:01:20,340 --> 00:01:23,520
not not slide

27
00:01:23,520 --> 00:01:27,299
oh Lord oh thank you so much you were

28
00:01:27,299 --> 00:01:29,720
very kind

29
00:01:34,020 --> 00:01:37,759
I I appreciate it very much

30
00:01:38,280 --> 00:01:40,079
yeah yeah

31
00:01:40,079 --> 00:01:42,259
uh

32
00:01:42,259 --> 00:01:43,799
right

33
00:01:43,799 --> 00:01:45,840
um so you have presenter Grant yourself

34
00:01:45,840 --> 00:01:49,100
presenter right

35
00:01:49,979 --> 00:01:51,240
yeah

36
00:01:51,240 --> 00:01:53,298
um

37
00:01:53,540 --> 00:01:56,540
right right

38
00:01:58,500 --> 00:02:00,619
um

39
00:02:02,460 --> 00:02:04,560
yeah it's not

40
00:02:04,560 --> 00:02:09,360
turn on the presenting go up yep

41
00:02:09,360 --> 00:02:12,360
right

42
00:02:17,280 --> 00:02:19,340
um

43
00:02:19,440 --> 00:02:21,720
um and then when you click on the oh go

44
00:02:21,720 --> 00:02:24,720
to the meeting materials right right

45
00:02:24,720 --> 00:02:28,980
here yeah yeah and then right

46
00:02:30,540 --> 00:02:32,099
but right

47
00:02:32,099 --> 00:02:33,599
hi

48
00:02:33,599 --> 00:02:36,738
yeah can you help Glenn

49
00:02:47,340 --> 00:02:49,980
for flight controller it would be easier

50
00:02:49,980 --> 00:02:51,900
to do a lot faster way we cannot use

51
00:02:51,900 --> 00:02:53,000
that device

52
00:02:53,000 --> 00:02:55,140
that's just for monitoring the queue

53
00:02:55,140 --> 00:02:56,459
this is the only

54
00:02:56,459 --> 00:02:59,160
one you want well the agenda

55
00:02:59,160 --> 00:03:01,579
again

56
00:03:02,300 --> 00:03:06,540
and I help them to show up there on the

57
00:03:06,540 --> 00:03:09,120
screen that they come through properly

58
00:03:09,120 --> 00:03:11,280
Dave do you not have the slides showing

59
00:03:11,280 --> 00:03:13,580
in the room

60
00:03:13,760 --> 00:03:18,500
is the business

61
00:03:19,200 --> 00:03:21,120
yeah but it's not as the thing it's just

62
00:03:21,120 --> 00:03:24,140
showing the miracle window

63
00:03:34,099 --> 00:03:36,420
there we go there you go

64
00:03:36,420 --> 00:03:38,720
okay

65
00:03:39,860 --> 00:03:43,080
the ad came to the rescue thank you Eric

66
00:03:43,080 --> 00:03:47,000
you're awesome this is why he's taking

67
00:03:47,220 --> 00:03:49,739
okay I guess I failed the audition

68
00:03:49,739 --> 00:03:51,780
myself

69
00:03:51,780 --> 00:03:55,159
so are we going to be having a local

70
00:03:55,159 --> 00:04:00,019
deprived chair yeah no

71
00:04:01,680 --> 00:04:04,620
no Dave and Glenn if you guys just want

72
00:04:04,620 --> 00:04:06,180
to cover the administrivia I will cover

73
00:04:06,180 --> 00:04:08,099
slides five through eight and then we'll

74
00:04:08,099 --> 00:04:11,519
hand it off to um all

75
00:04:11,519 --> 00:04:13,019
right all right so

76
00:04:13,019 --> 00:04:16,320
um this so the way this is work setup is

77
00:04:16,320 --> 00:04:19,079
we're doing uh show slot uh D5 is going

78
00:04:19,079 --> 00:04:22,560
to go first and then add we have

79
00:04:22,560 --> 00:04:25,979
um uh slide sets for both of them and so

80
00:04:25,979 --> 00:04:27,600
I guess Tim's gonna remotely run the

81
00:04:27,600 --> 00:04:28,740
agenda

82
00:04:28,740 --> 00:04:31,080
um for that and I'll manage the slides

83
00:04:31,080 --> 00:04:33,360
so of course notewell applies this it's

84
00:04:33,360 --> 00:04:35,580
an ITF meeting and we are all subject to

85
00:04:35,580 --> 00:04:37,259
know well please read it and be familiar

86
00:04:37,259 --> 00:04:39,900
with it especially ECP 79 that's the

87
00:04:39,900 --> 00:04:41,840
best

88
00:04:41,840 --> 00:04:44,520
uh ITF meeting tips this session is

89
00:04:44,520 --> 00:04:45,960
being recorded

90
00:04:45,960 --> 00:04:48,120
um so please be aware you're also

91
00:04:48,120 --> 00:04:51,120
required to wear masks in the room and

92
00:04:51,120 --> 00:04:52,380
whilst actively speaking at the

93
00:04:52,380 --> 00:04:53,759
microphone and

94
00:04:53,759 --> 00:04:57,620
Jim Reed is wearing a mask

95
00:04:57,919 --> 00:05:01,020
thank you

96
00:05:01,020 --> 00:05:03,479
there's additional resources for itf-150

97
00:05:03,479 --> 00:05:04,620
in London you've already seen this

98
00:05:04,620 --> 00:05:06,360
probably in other sessions

99
00:05:06,360 --> 00:05:09,180
uh and then deprive I'm told it has a

100
00:05:09,180 --> 00:05:11,100
couple of slides you're gonna show I

101
00:05:11,100 --> 00:05:12,479
would like to acknowledge first that

102
00:05:12,479 --> 00:05:14,280
Limon has volunteered to be our scribe

103
00:05:14,280 --> 00:05:15,780
thank you Limon

104
00:05:15,780 --> 00:05:18,060
thank you

105
00:05:18,060 --> 00:05:20,639
so Tim I guess you're uh you're in

106
00:05:20,639 --> 00:05:21,840
charge here

107
00:05:21,840 --> 00:05:24,900
I actually I'm gonna do it Glenn oh okay

108
00:05:24,900 --> 00:05:26,580
sorry I can't see anybody I just hear

109
00:05:26,580 --> 00:05:27,720
voices

110
00:05:27,720 --> 00:05:29,639
that's all right that's fine

111
00:05:29,639 --> 00:05:31,560
um hi everyone this is Brian Haberman

112
00:05:31,560 --> 00:05:32,460
um

113
00:05:32,460 --> 00:05:34,440
quick quick update from the from the

114
00:05:34,440 --> 00:05:36,660
Deep Rock chairs perspective

115
00:05:36,660 --> 00:05:37,680
um Paul will talk a little bit more

116
00:05:37,680 --> 00:05:39,360
about the um the unilateral probing

117
00:05:39,360 --> 00:05:41,460
draft but um the big thing that we

118
00:05:41,460 --> 00:05:44,039
wanted to push across is is we're really

119
00:05:44,039 --> 00:05:45,479
starting to look for for more

120
00:05:45,479 --> 00:05:47,940
implementations of it uh currently the

121
00:05:47,940 --> 00:05:49,199
only one that we're aware of is the

122
00:05:49,199 --> 00:05:52,259
power DNS so you know thanks to Peter uh

123
00:05:52,259 --> 00:05:53,699
Tim and I have been chatting about this

124
00:05:53,699 --> 00:05:55,320
and and we have a couple of thoughts

125
00:05:55,320 --> 00:05:58,080
about what we should do going forward uh

126
00:05:58,080 --> 00:05:59,699
next slide please

127
00:05:59,699 --> 00:06:02,180
thank you

128
00:06:02,580 --> 00:06:04,039
so

129
00:06:04,039 --> 00:06:07,199
similar to you know what you see in in

130
00:06:07,199 --> 00:06:09,900
the routing area you know with the with

131
00:06:09,900 --> 00:06:12,360
the potential impact of of some of these

132
00:06:12,360 --> 00:06:14,940
changes we were wondering if it actually

133
00:06:14,940 --> 00:06:18,720
makes sense for us to to either uh Park

134
00:06:18,720 --> 00:06:20,520
the document

135
00:06:20,520 --> 00:06:22,020
um while while we wait for more

136
00:06:22,020 --> 00:06:23,220
implementations

137
00:06:23,220 --> 00:06:25,560
or potentially you know do the working

138
00:06:25,560 --> 00:06:27,240
group Last Call on the document to then

139
00:06:27,240 --> 00:06:28,319
park it and wait for more

140
00:06:28,319 --> 00:06:30,479
implementations so that we were sure

141
00:06:30,479 --> 00:06:32,639
that what we put forth to the iesg for

142
00:06:32,639 --> 00:06:36,300
submission as an RFC is is um is that

143
00:06:36,300 --> 00:06:38,580
stable and and and as well defined as

144
00:06:38,580 --> 00:06:40,319
possible

145
00:06:40,319 --> 00:06:42,840
um so with with that you know next slide

146
00:06:42,840 --> 00:06:46,199
I'm just curious if anybody has

147
00:06:46,199 --> 00:06:48,060
um any comments or thoughts on that

148
00:06:48,060 --> 00:06:49,259
approach

149
00:06:49,259 --> 00:06:51,900
um especially on the you know waiting on

150
00:06:51,900 --> 00:06:53,580
implementations

151
00:06:53,580 --> 00:06:57,120
um or the the the state at which we want

152
00:06:57,120 --> 00:06:58,500
to park it if we do want to wait for

153
00:06:58,500 --> 00:07:00,180
implementations

154
00:07:00,180 --> 00:07:01,880
and I'll just add

155
00:07:01,880 --> 00:07:04,440
I'm going to assume uh that deprive as

156
00:07:04,440 --> 00:07:06,840
well we're going to use the in me tool

157
00:07:06,840 --> 00:07:08,580
for doing

158
00:07:08,580 --> 00:07:10,680
um queue selection so you've probably

159
00:07:10,680 --> 00:07:11,819
seen this in other working groups

160
00:07:11,819 --> 00:07:13,199
already this week but please use that so

161
00:07:13,199 --> 00:07:15,060
it subscribes can see who is making

162
00:07:15,060 --> 00:07:17,100
comments and and going up

163
00:07:17,100 --> 00:07:19,699
yeah

164
00:07:20,599 --> 00:07:22,819
okay

165
00:07:22,819 --> 00:07:27,380
yeah okay yes Ben please

166
00:07:27,780 --> 00:07:31,139
hi Ben Schwartz uh

167
00:07:31,139 --> 00:07:34,740
I work uh at alphabet I do not work on

168
00:07:34,740 --> 00:07:37,080
for the most part on on Google public

169
00:07:37,080 --> 00:07:39,000
DNS I think the people who do it

170
00:07:39,000 --> 00:07:42,539
probably in the room but uh

171
00:07:42,539 --> 00:07:44,220
you know I I think that Google public

172
00:07:44,220 --> 00:07:45,960
DNS

173
00:07:45,960 --> 00:07:46,919
um

174
00:07:46,919 --> 00:07:50,520
is is headed toward an implementation of

175
00:07:50,520 --> 00:07:52,440
something along these lines but it

176
00:07:52,440 --> 00:07:54,660
probably won't be precisely what's in

177
00:07:54,660 --> 00:07:57,139
the RFC and I suspect that that's true

178
00:07:57,139 --> 00:08:00,840
of essentially uh many large-scale

179
00:08:00,840 --> 00:08:02,880
resolver systems which are not going to

180
00:08:02,880 --> 00:08:05,699
take the sort of parameters and state

181
00:08:05,699 --> 00:08:07,680
machine directly out of the draft but

182
00:08:07,680 --> 00:08:10,440
are going to uh internalize the ideas

183
00:08:10,440 --> 00:08:12,720
and and

184
00:08:12,720 --> 00:08:16,319
write their own uh similar kind of

185
00:08:16,319 --> 00:08:17,580
functionality

186
00:08:17,580 --> 00:08:19,020
so I think that if you want to talk

187
00:08:19,020 --> 00:08:20,639
about interoperability

188
00:08:20,639 --> 00:08:24,240
uh given that this isn't really a

189
00:08:24,240 --> 00:08:26,940
specific protocol so much as a general

190
00:08:26,940 --> 00:08:30,000
family of behaviors I think that's a

191
00:08:30,000 --> 00:08:31,319
subtle question

192
00:08:31,319 --> 00:08:33,958
but I do think that

193
00:08:33,958 --> 00:08:35,940
I was just gonna ask Ben would Punit be

194
00:08:35,940 --> 00:08:37,979
a good person to talk to about it I see

195
00:08:37,979 --> 00:08:40,200
Victor behind me in the queue um he's

196
00:08:40,200 --> 00:08:43,580
better positioned to talk about that

197
00:08:46,560 --> 00:08:49,579
yes go ahead Victor

198
00:08:49,820 --> 00:08:53,040
so yes uh we are doing probing of some

199
00:08:53,040 --> 00:08:55,920
form whether it's by the draft or not

200
00:08:55,920 --> 00:08:58,380
um uh one of the things that I think

201
00:08:58,380 --> 00:08:59,580
might be good to hear from other

202
00:08:59,580 --> 00:09:02,040
implementations is questions around

203
00:09:02,040 --> 00:09:05,580
timing uh I see a lot of authoritative

204
00:09:05,580 --> 00:09:07,459
server implementations

205
00:09:07,459 --> 00:09:10,620
uh even under light loads you know

206
00:09:10,620 --> 00:09:13,440
closing connections early you know after

207
00:09:13,440 --> 00:09:15,360
a small number of queries or after a

208
00:09:15,360 --> 00:09:17,940
small time has passed and this creates

209
00:09:17,940 --> 00:09:20,220
complications for implementations there

210
00:09:20,220 --> 00:09:21,540
are probably other issues that other

211
00:09:21,540 --> 00:09:24,839
implementers will you know discover and

212
00:09:24,839 --> 00:09:26,880
complain about and so on so it may be

213
00:09:26,880 --> 00:09:27,959
worthwhile

214
00:09:27,959 --> 00:09:31,939
to have more implementation experience

215
00:09:35,339 --> 00:09:37,320
uh great thank you both Ben and Victor

216
00:09:37,320 --> 00:09:40,519
and it's uh back to you Brian

217
00:09:43,500 --> 00:09:46,560
all right um thanks guys and um I

218
00:09:46,560 --> 00:09:49,320
appreciate the input there the the

219
00:09:49,320 --> 00:09:50,820
things that we want to figure out and

220
00:09:50,820 --> 00:09:52,620
Tim and I will take the mailing list to

221
00:09:52,620 --> 00:09:53,940
make sure that you know we get

222
00:09:53,940 --> 00:09:56,100
everybody's input on it is is making

223
00:09:56,100 --> 00:09:58,440
sure that what what we what else gets

224
00:09:58,440 --> 00:10:01,140
specified is is as clear as possible and

225
00:10:01,140 --> 00:10:03,540
as functional as possible

226
00:10:03,540 --> 00:10:04,800
um so with that

227
00:10:04,800 --> 00:10:05,399
um

228
00:10:05,399 --> 00:10:07,740
I think we'll turn it over to Paul for

229
00:10:07,740 --> 00:10:08,519
his

230
00:10:08,519 --> 00:10:11,420
presentation

231
00:10:14,459 --> 00:10:16,019
yeah

232
00:10:16,019 --> 00:10:17,820
you're in a lateral programming right

233
00:10:17,820 --> 00:10:20,279
correct yeah I'm one of unilateral

234
00:10:20,279 --> 00:10:21,260
probings

235
00:10:21,260 --> 00:10:25,580
it's not in presentation just yet

236
00:10:30,000 --> 00:10:33,000
uh no right now

237
00:10:33,000 --> 00:10:35,700
because it's the other chairs and they

238
00:10:35,700 --> 00:10:37,620
were asking for thoughts and and pretty

239
00:10:37,620 --> 00:10:40,320
much it sounds like from what Brian said

240
00:10:40,320 --> 00:10:43,440
they need to think more and ask more

241
00:10:43,440 --> 00:10:46,160
Paul is an honorary chair

242
00:10:46,160 --> 00:10:50,640
no I'm I I'm a concerned co-author

243
00:10:50,640 --> 00:10:53,360
a it um

244
00:10:56,160 --> 00:10:58,140
didn't make the mistake I did in DNS off

245
00:10:58,140 --> 00:11:00,120
which is you can't put numbers at the

246
00:11:00,120 --> 00:11:03,420
end of your file names No it should be

247
00:11:03,420 --> 00:11:06,060
one of you accepted it oh there you go

248
00:11:06,060 --> 00:11:08,640
yeah yeah it's stupid driver problems

249
00:11:08,640 --> 00:11:12,000
yeah yeah that's the one share and then

250
00:11:12,000 --> 00:11:14,519
presentation okay so this is going to be

251
00:11:14,519 --> 00:11:15,660
quick

252
00:11:15,660 --> 00:11:19,980
um not quic um this was gonna be fast

253
00:11:19,980 --> 00:11:21,899
um

254
00:11:21,899 --> 00:11:24,300
this is just really the status of where

255
00:11:24,300 --> 00:11:28,260
we're at this is not to cause discussion

256
00:11:28,260 --> 00:11:31,560
here this is really talking about status

257
00:11:31,560 --> 00:11:34,019
the discussion on the mailing list is

258
00:11:34,019 --> 00:11:35,760
going to be infinitely more valuable

259
00:11:35,760 --> 00:11:38,700
than anything here simply because as we

260
00:11:38,700 --> 00:11:40,800
heard just from the chairs

261
00:11:40,800 --> 00:11:43,500
they're trying to get more going and so

262
00:11:43,500 --> 00:11:46,140
on the list would be best next slide

263
00:11:46,140 --> 00:11:47,940
I'm giving the presentation Joey's back

264
00:11:47,940 --> 00:11:49,740
there I only asked her seven times to

265
00:11:49,740 --> 00:11:52,079
get the presentation but

266
00:11:52,079 --> 00:11:54,899
um so for those of you who are only

267
00:11:54,899 --> 00:11:57,360
following deprive you know meeting to

268
00:11:57,360 --> 00:11:59,279
meeting what has happened since the last

269
00:11:59,279 --> 00:12:01,980
meeting was that Punit sued for from

270
00:12:01,980 --> 00:12:05,220
Google public DNS sent a nice lengthy

271
00:12:05,220 --> 00:12:08,459
list of uh suggestions and questions to

272
00:12:08,459 --> 00:12:10,019
the mailing list

273
00:12:10,019 --> 00:12:12,540
um we responded uh we didn't do

274
00:12:12,540 --> 00:12:14,339
everything he asked but we responded to

275
00:12:14,339 --> 00:12:15,899
everything and we did a bunch of the

276
00:12:15,899 --> 00:12:17,399
stuff that he asked

277
00:12:17,399 --> 00:12:19,740
um and put out a significantly revised

278
00:12:19,740 --> 00:12:22,320
draft nothing technical changed I

279
00:12:22,320 --> 00:12:23,640
believe

280
00:12:23,640 --> 00:12:25,680
um but in fact there was a bunch more

281
00:12:25,680 --> 00:12:26,820
there

282
00:12:26,820 --> 00:12:27,839
um and

283
00:12:27,839 --> 00:12:29,880
referencing what Brian was just saying

284
00:12:29,880 --> 00:12:31,800
we want to know what implementers and

285
00:12:31,800 --> 00:12:33,540
potential implementers oh

286
00:12:33,540 --> 00:12:35,399
I was like I don't need to wear that at

287
00:12:35,399 --> 00:12:36,300
the moment

288
00:12:36,300 --> 00:12:38,279
um we want to know what implementers and

289
00:12:38,279 --> 00:12:40,500
potential implementers are not finding

290
00:12:40,500 --> 00:12:42,660
in the draft

291
00:12:42,660 --> 00:12:44,940
um what we're sure of is that once this

292
00:12:44,940 --> 00:12:46,620
is deployed and there's two more

293
00:12:46,620 --> 00:12:48,540
implementers out there

294
00:12:48,540 --> 00:12:49,980
there's going to be implementation

295
00:12:49,980 --> 00:12:52,139
experience what we want is the draft

296
00:12:52,139 --> 00:12:54,480
ready to go to work in group last call

297
00:12:54,480 --> 00:12:57,959
with as much as we can know in that

298
00:12:57,959 --> 00:13:00,000
state

299
00:13:00,000 --> 00:13:01,980
um so we asked for more you know after

300
00:13:01,980 --> 00:13:04,019
we put out the last draft we asked for

301
00:13:04,019 --> 00:13:05,160
more

302
00:13:05,160 --> 00:13:06,899
um comments on on the mailing list and

303
00:13:06,899 --> 00:13:09,720
we only heard crickets now this is most

304
00:13:09,720 --> 00:13:12,660
likely because the only people who

305
00:13:12,660 --> 00:13:14,700
actually need to care about this draft

306
00:13:14,700 --> 00:13:17,820
are resolver implementers it turns out

307
00:13:17,820 --> 00:13:19,920
that authoritative implementers don't

308
00:13:19,920 --> 00:13:21,720
need to do anything in the draft the

309
00:13:21,720 --> 00:13:23,940
whole section on suggestions for

310
00:13:23,940 --> 00:13:26,220
authoritative implementers there's only

311
00:13:26,220 --> 00:13:28,500
one thing that you might want to do and

312
00:13:28,500 --> 00:13:30,240
you'll either do it or not everything

313
00:13:30,240 --> 00:13:32,399
else is we suggest you look at this and

314
00:13:32,399 --> 00:13:34,740
you watch out for that it's the

315
00:13:34,740 --> 00:13:36,839
recursive implementer so there aren't

316
00:13:36,839 --> 00:13:38,700
that many of them out there that some of

317
00:13:38,700 --> 00:13:40,079
the people from those recursive

318
00:13:40,079 --> 00:13:42,360
implementations are in the room

319
00:13:42,360 --> 00:13:44,220
um I don't think punitz actually in the

320
00:13:44,220 --> 00:13:45,180
room

321
00:13:45,180 --> 00:13:49,139
um and Victor is is you know off so

322
00:13:49,139 --> 00:13:51,300
um as

323
00:13:51,300 --> 00:13:53,519
um Brian said on his slides we know that

324
00:13:53,519 --> 00:13:55,800
powerdns recursor has done an

325
00:13:55,800 --> 00:13:57,300
implementation

326
00:13:57,300 --> 00:13:58,860
um they've talked about it a bit we'd

327
00:13:58,860 --> 00:14:00,480
love to to hear more if there's anything

328
00:14:00,480 --> 00:14:02,339
else in there but that's where we're at

329
00:14:02,339 --> 00:14:03,779
now this is what's happened since the

330
00:14:03,779 --> 00:14:06,740
last meeting next slide

331
00:14:09,120 --> 00:14:11,700
so we'd like to tell you what our next

332
00:14:11,700 --> 00:14:13,680
steps are with timing so that you can

333
00:14:13,680 --> 00:14:15,600
figure out when you want to review it

334
00:14:15,600 --> 00:14:17,459
since we asked you to review it earlier

335
00:14:17,459 --> 00:14:19,500
and almost no one has

336
00:14:19,500 --> 00:14:21,600
um there are some open issues there's a

337
00:14:21,600 --> 00:14:23,339
few open issues

338
00:14:23,339 --> 00:14:25,860
um that we have on the GitHub repo

339
00:14:25,860 --> 00:14:27,839
within a month we're going to close them

340
00:14:27,839 --> 00:14:30,180
out we're going to do them or close them

341
00:14:30,180 --> 00:14:32,160
Sarah I'm going to point at you right

342
00:14:32,160 --> 00:14:34,079
through the camera there

343
00:14:34,079 --> 00:14:36,480
um we're not sure if we've done what you

344
00:14:36,480 --> 00:14:38,880
asked for eons ago we think we might

345
00:14:38,880 --> 00:14:40,740
have but if you have time in the next

346
00:14:40,740 --> 00:14:43,380
month can you check our work Sarah gives

347
00:14:43,380 --> 00:14:44,820
a thumbs up

348
00:14:44,820 --> 00:14:48,720
um any other implementers who are

349
00:14:48,720 --> 00:14:50,699
reading this or people who are not

350
00:14:50,699 --> 00:14:53,459
implementers but think they know how it

351
00:14:53,459 --> 00:14:56,040
is to make a recursive implementation

352
00:14:56,040 --> 00:14:59,459
please review the draft like Brian said

353
00:14:59,459 --> 00:15:01,860
we aren't saying You must do this you

354
00:15:01,860 --> 00:15:03,839
can't do this as much as you really

355
00:15:03,839 --> 00:15:06,600
should do this and such like that please

356
00:15:06,600 --> 00:15:08,519
check our work

357
00:15:08,519 --> 00:15:10,980
um so we'll have a new draft in about a

358
00:15:10,980 --> 00:15:12,060
month

359
00:15:12,060 --> 00:15:14,399
um we'll turn it in and then we're going

360
00:15:14,399 --> 00:15:16,199
to ask for more discussion on the

361
00:15:16,199 --> 00:15:17,820
mailing list and then we were going to

362
00:15:17,820 --> 00:15:19,440
ask for a working group last call in

363
00:15:19,440 --> 00:15:21,899
January as Brian just indicated we don't

364
00:15:21,899 --> 00:15:23,279
know whether it's a working group last

365
00:15:23,279 --> 00:15:25,620
call that will then fling this towards

366
00:15:25,620 --> 00:15:29,399
the ietf or be parked or whatever

367
00:15:29,399 --> 00:15:31,339
um I think we could get enough

368
00:15:31,339 --> 00:15:34,019
implementation experience

369
00:15:34,019 --> 00:15:35,699
um by then if some of the implementers

370
00:15:35,699 --> 00:15:37,860
even the ones who haven't implemented

371
00:15:37,860 --> 00:15:39,839
but looked at the pseudo code and said

372
00:15:39,839 --> 00:15:42,300
oh I can do that I can't do that

373
00:15:42,300 --> 00:15:44,760
um it would be great so that start of

374
00:15:44,760 --> 00:15:49,160
the year we can go ahead next slide

375
00:15:50,880 --> 00:15:52,980
brilliant yeah that that was all your

376
00:15:52,980 --> 00:15:54,540
slides I know I'm sorry that was a bit

377
00:15:54,540 --> 00:15:57,360
of drama sorry would you like to talk to

378
00:15:57,360 --> 00:16:00,980
Victor now then certainly so Victor

379
00:16:02,339 --> 00:16:06,180
note is that authoritative server

380
00:16:06,180 --> 00:16:08,160
operators are also implementers when

381
00:16:08,160 --> 00:16:09,360
they turn it on

382
00:16:09,360 --> 00:16:11,339
and we're beginning to hear back from

383
00:16:11,339 --> 00:16:13,560
some of them you know wanting to tune

384
00:16:13,560 --> 00:16:15,720
things with us and so on so I think

385
00:16:15,720 --> 00:16:18,360
there's room to invite authoritative

386
00:16:18,360 --> 00:16:20,339
server operators to also talk about

387
00:16:20,339 --> 00:16:22,980
their experience in terms of scaling or

388
00:16:22,980 --> 00:16:24,959
various other things or what they would

389
00:16:24,959 --> 00:16:29,540
like to see from resolver Behavior

390
00:16:30,779 --> 00:16:33,480
some of the some of the even though the

391
00:16:33,480 --> 00:16:35,940
document doesn't say here's what

392
00:16:35,940 --> 00:16:38,040
resolver operators uh here's what

393
00:16:38,040 --> 00:16:40,019
authoritative operators should do some

394
00:16:40,019 --> 00:16:41,459
of them have been testing especially

395
00:16:41,459 --> 00:16:43,800
with the uh Power DNS implementation

396
00:16:43,800 --> 00:16:46,920
they may have come up with some thing

397
00:16:46,920 --> 00:16:49,500
and that may be an addition to this or

398
00:16:49,500 --> 00:16:51,899
not we're trying to be again the whole

399
00:16:51,899 --> 00:16:54,540
idea is this is unilateral probing we're

400
00:16:54,540 --> 00:16:58,440
trying to be as unprescriptive as we can

401
00:16:58,440 --> 00:17:01,440
to make a system that works and doesn't

402
00:17:01,440 --> 00:17:02,940
fail anybody

403
00:17:02,940 --> 00:17:05,579
that's a funny balance but I think we're

404
00:17:05,579 --> 00:17:07,619
pretty much already there but we need to

405
00:17:07,619 --> 00:17:09,000
hear more

406
00:17:09,000 --> 00:17:11,099
is that it for the cube yeah okay thank

407
00:17:11,099 --> 00:17:13,439
you so great um if you want to read now

408
00:17:13,439 --> 00:17:16,260
please read now if not please plan on

409
00:17:16,260 --> 00:17:17,400
reading in December a lot of people

410
00:17:17,400 --> 00:17:19,199
don't like to read in December so if

411
00:17:19,199 --> 00:17:20,880
you'd rather read in November please do

412
00:17:20,880 --> 00:17:23,220
now let us know thank you lots of eggnog

413
00:17:23,220 --> 00:17:25,740
helps thank you Paul uh thank you Victor

414
00:17:25,740 --> 00:17:29,000
and thank you in advance Sarah

415
00:17:30,960 --> 00:17:33,840
uh Brian did you have more

416
00:17:33,840 --> 00:17:35,940
no Glenn and Dean that I think that's it

417
00:17:35,940 --> 00:17:37,799
for the deprived sessions unless um

418
00:17:37,799 --> 00:17:39,780
unless folks have other comments they

419
00:17:39,780 --> 00:17:41,220
want to make I will turn it over to you

420
00:17:41,220 --> 00:17:43,679
guys for ADD

421
00:17:43,679 --> 00:17:45,299
thank you sir

422
00:17:45,299 --> 00:17:49,080
thank you well welcome to add and ICF

423
00:17:49,080 --> 00:17:51,799
115.

424
00:17:51,900 --> 00:17:54,539
I'm Glendale

425
00:17:54,539 --> 00:17:56,700
um this is an ITF meeting so notewell

426
00:17:56,700 --> 00:17:58,740
does apply

427
00:17:58,740 --> 00:18:00,840
and if you haven't heard of bcp79 it's

428
00:18:00,840 --> 00:18:04,140
awesome uh itf-150 meeting tips is being

429
00:18:04,140 --> 00:18:05,880
recorded just like the previous session

430
00:18:05,880 --> 00:18:07,260
was

431
00:18:07,260 --> 00:18:10,320
uh these resources

432
00:18:10,320 --> 00:18:12,840
I will remind you that because this is a

433
00:18:12,840 --> 00:18:14,880
an ITF meeting for those who just joined

434
00:18:14,880 --> 00:18:17,039
the room we are required to wear masks

435
00:18:17,039 --> 00:18:19,320
in here uh so please mask up and let's

436
00:18:19,320 --> 00:18:21,179
actively speaking of the microphone

437
00:18:21,179 --> 00:18:24,600
I'm glendina with your add co-chairs

438
00:18:24,600 --> 00:18:27,299
hi Dave Lawrence

439
00:18:27,299 --> 00:18:30,120
and our trusty scribe Lehmann

440
00:18:30,120 --> 00:18:33,620
Mr Eric is our illustrious awesome

441
00:18:33,620 --> 00:18:37,820
Mastery director I've ever had this week

442
00:18:43,260 --> 00:18:45,419
so uh We've selected the Scribe we've

443
00:18:45,419 --> 00:18:46,679
walked from the chairs we've any

444
00:18:46,679 --> 00:18:48,419
comments from the 80 Eric that you'd

445
00:18:48,419 --> 00:18:50,700
like to make

446
00:18:50,700 --> 00:18:53,539
yep

447
00:19:02,680 --> 00:19:04,200
[Music]

448
00:19:04,200 --> 00:19:07,500
and that will also be on camera

449
00:19:07,500 --> 00:19:09,900
I'm so used to being in the mic line so

450
00:19:09,900 --> 00:19:12,299
the main comment I have is about the

451
00:19:12,299 --> 00:19:14,100
document the three document that has

452
00:19:14,100 --> 00:19:16,919
been approved by the isg the DNA Diddy

453
00:19:16,919 --> 00:19:20,160
and the svcb they are approved they are

454
00:19:20,160 --> 00:19:24,120
into the rscd Tokyo waiting for DNS up

455
00:19:24,120 --> 00:19:27,360
document which is also approved waiting

456
00:19:27,360 --> 00:19:32,460
into the rsd2q for a TLS encrypted Sni

457
00:19:32,460 --> 00:19:34,620
or ech hello

458
00:19:34,620 --> 00:19:37,740
which is still not in real quick as far

459
00:19:37,740 --> 00:19:39,660
as I know so we can expect those

460
00:19:39,660 --> 00:19:42,240
document meeting a lot we are trying to

461
00:19:42,240 --> 00:19:45,059
find inventive way and making some kind

462
00:19:45,059 --> 00:19:48,539
of a process engineering mostly to

463
00:19:48,539 --> 00:19:51,480
remove part of the DNS of blocking uh

464
00:19:51,480 --> 00:19:53,820
and then if you remove DNS up blocking

465
00:19:53,820 --> 00:19:56,640
DNS of progress and then our three LED

466
00:19:56,640 --> 00:19:58,679
document will be going forward and do we

467
00:19:58,679 --> 00:20:00,120
be published

468
00:20:00,120 --> 00:20:01,919
so it's basically outside of our

469
00:20:01,919 --> 00:20:04,400
controller

470
00:20:05,640 --> 00:20:06,840
thank you

471
00:20:06,840 --> 00:20:10,140
okay so let's get on to the drafts uh

472
00:20:10,140 --> 00:20:12,120
the first one tiru um you want to come

473
00:20:12,120 --> 00:20:13,500
on up

474
00:20:13,500 --> 00:20:15,600
well did you uh want to attend the dash

475
00:20:15,600 --> 00:20:17,700
though do we want agenda bash does

476
00:20:17,700 --> 00:20:19,980
anybody want to add anything to this

477
00:20:19,980 --> 00:20:21,980
agenda

478
00:20:21,980 --> 00:20:25,320
I wanted to discuss a draft that was uh

479
00:20:25,320 --> 00:20:27,360
created by us to address some of the

480
00:20:27,360 --> 00:20:29,100
discusses that were raised during the

481
00:20:29,100 --> 00:20:31,980
publication as part of Isaac review Paul

482
00:20:31,980 --> 00:20:33,840
and a few others had raised comments and

483
00:20:33,840 --> 00:20:35,520
we wrote a draft specifically for the

484
00:20:35,520 --> 00:20:37,200
texts if you have time we would like to

485
00:20:37,200 --> 00:20:39,000
discuss that well we're you know we're

486
00:20:39,000 --> 00:20:40,440
running good on time so I don't see any

487
00:20:40,440 --> 00:20:42,539
problem with that so let's do that yeah

488
00:20:42,539 --> 00:20:44,880
thanks a lot about it okay

489
00:20:44,880 --> 00:20:46,500
um so uh

490
00:20:46,500 --> 00:20:48,120
onto the drafts that we're scheduled and

491
00:20:48,120 --> 00:20:50,100
we'll get to the other one at the end

492
00:20:50,100 --> 00:20:51,900
um the very first one was your split

493
00:20:51,900 --> 00:20:53,760
Horizon DNS configuration draft and let

494
00:20:53,760 --> 00:20:56,240
me bring that up

495
00:21:06,419 --> 00:21:07,679
and just let me know when you want to

496
00:21:07,679 --> 00:21:10,919
jump yes thanks uh so this is mainly the

497
00:21:10,919 --> 00:21:12,960
changes we have done to address comments

498
00:21:12,960 --> 00:21:14,580
from the working group uh next slide

499
00:21:14,580 --> 00:21:16,760
please

500
00:21:16,980 --> 00:21:19,500
so the two main comments were to use PDF

501
00:21:19,500 --> 00:21:21,480
for local DNS Authority and to fix up

502
00:21:21,480 --> 00:21:23,760
the scope section especially with uh

503
00:21:23,760 --> 00:21:25,620
specially us and domain name so we did

504
00:21:25,620 --> 00:21:27,179
both the updates and then we walked

505
00:21:27,179 --> 00:21:29,280
through the changes that we have done

506
00:21:29,280 --> 00:21:31,860
next slide please

507
00:21:31,860 --> 00:21:33,480
so in the previous versions of the draft

508
00:21:33,480 --> 00:21:35,580
the scope was restricted to just using

509
00:21:35,580 --> 00:21:38,340
DNR then Tommy Polly had come up with a

510
00:21:38,340 --> 00:21:39,780
comment that we could leverage this

511
00:21:39,780 --> 00:21:42,480
draft even with when DDR is present and

512
00:21:42,480 --> 00:21:45,780
uh we update to the graph so that we can

513
00:21:45,780 --> 00:21:48,360
use TDR both in verified Discovery and

514
00:21:48,360 --> 00:21:50,940
opportunity Discovery modes so if you

515
00:21:50,940 --> 00:21:53,159
look at this figure if even though IB

516
00:21:53,159 --> 00:21:56,280
address is used to discover and validate

517
00:21:56,280 --> 00:21:59,820
the discovered certificate uh if if the

518
00:21:59,820 --> 00:22:01,799
subject all time extension within the

519
00:22:01,799 --> 00:22:04,799
certificate has the name server records

520
00:22:04,799 --> 00:22:07,500
that you would later find by doing a DNS

521
00:22:07,500 --> 00:22:09,419
query either using a external resolver

522
00:22:09,419 --> 00:22:11,940
or DNS SEC and if they both match then

523
00:22:11,940 --> 00:22:14,880
it proves that uh the discovered

524
00:22:14,880 --> 00:22:17,159
encrypted resolver is in hybrid resolver

525
00:22:17,159 --> 00:22:19,320
which is authentic to provide responses

526
00:22:19,320 --> 00:22:22,980
for this split Horizon domains and uh in

527
00:22:22,980 --> 00:22:25,140
that way DDR can also be used similar to

528
00:22:25,140 --> 00:22:27,000
the way DNR is being used

529
00:22:27,000 --> 00:22:29,340
uh that's first part of the change the

530
00:22:29,340 --> 00:22:33,320
second part was next slide please

531
00:22:33,539 --> 00:22:35,100
yeah the next slide was with regard to

532
00:22:35,100 --> 00:22:37,559
opportunistic Discovery uh in

533
00:22:37,559 --> 00:22:39,960
opportunistic Discovery uh there are two

534
00:22:39,960 --> 00:22:42,360
modes basically where the client does

535
00:22:42,360 --> 00:22:44,940
validation of the pka certificate or it

536
00:22:44,940 --> 00:22:46,440
basically skips and does not do any

537
00:22:46,440 --> 00:22:48,240
certificate validation if it doesn't do

538
00:22:48,240 --> 00:22:50,400
any search validation then uh this

539
00:22:50,400 --> 00:22:52,740
mechanism is not applicable but if it

540
00:22:52,740 --> 00:22:55,080
does PKA validation and even though it

541
00:22:55,080 --> 00:22:56,880
is an let's say a private IP address

542
00:22:56,880 --> 00:22:59,940
that's being discovered but if the name

543
00:22:59,940 --> 00:23:01,620
that you find in the subject alternate

544
00:23:01,620 --> 00:23:03,179
matches that what you find in the name

545
00:23:03,179 --> 00:23:05,280
server records then you know that it's

546
00:23:05,280 --> 00:23:07,799
an uh that's a successful match and you

547
00:23:07,799 --> 00:23:11,220
could use uh DDR uh way of verified

548
00:23:11,220 --> 00:23:12,780
Discovery even in the opportunity

549
00:23:12,780 --> 00:23:15,500
discovery mode

550
00:23:15,960 --> 00:23:18,620
um next slide

551
00:23:18,659 --> 00:23:20,820
yeah one of the comments from Ted lemon

552
00:23:20,820 --> 00:23:23,460
was uh we could not use the mechanisms

553
00:23:23,460 --> 00:23:26,120
discovered in discussed in the draft for

554
00:23:26,120 --> 00:23:28,200
specialization domain names they are not

555
00:23:28,200 --> 00:23:30,120
unique to any specific DNA servers

556
00:23:30,120 --> 00:23:31,860
Authority and they should be kept

557
00:23:31,860 --> 00:23:34,020
outside the scope of this draft so we

558
00:23:34,020 --> 00:23:36,539
added uh added a paragraph to say

559
00:23:36,539 --> 00:23:39,179
explicitly that these scdns are outside

560
00:23:39,179 --> 00:23:42,120
the scope and added some normative text

561
00:23:42,120 --> 00:23:44,340
to say that scdns must not be validated

562
00:23:44,340 --> 00:23:46,620
using the two mechanisms that we have

563
00:23:46,620 --> 00:23:49,080
defined in this draft

564
00:23:49,080 --> 00:23:51,600
next slide

565
00:23:51,600 --> 00:23:53,700
I think we have addressed all the

566
00:23:53,700 --> 00:23:55,559
comments received so far from the

567
00:23:55,559 --> 00:23:57,480
working group and it looks ready for

568
00:23:57,480 --> 00:24:00,320
working last call

569
00:24:01,760 --> 00:24:05,460
thank you thank you and stay right there

570
00:24:05,460 --> 00:24:07,320
because you're up again in just a second

571
00:24:07,320 --> 00:24:10,020
well do we have any questions for Kira

572
00:24:10,020 --> 00:24:12,440
of course

573
00:24:18,179 --> 00:24:20,820
okay moving on to the next

574
00:24:20,820 --> 00:24:23,580
okay and

575
00:24:23,580 --> 00:24:28,158
um yeah I don't have the agenda

576
00:24:34,919 --> 00:24:36,179
okay

577
00:24:36,179 --> 00:24:39,659
okay thanks yeah this is another uh this

578
00:24:39,659 --> 00:24:41,520
is an individual draft that we have uh

579
00:24:41,520 --> 00:24:43,620
it's been discussed in several previous

580
00:24:43,620 --> 00:24:46,140
IQs and we have been updating the draft

581
00:24:46,140 --> 00:24:48,960
uh to address the comments uh next slide

582
00:24:48,960 --> 00:24:51,140
please

583
00:24:51,600 --> 00:24:53,940
yeah the last common major comment that

584
00:24:53,940 --> 00:24:56,760
we got at the last ITF was uh don't use

585
00:24:56,760 --> 00:24:58,799
Json encoding it's not the right way of

586
00:24:58,799 --> 00:25:00,480
doing it and the suggestion was to use

587
00:25:00,480 --> 00:25:03,299
key value syntax just like the way dnsst

588
00:25:03,299 --> 00:25:05,760
does so we changed the entire draft to

589
00:25:05,760 --> 00:25:08,760
abandon using Json encoding now it uses

590
00:25:08,760 --> 00:25:11,400
key value pairs it used test records and

591
00:25:11,400 --> 00:25:12,780
uses the encoding rules and

592
00:25:12,780 --> 00:25:14,640
verifications very similar to what is

593
00:25:14,640 --> 00:25:16,620
being defined in DNS service Discovery

594
00:25:16,620 --> 00:25:18,299
specification

595
00:25:18,299 --> 00:25:21,720
uh next slide

596
00:25:21,720 --> 00:25:24,059
yeah discovering uh presolver

597
00:25:24,059 --> 00:25:25,980
information is part of the charter and

598
00:25:25,980 --> 00:25:28,620
uh I think this is also one of one of

599
00:25:28,620 --> 00:25:30,720
the reasons this working group got

600
00:25:30,720 --> 00:25:33,720
created and we would uh since we have

601
00:25:33,720 --> 00:25:35,220
addressed all the comments and there was

602
00:25:35,220 --> 00:25:36,659
some traction on this draft we think

603
00:25:36,659 --> 00:25:40,279
it's ready for working to production

604
00:25:43,740 --> 00:25:46,260
no I can skip that that was just for

605
00:25:46,260 --> 00:25:48,059
backup

606
00:25:48,059 --> 00:25:49,200
okay

607
00:25:49,200 --> 00:25:52,140
um do you actually go and uh want to get

608
00:25:52,140 --> 00:25:53,700
a sense right now of how people feel

609
00:25:53,700 --> 00:25:57,080
about working group adoption or

610
00:25:57,500 --> 00:25:59,460
I don't even know if we have to do that

611
00:25:59,460 --> 00:26:01,140
but first with anybody uh the queue is

612
00:26:01,140 --> 00:26:02,640
open if anybody would like to comment on

613
00:26:02,640 --> 00:26:03,960
that either way

614
00:26:03,960 --> 00:26:06,480
and then we can also run a quick hum on

615
00:26:06,480 --> 00:26:08,100
the tool as far as a working group

616
00:26:08,100 --> 00:26:10,260
adoption but of course the actual

617
00:26:10,260 --> 00:26:11,880
um official adoption call would be on

618
00:26:11,880 --> 00:26:14,100
the mailing list but it would be nice to

619
00:26:14,100 --> 00:26:15,779
have a sense of the room at least as far

620
00:26:15,779 --> 00:26:18,740
as how people are feeling

621
00:26:22,860 --> 00:26:25,740
and no one's joining the queue but Glenn

622
00:26:25,740 --> 00:26:27,360
is working up the poll right now so that

623
00:26:27,360 --> 00:26:29,279
should be appearing in medecco in just a

624
00:26:29,279 --> 00:26:30,480
moment

625
00:26:30,480 --> 00:26:32,659
foreign

626
00:26:48,320 --> 00:26:52,520
just another 30 seconds or so

627
00:27:03,320 --> 00:27:07,380
so as you can see from the results

628
00:27:07,380 --> 00:27:11,220
it's kind of split yeah

629
00:27:11,220 --> 00:27:13,340
um

630
00:27:14,419 --> 00:27:16,860
there is a slight bias toward adoption

631
00:27:16,860 --> 00:27:18,659
we'll be brought up on the list again

632
00:27:18,659 --> 00:27:21,000
um so that people can say explicitly if

633
00:27:21,000 --> 00:27:23,220
they were opposed to adoption or not

634
00:27:23,220 --> 00:27:24,240
um

635
00:27:24,240 --> 00:27:25,919
because sometimes the do not raise hand

636
00:27:25,919 --> 00:27:28,500
is a little inscrutable to interpret but

637
00:27:28,500 --> 00:27:31,080
um so be be on the lookout for a request

638
00:27:31,080 --> 00:27:32,580
on the list toward working group

639
00:27:32,580 --> 00:27:35,580
adoption on this thank you

640
00:27:35,580 --> 00:27:40,939
I miss homes yeah it was so quiet

641
00:28:01,320 --> 00:28:03,260
yeah

642
00:28:03,260 --> 00:28:06,720
we have a cheat screen love it

643
00:28:06,720 --> 00:28:09,059
all right uh for those who don't know me

644
00:28:09,059 --> 00:28:11,820
I'm Tommy Jensen from Microsoft uh John

645
00:28:11,820 --> 00:28:14,039
Todd from quad nine and I wrote this

646
00:28:14,039 --> 00:28:16,799
proposal to handle redirection from one

647
00:28:16,799 --> 00:28:18,659
encrypted DNS server to another next

648
00:28:18,659 --> 00:28:21,200
slide please

649
00:28:25,080 --> 00:28:28,860
so this is normally load balancing among

650
00:28:28,860 --> 00:28:31,740
multiple encrypted DNS servers globally

651
00:28:31,740 --> 00:28:33,539
is handled by any cast so you can hand

652
00:28:33,539 --> 00:28:36,179
out one configuration to clients and

653
00:28:36,179 --> 00:28:37,860
then they magically end up where they

654
00:28:37,860 --> 00:28:41,100
need to be however this requires

655
00:28:41,100 --> 00:28:44,820
significant resources to get correct

656
00:28:44,820 --> 00:28:46,860
um not that anyone has experienced any

657
00:28:46,860 --> 00:28:50,279
major issues with bgp missteps recently

658
00:28:50,279 --> 00:28:53,279
um but it has been known to happen

659
00:28:53,279 --> 00:28:55,080
um and so this tends to have a

660
00:28:55,080 --> 00:28:56,760
centralizing effect right because you

661
00:28:56,760 --> 00:28:57,600
have to have a large enough

662
00:28:57,600 --> 00:29:00,120
infrastructure to do it correctly to get

663
00:29:00,120 --> 00:29:02,580
the benefits of any cast next slide

664
00:29:02,580 --> 00:29:05,460
please otherwise you end up with

665
00:29:05,460 --> 00:29:08,940
Distributing unicast uh

666
00:29:08,940 --> 00:29:11,580
configurations and so you say well we

667
00:29:11,580 --> 00:29:13,559
have these 30 servers and the clients

668
00:29:13,559 --> 00:29:15,779
need to be aware of them or we have to

669
00:29:15,779 --> 00:29:18,600
somehow distribute each individual

670
00:29:18,600 --> 00:29:21,120
config to the right client

671
00:29:21,120 --> 00:29:23,520
um depending on where they're at which

672
00:29:23,520 --> 00:29:26,700
brings in its own complications

673
00:29:26,700 --> 00:29:27,539
um

674
00:29:27,539 --> 00:29:29,820
and then even when you do if the client

675
00:29:29,820 --> 00:29:31,820
ends up in the wrong place you have

676
00:29:31,820 --> 00:29:34,919
compliance or performance issues

677
00:29:34,919 --> 00:29:37,679
um and then for the server it has no

678
00:29:37,679 --> 00:29:39,600
flexibility to shed traffic that is

679
00:29:39,600 --> 00:29:43,639
being overloaded with next slide please

680
00:29:43,740 --> 00:29:46,440
so we're looking to find a way to allow

681
00:29:46,440 --> 00:29:48,960
servers to redirect to one another

682
00:29:48,960 --> 00:29:50,760
um to address those problems such that

683
00:29:50,760 --> 00:29:52,620
you wouldn't need to have any cast bail

684
00:29:52,620 --> 00:29:54,299
to redistribute clients where they need

685
00:29:54,299 --> 00:29:55,799
to be

686
00:29:55,799 --> 00:29:58,559
um and still only have to distribute

687
00:29:58,559 --> 00:30:00,659
whatever configurations you want for

688
00:30:00,659 --> 00:30:02,159
your setup

689
00:30:02,159 --> 00:30:04,620
um we don't want to reduce the security

690
00:30:04,620 --> 00:30:06,720
like whatever new connection you end up

691
00:30:06,720 --> 00:30:08,640
on shouldn't be less secure than the one

692
00:30:08,640 --> 00:30:10,320
you started on

693
00:30:10,320 --> 00:30:12,179
um it shouldn't Break compat

694
00:30:12,179 --> 00:30:13,860
um following redirections shouldn't end

695
00:30:13,860 --> 00:30:15,240
up with a connection that you don't know

696
00:30:15,240 --> 00:30:17,700
how to support or to a server you don't

697
00:30:17,700 --> 00:30:19,860
know how to support and it should work

698
00:30:19,860 --> 00:30:22,860
across protocol versions We have three

699
00:30:22,860 --> 00:30:24,960
major implementations of encrypted DNS

700
00:30:24,960 --> 00:30:26,820
today and we shouldn't be doing one of

701
00:30:26,820 --> 00:30:29,220
these drafts for each one

702
00:30:29,220 --> 00:30:31,260
um and then finally as always let's not

703
00:30:31,260 --> 00:30:33,299
waste too many milliseconds next slide

704
00:30:33,299 --> 00:30:35,039
please

705
00:30:35,039 --> 00:30:38,580
so what we're proposing is a reuse of

706
00:30:38,580 --> 00:30:40,500
the DDR mechanism for those who are

707
00:30:40,500 --> 00:30:42,559
familiar we're going to use the

708
00:30:42,559 --> 00:30:46,500
resolver.arpa uh sudn and just

709
00:30:46,500 --> 00:30:48,419
ask the server so when you first set up

710
00:30:48,419 --> 00:30:50,880
your encrypted DNS connection uh you

711
00:30:50,880 --> 00:30:53,100
send a query for resolver.arpa and ask

712
00:30:53,100 --> 00:30:54,779
the resolver about itself are you

713
00:30:54,779 --> 00:30:57,899
designating anyone in this case

714
00:30:57,899 --> 00:31:01,679
as a redirection and not as a companion

715
00:31:01,679 --> 00:31:04,260
encrypted DNS server

716
00:31:04,260 --> 00:31:06,539
um note that this is slightly different

717
00:31:06,539 --> 00:31:09,659
from the use case that DDR covers which

718
00:31:09,659 --> 00:31:11,640
is that you already starting with

719
00:31:11,640 --> 00:31:15,659
encrypted DNS which DDR mentions when

720
00:31:15,659 --> 00:31:17,460
you're looking up other resolvers this

721
00:31:17,460 --> 00:31:19,080
is asking to resolver about itself which

722
00:31:19,080 --> 00:31:21,960
DDR supports over plain text

723
00:31:21,960 --> 00:31:23,820
um since we're starting with encrypted

724
00:31:23,820 --> 00:31:26,100
and ending with encrypted we can go back

725
00:31:26,100 --> 00:31:27,779
to the traditional authentication model

726
00:31:27,779 --> 00:31:29,880
and we'll authenticate the name of the

727
00:31:29,880 --> 00:31:31,740
destination server without having to do

728
00:31:31,740 --> 00:31:33,720
any of the IP address tie-ins

729
00:31:33,720 --> 00:31:37,039
uh next slide please

730
00:31:37,260 --> 00:31:39,539
so as an example let's say that a client

731
00:31:39,539 --> 00:31:41,039
is configured to use dodash

732
00:31:41,039 --> 00:31:43,500
sydney.site.example

733
00:31:43,500 --> 00:31:46,440
um and then you start traveling abroad

734
00:31:46,440 --> 00:31:48,899
you go to a conference and

735
00:31:48,899 --> 00:31:51,000
the server sees you coming from a

736
00:31:51,000 --> 00:31:52,919
parasite p and says and he really

737
00:31:52,919 --> 00:31:55,919
belongs somewhere else and so when the

738
00:31:55,919 --> 00:31:59,940
client sends the query for the a and a

739
00:31:59,940 --> 00:32:02,039
quad a and service binding ignore that

740
00:32:02,039 --> 00:32:03,480
AAA

741
00:32:03,480 --> 00:32:05,580
um it'll send back a service binding

742
00:32:05,580 --> 00:32:07,080
record that says you should actually be

743
00:32:07,080 --> 00:32:09,179
talking to dodash Paris

744
00:32:09,179 --> 00:32:12,960
and the client will then establish a TLS

745
00:32:12,960 --> 00:32:15,299
connection to that server and check to

746
00:32:15,299 --> 00:32:16,860
make sure the certificate is valid for

747
00:32:16,860 --> 00:32:20,460
DOT or dodash Paris and when it is we'll

748
00:32:20,460 --> 00:32:21,960
replace the connection and then move on

749
00:32:21,960 --> 00:32:24,899
with our lives happily ever after

750
00:32:24,899 --> 00:32:27,059
um the security model here is something

751
00:32:27,059 --> 00:32:30,059
that we're trusting because by using the

752
00:32:30,059 --> 00:32:33,419
contents of a DNS query it's exactly as

753
00:32:33,419 --> 00:32:35,159
trusted as if we just stayed on this

754
00:32:35,159 --> 00:32:36,659
resolver in the first place in other

755
00:32:36,659 --> 00:32:40,020
words if an attacker were able to uh

756
00:32:40,020 --> 00:32:42,179
compromise this redirection they were

757
00:32:42,179 --> 00:32:44,700
also compromising your query contents

758
00:32:44,700 --> 00:32:47,220
next slide please uh Tommy would you

759
00:32:47,220 --> 00:32:49,620
mind an interruption no no no Ben go

760
00:32:49,620 --> 00:32:51,799
ahead

761
00:32:54,419 --> 00:32:56,659
foreign

762
00:32:57,600 --> 00:32:59,580
no I'll wait

763
00:32:59,580 --> 00:33:01,939
okay

764
00:33:02,820 --> 00:33:05,539
ominous

765
00:33:05,600 --> 00:33:08,120
no pressure man

766
00:33:08,120 --> 00:33:11,940
so a couple considerations so as with

767
00:33:11,940 --> 00:33:14,220
any other redirect

768
00:33:14,220 --> 00:33:15,899
um there's a potential for leading the

769
00:33:15,899 --> 00:33:17,279
clients around

770
00:33:17,279 --> 00:33:19,140
there should be some considerations that

771
00:33:19,140 --> 00:33:21,419
just like C names don't don't please

772
00:33:21,419 --> 00:33:23,159
don't do that

773
00:33:23,159 --> 00:33:25,440
um additionally there's a potential for

774
00:33:25,440 --> 00:33:27,600
breaking compat here let's say that the

775
00:33:27,600 --> 00:33:29,460
original server you start with supports

776
00:33:29,460 --> 00:33:30,659
dot

777
00:33:30,659 --> 00:33:32,940
um and you contacted over dot and you

778
00:33:32,940 --> 00:33:34,320
ask it for a redirection and it gives

779
00:33:34,320 --> 00:33:37,679
you one to a doe only server

780
00:33:37,679 --> 00:33:39,240
um it's possible that the client also

781
00:33:39,240 --> 00:33:41,039
supports dough but it's possible that it

782
00:33:41,039 --> 00:33:42,419
doesn't and this would be a broken

783
00:33:42,419 --> 00:33:44,700
scenario that would result in either the

784
00:33:44,700 --> 00:33:47,159
client losing encrypted DNS connectivity

785
00:33:47,159 --> 00:33:49,919
or deciding to just hang around on the

786
00:33:49,919 --> 00:33:51,840
original server which obviously it

787
00:33:51,840 --> 00:33:54,360
didn't want either and so it requires

788
00:33:54,360 --> 00:33:56,519
you to redirect to a server that at

789
00:33:56,519 --> 00:33:58,799
minimum supports the same protocol and

790
00:33:58,799 --> 00:34:02,179
IP family that this connection is using

791
00:34:02,179 --> 00:34:04,679
such that it knows that the client ought

792
00:34:04,679 --> 00:34:08,159
to be able to talk to the next one maybe

793
00:34:08,159 --> 00:34:09,359
um additional information is in the

794
00:34:09,359 --> 00:34:11,339
service binding and it can choose to do

795
00:34:11,339 --> 00:34:12,839
a different protocol if it wants that'd

796
00:34:12,839 --> 00:34:15,119
be great but at least make sure that it

797
00:34:15,119 --> 00:34:18,780
can speak something next slide please

798
00:34:18,780 --> 00:34:20,699
shh

799
00:34:20,699 --> 00:34:22,320
all right so there were some

800
00:34:22,320 --> 00:34:24,540
Alternatives that we considered

801
00:34:24,540 --> 00:34:27,060
um when designing the solution one when

802
00:34:27,060 --> 00:34:28,739
talking about redirection there's an

803
00:34:28,739 --> 00:34:31,859
obvious uh solution in the 300 return

804
00:34:31,859 --> 00:34:33,060
codes

805
00:34:33,060 --> 00:34:35,040
except that that's very specific to http

806
00:34:35,040 --> 00:34:36,659
which means that we have a dose solution

807
00:34:36,659 --> 00:34:39,839
and not a DOT or doc solution

808
00:34:39,839 --> 00:34:42,060
um and so we didn't consider that ideal

809
00:34:42,060 --> 00:34:45,119
the other is alt service binding and for

810
00:34:45,119 --> 00:34:46,739
those of you who are unfamiliar there's

811
00:34:46,739 --> 00:34:48,659
some work going on in the HTTP working

812
00:34:48,659 --> 00:34:51,418
group where we're introducing a DNS

813
00:34:51,418 --> 00:34:54,418
record that or we're using

814
00:34:54,418 --> 00:34:56,760
um service binding to replace all

815
00:34:56,760 --> 00:34:59,339
service eventually it's a strong and

816
00:34:59,339 --> 00:35:01,859
overloaded term replace but uh for now

817
00:35:01,859 --> 00:35:04,800
augmenting the scope of this is a little

818
00:35:04,800 --> 00:35:07,080
different though um that allows you at a

819
00:35:07,080 --> 00:35:09,079
domain level to say these are

820
00:35:09,079 --> 00:35:11,820
alternatives for me

821
00:35:11,820 --> 00:35:12,960
um that's not exactly what we're looking

822
00:35:12,960 --> 00:35:14,640
for right because this is per connection

823
00:35:14,640 --> 00:35:17,520
Behavior it may be that I actually want

824
00:35:17,520 --> 00:35:19,740
that the original server wants to

825
00:35:19,740 --> 00:35:21,240
receive these and it doesn't want an

826
00:35:21,240 --> 00:35:25,140
alternative but once every

827
00:35:25,140 --> 00:35:25,740
um

828
00:35:25,740 --> 00:35:27,839
at once every year on the day after

829
00:35:27,839 --> 00:35:30,240
Thanksgiving I want to redirect start

830
00:35:30,240 --> 00:35:32,220
redirecting people to other servers that

831
00:35:32,220 --> 00:35:34,560
I spun up that one day a year to handle

832
00:35:34,560 --> 00:35:37,440
all the excess traffic that I'm getting

833
00:35:37,440 --> 00:35:37,980
um

834
00:35:37,980 --> 00:35:40,940
next slide please

835
00:35:42,480 --> 00:35:44,760
all right so in conclusion uh we believe

836
00:35:44,760 --> 00:35:46,619
we've identified a one-size-fits-all

837
00:35:46,619 --> 00:35:48,780
solution so that

838
00:35:48,780 --> 00:35:50,640
um if the working group were to adopt

839
00:35:50,640 --> 00:35:52,440
this and move forward that we would not

840
00:35:52,440 --> 00:35:54,780
need to revisit redirection again this

841
00:35:54,780 --> 00:35:57,780
should work for all common encrypted DNS

842
00:35:57,780 --> 00:35:59,460
scenarios

843
00:35:59,460 --> 00:36:01,260
um it'll help level the playing field a

844
00:36:01,260 --> 00:36:03,300
little bit to help simplify

845
00:36:03,300 --> 00:36:05,640
um and lower the bar for what it takes

846
00:36:05,640 --> 00:36:08,940
to deploy a multi-node DNS system across

847
00:36:08,940 --> 00:36:10,500
the world

848
00:36:10,500 --> 00:36:12,480
um for smaller operators

849
00:36:12,480 --> 00:36:14,880
and finally it's always good to reuse

850
00:36:14,880 --> 00:36:17,280
our existing mechanisms and avoid

851
00:36:17,280 --> 00:36:20,460
inventing new things uh next slide I

852
00:36:20,460 --> 00:36:22,920
believe is just a question slide and I

853
00:36:22,920 --> 00:36:24,480
see there's five people in queue this

854
00:36:24,480 --> 00:36:26,339
ought to be fun yeah let's hear it Ben

855
00:36:26,339 --> 00:36:28,680
let's start with Ben

856
00:36:28,680 --> 00:36:30,960
okay hi

857
00:36:30,960 --> 00:36:33,180
uh can you hear me

858
00:36:33,180 --> 00:36:37,800
yes great uh so okay I think this is a

859
00:36:37,800 --> 00:36:40,079
great goal I'm all for it there's no

860
00:36:40,079 --> 00:36:44,400
reason that uh DNS server has to live on

861
00:36:44,400 --> 00:36:48,060
a single IP address in this world

862
00:36:48,060 --> 00:36:49,440
um

863
00:36:49,440 --> 00:36:52,380
it sounds to me like you're assuming

864
00:36:52,380 --> 00:36:54,180
that you

865
00:36:54,180 --> 00:36:56,520
are bootstrapped from a name you already

866
00:36:56,520 --> 00:36:59,460
have a trust anchor name for this

867
00:36:59,460 --> 00:37:01,680
service

868
00:37:01,680 --> 00:37:04,500
um that's great that means presume that

869
00:37:04,500 --> 00:37:07,079
to me that suggests that we're in DDR

870
00:37:07,079 --> 00:37:09,660
section five Discovery using resolver

871
00:37:09,660 --> 00:37:11,880
names so the client in order to make

872
00:37:11,880 --> 00:37:13,020
this connection in the first place

873
00:37:13,020 --> 00:37:15,420
started from a name did a service B

874
00:37:15,420 --> 00:37:18,359
query for underscore dns.name and got

875
00:37:18,359 --> 00:37:21,480
back its list of service bindings uh

876
00:37:21,480 --> 00:37:23,400
with with different options

877
00:37:23,400 --> 00:37:24,859
so

878
00:37:24,859 --> 00:37:28,500
uh so at that point we already had an

879
00:37:28,500 --> 00:37:31,079
opportunity to send the client out to

880
00:37:31,079 --> 00:37:33,660
into into the right node right because

881
00:37:33,660 --> 00:37:36,839
we can serve geolocated load balance and

882
00:37:36,839 --> 00:37:40,680
optimized answers to that uh service B

883
00:37:40,680 --> 00:37:44,040
query and it sounds like your this draft

884
00:37:44,040 --> 00:37:47,280
is about the case where that step didn't

885
00:37:47,280 --> 00:37:49,079
work right and the user ended up at the

886
00:37:49,079 --> 00:37:51,180
wrong place is that right

887
00:37:51,180 --> 00:37:54,960
so I'd say that's one narrow scenario

888
00:37:54,960 --> 00:37:56,579
where this applies but it's much more

889
00:37:56,579 --> 00:37:58,800
General than that so first of all you're

890
00:37:58,800 --> 00:38:01,560
right if the client got to it the first

891
00:38:01,560 --> 00:38:04,440
server via DDR there's probably an

892
00:38:04,440 --> 00:38:06,540
implementation opportunity for whoever

893
00:38:06,540 --> 00:38:09,420
runs the plain text resolver it

894
00:38:09,420 --> 00:38:12,359
bootstrapped from to have re directed

895
00:38:12,359 --> 00:38:13,740
them correctly in the first place

896
00:38:13,740 --> 00:38:17,820
however this is generic to wherever I

897
00:38:17,820 --> 00:38:21,300
got it and so if as a user I type in dot

898
00:38:21,300 --> 00:38:24,660
Sydney into my Android UI Windows UI

899
00:38:24,660 --> 00:38:28,680
Chrome UI uh Firefox UI anything and

900
00:38:28,680 --> 00:38:30,720
then I travel abroad now I'm in this

901
00:38:30,720 --> 00:38:33,060
scenario and the acquisition method was

902
00:38:33,060 --> 00:38:35,400
out of band non-protocol based right

903
00:38:35,400 --> 00:38:37,920
exactly right but that is that is

904
00:38:37,920 --> 00:38:40,440
Section Five of DDR section five of DDR

905
00:38:40,440 --> 00:38:43,140
assumes a bootstrap starting point which

906
00:38:43,140 --> 00:38:46,260
is that a name of the service

907
00:38:46,260 --> 00:38:49,740
so section five is about asking for a

908
00:38:49,740 --> 00:38:53,640
given name and yes uh so for example

909
00:38:53,640 --> 00:38:56,820
um it doesn't use resolver.arp if I'm

910
00:38:56,820 --> 00:38:57,960
thinking of the right section you're

911
00:38:57,960 --> 00:38:59,339
you're asking the name itself you

912
00:38:59,339 --> 00:39:01,380
already have the name and you say hey

913
00:39:01,380 --> 00:39:03,359
server and maybe it's the same server or

914
00:39:03,359 --> 00:39:05,280
not whatever I want to ask for records

915
00:39:05,280 --> 00:39:07,500
for dodash Sydney the problem is I don't

916
00:39:07,500 --> 00:39:09,660
know anything about in the if you

917
00:39:09,660 --> 00:39:11,280
wouldn't mind reversing to the example

918
00:39:11,280 --> 00:39:14,280
slide um so that I can refer to uh right

919
00:39:14,280 --> 00:39:15,900
you start with dodash Sydney I know

920
00:39:15,900 --> 00:39:18,119
about dodash Sydney everything's great I

921
00:39:18,119 --> 00:39:20,579
don't even know as a user or my device

922
00:39:20,579 --> 00:39:23,640
that dodash Paris exists

923
00:39:23,640 --> 00:39:25,320
um and so when queer

924
00:39:25,320 --> 00:39:29,520
sorry go ahead so uh I understand that

925
00:39:29,520 --> 00:39:31,859
that's how this is is set up here where

926
00:39:31,859 --> 00:39:34,260
you have distinct names for each of

927
00:39:34,260 --> 00:39:37,859
these entry points but I don't see why

928
00:39:37,859 --> 00:39:40,079
you've set it up that way

929
00:39:40,079 --> 00:39:42,720
um why not just use the same name for

930
00:39:42,720 --> 00:39:47,720
all of the sites and use uh and use

931
00:39:47,720 --> 00:39:51,480
geodns essentially to serve the right IP

932
00:39:51,480 --> 00:39:53,280
addresses and have you know so all of

933
00:39:53,280 --> 00:39:54,900
these various IP addresses they're all

934
00:39:54,900 --> 00:39:58,740
IP addresses of Dot site.example

935
00:39:58,740 --> 00:40:02,400
sure uh John I don't know if if you're

936
00:40:02,400 --> 00:40:05,520
on Mike available but I can already hear

937
00:40:05,520 --> 00:40:09,720
the IP database uh shortcomings argument

938
00:40:09,720 --> 00:40:11,700
coming

939
00:40:11,700 --> 00:40:14,280
sure that's that's one

940
00:40:14,280 --> 00:40:16,020
um additionally I would say that this

941
00:40:16,020 --> 00:40:19,320
also permits cross-domain repointing as

942
00:40:19,320 --> 00:40:21,200
well so you can actually pass off

943
00:40:21,200 --> 00:40:24,060
responsibility to different operators so

944
00:40:24,060 --> 00:40:26,460
in other words you can Rendezvous on one

945
00:40:26,460 --> 00:40:28,440
domain but then re-transfer to another

946
00:40:28,440 --> 00:40:31,560
that may be good or maybe bad that's

947
00:40:31,560 --> 00:40:33,540
going to be site or implementation

948
00:40:33,540 --> 00:40:35,460
specific but this does allow that versus

949
00:40:35,460 --> 00:40:37,500
having to have everything in one single

950
00:40:37,500 --> 00:40:39,359
database with one single lookup at this

951
00:40:39,359 --> 00:40:43,560
at the very first point of interaction

952
00:40:43,560 --> 00:40:46,619
yeah so it seems like the the case where

953
00:40:46,619 --> 00:40:48,780
this makes sense is specifically that

954
00:40:48,780 --> 00:40:50,640
case where you're trying to do a

955
00:40:50,640 --> 00:40:51,960
redirection and you're trying to

956
00:40:51,960 --> 00:40:53,880
redirect to a server that you don't

957
00:40:53,880 --> 00:40:56,220
trust to speak for the same name that

958
00:40:56,220 --> 00:40:58,680
you started with right because if you

959
00:40:58,680 --> 00:41:01,380
fully if you had full trust in that

960
00:41:01,380 --> 00:41:02,820
other server then you could share the

961
00:41:02,820 --> 00:41:05,220
private keys for the certificates and so

962
00:41:05,220 --> 00:41:07,859
you could share the the names and you

963
00:41:07,859 --> 00:41:11,160
wouldn't have any need for uh for these

964
00:41:11,160 --> 00:41:13,680
distinct certificate validation names

965
00:41:13,680 --> 00:41:15,839
and I want to be clear that this is not

966
00:41:15,839 --> 00:41:19,320
about managing a single set a a very

967
00:41:19,320 --> 00:41:21,540
large number of of a records on a single

968
00:41:21,540 --> 00:41:24,780
name because service B provides that

969
00:41:24,780 --> 00:41:26,820
level of indirection where you can say

970
00:41:26,820 --> 00:41:29,900
okay you wanted to resolve underscore

971
00:41:29,900 --> 00:41:32,940
dns.do.site.example here's a list of RRS

972
00:41:32,940 --> 00:41:35,400
you know here's the here's Paris Dot

973
00:41:35,400 --> 00:41:36,960
site that example in the Target names

974
00:41:36,960 --> 00:41:38,880
here's a bunch of different Geo Target

975
00:41:38,880 --> 00:41:42,839
names those don't affect the uh the

976
00:41:42,839 --> 00:41:45,060
identity of the service the the security

977
00:41:45,060 --> 00:41:47,520
anchor

978
00:41:47,520 --> 00:41:48,660
so

979
00:41:48,660 --> 00:41:51,259
uh

980
00:41:52,680 --> 00:41:55,560
I'm not sure I understand the

981
00:41:55,560 --> 00:41:59,099
uh I think I've been kicked off of the

982
00:41:59,099 --> 00:42:00,920
network

983
00:42:00,920 --> 00:42:03,900
and then uh we do have a long Queue at

984
00:42:03,900 --> 00:42:05,220
the moment so if you want to hop on the

985
00:42:05,220 --> 00:42:06,900
the end

986
00:42:06,900 --> 00:42:08,280
um I want to hear from a few other

987
00:42:08,280 --> 00:42:09,599
people right now so

988
00:42:09,599 --> 00:42:11,820
uh Ted you dropped out of the queue but

989
00:42:11,820 --> 00:42:13,440
you're but take the mic because you were

990
00:42:13,440 --> 00:42:15,660
next uh yeah I think it's because I

991
00:42:15,660 --> 00:42:17,400
closed my laptop when I got up and I

992
00:42:17,400 --> 00:42:18,780
think it's been closed long enough you

993
00:42:18,780 --> 00:42:20,520
gave up on me yeah

994
00:42:20,520 --> 00:42:24,060
uh Ted Hardy uh Cisco uh also Arthur one

995
00:42:24,060 --> 00:42:27,619
of the original anycast DNS drafts 3258

996
00:42:27,619 --> 00:42:31,260
and I think what I'm uh coming to ask

997
00:42:31,260 --> 00:42:33,060
about is similar to although slightly

998
00:42:33,060 --> 00:42:35,400
different from Ben's question which is

999
00:42:35,400 --> 00:42:38,520
from this slide you start from a fact

1000
00:42:38,520 --> 00:42:40,500
that a client is configured to use dot

1001
00:42:40,500 --> 00:42:43,020
sydney.site to exam and because it's

1002
00:42:43,020 --> 00:42:46,500
configured to use a specific name later

1003
00:42:46,500 --> 00:42:48,480
during its lifetime when it's been

1004
00:42:48,480 --> 00:42:51,060
geolocated by

1005
00:42:51,060 --> 00:42:53,040
um the server that it's talking to to

1006
00:42:53,040 --> 00:42:55,680
being somewhere else the server triggers

1007
00:42:55,680 --> 00:43:00,000
a what's in essence a reconfiguration

1008
00:43:00,000 --> 00:43:02,339
was why don't you call it by the same

1009
00:43:02,339 --> 00:43:04,380
name my question is why are you driving

1010
00:43:04,380 --> 00:43:06,960
the reconfiguration from the server side

1011
00:43:06,960 --> 00:43:09,000
and not the client side

1012
00:43:09,000 --> 00:43:11,099
um if you've got this set up with a

1013
00:43:11,099 --> 00:43:12,599
client that's configured to use a

1014
00:43:12,599 --> 00:43:15,000
particular example forever then this is

1015
00:43:15,000 --> 00:43:17,760
a problem you have to solve at the

1016
00:43:17,760 --> 00:43:19,740
server side but if you've got it set up

1017
00:43:19,740 --> 00:43:21,180
so that the client knows that it's

1018
00:43:21,180 --> 00:43:23,220
reattaching to a new network which is

1019
00:43:23,220 --> 00:43:25,079
something we use to drive other things

1020
00:43:25,079 --> 00:43:27,839
like mac address changes for privacy Etc

1021
00:43:27,839 --> 00:43:30,780
you could use that to drive whatever the

1022
00:43:30,780 --> 00:43:33,839
initial configuration is

1023
00:43:33,839 --> 00:43:35,700
um that it would use to find out what

1024
00:43:35,700 --> 00:43:38,760
it's appropriate uh server would be that

1025
00:43:38,760 --> 00:43:40,680
means that you're starting from the same

1026
00:43:40,680 --> 00:43:44,700
place both times that looks like uh a

1027
00:43:44,700 --> 00:43:46,140
logical thing to do and I didn't see it

1028
00:43:46,140 --> 00:43:48,599
in your Alternatives considered so I'd

1029
00:43:48,599 --> 00:43:50,400
like to know whether when you considered

1030
00:43:50,400 --> 00:43:52,619
it and why you rejected it if not and if

1031
00:43:52,619 --> 00:43:54,720
you didn't consider it why

1032
00:43:54,720 --> 00:43:56,940
thank you that's a good question

1033
00:43:56,940 --> 00:43:58,260
um so

1034
00:43:58,260 --> 00:44:00,119
I'm also noticing you can get into the

1035
00:44:00,119 --> 00:44:01,020
queue if you want I'm seeing some

1036
00:44:01,020 --> 00:44:03,180
emphatic reactions in the crowd

1037
00:44:03,180 --> 00:44:03,859
um

1038
00:44:03,859 --> 00:44:06,599
so I'm going to defer to John in a

1039
00:44:06,599 --> 00:44:08,819
moment but this is something that we had

1040
00:44:08,819 --> 00:44:11,220
talked about and we're looking at

1041
00:44:11,220 --> 00:44:13,319
operator flexibility right so you're

1042
00:44:13,319 --> 00:44:14,280
correct

1043
00:44:14,280 --> 00:44:17,579
um I mean I work on a OS platform right

1044
00:44:17,579 --> 00:44:19,920
endpoint configuration and doing it that

1045
00:44:19,920 --> 00:44:21,960
way we usually prefer to network

1046
00:44:21,960 --> 00:44:23,520
configuration because like you said this

1047
00:44:23,520 --> 00:44:26,160
is you could look at it that way as a

1048
00:44:26,160 --> 00:44:28,260
reconfiguration of the device

1049
00:44:28,260 --> 00:44:28,920
um

1050
00:44:28,920 --> 00:44:31,500
but it's far less flexible right like if

1051
00:44:31,500 --> 00:44:34,260
I'm if I'm working for a company and and

1052
00:44:34,260 --> 00:44:38,460
we have a custom uh encrypted DNS Fleet

1053
00:44:38,460 --> 00:44:40,619
and we have 30 locations let's say we

1054
00:44:40,619 --> 00:44:42,420
add five more

1055
00:44:42,420 --> 00:44:44,339
um do I need to go teaching all of them

1056
00:44:44,339 --> 00:44:47,400
when and where they apply or can I just

1057
00:44:47,400 --> 00:44:49,200
let the system handle it I've configured

1058
00:44:49,200 --> 00:44:51,359
them with one then it will do another

1059
00:44:51,359 --> 00:44:53,940
now I do think that there's a a ux

1060
00:44:53,940 --> 00:44:56,280
opportunity there right maybe

1061
00:44:56,280 --> 00:44:58,200
whether through login or through UI or

1062
00:44:58,200 --> 00:44:59,339
whatever else you need to be honest

1063
00:44:59,339 --> 00:45:02,460
about what your new endpoint is

1064
00:45:02,460 --> 00:45:05,160
um but both with this and with the

1065
00:45:05,160 --> 00:45:07,680
sharing names we just didn't see the

1066
00:45:07,680 --> 00:45:09,960
it seems like an artificial burden to

1067
00:45:09,960 --> 00:45:13,079
require whoever is configuring this to

1068
00:45:13,079 --> 00:45:15,000
have to do that at the end point when

1069
00:45:15,000 --> 00:45:17,579
the DNS could just handle it for you

1070
00:45:17,579 --> 00:45:19,079
um so this is going to be an interesting

1071
00:45:19,079 --> 00:45:21,180
conversation in the working group if

1072
00:45:21,180 --> 00:45:22,440
this is brought to the working here

1073
00:45:22,440 --> 00:45:25,440
because I completely disagree

1074
00:45:25,440 --> 00:45:26,819
um I think it's actually far more

1075
00:45:26,819 --> 00:45:28,740
flexible if the client does it because

1076
00:45:28,740 --> 00:45:30,900
the client may decide based on

1077
00:45:30,900 --> 00:45:32,760
attachment to specific networks that it

1078
00:45:32,760 --> 00:45:34,440
doesn't want to use this at all

1079
00:45:34,440 --> 00:45:36,420
it wants to go someplace completely

1080
00:45:36,420 --> 00:45:38,040
different and if it's getting redirected

1081
00:45:38,040 --> 00:45:39,900
from something that's in essence

1082
00:45:39,900 --> 00:45:41,760
hard-coded it doesn't get that

1083
00:45:41,760 --> 00:45:44,280
flexibility so I think we we may have a

1084
00:45:44,280 --> 00:45:45,839
philosophical discussion we have to have

1085
00:45:45,839 --> 00:45:49,740
here on whether it's up to the DNS to

1086
00:45:49,740 --> 00:45:52,200
determine what your next resolver is or

1087
00:45:52,200 --> 00:45:54,480
up to you to reconfigure with advice

1088
00:45:54,480 --> 00:45:57,180
from the DNS what your next resolver is

1089
00:45:57,180 --> 00:45:58,440
and I think

1090
00:45:58,440 --> 00:46:00,839
the DDR actually does

1091
00:46:00,839 --> 00:46:03,599
the advice from the the DNS for the

1092
00:46:03,599 --> 00:46:05,700
client configuration and I don't think

1093
00:46:05,700 --> 00:46:07,920
that's quite what you're doing uh okay

1094
00:46:07,920 --> 00:46:09,480
so thank you and it sounds like that'll

1095
00:46:09,480 --> 00:46:12,960
be a good mailing thread uh discussion

1096
00:46:12,960 --> 00:46:16,380
as a co-author on DDR I

1097
00:46:16,380 --> 00:46:18,420
whether it's advice or configuration I

1098
00:46:18,420 --> 00:46:20,220
guess could be debatable

1099
00:46:20,220 --> 00:46:22,319
um thank you regardless let's let's

1100
00:46:22,319 --> 00:46:24,420
start an email thread yep Ralph please

1101
00:46:24,420 --> 00:46:27,240
that'll be back on my so you are asking

1102
00:46:27,240 --> 00:46:28,920
underscore DNS resolver at our part

1103
00:46:28,920 --> 00:46:31,680
right what would happen if the Curie

1104
00:46:31,680 --> 00:46:33,480
kind of comes back to the same server

1105
00:46:33,480 --> 00:46:35,400
because I mean then you still have to do

1106
00:46:35,400 --> 00:46:37,680
something or are you checking this so

1107
00:46:37,680 --> 00:46:39,660
good question um it's not directly

1108
00:46:39,660 --> 00:46:41,819
called out or accounted for but since

1109
00:46:41,819 --> 00:46:44,640
because unlike plain text bootstrapping

1110
00:46:44,640 --> 00:46:47,220
DDR the identity here is the name if it

1111
00:46:47,220 --> 00:46:48,839
redirects to the same name no action

1112
00:46:48,839 --> 00:46:51,319
should be necessary

1113
00:46:53,339 --> 00:46:56,359
Tommy Polly please

1114
00:46:58,380 --> 00:47:02,460
hello yes thanks for sharing this

1115
00:47:02,460 --> 00:47:04,560
interesting idea overall I like that

1116
00:47:04,560 --> 00:47:08,220
we're reusing the sbcb query

1117
00:47:08,220 --> 00:47:10,020
Tommy you're a little hard to hear if

1118
00:47:10,020 --> 00:47:11,819
you could get closer to your mic or

1119
00:47:11,819 --> 00:47:14,339
something uh sure maybe I'll I'm on

1120
00:47:14,339 --> 00:47:16,440
headphones right now um

1121
00:47:16,440 --> 00:47:18,599
it's also raining extremely heavily up

1122
00:47:18,599 --> 00:47:21,240
there can you hear me

1123
00:47:21,240 --> 00:47:23,819
I'll just speak loudly

1124
00:47:23,819 --> 00:47:26,880
so I do see that the server may be able

1125
00:47:26,880 --> 00:47:29,160
to give a better response when it has

1126
00:47:29,160 --> 00:47:31,220
more information about the client

1127
00:47:31,220 --> 00:47:36,599
that's more direct indis TLS connection

1128
00:47:36,599 --> 00:47:38,940
I also do agree with Ted

1129
00:47:38,940 --> 00:47:41,640
that we should have things be mainly

1130
00:47:41,640 --> 00:47:43,800
driven by client Network changes for

1131
00:47:43,800 --> 00:47:46,280
handling different regions Etc

1132
00:47:46,280 --> 00:47:48,720
but certainly when I first joined a

1133
00:47:48,720 --> 00:47:52,140
network and I use a UDP query over the

1134
00:47:52,140 --> 00:47:54,960
network resolver to find the location of

1135
00:47:54,960 --> 00:47:57,420
sydney.site.example

1136
00:47:57,420 --> 00:48:00,720
it may route me incorrectly due to the

1137
00:48:00,720 --> 00:48:02,099
client subnet not being available

1138
00:48:02,099 --> 00:48:05,280
through the UDP resolver or some other

1139
00:48:05,280 --> 00:48:07,260
issue

1140
00:48:07,260 --> 00:48:07,980
um

1141
00:48:07,980 --> 00:48:11,940
and in the experience we have with our

1142
00:48:11,940 --> 00:48:15,359
doe and oblivious dough resolvers that

1143
00:48:15,359 --> 00:48:17,880
we're using for private relay we already

1144
00:48:17,880 --> 00:48:21,000
do some what we call Doe bootstrapping

1145
00:48:21,000 --> 00:48:24,859
which is uh when once we connect to our

1146
00:48:24,859 --> 00:48:28,560
resolver we ask it uh for its own

1147
00:48:28,560 --> 00:48:31,619
records again to see if it has better

1148
00:48:31,619 --> 00:48:35,099
higher Fidelity answers for us

1149
00:48:35,099 --> 00:48:36,599
um so I'm wondering if maybe we could

1150
00:48:36,599 --> 00:48:38,760
just do that I think that's agreeing

1151
00:48:38,760 --> 00:48:40,619
with what Ben was saying instead of

1152
00:48:40,619 --> 00:48:42,540
doing resolver about arpa just do the

1153
00:48:42,540 --> 00:48:43,380
original

1154
00:48:43,380 --> 00:48:45,540
the svcb query for the original name

1155
00:48:45,540 --> 00:48:47,220
again

1156
00:48:47,220 --> 00:48:50,400
so like when I join a new network I find

1157
00:48:50,400 --> 00:48:52,800
my resolver and then I immediately ask

1158
00:48:52,800 --> 00:48:54,720
it for its own identity again just to

1159
00:48:54,720 --> 00:48:57,540
see if my local network resolver routed

1160
00:48:57,540 --> 00:49:00,619
me slightly incorrectly

1161
00:49:04,079 --> 00:49:06,119
so if I'm following

1162
00:49:06,119 --> 00:49:07,619
um is there a significant difference

1163
00:49:07,619 --> 00:49:10,079
other than querying for the name of the

1164
00:49:10,079 --> 00:49:12,359
resolver you're currently using versus

1165
00:49:12,359 --> 00:49:14,280
the sudn

1166
00:49:14,280 --> 00:49:16,020
is the behavior otherwise the same or is

1167
00:49:16,020 --> 00:49:19,099
there another difference I'm missing

1168
00:49:22,859 --> 00:49:23,940
um

1169
00:49:23,940 --> 00:49:26,700
I mean it should be the same thing

1170
00:49:26,700 --> 00:49:29,099
in this case but I think it's

1171
00:49:29,099 --> 00:49:31,200
more consistent and more obvious to say

1172
00:49:31,200 --> 00:49:33,900
I know what I'm talking to

1173
00:49:33,900 --> 00:49:36,359
if I already knew the name that we

1174
00:49:36,359 --> 00:49:37,200
should

1175
00:49:37,200 --> 00:49:39,240
just keep going with the name rather

1176
00:49:39,240 --> 00:49:43,040
than jumping back to resolver

1177
00:49:45,420 --> 00:49:46,740
okay

1178
00:49:46,740 --> 00:49:48,420
um

1179
00:49:48,420 --> 00:49:51,180
okay so yeah obviously we have some

1180
00:49:51,180 --> 00:49:52,500
thinking to do

1181
00:49:52,500 --> 00:49:54,180
um thank you you and Ben for bringing

1182
00:49:54,180 --> 00:49:55,500
that up I can see how that might be

1183
00:49:55,500 --> 00:49:56,700
simpler

1184
00:49:56,700 --> 00:49:58,200
um but I I haven't had enough time to

1185
00:49:58,200 --> 00:50:01,020
chew on that and say we haven't uh

1186
00:50:01,020 --> 00:50:02,700
forgotten about something that drove our

1187
00:50:02,700 --> 00:50:04,859
original decision thank you yeah right

1188
00:50:04,859 --> 00:50:06,599
now we don't want to go too far down the

1189
00:50:06,599 --> 00:50:07,980
design path because that's something

1190
00:50:07,980 --> 00:50:10,140
that should happen on the list right yes

1191
00:50:10,140 --> 00:50:13,579
but uh Victoria please

1192
00:50:13,579 --> 00:50:16,140
open exchange I confess I didn't

1193
00:50:16,140 --> 00:50:17,280
actually do that after so I don't know

1194
00:50:17,280 --> 00:50:18,720
if this is already addressed but it was

1195
00:50:18,720 --> 00:50:21,000
not in the presentation sure so it's uh

1196
00:50:21,000 --> 00:50:23,700
well I see the use case I see why you

1197
00:50:23,700 --> 00:50:25,579
want to do this it's a valid use case

1198
00:50:25,579 --> 00:50:28,079
but then of course from the policy

1199
00:50:28,079 --> 00:50:29,819
Viewpoint as soon as you start switching

1200
00:50:29,819 --> 00:50:31,079
people with different resolver you run

1201
00:50:31,079 --> 00:50:32,280
into all the problems that we already

1202
00:50:32,280 --> 00:50:35,640
discussed with 99 and so at least this

1203
00:50:35,640 --> 00:50:37,800
should be the subject about the privacy

1204
00:50:37,800 --> 00:50:39,420
and operational consideration section

1205
00:50:39,420 --> 00:50:41,940
because I mean if you really use this

1206
00:50:41,940 --> 00:50:44,520
just to switch people to a result which

1207
00:50:44,520 --> 00:50:46,440
is in in the same jurisdiction run by

1208
00:50:46,440 --> 00:50:47,880
the same company and under the same

1209
00:50:47,880 --> 00:50:50,160
policies nothing bad happens you start

1210
00:50:50,160 --> 00:50:51,780
switching people to a places which have

1211
00:50:51,780 --> 00:50:53,880
different privacy laws or maybe apply

1212
00:50:53,880 --> 00:50:55,380
different maybe the others always

1213
00:50:55,380 --> 00:50:57,359
applying different policies or is run by

1214
00:50:57,359 --> 00:50:58,800
different organizations then maybe you

1215
00:50:58,800 --> 00:51:01,859
need some kind of user consent so we

1216
00:51:01,859 --> 00:51:03,359
might declare that this is out of scope

1217
00:51:03,359 --> 00:51:05,460
we might leave this to whoever is

1218
00:51:05,460 --> 00:51:06,780
running this to take care that

1219
00:51:06,780 --> 00:51:08,339
everything is actually legal and in line

1220
00:51:08,339 --> 00:51:09,780
and in line with user expectations

1221
00:51:09,780 --> 00:51:11,760
because I agree that if we assume that

1222
00:51:11,760 --> 00:51:13,619
people actually wrote a type of the uh

1223
00:51:13,619 --> 00:51:15,359
sleep name maybe they really want even

1224
00:51:15,359 --> 00:51:16,619
if they are in France they want to speak

1225
00:51:16,619 --> 00:51:18,300
to a server in Australia not to serve in

1226
00:51:18,300 --> 00:51:20,640
France which maybe maybe forced to apply

1227
00:51:20,640 --> 00:51:24,240
French law so I mean I I'm fine with

1228
00:51:24,240 --> 00:51:25,920
this but at least this needs to be

1229
00:51:25,920 --> 00:51:27,420
documented in the draft if you want to

1230
00:51:27,420 --> 00:51:29,579
proceed but I might have actually a

1231
00:51:29,579 --> 00:51:31,920
comment on that one I would argue that

1232
00:51:31,920 --> 00:51:34,200
this actually makes that kind of policy

1233
00:51:34,200 --> 00:51:37,740
decision easier because when you have an

1234
00:51:37,740 --> 00:51:39,300
any cast array of course your packets

1235
00:51:39,300 --> 00:51:40,920
are going to go whatever is closest as

1236
00:51:40,920 --> 00:51:43,140
far as the network is considered this

1237
00:51:43,140 --> 00:51:46,260
allows redirection to a unicast address

1238
00:51:46,260 --> 00:51:48,900
which is in the same policy zone or the

1239
00:51:48,900 --> 00:51:50,460
belief at least is that it's in the same

1240
00:51:50,460 --> 00:51:53,099
policy Zone as the queryer so this

1241
00:51:53,099 --> 00:51:55,140
creates I think an easier way for

1242
00:51:55,140 --> 00:51:59,099
resolver operators to segment their from

1243
00:51:59,099 --> 00:52:01,079
a policy perspective segment their user

1244
00:52:01,079 --> 00:52:04,140
and resolvers into the same policy Zone

1245
00:52:04,140 --> 00:52:07,140
because

1246
00:52:08,780 --> 00:52:11,099
Limon said we know with unicast but

1247
00:52:11,099 --> 00:52:13,140
that's a whole separate thing

1248
00:52:13,140 --> 00:52:17,118
um thank you Victoria Victor please

1249
00:52:18,960 --> 00:52:21,599
direct it's mandatory or are they just

1250
00:52:21,599 --> 00:52:23,220
advisory and the client can keep going

1251
00:52:23,220 --> 00:52:26,040
with the same resolver uh and secondly

1252
00:52:26,040 --> 00:52:28,440
you mentioned multiple redirect hops I'm

1253
00:52:28,440 --> 00:52:30,839
very skeptical about the need and wisdom

1254
00:52:30,839 --> 00:52:33,480
of allowing second and third and so on

1255
00:52:33,480 --> 00:52:36,140
redirects

1256
00:52:36,240 --> 00:52:38,760
so let me answer the second I might have

1257
00:52:38,760 --> 00:52:40,619
to have you repeat the first the audio

1258
00:52:40,619 --> 00:52:42,180
started cutting in halfway through but

1259
00:52:42,180 --> 00:52:44,099
for redirects that's actually that's

1260
00:52:44,099 --> 00:52:45,599
actually our point is we don't want you

1261
00:52:45,599 --> 00:52:49,140
doing uh multiple redirect chains so if

1262
00:52:49,140 --> 00:52:50,640
if what you want to see is stronger

1263
00:52:50,640 --> 00:52:53,400
guidance about you know clients are free

1264
00:52:53,400 --> 00:52:54,900
to start ignoring them after the first

1265
00:52:54,900 --> 00:52:56,880
one I'm certainly fine with that but

1266
00:52:56,880 --> 00:52:58,500
agreed that's not something we're trying

1267
00:52:58,500 --> 00:53:00,660
to encourage we're simply calling out

1268
00:53:00,660 --> 00:53:02,940
as advice to implementers on the

1269
00:53:02,940 --> 00:53:04,559
operator side that you need to be

1270
00:53:04,559 --> 00:53:06,119
mindful of that and if you start doing

1271
00:53:06,119 --> 00:53:08,339
things like creating circular chains

1272
00:53:08,339 --> 00:53:10,920
that you're going to have a bad time

1273
00:53:10,920 --> 00:53:13,500
right um the the first question was

1274
00:53:13,500 --> 00:53:15,900
whether redirects are mandatory do you

1275
00:53:15,900 --> 00:53:17,280
have to follow them or can you just

1276
00:53:17,280 --> 00:53:19,500
stick with the resolver despite its

1277
00:53:19,500 --> 00:53:21,300
preference to send you elsewhere

1278
00:53:21,300 --> 00:53:22,859
so that's a good question I think that's

1279
00:53:22,859 --> 00:53:24,000
going to inform some of the other

1280
00:53:24,000 --> 00:53:27,059
comments about uh consent and policy

1281
00:53:27,059 --> 00:53:28,740
which is

1282
00:53:28,740 --> 00:53:30,960
um no they're not intended to be

1283
00:53:30,960 --> 00:53:32,720
mandatory it's it's all about

1284
00:53:32,720 --> 00:53:36,300
optimization right now I'll John feel

1285
00:53:36,300 --> 00:53:38,940
free to to chime in but currently it's

1286
00:53:38,940 --> 00:53:40,680
not a mandatory and so the server is

1287
00:53:40,680 --> 00:53:43,740
required to be able to handle the case

1288
00:53:43,740 --> 00:53:46,020
where the client persists now if it's

1289
00:53:46,020 --> 00:53:47,880
overloaded it's of course free to Simply

1290
00:53:47,880 --> 00:53:50,339
close the connection but it isn't

1291
00:53:50,339 --> 00:53:52,680
mandatory because we don't have servers

1292
00:53:52,680 --> 00:53:54,960
dictate policy to clients in this

1293
00:53:54,960 --> 00:53:57,380
working group

1294
00:53:57,720 --> 00:54:00,379
green

1295
00:54:00,720 --> 00:54:02,700
John I saw you just turned on your mic

1296
00:54:02,700 --> 00:54:04,440
yeah there's also backwards

1297
00:54:04,440 --> 00:54:06,540
compatibility of you know no that I

1298
00:54:06,540 --> 00:54:08,880
would say that it is not mandatory um

1299
00:54:08,880 --> 00:54:10,800
this is for better performance but it is

1300
00:54:10,800 --> 00:54:14,480
not a requirement for the clients at all

1301
00:54:15,000 --> 00:54:18,440
great thank you Eric please

1302
00:54:22,559 --> 00:54:24,720
uh yeah so

1303
00:54:24,720 --> 00:54:27,900
you obviously HTTP has similar use cases

1304
00:54:27,900 --> 00:54:30,300
that exist and those are being worked on

1305
00:54:30,300 --> 00:54:32,819
there you call them out as alternative

1306
00:54:32,819 --> 00:54:34,260
proposals and say they don't quite work

1307
00:54:34,260 --> 00:54:36,839
here but same time HP is still HTTP and

1308
00:54:36,839 --> 00:54:38,640
those will still exist for

1309
00:54:38,640 --> 00:54:41,700
encrypted DNS over HP so how do you see

1310
00:54:41,700 --> 00:54:44,700
them interacting together should we are

1311
00:54:44,700 --> 00:54:46,980
you proposing we ban using those

1312
00:54:46,980 --> 00:54:48,720
mechanisms like redirect and alternate

1313
00:54:48,720 --> 00:54:51,359
service for DNS servers operating on DNS

1314
00:54:51,359 --> 00:54:53,760
over HPS do you see them just being able

1315
00:54:53,760 --> 00:54:55,200
to use both

1316
00:54:55,200 --> 00:54:57,420
which in that case do they have the

1317
00:54:57,420 --> 00:54:59,400
problem we might have two completely

1318
00:54:59,400 --> 00:55:00,839
different redirects and we might have

1319
00:55:00,839 --> 00:55:03,300
the ambiguity case of inconsistent

1320
00:55:03,300 --> 00:55:05,520
Behavior if one client follows one and

1321
00:55:05,520 --> 00:55:08,040
the guy follows the other do we mandate

1322
00:55:08,040 --> 00:55:10,260
specific mechanisms for you must follow

1323
00:55:10,260 --> 00:55:12,720
this one if you get both what was the

1324
00:55:12,720 --> 00:55:14,819
interaction story here is this do you

1325
00:55:14,819 --> 00:55:15,960
have the vision for that or is it

1326
00:55:15,960 --> 00:55:17,880
something that needs to be developed

1327
00:55:17,880 --> 00:55:20,940
uh the latter and so we can go entirely

1328
00:55:20,940 --> 00:55:23,339
into Tommy opinion land now but I really

1329
00:55:23,339 --> 00:55:26,579
don't want to do both right per query

1330
00:55:26,579 --> 00:55:28,920
overhead on redirect is something I

1331
00:55:28,920 --> 00:55:31,200
don't ever want to support

1332
00:55:31,200 --> 00:55:34,440
um because I I I'm configured to use a

1333
00:55:34,440 --> 00:55:35,819
resolver right it's a little different

1334
00:55:35,819 --> 00:55:38,160
from HTTP where

1335
00:55:38,160 --> 00:55:39,960
um each resource is located somewhere

1336
00:55:39,960 --> 00:55:42,599
else a recursive resolver is supposed to

1337
00:55:42,599 --> 00:55:44,339
answer all my questions

1338
00:55:44,339 --> 00:55:46,500
um and so no I don't want them to

1339
00:55:46,500 --> 00:55:48,839
coexist I don't want to use 300 at all

1340
00:55:48,839 --> 00:55:51,359
when I'm using dough

1341
00:55:51,359 --> 00:55:54,119
but at the same time I'm thinking for

1342
00:55:54,119 --> 00:55:56,099
some clients that may only use DNS or

1343
00:55:56,099 --> 00:55:58,200
HBS because they're encrypted DNS

1344
00:55:58,200 --> 00:55:59,760
mechanism some servers that only use

1345
00:55:59,760 --> 00:56:02,640
that they may be looking at saying hey

1346
00:56:02,640 --> 00:56:05,880
we only care about HTTP HTTP is a

1347
00:56:05,880 --> 00:56:07,800
mechanism that can solve these problems

1348
00:56:07,800 --> 00:56:09,720
we should just solve it there

1349
00:56:09,720 --> 00:56:11,940
even if nothing perfectly exists to

1350
00:56:11,940 --> 00:56:13,200
solve our use cases there today let's

1351
00:56:13,200 --> 00:56:16,020
add it to hdb saw our use cases

1352
00:56:16,020 --> 00:56:19,319
what's motivating them to not say we

1353
00:56:19,319 --> 00:56:20,640
just want to sell this nation B and then

1354
00:56:20,640 --> 00:56:22,740
we have this problem of some servers

1355
00:56:22,740 --> 00:56:24,839
will be trying to do some to solve some

1356
00:56:24,839 --> 00:56:27,599
cases and we have that interaction so I

1357
00:56:27,599 --> 00:56:29,160
feel like this is we can't just say as

1358
00:56:29,160 --> 00:56:30,780
well exist there's going to be the

1359
00:56:30,780 --> 00:56:31,980
interaction I think we need to solve it

1360
00:56:31,980 --> 00:56:33,780
somehow

1361
00:56:33,780 --> 00:56:37,020
and that gets into the question of maybe

1362
00:56:37,020 --> 00:56:39,480
some people might say uh we don't want

1363
00:56:39,480 --> 00:56:40,920
this

1364
00:56:40,920 --> 00:56:43,619
at the same time obviously others in

1365
00:56:43,619 --> 00:56:45,359
this room will say we want set besides

1366
00:56:45,359 --> 00:56:47,760
DNS of ratio yes so that's not coming

1367
00:56:47,760 --> 00:56:49,559
with the solution either so

1368
00:56:49,559 --> 00:56:51,559
yeah

1369
00:56:51,900 --> 00:56:54,000
uh yeah I guess I would say that it

1370
00:56:54,000 --> 00:56:55,559
seems like a more Universal solution

1371
00:56:55,559 --> 00:56:57,359
would be the preferred choice I agree

1372
00:56:57,359 --> 00:56:58,980
that they're they're in fact there are

1373
00:56:58,980 --> 00:57:00,420
going to be probably multiple different

1374
00:57:00,420 --> 00:57:02,099
ways of doing this in a variety of the

1375
00:57:02,099 --> 00:57:04,260
different subprotocols and DNS why

1376
00:57:04,260 --> 00:57:05,579
wouldn't you just pick the one more

1377
00:57:05,579 --> 00:57:08,099
Universal solution is especially tricky

1378
00:57:08,099 --> 00:57:10,020
here because yes I agree more Universal

1379
00:57:10,020 --> 00:57:12,420
Universal is better but

1380
00:57:12,420 --> 00:57:14,940
is more Universal as in solving more DNS

1381
00:57:14,940 --> 00:57:17,040
cases or you more Universal as an HTTP

1382
00:57:17,040 --> 00:57:19,500
is a much bigger thing than DNS and so

1383
00:57:19,500 --> 00:57:20,880
if you that fits within your scenario

1384
00:57:20,880 --> 00:57:22,920
that's more Universal so

1385
00:57:22,920 --> 00:57:24,720
while more Universal is a good goal to

1386
00:57:24,720 --> 00:57:26,400
go for it's not really clear in this

1387
00:57:26,400 --> 00:57:29,640
case which one is more Universal so I

1388
00:57:29,640 --> 00:57:31,859
think we still end up with

1389
00:57:31,859 --> 00:57:34,079
this situation where It's tricky to make

1390
00:57:34,079 --> 00:57:36,500
decisions

1391
00:57:38,819 --> 00:57:40,619
anyway that's all I've got

1392
00:57:40,619 --> 00:57:44,660
okay thank you Eric welcome back Ben

1393
00:57:45,540 --> 00:57:48,240
hi sorry my my connection to me that

1394
00:57:48,240 --> 00:57:50,400
throw has been unstable

1395
00:57:50,400 --> 00:57:51,780
um so

1396
00:57:51,780 --> 00:57:54,660
Tommy mentioned earlier that Apple has

1397
00:57:54,660 --> 00:57:59,220
uh a bootstrap process that um that

1398
00:57:59,220 --> 00:58:00,960
repeats some of the discovery queries

1399
00:58:00,960 --> 00:58:02,640
through the encrypted channel to see if

1400
00:58:02,640 --> 00:58:04,380
the resolver has an opinion about its

1401
00:58:04,380 --> 00:58:06,660
own location that's different from the

1402
00:58:06,660 --> 00:58:08,579
bootstrap resolver's opinion Chrome

1403
00:58:08,579 --> 00:58:11,940
actually also has a version of that this

1404
00:58:11,940 --> 00:58:15,119
draft is is also essentially proposing a

1405
00:58:15,119 --> 00:58:16,680
bootstrap mechanism so I think that

1406
00:58:16,680 --> 00:58:18,359
we're on to something here we should

1407
00:58:18,359 --> 00:58:20,460
write it we should have a document that

1408
00:58:20,460 --> 00:58:23,460
talks about bootstrap but this specific

1409
00:58:23,460 --> 00:58:26,760
proposal I I don't like in the details

1410
00:58:26,760 --> 00:58:29,240
because I think it's actually insecure

1411
00:58:29,240 --> 00:58:33,540
remember that DDR was in invented

1412
00:58:33,540 --> 00:58:35,880
deployed later than encrypted DNS so

1413
00:58:35,880 --> 00:58:37,260
imagine that I am connected to an

1414
00:58:37,260 --> 00:58:39,119
encrypted DNS resolver that doesn't know

1415
00:58:39,119 --> 00:58:41,760
about DDR if I send this discovery query

1416
00:58:41,760 --> 00:58:43,680
that Discovery query can totally pass

1417
00:58:43,680 --> 00:58:45,540
all the way through that resolver and

1418
00:58:45,540 --> 00:58:48,059
out into the public internet over UDP at

1419
00:58:48,059 --> 00:58:50,640
which point anybody on the network can

1420
00:58:50,640 --> 00:58:53,720
can inject and synthesize a response

1421
00:58:53,720 --> 00:58:56,640
that that claims to be the correct

1422
00:58:56,640 --> 00:58:58,520
answer for underscore

1423
00:58:58,520 --> 00:59:00,900
dns.resolver.arpa and since in this

1424
00:59:00,900 --> 00:59:02,940
proposal that response can overwrite the

1425
00:59:02,940 --> 00:59:06,780
trust anchor for my resolver I can be

1426
00:59:06,780 --> 00:59:09,839
redirected to do you know to to

1427
00:59:09,839 --> 00:59:12,000
do.attacker.example

1428
00:59:12,000 --> 00:59:14,700
via this mechanism and then validate the

1429
00:59:14,700 --> 00:59:16,200
certificate for DOT attacker that

1430
00:59:16,200 --> 00:59:17,640
example

1431
00:59:17,640 --> 00:59:20,460
all right so to summarize oh go ahead

1432
00:59:20,460 --> 00:59:23,940
sorry well so this is why one example of

1433
00:59:23,940 --> 00:59:26,700
more generally why I really don't like I

1434
00:59:26,700 --> 00:59:29,099
really don't like the pattern of the

1435
00:59:29,099 --> 00:59:31,020
server sends us one message and that's

1436
00:59:31,020 --> 00:59:32,880
enough to tell the client okay we're

1437
00:59:32,880 --> 00:59:34,740
going to now we're going to change our

1438
00:59:34,740 --> 00:59:37,700
certificate validation

1439
00:59:38,520 --> 00:59:41,839
so in summary really the concern being

1440
00:59:41,839 --> 00:59:44,579
non-compliance resolver.arpa recursives

1441
00:59:44,579 --> 00:59:47,520
blindly handing that trust decision

1442
00:59:47,520 --> 00:59:50,640
Upstream right so that's that's one

1443
00:59:50,640 --> 00:59:53,099
example that's sort of one example of a

1444
00:59:53,099 --> 00:59:54,780
more General problem here which is

1445
00:59:54,780 --> 00:59:56,880
something we've talked a lot about a lot

1446
00:59:56,880 --> 00:59:58,859
in the past which is a transient to

1447
00:59:58,859 --> 01:00:01,640
persistent attack upgrade so if I can

1448
01:00:01,640 --> 01:00:07,260
transiently compromise your uh if I can

1449
01:00:07,260 --> 01:00:09,720
essentially inject one response in any

1450
01:00:09,720 --> 01:00:13,280
somehow in any way to uh to this

1451
01:00:13,280 --> 01:00:16,859
discovery name I can change the

1452
01:00:16,859 --> 01:00:20,400
validation Point used by the client and

1453
01:00:20,400 --> 01:00:22,619
and from then on have at least for the

1454
01:00:22,619 --> 01:00:25,980
length of the TTL get them to use my

1455
01:00:25,980 --> 01:00:27,359
resolver instead of the one they

1456
01:00:27,359 --> 01:00:30,319
intended to

1457
01:00:33,720 --> 01:00:34,980
um it seems like we're having a really

1458
01:00:34,980 --> 01:00:36,900
awesome design discussion going on here

1459
01:00:36,900 --> 01:00:38,760
and it says to me there's a lot of

1460
01:00:38,760 --> 01:00:40,859
energy and interest in this topic as Ben

1461
01:00:40,859 --> 01:00:42,660
pointed out similar parallel thinkings

1462
01:00:42,660 --> 01:00:45,900
going on maybe a suggestion

1463
01:00:45,900 --> 01:00:48,000
um you guys should maybe step back go

1464
01:00:48,000 --> 01:00:51,180
have a coffee virtually with Ben remote

1465
01:00:51,180 --> 01:00:52,680
and

1466
01:00:52,680 --> 01:00:55,559
uh iterate on a Next Generation but it

1467
01:00:55,559 --> 01:00:56,579
does seem like there's interest so

1468
01:00:56,579 --> 01:00:58,799
that's really awesome but

1469
01:00:58,799 --> 01:01:00,960
does it seem reasonable oh yeah totally

1470
01:01:00,960 --> 01:01:03,059
okay a lot of good list discussion here

1471
01:01:03,059 --> 01:01:05,819
uh Eric please yeah it was basically

1472
01:01:05,819 --> 01:01:08,579
what Glenn was saying I like to see

1473
01:01:08,579 --> 01:01:10,500
interaction on the drug that has been

1474
01:01:10,500 --> 01:01:13,319
posted four hours ago right so please

1475
01:01:13,319 --> 01:01:15,720
next time post it the week before for

1476
01:01:15,720 --> 01:01:18,359
their zero zero right again nice

1477
01:01:18,359 --> 01:01:21,420
decision I think interesting work but

1478
01:01:21,420 --> 01:01:23,700
I need to say it right no that sounded

1479
01:01:23,700 --> 01:01:25,260
like he definitely had his ad hat on

1480
01:01:25,260 --> 01:01:28,680
there yeah a little bit and I'll say

1481
01:01:28,680 --> 01:01:31,339
I'll say the draft and

1482
01:01:32,460 --> 01:01:34,260
and you've got a home to do it in so

1483
01:01:34,260 --> 01:01:38,040
right make with doing okay

1484
01:01:38,040 --> 01:01:41,119
um Mr Nygren please

1485
01:01:46,680 --> 01:01:48,480
um changes

1486
01:01:48,480 --> 01:01:51,059
the um I think a bunch of the challenges

1487
01:01:51,059 --> 01:01:53,400
with the original alt service header had

1488
01:01:53,400 --> 01:01:54,720
been around some of these issues that

1489
01:01:54,720 --> 01:01:57,119
then was referring to around

1490
01:01:57,119 --> 01:01:59,819
um like what hap um what happens if you

1491
01:01:59,819 --> 01:02:02,640
get a a single response back and you

1492
01:02:02,640 --> 01:02:04,140
hold on to it for too long and then

1493
01:02:04,140 --> 01:02:06,420
things change like which CDN was being

1494
01:02:06,420 --> 01:02:07,319
used

1495
01:02:07,319 --> 01:02:10,140
um changed or the trust of the the

1496
01:02:10,140 --> 01:02:11,339
person you originally got it from

1497
01:02:11,339 --> 01:02:13,200
changed um so there's a number of these

1498
01:02:13,200 --> 01:02:14,819
things we've learned from on the in the

1499
01:02:14,819 --> 01:02:16,200
alt service side which is why we're

1500
01:02:16,200 --> 01:02:17,640
looking at the alt service bit could

1501
01:02:17,640 --> 01:02:19,799
have also risk this directions and some

1502
01:02:19,799 --> 01:02:21,180
of those discussions might help inform

1503
01:02:21,180 --> 01:02:23,720
design here

1504
01:02:23,819 --> 01:02:26,700
agreed and I appreciate the pointer um

1505
01:02:26,700 --> 01:02:28,500
because that's something uh that I'm

1506
01:02:28,500 --> 01:02:29,760
currently involved in so we'll

1507
01:02:29,760 --> 01:02:31,980
definitely be discussing I I will point

1508
01:02:31,980 --> 01:02:34,619
out not and I promise not to grab a hole

1509
01:02:34,619 --> 01:02:37,020
in this but that's something where I'm

1510
01:02:37,020 --> 01:02:39,540
I the Upstream case makes perfect sense

1511
01:02:39,540 --> 01:02:41,520
and I hadn't considered that

1512
01:02:41,520 --> 01:02:43,980
um the transient attacker case is

1513
01:02:43,980 --> 01:02:45,420
interesting because once we're talking

1514
01:02:45,420 --> 01:02:47,760
about the ability to change a query

1515
01:02:47,760 --> 01:02:49,380
response I don't see that it matters

1516
01:02:49,380 --> 01:02:52,740
what you queried for name-wise if the

1517
01:02:52,740 --> 01:02:54,359
result is the same

1518
01:02:54,359 --> 01:02:55,740
um but it's certainly something that

1519
01:02:55,740 --> 01:02:58,380
obviously needs more discussion

1520
01:02:58,380 --> 01:03:02,000
great thank you Tommy

1521
01:03:02,099 --> 01:03:04,260
okay

1522
01:03:04,260 --> 01:03:05,940
just switch over here you want to come

1523
01:03:05,940 --> 01:03:08,420
up to the mic

1524
01:03:08,640 --> 01:03:13,140
screened should start aob I named it

1525
01:03:13,140 --> 01:03:17,280
what just happened where's Safari

1526
01:03:17,280 --> 01:03:20,520
hello Safari what have you done

1527
01:03:20,520 --> 01:03:24,799
okay it's like to be in there

1528
01:03:26,900 --> 01:03:29,460
so while we are sit while we are setting

1529
01:03:29,460 --> 01:03:32,339
the slides obviously the next draft I

1530
01:03:32,339 --> 01:03:33,599
think that the right one you are talking

1531
01:03:33,599 --> 01:03:36,599
about is not for adoption right in this

1532
01:03:36,599 --> 01:03:38,460
group simply for education and for

1533
01:03:38,460 --> 01:03:40,859
information yeah

1534
01:03:40,859 --> 01:03:43,799
okay you're up yeah that's right I mean

1535
01:03:43,799 --> 01:03:46,020
I mean this draft is is we wanted uh

1536
01:03:46,020 --> 01:03:47,640
more comments and feedback on this draft

1537
01:03:47,640 --> 01:03:49,319
and we need to find a working group for

1538
01:03:49,319 --> 01:03:50,880
this and if there is any interest in

1539
01:03:50,880 --> 01:03:53,579
implementing this in the first place uh

1540
01:03:53,579 --> 01:03:57,059
but this uh draft got we started writing

1541
01:03:57,059 --> 01:03:59,099
this proposal when we saw the comments

1542
01:03:59,099 --> 01:04:01,920
uh from Isaac review and we realized

1543
01:04:01,920 --> 01:04:04,680
that uh there are security issues that

1544
01:04:04,680 --> 01:04:06,480
need to be fixed right and we thought

1545
01:04:06,480 --> 01:04:08,040
we'll just highlight the problems and

1546
01:04:08,040 --> 01:04:09,660
some potential solutions that would

1547
01:04:09,660 --> 01:04:12,240
address those uh concerns that were

1548
01:04:12,240 --> 01:04:13,319
raised right

1549
01:04:13,319 --> 01:04:16,460
ah next slide please

1550
01:04:18,599 --> 01:04:21,119
yeah so the problem statement is quite

1551
01:04:21,119 --> 01:04:23,339
clear that one of the main reasons is

1552
01:04:23,339 --> 01:04:26,160
that Totten X is not widely deployed in

1553
01:04:26,160 --> 01:04:28,799
several networks evil twin is a very

1554
01:04:28,799 --> 01:04:31,500
prevalent attack that you see that an

1555
01:04:31,500 --> 01:04:34,260
attacker emulates the actual Network

1556
01:04:34,260 --> 01:04:36,839
that you're trying to connect to uh the

1557
01:04:36,839 --> 01:04:39,900
attacker uses the same SSID and the psk

1558
01:04:39,900 --> 01:04:41,700
is probably leaked to the attacker

1559
01:04:41,700 --> 01:04:44,400
because your device is compromised or

1560
01:04:44,400 --> 01:04:47,220
the psk is kept on a board wherever you

1561
01:04:47,220 --> 01:04:49,980
can see and pick it up right coffee

1562
01:04:49,980 --> 01:04:52,380
shops use psk which is put on a QR code

1563
01:04:52,380 --> 01:04:55,500
home networks use psks small office home

1564
01:04:55,500 --> 01:04:57,720
networks use psks all the time and we

1565
01:04:57,720 --> 01:04:59,339
have seen evil twin attacks happen in

1566
01:04:59,339 --> 01:05:02,400
those kind of networks and and how do

1567
01:05:02,400 --> 01:05:04,559
you address the scenario that user

1568
01:05:04,559 --> 01:05:07,319
believes that a user is trusting the

1569
01:05:07,319 --> 01:05:09,540
network and and the DNS resolver it's

1570
01:05:09,540 --> 01:05:11,220
providing and the DNS queries are

1571
01:05:11,220 --> 01:05:13,740
encrypted to it but you're actually

1572
01:05:13,740 --> 01:05:15,960
connecting to an attackers Network

1573
01:05:15,960 --> 01:05:18,799
next slide

1574
01:05:19,260 --> 01:05:24,599
next slide this yeah okay okay uh that's

1575
01:05:24,599 --> 01:05:25,799
the same problem if you're using

1576
01:05:25,799 --> 01:05:27,480
operationalistic wireless encryption

1577
01:05:27,480 --> 01:05:29,940
where there is no psk it's it uses

1578
01:05:29,940 --> 01:05:31,980
different element to basically uh

1579
01:05:31,980 --> 01:05:34,559
mutually uh establish a shared key and

1580
01:05:34,559 --> 01:05:36,660
then uh encrypt them

1581
01:05:36,660 --> 01:05:38,540
um

1582
01:05:38,540 --> 01:05:41,640
free handshake uh we saw similar

1583
01:05:41,640 --> 01:05:44,099
problems in uh where as part of the

1584
01:05:44,099 --> 01:05:45,599
supply chain attacks there is a

1585
01:05:45,599 --> 01:05:48,119
possibility that your sim card could be

1586
01:05:48,119 --> 01:05:49,740
compromised and the attacker could get

1587
01:05:49,740 --> 01:05:52,500
access to your preset key and that's one

1588
01:05:52,500 --> 01:05:55,380
of the reasons we see a fast forward

1589
01:05:55,380 --> 01:05:58,020
secrecy epic extension being discussed

1590
01:05:58,020 --> 01:06:01,020
in the Emu working group so with all

1591
01:06:01,020 --> 01:06:02,520
that we were wondering is there a

1592
01:06:02,520 --> 01:06:04,559
potential way we can address these uh

1593
01:06:04,559 --> 01:06:06,720
threats without going back to the Wi-Fi

1594
01:06:06,720 --> 01:06:10,879
Alliance right up next slide please

1595
01:06:12,059 --> 01:06:15,059
it takes a second yeah

1596
01:06:15,059 --> 01:06:17,819
yeah so since we are learning and

1597
01:06:17,819 --> 01:06:20,220
network advertised encrypted DNS server

1598
01:06:20,220 --> 01:06:21,839
we're wondering whether we could use

1599
01:06:21,839 --> 01:06:24,119
that to help identify whether it's an

1600
01:06:24,119 --> 01:06:26,520
evil twin or not so we figured out a way

1601
01:06:26,520 --> 01:06:28,740
where if you're using the traditional

1602
01:06:28,740 --> 01:06:32,039
WPA2 or wpa3 uh whether you want to rely

1603
01:06:32,039 --> 01:06:34,200
on the society names uh if you don't

1604
01:06:34,200 --> 01:06:36,299
rely then we figured out and Trust on

1605
01:06:36,299 --> 01:06:38,819
first use so that you can on the second

1606
01:06:38,819 --> 01:06:40,200
connection to the network you would

1607
01:06:40,200 --> 01:06:41,880
check if 13 a server identity has

1608
01:06:41,880 --> 01:06:43,799
changed if you're relying on the SSID

1609
01:06:43,799 --> 01:06:45,599
and names you don't have to rely on tofu

1610
01:06:45,599 --> 01:06:47,520
and then Ben had a comment that hey you

1611
01:06:47,520 --> 01:06:49,140
could use that technique as well in

1612
01:06:49,140 --> 01:06:52,260
networks which use epls and we updated

1613
01:06:52,260 --> 01:06:54,720
the draft to address that comment uh

1614
01:06:54,720 --> 01:06:57,259
next slide

1615
01:07:02,539 --> 01:07:05,579
so uh it's trust one first uses you

1616
01:07:05,579 --> 01:07:08,220
either use DNR or TDR to discover the

1617
01:07:08,220 --> 01:07:10,859
resolver then you create and fingerprint

1618
01:07:10,859 --> 01:07:12,359
for the network you basically use the

1619
01:07:12,359 --> 01:07:15,059
SSID uh hash of the pre-shared key

1620
01:07:15,059 --> 01:07:16,920
that's being used uh the discovery

1621
01:07:16,920 --> 01:07:19,559
method being used and uh the identity of

1622
01:07:19,559 --> 01:07:21,359
the resolver that's being discovered for

1623
01:07:21,359 --> 01:07:23,099
instance in this case if it's TNR it's

1624
01:07:23,099 --> 01:07:25,740
the fqdn if it is TDR it's the IP

1625
01:07:25,740 --> 01:07:27,119
address so you basically create a

1626
01:07:27,119 --> 01:07:29,039
fingerprint of the network using the

1627
01:07:29,039 --> 01:07:33,660
discovered encrypted resolver and next

1628
01:07:33,660 --> 01:07:35,760
slide please

1629
01:07:35,760 --> 01:07:38,640
so once you create this fingerprint in

1630
01:07:38,640 --> 01:07:40,140
the first connection to the network on

1631
01:07:40,140 --> 01:07:41,760
subsequent connections you check if the

1632
01:07:41,760 --> 01:07:43,619
DNS server identity matches or it

1633
01:07:43,619 --> 01:07:45,420
doesn't match if it doesn't match it

1634
01:07:45,420 --> 01:07:48,660
gives a hint that uh it's probably an

1635
01:07:48,660 --> 01:07:50,819
equal twin which is trying to look at

1636
01:07:50,819 --> 01:07:52,920
your TNS or even modify your DNS

1637
01:07:52,920 --> 01:07:55,920
responses

1638
01:07:58,020 --> 01:08:01,280
next slide yeah

1639
01:08:04,619 --> 01:08:07,260
yeah the other one was obviously to use

1640
01:08:07,260 --> 01:08:10,440
an SSID name which matches the the

1641
01:08:10,440 --> 01:08:12,420
subject order name within the DNS server

1642
01:08:12,420 --> 01:08:14,579
certificate it would probably work for

1643
01:08:14,579 --> 01:08:16,500
public welfare hotspots which have which

1644
01:08:16,500 --> 01:08:18,799
you don't have anything private to

1645
01:08:18,799 --> 01:08:21,000
change and they could probably have

1646
01:08:21,000 --> 01:08:22,620
something like an example that we listed

1647
01:08:22,620 --> 01:08:24,899
here but may not be a viable option for

1648
01:08:24,899 --> 01:08:26,339
home networks where we don't want to

1649
01:08:26,339 --> 01:08:28,439
change and typical home admin to go and

1650
01:08:28,439 --> 01:08:31,259
change the SSID name and maybe it starts

1651
01:08:31,259 --> 01:08:33,600
revealing some privacy Pi related

1652
01:08:33,600 --> 01:08:36,420
information in this in the SSID related

1653
01:08:36,420 --> 01:08:39,299
to probably the router who has given

1654
01:08:39,299 --> 01:08:42,299
this uh who is assigned this fqdn to the

1655
01:08:42,299 --> 01:08:44,880
home router or it could be the security

1656
01:08:44,880 --> 01:08:46,679
vendor who's managing this home router

1657
01:08:46,679 --> 01:08:48,600
who is given an fqd into the home router

1658
01:08:48,600 --> 01:08:50,339
so it may work it may not work in

1659
01:08:50,339 --> 01:08:55,580
certain deployments uh next slide please

1660
01:08:59,460 --> 01:09:02,219
yeah the alternative was like if there

1661
01:09:02,219 --> 01:09:04,560
are networks which which already do uh

1662
01:09:04,560 --> 01:09:07,920
epls then it's it's it it works

1663
01:09:07,920 --> 01:09:09,660
perfectly in those cases that the SSID

1664
01:09:09,660 --> 01:09:12,299
name has to match the the server

1665
01:09:12,299 --> 01:09:14,339
certificate subject alt name uh this

1666
01:09:14,339 --> 01:09:16,380
this would be pretty useful for networks

1667
01:09:16,380 --> 01:09:18,299
uh where uh endpoints are not being

1668
01:09:18,299 --> 01:09:21,660
managed by the MDM uh etls allows a mode

1669
01:09:21,660 --> 01:09:23,399
where client certificate authentication

1670
01:09:23,399 --> 01:09:25,080
is not mandatory for example for

1671
01:09:25,080 --> 01:09:27,479
emergency services where only server uh

1672
01:09:27,479 --> 01:09:29,339
site validation is required in those

1673
01:09:29,339 --> 01:09:32,160
cases uh the match would be quite useful

1674
01:09:32,160 --> 01:09:34,380
and uh it would also be useful during

1675
01:09:34,380 --> 01:09:36,238
the device registration process where

1676
01:09:36,238 --> 01:09:38,580
the device doesn't trust the network and

1677
01:09:38,580 --> 01:09:40,560
device is kept in a quarantine to get

1678
01:09:40,560 --> 01:09:42,839
its credentials to during that process

1679
01:09:42,839 --> 01:09:45,120
for the device to know that it's indeed

1680
01:09:45,120 --> 01:09:47,580
creating the configuration profile from

1681
01:09:47,580 --> 01:09:49,920
from the right Network that it is

1682
01:09:49,920 --> 01:09:52,699
supposed to attach to

1683
01:09:52,979 --> 01:09:56,480
next slide next slide yeah

1684
01:10:01,080 --> 01:10:02,520
yeah

1685
01:10:02,520 --> 01:10:05,640
does it solve all the threat vectors

1686
01:10:05,640 --> 01:10:08,280
yes it solves threat vectors to a great

1687
01:10:08,280 --> 01:10:11,040
extent for example uh an attacker could

1688
01:10:11,040 --> 01:10:13,500
still use the same DNS server as the

1689
01:10:13,500 --> 01:10:15,840
legitimate Network for instance if if

1690
01:10:15,840 --> 01:10:18,060
the legitimate network is using a public

1691
01:10:18,060 --> 01:10:19,920
resolver it would still advertising that

1692
01:10:19,920 --> 01:10:22,500
I'm gonna use the same network but it

1693
01:10:22,500 --> 01:10:24,960
definitely reduces the capability of the

1694
01:10:24,960 --> 01:10:26,760
attacker it would not have access to the

1695
01:10:26,760 --> 01:10:29,760
DNS messages and in near future when

1696
01:10:29,760 --> 01:10:32,340
clients start using tls1.3 and encrypted

1697
01:10:32,340 --> 01:10:34,679
client hello uh the capability of the

1698
01:10:34,679 --> 01:10:36,659
attacker to see what domains the

1699
01:10:36,659 --> 01:10:39,480
endpoint is visiting will be uh reduced

1700
01:10:39,480 --> 01:10:42,120
dramatically and uh the attacker will

1701
01:10:42,120 --> 01:10:44,159
not be able to for instance remove the

1702
01:10:44,159 --> 01:10:46,199
ech keys from the DNS records to cause

1703
01:10:46,199 --> 01:10:49,020
the client to downgrade to a non-ech

1704
01:10:49,020 --> 01:10:51,600
mode so these are some of the advantages

1705
01:10:51,600 --> 01:10:53,580
that we see and we would like to have

1706
01:10:53,580 --> 01:10:56,340
feedback from the working group and if

1707
01:10:56,340 --> 01:10:57,780
there is any interest to implement it

1708
01:10:57,780 --> 01:11:00,120
and a better ways of solving that so we

1709
01:11:00,120 --> 01:11:03,300
would like to hear from people on how we

1710
01:11:03,300 --> 01:11:05,780
take this forward

1711
01:11:13,020 --> 01:11:16,400
he was an almost one workstation

1712
01:11:17,219 --> 01:11:19,760
so as soon as we're done

1713
01:11:19,760 --> 01:11:23,100
which well we're done now so and I saw

1714
01:11:23,100 --> 01:11:24,540
Ted I don't know whether you dropped out

1715
01:11:24,540 --> 01:11:25,860
of the queue again because of the same

1716
01:11:25,860 --> 01:11:30,599
laptop lid closing issue or okay

1717
01:11:31,440 --> 01:11:33,540
um and I saw Ben popped up but right now

1718
01:11:33,540 --> 01:11:36,860
David is the active one so

1719
01:11:37,260 --> 01:11:40,860
I mean he was open hi yeah wow sorry I

1720
01:11:40,860 --> 01:11:42,719
really have to eat the mic uh David

1721
01:11:42,719 --> 01:11:44,280
schenazi internet architecture

1722
01:11:44,280 --> 01:11:45,840
Enthusiast

1723
01:11:45,840 --> 01:11:49,100
um this feels like

1724
01:11:49,100 --> 01:11:53,100
a non-trivial solution like this feels

1725
01:11:53,100 --> 01:11:55,980
like it has a quite a bit of complexity

1726
01:11:55,980 --> 01:11:59,159
to solve a very small part of the

1727
01:11:59,159 --> 01:12:00,480
problem space

1728
01:12:00,480 --> 01:12:03,600
uh like I totally agree with you on the

1729
01:12:03,600 --> 01:12:05,760
evil twin attack and in some cases

1730
01:12:05,760 --> 01:12:08,100
that's a problem in many cases it's not

1731
01:12:08,100 --> 01:12:10,140
like if I connect to a coffee shop I

1732
01:12:10,140 --> 01:12:13,260
don't care I have T I have https that

1733
01:12:13,260 --> 01:12:14,520
takes care of everything that I

1734
01:12:14,520 --> 01:12:17,760
personally do on a on that and then I

1735
01:12:17,760 --> 01:12:20,400
have my mask thing for anything else

1736
01:12:20,400 --> 01:12:22,980
um so what I would suggest is if you're

1737
01:12:22,980 --> 01:12:25,380
worried about this problem I would solve

1738
01:12:25,380 --> 01:12:27,719
it at a more holistic level so perhaps

1739
01:12:27,719 --> 01:12:31,380
at the 802-11 layer or or something

1740
01:12:31,380 --> 01:12:34,860
different but this feels like all of

1741
01:12:34,860 --> 01:12:37,199
this tofu infrastructure seems smart

1742
01:12:37,199 --> 01:12:40,320
seems good but once we have all of that

1743
01:12:40,320 --> 01:12:42,000
and we're saving all that state and

1744
01:12:42,000 --> 01:12:43,800
we're checking certificates and we've

1745
01:12:43,800 --> 01:12:45,960
done all this just protect all the

1746
01:12:45,960 --> 01:12:47,699
traffic don't do this just for DNS it's

1747
01:12:47,699 --> 01:12:49,080
not worth the effort

1748
01:12:49,080 --> 01:12:51,840
sure and the reason for doing DNS was

1749
01:12:51,840 --> 01:12:53,699
that because endpoints would discover

1750
01:12:53,699 --> 01:12:55,260
the encrypted resolver they are

1751
01:12:55,260 --> 01:12:56,580
attaching to the network if they are

1752
01:12:56,580 --> 01:12:58,320
using a pre-configured resolver this is

1753
01:12:58,320 --> 01:13:00,480
not ensure at all right this is when

1754
01:13:00,480 --> 01:13:02,460
you're using TNR DDR you don't have a

1755
01:13:02,460 --> 01:13:04,199
pre-configured resolver and you're using

1756
01:13:04,199 --> 01:13:06,719
the local resolver to discover these uh

1757
01:13:06,719 --> 01:13:08,820
encrypted resolvers you want to make

1758
01:13:08,820 --> 01:13:11,100
sure the comment that we got was

1759
01:13:11,100 --> 01:13:12,659
basically it gives a false sense of

1760
01:13:12,659 --> 01:13:14,640
security that you are assuming you're

1761
01:13:14,640 --> 01:13:16,860
connecting to my home network but you

1762
01:13:16,860 --> 01:13:18,600
may be connecting to an Eagle twin which

1763
01:13:18,600 --> 01:13:20,699
is like sitting in a van watching my all

1764
01:13:20,699 --> 01:13:23,280
my DNS traffic right so for that right

1765
01:13:23,280 --> 01:13:25,620
we are looking for ways that are

1766
01:13:25,620 --> 01:13:28,440
practical enough right and and

1767
01:13:28,440 --> 01:13:30,239
base that could be implemented rather

1768
01:13:30,239 --> 01:13:31,679
than going to eight or two level I've

1769
01:13:31,679 --> 01:13:33,179
seen those discussions happening in the

1770
01:13:33,179 --> 01:13:35,699
past and and and and then they're not

1771
01:13:35,699 --> 01:13:37,080
changing the way they are doing it and

1772
01:13:37,080 --> 01:13:38,880
then it's becoming quite difficult right

1773
01:13:38,880 --> 01:13:41,040
I mean whatever the solution could be if

1774
01:13:41,040 --> 01:13:42,719
it's practical enough and Deployable

1775
01:13:42,719 --> 01:13:45,179
it's also a problem for the

1776
01:13:45,179 --> 01:13:46,860
implementations which are using DNR

1777
01:13:46,860 --> 01:13:48,380
indeed here

1778
01:13:48,380 --> 01:13:50,460
absolutely and I'll just say one quick

1779
01:13:50,460 --> 01:13:53,760
thing before I go sit down is I think

1780
01:13:53,760 --> 01:13:55,620
you're gonna run into the same problem

1781
01:13:55,620 --> 01:13:59,159
that is the reason that IEEE hasn't

1782
01:13:59,159 --> 01:14:01,739
fixed this for Wi-Fi because you know

1783
01:14:01,739 --> 01:14:04,080
they're no less smart than we are is

1784
01:14:04,080 --> 01:14:06,480
that in the like this what you're saying

1785
01:14:06,480 --> 01:14:08,100
is not for Enterprise networks the

1786
01:14:08,100 --> 01:14:10,380
Avenue 21x this is for the mom and pop

1787
01:14:10,380 --> 01:14:12,120
coffee shop where in practice all they

1788
01:14:12,120 --> 01:14:13,560
did is they bought the router and they

1789
01:14:13,560 --> 01:14:15,420
got the the neighbor's kid to configure

1790
01:14:15,420 --> 01:14:17,940
our name and a password

1791
01:14:17,940 --> 01:14:19,739
if that router breaks because they

1792
01:14:19,739 --> 01:14:21,719
bought one for from Target for 20 bucks

1793
01:14:21,719 --> 01:14:23,280
they're gonna go tell them can you put

1794
01:14:23,280 --> 01:14:25,560
the same thing on the next router

1795
01:14:25,560 --> 01:14:27,600
and then you're all sorts of screwed

1796
01:14:27,600 --> 01:14:29,580
because your users can't connect because

1797
01:14:29,580 --> 01:14:31,739
you have some keys that were in the

1798
01:14:31,739 --> 01:14:33,960
other one that otherwise they would have

1799
01:14:33,960 --> 01:14:37,860
done this tofu at that layer so this

1800
01:14:37,860 --> 01:14:40,320
feels like a more complex problem yes

1801
01:14:40,320 --> 01:14:42,960
with a much bigger solution

1802
01:14:42,960 --> 01:14:45,420
thank you thank you David

1803
01:14:45,420 --> 01:14:48,199
um Ben please

1804
01:14:50,520 --> 01:14:51,960
hi

1805
01:14:51,960 --> 01:14:54,060
so uh

1806
01:14:54,060 --> 01:14:56,820
I I agree that it's not not going to be

1807
01:14:56,820 --> 01:14:58,800
so easy to to deploy something like this

1808
01:14:58,800 --> 01:15:00,179
but I still think it's fun I think it's

1809
01:15:00,179 --> 01:15:01,679
worth a try

1810
01:15:01,679 --> 01:15:04,199
um you know it doesn't it kind of

1811
01:15:04,199 --> 01:15:06,179
doesn't cost us anything I think that as

1812
01:15:06,179 --> 01:15:08,580
an experimental draft

1813
01:15:08,580 --> 01:15:11,540
um you know it has but it has potential

1814
01:15:11,540 --> 01:15:14,100
however uh

1815
01:15:14,100 --> 01:15:17,780
I I think that the only

1816
01:15:17,780 --> 01:15:19,980
authentication layer that makes sense

1817
01:15:19,980 --> 01:15:23,280
here is eptls and I don't think that

1818
01:15:23,280 --> 01:15:26,520
that connecting this to the name of the

1819
01:15:26,520 --> 01:15:30,540
local resolver makes uh makes any sense

1820
01:15:30,540 --> 01:15:32,820
here it's essentially conflating the

1821
01:15:32,820 --> 01:15:36,600
identity of network with the identity of

1822
01:15:36,600 --> 01:15:41,580
some DNS servers that the network is is

1823
01:15:41,580 --> 01:15:44,880
mentioning to people who are on the my

1824
01:15:44,880 --> 01:15:48,179
local network uh announces Google's DNS

1825
01:15:48,179 --> 01:15:51,420
servers on my home network like does

1826
01:15:51,420 --> 01:15:53,760
that mean that I need to name my

1827
01:15:53,760 --> 01:15:56,480
wireless network uh

1828
01:15:56,480 --> 01:15:58,739
dns.google because that's going to be a

1829
01:15:58,739 --> 01:16:00,360
very strange name for my home wireless

1830
01:16:00,360 --> 01:16:04,020
network but if I could just say that the

1831
01:16:04,020 --> 01:16:05,640
name of my wireless network isn't is a

1832
01:16:05,640 --> 01:16:07,440
domain that I control and prove

1833
01:16:07,440 --> 01:16:10,380
ownership over of that over eptls then I

1834
01:16:10,380 --> 01:16:15,120
can do DNR over DHCP with dhcpguard on

1835
01:16:15,120 --> 01:16:17,400
the local network and actually have a

1836
01:16:17,400 --> 01:16:19,500
fully secured secured chain where where

1837
01:16:19,500 --> 01:16:22,199
each link in the chain is authenticated

1838
01:16:22,199 --> 01:16:24,060
or secured by the appropriate mechanism

1839
01:16:24,060 --> 01:16:27,659
so I think this should just link the

1840
01:16:27,659 --> 01:16:32,280
SSID to the the network Association

1841
01:16:32,280 --> 01:16:35,219
and from then on local uh you know

1842
01:16:35,219 --> 01:16:37,140
relevant mechanisms can apply which

1843
01:16:37,140 --> 01:16:40,440
means it's not an add problem uh it's

1844
01:16:40,440 --> 01:16:43,080
not that far from dance actually if you

1845
01:16:43,080 --> 01:16:45,900
are looking for for a home for it

1846
01:16:45,900 --> 01:16:49,380
okay thanks Ben yeah

1847
01:16:49,380 --> 01:16:52,860
okay and that was it and I believe we're

1848
01:16:52,860 --> 01:16:55,080
at Glenn's wrap-up now oh yeah I will

1849
01:16:55,080 --> 01:16:56,760
say that we I mean we've talked about

1850
01:16:56,760 --> 01:16:58,380
this particular draft the question with

1851
01:16:58,380 --> 01:17:00,300
Ben of where does it fit we talked with

1852
01:17:00,300 --> 01:17:02,460
Eric and and tail myself and we don't

1853
01:17:02,460 --> 01:17:04,140
think it fits an add

1854
01:17:04,140 --> 01:17:05,760
um but

1855
01:17:05,760 --> 01:17:08,760
yeah

1856
01:17:14,340 --> 01:17:16,080
um well that's the wrap up essentially I

1857
01:17:16,080 --> 01:17:18,360
mean we we've done our drafts we've done

1858
01:17:18,360 --> 01:17:20,460
our thing we have things in the process

1859
01:17:20,460 --> 01:17:22,800
for publishing I think we're in good

1860
01:17:22,800 --> 01:17:24,719
shape and I think we've been successful

1861
01:17:24,719 --> 01:17:27,120
at itf115 to have a very productive add

1862
01:17:27,120 --> 01:17:28,920
session so thank you very much for

1863
01:17:28,920 --> 01:17:31,199
coming in and the people at home thank

1864
01:17:31,199 --> 01:17:32,520
you for joining

1865
01:17:32,520 --> 01:17:33,900
um the one thing I will say is if you

1866
01:17:33,900 --> 01:17:36,540
are in the room and you have not gone to

1867
01:17:36,540 --> 01:17:39,000
the local tool to sort of say I'm here

1868
01:17:39,000 --> 01:17:41,159
that's how we do the blue sheets now so

1869
01:17:41,159 --> 01:17:42,600
go in there so that you get your name

1870
01:17:42,600 --> 01:17:44,100
recorded in the blue sheets on the local

1871
01:17:44,100 --> 01:17:47,280
tool that's off the agenda on the ITF

1872
01:17:47,280 --> 01:17:49,800
site or you can do that

1873
01:17:49,800 --> 01:17:51,719
and it does matter for a couple of

1874
01:17:51,719 --> 01:17:52,920
different reasons

1875
01:17:52,920 --> 01:17:54,960
um notably for logistics for the future

1876
01:17:54,960 --> 01:17:57,600
but also for historical

1877
01:17:57,600 --> 01:17:58,860
um sometimes they need to be back

1878
01:17:58,860 --> 01:18:00,000
referenced about who was actually

1879
01:18:00,000 --> 01:18:01,980
present and we also got an accurate

1880
01:18:01,980 --> 01:18:04,580
account for next time

1881
01:18:04,580 --> 01:18:07,320
and thank you again to Limon for being

1882
01:18:07,320 --> 01:18:09,980
our scribe

1883
01:18:10,920 --> 01:18:13,760
and we're out

1884
01:18:19,440 --> 01:18:21,540
time

1885
01:18:21,540 --> 01:18:25,199
okay okay

1886
01:18:28,380 --> 01:18:31,159
I don't know

1887
01:18:32,360 --> 01:18:35,719
if I don't know

1888
01:18:36,440 --> 01:18:39,239
yeah I gotta fix

1889
01:18:39,239 --> 01:18:42,239
Ed

1890
01:18:42,480 --> 01:18:46,400
I broke a chair oh God

1891
01:18:49,199 --> 01:18:52,260
it's clearly meant to be a fiddle toy

1892
01:18:52,260 --> 01:18:55,400
it's the uh

1893
01:18:55,860 --> 01:18:58,339
all right

1894
01:19:07,699 --> 01:19:10,940
surprises everyone

1895
01:19:11,520 --> 01:19:13,790
again

1896
01:19:13,790 --> 01:19:16,890
[Music]

1897
01:19:20,280 --> 01:19:27,499
[Music]

1898
01:19:27,980 --> 01:19:30,980
thank you

1899
01:20:12,840 --> 01:20:15,179
I

1900
01:20:15,179 --> 01:20:17,179
um

1901
01:20:37,020 --> 01:20:40,020
foreign

