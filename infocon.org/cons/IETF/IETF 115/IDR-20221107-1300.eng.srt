1
00:00:04,860 --> 00:00:06,600
speak remotely please test your

2
00:00:06,600 --> 00:00:08,959
microphone

3
00:00:13,920 --> 00:00:16,639
he's online

4
00:00:39,540 --> 00:00:42,600
okay let's do it yeah okay he's stuck

5
00:00:42,600 --> 00:00:44,640
here and then all the other slides are

6
00:00:44,640 --> 00:00:46,860
uploaded here and they're in sequence

7
00:00:46,860 --> 00:00:48,780
number uh

8
00:00:48,780 --> 00:00:50,520
if you saw the email from Eugene he may

9
00:00:50,520 --> 00:00:52,200
have to step out for a little bit so if

10
00:00:52,200 --> 00:00:53,940
you have to step out we'll just get him

11
00:00:53,940 --> 00:00:56,899
and come back to him

12
00:01:04,739 --> 00:01:06,920
foreign

13
00:01:38,900 --> 00:01:42,860
Sasha were you trying to share something

14
00:01:55,939 --> 00:01:58,439
hey beside we're all here could you

15
00:01:58,439 --> 00:02:01,579
verify that you're able to hear us

16
00:02:04,560 --> 00:02:07,159
thank you

17
00:02:31,819 --> 00:02:34,379
could somebody else online verify that

18
00:02:34,379 --> 00:02:38,000
you're able to hear the microphones

19
00:02:42,660 --> 00:02:46,040
we are able to hear you

20
00:02:46,440 --> 00:02:49,760
okay thank you Katelyn

21
00:02:52,760 --> 00:02:56,120
okay are we ready

22
00:02:56,120 --> 00:02:59,239
to go

23
00:03:16,280 --> 00:03:20,480
I'm just going to try that person

24
00:03:26,879 --> 00:03:28,739
good afternoon

25
00:03:28,739 --> 00:03:30,959
look I'm gonna do the chair slides we'll

26
00:03:30,959 --> 00:03:32,640
go quickly through it

27
00:03:32,640 --> 00:03:35,179
go ahead

28
00:03:38,959 --> 00:03:41,280
unless I have

29
00:03:41,280 --> 00:03:43,459
foreign

30
00:03:43,560 --> 00:03:46,140
okay there's a note well if you've not

31
00:03:46,140 --> 00:03:48,239
read your note well please take a moment

32
00:03:48,239 --> 00:03:51,420
to read your note well and determine uh

33
00:03:51,420 --> 00:03:53,099
that once you've been here you're green

34
00:03:53,099 --> 00:03:57,780
to be follow ITF file policy processes

35
00:03:57,780 --> 00:04:02,159
and policies we recommend masks

36
00:04:02,159 --> 00:04:05,519
uh unless you're speaking at the mic

37
00:04:05,519 --> 00:04:07,819
next slide

38
00:04:07,819 --> 00:04:11,099
this is meeting information click she's

39
00:04:11,099 --> 00:04:14,519
done a great job G wave to the folks no

40
00:04:14,519 --> 00:04:17,399
the it's setting all of this up along

41
00:04:17,399 --> 00:04:19,139
with Jeff and care

42
00:04:19,139 --> 00:04:22,680
uh the document status is on the wiki we

43
00:04:22,680 --> 00:04:26,340
will be moving Wiki but apparently it's

44
00:04:26,340 --> 00:04:29,160
a lot of work as I'm working through

45
00:04:29,160 --> 00:04:32,580
moving it to the community Wiki if you

46
00:04:32,580 --> 00:04:34,440
want to know about the move to the

47
00:04:34,440 --> 00:04:38,699
community Wiki come see me next slide

48
00:04:38,699 --> 00:04:43,740
look we had an interim we had car uh

49
00:04:43,740 --> 00:04:47,340
that should have been uh the color

50
00:04:47,340 --> 00:04:50,340
domain we had uh

51
00:04:50,340 --> 00:04:54,000
status report on current CT Jeff gave

52
00:04:54,000 --> 00:04:56,780
his discussion on the interoperability

53
00:04:56,780 --> 00:05:00,360
that has been adopted we had mixed top

54
00:05:00,360 --> 00:05:03,180
discussions the best chairs asked us

55
00:05:03,180 --> 00:05:06,000
about two years ago to try to look at

56
00:05:06,000 --> 00:05:08,940
next top and we're finally working down

57
00:05:08,940 --> 00:05:11,460
our pathway far enough to get to it next

58
00:05:11,460 --> 00:05:12,419
step

59
00:05:12,419 --> 00:05:14,940
by the way I'm assuming you all can read

60
00:05:14,940 --> 00:05:17,520
faster than I can talk so if you want me

61
00:05:17,520 --> 00:05:20,100
to slow down and ask answer something I

62
00:05:20,100 --> 00:05:23,400
will be glad to next

63
00:05:23,400 --> 00:05:25,979
uh this is our current status we've

64
00:05:25,979 --> 00:05:30,860
adopted uh draft ITF ID or TS flow spec

65
00:05:30,860 --> 00:05:34,620
srv6 policy we'll probably go right into

66
00:05:34,620 --> 00:05:37,259
working group last call as an

67
00:05:37,259 --> 00:05:41,220
informational uh We've adopted uh draft

68
00:05:41,220 --> 00:05:45,300
ITF bgp entropy label kudos to the

69
00:05:45,300 --> 00:05:48,380
authors for a really good

70
00:05:48,380 --> 00:05:51,060
ITF collaboration we've adopted

71
00:05:51,060 --> 00:05:54,000
spaghetti deprecate but we then found

72
00:05:54,000 --> 00:05:57,960
out uh thanks to Bruno that there was

73
00:05:57,960 --> 00:06:01,800
um some of that information in an RFC so

74
00:06:01,800 --> 00:06:03,300
we're probably going to abandon that

75
00:06:03,300 --> 00:06:05,759
thank you to those who are helping us

76
00:06:05,759 --> 00:06:08,220
with that we need to chat after the

77
00:06:08,220 --> 00:06:09,199
meeting

78
00:06:09,199 --> 00:06:12,600
uh what happens within adopted draft

79
00:06:12,600 --> 00:06:15,900
we're probably going to move to uh

80
00:06:15,900 --> 00:06:17,820
working group less callers who knows

81
00:06:17,820 --> 00:06:20,280
you're ready with two implementations

82
00:06:20,280 --> 00:06:22,860
uh we adopted two things since which is

83
00:06:22,860 --> 00:06:26,039
Haas uh the interoperability draft

84
00:06:26,039 --> 00:06:29,160
for car CT which is Draft House IDR

85
00:06:29,160 --> 00:06:30,240
diffract

86
00:06:30,240 --> 00:06:33,780
and we've tentatively adopted draft

87
00:06:33,780 --> 00:06:36,360
Dunbar but there's a canned off on the

88
00:06:36,360 --> 00:06:39,180
same topic so that's sort of in the

89
00:06:39,180 --> 00:06:41,880
whole position and we've not addressed

90
00:06:41,880 --> 00:06:46,199
Daft Wang IDR VPN prefix you can ask me

91
00:06:46,199 --> 00:06:48,300
questions in the back about all of this

92
00:06:48,300 --> 00:06:50,639
if the mail list has not been sufficient

93
00:06:50,639 --> 00:06:53,220
we're still in the adoption process for

94
00:06:53,220 --> 00:06:55,680
draft dog this is a little bit more than

95
00:06:55,680 --> 00:06:57,539
our current draft status but you can

96
00:06:57,539 --> 00:06:59,880
find all sorts of details on the wiki

97
00:06:59,880 --> 00:07:02,880
next slide

98
00:07:02,880 --> 00:07:06,060
our major work items I'm giving you a

99
00:07:06,060 --> 00:07:08,160
status because we have a little latitude

100
00:07:08,160 --> 00:07:09,419
this time

101
00:07:09,419 --> 00:07:10,740
we

102
00:07:10,740 --> 00:07:12,720
the um

103
00:07:12,720 --> 00:07:15,960
DC drafts for BGR configuration in case

104
00:07:15,960 --> 00:07:19,800
you missed the message we sent uh those

105
00:07:19,800 --> 00:07:24,419
to drop because we didn't get enough uh

106
00:07:24,419 --> 00:07:26,819
uh interest in the working group we

107
00:07:26,819 --> 00:07:30,300
encourage the authors to go to ISE we

108
00:07:30,300 --> 00:07:32,580
need any feedback if we should pick up

109
00:07:32,580 --> 00:07:36,240
the non-data center uh considerations if

110
00:07:36,240 --> 00:07:38,340
we don't hear feedback we'll go on to

111
00:07:38,340 --> 00:07:42,199
other major work float bgp flow spec

112
00:07:42,199 --> 00:07:46,380
I really need and again this is the

113
00:07:46,380 --> 00:07:49,620
uh call from the chairs I really need to

114
00:07:49,620 --> 00:07:52,919
talk to the flow spec V1 path redirect

115
00:07:52,919 --> 00:07:55,800
and interface set authors as I haven't

116
00:07:55,800 --> 00:07:58,560
heard from you and we either need to go

117
00:07:58,560 --> 00:08:01,560
on or drop those and most of the drafts

118
00:08:01,560 --> 00:08:04,740
for flow spec as we see coming up in the

119
00:08:04,740 --> 00:08:07,199
working group should go to flow spec V2

120
00:08:07,199 --> 00:08:09,360
we are starting to get implementations

121
00:08:09,360 --> 00:08:13,740
thanks to Gunter for some uh error

122
00:08:13,740 --> 00:08:14,880
reports

123
00:08:14,880 --> 00:08:21,360
color CT we're going to look at draft

124
00:08:21,360 --> 00:08:24,240
Wing ID or CPR and I have a little

125
00:08:24,240 --> 00:08:27,360
pre-hint that they're going to be asking

126
00:08:27,360 --> 00:08:30,060
for adoption so we'll look at that next

127
00:08:30,060 --> 00:08:32,779
top is our next topic we would

128
00:08:32,779 --> 00:08:36,419
appreciate any comments thoughts and

129
00:08:36,419 --> 00:08:38,640
other things another thing I need

130
00:08:38,640 --> 00:08:40,799
feedback for and again catch me in the

131
00:08:40,799 --> 00:08:43,979
hall or at the back I'm about ready to

132
00:08:43,979 --> 00:08:46,580
engage in the cleanup drafts that are

133
00:08:46,580 --> 00:08:49,399
IDR drafts that are older than 10 years

134
00:08:49,399 --> 00:08:52,860
just to sort of clean out our back too I

135
00:08:52,860 --> 00:08:54,600
think that's it

136
00:08:54,600 --> 00:08:55,200
um

137
00:08:55,200 --> 00:08:56,640
Jeff

138
00:08:56,640 --> 00:09:01,140
this is our agenda uh Jeff will will

139
00:09:01,140 --> 00:09:03,660
start with the next presentation

140
00:09:03,660 --> 00:09:06,260
thank you

141
00:09:17,279 --> 00:09:19,800
hello

142
00:09:19,800 --> 00:09:22,080
uh good day everyone

143
00:09:22,080 --> 00:09:24,140
um

144
00:09:24,140 --> 00:09:27,360
wanted to present an update to this

145
00:09:27,360 --> 00:09:29,519
working group draft

146
00:09:29,519 --> 00:09:32,160
uh it's one of the oldest stuff not yet

147
00:09:32,160 --> 00:09:34,740
10 years as you mentioned but uh running

148
00:09:34,740 --> 00:09:36,779
close to it at eight years

149
00:09:36,779 --> 00:09:40,320
uh next slide please

150
00:09:40,320 --> 00:09:45,260
uh so this is a bgpls draft and uh it uh

151
00:09:45,260 --> 00:09:49,980
introduces change uh extensions for uh

152
00:09:49,980 --> 00:09:52,580
advertisement of tea policy

153
00:09:52,580 --> 00:09:56,459
policies so these could be rsvpt tunnels

154
00:09:56,459 --> 00:09:59,519
segment routing policies or mprs cross

155
00:09:59,519 --> 00:10:02,160
connects uh in that sense this is

156
00:10:02,160 --> 00:10:04,019
different from uh sourcing information

157
00:10:04,019 --> 00:10:08,100
from igp into bgpls which was the you

158
00:10:08,100 --> 00:10:10,200
know in the base pack

159
00:10:10,200 --> 00:10:14,339
uh it advertises the T policies as well

160
00:10:14,339 --> 00:10:17,040
as their status and uh some bit more

161
00:10:17,040 --> 00:10:19,140
information about them

162
00:10:19,140 --> 00:10:22,339
uh next slide

163
00:10:22,380 --> 00:10:25,740
uh so uh a quick high level status

164
00:10:25,740 --> 00:10:28,800
update uh while this document has been

165
00:10:28,800 --> 00:10:31,860
in idea working group uh the base uh Sr

166
00:10:31,860 --> 00:10:34,920
policy architecture has was published as

167
00:10:34,920 --> 00:10:38,300
RFC 9256 uh

168
00:10:38,300 --> 00:10:41,760
The Sibling draft we could call it that

169
00:10:41,760 --> 00:10:45,320
way the bgpsr policy is has been sent to

170
00:10:45,320 --> 00:10:47,959
uh ISD

171
00:10:47,959 --> 00:10:52,079
for publication uh that draft defines

172
00:10:52,079 --> 00:10:56,339
the controller to the router uh uh you

173
00:10:56,339 --> 00:10:59,339
know provisioning of Sr policies while

174
00:10:59,339 --> 00:11:01,800
this draft does the reporting in the

175
00:11:01,800 --> 00:11:03,620
other direction

176
00:11:03,620 --> 00:11:06,779
uh over the past few years the draft has

177
00:11:06,779 --> 00:11:10,380
been getting updates uh most of them or

178
00:11:10,380 --> 00:11:12,060
almost all of them are related to Sr

179
00:11:12,060 --> 00:11:14,459
policy advertisement and this is based

180
00:11:14,459 --> 00:11:17,100
on implementations which have been

181
00:11:17,100 --> 00:11:18,480
ongoing

182
00:11:18,480 --> 00:11:21,899
uh next slide please

183
00:11:21,899 --> 00:11:26,880
uh so since the last ITF we had a bunch

184
00:11:26,880 --> 00:11:30,720
of uh updates uh uh which were posted I

185
00:11:30,720 --> 00:11:32,519
I believe around August

186
00:11:32,519 --> 00:11:35,160
uh and these were all based on you know

187
00:11:35,160 --> 00:11:37,440
implementation feedback so the good part

188
00:11:37,440 --> 00:11:39,720
is there are implementations uh already

189
00:11:39,720 --> 00:11:42,660
done or ongoing for this draft

190
00:11:42,660 --> 00:11:46,680
one of the key things was uh that we use

191
00:11:46,680 --> 00:11:50,100
separate nlri types for each type of

192
00:11:50,100 --> 00:11:53,760
policy so a separate NRI for rsvpt

193
00:11:53,760 --> 00:11:57,240
tunnel for Sr policy and you know so on

194
00:11:57,240 --> 00:11:59,640
any other things which we may introduce

195
00:11:59,640 --> 00:12:01,079
in the future

196
00:12:01,079 --> 00:12:03,720
uh the draft had some reference to IP

197
00:12:03,720 --> 00:12:07,079
tunnels but uh it did not really cover

198
00:12:07,079 --> 00:12:09,180
that so this was just in the

199
00:12:09,180 --> 00:12:11,220
introduction so we have removed that

200
00:12:11,220 --> 00:12:13,320
and then uh you know there are various

201
00:12:13,320 --> 00:12:16,079
clarification and updates for how to use

202
00:12:16,079 --> 00:12:19,380
the descriptor and uh some bits and

203
00:12:19,380 --> 00:12:22,860
bytes there I'm not going to go over

204
00:12:22,860 --> 00:12:26,459
these uh in more detailed

205
00:12:26,459 --> 00:12:29,779
uh next slide

206
00:12:32,000 --> 00:12:35,940
uh so where is where are we at uh so we

207
00:12:35,940 --> 00:12:37,440
are still getting some feedback from

208
00:12:37,440 --> 00:12:39,600
implementation and more closer reviews

209
00:12:39,600 --> 00:12:41,760
are happening so that's good uh thank

210
00:12:41,760 --> 00:12:42,680
you

211
00:12:42,680 --> 00:12:46,139
uh we have some updates uh from in the

212
00:12:46,139 --> 00:12:48,480
Ayana section uh based on some comments

213
00:12:48,480 --> 00:12:52,320
and uh some more uh expecting uh to get

214
00:12:52,320 --> 00:12:55,500
during this week so right after ITF we

215
00:12:55,500 --> 00:12:58,860
can expect uh perhaps one more update

216
00:12:58,860 --> 00:13:01,260
uh what I would like to call up call out

217
00:13:01,260 --> 00:13:03,839
for the working group is that uh based

218
00:13:03,839 --> 00:13:06,120
on whatever we have heard so far uh as

219
00:13:06,120 --> 00:13:10,200
authors uh everything is related to Sr

220
00:13:10,200 --> 00:13:12,540
policy advertisement and that gives us

221
00:13:12,540 --> 00:13:15,420
the impression that really the SR policy

222
00:13:15,420 --> 00:13:18,000
part uh is the only thing that is being

223
00:13:18,000 --> 00:13:21,720
implemented so we wanted to get inputs

224
00:13:21,720 --> 00:13:24,300
or feedback if anybody has implemented

225
00:13:24,300 --> 00:13:29,279
uh the either the rsppt or uh the local

226
00:13:29,279 --> 00:13:31,800
static cross connect types

227
00:13:31,800 --> 00:13:34,019
because we do need to have you know

228
00:13:34,019 --> 00:13:37,320
implementations to progress this work

229
00:13:37,320 --> 00:13:39,899
uh next slide and I believe this is the

230
00:13:39,899 --> 00:13:41,220
last one

231
00:13:41,220 --> 00:13:44,700
so uh this is a proposal from the

232
00:13:44,700 --> 00:13:46,740
authors and uh to the working group I

233
00:13:46,740 --> 00:13:48,959
would also send it out over the email

234
00:13:48,959 --> 00:13:53,579
but uh given that we have uh some at

235
00:13:53,579 --> 00:13:56,639
least a few uh implementations for the

236
00:13:56,639 --> 00:13:59,220
SR policy we could look at perhaps

237
00:13:59,220 --> 00:14:01,139
splitting the draft a working group

238
00:14:01,139 --> 00:14:04,800
draft into two parts so that uh one of

239
00:14:04,800 --> 00:14:07,680
them may progress to working group last

240
00:14:07,680 --> 00:14:09,959
call and publication

241
00:14:09,959 --> 00:14:13,440
so any inputs or feedback would be very

242
00:14:13,440 --> 00:14:16,040
much appreciated

243
00:14:16,800 --> 00:14:20,180
any questions for ketan

244
00:14:26,360 --> 00:14:28,560
we have no questions in the room and

245
00:14:28,560 --> 00:14:31,139
nobody in the queue thank you Katelyn uh

246
00:14:31,139 --> 00:14:33,600
yeah so I believe it should be possible

247
00:14:33,600 --> 00:14:35,160
to split the working group document

248
00:14:35,160 --> 00:14:38,660
right to the question to the chairs

249
00:14:38,880 --> 00:14:40,800
uh it's certainly possible to split it

250
00:14:40,800 --> 00:14:43,279
the work would remain adopted I believe

251
00:14:43,279 --> 00:14:46,260
uh what you'd probably want to do is

252
00:14:46,260 --> 00:14:48,180
prepare a version of the split document

253
00:14:48,180 --> 00:14:50,279
so we can see what it looks like the

254
00:14:50,279 --> 00:14:51,839
usual challenge we have for those sorts

255
00:14:51,839 --> 00:14:53,100
of things is making sure that each

256
00:14:53,100 --> 00:14:57,060
document is whole in on its own and make

257
00:14:57,060 --> 00:14:59,399
sure that it is easy to read

258
00:14:59,399 --> 00:15:03,440
okay sure yeah thank you

259
00:15:06,959 --> 00:15:10,638
okay we seem to have no questions

260
00:15:14,060 --> 00:15:17,779
probably give you this one

261
00:15:24,600 --> 00:15:26,880
so I'm Jeff house and I'm presenting on

262
00:15:26,880 --> 00:15:28,980
behalf of the HP Yang battle authors

263
00:15:28,980 --> 00:15:31,560
next slide please

264
00:15:31,560 --> 00:15:35,040
so status uh we have done a lot of work

265
00:15:35,040 --> 00:15:36,959
in the model in terms of updating the

266
00:15:36,959 --> 00:15:39,660
Transport Security and I have worked

267
00:15:39,660 --> 00:15:41,420
with the TCP Yang model authors

268
00:15:41,420 --> 00:15:44,820
specifically on how tcpao uh is supposed

269
00:15:44,820 --> 00:15:48,180
to work and also tcpmd5 that did result

270
00:15:48,180 --> 00:15:50,040
in some work inside the tcpm working

271
00:15:50,040 --> 00:15:52,260
group to fix some issues that they had

272
00:15:52,260 --> 00:15:54,120
in their model and we're you know one of

273
00:15:54,120 --> 00:15:55,800
the first users of the fixes

274
00:15:55,800 --> 00:15:58,139
uh so as a side effect we've removed

275
00:15:58,139 --> 00:16:00,420
some of the stuff from our end of the

276
00:16:00,420 --> 00:16:02,940
model and moved it into theirs and we've

277
00:16:02,940 --> 00:16:04,680
updated the appendix to take care of

278
00:16:04,680 --> 00:16:05,760
that

279
00:16:05,760 --> 00:16:08,880
uh we've done uh cleanup on a number of

280
00:16:08,880 --> 00:16:11,220
things relating to unions uh you know

281
00:16:11,220 --> 00:16:13,440
courtesy of some of the netmod rules uh

282
00:16:13,440 --> 00:16:15,540
in Yang the order does actually matter

283
00:16:15,540 --> 00:16:19,620
in terms of what catches the uh

284
00:16:19,620 --> 00:16:22,560
possible options within the Union

285
00:16:22,560 --> 00:16:24,060
we've also done some additional work

286
00:16:24,060 --> 00:16:26,519
inside the policy module uh specifically

287
00:16:26,519 --> 00:16:27,839
on you know matching and address

288
00:16:27,839 --> 00:16:30,660
families and neighbors and we've added

289
00:16:30,660 --> 00:16:32,760
uh no additional examples for matching

290
00:16:32,760 --> 00:16:34,560
desktops and communities next slide

291
00:16:34,560 --> 00:16:36,120
please

292
00:16:36,120 --> 00:16:38,820
so Mahesh is still running the GitHub

293
00:16:38,820 --> 00:16:40,440
that we're doing all of our stuff out of

294
00:16:40,440 --> 00:16:41,820
you know please take a look at it in

295
00:16:41,820 --> 00:16:43,680
case you want to you know open up issues

296
00:16:43,680 --> 00:16:46,500
or contribute we are tracking things via

297
00:16:46,500 --> 00:16:49,019
issues you know for our lingering work

298
00:16:49,019 --> 00:16:49,920
items

299
00:16:49,920 --> 00:16:51,600
uh we have cleaned up some of the

300
00:16:51,600 --> 00:16:54,360
regular expression type stuff uh but

301
00:16:54,360 --> 00:16:57,180
however we didn't finish all of it a

302
00:16:57,180 --> 00:16:59,279
standing work item for the ietf Yang

303
00:16:59,279 --> 00:17:01,800
model and also a item inside the open

304
00:17:01,800 --> 00:17:03,959
config Yang model is how to model

305
00:17:03,959 --> 00:17:06,780
regular Expressions against as paths

306
00:17:06,780 --> 00:17:09,839
uh we will be holding a side meeting

307
00:17:09,839 --> 00:17:13,859
this evening you know Monday at 6 p.m uh

308
00:17:13,859 --> 00:17:15,419
in Richmond six around the corner here

309
00:17:15,419 --> 00:17:18,179
uh on the specific topic uh we'll

310
00:17:18,179 --> 00:17:21,059
discuss possible options there and uh if

311
00:17:21,059 --> 00:17:22,919
we're lucky we come to some sort of easy

312
00:17:22,919 --> 00:17:24,900
consensus and perhaps move this item

313
00:17:24,900 --> 00:17:27,179
forward for next itif which will close

314
00:17:27,179 --> 00:17:29,760
out the major pieces of missing work

315
00:17:29,760 --> 00:17:34,020
the uh s override and replace as we've

316
00:17:34,020 --> 00:17:36,539
made some choices there we invite the

317
00:17:36,539 --> 00:17:37,860
working group to please review this

318
00:17:37,860 --> 00:17:39,720
because this is a non-standard feature

319
00:17:39,720 --> 00:17:41,940
outside of the ASO override use case you

320
00:17:41,940 --> 00:17:44,220
know for vpns

321
00:17:44,220 --> 00:17:46,620
and extended communities continue to be

322
00:17:46,620 --> 00:17:48,480
one of the more challenging pieces of

323
00:17:48,480 --> 00:17:51,240
modeling both in terms of uh how to

324
00:17:51,240 --> 00:17:54,179
actually model route targets but also

325
00:17:54,179 --> 00:17:56,039
you know the fact that ietf is adding

326
00:17:56,039 --> 00:17:57,600
new extended communities on a regular

327
00:17:57,600 --> 00:17:59,160
basis and making sure we can maintain

328
00:17:59,160 --> 00:18:01,500
this without having to issue a new RFC

329
00:18:01,500 --> 00:18:03,539
as real single time we do it you know

330
00:18:03,539 --> 00:18:05,160
those of you are following Yang modeling

331
00:18:05,160 --> 00:18:07,260
are invited to give this very deep

332
00:18:07,260 --> 00:18:10,140
scrutiny this is a type of thing that

333
00:18:10,140 --> 00:18:12,179
the rest ietf does not have as a general

334
00:18:12,179 --> 00:18:13,260
problem

335
00:18:13,260 --> 00:18:15,840
next slide please

336
00:18:15,840 --> 00:18:18,240
so we're mostly there we are hoping that

337
00:18:18,240 --> 00:18:20,100
once we solve the regular expression

338
00:18:20,100 --> 00:18:22,080
issue that we have uh dealt with

339
00:18:22,080 --> 00:18:23,760
everything uh there's a tiny bit of

340
00:18:23,760 --> 00:18:25,740
cleanup work left to be done we're

341
00:18:25,740 --> 00:18:27,480
starting to see know some feedback you

342
00:18:27,480 --> 00:18:28,980
know coming in from the field uh thank

343
00:18:28,980 --> 00:18:30,299
you Rashad for actually taking a look at

344
00:18:30,299 --> 00:18:32,940
things and you know this has been seven

345
00:18:32,940 --> 00:18:36,299
odd years of work uh we're hoping to get

346
00:18:36,299 --> 00:18:38,940
to the point where we're just ready to

347
00:18:38,940 --> 00:18:40,740
ask for publication of the thing

348
00:18:40,740 --> 00:18:43,559
so if you have interest in actually

349
00:18:43,559 --> 00:18:45,539
looking at the model this is now the

350
00:18:45,539 --> 00:18:48,600
time to actually do it uh we invite deep

351
00:18:48,600 --> 00:18:52,440
scrutiny and uh in particular since this

352
00:18:52,440 --> 00:18:54,240
module will be the basis for how a

353
00:18:54,240 --> 00:18:56,520
number of other VPN family type things

354
00:18:56,520 --> 00:18:59,340
like modules that come out of best tie

355
00:18:59,340 --> 00:19:01,740
into it's also important for you know

356
00:19:01,740 --> 00:19:03,660
people working on the best Yang modules

357
00:19:03,660 --> 00:19:06,120
to pay attention as well

358
00:19:06,120 --> 00:19:07,980
and I believe that is all we have on

359
00:19:07,980 --> 00:19:11,419
this slide is there any questions

360
00:19:18,539 --> 00:19:21,419
okay they appear to have no questions

361
00:19:21,419 --> 00:19:22,860
so we'll be moving on to the next

362
00:19:22,860 --> 00:19:24,120
presentation which I'm also the

363
00:19:24,120 --> 00:19:26,780
presenter for

364
00:19:33,000 --> 00:19:35,000
um

365
00:19:36,480 --> 00:19:39,740
this will be the asset

366
00:19:39,919 --> 00:19:42,679
zero three

367
00:19:42,679 --> 00:19:45,900
so I can't see them

368
00:19:45,900 --> 00:19:48,620
can't see

369
00:19:50,039 --> 00:19:54,299
that you don't do that always here

370
00:19:54,299 --> 00:19:57,379
ah thank you

371
00:19:58,440 --> 00:20:00,539
okay thank you

372
00:20:00,539 --> 00:20:02,700
so next presentation is on deprecation

373
00:20:02,700 --> 00:20:05,640
of as sets I am doing this work uh with

374
00:20:05,640 --> 00:20:08,400
uh primarily or sriram uh and also uh

375
00:20:08,400 --> 00:20:12,059
Warren Camari uh next slide please

376
00:20:12,059 --> 00:20:14,220
um so what's the motivation we have uh

377
00:20:14,220 --> 00:20:16,620
to talk about this topic so

378
00:20:16,620 --> 00:20:18,780
it's worth never taking a brief reminder

379
00:20:18,780 --> 00:20:21,480
that bgp4 came into being as the first

380
00:20:21,480 --> 00:20:23,220
you know inner domain protocol for

381
00:20:23,220 --> 00:20:25,860
carrying class listener domain classless

382
00:20:25,860 --> 00:20:29,280
Internet domain routing and as a side

383
00:20:29,280 --> 00:20:30,900
effect there's a lot of procedure that's

384
00:20:30,900 --> 00:20:34,200
sprinkled across 4271 and earlier 1771

385
00:20:34,200 --> 00:20:36,960
dealing with you know topics that are

386
00:20:36,960 --> 00:20:38,400
less interesting these days than they

387
00:20:38,400 --> 00:20:41,039
used to be specifically aggregation

388
00:20:41,039 --> 00:20:43,440
so a couple of very Basics over the next

389
00:20:43,440 --> 00:20:45,660
slides to give motivations for the you

390
00:20:45,660 --> 00:20:47,880
know following slides aggregation

391
00:20:47,880 --> 00:20:49,559
obviously is creating a less specific

392
00:20:49,559 --> 00:20:51,900
route from one or more specific routes

393
00:20:51,900 --> 00:20:53,400
and

394
00:20:53,400 --> 00:20:55,440
people primarily use this these days to

395
00:20:55,440 --> 00:20:56,700
cause the less specific route to come

396
00:20:56,700 --> 00:20:58,380
into being conditionally

397
00:20:58,380 --> 00:21:00,419
and you know providers you know usually

398
00:21:00,419 --> 00:21:01,980
want to do this for some purpose of

399
00:21:01,980 --> 00:21:04,799
announcing a stable destination towards

400
00:21:04,799 --> 00:21:06,720
the outside world

401
00:21:06,720 --> 00:21:09,419
bgp's aggregation procedures are what

402
00:21:09,419 --> 00:21:11,820
actually defines the as set component

403
00:21:11,820 --> 00:21:14,059
for as paths is part of aggregation

404
00:21:14,059 --> 00:21:16,320
discusses the general properties of how

405
00:21:16,320 --> 00:21:20,059
it does that next slide

406
00:21:20,720 --> 00:21:22,740
and you know the algorithm is you know

407
00:21:22,740 --> 00:21:24,299
fairly straightforward you know the one

408
00:21:24,299 --> 00:21:25,740
that pretty much everybody on the planet

409
00:21:25,740 --> 00:21:28,140
implements these days is for all your

410
00:21:28,140 --> 00:21:29,880
contributors find the longest common set

411
00:21:29,880 --> 00:21:32,460
of leading sequences that's the sequence

412
00:21:32,460 --> 00:21:34,500
everybody shares take everything else

413
00:21:34,500 --> 00:21:36,980
throw it into a set and

414
00:21:36,980 --> 00:21:41,039
de-duplicate the uh as in the set and

415
00:21:41,039 --> 00:21:43,080
once you've actually done that generate

416
00:21:43,080 --> 00:21:45,120
the minimum number of DGP segments to

417
00:21:45,120 --> 00:21:48,320
encode the thing on the wire

418
00:21:48,500 --> 00:21:50,940
4271 also talks about the atomic

419
00:21:50,940 --> 00:21:52,679
aggregate attribute which had a lot of

420
00:21:52,679 --> 00:21:54,900
interesting controversy as we were

421
00:21:54,900 --> 00:21:57,179
specifying 4271 and you know cleaning up

422
00:21:57,179 --> 00:21:58,640
1771

423
00:21:58,640 --> 00:22:01,620
uh effectively what it's used for in

424
00:22:01,620 --> 00:22:04,440
4271 is if you set Atomic aggregate

425
00:22:04,440 --> 00:22:06,900
you're allowed to throw away the ASF

426
00:22:06,900 --> 00:22:08,700
portion of it aggregate if you think

427
00:22:08,700 --> 00:22:10,799
it's safe you know the original intent

428
00:22:10,799 --> 00:22:12,900
of atomic aggregate was don't make this

429
00:22:12,900 --> 00:22:14,940
route more specific or don't you know

430
00:22:14,940 --> 00:22:17,760
de-aggregate it no implementation on the

431
00:22:17,760 --> 00:22:19,679
planet does this uh by default these

432
00:22:19,679 --> 00:22:21,539
days it's usually done by other

433
00:22:21,539 --> 00:22:24,980
procedures next slide

434
00:22:25,140 --> 00:22:27,960
so very basic you know example of what

435
00:22:27,960 --> 00:22:30,299
you know sets can be useful for now

436
00:22:30,299 --> 00:22:33,360
assume that we have some as10 that owns

437
00:22:33,360 --> 00:22:36,600
a 10-8 less specific route and it's

438
00:22:36,600 --> 00:22:39,299
delegated you know maybe 10 128 16 to

439
00:22:39,299 --> 00:22:41,760
its now Downstream as20

440
00:22:41,760 --> 00:22:44,640
if as20 sends its route to 10 and 10 was

441
00:22:44,640 --> 00:22:48,120
to use that to form an aggregate then it

442
00:22:48,120 --> 00:22:49,380
would just simply since it's the longest

443
00:22:49,380 --> 00:22:52,260
common path well it just has a s path of

444
00:22:52,260 --> 00:22:53,520
20 in here so this is the case where

445
00:22:53,520 --> 00:22:55,380
aggregation can happen if there's no

446
00:22:55,380 --> 00:22:58,080
sets present so what might actually

447
00:22:58,080 --> 00:23:00,840
happen next slide if you re-advertise

448
00:23:00,840 --> 00:23:03,419
this back around the corner well so

449
00:23:03,419 --> 00:23:06,179
imagine that as20 really isn't using its

450
00:23:06,179 --> 00:23:08,039
full set of address space and has holes

451
00:23:08,039 --> 00:23:09,720
on things maybe it's using one slash 24

452
00:23:09,720 --> 00:23:11,460
as an example

453
00:23:11,460 --> 00:23:14,940
if it accepts the less specific route

454
00:23:14,940 --> 00:23:17,100
and doesn't have something internally to

455
00:23:17,100 --> 00:23:19,440
catch for the traffic for the network

456
00:23:19,440 --> 00:23:21,659
that it leaves it owns the slash 16.

457
00:23:21,659 --> 00:23:24,059
this can be a case where the you know

458
00:23:24,059 --> 00:23:25,980
traffic forwards back and forth to each

459
00:23:25,980 --> 00:23:28,200
other now clearly this doesn't happen in

460
00:23:28,200 --> 00:23:30,900
practice these days but remember 4271

461
00:23:30,900 --> 00:23:32,940
and bgp in general came into being

462
00:23:32,940 --> 00:23:34,200
before some of these things were

463
00:23:34,200 --> 00:23:36,659
absolutely clear procedure wise now for

464
00:23:36,659 --> 00:23:38,400
the most part providers when they're

465
00:23:38,400 --> 00:23:39,780
doing this sort of thing are going to be

466
00:23:39,780 --> 00:23:41,280
generating their own Aggregates the

467
00:23:41,280 --> 00:23:43,500
aggregate route itself will generate the

468
00:23:43,500 --> 00:23:45,240
null route that's necessary to suppress

469
00:23:45,240 --> 00:23:48,179
any forwarding Loops but as you can see

470
00:23:48,179 --> 00:23:50,280
in this example we can actually have a

471
00:23:50,280 --> 00:23:51,780
forwarding Loop in terms of what the rib

472
00:23:51,780 --> 00:23:53,460
is telling us without that more specific

473
00:23:53,460 --> 00:23:55,020
to catch things

474
00:23:55,020 --> 00:23:57,480
now this example shows this can happen

475
00:23:57,480 --> 00:24:00,780
even without ASX now clearly with ASX

476
00:24:00,780 --> 00:24:02,100
this becomes a little more interesting

477
00:24:02,100 --> 00:24:05,460
if you actually have the as present as

478
00:24:05,460 --> 00:24:07,020
part of the aggregation and send it back

479
00:24:07,020 --> 00:24:09,240
towards the contributors well the

480
00:24:09,240 --> 00:24:11,039
contributors would have simply not

481
00:24:11,039 --> 00:24:13,380
consume the less specific route and as a

482
00:24:13,380 --> 00:24:15,059
side effect this type of problem should

483
00:24:15,059 --> 00:24:17,100
not happen so that's that's the

484
00:24:17,100 --> 00:24:20,220
motivation for things like sets however

485
00:24:20,220 --> 00:24:22,080
sets caused us interesting problems next

486
00:24:22,080 --> 00:24:24,559
slide please

487
00:24:25,980 --> 00:24:28,440
um again current practices how do we

488
00:24:28,440 --> 00:24:30,240
avoid this actually being a problem well

489
00:24:30,240 --> 00:24:31,980
filtering your own address space you

490
00:24:31,980 --> 00:24:33,419
know it's common practice that if you

491
00:24:33,419 --> 00:24:36,360
own a set of prefixes you're not going

492
00:24:36,360 --> 00:24:38,100
to accept more specifics for your own

493
00:24:38,100 --> 00:24:39,720
networks from the outside world you know

494
00:24:39,720 --> 00:24:42,120
it can be lead to you know route hijacks

495
00:24:42,120 --> 00:24:43,380
as an example

496
00:24:43,380 --> 00:24:45,360
the trick is while policy is very easy

497
00:24:45,360 --> 00:24:46,440
for that

498
00:24:46,440 --> 00:24:48,539
not consuming less specific routes from

499
00:24:48,539 --> 00:24:50,400
the outside world is very difficult to

500
00:24:50,400 --> 00:24:53,100
do in bgp policy so the practice

501
00:24:53,100 --> 00:24:55,799
everybody has is if you don't form you

502
00:24:55,799 --> 00:24:57,240
know an aggregate or something else

503
00:24:57,240 --> 00:24:59,400
internally to catch all the traffic

504
00:24:59,400 --> 00:25:01,440
you'll do something like know about the

505
00:25:01,440 --> 00:25:02,840
traffic internally

506
00:25:02,840 --> 00:25:05,159
aggregations normally how this operates

507
00:25:05,159 --> 00:25:06,720
but uh you know there are other

508
00:25:06,720 --> 00:25:08,520
techniques and if you do these things

509
00:25:08,520 --> 00:25:10,380
you know the actual forwarding Loops are

510
00:25:10,380 --> 00:25:13,020
covered next slide please

511
00:25:13,020 --> 00:25:14,580
now the question is why do we actually

512
00:25:14,580 --> 00:25:16,860
even care about any of this you know why

513
00:25:16,860 --> 00:25:19,380
do we care about assets well B2B

514
00:25:19,380 --> 00:25:20,940
security features that pushed us down

515
00:25:20,940 --> 00:25:22,559
the path where this is now important

516
00:25:22,559 --> 00:25:25,080
route origin validation needs a

517
00:25:25,080 --> 00:25:27,659
deterministic origin as for Route origin

518
00:25:27,659 --> 00:25:30,120
authorization records and the problem

519
00:25:30,120 --> 00:25:32,940
with as said is it's ambiguous who the

520
00:25:32,940 --> 00:25:34,799
actual origin is in those circumstances

521
00:25:34,799 --> 00:25:39,240
so it's recommended 64.72 don't do this

522
00:25:39,240 --> 00:25:41,580
you know we want something to be you

523
00:25:41,580 --> 00:25:43,320
know canonical for Route origin

524
00:25:43,320 --> 00:25:44,659
validation

525
00:25:44,659 --> 00:25:47,520
it also makes things like policy very

526
00:25:47,520 --> 00:25:49,320
challenging nobody's policy engine on

527
00:25:49,320 --> 00:25:50,820
the planet right now that I'm aware of

528
00:25:50,820 --> 00:25:52,799
actually can match on sex and this makes

529
00:25:52,799 --> 00:25:54,539
things very annoying and Warren's over

530
00:25:54,539 --> 00:25:55,860
here shaking his head is like this makes

531
00:25:55,860 --> 00:25:58,320
my life difficult let's not do this so

532
00:25:58,320 --> 00:25:59,940
this is I don't like it rather than the

533
00:25:59,940 --> 00:26:02,820
security feature uh in the last case is

534
00:26:02,820 --> 00:26:06,539
that uh for bgp SEC purposes bgb SEC

535
00:26:06,539 --> 00:26:09,299
needs to have sequences to do its

536
00:26:09,299 --> 00:26:10,980
signatures over so that's a further

537
00:26:10,980 --> 00:26:13,440
motivation One Step stronger than as

538
00:26:13,440 --> 00:26:15,659
sets you know conf there's phb SEC

539
00:26:15,659 --> 00:26:18,000
procedures for confederations as well

540
00:26:18,000 --> 00:26:21,419
now the useful thing is sets are not

541
00:26:21,419 --> 00:26:23,100
common you know a few years ago when

542
00:26:23,100 --> 00:26:24,659
this document was richly authored there

543
00:26:24,659 --> 00:26:26,220
was 300 of them floating around the

544
00:26:26,220 --> 00:26:28,919
internet they're significantly fewer

545
00:26:28,919 --> 00:26:31,860
largely as motivated by bgp's not PHP

546
00:26:31,860 --> 00:26:35,220
SEC but rpk origin validation is just

547
00:26:35,220 --> 00:26:37,140
simply causing these things to go out of

548
00:26:37,140 --> 00:26:39,299
existence your stuff won't validate with

549
00:26:39,299 --> 00:26:40,260
them

550
00:26:40,260 --> 00:26:42,600
that said aggregation Still Remains

551
00:26:42,600 --> 00:26:45,360
quite common we see on about 10 of the

552
00:26:45,360 --> 00:26:47,279
routing table at internet the aggregator

553
00:26:47,279 --> 00:26:48,900
attribute that suggests that aggregation

554
00:26:48,900 --> 00:26:52,460
is being done next slide please

555
00:26:52,760 --> 00:26:56,700
so what are we asking to be changed here

556
00:26:56,700 --> 00:26:59,100
um number one you should do Treatise

557
00:26:59,100 --> 00:27:00,720
withdrawal basically if you're going to

558
00:27:00,720 --> 00:27:02,400
accept them at all don't propagate them

559
00:27:02,400 --> 00:27:05,100
probably don't even use them this is a

560
00:27:05,100 --> 00:27:06,539
change from the must and the prior

561
00:27:06,539 --> 00:27:08,460
version of the document simply because

562
00:27:08,460 --> 00:27:10,320
there are going to be circumstances

563
00:27:10,320 --> 00:27:12,240
where people do need to do this and we

564
00:27:12,240 --> 00:27:13,559
can't break all the implementations

565
00:27:13,559 --> 00:27:16,500
we've been shipping for 25 years

566
00:27:16,500 --> 00:27:19,020
that said you should not create sets

567
00:27:19,020 --> 00:27:20,640
when you do that

568
00:27:20,640 --> 00:27:22,140
um and this is where we need most of the

569
00:27:22,140 --> 00:27:25,679
normative text changes versus 4271

570
00:27:25,679 --> 00:27:27,779
there's been procedure for years called

571
00:27:27,779 --> 00:27:29,580
brief aggregation where you simply throw

572
00:27:29,580 --> 00:27:31,380
the set away and set the atomic

573
00:27:31,380 --> 00:27:34,260
aggregate brief aggregation was not well

574
00:27:34,260 --> 00:27:36,179
described inside the core Beach brfc

575
00:27:36,179 --> 00:27:38,520
this document tries to actually clarify

576
00:27:38,520 --> 00:27:40,980
you know what actual practice is at the

577
00:27:40,980 --> 00:27:42,779
moment but more importantly it actually

578
00:27:42,779 --> 00:27:44,460
recommends that that's not good enough

579
00:27:44,460 --> 00:27:46,799
because brief aggregation simply

580
00:27:46,799 --> 00:27:48,720
truncates the sets you may still end up

581
00:27:48,720 --> 00:27:51,360
with a non-deterministic originas in

582
00:27:51,360 --> 00:27:53,760
some circumstances so the recommendation

583
00:27:53,760 --> 00:27:55,140
this document that requires deep

584
00:27:55,140 --> 00:27:57,720
scrutiny from the working group is is it

585
00:27:57,720 --> 00:28:00,059
okay to Simply make the truncation at

586
00:28:00,059 --> 00:28:02,279
typically the point of aggregation

587
00:28:02,279 --> 00:28:03,960
that's probably going to work out fine

588
00:28:03,960 --> 00:28:05,940
it'll give you a consistent origin as

589
00:28:05,940 --> 00:28:09,179
for you know bgp security purposes and

590
00:28:09,179 --> 00:28:10,320
yes we're just going to keep putting

591
00:28:10,320 --> 00:28:14,658
Atomic aggregate at it next slide

592
00:28:15,480 --> 00:28:17,159
do we actually care about Confederation

593
00:28:17,159 --> 00:28:19,380
assets well origin validation as I

594
00:28:19,380 --> 00:28:22,260
mentioned does not care about it bgp set

595
00:28:22,260 --> 00:28:24,840
does but even B2B set you know gives you

596
00:28:24,840 --> 00:28:26,940
know some discussion in its security uh

597
00:28:26,940 --> 00:28:29,340
section that you're going to throw away

598
00:28:29,340 --> 00:28:31,440
all the signatures done on beach be SEC

599
00:28:31,440 --> 00:28:33,240
confed segments outside the

600
00:28:33,240 --> 00:28:35,279
Confederation anyway so it depends on

601
00:28:35,279 --> 00:28:37,620
your zone of trust so this becomes less

602
00:28:37,620 --> 00:28:40,200
of a you know critical thing and more is

603
00:28:40,200 --> 00:28:43,320
a good idea you know as part of 09 I

604
00:28:43,320 --> 00:28:44,820
thought maybe we can probably get rid of

605
00:28:44,820 --> 00:28:47,159
Confederation procedures and true Ram

606
00:28:47,159 --> 00:28:49,740
reminded me after publication well B2B

607
00:28:49,740 --> 00:28:51,179
SEC really does strongly recommend this

608
00:28:51,179 --> 00:28:53,580
so we're going to return the confed sets

609
00:28:53,580 --> 00:28:56,640
as a should not generate but again it's

610
00:28:56,640 --> 00:28:58,860
less critical than you know the asset

611
00:28:58,860 --> 00:29:00,720
for Global Internet purposes

612
00:29:00,720 --> 00:29:03,600
X slide

613
00:29:03,600 --> 00:29:07,020
so what's next uh continue to refine the

614
00:29:07,020 --> 00:29:09,539
4271 text you know when I was presenting

615
00:29:09,539 --> 00:29:11,279
this to you know John Scudder and Tony

616
00:29:11,279 --> 00:29:13,080
Lee Tony being one of the original

617
00:29:13,080 --> 00:29:14,820
authors of the BHP spec in the first

618
00:29:14,820 --> 00:29:16,440
place is like well this is obvious

619
00:29:16,440 --> 00:29:18,059
procedure just throw out all this text

620
00:29:18,059 --> 00:29:20,039
it's like hey guys it's clear that you

621
00:29:20,039 --> 00:29:21,960
haven't been dealing with interop labs

622
00:29:21,960 --> 00:29:24,539
for the last 20 years if we just simply

623
00:29:24,539 --> 00:29:26,460
throw this text away without having

624
00:29:26,460 --> 00:29:28,860
clean procedure to do so we're going to

625
00:29:28,860 --> 00:29:30,120
end up with our conformance testers

626
00:29:30,120 --> 00:29:32,100
filing a bunch of bugs with us so we do

627
00:29:32,100 --> 00:29:34,559
need to take some care here

628
00:29:34,559 --> 00:29:36,779
um so we will need some deep scrutiny on

629
00:29:36,779 --> 00:29:37,440
this

630
00:29:37,440 --> 00:29:39,059
but more importantly what we need to do

631
00:29:39,059 --> 00:29:40,980
is get vendors to start implementing the

632
00:29:40,980 --> 00:29:43,020
new aggregation procedure for as paths

633
00:29:43,020 --> 00:29:45,179
to help you know origin validation be

634
00:29:45,179 --> 00:29:47,039
more stable

635
00:29:47,039 --> 00:29:49,140
that's the presentation I see that Randy

636
00:29:49,140 --> 00:29:51,919
bush is in queue

637
00:29:55,980 --> 00:29:58,080
thanks Jeff

638
00:29:58,080 --> 00:30:02,820
um of the 300 odd

639
00:30:02,820 --> 00:30:06,059
Aggregates in the current Global routing

640
00:30:06,059 --> 00:30:09,720
table you'll find that almost all of

641
00:30:09,720 --> 00:30:10,679
them

642
00:30:10,679 --> 00:30:13,320
are Singletons

643
00:30:13,320 --> 00:30:16,559
in other words in an MRT dump left curly

644
00:30:16,559 --> 00:30:21,000
brace single as right curly brace

645
00:30:21,000 --> 00:30:22,740
they're dumb

646
00:30:22,740 --> 00:30:25,440
some years back we studied

647
00:30:25,440 --> 00:30:29,700
the longitudinal use of

648
00:30:29,700 --> 00:30:34,620
as sets and found that most of them were

649
00:30:34,620 --> 00:30:37,620
pretty ephemeral they were there for a

650
00:30:37,620 --> 00:30:40,799
week a couple weeks and then gone

651
00:30:40,799 --> 00:30:44,820
I don't think there's any damage

652
00:30:44,820 --> 00:30:49,140
to actually just removing them

653
00:30:49,140 --> 00:30:51,860
and

654
00:30:52,860 --> 00:30:55,459
thank you ready

655
00:30:55,860 --> 00:30:58,380
next speaker and queue

656
00:30:58,380 --> 00:31:01,500
which is not Joe but somebody

657
00:31:01,500 --> 00:31:04,799
it is true okay thank you

658
00:31:04,799 --> 00:31:07,140
job Snyder's fastly

659
00:31:07,140 --> 00:31:11,279
a number of years ago operators managed

660
00:31:11,279 --> 00:31:13,380
to get rid of private asns in the

661
00:31:13,380 --> 00:31:15,899
default Free Zone by popularizing

662
00:31:15,899 --> 00:31:18,419
certain filters that operators would

663
00:31:18,419 --> 00:31:20,600
copy paste into their devices

664
00:31:20,600 --> 00:31:23,399
and the purpose of this exercise was to

665
00:31:23,399 --> 00:31:26,600
to promote some attribution capabilities

666
00:31:26,600 --> 00:31:29,820
and there's an analogy to the current

667
00:31:29,820 --> 00:31:31,740
situation where some might argue like

668
00:31:31,740 --> 00:31:35,880
hey we see these low hundreds of routes

669
00:31:35,880 --> 00:31:37,679
in the default 3 Zone and we we cannot

670
00:31:37,679 --> 00:31:40,080
get rid of it it will never happen and I

671
00:31:40,080 --> 00:31:42,659
went back to differ

672
00:31:42,659 --> 00:31:44,460
um what made it possible to get rid of

673
00:31:44,460 --> 00:31:47,340
private asns in the default 3 Zone was

674
00:31:47,340 --> 00:31:50,100
that it was easy to configure this on

675
00:31:50,100 --> 00:31:52,860
ebhp routers connected to the internet

676
00:31:52,860 --> 00:31:55,919
and as far as I know you you mentioned

677
00:31:55,919 --> 00:31:59,279
in your slide that it's not easy to

678
00:31:59,279 --> 00:32:02,159
match um as set segments in the as path

679
00:32:02,159 --> 00:32:03,299
attribute

680
00:32:03,299 --> 00:32:04,740
and I concur

681
00:32:04,740 --> 00:32:07,919
it's it's not trivial on on platforms uh

682
00:32:07,919 --> 00:32:12,480
commonly deployed except open bgpd and I

683
00:32:12,480 --> 00:32:15,720
want to encourage HP uh implementers to

684
00:32:15,720 --> 00:32:18,179
make a simple button to just reject all

685
00:32:18,179 --> 00:32:21,419
routes that have as sets in them and if

686
00:32:21,419 --> 00:32:23,059
those buttons become available

687
00:32:23,059 --> 00:32:25,620
operators will start using them and we

688
00:32:25,620 --> 00:32:28,380
will prune as set routes from the

689
00:32:28,380 --> 00:32:31,740
default free zone so

690
00:32:31,740 --> 00:32:33,960
the to-do list should be expanded by

691
00:32:33,960 --> 00:32:37,080
another item please make a knob to make

692
00:32:37,080 --> 00:32:39,299
it easy to reject routes that contain as

693
00:32:39,299 --> 00:32:41,880
sets and that will actually help uh

694
00:32:41,880 --> 00:32:44,100
finalize this this project

695
00:32:44,100 --> 00:32:45,840
and speaking is one of the Developers

696
00:32:45,840 --> 00:32:48,059
for one of those Stacks that is part of

697
00:32:48,059 --> 00:32:49,620
the queue of work to be done is

698
00:32:49,620 --> 00:32:51,000
supporting this

699
00:32:51,000 --> 00:32:53,840
thank you so much

700
00:32:56,940 --> 00:32:59,520
hi uh I've already done a future way

701
00:32:59,520 --> 00:33:01,260
Technologies

702
00:33:01,260 --> 00:33:01,980
um

703
00:33:01,980 --> 00:33:05,039
I like this work I I was you know happy

704
00:33:05,039 --> 00:33:07,620
that you're deprecating asats and as

705
00:33:07,620 --> 00:33:09,779
confed sets and the document says you're

706
00:33:09,779 --> 00:33:10,919
deprecating It also says you're

707
00:33:10,919 --> 00:33:13,919
obsoleting but in reality you're not

708
00:33:13,919 --> 00:33:16,620
right you're just really saying really

709
00:33:16,620 --> 00:33:19,080
really really don't use these

710
00:33:19,080 --> 00:33:20,640
uh in fact you're actually saying you

711
00:33:20,640 --> 00:33:22,440
should not be generated which means that

712
00:33:22,440 --> 00:33:24,899
people can still send them and people

713
00:33:24,899 --> 00:33:27,299
who receive them can still receive them

714
00:33:27,299 --> 00:33:30,600
because you're saying you should

715
00:33:30,600 --> 00:33:32,700
um treat us withdrawal whatever you said

716
00:33:32,700 --> 00:33:35,100
there in other words

717
00:33:35,100 --> 00:33:37,860
we may see these forever

718
00:33:37,860 --> 00:33:39,539
and I understand that you know there's

719
00:33:39,539 --> 00:33:40,860
some backwards compatibility issues and

720
00:33:40,860 --> 00:33:42,000
things like that

721
00:33:42,000 --> 00:33:46,380
um what I would like you to do is to

722
00:33:46,380 --> 00:33:48,360
clarify the language a little bit I mean

723
00:33:48,360 --> 00:33:50,100
if we're obsoleting

724
00:33:50,100 --> 00:33:52,559
we should obsolete uh if we're not

725
00:33:52,559 --> 00:33:54,899
obsoleting then please say in the text

726
00:33:54,899 --> 00:33:57,179
we're not obsoleting we just strongly

727
00:33:57,179 --> 00:33:58,980
recommending that these are not used or

728
00:33:58,980 --> 00:34:01,080
something like that so that it's clear

729
00:34:01,080 --> 00:34:03,179
to people what what the draft is really

730
00:34:03,179 --> 00:34:05,100
right and a big portion of the reason I

731
00:34:05,100 --> 00:34:06,960
got involved in this draft is the

732
00:34:06,960 --> 00:34:09,060
initial proposal is outright apps late

733
00:34:09,060 --> 00:34:11,040
you don't want people to have their

734
00:34:11,040 --> 00:34:12,659
peering sessions dropped because they

735
00:34:12,659 --> 00:34:15,000
receive one of these things coming in so

736
00:34:15,000 --> 00:34:16,980
we have to deal with the fact that this

737
00:34:16,980 --> 00:34:19,080
is bgp we have stacks that they'll have

738
00:34:19,080 --> 00:34:20,639
implementations have been around for 20

739
00:34:20,639 --> 00:34:22,679
years you know somebody's got you know

740
00:34:22,679 --> 00:34:24,899
ancient protein box lying around on

741
00:34:24,899 --> 00:34:26,580
their Network we'd want them to knock

742
00:34:26,580 --> 00:34:28,759
over

743
00:34:29,159 --> 00:34:30,960
okay no further questions um next

744
00:34:30,960 --> 00:34:34,580
present one one last question

745
00:34:35,399 --> 00:34:36,899
um I just quickly skipped through the

746
00:34:36,899 --> 00:34:40,260
draft uh pretty much there um it would

747
00:34:40,260 --> 00:34:41,760
probably be helpful if you put in some

748
00:34:41,760 --> 00:34:43,619
text about forwarding loops and what can

749
00:34:43,619 --> 00:34:45,599
happen and what cannot

750
00:34:45,599 --> 00:34:48,440
okay thank you

751
00:34:49,440 --> 00:34:53,000
and I lost the server connection

752
00:34:57,359 --> 00:34:59,339
you have no problems

753
00:34:59,339 --> 00:35:01,520
foreign

754
00:35:34,619 --> 00:35:37,099
okay

755
00:35:37,880 --> 00:35:41,420
Lynette I think you're up

756
00:35:54,540 --> 00:35:55,800
thank you

757
00:35:55,800 --> 00:35:59,520
um so I'm just making it very short

758
00:35:59,520 --> 00:36:00,140
um

759
00:36:00,140 --> 00:36:02,160
presentation on this

760
00:36:02,160 --> 00:36:05,000
um next slide please

761
00:36:05,460 --> 00:36:08,700
um next slide

762
00:36:08,700 --> 00:36:11,400
okay so this is um actually a special

763
00:36:11,400 --> 00:36:13,560
special uh scenario which we're going to

764
00:36:13,560 --> 00:36:15,839
be covered in the can Computing aware

765
00:36:15,839 --> 00:36:18,420
networking buff which is happening right

766
00:36:18,420 --> 00:36:21,960
after uh IDR I hope people can go there

767
00:36:21,960 --> 00:36:24,780
if you have questions and comments so

768
00:36:24,780 --> 00:36:26,160
it's really about

769
00:36:26,160 --> 00:36:29,040
um you know small domain like in 3gpp

770
00:36:29,040 --> 00:36:31,440
they call it local network local Data

771
00:36:31,440 --> 00:36:32,520
Network

772
00:36:32,520 --> 00:36:34,619
um where the service instances are

773
00:36:34,619 --> 00:36:37,260
extensioned multiple Services multiple

774
00:36:37,260 --> 00:36:39,660
instances so for one service so you

775
00:36:39,660 --> 00:36:41,880
could have one address have multiple

776
00:36:41,880 --> 00:36:43,140
instance

777
00:36:43,140 --> 00:36:44,000
um

778
00:36:44,000 --> 00:36:48,900
created and um is for the edge router

779
00:36:48,900 --> 00:36:51,680
the e-quest router be able to

780
00:36:51,680 --> 00:36:54,900
propagate the properties of attached

781
00:36:54,900 --> 00:36:56,760
site for example

782
00:36:56,760 --> 00:36:59,640
um at one particular site you may have

783
00:36:59,640 --> 00:37:02,520
some kind of we call it a site index

784
00:37:02,520 --> 00:37:03,119
um

785
00:37:03,119 --> 00:37:06,240
side capacity index it could represent

786
00:37:06,240 --> 00:37:10,740
all the nris that reside in the site

787
00:37:10,740 --> 00:37:13,380
like maybe a floor or building like they

788
00:37:13,380 --> 00:37:17,160
lose power and allow the U.S router to

789
00:37:17,160 --> 00:37:19,260
tell the Ingress router that hey

790
00:37:19,260 --> 00:37:20,940
everything associated with this

791
00:37:20,940 --> 00:37:24,599
particular site is capacitance down to

792
00:37:24,599 --> 00:37:27,359
zero or down to 50 percent

793
00:37:27,359 --> 00:37:32,220
um so this is uh in the ipgp domain both

794
00:37:32,220 --> 00:37:35,099
Ingress and egress router belong to the

795
00:37:35,099 --> 00:37:38,880
same operator and

796
00:37:38,880 --> 00:37:39,900
um

797
00:37:39,900 --> 00:37:43,099
next slide please

798
00:37:44,220 --> 00:37:46,500
um so introduction to the bgp

799
00:37:46,500 --> 00:37:48,240
um is really we want to make those

800
00:37:48,240 --> 00:37:51,060
service we call it the edge service

801
00:37:51,060 --> 00:37:52,560
metadata

802
00:37:52,560 --> 00:37:56,640
um to impact the bgp decision not going

803
00:37:56,640 --> 00:37:58,020
to the FIB

804
00:37:58,020 --> 00:37:59,760
um so those information will be

805
00:37:59,760 --> 00:38:04,020
integrated with long chain of factors in

806
00:38:04,020 --> 00:38:09,119
determining the the best route next

807
00:38:09,119 --> 00:38:12,000
so here just an example like pgp you

808
00:38:12,000 --> 00:38:14,820
have many attributes many policies

809
00:38:14,820 --> 00:38:18,359
um the different priorities and here we

810
00:38:18,359 --> 00:38:20,820
got the extra Services extra service

811
00:38:20,820 --> 00:38:24,300
metadata service metadata value how do

812
00:38:24,300 --> 00:38:27,000
we insert that into a chain of decision

813
00:38:27,000 --> 00:38:29,820
point where to insert it

814
00:38:29,820 --> 00:38:32,339
um so that you can integrate with the

815
00:38:32,339 --> 00:38:34,200
other attributes to create the best

816
00:38:34,200 --> 00:38:36,599
paths

817
00:38:36,599 --> 00:38:39,359
next slide please

818
00:38:39,359 --> 00:38:42,540
so the main purpose of this presentation

819
00:38:42,540 --> 00:38:46,980
is really want to introduce a different

820
00:38:46,980 --> 00:38:48,960
um have a different meaning of next

821
00:38:48,960 --> 00:38:52,140
heart as our idea chair has presented

822
00:38:52,140 --> 00:38:54,420
that there are many drafts

823
00:38:54,420 --> 00:38:56,880
um the different attributes of next hub

824
00:38:56,880 --> 00:38:59,160
and this is a special circumstance

825
00:38:59,160 --> 00:39:01,740
because this next hub like for example

826
00:39:01,740 --> 00:39:05,040
capacity doesn't really represent the

827
00:39:05,040 --> 00:39:08,000
next hop the router's capacity is really

828
00:39:08,000 --> 00:39:12,359
represent the attached side capacity and

829
00:39:12,359 --> 00:39:14,520
also those are not

830
00:39:14,520 --> 00:39:17,060
um aggregating on

831
00:39:17,060 --> 00:39:20,040
forwarding the NRI received from other

832
00:39:20,040 --> 00:39:23,339
routers this is really directly attached

833
00:39:23,339 --> 00:39:26,880
sites it's more like a exit points

834
00:39:26,880 --> 00:39:31,380
egress router to the devices in the

835
00:39:31,380 --> 00:39:33,240
igbtp domain

836
00:39:33,240 --> 00:39:34,320
um

837
00:39:34,320 --> 00:39:39,180
so that um this particular next hub can

838
00:39:39,180 --> 00:39:41,579
be the next hub for other attributes as

839
00:39:41,579 --> 00:39:44,520
well like other um routes as well

840
00:39:44,520 --> 00:39:47,400
um in the traditional bgp domain that

841
00:39:47,400 --> 00:39:49,920
you have like this next router next hub

842
00:39:49,920 --> 00:39:52,800
have some issues will impact every route

843
00:39:52,800 --> 00:39:55,200
which has this notes declared as the

844
00:39:55,200 --> 00:39:58,380
next half but for this circumstance

845
00:39:58,380 --> 00:40:01,380
um this attributes only impact the

846
00:40:01,380 --> 00:40:05,220
service instances directly attached so

847
00:40:05,220 --> 00:40:07,560
um for this anycast for this kind of

848
00:40:07,560 --> 00:40:10,260
special environment we need to have a

849
00:40:10,260 --> 00:40:12,720
different terms so make it easier in

850
00:40:12,720 --> 00:40:15,900
idea of discussing the future

851
00:40:15,900 --> 00:40:18,599
um say you have next hub Transit which

852
00:40:18,599 --> 00:40:22,800
is like asbr for the other domains and

853
00:40:22,800 --> 00:40:25,760
this particular one is really the ipgp

854
00:40:25,760 --> 00:40:28,740
exit point so I want to differentiate

855
00:40:28,740 --> 00:40:30,300
that

856
00:40:30,300 --> 00:40:33,119
page please

857
00:40:33,119 --> 00:40:36,180
so here in this draft we're proposing a

858
00:40:36,180 --> 00:40:39,960
new past attribute to represent the

859
00:40:39,960 --> 00:40:44,160
service metadata this particular past

860
00:40:44,160 --> 00:40:48,180
attribute can impact multiple MRIs this

861
00:40:48,180 --> 00:40:51,060
has details is described in the in the

862
00:40:51,060 --> 00:40:53,099
draft if you have any comments or any

863
00:40:53,099 --> 00:40:54,960
suggestions please talk to me at the

864
00:40:54,960 --> 00:40:59,720
hallway or on the mailing list next page

865
00:40:59,720 --> 00:41:02,339
this is just rehab of some of the sub

866
00:41:02,339 --> 00:41:04,440
povs can be carried by this past

867
00:41:04,440 --> 00:41:05,640
attribute

868
00:41:05,640 --> 00:41:08,880
next page please

869
00:41:08,880 --> 00:41:10,560
so um

870
00:41:10,560 --> 00:41:12,960
today's presentation is really

871
00:41:12,960 --> 00:41:15,960
um soliciting more comments to the draft

872
00:41:15,960 --> 00:41:17,880
and also

873
00:41:17,880 --> 00:41:20,940
um asking the IDR the the community can

874
00:41:20,940 --> 00:41:23,460
we create a different names for this

875
00:41:23,460 --> 00:41:25,619
particular next hub so make it easier

876
00:41:25,619 --> 00:41:29,099
for discussion and for um defining for

877
00:41:29,099 --> 00:41:31,980
the future extensions we want to have

878
00:41:31,980 --> 00:41:34,320
like next hub transit for this

879
00:41:34,320 --> 00:41:37,200
particular case this next hub at bgp

880
00:41:37,200 --> 00:41:41,180
Exit point thank you

881
00:41:44,160 --> 00:41:47,700
hey ceiling of Cisco I I think this

882
00:41:47,700 --> 00:41:49,260
attribute

883
00:41:49,260 --> 00:41:50,760
doesn't

884
00:41:50,760 --> 00:41:53,460
affect the packing any differently from

885
00:41:53,460 --> 00:41:56,520
any other attribute

886
00:41:56,520 --> 00:41:59,040
at a high level I don't see why we need

887
00:41:59,040 --> 00:42:02,700
to rename the next top just oh just to

888
00:42:02,700 --> 00:42:04,440
create create or come up with something

889
00:42:04,440 --> 00:42:06,480
different and the next top is a required

890
00:42:06,480 --> 00:42:09,000
attribute so you're it it seems much

891
00:42:09,000 --> 00:42:11,280
more invasive than it needs to be okay

892
00:42:11,280 --> 00:42:13,440
so the reason I'm asking for that is

893
00:42:13,440 --> 00:42:16,079
simply because lots of drafts associated

894
00:42:16,079 --> 00:42:20,400
with next hop you can propagate the um

895
00:42:20,400 --> 00:42:24,359
the analyz we see from next domain and

896
00:42:24,359 --> 00:42:26,520
probably get down this is really so so

897
00:42:26,520 --> 00:42:28,619
you want to encode it differently too

898
00:42:28,619 --> 00:42:30,540
you want to say you have to have a next

899
00:42:30,540 --> 00:42:33,180
top but it has to be of this type we

900
00:42:33,180 --> 00:42:35,220
want to differentiate the next hub which

901
00:42:35,220 --> 00:42:38,220
represents the transit node versus this

902
00:42:38,220 --> 00:42:40,260
is just the end point right without any

903
00:42:40,260 --> 00:42:41,339
without

904
00:42:41,339 --> 00:42:44,099
saying that I'm supporting this you

905
00:42:44,099 --> 00:42:46,560
could just associate this different

906
00:42:46,560 --> 00:42:48,540
Behavior with this new attribute you

907
00:42:48,540 --> 00:42:51,000
have rather than trying to define the

908
00:42:51,000 --> 00:42:52,680
new Next Top type that's what I'm saying

909
00:42:52,680 --> 00:42:53,940
I mean it would be you know it would be

910
00:42:53,940 --> 00:42:55,859
like I'm saying it would you know next

911
00:42:55,859 --> 00:42:58,560
top is required you're you're saying

912
00:42:58,560 --> 00:43:00,240
okay it's required but you can have this

913
00:43:00,240 --> 00:43:02,280
type or this type it's more

914
00:43:02,280 --> 00:43:05,280
it's a bigger change to bgp okay maybe a

915
00:43:05,280 --> 00:43:07,440
fine Distributors to say this is

916
00:43:07,440 --> 00:43:09,599
particular next how we are talking about

917
00:43:09,599 --> 00:43:13,859
just okay thank you for the input any

918
00:43:13,859 --> 00:43:16,200
other questions

919
00:43:16,200 --> 00:43:18,660
thank you okay thank you very much I

920
00:43:18,660 --> 00:43:20,700
hope you guys can come to the camp bar

921
00:43:20,700 --> 00:43:24,859
for after this in Richmond four

922
00:43:25,440 --> 00:43:28,880
policy extensions

923
00:43:41,339 --> 00:43:44,299
SSG

924
00:43:44,339 --> 00:43:47,520
yes Orca you see

925
00:43:47,520 --> 00:43:50,520
hello

926
00:43:55,740 --> 00:43:58,160
sorry

927
00:43:59,700 --> 00:44:02,359
please continue

928
00:44:05,040 --> 00:44:09,020
okay uh hello

929
00:44:11,640 --> 00:44:14,480
we can hear you

930
00:44:24,060 --> 00:44:26,240
foreign

931
00:44:26,579 --> 00:44:29,839
we've lost the speaker

932
00:44:42,079 --> 00:44:45,000
hello can you help me

933
00:44:45,000 --> 00:44:47,900
we can hear you

934
00:44:49,319 --> 00:44:50,700
okay

935
00:44:50,700 --> 00:44:56,000
uh my topic is the bdp

936
00:45:02,520 --> 00:45:05,960
we've lost your microphone again

937
00:45:23,060 --> 00:45:24,900
can't wait

938
00:45:24,900 --> 00:45:28,020
can you hear me please turn to the next

939
00:45:28,020 --> 00:45:30,500
page

940
00:45:32,880 --> 00:45:36,300
okay as we know bdp can use the two

941
00:45:36,300 --> 00:45:39,420
propagate as a policy candidate pass to

942
00:45:39,420 --> 00:45:42,980
the head and nose in the net

943
00:45:42,980 --> 00:45:47,610
policy encoding structure okay

944
00:45:47,610 --> 00:45:47,880
[Music]

945
00:45:47,880 --> 00:45:49,880
um

946
00:46:10,140 --> 00:46:13,200
but in some cases the VPN router needs

947
00:46:13,200 --> 00:46:15,660
to choose the next hope according to the

948
00:46:15,660 --> 00:46:19,079
IDP metric of each as a policy for

949
00:46:19,079 --> 00:46:23,400
example in this scenario on pe1 there

950
00:46:23,400 --> 00:46:26,700
The Vaping routers to C2 has two

951
00:46:26,700 --> 00:46:31,380
different next hope PS3 and P4 each have

952
00:46:31,380 --> 00:46:33,859
one

953
00:46:40,500 --> 00:46:42,240
oh

954
00:46:42,240 --> 00:46:46,819
both as a policies that is

955
00:47:00,660 --> 00:47:05,060
awesome G do you want to press it

956
00:47:05,960 --> 00:47:09,020
all right

957
00:47:12,720 --> 00:47:14,700
I guess the audio is taking that longer

958
00:47:14,700 --> 00:47:16,819
path

959
00:47:16,819 --> 00:47:20,420
this was the devil

960
00:47:24,300 --> 00:47:25,880
okay

961
00:47:25,880 --> 00:47:29,819
I will present on behalf of my colleague

962
00:47:29,819 --> 00:47:31,740
okay this is about the motivation

963
00:47:31,740 --> 00:47:34,319
problem statement because for different

964
00:47:34,319 --> 00:47:36,900
vaping routes if there are different

965
00:47:36,900 --> 00:47:38,700
types of policies available in the

966
00:47:38,700 --> 00:47:42,599
network to different uh PES the webinars

967
00:47:42,599 --> 00:47:44,700
may need to choose the next hub and the

968
00:47:44,700 --> 00:47:47,400
as a policy according to the igb metric

969
00:47:47,400 --> 00:47:50,220
out as a policy and this figure just

970
00:47:50,220 --> 00:47:52,200
gives the example

971
00:47:52,200 --> 00:47:54,799
okay

972
00:47:59,060 --> 00:48:03,440
this laptop kicked off we should

973
00:48:05,579 --> 00:48:08,240
I know

974
00:48:09,660 --> 00:48:11,400
I lost that

975
00:48:11,400 --> 00:48:14,300
let me right here

976
00:48:14,300 --> 00:48:18,619
on pulse extensions

977
00:48:22,020 --> 00:48:25,560
okay let me continue okay so in the

978
00:48:25,560 --> 00:48:28,859
example showing this picture uh on pe1

979
00:48:28,859 --> 00:48:32,099
The Vaping route to the C2 have

980
00:48:32,099 --> 00:48:35,700
different networks and P3 and P4 and for

981
00:48:35,700 --> 00:48:38,760
each Nest Hub there is one as a policy a

982
00:48:38,760 --> 00:48:41,520
policy one and I have policy two both as

983
00:48:41,520 --> 00:48:43,740
a policies satisfy the delay and

984
00:48:43,740 --> 00:48:45,599
bandwidth constraints and they are

985
00:48:45,599 --> 00:48:47,640
candidate for the to be used for this

986
00:48:47,640 --> 00:48:51,359
weapon route and according to ig metric

987
00:48:51,359 --> 00:48:54,960
uh the there are kind of different RGB

988
00:48:54,960 --> 00:48:58,859
metric to reach the different Pino's by

989
00:48:58,859 --> 00:49:01,319
following this as a policies for example

990
00:49:01,319 --> 00:49:04,319
for the first one the iso policy one the

991
00:49:04,319 --> 00:49:08,460
pass from P1 through P1 to P3 the cost

992
00:49:08,460 --> 00:49:12,480
is uh of the igp 20 wherefore the second

993
00:49:12,480 --> 00:49:15,300
as a policy the igp metric for the

994
00:49:15,300 --> 00:49:18,660
actual pass will be 120. so in this case

995
00:49:18,660 --> 00:49:21,480
a P1 would prefer to choose the next hub

996
00:49:21,480 --> 00:49:23,700
according to the I3 metric and use the

997
00:49:23,700 --> 00:49:25,380
asset policy one for the package for

998
00:49:25,380 --> 00:49:28,859
warning uh in this case and as our the

999
00:49:28,859 --> 00:49:30,480
network controller we need to deliver

1000
00:49:30,480 --> 00:49:33,660
the igp metric for of the SI policies

1001
00:49:33,660 --> 00:49:36,540
when it advertised as a policy to the

1002
00:49:36,540 --> 00:49:40,560
Ingress node okay let's click please

1003
00:49:40,560 --> 00:49:43,560
so here is the proposed extension uh

1004
00:49:43,560 --> 00:49:46,800
basically uh we propose to add a metric

1005
00:49:46,800 --> 00:49:50,220
subtlv to the bgpsi policy so that it

1006
00:49:50,220 --> 00:49:52,680
will be used as a subtlv of the segment

1007
00:49:52,680 --> 00:49:56,280
list as showing this diagram

1008
00:49:56,280 --> 00:49:59,300
okay next page

1009
00:50:00,319 --> 00:50:03,960
okay uh here is the format of the Matrix

1010
00:50:03,960 --> 00:50:07,859
of toe and the type is uh to be defined

1011
00:50:07,859 --> 00:50:10,619
and allocated by Diana the lens of this

1012
00:50:10,619 --> 00:50:14,339
tlv is a six octite uh there's one flag

1013
00:50:14,339 --> 00:50:17,040
field but none of them are defined in

1014
00:50:17,040 --> 00:50:18,660
this version

1015
00:50:18,660 --> 00:50:21,000
for the metric types uh there's one

1016
00:50:21,000 --> 00:50:23,520
octet field to identify the type of the

1017
00:50:23,520 --> 00:50:27,180
metric used for this metric sub goe and

1018
00:50:27,180 --> 00:50:29,520
on the right side we list several code

1019
00:50:29,520 --> 00:50:31,560
points for the metric types including

1020
00:50:31,560 --> 00:50:34,680
the RGB metric the minimum minimum

1021
00:50:34,680 --> 00:50:36,839
unidirectional link delay and the T

1022
00:50:36,839 --> 00:50:39,480
metric also the Hub count which can be

1023
00:50:39,480 --> 00:50:41,760
used as a metric for the NASA policy

1024
00:50:41,760 --> 00:50:43,800
path selection

1025
00:50:43,800 --> 00:50:47,160
uh the Metro value is for octet value to

1026
00:50:47,160 --> 00:50:49,440
indicate the magic of the past computed

1027
00:50:49,440 --> 00:50:52,260
uh going through the asset policy

1028
00:50:52,260 --> 00:50:55,020
okay next page

1029
00:50:55,020 --> 00:50:58,520
so this is the procedure of the metric

1030
00:50:58,520 --> 00:51:00,599
using of the metric for the past

1031
00:51:00,599 --> 00:51:03,420
selection so in this case uh the next

1032
00:51:03,420 --> 00:51:07,859
hop to P3 from P1 we use as a policy one

1033
00:51:07,859 --> 00:51:11,339
is an igp metric 20 and for asset policy

1034
00:51:11,339 --> 00:51:14,880
2 the metric is 120. in this case as a

1035
00:51:14,880 --> 00:51:16,980
pe1 will choose the next hub according

1036
00:51:16,980 --> 00:51:18,960
to the HP metric carried in the asset

1037
00:51:18,960 --> 00:51:21,780
policy and the result next cup will be

1038
00:51:21,780 --> 00:51:23,579
the P3

1039
00:51:23,579 --> 00:51:27,020
next next slide please

1040
00:51:27,119 --> 00:51:30,780
so when as a policy hand and node gets a

1041
00:51:30,780 --> 00:51:34,920
poly segment list with metric so uh it

1042
00:51:34,920 --> 00:51:37,020
will process metric how to preset the

1043
00:51:37,020 --> 00:51:39,720
metric is a local policy and the

1044
00:51:39,720 --> 00:51:42,359
candidate active credit pass of the

1045
00:51:42,359 --> 00:51:44,460
asset policy may have several segment

1046
00:51:44,460 --> 00:51:46,920
lists and each segment list may have

1047
00:51:46,920 --> 00:51:49,740
different metric so in this document we

1048
00:51:49,740 --> 00:51:53,400
recommend that the segment list in one

1049
00:51:53,400 --> 00:51:55,980
credit path to have the same metric type

1050
00:51:55,980 --> 00:51:58,500
and if the match value of the different

1051
00:51:58,500 --> 00:52:01,500
same list are different so can you pass

1052
00:52:01,500 --> 00:52:04,500
can use the maximum value as metric of

1053
00:52:04,500 --> 00:52:05,760
the candidate pass

1054
00:52:05,760 --> 00:52:08,339
and for the asset policy it can use the

1055
00:52:08,339 --> 00:52:11,220
metric value of the active Anthony path

1056
00:52:11,220 --> 00:52:14,460
so we have this

1057
00:52:14,460 --> 00:52:17,160
as a policy metric we used in the rod

1058
00:52:17,160 --> 00:52:18,660
selection

1059
00:52:18,660 --> 00:52:21,680
okay that's right

1060
00:52:22,260 --> 00:52:24,960
okay this here are the updates comparing

1061
00:52:24,960 --> 00:52:27,960
to the previous version uh we add some

1062
00:52:27,960 --> 00:52:29,720
Metric types like the minimal

1063
00:52:29,720 --> 00:52:31,920
unidirectional link delay metric type

1064
00:52:31,920 --> 00:52:34,319
and also the code points for different

1065
00:52:34,319 --> 00:52:37,500
metric types which are aligned with the

1066
00:52:37,500 --> 00:52:40,859
other magic type documents

1067
00:52:40,859 --> 00:52:42,839
also there are some texts about the

1068
00:52:42,839 --> 00:52:44,760
candy past metric calculation as we

1069
00:52:44,760 --> 00:52:47,460
described in the previous slides

1070
00:52:47,460 --> 00:52:51,020
okay next page

1071
00:52:54,359 --> 00:52:57,660
okay for next steps uh we will welcome

1072
00:52:57,660 --> 00:53:00,480
first comments and questions and since

1073
00:53:00,480 --> 00:53:02,760
it's a very straightforward document

1074
00:53:02,760 --> 00:53:06,000
would like to consider to get it adopted

1075
00:53:06,000 --> 00:53:07,619
by working group

1076
00:53:07,619 --> 00:53:08,760
okay

1077
00:53:08,760 --> 00:53:12,240
comments you have a question from k109

1078
00:53:12,240 --> 00:53:14,280
okay

1079
00:53:14,280 --> 00:53:18,540
uh hi Jay uh thanks for the draft uh a

1080
00:53:18,540 --> 00:53:21,480
question uh why not have the metric at

1081
00:53:21,480 --> 00:53:24,119
the candidate path level uh because

1082
00:53:24,119 --> 00:53:26,640
that's what's going to be used anyway is

1083
00:53:26,640 --> 00:53:28,859
there a value in doing it per segment

1084
00:53:28,859 --> 00:53:30,960
list

1085
00:53:30,960 --> 00:53:34,920
yeah actually uh here the metric of the

1086
00:53:34,920 --> 00:53:38,359
path is to follow the

1087
00:53:38,359 --> 00:53:42,300
ultrometric of the computed path so it

1088
00:53:42,300 --> 00:53:44,520
is possible that for different segment

1089
00:53:44,520 --> 00:53:47,280
lists the measure can be different

1090
00:53:47,280 --> 00:53:52,859
so that's why we have proposed to have a

1091
00:53:52,859 --> 00:53:55,740
different a separate metric for separate

1092
00:53:55,740 --> 00:53:59,160
segment list and what can it pass it can

1093
00:53:59,160 --> 00:54:02,760
choose the maximum value of the metric

1094
00:54:02,760 --> 00:54:05,400
of the segment list

1095
00:54:05,400 --> 00:54:07,980
right I agree with you my question was

1096
00:54:07,980 --> 00:54:11,460
for the use case that you mentioned uh

1097
00:54:11,460 --> 00:54:13,559
it will be only at the candidate path

1098
00:54:13,559 --> 00:54:16,079
level right so do you have a use case or

1099
00:54:16,079 --> 00:54:18,599
a requirement in mind why we need to do

1100
00:54:18,599 --> 00:54:20,880
it on a per candidate path

1101
00:54:20,880 --> 00:54:23,160
uh and I'm just referring to the use

1102
00:54:23,160 --> 00:54:25,020
case in the draft that you just

1103
00:54:25,020 --> 00:54:28,020
described yeah in the use case there's

1104
00:54:28,020 --> 00:54:30,359
just uh maybe just one segment list in

1105
00:54:30,359 --> 00:54:32,099
the candid past but when you have

1106
00:54:32,099 --> 00:54:35,700
multiple assignment lists uh

1107
00:54:35,700 --> 00:54:38,579
it is probably you ingressional may need

1108
00:54:38,579 --> 00:54:41,160
to know all these metrics uh so that it

1109
00:54:41,160 --> 00:54:41,940
can

1110
00:54:41,940 --> 00:54:45,540
get the actual

1111
00:54:45,540 --> 00:54:50,460
uh metric for the Kenny pass and

1112
00:54:50,460 --> 00:54:52,680
maybe that is uh you give more

1113
00:54:52,680 --> 00:54:54,480
information to the Ingress to make the

1114
00:54:54,480 --> 00:54:56,339
decision

1115
00:54:56,339 --> 00:54:58,319
okay I think we can discuss offline

1116
00:54:58,319 --> 00:55:01,640
thank you okay sure

1117
00:55:02,339 --> 00:55:05,779
do we have any further questions

1118
00:55:06,119 --> 00:55:08,280
so we're waiting at the queue have you

1119
00:55:08,280 --> 00:55:10,619
actually had discussion in Spring about

1120
00:55:10,619 --> 00:55:12,300
this document

1121
00:55:12,300 --> 00:55:16,260
uh actually not yet but uh

1122
00:55:16,260 --> 00:55:18,420
actually we we see that metric

1123
00:55:18,420 --> 00:55:21,500
information have been

1124
00:55:21,500 --> 00:55:24,480
distributed from the devices to the

1125
00:55:24,480 --> 00:55:27,780
controller via bgprs in the uh the draft

1126
00:55:27,780 --> 00:55:30,480
Academy presented in the beginning so we

1127
00:55:30,480 --> 00:55:32,700
think for asset policy

1128
00:55:32,700 --> 00:55:35,760
uh this distribution from controller to

1129
00:55:35,760 --> 00:55:38,760
the a node that this information will be

1130
00:55:38,760 --> 00:55:40,800
also needed yeah

1131
00:55:40,800 --> 00:55:42,660
okay

1132
00:55:42,660 --> 00:55:44,579
so we'd encourage you to you know take

1133
00:55:44,579 --> 00:55:46,619
the spring to discuss uh we see that

1134
00:55:46,619 --> 00:55:48,180
Guyana has joined the microphone queue

1135
00:55:48,180 --> 00:55:49,859
yeah

1136
00:55:49,859 --> 00:55:50,640
um

1137
00:55:50,640 --> 00:55:53,520
yes um I was going to ask the question I

1138
00:55:53,520 --> 00:55:55,260
guess Jeffrey you had asked whether this

1139
00:55:55,260 --> 00:55:56,640
had been taken to the spring working

1140
00:55:56,640 --> 00:55:58,800
group to see that I cannot hear you

1141
00:55:58,800 --> 00:56:00,240
clearly

1142
00:56:00,240 --> 00:56:04,020
he's uh can you hear me louder

1143
00:56:04,020 --> 00:56:05,880
you're very quiet

1144
00:56:05,880 --> 00:56:08,839
can you hear me

1145
00:56:09,780 --> 00:56:12,540
yes what I was saying was um I I was

1146
00:56:12,540 --> 00:56:14,220
actually about to ask the same question

1147
00:56:14,220 --> 00:56:17,160
that Jeff was asking um whether this has

1148
00:56:17,160 --> 00:56:20,660
been taken to the spring working group

1149
00:56:23,520 --> 00:56:26,280
his question was can you hear me same

1150
00:56:26,280 --> 00:56:27,180
question

1151
00:56:27,180 --> 00:56:29,880
okay I think uh we can bring it to

1152
00:56:29,880 --> 00:56:34,040
Spring for some discussion yeah

1153
00:56:39,900 --> 00:56:42,540
anything else again

1154
00:56:42,540 --> 00:56:44,779
foreign

1155
00:56:48,059 --> 00:56:52,700
okay I think that's this presentation

1156
00:57:04,559 --> 00:57:09,200
okay again this is your presentation

1157
00:57:15,240 --> 00:57:16,500
and we're going to have to ask you to

1158
00:57:16,500 --> 00:57:17,700
speak as close to your microphone as

1159
00:57:17,700 --> 00:57:21,379
possible you are running a little quiet

1160
00:57:24,599 --> 00:57:28,280
also we do not currently hear you

1161
00:57:31,980 --> 00:57:34,339
okay

1162
00:57:48,240 --> 00:57:52,200
again there's unshared

1163
00:57:52,200 --> 00:57:55,640
make sure you're still connected

1164
00:58:10,260 --> 00:58:11,880
so again your friend shared your

1165
00:58:11,880 --> 00:58:13,319
microphone please reshare and see if

1166
00:58:13,319 --> 00:58:15,000
that works

1167
00:58:15,000 --> 00:58:16,500
can you help me

1168
00:58:16,500 --> 00:58:18,000
we can hear you now

1169
00:58:18,000 --> 00:58:21,900
okay thank you all right

1170
00:58:21,900 --> 00:58:23,720
um hi my name is

1171
00:58:23,720 --> 00:58:26,640
I'm with Verizon

1172
00:58:26,640 --> 00:58:28,920
and I will be presenting this draft on

1173
00:58:28,920 --> 00:58:31,619
the co-authors

1174
00:58:31,619 --> 00:58:34,400
next slide

1175
00:58:37,440 --> 00:58:40,079
so the motivation behind this draft job

1176
00:58:40,079 --> 00:58:42,240
so an ITF standard exists today for

1177
00:58:42,240 --> 00:58:45,359
connecting IPv6 Islands over an ipv4

1178
00:58:45,359 --> 00:58:46,319
core

1179
00:58:46,319 --> 00:58:48,660
however standard does not exist for

1180
00:58:48,660 --> 00:58:51,480
connecting ipv4 Islands or the IPv6 core

1181
00:58:51,480 --> 00:58:54,180
so this draft provides a specification

1182
00:58:54,180 --> 00:58:57,180
of connecting ipv4 Islands over 1906

1183
00:58:57,180 --> 00:58:58,140
core

1184
00:58:58,140 --> 00:59:00,599
as an operator migrates to a single

1185
00:59:00,599 --> 00:59:04,619
protocol IPv6 only core for RFC 5565

1186
00:59:04,619 --> 00:59:07,380
software mesh framework which involves a

1187
00:59:07,380 --> 00:59:09,900
six to four tunnel ipv is fixed package

1188
00:59:09,900 --> 00:59:12,680
over an ipv4 called 6p

1189
00:59:12,680 --> 00:59:15,960
and now with this draft four to six

1190
00:59:15,960 --> 00:59:19,079
tunnel ipv4 package over IPv6 core now

1191
00:59:19,079 --> 00:59:22,920
called 4p the name 6p term is defined

1192
00:59:22,920 --> 00:59:25,380
for tunneling IPv6 pet labeled packets

1193
00:59:25,380 --> 00:59:28,440
over an ipv4 core and now with this

1194
00:59:28,440 --> 00:59:31,920
draft 4pe's term to Define tunneling of

1195
00:59:31,920 --> 00:59:36,660
ipv4 labeled packets over an IPv6 port

1196
00:59:36,660 --> 00:59:39,740
next slide

1197
00:59:43,020 --> 00:59:46,740
so the in this design the 4p routers

1198
00:59:46,740 --> 00:59:49,380
exchange ipv4 reachability transparently

1199
00:59:49,380 --> 00:59:52,079
tunneled over an ipv4 core using

1200
00:59:52,079 --> 00:59:55,020
multi-portical bgp using bgp Next Top

1201
00:59:55,020 --> 00:59:57,299
Field to convey the action usage address

1202
00:59:57,299 --> 00:59:59,760
of the 4p router so that they

1203
00:59:59,760 --> 01:00:02,220
dynamically established tunnels the npv6

1204
01:00:02,220 --> 01:00:04,980
signal of mpls LSP can be utilized

1205
01:00:04,980 --> 01:00:07,920
without explicit tunnel configuration so

1206
01:00:07,920 --> 01:00:09,599
basically this is signaling the top most

1207
01:00:09,599 --> 01:00:12,180
legal label for that for the loop effect

1208
01:00:12,180 --> 01:00:13,920
label binding

1209
01:00:13,920 --> 01:00:21,059
four PE uses RC 8950 uh for for the six

1210
01:00:21,059 --> 01:00:24,180
six or 32 byte next stop encoding for

1211
01:00:24,180 --> 01:00:27,599
the for the for the labeled unicast

1212
01:00:27,599 --> 01:00:29,640
the Ingress p and egress P routers

1213
01:00:29,640 --> 01:00:32,760
binding bind the label to all ipv4

1214
01:00:32,760 --> 01:00:36,000
pre-existing students per RFC 8277 bgplu

1215
01:00:36,000 --> 01:00:39,059
this is for the service label bottom

1216
01:00:39,059 --> 01:00:41,579
stack uh creating a two level label

1217
01:00:41,579 --> 01:00:42,720
stack

1218
01:00:42,720 --> 01:00:45,720
mode

1219
01:00:47,640 --> 01:00:50,339
and then 4p designs also extensible to

1220
01:00:50,339 --> 01:00:52,920
support all various options and race

1221
01:00:52,920 --> 01:00:59,819
option A B C and A B uh 4p design is

1222
01:00:59,819 --> 01:01:03,359
also extensible to support uh newer

1223
01:01:03,359 --> 01:01:05,099
Technologies such as segment routing so

1224
01:01:05,099 --> 01:01:07,200
it supports mpls that exists today as

1225
01:01:07,200 --> 01:01:09,540
well as newer Technologies such as

1226
01:01:09,540 --> 01:01:12,960
srmpos as well as srv6

1227
01:01:12,960 --> 01:01:16,400
thank you next slide

1228
01:01:16,740 --> 01:01:21,500
so this diagram here depicts a

1229
01:01:21,500 --> 01:01:27,480
depicts 6pe RFC 4798 so it so here what

1230
01:01:27,480 --> 01:01:30,720
happens is you have the transport labels

1231
01:01:30,720 --> 01:01:33,119
first signaled from the Ingress 6pd

1232
01:01:33,119 --> 01:01:36,599
router to the US 6p router and this is

1233
01:01:36,599 --> 01:01:39,420
just a topmost label transport uh

1234
01:01:39,420 --> 01:01:43,500
connect label binding to the uspe and

1235
01:01:43,500 --> 01:01:46,079
then the second the service label bottom

1236
01:01:46,079 --> 01:01:49,680
stack label bgplus safety four for the

1237
01:01:49,680 --> 01:01:52,619
label binding for all IPv6 prefixes

1238
01:01:52,619 --> 01:01:55,980
tunnel over an ipv4 LSP

1239
01:01:55,980 --> 01:01:58,880
next slide

1240
01:02:01,859 --> 01:02:05,160
so so now with six we're now with four

1241
01:02:05,160 --> 01:02:07,980
PE we're connecting ipv for Ireland over

1242
01:02:07,980 --> 01:02:10,200
IPv6 mpls core

1243
01:02:10,200 --> 01:02:12,960
so here what we're doing we're similarly

1244
01:02:12,960 --> 01:02:16,140
we the 4p routers the USP router to the

1245
01:02:16,140 --> 01:02:19,680
ESP router we're signaling a an LSP to

1246
01:02:19,680 --> 01:02:22,020
the e-respeed router we need back uh

1247
01:02:22,020 --> 01:02:23,760
connect label binding for the transport

1248
01:02:23,760 --> 01:02:24,960
label

1249
01:02:24,960 --> 01:02:27,180
and then the service label bottom of the

1250
01:02:27,180 --> 01:02:30,119
stack label we're we're using bgplus

1251
01:02:30,119 --> 01:02:32,760
thank you for legal creating a label

1252
01:02:32,760 --> 01:02:35,819
bind for all the i324 prefixes tunneled

1253
01:02:35,819 --> 01:02:38,940
over the ipd6 LSP

1254
01:02:38,940 --> 01:02:40,980
next slide

1255
01:02:40,980 --> 01:02:43,500
reminder you have one more minute

1256
01:02:43,500 --> 01:02:45,660
thanks

1257
01:02:45,660 --> 01:02:48,599
so this this draft is extensible to Sr

1258
01:02:48,599 --> 01:02:50,160
and pis

1259
01:02:50,160 --> 01:02:53,040
so with segment routing what happens is

1260
01:02:53,040 --> 01:02:55,920
the egress P signals the Ingress

1261
01:02:55,920 --> 01:02:58,680
Community with a VPN color and that VPN

1262
01:02:58,680 --> 01:03:02,880
caller is mapped to an Sr policy Sr

1263
01:03:02,880 --> 01:03:05,640
policy color of to color to intent

1264
01:03:05,640 --> 01:03:08,640
mapping and then the patches and

1265
01:03:08,640 --> 01:03:10,559
instantiated

1266
01:03:10,559 --> 01:03:13,740
uh to the prefix that you said of the uh

1267
01:03:13,740 --> 01:03:16,020
e recipe

1268
01:03:16,020 --> 01:03:19,700
and and then at the at the service layer

1269
01:03:19,700 --> 01:03:24,000
bgplu Sac E4 uh the all all the V4

1270
01:03:24,000 --> 01:03:26,579
prefixes are labeled and titled across

1271
01:03:26,579 --> 01:03:30,540
the IPv6 LSP next slide

1272
01:03:30,540 --> 01:03:33,359
this wraps is also extensible to srv6

1273
01:03:33,359 --> 01:03:37,339
and with with Sr V6 uh similar to the

1274
01:03:37,339 --> 01:03:40,020
srmpls we have the caller to intent

1275
01:03:40,020 --> 01:03:42,319
mapping that happens where the ESP

1276
01:03:42,319 --> 01:03:45,240
signals color for Destiny per

1277
01:03:45,240 --> 01:03:48,900
destination color or or per flow can

1278
01:03:48,900 --> 01:03:52,319
also is also supported from the USB in

1279
01:03:52,319 --> 01:03:55,619
USP color 1010 mapping and then the LSP

1280
01:03:55,619 --> 01:04:00,140
is built to the egress notes

1281
01:04:00,780 --> 01:04:03,780
um as well we had at the service layer

1282
01:04:03,780 --> 01:04:07,799
the RFC 9272 bgp service said prefix

1283
01:04:07,799 --> 01:04:10,980
attributes is encoded in the srv6 L3

1284
01:04:10,980 --> 01:04:14,520
Service tlv uh function and arguments

1285
01:04:14,520 --> 01:04:16,740
and function encoded into the function

1286
01:04:16,740 --> 01:04:21,299
field so section three of uh RC 9252

1287
01:04:21,299 --> 01:04:24,180
this is also described in the usrp6

1288
01:04:24,180 --> 01:04:26,299
programming RFC

1289
01:04:26,299 --> 01:04:31,260
1986 affection 3.7 of ndt4

1290
01:04:31,260 --> 01:04:33,180
next slide

1291
01:04:33,180 --> 01:04:36,480
I'd like to flip to the last slide last

1292
01:04:36,480 --> 01:04:39,079
slide thank you

1293
01:04:39,720 --> 01:04:42,540
so thank you I would like to request

1294
01:04:42,540 --> 01:04:44,760
feedback from the work group and then um

1295
01:04:44,760 --> 01:04:46,980
I would like to request

1296
01:04:46,980 --> 01:04:48,900
um I think the draft is fairly

1297
01:04:48,900 --> 01:04:50,280
straightforward

1298
01:04:50,280 --> 01:04:52,859
um it follows the uh the 6p Arc

1299
01:04:52,859 --> 01:04:56,040
architecture but is uh is extensible as

1300
01:04:56,040 --> 01:04:59,760
well to srmpls nsrv6

1301
01:04:59,760 --> 01:05:01,819
um so I'd like I'd like to

1302
01:05:01,819 --> 01:05:03,960
get some comments from the work group

1303
01:05:03,960 --> 01:05:05,640
and then uh queue up for possible

1304
01:05:05,640 --> 01:05:08,760
workers adoption thank you

1305
01:05:08,760 --> 01:05:10,619
thank you again we're over time

1306
01:05:10,619 --> 01:05:11,880
unfortunately so we're going to be

1307
01:05:11,880 --> 01:05:14,099
proceeding to the next presentation okay

1308
01:05:14,099 --> 01:05:16,700
thank you

1309
01:05:25,040 --> 01:05:27,480
actually this one was being presented by

1310
01:05:27,480 --> 01:05:30,240
Aji who is currently out of room uh

1311
01:05:30,240 --> 01:05:31,559
attending a different session for a

1312
01:05:31,559 --> 01:05:33,119
moment so I'll be skipping to the next

1313
01:05:33,119 --> 01:05:36,260
presentation and returning

1314
01:05:49,500 --> 01:05:52,500
hello

1315
01:05:56,160 --> 01:05:59,058
do you hear me

1316
01:05:59,819 --> 01:06:03,839
hello wait Chang we can hear you

1317
01:06:03,839 --> 01:06:04,859
okay

1318
01:06:04,859 --> 01:06:09,900
so uh thank you chair uh I will present

1319
01:06:09,900 --> 01:06:13,740
this um very simple draft

1320
01:06:13,740 --> 01:06:17,220
in this job that we hope to uh introduce

1321
01:06:17,220 --> 01:06:20,040
some potential risks caused by

1322
01:06:20,040 --> 01:06:23,640
redirection mechanism which have been

1323
01:06:23,640 --> 01:06:25,160
deployed in

1324
01:06:25,160 --> 01:06:29,779
operators networks next page

1325
01:06:31,099 --> 01:06:35,280
so uh as you know networks currently

1326
01:06:35,280 --> 01:06:38,579
become more complex and the traffic

1327
01:06:38,579 --> 01:06:39,859
burst

1328
01:06:39,859 --> 01:06:44,240
is more heavy that may cause

1329
01:06:44,240 --> 01:06:48,720
uh some Network performance issue in

1330
01:06:48,720 --> 01:06:54,058
order to solve those problems operators

1331
01:06:54,079 --> 01:06:59,539
rely on some automated traffic of the

1332
01:06:59,539 --> 01:07:02,339
optimization tools

1333
01:07:02,339 --> 01:07:05,339
uh which often use the redirection

1334
01:07:05,339 --> 01:07:09,420
mechanism such as bdp flow Spike

1335
01:07:09,420 --> 01:07:12,859
here we would like to

1336
01:07:12,859 --> 01:07:15,319
describe some

1337
01:07:15,319 --> 01:07:20,039
risks of the redirections which may be

1338
01:07:20,039 --> 01:07:21,260
caused by

1339
01:07:21,260 --> 01:07:22,940
misconfiguration

1340
01:07:22,940 --> 01:07:27,480
Network adjust Network failure or some

1341
01:07:27,480 --> 01:07:29,180
other factors

1342
01:07:29,180 --> 01:07:30,780
uh

1343
01:07:30,780 --> 01:07:33,140
this may be

1344
01:07:33,140 --> 01:07:35,039
caused by

1345
01:07:35,039 --> 01:07:38,539
uh manual operation all caused by

1346
01:07:38,539 --> 01:07:40,920
automated tools

1347
01:07:40,920 --> 01:07:46,460
so let's see those risks like next page

1348
01:07:47,760 --> 01:07:52,819
so here is um an example uh topology

1349
01:07:52,819 --> 01:07:56,339
there is one campus Network

1350
01:07:56,339 --> 01:08:00,140
do you hold to to

1351
01:08:00,140 --> 01:08:02,339
carrier Networks

1352
01:08:02,339 --> 01:08:06,119
the both ISP networks

1353
01:08:06,119 --> 01:08:12,140
um Marty AIS domains and interconnected

1354
01:08:12,140 --> 01:08:14,160
each other

1355
01:08:14,160 --> 01:08:17,540
the example traffic

1356
01:08:17,540 --> 01:08:22,799
is a return user and the server

1357
01:08:22,799 --> 01:08:26,060
the normal traffic will

1358
01:08:26,060 --> 01:08:33,060
Traverse through the uh both ISP Network

1359
01:08:33,060 --> 01:08:36,080
so next page

1360
01:08:38,100 --> 01:08:43,500
so the first potential risk is the

1361
01:08:43,500 --> 01:08:44,359
traffic

1362
01:08:44,359 --> 01:08:48,799
deterior and the EXP exposure

1363
01:08:48,799 --> 01:08:53,580
uh so sum is configuration may cause the

1364
01:08:53,580 --> 01:08:58,859
traffic it's a directed from AIS

1365
01:08:58,859 --> 01:09:00,679
65

1366
01:09:00,679 --> 01:09:03,799
uh 104 to

1367
01:09:03,799 --> 01:09:06,899
as65 500.

1368
01:09:06,899 --> 01:09:11,238
then the value free principle may be

1369
01:09:11,238 --> 01:09:15,960
validate and the traffic in providers

1370
01:09:15,960 --> 01:09:19,738
network will be misdirected to the

1371
01:09:19,738 --> 01:09:23,299
custom Network which will cause

1372
01:09:23,299 --> 01:09:26,759
detours and explosion

1373
01:09:26,759 --> 01:09:28,979
next page

1374
01:09:28,979 --> 01:09:34,979
so the second potential risk is the

1375
01:09:34,979 --> 01:09:36,500
black hole

1376
01:09:36,500 --> 01:09:38,040
uh

1377
01:09:38,040 --> 01:09:42,359
so similar with the risk one if

1378
01:09:42,359 --> 01:09:46,198
some misconfiguration uh

1379
01:09:46,198 --> 01:09:47,399
happen

1380
01:09:47,399 --> 01:09:49,580
that will cause

1381
01:09:49,580 --> 01:09:54,840
the traffic is directed such as from the

1382
01:09:54,840 --> 01:09:58,940
65 104 to

1383
01:09:58,940 --> 01:10:02,520
as65 500

1384
01:10:02,520 --> 01:10:07,739
and the it has a 6500 may not be have a

1385
01:10:07,739 --> 01:10:12,719
rotate to the destination server then

1386
01:10:12,719 --> 01:10:14,600
the traffic will be

1387
01:10:14,600 --> 01:10:16,320
discussed

1388
01:10:16,320 --> 01:10:21,300
that will result in a traffic black hole

1389
01:10:21,300 --> 01:10:24,380
the next page

1390
01:10:24,780 --> 01:10:29,699
in the the third potential risk is the

1391
01:10:29,699 --> 01:10:31,260
traffic Loop

1392
01:10:31,260 --> 01:10:35,580
let's see the uh

1393
01:10:35,580 --> 01:10:39,960
orange traffic line due to some miscon

1394
01:10:39,960 --> 01:10:41,820
configuration

1395
01:10:41,820 --> 01:10:47,239
traffic may be redirected from ai's

1396
01:10:47,239 --> 01:10:49,100
65

1397
01:10:49,100 --> 01:10:52,280
03 to

1398
01:10:52,280 --> 01:10:54,960
as65 500

1399
01:10:54,960 --> 01:10:56,719
and the

1400
01:10:56,719 --> 01:10:58,699
AIS

1401
01:10:58,699 --> 01:11:02,540
6500 learns the

1402
01:11:02,540 --> 01:11:07,519
routing to server from as

1403
01:11:09,000 --> 01:11:11,600
all right

1404
01:11:37,640 --> 01:11:39,239
protocols

1405
01:11:39,239 --> 01:11:45,120
yes 65 500 will send the packets back to

1406
01:11:45,120 --> 01:11:48,300
the as6503

1407
01:11:48,300 --> 01:11:53,719
then the traffic Loop will uh occurs

1408
01:11:53,719 --> 01:11:57,920
uh so next page

1409
01:11:59,820 --> 01:12:02,340
in the uh

1410
01:12:02,340 --> 01:12:03,659
the

1411
01:12:03,659 --> 01:12:08,400
last potential risk here is uh operation

1412
01:12:08,400 --> 01:12:10,560
and a maintenance risk

1413
01:12:10,560 --> 01:12:14,040
so you know the traffic redirection may

1414
01:12:14,040 --> 01:12:18,420
cause uh inconsistency between the

1415
01:12:18,420 --> 01:12:22,199
control plan and the forwarding plan so

1416
01:12:22,199 --> 01:12:24,199
if the networker

1417
01:12:24,199 --> 01:12:28,460
operation element in control system

1418
01:12:28,460 --> 01:12:31,140
uh doesn't

1419
01:12:31,140 --> 01:12:33,179
guide the traffic redirection

1420
01:12:33,179 --> 01:12:36,659
information in the network

1421
01:12:36,659 --> 01:12:39,239
some

1422
01:12:39,239 --> 01:12:43,080
um predictable risk will occur during

1423
01:12:43,080 --> 01:12:46,100
the traffic optimization

1424
01:12:46,100 --> 01:12:52,460
so uh in summary uh because the networks

1425
01:12:52,460 --> 01:12:58,159
uh become more com complex

1426
01:12:58,280 --> 01:12:59,960
the

1427
01:12:59,960 --> 01:13:04,020
uh redirection mechanism

1428
01:13:04,020 --> 01:13:06,780
often are used

1429
01:13:06,780 --> 01:13:10,380
as I mentioned as mentioned above the

1430
01:13:10,380 --> 01:13:14,400
mechanism of the redirection maybe leads

1431
01:13:14,400 --> 01:13:15,960
to some risks

1432
01:13:15,960 --> 01:13:19,640
so from operator's perspective

1433
01:13:19,640 --> 01:13:24,239
it's not sufficient to rely on the

1434
01:13:24,239 --> 01:13:25,880
traditional way

1435
01:13:25,880 --> 01:13:30,840
some object operation rules to avoid

1436
01:13:30,840 --> 01:13:32,699
those risks

1437
01:13:32,699 --> 01:13:37,860
maybe it's necessary to exploit some new

1438
01:13:37,860 --> 01:13:40,260
Technical Solutions

1439
01:13:40,260 --> 01:13:42,380
such as

1440
01:13:42,380 --> 01:13:45,659
redirection configuration verification

1441
01:13:45,659 --> 01:13:46,980
tools

1442
01:13:46,980 --> 01:13:51,840
or some protocol extension to sync up

1443
01:13:51,840 --> 01:13:55,860
the forwarding plane and control it or

1444
01:13:55,860 --> 01:14:00,320
some past virtualization tools to reduce

1445
01:14:00,320 --> 01:14:05,940
those risk mentioned in this draft this

1446
01:14:05,940 --> 01:14:11,280
draft cannot give some Direct Solutions

1447
01:14:11,280 --> 01:14:14,540
but uh one hand

1448
01:14:14,540 --> 01:14:18,019
the redirection

1449
01:14:25,100 --> 01:14:28,219
this is

1450
01:14:28,219 --> 01:14:31,219
thank you

1451
01:14:48,739 --> 01:14:52,860
in ITF can contribute to something on

1452
01:14:52,860 --> 01:14:56,219
the ad to help operators to solve this

1453
01:14:56,219 --> 01:15:00,679
issue so next page

1454
01:15:01,860 --> 01:15:05,280
oh that's all in the any question or

1455
01:15:05,280 --> 01:15:07,699
comments

1456
01:15:09,659 --> 01:15:12,540
so we're waiting for questions uh what

1457
01:15:12,540 --> 01:15:15,000
is your intention for the future of this

1458
01:15:15,000 --> 01:15:17,420
document

1459
01:15:19,320 --> 01:15:23,420
uh so uh in fact from my point of view

1460
01:15:23,420 --> 01:15:29,340
uh we found the summer risks in the uh

1461
01:15:29,340 --> 01:15:34,280
uh this month this moment we have not

1462
01:15:34,280 --> 01:15:39,420
uh explode the solutions we hope

1463
01:15:39,420 --> 01:15:43,860
the peoples here can concede this

1464
01:15:43,860 --> 01:15:47,000
produce problems and provide us and

1465
01:15:47,000 --> 01:15:50,640
solutions or provide some ideas for the

1466
01:15:50,640 --> 01:15:52,699
future

1467
01:15:54,719 --> 01:15:57,960
okay I would suggest that this might be

1468
01:15:57,960 --> 01:16:00,300
better work for the grow working group

1469
01:16:00,300 --> 01:16:03,420
so I'd encourage you to also solicit you

1470
01:16:03,420 --> 01:16:05,280
know your presentation there at some

1471
01:16:05,280 --> 01:16:08,219
point AC lindum's at the microphone you

1472
01:16:08,219 --> 01:16:09,300
see

1473
01:16:09,300 --> 01:16:12,300
Asylum Cisco Systems I just had uh one

1474
01:16:12,300 --> 01:16:13,920
comment here and I've talked to this

1475
01:16:13,920 --> 01:16:16,500
some people about this it seems almost

1476
01:16:16,500 --> 01:16:18,600
to imply and it's like the big elephant

1477
01:16:18,600 --> 01:16:20,699
in the room with flow spec that it's

1478
01:16:20,699 --> 01:16:22,560
being used not for it's an original

1479
01:16:22,560 --> 01:16:25,440
purpose but now it's being used as sort

1480
01:16:25,440 --> 01:16:27,420
of like an open Flow and people are

1481
01:16:27,420 --> 01:16:29,699
using it for their

1482
01:16:29,699 --> 01:16:32,159
routing mechanism instead and I think

1483
01:16:32,159 --> 01:16:35,040
that you know needs to kind of come out

1484
01:16:35,040 --> 01:16:37,679
if that's the intention and you know and

1485
01:16:37,679 --> 01:16:41,460
this this does a good uh by addressing

1486
01:16:41,460 --> 01:16:45,179
the redirection as if it were

1487
01:16:45,179 --> 01:16:47,219
maybe I've just missed it but it's it

1488
01:16:47,219 --> 01:16:48,900
appears to me that this is this is

1489
01:16:48,900 --> 01:16:50,760
happening and I'm wondering to what

1490
01:16:50,760 --> 01:16:53,219
extent it has and how much uh how many

1491
01:16:53,219 --> 01:16:55,679
people are if anybody how many people

1492
01:16:55,679 --> 01:16:57,600
are deploying controllers that use this

1493
01:16:57,600 --> 01:17:02,100
as a open Flow type protocol

1494
01:17:04,140 --> 01:17:08,159
uh so thank you I think

1495
01:17:08,159 --> 01:17:11,640
and open Flow Maybe

1496
01:17:11,640 --> 01:17:14,040
often used in

1497
01:17:14,040 --> 01:17:18,540
a data center Network and I did not

1498
01:17:18,540 --> 01:17:21,739
have some content

1499
01:17:21,739 --> 01:17:25,800
use the open flow in the such as router

1500
01:17:25,800 --> 01:17:29,659
based one network

1501
01:17:32,219 --> 01:17:34,560
okay hopefully we'll have additional

1502
01:17:34,560 --> 01:17:36,780
discussion on the mailing list AC would

1503
01:17:36,780 --> 01:17:38,340
you please repeat your comment there

1504
01:17:38,340 --> 01:17:40,860
maybe to start conversation about the

1505
01:17:40,860 --> 01:17:42,960
sort of traffic steering use case that's

1506
01:17:42,960 --> 01:17:44,940
obviously popular okay

1507
01:17:44,940 --> 01:17:46,620
thank you bye-bye

1508
01:17:46,620 --> 01:17:48,260
thank you

1509
01:17:48,260 --> 01:17:51,860
next is she

1510
01:17:55,739 --> 01:17:58,100
hello everyone

1511
01:17:58,100 --> 01:18:00,719
I'm going to give a presentation about

1512
01:18:00,719 --> 01:18:03,900
the draft pgp flow spec for iitm Network

1513
01:18:03,900 --> 01:18:06,719
slice traffic steering on behalf of the

1514
01:18:06,719 --> 01:18:08,520
courses here

1515
01:18:08,520 --> 01:18:10,980
okay next like this

1516
01:18:10,980 --> 01:18:14,340
okay a little bit about the background

1517
01:18:14,340 --> 01:18:17,159
we know that PHP flow spec provides the

1518
01:18:17,159 --> 01:18:19,440
mechanism to distribute the flow

1519
01:18:19,440 --> 01:18:22,440
specifications and the flow forwarding

1520
01:18:22,440 --> 01:18:24,600
actions to be performed to the match the

1521
01:18:24,600 --> 01:18:25,620
traffic

1522
01:18:25,620 --> 01:18:28,199
and in the context of itm network

1523
01:18:28,199 --> 01:18:30,960
slicing the network slice traffic needs

1524
01:18:30,960 --> 01:18:33,659
to be steered into an NRP to meet the

1525
01:18:33,659 --> 01:18:35,520
connectivity and also the performance

1526
01:18:35,520 --> 01:18:36,780
requirements

1527
01:18:36,780 --> 01:18:39,540
as defined in the item nether slice

1528
01:18:39,540 --> 01:18:41,179
framework draft

1529
01:18:41,179 --> 01:18:44,340
NRP is a collection of network resources

1530
01:18:44,340 --> 01:18:47,699
in the underlying Network and in the

1531
01:18:47,699 --> 01:18:49,860
data package an RP can be identified

1532
01:18:49,860 --> 01:18:54,000
using either resource Awards srcs or the

1533
01:18:54,000 --> 01:18:56,340
dedicated nrpid in the packet

1534
01:18:56,340 --> 01:18:59,400
uh so this document uh defines the bgp

1535
01:18:59,400 --> 01:19:01,739
flows back extensions for steering the

1536
01:19:01,739 --> 01:19:04,140
ITF net slice traffic into the

1537
01:19:04,140 --> 01:19:05,940
corresponding NRP

1538
01:19:05,940 --> 01:19:08,960
okay next page please

1539
01:19:08,960 --> 01:19:11,820
firstly we're talking about the matching

1540
01:19:11,820 --> 01:19:14,040
rules for the Network slash traffic

1541
01:19:14,040 --> 01:19:16,620
basically all the existing flow spec

1542
01:19:16,620 --> 01:19:19,080
components can be reused to match the

1543
01:19:19,080 --> 01:19:21,659
network style service traffic these

1544
01:19:21,659 --> 01:19:24,320
components are defined in the RFC

1545
01:19:24,320 --> 01:19:27,480
8955 and 8956

1546
01:19:27,480 --> 01:19:31,020
and in some other scenarios the packet

1547
01:19:31,020 --> 01:19:34,100
may already be encapsulated with an rpid

1548
01:19:34,100 --> 01:19:38,280
and and in this case the Ingress node

1549
01:19:38,280 --> 01:19:40,980
may need a new flow spec component to

1550
01:19:40,980 --> 01:19:43,199
match the nrpid in the packet

1551
01:19:43,199 --> 01:19:46,860
and format of the NRP ID component is

1552
01:19:46,860 --> 01:19:50,060
shown in this figure

1553
01:19:50,060 --> 01:19:53,239
this component encoding aligns with the

1554
01:19:53,239 --> 01:19:56,159
specification in flow spec version 2.

1555
01:19:56,159 --> 01:19:58,739
and in the flash field one flag is

1556
01:19:58,739 --> 01:20:01,020
defined in the current version the G

1557
01:20:01,020 --> 01:20:03,420
flat which is used to indicate whether

1558
01:20:03,420 --> 01:20:07,320
the NRP ID is a globally unique or is it

1559
01:20:07,320 --> 01:20:09,239
like a domain significant

1560
01:20:09,239 --> 01:20:12,600
and for octite identifier of the NRP is

1561
01:20:12,600 --> 01:20:14,460
also carrying this uh

1562
01:20:14,460 --> 01:20:16,140
component

1563
01:20:16,140 --> 01:20:18,679
okay

1564
01:20:19,260 --> 01:20:22,380
and regarding the necro slice traffic

1565
01:20:22,380 --> 01:20:25,500
steering actions uh basically the

1566
01:20:25,500 --> 01:20:27,960
traffic of the network slice can be

1567
01:20:27,960 --> 01:20:30,540
steered into an RP and then be forwarded

1568
01:20:30,540 --> 01:20:33,659
using two approaches the first one is we

1569
01:20:33,659 --> 01:20:37,080
can use a shortage path within the NRP

1570
01:20:37,080 --> 01:20:39,300
and in the second approach is we can use

1571
01:20:39,300 --> 01:20:41,580
a traffic engineered or te pass

1572
01:20:41,580 --> 01:20:43,860
associated with NRP

1573
01:20:43,860 --> 01:20:46,320
and in for the first case if we want to

1574
01:20:46,320 --> 01:20:49,739
steer the traffic to a shortest pass or

1575
01:20:49,739 --> 01:20:54,300
call it be pass within NRP we can use a

1576
01:20:54,300 --> 01:20:56,159
two approaches

1577
01:20:56,159 --> 01:20:58,380
if the resource aware segments are used

1578
01:20:58,380 --> 01:21:00,000
for the energy specific traffic

1579
01:21:00,000 --> 01:21:03,060
forwarding then the redirect to IP

1580
01:21:03,060 --> 01:21:06,120
action can be used to carry the resource

1581
01:21:06,120 --> 01:21:09,000
aware srcs of the egress node

1582
01:21:09,000 --> 01:21:12,239
and if the data plane NRP ID is carried

1583
01:21:12,239 --> 01:21:14,520
in the packet for the NRP specific

1584
01:21:14,520 --> 01:21:17,760
forwarding than a new encapsulate an

1585
01:21:17,760 --> 01:21:20,159
ipid action is defined in this document

1586
01:21:20,159 --> 01:21:23,280
and the format is shown in the following

1587
01:21:23,280 --> 01:21:24,239
figure

1588
01:21:24,239 --> 01:21:27,659
and here uh the NRP ID is carried in

1589
01:21:27,659 --> 01:21:30,360
this action and

1590
01:21:30,360 --> 01:21:34,199
a flag called E flat is used to indicate

1591
01:21:34,199 --> 01:21:36,960
whether the NRP ID should be

1592
01:21:36,960 --> 01:21:40,380
encapsulated in the outer IP header or

1593
01:21:40,380 --> 01:21:42,179
whether it should be used to replace the

1594
01:21:42,179 --> 01:21:44,760
existing an rpid in the packet

1595
01:21:44,760 --> 01:21:47,640
okay next slide please

1596
01:21:47,640 --> 01:21:50,040
for the second case if you want to steer

1597
01:21:50,040 --> 01:21:53,820
the traffic to NRP specific te pass we

1598
01:21:53,820 --> 01:21:55,980
can use the mechanism to steal the

1599
01:21:55,980 --> 01:21:58,500
traffic to as a policy which is

1600
01:21:58,500 --> 01:22:00,840
associated with NRP

1601
01:22:00,840 --> 01:22:03,719
and similarly we have two approaches to

1602
01:22:03,719 --> 01:22:07,020
associate Isa policy with an RP either

1603
01:22:07,020 --> 01:22:09,600
we can use NFP specific resource aware

1604
01:22:09,600 --> 01:22:11,820
segments to build the asset policies

1605
01:22:11,820 --> 01:22:12,960
list

1606
01:22:12,960 --> 01:22:15,600
or we can associate as a policy with a

1607
01:22:15,600 --> 01:22:17,880
database NRP ID

1608
01:22:17,880 --> 01:22:21,120
and impose of the above cases uh I'd

1609
01:22:21,120 --> 01:22:23,280
have never slice traffic can be steered

1610
01:22:23,280 --> 01:22:26,280
into the nrpt Pass based on the

1611
01:22:26,280 --> 01:22:29,699
mechanism defined in the draft TS flows

1612
01:22:29,699 --> 01:22:32,159
back as a policy

1613
01:22:32,159 --> 01:22:34,080
and we don't need the additional

1614
01:22:34,080 --> 01:22:36,600
extensions for this an RPG passed

1615
01:22:36,600 --> 01:22:38,699
traffic steering case

1616
01:22:38,699 --> 01:22:41,400
okay next slide

1617
01:22:41,400 --> 01:22:44,040
okay uh since this is the first time we

1618
01:22:44,040 --> 01:22:45,900
present this work we would like to

1619
01:22:45,900 --> 01:22:48,360
collect the feedbacks and comments so

1620
01:22:48,360 --> 01:22:49,620
that we can revise the document

1621
01:22:49,620 --> 01:22:51,120
accordingly

1622
01:22:51,120 --> 01:22:53,719
sex

1623
01:22:54,120 --> 01:22:56,219
comments

1624
01:22:56,219 --> 01:22:59,360
any questions online

1625
01:23:06,659 --> 01:23:09,000
okay nobody is in the queue thank you

1626
01:23:09,000 --> 01:23:12,020
thank you

1627
01:23:24,840 --> 01:23:28,219
next step is quimo

1628
01:23:35,280 --> 01:23:38,040
hello everyone uh today I'm going to

1629
01:23:38,040 --> 01:23:41,460
present pgp extension for Miro banding

1630
01:23:41,460 --> 01:23:44,000
next page

1631
01:23:45,120 --> 01:23:48,420
pgp has been extended to distribute the

1632
01:23:48,420 --> 01:23:52,560
SR policy basically Sr pass with banding

1633
01:23:52,560 --> 01:23:56,460
to a network node so planting here means

1634
01:23:56,460 --> 01:24:00,600
a bonding seat associated with a list of

1635
01:24:00,600 --> 01:24:05,520
C's so this these terms is defined in

1636
01:24:05,520 --> 01:24:08,880
another past segments

1637
01:24:08,880 --> 01:24:11,520
for example in this

1638
01:24:11,520 --> 01:24:15,480
Network topology we have Sr pass from

1639
01:24:15,480 --> 01:24:20,280
English nodes P1 to P1

1640
01:24:20,280 --> 01:24:23,100
through node n

1641
01:24:23,100 --> 01:24:26,340
and then through a green

1642
01:24:26,340 --> 01:24:27,840
past segment

1643
01:24:27,840 --> 01:24:31,739
to P3 P6 and then to equals even those

1644
01:24:31,739 --> 01:24:36,719
pp4 so here we have a bonding which is

1645
01:24:36,719 --> 01:24:41,100
that we have a bunding seed B seed

1646
01:24:41,100 --> 01:24:42,900
associated with

1647
01:24:42,900 --> 01:24:46,440
a list of segments which is S1 and S2

1648
01:24:46,440 --> 01:24:52,679
this S1 S2 defines a green per segment

1649
01:24:52,679 --> 01:24:57,659
so when pgp sends binding to node n

1650
01:24:57,659 --> 01:25:01,980
which is a piece it with

1651
01:25:01,980 --> 01:25:04,860
segment list S1 S2

1652
01:25:04,860 --> 01:25:08,340
in normal operation with node n receives

1653
01:25:08,340 --> 01:25:11,219
a package responding seat

1654
01:25:11,219 --> 01:25:14,239
so node n will replace this panel sheet

1655
01:25:14,239 --> 01:25:17,340
with the list of

1656
01:25:17,340 --> 01:25:20,219
seats which is S1 and S2

1657
01:25:20,219 --> 01:25:23,340
so this s1s2 Define the green per

1658
01:25:23,340 --> 01:25:24,900
segment

1659
01:25:24,900 --> 01:25:27,840
note n we'll send the package along this

1660
01:25:27,840 --> 01:25:31,620
green power segment towards destination

1661
01:25:31,620 --> 01:25:34,440
PFO

1662
01:25:34,440 --> 01:25:37,800
so in addition to that so here pgp is

1663
01:25:37,800 --> 01:25:39,060
tended to

1664
01:25:39,060 --> 01:25:41,640
send the bonding

1665
01:25:41,640 --> 01:25:46,140
with a node ID of n to the adjacent node

1666
01:25:46,140 --> 01:25:47,400
of another n

1667
01:25:47,400 --> 01:25:49,320
so after this

1668
01:25:49,320 --> 01:25:52,820
when node error fails

1669
01:25:52,860 --> 01:25:54,659
the adjacent nodes can provide

1670
01:25:54,659 --> 01:25:57,659
protection fast for protection for the

1671
01:25:57,659 --> 01:26:01,080
failure of load n so here when load

1672
01:26:01,080 --> 01:26:04,280
error fails P1 will detect the failure

1673
01:26:04,280 --> 01:26:08,400
P1 because P1 have information

1674
01:26:08,400 --> 01:26:11,460
for bonding and also know the ID of

1675
01:26:11,460 --> 01:26:15,540
another n so P1 will replace the binding

1676
01:26:15,540 --> 01:26:18,179
sheet with the

1677
01:26:18,179 --> 01:26:20,460
see the list for that green per segment

1678
01:26:20,460 --> 01:26:23,100
and then forward

1679
01:26:23,100 --> 01:26:27,060
package along that green per segment to

1680
01:26:27,060 --> 01:26:30,900
P3 and then P6 and towards destination

1681
01:26:30,900 --> 01:26:33,679
so next page

1682
01:26:34,080 --> 01:26:37,159
so right now our PHP has extended to

1683
01:26:37,159 --> 01:26:40,380
distribute routing policy through tunnel

1684
01:26:40,380 --> 01:26:42,420
in cap attributes

1685
01:26:42,420 --> 01:26:45,560
so here we just Define a subator v

1686
01:26:45,560 --> 01:26:48,540
called bonding protection Superior V

1687
01:26:48,540 --> 01:26:51,540
basically this subterfly just contains

1688
01:26:51,540 --> 01:26:55,560
the node ID of data node and something

1689
01:26:55,560 --> 01:26:58,620
so when pgp distributes binding which is

1690
01:26:58,620 --> 01:27:01,860
encoded by the funding sheet and

1691
01:27:01,860 --> 01:27:04,620
second list to a node n

1692
01:27:04,620 --> 01:27:08,219
pgp will also distribute this funding

1693
01:27:08,219 --> 01:27:10,620
Plus data

1694
01:27:10,620 --> 01:27:13,620
n

1695
01:27:15,060 --> 01:27:18,360
so the Json node can provide protections

1696
01:27:18,360 --> 01:27:20,639
of failure of that or then for the

1697
01:27:20,639 --> 01:27:21,719
funding

1698
01:27:21,719 --> 01:27:23,820
next page

1699
01:27:23,820 --> 01:27:25,739
so the extension is the first symbol we

1700
01:27:25,739 --> 01:27:27,060
just Define a funding protection

1701
01:27:27,060 --> 01:27:29,960
supportive V basically this abundant

1702
01:27:29,960 --> 01:27:32,639
protective server V can find some flags

1703
01:27:32,639 --> 01:27:34,260
and then

1704
01:27:34,260 --> 01:27:39,420
node ID subtr V so this lotus idwv in

1705
01:27:39,420 --> 01:27:42,800
pgp will just use the pgp ID

1706
01:27:42,800 --> 01:27:48,780
so which contains pgp node ID

1707
01:27:48,780 --> 01:27:51,780
so next page

1708
01:27:51,780 --> 01:27:54,420
so we would like to uh

1709
01:27:54,420 --> 01:27:57,540
welcome comments and suggestions for for

1710
01:27:57,540 --> 01:28:00,019
this idea

1711
01:28:08,820 --> 01:28:11,100
I actually forgot to use the app to jump

1712
01:28:11,100 --> 01:28:12,780
in the gear so sorry about that

1713
01:28:12,780 --> 01:28:14,699
um I understand Nokia I actually didn't

1714
01:28:14,699 --> 01:28:16,560
read this draft but I read the one in

1715
01:28:16,560 --> 01:28:18,780
the pce working group and obviously it's

1716
01:28:18,780 --> 01:28:20,760
very similar I just had a general

1717
01:28:20,760 --> 01:28:22,139
question

1718
01:28:22,139 --> 01:28:24,719
that wasn't clear to me when you program

1719
01:28:24,719 --> 01:28:26,940
to the neighboring routers are you

1720
01:28:26,940 --> 01:28:28,679
informing the neighboring routers of the

1721
01:28:28,679 --> 01:28:30,840
entire Sid list that The Binding set is

1722
01:28:30,840 --> 01:28:32,219
being programmed with

1723
01:28:32,219 --> 01:28:35,280
no no just uh so basically we just need

1724
01:28:35,280 --> 01:28:37,679
a uh necessary information just the

1725
01:28:37,679 --> 01:28:40,679
funding plus the ID of that uh protected

1726
01:28:40,679 --> 01:28:42,719
node we don't need the directory

1727
01:28:42,719 --> 01:28:44,580
information so so what I was wondering

1728
01:28:44,580 --> 01:28:47,159
was it's supposed to use this example so

1729
01:28:47,159 --> 01:28:49,739
if P1 is protecting node n

1730
01:28:49,739 --> 01:28:52,080
and for that binding said how does it

1731
01:28:52,080 --> 01:28:53,940
know that that binding is terminating on

1732
01:28:53,940 --> 01:28:55,739
P6

1733
01:28:55,739 --> 01:28:58,199
Oh you mean the uh the P1

1734
01:28:58,199 --> 01:29:01,320
yeah so if P1 is protecting yes n yes

1735
01:29:01,320 --> 01:29:02,940
how does it know that it needs to

1736
01:29:02,940 --> 01:29:07,040
reroute to P6 oh that's a good idea

1737
01:29:07,440 --> 01:29:11,219
in fact P1 has the uh the whole past

1738
01:29:11,219 --> 01:29:13,020
information right

1739
01:29:13,020 --> 01:29:15,719
so P basically when node P1 receive a

1740
01:29:15,719 --> 01:29:17,580
package and then that package will

1741
01:29:17,580 --> 01:29:19,739
contain the second release but so that's

1742
01:29:19,739 --> 01:29:24,799
the least will contain uh button sheet

1743
01:29:28,750 --> 01:29:31,130
[Music]

1744
01:29:31,130 --> 01:29:35,060
[Laughter]

1745
01:29:35,060 --> 01:29:38,460
is also included in the second running

1746
01:29:38,460 --> 01:29:39,900
Hider right

1747
01:29:39,900 --> 01:29:43,320
but but that but that blue label for

1748
01:29:43,320 --> 01:29:44,760
example if it's empty list that blue

1749
01:29:44,760 --> 01:29:47,580
label is local to that P6 yeah yeah

1750
01:29:47,580 --> 01:29:49,739
that's right P1 doesn't know which

1751
01:29:49,739 --> 01:29:51,480
router is advertising that blue label

1752
01:29:51,480 --> 01:29:54,420
yeah that doesn't matter so P1 only

1753
01:29:54,420 --> 01:29:57,780
chaos though the those green ones so

1754
01:29:57,780 --> 01:30:00,540
first first the P1 just replace the

1755
01:30:00,540 --> 01:30:02,880
binding sheet with those uh uh see the

1756
01:30:02,880 --> 01:30:05,699
list for green one right and then so P1

1757
01:30:05,699 --> 01:30:09,239
has the whole uh second release and then

1758
01:30:09,239 --> 01:30:13,080
P1 we are just a good rid of the

1759
01:30:13,080 --> 01:30:16,199
the seed for data failed node and then

1760
01:30:16,199 --> 01:30:18,659
go to the next hole that's all right the

1761
01:30:18,659 --> 01:30:20,820
likes one he doesn't count I do think

1762
01:30:20,820 --> 01:30:23,219
there's a gap here oh I can follow it up

1763
01:30:23,219 --> 01:30:24,780
on the list yeah yeah we can go to

1764
01:30:24,780 --> 01:30:26,460
detail at these have details and then

1765
01:30:26,460 --> 01:30:28,260
one other detail just to kind of throw

1766
01:30:28,260 --> 01:30:29,580
in the mix

1767
01:30:29,580 --> 01:30:31,800
um the actual label stack of The Binding

1768
01:30:31,800 --> 01:30:34,560
Sid could also have nested binding SIDS

1769
01:30:34,560 --> 01:30:37,260
so in that case you're even further down

1770
01:30:37,260 --> 01:30:39,300
the chain of trying to understand where

1771
01:30:39,300 --> 01:30:40,679
do you pop out on the other end of The

1772
01:30:40,679 --> 01:30:42,840
Binding set so for example could be P6

1773
01:30:42,840 --> 01:30:45,900
it'd be 300 p3p whatever but you don't

1774
01:30:45,900 --> 01:30:47,580
actually from their perspective of P1

1775
01:30:47,580 --> 01:30:49,139
you don't know because now you're

1776
01:30:49,139 --> 01:30:50,580
talking about a neighbor of a neighbor

1777
01:30:50,580 --> 01:30:52,800
potentially yeah basically the idea is

1778
01:30:52,800 --> 01:30:54,360
that as long as we have those bunny

1779
01:30:54,360 --> 01:30:56,400
cities labels it but then we will check

1780
01:30:56,400 --> 01:30:59,120
at the Lexus

1781
01:30:59,179 --> 01:31:01,500
and then we know that the adjacent would

1782
01:31:01,500 --> 01:31:03,000
have like salt and then we figure out

1783
01:31:03,000 --> 01:31:05,460
that that that's all right that

1784
01:31:05,460 --> 01:31:07,880
information I'll send to those yeah yeah

1785
01:31:07,880 --> 01:31:11,360
in the list okay

1786
01:31:12,780 --> 01:31:16,219
any further questions online

1787
01:31:20,760 --> 01:31:25,340
no questions thank you Imo thank you

1788
01:31:42,840 --> 01:31:46,020
okay so this draft is about extending

1789
01:31:46,020 --> 01:31:49,560
our derived by extended Community from a

1790
01:31:49,560 --> 01:31:52,219
route Target

1791
01:31:54,060 --> 01:31:57,300
I want to talk about the general example

1792
01:31:57,300 --> 01:32:00,659
use case first let's say you have a VPN

1793
01:32:00,659 --> 01:32:04,020
with 10ps or 100ps

1794
01:32:04,020 --> 01:32:06,540
and for that VPN we have a route Target

1795
01:32:06,540 --> 01:32:08,820
we call it rt1

1796
01:32:08,820 --> 01:32:11,100
the route Target it is an extended

1797
01:32:11,100 --> 01:32:16,800
Community say ec1 with a subtype 0x2

1798
01:32:16,800 --> 01:32:20,460
in this case rt1 and ec1 they are the

1799
01:32:20,460 --> 01:32:21,659
same thing

1800
01:32:21,659 --> 01:32:24,960
but when we say a route Target

1801
01:32:24,960 --> 01:32:27,900
we emphasize that it is a extended

1802
01:32:27,900 --> 01:32:30,600
Community for purpose that is used to

1803
01:32:30,600 --> 01:32:33,780
control the propagation and importation

1804
01:32:33,780 --> 01:32:35,880
of the routes

1805
01:32:35,880 --> 01:32:39,420
in this case routes with rt1 will be

1806
01:32:39,420 --> 01:32:42,600
propagated to and imported by all those

1807
01:32:42,600 --> 01:32:45,179
10ps of the VPN

1808
01:32:45,179 --> 01:32:48,300
well when we only say extended community

1809
01:32:48,300 --> 01:32:52,020
we do not imply that semantics that for

1810
01:32:52,020 --> 01:32:55,500
the route propagation and importation

1811
01:32:55,500 --> 01:32:58,739
now let's say that's uh we need to send

1812
01:32:58,739 --> 01:33:02,880
the p uh one route to peoning

1813
01:33:02,880 --> 01:33:05,699
and we want to say that this route is

1814
01:33:05,699 --> 01:33:09,239
related for that VPN

1815
01:33:09,239 --> 01:33:12,600
um so to control the route that to be

1816
01:33:12,600 --> 01:33:15,360
propagated to PE when owning we want to

1817
01:33:15,360 --> 01:33:19,800
use a different route targets we say rt2

1818
01:33:19,800 --> 01:33:24,659
and to tell the pe1 that this route is

1819
01:33:24,659 --> 01:33:27,179
related to this VPN

1820
01:33:27,179 --> 01:33:30,060
we attached different extended Community

1821
01:33:30,060 --> 01:33:31,620
for that purpose

1822
01:33:31,620 --> 01:33:35,580
so in this case rt2

1823
01:33:35,580 --> 01:33:38,340
cannot be the same as rt1 because rt1

1824
01:33:38,340 --> 01:33:39,920
will get the routes

1825
01:33:39,920 --> 01:33:42,900
to all the peas we here we want to

1826
01:33:42,900 --> 01:33:46,320
direct the route on into Pua

1827
01:33:46,320 --> 01:33:50,280
the ec2 is to indicate that this is for

1828
01:33:50,280 --> 01:33:53,940
uh for the VPN so the ec2 and rt2

1829
01:33:53,940 --> 01:33:57,179
they're also different

1830
01:33:57,179 --> 01:33:58,260
um

1831
01:33:58,260 --> 01:34:02,580
so to indicate that this uh route is for

1832
01:34:02,580 --> 01:34:04,199
the VPN

1833
01:34:04,199 --> 01:34:08,820
even though r21 can uh has the implied

1834
01:34:08,820 --> 01:34:12,000
uh semantics that it is for for this VPN

1835
01:34:12,000 --> 01:34:15,360
we cannot use rt1 here either

1836
01:34:15,360 --> 01:34:17,040
um then

1837
01:34:17,040 --> 01:34:18,960
the ec2

1838
01:34:18,960 --> 01:34:21,719
can be a arbitrary extended Community

1839
01:34:21,719 --> 01:34:24,000
configured

1840
01:34:24,000 --> 01:34:25,860
for their purpose saying that this is

1841
01:34:25,860 --> 01:34:29,580
related over VPN but it will be nice if

1842
01:34:29,580 --> 01:34:31,440
we can just derive

1843
01:34:31,440 --> 01:34:34,500
the ec2 from rt1

1844
01:34:34,500 --> 01:34:37,280
next slide

1845
01:34:37,560 --> 01:34:41,940
so this is what this what is about here

1846
01:34:41,940 --> 01:34:44,219
for any RT

1847
01:34:44,219 --> 01:34:46,920
we can derive a corresponding extended

1848
01:34:46,920 --> 01:34:49,980
Community simply by changing the subtype

1849
01:34:49,980 --> 01:34:53,659
of the RT to a new value

1850
01:34:54,239 --> 01:34:58,080
so also based on the new value for the

1851
01:34:58,080 --> 01:34:59,219
subtype

1852
01:34:59,219 --> 01:35:02,820
if we change it back to 0 x 0 2 which

1853
01:35:02,820 --> 01:35:05,400
indicates of RT then we get original RT

1854
01:35:05,400 --> 01:35:06,840
back

1855
01:35:06,840 --> 01:35:10,520
and we actually have the got a subtype

1856
01:35:10,520 --> 01:35:14,460
0x15 assigned for this purpose so if you

1857
01:35:14,460 --> 01:35:17,940
if you have a RT which is subtype 0x2

1858
01:35:17,940 --> 01:35:20,360
you should simply change that subtype to

1859
01:35:20,360 --> 01:35:23,300
0x115 you get an extended Community

1860
01:35:23,300 --> 01:35:27,420
corresponding to that route Target

1861
01:35:27,420 --> 01:35:30,320
next slide please

1862
01:35:30,540 --> 01:35:34,800
so we have documented the three specific

1863
01:35:34,800 --> 01:35:36,060
example

1864
01:35:36,060 --> 01:35:39,239
use cases that related to this General

1865
01:35:39,239 --> 01:35:41,100
use case

1866
01:35:41,100 --> 01:35:42,540
um I'm not going to go through the

1867
01:35:42,540 --> 01:35:45,239
specific use case here but

1868
01:35:45,239 --> 01:35:48,719
um this is one example in evpn we could

1869
01:35:48,719 --> 01:35:50,400
use it this way but we don't have to

1870
01:35:50,400 --> 01:35:53,219
next slide please

1871
01:35:53,219 --> 01:35:55,320
there are two other example use cases

1872
01:35:55,320 --> 01:35:58,020
documenting the draft in fact just

1873
01:35:58,020 --> 01:36:00,020
before this IDR meeting

1874
01:36:00,020 --> 01:36:03,080
a few of us were talking about another

1875
01:36:03,080 --> 01:36:06,900
specific use case again it's really for

1876
01:36:06,900 --> 01:36:08,940
the general use case so General use case

1877
01:36:08,940 --> 01:36:11,159
is that

1878
01:36:11,159 --> 01:36:15,440
giving an RT derived extended community

1879
01:36:15,440 --> 01:36:18,480
community and use it for whatever

1880
01:36:18,480 --> 01:36:23,120
purpose you want to use for next slide

1881
01:36:28,199 --> 01:36:31,139
so this document only specifies the

1882
01:36:31,139 --> 01:36:33,840
derivation of this extended Community

1883
01:36:33,840 --> 01:36:37,520
from a route Target by using this new

1884
01:36:37,520 --> 01:36:39,840
0x15 subtype

1885
01:36:39,840 --> 01:36:43,080
we do not specify how it will be used

1886
01:36:43,080 --> 01:36:46,260
it can be very creative you or whatever

1887
01:36:46,260 --> 01:36:49,199
our use case you may have

1888
01:36:49,199 --> 01:36:53,100
it is a simple idea we

1889
01:36:53,100 --> 01:36:56,400
the co-authors here we believe is ready

1890
01:36:56,400 --> 01:37:00,719
for the working group adapt adoption

1891
01:37:00,719 --> 01:37:03,000
so

1892
01:37:03,000 --> 01:37:05,100
comments

1893
01:37:05,100 --> 01:37:08,960
questions comments comments online

1894
01:37:14,159 --> 01:37:16,320
AC window I just I just got one question

1895
01:37:16,320 --> 01:37:18,360
ah

1896
01:37:18,360 --> 01:37:21,360
would you still need

1897
01:37:21,360 --> 01:37:25,620
to document in an ITF I mean IDR draft

1898
01:37:25,620 --> 01:37:28,560
the specific usage like you have these

1899
01:37:28,560 --> 01:37:30,480
three you still would this would just

1900
01:37:30,480 --> 01:37:33,600
make the assignment automatic right

1901
01:37:33,600 --> 01:37:36,960
from our from the art from RT's existing

1902
01:37:36,960 --> 01:37:38,880
for the birth

1903
01:37:38,880 --> 01:37:40,800
the assignment

1904
01:37:40,800 --> 01:37:43,139
I mean not for the RT and you haven't

1905
01:37:43,139 --> 01:37:45,239
existing RT and you want to derive it

1906
01:37:45,239 --> 01:37:47,520
for a use case that use case would still

1907
01:37:47,520 --> 01:37:48,780
have to be documented in a draft

1908
01:37:48,780 --> 01:37:52,100
wouldn't it the draft has uh

1909
01:37:52,100 --> 01:37:54,900
described a general use case and

1910
01:37:54,900 --> 01:37:58,080
described three specific use cases but

1911
01:37:58,080 --> 01:38:00,600
they are all just informative yeah I I

1912
01:38:00,600 --> 01:38:02,940
know that but but you would you couldn't

1913
01:38:02,940 --> 01:38:04,860
just come up when you do this you just

1914
01:38:04,860 --> 01:38:06,300
couldn't come up with a new use case

1915
01:38:06,300 --> 01:38:09,600
without documenting it in a draft

1916
01:38:09,600 --> 01:38:12,179
um if you have another use case I would

1917
01:38:12,179 --> 01:38:14,159
assume there will be another draft

1918
01:38:14,159 --> 01:38:16,739
exactly exactly I'm saying somebody

1919
01:38:16,739 --> 01:38:18,600
couldn't just

1920
01:38:18,600 --> 01:38:20,300
right come up with their own

1921
01:38:20,300 --> 01:38:22,679
undocumented use case for these derived

1922
01:38:22,679 --> 01:38:26,179
right PCS okay

1923
01:38:28,560 --> 01:38:31,639
any further questions

1924
01:38:34,620 --> 01:38:37,639
okay thank you

1925
01:38:42,420 --> 01:38:46,340
we're coming up to our last presentation

1926
01:38:53,820 --> 01:38:56,159
hi Jeff can you hear me

1927
01:38:56,159 --> 01:38:59,299
loud and clear please continue

1928
01:39:00,719 --> 01:39:03,840
hey hi everyone this is just a kind of a

1929
01:39:03,840 --> 01:39:05,760
repeat of the presentation that we had

1930
01:39:05,760 --> 01:39:07,440
in the interim

1931
01:39:07,440 --> 01:39:10,620
um we were discussing about uh next

1932
01:39:10,620 --> 01:39:13,320
talks and this is the proposal

1933
01:39:13,320 --> 01:39:16,159
um that tries to

1934
01:39:16,159 --> 01:39:19,020
unify The Way We Carry Next Tops in bgp

1935
01:39:19,020 --> 01:39:22,380
for various purposes next slide please

1936
01:39:22,380 --> 01:39:24,179
so we will go through

1937
01:39:24,179 --> 01:39:25,739
um we will rush to the presentation

1938
01:39:25,739 --> 01:39:28,620
because uh it's it's uh discussed in

1939
01:39:28,620 --> 01:39:30,300
detail in the interim and here we just

1940
01:39:30,300 --> 01:39:34,380
wanted to refresh and uh we may not have

1941
01:39:34,380 --> 01:39:35,940
much time so we'll go through the

1942
01:39:35,940 --> 01:39:38,040
background problem statement and the

1943
01:39:38,040 --> 01:39:39,239
layout of the multinational stop

1944
01:39:39,239 --> 01:39:41,580
attribute uh propagation scope error

1945
01:39:41,580 --> 01:39:44,219
handling Etc and while discussing that

1946
01:39:44,219 --> 01:39:48,000
we will discuss the use cases uh in mind

1947
01:39:48,000 --> 01:39:50,960
next slide please

1948
01:39:51,300 --> 01:39:54,120
so looking at the background

1949
01:39:54,120 --> 01:39:57,360
um it's about how thinking about how do

1950
01:39:57,360 --> 01:39:59,580
we express next stops in bgp so

1951
01:39:59,580 --> 01:40:01,800
basically what is the next stop it's

1952
01:40:01,800 --> 01:40:03,659
instructions on how to forward a payload

1953
01:40:03,659 --> 01:40:06,780
specified in a bgp and all right so even

1954
01:40:06,780 --> 01:40:09,900
today we have discussed about different

1955
01:40:09,900 --> 01:40:13,020
applications of next stops uh in the

1956
01:40:13,020 --> 01:40:14,460
various presentations

1957
01:40:14,460 --> 01:40:16,260
and we see that the next stop

1958
01:40:16,260 --> 01:40:18,600
information that we use today in various

1959
01:40:18,600 --> 01:40:20,880
bgpe families it's extracted from

1960
01:40:20,880 --> 01:40:23,940
different portions of the pgp pdu pgp

1961
01:40:23,940 --> 01:40:25,380
route

1962
01:40:25,380 --> 01:40:27,540
um they can be largely classified into

1963
01:40:27,540 --> 01:40:29,460
where to forward to

1964
01:40:29,460 --> 01:40:32,100
um so this is like either the mandatory

1965
01:40:32,100 --> 01:40:33,960
Next Top attribute or the MP3 Channel

1966
01:40:33,960 --> 01:40:34,920
array

1967
01:40:34,920 --> 01:40:37,020
or the redirect to IP extern Community

1968
01:40:37,020 --> 01:40:39,719
tunnel and caption attribute color only

1969
01:40:39,719 --> 01:40:41,820
Community radar to VR factional

1970
01:40:41,820 --> 01:40:42,780
community

1971
01:40:42,780 --> 01:40:46,320
and we see some new uh attributes coming

1972
01:40:46,320 --> 01:40:47,100
up

1973
01:40:47,100 --> 01:40:48,840
from the

1974
01:40:48,840 --> 01:40:52,199
meta tlv kind of a proposal and then

1975
01:40:52,199 --> 01:40:54,300
what kind of end cap to use uh either

1976
01:40:54,300 --> 01:40:58,340
it's a label or a prefix said

1977
01:40:58,880 --> 01:41:01,260
or any new end card that may come in

1978
01:41:01,260 --> 01:41:02,280
future

1979
01:41:02,280 --> 01:41:05,460
and then the constraints that's what

1980
01:41:05,460 --> 01:41:07,920
kind of mapping Community or color

1981
01:41:07,920 --> 01:41:11,280
Community to use to reach the endpoint

1982
01:41:11,280 --> 01:41:13,560
what kind of traffic engineer path to

1983
01:41:13,560 --> 01:41:16,739
use and Link bandwidth Community which

1984
01:41:16,739 --> 01:41:20,639
says what is the kind of ucmp we want to

1985
01:41:20,639 --> 01:41:22,020
the next house

1986
01:41:22,020 --> 01:41:24,900
next slide please

1987
01:41:24,900 --> 01:41:26,580
so that was the information that we

1988
01:41:26,580 --> 01:41:28,320
carry on one route and then how do we

1989
01:41:28,320 --> 01:41:31,440
express multiplicity we just uh we we

1990
01:41:31,440 --> 01:41:34,020
energize multiple routes

1991
01:41:34,020 --> 01:41:36,619
um either with the

1992
01:41:36,619 --> 01:41:39,179
from different peers or if it is from

1993
01:41:39,179 --> 01:41:40,739
the same year we use add path to

1994
01:41:40,739 --> 01:41:43,139
advertise multiple paths and each one of

1995
01:41:43,139 --> 01:41:45,300
those routes have its own next house and

1996
01:41:45,300 --> 01:41:50,040
this has uh worked so far and uh there

1997
01:41:50,040 --> 01:41:52,800
is some increased rib scale uh

1998
01:41:52,800 --> 01:41:54,300
specifically about scale implications

1999
01:41:54,300 --> 01:41:56,880
for it and another thing is like all the

2000
01:41:56,880 --> 01:41:58,440
for all the different mechanisms that

2001
01:41:58,440 --> 01:41:59,460
have been specified in the previous

2002
01:41:59,460 --> 01:42:03,420
slide add path really caters to the next

2003
01:42:03,420 --> 01:42:05,520
stop and MP reach attribute where the

2004
01:42:05,520 --> 01:42:07,080
next stop is carried in those attributes

2005
01:42:07,080 --> 01:42:09,780
for all the other ways how Next Top is

2006
01:42:09,780 --> 01:42:12,179
carried ad path is kind of unspecified

2007
01:42:12,179 --> 01:42:14,820
the procedures it may work or it may not

2008
01:42:14,820 --> 01:42:16,320
work

2009
01:42:16,320 --> 01:42:18,360
um and then how do we when we receive

2010
01:42:18,360 --> 01:42:20,520
all these routes uh then we do multipath

2011
01:42:20,520 --> 01:42:23,100
or protection based on the local config

2012
01:42:23,100 --> 01:42:27,480
so as of all how we uh

2013
01:42:27,480 --> 01:42:29,460
gather the information that's required

2014
01:42:29,460 --> 01:42:31,860
to program the FIB or consume and

2015
01:42:31,860 --> 01:42:33,560
program the forwarding it's like

2016
01:42:33,560 --> 01:42:37,320
organically grown and it's uh in

2017
01:42:37,320 --> 01:42:39,060
different portions of the bgp route and

2018
01:42:39,060 --> 01:42:42,119
in local configuration so all of this

2019
01:42:42,119 --> 01:42:44,040
has to be consumed together by an

2020
01:42:44,040 --> 01:42:46,860
implementation and then it can it has

2021
01:42:46,860 --> 01:42:49,380
everything that it needs to do the path

2022
01:42:49,380 --> 01:42:52,139
selection and program the route

2023
01:42:52,139 --> 01:42:54,980
next slide please

2024
01:42:56,100 --> 01:43:00,000
so is there a problem with this so

2025
01:43:00,000 --> 01:43:04,020
we see that though

2026
01:43:04,199 --> 01:43:07,080
so we have the signaling coming on the

2027
01:43:07,080 --> 01:43:08,580
route and the local configuration in

2028
01:43:08,580 --> 01:43:10,920
combination uh giving an implementation

2029
01:43:10,920 --> 01:43:14,159
what it needs to program the Fib so it

2030
01:43:14,159 --> 01:43:17,400
has this mechanism has the inability to

2031
01:43:17,400 --> 01:43:19,139
um first of all advertise more than one

2032
01:43:19,139 --> 01:43:22,260
next stop in a route and it is not

2033
01:43:22,260 --> 01:43:24,840
expressive in the sense that the

2034
01:43:24,840 --> 01:43:28,260
advertiser can control the FIB

2035
01:43:28,260 --> 01:43:31,020
um by

2036
01:43:31,020 --> 01:43:32,239
um

2037
01:43:32,239 --> 01:43:35,400
installing routes with desktops which

2038
01:43:35,400 --> 01:43:37,980
have various relationships so even if we

2039
01:43:37,980 --> 01:43:39,719
are able to advertise multiple next

2040
01:43:39,719 --> 01:43:41,280
stops and AD path we are not able to

2041
01:43:41,280 --> 01:43:42,840
express the relationship between the

2042
01:43:42,840 --> 01:43:45,119
different next stops and it's not easily

2043
01:43:45,119 --> 01:43:47,159
extensible for newer endpoint types and

2044
01:43:47,159 --> 01:43:49,199
calculation types

2045
01:43:49,199 --> 01:43:49,860
Etc

2046
01:43:49,860 --> 01:43:52,260
so if we had these properties maybe we

2047
01:43:52,260 --> 01:43:54,719
may be able to use bgp as an API as a

2048
01:43:54,719 --> 01:43:58,199
standard API to the receiver's FIP for a

2049
01:43:58,199 --> 01:43:59,840
different type of payloads

2050
01:43:59,840 --> 01:44:05,400
and and also if we have a uniform uh way

2051
01:44:05,400 --> 01:44:07,139
of expressing the tunnel the

2052
01:44:07,139 --> 01:44:08,760
encapsulation info for different address

2053
01:44:08,760 --> 01:44:11,100
families like Safi one cannot carry

2054
01:44:11,100 --> 01:44:14,119
labels today uh then we will be able to

2055
01:44:14,119 --> 01:44:17,639
make the core simpler we don't need

2056
01:44:17,639 --> 01:44:20,159
service routes in the core service reps

2057
01:44:20,159 --> 01:44:21,780
can be

2058
01:44:21,780 --> 01:44:23,880
um close to the edge and that will be

2059
01:44:23,880 --> 01:44:26,100
extending the principles of a BJP free

2060
01:44:26,100 --> 01:44:27,119
course

2061
01:44:27,119 --> 01:44:30,019
next slide please

2062
01:44:33,780 --> 01:44:35,880
yeah so in in some cases we want to

2063
01:44:35,880 --> 01:44:37,860
advertise multiple labels and that helps

2064
01:44:37,860 --> 01:44:40,520
in the label label oscillation avoidance

2065
01:44:40,520 --> 01:44:42,679
and uh

2066
01:44:42,679 --> 01:44:45,659
in some other cases the semantics of a

2067
01:44:45,659 --> 01:44:47,820
downstream allocated label uh if it is

2068
01:44:47,820 --> 01:44:49,980
known by the receiver they may be able

2069
01:44:49,980 --> 01:44:53,340
to uh visualize the network better or

2070
01:44:53,340 --> 01:44:55,560
they may be able to do EP decisions

2071
01:44:55,560 --> 01:44:56,820
better

2072
01:44:56,820 --> 01:44:58,800
and then there is a problem slightly

2073
01:44:58,800 --> 01:45:00,840
unrelated to the next half level scope

2074
01:45:00,840 --> 01:45:03,420
it's at the route level where if it's an

2075
01:45:03,420 --> 01:45:05,820
option C domain we don't have local

2076
01:45:05,820 --> 01:45:07,639
preference like control for it today

2077
01:45:07,639 --> 01:45:11,699
because local preference is though it it

2078
01:45:11,699 --> 01:45:14,040
it seems like it's intended to the and

2079
01:45:14,040 --> 01:45:16,380
designed for use in a single domain

2080
01:45:16,380 --> 01:45:18,060
which is like a single as or a

2081
01:45:18,060 --> 01:45:20,940
confederation and option C domain though

2082
01:45:20,940 --> 01:45:23,340
it is a single administrative domain but

2083
01:45:23,340 --> 01:45:25,380
uh we don't use local preference for it

2084
01:45:25,380 --> 01:45:27,659
because it is going over ebgp session

2085
01:45:27,659 --> 01:45:29,600
and bgp doesn't have a way of

2086
01:45:29,600 --> 01:45:33,719
identifying which set of ass is part of

2087
01:45:33,719 --> 01:45:36,060
that domain so there is a risk of

2088
01:45:36,060 --> 01:45:39,000
leaking that to outside uh outside the

2089
01:45:39,000 --> 01:45:40,260
domain so we don't allow local

2090
01:45:40,260 --> 01:45:42,980
preference today

2091
01:45:43,159 --> 01:45:45,960
so the lack of scoping control of

2092
01:45:45,960 --> 01:45:47,820
attribute advertisement with option C

2093
01:45:47,820 --> 01:45:49,500
domain scope so that is another problem

2094
01:45:49,500 --> 01:45:51,360
so these are the problems that are

2095
01:45:51,360 --> 01:45:52,679
attempted to be solved by the

2096
01:45:52,679 --> 01:45:54,119
multinational stop attribute so let's

2097
01:45:54,119 --> 01:45:56,699
see the layout how it works

2098
01:45:56,699 --> 01:45:58,619
next slide please

2099
01:45:58,619 --> 01:46:00,300
so it's an optional non-transitive

2100
01:46:00,300 --> 01:46:02,580
attribute and its usage is also

2101
01:46:02,580 --> 01:46:05,100
negotiated with a new bgp capability and

2102
01:46:05,100 --> 01:46:08,159
it's a tlvi's format which is extensive

2103
01:46:08,159 --> 01:46:10,080
extensible for newer endpoint type

2104
01:46:10,080 --> 01:46:12,119
encapsulation types forwarding actions

2105
01:46:12,119 --> 01:46:15,119
and argument types and it can carry one

2106
01:46:15,119 --> 01:46:18,780
or more next top instructions and it can

2107
01:46:18,780 --> 01:46:21,480
basically be used as a API to a bgp

2108
01:46:21,480 --> 01:46:23,940
based API to the receiver script so

2109
01:46:23,940 --> 01:46:26,780
next slide please

2110
01:46:27,420 --> 01:46:30,480
so this is the bird's eye view of the

2111
01:46:30,480 --> 01:46:32,520
attribute itself

2112
01:46:32,520 --> 01:46:34,320
um basically the multinational stop

2113
01:46:34,320 --> 01:46:36,480
attribute it has a propagation scope

2114
01:46:36,480 --> 01:46:40,020
Checker and then it has one or more mnh

2115
01:46:40,020 --> 01:46:44,580
tlvs and htlv it has a type and it has

2116
01:46:44,580 --> 01:46:47,040
an extra forwarding information

2117
01:46:47,040 --> 01:46:48,239
and the next of forwarding information

2118
01:46:48,239 --> 01:46:49,980
itself is

2119
01:46:49,980 --> 01:46:51,239
um one or more forward forwarding

2120
01:46:51,239 --> 01:46:52,320
instructions

2121
01:46:52,320 --> 01:46:54,420
and the forwarding instruction is a

2122
01:46:54,420 --> 01:46:56,100
forwarding action and forwarding

2123
01:46:56,100 --> 01:46:58,679
arguments so forwarding action is things

2124
01:46:58,679 --> 01:47:00,659
like uh forward

2125
01:47:00,659 --> 01:47:03,780
pop push Swap and the forwarding

2126
01:47:03,780 --> 01:47:05,760
arguments are like what are the

2127
01:47:05,760 --> 01:47:07,080
arguments that you required to complete

2128
01:47:07,080 --> 01:47:08,940
that action like where to forward to

2129
01:47:08,940 --> 01:47:12,719
what kind of encapsulation to be used so

2130
01:47:12,719 --> 01:47:14,520
if you if you think about it so today

2131
01:47:14,520 --> 01:47:16,920
whatever we have is uh the next stop is

2132
01:47:16,920 --> 01:47:19,080
the forwarding instructions

2133
01:47:19,080 --> 01:47:22,139
and this is and that is applicable for

2134
01:47:22,139 --> 01:47:25,120
uh IP routes for mpls

2135
01:47:25,120 --> 01:47:25,380
[Music]

2136
01:47:25,380 --> 01:47:26,540
um

2137
01:47:26,540 --> 01:47:29,040
labels that cannot be used because we

2138
01:47:29,040 --> 01:47:32,100
don't have a way to specify pops wrap

2139
01:47:32,100 --> 01:47:35,820
push uh as part of the next stop

2140
01:47:35,820 --> 01:47:38,820
whatever labels that we receive as uh

2141
01:47:38,820 --> 01:47:43,260
next up or in the nlra 8277 encoding

2142
01:47:43,260 --> 01:47:46,380
that is used as a push so for that the

2143
01:47:46,380 --> 01:47:49,199
action is implicitly pushed so those

2144
01:47:49,199 --> 01:47:50,460
forwarding actions they are just

2145
01:47:50,460 --> 01:47:52,380
enumerated here and the propagation

2146
01:47:52,380 --> 01:47:55,619
scope Checker is what allows

2147
01:47:55,619 --> 01:47:56,280
um

2148
01:47:56,280 --> 01:47:58,199
restricting the propagation scope of the

2149
01:47:58,199 --> 01:48:01,679
attribute so that we can realize the uh

2150
01:48:01,679 --> 01:48:03,300
domain local preference kind of

2151
01:48:03,300 --> 01:48:07,400
functionality next slide please

2152
01:48:09,119 --> 01:48:12,239
so initially this attribute was

2153
01:48:12,239 --> 01:48:15,540
transitive and uh

2154
01:48:15,540 --> 01:48:17,340
uh after the discussions we made it

2155
01:48:17,340 --> 01:48:19,679
non-transitive and it also carries the

2156
01:48:19,679 --> 01:48:21,960
advertising protocol next stop which can

2157
01:48:21,960 --> 01:48:24,119
be used to know if the message is valid

2158
01:48:24,119 --> 01:48:25,920
whether it was added by the router who

2159
01:48:25,920 --> 01:48:29,639
rewrote the next hub so because it's

2160
01:48:29,639 --> 01:48:31,500
made non-transitive and it is also

2161
01:48:31,500 --> 01:48:32,699
negotiated

2162
01:48:32,699 --> 01:48:34,619
uh the capabilities negotiated in the

2163
01:48:34,619 --> 01:48:37,380
open message uh the question that comes

2164
01:48:37,380 --> 01:48:40,560
is do we need this uh anymore maybe

2165
01:48:40,560 --> 01:48:43,139
because it is uh more con the

2166
01:48:43,139 --> 01:48:44,880
propagation scope is more conservative

2167
01:48:44,880 --> 01:48:48,659
now uh I'm wondering whether we can

2168
01:48:48,659 --> 01:48:51,900
remove the advertising pnh portion from

2169
01:48:51,900 --> 01:48:53,880
the attributes so that's one question

2170
01:48:53,880 --> 01:48:56,400
that comes after uh doing a little

2171
01:48:56,400 --> 01:48:59,580
thinking and so even among the speakers

2172
01:48:59,580 --> 01:49:00,900
that understand the MNS the

2173
01:49:00,900 --> 01:49:03,239
advertisement is controlled by this

2174
01:49:03,239 --> 01:49:05,940
propagated scope Checker so we by

2175
01:49:05,940 --> 01:49:08,100
default don't arrest to any any bgp

2176
01:49:08,100 --> 01:49:09,780
speakers and we have flags that allow

2177
01:49:09,780 --> 01:49:12,360
advertisement to ipgp confederations or

2178
01:49:12,360 --> 01:49:15,119
ebgt and when it is ebgp we have a list

2179
01:49:15,119 --> 01:49:17,900
of allowed ass so this is what allows

2180
01:49:17,900 --> 01:49:20,940
constraining this uh advertisement

2181
01:49:20,940 --> 01:49:25,699
within a domain and next slide please

2182
01:49:26,400 --> 01:49:28,139
so these are the types that are defined

2183
01:49:28,139 --> 01:49:32,219
today so type one is the Upstream signal

2184
01:49:32,219 --> 01:49:34,440
primary forwarding path type 2 is like

2185
01:49:34,440 --> 01:49:37,739
up Sim signal backup founding path so

2186
01:49:37,739 --> 01:49:39,360
um today whatever we do with the regular

2187
01:49:39,360 --> 01:49:41,580
next stop is uh type one we can think

2188
01:49:41,580 --> 01:49:44,040
about it like that and then type 4 is

2189
01:49:44,040 --> 01:49:46,440
the domain uh Downstream signal label

2190
01:49:46,440 --> 01:49:47,520
descriptor

2191
01:49:47,520 --> 01:49:50,340
and all these uh about types they have a

2192
01:49:50,340 --> 01:49:52,980
forwarding information Theory which will

2193
01:49:52,980 --> 01:49:54,480
describe what is the kind of forwarding

2194
01:49:54,480 --> 01:49:57,719
actions and arguments and type 3 is

2195
01:49:57,719 --> 01:50:00,480
domain local preference so this is

2196
01:50:00,480 --> 01:50:02,340
um the type which just carries a four

2197
01:50:02,340 --> 01:50:05,159
byte local preference value and this

2198
01:50:05,159 --> 01:50:06,900
value will be used in the path selection

2199
01:50:06,900 --> 01:50:09,480
wherever a local preference is used so

2200
01:50:09,480 --> 01:50:12,000
in the option C cases where a local

2201
01:50:12,000 --> 01:50:13,920
preference is not available if domain

2202
01:50:13,920 --> 01:50:15,840
local preference is available we use

2203
01:50:15,840 --> 01:50:17,100
this

2204
01:50:17,100 --> 01:50:20,219
and unknown types they are propagated uh

2205
01:50:20,219 --> 01:50:24,300
with the mnh if the mnh is propagated

2206
01:50:24,300 --> 01:50:27,239
um and here there are flags available at

2207
01:50:27,239 --> 01:50:28,800
this scope

2208
01:50:28,800 --> 01:50:30,659
um there's another question that I had

2209
01:50:30,659 --> 01:50:33,060
whether we need to add an indication

2210
01:50:33,060 --> 01:50:35,699
like a partial bit which uh lets a

2211
01:50:35,699 --> 01:50:38,280
receiver to know whether a particular

2212
01:50:38,280 --> 01:50:40,980
type has traversed the speakers which

2213
01:50:40,980 --> 01:50:42,780
don't understand it

2214
01:50:42,780 --> 01:50:45,619
next slide please

2215
01:50:46,139 --> 01:50:48,420
yeah so this is the list of forwarding

2216
01:50:48,420 --> 01:50:49,860
information this is what describes the

2217
01:50:49,860 --> 01:50:52,199
next stop and it contains one or more

2218
01:50:52,199 --> 01:50:55,619
desktop leg elements uh next of ordering

2219
01:50:55,619 --> 01:50:57,780
instructions next slide please

2220
01:50:57,780 --> 01:50:59,880
yeah

2221
01:50:59,880 --> 01:51:02,580
so this is the forwarding action and

2222
01:51:02,580 --> 01:51:05,280
here we see uh the different forwarding

2223
01:51:05,280 --> 01:51:07,920
actions that are possible today and some

2224
01:51:07,920 --> 01:51:11,400
of them which may come up in future so

2225
01:51:11,400 --> 01:51:14,820
replicate is one example where uh I mean

2226
01:51:14,820 --> 01:51:18,780
today we don't do much uh just like it's

2227
01:51:18,780 --> 01:51:21,780
it's like unicast or ecmp or active

2228
01:51:21,780 --> 01:51:24,840
backup or you can do a replicate so

2229
01:51:24,840 --> 01:51:27,360
everything that's possible today is uh

2230
01:51:27,360 --> 01:51:29,219
enumerated here if a new forwarding

2231
01:51:29,219 --> 01:51:31,500
action comes today at tomorrow we we can

2232
01:51:31,500 --> 01:51:33,840
just extend it here and each forwarding

2233
01:51:33,840 --> 01:51:36,060
action has one or more arguments next

2234
01:51:36,060 --> 01:51:38,480
slide please

2235
01:51:38,639 --> 01:51:40,739
so these are the type of endpoint

2236
01:51:40,739 --> 01:51:42,239
identifiers

2237
01:51:42,239 --> 01:51:45,659
um that are available today so ipv4

2238
01:51:45,659 --> 01:51:47,760
address this ipv4 next stop address or

2239
01:51:47,760 --> 01:51:49,679
IPS is the stop address which identifies

2240
01:51:49,679 --> 01:51:51,540
a node

2241
01:51:51,540 --> 01:51:54,119
um and uh mpls label either Upstream

2242
01:51:54,119 --> 01:51:56,639
allocated or Global scope or we can say

2243
01:51:56,639 --> 01:51:59,340
forward to a particular uh forwarding

2244
01:51:59,340 --> 01:52:02,400
context at the receiving node or a

2245
01:52:02,400 --> 01:52:04,199
forwarding context identified by the RT

2246
01:52:04,199 --> 01:52:06,840
at the receiving node and even the IP

2247
01:52:06,840 --> 01:52:10,679
address which identifies a node

2248
01:52:10,679 --> 01:52:12,540
um for example

2249
01:52:12,540 --> 01:52:16,260
when um Linda was talking about the site

2250
01:52:16,260 --> 01:52:19,020
based forward inside any base forwarding

2251
01:52:19,020 --> 01:52:21,360
uh it occurred to me that let's say you

2252
01:52:21,360 --> 01:52:23,159
have this IP address today an IP address

2253
01:52:23,159 --> 01:52:25,320
what we have here is identifies a node

2254
01:52:25,320 --> 01:52:27,420
but let's say we have a different scope

2255
01:52:27,420 --> 01:52:29,760
where we say we send this information

2256
01:52:29,760 --> 01:52:33,179
send this uh traffic to a site and there

2257
01:52:33,179 --> 01:52:34,980
we have an IP address that identifies a

2258
01:52:34,980 --> 01:52:38,280
site not a particular device so we could

2259
01:52:38,280 --> 01:52:40,440
have a different type here where we say

2260
01:52:40,440 --> 01:52:43,260
this is but this is a different type of

2261
01:52:43,260 --> 01:52:45,060
identifier it does not identify a node

2262
01:52:45,060 --> 01:52:47,699
but it identifies a site so it's just

2263
01:52:47,699 --> 01:52:49,679
extensible in a way

2264
01:52:49,679 --> 01:52:51,659
um for future

2265
01:52:51,659 --> 01:52:54,559
next slide please

2266
01:52:55,139 --> 01:52:58,320
and this is the proximity uh uh I mean

2267
01:52:58,320 --> 01:52:59,639
these are the different path constraints

2268
01:52:59,639 --> 01:53:02,040
argument tlvs uh one of them is

2269
01:53:02,040 --> 01:53:05,280
proximity check which can uh enable the

2270
01:53:05,280 --> 01:53:07,020
sender to say whether this next stop

2271
01:53:07,020 --> 01:53:10,020
should be restricted to be single hop or

2272
01:53:10,020 --> 01:53:12,300
it should be expected to be multi

2273
01:53:12,300 --> 01:53:13,760
multi-hop

2274
01:53:13,760 --> 01:53:16,260
or if both of these bits are cleared

2275
01:53:16,260 --> 01:53:19,860
then it'll take uh uh epgp single up and

2276
01:53:19,860 --> 01:53:21,780
ibjp is multi half just like what it is

2277
01:53:21,780 --> 01:53:24,420
today and other constraints like uh the

2278
01:53:24,420 --> 01:53:27,960
transport class ID that's a color or the

2279
01:53:27,960 --> 01:53:29,520
load balance Factor the different

2280
01:53:29,520 --> 01:53:31,800
constraints can be uh given and these

2281
01:53:31,800 --> 01:53:34,199
constraints will just qualify the end

2282
01:53:34,199 --> 01:53:36,600
point that has been uh

2283
01:53:36,600 --> 01:53:40,639
communicated with next slide please

2284
01:53:40,920 --> 01:53:42,900
yeah so these are the payload

2285
01:53:42,900 --> 01:53:46,080
encapsulation info signaling tlb so it

2286
01:53:46,080 --> 01:53:47,699
enumerates the different encapsulations

2287
01:53:47,699 --> 01:53:50,940
that we have today common ones the MPS

2288
01:53:50,940 --> 01:53:55,320
label info and uh so the things like ELC

2289
01:53:55,320 --> 01:53:59,100
uh capability or other capabilities of

2290
01:53:59,100 --> 01:54:02,040
mpls related capabilities are

2291
01:54:02,040 --> 01:54:04,860
uh encoded along with this MPS label

2292
01:54:04,860 --> 01:54:07,560
info so just that the information is

2293
01:54:07,560 --> 01:54:09,840
like scoped closer to where it belongs

2294
01:54:09,840 --> 01:54:13,320
and then other others are like Sr mpls

2295
01:54:13,320 --> 01:54:16,619
index level index and srv6 hit

2296
01:54:16,619 --> 01:54:19,380
um and in addition to encapsulation for

2297
01:54:19,380 --> 01:54:21,960
uh for every end point the what are the

2298
01:54:21,960 --> 01:54:24,239
attributes that the endpoint has either

2299
01:54:24,239 --> 01:54:25,860
available bandwidth or some something

2300
01:54:25,860 --> 01:54:29,580
else that may want to advise in future

2301
01:54:29,580 --> 01:54:32,159
next slide please

2302
01:54:32,159 --> 01:54:33,960
so

2303
01:54:33,960 --> 01:54:36,540
each as we see that each forwarding

2304
01:54:36,540 --> 01:54:38,580
instruction has a forwarding action tlv

2305
01:54:38,580 --> 01:54:41,340
and a set of arguments so each

2306
01:54:41,340 --> 01:54:43,380
forwarding action can specify this is

2307
01:54:43,380 --> 01:54:46,500
the minimum set of arguments that is

2308
01:54:46,500 --> 01:54:49,139
required and we see that this mechanism

2309
01:54:49,139 --> 01:54:53,280
is like very flexible so but it carries

2310
01:54:53,280 --> 01:54:56,280
the information uh closely scoped so

2311
01:54:56,280 --> 01:54:58,139
that we can set rules based on

2312
01:54:58,139 --> 01:55:00,600
forwarding action which are the minimum

2313
01:55:00,600 --> 01:55:03,000
set of arguments uh that needs to be

2314
01:55:03,000 --> 01:55:04,380
there so that the forwarding in

2315
01:55:04,380 --> 01:55:07,380
information is valid

2316
01:55:07,380 --> 01:55:10,260
um and what the rules based on that so

2317
01:55:10,260 --> 01:55:13,199
generally the error handling mechanism

2318
01:55:13,199 --> 01:55:15,360
is followed in this draft is like

2319
01:55:15,360 --> 01:55:17,880
attribute discard approach so try to

2320
01:55:17,880 --> 01:55:19,440
deal gracefully with the errors as much

2321
01:55:19,440 --> 01:55:22,380
as possible and unknown tlvs are ignored

2322
01:55:22,380 --> 01:55:26,040
and propagated and if if there are tlbs

2323
01:55:26,040 --> 01:55:27,480
which are received and they are not able

2324
01:55:27,480 --> 01:55:28,880
to be processed

2325
01:55:28,880 --> 01:55:32,159
logged with enough diagnostic data and

2326
01:55:32,159 --> 01:55:34,679
worst case keep the attributed discard

2327
01:55:34,679 --> 01:55:37,380
discard mode and don't use it for

2328
01:55:37,380 --> 01:55:39,540
example because we are able to advertise

2329
01:55:39,540 --> 01:55:42,360
multiple next stops in a single route so

2330
01:55:42,360 --> 01:55:46,100
if a receiver is not able to uh

2331
01:55:46,100 --> 01:55:48,840
process that many next house based on

2332
01:55:48,840 --> 01:55:51,659
the kind of acmp he supports so you can

2333
01:55:51,659 --> 01:55:54,739
just assume that

2334
01:55:54,739 --> 01:55:58,219
the whole attribute is in this card so

2335
01:55:58,219 --> 01:56:01,500
it's a more conservative approach that

2336
01:56:01,500 --> 01:56:03,600
is currently specified in the draft we

2337
01:56:03,600 --> 01:56:06,239
could say that okay you can install

2338
01:56:06,239 --> 01:56:08,480
whatever acmp

2339
01:56:08,480 --> 01:56:11,639
depth that you can and so those are the

2340
01:56:11,639 --> 01:56:14,159
things that we need to discuss

2341
01:56:14,159 --> 01:56:15,780
right there are more details about our

2342
01:56:15,780 --> 01:56:18,239
handling in section 6.

2343
01:56:18,239 --> 01:56:21,360
so yeah

2344
01:56:21,360 --> 01:56:23,219
um so with this that's the end of the

2345
01:56:23,219 --> 01:56:24,600
presentation here

2346
01:56:24,600 --> 01:56:26,639
you had a question

2347
01:56:26,639 --> 01:56:30,600
Hey Kevin Patel um I got number of

2348
01:56:30,600 --> 01:56:32,580
comments uh I can send this out to you

2349
01:56:32,580 --> 01:56:34,139
but I think

2350
01:56:34,139 --> 01:56:37,679
typically uh when we have an invalid

2351
01:56:37,679 --> 01:56:40,500
next stop we take the path out of the

2352
01:56:40,500 --> 01:56:44,219
best path right today

2353
01:56:44,219 --> 01:56:48,540
um so attribute discard might be just a

2354
01:56:48,540 --> 01:56:50,400
little too gentle you might just want to

2355
01:56:50,400 --> 01:56:52,580
consider taking the path out completely

2356
01:56:52,580 --> 01:56:55,619
uh if this is going to be a preferred

2357
01:56:55,619 --> 01:56:56,580
method

2358
01:56:56,580 --> 01:56:59,760
then my second comment is you've called

2359
01:56:59,760 --> 01:57:03,480
this as a next stop attribute but really

2360
01:57:03,480 --> 01:57:06,600
this is actually the more you start to

2361
01:57:06,600 --> 01:57:09,360
think about it packing attributes for a

2362
01:57:09,360 --> 01:57:10,920
given next stop and you can carry

2363
01:57:10,920 --> 01:57:13,199
multiple next stops now in a single

2364
01:57:13,199 --> 01:57:14,880
update message

2365
01:57:14,880 --> 01:57:16,800
is what you're trying to do

2366
01:57:16,800 --> 01:57:19,800
so you may want to have a better naming

2367
01:57:19,800 --> 01:57:21,360
and last

2368
01:57:21,360 --> 01:57:25,320
uh thing I had was uh you said it's

2369
01:57:25,320 --> 01:57:26,820
non-transitive

2370
01:57:26,820 --> 01:57:28,260
but

2371
01:57:28,260 --> 01:57:30,840
you probably want to consider making it

2372
01:57:30,840 --> 01:57:32,580
transitive if you are going to carry

2373
01:57:32,580 --> 01:57:34,380
local breath and other

2374
01:57:34,380 --> 01:57:36,780
character other such attributes across

2375
01:57:36,780 --> 01:57:39,860
ebgp boundaries

2376
01:57:39,920 --> 01:57:42,540
yeah so sorry what was the first

2377
01:57:42,540 --> 01:57:43,739
questions

2378
01:57:43,739 --> 01:57:46,679
first one was about

2379
01:57:46,679 --> 01:57:47,480
yeah

2380
01:57:47,480 --> 01:57:50,219
I can send you all these things yeah

2381
01:57:50,219 --> 01:57:51,840
yeah so

2382
01:57:51,840 --> 01:57:54,000
um basically if you think about it today

2383
01:57:54,000 --> 01:57:56,099
we have the next stop attribute right

2384
01:57:56,099 --> 01:57:58,860
which is mandatory and when we carry the

2385
01:57:58,860 --> 01:58:00,239
mnh

2386
01:58:00,239 --> 01:58:03,000
um so that next half will also be there

2387
01:58:03,000 --> 01:58:07,139
in this so about uh the validation of

2388
01:58:07,139 --> 01:58:08,340
the reachability of the next stop

2389
01:58:08,340 --> 01:58:11,219
endpoints igp cost all those things will

2390
01:58:11,219 --> 01:58:13,440
be calculated for all these Tech stops

2391
01:58:13,440 --> 01:58:15,480
as well because these all of these are

2392
01:58:15,480 --> 01:58:18,659
also next stops and uh where if you have

2393
01:58:18,659 --> 01:58:20,940
a different type of endpoint and which

2394
01:58:20,940 --> 01:58:23,460
has uh reachability propagated via

2395
01:58:23,460 --> 01:58:25,400
different mechanism then that will

2396
01:58:25,400 --> 01:58:27,659
specify how to calculate those

2397
01:58:27,659 --> 01:58:31,619
equivalent igp cost or reachability

2398
01:58:31,619 --> 01:58:34,440
um reachability verification and if none

2399
01:58:34,440 --> 01:58:36,000
of the legs are reachable then this

2400
01:58:36,000 --> 01:58:39,119
attribute is not usable and then the bgp

2401
01:58:39,119 --> 01:58:40,860
route will also be unusable because that

2402
01:58:40,860 --> 01:58:43,020
will mean that the next stop address

2403
01:58:43,020 --> 01:58:44,400
carried in the actual next stop

2404
01:58:44,400 --> 01:58:47,340
attribute is also unusable

2405
01:58:47,340 --> 01:58:49,860
um I think I hope that answers the first

2406
01:58:49,860 --> 01:58:50,820
question

2407
01:58:50,820 --> 01:58:57,540
and uh about uh the second one was about

2408
01:58:57,540 --> 01:58:59,820
yeah transitive non-transitive right so

2409
01:58:59,820 --> 01:59:02,699
we just wanted to be conservative in the

2410
01:59:02,699 --> 01:59:04,920
sense that uh

2411
01:59:04,920 --> 01:59:07,199
yeah so the whole idea is about being

2412
01:59:07,199 --> 01:59:09,840
conservative so that the attribute never

2413
01:59:09,840 --> 01:59:11,880
leaks out into the internet so that is

2414
01:59:11,880 --> 01:59:13,260
why we wanted to have it as

2415
01:59:13,260 --> 01:59:15,599
non-transitive though it may be a hurdle

2416
01:59:15,599 --> 01:59:19,280
uh is for the initial uh implementation

2417
01:59:19,280 --> 01:59:22,940
where we may not have all the RRS or

2418
01:59:22,940 --> 01:59:26,820
asbrs implemented uh this feature but

2419
01:59:26,820 --> 01:59:29,699
once we reached across that then I think

2420
01:59:29,699 --> 01:59:32,880
it it will be further longer if you take

2421
01:59:32,880 --> 01:59:36,480
a longer view it will be safer to have

2422
01:59:36,480 --> 01:59:39,360
it uh have that uh confidence that it's

2423
01:59:39,360 --> 01:59:40,800
not going to leak into the internet

2424
01:59:40,800 --> 01:59:43,800
whatever so that's why it was uh

2425
01:59:43,800 --> 01:59:47,300
kept us non-transitive

2426
01:59:52,380 --> 01:59:53,880
thanks here

2427
01:59:53,880 --> 01:59:56,040
uh so

2428
01:59:56,040 --> 01:59:57,960
this is less addressed to Kelly Raj and

2429
01:59:57,960 --> 02:00:00,900
more addressed to the working group

2430
02:00:00,900 --> 02:00:02,699
I would encourage everybody to take a

2431
02:00:02,699 --> 02:00:04,739
look at this draft even if this doesn't

2432
02:00:04,739 --> 02:00:06,599
seem to be something you're specifically

2433
02:00:06,599 --> 02:00:08,040
interested in

2434
02:00:08,040 --> 02:00:11,219
because we're hitting a theme within IDR

2435
02:00:11,219 --> 02:00:13,980
with head of a chair slide

2436
02:00:13,980 --> 02:00:16,800
about what do we do about carrying Next

2437
02:00:16,800 --> 02:00:19,739
Tops and forwarding information within

2438
02:00:19,739 --> 02:00:23,219
bgp pdus as a general topic

2439
02:00:23,219 --> 02:00:26,280
so Callie Rogers draft does a nice job

2440
02:00:26,280 --> 02:00:29,780
of sort of summarizing things like scope

2441
02:00:29,780 --> 02:00:32,639
propagation tying forwarding behaviors

2442
02:00:32,639 --> 02:00:36,480
to it and uh let's call them security

2443
02:00:36,480 --> 02:00:38,699
properties of these sort of things

2444
02:00:38,699 --> 02:00:41,159
we see a little bit of theme of this

2445
02:00:41,159 --> 02:00:44,460
also inside of the bgp car proposal with

2446
02:00:44,460 --> 02:00:46,920
the actual NRI trying to bind that to

2447
02:00:46,920 --> 02:00:49,619
the individual destinations

2448
02:00:49,619 --> 02:00:51,360
as Kyle Roger points out there's other

2449
02:00:51,360 --> 02:00:54,659
proposals like things we do in flow spec

2450
02:00:54,659 --> 02:00:58,679
and outside of bgp you know those of you

2451
02:00:58,679 --> 02:01:00,900
who've done work for example in Google's

2452
02:01:00,900 --> 02:01:02,699
g-riby interface

2453
02:01:02,699 --> 02:01:04,980
they recognize the next top groups for

2454
02:01:04,980 --> 02:01:06,780
their programming looks a little bit

2455
02:01:06,780 --> 02:01:08,699
like some of what Kali Raj is doing for

2456
02:01:08,699 --> 02:01:11,400
multi-nextop here in bgp

2457
02:01:11,400 --> 02:01:13,739
so it's a side effect

2458
02:01:13,739 --> 02:01:15,420
we're entering a space where we're

2459
02:01:15,420 --> 02:01:17,639
looking to see what do we want to

2460
02:01:17,639 --> 02:01:19,320
actually carry in B2B for this

2461
02:01:19,320 --> 02:01:21,780
information and do we continue encoding

2462
02:01:21,780 --> 02:01:24,420
this as small incremental changes to the

2463
02:01:24,420 --> 02:01:26,639
bgp update that we have today

2464
02:01:26,639 --> 02:01:28,500
or do we start looking at what you know

2465
02:01:28,500 --> 02:01:31,080
basically the update format is for our

2466
02:01:31,080 --> 02:01:33,000
future extensions

2467
02:01:33,000 --> 02:01:34,440
we do have a question at the microphone

2468
02:01:34,440 --> 02:01:38,960
yep uh I'm swadesh from Cisco uh

2469
02:01:38,960 --> 02:01:41,639
we I think we should Define the scope

2470
02:01:41,639 --> 02:01:44,760
because as we see today bgp carry a next

2471
02:01:44,760 --> 02:01:47,400
stop and now it's a proposal to carry a

2472
02:01:47,400 --> 02:01:49,800
multiple next stops it impacts bgp best

2473
02:01:49,800 --> 02:01:52,320
path how paths are invalidated in

2474
02:01:52,320 --> 02:01:55,199
general bgp I'm not sure how how we are

2475
02:01:55,199 --> 02:01:57,420
going towards it this top doesn't

2476
02:01:57,420 --> 02:02:00,179
clarify any of those stuff at all and

2477
02:02:00,179 --> 02:02:02,340
bgp packing we are carrying a label

2478
02:02:02,340 --> 02:02:04,860
forwarding info encapsulation everything

2479
02:02:04,860 --> 02:02:07,080
is attribute and this proposals will be

2480
02:02:07,080 --> 02:02:09,599
carried with bgp all the surface

2481
02:02:09,599 --> 02:02:12,540
so whatever we are developed for 10

2482
02:02:12,540 --> 02:02:13,880
years 15 years

2483
02:02:13,880 --> 02:02:17,099
it will impact badly so badly I'm saying

2484
02:02:17,099 --> 02:02:18,320
the word so

2485
02:02:18,320 --> 02:02:22,020
and ucmp today uh if I have two such

2486
02:02:22,020 --> 02:02:24,780
path how will I invalidate I have four

2487
02:02:24,780 --> 02:02:26,400
next stop in One path for next stop

2488
02:02:26,400 --> 02:02:27,960
another path or will I do tracking

2489
02:02:27,960 --> 02:02:30,960
invalidation so I'm not sure we should

2490
02:02:30,960 --> 02:02:32,880
be looking this with more concern than

2491
02:02:32,880 --> 02:02:35,159
if it is a I think scope has to be

2492
02:02:35,159 --> 02:02:37,380
defined before we even move ahead with

2493
02:02:37,380 --> 02:02:38,580
interesting

2494
02:02:38,580 --> 02:02:40,380
so as much as college would like to give

2495
02:02:40,380 --> 02:02:43,139
you time to respond to that and uh so

2496
02:02:43,139 --> 02:02:44,580
we're going to give Jeff like a minute

2497
02:02:44,580 --> 02:02:47,400
at the microphone uh we are at the end

2498
02:02:47,400 --> 02:02:49,679
of our session and we are over time so

2499
02:02:49,679 --> 02:02:51,659
Jeff please keep it quick yeah pretty

2500
02:02:51,659 --> 02:02:53,580
much to support the complexities

2501
02:02:53,580 --> 02:02:55,860
non-trivial it changes a lot of stuff in

2502
02:02:55,860 --> 02:02:58,560
bgp I can imagine it will take multiple

2503
02:02:58,560 --> 02:03:01,679
years to validate such image with such

2504
02:03:01,679 --> 02:03:03,840
functionality I mean it's becoming

2505
02:03:03,840 --> 02:03:05,880
completely non-human readable after

2506
02:03:05,880 --> 02:03:07,679
exchanges right

2507
02:03:07,679 --> 02:03:09,599
so let's please have this discussion on

2508
02:03:09,599 --> 02:03:11,159
the mailing list there's a lot of good

2509
02:03:11,159 --> 02:03:13,020
content here and again we're looking at

2510
02:03:13,020 --> 02:03:15,239
what we do the future even if it isn't

2511
02:03:15,239 --> 02:03:16,320
necessarily the rest of this draft but

2512
02:03:16,320 --> 02:03:18,420
this draft is a good place to start

2513
02:03:18,420 --> 02:03:20,280
having the discussion

2514
02:03:20,280 --> 02:03:23,040
hi dear thank you for this session we

2515
02:03:23,040 --> 02:03:27,560
will see you at ietf 116.

2516
02:03:28,199 --> 02:03:30,739
thank you

2517
02:03:39,659 --> 02:03:42,599
if you haven't scanned the QR code to

2518
02:03:42,599 --> 02:03:45,060
sign in that's our blue sheets you want

2519
02:03:45,060 --> 02:03:47,880
to make sure there's space in the room

2520
02:03:47,880 --> 02:03:51,139
scan the code

2521
02:03:58,699 --> 02:04:02,960
now a little

