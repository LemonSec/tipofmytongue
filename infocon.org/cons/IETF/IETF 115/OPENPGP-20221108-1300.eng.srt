1
00:00:04,860 --> 00:00:07,860
foreign

2
00:00:15,480 --> 00:00:18,660
okay so good afternoon welcome to the

3
00:00:18,660 --> 00:00:21,720
open pgp working group uh

4
00:00:21,720 --> 00:00:24,060
I'm Stephen Farrell my co-chair because

5
00:00:24,060 --> 00:00:26,640
he is a large head to my left on the

6
00:00:26,640 --> 00:00:27,720
screen

7
00:00:27,720 --> 00:00:29,420
um

8
00:00:29,420 --> 00:00:32,940
and we have 90 minutes today so I don't

9
00:00:32,940 --> 00:00:34,320
think we're short of time but we'll see

10
00:00:34,320 --> 00:00:36,120
how the discussion runs

11
00:00:36,120 --> 00:00:38,940
uh so tkg you're you're you have the

12
00:00:38,940 --> 00:00:40,559
slides open I guess you want to advance

13
00:00:40,559 --> 00:00:41,579
one

14
00:00:41,579 --> 00:00:44,059
sure

15
00:00:44,160 --> 00:00:46,500
thank you uh so this is the note well

16
00:00:46,500 --> 00:00:48,600
go ahead do you wanna do you want to do

17
00:00:48,600 --> 00:00:50,579
it Stephen I can just run the slides

18
00:00:50,579 --> 00:00:52,320
yeah you you've got the button so you go

19
00:00:52,320 --> 00:00:53,340
ahead

20
00:00:53,340 --> 00:00:55,680
okay uh this is the note well we're on

21
00:00:55,680 --> 00:00:57,600
day two hopefully you've already seen

22
00:00:57,600 --> 00:01:02,460
the Noel uh just covers what uh to do

23
00:01:02,460 --> 00:01:04,979
here within the IDF a couple more slides

24
00:01:04,979 --> 00:01:07,500
here breaking that down a bit further

25
00:01:07,500 --> 00:01:08,159
um

26
00:01:08,159 --> 00:01:10,860
so we have hybrid meeting tips here uh

27
00:01:10,860 --> 00:01:12,119
please make sure if you're in the room

28
00:01:12,119 --> 00:01:13,860
you're connected to the meadeco light

29
00:01:13,860 --> 00:01:15,119
client

30
00:01:15,119 --> 00:01:17,640
um link from data tracker agenda if you

31
00:01:17,640 --> 00:01:19,140
are not in the room

32
00:01:19,140 --> 00:01:21,840
um there's just some basic fits there on

33
00:01:21,840 --> 00:01:24,320
how to avoid feedback and

34
00:01:24,320 --> 00:01:27,240
excessive bandwidth consumption

35
00:01:27,240 --> 00:01:29,280
um thanks for being responsible with the

36
00:01:29,280 --> 00:01:31,740
masks there

37
00:01:31,740 --> 00:01:33,180
um and one more slide here just a

38
00:01:33,180 --> 00:01:35,840
reminder of the code of conduct

39
00:01:35,840 --> 00:01:40,259
we are aiming for courteous discussion

40
00:01:40,259 --> 00:01:43,079
um please communicate slowly limit the

41
00:01:43,079 --> 00:01:45,020
use of slang and jargon

42
00:01:45,020 --> 00:01:47,460
I might run a Fallout of some of those

43
00:01:47,460 --> 00:01:50,040
things myself feel free to encourage me

44
00:01:50,040 --> 00:01:52,560
to correct if I do

45
00:01:52,560 --> 00:01:56,280
um and we argue through a reason not

46
00:01:56,280 --> 00:01:57,780
through intimidation or personal attack

47
00:01:57,780 --> 00:02:00,180
and we're aiming for solutions that work

48
00:02:00,180 --> 00:02:01,979
for the whole internet ecosystem not

49
00:02:01,979 --> 00:02:04,380
just for one particular vendor

50
00:02:04,380 --> 00:02:08,280
um or one particular Tech stack

51
00:02:08,280 --> 00:02:10,919
um and we are all here to contribute to

52
00:02:10,919 --> 00:02:14,238
the ongoing work here

53
00:02:14,340 --> 00:02:16,080
so this is the basic agenda that we have

54
00:02:16,080 --> 00:02:17,099
coming up

55
00:02:17,099 --> 00:02:18,900
um but it's a series of discussions of

56
00:02:18,900 --> 00:02:20,280
points that have been raised during

57
00:02:20,280 --> 00:02:21,840
working group last call we've been in

58
00:02:21,840 --> 00:02:23,879
work group last call for several months

59
00:02:23,879 --> 00:02:26,580
we're now on draft of seven

60
00:02:26,580 --> 00:02:27,360
um

61
00:02:27,360 --> 00:02:29,879
of the cryptographic refresh which is

62
00:02:29,879 --> 00:02:32,400
the only chartered work item so the main

63
00:02:32,400 --> 00:02:35,340
point of the meeting here today is to

64
00:02:35,340 --> 00:02:37,500
review the points that have been raised

65
00:02:37,500 --> 00:02:40,920
uh in the working group last call

66
00:02:40,920 --> 00:02:41,580
um

67
00:02:41,580 --> 00:02:45,120
and uh if we happen to have some time at

68
00:02:45,120 --> 00:02:47,459
the end uh Aaron Worcester is offered to

69
00:02:47,459 --> 00:02:50,280
present some material on post Quantum

70
00:02:50,280 --> 00:02:53,879
potential for uh open pgp which would

71
00:02:53,879 --> 00:02:55,560
need to be done as a recharger

72
00:02:55,560 --> 00:02:57,959
eventually so you know if we have time

73
00:02:57,959 --> 00:02:59,760
in the session today where we've covered

74
00:02:59,760 --> 00:03:01,800
the issues of the last call and people

75
00:03:01,800 --> 00:03:04,319
are committed to reviewing

76
00:03:04,319 --> 00:03:05,459
um we can get into some of the other

77
00:03:05,459 --> 00:03:08,280
pieces anybody want to try to push the

78
00:03:08,280 --> 00:03:11,599
agenda around a little bit here

79
00:03:13,920 --> 00:03:15,659
don't see anybody

80
00:03:15,659 --> 00:03:17,220
attempting to bash the agenda in the

81
00:03:17,220 --> 00:03:19,340
room

82
00:03:19,640 --> 00:03:22,200
for the recording also we have no takers

83
00:03:22,200 --> 00:03:24,239
Aaron and Daniel and Rick van Wright

84
00:03:24,239 --> 00:03:26,099
have agreed to help

85
00:03:26,099 --> 00:03:28,860
we're covered for no takers and things

86
00:03:28,860 --> 00:03:32,959
thank you very much tuna takers

87
00:03:33,300 --> 00:03:36,180
okay so yeah so Pikachu is going to run

88
00:03:36,180 --> 00:03:37,560
this because he prepared the slides and

89
00:03:37,560 --> 00:03:38,879
actually knows it much better than I do

90
00:03:38,879 --> 00:03:40,980
anyway so uh so he's going to run these

91
00:03:40,980 --> 00:03:42,480
issues um

92
00:03:42,480 --> 00:03:44,280
again for the no takers if you can kind

93
00:03:44,280 --> 00:03:46,680
of take note of any actions or

94
00:03:46,680 --> 00:03:49,200
conclusions that's the main thing

95
00:03:49,200 --> 00:03:51,060
yep

96
00:03:51,060 --> 00:03:53,879
um so uh the Baseline just to make sure

97
00:03:53,879 --> 00:03:55,799
everybody's on the same page we had some

98
00:03:55,799 --> 00:03:57,299
discussion

99
00:03:57,299 --> 00:04:01,019
um uh on the list uh we believe that the

100
00:04:01,019 --> 00:04:03,299
crypto refresh draft zero seven is going

101
00:04:03,299 --> 00:04:05,280
to be the basis for a working group work

102
00:04:05,280 --> 00:04:09,540
uh going forward our goal is to avoid we

103
00:04:09,540 --> 00:04:11,879
did decide on the list that there seemed

104
00:04:11,879 --> 00:04:13,439
to be a rough consensus towards trying

105
00:04:13,439 --> 00:04:16,738
to avoid conflicts with an alternate

106
00:04:16,738 --> 00:04:21,238
drafts draft cook where it's possible

107
00:04:21,238 --> 00:04:22,019
um

108
00:04:22,019 --> 00:04:24,780
that will be on the agenda here today uh

109
00:04:24,780 --> 00:04:28,560
but what we also need uh to confirm for

110
00:04:28,560 --> 00:04:29,820
working group last call is we need

111
00:04:29,820 --> 00:04:31,259
reviews

112
00:04:31,259 --> 00:04:33,919
um as you can see from the slides here

113
00:04:33,919 --> 00:04:36,900
several uh interesting and useful topics

114
00:04:36,900 --> 00:04:38,580
have been raised in working group last

115
00:04:38,580 --> 00:04:41,400
call but those are not the same thing as

116
00:04:41,400 --> 00:04:44,040
a in-depth review of what is basically a

117
00:04:44,040 --> 00:04:45,540
pretty lengthy document

118
00:04:45,540 --> 00:04:48,360
so I do encourage you if you have an

119
00:04:48,360 --> 00:04:50,220
opportunity to read through the document

120
00:04:50,220 --> 00:04:51,900
give a review even if the review says

121
00:04:51,900 --> 00:04:54,180
advert this documented it looks good or

122
00:04:54,180 --> 00:04:56,580
even better I've implemented it those

123
00:04:56,580 --> 00:04:59,120
are great reviews to have but we need

124
00:04:59,120 --> 00:05:02,160
vocal responses reviews on list even

125
00:05:02,160 --> 00:05:03,720
from people who have been contributing

126
00:05:03,720 --> 00:05:05,639
to the document actively if you can

127
00:05:05,639 --> 00:05:06,960
speak up with a review that would be

128
00:05:06,960 --> 00:05:08,880
really important if we can't get this

129
00:05:08,880 --> 00:05:10,500
out the door and straps out the door

130
00:05:10,500 --> 00:05:12,120
then we don't get to move on to any of

131
00:05:12,120 --> 00:05:13,860
the future work that I know some people

132
00:05:13,860 --> 00:05:17,820
in the group have been interested in

133
00:05:17,820 --> 00:05:21,060
so that represents the state of play I

134
00:05:21,060 --> 00:05:22,620
hope that that matches what everyone

135
00:05:22,620 --> 00:05:23,820
else has seen I don't think there's

136
00:05:23,820 --> 00:05:25,620
anything new here just want to make sure

137
00:05:25,620 --> 00:05:28,199
that everybody here is aware of where

138
00:05:28,199 --> 00:05:29,400
we're at

139
00:05:29,400 --> 00:05:33,780
uh so so if you go back on so on the can

140
00:05:33,780 --> 00:05:36,300
I just check uh how many people have or

141
00:05:36,300 --> 00:05:37,740
how many people would consider they're

142
00:05:37,740 --> 00:05:40,020
they're pretty familiar with the latest

143
00:05:40,020 --> 00:05:43,159
draft or the previous one

144
00:05:44,479 --> 00:05:48,419
so I see three hands up in the room and

145
00:05:48,419 --> 00:05:51,360
one remote

146
00:05:51,360 --> 00:05:54,180
and that kind of seems like not really

147
00:05:54,180 --> 00:05:58,500
enough I have to say so so yeah

148
00:05:58,500 --> 00:06:00,600
so I'm asking how many people would

149
00:06:00,600 --> 00:06:02,340
consider they're pretty familiar with

150
00:06:02,340 --> 00:06:04,320
draft six or draft seven of crypto

151
00:06:04,320 --> 00:06:06,780
refresh and we had three hands in the

152
00:06:06,780 --> 00:06:08,759
room one was the editor another one was

153
00:06:08,759 --> 00:06:09,960
a member of the design team and a

154
00:06:09,960 --> 00:06:12,120
coloring and a co-chair

155
00:06:12,120 --> 00:06:15,620
um so that that seems a little bit short

156
00:06:15,720 --> 00:06:16,740
um

157
00:06:16,740 --> 00:06:19,080
would anybody be willing to kind of

158
00:06:19,080 --> 00:06:21,060
volunteer to do a review of the

159
00:06:21,060 --> 00:06:22,319
documents

160
00:06:22,319 --> 00:06:26,419
in the next number of weeks

161
00:06:26,520 --> 00:06:29,340
so uh and can the note takers get their

162
00:06:29,340 --> 00:06:30,240
names

163
00:06:30,240 --> 00:06:32,340
so Rick is one of the note takers of

164
00:06:32,340 --> 00:06:34,500
volunteered himself

165
00:06:34,500 --> 00:06:36,539
so at the back of the room I didn't I

166
00:06:36,539 --> 00:06:38,400
didn't

167
00:06:38,400 --> 00:06:40,259
great

168
00:06:40,259 --> 00:06:42,780
and did you say yes

169
00:06:42,780 --> 00:06:45,060
I thought you have put your hand up

170
00:06:45,060 --> 00:06:48,020
no you're not gonna

171
00:06:48,960 --> 00:06:51,539
okay so we have

172
00:06:51,539 --> 00:06:54,539
and Robin is on Robin is volunteering as

173
00:06:54,539 --> 00:06:56,719
well

174
00:06:57,780 --> 00:06:59,400
Robin is

175
00:06:59,400 --> 00:07:01,560
okay so we did I didn't scroll down

176
00:07:01,560 --> 00:07:04,620
okay so so that's good and again if we

177
00:07:04,620 --> 00:07:06,300
can get those in in the next couple of

178
00:07:06,300 --> 00:07:09,259
weeks that would be fantastic

179
00:07:12,199 --> 00:07:14,220
and I think he's going to put his name

180
00:07:14,220 --> 00:07:16,139
into Jabber

181
00:07:16,139 --> 00:07:18,419
so once I see it I fold it out and if it

182
00:07:18,419 --> 00:07:21,139
doesn't appear I'll go grab them

183
00:07:21,139 --> 00:07:23,940
great okay yeah it'd be great to have

184
00:07:23,940 --> 00:07:25,560
those videos and again if anybody has a

185
00:07:25,560 --> 00:07:27,360
chance to also just I mean I know some

186
00:07:27,360 --> 00:07:30,000
people are like you've implemented it

187
00:07:30,000 --> 00:07:31,199
but I don't know if the last time you

188
00:07:31,199 --> 00:07:34,940
read the whole thing oh yeah

189
00:07:36,300 --> 00:07:38,400
okay so add yourself to the list of

190
00:07:38,400 --> 00:07:41,419
victims please

191
00:07:41,699 --> 00:07:44,400
um and Jonathan Hamill is the jump the

192
00:07:44,400 --> 00:07:45,960
other person volunteers Jonathan so

193
00:07:45,960 --> 00:07:47,880
thank you Jonathan

194
00:07:47,880 --> 00:07:50,220
yeah thank you for the reviewers

195
00:07:50,220 --> 00:07:51,479
it's appreciated

196
00:07:51,479 --> 00:07:52,979
does anybody else want to step off the

197
00:07:52,979 --> 00:07:55,880
cliff while we're all there

198
00:07:56,039 --> 00:07:59,360
everyone else is doing it

199
00:07:59,940 --> 00:08:02,759
I I don't see anyone just here okay but

200
00:08:02,759 --> 00:08:04,440
thanks it's important that we get those

201
00:08:04,440 --> 00:08:06,360
because you know

202
00:08:06,360 --> 00:08:09,180
stuff gets missed otherwise though okay

203
00:08:09,180 --> 00:08:12,000
sorry go ahead no thank you that's uh

204
00:08:12,000 --> 00:08:13,380
this is an important part of the process

205
00:08:13,380 --> 00:08:14,880
here

206
00:08:14,880 --> 00:08:17,759
um so this is the the

207
00:08:17,759 --> 00:08:19,740
um one of the largest concerns that was

208
00:08:19,740 --> 00:08:22,199
raised on the list uh during the most

209
00:08:22,199 --> 00:08:25,259
recent uh discussion which is that there

210
00:08:25,259 --> 00:08:27,419
is this competing draft uh called

211
00:08:27,419 --> 00:08:29,099
draftkook

212
00:08:29,099 --> 00:08:31,139
um which has a little bit of a confusing

213
00:08:31,139 --> 00:08:33,179
name RFC 4880 bits even though it's an

214
00:08:33,179 --> 00:08:34,740
individual draft it's unlikely to

215
00:08:34,740 --> 00:08:36,479
actually be

216
00:08:36,479 --> 00:08:39,839
um coordinated Abyss but it does try to

217
00:08:39,839 --> 00:08:42,240
use some of the similar code points and

218
00:08:42,240 --> 00:08:45,540
version numbers to what we are using

219
00:08:45,540 --> 00:08:47,519
and they're you know the honest

220
00:08:47,519 --> 00:08:50,040
discussion was about whether or not

221
00:08:50,040 --> 00:08:52,860
um it's possible for us to safely avoid

222
00:08:52,860 --> 00:08:55,200
conflicts with that draft since it

223
00:08:55,200 --> 00:08:57,240
doesn't look like that draft is going to

224
00:08:57,240 --> 00:08:59,459
try particularly hard to avoid conflicts

225
00:08:59,459 --> 00:09:03,300
with uh the crypto refresh

226
00:09:03,300 --> 00:09:04,440
um

227
00:09:04,440 --> 00:09:07,380
so I went through the document and did a

228
00:09:07,380 --> 00:09:08,940
bit of a review to look for you know

229
00:09:08,940 --> 00:09:10,260
where are the places where there are

230
00:09:10,260 --> 00:09:13,380
actual conflicts in terms of code points

231
00:09:13,380 --> 00:09:16,019
um and uh

232
00:09:16,019 --> 00:09:18,120
the current the slide represent here

233
00:09:18,120 --> 00:09:20,220
represents my understanding of the

234
00:09:20,220 --> 00:09:21,899
current situation from the best that I

235
00:09:21,899 --> 00:09:24,200
could understand

236
00:09:24,360 --> 00:09:26,580
of what's missing the two main things

237
00:09:26,580 --> 00:09:30,420
are the new public key format it's

238
00:09:30,420 --> 00:09:33,060
called version five in both drafts and

239
00:09:33,060 --> 00:09:35,160
it yet it behaves slightly differently

240
00:09:35,160 --> 00:09:37,140
exactly differently and the new

241
00:09:37,140 --> 00:09:38,820
signature format is called version five

242
00:09:38,820 --> 00:09:40,680
in both drafts and it also behaves

243
00:09:40,680 --> 00:09:42,600
slightly differently

244
00:09:42,600 --> 00:09:44,700
um so one possible way that has been

245
00:09:44,700 --> 00:09:47,339
proposed on list uh to

246
00:09:47,339 --> 00:09:50,640
uh deconflict is to Simply move the

247
00:09:50,640 --> 00:09:52,440
crypto refresh draft to call those

248
00:09:52,440 --> 00:09:54,660
things V6

249
00:09:54,660 --> 00:09:55,500
um

250
00:09:55,500 --> 00:09:57,600
and that's an option

251
00:09:57,600 --> 00:09:59,880
um so it would be interesting to hear

252
00:09:59,880 --> 00:10:02,519
from folks who uh have an opinion on

253
00:10:02,519 --> 00:10:04,320
that I will note in the right hand

254
00:10:04,320 --> 00:10:06,360
column on the side here

255
00:10:06,360 --> 00:10:08,700
um the design team already did a fair

256
00:10:08,700 --> 00:10:10,680
amount of work to ensure that there is

257
00:10:10,680 --> 00:10:12,839
no conflict on other parts of the code

258
00:10:12,839 --> 00:10:14,279
points

259
00:10:14,279 --> 00:10:15,959
um and there's a there's a list on the

260
00:10:15,959 --> 00:10:18,420
side here feel free to ask for

261
00:10:18,420 --> 00:10:19,920
clarifications I don't know that I need

262
00:10:19,920 --> 00:10:22,740
to read through all of the details but

263
00:10:22,740 --> 00:10:23,820
there are some subtle differences

264
00:10:23,820 --> 00:10:26,100
between the two drafts that already do

265
00:10:26,100 --> 00:10:27,959
not conflict because of the work the

266
00:10:27,959 --> 00:10:30,779
design team already did so it's mainly a

267
00:10:30,779 --> 00:10:32,279
key and signature versions that we need

268
00:10:32,279 --> 00:10:34,019
to change in my understanding of the two

269
00:10:34,019 --> 00:10:35,160
documents

270
00:10:35,160 --> 00:10:37,500
to avoid a full conflict so I wonder

271
00:10:37,500 --> 00:10:39,600
whether anybody here

272
00:10:39,600 --> 00:10:41,519
um I got two questions for the room one

273
00:10:41,519 --> 00:10:44,399
is did this review miss anything

274
00:10:44,399 --> 00:10:45,660
um and obviously we don't have to be

275
00:10:45,660 --> 00:10:49,560
conclusive here and two is if this is

276
00:10:49,560 --> 00:10:51,959
the only thing or if this is a work

277
00:10:51,959 --> 00:10:55,560
group interested in making this kind of

278
00:10:55,560 --> 00:10:59,239
a change to avoid a conflict

279
00:10:59,760 --> 00:11:01,920
Paul go ahead

280
00:11:01,920 --> 00:11:04,019
hi I'm Paul Walker speaking as an

281
00:11:04,019 --> 00:11:05,160
individual

282
00:11:05,160 --> 00:11:07,860
um from a process point I find it a

283
00:11:07,860 --> 00:11:10,079
little strange that the working group

284
00:11:10,079 --> 00:11:12,060
that basically sort of owns the Ayana

285
00:11:12,060 --> 00:11:14,220
Registries now has to see if it can use

286
00:11:14,220 --> 00:11:17,040
its own Ariana Registries because some

287
00:11:17,040 --> 00:11:19,140
of the squatting on the numbers

288
00:11:19,140 --> 00:11:21,360
so from a process point of view

289
00:11:21,360 --> 00:11:25,380
I think we should just continue going on

290
00:11:25,380 --> 00:11:27,720
using our registry numbers and if anyone

291
00:11:27,720 --> 00:11:29,760
is squatting on them then it's their

292
00:11:29,760 --> 00:11:31,140
problem right they should not do that

293
00:11:31,140 --> 00:11:33,600
they should use private use numbers or

294
00:11:33,600 --> 00:11:35,700
they should uh

295
00:11:35,700 --> 00:11:38,100
pick experimental numbers or like like

296
00:11:38,100 --> 00:11:40,740
the the fact that that someone just

297
00:11:40,740 --> 00:11:43,200
unilaterally decides to use their power

298
00:11:43,200 --> 00:11:44,579
of deployment

299
00:11:44,579 --> 00:11:46,920
to sort of interfere with our Registries

300
00:11:46,920 --> 00:11:49,500
I think is from a from a more principled

301
00:11:49,500 --> 00:11:51,720
point of view I would just say we should

302
00:11:51,720 --> 00:11:53,220
ignore that

303
00:11:53,220 --> 00:11:55,320
I agree that that could cause

304
00:11:55,320 --> 00:11:58,459
operational issues

305
00:12:06,000 --> 00:12:08,839
go ahead Aaron

306
00:12:09,899 --> 00:12:12,300
um also I think that the points that

307
00:12:12,300 --> 00:12:13,740
were already conflicted were already

308
00:12:13,740 --> 00:12:16,140
conflicted because there was a wide

309
00:12:16,140 --> 00:12:18,000
deployment or at least a deployment of

310
00:12:18,000 --> 00:12:19,740
these in the wild while I think

311
00:12:19,740 --> 00:12:22,380
signature version 5 is not yet

312
00:12:22,380 --> 00:12:25,160
so I understand

313
00:12:25,160 --> 00:12:29,100
using the C by dv2 but I would not

314
00:12:29,100 --> 00:12:31,320
justify now switching already because

315
00:12:31,320 --> 00:12:35,420
someone threatens let's say it like this

316
00:12:36,720 --> 00:12:38,160
yeah

317
00:12:38,160 --> 00:12:39,959
secure

318
00:12:39,959 --> 00:12:41,760
uh Daniel I believe you're next thank

319
00:12:41,760 --> 00:12:42,720
you

320
00:12:42,720 --> 00:12:46,019
yes so Daniel Heavens proton

321
00:12:46,019 --> 00:12:49,079
um I I do want to note that uh Werner

322
00:12:49,079 --> 00:12:51,420
said at some point that well he seemed

323
00:12:51,420 --> 00:12:53,940
open to still changing

324
00:12:53,940 --> 00:12:55,019
um

325
00:12:55,019 --> 00:12:57,540
key version 5 and signature version five

326
00:12:57,540 --> 00:12:59,760
since yeah as Aaron noted it's not yet

327
00:12:59,760 --> 00:13:03,959
deployed although I worry that

328
00:13:03,959 --> 00:13:07,079
well I I'm not sure if uh he would be

329
00:13:07,079 --> 00:13:10,380
open to using it in the way that the

330
00:13:10,380 --> 00:13:13,440
crypto refresh defines and yeah it would

331
00:13:13,440 --> 00:13:17,459
be nice if he were here in my opinion

332
00:13:17,459 --> 00:13:20,459
um so that we could ask that question

333
00:13:20,459 --> 00:13:23,760
um however I I do worry that if um we

334
00:13:23,760 --> 00:13:26,940
deploy version 5 and um

335
00:13:26,940 --> 00:13:29,820
and he deploys version five in a way

336
00:13:29,820 --> 00:13:31,740
that it's currently implemented

337
00:13:31,740 --> 00:13:34,740
that will have some incompatibilities

338
00:13:34,740 --> 00:13:37,139
and that I mean the worst case scenario

339
00:13:37,139 --> 00:13:39,420
I see is that we'll end up with try

340
00:13:39,420 --> 00:13:42,180
catches everywhere to you know parse one

341
00:13:42,180 --> 00:13:44,100
way and then if it fails Parts the other

342
00:13:44,100 --> 00:13:47,639
way I I would prefer to avoid that if at

343
00:13:47,639 --> 00:13:48,899
all possible

344
00:13:48,899 --> 00:13:52,680
so even though I agree with the the

345
00:13:52,680 --> 00:13:55,139
comments that

346
00:13:55,139 --> 00:13:58,200
um we shouldn't necessarily

347
00:13:58,200 --> 00:13:59,160
um

348
00:13:59,160 --> 00:14:01,740
throw our hands up in here and say okay

349
00:14:01,740 --> 00:14:03,899
let's go with version six

350
00:14:03,899 --> 00:14:05,279
but

351
00:14:05,279 --> 00:14:08,880
um that might still be be preferable to

352
00:14:08,880 --> 00:14:12,720
that outcome although I mean Devil's

353
00:14:12,720 --> 00:14:15,180
Advocate would say that maybe if if

354
00:14:15,180 --> 00:14:17,399
werners really

355
00:14:17,399 --> 00:14:18,959
um

356
00:14:18,959 --> 00:14:20,940
um contrary and then later he would

357
00:14:20,940 --> 00:14:24,300
deploy some other version 6 which is a

358
00:14:24,300 --> 00:14:27,060
continuation of his current version 5

359
00:14:27,060 --> 00:14:28,940
and then we're in an even bigger mess

360
00:14:28,940 --> 00:14:32,579
although I I would I mean that would be

361
00:14:32,579 --> 00:14:35,300
you know really

362
00:14:35,399 --> 00:14:38,040
um if version 6 is by then already

363
00:14:38,040 --> 00:14:40,860
deployed I would really doubt uh that

364
00:14:40,860 --> 00:14:42,660
but

365
00:14:42,660 --> 00:14:46,079
um yeah it's something to consider

366
00:14:46,079 --> 00:14:49,079
so two two points um

367
00:14:49,079 --> 00:14:51,300
I guess you know we can't really

368
00:14:51,300 --> 00:14:53,279
speculate as the

369
00:14:53,279 --> 00:14:54,720
the motivation or action of somebody

370
00:14:54,720 --> 00:14:57,480
who's not present so I don't think

371
00:14:57,480 --> 00:14:58,620
there's that much more than that the

372
00:14:58,620 --> 00:15:00,779
second point is that I mean we you know

373
00:15:00,779 --> 00:15:02,579
in the discussion as to whether to go

374
00:15:02,579 --> 00:15:04,320
forward crypto refresh

375
00:15:04,320 --> 00:15:05,820
I think there was a pretty clear

376
00:15:05,820 --> 00:15:07,800
consensus to go forward with crypto

377
00:15:07,800 --> 00:15:10,260
refresh but also to avoid conflict where

378
00:15:10,260 --> 00:15:12,720
feasible I mean I think that was a

379
00:15:12,720 --> 00:15:14,699
pretty clear uh outcome of that

380
00:15:14,699 --> 00:15:18,060
discussion I think so while you know we

381
00:15:18,060 --> 00:15:20,880
there might be some gritted teeth

382
00:15:20,880 --> 00:15:23,100
um but I think that that's essentially

383
00:15:23,100 --> 00:15:24,959
what the I think the conclusion of that

384
00:15:24,959 --> 00:15:28,079
fairly dented discussion was so I guess

385
00:15:28,079 --> 00:15:30,060
here it seems quite obvious that the

386
00:15:30,060 --> 00:15:34,079
avoiding conflict is feasible but it's

387
00:15:34,079 --> 00:15:36,720
not 100 certain whether there's conflict

388
00:15:36,720 --> 00:15:41,040
yet right it seems uh version 5 of

389
00:15:41,040 --> 00:15:43,440
werner's draft is not deployed yet as

390
00:15:43,440 --> 00:15:45,899
far as I know so I guess the question is

391
00:15:45,899 --> 00:15:48,060
whether we should anticipate that

392
00:15:48,060 --> 00:15:52,139
conflict or not but again I think all we

393
00:15:52,139 --> 00:15:54,300
have to go on is the text that he

394
00:15:54,300 --> 00:15:56,220
submitted in an individual draft okay as

395
00:15:56,220 --> 00:15:59,040
a version five right all right

396
00:15:59,040 --> 00:16:01,380
we're gonna take this but again we do

397
00:16:01,380 --> 00:16:03,720
what the working group wants but it's

398
00:16:03,720 --> 00:16:05,279
it's a tricky and undesirable situation

399
00:16:05,279 --> 00:16:07,139
but uh dealing with it is what we're

400
00:16:07,139 --> 00:16:09,380
here for

401
00:16:10,500 --> 00:16:13,560
so do you want to go ahead and make a

402
00:16:13,560 --> 00:16:16,579
proposal or

403
00:16:18,959 --> 00:16:20,760
your music

404
00:16:20,760 --> 00:16:23,100
no you we're not getting your audio to

405
00:16:23,100 --> 00:16:25,459
Kitty

406
00:16:25,980 --> 00:16:29,839
because that's because I was muted

407
00:16:29,839 --> 00:16:34,019
sorry about that so yeah so I will frame

408
00:16:34,019 --> 00:16:35,639
a conquer proposal I'm not even sure

409
00:16:35,639 --> 00:16:39,060
whether I'm in favor of it or not

410
00:16:39,060 --> 00:16:41,399
um but the conquer proposal would be

411
00:16:41,399 --> 00:16:46,620
to move the current draft from V5 to V6

412
00:16:46,620 --> 00:16:50,160
or Keys signatures

413
00:16:50,160 --> 00:16:54,000
one pass signatures and pkes-k

414
00:16:54,000 --> 00:16:57,540
right so technically we don't need to

415
00:16:57,540 --> 00:16:59,639
move one pass signatures and PK esk

416
00:16:59,639 --> 00:17:01,139
because those are already decompleted

417
00:17:01,139 --> 00:17:03,839
but the idea is if we just announced

418
00:17:03,839 --> 00:17:06,240
them all as version six all at once the

419
00:17:06,240 --> 00:17:08,579
draft is sort of more coherently seen as

420
00:17:08,579 --> 00:17:11,099
OPP version 6.

421
00:17:11,099 --> 00:17:13,559
um we could also if we wanted to move

422
00:17:13,559 --> 00:17:16,559
this SCI PD V2 to V6 if we wanted

423
00:17:16,559 --> 00:17:19,439
everything to be V6 but I'm proposing

424
00:17:19,439 --> 00:17:21,240
the proposal I'm making here is that we

425
00:17:21,240 --> 00:17:24,780
leave sapd32 sv2 and we just change the

426
00:17:24,780 --> 00:17:26,280
other

427
00:17:26,280 --> 00:17:30,000
four version numbers to V6 in the draft

428
00:17:30,000 --> 00:17:33,059
so if that is one option that we could

429
00:17:33,059 --> 00:17:34,500
do

430
00:17:34,500 --> 00:17:35,220
um

431
00:17:35,220 --> 00:17:37,559
I'm kind of tempted to do a show of

432
00:17:37,559 --> 00:17:39,299
hands here whether people want to do

433
00:17:39,299 --> 00:17:42,059
that or actively do not want to do that

434
00:17:42,059 --> 00:17:44,059
um

435
00:17:44,160 --> 00:17:46,080
yeah so well just as a suggestion Could

436
00:17:46,080 --> 00:17:49,260
you type that into the chat and let

437
00:17:49,260 --> 00:17:53,120
people digest it for a moment and

438
00:17:53,340 --> 00:17:56,580
but doing that now great

439
00:17:56,580 --> 00:17:58,440
so

440
00:17:58,440 --> 00:18:01,640
so keep an eye on the chat

441
00:18:06,059 --> 00:18:08,760
and

442
00:18:08,760 --> 00:18:10,380
even if you need a moment to digest it

443
00:18:10,380 --> 00:18:11,700
if you want to get in on the mic line

444
00:18:11,700 --> 00:18:13,799
then please feel free to join the queue

445
00:18:13,799 --> 00:18:16,100
right now

446
00:18:16,140 --> 00:18:18,720
and I guess we will at some point ask if

447
00:18:18,720 --> 00:18:22,140
people want to proceed along that route

448
00:18:22,140 --> 00:18:23,640
depending on discussion between now and

449
00:18:23,640 --> 00:18:25,760
then

450
00:18:32,940 --> 00:18:35,460
okay so so BK I'll just read it out in

451
00:18:35,460 --> 00:18:37,020
case somebody's out of the chat so bkg's

452
00:18:37,020 --> 00:18:39,000
proposal to see what people want to do

453
00:18:39,000 --> 00:18:40,679
is to say move the version number from

454
00:18:40,679 --> 00:18:44,700
V5 to V6 for key signature Ops and PK

455
00:18:44,700 --> 00:18:47,240
esk

456
00:18:51,120 --> 00:18:53,039
and now is the time to jump in the mic

457
00:18:53,039 --> 00:18:54,480
line if you have

458
00:18:54,480 --> 00:18:56,039
if you want to say yes you want to say

459
00:18:56,039 --> 00:18:58,080
no do you want to say I don't know I

460
00:18:58,080 --> 00:18:59,400
don't have enough information those are

461
00:18:59,400 --> 00:19:01,620
all things that that would be valid to

462
00:19:01,620 --> 00:19:03,799
hear

463
00:19:08,880 --> 00:19:11,460
okay uh pass begins so just one note

464
00:19:11,460 --> 00:19:12,780
down so

465
00:19:12,780 --> 00:19:15,360
I don't want to end up in a match about

466
00:19:15,360 --> 00:19:18,059
who has the latest newest shiniest

467
00:19:18,059 --> 00:19:19,980
version right because if a response

468
00:19:19,980 --> 00:19:23,039
could be that then the the persons from

469
00:19:23,039 --> 00:19:25,020
version 5 will bump to version eight or

470
00:19:25,020 --> 00:19:27,000
something so that they are seen as the

471
00:19:27,000 --> 00:19:29,039
latest version then we're going to jump

472
00:19:29,039 --> 00:19:31,500
this game in a number of iterations sir

473
00:19:31,500 --> 00:19:34,380
so so I mean it kind of depends a little

474
00:19:34,380 --> 00:19:35,520
bit on

475
00:19:35,520 --> 00:19:38,100
if we can get word of saying like this

476
00:19:38,100 --> 00:19:39,419
person is going to stick with version

477
00:19:39,419 --> 00:19:41,760
five or not like so for us to make any

478
00:19:41,760 --> 00:19:43,500
decision beforehand

479
00:19:43,500 --> 00:19:46,880
seems a bit silly to me

480
00:19:47,940 --> 00:19:50,280
so I I guess again I I think I would

481
00:19:50,280 --> 00:19:53,160
disagree with you Paul on the basis that

482
00:19:53,160 --> 00:19:55,980
we seem to have it demonstrated

483
00:19:55,980 --> 00:19:58,020
uh evidence that

484
00:19:58,020 --> 00:20:01,280
we're not going to get that information

485
00:20:01,500 --> 00:20:02,880
we could try

486
00:20:02,880 --> 00:20:05,039
you know certainly after after the when

487
00:20:05,039 --> 00:20:06,480
we when we're posting the minutes to

488
00:20:06,480 --> 00:20:07,799
this we could certainly try to see if

489
00:20:07,799 --> 00:20:09,120
there's anything any new information to

490
00:20:09,120 --> 00:20:10,140
be had

491
00:20:10,140 --> 00:20:11,640
I suspect the answer will be there won't

492
00:20:11,640 --> 00:20:13,559
be anything concrete

493
00:20:13,559 --> 00:20:15,360
and there is information in the form of

494
00:20:15,360 --> 00:20:18,360
a draft of draft Pro that says here's

495
00:20:18,360 --> 00:20:21,539
what we plan to do for version what we

496
00:20:21,539 --> 00:20:24,240
will do for version five

497
00:20:24,240 --> 00:20:25,320
um

498
00:20:25,320 --> 00:20:27,900
I agree with with Paul with Paula like

499
00:20:27,900 --> 00:20:31,080
version number escalation is a silly

500
00:20:31,080 --> 00:20:33,059
silly outcome

501
00:20:33,059 --> 00:20:35,400
I'm not proposing B6 because it's bigger

502
00:20:35,400 --> 00:20:36,900
than E5 I'm closing it because it's

503
00:20:36,900 --> 00:20:39,140
different

504
00:20:39,600 --> 00:20:41,780
foreign

505
00:20:43,620 --> 00:20:45,480
I wonder whether it's worth doing a show

506
00:20:45,480 --> 00:20:47,460
of hands here

507
00:20:47,460 --> 00:20:49,320
um and I think we were just at the cost

508
00:20:49,320 --> 00:20:51,059
of an ID interrupt so let's let's take

509
00:20:51,059 --> 00:20:53,600
that one first

510
00:21:00,600 --> 00:21:02,460
hi everyone Carnegie Mellon University

511
00:21:02,460 --> 00:21:05,160
not as A.D I wanted to just to kind of

512
00:21:05,160 --> 00:21:06,419
ask we're worried about this version

513
00:21:06,419 --> 00:21:09,660
escalation do we care we specified six

514
00:21:09,660 --> 00:21:12,720
so someone else says seven if we got to

515
00:21:12,720 --> 00:21:13,919
do something else we'll do it so we have

516
00:21:13,919 --> 00:21:16,160
a lower version number I mean

517
00:21:16,160 --> 00:21:18,299
can someone explain why that's a problem

518
00:21:18,299 --> 00:21:20,340
other than I guess this idea of semantic

519
00:21:20,340 --> 00:21:23,780
versioning higher is newer

520
00:21:25,860 --> 00:21:28,880
I'm not aware of a concrete problem

521
00:21:28,880 --> 00:21:31,320
I mean it depends on how we play the

522
00:21:31,320 --> 00:21:33,480
game right I mean there there are 256

523
00:21:33,480 --> 00:21:35,520
versions We have a one octet version

524
00:21:35,520 --> 00:21:38,280
number in multiple places here so I

525
00:21:38,280 --> 00:21:41,700
guess it could get Super Silly there but

526
00:21:41,700 --> 00:21:43,440
um I don't think anyone is proposing to

527
00:21:43,440 --> 00:21:45,299
do that level of escalation

528
00:21:45,299 --> 00:21:47,400
yeah yeah I mean there's certainly a

529
00:21:47,400 --> 00:21:49,020
code Point space to manage the reason

530
00:21:49,020 --> 00:21:51,240
why I make that comment is just I'm

531
00:21:51,240 --> 00:21:52,860
fresh off you know out of the quick

532
00:21:52,860 --> 00:21:55,799
working group they are defining quick V2

533
00:21:55,799 --> 00:21:58,919
who's I whose version number is not V2

534
00:21:58,919 --> 00:22:00,720
but that's the name of the draft and

535
00:22:00,720 --> 00:22:02,520
from talking with them there's no

536
00:22:02,520 --> 00:22:05,280
guarantee in the future that the the how

537
00:22:05,280 --> 00:22:06,780
big or small the number is you know

538
00:22:06,780 --> 00:22:08,220
indicates any lineage or kind of

539
00:22:08,220 --> 00:22:10,440
sequence I wonder whether we can just do

540
00:22:10,440 --> 00:22:13,320
something like that to make progress

541
00:22:13,320 --> 00:22:16,020
yes so I I I don't think we have a huge

542
00:22:16,020 --> 00:22:17,220
blocker here

543
00:22:17,220 --> 00:22:19,140
um you know it is the case that it's

544
00:22:19,140 --> 00:22:21,240
easier for quick to to upgrade versions

545
00:22:21,240 --> 00:22:22,559
than for a store and forward thing but

546
00:22:22,559 --> 00:22:24,240
uh but yeah I don't think it's a huge

547
00:22:24,240 --> 00:22:25,020
deal

548
00:22:25,020 --> 00:22:26,820
so so okay

549
00:22:26,820 --> 00:22:28,919
I don't see other people joining the mic

550
00:22:28,919 --> 00:22:31,080
line so should we try the poll tool and

551
00:22:31,080 --> 00:22:33,299
see what if people

552
00:22:33,299 --> 00:22:35,159
think dkg's

553
00:22:35,159 --> 00:22:37,140
suggestion has typed into the chat is

554
00:22:37,140 --> 00:22:39,780
worth pursuing

555
00:22:39,780 --> 00:22:41,880
I'm gonna do that now oh he's done it

556
00:22:41,880 --> 00:22:43,280
already

557
00:22:43,280 --> 00:22:46,500
so in that case raise your hand or click

558
00:22:46,500 --> 00:22:48,600
the raise hand button if you agree

559
00:22:48,600 --> 00:22:51,419
with the proposal that tkg floated or

560
00:22:51,419 --> 00:22:53,760
how to handle versions and click the do

561
00:22:53,760 --> 00:22:55,980
not raise hand button if you disagree

562
00:22:55,980 --> 00:22:57,539
with that proposal

563
00:22:57,539 --> 00:23:00,000
and don't click anything if you are

564
00:23:00,000 --> 00:23:02,039
unsure or don't feel like you you want

565
00:23:02,039 --> 00:23:03,679
to make the decision

566
00:23:03,679 --> 00:23:07,340
I'll ask that question after

567
00:23:07,860 --> 00:23:09,299
and yes you can change it if you change

568
00:23:09,299 --> 00:23:13,158
your mind if the the totals will change

569
00:23:16,679 --> 00:23:19,559
okay so that seems to have stabilized at

570
00:23:19,559 --> 00:23:22,860
about 12 at for the record at 12 13

571
00:23:22,860 --> 00:23:26,640
raised hands zero do not raise hands

572
00:23:26,640 --> 00:23:30,179
which is pretty clear and is at itf14 we

573
00:23:30,179 --> 00:23:31,559
had a bunch of polls and we had similar

574
00:23:31,559 --> 00:23:32,940
kind of numbers for some of the media

575
00:23:32,940 --> 00:23:34,380
discussions so it kind of indicates

576
00:23:34,380 --> 00:23:36,000
there's something sane

577
00:23:36,000 --> 00:23:38,159
would anybody like to kind of speak to

578
00:23:38,159 --> 00:23:40,980
not being ready to kind of decide that

579
00:23:40,980 --> 00:23:43,980
or needing more information or

580
00:23:43,980 --> 00:23:45,720
other things that the polo tool doesn't

581
00:23:45,720 --> 00:23:48,080
capture

582
00:23:54,179 --> 00:23:57,240
I mean so just the only thing

583
00:23:57,240 --> 00:23:59,700
um as I said as I've as far as I

584
00:23:59,700 --> 00:24:02,159
understood Werner was still open to

585
00:24:02,159 --> 00:24:03,960
changing things

586
00:24:03,960 --> 00:24:06,659
um I think if

587
00:24:06,659 --> 00:24:07,320
um

588
00:24:07,320 --> 00:24:11,039
if we can reach out and ask if Werner

589
00:24:11,039 --> 00:24:14,820
would be okay with changing

590
00:24:14,820 --> 00:24:17,220
um his definition of the five keys and

591
00:24:17,220 --> 00:24:19,260
signatures to the crypto refresh

592
00:24:19,260 --> 00:24:22,020
definition so that we can stay with V5

593
00:24:22,020 --> 00:24:24,900
and have more interoperability I think

594
00:24:24,900 --> 00:24:26,760
that would still be preferable and

595
00:24:26,760 --> 00:24:29,760
perhaps worth trying sure I'm happy to

596
00:24:29,760 --> 00:24:31,200
take an action to try that

597
00:24:31,200 --> 00:24:32,940
um so once we have outcomes in this

598
00:24:32,940 --> 00:24:34,200
meeting in terms of minutes and so on

599
00:24:34,200 --> 00:24:35,880
I'll certainly Reach Out

600
00:24:35,880 --> 00:24:38,520
and bring any new information back to

601
00:24:38,520 --> 00:24:39,480
the list

602
00:24:39,480 --> 00:24:42,080
thanks

603
00:24:42,780 --> 00:24:44,220
so yeah for the minutes you can note

604
00:24:44,220 --> 00:24:45,780
that it's an action on me to try and

605
00:24:45,780 --> 00:24:48,000
follow up with that

606
00:24:48,000 --> 00:24:50,400
and I'm assuming that that process uh

607
00:24:50,400 --> 00:24:52,080
Stephen would have some termination date

608
00:24:52,080 --> 00:24:54,480
if we don't get any response yeah

609
00:24:54,480 --> 00:24:57,720
yeah and we can't just wait indefinitely

610
00:24:57,720 --> 00:24:59,960
uh

611
00:25:00,179 --> 00:25:02,460
um Samuel in the chat is asking if it's

612
00:25:02,460 --> 00:25:04,260
possible to remove one's vote I'm not

613
00:25:04,260 --> 00:25:07,100
sure what that means

614
00:25:09,840 --> 00:25:11,840
um

615
00:25:12,500 --> 00:25:14,760
so you can change your mind during the

616
00:25:14,760 --> 00:25:15,720
poll

617
00:25:15,720 --> 00:25:18,179
um so I just click you know just toggle

618
00:25:18,179 --> 00:25:20,940
the the radio button

619
00:25:20,940 --> 00:25:23,460
but I ended the poll so

620
00:25:23,460 --> 00:25:26,100
too late sorry

621
00:25:26,100 --> 00:25:29,658
Rick Rick go ahead

622
00:25:31,380 --> 00:25:34,320
Rick foreign personal here

623
00:25:34,320 --> 00:25:36,059
um I think the point is that we're not

624
00:25:36,059 --> 00:25:38,159
dealing with versions but variants here

625
00:25:38,159 --> 00:25:40,799
so V5 should be or V6 should be right

626
00:25:40,799 --> 00:25:43,260
varying six and that can coexist because

627
00:25:43,260 --> 00:25:44,880
that's actually what's offered us it

628
00:25:44,880 --> 00:25:46,740
just uses it as a switch deck it's not

629
00:25:46,740 --> 00:25:50,039
like a is larger than b so the race for

630
00:25:50,039 --> 00:25:52,440
first nothing doesn't exist

631
00:25:52,440 --> 00:25:55,039
sure

632
00:25:57,720 --> 00:26:01,020
okay so I think we've is there anything

633
00:26:01,020 --> 00:26:04,080
on the right hand side of tkg slide that

634
00:26:04,080 --> 00:26:06,840
people uh would disagree with or I think

635
00:26:06,840 --> 00:26:08,580
requires some more discussion here or is

636
00:26:08,580 --> 00:26:11,880
he correct about these d-conflicts

637
00:26:11,880 --> 00:26:14,960
having been done already

638
00:26:18,539 --> 00:26:21,059
okay I don't see anybody looking like

639
00:26:21,059 --> 00:26:22,260
they're

640
00:26:22,260 --> 00:26:23,760
I see a bunch of people who don't know

641
00:26:23,760 --> 00:26:27,600
like me but I trust EKG to get it right

642
00:26:27,600 --> 00:26:29,220
um I don't see anybody because I'm

643
00:26:29,220 --> 00:26:30,299
saying that there is something on the

644
00:26:30,299 --> 00:26:32,220
right hand side of the slide that we may

645
00:26:32,220 --> 00:26:35,299
need to decide on right now

646
00:26:37,559 --> 00:26:40,620
okay so I think you're safe to go to the

647
00:26:40,620 --> 00:26:41,700
next one

648
00:26:41,700 --> 00:26:43,020
okay

649
00:26:43,020 --> 00:26:45,299
and thank you thank you for polling and

650
00:26:45,299 --> 00:26:46,620
so on

651
00:26:46,620 --> 00:26:49,620
yep so uh one of the issues that came up

652
00:26:49,620 --> 00:26:51,299
during working with Glasgow was from

653
00:26:51,299 --> 00:26:53,820
Aaron who I believe is in the room

654
00:26:53,820 --> 00:26:56,220
um we have uh there's links in the slide

655
00:26:56,220 --> 00:26:57,659
if you want to look at the slides to

656
00:26:57,659 --> 00:27:01,679
abandon This Thread and to an open

657
00:27:01,679 --> 00:27:04,320
um issue in gitlab

658
00:27:04,320 --> 00:27:07,140
um The Proposal was to try to So

659
00:27:07,140 --> 00:27:10,020
currently the version 5 signatures which

660
00:27:10,020 --> 00:27:11,640
may be version six if we do this change

661
00:27:11,640 --> 00:27:13,020
everything here is still as soon as

662
00:27:13,020 --> 00:27:15,179
Baseline version five on these slides

663
00:27:15,179 --> 00:27:17,820
um they have a salt a 16 octet salt and

664
00:27:17,820 --> 00:27:20,220
Aaron was recommending moving that to a

665
00:27:20,220 --> 00:27:22,080
larger assault in preparation for some

666
00:27:22,080 --> 00:27:23,700
of the post Quantum signing schemes that

667
00:27:23,700 --> 00:27:25,679
need a larger salt

668
00:27:25,679 --> 00:27:26,640
um

669
00:27:26,640 --> 00:27:29,940
uh Aaron offered sort of menu of options

670
00:27:29,940 --> 00:27:32,640
there either all the cells could be

671
00:27:32,640 --> 00:27:34,080
larger or you could make the salt

672
00:27:34,080 --> 00:27:36,120
variant in size based on like the hash

673
00:27:36,120 --> 00:27:38,880
algorithm and I wonder whether folks

674
00:27:38,880 --> 00:27:41,159
want to speak to that Scott during the

675
00:27:41,159 --> 00:27:42,539
queue

676
00:27:42,539 --> 00:27:43,860
mm-hmm

677
00:27:43,860 --> 00:27:46,260
uh yes I just happen to be have looked

678
00:27:46,260 --> 00:27:48,900
at the various posts Quantum signature

679
00:27:48,900 --> 00:27:51,779
algorithms uh they all have all three of

680
00:27:51,779 --> 00:27:54,960
them have some uh some prefix in front

681
00:27:54,960 --> 00:27:59,039
of it much larger than 16 uh octets

682
00:27:59,039 --> 00:28:01,158
um

683
00:28:01,200 --> 00:28:03,840
some of them uh based either based on

684
00:28:03,840 --> 00:28:07,080
the public key values or just some

685
00:28:07,080 --> 00:28:11,220
random values that Designer picks now uh

686
00:28:11,220 --> 00:28:14,100
you could either build that into the uh

687
00:28:14,100 --> 00:28:18,299
one pass signature message or uh just

688
00:28:18,299 --> 00:28:20,880
another possibility is just do maybe a

689
00:28:20,880 --> 00:28:22,799
sold it a standard solid hashtag you

690
00:28:22,799 --> 00:28:25,440
have here and then have the the and just

691
00:28:25,440 --> 00:28:28,320
have the verifier and then do a standard

692
00:28:28,320 --> 00:28:30,779
a signature verification on the uh on

693
00:28:30,779 --> 00:28:33,140
the hash

694
00:28:35,039 --> 00:28:37,440
all right and so avoid getting in the

695
00:28:37,440 --> 00:28:41,220
details of how things uh dilism and

696
00:28:41,220 --> 00:28:43,700
Falcon work

697
00:28:44,820 --> 00:28:46,799
so my understanding is that with open

698
00:28:46,799 --> 00:28:49,400
pgp

699
00:28:52,320 --> 00:28:55,320
yes that's that's an alternative that is

700
00:28:55,320 --> 00:28:58,820
one certainly certainly one possibility

701
00:28:59,880 --> 00:29:01,559
so you're saying then that for the Post

702
00:29:01,559 --> 00:29:04,140
Quantum schemes they would their

703
00:29:04,140 --> 00:29:07,500
signature packet would contain uh a salt

704
00:29:07,500 --> 00:29:11,520
that salt would be pre-pended to the

705
00:29:11,520 --> 00:29:14,460
digest the open pgp style digest so you

706
00:29:14,460 --> 00:29:15,720
don't need you don't need it in the

707
00:29:15,720 --> 00:29:17,700
one-pass signature packet in that case

708
00:29:17,700 --> 00:29:19,399
uh

709
00:29:19,399 --> 00:29:23,460
it's a little more complex because uh uh

710
00:29:23,460 --> 00:29:25,320
sometimes it's it's depending on the

711
00:29:25,320 --> 00:29:26,760
algorithm it's either for in the

712
00:29:26,760 --> 00:29:30,200
signature or in the public key

713
00:29:30,720 --> 00:29:33,360
okay I think maybe Aaron wants to speak

714
00:29:33,360 --> 00:29:35,360
to that I see him in the cube yeah

715
00:29:35,360 --> 00:29:37,559
but don't but don't don't go far from

716
00:29:37,559 --> 00:29:39,980
the mic probably

717
00:29:40,559 --> 00:29:43,140
so also in the next presentation as long

718
00:29:43,140 --> 00:29:44,940
as I have something about this very

719
00:29:44,940 --> 00:29:47,600
problem the lithium for instance has the

720
00:29:47,600 --> 00:29:50,520
propense with the public key whilst

721
00:29:50,520 --> 00:29:52,860
things has a right an optional random

722
00:29:52,860 --> 00:29:55,140
salt the idea would be basically to

723
00:29:55,140 --> 00:29:57,059
disable the option on random salt into

724
00:29:57,059 --> 00:30:00,139
Sphinx for instance

725
00:30:00,299 --> 00:30:05,580
yes to the side yeah so it's sorry can

726
00:30:05,580 --> 00:30:08,000
you use them I put the mic uh

727
00:30:08,000 --> 00:30:11,580
just a correction how things Works uh it

728
00:30:11,580 --> 00:30:13,980
has the option the optional salt is to

729
00:30:13,980 --> 00:30:16,799
the signer the signer always picks a

730
00:30:16,799 --> 00:30:19,820
random value it's just that is it this

731
00:30:19,820 --> 00:30:24,480
uh the designer may use a actual random

732
00:30:24,480 --> 00:30:27,240
to to further randomize it or go with a

733
00:30:27,240 --> 00:30:28,140
default

734
00:30:28,140 --> 00:30:32,120
the verifier doesn't know or care

735
00:30:32,700 --> 00:30:36,480
so yeah it can be extracted from random

736
00:30:36,480 --> 00:30:39,059
or from the message but like the the

737
00:30:39,059 --> 00:30:40,500
issue the following is the fact that

738
00:30:40,500 --> 00:30:42,779
Sphinx for instance has a 16 octet sold

739
00:30:42,779 --> 00:30:46,440
for the lower security level uh than 24

740
00:30:46,440 --> 00:30:49,200
and 32 octets

741
00:30:49,200 --> 00:30:52,020
um the deletion case I think it would be

742
00:30:52,020 --> 00:30:54,659
fine still with the pre with this

743
00:30:54,659 --> 00:30:57,299
construction because you still apply the

744
00:30:57,299 --> 00:31:00,600
the public key at the prefix of then a

745
00:31:00,600 --> 00:31:03,000
hash so you basically

746
00:31:03,000 --> 00:31:05,220
hash together the public key and then

747
00:31:05,220 --> 00:31:07,860
they already derived a hash that you're

748
00:31:07,860 --> 00:31:11,100
signing from openpgp

749
00:31:11,100 --> 00:31:14,100
um the the request here comes the there

750
00:31:14,100 --> 00:31:16,020
are these two options either we want to

751
00:31:16,020 --> 00:31:18,299
make this Sim simple implementation and

752
00:31:18,299 --> 00:31:21,600
put 32 octets for everything or whether

753
00:31:21,600 --> 00:31:23,820
we want to bind it to the hash algorithm

754
00:31:23,820 --> 00:31:26,100
in my opinion because the

755
00:31:26,100 --> 00:31:27,779
thing we're trying to

756
00:31:27,779 --> 00:31:30,120
uh to solve the issue we're trying to

757
00:31:30,120 --> 00:31:33,419
solve is a collision into the hash

758
00:31:33,419 --> 00:31:35,520
uh when signing and we need an

759
00:31:35,520 --> 00:31:37,140
unpredictable sold

760
00:31:37,140 --> 00:31:39,960
for uh whether it's signing for whoever

761
00:31:39,960 --> 00:31:43,460
is creating the signature

762
00:31:43,559 --> 00:31:47,600
so so Jonathan's been in the cube

763
00:31:48,000 --> 00:31:51,600
uh Jonathan Hamel so I I think that you

764
00:31:51,600 --> 00:31:54,059
Caroline take the crypto algorithm

765
00:31:54,059 --> 00:31:57,600
output from the libraries as opaque so

766
00:31:57,600 --> 00:31:59,220
that you don't have to be parsing them

767
00:31:59,220 --> 00:32:02,039
out in order to fit them into the pgp

768
00:32:02,039 --> 00:32:06,260
structures would be my opinion

769
00:32:07,700 --> 00:32:10,200
so I I had a question I guess but

770
00:32:10,200 --> 00:32:13,159
perhaps for Aaron

771
00:32:14,100 --> 00:32:15,720
so

772
00:32:15,720 --> 00:32:18,059
my question is if we made this change

773
00:32:18,059 --> 00:32:19,500
now

774
00:32:19,500 --> 00:32:21,539
would we still have to make other

775
00:32:21,539 --> 00:32:25,440
changes around this space later when we

776
00:32:25,440 --> 00:32:28,559
actually come to specify pqc

777
00:32:28,559 --> 00:32:31,919
so if we bind it to the hash algorithm I

778
00:32:31,919 --> 00:32:34,440
still have a proposal later when we do

779
00:32:34,440 --> 00:32:37,740
pqc to bind the hash algorithm to the

780
00:32:37,740 --> 00:32:39,779
public key algorithm in signature for

781
00:32:39,779 --> 00:32:40,620
instance

782
00:32:40,620 --> 00:32:43,500
first like the lithium uses chapter

783
00:32:43,500 --> 00:32:46,440
internally using Chateau and then shatri

784
00:32:46,440 --> 00:32:49,080
would be in my opinion a bad idea so you

785
00:32:49,080 --> 00:32:53,100
expanded the the attack surface

786
00:32:53,100 --> 00:32:56,340
um still I think that it makes sense to

787
00:32:56,340 --> 00:32:58,440
this change now because the hash

788
00:32:58,440 --> 00:33:02,580
algorithm that we Define into B5 would

789
00:33:02,580 --> 00:33:06,840
mean doing uh basically we would already

790
00:33:06,840 --> 00:33:09,179
have longer souls for existing hash

791
00:33:09,179 --> 00:33:10,320
algorithms

792
00:33:10,320 --> 00:33:12,360
and if instead we want to buy directly

793
00:33:12,360 --> 00:33:14,340
to the publicly public key algorithm

794
00:33:14,340 --> 00:33:18,439
then that's fine we can just do it later

795
00:33:18,659 --> 00:33:20,519
I don't know

796
00:33:20,519 --> 00:33:23,419
is it clear

797
00:33:24,000 --> 00:33:27,299
so my concrete proposal is binding the

798
00:33:27,299 --> 00:33:31,200
signature uh salt length to the hash

799
00:33:31,200 --> 00:33:33,720
algorithm used to derive that salt to

800
00:33:33,720 --> 00:33:37,559
derive that the signature so you use

801
00:33:37,559 --> 00:33:41,039
Shadow shot 256 you have a 16 opted salt

802
00:33:41,039 --> 00:33:46,580
you use sha 512 you get a 32 octet sold

803
00:33:46,620 --> 00:33:48,899
and yeah

804
00:33:48,899 --> 00:33:52,799
that's the actual item now

805
00:33:52,799 --> 00:33:57,240
so I I have a if we're going to bind to

806
00:33:57,240 --> 00:33:58,620
the

807
00:33:58,620 --> 00:34:01,019
hash algorithm used

808
00:34:01,019 --> 00:34:02,340
then

809
00:34:02,340 --> 00:34:04,080
um it seems like one other option would

810
00:34:04,080 --> 00:34:06,179
be to say that you get a different hash

811
00:34:06,179 --> 00:34:08,099
algorithm

812
00:34:08,099 --> 00:34:09,839
um

813
00:34:09,839 --> 00:34:12,540
for we could introduce a novel hash

814
00:34:12,540 --> 00:34:14,460
algorithm specifically for the Post

815
00:34:14,460 --> 00:34:17,040
Quantum stuff right so for

816
00:34:17,040 --> 00:34:18,839
for

817
00:34:18,839 --> 00:34:20,639
um

818
00:34:20,639 --> 00:34:22,679
sorry

819
00:34:22,679 --> 00:34:25,080
can I just do an intro up there I I just

820
00:34:25,080 --> 00:34:28,679
wanted to capture Aaron's suggestion all

821
00:34:28,679 --> 00:34:30,719
right so I put what I think that is into

822
00:34:30,719 --> 00:34:32,940
the chest

823
00:34:32,940 --> 00:34:34,739
and then you know I guess we're building

824
00:34:34,739 --> 00:34:36,300
up towards a poll with like two or three

825
00:34:36,300 --> 00:34:38,099
options or something right

826
00:34:38,099 --> 00:34:40,199
um that's right

827
00:34:40,199 --> 00:34:42,119
so Aaron did I get that right

828
00:34:42,119 --> 00:34:45,800
and if not please correct it

829
00:34:47,580 --> 00:34:49,918
particularly

830
00:34:49,918 --> 00:34:51,899
in particular I think Aaron's proposal

831
00:34:51,899 --> 00:34:53,339
was that the salt length would be the

832
00:34:53,339 --> 00:34:54,899
length of the hash algorithm in the

833
00:34:54,899 --> 00:34:57,319
signature

834
00:34:58,560 --> 00:35:00,619
um

835
00:35:00,780 --> 00:35:02,780
so I'll note that

836
00:35:02,780 --> 00:35:05,820
dkg's variation

837
00:35:05,820 --> 00:35:08,220
if the um

838
00:35:08,220 --> 00:35:10,380
but I just heard about dilithium which

839
00:35:10,380 --> 00:35:11,880
is leading to Hash the public key

840
00:35:11,880 --> 00:35:13,859
material in as well

841
00:35:13,859 --> 00:35:17,339
doesn't line up with open pgp's

842
00:35:17,339 --> 00:35:18,720
um

843
00:35:18,720 --> 00:35:21,359
uh

844
00:35:21,359 --> 00:35:25,200
one pass signature framing

845
00:35:25,200 --> 00:35:26,820
because the one pass signature doesn't

846
00:35:26,820 --> 00:35:28,619
know anything about what Pub Key

847
00:35:28,619 --> 00:35:30,119
algorithm is going to be used it only

848
00:35:30,119 --> 00:35:33,260
does the

849
00:35:33,480 --> 00:35:36,780
uh it only does it digest before

850
00:35:36,780 --> 00:35:39,359
calculation

851
00:35:39,359 --> 00:35:41,300
Aaron yeah please

852
00:35:41,300 --> 00:35:44,099
so when you hash as far as understood

853
00:35:44,099 --> 00:35:46,380
when you hash at first like the when you

854
00:35:46,380 --> 00:35:47,880
start the hash with prefix the hash with

855
00:35:47,880 --> 00:35:49,740
the public key that is not meant to

856
00:35:49,740 --> 00:35:51,000
avoid Collision

857
00:35:51,000 --> 00:35:54,060
because the public key is known so an

858
00:35:54,060 --> 00:35:57,180
attacker could just like doesn't need

859
00:35:57,180 --> 00:35:59,040
that like it's not met there for

860
00:35:59,040 --> 00:36:01,140
Collision is therefore kind of binding

861
00:36:01,140 --> 00:36:02,579
let's say

862
00:36:02,579 --> 00:36:05,700
so if even if we put the

863
00:36:05,700 --> 00:36:09,420
if we use it later in the hash within

864
00:36:09,420 --> 00:36:12,060
the opaque algorithm let's say it's it's

865
00:36:12,060 --> 00:36:13,980
fine I think

866
00:36:13,980 --> 00:36:16,339
okay

867
00:36:18,180 --> 00:36:19,859
so

868
00:36:19,859 --> 00:36:22,859
um so the current proposal is that we

869
00:36:22,859 --> 00:36:24,420
bind it to the hash out we bind the

870
00:36:24,420 --> 00:36:26,280
length to the hash algorithm and it is

871
00:36:26,280 --> 00:36:30,060
the length of the hash algorithm output

872
00:36:30,060 --> 00:36:32,099
so is that correct Aaron that

873
00:36:32,099 --> 00:36:33,960
the length you want is exactly the same

874
00:36:33,960 --> 00:36:36,980
length as the hash output

875
00:36:38,040 --> 00:36:40,200
um it's it's actually the security level

876
00:36:40,200 --> 00:36:41,700
of the hash so it's half of the length

877
00:36:41,700 --> 00:36:44,460
because of the collisions thing so I

878
00:36:44,460 --> 00:36:47,040
think the shadow physics has a 32 octet

879
00:36:47,040 --> 00:36:49,560
and we use 16 and so on

880
00:36:49,560 --> 00:36:51,599
got it

881
00:36:51,599 --> 00:36:53,760
okay

882
00:36:53,760 --> 00:36:56,099
so let me propose

883
00:36:56,099 --> 00:36:58,740
um a separate variant just to see if

884
00:36:58,740 --> 00:37:01,260
people have a preference here

885
00:37:01,260 --> 00:37:02,040
um

886
00:37:02,040 --> 00:37:06,839
which is that we add a column

887
00:37:06,839 --> 00:37:10,560
to the hash algorithms

888
00:37:10,560 --> 00:37:12,060
table

889
00:37:12,060 --> 00:37:13,560
that says

890
00:37:13,560 --> 00:37:16,020
the length of the salt for this hash

891
00:37:16,020 --> 00:37:19,220
algorithm is X

892
00:37:19,980 --> 00:37:21,180
and then

893
00:37:21,180 --> 00:37:23,640
if you encounter and we set them all

894
00:37:23,640 --> 00:37:26,220
initially to 16 octets

895
00:37:26,220 --> 00:37:27,960
and then if you have a post Quantum

896
00:37:27,960 --> 00:37:30,119
algorithm we say oh you need a special

897
00:37:30,119 --> 00:37:33,420
hash we'll bind it will allocate a new

898
00:37:33,420 --> 00:37:36,780
point in the space and it'll be shot 356

899
00:37:36,780 --> 00:37:38,460
with longer hash

900
00:37:38,460 --> 00:37:41,160
and it has the same code path but it

901
00:37:41,160 --> 00:37:43,020
lets us put a larger hash in when we

902
00:37:43,020 --> 00:37:44,579
need it and we don't if we don't know

903
00:37:44,579 --> 00:37:46,740
what the larger hash is now we can just

904
00:37:46,740 --> 00:37:48,660
put the larger hash in later instead of

905
00:37:48,660 --> 00:37:51,000
my second question here so I'm proposing

906
00:37:51,000 --> 00:37:53,400
this because I want to ask also

907
00:37:53,400 --> 00:37:55,500
is there going to be a problem if we

908
00:37:55,500 --> 00:37:57,240
bind it to the hash algorithm if

909
00:37:57,240 --> 00:37:58,740
something doesn't know

910
00:37:58,740 --> 00:38:01,440
a given hash algorithm if how's it going

911
00:38:01,440 --> 00:38:03,000
to know will it be able to deal well

912
00:38:03,000 --> 00:38:07,440
with a assault of unknown size

913
00:38:07,440 --> 00:38:09,240
well obviously if they don't know the

914
00:38:09,240 --> 00:38:10,500
hash algorithm they can't actually

915
00:38:10,500 --> 00:38:12,540
verify any signatures

916
00:38:12,540 --> 00:38:13,440
um

917
00:38:13,440 --> 00:38:16,980
on the other hand I don't see the why is

918
00:38:16,980 --> 00:38:18,000
there making distinction between

919
00:38:18,000 --> 00:38:20,099
post-quantum or non-post Quantum terms

920
00:38:20,099 --> 00:38:22,339
of salt size the attack they're

921
00:38:22,339 --> 00:38:25,140
addressing uh collisions are it's the

922
00:38:25,140 --> 00:38:28,819
same both both cases

923
00:38:30,480 --> 00:38:32,960
okay

924
00:38:33,540 --> 00:38:35,040
so

925
00:38:35,040 --> 00:38:39,020
do we have do we have any yep

926
00:38:39,060 --> 00:38:40,440
um

927
00:38:40,440 --> 00:38:42,900
um I've been confused for the whole time

928
00:38:42,900 --> 00:38:44,700
so I

929
00:38:44,700 --> 00:38:47,460
that the thing is for the lithium and

930
00:38:47,460 --> 00:38:48,960
for falcon

931
00:38:48,960 --> 00:38:53,400
the for the Falcon the results is the

932
00:38:53,400 --> 00:38:56,339
fixed size and that's come along with

933
00:38:56,339 --> 00:38:59,040
the message when you have it for the

934
00:38:59,040 --> 00:39:01,560
deletion the salt is basically the

935
00:39:01,560 --> 00:39:03,420
internal value

936
00:39:03,420 --> 00:39:06,300
which can be either derived from a part

937
00:39:06,300 --> 00:39:07,859
of the public key

938
00:39:07,859 --> 00:39:10,680
or you could make a fresh or truly

939
00:39:10,680 --> 00:39:13,200
random value as a salt internally for

940
00:39:13,200 --> 00:39:15,960
the signing but the but the signature

941
00:39:15,960 --> 00:39:19,020
itself does not have any salt

942
00:39:19,020 --> 00:39:22,619
and also even internally that source is

943
00:39:22,619 --> 00:39:25,800
a fixed value five terabits law

944
00:39:25,800 --> 00:39:27,480
so that's why I've been confused I don't

945
00:39:27,480 --> 00:39:29,400
really know what the discussion we have

946
00:39:29,400 --> 00:39:32,000
been talking about

947
00:39:33,000 --> 00:39:36,780
I think I think here is that open pgp

948
00:39:36,780 --> 00:39:40,320
has an expected uh frame for all

949
00:39:40,320 --> 00:39:42,359
signatures where it does a digest and

950
00:39:42,359 --> 00:39:43,920
then the digest is passed to a public

951
00:39:43,920 --> 00:39:46,200
key algorithm

952
00:39:46,200 --> 00:39:47,640
and

953
00:39:47,640 --> 00:39:51,839
that is peculiarity of openpgp and not a

954
00:39:51,839 --> 00:39:55,320
frame that we have uh proposed

955
00:39:55,320 --> 00:39:56,820
uh breaking

956
00:39:56,820 --> 00:39:59,160
should new algorithms come along I don't

957
00:39:59,160 --> 00:40:00,599
think it's the right time for us to

958
00:40:00,599 --> 00:40:02,040
figure out how to do Post Quantum

959
00:40:02,040 --> 00:40:05,220
exactly the the goal for right now is to

960
00:40:05,220 --> 00:40:07,320
figure out what should we do about the

961
00:40:07,320 --> 00:40:10,099
cells themselves

962
00:40:10,440 --> 00:40:11,700
uh

963
00:40:11,700 --> 00:40:13,619
so that we don't have too much breakage

964
00:40:13,619 --> 00:40:16,320
when we get to PQ stuff

965
00:40:16,320 --> 00:40:19,460
okay things

966
00:40:21,000 --> 00:40:24,060
Mike ellensworth so I think Quinn's

967
00:40:24,060 --> 00:40:27,060
point if I heard it properly is the PQ

968
00:40:27,060 --> 00:40:29,460
signatures have built-in salts you could

969
00:40:29,460 --> 00:40:31,020
have no salt here and they're still

970
00:40:31,020 --> 00:40:34,079
secure so it doesn't matter is that what

971
00:40:34,079 --> 00:40:36,359
you were arguing

972
00:40:36,359 --> 00:40:37,680
uh

973
00:40:37,680 --> 00:40:39,420
so I'm talking about signature along the

974
00:40:39,420 --> 00:40:42,839
the Falcon needs assault must have

975
00:40:42,839 --> 00:40:44,820
assault and the salt is fixed in its

976
00:40:44,820 --> 00:40:47,640
back the false lens fixed in in this bag

977
00:40:47,640 --> 00:40:50,040
but the lithium

978
00:40:50,040 --> 00:40:52,500
signature does not contain assault but

979
00:40:52,500 --> 00:40:55,560
internal signing there must be a student

980
00:40:55,560 --> 00:40:59,280
random number of bit string of five

981
00:40:59,280 --> 00:41:01,560
terabits long or you have a truly random

982
00:41:01,560 --> 00:41:04,380
bit string five terabits long

983
00:41:04,380 --> 00:41:07,020
used in the signing procedure

984
00:41:07,020 --> 00:41:10,619
that's what I'm saying so I don't

985
00:41:10,619 --> 00:41:12,780
and of course if it was a spring plus

986
00:41:12,780 --> 00:41:15,000
unique assault you need the random

987
00:41:15,000 --> 00:41:16,200
values

988
00:41:16,200 --> 00:41:18,119
oh yeah

989
00:41:18,119 --> 00:41:21,720
so so great I think my so my uh my

990
00:41:21,720 --> 00:41:22,800
understanding which is probably worse

991
00:41:22,800 --> 00:41:25,280
than most people in the room is that

992
00:41:25,280 --> 00:41:28,140
pgp is already hashing the the message

993
00:41:28,140 --> 00:41:30,180
and it's only the hash that's going to

994
00:41:30,180 --> 00:41:31,680
be fed into the new signature algorithm

995
00:41:31,680 --> 00:41:34,140
so now we want to also add a hash from

996
00:41:34,140 --> 00:41:37,020
from the pgp protocol plus assault for

997
00:41:37,020 --> 00:41:41,099
the pgp protocol and get that signed and

998
00:41:41,099 --> 00:41:42,900
whether the the signing algorithm

999
00:41:42,900 --> 00:41:44,460
involves other assaults or the

1000
00:41:44,460 --> 00:41:48,540
randomness is a different matter I just

1001
00:41:48,540 --> 00:41:49,380
I just said

1002
00:41:49,380 --> 00:41:52,500
so that what I said

1003
00:41:52,500 --> 00:41:54,540
would have been

1004
00:41:54,540 --> 00:41:57,660
correct so I I did not mean anything I

1005
00:41:57,660 --> 00:42:00,000
just corrected what my uh Echo what I

1006
00:42:00,000 --> 00:42:02,960
said okay

1007
00:42:03,900 --> 00:42:06,300
I I think that

1008
00:42:06,300 --> 00:42:09,079
um like the lithium as far as understood

1009
00:42:09,079 --> 00:42:12,060
contains the it's meant to randomize the

1010
00:42:12,060 --> 00:42:15,000
signature is not meant as a soul to

1011
00:42:15,000 --> 00:42:17,339
avoid Collision basically what the

1012
00:42:17,339 --> 00:42:19,980
attack we're trying to uh to towards

1013
00:42:19,980 --> 00:42:23,700
here is the following I create a second

1014
00:42:23,700 --> 00:42:27,359
text that hashes to the same result as

1015
00:42:27,359 --> 00:42:31,140
the first text so we have two uh and

1016
00:42:31,140 --> 00:42:33,480
this basically lowers the security on

1017
00:42:33,480 --> 00:42:34,440
the whole

1018
00:42:34,440 --> 00:42:37,079
setting because

1019
00:42:37,079 --> 00:42:37,700
um

1020
00:42:37,700 --> 00:42:41,220
we instead of instead of just a the hash

1021
00:42:41,220 --> 00:42:43,800
is that if if we use an unpredictable

1022
00:42:43,800 --> 00:42:46,020
sword we just need second pre-image

1023
00:42:46,020 --> 00:42:48,660
resistance onto the hash well instead if

1024
00:42:48,660 --> 00:42:51,660
we just use an unsalted salt and salted

1025
00:42:51,660 --> 00:42:54,839
hash we need Collision resistance into

1026
00:42:54,839 --> 00:42:56,640
the hash and we have seen with Shawan

1027
00:42:56,640 --> 00:42:58,740
that Collision resistance

1028
00:42:58,740 --> 00:43:02,520
can disappear let's say it like this

1029
00:43:02,520 --> 00:43:07,800
um so I think that this is just uh like

1030
00:43:07,800 --> 00:43:10,740
a a little change to match the security

1031
00:43:10,740 --> 00:43:16,079
level of uh of uh of sphinx plus I

1032
00:43:16,079 --> 00:43:18,000
personally think that 16 often sold

1033
00:43:18,000 --> 00:43:20,160
being it an online attack so you need a

1034
00:43:20,160 --> 00:43:22,619
someone to sign that message many times

1035
00:43:22,619 --> 00:43:24,960
till you get the right so it's still a

1036
00:43:24,960 --> 00:43:27,900
very large value so I see the value into

1037
00:43:27,900 --> 00:43:31,800
dkg's proposal I just don't like it

1038
00:43:31,800 --> 00:43:35,280
personally because I think it is uh like

1039
00:43:35,280 --> 00:43:38,099
it creates another Edge case instead if

1040
00:43:38,099 --> 00:43:40,859
you bind everything to the hash

1041
00:43:40,859 --> 00:43:43,079
algorithm no matter is if it's post or

1042
00:43:43,079 --> 00:43:45,720
pre Quantum I think it's better but

1043
00:43:45,720 --> 00:43:50,420
that's a personal opinion okay Mike

1044
00:43:50,420 --> 00:43:52,800
Hemsworth yeah I totally agree with what

1045
00:43:52,800 --> 00:43:54,599
Aaron said I mean it's it's yeah the

1046
00:43:54,599 --> 00:43:55,859
internals of daily lithium are going to

1047
00:43:55,859 --> 00:43:58,140
prevent for internal reasons not are not

1048
00:43:58,140 --> 00:43:59,640
attempting to be

1049
00:43:59,640 --> 00:44:01,740
um Collision resistance

1050
00:44:01,740 --> 00:44:04,319
um personal vote dkg I would say just go

1051
00:44:04,319 --> 00:44:06,000
ahead with this this is well into

1052
00:44:06,000 --> 00:44:07,920
splitting hairs

1053
00:44:07,920 --> 00:44:08,640
um

1054
00:44:08,640 --> 00:44:10,740
I'd also want to point out this is a

1055
00:44:10,740 --> 00:44:12,300
perfect I mean you've sort of stepped in

1056
00:44:12,300 --> 00:44:14,280
a bear trap this is a perfect topic for

1057
00:44:14,280 --> 00:44:16,920
Roman's new pqc working group because

1058
00:44:16,920 --> 00:44:18,960
everyone's going to have to face this

1059
00:44:18,960 --> 00:44:20,520
question of whether we pre-hash

1060
00:44:20,520 --> 00:44:23,040
dilithium and falcon or not and if we

1061
00:44:23,040 --> 00:44:26,160
prehash it do we salt it or not and this

1062
00:44:26,160 --> 00:44:27,540
is going to come up absolutely

1063
00:44:27,540 --> 00:44:29,040
everywhere

1064
00:44:29,040 --> 00:44:31,140
we nonetheless don't want to wait for

1065
00:44:31,140 --> 00:44:33,319
that

1066
00:44:33,599 --> 00:44:37,079
so I think we have

1067
00:44:37,079 --> 00:44:38,760
three options

1068
00:44:38,760 --> 00:44:41,400
one is the status quo

1069
00:44:41,400 --> 00:44:44,520
which is a fixed then 16 octet cells

1070
00:44:44,520 --> 00:44:47,000
uh

1071
00:44:47,040 --> 00:44:50,420
oh pardon me Robin go ahead

1072
00:44:53,700 --> 00:44:58,079
hi is the mic working yep okay

1073
00:44:58,079 --> 00:45:00,960
um yeah just sorry to to preempt your

1074
00:45:00,960 --> 00:45:02,579
your summary

1075
00:45:02,579 --> 00:45:05,220
um if I remember correctly a few itfs

1076
00:45:05,220 --> 00:45:06,319
back

1077
00:45:06,319 --> 00:45:12,000
uh cfog I think it was was discussing a

1078
00:45:12,000 --> 00:45:15,300
a dual or hybrid signature scheme

1079
00:45:15,300 --> 00:45:17,880
where you would have an algorithm that

1080
00:45:17,880 --> 00:45:19,619
was thought probably not to be post

1081
00:45:19,619 --> 00:45:22,319
Quantum safe

1082
00:45:22,319 --> 00:45:24,300
um and one that you thought was post

1083
00:45:24,300 --> 00:45:25,680
Quantum safe

1084
00:45:25,680 --> 00:45:29,220
and you would actually doubly sign uh

1085
00:45:29,220 --> 00:45:30,960
things that you wanted

1086
00:45:30,960 --> 00:45:32,240
to sign

1087
00:45:32,240 --> 00:45:35,940
with the goal that you'd you'd have

1088
00:45:35,940 --> 00:45:37,380
compatibility you'd have Legacy

1089
00:45:37,380 --> 00:45:39,380
compatibility because of the non-safe

1090
00:45:39,380 --> 00:45:42,180
algorithm until such time as you wanted

1091
00:45:42,180 --> 00:45:44,099
to stop using that or had to stop using

1092
00:45:44,099 --> 00:45:45,119
it

1093
00:45:45,119 --> 00:45:48,119
but you would be signing things now with

1094
00:45:48,119 --> 00:45:50,460
an algorithm thought to be

1095
00:45:50,460 --> 00:45:53,599
post Quantum safe

1096
00:45:53,760 --> 00:45:57,720
and the the driver of that was simply uh

1097
00:45:57,720 --> 00:45:59,280
the length of time for which you might

1098
00:45:59,280 --> 00:46:01,740
want a signed object the signed artifact

1099
00:46:01,740 --> 00:46:03,780
to persist

1100
00:46:03,780 --> 00:46:07,140
so is there an alternative here to say

1101
00:46:07,140 --> 00:46:12,180
treat these different salt lengths as if

1102
00:46:12,180 --> 00:46:13,440
you like

1103
00:46:13,440 --> 00:46:15,780
probably not Quantum safe and probably

1104
00:46:15,780 --> 00:46:18,359
Quantum safe variants and do a dual

1105
00:46:18,359 --> 00:46:20,839
signing

1106
00:46:21,800 --> 00:46:23,720
Aaron

1107
00:46:23,720 --> 00:46:27,540
you are like reading my slides that come

1108
00:46:27,540 --> 00:46:29,339
in the next presentation this is another

1109
00:46:29,339 --> 00:46:32,700
topic so I would like to say maybe of

1110
00:46:32,700 --> 00:46:34,260
this length of salt we could discuss

1111
00:46:34,260 --> 00:46:35,819
after the second presentation because

1112
00:46:35,819 --> 00:46:38,700
there is a better explanation there and

1113
00:46:38,700 --> 00:46:41,040
also the idea of signing twice with the

1114
00:46:41,040 --> 00:46:43,920
pre and the post Quantum key so so yes

1115
00:46:43,920 --> 00:46:46,440
and no uh so we're not chartered to do

1116
00:46:46,440 --> 00:46:48,599
work on postponed crypto so we need to

1117
00:46:48,599 --> 00:46:50,880
make this decision regardless

1118
00:46:50,880 --> 00:46:51,960
um so

1119
00:46:51,960 --> 00:46:55,380
I'm going to suggest that we have a try

1120
00:46:55,380 --> 00:46:57,180
a poll with three options one is the

1121
00:46:57,180 --> 00:46:59,640
status quo which is a fixed length 16

1122
00:46:59,640 --> 00:47:00,960
octet salt

1123
00:47:00,960 --> 00:47:03,420
the second is the proposal iron maid

1124
00:47:03,420 --> 00:47:06,240
where the salt length is tied to the

1125
00:47:06,240 --> 00:47:09,300
Collision resistance size of the hash

1126
00:47:09,300 --> 00:47:10,980
and the third proposal is I think what

1127
00:47:10,980 --> 00:47:13,920
dkg suggested is that we add a column to

1128
00:47:13,920 --> 00:47:15,720
the Ayana registry

1129
00:47:15,720 --> 00:47:17,880
for each signature type

1130
00:47:17,880 --> 00:47:19,500
receipts for each signature algorithm

1131
00:47:19,500 --> 00:47:23,099
that we have a salt length parameter in

1132
00:47:23,099 --> 00:47:25,640
the registry

1133
00:47:26,480 --> 00:47:28,319
I just wanna

1134
00:47:28,319 --> 00:47:30,540
I wanna I wanna point out that I think

1135
00:47:30,540 --> 00:47:32,460
we'll need a column for the registry in

1136
00:47:32,460 --> 00:47:33,660
either case

1137
00:47:33,660 --> 00:47:35,640
uh because the registry needs to know

1138
00:47:35,640 --> 00:47:38,099
what is the Collision resistance of each

1139
00:47:38,099 --> 00:47:40,920
algorithm I mean if you're an expert in

1140
00:47:40,920 --> 00:47:42,660
the algorithms you know what that is but

1141
00:47:42,660 --> 00:47:44,280
we will need the table in any case the

1142
00:47:44,280 --> 00:47:45,720
question is whether we want the table to

1143
00:47:45,720 --> 00:47:48,660
exactly we want the column to match the

1144
00:47:48,660 --> 00:47:51,000
Collision resistance and okay given the

1145
00:47:51,000 --> 00:47:52,920
discussion I I'm definitely not I'm no

1146
00:47:52,920 --> 00:47:54,480
longer interested in my counter proposal

1147
00:47:54,480 --> 00:47:56,339
I I'm I've been convinced by the

1148
00:47:56,339 --> 00:47:57,180
speakers

1149
00:47:57,180 --> 00:48:00,480
uh oh okay so proposed dkg's proposal

1150
00:48:00,480 --> 00:48:02,339
was withdrawn does anybody else want to

1151
00:48:02,339 --> 00:48:05,640
put tkg's proposal back on the table

1152
00:48:05,640 --> 00:48:07,380
okay so then we have two proposals one

1153
00:48:07,380 --> 00:48:09,960
is Aaron's suggestion that the salt

1154
00:48:09,960 --> 00:48:11,160
length is tied to the Collision

1155
00:48:11,160 --> 00:48:13,079
resistance of the hash function

1156
00:48:13,079 --> 00:48:14,819
and the second one is the status quo

1157
00:48:14,819 --> 00:48:18,060
where we have a 16 octet salt do you

1158
00:48:18,060 --> 00:48:21,900
want to start the pole dictator should I

1159
00:48:21,900 --> 00:48:22,980
um

1160
00:48:22,980 --> 00:48:25,079
uh

1161
00:48:25,079 --> 00:48:27,420
okay so we have two options status quo

1162
00:48:27,420 --> 00:48:30,560
or Aaron's suggestion

1163
00:48:40,920 --> 00:48:43,579
uh

1164
00:48:46,319 --> 00:48:49,740
okay so raise your hand if you think we

1165
00:48:49,740 --> 00:48:51,300
should have the Collision the salt

1166
00:48:51,300 --> 00:48:52,859
length match the Collision resistance of

1167
00:48:52,859 --> 00:48:54,720
the hash function

1168
00:48:54,720 --> 00:48:58,020
and do not raise hand if you think we

1169
00:48:58,020 --> 00:49:01,140
should uh stick with the status quo and

1170
00:49:01,140 --> 00:49:03,420
if you want to abstain you do that by

1171
00:49:03,420 --> 00:49:06,140
abstaining

1172
00:49:06,180 --> 00:49:09,180
foreign

1173
00:49:12,680 --> 00:49:14,880
so if you raise your hand if you want

1174
00:49:14,880 --> 00:49:17,220
Aaron's proposal to make the salt lens

1175
00:49:17,220 --> 00:49:19,020
the the Collision resistance size of the

1176
00:49:19,020 --> 00:49:21,180
hash and click the do not raise your

1177
00:49:21,180 --> 00:49:22,740
hand if you'd like to stick with the

1178
00:49:22,740 --> 00:49:27,359
status quo of a fixed 16 octet salt

1179
00:49:27,359 --> 00:49:30,900
and it seems to be stable and relatively

1180
00:49:30,900 --> 00:49:34,260
clear and we have 15 raised hands and

1181
00:49:34,260 --> 00:49:37,319
one not raised hands it's useful to

1182
00:49:37,319 --> 00:49:39,119
check with the person who clicked do not

1183
00:49:39,119 --> 00:49:40,980
raise hand would they like to say at the

1184
00:49:40,980 --> 00:49:42,780
microphone why uh that can that can be

1185
00:49:42,780 --> 00:49:44,579
helpful information

1186
00:49:44,579 --> 00:49:48,240
uh yes this is me uh the reason is that

1187
00:49:48,240 --> 00:49:50,339
why is there assault there if it's to

1188
00:49:50,339 --> 00:49:52,440
provide to provide Collision resistance

1189
00:49:52,440 --> 00:49:55,260
which means that a collision would apply

1190
00:49:55,260 --> 00:49:57,540
it would apply only if they managed to

1191
00:49:57,540 --> 00:50:00,240
guess the salt first and someone blindly

1192
00:50:00,240 --> 00:50:03,960
guessing a 16 octet value is is

1193
00:50:03,960 --> 00:50:05,640
sufficiently improbable not to worry

1194
00:50:05,640 --> 00:50:08,880
about okay so thanks to that

1195
00:50:08,880 --> 00:50:09,720
um

1196
00:50:09,720 --> 00:50:12,480
even Aaron is nothing but that but we

1197
00:50:12,480 --> 00:50:14,339
picked something so that's that's that's

1198
00:50:14,339 --> 00:50:15,720
not fair

1199
00:50:15,720 --> 00:50:18,960
grab the feet from the jaws of victory

1200
00:50:18,960 --> 00:50:21,200
I would like to

1201
00:50:21,200 --> 00:50:23,880
request someone to volunteer to make a

1202
00:50:23,880 --> 00:50:26,520
merge request I mean Paul if you're okay

1203
00:50:26,520 --> 00:50:28,079
with making them the edit yourself

1204
00:50:28,079 --> 00:50:29,819
that's fine but if you would rather have

1205
00:50:29,819 --> 00:50:33,200
somebody propose a merge requests

1206
00:50:34,560 --> 00:50:37,500
great okay we are we are way over time

1207
00:50:37,500 --> 00:50:38,880
for this question so I'd like to move on

1208
00:50:38,880 --> 00:50:40,859
to the next one unless yeah Robin you're

1209
00:50:40,859 --> 00:50:42,000
still in the queue or do you want to

1210
00:50:42,000 --> 00:50:44,579
take yourself out of the queue

1211
00:50:44,579 --> 00:50:46,619
okay peace

1212
00:50:46,619 --> 00:50:48,119
all right

1213
00:50:48,119 --> 00:50:50,460
um so on gitlab this has actually not

1214
00:50:50,460 --> 00:50:52,380
been brought to the mailing list that's

1215
00:50:52,380 --> 00:50:55,079
a failure of your chairs here sorry I

1216
00:50:55,079 --> 00:50:56,220
failed to bring this to the mailing list

1217
00:50:56,220 --> 00:50:58,200
uh when it came up

1218
00:50:58,200 --> 00:51:01,680
um demi-marie open hour noted that as

1219
00:51:01,680 --> 00:51:04,380
currently described a version 5

1220
00:51:04,380 --> 00:51:05,760
signature

1221
00:51:05,760 --> 00:51:07,740
uh over a message that is less than four

1222
00:51:07,740 --> 00:51:09,240
gigabytes in length

1223
00:51:09,240 --> 00:51:12,480
can be transformed into a version 3

1224
00:51:12,480 --> 00:51:15,480
signature over a subtly different data

1225
00:51:15,480 --> 00:51:17,819
but signed by the same key

1226
00:51:17,819 --> 00:51:20,339
so it is possible for an attacker to

1227
00:51:20,339 --> 00:51:24,359
take a version 5 key and a version 5

1228
00:51:24,359 --> 00:51:26,880
signature extract the cryptographic key

1229
00:51:26,880 --> 00:51:29,220
material from the key transform it into

1230
00:51:29,220 --> 00:51:31,680
a V3 key

1231
00:51:31,680 --> 00:51:34,980
and then make take the take the V5

1232
00:51:34,980 --> 00:51:40,440
signature and apply it to uh

1233
00:51:40,440 --> 00:51:44,339
a weird variation of the text that was

1234
00:51:44,339 --> 00:51:45,660
originally signed and the signature will

1235
00:51:45,660 --> 00:51:46,980
still validate for those things that

1236
00:51:46,980 --> 00:51:49,319
validate B3

1237
00:51:49,319 --> 00:51:51,720
um there is if it's proposed on that

1238
00:51:51,720 --> 00:51:52,920
issue

1239
00:51:52,920 --> 00:51:55,079
um which just changes the way that the

1240
00:51:55,079 --> 00:51:59,280
trailer is computed for the V5 hash

1241
00:51:59,280 --> 00:52:01,400
um

1242
00:52:01,680 --> 00:52:05,220
uh the draft already says you should you

1243
00:52:05,220 --> 00:52:07,619
I think it says You must not validate V3

1244
00:52:07,619 --> 00:52:10,319
signatures uh because we believe them to

1245
00:52:10,319 --> 00:52:11,940
be insecure

1246
00:52:11,940 --> 00:52:12,839
um

1247
00:52:12,839 --> 00:52:15,000
so it's not clear that we need to do

1248
00:52:15,000 --> 00:52:18,059
this on the other hand the change is not

1249
00:52:18,059 --> 00:52:20,099
particularly big it just basically moves

1250
00:52:20,099 --> 00:52:22,740
some bites around to prevent the the

1251
00:52:22,740 --> 00:52:24,540
signature from being at least in the

1252
00:52:24,540 --> 00:52:25,980
same way

1253
00:52:25,980 --> 00:52:27,660
um be relatively easy to do the change

1254
00:52:27,660 --> 00:52:30,540
and avoid it for those things that are

1255
00:52:30,540 --> 00:52:33,480
failing at their uh rejecting V3

1256
00:52:33,480 --> 00:52:35,700
signatures

1257
00:52:35,700 --> 00:52:37,380
um I don't know who else I know that

1258
00:52:37,380 --> 00:52:38,819
there are at least a few people who have

1259
00:52:38,819 --> 00:52:40,680
read this issue

1260
00:52:40,680 --> 00:52:41,520
um

1261
00:52:41,520 --> 00:52:43,740
and commented on it I think Eustis is

1262
00:52:43,740 --> 00:52:45,119
there

1263
00:52:45,119 --> 00:52:47,180
um

1264
00:52:47,280 --> 00:52:50,280
uh and has read in commented on it I

1265
00:52:50,280 --> 00:52:51,420
don't know whether anybody else wants to

1266
00:52:51,420 --> 00:52:53,579
speak to this or not

1267
00:52:53,579 --> 00:52:54,480
um

1268
00:52:54,480 --> 00:52:57,240
if we were to do a poll on it the poll

1269
00:52:57,240 --> 00:53:00,119
would be uh should we change the trailer

1270
00:53:00,119 --> 00:53:03,059
of V5 signatures to avoid any possible

1271
00:53:03,059 --> 00:53:06,740
aliasing with B3 signatures

1272
00:53:09,900 --> 00:53:12,720
uh yes Robin you are reading that

1273
00:53:12,720 --> 00:53:15,000
correctly uh

1274
00:53:15,000 --> 00:53:17,880
the the issue here is that D5 signatures

1275
00:53:17,880 --> 00:53:20,700
Hash a trailer that consists of an eight

1276
00:53:20,700 --> 00:53:23,940
octet size value

1277
00:53:23,940 --> 00:53:25,559
um of the message

1278
00:53:25,559 --> 00:53:29,339
and the fourth uh signature the three

1279
00:53:29,339 --> 00:53:32,040
signatures as a trailer hash the

1280
00:53:32,040 --> 00:53:34,520
timestamp of the signature

1281
00:53:34,520 --> 00:53:37,920
prefix by the the signature type

1282
00:53:37,920 --> 00:53:40,559
so as long as as long as the fifth octet

1283
00:53:40,559 --> 00:53:43,800
from the end is a zero

1284
00:53:43,800 --> 00:53:47,040
then the remaining bits will appear as a

1285
00:53:47,040 --> 00:53:50,040
time stamp when you interpret the hashed

1286
00:53:50,040 --> 00:53:54,359
stream as a V3 uh as a V3 signature

1287
00:53:54,359 --> 00:53:55,859
this is a weird thing it's not clear

1288
00:53:55,859 --> 00:53:57,839
that we have a specific attack but

1289
00:53:57,839 --> 00:54:00,240
that's the uh that's where the four

1290
00:54:00,240 --> 00:54:02,460
gigabyte

1291
00:54:02,460 --> 00:54:04,440
boundary comes from this is not an issue

1292
00:54:04,440 --> 00:54:09,119
for V4 because V4 hashes the file size

1293
00:54:09,119 --> 00:54:11,819
at the end but it before the file size

1294
00:54:11,819 --> 00:54:14,040
comes as 0xff

1295
00:54:14,040 --> 00:54:17,579
uh octet and there is no signature type

1296
00:54:17,579 --> 00:54:20,059
0x

1297
00:54:22,319 --> 00:54:24,800
okay

1298
00:54:25,859 --> 00:54:27,720
the

1299
00:54:27,720 --> 00:54:30,359
does anybody think they're in a position

1300
00:54:30,359 --> 00:54:32,839
to

1301
00:54:33,059 --> 00:54:35,339
does anybody need more information

1302
00:54:35,339 --> 00:54:37,859
um before having an opinion on this or

1303
00:54:37,859 --> 00:54:41,119
do you think you have enough information

1304
00:54:44,700 --> 00:54:46,859
I see a whole bunch of non-reactions so

1305
00:54:46,859 --> 00:54:49,819
I don't know what the answer is

1306
00:54:50,339 --> 00:54:53,220
uh

1307
00:54:53,220 --> 00:54:55,079
I'm gonna start a poll here and if

1308
00:54:55,079 --> 00:54:57,960
nobody votes in the poll or if like

1309
00:54:57,960 --> 00:54:59,220
three people vote in the poll we will

1310
00:54:59,220 --> 00:55:01,079
know that nobody has has made a decision

1311
00:55:01,079 --> 00:55:02,339
there and that will be information we

1312
00:55:02,339 --> 00:55:04,760
can take to the list later that's okay

1313
00:55:04,760 --> 00:55:07,740
okay so you're poll will be okay go

1314
00:55:07,740 --> 00:55:09,720
ahead and say change

1315
00:55:09,720 --> 00:55:13,380
the V5 signature trailer octet ordering

1316
00:55:13,380 --> 00:55:15,540
so the V5 signature trailer has a

1317
00:55:15,540 --> 00:55:18,180
certain octet ordering and open hours

1318
00:55:18,180 --> 00:55:20,520
proposal is to

1319
00:55:20,520 --> 00:55:22,200
change the ordering of the trailer

1320
00:55:22,200 --> 00:55:23,460
octets

1321
00:55:23,460 --> 00:55:25,500
in a way that would make it uh

1322
00:55:25,500 --> 00:55:27,180
impossible to Alias with the V3

1323
00:55:27,180 --> 00:55:29,460
signature

1324
00:55:29,460 --> 00:55:31,319
and and the instruction is to raise your

1325
00:55:31,319 --> 00:55:33,300
hand if you want that change

1326
00:55:33,300 --> 00:55:36,119
raise it if you want the change click do

1327
00:55:36,119 --> 00:55:37,440
not raise your hand if you do not want

1328
00:55:37,440 --> 00:55:39,240
if you oppose the change and if you're

1329
00:55:39,240 --> 00:55:42,859
not sure please don't click anything

1330
00:55:49,680 --> 00:55:52,578
Daniel go ahead

1331
00:55:53,359 --> 00:55:57,960
so we don't support uh V3 signatures

1332
00:55:57,960 --> 00:56:00,960
anymore already since a long time and

1333
00:56:00,960 --> 00:56:02,160
haven't

1334
00:56:02,160 --> 00:56:03,240
had

1335
00:56:03,240 --> 00:56:06,420
major issues as far as anywhere

1336
00:56:06,420 --> 00:56:10,440
so I don't have a particularly strong

1337
00:56:10,440 --> 00:56:13,800
opinion on this I'm I'm fine with

1338
00:56:13,800 --> 00:56:15,780
changing it I'm also fine with not

1339
00:56:15,780 --> 00:56:18,180
changing it so I yeah

1340
00:56:18,180 --> 00:56:20,880
okay so we we have a kind of a weaker

1341
00:56:20,880 --> 00:56:23,940
distribution here and we have two hands

1342
00:56:23,940 --> 00:56:25,920
two people click do not raise hand do

1343
00:56:25,920 --> 00:56:28,940
you want to say why did we good

1344
00:56:28,980 --> 00:56:31,619
I think that signature verification is

1345
00:56:31,619 --> 00:56:34,020
something that is on the receiver's end

1346
00:56:34,020 --> 00:56:37,260
and does not break like you can still

1347
00:56:37,260 --> 00:56:40,140
read the message if it doesn't verify so

1348
00:56:40,140 --> 00:56:42,119
the fact that not very validating V3

1349
00:56:42,119 --> 00:56:44,220
signatures is something that is

1350
00:56:44,220 --> 00:56:47,460
necessary and since it's a must

1351
00:56:47,460 --> 00:56:50,520
I think that it's it's good not to like

1352
00:56:50,520 --> 00:56:52,500
to to ban on these three verifications

1353
00:56:52,500 --> 00:56:55,619
and do not change this

1354
00:56:55,619 --> 00:56:59,280
so there is a weird case where the

1355
00:56:59,280 --> 00:57:01,920
signature the data being signed is large

1356
00:57:01,920 --> 00:57:04,440
enough that the fifth octet of its size

1357
00:57:04,440 --> 00:57:06,540
is 0xff

1358
00:57:06,540 --> 00:57:10,460
and the sixth octet of its size is 0x04

1359
00:57:10,460 --> 00:57:13,740
so signature over that data put Alias

1360
00:57:13,740 --> 00:57:16,140
from a V5 signature to a V4 signature

1361
00:57:16,140 --> 00:57:18,660
potentially that's a much fairer case

1362
00:57:18,660 --> 00:57:21,480
there's you have to be signing exabytes

1363
00:57:21,480 --> 00:57:24,480
of data but there is a weird aliasing

1364
00:57:24,480 --> 00:57:26,160
situation there where the signature

1365
00:57:26,160 --> 00:57:28,500
would be identical

1366
00:57:28,500 --> 00:57:31,380
it is not just V3 though V3 is much more

1367
00:57:31,380 --> 00:57:33,359
much easier

1368
00:57:33,359 --> 00:57:35,640
is there a reason why you're not hashing

1369
00:57:35,640 --> 00:57:36,839
in when you're while you're hashing

1370
00:57:36,839 --> 00:57:38,700
before the safety while you're by not

1371
00:57:38,700 --> 00:57:40,200
hashing in the version number of the

1372
00:57:40,200 --> 00:57:41,940
signature

1373
00:57:41,940 --> 00:57:43,559
this version number the signature is

1374
00:57:43,559 --> 00:57:45,900
Hash but it's hashed in the trailer

1375
00:57:45,900 --> 00:57:48,480
and the position in the trailer varies

1376
00:57:48,480 --> 00:57:52,160
depending on the signature version

1377
00:57:53,099 --> 00:57:55,260
uh and so that's that's why we have this

1378
00:57:55,260 --> 00:57:57,059
aliasing problem if the if the version

1379
00:57:57,059 --> 00:58:00,119
number was hashed in at the beginning

1380
00:58:00,119 --> 00:58:03,359
then uh we would not have this issue the

1381
00:58:03,359 --> 00:58:05,819
trouble is that that we have this this

1382
00:58:05,819 --> 00:58:07,800
regular pad this pattern of changing

1383
00:58:07,800 --> 00:58:10,319
open hours proposal would make it so

1384
00:58:10,319 --> 00:58:11,940
that

1385
00:58:11,940 --> 00:58:14,099
um the version of the signature is

1386
00:58:14,099 --> 00:58:17,040
always a fixed length from the end

1387
00:58:17,040 --> 00:58:21,000
of the hash stream whereas right now V3

1388
00:58:21,000 --> 00:58:23,640
doesn't have a version number in it

1389
00:58:23,640 --> 00:58:26,400
the four has a version number at the

1390
00:58:26,400 --> 00:58:28,440
sixth octet from the end and B5 has a

1391
00:58:28,440 --> 00:58:30,960
version number at the uh

1392
00:58:30,960 --> 00:58:33,780
ninth octet from the end

1393
00:58:33,780 --> 00:58:36,480
Yeah so basically

1394
00:58:36,480 --> 00:58:38,819
so basically saying if I had a dump of

1395
00:58:38,819 --> 00:58:40,740
what goes into hat to the hash I can

1396
00:58:40,740 --> 00:58:43,020
pause back I can parse out the version

1397
00:58:43,020 --> 00:58:46,940
number that that should work

1398
00:58:48,900 --> 00:58:50,400
um

1399
00:58:50,400 --> 00:58:52,500
you know the concern is

1400
00:58:52,500 --> 00:58:54,180
we have the sequence of data that goes

1401
00:58:54,180 --> 00:58:56,160
into the hash if we know that that

1402
00:58:56,160 --> 00:58:58,079
sequence of data is a version is a

1403
00:58:58,079 --> 00:59:00,540
version three signature there is no way

1404
00:59:00,540 --> 00:59:03,059
to find that it is version 3 from that

1405
00:59:03,059 --> 00:59:05,099
sequence if we know that the signature

1406
00:59:05,099 --> 00:59:07,380
is a V4 signature we find the version

1407
00:59:07,380 --> 00:59:09,540
number from the sixth octet from the end

1408
00:59:09,540 --> 00:59:11,819
if we know that it's a V5 signature we

1409
00:59:11,819 --> 00:59:13,920
find the version number from the 10th

1410
00:59:13,920 --> 00:59:15,660
octet from the end in the current

1411
00:59:15,660 --> 00:59:17,460
proposal

1412
00:59:17,460 --> 00:59:20,099
but if you don't know those things and

1413
00:59:20,099 --> 00:59:21,359
you're looking at the sequence and

1414
00:59:21,359 --> 00:59:22,740
trying to figure out what version it is

1415
00:59:22,740 --> 00:59:26,579
you could it's possible for one octet

1416
00:59:26,579 --> 00:59:29,040
string to land on something that could

1417
00:59:29,040 --> 00:59:31,680
be interpreted in the same way

1418
00:59:31,680 --> 00:59:34,440
so open hours proposal makes makes it so

1419
00:59:34,440 --> 00:59:36,420
that there is a fixed location in the

1420
00:59:36,420 --> 00:59:39,480
hash stream that cannot so that the data

1421
00:59:39,480 --> 00:59:42,599
hash for V4 and V5 cannot Collide and V3

1422
00:59:42,599 --> 00:59:44,520
also cannot collide

1423
00:59:44,520 --> 00:59:47,040
okay so so again just as a time check

1424
00:59:47,040 --> 00:59:48,660
we've got a half hour left so there's a

1425
00:59:48,660 --> 00:59:50,460
couple other issues to get to I I think

1426
00:59:50,460 --> 00:59:52,740
we have you know we have input on this

1427
00:59:52,740 --> 00:59:54,720
um it's clearly in One Direction we have

1428
00:59:54,720 --> 00:59:56,579
eight raise hands and two not raised for

1429
00:59:56,579 --> 00:59:57,359
the record

1430
00:59:57,359 --> 00:59:59,160
uh it's a little bit less strong than

1431
00:59:59,160 --> 01:00:01,200
the previous so

1432
01:00:01,200 --> 01:00:05,040
I I guess the action here will be to

1433
01:00:05,040 --> 01:00:07,700
make that change

1434
01:00:07,700 --> 01:00:09,420
but

1435
01:00:09,420 --> 01:00:12,240
be open to somebody on the list

1436
01:00:12,240 --> 01:00:14,940
um raising new information in the next

1437
01:00:14,940 --> 01:00:17,480
short while so then the question will be

1438
01:00:17,480 --> 01:00:20,160
does that

1439
01:00:20,160 --> 01:00:23,220
was that an issue or a major Coast

1440
01:00:23,220 --> 01:00:25,500
that's an issue not a merge request okay

1441
01:00:25,500 --> 01:00:26,880
so we need somebody to turn it into

1442
01:00:26,880 --> 01:00:29,839
emerge requests

1443
01:00:30,599 --> 01:00:32,780
foreign

1444
01:00:58,520 --> 01:01:00,900
recommended a context parameter for

1445
01:01:00,900 --> 01:01:02,760
encryption to ensure that things could

1446
01:01:02,760 --> 01:01:05,339
not be decrypted in uh surprising

1447
01:01:05,339 --> 01:01:07,920
contexts uh this is part of the work on

1448
01:01:07,920 --> 01:01:10,680
defending against detail

1449
01:01:10,680 --> 01:01:14,040
um Daniel Wiggins recommended uh that if

1450
01:01:14,040 --> 01:01:15,299
we're going to add a concert parameter

1451
01:01:15,299 --> 01:01:16,500
for encryption we could add it for

1452
01:01:16,500 --> 01:01:18,180
signatures too so that signatures do not

1453
01:01:18,180 --> 01:01:21,480
verify in surprising contexts

1454
01:01:21,480 --> 01:01:23,339
um however doing this requires a

1455
01:01:23,339 --> 01:01:24,900
definite a shared definition of a

1456
01:01:24,900 --> 01:01:27,180
context and no one has proposed well

1457
01:01:27,180 --> 01:01:29,280
Brinkmann proposed a specific context

1458
01:01:29,280 --> 01:01:31,380
for email signatures

1459
01:01:31,380 --> 01:01:32,280
um

1460
01:01:32,280 --> 01:01:36,000
but it is not clear if we would be able

1461
01:01:36,000 --> 01:01:38,040
to use a V5 signature for email without

1462
01:01:38,040 --> 01:01:39,660
this context

1463
01:01:39,660 --> 01:01:40,520
um

1464
01:01:40,520 --> 01:01:42,599
in uh

1465
01:01:42,599 --> 01:01:45,780
like this might delay the adoption of

1466
01:01:45,780 --> 01:01:48,660
the additional signatures

1467
01:01:48,660 --> 01:01:50,339
um or additional encryption of using the

1468
01:01:50,339 --> 01:01:51,839
signatures or encryption

1469
01:01:51,839 --> 01:01:53,160
um if we don't have the context well

1470
01:01:53,160 --> 01:01:56,099
defined for any particular location for

1471
01:01:56,099 --> 01:01:58,020
example if you're doing backups

1472
01:01:58,020 --> 01:01:59,819
so there's a question of do we want the

1473
01:01:59,819 --> 01:02:02,400
context parameter in the current to come

1474
01:02:02,400 --> 01:02:04,559
out in the crypto refresh or is it

1475
01:02:04,559 --> 01:02:06,599
something that we can postpone to future

1476
01:02:06,599 --> 01:02:07,559
work

1477
01:02:07,559 --> 01:02:08,880
uh

1478
01:02:08,880 --> 01:02:12,140
anybody want to speak to this

1479
01:02:13,500 --> 01:02:16,040
Daniel

1480
01:02:17,940 --> 01:02:22,799
yes so I'm uh quite in favor of this as

1481
01:02:22,799 --> 01:02:26,940
you know and uh I think for for me uh

1482
01:02:26,940 --> 01:02:31,079
this is most important possibly for new

1483
01:02:31,079 --> 01:02:34,740
applications that might want to use open

1484
01:02:34,740 --> 01:02:37,500
bgp that

1485
01:02:37,500 --> 01:02:41,520
um want to ensure that messages or

1486
01:02:41,520 --> 01:02:44,940
signatures can't be

1487
01:02:44,940 --> 01:02:48,140
um that's a transplanted into different

1488
01:02:48,140 --> 01:02:51,380
contexts contexts

1489
01:02:51,380 --> 01:02:54,359
or different applications

1490
01:02:54,359 --> 01:02:57,660
so having even just uh

1491
01:02:57,660 --> 01:03:01,440
an application identifier

1492
01:03:01,440 --> 01:03:05,460
in the context Plus in my opinion having

1493
01:03:05,460 --> 01:03:08,900
some application specific

1494
01:03:08,900 --> 01:03:11,400
contexts parameter that that can be

1495
01:03:11,400 --> 01:03:13,920
defined in in

1496
01:03:13,920 --> 01:03:17,579
um you know the applications usage of

1497
01:03:17,579 --> 01:03:21,619
open b2p would be very useful

1498
01:03:21,619 --> 01:03:25,099
I do also agree that for email

1499
01:03:25,099 --> 01:03:27,660
moving to

1500
01:03:27,660 --> 01:03:29,640
um a shared understanding of what the

1501
01:03:29,640 --> 01:03:30,780
context

1502
01:03:30,780 --> 01:03:33,799
should be is a lot of work and

1503
01:03:33,799 --> 01:03:37,260
it's not clear that we can do that

1504
01:03:37,260 --> 01:03:39,059
like

1505
01:03:39,059 --> 01:03:41,460
um you know in in the next few weeks or

1506
01:03:41,460 --> 01:03:42,359
so

1507
01:03:42,359 --> 01:03:44,099
but

1508
01:03:44,099 --> 01:03:46,020
um nevertheless I think it would be

1509
01:03:46,020 --> 01:03:49,740
valuable to add context parameters in

1510
01:03:49,740 --> 01:03:51,720
the spec

1511
01:03:51,720 --> 01:03:55,020
um so that new applications can start

1512
01:03:55,020 --> 01:03:57,480
using it and uh and then we can

1513
01:03:57,480 --> 01:04:00,500
separately think about how to

1514
01:04:00,500 --> 01:04:03,540
move email to that

1515
01:04:03,540 --> 01:04:07,559
so today so just it is what's your

1516
01:04:07,559 --> 01:04:09,299
suggestion then is that we have a a

1517
01:04:09,299 --> 01:04:11,400
default context parameter that we Define

1518
01:04:11,400 --> 01:04:14,099
that has a you know a fixed value for

1519
01:04:14,099 --> 01:04:15,000
now

1520
01:04:15,000 --> 01:04:17,520
and then we ask new applications to

1521
01:04:17,520 --> 01:04:20,280
define context parameters themselves as

1522
01:04:20,280 --> 01:04:21,839
they go forward

1523
01:04:21,839 --> 01:04:25,500
yeah yes so that could be one option uh

1524
01:04:25,500 --> 01:04:29,099
another option could be to to have a

1525
01:04:29,099 --> 01:04:32,099
registry as I I think dkg perhaps

1526
01:04:32,099 --> 01:04:34,260
suggested having a registry of

1527
01:04:34,260 --> 01:04:36,599
application identifiers and then we

1528
01:04:36,599 --> 01:04:38,339
could

1529
01:04:38,339 --> 01:04:41,000
um still already Define one for email

1530
01:04:41,000 --> 01:04:43,440
just so that

1531
01:04:43,440 --> 01:04:44,099
um

1532
01:04:44,099 --> 01:04:47,280
uh sign messages messages and signatures

1533
01:04:47,280 --> 01:04:49,799
for email are are separate and can be

1534
01:04:49,799 --> 01:04:52,500
transplanted to other applications but

1535
01:04:52,500 --> 01:04:55,380
and and then have after that an

1536
01:04:55,380 --> 01:04:58,020
application specific

1537
01:04:58,020 --> 01:05:00,119
um context parameter that we could

1538
01:05:00,119 --> 01:05:02,160
figure out later

1539
01:05:02,160 --> 01:05:05,280
uh what that should be for email and

1540
01:05:05,280 --> 01:05:07,140
each other application if that makes

1541
01:05:07,140 --> 01:05:08,640
sense

1542
01:05:08,640 --> 01:05:11,099
okay so so essentially proposal registry

1543
01:05:11,099 --> 01:05:12,780
with

1544
01:05:12,780 --> 01:05:15,299
I guess two initial values one per email

1545
01:05:15,299 --> 01:05:16,920
one per default

1546
01:05:16,920 --> 01:05:21,119
sorry one four default ah

1547
01:05:21,119 --> 01:05:23,160
I guess it might be worth doing some

1548
01:05:23,160 --> 01:05:26,819
work to to find out where everywhere

1549
01:05:26,819 --> 01:05:31,440
uh that open bgp is used is and maybe we

1550
01:05:31,440 --> 01:05:33,180
need more than

1551
01:05:33,180 --> 01:05:35,339
just email but

1552
01:05:35,339 --> 01:05:38,339
okay so I I yeah that's starting to

1553
01:05:38,339 --> 01:05:39,660
sound like a bunch of work but uh so

1554
01:05:39,660 --> 01:05:42,440
Rick you're annoying

1555
01:05:43,200 --> 01:05:45,240
Rick for Ryan responding to Daniel's

1556
01:05:45,240 --> 01:05:46,260
proposal

1557
01:05:46,260 --> 01:05:48,900
um I like the ability to separate uh

1558
01:05:48,900 --> 01:05:51,180
applications you mentioned the registry

1559
01:05:51,180 --> 01:05:53,220
is that a deliberate proposal is that

1560
01:05:53,220 --> 01:05:55,079
just something that pops up because it

1561
01:05:55,079 --> 01:05:57,299
means you uh you require a lot of extra

1562
01:05:57,299 --> 01:05:59,339
work for registering you could also

1563
01:05:59,339 --> 01:06:00,960
consider no ID which anyone could

1564
01:06:00,960 --> 01:06:03,299
register or you you ID which is even

1565
01:06:03,299 --> 01:06:04,440
simpler these are not security

1566
01:06:04,440 --> 01:06:06,960
attributes anyway so it's good to think

1567
01:06:06,960 --> 01:06:08,940
about what form of identity you want to

1568
01:06:08,940 --> 01:06:11,059
use

1569
01:06:12,000 --> 01:06:16,200
so one concern is that if the context

1570
01:06:16,200 --> 01:06:19,020
travels in the open pgp material

1571
01:06:19,020 --> 01:06:21,119
then we're not actually gaining anything

1572
01:06:21,119 --> 01:06:23,579
from this proposal in terms of security

1573
01:06:23,579 --> 01:06:25,920
because they'll just drive whatever the

1574
01:06:25,920 --> 01:06:27,480
Conex is there and then the attacker can

1575
01:06:27,480 --> 01:06:29,400
modify the context

1576
01:06:29,400 --> 01:06:32,760
so what the reason for the registry I

1577
01:06:32,760 --> 01:06:35,700
believe is to coordinate among users to

1578
01:06:35,700 --> 01:06:38,520
say oh I get it I'm in this context I'm

1579
01:06:38,520 --> 01:06:40,220
going to use this particular

1580
01:06:40,220 --> 01:06:43,799
Machinery my concern there even if we

1581
01:06:43,799 --> 01:06:45,480
just have a registry that's email and

1582
01:06:45,480 --> 01:06:49,680
not email is if I send you an email with

1583
01:06:49,680 --> 01:06:51,720
an attachment that is pgp encrypted

1584
01:06:51,720 --> 01:06:53,579
should it be decrypted with the email

1585
01:06:53,579 --> 01:06:55,559
context or should it be decrypted

1586
01:06:55,559 --> 01:06:57,180
without the email

1587
01:06:57,180 --> 01:06:59,579
I don't actually know what that means so

1588
01:06:59,579 --> 01:07:01,619
so then the registry's job is to

1589
01:07:01,619 --> 01:07:03,599
coordinate that kind of thing so I I'm

1590
01:07:03,599 --> 01:07:05,099
just saying I don't if we're doing a

1591
01:07:05,099 --> 01:07:07,140
registry I still like I kind of think

1592
01:07:07,140 --> 01:07:08,460
it's necessary but I also don't even

1593
01:07:08,460 --> 01:07:10,500
know what would go in the registry so if

1594
01:07:10,500 --> 01:07:11,880
someone wants to propose that I'm I'm

1595
01:07:11,880 --> 01:07:14,460
game to read it over and try to review

1596
01:07:14,460 --> 01:07:16,460
um

1597
01:07:16,859 --> 01:07:18,839
so

1598
01:07:18,839 --> 01:07:21,299
you want to do a poll on this I mean so

1599
01:07:21,299 --> 01:07:24,380
the other option that was

1600
01:07:26,039 --> 01:07:27,359
the other option that was mentioned in

1601
01:07:27,359 --> 01:07:29,819
the discussion on list was we can just

1602
01:07:29,819 --> 01:07:31,859
say we know that we know where the

1603
01:07:31,859 --> 01:07:33,660
context would go in these constructions

1604
01:07:33,660 --> 01:07:35,640
both for encryption and for signatures

1605
01:07:35,640 --> 01:07:38,220
and we could say

1606
01:07:38,220 --> 01:07:40,680
you know the null context is what we're

1607
01:07:40,680 --> 01:07:42,660
defining here and if somebody wants to

1608
01:07:42,660 --> 01:07:46,079
define a particular context in which a

1609
01:07:46,079 --> 01:07:48,299
the thing should be used and what the

1610
01:07:48,299 --> 01:07:50,220
context string should be we can just

1611
01:07:50,220 --> 01:07:52,920
simply Define a V3 SCI PD and figure out

1612
01:07:52,920 --> 01:07:55,440
how to signal that user supports that as

1613
01:07:55,440 --> 01:07:58,140
a separate work in recharger uh word

1614
01:07:58,140 --> 01:07:59,400
converter

1615
01:07:59,400 --> 01:08:02,160
because that's another way forward

1616
01:08:02,160 --> 01:08:04,980
so thinking about it from a getting

1617
01:08:04,980 --> 01:08:07,020
finished point of view that that last

1618
01:08:07,020 --> 01:08:09,539
option sounds more attractive to me as a

1619
01:08:09,539 --> 01:08:11,460
just a you know from as a chair and

1620
01:08:11,460 --> 01:08:12,720
getting finished

1621
01:08:12,720 --> 01:08:14,779
um

1622
01:08:18,839 --> 01:08:21,839
uh

1623
01:08:24,899 --> 01:08:26,580
so I don't know should we do a poll on

1624
01:08:26,580 --> 01:08:28,439
this or not I think how about a proposal

1625
01:08:28,439 --> 01:08:30,060
if we were to just point on this and

1626
01:08:30,060 --> 01:08:32,040
come back to it later as part of

1627
01:08:32,040 --> 01:08:33,420
retractoring would that be okay with

1628
01:08:33,420 --> 01:08:35,100
people

1629
01:08:35,100 --> 01:08:39,080
would anybody object to that

1630
01:08:39,839 --> 01:08:41,759
so nobody seems to be objecting in the

1631
01:08:41,759 --> 01:08:44,880
room or the chat so perhaps that's one

1632
01:08:44,880 --> 01:08:45,738
time

1633
01:08:45,738 --> 01:08:48,359
say your proposal again and we can put

1634
01:08:48,359 --> 01:08:49,439
it as a poll

1635
01:08:49,439 --> 01:08:51,600
The Proposal is report and consider this

1636
01:08:51,600 --> 01:08:54,560
as part of rechargering

1637
01:08:56,520 --> 01:08:59,040
so no poll

1638
01:08:59,040 --> 01:09:00,899
oh okay

1639
01:09:00,899 --> 01:09:02,219
I mean

1640
01:09:02,219 --> 01:09:04,380
nobody's objecting

1641
01:09:04,380 --> 01:09:05,520
okay

1642
01:09:05,520 --> 01:09:08,698
okay so I will suggest we'll move on the

1643
01:09:08,698 --> 01:09:11,599
minutes will be close to the list

1644
01:09:11,640 --> 01:09:16,319
um so Andrea gypsov recommended in uh on

1645
01:09:16,319 --> 01:09:20,219
the mail list and in git lab uh that

1646
01:09:20,219 --> 01:09:24,600
for V5 public keys for ACTH and ecdsa we

1647
01:09:24,600 --> 01:09:27,799
could move from the sec1

1648
01:09:29,279 --> 01:09:31,219
uh

1649
01:09:31,219 --> 01:09:33,960
representation to a more compact X only

1650
01:09:33,960 --> 01:09:36,439
representation

1651
01:09:36,439 --> 01:09:38,580
that would mean that the public key

1652
01:09:38,580 --> 01:09:40,198
format would differ for these things

1653
01:09:40,198 --> 01:09:42,660
between version 4 and version 5 or

1654
01:09:42,660 --> 01:09:45,420
version six if we call it version six

1655
01:09:45,420 --> 01:09:46,679
um

1656
01:09:46,679 --> 01:09:48,899
I don't know if folks want to have folks

1657
01:09:48,899 --> 01:09:50,939
want to comment on this

1658
01:09:50,939 --> 01:09:53,599
come on

1659
01:09:54,360 --> 01:09:56,239
um I am against this

1660
01:09:56,239 --> 01:10:00,480
specifically because we kept a hack in

1661
01:10:00,480 --> 01:10:02,600
the Easy

1662
01:10:02,600 --> 01:10:07,560
Ed 25519 and also the curve to 519

1663
01:10:07,560 --> 01:10:10,260
implementation to be consistent with V4

1664
01:10:10,260 --> 01:10:14,340
and in general I don't see that much

1665
01:10:14,340 --> 01:10:16,440
advantage in switching to X only

1666
01:10:16,440 --> 01:10:18,300
representation when we have one more

1667
01:10:18,300 --> 01:10:20,340
issue and then Computing the point

1668
01:10:20,340 --> 01:10:22,800
second one is

1669
01:10:22,800 --> 01:10:25,500
not so compact but we're still talking

1670
01:10:25,500 --> 01:10:27,840
about the elliptic curve keys so I don't

1671
01:10:27,840 --> 01:10:30,120
really see an advantage in in in in

1672
01:10:30,120 --> 01:10:33,120
bandwidth

1673
01:10:42,360 --> 01:10:44,400
so do we do we have anybody who wants to

1674
01:10:44,400 --> 01:10:48,080
speak for this change

1675
01:10:49,140 --> 01:10:51,659
I'm gonna start a poll then for move

1676
01:10:51,659 --> 01:10:53,580
from secular condition to X only

1677
01:10:53,580 --> 01:10:57,960
representation for ecth and ectsa

1678
01:10:57,960 --> 01:11:00,739
uh

1679
01:11:05,159 --> 01:11:07,140
so raise your hand if you want to move

1680
01:11:07,140 --> 01:11:09,719
to X only and do not raise your hand

1681
01:11:09,719 --> 01:11:11,580
that is quickly do not raise hand button

1682
01:11:11,580 --> 01:11:14,100
if you want to retain the SEC 1 rep

1683
01:11:14,100 --> 01:11:16,199
representation

1684
01:11:16,199 --> 01:11:19,500
or V5 Keys sorry the text of the poll

1685
01:11:19,500 --> 01:11:23,179
should say for V5 Keys only

1686
01:11:32,460 --> 01:11:34,320
okay so that seems to have stabilized

1687
01:11:34,320 --> 01:11:37,860
that zero raised hands nine times not

1688
01:11:37,860 --> 01:11:42,060
raised so essentially status quo

1689
01:11:42,060 --> 01:11:44,880
okay cool thanks folks

1690
01:11:44,880 --> 01:11:47,580
moving on

1691
01:11:47,580 --> 01:11:49,860
uh oh already I see you on the list

1692
01:11:49,860 --> 01:11:51,780
there

1693
01:11:51,780 --> 01:11:54,659
hey uh or steel transmute um just

1694
01:11:54,659 --> 01:11:56,880
because this issue has come up on

1695
01:11:56,880 --> 01:11:59,719
several other lists if you have

1696
01:11:59,719 --> 01:12:02,219
interacted on any of those other lists

1697
01:12:02,219 --> 01:12:04,980
and you feel the same way as you voted

1698
01:12:04,980 --> 01:12:06,960
in this context please share your

1699
01:12:06,960 --> 01:12:09,000
opinions on those other lists I'm

1700
01:12:09,000 --> 01:12:11,940
thinking specifically of the Cozy lists

1701
01:12:11,940 --> 01:12:13,980
regarding key types and key

1702
01:12:13,980 --> 01:12:16,320
representations in Hosey and cozy thank

1703
01:12:16,320 --> 01:12:17,280
you

1704
01:12:17,280 --> 01:12:19,199
sure Jose has kind of different

1705
01:12:19,199 --> 01:12:22,199
requirements to pgp though so

1706
01:12:22,199 --> 01:12:24,239
okay moving on

1707
01:12:24,239 --> 01:12:26,340
okay this is our

1708
01:12:26,340 --> 01:12:29,100
last chartered topic for this meeting

1709
01:12:29,100 --> 01:12:31,320
which is about how we handle the Ayanna

1710
01:12:31,320 --> 01:12:33,780
updates we had a call about this last

1711
01:12:33,780 --> 01:12:34,880
meeting

1712
01:12:34,880 --> 01:12:37,080
and you can see the results of that poll

1713
01:12:37,080 --> 01:12:41,400
in issue 140 on gitlab this is a

1714
01:12:41,400 --> 01:12:42,960
reminder the crypto refresh is going to

1715
01:12:42,960 --> 01:12:45,239
change almost all the Registries to

1716
01:12:45,239 --> 01:12:47,820
specification required which means we

1717
01:12:47,820 --> 01:12:49,560
will have a designated expert whose job

1718
01:12:49,560 --> 01:12:51,120
is to determine whether something is a

1719
01:12:51,120 --> 01:12:53,460
sufficient specification the only two

1720
01:12:53,460 --> 01:12:55,500
Registries that will remain RFC required

1721
01:12:55,500 --> 01:12:58,020
are for version numbers

1722
01:12:58,020 --> 01:13:00,840
um wherever they show up in the spec and

1723
01:13:00,840 --> 01:13:03,000
packet types so the packet type numbers

1724
01:13:03,000 --> 01:13:05,640
will both require an RFC so that's a

1725
01:13:05,640 --> 01:13:08,880
higher bar to meet this is a reminder

1726
01:13:08,880 --> 01:13:10,739
that that's you know I think we had a

1727
01:13:10,739 --> 01:13:13,080
rough consensus on this move at the last

1728
01:13:13,080 --> 01:13:14,820
one and we've talked about this for over

1729
01:13:14,820 --> 01:13:16,500
a year now

1730
01:13:16,500 --> 01:13:18,420
um but when I just like to confirm that

1731
01:13:18,420 --> 01:13:20,040
that's what we want to do and we also

1732
01:13:20,040 --> 01:13:21,659
are going to need people to volunteer to

1733
01:13:21,659 --> 01:13:24,239
be designated experts or maybe who would

1734
01:13:24,239 --> 01:13:25,380
be willing people could identify

1735
01:13:25,380 --> 01:13:26,520
themselves as being willing to be

1736
01:13:26,520 --> 01:13:28,440
designated experts and I believe we will

1737
01:13:28,440 --> 01:13:30,300
need to choose those doesn't be experts

1738
01:13:30,300 --> 01:13:32,900
Stephen I think

1739
01:13:32,940 --> 01:13:35,940
okay

1740
01:13:36,900 --> 01:13:39,900
yeah so the isg make this Choice uh

1741
01:13:39,900 --> 01:13:42,000
because it it can outpass the working

1742
01:13:42,000 --> 01:13:43,620
group and so on so it's it's not our

1743
01:13:43,620 --> 01:13:45,719
call but we can certainly provide input

1744
01:13:45,719 --> 01:13:48,000
to the isg and if people are willing to

1745
01:13:48,000 --> 01:13:50,040
volunteer for it great

1746
01:13:50,040 --> 01:13:51,780
uh so please do that and I guess the

1747
01:13:51,780 --> 01:13:53,159
more the more interesting question for

1748
01:13:53,159 --> 01:13:55,140
today is what guidance should we have

1749
01:13:55,140 --> 01:13:56,820
include in the specification

1750
01:13:56,820 --> 01:14:00,019
for those experts

1751
01:14:00,060 --> 01:14:02,580
and typically the guidance is around you

1752
01:14:02,580 --> 01:14:04,560
know what level of specification is

1753
01:14:04,560 --> 01:14:08,820
consist considered okay uh is it okay to

1754
01:14:08,820 --> 01:14:11,100
have a random web page is it okay to

1755
01:14:11,100 --> 01:14:12,900
have an academic publication that may

1756
01:14:12,900 --> 01:14:15,719
not be great for interrupt

1757
01:14:15,719 --> 01:14:18,260
Etc so

1758
01:14:22,679 --> 01:14:25,199
and this is a topic where people don't

1759
01:14:25,199 --> 01:14:27,840
get excited until it's too late

1760
01:14:27,840 --> 01:14:29,900
um

1761
01:14:30,179 --> 01:14:31,500
so I think it would be good to get some

1762
01:14:31,500 --> 01:14:32,820
input

1763
01:14:32,820 --> 01:14:35,159
and it gets too late when somebody

1764
01:14:35,159 --> 01:14:36,719
proposes that they want to add something

1765
01:14:36,719 --> 01:14:38,880
based on what we turn out not to like

1766
01:14:38,880 --> 01:14:40,199
later Aaron

1767
01:14:40,199 --> 01:14:43,140
given the history of openpgp I would say

1768
01:14:43,140 --> 01:14:45,840
that a draft is probably what we want

1769
01:14:45,840 --> 01:14:47,940
like we have

1770
01:14:47,940 --> 01:14:52,199
like wkd is a draft uh the PKS is a

1771
01:14:52,199 --> 01:14:54,480
draft like they're all the things that

1772
01:14:54,480 --> 01:14:56,159
are a bit related to open pgp and they

1773
01:14:56,159 --> 01:14:57,780
all seem to be

1774
01:14:57,780 --> 01:14:59,400
drafts

1775
01:14:59,400 --> 01:15:03,300
so you're suggesting an internet uh yeah

1776
01:15:03,300 --> 01:15:05,100
okay which can be submitted that has

1777
01:15:05,100 --> 01:15:06,719
like a personal internet draft is fine

1778
01:15:06,719 --> 01:15:08,640
or

1779
01:15:08,640 --> 01:15:10,560
that's where we are at I don't know

1780
01:15:10,560 --> 01:15:11,880
whether that's a good idea but that's

1781
01:15:11,880 --> 01:15:13,739
the status quo probably

1782
01:15:13,739 --> 01:15:15,900
all right

1783
01:15:15,900 --> 01:15:19,380
or steel transmute um I agree with what

1784
01:15:19,380 --> 01:15:21,659
he said you said about it being any web

1785
01:15:21,659 --> 01:15:25,080
page on the internet not that okay so

1786
01:15:25,080 --> 01:15:27,000
something that's so just to point out

1787
01:15:27,000 --> 01:15:28,440
that internet drafts are mutable

1788
01:15:28,440 --> 01:15:31,040
documents right

1789
01:15:31,820 --> 01:15:34,380
mutability is fine mostly about

1790
01:15:34,380 --> 01:15:37,739
availability and like posted in a in a

1791
01:15:37,739 --> 01:15:38,940
context where it's not going to go away

1792
01:15:38,940 --> 01:15:41,940
so if if we were to consider any

1793
01:15:41,940 --> 01:15:44,640
person's random web page on the internet

1794
01:15:44,640 --> 01:15:46,620
I would ask for it to be like the art

1795
01:15:46,620 --> 01:15:48,540
internet archived version of that page

1796
01:15:48,540 --> 01:15:50,460
or something durable

1797
01:15:50,460 --> 01:15:53,520
going I want to jump in in line uh there

1798
01:15:53,520 --> 01:15:56,100
are former in real IDs kind of also in

1799
01:15:56,100 --> 01:15:58,800
this room by my read specification

1800
01:15:58,800 --> 01:16:01,620
required is not really an ID because to

1801
01:16:01,620 --> 01:16:04,320
your point it's mutable yeah

1802
01:16:04,320 --> 01:16:07,400
just pointing that out

1803
01:16:07,800 --> 01:16:09,719
so especially we have a concern about

1804
01:16:09,719 --> 01:16:12,300
mutability and about

1805
01:16:12,300 --> 01:16:12,960
um

1806
01:16:12,960 --> 01:16:15,719
uh reli like reliability like being able

1807
01:16:15,719 --> 01:16:17,219
to find it that it doesn't disappear

1808
01:16:17,219 --> 01:16:19,320
right which is I guess an extreme type

1809
01:16:19,320 --> 01:16:21,719
of mutability do folks have an opinion

1810
01:16:21,719 --> 01:16:23,159
about whether we need something like

1811
01:16:23,159 --> 01:16:25,920
interoperability like could you know I

1812
01:16:25,920 --> 01:16:27,960
can publish any garbage as an internet

1813
01:16:27,960 --> 01:16:29,580
draft

1814
01:16:29,580 --> 01:16:31,560
um and it's out there and I can say oh

1815
01:16:31,560 --> 01:16:34,500
just use version zero two of my

1816
01:16:34,500 --> 01:16:36,239
um you know thing but that doesn't mean

1817
01:16:36,239 --> 01:16:37,560
anybody else has actually done it before

1818
01:16:37,560 --> 01:16:39,239
do you want to ask the designate expert

1819
01:16:39,239 --> 01:16:41,340
to ensure that there are two

1820
01:16:41,340 --> 01:16:42,600
implementations from different

1821
01:16:42,600 --> 01:16:43,860
implementers

1822
01:16:43,860 --> 01:16:47,640
no for example so just a

1823
01:16:47,640 --> 01:16:49,260
yeah not coming on the application just

1824
01:16:49,260 --> 01:16:51,000
to kind of comment on the ID draft to

1825
01:16:51,000 --> 01:16:52,380
sensitize everyone a way to write the

1826
01:16:52,380 --> 01:16:55,920
considerations uh you know IDs can

1827
01:16:55,920 --> 01:17:00,179
change you can also do uh I'm sorry you

1828
01:17:00,179 --> 01:17:01,800
could do kind of specification required

1829
01:17:01,800 --> 01:17:03,780
which could mean ietf stream it calls

1830
01:17:03,780 --> 01:17:05,820
for me ISE so that means you know you're

1831
01:17:05,820 --> 01:17:07,739
not going through the working group uh

1832
01:17:07,739 --> 01:17:09,900
and so when we say RFC required I'm

1833
01:17:09,900 --> 01:17:13,020
actually not sure which one we need uh

1834
01:17:13,020 --> 01:17:16,620
is that standards action so ietf stream

1835
01:17:16,620 --> 01:17:20,460
or is that any kind of RFC so that's

1836
01:17:20,460 --> 01:17:23,040
currently I think it's any kind of RFC

1837
01:17:23,040 --> 01:17:25,080
um it's also you know it's worth noting

1838
01:17:25,080 --> 01:17:26,520
as well that there you know there is

1839
01:17:26,520 --> 01:17:28,620
there are some specification required

1840
01:17:28,620 --> 01:17:30,780
Registries already and I don't believe a

1841
01:17:30,780 --> 01:17:35,100
designated expert was ever appointed so

1842
01:17:35,100 --> 01:17:36,900
yeah right but but it needs a

1843
01:17:36,900 --> 01:17:39,239
destination designated expert because

1844
01:17:39,239 --> 01:17:41,699
you can't have uh a specification

1845
01:17:41,699 --> 01:17:45,300
required without a GE you can have a I

1846
01:17:45,300 --> 01:17:47,640
you can have an ietf you can have one

1847
01:17:47,640 --> 01:17:48,840
I'm sorry I'm just staring at the right

1848
01:17:48,840 --> 01:17:50,400
words you can say standards action and

1849
01:17:50,400 --> 01:17:51,900
that can be without a de but that's

1850
01:17:51,900 --> 01:17:53,520
always bad so I'm just saying factually

1851
01:17:53,520 --> 01:17:56,520
we we have in the in the existing rfcs

1852
01:17:56,520 --> 01:17:58,500
that are quite old yeah specification

1853
01:17:58,500 --> 01:18:01,340
required registries

1854
01:18:08,820 --> 01:18:10,320
so I think what's very clear is people

1855
01:18:10,320 --> 01:18:12,840
want the guidance and again bear in mind

1856
01:18:12,840 --> 01:18:14,159
that there's a there's an expert here

1857
01:18:14,159 --> 01:18:16,679
who's an expert so the guidance doesn't

1858
01:18:16,679 --> 01:18:18,179
have to be you know something that is

1859
01:18:18,179 --> 01:18:19,980
machine readable

1860
01:18:19,980 --> 01:18:22,080
um we want things that are open we want

1861
01:18:22,080 --> 01:18:23,940
things that are stable

1862
01:18:23,940 --> 01:18:27,480
we want things that are likely to Foster

1863
01:18:27,480 --> 01:18:29,880
interoperability so for example some

1864
01:18:29,880 --> 01:18:32,340
academic papers might be great but a lot

1865
01:18:32,340 --> 01:18:33,360
of them won't actually have enough

1866
01:18:33,360 --> 01:18:36,420
information to get interoperability

1867
01:18:36,420 --> 01:18:38,640
and that's we can give the guidance to

1868
01:18:38,640 --> 01:18:40,560
an expert in in you know it doesn't have

1869
01:18:40,560 --> 01:18:42,420
to be very very precise it just has to

1870
01:18:42,420 --> 01:18:43,800
tell them what to think about

1871
01:18:43,800 --> 01:18:46,020
and then we depend on the expert to make

1872
01:18:46,020 --> 01:18:48,560
a good decision

1873
01:18:49,260 --> 01:18:52,199
so those are things open stable

1874
01:18:52,199 --> 01:18:56,239
and likely to Foster interoperability

1875
01:18:56,239 --> 01:18:58,560
thank you yeah I mean the thing I would

1876
01:18:58,560 --> 01:18:59,820
kind of caution is when we think about

1877
01:18:59,820 --> 01:19:01,500
what we want imagine the working group

1878
01:19:01,500 --> 01:19:03,600
is God yes who are you going to trust

1879
01:19:03,600 --> 01:19:04,800
with the code points because that's

1880
01:19:04,800 --> 01:19:05,940
pretty much what's going to happen it's

1881
01:19:05,940 --> 01:19:07,320
going to be the de making a

1882
01:19:07,320 --> 01:19:11,580
recommendation to the isg uh plus that D

1883
01:19:11,580 --> 01:19:13,739
may be Consulting at work I'm sorry a

1884
01:19:13,739 --> 01:19:15,840
mailing list but it's going to be you

1885
01:19:15,840 --> 01:19:17,100
know what what do you want that group of

1886
01:19:17,100 --> 01:19:19,980
individuals to tell the isg yeah

1887
01:19:19,980 --> 01:19:21,900
I think we want something that is

1888
01:19:21,900 --> 01:19:24,719
immutable to the level like a draft is

1889
01:19:24,719 --> 01:19:27,000
mutable but if you specify a specific

1890
01:19:27,000 --> 01:19:28,980
version it's gonna stay there and be

1891
01:19:28,980 --> 01:19:32,000
immutable so

1892
01:19:33,860 --> 01:19:37,199
I don't know if Ayanna will put a

1893
01:19:37,199 --> 01:19:39,780
specific version number of a draft in as

1894
01:19:39,780 --> 01:19:42,960
the reference for a cold point

1895
01:19:42,960 --> 01:19:45,840
it is I don't know

1896
01:19:45,840 --> 01:19:47,659
sorry Paul address

1897
01:19:47,659 --> 01:19:50,580
there's likely going to be a lot more

1898
01:19:50,580 --> 01:19:52,380
specification requires that are much

1899
01:19:52,380 --> 01:19:54,120
weaker than a draft so I'm not sure the

1900
01:19:54,120 --> 01:19:55,320
draft discussion is really that

1901
01:19:55,320 --> 01:19:57,000
interesting because they can just put it

1902
01:19:57,000 --> 01:19:59,520
on the website and not call it the draft

1903
01:19:59,520 --> 01:20:01,800
um you should really think about I I

1904
01:20:01,800 --> 01:20:03,840
don't think adding features that might

1905
01:20:03,840 --> 01:20:06,360
not get deployed widely is a problem as

1906
01:20:06,360 --> 01:20:07,860
long as the registry is big enough or do

1907
01:20:07,860 --> 01:20:09,659
we have any Registries that are so small

1908
01:20:09,659 --> 01:20:12,239
that we want to avoid wasting numbers on

1909
01:20:12,239 --> 01:20:14,040
them and if you don't have that problem

1910
01:20:14,040 --> 01:20:15,780
and I think specific specification

1911
01:20:15,780 --> 01:20:17,880
required is most suitable for most of

1912
01:20:17,880 --> 01:20:18,659
them

1913
01:20:18,659 --> 01:20:20,940
yeah

1914
01:20:20,940 --> 01:20:22,679
okay so I think so I think it sounds

1915
01:20:22,679 --> 01:20:25,199
like the the guidance essentially is

1916
01:20:25,199 --> 01:20:28,460
open stable and

1917
01:20:28,620 --> 01:20:30,780
likely to Foster interoperability and we

1918
01:20:30,780 --> 01:20:32,460
need to figure out some words to say

1919
01:20:32,460 --> 01:20:33,840
that and put it into the ionic

1920
01:20:33,840 --> 01:20:35,640
considerations

1921
01:20:35,640 --> 01:20:37,760
um

1922
01:20:38,040 --> 01:20:40,260
who wants to take an action to craft

1923
01:20:40,260 --> 01:20:42,780
that into words I get tkg you and I

1924
01:20:42,780 --> 01:20:44,460
should probably do that right and we

1925
01:20:44,460 --> 01:20:46,500
should we'd hunt around for other rfcs

1926
01:20:46,500 --> 01:20:47,880
that have such guidance to try to find a

1927
01:20:47,880 --> 01:20:50,760
good example to to base on

1928
01:20:50,760 --> 01:20:52,620
sorry

1929
01:20:52,620 --> 01:20:54,960
but just because I'm looking at the the

1930
01:20:54,960 --> 01:20:57,000
Ayanna cozy registry right now there's

1931
01:20:57,000 --> 01:20:59,159
several entries that point to specific

1932
01:20:59,159 --> 01:21:01,679
draft numbers just for reference okay I

1933
01:21:01,679 --> 01:21:03,900
suggest looking at the Ayanna cozy and

1934
01:21:03,900 --> 01:21:08,299
cozy Registries for for guidance sure

1935
01:21:14,580 --> 01:21:16,500
okay so I think the action there is on

1936
01:21:16,500 --> 01:21:17,880
the chairs to come up with a bit of text

1937
01:21:17,880 --> 01:21:20,460
to and I think the the feeling of the

1938
01:21:20,460 --> 01:21:22,020
working group is is clear we'll see if

1939
01:21:22,020 --> 01:21:24,780
the text uh generates objections or not

1940
01:21:24,780 --> 01:21:26,520
okay

1941
01:21:26,520 --> 01:21:28,199
yep

1942
01:21:28,199 --> 01:21:30,739
cool

1943
01:21:31,080 --> 01:21:35,059
and your last slide was just a question

1944
01:21:35,760 --> 01:21:36,900
yeah

1945
01:21:36,900 --> 01:21:38,640
um okay Aaron I recognize that we have

1946
01:21:38,640 --> 01:21:40,980
10 minutes left in the in the

1947
01:21:40,980 --> 01:21:42,900
um slot here and we had offered a

1948
01:21:42,900 --> 01:21:44,280
potential chance to talk about post

1949
01:21:44,280 --> 01:21:46,140
Quantum work we already did a bunch of

1950
01:21:46,140 --> 01:21:48,300
talking about post Quantum uh in the

1951
01:21:48,300 --> 01:21:51,960
extended uh in the self discussion

1952
01:21:51,960 --> 01:21:52,620
um

1953
01:21:52,620 --> 01:21:54,900
do folks have any other

1954
01:21:54,900 --> 01:21:57,659
uh issues that were raised uh during

1955
01:21:57,659 --> 01:21:59,280
working group last call that you want to

1956
01:21:59,280 --> 01:22:00,960
discuss now or do you want to try to

1957
01:22:00,960 --> 01:22:02,820
give Aaron you know five to ten minutes

1958
01:22:02,820 --> 01:22:04,860
to talk about the post Quantum stuff I

1959
01:22:04,860 --> 01:22:08,659
don't know if that's a fair slot for him

1960
01:22:10,620 --> 01:22:13,500
I don't see anybody in queue okay so so

1961
01:22:13,500 --> 01:22:15,120
I guess we're we've got a few people

1962
01:22:15,120 --> 01:22:17,280
agreed to do reviews additional reviews

1963
01:22:17,280 --> 01:22:20,040
we've got some actions to change

1964
01:22:20,040 --> 01:22:21,420
that means we're extending the working

1965
01:22:21,420 --> 01:22:23,640
group last call essentially

1966
01:22:23,640 --> 01:22:25,980
um by some number of weeks dkg and I

1967
01:22:25,980 --> 01:22:28,199
will discuss off lists and uh

1968
01:22:28,199 --> 01:22:30,300
declare another date for it and

1969
01:22:30,300 --> 01:22:31,739
hopefully that will encourage people to

1970
01:22:31,739 --> 01:22:33,600
do those reviews by that date so that's

1971
01:22:33,600 --> 01:22:34,860
okay

1972
01:22:34,860 --> 01:22:37,679
um should I do the slide sharing locally

1973
01:22:37,679 --> 01:22:39,780
here at tkg it might be easier

1974
01:22:39,780 --> 01:22:42,380
sure

1975
01:22:47,699 --> 01:22:50,000
yes

1976
01:22:50,480 --> 01:22:53,100
so I think you need to stop sharing or I

1977
01:22:53,100 --> 01:22:55,940
need to take it away from you

1978
01:22:56,400 --> 01:22:57,920
thank you

1979
01:22:57,920 --> 01:23:01,460
reloaded slides

1980
01:23:13,020 --> 01:23:14,580
there we go so just tell me when to move

1981
01:23:14,580 --> 01:23:15,960
along

1982
01:23:15,960 --> 01:23:18,300
yeah and and we're we're at seven

1983
01:23:18,300 --> 01:23:19,739
minutes so you might want to go faster

1984
01:23:19,739 --> 01:23:22,679
than you expected definitely so

1985
01:23:22,679 --> 01:23:25,440
uh we're gonna present a big

1986
01:23:25,440 --> 01:23:28,020
what has been done so far and a few

1987
01:23:28,020 --> 01:23:30,060
questions for for the working group

1988
01:23:30,060 --> 01:23:31,739
the people in Boulder the one actually

1989
01:23:31,739 --> 01:23:34,320
working on the draft right now

1990
01:23:34,320 --> 01:23:35,640
it's like

1991
01:23:35,640 --> 01:23:37,380
we'll start with the dicing design

1992
01:23:37,380 --> 01:23:39,780
criteria next slide please

1993
01:23:39,780 --> 01:23:41,580
yeah

1994
01:23:41,580 --> 01:23:44,159
they're a bit redundant

1995
01:23:44,159 --> 01:23:46,679
so the idea the main ideas are you to

1996
01:23:46,679 --> 01:23:49,679
use composite multi algorithm for kyber

1997
01:23:49,679 --> 01:23:51,780
and the lithium and Standalone Sphinx

1998
01:23:51,780 --> 01:23:54,840
plus to offer backwards compatibility to

1999
01:23:54,840 --> 01:23:57,540
have two certificate to recommend a user

2000
01:23:57,540 --> 01:23:59,580
to have two certificates one V4 Legacy

2001
01:23:59,580 --> 01:24:03,600
with uh basically pre-quantum and and

2002
01:24:03,600 --> 01:24:05,640
Legacy uh input for legacy

2003
01:24:05,640 --> 01:24:08,219
implementation and 1v5 with both Quantum

2004
01:24:08,219 --> 01:24:10,880
or V6 at this point

2005
01:24:10,880 --> 01:24:14,159
and to ensure compatibility on the

2006
01:24:14,159 --> 01:24:16,260
protocol level of adding multiple

2007
01:24:16,260 --> 01:24:19,260
signatures so you sign with both uh with

2008
01:24:19,260 --> 01:24:21,420
both keys uh

2009
01:24:21,420 --> 01:24:24,600
we use ECC so we would since they are

2010
01:24:24,600 --> 01:24:26,940
new algorithms we would basically fix

2011
01:24:26,940 --> 01:24:29,659
the existing inconsistencies use actual

2012
01:24:29,659 --> 01:24:34,800
i65519 x448 as they are as they are

2013
01:24:34,800 --> 01:24:36,600
standardized

2014
01:24:36,600 --> 01:24:39,620
next slide please

2015
01:24:40,020 --> 01:24:42,239
so these are the algorithms we thought

2016
01:24:42,239 --> 01:24:45,179
of and to maintain consistency with the

2017
01:24:45,179 --> 01:24:48,900
crypto refresh 25509 it must for for it

2018
01:24:48,900 --> 01:24:51,659
and shoot and everything else in May

2019
01:24:51,659 --> 01:24:54,060
things we off we've thought about

2020
01:24:54,060 --> 01:24:56,580
offerings both Chateau and shake the

2021
01:24:56,580 --> 01:24:59,280
reason is Chateau is twice as fast more

2022
01:24:59,280 --> 01:25:02,520
than twice as fast as shake and it's not

2023
01:25:02,520 --> 01:25:04,199
even not it's not really a security

2024
01:25:04,199 --> 01:25:07,739
company a security trade-off seems like

2025
01:25:07,739 --> 01:25:11,580
but shake for future compatibility with

2026
01:25:11,580 --> 01:25:13,560
what comes next

2027
01:25:13,560 --> 01:25:16,280
slide

2028
01:25:17,100 --> 01:25:20,460
sphinxplans will have several parameters

2029
01:25:20,460 --> 01:25:22,800
because

2030
01:25:22,800 --> 01:25:25,679
some users might want to have smaller

2031
01:25:25,679 --> 01:25:27,719
signatures but very slow so this means

2032
01:25:27,719 --> 01:25:31,260
like 256 s that takes even seconds to be

2033
01:25:31,260 --> 01:25:32,600
issued

2034
01:25:32,600 --> 01:25:35,040
but all these signatures are very fast

2035
01:25:35,040 --> 01:25:37,140
to be verified so on the verification

2036
01:25:37,140 --> 01:25:38,300
end

2037
01:25:38,300 --> 01:25:40,620
there should be no issue so it's just a

2038
01:25:40,620 --> 01:25:43,380
signer who decides how slow they want to

2039
01:25:43,380 --> 01:25:45,000
make their work

2040
01:25:45,000 --> 01:25:46,320
next

2041
01:25:46,320 --> 01:25:48,320
um

2042
01:25:48,659 --> 01:25:50,280
so basically

2043
01:25:50,280 --> 01:25:53,760
the basic design for the cam is to use

2044
01:25:53,760 --> 01:25:58,260
ecdh as like a prime curve or x2519 or

2045
01:25:58,260 --> 01:26:02,520
x448 and omit the key derivation step

2046
01:26:02,520 --> 01:26:04,860
and just keep the derive everything so

2047
01:26:04,860 --> 01:26:06,440
the key encryption key is derived from

2048
01:26:06,440 --> 01:26:10,560
ecdh with kyber and with some fixed

2049
01:26:10,560 --> 01:26:12,800
information is a simple chatri

2050
01:26:12,800 --> 01:26:15,120
concatenated hash construction because

2051
01:26:15,120 --> 01:26:17,280
of the sponge construction of shattri we

2052
01:26:17,280 --> 01:26:21,179
can we can do that next slide

2053
01:26:21,179 --> 01:26:23,040
so these are the topic that we already

2054
01:26:23,040 --> 01:26:24,480
talked about

2055
01:26:24,480 --> 01:26:25,340
um

2056
01:26:25,340 --> 01:26:29,219
so is basically the fact that they are

2057
01:26:29,219 --> 01:26:32,100
not for like they expect both the the

2058
01:26:32,100 --> 01:26:34,080
whole data the whole message to be fed

2059
01:26:34,080 --> 01:26:36,540
into the algorithm we cannot really do

2060
01:26:36,540 --> 01:26:39,360
that because we do streaming so we we

2061
01:26:39,360 --> 01:26:40,980
can't expect we don't have the

2062
01:26:40,980 --> 01:26:42,300
information about the signature at the

2063
01:26:42,300 --> 01:26:45,179
beginning uh unless we put it into the

2064
01:26:45,179 --> 01:26:47,580
one pass signature but it will be a big

2065
01:26:47,580 --> 01:26:50,520
change on the protocol level and this is

2066
01:26:50,520 --> 01:26:52,460
as much as we're doing right now with

2067
01:26:52,460 --> 01:26:54,719
EDSA that also expects the whole message

2068
01:26:54,719 --> 01:26:58,620
as input so we basically are asking to

2069
01:26:58,620 --> 01:27:01,260
extend the hash size as we said before

2070
01:27:01,260 --> 01:27:04,500
even though as Scott pointed out is a

2071
01:27:04,500 --> 01:27:06,239
good point as it is an online attack

2072
01:27:06,239 --> 01:27:08,820
still in 16 octets are pretty large

2073
01:27:08,820 --> 01:27:11,040
number so it's just that there will be

2074
01:27:11,040 --> 01:27:12,420
an inconsistency and that would not

2075
01:27:12,420 --> 01:27:14,159
provide the whole security of things

2076
01:27:14,159 --> 01:27:15,420
Plus

2077
01:27:15,420 --> 01:27:17,699
uh deleting propens the public key but

2078
01:27:17,699 --> 01:27:19,620
that is still fine in our opinion

2079
01:27:19,620 --> 01:27:23,400
because it just uh ensures that like the

2080
01:27:23,400 --> 01:27:27,000
the that will still be there just after

2081
01:27:27,000 --> 01:27:28,639
the hash

2082
01:27:28,639 --> 01:27:32,940
and yeah next slide and basically these

2083
01:27:32,940 --> 01:27:34,260
are the differences

2084
01:27:34,260 --> 01:27:36,300
um the fact that we want to in the

2085
01:27:36,300 --> 01:27:40,980
future bind the hash algorithm to the

2086
01:27:40,980 --> 01:27:43,739
um embedded hash algorithm into the post

2087
01:27:43,739 --> 01:27:46,860
Quantum algorithm so basically say you

2088
01:27:46,860 --> 01:27:49,679
cannot use sha 2 to then create a

2089
01:27:49,679 --> 01:27:51,300
signature that is the lithium that uses

2090
01:27:51,300 --> 01:27:52,980
internally

2091
01:27:52,980 --> 01:27:57,199
as much as the sold size

2092
01:27:58,440 --> 01:28:01,139
slide yeah and also this is a big

2093
01:28:01,139 --> 01:28:04,380
problem we have nowadays especially for

2094
01:28:04,380 --> 01:28:06,840
um my messages clients tend to parse

2095
01:28:06,840 --> 01:28:08,340
just the first signature if it validates

2096
01:28:08,340 --> 01:28:10,080
good if it doesn't well it's not

2097
01:28:10,080 --> 01:28:13,080
validated and if we want to put multiple

2098
01:28:13,080 --> 01:28:15,000
signatures we need to ensure that there

2099
01:28:15,000 --> 01:28:17,520
is compatibility for this and also in

2100
01:28:17,520 --> 01:28:19,320
open pgp messages so in the embedded

2101
01:28:19,320 --> 01:28:21,600
signatures we need additional testing in

2102
01:28:21,600 --> 01:28:23,159
internal purposely Suite that is not

2103
01:28:23,159 --> 01:28:25,199
done as of now but this is an action

2104
01:28:25,199 --> 01:28:29,040
item we have on our side next slide

2105
01:28:29,040 --> 01:28:32,340
so next steps we would like to wait for

2106
01:28:32,340 --> 01:28:34,199
the publication of the Khyber

2107
01:28:34,199 --> 01:28:36,120
intellectual property from nist that

2108
01:28:36,120 --> 01:28:38,699
they told us yesterday it would be that

2109
01:28:38,699 --> 01:28:43,380
tomorrow so sorry by this month so uh

2110
01:28:43,380 --> 01:28:46,100
um I I will very warmly looking for that

2111
01:28:46,100 --> 01:28:48,480
we also would like to publish the draft

2112
01:28:48,480 --> 01:28:50,219
we have right now we wanted to do it by

2113
01:28:50,219 --> 01:28:53,060
now but we still some parts are missing

2114
01:28:53,060 --> 01:28:55,860
and we do have an experimental goal

2115
01:28:55,860 --> 01:28:58,380
implementation at proton and MTG will

2116
01:28:58,380 --> 01:29:01,980
work soon on to uh open lead decrypt and

2117
01:29:01,980 --> 01:29:04,560
rmp implementation and also improve the

2118
01:29:04,560 --> 01:29:06,420
testing Suite to include that missing

2119
01:29:06,420 --> 01:29:08,780
tests

2120
01:29:08,880 --> 01:29:12,659
um next slide so in the last minute uh I

2121
01:29:12,659 --> 01:29:14,520
would ask if anyone has comments

2122
01:29:14,520 --> 01:29:18,060
questions please come to uh sorry these

2123
01:29:18,060 --> 01:29:21,000
are the questions we have for you

2124
01:29:21,000 --> 01:29:24,360
and they are the algorithm selection if

2125
01:29:24,360 --> 01:29:26,520
you like it uh whether you're okay with

2126
01:29:26,520 --> 01:29:28,440
binding a signature size to the hash ID

2127
01:29:28,440 --> 01:29:30,780
that were discussed and whether you

2128
01:29:30,780 --> 01:29:33,060
would be okay with also the further

2129
01:29:33,060 --> 01:29:34,500
change of the hash function to the

2130
01:29:34,500 --> 01:29:36,540
algorithm ID now I don't think we have

2131
01:29:36,540 --> 01:29:39,900
times for question but uh we are having

2132
01:29:39,900 --> 01:29:43,860
a meeting in next slide in 20 minutes so

2133
01:29:43,860 --> 01:29:47,639
at mezzanine 12 where we will see the

2134
01:29:47,639 --> 01:29:50,580
draft for real and we will discuss we

2135
01:29:50,580 --> 01:29:53,280
can discuss it all together to see since

2136
01:29:53,280 --> 01:29:55,199
this is not charted work we did not want

2137
01:29:55,199 --> 01:29:57,060
to take time from this meeting for us

2138
01:29:57,060 --> 01:30:00,320
but if someone has a quick

2139
01:30:00,320 --> 01:30:02,540
before you go down

2140
01:30:02,540 --> 01:30:06,239
so I'm going to suggest with we'll try

2141
01:30:06,239 --> 01:30:07,560
and finish the working group Last Call

2142
01:30:07,560 --> 01:30:09,120
on the crypto refresh

2143
01:30:09,120 --> 01:30:10,800
get that to where we hit the publication

2144
01:30:10,800 --> 01:30:12,420
request button

2145
01:30:12,420 --> 01:30:14,460
and then have an interim meeting where

2146
01:30:14,460 --> 01:30:17,600
we can discuss re-chartering

2147
01:30:18,840 --> 01:30:20,820
we people promise some reviews within

2148
01:30:20,820 --> 01:30:23,159
weeks so and then Paul has been quite

2149
01:30:23,159 --> 01:30:24,960
quick as editor so I would hope in a

2150
01:30:24,960 --> 01:30:28,040
month for six weeks something like that

2151
01:30:29,100 --> 01:30:32,699
it's very great yeah yeah okay

2152
01:30:32,699 --> 01:30:34,860
so the queen go ahead and we're at times

2153
01:30:34,860 --> 01:30:37,080
I'll be very quick just just uh in case

2154
01:30:37,080 --> 01:30:38,760
I'm Queen deck and let's just in case

2155
01:30:38,760 --> 01:30:41,040
you didn't attend the cfrg meeting on

2156
01:30:41,040 --> 01:30:43,800
Monday uh just let you know um I

2157
01:30:43,800 --> 01:30:46,440
strongly expected the uh

2158
01:30:46,440 --> 01:30:49,199
the detail of our agreements with the

2159
01:30:49,199 --> 01:30:53,040
two patent holders will be released uh

2160
01:30:53,040 --> 01:30:55,820
this month okay

2161
01:30:55,860 --> 01:30:58,020
okay great thanks and thanks Aaron so

2162
01:30:58,020 --> 01:30:59,940
you didn't have too much time but I mean

2163
01:30:59,940 --> 01:31:02,699
things yeah so if you're interested go

2164
01:31:02,699 --> 01:31:06,019
to that side meeting and

2165
01:31:07,440 --> 01:31:09,360
this won't be this won't become a

2166
01:31:09,360 --> 01:31:10,679
chartered item until there's an interim

2167
01:31:10,679 --> 01:31:12,600
meeting anyway so so you won't totally

2168
01:31:12,600 --> 01:31:14,880
miss out on anything so okay thank you

2169
01:31:14,880 --> 01:31:16,020
all

2170
01:31:16,020 --> 01:31:17,880
um let's try and get this crippery first

2171
01:31:17,880 --> 01:31:19,380
thing done at the door and then we can

2172
01:31:19,380 --> 01:31:21,480
move on to these topics

2173
01:31:21,480 --> 01:31:23,718
foreign

2174
01:31:54,420 --> 01:31:56,719
foreign

2175
01:32:08,400 --> 01:32:11,540
hope to see you next time

2176
01:32:13,260 --> 01:32:16,760
thanks yeah sorry for the destruction

2177
01:32:19,340 --> 01:32:23,719
you at your own time yes

