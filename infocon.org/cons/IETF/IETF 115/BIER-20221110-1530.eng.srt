1
00:00:04,860 --> 00:00:08,519
I got the cue I got the cue you guys

2
00:00:08,519 --> 00:00:10,920
hear me

3
00:00:10,920 --> 00:00:13,980
yeah with one hand so you have to chat

4
00:00:13,980 --> 00:00:15,540
then you have to queue

5
00:00:15,540 --> 00:00:17,940
no I've I've got the questions for the

6
00:00:17,940 --> 00:00:20,279
queue that can do that the chat I can't

7
00:00:20,279 --> 00:00:22,680
type I got one hand

8
00:00:22,680 --> 00:00:24,800
um

9
00:00:26,340 --> 00:00:28,980
none I haven't I'm no opiates today I'm

10
00:00:28,980 --> 00:00:31,560
going I'm going cold turkey

11
00:00:31,560 --> 00:00:37,260
yeah really okay it's two days is enough

12
00:00:37,260 --> 00:00:39,239
um

13
00:00:39,239 --> 00:00:40,920
yeah you got to put your face to the mic

14
00:00:40,920 --> 00:00:42,059
I can't hear you when you're that far

15
00:00:42,059 --> 00:00:44,460
away we'll check regularly with you

16
00:00:44,460 --> 00:00:46,020
whether you're still conscious or you

17
00:00:46,020 --> 00:00:47,820
just faded out man fell off the chair

18
00:00:47,820 --> 00:00:50,399
okay yeah I I need a I need a button a

19
00:00:50,399 --> 00:00:52,379
release button if I pass out and drop

20
00:00:52,379 --> 00:00:54,120
the button you'll know

21
00:00:54,120 --> 00:00:55,440
um there's just questions already about

22
00:00:55,440 --> 00:00:57,840
remote uh control of the slides I mean

23
00:00:57,840 --> 00:01:00,480
the PDFs are up there I know there's two

24
00:01:00,480 --> 00:01:02,280
different buttons on allowing either

25
00:01:02,280 --> 00:01:04,500
they control it or you control it

26
00:01:04,500 --> 00:01:07,439
uh it's not obvious which is which but

27
00:01:07,439 --> 00:01:10,020
either way they don't do remote slide

28
00:01:10,020 --> 00:01:12,119
and screen sharing you've got the slides

29
00:01:12,119 --> 00:01:13,860
they either hit the button or you hit

30
00:01:13,860 --> 00:01:17,600
the button for them correct

31
00:01:17,820 --> 00:01:19,080
do you know which button to hit Tony

32
00:01:19,080 --> 00:01:21,540
we'll see what the first pretzel the

33
00:01:21,540 --> 00:01:24,720
apis the tooling seems to have changed

34
00:01:24,720 --> 00:01:27,119
so we figure out as we go man yeah it

35
00:01:27,119 --> 00:01:28,439
changes every time

36
00:01:28,439 --> 00:01:31,520
I believe in you Tony

37
00:01:47,820 --> 00:01:51,979
you have to dial in this chair as well

38
00:01:57,740 --> 00:02:02,000
no that's just a cue okay okay

39
00:02:17,300 --> 00:02:21,260
for me

40
00:02:36,720 --> 00:02:41,480
all right now I have this thing

41
00:02:54,180 --> 00:02:56,599
foreign

42
00:03:06,800 --> 00:03:11,239
okay folks we're about to start

43
00:03:12,599 --> 00:03:15,540
meeting so you win you're trying to

44
00:03:15,540 --> 00:03:17,519
begin

45
00:03:17,519 --> 00:03:20,159
yeah normal stuff

46
00:03:20,159 --> 00:03:23,179
if you're quite funny

47
00:03:28,739 --> 00:03:31,080
so what's this new document API I

48
00:03:31,080 --> 00:03:32,459
thought no I just click on the press

49
00:03:32,459 --> 00:03:34,379
that shows up but this looked like that

50
00:03:34,379 --> 00:03:36,980
at all

51
00:03:41,540 --> 00:03:44,099
like if you list the materials you can

52
00:03:44,099 --> 00:03:46,560
just select them from there

53
00:03:46,560 --> 00:03:49,140
yeah that's what I did meeting materials

54
00:03:49,140 --> 00:03:52,920
right yep all right so now I click on

55
00:03:52,920 --> 00:03:54,360
the stuff

56
00:03:54,360 --> 00:03:57,360
the staff tries to download it and then

57
00:03:57,360 --> 00:03:58,799
what do I do from here

58
00:03:58,799 --> 00:04:01,700
I can't present it

59
00:04:01,700 --> 00:04:04,200
uh show offense

60
00:04:04,200 --> 00:04:07,019
sure you can

61
00:04:07,019 --> 00:04:09,120
that's what I like

62
00:04:09,120 --> 00:04:12,379
it downloads it

63
00:04:13,019 --> 00:04:15,060


64
00:04:15,060 --> 00:04:18,660
so now I do share screen or what

65
00:04:18,660 --> 00:04:20,639
new screen's been shared yeah there you

66
00:04:20,639 --> 00:04:22,500
go

67
00:04:22,500 --> 00:04:24,900
except I somehow have to get the

68
00:04:24,900 --> 00:04:27,360
material I thought it was supposed to do

69
00:04:27,360 --> 00:04:30,240
all this stuff automatically you have to

70
00:04:30,240 --> 00:04:33,380
share it and you have to accept it

71
00:04:36,479 --> 00:04:39,120
then you could pass the control by going

72
00:04:39,120 --> 00:04:43,740
the little revoke screen Icon by you

73
00:04:43,740 --> 00:04:45,720
put your mouse over that and it shows

74
00:04:45,720 --> 00:04:47,759
you where you can have you either slide

75
00:04:47,759 --> 00:04:49,979
control or you pass the slide control to

76
00:04:49,979 --> 00:04:52,159
them

77
00:04:55,199 --> 00:04:56,880
no the only thing that allows students

78
00:04:56,880 --> 00:05:00,560
to share a screen that's about it

79
00:05:01,259 --> 00:05:03,540
oh man well all these improvements

80
00:05:03,540 --> 00:05:07,280
improvements every time no

81
00:05:09,479 --> 00:05:11,699
yeah so when I do presentation view how

82
00:05:11,699 --> 00:05:15,320
the hell do I put material in here

83
00:05:17,040 --> 00:05:20,340
so what's the tooling now

84
00:05:20,340 --> 00:05:22,740
well you had the presentation up yet

85
00:05:22,740 --> 00:05:25,460
there you go

86
00:05:31,080 --> 00:05:34,380
okay so welcome starting beer session we

87
00:05:34,380 --> 00:05:35,780
have uh

88
00:05:35,780 --> 00:05:38,820
semi-conscious chair

89
00:05:38,820 --> 00:05:42,600
online so Greg will be managing the

90
00:05:42,600 --> 00:05:44,039
queue

91
00:05:44,039 --> 00:05:49,039
we have a projectile song that came back

92
00:05:50,610 --> 00:05:52,020
[Applause]

93
00:05:52,020 --> 00:05:55,919
we have one one of the fathers came back

94
00:05:55,919 --> 00:05:57,840
um a pretty good agenda today a couple

95
00:05:57,840 --> 00:05:59,639
of interesting things

96
00:05:59,639 --> 00:06:01,500
um

97
00:06:01,500 --> 00:06:03,539
yeah let's start

98
00:06:03,539 --> 00:06:04,699
um

99
00:06:04,699 --> 00:06:07,139
can I add a note I want to add a note

100
00:06:07,139 --> 00:06:09,780
about the queue uh the queue is a

101
00:06:09,780 --> 00:06:11,580
composite of people online and in the

102
00:06:11,580 --> 00:06:13,259
room and to manage the queue properly

103
00:06:13,259 --> 00:06:15,960
everyone should be using the tool so

104
00:06:15,960 --> 00:06:17,699
even if you're in the room get on meet

105
00:06:17,699 --> 00:06:19,919
Echo and as you come into the mic hit

106
00:06:19,919 --> 00:06:21,660
the queue button so we can manage the

107
00:06:21,660 --> 00:06:24,000
queue order based on who hit it first

108
00:06:24,000 --> 00:06:26,280
both in the room and online

109
00:06:26,280 --> 00:06:28,860
right so everybody has to basically dial

110
00:06:28,860 --> 00:06:31,259
in and mute their laptop and you know

111
00:06:31,259 --> 00:06:33,120
jump on correct otherwise you'll be

112
00:06:33,120 --> 00:06:34,500
standing by the mic

113
00:06:34,500 --> 00:06:39,440
new procedures all right note taker

114
00:06:42,539 --> 00:06:45,419
one after another don't fall over you

115
00:06:45,419 --> 00:06:47,039
know

116
00:06:47,039 --> 00:06:48,740
yeah

117
00:06:48,740 --> 00:06:51,960
it's been promoted to note taking

118
00:06:51,960 --> 00:06:53,819
hey Sandy

119
00:06:53,819 --> 00:06:57,979
okay it's better than me

120
00:06:57,979 --> 00:07:00,060
thank you

121
00:07:00,060 --> 00:07:02,759
much much simpler here in the room there

122
00:07:02,759 --> 00:07:04,919
is a note-taking tool right when you did

123
00:07:04,919 --> 00:07:07,698
you manage to Darling

124
00:07:07,860 --> 00:07:09,180
uh

125
00:07:09,180 --> 00:07:11,880
that your eyes doesn't have Wi-Fi so

126
00:07:11,880 --> 00:07:13,199
that sucks

127
00:07:13,199 --> 00:07:15,000
um

128
00:07:15,000 --> 00:07:17,100
so we only have one laptop with material

129
00:07:17,100 --> 00:07:19,919
the other one has only the Q

130
00:07:19,919 --> 00:07:22,440
all right how do we not taking now in

131
00:07:22,440 --> 00:07:24,780
this degraded environment

132
00:07:24,780 --> 00:07:26,599
um

133
00:07:26,599 --> 00:07:29,880
old-fashioned sucks

134
00:07:29,880 --> 00:07:32,039
give it another shot what you get in

135
00:07:32,039 --> 00:07:35,460
that you know yeah he could type it

136
00:07:35,460 --> 00:07:37,259
remote but he won't have the notes from

137
00:07:37,259 --> 00:07:39,240
the people online to read if he can't

138
00:07:39,240 --> 00:07:41,580
get into meet Echo right because people

139
00:07:41,580 --> 00:07:43,620
like to run with us while we're taking

140
00:07:43,620 --> 00:07:46,580
notes uh

141
00:08:04,020 --> 00:08:06,660
all right

142
00:08:06,660 --> 00:08:09,360
there's one which is completely open

143
00:08:09,360 --> 00:08:12,539
yeah Legacy nobody does Legacy except me

144
00:08:12,539 --> 00:08:15,120
and the eyes so that's why it works all

145
00:08:15,120 --> 00:08:16,919
right so let's see what the ice gets the

146
00:08:16,919 --> 00:08:18,240
note taking

147
00:08:18,240 --> 00:08:20,940
all right so let's start uh so I'll be

148
00:08:20,940 --> 00:08:22,560
flipping those things and then we'll see

149
00:08:22,560 --> 00:08:26,220
how the stuff works uh new tooling

150
00:08:26,220 --> 00:08:28,759
fine the usual note well

151
00:08:28,759 --> 00:08:33,059
uh the GJ plus everybody please wear a

152
00:08:33,059 --> 00:08:34,440
mask

153
00:08:34,440 --> 00:08:36,659
you know it's a pretty compliant except

154
00:08:36,659 --> 00:08:39,299
some people snacking snacking is limited

155
00:08:39,299 --> 00:08:42,439
to 60 seconds okay

156
00:08:43,559 --> 00:08:45,600
and if it's not it will be next to it if

157
00:08:45,600 --> 00:08:47,040
I'm sure

158
00:08:47,040 --> 00:08:49,740
all right so everybody please signs in

159
00:08:49,740 --> 00:08:53,760
tooling changed again hoorah okay and

160
00:08:53,760 --> 00:08:57,060
please mute uh your microphone because

161
00:08:57,060 --> 00:08:59,399
otherwise you know we'll have uh looking

162
00:08:59,399 --> 00:09:01,560
effects

163
00:09:01,560 --> 00:09:05,160
uh you know the agenda agenda is the

164
00:09:05,160 --> 00:09:08,040
meat Echo uh I don't even know whether

165
00:09:08,040 --> 00:09:10,620
we're running meet Echo anymore

166
00:09:10,620 --> 00:09:12,440
foreign

167
00:09:12,440 --> 00:09:15,959
willing to do the meat Echo stuff

168
00:09:15,959 --> 00:09:20,040
I thought so no so we have no taking I

169
00:09:20,040 --> 00:09:21,959
will have uh the recording all right

170
00:09:21,959 --> 00:09:23,700
anyone in the notes should be in media

171
00:09:23,700 --> 00:09:26,160
Echo and composite voice voices at the

172
00:09:26,160 --> 00:09:29,040
mic as well as people are typing online

173
00:09:29,040 --> 00:09:31,080
so if we do meet Echo everyone's got

174
00:09:31,080 --> 00:09:34,560
anyone doing notes has got to be on it

175
00:09:34,560 --> 00:09:37,019
I I lost you Greg so the the notes are

176
00:09:37,019 --> 00:09:39,959
automatically going on mik Echo or not

177
00:09:39,959 --> 00:09:42,120
uh it will be recorded but what's set at

178
00:09:42,120 --> 00:09:44,160
the mic won't be so if someone can type

179
00:09:44,160 --> 00:09:45,540
them in that's the point of having a

180
00:09:45,540 --> 00:09:47,040
note taker to put it all together right

181
00:09:47,040 --> 00:09:49,260
exactly so the note should Encompass of

182
00:09:49,260 --> 00:09:50,940
course you know the whole questions on

183
00:09:50,940 --> 00:09:54,300
the mic all right yep uh we're not

184
00:09:54,300 --> 00:09:56,580
having any technical issues otherwise

185
00:09:56,580 --> 00:09:59,279
you know what to report them

186
00:09:59,279 --> 00:10:03,360
um good so agenda a bunch of updates on

187
00:10:03,360 --> 00:10:06,380
the previous stuff a very interesting

188
00:10:06,380 --> 00:10:09,540
conversation on Ephesian P4 based beer

189
00:10:09,540 --> 00:10:11,100
implementation looks actually

190
00:10:11,100 --> 00:10:13,500
fascinating on the Tofino and then

191
00:10:13,500 --> 00:10:15,720
tallest is showing something towards uh

192
00:10:15,720 --> 00:10:18,240
recursive beat masks uh which looked

193
00:10:18,240 --> 00:10:20,339
like a pretty crowded pressure we see

194
00:10:20,339 --> 00:10:21,959
what comes out of it then probably an

195
00:10:21,959 --> 00:10:24,600
frr update and T extension by Sandy if

196
00:10:24,600 --> 00:10:26,040
we find time

197
00:10:26,040 --> 00:10:27,600
okay

198
00:10:27,600 --> 00:10:29,339
so

199
00:10:29,339 --> 00:10:30,300
um

200
00:10:30,300 --> 00:10:34,500
what's the status so the T stuff is an

201
00:10:34,500 --> 00:10:37,800
RFC congratulations yeah you know claim

202
00:10:37,800 --> 00:10:40,800
to fame beer bar APA passed and got an

203
00:10:40,800 --> 00:10:42,300
RFP

204
00:10:42,300 --> 00:10:44,519
room Applause

205
00:10:44,519 --> 00:10:46,700
room Applause

206
00:10:46,700 --> 00:10:49,860
we don't get that many of those we need

207
00:10:49,860 --> 00:10:51,899
to know cheap wins

208
00:10:51,899 --> 00:10:55,560
uh the beer bar IPA is also RFC now so

209
00:10:55,560 --> 00:10:56,820
we have a clean architecture you know

210
00:10:56,820 --> 00:10:58,860
either run to it igp or otherwise do our

211
00:10:58,860 --> 00:11:00,779
own things if necessary

212
00:11:00,779 --> 00:11:03,240
Club class oh thanks for Jeffrey to

213
00:11:03,240 --> 00:11:05,279
actually hurting that one along for

214
00:11:05,279 --> 00:11:06,779
quite a long time

215
00:11:06,779 --> 00:11:09,060
um all right now comes the public

216
00:11:09,060 --> 00:11:13,680
castigate the ospv3 stuff is being uh

217
00:11:13,680 --> 00:11:16,740
not taken care of I was twice uh on

218
00:11:16,740 --> 00:11:19,440
people I was promised updates I updates

219
00:11:19,440 --> 00:11:21,360
not delivered one of the code that is

220
00:11:21,360 --> 00:11:22,860
sitting here and looked properly

221
00:11:22,860 --> 00:11:25,320
bedraggled right so

222
00:11:25,320 --> 00:11:28,860
gentlemen I give you last warning and

223
00:11:28,860 --> 00:11:30,959
two weeks and otherwise I start to go

224
00:11:30,959 --> 00:11:32,459
look for another Shepherd oh I'm

225
00:11:32,459 --> 00:11:34,560
sheparding but the stuff as far as he's

226
00:11:34,560 --> 00:11:36,600
not addressed so I give you two weeks

227
00:11:36,600 --> 00:11:38,700
for version that takes care of the stuff

228
00:11:38,700 --> 00:11:41,160
otherwise you know you lose the

229
00:11:41,160 --> 00:11:43,260
opportunity for Eternal Fame and I will

230
00:11:43,260 --> 00:11:45,120
go and drag another author and make him

231
00:11:45,120 --> 00:11:47,820
editor and basically start you know to

232
00:11:47,820 --> 00:11:50,519
get the stuff delivered so once again

233
00:11:50,519 --> 00:11:54,860
last call but in a different sense

234
00:11:55,079 --> 00:11:55,860
um

235
00:11:55,860 --> 00:11:58,860
a bunch of things are uh moving forward

236
00:11:58,860 --> 00:12:01,860
nothing particular here

237
00:12:01,860 --> 00:12:07,560
uh Bunch waiting for Shepherd

238
00:12:08,160 --> 00:12:08,760
um

239
00:12:08,760 --> 00:12:12,060
yeah nothing very interesting here

240
00:12:12,060 --> 00:12:13,680
unless somebody wants to come yeah

241
00:12:13,680 --> 00:12:15,979
Andrew

242
00:12:19,079 --> 00:12:22,860
yeah so that just kicked in so I have to

243
00:12:22,860 --> 00:12:24,899
go and look at this draft and and see

244
00:12:24,899 --> 00:12:26,279
whether in the state we need to actually

245
00:12:26,279 --> 00:12:27,779
call our review so the early reviews

246
00:12:27,779 --> 00:12:29,459
will be coming no much faster than

247
00:12:29,459 --> 00:12:31,740
before right we didn't hear Andrew

248
00:12:31,740 --> 00:12:34,320
remote can all questions go to the mic

249
00:12:34,320 --> 00:12:36,180
please

250
00:12:36,180 --> 00:12:39,620
yeah to the mic please

251
00:12:39,680 --> 00:12:45,260
systems uh yeah right

252
00:12:45,480 --> 00:12:47,220
um yeah Andrew here

253
00:12:47,220 --> 00:12:50,700
um just I I don't know whether this has

254
00:12:50,700 --> 00:12:52,019
been circulated to all the working

255
00:12:52,019 --> 00:12:54,839
groups but we've got a policy in routing

256
00:12:54,839 --> 00:12:56,339
area now that

257
00:12:56,339 --> 00:13:00,120
before drafts go to the area directors

258
00:13:00,120 --> 00:13:03,060
after last call they must have gone

259
00:13:03,060 --> 00:13:05,639
through an early review through the

260
00:13:05,639 --> 00:13:07,980
directorate this is just to help us

261
00:13:07,980 --> 00:13:10,560
speed along the pipeline except for you

262
00:13:10,560 --> 00:13:12,120
know because it's a lot easier if we get

263
00:13:12,120 --> 00:13:14,459
documents that have been reviewed so I

264
00:13:14,459 --> 00:13:16,380
was just reminding the chairs about that

265
00:13:16,380 --> 00:13:18,240
with the number of documents that are

266
00:13:18,240 --> 00:13:21,240
looking like they're about to arrive

267
00:13:21,240 --> 00:13:23,760
um yeah

268
00:13:23,760 --> 00:13:26,760
okay

269
00:13:30,420 --> 00:13:33,079
all right

270
00:13:33,300 --> 00:13:34,920
so

271
00:13:34,920 --> 00:13:36,979
um

272
00:13:37,019 --> 00:13:40,500
so we need a bunch of Shepherds for uh

273
00:13:40,500 --> 00:13:43,019
you know earlier reviews so people can

274
00:13:43,019 --> 00:13:45,180
clean the stuff up before we push it

275
00:13:45,180 --> 00:13:46,079
further

276
00:13:46,079 --> 00:13:48,560
uh least extensive

277
00:13:48,560 --> 00:13:52,139
frr surely interesting uh

278
00:13:52,139 --> 00:13:55,019
everything else maticus is a service

279
00:13:55,019 --> 00:13:56,700
probably interesting

280
00:13:56,700 --> 00:14:00,720
te uh no opinion the beer you got a

281
00:14:00,720 --> 00:14:03,320
question with the mic

282
00:14:04,139 --> 00:14:07,279
Greg Greg

283
00:14:09,120 --> 00:14:11,820
okay uh Greg mersky Erickson on Saturday

284
00:14:11,820 --> 00:14:15,300
the pain in the butt no it's not just

285
00:14:15,300 --> 00:14:18,420
you okay okay then should I assume that

286
00:14:18,420 --> 00:14:20,760
everybody enjoys it okay all right

287
00:14:20,760 --> 00:14:26,459
uh okay I'm glad to uh so dear pink uh

288
00:14:26,459 --> 00:14:29,459
beer ping in the last call

289
00:14:29,459 --> 00:14:31,920
um we received Shepherd's review thank

290
00:14:31,920 --> 00:14:34,860
you uh for the shepherd uh worked under

291
00:14:34,860 --> 00:14:37,980
addressing I submitted my proposal to

292
00:14:37,980 --> 00:14:41,940
the pen holder and uh never heard since

293
00:14:41,940 --> 00:14:44,040
um so the draft expired

294
00:14:44,040 --> 00:14:46,680
uh who is that who is the pen holder

295
00:14:46,680 --> 00:14:49,740
editor on it an agenda of official

296
00:14:49,740 --> 00:14:52,440
editor or just the first author uh his

297
00:14:52,440 --> 00:14:53,820
first offer

298
00:14:53,820 --> 00:14:55,860
right so

299
00:14:55,860 --> 00:14:58,079
um I would appreciate if chairs can

300
00:14:58,079 --> 00:15:00,060
think of assigning the editor to the

301
00:15:00,060 --> 00:15:02,760
draft so we can move on because the

302
00:15:02,760 --> 00:15:04,920
problem the problem is not the problem

303
00:15:04,920 --> 00:15:06,360
is

304
00:15:06,360 --> 00:15:10,139
um as additional as you uh listed BFD

305
00:15:10,139 --> 00:15:14,820
draft here so that ping uh the BFD and

306
00:15:14,820 --> 00:15:19,079
path MTU Discovery depend on progress of

307
00:15:19,079 --> 00:15:22,500
uh BRP uh no problem please send

308
00:15:22,500 --> 00:15:24,420
official requests to the list the chairs

309
00:15:24,420 --> 00:15:26,639
were turning around give the first Auto

310
00:15:26,639 --> 00:15:29,040
20 minutes time to react and if not we

311
00:15:29,040 --> 00:15:31,980
basically sign an editor yeah we've

312
00:15:31,980 --> 00:15:34,860
reached out to nahendra already we got

313
00:15:34,860 --> 00:15:36,420
some response but nothing really

314
00:15:36,420 --> 00:15:38,399
progressed

315
00:15:38,399 --> 00:15:40,019
um I think is fair enough that we just

316
00:15:40,019 --> 00:15:42,600
move the pen

317
00:15:42,600 --> 00:15:45,779
yep yeah and actually the info fairness

318
00:15:45,779 --> 00:15:48,120
I send the request before the meeting

319
00:15:48,120 --> 00:15:51,660
yep oh absolutely very nice freshman set

320
00:15:51,660 --> 00:15:54,180
let's move the pen

321
00:15:54,180 --> 00:15:56,279
uh yeah we'll give it some time and then

322
00:15:56,279 --> 00:15:57,899
we move the pan you know we get the

323
00:15:57,899 --> 00:15:59,940
nature so we move this stuff forward

324
00:15:59,940 --> 00:16:03,120
okay uh anything else on the drop shot

325
00:16:03,120 --> 00:16:05,959
standing on the status

326
00:16:06,440 --> 00:16:08,240
thank you

327
00:16:08,240 --> 00:16:11,160
oh that's Jeffrey sorry

328
00:16:11,160 --> 00:16:13,920
yeah Jeffrey from juniper um I think

329
00:16:13,920 --> 00:16:16,320
there is one draft missing here probably

330
00:16:16,320 --> 00:16:20,720
because it's expired and it's my fault

331
00:16:21,180 --> 00:16:23,760
it's the beer proxy draft

332
00:16:23,760 --> 00:16:26,459
um it's uh I we believe it's ready for

333
00:16:26,459 --> 00:16:29,120
last call but I will refresh it and then

334
00:16:29,120 --> 00:16:31,680
refresh we need the shepherd and so on

335
00:16:31,680 --> 00:16:33,360
and then we have to call it for the last

336
00:16:33,360 --> 00:16:36,120
call whatever next next next next time

337
00:16:36,120 --> 00:16:38,759
next guy on the mic please no acrobatic

338
00:16:38,759 --> 00:16:41,100
you know throwing around and juggling

339
00:16:41,100 --> 00:16:43,399
things

340
00:16:45,180 --> 00:16:46,800
okay

341
00:16:46,800 --> 00:16:50,120
so that's it

342
00:16:52,199 --> 00:16:55,040
next one

343
00:16:56,639 --> 00:16:58,500
you do the notes okay so around the

344
00:16:58,500 --> 00:17:00,800
slides

345
00:17:05,339 --> 00:17:07,819
woman

346
00:17:17,040 --> 00:17:19,740
well first thing first ice welcome back

347
00:17:19,740 --> 00:17:21,240
thank you

348
00:17:21,240 --> 00:17:23,939
uh maybe we can get some Belgium beer

349
00:17:23,939 --> 00:17:25,699
now man

350
00:17:25,699 --> 00:17:29,040
so with that said if if I knew the last

351
00:17:29,040 --> 00:17:30,840
call was as easy as going to the

352
00:17:30,840 --> 00:17:32,640
microphone I wouldn't face anybody's

353
00:17:32,640 --> 00:17:35,700
time with going over this draft again

354
00:17:35,700 --> 00:17:39,360
uh but I think we try to do three last

355
00:17:39,360 --> 00:17:41,760
calls on this and I think it went to the

356
00:17:41,760 --> 00:17:43,620
working group too

357
00:17:43,620 --> 00:17:45,900
I don't know what was I think you know

358
00:17:45,900 --> 00:17:48,299
they were in favor of pushing it through

359
00:17:48,299 --> 00:17:50,340
so I don't know do you want me to go

360
00:17:50,340 --> 00:17:52,260
through it or

361
00:17:52,260 --> 00:17:55,140
this is a question for chairs

362
00:17:55,140 --> 00:17:58,100
what's quickly

363
00:17:58,500 --> 00:18:00,900
sorry what was the answer

364
00:18:00,900 --> 00:18:02,880
let's see if you can step through or we

365
00:18:02,880 --> 00:18:05,160
have time

366
00:18:05,160 --> 00:18:07,020
yeah I mean I I don't want to waste

367
00:18:07,020 --> 00:18:08,640
anybody's time if everybody knows about

368
00:18:08,640 --> 00:18:10,380
the draft and you know we're going to

369
00:18:10,380 --> 00:18:12,780
just do a Last Call on it uh you know

370
00:18:12,780 --> 00:18:14,520
get a shepherd on it then

371
00:18:14,520 --> 00:18:16,140
you know I can give 10 minutes back to

372
00:18:16,140 --> 00:18:18,539
the to the working group

373
00:18:18,539 --> 00:18:21,240
uh show of hands people need to refresh

374
00:18:21,240 --> 00:18:23,340
then we run five minutes

375
00:18:23,340 --> 00:18:25,919
nobody gets hurt okay one two yeah

376
00:18:25,919 --> 00:18:27,539
please run a refresh all right sounds

377
00:18:27,539 --> 00:18:29,100
good keep it snap people at least people

378
00:18:29,100 --> 00:18:30,660
know what the whole thing is about I'll

379
00:18:30,660 --> 00:18:33,240
make it very Snappy so uh the problem we

380
00:18:33,240 --> 00:18:34,919
are trying to solve is that some

381
00:18:34,919 --> 00:18:36,539
providers that they are trying to go

382
00:18:36,539 --> 00:18:38,280
next slide please actually

383
00:18:38,280 --> 00:18:40,320
some providers that are trying to go to

384
00:18:40,320 --> 00:18:43,380
the next uh to the next technology which

385
00:18:43,380 --> 00:18:46,080
is beer for multicast they want to

386
00:18:46,080 --> 00:18:48,000
replace some parts of their Network

387
00:18:48,000 --> 00:18:50,940
so they buy brand new hardware that is

388
00:18:50,940 --> 00:18:53,220
beer capable and they want to replace

389
00:18:53,220 --> 00:18:56,280
one portion of the network uh as an

390
00:18:56,280 --> 00:18:57,960
example in this case the network is

391
00:18:57,960 --> 00:19:03,000
being multicast ldp mldp and the small

392
00:19:03,000 --> 00:19:04,980
island within that network is going to

393
00:19:04,980 --> 00:19:09,120
get upgraded and to beer and with this

394
00:19:09,120 --> 00:19:11,220
draft basically what they can do is they

395
00:19:11,220 --> 00:19:13,799
can I wouldn't use the term as Stitch

396
00:19:13,799 --> 00:19:17,940
they can signal the mldp to the Beer

397
00:19:17,940 --> 00:19:18,780
core

398
00:19:18,780 --> 00:19:22,140
from one Island mldp Ireland to another

399
00:19:22,140 --> 00:19:24,299
mldp Island that is connected through

400
00:19:24,299 --> 00:19:25,740
this vehicle

401
00:19:25,740 --> 00:19:28,880
so next slide please

402
00:19:30,120 --> 00:19:32,100
so so basically the way it's done is

403
00:19:32,100 --> 00:19:34,919
like PM signaling uh all that happens is

404
00:19:34,919 --> 00:19:39,960
that when mldp effects arrive at a beer

405
00:19:39,960 --> 00:19:44,580
Edge router uh we grabbed that mldp FEC

406
00:19:44,580 --> 00:19:48,660
and the mlbp signaling if you will and

407
00:19:48,660 --> 00:19:52,559
we use RFC 7060 and we shoot it from the

408
00:19:52,559 --> 00:19:55,559
uh let me get my terminology right the

409
00:19:55,559 --> 00:19:59,820
the down a stream B router which is

410
00:19:59,820 --> 00:20:01,440
uh

411
00:20:01,440 --> 00:20:04,320
Ingress view router I guess to the upper

412
00:20:04,320 --> 00:20:07,140
stream B router and the Upstream B

413
00:20:07,140 --> 00:20:10,100
router keeps track of all these

414
00:20:10,100 --> 00:20:14,280
Downstream uh routers if you will that

415
00:20:14,280 --> 00:20:16,200
are interested in building this

416
00:20:16,200 --> 00:20:20,100
multicast tree via the mldp signal so

417
00:20:20,100 --> 00:20:24,059
the Upstream B router Edge router builds

418
00:20:24,059 --> 00:20:26,700
a table or something similar to a table

419
00:20:26,700 --> 00:20:29,660
that tracks all the downstream

420
00:20:29,660 --> 00:20:31,799
routers that are interested in the tree

421
00:20:31,799 --> 00:20:34,440
next slide please

422
00:20:34,440 --> 00:20:37,080
so obviously when you get into the into

423
00:20:37,080 --> 00:20:40,620
the other side of the mldp to the other

424
00:20:40,620 --> 00:20:44,100
mldp Island then your effect just goes

425
00:20:44,100 --> 00:20:46,380
all the way to the source via mldp

426
00:20:46,380 --> 00:20:49,860
signaling and then your uh signaling is

427
00:20:49,860 --> 00:20:52,140
uh

428
00:20:52,140 --> 00:20:54,600
fully achieved as at this point and then

429
00:20:54,600 --> 00:20:57,960
your data path starts data path starts

430
00:20:57,960 --> 00:21:01,740
from The Source via mldp VIA ldp mpls in

431
00:21:01,740 --> 00:21:05,220
cap and when it goes to the to the Beer

432
00:21:05,220 --> 00:21:08,520
domain we have a list of the

433
00:21:08,520 --> 00:21:10,799
um Downstream routers that are

434
00:21:10,799 --> 00:21:14,039
interested into that tree and we

435
00:21:14,039 --> 00:21:17,100
generate a beer header that has the bits

436
00:21:17,100 --> 00:21:18,780
of all the downstream routers in the

437
00:21:18,780 --> 00:21:21,240
beer header and we shoot the packet all

438
00:21:21,240 --> 00:21:24,299
the way uh through the beer core to the

439
00:21:24,299 --> 00:21:28,740
downstream ldp Island we remove the beer

440
00:21:28,740 --> 00:21:30,780
header and then we go

441
00:21:30,780 --> 00:21:34,400
to the wild via the mpls

442
00:21:34,400 --> 00:21:37,140
header itself and that's how the

443
00:21:37,140 --> 00:21:38,460
solution works so it's not really a

444
00:21:38,460 --> 00:21:40,080
stitching it's just

445
00:21:40,080 --> 00:21:42,600
tunneling

446
00:21:42,600 --> 00:21:46,860
and yeah okay last call request uh

447
00:21:46,860 --> 00:21:48,539
should we do show of hands or take it to

448
00:21:48,539 --> 00:21:51,080
the list crack

449
00:21:55,020 --> 00:21:59,100
faded out uh okay so we issue a Last

450
00:21:59,100 --> 00:22:01,679
Call on the list okay

451
00:22:01,679 --> 00:22:05,280
uh unless there's any questions we have

452
00:22:05,280 --> 00:22:08,178
time for a question or two

453
00:22:09,419 --> 00:22:10,919
empty

454
00:22:10,919 --> 00:22:14,659
okay next one thank you

455
00:22:24,059 --> 00:22:28,820
uh beer Bishop Jeffrey who is doing that

456
00:22:33,059 --> 00:22:35,460
next time

457
00:22:35,460 --> 00:22:38,039
all right so it's this is update on this

458
00:22:38,039 --> 00:22:41,760
bgp extension uh for beer signaling on

459
00:22:41,760 --> 00:22:44,400
behalf of the co-authors next slide

460
00:22:44,400 --> 00:22:46,640
please

461
00:22:47,179 --> 00:22:49,559
uh there's a bit of history on this

462
00:22:49,559 --> 00:22:52,679
draft it had passed working group last

463
00:22:52,679 --> 00:22:56,039
call before and I was the shepherd I did

464
00:22:56,039 --> 00:22:58,740
the review I had some comments

465
00:22:58,740 --> 00:23:00,659
um then uh the main authors had lost

466
00:23:00,659 --> 00:23:04,500
Dean um and uh so they couldn't address

467
00:23:04,500 --> 00:23:07,320
the comments and additionally

468
00:23:07,320 --> 00:23:11,880
it was only intended to for this bgpdc

469
00:23:11,880 --> 00:23:15,240
scenario with bgp being the underlay and

470
00:23:15,240 --> 00:23:18,419
it is assumed that uh all the routers

471
00:23:18,419 --> 00:23:20,340
would support beer

472
00:23:20,340 --> 00:23:24,600
and if there is one router or that does

473
00:23:24,600 --> 00:23:27,900
not support beer then the Ingress

474
00:23:27,900 --> 00:23:29,760
replication will happen

475
00:23:29,760 --> 00:23:33,840
all the way to the bfvrs

476
00:23:33,840 --> 00:23:37,080
um this is a problem that was pointed

477
00:23:37,080 --> 00:23:40,020
out in another draft the markets as a

478
00:23:40,020 --> 00:23:40,860
service

479
00:23:40,860 --> 00:23:44,460
and it has also also has a solution for

480
00:23:44,460 --> 00:23:46,580
that situation

481
00:23:46,580 --> 00:23:49,740
so after

482
00:23:49,740 --> 00:23:52,740
considering all the factors factors like

483
00:23:52,740 --> 00:23:53,720
the

484
00:23:53,720 --> 00:23:57,260
nobody was uh actually working on

485
00:23:57,260 --> 00:23:59,640
comments and then we have this problem

486
00:23:59,640 --> 00:24:02,100
so we decided to

487
00:24:02,100 --> 00:24:07,080
do a revamp so I joined as the editor

488
00:24:07,080 --> 00:24:10,020
um we moved to move the solution from

489
00:24:10,020 --> 00:24:13,740
the markets as a service strapped into

490
00:24:13,740 --> 00:24:15,960
this this one too so that you can handle

491
00:24:15,960 --> 00:24:19,820
generic situations and not just for

492
00:24:19,820 --> 00:24:24,059
these pgp DC and where all the routers

493
00:24:24,059 --> 00:24:25,799
support beer

494
00:24:25,799 --> 00:24:28,460
um next slide please

495
00:24:30,720 --> 00:24:35,460
sorry one too many yeah so this is uh is

496
00:24:35,460 --> 00:24:37,740
an example what I was talking about here

497
00:24:37,740 --> 00:24:39,299
we have the

498
00:24:39,299 --> 00:24:42,240
the fr1 on the left side there is a noun

499
00:24:42,240 --> 00:24:44,159
bfr in the middle which does not support

500
00:24:44,159 --> 00:24:47,760
the appear and Then followed by vfr2 and

501
00:24:47,760 --> 00:24:50,460
then bfvr one two three on the right

502
00:24:50,460 --> 00:24:52,080
side

503
00:24:52,080 --> 00:24:56,280
um before this uh new revision

504
00:24:56,280 --> 00:24:59,580
all the bfrs or bfvrs they will only

505
00:24:59,580 --> 00:25:02,280
advertise their own beer prefixes and

506
00:25:02,280 --> 00:25:04,380
their encapsulation information

507
00:25:04,380 --> 00:25:07,260
now when bfr calculates the beef entries

508
00:25:07,260 --> 00:25:10,020
for BF er123

509
00:25:10,020 --> 00:25:12,299
the next hub in the in a bgp

510
00:25:12,299 --> 00:25:15,419
advertisement is that non-bfr

511
00:25:15,419 --> 00:25:19,020
and it has no idea that dfr is also in

512
00:25:19,020 --> 00:25:22,260
the bfr2 is in the past so it will just

513
00:25:22,260 --> 00:25:23,460
tunnel the traffic

514
00:25:23,460 --> 00:25:27,600
to be a vr123 directly if you hadn't

515
00:25:27,600 --> 00:25:29,820
known that bfr2 can be used then you

516
00:25:29,820 --> 00:25:34,440
could have just tunnel to the bfr2 only

517
00:25:34,440 --> 00:25:37,200
um with the new approach

518
00:25:37,200 --> 00:25:39,380
all the

519
00:25:39,380 --> 00:25:43,520
bfrs via router when they re-advertise

520
00:25:43,520 --> 00:25:47,700
the beer prefixes they will updates uh

521
00:25:47,700 --> 00:25:50,940
the beer information and they will also

522
00:25:50,940 --> 00:25:54,000
update a sub a next hub sub tlv in the

523
00:25:54,000 --> 00:25:59,220
brtov and to themselves so this

524
00:25:59,220 --> 00:26:01,860
um has two purposes the main purpose is

525
00:26:01,860 --> 00:26:06,179
that in this example bfr2 when the it

526
00:26:06,179 --> 00:26:09,600
really advertised the bfvr123 prefixes

527
00:26:09,600 --> 00:26:13,020
it updates next hub to itself so now in

528
00:26:13,020 --> 00:26:15,960
bfr1 guess that this is the next half is

529
00:26:15,960 --> 00:26:18,900
bfr too and it has the encapsulation

530
00:26:18,900 --> 00:26:22,020
information and associated with bfr too

531
00:26:22,020 --> 00:26:25,140
so it knows that for all those bfvr one

532
00:26:25,140 --> 00:26:27,720
two three they can just be reached from

533
00:26:27,720 --> 00:26:31,620
bfr too so that handles the non-bf

534
00:26:31,620 --> 00:26:34,080
Rockets very well and another side

535
00:26:34,080 --> 00:26:35,940
benefit is that

536
00:26:35,940 --> 00:26:39,480
all those prefix beer prefixes they are

537
00:26:39,480 --> 00:26:42,080
now reiterized by the bfr2 with the same

538
00:26:42,080 --> 00:26:44,279
deer tlv

539
00:26:44,279 --> 00:26:47,159
that allows the better PCP and Roi

540
00:26:47,159 --> 00:26:49,559
packing

541
00:26:49,559 --> 00:26:53,720
um so next next slide please

542
00:26:55,500 --> 00:26:58,679
this procedures is basically what I just

543
00:26:58,679 --> 00:26:59,940
talked about

544
00:26:59,940 --> 00:27:02,600
next slide

545
00:27:02,700 --> 00:27:03,360
um

546
00:27:03,360 --> 00:27:07,100
there is another or enhancement here

547
00:27:07,100 --> 00:27:10,939
we just talked about that

548
00:27:12,240 --> 00:27:16,100
let's go back to that picture

549
00:27:17,039 --> 00:27:19,520
so here

550
00:27:19,520 --> 00:27:24,240
bfaer123 originated there are an RI for

551
00:27:24,240 --> 00:27:26,700
their peer prefixes and then it is

552
00:27:26,700 --> 00:27:29,159
assumed that everyone just re-advertise

553
00:27:29,159 --> 00:27:31,440
them everywhere but there may be

554
00:27:31,440 --> 00:27:34,140
situations where

555
00:27:34,140 --> 00:27:36,900
um you do not want to re-advertise the

556
00:27:36,900 --> 00:27:38,580
Beer prefixes everywhere for example

557
00:27:38,580 --> 00:27:41,400
bfr2 can say that I'm not going to

558
00:27:41,400 --> 00:27:43,500
re-read the price those bfvr one two

559
00:27:43,500 --> 00:27:47,460
three prefixes instead bfr2 will just

560
00:27:47,460 --> 00:27:50,880
advertise its own beer prefixes but

561
00:27:50,880 --> 00:27:53,340
it uses uh

562
00:27:53,340 --> 00:27:55,140
um

563
00:27:55,140 --> 00:27:58,200
sub POV that is defined in the other

564
00:27:58,200 --> 00:28:01,799
draft beer prefix either

565
00:28:01,799 --> 00:28:04,020
excuse me re-advertisement

566
00:28:04,020 --> 00:28:08,520
that um in that sub new sub gov you will

567
00:28:08,520 --> 00:28:13,340
just list all the bfr IDS reachable

568
00:28:13,340 --> 00:28:17,340
from this bfr so

569
00:28:17,340 --> 00:28:20,039
um that's what I was talking about on

570
00:28:20,039 --> 00:28:23,640
that uh slide later let's go

571
00:28:23,640 --> 00:28:26,340
back to that slide you know

572
00:28:26,340 --> 00:28:28,200
yeah so

573
00:28:28,200 --> 00:28:30,720
um summary of the all the changes in

574
00:28:30,720 --> 00:28:33,480
this revision we extended the scope for

575
00:28:33,480 --> 00:28:36,900
general or applicability it also handles

576
00:28:36,900 --> 00:28:40,020
mpos and now mpls encapsulation

577
00:28:40,020 --> 00:28:43,559
handles non-bfr and we updated the

578
00:28:43,559 --> 00:28:46,140
signaling so that the transit bfrs do

579
00:28:46,140 --> 00:28:48,480
not need to advertise the beer

580
00:28:48,480 --> 00:28:50,340
information with their own beer prefix

581
00:28:50,340 --> 00:28:53,340
anymore unless they want to use the

582
00:28:53,340 --> 00:28:57,240
proxy range sub POV to advertise bfrids

583
00:28:57,240 --> 00:29:00,419
that are reachable from them

584
00:29:00,419 --> 00:29:03,179
we also added a section about the fifth

585
00:29:03,179 --> 00:29:04,340
calculation

586
00:29:04,340 --> 00:29:07,880
update the text for how to handle

587
00:29:07,880 --> 00:29:11,640
the spear information and trvs at the

588
00:29:11,640 --> 00:29:13,559
dear domain boundary

589
00:29:13,559 --> 00:29:16,399
next slide

590
00:29:16,799 --> 00:29:19,440
um so with these changes uh we need to

591
00:29:19,440 --> 00:29:21,600
do another round of working group last

592
00:29:21,600 --> 00:29:24,179
call we also need a new shepher I was

593
00:29:24,179 --> 00:29:26,340
the chefer before but now

594
00:29:26,340 --> 00:29:28,140
um I'm

595
00:29:28,140 --> 00:29:30,960
joined as an editor oh by the way Cindy

596
00:29:30,960 --> 00:29:34,220
joined as a contributor she

597
00:29:34,220 --> 00:29:36,360
helped a lot in

598
00:29:36,360 --> 00:29:39,960
especially on that proxy range sub tlb

599
00:29:39,960 --> 00:29:43,340
is a support

600
00:29:43,980 --> 00:29:46,740
questions on the queue

601
00:29:46,740 --> 00:29:51,539
nothing uh in my opinion this needs uh

602
00:29:51,539 --> 00:29:53,940
to be bounds of IDR as well very

603
00:29:53,940 --> 00:29:56,039
significant change of procedure okay and

604
00:29:56,039 --> 00:29:57,360
now because you carry the stuff

605
00:29:57,360 --> 00:29:59,159
transitive through I would like to have

606
00:29:59,159 --> 00:30:01,740
these guys look in terms of like Atomic

607
00:30:01,740 --> 00:30:03,659
attributes Aggregates blah blah right

608
00:30:03,659 --> 00:30:05,520
you're triggering a couple of procedures

609
00:30:05,520 --> 00:30:08,460
so uh I will fire something towards the

610
00:30:08,460 --> 00:30:11,340
IDR and then we see whether anything

611
00:30:11,340 --> 00:30:14,580
pops up on the list and then uh

612
00:30:14,580 --> 00:30:17,279
find Visual work group plus call again

613
00:30:17,279 --> 00:30:20,880
and Shepard please if anyone volunteers

614
00:30:20,880 --> 00:30:24,080
to do that stuff

615
00:30:25,380 --> 00:30:28,100
oops

616
00:30:29,539 --> 00:30:33,360
okay done next one I think Jeffrey you

617
00:30:33,360 --> 00:30:35,399
know

618
00:30:35,399 --> 00:30:39,719
uh prefix okay

619
00:30:41,940 --> 00:30:43,140
yeah

620
00:30:43,140 --> 00:30:46,320
um so this is the updates uh on that ear

621
00:30:46,320 --> 00:30:49,980
prefix redistributes traps um

622
00:30:49,980 --> 00:30:52,500
on behalf of the quarters next slide

623
00:30:52,500 --> 00:30:54,620
please

624
00:30:56,340 --> 00:30:58,799
just a quick review

625
00:30:58,799 --> 00:30:59,460
um

626
00:30:59,460 --> 00:31:02,279
we have three

627
00:31:02,279 --> 00:31:06,179
igp domains in this topology

628
00:31:06,179 --> 00:31:08,600
even though they are running three uh

629
00:31:08,600 --> 00:31:12,600
different uh igp instances

630
00:31:12,600 --> 00:31:15,059
that beer subdomain itself is actually

631
00:31:15,059 --> 00:31:17,120
just a single one they cover all those

632
00:31:17,120 --> 00:31:20,100
domains questions how do we registering

633
00:31:20,100 --> 00:31:22,260
the beer information between them

634
00:31:22,260 --> 00:31:24,360
that's one question

635
00:31:24,360 --> 00:31:27,179
um another question is that if we are

636
00:31:27,179 --> 00:31:29,940
using pgplu

637
00:31:29,940 --> 00:31:33,960
um because with pcpr you the

638
00:31:33,960 --> 00:31:34,640
the

639
00:31:34,640 --> 00:31:37,620
prefix for Edge routers are typically

640
00:31:37,620 --> 00:31:40,820
not distributed into igp they only

641
00:31:40,820 --> 00:31:43,440
advertised by pgp among those border

642
00:31:43,440 --> 00:31:46,140
routers so in that case how are going to

643
00:31:46,140 --> 00:31:47,580
do peer forwarding

644
00:31:47,580 --> 00:31:48,720
in

645
00:31:48,720 --> 00:31:51,840
so the uh the approach there is the uh

646
00:31:51,840 --> 00:31:52,860
to

647
00:31:52,860 --> 00:31:55,140
have the Border routers advertise their

648
00:31:55,140 --> 00:31:58,559
own beer prefixes with that same proxy

649
00:31:58,559 --> 00:32:01,080
wrench subtlb I mentioned earlier to

650
00:32:01,080 --> 00:32:04,140
list the external bfr IDs that are

651
00:32:04,140 --> 00:32:06,899
reachable about them so that's the basic

652
00:32:06,899 --> 00:32:09,779
idea on how to handle the pgplu case

653
00:32:09,779 --> 00:32:12,480
that's basically the um what this draft

654
00:32:12,480 --> 00:32:13,500
is about

655
00:32:13,500 --> 00:32:15,240
um it's been there quite for quite some

656
00:32:15,240 --> 00:32:18,419
time I will not get into the details

657
00:32:18,419 --> 00:32:20,399
um the purpose of this presentation here

658
00:32:20,399 --> 00:32:23,039
is just give a quick overview and then

659
00:32:23,039 --> 00:32:27,020
request for working group last call

660
00:32:29,460 --> 00:32:30,659
next slide

661
00:32:30,659 --> 00:32:32,580
yeah

662
00:32:32,580 --> 00:32:36,899
okay so the previous redistribute

663
00:32:38,640 --> 00:32:42,240
classical okay

664
00:32:46,559 --> 00:32:48,799
thanks

665
00:32:48,799 --> 00:32:52,559
questions no one on the Queue thanks

666
00:32:52,559 --> 00:32:54,240
we got uh

667
00:32:54,240 --> 00:32:57,860
last call show of hands in the room

668
00:32:58,260 --> 00:33:00,240
should we do it or just issue to the

669
00:33:00,240 --> 00:33:03,419
list we do it in the room and I we have

670
00:33:03,419 --> 00:33:06,000
a tool that does that uh this was uh

671
00:33:06,000 --> 00:33:07,740
which draft again it vanished what was

672
00:33:07,740 --> 00:33:09,419
the title of the draft

673
00:33:09,419 --> 00:33:12,059
uh that's the prefix redistribute uh

674
00:33:12,059 --> 00:33:15,480
prefix regist okay yeah if you want

675
00:33:15,480 --> 00:33:18,299
actually all right

676
00:33:18,299 --> 00:33:21,379
show a hands

677
00:33:24,120 --> 00:33:26,399
we do the virtual tool right

678
00:33:26,399 --> 00:33:28,440
yeah this just gets everybody remote end

679
00:33:28,440 --> 00:33:30,380
in the room

680
00:33:30,380 --> 00:33:32,880
so we have a count we have a record and

681
00:33:32,880 --> 00:33:35,659
we take a little list

682
00:33:45,720 --> 00:33:47,820
15 with the

683
00:33:47,820 --> 00:33:49,799
16.

684
00:33:49,799 --> 00:33:52,879
no descent

685
00:33:52,919 --> 00:33:56,100
rooms up I said we got it all right and

686
00:33:56,100 --> 00:33:59,460
oh 17-18 more people are coming in 19.

687
00:33:59,460 --> 00:34:01,980
one person says it's not ready and they

688
00:34:01,980 --> 00:34:04,919
change their vote back to 19.

689
00:34:04,919 --> 00:34:06,840
looks unanimous

690
00:34:06,840 --> 00:34:08,339
all right thanks room we'll take you to

691
00:34:08,339 --> 00:34:10,500
the list ending session

692
00:34:10,500 --> 00:34:13,440
so let's also do a show of hand for the

693
00:34:13,440 --> 00:34:16,020
uh the bgp last call but I would wait

694
00:34:16,020 --> 00:34:19,379
until we get this IDR feedback and then

695
00:34:19,379 --> 00:34:21,359
I would only go for the last call maybe

696
00:34:21,359 --> 00:34:22,619
next meeting

697
00:34:22,619 --> 00:34:25,619
uh but we should check the room

698
00:34:25,619 --> 00:34:27,000
okay

699
00:34:27,000 --> 00:34:28,739
all right

700
00:34:28,739 --> 00:34:31,580
show of hands

701
00:34:37,500 --> 00:34:40,800
we have uh someone with the mic

702
00:34:40,800 --> 00:34:43,879
hope he vanished

703
00:34:50,780 --> 00:34:55,379
all right unanimous no descent

704
00:34:55,379 --> 00:34:56,699
all right thanks everyone we'll take out

705
00:34:56,699 --> 00:34:59,280
the list oh another one came in we're at

706
00:34:59,280 --> 00:35:01,380
15.

707
00:35:01,380 --> 00:35:05,040
we're there all right ending count

708
00:35:05,040 --> 00:35:09,119
okay back to the agenda okay so it looks

709
00:35:09,119 --> 00:35:11,640
like the bgp is going last call as well

710
00:35:11,640 --> 00:35:14,160
while I make the IDR basically checking

711
00:35:14,160 --> 00:35:16,560
with the IDR uh

712
00:35:16,560 --> 00:35:18,240
um

713
00:35:18,240 --> 00:35:20,700
uh what you call it integrated part of

714
00:35:20,700 --> 00:35:23,720
the last call okay

715
00:35:24,660 --> 00:35:27,359
uh there was someone on the mic

716
00:35:27,359 --> 00:35:29,220
they vanished

717
00:35:29,220 --> 00:35:32,220
okay

718
00:35:33,119 --> 00:35:35,900
humans up

719
00:35:37,140 --> 00:35:38,400
dude if you want to do the same thing

720
00:35:38,400 --> 00:35:41,099
for the ldp one

721
00:35:41,099 --> 00:35:44,940
uh true if we're consistent okay let's

722
00:35:44,940 --> 00:35:48,599
run the mldp uh that was mlbp correct

723
00:35:48,599 --> 00:35:51,300
yep

724
00:35:51,300 --> 00:35:54,740
I just have to put a title in it

725
00:35:57,240 --> 00:35:59,579
all right show of hands

726
00:35:59,579 --> 00:36:02,599
in the tool

727
00:36:04,380 --> 00:36:07,040
thanks everyone

728
00:36:17,160 --> 00:36:21,660
no dissent we're at 15 16.

729
00:36:21,660 --> 00:36:23,160
it looks like we got full support all

730
00:36:23,160 --> 00:36:24,180
right thanks everyone we'll take you to

731
00:36:24,180 --> 00:36:27,480
the list ending count

732
00:36:27,480 --> 00:36:30,540
okay Stefan comes on fungen

733
00:36:30,540 --> 00:36:33,540
presentation

734
00:36:38,700 --> 00:36:41,839
all right next one

735
00:36:45,180 --> 00:36:46,980
so Stefan this looks actually like a

736
00:36:46,980 --> 00:36:48,960
very interesting presentation a special

737
00:36:48,960 --> 00:36:50,579
for implementers or people pouring

738
00:36:50,579 --> 00:36:52,200
yourself in the Silicon or even you know

739
00:36:52,200 --> 00:36:54,420
very efficient software

740
00:36:54,420 --> 00:36:57,380
okay let's go

741
00:36:58,560 --> 00:37:01,520
we don't hear you

742
00:37:04,500 --> 00:37:06,900
no if you own the tool you have to open

743
00:37:06,900 --> 00:37:09,619
the mic step

744
00:37:16,500 --> 00:37:18,800
foreign

745
00:37:33,859 --> 00:37:37,440
okay can I start

746
00:37:37,440 --> 00:37:39,180
okay perfect

747
00:37:39,180 --> 00:37:41,040
um hello everyone my name is Stephanie

748
00:37:41,040 --> 00:37:43,500
I'm a PhD student at the University of

749
00:37:43,500 --> 00:37:46,260
tubing and today I'm going to talk about

750
00:37:46,260 --> 00:37:48,420
an efficient before based beam

751
00:37:48,420 --> 00:37:51,359
Plantation on Tofino and this is a joint

752
00:37:51,359 --> 00:37:53,099
work with my colleagues Daniel melling

753
00:37:53,099 --> 00:37:54,900
and Michelle Metz

754
00:37:54,900 --> 00:37:58,040
Next Step please

755
00:37:58,200 --> 00:38:00,540
okay I'm going to start my talk with a

756
00:38:00,540 --> 00:38:02,280
short recap what we did before in

757
00:38:02,280 --> 00:38:04,320
previous work then I'm going to talk

758
00:38:04,320 --> 00:38:06,660
about the problem statement and the

759
00:38:06,660 --> 00:38:08,760
implementation of efficient beer in P4

760
00:38:08,760 --> 00:38:11,119
and finally I'm going to talk about

761
00:38:11,119 --> 00:38:13,560
optimization that can be applied to this

762
00:38:13,560 --> 00:38:15,060
implementation

763
00:38:15,060 --> 00:38:17,520
next slide please

764
00:38:17,520 --> 00:38:21,660
okay so at ITF 108 we already presented

765
00:38:21,660 --> 00:38:23,579
the first implementation of beer and

766
00:38:23,579 --> 00:38:27,359
bfr0 in before for the Intel Tofino

767
00:38:27,359 --> 00:38:29,579
and there we used an iterative

768
00:38:29,579 --> 00:38:31,560
processing approach where in each

769
00:38:31,560 --> 00:38:34,500
iteration one next top was served so we

770
00:38:34,500 --> 00:38:36,300
received a beer packet in the first

771
00:38:36,300 --> 00:38:38,460
pipeline iteration we forward the packet

772
00:38:38,460 --> 00:38:40,079
to the first next top of the pack of the

773
00:38:40,079 --> 00:38:42,380
gear package then we cloned the packet

774
00:38:42,380 --> 00:38:45,240
recirculated in the second iteration the

775
00:38:45,240 --> 00:38:48,060
second Next Top is served and so on

776
00:38:48,060 --> 00:38:50,520
next slide please

777
00:38:50,520 --> 00:38:52,920
this approach has one huge drawback

778
00:38:52,920 --> 00:38:54,900
because we make heavy use of

779
00:38:54,900 --> 00:38:57,900
recirculation and recirculation requires

780
00:38:57,900 --> 00:39:00,359
capacity on the switch so for example

781
00:39:00,359 --> 00:39:02,280
when we get 100 gigabit per second

782
00:39:02,280 --> 00:39:04,619
multicast traffic with tires and

783
00:39:04,619 --> 00:39:07,920
desktops then this results in 400 400

784
00:39:07,920 --> 00:39:09,660
Giga per second recirculation traffic

785
00:39:09,660 --> 00:39:11,700
that needs to be processed on the switch

786
00:39:11,700 --> 00:39:14,640
and when we look at the chart here

787
00:39:14,640 --> 00:39:17,040
um on the left side and when we get 100

788
00:39:17,040 --> 00:39:19,740
gigabit per second traffic have only a

789
00:39:19,740 --> 00:39:22,260
singular select recirculation port and

790
00:39:22,260 --> 00:39:23,940
want to send the packet to three Next

791
00:39:23,940 --> 00:39:26,640
Tops This Is the green bar then we only

792
00:39:26,640 --> 00:39:28,619
achieve around 40 gigabit per second

793
00:39:28,619 --> 00:39:31,320
because the pipeline is overloaded due

794
00:39:31,320 --> 00:39:33,660
to recirculation so we have heavy packet

795
00:39:33,660 --> 00:39:34,560
loss

796
00:39:34,560 --> 00:39:37,260
we were able to solve this issue by

797
00:39:37,260 --> 00:39:39,359
adding dedicated recirculation parts to

798
00:39:39,359 --> 00:39:41,579
increase the recirculation capacity so

799
00:39:41,579 --> 00:39:43,800
with three recirculation Parts on the

800
00:39:43,800 --> 00:39:45,660
right side of the plot we are able to

801
00:39:45,660 --> 00:39:48,119
serve up to four Next Tops at line rate

802
00:39:48,119 --> 00:39:51,300
with 100 gigaby per second however these

803
00:39:51,300 --> 00:39:52,980
dedicated recirculation parts are

804
00:39:52,980 --> 00:39:55,380
physical parts of the device so these

805
00:39:55,380 --> 00:39:56,820
cannot be used for any other traffic

806
00:39:56,820 --> 00:39:59,220
than recirculated beer traffic

807
00:39:59,220 --> 00:40:00,980
next slide please

808
00:40:00,980 --> 00:40:04,800
so our goal is was to reduce the

809
00:40:04,800 --> 00:40:06,960
recirculations to improve the efficiency

810
00:40:06,960 --> 00:40:09,599
and to save capacity on the switch for

811
00:40:09,599 --> 00:40:10,800
other traffic

812
00:40:10,800 --> 00:40:13,619
and a simple idea that one can up come

813
00:40:13,619 --> 00:40:16,200
up with is that we want to determine all

814
00:40:16,200 --> 00:40:18,060
Max types of the beer packets and

815
00:40:18,060 --> 00:40:21,060
possibly one shot and then use for

816
00:40:21,060 --> 00:40:22,920
example a static internal multicast

817
00:40:22,920 --> 00:40:25,320
group to replicate the packets to the

818
00:40:25,320 --> 00:40:27,180
required next talks in one shot so that

819
00:40:27,180 --> 00:40:28,980
we do not decrease the collection

820
00:40:28,980 --> 00:40:31,740
well this idea has some challenges in P4

821
00:40:31,740 --> 00:40:33,720
and on the internet Tofino because with

822
00:40:33,720 --> 00:40:36,599
beer bit strings with at least 256 bits

823
00:40:36,599 --> 00:40:39,180
it's quite difficult to map this bit

824
00:40:39,180 --> 00:40:41,099
string to the set of a packet's next

825
00:40:41,099 --> 00:40:43,680
stop in a single table like look up when

826
00:40:43,680 --> 00:40:45,540
we do not have specialized Hardware as

827
00:40:45,540 --> 00:40:47,820
when we just have an Intel Tofino

828
00:40:47,820 --> 00:40:50,640
and a second challenge is that we only

829
00:40:50,640 --> 00:40:52,500
have a limited number of configurable

830
00:40:52,500 --> 00:40:54,780
static multicast groups so we cannot

831
00:40:54,780 --> 00:40:56,940
simply have any combination of possible

832
00:40:56,940 --> 00:40:59,040
next stops as multicast group because

833
00:40:59,040 --> 00:41:00,960
it's just too much

834
00:41:00,960 --> 00:41:03,240
so the question is now how can we do

835
00:41:03,240 --> 00:41:07,320
this more efficiently next time please

836
00:41:07,320 --> 00:41:10,160
next slide please

837
00:41:10,200 --> 00:41:12,839
um just as a very small recap P4 is a

838
00:41:12,839 --> 00:41:14,460
highlighted programming language to

839
00:41:14,460 --> 00:41:16,800
describe data planes and there we have a

840
00:41:16,800 --> 00:41:19,500
compiler that Maps the P4 program onto

841
00:41:19,500 --> 00:41:21,839
programmable pipelines of targets for

842
00:41:21,839 --> 00:41:25,079
example in our case the inter tufino

843
00:41:25,079 --> 00:41:28,160
next slide please

844
00:41:28,320 --> 00:41:30,780
so our approach for more efficient B

845
00:41:30,780 --> 00:41:33,119
implementation is now the following

846
00:41:33,119 --> 00:41:35,099
we have a switch with a certain number

847
00:41:35,099 --> 00:41:38,220
of ports for example 32 and now we

848
00:41:38,220 --> 00:41:40,619
divide all parts of that switch in case

849
00:41:40,619 --> 00:41:43,380
so-called configured Port clusters for

850
00:41:43,380 --> 00:41:45,359
example the first 10 parts are the first

851
00:41:45,359 --> 00:41:47,280
configure Port cluster here with the

852
00:41:47,280 --> 00:41:49,440
yellow border another 10 parts are the

853
00:41:49,440 --> 00:41:51,720
second here with the blue border and the

854
00:41:51,720 --> 00:41:53,820
remaining 12 ports are another configure

855
00:41:53,820 --> 00:41:56,460
Port cluster these configure Port

856
00:41:56,460 --> 00:41:58,260
clusters can be overlapping so they do

857
00:41:58,260 --> 00:42:00,060
not have to be disjoint and of course

858
00:42:00,060 --> 00:42:02,280
ports within a configured podcast that

859
00:42:02,280 --> 00:42:03,839
do not have to be physically next to

860
00:42:03,839 --> 00:42:06,420
each other this is just for Simplicity

861
00:42:06,420 --> 00:42:08,520
and all configured part classes together

862
00:42:08,520 --> 00:42:11,400
have to cover all parts of the switch

863
00:42:11,400 --> 00:42:13,500
and now we want to determine which

864
00:42:13,500 --> 00:42:15,900
configure Port clusters require a packet

865
00:42:15,900 --> 00:42:18,359
copy so we get a b a packet that for

866
00:42:18,359 --> 00:42:20,339
example should be sent through the first

867
00:42:20,339 --> 00:42:22,200
part of the switch and through the last

868
00:42:22,200 --> 00:42:24,660
one so we need the first configured part

869
00:42:24,660 --> 00:42:26,640
cluster and the third configure part

870
00:42:26,640 --> 00:42:28,859
cluster and this may be done again

871
00:42:28,859 --> 00:42:32,339
possibly iteratively however only with a

872
00:42:32,339 --> 00:42:34,980
few iterations like one to four and not

873
00:42:34,980 --> 00:42:37,079
like 1 to 32 as in our previous

874
00:42:37,079 --> 00:42:38,579
implementation

875
00:42:38,579 --> 00:42:41,579
and when we now know that for example C1

876
00:42:41,579 --> 00:42:44,460
needs a packet copy we can use a

877
00:42:44,460 --> 00:42:46,619
suitable static multicast group to

878
00:42:46,619 --> 00:42:48,900
replicate the packet to all required

879
00:42:48,900 --> 00:42:51,060
Next Tops within this a configure Port

880
00:42:51,060 --> 00:42:53,280
cluster but only towards the required

881
00:42:53,280 --> 00:42:56,280
Next Tops and with this approach we need

882
00:42:56,280 --> 00:42:58,319
a maximum number of K minus 1

883
00:42:58,319 --> 00:43:00,780
recirculations for K configure plot

884
00:43:00,780 --> 00:43:03,720
clusters so for example with the 32 Port

885
00:43:03,720 --> 00:43:05,520
switch and three configured Port

886
00:43:05,520 --> 00:43:08,640
clusters for size 11 11 and 10 then we

887
00:43:08,640 --> 00:43:10,460
need at most two recirculations

888
00:43:10,460 --> 00:43:12,660
independent on the number of next stops

889
00:43:12,660 --> 00:43:14,760
and in our last implementation this was

890
00:43:14,760 --> 00:43:17,339
next house minus one so this is a

891
00:43:17,339 --> 00:43:19,440
drastic reduction in the number of risk

892
00:43:19,440 --> 00:43:22,760
conditions next slide please

893
00:43:22,760 --> 00:43:25,619
and the question is now okay how can we

894
00:43:25,619 --> 00:43:27,780
determine which configure Port clusters

895
00:43:27,780 --> 00:43:30,660
need a package and to that end we look

896
00:43:30,660 --> 00:43:32,940
at all combinations of these configure

897
00:43:32,940 --> 00:43:35,339
Port clusters here called SI

898
00:43:35,339 --> 00:43:37,800
with our example with three configure

899
00:43:37,800 --> 00:43:39,540
Port clusters we have seven combinations

900
00:43:39,540 --> 00:43:42,180
a single configured part clusters all

901
00:43:42,180 --> 00:43:44,400
combinations of two and all combinations

902
00:43:44,400 --> 00:43:45,660
of three

903
00:43:45,660 --> 00:43:48,180
and then we look at the so-called

904
00:43:48,180 --> 00:43:51,180
combined fbm which indicates all beef

905
00:43:51,180 --> 00:43:52,920
ERS that are reachable through the

906
00:43:52,920 --> 00:43:53,940
subset

907
00:43:53,940 --> 00:43:55,619
when we look at a part of the switch

908
00:43:55,619 --> 00:43:57,960
then this part is used to reach certain

909
00:43:57,960 --> 00:44:00,960
DVRs so this part has an fbm

910
00:44:00,960 --> 00:44:03,060
likewise when we look at the configure

911
00:44:03,060 --> 00:44:05,819
Port cluster it contains ports so all

912
00:44:05,819 --> 00:44:08,280
parts together build also the fbm of the

913
00:44:08,280 --> 00:44:10,500
configure Port cluster and when we now

914
00:44:10,500 --> 00:44:12,660
have a subset of configured Port cluster

915
00:44:12,660 --> 00:44:15,960
we just bitwise or the individual fpms

916
00:44:15,960 --> 00:44:17,880
of the configure plug testers

917
00:44:17,880 --> 00:44:20,579
and when we now receive a b a bit string

918
00:44:20,579 --> 00:44:23,280
and which is here shown in the example

919
00:44:23,280 --> 00:44:25,619
um with beef ERS that are reachable

920
00:44:25,619 --> 00:44:27,420
through the first configured Port

921
00:44:27,420 --> 00:44:29,819
cluster here in Orange and for example

922
00:44:29,819 --> 00:44:31,560
the second configure Port cluster here

923
00:44:31,560 --> 00:44:34,800
in blue then we apply a ternary match

924
00:44:34,800 --> 00:44:35,940
operation

925
00:44:35,940 --> 00:44:38,339
ternary match is simply a bit wise and

926
00:44:38,339 --> 00:44:39,780
operation

927
00:44:39,780 --> 00:44:42,060
um and we do it with the complement of

928
00:44:42,060 --> 00:44:45,119
the combined fbm and we Define a match

929
00:44:45,119 --> 00:44:47,040
when the result is zero

930
00:44:47,040 --> 00:44:49,200
what does this mean this means that the

931
00:44:49,200 --> 00:44:52,079
complement of the cspn has a zero at

932
00:44:52,079 --> 00:44:54,780
every bit position where the BRB string

933
00:44:54,780 --> 00:44:57,420
has has an activated bit and this means

934
00:44:57,420 --> 00:45:00,060
that the combined fpm has a one at every

935
00:45:00,060 --> 00:45:02,460
bit position where the build string has

936
00:45:02,460 --> 00:45:04,260
bought an activated bit which simply

937
00:45:04,260 --> 00:45:07,500
means that the cfbm serves all pvrs of

938
00:45:07,500 --> 00:45:09,420
video package

939
00:45:09,420 --> 00:45:11,040
in this example

940
00:45:11,040 --> 00:45:14,700
um this would be the case for S4 and S7

941
00:45:14,700 --> 00:45:17,160
because these two contain the first and

942
00:45:17,160 --> 00:45:19,680
second configure part cluster however S7

943
00:45:19,680 --> 00:45:21,839
also contains the third we do not want

944
00:45:21,839 --> 00:45:23,579
to send super application to the third

945
00:45:23,579 --> 00:45:25,560
content import cluster because it does

946
00:45:25,560 --> 00:45:27,180
need a packet

947
00:45:27,180 --> 00:45:29,400
um luckily when we order this table

948
00:45:29,400 --> 00:45:31,859
according to the size of the subset

949
00:45:31,859 --> 00:45:34,800
then we get as first match the smallest

950
00:45:34,800 --> 00:45:38,099
combination that is required and then in

951
00:45:38,099 --> 00:45:40,140
this case this is S4 and then we can

952
00:45:40,140 --> 00:45:41,819
simply select the first configure Port

953
00:45:41,819 --> 00:45:44,099
cluster for further processing

954
00:45:44,099 --> 00:45:46,319
then we recirculate and the second step

955
00:45:46,319 --> 00:45:48,960
we can work with the remaining control

956
00:45:48,960 --> 00:45:51,300
clusters that need a packet copy

957
00:45:51,300 --> 00:45:54,200
next slide please

958
00:45:54,359 --> 00:45:56,940
and now that we know which configure

959
00:45:56,940 --> 00:45:59,640
thought clusters need a packet copy we

960
00:45:59,640 --> 00:46:01,440
only have to determine an appropriate

961
00:46:01,440 --> 00:46:03,660
multicast group so that we can replicate

962
00:46:03,660 --> 00:46:06,000
the packet to all Next Tops within this

963
00:46:06,000 --> 00:46:07,500
configure Port cluster in one shot

964
00:46:07,500 --> 00:46:09,180
without research collection

965
00:46:09,180 --> 00:46:12,599
how do we do that first we configure all

966
00:46:12,599 --> 00:46:14,819
combinations of paths within configure

967
00:46:14,819 --> 00:46:17,460
Port clusters as static multicast groups

968
00:46:17,460 --> 00:46:19,740
we do that to gain some robustness

969
00:46:19,740 --> 00:46:21,599
against changes in the magic history for

970
00:46:21,599 --> 00:46:24,900
example when in DVR joins police and

971
00:46:24,900 --> 00:46:26,700
then we apply the same logic as before

972
00:46:26,700 --> 00:46:29,460
we have a combined fbm of the static

973
00:46:29,460 --> 00:46:31,680
multicast Group which indicates all the

974
00:46:31,680 --> 00:46:33,480
vrs that are reachable through this

975
00:46:33,480 --> 00:46:35,339
group or rather through the parts that

976
00:46:35,339 --> 00:46:37,619
are part of this static multicast group

977
00:46:37,619 --> 00:46:39,780
again we apply the ternary match

978
00:46:39,780 --> 00:46:41,339
operation on the pivot string and the

979
00:46:41,339 --> 00:46:44,160
complement of the csvm when the match is

980
00:46:44,160 --> 00:46:45,960
zero we know that the multicast group

981
00:46:45,960 --> 00:46:48,540
contains all parts that are required to

982
00:46:48,540 --> 00:46:51,180
serve the beer packets we again order

983
00:46:51,180 --> 00:46:53,220
the table according to the size of the

984
00:46:53,220 --> 00:46:55,079
static multicast group so we get the

985
00:46:55,079 --> 00:46:57,780
most precise multicast group so we do

986
00:46:57,780 --> 00:46:59,460
not send replication to parts that do

987
00:46:59,460 --> 00:47:00,780
not need a package

988
00:47:00,780 --> 00:47:02,520
and when we now have configured

989
00:47:02,520 --> 00:47:04,440
multicast groups and configure ports

990
00:47:04,440 --> 00:47:07,619
clusters of size M and we need 2 to the

991
00:47:07,619 --> 00:47:09,359
power of n-static biology class groups

992
00:47:09,359 --> 00:47:12,660
because we have all combinations and for

993
00:47:12,660 --> 00:47:15,359
our previous example with 32 ports and

994
00:47:15,359 --> 00:47:17,880
our three part clusters of size 11 11

995
00:47:17,880 --> 00:47:21,420
and 10 we need around 5120 static

996
00:47:21,420 --> 00:47:23,280
multicast groups and this is well

997
00:47:23,280 --> 00:47:25,200
feasible on a device like the Intel

998
00:47:25,200 --> 00:47:26,339
Tofino

999
00:47:26,339 --> 00:47:29,400
we implemented this approach it runs at

1000
00:47:29,400 --> 00:47:31,859
100 Cubit per second per part on the

1001
00:47:31,859 --> 00:47:36,020
Intel toofino next slide please

1002
00:47:36,060 --> 00:47:38,339
this approach can be further optimized

1003
00:47:38,339 --> 00:47:41,099
as follows next slide please

1004
00:47:41,099 --> 00:47:42,599
um we have certain assumptions about

1005
00:47:42,599 --> 00:47:44,520
multicast traffic we believe that

1006
00:47:44,520 --> 00:47:46,260
multicast traffic is not completely

1007
00:47:46,260 --> 00:47:49,260
random we mean by that that there is

1008
00:47:49,260 --> 00:47:51,960
some correlation on eager spots so there

1009
00:47:51,960 --> 00:47:54,480
are certain Port combinations that tend

1010
00:47:54,480 --> 00:47:56,400
to occur together and other product

1011
00:47:56,400 --> 00:47:58,319
combinations are less likely to be used

1012
00:47:58,319 --> 00:48:00,480
for single gear package

1013
00:48:00,480 --> 00:48:02,819
um the second assumption is that we only

1014
00:48:02,819 --> 00:48:04,200
have a limited number of static

1015
00:48:04,200 --> 00:48:07,500
multicast groups so we have to comply to

1016
00:48:07,500 --> 00:48:09,359
yourself maximum number that we want to

1017
00:48:09,359 --> 00:48:10,079
use

1018
00:48:10,079 --> 00:48:12,540
and our optimization idea is now the

1019
00:48:12,540 --> 00:48:15,380
following we sample beer packets locally

1020
00:48:15,380 --> 00:48:17,940
and based on the beer bit string we know

1021
00:48:17,940 --> 00:48:19,920
which parts have to be used locally on

1022
00:48:19,920 --> 00:48:22,319
the device to forward the package this

1023
00:48:22,319 --> 00:48:24,180
information is stored in a graph

1024
00:48:24,180 --> 00:48:26,460
structure and then we can apply

1025
00:48:26,460 --> 00:48:28,920
clustering methods to choose appropriate

1026
00:48:28,920 --> 00:48:31,380
configured Port clusters such you know

1027
00:48:31,380 --> 00:48:33,480
in a way such that all of them together

1028
00:48:33,480 --> 00:48:35,819
cover all parts of the switch

1029
00:48:35,819 --> 00:48:39,060
and that part that's statistically and

1030
00:48:39,060 --> 00:48:40,140
occur

1031
00:48:40,140 --> 00:48:41,760
um more likely to get them via package

1032
00:48:41,760 --> 00:48:43,800
have to be used together are in the same

1033
00:48:43,800 --> 00:48:45,599
configured part cluster so that we can

1034
00:48:45,599 --> 00:48:48,359
use a single multicast group to serve

1035
00:48:48,359 --> 00:48:49,859
all of them

1036
00:48:49,859 --> 00:48:52,160
and in the end this means that we need

1037
00:48:52,160 --> 00:48:55,260
less configure Port clusters per via

1038
00:48:55,260 --> 00:48:57,780
packet on average and this reduces the

1039
00:48:57,780 --> 00:48:59,819
required number of recirculations

1040
00:48:59,819 --> 00:49:02,460
next slide please

1041
00:49:02,460 --> 00:49:04,560
um here's a small example and when we

1042
00:49:04,560 --> 00:49:07,020
get via traffic with around 4.5 Next

1043
00:49:07,020 --> 00:49:09,180
Tops on average in our old

1044
00:49:09,180 --> 00:49:11,280
implementation this required 3.5

1045
00:49:11,280 --> 00:49:13,380
recirculation leverage which is the Red

1046
00:49:13,380 --> 00:49:17,099
Bar in the graphic here and in our new

1047
00:49:17,099 --> 00:49:19,140
approach with the optimization when we

1048
00:49:19,140 --> 00:49:21,060
have highly correlated multicast traffic

1049
00:49:21,060 --> 00:49:22,920
which means that there's a high

1050
00:49:22,920 --> 00:49:25,079
correlation between equals parts and

1051
00:49:25,079 --> 00:49:27,720
beer packets then we need almost zero

1052
00:49:27,720 --> 00:49:29,819
rest circulations with around 1000

1053
00:49:29,819 --> 00:49:31,500
static multicast groups that's the bar

1054
00:49:31,500 --> 00:49:34,920
on the right and when we have less

1055
00:49:34,920 --> 00:49:36,839
correlated multicast traffic which means

1056
00:49:36,839 --> 00:49:39,540
that there's some Randomness within the

1057
00:49:39,540 --> 00:49:41,700
use of eager spots for beer packets then

1058
00:49:41,700 --> 00:49:43,500
we still need around a scenery

1059
00:49:43,500 --> 00:49:45,839
circulation with 1000 static multicast

1060
00:49:45,839 --> 00:49:48,900
groups instead of the 3.5 recirculations

1061
00:49:48,900 --> 00:49:51,180
now about approach

1062
00:49:51,180 --> 00:49:53,880
next slide please

1063
00:49:53,880 --> 00:49:56,819
so to conclude this talk we presented

1064
00:49:56,819 --> 00:49:58,500
the mechanism to forward beer traffic

1065
00:49:58,500 --> 00:50:01,200
with only a few iterations instead of

1066
00:50:01,200 --> 00:50:03,480
the number of next talks and to that end

1067
00:50:03,480 --> 00:50:06,180
we choose so-called configure podcasters

1068
00:50:06,180 --> 00:50:08,760
and then apply an iterative processing

1069
00:50:08,760 --> 00:50:11,339
where in each iteration we select the

1070
00:50:11,339 --> 00:50:12,839
configure Port class that it needs a

1071
00:50:12,839 --> 00:50:15,240
packet copy and then we send a packet to

1072
00:50:15,240 --> 00:50:17,460
all required Parts within this configure

1073
00:50:17,460 --> 00:50:19,200
Port cluster in one shot

1074
00:50:19,200 --> 00:50:21,359
the Second Step may be achieved through

1075
00:50:21,359 --> 00:50:23,460
predefined internal multicast groups as

1076
00:50:23,460 --> 00:50:25,920
in the case with Intel Tofino however

1077
00:50:25,920 --> 00:50:27,900
these multicast groups are static they

1078
00:50:27,900 --> 00:50:30,000
are not Dynamic so we do not need any

1079
00:50:30,000 --> 00:50:31,440
Dynamic state

1080
00:50:31,440 --> 00:50:33,660
and this may also be done differently

1081
00:50:33,660 --> 00:50:35,460
depending on the technology so when

1082
00:50:35,460 --> 00:50:36,960
there's another replication mechanism

1083
00:50:36,960 --> 00:50:38,880
that's more efficient then multicast

1084
00:50:38,880 --> 00:50:41,280
groups this can be also used

1085
00:50:41,280 --> 00:50:43,680
with this mechanism we have a maximum

1086
00:50:43,680 --> 00:50:45,599
number of iterations which is bounded by

1087
00:50:45,599 --> 00:50:47,520
the maximum number of block clusters for

1088
00:50:47,520 --> 00:50:50,579
example three instead of 32 and we can

1089
00:50:50,579 --> 00:50:53,160
even further optimize this approach by

1090
00:50:53,160 --> 00:50:54,720
packet sampling and then applying

1091
00:50:54,720 --> 00:50:57,720
machine learning and to get appropriate

1092
00:50:57,720 --> 00:51:00,059
configured podcasters we implemented

1093
00:51:00,059 --> 00:51:02,579
this at line rate at Intel Tofino and

1094
00:51:02,579 --> 00:51:04,740
more details can be found in our paper

1095
00:51:04,740 --> 00:51:06,599
here at the pre-print which is currently

1096
00:51:06,599 --> 00:51:09,540
under review and we are happy to discuss

1097
00:51:09,540 --> 00:51:12,000
any questions however we have to see how

1098
00:51:12,000 --> 00:51:13,579
this will work when I don't need you

1099
00:51:13,579 --> 00:51:16,760
thank you

1100
00:51:20,700 --> 00:51:24,660
okay so Stefan can you hear us oh no

1101
00:51:24,660 --> 00:51:28,319
oh okay so excellent questions

1102
00:51:28,319 --> 00:51:31,339
nothing on the queue

1103
00:51:34,020 --> 00:51:37,079
all right so I would have uh

1104
00:51:37,079 --> 00:51:38,579
yeah Greg

1105
00:51:38,579 --> 00:51:41,220
I said nothing remote and nothing in the

1106
00:51:41,220 --> 00:51:42,599
room

1107
00:51:42,599 --> 00:51:45,839
so I have one question the rest was

1108
00:51:45,839 --> 00:51:48,059
pretty clear uh when I look at the

1109
00:51:48,059 --> 00:51:50,359
picture

1110
00:51:51,440 --> 00:51:53,400
why is the orange and the blue

1111
00:51:53,400 --> 00:51:55,680
overlapping here is there any Rhyme or

1112
00:51:55,680 --> 00:51:57,720
Reason to that stuff

1113
00:51:57,720 --> 00:51:59,579
um because maybe there are certain

1114
00:51:59,579 --> 00:52:02,640
multicast groups or certain number of

1115
00:52:02,640 --> 00:52:04,920
peer packets that have

1116
00:52:04,920 --> 00:52:07,800
um a subset in the yellow cluster

1117
00:52:07,800 --> 00:52:09,540
configurable part cluster but there are

1118
00:52:09,540 --> 00:52:11,220
also some beer packets that need parts

1119
00:52:11,220 --> 00:52:12,599
of the second one

1120
00:52:12,599 --> 00:52:15,540
and as we configure all possible

1121
00:52:15,540 --> 00:52:18,300
configuration combinations of Parts when

1122
00:52:18,300 --> 00:52:20,220
we have disjoint

1123
00:52:20,220 --> 00:52:22,740
um configure Park clusters we need at

1124
00:52:22,740 --> 00:52:24,780
least one recirculation when we need to

1125
00:52:24,780 --> 00:52:26,880
have a packet that needs parts of both

1126
00:52:26,880 --> 00:52:29,700
clusters and when we can do overlapping

1127
00:52:29,700 --> 00:52:32,220
clusters then there's the chance that we

1128
00:52:32,220 --> 00:52:34,140
need no rest circulation at all

1129
00:52:34,140 --> 00:52:36,599
okay so basically you had enough ports

1130
00:52:36,599 --> 00:52:38,280
and you chose the sizes that were by

1131
00:52:38,280 --> 00:52:40,079
they do not have to overlap right you

1132
00:52:40,079 --> 00:52:41,540
have both possibilities

1133
00:52:41,540 --> 00:52:44,579
exactly okay okay yeah

1134
00:52:44,579 --> 00:52:47,480
we got one question

1135
00:52:48,420 --> 00:52:51,059
so is that Sandy no it's it's Jeffrey

1136
00:52:51,059 --> 00:52:53,460
the mic go ahead Jeffrey from juniper

1137
00:52:53,460 --> 00:52:56,220
um so if I understand this correctly the

1138
00:52:56,220 --> 00:52:59,579
each cluster is kind of like a line card

1139
00:52:59,579 --> 00:53:03,059
it's on some routers

1140
00:53:03,059 --> 00:53:06,359
um another thing is the so inside each

1141
00:53:06,359 --> 00:53:10,740
cluster it seems that your

1142
00:53:10,740 --> 00:53:15,000
you may be doing uh like a string P

1143
00:53:15,000 --> 00:53:18,359
string lookup on the entirety or just on

1144
00:53:18,359 --> 00:53:21,839
these bits for that cluster only and

1145
00:53:21,839 --> 00:53:26,300
both uh ideas uh have been

1146
00:53:26,300 --> 00:53:30,260
documented or in some in some

1147
00:53:30,260 --> 00:53:34,440
scenarios in some companies uh internal

1148
00:53:34,440 --> 00:53:35,880
implementations

1149
00:53:35,880 --> 00:53:39,180
um we can discuss uh further offline and

1150
00:53:39,180 --> 00:53:41,099
additionally

1151
00:53:41,099 --> 00:53:43,619
I guess it's really depending on the

1152
00:53:43,619 --> 00:53:45,780
implementation I know there's some

1153
00:53:45,780 --> 00:53:47,280
implementation

1154
00:53:47,280 --> 00:53:52,380
do not require a recirculation for each

1155
00:53:52,380 --> 00:53:56,220
iteration of that lookup that that bit

1156
00:53:56,220 --> 00:53:59,880
in the bit string so indeed I guess for

1157
00:53:59,880 --> 00:54:04,200
for some Hardware each iteration what

1158
00:54:04,200 --> 00:54:06,300
that does require re-segration and in

1159
00:54:06,300 --> 00:54:10,980
that case this optimization will help

1160
00:54:10,980 --> 00:54:13,619
yeah definitely so we are a bit Limited

1161
00:54:13,619 --> 00:54:15,240
in the number of table lookups that we

1162
00:54:15,240 --> 00:54:18,000
can do before and on the Tofino and so

1163
00:54:18,000 --> 00:54:21,300
we do not have a way to make 30 lookups

1164
00:54:21,300 --> 00:54:23,520
in one iteration for example so we have

1165
00:54:23,520 --> 00:54:26,760
to do these recirculations and um this

1166
00:54:26,760 --> 00:54:29,400
is a way to optimize how we do these

1167
00:54:29,400 --> 00:54:31,200
three circulations but I'm really

1168
00:54:31,200 --> 00:54:33,059
interested in more information about the

1169
00:54:33,059 --> 00:54:35,280
line card capabilities of existing B

1170
00:54:35,280 --> 00:54:37,800
implementations

1171
00:54:37,800 --> 00:54:40,579
all right guys

1172
00:54:41,099 --> 00:54:43,319
yes can you hear me

1173
00:54:43,319 --> 00:54:45,300
yes we can

1174
00:54:45,300 --> 00:54:46,859
um yeah I just had a quick question you

1175
00:54:46,859 --> 00:54:49,680
know on the uh so P4 I think one of the

1176
00:54:49,680 --> 00:54:52,619
major advantages of P4 does help with

1177
00:54:52,619 --> 00:54:55,619
the pipeline programming and staging

1178
00:54:55,619 --> 00:54:57,140
um the ability to eliminate

1179
00:54:57,140 --> 00:55:00,180
recirculation that happens on the um on

1180
00:55:00,180 --> 00:55:01,500
the Asic

1181
00:55:01,500 --> 00:55:03,839
um you know by doing just the

1182
00:55:03,839 --> 00:55:06,359
recirculate uh you know the uh

1183
00:55:06,359 --> 00:55:10,220
programming with P4 are you able to

1184
00:55:10,220 --> 00:55:14,460
eliminate the uh pipelining or eliminate

1185
00:55:14,460 --> 00:55:16,020
recirculation

1186
00:55:16,020 --> 00:55:18,300
I think have you have you tried without

1187
00:55:18,300 --> 00:55:20,220
having to um

1188
00:55:20,220 --> 00:55:22,440
uh deal with the randomness I think like

1189
00:55:22,440 --> 00:55:23,579
you had to

1190
00:55:23,579 --> 00:55:25,559
um in in your one of your last slides

1191
00:55:25,559 --> 00:55:28,859
you mentioned that you're working on how

1192
00:55:28,859 --> 00:55:31,920
to uh the optimization so if you without

1193
00:55:31,920 --> 00:55:33,960
the optimization and if you just

1194
00:55:33,960 --> 00:55:36,599
strictly did everything just with P4 and

1195
00:55:36,599 --> 00:55:39,359
and and with the pipeline programming

1196
00:55:39,359 --> 00:55:41,579
were you able to get to a point where

1197
00:55:41,579 --> 00:55:44,339
you can eliminate uh recirculation

1198
00:55:44,339 --> 00:55:47,099
without having the optimization

1199
00:55:47,099 --> 00:55:50,040
I think um well yeah thank you thank you

1200
00:55:50,040 --> 00:55:51,720
for the question um of course you could

1201
00:55:51,720 --> 00:55:54,200
do it all without recirculation by just

1202
00:55:54,200 --> 00:55:56,940
copying the packet to each egress Port

1203
00:55:56,940 --> 00:56:00,000
that has a potential receiver and then

1204
00:56:00,000 --> 00:56:01,819
dropping the packet in the egress when

1205
00:56:01,819 --> 00:56:04,800
the receiver is not needed but in this

1206
00:56:04,800 --> 00:56:07,140
way you will block the response so when

1207
00:56:07,140 --> 00:56:10,020
you get 100 Gig and each Port has a

1208
00:56:10,020 --> 00:56:12,000
receiver at the end and we make a packet

1209
00:56:12,000 --> 00:56:14,940
copy to each Port then the whole switch

1210
00:56:14,940 --> 00:56:17,520
is full and we cannot have any other

1211
00:56:17,520 --> 00:56:18,780
traffic

1212
00:56:18,780 --> 00:56:21,900
um that's why we need a way to determine

1213
00:56:21,900 --> 00:56:24,839
before we put the packet in egress spots

1214
00:56:24,839 --> 00:56:27,780
which Ingress Sports needs a copy and

1215
00:56:27,780 --> 00:56:30,000
this is quite difficult and prefer based

1216
00:56:30,000 --> 00:56:31,980
on the header length of the beer bit

1217
00:56:31,980 --> 00:56:35,880
string and at least we did not find a

1218
00:56:35,880 --> 00:56:37,800
more efficient way as we just presented

1219
00:56:37,800 --> 00:56:39,960
here

1220
00:56:39,960 --> 00:56:42,540
thank you

1221
00:56:42,540 --> 00:56:44,520
okay one more question from me because

1222
00:56:44,520 --> 00:56:46,559
I'm thinking about the stuff more and

1223
00:56:46,559 --> 00:56:49,140
more so when you were did the static

1224
00:56:49,140 --> 00:56:52,740
multi cost group calculation

1225
00:56:52,740 --> 00:56:56,280
um it seems low to me so is the static

1226
00:56:56,280 --> 00:57:00,059
multicast group per cluster

1227
00:57:00,059 --> 00:57:03,119
so can you assign basically the same

1228
00:57:03,119 --> 00:57:05,579
multicast group in terms of an address

1229
00:57:05,579 --> 00:57:07,619
twice

1230
00:57:07,619 --> 00:57:09,180
for each cluster and that's how you're

1231
00:57:09,180 --> 00:57:10,980
counting it so you reuse basically

1232
00:57:10,980 --> 00:57:12,720
multicast addresses or are they all

1233
00:57:12,720 --> 00:57:15,180
unique across all the Clusters

1234
00:57:15,180 --> 00:57:17,819
um it's not a multicast address it's an

1235
00:57:17,819 --> 00:57:20,819
internal way of telling the Tofino to do

1236
00:57:20,819 --> 00:57:22,819
a packet replication to certain parts

1237
00:57:22,819 --> 00:57:25,740
and basically we tell it the control

1238
00:57:25,740 --> 00:57:28,260
plane give us a multicast group for

1239
00:57:28,260 --> 00:57:30,660
these parts then we get a number and

1240
00:57:30,660 --> 00:57:32,700
based on this number we can later tell

1241
00:57:32,700 --> 00:57:34,680
the Tofino to replicate the packet to

1242
00:57:34,680 --> 00:57:38,700
this port and we have up to 2 to the

1243
00:57:38,700 --> 00:57:40,920
power of 16 multicast groups available

1244
00:57:40,920 --> 00:57:45,300
on the Tofino and on our example on one

1245
00:57:45,300 --> 00:57:46,800
of the slides with these three

1246
00:57:46,800 --> 00:57:49,200
configurable podcasters we used five

1247
00:57:49,200 --> 00:57:51,300
thousand of them

1248
00:57:51,300 --> 00:57:54,780
so that's why but what you're showing

1249
00:57:54,780 --> 00:57:57,720
here is really that is the identifier is

1250
00:57:57,720 --> 00:57:59,700
unique across the clusters right okay

1251
00:57:59,700 --> 00:58:01,920
yeah yeah across the whole across all

1252
00:58:01,920 --> 00:58:05,760
clusters so yeah um okay yeah

1253
00:58:05,760 --> 00:58:07,500
uh I have a question

1254
00:58:07,500 --> 00:58:10,319
so uh when you say internal multicast

1255
00:58:10,319 --> 00:58:11,940
group these are actually

1256
00:58:11,940 --> 00:58:14,760
group addresses like ipv4 multicast

1257
00:58:14,760 --> 00:58:16,680
addressing is built into the structure

1258
00:58:16,680 --> 00:58:19,440
of Tofino or what do you mean no this is

1259
00:58:19,440 --> 00:58:21,480
a 16-bit number

1260
00:58:21,480 --> 00:58:24,000
which is called multicast group from the

1261
00:58:24,000 --> 00:58:26,160
Tofino because it behaves like a magikas

1262
00:58:26,160 --> 00:58:29,598
group as it replicates packets

1263
00:58:31,559 --> 00:58:34,079
of an index table pointing to a group of

1264
00:58:34,079 --> 00:58:37,980
output ports yeah thank you

1265
00:58:37,980 --> 00:58:40,380
okay so basically when you try to do two

1266
00:58:40,380 --> 00:58:41,940
clusters you ran out of those

1267
00:58:41,940 --> 00:58:44,299
identifiers size

1268
00:58:44,299 --> 00:58:47,180
this is for our clusters

1269
00:58:47,180 --> 00:58:49,920
but oh yeah when it all went on the 32

1270
00:58:49,920 --> 00:58:52,260
Port switch we cannot have only two

1271
00:58:52,260 --> 00:58:54,299
clusters with each 16 Parts because we

1272
00:58:54,299 --> 00:58:56,700
only have two policies next time okay

1273
00:58:56,700 --> 00:58:58,380
cool yeah that was what I was kind of

1274
00:58:58,380 --> 00:59:01,640
aiming at thank you yeah very clear

1275
00:59:02,640 --> 00:59:06,119
any more questions observations

1276
00:59:06,119 --> 00:59:09,500
yeah super work thanks

1277
00:59:19,819 --> 00:59:23,058
may we

1278
00:59:25,260 --> 00:59:26,640
all right

1279
00:59:26,640 --> 00:59:27,780
so

1280
00:59:27,780 --> 00:59:31,200
uh I had this uh earlier version I think

1281
00:59:31,200 --> 00:59:33,839
two years ago so be back here now next

1282
00:59:33,839 --> 00:59:36,200
slide

1283
00:59:36,780 --> 00:59:39,319
coming

1284
00:59:39,480 --> 00:59:42,240
okay so we continue to think that

1285
00:59:42,240 --> 00:59:43,500
traffic engineering is really very

1286
00:59:43,500 --> 00:59:46,799
important right so we've got brt out

1287
00:59:46,799 --> 00:59:47,460
um

1288
00:59:47,460 --> 00:59:50,819
and um we're getting back at that net uh

1289
00:59:50,819 --> 00:59:52,500
to all the good things where we could

1290
00:59:52,500 --> 00:59:55,799
actually for for multicast use brte

1291
00:59:55,799 --> 00:59:57,660
um and I'm not going to to read through

1292
00:59:57,660 --> 01:00:00,119
the long list I I think most people uh

1293
01:00:00,119 --> 01:00:01,980
hopefully should know them

1294
01:00:01,980 --> 01:00:04,020
um and then through um working through

1295
01:00:04,020 --> 01:00:06,660
brte I think we got to the point where I

1296
01:00:06,660 --> 01:00:08,400
was happy if it was working in in small

1297
01:00:08,400 --> 01:00:10,079
scale and then everybody was asking me

1298
01:00:10,079 --> 01:00:12,119
about large scale and to make it larger

1299
01:00:12,119 --> 01:00:14,460
and everything and so then you know the

1300
01:00:14,460 --> 01:00:17,880
ideas it came around on uh how what the

1301
01:00:17,880 --> 01:00:19,440
root cause of the problem is and it's

1302
01:00:19,440 --> 01:00:20,940
really what I would call now the flat

1303
01:00:20,940 --> 01:00:23,339
bit strings right so brt was designed to

1304
01:00:23,339 --> 01:00:25,680
be as much as possible

1305
01:00:25,680 --> 01:00:27,299
um using the same hardware for wooding

1306
01:00:27,299 --> 01:00:30,359
as beer which means one single flat bit

1307
01:00:30,359 --> 01:00:33,660
string and now we think that we can do

1308
01:00:33,660 --> 01:00:35,579
better when we are taking into account

1309
01:00:35,579 --> 01:00:37,520
that we're 10 years after the original

1310
01:00:37,520 --> 01:00:39,780
redesign our Hardware forwarding planes

1311
01:00:39,780 --> 01:00:41,700
hopefully can do better

1312
01:00:41,700 --> 01:00:43,859
um and we think that we can encode trees

1313
01:00:43,859 --> 01:00:46,200
more efficient than brte

1314
01:00:46,200 --> 01:00:48,780
um make larger headers easier to process

1315
01:00:48,780 --> 01:00:51,299
and make it easier to Auto configure

1316
01:00:51,299 --> 01:00:53,220
next slide

1317
01:00:53,220 --> 01:00:54,720
and this is by the way highly

1318
01:00:54,720 --> 01:00:56,880
experimental right so this is by far not

1319
01:00:56,880 --> 01:00:58,440
hey here is a new great solution

1320
01:00:58,440 --> 01:01:00,540
everything is done but we're at the end

1321
01:01:00,540 --> 01:01:03,119
of a longer road so on the right hand

1322
01:01:03,119 --> 01:01:05,280
side what you're seeing is the multicast

1323
01:01:05,280 --> 01:01:08,180
tree that we want to send a packet over

1324
01:01:08,180 --> 01:01:10,740
and instead of having a flat bit string

1325
01:01:10,740 --> 01:01:13,400
we're now encoding into the address

1326
01:01:13,400 --> 01:01:17,819
field of the packet for each forwarding

1327
01:01:17,819 --> 01:01:21,119
router a separate bit string and then we

1328
01:01:21,119 --> 01:01:22,859
are ultimately setting up the tree that

1329
01:01:22,859 --> 01:01:25,260
way and what we're doing is that the

1330
01:01:25,260 --> 01:01:28,020
serialized encoding is updated on every

1331
01:01:28,020 --> 01:01:31,980
hop so that the Hop that is processing

1332
01:01:31,980 --> 01:01:33,900
it only needs to look at its own bit

1333
01:01:33,900 --> 01:01:36,299
string and then for every copy that it

1334
01:01:36,299 --> 01:01:40,559
does it is simply updating the offset

1335
01:01:40,559 --> 01:01:43,140
and the links to point to the downstream

1336
01:01:43,140 --> 01:01:44,400
neighbors

1337
01:01:44,400 --> 01:01:46,440
um what we call recursive unit which is

1338
01:01:46,440 --> 01:01:48,240
the bit string and then of course all

1339
01:01:48,240 --> 01:01:49,980
the downstream neighbors

1340
01:01:49,980 --> 01:01:53,280
um bit strings themselves next slide

1341
01:01:53,280 --> 01:01:56,640
this is of course very high level

1342
01:01:56,640 --> 01:01:58,559
um here's the encoding

1343
01:01:58,559 --> 01:02:00,359
um and the processing on every hop so

1344
01:02:00,359 --> 01:02:03,180
you see on the upper row you see the

1345
01:02:03,180 --> 01:02:04,980
processing on router a which would be

1346
01:02:04,980 --> 01:02:07,859
the root and the root of course sees the

1347
01:02:07,859 --> 01:02:09,480
whole tree the first bit string on the

1348
01:02:09,480 --> 01:02:12,240
left BSA is the bit string for the root

1349
01:02:12,240 --> 01:02:14,880
in this case it is making two copies one

1350
01:02:14,880 --> 01:02:18,960
two router B one for router c

1351
01:02:18,960 --> 01:02:21,900
um and um to do that it examines only

1352
01:02:21,900 --> 01:02:23,940
its own bit string then for the

1353
01:02:23,940 --> 01:02:26,160
serialization we need to have the length

1354
01:02:26,160 --> 01:02:29,760
of the subtrees for um B and C

1355
01:02:29,760 --> 01:02:32,280
um one is actually derived from reading

1356
01:02:32,280 --> 01:02:33,859
the ru links

1357
01:02:33,859 --> 01:02:36,540
very quickly before you kind of lose

1358
01:02:36,540 --> 01:02:38,819
everyone everyone in the room possibly

1359
01:02:38,819 --> 01:02:41,520
me as well but you describe only trees

1360
01:02:41,520 --> 01:02:43,859
which have maximum fan out of two right

1361
01:02:43,859 --> 01:02:46,799
no no this is this is arbitrarily many

1362
01:02:46,799 --> 01:02:49,859
so um in this case we're just showing

1363
01:02:49,859 --> 01:02:52,380
two bits so it can be many bits and the

1364
01:02:52,380 --> 01:02:56,000
the AF field is an array okay so maybe

1365
01:02:56,000 --> 01:03:00,480
an example with two so uh two AF entries

1366
01:03:00,480 --> 01:03:03,180
all clear thanks so this is an area and

1367
01:03:03,180 --> 01:03:06,180
we're saving one area element because we

1368
01:03:06,180 --> 01:03:08,040
can calculate the length of the last

1369
01:03:08,040 --> 01:03:09,780
recursive unit

1370
01:03:09,780 --> 01:03:12,359
um because we can take the global Ru

1371
01:03:12,359 --> 01:03:14,460
links field and do the calculation that

1372
01:03:14,460 --> 01:03:16,980
is in that field so obviously you know

1373
01:03:16,980 --> 01:03:18,720
this this takes longer than the the

1374
01:03:18,720 --> 01:03:20,640
first slide deck hopefully the visuals

1375
01:03:20,640 --> 01:03:22,740
are somewhat helpful but yeah

1376
01:03:22,740 --> 01:03:25,140
um I think uh we'll take more time to

1377
01:03:25,140 --> 01:03:26,460
breathe in

1378
01:03:26,460 --> 01:03:28,799
um but the the main point is every

1379
01:03:28,799 --> 01:03:31,380
router only needs to look at its own bit

1380
01:03:31,380 --> 01:03:33,599
string and that bit string only needs as

1381
01:03:33,599 --> 01:03:35,640
many bits as that router has interfaces

1382
01:03:35,640 --> 01:03:39,980
so to speak or host neighbors next slide

1383
01:03:39,980 --> 01:03:42,420
right so this is a little bit different

1384
01:03:42,420 --> 01:03:44,640
a view of the same thing right obviously

1385
01:03:44,640 --> 01:03:46,920
this could replace the bitstring field

1386
01:03:46,920 --> 01:03:50,640
of an RFC 8296 packet header

1387
01:03:50,640 --> 01:03:51,780
um and then the cost of the

1388
01:03:51,780 --> 01:03:53,640
serialization right we love the fact

1389
01:03:53,640 --> 01:03:56,280
that we only got every router's bit

1390
01:03:56,280 --> 01:03:58,619
string that we need not the bit strings

1391
01:03:58,619 --> 01:04:00,240
from any router where the tree doesn't

1392
01:04:00,240 --> 01:04:02,760
go through but the cost of course are

1393
01:04:02,760 --> 01:04:05,220
exactly these addressing fields that are

1394
01:04:05,220 --> 01:04:07,680
telling us the length of the subtrees

1395
01:04:07,680 --> 01:04:09,960
and then the global Ru links and are you

1396
01:04:09,960 --> 01:04:12,660
offset so this is kind of the overhead

1397
01:04:12,660 --> 01:04:17,339
for the savings that we get next slide

1398
01:04:17,339 --> 01:04:20,220
and so we did some simulation some

1399
01:04:20,220 --> 01:04:22,319
calculation for large-scale Network so

1400
01:04:22,319 --> 01:04:24,720
this is uh I think uh

1401
01:04:24,720 --> 01:04:28,079
um uh Beijing Mobile in in China uh with

1402
01:04:28,079 --> 01:04:29,940
a couple of uh hops right so every hop

1403
01:04:29,940 --> 01:04:32,040
is individually in there and then this

1404
01:04:32,040 --> 01:04:34,799
comparison actually not even against brt

1405
01:04:34,799 --> 01:04:36,720
but against beer

1406
01:04:36,720 --> 01:04:38,520
and the total number of replication

1407
01:04:38,520 --> 01:04:42,059
needed to reach a certain uh random

1408
01:04:42,059 --> 01:04:43,920
subset of receivers and then going

1409
01:04:43,920 --> 01:04:45,780
through all possible random subset of

1410
01:04:45,780 --> 01:04:48,000
receivers starting from a small number

1411
01:04:48,000 --> 01:04:50,760
going to a very large number so and of

1412
01:04:50,760 --> 01:04:53,339
course these type of simulation these

1413
01:04:53,339 --> 01:04:55,680
type of analysis we need more from to to

1414
01:04:55,680 --> 01:04:58,079
actually vet than the scalability

1415
01:04:58,079 --> 01:05:01,859
benefit of this mechanism next slide

1416
01:05:01,859 --> 01:05:04,260
so there's a lot of very small writing

1417
01:05:04,260 --> 01:05:07,559
but I see that you basically achieved it

1418
01:05:07,559 --> 01:05:10,619
even with a very small bit mask size of

1419
01:05:10,619 --> 01:05:12,960
256 bits the whole simulation correct

1420
01:05:12,960 --> 01:05:15,359
that's that's yeah so I I haven't been

1421
01:05:15,359 --> 01:05:16,980
able to validate this this is what my

1422
01:05:16,980 --> 01:05:18,359
colleagues and Beijing have done right

1423
01:05:18,359 --> 01:05:20,940
so obviously the more we get into that

1424
01:05:20,940 --> 01:05:23,099
assessment uh the more we'll we'll have

1425
01:05:23,099 --> 01:05:24,960
to revisit these numbers and and look

1426
01:05:24,960 --> 01:05:28,020
for different topologies as well yeah

1427
01:05:28,020 --> 01:05:30,900
next slide okay okay so the three big

1428
01:05:30,900 --> 01:05:33,180
things right so replication efficiency

1429
01:05:33,180 --> 01:05:35,280
for small trees and large networks right

1430
01:05:35,280 --> 01:05:37,020
so and it's easier to make the

1431
01:05:37,020 --> 01:05:39,660
comparison with beer because brte with

1432
01:05:39,660 --> 01:05:41,040
all these different optimizations is

1433
01:05:41,040 --> 01:05:43,020
it's very difficult right imagine you

1434
01:05:43,020 --> 01:05:45,900
have a network with 10 000 bfer and

1435
01:05:45,900 --> 01:05:47,400
you've just got a bit string length of

1436
01:05:47,400 --> 01:05:50,160
256 right so even

1437
01:05:50,160 --> 01:05:52,319
um replication to a small set of 10 20

1438
01:05:52,319 --> 01:05:54,780
30 or 40 random destinations a large

1439
01:05:54,780 --> 01:05:57,720
Network right across that Network may

1440
01:05:57,720 --> 01:06:01,020
require up to 40 uh packet copies in BR

1441
01:06:01,020 --> 01:06:03,240
and brte because they're all in

1442
01:06:03,240 --> 01:06:04,980
different bits drinks right so you have

1443
01:06:04,980 --> 01:06:08,160
20 256 bits so that's 40 different bit

1444
01:06:08,160 --> 01:06:11,760
strings so even for small trees you may

1445
01:06:11,760 --> 01:06:14,700
need a large number of copies right and

1446
01:06:14,700 --> 01:06:16,559
so why do we care about small trees and

1447
01:06:16,559 --> 01:06:18,119
large networks well that's what we did

1448
01:06:18,119 --> 01:06:21,240
started in 1994 right which we called it

1449
01:06:21,240 --> 01:06:22,740
Pim sparse mode right we want to have

1450
01:06:22,740 --> 01:06:25,140
efficient delivery small trees in large

1451
01:06:25,140 --> 01:06:26,760
networks and that hasn't changed just

1452
01:06:26,760 --> 01:06:28,799
because we want to go stateless so

1453
01:06:28,799 --> 01:06:31,859
that's why small trees are actually

1454
01:06:31,859 --> 01:06:34,559
quite interesting next slide

1455
01:06:34,559 --> 01:06:36,299
so then we had this fun discussion with

1456
01:06:36,299 --> 01:06:39,000
Dino he isn't even here so that was

1457
01:06:39,000 --> 01:06:40,740
basically I was trying to be really

1458
01:06:40,740 --> 01:06:42,960
provocative and that's the red warning

1459
01:06:42,960 --> 01:06:44,640
offensive technology Right

1460
01:06:44,640 --> 01:06:47,039
congratulations nothing new keep on

1461
01:06:47,039 --> 01:06:49,319
right so um

1462
01:06:49,319 --> 01:06:52,500
consider really why don't we have bit

1463
01:06:52,500 --> 01:06:55,079
strings that are you know 10 000 bits

1464
01:06:55,079 --> 01:06:58,140
long right what's bad about it so and

1465
01:06:58,140 --> 01:07:00,059
then go through the reason why it does

1466
01:07:00,059 --> 01:07:01,740
or does not work right so in the first

1467
01:07:01,740 --> 01:07:03,720
place I think it would work perfectly

1468
01:07:03,720 --> 01:07:06,180
fine from the benefit side okay it's one

1469
01:07:06,180 --> 01:07:08,880
kilobyte worth of bit strings one

1470
01:07:08,880 --> 01:07:12,599
kilobyte worth of data but we still only

1471
01:07:12,599 --> 01:07:15,059
have an overhead of 50 we're sending it

1472
01:07:15,059 --> 01:07:17,819
to a large number of bits 10 000

1473
01:07:17,819 --> 01:07:20,099
receivers and we have an overhead of two

1474
01:07:20,099 --> 01:07:21,960
times right if we do Ingress replication

1475
01:07:21,960 --> 01:07:24,359
it's an overhead of ten thousand or

1476
01:07:24,359 --> 01:07:27,059
right so if we go Pim sparse mode sure

1477
01:07:27,059 --> 01:07:29,039
we only have an overhead of one but then

1478
01:07:29,039 --> 01:07:31,500
all you know the stateful operation so

1479
01:07:31,500 --> 01:07:33,599
why didn't we like large headers up so

1480
01:07:33,599 --> 01:07:35,880
far I don't think the MTU is the issue

1481
01:07:35,880 --> 01:07:39,000
right one thousand byte more MTU if we

1482
01:07:39,000 --> 01:07:40,859
start with data center I've I've worked

1483
01:07:40,859 --> 01:07:43,140
with so many uh crazy networks with

1484
01:07:43,140 --> 01:07:45,660
really uh you know gigantic packet sizes

1485
01:07:45,660 --> 01:07:46,380
right

1486
01:07:46,380 --> 01:07:48,299
I don't even think it is long-term the

1487
01:07:48,299 --> 01:07:50,460
accessibility of the header right we've

1488
01:07:50,460 --> 01:07:53,099
started with header from 128 byte now

1489
01:07:53,099 --> 01:07:55,980
we're at 512 byte would say we can

1490
01:07:55,980 --> 01:07:58,980
access one kilobyte of of header in the

1491
01:07:58,980 --> 01:08:01,680
forwarding plane in 10 years but the

1492
01:08:01,680 --> 01:08:04,740
problem that we have is we don't want to

1493
01:08:04,740 --> 01:08:08,819
process 10 000 bits worth of you know

1494
01:08:08,819 --> 01:08:10,920
stuff when we only need to replicate to

1495
01:08:10,920 --> 01:08:13,500
10 outgoing interfaces right if we only

1496
01:08:13,500 --> 01:08:15,660
want to replicate to 10 outgoing

1497
01:08:15,660 --> 01:08:17,698
interfaces we should only have to look

1498
01:08:17,698 --> 01:08:20,520
and process something that is

1499
01:08:20,520 --> 01:08:21,779
proportional to the number of

1500
01:08:21,779 --> 01:08:24,060
replications we really can do and that

1501
01:08:24,060 --> 01:08:26,040
is exactly what RBS gives us right we're

1502
01:08:26,040 --> 01:08:28,319
only looking always at a local bit

1503
01:08:28,319 --> 01:08:30,479
string and all the other header is just

1504
01:08:30,479 --> 01:08:32,939
payload that you know some other router

1505
01:08:32,939 --> 01:08:37,519
down the tree will look into next slide

1506
01:08:38,399 --> 01:08:40,580
foreign

1507
01:08:43,880 --> 01:08:48,779
I think we jammed okay no here so Auto

1508
01:08:48,779 --> 01:08:50,698
configuration right so I mean I started

1509
01:08:50,698 --> 01:08:53,100
brte I'm not really a fan of centralized

1510
01:08:53,100 --> 01:08:54,660
controllers right I love traffic

1511
01:08:54,660 --> 01:08:56,640
engineering but I would love to have you

1512
01:08:56,640 --> 01:08:58,859
know as lightweight as possible traffic

1513
01:08:58,859 --> 01:09:00,420
engineering

1514
01:09:00,420 --> 01:09:02,339
um in the source router in the first top

1515
01:09:02,339 --> 01:09:04,920
router doing explicit Source route and I

1516
01:09:04,920 --> 01:09:06,420
don't want to have to configure new

1517
01:09:06,420 --> 01:09:08,640
address basis on every node and with

1518
01:09:08,640 --> 01:09:11,460
this mechanism RBS we really only need

1519
01:09:11,460 --> 01:09:14,100
to have every router locally assigning a

1520
01:09:14,100 --> 01:09:16,380
number from 1 to 20 for all the 20 bits

1521
01:09:16,380 --> 01:09:18,660
of its interfaces and don't have to have

1522
01:09:18,660 --> 01:09:21,779
global address space like the bif-t ID

1523
01:09:21,779 --> 01:09:26,460
that we need to do sorry bfr ID that we

1524
01:09:26,460 --> 01:09:28,859
need to do now in beer and beer to e to

1525
01:09:28,859 --> 01:09:30,779
basically split up

1526
01:09:30,779 --> 01:09:32,640
um you know the identifiers of routers

1527
01:09:32,640 --> 01:09:34,679
across the different SI right so that

1528
01:09:34,679 --> 01:09:36,899
problem goes away and I think we could

1529
01:09:36,899 --> 01:09:38,939
with this mechanism also get back to

1530
01:09:38,939 --> 01:09:41,100
something that is a lot more if not

1531
01:09:41,100 --> 01:09:45,060
fully auto configuring so next slide

1532
01:09:45,060 --> 01:09:46,859
yeah so

1533
01:09:46,859 --> 01:09:49,140
um scale right that primarily comes

1534
01:09:49,140 --> 01:09:50,279
because we're not doing this hard

1535
01:09:50,279 --> 01:09:53,759
subdivision into fixed 256 uh bit

1536
01:09:53,759 --> 01:09:56,820
streaks or larger right so we are not

1537
01:09:56,820 --> 01:09:58,800
wasting any bits that we're having in

1538
01:09:58,800 --> 01:10:00,179
the bit strings just you know the

1539
01:10:00,179 --> 01:10:02,880
overhead of this tying together the auto

1540
01:10:02,880 --> 01:10:05,400
configuration and then I'm starting to

1541
01:10:05,400 --> 01:10:07,500
become a big fan of really looking into

1542
01:10:07,500 --> 01:10:10,679
strict hop-by-hop Source routing because

1543
01:10:10,679 --> 01:10:13,320
that eliminates all my igp problems that

1544
01:10:13,320 --> 01:10:15,660
I may have along the path like igp micro

1545
01:10:15,660 --> 01:10:17,640
loops and others right I can basically

1546
01:10:17,640 --> 01:10:20,760
take all the updates out of the hardware

1547
01:10:20,760 --> 01:10:22,980
forwarding table on the midpoints the

1548
01:10:22,980 --> 01:10:24,800
only stuff I need to do is my big

1549
01:10:24,800 --> 01:10:28,080
Ingress router with a big CPU is

1550
01:10:28,080 --> 01:10:30,179
creating my you know hop by hopsource

1551
01:10:30,179 --> 01:10:32,460
routing header in the data center and

1552
01:10:32,460 --> 01:10:33,840
the hardware routers doing the

1553
01:10:33,840 --> 01:10:36,060
replication along the path never need to

1554
01:10:36,060 --> 01:10:37,920
update the hardware forwarding tables

1555
01:10:37,920 --> 01:10:40,380
next slide

1556
01:10:40,380 --> 01:10:44,239
so reflect to something else yeah

1557
01:10:44,239 --> 01:10:46,739
right so we're looking for interest

1558
01:10:46,739 --> 01:10:49,260
feedback collaboration right is this

1559
01:10:49,260 --> 01:10:51,780
easy enough packet processing obviously

1560
01:10:51,780 --> 01:10:53,520
you know we have the plus we have the

1561
01:10:53,520 --> 01:10:54,659
minus

1562
01:10:54,659 --> 01:10:56,400
um we want to continue evaluating and

1563
01:10:56,400 --> 01:10:58,380
improving the approach scalability

1564
01:10:58,380 --> 01:11:00,420
comparison implementation feasibility

1565
01:11:00,420 --> 01:11:02,460
such as MP4 you saw one of the

1566
01:11:02,460 --> 01:11:04,800
co-authors being Michael right so we're

1567
01:11:04,800 --> 01:11:06,540
working on that together

1568
01:11:06,540 --> 01:11:08,040
um and then of course there may be other

1569
01:11:08,040 --> 01:11:10,380
proposals that are looking beyond the

1570
01:11:10,380 --> 01:11:12,060
flat bit strings that we've done and

1571
01:11:12,060 --> 01:11:13,679
that hopefully we're starting to

1572
01:11:13,679 --> 01:11:15,420
successfully deploy for the Next

1573
01:11:15,420 --> 01:11:17,460
Generation beyond that right and then

1574
01:11:17,460 --> 01:11:19,739
ultimately you know when we feel that we

1575
01:11:19,739 --> 01:11:22,320
have something that enough people feel

1576
01:11:22,320 --> 01:11:23,400
um could work

1577
01:11:23,400 --> 01:11:24,840
um right what are the criteria that

1578
01:11:24,840 --> 01:11:26,940
would make any such non-flat bit-free

1579
01:11:26,940 --> 01:11:30,420
Solutions acceptable as beer working

1580
01:11:30,420 --> 01:11:32,280
group right obviously rechargering we

1581
01:11:32,280 --> 01:11:34,320
had to do that all the time but what are

1582
01:11:34,320 --> 01:11:35,820
the criteria right what are the bounds

1583
01:11:35,820 --> 01:11:37,560
of what beer ultimately would want to do

1584
01:11:37,560 --> 01:11:39,540
I'm not asking to answer that question

1585
01:11:39,540 --> 01:11:41,940
now but I think it would be really good

1586
01:11:41,940 --> 01:11:45,360
to have an answer you know within the

1587
01:11:45,360 --> 01:11:47,340
next half a year or a year so that we

1588
01:11:47,340 --> 01:11:49,679
know where to put what works

1589
01:11:49,679 --> 01:11:51,360
um because the more we get working group

1590
01:11:51,360 --> 01:11:54,000
support and people interested I think uh

1591
01:11:54,000 --> 01:11:55,920
the better the result will be

1592
01:11:55,920 --> 01:11:58,320
okay we got uh queue filled up here I'm

1593
01:11:58,320 --> 01:11:59,460
just going to give you comments first

1594
01:11:59,460 --> 01:12:02,699
from the chat uh from Edward V saying

1595
01:12:02,699 --> 01:12:04,980
MTU is I think is he meant smaller

1596
01:12:04,980 --> 01:12:07,199
problem much bigger problem is how big

1597
01:12:07,199 --> 01:12:10,020
header A6 May process it may be as low

1598
01:12:10,020 --> 01:12:12,120
as 128 bytes

1599
01:12:12,120 --> 01:12:13,320
mm-hmm

1600
01:12:13,320 --> 01:12:15,960
right if if that is as low as it's get

1601
01:12:15,960 --> 01:12:17,760
on those type of devices then we have to

1602
01:12:17,760 --> 01:12:19,800
see what's the best use in that right so

1603
01:12:19,800 --> 01:12:22,080
I'm not sure if we could claim that this

1604
01:12:22,080 --> 01:12:24,480
is better than a flat bit string

1605
01:12:24,480 --> 01:12:26,520
um you've seen we've done the comparison

1606
01:12:26,520 --> 01:12:30,239
for 256 bits which is by itself less

1607
01:12:30,239 --> 01:12:32,400
than 128 byte but of course we also have

1608
01:12:32,400 --> 01:12:35,699
other uh header overhead so um yeah

1609
01:12:35,699 --> 01:12:37,260
let's do the comparison there as well of

1610
01:12:37,260 --> 01:12:38,460
course

1611
01:12:38,460 --> 01:12:43,199
all right next participant Zhang

1612
01:12:43,739 --> 01:12:46,560
so if you're down from juniper

1613
01:12:46,560 --> 01:12:51,060
um so when PRT was first brought up I I

1614
01:12:51,060 --> 01:12:51,900
was

1615
01:12:51,900 --> 01:12:54,120
not believing and I was in doubts

1616
01:12:54,120 --> 01:12:55,199
because

1617
01:12:55,199 --> 01:12:57,900
I didn't see it would scale but when

1618
01:12:57,900 --> 01:13:01,320
this RBS was brought up I liked it and I

1619
01:13:01,320 --> 01:13:03,600
I can clearly see the advantage compared

1620
01:13:03,600 --> 01:13:07,140
to brt so this is a good thing

1621
01:13:07,140 --> 01:13:10,500
um there are some benefits on the slide

1622
01:13:10,500 --> 01:13:13,260
you claimed I will need to understand it

1623
01:13:13,260 --> 01:13:16,260
better but the basic idea of using the

1624
01:13:16,260 --> 01:13:19,340
recursive structure and to save the

1625
01:13:19,340 --> 01:13:22,080
the overhead using local bits a bit

1626
01:13:22,080 --> 01:13:25,080
Precision that that's the key I I it

1627
01:13:25,080 --> 01:13:28,080
does work and I like it and once a

1628
01:13:28,080 --> 01:13:31,260
suggestion in the name itself

1629
01:13:31,260 --> 01:13:34,440
is to me it's really just beer RBS don't

1630
01:13:34,440 --> 01:13:38,780
call it cgm2 oh no the CGM

1631
01:13:42,719 --> 01:13:46,219
so that's already gone yep

1632
01:13:48,179 --> 01:13:49,920
all right Tony

1633
01:13:49,920 --> 01:13:52,800
okay so speaking uh purely as

1634
01:13:52,800 --> 01:13:54,659
participant okay

1635
01:13:54,659 --> 01:13:56,340
um

1636
01:13:56,340 --> 01:13:59,580
I like that I'm surprised by this 256

1637
01:13:59,580 --> 01:14:03,179
bits that result is so good so you know

1638
01:14:03,179 --> 01:14:06,179
uh trust is good I would like to see

1639
01:14:06,179 --> 01:14:08,580
that verified independently because the

1640
01:14:08,580 --> 01:14:10,980
gains are impressive

1641
01:14:10,980 --> 01:14:13,020
um it looks simple enough to process in

1642
01:14:13,020 --> 01:14:15,900
the hardware there are of course open

1643
01:14:15,900 --> 01:14:17,400
things like

1644
01:14:17,400 --> 01:14:19,100
how do you make sure that everybody

1645
01:14:19,100 --> 01:14:21,540
computes the same tree what will happen

1646
01:14:21,540 --> 01:14:23,400
while the tree is converging like Loop

1647
01:14:23,400 --> 01:14:25,199
prevention right the the usual

1648
01:14:25,199 --> 01:14:26,880
discussions what will happen there

1649
01:14:26,880 --> 01:14:29,880
nothing because each node has to kind of

1650
01:14:29,880 --> 01:14:32,820
see the same tree and know the offset

1651
01:14:32,820 --> 01:14:34,500
who is the next note maybe a missing

1652
01:14:34,500 --> 01:14:36,060
stuff but it's just this thing that I'm

1653
01:14:36,060 --> 01:14:37,860
thinking like network has to become

1654
01:14:37,860 --> 01:14:39,480
Verge State for the whole thing to work

1655
01:14:39,480 --> 01:14:41,100
me things

1656
01:14:41,100 --> 01:14:42,420
um

1657
01:14:42,420 --> 01:14:46,380
I wouldn't even call it te2

1658
01:14:46,380 --> 01:14:48,480
um this will be a fundamentally

1659
01:14:48,480 --> 01:14:52,260
different way to process the bit mask

1660
01:14:52,260 --> 01:14:53,100
um

1661
01:14:53,100 --> 01:14:56,520
uh yeah me likes okay that's what I can

1662
01:14:56,520 --> 01:14:58,980
say it's I think it's a great proposal

1663
01:14:58,980 --> 01:15:00,719
if if the numbers and then you know

1664
01:15:00,719 --> 01:15:02,159
these little things that we don't see to

1665
01:15:02,159 --> 01:15:05,880
work out and we yeah okay my biggest

1666
01:15:05,880 --> 01:15:08,580
challenge of course is so we've done you

1667
01:15:08,580 --> 01:15:10,560
know an evaluation of course in actual

1668
01:15:10,560 --> 01:15:12,420
Hardware which is you know like

1669
01:15:12,420 --> 01:15:14,520
everybody else here vendor proprietary

1670
01:15:14,520 --> 01:15:16,440
Hardware that researchers can't verify

1671
01:15:16,440 --> 01:15:19,080
so that's why Michael is doing it on P4

1672
01:15:19,080 --> 01:15:20,940
and P4 has problems I'm not sure how

1673
01:15:20,940 --> 01:15:22,800
much that is going to tell us right so

1674
01:15:22,800 --> 01:15:25,140
the decisions of what is actually

1675
01:15:25,140 --> 01:15:27,300
feasible everywhere I think in our space

1676
01:15:27,300 --> 01:15:29,100
is really a difficult one to do and I

1677
01:15:29,100 --> 01:15:31,860
hope that we can all try to do that you

1678
01:15:31,860 --> 01:15:33,420
know as good as possible yeah but the

1679
01:15:33,420 --> 01:15:36,480
number of replication can be actually

1680
01:15:36,480 --> 01:15:38,280
and against the number of replication

1681
01:15:38,280 --> 01:15:40,080
can be simulated here

1682
01:15:40,080 --> 01:15:42,719
I mean you don't really need the

1683
01:15:42,719 --> 01:15:43,880
hardware

1684
01:15:43,880 --> 01:15:46,620
implementation here no I think it is

1685
01:15:46,620 --> 01:15:48,900
about the complexity of the calculation

1686
01:15:48,900 --> 01:15:50,760
that you need to do to update the two

1687
01:15:50,760 --> 01:15:53,120
fields and extract the information

1688
01:15:53,120 --> 01:15:56,040
I would kind of abstract that looked

1689
01:15:56,040 --> 01:15:59,820
like a fairly simple Hardware operation

1690
01:15:59,820 --> 01:16:01,620
comparatively speaking not as simple as

1691
01:16:01,620 --> 01:16:03,719
ending bitmask and so on but it doesn't

1692
01:16:03,719 --> 01:16:06,060
look like excessive TLD processing tool

1693
01:16:06,060 --> 01:16:07,800
for disclosure this is the you know

1694
01:16:07,800 --> 01:16:10,140
Upstream marketing presentation read the

1695
01:16:10,140 --> 01:16:11,820
draft there are details right so let's

1696
01:16:11,820 --> 01:16:13,860
see yeah I will I will it triggered it I

1697
01:16:13,860 --> 01:16:15,300
mean I I didn't have time to read the

1698
01:16:15,300 --> 01:16:17,960
draft but you triggered my interest

1699
01:16:17,960 --> 01:16:21,239
no I say so yeah I also find it a very

1700
01:16:21,239 --> 01:16:23,640
Nifty approach so uh it's uh quite nice

1701
01:16:23,640 --> 01:16:25,800
uh although so I saw my comments to the

1702
01:16:25,800 --> 01:16:26,960
list oh yeah sure

1703
01:16:26,960 --> 01:16:29,340
very valid I just didn't have the time I

1704
01:16:29,340 --> 01:16:31,020
need to do next breath with with those

1705
01:16:31,020 --> 01:16:32,760
feedback yeah because I think there's

1706
01:16:32,760 --> 01:16:35,760
some design choices made to not put the

1707
01:16:35,760 --> 01:16:38,040
more uh state in the packet but put it

1708
01:16:38,040 --> 01:16:39,120
in the control plane where it doesn't

1709
01:16:39,120 --> 01:16:43,199
belong so in my I do expect actually the

1710
01:16:43,199 --> 01:16:44,699
the header size to increase if you want

1711
01:16:44,699 --> 01:16:46,620
to solve that problem so the data that

1712
01:16:46,620 --> 01:16:48,300
you're showing here for this 256 bits

1713
01:16:48,300 --> 01:16:51,060
might not be as good as it slips two

1714
01:16:51,060 --> 01:16:53,040
days yes definitely

1715
01:16:53,040 --> 01:16:54,980
foreign

1716
01:16:54,980 --> 01:16:58,920
to the part what are the overall

1717
01:16:58,920 --> 01:17:00,840
benefits and does the total header size

1718
01:17:00,840 --> 01:17:03,900
really as as opposed to the processing

1719
01:17:03,900 --> 01:17:06,060
cost right so let's distinguish those

1720
01:17:06,060 --> 01:17:08,280
maybe yeah how about but if we support

1721
01:17:08,280 --> 01:17:11,460
uh looking into this more for sure

1722
01:17:11,460 --> 01:17:14,040
yeah

1723
01:17:14,040 --> 01:17:17,820
yes uh just a few comments so I I really

1724
01:17:17,820 --> 01:17:20,820
like the idea you know it's uh it seems

1725
01:17:20,820 --> 01:17:23,100
like an optimization it kind of takes

1726
01:17:23,100 --> 01:17:26,159
some of uh what exists today I guess in

1727
01:17:26,159 --> 01:17:30,060
Optimus ideas of optimization and um it

1728
01:17:30,060 --> 01:17:32,100
seems like a really a good Improvement

1729
01:17:32,100 --> 01:17:34,620
and works with uh as you said small

1730
01:17:34,620 --> 01:17:37,020
trees are important Universal Big Trees

1731
01:17:37,020 --> 01:17:39,719
but it really uh is a is a real nice

1732
01:17:39,719 --> 01:17:43,320
optimization to um severe you know one

1733
01:17:43,320 --> 01:17:46,679
One initial idea I guess a comment could

1734
01:17:46,679 --> 01:17:48,659
this since it does use the architecture

1735
01:17:48,659 --> 01:17:51,179
or an idea of using a bit string could

1736
01:17:51,179 --> 01:17:54,000
this actually be like an extension or

1737
01:17:54,000 --> 01:17:56,280
possibly an optimization to existing

1738
01:17:56,280 --> 01:17:58,739
beer architecture

1739
01:17:58,739 --> 01:18:00,719
thank you

1740
01:18:00,719 --> 01:18:02,820
I mean I described how it would fit into

1741
01:18:02,820 --> 01:18:06,239
an 80 296 header right so obviously we

1742
01:18:06,239 --> 01:18:08,580
only have power of two length of the bit

1743
01:18:08,580 --> 01:18:10,860
string right now so we would need to do

1744
01:18:10,860 --> 01:18:13,560
some padding and ultimately we could use

1745
01:18:13,560 --> 01:18:15,239
all the different lengths depending if

1746
01:18:15,239 --> 01:18:17,340
if the hardware does it right so yeah it

1747
01:18:17,340 --> 01:18:18,960
could be fit in there is it the best

1748
01:18:18,960 --> 01:18:21,120
header but I don't think we can save a

1749
01:18:21,120 --> 01:18:24,000
lot by by trying to optimize that header

1750
01:18:24,000 --> 01:18:26,280
just for you know saving every single

1751
01:18:26,280 --> 01:18:28,679
bit well I mean so there was a

1752
01:18:28,679 --> 01:18:31,400
strong architectural

1753
01:18:31,400 --> 01:18:34,020
and practical consideration to put the

1754
01:18:34,020 --> 01:18:36,840
Beet mask at the very end right so hence

1755
01:18:36,840 --> 01:18:39,239
I mean the power of two is artifact

1756
01:18:39,239 --> 01:18:40,679
because the algorithms to look up look

1757
01:18:40,679 --> 01:18:42,360
up so good but there is nothing that

1758
01:18:42,360 --> 01:18:46,260
will you know put a crimp into our

1759
01:18:46,260 --> 01:18:48,600
whole thing it would make the big mess

1760
01:18:48,600 --> 01:18:51,480
different length so you know we'll have

1761
01:18:51,480 --> 01:18:53,340
to think how to record it in terms of

1762
01:18:53,340 --> 01:18:55,580
the beer and coating that we have today

1763
01:18:55,580 --> 01:18:57,780
we have a version on it we can always

1764
01:18:57,780 --> 01:19:00,120
bump it to version two or we can think

1765
01:19:00,120 --> 01:19:01,739
of you know how we semantically

1766
01:19:01,739 --> 01:19:04,440
distinguish just like with the brke how

1767
01:19:04,440 --> 01:19:06,179
do we semantically interpret the bit

1768
01:19:06,179 --> 01:19:08,520
mask differently so I don't think or it

1769
01:19:08,520 --> 01:19:10,199
actually anything would prevent us to go

1770
01:19:10,199 --> 01:19:12,239
and have yet another semantic

1771
01:19:12,239 --> 01:19:13,980
interpretation of the bead mask and all

1772
01:19:13,980 --> 01:19:15,540
the existing Hardware right yeah yeah

1773
01:19:15,540 --> 01:19:18,179
the the simple way to do it is have

1774
01:19:18,179 --> 01:19:19,980
different different subdomain semantics

1775
01:19:19,980 --> 01:19:21,780
like we also defined for beauty that's

1776
01:19:21,780 --> 01:19:24,300
what I have in this slightly whatever I

1777
01:19:24,300 --> 01:19:25,980
mean the control plane we can go wild

1778
01:19:25,980 --> 01:19:28,199
right so that we can synchronize who

1779
01:19:28,199 --> 01:19:30,659
assigns which semantics you know to to

1780
01:19:30,659 --> 01:19:32,280
what kind of bitmaps is long in the

1781
01:19:32,280 --> 01:19:34,080
hardware we don't start to pile stuff up

1782
01:19:34,080 --> 01:19:37,260
so yeah I fundamentally I don't see like

1783
01:19:37,260 --> 01:19:38,820
architect actually that wouldn't feed

1784
01:19:38,820 --> 01:19:40,940
and then Coatings we have and the

1785
01:19:40,940 --> 01:19:43,920
architectural degrees of freedoms that

1786
01:19:43,920 --> 01:19:45,840
we provided yeah

1787
01:19:45,840 --> 01:19:48,120
makes sense I like it

1788
01:19:48,120 --> 01:19:50,420
thank you

1789
01:19:51,540 --> 01:19:54,360
all right so we weigh over time I think

1790
01:19:54,360 --> 01:19:56,659
the other things are not

1791
01:19:56,659 --> 01:19:58,679
earth-shattering pretty much this

1792
01:19:58,679 --> 01:19:59,760
updates

1793
01:19:59,760 --> 01:20:01,920
all right I have to find my window again

1794
01:20:01,920 --> 01:20:05,219
ah yeah yeah yeah yeah yeah here we are

1795
01:20:05,219 --> 01:20:07,560
so what else is on the tank

1796
01:20:07,560 --> 01:20:09,679
um

1797
01:20:10,320 --> 01:20:13,980
we still have to be a frr update

1798
01:20:13,980 --> 01:20:16,020
yeah we can run through it quickly I

1799
01:20:16,020 --> 01:20:17,640
mean otherwise people can just you know

1800
01:20:17,640 --> 01:20:19,260
Fade Out

1801
01:20:19,260 --> 01:20:21,440
foreign

1802
01:20:26,239 --> 01:20:29,880
I'm going to talk about a bfr

1803
01:20:29,880 --> 01:20:32,460
it will be very quick

1804
01:20:32,460 --> 01:20:35,420
[Music]

1805
01:20:35,420 --> 01:20:39,420
please suggestions

1806
01:20:39,780 --> 01:20:42,420
which I think we address our comments

1807
01:20:42,420 --> 01:20:44,219
and accept all the suggestions for

1808
01:20:44,219 --> 01:20:45,620
example

1809
01:20:45,620 --> 01:20:49,380
suggests that we should have one

1810
01:20:49,380 --> 01:20:53,400
okay forward table and then for bfr and

1811
01:20:53,400 --> 01:20:55,440
the lawnmower forwarding so we added the

1812
01:20:55,440 --> 01:20:58,560
one extended forward table

1813
01:20:58,560 --> 01:21:02,100
for normal 14 and forever

1814
01:21:02,100 --> 01:21:05,219
so in addition to that and then uh

1815
01:21:05,219 --> 01:21:07,140
there's some people mentioned that also

1816
01:21:07,140 --> 01:21:10,800
the relationship between bfr and ipfr so

1817
01:21:10,800 --> 01:21:15,020
we just we dressed next page

1818
01:21:16,020 --> 01:21:20,640
so this is the structure of one folding

1819
01:21:20,640 --> 01:21:22,800
table for all so basically the contains

1820
01:21:22,800 --> 01:21:25,620
primary entry and then backup entry and

1821
01:21:25,620 --> 01:21:27,420
then we have Flags indicate whether this

1822
01:21:27,420 --> 01:21:29,520
is a bicarbon entry will be used next

1823
01:21:29,520 --> 01:21:31,820
page

1824
01:21:35,600 --> 01:21:38,460
ipfr so one question is that we already

1825
01:21:38,460 --> 01:21:42,420
have an ipfri why do we need a bfr

1826
01:21:42,420 --> 01:21:45,239
this is because beer package is a

1827
01:21:45,239 --> 01:21:47,340
forward without

1828
01:21:47,340 --> 01:21:50,580
IB header I mean outside header so in

1829
01:21:50,580 --> 01:21:54,540
this case ipfr cannot apply

1830
01:21:54,540 --> 01:21:57,900
to the Beer package because it don't

1831
01:21:57,900 --> 01:22:00,600
have to be a Target that doesn't have a

1832
01:22:00,600 --> 01:22:04,860
IP out headers so in this case

1833
01:22:04,860 --> 01:22:09,120
when one beer that's hot

1834
01:22:09,120 --> 01:22:11,940
failed or unreachable and then be a

1835
01:22:11,940 --> 01:22:13,620
package will be dropped and then lost so

1836
01:22:13,620 --> 01:22:16,620
that's why we need bfr

1837
01:22:16,620 --> 01:22:18,420
so regarding to

1838
01:22:18,420 --> 01:22:23,460
beer LFA and the IPL fa so basically we

1839
01:22:23,460 --> 01:22:28,140
a BFF LFA will use IPL a as much as

1840
01:22:28,140 --> 01:22:30,320
possible

1841
01:22:30,320 --> 01:22:34,080
so when we have

1842
01:22:34,080 --> 01:22:37,080
whatever

1843
01:22:39,960 --> 01:22:45,780
so if that one the LFA is also the pfr

1844
01:22:45,780 --> 01:22:48,960
label node and then we can directly use

1845
01:22:48,960 --> 01:22:52,140
that IPL

1846
01:22:52,140 --> 01:22:55,140
so for for IPL we have different types

1847
01:22:55,140 --> 01:22:58,800
and we have basic IPL Alpha and we have

1848
01:22:58,800 --> 01:23:01,260
remote one and we have a property

1849
01:23:01,260 --> 01:23:02,820
independent

1850
01:23:02,820 --> 01:23:05,040
LFA so those are

1851
01:23:05,040 --> 01:23:08,340
three types will also reused because we

1852
01:23:08,340 --> 01:23:11,880
have a architecture to support normal

1853
01:23:11,880 --> 01:23:15,120
action which is just forwarding the

1854
01:23:15,120 --> 01:23:16,860
package to the laptop

1855
01:23:16,860 --> 01:23:19,500
and then we also have a tunnel and then

1856
01:23:19,500 --> 01:23:22,380
we have also you first so what is a

1857
01:23:22,380 --> 01:23:25,880
covered so next page

1858
01:23:28,140 --> 01:23:30,239
so we just want to uh welcome work

1859
01:23:30,239 --> 01:23:33,919
comments and the suggestions

1860
01:23:39,480 --> 01:23:41,520
yeah who made me goalie Nokia

1861
01:23:41,520 --> 01:23:44,280
um I mean yeah great idea but I'm still

1862
01:23:44,280 --> 01:23:46,020
scratching my head

1863
01:23:46,020 --> 01:23:47,520
usually the deployments that we're

1864
01:23:47,520 --> 01:23:51,780
seeing with beer unicast is enabled so

1865
01:23:51,780 --> 01:23:54,360
uh most of the deployments they want to

1866
01:23:54,360 --> 01:23:57,540
follow unicast so I'm still kind of

1867
01:23:57,540 --> 01:23:59,640
scratching my head why do I want to

1868
01:23:59,640 --> 01:24:02,340
separate my beer faster you're out from

1869
01:24:02,340 --> 01:24:04,940
unigas

1870
01:24:05,780 --> 01:24:10,500
so be ah

1871
01:24:10,500 --> 01:24:12,600
so what are the questions that you mean

1872
01:24:12,600 --> 01:24:14,640
you don't we don't need this one

1873
01:24:14,640 --> 01:24:17,580
don't let any of the bfr no sorry so

1874
01:24:17,580 --> 01:24:19,739
going back to your slide you had three

1875
01:24:19,739 --> 01:24:22,980
different of fast rerouting so if you

1876
01:24:22,980 --> 01:24:25,860
have basic LFA oh yeah you don't need

1877
01:24:25,860 --> 01:24:28,140
the remote on that yeah if you have

1878
01:24:28,140 --> 01:24:31,380
basic LFA and and your uh fast reroute

1879
01:24:31,380 --> 01:24:33,360
can be resolved via basically LFA

1880
01:24:33,360 --> 01:24:36,300
without remote or TI LFA then you just

1881
01:24:36,300 --> 01:24:38,100
use the beer header right you push it to

1882
01:24:38,100 --> 01:24:38,820
the

1883
01:24:38,820 --> 01:24:41,400
to the fast reroute next up and then the

1884
01:24:41,400 --> 01:24:44,159
beer header just follows the igp my only

1885
01:24:44,159 --> 01:24:47,340
Point here is that beer advertisement is

1886
01:24:47,340 --> 01:24:50,520
via igp anyway so it is in the mercy of

1887
01:24:50,520 --> 01:24:53,940
the igp and uh what what we have

1888
01:24:53,940 --> 01:24:56,820
realized I mean our implementation is

1889
01:24:56,820 --> 01:25:00,360
you just turn on LFA in the network and

1890
01:25:00,360 --> 01:25:02,580
beer just follows it there's nothing

1891
01:25:02,580 --> 01:25:04,020
special about it

1892
01:25:04,020 --> 01:25:06,659
that that's how the input like even from

1893
01:25:06,659 --> 01:25:08,280
implementation point of view we didn't

1894
01:25:08,280 --> 01:25:09,960
have to do marriage we just turned on

1895
01:25:09,960 --> 01:25:12,179
the LFA under your igp and you just

1896
01:25:12,179 --> 01:25:15,060
follows it as long as if you have one

1897
01:25:15,060 --> 01:25:17,100
but that's I think the yeah normally is

1898
01:25:17,100 --> 01:25:19,440
okay but sometimes because some notes

1899
01:25:19,440 --> 01:25:21,659
from the support appear in that case we

1900
01:25:21,659 --> 01:25:23,159
may have a issue

1901
01:25:23,159 --> 01:25:24,719
if we ever know the support that one

1902
01:25:24,719 --> 01:25:27,900
it's okay yeah every ID every IP

1903
01:25:27,900 --> 01:25:31,020
LFA is also p l of a and then we'll

1904
01:25:31,020 --> 01:25:32,940
watch that go forward right

1905
01:25:32,940 --> 01:25:35,040
yeah again maybe you want to bring up

1906
01:25:35,040 --> 01:25:37,980
the cases I mean again we haven't seen

1907
01:25:37,980 --> 01:25:42,000
any case that the igp LFA cannot resolve

1908
01:25:42,000 --> 01:25:43,860
but maybe bring on the cases and we can

1909
01:25:43,860 --> 01:25:46,080
we can discuss it yeah yeah you've all

1910
01:25:46,080 --> 01:25:49,219
support them then that's okay foreign

1911
01:25:49,219 --> 01:25:52,380
so jumping quickly I mean we had kind of

1912
01:25:52,380 --> 01:25:55,199
this discussion not ongoing discussion

1913
01:25:55,199 --> 01:25:56,820
but

1914
01:25:56,820 --> 01:25:59,219
to keep everybody open-minded right yes

1915
01:25:59,219 --> 01:26:02,040
today we deploy the right GPS or unicast

1916
01:26:02,040 --> 01:26:04,320
or works like a charm but fundamentally

1917
01:26:04,320 --> 01:26:06,659
or it actually were not slave to igp

1918
01:26:06,659 --> 01:26:08,040
right we can run completely different

1919
01:26:08,040 --> 01:26:10,080
computation run build completely

1920
01:26:10,080 --> 01:26:11,760
forwarding table installed via

1921
01:26:11,760 --> 01:26:14,280
controllers

1922
01:26:14,280 --> 01:26:17,340
if we're not slave to igp and igpfrr is

1923
01:26:17,340 --> 01:26:19,560
not good enough you know this has the

1924
01:26:19,560 --> 01:26:21,360
architectural degree of Freedom which

1925
01:26:21,360 --> 01:26:23,340
arguably we don't need today in

1926
01:26:23,340 --> 01:26:24,840
deployment okay but there's nothing

1927
01:26:24,840 --> 01:26:27,300
fundamentally wrong with the work that

1928
01:26:27,300 --> 01:26:29,699
is completely useless because we assume

1929
01:26:29,699 --> 01:26:31,739
we always have an igp awards for follow

1930
01:26:31,739 --> 01:26:33,300
unicast okay

1931
01:26:33,300 --> 01:26:36,239
well that okay again I just want to be

1932
01:26:36,239 --> 01:26:38,400
very careful here even with the

1933
01:26:38,400 --> 01:26:40,679
controller like if you have Sr policy or

1934
01:26:40,679 --> 01:26:41,940
anything that comes down with the

1935
01:26:41,940 --> 01:26:44,580
controller again from what we see from

1936
01:26:44,580 --> 01:26:47,159
the implementation it just follows what

1937
01:26:47,159 --> 01:26:48,840
is installed in the data path right I

1938
01:26:48,840 --> 01:26:51,000
mean we don't see anything as specific

1939
01:26:51,000 --> 01:26:52,560
but yeah I mean I'll take it back if

1940
01:26:52,560 --> 01:26:54,239
there is something specific that we are

1941
01:26:54,239 --> 01:26:55,920
trying to solve here which we haven't

1942
01:26:55,920 --> 01:26:57,780
thought about it yeah for sure I'm just

1943
01:26:57,780 --> 01:26:59,040
giving feedback to the working group

1944
01:26:59,040 --> 01:27:01,020
that you know based on the live

1945
01:27:01,020 --> 01:27:02,820
implementation and live deployment this

1946
01:27:02,820 --> 01:27:05,480
is what we're saying

1947
01:27:06,480 --> 01:27:08,340
okay I mean this discussion has been

1948
01:27:08,340 --> 01:27:09,480
going you know that was the first

1949
01:27:09,480 --> 01:27:11,699
comment given to the draft okay so

1950
01:27:11,699 --> 01:27:14,159
thanks for the update

1951
01:27:14,159 --> 01:27:17,699
right uh something else chasing me but

1952
01:27:17,699 --> 01:27:20,340
it's okay and we come to the very last

1953
01:27:20,340 --> 01:27:22,320
one

1954
01:27:22,320 --> 01:27:25,820
and we weigh over time okay

1955
01:27:25,980 --> 01:27:28,199
okay can you hear me

1956
01:27:28,199 --> 01:27:30,960
yeah Sandy loud and clear

1957
01:27:30,960 --> 01:27:34,320
okay I'd like to say this is a very

1958
01:27:34,320 --> 01:27:36,260
simple draft

1959
01:27:36,260 --> 01:27:38,480
is used for

1960
01:27:38,480 --> 01:27:44,520
prte VP a beefed ID at what husband uh

1961
01:27:44,520 --> 01:27:49,940
in in brt in calculate circulation

1962
01:27:49,940 --> 01:27:55,320
sorry because the previous slides the

1963
01:27:55,320 --> 01:27:59,000
previous structure is no are not opting

1964
01:27:59,000 --> 01:28:03,179
optimal so we you would like to use a

1965
01:28:03,179 --> 01:28:05,159
new advertisement for the gift ID

1966
01:28:05,159 --> 01:28:09,360
advertisement so uh the only change for

1967
01:28:09,360 --> 01:28:13,520
the new uh draft is that we move the

1968
01:28:13,520 --> 01:28:18,719
Deep ID advertisement from the DP to the

1969
01:28:18,719 --> 01:28:21,980
prefix so we just only

1970
01:28:21,980 --> 01:28:28,500
Edward has the gift ID was so this can

1971
01:28:28,500 --> 01:28:31,260
reduce the advertisement

1972
01:28:31,260 --> 01:28:35,239
and bytes consume consumption

1973
01:28:35,239 --> 01:28:39,960
greatly yeah so that's very simple oh

1974
01:28:39,960 --> 01:28:40,800
sorry

1975
01:28:40,800 --> 01:28:44,360
please next

1976
01:28:47,280 --> 01:28:50,940
so we know that the pure this is for the

1977
01:28:50,940 --> 01:28:54,620
brte which is defining up C

1978
01:28:54,620 --> 01:28:58,380
9262 so it's used for the beef.it

1979
01:28:58,380 --> 01:29:02,100
advertisement next

1980
01:29:05,820 --> 01:29:09,239
so we know that we must advertise the

1981
01:29:09,239 --> 01:29:14,820
gift idea for the beer tea table

1982
01:29:14,820 --> 01:29:17,520
routing table lookup so we need to

1983
01:29:17,520 --> 01:29:23,360
advertisement advertisement next please

1984
01:29:27,420 --> 01:29:30,360
so we have the

1985
01:29:30,360 --> 01:29:34,460
the previous structure is

1986
01:29:34,460 --> 01:29:38,639
the word highest the uh the proof the

1987
01:29:38,639 --> 01:29:41,120
Edward husband in previous structure is

1988
01:29:41,120 --> 01:29:46,260
and what has the gift ID under BP the

1989
01:29:46,260 --> 01:29:49,520
POV so we just moved the

1990
01:29:49,520 --> 01:29:53,219
operation to the prefix so the Edward

1991
01:29:53,219 --> 01:29:56,460
husband may be more efficient

1992
01:29:56,460 --> 01:30:01,260
so um the if the ID is located per SD

1993
01:30:01,260 --> 01:30:03,960
BSL ladies and gentlemen heart stop

1994
01:30:03,960 --> 01:30:05,280
we're being kicked out of the room

1995
01:30:05,280 --> 01:30:07,679
justifyingly so we overrun mercilessly

1996
01:30:07,679 --> 01:30:10,139
all right well Sandy sorry we pushed the

1997
01:30:10,139 --> 01:30:11,520
stuff to the next session thank you

1998
01:30:11,520 --> 01:30:14,400
everyone interesting session

1999
01:30:14,400 --> 01:30:17,179
thank you

2000
01:30:19,260 --> 01:30:21,739
one

2001
01:30:22,020 --> 01:30:23,940
uh Tony's got to pay for beer for

2002
01:30:23,940 --> 01:30:26,540
everybody tonight

2003
01:30:39,679 --> 01:30:42,800
you know

