1
00:00:08,960 --> 00:00:11,960
no no

2
00:00:13,200 --> 00:00:15,200
um

3
00:00:33,780 --> 00:00:35,700
is

4
00:00:35,700 --> 00:00:38,059
yeah

5
00:00:47,719 --> 00:00:52,680
okay it's 9 30 here in London

6
00:00:52,680 --> 00:00:55,800
well time to start the ippm session

7
00:00:55,800 --> 00:00:59,219
first session of the week so um

8
00:00:59,219 --> 00:01:01,079
welcome everyone

9
00:01:01,079 --> 00:01:03,059
um if you're not here for the ippm

10
00:01:03,059 --> 00:01:05,760
session then um please check which room

11
00:01:05,760 --> 00:01:07,680
you want to be in

12
00:01:07,680 --> 00:01:10,140
um Tommy is here as well he's joining us

13
00:01:10,140 --> 00:01:13,080
from California

14
00:01:13,080 --> 00:01:16,560
it must be a nice time of the day there

15
00:01:16,560 --> 00:01:20,040
it's a dark and rainy so we are

16
00:01:20,040 --> 00:01:22,500
celebrating traditional winter England

17
00:01:22,500 --> 00:01:25,159
weather here

18
00:01:34,100 --> 00:01:38,040
so this is an ietf session so you should

19
00:01:38,040 --> 00:01:40,860
familiar familiarize yourself with this

20
00:01:40,860 --> 00:01:43,200
note well slide you will be probably be

21
00:01:43,200 --> 00:01:44,960
seeing it quite a lot during the week

22
00:01:44,960 --> 00:01:48,180
but basically everything you say here is

23
00:01:48,180 --> 00:01:50,520
a contribution to the ietf when that

24
00:01:50,520 --> 00:01:53,939
comes with a consideration so if you're

25
00:01:53,939 --> 00:01:55,680
aware of patents and things like this

26
00:01:55,680 --> 00:01:57,360
you should you should familiarize

27
00:01:57,360 --> 00:01:59,040
yourself with the guidelines and rules

28
00:01:59,040 --> 00:02:01,500
around that uh it's also important to

29
00:02:01,500 --> 00:02:04,740
note that things here will be recorded

30
00:02:04,740 --> 00:02:07,140
and can be publicly be made publicly

31
00:02:07,140 --> 00:02:09,538
available online so so you're aware of

32
00:02:09,538 --> 00:02:11,400
this

33
00:02:11,400 --> 00:02:14,280
um and please uh kind of maintain a

34
00:02:14,280 --> 00:02:15,720
respectful tone to each other when

35
00:02:15,720 --> 00:02:18,000
having discussions and disagreements and

36
00:02:18,000 --> 00:02:19,260
there are a lot of documents you can

37
00:02:19,260 --> 00:02:21,180
read if you want to further familiarize

38
00:02:21,180 --> 00:02:25,280
yourself with any of these matters

39
00:02:26,160 --> 00:02:28,940
right

40
00:02:28,980 --> 00:02:31,920
also for people who are on site remember

41
00:02:31,920 --> 00:02:34,379
that we have a masking policy here so

42
00:02:34,379 --> 00:02:36,900
you need to wear masks in all meeting

43
00:02:36,900 --> 00:02:39,420
rooms and it's also recommended that you

44
00:02:39,420 --> 00:02:41,220
do that in in the common areas but not

45
00:02:41,220 --> 00:02:42,959
required

46
00:02:42,959 --> 00:02:45,660
um you may briefly remove your masks if

47
00:02:45,660 --> 00:02:47,220
you're eating and drinking

48
00:02:47,220 --> 00:02:48,900
um but that cannot be an excuse for

49
00:02:48,900 --> 00:02:50,879
leaving them off for longer periods so

50
00:02:50,879 --> 00:02:53,400
please try to kind of respect these

51
00:02:53,400 --> 00:02:56,819
rules it's for all of our safety

52
00:02:56,819 --> 00:02:59,099
um of course if you're actively speaking

53
00:02:59,099 --> 00:03:01,200
meaning that you are up by the

54
00:03:01,200 --> 00:03:03,420
microphone presenting it is okay to take

55
00:03:03,420 --> 00:03:05,459
off your mask while you are presenting

56
00:03:05,459 --> 00:03:06,780
but that's pretty much the only

57
00:03:06,780 --> 00:03:08,400
exception

58
00:03:08,400 --> 00:03:10,200
um there are no exemptions for mask

59
00:03:10,200 --> 00:03:12,599
wearing no medical or otherwise so

60
00:03:12,599 --> 00:03:14,400
please be aware of that and also be

61
00:03:14,400 --> 00:03:16,379
aware that the masks that are required

62
00:03:16,379 --> 00:03:19,620
should be equivalent to n95 or ffp2 or

63
00:03:19,620 --> 00:03:22,019
better and there are free masks all

64
00:03:22,019 --> 00:03:24,180
around here so please if you don't have

65
00:03:24,180 --> 00:03:27,680
masks go go fetch some

66
00:03:28,200 --> 00:03:30,300
right

67
00:03:30,300 --> 00:03:32,220
um a bit of meeting management we have

68
00:03:32,220 --> 00:03:34,379
uh we're running this through meet Echo

69
00:03:34,379 --> 00:03:36,300
we have the link here

70
00:03:36,300 --> 00:03:39,000
um queuing for everyone including on

71
00:03:39,000 --> 00:03:41,700
site is based on meet Echo so if you are

72
00:03:41,700 --> 00:03:44,700
here please uh please join uh the meet

73
00:03:44,700 --> 00:03:47,519
Echo session using the using your mobile

74
00:03:47,519 --> 00:03:49,620
device and then use the queuing system

75
00:03:49,620 --> 00:03:52,799
of me Deco to put yourself in queue

76
00:03:52,799 --> 00:03:56,040
um slides are pre-loaded into meet Echo

77
00:03:56,040 --> 00:03:59,459
so it's possible for anyone presenting

78
00:03:59,459 --> 00:04:02,459
to share the slides uh there is there is

79
00:04:02,459 --> 00:04:05,400
a button in the mid Echo to to that

80
00:04:05,400 --> 00:04:07,920
allows you to share pre-loaded slides it

81
00:04:07,920 --> 00:04:09,599
is possible to share your screen as well

82
00:04:09,599 --> 00:04:12,659
if needed but ideally that's not needed

83
00:04:12,659 --> 00:04:14,519
and it's not recommended

84
00:04:14,519 --> 00:04:15,299
um

85
00:04:15,299 --> 00:04:18,238
and we have a link here for the notes

86
00:04:18,238 --> 00:04:20,820
and we would like to see if anyone wants

87
00:04:20,820 --> 00:04:24,380
to volunteer as a note taker

88
00:04:40,919 --> 00:04:43,080
we would also need a JavaScript that

89
00:04:43,080 --> 00:04:44,759
basically is somebody who can relay

90
00:04:44,759 --> 00:04:46,919
comments from the from the chat into

91
00:04:46,919 --> 00:04:49,199
into the microphone when needed

92
00:04:49,199 --> 00:04:50,759
anyone wants to do that as well that

93
00:04:50,759 --> 00:04:52,639
would be helpful

94
00:04:52,639 --> 00:04:55,979
uh so I I'm happy as I mentioned on chat

95
00:04:55,979 --> 00:04:57,020
to do

96
00:04:57,020 --> 00:04:59,699
the notes uh

97
00:04:59,699 --> 00:05:01,560
so I can cover that

98
00:05:01,560 --> 00:05:04,380
I would ask that if people are up at the

99
00:05:04,380 --> 00:05:08,040
mic uh please do clearly uh

100
00:05:08,040 --> 00:05:10,320
state your name to I know you'll also be

101
00:05:10,320 --> 00:05:12,120
queuing but if there's conversation back

102
00:05:12,120 --> 00:05:14,280
and forth we'll make sure that the

103
00:05:14,280 --> 00:05:17,479
remote people can tell who's talking

104
00:05:19,139 --> 00:05:20,460
that's excellent

105
00:05:20,460 --> 00:05:23,100
we have a note taker there's a lot of

106
00:05:23,100 --> 00:05:24,740
Tommy

107
00:05:24,740 --> 00:05:26,699
okay

108
00:05:26,699 --> 00:05:30,840
these are the administrative pieces so

109
00:05:30,840 --> 00:05:33,660
let's go on a little bit of document

110
00:05:33,660 --> 00:05:37,440
status right now we have the ioam conf

111
00:05:37,440 --> 00:05:41,039
state and IPv6 options drafts in iesg

112
00:05:41,039 --> 00:05:42,060
review

113
00:05:42,060 --> 00:05:44,699
and we have just done a second working

114
00:05:44,699 --> 00:05:46,979
group last call for the explicit flow

115
00:05:46,979 --> 00:05:50,880
measurements document and I don't think

116
00:05:50,880 --> 00:05:53,759
we got any pushback on the second on

117
00:05:53,759 --> 00:05:56,340
this second last call so

118
00:05:56,340 --> 00:05:58,560
it looks like this one will likely make

119
00:05:58,560 --> 00:06:00,919
progress

120
00:06:05,039 --> 00:06:07,979
okay we have a

121
00:06:07,979 --> 00:06:10,560
pretty packed agenda today

122
00:06:10,560 --> 00:06:12,600
um it's divided into kind of three

123
00:06:12,600 --> 00:06:14,820
sections we have we're going to talk

124
00:06:14,820 --> 00:06:18,000
about uh adopted or working group

125
00:06:18,000 --> 00:06:19,199
documents

126
00:06:19,199 --> 00:06:21,419
um and we we have a set of documents

127
00:06:21,419 --> 00:06:23,039
here we will start with a newly adopted

128
00:06:23,039 --> 00:06:25,740
one which is uh which are these

129
00:06:25,740 --> 00:06:27,600
performance measurements on on on on

130
00:06:27,600 --> 00:06:29,940
link aggregation

131
00:06:29,940 --> 00:06:33,840
um then we move on to uh to the capacity

132
00:06:33,840 --> 00:06:37,440
protocol encrypted PDM responsiveness uh

133
00:06:37,440 --> 00:06:39,180
we will not be doing the connectivity

134
00:06:39,180 --> 00:06:42,440
monitoring here a slight updated agenda

135
00:06:42,440 --> 00:06:44,520
and then move on with data Integrity

136
00:06:44,520 --> 00:06:48,440
Yang and stamp on srpm

137
00:06:50,160 --> 00:06:53,940
Then Greg will be doing a presentation

138
00:06:53,940 --> 00:06:56,699
on uh on Pam

139
00:06:56,699 --> 00:06:59,819
and after that we move into to the

140
00:06:59,819 --> 00:07:01,500
section which we call the lightning

141
00:07:01,500 --> 00:07:04,259
talks so here we have a bunch of

142
00:07:04,259 --> 00:07:06,780
documents

143
00:07:06,780 --> 00:07:08,759
um a bunch of presentations uh they

144
00:07:08,759 --> 00:07:11,580
should all be uh done as a one slider

145
00:07:11,580 --> 00:07:14,880
pretty much similar similar but shorter

146
00:07:14,880 --> 00:07:17,819
than a hot RFC but pretty much just just

147
00:07:17,819 --> 00:07:20,400
present your concept on High level and

148
00:07:20,400 --> 00:07:22,020
see if people are interested to to

149
00:07:22,020 --> 00:07:25,020
collaborate with you further offline

150
00:07:25,020 --> 00:07:26,460
so

151
00:07:26,460 --> 00:07:29,220
um with that said I think we can get

152
00:07:29,220 --> 00:07:30,479
started

153
00:07:30,479 --> 00:07:35,300
and we have pm on lag first

154
00:07:42,660 --> 00:07:44,340
can you hear me

155
00:07:44,340 --> 00:07:46,740
louder

156
00:07:46,740 --> 00:07:48,180
would you like to share the slides

157
00:07:48,180 --> 00:07:51,060
yourself or uh could you please share it

158
00:07:51,060 --> 00:07:53,639
for me absolutely

159
00:07:53,639 --> 00:07:56,539
thank you very much

160
00:08:00,900 --> 00:08:02,819
yeah I can see

161
00:08:02,819 --> 00:08:06,240
okay hello everyone I'm kieranjo from

162
00:08:06,240 --> 00:08:09,240
Huawei and I will introduce the programs

163
00:08:09,240 --> 00:08:12,479
of Performance Management on lag these

164
00:08:12,479 --> 00:08:15,139
two drafts are adopted just after

165
00:08:15,139 --> 00:08:19,639
ief0114 and next the page

166
00:08:21,120 --> 00:08:23,240
um let's firstly recap the motivation

167
00:08:23,240 --> 00:08:27,240
the lag provides an aggregation for of

168
00:08:27,240 --> 00:08:30,300
medical links we want to measure the

169
00:08:30,300 --> 00:08:33,899
performance of each link however however

170
00:08:33,899 --> 00:08:37,740
existing active PM methods run a single

171
00:08:37,740 --> 00:08:39,659
test session over the aggregation

172
00:08:39,659 --> 00:08:41,880
without the knowledge of each member

173
00:08:41,880 --> 00:08:45,000
link this will make it impossible to

174
00:08:45,000 --> 00:08:47,700
measure the performance of even physical

175
00:08:47,700 --> 00:08:51,300
member link so we followed the similar

176
00:08:51,300 --> 00:09:00,060
idea of RFC 31 uh 71 30 the BFD

177
00:09:00,060 --> 00:09:02,899
and next

178
00:09:03,380 --> 00:09:06,600
to measure the performance metrics of

179
00:09:06,600 --> 00:09:10,200
every member link of lag multiple

180
00:09:10,200 --> 00:09:13,200
sessions need to be established between

181
00:09:13,200 --> 00:09:15,839
the two end points and are connected

182
00:09:15,839 --> 00:09:19,320
that are connected by the lag these

183
00:09:19,320 --> 00:09:22,440
sessions are called micro sessions when

184
00:09:22,440 --> 00:09:25,380
the macro sessions need to associate

185
00:09:25,380 --> 00:09:28,200
with the corresponding member links for

186
00:09:28,200 --> 00:09:31,380
example when the reflector receives a

187
00:09:31,380 --> 00:09:35,040
test package it needs to know from which

188
00:09:35,040 --> 00:09:37,980
membrane the packet is received and

189
00:09:37,980 --> 00:09:42,000
correlated with micro session so we

190
00:09:42,000 --> 00:09:46,620
execute we extend a new commands type to

191
00:09:46,620 --> 00:09:49,980
indicate the set of micro sessions of

192
00:09:49,980 --> 00:09:51,660
lag

193
00:09:51,660 --> 00:09:56,580
and we use identifier to correlate the

194
00:09:56,580 --> 00:09:59,760
test packet to a particular micro

195
00:09:59,760 --> 00:10:02,160
session and carry the member link

196
00:10:02,160 --> 00:10:06,779
information for validity check

197
00:10:06,779 --> 00:10:09,620
next

198
00:10:10,680 --> 00:10:14,459
this shows the web and the t-wamp

199
00:10:14,459 --> 00:10:18,120
extensions including control message and

200
00:10:18,120 --> 00:10:21,300
the test packet we add two new control

201
00:10:21,300 --> 00:10:24,180
messages the request the o1 micro

202
00:10:24,180 --> 00:10:27,000
sessions and the request T1 micro

203
00:10:27,000 --> 00:10:28,080
sessions

204
00:10:28,080 --> 00:10:31,440
and in the test packet we add sender

205
00:10:31,440 --> 00:10:34,140
micro session ID and the reflector micro

206
00:10:34,140 --> 00:10:39,420
session ID both IDs are locally assigned

207
00:10:39,420 --> 00:10:42,140
next

208
00:10:43,200 --> 00:10:46,560
and this shows how the sender a micro

209
00:10:46,560 --> 00:10:49,500
session ID and the reflector micro

210
00:10:49,500 --> 00:10:51,360
session ID are located in the

211
00:10:51,360 --> 00:10:54,440
authenticated mode

212
00:10:54,779 --> 00:10:57,860
the next page

213
00:10:58,320 --> 00:11:02,459
a stem do not have a control plan so

214
00:11:02,459 --> 00:11:05,399
only need to extend the extra package

215
00:11:05,399 --> 00:11:07,200
and

216
00:11:07,200 --> 00:11:11,220
your stamp tlv mechanism extend a stamp

217
00:11:11,220 --> 00:11:14,160
test packet with one or more optional

218
00:11:14,160 --> 00:11:17,940
trvs so we propose a micro session ID

219
00:11:17,940 --> 00:11:19,860
tlv here

220
00:11:19,860 --> 00:11:23,120
next page

221
00:11:25,079 --> 00:11:28,079
there are some discussions

222
00:11:28,079 --> 00:11:31,200
during the adoption core it's about the

223
00:11:31,200 --> 00:11:35,640
interop issue because uh

224
00:11:35,640 --> 00:11:38,279
web light and example are different on

225
00:11:38,279 --> 00:11:42,120
the format uh Cuban per flight sender

226
00:11:42,120 --> 00:11:46,740
with a stamp reflector or a stamp sender

227
00:11:46,740 --> 00:11:50,519
with a T1 polite reflector may as usual

228
00:11:50,519 --> 00:11:54,300
so our conclusions are firstly there is

229
00:11:54,300 --> 00:11:57,240
no requirement for such deployment this

230
00:11:57,240 --> 00:11:59,940
only happens when micro when

231
00:11:59,940 --> 00:12:01,620
misconfiguration

232
00:12:01,620 --> 00:12:04,260
and so if there is misconfiguration

233
00:12:04,260 --> 00:12:07,200
existing mechanism described in this

234
00:12:07,200 --> 00:12:10,620
draft can detect then the operator can

235
00:12:10,620 --> 00:12:12,000
correct it

236
00:12:12,000 --> 00:12:16,579
at last a operator can choose not to

237
00:12:16,579 --> 00:12:20,040
not to use pm on lag and the micro

238
00:12:20,040 --> 00:12:22,680
session but to use independent session

239
00:12:22,680 --> 00:12:26,220
for each link so and we will then

240
00:12:26,220 --> 00:12:28,800
discuss how we will then describe this

241
00:12:28,800 --> 00:12:32,279
as operational considerations in our

242
00:12:32,279 --> 00:12:34,740
next revision

243
00:12:34,740 --> 00:12:37,700
next page

244
00:12:39,060 --> 00:12:43,620
and as as suggested By Request among

245
00:12:43,620 --> 00:12:47,100
authors next next step we will add a

246
00:12:47,100 --> 00:12:50,279
status process for a stamp extension

247
00:12:50,279 --> 00:12:53,279
because standard support both stateful

248
00:12:53,279 --> 00:12:56,700
and Status mode and stateless reflector

249
00:12:56,700 --> 00:12:59,100
May simply copy the received micro

250
00:12:59,100 --> 00:13:02,579
session ID in the reflector session ID

251
00:13:02,579 --> 00:13:05,700
and here we would like to hear more

252
00:13:05,700 --> 00:13:08,100
comments

253
00:13:08,100 --> 00:13:10,880
thank you

254
00:13:12,899 --> 00:13:15,720
thank you do we have any

255
00:13:15,720 --> 00:13:17,339
comments

256
00:13:17,339 --> 00:13:20,839
yeah Frank please go ahead

257
00:13:21,800 --> 00:13:24,540
yeah I have one high level question and

258
00:13:24,540 --> 00:13:27,660
sorry for maybe my misunderstanding of

259
00:13:27,660 --> 00:13:29,519
what you're trying to achieve but how

260
00:13:29,519 --> 00:13:32,279
would it work if you run stand between

261
00:13:32,279 --> 00:13:34,380
two notes and in between there are

262
00:13:34,380 --> 00:13:37,800
multiple X segments sequenced one after

263
00:13:37,800 --> 00:13:39,959
the other

264
00:13:39,959 --> 00:13:43,560
uh it does not work but but we have

265
00:13:43,560 --> 00:13:49,880
magazines to to fund this scenario

266
00:13:51,959 --> 00:13:55,560
so the the scope of the work is

267
00:13:55,560 --> 00:13:58,320
only a scenario where you only have two

268
00:13:58,320 --> 00:13:59,300
uh

269
00:13:59,300 --> 00:14:03,899
node adjacent notes okay all right

270
00:14:03,899 --> 00:14:05,700
I think that would be helpful to go and

271
00:14:05,700 --> 00:14:08,040
clarify right at the very beginning

272
00:14:08,040 --> 00:14:10,380
okay

273
00:14:10,380 --> 00:14:13,380
thank you um

274
00:14:13,380 --> 00:14:15,240
I thought we had Greg in the queue but

275
00:14:15,240 --> 00:14:17,420
maybe

276
00:14:20,399 --> 00:14:23,519
yeah I was too quick to jump in the

277
00:14:23,519 --> 00:14:25,800
queue while the friend continuan already

278
00:14:25,800 --> 00:14:27,240
resolved

279
00:14:27,240 --> 00:14:30,000
um just a note um so the use case and

280
00:14:30,000 --> 00:14:33,120
scope of this work is uh analogous to be

281
00:14:33,120 --> 00:14:36,600
of the over lag work which is exactly as

282
00:14:36,600 --> 00:14:39,899
Frank noted is only for

283
00:14:39,899 --> 00:14:40,860
um

284
00:14:40,860 --> 00:14:42,420
single link between

285
00:14:42,420 --> 00:14:42,839
[Music]

286
00:14:42,839 --> 00:14:43,740
um

287
00:14:43,740 --> 00:14:47,180
aggregation points

288
00:14:47,760 --> 00:14:51,180
and it it works only for lag it doesn't

289
00:14:51,180 --> 00:14:54,620
work for MC lag

290
00:14:58,680 --> 00:15:01,560
Frank you're still in the queue is it

291
00:15:01,560 --> 00:15:03,360
that you forgot to

292
00:15:03,360 --> 00:15:06,680
or do you have okay great

293
00:15:09,300 --> 00:15:11,160
okay thank you

294
00:15:11,160 --> 00:15:13,199
um

295
00:15:13,199 --> 00:15:15,779
if we have no more comments on this one

296
00:15:15,779 --> 00:15:18,240
we can move on to the next point in the

297
00:15:18,240 --> 00:15:21,540
agenda which should be

298
00:15:21,540 --> 00:15:24,199
uh

299
00:15:24,360 --> 00:15:27,000
capacity measurement ow Al do you want

300
00:15:27,000 --> 00:15:28,380
to drive the slides yourself or do you

301
00:15:28,380 --> 00:15:30,980
want me to share it

302
00:15:36,360 --> 00:15:39,420
uh we need your audio Al

303
00:15:39,420 --> 00:15:42,199
we can't hear you

304
00:15:45,920 --> 00:15:48,480
I'm gonna get rid of the video now just

305
00:15:48,480 --> 00:15:50,820
because that's uh you can't really see

306
00:15:50,820 --> 00:15:53,160
me anyway it's too dark here

307
00:15:53,160 --> 00:15:56,040
and I'll try to um

308
00:15:56,040 --> 00:15:58,880
share my screen

309
00:16:03,959 --> 00:16:05,519
okay

310
00:16:05,519 --> 00:16:08,240
all right

311
00:16:11,040 --> 00:16:13,920
yes I do

312
00:16:13,920 --> 00:16:16,699
select the window

313
00:16:19,380 --> 00:16:21,560
foreign

314
00:16:27,600 --> 00:16:29,880
all right so can you see the first slide

315
00:16:29,880 --> 00:16:32,459
yes

316
00:16:32,459 --> 00:16:33,660
great

317
00:16:33,660 --> 00:16:37,980
all right so um uh this is the uh the

318
00:16:37,980 --> 00:16:41,220
talk on the test protocol for um one-way

319
00:16:41,220 --> 00:16:43,560
IP capacity measurement and you know it

320
00:16:43,560 --> 00:16:44,820
turns out we can do a lot more than

321
00:16:44,820 --> 00:16:47,220
capacity measuring with this protocol so

322
00:16:47,220 --> 00:16:50,040
I encourage you to think about that

323
00:16:50,040 --> 00:16:52,199
um but we're what we're responding to

324
00:16:52,199 --> 00:16:55,440
this time is the security directorate

325
00:16:55,440 --> 00:16:58,800
um early review response which is now uh

326
00:16:58,800 --> 00:17:00,360
pretty much fully implemented in the

327
00:17:00,360 --> 00:17:01,199
draft

328
00:17:01,199 --> 00:17:04,319
and um with an exchange with uh Roman

329
00:17:04,319 --> 00:17:07,199
Daniel of uh you know the the SEC area

330
00:17:07,199 --> 00:17:10,439
A.D uh we want to have a little

331
00:17:10,439 --> 00:17:13,799
encrypted mode discussion so um anyway

332
00:17:13,799 --> 00:17:15,959
moving right along here

333
00:17:15,959 --> 00:17:20,000
so I sent this list uh to the ipbm list

334
00:17:20,000 --> 00:17:22,919
uh that describes the extensive changes

335
00:17:22,919 --> 00:17:24,720
in the protocol

336
00:17:24,720 --> 00:17:27,000
um the you know the big changes are for

337
00:17:27,000 --> 00:17:29,940
newly defined modes of uh Security

338
00:17:29,940 --> 00:17:31,799
operation

339
00:17:31,799 --> 00:17:35,940
um and uh I'm gonna go into uh one two

340
00:17:35,940 --> 00:17:38,400
and three here uh more extensively in

341
00:17:38,400 --> 00:17:40,559
the next picture but things you can't

342
00:17:40,559 --> 00:17:43,380
see in the pictures are the new key

343
00:17:43,380 --> 00:17:46,260
management and firewall configuration uh

344
00:17:46,260 --> 00:17:49,260
the new uh subsection outlines which

345
00:17:49,260 --> 00:17:51,960
basically align with each step of host

346
00:17:51,960 --> 00:17:54,720
processing for this protocol so that

347
00:17:54,720 --> 00:17:56,520
should make it pretty easy for people to

348
00:17:56,520 --> 00:17:59,340
read and understand as we work our way

349
00:17:59,340 --> 00:18:00,240
through

350
00:18:00,240 --> 00:18:02,220
we've got new security considerations

351
00:18:02,220 --> 00:18:05,220
where we discussed the attacks

352
00:18:05,220 --> 00:18:08,340
um going back to ipf114

353
00:18:08,340 --> 00:18:11,360
and a really expanded Ayanna section

354
00:18:11,360 --> 00:18:14,900
where we've got the new registry group

355
00:18:14,900 --> 00:18:18,380
several registry groups to uh

356
00:18:18,380 --> 00:18:22,580
support the expansion of the protocol

357
00:18:22,679 --> 00:18:25,320
so we're on slide three now

358
00:18:25,320 --> 00:18:27,480
um basically what I want to say here is

359
00:18:27,480 --> 00:18:30,660
that we have um you know for background

360
00:18:30,660 --> 00:18:34,860
in the control phase which is the top

361
00:18:34,860 --> 00:18:38,160
half of the slide we're using

362
00:18:38,160 --> 00:18:40,440
um two kinds of packet exchanges zero

363
00:18:40,440 --> 00:18:42,480
setup Exchange

364
00:18:42,480 --> 00:18:45,059
and a test activation Exchange

365
00:18:45,059 --> 00:18:49,460
and um for a uh for the newly required

366
00:18:49,460 --> 00:18:52,200
authentication mode for the control

367
00:18:52,200 --> 00:18:53,400
phase

368
00:18:53,400 --> 00:18:56,820
we've added the uh authentication die

369
00:18:56,820 --> 00:19:01,620
test and processing on all the requests

370
00:19:01,620 --> 00:19:04,559
from the client to the server and all

371
00:19:04,559 --> 00:19:07,320
the replies from the server to the

372
00:19:07,320 --> 00:19:10,620
client in both tests testing that's set

373
00:19:10,620 --> 00:19:12,299
up test activation

374
00:19:12,299 --> 00:19:14,840
so that's a that's a very complete

375
00:19:14,840 --> 00:19:18,179
authentication mode now

376
00:19:18,179 --> 00:19:22,580
um we've also got a a um an optional

377
00:19:22,580 --> 00:19:25,799
authentication mode which takes care of

378
00:19:25,799 --> 00:19:28,799
one of the messages of the data phase

379
00:19:28,799 --> 00:19:30,600
so now going down below the control

380
00:19:30,600 --> 00:19:33,480
phase line into the data phase

381
00:19:33,480 --> 00:19:36,720
we typically have our load pdus we send

382
00:19:36,720 --> 00:19:39,240
in really high rates we can go up to 40

383
00:19:39,240 --> 00:19:41,700
gigabits per second now in our running

384
00:19:41,700 --> 00:19:42,720
code

385
00:19:42,720 --> 00:19:47,820
and we expect to get feedback pdus back

386
00:19:47,820 --> 00:19:50,760
from the uh from the server for example

387
00:19:50,760 --> 00:19:53,700
so um now the key information we're

388
00:19:53,700 --> 00:19:56,700
trying to authenticate here is the

389
00:19:56,700 --> 00:19:58,799
measurements that we conduct at 50

390
00:19:58,799 --> 00:20:01,799
millisecond intervals and share back in

391
00:20:01,799 --> 00:20:07,160
the feedback or depending upon the role

392
00:20:10,380 --> 00:20:12,840
and that's an important uh piece of

393
00:20:12,840 --> 00:20:14,400
information too

394
00:20:14,400 --> 00:20:17,400
so we can authenticate this it's an

395
00:20:17,400 --> 00:20:19,740
optional mode it might affect some of

396
00:20:19,740 --> 00:20:21,840
the round trip measurements we make here

397
00:20:21,840 --> 00:20:25,260
and that's why it's optional uh you know

398
00:20:25,260 --> 00:20:29,340
no no big uh no big shakes there

399
00:20:29,340 --> 00:20:29,940
um

400
00:20:29,940 --> 00:20:32,580
the the thing that the feedback we got

401
00:20:32,580 --> 00:20:35,900
which we uh which we talked about uh at

402
00:20:35,900 --> 00:20:39,720
itf-114 and then continued to decide not

403
00:20:39,720 --> 00:20:42,660
to do is to add authentication digest

404
00:20:42,660 --> 00:20:46,440
and processing to the load pdus you know

405
00:20:46,440 --> 00:20:48,480
we're sending lots and lots of packets

406
00:20:48,480 --> 00:20:50,760
there very often they're at the rate

407
00:20:50,760 --> 00:20:54,059
that uh the CPE can barely handle

408
00:20:54,059 --> 00:20:56,580
without doing anything extra you know

409
00:20:56,580 --> 00:20:58,799
like authentication and certainly not

410
00:20:58,799 --> 00:21:02,520
encryption so um these are you know when

411
00:21:02,520 --> 00:21:04,799
these are the lightweight CPE we can

412
00:21:04,799 --> 00:21:06,660
really get in trouble there and we

413
00:21:06,660 --> 00:21:08,340
decided you know there's really not that

414
00:21:08,340 --> 00:21:12,000
much information here to protect so um

415
00:21:12,000 --> 00:21:15,299
uh we're not going to add the load

416
00:21:15,299 --> 00:21:18,120
um the uh the authentication digest and

417
00:21:18,120 --> 00:21:21,360
processing in the low pdus that's our uh

418
00:21:21,360 --> 00:21:24,299
that's our choice for now we've also got

419
00:21:24,299 --> 00:21:26,640
the completely unknown authenticated

420
00:21:26,640 --> 00:21:30,360
mode so that's uh available as well for

421
00:21:30,360 --> 00:21:34,140
folks who want to do this

422
00:21:34,140 --> 00:21:38,580
so moving on to uh to slide four uh

423
00:21:38,580 --> 00:21:41,460
Brian Weiss Who provided the

424
00:21:41,460 --> 00:21:42,000
um

425
00:21:42,000 --> 00:21:44,820
they very kindly provided the the early

426
00:21:44,820 --> 00:21:48,120
sectarian review suggested that we might

427
00:21:48,120 --> 00:21:50,480
use dtls

428
00:21:50,480 --> 00:21:53,580
during the test setup and activation

429
00:21:53,580 --> 00:21:56,159
however the um it was kind of like I

430
00:21:56,159 --> 00:21:58,440
I've said before here the information

431
00:21:58,440 --> 00:22:00,600
we're exchanging there's a very limited

432
00:22:00,600 --> 00:22:01,320
value

433
00:22:01,320 --> 00:22:04,380
uh test is starting we got configuration

434
00:22:04,380 --> 00:22:06,299
of the test you know you could easily

435
00:22:06,299 --> 00:22:09,539
think or pin print this uh and reveal

436
00:22:09,539 --> 00:22:11,340
that it's a measurement there's no

437
00:22:11,340 --> 00:22:14,460
results there in the control phase uh

438
00:22:14,460 --> 00:22:15,900
when we talked you know back and forth

439
00:22:15,900 --> 00:22:18,780
from Roman it's really the measurement

440
00:22:18,780 --> 00:22:21,299
results the the send rate structure

441
00:22:21,299 --> 00:22:23,039
that's that's the critical information

442
00:22:23,039 --> 00:22:25,020
that's exposed

443
00:22:25,020 --> 00:22:28,860
so uh dtls doesn't help with that we can

444
00:22:28,860 --> 00:22:31,500
only use it during the control phase

445
00:22:31,500 --> 00:22:33,620
um the re-transmissions that it has

446
00:22:33,620 --> 00:22:36,299
ordered delivery they're not really

447
00:22:36,299 --> 00:22:38,400
helpful in the control phase I'm sorry

448
00:22:38,400 --> 00:22:42,539
data phase so um uh the most valuable

449
00:22:42,539 --> 00:22:44,520
information is communicative or dtls

450
00:22:44,520 --> 00:22:45,720
can't help us

451
00:22:45,720 --> 00:22:47,700
so we're not going to do this that's our

452
00:22:47,700 --> 00:22:51,140
that's our choice right now

453
00:22:51,659 --> 00:22:56,820
so um Roman uh the security ad Estes SMS

454
00:22:56,820 --> 00:22:59,580
series a very pointed questions trying

455
00:22:59,580 --> 00:23:01,980
to lead us to the truth uh which was

456
00:23:01,980 --> 00:23:04,860
very kind to him and I replied back to

457
00:23:04,860 --> 00:23:07,080
that on the list uh the key information

458
00:23:07,080 --> 00:23:09,659
we're exposing is during the data phase

459
00:23:09,659 --> 00:23:12,120
the exposed measurements and rate

460
00:23:12,120 --> 00:23:15,360
control messages they seem to have been

461
00:23:15,360 --> 00:23:19,159
require some form of encryption

462
00:23:19,159 --> 00:23:22,799
so a simple solution here is to encrypt

463
00:23:22,799 --> 00:23:24,900
all the things to operate the protocol

464
00:23:24,900 --> 00:23:27,260
within an encrypted tunnel

465
00:23:27,260 --> 00:23:29,940
excuse me

466
00:23:29,940 --> 00:23:33,120
however we've got this uh you know that

467
00:23:33,120 --> 00:23:35,700
when you have encryption like this

468
00:23:35,700 --> 00:23:38,460
um it's a bilateral agreement the tests

469
00:23:38,460 --> 00:23:41,280
are point to point so the users can

470
00:23:41,280 --> 00:23:43,679
choose their own encrypted tunnel and

471
00:23:43,679 --> 00:23:47,039
their keys and and set it up uh you know

472
00:23:47,039 --> 00:23:50,159
as they desire there's there's plenty of

473
00:23:50,159 --> 00:23:52,799
support for independent tunnel

474
00:23:52,799 --> 00:23:55,919
implementations in Linux hosts there's

475
00:23:55,919 --> 00:23:59,039
even Hardware support in smart Nixon you

476
00:23:59,039 --> 00:24:01,260
know data center equipment and so forth

477
00:24:01,260 --> 00:24:03,840
so um you know we strongly take the

478
00:24:03,840 --> 00:24:06,000
position here there's no need to modify

479
00:24:06,000 --> 00:24:08,580
the protocol to use an encrypted tunnel

480
00:24:08,580 --> 00:24:11,940
we'll simply say here's a mode where you

481
00:24:11,940 --> 00:24:15,659
use the the protocol and you set up your

482
00:24:15,659 --> 00:24:17,340
own encrypted tunnel

483
00:24:17,340 --> 00:24:19,799
so you know that turns out to be an

484
00:24:19,799 --> 00:24:22,500
advantage some users may want to

485
00:24:22,500 --> 00:24:25,320
characterize uh their own measurements

486
00:24:25,320 --> 00:24:27,960
in the tunnel technology they chose so

487
00:24:27,960 --> 00:24:30,840
let's leave the choice to the users

488
00:24:30,840 --> 00:24:34,260
um a emphasis in ippm is accuracy

489
00:24:34,260 --> 00:24:36,600
so you know we'd even recommend that

490
00:24:36,600 --> 00:24:39,179
that some people

491
00:24:39,179 --> 00:24:41,460
who are going to use a tunnel run some

492
00:24:41,460 --> 00:24:44,940
tests unauthenticated first uh to see if

493
00:24:44,940 --> 00:24:47,280
the tunnel has negative impact and you

494
00:24:47,280 --> 00:24:49,740
can purposely characterize the tunnel

495
00:24:49,740 --> 00:24:52,320
encryption uh this way you know very

496
00:24:52,320 --> 00:24:54,000
likely it's going to be that the

497
00:24:54,000 --> 00:24:56,220
capacity you see with an encrypted

498
00:24:56,220 --> 00:24:58,919
tunnel is less than the unauthenticated

499
00:24:58,919 --> 00:25:02,220
mode or even the um uh the

500
00:25:02,220 --> 00:25:05,159
recommendation the recommended uh

501
00:25:05,159 --> 00:25:07,559
authenticated mode that people can use

502
00:25:07,559 --> 00:25:10,200
that's still an option so

503
00:25:10,200 --> 00:25:11,580
um

504
00:25:11,580 --> 00:25:13,440
let's see there we go oh yeah and then

505
00:25:13,440 --> 00:25:15,120
the you know in the running code we've

506
00:25:15,120 --> 00:25:18,059
got the MTU set at a fairly uh

507
00:25:18,059 --> 00:25:20,520
conservative value

508
00:25:20,520 --> 00:25:23,240
um so

509
00:25:25,820 --> 00:25:30,360
our our our case is that the uh uh you

510
00:25:30,360 --> 00:25:32,880
know if we wanted if we if people want

511
00:25:32,880 --> 00:25:35,220
to use encryption uh they can set it up

512
00:25:35,220 --> 00:25:38,880
themselves between consenting adults and

513
00:25:38,880 --> 00:25:40,020
um you know that's what we would

514
00:25:40,020 --> 00:25:42,240
describe in the draft we don't see a

515
00:25:42,240 --> 00:25:44,039
need to modify the protocol to do this

516
00:25:44,039 --> 00:25:46,980
it'll work uh just as well

517
00:25:46,980 --> 00:25:49,200
so that's what we'll do in the draft and

518
00:25:49,200 --> 00:25:50,700
this is the kind of thing I I just

519
00:25:50,700 --> 00:25:52,200
wanted to talk about for a few minutes

520
00:25:52,200 --> 00:25:56,480
if if folks have comments on this

521
00:26:04,140 --> 00:26:05,880
all right so I'll let people think about

522
00:26:05,880 --> 00:26:08,279
that while we go on to the uh the final

523
00:26:08,279 --> 00:26:11,220
slide Mark Martin indicator sorry oh

524
00:26:11,220 --> 00:26:13,740
okay client like resets all the time and

525
00:26:13,740 --> 00:26:15,539
I can't get in the queue

526
00:26:15,539 --> 00:26:18,720
um okay I'm sorry I don't know if maybe

527
00:26:18,720 --> 00:26:20,220
I missed the explanation but why can't

528
00:26:20,220 --> 00:26:22,679
you use dtls to exchange the sensitive

529
00:26:22,679 --> 00:26:24,419
information

530
00:26:24,419 --> 00:26:28,919
oh um it it it uh it performs

531
00:26:28,919 --> 00:26:32,340
re-transmissions and ordered delivery

532
00:26:32,340 --> 00:26:36,659
so we make measurements on uh the

533
00:26:36,659 --> 00:26:39,360
feedback packets and you know obviously

534
00:26:39,360 --> 00:26:42,720
the test stream so we don't want we

535
00:26:42,720 --> 00:26:44,419
don't want the feedback packets

536
00:26:44,419 --> 00:26:47,039
retransmitted we measure round trip time

537
00:26:47,039 --> 00:26:48,240
on those

538
00:26:48,240 --> 00:26:51,720
and we don't want them reordered so

539
00:26:51,720 --> 00:26:54,179
basically the dtls features which are

540
00:26:54,179 --> 00:26:56,039
really nice that you know that might

541
00:26:56,039 --> 00:26:58,679
make sense in the control phase they

542
00:26:58,679 --> 00:27:00,179
don't help us at all when we're making

543
00:27:00,179 --> 00:27:03,179
our re-transmission I'm sorry our our

544
00:27:03,179 --> 00:27:04,740
feedback measurements for Round Trip

545
00:27:04,740 --> 00:27:07,919
time on the uh the you know the feedback

546
00:27:07,919 --> 00:27:11,900
pdus does that make sense

547
00:27:11,940 --> 00:27:12,960
um

548
00:27:12,960 --> 00:27:15,500
yes

549
00:27:15,500 --> 00:27:18,919
uh I mean

550
00:27:19,919 --> 00:27:21,299
uh

551
00:27:21,299 --> 00:27:22,740
I guess

552
00:27:22,740 --> 00:27:25,080
the reason I'm hemming and hawing up

553
00:27:25,080 --> 00:27:26,820
here is that I mean it seems like this

554
00:27:26,820 --> 00:27:28,200
is a little scope creep on what this

555
00:27:28,200 --> 00:27:29,880
traffic and what this design is doing

556
00:27:29,880 --> 00:27:31,200
right you're trying to measure capacity

557
00:27:31,200 --> 00:27:32,159
and

558
00:27:32,159 --> 00:27:35,220
and we have other tools to measure delay

559
00:27:35,220 --> 00:27:37,500
um I mean certainly nice

560
00:27:37,500 --> 00:27:39,779
but um

561
00:27:39,779 --> 00:27:41,760
it's hey Martin it's definitely not

562
00:27:41,760 --> 00:27:44,520
scope creep then let me take that on

563
00:27:44,520 --> 00:27:48,779
we measure we measure loss and delay

564
00:27:48,779 --> 00:27:51,059
variation and we use that information

565
00:27:51,059 --> 00:27:54,299
directly in our load adjustment or

566
00:27:54,299 --> 00:27:56,340
search algorithm when we're trying to

567
00:27:56,340 --> 00:27:59,840
search for the maximum capacity

568
00:28:04,380 --> 00:28:05,520
all right

569
00:28:05,520 --> 00:28:06,659
um

570
00:28:06,659 --> 00:28:09,059
all right thanks

571
00:28:09,059 --> 00:28:11,720
sure thing

572
00:28:12,900 --> 00:28:15,240
so here's the here's the wrap up I've

573
00:28:15,240 --> 00:28:17,700
still got a couple of minutes here

574
00:28:17,700 --> 00:28:20,159
um I think we'll have some more uh SEC

575
00:28:20,159 --> 00:28:22,919
area uh maybe SEC directorate uh

576
00:28:22,919 --> 00:28:25,020
interactions

577
00:28:25,020 --> 00:28:28,559
um we'd like to agree to uh on a

578
00:28:28,559 --> 00:28:31,440
proposal for a fully encrypted mode but

579
00:28:31,440 --> 00:28:34,140
um you know uh we'd like to implement a

580
00:28:34,140 --> 00:28:37,440
working group agreed proposal and uh for

581
00:28:37,440 --> 00:28:39,659
us the bottom line is you know as far as

582
00:28:39,659 --> 00:28:42,779
we can tell even when we even when we

583
00:28:42,779 --> 00:28:46,020
put in encryption in our protocols it's

584
00:28:46,020 --> 00:28:48,360
not widely activated

585
00:28:48,360 --> 00:28:50,520
um in the measurement protocols that are

586
00:28:50,520 --> 00:28:53,100
used to scale you might see it going on

587
00:28:53,100 --> 00:28:55,799
between consenting parties and that's

588
00:28:55,799 --> 00:28:59,000
fine but um you know oh lamp had

589
00:28:59,000 --> 00:29:01,620
encrypted mode t-whip had encrypted mode

590
00:29:01,620 --> 00:29:06,000
uh we have 600 000 T wamp instantiations

591
00:29:06,000 --> 00:29:09,179
we don't use encryption in any of them

592
00:29:09,179 --> 00:29:12,900
so look if we if we have um have some

593
00:29:12,900 --> 00:29:14,820
agreement on this uh you know we could

594
00:29:14,820 --> 00:29:17,100
spend another draft and maybe get a

595
00:29:17,100 --> 00:29:20,700
working group class call early to 2023

596
00:29:20,700 --> 00:29:23,100
you know maybe sooner if the encryption

597
00:29:23,100 --> 00:29:25,080
solution is simple it's really just

598
00:29:25,080 --> 00:29:28,140
about wording and describing it and um

599
00:29:28,140 --> 00:29:30,720
uh you know I wanted to note finally

600
00:29:30,720 --> 00:29:34,200
here that uh lots of measurements with

601
00:29:34,200 --> 00:29:39,000
um RFC 99d7 the capacity metric uh and

602
00:29:39,000 --> 00:29:41,760
uh round-trip time under working load uh

603
00:29:41,760 --> 00:29:42,899
those are the kinds of things we've been

604
00:29:42,899 --> 00:29:45,960
sharing on the list uh very recently and

605
00:29:45,960 --> 00:29:48,000
it points to the fact that uh you know

606
00:29:48,000 --> 00:29:49,500
this protocol can be used for other

607
00:29:49,500 --> 00:29:52,980
things work and load assessment capacity

608
00:29:52,980 --> 00:29:54,960
under working load and so forth we've

609
00:29:54,960 --> 00:29:57,659
got a lot of capability here so let's uh

610
00:29:57,659 --> 00:29:59,580
it said you know I don't really see this

611
00:29:59,580 --> 00:30:01,799
is scope creep I see it as you know

612
00:30:01,799 --> 00:30:04,380
using a tool that's really well endowed

613
00:30:04,380 --> 00:30:07,380
to make all the measurements we can so

614
00:30:07,380 --> 00:30:09,419
thanks for your time everybody any

615
00:30:09,419 --> 00:30:10,860
further questions I'll be glad to take

616
00:30:10,860 --> 00:30:13,039
them

617
00:30:14,760 --> 00:30:17,299
foreign

618
00:30:25,679 --> 00:30:27,360
I went back and checked because I

619
00:30:27,360 --> 00:30:28,460
thought I was

620
00:30:28,460 --> 00:30:31,580
why is like

621
00:30:31,580 --> 00:30:33,299
dtls

622
00:30:33,299 --> 00:30:35,580
doesn't have re-transmission except for

623
00:30:35,580 --> 00:30:38,779
the handshake messages right

624
00:30:39,480 --> 00:30:40,700
I mean

625
00:30:40,700 --> 00:30:43,679
I thought it was re-transmission for for

626
00:30:43,679 --> 00:30:46,200
all the messages it protects

627
00:30:46,200 --> 00:30:48,960
and when I said this last time around I

628
00:30:48,960 --> 00:30:51,179
saw Tommy nodding maybe Tommy can help

629
00:30:51,179 --> 00:30:54,919
us out here Tom Tommy

630
00:30:55,500 --> 00:30:57,539
um I I think that it should just mainly

631
00:30:57,539 --> 00:31:01,320
be the the handshake messages that have

632
00:31:01,320 --> 00:31:03,179
the re-transmission

633
00:31:03,179 --> 00:31:04,440
um yeah

634
00:31:04,440 --> 00:31:07,020
I mean it's it's meant to go over UDP so

635
00:31:07,020 --> 00:31:09,539
I mean like you would use less if you

636
00:31:09,539 --> 00:31:11,159
could about a liability yeah so there's

637
00:31:11,159 --> 00:31:13,500
a retrans mechanism for the handshake

638
00:31:13,500 --> 00:31:16,020
which is a different thing

639
00:31:16,020 --> 00:31:18,600
um I think it's similar I mean aside

640
00:31:18,600 --> 00:31:20,100
from security I think like the transport

641
00:31:20,100 --> 00:31:22,380
guarantees are similar to UDP

642
00:31:22,380 --> 00:31:24,659
so I'm not sure that this the premise of

643
00:31:24,659 --> 00:31:26,159
this is correct

644
00:31:26,159 --> 00:31:29,460
okay now I miss I'm I mean my

645
00:31:29,460 --> 00:31:31,260
understanding was that you know when I

646
00:31:31,260 --> 00:31:33,059
read about it it was definitely talking

647
00:31:33,059 --> 00:31:34,860
about re-transmissions

648
00:31:34,860 --> 00:31:38,039
and um handshake has to be has to have

649
00:31:38,039 --> 00:31:39,720
that so it does create like a little

650
00:31:39,720 --> 00:31:42,179
like a mini TCP for the handshake but

651
00:31:42,179 --> 00:31:43,440
after that

652
00:31:43,440 --> 00:31:45,659
no it doesn't have those guarantees

653
00:31:45,659 --> 00:31:47,700
okay okay

654
00:31:47,700 --> 00:31:52,020
all right so so dtls would be would be

655
00:31:52,020 --> 00:31:54,480
applicable then but you know I'd make

656
00:31:54,480 --> 00:31:57,840
the same case that that um you know the

657
00:31:57,840 --> 00:32:02,279
the if you if you really want if well if

658
00:32:02,279 --> 00:32:03,779
you really want to encrypt everything

659
00:32:03,779 --> 00:32:06,480
then The Simple Solution is to put it in

660
00:32:06,480 --> 00:32:08,279
a tunnel

661
00:32:08,279 --> 00:32:10,559
yes if you certainly if the probe

662
00:32:10,559 --> 00:32:12,059
traffic you want to encrypt you would

663
00:32:12,059 --> 00:32:13,320
need to do that

664
00:32:13,320 --> 00:32:15,539
um but obviously as you as you are well

665
00:32:15,539 --> 00:32:17,820
aware that seems that potentially can

666
00:32:17,820 --> 00:32:19,500
influence the throughput you can

667
00:32:19,500 --> 00:32:20,580
generate

668
00:32:20,580 --> 00:32:21,360
um

669
00:32:21,360 --> 00:32:24,240
which may or may not be a problem

670
00:32:24,240 --> 00:32:27,840
yeah I I I mean it seems a little

671
00:32:27,840 --> 00:32:30,779
weird to say

672
00:32:30,779 --> 00:32:32,940
um I'll be brief sorry I know I'm out of

673
00:32:32,940 --> 00:32:33,840
time

674
00:32:33,840 --> 00:32:35,460
um it seems a little weird to say well

675
00:32:35,460 --> 00:32:37,200
like you can try you can do the test

676
00:32:37,200 --> 00:32:39,840
without encryption and into these tests

677
00:32:39,840 --> 00:32:41,460
with encryption to verify that like it's

678
00:32:41,460 --> 00:32:43,500
not messing up your measurement and do

679
00:32:43,500 --> 00:32:45,299
the test with encryption because then

680
00:32:45,299 --> 00:32:47,279
like the data is then passing

681
00:32:47,279 --> 00:32:49,679
unencrypted right

682
00:32:49,679 --> 00:32:51,679
um

683
00:32:53,640 --> 00:32:55,679
well I mean if you did that once or

684
00:32:55,679 --> 00:32:57,840
twice before you started your your

685
00:32:57,840 --> 00:33:00,720
tunnel then you'd have the you know that

686
00:33:00,720 --> 00:33:02,220
I mean those are the kinds of things

687
00:33:02,220 --> 00:33:04,740
that that uh you know it's a really

688
00:33:04,740 --> 00:33:06,179
simply die it's a really simple

689
00:33:06,179 --> 00:33:08,580
comparison uh there's not that much

690
00:33:08,580 --> 00:33:11,279
information that's going to be

691
00:33:11,279 --> 00:33:13,559
um you know exposed and you're doing it

692
00:33:13,559 --> 00:33:16,679
quickly potentially you know in a on a

693
00:33:16,679 --> 00:33:18,419
port that uh people would have trouble

694
00:33:18,419 --> 00:33:21,299
finding so you know I think there's

695
00:33:21,299 --> 00:33:24,360
value in in having that comparison but

696
00:33:24,360 --> 00:33:26,279
the bottom line is you want to know

697
00:33:26,279 --> 00:33:28,440
whether the tunnel is is affecting your

698
00:33:28,440 --> 00:33:30,720
your accuracy or not and with that

699
00:33:30,720 --> 00:33:33,240
little data point you can know

700
00:33:33,240 --> 00:33:35,700
okay so if if the premise is that you're

701
00:33:35,700 --> 00:33:38,039
using some like other link that is not

702
00:33:38,039 --> 00:33:39,539
you know

703
00:33:39,539 --> 00:33:41,100
you're putting on like a local host or

704
00:33:41,100 --> 00:33:42,480
whatever so like you're running it

705
00:33:42,480 --> 00:33:43,620
through the encryption without actually

706
00:33:43,620 --> 00:33:45,240
putting it out online I think that's

707
00:33:45,240 --> 00:33:47,820
fine anyway I'm I'll take enough time so

708
00:33:47,820 --> 00:33:49,320
thanks bye

709
00:33:49,320 --> 00:33:51,419
yeah thanks Martin thanks for the

710
00:33:51,419 --> 00:33:54,840
clarification go ahead Tommy

711
00:33:54,840 --> 00:33:56,820
hello

712
00:33:56,820 --> 00:33:59,000
so I wanted to clarify

713
00:33:59,000 --> 00:34:01,980
for the the next steps here around

714
00:34:01,980 --> 00:34:03,419
encryption

715
00:34:03,419 --> 00:34:04,919
um

716
00:34:04,919 --> 00:34:07,019
since it seems like from this you're

717
00:34:07,019 --> 00:34:09,179
proposing

718
00:34:09,179 --> 00:34:11,339
you know just you know put it in an

719
00:34:11,339 --> 00:34:13,619
encrypted tunnel if you want and I guess

720
00:34:13,619 --> 00:34:15,659
the other thing on the table is you know

721
00:34:15,659 --> 00:34:18,480
if dtls does work you could just say you

722
00:34:18,480 --> 00:34:23,040
know slap slap in details optionally

723
00:34:23,040 --> 00:34:24,960
are those the things that are on the

724
00:34:24,960 --> 00:34:27,540
table for this

725
00:34:27,540 --> 00:34:29,820
like is the fully encrypted mode just

726
00:34:29,820 --> 00:34:31,199
going to come down to put it in a

727
00:34:31,199 --> 00:34:32,159
specific

728
00:34:32,159 --> 00:34:35,219
in any tunnel you want or is it going to

729
00:34:35,219 --> 00:34:37,379
be a specific protocol change

730
00:34:37,379 --> 00:34:38,879
what are you thinking

731
00:34:38,879 --> 00:34:42,000
um yeah a good good question I I'm

732
00:34:42,000 --> 00:34:44,159
trying to avoid protocol changes at this

733
00:34:44,159 --> 00:34:46,800
point right and I think it's I think

734
00:34:46,800 --> 00:34:49,560
it's really simple that people could you

735
00:34:49,560 --> 00:34:51,000
know choose their own tunnel they're

736
00:34:51,000 --> 00:34:52,980
likely to do that anyway they're even

737
00:34:52,980 --> 00:34:55,199
likely to have the encrypted tunnel up

738
00:34:55,199 --> 00:34:57,480
and running anyway between consenting

739
00:34:57,480 --> 00:34:58,500
adults

740
00:34:58,500 --> 00:35:01,500
so so the so the answer is really simple

741
00:35:01,500 --> 00:35:03,300
if you if you want to make these

742
00:35:03,300 --> 00:35:06,000
measurements run it inside a tunnel and

743
00:35:06,000 --> 00:35:07,560
and there's lots of different tunnel

744
00:35:07,560 --> 00:35:10,380
choices you know why why should we you

745
00:35:10,380 --> 00:35:13,740
know get into those details okay so this

746
00:35:13,740 --> 00:35:15,780
would be essentially an additional

747
00:35:15,780 --> 00:35:18,480
uh subsection that's like one paragraph

748
00:35:18,480 --> 00:35:20,520
long that says hey

749
00:35:20,520 --> 00:35:23,700
here's how you can run this in a tunnel

750
00:35:23,700 --> 00:35:24,900
and the impacts it may have in your

751
00:35:24,900 --> 00:35:27,000
measurements and how to

752
00:35:27,000 --> 00:35:28,440
think about it

753
00:35:28,440 --> 00:35:32,660
yeah that's exactly right perfect

754
00:35:35,460 --> 00:35:37,560
so it'll be it'd be real interesting to

755
00:35:37,560 --> 00:35:40,500
find out how the security area reacts to

756
00:35:40,500 --> 00:35:43,020
that and you know whether uh whether we

757
00:35:43,020 --> 00:35:45,500
can do this

758
00:35:51,480 --> 00:35:53,160
okay

759
00:35:53,160 --> 00:35:54,960
well thanks very much everybody I

760
00:35:54,960 --> 00:35:57,599
appreciate the uh the corrections and

761
00:35:57,599 --> 00:35:59,940
the feedback today

762
00:35:59,940 --> 00:36:02,400
thanks a lot L and then we move onwards

763
00:36:02,400 --> 00:36:05,720
to encrypted PDM

764
00:36:16,920 --> 00:36:19,640
uh

765
00:36:23,520 --> 00:36:27,240
let me see see if it works otherwise

766
00:36:27,240 --> 00:36:30,240
no

767
00:36:30,859 --> 00:36:34,700
I pressed this one right

768
00:36:37,140 --> 00:36:42,020
okay okay next slide please

769
00:36:42,300 --> 00:36:45,180
okay this is kind of the yeah

770
00:36:45,180 --> 00:36:47,640
this kind of agenda

771
00:36:47,640 --> 00:36:51,980
um let's go through that next please

772
00:36:52,680 --> 00:36:56,280
okay so in terms of implementation

773
00:36:56,280 --> 00:36:59,940
um we're changing to using abpf we used

774
00:36:59,940 --> 00:37:01,260
to have

775
00:37:01,260 --> 00:37:05,339
um uh patches to the kernel and abpf

776
00:37:05,339 --> 00:37:07,619
runs in user mode and we can use it on

777
00:37:07,619 --> 00:37:10,320
uh more platforms so that's that's where

778
00:37:10,320 --> 00:37:11,400
we're trying to do just for the

779
00:37:11,400 --> 00:37:13,320
implementation we can always support

780
00:37:13,320 --> 00:37:15,480
Windows

781
00:37:15,480 --> 00:37:19,859
um and uh we have it done for PDM V1 and

782
00:37:19,859 --> 00:37:22,560
have been testing it and now we're

783
00:37:22,560 --> 00:37:26,400
working on doing the PDM uh V2 in ebpf

784
00:37:26,400 --> 00:37:29,359
okay next please

785
00:37:29,460 --> 00:37:33,300
you can come talk to us at the hack demo

786
00:37:33,300 --> 00:37:36,839
and see the PDM V1 stuff

787
00:37:36,839 --> 00:37:40,800
um our proposal for PDM V2 was also

788
00:37:40,800 --> 00:37:44,940
accepted into the IAB Workshop very

789
00:37:44,940 --> 00:37:47,040
interesting workshop on managing

790
00:37:47,040 --> 00:37:49,320
encrypted networks

791
00:37:49,320 --> 00:37:51,119
um and we think this might be a very

792
00:37:51,119 --> 00:37:53,280
good way because

793
00:37:53,280 --> 00:37:56,180
um uh certainly this is a big problem

794
00:37:56,180 --> 00:38:00,359
our thought is ideally once we have a

795
00:38:00,359 --> 00:38:04,339
stable implementation to co-locate

796
00:38:04,339 --> 00:38:09,440
PDM V2 at various points uh potentially

797
00:38:09,440 --> 00:38:13,500
with some of the CDN providers next

798
00:38:13,500 --> 00:38:15,680
please

799
00:38:16,020 --> 00:38:19,560
so uh the bigger question for all this

800
00:38:19,560 --> 00:38:23,820
is like it's all well and good to Define

801
00:38:23,820 --> 00:38:26,940
um extension headers but if extension

802
00:38:26,940 --> 00:38:29,940
headers don't work on the internet it is

803
00:38:29,940 --> 00:38:36,020
an exercise in futility so next please

804
00:38:37,320 --> 00:38:39,720
um we have two drafts that we're working

805
00:38:39,720 --> 00:38:43,980
in V6 Ops and we have also done an iepg

806
00:38:43,980 --> 00:38:47,520
presentation uh the bottom line uh

807
00:38:47,520 --> 00:38:51,900
nolini's opinion is that probably each

808
00:38:51,900 --> 00:38:55,800
H's work depending on the topology that

809
00:38:55,800 --> 00:38:59,220
you use we will have a side meeting to

810
00:38:59,220 --> 00:39:02,280
discuss this on Thursday

811
00:39:02,280 --> 00:39:05,040
um we are use we have done some testing

812
00:39:05,040 --> 00:39:09,300
using cdns and Cloud providers and one

813
00:39:09,300 --> 00:39:12,420
cloud provider and one CDN is working

814
00:39:12,420 --> 00:39:16,980
very closely with us to try to fix the

815
00:39:16,980 --> 00:39:21,000
problems because there are problems such

816
00:39:21,000 --> 00:39:26,700
as within a CDN you'll get to the edge

817
00:39:26,700 --> 00:39:31,640
in IPv6 but internal to the CDN Network

818
00:39:31,640 --> 00:39:38,220
you are traveling in ipv4 and so uh

819
00:39:38,220 --> 00:39:40,680
suffice it to say that if you're

820
00:39:40,680 --> 00:39:45,599
traveling in ipv4 you're not likely to

821
00:39:45,599 --> 00:39:48,900
be supporting extension headers so let

822
00:39:48,900 --> 00:39:53,400
us fix that problem first so that is our

823
00:39:53,400 --> 00:39:55,920
big effort right now

824
00:39:55,920 --> 00:40:00,119
um we hope you agree that IPv6 should be

825
00:40:00,119 --> 00:40:05,599
supported in cdns so next please

826
00:40:05,640 --> 00:40:10,800
so uh as far as PDM V2 itself there are

827
00:40:10,800 --> 00:40:13,740
three parts to the communication there's

828
00:40:13,740 --> 00:40:16,800
the secondary to secondary which is what

829
00:40:16,800 --> 00:40:21,180
this particular draft defines but

830
00:40:21,180 --> 00:40:24,119
um and that is an independent uh

831
00:40:24,119 --> 00:40:26,880
protocol in itself it is the PDM V2

832
00:40:26,880 --> 00:40:30,540
encryption but somehow you have to get

833
00:40:30,540 --> 00:40:33,839
the keys you need a control protocol or

834
00:40:33,839 --> 00:40:37,260
what we call a registration uh protocol

835
00:40:37,260 --> 00:40:39,960
to create a common context and so on

836
00:40:39,960 --> 00:40:43,020
that is what we are calling primary to

837
00:40:43,020 --> 00:40:46,680
secondary and primary to primary the the

838
00:40:46,680 --> 00:40:49,740
reason for for this protocol is to make

839
00:40:49,740 --> 00:40:51,440
it a scalable

840
00:40:51,440 --> 00:40:54,780
because otherwise you get essentially

841
00:40:54,780 --> 00:40:57,900
combinatorial explosion with too many

842
00:40:57,900 --> 00:40:59,420
secondaries

843
00:40:59,420 --> 00:41:05,280
what we are proposing is that we leave

844
00:41:05,280 --> 00:41:08,520
this line clean which is secondary to

845
00:41:08,520 --> 00:41:12,420
secondary and start a second draft for

846
00:41:12,420 --> 00:41:15,060
the primary to secondary and primary to

847
00:41:15,060 --> 00:41:18,000
primary because it is quite it's quite a

848
00:41:18,000 --> 00:41:20,520
bit and so that is that is what we would

849
00:41:20,520 --> 00:41:23,520
like to do is have have two drafts

850
00:41:23,520 --> 00:41:26,060
next please

851
00:41:26,060 --> 00:41:30,180
that's it so yeah any comments thoughts

852
00:41:30,180 --> 00:41:31,980
um if we split

853
00:41:31,980 --> 00:41:36,420
the drafts as we would like then

854
00:41:36,420 --> 00:41:39,420
um just our opinion is is possibly we're

855
00:41:39,420 --> 00:41:41,760
ready for last call so I would like to

856
00:41:41,760 --> 00:41:44,599
get some thoughts

857
00:41:48,240 --> 00:41:51,500
no comments

858
00:41:52,320 --> 00:41:54,720
has anybody read it no I'm teasing you

859
00:41:54,720 --> 00:41:58,759
I'm teasing you go ahead tell me yeah

860
00:41:59,220 --> 00:42:00,780
yeah so

861
00:42:00,780 --> 00:42:04,859
just about the plan for the documents

862
00:42:04,859 --> 00:42:06,480
um

863
00:42:06,480 --> 00:42:09,960
if you were splitting this

864
00:42:09,960 --> 00:42:13,579
um you know we would need to do

865
00:42:13,920 --> 00:42:16,380
some kind of like an adoption call at

866
00:42:16,380 --> 00:42:18,540
least or your consensus call within the

867
00:42:18,540 --> 00:42:20,820
group to say we want to have

868
00:42:20,820 --> 00:42:24,060
more different documents for this I'd

869
00:42:24,060 --> 00:42:28,740
also be curious to know how much

870
00:42:28,740 --> 00:42:32,280
of the current document is would be kind

871
00:42:32,280 --> 00:42:35,520
of generic between the different modes

872
00:42:35,520 --> 00:42:38,760
um like How Deeply entangled

873
00:42:38,760 --> 00:42:41,099
would these two documents be

874
00:42:41,099 --> 00:42:43,980
um how much are we buying by separating

875
00:42:43,980 --> 00:42:46,680
them out yeah that's a really good

876
00:42:46,680 --> 00:42:48,359
question

877
00:42:48,359 --> 00:42:49,099
um

878
00:42:49,099 --> 00:42:53,579
I actually think that we should take out

879
00:42:53,579 --> 00:42:56,400
because we have in in the secondary to

880
00:42:56,400 --> 00:43:00,180
secondary uh what we have is some of the

881
00:43:00,180 --> 00:43:03,000
security requirements for the primary

882
00:43:03,000 --> 00:43:06,720
the secondary and primary primary flow I

883
00:43:06,720 --> 00:43:09,599
would suggest that we take all of that

884
00:43:09,599 --> 00:43:12,780
out as I say keep it clean

885
00:43:12,780 --> 00:43:15,480
um and then start the second document so

886
00:43:15,480 --> 00:43:19,200
I would say that the the the amount of

887
00:43:19,200 --> 00:43:22,980
repetition uh should be uh relatively

888
00:43:22,980 --> 00:43:26,640
minimal the reason I say this is that um

889
00:43:26,640 --> 00:43:31,740
the reason for the split really is that

890
00:43:31,740 --> 00:43:32,780
um

891
00:43:32,780 --> 00:43:36,000
well I guess I myself get really tired

892
00:43:36,000 --> 00:43:40,319
of reading 60 page rfcs it it it's hard

893
00:43:40,319 --> 00:43:44,099
to keep your head straight you know and

894
00:43:44,099 --> 00:43:45,180
um

895
00:43:45,180 --> 00:43:46,040
um

896
00:43:46,040 --> 00:43:49,440
so maybe but but I totally get your

897
00:43:49,440 --> 00:43:52,560
question maybe what we should do

898
00:43:52,560 --> 00:43:54,180
um I don't know what everybody thinks is

899
00:43:54,180 --> 00:43:58,920
maybe just go ahead and create like a a

900
00:43:58,920 --> 00:44:02,579
draft for what the primary and secondary

901
00:44:02,579 --> 00:44:04,920
and primary primary would contain you

902
00:44:04,920 --> 00:44:06,960
know so you guys can kind of see and

903
00:44:06,960 --> 00:44:09,480
leave a bunch of sections like like this

904
00:44:09,480 --> 00:44:11,280
needs to be considered this needs to be

905
00:44:11,280 --> 00:44:12,960
considered this needs to be considered

906
00:44:12,960 --> 00:44:15,420
as TBD that makes sense to you Tommy

907
00:44:15,420 --> 00:44:18,960
yeah that does I think having you know

908
00:44:18,960 --> 00:44:20,579
we don't want to create

909
00:44:20,579 --> 00:44:23,220
too much busy work but if you are

910
00:44:23,220 --> 00:44:24,660
sufficiently motivated and you want to

911
00:44:24,660 --> 00:44:26,119
kind of

912
00:44:26,119 --> 00:44:28,500
share it with the list hey here's how we

913
00:44:28,500 --> 00:44:30,480
think this split would be here's

914
00:44:30,480 --> 00:44:34,079
our first cuts of those two documents

915
00:44:34,079 --> 00:44:34,980
um

916
00:44:34,980 --> 00:44:37,260
yeah then you can get

917
00:44:37,260 --> 00:44:39,119
agreement within the group

918
00:44:39,119 --> 00:44:40,920
because something like that does need

919
00:44:40,920 --> 00:44:45,300
group consensus sure sure no no totally

920
00:44:45,300 --> 00:44:48,180
totally get that and and you know so so

921
00:44:48,180 --> 00:44:50,520
why don't we go at least at least an

922
00:44:50,520 --> 00:44:54,079
outline of what sections there should be

923
00:44:54,079 --> 00:44:57,500
and how the two documents would look

924
00:44:57,500 --> 00:45:00,960
split apart and then and then people can

925
00:45:00,960 --> 00:45:03,480
say no you should just really have them

926
00:45:03,480 --> 00:45:06,180
be one document

927
00:45:06,180 --> 00:45:08,819
um the the other the other

928
00:45:08,819 --> 00:45:12,420
um consideration too is that really

929
00:45:12,420 --> 00:45:18,839
if scalability is not an issue for an

930
00:45:18,839 --> 00:45:22,319
implementer you can just go ahead and

931
00:45:22,319 --> 00:45:24,720
separately implement the secondary to

932
00:45:24,720 --> 00:45:27,720
secondary it really if you just do

933
00:45:27,720 --> 00:45:31,380
secondary to secondary probably if you

934
00:45:31,380 --> 00:45:33,720
get behind a hand you know if you

935
00:45:33,720 --> 00:45:35,940
increase to more than a handful of

936
00:45:35,940 --> 00:45:39,119
clients and servers uh you would you

937
00:45:39,119 --> 00:45:41,040
will probably be doing a bunch of you

938
00:45:41,040 --> 00:45:43,740
know shooting yourself in the foot by

939
00:45:43,740 --> 00:45:46,260
doing that but having said that if you

940
00:45:46,260 --> 00:45:48,119
do want to do it for a very small

941
00:45:48,119 --> 00:45:51,119
environment that's certainly possible

942
00:45:51,119 --> 00:45:55,099
that was another part of our thinking

943
00:45:57,900 --> 00:46:00,720
okay great great so we'll go ahead and

944
00:46:00,720 --> 00:46:02,339
and uh

945
00:46:02,339 --> 00:46:05,099
give you guys um a prototype thank you

946
00:46:05,099 --> 00:46:07,980
perfect Thanks that'll be very helpful

947
00:46:07,980 --> 00:46:10,020
so the next presentation is on

948
00:46:10,020 --> 00:46:13,819
responsiveness and it will be Stuart

949
00:46:19,640 --> 00:46:24,020
it didn't work it seems so um

950
00:46:24,060 --> 00:46:26,240
foreign

951
00:46:36,900 --> 00:46:39,599
my name is Stuart Cheshire I am

952
00:46:39,599 --> 00:46:41,819
presenting on behalf of Christoph parsh

953
00:46:41,819 --> 00:46:43,260
who's the primary author on this

954
00:46:43,260 --> 00:46:45,660
document he's not able to be here in

955
00:46:45,660 --> 00:46:48,180
person this week and it's 2 A.M in

956
00:46:48,180 --> 00:46:50,400
California so he asked me to step in for

957
00:46:50,400 --> 00:46:53,520
him uh these are his slides uh let's go

958
00:46:53,520 --> 00:46:55,700
on

959
00:46:56,359 --> 00:46:59,880
uh the response from this draft is a

960
00:46:59,880 --> 00:47:02,940
working group draft uh

961
00:47:02,940 --> 00:47:06,119
we uh Kristoff is working on a couple of

962
00:47:06,119 --> 00:47:07,560
updates

963
00:47:07,560 --> 00:47:10,619
uh which I'll describe in more detail uh

964
00:47:10,619 --> 00:47:13,560
one is we discovered a floor in the

965
00:47:13,560 --> 00:47:15,660
algorithm that it can terminate too

966
00:47:15,660 --> 00:47:17,640
early and underestimate the buffer

967
00:47:17,640 --> 00:47:18,540
blades

968
00:47:18,540 --> 00:47:21,240
and the second issue is a suggestion for

969
00:47:21,240 --> 00:47:23,819
a well-known URI so if we move to the

970
00:47:23,819 --> 00:47:26,040
next slide I can describe this

971
00:47:26,040 --> 00:47:29,520
so the goal

972
00:47:29,520 --> 00:47:31,140
to remind everybody of the

973
00:47:31,140 --> 00:47:33,420
responsiveness test is to measure the

974
00:47:33,420 --> 00:47:35,460
round trip delay when the network is

975
00:47:35,460 --> 00:47:36,839
actually being used

976
00:47:36,839 --> 00:47:39,480
most of the time right now when we run a

977
00:47:39,480 --> 00:47:42,000
ping command on the command line we're

978
00:47:42,000 --> 00:47:44,339
testing the network when it's idle which

979
00:47:44,339 --> 00:47:46,140
is not very interesting because I want

980
00:47:46,140 --> 00:47:48,119
to know how the network operates when

981
00:47:48,119 --> 00:47:50,880
I'm actually using it not when it's idle

982
00:47:50,880 --> 00:47:54,119
so we do this by generating traffic

983
00:47:54,119 --> 00:47:55,920
that's representative of any normal

984
00:47:55,920 --> 00:47:57,500
upload and download

985
00:47:57,500 --> 00:48:00,920
let's move on

986
00:48:02,099 --> 00:48:05,220
and in this example that Kristoff made

987
00:48:05,220 --> 00:48:07,319
Let's assume the bandwidth delay product

988
00:48:07,319 --> 00:48:09,540
is 32 megabytes

989
00:48:09,540 --> 00:48:13,500
and each TCP connection has a received

990
00:48:13,500 --> 00:48:16,020
window of four megabytes

991
00:48:16,020 --> 00:48:18,119
and that's why it takes multiple

992
00:48:18,119 --> 00:48:20,460
connections to fill up the pipeline so

993
00:48:20,460 --> 00:48:22,520
the test starts with four connections

994
00:48:22,520 --> 00:48:25,500
and they each grow to their four

995
00:48:25,500 --> 00:48:27,420
megabyte received window we have 16

996
00:48:27,420 --> 00:48:29,400
megabytes in flight but that's still not

997
00:48:29,400 --> 00:48:32,280
filling the pipe so in the next slide we

998
00:48:32,280 --> 00:48:34,980
add for more connections and we observe

999
00:48:34,980 --> 00:48:37,560
that the aggregate throughput goes up so

1000
00:48:37,560 --> 00:48:38,900
that's great

1001
00:48:38,900 --> 00:48:42,359
uh now we can tell from this graph that

1002
00:48:42,359 --> 00:48:43,800
we've hit the limit but of course the

1003
00:48:43,800 --> 00:48:47,339
test doesn't know that so the test adds

1004
00:48:47,339 --> 00:48:49,980
four more connections and at this point

1005
00:48:49,980 --> 00:48:51,900
we don't get any more throughput because

1006
00:48:51,900 --> 00:48:53,880
we have hit the capacity of our

1007
00:48:53,880 --> 00:48:56,400
bottleneck link and at this point the

1008
00:48:56,400 --> 00:48:58,079
extra traffic we introduce into the

1009
00:48:58,079 --> 00:48:59,220
network

1010
00:48:59,220 --> 00:49:01,560
is sitting in a queue on Entry to that

1011
00:49:01,560 --> 00:49:04,440
bottleneck Network and that's what we

1012
00:49:04,440 --> 00:49:06,839
want to measure we want to observe what

1013
00:49:06,839 --> 00:49:08,819
is the depth of the buffer bloat in this

1014
00:49:08,819 --> 00:49:10,859
network how much is it willing to delay

1015
00:49:10,859 --> 00:49:13,500
our packets and make them late

1016
00:49:13,500 --> 00:49:15,660
with the current test

1017
00:49:15,660 --> 00:49:19,020
this is where it terminates because it

1018
00:49:19,020 --> 00:49:21,420
sees that the latest round of adding

1019
00:49:21,420 --> 00:49:22,980
connections did not increase the

1020
00:49:22,980 --> 00:49:25,680
throughput significantly so it concludes

1021
00:49:25,680 --> 00:49:28,260
I've now filled the full capacity of the

1022
00:49:28,260 --> 00:49:30,900
pipe my measurements are done you can

1023
00:49:30,900 --> 00:49:33,240
see from this graph that it may have

1024
00:49:33,240 --> 00:49:36,359
filled the full capacity of the link but

1025
00:49:36,359 --> 00:49:39,720
it has not yet filled the buffers and in

1026
00:49:39,720 --> 00:49:42,180
Real World operation it's very likely

1027
00:49:42,180 --> 00:49:43,680
you would fill the buffers until they

1028
00:49:43,680 --> 00:49:47,040
overflow so this risks uh

1029
00:49:47,040 --> 00:49:49,140
underestimating the true buffer blow to

1030
00:49:49,140 --> 00:49:50,040
the network

1031
00:49:50,040 --> 00:49:52,800
and if we move on

1032
00:49:52,800 --> 00:49:56,339
um the solution to this very simple uh

1033
00:49:56,339 --> 00:50:00,240
it is uh described in the issue tracker

1034
00:50:00,240 --> 00:50:01,740
in GitHub

1035
00:50:01,740 --> 00:50:04,020
all of this attracting GitHub so we

1036
00:50:04,020 --> 00:50:06,359
welcome any suggestions from other

1037
00:50:06,359 --> 00:50:09,119
people who noticed mistakes or have

1038
00:50:09,119 --> 00:50:10,800
ideas for improvements

1039
00:50:10,800 --> 00:50:14,220
the solution is very simple instead of

1040
00:50:14,220 --> 00:50:16,440
terminating the test when the throughput

1041
00:50:16,440 --> 00:50:19,500
stops going up we monitor both

1042
00:50:19,500 --> 00:50:22,260
throughput and delay and terminate the

1043
00:50:22,260 --> 00:50:24,180
test when both of those are stabilized

1044
00:50:24,180 --> 00:50:27,420
so uh simple fix there that's going in

1045
00:50:27,420 --> 00:50:29,940
the next version of the draft the next

1046
00:50:29,940 --> 00:50:31,560
suggestion

1047
00:50:31,560 --> 00:50:33,359
next slide

1048
00:50:33,359 --> 00:50:35,220
sorry I've used the clicker if it was

1049
00:50:35,220 --> 00:50:36,420
working

1050
00:50:36,420 --> 00:50:37,920
um

1051
00:50:37,920 --> 00:50:40,560
uh this is another suggestion we had

1052
00:50:40,560 --> 00:50:44,060
because this responsiveness test is

1053
00:50:44,060 --> 00:50:48,780
basically built on HTTP gets and puts

1054
00:50:48,780 --> 00:50:52,800
any web server is a suitable platform

1055
00:50:52,800 --> 00:50:54,720
for running this test so there's a

1056
00:50:54,720 --> 00:50:57,059
suggestion that we have a well-known URI

1057
00:50:57,059 --> 00:51:00,440
of a configuration file in Json format

1058
00:51:00,440 --> 00:51:04,319
so any web server and maybe in the

1059
00:51:04,319 --> 00:51:06,240
future this would be built into standard

1060
00:51:06,240 --> 00:51:08,339
web servers that they all support doing

1061
00:51:08,339 --> 00:51:11,460
responsiveness measurements and the way

1062
00:51:11,460 --> 00:51:13,140
you find this out is by querying the

1063
00:51:13,140 --> 00:51:15,480
well-known URI and see if you get back a

1064
00:51:15,480 --> 00:51:18,480
configuration object

1065
00:51:18,480 --> 00:51:21,119
next one

1066
00:51:21,119 --> 00:51:22,559
uh

1067
00:51:22,559 --> 00:51:25,079
we have a couple more issues tracked on

1068
00:51:25,079 --> 00:51:27,660
GitHub that are in the pipeline

1069
00:51:27,660 --> 00:51:32,819
uh one is that I described earlier that

1070
00:51:32,819 --> 00:51:34,559
you keep adding connections until the

1071
00:51:34,559 --> 00:51:36,420
results stabilize sometimes they don't

1072
00:51:36,420 --> 00:51:38,280
stabilize

1073
00:51:38,280 --> 00:51:40,500
um and it can be hard to tell if the

1074
00:51:40,500 --> 00:51:42,780
little fluctuations are significant so

1075
00:51:42,780 --> 00:51:44,579
because we don't want the test to run

1076
00:51:44,579 --> 00:51:46,800
forever sometimes we have to terminate

1077
00:51:46,800 --> 00:51:49,319
before we're totally confident the other

1078
00:51:49,319 --> 00:51:52,800
issue we've been talking to

1079
00:51:52,800 --> 00:51:55,920
uh home Gateway vendors uh companies

1080
00:51:55,920 --> 00:51:58,380
that make Nat gateways and Wi-Fi access

1081
00:51:58,380 --> 00:52:02,880
points and one of the really important

1082
00:52:02,880 --> 00:52:06,240
things for Diagnostics here is to narrow

1083
00:52:06,240 --> 00:52:09,540
down where the buffer bloat is so

1084
00:52:09,540 --> 00:52:11,640
anybody in this room can pull out their

1085
00:52:11,640 --> 00:52:13,440
iPhone you can run the Apple

1086
00:52:13,440 --> 00:52:16,319
responsiveness test or you can run the

1087
00:52:16,319 --> 00:52:18,900
Ookla speed test app which now it also

1088
00:52:18,900 --> 00:52:22,319
includes a similar uh working

1089
00:52:22,319 --> 00:52:24,540
responsiveness measurement

1090
00:52:24,540 --> 00:52:27,540
so now you know you have horrible buffer

1091
00:52:27,540 --> 00:52:30,180
blades but but where is it uh do you

1092
00:52:30,180 --> 00:52:32,700
blame the ISP is it your Wi-Fi access

1093
00:52:32,700 --> 00:52:35,160
point The Next Step you want to do is

1094
00:52:35,160 --> 00:52:36,599
diagnose that

1095
00:52:36,599 --> 00:52:40,440
we've had interest from uh equipment

1096
00:52:40,440 --> 00:52:41,520
vendors

1097
00:52:41,520 --> 00:52:45,599
to uh host a test endpoint on the home

1098
00:52:45,599 --> 00:52:48,780
Gateway so you can run a test from your

1099
00:52:48,780 --> 00:52:51,780
iPhone to the home Gateway and tell if

1100
00:52:51,780 --> 00:52:53,760
maybe your Wi-Fi access point is where

1101
00:52:53,760 --> 00:52:56,700
the buffer bloat is occurring uh or the

1102
00:52:56,700 --> 00:52:59,760
home Gateway contest Upstream uh you

1103
00:52:59,760 --> 00:53:01,079
could imagine if there's a cable modem

1104
00:53:01,079 --> 00:53:04,260
or a DSL mode um you can divide and

1105
00:53:04,260 --> 00:53:06,540
conquer and try to narrow down where the

1106
00:53:06,540 --> 00:53:08,400
buffer bloat is happening

1107
00:53:08,400 --> 00:53:10,740
a lot of these home gateways for cost

1108
00:53:10,740 --> 00:53:14,099
reasons are not built with more powerful

1109
00:53:14,099 --> 00:53:16,020
CPUs than they really need to get the

1110
00:53:16,020 --> 00:53:18,000
job done and

1111
00:53:18,000 --> 00:53:21,420
we've had strong feedback from them that

1112
00:53:21,420 --> 00:53:25,380
doing TLS at a gigabit per second is is

1113
00:53:25,380 --> 00:53:27,000
beyond the capabilities of their

1114
00:53:27,000 --> 00:53:30,119
Hardware I know my iPhone can do it and

1115
00:53:30,119 --> 00:53:32,460
my Mac can do it but but a little fifty

1116
00:53:32,460 --> 00:53:35,520
dollar home Gateway box can't so

1117
00:53:35,520 --> 00:53:38,119
those requests as a request to support

1118
00:53:38,119 --> 00:53:40,920
unencrypted capacity measurements as

1119
00:53:40,920 --> 00:53:42,180
well

1120
00:53:42,180 --> 00:53:43,020
um

1121
00:53:43,020 --> 00:53:45,599
that's uh that's something we're going

1122
00:53:45,599 --> 00:53:46,800
to work out how to put into the draft

1123
00:53:46,800 --> 00:53:49,020
it's not totally obvious how to do it

1124
00:53:49,020 --> 00:53:51,420
for the same reason that HTTP and https

1125
00:53:51,420 --> 00:53:53,400
don't run on the same port so there

1126
00:53:53,400 --> 00:53:55,559
isn't a good in-band negotiation way to

1127
00:53:55,559 --> 00:53:58,260
say are we using encryption or not but

1128
00:53:58,260 --> 00:53:59,819
we will sort that out

1129
00:53:59,819 --> 00:54:03,180
and I think that's our last slide

1130
00:54:03,180 --> 00:54:04,980
so yes

1131
00:54:04,980 --> 00:54:07,079
um I will answer any questions if people

1132
00:54:07,079 --> 00:54:10,619
have any uh of course file issues on

1133
00:54:10,619 --> 00:54:13,380
GitHub and Kristoff will be available

1134
00:54:13,380 --> 00:54:16,740
via email to answer any questions too

1135
00:54:16,740 --> 00:54:20,359
all right we have l in the cube

1136
00:54:20,880 --> 00:54:24,059
thank you uh Stuart for the uh for

1137
00:54:24,059 --> 00:54:25,980
stepping in for Kristoff I know I pretty

1138
00:54:25,980 --> 00:54:27,960
appreciate it

1139
00:54:27,960 --> 00:54:30,660
um I'm wondering if you're familiar with

1140
00:54:30,660 --> 00:54:32,339
any of the measurements we've shared on

1141
00:54:32,339 --> 00:54:35,940
the uh ippm mailing list recently they

1142
00:54:35,940 --> 00:54:37,980
tend to point to

1143
00:54:37,980 --> 00:54:39,599
um you know the underestimate of

1144
00:54:39,599 --> 00:54:42,660
capacity and therefore uh working

1145
00:54:42,660 --> 00:54:45,000
latency uh that you guys are talking

1146
00:54:45,000 --> 00:54:46,920
about and

1147
00:54:46,920 --> 00:54:49,619
um well we're what we saw basically was

1148
00:54:49,619 --> 00:54:53,579
that the RFC 1997

1149
00:54:53,579 --> 00:54:56,819
um IP air capacity measurements uh

1150
00:54:56,819 --> 00:54:58,680
produced um

1151
00:54:58,680 --> 00:55:01,260
there's higher latency because we have a

1152
00:55:01,260 --> 00:55:04,200
you know we sort of have a stronger uh

1153
00:55:04,200 --> 00:55:06,780
method of producing uh you know the

1154
00:55:06,780 --> 00:55:08,579
working load and expanding the buffer

1155
00:55:08,579 --> 00:55:10,880
blow in the channel That We're measuring

1156
00:55:10,880 --> 00:55:14,880
uh so we saw I mean to be uh to be clear

1157
00:55:14,880 --> 00:55:17,640
about the numbers we saw

1158
00:55:17,640 --> 00:55:19,380
um you know like on a one gigabit

1159
00:55:19,380 --> 00:55:21,720
downlink we saw

1160
00:55:21,720 --> 00:55:23,700
um you know the full the full gigabit

1161
00:55:23,700 --> 00:55:27,720
measured with the ipuar capacity Tool uh

1162
00:55:27,720 --> 00:55:31,260
we saw about 900 megabits with uh

1163
00:55:31,260 --> 00:55:33,180
responsiveness and the capacity of

1164
00:55:33,180 --> 00:55:36,660
report it reports and um when we tried

1165
00:55:36,660 --> 00:55:39,599
the Go responsiveness version uh the

1166
00:55:39,599 --> 00:55:41,940
capacity was very much lower than that

1167
00:55:41,940 --> 00:55:45,540
on the order of about a 120 megabits per

1168
00:55:45,540 --> 00:55:47,640
second when it should have been you know

1169
00:55:47,640 --> 00:55:50,880
downlink capacity of one you know uh 940

1170
00:55:50,880 --> 00:55:53,819
megabits so um you know we're we

1171
00:55:53,819 --> 00:55:56,040
definitely saw the kind of problem that

1172
00:55:56,040 --> 00:55:58,140
uh you guys are saying you're going to

1173
00:55:58,140 --> 00:56:00,300
attack this time around

1174
00:56:00,300 --> 00:56:03,720
um you know the latency is is uh you

1175
00:56:03,720 --> 00:56:06,599
know a good thing to monitor but um you

1176
00:56:06,599 --> 00:56:08,880
know it may be that there's faster ways

1177
00:56:08,880 --> 00:56:11,400
to get there and to uh you know to

1178
00:56:11,400 --> 00:56:13,500
measure the working latency than you

1179
00:56:13,500 --> 00:56:15,839
know adding one connection at a time so

1180
00:56:15,839 --> 00:56:17,400
I just encourage you to think about that

1181
00:56:17,400 --> 00:56:19,740
and and also you know consider the

1182
00:56:19,740 --> 00:56:20,940
measurements that have been shared

1183
00:56:20,940 --> 00:56:23,460
thanks

1184
00:56:23,460 --> 00:56:25,140
let me understand what you're saying

1185
00:56:25,140 --> 00:56:28,640
I'll are you are you saying that the the

1186
00:56:28,640 --> 00:56:30,839
algorithm I was described in the draft

1187
00:56:30,839 --> 00:56:33,839
is flawed or are you saying the current

1188
00:56:33,839 --> 00:56:36,059
implementation written in go is not as

1189
00:56:36,059 --> 00:56:38,280
efficient as it could be

1190
00:56:38,280 --> 00:56:41,339
uh well both those things because you

1191
00:56:41,339 --> 00:56:44,099
guys are saying that the that the the

1192
00:56:44,099 --> 00:56:46,380
algorithm based on throughput is flawed

1193
00:56:46,380 --> 00:56:49,700
and you want to change it

1194
00:56:50,339 --> 00:56:52,040
um

1195
00:56:52,040 --> 00:56:55,020
I uh I wouldn't have stated quite that

1196
00:56:55,020 --> 00:56:56,099
strongly

1197
00:56:56,099 --> 00:56:58,380
we that this software is still in

1198
00:56:58,380 --> 00:57:00,839
development and this draft is draft zero

1199
00:57:00,839 --> 00:57:03,720
one so it's a fairly young draft

1200
00:57:03,720 --> 00:57:05,940
the existing code

1201
00:57:05,940 --> 00:57:09,359
would uh it would look for the

1202
00:57:09,359 --> 00:57:11,760
throughput to stop increasing as it

1203
00:57:11,760 --> 00:57:14,099
signed that it had filled the link and

1204
00:57:14,099 --> 00:57:16,079
actually it was me who pointed out the

1205
00:57:16,079 --> 00:57:17,700
issue I was thinking about this and I

1206
00:57:17,700 --> 00:57:19,819
said just because the throughput hasn't

1207
00:57:19,819 --> 00:57:22,380
uh now just because the throughput is no

1208
00:57:22,380 --> 00:57:24,359
longer increasing doesn't mean you

1209
00:57:24,359 --> 00:57:26,339
filled the buffers because the round

1210
00:57:26,339 --> 00:57:29,040
trip delay might be still going up so

1211
00:57:29,040 --> 00:57:31,020
that's not a particularly profound

1212
00:57:31,020 --> 00:57:33,119
observation that was just something I

1213
00:57:33,119 --> 00:57:35,040
realized that we should wait until both

1214
00:57:35,040 --> 00:57:36,660
of both of these measures have

1215
00:57:36,660 --> 00:57:38,880
stabilized

1216
00:57:38,880 --> 00:57:39,980
um

1217
00:57:39,980 --> 00:57:43,140
uh so I don't think that's some

1218
00:57:43,140 --> 00:57:44,700
fundamental flaw in the way it's

1219
00:57:44,700 --> 00:57:47,339
measuring capacity it's just a a

1220
00:57:47,339 --> 00:57:49,319
slightly different condition in the in

1221
00:57:49,319 --> 00:57:52,079
the while loop about when to stop

1222
00:57:52,079 --> 00:57:55,680
uh as to your comments about

1223
00:57:55,680 --> 00:57:58,140
um it was only reporting 900 and

1224
00:57:58,140 --> 00:58:01,260
something megabits on a gigabit link do

1225
00:58:01,260 --> 00:58:02,520
you have any

1226
00:58:02,520 --> 00:58:05,940
uh can you explain uh do you have a

1227
00:58:05,940 --> 00:58:08,280
quick summary about what you think was

1228
00:58:08,280 --> 00:58:12,740
causing it to not get the full gigabit

1229
00:58:13,619 --> 00:58:16,319
well in general TCP with multiple

1230
00:58:16,319 --> 00:58:17,940
connections

1231
00:58:17,940 --> 00:58:20,099
um you know has some instabilities about

1232
00:58:20,099 --> 00:58:23,760
uh the throughput that it measures and

1233
00:58:23,760 --> 00:58:25,980
um without without a lot of averaging

1234
00:58:25,980 --> 00:58:27,720
that uh you know some of the companies

1235
00:58:27,720 --> 00:58:30,420
use you tend to get

1236
00:58:30,420 --> 00:58:32,339
um you know variations from measurement

1237
00:58:32,339 --> 00:58:35,940
to measurement and and also some um you

1238
00:58:35,940 --> 00:58:38,640
know just some uh interaction problems

1239
00:58:38,640 --> 00:58:40,980
that uh I think mad Mathis can explain

1240
00:58:40,980 --> 00:58:42,420
to you very well

1241
00:58:42,420 --> 00:58:46,200
so um uh the you know the the issues

1242
00:58:46,200 --> 00:58:47,720
here are are

1243
00:58:47,720 --> 00:58:52,559
uh in some sense uh you know choices and

1244
00:58:52,559 --> 00:58:54,480
um you know that the fact you're adding

1245
00:58:54,480 --> 00:58:56,400
additional information to the algorithm

1246
00:58:56,400 --> 00:58:59,160
now that may be that may work out very

1247
00:58:59,160 --> 00:59:02,160
well but the um you know right now the

1248
00:59:02,160 --> 00:59:06,059
capacity estimate is uh is quite low and

1249
00:59:06,059 --> 00:59:07,980
that's resulting in a working latency

1250
00:59:07,980 --> 00:59:10,500
which is low as well uh that's at least

1251
00:59:10,500 --> 00:59:12,900
according to our measurements so you

1252
00:59:12,900 --> 00:59:14,880
know I'm just trying to share uh some

1253
00:59:14,880 --> 00:59:16,799
experience that uh you know

1254
00:59:16,799 --> 00:59:19,079
non-developers have had and it's been

1255
00:59:19,079 --> 00:59:22,020
shared on the list so um you know I hope

1256
00:59:22,020 --> 00:59:23,520
that you guys will take that for what

1257
00:59:23,520 --> 00:59:25,859
it's worth thank you it sounds like your

1258
00:59:25,859 --> 00:59:27,780
feedback is that it's

1259
00:59:27,780 --> 00:59:31,440
uh your observation is that uh you

1260
00:59:31,440 --> 00:59:34,500
disagree with using TCP with cubic

1261
00:59:34,500 --> 00:59:36,480
congestion control and it should be

1262
00:59:36,480 --> 00:59:38,460
something else that's some other

1263
00:59:38,460 --> 00:59:40,079
transport protocol that's filling the

1264
00:59:40,079 --> 00:59:42,260
network

1265
00:59:42,720 --> 00:59:44,520
is that

1266
00:59:44,520 --> 00:59:46,920
TCP is the wrong protocol I'm not sure

1267
00:59:46,920 --> 00:59:50,040
what you're saying DC DCP had when you

1268
00:59:50,040 --> 00:59:51,660
had a lot of TCP connections together

1269
00:59:51,660 --> 00:59:54,780
there's an instability that results and

1270
00:59:54,780 --> 00:59:56,520
Matt like I said man Mathis can explain

1271
00:59:56,520 --> 00:59:59,819
that to you very well in fact it's it he

1272
00:59:59,819 --> 01:00:02,220
explained it very well in uh

1273
01:00:02,220 --> 01:00:06,420
um in RFC that we wrote here in ippm uh

1274
01:00:06,420 --> 01:00:09,540
some years back on model based methods

1275
01:00:09,540 --> 01:00:11,160
for measuring

1276
01:00:11,160 --> 01:00:14,040
um that capacity so so you're saying tsp

1277
01:00:14,040 --> 01:00:17,819
is the wrong tool what is the right tool

1278
01:00:17,819 --> 01:00:20,460
well if we want to measure IP layer

1279
01:00:20,460 --> 01:00:24,180
capacity it's RFC 9097 and we've got a

1280
01:00:24,180 --> 01:00:26,339
you know an RFC for that

1281
01:00:26,339 --> 01:00:29,299
okay thank you

1282
01:00:29,460 --> 01:00:32,359
thanks Adam Martin

1283
01:00:33,839 --> 01:00:35,339
Google

1284
01:00:35,339 --> 01:00:37,559
um maybe this is a dumb question but uh

1285
01:00:37,559 --> 01:00:39,420
you mentioned the use case of measuring

1286
01:00:39,420 --> 01:00:42,480
buffer Bullet to the Wi-Fi access point

1287
01:00:42,480 --> 01:00:44,640
but isn't that like a single hop where's

1288
01:00:44,640 --> 01:00:46,500
the buffer blood in that case

1289
01:00:46,500 --> 01:00:51,299
uh the the buffer bloat is in the Wi-Fi

1290
01:00:51,299 --> 01:00:54,119
chipset in the access point that is a

1291
01:00:54,119 --> 01:00:56,040
big black hole that sits on packets for

1292
01:00:56,040 --> 01:00:58,260
half a second so

1293
01:00:58,260 --> 01:01:01,920
when when data comes in over your cable

1294
01:01:01,920 --> 01:01:04,079
modem and of your gigabit Ethernet into

1295
01:01:04,079 --> 01:01:07,200
the access points for most people unless

1296
01:01:07,200 --> 01:01:08,280
you're sitting right on top of the

1297
01:01:08,280 --> 01:01:11,099
access point your Wi-Fi rate is less

1298
01:01:11,099 --> 01:01:14,460
than a gigabit so uh if you're

1299
01:01:14,460 --> 01:01:16,040
downloading

1300
01:01:16,040 --> 01:01:19,859
data a software update an app you're

1301
01:01:19,859 --> 01:01:22,619
watching Netflix video your Wi-Fi access

1302
01:01:22,619 --> 01:01:25,079
point is the slowest hop and that's

1303
01:01:25,079 --> 01:01:27,359
where the queue builds up and depending

1304
01:01:27,359 --> 01:01:29,099
on who makes that access point in the

1305
01:01:29,099 --> 01:01:31,799
chipset inside it you might have half a

1306
01:01:31,799 --> 01:01:34,079
second of queuing two seconds five

1307
01:01:34,079 --> 01:01:35,460
seconds

1308
01:01:35,460 --> 01:01:37,619
I have been doing some tests on I won't

1309
01:01:37,619 --> 01:01:39,059
say which vendor but one particular

1310
01:01:39,059 --> 01:01:41,700
access point that has five seconds of

1311
01:01:41,700 --> 01:01:45,660
buffering so you can measure packet

1312
01:01:45,660 --> 01:01:47,220
comes in sits in Ram trips for five

1313
01:01:47,220 --> 01:01:48,780
seconds and then gets delivered to the

1314
01:01:48,780 --> 01:01:51,420
Wi-Fi client so Wi-Fi access points

1315
01:01:51,420 --> 01:01:52,859
right now seem like they're the biggest

1316
01:01:52,859 --> 01:01:55,319
source of delay on an end-to-end

1317
01:01:55,319 --> 01:01:57,119
internet power so by directly connecting

1318
01:01:57,119 --> 01:01:59,339
to the Wi-Fi point then just like it's

1319
01:01:59,339 --> 01:02:01,559
if it's generating data coming back at

1320
01:02:01,559 --> 01:02:03,240
you in this test then you would then

1321
01:02:03,240 --> 01:02:04,859
obviously fill up a buffer for that

1322
01:02:04,859 --> 01:02:06,900
access point

1323
01:02:06,900 --> 01:02:08,220
um or are you connected to something

1324
01:02:08,220 --> 01:02:11,280
beyond the access point to uh both of

1325
01:02:11,280 --> 01:02:15,540
those are envisaged so uh

1326
01:02:15,540 --> 01:02:18,299
most customers have an integrated box

1327
01:02:18,299 --> 01:02:20,220
they have a cable modem that's cable

1328
01:02:20,220 --> 01:02:22,079
modem and that Gateway and the HTTP

1329
01:02:22,079 --> 01:02:24,480
server and Wi-Fi and an ethernet switch

1330
01:02:24,480 --> 01:02:25,920
all in one box

1331
01:02:25,920 --> 01:02:28,140
uh there are other people probably some

1332
01:02:28,140 --> 01:02:29,880
of the people in this room who have more

1333
01:02:29,880 --> 01:02:32,280
of a component system with a ubiquity

1334
01:02:32,280 --> 01:02:34,559
unify Wi-Fi access point that's just a

1335
01:02:34,559 --> 01:02:36,180
Wi-Fi access point and some other box

1336
01:02:36,180 --> 01:02:38,400
that's being the NAT Gateway and so

1337
01:02:38,400 --> 01:02:42,839
forth so each of these bits of hardware

1338
01:02:42,839 --> 01:02:46,079
could run a little web server serving

1339
01:02:46,079 --> 01:02:47,640
the right URLs for doing the

1340
01:02:47,640 --> 01:02:49,680
responsiveness test and that would give

1341
01:02:49,680 --> 01:02:52,500
the client on your device multiple

1342
01:02:52,500 --> 01:02:54,420
Vantage points in the network to hit

1343
01:02:54,420 --> 01:02:55,980
kind of reaching further into the

1344
01:02:55,980 --> 01:02:59,220
network to narrow down where the buffer

1345
01:02:59,220 --> 01:03:02,339
bloat is happening thank you

1346
01:03:02,339 --> 01:03:04,920
I mean to give one example

1347
01:03:04,920 --> 01:03:06,839
um it doesn't help

1348
01:03:06,839 --> 01:03:09,299
the customer to call their ISP to

1349
01:03:09,299 --> 01:03:10,859
complain about buffer bloat if the

1350
01:03:10,859 --> 01:03:12,660
buffer bloat is actually on the Wi-Fi

1351
01:03:12,660 --> 01:03:15,660
access point they bought themselves so

1352
01:03:15,660 --> 01:03:19,440
um but we have also measured cases where

1353
01:03:19,440 --> 01:03:23,640
the cable modem CS cmts equipment at the

1354
01:03:23,640 --> 01:03:28,079
ISP is configured depending on what data

1355
01:03:28,079 --> 01:03:30,059
rate you're paying for 50 meg 100 right

1356
01:03:30,059 --> 01:03:32,280
200 Meg they configure the queues

1357
01:03:32,280 --> 01:03:34,079
through two seconds of buffering at

1358
01:03:34,079 --> 01:03:36,359
whatever rate you're paying for so again

1359
01:03:36,359 --> 01:03:38,819
under load

1360
01:03:38,819 --> 01:03:41,700
um every packet you receive sits in RAM

1361
01:03:41,700 --> 01:03:44,640
chips at the ISP for two seconds while

1362
01:03:44,640 --> 01:03:46,680
it it sits and twiddles its thumbs and

1363
01:03:46,680 --> 01:03:48,119
then it comes out so you've got a

1364
01:03:48,119 --> 01:03:50,160
gigabit in two seconds of going nowhere

1365
01:03:50,160 --> 01:03:53,339
gigabit coming out the other side so you

1366
01:03:53,339 --> 01:03:55,559
could have two seconds of lag in the ISP

1367
01:03:55,559 --> 01:03:57,299
you could have five seconds of lag in

1368
01:03:57,299 --> 01:03:59,220
the Wi-Fi access point and knowing which

1369
01:03:59,220 --> 01:04:01,380
you is afflicting you is that really

1370
01:04:01,380 --> 01:04:04,760
important to know what to do about it

1371
01:04:05,880 --> 01:04:09,200
thanks Tommy

1372
01:04:09,780 --> 01:04:11,819
all right thank you

1373
01:04:11,819 --> 01:04:15,059
um so first there's not the reason I got

1374
01:04:15,059 --> 01:04:17,640
in queue but just to uh call back to the

1375
01:04:17,640 --> 01:04:19,680
conversation with Al

1376
01:04:19,680 --> 01:04:21,480
um I I would

1377
01:04:21,480 --> 01:04:24,180
encourage you and Chris nothing the

1378
01:04:24,180 --> 01:04:26,099
others to look at the stuff that Al

1379
01:04:26,099 --> 01:04:27,540
wrote to the list because that does have

1380
01:04:27,540 --> 01:04:29,700
a lot of details and

1381
01:04:29,700 --> 01:04:32,280
you know even

1382
01:04:32,280 --> 01:04:34,319
I certainly think there's room for

1383
01:04:34,319 --> 01:04:36,420
different methodologies and the point of

1384
01:04:36,420 --> 01:04:39,599
this is not to measure capacity but

1385
01:04:39,599 --> 01:04:40,740
uh

1386
01:04:40,740 --> 01:04:42,720
at least understanding the comparisons

1387
01:04:42,720 --> 01:04:44,520
and the difference in the measurement

1388
01:04:44,520 --> 01:04:47,400
results will be good

1389
01:04:47,400 --> 01:04:49,079
um

1390
01:04:49,079 --> 01:04:52,380
so uh I came in just about the kind of

1391
01:04:52,380 --> 01:04:55,500
the unencrypted mode looking at

1392
01:04:55,500 --> 01:04:58,200
the Json because I assume that you're

1393
01:04:58,200 --> 01:05:00,540
well known URI will contain the Json

1394
01:05:00,540 --> 01:05:02,280
that's currently defined

1395
01:05:02,280 --> 01:05:05,220
in the document it does seem that that

1396
01:05:05,220 --> 01:05:08,520
you know includes the URLs of the

1397
01:05:08,520 --> 01:05:10,799
different tests

1398
01:05:10,799 --> 01:05:11,700
um yes

1399
01:05:11,700 --> 01:05:16,040
you're also would we imagine that the

1400
01:05:16,040 --> 01:05:20,819
client could fetch the well-known URL at

1401
01:05:20,819 --> 01:05:22,079
https

1402
01:05:22,079 --> 01:05:24,720
such that this the test server does

1403
01:05:24,720 --> 01:05:27,599
support TLs but then points you to

1404
01:05:27,599 --> 01:05:29,400
unencrypted URLs for the specific

1405
01:05:29,400 --> 01:05:30,599
download

1406
01:05:30,599 --> 01:05:33,200
files

1407
01:05:33,200 --> 01:05:36,180
yes thank you Tommy that's a really good

1408
01:05:36,180 --> 01:05:38,220
observation

1409
01:05:38,220 --> 01:05:40,710
um we were

1410
01:05:40,710 --> 01:05:41,040
[Music]

1411
01:05:41,040 --> 01:05:42,260
um

1412
01:05:42,260 --> 01:05:45,000
I think we were thinking too much in

1413
01:05:45,000 --> 01:05:46,859
binary All or Nothing black and white

1414
01:05:46,859 --> 01:05:49,460
that it's either clear text or it's TLS

1415
01:05:49,460 --> 01:05:52,559
and and your point is is really good

1416
01:05:52,559 --> 01:05:55,200
which is the problem is not that these

1417
01:05:55,200 --> 01:05:57,180
devices can't support TLS they can't

1418
01:05:57,180 --> 01:06:00,000
support TLS at a very high rate so yes

1419
01:06:00,000 --> 01:06:01,740
thank you I think that's a good Insight

1420
01:06:01,740 --> 01:06:04,500
the um the configuration blob will

1421
01:06:04,500 --> 01:06:06,420
always be fetched over TLs but the

1422
01:06:06,420 --> 01:06:09,000
actual High rate test traffic can be

1423
01:06:09,000 --> 01:06:11,099
optionally unencrypted thank you Tommy

1424
01:06:11,099 --> 01:06:12,119
yeah

1425
01:06:12,119 --> 01:06:15,660
and just one more comment off of that of

1426
01:06:15,660 --> 01:06:16,940
just something that we'll need to change

1427
01:06:16,940 --> 01:06:19,380
uh currently

1428
01:06:19,380 --> 01:06:22,680
your test is always done explicitly over

1429
01:06:22,680 --> 01:06:24,839
http 2.

1430
01:06:24,839 --> 01:06:26,700
of course when you're unencrypted that

1431
01:06:26,700 --> 01:06:28,920
will not be an option so we'll have to

1432
01:06:28,920 --> 01:06:32,880
go to http one which will have

1433
01:06:32,880 --> 01:06:36,420
different flavors of performance as well

1434
01:06:36,420 --> 01:06:37,859
so that's going to need to be a

1435
01:06:37,859 --> 01:06:40,339
consideration

1436
01:06:41,240 --> 01:06:44,520
uh okay let's let's think about this a

1437
01:06:44,520 --> 01:06:46,020
little bit more

1438
01:06:46,020 --> 01:06:46,799
um

1439
01:06:46,799 --> 01:06:49,680
I know uh

1440
01:06:49,680 --> 01:06:53,039
the intention of HTTP 2 is that security

1441
01:06:53,039 --> 01:06:55,799
is not optional and for traffic on the

1442
01:06:55,799 --> 01:06:58,559
public web that makes perfect sense

1443
01:06:58,559 --> 01:07:01,799
for this kind of benchmarking traffic uh

1444
01:07:01,799 --> 01:07:04,079
my understanding is that

1445
01:07:04,079 --> 01:07:07,440
there's nothing about HTTP 2 that says

1446
01:07:07,440 --> 01:07:09,780
you can't run it directly over TCP

1447
01:07:09,780 --> 01:07:11,579
you're not supposed to because it's

1448
01:07:11,579 --> 01:07:16,319
supposed to be tied to TLs but right I I

1449
01:07:16,319 --> 01:07:19,680
guess I mean you can

1450
01:07:19,680 --> 01:07:20,819
um but

1451
01:07:20,819 --> 01:07:23,119
I don't know if we want to be

1452
01:07:23,119 --> 01:07:26,579
encouraging implementations to kind of

1453
01:07:26,579 --> 01:07:30,140
for this reason build the unencrypted

1454
01:07:30,140 --> 01:07:32,940
HTTP 2

1455
01:07:32,940 --> 01:07:34,319
mechanism

1456
01:07:34,319 --> 01:07:36,180
that it's something that is not normally

1457
01:07:36,180 --> 01:07:38,960
supported and so you need more exotic

1458
01:07:38,960 --> 01:07:41,339
implementations or more knobs that some

1459
01:07:41,339 --> 01:07:43,619
of the languages we may have may not

1460
01:07:43,619 --> 01:07:46,740
support today yes

1461
01:07:46,740 --> 01:07:48,299
um let's think more about the right way

1462
01:07:48,299 --> 01:07:50,760
to do that it's not as simple as just

1463
01:07:50,760 --> 01:07:54,480
saying we'll use HTTP one because part

1464
01:07:54,480 --> 01:07:56,640
of the way the test works is it's

1465
01:07:56,640 --> 01:07:59,579
fetching large chunks over the H2

1466
01:07:59,579 --> 01:08:01,319
connection and then in the middle of

1467
01:08:01,319 --> 01:08:04,079
that it inserts a get request for little

1468
01:08:04,079 --> 01:08:06,539
one byte object and that's how we're

1469
01:08:06,539 --> 01:08:09,240
measuring on a working busy connection

1470
01:08:09,240 --> 01:08:12,059
how quickly can it deliver some other

1471
01:08:12,059 --> 01:08:15,720
piece of data on demand and

1472
01:08:15,720 --> 01:08:19,380
um that uh that that ability to

1473
01:08:19,380 --> 01:08:23,339
interleave multiple requests uh is is

1474
01:08:23,339 --> 01:08:25,799
not there on HTTP one one you can do

1475
01:08:25,799 --> 01:08:27,299
pipelining

1476
01:08:27,299 --> 01:08:29,399
um yeah

1477
01:08:29,399 --> 01:08:31,500
so yeah let's we'll need to think about

1478
01:08:31,500 --> 01:08:33,238
the right way to do that

1479
01:08:33,238 --> 01:08:35,939
yeah all right that sounds good it and

1480
01:08:35,939 --> 01:08:38,339
sorry one final

1481
01:08:38,339 --> 01:08:39,839
there's just a curiosity question

1482
01:08:39,839 --> 01:08:41,819
because I as we were talking about this

1483
01:08:41,819 --> 01:08:45,238
in HTTP 2 versus HTTP one

1484
01:08:45,238 --> 01:08:48,120
in general the document and this

1485
01:08:48,120 --> 01:08:50,000
presentation we're talking about having

1486
01:08:50,000 --> 01:08:54,060
multiple TCP connections here how are

1487
01:08:54,060 --> 01:08:58,520
you inducing the HTTP Stacks to create

1488
01:08:58,520 --> 01:09:01,380
multiple TCP connections

1489
01:09:01,380 --> 01:09:03,420
when with when they're doing HTTP 2

1490
01:09:03,420 --> 01:09:08,179
because generally it will try to use one

1491
01:09:08,580 --> 01:09:11,580
uh that's a good question I don't know

1492
01:09:11,580 --> 01:09:14,040
the specifics of

1493
01:09:14,040 --> 01:09:15,198
um

1494
01:09:15,198 --> 01:09:17,238
I'm I'm

1495
01:09:17,238 --> 01:09:21,238
I'll give you my uh best understanding

1496
01:09:21,238 --> 01:09:24,060
of this that on the tools on Mac OS and

1497
01:09:24,060 --> 01:09:25,920
iOS

1498
01:09:25,920 --> 01:09:28,920
um I think it's using the the URL

1499
01:09:28,920 --> 01:09:32,219
session apis and by making but most

1500
01:09:32,219 --> 01:09:34,259
applications make one URL session and

1501
01:09:34,259 --> 01:09:36,420
use it for everything I think this code

1502
01:09:36,420 --> 01:09:38,819
is explicitly making multiple URL

1503
01:09:38,819 --> 01:09:40,799
session objects and the connection

1504
01:09:40,799 --> 01:09:44,640
pooling is per object uh as to what the

1505
01:09:44,640 --> 01:09:47,219
go responsiveness test does I have not

1506
01:09:47,219 --> 01:09:48,899
looked at the source code of that about

1507
01:09:48,899 --> 01:09:51,600
how it is steering the underlying code

1508
01:09:51,600 --> 01:09:54,420
to open parallel connections

1509
01:09:54,420 --> 01:09:58,199
yeah okay it may be worth

1510
01:09:58,199 --> 01:10:01,080
a note again to implementers to you know

1511
01:10:01,080 --> 01:10:03,840
be careful about you know you make sure

1512
01:10:03,840 --> 01:10:05,820
that whatever API you're using in

1513
01:10:05,820 --> 01:10:07,560
whatever language you're using is

1514
01:10:07,560 --> 01:10:09,719
letting you have that control

1515
01:10:09,719 --> 01:10:12,540
yes yeah that's a good point uh a client

1516
01:10:12,540 --> 01:10:14,460
could make four different calls to an

1517
01:10:14,460 --> 01:10:16,679
API to get a URL and not realize that

1518
01:10:16,679 --> 01:10:18,060
under the covers those are all being

1519
01:10:18,060 --> 01:10:19,920
coalesced into one connection

1520
01:10:19,920 --> 01:10:20,880
okay

1521
01:10:20,880 --> 01:10:22,500
okay thank you

1522
01:10:22,500 --> 01:10:24,300
great

1523
01:10:24,300 --> 01:10:26,100
um we have a little bit time so I just

1524
01:10:26,100 --> 01:10:27,719
want to insert myself and ask one more

1525
01:10:27,719 --> 01:10:28,920
question

1526
01:10:28,920 --> 01:10:30,300
um I was wondering if you have

1527
01:10:30,300 --> 01:10:33,360
considered uh these tests in in certain

1528
01:10:33,360 --> 01:10:35,520
mobile scenarios so imagine that you

1529
01:10:35,520 --> 01:10:37,260
you're running this from your from your

1530
01:10:37,260 --> 01:10:39,000
device on a mobile network and you're

1531
01:10:39,000 --> 01:10:41,460
you're on a high-speed train say

1532
01:10:41,460 --> 01:10:43,320
um so you start your capacity

1533
01:10:43,320 --> 01:10:44,820
measurement or your responsiveness

1534
01:10:44,820 --> 01:10:46,980
measurements while you're in one cell

1535
01:10:46,980 --> 01:10:48,719
and then you might hand over to a

1536
01:10:48,719 --> 01:10:50,100
different cell with completely different

1537
01:10:50,100 --> 01:10:52,560
properties for instance going from 140

1538
01:10:52,560 --> 01:10:54,900
cell to a 5G cell maybe in the first

1539
01:10:54,900 --> 01:10:57,120
cell you you sort of your algorithm

1540
01:10:57,120 --> 01:10:58,980
thinks that you found the capacity and

1541
01:10:58,980 --> 01:11:00,420
you start measuring the delay but then

1542
01:11:00,420 --> 01:11:02,580
you hand over to some to some cell with

1543
01:11:02,580 --> 01:11:04,380
much higher capacity and then that would

1544
01:11:04,380 --> 01:11:06,420
probably lead in the delay dropping is

1545
01:11:06,420 --> 01:11:07,800
this something your algorithm is

1546
01:11:07,800 --> 01:11:10,500
currently considering but I mean if you

1547
01:11:10,500 --> 01:11:12,300
see you start to see a delay build up

1548
01:11:12,300 --> 01:11:13,980
but then the delay drops and would you

1549
01:11:13,980 --> 01:11:17,340
then kind of try to add more more

1550
01:11:17,340 --> 01:11:19,380
throughput into the

1551
01:11:19,380 --> 01:11:21,239
I think the simple answer to your

1552
01:11:21,239 --> 01:11:24,960
question is we have not considered those

1553
01:11:24,960 --> 01:11:27,120
kind of changing environments okay uh

1554
01:11:27,120 --> 01:11:28,800
one of the things we have considered

1555
01:11:28,800 --> 01:11:32,219
just for usability reasons is that our

1556
01:11:32,219 --> 01:11:34,020
goal is for the test to complete in

1557
01:11:34,020 --> 01:11:36,960
about 10 seconds this is this is the

1558
01:11:36,960 --> 01:11:38,159
kind of test where you pull out your

1559
01:11:38,159 --> 01:11:39,780
phone you run the test you wait you see

1560
01:11:39,780 --> 01:11:41,880
the answer uh it's not something that

1561
01:11:41,880 --> 01:11:43,800
takes five minutes to run

1562
01:11:43,800 --> 01:11:46,560
so by keeping it short I think that

1563
01:11:46,560 --> 01:11:49,860
reduces these kind of opportunities for

1564
01:11:49,860 --> 01:11:51,600
conditions to change

1565
01:11:51,600 --> 01:11:55,560
uh I don't I can't imagine

1566
01:11:55,560 --> 01:11:58,260
a fully General solution to the kind of

1567
01:11:58,260 --> 01:12:00,900
situation you describe which is however

1568
01:12:00,900 --> 01:12:03,179
long the test runs just as it thinks

1569
01:12:03,179 --> 01:12:05,280
it's done suddenly the whole environment

1570
01:12:05,280 --> 01:12:07,920
changes the same could go if you're

1571
01:12:07,920 --> 01:12:10,080
sharing capacity with some other client

1572
01:12:10,080 --> 01:12:12,360
and they finish that download and

1573
01:12:12,360 --> 01:12:14,340
suddenly there's twice as much share

1574
01:12:14,340 --> 01:12:16,320
available for you

1575
01:12:16,320 --> 01:12:17,060
um

1576
01:12:17,060 --> 01:12:19,560
I think it's always possible to conduct

1577
01:12:19,560 --> 01:12:21,960
not construct scenarios where those

1578
01:12:21,960 --> 01:12:23,940
changes happen at just the wrong time

1579
01:12:23,940 --> 01:12:26,400
and and uh and you don't notice the

1580
01:12:26,400 --> 01:12:28,980
change has happened uh I think the

1581
01:12:28,980 --> 01:12:31,679
answer there is

1582
01:12:31,679 --> 01:12:32,820
um

1583
01:12:32,820 --> 01:12:35,400
at the human level if you run the test

1584
01:12:35,400 --> 01:12:37,020
two or three times hopefully you get

1585
01:12:37,020 --> 01:12:38,760
consistent results

1586
01:12:38,760 --> 01:12:40,800
um the the other thing to remember for

1587
01:12:40,800 --> 01:12:44,340
this test in particular is the focus of

1588
01:12:44,340 --> 01:12:46,320
this test is not how many megabits per

1589
01:12:46,320 --> 01:12:48,060
second are you getting because there are

1590
01:12:48,060 --> 01:12:49,739
many many tests that already do that

1591
01:12:49,739 --> 01:12:52,380
everybody runs iperf and and many other

1592
01:12:52,380 --> 01:12:56,219
ways of testing capacity uh the focus of

1593
01:12:56,219 --> 01:12:59,340
this test is to work out how deep are

1594
01:12:59,340 --> 01:13:02,219
those dark buffers and

1595
01:13:02,219 --> 01:13:05,880
our belief is that the depth of

1596
01:13:05,880 --> 01:13:08,880
buffering actually is not something that

1597
01:13:08,880 --> 01:13:11,340
varies with time of day it's not

1598
01:13:11,340 --> 01:13:13,560
something that varies with traffic it

1599
01:13:13,560 --> 01:13:16,380
tends to be a configuration option of

1600
01:13:16,380 --> 01:13:19,980
the network hardware and as such it's

1601
01:13:19,980 --> 01:13:23,040
relatively stable now if you if you roam

1602
01:13:23,040 --> 01:13:26,100
from one wife from one mobile cell to

1603
01:13:26,100 --> 01:13:29,100
another one then you might inherit a

1604
01:13:29,100 --> 01:13:30,960
completely different configuration just

1605
01:13:30,960 --> 01:13:32,699
like if you were to roam from one Wi-Fi

1606
01:13:32,699 --> 01:13:35,040
access point to another

1607
01:13:35,040 --> 01:13:38,400
um you you could end up in a

1608
01:13:38,400 --> 01:13:40,320
dramatically different network

1609
01:13:40,320 --> 01:13:42,179
environment I mean to give a silly

1610
01:13:42,179 --> 01:13:43,800
example right you could have one Wi-Fi

1611
01:13:43,800 --> 01:13:46,140
access point plugged into a one megabit

1612
01:13:46,140 --> 01:13:48,840
DSL modem and you walk next door and you

1613
01:13:48,840 --> 01:13:50,340
roam to an AP that's plugged into

1614
01:13:50,340 --> 01:13:52,199
gigabit fiber

1615
01:13:52,199 --> 01:13:52,920
um

1616
01:13:52,920 --> 01:13:55,440
and a lot of the time that roaming is

1617
01:13:55,440 --> 01:13:56,699
completely transparent to the

1618
01:13:56,699 --> 01:13:59,340
application uh if your IP address hasn't

1619
01:13:59,340 --> 01:14:00,719
changed

1620
01:14:00,719 --> 01:14:03,480
um and the SSID network name hasn't

1621
01:14:03,480 --> 01:14:05,280
changed the application doesn't even

1622
01:14:05,280 --> 01:14:07,080
know it's just suddenly the

1623
01:14:07,080 --> 01:14:10,100
configuration is different

1624
01:14:11,219 --> 01:14:15,199
okay thanks a lot thank you

1625
01:14:15,900 --> 01:14:18,780
so we move on to

1626
01:14:18,780 --> 01:14:23,179
data Integrity iom data integrity

1627
01:14:33,239 --> 01:14:37,040
don't seem to get this one too right

1628
01:14:46,920 --> 01:14:48,480
hi good morning

1629
01:14:48,480 --> 01:14:50,219
um so this one is going to be pretty

1630
01:14:50,219 --> 01:14:53,219
fast actually we have no change since my

1631
01:14:53,219 --> 01:14:55,199
last ETF

1632
01:14:55,199 --> 01:14:57,300
um the reason is simple we were waiting

1633
01:14:57,300 --> 01:14:59,340
for the implementers to have a feedback

1634
01:14:59,340 --> 01:15:01,679
on the implementation as we agreed

1635
01:15:01,679 --> 01:15:04,500
so I think we're gonna wait a little bit

1636
01:15:04,500 --> 01:15:05,699
more

1637
01:15:05,699 --> 01:15:08,580
uh so I think also that it doesn't

1638
01:15:08,580 --> 01:15:09,840
change anything about the working group

1639
01:15:09,840 --> 01:15:11,760
less code so we're gonna postpone it to

1640
01:15:11,760 --> 01:15:15,420
maybe I hope by next ietf we will have

1641
01:15:15,420 --> 01:15:17,040
some feedback on that

1642
01:15:17,040 --> 01:15:20,640
and regarding the email we received from

1643
01:15:20,640 --> 01:15:23,760
Ayanna so I just wanted to advice on

1644
01:15:23,760 --> 01:15:26,640
that should we just annotate the code

1645
01:15:26,640 --> 01:15:29,280
points with the suggested mention or

1646
01:15:29,280 --> 01:15:32,100
should we just ask for the allocation so

1647
01:15:32,100 --> 01:15:33,659
this is a question for you Marcus or

1648
01:15:33,659 --> 01:15:36,199
Tommy

1649
01:15:37,920 --> 01:15:40,920
foreign

1650
01:16:00,659 --> 01:16:02,820
Justin would you mind expanding a little

1651
01:16:02,820 --> 01:16:05,340
bit on why the delay happened I think

1652
01:16:05,340 --> 01:16:07,199
that would be helpful for everybody to

1653
01:16:07,199 --> 01:16:09,060
understand

1654
01:16:09,060 --> 01:16:11,340
well actually

1655
01:16:11,340 --> 01:16:13,219
um there was a student

1656
01:16:13,219 --> 01:16:17,159
for that and it turned out that it it

1657
01:16:17,159 --> 01:16:20,640
was quite unreliable so you know things

1658
01:16:20,640 --> 01:16:22,860
happens and um

1659
01:16:22,860 --> 01:16:25,739
now we have another student which is a

1660
01:16:25,739 --> 01:16:27,780
master uh

1661
01:16:27,780 --> 01:16:31,679
uh in the University of liege and so

1662
01:16:31,679 --> 01:16:35,520
this is is Master thesis so I

1663
01:16:35,520 --> 01:16:37,140
for sure hope that it's gonna be okay

1664
01:16:37,140 --> 01:16:39,739
this time

1665
01:16:49,380 --> 01:16:52,100
all right

1666
01:16:52,980 --> 01:16:56,659
thank you then yeah thanks a lot

1667
01:16:58,739 --> 01:17:02,839
and we have iom yang

1668
01:17:06,739 --> 01:17:09,840
do you want me to share yeah yeah could

1669
01:17:09,840 --> 01:17:12,980
you please share it for me

1670
01:17:20,219 --> 01:17:22,620
okay thank you very much

1671
01:17:22,620 --> 01:17:24,780
uh hello everyone

1672
01:17:24,780 --> 01:17:28,500
um again I'm tianjo from Huawei and I

1673
01:17:28,500 --> 01:17:30,900
will report the progress of the iom

1674
01:17:30,900 --> 01:17:33,860
young data model

1675
01:17:34,080 --> 01:17:37,679
um we received a comments from the

1676
01:17:37,679 --> 01:17:40,500
working Google last call and thanks Tom

1677
01:17:40,500 --> 01:17:43,679
and Greg for the very useful discussions

1678
01:17:43,679 --> 01:17:46,920
there are some minor issues we will

1679
01:17:46,920 --> 01:17:50,640
update the new revision and there is a

1680
01:17:50,640 --> 01:17:55,380
major issue raised by Tom to add

1681
01:17:55,380 --> 01:17:59,100
uh some examples we are going to accept

1682
01:17:59,100 --> 01:18:02,760
but still we can discuss later whether

1683
01:18:02,760 --> 01:18:04,920
it is necessary

1684
01:18:04,920 --> 01:18:09,140
and next next stage

1685
01:18:09,780 --> 01:18:12,719
and there are many discussions raised by

1686
01:18:12,719 --> 01:18:16,500
Greg most of them related to the scope

1687
01:18:16,500 --> 01:18:22,320
of iom like whether iom DX is an

1688
01:18:22,320 --> 01:18:26,460
integral part of iom or not I'm going to

1689
01:18:26,460 --> 01:18:30,480
reduce the scope of a scope of this

1690
01:18:30,480 --> 01:18:36,000
document to align with the RFC 9197 that

1691
01:18:36,000 --> 01:18:40,679
means i1 ex and i1 flags are excluded

1692
01:18:40,679 --> 01:18:42,719
from this year model

1693
01:18:42,719 --> 01:18:46,739
and then the first question whether to

1694
01:18:46,739 --> 01:18:52,380
include the presentation of iom data my

1695
01:18:52,380 --> 01:18:55,679
suggestion is Young model only focus on

1696
01:18:55,679 --> 01:18:57,960
the configuration

1697
01:18:57,960 --> 01:19:01,679
um DCR mode only okay only focus on the

1698
01:19:01,679 --> 01:19:04,560
configuration because the exports may

1699
01:19:04,560 --> 01:19:08,880
not use your model for example ipfix

1700
01:19:08,880 --> 01:19:11,699
could be used on the other hand the

1701
01:19:11,699 --> 01:19:15,000
export should be uh should be iom

1702
01:19:15,000 --> 01:19:17,760
independent that means there are other

1703
01:19:17,760 --> 01:19:19,920
measurements could generate the same

1704
01:19:19,920 --> 01:19:24,360
Matrix like a delay loss and so on

1705
01:19:24,360 --> 01:19:27,659
known the last question should should

1706
01:19:27,659 --> 01:19:32,580
the configuration of iom or IPv6 or an

1707
01:19:32,580 --> 01:19:35,100
asset should be part of this document uh

1708
01:19:35,100 --> 01:19:38,820
I would say yes and I do not think we

1709
01:19:38,820 --> 01:19:43,739
need to augment the PCL model here the

1710
01:19:43,739 --> 01:19:47,520
filter defined in this defined in this

1711
01:19:47,520 --> 01:19:51,960
draft is only used to uh identify the

1712
01:19:51,960 --> 01:19:55,199
target flow which does not have the

1713
01:19:55,199 --> 01:19:59,040
which does not have an ion header we

1714
01:19:59,040 --> 01:20:02,100
matched the packet well enter the iom

1715
01:20:02,100 --> 01:20:05,820
process we can use the protocol entry in

1716
01:20:05,820 --> 01:20:08,580
this draft in the young model to find

1717
01:20:08,580 --> 01:20:13,080
the irony instruction in addition Jan

1718
01:20:13,080 --> 01:20:16,380
just provide enough information from the

1719
01:20:16,380 --> 01:20:19,620
configuration interface a device may

1720
01:20:19,620 --> 01:20:22,980
have different implementations

1721
01:20:22,980 --> 01:20:27,080
yeah and that's all

1722
01:20:33,719 --> 01:20:36,440
thank you

1723
01:20:46,380 --> 01:20:49,199
oh we have Frank can you what

1724
01:20:49,199 --> 01:20:51,360
yeah maybe yeah I'm gonna go and ask the

1725
01:20:51,360 --> 01:20:52,860
same questions again that the other one

1726
01:20:52,860 --> 01:20:55,020
already asked

1727
01:20:55,020 --> 01:20:59,640
um so um there is in many cases people

1728
01:20:59,640 --> 01:21:01,560
supplying

1729
01:21:01,560 --> 01:21:05,100
examples for young models we can go and

1730
01:21:05,100 --> 01:21:06,960
create a full example

1731
01:21:06,960 --> 01:21:09,000
as part of the document

1732
01:21:09,000 --> 01:21:11,100
feasible doable

1733
01:21:11,100 --> 01:21:12,840
but we also have to recognize and

1734
01:21:12,840 --> 01:21:13,860
acknowledge that there is no

1735
01:21:13,860 --> 01:21:16,440
implementation

1736
01:21:16,440 --> 01:21:19,080
yet so it would be really a made-up

1737
01:21:19,080 --> 01:21:21,179
example that we can go and put into the

1738
01:21:21,179 --> 01:21:22,199
document

1739
01:21:22,199 --> 01:21:25,080
and I'm just wondering how useful that

1740
01:21:25,080 --> 01:21:25,980
is

1741
01:21:25,980 --> 01:21:28,440
so we can even go and consider moving

1742
01:21:28,440 --> 01:21:30,420
the overall document to experimental and

1743
01:21:30,420 --> 01:21:33,360
set a standards track and then just that

1744
01:21:33,360 --> 01:21:35,100
way saying well yeah we can go and have

1745
01:21:35,100 --> 01:21:37,679
a mock-up example of a young model

1746
01:21:37,679 --> 01:21:39,659
if we look at other management documents

1747
01:21:39,659 --> 01:21:41,100
that we've done just recently like comp

1748
01:21:41,100 --> 01:21:42,000
state

1749
01:21:42,000 --> 01:21:45,120
uh there is no examples in there at all

1750
01:21:45,120 --> 01:21:47,100
right so I'm just wondering whether

1751
01:21:47,100 --> 01:21:50,400
people have a a feeling for or some

1752
01:21:50,400 --> 01:21:52,980
guidance on whether we want to put a

1753
01:21:52,980 --> 01:21:55,020
full example in whether it's useful or

1754
01:21:55,020 --> 01:21:57,179
whether we should just go and leave it

1755
01:21:57,179 --> 01:21:58,280
for now

1756
01:21:58,280 --> 01:22:01,320
recognizing that this is like early

1757
01:22:01,320 --> 01:22:03,000
stages and we're waiting for reference

1758
01:22:03,000 --> 01:22:04,560
implementation

1759
01:22:04,560 --> 01:22:07,320
and then the second thing um that John

1760
01:22:07,320 --> 01:22:09,719
already mentioned is um

1761
01:22:09,719 --> 01:22:11,880
I would be very much in favor of

1762
01:22:11,880 --> 01:22:13,980
following the suggestions that um

1763
01:22:13,980 --> 01:22:18,780
Cameron had I.E we focused the scope on

1764
01:22:18,780 --> 01:22:23,400
the the core iom documents so 9197

1765
01:22:23,400 --> 01:22:26,760
and that way avoid like forward

1766
01:22:26,760 --> 01:22:28,980
references on other documents that are

1767
01:22:28,980 --> 01:22:31,199
still in flight and and making that a

1768
01:22:31,199 --> 01:22:33,780
little like nebulous on on what the

1769
01:22:33,780 --> 01:22:35,520
scope of this document would be so if we

1770
01:22:35,520 --> 01:22:37,320
can go and scope this document

1771
01:22:37,320 --> 01:22:41,400
also to 9197 then a lot of the problems

1772
01:22:41,400 --> 01:22:43,500
that were brought up and working group

1773
01:22:43,500 --> 01:22:47,120
last call would naturally resolve itself

1774
01:22:50,520 --> 01:22:53,960
Greg let's go ahead

1775
01:22:58,320 --> 01:23:02,840
um well I I understand that uh desire to

1776
01:23:02,840 --> 01:23:06,719
move forward and progress this document

1777
01:23:06,719 --> 01:23:11,699
but I see that IEM Dax is important and

1778
01:23:11,699 --> 01:23:13,980
uh

1779
01:23:13,980 --> 01:23:18,600
very much needed mode of I am especially

1780
01:23:18,600 --> 01:23:21,659
in environment uh with their constraints

1781
01:23:21,659 --> 01:23:25,440
so that because it allows for

1782
01:23:25,440 --> 01:23:28,080
um export of operational State and

1783
01:23:28,080 --> 01:23:29,420
Telemetry information

1784
01:23:29,420 --> 01:23:32,179
uh out of band or for the management

1785
01:23:32,179 --> 01:23:38,280
plane for example so I concerned that if

1786
01:23:38,280 --> 01:23:41,159
there is no effort

1787
01:23:41,159 --> 01:23:45,420
to drive this work and I don't see any

1788
01:23:45,420 --> 01:23:47,640
draft individual draft or any draft of

1789
01:23:47,640 --> 01:23:51,659
any maturity that addresses it so a

1790
01:23:51,659 --> 01:23:54,360
narrowing scope of this draft at this

1791
01:23:54,360 --> 01:23:59,219
point uh seems like a risk of uh IM Dax

1792
01:23:59,219 --> 01:24:01,920
Yang model would never be done in time

1793
01:24:01,920 --> 01:24:05,880
because I can point to work and

1794
01:24:05,880 --> 01:24:09,020
discussion we have for example on mpos

1795
01:24:09,020 --> 01:24:11,880
architecture enhancements using the

1796
01:24:11,880 --> 01:24:16,440
network actions where I am Dex is very

1797
01:24:16,440 --> 01:24:19,199
attractive and especially for example in

1798
01:24:19,199 --> 01:24:22,800
a deterministic networking within the OS

1799
01:24:22,800 --> 01:24:27,060
data plane uh where their resources

1800
01:24:27,060 --> 01:24:30,420
allocated for that net flows are

1801
01:24:30,420 --> 01:24:34,320
explicitly reserved so that even their

1802
01:24:34,320 --> 01:24:36,120
operational State and Telemetry

1803
01:24:36,120 --> 01:24:38,699
information are important exporting them

1804
01:24:38,699 --> 01:24:40,920
is not critical to delivering that net

1805
01:24:40,920 --> 01:24:42,239
service services

1806
01:24:42,239 --> 01:24:46,800
so and that's imtex is very valuable

1807
01:24:46,800 --> 01:24:49,560
mode of IAM especially for these

1808
01:24:49,560 --> 01:24:52,100
environments

1809
01:25:01,260 --> 01:25:02,600
yes

1810
01:25:02,600 --> 01:25:07,380
then there will be several Choice one is

1811
01:25:07,380 --> 01:25:10,260
yeah one is just that I suggested

1812
01:25:10,260 --> 01:25:15,840
exclude this uh ion text or on the other

1813
01:25:15,840 --> 01:25:19,620
hand maybe we need to

1814
01:25:19,620 --> 01:25:21,679
um

1815
01:25:21,840 --> 01:25:23,219
ah

1816
01:25:23,219 --> 01:25:26,600
to have a consensus on how to operate

1817
01:25:26,600 --> 01:25:30,860
the i1 text

1818
01:25:30,920 --> 01:25:34,940
where to detect the ACL

1819
01:25:34,940 --> 01:25:40,560
in the at the transit node

1820
01:25:40,560 --> 01:25:43,320
I think this is still not clear right

1821
01:25:43,320 --> 01:25:45,500
now

1822
01:25:45,780 --> 01:25:47,640
okay if you want to respond quickly to

1823
01:25:47,640 --> 01:25:49,980
this one great I'm going to move forward

1824
01:25:49,980 --> 01:25:52,920
um yes I agree I think that having this

1825
01:25:52,920 --> 01:25:56,219
discussion before we make a decision on

1826
01:25:56,219 --> 01:25:58,500
how to progress this work it will be

1827
01:25:58,500 --> 01:26:01,080
very useful and helpful not only to the

1828
01:26:01,080 --> 01:26:03,600
group but to the large community that is

1829
01:26:03,600 --> 01:26:07,139
looking to use an app Apple IAM

1830
01:26:07,139 --> 01:26:09,659
technology in their use cases networks

1831
01:26:09,659 --> 01:26:11,520
thank you

1832
01:26:11,520 --> 01:26:14,239
thank you

1833
01:26:15,179 --> 01:26:18,800
so let's move onwards

1834
01:26:19,080 --> 01:26:20,940
we have

1835
01:26:20,940 --> 01:26:26,299
Rakesh with stamp on srpm

1836
01:26:42,120 --> 01:26:45,239
uh good good morning everyone my name is

1837
01:26:45,239 --> 01:26:48,659
Rakesh Gandhi and presenting the simple

1838
01:26:48,659 --> 01:26:51,780
the stamp extension for Sr networks on

1839
01:26:51,780 --> 01:26:54,420
behalf of the authors listed

1840
01:26:54,420 --> 01:26:57,060
next slide please

1841
01:26:57,060 --> 01:26:59,760
so the agenda is uh the updates that we

1842
01:26:59,760 --> 01:27:02,340
have made in revision zero six uh will

1843
01:27:02,340 --> 01:27:05,340
uh briefly have a look uh highlight the

1844
01:27:05,340 --> 01:27:07,260
stamp based work that's being done in

1845
01:27:07,260 --> 01:27:11,400
other working groups and the next steps

1846
01:27:11,400 --> 01:27:14,460
where we are and what we should do next

1847
01:27:14,460 --> 01:27:17,219
next slide please

1848
01:27:17,219 --> 01:27:20,400
so in the latest revision zero six we

1849
01:27:20,400 --> 01:27:22,739
have addressed various review comments

1850
01:27:22,739 --> 01:27:26,219
many thanks to Rick and Greg for

1851
01:27:26,219 --> 01:27:27,719
providing the comments

1852
01:27:27,719 --> 01:27:30,840
so comments from Rick uh conspirant

1853
01:27:30,840 --> 01:27:34,320
regarding the wecheck flag for the state

1854
01:27:34,320 --> 01:27:37,100
does reflector specifically for the

1855
01:27:37,100 --> 01:27:39,780
counters for the direct measurement tlv

1856
01:27:39,780 --> 01:27:43,260
so we have added the text for that we

1857
01:27:43,260 --> 01:27:44,820
have also addressed various review

1858
01:27:44,820 --> 01:27:48,000
comments from Greg many thanks Greg with

1859
01:27:48,000 --> 01:27:50,400
clarification tags for the V flag

1860
01:27:50,400 --> 01:27:53,219
destination address tlv and written path

1861
01:27:53,219 --> 01:27:54,780
tlv

1862
01:27:54,780 --> 01:27:58,199
so we have also done the iron early code

1863
01:27:58,199 --> 01:28:00,420
point allocations to Fascinate the

1864
01:28:00,420 --> 01:28:03,239
implementations that's going on and we

1865
01:28:03,239 --> 01:28:06,360
have added that in the draft as well a

1866
01:28:06,360 --> 01:28:09,239
few minor editorial changes and we had

1867
01:28:09,239 --> 01:28:12,000
no open issues right now

1868
01:28:12,000 --> 01:28:15,260
and next slide please

1869
01:28:17,940 --> 01:28:21,540
so there is a ongoing work to extend the

1870
01:28:21,540 --> 01:28:24,060
stamp that's a great protocol work done

1871
01:28:24,060 --> 01:28:27,860
in ippm and we are using that in Spring

1872
01:28:27,860 --> 01:28:30,960
cavity a few drafts there as well as

1873
01:28:30,960 --> 01:28:34,320
this one for mpls as well

1874
01:28:34,320 --> 01:28:36,900
so please uh review this draft as well

1875
01:28:36,900 --> 01:28:40,080
as and provide review comments

1876
01:28:40,080 --> 01:28:43,080
and next slide please

1877
01:28:43,080 --> 01:28:45,719
so for this draft currently we have no

1878
01:28:45,719 --> 01:28:49,139
open issues um and uh we believe uh the

1879
01:28:49,139 --> 01:28:51,179
draft is ready for the working of last

1880
01:28:51,179 --> 01:28:52,020
call

1881
01:28:52,020 --> 01:28:54,060
so we'd like to request our kingdom last

1882
01:28:54,060 --> 01:28:56,100
call

1883
01:28:56,100 --> 01:28:58,199
thank you that is definitely something

1884
01:28:58,199 --> 01:28:59,760
we've consider then

1885
01:28:59,760 --> 01:29:04,040
yeah so that's all I had many thanks

1886
01:29:04,139 --> 01:29:07,440
thanks for cash any comments

1887
01:29:07,440 --> 01:29:09,620
foreign

1888
01:29:11,159 --> 01:29:12,960
yeah thank you

1889
01:29:12,960 --> 01:29:15,060
all right thanks then we move onwards in

1890
01:29:15,060 --> 01:29:18,480
the agenda uh we will have uh Greg to

1891
01:29:18,480 --> 01:29:21,259
talk about Pam

1892
01:29:24,380 --> 01:29:26,580
it's one of the benefits to being

1893
01:29:26,580 --> 01:29:29,120
presenter

1894
01:29:38,699 --> 01:29:41,760
yes we can go to the next slide please

1895
01:29:41,760 --> 01:29:44,699
okay so let's recapture uh what we're

1896
01:29:44,699 --> 01:29:46,260
trying to um

1897
01:29:46,260 --> 01:29:48,360
address here

1898
01:29:48,360 --> 01:29:51,719
service level objectives are components

1899
01:29:51,719 --> 01:29:55,739
of service level agreement and

1900
01:29:55,739 --> 01:29:56,820
um

1901
01:29:56,820 --> 01:30:00,360
they reflect on uh key uh performance

1902
01:30:00,360 --> 01:30:05,040
metrics uh that are critical to user

1903
01:30:05,040 --> 01:30:07,739
experience with a

1904
01:30:07,739 --> 01:30:09,659
particular service

1905
01:30:09,659 --> 01:30:12,780
so in some use cases the whole history

1906
01:30:12,780 --> 01:30:17,100
of each SLO is not needed and what is

1907
01:30:17,100 --> 01:30:20,580
important and critical is capturing uh

1908
01:30:20,580 --> 01:30:24,360
when their SLO are violated or

1909
01:30:24,360 --> 01:30:24,960
um

1910
01:30:24,960 --> 01:30:28,380
not being delivered

1911
01:30:28,380 --> 01:30:32,159
and that's sufficient uh to draw the

1912
01:30:32,159 --> 01:30:37,860
conclusion of Wellness of uh their um

1913
01:30:37,860 --> 01:30:40,380
service being delivered so basically how

1914
01:30:40,380 --> 01:30:41,580
much it

1915
01:30:41,580 --> 01:30:45,540
um in regard to SLA

1916
01:30:45,540 --> 01:30:46,380
um

1917
01:30:46,380 --> 01:30:48,139
and the second

1918
01:30:48,139 --> 01:30:50,699
observation so you can see here on a

1919
01:30:50,699 --> 01:30:53,040
drawing that what will matter what

1920
01:30:53,040 --> 01:30:56,460
matters here is that when a particular

1921
01:30:56,460 --> 01:31:02,760
SLO is outside of the range and there

1922
01:31:02,760 --> 01:31:04,620
could be a different interpretation so

1923
01:31:04,620 --> 01:31:07,920
it could be that for example operator is

1924
01:31:07,920 --> 01:31:13,219
interested in early warning about their

1925
01:31:13,219 --> 01:31:17,219
Dynamics or degradation of the

1926
01:31:17,219 --> 01:31:18,800
particular

1927
01:31:18,800 --> 01:31:22,860
performance metric and will request that

1928
01:31:22,860 --> 01:31:27,179
the system the Pam will inform about the

1929
01:31:27,179 --> 01:31:29,340
violation of

1930
01:31:29,340 --> 01:31:33,060
uh optimal threshold whereas the

1931
01:31:33,060 --> 01:31:36,239
operator and customer I will certainly

1932
01:31:36,239 --> 01:31:39,179
will be interested in knowing uh with

1933
01:31:39,179 --> 01:31:41,880
the degradation crosses

1934
01:31:41,880 --> 01:31:44,940
um uh critical level so for that uh we

1935
01:31:44,940 --> 01:31:47,940
allow in our approach in the discussion

1936
01:31:47,940 --> 01:31:51,260
in this document that uh there are two

1937
01:31:51,260 --> 01:31:55,380
types of thresholds might be associated

1938
01:31:55,380 --> 01:31:57,719
with their any given SLO

1939
01:31:57,719 --> 01:31:59,580
next slide please

1940
01:31:59,580 --> 01:32:02,340
so what have they

1941
01:32:02,340 --> 01:32:06,000
um we received uh excellent comments uh

1942
01:32:06,000 --> 01:32:09,420
from Adrian and he agreed to join us and

1943
01:32:09,420 --> 01:32:11,639
collaborate together welcome edrin thank

1944
01:32:11,639 --> 01:32:14,400
you and uh we work together in

1945
01:32:14,400 --> 01:32:16,380
addressing uh his comments and other

1946
01:32:16,380 --> 01:32:18,060
comments we received in the meantime

1947
01:32:18,060 --> 01:32:20,900
between minutes next

1948
01:32:20,900 --> 01:32:24,540
so uh what we wanted to emphasize is

1949
01:32:24,540 --> 01:32:25,739
that

1950
01:32:25,739 --> 01:32:29,340
uh one of the use cases for uh bam and

1951
01:32:29,340 --> 01:32:34,699
SLO is ITF transport slices

1952
01:32:34,699 --> 01:32:36,239
and

1953
01:32:36,239 --> 01:32:39,659
um if we look at the draft that being

1954
01:32:39,659 --> 01:32:41,760
worked in the TS working group so the

1955
01:32:41,760 --> 01:32:45,960
definitions uh clearly state that SLA is

1956
01:32:45,960 --> 01:32:49,500
composed of slos and uh service level

1957
01:32:49,500 --> 01:32:51,780
expectations and service level

1958
01:32:51,780 --> 01:32:54,360
expectations unlike um service level

1959
01:32:54,360 --> 01:32:57,540
objectives they are can they can be

1960
01:32:57,540 --> 01:32:59,880
expressed but they're more challenging

1961
01:32:59,880 --> 01:33:03,060
to measure so thus uh slas are outside

1962
01:33:03,060 --> 01:33:05,280
the scope of this work

1963
01:33:05,280 --> 01:33:08,179
next slide

1964
01:33:08,400 --> 01:33:11,880
um usefulness of metrics uh in in the

1965
01:33:11,880 --> 01:33:14,940
foundation of this approach is that

1966
01:33:14,940 --> 01:33:18,719
uh for each given SLO uh there are

1967
01:33:18,719 --> 01:33:20,400
associated performance metric is

1968
01:33:20,400 --> 01:33:24,420
measured uh over uh predefined interval

1969
01:33:24,420 --> 01:33:27,000
and that is

1970
01:33:27,000 --> 01:33:29,580
um the same interval being applied to us

1971
01:33:29,580 --> 01:33:32,100
all slos that

1972
01:33:32,100 --> 01:33:35,520
um are part of the same SLA

1973
01:33:35,520 --> 01:33:39,780
but at the same time because their

1974
01:33:39,780 --> 01:33:42,679
decision of transition between

1975
01:33:42,679 --> 01:33:46,380
availability in unavailability state is

1976
01:33:46,380 --> 01:33:49,080
done based on the number of consecutive

1977
01:33:49,080 --> 01:33:54,480
intervals uh that uh can hide on their

1978
01:33:54,480 --> 01:33:56,000
notion of

1979
01:33:56,000 --> 01:34:01,320
number of uh translations violations uh

1980
01:34:01,320 --> 01:34:03,659
is lost so that's why

1981
01:34:03,659 --> 01:34:04,199
um

1982
01:34:04,199 --> 01:34:07,679
the ratio metric uh seems to be a useful

1983
01:34:07,679 --> 01:34:09,480
metric

1984
01:34:09,480 --> 01:34:12,179
so and the ratio can be applied equally

1985
01:34:12,179 --> 01:34:15,420
to violated intervals so when there are

1986
01:34:15,420 --> 01:34:19,380
optimal thresholds uh being crossed uh

1987
01:34:19,380 --> 01:34:22,139
and severely violated where their

1988
01:34:22,139 --> 01:34:24,840
critical thresholds can be lost of

1989
01:34:24,840 --> 01:34:26,280
course if

1990
01:34:26,280 --> 01:34:29,639
um only one threshold critical is

1991
01:34:29,639 --> 01:34:33,300
defined then the metric for the violated

1992
01:34:33,300 --> 01:34:35,340
intervals will be identical to the

1993
01:34:35,340 --> 01:34:37,320
severe violated

1994
01:34:37,320 --> 01:34:39,260
next slide

1995
01:34:39,260 --> 01:34:42,840
please if you have any questions let me

1996
01:34:42,840 --> 01:34:47,120
know I don't see their queue so

1997
01:34:47,880 --> 01:34:49,199
okay

1998
01:34:49,199 --> 01:34:51,980
so let's continue

1999
01:34:52,020 --> 01:34:52,679
um

2000
01:34:52,679 --> 01:34:56,420
in discussion of ITF Network slicing

2001
01:34:56,420 --> 01:35:00,360
what's important is that a network slice

2002
01:35:00,360 --> 01:35:03,920
can be uh

2003
01:35:04,739 --> 01:35:05,460
um

2004
01:35:05,460 --> 01:35:09,239
constructed using a set of connectivity

2005
01:35:09,239 --> 01:35:10,860
constructs

2006
01:35:10,860 --> 01:35:14,400
and these constructs uh are could be a

2007
01:35:14,400 --> 01:35:17,699
point to point to point to multi-point

2008
01:35:17,699 --> 01:35:20,219
um and uh more about it in more details

2009
01:35:20,219 --> 01:35:23,000
you can look at um

2010
01:35:23,000 --> 01:35:26,580
MBI a norbound interface yank model for

2011
01:35:26,580 --> 01:35:30,659
Network slides so the uh an SLO can be

2012
01:35:30,659 --> 01:35:35,219
provide applied in or assigned to all

2013
01:35:35,219 --> 01:35:37,800
the construct

2014
01:35:37,800 --> 01:35:40,199
that are included in the composite

2015
01:35:40,199 --> 01:35:44,159
service or subsets of constructs can be

2016
01:35:44,159 --> 01:35:48,179
assigned at different sets of slos

2017
01:35:48,179 --> 01:35:51,120
so thus it allows to monitor

2018
01:35:51,120 --> 01:35:54,420
individually this subset of constructs

2019
01:35:54,420 --> 01:35:58,980
and draw a conclusion and learn about

2020
01:35:58,980 --> 01:36:00,840
their availability and availability

2021
01:36:00,840 --> 01:36:04,620
State and uh in turn so that the

2022
01:36:04,620 --> 01:36:07,020
composing service will be a composition

2023
01:36:07,020 --> 01:36:11,520
of this uh subservice Pam indicators

2024
01:36:11,520 --> 01:36:14,300
and Metric

2025
01:36:15,659 --> 01:36:17,880
any questions about that

2026
01:36:17,880 --> 01:36:22,380
and why it seemed to be important

2027
01:36:22,380 --> 01:36:25,500
okay let's continue

2028
01:36:25,500 --> 01:36:28,920
so uh we still have some um questions uh

2029
01:36:28,920 --> 01:36:30,659
that we want to discuss and we are

2030
01:36:30,659 --> 01:36:33,780
discussing with offers and we invite uh

2031
01:36:33,780 --> 01:36:36,360
your comments suggestions

2032
01:36:36,360 --> 01:36:39,540
and contributions uh one of them it's uh

2033
01:36:39,540 --> 01:36:42,000
individual packet metrics whether it's

2034
01:36:42,000 --> 01:36:44,280
important or uh

2035
01:36:44,280 --> 01:36:47,580
might be too burden it might be an

2036
01:36:47,580 --> 01:36:49,820
optional

2037
01:36:49,820 --> 01:36:55,199
and so we as originally we indicated so

2038
01:36:55,199 --> 01:36:58,800
that uh future work in this direction

2039
01:36:58,800 --> 01:37:02,040
will include Yang data model ipfix

2040
01:37:02,040 --> 01:37:05,760
extensions uh support statistical slos

2041
01:37:05,760 --> 01:37:09,000
and more defining the policies that

2042
01:37:09,000 --> 01:37:10,760
guide

2043
01:37:10,760 --> 01:37:14,960
monitoring service level objectives

2044
01:37:17,100 --> 01:37:20,300
okay so next

2045
01:37:22,020 --> 01:37:24,659
as I said we always welcome comments and

2046
01:37:24,659 --> 01:37:27,600
questions and contributions so we would

2047
01:37:27,600 --> 01:37:29,520
like

2048
01:37:29,520 --> 01:37:32,460
to better understand uh their state of

2049
01:37:32,460 --> 01:37:34,620
the working group adoption poll

2050
01:37:34,620 --> 01:37:37,080
and resolve

2051
01:37:37,080 --> 01:37:37,980
um

2052
01:37:37,980 --> 01:37:40,020
questions that being raised during

2053
01:37:40,020 --> 01:37:42,080
adoption Pro we have a working version

2054
01:37:42,080 --> 01:37:46,320
that includes updates

2055
01:37:46,320 --> 01:37:50,219
uh applied resulting from the comments

2056
01:37:50,219 --> 01:37:53,699
but I believe that we still have

2057
01:37:53,699 --> 01:37:56,100
um one discussion that needs to get some

2058
01:37:56,100 --> 01:37:58,440
closure or at least

2059
01:37:58,440 --> 01:38:00,900
we would like to understand what the

2060
01:38:00,900 --> 01:38:02,699
status of the working group adoption

2061
01:38:02,699 --> 01:38:03,719
poll

2062
01:38:03,719 --> 01:38:06,320
thank you

2063
01:38:09,179 --> 01:38:11,520
thank you Greg

2064
01:38:11,520 --> 01:38:15,060
yeah thank you um just regarding that

2065
01:38:15,060 --> 01:38:16,920
adoption call

2066
01:38:16,920 --> 01:38:19,100
foreign

2067
01:38:19,199 --> 01:38:22,159
we did

2068
01:38:23,400 --> 01:38:26,340
uh in general

2069
01:38:26,340 --> 01:38:29,940
you know we had decent feedback

2070
01:38:29,940 --> 01:38:31,620
you know to point out you know a number

2071
01:38:31,620 --> 01:38:33,360
of the

2072
01:38:33,360 --> 01:38:36,239
support was coming from co-authors and

2073
01:38:36,239 --> 01:38:38,699
so you know we don't count that quite as

2074
01:38:38,699 --> 01:38:40,500
much of course um so you know we

2075
01:38:40,500 --> 01:38:42,360
definitely had uh decent support there

2076
01:38:42,360 --> 01:38:45,600
wasn't a lot of detailed feedback in

2077
01:38:45,600 --> 01:38:47,340
that

2078
01:38:47,340 --> 01:38:50,340
um and then the one main

2079
01:38:50,340 --> 01:38:52,199
piece of detail and feedback was from

2080
01:38:52,199 --> 01:38:54,540
Benoit and that

2081
01:38:54,540 --> 01:38:57,719
uh unfortunately hasn't gotten more

2082
01:38:57,719 --> 01:39:00,139
response so I think

2083
01:39:00,139 --> 01:39:02,520
uh when the chair is discussed we would

2084
01:39:02,520 --> 01:39:04,920
like to see

2085
01:39:04,920 --> 01:39:07,679
some resolution or more discussion there

2086
01:39:07,679 --> 01:39:11,699
or alternatively more in depth

2087
01:39:11,699 --> 01:39:14,940
uh comments or reviews from other people

2088
01:39:14,940 --> 01:39:17,100
so

2089
01:39:17,100 --> 01:39:17,820
um

2090
01:39:17,820 --> 01:39:21,360
I don't know if then was

2091
01:39:21,360 --> 01:39:23,100
you know in the room we're watching this

2092
01:39:23,100 --> 01:39:28,760
discussion I don't see him but um

2093
01:39:28,800 --> 01:39:31,800
you could also try to help reach out or

2094
01:39:31,800 --> 01:39:33,300
if others in this room if they are

2095
01:39:33,300 --> 01:39:35,580
interested in this work please feel free

2096
01:39:35,580 --> 01:39:36,900
to chime in

2097
01:39:36,900 --> 01:39:39,780
on that call for adoption thread

2098
01:39:39,780 --> 01:39:42,540
uh and add support because at this point

2099
01:39:42,540 --> 01:39:43,560
it

2100
01:39:43,560 --> 01:39:48,360
we're kind of 50 50. I'd say as far as

2101
01:39:48,360 --> 01:39:50,460
um getting consensus here

2102
01:39:50,460 --> 01:39:52,320
yeah I understand

2103
01:39:52,320 --> 01:39:55,380
um so

2104
01:39:55,679 --> 01:39:58,739
um offers and contributors man I'll just

2105
01:39:58,739 --> 01:40:01,920
refer to offers so we discussed you know

2106
01:40:01,920 --> 01:40:04,320
uh questions and comments and responded

2107
01:40:04,320 --> 01:40:05,639
to him

2108
01:40:05,639 --> 01:40:08,159
um during their uh two-week period of

2109
01:40:08,159 --> 01:40:12,420
adoption poll but for some reason we

2110
01:40:12,420 --> 01:40:14,219
heard nothing back

2111
01:40:14,219 --> 01:40:17,280
uh from him uh whether

2112
01:40:17,280 --> 01:40:21,900
um our responses uh what we believe

2113
01:40:21,900 --> 01:40:26,820
um is straightforward uh updates uh that

2114
01:40:26,820 --> 01:40:29,880
been already Incorporated in a based on

2115
01:40:29,880 --> 01:40:33,320
his comments uh Incorporated in a

2116
01:40:33,320 --> 01:40:35,540
working version

2117
01:40:35,540 --> 01:40:39,719
that is not uploaded yet uh because we

2118
01:40:39,719 --> 01:40:42,860
felt that um yes I agree that

2119
01:40:42,860 --> 01:40:45,719
it's beneficial to have a conclusion but

2120
01:40:45,719 --> 01:40:47,699
at the same time

2121
01:40:47,699 --> 01:40:52,260
um it's not clear that uh his comments

2122
01:40:52,260 --> 01:40:54,320
uh are really

2123
01:40:54,320 --> 01:40:59,040
that critical that basically cannot be

2124
01:40:59,040 --> 01:41:01,199
resolved in the course of the

2125
01:41:01,199 --> 01:41:04,080
discussions as the document progresses

2126
01:41:04,080 --> 01:41:07,040
but that's probably our

2127
01:41:07,040 --> 01:41:09,600
offers View

2128
01:41:09,600 --> 01:41:11,940
right that's fair

2129
01:41:11,940 --> 01:41:14,699
um I mean one option

2130
01:41:14,699 --> 01:41:17,460
certainly would be to

2131
01:41:17,460 --> 01:41:19,679
if you have this working copy and you

2132
01:41:19,679 --> 01:41:21,239
have other changes

2133
01:41:21,239 --> 01:41:23,940
upload a new version we do a new call on

2134
01:41:23,940 --> 01:41:27,179
that version and if we don't you know if

2135
01:41:27,179 --> 01:41:28,440
we get consensus and we don't get

2136
01:41:28,440 --> 01:41:31,260
objections then we can move forward

2137
01:41:31,260 --> 01:41:32,460
okay

2138
01:41:32,460 --> 01:41:34,679
um that's a good plan I agree I will

2139
01:41:34,679 --> 01:41:37,020
follow through thank you sounds good

2140
01:41:37,020 --> 01:41:40,699
thank you thank you

2141
01:41:43,980 --> 01:41:47,280
okay now we're moving into the the

2142
01:41:47,280 --> 01:41:50,520
lightning talks uh uh section here so

2143
01:41:50,520 --> 01:41:52,860
we'll have a bunch of presentations and

2144
01:41:52,860 --> 01:41:56,040
they will be rather quick so

2145
01:41:56,040 --> 01:41:58,560
um please really try to to make your

2146
01:41:58,560 --> 01:42:00,780
presentation short and crisp so we will

2147
01:42:00,780 --> 01:42:03,060
start with the enhanced alternate

2148
01:42:03,060 --> 01:42:05,480
marking

2149
01:42:22,820 --> 01:42:25,139
yeah this is just a one slide

2150
01:42:25,139 --> 01:42:27,780
presentation so to present to introduce

2151
01:42:27,780 --> 01:42:28,920
this draft

2152
01:42:28,920 --> 01:42:31,520
and I'm going to

2153
01:42:31,520 --> 01:42:36,239
yeah introduce why what is the rationale

2154
01:42:36,239 --> 01:42:38,340
and the background to for this new draft

2155
01:42:38,340 --> 01:42:40,860
why we want to augment

2156
01:42:40,860 --> 01:42:42,540
um alternate marking

2157
01:42:42,540 --> 01:42:45,600
so maybe you know that

2158
01:42:45,600 --> 01:42:50,820
um NFC 8321bs and AFC 88 89bs are in the

2159
01:42:50,820 --> 01:42:54,060
RFC editor queue so the work is quite

2160
01:42:54,060 --> 01:42:56,159
completed I also want to thank keep the

2161
01:42:56,159 --> 01:42:58,679
occasion to thank Martin for great help

2162
01:42:58,679 --> 01:43:01,440
on this but however there are some

2163
01:43:01,440 --> 01:43:03,420
pending points that we want to explore

2164
01:43:03,420 --> 01:43:06,060
for example in some protocols there are

2165
01:43:06,060 --> 01:43:08,940
no additional bits that can be used and

2166
01:43:08,940 --> 01:43:11,580
also some deployment experience give new

2167
01:43:11,580 --> 01:43:14,280
requirements for example the entropy of

2168
01:43:14,280 --> 01:43:16,380
the pseudo random flow identification

2169
01:43:16,380 --> 01:43:20,420
can can be increased in some cases to

2170
01:43:20,420 --> 01:43:23,400
to to extend the number of flows that

2171
01:43:23,400 --> 01:43:26,340
can be monitored and there is also

2172
01:43:26,340 --> 01:43:28,020
another point that we want to take into

2173
01:43:28,020 --> 01:43:30,480
consideration that is the implementation

2174
01:43:30,480 --> 01:43:32,820
of the world framework included the

2175
01:43:32,820 --> 01:43:36,600
multi-point measurements so that's why

2176
01:43:36,600 --> 01:43:39,060
um the draft aims to consider all these

2177
01:43:39,060 --> 01:43:41,159
aspects and generalize the alternate

2178
01:43:41,159 --> 01:43:43,500
marking data fields for all the

2179
01:43:43,500 --> 01:43:45,600
transport protocols so in order to

2180
01:43:45,600 --> 01:43:48,239
introduce new metadata new flow

2181
01:43:48,239 --> 01:43:50,900
monitoring for

2182
01:43:50,900 --> 01:43:53,520
flow identification extension and new

2183
01:43:53,520 --> 01:43:56,520
Flags so the the extended data fields

2184
01:43:56,520 --> 01:43:58,980
can be used for several application to

2185
01:43:58,980 --> 01:44:00,920
have a shortest

2186
01:44:00,920 --> 01:44:04,440
marketing period uh have more dense

2187
01:44:04,440 --> 01:44:06,840
delay measurement increase the enthalpy

2188
01:44:06,840 --> 01:44:09,800
of the flow more monitoring identifier

2189
01:44:09,800 --> 01:44:12,619
and automatically set up the backward

2190
01:44:12,619 --> 01:44:16,500
Direction so this is the the scope of

2191
01:44:16,500 --> 01:44:18,619
the draft so please read and share your

2192
01:44:18,619 --> 01:44:22,199
feedback on the list so I think

2193
01:44:22,199 --> 01:44:25,940
where's that okay thank you

2194
01:44:28,380 --> 01:44:31,219
and

2195
01:44:35,340 --> 01:44:36,360
okay

2196
01:44:36,360 --> 01:44:38,520
next up we should have distributed flow

2197
01:44:38,520 --> 01:44:41,239
measurements

2198
01:44:48,600 --> 01:44:51,020
yeah

2199
01:44:51,239 --> 01:44:52,860
yep

2200
01:44:52,860 --> 01:44:54,480
yes thank you

2201
01:44:54,480 --> 01:44:56,820
yeah hello hello everyone I'm hot here

2202
01:44:56,820 --> 01:45:00,500
from China mobile and on behalf of other

2203
01:45:00,500 --> 01:45:03,659
courses to share two drafts with the

2204
01:45:03,659 --> 01:45:06,840
topic of inbounder flow environmental in

2205
01:45:06,840 --> 01:45:10,460
IPv6 Network the first draft is about

2206
01:45:10,460 --> 01:45:14,340
distributor flow measurement next slide

2207
01:45:14,340 --> 01:45:17,060
supply place

2208
01:45:18,600 --> 01:45:21,179
uh so as we all know embed the network

2209
01:45:21,179 --> 01:45:23,880
environment to utilize the controllers

2210
01:45:23,880 --> 01:45:25,639
to look like the

2211
01:45:25,639 --> 01:45:28,800
data and calculate the packet loss and

2212
01:45:28,800 --> 01:45:31,980
delay on the other hand in your multiple

2213
01:45:31,980 --> 01:45:35,239
domain scenario

2214
01:45:35,840 --> 01:45:39,360
domain controllers collect Merit data of

2215
01:45:39,360 --> 01:45:42,000
each shade well it is a domain

2216
01:45:42,000 --> 01:45:43,100
controllers

2217
01:45:43,100 --> 01:45:46,500
across calculated the undertone the

2218
01:45:46,500 --> 01:45:49,800
results their interaction is required

2219
01:45:49,800 --> 01:45:53,040
the controller interaction induces the

2220
01:45:53,040 --> 01:45:57,239
complexity and categories in the native

2221
01:45:57,239 --> 01:45:59,760
measurement which is basically to

2222
01:45:59,760 --> 01:46:02,760
guarantee the high as well requirements

2223
01:46:02,760 --> 01:46:06,360
of customers such as bands and finances

2224
01:46:06,360 --> 01:46:09,060
so we would like to propose a

2225
01:46:09,060 --> 01:46:10,400
distributed

2226
01:46:10,400 --> 01:46:14,719
flow flow of performance measurements

2227
01:46:14,719 --> 01:46:18,119
method without the participation of the

2228
01:46:18,119 --> 01:46:20,540
control environmental results

2229
01:46:20,540 --> 01:46:24,000
could be used by the router to select

2230
01:46:24,000 --> 01:46:28,080
the forwarding pass that's the high as a

2231
01:46:28,080 --> 01:46:30,900
requirements more details can be found

2232
01:46:30,900 --> 01:46:32,219
in the draft

2233
01:46:32,219 --> 01:46:35,600
next Slide the place

2234
01:46:36,719 --> 01:46:40,280
the second draft is also about uh

2235
01:46:40,280 --> 01:46:43,040
flowmenting Happy base physics Network

2236
01:46:43,040 --> 01:46:47,239
next next slide please

2237
01:47:00,320 --> 01:47:04,139
automarking options to provide enhance

2238
01:47:04,139 --> 01:47:06,780
the capabilities and all those advanced

2239
01:47:06,780 --> 01:47:10,380
stuff and function and abilities in this

2240
01:47:10,380 --> 01:47:13,040
is helpful to application and

2241
01:47:13,040 --> 01:47:16,580
deployments and pass flow measurement

2242
01:47:16,580 --> 01:47:20,040
that is also called the inbounder

2243
01:47:20,040 --> 01:47:24,119
network in a network Telemetry it's

2244
01:47:24,119 --> 01:47:26,280
researching and deploying in China

2245
01:47:26,280 --> 01:47:29,340
mobile from the test results in our life

2246
01:47:29,340 --> 01:47:32,219
it is better to um

2247
01:47:32,219 --> 01:47:35,760
either is better it is better for

2248
01:47:35,760 --> 01:47:38,219
flexible deployments on condition light

2249
01:47:38,219 --> 01:47:41,840
on node ID and a stable measurement

2250
01:47:41,840 --> 01:47:45,960
period can be you know enabled in this

2251
01:47:45,960 --> 01:47:47,280
Innovative plan

2252
01:47:47,280 --> 01:47:52,679
so to factor flexibility Deploy on pass

2253
01:47:52,679 --> 01:47:55,619
flow performance environment based on

2254
01:47:55,619 --> 01:47:58,860
auto marking method in ipv system with

2255
01:47:58,860 --> 01:48:01,679
the Pacific participation of a

2256
01:48:01,679 --> 01:48:04,199
controller another ID and the steerable

2257
01:48:04,199 --> 01:48:08,580
measurement period is is auditory demand

2258
01:48:08,580 --> 01:48:13,199
demanded multiples can be found in the

2259
01:48:13,199 --> 01:48:17,480
draft next slide please

2260
01:48:17,880 --> 01:48:20,460
uh also in the next step uh we will

2261
01:48:20,460 --> 01:48:23,699
continue to improve the draft and any

2262
01:48:23,699 --> 01:48:26,600
comments and the feedbacks are welcome

2263
01:48:26,600 --> 01:48:28,320
thank you

2264
01:48:28,320 --> 01:48:31,560
great thanks a lot uh next up we have

2265
01:48:31,560 --> 01:48:35,580
the devices measurements

2266
01:48:47,100 --> 01:48:49,380
hello everyone I'm Fabio carella from

2267
01:48:49,380 --> 01:48:51,300
Telecom Italia today we want to

2268
01:48:51,300 --> 01:48:53,400
introduce this new draft

2269
01:48:53,400 --> 01:48:54,900
[Music]

2270
01:48:54,900 --> 01:48:57,000
this is the user device explicit

2271
01:48:57,000 --> 01:49:01,560
monitoring and next slide please

2272
01:49:01,560 --> 01:49:04,440
in this draft we want to propose to to

2273
01:49:04,440 --> 01:49:06,840
put the explicit flow measurement props

2274
01:49:06,840 --> 01:49:09,000
directly on the user devices for example

2275
01:49:09,000 --> 01:49:11,600
smartphone tablets or personal computer

2276
01:49:11,600 --> 01:49:14,119
this new idea

2277
01:49:14,119 --> 01:49:17,159
has some advantages the first one is the

2278
01:49:17,159 --> 01:49:19,380
scalability because on the user device

2279
01:49:19,380 --> 01:49:21,500
there are a few connections to Monitor

2280
01:49:21,500 --> 01:49:24,239
and it does not need so much resources

2281
01:49:24,239 --> 01:49:27,060
to monitor all of them

2282
01:49:27,060 --> 01:49:29,580
um using the probe inside the user

2283
01:49:29,580 --> 01:49:32,040
device give the possibility to obtain

2284
01:49:32,040 --> 01:49:34,679
more precise measurements for example if

2285
01:49:34,679 --> 01:49:39,420
we consider the client the the delay we

2286
01:49:39,420 --> 01:49:41,460
can remove the client application Delay

2287
01:49:41,460 --> 01:49:44,179
from the measurement so we can

2288
01:49:44,179 --> 01:49:48,540
measure only the the delay that is on

2289
01:49:48,540 --> 01:49:51,719
the internet path obviously another

2290
01:49:51,719 --> 01:49:54,119
Advantage is that the monitoring of both

2291
01:49:54,119 --> 01:49:55,940
direction is guaranteed

2292
01:49:55,940 --> 01:50:01,500
and and another big Advantage is that we

2293
01:50:01,500 --> 01:50:03,840
can save on network monitoring equipment

2294
01:50:03,840 --> 01:50:06,199
because

2295
01:50:06,199 --> 01:50:09,239
there could be a sort of user device and

2296
01:50:09,239 --> 01:50:13,020
network props coordination so for

2297
01:50:13,020 --> 01:50:15,000
example is possible to set alarm

2298
01:50:15,000 --> 01:50:18,840
thresholds on a user device that signal

2299
01:50:18,840 --> 01:50:22,020
to network props which session has to be

2300
01:50:22,020 --> 01:50:23,060
monitored

2301
01:50:23,060 --> 01:50:24,860
and

2302
01:50:24,860 --> 01:50:27,360
networking in network monitor equipment

2303
01:50:27,360 --> 01:50:30,000
can concentrate only on those sessions

2304
01:50:30,000 --> 01:50:32,880
and we have also the possibility to

2305
01:50:32,880 --> 01:50:35,239
improve some Metric because for example

2306
01:50:35,239 --> 01:50:39,139
uh the the qubit that is not end to end

2307
01:50:39,139 --> 01:50:41,460
uh can

2308
01:50:41,460 --> 01:50:45,300
um can become end-to-end if the if the

2309
01:50:45,300 --> 01:50:47,820
prop is placed in the user device handle

2310
01:50:47,820 --> 01:50:50,280
bit measures are not affected by losses

2311
01:50:50,280 --> 01:50:53,340
so are more reliable obviously this

2312
01:50:53,340 --> 01:50:54,780
proposals

2313
01:50:54,780 --> 01:50:55,520
um

2314
01:50:55,520 --> 01:50:58,739
does some assumptions some privacy

2315
01:50:58,739 --> 01:51:00,900
related assumptions so the device owner

2316
01:51:00,900 --> 01:51:03,420
decides whether to traffic is smart is

2317
01:51:03,420 --> 01:51:05,699
traffic or not so there should be some

2318
01:51:05,699 --> 01:51:07,159
sort of uh

2319
01:51:07,159 --> 01:51:10,920
decision that the device owner can do in

2320
01:51:10,920 --> 01:51:12,060
his device

2321
01:51:12,060 --> 01:51:17,280
and the device owner can also decides if

2322
01:51:17,280 --> 01:51:20,340
share his performance data with only

2323
01:51:20,340 --> 01:51:24,659
with these internet service provider or

2324
01:51:24,659 --> 01:51:28,280
for example also with national uh

2325
01:51:28,280 --> 01:51:32,119
authorities for for starts or

2326
01:51:32,119 --> 01:51:36,119
other evaluation on the performance

2327
01:51:36,119 --> 01:51:39,060
so if you want to collaborate you can

2328
01:51:39,060 --> 01:51:41,280
contact us okay just a very quick

2329
01:51:41,280 --> 01:51:44,940
question yeah yeah Martin do Google um

2330
01:51:44,940 --> 01:51:47,820
okay assumption's an odd word for like

2331
01:51:47,820 --> 01:51:49,679
what the device owner decides and has

2332
01:51:49,679 --> 01:51:52,320
the power to decide to do and um I mean

2333
01:51:52,320 --> 01:51:53,400
I think you're right to consider the

2334
01:51:53,400 --> 01:51:54,960
privacy considerations here but I'm

2335
01:51:54,960 --> 01:51:56,580
concerned that this become become a

2336
01:51:56,580 --> 01:51:58,260
mandatory requirement on some networks

2337
01:51:58,260 --> 01:52:02,040
and thus you know not really be

2338
01:52:02,040 --> 01:52:05,400
uh an optional uh forfeiture of privacy

2339
01:52:05,400 --> 01:52:07,500
but rather a mandatory one thanks yes

2340
01:52:07,500 --> 01:52:09,960
it's Monday yes I think so

2341
01:52:09,960 --> 01:52:12,719
great thanks a lot next up we have mpls

2342
01:52:12,719 --> 01:52:16,159
stamp great thank you

2343
01:52:19,139 --> 01:52:22,139
foreign

2344
01:52:24,560 --> 01:52:27,000
next slide

2345
01:52:27,000 --> 01:52:29,699
so uh this is a just to bring to your

2346
01:52:29,699 --> 01:52:32,940
information the work uh started and mpls

2347
01:52:32,940 --> 01:52:36,960
working group uh to um extend um LSP

2348
01:52:36,960 --> 01:52:40,639
thing uh with ability uh to

2349
01:52:40,639 --> 01:52:43,619
bootstrap stamp

2350
01:52:43,619 --> 01:52:45,360
um session

2351
01:52:45,360 --> 01:52:48,560
uh with this some state

2352
01:52:48,560 --> 01:52:52,199
Associated at session reflector

2353
01:52:52,199 --> 01:52:55,560
so uh um those familiar with the OSP

2354
01:52:55,560 --> 01:52:56,820
thing will

2355
01:52:56,820 --> 01:53:00,540
um notice that it's a similar with how

2356
01:53:00,540 --> 01:53:01,280
um

2357
01:53:01,280 --> 01:53:04,380
lspping is used to bootstrap point to

2358
01:53:04,380 --> 01:53:07,739
point BFD session uh there are proposals

2359
01:53:07,739 --> 01:53:11,400
of extending lspping to bootstrap point

2360
01:53:11,400 --> 01:53:14,699
to multi-point build this session so uh

2361
01:53:14,699 --> 01:53:17,760
this follows uh this similar Paradigm of

2362
01:53:17,760 --> 01:53:20,340
using an extension to LSP pin to

2363
01:53:20,340 --> 01:53:24,060
bootstrap stamp session whether it's a

2364
01:53:24,060 --> 01:53:27,000
point to point a point or multi-point

2365
01:53:27,000 --> 01:53:30,260
and more extensive discussion will be

2366
01:53:30,260 --> 01:53:34,800
this week at mpls working group session

2367
01:53:34,800 --> 01:53:36,840
any questions

2368
01:53:36,840 --> 01:53:39,119
I encourage you to come to an Infamous

2369
01:53:39,119 --> 01:53:40,500
working group

2370
01:53:40,500 --> 01:53:42,060
thank you

2371
01:53:42,060 --> 01:53:43,980
thanks a lot Greg

2372
01:53:43,980 --> 01:53:46,260
and then next up we have a path

2373
01:53:46,260 --> 01:53:50,280
consistency over srv6

2374
01:54:05,940 --> 01:54:10,699
hello can you hear me yes

2375
01:54:13,100 --> 01:54:16,500
I ever reported this draft about the

2376
01:54:16,500 --> 01:54:21,980
past consistency over 76 next please

2377
01:54:21,980 --> 01:54:25,920
remember with exposes through stamp or

2378
01:54:25,920 --> 01:54:28,080
QR blood is important to ensure that

2379
01:54:28,080 --> 01:54:30,060
test packet under black packs are

2380
01:54:30,060 --> 01:54:33,060
transmitted on the next animal that is

2381
01:54:33,060 --> 01:54:35,520
to ensure that the passes are consistent

2382
01:54:35,520 --> 01:54:38,639
if task consistency cannot be guaranted

2383
01:54:38,639 --> 01:54:40,619
there will be some issues for example

2384
01:54:40,619 --> 01:54:44,219
the delay method is in occurrent for the

2385
01:54:44,219 --> 01:54:46,560
time step carry the inner reply packets

2386
01:54:46,560 --> 01:54:48,900
don't belong to the passage of the test

2387
01:54:48,900 --> 01:54:51,739
packet

2388
01:55:01,940 --> 01:55:04,800
is not enough for the packet loss even

2389
01:55:04,800 --> 01:55:08,580
it may be not a com confirmative effect

2390
01:55:08,580 --> 01:55:12,139
as you interact to figure

2391
01:55:12,139 --> 01:55:15,540
but when the transmission passes of

2392
01:55:15,540 --> 01:55:17,699
latest pocket and the reply packed are

2393
01:55:17,699 --> 01:55:20,239
consistent

2394
01:55:26,000 --> 01:55:29,699
may be discussed because they are from

2395
01:55:29,699 --> 01:55:33,259
worded through IP

2396
01:55:34,400 --> 01:55:37,800
dropped away processes of process or

2397
01:55:37,800 --> 01:55:40,500
method to keep the past consistent and

2398
01:55:40,500 --> 01:55:43,139
when measures as our passes process

2399
01:55:43,139 --> 01:55:45,719
through stamp or to apply we use the

2400
01:55:45,719 --> 01:55:49,080
path segment to associate the

2401
01:55:49,080 --> 01:55:51,060
transmission parts of the test or

2402
01:55:51,060 --> 01:55:53,179
pockets under the pocket

2403
01:55:53,179 --> 01:55:55,080
by this way

2404
01:55:55,080 --> 01:56:00,179
we can solve those about issues less of

2405
01:56:00,179 --> 01:56:02,940
a request you

2406
01:56:02,940 --> 01:56:05,119
foreign

2407
01:56:22,580 --> 01:56:26,340
so there is a draft in Spring that talks

2408
01:56:26,340 --> 01:56:29,400
about using the path segment as well for

2409
01:56:29,400 --> 01:56:32,699
the SR part uh First Step so please have

2410
01:56:32,699 --> 01:56:34,860
a look at the draft and let us know if

2411
01:56:34,860 --> 01:56:38,239
there is anything missing thanks

2412
01:56:38,699 --> 01:56:40,380
um Sasha if you're in the queue by

2413
01:56:40,380 --> 01:56:41,760
mistake you can

2414
01:56:41,760 --> 01:56:44,280
remove yourself from the queue or do you

2415
01:56:44,280 --> 01:56:46,580
have a question

2416
01:56:53,900 --> 01:56:57,540
okay then we'll move on to the last

2417
01:56:57,540 --> 01:57:00,000
presentation here

2418
01:57:00,000 --> 01:57:04,219
thank you oh Mark yeah thank you

2419
01:57:15,260 --> 01:57:18,260
foreign

2420
01:57:18,380 --> 01:57:20,580
can you hear me

2421
01:57:20,580 --> 01:57:24,000
yes okay thank you I'm Juanita from

2422
01:57:24,000 --> 01:57:26,820
turnover Bell and on behalf of other

2423
01:57:26,820 --> 01:57:30,300
authors I will present this uh Yamoto

2424
01:57:30,300 --> 01:57:33,540
for the alternate marketing method so I

2425
01:57:33,540 --> 01:57:36,000
want to First explain uh the alternate

2426
01:57:36,000 --> 01:57:39,239
marketing use cases in China mobile so

2427
01:57:39,239 --> 01:57:41,219
for the diversity of the service type

2428
01:57:41,219 --> 01:57:44,940
and the SLA depreciations in the 5D

2429
01:57:44,940 --> 01:57:48,119
period it brings great challenges to the

2430
01:57:48,119 --> 01:57:49,920
performance monitoring of their

2431
01:57:49,920 --> 01:57:52,139
background networks so in China mobile

2432
01:57:52,139 --> 01:57:54,719
we have the 5G background background

2433
01:57:54,719 --> 01:57:59,639
Network which is deployed for 400 000

2434
01:57:59,639 --> 01:58:05,699
MTN devices MTN is defined in idot g.s

2435
01:58:05,699 --> 01:58:10,380
Ray 10 and uses an alternate marketing

2436
01:58:10,380 --> 01:58:12,420
to do the service flow level performance

2437
01:58:12,420 --> 01:58:16,820
measurement and accurate for locations

2438
01:58:16,820 --> 01:58:21,360
so and we also plan to use the alternate

2439
01:58:21,360 --> 01:58:23,880
marking to provide the accurate

2440
01:58:23,880 --> 01:58:26,520
performance monitoring for the dedicated

2441
01:58:26,520 --> 01:58:29,880
line service in the very near future

2442
01:58:29,880 --> 01:58:34,440
so why we need a young model for the

2443
01:58:34,440 --> 01:58:37,739
alternate marking so uh as you know it's

2444
01:58:37,739 --> 01:58:40,320
a large scale for the background and the

2445
01:58:40,320 --> 01:58:43,860
Metro networks in China mobile and we

2446
01:58:43,860 --> 01:58:47,099
need a consistent young model to manage

2447
01:58:47,099 --> 01:58:50,699
the performance monitoring across a

2448
01:58:50,699 --> 01:58:54,300
different domain or different vendors so

2449
01:58:54,300 --> 01:58:57,179
we propose a model for the alternate

2450
01:58:57,179 --> 01:59:01,619
Market and we have uh three objects here

2451
01:59:01,619 --> 01:59:04,980
and the global object and head node and

2452
01:59:04,980 --> 01:59:08,580
the endone so in global object we have

2453
01:59:08,580 --> 01:59:14,040
some label and also some fir mode

2454
01:59:14,040 --> 01:59:17,639
um for the global uh configuration and

2455
01:59:17,639 --> 01:59:19,139
in head node

2456
01:59:19,139 --> 01:59:21,719
we can configure the flow ID as a key

2457
01:59:21,719 --> 01:59:24,860
parameter and also the alternate status

2458
01:59:24,860 --> 01:59:29,820
period hot by Hub series mic IP uh and

2459
01:59:29,820 --> 01:59:32,880
the interface name as

2460
01:59:32,880 --> 01:59:33,659
um

2461
01:59:33,659 --> 01:59:37,440
uh and there are some other parameters

2462
01:59:37,440 --> 01:59:41,040
and I didn't list here and for the end

2463
01:59:41,040 --> 01:59:44,280
node also can pick the flow ID VPN

2464
01:59:44,280 --> 01:59:48,060
period and hope I hope status and the if

2465
01:59:48,060 --> 01:59:49,440
names

2466
01:59:49,440 --> 01:59:53,340
um so uh this is my our proposal thank

2467
01:59:53,340 --> 01:59:57,300
you uh we are welcomed any discussions

2468
01:59:57,300 --> 02:00:01,340
and comments thank you

2469
02:00:01,679 --> 02:00:04,440
thank you very much that was our last

2470
02:00:04,440 --> 02:00:07,940
presentation right on time

2471
02:00:08,219 --> 02:00:10,320
yeah

2472
02:00:10,320 --> 02:00:12,719
okay so thanks everyone for joining and

2473
02:00:12,719 --> 02:00:16,219
have a great rest of your idea

2474
02:00:40,080 --> 02:00:42,380
foreign

